// modules are defined as an array
// [ module function, map of requireuires ]
//
// map of requireuires is short require name -> numeric require
//
// anything defined in a previous bundle is accessed via the
// orig method which is the requireuire for previous bundles

(function outer (modules, cache, entry) {
    // Save the require from previous bundle to this closure if any
    var previousRequire = typeof require == "function" && require;

    function findProxyquireifyName() {
        var deps = Object.keys(modules)
            .map(function (k) { return modules[k][1]; });

        for (var i = 0; i < deps.length; i++) {
            var pq = deps[i]['proxyquireify'];
            if (pq) return pq;
        }
    }

    var proxyquireifyName = findProxyquireifyName();

    function newRequire(name, jumped){
        // Find the proxyquireify module, if present
        var pqify = (proxyquireifyName != null) && cache[proxyquireifyName];

        // Proxyquireify provides a separate cache that is used when inside
        // a proxyquire call, and is set to null outside a proxyquire call.
        // This allows the regular caching semantics to work correctly both
        // inside and outside proxyquire calls while keeping the cached
        // modules isolated.
        // When switching from one proxyquire call to another, it clears
        // the cache to prevent contamination between different sets
        // of stubs.
        var currentCache = (pqify && pqify.exports._cache) || cache;

        if(!currentCache[name]) {
            if(!modules[name]) {
                // if we cannot find the the module within our internal map or
                // cache jump to the current global require ie. the last bundle
                // that was added to the page.
                var currentRequire = typeof require == "function" && require;
                if (!jumped && currentRequire) return currentRequire(name, true);

                // If there are other bundles on this page the require from the
                // previous one is saved to 'previousRequire'. Repeat this as
                // many times as there are bundles until the module is found or
                // we exhaust the require chain.
                if (previousRequire) return previousRequire(name, true);
                var err = new Error('Cannot find module \'' + name + '\'');
                err.code = 'MODULE_NOT_FOUND';
                throw err;
            }
            var m = currentCache[name] = {exports:{}};

            // The normal browserify require function
            var req = function(x){
                var id = modules[name][1][x];
                return newRequire(id ? id : x);
            };

            // The require function substituted for proxyquireify
            var moduleRequire = function(x){
                var pqify = (proxyquireifyName != null) && cache[proxyquireifyName];
                // Only try to use the proxyquireify version if it has been `require`d
                if (pqify && pqify.exports._proxy) {
                    return pqify.exports._proxy(req, x);
                } else {
                    return req(x);
                }
            };

            modules[name][0].call(m.exports,moduleRequire,m,m.exports,outer,modules,currentCache,entry);
        }
        return currentCache[name].exports;
    }
    for(var i=0;i<entry.length;i++) newRequire(entry[i]);

    // Override the current require with this new one
    return newRequire;
})
({1:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Perform C-like multiplication of two signed 32-bit integers.
*
* @module @stdlib/math/base/ops/imul
*
* @example
* var imul = require( '@stdlib/math/base/ops/imul' );
*
* var v = imul( -10|0, 4|0 );
* // returns -40
*/

// MODULES //

var imul = require( './main.js' );
var polyfill = require( './polyfill.js' );


// MAIN //

if ( typeof imul !== 'function' ) {
	imul = polyfill;
}


// EXPORTS //

module.exports = imul;

},{"./main.js":2,"./polyfill.js":3}],2:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MAIN //

var imul = ( typeof Math.imul === 'function' ) ? Math.imul : null; // eslint-disable-line stdlib/no-builtin-math


// EXPORTS //

module.exports = imul;

},{}],3:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// VARIABLES //

// Define a mask for the least significant 16 bits (low word): 65535 => 0x0000ffff => 00000000000000001111111111111111
var LOW_WORD_MASK = 0x0000ffff>>>0; // asm type annotation


// MAIN //

/**
* Performs C-like multiplication of two signed 32-bit integers.
*
* ## Method
*
* -   To emulate C-like multiplication without the aid of 64-bit integers, we recognize that a 32-bit integer can be split into two 16-bit words
*
*     ```tex
*     a = w_h*2^{16} + w_l
*     ```
*
*     where \\( w_h \\) is the most significant 16 bits and \\( w_l \\) is the least significant 16 bits. For example, consider the maximum signed 32-bit integer \\( 2^{31}-1 \\)
*
*     ```binarystring
*     01111111111111111111111111111111
*     ```
*
*     The 16-bit high word is then
*
*     ```binarystring
*     0111111111111111
*     ```
*
*     and the 16-bit low word
*
*     ```binarystring
*     1111111111111111
*     ```
*
*     If we cast the high word to 32-bit precision and multiply by \\( 2^{16} \\) (equivalent to a 16-bit left shift), then the bit sequence is
*
*     ```binarystring
*     01111111111111110000000000000000
*     ```
*
*     Similarly, upon casting the low word to 32-bit precision, the bit sequence is
*
*     ```binarystring
*     00000000000000001111111111111111
*     ```
*
*     From the rules of binary addition, we recognize that adding the two 32-bit values for the high and low words will return our original value \\( 2^{31}-1 \\).
*
* -   Accordingly, the multiplication of two 32-bit integers can be expressed
*
*     ```tex
*     \begin{align*}
*     a \cdot b &= ( a_h \cdot 2^{16} + a_l) \cdot ( b_h \cdot 2^{16} + b_l) \\
*           &= a_l \cdot b_l + a_h \cdot b_l \cdot 2^{16} + a_l \cdot b_h \cdot 2^{16} + (a_h \cdot b_h) \cdot 2^{32} \\
*           &= a_l \cdot b_l + (a_h \cdot b_l + a_l \cdot b_h) \cdot 2^{16} + (a_h \cdot b_h) \cdot 2^{32}
*     \end{align*}
*     ```
*
* -   We note that multiplying (dividing) an integer by \\( 2^n \\) is equivalent to performing a left (right) shift of \\( n \\) bits.
*
* -   Further, as we want to return an integer of the same precision, for a 32-bit integer, the return value will be modulo \\( 2^{32} \\). Stated another way, we only care about the low word of a 64-bit result.
*
* -   Accordingly, the last term, being evenly divisible by \\( 2^{32} \\), drops from the equation leaving the remaining two terms as the remainder.
*
*     ```tex
*     a \cdot b = a_l \cdot b_l + (a_h \cdot b_l + a_l \cdot b_h) << 16
*     ```
*
* -   Lastly, the second term in the above equation contributes to the middle bits and may cause the product to "overflow". However, we can disregard (`>>>0`) overflow bits due to modulo arithmetic, as discussed earlier with regard to the term involving the partial product of high words.
*
*
* @param {integer32} a - integer
* @param {integer32} b - integer
* @returns {integer32} product
*
* @example
* var v = imul( -10|0, 4|0 );
* // returns -40
*/
function imul( a, b ) {
	var lbits;
	var mbits;
	var ha;
	var hb;
	var la;
	var lb;

	a |= 0; // asm type annotation
	b |= 0; // asm type annotation

	// Isolate the most significant 16-bits:
	ha = ( a>>>16 )>>>0; // asm type annotation
	hb = ( b>>>16 )>>>0; // asm type annotation

	// Isolate the least significant 16-bits:
	la = ( a&LOW_WORD_MASK )>>>0; // asm type annotation
	lb = ( b&LOW_WORD_MASK )>>>0; // asm type annotation

	// Shift by zero (`>>>0`) sets the sign on the high part of the low word (i.e., "mid-bits"):
	lbits = ( la*lb )>>>0; // asm type annotation; no integer overflow possible
	mbits = ( ((ha*lb) + (la*hb))<<16 )>>>0; // asm type annotation; possible integer overflow

	// The final `|0` converts from an "unsigned integer" (possible integer overflow during sum) to a signed integer:
	return ( lbits + mbits )|0; // asm type annotation
}


// EXPORTS //

module.exports = imul;

},{}],4:[function(require,module,exports){
module.exports={"a":[-2147450035,-1582533151,1097816497,-177596333,140734211,-1207061105,-1945428561,768218107,770072197,1866991769,-500354769,83392681,1421485335,-1998997565,-1917867675,127561357,735081005,-2114420191,-500725969,-1860398425,-354395043,802182689,382151769,1848710665,1486775471,115658217,-1752497451,661076907,-360780017,864107021,1762314545,1126132003,-1020256625,-1943625115,1013963971,-737728383,569678309,1101274649,2108989509,-578366007,-1086459715,2072537695,956319137,1088155023,650767321,-1835300159,565366807,1652304533,-976203261,-273110935,1144586353,-95641343,-1126250233,-966767761,-604452313,-1432340669,-57907401,1707920743,1757535411,-1887361843,1737971795,19425683,69973449,-777247601,2090111953,-25869943,-1004401695,-1757788833,1923132807,-1830733783,3036947,-497605687,-957426379,1777332377,127764081,-152704021,1893994477,-1932374577,1123195201,1160519689,1407964581,-1609043461,-2079332391,809409353,1581609385,556384741,1014576561,968137159,2145155253,1668904947,-1145919273,-831841403,-639884639,57010115,391329855,1485979483,-377610217,1466777025,-990774773,-363377361,160219353,-137793855,-913915907,-1381571993,-1487261375,307755067,1298822705,-2005518855,147960939,-6527841,1955759569,1066408813,234435841,1678204701,536223621,1469048947,-1461287365,-1233722851,922172287,-1587302825,-1756683129,-968136535,-2134600461,-368107633,-2032050859,901168287,1880754577,-1117074589,-1370541637,-783661725,1662112235,653087081,-1501799485,778876055,-490422115,-482216007,-1112259,-1513834225,374463693,1484236153,387013531,1955966013,241145827,-1511177535,2075779583,-391844069,-1538372369,278737709,-1064608979,-49329637,-154487705,1980388547,-1606185459,-1289533011,-776316741,555206797,-1603259071,649629871,522414161,1301688603,-1083011403,-101224637,-475392023,-1274530109,-2025613173,1725174539,-315691209,-1537507961,1921941083,-385202581,-1584033197,1656347139,-1751600923,-1450846173,-1842267961,-578364469,-1060610549,-1567193331,1216133597,-191953755,-646288879,-204869215,1326906895,1854027429,651314845,-1222998879,771343343,1756306121,-1073202403,1549881191,-123427361,25580287,431187821,1363916181,1098839601,-162156581,1938608435,570108373,-260574291,1394564655,811666839,868470941,2092273987,1951697143,1508691735,-904880019,160742333,61996417,-1703238311,-369244855,329495457,1617337445,-257531999,986758771,1585975675,926176773,1291583967,887063105,1038161873,-2065482399,1657991021,107320087,-157527659,-1867478097,916641885,-47488771,720176099,781895013,-1290402537,1789428953,1571454095,1675117471,188756539,-1549645681,-213256139,2101795929,-1221780835,-231827619,-791423263,62961889,1638547711,-258876739,-139449939,1317051363,-579141723,-1239016645,2143689703,-1487757433,560442849,499721013,-2144927961,-2143708373,1174037967,976396345,-776626347,-353373951,783806757,775507813,-1265890587,1444912379,897307189,1411789901,-1741399631,-1796423289,1133892209,556506797,-1228995541,-1230307129,-1799330175,-477500559,1942010985,1922191401,-473075249,-991215137,825359479,-927562455,1189129647,1219191759,-333032549,-935633349,-1314399697,-2098880825,-1323606541,2075481945,-1099278641,1373213113,-1561414153,-437469519,433835107,-1387788251,1410272769,-1470033391,2095673457,-1042952683,-1144182755,-1710954435,-1205122103,578606995,841844961,1266026703,842856457,1086370799,728085611,573077083,-1905072849,421837239,-1172492909,-778343079,858282383,-1643095853,1127732661,112198617,231547465,377909503,-731577293,871832883,-1533108935,-1453040227,-63027893,1547157579,1345465989,244107825,1026482617,-790242467,-1566236209,122613875,-812870383,378468745,77668413,-297006473,-1035762471,-557373903,-459485895,-228209041,-103524933,-481761249,-947929141,-1811345729,-559453819,-1056895755,737807311,756931811,59856261,981865443,948190565,1910198827,-168803649,1890486203,-766393579,-169933935,73638577,693016579,-421624463,453719071,2089513059,-1501546813,730567065,-670798479,179143809,97958381,1414069477,-2083271445,-969761815,614089637,198155189,1794642285,-1002388155,2019006889,-1087772859,1477362957,833325297,-190045443,1361939847,-2052634879,-1457072333,888843269,892607163,-272135789,353995999,1081086615,2111118297,840435557,-946989855,1090332191,-1412275749,-2129213187,-18506689,-1804243243,-1447055849,1732165391,1215441417,1059478867,-273049643,-2120246297,364158251,79364219,-1860366089,189076109,-473599985,-1220518501,-490616551,544865435,683128849,899021893,166048971,-943651891,1356918317,-550143709,799300431,-815318203,-2107336349,-1701677707,90022809,1184896987,-1199648157,-1910063051,-1844109189,-1459112407,961057903,-871783401,-1930147161,-95329733,-183988257,85849893,-229825521,-1501900529,-919370453,1433153853,840256231,334045357,778095453,-725098047,-1900629239,2091146511,182077187,-2140365101,1529835649,-2021402823,-525917009,-44445599,327160375,1026319917,770225927,155764585,-1994635633,-1621320549,2033046999,-1338845259,-638581135,490165373,462187731,-1606606317,227041171,1950037537,-614502543,1452135481,2036898271,-1035026165,-1067180843,-324974945,1344530965,1709028633,-1096993829,1119342751,836901949,-206797395,-1015243307,710831925,-1646814821,-1247420399,-1659250367,201755385,-2121372953,-1391679965,426744981,-292451701,-1793120759,804939097,-535539209,1443996173,-1616465171,2033006459,-2020201039,-1802369791,-24719143,1157224729,1864146683,-1073074937,-602765041,1155836071,-191853,1070527535,738319791,780248583,1102819511,-1991285915,-1157184945,-1195429771,268873747,655506153,500837973,-552050417,-1181969867,-1143786307,657179807,-1434830307,1048419673,-1461329559,-1942877409,695756831,-1610849333,1929115257,-67944395,519887051,1778223773,-2070412523,401775539,952931417,-14680195,-1916867995,-250686059,82355413,1167991235,-1866780617,-245713637,2049473381,-138549801,-734198447,-232229455,1044853673,-1265549443,-1411415001,-547523433,1888606223,1996520913,-1052449619,-1845396229,-1615557217,113120161,-1459931703,76051913,-1695718209,1467057933,-564521311,-326887919,-742051995,917175423,329749807,1597230601,1109157119,1445676685,858096249,-476482697,1869348443,453559503,-592346317,169671285,-192962609,-422228881,-1114799667,-1790633229,-336817133,-118627227,-902946161,-1696644613,-1218112213,1297160219,117850001,725077885,1561833729,-1100584013,908662379,-1015059999,-503277813,-1799567593,-172817591,-1147327581,1268529805,-37181169,-2133616141,-1004510569,707333143,-321301779,-1345077483,1990612447,-1571789919,1270690373,1915746855,-1412377521,455272103,-1873449175,-655018299,-891343159,41481771,1399457181,1435972735,972565771,-732574155,1297442425,565918949,-1952746755,-1969584219,-1489000263,1147035509,-1882349391,82906679,1843184309,-1200376647,-1268892599,-1765263071,857666267,886744417,-23060049,-1023153471,908691691,-522413215,-1285721957,-1148441573,-274464563,-131002973,1551288223,2049722993,-238288211,-2000410657,102098845,-2011596073,1087373069,393368325,1386806421,-731953179,-1150715825,156887719,-297991671,-414116081,2093043819,2005361685,1505517389,1578461581,-809149559,-1510151697,2137169673,599248001,-137118011,1855059613,819362157,1354661747,178389947,312701629,-1463655641,1912335357,1380117709,-1479986119,-1971068867,-671675435,-1674953801,-1732854919,80630593,-2051254741,264070563,1532771251,72619757,749578015,1018658415,852380633,-2049560341,-1322919695,734400785,-661975849,-1862769071,-1543136719,1808685845,-1195476405,-514903891,369434985,-1428880617,-2034355553,820881875,1126758409,917814429,-1815378233,385728157,1827521665,1845537873,-298732145,25639283,1422733593,1800605465,436530343,961370261,83050211,-39440661,-1454192539,2044900793,319374975,-973879063,134979205,852800815,717471239,-1729014067,209320747,475614655,721406063,-20936509,307444957,381771229,-252057821,-1498012051,9769883,993700021,-2011519807,-1925791563,94761855,-770335477,-1996904211,-1094605349,-1687146829,-502646403,222605689,417335561,477216237,1869390973,1168361213,56472335,-57204017,644793749,846090293,-397122371,-56480909,-86831977,903876133,146882065,-959293983,453283007,-944447295,873465171,130951717,1882286703,-1136436671,-371539467,418657219,1215485773,1804970159,779498403,1379446133,117737931,-1158482605,-1530364921,1715930131,-1067633881,650749977,-2126800767,1872330605,-964851291,1540887919,-949494575,1943176091,29291473,-1619418487,-358735319,869607955,-272768185,-1684748985,1143212059,-1718564131,-252263955,-667538895,-871602725,1106474371,-693596011,-726887349,-1908656895,314318233,-63195977,-1277830209,-1655819051,2037308575,1565985869,-35043737,-569534869,1309588655,-1450823553,-1462093621,-1899565561,-1506453813,-137003349,-512783447,1647998941,-325844007,-376892187,649805353,-823227159,-1889173727,1350408465,1707923371,1801704207,1723217961,1159840697,-1413919375,311135689,-2012605457,1302525357,95411193,1553153701,-956926613,1586964951,373069329,-476003125,1339580459,110252877,1889233637,-343433871,343006851,1070069821,1635455181,-695420921,-1333378661,1044218277,940251867,1628487655,-1834513465,902430983,1628049779,-603960809,-1761567529,-1455868749,-357356913,-1733326167,750300045,268914743,1344525925,1624321353,1156892819,580702607,1703057493,1625271247,-58107899,-1661849143,-526199907,-504144991,805640937,-1624616211,-1817536707,-1532006009,-96032121,895878509,-1125198389,-468294829,2043892511,553048577,778243035,1755312627,-590986885,1542808439,1263914007,-305486863,-1831756499,-5881689,-69265649,-211592457,-1471755,1034051091,1859048525,-858470563,-1519578183,-1674957945,-1802503127,2029269999,-394374849,-1123518889,1989257907,1432260065,-1296736803,-1591364653,-1304349621,-690977959,325039675,-256546631,367969571,-288289951,-566065213,-505445069,430066461,-302912163,-1508446539,730989121,2127729419,850688901,-417729007,1500138653,1372358803,1260066853,-540094731,-2106218083,-86850221,597249225,629192109,622331747,1284344551,-526717375,-611295079,-474591893,-711647081,831457035,-1525153819,-895391729,716642485,1521986631,-795862235,-1528396517,439157807,-2123482525,1807449077,-506999711,71002131,-668058403,-1013039093,-897649023,1433007873,-1613229629,578186031,-1938329693,-180191649,-529068861,-1478014635,1098891663,712849453,-2097960077,1266503213,261625439,-907722171,-362666097,-770468481,62664855,941264567,1469067379,-1151500741,-150293611,-543917593,-1932550307,-1830298909,-1277970323,284252245,1423884399,-332634563,1458350059,-888871633,-1369253687,-611922545,1864488927,384052677,-562466931,-158661611,549027109,1908907063,-404644727,-1930666675,-236866943,412004149,1066487927,1564104839,-1584743889,-1698318717,709992917,1431846899,349116823,681154169,2070313485,-2066239981,1810212229,-1311344281,2008855653,99095449,-950065117,944011285,388516571,1447755529,1437489005,686711897,989767513,614294941,-646267777,149792099,705007221,-758367187,1585650295,-247517593,1795155947,-959205509,1940265525,-1643951055,-360745471,1444721643,1986574531,-717567427,112449575,154431277,1366260575,1846363913,699620253,-1102825189,1895922993,415422777,-1606173393,-1086739749,1660973551,-1304905731,-1447584141,1443096335,439826739,529323011,1454613615,737223469,-465766095,1594651909,718753615,-1650957105,-2147310883,756194513,552990657,-195218405,319313393,-2008887737,-638264013,1525067533,-554749849,693316743,328264591,-1889958241,1049983549,-947069391,-246429361,-1389765299,-1753201909,1706153183,2114925549,404410511,-2005734413,820044927,-54924745,297812607,1699621951,-281308325,810006031,-1274925351,-78510879,-977350483,1920365381,-1098222331,1946746107,-98991731,-1601646527,1981853115,1533972447,-1213715541,-2117384769,1213219113,-1931046109,1975920407,607196853,315251439,-1558671911,-1593248459,1394261289,7961771,669532695,21728197,113620601,-1638971211,1731114051,725439213,-955261163,-486587957,-466031911,1422049691,-1103800861,-1617294429,980569135,635978479,-1283264601,1497635073,-2050604611,-1694096409,-1340120525,-597140327,1201123801,941475219,714528249,347760531,-639209005,-1472511129,-892963463,-1421163793,-1186713405,735949113,-409030917,1660049287,340858397,-679258205,-269550371,857443385,1435733937,1254055079,1499234707,-935359737,-1010770107,-1417506967,144019061,-1833161977,2142053329,1074475807,-1622549409,-1440533845,-321663025,1173395583,-1230216955,-283775757,-2005417947,1843921695,-1692032027,-1003790603,-77100177,1257481561,-1041424435,-1228722383,-934307917,-512700543,-1253600825,1840512201,1134144431,500634657,325784865,-617040183,1751692941,-1297507371,-1657399147,1250438867,851101739,-2069095329,1065018627,-1655583791,1696356101,664125547,-661895065,-505032383,-1223854525,-724597097,-2071097177,1779697643,1226084097,-457624721,987771319,1424000735,1622624589,-1590815965,-672484993,1898674069,-591883125,-635395359,-1801072217,308770605,1187100695,1478333847,-28795649,1362865091,613039147,-277561065,-634304559,-647865793,-938259049,1800100637,541820735,1050463477,-1470854083,1187204895,-1065344047,481284369,1523008793,-796254677,465765377,-1606652111,-542618587,-1574992935,-1022792011,-1606184677,-1276389937,1075995983,-1842755141,-176464141,1989615979,-1139558419,-1299150575,790042283,-1798189055,1521434105,-1492232129,-1631328825,1327676733,1907792813,-1951975301,-1888658723,1416146105,-1541123001,1293505919,-1170427983,-432870149,426035405,666606349,-1916728791,2088915569,1341340639,-371172921,-2010738747,-1683418025,2037820309,1576764619,734781165,1436103517,-1124348449,931744869,385292971,-1191682143,-1169251867,-2140725007,-224137199,-387553143,1859744209,-2051011457,57977457,-530422327,1544086067,1262171333,470162277,-722397809,532597887,660879725,620149403,-1034572705,-2035813211,2091827633,-1255207241,611282253,259092535,-528566759,-1629120909,-218584701,-1555999725,368508703,182966985,-70431997,1660433177,-1797036961,-590158507,-1714511691,-862381579,1467452609,1773830927,1408436047,2019918307,1345527585,1279351797,1459412027,-220244633,610294209,832906203,1356176287,-136540037,-1315833251,-422819139,1849636009,-140837097,-522076673,75572143,-1169278011,1714840079,2086698625,-1559098817,-178323013,812325333,-949122283,-389646853,1030498591,-2013244153,-842103727,-1320072347,1345138387,-966931695,935276243,-392446327,1224379307,954740807,330966477,570966821,1282459363,-2146301033,548874287,-659572291,-120875411,-33469003,127215705,-779324865,1537274257,-1554769693,-433179943,-485705059,1487932893,-1906386699,-185203241,1140450275,-891227585,1983933989,2147483413,2143584421,1037735287,-645178713,1273821571,-1292783181,432650891,183929907,-1066471119,-1281545559,324802909,59094501,1063867005,463941725,2102967077,1281834425,235267883,-1517534581,-1687877483,102153701,-1089631281,307635461,-711395337,767551149,-1849556321,1480220537,1616032123,-721242383,-1522993801,1048292445,695316739,-417540989,365189885,238167681,-25269829,491779715,1824629961,489308979,-1046324345,-1977131167,518463521,-672208467,-2043688037,-1411354129,475552271,-327081825,293937157,989443211,-541281479,-577055249,-531386479,-1775514715,356977319,-351475673,-1671573249,-750492277,795276551,274807341,1597172749,136838555,2038125207,-1888749283,-105895815,-1674469377,2113891955,212665329,853429507,-1601004199,-107442071,-1892590205,-235762459,1795197561,-259799011,1539793733,2135357793,211751899,-1613686621,1487456075,-1330332237,705858917,671185603,2032349189,-182036047,-1463094989,-1549688361,-930578899,2031362867,420719275,1512722613,-1877390177,1828037791,1930132967,-143161601,-935309755,-170722633,-297106827,1572555145,-1294371649,-494927021,1113240143,1349584349,741907641,951701417,787546275,-798922571,-1423856141,807633993,1807904923,-1435530577,-2131083629,-1390254325,-1382327303,-1296854663,722729621,749266327,75085493,-758469973,-141874007,-769553867,-1745286823,1591017471,-235703735,-1512795465,653033837,1898295901,1642181887,691177177,-1271682819,-1415850377,-2078443867,-1437036955,-1678974911,-596173985,262564619,1992174207,-1093093363,-2045001891,-2018461837,1658594459,1659367965,1774781425,203586757,-1406274807,-55628755,1350418419,1875220249,356755183,210051869,-121319773,1088073451,-720213283,-1406779277,55678543,-513564279,1409457399,2005912195,-2126962923,-853025287,-195137625,1676982853,1475460755,-1072212659,1004639423,1458383259,-330879233,895410311,-404267587,112958011,109780541,-1754350221,-413657425,1211740623,-1010223775,-825239631,-1353052279,1102202189,518285113,624255571,-741683833,-1485060431,-1355684771,-192417915,142508589,-1449861117,1828666349,-390594609,-2013534619,-1428998495,279436195,2084910635,-1545075689,-714811887,-819829879,-625663589,-1447970999,-763858777,-517189661,607204241,439421555,-1985637183,-708226689,-1811556737,189102019,-38130615,-911085887,-1062066087,-260616733,681241961,-749133665,-2140335329,2030213653,-1714251247,-780066565,1956424239,-647384379,-1437068539,2085160095,-1647368763,-1967589005,1979790377,1225273233,-1200914087,-1711712091,-1054144613,-268389329,-1103760191,-933753739,211434515,1641975079,1510322415,732154977,247434741,1107385007,1726561359,1517756061,1115391773,-1142675887,2140139571,-1025283841,-536698547,-861128417,1054509873,2112414079,1143807161,-306619405,608446577,-155473763,-1707386377,-1366313413,1560622339,14420727,1851023837,1709551629,-896934645,554657037,2041826491,189188789,1420212775,-1912077015,-1333063785,2041371915,1139064545,1588612069,-2008589503,79187531,-534994011,2017204371,-1317921827,-1165777619,416386307,1702973435,212508441,-1783387109,1189637475,1164322367,895064317,-1924421451,1647397769,-1839807223,2124553451,-988197747,-974319,804523355,1067019585,1909746257,814786949,1768552183,-1412068481,1354340089,-932748765,-77836643,1764599381,872665009,-432469135,-1424056885,1728696879,-1245264945,207726659,-546418597,-1017251595,1317273861,-1134585131,682522255,-706068877,95051195,-202365391,459003923,717707449,-2053999891,1370974747,-526925869,179513557,2017345723,1057781237,1259654005,1111103521,-200883253,-400506475,-1098542015,868784413,-1229136697,692251273,-399220523,-960383221,-673670883,-852709985,809175795,1951167373,1194781933,1727882093,-2054471365,2036845817,-1916620543,-386727589,-1445038889,1271473759,-2097753819,438114125,1810190571,-1675350287,193339467,-1833786077,242739217,-500875569,-79758331,-468439777,-392248525,253870227,1894415859,854825403,384983403,-2099624225,-933028459,-483686407,1055678705,282137033,233254667,-993917541,-1644271609,-1453329255,-625754195,1324181253,-1006164725,-1324262985,-367437775,636317959,127408465,-1834574839,-129081835,-519883763,-1722895133,-28970571,-1577048963,-1218716255,-265039087,-630817719,2120879265,1684267561,-644503415,-261346825,1295487599,2070896719,-853760731,329156949,223000783,-1532254169,28110053,-707957,986302195,-1792729863,-1215206419,-1404767551,-492980927,-538496351,-1012049187,-1440168057,1531168597,-1093382257,1689491239,1250506851,1993708827,-1070538787,-927364931,213948221,940158881,65671953,-58046875,-636218775,1539644247,-377053409,-2059852801,1785364139,1973601901,294772157,2138386329,-427251077,376498041,1315784637,-394169135,-1961050985,195142873,-1588712493,320830559,2015284755,778830413,-1257527209,274285723,1420273611,-889606363,-832958915,2052927647,2082724039,359510985,-717824151,92656601,-1793601103,1321732077,780207183,407009711,-1270652953,-1286761691,-1443381735,-941510021,-1299378239,1258660729,1596982965,1242106161,-1757734595,-1460256421,-1086516219,1122874967,73314145,-464744751,1580511341,-718571591,415334403,1203492083,2090485147,1951434321,1386409675,1189871387,800714057,1468657509,549748757,1152743117,-443862203,366177469,-343377207,1295358699,-95525581,819361701,1346997755,218695223,-881357091,373602181,-110294149,1712142377,-303905949,-1031138665,-154477753,-2147315483,678882313,-1753031955,267602767,768981763,719936707,1053400963,654832885,2070124579,-946215829,1214485291,-2125228933,-1774626415,-1893233757,1832960959,-1225528337,1208415677,-1058016375,-916583853,1022899819,-876786337,-115146633,1760822375,1817034577,1682708911,-1070930201,1084074559,789885577,-136979503,-112003725,-1250897691,27445105,1708412889,1439098645,1970127613,2031955857,1797167617,-1508806171,-1018378609,-444581261,1165871545,1162295199,1184190093,-195513733,-349297009,585494247,631772387,1039391153,1415157385,-978670865,1203541577,-1372636489,-1632100937,1235692231,2112493539,-1815675913,-322412309,1465081277,573559649,1910446619,-299130799,1915396093,1282300133,-527512349,-1087521215,1411776371,-1968798341,-1165650599,-1743755847,1552327339,-1960690865,1952712419,1392566291,1584901443,51428725,1074188593,2140179481,-354516471,-1238657707,-413573919,-1679741329,-592459429,-1731402099,-1271627431,-484944261,1389762997,1714579419,2000753299,1361785179,-357172661,1363397197,966210101,-178137495,-364640935,398167605,443926795,719487499,2093496695,1026914029,-2129435571,538852717,-1588374815,1701217411,763784131,-737318437,-1130293857,-208479625,776288141,-1035819773,-1520448617,875526993,424255719,820194805,-1830892493,1630565271,-1275759705,-1216596675,999003621,1226739513,1968017403,925394739,1032840411,-1308981059,-1222145133,-2059616811,1456680775,1120243237,-1208499025,-342746237,-984830393,759569537,1442444203,-1930621197,527481803,574201817,-181537687,-1677093057,967375135,-2072247527,-374365631,163959105,-1708291401,602817395,-275855169,-2028081545,-1106048019,-730573289,566258935,-533569347,191728455,1154706297,-1808434295,1128377185,-1940188397,-1354658719,-127431127,1453761829,-693841951,-565433635,1519551789,1231421211,-951062897,1354192001,873303513,1708933005,1590753669,-374456655,-1365881263,233832801,132846009,-640086005,967619047,2027181457,-1136761891,-1542544713,-1126371195,1295191199,1384269213,-425135095,1580069163,439677351,-1981441105,1095779553,-52775789,2055577747,-621685495,987345449,-1438629061,1627270605,-814636345,762716469,-1501644495,-911174309,1746792653,-2052269201,393910519,1909526391,1414466381,292526789,-1239775295,-2017006259,352690141,608367679,-1481512449,-1854293413,-826673415,319143797,-564320415,-1245396141,-1997284513,1103593525,-1867334499,-964873823,1162192595,-540275335,-846662217,-625202485,2006836635,525198275,849652367,-658886769,-1484209039,68758691,281151163,843606753,811693789,1321419591,-176777725,1014176985,-1452569379,-739420145,-2093961861,-254957179,1312085571,1860138013,272685077,288020053,324924045,2095027253,981198571,-1669992551,46495245,-238431181,-108340153,193214797,365852527,-1509710107,969038215,109334269,-664909137,377067041,-2005934245,1756435797,1106262129,34219989,-390228661,-158013877,-1449409435,830151135,-1998578649,827886243,-1409912847,-1070624919,1919981839,1045521863,1374785299,-907487815,-718812099,668083741,1438962083,-325069921,-251730667,-294502067,-1893883769,-501856137,619704469,77356145,-1250327455,1021466969,811107477,57208395,-571145479,9870149,-1616096611,-362540209,1345331135,-2022383353,174184457,-1649492097,1000242103,567070017,213383945,46306737,888282157,51932367,948965099,2042889883,881748957,1917589611,-505948487,559054723,-1355676199,-48348311,-841210799,802466667,860002721,1500821149,-41832807,1290682579,-1377663129,-215493537,-1142413905,-2046663543,118924057,1596867901,-691774487,-177304539,749948675,-1341593553,415481841,-613484745,1378397291,-330280387,-1924686849,1481820877,-1551824555,1821114189,1529271091,1374972753,-2051915731,2039713515,-963860491,1013394343,-1721531591,1413243353,1211931663,-2094381789,1277247513,452449191,-2073490925,202680653,544704441,-2022697309,-807506741,330886665,-770433463,651212381,1349855967,1012024073,1018144283,801298697,-1590199893,1091902523,-789509589,-2133657545,-1700387597,298065109,1648455771,-1237836785,498760253,-1112552105,1624402953,-1766623275,-528445891,402307567,1304791425,-473489577,635108755,1279153307,-1876609403,2065604527,394681499,1982485369,-724636457,1562346597,-1070746125,-117127403,-1465207957,1592364109,922404661,-1976760301,-1838326205,1246219213,-1349146335,-1970073707,-1125890491,784448739,-1319602595,650325663,-668311577,-973167217,-785926955,-2049870023,2062189519,-1166783135,696548071,-1197380535,1842121551,-1882281177,1229379377,-908428583,649569301,-495585829,-1369411325,1033622883,-1042876037,144006567,-2043148635,-935559303,-69908575,1867652143,2008616461,373962799,1655645283,-662792833,1586050017,-2119324527,-1323522535,-807596507,-1177810497,43268579,1365568179,-1200801071,187747821,-1323299931,-1361258373,621333739,1690693271,-21777795,-947146963,-1550181965,-636646739,-1358179407,829907773,-1793796489,-1962120425,-599066031,-1099412269,-872672683,303559441,-497586773,-639538781,1574878227,-905038121,1798489313,-769897969,1061325451,697716587,1261998701,1863703547,69072899,1267077725,1327514035,-826672473,334975991,-760608085,-1717384039,-1893294181,817414791,-1309947557,-286207843,68185591,-761005949,185650301,2078387075,482601035,-2117589509,2067121227,116054635,615132581,547045821,-1325829295,-922606181,-1410119115,-242403901,1841631511,-1528448869,-440722257,1599642363,-1306031887,1099948437,1294180895,1583959061,1392683627,-737999699,304637591,443011101,-1785679677,1313152745,-1678705039,-355402575,1048461541,-757654083,685887341,16356703,29234117,1711566515,-1392483995,-201685347,-996398451,-391253039,-194865747,1951469105,1971024363,-76236069,-1399324459,794753143,67823673,1746172813,414981801,-427722437,1044285109,2063497291,-661895601,-514040935,1988234595,1413324457,-1719920703,-1577333089,-1699054643,1226186517,1263748219,1203081515,-514963935,-639724523,-1546887567,-1102274375,-1731447991,-2042934275,-1627778077,875556253,916028539,-1766060405,341775611,1851455611,376442659,384979363,2127442789,328265785,-1869890683,-976985371,-533131823,-1044740265,-1123302371,1333308639,2073956487,-967847483,-1571470791,-1955659919,608475961,338383125,668518231,151500925,-639525255,1802209709,1629255487,-1814462923,-1410525849,1511552349,-71180755,1960959353,-1735134673,419510761,-1618903009,-285031161,-1630156505,-443977497,-1571568789,692254989,-336765711,745622327,-1040080391,-114211345,300338615,1204565467,-1343986435,-1146980287,-1484434525,573982783,432125169,-61945159,-1730168553,-2014256279,-673036233,1223917977,1791102085,-372987439,1852395579,-1005384341,-1093250979,-399086709,1288628677,-1537855691,372610267,398476429,1339364469,775076241,70613397,1388423847,682321839,220506705,-500550175,1094171333,-1312325565,-1598682653,256075905,310540359,866585115,461967463,-1013683299,1160082617,-1642937229,-501241065,-1927682309,-1618235109,-1944537743,-1439672943,1262615007,-662943393,-944411903,1468298515,-1188896107,-1588985049,34949161,-1019936739,-862268407,-925432881,-1673825781,45908045,-1517566993,2062341327,1384653921,1745684967,805688667,-822418101,-1176237803,705732873,-1447235905,-1294035801,854703021,-1671890871,-1793797937,-1986456961,-1601333653,-1349608155,-1141947859,1491204285,1536291117,-898534497,-564251763,-91561977,-1283822575,709700643,814565075,-1960484135,1132256235,-1169504457,-2091037843,1644373113,-1135593087,921674939,-1356296073,-1876636041,1617899661,601697725,-1914279683,301400785,1876587481,1860986937,1655648863,-602623773,-764839947,172155325,-1393375269,1998541711,-1448635985,944623403,2086449209,-1456066235,618463179,689831585,1882756201,-1835518373,1192811403,-1326044559,-245580935,-15171399,-1582599035,-9495891,-683616547,-505760367,-574179731,552804313,967865281,1870669001,1173341339,-2141895863,1572122479,23745477,-341692791,-459432647,666730095,163070231,532272457,-513654991,-115139185,1886000911,1158715069,1142487299,-1014703569,1192273903,-1769872471,696891759,284016387,1754786287,-847248677,-1891901117,-1539162325,-113150901,943351747,-2106404007,1083292405,529125181,-1870315195,478176033,820813169,-27983333,2130558221,1149723881,351445873,1170791873,-2041097985,-830023105,-144521211,1983528739,-368586043,-1482753141,-1231767387,-572082617,1439260959,403171717,-1351308701,341746577,1363481173,-1917372561,-140992233,1165519869,-453356039,-282934305,-748036065,-872841305,1764496781,-851733191,46283377,495670637,-1500120689,-1070370631,1898832961,2078614719,13646449,1722635373,-41781231,-2137446883,-963281953,2146947921,1733504965,-2040142129,-1944820489,-1896817671,1727660477,-1484204183,150373483,1886393521,-832623249,-895468479,-573294765,-1753441301,1977659133,-234806323,685106137,-228437043,359412747,1926057077,72831873,19644333,-550143295,806258529,165317945,-345103991,-1956896225,1304717489,-1716131929,1971049413,344779281,794529773,608611377,-1680647457,1358116451,-1887942041,576518597,101878127,-1426236205,-539396009,1047267983,657053081,730253105,-1652556905,1029621575,426617111,1853404503,-1228267849,-1884889567,339841587,-588914699,2010300189,-1392391763,1348457877,-1010838087,1734920467,275363515,-1940112715,-82671345,2112141453,856749273,-1640271859,1345959585,-49958791,-2138744395,-1295729667,-1844299077,-355592729,-2147456737,-1695173665,2029274353,-321197171,413069173,1786477119,-795379709,-2008516623,1304081691,482912967,-1169915679,-412511409,-1002004935,-130149159,-1278529055,-516421891,626212749,2087835755,372775917,-1112411315,-304306811,821508289,-1230003375,-989103991,1947651949,-2054374413,-628649213,-87746039,-1573862019,804644025,-1199847019,-957369391,-1559837601,289836181,783816283,935611295,943805343,1222216671,-1032944093,-433535091,2135257093,-1480713001,-1302872759,-1639162089,-1476972495,1434269467,-1884455741,-958779419,511625567,366415593,-636194433,1948760241,-607179945,-31011459,-1518515227,-989725629,89716671,334602915,1559038171,-840887085,1948160571,-2095899047,1546496071,-1182564379,1749152391,-1046858281,1933908363,-1114590439,1725861767,-1650352095,-568842401,62996449,-2075569663,-374930561,-740884817,-940900401,356570513,1401270473,1847200321,1872227627,1599364757,-1676788635,1788828395,67810377,1522706941,-1574513947,-1562375283,588687747,-1529647935,881411951,548497063,1590358529,1574359953,-1025734651,476472371,-2042830301,119712941,1970739407,-570524267,1860645645,214521513,1985542937,-875698609,986428687,333221181,-188928697,-1343746601,-1411057543,1165305879,245081325,208227941,-711306611,-2036198263,-84774037,1131935361,2027500813,-64312893,1424999049,1221418811,-1557675231,-2021916875,-575654385,1538098299,-589997681,988490891,632945457,-719657827,-661164873,-1117597321,-1566163773,1340045727,-659922435,-1710778325,1754758667,-1311458017,97294701,-1150465695,65855335,-1270912895,-1360639591,-1863699069,6256071,2066603853,10484405,117769393,-629700771,-581412169,-743696921,-959292095,485014623,-207121639,2125122373,-16260281,1591397661,1859182301,1389902669,-232920571,-1980798351,-986355851,891000695,-1502239701,1970100331,1573427283,478749835,1874768795,1359102393,1797883271,1929256019,-1997124755,-506321063,-1407862815,-975475447,-925642919,-908967153,187757899,-1153918985,-2139014873,-1546686119,-2011505133,-1679165645,493126971,-1301842211,-1498611029,-1467318775,475584335,211817823,-505701953,407584367,-202344149,816018217,987636989,-833683575,-1536498385,1710015739,-1686572463,560788371,2011941973,431268161,-1580776733,553162765,-1597566543,1834667499,1686485679,-2019299835,459263955,793097979,-1980713911,432827229,-1147324621,1318278525,-1429066459,-862834753,-1854075515,-1459429023,-65339915,1343709471,787080857,-31268309,-1540425883,125066263,1749709087,-280403197,-1157376849,-125793005,-1079092775,1334646749,-1206232507,-904083857,656935185,-1251224967,-1178115333,-785142779,-1755125873,-565138707,-2113527903,1611056565,1553900191,-1295571065,821324737,-19994545,-1040835271,83422377,1920586007,-1685128443,-939371253,287157185,-1292396549,-1659159673,1726049443,1503918437,474679081,-2117884273,1407989973,-1182280117,-2063190763,1518811627,1676420359,611558685,610117865,-2130907405,1571542443,-1134984987,-1742890243,-1079335409,1551664405,-217720721,80010253,407592761,-61266191,1091312035,-2123906817,-1028659273,-1433009349,1588489721,230074955,1399237697,2042072441,27903145,816756581,512418855,814305127,-2034462877,-982912593,-1367704215,-339750405,2121477797,-1141106997,-1556297257,-337144327,-1322809491,-1708367881,-682581965,-297409869,774295545,-165642393,-812859027,569329037,-473972561,1107531255,-110415799,-332429173,615372495,284313125,-1847872735,-288520619,-147934995,442635873,497797915,-106697695,2028202639,-1153625193,-1496220023,63613421,-296055847,2056506829,2108493797,-319863003,1361594279,729338333,152739267,-1301547731,-844252963,1212423847,1882787405,-1311072745,-2017373383,-1522595633,-849632567,991732593,-718343851,-52006711,2096569811,1137167113,-236756497,-2026697223,685415365,673790659,-1429114853,-1676192711,-1080378819,1194941711,118303645,-240461995,119507301,-1485452073,651922723,403672079,-1531659155,1438575763,1771984427,439081605,890757755,-1290364987,-1874435491,-52162135,-515641357,859745805,1477801231,-390538173,-1065014767,1720526035,-1133686645,-1396492719,1143167089,1820592373,1349044167,253003355,209800037,-58892903,-1970509489,139856023,1213102355,401569479,1784648291,-1467720847,-1987072475,938624431,45974567,-399531739,-1896023239,-2100190075,-1853334821,-1895486847,-1674984319,2049196349,-499659331,-1113282735,-2065360869,-594421563,-349249885,1377507315,1891762157,-796271171,188550719,-713895127,1703253559,625585215,130806405,-559972081,-1177390601,-1489473937,1775931179,-1947334235,-1195673753,463235567,-1175495841,290986325,-1360549979,-357590185,-1358961377,572239865,1203673401,842929479,-1981315741,-1092194993,169000817,1423383597,-159679189,626462839,1996131091,985746615,1754538959,-709123079,302685709,1997468679,1991751661,395110603,604501709,-2032360829,-13530209,231077531,1069663353,-901085201,-484260951,-10747715,-248186045,-849582229,1837763359,-2115970123,-780629329,1087984279,2076040207,-306503795,-1743463447,-2123240449,1581053115,-202910561,-113733679,-261463511,-665654003,743006061,-2061990113,223299707,-803205795,-397557911,1213332899,-18644807,169374825,-880598535,237750991,1561355929,-541034025,-713063165,-1493830283,1573267955,2095891433,-1674397345,-970433515,-2085237675,343548927,1590806565,514566417,-1746325985,1305690913,1759303357,2056702815,1107463205,-1254132149,1500484321,-1407933709,2127976389,706546397,-659239919,1170333499,-1155055215,239203987,212055937,-798687249,-1763766581,239369933,-1293856935,-434063411,1845717441,-1575700063,-22590425,-1720117491,-589781711,323331387,1097028011,-544778653,775483449,-1675376335,-244449269,1824869887,226777967,1821335203,948886095,715069655,857236585,-2039953663,1222727573,-1036148767,1540083813,-1579202235,1245946887,-1631162123,-165530047,1075340195,20317825,-2115665133,50370307,465226443,-2074581261,-942727323,-283736483,-1345339829,1876330519,1837193897,1197983925,-290813185,-24386111,-1835441035,-1802336125,541105319,1911368647,-1982475379,892605611,-298220253,39073539,-420992397,-1808049549,-995131381,-570444019,-1085593513,-549074467,1590181549,-1400142907,-76000511,-1735268447,-1828828857,1954357171,-1028857903,-476416465,-1312457627,476718607,2095658151,-1300200625,321721109,-197110571,-1417549511,-571017947,-2141666821,1126664079,-667589881,-1728524427,-151234361,824766333,1988334605,-1200774767,629839149,-1387768855,1736261341,1336596363,1496158933,-1090285827,-2103384573,291312115,-179964743,-1010427013,53906597,-229889643,1715368311,-1920208033,-552129903,1777076225,117584711,561316149,-2002595063,2043492849,-1869103363,-629400013,178460243,1494166501,-217352099,1980472913,-188246097,1538777011,-2067786979,1579620607,1490731247,-2119091255,-1697887325,-629536327,-2112569155,544865025,676237979,1048286741,599449611,-1043626035,423692063,-63236999,-1967286963,-1533724317,1089136381,-35417949,1731018635,-878217499,1601117397,2010028081,-1670743625,308096409,-1554176889,940142297,-213055335,1181741463,1600034797,994639057,885956363,-382981745,1381819103,1345539075,1472464227,104748773,-423929117,374104939,-250375031,1014835715,1028771143,-981691631,1973134943,1036543639,801629821,-319966119,-371476333,1479750357,-1991315843,-1660184841,1675920043,792682261,-377751749,-911951299,1572823605,-1077331723,867876655,694043773,-337444081,-2065807675,486044583,-76453095,-751913147,-1610449069,66417717,-408893209,-320459651,-76334069,1248556835,-715439027,1524730023,-1932313125,-2138948329,-428281111,244585779,469520907,1382998483,-307457735,-596463851,-314245949,1278140389,-1720853053,-67470363,-102991713,-109867297,296309353,-2090731557,-1797812673,-742648209,-513458687,-1110825151,584547773,1904253045,-1315313961,-285046697,-1891270057,477128507,394912863,1576052823,1656527675,1282667629,1354025629,-1922910691,1268937325,-1777927117,-1533557449,-401280437,-1221619467,-1814682937,-813333853,1178863043,467070091,-1153160383,2020874353,233923531,1657745119,269412467,1119838605,580785539,-1198071677,-1183967455,-357509471,-2401179,-1701876195,1049002287,-259270649,1830039279,1209403431,-1636704073,1180196771,1408200117,-1945357203,1967532013,1357379597,-1387345337,264393779,-1624872025,-1822035311,169367855,-997743325,-1519713887,339232221,2054372821,601959693,-1806350801,1785922491,-1527077917,1126031537,1586178607,41887603,-369658983,1959180749,-1563361043,1200888603,1283469727,1949984833,-1500298671,233253189,-1018758287,1764105181,1156580197,-378568053,-1746670745,-193723113,-319117727,1002546129,636129353,1252474717,707894337,520751191,-878044423,215038435,2083516403,791870851,-1130217737,1070869215,-2108999037,418296135,-558285721,1395458155,-1351147837,-1249579469,707965789,1721644955,492132619,-834047099,943688335,-744336785,1171415539,-149078111,-1589845563,-1542807755,-1252350795,1374929941,1523510279,-957714063,1237194683,1594400539,788945319,1239973467,1052782993,-1141454317,1196230091,297269835,1167187535,1805302659,2072858609,2054953441,1770505445,1351634895,845695911,1564433943,-348460255,1763916843,-2008816569,557856563,-18314849,1420011637,-997636087,282635179,15659901,1202984785,-2140705045,111364135,-908689627,557170087,1328984901,-1875631375,1323451947,-378708785,183013825,716807883,6863523,-608852265,1927077359,40842271,-758684731,543655581,1823949141,1931669121,-94825087,-292337523,125868887,-1940458521,-1599665493,917353201,-977302641,-1570521419,1115533403,1237699523,1489311831,-205412203,790842167,-1239440549,-685897531,-187552809,305966545,1303904509,1799982387,-1445607015,312914665,2116840411,-1772242207,-476555547,644958493,-680024593,-265331605,-1252200451,-393205745,1345742863,602561849,-275849497,-1932752241,-929236353,-1174270275,-585762383,-843299621,55373665,-1342681531,-690295229,-1085219097,1448767951,1273396383,151016691,-188111505,-494102539,2085407235,-1788654077,-1432947821,-1672376477,-1365443391,-996787083,1666943525,248199525,1076207813,1717471669,-928808479,1722040749,-1445692211,-1118974507,1057274889,1339397757,1334547657,1423295543,-1639602767,-293513053,1843572647,1031452825,1139664803,-1207753607,-699407793,378740339,347381477,1579965005,-1310906155,782504747,367462213,-225521269,2120186131,-1375300989,830287797,298299585,1294326609,-261993035,-975429283,-149764571,-242276901,-318846783,1261334643,-707184671,-1478229387,1784522093,706236661,-1570005577,1195355309,-1520289357,-742757481,1944974103,183708099,-499430881,-1568690879,1816648125,-517422559,987854849,-1467077849,229860323,2086884967,1572751177,2000338175,-1320236595,-1415377749,1570047635,-488419279,-1180289707,1324859049,1795618059,-1782423713,201564871,-1028374457,-941074131,1731657697,1272562947,-971640279,-892483753,-1948612411,-1203141315,-490027441,1856102617,1169261209,-1997164069,-1167071461,145620283,-691227587,424509173,785028889,-158956133,-106036851,250105865,-1243674159,1174263197,466869661,-226820099,1765586791,288195703,-1017893699,-884633479,1141923887,-1894034465,1260363485,150431999,-1425095361,1454899923,1254234731,223678577,1269495001,-995001173,1617961837,1646689757,-854463025,1410603573,-205177857,434528095,1669326477,1643768143,1581578005,28981081,1753757757,-953883211,1197814837,1162292093,1131987551,-1390309151,1991179409,-632794173,-1032612055,852060281,1156218183,2126997237,1429807909,439550245,177255647,-1571609295,11470647,-486330489,-433734529,-1216697373,-693427665,2102503873,2086699385,-1546325497,-245498473,1370767435,283748641,1549746559,1908779909,1753245289,-976998299,-750412719,2132407857,-2123182219,-1735242569,-1393897311,1814516405,-1985502247,1559642663,728875371,961671521,851359737,-2027890237,2109265537,-234130705,-844684019,-1737367051,1554639361,-1757242757,-1783869743,1667942425,-143157351,-863880005,2053210591,-1751770741,-10010005,-734395957,743187269,983572743,-421989393,-1384692145,1906918783,538071665,-1830613897,2017960949,-1487017263,115578157,1196901423,-1304555123,150117221,1874365381,-1126109411,1400027593,-1862014663,-1748703345,4107039,307561381,-1956457897,81761597,-222339689,-241573631,-1383889775,-1787517803,484540121,407857835,98865233,-524338135,721885955,-545326253,161904837,-1874635325,884195121,80595019,1645820335,1713030597,1739505709,30114517,-671419861,-1674488877,1786155455,-1906619263,201060905,-908596431,2123515259,-1257221515,1117117487,2091595547,-860909349,441418455,1511490059,-1118088785,-1236264633,1152115153,1886848731,-1771843367,1931781039,1786180739,-1481671075,-225353301,648257013,-1076373775,-211760485,1469448943,966478113,31372895,-996697285,-1118788783,-116229137,747046823,1426587411,2147215181,1930376491,-345221027,371047017,-105262557,378763241,732295391,-1687594455,564038003,793932175,-845283621,1070024017,865627353,1544730705,-788299683,1021363421,-929223759,-962602917,674604091,-642665111,570257445,-2050088481,-1609434087,-54648985,637543633,-747525087,-874768647,-563569155,-1503871203,319249981,1220314073,1349829673,570100815,-387601597,1045377831,-1045960525,-157375721,686143869,32855505,-1848274779,1544260461,-101756003,-816125797,1499300469,169902197,-606991919,-1165825771,-392904357,2116203685,411205793,533420517,1601920253,-1676240303,-1880257563,880521523,-1532024451,-405986815,1282664073,1294259937,-1382549339,-733646421,455736939,1644082183,-1730286303,301686765,-1906881247,92863111,1677212467,1039615959,898504533,60714039,-1781328887,1422436277,1098582747,-184134465,1923499331,34467791,-520387741,-1603318791,-354084169,1732074713,-308583729,1953791461,-1946811285,-996387691,-210409719,-1598030659,-1670762819,-14497149,1159586127,-1397510071,1224401201,1322713265,91164723,-1097790885,608124441,-1274646221,317859737,-670680365,-2130681487,1073578975,484264343,67824283,1756425083,926191931,1546344473,564495329,-109724331,-1595828379,983218789,-2075926977,-2085339665,-1370597003,-1714198087,113393555,-1159966039,-692636395,-1778490413,1884028561,-1925800323,-52467465,-1352355373,-69800551,-611755783,372290567,-679754177,-15417187,-1418590657,-889689593,2063161769,-2006046561,-131259215,1539596223,-1184192777,150470969,-770126571,1514178931,1124109979,-644675641,1139018087,807792463,176342919,268040385,-465907099,-775202319,2105428175,-304164429,-1080444731,87158727,292911047,923481617,-1056229985,-957498181,570556163,-1324502349,-95461229,1900925765,-1402334099,1751341191,1380564967,1742111793,880895365,456170749,345192265,-854382727,-1534795235,270086731,-432708229,-1147542449,1952210623,1548815507,-854509173,634994137,-647231419,1133730181,2128269495,1337811645,446567037,2144361853,1219133029,-1320107659,751649603,1476099579,1074567721,-77750811,-1087789489,1197862547,1964154063,418748769,-1540800671,-1879028359,64916681,132998503,1922880653,-1773718767,476704297,1855149981,-1956790161,-1207632157,1341802357,-1201013083,919429431,-441843383,-63253143,2056348123,-558877945,31883975,-996910313,-404183085,1533183125,-1594948513,-1408742525,1419107759,990755543,40245975,2104270279,1709913969,897946441,-729203617,2111499769,-1338099127,-983242493,1677601073,-1019017587,1701017375,1696746373,-1366507537,-1702019729,-1363373651,-570405255,-434086965,1449845363,-2093376603,991539439,330284165,1988250919,1687681925,906137511,-500843535,458637107,-1152401769,1885997969,1109268875,-971007517,1152412593,-1704011777,-483986035,314798203,-586274775,-865137377,-1899571437,-1605211745,-2104190989,-377219715,-559990449,-1486101577,-1674356417,-282556619,1304765243,-913530451,801819705,-1423553025,1607137311,107507623,-1300577401,-1715785829,-801982475,-1312055141,-1348633779,-1945479603,-89644787,873618697,-1583704095,-1402370135,1145684139,1174978783,-391178319,1060953293,-1262175625,-542230697,649307001,-609094635,-2146435231,-1706591499,-891700749,-1673566065,115987563,-512146523,-532121273,-1240295591,2123280751,-903630177,-307999643,-1114377019,1017844413,56350901,-2098145255,-1845783433,466639743,203915369,-178260217,1867737705,-848310299,1740254399,-271554535,1533197389,-1355213465,-861112561,1321001665,1389074581,-1265693705,458940859,-342209199,-548767315,-1837449375,-1196768153,-750476057,1067886091,-706756577,1421779177,-1355362365,931292433,1371135707,-2116638443,871818313,-1777986925,1756216789,1720361967,403789773,446423903,-261291285,-2066018915,1230701197,-167436313,-898501409,-8141747,600645191,1870617849,313629675,1249111599,18544933,-1847889919,-577332107,-889571591,-248545911,1692084497,1885721117,751184605,-2044154513,-661481673,-2147087627,213490811,1842403599,-1436867735,1165105629,1174446869,-741122329,-637797291,779329599,-1457642695,-107296277,557769553,-1480691919,-948547585,679367845,2112337075,-150399067,1978650709,-749257667,70530351,-7330275,1354153213,221393597,1520541787,690448421,-634983029,833990799,-1889855211,-1513358535,-220549065,-211327121,163063103,412472161,342431023,-17936787,-815834917,2093153335,-448970197,415468191,-842900295,-1823088841,-357441679,1136978965,896007361,1040417175,1479639963,448259493,524698787,1044692139,314515913,-1035755511,-440397183,-1526773507,1947283113,336533523,-352971525,-1042554049,1260691589,1369908633,-1265234691,-416345431,-1015903279,-1791382891,-51484485,-2011279689,2109871663,1363094389,171883339,-1669676677,1060422269,-1597161405,53887277,-554600883,-1097978989,1741627807,1336477251,-505756451,-508363519,-1375682455,-1286043971,2029403717,1853023577,959443457,2058993735,956249999,-73847343,93287777,224639341,237186373,661755791,-1835678511,-1498627963,-1751928513,1633283285,1456228653,2111363371,664426981,109338879,-587428867,1212874849,872843431,-1728697875,1228592397,-1250299561,1490281427,-1089281407,1893000485,-1458528945,-2117598145,1921975975,201227263,1887382475,-1391142547,869194719,1371908951,-2005628417,-1693447595,974561785,-1545305209,-277387233,-2007677429,-1771453927,-112835469,1949850077,529824531,1293725667,-1772090641,2070814215,2054561835,-516249303,-768068029,1752355973,1256136865,2128073657,-1953637621,237500095,1639514151,-1195788835,-1470947607,-384652973,-936706129,2130223313,-184107581,-1919628575,596886115,-1178630367,-851384629,1609597617,-1491802375,1296579359,-1054729431,-1507490867,-386900751,-60405329,-1620049507,1920613423,-1224347731,-423975751,-409672699,-536446199,-914882875,-453533993,1021160111,-51287635,1297178261,421081895,-982657635,-1377592403,973198345,1309162475,-23696225,1169538379,-1633735173,-461108457,-1728804811,-568680955,-1518547923,-1539247301,-1541342533,1898798889,1505966615,538668375,-391643515,1832338709,1201217795,-1773734917,205271247,1135144859,134958877,511148119,931881645,-1610880091,1412165551,277182625,-1431102003,-714484409,389125573,-1201649739,-1190913373,-1133436359,-1484903211,1286711769,604409905,719656637,641231767,1109400935,1248524903,-1252120151,956396355,-1909009345,-1314341623,-1122831107,663908099,-21576307,-1855705441,1211175753,-1914059277,-289202867,1270424751,1746405195,25658781,1750436479,-940027735,2138566093,-1700924823,-141157685,-1615231895,1285839721,-1167198949,-1997070533,404988091,-888281941,-48234831,1066047561,-1542159229,1057491099,678271933,873213267,192168483,-39677695,-1143055683,51875493,-6916219,-276742183,243743333,-804567133,-1802729207,-1770456561,-529974283,484426987,-1493585303,1395679521,-1925616769,-1262442681,-735673595,744761873,1678138407,-577979637,1112293581,-1674381303,-700815621,-1807788387,-900748941,872293575,1914774215,-579668825,-1508085371,-1788794891,495358575,1844987865,-952782013,-1769186847,-664727555,-866051579,-84695275,-1839278999,-1882487663,2053936469,1858126217,820168057,2014521165,830075165,1019560855,-1160179463,15313731,-320127111,1217698417,338172221,1418821997,482920903,-1036535327,-661862813,37026981,-457754351,-1190920091,-1246345785,-778082045,950513527,-1997451779,-1707646137,-1437132439,1011192795,-68243181,-206841957,-1764196841,1597924701,-110006063,-2035930809,115358047,1792479947,1309902725,-467216357,-1305065055,169624685,-976168809,305923829,585976697,150374949,1911032583,959231561,-1502342337,245097079,473005419,-182350449,1842685185,-999219127,-553714337,917297751,-1909250791,-1077357251,438827559,915973927,1611043005,1325997271,-549121257,803782019,1492287315,-1736060143,2045005647,2081656153,-408579841,651349031,-648434777,-1911238549,-125867605,1962072319,-209384287,-1543464211,599495095,-279176447,-2014226069,-165296763,701177089,-706886301,-758492091,-513611233,620301521,1522074521,681304995,310278773,765076507,-491191475,-527947645,186393501,1684447593,-1913672885,1909920183,-557006063,1427833691,1618606671,-400487087,-772687899,1415612175,-1924949923,1355303453,-1921359193,1575160447,-456733875,-1219649135,1235915929,1577218531,-226254439,-1612267471,-430693639,-1648066671,-812426879,-757494115,-920497777,-333911439,1472731597,303469069,-2016468977,792854127,-1784167181,963869253,-866064185,-296564317,2100586127,-80086579,-1690336619,1721127889,391738945,-228379475,1326958123,-1579950869,1548557131,-902067311,189285455,-1250089057,733254861,1553315953,1770042751,-2129895869,1392558819,1459319539,-1774690449,1325514099,-79858473,2143440923,-1374035599,622861057,1590523133,45892087,-1785773099,-256990809,1492604513,-699880651,1021350521,-1146034059,1533917589,-2135713947,-1902597659,-927317371,1013289141,805305689,1330805241,-1345948053,243844339,893040709,-1575462755,-329122163,361714743,1960998203,-1082182723,941498241,1101459003,912459893,-1614751611,768038321,2043376189,465159311,1092098509,-1790540181,1227040603,-1561497555,-1839206933,-671274401,770257343,683773297,-1154642453,-1413439667,-216346543,1700983429,1126215951,390657411,-1225852237,59595671,897096607,-2127461773,-647262649,608847571,-2005902193,-1999833533,1211887325,1455396739,1014286655,390654311,-1277953937,559651747,88571581,-1731055539,258039195,-1052182963,-1658676131,1263005249,1600886607,-1868859449,-824904709,-18985519,-1262004465,-1960511871,666097283,-1882666465,-951188745,-760935335,1372459799,-1337460669,1157386525,288484761,-454663187,-777334271,633449263,-842124973,-1677153869,-54692149,-87913715,-97025257,1384110933,1209620239,2007187983,2135336817,-140791733,240356075,-1899637517,1579148989,-2140785185,-1235548845,297462187,105080305,853161913,-1803489263,-1659815871,-712735755,-286017707,-1031165951,-613073555,-300666967,1866824281,979641709,-2066368421,-348478851,1451373871,2121420883,-2097660595,2004929893,-1456643461,-493039615,-1524865567,-345707659,782157581,-1172389455,960408299,1095224053,-799129701,-610122757,2048754785,668909109,-1868947117,1996626509,722302353,-2136859655,316324455,-704361175,-1268372349,-1611355909,2005027013,175652379,1547036487,-689727255,-129214667,1542576107,1654077377,-1244785211,-319318591,1921592175,-1954332043,1451251423,63437347,1039635729,1230778923,1138904569,-1100104563,376843941,-1460608651,1583488759,2078252501,-1779184183,-1186229241,283358873,-706116923,-712457927,88470195,859917253,64360473,-625254765,1128166675,-1183262673,-1397140279,-1150439243,510434099,1816249387,1370922463,-1405663057,1636118907,1869887373,921421425,-1322138577,977749129,484777871,108754791,-1814261295,1978235947,869771987,-1810849655,-811872689,-33157373,1069813821,1627830475,5164157,894674431,112699135,53818903,-1703762701,-592732997,-2034292181,1885975079,724556645,1391287637,1569400135,1513950103,1573165077,366820887,1880614531,824139583,44481943,283740457,1412198071,823746265,2023920905,-102284533,-1109194919,-2080914061,-3914573,-1367685389,-23341823,-1463961795,1061772373,-380799947,-603407557,-1052995753,1860631515,-22961397,634890693,1909152567,-573426293,330934897,40201761,1361165581,2114145635,181297795,1940262731,-1690909813,677390919,-1049087149,-1166937761,-1902251111,602147571,1351314745,-240097845,1944809057,1704747271,-39400965,-787021867,1022780463,1412164665,262291623,1698897729,431594403,-392594733,-1269880335,-1186272847,-449527169,-355625625,1594627485,308259447,1186002777,205495197,604105215,-106300899,107218423,-1866194507,1015102545,1218415659,-492043367,-1960794607,209120625,1407131495,1569149313,1593352043,346742223,-574042385,-1433788759,1373847733,514709599,660133889,969785633,-213713287,-1286523213,-1730249283,923881905,1376443137,1185991687,19105567,-1015248869,617351391,-816120155,1594125563,462390981,1809416433,-1801385771,-666164179,758412617,-822041061,865706183,-1425340779,1625126891,1810668103,2055562743,-873857723,1861428631,489265333,-1779882667,-40747947,-1950911871,-1195459889,-237319479,1396166185,1958777785,253957597,-932123845,1835259209,-1253546233,-1536927349,-1204614915,512981123,1674408815,1163277029,505937727,-739830819,-406225191,1571245935,-1823427649,-1756820441,1019027975,-1526359035,323379429,1904469905,-1965515235,-1821062879,-666836697,-1954662821,186832871,479004595,1861552821,-1718440631,1823400545,1301350737,1828409323,-415463297,925220977,-1887577523,-1886961965,-131213247,-1982786895,-48076507,-567968265,1869698319,2038958141,-774529427,529822137,1253489709,586995705,96973229,2036488989,676105849,-1172422169,410584101,-1325422339,1622136017,-1212310981,14218681,-1544763285,240794847,1179836193,-357067035,-1156313915,559069557,-1106361161,-1698583589,553256507,-22044749,-1138875547,1587944541,-342830717,1890281541,88819481,-1859567533,725504919,149059579,1278445463,-888441629,1562856247,-1094993163,384797861,-923061325,-469789735,-1606156161,-797121525,-1218447077,-35931735,1685751921,-1466668659,-1482817935,1974207149,1877240705,-45179177,882816811,-1609824681,1970572245,914951293,1603502543,-852496037,110032537,-1814020743,1726226117,178311061,-1013135373,1779140311,448939761,-926938819,-1214321983,575046419,1128786245,639915729,465586739,-314053683,214587757,-1196061449,-1757803811,1671397561,2092738579,1170160299,228939679,-501476859,-1595704773,-1234302463,-229432009,816888361,-1567721979,921081249,1550457979,980713967,-1224797391,608523217,1132614717,560535223,2052250831,-702587885,-1529458377,-227654037,634492707,-484830841,-998954357,-398692241,-671482235,1572158599,630814317,2116977839,537510189,1617560853,-797681037,-2032230673,-2120965611,1159549735,-2009150415,-758125865,1346581855,1818598511,-2097023409,-170786887,-1377023805,1939690343,1573866953,-721651063,198256027,-805540743,-986323301,1438068545,1837106089,-277805131,-441354527,-436984939,-11763421,-139287611,-249669235,-7752795],"b":[-1452173133,1625319083,745871753,-1142944903,1913754953,-530536083,-367811025,-1341927497,-902147673,-1161358679,1671066889,830101569,1463332883,1253072749,-2125883721,105253551,-530059859,-953848845,1775404199,2080614787,-730949027,-1453802337,13091219,980819351,546391497,561849119,-1634902861,1388395797,210885489,1004429685,-2066683307,-1345800559,-1572191297,-1180302379,1111880745,-22981367,299254903,170487059,632849127,1956291157,1410873741,40568425,-1066247159,-1812417133,-1386671671,-1298203641,-474707155,1646111779,-1978604683,1522883873,1399182177,1108947801,-2072330941,-1776304729,-35886097,-1842177507,941895909,-804869509,1705171949,-1491772407,1800251535,-1217003873,-1549805871,1389397825,-127899091,-2116341825,1562109745,-756550395,2055702381,1473038143,1160620397,-1194403357,339944669,1143584475,245664287,1416135687,-1716218327,518958227,-947619313,-899033827,-366556485,-1731710187,2140272141,1202820149,-612775003,422129203,-560421255,-136723431,-103168915,1206865983,-1333919669,541431409,-1197971311,502883907,-525776031,-1969995647,186063929,440298283,-135371569,1142739249,-1075147213,-1071769421,-135794099,-1663755167,1798993077,-893071009,1066277879,-1966171897,27320769,-381302263,-455897981,-55680559,479748591,1480991711,1692251659,400245557,1008327707,-977136963,1214028727,-1208765493,-526306619,1997313719,-612661059,-1957781283,-685550435,1351122369,821606017,412511121,997231743,1511557025,7408777,-34702875,864365471,1811116401,1000172641,-600377817,-1671763101,353632453,-734063713,2032244883,-1935106989,-1850780343,-1912048041,-846097767,271574077,-1204687771,-711509669,-1154026775,344325891,1764338631,785207053,-1459521079,-1612525107,-465814597,779478795,1049894477,1850864799,-963400037,162310133,642207253,324524961,-317410241,-364507727,-1657972833,198432853,-2128593455,1807394447,-1425166121,265636603,2083401767,-1134816401,1090534659,1990603927,-1714985559,-236746467,-1858123013,-766251205,-2072021411,-869001313,1878732915,-735409471,888926647,-2001026085,-1651464963,-2092945701,-356225235,106916803,1654412741,96710243,1911450581,-605410641,-359090189,-799724841,-2022706149,-956080621,-1374316681,193683177,-352019401,2074892137,1872720185,1287852475,-1698580823,599744669,-379553523,-1129595859,-1362129121,-1128426015,1119569811,358132075,1876639243,-1564016423,-1224148469,-1369946611,627005669,-1765426981,-1897169103,116110147,1548122765,387477915,1170933313,336084095,683426667,1609481725,855368075,915737119,1925978243,-1252131165,771284057,759886319,-1823335311,-204895675,882193675,802030449,2118421383,-970649567,-1421456345,-1808667575,1502607519,-83083275,-516198763,81357751,1580155177,1885314649,-1785355777,-1832994543,661149273,855475345,-1576343285,2051679303,-1718324393,-517954683,634381369,1938878687,817266443,491734901,1071441063,-1087884289,-395441053,-1863340341,1740430273,-1610607511,1698450317,1501875507,498892923,1117232585,-268919661,-1427115527,1861708313,894913413,-165697685,-1742151671,-1551057687,1824962783,1788081039,391899967,-1817050015,-1942108153,739740541,-1111009931,1773917607,-1429700487,1365958533,1064911313,835757105,2026645967,-1546807733,239495663,819287175,94439273,-1897003857,-1401567625,1748567827,2013276453,1385037051,-404983711,961963825,1469145771,166033603,-1201941867,-1805741375,-856356609,-350091657,114747193,115791357,485186529,-1612864791,-1879916291,-1973654561,-1179761553,1611608739,-2050613273,-1839678643,-9369783,1435880609,-575795911,-840529183,-626515103,1420502379,-1339669881,-1613101207,-1558392709,-1195667739,564312865,1118570515,742833379,-669289193,-224090153,403148979,-1733466267,-1604360655,-684823241,688170045,-272942815,-324788101,189850779,-338623177,-408037677,1173564791,1613661901,-1902857891,-1006069301,279528183,-664014343,-1763999377,621734855,-157684705,-211982925,2025867157,-1751365521,-1789412053,-1287348571,1577827987,1426937965,-550958329,-7116027,660052055,-405598405,-779263645,-1728768497,41648443,-94253809,719197235,1509996941,-443119247,-31862921,1350832115,238274333,1767230335,2141435947,-711928879,390245343,438455475,-1042674567,-764854437,-71378105,-1355902097,449951297,-1105922443,1379982543,543246213,-761331541,-991607149,-1468218911,-1768099535,429856053,455727875,1491743535,2009531279,-1430560251,-199193133,-2059430693,289798707,153990765,-1742457315,1901918193,-1902465879,1287509089,1120065263,95259251,-1000535493,-1203041229,1192117961,-95822371,126179465,-1015541369,-3728815,1754349317,398531121,-2036394381,914038031,-860790009,-1847801459,909415113,-1248761543,1569946189,2101545093,-1142614193,-1117936665,1320416207,139216563,-944367277,-2076639597,-1177442123,1939563103,-564655727,1708949663,1870724675,2109054257,509853629,650224685,1929518471,-1881061285,257267751,-1132940389,-1739070009,-1297171981,-315466711,-2059337369,1858295175,-635122131,-1503896515,-106168803,-1967611399,1603414419,1961371189,891625685,412032641,1545352971,1080190391,-66816589,-1999913977,-140134983,-1606548557,1197813491,1139669871,-1122575731,661045237,-893057707,1289844593,1718175345,-1987027829,1688989753,1411966237,1222279521,23375857,2036038457,1693949113,-1135416123,-399058407,1764300391,142507373,-1470298429,1936147085,-2143095431,-1409147721,-1096054119,-266820455,-505498637,-470250915,-767273833,-2079461031,-1352643127,-611114735,-1738517579,-602415559,-1560354543,191526575,2056676431,664027317,1982120619,1734944881,685689613,988109501,-1482108979,1004728759,-1335113883,1945113181,-1773775249,-472588677,-1403334121,2123840613,-83964131,1859123621,403667909,-1601744345,337825989,-105331933,-787239191,1665183289,728684131,2042468135,-1911602385,-1945891963,1569755281,-1107045663,-318106821,812974095,1364686063,1153344493,1073529641,-344892195,1602759147,-461850727,-1319234819,-1758397693,279957375,-2040518987,311261693,105143771,1919834975,-1422821385,1018908909,767465997,1014261309,-35335911,-1185135993,1477708833,-1943471359,-696826231,817379933,-1895805963,1551567657,-1843764357,41511723,1902860445,1049061603,737653363,-1830472225,104074959,1136180867,367276157,942402833,-874932429,978714065,-477411953,-863755267,-145285137,2029126339,1486098825,1628170777,1429652577,2123852615,117753483,-897100141,2068133059,-57954117,922764931,-216669705,564566989,1094665289,-1600341661,-1857067787,-210936999,-1870091031,-49266913,899714563,-1077148221,-342972525,-493085515,1998660427,546623827,171652135,-1260555011,925625037,608491603,601278219,-374982437,-1612764749,-198510397,825378671,-605002511,-2089583867,311543981,554590893,930144283,-745952167,-208505971,333490919,49590575,245172601,1742303673,-189144769,-680301411,-622844437,-1311123569,1423394943,31013033,1545036669,59069971,651591295,-871671023,-41410115,-195067565,-1440486021,482114943,-1697403165,-1082193795,755411137,271692107,779042439,-1988973521,-947484633,1364532933,-1420311417,254268145,-7710903,-748094289,-1851412073,355367731,-1634017425,-909950527,840060257,1335277633,807100293,1427943611,-828935183,960314667,-478448971,-1113047617,1886267357,1341905697,535822297,-981036227,103608089,1879431365,-1881462203,2108973513,-847210779,-1254949431,649327629,-262399839,777350477,-361007797,1330775855,-1839838555,1597956527,424893519,-1345202477,-110161711,-356939451,987990373,810674019,1362014377,-800009169,1788527743,-690280493,-837551145,-2114237965,-1733020881,1586274553,1654452025,756956431,473644601,1970446837,-1192780963,1837716863,1397538899,-739821781,-254323525,-922993533,669590409,991727395,-805706637,520463535,-1417711521,1001047277,1214727553,1946468501,-469748479,-912766569,755482597,1472720327,114054179,1353206941,1497269269,391262149,348044741,-157458829,-710652287,371090617,627522643,-1666579551,1574211423,772888933,1963233487,2126497113,1614158429,2147320911,-587586693,-1439706733,694706477,-2084279835,-737903369,1923655901,-1629027513,1351121871,813236131,1473757821,371346661,635886857,1471811739,2023284839,2092256087,1650851843,378239673,522622603,510006003,-1083792791,-349110871,-581051681,1020057601,-1401304029,1883858505,-488964221,-1749195313,325535451,-513973987,-1181537663,1825299027,-1150600641,2092785207,1953837095,-1179840647,282275881,-1728094291,-1511873197,-1026277063,-49911525,-1344344733,1421039815,-896917617,840846633,1666997183,1150029531,1193538129,-1996862559,-394560185,56506253,512855809,-431743583,-2114606303,666256941,800705541,1325529097,172212913,-425493753,-152928549,-1879647619,-1753051551,-61747205,1596844325,-1088016319,1680498031,425515285,514884097,-702045519,-1003847603,-1035099177,2000673767,25090855,795238785,-359925821,-1959289983,-272467571,-927296781,1359345271,1584966523,1145228285,2103375193,-448894551,1686850513,-182502091,-705961909,1892862371,515156351,-421239835,-1671772721,191949113,568338009,49689019,1899720909,-177512421,1551043195,-2068462603,-1185657373,1304809761,-165316425,370717855,-1342520997,2007799709,-468286183,-2105761461,-1002338855,-1447375305,658035693,65143813,-344561267,-1425268545,-1455803565,738190575,-1391484729,-586890861,1665207103,1128926029,-1305701877,-1943508081,-1314012885,107301165,-475549713,370141355,1853145385,-1288296781,-1473835601,-1678527897,-1673144275,-1384922495,-1964573667,1118968615,-1156234509,1893646199,804051665,1729260343,-365060085,1943448143,306702143,782198213,-489487431,-1952851195,570059995,-1073663337,-1902069253,-636332317,-368656147,1633976225,217569351,1670948675,-1156721129,-1990008847,-1168339539,307869807,-1067709409,-618649119,480109353,-1045615943,1339046659,-271389135,18107895,-603252997,1544694167,-1402393849,747122941,-1589064657,-1303022495,139192253,-1352945447,-1397239681,1473878637,-1893066121,355451917,-219103323,-1682545091,-470647129,1163492057,-175053971,-79460595,240641881,-1391063369,-2095027929,-992492879,825186155,454348371,-218743723,66284815,1652390171,463114605,1086463119,-2015259443,-353344405,1280386379,1667762525,1128230643,-108152497,-947818105,54836323,-1783853937,1933593867,-2105357417,1493461359,816228189,221669099,1855936607,-1620868861,1034632627,-1251977805,-946161717,2123945675,1681812903,1049732519,-871163307,-98161891,-539427529,517511343,504405063,-729510903,1241911261,-738451601,1299455265,35982477,-832863903,-645172963,1370461821,-557738563,2001608073,-1451897379,1964949267,898840515,1412596219,-1074514887,965799073,1503649497,249571795,-1629854061,344231517,178194813,1328051785,-378642811,1291838843,875796743,662976675,1503849701,-680566871,-789463363,-1356737163,-700101083,1611517191,705706785,-1885696921,-344455209,357248261,-92720773,715129523,1863438061,-97983009,-1827925049,-35210949,915100341,-186415015,-2045966167,-1045179393,86207921,1492583781,-1048323375,-1215090025,551466407,-43484391,-697685945,-746931383,513679893,533734323,-1713876893,1216733819,1306042811,-916281545,1808823081,1111049047,-1116427771,910593901,1383259197,-220604831,-1148586283,1588361761,-1920548765,-1983845333,-657374797,-1842299399,-1106742935,474875381,1181329827,-1023364161,1662592155,129167933,1967000073,1006998605,-1840517807,-1228297249,1915951927,2034267583,1995640853,1336251137,-11087155,-1658186831,896735761,397734093,1747825199,-1878137755,-2146571067,305380143,38180683,1752645987,1835434869,1698771387,-1691835591,-1997258045,1548441201,1444464473,1959285635,199457959,-2079506089,-2109932933,1902175239,-1877261051,-296708821,-328092601,485694101,-1672036775,48960829,-1749033833,-1255437483,1036572253,1282545319,-701638541,1541264349,1082197141,-699107691,1127587359,1965075197,-1279621269,-1693393413,1885198659,560167587,168359873,-759027623,-924362969,-871683973,-259060765,1062592373,516038171,1514607023,-270882365,-54543303,-1881226287,1779046431,-1128901399,1719725511,-1703191631,415305905,724526197,879548101,-712458829,73310281,-529686999,1017841881,13795577,-65937625,-112067911,1965295501,-1871939235,-1047260483,-530933357,1545139445,1786426203,-1651124921,-672827101,443832207,-870253017,-1978787037,-1541939805,450382973,1854288795,749125913,2010114689,-215122969,790755177,1593485815,-1699919067,-417285769,359705131,-1749779623,-905028131,1966391243,-635672617,2128987165,514789453,2002240067,580091191,16923369,963254991,1694936263,-1724255249,-1413603713,1321499629,1168420941,1060320831,992937423,-1943602511,1393869399,2011401129,-68762359,-342732015,-745801239,-1966826369,1912511747,49737145,-1586392703,654835443,2113116885,70965721,-1280001273,509813947,-16710689,-1683642301,-1731586423,-74593605,435764225,970126917,1227279607,-1839524621,-1715689323,819993867,-913090165,-388228081,-894004169,-1732440359,-1541794075,-1395300211,-289187425,1529958445,42429549,148892851,-1523752033,1189589103,351334163,-706718097,2068512537,2024965335,271581301,-1083274003,-219775543,-95644749,-1183494875,-1004791999,272306427,-1780983203,-1357587323,-2103838321,1255104067,1949706847,-1877442079,955720877,-376866209,1086417599,1514653211,505399351,-1198381663,-2098934863,2063144087,1991739359,188350889,222529357,-865576363,-687674551,10843109,1851540227,1798583771,817657637,-1523402129,-1519508957,-511476563,2137961859,1028616221,709501609,1764367931,1277652153,-1336700917,1041636507,498116417,951398125,-14915075,-1569528861,617586533,-1159055855,1719924211,1636359269,1614684213,-1900729283,409707003,1113060751,-1665456995,-1033826355,1918156651,434358205,-1186014753,-406708605,2036441425,-123302299,2127497321,1244785109,317671501,460604477,1848414763,808517851,-516962847,124299845,1753423643,2020597379,-126211193,482356097,-1939295181,772720711,-864073667,-1201666643,-1475018901,-91414527,1194369575,-907651519,824782067,-2042191351,-2026356291,2120492195,-526250635,-1356730487,-587897551,1925637449,1610078665,-1996763227,1274912739,-133391781,57297813,931702847,-320970783,-76995005,-1269859929,-843309205,-105704623,1538894567,-92023287,-447125157,1360284413,189256941,-1729323855,-702318875,-1303174601,1877714005,-680360665,-1618726415,-1611983097,53812885,-1804907227,278266945,-386804939,1549906955,309588187,2043299487,-823971203,-1509419353,1560773399,-1741681147,2062071887,1151143135,-1564955913,165712277,1987466639,1391189847,-74156395,-805981893,189203237,1663040311,-928608763,783700267,-1014269617,-104229421,562810817,1643453543,589063099,483925835,-1326512379,481702913,-32456787,-40339159,624620751,1100929133,596869391,-1459710635,-503425505,13140257,1805001017,1298128809,-782927045,1124977113,1044343615,-1248159661,-1199124919,-1705936573,1525705945,1585106047,-804759141,-734840369,1863889373,-1102716813,-577568869,-573863231,1577252519,344981877,-95406549,-1475034769,-358108003,-1471993915,-790082353,1124799789,-1935940853,1314336585,1038224665,-1010137255,628902009,41588341,-1104388123,1397495019,-1477312941,7360839,-840396841,1597756891,1364578561,-653441621,-161919777,1623605969,2018335813,518354691,1793653017,-449146255,1751428679,-1443991511,1694886629,1736513407,1278102331,1934473435,-207359923,-1879716815,1378938571,177077985,-262607235,1586613199,-1243859241,-1936409977,2019704105,2040401865,2015303371,1091709525,261740319,1023065989,1916032853,-900576429,-523264535,1586011979,1536338101,-108874409,-196091207,-1464967939,1331379341,-286983941,-90791613,-1221216709,659503475,-1035647877,1368607455,-1659296867,-579770115,1084500893,-634653473,2077871197,402174077,-938775005,1718362733,1162402287,-1310949185,59299537,214939763,425136099,-1563127711,827532233,1230175671,-410017207,-2031624861,-529017915,-621765213,-352474977,-1287006401,-1261255411,2038904119,-1682477181,670716241,-1561250651,-1984458699,1918684723,719729721,1869554555,-377283407,-1630461893,-1281666319,-1704810411,-1021725791,-866094313,-802925613,16493669,-1963745615,-2143830597,-880180801,-1331328259,1145586339,-468745817,-1240895511,630359899,-1225458193,-1907641409,201722259,1616845659,66955287,36111193,1330465909,1540833611,-1862249131,-1394439727,1288065281,1878049619,665336539,-1783588991,2091573995,-1223133813,-1496492395,-219175489,1399528241,-1664689139,-1013372445,2089638501,606756881,1510576623,709661539,157344147,-1216740863,-1424364095,860385703,-652334965,1257778439,-346763183,221834889,347401843,1922256367,618808313,-2099435865,-2062229233,499377161,665886063,-1137673711,312365723,1480706805,1198803811,604108935,-43778859,-1351842327,-36971017,1398408523,991046905,642199815,199514495,-1129305537,-777654561,-454697473,-1353579073,838310019,1983798625,-127579335,-1037170027,1555636169,2111207417,-1956691897,443890891,116048971,519937733,-1664931147,-785833607,-480970187,-537451989,-639326229,852272397,426284501,558195527,1383685805,-1640538763,1155071351,32060989,1978163985,-339693347,-1214515691,1614363357,1296578513,-1068948153,36616943,1240671571,-99084961,1126404157,-741131641,-794304075,-1110205161,-1880182179,-2147466883,-1865697487,778583097,-1119199927,1563608243,-1341098273,149718213,-536794781,1816434039,179401333,131196955,1709034475,-998807335,2072306513,1365810557,-1422121319,-99983711,-1093985211,145577949,-1402735125,-693735497,1223738743,-1221283753,-467305033,1499524707,-356297031,-1099758569,1896997805,1299918885,-761890771,-1800651171,-1204643861,26485701,-1531388257,1696591155,319710831,375885435,-390349817,2100684525,1573688607,575855009,1833856493,940809719,-1880595663,-506957883,774005327,-748369025,2121034563,-606247,-1599225129,-271383639,110479167,1397522373,-1017574263,189160079,937683805,1416742561,-106421597,-1921352863,1681548757,905197991,888513001,-363239819,-1823079547,-201237421,-2058040757,-2119350705,-1763496181,489015439,-1684883831,-1123144663,-311060299,-1015214883,1188554093,135790269,1599451581,-217537667,-1138368463,1520570741,1177078299,535648741,396975375,1880953655,-2066137937,-769701557,67454641,-161180717,1160085507,-1594364999,-191557315,1721710907,1600587883,1700420871,261238233,1174441175,-836821387,1560870153,-115536669,-499545383,801841301,-1060589053,-1205910059,220332385,864620879,1808791363,577964621,-1364600269,288662489,-1762555985,-888979565,1111700483,1242322493,1878157329,-1819348785,-1922829897,-1668125211,1366107567,-725241543,-17399217,-370830515,-550888399,1168197483,1599629519,-1521900995,-2059753583,-842046229,-353703461,-459300519,-1407561903,-213014757,1863735909,612981033,-1254283063,-1035927277,967698949,-924872923,-852546263,-734115845,1156062359,-491936731,-168563355,1634140167,-1322024749,-1404110969,1952258159,-1947214235,821166247,1611231319,196023375,324982739,-1213469983,2009708537,1548614955,69780657,277464549,-987772629,-1445950681,-1168112503,-171303435,-1468711453,-1456318341,676284931,1837409005,518336787,1492740489,1585467981,983298303,-739535179,267628995,1209795759,662185329,1088599361,-471178501,822657441,903925113,970088925,588748063,-515916923,523275337,-1404395541,1464423849,-1885898159,568305019,-504773911,-1174682915,1068931725,-312655115,-2049483631,-33654725,1300753345,377976567,395567355,-308802015,-1714941341,506425459,-1132453683,2146030439,-801713127,-1080090599,1744087957,-265454639,974934405,422351837,-1113578911,1546743687,-1315849561,-696941309,-1116736013,24937901,-1775459093,1291816273,496462753,-1071928959,1477818029,-108214187,-1984641935,-1160962729,-264136049,1661640065,1307260479,-1925771939,424582423,2016141639,-1999389375,86916243,512449753,1333607813,-1487760683,505820099,1578162679,-1537828179,835004451,-2033275223,1798119009,1596337291,-1019802169,1399449583,1308273149,-2085696425,1223272265,-471444911,640071865,-1205202803,-777717905,-1519320081,-1632004925,-1445601379,407638917,714477701,-501799705,1568157093,2096979679,-564115999,-2104743723,-1077085465,711767567,1193618391,-647899125,-1498469973,903409417,892720841,1638450357,-1895105417,440742397,-1261082159,655783189,862014731,956934867,-1448172749,140296267,22348675,1952059759,-986755741,-1534983241,1405237183,-203781413,-1865241361,-145241809,-1537627259,-83100403,-804069059,-2021534077,1563064307,-1893096037,-147346295,1746982185,1133195123,1725484277,595108063,-997579273,1237508077,-1728321091,-1028733503,1614374335,1481085759,-1022050899,-2035217175,-775497197,1444380923,555060785,237684539,444497165,1715761501,393169003,-1963198433,-1537277311,1503508339,-2122870711,-794694907,911016003,-112407077,559899833,-36814311,-262801029,-1670482559,400865377,-1459259435,-1510041693,-308960393,-81833093,-979226359,457288507,1951481795,-2110662101,-1763016749,-43105525,1374947623,1820691653,-1277324167,-1740705745,1275784125,1627090839,459003787,715421697,-1815928109,-266103187,-1335277243,-800478339,-1801845153,202937135,560430121,285801517,1692695139,-736120671,1820690129,-1302938035,1558711473,-2036733077,-483458347,593715831,1372981267,-1163082581,-1532750261,280226397,-1814033527,1511365429,1082222099,-279638585,-1191444847,-1475985289,846371533,34711015,-727489267,859809161,-1752341771,-1017376627,-784138963,-2063859537,-1131338403,-584295071,-1951990601,-2145805823,281934169,1118686713,-1599194129,249633361,-595114299,892838045,-686669309,-273923773,368119969,-2055518059,1624928935,-1516378389,564372285,2117242455,689944007,-522734539,1903720163,-1681527147,-541931497,1382994107,-381005167,242427197,-1450028415,-983111137,-409665929,-422662809,182107025,-1638877835,-994482811,1740137383,2056724847,1477755029,-1167055187,419137401,695970059,1972873663,940177973,386551197,-1519514231,-600116681,-1577817643,-1253019133,-1267892237,-2132048113,-420467737,-1580023517,327562195,-810225931,1874100569,-1281837401,-285218291,-480283121,-1874835609,1812989227,-1882979129,-1911165299,1105245145,121639077,-16431193,-1281120323,-1118190227,1353766967,-1975275631,1639686015,1692729413,-160077553,-1773873615,-2125826039,1074714925,-1898660477,820391093,1468119923,104475443,-722819133,2041340007,602786789,-790250211,-1696389617,-1227361735,459266549,836695337,615642015,519168471,-1709015699,1314442791,-1471738387,-790390551,239883297,-1255682775,1208916903,-1223845581,-574275289,-1053238993,2067464129,1584241255,1840550891,1784407261,-1223744763,1120172837,1903255469,-901704617,1990116219,-1321959327,-304563415,803732155,654223067,410848041,-1184350053,1802100531,-205699159,262939969,-289252931,428999103,-1062128893,-1316197175,2050644781,-1925666471,-2097784195,-72415307,-1608286935,2045665503,286954063,-411300709,-2128606505,1588063097,1649739975,-1129056627,-889191485,1844928337,-1953269109,2136113985,36168961,-1993594609,-1304699357,2020943677,1399051999,-1078953845,-625324035,-36054215,-372769439,1221354285,1652803581,-1178638113,-981571651,-305328491,830001705,-215081365,1489993605,-1631738467,-1262209067,-1104290391,-1254890551,1638923789,1766898913,866193687,-1821795639,-97432135,-1159320319,1570045057,-531747725,742958351,1431115211,936538489,-652714275,-822317437,515622045,-1184255365,-901445547,2049338415,1888043931,1136013857,1855306381,671824639,-112274641,-1509215609,690131513,-1666288491,-2123877745,-540046169,-1290036549,-649345319,-34848767,-1587641373,1143275223,-656966783,720224605,1597135355,-491642403,483240047,32350587,-1744497017,1980385031,-1665278871,1959903713,1997560317,-763055767,94097527,949205709,1791854859,-606016703,-1955239635,-917745439,-1320006907,-1849978827,-1325870511,-1615323493,-253647865,1842889499,-1860281023,1618780371,-1776078481,-528303255,-1495376475,1356222775,644783779,678524503,823189963,1264087779,-1679868153,1570976897,-2050182021,1113406427,-150647757,2093885173,-1033870813,1170951045,634105819,1602677131,-1840293639,-1755672967,-1170212977,-1114231601,-833082555,-25089833,-777994807,-1878244701,350954805,1507346585,-2037979599,41082869,-1009921439,-38845773,-45844511,-1709517139,1476675299,-2134208121,1930983453,1266054719,1313721369,-711776059,-1336276211,-410264339,-1890205091,1196142893,-1168266951,1527856323,-928196553,-878220851,1544780333,45798113,929773177,1606803879,-1201516707,1044955451,445033403,2138378979,-550782527,-1347379107,1961923525,1584802249,-1615724833,1590965343,-1111819031,1060275789,235916529,794324153,1447723331,896337219,-2005594007,-1115118725,1436893553,-731115279,46967593,-889612933,-943380905,1616412725,1380568137,1795389983,-1320729751,-1113916053,175365387,1018529237,-1318714013,-1595145839,-430233313,1793665117,-245781555,907975555,326390915,978907579,-1519989449,2828981,302077045,357587419,1312540439,915169901,982679905,1751951517,-1246587833,-551215487,-34203239,671813135,-305622369,185761453,-348448555,1960558743,121747645,1808271183,425233949,81437239,-1378857301,1188894129,1555808027,704657529,1954293957,-2091295601,1607201701,1189710353,-1905784381,1348020797,233092941,582920871,330714895,637595441,123211969,649360887,296567367,-2049257553,-528929073,871402281,-180302161,1908523249,1734527963,-2026483919,-24551601,-321864171,2087702055,-1874319983,1889180821,-1231112383,1846635023,961198729,1495079181,-2057808515,1783940589,-477166479,-1033041043,-2062973741,871333087,-1343245719,-1582668357,-1174590745,-1676934379,-660691013,-1743366889,-500390143,-511138137,-764046947,615204443,1754830455,-104917101,1889874939,1844994255,-845385283,-638609217,18191199,796837331,737033037,628610575,-561575603,1936986203,-924941087,-1998178611,-1038609679,-1165758525,737299165,806456577,-801056613,1364005611,-1693077683,-1398261819,1474674447,-1402789333,-1604809353,363844061,-906259817,-1554686183,970372627,1061960283,-1517563871,2114812781,-1490881265,-402194047,603206439,1967840045,-2055461167,-1713854515,1592840865,345308165,1093548573,1105848997,1680645053,-1398453255,-1742790405,598641857,-1734645631,48905067,1608741527,1299762171,899184325,-1398923699,-1059608125,-1899322339,-1713588953,1761174105,-861373901,1223627579,1205350193,-1039998435,1263223147,968130999,2041624133,1083125177,2013491479,704011739,-309563985,-1636469249,831916445,1901182757,-1378036849,2093329011,-1791350959,485196639,-1442946021,2086567883,538487683,866433335,-2088998997,1551519483,1641542519,-1464746211,762994543,-1123022071,1749343445,-2130780997,-598885595,1933175583,-545522017,1166666583,1639596983,196368589,1832027143,259695327,1012623797,-1787196331,1592552731,-202392679,374507,1999405467,183609225,2133761095,-854147623,-1878369601,-1748239495,-789900599,-115428027,1326400711,1936527529,-43940417,227819661,-2145750209,1216638667,-293176853,-1095848541,-1106638303,-2061541889,-833334113,41942155,547196481,1206313325,-2032508087,1806471879,249102679,-924352085,-688756585,-995033153,1080473977,404446019,-1408951457,-2092412365,17618329,-241454171,623874445,1442666073,1798347893,1148223385,902413365,1331944053,614196055,1986722515,1769599661,-986974911,-923606137,-1036510431,-243435741,1679365807,-1423904307,-1891969,-1733518313,1815869517,-718585333,184372609,2079054101,-1191594865,297629479,-1378210345,-822618261,-245359629,-590648751,-1364108011,-27891893,-627576993,753186325,1533982469,-1045275787,-1533886037,-1628891659,-660547245,672941887,1485443319,-798983977,1839060511,-1789572929,303775791,-1156359617,-209043957,-118505195,1148045663,-2084560289,-1156526453,1281910685,1516969703,783974749,-696017937,1517475309,691760203,-62699425,-1522215333,1247102239,606969765,793550717,1333486361,765962847,1520623023,2055781873,-1485907107,1594100873,47426151,-1772563215,-1576769709,-820261571,708823555,-1041751059,1871642637,357372415,1993935505,-1555728935,624708939,-1711862445,713823003,1379592891,-1710667657,-680211551,887432583,-1341955969,-1380676577,677093455,-1753597303,-644266481,-574164381,810791763,-954029509,-1261015649,1773616759,2103881765,-524873535,313352743,889682769,2117181781,-329803911,1788477989,-1526495971,-1978103923,1349222605,-1042956473,-1207881285,1449675355,-655733765,-31278339,-1709000093,1576732833,200553863,-840516737,-417335181,-470762353,-773077711,-840990815,204770461,1308369145,-472291653,-706219047,1866111299,1881455117,2066966603,1812256361,-1315356109,-993428133,-2008725941,2081041359,2143479283,-729319079,170929935,-513668529,-342672351,256971609,-1815231689,-1446274129,1985631549,613603275,613803643,-313578675,-391887375,2028750983,-527542173,-1588773183,-699186271,-193106701,1450984169,-133333337,1039566121,60877267,962044109,-1476488335,981611999,983524551,-1231952337,614430027,1624122625,2111838617,61951915,1843783869,286493685,441060833,-204095601,1444135511,725388595,-1805997889,-872620113,1187103431,1524317799,-270627305,-62717177,-1820573197,-1026685911,1668514727,885587775,2012094327,-1303085455,-918976467,-535058033,941186617,158961729,200156047,1063324339,-66711149,-227783897,-1548064313,594992073,1347944091,-1056104801,1146469307,1486395477,-1975933647,-829654309,1758865867,-1001224321,104728457,-765380129,-316748961,-2135276649,1152102533,1674744391,-1786631727,-1803049723,1432565615,-456325247,1353194367,1285938051,485433361,-1759326661,1846661375,1404096793,2104520327,1617503411,-1763108731,-1589046999,-1006244489,1630110761,-324774687,415299877,623213601,-1074204447,1888396859,-1522259835,499157125,1262708305,905116093,-487946685,-1827336937,1259252847,-1336191691,1010263301,1489620337,684680845,1213614901,425995513,-3858495,-425182443,784291327,329741215,1452824857,738338821,1100085793,-692244107,519726709,-916644221,8294843,1972506505,-935679239,-2085672927,1618203151,1407486861,-1048148913,1717092809,1293626089,849269207,1491277699,-1524807079,637300157,-544658925,-1507215349,-51237019,-2147085921,242163553,-1586125829,845219467,2146774223,-1185837321,-1719576275,-83498987,1086864241,431430717,1151301959,1104399055,-1213693671,-1749815679,-1511021323,406267373,-862225837,-209958891,1684068243,300526253,63230039,1850377467,-564054373,-1068995541,-759833173,-1578339937,-1441279803,25922751,1892012975,-875740339,285072577,-1968664853,1077882217,-205591361,2074700955,-1340475689,2023552913,-1992158783,1352391755,681340049,899431351,-1542125011,1632593025,-1555036579,-623765651,385901909,452804235,-401233711,-436295585,-1310692625,76336163,-1213295753,643024853,1181026279,-1830128103,1592766119,-910947857,1257804123,84907805,1116370639,-1870744201,1857806779,-253659115,1653810749,-1431034713,416458621,-1376612461,263214363,27519733,-1332281609,-1992465229,496921127,-1957971729,408590937,-464791335,797574053,234217809,-1986259123,1723729613,1169241273,1962738873,-1891513091,687423363,62474693,2040179127,-1728254195,95587569,222537839,-723019389,-1324362585,-2041414975,-1862706741,-495556409,-874949385,693734573,-1239201187,-957907691,-2017111113,-1409591037,43068457,-1997882275,-353057821,1802036373,-1284002665,1977895307,-560397199,267585761,483161921,-1280713095,1431123475,1075431537,1555502819,-130006033,1126989627,508928061,-2020894809,-577660299,-2110527241,503575271,-1790923165,-914804191,868907995,847905977,54307559,-2080855897,973647775,272797897,-2110781501,525194745,790323657,-1364103531,47403467,2141154091,-1154115377,-1144807923,666748871,478638463,2939591,-2133867979,-942184541,248866003,-607198323,-339890505,-233182903,-2094844981,2082314157,2060558799,1490476883,-2099219709,1570704659,1964248501,2005968235,-1185098643,2105450283,67404727,-1000085315,2068133123,-56878469,1821311691,553719911,-823548309,1303192811,-1571591311,313727735,-1397761275,1297382867,-435072357,2068231195,1591417635,-2100081975,-36498121,756437007,333620021,-2075559405,-202524355,2082263269,1205284183,2145538789,-474940089,2026157335,-1169311169,1157553573,-1198906797,1960039881,-8831401,1894532295,-1483202039,-186461485,1467979837,2045017335,-2016870925,-1667718615,-390168049,860692007,200749069,-1854656789,1656000741,1016422479,1927709927,2082478059,520292419,1309161,528266069,870458597,1139070027,1680748043,332499675,569621843,152250587,-924857903,-600105123,-1383562337,-579234631,1494445893,183421951,-1013753023,-11768651,-227188221,-126472369,387738359,1253248327,825055725,-1737788639,-1236022861,920609863,-2077159229,-1320962559,-731752815,-2078165371,-1051321977,-72986311,1679750719,750344383,1014103509,1607486783,1686116233,361355831,223731513,-2135776941,1333629477,-1123653835,-278779515,362042761,-1115937859,554610297,1256267311,25512285,-711721793,-424227549,-346674391,1714162033,-719285909,1294693659,1612049021,1054239007,1854936511,-1249613157,141771573,-951987147,-1294775867,1301315641,1238550851,-1382287649,-630389885,721550715,-1884737639,-1401671811,-2486275,1162882627,-1827809393,1908619443,-943706773,434516543,1475172013,-1630132159,-34794275,-671794329,621762035,299129555,-1936236777,635709211,-1513884583,-471903213,1527324739,-1272594253,445547561,-2105069397,2039246205,-228005073,-970402051,-1556422227,1857452177,-1918487635,-1702171775,376156521,-129174709,-2080817081,1626028287,-219438501,1274052851,-1700627515,560730577,1040598215,227411949,-408231205,-2079060305,1087391461,702482669,-238839711,1615430725,2055963313,1563554973,2058560131,-2036365135,1405575553,1188235883,-917397907,225996123,1565784977,883531713,1815598645,-976163743,391068091,1381479229,-71755949,883608383,-1190775959,1176080739,949526997,-1398192313,-1652105505,26366787,764991439,-1920929351,209580353,543845403,719320201,-718280791,1007842709,-538563761,-2145009057,788278449,-1378176035,-245970091,2034218297,1167291051,-749871223,-1651570753,424009063,969614707,1208500725,371385361,1286317757,-1722782485,1864304365,1577086437,1848608997,-221958605,1868337863,648610619,571714973,971748145,-1589512455,-239228893,-630583855,1756464219,1583950683,1251874581,-788656827,-686188493,-782783849,-763295009,368124527,-1978911753,656925677,-1411025923,1696743219,-1419516815,724242077,399310555,-1821349025,-1181125225,167209905,1388296671,-1455125193,-745313103,1942308089,-1674316259,392378887,1937191131,-1775683485,1815427223,437713997,-619793431,-1572473255,-1624203191,829123139,-2096238245,140562579,203287165,-2146550257,655133813,-1462113113,2067799689,-1365936413,-693073249,-530761003,146925829,-223752435,1784208111,-275891519,1655951299,185450785,-1274878337,711653419,-724867045,1981821375,1000518267,913591071,217087859,-2126520075,-2000013539,-1813473517,-1961448383,2106009275,872448683,226707077,629886973,-583990887,-1134537407,1484619523,-1759621467,1186824227,1126703465,-5629379,-123658773,431206097,1671080913,1065802937,-1358587503,-1733994405,-1890841433,-908922513,938022379,-1482778809,-1663169463,-1241981677,-444962887,-953149343,647032431,-183086979,-1946239937,16323557,-527850705,1815664081,123619109,-1097771721,930213789,422235175,1220650149,-1591675583,2059784457,1361012771,-454132035,-440197195,1834424809,1902562143,330467183,769267151,1221485529,-436345805,2140227129,446303465,2009474543,1910845091,2103020811,-2110025531,345880653,2125419801,687644821,-510447995,-2049732235,83025141,-460792151,-707617163,-157187843,-451157879,-1993164831,1623612195,2122976195,-1727335575,-1645035267,-1403227379,-377113887,1218660747,-667816645,-1244779681,-226375881,641624129,-886105519,-2123815923,498996185,-1442210275,1567349023,1400649071,-6768505,-2089080279,185412909,-1911460269,442651649,762945147,-1953220643,-1344285247,-1874146277,513690269,708123755,81612223,1562098787,-940721501,-931624481,1638135369,1400825855,-1330527111,1725578893,-2109648119,-1900890451,1995923721,1795446319,-373890599,-442112659,-294007581,2121975139,-1372214591,1163771455,225820921,-1378835037,1563085177,-1542333947,-1878994327,636892505,1193868499,-739301263,-95912087,-1381677347,1037021241,238752047,1206234945,945126547,1952855829,-492109133,1228843525,-1324558559,-1040182699,-1833701901,1657485249,196744671,-437097271,-1899727345,69409793,-1660679405,1953717483,1104807763,1360494391,-576610107,-1639819473,359276499,-363863059,587027655,633956879,-900557449,-204267675,-1447912207,224258367,-1870876351,-363238271,-1797062311,-1016215957,1543372551,-2139957491,-209397669,-1768375485,86931697,772185131,-1275632139,927405087,461020895,257217501,-1977492139,-1253425589,490736359,1468814845,-1100872385,356961469,-617866623,746617743,-1489992855,1644410941,-499817891,516766639,873066817,2025750627,585082063,-2000836807,1529730383,504358809,-1506901881,922252363,-241465493,433585591,-1286436369,-270662175,-648777267,922466609,-935600265,-758356909,1758392641,-364799115,2034603639,-946200543,1471397093,-650703189,-1381733387,95156961,1575243771,943692593,-672772579,1360183461,-1507443323,412171257,-419895211,-547513623,2053482893,-1470158321,-4025053,1070444545,-656493139,90824725,1777797317,-647923927,-1915317187,43940233,-230844925,-1455154381,-1235875819,-903022537,1314671249,-1927012075,1056453141,413181003,-628963365,-1072731409,875942761,-1177866093,-891133393,-727948361,1733750891,2093136153,-737748071,238782093,1711218067,1341085057,-371772301,800383475,207533129,495889987,-2108472533,677314275,1957724437,-269793063,1073486235,-1074416837,-1681241871,-42265059,-1679209491,-243792751,-25933969,-2080486677,-1410806273,1093433475,-828603089,-2048116063,1476224181,-1126213759,-353749243,-1228758593,-1542889387,1670627475,2034805059,-1855901897,-2090660239,-599171047,1430551113,45677991,-1089117277,356566101,1327117989,1106916993,-1844382645,-1760120105,1396149949,1685899333,1010884825,-949327677,453263483,-1272587163,564709191,-810312991,410883149,-594289897,1863660577,-653123891,883201039,552928021,-1247941657,-1830098985,2082152345,-659015485,647428443,-2117247883,-781105179,1680307917,1525236581,-2008527407,1122835003,-598360803,-2131547155,-590801219,368329607,1467867807,162129125,1894973091,1630289039,-1623423635,1046218949,205807819,1563375875,-951539955,1926212783,-1605184679,-1649292727,56086399,2046304219,-1863048007,-1936246777,467639211,-177895131,-586196481,450749881,-569023037,1322014491,1231771987,649462041,1996662645,1329640105,546447665,1505864695,-1174301065,-1103249913,-947445981,2014157097,-993848417,-482504541,-555535903,367009047,748052357,1146728173,1542189045,-556306363,302789709,-549570615,1841356701,-1852213245,-225028191,1817413489,-538851693,1605652407,920529859,873180837,-352882527,453235337,-1745636985,812031,762936747,-2094399443,980536735,91431679,-906028687,-1965051567,1676837903,-960713895,-1936341507,-1124487899,-1411991281,-1643126805,607522397,1491702153,1314024005,79659899,-1185839623,-1758265989,-1801460791,-1927025319,833861233,227496321,1009808999,-1850866083,941887073,-953376161,1129869599,1667977231,441827091,-210499277,1191735329,2063216193,-1091342393,1613747135,-470330053,-2097346199,-1300951123,593003105,-2015870027,-2025495105,-585423879,550969813,200194839,1715301483,1251581065,-1426812945,-1642730601,-1323411563,1057509897,994209919,-2031598709,-89481251,-672799045,915369399,40675497,733311945,-1782240553,-1015032303,-37791141,499486337,-1794160199,514940193,240759953,593372735,-98465911,-1354124375,263353893,-1922366851,1819321617,1466284545,-677951545,216647779,-933010047,-174235923,784570259,722784045,1663970495,1820091843,1526571045,-1055027429,2073991335,-382157147,-1939031487,909658475,-1453543703,64985563,1290698277,-1113826843,1674717857,2062378629,2011588635,-1212316311,-75362629,395679739,1580035873,-119827679,395893545,878506021,-1046828213,-1855706055,1200856255,739796891,-163935481,2105407193,-656808903,-921253529,-150933421,1587697619,-197881477,-1489264771,996416847,700501835,829021603,492213497,525269447,2045840171,-1072368155,-1608781849,-1977386801,516990177,335102689,1368805201,1664220155,1721160169,934268905,-142906917,-949803061,1053419183,961056425,-896624147,1478229629,-1780387575,63197885,1309965189,582616091,-496755271,450613451,1432965247,1965322483,-1418452761,1427928479,-1083258707,37304329,-91333809,-1743970293,-2051866583,-1429223343,795383153,2066467155,2007968413,-1927845349,-63481095,-1774841141,-1207166345,580770053,-1458344879,975999117,1137097245,-1411027973,1662288869,-673192575,-1403722017,-100560165,2102454293,1253408325,-780825183,2091233395,1642336575,-1003948901,1557352631,895013193,1511304775,62810321,-908855665,2061536715,746441919,-150099529,-1576948713,466185495,1159303821,-1847259719,1424504705,1502913791,769462935,217059923,1698926867,921316769,1213875325,507974387,-869424551,-939660857,-285249949,-1012359127,1940604951,-234185567,-1766749653,1642486357,1513437173,1542285155,1059014407,510705725,2086500275,-597799973,-1295611933,134456261,653615595,-1208999275,-160513399,-509202749,1699248111,2025497383,623777449,-187545699,425464315,-341768693,-1735117561,707112145,259352129,-460537695,-725942465,1087106611,209976013,-1396231565,1237415073,1003527975,-41854101,932794321,843563559,85732231,2087596539,647239899,-991139597,2094960259,-144769587,2104040601,2144683117,-1971317511,-555667849,-1850607375,995025135,-1215165279,-713327571,-1642734631,-1391143773,848589337,-1345362803,1490206501,1946404605,-1543648551,1796260009,416895349,1668507741,768174073,29992759,1577160727,-1197766267,-345908879,1695220335,-1244824439,-978623587,1998142923,438868687,1607212223,1366553607,-1818581851,-1917872041,54181995,103757249,91396191,-1502475503,-1993023883,-302442063,2097556867,546748129,-2034171445,-379782263,-679061745,-1262614445,672456151,1911612955,2123609177,321258311,614578031,-183341441,-1928015477,1372144903,1960016847,-395963839,-2059870055,1495376161,-1361432949,1982202201,-1188873739,-1213046073,544429319,1943261825,1470222811,1087975707,1931970603,677215593,299176063,-1154576821,-310362643,2120354921,1461552541,1395635813,1634750169,340344277,-730138457,-715454229,1269230009,-1153754423,626778661,-1285783143,2118172619,-856658821,-1134401447,-525268051,-2022310375,1400725703,1281185519,-2080960671,-787288843,830682125,-1664164307,-782455609,458467377,289913415,2081888121,-804860959,1848871799,-100012685,-1580951229,1915375787,941017191,1606386241,369176015,-1486422113,1528329619,-1563445269,-214697779,-653011081,-1515768585,-2071553769,-1599276807,-1139935785,948393651,1028497935,-1278531193,-552355257,-2010448453,-1099414061,-902790827,914053925,-593659551,-427016083,31074905,-1710047921,1145756813,-1898556593,-1728597813,-1384632863,-1391695937,158303577,2023497265,1367532575,1750031443,842466801,-1167610299,-320695395,256483817,-1423617245,527791771,1488866699,903188861,1480803443,-1471968617,-364898867,358071775,863177143,-981243119,921341539,1630184715,918170191,-131053593,700517883,1098740339,-1830453015,426937429,-1352945459,-1397441365,-1915824351,109969473,1421029903,-1063508601,1264854233,-1682977657,849150697,-500519871,1603490661,-1052196811,-1891419467,-2034005363,-1883409383,-552509689,-311019783,-334262471,-132095933,361778679,-1259396739,-1082133929,1761578999,1648712263,-1221943035,1337044275,434281329,1816897609,-619312265,-2075450881,1621438513,-50358827,-272214859,-974933491,-406923015,-1567147445,1987339599,-743971433,-1278047985,-1021012989,-1770932981,52769365,2131488603,-393215021,1189841131,292201465,1882438825,1420277783,-819487559,832741357,-1414390435,983964857,1873303311,-1796450725,672775357,-1313426391,1374571235,-210294169,344018191,887792025,404218431,-939055679,1296042109,-1494355593,1334317373,1847879649,404791441,101588803,-1993937379,1524299841,-572447411,-396864505,-17494341,-1969579583,-1411083011,737265203,235657243,731471645,1647575699,1150662287,-1056633661,847853875,-821370755,-753362757,-204240575,-992442507,1671788359,70945977,-1611838681,-1813954697,-1458706055,-799318621,509666097,1793341655,-1387240095,2033196073,1166641459,1217337915,-1425817599,-2093819555,2136779763,-1659002075,79831735,1702208029,233231681,-1380243243,-629796595,2103041157,-1768070309,921057435,1150216081,33916685,-1192891695,-23355861,-1699898461,-70960727,1364002655,-1742759175,1123524467,-1895441237,-908417049,843421239,1988727285,1104030699,1185281625,969995415,-982874507,-727592813,-880488461,2087764709,-821294205,533213093,-1884254915,-1878464131,957962089,-1363521771,1235109199,903409303,890804843,-498956971,2101347197,-173684971,1454485935,-1408694291,-2065190697,-2029308053,-245131505,-1051535977,625282983,-653839525,1740442283,-1408755441,1202028547,-1032327935,1332297827,-2029858915,-913534551,732911005,69095455,1646176417,-892233817,-2042905353,-1141686023,1596914643,93818307,551322463,1832216095,-859555703,1717310307,654147681,-856164461,-1415627515,1667197767,226277525,2000341097,-1271126541,-656420619,1309668365,-111137583,421449021,892661753,645358341,1745253449,2143100229,1489854931,332534909,1161799681,1445953655,1218163745,-430994671,1882423093,1155870059,571044463,-1707578837,-306021339,2070207251,443252475,-2023874153,888112621,1497508109,110478735,1390261749,1507169695,-716002535,643785655,1082923611,-1374228283,1679388363,-1044805615,2073327473,1345216101,339207503,1638937395,1995574955,228703451,-176793561,748021333,625307805,-236656171,-340518141,2103040727,-1775297319,-284215403,-804613681,1709905851,761507215,-350740003,2102897853,118386657,1154720689,-1566547951,-821866625,-497515259,562397017,-1016315763,-134066891,1595625925,-90828649,-1843680761,1446509695,1973593437,152517709,-730305743,767937263,344894383,-1565918207,1172306195,1935275399,386347143,-654082515,1951476647,2097782757,48314065,265705501,-1053596841,348080087,436601393,-2139459683,-432673201,-558826853,890587219,138403755,-1720329451,142773863,-1286368293,873491157,567698419,-2109965523,1354435109,664252375,1469703131,943648535,-1413255385,-1414086263,1801216367,2114025669,-1834970767,1806490857,568065925,-228259475,-951169171,-431955117,-1374890947,-868070897,336365451,1117209665,-654136101,1050856745,843833899,334369317,1927923879,1383402029,-2114994701,-1566580951,-1376497625,-2101704279,-1532757685,155451229,1328724663,-1954484147,-1105160505,1300972627,-231518153,114804505,1079034141,1974926131,1076269297,-1544134037,-2068335899,943856755,2086298155,300136481,2102266623,-1900761365,-129495171,1123112673,-226528407,-1921880353,1405958915,-958533571,348625609,1015255059,-513248837,-1878843495,-1123041365,1425069187,-1894739117,-1992788091,-634453213,1148673723,-118690457,-1965652771,162336863,1091458363,335427879,-1755661057,-970041607,206592787,1871431169,1098197033,1923104925,1995620737,998161525,-41466077,-1135620899,454238655,-2062740535,495859035,1666284497,2056817811,-1254766317,-568042667,619223905,590451585,-1949593727,-516250151,-782320365,-1563454009,-361590959,119506709,-1495401817,930299781,1867502719,-502752707,-1564045639,-1715181781,760317673,1131464073,-1598469309,-453218781,2023960901,569928239,1006880865,475593307,362610227,-168471385,-1115087337,1964431669,789505517,2065286665,-652657841,126168801,-1194771217,-1547711057,-2057768923,-1845603961,-811941647,-1192134479,-181728431,-587960171,873183109,-314697023,-2008093035,-166609381,114842833,1723212837,1073721629,-1413117173,908842821,2017628695,1518724347,209505399,-715906475,-2036701219,51979059,1733717543,1532656317,-1859075981,397084795,-574991699,-209039981,-51680563,-1011795341,-1468745629,-2030714373,1888652019,-1528753009,-1257435943,1808193385,-882317037,1419658935,1664435987,1053681299,1071472743,-555438529,2003573865,1522397707,1818124803,-1468699177,-1249995609,-1991131897,1431395581,1353749785,2030913789,1462999917,-48119519,-1290870949,-1788204237,1832545765,386240693,1851779629,1527245891,1697174705,1537501093,-2037304335,-1494656965,564125463,-2031094899,-211881169,-558887045,-121059725,1163732893,-422290613,2142637903,-1985490857,1751074393,1191458275,1701736909,905052429,-1557947533,1991437999,-581639337,-266742203,809682727,1881238909,-1566841253,-1456426045,-1133896197,-623465889,1129034549,518193763,-911063879,-692177631,1636988841,-689001065,-809041219,310718683,-431290711,1201846107,196370279,1860430973,901496503,-1192853699,615242911,-1893605163,-114292389,-1061767893,456162531,207072339,1341327045,-599647279,2016454477,-1036488403,126788855,636541773,-405916931,-1837762833,2124877829,168656005,-76904393,253055955,1093848237,1847334551,-166736057,-2014200699,261096827,-1202169467,-1336047281,-857605123,140970015,-1538870571,495391283,-1900256073,-226987115,-1041451121,-1677233985,-1401201761,-692290513,-260218933,-1222868027,-1324394387,1719056105,-68996391,18859455,-856685959,-1590509813,178044377,-1200326067,-418794539,771611505,1968337561,2011322951,-1382700005,1029077411,-129212649,1576492633,458479757,497984075,-1272873869,41008743,2039210173,-833594897,-46087239,-1494079341,1682317443,939601711,-708749649,-2011010869,-1962005185,1337772649,-208838735,-964306335,2110028823,-290484785,1200065395,332714753,-110529505,2051481379,-749865767,-1559871761,-284290939,-2074147233,2057013979,2042229259,-1631424023,-272316053,1619266245,2095038543,1170949601,609836511,1730310505,105143473,1914826489,298900293,-1494475917,-687968095,-627783605,1575625735,-1226573047,829843883,1427371575,-1853209647,208312571,711069799,-1943833797,1801612891,188469949,-2071396517,1043657557,106165415,1910736507,278049523,253950801,-1046344217,1983847423,692568651,639984229,1616866239,412843347,-2008980463,2098257399,-564312429,-1111175439,-1007775349,1670750505,-192397025,493606819,-1826971463,-1188160223,-2105884543,1223989265,-1305727793,1915889001,976670301,-467215149,-1284762199,2097309251,680033311,411922255,-309904531,1229908717,-601745791,1106501645,-235201893,-1668271559,-1093563269,-1352777445,1426369933,-1507937565,695380551,654947295,-301953845,1713102205,-1351945929,-1778209831,-1990164353,513038413,-1657685449,733528447,1856508561,-597972571,98500775,1940150847,723623093,-1414018945,-1362337301,-332339981,2114422439,538575329,-1955467637,-454807759,1087811419,-829217813,505119551,-1606012969,1609506419,1270400133,1332650469,-397972115,-1453226435,1102341545,-1434525889,1869805705,-451172651,2053529459,-687523559,-1746401641,34140521,-1725847337,1892944329,1892624457,811503047,-1884381203,293980747,1722060341,-1116409467,1218229229,669594917,1067493351,1282396831,1097690937,2007084041,388383623,-786701507,2112103689,222049725,-336816799,-113013689,-1045493463,-897399275,1335555215,1177453673,-1745375029,108539229,-1142244535,799938047,1311159321,-822443855,-1609085281,1512766163,-1145445327,-1456165569,-1051043359,314779121,-906985949,-873884825,1405925317,-1523215157,1622929447,-762034853,72729949,-1693392335,1903316605,125808135,1333449909,153314083,-230549807,-790073449,1274449317,667809253,1120609561,653341149,-1526645903,-203043753,1942675671,208667121,-1919942939,-391662339,1515963741,1056640591,-731314141,999661253,-605341345,805567683,1439171105,-1107004461,374375193,-3183347,-1962871889,-344019597,-911355443,-1297526485,-1978648145,792418039,-523563609,854442555,-1754575639,92709543,-903804909,1050246927,-815442639,96235093,-1779428175,-992035491,-77428317,37399875,1514507813,-1938304835,237596757,-1030854909,319642045,-780200867,-300789475,-192167675,53324975,-1415276009,-1014975479,917249827,1580257835,-684279639,1234554271,166668995,887156889,-1680577733,-1764999575,991276245,201749901,2081424753,-2752347,985977817,1345383679,-1139276345,-853300151,-519809579,-476084645,-30526181,-1952382469,-141996711,1463127299,2092789755,2030275331,-677629101,1340996793,-1855225349,690147409,-1399124419,-138141871,1826913769,218564389,1214683165,1200439385,-1971569905,-502686513,-451523081,458819743,1917161483,888438805,-1610251991,-916259631,-2117835615,-2069182315,-396955075,-1539704331,-632711155,362671471,860856523,-1329197813,-1702713385,-136748161,-518806025,-789221743,-1590797117,-355706657,232722661,-1345407795,734025957,1628224543,-1961669555,-1611228529,-149064621,-1363119133,-587688523,1143803751,-363931275,-559478657,-1474348021,-1700836249,1347505533,162985481,-892120793,-143310985,848960651,600344301,1108526913,-556260969,1065726667,1654509901,1729678363,-1929332533,711221181,600443477,-1519589349,-1862624907,879827629,-309399027,1135979857,1283868381,60228023,-1359865211,-1733596291,505293271,1313699071,-1086538545,747641885,-1457107437,298850341,1960948113,-1924045353,-621457733,520374089,1373936851,2012515825,1486064137,1045169561,-251387121,1184508261,856968549,2045099873,-629654759,191911515,-63571577,999395179,-782279769,-881157037,-559057535,1308482139,1426798505,1400104745,-565320999,-882342253,995853623,-175669345,-1832116825,-1766913477,-1110903611,-734129447,927453545,1275454501,382067565,433494037,1469782847,-2011531947,-2129828543,-1770860393,1272755881,-2023965835,-652786753,-2040455183,1383615521,1473165343,-996496497,-2039112161,-1814017489,1780916095,229770391,575397843,-1554765175,-357245917,132183605,1111791849,-1517056439,2053287817,-453833359,284683043,74371797,131343237,-127371245,-1834768691,907814895,1921145589,-870168357,-555906417,-1565252457,-523335437,394362065,908725425,44554123,1496869717,-2029041021,-52091975,663537763,-1950846165,-91139147,1527713941,973756467,2099584341,262765295,1069968445,-68371251,1935652847,-1859818909,795595781,1345138657,-962393805,-105817819,-363590605,871194739,626506739,-1561008903,2078599937,-234794625,881714423,1337176673,-1635472779,399718559,741006909,-1301999425,154060567,-569295101,1044402137,-264580407,-1511717547,1589732487,-357593353,-1412205953,-956151815,1724093055,-1312323621,-1566009845,-367853671,-2058678819,41643143,-183330909,-1751004153,-10867371,2035722857,684627207,312121035,1663202883,1803738841,1559573247,-437799341,-814515953,-1508822481,-1292500779,884014011,1331646543,-91087221,-1894533071,1470227031,1158901247,-23386349,2082657017,-766927769,-558130677,-293684631,-1040138799,-1095874601,-1544628723,-1792588913,1153740231,-865236381,731435629,1042254787,-1995353505,-801693371,-748051507,-1132374999,-826494867,-974967261,-974495405,-1633946201,287111241,-2064577357,-310837261,-1561582511,1027904869,1638710427,-1819076221,-1636814043,-668069019,-1191462205,-1767721195,-1801318155,470257933,885292583,1345769677,1053224747,1988137867,-212383039,-403881547,-1988802297,1930277135,-2015097319,-1923493631,61399333,1146472783,1544816609,655488845,209942417,-1960879537,-1218297885,-1823429085,-1780955293,-888503953,515376779,-1011473733,-358447267,1415930625,-867728067,1803341967,-815720777,-283462979,-1043525395,2115148543,-142696625,-1710392711,-354161423,433666735,77350839,-1339505397,1151381381,-1855722685,921355845,1870625657,444858731,-797333325,-483202383,600735485,-906778187,-1676996185,-1699464455,-1366556473,1770480213,927560671,-1219046111,-1513961585,-1766075827,82578057,615001649,-1653528303,1883204565,1405168081,-1365178727,-843546529,200558203,-767574357,1459566689,-1915807693,389940479,-390426479,812226291,1681246117,113694805,-391824583,-1210871167,-1556631185,-1654504929,-1646046735,-1223100879,-942970657,-78483727,-521006819,876739145,-677942087,375608385,-751761873,932013049,597626937,-1612536895,-663935513,-439103567,-1259805865,631619977,-1522163717,2114612351,-564540981,-657481609,657478611,-707798773,1085460181,-1691769233,-881979139,-1491223967,-1867019267,38263107,-1157021139,1557657671,1726853179,2127407507,-264718789,457463473,597168063,-734897625,901587781,341255647,1702355251,-1587375459,1317524527,-1216608963,792479205,504453353,82099127,1155559727,-349738167,1760886329,-1403057839,-1822622401,-1107919187,-2114522807,2069574213,-1606282603,1372735075,-1005864231,-568827621,311403909,-1799599211,-704221317,1082221057,-297151479,822088981,-60247519],"expected":[-1739684137,973759307,1312704697,2010189883,-114661669,-1605258013,356969761,-309510803,827440579,1612148481,1582773671,-2045068567,827887797,-1007379705,1755333939,-1015999389,-441724567,-1291038637,353069993,-1167832459,-16285751,368949887,-1241739237,-1063713713,748632167,-1314862537,-259488017,-1768250361,872962719,-682330895,2018219845,1776381651,-1942210127,1519013129,316880699,1272201609,-1677566605,-1946165029,1375184963,-1879560771,-1250972391,287759095,-608547159,-54033379,-2136697247,-202062009,-1198059253,-1065947553,-551672737,2127092361,-1534374447,1137716313,1376700373,-1393350551,-1639512215,-1233481577,-928078797,1781995133,462189239,882177845,1903677021,638086221,-730042599,-2043891377,1370654141,2042039351,1089948945,1061176795,1646072699,-406802153,411934231,-732423109,1124631233,1641060579,619721135,1097244525,-1921029387,-1048854051,365163727,-900194811,-329825913,-79439209,-159233019,-885695971,532956397,-2032810337,-1926027607,1125015663,-1682507503,-784501555,-416712963,-364899403,458818865,28203529,2040120543,-534467365,-1482118881,-421066133,-661685531,232596735,660392251,-556234509,1464854809,816975111,-2066725131,997804261,-1973603257,165366479,596316075,968884119,929809907,1864413437,223730927,509268291,-2083723081,-100517681,-613557191,-1130038935,358968521,1518801917,853309923,1713821391,-234614937,-983982477,-797630175,-1655318817,1952704529,1619104787,-1555304507,429185091,-2095359293,1919054829,-805978339,34037159,1024997245,1075741487,478595991,1083074699,179198547,1552735355,-265607359,999382629,-1684586459,-684722343,1986196931,27933095,317689845,1676811765,-204151673,-558521347,242348603,-1611679717,-141861527,1431154783,1351191817,-718546839,1610876767,1385401333,-715412347,-1060814537,1436784341,911965565,-1886954215,-755152867,-1514672601,1745693435,-1219802695,2080259169,-118279879,-385955251,-1282761987,874530057,-1317217517,-1512669669,-1771377269,1085746697,25883017,643960249,386812739,-974846433,1832984785,-22066409,-1156135979,-1887324911,-53305777,1685004109,-1177148403,-148874835,1936953911,-773251661,1587149169,-717418227,-338379125,178858679,1952793507,1401285581,-1481891477,-2000172861,1010744565,985642871,-154078131,452023717,466630167,145208203,-284013813,-1883025357,1669792285,-339847149,-1409098445,-266196957,703218553,1867209303,66117933,-1445010209,815684665,1145565685,1291348573,-1661749299,-714822517,-502408287,1982485267,-556302435,1144889665,-583686395,-2041785021,-1847174793,1731965833,810118173,1879009145,-1418960951,-1352685429,-1210723627,-127476469,267774057,-642429227,-762577521,-1401793851,1870994115,-1440086955,1534544117,235277129,513344837,-47561947,-297530851,1851733749,761088387,920906199,218413517,1430183271,-2117089789,-1801952189,-1983194989,-167723183,909060467,57500889,1359420327,1997247195,893939727,1446988183,1047794235,-1137353795,761879913,109353795,1487436765,894994361,-615151273,81561811,-419006097,819203077,736829243,2131394481,-1418391215,1943858001,2013100177,1834704457,146741385,-1903659063,377102611,331590871,205164413,-1876582345,-1140795805,-1089640861,-621102071,-775464863,-230353101,1225273497,-944790697,385911195,-1396431541,-901166985,343658051,1757370709,-1089553769,-1909136643,232717997,-741895869,-878437127,-289129227,486846991,2132302071,-393658855,-1025263405,-466047249,-1869077681,468571535,49957447,-753634425,477810945,706659417,-1119829677,-1437029563,1688716753,-1140636577,1298040411,-188733485,-956277351,1515835807,-338304883,-1375867965,326396391,98765781,-771802151,208023527,1339752077,538782037,-1791801273,-585856309,-1463598319,719481543,-1710231649,464485805,-2121587367,-1009512619,861566009,931232169,30262865,-501584439,-1020191359,989534721,718148645,1016964357,1081434973,-178716051,1202548867,1728157493,1303840397,1903811799,1948089883,-1923176869,1285888533,-1357610055,375040285,-1836924455,-594832657,123429957,1187874115,-1083497549,-251471473,-1156823393,-678481301,285093585,-1500823467,-235329323,655735843,514977143,-1485964335,-2140455465,-1238208361,-1194813795,-838384401,-2040950041,-853526321,-1638368165,-591900635,1029535019,1575402363,769729071,-1434940335,2056817011,1528863219,1193991423,1184496321,641432303,-23447209,-524695049,64896145,2021156859,573584499,-707609507,-13751885,-1238981239,828904369,1853055787,689992315,1204024627,-395642473,-1411895389,-985895747,1825349817,609958907,-1470908493,-681995347,785692909,-649342451,-170916387,511621601,-1611874893,-1765880195,-521516533,1770289845,1450151537,518436129,-1116134717,-1270778425,1057129353,-512290059,-522814977,-768449855,-1133509099,1916306213,1696199137,2038894763,-1591615301,1528689535,1655920721,18646081,1292424621,-437279349,693539433,-909195509,338462619,824155743,127784213,-1690836395,256589129,221864105,1281085679,446657353,-1239699699,-506193125,7813401,1434283215,-1382264245,1391187355,-452416265,172028759,575875015,878784455,356594791,1142091205,1350831803,353602761,2045988691,1866603775,-994284187,-2084396181,1231179687,147635461,-575232465,1416602983,1138213521,761906895,1194076991,-872527763,1864557189,-1312892179,875196361,-510788061,850894039,2031369645,884126123,-621711557,989857163,-1189922173,-1098663149,349405025,-1145475461,-942084933,1124522411,-1183952539,-1588556141,75487681,-616768331,-727732655,1697932201,-1027186795,-187391703,-1056266341,-33081971,1290218211,1910877027,417017907,-1733714789,-585786927,-573785639,305013939,590041275,681775905,-1193251601,336802697,-283107405,1353369897,-755932047,209642041,2065713233,-486584789,1815774865,-9204761,-1561580035,-567349011,-1663374537,1442226825,2019097339,1231199741,1729447127,537272189,1299567383,1662131641,-1232438995,2085940641,1612541063,621580939,-309033893,-1515087791,-1646053,335637251,929991181,1147272043,-530104649,1653890203,-1548318693,-1561083477,1503819155,-1595413911,-512413381,-274145189,-1150848353,1257080617,-1511386107,-1743086499,253646743,202893887,-189786101,783442029,1465716367,1709751053,300461809,-537127097,1002762365,-1762663719,-2120569079,395063733,-1010722997,-531187039,-1431657881,-198902213,1445222573,174409319,474353413,-703380973,28705349,2087002327,-1484594659,-1289929167,1203570281,-1978222639,516605415,241161753,-1492861623,646185273,1746485351,-373568967,-2049123069,-1538603831,1468762075,1568042025,1042127351,-1535038565,2036159281,-431407627,1912767361,-957130695,-188729903,-73531571,-1032032533,-1818814201,-1483397051,1320435757,1975014249,-1991661159,2006563033,389588437,-78327537,-1060636785,500012071,-1959608305,-239320109,-606373577,1695864125,-997407275,930899611,-1756134027,-1899132569,-1663407649,1002865993,-1849613955,-2013148843,942407531,17339743,1489697163,-314205795,-1965745475,-1785104453,1728686997,-1070811901,34198447,692123739,-1864959729,-153572619,-1011123663,-227451081,-1698736863,-809450855,780719309,-655812529,1636312547,923692275,1154214063,-1431132341,-1120091505,-1268505529,1329200201,-2092659765,1530089001,1187882693,-810394897,-874288463,1106702391,-408200109,2123772713,-420489127,404591601,578398293,-1700763423,1218590719,-1424308013,686842129,-1925487457,1990139865,1274422509,-1213335003,1500353247,-320340197,1240818419,1308459191,-123073265,1750988657,1286023699,-1104551361,-1147608959,-1446798851,318818119,780116183,504639637,-764836445,-396951481,544440085,586214367,1520277929,851894957,-1172895387,2085272709,716046973,1510083675,-918493215,-267366551,1347065987,-607892817,2023791573,1723824389,-295572317,495881315,-1995065151,190685613,-114845659,-1829021543,888601907,-257674859,-634334491,2048281911,1549944707,856394827,1626730467,-1710907619,212166489,1280647211,1509945125,-966577331,-884126189,33945837,-940811569,777235805,-340993999,-1550109261,-1025750485,185665433,1363933397,-956183049,1362963411,-668175151,-2003966053,-1156064867,2078956697,-12349251,1430111165,2120097175,-1264100843,-1136082675,350438997,1054959535,289042379,1978154777,306145389,-1508062547,1472371399,-1065424537,1523882027,571771567,-827796421,-2035575279,-1903556157,920075383,600392131,1314196765,-1060688985,-1472193133,-1223547711,1147044975,-1957434627,-74217589,-681016663,-1827932917,319338429,912814895,1193937129,-1678941041,-912574207,-1321737451,906314607,1733021455,1135554933,-35432165,-1749391371,1848471585,1632710011,1181592567,1094186101,1726744873,-35676941,138262823,412227451,-609440633,-1468384827,-1667715363,-755781033,101903449,-1630277897,616263285,-791082359,186552869,-1828310055,814732889,-1485574741,-1668129067,-1552144401,-1846070487,28882305,-1085979763,214594473,-392655105,-1891754079,1423781511,205308111,-1574780335,777736591,-1782565329,-817438603,-558011235,420010513,1519144249,-649253163,576043003,1627952353,1432787825,859576237,1827970967,-1607592151,577773793,1389842069,1926851465,-904096957,-1420784825,1442177127,1898693797,-328713935,-1753033443,1896478389,-1560106657,3776881,-1598024439,-406809759,-1342825291,-2098753013,-293854341,1199289351,-1155853087,-1092064923,-939574043,-886981943,-619434895,-591677431,-602392407,219310507,1783060913,-684291359,-1975864477,-2113774391,260734041,1076280695,397953457,-1527770935,1688241089,-1255840717,856873827,1093149829,1158119365,38390763,1456765907,1736530255,-240679555,874970395,766066893,1525040553,1580970195,-516383689,985710587,-1413274469,1562307291,9946157,747295809,-1234083311,1200641323,1630585719,1728958423,-467894841,930507009,1289274911,1510114283,1531992123,568739917,-328667987,-354130715,1041537713,-1825136747,1822384601,619249305,1888096965,1896856657,-49103899,613705565,-1186965613,-1881948429,441206879,-122714511,1220040517,1108205765,1455501637,958584813,-2130969169,1956056871,1380009451,-1819965995,-1942085103,-2019728307,-1398731821,-1674341869,1342272919,-328666483,-387708303,-249914881,1100620633,-1792816845,856033985,1621985941,-203528285,1267082823,-1476703603,-530304501,1073772693,-1985710447,2143104409,1578340813,537403791,438654049,1686929607,-1308562719,-751701493,-1475020849,1005031717,-1183403331,-681056033,473040083,624432201,-501334465,-661783879,1057340199,702858919,-1174096961,-1704654509,1703219973,-442184975,1929076245,-1760555011,-419726989,-110834045,-1024384813,439298761,-240428801,-1984956719,1054612179,1429686723,1345919951,-1143423237,1347642761,-2127113231,-1827264489,2046693487,1322055037,1951818859,1969911511,-1842768177,1222998611,-1020718903,-1600506877,-2031856789,-777980525,-1861806615,1908488957,1207471417,-1213008107,426678657,-1230308631,1480938995,1417280703,449365485,805789159,1316460675,517504339,-1547083811,483691741,1301963079,774341003,1824308965,-1377631027,545072525,-184658299,952730251,-1037336965,-485504201,-1301535527,-747419159,1074823845,-540594509,1994295395,-966777985,1233489173,1641024845,-801100229,-367567945,2119937797,1294144081,216657443,894294581,16393073,-1128772093,2109998095,-704347057,-54182891,892238533,-1621708767,1879823329,1529531585,-1723734617,282200303,-889424267,403434731,1862937531,484450595,-805740711,-1195039059,606330113,329913123,-661336501,-400235471,-1761724837,-2094414131,-1979718597,1794015795,-5096345,1419701695,-2033391619,-1947894723,-1232603669,546809387,1639409483,1769624979,-1306970053,-977416029,-1576754857,1723525131,407839439,321364953,-1821334851,-1821383473,309825045,-93327799,1152261897,-1417851569,-568477865,-484034165,837156079,-275688435,-1278440501,-110038171,-2101056237,-1646591915,-2095983829,1330384891,1789938393,-393869235,795948687,-1239141701,-1945023923,-209291969,1254563065,1299026135,-1340732185,-1275463503,-1400787257,337360897,976723459,-1963609095,-1460096215,-655422115,-1358070083,2081791665,-1737605191,1250150623,-433667273,340138281,-584799893,9281105,1314535405,-1105142041,1971122997,651864397,-1977204407,592806361,-816396907,153792605,-351920877,382397713,-6519907,-2109882613,1075174855,-715398125,844773491,-1239389211,169402869,-1014856401,-1425659887,-1772910599,353876087,-1850644977,-604863463,304165515,-942917945,363197377,-2073805809,-784806919,-1658733911,-567859973,-1399939329,886166343,-507035967,1342044383,-882849621,692229065,-1660241869,-1357257561,234904299,1986603319,274575573,-1709987629,908349585,718803611,1113073265,1848431391,-1148322207,-1627477773,-336081553,1295175153,-2066298447,-961808779,704621717,-1338970259,-1704397033,826089781,953989629,1750192145,-1534032629,-741686235,1270253745,-2030724887,1680031829,2001879215,-1041843073,-468581163,1991764927,-198627421,-1012328559,-1355703553,-765687851,-1301426647,-1928900203,1815633105,-946939061,-1730597343,-45591685,1450812747,1316762365,-689307313,-1221999323,-1271637273,968103625,-1760715429,-1597275377,-1491867213,1131273969,-1887150503,-945540211,-1233607069,-72500373,1273925033,1959634713,-791181137,994951081,2062056645,-1000488319,490589911,673717005,-910512477,869781583,-1452249339,1376647941,-400035697,-2066542497,-794449141,-504913469,349765121,-620618793,1495058715,586300799,-1121747327,462595335,333733831,-469101213,1242020685,-1425005243,-265441907,692612125,1344383775,-648824551,1971134443,-2131537087,-1109693807,-810164681,-84885311,701924825,2089336377,1778926441,193379513,-1071728205,-1899998683,-1636685689,-1521801351,-1589784839,421668369,239541297,-92504503,-42405275,-1158684901,291798949,1649712079,1841876479,-929428157,2093219621,906077053,-679385291,450951403,1954232731,1658165893,-2132148443,1535507991,1027135285,1594122593,-1965775853,-121239535,-669318983,-1169502533,1069318981,278129397,839868619,-2013967333,-1335680969,-350248705,-1040357245,-909294913,1225342503,1625981473,935005751,2103833999,608798041,-659869011,202949921,-401527465,-1774877999,-1113180237,-1576074077,1083793717,1587490183,1448888865,884972363,1992765039,-34842151,1639536133,944060925,794258877,1925787641,140533469,1161021299,1153373863,-1934793339,-1563349977,1472865671,-1160118251,1285094231,-1572723315,-887758747,-876268857,632817441,-525831915,1078934877,-86184017,-1645477795,1636736545,1325442641,1709507305,-146237,82408949,1099601589,1633746267,-1929261229,131701799,211167401,1476608679,-693759813,-1160633525,71074605,358514187,2141508073,1053591175,1249210313,616082849,-777614219,-1316425643,-2087668051,-1915187015,-1710918423,-1386055433,-1868789275,1902106965,1898830925,-819038523,1626721201,819444333,288067153,-1597143231,1253731569,-1210633539,1171314765,742207245,-369010941,-95017347,1940120461,-615963665,-1200318895,1628687975,419402267,-887739441,2095805709,1635867941,-470922353,-2083378179,1555419745,173525349,797854471,-451528445,-2029442221,-1545977571,1254995555,-1899679711,-665272929,628361739,-798626187,1761833239,-1104997787,-136463567,-1560070185,-1931419897,162848381,-1160284705,1432399813,-923116373,-864989635,1934264297,826633763,1015462657,1013822747,-180687727,1931134851,-1970800641,-1711876513,1125681067,814449999,1068195163,-122344709,-1871485801,-1113366041,-1195338423,1538271681,-753144091,-888322283,-1814900011,-475471917,-540533515,1240163385,-820964583,-1046042701,1862529343,109630867,1388311569,-548374209,-917894857,-607422663,-1562345133,193386099,71587265,-705502857,512492533,-1887468443,2114388595,-461146293,1548474389,-773743831,2036936695,860128773,-1073787149,1048370249,293226183,1516905819,2051660271,1795189531,-1709689987,-336423057,-1429504777,1888622165,110005767,1495038545,-1185639767,-2139612127,1335674175,-220760819,863427207,1382286903,2084582201,470801099,1676746013,-457381719,-234254505,-292349099,-741863621,329393903,795660201,977493451,-2005194507,1235001353,172470393,-616338945,756460401,153059917,-1260757845,-1204010933,1368985079,799594755,-1773036333,1224124395,654959643,746398579,1786852093,-1260222149,-935808835,1256666885,609300557,-105019893,578935039,-223805029,1201724819,-422045439,-484149083,1305335591,-640914551,-823581033,1119434255,-955147543,657747057,-1730127967,1124928477,455945673,128601461,1294430529,243743949,64360553,590631679,135163375,-348231553,-795711505,1485584037,-32676211,117329725,-380817489,1300696205,194301693,-1935026467,-1533490773,-1406080451,-1919066851,-828919837,-654977459,1821937151,466090533,769441535,-1988702127,-725211915,2120251213,138132077,-773209233,-843689527,755957869,-842938179,1789090845,-1088668251,740826967,1054335389,-351129807,-1126299071,-37484877,-1397500453,1788002225,367141943,252017577,-909888481,1144594063,1446110807,-397967181,-1985011577,2110232697,-315364569,1771706473,1839959073,1473849965,-600995643,40362197,-1245638417,-1158124123,-1529110087,653199829,-1027484917,945173735,1404354013,-1151756133,-1038984459,792472823,-1713893313,833647323,1175124415,2033010023,-1953579161,812483537,-1424840029,1753064043,1116049751,-1911957863,2095324295,1235375383,-563540071,-1831880969,-1856817693,-1083761831,1811310041,-2090122105,-1020165841,934610931,-1103295819,840525853,-1334438825,-499368769,-1051964115,-878819443,-1655071213,870706527,612629865,-788970151,-149312475,-1327374439,440119301,685702215,-1457904049,65144911,-1133792731,1798098817,-2001421915,-686137991,-1826747397,-1312630053,1686237415,-199668295,1272547911,-967265813,-2129127693,-1388687851,-1710412973,-240894667,735690001,206475765,-1080172669,67475253,1260750229,723329649,2021568705,533473177,161735315,-2137499925,2084378121,-890620051,1475922853,612116739,-203077209,1716877545,-1018858783,-1031427143,-1990965421,-1296039703,-1042378379,-1087059719,-1385493845,1509376627,-1134931879,-382926621,1840071377,1577143161,-75310729,-1017747819,-833524137,-2032354911,-417938167,1823062379,-1428630621,1572744837,-1674892017,868503423,-503326797,-2065192087,777274181,-909798447,-1619387861,1031339715,1913888469,-133221353,-1977258995,1035119065,1475383723,211715349,-1910440475,1023976729,-1891934591,-810260831,-1559924501,-1440947985,1791460111,1740335853,-1800618221,273743745,-866122455,-1414866857,-1381269733,-2014269601,-702985135,1126656499,963902489,-951226739,1838943447,1318173663,-833695399,863847809,-105257307,701787391,-1054137971,-310496569,907401647,-1889168729,1130825039,1800692001,-1050134039,-674357361,-171201923,1945458379,-1574119167,-654395261,310530339,845460183,-1374171059,-1466485141,546928349,1894031057,-508149807,220163485,1008866233,-1275625173,914711827,-720761581,-1356492597,2005962155,-1251927603,-431536809,410955721,67510495,-588517089,-211911181,-325832471,-2070400631,-50873719,1265183293,174958231,-381605717,480734157,-973736395,-551674685,1715113935,-1811491893,-1967509877,-49691375,981344215,-701837655,-1968117971,-332167935,1978499341,-896316793,-464519941,152197499,925094713,1676878807,1069864027,-1780653261,908804501,-665927437,-1021847311,-192965835,1101159689,284988027,325712685,557152331,-441718907,459360143,1934806077,-1467899643,1425945267,-2098670905,1320840999,1958097185,-1214593783,186827179,-1168580279,-1836969491,1070260445,-1894001059,-104330125,-1903053189,-657228609,1362896971,-1166462993,-1726966403,313723355,-1147202853,1565483825,-1101769969,1851340075,-1346255701,512201337,472756199,-177160525,757877873,-1747397043,715989885,-838611665,-2145007911,1692977067,1723076183,-95180603,1816798971,-1412678505,-1008203979,-500389117,1800315245,-298958121,1808830143,1287999079,-1252875435,219201467,-777204015,-154646713,-395402121,316046885,1326456191,2040707351,519765037,1112145245,135858519,-777658877,-1303345207,-129316853,2092791725,1940111213,409813387,-1628867715,891107729,-1485098977,877358269,2082681771,1312989947,-958601737,-818409319,-669205379,-2048099151,-485379673,596888157,-1019032395,897983411,1305888639,-1601271289,1832048365,255080483,1409433225,810205843,1409919141,-1555889855,-1623517857,-1955912251,674598613,1085234199,963905961,-2088333073,118286725,794793225,1892379181,-1344448123,1705254611,-1446213277,-644692211,1264746175,655933643,-1665932433,1402762861,740641101,-537754007,730173349,-449157685,84149233,1307190245,-109983771,1868385511,1386797405,530352343,1745147069,-1804923683,115251823,-109551535,-2130266549,-2104027375,-134561813,1653589929,-1013374367,302230781,1713650995,-485894361,-237772799,345742007,-1105012419,-1232746069,257983231,-545715253,-944068983,1911198935,961441753,1243433133,1049208427,536453819,1313745935,-1779861847,-1873439295,-445510885,-679702809,-1370411463,-1183139497,955114127,1399968785,275552049,-1154973207,-366980645,321306491,-1579560943,-96363539,-889284609,1686839889,767211045,1261135225,-1040644665,-1391560661,-1650201315,-1722570155,-1626545515,-82902517,1147118743,-2093717673,-1995683727,1241787771,1471867483,-1293896251,-1664115945,-421807469,-371859395,-1550054275,1913402299,-1256687215,1979203571,1161841593,-1838817447,1753153681,755745681,-1223340699,-1500889417,-418896501,1297506715,-870584279,383981063,-2124486513,1195327915,-11906857,-855214703,-1417073957,-194312699,1955261135,1196544581,678066899,-296907633,582856419,-383152925,1376604297,-1822246263,-1611137661,-743399235,-2021667677,-1633878939,-1138874405,-2107954361,-751646529,138566563,1836811251,-1794902733,-241680211,-1734971211,364657695,-1243309037,776126179,-824913935,-29184769,109217425,-738833825,-1468243171,532822415,-608378831,711085057,1926128181,2032253591,474514743,1463629777,-1012389329,-653716771,-1650756351,1850123495,1966009563,-1445354481,-245651593,-815779441,1868399239,2079344555,-1883573261,1707255249,1524883915,68290687,1297313251,-1427704697,-793960137,-1647265391,1621172529,1977827397,-1864304779,24532499,315464209,254798475,-1536746261,1516319189,1453470875,438798663,-32853483,-73549013,-1707668857,-1116634081,-881968645,663722975,-491834313,582059813,-1553221745,-287906279,523933345,-1559965689,-874595615,-1111036385,1087948509,-1303153755,35727159,-1803748839,-1347165479,53108389,-1995773431,1564856429,-986235577,1847443931,2060462157,-107571357,-1770138157,728788783,886713019,-1634973777,-127222927,598446711,-1415949939,-808412855,-1582043567,331312913,-843143783,1103699131,1188739541,347167337,1214453813,223973921,15685667,133163397,-444352345,-2130506577,2110445001,895771195,-1654630693,-392842113,-138976609,-1664148425,-441422911,2084104523,-1844116379,-1251800233,-1419512795,-56800133,381487369,583431137,-885139849,262286047,-233182811,-1675852727,1618099783,872952099,-1108155319,-2070013545,439541559,-1500775671,-1477481853,920010985,-1941375023,938325055,-665881739,591063977,-1450918209,1285861199,-1679841229,475061695,-255615915,-1277698219,1402325827,-145868481,-2128948481,607165511,-327339761,-671059097,1032505551,-1449799891,300870531,-108596399,-1620847463,-1661199415,-400946725,119020873,-1505164023,-1253031895,-1373605299,605415225,926436739,-1961995805,-1345310943,1893826815,-1484251519,2009458683,736322089,1052443753,1897129103,514911333,-4808419,-355555661,-167741995,-1306424055,-62959511,-1288731517,677227287,431691409,-265065271,-1876687603,-1462166219,-2129787843,607377055,-2024750505,419038355,1127863475,-164524307,-1753467509,-158678933,-1324572491,1699586791,489332999,1117596411,2040452521,2130592823,1565626781,-848608557,-833025331,1400946563,1674409589,131534829,1715415869,1095051685,1051009291,-1501198891,-359931973,-597424161,1535198485,1187113083,-453329109,-179500467,-1807642627,-1481556995,-823452753,-746105449,-1991723131,172762057,-349670029,1273855577,-940232377,-879332601,-176127443,1776288751,1789575449,-727190413,1878023601,662356953,1943016983,-998636295,-328149683,-498384937,-1198316065,74331945,1309063813,-1362100185,266410263,-1721030249,-2060864851,1736260209,-1273324143,572433761,-1399723187,1095924157,-1201940159,1372123115,1147774471,170907213,1021534059,-745327397,156738973,-169059415,-2054783737,-198945025,-1064643819,-1214796815,1304988863,2102980703,191308933,-1533853133,1672911443,192172375,-704856783,1814152975,883445155,1935703189,1087425861,-160903697,1557156497,887689913,-1249281777,-1656081415,6547649,253000551,-440509767,842508839,526181933,1749079003,2075914997,181122675,1182867533,2086377645,-191224629,-424107933,632914217,720291045,494590395,813526665,252598183,856256137,2143050647,-1978431115,-873135693,-1974004763,143716709,509993345,-643316069,321473725,1071225319,2014854375,141505675,1653584621,657327549,-1790154099,1789794327,-1133123601,554797269,2079681489,1340237841,1321914505,2092896849,2029590637,1308990739,1517170025,383917443,-84765065,678690307,-1835212819,741821651,-344829067,698955519,491190905,718801535,1074621319,-621624063,1270023147,302605541,480570919,882433407,1161349593,-742200717,443159593,2093217147,-634400019,872068373,-1616325215,1284222717,-1886676863,301955265,120962167,-1333419941,1053140715,155260119,-1883005603,-27468475,672616401,-709495043,-1058581963,1283714557,-84411943,569881353,1135522369,1129819355,948291977,956410333,666109813,-621309377,1720099371,-1524886173,2138220339,1262740151,-272863739,-1241471007,35339743,607506155,-384274369,-96368307,1877176107,-186359815,-1771983645,1696427707,-1165081143,-572230787,-1539704025,1477663017,-1331698989,-1896248131,-1484210217,-747316465,-1423122729,703348645,-606412491,1021960441,966119809,-255379889,-2033368113,153503051,2086828685,-323307183,-967152059,1565359369,1278338989,-575480451,-1319588313,51805017,334515987,-1178120499,124871141,680950127,1218974479,-1376199021,-2100524647,603523453,-1576090121,-879686661,-521086791,-1701641657,1285345509,135324579,1635040393,-574159301,1710207409,1260941817,368459193,-115349125,1629877941,-951665877,2007626225,1762077995,564077451,-1028322731,-1809178929,-912624187,-1609718343,-1191676443,-828280435,444412309,990115945,-723597731,-976032421,-2046713303,1833412093,1171754475,362189637,-500271989,-1873227797,1204889671,-932064935,854740379,-1623132561,237377129,-245926651,-1603673361,-680073987,1153023519,-378094649,-443081845,-1163245521,1377898331,-198051023,495476113,-1696722267,400056917,-455492057,463148267,1716935987,2068546751,1079816881,1995343487,1613315747,804730475,130056995,1197827067,-1666110049,-269905311,1915877087,2060543357,1387428017,-1993661001,20316041,1654762753,-893158341,-1927859631,-828444619,941583153,1468835845,1974294989,-1228820271,631118949,-1864645427,-459952333,-1638388181,1645603865,-801196899,-680334649,-1056242887,1765765341,879492321,-890130351,1496282121,-1074224827,920835003,934180539,-92632791,1089264161,577109501,1343987317,-740567717,-426848825,108742043,-892658423,-733080483,531558839,-655169885,1393304717,-324583367,1873920367,512299097,197191823,-1998673443,1145482809,-1672951271,-768726333,-777069601,116673999,-1596400959,490375569,-1888346161,-1827682429,295112781,-1304078527,597716829,1820622545,-1658224231,243956287,-754444253,276212221,-237128111,850696025,-76646481,1371283641,-808161693,-1173279153,765767143,879152899,-1227754903,-107668263,-49566837,1376502597,-10932277,-1564733913,411311143,-925750953,-1269342293,-681686973,561726737,-532749885,812896539,346990125,-213667499,-1168249165,1574284235,-1372316445,-1566009197,-410977743,-1446690381,-822128051,1617079909,1630657533,-552251827,1399278035,-1148818401,1993290913,521687961,938430455,193958253,466429641,1540625449,-1941381555,-2040667629,456121809,47343241,547428713,1250826119,-408521737,1201049199,-1117752457,1457827357,328684811,-480804565,100835421,2064374195,402021249,2056187845,139165825,-64076235,-2107079887,-686372351,-1622848599,911359249,-1360470805,1300466531,1226366463,561888933,-1020063173,-1907066973,-1682225009,-2095748189,-474139359,1750502991,969554875,561389377,-519636013,-726320911,394897043,-33232435,2019956729,-683163415,624141639,684702269,542950697,1179935659,-903059533,-849825511,146925415,1354535945,-1992398187,1319290643,986862805,-802950153,-1435165331,-1722702917,-2095929003,279166805,589620657,2091067885,5304585,-204398827,-1455590295,984685597,1128304411,670742473,-1918914543,336726953,571750467,-1511424167,-1450643597,936201637,-1406522763,-592801013,-1991623367,1496998781,-1701887451,-616207125,-2059721945,1359417543,-1894483309,191589037,-1646911859,-593171353,-1838130091,487608555,1368185389,566058575,863528765,-278103713,-1854472953,1472786647,-1789951263,-717963849,779112309,1948243933,-1887181787,785454001,1278512481,-555707945,-479629821,-592973317,779179805,-1903177913,46212635,1206766705,-734705381,1819494423,-304699625,323932475,-561791253,-529464363,937448447,655978313,-1163199449,465240693,-1128463251,-96446681,-273420331,1553640847,-1277963661,-1898740195,681858469,141505965,540559011,-1965804807,-978325599,543272407,1463405771,1961207501,-532427273,-1128230447,-1204761427,492148299,549792307,1336709835,-678849525,-1163511821,-1582253027,-160916425,-885410031,-600149525,1630679753,1983467537,-1111619521,1471294581,1926816993,-849801225,-1539235725,-655273543,926645047,-220353185,-729911015,1224572741,-1338678865,-2094959789,1009418381,2112828047,-1554627511,1379956519,759720957,130783481,341787285,1497523897,-262940959,-164919615,-206992807,156043959,-1647758735,-840180953,-798754793,-1327840541,1917504861,1345810087,-102441437,1828744249,-752009669,-1605279661,-1819077187,969435031,-1589358705,90532001,-160150917,1063749575,-964989497,1724323833,-1322669327,-408427731,-478977049,-1908985519,-997489049,828587303,1135783497,-1683774519,-1309216343,-1854631581,637302231,-1909069331,108673553,200884421,1399595103,2106821183,-2030244439,1176464675,-502669041,-393388567,178390715,-1126531391,-904986497,1388629329,322873231,-2010157045,-881584783,-586963243,-1696357149,41914529,405411183,573752597,-1829344213,-315455161,-853139095,-1630078325,-1937862435,-1870691531,-226098367,730851199,2144794439,96690665,853836241,-2007134567,-1527807119,-1101030295,-867098041,1279078051,-1453021221,1373441865,832861867,929740235,1234454003,1656527199,-961354593,1274210949,-945300489,474114449,467866047,-1227882171,-1708509121,1273828775,736423253,1915719361,-1741673825,-1549424527,-2121406839,885671833,1158289305,1741757667,1391572427,1391587399,787023077,1711702933,-1315013079,155844687,332369063,-1007444641,1682386631,2058383047,-2007696307,576361835,-1946022347,-1867307719,153229337,-799323073,667019829,613376093,837424021,-972821151,755835265,-1791659,242349167,1223554425,-391845787,1258269597,-563029023,-1452152743,-612412369,815098701,-1564804507,120764907,-339645083,-1544929231,1242992997,1207921635,-483475517,-1219298357,1991552257,23322145,959869175,-494719907,316527645,-138204287,-1667261403,-271637389,969915113,-390497657,-1382044963,765656669,-656388491,-213851075,-43938475,-1050495211,342308159,1665313,-1645668137,727886509,442813173,-2025212503,90548711,1455293127,664421845,-183692625,1550486245,-1876251403,549932291,1401591155,1707421435,-205716629,-1506982713,-1762843483,-2011276885,-129525875,593408609,-719171571,-1347219595,-309049045,-326720799,646686915,1529852737,1256307091,-1797277487,-560448945,-2001229577,-1879427987,1039712511,864626215,1981867689,1118477959,-1684135099,340285221,-2090772219,-215176811,-1045436277,-1118738743,437300825,1076736837,-1137265685,-1058864403,-638031603,620652299,1579197285,-1607519409,1663618787,1236133851,-1646145499,1767795341,565715609,-1039415237,-1874933723,1701479815,-2056639829,125986611,1248003723,1946469237,-1199605839,1382225397,235118215,478522073,-1954399981,514570415,-142255501,1974986383,-531502521,-2131394863,-2106333733,-1433208525,845589957,1877446643,-1652513591,52423079,-1134238537,1820827583,-34574065,-782699639,387760981,-2041989081,-327951191,-2088025931,-830139845,-1256071041,169215431,-1030673921,-1350812049,450631359,446418583,-1673162005,-487678173,-1736733113,614121511,1534494621,1538935007,-1191462379,-629216597,-1793997901,2073463107,28525741,-378727521,706312297,-1439514223,-1171088593,1578634713,-1144996405,-506199239,-276323113,268377935,138021529,48707809,5717115,-920113219,-1639669775,-2037387047,-1269403383,54583017,1276382829,-804225425,562329853,-517007233,-1895624215,511834505,-924640283,-725928697,2081416655,-1722127457,2110075329,1433694703,-158470227,793731953,997744977,-959383707,-1295910643,493108429,1606987277,-677394997,-478115409,2037312813,743617427,555871575,-1596869551,-1145688211,-1544080741,-962911267,-825582013,-1643658695,-382341655,1224455437,-1485152159,-346932851,1214426195,290450913,-1185088411,537318605,-1429734359,-1669361573,1448278473,1174168247,1710295825,1857615517,1367174719,1555357539,-1000481325,-356408503,-769946081,36998307,-1479831209,-359534523,-427492005,-552023045,149991927,528836755,654779367,-763292401,-1521019033,-1836406263,-857788809,-2135257243,55626125,1309590681,1301947193,-595008171,-566435101,1578855385,-550504867,-1107123499,2021800817,1884882385,-705917057,894424337,-1819244157,-720086017,878438671,600985867,1339530319,69997945,-416294443,-425236909,432266505,1886935681,-737720969,216929903,-1174113185,-263425319,-1259891399,720726971,-901217787,1832220521,-459328287,360615951,-112610375,-911551693,-498866511,-818205009,633393137,-1175721715,1804395881,-971830475,-1899402695,-406047565,1022724313,-220817103,302379845,-1780319633,-355324489,2031843607,1638487383,1027131649,699743359,-1252263845,2093342149,1171584107,-301893135,-1876749577,-112395279,593206509,-1279612259,558577225,630660617,-2003295425,-78059381,-374555417,1335341445,1648666059,-1311520911,-1478286431,-384705033,2105661441,-1261256175,-1170986867,309036767,1255883693,-834521693,1437821557,49803671,753577157,-1566323809,-952233911,1139352743,1991052403,-1381257109,-566846483,-1129553117,1014790843,1957488825,1191132649,-560286587,-1456535467,537441829,-934867789,1318083443,-318250069,-1890958413,-1262584995,1189420871,-1947410291,1180976721,-94038497,-995253967,-1481939591,-1536736719,-137246785,686648961,-1826592021,93836647,-1872084809,-1835880989,1186768513,1571785101,-501045741,-1857160057,-819925577,-1857029819,-861927125,145174291,-92096089,1621677541,131842897,135279185,121134221,-1980551949,1905768597,-920301089,595757875,-255029175,-801683597,-370761905,-770713531,-597254459,747312559,-904793929,-1770468039,-421326579,144817893,946693243,-668233073,971286467,-546271075,19393679,391753633,-1608776389,-393602263,703679773,830979977,13004703,-2120965481,-1444777263,1701584795,-916145841,-869607183,2047842965,2026895311,-1561491161,959819501,-164069233,746226705,1238207139,1987081477,-552742333,-1828122973,-1707773967,109482941,-1889605123,686850001,-418100073,1996803747,1752093865,1845128097,-383136393,1192502973,1771154929,-2036519071,-533080463,-843122157,1215734369,528056599,-1950105779,-673257831,-1321419499,1576815249,688654785,1984577835,-369698371,-1191292449,-1223536751,39513839,41978335,-1142043733,-1705562695,-2145148479,1222268847,-381362535,1306058181,-370287489,-1069738635,1447428491,468639327,1756031647,1745139723,-617231675,2110090679,1457073185,-1844337041,-1785243387,-59080655,-1509656545,-1403205429,-1111525385,934848925,-171018015,1798501767,-100187747,-1414522705,-90344533,714675543,1193909997,-1473640739,-669225523,473658133,-1615306165,1577740455,-1550646611,-344398425,2018041565,1073190241,1102859901,643837639,-419338149,140333073,-1772075249,471867789,-1030079367,-283092089,-109841173,-895472467,1033060965,-410084019,-261519201,196735751,439191625,1399566125,538890171,-1640433705,167920135,-654960559,1781210131,-121283167,181630903,-1496710221,-1055768535,-1816055867,795907595,542703433,634711465,1820019315,-672823183,1879487021,-1821590567,-1461601249,756067651,175824661,-648189787,-1041483767,2040906537,-2127089915,-1866366169,-629098125,1848852813,-1427631411,1146809203,-1536198063,1880147709,-543707823,-293733017,-1917460535,-1036331029,-2102572825,67703897,-1817113787,-2111252757,-1579344113,-1149215475,1077789001,-1910923685,-1373044621,1114848735,-1099342599,-523946811,216567393,-108309525,-342016697,-1889608087,1722115311,1147403397,1670868027,410824483,88570247,1879319449,1018530901,-558305331,1475631421,-1802872613,476004237,338320053,1859297939,-1288898465,-139663699,-440934757,-100774767,-1042683273,-3104987,-1315000375,-1885159639,998209641,-667298359,-802659759,1982894399,-1642132501,-1684788717,-1054037391,599316291,962300851,-1001094633,-1362747921,2121162757,-1751821971,734279111,-2018388875,-458727687,914319577,2078831645,-187842453,430640023,-2078704685,-940012807,-1009779801,-1593925661,651448321,411876579,-1799559695,740749235,-175225185,-98534379,1901167355,-1798599211,-1815429851,-384949527,-146185609,-251700505,1408720735,-1614954207,-1055269887,465399643,793628079,-904741159,-329690679,1955328553,-68918705,-1303950435,261757687,-2119759755,1102412277,-1153413905,-893801303,-1288723577,-96286853,810363057,337284189,585668991,1860119363,-127827373,904627445,-2119577669,1648881911,-887861241,-203926971,113248391,-1313426031,-1972211259,660581159,1946011565,-1594851971,-786688879,-460962669,-1519010369,267458093,-535061503,-1605135867,905870517,1748345229,1860502311,34013709,1300553827,779894357,-1907630559,-428572423,-1791138653,-641629029,-1017689083,159125389,-1241388703,-1236061497,1543075563,1185057437,-199365605,-426962201,-1959833519,-961979965,461189043,927774189,213748167,1535830451,-1702438289,-43957895,-71237801,321385815,1366225441,-1962082295,-1877621413,-738621625,-1198941465,1264385039,663228695,-430425609,1504421073,-389389093,-293199699,2120542471,369336707,1397709771,1052485769,-1675869419,1460088313,-1669216807,-1385864581,-1546996035,-846623077,-334409011,-48044211,-452382337,-1892059965,1567861285,-1444437659,-1641845481,-1235446617,632765951,122431201,-1606108187,225814099,1118438285,-1881725265,-1699578017,201767445,2139680209,-1758769445,-428195957,543096201,-1840004713,-1709289861,-1605366697,1145410957,-199366239,-890922445,-1142828739,-937404871,-946039427,-1880539899,898983873,1625551239,-1956745187,-307296847,689187519,337132421,1926111059,426655155,-634158019,107535863,-761560797,577093983,1098316789,354516141,828164813,474366707,1216228085,223214967,246624401,-158347599,921049025,-1117152039,-1891646085,1333993877,-1784025391,-2126200275,-1073094525,385294363,96239439,-1889006791,1613402075,-258538057,1029467605,-1880862689,1528634867,301663123,1054178789,-78446363,608456865,762797595,-1200741401,-679746981,-774521177,1515093941,1027040471,369665609,2139350745,-1137818563,-1450324521,1790483441,1646846495,427686737,-1107736559,-1636172565,327337301,-2106352519,965404757,-1117787339,-114296073,-473075523,-1127355909,644840845,-2037603399,-1425506823,-2095421869,-805137363,-960337705,990697731,1141538357,1510938003,-702887137,2046587111,-724366107,534760763,1782999483,817264263,-2051068089,1648458861,1066954355,1347687621,-246283749,403307993,-1818791693,260568183,-1541021547,1385381841,-165186457,1475429783,1340789631,660994467,401616977,972326173,1741452539,-932861841,1057821895,1915049107,224802497,1737519603,1744852047,-1139030811,1437543521,-161360401,1800848269,-2081637357,560197927,1248124873,1619909619,-707435637,1515983757,-1240807433,-1743537669,1938585179,1935676125,1406532637,-139730993,-197670375,1422855435,-164303327,1454580973,-1854919617,-1109021737,1342512523,-1946448155,-307660733,606228415,1167617377,-1329153203,-108692481,1824612619,2078500595,-217012779,-385609155,-920441315,-372242797,574866377,-1783084517,2077416993,741828003,-212479289,146499205,-1209993147,1526986021,991334237,-1421117805,754498549,-1863551215,322081,-2128733923,35887985,652911611,1299848575,-1825081701,199764253,-1560697373,1831554129,664464981,1298066767,-942993465,1349808825,551459265,1921335501,-443677655,1566617255,-245316659,-610200775,-2082187849,1066468359,782220253,-1499288139,892733967,374619083,401168799,112640679,1649978537,965063305,1763089665,989866383,880878393,-1449934507,-653334969,1622197919,1576009479,-1691551331,-1367005963,-234096979,-1399189521,1446024305,-1352970371,-1703523143,1643327437,-1836911743,644382365,666984591,631962925,-802634397,-508060059,471838729,-1672539861,1478888877,-134327231,-1146991817,1309149849,1478380115,835968507,1681027481,1200876483,1455454579,-1991393625,-775718899,168952241,1915631459,-1229704229,-1293043321,-536393771,15372769,2034766247,-1095847673,928081895,2023815699,-1427682757,1581849775,588148761,855789805,-2021306023,518296937,-579840945,874498841,220503213,431463541,-1707592323,303504797,1753271983,-1744359387,-452759723,-1715405887,641441109,-317132551,367234157,1740078281,-675060765,1308557415,1257495683,-121226301,579865121,18090097,751319189,-1889457655,1885879827,-790561551,-1107428229,188761735,359001165,-1796317557,-1152710327,-165940555,1402784007,-1460965547,-218502625,-641662065,329075843,1496007551,-1387071767,-1788160347,1370122193,30332141,-976598289,-1395296059,-720123573,714712239,694086781,1054528373,-604225449,-49703549,1652477019,154263469,-1058638113,-929891139,-664702331,1602124121,1278687927,494780491,-157694445,99879513,1123426509,1557471271,-1884001407,-254586957,1065292949,1253520491,-1273990423,-1815988053,253890131,-711782569,-448845669,-2007110315,1419831943,1761701467,-1877986555,-1980130983,1567906185,1474946547,2013235511,-2043472293,1730665183,1621379153,61310201,808573383,1790407589,479709203,1643560357,-2108473427,826937781,1650908295,-371359193,-1948112527,-1138809213,-385141227,-2030764155,-1564523677,204956823,-1906113759,264451405,1145222959,1640994493,-830287349,-1946190135,851418625,956507089,-855356319,1444160793,-609545437,-618059711,-1137302763,697759587,548037595,819899527,-1947639499,-15081309,-1550748519,-368449653,747813327,-2090438383,-137585153,475591667,944813529,953705025,-1034520267,1503279239,-953789057,-1429007043,1104238295,1426716707,1589657661,-18584447,-1484072401,-22059703,218861757,-2056879685,54951299,1691353809,-690674839,-79690433,-1159249051,-1182755247,373193351,-1808917723,57815771,240766573,1611975871,-132984037,1572569243,376553813,-1903794113,-450236757,1648539297,1085016917,-1744402991,-1409424959,-1954701579,-1070689407,-815680971,-1267020923,1096916329,-123874411,-1280428331,1584359025,-243559653,1190426811,1658817653,-267657243,41256541,-701924143,284808891,-998436345,1538382657,-348169543,-1449003705,875126725,-935921373,-1442006285,-895461077,-514663023,1428454353,1995161373,-981812069,1285156031,-7870613,-840177103,-1739209675,1395681841,1028551001,1939841203,-62266131,1579352587,-1117510723,1079008951,1094331635,1728673729,-205208913,1388731427,-159967849,-2093905535,-69847055,3084073,-697082003,66913067,497593801,941429981,-545815647,-341532647,1574970059,-1045661143,-1197744895,1179222761,-794325421,-239601611,1713162607,-1885815681,-985680587,-1588476561,-1631856353,856540803,-274908561,-1230892017,460961549,2141088389,659676235,1195235789,676467221,-738281647,1394571581,354581911,1445752945,1319129849,1433459419,-811781845,-751916463,12153885,278231415,-91766807,-904218853,231456405,-104419569,1585488373,-529928303,-2097412731,1844720011,352003975,2041881651,1840603749,-1175295189,-1675612143,-465700099,1400229175,-1668477135,-1383784289,-1707368697,-35019307,160347431,855717133,642060651,-5196665,1290660799,-1446669995,1782225885,-1698479195,-1745165699,2105534889,998897601,-1428944507,2067071915,-2073966939,-2071458869,-936242173,33084769,-1557621587,-229735847,-285476791,2005829809,-1361730657,-941704889,1188005267,-1434029929,-920053475,-610334325,1295165935,1059047729,-149978761,311107931,1419190861,-2012042001,-940044137,495660105,1064657161,-1060700711,2075885073,-1200238529,-2009092237,-289886437,-809749975,687783357,-1369312759,736139249,-977500721,-586360519,-1339011373,1116082613,-1990452477,-2016861181,2050824389,-1731501117,1862037513,144707303,142530945,1711310405,1059857967,-502715561,1599811791,-2002270655,-1229698331,553238251,-724850173,755875689,109216405,67977035,1883928813,-1562543087,-1754846077,2076492907,-871339717,-1911518581,-2143233223,-544082863,77616197,-2056851931,-1223771037,250322939,-590241197,-1740568769,1832999317,1316750281,743765523,1262582087,1247473605,1315683831,1979476767,117098421,-24483381,1772666829,151388271,-632515097,-778701003,-715222013,-1705373817,-1242339077,1095179855,1516989891,979244193,-1124866979,-805887067,-1687624301,-148075283,886783561,-1035212647,1568485825,-1505636605,-1661166173,-368903429,-289208037,523034519,-495419183,-107810963,-1801960145,1395386643,2072891747,592721865,778796759,37500819,2123300599,710832713,1242850465,-583633543,-455658439,-1314995831,40159231,-1609033961,-565218317,-364763959,-578429637,-1919145975,1658199585,-240367945,-1517564481,-48166577,1813348429,1655174293,201143941,625033323,-1395737617,521699077,686182417,941654509,2078555165,-1224043865,-1361805967,542714149,1406637791,-1831719135,-1971936687,1034761527,-139009091,283223695,-1838832677,-1243276413,1647279369,-988764849,1851174587,-1144423059,-183360115,103445305,570441413,-1720537177,-933746677,-1430054011,-1410333883,-542929649,-176141911,1174285619,1571024387,-2133797577,1126507597,-365598759,552229907,-1303849651,1109059383,1474537683,-1001190595,-710527237,-1185407689,-1592741307,-1501885903,-1493893911,-620554631,-697986825,-1211460227,1110642353,-1384108385,1730341503,-1642600219,1356380691,-307225173,-1529066039,-832215813,1913678921,1957027715,923920093,-249815987,737555055,-1372768045,-2143123921,-659991799,1644471067,-2065576673,-727766227,-1034408215,-543727073,97640243,1428524935,-1330342549,1954254149,1312703009,149366099,-2113955035,-1559420941,-1265912373,-143014731,1944466969,-435126577,-121050869,1721654011,-1589822667,1788941689,1307222025,643581177,1887498043,1909161435,-1598611549,446218615,1814119071,-122853219,406928715,957563655,-322674817,-1277580567,598316827,1601342303,-1891130685,-617549807,-810377543,1594344973,1381068405,913377269,1761660799,1975758677,1230407621,1738778653,1784604239,-1739006917,-1747623735,1920006009,-1856896861,522364057,-1144569201,-1673121425,159947583,-1353111043,1427543439,302314625,12227719,-1321745813,766679865,-2143765029,-664662549,-1164209147,1697968535,-1405213837,-1528805723,-1860990801,2002797665,117647271,1352911695,-554517501,-1117000607,-1232884861,1762650261,453180915,-1096546757,1408539823,-530659207,-1340970943,-249820369,-1816774589,-1890357861,-1614971905,1012241373,415197545,-1229957683,-2084248257,-2057410883,313135233,-1340171287,-1196161227,-124415969,2143556911,-1899224751,1060845267,456254537,-457294699,-682717409,867614969,1743125725,-729088507,-763983815,734617645,1729878141,-927275233,783832609,-781996827,1365637061,-747667291,-1470043801,-152956089,-587671295,1071551249,1975639561,275891727,1501556509,-2007940767,-1098671733,-1958425599,1988865307,-616998639,-268961009,-2037420197,2134866557,-601650997,-773180109,883027775,2010581369,-199040189,280749367,-957323141,-519337409,-215225837,-188872705,1464474843,-753887327,-1972197755,549674843,-1772438261,824265105,-681221313,-504758921,954808255,885306715,1662342661,1380259409,1736486131,-1608849531,1521233015,1053423475,760444873,13467329,937893161,1861523963,-988162125,1256261317,-1534710157,640542865,747894071,-152693433,-215243849,23653571,808125799,-1684690073,-931840727,-1796344757,-1236443533,721688805,1395512021,-529326815,-2067749591,-765777145,487113173,43790731,1031931729,386716209,265377589,-950094451,-517344895,-938514567,-1151232215,-572308663,-489917617,1527296533,434613517,-1734726193,87469073,1533530159,-1354922955,904537485,-1191031999,1283409253,530314667,-1690275391,1468448623,-1535878387,-1177519283,1899835851,1995701661,-1594754519,-193607443,2056986823,604224455,-876468239,958762069,-599318457,1619000399,396105573,-216106627,-319431387,-1290160619,906054199,-2083047871,1433028715,1635797259,-174015301,-402360671,-834616437,690756599,-72186177,-1916556955,1231363459,1961478231,353698297,1394496385,-323824433,-1878561803,-1784672585,-1195599541,-668877405,478534431,1118542739,1026335867,-576142387,-1896153333,-1352411253,-1267736785,-1052106769,1755726111,-1769264377,-1467471783,-1783921625,-1161292859,1827094509,-1813399337,-251177217,938581217,-335796197,2019207759,-595855731,-289300545,1311410787,-1449714613,-1902370441,-1931596547,-326003455,1448351067,-1277236575,-1283384271,1441087693,1919863577,-1269055487,-825560851,124206507,1682871127,838240253,-1869372233,-800527331,162876161,365028715,-1703245535,560955455,722713087,732943017,1415806481,837930219,-1953466647,-2025433059,-1734198865,1417989837,-2053175337,477170893,-575623829,-1903663037,419929613,-485994363,-950213175,-880597753,-416837445,2011911051,-1663467399,1001760339,954825207,1359820543,-208066953,-20698673,1622172647,-1899231061,-676741217,-1926633163,-206203603,-634858459,746092685,142706181,104784591,1463467629,1458946711,-149885461,805115923,-354699353,313950119,236091843,601872125,1759173291,1269405577,1885483249,1738151917,1874834667,43846545,460318181,1866262569,-1673713871,-2056669543,-1499576971,1191151387,295443085,1401615503,-752450487,-337344413,-536495879,-511985309,1027913179,-1205947447,1175578801,1272267391,-962031369,-1001488405,1034614895,-647506883,856861185,-1545711773,869795797,1002384175,-1238101667,-1783707561,-2133332857,1715978477,1544763403,2014010157,-854638051,1611439297,1025019069,1528929465,655647113,1112696463,2040865103,-1025293697,-1499364307,1601757055,304689087,701924731,-1737320119,1482468161,1432578531,1454079093,-1869043941,-1552377195,-1380536563,-1099116833,-696789461,-220643317,-1117641697,-52254837,691985405,444151277,319248813,1152237037,778285577,1305822981,-2112699867,-255543931,-227817501,942920803,551797551,1265053823,298156685,730544733,1925644181,2115202803,8540103,-1763594565,312407791,1595852509,179024349,-1917605035,805333945,666396095,763324933,528848379,-1858650173,-867554811,964981675,-811973337,582256441,-807260725,2060690861,144477617,665512167,-829300251,-521900687,-1636754327,-249382019,1838320741,-301898981,1358453429,-1610279597,339171747,-109867913,2015318995,1690066839,-265532327,-62871599,-1389311431,219706299,2064748191,1664274877,776364167,2006272561,-509264613,1352306867,-2062297969,-2092607719,463364845,1547123305,809822863,1746185463,-1628320033,-1090132331,-658480919,-2042012161,-632079885,-823610439,447749271,-1444687293,-88131241,-259946923,1627859625,1117940799,-1255699291,1593797833,907007095,1379594013,-555317903,3739143,1118185745,315209881,-1472203793,1176416933,-452161229,-32647257,1252575341,-1391217173,-474963047,-434623521,507059989,-127091161,2070945751,-1349066687,-355080067,-917103215,1593346481,-1117522555,-477228771,1909983211,699968701,-94139161,1302445841,108411705,709529705,-602083323,861313117,600971787,1505288009,730554105,1058513395,-341213421,1183048683,-1892324297,1051538259,-1459334199,-483531657,-1007898335,-1107489937,-1051691119,-102285289,-2109964547,-1592187981,8423563,1264713447,-1224958497,-219948967,1696554633,-158060311,609706293,-1246003953,-1875709881,-1064087419,-1436405749,387043503,552698305,272982065,-2062147699,-372999489,-1907897729,-498966085,541882421,1328109595,-49490545,982038201,1139067989,731320981,-1174496053,-1639327469,-836431935,-1363925183,1977570103,448980045,-337933061,393954729,-517402303,370042133,-840825759,-486019031,-2005547671,-1168884575,-613898151,1674754147,-1370585689,1652281567,-414996813,594090985,-533605311,-510512249,-1389672509,302293357,-1484753975,-1002783409,1520241141,-434650003,2122213563,944961359,235818907,511105117,-1832423797,-1116781171,525687595,1786556899,1353050155,977403711,-1809632343,-1422654795,1222131495,1573233915,-1086864409,958581369,337287057,508566601,1489211869,860873331,-2052119657,-417125561,1130144653,-1817426371,-734522899,674029927,-231833191,-269753977,-1652480397,95270883,-73916921,-329994727,1349434597,-267698465,-1573022505,1630854753,1605365251,-1770345097,1152658909,-1473069381,202041285,-2138406571,-876977099,1267216629,-925343911,-252489931,79427701,1224358381,1937592833,324310725,215565167,279918175,-1347627173,1932955977,973236693,1788885267,-986204873,989203809,-578929753,-1080384799,569992801,1389075107,-1254792075,1184047435,-2057941093,1455888051,-2127584599,-1063390399,508511947,-1752719919,-1046270979,-266721371,-1139603625,1219062447,2011387899,2139939169,709060157,-2036859079,110006243,-42675049,638802851,-1558089473,-1499560547,1052341587,-1872605497,1841969195,1484035369,258230173,-1119793289,-173456897,-268121871,161393927,827180647,1069338179,-962986221,208060269,921544335,854709859,1820886427,175608139,437869517,-1841041995,1405793843,1777516161,36271049,-1193628401,812998307,-1826523783,581978513,1202898887,1522833759,-30599409,1257654929,-1792559025,-235124407,1882868847,1308243013,-929002377,-1243045547,1245508891,1251765947,-1059201775,-621375539,1622473047,-181175297,-1614032137,-1145773557,-1470897907,-1989661707,-1571895841,-1291190263,-1830929915,1428653631,-1898320829,-1202960517,-335648621,-1043910139,-1484945219,-602761219,1962448077,1351760689,-1321155531,-665844657,172125155,-1962827309,-2126678375,298763119,-1384858617,-1452964857,1065085429,1635478389,285629523,-670280623,597434415,614157599,-1058948729,-1507038519,1033618677,-1158384177,303042741,-869954877,-1746760663,470562687,625425149,671807573,551959843,-1796473981,1605428483,-54562607,355904355,1855728901,-1971842723,-900583877,1161545443,-95294703,-927737169,1608362091,1193014065,-559048407,2077161049,66959977,-179862963,-2051428389,74529575,-1716935611,1217317847,-471648463,2111089643,-170448927,893463407,1612178047,-498902733,1425540505,-1927055391,-64176625,-546882477,2103391445,-219121171,-362052223,-626023939,1036658947,55060861,-1743435549,-366578281,-250020709,-651302667,377584287,-297050525,466452569,170715719,548063571,-903562921,-1650824985,-354788131,-1766560871,1069325097,886622413,-2033456669,1708173989,1882729447,-1495540365,1174138679,1164205993,277908081,714194507,-1288879759,1883749417,-2066423615,-231318815,-804248587,1427217261,-724563779,-149657885,93692121,-1862575095,1961301613,1297973591,-696629035,602715919,95618263,-1851484257,-101179383,195301411,208354271,601848287,-36548643,353589739,-1777135917,803751265,-720630421,-2018382555,1964020021,-583743077,-1785762283,1976530323,1182079397,2036503543,1230374653,-1091500359,511267251,1563774627,1290617629,755151545,-928430329,-709731807,1758879145,385785029,699004945,743465657,-846139993,-1355538555,-1198355511,-1692135905,725117289,866751609,-2081449699,-1806447471,-977861149,1767140635,235721727,-297638901,-211341809,298866501,932928379,1615886459,-1885266041,2074492309,1684232303,1154073759,1138961763,-588228951,-430935619,-793888081,681231693,1085304565,-1023839231,-971613587,-827256323,-874095015,-299538321,-924707403,1330078457,657870205,-673238701,-2012515737,1510786245,-519253443,1073658289,2048486065,878282993,-447491609,-1714542881,692332681,-1247885799,-1750748061,-33176837,-576508735,295338841,396568723,-1108430541,1144528987,1245323521,-1878419673,2039915633,-1729143287,-338635075,-559401305,-41929897,1126678099,1776925865,-415025119,-1388743093,891426793,-743848301,-1080678949,847287115,-1481515819,574465455,2091092969,500479841,948650375,-70287823,1521410227,220746073,-1853456683,872409617,-539989817,1690149997,923570161,-1939388391,-205820973,1204529673,257563637,-1153911913,459204387,2115233261,1104538001,380691013]}
},{}],5:[function(require,module,exports){
(function (__filename){(function (){
/* proxyquireify injected requires to make browserify include dependencies in the bundle */ /* istanbul ignore next */; (function __makeBrowserifyIncludeModule__() { require('./../lib');});/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var tape = require( 'tape' );
var proxyquire = require('proxyquireify')(require);
var polyfill = require( './../lib/polyfill.js' );
var imul = require( './../lib' );


// FIXTURES //

var data = require( './fixtures/c/data.json' );


// TESTS //

tape( 'main export is a function', function test( t ) {
	t.ok( true, __filename );
	t.strictEqual( typeof imul, 'function', 'main export is a function' );
	t.end();
});

tape( 'if an environment supports `Math.imul` (ES2015+), the main export is the built-in method', function test( t ) {
	var imul = proxyquire( './../lib', {
		'./main.js': foo
	});
	t.equal( imul, foo, 'returns expected value' );
	t.end();

	function foo() {
		// No-op...
	}
});

tape( 'if an environment does not support `Math.imul` (non-ES2015+), the main export is a polyfill', function test( t ) {
	var imul = proxyquire( './../lib', {
		'./main.js': false
	});
	t.equal( imul, polyfill, 'returns expected value' );
	t.end();
});

tape( 'the function emulates C-like multiplication of two signed 32-bit integers', function test( t ) {
	var expected;
	var actual;
	var a;
	var b;
	var i;

	a = data.a;
	b = data.b;
	expected = data.expected;
	for ( i = 0; i < expected.length; i++ ) {
		actual = imul( a[ i ], b[ i ] );
		t.strictEqual( actual, expected[ i ], 'returns expected value. a: '+a[i]+'. b: '+b[i]+'. expected: '+expected[i]+'. actual: '+actual+'.' );
	}
	t.end();
});

}).call(this)}).call(this,"/lib/node_modules/@stdlib/math/base/ops/imul/test/test.js")
},{"./../lib":1,"./../lib/polyfill.js":3,"./fixtures/c/data.json":4,"proxyquireify":109,"tape":117}],6:[function(require,module,exports){
(function (__filename){(function (){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var tape = require( 'tape' );
var imul = require( './../lib/polyfill.js' );


// FIXTURES //

var data = require( './fixtures/c/data.json' );


// TESTS //

tape( 'main export is a function', function test( t ) {
	t.ok( true, __filename );
	t.strictEqual( typeof imul, 'function', 'main export is a function' );
	t.end();
});

tape( 'the function emulates C-like multiplication of two signed 32-bit integers', function test( t ) {
	var expected;
	var actual;
	var a;
	var b;
	var i;

	a = data.a;
	b = data.b;
	expected = data.expected;
	for ( i = 0; i < expected.length; i++ ) {
		actual = imul( a[ i ], b[ i ] );
		t.strictEqual( actual, expected[ i ], 'returns expected value. a: '+a[i]+'. b: '+b[i]+'. expected: '+expected[i]+'. actual: '+actual+'.' );
	}
	t.end();
});

}).call(this)}).call(this,"/lib/node_modules/@stdlib/math/base/ops/imul/test/test.polyfill.js")
},{"./../lib/polyfill.js":3,"./fixtures/c/data.json":4,"tape":117}],7:[function(require,module,exports){
'use strict'

exports.byteLength = byteLength
exports.toByteArray = toByteArray
exports.fromByteArray = fromByteArray

var lookup = []
var revLookup = []
var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array

var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
for (var i = 0, len = code.length; i < len; ++i) {
  lookup[i] = code[i]
  revLookup[code.charCodeAt(i)] = i
}

// Support decoding URL-safe base64 strings, as Node.js does.
// See: https://en.wikipedia.org/wiki/Base64#URL_applications
revLookup['-'.charCodeAt(0)] = 62
revLookup['_'.charCodeAt(0)] = 63

function getLens (b64) {
  var len = b64.length

  if (len % 4 > 0) {
    throw new Error('Invalid string. Length must be a multiple of 4')
  }

  // Trim off extra bytes after placeholder bytes are found
  // See: https://github.com/beatgammit/base64-js/issues/42
  var validLen = b64.indexOf('=')
  if (validLen === -1) validLen = len

  var placeHoldersLen = validLen === len
    ? 0
    : 4 - (validLen % 4)

  return [validLen, placeHoldersLen]
}

// base64 is 4/3 + up to two characters of the original data
function byteLength (b64) {
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function _byteLength (b64, validLen, placeHoldersLen) {
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function toByteArray (b64) {
  var tmp
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]

  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))

  var curByte = 0

  // if there are placeholders, only get up to the last complete 4 chars
  var len = placeHoldersLen > 0
    ? validLen - 4
    : validLen

  var i
  for (i = 0; i < len; i += 4) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 18) |
      (revLookup[b64.charCodeAt(i + 1)] << 12) |
      (revLookup[b64.charCodeAt(i + 2)] << 6) |
      revLookup[b64.charCodeAt(i + 3)]
    arr[curByte++] = (tmp >> 16) & 0xFF
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 2) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 2) |
      (revLookup[b64.charCodeAt(i + 1)] >> 4)
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 1) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 10) |
      (revLookup[b64.charCodeAt(i + 1)] << 4) |
      (revLookup[b64.charCodeAt(i + 2)] >> 2)
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  return arr
}

function tripletToBase64 (num) {
  return lookup[num >> 18 & 0x3F] +
    lookup[num >> 12 & 0x3F] +
    lookup[num >> 6 & 0x3F] +
    lookup[num & 0x3F]
}

function encodeChunk (uint8, start, end) {
  var tmp
  var output = []
  for (var i = start; i < end; i += 3) {
    tmp =
      ((uint8[i] << 16) & 0xFF0000) +
      ((uint8[i + 1] << 8) & 0xFF00) +
      (uint8[i + 2] & 0xFF)
    output.push(tripletToBase64(tmp))
  }
  return output.join('')
}

function fromByteArray (uint8) {
  var tmp
  var len = uint8.length
  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes
  var parts = []
  var maxChunkLength = 16383 // must be multiple of 3

  // go through the array every three bytes, we'll deal with trailing stuff later
  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))
  }

  // pad the end with zeros, but make sure to not forget the extra bytes
  if (extraBytes === 1) {
    tmp = uint8[len - 1]
    parts.push(
      lookup[tmp >> 2] +
      lookup[(tmp << 4) & 0x3F] +
      '=='
    )
  } else if (extraBytes === 2) {
    tmp = (uint8[len - 2] << 8) + uint8[len - 1]
    parts.push(
      lookup[tmp >> 10] +
      lookup[(tmp >> 4) & 0x3F] +
      lookup[(tmp << 2) & 0x3F] +
      '='
    )
  }

  return parts.join('')
}

},{}],8:[function(require,module,exports){

},{}],9:[function(require,module,exports){
arguments[4][8][0].apply(exports,arguments)
},{"dup":8}],10:[function(require,module,exports){
(function (Buffer){(function (){
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
/* eslint-disable no-proto */

'use strict'

var base64 = require('base64-js')
var ieee754 = require('ieee754')

exports.Buffer = Buffer
exports.SlowBuffer = SlowBuffer
exports.INSPECT_MAX_BYTES = 50

var K_MAX_LENGTH = 0x7fffffff
exports.kMaxLength = K_MAX_LENGTH

/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Print warning and recommend using `buffer` v4.x which has an Object
 *               implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * We report that the browser does not support typed arrays if the are not subclassable
 * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`
 * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support
 * for __proto__ and has a buggy typed array implementation.
 */
Buffer.TYPED_ARRAY_SUPPORT = typedArraySupport()

if (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&
    typeof console.error === 'function') {
  console.error(
    'This browser lacks typed array (Uint8Array) support which is required by ' +
    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'
  )
}

function typedArraySupport () {
  // Can typed array instances can be augmented?
  try {
    var arr = new Uint8Array(1)
    arr.__proto__ = { __proto__: Uint8Array.prototype, foo: function () { return 42 } }
    return arr.foo() === 42
  } catch (e) {
    return false
  }
}

Object.defineProperty(Buffer.prototype, 'parent', {
  enumerable: true,
  get: function () {
    if (!Buffer.isBuffer(this)) return undefined
    return this.buffer
  }
})

Object.defineProperty(Buffer.prototype, 'offset', {
  enumerable: true,
  get: function () {
    if (!Buffer.isBuffer(this)) return undefined
    return this.byteOffset
  }
})

function createBuffer (length) {
  if (length > K_MAX_LENGTH) {
    throw new RangeError('The value "' + length + '" is invalid for option "size"')
  }
  // Return an augmented `Uint8Array` instance
  var buf = new Uint8Array(length)
  buf.__proto__ = Buffer.prototype
  return buf
}

/**
 * The Buffer constructor returns instances of `Uint8Array` that have their
 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
 * returns a single octet.
 *
 * The `Uint8Array` prototype remains unmodified.
 */

function Buffer (arg, encodingOrOffset, length) {
  // Common case.
  if (typeof arg === 'number') {
    if (typeof encodingOrOffset === 'string') {
      throw new TypeError(
        'The "string" argument must be of type string. Received type number'
      )
    }
    return allocUnsafe(arg)
  }
  return from(arg, encodingOrOffset, length)
}

// Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
if (typeof Symbol !== 'undefined' && Symbol.species != null &&
    Buffer[Symbol.species] === Buffer) {
  Object.defineProperty(Buffer, Symbol.species, {
    value: null,
    configurable: true,
    enumerable: false,
    writable: false
  })
}

Buffer.poolSize = 8192 // not used by this implementation

function from (value, encodingOrOffset, length) {
  if (typeof value === 'string') {
    return fromString(value, encodingOrOffset)
  }

  if (ArrayBuffer.isView(value)) {
    return fromArrayLike(value)
  }

  if (value == null) {
    throw TypeError(
      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +
      'or Array-like Object. Received type ' + (typeof value)
    )
  }

  if (isInstance(value, ArrayBuffer) ||
      (value && isInstance(value.buffer, ArrayBuffer))) {
    return fromArrayBuffer(value, encodingOrOffset, length)
  }

  if (typeof value === 'number') {
    throw new TypeError(
      'The "value" argument must not be of type number. Received type number'
    )
  }

  var valueOf = value.valueOf && value.valueOf()
  if (valueOf != null && valueOf !== value) {
    return Buffer.from(valueOf, encodingOrOffset, length)
  }

  var b = fromObject(value)
  if (b) return b

  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&
      typeof value[Symbol.toPrimitive] === 'function') {
    return Buffer.from(
      value[Symbol.toPrimitive]('string'), encodingOrOffset, length
    )
  }

  throw new TypeError(
    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +
    'or Array-like Object. Received type ' + (typeof value)
  )
}

/**
 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
 * if value is a number.
 * Buffer.from(str[, encoding])
 * Buffer.from(array)
 * Buffer.from(buffer)
 * Buffer.from(arrayBuffer[, byteOffset[, length]])
 **/
Buffer.from = function (value, encodingOrOffset, length) {
  return from(value, encodingOrOffset, length)
}

// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:
// https://github.com/feross/buffer/pull/148
Buffer.prototype.__proto__ = Uint8Array.prototype
Buffer.__proto__ = Uint8Array

function assertSize (size) {
  if (typeof size !== 'number') {
    throw new TypeError('"size" argument must be of type number')
  } else if (size < 0) {
    throw new RangeError('The value "' + size + '" is invalid for option "size"')
  }
}

function alloc (size, fill, encoding) {
  assertSize(size)
  if (size <= 0) {
    return createBuffer(size)
  }
  if (fill !== undefined) {
    // Only pay attention to encoding if it's a string. This
    // prevents accidentally sending in a number that would
    // be interpretted as a start offset.
    return typeof encoding === 'string'
      ? createBuffer(size).fill(fill, encoding)
      : createBuffer(size).fill(fill)
  }
  return createBuffer(size)
}

/**
 * Creates a new filled Buffer instance.
 * alloc(size[, fill[, encoding]])
 **/
Buffer.alloc = function (size, fill, encoding) {
  return alloc(size, fill, encoding)
}

function allocUnsafe (size) {
  assertSize(size)
  return createBuffer(size < 0 ? 0 : checked(size) | 0)
}

/**
 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
 * */
Buffer.allocUnsafe = function (size) {
  return allocUnsafe(size)
}
/**
 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
 */
Buffer.allocUnsafeSlow = function (size) {
  return allocUnsafe(size)
}

function fromString (string, encoding) {
  if (typeof encoding !== 'string' || encoding === '') {
    encoding = 'utf8'
  }

  if (!Buffer.isEncoding(encoding)) {
    throw new TypeError('Unknown encoding: ' + encoding)
  }

  var length = byteLength(string, encoding) | 0
  var buf = createBuffer(length)

  var actual = buf.write(string, encoding)

  if (actual !== length) {
    // Writing a hex string, for example, that contains invalid characters will
    // cause everything after the first invalid character to be ignored. (e.g.
    // 'abxxcd' will be treated as 'ab')
    buf = buf.slice(0, actual)
  }

  return buf
}

function fromArrayLike (array) {
  var length = array.length < 0 ? 0 : checked(array.length) | 0
  var buf = createBuffer(length)
  for (var i = 0; i < length; i += 1) {
    buf[i] = array[i] & 255
  }
  return buf
}

function fromArrayBuffer (array, byteOffset, length) {
  if (byteOffset < 0 || array.byteLength < byteOffset) {
    throw new RangeError('"offset" is outside of buffer bounds')
  }

  if (array.byteLength < byteOffset + (length || 0)) {
    throw new RangeError('"length" is outside of buffer bounds')
  }

  var buf
  if (byteOffset === undefined && length === undefined) {
    buf = new Uint8Array(array)
  } else if (length === undefined) {
    buf = new Uint8Array(array, byteOffset)
  } else {
    buf = new Uint8Array(array, byteOffset, length)
  }

  // Return an augmented `Uint8Array` instance
  buf.__proto__ = Buffer.prototype
  return buf
}

function fromObject (obj) {
  if (Buffer.isBuffer(obj)) {
    var len = checked(obj.length) | 0
    var buf = createBuffer(len)

    if (buf.length === 0) {
      return buf
    }

    obj.copy(buf, 0, 0, len)
    return buf
  }

  if (obj.length !== undefined) {
    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {
      return createBuffer(0)
    }
    return fromArrayLike(obj)
  }

  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {
    return fromArrayLike(obj.data)
  }
}

function checked (length) {
  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when
  // length is NaN (which is otherwise coerced to zero.)
  if (length >= K_MAX_LENGTH) {
    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')
  }
  return length | 0
}

function SlowBuffer (length) {
  if (+length != length) { // eslint-disable-line eqeqeq
    length = 0
  }
  return Buffer.alloc(+length)
}

Buffer.isBuffer = function isBuffer (b) {
  return b != null && b._isBuffer === true &&
    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false
}

Buffer.compare = function compare (a, b) {
  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)
  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)
  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
    throw new TypeError(
      'The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array'
    )
  }

  if (a === b) return 0

  var x = a.length
  var y = b.length

  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
    if (a[i] !== b[i]) {
      x = a[i]
      y = b[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

Buffer.isEncoding = function isEncoding (encoding) {
  switch (String(encoding).toLowerCase()) {
    case 'hex':
    case 'utf8':
    case 'utf-8':
    case 'ascii':
    case 'latin1':
    case 'binary':
    case 'base64':
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      return true
    default:
      return false
  }
}

Buffer.concat = function concat (list, length) {
  if (!Array.isArray(list)) {
    throw new TypeError('"list" argument must be an Array of Buffers')
  }

  if (list.length === 0) {
    return Buffer.alloc(0)
  }

  var i
  if (length === undefined) {
    length = 0
    for (i = 0; i < list.length; ++i) {
      length += list[i].length
    }
  }

  var buffer = Buffer.allocUnsafe(length)
  var pos = 0
  for (i = 0; i < list.length; ++i) {
    var buf = list[i]
    if (isInstance(buf, Uint8Array)) {
      buf = Buffer.from(buf)
    }
    if (!Buffer.isBuffer(buf)) {
      throw new TypeError('"list" argument must be an Array of Buffers')
    }
    buf.copy(buffer, pos)
    pos += buf.length
  }
  return buffer
}

function byteLength (string, encoding) {
  if (Buffer.isBuffer(string)) {
    return string.length
  }
  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {
    return string.byteLength
  }
  if (typeof string !== 'string') {
    throw new TypeError(
      'The "string" argument must be one of type string, Buffer, or ArrayBuffer. ' +
      'Received type ' + typeof string
    )
  }

  var len = string.length
  var mustMatch = (arguments.length > 2 && arguments[2] === true)
  if (!mustMatch && len === 0) return 0

  // Use a for loop to avoid recursion
  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'ascii':
      case 'latin1':
      case 'binary':
        return len
      case 'utf8':
      case 'utf-8':
        return utf8ToBytes(string).length
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return len * 2
      case 'hex':
        return len >>> 1
      case 'base64':
        return base64ToBytes(string).length
      default:
        if (loweredCase) {
          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8
        }
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}
Buffer.byteLength = byteLength

function slowToString (encoding, start, end) {
  var loweredCase = false

  // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
  // property of a typed array.

  // This behaves neither like String nor Uint8Array in that we set start/end
  // to their upper/lower bounds if the value passed is out of range.
  // undefined is handled specially as per ECMA-262 6th Edition,
  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
  if (start === undefined || start < 0) {
    start = 0
  }
  // Return early if start > this.length. Done here to prevent potential uint32
  // coercion fail below.
  if (start > this.length) {
    return ''
  }

  if (end === undefined || end > this.length) {
    end = this.length
  }

  if (end <= 0) {
    return ''
  }

  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
  end >>>= 0
  start >>>= 0

  if (end <= start) {
    return ''
  }

  if (!encoding) encoding = 'utf8'

  while (true) {
    switch (encoding) {
      case 'hex':
        return hexSlice(this, start, end)

      case 'utf8':
      case 'utf-8':
        return utf8Slice(this, start, end)

      case 'ascii':
        return asciiSlice(this, start, end)

      case 'latin1':
      case 'binary':
        return latin1Slice(this, start, end)

      case 'base64':
        return base64Slice(this, start, end)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return utf16leSlice(this, start, end)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = (encoding + '').toLowerCase()
        loweredCase = true
    }
  }
}

// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)
// to detect a Buffer instance. It's not possible to use `instanceof Buffer`
// reliably in a browserify context because there could be multiple different
// copies of the 'buffer' package in use. This method works even for Buffer
// instances that were created from another copy of the `buffer` package.
// See: https://github.com/feross/buffer/issues/154
Buffer.prototype._isBuffer = true

function swap (b, n, m) {
  var i = b[n]
  b[n] = b[m]
  b[m] = i
}

Buffer.prototype.swap16 = function swap16 () {
  var len = this.length
  if (len % 2 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 16-bits')
  }
  for (var i = 0; i < len; i += 2) {
    swap(this, i, i + 1)
  }
  return this
}

Buffer.prototype.swap32 = function swap32 () {
  var len = this.length
  if (len % 4 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 32-bits')
  }
  for (var i = 0; i < len; i += 4) {
    swap(this, i, i + 3)
    swap(this, i + 1, i + 2)
  }
  return this
}

Buffer.prototype.swap64 = function swap64 () {
  var len = this.length
  if (len % 8 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 64-bits')
  }
  for (var i = 0; i < len; i += 8) {
    swap(this, i, i + 7)
    swap(this, i + 1, i + 6)
    swap(this, i + 2, i + 5)
    swap(this, i + 3, i + 4)
  }
  return this
}

Buffer.prototype.toString = function toString () {
  var length = this.length
  if (length === 0) return ''
  if (arguments.length === 0) return utf8Slice(this, 0, length)
  return slowToString.apply(this, arguments)
}

Buffer.prototype.toLocaleString = Buffer.prototype.toString

Buffer.prototype.equals = function equals (b) {
  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
  if (this === b) return true
  return Buffer.compare(this, b) === 0
}

Buffer.prototype.inspect = function inspect () {
  var str = ''
  var max = exports.INSPECT_MAX_BYTES
  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()
  if (this.length > max) str += ' ... '
  return '<Buffer ' + str + '>'
}

Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {
  if (isInstance(target, Uint8Array)) {
    target = Buffer.from(target, target.offset, target.byteLength)
  }
  if (!Buffer.isBuffer(target)) {
    throw new TypeError(
      'The "target" argument must be one of type Buffer or Uint8Array. ' +
      'Received type ' + (typeof target)
    )
  }

  if (start === undefined) {
    start = 0
  }
  if (end === undefined) {
    end = target ? target.length : 0
  }
  if (thisStart === undefined) {
    thisStart = 0
  }
  if (thisEnd === undefined) {
    thisEnd = this.length
  }

  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
    throw new RangeError('out of range index')
  }

  if (thisStart >= thisEnd && start >= end) {
    return 0
  }
  if (thisStart >= thisEnd) {
    return -1
  }
  if (start >= end) {
    return 1
  }

  start >>>= 0
  end >>>= 0
  thisStart >>>= 0
  thisEnd >>>= 0

  if (this === target) return 0

  var x = thisEnd - thisStart
  var y = end - start
  var len = Math.min(x, y)

  var thisCopy = this.slice(thisStart, thisEnd)
  var targetCopy = target.slice(start, end)

  for (var i = 0; i < len; ++i) {
    if (thisCopy[i] !== targetCopy[i]) {
      x = thisCopy[i]
      y = targetCopy[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
//
// Arguments:
// - buffer - a Buffer to search
// - val - a string, Buffer, or number
// - byteOffset - an index into `buffer`; will be clamped to an int32
// - encoding - an optional encoding, relevant is val is a string
// - dir - true for indexOf, false for lastIndexOf
function bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {
  // Empty buffer means no match
  if (buffer.length === 0) return -1

  // Normalize byteOffset
  if (typeof byteOffset === 'string') {
    encoding = byteOffset
    byteOffset = 0
  } else if (byteOffset > 0x7fffffff) {
    byteOffset = 0x7fffffff
  } else if (byteOffset < -0x80000000) {
    byteOffset = -0x80000000
  }
  byteOffset = +byteOffset // Coerce to Number.
  if (numberIsNaN(byteOffset)) {
    // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
    byteOffset = dir ? 0 : (buffer.length - 1)
  }

  // Normalize byteOffset: negative offsets start from the end of the buffer
  if (byteOffset < 0) byteOffset = buffer.length + byteOffset
  if (byteOffset >= buffer.length) {
    if (dir) return -1
    else byteOffset = buffer.length - 1
  } else if (byteOffset < 0) {
    if (dir) byteOffset = 0
    else return -1
  }

  // Normalize val
  if (typeof val === 'string') {
    val = Buffer.from(val, encoding)
  }

  // Finally, search either indexOf (if dir is true) or lastIndexOf
  if (Buffer.isBuffer(val)) {
    // Special case: looking for empty string/buffer always fails
    if (val.length === 0) {
      return -1
    }
    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)
  } else if (typeof val === 'number') {
    val = val & 0xFF // Search for a byte value [0-255]
    if (typeof Uint8Array.prototype.indexOf === 'function') {
      if (dir) {
        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)
      } else {
        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)
      }
    }
    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)
  }

  throw new TypeError('val must be string, number or Buffer')
}

function arrayIndexOf (arr, val, byteOffset, encoding, dir) {
  var indexSize = 1
  var arrLength = arr.length
  var valLength = val.length

  if (encoding !== undefined) {
    encoding = String(encoding).toLowerCase()
    if (encoding === 'ucs2' || encoding === 'ucs-2' ||
        encoding === 'utf16le' || encoding === 'utf-16le') {
      if (arr.length < 2 || val.length < 2) {
        return -1
      }
      indexSize = 2
      arrLength /= 2
      valLength /= 2
      byteOffset /= 2
    }
  }

  function read (buf, i) {
    if (indexSize === 1) {
      return buf[i]
    } else {
      return buf.readUInt16BE(i * indexSize)
    }
  }

  var i
  if (dir) {
    var foundIndex = -1
    for (i = byteOffset; i < arrLength; i++) {
      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
        if (foundIndex === -1) foundIndex = i
        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize
      } else {
        if (foundIndex !== -1) i -= i - foundIndex
        foundIndex = -1
      }
    }
  } else {
    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength
    for (i = byteOffset; i >= 0; i--) {
      var found = true
      for (var j = 0; j < valLength; j++) {
        if (read(arr, i + j) !== read(val, j)) {
          found = false
          break
        }
      }
      if (found) return i
    }
  }

  return -1
}

Buffer.prototype.includes = function includes (val, byteOffset, encoding) {
  return this.indexOf(val, byteOffset, encoding) !== -1
}

Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)
}

Buffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)
}

function hexWrite (buf, string, offset, length) {
  offset = Number(offset) || 0
  var remaining = buf.length - offset
  if (!length) {
    length = remaining
  } else {
    length = Number(length)
    if (length > remaining) {
      length = remaining
    }
  }

  var strLen = string.length

  if (length > strLen / 2) {
    length = strLen / 2
  }
  for (var i = 0; i < length; ++i) {
    var parsed = parseInt(string.substr(i * 2, 2), 16)
    if (numberIsNaN(parsed)) return i
    buf[offset + i] = parsed
  }
  return i
}

function utf8Write (buf, string, offset, length) {
  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
}

function asciiWrite (buf, string, offset, length) {
  return blitBuffer(asciiToBytes(string), buf, offset, length)
}

function latin1Write (buf, string, offset, length) {
  return asciiWrite(buf, string, offset, length)
}

function base64Write (buf, string, offset, length) {
  return blitBuffer(base64ToBytes(string), buf, offset, length)
}

function ucs2Write (buf, string, offset, length) {
  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
}

Buffer.prototype.write = function write (string, offset, length, encoding) {
  // Buffer#write(string)
  if (offset === undefined) {
    encoding = 'utf8'
    length = this.length
    offset = 0
  // Buffer#write(string, encoding)
  } else if (length === undefined && typeof offset === 'string') {
    encoding = offset
    length = this.length
    offset = 0
  // Buffer#write(string, offset[, length][, encoding])
  } else if (isFinite(offset)) {
    offset = offset >>> 0
    if (isFinite(length)) {
      length = length >>> 0
      if (encoding === undefined) encoding = 'utf8'
    } else {
      encoding = length
      length = undefined
    }
  } else {
    throw new Error(
      'Buffer.write(string, encoding, offset[, length]) is no longer supported'
    )
  }

  var remaining = this.length - offset
  if (length === undefined || length > remaining) length = remaining

  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
    throw new RangeError('Attempt to write outside buffer bounds')
  }

  if (!encoding) encoding = 'utf8'

  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'hex':
        return hexWrite(this, string, offset, length)

      case 'utf8':
      case 'utf-8':
        return utf8Write(this, string, offset, length)

      case 'ascii':
        return asciiWrite(this, string, offset, length)

      case 'latin1':
      case 'binary':
        return latin1Write(this, string, offset, length)

      case 'base64':
        // Warning: maxLength not taken into account in base64Write
        return base64Write(this, string, offset, length)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return ucs2Write(this, string, offset, length)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}

Buffer.prototype.toJSON = function toJSON () {
  return {
    type: 'Buffer',
    data: Array.prototype.slice.call(this._arr || this, 0)
  }
}

function base64Slice (buf, start, end) {
  if (start === 0 && end === buf.length) {
    return base64.fromByteArray(buf)
  } else {
    return base64.fromByteArray(buf.slice(start, end))
  }
}

function utf8Slice (buf, start, end) {
  end = Math.min(buf.length, end)
  var res = []

  var i = start
  while (i < end) {
    var firstByte = buf[i]
    var codePoint = null
    var bytesPerSequence = (firstByte > 0xEF) ? 4
      : (firstByte > 0xDF) ? 3
        : (firstByte > 0xBF) ? 2
          : 1

    if (i + bytesPerSequence <= end) {
      var secondByte, thirdByte, fourthByte, tempCodePoint

      switch (bytesPerSequence) {
        case 1:
          if (firstByte < 0x80) {
            codePoint = firstByte
          }
          break
        case 2:
          secondByte = buf[i + 1]
          if ((secondByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
            if (tempCodePoint > 0x7F) {
              codePoint = tempCodePoint
            }
          }
          break
        case 3:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
              codePoint = tempCodePoint
            }
          }
          break
        case 4:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          fourthByte = buf[i + 3]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
              codePoint = tempCodePoint
            }
          }
      }
    }

    if (codePoint === null) {
      // we did not generate a valid codePoint so insert a
      // replacement char (U+FFFD) and advance only 1 byte
      codePoint = 0xFFFD
      bytesPerSequence = 1
    } else if (codePoint > 0xFFFF) {
      // encode to utf16 (surrogate pair dance)
      codePoint -= 0x10000
      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
      codePoint = 0xDC00 | codePoint & 0x3FF
    }

    res.push(codePoint)
    i += bytesPerSequence
  }

  return decodeCodePointsArray(res)
}

// Based on http://stackoverflow.com/a/22747272/680742, the browser with
// the lowest limit is Chrome, with 0x10000 args.
// We go 1 magnitude less, for safety
var MAX_ARGUMENTS_LENGTH = 0x1000

function decodeCodePointsArray (codePoints) {
  var len = codePoints.length
  if (len <= MAX_ARGUMENTS_LENGTH) {
    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
  }

  // Decode in chunks to avoid "call stack size exceeded".
  var res = ''
  var i = 0
  while (i < len) {
    res += String.fromCharCode.apply(
      String,
      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
    )
  }
  return res
}

function asciiSlice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i] & 0x7F)
  }
  return ret
}

function latin1Slice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i])
  }
  return ret
}

function hexSlice (buf, start, end) {
  var len = buf.length

  if (!start || start < 0) start = 0
  if (!end || end < 0 || end > len) end = len

  var out = ''
  for (var i = start; i < end; ++i) {
    out += toHex(buf[i])
  }
  return out
}

function utf16leSlice (buf, start, end) {
  var bytes = buf.slice(start, end)
  var res = ''
  for (var i = 0; i < bytes.length; i += 2) {
    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))
  }
  return res
}

Buffer.prototype.slice = function slice (start, end) {
  var len = this.length
  start = ~~start
  end = end === undefined ? len : ~~end

  if (start < 0) {
    start += len
    if (start < 0) start = 0
  } else if (start > len) {
    start = len
  }

  if (end < 0) {
    end += len
    if (end < 0) end = 0
  } else if (end > len) {
    end = len
  }

  if (end < start) end = start

  var newBuf = this.subarray(start, end)
  // Return an augmented `Uint8Array` instance
  newBuf.__proto__ = Buffer.prototype
  return newBuf
}

/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */
function checkOffset (offset, ext, length) {
  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
}

Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }

  return val
}

Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    checkOffset(offset, byteLength, this.length)
  }

  var val = this[offset + --byteLength]
  var mul = 1
  while (byteLength > 0 && (mul *= 0x100)) {
    val += this[offset + --byteLength] * mul
  }

  return val
}

Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 1, this.length)
  return this[offset]
}

Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  return this[offset] | (this[offset + 1] << 8)
}

Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  return (this[offset] << 8) | this[offset + 1]
}

Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return ((this[offset]) |
      (this[offset + 1] << 8) |
      (this[offset + 2] << 16)) +
      (this[offset + 3] * 0x1000000)
}

Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] * 0x1000000) +
    ((this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    this[offset + 3])
}

Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var i = byteLength
  var mul = 1
  var val = this[offset + --i]
  while (i > 0 && (mul *= 0x100)) {
    val += this[offset + --i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 1, this.length)
  if (!(this[offset] & 0x80)) return (this[offset])
  return ((0xff - this[offset] + 1) * -1)
}

Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset] | (this[offset + 1] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset + 1] | (this[offset] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset]) |
    (this[offset + 1] << 8) |
    (this[offset + 2] << 16) |
    (this[offset + 3] << 24)
}

Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] << 24) |
    (this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    (this[offset + 3])
}

Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, true, 23, 4)
}

Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, false, 23, 4)
}

Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, true, 52, 8)
}

Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, false, 52, 8)
}

function checkInt (buf, value, offset, ext, max, min) {
  if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance')
  if (value > max || value < min) throw new RangeError('"value" argument is out of bounds')
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
}

Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var mul = 1
  var i = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var i = byteLength - 1
  var mul = 1
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  return offset + 2
}

Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  this[offset] = (value >>> 8)
  this[offset + 1] = (value & 0xff)
  return offset + 2
}

Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  this[offset + 3] = (value >>> 24)
  this[offset + 2] = (value >>> 16)
  this[offset + 1] = (value >>> 8)
  this[offset] = (value & 0xff)
  return offset + 4
}

Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  this[offset] = (value >>> 24)
  this[offset + 1] = (value >>> 16)
  this[offset + 2] = (value >>> 8)
  this[offset + 3] = (value & 0xff)
  return offset + 4
}

Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    var limit = Math.pow(2, (8 * byteLength) - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = 0
  var mul = 1
  var sub = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    var limit = Math.pow(2, (8 * byteLength) - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = byteLength - 1
  var mul = 1
  var sub = 0
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
  if (value < 0) value = 0xff + value + 1
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  return offset + 2
}

Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  this[offset] = (value >>> 8)
  this[offset + 1] = (value & 0xff)
  return offset + 2
}

Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  this[offset + 2] = (value >>> 16)
  this[offset + 3] = (value >>> 24)
  return offset + 4
}

Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (value < 0) value = 0xffffffff + value + 1
  this[offset] = (value >>> 24)
  this[offset + 1] = (value >>> 16)
  this[offset + 2] = (value >>> 8)
  this[offset + 3] = (value & 0xff)
  return offset + 4
}

function checkIEEE754 (buf, value, offset, ext, max, min) {
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
  if (offset < 0) throw new RangeError('Index out of range')
}

function writeFloat (buf, value, offset, littleEndian, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
  }
  ieee754.write(buf, value, offset, littleEndian, 23, 4)
  return offset + 4
}

Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
  return writeFloat(this, value, offset, true, noAssert)
}

Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
  return writeFloat(this, value, offset, false, noAssert)
}

function writeDouble (buf, value, offset, littleEndian, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
  }
  ieee754.write(buf, value, offset, littleEndian, 52, 8)
  return offset + 8
}

Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
  return writeDouble(this, value, offset, true, noAssert)
}

Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
  return writeDouble(this, value, offset, false, noAssert)
}

// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Buffer.prototype.copy = function copy (target, targetStart, start, end) {
  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')
  if (!start) start = 0
  if (!end && end !== 0) end = this.length
  if (targetStart >= target.length) targetStart = target.length
  if (!targetStart) targetStart = 0
  if (end > 0 && end < start) end = start

  // Copy 0 bytes; we're done
  if (end === start) return 0
  if (target.length === 0 || this.length === 0) return 0

  // Fatal error conditions
  if (targetStart < 0) {
    throw new RangeError('targetStart out of bounds')
  }
  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')
  if (end < 0) throw new RangeError('sourceEnd out of bounds')

  // Are we oob?
  if (end > this.length) end = this.length
  if (target.length - targetStart < end - start) {
    end = target.length - targetStart + start
  }

  var len = end - start

  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {
    // Use built-in when available, missing from IE11
    this.copyWithin(targetStart, start, end)
  } else if (this === target && start < targetStart && targetStart < end) {
    // descending copy from end
    for (var i = len - 1; i >= 0; --i) {
      target[i + targetStart] = this[i + start]
    }
  } else {
    Uint8Array.prototype.set.call(
      target,
      this.subarray(start, end),
      targetStart
    )
  }

  return len
}

// Usage:
//    buffer.fill(number[, offset[, end]])
//    buffer.fill(buffer[, offset[, end]])
//    buffer.fill(string[, offset[, end]][, encoding])
Buffer.prototype.fill = function fill (val, start, end, encoding) {
  // Handle string cases:
  if (typeof val === 'string') {
    if (typeof start === 'string') {
      encoding = start
      start = 0
      end = this.length
    } else if (typeof end === 'string') {
      encoding = end
      end = this.length
    }
    if (encoding !== undefined && typeof encoding !== 'string') {
      throw new TypeError('encoding must be a string')
    }
    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
      throw new TypeError('Unknown encoding: ' + encoding)
    }
    if (val.length === 1) {
      var code = val.charCodeAt(0)
      if ((encoding === 'utf8' && code < 128) ||
          encoding === 'latin1') {
        // Fast path: If `val` fits into a single byte, use that numeric value.
        val = code
      }
    }
  } else if (typeof val === 'number') {
    val = val & 255
  }

  // Invalid ranges are not set to a default, so can range check early.
  if (start < 0 || this.length < start || this.length < end) {
    throw new RangeError('Out of range index')
  }

  if (end <= start) {
    return this
  }

  start = start >>> 0
  end = end === undefined ? this.length : end >>> 0

  if (!val) val = 0

  var i
  if (typeof val === 'number') {
    for (i = start; i < end; ++i) {
      this[i] = val
    }
  } else {
    var bytes = Buffer.isBuffer(val)
      ? val
      : Buffer.from(val, encoding)
    var len = bytes.length
    if (len === 0) {
      throw new TypeError('The value "' + val +
        '" is invalid for argument "value"')
    }
    for (i = 0; i < end - start; ++i) {
      this[i + start] = bytes[i % len]
    }
  }

  return this
}

// HELPER FUNCTIONS
// ================

var INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g

function base64clean (str) {
  // Node takes equal signs as end of the Base64 encoding
  str = str.split('=')[0]
  // Node strips out invalid characters like \n and \t from the string, base64-js does not
  str = str.trim().replace(INVALID_BASE64_RE, '')
  // Node converts strings with length < 2 to ''
  if (str.length < 2) return ''
  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
  while (str.length % 4 !== 0) {
    str = str + '='
  }
  return str
}

function toHex (n) {
  if (n < 16) return '0' + n.toString(16)
  return n.toString(16)
}

function utf8ToBytes (string, units) {
  units = units || Infinity
  var codePoint
  var length = string.length
  var leadSurrogate = null
  var bytes = []

  for (var i = 0; i < length; ++i) {
    codePoint = string.charCodeAt(i)

    // is surrogate component
    if (codePoint > 0xD7FF && codePoint < 0xE000) {
      // last char was a lead
      if (!leadSurrogate) {
        // no lead yet
        if (codePoint > 0xDBFF) {
          // unexpected trail
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        } else if (i + 1 === length) {
          // unpaired lead
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        }

        // valid lead
        leadSurrogate = codePoint

        continue
      }

      // 2 leads in a row
      if (codePoint < 0xDC00) {
        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
        leadSurrogate = codePoint
        continue
      }

      // valid surrogate pair
      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
    } else if (leadSurrogate) {
      // valid bmp char, but last char was a lead
      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
    }

    leadSurrogate = null

    // encode utf8
    if (codePoint < 0x80) {
      if ((units -= 1) < 0) break
      bytes.push(codePoint)
    } else if (codePoint < 0x800) {
      if ((units -= 2) < 0) break
      bytes.push(
        codePoint >> 0x6 | 0xC0,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x10000) {
      if ((units -= 3) < 0) break
      bytes.push(
        codePoint >> 0xC | 0xE0,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x110000) {
      if ((units -= 4) < 0) break
      bytes.push(
        codePoint >> 0x12 | 0xF0,
        codePoint >> 0xC & 0x3F | 0x80,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else {
      throw new Error('Invalid code point')
    }
  }

  return bytes
}

function asciiToBytes (str) {
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    // Node's code seems to be doing this and not & 0x7F..
    byteArray.push(str.charCodeAt(i) & 0xFF)
  }
  return byteArray
}

function utf16leToBytes (str, units) {
  var c, hi, lo
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    if ((units -= 2) < 0) break

    c = str.charCodeAt(i)
    hi = c >> 8
    lo = c % 256
    byteArray.push(lo)
    byteArray.push(hi)
  }

  return byteArray
}

function base64ToBytes (str) {
  return base64.toByteArray(base64clean(str))
}

function blitBuffer (src, dst, offset, length) {
  for (var i = 0; i < length; ++i) {
    if ((i + offset >= dst.length) || (i >= src.length)) break
    dst[i + offset] = src[i]
  }
  return i
}

// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass
// the `instanceof` check but they should be treated as of that type.
// See: https://github.com/feross/buffer/issues/166
function isInstance (obj, type) {
  return obj instanceof type ||
    (obj != null && obj.constructor != null && obj.constructor.name != null &&
      obj.constructor.name === type.name)
}
function numberIsNaN (obj) {
  // For IE11 support
  return obj !== obj // eslint-disable-line no-self-compare
}

}).call(this)}).call(this,require("buffer").Buffer)
},{"base64-js":7,"buffer":10,"ieee754":99}],11:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

'use strict';

var R = typeof Reflect === 'object' ? Reflect : null
var ReflectApply = R && typeof R.apply === 'function'
  ? R.apply
  : function ReflectApply(target, receiver, args) {
    return Function.prototype.apply.call(target, receiver, args);
  }

var ReflectOwnKeys
if (R && typeof R.ownKeys === 'function') {
  ReflectOwnKeys = R.ownKeys
} else if (Object.getOwnPropertySymbols) {
  ReflectOwnKeys = function ReflectOwnKeys(target) {
    return Object.getOwnPropertyNames(target)
      .concat(Object.getOwnPropertySymbols(target));
  };
} else {
  ReflectOwnKeys = function ReflectOwnKeys(target) {
    return Object.getOwnPropertyNames(target);
  };
}

function ProcessEmitWarning(warning) {
  if (console && console.warn) console.warn(warning);
}

var NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {
  return value !== value;
}

function EventEmitter() {
  EventEmitter.init.call(this);
}
module.exports = EventEmitter;
module.exports.once = once;

// Backwards-compat with node 0.10.x
EventEmitter.EventEmitter = EventEmitter;

EventEmitter.prototype._events = undefined;
EventEmitter.prototype._eventsCount = 0;
EventEmitter.prototype._maxListeners = undefined;

// By default EventEmitters will print a warning if more than 10 listeners are
// added to it. This is a useful default which helps finding memory leaks.
var defaultMaxListeners = 10;

function checkListener(listener) {
  if (typeof listener !== 'function') {
    throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof listener);
  }
}

Object.defineProperty(EventEmitter, 'defaultMaxListeners', {
  enumerable: true,
  get: function() {
    return defaultMaxListeners;
  },
  set: function(arg) {
    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {
      throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + arg + '.');
    }
    defaultMaxListeners = arg;
  }
});

EventEmitter.init = function() {

  if (this._events === undefined ||
      this._events === Object.getPrototypeOf(this)._events) {
    this._events = Object.create(null);
    this._eventsCount = 0;
  }

  this._maxListeners = this._maxListeners || undefined;
};

// Obviously not all Emitters should be limited to 10. This function allows
// that to be increased. Set to zero for unlimited.
EventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {
  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {
    throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + n + '.');
  }
  this._maxListeners = n;
  return this;
};

function _getMaxListeners(that) {
  if (that._maxListeners === undefined)
    return EventEmitter.defaultMaxListeners;
  return that._maxListeners;
}

EventEmitter.prototype.getMaxListeners = function getMaxListeners() {
  return _getMaxListeners(this);
};

EventEmitter.prototype.emit = function emit(type) {
  var args = [];
  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);
  var doError = (type === 'error');

  var events = this._events;
  if (events !== undefined)
    doError = (doError && events.error === undefined);
  else if (!doError)
    return false;

  // If there is no 'error' event listener then throw.
  if (doError) {
    var er;
    if (args.length > 0)
      er = args[0];
    if (er instanceof Error) {
      // Note: The comments on the `throw` lines are intentional, they show
      // up in Node's output if this results in an unhandled exception.
      throw er; // Unhandled 'error' event
    }
    // At least give some kind of context to the user
    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));
    err.context = er;
    throw err; // Unhandled 'error' event
  }

  var handler = events[type];

  if (handler === undefined)
    return false;

  if (typeof handler === 'function') {
    ReflectApply(handler, this, args);
  } else {
    var len = handler.length;
    var listeners = arrayClone(handler, len);
    for (var i = 0; i < len; ++i)
      ReflectApply(listeners[i], this, args);
  }

  return true;
};

function _addListener(target, type, listener, prepend) {
  var m;
  var events;
  var existing;

  checkListener(listener);

  events = target._events;
  if (events === undefined) {
    events = target._events = Object.create(null);
    target._eventsCount = 0;
  } else {
    // To avoid recursion in the case that type === "newListener"! Before
    // adding it to the listeners, first emit "newListener".
    if (events.newListener !== undefined) {
      target.emit('newListener', type,
                  listener.listener ? listener.listener : listener);

      // Re-assign `events` because a newListener handler could have caused the
      // this._events to be assigned to a new object
      events = target._events;
    }
    existing = events[type];
  }

  if (existing === undefined) {
    // Optimize the case of one listener. Don't need the extra array object.
    existing = events[type] = listener;
    ++target._eventsCount;
  } else {
    if (typeof existing === 'function') {
      // Adding the second element, need to change to array.
      existing = events[type] =
        prepend ? [listener, existing] : [existing, listener];
      // If we've already got an array, just append.
    } else if (prepend) {
      existing.unshift(listener);
    } else {
      existing.push(listener);
    }

    // Check for listener leak
    m = _getMaxListeners(target);
    if (m > 0 && existing.length > m && !existing.warned) {
      existing.warned = true;
      // No error code for this since it is a Warning
      // eslint-disable-next-line no-restricted-syntax
      var w = new Error('Possible EventEmitter memory leak detected. ' +
                          existing.length + ' ' + String(type) + ' listeners ' +
                          'added. Use emitter.setMaxListeners() to ' +
                          'increase limit');
      w.name = 'MaxListenersExceededWarning';
      w.emitter = target;
      w.type = type;
      w.count = existing.length;
      ProcessEmitWarning(w);
    }
  }

  return target;
}

EventEmitter.prototype.addListener = function addListener(type, listener) {
  return _addListener(this, type, listener, false);
};

EventEmitter.prototype.on = EventEmitter.prototype.addListener;

EventEmitter.prototype.prependListener =
    function prependListener(type, listener) {
      return _addListener(this, type, listener, true);
    };

function onceWrapper() {
  if (!this.fired) {
    this.target.removeListener(this.type, this.wrapFn);
    this.fired = true;
    if (arguments.length === 0)
      return this.listener.call(this.target);
    return this.listener.apply(this.target, arguments);
  }
}

function _onceWrap(target, type, listener) {
  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };
  var wrapped = onceWrapper.bind(state);
  wrapped.listener = listener;
  state.wrapFn = wrapped;
  return wrapped;
}

EventEmitter.prototype.once = function once(type, listener) {
  checkListener(listener);
  this.on(type, _onceWrap(this, type, listener));
  return this;
};

EventEmitter.prototype.prependOnceListener =
    function prependOnceListener(type, listener) {
      checkListener(listener);
      this.prependListener(type, _onceWrap(this, type, listener));
      return this;
    };

// Emits a 'removeListener' event if and only if the listener was removed.
EventEmitter.prototype.removeListener =
    function removeListener(type, listener) {
      var list, events, position, i, originalListener;

      checkListener(listener);

      events = this._events;
      if (events === undefined)
        return this;

      list = events[type];
      if (list === undefined)
        return this;

      if (list === listener || list.listener === listener) {
        if (--this._eventsCount === 0)
          this._events = Object.create(null);
        else {
          delete events[type];
          if (events.removeListener)
            this.emit('removeListener', type, list.listener || listener);
        }
      } else if (typeof list !== 'function') {
        position = -1;

        for (i = list.length - 1; i >= 0; i--) {
          if (list[i] === listener || list[i].listener === listener) {
            originalListener = list[i].listener;
            position = i;
            break;
          }
        }

        if (position < 0)
          return this;

        if (position === 0)
          list.shift();
        else {
          spliceOne(list, position);
        }

        if (list.length === 1)
          events[type] = list[0];

        if (events.removeListener !== undefined)
          this.emit('removeListener', type, originalListener || listener);
      }

      return this;
    };

EventEmitter.prototype.off = EventEmitter.prototype.removeListener;

EventEmitter.prototype.removeAllListeners =
    function removeAllListeners(type) {
      var listeners, events, i;

      events = this._events;
      if (events === undefined)
        return this;

      // not listening for removeListener, no need to emit
      if (events.removeListener === undefined) {
        if (arguments.length === 0) {
          this._events = Object.create(null);
          this._eventsCount = 0;
        } else if (events[type] !== undefined) {
          if (--this._eventsCount === 0)
            this._events = Object.create(null);
          else
            delete events[type];
        }
        return this;
      }

      // emit removeListener for all listeners on all events
      if (arguments.length === 0) {
        var keys = Object.keys(events);
        var key;
        for (i = 0; i < keys.length; ++i) {
          key = keys[i];
          if (key === 'removeListener') continue;
          this.removeAllListeners(key);
        }
        this.removeAllListeners('removeListener');
        this._events = Object.create(null);
        this._eventsCount = 0;
        return this;
      }

      listeners = events[type];

      if (typeof listeners === 'function') {
        this.removeListener(type, listeners);
      } else if (listeners !== undefined) {
        // LIFO order
        for (i = listeners.length - 1; i >= 0; i--) {
          this.removeListener(type, listeners[i]);
        }
      }

      return this;
    };

function _listeners(target, type, unwrap) {
  var events = target._events;

  if (events === undefined)
    return [];

  var evlistener = events[type];
  if (evlistener === undefined)
    return [];

  if (typeof evlistener === 'function')
    return unwrap ? [evlistener.listener || evlistener] : [evlistener];

  return unwrap ?
    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);
}

EventEmitter.prototype.listeners = function listeners(type) {
  return _listeners(this, type, true);
};

EventEmitter.prototype.rawListeners = function rawListeners(type) {
  return _listeners(this, type, false);
};

EventEmitter.listenerCount = function(emitter, type) {
  if (typeof emitter.listenerCount === 'function') {
    return emitter.listenerCount(type);
  } else {
    return listenerCount.call(emitter, type);
  }
};

EventEmitter.prototype.listenerCount = listenerCount;
function listenerCount(type) {
  var events = this._events;

  if (events !== undefined) {
    var evlistener = events[type];

    if (typeof evlistener === 'function') {
      return 1;
    } else if (evlistener !== undefined) {
      return evlistener.length;
    }
  }

  return 0;
}

EventEmitter.prototype.eventNames = function eventNames() {
  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];
};

function arrayClone(arr, n) {
  var copy = new Array(n);
  for (var i = 0; i < n; ++i)
    copy[i] = arr[i];
  return copy;
}

function spliceOne(list, index) {
  for (; index + 1 < list.length; index++)
    list[index] = list[index + 1];
  list.pop();
}

function unwrapListeners(arr) {
  var ret = new Array(arr.length);
  for (var i = 0; i < ret.length; ++i) {
    ret[i] = arr[i].listener || arr[i];
  }
  return ret;
}

function once(emitter, name) {
  return new Promise(function (resolve, reject) {
    function errorListener(err) {
      emitter.removeListener(name, resolver);
      reject(err);
    }

    function resolver() {
      if (typeof emitter.removeListener === 'function') {
        emitter.removeListener('error', errorListener);
      }
      resolve([].slice.call(arguments));
    };

    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });
    if (name !== 'error') {
      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });
    }
  });
}

function addErrorHandlerIfEventEmitter(emitter, handler, flags) {
  if (typeof emitter.on === 'function') {
    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);
  }
}

function eventTargetAgnosticAddListener(emitter, name, listener, flags) {
  if (typeof emitter.on === 'function') {
    if (flags.once) {
      emitter.once(name, listener);
    } else {
      emitter.on(name, listener);
    }
  } else if (typeof emitter.addEventListener === 'function') {
    // EventTarget does not have `error` event semantics like Node
    // EventEmitters, we do not listen for `error` events here.
    emitter.addEventListener(name, function wrapListener(arg) {
      // IE does not have builtin `{ once: true }` support so we
      // have to do it manually.
      if (flags.once) {
        emitter.removeEventListener(name, wrapListener);
      }
      listener(arg);
    });
  } else {
    throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type ' + typeof emitter);
  }
}

},{}],12:[function(require,module,exports){
(function (process){(function (){
// 'path' module extracted from Node.js v8.11.1 (only the posix part)
// transplited with Babel

// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

'use strict';

function assertPath(path) {
  if (typeof path !== 'string') {
    throw new TypeError('Path must be a string. Received ' + JSON.stringify(path));
  }
}

// Resolves . and .. elements in a path with directory names
function normalizeStringPosix(path, allowAboveRoot) {
  var res = '';
  var lastSegmentLength = 0;
  var lastSlash = -1;
  var dots = 0;
  var code;
  for (var i = 0; i <= path.length; ++i) {
    if (i < path.length)
      code = path.charCodeAt(i);
    else if (code === 47 /*/*/)
      break;
    else
      code = 47 /*/*/;
    if (code === 47 /*/*/) {
      if (lastSlash === i - 1 || dots === 1) {
        // NOOP
      } else if (lastSlash !== i - 1 && dots === 2) {
        if (res.length < 2 || lastSegmentLength !== 2 || res.charCodeAt(res.length - 1) !== 46 /*.*/ || res.charCodeAt(res.length - 2) !== 46 /*.*/) {
          if (res.length > 2) {
            var lastSlashIndex = res.lastIndexOf('/');
            if (lastSlashIndex !== res.length - 1) {
              if (lastSlashIndex === -1) {
                res = '';
                lastSegmentLength = 0;
              } else {
                res = res.slice(0, lastSlashIndex);
                lastSegmentLength = res.length - 1 - res.lastIndexOf('/');
              }
              lastSlash = i;
              dots = 0;
              continue;
            }
          } else if (res.length === 2 || res.length === 1) {
            res = '';
            lastSegmentLength = 0;
            lastSlash = i;
            dots = 0;
            continue;
          }
        }
        if (allowAboveRoot) {
          if (res.length > 0)
            res += '/..';
          else
            res = '..';
          lastSegmentLength = 2;
        }
      } else {
        if (res.length > 0)
          res += '/' + path.slice(lastSlash + 1, i);
        else
          res = path.slice(lastSlash + 1, i);
        lastSegmentLength = i - lastSlash - 1;
      }
      lastSlash = i;
      dots = 0;
    } else if (code === 46 /*.*/ && dots !== -1) {
      ++dots;
    } else {
      dots = -1;
    }
  }
  return res;
}

function _format(sep, pathObject) {
  var dir = pathObject.dir || pathObject.root;
  var base = pathObject.base || (pathObject.name || '') + (pathObject.ext || '');
  if (!dir) {
    return base;
  }
  if (dir === pathObject.root) {
    return dir + base;
  }
  return dir + sep + base;
}

var posix = {
  // path.resolve([from ...], to)
  resolve: function resolve() {
    var resolvedPath = '';
    var resolvedAbsolute = false;
    var cwd;

    for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
      var path;
      if (i >= 0)
        path = arguments[i];
      else {
        if (cwd === undefined)
          cwd = process.cwd();
        path = cwd;
      }

      assertPath(path);

      // Skip empty entries
      if (path.length === 0) {
        continue;
      }

      resolvedPath = path + '/' + resolvedPath;
      resolvedAbsolute = path.charCodeAt(0) === 47 /*/*/;
    }

    // At this point the path should be resolved to a full absolute path, but
    // handle relative paths to be safe (might happen when process.cwd() fails)

    // Normalize the path
    resolvedPath = normalizeStringPosix(resolvedPath, !resolvedAbsolute);

    if (resolvedAbsolute) {
      if (resolvedPath.length > 0)
        return '/' + resolvedPath;
      else
        return '/';
    } else if (resolvedPath.length > 0) {
      return resolvedPath;
    } else {
      return '.';
    }
  },

  normalize: function normalize(path) {
    assertPath(path);

    if (path.length === 0) return '.';

    var isAbsolute = path.charCodeAt(0) === 47 /*/*/;
    var trailingSeparator = path.charCodeAt(path.length - 1) === 47 /*/*/;

    // Normalize the path
    path = normalizeStringPosix(path, !isAbsolute);

    if (path.length === 0 && !isAbsolute) path = '.';
    if (path.length > 0 && trailingSeparator) path += '/';

    if (isAbsolute) return '/' + path;
    return path;
  },

  isAbsolute: function isAbsolute(path) {
    assertPath(path);
    return path.length > 0 && path.charCodeAt(0) === 47 /*/*/;
  },

  join: function join() {
    if (arguments.length === 0)
      return '.';
    var joined;
    for (var i = 0; i < arguments.length; ++i) {
      var arg = arguments[i];
      assertPath(arg);
      if (arg.length > 0) {
        if (joined === undefined)
          joined = arg;
        else
          joined += '/' + arg;
      }
    }
    if (joined === undefined)
      return '.';
    return posix.normalize(joined);
  },

  relative: function relative(from, to) {
    assertPath(from);
    assertPath(to);

    if (from === to) return '';

    from = posix.resolve(from);
    to = posix.resolve(to);

    if (from === to) return '';

    // Trim any leading backslashes
    var fromStart = 1;
    for (; fromStart < from.length; ++fromStart) {
      if (from.charCodeAt(fromStart) !== 47 /*/*/)
        break;
    }
    var fromEnd = from.length;
    var fromLen = fromEnd - fromStart;

    // Trim any leading backslashes
    var toStart = 1;
    for (; toStart < to.length; ++toStart) {
      if (to.charCodeAt(toStart) !== 47 /*/*/)
        break;
    }
    var toEnd = to.length;
    var toLen = toEnd - toStart;

    // Compare paths to find the longest common path from root
    var length = fromLen < toLen ? fromLen : toLen;
    var lastCommonSep = -1;
    var i = 0;
    for (; i <= length; ++i) {
      if (i === length) {
        if (toLen > length) {
          if (to.charCodeAt(toStart + i) === 47 /*/*/) {
            // We get here if `from` is the exact base path for `to`.
            // For example: from='/foo/bar'; to='/foo/bar/baz'
            return to.slice(toStart + i + 1);
          } else if (i === 0) {
            // We get here if `from` is the root
            // For example: from='/'; to='/foo'
            return to.slice(toStart + i);
          }
        } else if (fromLen > length) {
          if (from.charCodeAt(fromStart + i) === 47 /*/*/) {
            // We get here if `to` is the exact base path for `from`.
            // For example: from='/foo/bar/baz'; to='/foo/bar'
            lastCommonSep = i;
          } else if (i === 0) {
            // We get here if `to` is the root.
            // For example: from='/foo'; to='/'
            lastCommonSep = 0;
          }
        }
        break;
      }
      var fromCode = from.charCodeAt(fromStart + i);
      var toCode = to.charCodeAt(toStart + i);
      if (fromCode !== toCode)
        break;
      else if (fromCode === 47 /*/*/)
        lastCommonSep = i;
    }

    var out = '';
    // Generate the relative path based on the path difference between `to`
    // and `from`
    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {
      if (i === fromEnd || from.charCodeAt(i) === 47 /*/*/) {
        if (out.length === 0)
          out += '..';
        else
          out += '/..';
      }
    }

    // Lastly, append the rest of the destination (`to`) path that comes after
    // the common path parts
    if (out.length > 0)
      return out + to.slice(toStart + lastCommonSep);
    else {
      toStart += lastCommonSep;
      if (to.charCodeAt(toStart) === 47 /*/*/)
        ++toStart;
      return to.slice(toStart);
    }
  },

  _makeLong: function _makeLong(path) {
    return path;
  },

  dirname: function dirname(path) {
    assertPath(path);
    if (path.length === 0) return '.';
    var code = path.charCodeAt(0);
    var hasRoot = code === 47 /*/*/;
    var end = -1;
    var matchedSlash = true;
    for (var i = path.length - 1; i >= 1; --i) {
      code = path.charCodeAt(i);
      if (code === 47 /*/*/) {
          if (!matchedSlash) {
            end = i;
            break;
          }
        } else {
        // We saw the first non-path separator
        matchedSlash = false;
      }
    }

    if (end === -1) return hasRoot ? '/' : '.';
    if (hasRoot && end === 1) return '//';
    return path.slice(0, end);
  },

  basename: function basename(path, ext) {
    if (ext !== undefined && typeof ext !== 'string') throw new TypeError('"ext" argument must be a string');
    assertPath(path);

    var start = 0;
    var end = -1;
    var matchedSlash = true;
    var i;

    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {
      if (ext.length === path.length && ext === path) return '';
      var extIdx = ext.length - 1;
      var firstNonSlashEnd = -1;
      for (i = path.length - 1; i >= 0; --i) {
        var code = path.charCodeAt(i);
        if (code === 47 /*/*/) {
            // If we reached a path separator that was not part of a set of path
            // separators at the end of the string, stop now
            if (!matchedSlash) {
              start = i + 1;
              break;
            }
          } else {
          if (firstNonSlashEnd === -1) {
            // We saw the first non-path separator, remember this index in case
            // we need it if the extension ends up not matching
            matchedSlash = false;
            firstNonSlashEnd = i + 1;
          }
          if (extIdx >= 0) {
            // Try to match the explicit extension
            if (code === ext.charCodeAt(extIdx)) {
              if (--extIdx === -1) {
                // We matched the extension, so mark this as the end of our path
                // component
                end = i;
              }
            } else {
              // Extension does not match, so our result is the entire path
              // component
              extIdx = -1;
              end = firstNonSlashEnd;
            }
          }
        }
      }

      if (start === end) end = firstNonSlashEnd;else if (end === -1) end = path.length;
      return path.slice(start, end);
    } else {
      for (i = path.length - 1; i >= 0; --i) {
        if (path.charCodeAt(i) === 47 /*/*/) {
            // If we reached a path separator that was not part of a set of path
            // separators at the end of the string, stop now
            if (!matchedSlash) {
              start = i + 1;
              break;
            }
          } else if (end === -1) {
          // We saw the first non-path separator, mark this as the end of our
          // path component
          matchedSlash = false;
          end = i + 1;
        }
      }

      if (end === -1) return '';
      return path.slice(start, end);
    }
  },

  extname: function extname(path) {
    assertPath(path);
    var startDot = -1;
    var startPart = 0;
    var end = -1;
    var matchedSlash = true;
    // Track the state of characters (if any) we see before our first dot and
    // after any path separator we find
    var preDotState = 0;
    for (var i = path.length - 1; i >= 0; --i) {
      var code = path.charCodeAt(i);
      if (code === 47 /*/*/) {
          // If we reached a path separator that was not part of a set of path
          // separators at the end of the string, stop now
          if (!matchedSlash) {
            startPart = i + 1;
            break;
          }
          continue;
        }
      if (end === -1) {
        // We saw the first non-path separator, mark this as the end of our
        // extension
        matchedSlash = false;
        end = i + 1;
      }
      if (code === 46 /*.*/) {
          // If this is our first dot, mark it as the start of our extension
          if (startDot === -1)
            startDot = i;
          else if (preDotState !== 1)
            preDotState = 1;
      } else if (startDot !== -1) {
        // We saw a non-dot and non-path separator before our dot, so we should
        // have a good chance at having a non-empty extension
        preDotState = -1;
      }
    }

    if (startDot === -1 || end === -1 ||
        // We saw a non-dot character immediately before the dot
        preDotState === 0 ||
        // The (right-most) trimmed path component is exactly '..'
        preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {
      return '';
    }
    return path.slice(startDot, end);
  },

  format: function format(pathObject) {
    if (pathObject === null || typeof pathObject !== 'object') {
      throw new TypeError('The "pathObject" argument must be of type Object. Received type ' + typeof pathObject);
    }
    return _format('/', pathObject);
  },

  parse: function parse(path) {
    assertPath(path);

    var ret = { root: '', dir: '', base: '', ext: '', name: '' };
    if (path.length === 0) return ret;
    var code = path.charCodeAt(0);
    var isAbsolute = code === 47 /*/*/;
    var start;
    if (isAbsolute) {
      ret.root = '/';
      start = 1;
    } else {
      start = 0;
    }
    var startDot = -1;
    var startPart = 0;
    var end = -1;
    var matchedSlash = true;
    var i = path.length - 1;

    // Track the state of characters (if any) we see before our first dot and
    // after any path separator we find
    var preDotState = 0;

    // Get non-dir info
    for (; i >= start; --i) {
      code = path.charCodeAt(i);
      if (code === 47 /*/*/) {
          // If we reached a path separator that was not part of a set of path
          // separators at the end of the string, stop now
          if (!matchedSlash) {
            startPart = i + 1;
            break;
          }
          continue;
        }
      if (end === -1) {
        // We saw the first non-path separator, mark this as the end of our
        // extension
        matchedSlash = false;
        end = i + 1;
      }
      if (code === 46 /*.*/) {
          // If this is our first dot, mark it as the start of our extension
          if (startDot === -1) startDot = i;else if (preDotState !== 1) preDotState = 1;
        } else if (startDot !== -1) {
        // We saw a non-dot and non-path separator before our dot, so we should
        // have a good chance at having a non-empty extension
        preDotState = -1;
      }
    }

    if (startDot === -1 || end === -1 ||
    // We saw a non-dot character immediately before the dot
    preDotState === 0 ||
    // The (right-most) trimmed path component is exactly '..'
    preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {
      if (end !== -1) {
        if (startPart === 0 && isAbsolute) ret.base = ret.name = path.slice(1, end);else ret.base = ret.name = path.slice(startPart, end);
      }
    } else {
      if (startPart === 0 && isAbsolute) {
        ret.name = path.slice(1, startDot);
        ret.base = path.slice(1, end);
      } else {
        ret.name = path.slice(startPart, startDot);
        ret.base = path.slice(startPart, end);
      }
      ret.ext = path.slice(startDot, end);
    }

    if (startPart > 0) ret.dir = path.slice(0, startPart - 1);else if (isAbsolute) ret.dir = '/';

    return ret;
  },

  sep: '/',
  delimiter: ':',
  win32: null,
  posix: null
};

posix.posix = posix;

module.exports = posix;

}).call(this)}).call(this,require('_process'))
},{"_process":108}],13:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

module.exports = Stream;

var EE = require('events').EventEmitter;
var inherits = require('inherits');

inherits(Stream, EE);
Stream.Readable = require('readable-stream/lib/_stream_readable.js');
Stream.Writable = require('readable-stream/lib/_stream_writable.js');
Stream.Duplex = require('readable-stream/lib/_stream_duplex.js');
Stream.Transform = require('readable-stream/lib/_stream_transform.js');
Stream.PassThrough = require('readable-stream/lib/_stream_passthrough.js');
Stream.finished = require('readable-stream/lib/internal/streams/end-of-stream.js')
Stream.pipeline = require('readable-stream/lib/internal/streams/pipeline.js')

// Backwards-compat with node 0.4.x
Stream.Stream = Stream;



// old-style streams.  Note that the pipe method (the only relevant
// part of this class) is overridden in the Readable class.

function Stream() {
  EE.call(this);
}

Stream.prototype.pipe = function(dest, options) {
  var source = this;

  function ondata(chunk) {
    if (dest.writable) {
      if (false === dest.write(chunk) && source.pause) {
        source.pause();
      }
    }
  }

  source.on('data', ondata);

  function ondrain() {
    if (source.readable && source.resume) {
      source.resume();
    }
  }

  dest.on('drain', ondrain);

  // If the 'end' option is not supplied, dest.end() will be called when
  // source gets the 'end' or 'close' events.  Only dest.end() once.
  if (!dest._isStdio && (!options || options.end !== false)) {
    source.on('end', onend);
    source.on('close', onclose);
  }

  var didOnEnd = false;
  function onend() {
    if (didOnEnd) return;
    didOnEnd = true;

    dest.end();
  }


  function onclose() {
    if (didOnEnd) return;
    didOnEnd = true;

    if (typeof dest.destroy === 'function') dest.destroy();
  }

  // don't leave dangling pipes when there are errors.
  function onerror(er) {
    cleanup();
    if (EE.listenerCount(this, 'error') === 0) {
      throw er; // Unhandled stream error in pipe.
    }
  }

  source.on('error', onerror);
  dest.on('error', onerror);

  // remove all the event listeners that were added.
  function cleanup() {
    source.removeListener('data', ondata);
    dest.removeListener('drain', ondrain);

    source.removeListener('end', onend);
    source.removeListener('close', onclose);

    source.removeListener('error', onerror);
    dest.removeListener('error', onerror);

    source.removeListener('end', cleanup);
    source.removeListener('close', cleanup);

    dest.removeListener('close', cleanup);
  }

  source.on('end', cleanup);
  source.on('close', cleanup);

  dest.on('close', cleanup);

  dest.emit('pipe', source);

  // Allow for unix-like usage: A.pipe(B).pipe(C)
  return dest;
};

},{"events":11,"inherits":100,"readable-stream/lib/_stream_duplex.js":15,"readable-stream/lib/_stream_passthrough.js":16,"readable-stream/lib/_stream_readable.js":17,"readable-stream/lib/_stream_transform.js":18,"readable-stream/lib/_stream_writable.js":19,"readable-stream/lib/internal/streams/end-of-stream.js":23,"readable-stream/lib/internal/streams/pipeline.js":25}],14:[function(require,module,exports){
'use strict';

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

var codes = {};

function createErrorType(code, message, Base) {
  if (!Base) {
    Base = Error;
  }

  function getMessage(arg1, arg2, arg3) {
    if (typeof message === 'string') {
      return message;
    } else {
      return message(arg1, arg2, arg3);
    }
  }

  var NodeError =
  /*#__PURE__*/
  function (_Base) {
    _inheritsLoose(NodeError, _Base);

    function NodeError(arg1, arg2, arg3) {
      return _Base.call(this, getMessage(arg1, arg2, arg3)) || this;
    }

    return NodeError;
  }(Base);

  NodeError.prototype.name = Base.name;
  NodeError.prototype.code = code;
  codes[code] = NodeError;
} // https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js


function oneOf(expected, thing) {
  if (Array.isArray(expected)) {
    var len = expected.length;
    expected = expected.map(function (i) {
      return String(i);
    });

    if (len > 2) {
      return "one of ".concat(thing, " ").concat(expected.slice(0, len - 1).join(', '), ", or ") + expected[len - 1];
    } else if (len === 2) {
      return "one of ".concat(thing, " ").concat(expected[0], " or ").concat(expected[1]);
    } else {
      return "of ".concat(thing, " ").concat(expected[0]);
    }
  } else {
    return "of ".concat(thing, " ").concat(String(expected));
  }
} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith


function startsWith(str, search, pos) {
  return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;
} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith


function endsWith(str, search, this_len) {
  if (this_len === undefined || this_len > str.length) {
    this_len = str.length;
  }

  return str.substring(this_len - search.length, this_len) === search;
} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes


function includes(str, search, start) {
  if (typeof start !== 'number') {
    start = 0;
  }

  if (start + search.length > str.length) {
    return false;
  } else {
    return str.indexOf(search, start) !== -1;
  }
}

createErrorType('ERR_INVALID_OPT_VALUE', function (name, value) {
  return 'The value "' + value + '" is invalid for option "' + name + '"';
}, TypeError);
createErrorType('ERR_INVALID_ARG_TYPE', function (name, expected, actual) {
  // determiner: 'must be' or 'must not be'
  var determiner;

  if (typeof expected === 'string' && startsWith(expected, 'not ')) {
    determiner = 'must not be';
    expected = expected.replace(/^not /, '');
  } else {
    determiner = 'must be';
  }

  var msg;

  if (endsWith(name, ' argument')) {
    // For cases like 'first argument'
    msg = "The ".concat(name, " ").concat(determiner, " ").concat(oneOf(expected, 'type'));
  } else {
    var type = includes(name, '.') ? 'property' : 'argument';
    msg = "The \"".concat(name, "\" ").concat(type, " ").concat(determiner, " ").concat(oneOf(expected, 'type'));
  }

  msg += ". Received type ".concat(typeof actual);
  return msg;
}, TypeError);
createErrorType('ERR_STREAM_PUSH_AFTER_EOF', 'stream.push() after EOF');
createErrorType('ERR_METHOD_NOT_IMPLEMENTED', function (name) {
  return 'The ' + name + ' method is not implemented';
});
createErrorType('ERR_STREAM_PREMATURE_CLOSE', 'Premature close');
createErrorType('ERR_STREAM_DESTROYED', function (name) {
  return 'Cannot call ' + name + ' after a stream was destroyed';
});
createErrorType('ERR_MULTIPLE_CALLBACK', 'Callback called multiple times');
createErrorType('ERR_STREAM_CANNOT_PIPE', 'Cannot pipe, not readable');
createErrorType('ERR_STREAM_WRITE_AFTER_END', 'write after end');
createErrorType('ERR_STREAM_NULL_VALUES', 'May not write null values to stream', TypeError);
createErrorType('ERR_UNKNOWN_ENCODING', function (arg) {
  return 'Unknown encoding: ' + arg;
}, TypeError);
createErrorType('ERR_STREAM_UNSHIFT_AFTER_END_EVENT', 'stream.unshift() after end event');
module.exports.codes = codes;

},{}],15:[function(require,module,exports){
(function (process){(function (){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
// a duplex stream is just a stream that is both readable and writable.
// Since JS doesn't have multiple prototypal inheritance, this class
// prototypally inherits from Readable, and then parasitically from
// Writable.
'use strict';
/*<replacement>*/

var objectKeys = Object.keys || function (obj) {
  var keys = [];

  for (var key in obj) {
    keys.push(key);
  }

  return keys;
};
/*</replacement>*/


module.exports = Duplex;

var Readable = require('./_stream_readable');

var Writable = require('./_stream_writable');

require('inherits')(Duplex, Readable);

{
  // Allow the keys array to be GC'ed.
  var keys = objectKeys(Writable.prototype);

  for (var v = 0; v < keys.length; v++) {
    var method = keys[v];
    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];
  }
}

function Duplex(options) {
  if (!(this instanceof Duplex)) return new Duplex(options);
  Readable.call(this, options);
  Writable.call(this, options);
  this.allowHalfOpen = true;

  if (options) {
    if (options.readable === false) this.readable = false;
    if (options.writable === false) this.writable = false;

    if (options.allowHalfOpen === false) {
      this.allowHalfOpen = false;
      this.once('end', onend);
    }
  }
}

Object.defineProperty(Duplex.prototype, 'writableHighWaterMark', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._writableState.highWaterMark;
  }
});
Object.defineProperty(Duplex.prototype, 'writableBuffer', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._writableState && this._writableState.getBuffer();
  }
});
Object.defineProperty(Duplex.prototype, 'writableLength', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._writableState.length;
  }
}); // the no-half-open enforcer

function onend() {
  // If the writable side ended, then we're ok.
  if (this._writableState.ended) return; // no more data can be written.
  // But allow more writes to happen in this tick.

  process.nextTick(onEndNT, this);
}

function onEndNT(self) {
  self.end();
}

Object.defineProperty(Duplex.prototype, 'destroyed', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    if (this._readableState === undefined || this._writableState === undefined) {
      return false;
    }

    return this._readableState.destroyed && this._writableState.destroyed;
  },
  set: function set(value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (this._readableState === undefined || this._writableState === undefined) {
      return;
    } // backward compatibility, the user is explicitly
    // managing destroyed


    this._readableState.destroyed = value;
    this._writableState.destroyed = value;
  }
});
}).call(this)}).call(this,require('_process'))
},{"./_stream_readable":17,"./_stream_writable":19,"_process":108,"inherits":100}],16:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
// a passthrough stream.
// basically just the most minimal sort of Transform stream.
// Every written chunk gets output as-is.
'use strict';

module.exports = PassThrough;

var Transform = require('./_stream_transform');

require('inherits')(PassThrough, Transform);

function PassThrough(options) {
  if (!(this instanceof PassThrough)) return new PassThrough(options);
  Transform.call(this, options);
}

PassThrough.prototype._transform = function (chunk, encoding, cb) {
  cb(null, chunk);
};
},{"./_stream_transform":18,"inherits":100}],17:[function(require,module,exports){
(function (process,global){(function (){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
'use strict';

module.exports = Readable;
/*<replacement>*/

var Duplex;
/*</replacement>*/

Readable.ReadableState = ReadableState;
/*<replacement>*/

var EE = require('events').EventEmitter;

var EElistenerCount = function EElistenerCount(emitter, type) {
  return emitter.listeners(type).length;
};
/*</replacement>*/

/*<replacement>*/


var Stream = require('./internal/streams/stream');
/*</replacement>*/


var Buffer = require('buffer').Buffer;

var OurUint8Array = global.Uint8Array || function () {};

function _uint8ArrayToBuffer(chunk) {
  return Buffer.from(chunk);
}

function _isUint8Array(obj) {
  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;
}
/*<replacement>*/


var debugUtil = require('util');

var debug;

if (debugUtil && debugUtil.debuglog) {
  debug = debugUtil.debuglog('stream');
} else {
  debug = function debug() {};
}
/*</replacement>*/


var BufferList = require('./internal/streams/buffer_list');

var destroyImpl = require('./internal/streams/destroy');

var _require = require('./internal/streams/state'),
    getHighWaterMark = _require.getHighWaterMark;

var _require$codes = require('../errors').codes,
    ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,
    ERR_STREAM_PUSH_AFTER_EOF = _require$codes.ERR_STREAM_PUSH_AFTER_EOF,
    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,
    ERR_STREAM_UNSHIFT_AFTER_END_EVENT = _require$codes.ERR_STREAM_UNSHIFT_AFTER_END_EVENT; // Lazy loaded to improve the startup performance.


var StringDecoder;
var createReadableStreamAsyncIterator;
var from;

require('inherits')(Readable, Stream);

var errorOrDestroy = destroyImpl.errorOrDestroy;
var kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];

function prependListener(emitter, event, fn) {
  // Sadly this is not cacheable as some libraries bundle their own
  // event emitter implementation with them.
  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn); // This is a hack to make sure that our error handler is attached before any
  // userland ones.  NEVER DO THIS. This is here only because this code needs
  // to continue to work with older versions of Node.js that do not include
  // the prependListener() method. The goal is to eventually remove this hack.

  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (Array.isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];
}

function ReadableState(options, stream, isDuplex) {
  Duplex = Duplex || require('./_stream_duplex');
  options = options || {}; // Duplex streams are both readable and writable, but share
  // the same options object.
  // However, some cases require setting options to different
  // values for the readable and the writable sides of the duplex stream.
  // These options can be provided separately as readableXXX and writableXXX.

  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex; // object stream flag. Used to make read(n) ignore n and to
  // make all the buffer merging and length checks go away

  this.objectMode = !!options.objectMode;
  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode; // the point at which it stops calling _read() to fill the buffer
  // Note: 0 is a valid value, means "don't call _read preemptively ever"

  this.highWaterMark = getHighWaterMark(this, options, 'readableHighWaterMark', isDuplex); // A linked list is used to store data chunks instead of an array because the
  // linked list can remove elements from the beginning faster than
  // array.shift()

  this.buffer = new BufferList();
  this.length = 0;
  this.pipes = null;
  this.pipesCount = 0;
  this.flowing = null;
  this.ended = false;
  this.endEmitted = false;
  this.reading = false; // a flag to be able to tell if the event 'readable'/'data' is emitted
  // immediately, or on a later tick.  We set this to true at first, because
  // any actions that shouldn't happen until "later" should generally also
  // not happen before the first read call.

  this.sync = true; // whenever we return null, then we set a flag to say
  // that we're awaiting a 'readable' event emission.

  this.needReadable = false;
  this.emittedReadable = false;
  this.readableListening = false;
  this.resumeScheduled = false;
  this.paused = true; // Should close be emitted on destroy. Defaults to true.

  this.emitClose = options.emitClose !== false; // Should .destroy() be called after 'end' (and potentially 'finish')

  this.autoDestroy = !!options.autoDestroy; // has it been destroyed

  this.destroyed = false; // Crypto is kind of old and crusty.  Historically, its default string
  // encoding is 'binary' so we have to make this configurable.
  // Everything else in the universe uses 'utf8', though.

  this.defaultEncoding = options.defaultEncoding || 'utf8'; // the number of writers that are awaiting a drain event in .pipe()s

  this.awaitDrain = 0; // if true, a maybeReadMore has been scheduled

  this.readingMore = false;
  this.decoder = null;
  this.encoding = null;

  if (options.encoding) {
    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;
    this.decoder = new StringDecoder(options.encoding);
    this.encoding = options.encoding;
  }
}

function Readable(options) {
  Duplex = Duplex || require('./_stream_duplex');
  if (!(this instanceof Readable)) return new Readable(options); // Checking for a Stream.Duplex instance is faster here instead of inside
  // the ReadableState constructor, at least with V8 6.5

  var isDuplex = this instanceof Duplex;
  this._readableState = new ReadableState(options, this, isDuplex); // legacy

  this.readable = true;

  if (options) {
    if (typeof options.read === 'function') this._read = options.read;
    if (typeof options.destroy === 'function') this._destroy = options.destroy;
  }

  Stream.call(this);
}

Object.defineProperty(Readable.prototype, 'destroyed', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    if (this._readableState === undefined) {
      return false;
    }

    return this._readableState.destroyed;
  },
  set: function set(value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (!this._readableState) {
      return;
    } // backward compatibility, the user is explicitly
    // managing destroyed


    this._readableState.destroyed = value;
  }
});
Readable.prototype.destroy = destroyImpl.destroy;
Readable.prototype._undestroy = destroyImpl.undestroy;

Readable.prototype._destroy = function (err, cb) {
  cb(err);
}; // Manually shove something into the read() buffer.
// This returns true if the highWaterMark has not been hit yet,
// similar to how Writable.write() returns true if you should
// write() some more.


Readable.prototype.push = function (chunk, encoding) {
  var state = this._readableState;
  var skipChunkCheck;

  if (!state.objectMode) {
    if (typeof chunk === 'string') {
      encoding = encoding || state.defaultEncoding;

      if (encoding !== state.encoding) {
        chunk = Buffer.from(chunk, encoding);
        encoding = '';
      }

      skipChunkCheck = true;
    }
  } else {
    skipChunkCheck = true;
  }

  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);
}; // Unshift should *always* be something directly out of read()


Readable.prototype.unshift = function (chunk) {
  return readableAddChunk(this, chunk, null, true, false);
};

function readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {
  debug('readableAddChunk', chunk);
  var state = stream._readableState;

  if (chunk === null) {
    state.reading = false;
    onEofChunk(stream, state);
  } else {
    var er;
    if (!skipChunkCheck) er = chunkInvalid(state, chunk);

    if (er) {
      errorOrDestroy(stream, er);
    } else if (state.objectMode || chunk && chunk.length > 0) {
      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {
        chunk = _uint8ArrayToBuffer(chunk);
      }

      if (addToFront) {
        if (state.endEmitted) errorOrDestroy(stream, new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());else addChunk(stream, state, chunk, true);
      } else if (state.ended) {
        errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF());
      } else if (state.destroyed) {
        return false;
      } else {
        state.reading = false;

        if (state.decoder && !encoding) {
          chunk = state.decoder.write(chunk);
          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);
        } else {
          addChunk(stream, state, chunk, false);
        }
      }
    } else if (!addToFront) {
      state.reading = false;
      maybeReadMore(stream, state);
    }
  } // We can push more data if we are below the highWaterMark.
  // Also, if we have no data yet, we can stand some more bytes.
  // This is to work around cases where hwm=0, such as the repl.


  return !state.ended && (state.length < state.highWaterMark || state.length === 0);
}

function addChunk(stream, state, chunk, addToFront) {
  if (state.flowing && state.length === 0 && !state.sync) {
    state.awaitDrain = 0;
    stream.emit('data', chunk);
  } else {
    // update the buffer info.
    state.length += state.objectMode ? 1 : chunk.length;
    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);
    if (state.needReadable) emitReadable(stream);
  }

  maybeReadMore(stream, state);
}

function chunkInvalid(state, chunk) {
  var er;

  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {
    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer', 'Uint8Array'], chunk);
  }

  return er;
}

Readable.prototype.isPaused = function () {
  return this._readableState.flowing === false;
}; // backwards compatibility.


Readable.prototype.setEncoding = function (enc) {
  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;
  var decoder = new StringDecoder(enc);
  this._readableState.decoder = decoder; // If setEncoding(null), decoder.encoding equals utf8

  this._readableState.encoding = this._readableState.decoder.encoding; // Iterate over current buffer to convert already stored Buffers:

  var p = this._readableState.buffer.head;
  var content = '';

  while (p !== null) {
    content += decoder.write(p.data);
    p = p.next;
  }

  this._readableState.buffer.clear();

  if (content !== '') this._readableState.buffer.push(content);
  this._readableState.length = content.length;
  return this;
}; // Don't raise the hwm > 1GB


var MAX_HWM = 0x40000000;

function computeNewHighWaterMark(n) {
  if (n >= MAX_HWM) {
    // TODO(ronag): Throw ERR_VALUE_OUT_OF_RANGE.
    n = MAX_HWM;
  } else {
    // Get the next highest power of 2 to prevent increasing hwm excessively in
    // tiny amounts
    n--;
    n |= n >>> 1;
    n |= n >>> 2;
    n |= n >>> 4;
    n |= n >>> 8;
    n |= n >>> 16;
    n++;
  }

  return n;
} // This function is designed to be inlinable, so please take care when making
// changes to the function body.


function howMuchToRead(n, state) {
  if (n <= 0 || state.length === 0 && state.ended) return 0;
  if (state.objectMode) return 1;

  if (n !== n) {
    // Only flow one buffer at a time
    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;
  } // If we're asking for more than the current hwm, then raise the hwm.


  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);
  if (n <= state.length) return n; // Don't have enough

  if (!state.ended) {
    state.needReadable = true;
    return 0;
  }

  return state.length;
} // you can override either this method, or the async _read(n) below.


Readable.prototype.read = function (n) {
  debug('read', n);
  n = parseInt(n, 10);
  var state = this._readableState;
  var nOrig = n;
  if (n !== 0) state.emittedReadable = false; // if we're doing read(0) to trigger a readable event, but we
  // already have a bunch of data in the buffer, then just trigger
  // the 'readable' event and move on.

  if (n === 0 && state.needReadable && ((state.highWaterMark !== 0 ? state.length >= state.highWaterMark : state.length > 0) || state.ended)) {
    debug('read: emitReadable', state.length, state.ended);
    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);
    return null;
  }

  n = howMuchToRead(n, state); // if we've ended, and we're now clear, then finish it up.

  if (n === 0 && state.ended) {
    if (state.length === 0) endReadable(this);
    return null;
  } // All the actual chunk generation logic needs to be
  // *below* the call to _read.  The reason is that in certain
  // synthetic stream cases, such as passthrough streams, _read
  // may be a completely synchronous operation which may change
  // the state of the read buffer, providing enough data when
  // before there was *not* enough.
  //
  // So, the steps are:
  // 1. Figure out what the state of things will be after we do
  // a read from the buffer.
  //
  // 2. If that resulting state will trigger a _read, then call _read.
  // Note that this may be asynchronous, or synchronous.  Yes, it is
  // deeply ugly to write APIs this way, but that still doesn't mean
  // that the Readable class should behave improperly, as streams are
  // designed to be sync/async agnostic.
  // Take note if the _read call is sync or async (ie, if the read call
  // has returned yet), so that we know whether or not it's safe to emit
  // 'readable' etc.
  //
  // 3. Actually pull the requested chunks out of the buffer and return.
  // if we need a readable event, then we need to do some reading.


  var doRead = state.needReadable;
  debug('need readable', doRead); // if we currently have less than the highWaterMark, then also read some

  if (state.length === 0 || state.length - n < state.highWaterMark) {
    doRead = true;
    debug('length less than watermark', doRead);
  } // however, if we've ended, then there's no point, and if we're already
  // reading, then it's unnecessary.


  if (state.ended || state.reading) {
    doRead = false;
    debug('reading or ended', doRead);
  } else if (doRead) {
    debug('do read');
    state.reading = true;
    state.sync = true; // if the length is currently zero, then we *need* a readable event.

    if (state.length === 0) state.needReadable = true; // call internal read method

    this._read(state.highWaterMark);

    state.sync = false; // If _read pushed data synchronously, then `reading` will be false,
    // and we need to re-evaluate how much data we can return to the user.

    if (!state.reading) n = howMuchToRead(nOrig, state);
  }

  var ret;
  if (n > 0) ret = fromList(n, state);else ret = null;

  if (ret === null) {
    state.needReadable = state.length <= state.highWaterMark;
    n = 0;
  } else {
    state.length -= n;
    state.awaitDrain = 0;
  }

  if (state.length === 0) {
    // If we have nothing in the buffer, then we want to know
    // as soon as we *do* get something into the buffer.
    if (!state.ended) state.needReadable = true; // If we tried to read() past the EOF, then emit end on the next tick.

    if (nOrig !== n && state.ended) endReadable(this);
  }

  if (ret !== null) this.emit('data', ret);
  return ret;
};

function onEofChunk(stream, state) {
  debug('onEofChunk');
  if (state.ended) return;

  if (state.decoder) {
    var chunk = state.decoder.end();

    if (chunk && chunk.length) {
      state.buffer.push(chunk);
      state.length += state.objectMode ? 1 : chunk.length;
    }
  }

  state.ended = true;

  if (state.sync) {
    // if we are sync, wait until next tick to emit the data.
    // Otherwise we risk emitting data in the flow()
    // the readable code triggers during a read() call
    emitReadable(stream);
  } else {
    // emit 'readable' now to make sure it gets picked up.
    state.needReadable = false;

    if (!state.emittedReadable) {
      state.emittedReadable = true;
      emitReadable_(stream);
    }
  }
} // Don't emit readable right away in sync mode, because this can trigger
// another read() call => stack overflow.  This way, it might trigger
// a nextTick recursion warning, but that's not so bad.


function emitReadable(stream) {
  var state = stream._readableState;
  debug('emitReadable', state.needReadable, state.emittedReadable);
  state.needReadable = false;

  if (!state.emittedReadable) {
    debug('emitReadable', state.flowing);
    state.emittedReadable = true;
    process.nextTick(emitReadable_, stream);
  }
}

function emitReadable_(stream) {
  var state = stream._readableState;
  debug('emitReadable_', state.destroyed, state.length, state.ended);

  if (!state.destroyed && (state.length || state.ended)) {
    stream.emit('readable');
    state.emittedReadable = false;
  } // The stream needs another readable event if
  // 1. It is not flowing, as the flow mechanism will take
  //    care of it.
  // 2. It is not ended.
  // 3. It is below the highWaterMark, so we can schedule
  //    another readable later.


  state.needReadable = !state.flowing && !state.ended && state.length <= state.highWaterMark;
  flow(stream);
} // at this point, the user has presumably seen the 'readable' event,
// and called read() to consume some data.  that may have triggered
// in turn another _read(n) call, in which case reading = true if
// it's in progress.
// However, if we're not ended, or reading, and the length < hwm,
// then go ahead and try to read some more preemptively.


function maybeReadMore(stream, state) {
  if (!state.readingMore) {
    state.readingMore = true;
    process.nextTick(maybeReadMore_, stream, state);
  }
}

function maybeReadMore_(stream, state) {
  // Attempt to read more data if we should.
  //
  // The conditions for reading more data are (one of):
  // - Not enough data buffered (state.length < state.highWaterMark). The loop
  //   is responsible for filling the buffer with enough data if such data
  //   is available. If highWaterMark is 0 and we are not in the flowing mode
  //   we should _not_ attempt to buffer any extra data. We'll get more data
  //   when the stream consumer calls read() instead.
  // - No data in the buffer, and the stream is in flowing mode. In this mode
  //   the loop below is responsible for ensuring read() is called. Failing to
  //   call read here would abort the flow and there's no other mechanism for
  //   continuing the flow if the stream consumer has just subscribed to the
  //   'data' event.
  //
  // In addition to the above conditions to keep reading data, the following
  // conditions prevent the data from being read:
  // - The stream has ended (state.ended).
  // - There is already a pending 'read' operation (state.reading). This is a
  //   case where the the stream has called the implementation defined _read()
  //   method, but they are processing the call asynchronously and have _not_
  //   called push() with new data. In this case we skip performing more
  //   read()s. The execution ends in this method again after the _read() ends
  //   up calling push() with more data.
  while (!state.reading && !state.ended && (state.length < state.highWaterMark || state.flowing && state.length === 0)) {
    var len = state.length;
    debug('maybeReadMore read 0');
    stream.read(0);
    if (len === state.length) // didn't get any data, stop spinning.
      break;
  }

  state.readingMore = false;
} // abstract method.  to be overridden in specific implementation classes.
// call cb(er, data) where data is <= n in length.
// for virtual (non-string, non-buffer) streams, "length" is somewhat
// arbitrary, and perhaps not very meaningful.


Readable.prototype._read = function (n) {
  errorOrDestroy(this, new ERR_METHOD_NOT_IMPLEMENTED('_read()'));
};

Readable.prototype.pipe = function (dest, pipeOpts) {
  var src = this;
  var state = this._readableState;

  switch (state.pipesCount) {
    case 0:
      state.pipes = dest;
      break;

    case 1:
      state.pipes = [state.pipes, dest];
      break;

    default:
      state.pipes.push(dest);
      break;
  }

  state.pipesCount += 1;
  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);
  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;
  var endFn = doEnd ? onend : unpipe;
  if (state.endEmitted) process.nextTick(endFn);else src.once('end', endFn);
  dest.on('unpipe', onunpipe);

  function onunpipe(readable, unpipeInfo) {
    debug('onunpipe');

    if (readable === src) {
      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {
        unpipeInfo.hasUnpiped = true;
        cleanup();
      }
    }
  }

  function onend() {
    debug('onend');
    dest.end();
  } // when the dest drains, it reduces the awaitDrain counter
  // on the source.  This would be more elegant with a .once()
  // handler in flow(), but adding and removing repeatedly is
  // too slow.


  var ondrain = pipeOnDrain(src);
  dest.on('drain', ondrain);
  var cleanedUp = false;

  function cleanup() {
    debug('cleanup'); // cleanup event handlers once the pipe is broken

    dest.removeListener('close', onclose);
    dest.removeListener('finish', onfinish);
    dest.removeListener('drain', ondrain);
    dest.removeListener('error', onerror);
    dest.removeListener('unpipe', onunpipe);
    src.removeListener('end', onend);
    src.removeListener('end', unpipe);
    src.removeListener('data', ondata);
    cleanedUp = true; // if the reader is waiting for a drain event from this
    // specific writer, then it would cause it to never start
    // flowing again.
    // So, if this is awaiting a drain, then we just call it now.
    // If we don't know, then assume that we are waiting for one.

    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();
  }

  src.on('data', ondata);

  function ondata(chunk) {
    debug('ondata');
    var ret = dest.write(chunk);
    debug('dest.write', ret);

    if (ret === false) {
      // If the user unpiped during `dest.write()`, it is possible
      // to get stuck in a permanently paused state if that write
      // also returned false.
      // => Check whether `dest` is still a piping destination.
      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {
        debug('false write response, pause', state.awaitDrain);
        state.awaitDrain++;
      }

      src.pause();
    }
  } // if the dest has an error, then stop piping into it.
  // however, don't suppress the throwing behavior for this.


  function onerror(er) {
    debug('onerror', er);
    unpipe();
    dest.removeListener('error', onerror);
    if (EElistenerCount(dest, 'error') === 0) errorOrDestroy(dest, er);
  } // Make sure our error handler is attached before userland ones.


  prependListener(dest, 'error', onerror); // Both close and finish should trigger unpipe, but only once.

  function onclose() {
    dest.removeListener('finish', onfinish);
    unpipe();
  }

  dest.once('close', onclose);

  function onfinish() {
    debug('onfinish');
    dest.removeListener('close', onclose);
    unpipe();
  }

  dest.once('finish', onfinish);

  function unpipe() {
    debug('unpipe');
    src.unpipe(dest);
  } // tell the dest that it's being piped to


  dest.emit('pipe', src); // start the flow if it hasn't been started already.

  if (!state.flowing) {
    debug('pipe resume');
    src.resume();
  }

  return dest;
};

function pipeOnDrain(src) {
  return function pipeOnDrainFunctionResult() {
    var state = src._readableState;
    debug('pipeOnDrain', state.awaitDrain);
    if (state.awaitDrain) state.awaitDrain--;

    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {
      state.flowing = true;
      flow(src);
    }
  };
}

Readable.prototype.unpipe = function (dest) {
  var state = this._readableState;
  var unpipeInfo = {
    hasUnpiped: false
  }; // if we're not piping anywhere, then do nothing.

  if (state.pipesCount === 0) return this; // just one destination.  most common case.

  if (state.pipesCount === 1) {
    // passed in one, but it's not the right one.
    if (dest && dest !== state.pipes) return this;
    if (!dest) dest = state.pipes; // got a match.

    state.pipes = null;
    state.pipesCount = 0;
    state.flowing = false;
    if (dest) dest.emit('unpipe', this, unpipeInfo);
    return this;
  } // slow case. multiple pipe destinations.


  if (!dest) {
    // remove all.
    var dests = state.pipes;
    var len = state.pipesCount;
    state.pipes = null;
    state.pipesCount = 0;
    state.flowing = false;

    for (var i = 0; i < len; i++) {
      dests[i].emit('unpipe', this, {
        hasUnpiped: false
      });
    }

    return this;
  } // try to find the right one.


  var index = indexOf(state.pipes, dest);
  if (index === -1) return this;
  state.pipes.splice(index, 1);
  state.pipesCount -= 1;
  if (state.pipesCount === 1) state.pipes = state.pipes[0];
  dest.emit('unpipe', this, unpipeInfo);
  return this;
}; // set up data events if they are asked for
// Ensure readable listeners eventually get something


Readable.prototype.on = function (ev, fn) {
  var res = Stream.prototype.on.call(this, ev, fn);
  var state = this._readableState;

  if (ev === 'data') {
    // update readableListening so that resume() may be a no-op
    // a few lines down. This is needed to support once('readable').
    state.readableListening = this.listenerCount('readable') > 0; // Try start flowing on next tick if stream isn't explicitly paused

    if (state.flowing !== false) this.resume();
  } else if (ev === 'readable') {
    if (!state.endEmitted && !state.readableListening) {
      state.readableListening = state.needReadable = true;
      state.flowing = false;
      state.emittedReadable = false;
      debug('on readable', state.length, state.reading);

      if (state.length) {
        emitReadable(this);
      } else if (!state.reading) {
        process.nextTick(nReadingNextTick, this);
      }
    }
  }

  return res;
};

Readable.prototype.addListener = Readable.prototype.on;

Readable.prototype.removeListener = function (ev, fn) {
  var res = Stream.prototype.removeListener.call(this, ev, fn);

  if (ev === 'readable') {
    // We need to check if there is someone still listening to
    // readable and reset the state. However this needs to happen
    // after readable has been emitted but before I/O (nextTick) to
    // support once('readable', fn) cycles. This means that calling
    // resume within the same tick will have no
    // effect.
    process.nextTick(updateReadableListening, this);
  }

  return res;
};

Readable.prototype.removeAllListeners = function (ev) {
  var res = Stream.prototype.removeAllListeners.apply(this, arguments);

  if (ev === 'readable' || ev === undefined) {
    // We need to check if there is someone still listening to
    // readable and reset the state. However this needs to happen
    // after readable has been emitted but before I/O (nextTick) to
    // support once('readable', fn) cycles. This means that calling
    // resume within the same tick will have no
    // effect.
    process.nextTick(updateReadableListening, this);
  }

  return res;
};

function updateReadableListening(self) {
  var state = self._readableState;
  state.readableListening = self.listenerCount('readable') > 0;

  if (state.resumeScheduled && !state.paused) {
    // flowing needs to be set to true now, otherwise
    // the upcoming resume will not flow.
    state.flowing = true; // crude way to check if we should resume
  } else if (self.listenerCount('data') > 0) {
    self.resume();
  }
}

function nReadingNextTick(self) {
  debug('readable nexttick read 0');
  self.read(0);
} // pause() and resume() are remnants of the legacy readable stream API
// If the user uses them, then switch into old mode.


Readable.prototype.resume = function () {
  var state = this._readableState;

  if (!state.flowing) {
    debug('resume'); // we flow only if there is no one listening
    // for readable, but we still have to call
    // resume()

    state.flowing = !state.readableListening;
    resume(this, state);
  }

  state.paused = false;
  return this;
};

function resume(stream, state) {
  if (!state.resumeScheduled) {
    state.resumeScheduled = true;
    process.nextTick(resume_, stream, state);
  }
}

function resume_(stream, state) {
  debug('resume', state.reading);

  if (!state.reading) {
    stream.read(0);
  }

  state.resumeScheduled = false;
  stream.emit('resume');
  flow(stream);
  if (state.flowing && !state.reading) stream.read(0);
}

Readable.prototype.pause = function () {
  debug('call pause flowing=%j', this._readableState.flowing);

  if (this._readableState.flowing !== false) {
    debug('pause');
    this._readableState.flowing = false;
    this.emit('pause');
  }

  this._readableState.paused = true;
  return this;
};

function flow(stream) {
  var state = stream._readableState;
  debug('flow', state.flowing);

  while (state.flowing && stream.read() !== null) {
    ;
  }
} // wrap an old-style stream as the async data source.
// This is *not* part of the readable stream interface.
// It is an ugly unfortunate mess of history.


Readable.prototype.wrap = function (stream) {
  var _this = this;

  var state = this._readableState;
  var paused = false;
  stream.on('end', function () {
    debug('wrapped end');

    if (state.decoder && !state.ended) {
      var chunk = state.decoder.end();
      if (chunk && chunk.length) _this.push(chunk);
    }

    _this.push(null);
  });
  stream.on('data', function (chunk) {
    debug('wrapped data');
    if (state.decoder) chunk = state.decoder.write(chunk); // don't skip over falsy values in objectMode

    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;

    var ret = _this.push(chunk);

    if (!ret) {
      paused = true;
      stream.pause();
    }
  }); // proxy all the other methods.
  // important when wrapping filters and duplexes.

  for (var i in stream) {
    if (this[i] === undefined && typeof stream[i] === 'function') {
      this[i] = function methodWrap(method) {
        return function methodWrapReturnFunction() {
          return stream[method].apply(stream, arguments);
        };
      }(i);
    }
  } // proxy certain important events.


  for (var n = 0; n < kProxyEvents.length; n++) {
    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));
  } // when we try to consume some more bytes, simply unpause the
  // underlying stream.


  this._read = function (n) {
    debug('wrapped _read', n);

    if (paused) {
      paused = false;
      stream.resume();
    }
  };

  return this;
};

if (typeof Symbol === 'function') {
  Readable.prototype[Symbol.asyncIterator] = function () {
    if (createReadableStreamAsyncIterator === undefined) {
      createReadableStreamAsyncIterator = require('./internal/streams/async_iterator');
    }

    return createReadableStreamAsyncIterator(this);
  };
}

Object.defineProperty(Readable.prototype, 'readableHighWaterMark', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._readableState.highWaterMark;
  }
});
Object.defineProperty(Readable.prototype, 'readableBuffer', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._readableState && this._readableState.buffer;
  }
});
Object.defineProperty(Readable.prototype, 'readableFlowing', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._readableState.flowing;
  },
  set: function set(state) {
    if (this._readableState) {
      this._readableState.flowing = state;
    }
  }
}); // exposed for testing purposes only.

Readable._fromList = fromList;
Object.defineProperty(Readable.prototype, 'readableLength', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._readableState.length;
  }
}); // Pluck off n bytes from an array of buffers.
// Length is the combined lengths of all the buffers in the list.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.

function fromList(n, state) {
  // nothing buffered
  if (state.length === 0) return null;
  var ret;
  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {
    // read it all, truncate the list
    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.first();else ret = state.buffer.concat(state.length);
    state.buffer.clear();
  } else {
    // read part of list
    ret = state.buffer.consume(n, state.decoder);
  }
  return ret;
}

function endReadable(stream) {
  var state = stream._readableState;
  debug('endReadable', state.endEmitted);

  if (!state.endEmitted) {
    state.ended = true;
    process.nextTick(endReadableNT, state, stream);
  }
}

function endReadableNT(state, stream) {
  debug('endReadableNT', state.endEmitted, state.length); // Check that we didn't get one last unshift.

  if (!state.endEmitted && state.length === 0) {
    state.endEmitted = true;
    stream.readable = false;
    stream.emit('end');

    if (state.autoDestroy) {
      // In case of duplex streams we need a way to detect
      // if the writable side is ready for autoDestroy as well
      var wState = stream._writableState;

      if (!wState || wState.autoDestroy && wState.finished) {
        stream.destroy();
      }
    }
  }
}

if (typeof Symbol === 'function') {
  Readable.from = function (iterable, opts) {
    if (from === undefined) {
      from = require('./internal/streams/from');
    }

    return from(Readable, iterable, opts);
  };
}

function indexOf(xs, x) {
  for (var i = 0, l = xs.length; i < l; i++) {
    if (xs[i] === x) return i;
  }

  return -1;
}
}).call(this)}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"../errors":14,"./_stream_duplex":15,"./internal/streams/async_iterator":20,"./internal/streams/buffer_list":21,"./internal/streams/destroy":22,"./internal/streams/from":24,"./internal/streams/state":26,"./internal/streams/stream":27,"_process":108,"buffer":10,"events":11,"inherits":100,"string_decoder/":116,"util":8}],18:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
// a transform stream is a readable/writable stream where you do
// something with the data.  Sometimes it's called a "filter",
// but that's not a great name for it, since that implies a thing where
// some bits pass through, and others are simply ignored.  (That would
// be a valid example of a transform, of course.)
//
// While the output is causally related to the input, it's not a
// necessarily symmetric or synchronous transformation.  For example,
// a zlib stream might take multiple plain-text writes(), and then
// emit a single compressed chunk some time in the future.
//
// Here's how this works:
//
// The Transform stream has all the aspects of the readable and writable
// stream classes.  When you write(chunk), that calls _write(chunk,cb)
// internally, and returns false if there's a lot of pending writes
// buffered up.  When you call read(), that calls _read(n) until
// there's enough pending readable data buffered up.
//
// In a transform stream, the written data is placed in a buffer.  When
// _read(n) is called, it transforms the queued up data, calling the
// buffered _write cb's as it consumes chunks.  If consuming a single
// written chunk would result in multiple output chunks, then the first
// outputted bit calls the readcb, and subsequent chunks just go into
// the read buffer, and will cause it to emit 'readable' if necessary.
//
// This way, back-pressure is actually determined by the reading side,
// since _read has to be called to start processing a new chunk.  However,
// a pathological inflate type of transform can cause excessive buffering
// here.  For example, imagine a stream where every byte of input is
// interpreted as an integer from 0-255, and then results in that many
// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in
// 1kb of data being output.  In this case, you could write a very small
// amount of input, and end up with a very large amount of output.  In
// such a pathological inflating mechanism, there'd be no way to tell
// the system to stop doing the transform.  A single 4MB write could
// cause the system to run out of memory.
//
// However, even in such a pathological case, only a single written chunk
// would be consumed, and then the rest would wait (un-transformed) until
// the results of the previous transformed chunk were consumed.
'use strict';

module.exports = Transform;

var _require$codes = require('../errors').codes,
    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,
    ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,
    ERR_TRANSFORM_ALREADY_TRANSFORMING = _require$codes.ERR_TRANSFORM_ALREADY_TRANSFORMING,
    ERR_TRANSFORM_WITH_LENGTH_0 = _require$codes.ERR_TRANSFORM_WITH_LENGTH_0;

var Duplex = require('./_stream_duplex');

require('inherits')(Transform, Duplex);

function afterTransform(er, data) {
  var ts = this._transformState;
  ts.transforming = false;
  var cb = ts.writecb;

  if (cb === null) {
    return this.emit('error', new ERR_MULTIPLE_CALLBACK());
  }

  ts.writechunk = null;
  ts.writecb = null;
  if (data != null) // single equals check for both `null` and `undefined`
    this.push(data);
  cb(er);
  var rs = this._readableState;
  rs.reading = false;

  if (rs.needReadable || rs.length < rs.highWaterMark) {
    this._read(rs.highWaterMark);
  }
}

function Transform(options) {
  if (!(this instanceof Transform)) return new Transform(options);
  Duplex.call(this, options);
  this._transformState = {
    afterTransform: afterTransform.bind(this),
    needTransform: false,
    transforming: false,
    writecb: null,
    writechunk: null,
    writeencoding: null
  }; // start out asking for a readable event once data is transformed.

  this._readableState.needReadable = true; // we have implemented the _read method, and done the other things
  // that Readable wants before the first _read call, so unset the
  // sync guard flag.

  this._readableState.sync = false;

  if (options) {
    if (typeof options.transform === 'function') this._transform = options.transform;
    if (typeof options.flush === 'function') this._flush = options.flush;
  } // When the writable side finishes, then flush out anything remaining.


  this.on('prefinish', prefinish);
}

function prefinish() {
  var _this = this;

  if (typeof this._flush === 'function' && !this._readableState.destroyed) {
    this._flush(function (er, data) {
      done(_this, er, data);
    });
  } else {
    done(this, null, null);
  }
}

Transform.prototype.push = function (chunk, encoding) {
  this._transformState.needTransform = false;
  return Duplex.prototype.push.call(this, chunk, encoding);
}; // This is the part where you do stuff!
// override this function in implementation classes.
// 'chunk' is an input chunk.
//
// Call `push(newChunk)` to pass along transformed output
// to the readable side.  You may call 'push' zero or more times.
//
// Call `cb(err)` when you are done with this chunk.  If you pass
// an error, then that'll put the hurt on the whole operation.  If you
// never call cb(), then you'll never get another chunk.


Transform.prototype._transform = function (chunk, encoding, cb) {
  cb(new ERR_METHOD_NOT_IMPLEMENTED('_transform()'));
};

Transform.prototype._write = function (chunk, encoding, cb) {
  var ts = this._transformState;
  ts.writecb = cb;
  ts.writechunk = chunk;
  ts.writeencoding = encoding;

  if (!ts.transforming) {
    var rs = this._readableState;
    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);
  }
}; // Doesn't matter what the args are here.
// _transform does all the work.
// That we got here means that the readable side wants more data.


Transform.prototype._read = function (n) {
  var ts = this._transformState;

  if (ts.writechunk !== null && !ts.transforming) {
    ts.transforming = true;

    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);
  } else {
    // mark that we need a transform, so that any data that comes in
    // will get processed, now that we've asked for it.
    ts.needTransform = true;
  }
};

Transform.prototype._destroy = function (err, cb) {
  Duplex.prototype._destroy.call(this, err, function (err2) {
    cb(err2);
  });
};

function done(stream, er, data) {
  if (er) return stream.emit('error', er);
  if (data != null) // single equals check for both `null` and `undefined`
    stream.push(data); // TODO(BridgeAR): Write a test for these two error cases
  // if there's nothing in the write buffer, then that means
  // that nothing more will ever be provided

  if (stream._writableState.length) throw new ERR_TRANSFORM_WITH_LENGTH_0();
  if (stream._transformState.transforming) throw new ERR_TRANSFORM_ALREADY_TRANSFORMING();
  return stream.push(null);
}
},{"../errors":14,"./_stream_duplex":15,"inherits":100}],19:[function(require,module,exports){
(function (process,global){(function (){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
// A bit simpler than readable streams.
// Implement an async ._write(chunk, encoding, cb), and it'll handle all
// the drain event emission and buffering.
'use strict';

module.exports = Writable;
/* <replacement> */

function WriteReq(chunk, encoding, cb) {
  this.chunk = chunk;
  this.encoding = encoding;
  this.callback = cb;
  this.next = null;
} // It seems a linked list but it is not
// there will be only 2 of these for each stream


function CorkedRequest(state) {
  var _this = this;

  this.next = null;
  this.entry = null;

  this.finish = function () {
    onCorkedFinish(_this, state);
  };
}
/* </replacement> */

/*<replacement>*/


var Duplex;
/*</replacement>*/

Writable.WritableState = WritableState;
/*<replacement>*/

var internalUtil = {
  deprecate: require('util-deprecate')
};
/*</replacement>*/

/*<replacement>*/

var Stream = require('./internal/streams/stream');
/*</replacement>*/


var Buffer = require('buffer').Buffer;

var OurUint8Array = global.Uint8Array || function () {};

function _uint8ArrayToBuffer(chunk) {
  return Buffer.from(chunk);
}

function _isUint8Array(obj) {
  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;
}

var destroyImpl = require('./internal/streams/destroy');

var _require = require('./internal/streams/state'),
    getHighWaterMark = _require.getHighWaterMark;

var _require$codes = require('../errors').codes,
    ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,
    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,
    ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,
    ERR_STREAM_CANNOT_PIPE = _require$codes.ERR_STREAM_CANNOT_PIPE,
    ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED,
    ERR_STREAM_NULL_VALUES = _require$codes.ERR_STREAM_NULL_VALUES,
    ERR_STREAM_WRITE_AFTER_END = _require$codes.ERR_STREAM_WRITE_AFTER_END,
    ERR_UNKNOWN_ENCODING = _require$codes.ERR_UNKNOWN_ENCODING;

var errorOrDestroy = destroyImpl.errorOrDestroy;

require('inherits')(Writable, Stream);

function nop() {}

function WritableState(options, stream, isDuplex) {
  Duplex = Duplex || require('./_stream_duplex');
  options = options || {}; // Duplex streams are both readable and writable, but share
  // the same options object.
  // However, some cases require setting options to different
  // values for the readable and the writable sides of the duplex stream,
  // e.g. options.readableObjectMode vs. options.writableObjectMode, etc.

  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex; // object stream flag to indicate whether or not this stream
  // contains buffers or objects.

  this.objectMode = !!options.objectMode;
  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode; // the point at which write() starts returning false
  // Note: 0 is a valid value, means that we always return false if
  // the entire buffer is not flushed immediately on write()

  this.highWaterMark = getHighWaterMark(this, options, 'writableHighWaterMark', isDuplex); // if _final has been called

  this.finalCalled = false; // drain event flag.

  this.needDrain = false; // at the start of calling end()

  this.ending = false; // when end() has been called, and returned

  this.ended = false; // when 'finish' is emitted

  this.finished = false; // has it been destroyed

  this.destroyed = false; // should we decode strings into buffers before passing to _write?
  // this is here so that some node-core streams can optimize string
  // handling at a lower level.

  var noDecode = options.decodeStrings === false;
  this.decodeStrings = !noDecode; // Crypto is kind of old and crusty.  Historically, its default string
  // encoding is 'binary' so we have to make this configurable.
  // Everything else in the universe uses 'utf8', though.

  this.defaultEncoding = options.defaultEncoding || 'utf8'; // not an actual buffer we keep track of, but a measurement
  // of how much we're waiting to get pushed to some underlying
  // socket or file.

  this.length = 0; // a flag to see when we're in the middle of a write.

  this.writing = false; // when true all writes will be buffered until .uncork() call

  this.corked = 0; // a flag to be able to tell if the onwrite cb is called immediately,
  // or on a later tick.  We set this to true at first, because any
  // actions that shouldn't happen until "later" should generally also
  // not happen before the first write call.

  this.sync = true; // a flag to know if we're processing previously buffered items, which
  // may call the _write() callback in the same tick, so that we don't
  // end up in an overlapped onwrite situation.

  this.bufferProcessing = false; // the callback that's passed to _write(chunk,cb)

  this.onwrite = function (er) {
    onwrite(stream, er);
  }; // the callback that the user supplies to write(chunk,encoding,cb)


  this.writecb = null; // the amount that is being written when _write is called.

  this.writelen = 0;
  this.bufferedRequest = null;
  this.lastBufferedRequest = null; // number of pending user-supplied write callbacks
  // this must be 0 before 'finish' can be emitted

  this.pendingcb = 0; // emit prefinish if the only thing we're waiting for is _write cbs
  // This is relevant for synchronous Transform streams

  this.prefinished = false; // True if the error was already emitted and should not be thrown again

  this.errorEmitted = false; // Should close be emitted on destroy. Defaults to true.

  this.emitClose = options.emitClose !== false; // Should .destroy() be called after 'finish' (and potentially 'end')

  this.autoDestroy = !!options.autoDestroy; // count buffered requests

  this.bufferedRequestCount = 0; // allocate the first CorkedRequest, there is always
  // one allocated and free to use, and we maintain at most two

  this.corkedRequestsFree = new CorkedRequest(this);
}

WritableState.prototype.getBuffer = function getBuffer() {
  var current = this.bufferedRequest;
  var out = [];

  while (current) {
    out.push(current);
    current = current.next;
  }

  return out;
};

(function () {
  try {
    Object.defineProperty(WritableState.prototype, 'buffer', {
      get: internalUtil.deprecate(function writableStateBufferGetter() {
        return this.getBuffer();
      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')
    });
  } catch (_) {}
})(); // Test _writableState for inheritance to account for Duplex streams,
// whose prototype chain only points to Readable.


var realHasInstance;

if (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {
  realHasInstance = Function.prototype[Symbol.hasInstance];
  Object.defineProperty(Writable, Symbol.hasInstance, {
    value: function value(object) {
      if (realHasInstance.call(this, object)) return true;
      if (this !== Writable) return false;
      return object && object._writableState instanceof WritableState;
    }
  });
} else {
  realHasInstance = function realHasInstance(object) {
    return object instanceof this;
  };
}

function Writable(options) {
  Duplex = Duplex || require('./_stream_duplex'); // Writable ctor is applied to Duplexes, too.
  // `realHasInstance` is necessary because using plain `instanceof`
  // would return false, as no `_writableState` property is attached.
  // Trying to use the custom `instanceof` for Writable here will also break the
  // Node.js LazyTransform implementation, which has a non-trivial getter for
  // `_writableState` that would lead to infinite recursion.
  // Checking for a Stream.Duplex instance is faster here instead of inside
  // the WritableState constructor, at least with V8 6.5

  var isDuplex = this instanceof Duplex;
  if (!isDuplex && !realHasInstance.call(Writable, this)) return new Writable(options);
  this._writableState = new WritableState(options, this, isDuplex); // legacy.

  this.writable = true;

  if (options) {
    if (typeof options.write === 'function') this._write = options.write;
    if (typeof options.writev === 'function') this._writev = options.writev;
    if (typeof options.destroy === 'function') this._destroy = options.destroy;
    if (typeof options.final === 'function') this._final = options.final;
  }

  Stream.call(this);
} // Otherwise people can pipe Writable streams, which is just wrong.


Writable.prototype.pipe = function () {
  errorOrDestroy(this, new ERR_STREAM_CANNOT_PIPE());
};

function writeAfterEnd(stream, cb) {
  var er = new ERR_STREAM_WRITE_AFTER_END(); // TODO: defer error events consistently everywhere, not just the cb

  errorOrDestroy(stream, er);
  process.nextTick(cb, er);
} // Checks that a user-supplied chunk is valid, especially for the particular
// mode the stream is in. Currently this means that `null` is never accepted
// and undefined/non-string values are only allowed in object mode.


function validChunk(stream, state, chunk, cb) {
  var er;

  if (chunk === null) {
    er = new ERR_STREAM_NULL_VALUES();
  } else if (typeof chunk !== 'string' && !state.objectMode) {
    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer'], chunk);
  }

  if (er) {
    errorOrDestroy(stream, er);
    process.nextTick(cb, er);
    return false;
  }

  return true;
}

Writable.prototype.write = function (chunk, encoding, cb) {
  var state = this._writableState;
  var ret = false;

  var isBuf = !state.objectMode && _isUint8Array(chunk);

  if (isBuf && !Buffer.isBuffer(chunk)) {
    chunk = _uint8ArrayToBuffer(chunk);
  }

  if (typeof encoding === 'function') {
    cb = encoding;
    encoding = null;
  }

  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;
  if (typeof cb !== 'function') cb = nop;
  if (state.ending) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {
    state.pendingcb++;
    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);
  }
  return ret;
};

Writable.prototype.cork = function () {
  this._writableState.corked++;
};

Writable.prototype.uncork = function () {
  var state = this._writableState;

  if (state.corked) {
    state.corked--;
    if (!state.writing && !state.corked && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);
  }
};

Writable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {
  // node::ParseEncoding() requires lower case.
  if (typeof encoding === 'string') encoding = encoding.toLowerCase();
  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new ERR_UNKNOWN_ENCODING(encoding);
  this._writableState.defaultEncoding = encoding;
  return this;
};

Object.defineProperty(Writable.prototype, 'writableBuffer', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._writableState && this._writableState.getBuffer();
  }
});

function decodeChunk(state, chunk, encoding) {
  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {
    chunk = Buffer.from(chunk, encoding);
  }

  return chunk;
}

Object.defineProperty(Writable.prototype, 'writableHighWaterMark', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._writableState.highWaterMark;
  }
}); // if we're already writing something, then just put this
// in the queue, and wait our turn.  Otherwise, call _write
// If we return false, then we need a drain event, so set that flag.

function writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {
  if (!isBuf) {
    var newChunk = decodeChunk(state, chunk, encoding);

    if (chunk !== newChunk) {
      isBuf = true;
      encoding = 'buffer';
      chunk = newChunk;
    }
  }

  var len = state.objectMode ? 1 : chunk.length;
  state.length += len;
  var ret = state.length < state.highWaterMark; // we must ensure that previous needDrain will not be reset to false.

  if (!ret) state.needDrain = true;

  if (state.writing || state.corked) {
    var last = state.lastBufferedRequest;
    state.lastBufferedRequest = {
      chunk: chunk,
      encoding: encoding,
      isBuf: isBuf,
      callback: cb,
      next: null
    };

    if (last) {
      last.next = state.lastBufferedRequest;
    } else {
      state.bufferedRequest = state.lastBufferedRequest;
    }

    state.bufferedRequestCount += 1;
  } else {
    doWrite(stream, state, false, len, chunk, encoding, cb);
  }

  return ret;
}

function doWrite(stream, state, writev, len, chunk, encoding, cb) {
  state.writelen = len;
  state.writecb = cb;
  state.writing = true;
  state.sync = true;
  if (state.destroyed) state.onwrite(new ERR_STREAM_DESTROYED('write'));else if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);
  state.sync = false;
}

function onwriteError(stream, state, sync, er, cb) {
  --state.pendingcb;

  if (sync) {
    // defer the callback if we are being called synchronously
    // to avoid piling up things on the stack
    process.nextTick(cb, er); // this can emit finish, and it will always happen
    // after error

    process.nextTick(finishMaybe, stream, state);
    stream._writableState.errorEmitted = true;
    errorOrDestroy(stream, er);
  } else {
    // the caller expect this to happen before if
    // it is async
    cb(er);
    stream._writableState.errorEmitted = true;
    errorOrDestroy(stream, er); // this can emit finish, but finish must
    // always follow error

    finishMaybe(stream, state);
  }
}

function onwriteStateUpdate(state) {
  state.writing = false;
  state.writecb = null;
  state.length -= state.writelen;
  state.writelen = 0;
}

function onwrite(stream, er) {
  var state = stream._writableState;
  var sync = state.sync;
  var cb = state.writecb;
  if (typeof cb !== 'function') throw new ERR_MULTIPLE_CALLBACK();
  onwriteStateUpdate(state);
  if (er) onwriteError(stream, state, sync, er, cb);else {
    // Check if we're actually ready to finish, but don't emit yet
    var finished = needFinish(state) || stream.destroyed;

    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {
      clearBuffer(stream, state);
    }

    if (sync) {
      process.nextTick(afterWrite, stream, state, finished, cb);
    } else {
      afterWrite(stream, state, finished, cb);
    }
  }
}

function afterWrite(stream, state, finished, cb) {
  if (!finished) onwriteDrain(stream, state);
  state.pendingcb--;
  cb();
  finishMaybe(stream, state);
} // Must force callback to be called on nextTick, so that we don't
// emit 'drain' before the write() consumer gets the 'false' return
// value, and has a chance to attach a 'drain' listener.


function onwriteDrain(stream, state) {
  if (state.length === 0 && state.needDrain) {
    state.needDrain = false;
    stream.emit('drain');
  }
} // if there's something in the buffer waiting, then process it


function clearBuffer(stream, state) {
  state.bufferProcessing = true;
  var entry = state.bufferedRequest;

  if (stream._writev && entry && entry.next) {
    // Fast case, write everything using _writev()
    var l = state.bufferedRequestCount;
    var buffer = new Array(l);
    var holder = state.corkedRequestsFree;
    holder.entry = entry;
    var count = 0;
    var allBuffers = true;

    while (entry) {
      buffer[count] = entry;
      if (!entry.isBuf) allBuffers = false;
      entry = entry.next;
      count += 1;
    }

    buffer.allBuffers = allBuffers;
    doWrite(stream, state, true, state.length, buffer, '', holder.finish); // doWrite is almost always async, defer these to save a bit of time
    // as the hot path ends with doWrite

    state.pendingcb++;
    state.lastBufferedRequest = null;

    if (holder.next) {
      state.corkedRequestsFree = holder.next;
      holder.next = null;
    } else {
      state.corkedRequestsFree = new CorkedRequest(state);
    }

    state.bufferedRequestCount = 0;
  } else {
    // Slow case, write chunks one-by-one
    while (entry) {
      var chunk = entry.chunk;
      var encoding = entry.encoding;
      var cb = entry.callback;
      var len = state.objectMode ? 1 : chunk.length;
      doWrite(stream, state, false, len, chunk, encoding, cb);
      entry = entry.next;
      state.bufferedRequestCount--; // if we didn't call the onwrite immediately, then
      // it means that we need to wait until it does.
      // also, that means that the chunk and cb are currently
      // being processed, so move the buffer counter past them.

      if (state.writing) {
        break;
      }
    }

    if (entry === null) state.lastBufferedRequest = null;
  }

  state.bufferedRequest = entry;
  state.bufferProcessing = false;
}

Writable.prototype._write = function (chunk, encoding, cb) {
  cb(new ERR_METHOD_NOT_IMPLEMENTED('_write()'));
};

Writable.prototype._writev = null;

Writable.prototype.end = function (chunk, encoding, cb) {
  var state = this._writableState;

  if (typeof chunk === 'function') {
    cb = chunk;
    chunk = null;
    encoding = null;
  } else if (typeof encoding === 'function') {
    cb = encoding;
    encoding = null;
  }

  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding); // .end() fully uncorks

  if (state.corked) {
    state.corked = 1;
    this.uncork();
  } // ignore unnecessary end() calls.


  if (!state.ending) endWritable(this, state, cb);
  return this;
};

Object.defineProperty(Writable.prototype, 'writableLength', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._writableState.length;
  }
});

function needFinish(state) {
  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;
}

function callFinal(stream, state) {
  stream._final(function (err) {
    state.pendingcb--;

    if (err) {
      errorOrDestroy(stream, err);
    }

    state.prefinished = true;
    stream.emit('prefinish');
    finishMaybe(stream, state);
  });
}

function prefinish(stream, state) {
  if (!state.prefinished && !state.finalCalled) {
    if (typeof stream._final === 'function' && !state.destroyed) {
      state.pendingcb++;
      state.finalCalled = true;
      process.nextTick(callFinal, stream, state);
    } else {
      state.prefinished = true;
      stream.emit('prefinish');
    }
  }
}

function finishMaybe(stream, state) {
  var need = needFinish(state);

  if (need) {
    prefinish(stream, state);

    if (state.pendingcb === 0) {
      state.finished = true;
      stream.emit('finish');

      if (state.autoDestroy) {
        // In case of duplex streams we need a way to detect
        // if the readable side is ready for autoDestroy as well
        var rState = stream._readableState;

        if (!rState || rState.autoDestroy && rState.endEmitted) {
          stream.destroy();
        }
      }
    }
  }

  return need;
}

function endWritable(stream, state, cb) {
  state.ending = true;
  finishMaybe(stream, state);

  if (cb) {
    if (state.finished) process.nextTick(cb);else stream.once('finish', cb);
  }

  state.ended = true;
  stream.writable = false;
}

function onCorkedFinish(corkReq, state, err) {
  var entry = corkReq.entry;
  corkReq.entry = null;

  while (entry) {
    var cb = entry.callback;
    state.pendingcb--;
    cb(err);
    entry = entry.next;
  } // reuse the free corkReq.


  state.corkedRequestsFree.next = corkReq;
}

Object.defineProperty(Writable.prototype, 'destroyed', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    if (this._writableState === undefined) {
      return false;
    }

    return this._writableState.destroyed;
  },
  set: function set(value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (!this._writableState) {
      return;
    } // backward compatibility, the user is explicitly
    // managing destroyed


    this._writableState.destroyed = value;
  }
});
Writable.prototype.destroy = destroyImpl.destroy;
Writable.prototype._undestroy = destroyImpl.undestroy;

Writable.prototype._destroy = function (err, cb) {
  cb(err);
};
}).call(this)}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"../errors":14,"./_stream_duplex":15,"./internal/streams/destroy":22,"./internal/streams/state":26,"./internal/streams/stream":27,"_process":108,"buffer":10,"inherits":100,"util-deprecate":125}],20:[function(require,module,exports){
(function (process){(function (){
'use strict';

var _Object$setPrototypeO;

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var finished = require('./end-of-stream');

var kLastResolve = Symbol('lastResolve');
var kLastReject = Symbol('lastReject');
var kError = Symbol('error');
var kEnded = Symbol('ended');
var kLastPromise = Symbol('lastPromise');
var kHandlePromise = Symbol('handlePromise');
var kStream = Symbol('stream');

function createIterResult(value, done) {
  return {
    value: value,
    done: done
  };
}

function readAndResolve(iter) {
  var resolve = iter[kLastResolve];

  if (resolve !== null) {
    var data = iter[kStream].read(); // we defer if data is null
    // we can be expecting either 'end' or
    // 'error'

    if (data !== null) {
      iter[kLastPromise] = null;
      iter[kLastResolve] = null;
      iter[kLastReject] = null;
      resolve(createIterResult(data, false));
    }
  }
}

function onReadable(iter) {
  // we wait for the next tick, because it might
  // emit an error with process.nextTick
  process.nextTick(readAndResolve, iter);
}

function wrapForNext(lastPromise, iter) {
  return function (resolve, reject) {
    lastPromise.then(function () {
      if (iter[kEnded]) {
        resolve(createIterResult(undefined, true));
        return;
      }

      iter[kHandlePromise](resolve, reject);
    }, reject);
  };
}

var AsyncIteratorPrototype = Object.getPrototypeOf(function () {});
var ReadableStreamAsyncIteratorPrototype = Object.setPrototypeOf((_Object$setPrototypeO = {
  get stream() {
    return this[kStream];
  },

  next: function next() {
    var _this = this;

    // if we have detected an error in the meanwhile
    // reject straight away
    var error = this[kError];

    if (error !== null) {
      return Promise.reject(error);
    }

    if (this[kEnded]) {
      return Promise.resolve(createIterResult(undefined, true));
    }

    if (this[kStream].destroyed) {
      // We need to defer via nextTick because if .destroy(err) is
      // called, the error will be emitted via nextTick, and
      // we cannot guarantee that there is no error lingering around
      // waiting to be emitted.
      return new Promise(function (resolve, reject) {
        process.nextTick(function () {
          if (_this[kError]) {
            reject(_this[kError]);
          } else {
            resolve(createIterResult(undefined, true));
          }
        });
      });
    } // if we have multiple next() calls
    // we will wait for the previous Promise to finish
    // this logic is optimized to support for await loops,
    // where next() is only called once at a time


    var lastPromise = this[kLastPromise];
    var promise;

    if (lastPromise) {
      promise = new Promise(wrapForNext(lastPromise, this));
    } else {
      // fast path needed to support multiple this.push()
      // without triggering the next() queue
      var data = this[kStream].read();

      if (data !== null) {
        return Promise.resolve(createIterResult(data, false));
      }

      promise = new Promise(this[kHandlePromise]);
    }

    this[kLastPromise] = promise;
    return promise;
  }
}, _defineProperty(_Object$setPrototypeO, Symbol.asyncIterator, function () {
  return this;
}), _defineProperty(_Object$setPrototypeO, "return", function _return() {
  var _this2 = this;

  // destroy(err, cb) is a private API
  // we can guarantee we have that here, because we control the
  // Readable class this is attached to
  return new Promise(function (resolve, reject) {
    _this2[kStream].destroy(null, function (err) {
      if (err) {
        reject(err);
        return;
      }

      resolve(createIterResult(undefined, true));
    });
  });
}), _Object$setPrototypeO), AsyncIteratorPrototype);

var createReadableStreamAsyncIterator = function createReadableStreamAsyncIterator(stream) {
  var _Object$create;

  var iterator = Object.create(ReadableStreamAsyncIteratorPrototype, (_Object$create = {}, _defineProperty(_Object$create, kStream, {
    value: stream,
    writable: true
  }), _defineProperty(_Object$create, kLastResolve, {
    value: null,
    writable: true
  }), _defineProperty(_Object$create, kLastReject, {
    value: null,
    writable: true
  }), _defineProperty(_Object$create, kError, {
    value: null,
    writable: true
  }), _defineProperty(_Object$create, kEnded, {
    value: stream._readableState.endEmitted,
    writable: true
  }), _defineProperty(_Object$create, kHandlePromise, {
    value: function value(resolve, reject) {
      var data = iterator[kStream].read();

      if (data) {
        iterator[kLastPromise] = null;
        iterator[kLastResolve] = null;
        iterator[kLastReject] = null;
        resolve(createIterResult(data, false));
      } else {
        iterator[kLastResolve] = resolve;
        iterator[kLastReject] = reject;
      }
    },
    writable: true
  }), _Object$create));
  iterator[kLastPromise] = null;
  finished(stream, function (err) {
    if (err && err.code !== 'ERR_STREAM_PREMATURE_CLOSE') {
      var reject = iterator[kLastReject]; // reject if we are waiting for data in the Promise
      // returned by next() and store the error

      if (reject !== null) {
        iterator[kLastPromise] = null;
        iterator[kLastResolve] = null;
        iterator[kLastReject] = null;
        reject(err);
      }

      iterator[kError] = err;
      return;
    }

    var resolve = iterator[kLastResolve];

    if (resolve !== null) {
      iterator[kLastPromise] = null;
      iterator[kLastResolve] = null;
      iterator[kLastReject] = null;
      resolve(createIterResult(undefined, true));
    }

    iterator[kEnded] = true;
  });
  stream.on('readable', onReadable.bind(null, iterator));
  return iterator;
};

module.exports = createReadableStreamAsyncIterator;
}).call(this)}).call(this,require('_process'))
},{"./end-of-stream":23,"_process":108}],21:[function(require,module,exports){
'use strict';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var _require = require('buffer'),
    Buffer = _require.Buffer;

var _require2 = require('util'),
    inspect = _require2.inspect;

var custom = inspect && inspect.custom || 'inspect';

function copyBuffer(src, target, offset) {
  Buffer.prototype.copy.call(src, target, offset);
}

module.exports =
/*#__PURE__*/
function () {
  function BufferList() {
    _classCallCheck(this, BufferList);

    this.head = null;
    this.tail = null;
    this.length = 0;
  }

  _createClass(BufferList, [{
    key: "push",
    value: function push(v) {
      var entry = {
        data: v,
        next: null
      };
      if (this.length > 0) this.tail.next = entry;else this.head = entry;
      this.tail = entry;
      ++this.length;
    }
  }, {
    key: "unshift",
    value: function unshift(v) {
      var entry = {
        data: v,
        next: this.head
      };
      if (this.length === 0) this.tail = entry;
      this.head = entry;
      ++this.length;
    }
  }, {
    key: "shift",
    value: function shift() {
      if (this.length === 0) return;
      var ret = this.head.data;
      if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;
      --this.length;
      return ret;
    }
  }, {
    key: "clear",
    value: function clear() {
      this.head = this.tail = null;
      this.length = 0;
    }
  }, {
    key: "join",
    value: function join(s) {
      if (this.length === 0) return '';
      var p = this.head;
      var ret = '' + p.data;

      while (p = p.next) {
        ret += s + p.data;
      }

      return ret;
    }
  }, {
    key: "concat",
    value: function concat(n) {
      if (this.length === 0) return Buffer.alloc(0);
      var ret = Buffer.allocUnsafe(n >>> 0);
      var p = this.head;
      var i = 0;

      while (p) {
        copyBuffer(p.data, ret, i);
        i += p.data.length;
        p = p.next;
      }

      return ret;
    } // Consumes a specified amount of bytes or characters from the buffered data.

  }, {
    key: "consume",
    value: function consume(n, hasStrings) {
      var ret;

      if (n < this.head.data.length) {
        // `slice` is the same for buffers and strings.
        ret = this.head.data.slice(0, n);
        this.head.data = this.head.data.slice(n);
      } else if (n === this.head.data.length) {
        // First chunk is a perfect match.
        ret = this.shift();
      } else {
        // Result spans more than one buffer.
        ret = hasStrings ? this._getString(n) : this._getBuffer(n);
      }

      return ret;
    }
  }, {
    key: "first",
    value: function first() {
      return this.head.data;
    } // Consumes a specified amount of characters from the buffered data.

  }, {
    key: "_getString",
    value: function _getString(n) {
      var p = this.head;
      var c = 1;
      var ret = p.data;
      n -= ret.length;

      while (p = p.next) {
        var str = p.data;
        var nb = n > str.length ? str.length : n;
        if (nb === str.length) ret += str;else ret += str.slice(0, n);
        n -= nb;

        if (n === 0) {
          if (nb === str.length) {
            ++c;
            if (p.next) this.head = p.next;else this.head = this.tail = null;
          } else {
            this.head = p;
            p.data = str.slice(nb);
          }

          break;
        }

        ++c;
      }

      this.length -= c;
      return ret;
    } // Consumes a specified amount of bytes from the buffered data.

  }, {
    key: "_getBuffer",
    value: function _getBuffer(n) {
      var ret = Buffer.allocUnsafe(n);
      var p = this.head;
      var c = 1;
      p.data.copy(ret);
      n -= p.data.length;

      while (p = p.next) {
        var buf = p.data;
        var nb = n > buf.length ? buf.length : n;
        buf.copy(ret, ret.length - n, 0, nb);
        n -= nb;

        if (n === 0) {
          if (nb === buf.length) {
            ++c;
            if (p.next) this.head = p.next;else this.head = this.tail = null;
          } else {
            this.head = p;
            p.data = buf.slice(nb);
          }

          break;
        }

        ++c;
      }

      this.length -= c;
      return ret;
    } // Make sure the linked list only shows the minimal necessary information.

  }, {
    key: custom,
    value: function value(_, options) {
      return inspect(this, _objectSpread({}, options, {
        // Only inspect one level.
        depth: 0,
        // It should not recurse.
        customInspect: false
      }));
    }
  }]);

  return BufferList;
}();
},{"buffer":10,"util":8}],22:[function(require,module,exports){
(function (process){(function (){
'use strict'; // undocumented cb() API, needed for core, not for public API

function destroy(err, cb) {
  var _this = this;

  var readableDestroyed = this._readableState && this._readableState.destroyed;
  var writableDestroyed = this._writableState && this._writableState.destroyed;

  if (readableDestroyed || writableDestroyed) {
    if (cb) {
      cb(err);
    } else if (err) {
      if (!this._writableState) {
        process.nextTick(emitErrorNT, this, err);
      } else if (!this._writableState.errorEmitted) {
        this._writableState.errorEmitted = true;
        process.nextTick(emitErrorNT, this, err);
      }
    }

    return this;
  } // we set destroyed to true before firing error callbacks in order
  // to make it re-entrance safe in case destroy() is called within callbacks


  if (this._readableState) {
    this._readableState.destroyed = true;
  } // if this is a duplex stream mark the writable part as destroyed as well


  if (this._writableState) {
    this._writableState.destroyed = true;
  }

  this._destroy(err || null, function (err) {
    if (!cb && err) {
      if (!_this._writableState) {
        process.nextTick(emitErrorAndCloseNT, _this, err);
      } else if (!_this._writableState.errorEmitted) {
        _this._writableState.errorEmitted = true;
        process.nextTick(emitErrorAndCloseNT, _this, err);
      } else {
        process.nextTick(emitCloseNT, _this);
      }
    } else if (cb) {
      process.nextTick(emitCloseNT, _this);
      cb(err);
    } else {
      process.nextTick(emitCloseNT, _this);
    }
  });

  return this;
}

function emitErrorAndCloseNT(self, err) {
  emitErrorNT(self, err);
  emitCloseNT(self);
}

function emitCloseNT(self) {
  if (self._writableState && !self._writableState.emitClose) return;
  if (self._readableState && !self._readableState.emitClose) return;
  self.emit('close');
}

function undestroy() {
  if (this._readableState) {
    this._readableState.destroyed = false;
    this._readableState.reading = false;
    this._readableState.ended = false;
    this._readableState.endEmitted = false;
  }

  if (this._writableState) {
    this._writableState.destroyed = false;
    this._writableState.ended = false;
    this._writableState.ending = false;
    this._writableState.finalCalled = false;
    this._writableState.prefinished = false;
    this._writableState.finished = false;
    this._writableState.errorEmitted = false;
  }
}

function emitErrorNT(self, err) {
  self.emit('error', err);
}

function errorOrDestroy(stream, err) {
  // We have tests that rely on errors being emitted
  // in the same tick, so changing this is semver major.
  // For now when you opt-in to autoDestroy we allow
  // the error to be emitted nextTick. In a future
  // semver major update we should change the default to this.
  var rState = stream._readableState;
  var wState = stream._writableState;
  if (rState && rState.autoDestroy || wState && wState.autoDestroy) stream.destroy(err);else stream.emit('error', err);
}

module.exports = {
  destroy: destroy,
  undestroy: undestroy,
  errorOrDestroy: errorOrDestroy
};
}).call(this)}).call(this,require('_process'))
},{"_process":108}],23:[function(require,module,exports){
// Ported from https://github.com/mafintosh/end-of-stream with
// permission from the author, Mathias Buus (@mafintosh).
'use strict';

var ERR_STREAM_PREMATURE_CLOSE = require('../../../errors').codes.ERR_STREAM_PREMATURE_CLOSE;

function once(callback) {
  var called = false;
  return function () {
    if (called) return;
    called = true;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    callback.apply(this, args);
  };
}

function noop() {}

function isRequest(stream) {
  return stream.setHeader && typeof stream.abort === 'function';
}

function eos(stream, opts, callback) {
  if (typeof opts === 'function') return eos(stream, null, opts);
  if (!opts) opts = {};
  callback = once(callback || noop);
  var readable = opts.readable || opts.readable !== false && stream.readable;
  var writable = opts.writable || opts.writable !== false && stream.writable;

  var onlegacyfinish = function onlegacyfinish() {
    if (!stream.writable) onfinish();
  };

  var writableEnded = stream._writableState && stream._writableState.finished;

  var onfinish = function onfinish() {
    writable = false;
    writableEnded = true;
    if (!readable) callback.call(stream);
  };

  var readableEnded = stream._readableState && stream._readableState.endEmitted;

  var onend = function onend() {
    readable = false;
    readableEnded = true;
    if (!writable) callback.call(stream);
  };

  var onerror = function onerror(err) {
    callback.call(stream, err);
  };

  var onclose = function onclose() {
    var err;

    if (readable && !readableEnded) {
      if (!stream._readableState || !stream._readableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();
      return callback.call(stream, err);
    }

    if (writable && !writableEnded) {
      if (!stream._writableState || !stream._writableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();
      return callback.call(stream, err);
    }
  };

  var onrequest = function onrequest() {
    stream.req.on('finish', onfinish);
  };

  if (isRequest(stream)) {
    stream.on('complete', onfinish);
    stream.on('abort', onclose);
    if (stream.req) onrequest();else stream.on('request', onrequest);
  } else if (writable && !stream._writableState) {
    // legacy streams
    stream.on('end', onlegacyfinish);
    stream.on('close', onlegacyfinish);
  }

  stream.on('end', onend);
  stream.on('finish', onfinish);
  if (opts.error !== false) stream.on('error', onerror);
  stream.on('close', onclose);
  return function () {
    stream.removeListener('complete', onfinish);
    stream.removeListener('abort', onclose);
    stream.removeListener('request', onrequest);
    if (stream.req) stream.req.removeListener('finish', onfinish);
    stream.removeListener('end', onlegacyfinish);
    stream.removeListener('close', onlegacyfinish);
    stream.removeListener('finish', onfinish);
    stream.removeListener('end', onend);
    stream.removeListener('error', onerror);
    stream.removeListener('close', onclose);
  };
}

module.exports = eos;
},{"../../../errors":14}],24:[function(require,module,exports){
module.exports = function () {
  throw new Error('Readable.from is not available in the browser')
};

},{}],25:[function(require,module,exports){
// Ported from https://github.com/mafintosh/pump with
// permission from the author, Mathias Buus (@mafintosh).
'use strict';

var eos;

function once(callback) {
  var called = false;
  return function () {
    if (called) return;
    called = true;
    callback.apply(void 0, arguments);
  };
}

var _require$codes = require('../../../errors').codes,
    ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS,
    ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED;

function noop(err) {
  // Rethrow the error if it exists to avoid swallowing it
  if (err) throw err;
}

function isRequest(stream) {
  return stream.setHeader && typeof stream.abort === 'function';
}

function destroyer(stream, reading, writing, callback) {
  callback = once(callback);
  var closed = false;
  stream.on('close', function () {
    closed = true;
  });
  if (eos === undefined) eos = require('./end-of-stream');
  eos(stream, {
    readable: reading,
    writable: writing
  }, function (err) {
    if (err) return callback(err);
    closed = true;
    callback();
  });
  var destroyed = false;
  return function (err) {
    if (closed) return;
    if (destroyed) return;
    destroyed = true; // request.destroy just do .end - .abort is what we want

    if (isRequest(stream)) return stream.abort();
    if (typeof stream.destroy === 'function') return stream.destroy();
    callback(err || new ERR_STREAM_DESTROYED('pipe'));
  };
}

function call(fn) {
  fn();
}

function pipe(from, to) {
  return from.pipe(to);
}

function popCallback(streams) {
  if (!streams.length) return noop;
  if (typeof streams[streams.length - 1] !== 'function') return noop;
  return streams.pop();
}

function pipeline() {
  for (var _len = arguments.length, streams = new Array(_len), _key = 0; _key < _len; _key++) {
    streams[_key] = arguments[_key];
  }

  var callback = popCallback(streams);
  if (Array.isArray(streams[0])) streams = streams[0];

  if (streams.length < 2) {
    throw new ERR_MISSING_ARGS('streams');
  }

  var error;
  var destroys = streams.map(function (stream, i) {
    var reading = i < streams.length - 1;
    var writing = i > 0;
    return destroyer(stream, reading, writing, function (err) {
      if (!error) error = err;
      if (err) destroys.forEach(call);
      if (reading) return;
      destroys.forEach(call);
      callback(error);
    });
  });
  return streams.reduce(pipe);
}

module.exports = pipeline;
},{"../../../errors":14,"./end-of-stream":23}],26:[function(require,module,exports){
'use strict';

var ERR_INVALID_OPT_VALUE = require('../../../errors').codes.ERR_INVALID_OPT_VALUE;

function highWaterMarkFrom(options, isDuplex, duplexKey) {
  return options.highWaterMark != null ? options.highWaterMark : isDuplex ? options[duplexKey] : null;
}

function getHighWaterMark(state, options, duplexKey, isDuplex) {
  var hwm = highWaterMarkFrom(options, isDuplex, duplexKey);

  if (hwm != null) {
    if (!(isFinite(hwm) && Math.floor(hwm) === hwm) || hwm < 0) {
      var name = isDuplex ? duplexKey : 'highWaterMark';
      throw new ERR_INVALID_OPT_VALUE(name, hwm);
    }

    return Math.floor(hwm);
  } // Default value


  return state.objectMode ? 16 : 16 * 1024;
}

module.exports = {
  getHighWaterMark: getHighWaterMark
};
},{"../../../errors":14}],27:[function(require,module,exports){
module.exports = require('events').EventEmitter;

},{"events":11}],28:[function(require,module,exports){
'use strict';

var GetIntrinsic = require('get-intrinsic');

var callBind = require('./');

var $indexOf = callBind(GetIntrinsic('String.prototype.indexOf'));

module.exports = function callBoundIntrinsic(name, allowMissing) {
	var intrinsic = GetIntrinsic(name, !!allowMissing);
	if (typeof intrinsic === 'function' && $indexOf(name, '.prototype.') > -1) {
		return callBind(intrinsic);
	}
	return intrinsic;
};

},{"./":29,"get-intrinsic":94}],29:[function(require,module,exports){
'use strict';

var bind = require('function-bind');
var GetIntrinsic = require('get-intrinsic');

var $apply = GetIntrinsic('%Function.prototype.apply%');
var $call = GetIntrinsic('%Function.prototype.call%');
var $reflectApply = GetIntrinsic('%Reflect.apply%', true) || bind.call($call, $apply);

var $gOPD = GetIntrinsic('%Object.getOwnPropertyDescriptor%', true);
var $defineProperty = GetIntrinsic('%Object.defineProperty%', true);
var $max = GetIntrinsic('%Math.max%');

if ($defineProperty) {
	try {
		$defineProperty({}, 'a', { value: 1 });
	} catch (e) {
		// IE 8 has a broken defineProperty
		$defineProperty = null;
	}
}

module.exports = function callBind(originalFunction) {
	var func = $reflectApply(bind, $call, arguments);
	if ($gOPD && $defineProperty) {
		var desc = $gOPD(func, 'length');
		if (desc.configurable) {
			// original length, plus the receiver, minus any additional arguments (after the receiver)
			$defineProperty(
				func,
				'length',
				{ value: 1 + $max(0, originalFunction.length - (arguments.length - 1)) }
			);
		}
	}
	return func;
};

var applyBind = function applyBind() {
	return $reflectApply(bind, $apply, arguments);
};

if ($defineProperty) {
	$defineProperty(module.exports, 'apply', { value: applyBind });
} else {
	module.exports.apply = applyBind;
}

},{"function-bind":93,"get-intrinsic":94}],30:[function(require,module,exports){
var pSlice = Array.prototype.slice;
var objectKeys = require('./lib/keys.js');
var isArguments = require('./lib/is_arguments.js');

var deepEqual = module.exports = function (actual, expected, opts) {
  if (!opts) opts = {};
  // 7.1. All identical values are equivalent, as determined by ===.
  if (actual === expected) {
    return true;

  } else if (actual instanceof Date && expected instanceof Date) {
    return actual.getTime() === expected.getTime();

  // 7.3. Other pairs that do not both pass typeof value == 'object',
  // equivalence is determined by ==.
  } else if (!actual || !expected || typeof actual != 'object' && typeof expected != 'object') {
    return opts.strict ? actual === expected : actual == expected;

  // 7.4. For all other Object pairs, including Array objects, equivalence is
  // determined by having the same number of owned properties (as verified
  // with Object.prototype.hasOwnProperty.call), the same set of keys
  // (although not necessarily the same order), equivalent values for every
  // corresponding key, and an identical 'prototype' property. Note: this
  // accounts for both named and indexed properties on Arrays.
  } else {
    return objEquiv(actual, expected, opts);
  }
}

function isUndefinedOrNull(value) {
  return value === null || value === undefined;
}

function isBuffer (x) {
  if (!x || typeof x !== 'object' || typeof x.length !== 'number') return false;
  if (typeof x.copy !== 'function' || typeof x.slice !== 'function') {
    return false;
  }
  if (x.length > 0 && typeof x[0] !== 'number') return false;
  return true;
}

function objEquiv(a, b, opts) {
  var i, key;
  if (isUndefinedOrNull(a) || isUndefinedOrNull(b))
    return false;
  // an identical 'prototype' property.
  if (a.prototype !== b.prototype) return false;
  //~~~I've managed to break Object.keys through screwy arguments passing.
  //   Converting to array solves the problem.
  if (isArguments(a)) {
    if (!isArguments(b)) {
      return false;
    }
    a = pSlice.call(a);
    b = pSlice.call(b);
    return deepEqual(a, b, opts);
  }
  if (isBuffer(a)) {
    if (!isBuffer(b)) {
      return false;
    }
    if (a.length !== b.length) return false;
    for (i = 0; i < a.length; i++) {
      if (a[i] !== b[i]) return false;
    }
    return true;
  }
  try {
    var ka = objectKeys(a),
        kb = objectKeys(b);
  } catch (e) {//happens when one is a string literal and the other isn't
    return false;
  }
  // having the same number of owned properties (keys incorporates
  // hasOwnProperty)
  if (ka.length != kb.length)
    return false;
  //the same set of keys (although not necessarily the same order),
  ka.sort();
  kb.sort();
  //~~~cheap key test
  for (i = ka.length - 1; i >= 0; i--) {
    if (ka[i] != kb[i])
      return false;
  }
  //equivalent values for every corresponding key, and
  //~~~possibly expensive deep test
  for (i = ka.length - 1; i >= 0; i--) {
    key = ka[i];
    if (!deepEqual(a[key], b[key], opts)) return false;
  }
  return typeof a === typeof b;
}

},{"./lib/is_arguments.js":31,"./lib/keys.js":32}],31:[function(require,module,exports){
var supportsArgumentsClass = (function(){
  return Object.prototype.toString.call(arguments)
})() == '[object Arguments]';

exports = module.exports = supportsArgumentsClass ? supported : unsupported;

exports.supported = supported;
function supported(object) {
  return Object.prototype.toString.call(object) == '[object Arguments]';
};

exports.unsupported = unsupported;
function unsupported(object){
  return object &&
    typeof object == 'object' &&
    typeof object.length == 'number' &&
    Object.prototype.hasOwnProperty.call(object, 'callee') &&
    !Object.prototype.propertyIsEnumerable.call(object, 'callee') ||
    false;
};

},{}],32:[function(require,module,exports){
exports = module.exports = typeof Object.keys === 'function'
  ? Object.keys : shim;

exports.shim = shim;
function shim (obj) {
  var keys = [];
  for (var key in obj) keys.push(key);
  return keys;
}

},{}],33:[function(require,module,exports){
'use strict';

var keys = require('object-keys');
var hasSymbols = typeof Symbol === 'function' && typeof Symbol('foo') === 'symbol';

var toStr = Object.prototype.toString;
var concat = Array.prototype.concat;
var origDefineProperty = Object.defineProperty;

var isFunction = function (fn) {
	return typeof fn === 'function' && toStr.call(fn) === '[object Function]';
};

var hasPropertyDescriptors = require('has-property-descriptors')();

var supportsDescriptors = origDefineProperty && hasPropertyDescriptors;

var defineProperty = function (object, name, value, predicate) {
	if (name in object && (!isFunction(predicate) || !predicate())) {
		return;
	}
	if (supportsDescriptors) {
		origDefineProperty(object, name, {
			configurable: true,
			enumerable: false,
			value: value,
			writable: true
		});
	} else {
		object[name] = value; // eslint-disable-line no-param-reassign
	}
};

var defineProperties = function (object, map) {
	var predicates = arguments.length > 2 ? arguments[2] : {};
	var props = keys(map);
	if (hasSymbols) {
		props = concat.call(props, Object.getOwnPropertySymbols(map));
	}
	for (var i = 0; i < props.length; i += 1) {
		defineProperty(object, props[i], map[props[i]], predicates[props[i]]);
	}
};

defineProperties.supportsDescriptors = !!supportsDescriptors;

module.exports = defineProperties;

},{"has-property-descriptors":95,"object-keys":106}],34:[function(require,module,exports){
module.exports = function () {
    for (var i = 0; i < arguments.length; i++) {
        if (arguments[i] !== undefined) return arguments[i];
    }
};

},{}],35:[function(require,module,exports){
'use strict';

var ToNumber = require('./ToNumber');
var ToPrimitive = require('./ToPrimitive');
var Type = require('./Type');

// https://262.ecma-international.org/5.1/#sec-11.9.3

module.exports = function AbstractEqualityComparison(x, y) {
	var xType = Type(x);
	var yType = Type(y);
	if (xType === yType) {
		return x === y; // ES6+ specified this shortcut anyways.
	}
	if (x == null && y == null) {
		return true;
	}
	if (xType === 'Number' && yType === 'String') {
		return AbstractEqualityComparison(x, ToNumber(y));
	}
	if (xType === 'String' && yType === 'Number') {
		return AbstractEqualityComparison(ToNumber(x), y);
	}
	if (xType === 'Boolean') {
		return AbstractEqualityComparison(ToNumber(x), y);
	}
	if (yType === 'Boolean') {
		return AbstractEqualityComparison(x, ToNumber(y));
	}
	if ((xType === 'String' || xType === 'Number') && yType === 'Object') {
		return AbstractEqualityComparison(x, ToPrimitive(y));
	}
	if (xType === 'Object' && (yType === 'String' || yType === 'Number')) {
		return AbstractEqualityComparison(ToPrimitive(x), y);
	}
	return false;
};

},{"./ToNumber":65,"./ToPrimitive":67,"./Type":72}],36:[function(require,module,exports){
'use strict';

var GetIntrinsic = require('get-intrinsic');

var $Number = GetIntrinsic('%Number%');
var $TypeError = GetIntrinsic('%TypeError%');

var $isNaN = require('../helpers/isNaN');
var $isFinite = require('../helpers/isFinite');
var isPrefixOf = require('../helpers/isPrefixOf');

var ToNumber = require('./ToNumber');
var ToPrimitive = require('./ToPrimitive');
var Type = require('./Type');

// https://262.ecma-international.org/5.1/#sec-11.8.5

// eslint-disable-next-line max-statements
module.exports = function AbstractRelationalComparison(x, y, LeftFirst) {
	if (Type(LeftFirst) !== 'Boolean') {
		throw new $TypeError('Assertion failed: LeftFirst argument must be a Boolean');
	}
	var px;
	var py;
	if (LeftFirst) {
		px = ToPrimitive(x, $Number);
		py = ToPrimitive(y, $Number);
	} else {
		py = ToPrimitive(y, $Number);
		px = ToPrimitive(x, $Number);
	}
	var bothStrings = Type(px) === 'String' && Type(py) === 'String';
	if (!bothStrings) {
		var nx = ToNumber(px);
		var ny = ToNumber(py);
		if ($isNaN(nx) || $isNaN(ny)) {
			return undefined;
		}
		if ($isFinite(nx) && $isFinite(ny) && nx === ny) {
			return false;
		}
		if (nx === Infinity) {
			return false;
		}
		if (ny === Infinity) {
			return true;
		}
		if (ny === -Infinity) {
			return false;
		}
		if (nx === -Infinity) {
			return true;
		}
		return nx < ny; // by now, these are both nonzero, finite, and not equal
	}
	if (isPrefixOf(py, px)) {
		return false;
	}
	if (isPrefixOf(px, py)) {
		return true;
	}
	return px < py; // both strings, neither a prefix of the other. shortcut for steps c-f
};

},{"../helpers/isFinite":81,"../helpers/isNaN":83,"../helpers/isPrefixOf":84,"./ToNumber":65,"./ToPrimitive":67,"./Type":72,"get-intrinsic":94}],37:[function(require,module,exports){
'use strict';

var GetIntrinsic = require('get-intrinsic');

var $TypeError = GetIntrinsic('%TypeError%');

// http://262.ecma-international.org/5.1/#sec-9.10

module.exports = function CheckObjectCoercible(value, optMessage) {
	if (value == null) {
		throw new $TypeError(optMessage || ('Cannot call method on ' + value));
	}
	return value;
};

},{"get-intrinsic":94}],38:[function(require,module,exports){
'use strict';

var GetIntrinsic = require('get-intrinsic');

var $EvalError = GetIntrinsic('%EvalError%');

var DayWithinYear = require('./DayWithinYear');
var InLeapYear = require('./InLeapYear');
var MonthFromTime = require('./MonthFromTime');

// https://262.ecma-international.org/5.1/#sec-15.9.1.5

module.exports = function DateFromTime(t) {
	var m = MonthFromTime(t);
	var d = DayWithinYear(t);
	if (m === 0) {
		return d + 1;
	}
	if (m === 1) {
		return d - 30;
	}
	var leap = InLeapYear(t);
	if (m === 2) {
		return d - 58 - leap;
	}
	if (m === 3) {
		return d - 89 - leap;
	}
	if (m === 4) {
		return d - 119 - leap;
	}
	if (m === 5) {
		return d - 150 - leap;
	}
	if (m === 6) {
		return d - 180 - leap;
	}
	if (m === 7) {
		return d - 211 - leap;
	}
	if (m === 8) {
		return d - 242 - leap;
	}
	if (m === 9) {
		return d - 272 - leap;
	}
	if (m === 10) {
		return d - 303 - leap;
	}
	if (m === 11) {
		return d - 333 - leap;
	}
	throw new $EvalError('Assertion failed: MonthFromTime returned an impossible value: ' + m);
};

},{"./DayWithinYear":41,"./InLeapYear":45,"./MonthFromTime":55,"get-intrinsic":94}],39:[function(require,module,exports){
'use strict';

var floor = require('./floor');

var msPerDay = require('../helpers/timeConstants').msPerDay;

// https://262.ecma-international.org/5.1/#sec-15.9.1.2

module.exports = function Day(t) {
	return floor(t / msPerDay);
};

},{"../helpers/timeConstants":88,"./floor":76}],40:[function(require,module,exports){
'use strict';

var floor = require('./floor');

// https://262.ecma-international.org/5.1/#sec-15.9.1.3

module.exports = function DayFromYear(y) {
	return (365 * (y - 1970)) + floor((y - 1969) / 4) - floor((y - 1901) / 100) + floor((y - 1601) / 400);
};


},{"./floor":76}],41:[function(require,module,exports){
'use strict';

var Day = require('./Day');
var DayFromYear = require('./DayFromYear');
var YearFromTime = require('./YearFromTime');

// https://262.ecma-international.org/5.1/#sec-15.9.1.4

module.exports = function DayWithinYear(t) {
	return Day(t) - DayFromYear(YearFromTime(t));
};

},{"./Day":39,"./DayFromYear":40,"./YearFromTime":74}],42:[function(require,module,exports){
'use strict';

var modulo = require('./modulo');

// https://262.ecma-international.org/5.1/#sec-15.9.1.3

module.exports = function DaysInYear(y) {
	if (modulo(y, 4) !== 0) {
		return 365;
	}
	if (modulo(y, 100) !== 0) {
		return 366;
	}
	if (modulo(y, 400) !== 0) {
		return 365;
	}
	return 366;
};

},{"./modulo":77}],43:[function(require,module,exports){
'use strict';

var GetIntrinsic = require('get-intrinsic');

var $TypeError = GetIntrinsic('%TypeError%');

var Type = require('./Type');
var IsDataDescriptor = require('./IsDataDescriptor');
var IsAccessorDescriptor = require('./IsAccessorDescriptor');

var assertRecord = require('../helpers/assertRecord');

// https://262.ecma-international.org/5.1/#sec-8.10.4

module.exports = function FromPropertyDescriptor(Desc) {
	if (typeof Desc === 'undefined') {
		return Desc;
	}

	assertRecord(Type, 'Property Descriptor', 'Desc', Desc);

	if (IsDataDescriptor(Desc)) {
		return {
			value: Desc['[[Value]]'],
			writable: !!Desc['[[Writable]]'],
			enumerable: !!Desc['[[Enumerable]]'],
			configurable: !!Desc['[[Configurable]]']
		};
	} else if (IsAccessorDescriptor(Desc)) {
		return {
			get: Desc['[[Get]]'],
			set: Desc['[[Set]]'],
			enumerable: !!Desc['[[Enumerable]]'],
			configurable: !!Desc['[[Configurable]]']
		};
	}
	throw new $TypeError('FromPropertyDescriptor must be called with a fully populated Property Descriptor');

};

},{"../helpers/assertRecord":80,"./IsAccessorDescriptor":46,"./IsDataDescriptor":48,"./Type":72,"get-intrinsic":94}],44:[function(require,module,exports){
'use strict';

var floor = require('./floor');
var modulo = require('./modulo');

var timeConstants = require('../helpers/timeConstants');
var msPerHour = timeConstants.msPerHour;
var HoursPerDay = timeConstants.HoursPerDay;

// https://262.ecma-international.org/5.1/#sec-15.9.1.10

module.exports = function HourFromTime(t) {
	return modulo(floor(t / msPerHour), HoursPerDay);
};

},{"../helpers/timeConstants":88,"./floor":76,"./modulo":77}],45:[function(require,module,exports){
'use strict';

var GetIntrinsic = require('get-intrinsic');

var $EvalError = GetIntrinsic('%EvalError%');

var DaysInYear = require('./DaysInYear');
var YearFromTime = require('./YearFromTime');

// https://262.ecma-international.org/5.1/#sec-15.9.1.3

module.exports = function InLeapYear(t) {
	var days = DaysInYear(YearFromTime(t));
	if (days === 365) {
		return 0;
	}
	if (days === 366) {
		return 1;
	}
	throw new $EvalError('Assertion failed: there are not 365 or 366 days in a year, got: ' + days);
};

},{"./DaysInYear":42,"./YearFromTime":74,"get-intrinsic":94}],46:[function(require,module,exports){
'use strict';

var has = require('has');

var Type = require('./Type');

var assertRecord = require('../helpers/assertRecord');

// https://262.ecma-international.org/5.1/#sec-8.10.1

module.exports = function IsAccessorDescriptor(Desc) {
	if (typeof Desc === 'undefined') {
		return false;
	}

	assertRecord(Type, 'Property Descriptor', 'Desc', Desc);

	if (!has(Desc, '[[Get]]') && !has(Desc, '[[Set]]')) {
		return false;
	}

	return true;
};

},{"../helpers/assertRecord":80,"./Type":72,"has":98}],47:[function(require,module,exports){
'use strict';

// http://262.ecma-international.org/5.1/#sec-9.11

module.exports = require('is-callable');

},{"is-callable":101}],48:[function(require,module,exports){
'use strict';

var has = require('has');

var Type = require('./Type');

var assertRecord = require('../helpers/assertRecord');

// https://262.ecma-international.org/5.1/#sec-8.10.2

module.exports = function IsDataDescriptor(Desc) {
	if (typeof Desc === 'undefined') {
		return false;
	}

	assertRecord(Type, 'Property Descriptor', 'Desc', Desc);

	if (!has(Desc, '[[Value]]') && !has(Desc, '[[Writable]]')) {
		return false;
	}

	return true;
};

},{"../helpers/assertRecord":80,"./Type":72,"has":98}],49:[function(require,module,exports){
'use strict';

var IsAccessorDescriptor = require('./IsAccessorDescriptor');
var IsDataDescriptor = require('./IsDataDescriptor');
var Type = require('./Type');

var assertRecord = require('../helpers/assertRecord');

// https://262.ecma-international.org/5.1/#sec-8.10.3

module.exports = function IsGenericDescriptor(Desc) {
	if (typeof Desc === 'undefined') {
		return false;
	}

	assertRecord(Type, 'Property Descriptor', 'Desc', Desc);

	if (!IsAccessorDescriptor(Desc) && !IsDataDescriptor(Desc)) {
		return true;
	}

	return false;
};

},{"../helpers/assertRecord":80,"./IsAccessorDescriptor":46,"./IsDataDescriptor":48,"./Type":72}],50:[function(require,module,exports){
'use strict';

// TODO, semver-major: delete this

var isPropertyDescriptor = require('../helpers/isPropertyDescriptor');

var Type = require('./Type');
var IsDataDescriptor = require('./IsDataDescriptor');
var IsAccessorDescriptor = require('./IsAccessorDescriptor');

// https://262.ecma-international.org/6.0/#sec-property-descriptor-specification-type

module.exports = function IsPropertyDescriptor(Desc) {
	return isPropertyDescriptor({
		IsDataDescriptor: IsDataDescriptor,
		IsAccessorDescriptor: IsAccessorDescriptor,
		Type: Type
	}, Desc);
};

},{"../helpers/isPropertyDescriptor":85,"./IsAccessorDescriptor":46,"./IsDataDescriptor":48,"./Type":72}],51:[function(require,module,exports){
'use strict';

var $isFinite = require('../helpers/isFinite');
var msPerDay = require('../helpers/timeConstants').msPerDay;

// https://262.ecma-international.org/5.1/#sec-15.9.1.13

module.exports = function MakeDate(day, time) {
	if (!$isFinite(day) || !$isFinite(time)) {
		return NaN;
	}
	return (day * msPerDay) + time;
};

},{"../helpers/isFinite":81,"../helpers/timeConstants":88}],52:[function(require,module,exports){
'use strict';

var GetIntrinsic = require('get-intrinsic');

var $DateUTC = GetIntrinsic('%Date.UTC%');

var $isFinite = require('../helpers/isFinite');

var DateFromTime = require('./DateFromTime');
var Day = require('./Day');
var floor = require('./floor');
var modulo = require('./modulo');
var MonthFromTime = require('./MonthFromTime');
var ToInteger = require('./ToInteger');
var YearFromTime = require('./YearFromTime');

// https://262.ecma-international.org/5.1/#sec-15.9.1.12

module.exports = function MakeDay(year, month, date) {
	if (!$isFinite(year) || !$isFinite(month) || !$isFinite(date)) {
		return NaN;
	}
	var y = ToInteger(year);
	var m = ToInteger(month);
	var dt = ToInteger(date);
	var ym = y + floor(m / 12);
	var mn = modulo(m, 12);
	var t = $DateUTC(ym, mn, 1);
	if (YearFromTime(t) !== ym || MonthFromTime(t) !== mn || DateFromTime(t) !== 1) {
		return NaN;
	}
	return Day(t) + dt - 1;
};

},{"../helpers/isFinite":81,"./DateFromTime":38,"./Day":39,"./MonthFromTime":55,"./ToInteger":64,"./YearFromTime":74,"./floor":76,"./modulo":77,"get-intrinsic":94}],53:[function(require,module,exports){
'use strict';

var $isFinite = require('../helpers/isFinite');
var timeConstants = require('../helpers/timeConstants');
var msPerSecond = timeConstants.msPerSecond;
var msPerMinute = timeConstants.msPerMinute;
var msPerHour = timeConstants.msPerHour;

var ToInteger = require('./ToInteger');

// https://262.ecma-international.org/5.1/#sec-15.9.1.11

module.exports = function MakeTime(hour, min, sec, ms) {
	if (!$isFinite(hour) || !$isFinite(min) || !$isFinite(sec) || !$isFinite(ms)) {
		return NaN;
	}
	var h = ToInteger(hour);
	var m = ToInteger(min);
	var s = ToInteger(sec);
	var milli = ToInteger(ms);
	var t = (h * msPerHour) + (m * msPerMinute) + (s * msPerSecond) + milli;
	return t;
};

},{"../helpers/isFinite":81,"../helpers/timeConstants":88,"./ToInteger":64}],54:[function(require,module,exports){
'use strict';

var floor = require('./floor');
var modulo = require('./modulo');

var timeConstants = require('../helpers/timeConstants');
var msPerMinute = timeConstants.msPerMinute;
var MinutesPerHour = timeConstants.MinutesPerHour;

// https://262.ecma-international.org/5.1/#sec-15.9.1.10

module.exports = function MinFromTime(t) {
	return modulo(floor(t / msPerMinute), MinutesPerHour);
};

},{"../helpers/timeConstants":88,"./floor":76,"./modulo":77}],55:[function(require,module,exports){
'use strict';

var DayWithinYear = require('./DayWithinYear');
var InLeapYear = require('./InLeapYear');

// https://262.ecma-international.org/5.1/#sec-15.9.1.4

module.exports = function MonthFromTime(t) {
	var day = DayWithinYear(t);
	if (0 <= day && day < 31) {
		return 0;
	}
	var leap = InLeapYear(t);
	if (31 <= day && day < (59 + leap)) {
		return 1;
	}
	if ((59 + leap) <= day && day < (90 + leap)) {
		return 2;
	}
	if ((90 + leap) <= day && day < (120 + leap)) {
		return 3;
	}
	if ((120 + leap) <= day && day < (151 + leap)) {
		return 4;
	}
	if ((151 + leap) <= day && day < (181 + leap)) {
		return 5;
	}
	if ((181 + leap) <= day && day < (212 + leap)) {
		return 6;
	}
	if ((212 + leap) <= day && day < (243 + leap)) {
		return 7;
	}
	if ((243 + leap) <= day && day < (273 + leap)) {
		return 8;
	}
	if ((273 + leap) <= day && day < (304 + leap)) {
		return 9;
	}
	if ((304 + leap) <= day && day < (334 + leap)) {
		return 10;
	}
	if ((334 + leap) <= day && day < (365 + leap)) {
		return 11;
	}
};

},{"./DayWithinYear":41,"./InLeapYear":45}],56:[function(require,module,exports){
'use strict';

var $isNaN = require('../helpers/isNaN');

// http://262.ecma-international.org/5.1/#sec-9.12

module.exports = function SameValue(x, y) {
	if (x === y) { // 0 === -0, but they are not identical.
		if (x === 0) { return 1 / x === 1 / y; }
		return true;
	}
	return $isNaN(x) && $isNaN(y);
};

},{"../helpers/isNaN":83}],57:[function(require,module,exports){
'use strict';

var floor = require('./floor');
var modulo = require('./modulo');

var timeConstants = require('../helpers/timeConstants');
var msPerSecond = timeConstants.msPerSecond;
var SecondsPerMinute = timeConstants.SecondsPerMinute;

// https://262.ecma-international.org/5.1/#sec-15.9.1.10

module.exports = function SecFromTime(t) {
	return modulo(floor(t / msPerSecond), SecondsPerMinute);
};

},{"../helpers/timeConstants":88,"./floor":76,"./modulo":77}],58:[function(require,module,exports){
'use strict';

var Type = require('./Type');

// https://262.ecma-international.org/5.1/#sec-11.9.6

module.exports = function StrictEqualityComparison(x, y) {
	var xType = Type(x);
	var yType = Type(y);
	if (xType !== yType) {
		return false;
	}
	if (xType === 'Undefined' || xType === 'Null') {
		return true;
	}
	return x === y; // shortcut for steps 4-7
};

},{"./Type":72}],59:[function(require,module,exports){
'use strict';

var GetIntrinsic = require('get-intrinsic');

var $Date = GetIntrinsic('%Date%');
var $Number = GetIntrinsic('%Number%');

var $isFinite = require('../helpers/isFinite');

var abs = require('./abs');
var ToNumber = require('./ToNumber');

// https://262.ecma-international.org/5.1/#sec-15.9.1.14

module.exports = function TimeClip(time) {
	if (!$isFinite(time) || abs(time) > 8.64e15) {
		return NaN;
	}
	return $Number(new $Date(ToNumber(time)));
};


},{"../helpers/isFinite":81,"./ToNumber":65,"./abs":75,"get-intrinsic":94}],60:[function(require,module,exports){
'use strict';

var msPerDay = require('../helpers/timeConstants').msPerDay;

var DayFromYear = require('./DayFromYear');

// https://262.ecma-international.org/5.1/#sec-15.9.1.3

module.exports = function TimeFromYear(y) {
	return msPerDay * DayFromYear(y);
};

},{"../helpers/timeConstants":88,"./DayFromYear":40}],61:[function(require,module,exports){
'use strict';

var modulo = require('./modulo');

var msPerDay = require('../helpers/timeConstants').msPerDay;

// https://262.ecma-international.org/5.1/#sec-15.9.1.2

module.exports = function TimeWithinDay(t) {
	return modulo(t, msPerDay);
};


},{"../helpers/timeConstants":88,"./modulo":77}],62:[function(require,module,exports){
'use strict';

// http://262.ecma-international.org/5.1/#sec-9.2

module.exports = function ToBoolean(value) { return !!value; };

},{}],63:[function(require,module,exports){
'use strict';

var ToNumber = require('./ToNumber');

// http://262.ecma-international.org/5.1/#sec-9.5

module.exports = function ToInt32(x) {
	return ToNumber(x) >> 0;
};

},{"./ToNumber":65}],64:[function(require,module,exports){
'use strict';

var abs = require('./abs');
var floor = require('./floor');
var ToNumber = require('./ToNumber');

var $isNaN = require('../helpers/isNaN');
var $isFinite = require('../helpers/isFinite');
var $sign = require('../helpers/sign');

// http://262.ecma-international.org/5.1/#sec-9.4

module.exports = function ToInteger(value) {
	var number = ToNumber(value);
	if ($isNaN(number)) { return 0; }
	if (number === 0 || !$isFinite(number)) { return number; }
	return $sign(number) * floor(abs(number));
};

},{"../helpers/isFinite":81,"../helpers/isNaN":83,"../helpers/sign":87,"./ToNumber":65,"./abs":75,"./floor":76}],65:[function(require,module,exports){
'use strict';

var ToPrimitive = require('./ToPrimitive');

// http://262.ecma-international.org/5.1/#sec-9.3

module.exports = function ToNumber(value) {
	var prim = ToPrimitive(value, Number);
	if (typeof prim !== 'string') {
		return +prim; // eslint-disable-line no-implicit-coercion
	}

	// eslint-disable-next-line no-control-regex
	var trimmed = prim.replace(/^[ \t\x0b\f\xa0\ufeff\n\r\u2028\u2029\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u0085]+|[ \t\x0b\f\xa0\ufeff\n\r\u2028\u2029\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u0085]+$/g, '');
	if ((/^0[ob]|^[+-]0x/).test(trimmed)) {
		return NaN;
	}

	return +trimmed; // eslint-disable-line no-implicit-coercion
};

},{"./ToPrimitive":67}],66:[function(require,module,exports){
'use strict';

var GetIntrinsic = require('get-intrinsic');

var $Object = GetIntrinsic('%Object%');

var CheckObjectCoercible = require('./CheckObjectCoercible');

// http://262.ecma-international.org/5.1/#sec-9.9

module.exports = function ToObject(value) {
	CheckObjectCoercible(value);
	return $Object(value);
};

},{"./CheckObjectCoercible":37,"get-intrinsic":94}],67:[function(require,module,exports){
'use strict';

// http://262.ecma-international.org/5.1/#sec-9.1

module.exports = require('es-to-primitive/es5');

},{"es-to-primitive/es5":89}],68:[function(require,module,exports){
'use strict';

var has = require('has');

var GetIntrinsic = require('get-intrinsic');

var $TypeError = GetIntrinsic('%TypeError%');

var Type = require('./Type');
var ToBoolean = require('./ToBoolean');
var IsCallable = require('./IsCallable');

// https://262.ecma-international.org/5.1/#sec-8.10.5

module.exports = function ToPropertyDescriptor(Obj) {
	if (Type(Obj) !== 'Object') {
		throw new $TypeError('ToPropertyDescriptor requires an object');
	}

	var desc = {};
	if (has(Obj, 'enumerable')) {
		desc['[[Enumerable]]'] = ToBoolean(Obj.enumerable);
	}
	if (has(Obj, 'configurable')) {
		desc['[[Configurable]]'] = ToBoolean(Obj.configurable);
	}
	if (has(Obj, 'value')) {
		desc['[[Value]]'] = Obj.value;
	}
	if (has(Obj, 'writable')) {
		desc['[[Writable]]'] = ToBoolean(Obj.writable);
	}
	if (has(Obj, 'get')) {
		var getter = Obj.get;
		if (typeof getter !== 'undefined' && !IsCallable(getter)) {
			throw new $TypeError('getter must be a function');
		}
		desc['[[Get]]'] = getter;
	}
	if (has(Obj, 'set')) {
		var setter = Obj.set;
		if (typeof setter !== 'undefined' && !IsCallable(setter)) {
			throw new $TypeError('setter must be a function');
		}
		desc['[[Set]]'] = setter;
	}

	if ((has(desc, '[[Get]]') || has(desc, '[[Set]]')) && (has(desc, '[[Value]]') || has(desc, '[[Writable]]'))) {
		throw new $TypeError('Invalid property descriptor. Cannot both specify accessors and a value or writable attribute');
	}
	return desc;
};

},{"./IsCallable":47,"./ToBoolean":62,"./Type":72,"get-intrinsic":94,"has":98}],69:[function(require,module,exports){
'use strict';

var GetIntrinsic = require('get-intrinsic');

var $String = GetIntrinsic('%String%');

// http://262.ecma-international.org/5.1/#sec-9.8

module.exports = function ToString(value) {
	return $String(value);
};


},{"get-intrinsic":94}],70:[function(require,module,exports){
'use strict';

var abs = require('./abs');
var floor = require('./floor');
var modulo = require('./modulo');
var ToNumber = require('./ToNumber');

var $isNaN = require('../helpers/isNaN');
var $isFinite = require('../helpers/isFinite');
var $sign = require('../helpers/sign');

// http://262.ecma-international.org/5.1/#sec-9.7

module.exports = function ToUint16(value) {
	var number = ToNumber(value);
	if ($isNaN(number) || number === 0 || !$isFinite(number)) { return 0; }
	var posInt = $sign(number) * floor(abs(number));
	return modulo(posInt, 0x10000);
};

},{"../helpers/isFinite":81,"../helpers/isNaN":83,"../helpers/sign":87,"./ToNumber":65,"./abs":75,"./floor":76,"./modulo":77}],71:[function(require,module,exports){
'use strict';

var ToNumber = require('./ToNumber');

// http://262.ecma-international.org/5.1/#sec-9.6

module.exports = function ToUint32(x) {
	return ToNumber(x) >>> 0;
};

},{"./ToNumber":65}],72:[function(require,module,exports){
'use strict';

// https://262.ecma-international.org/5.1/#sec-8

module.exports = function Type(x) {
	if (x === null) {
		return 'Null';
	}
	if (typeof x === 'undefined') {
		return 'Undefined';
	}
	if (typeof x === 'function' || typeof x === 'object') {
		return 'Object';
	}
	if (typeof x === 'number') {
		return 'Number';
	}
	if (typeof x === 'boolean') {
		return 'Boolean';
	}
	if (typeof x === 'string') {
		return 'String';
	}
};

},{}],73:[function(require,module,exports){
'use strict';

var Day = require('./Day');
var modulo = require('./modulo');

// https://262.ecma-international.org/5.1/#sec-15.9.1.6

module.exports = function WeekDay(t) {
	return modulo(Day(t) + 4, 7);
};

},{"./Day":39,"./modulo":77}],74:[function(require,module,exports){
'use strict';

var GetIntrinsic = require('get-intrinsic');

var $Date = GetIntrinsic('%Date%');

var callBound = require('call-bind/callBound');

var $getUTCFullYear = callBound('Date.prototype.getUTCFullYear');

// https://262.ecma-international.org/5.1/#sec-15.9.1.3

module.exports = function YearFromTime(t) {
	// largest y such that this.TimeFromYear(y) <= t
	return $getUTCFullYear(new $Date(t));
};

},{"call-bind/callBound":28,"get-intrinsic":94}],75:[function(require,module,exports){
'use strict';

var GetIntrinsic = require('get-intrinsic');

var $abs = GetIntrinsic('%Math.abs%');

// http://262.ecma-international.org/5.1/#sec-5.2

module.exports = function abs(x) {
	return $abs(x);
};

},{"get-intrinsic":94}],76:[function(require,module,exports){
'use strict';

// var modulo = require('./modulo');
var $floor = Math.floor;

// http://262.ecma-international.org/5.1/#sec-5.2

module.exports = function floor(x) {
	// return x - modulo(x, 1);
	return $floor(x);
};

},{}],77:[function(require,module,exports){
'use strict';

var mod = require('../helpers/mod');

// https://262.ecma-international.org/5.1/#sec-5.2

module.exports = function modulo(x, y) {
	return mod(x, y);
};

},{"../helpers/mod":86}],78:[function(require,module,exports){
'use strict';

var modulo = require('./modulo');

var msPerSecond = require('../helpers/timeConstants').msPerSecond;

// https://262.ecma-international.org/5.1/#sec-15.9.1.10

module.exports = function msFromTime(t) {
	return modulo(t, msPerSecond);
};

},{"../helpers/timeConstants":88,"./modulo":77}],79:[function(require,module,exports){
'use strict';

/* eslint global-require: 0 */

// https://es5.github.io/#x9
module.exports = {
	'Abstract Equality Comparison': require('./5/AbstractEqualityComparison'),
	'Abstract Relational Comparison': require('./5/AbstractRelationalComparison'),
	'Strict Equality Comparison': require('./5/StrictEqualityComparison'),
	abs: require('./5/abs'),
	CheckObjectCoercible: require('./5/CheckObjectCoercible'),
	DateFromTime: require('./5/DateFromTime'),
	Day: require('./5/Day'),
	DayFromYear: require('./5/DayFromYear'),
	DaysInYear: require('./5/DaysInYear'),
	DayWithinYear: require('./5/DayWithinYear'),
	floor: require('./5/floor'),
	FromPropertyDescriptor: require('./5/FromPropertyDescriptor'),
	HourFromTime: require('./5/HourFromTime'),
	InLeapYear: require('./5/InLeapYear'),
	IsAccessorDescriptor: require('./5/IsAccessorDescriptor'),
	IsCallable: require('./5/IsCallable'),
	IsDataDescriptor: require('./5/IsDataDescriptor'),
	IsGenericDescriptor: require('./5/IsGenericDescriptor'),
	IsPropertyDescriptor: require('./5/IsPropertyDescriptor'),
	MakeDate: require('./5/MakeDate'),
	MakeDay: require('./5/MakeDay'),
	MakeTime: require('./5/MakeTime'),
	MinFromTime: require('./5/MinFromTime'),
	modulo: require('./5/modulo'),
	MonthFromTime: require('./5/MonthFromTime'),
	msFromTime: require('./5/msFromTime'),
	SameValue: require('./5/SameValue'),
	SecFromTime: require('./5/SecFromTime'),
	TimeClip: require('./5/TimeClip'),
	TimeFromYear: require('./5/TimeFromYear'),
	TimeWithinDay: require('./5/TimeWithinDay'),
	ToBoolean: require('./5/ToBoolean'),
	ToInt32: require('./5/ToInt32'),
	ToInteger: require('./5/ToInteger'),
	ToNumber: require('./5/ToNumber'),
	ToObject: require('./5/ToObject'),
	ToPrimitive: require('./5/ToPrimitive'),
	ToPropertyDescriptor: require('./5/ToPropertyDescriptor'),
	ToString: require('./5/ToString'),
	ToUint16: require('./5/ToUint16'),
	ToUint32: require('./5/ToUint32'),
	Type: require('./5/Type'),
	WeekDay: require('./5/WeekDay'),
	YearFromTime: require('./5/YearFromTime')
};

},{"./5/AbstractEqualityComparison":35,"./5/AbstractRelationalComparison":36,"./5/CheckObjectCoercible":37,"./5/DateFromTime":38,"./5/Day":39,"./5/DayFromYear":40,"./5/DayWithinYear":41,"./5/DaysInYear":42,"./5/FromPropertyDescriptor":43,"./5/HourFromTime":44,"./5/InLeapYear":45,"./5/IsAccessorDescriptor":46,"./5/IsCallable":47,"./5/IsDataDescriptor":48,"./5/IsGenericDescriptor":49,"./5/IsPropertyDescriptor":50,"./5/MakeDate":51,"./5/MakeDay":52,"./5/MakeTime":53,"./5/MinFromTime":54,"./5/MonthFromTime":55,"./5/SameValue":56,"./5/SecFromTime":57,"./5/StrictEqualityComparison":58,"./5/TimeClip":59,"./5/TimeFromYear":60,"./5/TimeWithinDay":61,"./5/ToBoolean":62,"./5/ToInt32":63,"./5/ToInteger":64,"./5/ToNumber":65,"./5/ToObject":66,"./5/ToPrimitive":67,"./5/ToPropertyDescriptor":68,"./5/ToString":69,"./5/ToUint16":70,"./5/ToUint32":71,"./5/Type":72,"./5/WeekDay":73,"./5/YearFromTime":74,"./5/abs":75,"./5/floor":76,"./5/modulo":77,"./5/msFromTime":78}],80:[function(require,module,exports){
'use strict';

var GetIntrinsic = require('get-intrinsic');

var $TypeError = GetIntrinsic('%TypeError%');
var $SyntaxError = GetIntrinsic('%SyntaxError%');

var has = require('has');

var isMatchRecord = require('./isMatchRecord');

var predicates = {
	// https://262.ecma-international.org/6.0/#sec-property-descriptor-specification-type
	'Property Descriptor': function isPropertyDescriptor(Desc) {
		var allowed = {
			'[[Configurable]]': true,
			'[[Enumerable]]': true,
			'[[Get]]': true,
			'[[Set]]': true,
			'[[Value]]': true,
			'[[Writable]]': true
		};

		for (var key in Desc) { // eslint-disable-line
			if (has(Desc, key) && !allowed[key]) {
				return false;
			}
		}

		var isData = has(Desc, '[[Value]]');
		var IsAccessor = has(Desc, '[[Get]]') || has(Desc, '[[Set]]');
		if (isData && IsAccessor) {
			throw new $TypeError('Property Descriptors may not be both accessor and data descriptors');
		}
		return true;
	},
	// https://262.ecma-international.org/13.0/#sec-match-records
	'Match Record': isMatchRecord
};

module.exports = function assertRecord(Type, recordType, argumentName, value) {
	var predicate = predicates[recordType];
	if (typeof predicate !== 'function') {
		throw new $SyntaxError('unknown record type: ' + recordType);
	}
	if (Type(value) !== 'Object' || !predicate(value)) {
		throw new $TypeError(argumentName + ' must be a ' + recordType);
	}
};

},{"./isMatchRecord":82,"get-intrinsic":94,"has":98}],81:[function(require,module,exports){
'use strict';

var $isNaN = Number.isNaN || function (a) { return a !== a; };

module.exports = Number.isFinite || function (x) { return typeof x === 'number' && !$isNaN(x) && x !== Infinity && x !== -Infinity; };

},{}],82:[function(require,module,exports){
'use strict';

var has = require('has');

// https://262.ecma-international.org/13.0/#sec-match-records

module.exports = function isMatchRecord(record) {
	return (
		has(record, '[[StartIndex]]')
        && has(record, '[[EndIndex]]')
        && record['[[StartIndex]]'] >= 0
        && record['[[EndIndex]]'] >= record['[[StartIndex]]']
        && String(parseInt(record['[[StartIndex]]'], 10)) === String(record['[[StartIndex]]'])
        && String(parseInt(record['[[EndIndex]]'], 10)) === String(record['[[EndIndex]]'])
	);
};

},{"has":98}],83:[function(require,module,exports){
'use strict';

module.exports = Number.isNaN || function isNaN(a) {
	return a !== a;
};

},{}],84:[function(require,module,exports){
'use strict';

var $strSlice = require('call-bind/callBound')('String.prototype.slice');

module.exports = function isPrefixOf(prefix, string) {
	if (prefix === string) {
		return true;
	}
	if (prefix.length > string.length) {
		return false;
	}
	return $strSlice(string, 0, prefix.length) === prefix;
};

},{"call-bind/callBound":28}],85:[function(require,module,exports){
'use strict';

var GetIntrinsic = require('get-intrinsic');

var has = require('has');
var $TypeError = GetIntrinsic('%TypeError%');

module.exports = function IsPropertyDescriptor(ES, Desc) {
	if (ES.Type(Desc) !== 'Object') {
		return false;
	}
	var allowed = {
		'[[Configurable]]': true,
		'[[Enumerable]]': true,
		'[[Get]]': true,
		'[[Set]]': true,
		'[[Value]]': true,
		'[[Writable]]': true
	};

	for (var key in Desc) { // eslint-disable-line no-restricted-syntax
		if (has(Desc, key) && !allowed[key]) {
			return false;
		}
	}

	if (ES.IsDataDescriptor(Desc) && ES.IsAccessorDescriptor(Desc)) {
		throw new $TypeError('Property Descriptors may not be both accessor and data descriptors');
	}
	return true;
};

},{"get-intrinsic":94,"has":98}],86:[function(require,module,exports){
'use strict';

var $floor = Math.floor;

module.exports = function mod(number, modulo) {
	var remain = number % modulo;
	return $floor(remain >= 0 ? remain : remain + modulo);
};

},{}],87:[function(require,module,exports){
'use strict';

module.exports = function sign(number) {
	return number >= 0 ? 1 : -1;
};

},{}],88:[function(require,module,exports){
'use strict';

var HoursPerDay = 24;
var MinutesPerHour = 60;
var SecondsPerMinute = 60;
var msPerSecond = 1e3;
var msPerMinute = msPerSecond * SecondsPerMinute;
var msPerHour = msPerMinute * MinutesPerHour;
var msPerDay = 86400000;

module.exports = {
	HoursPerDay: HoursPerDay,
	MinutesPerHour: MinutesPerHour,
	SecondsPerMinute: SecondsPerMinute,
	msPerSecond: msPerSecond,
	msPerMinute: msPerMinute,
	msPerHour: msPerHour,
	msPerDay: msPerDay
};

},{}],89:[function(require,module,exports){
'use strict';

var toStr = Object.prototype.toString;

var isPrimitive = require('./helpers/isPrimitive');

var isCallable = require('is-callable');

// http://ecma-international.org/ecma-262/5.1/#sec-8.12.8
var ES5internalSlots = {
	'[[DefaultValue]]': function (O) {
		var actualHint;
		if (arguments.length > 1) {
			actualHint = arguments[1];
		} else {
			actualHint = toStr.call(O) === '[object Date]' ? String : Number;
		}

		if (actualHint === String || actualHint === Number) {
			var methods = actualHint === String ? ['toString', 'valueOf'] : ['valueOf', 'toString'];
			var value, i;
			for (i = 0; i < methods.length; ++i) {
				if (isCallable(O[methods[i]])) {
					value = O[methods[i]]();
					if (isPrimitive(value)) {
						return value;
					}
				}
			}
			throw new TypeError('No default value');
		}
		throw new TypeError('invalid [[DefaultValue]] hint supplied');
	}
};

// http://ecma-international.org/ecma-262/5.1/#sec-9.1
module.exports = function ToPrimitive(input) {
	if (isPrimitive(input)) {
		return input;
	}
	if (arguments.length > 1) {
		return ES5internalSlots['[[DefaultValue]]'](input, arguments[1]);
	}
	return ES5internalSlots['[[DefaultValue]]'](input);
};

},{"./helpers/isPrimitive":90,"is-callable":101}],90:[function(require,module,exports){
'use strict';

module.exports = function isPrimitive(value) {
	return value === null || (typeof value !== 'function' && typeof value !== 'object');
};

},{}],91:[function(require,module,exports){
'use strict'

var mergeDescriptors = require('merge-descriptors')
var isObject = require('is-object')
var hasOwnProperty = Object.prototype.hasOwnProperty

function fill (destination, source, merge) {
  if (destination && (isObject(source) || isFunction(source))) {
    merge(destination, source, false)
    if (isFunction(destination) && isFunction(source) && source.prototype) {
      merge(destination.prototype, source.prototype, false)
    }
  }
  return destination
}

exports = module.exports = function fillKeys (destination, source) {
  return fill(destination, source, mergeDescriptors)
}

exports.es3 = function fillKeysEs3 (destination, source) {
  return fill(destination, source, es3Merge)
}

function es3Merge (destination, source) {
  for (var key in source) {
    if (!hasOwnProperty.call(destination, key)) {
      destination[key] = source[key]
    }
  }
  return destination
}

function isFunction (value) {
  return typeof value === 'function'
}

},{"is-object":102,"merge-descriptors":103}],92:[function(require,module,exports){
'use strict';

/* eslint no-invalid-this: 1 */

var ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';
var slice = Array.prototype.slice;
var toStr = Object.prototype.toString;
var funcType = '[object Function]';

module.exports = function bind(that) {
    var target = this;
    if (typeof target !== 'function' || toStr.call(target) !== funcType) {
        throw new TypeError(ERROR_MESSAGE + target);
    }
    var args = slice.call(arguments, 1);

    var bound;
    var binder = function () {
        if (this instanceof bound) {
            var result = target.apply(
                this,
                args.concat(slice.call(arguments))
            );
            if (Object(result) === result) {
                return result;
            }
            return this;
        } else {
            return target.apply(
                that,
                args.concat(slice.call(arguments))
            );
        }
    };

    var boundLength = Math.max(0, target.length - args.length);
    var boundArgs = [];
    for (var i = 0; i < boundLength; i++) {
        boundArgs.push('$' + i);
    }

    bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this,arguments); }')(binder);

    if (target.prototype) {
        var Empty = function Empty() {};
        Empty.prototype = target.prototype;
        bound.prototype = new Empty();
        Empty.prototype = null;
    }

    return bound;
};

},{}],93:[function(require,module,exports){
'use strict';

var implementation = require('./implementation');

module.exports = Function.prototype.bind || implementation;

},{"./implementation":92}],94:[function(require,module,exports){
'use strict';

var undefined;

var $SyntaxError = SyntaxError;
var $Function = Function;
var $TypeError = TypeError;

// eslint-disable-next-line consistent-return
var getEvalledConstructor = function (expressionSyntax) {
	try {
		return $Function('"use strict"; return (' + expressionSyntax + ').constructor;')();
	} catch (e) {}
};

var $gOPD = Object.getOwnPropertyDescriptor;
if ($gOPD) {
	try {
		$gOPD({}, '');
	} catch (e) {
		$gOPD = null; // this is IE 8, which has a broken gOPD
	}
}

var throwTypeError = function () {
	throw new $TypeError();
};
var ThrowTypeError = $gOPD
	? (function () {
		try {
			// eslint-disable-next-line no-unused-expressions, no-caller, no-restricted-properties
			arguments.callee; // IE 8 does not throw here
			return throwTypeError;
		} catch (calleeThrows) {
			try {
				// IE 8 throws on Object.getOwnPropertyDescriptor(arguments, '')
				return $gOPD(arguments, 'callee').get;
			} catch (gOPDthrows) {
				return throwTypeError;
			}
		}
	}())
	: throwTypeError;

var hasSymbols = require('has-symbols')();

var getProto = Object.getPrototypeOf || function (x) { return x.__proto__; }; // eslint-disable-line no-proto

var needsEval = {};

var TypedArray = typeof Uint8Array === 'undefined' ? undefined : getProto(Uint8Array);

var INTRINSICS = {
	'%AggregateError%': typeof AggregateError === 'undefined' ? undefined : AggregateError,
	'%Array%': Array,
	'%ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,
	'%ArrayIteratorPrototype%': hasSymbols ? getProto([][Symbol.iterator]()) : undefined,
	'%AsyncFromSyncIteratorPrototype%': undefined,
	'%AsyncFunction%': needsEval,
	'%AsyncGenerator%': needsEval,
	'%AsyncGeneratorFunction%': needsEval,
	'%AsyncIteratorPrototype%': needsEval,
	'%Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,
	'%BigInt%': typeof BigInt === 'undefined' ? undefined : BigInt,
	'%Boolean%': Boolean,
	'%DataView%': typeof DataView === 'undefined' ? undefined : DataView,
	'%Date%': Date,
	'%decodeURI%': decodeURI,
	'%decodeURIComponent%': decodeURIComponent,
	'%encodeURI%': encodeURI,
	'%encodeURIComponent%': encodeURIComponent,
	'%Error%': Error,
	'%eval%': eval, // eslint-disable-line no-eval
	'%EvalError%': EvalError,
	'%Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,
	'%Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,
	'%FinalizationRegistry%': typeof FinalizationRegistry === 'undefined' ? undefined : FinalizationRegistry,
	'%Function%': $Function,
	'%GeneratorFunction%': needsEval,
	'%Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,
	'%Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,
	'%Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,
	'%isFinite%': isFinite,
	'%isNaN%': isNaN,
	'%IteratorPrototype%': hasSymbols ? getProto(getProto([][Symbol.iterator]())) : undefined,
	'%JSON%': typeof JSON === 'object' ? JSON : undefined,
	'%Map%': typeof Map === 'undefined' ? undefined : Map,
	'%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols ? undefined : getProto(new Map()[Symbol.iterator]()),
	'%Math%': Math,
	'%Number%': Number,
	'%Object%': Object,
	'%parseFloat%': parseFloat,
	'%parseInt%': parseInt,
	'%Promise%': typeof Promise === 'undefined' ? undefined : Promise,
	'%Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,
	'%RangeError%': RangeError,
	'%ReferenceError%': ReferenceError,
	'%Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,
	'%RegExp%': RegExp,
	'%Set%': typeof Set === 'undefined' ? undefined : Set,
	'%SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols ? undefined : getProto(new Set()[Symbol.iterator]()),
	'%SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,
	'%String%': String,
	'%StringIteratorPrototype%': hasSymbols ? getProto(''[Symbol.iterator]()) : undefined,
	'%Symbol%': hasSymbols ? Symbol : undefined,
	'%SyntaxError%': $SyntaxError,
	'%ThrowTypeError%': ThrowTypeError,
	'%TypedArray%': TypedArray,
	'%TypeError%': $TypeError,
	'%Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,
	'%Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,
	'%Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,
	'%Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,
	'%URIError%': URIError,
	'%WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,
	'%WeakRef%': typeof WeakRef === 'undefined' ? undefined : WeakRef,
	'%WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet
};

var doEval = function doEval(name) {
	var value;
	if (name === '%AsyncFunction%') {
		value = getEvalledConstructor('async function () {}');
	} else if (name === '%GeneratorFunction%') {
		value = getEvalledConstructor('function* () {}');
	} else if (name === '%AsyncGeneratorFunction%') {
		value = getEvalledConstructor('async function* () {}');
	} else if (name === '%AsyncGenerator%') {
		var fn = doEval('%AsyncGeneratorFunction%');
		if (fn) {
			value = fn.prototype;
		}
	} else if (name === '%AsyncIteratorPrototype%') {
		var gen = doEval('%AsyncGenerator%');
		if (gen) {
			value = getProto(gen.prototype);
		}
	}

	INTRINSICS[name] = value;

	return value;
};

var LEGACY_ALIASES = {
	'%ArrayBufferPrototype%': ['ArrayBuffer', 'prototype'],
	'%ArrayPrototype%': ['Array', 'prototype'],
	'%ArrayProto_entries%': ['Array', 'prototype', 'entries'],
	'%ArrayProto_forEach%': ['Array', 'prototype', 'forEach'],
	'%ArrayProto_keys%': ['Array', 'prototype', 'keys'],
	'%ArrayProto_values%': ['Array', 'prototype', 'values'],
	'%AsyncFunctionPrototype%': ['AsyncFunction', 'prototype'],
	'%AsyncGenerator%': ['AsyncGeneratorFunction', 'prototype'],
	'%AsyncGeneratorPrototype%': ['AsyncGeneratorFunction', 'prototype', 'prototype'],
	'%BooleanPrototype%': ['Boolean', 'prototype'],
	'%DataViewPrototype%': ['DataView', 'prototype'],
	'%DatePrototype%': ['Date', 'prototype'],
	'%ErrorPrototype%': ['Error', 'prototype'],
	'%EvalErrorPrototype%': ['EvalError', 'prototype'],
	'%Float32ArrayPrototype%': ['Float32Array', 'prototype'],
	'%Float64ArrayPrototype%': ['Float64Array', 'prototype'],
	'%FunctionPrototype%': ['Function', 'prototype'],
	'%Generator%': ['GeneratorFunction', 'prototype'],
	'%GeneratorPrototype%': ['GeneratorFunction', 'prototype', 'prototype'],
	'%Int8ArrayPrototype%': ['Int8Array', 'prototype'],
	'%Int16ArrayPrototype%': ['Int16Array', 'prototype'],
	'%Int32ArrayPrototype%': ['Int32Array', 'prototype'],
	'%JSONParse%': ['JSON', 'parse'],
	'%JSONStringify%': ['JSON', 'stringify'],
	'%MapPrototype%': ['Map', 'prototype'],
	'%NumberPrototype%': ['Number', 'prototype'],
	'%ObjectPrototype%': ['Object', 'prototype'],
	'%ObjProto_toString%': ['Object', 'prototype', 'toString'],
	'%ObjProto_valueOf%': ['Object', 'prototype', 'valueOf'],
	'%PromisePrototype%': ['Promise', 'prototype'],
	'%PromiseProto_then%': ['Promise', 'prototype', 'then'],
	'%Promise_all%': ['Promise', 'all'],
	'%Promise_reject%': ['Promise', 'reject'],
	'%Promise_resolve%': ['Promise', 'resolve'],
	'%RangeErrorPrototype%': ['RangeError', 'prototype'],
	'%ReferenceErrorPrototype%': ['ReferenceError', 'prototype'],
	'%RegExpPrototype%': ['RegExp', 'prototype'],
	'%SetPrototype%': ['Set', 'prototype'],
	'%SharedArrayBufferPrototype%': ['SharedArrayBuffer', 'prototype'],
	'%StringPrototype%': ['String', 'prototype'],
	'%SymbolPrototype%': ['Symbol', 'prototype'],
	'%SyntaxErrorPrototype%': ['SyntaxError', 'prototype'],
	'%TypedArrayPrototype%': ['TypedArray', 'prototype'],
	'%TypeErrorPrototype%': ['TypeError', 'prototype'],
	'%Uint8ArrayPrototype%': ['Uint8Array', 'prototype'],
	'%Uint8ClampedArrayPrototype%': ['Uint8ClampedArray', 'prototype'],
	'%Uint16ArrayPrototype%': ['Uint16Array', 'prototype'],
	'%Uint32ArrayPrototype%': ['Uint32Array', 'prototype'],
	'%URIErrorPrototype%': ['URIError', 'prototype'],
	'%WeakMapPrototype%': ['WeakMap', 'prototype'],
	'%WeakSetPrototype%': ['WeakSet', 'prototype']
};

var bind = require('function-bind');
var hasOwn = require('has');
var $concat = bind.call(Function.call, Array.prototype.concat);
var $spliceApply = bind.call(Function.apply, Array.prototype.splice);
var $replace = bind.call(Function.call, String.prototype.replace);
var $strSlice = bind.call(Function.call, String.prototype.slice);

/* adapted from https://github.com/lodash/lodash/blob/4.17.15/dist/lodash.js#L6735-L6744 */
var rePropName = /[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g;
var reEscapeChar = /\\(\\)?/g; /** Used to match backslashes in property paths. */
var stringToPath = function stringToPath(string) {
	var first = $strSlice(string, 0, 1);
	var last = $strSlice(string, -1);
	if (first === '%' && last !== '%') {
		throw new $SyntaxError('invalid intrinsic syntax, expected closing `%`');
	} else if (last === '%' && first !== '%') {
		throw new $SyntaxError('invalid intrinsic syntax, expected opening `%`');
	}
	var result = [];
	$replace(string, rePropName, function (match, number, quote, subString) {
		result[result.length] = quote ? $replace(subString, reEscapeChar, '$1') : number || match;
	});
	return result;
};
/* end adaptation */

var getBaseIntrinsic = function getBaseIntrinsic(name, allowMissing) {
	var intrinsicName = name;
	var alias;
	if (hasOwn(LEGACY_ALIASES, intrinsicName)) {
		alias = LEGACY_ALIASES[intrinsicName];
		intrinsicName = '%' + alias[0] + '%';
	}

	if (hasOwn(INTRINSICS, intrinsicName)) {
		var value = INTRINSICS[intrinsicName];
		if (value === needsEval) {
			value = doEval(intrinsicName);
		}
		if (typeof value === 'undefined' && !allowMissing) {
			throw new $TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');
		}

		return {
			alias: alias,
			name: intrinsicName,
			value: value
		};
	}

	throw new $SyntaxError('intrinsic ' + name + ' does not exist!');
};

module.exports = function GetIntrinsic(name, allowMissing) {
	if (typeof name !== 'string' || name.length === 0) {
		throw new $TypeError('intrinsic name must be a non-empty string');
	}
	if (arguments.length > 1 && typeof allowMissing !== 'boolean') {
		throw new $TypeError('"allowMissing" argument must be a boolean');
	}

	var parts = stringToPath(name);
	var intrinsicBaseName = parts.length > 0 ? parts[0] : '';

	var intrinsic = getBaseIntrinsic('%' + intrinsicBaseName + '%', allowMissing);
	var intrinsicRealName = intrinsic.name;
	var value = intrinsic.value;
	var skipFurtherCaching = false;

	var alias = intrinsic.alias;
	if (alias) {
		intrinsicBaseName = alias[0];
		$spliceApply(parts, $concat([0, 1], alias));
	}

	for (var i = 1, isOwn = true; i < parts.length; i += 1) {
		var part = parts[i];
		var first = $strSlice(part, 0, 1);
		var last = $strSlice(part, -1);
		if (
			(
				(first === '"' || first === "'" || first === '`')
				|| (last === '"' || last === "'" || last === '`')
			)
			&& first !== last
		) {
			throw new $SyntaxError('property names with quotes must have matching quotes');
		}
		if (part === 'constructor' || !isOwn) {
			skipFurtherCaching = true;
		}

		intrinsicBaseName += '.' + part;
		intrinsicRealName = '%' + intrinsicBaseName + '%';

		if (hasOwn(INTRINSICS, intrinsicRealName)) {
			value = INTRINSICS[intrinsicRealName];
		} else if (value != null) {
			if (!(part in value)) {
				if (!allowMissing) {
					throw new $TypeError('base intrinsic for ' + name + ' exists, but the property is not available.');
				}
				return void undefined;
			}
			if ($gOPD && (i + 1) >= parts.length) {
				var desc = $gOPD(value, part);
				isOwn = !!desc;

				// By convention, when a data property is converted to an accessor
				// property to emulate a data property that does not suffer from
				// the override mistake, that accessor's getter is marked with
				// an `originalValue` property. Here, when we detect this, we
				// uphold the illusion by pretending to see that original data
				// property, i.e., returning the value rather than the getter
				// itself.
				if (isOwn && 'get' in desc && !('originalValue' in desc.get)) {
					value = desc.get;
				} else {
					value = value[part];
				}
			} else {
				isOwn = hasOwn(value, part);
				value = value[part];
			}

			if (isOwn && !skipFurtherCaching) {
				INTRINSICS[intrinsicRealName] = value;
			}
		}
	}
	return value;
};

},{"function-bind":93,"has":98,"has-symbols":96}],95:[function(require,module,exports){
'use strict';

var GetIntrinsic = require('get-intrinsic');

var $defineProperty = GetIntrinsic('%Object.defineProperty%', true);

var hasPropertyDescriptors = function hasPropertyDescriptors() {
	if ($defineProperty) {
		try {
			$defineProperty({}, 'a', { value: 1 });
			return true;
		} catch (e) {
			// IE 8 has a broken defineProperty
			return false;
		}
	}
	return false;
};

hasPropertyDescriptors.hasArrayLengthDefineBug = function hasArrayLengthDefineBug() {
	// node v0.6 has a bug where array lengths can be Set but not Defined
	if (!hasPropertyDescriptors()) {
		return null;
	}
	try {
		return $defineProperty([], 'length', { value: 1 }).length !== 1;
	} catch (e) {
		// In Firefox 4-22, defining length on an array throws an exception.
		return true;
	}
};

module.exports = hasPropertyDescriptors;

},{"get-intrinsic":94}],96:[function(require,module,exports){
'use strict';

var origSymbol = typeof Symbol !== 'undefined' && Symbol;
var hasSymbolSham = require('./shams');

module.exports = function hasNativeSymbols() {
	if (typeof origSymbol !== 'function') { return false; }
	if (typeof Symbol !== 'function') { return false; }
	if (typeof origSymbol('foo') !== 'symbol') { return false; }
	if (typeof Symbol('bar') !== 'symbol') { return false; }

	return hasSymbolSham();
};

},{"./shams":97}],97:[function(require,module,exports){
'use strict';

/* eslint complexity: [2, 18], max-statements: [2, 33] */
module.exports = function hasSymbols() {
	if (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') { return false; }
	if (typeof Symbol.iterator === 'symbol') { return true; }

	var obj = {};
	var sym = Symbol('test');
	var symObj = Object(sym);
	if (typeof sym === 'string') { return false; }

	if (Object.prototype.toString.call(sym) !== '[object Symbol]') { return false; }
	if (Object.prototype.toString.call(symObj) !== '[object Symbol]') { return false; }

	// temp disabled per https://github.com/ljharb/object.assign/issues/17
	// if (sym instanceof Symbol) { return false; }
	// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4
	// if (!(symObj instanceof Symbol)) { return false; }

	// if (typeof Symbol.prototype.toString !== 'function') { return false; }
	// if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }

	var symVal = 42;
	obj[sym] = symVal;
	for (sym in obj) { return false; } // eslint-disable-line no-restricted-syntax, no-unreachable-loop
	if (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) { return false; }

	if (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) { return false; }

	var syms = Object.getOwnPropertySymbols(obj);
	if (syms.length !== 1 || syms[0] !== sym) { return false; }

	if (!Object.prototype.propertyIsEnumerable.call(obj, sym)) { return false; }

	if (typeof Object.getOwnPropertyDescriptor === 'function') {
		var descriptor = Object.getOwnPropertyDescriptor(obj, sym);
		if (descriptor.value !== symVal || descriptor.enumerable !== true) { return false; }
	}

	return true;
};

},{}],98:[function(require,module,exports){
'use strict';

var bind = require('function-bind');

module.exports = bind.call(Function.call, Object.prototype.hasOwnProperty);

},{"function-bind":93}],99:[function(require,module,exports){
/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */
exports.read = function (buffer, offset, isLE, mLen, nBytes) {
  var e, m
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var nBits = -7
  var i = isLE ? (nBytes - 1) : 0
  var d = isLE ? -1 : 1
  var s = buffer[offset + i]

  i += d

  e = s & ((1 << (-nBits)) - 1)
  s >>= (-nBits)
  nBits += eLen
  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  m = e & ((1 << (-nBits)) - 1)
  e >>= (-nBits)
  nBits += mLen
  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  if (e === 0) {
    e = 1 - eBias
  } else if (e === eMax) {
    return m ? NaN : ((s ? -1 : 1) * Infinity)
  } else {
    m = m + Math.pow(2, mLen)
    e = e - eBias
  }
  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
}

exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
  var e, m, c
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
  var i = isLE ? 0 : (nBytes - 1)
  var d = isLE ? 1 : -1
  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0

  value = Math.abs(value)

  if (isNaN(value) || value === Infinity) {
    m = isNaN(value) ? 1 : 0
    e = eMax
  } else {
    e = Math.floor(Math.log(value) / Math.LN2)
    if (value * (c = Math.pow(2, -e)) < 1) {
      e--
      c *= 2
    }
    if (e + eBias >= 1) {
      value += rt / c
    } else {
      value += rt * Math.pow(2, 1 - eBias)
    }
    if (value * c >= 2) {
      e++
      c /= 2
    }

    if (e + eBias >= eMax) {
      m = 0
      e = eMax
    } else if (e + eBias >= 1) {
      m = ((value * c) - 1) * Math.pow(2, mLen)
      e = e + eBias
    } else {
      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
      e = 0
    }
  }

  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

  e = (e << mLen) | m
  eLen += mLen
  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

  buffer[offset + i - d] |= s * 128
}

},{}],100:[function(require,module,exports){
if (typeof Object.create === 'function') {
  // implementation from standard node.js 'util' module
  module.exports = function inherits(ctor, superCtor) {
    if (superCtor) {
      ctor.super_ = superCtor
      ctor.prototype = Object.create(superCtor.prototype, {
        constructor: {
          value: ctor,
          enumerable: false,
          writable: true,
          configurable: true
        }
      })
    }
  };
} else {
  // old school shim for old browsers
  module.exports = function inherits(ctor, superCtor) {
    if (superCtor) {
      ctor.super_ = superCtor
      var TempCtor = function () {}
      TempCtor.prototype = superCtor.prototype
      ctor.prototype = new TempCtor()
      ctor.prototype.constructor = ctor
    }
  }
}

},{}],101:[function(require,module,exports){
'use strict';

var fnToStr = Function.prototype.toString;
var reflectApply = typeof Reflect === 'object' && Reflect !== null && Reflect.apply;
var badArrayLike;
var isCallableMarker;
if (typeof reflectApply === 'function' && typeof Object.defineProperty === 'function') {
	try {
		badArrayLike = Object.defineProperty({}, 'length', {
			get: function () {
				throw isCallableMarker;
			}
		});
		isCallableMarker = {};
		// eslint-disable-next-line no-throw-literal
		reflectApply(function () { throw 42; }, null, badArrayLike);
	} catch (_) {
		if (_ !== isCallableMarker) {
			reflectApply = null;
		}
	}
} else {
	reflectApply = null;
}

var constructorRegex = /^\s*class\b/;
var isES6ClassFn = function isES6ClassFunction(value) {
	try {
		var fnStr = fnToStr.call(value);
		return constructorRegex.test(fnStr);
	} catch (e) {
		return false; // not a function
	}
};

var tryFunctionObject = function tryFunctionToStr(value) {
	try {
		if (isES6ClassFn(value)) { return false; }
		fnToStr.call(value);
		return true;
	} catch (e) {
		return false;
	}
};
var toStr = Object.prototype.toString;
var fnClass = '[object Function]';
var genClass = '[object GeneratorFunction]';
var hasToStringTag = typeof Symbol === 'function' && !!Symbol.toStringTag; // better: use `has-tostringtag`
/* globals document: false */
var documentDotAll = typeof document === 'object' && typeof document.all === 'undefined' && document.all !== undefined ? document.all : {};

module.exports = reflectApply
	? function isCallable(value) {
		if (value === documentDotAll) { return true; }
		if (!value) { return false; }
		if (typeof value !== 'function' && typeof value !== 'object') { return false; }
		if (typeof value === 'function' && !value.prototype) { return true; }
		try {
			reflectApply(value, null, badArrayLike);
		} catch (e) {
			if (e !== isCallableMarker) { return false; }
		}
		return !isES6ClassFn(value);
	}
	: function isCallable(value) {
		if (value === documentDotAll) { return true; }
		if (!value) { return false; }
		if (typeof value !== 'function' && typeof value !== 'object') { return false; }
		if (typeof value === 'function' && !value.prototype) { return true; }
		if (hasToStringTag) { return tryFunctionObject(value); }
		if (isES6ClassFn(value)) { return false; }
		var strClass = toStr.call(value);
		return strClass === fnClass || strClass === genClass;
	};

},{}],102:[function(require,module,exports){
'use strict';

module.exports = function isObject(x) {
	return typeof x === 'object' && x !== null;
};

},{}],103:[function(require,module,exports){
/*!
 * merge-descriptors
 * Copyright(c) 2014 Jonathan Ong
 * Copyright(c) 2015 Douglas Christopher Wilson
 * MIT Licensed
 */

'use strict'

/**
 * Module exports.
 * @public
 */

module.exports = merge

/**
 * Module variables.
 * @private
 */

var hasOwnProperty = Object.prototype.hasOwnProperty

/**
 * Merge the property descriptors of `src` into `dest`
 *
 * @param {object} dest Object to add descriptors to
 * @param {object} src Object to clone descriptors from
 * @param {boolean} [redefine=true] Redefine `dest` properties with `src` properties
 * @returns {object} Reference to dest
 * @public
 */

function merge(dest, src, redefine) {
  if (!dest) {
    throw new TypeError('argument dest is required')
  }

  if (!src) {
    throw new TypeError('argument src is required')
  }

  if (redefine === undefined) {
    // Default to true
    redefine = true
  }

  Object.getOwnPropertyNames(src).forEach(function forEachOwnPropertyName(name) {
    if (!redefine && hasOwnProperty.call(dest, name)) {
      // Skip desriptor
      return
    }

    // Copy descriptor
    var descriptor = Object.getOwnPropertyDescriptor(src, name)
    Object.defineProperty(dest, name, descriptor)
  })

  return dest
}

},{}],104:[function(require,module,exports){
'use strict'

module.exports = function createNotFoundError (path) {
  var err = new Error('Cannot find module \'' + path + '\'')
  err.code = 'MODULE_NOT_FOUND'
  return err
}

},{}],105:[function(require,module,exports){
'use strict';

var keysShim;
if (!Object.keys) {
	// modified from https://github.com/es-shims/es5-shim
	var has = Object.prototype.hasOwnProperty;
	var toStr = Object.prototype.toString;
	var isArgs = require('./isArguments'); // eslint-disable-line global-require
	var isEnumerable = Object.prototype.propertyIsEnumerable;
	var hasDontEnumBug = !isEnumerable.call({ toString: null }, 'toString');
	var hasProtoEnumBug = isEnumerable.call(function () {}, 'prototype');
	var dontEnums = [
		'toString',
		'toLocaleString',
		'valueOf',
		'hasOwnProperty',
		'isPrototypeOf',
		'propertyIsEnumerable',
		'constructor'
	];
	var equalsConstructorPrototype = function (o) {
		var ctor = o.constructor;
		return ctor && ctor.prototype === o;
	};
	var excludedKeys = {
		$applicationCache: true,
		$console: true,
		$external: true,
		$frame: true,
		$frameElement: true,
		$frames: true,
		$innerHeight: true,
		$innerWidth: true,
		$onmozfullscreenchange: true,
		$onmozfullscreenerror: true,
		$outerHeight: true,
		$outerWidth: true,
		$pageXOffset: true,
		$pageYOffset: true,
		$parent: true,
		$scrollLeft: true,
		$scrollTop: true,
		$scrollX: true,
		$scrollY: true,
		$self: true,
		$webkitIndexedDB: true,
		$webkitStorageInfo: true,
		$window: true
	};
	var hasAutomationEqualityBug = (function () {
		/* global window */
		if (typeof window === 'undefined') { return false; }
		for (var k in window) {
			try {
				if (!excludedKeys['$' + k] && has.call(window, k) && window[k] !== null && typeof window[k] === 'object') {
					try {
						equalsConstructorPrototype(window[k]);
					} catch (e) {
						return true;
					}
				}
			} catch (e) {
				return true;
			}
		}
		return false;
	}());
	var equalsConstructorPrototypeIfNotBuggy = function (o) {
		/* global window */
		if (typeof window === 'undefined' || !hasAutomationEqualityBug) {
			return equalsConstructorPrototype(o);
		}
		try {
			return equalsConstructorPrototype(o);
		} catch (e) {
			return false;
		}
	};

	keysShim = function keys(object) {
		var isObject = object !== null && typeof object === 'object';
		var isFunction = toStr.call(object) === '[object Function]';
		var isArguments = isArgs(object);
		var isString = isObject && toStr.call(object) === '[object String]';
		var theKeys = [];

		if (!isObject && !isFunction && !isArguments) {
			throw new TypeError('Object.keys called on a non-object');
		}

		var skipProto = hasProtoEnumBug && isFunction;
		if (isString && object.length > 0 && !has.call(object, 0)) {
			for (var i = 0; i < object.length; ++i) {
				theKeys.push(String(i));
			}
		}

		if (isArguments && object.length > 0) {
			for (var j = 0; j < object.length; ++j) {
				theKeys.push(String(j));
			}
		} else {
			for (var name in object) {
				if (!(skipProto && name === 'prototype') && has.call(object, name)) {
					theKeys.push(String(name));
				}
			}
		}

		if (hasDontEnumBug) {
			var skipConstructor = equalsConstructorPrototypeIfNotBuggy(object);

			for (var k = 0; k < dontEnums.length; ++k) {
				if (!(skipConstructor && dontEnums[k] === 'constructor') && has.call(object, dontEnums[k])) {
					theKeys.push(dontEnums[k]);
				}
			}
		}
		return theKeys;
	};
}
module.exports = keysShim;

},{"./isArguments":107}],106:[function(require,module,exports){
'use strict';

var slice = Array.prototype.slice;
var isArgs = require('./isArguments');

var origKeys = Object.keys;
var keysShim = origKeys ? function keys(o) { return origKeys(o); } : require('./implementation');

var originalKeys = Object.keys;

keysShim.shim = function shimObjectKeys() {
	if (Object.keys) {
		var keysWorksWithArguments = (function () {
			// Safari 5.0 bug
			var args = Object.keys(arguments);
			return args && args.length === arguments.length;
		}(1, 2));
		if (!keysWorksWithArguments) {
			Object.keys = function keys(object) { // eslint-disable-line func-name-matching
				if (isArgs(object)) {
					return originalKeys(slice.call(object));
				}
				return originalKeys(object);
			};
		}
	} else {
		Object.keys = keysShim;
	}
	return Object.keys || keysShim;
};

module.exports = keysShim;

},{"./implementation":105,"./isArguments":107}],107:[function(require,module,exports){
'use strict';

var toStr = Object.prototype.toString;

module.exports = function isArguments(value) {
	var str = toStr.call(value);
	var isArgs = str === '[object Arguments]';
	if (!isArgs) {
		isArgs = str !== '[object Array]' &&
			value !== null &&
			typeof value === 'object' &&
			typeof value.length === 'number' &&
			value.length >= 0 &&
			toStr.call(value.callee) === '[object Function]';
	}
	return isArgs;
};

},{}],108:[function(require,module,exports){
// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };

},{}],109:[function(require,module,exports){
'use strict';

var fillMissingKeys = require('fill-keys');
var moduleNotFoundError = require('module-not-found-error');

function ProxyquireifyError(msg) {
  this.name = 'ProxyquireifyError';
  Error.captureStackTrace(this, ProxyquireifyError);
  this.message = msg || 'An error occurred inside proxyquireify.';
}

function validateArguments(request, stubs) {
  var msg = (function getMessage() {
    if (!request)
      return 'Missing argument: "request". Need it to resolve desired module.';

    if (!stubs)
      return 'Missing argument: "stubs". If no stubbing is needed, use regular require instead.';

    if (typeof request != 'string')
      return 'Invalid argument: "request". Needs to be a requirable string that is the module to load.';

    if (typeof stubs != 'object')
      return 'Invalid argument: "stubs". Needs to be an object containing overrides e.g., {"path": { extname: function () { ... } } }.';
  })();

  if (msg) throw new ProxyquireifyError(msg);
}

var stubs;

function stub(stubs_) {
  stubs = stubs_;
  // This cache is used by the prelude as an alternative to the regular cache.
  // It is not read or written here, except to set it to an empty object when
  // adding stubs and to reset it to null when clearing stubs.
  module.exports._cache = {};
}

function reset() {
  stubs = undefined;
  module.exports._cache = null;
}

var proxyquire = module.exports = function (require_) {
  if (typeof require_ != 'function')
    throw new ProxyquireifyError(
        'It seems like you didn\'t initialize proxyquireify with the require in your test.\n'
      + 'Make sure to correct this, i.e.: "var proxyquire = require(\'proxyquireify\')(require);"'
    );

  reset();

  return function(request, stubs) {

    validateArguments(request, stubs);

    // set the stubs and require dependency
    // when stub require is invoked by the module under test it will find the stubs here
    stub(stubs);
    var dep = require_(request);
    reset();

    return dep;
  };
};

// Start with the default cache
proxyquire._cache = null;

proxyquire._proxy = function (require_, request) {
  function original() {
    return require_(request);
  }

  if (!stubs || !stubs.hasOwnProperty(request)) return original();

  var stub = stubs[request];

  if (stub === null) throw moduleNotFoundError(request)

  var stubWideNoCallThru = Boolean(stubs['@noCallThru']) && (stub == null || stub['@noCallThru'] !== false);
  var noCallThru = stubWideNoCallThru || (stub != null && Boolean(stub['@noCallThru']));
  return noCallThru ? stub : fillMissingKeys(stub, original());
};

if (require.cache) {
  // only used during build, so prevent browserify from including it
  var replacePreludePath = './lib/replace-prelude';
  var replacePrelude = require(replacePreludePath);
  proxyquire.browserify = replacePrelude.browserify;
  proxyquire.plugin = replacePrelude.plugin;
}

},{"fill-keys":91,"module-not-found-error":104}],110:[function(require,module,exports){
(function (process,setImmediate){(function (){
var through = require('through');
var nextTick = typeof setImmediate !== 'undefined'
    ? setImmediate
    : process.nextTick
;

module.exports = function (write, end) {
    var tr = through(write, end);
    tr.pause();
    var resume = tr.resume;
    var pause = tr.pause;
    var paused = false;
    
    tr.pause = function () {
        paused = true;
        return pause.apply(this, arguments);
    };
    
    tr.resume = function () {
        paused = false;
        return resume.apply(this, arguments);
    };
    
    nextTick(function () {
        if (!paused) tr.resume();
    });
    
    return tr;
};

}).call(this)}).call(this,require('_process'),require("timers").setImmediate)
},{"_process":108,"through":123,"timers":124}],111:[function(require,module,exports){
/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */
/* eslint-disable node/no-deprecated-api */
var buffer = require('buffer')
var Buffer = buffer.Buffer

// alternative to using Object.keys for old browsers
function copyProps (src, dst) {
  for (var key in src) {
    dst[key] = src[key]
  }
}
if (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {
  module.exports = buffer
} else {
  // Copy properties from require('buffer')
  copyProps(buffer, exports)
  exports.Buffer = SafeBuffer
}

function SafeBuffer (arg, encodingOrOffset, length) {
  return Buffer(arg, encodingOrOffset, length)
}

SafeBuffer.prototype = Object.create(Buffer.prototype)

// Copy static methods from Buffer
copyProps(Buffer, SafeBuffer)

SafeBuffer.from = function (arg, encodingOrOffset, length) {
  if (typeof arg === 'number') {
    throw new TypeError('Argument must not be a number')
  }
  return Buffer(arg, encodingOrOffset, length)
}

SafeBuffer.alloc = function (size, fill, encoding) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  var buf = Buffer(size)
  if (fill !== undefined) {
    if (typeof encoding === 'string') {
      buf.fill(fill, encoding)
    } else {
      buf.fill(fill)
    }
  } else {
    buf.fill(0)
  }
  return buf
}

SafeBuffer.allocUnsafe = function (size) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  return Buffer(size)
}

SafeBuffer.allocUnsafeSlow = function (size) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  return buffer.SlowBuffer(size)
}

},{"buffer":10}],112:[function(require,module,exports){
'use strict';

var bind = require('function-bind');
var ES = require('es-abstract/es5');
var replace = bind.call(Function.call, String.prototype.replace);

var leftWhitespace = /^[\x09\x0A\x0B\x0C\x0D\x20\xA0\u1680\u180E\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF]+/;
var rightWhitespace = /[\x09\x0A\x0B\x0C\x0D\x20\xA0\u1680\u180E\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF]+$/;

module.exports = function trim() {
	var S = ES.ToString(ES.CheckObjectCoercible(this));
	return replace(replace(S, leftWhitespace, ''), rightWhitespace, '');
};

},{"es-abstract/es5":79,"function-bind":93}],113:[function(require,module,exports){
'use strict';

var bind = require('function-bind');
var define = require('define-properties');

var implementation = require('./implementation');
var getPolyfill = require('./polyfill');
var shim = require('./shim');

var boundTrim = bind.call(Function.call, getPolyfill());

define(boundTrim, {
	getPolyfill: getPolyfill,
	implementation: implementation,
	shim: shim
});

module.exports = boundTrim;

},{"./implementation":112,"./polyfill":114,"./shim":115,"define-properties":33,"function-bind":93}],114:[function(require,module,exports){
'use strict';

var implementation = require('./implementation');

var zeroWidthSpace = '\u200b';

module.exports = function getPolyfill() {
	if (String.prototype.trim && zeroWidthSpace.trim() === zeroWidthSpace) {
		return String.prototype.trim;
	}
	return implementation;
};

},{"./implementation":112}],115:[function(require,module,exports){
'use strict';

var define = require('define-properties');
var getPolyfill = require('./polyfill');

module.exports = function shimStringTrim() {
	var polyfill = getPolyfill();
	define(String.prototype, { trim: polyfill }, { trim: function () { return String.prototype.trim !== polyfill; } });
	return polyfill;
};

},{"./polyfill":114,"define-properties":33}],116:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

'use strict';

/*<replacement>*/

var Buffer = require('safe-buffer').Buffer;
/*</replacement>*/

var isEncoding = Buffer.isEncoding || function (encoding) {
  encoding = '' + encoding;
  switch (encoding && encoding.toLowerCase()) {
    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':
      return true;
    default:
      return false;
  }
};

function _normalizeEncoding(enc) {
  if (!enc) return 'utf8';
  var retried;
  while (true) {
    switch (enc) {
      case 'utf8':
      case 'utf-8':
        return 'utf8';
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return 'utf16le';
      case 'latin1':
      case 'binary':
        return 'latin1';
      case 'base64':
      case 'ascii':
      case 'hex':
        return enc;
      default:
        if (retried) return; // undefined
        enc = ('' + enc).toLowerCase();
        retried = true;
    }
  }
};

// Do not cache `Buffer.isEncoding` when checking encoding names as some
// modules monkey-patch it to support additional encodings
function normalizeEncoding(enc) {
  var nenc = _normalizeEncoding(enc);
  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);
  return nenc || enc;
}

// StringDecoder provides an interface for efficiently splitting a series of
// buffers into a series of JS strings without breaking apart multi-byte
// characters.
exports.StringDecoder = StringDecoder;
function StringDecoder(encoding) {
  this.encoding = normalizeEncoding(encoding);
  var nb;
  switch (this.encoding) {
    case 'utf16le':
      this.text = utf16Text;
      this.end = utf16End;
      nb = 4;
      break;
    case 'utf8':
      this.fillLast = utf8FillLast;
      nb = 4;
      break;
    case 'base64':
      this.text = base64Text;
      this.end = base64End;
      nb = 3;
      break;
    default:
      this.write = simpleWrite;
      this.end = simpleEnd;
      return;
  }
  this.lastNeed = 0;
  this.lastTotal = 0;
  this.lastChar = Buffer.allocUnsafe(nb);
}

StringDecoder.prototype.write = function (buf) {
  if (buf.length === 0) return '';
  var r;
  var i;
  if (this.lastNeed) {
    r = this.fillLast(buf);
    if (r === undefined) return '';
    i = this.lastNeed;
    this.lastNeed = 0;
  } else {
    i = 0;
  }
  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);
  return r || '';
};

StringDecoder.prototype.end = utf8End;

// Returns only complete characters in a Buffer
StringDecoder.prototype.text = utf8Text;

// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer
StringDecoder.prototype.fillLast = function (buf) {
  if (this.lastNeed <= buf.length) {
    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);
    return this.lastChar.toString(this.encoding, 0, this.lastTotal);
  }
  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);
  this.lastNeed -= buf.length;
};

// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a
// continuation byte. If an invalid byte is detected, -2 is returned.
function utf8CheckByte(byte) {
  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;
  return byte >> 6 === 0x02 ? -1 : -2;
}

// Checks at most 3 bytes at the end of a Buffer in order to detect an
// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)
// needed to complete the UTF-8 character (if applicable) are returned.
function utf8CheckIncomplete(self, buf, i) {
  var j = buf.length - 1;
  if (j < i) return 0;
  var nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) self.lastNeed = nb - 1;
    return nb;
  }
  if (--j < i || nb === -2) return 0;
  nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) self.lastNeed = nb - 2;
    return nb;
  }
  if (--j < i || nb === -2) return 0;
  nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) {
      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;
    }
    return nb;
  }
  return 0;
}

// Validates as many continuation bytes for a multi-byte UTF-8 character as
// needed or are available. If we see a non-continuation byte where we expect
// one, we "replace" the validated continuation bytes we've seen so far with
// a single UTF-8 replacement character ('\ufffd'), to match v8's UTF-8 decoding
// behavior. The continuation byte check is included three times in the case
// where all of the continuation bytes for a character exist in the same buffer.
// It is also done this way as a slight performance increase instead of using a
// loop.
function utf8CheckExtraBytes(self, buf, p) {
  if ((buf[0] & 0xC0) !== 0x80) {
    self.lastNeed = 0;
    return '\ufffd';
  }
  if (self.lastNeed > 1 && buf.length > 1) {
    if ((buf[1] & 0xC0) !== 0x80) {
      self.lastNeed = 1;
      return '\ufffd';
    }
    if (self.lastNeed > 2 && buf.length > 2) {
      if ((buf[2] & 0xC0) !== 0x80) {
        self.lastNeed = 2;
        return '\ufffd';
      }
    }
  }
}

// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.
function utf8FillLast(buf) {
  var p = this.lastTotal - this.lastNeed;
  var r = utf8CheckExtraBytes(this, buf, p);
  if (r !== undefined) return r;
  if (this.lastNeed <= buf.length) {
    buf.copy(this.lastChar, p, 0, this.lastNeed);
    return this.lastChar.toString(this.encoding, 0, this.lastTotal);
  }
  buf.copy(this.lastChar, p, 0, buf.length);
  this.lastNeed -= buf.length;
}

// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a
// partial character, the character's bytes are buffered until the required
// number of bytes are available.
function utf8Text(buf, i) {
  var total = utf8CheckIncomplete(this, buf, i);
  if (!this.lastNeed) return buf.toString('utf8', i);
  this.lastTotal = total;
  var end = buf.length - (total - this.lastNeed);
  buf.copy(this.lastChar, 0, end);
  return buf.toString('utf8', i, end);
}

// For UTF-8, a replacement character is added when ending on a partial
// character.
function utf8End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) return r + '\ufffd';
  return r;
}

// UTF-16LE typically needs two bytes per character, but even if we have an even
// number of bytes available, we need to check if we end on a leading/high
// surrogate. In that case, we need to wait for the next two bytes in order to
// decode the last character properly.
function utf16Text(buf, i) {
  if ((buf.length - i) % 2 === 0) {
    var r = buf.toString('utf16le', i);
    if (r) {
      var c = r.charCodeAt(r.length - 1);
      if (c >= 0xD800 && c <= 0xDBFF) {
        this.lastNeed = 2;
        this.lastTotal = 4;
        this.lastChar[0] = buf[buf.length - 2];
        this.lastChar[1] = buf[buf.length - 1];
        return r.slice(0, -1);
      }
    }
    return r;
  }
  this.lastNeed = 1;
  this.lastTotal = 2;
  this.lastChar[0] = buf[buf.length - 1];
  return buf.toString('utf16le', i, buf.length - 1);
}

// For UTF-16LE we do not explicitly append special replacement characters if we
// end on a partial character, we simply let v8 handle that.
function utf16End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) {
    var end = this.lastTotal - this.lastNeed;
    return r + this.lastChar.toString('utf16le', 0, end);
  }
  return r;
}

function base64Text(buf, i) {
  var n = (buf.length - i) % 3;
  if (n === 0) return buf.toString('base64', i);
  this.lastNeed = 3 - n;
  this.lastTotal = 3;
  if (n === 1) {
    this.lastChar[0] = buf[buf.length - 1];
  } else {
    this.lastChar[0] = buf[buf.length - 2];
    this.lastChar[1] = buf[buf.length - 1];
  }
  return buf.toString('base64', i, buf.length - n);
}

function base64End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);
  return r;
}

// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)
function simpleWrite(buf) {
  return buf.toString(this.encoding);
}

function simpleEnd(buf) {
  return buf && buf.length ? this.write(buf) : '';
}
},{"safe-buffer":111}],117:[function(require,module,exports){
(function (process,setImmediate){(function (){
var defined = require('defined');
var createDefaultStream = require('./lib/default_stream');
var Test = require('./lib/test');
var createResult = require('./lib/results');
var through = require('through');

var canEmitExit = typeof process !== 'undefined' && process
    && typeof process.on === 'function' && process.browser !== true
;
var canExit = typeof process !== 'undefined' && process
    && typeof process.exit === 'function'
;

var nextTick = typeof setImmediate !== 'undefined'
    ? setImmediate
    : process.nextTick
;

exports = module.exports = (function () {
    var harness;
    var lazyLoad = function () {
        return getHarness().apply(this, arguments);
    };
    
    lazyLoad.only = function () {
        return getHarness().only.apply(this, arguments);
    };
    
    lazyLoad.createStream = function (opts) {
        if (!opts) opts = {};
        if (!harness) {
            var output = through();
            getHarness({ stream: output, objectMode: opts.objectMode });
            return output;
        }
        return harness.createStream(opts);
    };
    
    lazyLoad.onFinish = function () {
        return getHarness().onFinish.apply(this, arguments);
    };

    lazyLoad.getHarness = getHarness

    return lazyLoad

    function getHarness (opts) {
        if (!opts) opts = {};
        opts.autoclose = !canEmitExit;
        if (!harness) harness = createExitHarness(opts);
        return harness;
    }
})();

function createExitHarness (conf) {
    if (!conf) conf = {};
    var harness = createHarness({
        autoclose: defined(conf.autoclose, false)
    });
    
    var stream = harness.createStream({ objectMode: conf.objectMode });
    var es = stream.pipe(conf.stream || createDefaultStream());
    if (canEmitExit) {
        es.on('error', function (err) { harness._exitCode = 1 });
    }
    
    var ended = false;
    stream.on('end', function () { ended = true });
    
    if (conf.exit === false) return harness;
    if (!canEmitExit || !canExit) return harness;

    var inErrorState = false;

    process.on('exit', function (code) {
        // let the process exit cleanly.
        if (code !== 0) {
            return
        }

        if (!ended) {
            var only = harness._results._only;
            for (var i = 0; i < harness._tests.length; i++) {
                var t = harness._tests[i];
                if (only && t.name !== only) continue;
                t._exit();
            }
        }
        harness.close();
        process.exit(code || harness._exitCode);
    });
    
    return harness;
}

exports.createHarness = createHarness;
exports.Test = Test;
exports.test = exports; // tap compat
exports.test.skip = Test.skip;

var exitInterval;

function createHarness (conf_) {
    if (!conf_) conf_ = {};
    var results = createResult();
    if (conf_.autoclose !== false) {
        results.once('done', function () { results.close() });
    }
    
    var test = function (name, conf, cb) {
        var t = new Test(name, conf, cb);
        test._tests.push(t);
        
        (function inspectCode (st) {
            st.on('test', function sub (st_) {
                inspectCode(st_);
            });
            st.on('result', function (r) {
                if (!r.ok && typeof r !== 'string') test._exitCode = 1
            });
        })(t);
        
        results.push(t);
        return t;
    };
    test._results = results;
    
    test._tests = [];
    
    test.createStream = function (opts) {
        return results.createStream(opts);
    };

    test.onFinish = function (cb) {
        results.on('done', cb);
    };
    
    var only = false;
    test.only = function (name) {
        if (only) throw new Error('there can only be one only test');
        results.only(name);
        only = true;
        return test.apply(null, arguments);
    };
    test._exitCode = 0;
    
    test.close = function () { results.close() };
    
    return test;
}

}).call(this)}).call(this,require('_process'),require("timers").setImmediate)
},{"./lib/default_stream":118,"./lib/results":120,"./lib/test":121,"_process":108,"defined":34,"through":123,"timers":124}],118:[function(require,module,exports){
(function (process){(function (){
var through = require('through');
var fs = require('fs');

module.exports = function () {
    var line = '';
    var stream = through(write, flush);
    return stream;
    
    function write (buf) {
        for (var i = 0; i < buf.length; i++) {
            var c = typeof buf === 'string'
                ? buf.charAt(i)
                : String.fromCharCode(buf[i])
            ;
            if (c === '\n') flush();
            else line += c;
        }
    }
    
    function flush () {
        if (fs.writeSync && /^win/.test(process.platform)) {
            try { fs.writeSync(1, line + '\n'); }
            catch (e) { stream.emit('error', e) }
        }
        else {
            try { console.log(line) }
            catch (e) { stream.emit('error', e) }
        }
        line = '';
    }
};

}).call(this)}).call(this,require('_process'))
},{"_process":108,"fs":9,"through":123}],119:[function(require,module,exports){
(function (process,setImmediate){(function (){
module.exports = typeof setImmediate !== 'undefined'
    ? setImmediate
    : process.nextTick
;

}).call(this)}).call(this,require('_process'),require("timers").setImmediate)
},{"_process":108,"timers":124}],120:[function(require,module,exports){
(function (process,setImmediate){(function (){
var EventEmitter = require('events').EventEmitter;
var inherits = require('inherits');
var through = require('through');
var resumer = require('resumer');
var inspect = require('object-inspect');
var bind = require('function-bind');
var has = require('has');
var regexpTest = bind.call(Function.call, RegExp.prototype.test);
var yamlIndicators = /\:|\-|\?/;
var nextTick = typeof setImmediate !== 'undefined'
    ? setImmediate
    : process.nextTick
;

module.exports = Results;
inherits(Results, EventEmitter);

function Results () {
    if (!(this instanceof Results)) return new Results;
    this.count = 0;
    this.fail = 0;
    this.pass = 0;
    this._stream = through();
    this.tests = [];
}

Results.prototype.createStream = function (opts) {
    if (!opts) opts = {};
    var self = this;
    var output, testId = 0;
    if (opts.objectMode) {
        output = through();
        self.on('_push', function ontest (t, extra) {
            if (!extra) extra = {};
            var id = testId++;
            t.once('prerun', function () {
                var row = {
                    type: 'test',
                    name: t.name,
                    id: id
                };
                if (has(extra, 'parent')) {
                    row.parent = extra.parent;
                }
                output.queue(row);
            });
            t.on('test', function (st) {
                ontest(st, { parent: id });
            });
            t.on('result', function (res) {
                res.test = id;
                res.type = 'assert';
                output.queue(res);
            });
            t.on('end', function () {
                output.queue({ type: 'end', test: id });
            });
        });
        self.on('done', function () { output.queue(null) });
    }
    else {
        output = resumer();
        output.queue('TAP version 13\n');
        self._stream.pipe(output);
    }
    
    nextTick(function next() {
        var t;
        while (t = getNextTest(self)) {
            t.run();
            if (!t.ended) return t.once('end', function(){ nextTick(next); });
        }
        self.emit('done');
    });
    
    return output;
};

Results.prototype.push = function (t) {
    var self = this;
    self.tests.push(t);
    self._watch(t);
    self.emit('_push', t);
};

Results.prototype.only = function (name) {
    this._only = name;
};

Results.prototype._watch = function (t) {
    var self = this;
    var write = function (s) { self._stream.queue(s) };
    t.once('prerun', function () {
        write('# ' + t.name + '\n');
    });
    
    t.on('result', function (res) {
        if (typeof res === 'string') {
            write('# ' + res + '\n');
            return;
        }
        write(encodeResult(res, self.count + 1));
        self.count ++;

        if (res.ok) self.pass ++
        else self.fail ++
    });
    
    t.on('test', function (st) { self._watch(st) });
};

Results.prototype.close = function () {
    var self = this;
    if (self.closed) self._stream.emit('error', new Error('ALREADY CLOSED'));
    self.closed = true;
    var write = function (s) { self._stream.queue(s) };
    
    write('\n1..' + self.count + '\n');
    write('# tests ' + self.count + '\n');
    write('# pass  ' + self.pass + '\n');
    if (self.fail) write('# fail  ' + self.fail + '\n')
    else write('\n# ok\n')

    self._stream.queue(null);
};

function encodeResult (res, count) {
    var output = '';
    output += (res.ok ? 'ok ' : 'not ok ') + count;
    output += res.name ? ' ' + res.name.toString().replace(/\s+/g, ' ') : '';
    
    if (res.skip) output += ' # SKIP';
    else if (res.todo) output += ' # TODO';
    
    output += '\n';
    if (res.ok) return output;
    
    var outer = '  ';
    var inner = outer + '  ';
    output += outer + '---\n';
    output += inner + 'operator: ' + res.operator + '\n';
    
    if (has(res, 'expected') || has(res, 'actual')) {
        var ex = inspect(res.expected);
        var ac = inspect(res.actual);
        
        if (Math.max(ex.length, ac.length) > 65 || invalidYaml(ex) || invalidYaml(ac)) {
            output += inner + 'expected: |-\n' + inner + '  ' + ex + '\n';
            output += inner + 'actual: |-\n' + inner + '  ' + ac + '\n';
        }
        else {
            output += inner + 'expected: ' + ex + '\n';
            output += inner + 'actual:   ' + ac + '\n';
        }
    }
    if (res.at) {
        output += inner + 'at: ' + res.at + '\n';
    }
    if (res.operator === 'error' && res.actual && res.actual.stack) {
        var lines = String(res.actual.stack).split('\n');
        output += inner + 'stack: |-\n';
        for (var i = 0; i < lines.length; i++) {
            output += inner + '  ' + lines[i] + '\n';
        }
    }
    
    output += outer + '...\n';
    return output;
}

function getNextTest (results) {
    if (!results._only) {
        return results.tests.shift();
    }
    
    do {
        var t = results.tests.shift();
        if (!t) continue;
        if (results._only === t.name) {
            return t;
        }
    } while (results.tests.length !== 0)
}

function invalidYaml (str) {
    return regexpTest(yamlIndicators, str);
}

}).call(this)}).call(this,require('_process'),require("timers").setImmediate)
},{"_process":108,"events":11,"function-bind":93,"has":98,"inherits":100,"object-inspect":122,"resumer":110,"through":123,"timers":124}],121:[function(require,module,exports){
(function (__dirname){(function (){
var deepEqual = require('deep-equal');
var defined = require('defined');
var path = require('path');
var inherits = require('inherits');
var EventEmitter = require('events').EventEmitter;
var has = require('has');
var trim = require('string.prototype.trim');

var nextTick = require('./next_tick');

module.exports = Test;

inherits(Test, EventEmitter);

var getTestArgs = function (name_, opts_, cb_) {
    var name = '(anonymous)';
    var opts = {};
    var cb;

    for (var i = 0; i < arguments.length; i++) {
        var arg = arguments[i];
        var t = typeof arg;
        if (t === 'string') {
            name = arg;
        }
        else if (t === 'object') {
            opts = arg || opts;
        }
        else if (t === 'function') {
            cb = arg;
        }
    }
    return { name: name, opts: opts, cb: cb };
};

function Test (name_, opts_, cb_) {
    if (! (this instanceof Test)) {
        return new Test(name_, opts_, cb_);
    }

    var args = getTestArgs(name_, opts_, cb_);

    this.readable = true;
    this.name = args.name || '(anonymous)';
    this.assertCount = 0;
    this.pendingCount = 0;
    this._skip = args.opts.skip || false;
    this._timeout = args.opts.timeout;
    this._plan = undefined;
    this._cb = args.cb;
    this._progeny = [];
    this._ok = true;

    for (var prop in this) {
        this[prop] = (function bind(self, val) {
            if (typeof val === 'function') {
                return function bound() {
                    return val.apply(self, arguments);
                };
            }
            else return val;
        })(this, this[prop]);
    }
}

Test.prototype.run = function () {
    if (this._skip) {
        this.comment('SKIP ' + this.name);
    }
    if (!this._cb || this._skip) {
        return this._end();
    }
    if (this._timeout != null) {
        this.timeoutAfter(this._timeout);
    }
    this.emit('prerun');
    this._cb(this);
    this.emit('run');
};

Test.prototype.test = function (name, opts, cb) {
    var self = this;
    var t = new Test(name, opts, cb);
    this._progeny.push(t);
    this.pendingCount++;
    this.emit('test', t);
    t.on('prerun', function () {
        self.assertCount++;
    })
    
    if (!self._pendingAsserts()) {
        nextTick(function () {
            self._end();
        });
    }
    
    nextTick(function() {
        if (!self._plan && self.pendingCount == self._progeny.length) {
            self._end();
        }
    });
};

Test.prototype.comment = function (msg) {
    var that = this;
    trim(msg).split('\n').forEach(function (aMsg) {
        that.emit('result', trim(aMsg).replace(/^#\s*/, ''));
    });
};

Test.prototype.plan = function (n) {
    this._plan = n;
    this.emit('plan', n);
};

Test.prototype.timeoutAfter = function(ms) {
    if (!ms) throw new Error('timeoutAfter requires a timespan');
    var self = this;
    var timeout = setTimeout(function() {
        self.fail('test timed out after ' + ms + 'ms');
        self.end();
    }, ms);
    this.once('end', function() {
        clearTimeout(timeout);
    });
}

Test.prototype.end = function (err) { 
    var self = this;
    if (arguments.length >= 1 && !!err) {
        this.ifError(err);
    }
    
    if (this.calledEnd) {
        this.fail('.end() called twice');
    }
    this.calledEnd = true;
    this._end();
};

Test.prototype._end = function (err) {
    var self = this;
    if (this._progeny.length) {
        var t = this._progeny.shift();
        t.on('end', function () { self._end() });
        t.run();
        return;
    }
    
    if (!this.ended) this.emit('end');
    var pendingAsserts = this._pendingAsserts();
    if (!this._planError && this._plan !== undefined && pendingAsserts) {
        this._planError = true;
        this.fail('plan != count', {
            expected : this._plan,
            actual : this.assertCount
        });
    }
    this.ended = true;
};

Test.prototype._exit = function () {
    if (this._plan !== undefined &&
        !this._planError && this.assertCount !== this._plan) {
        this._planError = true;
        this.fail('plan != count', {
            expected : this._plan,
            actual : this.assertCount,
            exiting : true
        });
    }
    else if (!this.ended) {
        this.fail('test exited without ending', {
            exiting: true
        });
    }
};

Test.prototype._pendingAsserts = function () {
    if (this._plan === undefined) {
        return 1;
    }
    else {
        return this._plan - (this._progeny.length + this.assertCount);
    }
};

Test.prototype._assert = function assert (ok, opts) {
    var self = this;
    var extra = opts.extra || {};
    
    var res = {
        id : self.assertCount ++,
        ok : Boolean(ok),
        skip : defined(extra.skip, opts.skip),
        name : defined(extra.message, opts.message, '(unnamed assert)'),
        operator : defined(extra.operator, opts.operator)
    };
    if (has(opts, 'actual') || has(extra, 'actual')) {
        res.actual = defined(extra.actual, opts.actual);
    }
    if (has(opts, 'expected') || has(extra, 'expected')) {
        res.expected = defined(extra.expected, opts.expected);
    }
    this._ok = Boolean(this._ok && ok);
    
    if (!ok) {
        res.error = defined(extra.error, opts.error, new Error(res.name));
    }
    
    if (!ok) {
        var e = new Error('exception');
        var err = (e.stack || '').split('\n');
        var dir = path.dirname(__dirname) + '/';
        
        for (var i = 0; i < err.length; i++) {
            var m = /^[^\s]*\s*\bat\s+(.+)/.exec(err[i]);
            if (!m) {
                continue;
            }
            
            var s = m[1].split(/\s+/);
            var filem = /(\/[^:\s]+:(\d+)(?::(\d+))?)/.exec(s[1]);
            if (!filem) {
                filem = /(\/[^:\s]+:(\d+)(?::(\d+))?)/.exec(s[2]);
                
                if (!filem) {
                    filem = /(\/[^:\s]+:(\d+)(?::(\d+))?)/.exec(s[3]);

                    if (!filem) {
                        continue;
                    }
                }
            }
            
            if (filem[1].slice(0, dir.length) === dir) {
                continue;
            }
            
            res.functionName = s[0];
            res.file = filem[1];
            res.line = Number(filem[2]);
            if (filem[3]) res.column = filem[3];
            
            res.at = m[1];
            break;
        }
    }

    self.emit('result', res);
    
    var pendingAsserts = self._pendingAsserts();
    if (!pendingAsserts) {
        if (extra.exiting) {
            self._end();
        } else {
            nextTick(function () {
                self._end();
            });
        }
    }
    
    if (!self._planError && pendingAsserts < 0) {
        self._planError = true;
        self.fail('plan != count', {
            expected : self._plan,
            actual : self._plan - pendingAsserts
        });
    }
};

Test.prototype.fail = function (msg, extra) {
    this._assert(false, {
        message : msg,
        operator : 'fail',
        extra : extra
    });
};

Test.prototype.pass = function (msg, extra) {
    this._assert(true, {
        message : msg,
        operator : 'pass',
        extra : extra
    });
};

Test.prototype.skip = function (msg, extra) {
    this._assert(true, {
        message : msg,
        operator : 'skip',
        skip : true,
        extra : extra
    });
};

Test.prototype.ok
= Test.prototype['true']
= Test.prototype.assert
= function (value, msg, extra) {
    this._assert(value, {
        message : msg,
        operator : 'ok',
        expected : true,
        actual : value,
        extra : extra
    });
};

Test.prototype.notOk
= Test.prototype['false']
= Test.prototype.notok
= function (value, msg, extra) {
    this._assert(!value, {
        message : msg,
        operator : 'notOk',
        expected : false,
        actual : value,
        extra : extra
    });
};

Test.prototype.error
= Test.prototype.ifError
= Test.prototype.ifErr
= Test.prototype.iferror
= function (err, msg, extra) {
    this._assert(!err, {
        message : defined(msg, String(err)),
        operator : 'error',
        actual : err,
        extra : extra
    });
};

Test.prototype.equal
= Test.prototype.equals
= Test.prototype.isEqual
= Test.prototype.is
= Test.prototype.strictEqual
= Test.prototype.strictEquals
= function (a, b, msg, extra) {
    this._assert(a === b, {
        message : defined(msg, 'should be equal'),
        operator : 'equal',
        actual : a,
        expected : b,
        extra : extra
    });
};

Test.prototype.notEqual
= Test.prototype.notEquals
= Test.prototype.notStrictEqual
= Test.prototype.notStrictEquals
= Test.prototype.isNotEqual
= Test.prototype.isNot
= Test.prototype.not
= Test.prototype.doesNotEqual
= Test.prototype.isInequal
= function (a, b, msg, extra) {
    this._assert(a !== b, {
        message : defined(msg, 'should not be equal'),
        operator : 'notEqual',
        actual : a,
        notExpected : b,
        extra : extra
    });
};

Test.prototype.deepEqual
= Test.prototype.deepEquals
= Test.prototype.isEquivalent
= Test.prototype.same
= function (a, b, msg, extra) {
    this._assert(deepEqual(a, b, { strict: true }), {
        message : defined(msg, 'should be equivalent'),
        operator : 'deepEqual',
        actual : a,
        expected : b,
        extra : extra
    });
};

Test.prototype.deepLooseEqual
= Test.prototype.looseEqual
= Test.prototype.looseEquals
= function (a, b, msg, extra) {
    this._assert(deepEqual(a, b), {
        message : defined(msg, 'should be equivalent'),
        operator : 'deepLooseEqual',
        actual : a,
        expected : b,
        extra : extra
    });
};

Test.prototype.notDeepEqual
= Test.prototype.notEquivalent
= Test.prototype.notDeeply
= Test.prototype.notSame
= Test.prototype.isNotDeepEqual
= Test.prototype.isNotDeeply
= Test.prototype.isNotEquivalent
= Test.prototype.isInequivalent
= function (a, b, msg, extra) {
    this._assert(!deepEqual(a, b, { strict: true }), {
        message : defined(msg, 'should not be equivalent'),
        operator : 'notDeepEqual',
        actual : a,
        notExpected : b,
        extra : extra
    });
};

Test.prototype.notDeepLooseEqual
= Test.prototype.notLooseEqual
= Test.prototype.notLooseEquals
= function (a, b, msg, extra) {
    this._assert(!deepEqual(a, b), {
        message : defined(msg, 'should be equivalent'),
        operator : 'notDeepLooseEqual',
        actual : a,
        expected : b,
        extra : extra
    });
};

Test.prototype['throws'] = function (fn, expected, msg, extra) {
    if (typeof expected === 'string') {
        msg = expected;
        expected = undefined;
    }

    var caught = undefined;

    try {
        fn();
    } catch (err) {
        caught = { error : err };
        var message = err.message;
        delete err.message;
        err.message = message;
    }

    var passed = caught;

    if (expected instanceof RegExp) {
        passed = expected.test(caught && caught.error);
        expected = String(expected);
    }

    if (typeof expected === 'function' && caught) {
        passed = caught.error instanceof expected;
        caught.error = caught.error.constructor;
    }

    this._assert(typeof fn === 'function' && passed, {
        message : defined(msg, 'should throw'),
        operator : 'throws',
        actual : caught && caught.error,
        expected : expected,
        error: !passed && caught && caught.error,
        extra : extra
    });
};

Test.prototype.doesNotThrow = function (fn, expected, msg, extra) {
    if (typeof expected === 'string') {
        msg = expected;
        expected = undefined;
    }
    var caught = undefined;
    try {
        fn();
    }
    catch (err) {
        caught = { error : err };
    }
    this._assert(!caught, {
        message : defined(msg, 'should not throw'),
        operator : 'throws',
        actual : caught && caught.error,
        expected : expected,
        error : caught && caught.error,
        extra : extra
    });
};

Test.skip = function (name_, _opts, _cb) {
    var args = getTestArgs.apply(null, arguments);
    args.opts.skip = true;
    return Test(args.name, args.opts, args.cb);
};

// vim: set softtabstop=4 shiftwidth=4:


}).call(this)}).call(this,"/node_modules/tape/lib")
},{"./next_tick":119,"deep-equal":30,"defined":34,"events":11,"has":98,"inherits":100,"path":12,"string.prototype.trim":113}],122:[function(require,module,exports){
var hasMap = typeof Map === 'function' && Map.prototype;
var mapSizeDescriptor = Object.getOwnPropertyDescriptor && hasMap ? Object.getOwnPropertyDescriptor(Map.prototype, 'size') : null;
var mapSize = hasMap && mapSizeDescriptor && typeof mapSizeDescriptor.get === 'function' ? mapSizeDescriptor.get : null;
var mapForEach = hasMap && Map.prototype.forEach;
var hasSet = typeof Set === 'function' && Set.prototype;
var setSizeDescriptor = Object.getOwnPropertyDescriptor && hasSet ? Object.getOwnPropertyDescriptor(Set.prototype, 'size') : null;
var setSize = hasSet && setSizeDescriptor && typeof setSizeDescriptor.get === 'function' ? setSizeDescriptor.get : null;
var setForEach = hasSet && Set.prototype.forEach;

module.exports = function inspect_ (obj, opts, depth, seen) {
    if (!opts) opts = {};
    
    var maxDepth = opts.depth === undefined ? 5 : opts.depth;
    if (depth === undefined) depth = 0;
    if (depth >= maxDepth && maxDepth > 0
    && obj && typeof obj === 'object') {
        return '[Object]';
    }
    
    if (seen === undefined) seen = [];
    else if (indexOf(seen, obj) >= 0) {
        return '[Circular]';
    }
    
    function inspect (value, from) {
        if (from) {
            seen = seen.slice();
            seen.push(from);
        }
        return inspect_(value, opts, depth + 1, seen);
    }
    
    if (typeof obj === 'string') {
        return inspectString(obj);
    }
    else if (typeof obj === 'function') {
        var name = nameOf(obj);
        return '[Function' + (name ? ': ' + name : '') + ']';
    }
    else if (obj === null) {
        return 'null';
    }
    else if (isSymbol(obj)) {
        var symString = Symbol.prototype.toString.call(obj);
        return typeof obj === 'object' ? 'Object(' + symString + ')' : symString;
    }
    else if (isElement(obj)) {
        var s = '<' + String(obj.nodeName).toLowerCase();
        var attrs = obj.attributes || [];
        for (var i = 0; i < attrs.length; i++) {
            s += ' ' + attrs[i].name + '="' + quote(attrs[i].value) + '"';
        }
        s += '>';
        if (obj.childNodes && obj.childNodes.length) s += '...';
        s += '</' + String(obj.nodeName).toLowerCase() + '>';
        return s;
    }
    else if (isArray(obj)) {
        if (obj.length === 0) return '[]';
        var xs = Array(obj.length);
        for (var i = 0; i < obj.length; i++) {
            xs[i] = has(obj, i) ? inspect(obj[i], obj) : '';
        }
        return '[ ' + xs.join(', ') + ' ]';
    }
    else if (isError(obj)) {
        var parts = [];
        for (var key in obj) {
            if (!has(obj, key)) continue;
            
            if (/[^\w$]/.test(key)) {
                parts.push(inspect(key) + ': ' + inspect(obj[key]));
            }
            else {
                parts.push(key + ': ' + inspect(obj[key]));
            }
        }
        if (parts.length === 0) return '[' + obj + ']';
        return '{ [' + obj + '] ' + parts.join(', ') + ' }';
    }
    else if (typeof obj === 'object' && typeof obj.inspect === 'function') {
        return obj.inspect();
    }
    else if (isMap(obj)) {
        var parts = [];
        mapForEach.call(obj, function (value, key) {
            parts.push(inspect(key, obj) + ' => ' + inspect(value, obj));
        });
        return 'Map (' + mapSize.call(obj) + ') {' + parts.join(', ') + '}';
    }
    else if (isSet(obj)) {
        var parts = [];
        setForEach.call(obj, function (value ) {
            parts.push(inspect(value, obj));
        });
        return 'Set (' + setSize.call(obj) + ') {' + parts.join(', ') + '}';
    }
    else if (typeof obj === 'object' && !isDate(obj) && !isRegExp(obj)) {
        var xs = [], keys = [];
        for (var key in obj) {
            if (has(obj, key)) keys.push(key);
        }
        keys.sort();
        for (var i = 0; i < keys.length; i++) {
            var key = keys[i];
            if (/[^\w$]/.test(key)) {
                xs.push(inspect(key) + ': ' + inspect(obj[key], obj));
            }
            else xs.push(key + ': ' + inspect(obj[key], obj));
        }
        if (xs.length === 0) return '{}';
        return '{ ' + xs.join(', ') + ' }';
    }
    else return String(obj);
};

function quote (s) {
    return String(s).replace(/"/g, '&quot;');
}

function isArray (obj) { return toStr(obj) === '[object Array]' }
function isDate (obj) { return toStr(obj) === '[object Date]' }
function isRegExp (obj) { return toStr(obj) === '[object RegExp]' }
function isError (obj) { return toStr(obj) === '[object Error]' }
function isSymbol (obj) { return toStr(obj) === '[object Symbol]' }

var hasOwn = Object.prototype.hasOwnProperty || function (key) { return key in this; };
function has (obj, key) {
    return hasOwn.call(obj, key);
}

function toStr (obj) {
    return Object.prototype.toString.call(obj);
}

function nameOf (f) {
    if (f.name) return f.name;
    var m = f.toString().match(/^function\s*([\w$]+)/);
    if (m) return m[1];
}

function indexOf (xs, x) {
    if (xs.indexOf) return xs.indexOf(x);
    for (var i = 0, l = xs.length; i < l; i++) {
        if (xs[i] === x) return i;
    }
    return -1;
}

function isMap (x) {
    if (!mapSize) {
        return false;
    }
    try {
        mapSize.call(x);
        return true;
    } catch (e) {}
    return false;
}

function isSet (x) {
    if (!setSize) {
        return false;
    }
    try {
        setSize.call(x);
        return true;
    } catch (e) {}
    return false;
}

function isElement (x) {
    if (!x || typeof x !== 'object') return false;
    if (typeof HTMLElement !== 'undefined' && x instanceof HTMLElement) {
        return true;
    }
    return typeof x.nodeName === 'string'
        && typeof x.getAttribute === 'function'
    ;
}

function inspectString (str) {
    var s = str.replace(/(['\\])/g, '\\$1').replace(/[\x00-\x1f]/g, lowbyte);
    return "'" + s + "'";
    
    function lowbyte (c) {
        var n = c.charCodeAt(0);
        var x = { 8: 'b', 9: 't', 10: 'n', 12: 'f', 13: 'r' }[n];
        if (x) return '\\' + x;
        return '\\x' + (n < 0x10 ? '0' : '') + n.toString(16);
    }
}

},{}],123:[function(require,module,exports){
(function (process){(function (){
var Stream = require('stream')

// through
//
// a stream that does nothing but re-emit the input.
// useful for aggregating a series of changing but not ending streams into one stream)

exports = module.exports = through
through.through = through

//create a readable writable stream.

function through (write, end, opts) {
  write = write || function (data) { this.queue(data) }
  end = end || function () { this.queue(null) }

  var ended = false, destroyed = false, buffer = [], _ended = false
  var stream = new Stream()
  stream.readable = stream.writable = true
  stream.paused = false

//  stream.autoPause   = !(opts && opts.autoPause   === false)
  stream.autoDestroy = !(opts && opts.autoDestroy === false)

  stream.write = function (data) {
    write.call(this, data)
    return !stream.paused
  }

  function drain() {
    while(buffer.length && !stream.paused) {
      var data = buffer.shift()
      if(null === data)
        return stream.emit('end')
      else
        stream.emit('data', data)
    }
  }

  stream.queue = stream.push = function (data) {
//    console.error(ended)
    if(_ended) return stream
    if(data === null) _ended = true
    buffer.push(data)
    drain()
    return stream
  }

  //this will be registered as the first 'end' listener
  //must call destroy next tick, to make sure we're after any
  //stream piped from here.
  //this is only a problem if end is not emitted synchronously.
  //a nicer way to do this is to make sure this is the last listener for 'end'

  stream.on('end', function () {
    stream.readable = false
    if(!stream.writable && stream.autoDestroy)
      process.nextTick(function () {
        stream.destroy()
      })
  })

  function _end () {
    stream.writable = false
    end.call(stream)
    if(!stream.readable && stream.autoDestroy)
      stream.destroy()
  }

  stream.end = function (data) {
    if(ended) return
    ended = true
    if(arguments.length) stream.write(data)
    _end() // will emit or queue
    return stream
  }

  stream.destroy = function () {
    if(destroyed) return
    destroyed = true
    ended = true
    buffer.length = 0
    stream.writable = stream.readable = false
    stream.emit('close')
    return stream
  }

  stream.pause = function () {
    if(stream.paused) return
    stream.paused = true
    return stream
  }

  stream.resume = function () {
    if(stream.paused) {
      stream.paused = false
      stream.emit('resume')
    }
    drain()
    //may have become paused again,
    //as drain emits 'data'.
    if(!stream.paused)
      stream.emit('drain')
    return stream
  }
  return stream
}


}).call(this)}).call(this,require('_process'))
},{"_process":108,"stream":13}],124:[function(require,module,exports){
(function (setImmediate,clearImmediate){(function (){
var nextTick = require('process/browser.js').nextTick;
var apply = Function.prototype.apply;
var slice = Array.prototype.slice;
var immediateIds = {};
var nextImmediateId = 0;

// DOM APIs, for completeness

exports.setTimeout = function() {
  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);
};
exports.setInterval = function() {
  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);
};
exports.clearTimeout =
exports.clearInterval = function(timeout) { timeout.close(); };

function Timeout(id, clearFn) {
  this._id = id;
  this._clearFn = clearFn;
}
Timeout.prototype.unref = Timeout.prototype.ref = function() {};
Timeout.prototype.close = function() {
  this._clearFn.call(window, this._id);
};

// Does not start the time, just sets up the members needed.
exports.enroll = function(item, msecs) {
  clearTimeout(item._idleTimeoutId);
  item._idleTimeout = msecs;
};

exports.unenroll = function(item) {
  clearTimeout(item._idleTimeoutId);
  item._idleTimeout = -1;
};

exports._unrefActive = exports.active = function(item) {
  clearTimeout(item._idleTimeoutId);

  var msecs = item._idleTimeout;
  if (msecs >= 0) {
    item._idleTimeoutId = setTimeout(function onTimeout() {
      if (item._onTimeout)
        item._onTimeout();
    }, msecs);
  }
};

// That's not how node.js implements it but the exposed api is the same.
exports.setImmediate = typeof setImmediate === "function" ? setImmediate : function(fn) {
  var id = nextImmediateId++;
  var args = arguments.length < 2 ? false : slice.call(arguments, 1);

  immediateIds[id] = true;

  nextTick(function onNextTick() {
    if (immediateIds[id]) {
      // fn.call() is faster so we optimize for the common use-case
      // @see http://jsperf.com/call-apply-segu
      if (args) {
        fn.apply(null, args);
      } else {
        fn.call(null);
      }
      // Prevent ids from leaking
      exports.clearImmediate(id);
    }
  });

  return id;
};

exports.clearImmediate = typeof clearImmediate === "function" ? clearImmediate : function(id) {
  delete immediateIds[id];
};
}).call(this)}).call(this,require("timers").setImmediate,require("timers").clearImmediate)
},{"process/browser.js":108,"timers":124}],125:[function(require,module,exports){
(function (global){(function (){

/**
 * Module exports.
 */

module.exports = deprecate;

/**
 * Mark that a method should not be used.
 * Returns a modified function which warns once by default.
 *
 * If `localStorage.noDeprecation = true` is set, then it is a no-op.
 *
 * If `localStorage.throwDeprecation = true` is set, then deprecated functions
 * will throw an Error when invoked.
 *
 * If `localStorage.traceDeprecation = true` is set, then deprecated functions
 * will invoke `console.trace()` instead of `console.error()`.
 *
 * @param {Function} fn - the function to deprecate
 * @param {String} msg - the string to print to the console when `fn` is invoked
 * @returns {Function} a new "deprecated" version of `fn`
 * @api public
 */

function deprecate (fn, msg) {
  if (config('noDeprecation')) {
    return fn;
  }

  var warned = false;
  function deprecated() {
    if (!warned) {
      if (config('throwDeprecation')) {
        throw new Error(msg);
      } else if (config('traceDeprecation')) {
        console.trace(msg);
      } else {
        console.warn(msg);
      }
      warned = true;
    }
    return fn.apply(this, arguments);
  }

  return deprecated;
}

/**
 * Checks `localStorage` for boolean values for the given `name`.
 *
 * @param {String} name
 * @returns {Boolean}
 * @api private
 */

function config (name) {
  // accessing global.localStorage can trigger a DOMException in sandboxed iframes
  try {
    if (!global.localStorage) return false;
  } catch (_) {
    return false;
  }
  var val = global.localStorage[name];
  if (null == val) return false;
  return String(val).toLowerCase() === 'true';
}

}).call(this)}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}]},{},[5,6]);
