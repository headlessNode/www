// modules are defined as an array
// [ module function, map of requireuires ]
//
// map of requireuires is short require name -> numeric require
//
// anything defined in a previous bundle is accessed via the
// orig method which is the requireuire for previous bundles

(function outer (modules, cache, entry) {
    // Save the require from previous bundle to this closure if any
    var previousRequire = typeof require == "function" && require;

    function findProxyquireifyName() {
        var deps = Object.keys(modules)
            .map(function (k) { return modules[k][1]; });

        for (var i = 0; i < deps.length; i++) {
            var pq = deps[i]['proxyquireify'];
            if (pq) return pq;
        }
    }

    var proxyquireifyName = findProxyquireifyName();

    function newRequire(name, jumped){
        // Find the proxyquireify module, if present
        var pqify = (proxyquireifyName != null) && cache[proxyquireifyName];

        // Proxyquireify provides a separate cache that is used when inside
        // a proxyquire call, and is set to null outside a proxyquire call.
        // This allows the regular caching semantics to work correctly both
        // inside and outside proxyquire calls while keeping the cached
        // modules isolated.
        // When switching from one proxyquire call to another, it clears
        // the cache to prevent contamination between different sets
        // of stubs.
        var currentCache = (pqify && pqify.exports._cache) || cache;

        if(!currentCache[name]) {
            if(!modules[name]) {
                // if we cannot find the the module within our internal map or
                // cache jump to the current global require ie. the last bundle
                // that was added to the page.
                var currentRequire = typeof require == "function" && require;
                if (!jumped && currentRequire) return currentRequire(name, true);

                // If there are other bundles on this page the require from the
                // previous one is saved to 'previousRequire'. Repeat this as
                // many times as there are bundles until the module is found or
                // we exhaust the require chain.
                if (previousRequire) return previousRequire(name, true);
                var err = new Error('Cannot find module \'' + name + '\'');
                err.code = 'MODULE_NOT_FOUND';
                throw err;
            }
            var m = currentCache[name] = {exports:{}};

            // The normal browserify require function
            var req = function(x){
                var id = modules[name][1][x];
                return newRequire(id ? id : x);
            };

            // The require function substituted for proxyquireify
            var moduleRequire = function(x){
                var pqify = (proxyquireifyName != null) && cache[proxyquireifyName];
                // Only try to use the proxyquireify version if it has been `require`d
                if (pqify && pqify.exports._proxy) {
                    return pqify.exports._proxy(req, x);
                } else {
                    return req(x);
                }
            };

            modules[name][0].call(m.exports,moduleRequire,m,m.exports,outer,modules,currentCache,entry);
        }
        return currentCache[name].exports;
    }
    for(var i=0;i<entry.length;i++) newRequire(entry[i]);

    // Override the current require with this new one
    return newRequire;
})
({1:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Test whether an object has a specified property.
*
* @module @stdlib/assert/has-own-property
*
* @example
* var hasOwnProp = require( '@stdlib/assert/has-own-property' );
*
* var beep = {
*     'boop': true
* };
*
* var bool = hasOwnProp( beep, 'boop' );
* // returns true
*
* bool = hasOwnProp( beep, 'bop' );
* // returns false
*/

// MODULES //

var main = require( './main.js' );


// EXPORTS //

module.exports = main;

},{"./main.js":2}],2:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// FUNCTIONS //

var has = Object.prototype.hasOwnProperty;


// MAIN //

/**
* Tests if an object has a specified property.
*
* @param {*} value - value to test
* @param {*} property - property to test
* @returns {boolean} boolean indicating if an object has a specified property
*
* @example
* var beep = {
*     'boop': true
* };
*
* var bool = hasOwnProp( beep, 'boop' );
* // returns true
*
* @example
* var beep = {
*     'boop': true
* };
*
* var bool = hasOwnProp( beep, 'bap' );
* // returns false
*/
function hasOwnProp( value, property ) {
	if (
		value === void 0 ||
		value === null
	) {
		return false;
	}
	return has.call( value, property );
}


// EXPORTS //

module.exports = hasOwnProp;

},{}],3:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Test for native `Symbol` support.
*
* @module @stdlib/assert/has-symbol-support
*
* @example
* var hasSymbolSupport = require( '@stdlib/assert/has-symbol-support' );
*
* var bool = hasSymbolSupport();
* // returns <boolean>
*/

// MODULES //

var main = require( './main.js' );


// EXPORTS //

module.exports = main;

},{"./main.js":4}],4:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MAIN //

/**
* Tests for native `Symbol` support.
*
* @returns {boolean} boolean indicating if an environment has `Symbol` support
*
* @example
* var bool = hasSymbolSupport();
* // returns <boolean>
*/
function hasSymbolSupport() {
	return (
		typeof Symbol === 'function' &&
		typeof Symbol( 'foo' ) === 'symbol'
	);
}


// EXPORTS //

module.exports = hasSymbolSupport;

},{}],5:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Test for native `toStringTag` support.
*
* @module @stdlib/assert/has-tostringtag-support
*
* @example
* var hasToStringTagSupport = require( '@stdlib/assert/has-tostringtag-support' );
*
* var bool = hasToStringTagSupport();
* // returns <boolean>
*/

// MODULES //

var main = require( './main.js' );


// EXPORTS //

module.exports = main;

},{"./main.js":6}],6:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var hasSymbols = require( '@stdlib/assert/has-symbol-support' );


// VARIABLES //

var FLG = hasSymbols();


// MAIN //

/**
* Tests for native `toStringTag` support.
*
* @returns {boolean} boolean indicating if an environment has `toStringTag` support
*
* @example
* var bool = hasToStringTagSupport();
* // returns <boolean>
*/
function hasToStringTagSupport() {
	return ( FLG && typeof Symbol.toStringTag === 'symbol' );
}


// EXPORTS //

module.exports = hasToStringTagSupport;

},{"@stdlib/assert/has-symbol-support":3}],7:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Test if a value is an array.
*
* @module @stdlib/assert/is-array
*
* @example
* var isArray = require( '@stdlib/assert/is-array' );
*
* var bool = isArray( [] );
* // returns true
*
* bool = isArray( {} );
* // returns false
*/

// MODULES //

var main = require( './main.js' );


// EXPORTS //

module.exports = main;

},{"./main.js":8}],8:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var nativeClass = require( '@stdlib/utils/native-class' );


// VARIABLES //

var f;


// FUNCTIONS //

/**
* Tests if a value is an array.
*
* @param {*} value - value to test
* @returns {boolean} boolean indicating whether value is an array
*
* @example
* var bool = isArray( [] );
* // returns true
*
* @example
* var bool = isArray( {} );
* // returns false
*/
function isArray( value ) {
	return ( nativeClass( value ) === '[object Array]' );
}


// MAIN //

if ( Array.isArray ) {
	f = Array.isArray;
} else {
	f = isArray;
}


// EXPORTS //

module.exports = f;

},{"@stdlib/utils/native-class":80}],9:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Test if a value is a boolean.
*
* @module @stdlib/assert/is-boolean
*
* @example
* var Boolean = require( '@stdlib/boolean/ctor' );
* var isBoolean = require( '@stdlib/assert/is-boolean' );
*
* var bool = isBoolean( false );
* // returns true
*
* bool = isBoolean( new Boolean( false ) );
* // returns true
*
* @example
* var Boolean = require( '@stdlib/boolean/ctor' );
* var isBoolean = require( '@stdlib/assert/is-boolean' ).isPrimitive;
*
* var bool = isBoolean( false );
* // returns true
*
* bool = isBoolean( new Boolean( true ) );
* // returns false
*
* @example
* var Boolean = require( '@stdlib/boolean/ctor' );
* var isBoolean = require( '@stdlib/assert/is-boolean' ).isObject;
*
* var bool = isBoolean( true );
* // returns false
*
* bool = isBoolean( new Boolean( false ) );
* // returns true
*/

// MODULES //

var setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );
var main = require( './main.js' );
var isPrimitive = require( './primitive.js' );
var isObject = require( './object.js' );


// MAIN //

setReadOnly( main, 'isPrimitive', isPrimitive );
setReadOnly( main, 'isObject', isObject );


// EXPORTS //

module.exports = main;

},{"./main.js":10,"./object.js":11,"./primitive.js":12,"@stdlib/utils/define-nonenumerable-read-only-property":62}],10:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var isPrimitive = require( './primitive.js' );
var isObject = require( './object.js' );


// MAIN //

/**
* Tests if a value is a boolean.
*
* @param {*} value - value to test
* @returns {boolean} boolean indicating whether value is a boolean
*
* @example
* var bool = isBoolean( false );
* // returns true
*
* @example
* var bool = isBoolean( true );
* // returns true
*
* @example
* var Boolean = require( '@stdlib/boolean/ctor' );
*
* var bool = isBoolean( new Boolean( false ) );
* // returns true
*
* @example
* var Boolean = require( '@stdlib/boolean/ctor' );
*
* var bool = isBoolean( new Boolean( true ) );
* // returns true
*/
function isBoolean( value ) {
	return ( isPrimitive( value ) || isObject( value ) );
}


// EXPORTS //

module.exports = isBoolean;

},{"./object.js":11,"./primitive.js":12}],11:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var hasToStringTag = require( '@stdlib/assert/has-tostringtag-support' );
var nativeClass = require( '@stdlib/utils/native-class' );
var Boolean = require( '@stdlib/boolean/ctor' );
var test = require( './try2serialize.js' );


// VARIABLES //

var FLG = hasToStringTag();


// MAIN //

/**
* Tests if a value is a boolean object.
*
* @param {*} value - value to test
* @returns {boolean} boolean indicating if a value is a boolean object
*
* @example
* var bool = isBoolean( true );
* // returns false
*
* @example
* var Boolean = require( '@stdlib/boolean/ctor' );
*
* var bool = isBoolean( new Boolean( false ) );
* // returns true
*/
function isBoolean( value ) {
	if ( typeof value === 'object' ) {
		if ( value instanceof Boolean ) {
			return true;
		}
		if ( FLG ) {
			return test( value );
		}
		return ( nativeClass( value ) === '[object Boolean]' );
	}
	return false;
}


// EXPORTS //

module.exports = isBoolean;

},{"./try2serialize.js":14,"@stdlib/assert/has-tostringtag-support":5,"@stdlib/boolean/ctor":25,"@stdlib/utils/native-class":80}],12:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Tests if a value is a boolean primitive.
*
* @param {*} value - value to test
* @returns {boolean} boolean indicating if a value is a boolean primitive
*
* @example
* var bool = isBoolean( true );
* // returns true
*
* @example
* var bool = isBoolean( false );
* // returns true
*
* @example
* var Boolean = require( '@stdlib/boolean/ctor' );
*
* var bool = isBoolean( new Boolean( true ) );
* // returns false
*/
function isBoolean( value ) {
	return ( typeof value === 'boolean' );
}


// EXPORTS //

module.exports = isBoolean;

},{}],13:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// eslint-disable-next-line stdlib/no-redeclare
var toString = Boolean.prototype.toString; // non-generic


// EXPORTS //

module.exports = toString;

},{}],14:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var toString = require( './tostring.js' ); // eslint-disable-line stdlib/no-redeclare


// MAIN //

/**
* Attempts to serialize a value to a string.
*
* @private
* @param {*} value - value to test
* @returns {boolean} boolean indicating if a value can be serialized
*/
function test( value ) {
	try {
		toString.call( value );
		return true;
	} catch ( err ) { // eslint-disable-line no-unused-vars
		return false;
	}
}


// EXPORTS //

module.exports = test;

},{"./tostring.js":13}],15:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Test if a value is a Buffer instance.
*
* @module @stdlib/assert/is-buffer
*
* @example
* var isBuffer = require( '@stdlib/assert/is-buffer' );
*
* var v = isBuffer( new Buffer( 'beep' ) );
* // returns true
*
* v = isBuffer( {} );
* // returns false
*/

// MODULES //

var main = require( './main.js' );


// EXPORTS //

module.exports = main;

},{"./main.js":16}],16:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var isObjectLike = require( '@stdlib/assert/is-object-like' );


// MAIN //

/**
* Tests if a value is a Buffer instance.
*
* @param {*} value - value to validate
* @returns {boolean} boolean indicating if a value is a Buffer instance
*
* @example
* var v = isBuffer( new Buffer( 'beep' ) );
* // returns true
*
* @example
* var v = isBuffer( new Buffer( [1,2,3,4] ) );
* // returns true
*
* @example
* var v = isBuffer( {} );
* // returns false
*
* @example
* var v = isBuffer( [] );
* // returns false
*/
function isBuffer( value ) {
	return (
		isObjectLike( value ) &&
		(
			// eslint-disable-next-line no-underscore-dangle
			value._isBuffer || // for envs missing Object.prototype.constructor (e.g., Safari 5-7)
			(
				value.constructor &&

				// WARNING: `typeof` is not a foolproof check, as certain envs consider RegExp and NodeList instances to be functions
				typeof value.constructor.isBuffer === 'function' &&
				value.constructor.isBuffer( value )
			)
		)
	);
}


// EXPORTS //

module.exports = isBuffer;

},{"@stdlib/assert/is-object-like":21}],17:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Test if a value is an `Error` object.
*
* @module @stdlib/assert/is-error
*
* @example
* var isError = require( '@stdlib/assert/is-error' );
*
* var bool = isError( new Error( 'beep' ) );
* // returns true
*
* bool = isError( {} );
* // returns false
*/

// MODULES //

var main = require( './main.js' );


// EXPORTS //

module.exports = main;

},{"./main.js":18}],18:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var getPrototypeOf = require( '@stdlib/utils/get-prototype-of' );
var nativeClass = require( '@stdlib/utils/native-class' );


// MAIN //

/**
* Tests if a value is an `Error` object.
*
* @param {*} value - value to test
* @returns {boolean} boolean indicating whether a value is an `Error` object
*
* @example
* var bool = isError( new Error( 'beep' ) );
* // returns true
*
* @example
* var bool = isError( {} );
* // returns false
*/
function isError( value ) {
	if ( typeof value !== 'object' || value === null ) {
		return false;
	}
	// Check for `Error` objects from the same realm (same Node.js `vm` or same `Window` object)...
	if ( value instanceof Error ) {
		return true;
	}
	// Walk the prototype tree until we find an object having the desired native class...
	while ( value ) {
		if ( nativeClass( value ) === '[object Error]' ) {
			return true;
		}
		value = getPrototypeOf( value );
	}
	return false;
}


// EXPORTS //

module.exports = isError;

},{"@stdlib/utils/get-prototype-of":70,"@stdlib/utils/native-class":80}],19:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Test if a value is a function.
*
* @module @stdlib/assert/is-function
*
* @example
* var isFunction = require( '@stdlib/assert/is-function' );
*
* function beep() {
*     return 'beep';
* }
*
* var bool = isFunction( beep );
* // returns true
*/

// MODULES //

var main = require( './main.js' );


// EXPORTS //

module.exports = main;

},{"./main.js":20}],20:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var typeOf = require( '@stdlib/utils/type-of' );


// MAIN //

/**
* Tests if a value is a function.
*
* @param {*} value - value to test
* @returns {boolean} boolean indicating whether value is a function
*
* @example
* function beep() {
*     return 'beep';
* }
*
* var bool = isFunction( beep );
* // returns true
*/
function isFunction( value ) {
	// Note: cannot use `typeof` directly, as various browser engines incorrectly return `'function'` when operating on non-function objects, such as regular expressions and NodeLists.
	return ( typeOf( value ) === 'function' );
}


// EXPORTS //

module.exports = isFunction;

},{"@stdlib/utils/type-of":91}],21:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Test if a value is object-like.
*
* @module @stdlib/assert/is-object-like
*
* @example
* var isObjectLike = require( '@stdlib/assert/is-object-like' );
*
* var bool = isObjectLike( {} );
* // returns true
*
* bool = isObjectLike( [] );
* // returns true
*
* bool = isObjectLike( null );
* // returns false
*
* @example
* var isObjectLike = require( '@stdlib/assert/is-object-like' ).isObjectLikeArray;
*
* var bool = isObjectLike( [ {}, [] ] );
* // returns true
*
* bool = isObjectLike( [ {}, '3.0' ] );
* // returns false
*/

// MODULES //

var setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );
var arrayfun = require( '@stdlib/assert/tools/array-function' );
var main = require( './main.js' );


// VARIABLES //

var isObjectLikeArray = arrayfun( main );


// MAIN //

setReadOnly( main, 'isObjectLikeArray', isObjectLikeArray );


// EXPORTS //

module.exports = main;

},{"./main.js":22,"@stdlib/assert/tools/array-function":23,"@stdlib/utils/define-nonenumerable-read-only-property":62}],22:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Tests if a value is object-like.
*
* @param {*} value - value to test
* @returns {boolean} boolean indicating whether a value is object-like
*
* @example
* var bool = isObjectLike( {} );
* // returns true
*
* @example
* var bool = isObjectLike( [] );
* // returns true
*
* @example
* var bool = isObjectLike( null );
* // returns false
*/
function isObjectLike( value ) {
	return (
		value !== null &&
		typeof value === 'object'
	);
}


// EXPORTS //

module.exports = isObjectLike;

},{}],23:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Return a function which tests if every element in an array passes a test condition.
*
* @module @stdlib/assert/tools/array-function
*
* @example
* var isOdd = require( '@stdlib/assert/is-odd' );
* var arrayfcn = require( '@stdlib/assert/tools/array-function' );
*
* var arr1 = [ 1, 3, 5, 7 ];
* var arr2 = [ 3, 5, 8 ];
*
* var validate = arrayfcn( isOdd );
*
* var bool = validate( arr1 );
* // returns true
*
* bool = validate( arr2 );
* // returns false
*/

// MODULES //

var main = require( './main.js' );


// EXPORTS //

module.exports = main;

},{"./main.js":24}],24:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var isArray = require( '@stdlib/assert/is-array' );
var format = require( '@stdlib/string/format' );


// MAIN //

/**
* Returns a function which tests if every element in an array passes a test condition.
*
* @param {Function} predicate - function to apply
* @throws {TypeError} must provide a function
* @returns {Function} an array function
*
* @example
* var isOdd = require( '@stdlib/assert/is-odd' );
*
* var arr1 = [ 1, 3, 5, 7 ];
* var arr2 = [ 3, 5, 8 ];
*
* var validate = arrayfcn( isOdd );
*
* var bool = validate( arr1 );
* // returns true
*
* bool = validate( arr2 );
* // returns false
*/
function arrayfcn( predicate ) {
	if ( typeof predicate !== 'function' ) {
		throw new TypeError( format( 'invalid argument. Must provide a function. Value: `%s`.', predicate ) );
	}
	return every;

	/**
	* Tests if every element in an array passes a test condition.
	*
	* @private
	* @param {*} value - value to test
	* @returns {boolean} boolean indicating whether a value is an array for which all elements pass a test condition
	*/
	function every( value ) {
		var len;
		var i;
		if ( !isArray( value ) ) {
			return false;
		}
		len = value.length;
		if ( len === 0 ) {
			return false;
		}
		for ( i = 0; i < len; i++ ) {
			if ( predicate( value[ i ] ) === false ) {
				return false;
			}
		}
		return true;
	}
}


// EXPORTS //

module.exports = arrayfcn;

},{"@stdlib/assert/is-array":7,"@stdlib/string/format":55}],25:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2022 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Boolean constructor.
*
* @module @stdlib/boolean/ctor
*
* @example
* var Boolean = require( '@stdlib/boolean/ctor' );
*
* var b = Boolean( null );
* // returns false
*
* b = Boolean( [] );
* // returns true
*
* b = Boolean( {} );
* // returns true
*
* @example
* var Boolean = require( '@stdlib/boolean/ctor' );
*
* var b = new Boolean( false );
* // returns <Boolean>
*/

// MODULES //

var main = require( './main.js' );


// EXPORTS //

module.exports = main;

},{"./main.js":26}],26:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2022 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MAIN //

/**
* Returns a boolean.
*
* @name Boolean
* @constructor
* @type {Function}
* @param {*} value - input value
* @returns {(boolean|Boolean)} boolean
*
* @example
* var b = Boolean( null );
* // returns false
*
* b = Boolean( [] );
* // returns true
*
* b = Boolean( {} );
* // returns true
*
* @example
* var b = new Boolean( false );
* // returns <Boolean>
*/
var Bool = Boolean; // eslint-disable-line stdlib/require-globals


// EXPORTS //

module.exports = Bool;

},{}],27:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Test if a double-precision floating-point numeric value is `NaN`.
*
* @module @stdlib/math/base/assert/is-nan
*
* @example
* var isnan = require( '@stdlib/math/base/assert/is-nan' );
*
* var bool = isnan( NaN );
* // returns true
*
* bool = isnan( 7.0 );
* // returns false
*/

// MODULES //

var main = require( './main.js' );


// EXPORTS //

module.exports = main;

},{"./main.js":28}],28:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MAIN //

/**
* Tests if a double-precision floating-point numeric value is `NaN`.
*
* @param {number} x - value to test
* @returns {boolean} boolean indicating whether the value is `NaN`
*
* @example
* var bool = isnan( NaN );
* // returns true
*
* @example
* var bool = isnan( 7.0 );
* // returns false
*/
function isnan( x ) {
	return ( x !== x );
}


// EXPORTS //

module.exports = isnan;

},{}],29:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2024 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Evaluate the modulus function.
*
* @module @stdlib/math/base/special/fmod
*
* @example
* var fmod = require( '@stdlib/math/base/special/fmod' );
*
* var v = fmod( 8.0, 3.0 );
* // returns 2.0
*
* var v = fmod( 9.0, 3.0 );
* // returns 0.0
*
* var v = fmod( 8.9, 3.0 );
* // returns 2.9
*
* var v = fmod( NaN, 3.0 );
* // returns NaN
*
* var v = fmod( 5.0, NaN );
* // returns NaN
*
* var v = fmod( NaN, NaN );
* // returns NaN
*/

// MODULES //

var main = require( './main.js' );


// EXPORTS //

module.exports = main;

},{"./main.js":30}],30:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2024 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MAIN //

/**
* Evaluates the modulus function.
*
* @param {number} x - dividend
* @param {number} y - divisor
* @returns {number} remainder
*
* @example
* var v = fmod( 8.0, 3.0 );
* // returns 2.0
*
* @example
* var v = fmod( 9.0, 3.0 );
* // returns 0.0
*
* @example
* var v = fmod( 8.9, 3.0 );
* // returns 2.9
*
* @example
* var v = fmod( NaN, 3.0 );
* // returns NaN
*
* @example
* var v = fmod( 5.0, NaN );
* // returns NaN
*
* @example
* var v = fmod( NaN, NaN );
* // returns NaN
*/
function fmod( x, y ) {
	return x % y;
}


// EXPORTS //

module.exports = fmod;

},{}],31:[function(require,module,exports){
module.exports={"expected":[4.612728781594126,0.04499520113169542,0.3208490436502367,4.075606097985361,7.290103238109019,0.6155788240801954,0.5924865914453488,2.916127117537936,0.31389951295369656,0.1891338283685009,1.3398098620058931,0.6323210777749635,2.1457124228524247,0.5149693780208509,1.178313883095388,8.886671958872068,3.5665956242659043,0.2119575433098857,3.5971890617145466,1.354805573401868,3.5933689576192878,1.2879511837886568,0.14130642908194613,0.478332882980963,0.8707278706689294,3.1028915433767246,2.805604906154173,0.21517760328529079,3.004226415841705,0.015423439785442028,1.7326815901635015,1.3496875036487452,1.4823083959034609,0.9768395188235646,1.7606644874035169,5.99655959579686,1.0229041322721297,4.6850949223100535,6.201698341138879,0.2574564274932847,0.1812726933807829,2.8283182961356346,2.041589021364466,0.06716540490232248,1.4989400360938436,0.01752955229120401,2.178726081062358,6.600373657707625,0.8137215299342344,3.949969316852428,2.165924574618728,0.2725744005495514,0.934766951282398,4.623066962868112,4.005252070220804,1.0585099175482275,0.32194576994321267,0.63899588525857,6.5812128465384845,8.516138730159273,0.18704743823578784,0.6385721432365372,3.9889103111286204,2.3602989884379006,2.910918783104563,4.752133852355921,2.7398720800318705,0.7420013877280793,0.35435104162124276,4.378682844710525,1.1507255628924078,0.08117763114288268,2.659731811239702,0.272160105299609,3.2153639290066325,0.491953327193865,1.524767739040323,0.029444913014687657,0.6486243210092963,1.0134254554911664,2.190692346097954,0.12497599387686087,1.0940747600671248,1.2668552971795544,6.156088311413242,2.600574585548748,0.2578784844072768,0.8798081078150615,0.03852693562183429,0.012705330107344981,8.144554946488427,3.0334945794509167,2.780676167578841,0.7078431410943224,0.953802675870989,2.222293064287279,6.902049764234892,7.363547165882286,6.132472695752453,3.380536389771585,5.735640305894122,3.3754293313686503,0.17537505122430375,8.531425736254931,4.514854842860645,6.360103296855742,5.358551258444386,1.7291795994093775,0.33454709096473323,0.5938258102467757,0.38089219149060227,0.6389940769111426,5.961084729549237,3.1291865208409266,1.239330764368825,2.012599070202712,0.2518653835378686,0.22308128640455038,2.350021268627769,0.0855137465765381,0.23439709456193802,2.5764193726934614,2.0500154318369006,0.5208183276170426,4.481539638410467,5.155495512729175,3.214845490874197,7.108993306923129,1.4361760156799654,0.8464338052492693,0.08368342065991485,0.48028671491600683,0.21898768846230077,6.161915783295367,2.9557994418822187,3.39789344532935,0.14295394374594794,2.6212346514092904,0.5994077358387568,3.2970460085342097,0.3860320456036632,0.5128782500582858,1.7650878856852579,0.026788512205285997,0.0018623402823290114,0.48153485237792326,0.46070409471799234,0.6475014313393821,1.094987240179666,0.9703463022888386,0.6125332733408433,1.1043470563929993,0.6568920837783772,2.4447887806997466,0.22327907167019134,0.09515377927663327,3.400265257757929,8.165577964940248,2.3844351538781154,1.779603341588508,1.6141562427604264,2.879143963312756,0.4703074743305109,5.426787116663551,4.712648118457723,0.5398690987819617,0.3231845489066538,1.7291325541390608,0.14466509226838653,0.31839964151805233,0.40050044499673465,2.2079127121804003,4.814891955794851,1.1759585642381847,2.7932408442838614,1.1523945648650962,0.38858691737470963,0.6828072212926182,0.4009739141393722,0.02331644445109804,5.011602025060419,0.5654671933418465,1.0829155798135155,5.538698279797739,1.5396450917787892,0.5396410980510744,1.8442276931560522,0.34213387811184504,4.474718629485551,5.8622115760060325,0.023206560589727143,3.169105649030058,3.6693347942609655,6.5174686318987085,0.36323352528523856,2.427615977026079,0.4609302315881125,0.3507746727631016,0.018272335966856623,0.8604611588881461,0.03299354065904314,2.023209419904112,5.674968091194321,6.725211737169619,0.026403625535058373,0.17570072454225927,6.042517017952996,6.943810671291587,0.12046915924126722,0.8286721651417412,3.3783841431850323,0.6283533378283619,6.3435000076056856,1.2262165561583451,8.19805990425624,0.5317279201567633,0.3101302024254293,3.0954477198157466,3.3451352208501923,3.305330798333511,1.2880216469902237,2.676527118339756,1.0111205029079287,1.3990216974978296,5.923170293224469,1.1947386684639483,1.889101284573579,1.6738725255883455,2.622303610596438,0.34047780440262243,0.11595352556211225,0.26274508651555095,4.012118853399893,0.23192652304387007,4.320277883241969,1.3982529744273116,0.9719283919375536,0.14305145394146845,0.033807575276207924,6.476387936598279,0.25034116184807886,1.747302913688845,1.0103915474954306,0.31227788002300194,1.3717263778282263,0.5912644936517442,0.4473559653852952,7.9868403399396914,0.6823914281998746,0.5060314007206816,0.6706765631254719,3.1599641612670375,0.3370384873179828,0.28811013066206304,2.7200623669912174,2.3907788908172156,2.640022122642117,0.5581559456703395,3.239603779221973,4.900668225642118,1.9223955251872447,1.7526407921656642,0.39847410842584985,0.3845773410128046,2.406364908871823,0.045636913696393666,4.438582458107391,4.890245852616723,7.200793907939325,2.658304317967974,8.272947761107304,0.18124826357452717,1.5914403973517093,1.283826952297268,2.7360125185637827,1.3936809663567784,1.6482408368925676,0.7628418758020414,4.4875502713691535,0.19827623755346035,1.1693837932515105,4.125743445219246,1.6123111699826183,0.6233761889672902,0.6006606946289912,2.640484680395959,0.28164152020146105,2.490658903553488,0.3269950536821584,6.597705415286782,0.9592151185979887,1.0936248760087484,3.103928781805286,4.710327456611482,3.793041485500982,0.499501093400438,2.48294916041284,9.007407208150736,1.2173743085019568,3.205788048503311,2.985291211302224,2.714984195062666,0.3717898138609672,0.651614331379454,1.908431221790611,1.6936826497488582,3.084788287827336,1.3468911389220617,0.7211556702018527,0.34403357404566215,7.0935955311395045,3.8363217657098794,0.10913719056727089,5.070146622813663,1.1867395326416634,1.4232933564822332,1.369329865620955,3.6780895698471205,1.1566017710652634,3.542459695012708,5.558740960484727,0.4859082167364932,1.1412027634850643,6.028404317119303,4.080877753570652,2.5202815354332557,0.6450443704989013,0.7439678717953158,2.01342566871228,0.5862761036252186,3.2052682941273822,1.5381638216777231,8.383433064985638,2.8144660963238155,1.4673653705168928,4.599210859561381,0.9713112109885387,6.043275190606692,0.5167076587967081,1.0929375476389396,3.4246943219213133,1.2509201769793918,2.1995160407443564,5.309042462730567,1.252586977314209,4.25791649386051,0.9032195360520134,0.9369772953761584,2.7167473118467935,4.803390118510542,0.10654810686252247,0.12790938216371517,2.387618388919229,0.014320128103020302,0.3891438014879114,0.09046340381983242,0.23488894366538915,2.683537185173133,1.4662374856714138,0.5563196019469618,3.3168072595576774,0.5460475345385005,1.0456063479593016,1.3990854883111075,4.128061022043926,4.314002679481016,6.290691383204158,1.119502492073881,0.1990016713585696,4.103018626682638,7.226572310694891,6.004506762683647,1.3815545858901537,4.621097489839933,6.177685136486311,1.1301593235162093,5.617143103474891,0.9752704418291316,6.486076834843338,0.8506365336904085,4.293054851226994,1.1288460610570858,0.3169647831718496,1.0623282582993063,1.7250192749027722,0.5312228787614597,3.734998549210804,0.3190665487490625,0.4228916028213592,4.150856955698352,2.158127403269688,0.12635470023599393,1.5467299975434843,1.827521481577186,1.9104309040359144,2.0864971113943316,0.06243906405610722,2.64894451661994,1.583275764382856,3.244655259782567,5.3182845054331365,2.047730412495424,4.7674371442724635,1.6639183891563318,7.990481062768215,1.153971602695024,0.3470708712736874,0.9036140462760005,3.090626318698906,0.3650421761534073,1.9401600635833436,6.509886443134118,3.0250859434839255,4.996299087114597,6.929363634795148,3.7692182133380463,0.4412261273099283,1.0057358479132388,5.33291078998117,3.351080161711936,4.611418465722295,2.164469352911034,0.6976213860115554,0.41497403281336176,0.7784791716846815,0.6327536002884013,0.507686412325298,5.281341695525751,3.254960651265854,7.769822557137399,2.5714867736184592,3.9207932740704172,3.9971448176399065,0.009690607305359089,3.5116824565559552,5.029583467989596,6.826244737285296,6.21209629010445,7.008726486638871,4.717978823237942,0.21049440464712488,0.8764209242836336,2.1345624071628873,0.7548843770954221,0.7928860748006938,0.13847765378872912,6.788773319407717,1.4691448196429064,0.21622799176195429,3.1485307976150443,1.8447216287294115,8.694505906169077,0.565624992197181,1.5526606216912455,5.166116288577037,2.1317938232212867,2.0584589960742683,2.0704201756071363,7.017536375420097,2.1186390739456193,0.34647641068311374,2.8834692976401612,1.5000511856354564,1.1638495131676936,1.2256853195818245,5.232693943269757,0.003455645459967016,2.9530688974405557,1.0041770165812407,0.14859566147901404,0.6271872696542147,7.262825830420612,4.841131863533169,3.3441991590539892,0.07253051118017417,0.2856856605125371,0.35184697591714365,1.3379999414182588,3.4928111911840016,1.9948767416270101,6.991739309253385,0.6154556994954063,4.457647769843618,6.7080270469566585,3.1758233616432854,5.747556335760422,3.258094582208103,9.006186924316054,0.16936555762513383,2.2592524900031634,0.016101831805743316,2.49521719630107,0.39241972563460514,3.32383100593278,2.0544448082521183,1.5964352037383414,0.23187117209570562,7.376705026780538,7.391810437948468,5.489530598913186,3.511056093984058,0.1147354235426965,3.13001314099526,1.2368460005716315,0.9671612070619666,3.5414674870238336,4.3337698114348555,0.29127183248326727,5.201416850315898,1.8310485329903834,1.7525111615374298,0.7651735708609717,1.4233498878747817,1.044413565410129,4.490291327361172,0.10485183146513677,1.0241956817576203,3.0596637693538185,1.9062455753662828,3.8496941744416375,0.17065958814706406,6.357491982949245,0.12100014932956071,0.1137190084348596,3.326991845843777,5.062609673173222,1.4337371442541667,0.934953814409683,0.04630719593586896,0.1275027319308537,0.05084354697599602,1.030264974342142,8.220224805623815,1.304055375673581,2.0905875516150996,2.7969345684304585,1.7380412957206204,0.7131457390247853,4.512557304972473,0.5410664240083367,0.5943415695652607,6.121650121491493,0.6884607461924723,1.9628050668095103,1.734605243500555,2.7482252201543176,6.362526336420826,4.920538982184041,0.15896666038953633,4.1846814556041885,6.788472865150638,0.8071267278851266,1.5960502109826753,2.4332013161636823,3.1444821744757263,5.480193283246541,4.27045361022148,0.6699786321557326,6.492529841830571,1.4976481891738604,3.5174260724136843,4.157461445251839,5.097512166738179,0.5918732438652654,7.390437014658728,0.7095067787789393,0.06738182934603465,1.9729479288839151,0.7825018159883541,6.030934068418919,1.506091694343894,1.134499118176599,2.722286300136714,1.3422719311903064,3.3785670766834377,2.4931667947234235,2.01044536201299,1.6154048963948098,1.2931326181399387,0.17602121977241358,7.936882162669988,0.413463457693271,0.26933628137088705,1.1680055523187312,5.762494083079857,1.784939774354469,1.5654124632449067,4.352465860035487,0.36559330065671225,3.961345793707401,1.5875362219774019,0.12010201360596806,0.7859462240395194,3.807134021115526,0.008508931218076388,0.7203641055859338,1.9607271241497521,3.4708278512432713,6.159426038963616,7.647948144052762,2.7091371057833173,5.452415372013924,0.3375934277504302,0.2352608957861948,8.014387075479661,1.1931892417042014,0.452771641109047,1.0760694901739436,0.5229633729795324,1.1720230694036546,4.396953099318303,8.9155106331301,0.9910875472437972,4.742533104943961,0.2013034170153758,5.951461067656361,2.35216758447506,1.6897565327794961,1.462123857839008,2.618945236042869,1.2762225524156716,2.6956986424746283,0.06876267735021191,0.5079115124163618,2.001535161568569,3.4440059146347703,8.926511546592291,3.293243580585048,1.405840724455901,5.531169539547424,2.651190840876687,4.131953491152167,2.001270295814715,2.9709063013443817,0.003946465101261509,2.6992823606594136,2.593682726148515,4.401248974106746,0.4969757222019009,0.18634925464994012,0.5790474137137385,3.709026379942374,0.38014004033291116,2.205996002617777,1.5000401362516786,6.218324995025782,0.6267015993996097,0.003795318194866004,0.041072249410930795,0.22616585156616154,2.5440799576693385,3.4710758778258395,3.399733281885137,2.570282366530977,1.8737985610589902,7.027192494092539,3.2315072191689964,5.781564811109384,1.8769977665066548,3.648176405645337,1.1749621829123065,0.7977345104476861,1.0335647904906016,0.6071428143944466,1.1110078291567174,0.5619691623741034,1.3976907676348187,0.06541544552373679,0.30715684230515117,0.2148840144080919,0.3319560252506415,0.08133668900943114,2.2480476971832015,0.9662929383210219,3.150433638132867,3.869770716458671,8.983710256234954,8.138743532818697,0.935792022363608,0.6029440576908911,0.9247682165573807,6.048286159374591,2.519289968608841,0.9787761474736367,2.7579737667199082,3.030160277552824,0.3574126892002427,4.634283153617849,0.050263033864311524,2.336255648488084,1.7862248338913584,0.5102012143318708,0.04723550784357755,1.460797933217691,9.175153560911056,1.586234952920348,2.602264438832858,1.290113634824177,1.95684690640875,1.099221278197811,0.24638379100693442,6.617270202736119,2.030310468210441,2.4750602995377804,3.206527788236423,4.803879052500212,3.759495570698796,0.5641573696101143,2.14500233374946,3.031678009464308,0.7241161962713993,1.6314405733482378,0.9847070079656346,3.898764369647812,1.7451180868711287,7.6748005129893,0.06389900370445867,6.344722441983841,0.8775740985959999,6.005616148657525,0.04586941855927407,2.8930502422478632,7.477795007407636,3.7490234432322334,0.5957729633024289,2.4746912924648186,1.6250945110284007,0.33980278028555055,3.4730674104550223,0.11620557862736325,4.543702339379975,0.5645782072738612,1.4791566364429247,0.38651131925338333,0.5740028681655396,3.5112335507409753,7.950913675930371,1.554221902536952,0.6635073315961915,1.0449433772642696,2.0066932238367823,6.700875872871823,2.023906991926695,5.9130037672385996,0.8145322559493486,0.9074360068051357,0.045999387386629564,1.7668771469910771,2.2342799928581005,6.931813255099691,2.8756990139841605,1.0988358196413155,1.6186967108541197,5.354618812080925,3.827210142230819,1.2590033591496894,2.096139686987626,0.8308859296590372,1.005397827561322,4.196977366350495,0.2680408175822855,1.356241780315865,1.2459840253654546,2.3502882802806155,1.1608570506605247,1.0165434262388222,6.629399258551423,3.878420942491829,4.541739850346826,1.5427178089228164,1.9845991962808536,4.227195123045789,2.2898632424486376,0.7148183179499707,9.49314064684616,5.423787592527987,2.6423593576132767,0.051091803551091886,7.423789137937533,1.4504880420412292,1.3997094307755447,0.4064247888521093,2.9734381529915517,4.194453548921873,6.751330306271955,0.28071912052963377,1.222998734572238,2.1820075763069817,6.247666791784592,3.2310500322566877,3.46327140672841,1.388864118622684,3.35541437259557,0.750678292679658,6.035886145837111,1.7349817848945888,1.0577598802130828,3.5649140905360674,5.635296711399349,1.0345044520487745,0.15031072105528587,2.296983744182306,2.000358263108602,2.466896980772492,3.413448385107568,0.7136718399994066,8.738597643577208,2.561151888715317,0.6268951254838167,0.9838803723169818,2.3779393476687645,2.953554794144078,4.353803524609584,2.0491174488139343,1.6981835000485734,3.249499511222071,0.005985131018302781,1.1092497614150387,3.4212531595425872,6.018135149469142,2.5486707864631697,6.708032578164101,3.263169644972244,0.4134523333537796,0.029178833650304714,1.6396000539304296,1.3975316521911916,0.04934611255620691,0.3750392961828055,2.0447199475764233,4.005915443050572,0.9309659979482754,0.21994730060744416,1.1112262509237736,2.0457475033275667,4.267290344072336,0.1969359423832877,2.0967674503337728,3.8830166084100526,1.03678347271733,1.8889575923236173,0.592624049775428,7.312591405424574,0.03972082786651354,3.60810742284842,1.27532601971442,2.6862572756161462,4.711469559619104,0.8015784420979815,4.665825231431155,1.345458820842846,4.314517730972556,0.13982524719590983,0.5876548339971244,3.3312289113404336,2.9170174653989633,1.440435939392298,1.302649045303513,0.11998788160290097,3.1934924264216784,1.5725935941866087,3.5755053099885057,2.6974942535153907,0.06719419377464675,0.4577942428033843,8.371668886856849,3.9581930579074696,0.8681781724745896,1.323099197222163,2.055646543104382,0.0006367553993964492,7.1514172971555645,5.992348835855509,2.172359466339966,4.935210880321531,5.544470703673497,6.921469235465846,0.04945600417514928,0.8552551265685935,9.053759914819928,4.294395916472999,0.02170579496313252,2.9231618465314106,0.009655394126026007,4.588112953806785,2.5943251374552414,3.853318069971664,0.6966147791106323,1.97640232496392,0.16527891765791125,6.434995627270741,5.901624563538455,7.7102338094647,0.3024942476408574,9.14522809202542,6.965302938855594,0.22730313095710386,5.289097486762202,9.167659514611948,1.5682070205094814,0.6994048782637727,0.6535700588939264,2.606913869864462,1.8648851470073637,0.3534532603072864,0.007329324658189584,0.5989842672573058,7.615008350316167,2.5536031417780407,0.8304394393786367,5.073837388098669,5.388860985606923,0.035965059000622634,1.2374464693755005,0.05544090748595387,0.8901590184489852,2.485489425235162,0.9812306020894646,8.794836632003497,1.2822542276188154,2.315672930257385,3.492262001013243,4.570362675104998,3.4767509430304244,1.1558208598304185,3.861504560455426,0.9254672508498025,5.71076761042254,2.137338269680942,1.151647929002893,0.7494593768897952,3.8864349390416466,1.6914735969115373,0.20816089809335914,0.48419403932039984,3.3775372561551276,0.1885246357302437,5.136554342911502,1.0543462803557837,0.4187450072640413,0.2938707927114814,0.2523155776660202,5.3020100260852026,6.5524868673913375,1.5939859420369604,1.5095679714112986,5.028538688927163,6.1154141161380124,0.6586703852062694,5.375929699570406,4.429680242593988,0.7398860902966706,3.869572472818195,1.723524197551864,1.3264056104941275,4.626284992525026,9.2345950994256,1.6820237812897014,1.8388845257791342,3.0986353599549137,0.4575332446317848,3.625541548217413,2.6566835838324394,5.397856039539091,3.149355793187346,5.357279711476348,5.503889014751817,1.2834298145545446,2.838748501076992,1.725066014842482,0.15793518888520808,5.701636999574563,0.46220566200042157,5.27784445062646,1.1660097384310575,0.02177606951137001,4.1123802985975715,0.7773053374054051,3.310792906879459,2.3616589789297784,4.3663884101229975,4.912263523474223,1.085123045076025,3.6478029970784576,0.41242204474133004,1.3737675552518205,2.3531177470560785,3.8728138570075705,1.9811779396640379,3.613005111566898,2.0934032695359406,2.685886901643986,3.604509334985634,4.7067888221419025,8.11663664887196,0.2909649710041293,1.054095773333151,0.08275077092698169,1.0452575028922935,1.7608746460576308,0.2742927530683683,1.9762943810168938,2.810693909962967,0.6699420674667529,5.43455732160961,0.16540987699092824,0.6293767637567731,1.0856222332046026,6.04766310670055,0.24041389479623554,5.34858309456547,1.3205472043420876,2.7664660372637293,4.3928852984885225,0.9464333731779471,1.1180603518329555,4.989794982823515,3.153025534851917,3.9196584406560007,0.40294498262940426,2.379565728987064,0.9853014544367218,0.7222937273214904,0.4742293880741466,0.8182581071679174,0.16779861500072046,2.7782576139558017,0.6783999742619784,0.19699255841227625,5.0200103562000375,0.7717413508847066,2.5703841347272345,7.148251811117188,0.3309120250072546,0.23942829309167735,4.466047277507233,2.921331398633269,5.857164366775377,1.7991997237408341,5.569792326462814,0.4745087219207407,1.464714289840921,1.8278976427976659,1.6207791547960184,1.1977540168850513,4.756168271244931,4.455086170866238,2.504192907324214,0.13474882804106159,2.571020323259032,3.4513150036514944,0.5926569328338624,3.456462876297728,0.009246464208757743,3.7043091200770206,2.8002021193787465,0.1788475734540791,8.464898217365345,5.36212930394643,3.146770859390169,2.215345579664105,0.12383679402467296,0.44791936709380553,0.018642236205567153,0.7082125639782166,7.311166672676027,0.12075944597826105,4.557928800655173,2.5161419346441205,0.09943186863590392,2.0355042663186254,9.140997784097948,0.047808030980002414,4.9536618809314845,2.752136137819619,4.941931369394165,1.39937830499177,2.0371478878049443,2.4452554382372886,4.817707234896011,0.06397692629458795,5.363033095105122,0.1886850622406211,4.959809570742298,4.2202638945666635,0.1612377413074686,6.259189926719568,0.5602032921579791,2.356632394352789,8.752395630712437,6.805112127112313,0.9639142976862161,4.597442596678002,2.8351585763780003,0.22017622672980508,1.4084916080740442,0.12058189536528818,0.8709804815884077,7.084293755861729,0.6877452189817139,0.4624873212925973,2.6165098476145525,5.244185818031705,0.10898520662749567,1.6356727897439498,1.0300684423390298,4.951933609468448,5.237434147162441,0.11191071244427775,2.9442617587313453,0.6829512504154029,2.553549444119917,1.6683759559556517,3.1946115337963086,1.4274410832290299,3.4956358305953463,5.705321088631303,5.415136631047737,2.916015464356505,2.003252657090753,0.36176257089407216,5.442350776245905,2.469280227951856,5.649149903979468,1.0195939804522771,6.547375424644095,6.754759797958744,3.933051399739429,1.9667744131749059,6.8066800693271885,4.388549788026,6.066446768166372,0.005831593516676836,5.110589283308995,0.3011160356041085,3.9880379797657,6.549548298859641,0.5075637351728082,0.4165167527971978,1.106254629889321,0.42737060848996533,1.30498774975867,0.3955967274363519,0.014307994973254523,3.534456867030025,1.4634282149730125,8.825700347849185,0.019505574758498234,3.339808532473789,0.3067867643930844,1.532843552474283,2.660751715199183,3.3803468075621037,3.0288630877617884,2.0020046272236174,0.7594186265602172,4.875412354313401,0.16046877010701177,4.8689720948519835,2.448968319677375,0.6374817223802616,0.5107071746076972,1.5719663796890497,4.5852711400605735,1.1941306017352344,6.164562729925585,0.4202776164132116,2.6488499686683316,0.9642871596543747,3.7757939803602483,7.934560244201165,2.4363845857936486,0.12814229338423377,2.812080287328766,0.24957522641183583,7.934211480920492,2.082756552395839,3.466059525973093,1.039235622653182,0.539717963732242,7.9251033829609945,4.055399082823412,4.421938724103244,1.0074496665557007,0.39499904077059256,0.6838547443136367,0.27594595162727664,4.358263456706945,4.425094483078659,5.756989048099072,7.76122129654923,8.111391880820939,5.019409979235007,3.469461203117447,3.0592069140883122,0.5163501706566436,3.7554345985751922,1.5925129702568137,4.045439950208385,1.2994557908744238,2.6271538375916066,5.708039836330172,0.5965105210209729,5.156562234604985,2.192537180009076,3.905427249593476,4.148785278979198,1.715387552179438,0.9443162013964681,0.18274646770017844,0.6213821598559548,0.5555908304987476,2.2735280354543654,1.0204102104757897,3.742048189571541,1.8608164845533963,1.3034718519435344,1.4982348091974345,3.4729802355459185,0.726927349423736,1.126340536391396,0.05157814080600431,2.0074665516172647,2.329114073150434,2.064130692493185,2.8294438553528742,2.38719029215976,5.517906618450318,0.6120740651277234,2.721390027325892,0.8668239949032,1.5221238312728786,1.612807936240337,2.405690914853121,8.424666680317479,2.202941099841553,2.6124609847584335,0.46230846168668993,0.9498239804488051,0.44644132639659606,0.7503677437933165,1.2199478596499773,0.5658155726580647,0.5759182176242001,3.26588670738904,0.5317605634311215,5.335520406825051,8.803498978113609,0.0755631593959174,2.7187091266233816,3.5303397899858266,3.836289656313685,0.4264141720854866,0.2793878227844804,0.28489834524667934,1.5621458489177398,8.948859478133748,0.07407372972338777,1.8862383166838805,1.3924339906783665,5.0438815390279075,7.327003060612489,1.874105213766704,3.3940406759531694,0.47576201662974804,0.270304382587903,8.148844869559534,1.0729506388374777,0.9828348307482067,2.77740990580193,9.899931963450285,0.04299585001444539,6.577737651990509,0.7573303483903482,2.45102273877011,4.414171681900669,2.4672550872064907,0.33938457420614654,3.512790314210962,1.7420656013229578,3.7033579965863836,4.167488418153763,0.7547248630709706,3.2964671697634014,0.7520995493962648,0.9622089650634091,0.22425079312857576,1.1511180560018666,4.131796816717325,7.320425120730981,0.5536428790854178,7.834436295465565,5.360263369192538,0.4399747318023266,4.707187646893148,2.003365795016413,0.1833689747521441,9.05478233615199,2.402742217196709,4.8209632073281945,1.2577674576377955,0.10279912717075357,0.8232265711225413,0.27567000403205455,0.983243641369528,0.5878077972519247,2.436775909309212,5.270986575233222,1.174134890147851,0.4961845435789556,1.8587021397872991,0.9883766053458547,0.5891896493904483,8.816924453312447,2.362020724538022,3.025645908051416,0.16009626926821507,4.434831800539904,1.323921152860807,5.579591019365907,3.6145514076975775,0.17285961722704246,5.094902746086216,0.8968845051944347,1.6497018655765938,0.03491442209907092,2.2881513698044413,3.124208326556065,1.9615972140430262,1.4424867782656499,0.29531053544339114,0.5227334802855594,3.8462387060412766,0.0824912090424732,0.9253489798420667,5.441893143507938,0.9584920382691475,1.19276982749615,0.858809346983918,0.14201916478763565,0.7878891931017193,0.3594551158072594,0.012058333052037407,2.0012633690293775,0.5308711438872251,5.5275343890438435,1.1267219315451147,1.5711467587341548,0.08904210676528979,8.021986917108109,0.9783197370921175,0.45305952466099964,2.3120903062631513,4.048720228769838,3.642432625100957,3.0343699049557813,0.851752160457842,0.03450898291464144,0.4512947018190199,0.26246048345361905,7.1764454803082565,0.894455427866383,5.306076713584208,2.6467110990068,3.5536830752292303,1.9656332206830687,4.915941981294945,1.2602760102450379,0.12043932102512378,5.634715677756162,3.73726569762663,3.622592178692978,4.020405689380946,2.2107765488215776,1.382904112001615,0.5094064234129474,1.721274628409394,7.502544757021283,3.2484469557891664,2.037369629159919,2.9694378136918473,2.2296709438424855,1.0984443879574766,0.866935001419864,5.038995895333429,1.4667448117414565,0.1930340685511993,0.029648168971477595,6.977446734262102,3.327512192020315,0.49341313155884703,3.199213570887082,9.656053792209207,2.290988824335143,0.8694193849562983,4.343688804063816,0.07790757954078487,2.095019920395872,0.45567877278269897,0.8643497614674533,1.209589455293214,2.11582425341064,0.3787285288883364,1.0087365436698947,1.6157481888652327,3.4491950450585165,0.2089615557359441,4.838662539761096,6.815885458474497,0.012838710947780996,0.629726036828032,1.1710164717559302,2.6358449382904254,1.5263052964049728,3.8678507970649356,3.399833988006966,3.2038929663199385,7.395110505498053,5.73875811105421,2.3467883277784267,1.79596787789988,1.2185207666749283,1.5654044516622303,7.153621077395677,0.49054341777785027,0.6620095096329754,0.39408400889104245,1.892674030254784,0.9945885217780122,4.190353503883834,0.48307018152670445,0.20946564240038867,2.978110305520346,0.5407055515772639,7.526643336653346,0.37402427228769164,1.0743191118386881,2.178980388009384,2.2763488807897954,0.25275634797422186,2.26521633565181,1.557846861711199,6.700814826838091,0.42337584346647006,3.7561958331155747,3.7116912978235845,2.0616727624157853,3.9632434961984018,3.4344804346981643,0.18569309808871992,0.3130829148100762,4.176345894587396,0.005454581750026222,1.331806165907281,6.102021590547068,5.390399530337078,4.266541432713323,0.5929547452469315,0.09226940199822842,2.1620513575376976,0.020699818721235275,3.037584151340292,3.2608750523470746,4.204894068243952,0.6355351867541481,3.4126197990489153,1.8675518059766398,0.4122112089757799,0.6073628582409514,5.375812330255137,0.14635535564535118,0.17028209103705194,5.095675376071988,2.9453946438066794,0.41498856013480756,3.0337988149664916,0.3437882223058444,2.5752165121536876,2.948434548429363,7.3233216016686455,1.0931057587597977,0.12206822851127574,1.142460106046666,4.357003511610259,5.873719074757503,1.9001317865482834,2.7553683266884867,2.524338618064263,9.111699988851171,2.7491938212141775,1.2423996885763113,0.7509361108331207,0.7177873035296445,0.3728009489148407,8.505233925485726,2.664751692226787,0.23318690839001865,2.7631279378544136,0.09551446666352748,0.49598561952525433,6.515621229123148,0.685478119838292,6.667794865301362,1.6224341419282933,0.7331717330813916,2.169997488042367,0.6328636429569856,8.770677653846555,0.061727167242446424,0.13291964160704062,3.797493335614986,3.3496342765952853,3.6898722952918597,0.003657029343288265,0.14492163226989518,2.3954592576188034,5.161164164352073,2.1303467593909,3.1580852488126823,0.36543107877319425,5.913995643532708,0.5868457577738013,0.029273916728570715,0.9889238216627092,3.3433815807161613,5.68891090206049,0.4903519889953012,3.7842880793822715,3.588192132404693,4.043615406034368,0.2283576373868872,4.4333544240371,6.326127238179573,0.026820256166445233,0.8633100039746837,1.4548078086542269,2.1218371064177646,0.02611454909286781,5.686135316046418,5.536553754471088,5.32821344091775,2.4402987911785843,0.24208224690118452,0.14712459061495053,1.4906652000118132,3.5336630790998775,2.5577677011291655,7.030606341712034,5.1613257639861345,1.7608094648964656,0.0866924922214638,0.13878781472954937,0.94162560952461,8.393473100565478,3.7454433792753754,0.3262961796914361,0.10863396723968033,1.5430371716113132,5.983671262058122,3.6361909244805943,1.0974638468190658,0.2558926045778884,2.8780442813024436,5.193666585079768,6.141366544803077,0.8424999298862881,0.21926807962993067,1.270002440195384,4.17912577477648,1.3864111212384949,0.955467407533896,3.3988459805968656,0.9314472734196464,1.150752551757253,8.002524138564983,3.3454740508201946,1.371871666243563,1.1406621756988398,1.903457133975671,0.6055332408681497,8.20494343181214,0.819081921319424,0.010060239995214992,0.21250621576598405,0.020320452125589084,2.4930760563151395,7.716456078024976,0.6192183635629291,1.2402972419720077,1.1695120356438267,2.1482948033541334,0.20282948899752595,0.33319845554191296,0.06680821037208773,0.21674537191740373,6.672529032761865,0.7926061313910946,8.784331282771344,1.0295283249777167,0.6792732607213736,1.6735120128980085,3.2716121732599923,0.19542055707296946,0.24704892546016133,1.3287848236389674,0.9720009068488178,0.2738810627136834,2.9133978198236843,7.565733493167238,0.03321318456669076,1.1728480321882842,1.6441296172257207,2.5030189863980112,1.1736640900351727,3.5928782495594405,0.03285211416103495,0.047307562908514456,2.577670035597123,0.1724563156009331,1.7251368529824234,2.9970148088032103,2.572443567201132,3.0794150724042026,0.19877293245364935,1.1135392287620265,8.062976704269596,1.7485282857391744,0.4610760436192307,0.03513754804479885,2.6535834349341485,4.664424798824457,2.4915967164629524,1.5937274783453583,4.270961613324201,0.5166857079062712,2.849436766194078,0.3246557665458607,1.6660273347788532,0.18265584132507762,1.8360568949330354,2.758933299705804,2.371238413585928,0.007965393457940895,4.170796580002867,1.6154785366188982,1.1203874524594741,6.927956646608436,1.233914462382561,1.7769297520855112,3.370306722820491,5.8103765436665995,0.9745968854543747,0.12901939105135174,0.3719607372926319,6.7791424769233775,1.4123580442426462,0.5923923677763181,1.5153787213566607,1.5414870658625546,6.654085072362005,0.859183138329322,3.430177775760739,0.08137362493637434,3.5253479642427124,1.647418211108345,3.728703326224462,2.433139576871057,0.02920960426802277,1.6618501386957876,0.03240747373545627,0.16377386160209628,4.266153816746172,2.044507775696635,1.0813475422021386,0.053977958478851784,3.613931886477434,0.4813834400532797,0.8103686200308546,0.7793407630784692,0.19362737974727162,0.9477897390324781,2.039930106334717,7.621833381134845,0.05342502889732259,6.025941298596365,0.02482539063704081,3.3934373479823208,0.0005937318527133861,2.8510643938673486,0.4581518471842694,2.646148806987064,2.5525908232262964,3.551232573265432,3.773551661451295,0.6730567198650856,2.6790471570981262,0.2854007024127314,0.8863815298119344,0.12697844836735506,2.3851891489607304,7.0617335231777085,2.0666443841394653,1.2584607009031146,4.643545225406257,3.175123352071239,2.4298731409018437,0.9133559153319171,0.014064111288754733,0.9929629248855036,0.32641958473911536,5.505178774512581,0.5420628427338503,4.383458566630139,3.5112745588613414,3.295475133847395,4.591141589220092,0.5203896108326616,1.9746388847467937,0.05163811039384836,2.0124994681684463,1.1515932941325122,4.827278795573285,0.9280720122135726,6.3119874189330325,8.15608560068285,2.6287289141227816,1.2432529668176837,1.640857445858348,1.616134635305663,3.4684759242375947,1.9750539440672306,1.6008562763255618,0.33235695341809857,1.7248922534295268,3.3380968254990364,0.944251547718693,1.3721166136981031,2.2132557456287403,0.266644716564274,4.349198093192429,1.8577180023848445,4.453348695361711,2.614604913310089,5.7506948910763,1.0782240602223987,0.053450560198554875,0.47677835400113366,1.4421134330904124,0.3985874679357986,1.4930137065349243,5.182166019596675,7.030516576566395,0.1368040699863542,3.1170502618774023,5.895105411067318,0.11078491807319946,2.203156484966618,0.2519133284203894,2.1716141697578735,0.1181674662252945,7.988036363993487,0.7053269912571283,2.696532285693454,7.596744698678016,2.1642284640586418,3.7928344905717983,5.345277735683126,3.1481147606966644,0.10349463605738185,0.026377863461644724,4.791197862216006,0.31171931261486785,7.228443033247269,1.3382111668575218,0.34351776531329214,2.428834778298901,1.4697178665027835,1.4995361856531764,2.4497248556004436,2.4215631297832365,5.613589958558649,8.028957738439823,5.384255680492453,1.8142377194917882,1.3786064765820214,1.7506332040907253,3.2073091774861098,6.551827305530406,7.059132091880759,3.5711900746198566,0.6634377029456777,1.6680585720340382,0.9375162588969204,0.16294808713882247,2.651874627986892,6.539691864937525,0.3299512493985475,3.8632432742678704,1.4320656651779267,1.7294365481928615,2.2100988568596733,2.9077281988125776,0.1766017892373526,1.9394186851785653,3.191852006460863,0.26428521880825495,0.5269372568181896,0.003841783078319727,0.9280033522418449,0.040222519812913804,3.983901402900365,4.288692858303806,3.7481469315347162,4.022919613267392,0.0012843417981116545,4.557902571909608,0.018773653803565438,3.0807513171874206,5.334328503704533,3.5237680454140623,6.034274244154261,2.1924985313404406,7.586745117783494,5.022003045605183,1.0781114436779475,4.948625749394989,0.5333133059656476,0.21978544053089166,0.06094992121532705,4.302778157343647,1.429793850548407,3.0763994156624506,2.4374089167675086,0.29789471660420985,1.7439345448765255,0.0038005689264597464,1.0448610789764832,0.16383528798303004,5.397893420058352,4.372716075721641,6.338804640665337,0.014311121637710755,5.3546894033065975,2.1817000485143687,0.25412608130606884,0.45239321997280335,0.22048962803581773,6.5673713090228,3.3372541966248406,5.166311322158325,0.402254599700671,0.009179806910833754,1.4827085404459694,6.071395193550682,5.31917079128516,7.504978017830609,7.1583853978974155,0.06889155795032753,2.49313804438043,1.0276076579087148,0.1876187840814707,5.508324111810898,3.081847759400275,2.78996333340391,0.6632159897335876,7.594950016004466,0.02072614333003253,1.020187267576432,5.878306596821286,3.7066509142833723,0.5765102059341412,3.2883660392725247,4.59053971494912,4.36438670913088,0.5579204800539301,3.707795771708902,0.8739528291191974,0.9441299460185846,5.169089814826297,0.62599613483835,0.3631991510054462,0.26326441341101914,7.077096814382419,0.30885080758980177,2.512265220324976,0.747164488236042,1.6725049837649628,0.08484851400262894,8.01378645856878,0.03856324902097974,7.045417040930435,0.3975306894122479,0.020529858136664636,0.13898644130870208,4.244667534840117,0.42059495586072515,2.5532032036745846,1.3976162095478584,6.23002492094497,2.6518242170097057,1.309676830695258,3.3962401185555118,2.8520100416465137,0.3250527535299881,0.6068812751940982,1.0239643200887834,4.805176785830929,5.646691191323409,3.347870425138666,3.3742585249204993,2.1462122801533265,2.0102631142040934,4.385725390128064,1.2879294924879936,0.6663828262445353,0.8215289334026235,2.3778996821377518e-5,0.2962220901962558,1.7572353114340586,0.01718006525815685,6.253745239095263,1.0764022920865912,2.5941464531653917,1.42096435547543,6.783474604414177,1.9816145360158393,1.8939429069813514,4.431589745435769,5.26055105575319,6.878948766080969,0.39082687786241266,0.43402450383844915,2.8753562534955766,5.432859294965909,1.6804713593489002,2.7866649323725508,5.169118735052706,0.05608877203343621,0.6992294279800175,3.5430551511938937,1.657650655056445,1.0522637175920346,2.623882956872488,1.197766512075551,3.0569196883588052,1.5573254181452167,3.6203947822129052,3.361454460580359,2.971345329010619,0.4050811767219047,3.6036041698127477,1.647109138827929,1.381995413200468,0.302883746690195,0.5757565741548021,1.3436002382494099,2.6148926565309916,2.6767825402344556,8.925409021298204,0.010481812007998137,0.8239911103329631,0.03639403343506897,0.5295697499574858,0.7926519063555091,4.595957821767237,0.8334979332338435,0.15227133588313047,5.555806225572104,4.895862413679108,3.734552097637562,6.026430604229276,3.256703985954376,0.22730195863349678,6.530880912763893,0.6458643057508926,1.0521559200840542,3.7476289012469888,0.2762425691399022,0.2835989610602687,4.995508784485379,1.8168124427286294,2.150158852240539,0.08157917550996174,0.09120375502082556,0.7601352594400925,6.247636974296395,4.602184698835927,3.039410114469618,4.933475687889536,5.5013395913518925,0.2156464718939186,5.3922230884945,3.5396215144501397,0.7259764293326327,0.05776594073321739,1.1606600009948944,1.8112530511355587,0.6541827316518223,2.6219346574056948,3.817232290709919,2.686037843291132,1.9780286605310646,2.030718542074318,0.3464152921513848,0.44906531240597225,0.38474933287928526,7.824899396575001,2.1647228156587364,1.3766224820418933,5.2165403698007085,1.9349994619344244,6.985313772181655,3.266532275140875,4.892959416777842,3.000316451978753,0.9778900928783028,3.4485779894101514,0.8705916529930517,4.718210361546182,0.17257369173313464,0.00268282618955773,1.81984148188209,3.8725645401743485,1.2680012907842944,1.480517614693108,2.61261802074098,1.4996022877057733,2.4243946598225987,3.8891969176905583,0.7128352241879234,0.40233587390150527,1.7509511543715206,9.654547856303111,8.376154887904855,1.2248799128329164,3.714927387925255,1.0554644762816654,2.393948109308809,0.04445827821621373,0.62009339209699,0.03139971578032674,1.0994547206598,0.7361381067246946,1.809841930554982,3.632636422750071,2.5338821634048463,0.5947570433629663,0.3311676555601961,0.025900848301375623,4.867889624922474,1.4771376933335887,1.810465454025807,1.8929925423606226,2.6508773098660257,6.115825489513298,0.196010850497216,8.960443200352218,0.21856886042110046,3.8339988555081046,0.3659273008434125,0.9382239649327815,2.0509564198014245,2.074222409596427,2.5476688529618627,2.545476921213891,1.0496378898636358,1.2335174798721553,0.46221789474554065,9.534030949184617,4.031594876458431,5.765639744521417,1.0116046606676328,3.028209814739709,0.8695479747070518,3.389314723050404,8.751295424383843,1.013821912518788,2.9815837171351802,2.323028465405777,0.04344906145283223,3.7254968654872496,1.7175691528132573,8.313940938091498,0.18778761995201543,4.543555375356231,6.134655249296653,0.011638791789451375,2.4455590419229964,3.535297503382357,1.6487545694916879,3.341264893301478,1.9647269156627711,0.015059335386766293,0.6872677452494926,2.7863817674703064,0.4758898959671125,4.716681285061618,1.6850948021736798,0.18605483070189166,5.207157709312529,0.2749480954845769,0.9925820261074882,0.6451518901535493,3.185634894545945,1.3210508132215901,3.2067894789106077,0.5284531657933611,3.9869006239932787,2.0072326611722167,0.32271539411868133,4.059453200878757,1.8612321112053358,5.908142333431641,0.17386686459533518,1.7104361361921265,1.5555834203392507,4.522413186259087,0.5083533237726705,0.6672405599875562,0.06665103006438211,4.315255615627974,0.5090826176446299,0.24107908152027946,3.3783725610318207,0.0588711399966364,1.0407332123390782,2.3467509512392795,2.7764452456232274,5.88119562120796,0.4025707183834313,1.286149071008488,4.4793588116119025,0.8096896566280671,5.236771581563573,1.0241485355103164,0.12493754076179564,6.426023980339373,2.330333412923381,2.7091068162709178,0.03211219704352475,0.30137401745028636,0.08678384665636951,0.5778251361085687,1.4756429492807808,4.7448202946619205,6.414110557561422,1.9153964497903324,0.3495792829018072,1.4402816197980748,0.2866708328754566,1.5297774809818607,1.092458969598109,1.6928449876050955,2.4442720521368653,0.6676337056313812,2.7228218619388613,2.1529814751804803,3.920742840532995,9.046217089686456,4.099418649696176,1.8841618847386608,0.2387164886239126,1.0615238401664406,3.5561523633865892,3.094679129190581,4.6904320886006445,1.0702526090741884,1.9642607518311967,0.8781633188400555,7.317715015200214,1.6624683480117763,0.34219984486240285,2.6618072846699157,2.084336628679166,6.148462257927321,3.581476176646764,1.5193446403100594,8.110268878867934,8.648161794714227,0.9023808134605709,3.1639124868817774,3.461870513738475,0.06924712488154783,0.5936197323494525,0.004227189151562172,3.1698021275187402,9.367908380815436,2.1712893539447062,0.7164122729896198,3.486352452923379,1.2554416884476431,3.02216541455676,1.1007016991331486,2.208539209587073,1.598079424968418,2.175174863270466,5.399444112906583,3.923614289271576,0.5766891239926502,4.695546076815573,0.9402796845853096,4.6113332513956315,4.902745097907927,0.7802728228743872,5.530016526765667,0.6447155859665004,8.716493613540486,4.488561365642681,0.43590483106499844,8.523851371846177,1.0596615394483635,1.3312483650667772,5.417883691998832,0.5509503375858742,0.0595758106794273,1.6028775245549993,1.3919696994986275,0.4832585945507244,2.0303882080310345,6.96137410862395,1.485969480163443,0.3976308841396725,0.33386617332030566,0.5726892701481638,0.7194958751807121,1.5997065582205376,0.3684545849967016,8.810595675689525,8.051071522349524,7.518359769057636,7.465815410945931,2.340180454301418,0.7220419784889605,2.795826059838115,3.832931625616901,0.46553756723752926,3.9764319387324782,1.4036004909441573,0.9591513090917179,0.2037045647167508,5.633673394468133,1.7604085295667544,2.0903650154647515,3.754161429667903,6.760274991248476,2.265430372408588,0.6384021590486251,2.105846498014797,1.8519296831149603,0.8996833067863896,0.7216105511655897,1.4680382101828675,2.843149015902098,0.7764017345638718,0.9444921285010546,0.6415300261252384,0.7895026664109965,1.3399692045857794,3.569651394560637,0.33683298571839715,3.925648778764214,4.860942769265442,6.531594792915977,7.323160695712957,4.169127281834867,2.4238236721178215,2.8432197260538414,1.1716710691520422,1.4127670925974831,0.1681721148139943,0.4454846607902674,7.017061154987388,3.854295679094406,3.3517177329446657,0.16607656864621134,2.1827383716408573,2.279285670388049,0.13800108470707495,0.6933877233978594,5.038582803076425,0.8612270813717382,0.052294228598848136,1.807593672048452,8.69224214221894,1.8400026316723093,2.2835458085018017,1.01967362318441,0.46763310814014236,1.6473623367566468,1.4365855771373939,0.16290941356157695,3.8241560086211734,1.2996831071185677,3.5568627504355197,5.050793929479487,3.716460704712233,7.785222349861186,5.215807622621426,0.049912228217372956,3.455518666241943,4.0891899022925715,3.2022537847820507,6.846850436699276,0.21413246485290083,0.24954973540623726,0.2473669900723543,1.904718069731814,5.237548093883198,4.203757541346075,4.857359952411711,3.6229933504819183,0.06742427150651875,2.8731105529311947,4.609016057609697,0.9119438570374712,2.20581506859077,0.12567995380014496,0.18359625906894728,8.34293423302004,0.6467142299296804,3.835448535204165,0.9056304578948584,4.182213603328055,0.8653046899107721,5.306179078196507,0.7256798081843945,0.8250916662766805,1.322143828599681,3.45298804731965,5.411802073621127,7.999844211213343,5.436084367149306,6.379507408023553,0.06475379534001258,3.1202477960526,4.923723960570753,3.662616941841229,2.592619731763193,1.1689311956350719,0.5430054051396134,2.1658538017321067,2.452926492411436,0.12533144659137996,0.6701910312988237,1.789407952374253,4.549517400402593,0.5129355249488441,3.850793095132545,3.810987393167977,0.04438402169112621,4.692961437856539,8.56010300641975,0.5179704967125662,3.7013783230642403,0.20792724111585947,0.2484861121653994,6.3694095464230465,1.6490328461132933,4.011221301832491,0.30409776315184445,3.7304410831992323,2.3914405151747182,2.3066597780589646,0.12797497989382833,5.307091963999429,7.245366759752844,8.204270753811969,5.826978233301978,3.860454967977673,4.3981580962773315,0.016017409471390298,3.5582956028039803,5.6180554420987265,2.4765899619357263,2.025172645308614,3.9717762454162653,0.061530697082379904,8.707530424557767,4.083686197746653,0.9241321418770116,0.9935475243571741,1.3846609466874424,6.81183655010277,3.3217845722031534,1.4138504239039804,4.522981864583656,2.0903797488595113,0.2852374841492251,2.5184896110017903,0.05883863124600808,2.2885885505045334,7.3734554670184025,0.49131754806262995,6.435828209581512,1.8134833712232705,1.97426361373611,0.4502991478525231,4.728625392703318,1.0222212050972068,3.760250909626108,5.033001530699821,0.8934810629432528,0.22158622690172392,0.2583531510457746,8.677719538158485,1.8905870812046253,5.046816397445095,3.2438261331994456,2.44143540131876,1.4275966262655757,1.3432829056266886,0.0732115957924857,1.7719781179725222,6.069835090108803,0.44711829545029325,0.08092111330933349,6.178562429765083,5.680806364316856,2.8599570709773374,0.7908225040100216,0.21958429480498065,7.773306035898884,0.2714921514611399,4.833325772301245,1.4142434058216748,9.502741234715227,2.2381438962376876,3.6504442929805343,1.546840739554475,0.049087886065724895,1.0207887725478813,4.058187543132566,0.18713599004982662,3.9805597481718316,5.261789811917119,1.7678308863061116,0.5454099476526002,3.4488730565844303,7.180969768628408,3.158849399262418,0.9092391816163996,4.980629564587835,0.13336739218870863,0.6997687607919909,5.806728735277803,1.9016140347329262,0.3066371634512959,2.7090175569264483,5.281119878403633,6.4274288248078335,0.008316172402700772,0.15700902404620543,1.1107472467590433,1.1197777576305796,0.2666881998610293,6.467250143322058,1.1112399588654753,0.33506434424352793,3.56827138572877,2.084463168070968,2.932408219163343,0.01828578524382718,0.003107122451625699,3.2462221214221643,5.841104493841467,3.90712068801375,7.3733194205775305,0.5837011181950551,1.5712384073994299,1.470194286520628,1.6239424138838672,9.419822924895865,4.017216889817849,7.508405104985361,0.33720561731611554,1.2878699762769248,6.004003362307765,0.4910380533595742,6.024295616948109,0.396120103228617,3.544406929169307,8.663191764895126,2.196716205270034,5.813068607484412,1.7753406426519476,0.05870228894240048,0.8369003459995579,0.703417646826785,4.869263886600688,3.561799025196617,2.8800706945016943,0.42052425428662277,2.4108950831181044,1.0505220306641903,0.05629612994932631,6.38812083665103,1.2245113873050624,0.3087320333422845,4.335889754491621,4.294203931820448,0.7076144432650358,1.710183485018506,0.12176694772999586,5.1876270137315466,5.311036566640269,4.122319148625241,3.323913971808314,0.368632646956188,1.2870281266181278,0.24945678386700365,0.6939036386841246,0.16338216917845338,3.6025468262832874,3.2701405312865326,3.534679676409951,3.6348502136531806,3.003304215117943,4.238064956477923,0.8870065936634752,1.332142217677849,7.575001927670801,5.37326283708861,1.8009651216536575,1.6601017629371917,1.7087399542616986,5.122794360844873,0.6435551299386306,0.07360160547814587,6.829857866596697,0.8923862864441077,1.8366682591306969,6.3318141727019395,2.668593526466088,1.1546854162625095,0.45679480459878374,2.3923395459762826,0.9231098424864896,7.135490815999743,0.25927245436406743,2.064589202167694,0.804103408041426,0.9705500108795739,5.38149096513145,3.268733648012123,4.865159144205073,0.3689686166841111,0.4012629164710406,0.9059733845323255,2.002882066725066,1.6717392037553385,0.006865865647185387,0.6170617616010006,3.519916296822494,0.1556538744347371,2.6274818707614536,0.13657097528931583,1.1272985304712169,2.560084181610425,3.900311674274164,0.35859251352923405,9.897825874941885,6.581762214409921,0.20084951269264995,5.136119341322502,1.7859820680329186,1.5625399840330552,1.0365323133075925,4.62966380168708,2.888308470930671,7.8151726344023125,7.963886974757276,3.5435574371276637,4.157355186836869,0.07502247050352118,9.50765140693199,0.06798668389234441,0.044742525106300945,0.12285628246476321,1.5749925600215553,7.89121561186672,2.7694943018270215,0.04814027293601697,1.1365290815232783,0.5103224998201334,0.8557988704052475,0.19910298968937745,4.859389342576193,2.3413065943937124,3.270096580148234,0.5114276164790457,0.7258513679178229,0.3011493932845646,0.5376109323207476,0.3659333069955859,4.577177243266304,2.697137745295205,6.541448551288809,2.3594878855945316,1.6291332123948274,0.1445055145841856,4.410324472319928,3.444362875520845,0.6901520759157549,2.8723429529708495,6.253546911732375,2.2228953668773093,1.5233877111574428,8.217385165590173,2.6459914739714776,1.841861288599837,1.7460319848857617,1.2864000664760384,2.063444142779076,4.529869327657324,7.807343211379051,0.5913157651036762,0.7707618736587505,7.42599428907338,4.836268383402896,0.5437267540837669,0.25047886191672486,6.978530629454347,0.6152524643597008,0.04236611812992663,7.343672681977733,0.3099463933471398,6.148260938715861,1.6312756635606336,0.1676618394293914,3.4821713265883147,4.2196969812052085,0.49642413184475265,0.2605288937234578,0.23593156905233936,0.07920315365669861,6.395181547998059,1.9006959833539785,3.6042690494228804,4.707829998928444,1.1181349713125588,8.351547668333108,7.089591754064418,3.246557216617526,1.2163934851358835,3.25210333899318,0.05021443333898157,0.20264819463690653,0.7105143135505689,1.5479871035816775,2.7045981240913477,6.253919589345426,2.380275171785268,3.826273290564327,1.6186667588298853,4.143564785631963,2.4740042025599607,0.9458648265772442,0.021097208605759477,2.5986469548642503,2.2027123708430802,2.6355333977792554,3.0691104504567726,0.765869728878906,0.09397422159826485,0.21800850844040642,3.121060395720429,1.5322706051570094,3.36252130749455,0.6189424225062492,0.3266306312750862,0.39456681123746873,1.0507363684556843,1.030215562724063,2.0743023095506268,0.755309883960102,0.0007813337631117356,3.2150450726055766,0.5989668502593304,0.7262505147252369,1.266187301556518,2.988833566932108,6.802664078973322,1.2456842639903414,3.5942246583706687,2.1865013853501694,4.555575889795257,5.8361584942692915,2.59203436884114,7.067752212604006,5.894049644200507,0.45236707502398055,2.2321698691984295,4.436061528040833,3.0466019281687338,0.7957478726222762,7.297456303739104,1.5900678858523563,0.23228397344633755,2.755988202172941,4.9226644476509005,4.426684054006797,0.29547586042035334,9.130150563153418,1.7058166148103417,1.6193342856970094,4.659332843003199,2.8334109116013835,3.5889490091113245,4.489505003704588,1.7429631441795603,3.5654174844694744,0.15429279942178087,7.840506074124278,6.510311958595452,0.3576039420256092,5.934989432815918,4.439297768897305,4.351351177269741,2.2925911393662197,2.50276708105625,6.798925973195708,0.8016849954026377,5.508992879410325,2.482000604411123,5.930963470568869,3.4952302068914918,0.05107512835066497,1.7827898217493328,1.921007183602521,1.6257781029184315,1.5368531096819407,1.5102669920173213,5.817719837227685,0.07109883858670685,0.003315393393267474,0.8054014058900885,0.0775630938750389,9.06913610202448,1.7726486519308011,2.926238964375913,2.7251978017411496,1.8696633334432136,2.292745570216475,5.301157757424669,2.3863630589636724,3.3445435831667147,2.6751947154729088,0.42712248167459776,4.028748698903769,0.010767481275291146,0.6291772317412079,2.997061561962603,1.8627716260451352,1.089632924630292,0.135034550997984,3.67542220414326,3.5237701167408026,7.391726538712076,0.9643826770098569,1.6237099658043275,2.0523499724415615,3.025129155336437,3.5756291873132664,0.06510017089532738,4.387137440846602,4.536592211177837,0.9128358174325752,0.4795775277324026,0.4954337279989991,4.100450386503255,0.9217928330880554,0.5527300631168868,4.182947188577508,1.4375983277848738,7.204797818281021,5.72239279093294,3.763483081614492,0.6256404522753698,0.30853254396091634,0.3462647665725831,0.01174479537518125,3.351162526240387,4.200218497014337,5.510751815292668,8.395886882838049,0.34925956277404424,0.04295432855674175,3.9642265059905135,3.274822937314914,1.1721394748579144,2.99419966610036,2.666553167835338,4.869733072708968,0.6226593437847763,3.9726085878648405,7.626237793977523,1.3016864478487014,0.8698750294974227,5.10271603464092,0.1906596639802558,6.460756423061508,0.1448278778992007,1.2706176069016237,4.38721740064742,5.949642907013118,6.349921418226124,0.3632455900566214,1.342386320092949,2.9845294792017194,0.45457400527971004,0.15297144448311073,5.812815581524742,0.09936255021792295,0.9431285212068587,0.24359178456612174,1.9611060735872368,4.529411717372749,4.473943773794787,4.895944243043115,3.7266606314033197,0.7926199501096907,4.094849258426562,2.259513696172899,1.1267675698041586,0.3360146770291941,0.5322670898700537,3.406394578703285,8.109822108072322,0.9807925437696436,1.5743594972041417,1.5394803222162796,1.3780931069794429,1.8289714907405072,4.379340886179612,0.055253831036328194,1.245217187757362,0.666518500531827,8.650601721007487,1.527290180183888,0.7134124396002157,7.208714552546255,6.67058573946164,0.33485336576226565,0.33727873886735527,2.748338757293718,2.2886036975498714,1.8924005770851955,2.20383030904037,1.1811972389857992,0.13696607802889127,2.290602922076335,4.59605366325682,0.0834975712301238,0.6769861328344535,5.803395604535602,0.058281539578400654,2.06681892310778,3.5436106600263066,0.005078723243718608,6.027032091329978,0.052980211632320806,2.0458202422673004,0.8840620245615813,3.0791422895839275,1.5244768681246796,0.22280384948630694,1.459257075066013,0.4000787756936217,2.8326526033059736,4.9200884647485665,3.4876176189464916,1.4696321869275337,1.4952484976179514,1.7540046056661254,2.836428959747076,0.9008031819410529,0.22323376330122402,5.990322420289935,1.0533355019105382,3.4146923899959676,5.4821403765631835,6.888920069810027,8.164689746238981,5.287291766548382,3.288710318165613,1.4948713072617537,1.6989102220368224,7.186512108637668,2.914216580079759,4.606710635616354,1.2960529804056344,2.438459792122015,1.4324196994296257,1.190909352757311,2.778037464870865,1.7738588409996154,0.3382183592529806,5.815225952528333,0.7901551954590005,9.617585725248546,0.027334101941314026,0.2524830573437671,2.0010925900077527,0.19171930430483997,3.9864370226550845,3.513221661562236,6.753174084009338,4.770131572131967,6.5233605586539625,1.2467227220520058,2.7745857979941455,4.184549271010814,0.5697858284761379,0.29283664750536964,0.1843622660763531,0.28775819506599953,9.760897287811698,5.803114756977948,0.6328043731412922,1.2314278654027087,0.10550890016055225,1.5426552872057702,3.7390282504075003,7.060506182639937,0.1862455375047336,0.7165712069089523,4.546271258192318,0.2556605376643981,0.9857919647063285,0.3179429745907878,4.788067060248746,3.193691526420963,2.7094629812600397,2.6376645632026374,4.466565330951131,3.043703908959081,0.42251243659626025,2.5046890489527556,0.8465818749426859,2.7271500655877965,2.422688855589028,2.406020956057972,1.0352190009666589,4.662131309891693,4.205537898715654,0.12964327901614503,6.817967036058896,6.788391012253776,6.40135981197067,1.2934273797097555,3.081487273921483,7.314332254691241,3.2727456454907182,1.7512636246990785,1.046341973122697,1.5661485243092699,0.04297304941599078,0.6324171828736374,1.448687787637553,1.9252309155845833,1.2066240949524742,0.001477400824968944,0.3860819711733434,2.7465906263099082,1.1611454225972633,2.9641920054010082,0.10406184512818961,2.319513095736818,1.0313013926521233,2.7545006538189387,2.6319997742078645,0.039637823895843916,0.43766373381899726,1.1251389222880803,4.972243565704051,0.5956801396316891,1.1850183702538848,0.2996281624642172,4.674381165698028,3.5495172111339954,0.16510372722997158,0.4640727589965694,0.22831916491784532,0.25530863866276565,2.8445543394633006,3.5730637237233367,4.185385490688418,0.02939025882865076,1.054832942513839,0.3857831225769601,7.029441291413548,2.8964935707956556,2.0334416072043453,1.5676247446838998,5.033025096237525,0.7381696748683666,3.595061538989574,3.29270149975137,4.171377680138468,6.848004347957449,1.892875097454926,2.4884159345279873,4.066553464190591,0.03947763341813282,0.2091022300554659,0.5983684473943427,0.10386993657022336,1.2959827539453812,1.0200295064571518,1.671269877797398,0.4052702918165956,0.7776681101773395,0.6562288672510133,3.848000404957455,4.55794036249012,0.6098531889661212,0.5692644015337969,3.9399915074230467,0.05147404292848834,0.6539932379909783,0.22615298847866083,7.531956518499486,0.5873211885761866,1.6177585389784523,0.16792888260607297,6.5473950760174215,4.969157701584951,4.07374611919326,0.6277054239950424,0.523078687386969,2.7242676398704155,1.738676027494534,2.9739976207138703,0.18445148704048364,1.033399943017371,6.5065841659926775,3.6506020194317097,5.139658510499384,0.9832594579534804,3.026923872559772,4.14588894920746,0.9751305294991397,5.625694762516591,1.2001601242042912,7.043614924522458,1.971443142138643,1.3338765506858081,0.20281245736355835,0.09380558077661494,5.236680014865048,0.7016963825491782,1.7887012627943477,0.8188476068593689,7.094209896775343,0.5245284397906342,6.411533794719617,0.3667592656617611,5.412459212775701,2.2746528748306147,0.7330961673862149,3.9387350324213823,2.1993830533066077,4.766647209928205,3.9758343316836324,0.5284035864127548,3.9798203290071914,1.4581414382251552,1.9297624511273073,1.0867287236554946,5.02095400413009,0.43388425630507843,0.7650786997818191,2.2062736644625147,5.038787824274753,0.0991972500025522,3.394123282205504,0.24841815327671135,2.60266197887843,0.1779040000175911,3.4423957140730064,5.517574647422,1.3273020931812596,5.373075765265881,0.08915890299740381,4.234396380757801,6.466618800454066,0.257842155332082,1.90284152051764,4.658287512298244,0.8419898574658442,1.0063537595803282,0.27229075646586987,0.3011503944608105,4.807440548559885,5.703821279299014,0.16776383848943865,2.1813554636936683,0.11855959051739084,0.027515889365973933,0.21166505407563108,1.2307800035007688,2.9610091620410817,0.0036840007866865143,2.323989005207336,3.315133002549303,0.044712722204145905,0.629059672275325,0.4231751651698481,3.4083820274028547,7.396694694940777,4.5933763092872075,2.107362426878586,2.1790937465756377,3.498943824795079,3.1767259714368343,0.28740467722540286,7.884558159223332,5.390693303757558,8.660103490431148,3.3188510842265817,0.15459425177212816,0.5292813864136621,0.11774040388378104,0.3316920620210473,4.94322737992691,1.3119777008937206,7.082360322818225,1.9982780848412611,2.5334410164703183,3.468675970938037,0.9559660231203977,0.7738913699254475,0.73073713224505,2.0039015111402882,1.5982187896392155,0.20984296715737027,2.1234432491615056,2.3299794771970035,2.5338683615842665,0.16607953014473975,3.3522521147663973,2.8623249237958293,2.7789456310477902,5.070684818747491,0.6621020602465868,4.090048080353968,6.518233144579093,0.6929028582131416,1.356893863803542,5.428139830828514,1.5625304658767156,3.925380636652709,1.055757301610818,0.30605019730598926,4.77847060360298,5.470565185295078,0.3425244414309141,0.08333093755361443,1.2119926663751368,2.3443971352618664,2.175078096164179,2.4880305019418962,6.210608217647976,0.8590527335278466,3.1614667301293515,4.835657959523188,0.5595494580017408,3.841868552059455,1.585676844596958,0.1931103601068198,1.8899013683716959,1.7530272845499937,1.463714557916405,1.8143916275532876,2.299124801501762,2.7103728374644795,3.683825935846479,0.45186894571605585,3.7501666838271497,3.3914509287628753,0.4424969866631816,0.30300045268283715,1.0140543779111018,2.1768271743853296,0.788025607948498,0.1784531316289133,3.4659465972134047,7.5219748841011445,0.3687722862243943,5.860823671668989,2.944476566844978,1.667206923122352,0.07186171587074597,2.455502350565087,0.9666193874498532,4.191180195995088,2.0844338368413347,0.8407310233824568,0.6896218347353313,0.8546826209018121,0.6180128924780319,0.7042146551087782,2.234552960023125,6.756970521386759,4.538134034105916,6.639994870103672,0.8222845988489844,1.978154049650927,3.249809856687354,0.3602252668315211,4.282667476562214,5.199999523731659,2.0923811883611947,1.6720997878156783,0.7627824323520684,1.4958660981787588,0.0250946032393351,2.9003651463290865,1.3985254907214681,4.655501675878327,0.6031397219145482,1.6340482753609593,4.671469110549296,3.383672030616659,0.5078815738653635,1.0423418131496938,0.6267612834214056,4.642027774773453,2.2532170697033793,7.837029364832482,1.246978622958728,1.8328581248650408,1.568135264711143,0.9984292633966945,2.578748656144377,4.2937239977462305,0.5554621193119766,0.15070057103417822,4.987937600681516,2.6088486982960606,0.053476657066951816,0.7021227097811185,1.430486371062413,4.64908859598907,0.38885317308429546,7.229665474162623,1.2121192325079164,7.776721091082621,5.654276828448701,0.2597511110112256,0.6536221810193901,6.642268312624527,2.3922033104739313,5.237315815611737,4.494402283953866,0.9012424365797838,0.3459899641823394,2.2840060698931453,0.8064889969260012,1.2927235969036914,0.0013338392644062225,0.9127084892941166,1.1095974413701697,2.823375168438421,0.006232120580719647,0.19300377295913984,2.4602074842307804,0.06352329153075509,0.8467019942351612,1.5591366003722755,1.9161989119743055,2.443614321855563,1.3529058879843832,0.13102703712946973,1.835076171299158,0.5942483626004742,0.5752747969758796,2.8104684802487254,2.190831563530061,4.5828037171475415,1.211512721593433,0.6793872259439997,2.7164027571213474,2.299533835560864,0.15392446433921325,0.057255129043770836,2.167842319427347,4.3329003679130675,0.2157267996093566,0.47379002134999837,0.40851422967434825,1.4617713736635203,6.398176636061741,9.400897329765883,0.29301234193896164,1.7993248643190434,1.788150255582182,7.500538653337982,7.283017061485928,1.1102986280484028,3.6634135358877806,5.958732242647805,0.3444578661008908,3.036804993813899,1.2293791681659059,0.5421164926311697,3.2344412210731637,6.7521019283776695,7.823996960082713,1.06864537265308,3.3027558878893206,3.7823698632938516,3.8824934366797983,3.3780261515841694,0.7681751720987204,0.6184325895355585,3.7158383310735807,0.8126415756905363,0.38434414519911364,1.0722533389382765,6.472705774591617,1.21589846016371,4.300753876039018,0.9928629607524817,1.8188007910706858,3.4596140715121404,6.602651249419814,1.9110267579793172,4.604306603761152,5.98192047995644,3.0240539195109255,2.5771899848693103,0.7454917259520268,3.1786623222575896,0.16526243823644826,4.6368926246180475,0.010653218773843731,2.4635992431674687,3.965964208098743,1.6311142563426326,3.134527214757945,6.278534240129723,0.29454017407841704,4.587814163537104,0.10345346085587614,3.8189709714604394,0.8763972943342822,2.478370660713991,2.671674029269819,0.4994049418748736,0.4789474401450624,3.5650441849222716,0.9455137717396198,3.458562658906338,0.3789457583478473,2.059622805905952,1.0387745082457096,0.10702665603460915,4.073738800141188,2.699188697948305,2.29345672185075,0.45815687098123226,3.980743297654744,2.367615995820655,6.949170611032599,0.4557145367661022,2.86647424621637,0.49320442429204525,1.895766533030912,1.1640543853894803,4.501674214785388,0.3900026719069216,0.42863585007849636,2.347765135124,4.118240579902006,3.8506668638624593,3.901523295794041,2.728417308348586,4.341801544929044,3.7454124298492246,3.768579050180165,4.467783590564295,2.4609453329550117,5.695438668621897,2.8115789590188456,1.9940776505818798,4.327807483514704,8.650304585598349,0.4369782198558596,1.104390827102618,7.146770526689856,1.0737187772795025,3.217691923187984,1.2218362059387475,1.0946729251380454,6.38443165239309,0.5595018891274997,1.6468899670687511,3.2768727292214184,0.7154416587826056,4.381714997620354,2.1321953761994257,0.17457712338780884,2.284583844808786,3.19934837441315,1.6137494891420836,1.521526863375204,1.0554336871191023,0.2012885569775804,0.2629170590775871,1.013008565849037,0.23203976183571662,4.603762326859924,2.7961134162492556,1.3834025248601787,0.061287596649197695,4.968182236570023,0.2433470805009006,0.1261600204737361,0.10412374513183176,1.583979531241333,6.55233577566392,3.725461091260346,3.6045457826822203,2.950786244224357,3.0525547593087055,0.48104880772825087,4.472056178228893,8.104343413068772,4.1627680043776145,0.20516648526932202,0.8416473406671323,6.029013724085395,1.647296219080201,0.17893423814726273,1.1703562734619144,2.7196688969449525,2.2345054312596027,4.116139075872228,4.26254895798181,2.224271797782249,4.586871028433352,0.11272438512393612,3.102564206815808,6.454485724318401,0.9666893515042538,2.280674375161321,3.8288937360187036,0.7600846157916727,4.212734463206313,0.7846219899748981,0.08803454467375627,4.9728534722543625,0.5203482541685158,3.746547989237836,7.36530949369174,2.2517456762981567,2.517357664459799,3.054330149227096,4.570435682582655,6.952911003038775,2.193330456114836,7.05354152961732,0.9063857096162677,4.07312946689348,1.7062574553343577,0.43619381915267863,1.734854752356112,1.2097759279376525,0.1160172511369888,0.17463963279285188,4.860115241614198,0.4147685200466822,2.304776568140568,5.8486245158736665,7.789397083119752,0.1364147432836782,0.598569603384715,4.441729641454362,2.4120223351914376,0.4814157107113175,8.557192670930064,4.7162337254021445,6.639635145391265,2.032469008829236,4.483965792078385,1.21936627415915,6.901674571603351,2.4822784864805847,3.9104140510146834,1.029370002679637,1.380381406824422,4.1579596578013,3.790794111823508,2.336215652756607,1.6612082349001316,2.647218421459975,1.7365579401024682,5.9321679623430335,1.2269199748451998,6.076305781324834,0.07050516142483954,4.088053945288863,3.1052495966324702,0.36625249479106436,4.081089712709235,9.25212007390327,0.2584329057365693,0.16580616565835893,2.197954632761059,1.463704331849505,4.156184278763206,3.2014106735223535,4.989306589778469,5.943044411782987,0.02220080812204528,2.3919360377362153,0.23582548340636822,0.5805264062115043,3.265250816220306,3.515528875469947,2.785677307020745,4.801886955862194,1.3196849739814347,6.891447365603995,0.06491013052997197,6.899731813886783,0.11543697797397101,4.236753622197735,0.7702178899768475,4.834296057676406,1.3578424760231211,0.5589975063702841,0.6503684697331373,6.339308918610705,0.6064771576138528,2.1600393434651672,0.9407410445981377,0.15541392393898779,0.4726767471196185,0.5900897189644492,0.0006954047244411843,0.6800866500573335,4.98918242081163,0.002844377262836595,0.3500247724441028,2.2125494174786047,1.525722640871841,3.0318150624737825,6.344815014060229,0.9343912625409629,1.1101876282215564,2.278610088015479,0.952700966386236,0.8811153316911682,3.055972277258803,5.778862823853647,0.9263492129479114,0.19592586725235606,0.5497445960487122,3.4457778524292237,2.9706325251581873,2.6582270546781714,7.229235345446824,5.747807895444415,3.817106052727226,1.9180934563187293,1.662405532924116,1.4562159594015531,3.071365483974345,1.4145109890986536,0.5205485890754589,2.790757048197584,2.581080328986264,0.5446350280518226,3.9916253116658105,0.9658159318494661,3.739293346107843,6.084847701575175,3.1093217826429402,0.28912471764124614,7.73278279154394,1.5782187875283213,6.701945710292264,3.3298174195708796,1.2711506654450382,3.388550141514263,2.674354888455884,5.216632778306359,1.9650129719117935,1.4433299254663439,1.7938022722030702,5.4613488373852945,2.3612352686264586,0.858661314622513,4.308240031218482,0.003017037150276014,5.436645375666377,0.6581482996014414,1.382915198617125,7.727021090992309,6.057522911331667,0.040615595745159716,2.1823064235604095,3.018517408886275,6.311638861903225,2.53449888672381,2.131769585763318,4.705734047794181,0.1085726266869127,1.476481332162149,0.08230914348568774,0.019977114999797152,4.207050769035649,4.182385565532883,2.1936771247091116,0.9282013887515674,0.023287193344920354,2.0950922062738124,7.264847715076172,1.0391275210774449,0.057069912049684035,9.552643306074408,3.3571503230574997,1.4992272912210147,0.9113464543179539,7.008754960378173,4.109844237768317,0.6058213231103142,3.301746930694387,6.256608387920406,0.3534911388019646,2.1005399707258015,0.497643773060954,0.9345360934717846,2.0783006668327895,0.9738183185447173,0.48801317748648154,7.179517380740688,0.5073001126969814,1.3972083232028085,2.7604065307961747,3.3810858076165715,0.7060186682726339,5.572219549092081,1.8124917329766435,1.7453566552969368,2.8033367541233565,1.5956840538985002,8.428514843327271,2.7996039462674034,2.4914504225999083,4.87450335627206,3.033354553779418,2.0957143373492695,2.9263113807583068,0.7788844529069934,4.112015107494067,0.9503802804872379,0.09659575986757041,5.502429436323885,1.355038527964914,5.910652773451016,2.627692271065637,0.8443498059208139,2.752862901004127,5.863606345671187,3.7830126243045763,1.1172139955386626,2.225980628198414,1.08467114973174,4.138935827076777,4.003432457755309,0.6195946174606703,2.3667965510218067,1.0972826551413135,2.1586710019706743,1.4527119948587064,2.535893376923024,0.01572706963296433,4.495917724271848,2.3741647017758414,1.0375478336446204,0.5261995327108464,3.475564723788624,0.8277528043734819,4.387073576949188,2.5619965537956304,0.14014429461609978,0.6715969746953832,1.7803812425112717,7.197173104251149,0.1541535942688057,3.9047096644629704,6.281431300702801,3.4661289804479147,0.5342660017543808,2.7879458878893653,1.486010709022552,0.8085724747364527,2.42121610188951,6.441294458740288,4.159555878472645,4.720031235626976,0.21709868854358483,4.4739263868270465,3.9236946810101365,0.1834040152687777,0.5672790426038841,6.131459985819612,6.874671912153207,4.846444878425563,1.2187078127695337,2.7427820062698345,4.016455679182211,3.1539567311572494,1.4175847867342686,1.7727807332950336,0.11731970612557574,2.0258590556797387,4.170657784548603,0.5113858823874167,4.669301713098567,2.5372476091168137,2.307108100806735,0.9241400674080715,1.1703788557411352,0.32145626623880474,4.614877876683438,5.774300421485224,1.5030616009039575,4.667765800578255,0.8274169995536858,1.9678577211061423,2.011374013370485,3.6444285239379575,3.8887943951362107,6.263145372096696,1.7865892474445095,0.5000802136917049,1.8475887328004745,1.4825112574895112,0.14657763373699595,0.9621247338325674,2.2485176562246307,1.6842659689438868,3.5477052890874123,2.5454141572540543,0.07971563535879422,2.3653039491252406,2.10290557211861,1.8548793758704467,1.0130022762184625,6.5474118499185145,8.329899690371198,2.3964276233805366,4.72684520424732,7.654825865690164,1.1380374596563971,0.4140217197067848,9.267102599051292,1.5564196265397383,2.2574053229076014,1.186453384160159,3.182819633023257,0.015204849492612027,6.630515422217396,1.5248550836776484,3.7891296700903645,8.76454692413767,1.5307559567030884,2.1830348375227064,1.6844627103539471,0.421265056533791,0.1035543886505903,0.9494969159950806,0.4393834134460919,5.015171833304649,1.3564417358129504,1.1374491978172543,7.785242762695507,2.76779422404711,4.175190770391296,3.0335948343079053,0.7639621359288036,0.11297604159376684,4.37956067956694,0.1872311136512783,5.399619478301668,0.43503013005395275,3.5520236986321603,3.0693996776297556,0.14936971418311162,1.5305489524114502,2.792227093622488,0.05462407915708045,0.9839499994071716,4.913268370561118,3.637006162868743,0.1894365375239495,1.6944567425226795,2.4892319791415716,2.6213767337601084,9.158415178868408,2.368369125631901,5.002767940999059,1.5655761793551337,4.022228171968697,0.6231602942889791,1.1545912752796044,0.5160238302602931,7.255341883169341,1.504529526969673,1.978553508101431,0.6170093018291407,2.147295619408922,0.9414045081643811,1.032843115009085,0.6478059551759898,3.8358286912723676,0.9493331049908225,2.125386478195914,1.3191692725140864,0.7638868444575007,0.9901684329933929,5.321250375503885,0.0007954428228940102,0.9714731772410374,0.8527353200529895,0.286643079246069,5.538070775480056,8.657785238705932,1.73141820554142,0.33762327708554984,4.183832271533768,3.0456085663305554,2.4924688437467406,1.0563543648993807,5.686580603886577,6.377991937131357,2.2394177685979972,1.12394093384808,3.426410607577509,0.9759567552810253,0.821169227300802,3.178568908716265,1.7474776466790045,1.698977582743142,1.4258719278366638,0.9029471722277691,4.096459756118904,1.925207725755607,0.7379872179439257,3.8759064210907255,1.2185857754764093,0.5820415041290836,2.004917622343198,6.219482412195543,0.04180086908114333,0.9184719820873939,3.7547674336412236,0.6615713946524604,5.347503765571686,0.6714284380847984,3.7853916322186123,1.8141593535254117,6.55419679635736,0.9472750790920124,0.22256363490363817,0.5103139614655152,0.5456186879511868,0.3057734331588644,4.2640090877399786,0.8667020676741857,0.7948491003250462,0.8007219865635307,0.8876427331965024,1.3589695715315564,0.11898175636288144,3.6503024482229094,3.020178342289734,1.2804952937114886,0.6027447123139806,0.9016648327737675,0.03672921847069954,0.8797040714618651,0.11222474897948587,3.7836531043844603,2.653928874090152,0.7627370605061969,0.49009198443730284,2.781567391677183,0.0009268272042879389,0.3140228120090054,1.9648059905725637,1.303103894938241,1.9990194016977654,0.5506863453426911,0.5994435295999079,4.041037712155202,0.10466190992390745,4.265890982337266,0.2772930223031711,3.261671600298456,6.836571816431652,3.3332837244001254,1.015076901138107,3.9689559884431116,0.9426981885094889,0.036557526713977495,1.6523933941741333,1.8446245222052298,6.59278729010474,0.35670534060789194,0.018716868921486274,0.7889360625777471,3.272906134456468,4.175909541283712,6.617080942437704,0.6169241128682117,4.382779455596371,5.58128106916058,0.6861026625889828,1.5048862305069015,4.932595074810223,0.781309378685644,3.2558983767755825,6.0712172610944855,4.7956297456113965,3.703032277822331,0.32056525370596667,0.23757051600495283,3.9850311669540517,4.181510435996971,7.2466270632201315,3.2767631912100796,1.6639156855675405,0.6417860819640915,3.2962418334322123,2.075852837695159,2.5911577331079507,3.3221378267103763,3.3814428163009325,6.179024387909152,0.5469304086822682,4.73553521085512,0.3084574005845795,0.2795508792125747,2.527665124673245,0.19405278453247599,5.8530519537908665,2.4679703976122696,3.1739250405847113,5.306614277203501,0.2832080272763373,1.3243163375877316,4.870947250334435,0.6680687556264626,2.928922790395827,4.829557820522794,1.6132994143461064,1.1731265532400519,1.8236205547380635,3.391407194791184,7.369682793756734,3.8145345841815623,0.4989027282791074,8.982549237167827,6.076678044246952,0.5444236558367237,6.027259198315239,7.815154995104759,3.534640163811776,2.089015611541411,2.9892595516361524,0.16911159563000666,4.327772638271583,0.665952631217563,1.3442204176381622,3.4972477077765944,0.4835785603512681,0.6200735548997085,1.5088181602171709,1.3128828649024769,0.0035282092229298456,2.5282130516716617,0.32343382165515777,0.13870992074981814,1.8955233678836407,0.4685523151153397,1.6004295892824336,0.15440116452625885,0.4953205429679066,0.1297198621511697,3.2336741575031436,0.7725629444980946,3.788057513615957,1.0176083120331523,4.018381225897777,1.1240906252525047,1.0981636981568368,1.355452624648425,2.2050947498750153,1.2746873786619641,2.3571957600354274,0.20613831598034604,0.3369915064358302,1.5646149345744922,0.997586104673843,0.7245804625353927,3.1906555678935913,2.8275852096784932,2.4355236898889387,0.5750156438683467,2.9539262920406504,0.3504885516349354,0.04161513045759779,0.23876271676067162,0.9007741117334025,1.916578807997059,4.3991509814260965,4.329804198707737,1.0877165683274868,0.736345906987844,0.3444630176929988,5.802442859841642,3.78285112348925,0.6899830479430298,1.4690803119878257,5.3396424015415285,0.6600992783141333,0.013909474650239062,3.728070278844502,2.7917497024661557,1.9402825176330492,2.728147796410232,9.692732616420905,3.9440071351555375,1.0027377019655415,3.7484956179476665,1.4856356064907459,5.082749671345841,1.3215414738705586,1.1170166485864783,0.26823195417070034,1.0964359443397402,2.149027205794832,2.1081303009534507,1.6718981307698542,0.30894299640065626,1.6177317465240808,0.08968845982684148,1.932546376715628,4.947956227535409,0.8361179751559447,2.0574841772708794,0.3620704136515558,2.002878329852308,4.851507923231281,1.1399790946492239,4.027487640773238,5.18388763439083,2.712079662607266,0.009076802626150737,3.4693007560191713,0.3835550147884277,5.560994385883987,6.2695232447879885,4.3352186887223,2.1890409717933803,2.727915404574404,2.218922196750235,1.8573193381096864,0.7634739649814577,6.025701447323948,0.0705952132072789,3.3884769021599617,2.390452597860288,5.194962134662131,0.3614021479433891,0.6308242310552714,1.0639481339796228,3.4580385938839076,0.1897606653957098,0.20709311456069734,2.5540858369748527,4.443478982850175,0.05028220485963075,5.590602239002763,1.8796421642319068,5.596043877655095,3.1689829658131288,1.0053900135140132,2.6323461999180786,3.9462682157993356,0.764277374898666,0.25841680264559774,0.03535725246841648,0.21840110909386556,0.29664901731461346,1.0329020565170315,5.814963733055663,3.9507241774951147,3.822132192884169,0.041273901932236345,0.5393493930435405,1.465842004767448,5.987533314686453,0.8745024712298468,2.1448186835335967,0.4348134493083844,2.934607872360343,1.1396443856616267,0.25751388134108755,1.4836835711091787,8.707618139912814,3.9459244341142607,2.8716003842337505,0.24227425782642076,1.3235302567033234,1.7152388791072948,4.182995436250914,2.8725504512586344,1.41987706449547,1.232049633304352,1.704357281692971,2.7009521173983693,2.951261831632902,5.574850011799569,2.585298899267187,4.707691393207881,2.8949194700854903,4.81269151595734,0.6643497363677253,0.6685313429579693,0.4583901108711168,1.8580676731187395,2.62784752639584,0.6076761282718657,0.4896967726482129,0.42803565742888594,2.6926041600638655,3.1098169216695215,4.578725441011528,1.8194803966411826,2.02722163745608,3.921168025173884,0.48187151175109477,2.801372929268183,0.4994523851844468,1.7167816293671763,4.115573889008332,0.0847457341386737,0.6038658840780284,0.703715734568501,5.082485811006073,2.7393861735754257,0.3887937302888542,6.976060854773526,5.843853598801012,1.1114449115710752,0.7202431086579528,0.6076749402970307,2.260174846274804,4.172779763032857,6.40469791676453,2.4032991244388118,1.0669102834465427,1.9644146895687564,0.8611443290107799,0.7352285709389035,1.0500274112309516,0.13800550210157247,5.027663332239051,0.39473432760297555,3.889796120786146,0.36322931447649864,1.9986458907824494,3.2708766304821753,0.27264601323457693,0.04476113302003348,3.919484301946273,2.0382813875420993,2.1514163051414377,0.31859861699842984,1.6605810700338965,3.659957721848663,0.10921049354987811,1.450260727134273,1.029802152050606,1.190322805867817,2.2054562810412603,0.19800301455839264,0.000610231605116418,1.9854448111187866,6.003781554284622,5.891303561190112,3.5893308094938305,0.013951174669645905,1.4014415830959877,2.3211435534888825,1.167284099827893,2.4840672953360254,0.005157320715095448,2.5070215570921084,3.123708906876246,3.4500614275306942,5.100047894991216,3.3644191955210188,2.270533946243088,5.194577999840099,0.23558725329127217,0.2670490216359589,2.31865885853113,0.6035279295941436,2.745258084644064,3.372759232687713,1.360706178501104,5.253211609723671,1.1841599329238683,4.272832084043378,0.5527183419774957,9.021048003023367,0.22366167039160056,1.0294121317580534,0.4672844580655262,0.17450380741124505,0.3508449909454683,2.6878273705547127,0.2285666071118464,4.76677871511095,0.7916374827448189,4.175102163622734,2.6052391685142506,0.8282457516767678,7.362707699486574,2.860667312005022,2.532082060490051,0.06670948456168735,0.7270797589123408,1.983070517738211,3.406573181031675,1.1647732511533349,0.5154071908898068,1.3915025752554815,4.82919618053174,0.03933822852547619,6.162433239746305,6.620824829069328,0.5347019854327415,0.7837342410884958,0.8345264495703146,5.517828134523391,0.5421318753155773,0.508097694545337,0.19391395307312553,2.582625002395538,6.307969830485243,1.4457678040001483,2.416807356627217,3.456483417009167,0.7800503239139909,4.6596711762834815,0.23815172361222992,8.540495598823567,4.732071758231598,4.257899842137736,1.3894630863084156,1.452122675198651,0.6976713691119993,0.33565999772983,3.970681015048573,4.1312868057921115,4.577944488029303,6.900443213987087,7.964319329185624,1.589083950740438,0.29652650622993315,0.06978670503537598,6.252642285370903,1.1240295087281282,1.5615856260758303,0.7573672229241737,2.2736716469581433,0.9502141138938063,2.132856934549993,0.3383671789223224,0.4127436366548807,0.9664383471402065,2.26178169386548,0.9267758770053387,0.5103473995316665,3.9885097147312294,4.558901915564739,1.3120109806444278,0.9647116245933327,2.8286005812438084,5.557783382806839,1.9209948783078077,3.44519316984627,0.788033172397705,4.706573805101388,4.507177294364229,1.729031398010683,3.3140030771811837,0.6826730261352267,4.156338391951614,6.314885084306621,0.4468892527123103,5.390951947235553,3.2158318801877996,1.3123978589877687,0.19891320859361872,6.181458374666983,4.037944731609755,0.17271254803824831,0.10296351590651232,0.9336340590149144,0.2296755841475484,1.444183664853739,1.0367262717704948,2.3921999413702366,0.19694162701658868,3.2372834430260378,0.08638314288974414,1.0990363970168575,1.9124822670882224,1.2531502578798381,1.9715830251371358,3.9877900500843584,2.2745511723135827,2.7712083408966404,0.44724237819423074,2.2635181953457817,2.0648081301530317,0.6767194550034517,0.2038921700410654,2.157049766763251,0.3240172710021465,2.326663384502611,1.9318561820901543,5.0488159287411065,3.106238761850485,6.7506103816631935,5.499333603537664,5.088930150368646,1.7873419046968633,0.34901388521429766,4.396982261045778,0.025756607891104455,3.0674128213876646,0.20757634953208237,7.092019307742849,1.605049373245567,1.6914061814223231,1.0698481221564928,2.3018020616007657,0.9525708257492518,0.7168773061978602,3.5876188347986258,0.05894767893724229,1.2864464670592426,0.16335733361381255,6.128007521872377,5.047901794176461,2.6354822636273205,4.854748104997292,3.3411922384196266,0.8854183764616654,3.2305233065834713,2.2548351568305707,3.73150581181451,0.05760123664351369,4.510555765557845,7.128248876461065,0.2049775735669075,6.309616017218045,0.2597289770543796,2.9965709562358933,2.205560280077127,0.6289843789032474,6.84704550131929,1.1495998960223375,3.2723154423436016,0.3243344583381176,1.7982689572129669,0.975963449753424,3.8363735689456426,6.956143505206615,1.8730564359975386,1.5317669264616143,2.750286148735361,1.1423917509305692,2.5705780753748595,3.705261430571195,5.596256604300507,4.047191085294898,4.8759897963740855,0.31487259428381265,9.434049839348638,4.855397406160953,1.6296754815975447,0.30973172915115654,1.6564787887560808,0.45364256332774655,2.0880938716748636,2.4587610092869934,1.8523998023368513,4.847443047115431,8.280023714462406,0.13466109212837907,1.9179373796402501,2.8767356505777117,6.9620798002809146,3.02565690478213,0.371250366773036,0.23889161510935342,2.756827164970673,0.40786333030912414,0.7914073722363852,0.4279544493281353,1.5230334916647,0.2896889131662663,5.71928289618257,5.032826391499633,1.623456459210682,0.09402138124431159,3.8972716069608655,2.9554811562943293,0.24821446453903717,0.38035185132843097,0.624122636559296,3.172150232393366,0.03477571548837943,4.484650033156839,1.3874750251325896,6.641219595870851,0.24501255777257214,0.7753437234691063,0.13493334146893243,1.1334066097338322,0.6015247591424666,1.6990032462900544,8.25076151644879,4.227267664407414,1.653399779329522,0.8663521487881294,2.778559666752207,0.4266374238393382,0.5738464987852581,8.09368974343758,0.03132564380057623,0.00022411341675887542,0.9584119537880476,1.1478673961009922,0.005449431573623098,2.860005091957465,2.123325937044,2.9029536418101998,5.030015503486105,3.292583681360984,0.38579541704173437,0.06557773798544986,5.418021570296409,7.3001502179041715,3.863143093576852,6.710551936442272,6.0425115063019845,2.3249343682823347,5.302787818114624,2.619906949496591,2.7553880364969263,6.595136665202682,0.17199494752789235,7.644077580024939,8.431126102217505,4.908533635010599,0.8647025266790251,2.9885995653113104,1.3958569866341488,3.116867759290856,3.228583903314825,1.934249109039297,0.0027633965876412425,1.318807670130326,1.0051259307699798,4.947737087105192,0.14688705981308026,1.6757642480136354,1.9293095817310686,1.0807528156300865,0.9553626307280263,1.9798168052852345,1.3694990929478905,6.671498407324565,0.44194271956254383,0.8321771378870118,3.202063658732712,2.6440552102785944,0.63881991039365,0.003164444293097368,2.059360046554879,5.036883441334414,3.2229964330820735,5.422410717205773,1.216835742348918,3.064503436014273,0.5306919241056052,1.2875193829338727,5.413099329798747,1.431934495544418,0.5730362351417728,1.6166684242067122,0.2488576855677178,3.1199361703498028,0.28502932470559017,2.3476111012912932,3.0682165062752436,2.025268165325878,1.5721444934932105,0.5541686949077445,4.655166617742601,4.0079103444787965,1.4232811461827026,0.25604665847861163,1.1741184402306084,0.4320476533878521,0.7968444928270104,1.0306495743959285,0.06001799747015468,4.096125522389507,3.7652175866488005,1.2751514297356623,2.8607994163619823,2.3572930483178016,0.09759305427286047,6.658408603863783,4.5196335415614595,0.6412728268192516,1.9034695622190014,0.9628754765643932,1.1953447884219592,1.4480850026527428,4.611652673181087,2.8345638055237643,3.4093282872614736,2.795733464018924,1.0884766802644839,6.473009546136117,0.9137918256100566,0.6239706339161835,0.7911830944891598,0.9488813818763764,0.13525850897808844,7.318910953877797,4.680041875447984,3.5833959646388482,1.5397079492435228,0.5677865535819575,8.065154127324117,1.2534588269949039,0.03227074615087222,1.2500048785235185,8.027626619267219,5.590727078801876,4.590800408631289,0.5113380311700184,4.3171207281785335,5.851679382878494,2.085601533367737,4.410164098977924,2.192478520370628,2.4743342425137573,4.939777830753295,2.103049657526173,2.582372831973892,0.315388097338678,0.8361771501200155,0.27463978894611873,4.202198079256391,0.8663179264787964,0.38221907804538624,3.2981010233225376,1.0256138589483947,6.771882114392408,0.7289167234973508,0.6286184557615968,4.862279186300725,0.32858395978485255,2.9986253790608117,0.3803485749288775,2.4453585821111385,0.5406031189758806,1.1454314621327146,0.48303928960805553,0.39579742936243867,3.9575353816828347,1.958316736586979,1.178990850882129,3.0902067723001148,0.5560006057089799,3.598309063095826,4.311603585766038,1.5149900094106563,2.1697952749528167,6.381069239216351,5.011103798089232,2.51978995707028,3.839936736042601,2.8538399355313837,1.749187543957512,1.7640359797247802,1.8474654409376168,0.7453113803781011,2.00797278502578,3.162887375775777,0.03282992531821316,2.702389817338595,5.65290436913993,5.038156984076371,7.837365697673635,3.305482785703056,0.44347551739824276,3.667615274097436,4.156544199548202,6.085451690383081,1.4135686129233456,0.17412799567606796,0.7915030177082514,1.4213958089218717,0.9093205787388285,1.3921839214856266,1.6645882408947212,0.5638073174139411,0.268331014374402,1.7572573257286637,1.463119927281591,0.325007703613704,1.0240214023368104,0.3434122585045376,0.4886661876006757,1.277963390537464,0.9271646141165633,0.8563829936045364,1.4996098549019763,0.033369419779832654,2.4017452936529935,1.1279245977199803,1.051184326272935,3.520305351374553,0.5939140662907061,1.7344662913406426,1.458516801104997,5.140062872244797,0.8394549859338172,0.8628140807654949,6.19979076228616,3.5145431371946376,0.6292091806950975,2.178678847447813,0.14748600399981004,0.8017900339493735,2.4094336716144724,1.684057844889316,0.9049039854577998,0.4058790472647382,3.628484690968226,1.0517537076559842,0.9993790301920238,2.6897765834753073,2.4574684609631694,7.388711417377095,0.9634415159745968,0.5767456633946839,0.30284436330209985,6.343546863139835,2.151780659606729,0.1243594285274554,2.4789857202659036,7.71433906409686,1.5516817275686154,3.2853911538100533,0.04522487091088334,1.662549719107325,2.587380196846871,4.796670777347954,0.4515919680411553,2.687816387025247,0.3392344014212192,8.087867118579013,4.366355434799004,0.26914414380670326,0.856689452500957,4.949142925957304,7.412165582959446,4.608440683029814,1.596685374135458,0.3289491011211325,2.544991332139574,1.4033430619054243,7.780547560406568,3.631521679123839,4.117651794684823,2.37082997758187,2.828536764591523,0.18785885740014407,0.02890201150093219,1.7842576284416403,0.3884353155639815,6.523942207186877,0.6432430513053307,0.621111345524155,3.043935507774793,3.049115880115661,0.2143100192734524,1.3370293484101197,7.746294853479249,0.5370060415676743,0.7596823094708416,0.42904394497276144,7.731639348679721,3.980070854832583,5.457378287971398,2.181659940111082,0.02162465474866848,0.17075285943268703,3.148429036878988,3.0948930756863824,0.1807798090768129,0.015269162823659421,1.6875493813174014,1.7610155537382353,2.501708151381971,5.29017055912054,0.081982531853378,3.0039560777007512,0.34361002192946444,1.4068410879412454,4.145297885140133,0.0032250980779715555,0.6603280830327822,9.392344066596308,0.8194669403844985,4.287952896985729,0.13265771565532347,2.709044002412453,0.4841081670372738,2.3668129161718348,0.45974067977831723,0.41343415196979594,0.21121127410982488,0.6045621803859509,5.768854095440929,1.4056595210270793,1.7216134356213537,3.0673195096854418,1.090589342643299,1.3894169550680306,4.160285772996784,1.1575491649539806,0.06573606636689289,0.06622792620294415,0.10935258501240241,0.6554095925420764,0.11307041174227717,3.6578797702395,5.299349075414272,1.0458442374254304,0.33880692190618955,5.677514410028149,2.0276835520671845,0.23742816078067008,0.1745809034375565,0.7429425780242294,1.1402740920576058,1.7858438996285564,2.402645473290897,2.2059737569175635,3.9237008335240997,4.930829243644936,0.9532234875434131,2.678487685047571,0.2597725265683186,0.01720566846525129,4.25066550284952,1.1314190761794034,3.5540435661996383,2.2125521080494224,8.210935703478164,0.17628064503001806,0.7821336439220588,0.6239059995010123,0.8978156833051898,0.027297976583350536,3.4817805217349544,1.9114290376154948,1.7752911687683541,0.281949103273639,3.1069200577160707,4.155943706720069,1.237618148547102,1.2525502587546562,0.06155857008992083,7.944417629033701,0.8362986981331164,4.624155331685204,0.28404371723412325,2.2559044839503564,1.1507303446512678,1.3482547726171674,0.6131333081387407,1.1434290298204686,1.0526429916579576,2.6250576855099617,0.20693588200167312,0.12951792584634214,2.1315208906174914,2.4982142167429906,3.670778426104464,4.465677366521444,0.1942328297522673,4.594568531075808,1.8535964608056954,1.0402061534151867,2.020952423607188,2.9728949186864604,3.221871709163647,1.9651536451573932,2.939152543294078,1.4258529539917735,1.7605938462329505,0.4579935396660346,1.6424816634303046,1.015260403003552,6.1972128463758995,4.472112996174127,0.3169847195949611,2.43041043735094,0.8542619406867225,5.261429440139111,4.0213062145125456,2.5542275538517103,5.336992019180244,0.5275791139554293,1.7641710693270412,7.312153117777282,0.7549528356505864,2.4440538213635685,3.9668059566892184,0.08312582298375304,0.03355404178951549,2.2980505045125197,0.1324395923364845,1.394085219090563,4.3592272745279725,5.3908677103490295,4.711141263283924,0.306217609579992,1.2173985150054634,3.3689804454776615,4.449819514706714,1.8968697718109713,3.4844921342989856,1.9695012075003295,8.312431824570034,3.973770323817348,5.502643112016878,4.47084640809582,0.9319114310053065,5.318236321013231,6.306577278407512,0.7580339590063572,0.7669100706774614,5.7813323144110935,2.759749877350325,0.9101090816347437,1.0553401601787158,0.873905171648345,0.6629278252518307,0.04025886522851474,4.947678049552758,0.5703873620185567,0.3826829312626927,2.3569632108163487,0.08590074737923903,1.8951218833343333,7.989956726413128,5.659456832851978,0.3546282271755139,1.1759357419081198,2.904012110167262,3.6399368793905396,7.968234199280431,5.630836315409667,3.213727631659893,2.339784264147837,0.1213161904320228,1.152087251564872,3.0646372131057955,2.6567826746877294,0.10607348012262552,1.5150917167414244,5.0546472381718495,1.9487031776869443,0.15713952881094118,0.742581646259584,5.869216025837111,1.7256859394947313,4.166086301371139,4.105889867519895,2.11103271161344,1.0576169068739993,6.275990377904654,0.34470976849721957,1.5209775191055712,7.255473253521608,0.5734901286443286,5.489511586108403,6.131220266646785,1.2953944719727097,4.813200757596832,0.005819651664154879,1.3639054824492742,0.13526070101131538,1.4817323465126337,4.960916291365578,0.09004927679864849,2.883512797939538,0.628048528777998,3.1960202033279295,1.003958077857388,0.20661863494457133,1.678894578147741,0.6707287878961292,1.0801364386284131,2.674963490114874,3.639736432114317,2.2084395698065933,3.8452137314419748,0.8802115652240907,1.3450622033151376,0.4810955580916527,2.3628761521127615,0.8097320046841128,2.079382194465497,3.903348090483327,2.340051075668095,4.055443549205457,0.09172114715620605,2.197618043379656,3.072153845414184,1.0236103210638419,1.0489452218821382,1.652314847574524,3.9111251651141288,1.7556382890367956,0.4927342011992444,5.736102966458212,3.1930130496515297,7.4419153626194525,0.0547193839389708,2.4212912262823316,1.603993313727507,5.5142979355344455,5.676527358848631,8.35028718461176,2.6966037241145386,2.5063826606371435,2.867569891674858,4.308061097921424,6.8861874044811096,1.6900262468346057,0.27720033609331374,0.17735230122089973,4.0090787356181075,1.1377227855897445,7.846302981939559,9.193559543119573,6.1669467715492345,0.3724466307901304,1.0947157078384109,2.1551076589962346,0.6640408934047941,1.815472520886396,0.7486449567070403,0.47309554392077047,2.862776593073022,0.33814420719434435,0.7617258627758954,0.3327302972057211,2.1531424600942843,1.2674184605357621,1.2074452143885952,0.18526194771644455,2.4218649416196616,0.06412159097256964,0.9124472470961611,1.5543963906173488,0.6076409982953326,1.4843256113412528,0.20457287174385197],"x":[5.794596166490373e19,1.671268833012786e20,3.0990586864018824e20,2.5871860072709253e18,2.0802139814277143e20,1.8571097987594253e20,2.3275991755799226e20,3.7039311180255927e20,4.2277810345900335e19,1.7823712928698055e19,2.323390787478183e20,2.8075933807405957e20,4.793919040699824e20,4.245105528404286e20,2.0761676145008574e20,1.7507305662782292e20,3.870880724140555e20,4.0510251940081874e20,1.8090270080808934e20,1.2276269344914786e20,3.3916269532384507e20,4.995610875748893e20,1.3958451821939134e20,7.89552702660989e19,2.7373234179245608e20,2.5643412139380818e20,6.946719815394231e19,9.971742092645165e19,1.7608464537427116e20,2.4039744285808778e20,1.0840954958760401e20,2.6172399405671393e20,3.3151620125176175e20,1.719037138147323e20,4.322953046881611e20,2.597435203545651e20,3.8432066736846825e20,6.2541756421439775e19,9.18327286477304e19,2.7910939055059065e20,3.277407868354914e20,2.3535887031314622e20,1.8114007846376617e20,2.753486771554673e20,2.5925336035766206e20,3.557736631425596e20,1.7961594288242862e20,1.4608340091364264e20,2.1753583647689386e20,5.369597614052979e18,7.291940641012273e19,1.4367413803766815e20,3.430857534555758e20,5.103850414987138e19,2.043993197616672e20,2.1354242611734525e20,3.0687133072916264e20,9.736963867191884e19,2.1714144329485264e20,2.1094083494547987e20,4.23362246569309e20,1.4533218513976536e20,1.441834549386038e20,1.5728289573348298e20,1.952399274516725e19,1.596079424272044e20,1.3919820975312342e20,4.354308740487439e20,1.334041177129055e20,2.5840152695869168e20,1.717166212292661e20,4.0561272616336595e20,1.752166008546837e20,1.6920022825347868e20,4.292249000666376e19,2.984508884635118e20,4.011487943880128e20,2.3911447852124973e20,3.560449048289972e20,3.612481641097791e20,2.817991626455761e20,7.089595255621922e19,1.0228880818958585e20,3.7026842951028474e20,4.390698617540869e20,2.8599175744370187e20,2.0287444159737713e19,2.794898774596668e20,4.843937701796495e20,2.5807071324987657e20,1.1624966498147721e20,1.8012255685636024e19,3.9897461713566204e20,1.0283173402281104e20,4.01346583583502e20,4.327740745229507e20,4.34286153425103e19,4.970092933318899e20,2.8745045647943657e20,4.455716642696888e19,1.736109794475307e20,4.317481963290613e20,1.7010295277418152e19,2.1277496177039694e20,4.338152611099235e20,2.157357297697513e20,1.4886283410839352e20,7.043334788543598e19,3.191735117984305e20,1.0584041616918598e20,2.7381980832829145e20,3.35032915074825e20,3.0316114841795186e20,4.505102098556133e20,3.5832278076146824e20,4.656385771299712e20,3.578161591424972e20,4.637637537736239e19,3.522957236930845e20,3.072671970025403e20,4.563209684570126e20,3.53061463845232e20,3.7217125480852436e20,1.5251420543872683e20,4.081478295283162e20,3.0097002072674685e19,4.289729463655591e20,3.341811165976849e20,2.752504956202338e20,2.6469283142306365e20,3.5601326683482856e20,2.1952211648251956e20,2.999514565318458e20,2.4116500679721986e20,2.1321464476436087e20,3.194989953950638e20,3.291020744120198e20,1.5469206695933712e19,4.648749432992326e20,1.2309113036860775e20,2.0207167667490046e20,1.397306829485307e20,4.824316695895257e20,2.425127034639985e20,4.4572721342687406e20,4.316982950773796e20,1.076863514659761e20,3.6036573105644496e20,4.0644900831080264e20,1.878526385618523e20,2.467518704184332e20,2.996250406565388e20,2.0446755736006043e20,2.433627561747404e20,2.4413544396607334e20,2.8758000633211306e20,1.2649385987568096e20,7.589967046879286e19,4.937693666668611e20,4.767860868769965e20,3.6143593195438084e19,1.603053808507371e20,3.819459196326906e20,6.077050956591012e19,3.722687421866434e20,3.932934472715952e20,4.143498424396499e20,3.436901854391994e20,2.0239200559127845e20,4.186894191016257e20,2.4255208856796624e20,4.608347142249788e20,2.1626116695456783e20,2.2651363011784914e20,2.1446370894565347e20,2.0534450796876497e20,3.842401632009786e20,8.859268283714144e19,2.7798077814333856e20,2.406151456232235e20,1.3470186393098166e20,3.653026417560745e20,2.667692874838593e20,5.356284229166508e18,1.0982121410928335e20,2.4420056834578933e20,6.292945079790335e18,1.3324264929961127e20,3.3490557331420054e20,2.606793919592257e20,4.5757926882144426e20,1.970037636107028e20,3.215854301084975e19,3.492487587688126e20,1.4107995174857186e20,4.725303597961767e20,2.5699217770279043e20,4.848257591288434e20,1.5958832200732338e20,2.0012264677473894e20,3.290523245485012e20,4.199692699922581e20,1.3393876185845449e20,1.650360832719663e20,4.117785467249295e20,3.002217343183497e20,2.3241611802187763e20,1.5856098519249895e20,1.3935451793720338e20,2.983953590518942e20,2.1076834034257668e20,5.590682329195929e19,4.9374319798637946e20,7.934473419296594e19,8.953645871800313e19,2.5583667556848422e20,2.0744695324828333e20,6.414492934489763e19,2.1344706140532045e20,4.156842113172689e20,3.567413765377677e20,2.8400261186658947e19,1.0696323258909301e20,5.06523296363835e19,3.547904046334265e20,1.0773037174145417e20,3.499799941701462e20,3.194309325967607e20,3.6127541926779316e20,1.2803840141167288e20,3.4569171167387936e20,3.0310887547193026e20,3.0280976761943713e20,1.4567838509704179e20,6.082376813029211e19,2.437661715230172e20,3.233944347459584e20,3.6912246515938e20,2.104808515072118e20,3.5698854430685377e19,3.457648648056819e20,2.0426075986489177e20,2.8578140666339662e20,4.0257045721374654e20,1.2296018627118232e20,4.736028847657943e20,1.5920881794013947e20,3.1664395128123825e20,4.2958806950259923e20,2.4829237036510134e19,6.945857406222344e19,1.4506679606797874e20,3.4084761525109575e20,4.463499426834566e19,1.3654052580059184e20,4.024747295484815e20,7.284012370013887e19,8.072541838502112e19,2.3062779087516323e20,2.188902690728045e19,2.55872414568947e20,1.5817340565475895e20,2.539125150845556e19,2.850481941986822e20,3.7672819541497815e19,4.714389644815501e20,1.0401457599812431e20,2.359674637952279e20,2.7400624232321352e20,1.0869399813706215e20,2.1981836274946654e20,1.0447829133162594e20,1.8847130305463376e20,1.994233632256005e20,4.952431937532441e20,1.5983394886973112e20,1.875312329468759e20,4.5179358976477325e20,2.2660412697618288e20,2.6582567720966898e19,4.348186707283449e20,4.436967426204914e20,4.060126665073889e20,3.6452246423840444e20,3.6811171441165967e19,2.0274190725622727e20,3.811026772416869e20,4.261350910020286e20,2.9109055406696245e20,4.1518918366019165e20,4.387092872661966e20,3.0000549151016406e20,2.3632138960157468e20,1.7178157994208477e20,3.5507938471156576e19,3.616391545851635e20,2.634654814834355e20,1.6768882224483572e20,4.936064651126973e20,1.1468861297262245e20,3.84646982585218e20,2.861421014613702e19,7.81067214556171e19,6.803574392149186e19,4.2027691764927896e20,4.3092488180283356e20,1.8751734067326288e20,4.170711210985708e20,2.576601521857463e20,2.8083951442990295e20,4.338484752713474e20,7.52060909426529e19,4.010280277342837e20,1.8198299009727565e20,6.182371310195428e19,3.5934086677661535e20,2.430465917838668e20,3.7941428240934706e20,2.6387392572677233e20,4.8021630719918034e20,3.6092194239760885e20,1.1758922365478686e20,4.528099742993676e20,3.721260162753901e20,2.0780468917172463e20,4.757098390715133e20,3.622081866423782e20,8.28738127820814e19,3.0521912394595398e19,1.3549618753285725e20,1.48700986091999e20,4.7635832180524614e20,3.125195307115996e20,4.934030692185698e19,2.6944943237969134e20,3.460226868453744e20,2.2694034919303214e20,1.2249509284305782e20,3.385469610313162e20,5.110885785016878e19,3.9874569050272694e20,3.3652383414459027e20,6.612531175326108e19,3.7264327835331704e20,4.0550134686064024e20,3.6450189148274e20,6.565401483622657e19,2.705821335748711e20,2.670918440543857e20,4.849630699001478e20,3.6428201875385706e20,4.316362746112769e20,4.078361277849359e20,2.9430147239043957e20,4.8639228153757755e20,3.3077200660706e20,3.346165740440588e20,6.1892062395790705e19,1.148539048431612e20,2.8040342871093305e19,1.4308724361398346e20,3.28550003862384e19,4.897368818507783e20,3.0536577613606335e20,1.3134555225569572e20,4.0735121119773255e20,3.3708320713972076e20,1.3840066167798604e20,4.901130758539265e20,3.172813096119027e20,2.333404015796342e19,3.721376328227908e20,1.728836694839566e20,4.55975679633204e20,3.8046938992149823e20,2.516973848638703e20,2.795447733617831e20,8.690962398814516e19,1.5173655706352907e20,1.608367380214698e20,2.2296805630506013e19,1.1240093231286945e20,4.485801838878742e20,4.608217656016777e20,4.469194510643404e20,2.4049706400622556e20,3.069819445315012e20,3.838702398070357e20,3.0882033920180716e20,1.4605126117455403e19,1.0808265128064403e20,1.8738058308421684e20,9.271685657792006e19,1.0228129504415695e20,4.5035354171715256e20,4.715871685013187e20,2.4387431268677023e20,4.3439344687925035e20,4.777702159184743e20,4.7129281449766085e19,1.984867996366244e20,2.126495866785586e20,1.9342119513815466e20,4.153558545726743e20,7.979003997821544e19,4.9032123346561656e20,5.81337856714782e19,2.3465092589167375e20,4.920729677584168e20,3.963369092618358e20,4.38482730538965e20,3.523595193820428e19,3.5786398041381156e20,4.889340273953917e20,2.476551190735734e20,2.166742831995272e19,1.9877076942769078e20,4.337108400824936e20,4.7652861081309754e20,2.8135632180597132e20,4.8778144142360216e20,1.1195081919596367e20,4.201119801934368e20,9.65863919367052e19,4.524593257233589e20,4.270762156969233e20,3.4135515662770314e20,2.1133453511606393e20,1.6024325691982533e19,1.028190789874779e20,2.087082659316325e19,5.599128248744517e19,2.988583998849042e20,9.677829695343315e19,4.433604927386869e18,1.975079569003352e20,4.6576742851232353e20,1.7464710368280022e20,1.816589331709087e20,3.408880771431065e20,3.0275539715847756e20,1.953563859054368e20,2.4132639229830005e20,1.589258987881919e20,2.576866795587508e20,7.629519757113512e18,4.712962913864196e20,4.07568883381918e20,2.8252609510757758e20,3.268826182956013e20,7.119394038188803e19,4.909069462495907e20,3.3534823493513996e20,2.8794820337619153e19,1.0866372150663794e20,3.913428481077932e20,4.296048695448393e20,3.518811898459281e20,1.4756542922399153e20,3.6466428045678236e19,2.2075958832739274e20,4.883425377460602e20,1.0193216819896505e20,1.9341651086634553e20,3.0628833532843734e20,3.9695175626530475e20,1.8659587426564945e20,4.091706714019203e20,1.115407807356905e19,3.1197293528802296e20,4.670274856082316e20,3.583677923518395e20,2.73380896641766e20,3.246390922498928e20,2.0304271089246922e20,4.463559921181944e20,3.0598758612835035e20,4.8537102756101744e20,4.403445132491536e20,1.5646560891134588e20,3.887872897377817e20,4.6856716767555224e20,1.4566035630673746e20,4.908091487898905e20,6.159910981913075e19,3.4223261438261186e20,4.661906304303892e19,5.264700126382182e19,3.387515437273366e20,4.2429944318237553e20,3.584500410831168e20,1.483621685566779e20,1.5929216828437266e20,2.9017936484554814e20,3.926838345311666e20,2.0237312116110007e20,4.272092155382245e20,4.272721966673311e20,4.205623024793578e20,1.6568587647312518e20,4.091051884560795e20,2.1143455962247815e19,4.7005392994171585e20,1.06381113009215e20,2.690515516470283e20,2.5775298633973498e20,3.087798271054527e20,2.5503629461279254e20,3.0569666911242584e20,1.5460220737043117e20,2.096581848527868e20,1.6193042766824024e20,7.420428727227113e19,3.351355596819387e20,4.9268951141611844e20,3.807822960777874e20,3.711941204628924e20,4.671954432013012e20,2.3619294338279584e19,3.965370380867099e20,3.587954041420288e19,4.453709349959582e20,2.2042200231640606e20,2.4235584097164254e20,3.083232208807568e19,3.497957181815411e20,1.7747180869811136e20,3.879527039269937e20,4.172247776521075e20,1.1871163156615406e19,2.775844984348505e20,2.0601907520845457e20,2.4994609114450854e20,3.1131799821215315e20,3.733368290524601e20,4.809861619404682e19,1.245443450297063e20,1.5625288068781933e20,3.595374615284504e20,3.5695682520396788e19,3.700203042478633e20,7.233125892297693e19,9.828133227538338e18,1.4384956768932689e20,4.239188962846446e19,4.106877018221429e20,4.658104240925239e20,9.533988077507622e19,2.087138290370959e20,2.6568085421277187e20,6.882377894777813e19,4.51997101543207e20,4.221685442706711e20,1.9469950264131296e20,3.702834062213253e20,2.4882174467232337e20,4.12995368295079e20,2.454899617556362e20,1.6774005966971873e20,3.9400961268699785e20,4.6867199459023376e20,3.387245110568053e20,3.619456904410236e20,3.7755400574260714e20,2.1553514871049922e20,3.1672730616891356e20,4.205772557779268e20,1.258904592305234e20,2.7411581653580002e20,3.127182393441205e20,1.4532089034860474e19,3.6287931687868714e20,4.375901135838981e20,2.6043825238060564e20,2.5297732262191537e20,1.659242417240525e18,1.6348827498714064e20,4.750215836294576e20,3.966854136862246e20,3.607195630206971e20,5.681973687725978e19,1.1591782174259074e20,8.006839992440034e19,4.625142077541878e20,1.4946354142204015e20,2.6804218604087427e20,3.3431995940234147e20,1.472412573513765e20,8.625089878089132e19,1.5116481836111377e20,2.3782105672474978e20,4.7044225836656053e20,4.8838092266539273e20,4.9765815123648125e20,1.1303916464011354e20,2.6407077734440383e20,2.3418940193956405e19,1.8577214176086547e20,3.9724055434453536e20,1.651176123141608e20,3.966301473508644e19,4.84409550190906e20,2.6588635532733045e20,9.774310630021987e19,6.782383498555006e19,2.5318295309496458e20,4.1742850398807124e20,3.7178799122289204e20,1.7952451138009235e20,3.378834418847301e20,4.209782994330477e20,1.9347261083760226e19,4.601941975767554e20,1.6074198925572997e20,3.0401409290108495e20,3.2592361999328634e20,4.984258875435829e20,3.051278190504751e20,2.7761393574959507e20,3.868973872665572e20,4.672511885653419e19,1.587664908146379e20,3.72921988829692e19,2.950436853617613e20,4.053770427468416e20,3.7639383241537585e20,3.258173899782793e20,3.467846107498349e20,1.6339034814085562e20,2.8895475601986336e20,4.4800987111403415e20,4.1570222550621435e20,1.7435361561121492e20,4.4461190975485877e20,3.346940757809786e20,1.2654213080976944e20,6.110238250669303e19,1.2685618832978307e20,3.207293761587796e20,2.5443952472584962e20,7.899604909132641e19,2.964551648882083e20,4.230015093145642e20,2.7459049764184778e20,2.6068400600585146e20,6.598582663420549e19,1.130730751201588e20,2.501945492387359e20,4.924577456473516e20,4.721281883346298e20,2.9161180115879654e20,9.108964343622733e19,1.5203768072526158e20,2.528549694388863e20,3.147196647170864e20,4.5426333835220294e20,4.7051173647690046e20,1.2826983478164744e19,3.645227599438778e20,7.796688149342734e19,3.923894895396502e20,1.755993552424927e20,3.789846790239681e20,7.923218988673875e18,1.9238972392385846e20,1.827020257997945e20,8.869807718492196e19,3.073136085348074e20,1.4443927473292145e20,5.952734711104735e19,3.8430031320438505e20,2.3724429128674125e20,3.164690379933792e20,3.5774459318646315e20,4.108922783189962e20,1.3636606765568986e20,3.1964076827899324e20,1.8453053560418137e20,2.7445192518400446e20,1.9076947111699838e20,4.601882583976236e20,1.0605543420447628e20,2.325806900498877e20,3.794519844785996e20,4.984810944036705e20,3.041278129149776e20,4.060677216985848e20,2.6368757126924793e20,5.9803153399646314e19,3.93169124070707e20,1.1311733003104734e20,2.15398858627924e20,4.3586297201776276e20,4.35367383821591e20,3.618917622216554e20,5.038771666066849e19,2.728107458896386e20,2.6042163959664178e20,3.0566406269800015e20,6.3036245536576274e19,7.279401990904211e19,3.962001620660236e20,4.9732115039380564e20,2.9145384921008767e19,6.432058494386717e19,3.979696364778278e20,5.468295103110921e19,2.0901462923228054e20,4.642511467487985e20,4.585235031745546e20,2.8959454079720997e20,1.3715077649237644e20,1.788423577621583e20,2.2736784491619235e20,2.797955615213267e20,4.929849451408598e20,3.413576309378204e20,1.7338272078746642e20,4.5157902607422403e20,3.8558333819150166e20,3.165883873062937e20,2.3822490860366807e20,6.746990459090868e19,2.466153634837875e18,4.3211726440185594e20,3.160286695659914e20,3.7620197303586973e20,2.6276541899610466e20,1.8174741864630233e20,4.1551975404409494e20,2.0039894643114387e20,4.143218287612917e20,1.3151626286920054e20,1.3633310283354061e20,2.945236038564396e20,4.753273543520962e20,3.6516136446714203e20,1.7054601729995945e20,7.808256152526971e19,1.8897664333525054e20,3.096428074563476e20,2.620493687145575e20,2.0928097669795355e20,4.014859591007097e20,1.7824932335090604e20,7.926403363700769e19,2.6995155783349823e20,9.854453848199651e19,4.7035986752160786e20,3.277572436755285e20,3.7179859016172405e20,4.765956450992431e20,1.4091508638728323e18,4.458299049363869e20,4.04021487911487e20,1.6730020943141988e20,1.6432280261041432e20,2.2427340170093563e20,1.720763318312492e20,4.369066775753705e19,1.3790676325137896e20,1.3014271340700544e18,4.838591989408417e20,2.464893514185368e19,3.996510128904986e20,5.6759142410021446e19,4.1714716390376145e20,1.3992557279524753e20,2.514146000417349e20,2.56040167144711e20,4.869411799795314e20,9.54866316727172e19,1.9819940632591653e20,3.279532767407655e20,4.385531474627429e20,2.3529130489060213e20,1.9752981019045583e20,1.741673601157501e20,4.025262089268355e20,4.378477406441294e20,3.877927621237786e20,2.4844161445370934e20,9.597322485351378e19,1.4881805001125436e20,3.8338076878402e20,2.6417002579756125e20,4.161460615538714e19,4.440535486943302e20,3.404242459287493e19,2.149456405172936e20,2.2926180302367398e20,3.5650812552909305e20,1.9600738184717127e20,1.8114764553928675e20,4.87841318387614e19,3.9733492270020965e20,1.5726239262344577e20,1.1345971419036649e20,2.099802092877573e20,4.463516061777314e20,3.356596214934334e20,6.450922349852451e18,3.146193242685323e20,4.633573582762972e20,1.2760239335929835e20,4.635087955597259e20,4.762800341626882e20,2.31885708597508e20,1.7702915467239273e20,7.652998498291741e19,4.489207322850524e20,1.5257124062964135e20,2.7520009071273433e20,2.4893859580377586e20,3.715352801715034e20,1.83028509571268e20,1.7719212916061484e20,4.368246532108878e20,1.4729158164717748e20,5.92535534717642e19,3.835917546660243e20,4.01391012249909e20,2.1722754708463272e20,3.6484337548858157e20,2.0817421752568614e20,4.277379872660166e20,1.9540636429986474e20,3.350466895118458e20,8.137655514639498e19,1.2533572107491453e19,2.3937386550307583e20,2.676031041950748e20,4.7845548862583485e20,2.1038605818471236e20,3.2358329434408387e20,1.4422811157453013e20,4.167774674338287e20,4.591675305047042e20,3.8007921693892665e19,4.697916295109753e20,1.121141200044623e20,3.0180831940151614e20,1.8393156972141996e20,4.3062977546618785e20,2.965764863055415e20,1.7930482781173724e20,2.1419194863927198e20,3.808463403753743e20,1.8862127005331813e20,3.2412682167128556e20,4.202229111703475e20,4.1621233866022676e18,1.913558278786241e20,3.774530121999934e20,9.07961911796324e19,2.83839328713545e20,6.720724860262467e19,2.3715793989383383e20,3.0724707806653874e20,4.9429905668024664e20,2.7029404734390498e20,4.759939129283188e20,9.722227462305538e19,4.579330130946652e20,1.3013187938698617e20,1.421864201382676e20,2.3700490367859796e20,1.6915450292771e20,6.1013565709115924e19,4.531976639901351e20,4.507933684924244e20,1.9936929070201725e18,1.650271167000081e20,3.231501723167967e20,1.4788783817258707e20,3.2107274827222077e20,4.128076471466789e20,1.3719239642284809e20,1.7867233665851297e20,2.4605938143959984e20,4.2559431456689743e20,1.0643138320819146e20,6.9473722900173455e19,1.0113889193199238e20,4.86943390130284e20,7.504190626761915e19,3.316860035077198e20,1.0676293802516056e19,3.718395551852674e20,3.669408849045524e20,1.942904188248929e20,4.0530439404388005e20,5.8733089210871505e19,3.9921737313174015e20,3.22161717577288e20,4.319598016034625e20,4.163076144421477e20,2.5697857913671683e20,4.735871623861499e20,4.13004224369858e20,1.30088747004537e19,3.289451726561866e20,1.822287334309427e20,2.4199148326283893e20,2.6665796278176003e20,9.378684908492562e19,9.556468761579279e19,4.265653018491827e20,4.857062857287215e19,2.2752133011165938e20,4.5781316852720343e20,9.514380188545329e19,2.91905262763828e20,2.4597426435638093e20,2.079221398166352e20,6.10729679930358e19,4.859368495374256e19,3.572138260973247e20,3.0298620561771613e20,2.420161860240024e20,2.1751280009400887e20,1.3929241381364189e20,3.529520338251247e20,3.835511305660285e20,4.6552737539581405e20,2.6674554292186513e19,8.46822367149026e19,4.29934608999671e20,1.7374619822070953e20,2.1146450026929104e20,8.258191748353522e19,4.295453330840738e20,4.310053372569934e20,4.223209500486874e20,2.6591897693291056e20,8.735985589879692e19,2.9352652505718663e20,1.0094754955241975e20,7.225868313683442e19,9.595870347574854e19,4.60269878326116e20,4.781898499262365e20,2.7842563729922192e20,3.7689143235355646e20,1.1717080864718448e20,4.9712937315997155e20,4.937388215018399e20,7.947210287188461e19,4.013739298179145e20,1.9302575255480327e20,3.989544882684682e20,1.5303226645958895e20,4.952435075303376e20,3.297394228808793e20,4.6987963240348346e20,2.3038637270989498e20,4.78959869242628e20,1.5541450213348996e20,6.549043071451621e19,6.9285734553441616e19,8.3802392888161e19,2.839981522317292e20,4.679549190779306e20,5.896895502653954e19,2.762501409886693e20,1.976835108629848e20,3.4157577322369126e19,4.6764135873761096e20,2.8559506036150816e20,2.8927632838373445e20,1.9444955332830043e20,3.159824649122109e20,8.917159412279063e19,2.5206805698980073e20,4.211725092982984e20,4.4761032876412666e20,4.534420407803836e20,3.1545323769530286e19,3.522261892988684e20,1.9554382763133482e20,4.927856401945898e20,2.4919217379767612e20,3.05297032257677e20,1.997583784405131e20,3.7610039207508784e20,3.848649615789431e20,4.99214524052418e20,4.022835588434152e20,2.3123612055071723e20,2.1808162914611606e20,4.286480576904177e20,2.1120242775423825e20,2.9753651262547106e20,4.475978092502014e19,2.6262385722941856e20,4.3451351937824784e20,1.5285473695553366e20,7.183022160960117e19,4.579884834536514e20,1.0462453899668988e20,2.3612876552809552e20,1.4510309973534297e20,2.1853192687741462e20,4.032831405679721e20,2.2421619426429272e20,1.6264004225173252e20,2.763308036330889e20,1.4856104799071184e20,3.2596040354438886e20,3.042510743110943e19,3.311365208356667e20,3.911408218974549e20,4.41846299720612e20,4.358830453661076e20,9.502814005027683e19,1.6920661654902913e19,9.189583305667159e18,4.354819863754596e20,4.267890149614685e20,6.568569520443968e19,2.3684598487494824e19,2.0635846260671663e20,2.8513469405255703e20,4.723622992914678e20,1.1836568593857633e20,3.0632784015020884e20,2.7678520566164626e20,2.7920440560362803e18,3.840850549530328e20,3.879970994244197e20,3.601304876097151e20,4.801120759831355e20,4.488177720647905e20,4.356400203506875e20,4.103742870764249e20,4.367074393062509e20,2.2927583659599315e20,3.0634980018742074e20,7.547156390240395e19,8.011126740606834e18,2.118915026701014e20,4.302676962105861e20,3.371676709104441e20,4.685384638763081e20,2.0214516211650196e20,3.592613123271772e20,7.710521439969015e19,2.4797140554829218e20,3.643037407479351e20,3.973771469980051e20,4.668614469448613e20,4.465334704846452e19,2.040395186703024e20,3.939518815566245e20,4.037262306811501e20,4.642363151803386e18,5.732358048563973e19,3.828532826131313e20,3.973638169293009e19,1.8179784004919224e20,1.0260274737699688e20,5.685981913742211e19,4.959853289639766e20,1.5999249315464692e20,4.009029797603852e20,1.4819815671846486e20,4.382181134015836e20,4.162735186882219e20,3.444439589812807e20,4.911872199962643e20,3.197429599621655e20,3.157847903968042e20,1.6506597239572896e20,7.62869357041951e17,4.8284562328825496e19,3.161326790505563e20,3.6154289046704954e20,2.95390153686188e20,4.077936617683924e20,3.574085725720187e20,3.936177245548623e20,2.268000484902531e20,4.784770953019805e20,3.678331018552299e20,5.8227274477167305e19,3.1090832487045045e20,2.041231354926485e20,2.6292930880135774e20,1.1428533478300411e20,3.6696836142107066e20,2.662320875517742e20,3.3298919254273104e20,1.1529173143061506e20,3.333620205261886e20,2.7228887901105468e20,4.095604366580667e20,4.8574800115652526e20,2.534870619201407e20,3.0386905743785243e20,3.1168924624314545e20,1.8094892316416593e20,1.9369707997684698e20,8.655662273132703e19,4.6055993137209154e20,3.7609493051825455e20,4.065693088004941e19,2.0001952464250477e20,2.700040497007178e20,4.401010796196103e19,2.2765751576930782e20,3.144026782396244e20,2.0071984516195313e20,6.120416145362695e19,4.881982165147844e20,2.1294454586091844e20,1.7748647816096275e20,2.1330717263558348e20,3.4690315647131104e20,2.7167394161018932e20,1.6099654522404893e20,3.481993858127775e20,3.3299016689590685e20,2.5954059841026445e19,2.0272921456640236e20,1.7066503420883295e20,2.4486180538651348e20,4.336437609425442e20,1.38684222239294e20,1.4749814654285203e20,3.9511722903791016e20,4.4634996003895063e20,4.907863344224155e20,1.5039302306083697e20,2.4966776329267315e20,2.145008300837338e20,4.646874151838141e20,3.352173669090055e20,2.3853218274335906e20,2.192340747916497e20,1.878189460683214e20,4.0428522425864126e20,4.0386076666229595e20,1.8643362588251338e20,1.4736725018351477e20,2.1934770501321182e20,1.068567498045962e20,1.4801298792232203e20,2.498050505205216e20,2.0035974582795567e20,4.5134210125698335e20,2.53551749966618e20,1.259240114932097e20,2.558223380420102e20,3.821161204626288e20,1.5185164857753403e20,4.872795737321975e20,1.5876000841362607e20,4.161951074808018e20,3.337858050392073e20,3.4121323521122396e20,4.757153132862174e19,3.20494911001636e20,7.21079578636119e18,2.1874268267730797e20,2.3893444977204314e20,4.441567364394518e20,2.8810766984156905e20,2.5472175390701768e20,3.923847836760574e19,3.881673526855344e20,4.248981312573432e20,3.08185434141689e20,4.173480444962902e20,2.593374780193463e20,4.465658171165069e20,1.2809063338715587e20,7.2759722701698286e19,3.02965980958816e20,4.934503585663868e20,3.757006871131405e20,2.979363915538486e20,3.649707525027856e20,2.394790875773978e20,1.3649789756533975e20,7.50319051506816e19,3.843673458069936e20,1.6885799412602392e20,3.9287461735037095e20,3.480279394420341e20,2.957488271279852e20,3.898447157518889e20,1.4629383336559881e20,4.111062725233777e19,2.645502954046206e20,4.503444229759383e20,1.674383370497642e20,2.0016970133570273e20,2.742472499392884e19,1.360149027190029e20,3.6410860364687363e20,2.3434592063781778e20,1.585321466602978e20,3.2415770537421596e20,1.1062095157929897e20,2.3922192270780518e20,2.0524085197679605e20,2.1358159670894494e20,3.439808662041834e20,1.5080041946406542e20,1.744466172624513e20,1.7588343293201282e20,1.0568723482964281e19,3.2046992190780644e20,1.536598064058995e20,2.5213332425712583e20,8.630002267303526e19,1.5593879787818736e20,3.365995920522215e20,3.8794212760931775e20,4.789779908402718e20,2.0161274989563517e20,5.875915481899668e19,2.2831138703684456e20,3.472768572127063e20,5.7670965124402676e19,4.800717703351104e19,7.806859164377655e19,7.348180181242181e19,3.080983920480056e20,4.05734556255809e20,8.139012688185265e19,1.7997455423253712e20,6.9044781890517385e19,4.669865472248897e20,2.2198170761149488e20,1.534878183445213e20,1.7739906340704708e20,3.6751654932284926e20,3.502360712245108e20,8.598663036049531e19,3.1173311163308474e20,4.844630282516557e20,4.699478229327835e20,4.108165278767309e20,2.010187495709348e20,3.5043578035041436e19,2.7338904493954767e20,2.48841544111617e20,1.78867431862401e20,4.049156672937428e20,3.445408378907071e20,2.973565973677154e20,1.006525590272701e20,4.488197061081767e20,3.3877883350266964e20,1.5375419338464979e19,1.3109918217400451e20,1.43268791962202e20,3.173841728471398e20,2.958778595492793e20,7.421863626121744e19,7.657756861376502e19,1.632458675547999e20,4.993122565657062e20,2.936837909855895e20,3.1948815319814845e20,4.093802725791798e20,4.138485745539656e20,3.99756635898795e20,1.9889568785221357e20,1.8329443881105523e19,1.404083756824187e20,4.1435582477306115e20,3.5003980437231305e20,1.991328835246024e20,1.1154650543532424e20,4.84610702210321e20,1.4491694097111879e20,1.841637940197915e20,2.234920830954309e20,2.276987656422075e20,3.488901080289398e20,4.143213218036228e20,1.8628024394372222e20,1.4677466350222367e20,5.076509151904257e19,3.1166962333619906e20,7.126415742973385e19,4.7036967514174475e20,1.1107886333088624e20,1.1230495250781469e20,6.958599467150306e19,3.405297353723874e20,2.2862749199029204e20,4.36034219846515e20,2.8991226836460493e20,3.410147421898376e20,2.7799477676052182e20,2.214002345924948e18,4.0027844912164654e20,6.129017605825959e18,3.0602328656638824e20,2.292638757247323e19,1.365649199536168e20,3.5909328857065824e19,9.975405018370327e19,1.375802743334298e20,4.449599163661632e20,5.565559013288135e19,1.0662333768660715e20,4.7045973139282356e20,2.1991192337204314e19,1.170099525030855e20,4.453835278503747e20,4.10233471243478e19,2.056784826472428e20,3.592017661560809e18,7.847714014860336e19,2.218157652402481e20,1.1954853179062809e19,4.71658024409639e20,4.578133444636423e20,1.5432369447106193e20,2.0847076318397845e20,2.9285869997647197e20,4.9022822016292926e20,6.217602950112111e19,3.3227867851446977e20,4.131427384743106e20,1.7322452227012676e19,2.7039757175903473e20,1.324805222513677e20,1.1655763624350595e20,3.698048556343509e20,1.3354349274245531e20,3.948259687136574e20,4.74287833259511e20,4.743297185793682e20,3.568122154134257e19,3.5433079760330064e20,3.316521038041238e20,6.522537801392392e18,2.3974581490655396e20,3.850030011147226e19,3.244449193730873e20,1.3633274306070952e20,1.6486278642940972e20,4.382332063679722e19,3.016973353895201e20,3.921854013431933e20,2.9206783938866804e20,2.396294859797271e20,9.925766550339782e19,3.3282244520382615e20,1.765066432516002e20,1.6904766631956863e20,3.887441316738185e20,1.1818846728567384e20,4.226021390121541e20,2.3754126673001048e20,1.0830255846720206e20,4.2051042415106654e20,1.5285507715031522e20,3.394610799076547e18,2.246670706007945e20,2.1765968968517278e20,1.4594756629323296e20,2.3181275070640266e20,1.1477339349924327e20,3.684177440890109e20,2.4996382623333584e20,2.631691099458328e20,2.92644144719174e20,4.382617689475167e20,2.0318469230964824e20,3.09577842555795e20,2.547750119225462e20,1.863648008378061e20,2.1687364542277763e19,3.8389080214072466e20,2.983739548358658e20,3.982280134066433e20,1.875644224665535e19,3.93638156319855e20,2.1642821180924264e20,4.204801863909174e20,4.4652558515428996e20,1.3821395489703503e20,3.0166617371241267e19,2.9066026337819505e20,4.1869392643412905e20,1.3154027706255139e20,3.711840804335747e20,3.1718940198063505e20,4.52084689199843e20,2.5895356217732733e20,1.4770228732265995e20,1.935808248006103e20,1.931602717994997e20,3.9769266289662755e20,3.540448954370325e20,4.444156111959845e20,4.740180664859943e20,1.8649731753680942e20,1.2804602518604047e18,3.034846370922998e20,3.9023865914275316e19,1.632256855964087e20,2.145381793389529e20,2.2632484347480975e20,4.983227880655627e20,1.5308134179043164e20,6.007026584600339e18,2.7292853859246998e20,2.948304795801132e20,2.7350103702964303e20,3.629401125336901e19,2.495588496419884e20,3.681457453535275e19,1.9776736573503878e20,3.3893231025421137e20,1.7085912223638884e20,1.8018685947715996e19,1.802468445105444e20,1.52388792645732e20,4.276545534872619e20,3.75049873992104e20,2.4949481231513027e19,5.89758086626922e19,2.3103669040350216e19,1.1708831219242305e20,1.4019066426890376e20,5.99742004154174e19,4.8379516682197035e20,3.794024799180093e20,1.8764078424325564e20,4.334226365481725e19,4.61808619909872e20,7.999330255954918e19,4.5370298141040004e20,1.3207535503768602e20,4.4423625828335315e20,3.708089472375321e20,3.7785327871317076e20,4.9386234278875234e20,1.4245481954597883e20,5.7192213004110316e19,3.5026249878950635e20,1.1259036317421206e20,2.591880929437293e20,2.9776497435003643e20,4.358472125033354e20,7.370422551332706e19,1.3021197918331462e20,2.3646632754643014e19,3.1117138102283266e20,4.42744723114583e20,1.315761309613293e20,3.766309818610932e20,1.4371255129704063e20,6.235256629215075e19,1.1860414977072343e20,1.7532241620706296e20,1.1254180907528421e20,2.155572420312934e20,3.821353031868483e20,2.156792832884505e20,1.1093768085334788e20,3.491018050434307e20,4.3891287378965057e20,3.2435574195589345e19,3.282893957746915e20,3.0343919953418296e20,9.625840598735952e19,2.165643862274813e19,4.792938626503575e20,4.277731647903833e20,1.1578291205152052e20,3.735517211423828e20,2.57891851114638e20,8.294648809766465e19,8.21378604060633e19,2.972419885346568e20,3.486323543231409e20,2.8632283921573547e20,7.147899312079558e19,2.4522025188791317e20,3.2776183050042166e20,1.883194989657901e20,4.50467630868431e20,2.0342389395374218e20,2.396614813616906e20,4.471101258793776e20,2.2983682825777014e20,4.3503682716202874e20,7.080984591308565e19,3.9912818582641286e20,4.5553244606645e20,1.859776562625378e20,1.1378252093510533e20,1.3205615707249635e20,4.091539766604039e20,1.994810852786538e20,5.659926384736291e19,1.9877826225911775e20,2.508794429489038e20,1.8037482757830492e20,1.443913241739846e20,4.77279167082798e20,4.821409915081191e20,1.004014556412443e20,1.616207263052879e20,3.351658413594486e20,2.2150552713121536e20,6.6367738484914e19,4.884499356365084e20,3.6712541677765676e20,4.6921595219492536e20,1.6327099055187755e19,2.8266664029226507e20,5.949016169445237e19,1.8704872191655815e20,2.8678881083713837e20,3.567422324400612e20,4.0474888199524935e20,2.9290639051276917e20,1.6200461715833592e20,3.005061175107849e20,6.551239333773828e18,3.796441519048716e20,1.716606343236311e20,9.916667338935814e19,3.595656210068519e20,2.9102610024883824e20,1.0051598645815096e20,3.0677982951285975e20,8.3406355234254e19,2.2485182490497303e19,4.7848632172343715e20,1.872321316861429e20,1.6070671535533654e19,2.402248300324139e19,4.381055445387027e19,2.7585382107545276e20,4.47983302598197e20,2.979778241771116e20,4.185589172358467e20,2.8188680385570652e19,3.1269983667328824e20,4.98077451080879e20,3.551106154859188e20,1.7203231575010053e20,6.124758400893104e19,1.9188953929080127e20,3.5068422290711924e20,1.0794532026353482e20,3.762070751098302e20,3.8547745932188117e20,3.096957112673906e20,4.445410237218729e20,1.1302653097884086e19,4.2949524528923535e20,3.193444499409745e20,4.607478073271431e20,3.686291968706926e20,2.014402277317886e20,1.6949678246866846e20,1.3498544557104474e19,2.2978410376416553e20,4.879480136563174e20,1.1601817725184077e20,4.928582573691978e20,3.316894168847734e19,1.742705553697133e20,4.669105083053961e20,2.4862189217880464e20,1.5877059790400992e20,3.9029511165687883e20,2.6480681499607695e20,4.312653528975209e20,3.1030055115028346e20,3.5901992868925e20,4.9514121081392025e20,3.304556886898344e20,1.411947159515337e20,1.8931306751336546e20,4.5180922559897626e20,4.850543748521935e20,3.436950018681771e20,1.2379112260616203e20,7.494109608228877e19,1.705168595643563e20,6.043198762610646e19,6.879411113251727e19,3.348941735734542e20,3.981734329025121e20,2.0686456704650507e20,4.009193003342864e20,2.6944132674878823e20,1.8031986571976606e20,3.834989830008986e20,6.274610928626328e19,1.0168698732211655e20,4.855458686110249e20,3.8847994774073174e20,7.840913021122503e19,4.281180218417735e20,2.177083945930909e20,1.2487246419016896e20,3.7897681926137414e20,3.009314440463562e20,2.7435394170716966e20,3.2866449124940395e20,4.627235625935669e20,2.449770672976731e19,1.8970143272588296e20,4.005762348651193e19,3.556207462757149e20,5.162331636971973e19,4.847093450133102e20,3.0731890743706915e19,8.025023810423459e19,3.030226539761957e20,4.443970502618835e20,4.832548289422463e20,2.0794102983309253e20,2.4756182078031875e20,2.352521504045536e20,2.4621365488534825e20,3.5821809480191096e20,1.2064826462283224e20,2.1725633258819378e20,3.637789749152393e20,4.65931779430298e20,2.0068205000685807e20,4.170757014099925e20,3.5737933675882486e20,1.639418065930213e20,1.1761903149583091e20,3.122339039921259e20,1.8076185001693934e20,4.1727164493402204e20,4.893357297431577e19,5.476843588639835e19,1.8875834589432332e20,1.6632870699453363e20,3.8728878017619224e20,3.3714050594828e20,3.371998635489322e20,3.202748778431411e20,7.255026787189306e19,1.80338913744106e20,4.9383756674973644e20,1.987747987891637e20,5.446874938805246e19,6.465669144534719e19,3.8972427558182696e20,1.4127934312438168e20,2.2929603080210104e20,5.312933886944166e19,5.744308786444802e19,3.004589281784624e20,3.1392108176328036e19,1.2577568962717145e20,5.532241106548425e19,3.0202928742601707e20,1.9142551417230823e20,4.458274988069478e20,9.791508144626542e19,1.8764674191748874e19,1.3538712369074212e20,4.847152392402397e20,1.5334818315121063e20,4.4623226518613446e20,4.2743649200788944e20,4.8078276741034023e20,5.677800817781104e19,1.2043737800559002e20,2.948220683991995e20,2.023560592820955e20,1.6661219810661106e20,4.535236995830558e20,4.98610255305096e20,2.946502705483799e20,4.486338707758657e20,3.511591011629144e20,2.3078968845865334e20,2.2567648627139858e20,4.460396269258993e19,3.3049725732446405e20,3.66688032582921e20,2.6658410683661095e19,9.996337343962625e19,2.2483438962287467e20,1.0248594532665511e20,3.353123702149288e20,1.3539303067060732e20,3.269274850153833e20,4.8896770286778476e20,9.5036359064756e19,3.7810897570640554e20,4.691411915393048e20,3.785052114830651e20,2.2508065741868705e20,2.5795173486110544e19,4.668178513392138e20,1.4124797686013624e20,3.543290194380035e20,1.1955166318626492e20,2.731678251369129e20,6.5557283179649925e19,4.5180479821729694e20,1.4121883481639364e20,2.7314689421704158e20,1.5098403571614066e20,1.4995075662073286e20,2.7675135472876533e20,4.400254879272597e20,2.9058409859384653e20,3.8405201109977996e20,4.858792471210491e20,3.685678281722907e20,1.6929576637815747e20,3.571122505518432e20,3.079755153386443e20,1.809336468013981e20,1.1880795949993728e20,2.209382429242557e19,1.8795004487629668e20,2.1277061428367648e20,3.401708561199665e20,1.7034648504249532e20,1.6316142207107986e20,3.383105737902315e20,2.135912558559676e20,2.3846389775757404e20,8.144003250597881e19,3.854960274037214e20,4.3329427974096775e20,2.8672769826454625e20,2.2954205573984898e20,2.9400739799179824e20,4.187280216288849e20,3.7708069816553734e20,1.654793253807617e20,5.148186716921838e19,2.8832547842071455e18,3.3079302614027325e20,3.54171274051632e20,1.0160433459671292e20,1.408725767676609e20,2.7788103170068084e20,1.502232069673774e20,3.117462266655003e20,2.4888360980623104e20,4.112488225815437e20,4.0972042979579894e20,3.50601551207651e19,2.401515667678339e19,1.6102556573801215e20,3.4322095532932305e19,1.8304008095595587e20,4.1725473189477194e20,2.2676681570317046e19,5.584110207084886e19,1.2345849348007882e20,4.5215999244523386e20,3.7208160244272883e20,4.153188595298825e20,3.5261638701651223e19,4.8089232834961126e20,1.3970441003754675e20,7.564861849384591e19,1.7802263693597053e19,4.678432860955071e20,1.6006999347288205e20,1.169965236922138e19,1.7065651365793956e20,1.0057016293803706e20,1.5815274371055233e19,3.116501615566798e20,4.9663930543236737e20,3.180730218251281e20,1.601789842104357e20,3.992946141814834e20,1.8444951095299e20,4.916542244849755e20,4.403530645223667e20,2.804452343102082e19,2.0099099013039817e20,2.9321635613897613e19,4.065375000108375e20,1.543035489498541e20,2.7333634865610627e20,2.595349090207562e20,3.2238599172487393e19,1.4439934390793701e20,1.903376872025446e20,4.398284848994872e20,7.22794406938807e19,3.663186805208504e20,3.812533544577662e19,1.4761757510628304e20,4.223463022396014e20,1.484028823135154e20,4.796962956609875e20,1.2923802936132411e20,2.9429467116287928e20,1.2620400342555687e20,2.622226324574158e20,1.2603165730855903e20,1.4492163549938996e20,6.286158393422581e19,3.2556838122047563e20,4.192873705129825e20,4.4925199450935257e20,3.21618477842854e20,9.471332534592009e19,2.4505182089055188e20,4.0572845284865566e20,3.015850325893555e20,3.06317629089521e20,4.489298004979287e20,3.206984363917035e20,2.0572796420929697e20,2.8040459552022946e19,2.302396103759915e20,1.727403399668006e20,2.1650158044525042e20,8.586990246884957e19,1.486018243879028e20,9.470616886470884e19,3.915776387840786e20,2.1870848654375692e20,3.0791250065376862e19,3.438037082355276e20,2.969377306581781e20,2.693719134095801e19,2.4918541606687366e20,5.721992171190771e19,4.6374503712542746e20,1.270880626383672e20,1.1693586835102183e20,2.5524737376362473e20,3.791829171871458e19,3.3557495450089266e20,4.743224665383327e20,3.0231171720209944e20,2.1273948469287607e20,1.957154704372848e20,2.5952274648163582e20,4.122248096711897e20,5.535816715468256e19,1.4393670969309037e20,3.0351714682604873e20,2.034517600003912e20,1.6827196658779836e20,2.646130161272195e20,8.704958980558508e18,4.356204213934749e20,3.360242053015419e20,3.394642617708217e20,4.323367045416276e20,1.4551019465815874e20,1.4321832884794622e20,4.898296635572206e20,1.2934505202081641e20,4.024063802678643e20,8.902877115554464e19,1.494942703980604e20,1.8062530132394172e19,2.1833904722201648e20,5.847452883388421e19,4.577211082615466e20,1.8667565321794034e20,4.9795917053264534e20,2.5170684192586672e20,7.812538809349662e19,1.676418600609772e20,1.2983890175645108e19,5.504526303109858e19,7.880228525680094e19,2.98751658070241e20,3.607978440749802e20,1.554482971677049e20,3.774337087802603e20,1.835957638215745e20,4.450130556613435e19,8.990401911260588e19,8.622979106311007e19,3.252594299351007e20,2.0488387967196126e20,3.9294548357019514e20,2.8611278084669355e20,2.4906369509246285e20,2.6962101626885748e20,2.0422073302516574e20,3.700428289638043e20,3.930499392262143e19,1.0700335465303224e20,1.4390123868620553e20,3.328232477660359e19,4.507168965704928e20,3.0880501618714955e20,4.933347119692427e19,1.0735325098145892e20,7.497061268381978e19,1.1168598390770124e20,1.4245915780997487e20,3.6817053375459793e20,4.661716158818972e20,1.6432250844117674e20,4.089622562994996e20,3.3734450532361765e20,3.293086440597404e20,2.9611038864745634e20,1.3787785324461082e20,2.812115070999229e20,4.625289641278983e20,3.4516702338947455e20,3.0577982259230364e19,1.1120855218902186e20,4.893176408783334e20,4.4293643249147065e20,4.4032064495768705e20,2.1285506541278498e20,1.8072547968073872e20,4.567756339296765e20,2.1732997037189166e20,1.0697766950465448e20,2.4520801368873314e20,3.383383044824184e20,4.5051268710827786e20,1.8218972513686104e20,2.1135386928500133e20,2.39461236623418e20,2.4908835812277712e20,4.076809787639875e20,3.2910800237867545e20,3.00131964963165e20,2.840377934714392e20,1.2987272908717495e20,1.1174236989789594e20,1.0265781463039902e20,4.362055880116138e20,5.498941497931697e19,4.008892219482373e20,2.1093998528277224e20,2.9664652576400166e20,1.3724191488066966e20,4.909931145069082e20,2.9450573604208247e20,1.8088099126832395e20,1.8040182575747495e20,1.718896046509608e20,7.504646366135981e19,7.40606597461696e18,4.998338039372968e20,4.884914722270539e20,4.1434257463499325e20,3.4204522735348466e19,3.299848615963378e20,8.454023845984204e19,5.022672898685743e18,3.1106811071256455e20,8.886820894242364e18,4.366187965843003e20,2.6824547833802542e20,2.1391540148540572e20,2.1610168231412875e19,4.65951025383176e20,3.3620073393195844e20,2.5549160160722207e20,3.9929483701461176e20,1.426407571990157e19,4.948674934298885e19,1.830765730764461e20,1.5998124076054725e20,1.0408177269641878e20,2.018399986739057e20,1.9392628958380175e19,3.5442237897368723e19,4.2816295063378303e20,1.2412371702945341e20,4.967381879861291e20,4.4102570779823505e20,4.746954949568111e19,3.285710664580575e20,2.8771159513927008e20,4.4735862494192265e20,3.6035530236129153e19,2.8674961573610713e19,2.533398209833628e20,3.353091161548956e20,4.349808898775472e20,1.7420212349389036e20,4.699660191522939e20,3.5100866702055945e20,4.972901635352934e20,9.875050990556522e19,2.076412461728745e20,3.176313224432874e20,1.8353714398037836e20,2.3190995645686795e20,9.33894744092244e19,4.9100274519639956e20,4.476561917148458e19,4.274677454712835e20,4.9226645820885126e20,3.384461716599369e20,4.1469476195778894e20,1.6918011153170114e20,2.5035858558500458e20,3.092344608768569e20,4.371111276733123e20,4.849442480491204e20,1.4701891254111743e20,3.814333589270523e20,1.6765719432360175e20,2.385818660327305e20,3.144992858039771e20,5.3686171064731834e17,3.841594835914195e20,1.2175936186199482e20,1.6604435804679796e20,3.80434407149771e20,2.7196910573721816e20,1.104465598627372e20,1.647902216354303e20,3.4852694384653625e20,2.1582833327630447e20,2.084638741188156e20,4.105732289779143e20,1.1271443362945327e20,2.6778973105678077e20,3.690876483780651e20,4.016389260119245e20,3.562287228661078e20,4.68739785433685e20,6.454920568006478e19,1.8725335517839353e20,3.4764078908329316e20,1.6229864311134712e18,3.845339596246931e20,1.9519906223651278e20,4.0985730921825056e20,3.2631771491516075e20,2.1907718289725044e20,2.0403545619281953e20,2.204454151753728e20,5.197313043772023e18,1.0967923340249014e20,2.784019933344601e20,2.036265451377728e19,2.223499862750517e20,1.9360738193756645e20,4.9260153486869915e20,2.8965008916598715e20,4.134625914061688e20,1.648383433909144e20,3.869351076511604e20,3.4569679223439865e20,3.9886882940840804e20,6.143870230265191e18,7.826110890190486e19,4.048168366134426e20,3.523833405435951e20,1.6000570954510457e20,2.105931975314263e20,3.754947067742366e20,8.75613890513528e19,1.9169268320281746e20,1.6133289194732582e20,1.0472873200333437e20,4.587955726736642e20,1.1991896897510506e20,3.3829716409685554e20,1.8105268576268196e20,1.8028954808313014e20,3.955149592383254e20,6.726190421256501e19,4.76491039004562e20,1.088949222535624e20,1.7396282240540207e20,1.8113583051845917e20,3.31382913209173e20,1.3503329769021438e20,2.6435485634983176e20,1.380022057919678e20,4.064541222962151e20,4.5304821384545833e18,3.3972655666152754e20,4.662198280315469e20,2.630497223138254e20,3.158456256409596e20,1.1226262051249786e20,3.04969802646338e20,3.2056755031807944e20,1.6281407628297355e20,3.4485733499522725e20,4.152677151451269e20,1.922950232017906e19,1.095783030930031e19,3.996953891118385e20,4.144119642336224e20,2.232018706478955e20,8.171575084584649e19,3.273914702743281e20,1.99966061702682e20,3.492719687057017e20,4.7931934461034424e20,4.996867002642142e20,1.4991718254329505e20,1.2158176739767496e20,2.4812469918944146e20,2.170170656864378e20,1.6873760980239444e20,1.5642393000156017e20,4.36667725198737e20,4.751214110121169e20,4.929780385258357e20,2.2689058444960013e20,3.5132598417074304e20,3.3460600778580486e20,4.941629915766891e20,1.4936630716800459e19,1.5246493390159698e20,4.668047437667461e20,2.3656513486861074e20,9.901865907408824e19,6.932474971335923e18,3.8509918730212e20,4.251649269561044e20,4.5663230203952765e20,2.653055859025838e19,3.431131719107831e20,2.4872417777757304e20,1.7903783491321833e20,1.3988036119635704e20,3.9388567314319514e20,1.2803659483070523e20,3.218698322763792e20,5.597201183480544e19,2.3332408879407867e20,3.648688546942394e20,2.6432591900628533e20,1.3545565417480498e20,1.5795644162935662e20,4.1182223344234424e20,7.23944047795097e19,4.037189410559957e20,1.4770174265524522e20,5.021149912390255e19,2.3496239855588475e20,3.4432851756983465e20,4.468891562106503e19,1.2481455099471656e20,1.6778544266680638e20,3.047161466464483e20,3.383743516851227e20,3.177424507675688e20,3.739130286817179e20,4.175658679384624e20,1.405189450308193e20,3.3092686819922195e20,3.0988604800272204e20,4.2983839958424755e20,3.1263072528905e20,2.747716624811332e20,7.428419964814754e19,1.2437097932799251e20,2.100582213977089e20,5.567421641672244e19,4.483355725706361e20,1.5614686140070265e20,4.183989088355653e20,3.971841704926044e20,4.733290127054813e20,2.8119555025533207e20,4.865252596733588e20,4.530012918870011e20,4.620370960258039e20,1.5121861038453683e20,3.406554355299818e20,3.319054961489661e20,3.779580935133943e20,2.69516285300549e20,3.444262714978693e20,1.3629036386525018e19,2.919631455787588e20,1.0588166542483907e20,1.1310195548000458e20,2.271634025944921e20,3.9357330472883886e20,3.484798388982107e20,2.6681471948639774e20,2.10273158664237e19,2.0514490427213817e20,3.8722155388942005e20,2.189139719378739e20,9.899229017671762e19,4.494788101887377e20,2.2104920473124923e20,4.814702955011657e20,2.0348666939350778e19,1.5264081672159212e20,4.146311765696433e20,5.276702652089027e19,4.0423262490449484e20,4.094177639866364e20,3.2336369813238586e20,3.232595867015083e20,2.8897306452857523e20,8.32751244714603e19,4.009051064827668e19,2.366536222492499e19,3.6442323508038395e20,3.326112845109525e20,4.402492135088199e20,1.8307379579740612e20,3.6681214693496173e20,1.1029778399685575e20,4.613403178049924e20,4.216036386816303e20,1.9197090799207884e20,1.8895934127967434e20,1.1791858810596106e20,2.1523210709863046e20,4.73652085082008e20,6.460724351990743e18,4.2165771859813394e20,3.665356279344371e20,3.9267958668663574e20,3.045128587295402e20,3.49429782164622e20,4.348605560867964e20,1.7599419805608447e20,3.1354027578486384e20,8.259165686959818e19,4.779726424667677e20,4.038507396630758e20,1.2269798314752806e20,6.7505732869683585e19,5.970031591410929e19,4.604435079956043e20,1.0332342702571495e19,8.45181829682255e19,3.675972080617708e20,3.757809579329618e20,3.0608504914578227e19,8.707620757510786e19,3.7585817268705965e20,3.290542487668356e20,2.1978758331827015e20,2.6116341509241287e20,4.876057553084834e19,2.297386407431851e19,2.340763354731953e20,1.2634644200169298e20,2.4399295907370615e20,4.4266467845807086e20,3.2846176334148783e20,5.839500219575172e19,4.7613286576023175e20,2.9254957780530476e20,2.6546285916352686e20,2.2126230208798992e20,7.2855534883587146e19,3.164260170389785e20,4.007187318668944e20,4.517720920639601e20,6.448136440911378e19,7.382962964409778e19,2.128332059600865e20,3.968553416269105e20,3.3742908228625426e20,7.982714220785553e19,2.1492547000423347e20,2.4224729299807673e20,1.9881775170219206e20,3.6289480151578214e20,2.9006592827794997e20,3.28538109107831e19,1.627400527184073e20,1.5647814293243118e20,4.9542089957145785e20,1.915769522779842e19,2.8271901383130805e20,2.064543149372211e19,3.2526978404516895e20,2.5114251372156597e20,2.2712089213948404e19,7.036949308897067e19,1.2096944332030401e20,4.8002107665433474e20,4.347097091670127e19,2.034200016963135e20,2.5658759323827696e20,4.8981224212860646e20,4.171859954310597e19,4.330156259370527e19,1.6445275494429075e20,2.5867780326102745e20,3.200599301009693e20,1.9326038937017293e20,2.1340674600184617e20,1.614088733503618e20,1.493095184278203e20,8.279210640530439e19,1.7968642672831385e20,2.2886398238550003e20,3.665205548524919e20,3.843000885141018e20,2.3536724096219552e20,6.261015559828381e19,2.98321095776348e20,2.530644572463246e20,4.6098319580874414e20,3.9734528959682694e20,2.6503569196386605e20,3.413613137198145e20,2.2751261038368286e20,4.604494742094934e20,4.8440355230330264e20,3.611013341578179e20,3.5169089608928127e20,2.802412794736237e20,1.3794385435090544e20,1.8185146542326465e20,4.311318669253057e20,3.0705547132288795e20,1.1080680269233646e19,1.8281156892741124e19,3.2829411658248166e20,3.362325522610353e20,3.40993633091317e20,4.478611687881118e19,2.9620517161057513e19,3.009452413739983e20,1.3679234892052361e19,1.1143286077861092e20,3.619272214622254e20,2.7506075881942165e20,3.557369961879359e20,2.1936352859626855e20,1.3058800026146649e20,3.776326019742036e20,2.107390398229809e20,3.00523380612814e20,3.310888063087611e20,4.7402244857758004e20,8.957861539100608e19,3.0698921170535297e19,3.987679210170457e20,1.11507744113244e20,2.8942694490299554e20,2.7794300870390838e20,3.029186222265068e20,7.118242897914017e19,1.648295324531543e20,4.927281200208712e20,1.7782541030317706e20,3.5491117223370555e20,1.499011353093756e20,2.2929722217070048e20,4.648658137635921e20,1.4986359389992432e20,4.9728002237349305e20,2.5908847156252092e20,2.5250047777469625e20,8.426991422262143e19,2.1650851662436037e20,2.0794286030899695e20,4.6054949008033074e20,3.5648124705607215e20,9.434173274110702e19,2.4820333501486485e20,4.05621721590379e20,4.892634242899923e20,4.0119148308720157e20,2.5023185644035146e20,1.2315814017576976e19,3.4473756215051846e20,2.0481359926490743e20,3.616060420263117e20,3.774842441657873e20,2.7061139147702967e20,1.999382076474111e20,2.3460606180717363e20,3.6393703782494116e20,1.0975366116442931e20,4.7385652223731125e20,3.290966161207595e20,2.9076758459692863e20,1.9766443652882304e20,3.187310706323845e20,1.0259905271007846e20,4.8478940867568396e20,4.006765437397646e20,4.56061655292522e20,4.090051393801409e20,4.1126939874644204e20,2.8096826692470935e20,1.0358683658767586e20,1.3639771650817417e20,4.646321224659692e20,2.450933787482025e20,1.0402587857476719e19,1.4379822751161998e20,4.5553097548597166e20,4.45988991039402e20,1.3385256615240265e20,3.6402301790011576e20,2.687259604865437e20,4.2366276571671835e20,2.1316534332289122e20,4.341582098772811e20,4.029279813321843e20,4.058084461313745e20,2.0987028200260783e20,2.2059759824063178e20,3.296818741304076e20,2.978477724917068e20,2.3301986415081315e20,1.5253346730738654e20,1.3497016544270846e20,1.238902849432612e20,7.109932209208575e19,2.551886935328215e20,2.3314094374599197e20,2.8112948143492766e20,9.593873976158518e19,4.1972899980298125e19,4.413474526338537e20,1.5471819719947623e20,1.8837261628443463e20,2.2148281088105936e20,1.877976041394136e20,4.113687942987165e20,2.424559691404483e20,5.2480322841463366e19,2.5237926645028585e20,4.7431925376291425e20,7.307421664945924e19,4.296674909004753e20,9.462067085403764e19,1.6376233883903046e20,1.206325734197915e20,3.432713417431728e20,2.261225605664398e20,1.9308645186118854e20,4.56634992873071e20,1.5986619591873924e20,4.2502929648803e20,2.4811515824132096e20,3.7652015451005636e20,3.9584769694971986e20,1.664572353001601e20,4.133763452051821e20,1.0022565479572626e20,3.1156482311470396e20,6.38682442514274e19,3.244852686612766e20,7.65043852417373e19,1.6075717614189838e20,8.827644860384575e19,2.8398324343108983e20,2.289566480458862e20,1.0668357283975082e19,4.789266679390514e20,4.2912091917349283e20,2.3878786125342684e20,2.2869008385250184e20,1.6174132602959017e20,1.6911787895778368e20,2.490599888272356e20,1.8013715216380654e20,3.4687646208212415e20,1.9792424734557212e20,1.3663131746943857e20,4.969046597289169e20,3.654052933274399e20,3.5394186789887286e20,1.0584483572095255e20,3.4972724842848793e20,2.7775696518853788e20,3.2901381635705e20,1.2252571385911665e20,2.3021398408549365e20,1.1275969118945174e20,1.4989019988789864e20,1.8449263235132195e20,3.294796862315704e20,1.6839649682167657e20,3.61716135725315e20,1.949270832636162e20,3.981051844392591e20,4.3621507104036284e20,4.93427645884481e18,2.402023379185842e20,2.504749801360311e20,2.3722945959329844e20,4.69808259952474e20,4.7283733876026376e20,4.587356661189201e19,4.2563497893706806e20,4.9726115277464096e20,2.4229209468377006e20,1.5993061816804642e20,3.909670357390083e20,2.9761699916281545e20,1.7215961680168868e20,4.174918905085674e20,3.8087373992275516e20,4.473428143889363e19,4.429719001755716e20,2.1571949397481003e20,4.7203689919139755e20,1.3588708113955273e20,9.448782607685391e19,3.052527879470454e20,4.2014360249610286e20,3.9604447169168586e20,3.512904672966134e20,3.6630780329314275e20,4.5861376338237784e20,1.678628169392968e20,6.882158633509311e19,2.5436756941522348e20,1.1657695279318619e20,1.3040501874643118e19,2.63861729199447e20,1.5613406235198174e20,4.755689000564912e20,3.9966269222414916e20,3.24677884666225e20,5.6165099062048694e19,1.1643601437040962e19,3.0207202474073955e20,2.1690376468708167e20,4.9797698831792695e20,3.296691129352084e20,2.5299503669888644e20,3.532177821911497e20,2.2872693036477065e20,2.8482401018025083e20,3.03578765359902e20,3.735054008445476e20,2.0161038454779262e20,1.120588003746773e20,2.611471800309412e19,2.135069499790233e20,6.436635777507649e19,3.562600932422219e20,3.796849166350691e20,6.3121070968194744e19,2.377292875044329e19,3.4515959009492284e20,4.997959219458602e20,2.9012296110358793e20,1.1024498175817603e20,2.4582131472777442e20,5.455009385483511e19,1.5470495902453584e19,1.3990072838260392e20,2.928811017743937e20,2.659861506507982e20,1.448185004285888e20,3.8763949004978514e20,2.8728510057828283e20,2.5309785549472612e20,1.9625416870837853e20,3.4038418192140514e20,3.568688727454572e20,3.122922235716249e20,4.4018919567766507e20,3.300477426460749e20,8.371379535584212e19,4.864565393409425e20,3.787271968437463e20,2.1027079385845586e20,3.339776412853039e20,1.6923240986963332e20,2.693812534823399e20,1.8279990306864097e20,2.963629612260793e19,2.7368216366153875e20,1.9139082334277917e20,1.1654298868578533e20,2.075149977857018e20,3.758583563658898e20,1.0032494111169321e20,3.2545040793403254e20,5.1623877232398475e19,3.5933979733956605e20,2.273416691821179e20,1.1944218895285613e20,2.669485477997713e19,3.061322508572298e20,2.8420727612571828e20,9.194671869327486e19,6.446859529594001e19,3.568687962698536e20,2.0296400044851187e20,1.8914067825573917e20,2.013763896888021e20,2.6387153104910284e20,2.6093730576933542e20,8.950546769136047e19,2.7166245550900638e19,3.511656268473987e20,4.768052860231419e20,3.675967358526439e20,1.619701487564737e20,2.4998926960489077e20,4.4897161841214593e20,7.783214067764333e18,6.5789673848505205e19,3.24229981840006e20,1.4127936672104314e20,7.058244801395752e19,3.537315482195895e20,3.281854874250784e20,1.3071235243924906e20,3.019525947093161e20,2.4025953655294008e20,1.6725699644337955e19,3.367407886210105e20,8.325418971181115e19,4.234718827072331e20,4.0109088626646214e20,3.741853721517752e20,1.934144292180269e20,3.498550810582389e20,4.9568072227348126e20,2.142443873806124e20,2.5611408213798558e20,2.799279270343194e20,1.4548479929455488e20,1.1331087094581594e20,6.987251086952778e19,2.8777549070390267e20,2.200580368606714e19,1.1700778403689937e20,1.5148814688622e20,2.5858406078119644e20,1.1768156799189744e20,5.123889580675767e19,1.268224125513634e19,1.7529835099876334e20,8.819696451291919e19,3.0037393105540684e20,1.521517688101232e20,3.467729690935289e20,2.938435616449966e20,4.7265010600652793e20,2.1575937235042065e20,9.888405699865243e19,1.97905895677534e20,2.0437981085700935e20,2.3076386986417717e20,4.386175628723237e20,1.311832387014409e20,2.980277958068108e20,1.2386001287249465e20,1.0274286147073563e20,8.66854475473361e19,1.4620573804814169e20,4.788658817610025e19,2.3135913168259636e20,2.847229655882681e20,3.381664499656218e20,2.813846015343463e19,1.624899681771128e20,1.9303455355520772e20,3.293351140217017e20,4.9811081879068665e20,4.218195260510529e20,2.7955299021544476e20,2.2513716667814016e20,2.5943617055647574e20,3.437481130208852e20,2.07502076457028e20,3.9490262281164626e20,1.2575791653934876e20,8.207909443191913e19,2.401732223819128e20,1.0304516794642788e20,3.062834614301758e20,2.2940878772151547e20,3.1823286231620846e20,2.787832860994619e20,4.039276969932743e20,1.04591229643543e20,4.663829850545586e20,2.0403190358226675e20,3.373342091965717e20,1.0261454241678297e20,7.755829750037252e19,2.3006115532098598e20,2.294111366219597e20,1.6906636953994248e20,2.1891261961585728e20,6.7553620001279844e19,1.1520466453849244e20,1.846060361502434e20,9.50682047248182e19,1.9122317652000535e20,4.42947972205332e20,1.0707752762567356e19,1.9693807089888172e20,4.115271940931527e20,3.651753369133825e20,2.486407302737859e20,1.1625771068785911e20,4.830122021603813e20,1.645057865289773e20,2.4235446023496244e20,4.013271013334502e19,9.449715790887731e19,1.0690196030382054e20,3.410213724561888e20,8.413814528034264e19,1.48242169158041e19,1.047800215293529e20,4.8765658687311734e20,3.2504688298014376e20,2.2361097352206765e20,1.0388306032266115e20,1.789200846435826e20,6.1243984459595555e19,3.256079490630224e20,4.178011154705017e20,2.3162955640765992e20,4.029087694625044e20,1.6371457823702178e20,3.820541909185274e20,2.4630003289922707e19,3.520811970230612e20,1.4420380125327126e20,1.2204984532986962e19,1.2388871428876319e20,8.456249704037466e17,2.7800192569635398e19,4.32076959170488e20,4.155457429579678e20,3.08950445721122e20,1.054635035534059e20,3.323062438442105e20,1.5796531436061622e20,8.750139707064525e19,3.062089501161463e20,3.119847273334439e20,2.9523322868490056e20,2.744539392729385e20,2.6325317319638604e20,1.563103573579764e20,4.365824241466792e20,3.3709115523724234e20,4.8999628083182764e20,3.496864823086593e20,2.339012690007981e20,1.0554244428507192e20,3.358650353709706e20,3.8135714972855684e20,3.340695890324737e20,3.9166693825152385e20,7.873180488838783e17,5.011341954930687e19,2.0651621526716917e20,7.155156072327079e19,4.2440043065031734e20,7.170060848561605e19,3.5226794222903423e19,3.1775395929913446e20,9.31099708794359e19,1.4951938412853903e20,4.314750037771081e19,4.92434796844627e20,2.3607746924592543e20,1.52969218913015e20,6.684382559316515e19,3.683064169702111e20,3.128405531001822e20,2.2999053257874345e20,2.976461583973104e20,4.552453372948334e20,2.0502325577587753e20,1.909104868821513e20,1.0678986261402896e20,5.593729602570852e19,1.5443588735467268e20,3.699643431009087e19,4.0952991805206993e20,4.709485242560792e20,2.7066249915522754e20,4.185514029827759e20,4.4907747093393487e20,4.8474475447443246e20,1.127611802169059e20,1.0371136490967181e20,6.769890862201905e19,2.8459210682918086e20,3.607461444436611e20,2.6370073119810673e20,3.0795865464142037e19,4.097773520104897e19,3.098859356115685e20,2.6392732516586802e20,4.245713546334055e20,4.988042619220302e20,4.400539616935727e20,3.263829518897805e20,2.568663139495343e20,1.1291485322459144e20,1.519244798421417e20,7.95551780100549e19,1.3849197411661978e20,4.294449029408202e20,3.0754833869371454e20,4.4107512152620034e20,2.2201039317989412e20,3.8535636610327734e20,4.521153007743785e20,7.597296065659486e19,2.71226334751371e19,3.98584535747779e20,3.468819901217453e20,1.532752532068426e20,1.0559399293161498e20,1.6539566427365566e20,4.475241882780271e20,1.0095160363378468e20,1.5808867985688933e20,1.4204880800912312e19,3.3846874538268144e20,1.757502700182969e20,3.757895734541772e18,1.299959580919825e20,2.8910944916201347e20,4.920160850158845e20,1.9795958268098124e20,2.5085923786660518e20,2.7891298450307813e20,2.7422830528807046e20,3.3757162905801294e20,2.773471990955382e20,3.4901341905832005e20,4.1191776668173e20,3.532435966931431e20,4.263577533082422e20,3.437364125880761e20,1.878674360316972e20,1.4240930944155905e20,4.663527914128235e20,4.8865360314977445e20,2.593728500135208e20,1.927517445931907e20,2.73588164270887e20,2.507708629487507e20,6.674292306854146e19,4.494124037453133e20,3.760574672367856e19,2.9638259769900715e20,1.161772540317541e20,3.608422985986255e20,1.0610319635907966e20,5.182327145490218e18,5.71362471852534e19,4.943816155588884e20,1.2601475417747815e20,1.1555849054110907e20,3.13268119062573e19,3.0864689008405637e20,4.387854816528207e20,1.1542797187730575e20,4.3004979343862274e20,3.1670262853063416e20,4.135266164339916e20,2.892104451641322e20,4.877814577743068e20,3.695064076003232e20,1.5586103246754968e19,2.726644327464796e20,1.2807442942629854e20,3.509856230552489e20,4.645282622399911e20,4.9598221666398044e19,2.28790245659658e20,3.639508129207987e20,3.7670084299254176e20,1.344423892183727e20,1.0353925261106921e20,1.506142341727344e20,3.900544781063026e20,2.0795293063047525e20,2.5932009783801702e20,2.2527326799521068e20,3.5267094979974136e20,9.932601523533719e19,2.113891758868163e20,9.549614840561094e19,4.810871920319073e20,3.328620503204627e19,1.279781211804425e20,4.7105974570036455e20,2.5969364141096452e20,3.208487440263103e20,2.4709789996887464e20,2.122725630821501e20,2.986142254263077e20,4.229787845951661e20,3.729219919486933e20,7.3759931427727745e19,1.780536125809895e19,1.4042707033493263e20,3.640680954193464e20,5.425104419107896e19,2.541468104385039e20,7.830446439067617e19,3.561950173880077e20,4.7818074843623765e20,2.1227498453728684e20,4.319447084092869e20,2.165419638899532e20,1.0250292686299906e20,4.377017666940728e20,2.3646386371394873e20,1.6274499339180802e20,2.5185054886773305e19,1.8791313898207966e20,4.533973636493792e20,4.6173868239979525e20,4.789738391455888e20,3.3359841687083876e20,1.2943085470743293e20,9.224707974699314e19,3.1730139459013096e20,6.8175979590618055e19,1.1625254314645833e20,2.222491717921901e20,5.140602699256885e19,4.308728999613492e20,8.424080789885818e19,2.5997828660639187e20,1.0179518426850992e20,2.968029635662562e20,3.5346434528798455e20,1.9426526813719252e20,1.973039867355565e20,2.544313787255616e20,1.844412937610908e20,2.750169489102616e18,4.451426367726406e20,4.589084409285214e20,4.0152728134774686e20,3.687529028949954e20,3.6354943992507315e20,1.5048588092529402e19,1.3026170542128069e19,2.9772854738792653e18,4.1095628639747585e20,2.0220747275674216e20,4.370664203788305e20,2.9835285784317166e20,1.9840101734899312e20,1.071844412726593e20,3.488075477287505e20,3.532681093122434e20,4.355321211655572e19,2.226367146167063e20,1.4579246104243593e20,2.170716756725204e20,7.471191077718465e19,2.4733011238002704e20,4.885776764372367e20,2.836182465934936e20,2.9660568285302723e19,2.4337162733859314e20,1.9294078595148114e20,2.303979862741405e20,3.919474178304349e20,7.005380304501185e19,3.732095348693752e20,4.1091815797495615e20,5.254141090346897e19,3.900265083134624e20,4.51684662966597e20,1.1124978203386415e20,2.955404512285975e20,3.3517497559600444e20,4.0681959078104564e20,4.270258785086278e20,3.7587992720522537e20,3.2242658971141145e20,4.5351176335221555e20,6.005838905279176e19,4.7866573860182026e20,8.063476965112686e19,2.3378584013152594e20,1.520276494743787e20,9.79370522621017e19,2.5409797695895693e20,3.5352624124339664e20,2.7077058230489176e20,1.766156331920585e20,4.51501124443928e20,4.959669532521599e20,2.8393346941036983e20,4.6396935090775104e20,1.2514894606116084e20,4.888855915545925e19,4.788690460194633e20,6.0318488405537554e19,3.7904104172793043e20,1.023654164816813e20,4.494829276892951e20,1.9505701313301987e20,3.58297371913866e20,3.314499018571071e19,3.092707560551882e20,8.51721797146544e19,4.576437371722103e19,1.5189588645451225e20,3.289202869146058e20,1.677468856785139e20,1.789718119564192e20,3.668516116747932e20,4.2995452838313696e20,6.081959159896216e19,1.8925993536044378e20,1.941572011243925e20,3.3834104445058174e20,4.892478327584959e20,1.7808262632640587e20,4.984745965025931e20,2.983329371838847e20,4.885976612721757e20,1.6485837540431315e20,2.48324526910359e20,1.5628720821989156e20,4.208676571976529e20,4.720054625578275e20,2.1290822442923157e20,1.4980376309870058e20,2.4064995917121195e20,1.378259812288528e20,4.250193021494533e20,3.544166371527807e20,1.3024837539740236e20,2.294289258585569e19,4.3050013259884344e20,2.0933097581506966e20,6.743040764287389e19,8.56794478253286e19,4.5266298229407855e20,3.604287862420661e20,6.696184949002726e19,3.560094977565012e20,6.175172192231903e19,1.2689322799473313e20,4.821932284171826e19,3.8301921860708696e20,2.635725606650693e20,2.5697967795594845e20,2.0791262366935414e20,8.426366725073948e19,1.8313510206430485e20,1.5776929292909498e20,1.6798263997956748e20,3.7078519532609805e20,3.09282529504664e20,3.385773981356979e20,4.219743356357464e19,1.4138295304509124e20,4.783581828727978e20,2.4890806018463148e20,3.7831806805145066e20,1.2994645630527952e20,2.9576784630995314e20,3.592890290198234e20,5.252101495877309e19,4.8689132396233615e20,2.4586779268025795e20,3.972968326930422e20,4.518175143391e20,4.801807767280464e19,6.765742521450902e18,4.7309946169308054e20,7.143633661170867e19,4.50604056499661e20,8.652919698983564e19,7.419962197035279e18,1.11584325546291e20,4.9661650044727e20,3.5354339529704014e20,2.2980441768485847e20,1.3123601767349797e20,3.197908888261249e20,4.858883795458201e20,2.7165175063487313e20,2.917903130632546e20,3.041628452172437e20,4.5969799248500346e20,4.5360518162165786e20,2.5728905441254502e19,4.394916460557992e20,3.8879853418836794e20,4.759212117499268e20,4.908975182332147e20,1.5200793174592615e20,1.6233874402686904e20,4.9328685202591375e19,2.53342105772213e20,3.541132722483527e20,7.111854072066942e19,2.3865248026002938e20,2.419592501220948e20,6.2155909769585074e19,3.526539952709539e20,2.035585227038805e20,1.8534526121733115e20,1.3584056495034035e20,1.9723490391394427e19,1.623123855695235e20,1.181220512984471e18,1.7805386552385615e20,1.1090790733012191e20,1.978804344354137e20,1.3436767821418322e20,2.1915048335934017e20,2.0349554542785302e20,1.4351803768516375e20,1.1046342417257477e20,1.8654409859613612e20,7.447549442934404e19,2.0777055570838643e18,3.633867275500379e20,3.388188818472126e20,1.6385141726249907e20,2.0626268844831764e19,5.013972972557901e18,5.415524833332003e19,3.836905681666613e20,4.394705976249471e20,5.029309264880027e19,1.1836463440587319e20,3.750557797655741e20,4.304673646499333e20,3.338678041778847e20,4.851976832767894e20,4.246219664759977e20,3.549544318673312e20,1.0872772581208383e20,3.8965982444794787e20,5.736924082851874e19,2.6431692287166592e20,2.1264226300309737e20,2.3410641498386403e20,5.547695777804129e19,1.1834511421870958e20,4.456160778040788e20,3.959482321948416e20,2.7387700506841406e20,1.2339803883674827e20,2.5869438179873967e20,3.591975948836348e20,3.840801246961535e20,4.4516714693412907e20,1.5818711238100425e20,4.10315671748124e20,2.0061465228931514e20,1.85321729861621e20,2.5736796929657317e20,1.2015614768004196e20,4.126445093179932e20,3.25157478716599e20,3.402435375641466e19,2.685274553490179e20,2.959235914202626e20,4.884538822420654e20,1.7416311013092062e20,3.791688547174592e20,2.5679234685579667e20,3.32470039939404e20,3.007987394755074e19,3.630425926318514e20,2.4889562689255378e20,4.3567239438427344e20,1.3026498946063581e20,4.612765474285223e20,3.6124901046870986e20,5.731702137811029e19,6.31499031361199e19,1.449851968239968e20,8.014675535283621e19,2.5829456623935563e20,3.800757600083829e20,4.617990569182486e20,4.218512579049826e20,1.3200914915629069e20,1.3525044240906658e20,4.41035444054668e20,2.6294774769028363e20,3.337853848645087e20,5.070552622679581e18,3.921777519464215e20,3.140673731784689e20,5.470069478336998e19,1.393624127711734e20,3.962474689453743e20,1.0298535988820879e20,1.6872649736745825e20,3.3147275847376257e19,4.7653574491628673e20,1.3219463084280786e20,1.3687985884655313e20,4.396859765407446e19,1.3558677270140029e20,8.300007627939699e18,4.886821217824267e20,1.3589155438074162e20,3.7210946717108e20,5.358936056525476e19,1.1619424933231837e20,2.7174485942269123e20,3.697983993339321e19,3.020396087971007e20,4.604876554753963e20,2.4718557166594002e20,7.802979264111154e19,3.2758530520688296e20,7.351469006739353e19,4.540974260847655e20,2.6604075042165765e20,1.7562912278975336e20,3.4584293751626885e20,1.3727109828682849e20,2.8544550967802662e20,1.8749700848366335e20,2.269364237539986e20,3.405634543209525e20,2.803500887726521e20,1.5998095718194017e20,4.097294232996812e20,3.091093236047744e20,3.917752365076556e20,4.4103612646306526e20,2.3224708609581564e20,1.7384000343350398e20,3.6206135107239844e20,2.0810015524926934e20,3.9322261222173494e20,1.643053658965311e20,2.142007425978476e18,1.0694499691479242e20,3.686332841974753e20,2.1879625264602e20,3.633407111061831e20,3.458136462038902e19,4.030501257014822e20,1.1452244633499481e20,1.0619341470595139e20,3.6499661964866355e20,1.5262614433978873e20,4.044922119831651e19,4.992459614285414e20,3.687072948120916e20,9.159805775118701e19,2.4329824320317912e20,4.746223562251546e20,3.173358811983997e20,2.1202910871172042e20,2.6924938146064515e20,3.925651501109257e20,4.106065175229883e20,6.045468233362028e19,1.887103693187963e20,2.2478869510287353e20,2.5501532248000312e20,3.435966273350661e20,4.172110672606529e20,6.720865606138715e19,2.783838466006502e20,6.77441266113179e19,2.1225280253093387e20,4.184787049904293e19,1.070061754160917e20,4.207723250321232e20,2.6670163416695485e20,4.197395206335562e20,4.4753683757180604e20,4.059432647426087e20,3.440408481695795e20,2.5312658710559493e20,1.658265298767903e20,7.833024475794142e19,2.812456282281691e20,4.748415472410694e20,3.496030849893339e19,4.6201840856409965e20,3.3547624342536185e20,1.5902258152350063e20,3.504220902943282e20,2.1348142531980817e20,4.7527875136612486e20,3.6101841510251532e19,1.9747759241855602e20,7.623796504090208e19,1.0217341125966322e20,4.977234047010178e20,4.1905685907027e20,4.745780191241299e20,3.215308150331275e20,6.232424599559538e19,3.136860094091305e20,2.335419227414268e20,3.466765090943069e19,3.590452056249673e20,3.325820423195661e20,2.6545119061769578e20,4.19282677066439e20,4.866144219991071e20,6.306706657580341e19,4.46283764777311e19,1.170049101680427e20,9.445225427648119e19,1.6486852969716613e20,4.149364424245425e20,4.515330201449338e20,4.4380144709609226e20,1.0836095322260824e20,1.9712310705065483e20,4.066396864927574e20,4.513118002337211e20,3.900287145115402e20,4.265782855126718e20,4.3777040483544e20,1.8353467728021711e18,6.270035828176951e19,4.298308831768769e20,1.0718636477436405e20,3.682725858983682e20,4.828116971196147e20,2.6520218759233172e20,4.951994262533043e20,1.9209511609698137e20,1.745903049602157e20,6.5632850845638025e19,2.079608546574459e20,3.646478372529947e20,1.9897028378771214e20,1.2969848463934946e20,1.7372608214283243e20,2.5470154114512978e19,1.5636801037983737e20,6.31394119637409e19,5.534620531009721e19,4.220739606260954e19,6.95648948037037e19,1.1531455016319941e20,3.780024904534006e20,3.2599152178934704e20,1.824275975942192e20,1.292350154600021e20,3.828844023760383e20,3.9851162915223536e20,4.398813580495343e20,9.699007096929324e19,1.2339939653106401e20,3.0664756702758365e20,1.762545219065358e20,2.347131919666678e20,2.2839943012825897e20,4.687048109952424e19,2.4193229214357516e19,2.2548540033637492e20,2.710442761051718e20,2.3203224253359466e20,9.111275495237691e19,1.17483847436246e20,4.876960200581458e20,4.066859226034187e20,1.4590856555066194e20,4.669806614302524e20,2.2763211490460726e20,9.007378318367842e18,2.3358534107212487e20,9.070975728582432e19,4.425875082186232e20,4.3557783834078924e20,1.804364790230753e20,9.83367273431393e19,4.906167337981798e19,4.819662117096081e20,3.959833542895495e20,2.4149626445966203e20,3.148433672080752e20,3.813238291854374e20,4.30949840417566e20,9.276190814686675e19,3.400792250178107e20,3.018138015608884e20,2.4834581281129015e20,1.306992825092917e20,1.0752112796015934e20,3.594756137829025e19,6.954917428312985e19,3.03592096395559e20,3.840474217675075e20,4.817919784884089e20,3.757449667182993e20,5.652854337912999e19,2.411381360325261e20,7.363225964479753e19,1.0158244775816888e20,2.6917695267482055e19,2.0685200935468247e20,4.9788370344536646e19,1.2063485666774748e20,4.2699195429184936e20,2.6377020213327236e20,2.2569888525017513e18,2.558272773210496e20,1.564231957102617e20,2.789065754192977e20,4.155503585660559e20,4.740709220020175e20,1.5138046558784035e20,3.711790021349681e20,4.562962806737979e20,4.7483765431382743e20,4.521475891050323e20,1.7498537186508511e19,1.9655258296513738e20,1.9311969927376916e20,4.7950843470354094e20,3.374343581738661e20,3.76829830550034e20,1.268596513154246e20,4.138115291811101e20,4.54778825139696e20,2.4200320846368257e20,3.4358978504342994e18,2.3453424755640428e20,3.470793191066522e20,2.951200032255408e20,2.5038341621425275e20,2.2140242742734956e20,3.713221782887979e20,4.2199834127088124e20,2.011822741553193e20,4.450656512766868e20,4.8067988559692995e20,4.706802959027557e20,6.707930044395366e19,1.7399195339131008e20,8.58424220747121e19,4.173722952003423e19,1.0052967068807194e20,3.2436932331052827e20,4.380947731569405e20,4.3051341727238816e20,1.981594597395986e20,4.521679234317289e20,2.1322465818457008e20,1.1819471877479732e20,7.764348630003525e19,6.5048685347947995e19,1.7699021046247044e20,2.976322458234479e20,4.990057576771084e19,2.6928022398895374e20,4.331246962902732e20,1.5952630677838948e20,2.2859827629875413e20,4.998273541085187e20,1.8281383779364212e20,2.4993640988136745e20,4.787922569925328e20,1.5334603643858436e20,4.4313972382449164e19,3.0356577146268103e19,3.255872369449221e20,1.1158086063186251e20,3.628695683675076e19,2.1568303662218235e20,1.9972189679598597e20,4.553064108185792e20,2.487618729061236e20,1.40126389709473e20,8.362072919392227e18,3.281837541323224e20,2.144079961653268e20,3.2711231304857584e20,4.4288782005268e20,1.2895100559813999e20,2.217925108491362e20,1.9184296081978963e20,3.190911615669948e20,3.4614893149741515e20,1.325414645514676e20,3.294078668112356e20,3.5407474821441126e20,9.040332259825612e19,3.7355729885727136e20,4.8798307589677554e20,4.190763623767751e19,2.9049485739449677e20,4.374757313875251e20,3.483888699791509e20,2.9493532186738724e20,1.5628675385967116e20,2.4726171359713604e20,2.991896611844724e20,3.89266248522219e20,1.4338037576917534e20,1.704886339380407e19,1.5425055133897058e20,2.1363598219589308e20,3.2650457077420524e20,3.14169488054192e20,9.656368787934955e19,3.689659707897117e20,8.762376398246486e19,7.701767495156787e19,3.370841059010188e20,9.05729774971898e19,1.1228078922990492e20,2.5261308126358716e20,4.588124044750879e20,2.8638625023060355e20,1.6894446748092485e20,2.6047655455695593e19,3.0669520448449446e20,4.904362016806519e20,6.296271629526462e19,3.880190217273756e20,4.878272602720077e20,2.9047513777396623e20,2.9910888099240175e20,1.2554792023135281e20,6.076393129507424e19,4.139069401811015e20,1.3473242498328302e20,2.3491936900854143e20,2.4315935952958944e20,3.2546269449244934e19,4.5693492003390554e20,3.51933592501058e20,1.0842958520337247e20,1.0349592162560727e20,2.416573211927749e20,3.1772059093448934e18,3.1769733794971714e20,3.7172821104596366e20,4.41541848694667e20,3.919830465421188e20,1.0665031334061143e20,1.3891209510937807e19,2.1553888975371954e20,8.146643932110393e19,1.3139857053358539e20,3.7013229155913964e20,2.6424527589824997e20,4.2781909658230496e20,2.8179108491204274e20,3.41506963712636e20,3.414582286828699e20,3.41383563319851e20,4.197148860251015e20,1.0014302555157162e20,3.213177035443023e20,4.243856614327637e20,6.360585317352996e19,4.651238867380131e20,1.362466968581753e20,4.389198678056314e20,5.584201365258062e19,4.2049996577822586e20,2.5750463468924954e20,2.6327973950688294e20,1.4642307939102173e20,2.809051149420548e20,1.8212855597676003e20,2.4982225846368466e20,3.3901125127845446e20,1.799149547730011e20,1.8032049611372292e20,4.498940051275675e20,1.7923593616520607e20,3.400724892276932e20,3.857858956991734e20,3.51481538817698e20,2.585983068007619e20,3.3366142734384234e20,2.282414985009736e20,1.4538559852463768e20,4.128551477768547e20,2.822413007073955e20,4.201526309199406e20,2.0497293441185094e20,3.3355941021043465e20,3.52325663918856e19,5.809780585799956e19,3.0886815867314825e20,3.511309964853399e20,4.4743919142317515e19,1.6388762447857985e20,2.7308503094694632e20,1.2654830194626244e20,4.48711398383736e20,4.476110869809335e20,4.346287240727976e20,3.845052522942166e20,3.237329541379918e20,1.3620358091706858e20,3.901794750080318e20,3.651614483851526e20,4.695971696885001e20,2.324671773464291e20,1.870115299526195e20,2.2899374692109186e20,3.090493288035463e20,4.109997120723913e20,1.0553257517378101e20,1.942300086772475e19,3.0245047339299747e20,2.2377975641599456e20,1.0047782342124918e20,1.764782258905566e20,3.6161328582675137e20,1.9725077010640752e20,1.8358759206065111e19,2.181842424859408e20,4.459043038636546e20,1.2668512042935498e20,1.5748983992689508e20,3.2231996223665865e20,9.800053334440262e19,3.178413230111876e20,1.4717805965627051e20,2.541862312302153e20,4.044764362655804e20,6.901414248368298e19,2.976463320926982e20,2.702326151550016e20,2.1563393870533437e20,3.993195548425446e20,1.3258017444645682e20,6.291752360130137e19,1.2690797731286196e20,3.233517384128071e20,2.561480669372518e19,4.246174212720141e20,3.222893188231164e20,1.9520967402921037e20,2.2465360085962532e20,4.70086108032419e20,5.417976812705755e19,4.996807860099464e20,1.227196010065903e20,3.125687985233527e20,3.276995188573523e20,4.759111655897575e19,3.2594562571438476e20,9.318591108806579e19,2.8230364557250363e20,9.038914670336983e19,4.4498926954552984e20,2.2952538464778243e20,3.7981700613463035e20,3.913190611746355e20,1.2889898314250032e20,3.46591705119842e20,4.068103514007233e20,4.3467465262390064e20,9.482366266817532e17,4.853271154784011e19,3.120912378561766e20,2.834295007039928e20,3.440823403832416e20,1.3610200557859054e19,4.604605465945167e19,1.7516760476019792e20,1.6675336369223752e20,4.7287099604811324e20,2.550998790374462e20,1.0662623767666696e20,3.9375387747133804e20,2.98404258670554e20,2.859564191519824e20,2.591439941928334e20,3.440722002946868e20,2.6264492956538823e19,3.5441552241827847e20,8.758283116495513e19,3.805470602153134e20,4.437870293054118e20,3.069361136690818e18,1.259926837621156e20,2.421073887216682e20,5.110376218055268e19,4.223823662868182e20,1.7424643509802045e20,4.857807940748558e20,4.5579384690789384e20,6.507384334798094e19,4.569823214696396e20,1.3305448324177687e20,1.212484296335587e20,4.4585253435140106e20,5.286857991059041e19,4.842298734502564e20,3.294335144612e20,4.193063993570173e20,7.401983094686964e19,1.8339146671052918e20,3.601033600415609e20,6.336120887831564e19,1.4793523619421445e20,2.819017589915338e20,5.191871479940569e19,1.1901397041917405e20,3.2114499399407526e19,1.2484262561629716e20,1.9924717577874073e20,4.895308433434191e20,1.2902357684297833e20,3.3062696528747856e20,4.0658847851592516e19,2.814375954543597e20,3.923704672601247e19,2.4043094152707218e20,4.273961882161734e20,3.077522518589026e20,1.873190933386587e19,2.6831203590603063e20,2.1672097071067215e20,3.816264777281385e20,2.1204995034889683e20,3.888008631839126e20,1.5049201450499745e20,1.017462084069592e20,4.647765886477024e20,2.347410575079939e20,4.6884762614310824e20,3.526015853186686e20,1.9480896587403628e20,4.590416806001887e20,2.52280284928126e20,3.116764018715828e20,3.897414244222722e20,4.8651651289426834e20,4.1490332876052595e20,9.601108604028081e19,4.165220109106815e20,2.5437376196883615e20,4.5215224585481014e20,4.6228270174138676e20,3.8173532275697366e20,3.063111652622639e20,1.4852164361819642e20,4.680509743833483e19,2.2287365093618228e20,2.8354081235406907e20,4.8258318565617507e20,4.1259548618922e19,4.262781584201663e20,1.3777600930976719e20,2.3433688230699028e20,4.902446602709021e19,2.9093189295095733e20,4.317113996348297e20,2.9082120187420234e19,3.3079466924861856e20,3.7775303846529833e20,1.464584064095799e20,1.2660123600313844e20,2.843532736322818e19,3.5683035842773484e20,1.5447154031137823e20,2.9992372023909196e19,5.973662534800828e19,2.8785516658851784e20,4.53689713703146e19,5.715463022177847e19,4.772395143770905e20,3.106224591690597e20,3.128071382184775e20,3.601643315965139e20,2.667165134671562e20,3.90157896098212e20,3.0098632327090504e20,1.1702429279873987e20,3.9685163606360615e20,2.7853834276880568e20,2.4098652236274342e20,4.8490663226978255e19,4.803095477739983e20,4.655170173583078e18,4.4416254306923204e20,2.0431125090019865e20,3.36130113549598e20,3.396716480397072e20,1.2269793912157495e20,3.8513699648109937e20,2.3731325879829145e20,2.94227097544704e20,3.468390463638499e20,3.626320130435614e20,4.569427389456889e20,2.5902142538606638e20,4.641235086583604e20,2.578060000232522e20,1.9122563175995982e20,3.5546451504416896e20,3.852165179455195e20,3.2980565381515654e20,3.4933821371509486e20,4.558294255516263e20,1.3839077762456486e20,2.7271519605846173e20,3.2040408364520106e20,2.5741816145360598e20,3.292688365862525e20,4.2902667366119965e20,1.5754910961941892e20,6.851498991653482e19,7.376916577439951e19,1.8508528344707498e20,2.8152976305880806e20,3.959017356684652e20,1.8512901429646512e19,3.582434888970062e20,8.65720574401459e19,4.752890219095512e20,2.7325508583711067e20,3.981093980954295e20,1.9909485702483087e20,2.7431796488335593e20,3.097463647823197e20,1.0412803881201533e20,8.73889667681208e19,4.562598100335008e20,2.1452033369183764e20,3.3200754603701246e20,4.5601573877048115e20,1.7146016044827443e20,7.684454410234647e19,9.729833941559807e19,2.8005600535972646e20,2.0834783659997974e20,3.7088596996397597e20,4.124207914837044e20,3.757940365737082e20,3.380706682139014e20,3.4002906872627914e20,5.6805732330806936e19,4.3576675150029606e20,4.932808476155519e20,3.173467090713311e18,3.640520147552693e20,2.798325204302271e20,3.095576492284505e20,3.834565172815167e20,4.952243922788545e20,4.260075800441421e20,3.978989871987267e20,1.244770574248334e20,2.7472123065791175e20,1.865299954753491e20,2.6184572307232162e20,4.592246519123217e19,1.2519235314935174e20,2.2531201114966927e20,2.4597238976418444e20,4.760015246018342e20,2.5296275998974437e20,3.2948785256468605e20,2.4047105711107903e20,1.6647499136380266e20,6.636178669671649e19,1.57123055399714e20,4.517311816958635e20,4.38140412427452e20,1.7642730578291933e20,4.2279949924600277e20,4.3110192409525074e18,9.023292935673977e19,3.105711911903664e20,9.356376649117753e19,3.520285926730533e20,4.7516773061872196e20,4.698310101053737e19,2.590197776667208e19,3.909102217531376e20,4.305625741500413e20,4.1165332868969234e20,8.583424380418576e19,4.736810474699112e20,3.1322088930773107e20,2.32807929318054e20,1.9718328027739184e20,1.5655617427405432e20,4.657868924089303e19,2.8929602001605565e20,3.199031498128754e20,1.3859211088881818e20,3.0764452265682305e20,1.9539011897862796e20,4.595177354403435e20,2.9427140743991063e20,2.3961578482887924e20,4.9235572954296897e20,9.394151903594072e19,1.0236592333251183e20,3.799420689232998e20,2.3079866281859046e20,8.701319769136207e19,1.7027165116069744e20,1.595074094179308e20,2.3427143615786005e20,1.6254265887866659e19,1.0292345540287334e20,4.28789814597207e20,1.9573184841913195e20,5.898622656250407e18,1.0516230342251076e20,2.2578427881880453e20,3.629504855737109e20,4.229429692282472e20,7.50736776225318e19,1.1193904105003427e20,3.2158108718602754e20,1.266283188143763e19,1.2776648706326944e19,1.407822702584775e20,1.857590859470517e20,5.617543843817175e19,2.1141650691879787e20,7.3599619780951196e19,3.716103141865579e20,4.916015281502339e19,3.290878480466664e20,1.63484321903598e20,1.529626304315187e20,3.615010798863824e20,3.4931390565543503e20,4.7228149412553464e20,4.212315167409678e20,1.7003893602935693e19,2.065533524455776e20,4.8815608746150586e20,1.9286271227864537e20,2.0199670119713315e20,7.258006132968009e18,1.3831928221065137e20,3.636552346413269e20,2.308585600155874e20,2.8275975731150153e20,2.114196067833318e19,6.726204244356088e19,4.082115274280029e19,1.2885566974181705e20,4.896666881792411e19,4.306813774212237e20,2.980326521048269e20,2.5064166870931082e20,2.0764366331198092e20,2.1788412220016257e20,3.7614517725710975e20,9.771825552053553e19,4.720438157198817e20,8.559087708047997e19,2.522848734763618e20,4.903977487276136e20,2.965452090879402e20,7.816686276300805e19,2.066963341081095e20,2.0457607593589716e20,1.7562875363121617e20,3.058805530075226e20,5.848431653212283e19,1.602488869308519e20,9.246644013033e19,4.1404942575307155e20,2.2800422149103462e20,1.0400204341176916e20,2.4232157650469877e20,1.307907795616502e20,3.283340608367267e20,1.0003719081192086e20,4.610607736578543e19,4.203340800013602e20,2.107032938823714e20,1.480785426793446e20,1.5948270539749582e20,1.5866243738799335e20,2.4607302862213205e20,3.5415550254641224e20,1.8140793767027953e20,1.6469755553465808e20,4.864338043921854e20,4.556001637375809e20,1.4180282966797848e20,3.403173194281869e20,4.5113821029292874e20,4.771370455994139e20,4.958455103178149e20,1.9482512793727402e20,2.6153889236249965e20,3.027149167612348e20,2.9283343745005614e20,2.3620960354361455e19,4.471446249703387e19,3.0698691032830326e20,5.25113145667051e19,1.570341339498631e20,1.7416568994519476e20,3.377909575538834e20,1.2743336536248895e20,3.2164214106438264e20,4.3677493916731205e20,2.179609806876015e19,2.295579151156646e20,7.470879112139656e19,2.767575998902691e20,2.8859676366832494e20,2.4236764204669898e20,3.180645407385757e19,3.90400925873164e20,4.8865945085610505e20,5.347662961101907e19,1.7809758190072368e20,4.399558276493296e20,4.5168699714060714e20,2.2008576603330216e20,2.609597817186973e20,4.6457873286943054e20,1.854522379899676e19,7.45845051137139e19,4.69286754231043e19,4.554074975735909e20,3.978398859747722e20,4.517785897532394e20,4.7716443766585596e20,3.5220789783120544e20,7.719078922198996e19,3.458172052996117e20,1.9021861682597364e20,3.326681143409857e20,1.9173733824215378e20,4.041326330670263e20,1.604974320168379e20,3.429462317963574e20,1.8452613074280645e19,2.789025583771662e20,4.1625766406590995e20,1.652573308097131e20,4.812118916768887e19,2.516154096500478e20,2.320633439546844e20,2.5812770679869366e19,2.13768858676127e20,3.204045916041349e20,3.684101624012445e20,2.209255072419976e20,2.8409283317160044e20,2.839211822358257e20,4.328359135232172e20,3.411731319001976e20,4.7513965189779325e20,3.01488076342358e20,3.972893116410219e20,1.8974798235267314e20,2.3221225886575536e20,1.5776380724764217e20,4.505364425439806e18,2.5233511568295602e20,3.987946099673947e20,1.1359536316974367e20,4.44318867116785e20,1.5045820390125808e19,3.123249235516079e19,1.8258573320806148e20,4.020854071547714e20,2.0842135927757888e20,3.395930464580465e20,4.062017116209665e19,2.4929700116059718e20,2.0836034761216947e20,1.4186538408117838e20,2.49063291121405e20,2.9207878854723463e20,3.8328712534845214e20,1.7252804946645657e20,4.911916045743368e20,3.97532765560351e20,3.4698345166813246e20,4.4736730389014525e20,2.7850384613055418e20,4.8809394993536205e19,2.5427366540239743e20,8.53376252456008e19,2.1376415787292895e20,3.937246930771198e20,2.8462386939715584e20,2.398458518810405e20,1.6643291727011666e20,4.250224371427914e20,3.7744909641892685e20,1.4582920033481261e20,8.278271416505972e19,3.510152546932539e20,2.512986270279457e20,1.5144659731088572e20,1.0011748646377628e20,3.409921092533592e20,4.256312319650862e20,1.979427643297001e20,3.129087107854395e20,1.6980417580615858e19,7.351686146945979e19,3.7710987907884437e20,3.857244076606968e20,2.7086465977975338e20,3.3456369529528517e20,1.1570382533938589e20,1.2168808549597731e20,2.5120079109587694e20,2.0073058351755906e20,4.900313719717125e20,9.392811023874048e19,3.5861590864749075e20,1.512086439362889e20,1.8543133453699888e20,3.272660374101527e20,4.253054152507769e20,4.841385420471236e20,2.61095235374752e19,2.409525373146472e20,7.351313150850269e19,1.8076582576063604e20,1.0024645843435692e20,4.3731410394230384e20,4.925858075237855e20,1.0859019043242707e20,3.334894226830508e20,1.0117533491562807e20,4.4674092528814594e20,1.9176583441355273e20,2.6753636771629896e19,1.0750359947938121e20,6.5485111540459995e19,3.889072262814342e20,4.0988735963038174e20,4.9619909329258735e20,9.161001206225722e19,4.297569288201939e20,3.13766422474899e20,3.983262349132605e19,4.147195011046753e20,7.637849245500932e19,4.949094187083485e20,1.9382770411569673e20,2.5294783251910358e20,3.754003564104584e20,2.033546468284198e20,1.3509270074944202e20,2.0983120039924892e20,2.0792903245435906e20,1.8848754097390158e20,3.968702103680196e20,1.665525100460608e20,2.8674421685822538e20,1.1127553599803374e20,4.005986299233404e20,2.8977435938556612e20,1.5898095042126263e20,2.9831413031068526e20,3.427744044630429e20,3.337171401951549e20,8.018900465150802e19,1.1301810472237279e20,9.866000145187437e19,1.1732062398817578e20,8.255298402084743e19,7.2765085684012245e19,2.82624282843601e20,4.2174708465819215e20,4.175464680116309e20,1.1878162292595651e20,1.2535258051208303e20,1.8796542274501394e19,2.2326285579238746e20,4.768901932289747e20,4.36940792266089e20,3.6980428428325736e20,2.637925423471631e20,2.1584997377951887e19,3.328301536954752e20,4.671012591514442e20,3.7775905282510776e20,3.362493770414394e20,1.984760153850701e20,1.464357952900086e20,3.8812930159157785e20,2.67904728630436e20,4.248084136696052e20,4.823178575285006e20,3.233114799126467e20,2.9718596680479146e20,3.003726090297593e20,3.897115840604362e20,9.496196854416716e18,4.327224501140073e20,2.9725095715008696e20,7.58694317281099e19,3.479474209566048e20,1.6387012010955722e20,1.0137389179608757e20,9.380440752833392e19,3.0291935237954634e20,3.254118650927197e20,3.0280518487026844e19,1.1486244041531874e20,1.4104638936471247e20,3.338332404957036e20,1.2222869562546924e19,3.358859432961496e20,7.112373334533683e18,4.221338769059363e19,1.0980443625677305e20,2.953900014600646e20,1.9964169581739298e20,4.7759299594530895e20,5.533451483120133e19,5.2666948233649594e19,1.3788116723555954e20,3.131415984610711e20,8.423189923683965e19,2.1821881253799313e20,2.935360261105037e20,4.270157897528645e20,1.6870123574952097e20,2.2848557681174004e20,1.1864285494933902e20,2.6423138039061227e20,3.0863756662321735e20,4.325428883778901e20,1.9702368218080628e20,1.977213486100461e20,2.422024080585241e20,4.644031035212168e20,4.249931292865366e20,3.8308733885665116e20,1.2200901410742442e20,4.7213804382074195e20,1.0677355236391644e20,9.087917956952713e19,3.671991921261569e20,4.179700329003976e20,3.8541725513731736e20,1.8854464018743332e20,1.1474692348500704e20,1.7863979019044628e20,3.556833180861481e20,1.4384714866767995e20,4.1270004249445066e20,4.063829419022595e20,2.3635647135694183e20,1.950951714145806e20,2.5510558421226255e20,4.869862235872167e20,5.895649191902186e19,3.4963372799487456e20,1.1175596036728042e20,4.5788117773526165e20,3.084465675914311e19,2.4816324475329937e20,1.756193985790484e20,4.6017310273699335e20,4.4021185268758125e20,1.4232214769104423e20,1.0548004101484698e20,2.541708535711788e20,3.9653478546859026e20,3.050261060259854e20,2.700637201960427e20,4.3013186737899405e20,1.9447484881393205e20,4.7693179670429145e20,2.7358493553280854e20,3.601116534165858e20,8.236595449835104e19,2.0398703849421406e20,2.528297765441035e20,2.7314594782801127e20,1.5574215157765436e20,5.594620161594693e19,4.7843813496454696e20,9.07220300111039e19,4.810784865707112e20,4.92760867675642e20,1.0968975348606196e20,4.936670514169795e20,2.0236066211832876e20,2.8147208084521602e20,4.275290583149468e20,1.2912449005381583e20,1.3002591939004426e20,1.2066855636974238e19,3.001250851470594e20,1.7391817135115284e19,1.991173238231337e20,4.2713207734640837e20,2.6178342109514822e20,1.7000248272121777e20,1.2046790455883694e19,2.2980588565851318e20,3.085743570553177e20,1.2861364418004733e20,2.716110881020247e20,2.9986128020358994e20,4.8497715967202243e20,4.545329443071564e20,9.981794607127175e19,2.460887289840462e20,1.1151231777481913e20,2.490997998652866e20,2.8420132371942746e20,9.449474123824968e19,3.184794693449538e20,2.66212410033641e20,4.451952567060483e20,3.84233990548496e20,3.9765516089748134e20,1.0522078743816705e20,1.4830892468669438e20,2.863611101053609e19,3.984668819823085e20,5.760796381940398e19,4.410843042823335e20,3.027749481351933e20,8.91884541689994e19,6.974595611300244e19,1.4482260287265536e20,5.554235232506838e19,4.940677423952102e20,2.6148857290878668e20,2.996023546686255e20,2.9464452387496352e20,4.716650101150177e20,4.492266640989206e20,6.393536721739418e19,1.3996267649308724e20,2.5710140699725896e20,2.1771342594122272e20,5.005024012018977e19,3.091438943569874e20,3.5572275661074334e20,4.339859872631501e20,2.6315202724314857e20,3.9239360221161436e20,4.234367131748506e20,4.052269635875461e20,1.4012022499678234e20,2.5630330122127137e20,1.6686230136127694e20,1.0252633593511307e20,9.90883782125711e19,3.1489070113550814e20,5.2593326553350365e19,1.216216616952338e20,1.603395291302768e20,3.789690457302983e20,5.796781578582855e19,4.772823119719501e20,3.331080612515829e20,3.83027579556973e20,4.9530258798819666e20,9.826671419767136e19,2.886391792211956e20,1.593200834631903e20,4.408988797619227e20,3.0829318775065883e20,3.252102832598185e20,1.6080085458317224e20,3.515537069543639e20,2.3625476068606157e19,3.0304623237517646e20,2.2584237863477592e20,4.979412223622299e20,8.97901125283424e19,3.927314126291157e20,2.4529451284597365e20,2.1548255804611376e20,2.6634391908502176e20,8.406715083880151e19,3.6745465669393875e20,1.0286439889795968e20,4.567692296501841e19,6.942008864222321e19,3.582919862367015e20,4.5363198223983064e20,2.536779065090432e20,3.678625327003323e20,3.1606875304322544e20,3.857959779694893e20,2.033838513564226e20,3.0253718469651536e20,1.4744171512414583e20,4.496421372809136e20,4.714745019795846e20,3.587148903657741e20,4.240406380399811e20,2.7521298829842704e20,1.6447261982533267e19,1.411922785646929e20,2.260714820757172e20,2.750002516074435e20,3.29967658190425e20,4.709239999222254e20,9.378053746403713e18,3.1408326237836214e20,1.0850630801321814e19,2.9538041204312696e20,4.044575317433594e20,3.714701075573352e20,2.0865259914689184e20,2.7462456777948624e20,1.0786546918143214e20,1.4363131212553686e20,4.287726915477723e20,2.108392525770261e20,2.747265549278255e19,3.375572292146245e20,3.163960327303459e20,1.7262483786058236e20,2.975805921429702e20,1.4367966328581538e20,3.008680470432899e20,3.172082656936624e20,2.9745179816178967e19,2.115459134129937e20,1.0165855372376608e20,2.8635528223881963e20,3.9476295245956e20,8.866875875578307e19,1.476094419979443e20,2.620240563793026e20,1.8513190708014042e20,2.2078578480881795e20,1.61493032344973e20,4.841647082593167e20,3.968874456187191e20,2.405630309269757e19,3.361900220928647e20,2.0747594390566722e20,1.72708003622426e20,7.29905305197312e19,1.2320136038782481e20,4.864908486039824e20,1.5578794082986803e20,4.753729203990355e20,8.96812472734801e19,4.055803939219713e20,2.1440693324644332e20,4.3719310758054055e20,4.635165901671238e20,2.898245950308021e20,4.216626778352822e20,2.7143513787008837e20,5.796494347538117e19,2.6981725745320034e20,2.8663205102012747e20,2.158107197559855e20,4.8075137348420017e20,2.2042506102429722e20,3.6930772868798035e20,4.484943795338464e20,2.9297023191074944e20,4.291395663874936e19,5.031795753631474e19,1.828625981080428e20,4.778582934771275e20,2.9421192964827257e20,2.6741858341479046e20,2.18429913567756e20,1.2996489675544204e20,3.6295023080649694e20,4.020152903498379e20,3.491926282213682e20,2.6990857206801e19,1.5599292090051926e20,6.98034184018172e19,9.287078830450618e19,4.046734259351687e20,3.596351172927675e20,2.795826839580643e20,4.4619776300033376e20,2.2028696729341057e20,1.1854720863285933e20,4.61560323383655e20,1.6270319750174723e20,1.5251414404579354e20,4.217475214556034e20,2.0863795870871932e20,2.968903130134279e20,2.448207947067079e20,4.3985851968095715e20,4.14453093439933e20,2.1692635630969982e20,2.934100626197836e20,7.685258307155996e19,4.751549148659226e20,5.6344030781363905e19,2.191342889956396e20,3.4498210467201614e20,3.0196934571113385e18,2.137138293645558e20,1.2950761079982848e20,3.5980967432780854e20,3.694717254723523e20,2.062894266174735e20,1.1276374912376124e20,2.345318468737606e19,1.088292727101004e20,4.7584377568383985e20,1.363784052075317e20,4.9124053468607324e19,1.3624830186208847e20,1.369057685872488e20,3.6097067616369218e19,3.183222945623465e19,3.5382941656771916e19,3.625787600037151e20,3.049420113045049e20,4.715890149923975e20,4.2225826389753594e20,2.9256165977428273e20,4.65524229751116e20,4.6153550240968153e20,2.1595837522463952e20,3.596683786832722e20,3.9141073605432023e20,6.976781741696325e19,1.2297588111738056e20,2.5899807025674165e20,2.1047869663564476e19,1.3319306013721793e20,3.315548995613776e20,2.06481234198978e20,1.2746858322874483e20,4.030801491652837e20,3.3020055382380944e20,3.292691296810061e20,4.3227490328689e20,4.381342663441012e20,4.597984340359451e20,3.404955214409896e20,4.582120363837129e20,1.4852771108136042e20,4.765353938485634e19,4.303636373414864e20,1.971093322579539e20,6.88960385689189e19,3.235999112463787e20,9.383270657940423e18,1.5482386464027915e20,2.690374532985765e20,1.0580708964174035e20,3.879219156036436e20,5.963416819448231e19,4.311644770235485e20,4.538920118411837e20,2.960372134634927e20,1.668180448399173e20,1.3817093653828565e20,3.117322502180736e20,4.852853647621835e19,3.5944293878197256e20,2.2887827593430037e20,6.323208916613454e19,4.9036611279449666e20,3.639129402959798e20,1.491557344520237e20,8.371921736786359e19,4.0472866219236124e20,2.611967333239776e20,3.247679724920061e20,2.5172795144470227e20,2.3327145424144076e20,3.9421988141262e20,3.1267503352165754e20,4.299339487815634e20,2.9140967985665045e20,3.732497931822924e20,7.354194307261952e19,4.465400893494538e20,1.3919054528562258e20,2.16209416180723e20,4.9521082660561053e20,4.0066297677011635e20,8.315156550031439e19,2.2124833325860644e20,4.742720691881645e20,2.197655424669256e20,3.125812158074427e20,4.18657897784547e20,3.5532593429826e20,2.4452383683978468e20,1.4048776285468867e20,2.8269394346451465e20,2.7545635683215075e20,3.2038807873975163e20,3.767383215476464e20,3.774098792649609e20,1.9202692353429972e18,3.095267720338618e20,2.774754376665612e20,8.654486673152056e19,3.0154681988308265e20,3.6980049718275906e20,5.796328633219494e18,3.360568554399651e20,3.4588705466213866e20,1.077241539948282e20,4.423354571635429e20,1.8133745774916475e20,4.0038017245071075e20,1.715210373149532e20,1.2938141106621893e19,2.995945112739305e20,2.778277960245229e20,2.8438573148676627e20,1.1731268720608579e20,4.767096713909087e20,5.821273980515146e19,4.8838015959158705e20,3.3139930294201116e20,3.125548508094288e20,7.110901286230514e19,4.109648095155671e20,5.100167110932768e19,4.0906200151441107e20,3.592050573256265e20,5.912831548195474e19,6.387537968969148e19,1.8038414873626922e20,1.8429243010581463e18,2.0577211927248794e20,3.272971658582402e20,4.017666909652195e20,4.1018622066881855e20,4.940564451424304e20,3.168004951361908e20,3.018323031415735e20,4.522374816083439e20,4.922181244699719e19,3.024920133759678e20,5.483115558513768e19,4.54695880073842e20,3.11118440764144e20,2.8821102881348875e20,5.361680186652229e19,4.9628699260533074e20,1.922414372727299e20,5.660782325541646e19,1.99823875448978e20,1.4365635212970168e20,3.66076708203655e20,3.61167297599848e20,1.1527195146424818e20,4.210863442875577e20,3.080256098281956e20,2.977235771488746e20,2.1840790226011236e20,4.207619573222583e20,4.9481732958592244e20,3.940365185790345e20,1.197525541939845e20,4.014527369295481e20,4.347548143435532e20,3.3796927335237943e20,6.986873782461878e17,2.5098913177008574e20,3.739674055284172e20,8.992582864168659e19,1.548241397842961e20,4.731685725724721e19,2.3044282867008392e20,1.2986145842716634e20,2.5938573365077577e20,1.393815739936971e20,2.5994002918089638e20,8.199759932725092e18,4.248271997536879e20,2.2041689673544696e19,4.309180829750664e20,1.6968720076712683e20,2.5992815392346892e20,8.206612604217783e19,4.906709215512894e18,3.58672464787282e20,3.9572010062704004e20,4.442048788276446e20,2.4619402342195413e20,9.699946766069706e19,5.586557377990614e19,1.764881601783742e20,2.4514437504772434e20,1.4434020959969196e20,4.085306413888919e20,6.346841171613005e19,3.846895314904509e20,4.9730377244958936e20,3.468921439435581e20,5.84045758568375e19,4.0309798466050805e20,4.811980153330984e20,3.854287019355071e20,3.227863547562016e20,3.983872081170926e20,3.348097605342118e20,1.2345839514238755e20,3.919746250636963e19,2.5177124491154322e20,2.2609746397026432e20,1.1452319929634031e20,1.38108637551279e20,4.0512342096404126e20,1.7804838568009567e20,2.143411931921546e20,8.197675272472715e19,4.026317383649506e20,4.1668765668906376e20,4.82448416655682e20,2.1060597543373953e20,9.275213112777192e19,3.9548845221856864e20,3.502370255602058e20,4.7771676068648485e20,3.083417799059268e19,3.7528516863170406e20,4.380450393955953e20,4.881037293930188e20,1.0792518320442257e20,3.795111289614975e20,4.226819617217098e19,3.7930312700738686e20,5.692328478105446e19,4.6459719140200376e20,6.052964275178368e19,2.4929129665135352e20,2.4746900564743098e20,3.8934183021514686e20,2.3829752611070067e19,4.312647364706879e20,3.992781430315615e20,3.1744918519324934e20,2.225453326854546e20,9.526262165766842e19,4.1419254878265134e20,3.2673541159548276e20,4.2717237433017795e20,4.4782601409740925e20,1.962679605324574e20,4.403830420105358e20,1.758185905041769e20,3.811541735071864e20,4.591658874545531e20,2.614805737671254e20,4.261746289065735e20,4.974811316484993e20,1.4730877254705049e20,4.6506475025897275e19,1.9737245665174487e19,2.779462726808453e20,3.063308544404069e20,2.510216513145589e20,3.6227204941252605e20,9.641023513475844e18,4.282059258436266e19,1.498995658923935e20,4.579499067961386e20,2.5877219980025695e20,3.250079249077164e20,4.6151792076866585e20,3.9916226867614614e20,4.06057072100918e20,3.775217755239767e20,4.7882780192139844e20,1.8710061062686324e20,2.5606455010318225e20,4.086039207059199e20,1.3660660487014275e20,1.628312491479421e20,2.5108548685255983e20,2.7581373833290413e20,1.2758079347988344e20,2.8196723775897194e20,9.052289382696421e19,3.349963106532461e20,1.93941849320748e20,2.379693815143525e20,3.866768255264985e20,3.574586188590663e20,3.9284699866529556e20,3.918374803143801e20,3.1480044285823386e20,3.089695132565948e20,4.216852447903713e19,4.130830975608321e20,2.2178980706747785e19,5.390418005070452e18,1.581308750430794e20,3.177995883075515e20,1.2587980751069189e20,4.1479426523438796e20,2.763694503297946e20,3.7004187048654504e20,4.7027436238074026e20,4.920346074287591e20,3.396924797166506e20,3.249447575026125e20,3.335707179481883e20,1.8358789803208553e20,7.852756740988908e19,7.79903831464418e18,3.0330485700802354e20,3.441775997835747e20,1.202035481692204e20,4.864859525160784e20,2.761422102500547e20,3.340540455793599e20,4.5611439919724777e20,3.7420801399621394e19,2.152500590735873e19,7.150605359544554e19,4.903501693947852e20,1.1655855424566064e20,1.1326934150159607e20,3.0784139736921126e20,4.8171305191278674e20,3.72779563062213e20,2.4956603574845466e20,4.980187225006554e20,2.7866893124846787e20,4.426848482875501e19,3.299223423628632e20,3.47145255643975e20,1.069367103375441e20,6.732266802888931e19,7.176650472263241e19,2.1735769537562195e20,1.733253261853931e20,2.3612527751271973e20,7.29647674341447e19,1.504883728123742e20,4.395450716343854e20,2.2943049909501022e19,3.3197815853234854e20,3.951322895301245e20,2.4466337835219788e19,6.066639346681951e19,4.5567287624546504e20,1.5984319439795059e19,3.958666084329455e20,1.3977225606207844e20,6.678896697499981e19,4.480021220789606e20,3.123914233547441e20,1.6194793522601165e20,1.6581932427094154e20,7.800489657791316e19,2.3517031334946426e20,3.191067219152007e20,2.6338699919096172e20,3.097348937233802e20,2.8902187282665403e20,1.5237358567219937e20,3.4423691239082793e20,8.83009711810014e19,3.457953602642979e20,1.4103606485423437e20,1.0013751656291736e20,7.843365379504836e19,1.2262297379127835e20,2.3019454962375603e20,7.355850144644039e19,4.363620044557524e20,1.4666233766690823e20,1.1621556326427623e20,4.47454826724879e19,1.109557986590547e20,4.2170552303383544e20,4.1065722929424286e19,3.488825639435362e20,6.637231583181852e19,5.124709550000378e19,2.2219695105948605e20,3.353993589027606e20,2.4740439803070595e20,4.1881479981832156e20,4.242604426179164e20,6.915164970464238e19,1.707296504059349e20,2.4239115213561237e20,1.940211323436716e20,3.452186061922384e20,1.3266557154386792e19,3.113465700258899e20,3.5552317509726955e20,1.6311649030328674e20,2.709734339449543e19,4.967680819882213e20,4.567238718694122e20,4.6304729510643506e20,1.2072946640361587e20,4.832706975306967e19,1.6200017771876657e20,4.394845865575904e20,7.690492214801492e19,3.375838090037881e20,2.491353961833792e20,1.9224230437587904e20,3.6140239893630334e20,3.5510136728888474e18,3.811621900243981e20,2.4616593439748846e20,1.7588533978915878e20,3.27478867355947e20,2.171798572639363e20,1.2389938456688615e20,4.2315815159604825e20,4.921327241877502e20,1.7987993573726614e20,3.715992231927115e20,3.214469404914501e20,4.255973144253047e20,3.0931296665644106e20,2.9392153358567408e20,3.0749281571928576e19,1.131268501674087e20,4.3137416067288734e20,4.798514804809643e20,4.341861154417342e19,1.8549389190093147e20,1.3009118920020158e20,1.7173618581373357e20,4.713170706046487e20,1.164483681761258e20,4.211568814992052e20,3.40122023382775e20,2.992051146703588e20,4.8603837370573036e20,4.927061799897428e20,1.0464129022178065e20,1.2784229332063468e18,3.812160124939318e20,3.072738114536273e20,3.726708609434381e20,1.7797062671201436e20,5.557939450614097e19,3.9666661499652525e20,9.761339166589911e19,8.085893651803616e19,2.925877898204192e20,2.41917209957083e20,4.822636525244261e20,1.2466619987164907e20,4.8113475641481554e20,2.5722422779766247e20,2.396864051022698e20,4.951242881668983e18,3.8036823599686484e20,8.599627286834543e19,3.008688621591929e20,7.93028140673322e19,4.196496453403801e20,1.8128988645513655e20,4.301929028214992e20,2.4055221731171454e20,2.447031070546933e20,3.040728774091977e20,3.213919085194501e20,3.1969249228491666e20,9.574620274464063e19,4.8262145767511785e20,4.2166207689511574e20,4.3883748615908465e20,2.6366409154416627e20,4.318315967544227e20,7.780131446000799e19,4.538583441672537e20,7.5067614798149e19,7.140870312875625e19,4.340587545207542e19,4.591255822911901e20],"y":[6.95161644879176,0.23531949881137937,0.8318418369384051,8.456320993956632,9.664188051917371,8.100184850607295,2.5734601447891645,8.117040850668797,8.438625249663318,0.3718174475894931,5.481558292379859,4.253873991456968,7.544555584306552,1.3828186167648937,6.293439961742128,9.26478804685449,8.202915648505797,1.9703031655212977,8.368764344962836,1.5922870593269633,7.589285679288772,2.323681135969146,0.35198308918487964,2.611311792275779,4.584461709143795,8.033474615337202,4.70562451320318,7.741908120319682,3.39581626604308,7.871502595375369,8.717187941916759,2.428891443168848,8.27817579108242,3.5687540379926164,5.261043853087159,9.786732433925442,5.798316374367766,5.926817347893318,9.363839601148335,1.666803183482195,4.522959439411758,5.753665172618142,2.5303510229991435,1.4005326762245895,3.9483902729745477,3.0081100697066065,8.473065247539148,7.627315275176375,9.384910610705932,6.74334281997758,9.8774450457815,2.61050981299084,1.2324178742007663,5.072451935345374,6.755270106888838,5.729952774888875,6.721921630758835,4.230865651168458,9.49626444257489,9.587521507852546,2.0920666372845895,5.941447905821873,9.052953644333456,5.056127092411286,9.36088853807927,7.265732891388091,2.7462138770614453,1.5309893402286423,5.869031359863371,8.586297534178971,6.2118384059803695,0.7093439968228255,3.8237527653355707,1.2219094689517551,7.726651372832021,0.7715526478307821,6.723566052045383,0.6903067922551376,5.8278739231553365,2.1448492301175595,2.2026401795230175,6.1261007123688005,7.077294685405674,3.811507415361306,7.047096399779861,2.9587402515554198,0.5839995595347325,4.192747446063593,6.469448419131013,3.942132235478921,9.992911683752752,4.878153616789568,7.1735771660006105,1.3403683863317006,3.1437210873139367,5.048056549204461,9.452613150571981,7.749658127949046,8.774262306848216,3.788782081999634,6.588012109992069,9.017294688112997,0.2486434977770957,8.952184414802906,6.6381697165807205,9.285527712587717,9.293931599366228,6.954475364814272,9.636439825306681,2.494847217717664,2.873697920697836,2.2497254282398593,8.076628390073475,3.3197640672261377,1.824372467340869,6.520346266936991,2.0822036431444033,1.1417410937028905,3.7777625239386214,2.9036977907794217,1.0352716923269478,2.9363265817200856,6.994868540675217,1.8724400520239226,9.517744774202516,5.818755082793562,7.89623450979231,9.085366528367938,2.326023953810296,1.4161537776123057,0.5005335171538283,1.745232271583973,3.608007652563127,8.740441020562553,6.717559270066884,3.5278717917431135,1.358321551847016,5.399424245631986,1.3471428860884382,4.9824688033721145,4.274133718893658,1.7151375787989154,7.2433258983377335,0.6360663132374356,1.1307330152458006,2.1607384355878634,1.7683587554308078,0.8059621393157057,3.0464218338525875,8.651913695164563,2.3339200366470516,5.3638443257351405,8.411772207419132,6.6858451443027755,0.23929659327814434,1.0516367303312069,7.0939519839233744,9.404864583509397,5.51470335895246,3.6350015075964204,2.112948237285084,5.5771483986095385,0.5583752224901772,6.047901484013847,9.140342952549796,7.399328436073246,1.5218565765620296,7.669629615241754,4.236375708262724,6.347314470632401,0.7106411373056398,6.3969441834950045,9.092454824888707,1.9960842129234035,8.832911088848663,4.038561343993477,5.9771785463823335,0.7581672923990757,0.7661236751860601,0.04293377090075379,6.017378682789639,1.825736523861079,1.8015766815938938,8.365696348683114,4.857868892979626,1.9972064241910736,2.759100364054683,6.710454883729867,8.597705287200256,6.5828338881298265,0.05913348462862844,4.707563969683623,4.251535104694613,9.703596992086455,2.663241627714058,4.713201773425723,2.560275493950963,4.933800082534364,0.3976252302680239,2.341183576074153,0.047931334417460336,7.970373759573367,6.856620523079206,8.34186657615483,0.04115059542688093,0.2794344670568971,8.727029778589102,8.259157991546763,2.016334155471701,8.483947181794443,3.555897809746509,1.000730736425901,7.801091725995155,2.0854649671061374,8.701969163952846,1.8157676311331195,2.2826000811014344,7.93316196863847,8.907902170052223,4.090695178667632,7.160805757213016,3.3370868635830853,1.4248908467688581,8.78056318599684,6.941561863959297,2.0876129704018864,4.189940469875582,6.220914627566339,4.457433623666018,1.442142967169714,3.618956523040544,4.170578552969512,5.6555598967978336,6.939870088116176,4.4798125059503935,8.465263918192274,2.2349600953981854,0.15926108248107362,0.7930096855766844,7.73615602090597,0.3277688173619808,8.701890795199095,4.580754785677122,1.9367921738788096,5.030434703138073,1.9645311788661801,2.495197588203969,8.91252589508847,3.274635290524439,2.9917193732921255,2.118995305838376,3.2456276891831193,0.3813812464854982,5.853923315265898,4.8487461421238764,3.6507677225750124,3.2521621047689573,6.206823756419899,4.021634867369492,8.145764186545097,6.07704008914558,3.277027765274653,1.8877982098720147,0.7329607269954497,3.4609631679477326,0.4166195551408547,6.033096752944602,5.625936828691409,9.936328715364711,7.767832662295073,9.832784394765943,1.8118921437723112,4.39223205801621,9.641078318332367,3.5306718012763874,7.33714583301214,2.8837114813102915,2.7464093476908435,5.849060772876951,2.3165254045891723,2.9146504892020833,5.22849545735345,4.201946596317735,0.9579749970984208,3.79792407991527,7.968869120718852,7.995326559906637,6.725474678441152,5.366786403560142,9.31150235708094,4.903975118883862,5.361656297873475,3.858646631292575,5.313061265301153,9.063662374277843,6.02400613399052,5.294658568468403,9.841094500736274,6.287521467352319,4.970444831217772,7.785663955948814,9.469561259534105,1.6610208668647775,1.7474570183721116,3.728906860674339,2.324623869469473,3.9738047001367702,3.426936322501357,5.894513856269967,0.4151715858144778,7.334717858531002,9.172275479165759,3.853957499237989,8.861464074573075,5.25951477938443,2.557706805987743,5.202012481299979,6.151824102286401,1.3828337079383735,5.63115912885449,8.876258882724798,1.1578141051173707,1.5409262610680352,9.140990410778507,4.403149298878547,3.5908195586355163,4.751580248398976,0.8420246399180964,5.0208716706265175,1.1812654638808195,8.740199347864607,5.175027050695907,9.505921088099626,3.1616295412478945,9.135915121851058,7.745930297654745,4.122996033095159,7.482151686487012,1.3931551274761667,5.32213185614001,4.738822412879111,4.25764605546054,9.472526128709745,7.227286277222682,4.181037860351559,8.387512671132331,3.3805137034708013,1.771868730166044,6.571727158900179,8.979899654708468,5.655681341828624,1.5985608382255923,8.460470942892501,7.496744301821487,4.722846434712629,9.436858383246609,1.928891753142974,9.273483755200498,6.148124521145657,9.934010260185572,3.847797518147317,1.5892721378876329,9.13628286361205,3.0575029172255244,4.9836938959252555,6.938946641160508,7.4440165962453095,2.311077468731991,3.016314999004731,6.367058448336045,8.398186348444023,6.866164972906326,4.675365305180012,8.821142455785175,7.024939317724296,3.0945182036182706,5.70052719037675,3.916184479891914,6.78251215117225,2.80959179583258,7.6121169656815235,4.983613372839133,5.623962522295811,7.237971347544946,2.62585942171624,3.6867764052882945,4.721973858707942,1.1752511571596158,0.6951319873043282,5.566476253110318,3.0681310306356337,0.4359914331514203,1.6022099488921604,8.003885297863345,8.188877102765057,2.301930570032339,0.9620771618070989,3.661769769834773,4.461167070407443,6.789895158538611,6.136232655115896,2.3760741247900894,8.472063325339462,4.86715665794076,9.748619770464016,2.8725284484476954,0.7016430685401409,3.0618314496340315,3.579416399801698,0.8161247898794866,2.868091902802612,6.800647055014936,4.46921798432673,9.714929444410854,9.451669051655639,6.770743607721218,1.0814999329471275,2.4655976018159533,8.065297302449947,9.605802296244727,7.752232492022269,9.952007268779276,1.3381036608770658,1.7639321524492235,5.731250240071746,0.9581676854581023,1.0997951736493983,7.674220901776363,4.0469417616281085,9.402001361054648,4.571122094831783,3.976183025391624,4.008499587795935,0.9484530188748408,5.048786543765723,6.787641364630417,7.971556956579415,6.903886459197116,8.65412810186448,6.753848851137384,0.2735426146894737,0.8940885647862706,7.709017004676953,7.201427062118327,4.774767216862631,0.4107266342698612,8.791619703928482,6.057381418601803,3.394917609602163,3.2647116785460484,7.344546856501408,8.736317183623164,1.0691393149609163,3.6823229774148514,6.246519689136768,8.249210216239206,6.96146156013694,5.686744094934209,9.860760371344735,8.702337309302624,0.433053341911227,6.414152537800753,1.553264895322588,1.7762868946173849,2.7418146400714427,5.785859917210763,0.0102371661088696,9.793969434338072,3.6544629483975735,0.18271487000330433,4.1450612049209585,9.790298109733564,9.435429174301289,4.623470054739688,1.8454202520146756,4.792792319527792,2.9707639896318794,6.3957604887100485,9.842048738164094,2.2802899400783705,8.722990011949731,8.829822939830258,7.704788870170802,9.033419490050477,4.744381560321964,7.733474003274798,4.954809194386596,9.408377106701849,0.17360670248732002,5.196764041153865,1.0942891416671618,5.678686775499756,3.4679852202080763,4.241791994258223,2.182694408490764,5.903644921004112,1.5182287455161858,7.88079068094528,8.277225495430965,8.654527018254038,3.777265800792895,5.16115689589065,5.110110882875794,8.005003507365164,1.0327696662791275,8.148850831353005,6.655065341885125,1.0117152622584835,8.12926011626207,3.2490386292294513,3.1531548800319795,1.4842270097372223,5.421014518539407,6.190742545645459,7.184776043014854,1.4981051109376708,2.3729010071988044,4.446013218711164,9.211527819981223,4.528322083611542,0.4791752913218783,6.549899008267924,4.951106766559055,0.20082668815225801,4.642860237165172,5.08927873928962,8.45832433632624,5.396696613681926,0.5153759907681543,1.041418518596925,0.14260752720099523,1.378481573271032,8.662782458301184,1.5111312886054584,3.7896518811507685,9.399059422611806,3.7247215379011944,1.4372649216234201,8.361730981032695,1.469602130891503,1.7028694421409296,8.266545611515335,4.830458936211121,4.467329450845528,5.778964910474667,9.905248156543943,8.424025303362251,8.593650748438918,4.384687642543794,7.582583286381945,9.3584061922963,9.742500297917466,2.0902978018341956,4.508641529675906,3.61423226743133,9.827465468395554,9.312089402178556,9.707247334179355,9.468810423971517,6.7564927542007345,9.720482556921318,7.6273389033877255,8.615784188951823,3.3385949867219167,7.97051705718834,1.0937859256930427,0.36102851280479964,7.425905604207427,2.519513208224872,6.5422212735514,4.950458161496087,7.45454636074539,5.365711030547286,6.173548941148117,5.624386861431501,6.985509301166387,2.9469024184606907,2.3681366539303275,1.57188223455204,0.7575822729507142,9.490314477517366,0.985386530370882,0.38249640513093874,1.7329304104111887,7.332219824135673,2.4404067716211317,1.5963601813496386,7.791647360855909,0.576134410999608,6.389636749908161,6.449242059434802,2.7012643544587425,2.895158111218863,6.983668306865213,0.0707167486346505,1.617376933127297,6.766067174636827,4.551588517565044,8.503453046568403,9.524574129415399,7.481521741777676,8.506021970012107,0.5380455633100178,3.172594757993503,8.262790020399262,2.1341927991303966,2.3737089452689117,2.6755215272845954,2.687534360012579,2.9315482001354387,6.109874305477235,9.628898151148821,1.3924214465443008,8.992193214652746,2.6033620599261043,9.714342443826528,8.53736734343609,7.6877123510730545,2.2675167379701042,4.663237156755805,1.660566248015446,5.975905388736454,0.37734722166672174,3.031004696859645,9.008469206261443,8.971307807076235,9.413062183337003,5.52746552302314,8.84837440671029,8.11277504020685,3.2718502207171243,5.991587533562019,8.354445070284024,5.369888388357008,0.04085530092028833,6.630850894277637,2.7305198773547703,9.978592673604151,3.3260605603013316,8.948443337154572,1.0885385367030254,9.818035735100052,6.286920338884592,8.986823573804362,7.296571998572078,9.3792969187272,9.977407471352727,0.00772964681837407,3.020679133614461,5.162999450167957,4.182102723596658,3.696853373014626,4.1765569875286666,7.5696387653491035,4.358641247236421,8.725003246719773,9.360567816690198,9.66371686132769,9.59071530915957,7.859433916583786,6.4476689130862574,3.440072765041907,1.2171056276944603,5.506532661497379,6.580872491268687,0.7076859032258087,5.652541107448622,2.7795910589237485,1.7935297794630756,0.2803694986006444,0.5402126122936535,0.3946799207992857,4.742058921718721,1.2266940672975735,5.792471284045334,5.3897393140028615,9.249194221803673,9.274504883323186,1.7309000517865014,0.8213630072547318,1.9597544758047347,6.297526233990318,3.202227748821472,6.3281200853365105,2.776954135982288,3.7670728094870753,0.47832128760833204,6.731690358398761,2.7337708295162297,6.884497910498778,4.301776617399307,3.6306383388626893,0.5991377316671098,6.302922211904047,9.405111314468723,3.583118400173481,5.286408434841354,7.704421232381823,3.160249995039661,1.36964432504316,8.871299305803316,8.510223499069033,4.461591211625554,6.799969369488734,4.332005047853667,6.908652902663755,5.419109000384788,0.910886408604551,2.756514918214142,4.485957001155793,1.1000801629976353,5.913657336854277,2.0182002413502986,4.427587606968575,5.571168726682727,9.979787692152478,2.75855076567199,9.362734232219175,4.166482222589579,8.544505803082368,2.6877882029216726,3.269102874213541,9.776480667480868,4.154230888716772,1.0837391394822926,7.48976621808164,3.5337069613810392,0.44399822132713207,4.038533824537946,0.3616330883779406,7.914485701191153,5.509862124921646,3.853333954576935,1.843344099378088,4.957155092331485,8.546126182609461,8.016244106517346,3.9217862018575698,0.7603297059813752,2.9245718440319823,2.1832564740230884,7.64252619863824,3.6886475445231315,8.789039106138905,3.242550352029827,1.0985327686583102,6.563145517661219,3.628306569950328,7.425317028791833,7.307004097352358,5.065059349041896,1.3358077357942233,1.9039660832115357,5.6097705186458535,6.47186027238381,4.498157645393307,2.6038055337495605,0.8354307712308295,3.9281026501428196,6.475256994779212,4.525098250837166,6.696273057958751,3.64690888412716,6.605793091791671,2.2533937563886752,1.4093717487870505,8.194713042813639,5.403858924977243,5.925741442089362,8.0162561216044,2.273675494513119,7.61216948906525,5.531219530270875,1.5035472475140221,9.719199721723408,5.913413120607779,4.486793792860558,1.8657575321951025,7.976493952889275,2.586138867085751,4.289505724582954,1.250987500262375,6.804328679441599,8.154461454263833,7.313119198493085,8.177922979438515,1.6896127045315434,2.7098567181352773,6.8818775437312745,4.225426881676028,7.387181099100472,2.967077384856205,4.533032633136488,6.095015473761616,9.143477837377382,6.134433054006489,1.5849153719133935,4.38791176933095,6.047041957677749,6.929586626562663,1.4796219711402858,5.148104986420995,6.7942995223928175,6.53090792116025,4.890262337054237,6.144702940157449,9.625216048888916,2.866246608695268,1.044483809775295,2.7521380999304714,5.706560440527606,7.110971169976765,6.166313252565518,2.2443173434117547,7.236468091086542,3.7460779949518153,0.04242552757825924,3.8127336148269153,3.878579483108603,8.889606847380794,8.122142254609042,8.986599316222577,7.281552127664476,1.2183787445458505,0.8019320351376114,9.179690091973917,6.7875812875003225,1.5681167096038595,5.667504369278957,5.781091591329675,4.62604250466608,1.4529594774644938,8.538382933035063,4.853470009343353,2.718440181485361,8.94126516422012,5.27849166593391,4.828954575324263,6.616963785850901,7.2839958562217,2.3256508946444807,5.231451577888314,7.6625610431296165,0.09969360299605712,5.381830270998979,6.733088481163147,6.9690562677120305,4.991974761729253,1.7002432915184396,7.707295098840648,5.567319517780116,5.005694323999046,1.290814064440945,9.067836311523491,4.385646476385956,5.025101640937159,9.464020307139291,1.534470668758604,1.0592573551267703,4.937221104338168,5.377061722696444,5.9475883452362925,6.714583035035663,9.305105362193618,9.630655591102052,9.301556555735084,4.828625648199325,8.232536364481003,3.724333422624867,5.838019281969453,0.1947439473075807,7.763612022736043,7.935314779052064,8.500790495716876,6.020505275236468,8.653466847225001,8.3957575849721,0.18663846993385858,4.457378405923118,9.158319885861467,8.312104355131657,4.8586354290626845,4.063247539099498,1.3516606073907833,7.914408039305528,5.493569851495108,6.813095105521342,2.4104206260664984,4.414751731030711,4.738731880926718,8.633531533473896,6.6391576018282805,7.811138894420383,2.4334696658172215,9.66812175884693,9.588623033361266,8.101408408564925,6.245845361032384,9.265033379184338,8.663893740295803,1.4383511462445164,7.09321197427219,8.42520876240705,8.40794357249334,2.3137587251812453,1.0690957043586868,3.351806883145092,8.825731185736744,6.1309855214788165,2.134164924552061,7.832861114764468,6.15638462991433,0.07413187699176649,6.054124681810114,0.07986018283532736,4.8832891851999225,3.000651010772666,2.5199174663249915,9.518841685465068,2.5955470315837372,5.149891210417499,4.599153652734559,6.849026365148542,5.442602896728999,1.5836857089591028,4.631765894986937,0.9479648592168666,6.301609104112298,9.474761116036804,7.758231621678201,1.2858455866099516,7.100291104275255,2.5105225973138543,0.21850326794752184,9.777388831421456,4.3773268537239804,0.487048478651807,8.95657706805589,6.189548455022394,5.479240273078515,1.448471650153229,6.30012513705405,5.68013115577325,7.198945655213391,6.258074183263487,4.622855724915977,6.870553520325978,6.90173833348841,9.463353896987067,8.855067633406922,7.741507447295821,1.1139438570678928,7.276614961523922,8.367940401691119,8.134138791898177,6.757580911602341,9.868342068995394,5.0924771495741075,9.239052841983094,4.100553780298113,0.5743904926722354,4.929740408794947,6.802607363179952,9.3921800359,5.03963203016104,7.738886171954125,9.190052237733427,5.537975192629707,5.801844467987422,1.7873388678793978,2.946434350857655,6.443788525023147,4.752194253978258,5.4528452963847664,4.742619063265465,0.5508294340883757,9.573938843742916,3.453353433978914,5.749042649505166,4.890711895165115,8.471663066449306,7.567672375600374,4.718955073574654,6.269480770362533,4.706919351846761,3.508615634357607,4.883823363099355,4.284256829973651,3.7412797820747823,5.306606139860045,3.261150191651918,6.1334009349201715,9.786157183018071,8.438442715398175,9.722495472009772,4.74182532573422,1.8916100396839097,5.975119368479556,1.1764605323136856,3.32960565628752,0.35888898098036637,2.9466228953673177,3.3960186519355053,2.192306071774852,8.774130532401688,5.766293317464211,1.679954581358738,1.3684661516264918,7.337779961895406,0.8948424133152133,8.270095641081241,4.6188757057948475,8.147958137171624,8.932724790779403,2.1483678304056406,3.101502223588728,5.881527103001324,7.179575205571004,4.791556450634312,0.7319904127452648,4.137265117083207,3.197975521918056,1.4620318400761645,0.635166901591907,5.118226111147846,0.19111451203376872,5.691457215434321,7.184206851275441,0.4467255604700071,6.7490927061420525,1.477377366398196,9.805076000770658,7.855814691046843,0.4040443283177986,1.1594105122272391,4.988253718949739,5.2158716098101054,6.517446577985089,3.3956185427219165,6.387990650826982,1.0520257113386167,6.218685691084326,8.703989048408744,2.3271812159910255,6.060428282756112,9.09022640626202,5.850516204341492,2.692032425770574,8.081599750929012,5.861374200248851,8.833158209619846,1.2048824573906358,4.392767566742517,3.7706224178293937,3.757189521001699,3.494906356374826,0.6015088359277942,9.365897465642878,9.774306541235871,3.5682126143166757,3.7107341633325563,0.15061709941936008,0.4679770300114272,0.9367463599715153,0.9348629272155118,8.882625244741124,0.32992077498059436,9.793769736878982,4.743162578480793,0.7533595379982783,8.159183192718187,9.433901815487133,0.38229437542599776,9.966172093943847,5.09078245112776,6.391483018502418,3.5881764815674524,3.4861897495942507,2.667667960909003,7.419783499982296,0.2789609693794315,6.713057968775661,2.8746430116778665,7.02892545663509,9.626764884860885,1.540659242402106,8.80316676059719,0.7445544477705279,4.941812940311766,8.81850914901655,8.835117693510629,1.0600377838834163,7.236733062759822,3.6178148930863676,0.42175269251637726,9.307936978066389,0.37876116766449197,8.676755498359793,9.522225987853325,1.0260023323612188,7.118141414036915,4.132273098720053,6.110485508252865,0.3418307506377316,3.838242531046795,1.0694919064887054,8.896940253775394,9.692625910507163,2.932452513327571,8.969881128608241,1.8482882494889152,2.9329005579731335,9.524745714622645,4.872636337771952,7.841947651218907,4.395915578541726,7.884640853648639,6.233868922629746,8.9773149519308,4.934020608038834,5.078606267054061,7.890345825746302,6.471720316994574,6.229588494701729,6.767453399942309,7.939398899232355,9.807902601726786,4.3384238290850865,2.448658206104702,7.411931613451132,6.913396525973398,8.479400662839652,1.232150194944165,7.826097052840324,9.846996835679901,5.321345190185528,9.965037427695808,1.4813144820858049,1.018390299832569,4.443171787226802,1.6128566820275991,9.160160884926652,1.485795675115289,5.90472165335779,7.55444775279503,1.8041566601152137,9.44865188236609,0.48024285179676385,5.374038162958918,0.9688374728701066,5.607312936307811,5.278680759657675,3.5907932100045157,4.229287273964719,2.4102408154897246,1.8137564656681926,6.235324919907347,0.2553466271460292,5.803060232468827,8.890224847337565,6.607188641373693,2.1288815048927257,4.997676532557999,6.426612107310261,2.898480489221794,7.330155725058672,4.368204837110361,6.396391538821183,7.282721698017055,6.152582525674749,9.361992806382851,2.6112919329510778,0.286651126560733,4.489077576749163,0.293968719435066,9.760861590117988,3.7057012677175463,7.23138091527797,1.073027623918188,2.019389294579854,7.981145087577568,4.897813174594818,9.78616407896485,4.344741672780539,4.133923497866658,2.2136171598932055,9.328934824160646,6.701362575793377,7.76764103608215,8.482220458945974,9.43440876411345,9.986971804006721,9.65157110685655,6.4235480264551885,4.067346281226934,2.2586055988197016,4.216804294586808,7.860530898228695,4.874692500380325,2.075717546571394,4.233468439834326,6.2432152269638985,1.0889029496479996,5.844831296297842,4.4364137515342,8.142999015629288,4.901095715311384,8.528827902578692,3.1326993416562186,0.7398508391434067,0.6598380892569189,1.7031366401109305,2.3618845972852434,2.822532175808229,7.251936844222794,3.1353976004360486,8.865935567755223,3.9099889837014237,8.865883625736096,8.54031566342147,4.886491376491261,2.894705757598043,5.548879710623331,3.2074537189948824,2.1216301714516517,8.4228377862738,2.963941372656743,6.61310924722144,0.662954768374221,7.197359519737433,6.719397161241105,7.2171974815179984,2.590329251914606,8.630366214273419,9.376425906230288,4.333657384909586,6.217566244621912,0.6266711303067618,7.311242800860802,2.7118811743543025,3.912362740733246,7.681494777818472,2.993334282918995,0.581331202807438,3.779553368545746,3.1936580160021864,5.5744025438218925,9.655894593866783,0.09481807222041838,3.1226518563780017,3.806890295970647,6.492733735373587,3.9006363847876457,3.027772670143162,5.263823433415356,3.4519828158800427,9.8413502926329,0.11557145125141055,5.066739508595348,2.0104783601790652,6.839627628894739,8.142609927316387,5.939575319013288,9.09189221373025,1.3575574375039257,0.39836667296875294,9.866465761135059,3.598524786726794,4.782979051179961,6.831108456458159,9.997560903408765,1.3461622255835093,7.3064817259198565,2.8267178038597573,8.579770871766486,5.193767033493067,4.948226816307242,2.5094883016394807,7.6366695959245,1.851190576268893,9.480192094524025,4.521538852607488,0.888382902721363,5.069859809022992,1.779483005771485,4.162794109268956,5.159341866301908,4.128577639251337,4.975987926152103,9.159330812802914,0.9418747045107967,9.067326707082143,9.333543208525946,4.481883194210252,6.477813315723973,4.230360179953885,1.6597090238008583,9.451690811568321,2.989815993814602,4.892191866580662,1.2588717129650728,0.41362320072612535,7.784522287087966,6.230540338015015,1.4940481513376591,1.4333991829894788,5.393525260630008,8.141701444137508,8.434394688787808,1.0710162835813541,7.974122113884457,1.596260487974367,2.271398629220144,9.556450277478051,2.830601082745867,5.315982560605693,0.3930829837029437,9.5772983873107,2.221702729797462,9.260716575472692,8.699696951005185,0.7905565291579719,7.703227328896677,1.4568997295085806,2.7220907069278457,0.7859785694257138,3.0129818036785574,5.7545127866034775,4.8592798879221935,4.380115536746329,1.2065947297857005,3.686803113890228,5.87738182850461,9.72841867305091,5.213601035056817,9.239308087114038,2.2102411126709454,6.7312476015540526,2.2162279821983697,1.2855520409938548,1.7099503972692531,1.6177138004674552,0.7510997016469834,8.132117189654497,4.67975890630645,9.984103876659727,9.365200788440136,3.2139868271276684,0.27793247567701296,9.42740486736119,1.6527715508511664,1.6021834894739706,8.955954837351701,9.611432289010182,4.036206338474501,7.7772807633823255,7.251010108235629,0.057158979041583846,1.300938270716131,1.012953985255124,7.399806971959645,6.865394956959872,9.237416922556962,6.419280760641905,8.993455820953574,5.079039169657902,5.306173698979491,4.5099126774553415,0.24865117070659637,7.106151687395567,4.0721557266897745,5.170446622650269,6.93186360273788,7.541412679333272,3.8387022016129215,0.6221034534139502,3.7883914327999504,9.035987629892183,3.894102802281041,9.344040862828589,7.180868544200333,8.034921167654135,9.509616797393297,2.330611124168592,7.899179436480196,7.669847378074248,0.5013258944741272,0.4078059637166409,8.329156774846737,6.631053595228321,1.0633365999494127,9.908632065427142,9.751853358275696,2.2988537295866185,1.566874563024515,4.930187594716959,0.3128942159973125,6.577315848384755,0.7777484661735046,1.1231487909325022,3.6173255484302294,4.8958747639150495,0.40878000840543827,3.560526422508036,5.147394192101391,3.9187846283582672,1.4669197342868834,6.666908386203257,8.219001973626234,0.22242535765901073,3.824131060270899,5.955139261788079,8.141234943772421,2.70548751369893,4.760032799035018,8.130717772781358,6.151521498358078,8.46937885359253,9.480813909427493,3.988494862307199,5.260387197039268,1.4801780384715157,3.938884439093785,7.896036847320186,4.932301727402809,1.3628507791245636,0.9271573526970056,3.0261115213697143,2.2135411595684262,8.7230825284632,0.6420694979750907,5.200455709182293,5.712697197194515,0.5796497441394943,7.594437785223813,0.5561182225835182,2.7121038904359485,2.8054826806806066,3.082836305195732,0.3325208778526012,2.926123538638433,2.2722501787436924,7.098353745125404,3.0233746611780465,9.75100902280108,7.611154066123227,9.590186810605633,9.215085921563253,5.852252329371313,7.188610447758499,3.492001483806434,5.578119106933422,6.7991548287805195,1.569467873853867,6.272983903079511,5.4196134466114785,6.253329542246691,7.972256701166312,0.4417907672669985,3.173762824685016,5.01915485543009,8.900215463747836,6.407854221453928,9.362697641116707,2.9199015177169008,3.8794875872787116,5.144990602650744,2.1116364111840524,2.9859799304150227,7.664383905213324,0.15013792964509998,0.6360736921732268,6.856295788540873,7.579927889225729,0.7551639462384607,4.0697327454251395,0.6562088496378737,6.854738353333246,3.1002232249323125,8.331161872766176,1.3028438232620776,1.1010733195700406,1.958571932257146,4.952615180268895,6.39933935079722,1.9921675814779671,5.509470370360793,3.541178539403237,9.597114405993414,8.302671780244864,3.190486384379585,2.9154674030478214,2.9371926985703523,0.6152936892899552,9.02245529362309,4.437635633684708,1.0872879572508443,3.616478954926313,0.5528046958418531,1.1030407082552474,8.290256662749009,4.1111439336552005,9.96420037168499,3.7694577708854213,4.2233966916708985,2.8025586496475774,0.924615819113731,9.856053427139265,1.474321260827568,0.34546107480361354,7.370887167571341,7.218565440189386,5.782354705946345,0.8912258616112956,7.452658824995558,6.545672439487138,9.47638353487961,2.1586107339921146,9.391219189921916,0.5921549240895518,6.207057241580323,4.792359108276013,0.5601835515787124,5.607392563978775,3.9456531253847182,6.414341651511313,7.12282982557804,8.062096307596626,4.257353136117846,6.63278191517736,1.1544859814399633,6.175246036348286,7.9593380534811855,0.07401230528943925,1.4033699245963727,9.856006607831294,7.581280330464985,2.343050294933099,7.748428629454409,5.757579460433382,8.601314326681525,5.045912275313885,1.6839809907376024,1.484996156275944,4.477474854698099,7.1486817338784565,5.018933221300119,7.851882557044342,9.641442058847055,1.8621397912616533,4.609110745721648,2.710505469720462,2.748796068452235,9.4228717106869,4.3855468083874865,8.202170689434492,0.16587631273656478,3.6700163446334044,8.815313349444564,6.009200253775562,7.582573778506375,2.1094184311485864,4.568509910023886,7.0195548432972075,7.5093464562528425,5.529060885039191,4.37409261241589,2.7104331901168788,7.374503241935305,1.8977415159136501,2.429482088786916,5.0960432948657255,8.444953024215362,2.2698913061200523,9.992559739999944,3.3671086841072304,1.6075654115388582,1.9776466488553324,6.867780413227901,2.375447027537109,8.468310906381399,1.0003135198239999,0.7617220758704102,1.155067271629182,1.5156831724564268,2.8639354636364835,9.071033391138144,9.51743526651753,5.112120424286313,5.130523849190558,5.3069428389206745,0.9215532475287513,3.46072605524388,1.0766555541131018,0.23167119025178207,6.850744954328313,5.646746388487513,8.802310194202011,1.3105208775249566,1.7765862402065746,2.7525204595085384,6.840678897458222,2.2306442034859817,1.1274435778330183,5.636792197872344,1.8480200767185773,0.9026968853834405,5.584875179568309,8.012074389003379,7.845401819682973,1.8750227986512158,5.9032198879493,4.319046250293978,7.212439301263819,7.011826881318022,1.7787977024576318,0.7639926289154064,4.113820925291343,0.4687484595396263,7.510870475176265,3.8447587677765585,3.001213870153092,6.0403689734231705,1.1027864685872468,4.367170897292433,8.821970216991575,3.0115852903453777,3.1647181757882215,1.133451804693667,7.033206146166435,5.386821438732038,9.683702014191892,3.7614070042319367,7.239926241380812,0.5267778139318546,6.994463756095943,1.9818914453637737,2.479204431499229,8.139279232425851,6.129070603600228,3.865450018537646,9.757568076746763,0.18533566454686623,5.3758626807989485,3.6395274184361694,1.685147701812234,7.219996898554268,8.293877515475256,3.9721764047787698,9.648091869450406,8.066524380888401,4.004390187788189,3.7365534361518007,4.744211572411707,9.063547183445698,2.113347420529484,1.0978553206713648,3.5978464719686465,4.725834580164707,8.309957920817578,2.9706675366359194,5.099801494517808,0.788396550416588,7.518138848354139,8.498084081318986,5.532138750640037,2.498003115765839,0.3162556189846877,5.556745529951729,0.17999377050127774,0.20301189681275256,5.973368972836592,2.2509075759874495,1.237960236753023,0.1982507995752847,3.909504667488355,1.4962065996421259,1.8518147983844269,9.484215783392326,1.4855413725856015,9.783725704660815,2.387449618846081,8.04210772055284,6.554680637030806,7.674174530712008,0.18494018115929656,9.562177508946299,0.001113174518280191,4.546378960193139,0.8579643357391198,4.98302201381005,5.973255070619569,8.984593079460835,6.6615754547756625,1.574589418450052,4.958793082162743,0.8808240566661663,1.3980078767452064,0.14019670522486427,2.425895898263283,7.210018148663782,9.34107035471096,2.137523172919181,5.3875474395364975,8.65274133072711,8.061050357799008,0.9534507822444893,0.030588350290084998,7.612230936875783,3.604979235292541,8.001244436547735,1.22178824811216,8.79804668383445,4.499394558716519,7.998788824669423,6.270814384492207,2.7001733308192444,6.886116054145034,0.0934268906441571,5.547875037658425,1.2884966136331055,5.778812841466337,1.53351242630696,9.51275569369879,9.876188757277067,7.514577391256186,9.50592019005603,8.7689610003029,9.873612941919173,9.374354906665673,7.7497759730024764,1.6578557609182054,0.4924047412402699,8.409037435318377,6.465464053902263,7.645184385830859,1.5778071122189952,2.9969420378250478,3.4175251596385134,4.35788718405711,7.074524945769887,6.405492725851033,2.886318550948083,6.402657154992242,1.445000843781592,2.8603060843346695,8.999060341190749,7.6759021980397835,1.2242409620467165,6.048774195830237,6.844090196509804,9.09047049910838,1.8646456229757824,7.300645279559087,7.975146603568613,0.5216150646719242,4.665155521400498,1.940019371747791,3.109637421686294,6.082743106823529,8.769073318549367,6.93197115374547,9.029829318984664,9.863745580743023,6.024054791451557,7.539069481095718,5.986829669081656,5.3549886668158635,2.4464104110576312,0.16376498100682313,6.032301386513691,1.6326874729515573,7.388575444593397,2.4593178575949546,6.517137648404211,2.5104816283520446,1.7874259273022952,2.6978714420571825,4.8311095734780665,3.16129442068262,9.740727569999809,9.757119633093792,9.879776066259419,3.489204517012868,8.194178141080602,5.472314234404827,7.598661916072118,7.610193166159451,8.39995633287126,6.029708285825036,6.345333653005416,5.661642042785065,1.8075547674220704,0.22199057982534853,8.146703892621197,7.593407306869309,6.051061905364016,5.564774769228488,1.9256115147142783,3.476303349245109,4.309270930485837,5.188507703721903,2.094766504408514,3.459333109816789,4.159746657212374,1.293663600344911,1.339607707311662,0.987673983372378,5.609332616062048,0.059511216452942106,6.698711035162238,5.139691530958638,5.676919629934086,9.08420704757267,0.8194100483863487,9.790455849886811,6.048393923452632,3.1026343307566586,6.3917895272296255,6.08061152392543,9.29043369065597,3.5359199905880487,8.88529798940749,6.650828861777675,1.9594578362617632,7.590608316528451,1.0309412018993769,8.814510707926125,2.061531078976758,6.051625808540736,1.4359220092570135,4.430047574031249,5.099479569308568,0.6897965012414387,8.582972251413482,0.5213253484614522,1.9839565861902608,2.222529614106552,8.169174763400882,7.871955303115964,7.125803422725916,6.495119291448864,8.926928381549846,2.2527332595379423,3.5960203046860464,3.160431902839036,8.169891875617939,7.362614348193286,6.9776326893835545,8.924460815418168,1.1215041031069428,0.4068948174321796,9.020524880710912,9.188370165604535,6.477521595377247,8.433914843727429,8.975097843662308,0.07133146534539225,8.551797517984085,1.06752827983573,1.424991601652058,9.444339606818717,5.171889998185425,3.449198078152773,2.353979575494898,7.799097389874588,0.9226505355967174,3.367636010351296,9.421892179348792,4.275130852416837,0.624685027862435,8.531830935078649,4.961448036486285,4.933366525623821,2.0452457232869783,5.937945026345297,4.395699513248509,1.8213893098559941,8.756833787033795,2.934018805127596,4.788592770462051,0.4893128378487721,7.745664650644843,2.8814805040553404,3.688868150343454,2.50465509767839,5.383862072674246,5.483324898584354,8.657967997239139,3.8140903218807285,8.800707182413017,6.597735637752634,0.17892392427125703,0.3018344435267273,5.170644358554332,0.5463315792783563,7.388926354205669,5.313726322152905,6.576455399165383,4.101074625993616,2.0258596513179628,6.8890602002941295,7.129257127051757,4.745511453409367,4.248071425374121,2.6347135923390788,6.158477143149264,9.459672498716179,6.7575024645154755,8.29122201710306,6.81616138793502,5.997308251864425,8.90926136246682,2.4225923514279177,1.4911030729392516,2.382816006077697,2.9814916376954215,0.7657304393844722,5.320538722934529,0.10682897818484083,8.827692949185762,8.940300438078175,4.9598871220192065,6.442581996296316,8.913577354283364,3.534983644378106,2.557403193621383,4.510474007165838,7.565688264216185,7.375129586698643,8.09965588552478,2.070299493635547,9.628431638534154,7.499431508073667,2.11464977989001,4.879532079192303,8.021397148225129,0.11074268430645073,2.252382246877749,5.192201163820595,9.824067487441576,5.726633602078942,7.806422954612468,2.248773157533941,7.081237422184094,8.062527865118982,7.813043979631381,3.5755137930070005,6.1134178230986205,1.471400997369643,8.420124212034668,3.4965869539885173,2.977280197666039,1.3229973609495593,2.2716739555700727,1.732249254524596,3.2210550955998696,9.584723333244291,9.69336209786231,2.115511032063412,0.8712537084677252,0.8931187368591265,2.4350026246879954,3.409624542191265,5.571650003054782,3.3682318385325996,0.2952312387833522,7.242901322463884,9.466581818711044,6.186653065630444,8.93216350197594,4.192008629236904,1.1097926716190532,7.425835336547616,4.990785481349179,5.6555307507888175,5.767087052086768,5.435849457457983,1.6675090530180614,9.889653880416516,3.056348952944953,6.733154218360334,5.365172042209867,4.616342920586368,1.0116500430548614,8.15629598402859,5.234705450360728,9.8208405523698,6.574475729577677,6.786018897879424,0.7381922471614888,9.362386134324016,9.356547979546082,2.013141238626943,1.7270215311649384,2.8346021900286833,9.26694986431371,6.747128992544736,7.466196732950414,6.465480109604655,8.204535408866281,4.442090712902686,5.057066054016385,3.033870915162258,2.173906808886242,0.38762325997499847,7.875540684710083,4.467691725251827,1.7332399850376035,5.340476613542683,2.202740091363463,8.088759416766578,9.58098073012703,6.650024363610791,5.392384639191578,4.87581711882464,6.209877698634819,1.6403447103694413,5.312541360785748,2.35734641303603,0.29046005186304846,6.123292099997543,6.892437023911707,4.785702085279675,1.9659429169616327,7.724020026704961,6.349842213253888,2.9741273213260677,6.183036525983409,4.550618796044933,2.127863526965801,3.0201339646486467,9.858711511530407,8.584739909585187,2.262112415333762,5.707110602674889,2.1315106959096806,9.496679532281831,0.10781304843913042,0.8389775464526006,0.20416942210236155,1.605070718165864,1.0216748541321474,4.776854550631572,9.745367708408398,7.339448628571312,0.7345678504248088,2.235399541538393,0.18272583956044364,5.067332795967906,6.163893425803678,3.193200290462168,4.798072529155207,2.8424187213317653,8.86968941478035,5.816759411264646,9.49081000963143,0.244655172102759,6.429481382139875,5.590078480012152,3.9964199102568108,2.881274533455571,6.4971789250625145,4.013887357419423,3.1867120543665637,7.344061140580632,1.342712763375944,2.05139458385137,9.65642385065681,4.283935635161949,7.2589278961928825,8.322871231531094,7.599510421212406,3.0694376834596913,4.205459906471258,9.478098376206601,1.9753298882779358,4.604375917805643,8.382251630081537,0.7106459711793833,6.9419461600012635,2.3775990904183884,9.928094562091527,1.5601350008375292,6.6353365216719435,8.868950583170085,0.04376553952204043,3.1395746632398303,4.812619496275864,5.983984747961072,6.03886866147473,2.572552441848183,8.141431715493418,5.429563383565103,5.202718946455248,2.639741125700149,6.453901863800233,3.1804133007295077,7.294766651256452,7.941962527680193,3.7211197895211923,2.222501144182285,1.7025214386123777,4.1153905352227405,7.8736389359457695,8.295747700712077,2.183381759696019,7.094956677382271,5.791702689424999,4.285781466463028,4.535161978047373,3.58299585578349,8.338162523497367,0.3372420870756776,3.2566857566337526,1.6703315241479044,5.07832510213953,2.1009299512933644,1.091658424095926,1.759628986053069,5.9368195731712685,6.233876295057714,0.3970373438282837,3.691333069430117,0.7363461426243378,1.3932763328745912,2.7115317933797787,2.852241838410584,6.780834270675652,0.8664169535302324,6.560510403553941,9.246080140736218,3.2088564336840166,6.847058330624179,5.687766994385446,0.4619864903362847,7.832627155916278,3.535145911540971,8.24733172328066,0.2611244461812434,0.8403366696026449,0.19101062389540013,4.842008851146544,1.5187141099231294,8.409637534175577,7.870163208139763,5.4515346758781895,4.2731886757300375,2.9002805471161985,0.6850860954014582,7.050940029729614,2.2898411377288532,6.0498005757732205,6.945455550491134,4.603796306658854,2.929490900595658,4.91321956410305,7.759999913721103,9.419576462281091,8.746014141890528,3.609934317990011,1.089756510142189,9.95067270707408,9.520868188188677,3.4722288564306147,9.322668129672344,9.416087442078789,4.975141941109391,3.14224078919266,9.365435046747125,5.66033302773951,0.9647346594365447,4.014240054484683,2.9584360254184814,8.60118751222096,7.455032685008182,3.9445628174164185,8.952794559148082,8.70575779313888,8.688286166406993,6.645601977270395,4.343088084385069,0.07492017794384354,5.6234653897353155,0.2829806510421118,4.439543263843174,9.385811599429248,3.153126116353109,1.2553526585918184,4.782447284614192,6.736738403378938,4.134396582292762,2.694124059889975,3.4840814158214304,2.0796066628461674,2.4166416942335287,7.77466689837237,8.58420826951075,0.6253727904350048,5.771216074512962,8.694646376333,6.956499123095794,6.692803719822988,0.989375118192749,7.280947850499768,0.6768824094152748,9.763309244938679,9.402277189282017,1.147589406874261,9.574220421100172,8.941837807472208,1.4721126313418431,5.929241707772408,1.848112140274738,1.848214311648717,1.822486569709716,5.5555488663302715,2.6087669123645565,2.0447814449038724,9.646185485340474,1.7866203441009487,1.616839405246816,1.618502171084114,4.246759273626156,0.9715566735319769,1.6142428179595258,4.436709567234837,9.499605718445403,9.407623440535069,8.6463354696039,7.901938631105362,2.6427265018151633,1.248897552683499,5.894476261865362,4.3681759308413,2.997480255130366,8.407492745293556,3.1697341211824828,2.0124434144525605,0.9186645727935372,9.866884350730961,3.907228915634866,5.595322095015815,5.847652549492882,7.555802539106377,9.414944571870755,3.3477868584973747,3.747551513964572,7.591112624016207,1.7094889307623085,9.840735754245253,2.4544940060856457,8.388970728155433,5.24224993321443,5.753232669763345,6.2468542318144396,1.5376496203577827,5.612519611315369,9.38304453123049,0.6629724035219897,7.224316635653998,5.475542306503961,6.7665383066924045,8.853317624076233,5.679640740998798,6.029439281389229,4.992464415981321,1.464848390442457,1.5891497041875036,0.18064523389672682,9.778924560544032,8.035533872434375,5.534501901808106,3.5371505749486176,0.31672325205559293,3.1784466798803503,9.848551387584962,0.34568859625557447,3.736602790183887,8.473677119806416,5.220727876518221,0.8548941380745068,1.9027598476290997,9.363237351539443,2.791498073382245,2.7879611218847367,9.522982771198066,1.8683240096634657,4.880663667736396,3.930836465084766,2.8504427481691454,9.315283393069935,1.6916276888552984,3.803936457641103,5.780895627997359,7.524010757524936,9.513556320171396,5.301097321697395,0.38678123237407824,4.698450671399327,4.209344891209134,3.5783121096657022,9.055522833995921,3.4710097985570143,9.566429063301959,0.600546755492517,7.033181339571172,5.708729649613931,4.417416391140524,8.903372771179614,5.973109646683275,0.8586001660564724,4.494530959106453,5.332969323390923,4.143012656503444,3.899212558467257,0.1938166333313951,6.823729691168393,9.91800805523541,1.8808078733664269,4.516648333128472,2.3329819292824148,4.752968228761195,8.04081184912684,9.582500810196436,6.341014676659152,2.3000686542641127,1.8980608744662697,9.54931968868243,7.933159175276176,8.74515807135764,9.82528099466225,9.515506296763233,1.943803107172447,6.539755160860463,8.254917581274016,4.587295856393493,2.7622021208273395,2.328616588893835,5.285011099710662,3.996483726417198,5.341937224806493,0.28367145909526825,0.6736870057991384,2.52430852088804,9.322192854760615,2.9678812719085057,6.474451485175949,8.345721590677174,9.08974668476188,8.356712499176947,9.990260537729368,4.773813535734951,7.269860820465059,0.7561462772169736,1.5931318167449726,9.645538008625078,6.2607271935149456,6.380197269294503,7.64978786491308,4.254459607882768,5.268255877626321,9.279332865943324,4.37856758283681,8.910815714142549,7.256252684177856,8.344114260288094,6.296968612067592,5.14585389729162,4.870512851511354,0.43571280928946243,7.888056307735073,5.741465904218438,3.2663539511483553,4.049492071835062,4.379176176205831,0.9951003623277066,9.444468031100898,4.815711240596706,3.741198164874567,4.438299022307598,6.767611418674956,6.950844720207686,9.812957181318682,7.478764449445677,5.744056113652679,3.0269243626359033,7.18905009829506,5.358120363879751,2.603947176362861,3.080780419985918,7.449128239611838,1.756534321101243,7.322024959406345,2.294095008830567,2.8625595281443172,1.7888764444217997,6.148298507572919,2.727960401885606,7.998836834868507,8.358514392822983,3.293306248057349,0.3466950347095321,3.198287449549614,8.94896597755023,2.6099424573135046,6.574887097641478,5.636613121929265,5.927164761778946,2.0293221374288297,9.026988487915377,0.15079931718035455,7.945303150795685,8.770955851964708,2.956723343587584,2.9613371582322,6.943570627402284,8.237110634300072,8.465070456879381,7.354690346562348,0.4825295071000424,8.23209682149093,0.37629196776142293,7.408208646086986,1.5953605452530117,9.924781729179868,5.383703505354191,4.813419714083825,7.358580748391019,7.383712368269189,9.801256415259022,5.9649317540068845,8.095044470490985,6.5175660073067085,8.562222735712076,2.1670165299226363,3.2696143157056534,5.675338414410818,9.144560055990137,6.543295598656882,6.628587506929655,6.913989782610427,0.21059710048740743,1.471376340172308,6.044883235067202,4.941380672741191,1.2994866158343477,3.1353655714432795,8.008928886719966,8.407624278846974,6.504916831029735,1.5245890445336818,9.349576701862214,9.52402677558611,1.3669244621079368,7.155956624264972,9.912568618958222,5.124589585315884,4.693983581336636,7.109360571695829,3.169329196908479,0.021867581579549933,3.7518135051920387,3.4230865640658337,7.366585320007507,7.211216114528147,9.128253877160823,3.9597635470280803,1.641989025848205,2.4959540084856213,7.532153832485761,9.851676075406504,8.422269516631697,8.684034841419535,1.492035181970497,3.1844898162824844,7.0283871027699245,0.7651742277819551,9.138027630947573,0.587767243428502,5.1070821612240405,9.110237501584011,2.2467060802928285,6.428332374356734,8.47254188480479,0.33663495930381315,7.158675134038925,1.2066621879622297,5.107631616499515,9.618989351618454,3.1758219066941438,2.5216787890719705,7.392460702652049,8.598545198186768,0.810575875264169,8.062300985683489,5.932107655953628,8.539987245839383,7.393809845035337,9.18239647837919,1.4894563457313525,7.838766973870838,0.5532209578411529,9.511447734150485,8.66410821344951,4.4709500467390475,6.029003027361832,5.996945930736393,1.7573071907708038,4.143362676518215,1.0476722086153345,0.25819850743385664,4.552505256673385,5.83504555393691,8.159822586769124,6.479138009877431,8.258479260943734,4.7247307300844765,5.457650670685149,1.5867047152210068,9.159859038343168,5.519780423148692,2.9947289881476546,4.921881173930137,3.324385858769258,7.336084643731292,2.1612958807017693,4.6614642702652525,8.274494358408827,3.259452013297847,5.746510095304917,6.334558093593884,2.7353477910368706,3.3533890487719873,1.062151337299474,8.141232126105274,1.5294818077491268,8.799372407271557,2.681124965990934,3.8577482276747856,7.69568886250781,3.0518212053381966,5.604751086955454,6.77348515398122,8.49825216025599,0.9097650797905377,0.803036846833457,6.939943776063588,6.846638088382216,4.184923070643885,0.1927144691241367,0.8993020371136495,5.56672551890242,0.6391011825440152,7.755858100002799,7.914813563186262,5.431376726167686,7.693832011200077,5.734599510344633,2.240896683640783,9.987271911409225,7.920773073417959,4.2672578989946475,6.030988961504608,5.892516028845408,3.9987901163742965,1.070876748883114,5.495353216127391,9.152159356897084,8.772725998783395,9.314025644237606,6.1524417898143025,4.317281402626686,3.803966770303364,9.90519673181601,3.1211941080103967,3.984970471755034,1.1275686734669965,3.6379429816120803,9.255236292205876,3.2557385882541845,5.211600480584387,5.562402741567283,0.7590461427319417,3.9969030909469105,0.3319744204690078,9.271866651613719,7.9497899536873105,6.749901232401285,0.9867445838570921,6.2459392784119725,1.5895090244115995,3.3349070989453375,0.5167692987567929,6.853727813852492,4.993575070283088,9.916815694980734,7.581619128522129,2.2677232686542004,8.061912261622213,8.554002657273898,3.928706537414529,8.189029087998827,5.037354665304972,8.807214151452317,2.7266168484264854,3.8806645589629563,8.620360455097279,6.484135209907734,8.83024079129192,2.924307150475305,2.122227232810462,8.397701409548873,5.943662818662063,9.062499410464314,4.668402407527208,2.3679734424319654,9.768765769530786,6.671250383267617,2.206524256109439,0.8376714435547516,9.59552190513327,8.851770058245636,7.849528415239134,8.935858669854918,4.050501663418812,6.443858909525309,3.33734271312868,0.3746065134607768,8.516534338639932,7.85682255681134,0.7520627592842444,1.6296885863278632,1.583965345654268,0.7869776065581258,6.5888470517760025,2.6689396325044523,5.218093066613898,8.688213361954807,2.6682147887253214,8.750150092428331,7.413426824083642,4.030907333387495,7.6895081901301,3.8695126491332665,0.3866305142968318,0.4355331202825896,1.9097225856356492,3.99970325886824,2.8431546770742244,8.600191427822093,7.692667018385069,5.192852998801198,4.754049091524724,5.454108290993949,9.975146721919593,3.537512352896237,2.004614325110693,6.232373821550539,3.9889123532542192,3.6686074151186645,5.888276671717659,7.573750527078787,0.28637057281373557,4.162303359053404,4.9581788777986535,5.699506106447515,7.83201806631938,0.6441270676840949,6.674757666627426,0.9134336191900594,1.854506864722505,1.5230470902628945,2.160758396289475,6.462628830379536,0.1673930313941241,8.079487727366878,9.107704830805616,5.70437923588468,4.107127720342118,3.0081982758667767,8.118243738151264,5.2840894287879685,6.073797585249147,8.807029698895434,9.185268152053416,9.521527023295631,3.4860480170657047,9.207818393277702,7.0837042656640055,2.807000528295932,2.7048214933146273,7.197311043871428,5.542719006511138,6.213897369097711,8.236859975583766,7.773348659649141,2.826043512036848,7.5789507887307375,5.5089404134837325,5.652228282263069,0.31215493392339866,9.1591841492133,3.8074401322506803,1.769157183955885,5.527022614608247,5.200203174453044,5.898893111029475,9.923727853990647,3.994535083103239,9.046799099406064,1.5618163702957666,9.143278663154405,8.461456923959158,0.7479950690138082,6.447319084424558,5.05292259779472,8.204709689483645,7.272526515991563,7.46361562329552,6.895912394456047,1.5973734250942273,6.415107317630388,9.99286726523757,6.176236391054283,5.219359938820158,0.16629109345610682,2.412472801563439,4.187666864891041,2.317865293309943,4.882287666160002,8.734508839081467,8.959721296911306,0.7067031675528135,0.006312537143189356,3.466310805217163,0.2892988145162967,9.552847250661834,4.043529113624167,3.711291868362181,4.020824814811402,5.6325271759500595,6.138751455767158,7.839202387818183,7.587648500442109,4.957413017864032,5.9415886722308695,8.773917003293295,6.2537510049758325,0.017593736911077906,8.31690726116843,6.730319078296878,3.3180282314842335,1.0962568001302275,1.1246516006748564,6.851670299357442,5.615312079997024,7.993264776192964,0.987074000618825,3.146017146831721,2.56819248081095,6.019436096381005,3.805727566917325,8.632213055796445,4.511795324833625,6.223611982107979,4.727095499455186,1.0227507504332323,0.9979053084452405,4.371111021272993,2.5531351468223065,2.2943919102492027,5.703685550093503,1.5861097409332603,8.560041523159088,8.714075284816897,8.07044967729335,0.6509358858223957,1.4140701229390396,0.3985368737766726,0.04633603678338649,7.686664677373756,9.529409315668092,9.37680150529676,8.643435652378962,3.9500232525788794,0.3617129696824273,9.834664683047281,7.053628889519085,6.399332283601737,3.9673260955081413,7.706571937139768,7.957131336526707,3.721038488488131,5.743056217727855,8.694425826257454,2.8602088133990575,1.1159348310929318,5.757893356332929,7.0855516763451085,6.854492168522698,0.864480572379035,2.6928445882703045,4.574122820269163,8.897524180962504,7.675997150067163,1.4765600131655,5.572261493401372,6.612924220189135,6.196841703459938,7.572509919844888,9.972074433237086,3.9101251976804816,4.422292115304395,1.8905238708584249,3.2923455357924936,9.56879688539763,9.409662711891158,8.505494211355003,4.67302884633591,1.22243184297532,5.844789881754922,6.897199331236717,8.879572878572638,9.476320703214189,4.529149795201443,8.388375622598357,8.939458433406244,4.872058014289737,3.903418216689414,3.3307144058655505,3.8226787953249106,1.9664749332667453,9.3427243574443,8.080544994926466,5.790969824451508,0.805217644929449,9.234455903028186,2.1129532927148187,7.0599505738677575,9.593872284326345,7.913598020805538,7.233240125653632,4.443141908977158,6.378464163581855,3.99855685265178,3.4211639516036674,9.069411723181432,5.5325178051585855,1.8057038184620866,4.628644423241905,7.8802223969790735,1.0585489073697618,0.9953653523084793,6.189730701341933,1.4392145597119654,2.7871855203513416,6.717099211517725,0.0433139316207376,9.314740628411922,1.2353441897649753,6.435518155074394,2.896100513637191,7.139183259886676,2.032865099425308,2.4614773146165723,9.599749052045247,0.6063394582457338,4.292137803994265,5.467993517805062,4.790868075086894,4.9494616687416695,2.2243244804495967,6.250910037875357,5.407045666320622,1.2710623567227042,1.320016549540034,6.180930787414503,1.5231394313344937,6.546382653951285,5.784170974089488,9.91620500257678,9.492097623360506,9.8086691363155,4.799658317050216,7.285323479972554,3.999851041077137,9.91480121207817,6.424915396804139,5.1284719851778915,1.6667184359435216,3.333310431470321,3.9624957610130918,4.720845730168653,8.642649707927474,4.694770539287639,0.4380398606471547,6.325085018495049,5.0988527623494875,9.878154295459368,0.02778069306432651,1.1127212973274847,6.736475252409763,2.2369841635989083,7.729439906808344,4.823846060772597,9.20436398456699,6.3898439763469375,9.303389156286688,9.088869206091385,9.00519808503059,7.809162156032015,1.1878918184985954,9.049885677258322,2.002978577493404,2.1339238438701558,9.964881529814885,8.480196354099135,3.736556364145742,5.241898331960338,1.6751693274648727,4.291541244128854,6.008011339197765,7.139462504362607,2.207339004189647,6.602533315017888,5.7090997527620235,0.30722922465382885,1.8369701433420016,1.1033818125249428,8.049227345906143,8.029708660604996,7.448721332294986,2.717289292557039,5.874136074478619,5.7962509941467495,1.3540726033691108,3.173118614173156,1.8097000514776518,7.211640720280581,5.6643682938194315,5.989935082302992,2.952754521984502,9.269142273115053,9.375464349481733,1.2777539721857933,7.939222076143814,7.644053492164954,8.865848014492974,6.375294509866092,6.039067687383338,7.959717359769275,4.327719710633974,1.9878896978570315,5.189440798110038,2.831788653405507,0.2519175770551241,5.414702545932202,3.170257424959239,5.102159241104305,1.5587407924190233,0.4912466008364358,2.6085099561041734,7.957355066619568,2.318553018998207,3.5205495659014163,0.25290781326324896,4.088409515609661,3.668098919681749,5.478441114262066,7.819708107512701,0.08639403955355451,9.92293315333669,4.305459753340916,5.70857372855018,5.547731836179544,2.0319891290249825,0.5399559906657159,6.970545870344854,4.88904757939614,0.633589352325552,5.4808967351322435,0.4807234697487972,1.5355599877613002,3.0203816086542403,4.543705604785449,4.488519428559883,1.8510635629597838,1.2111609103641585,4.0830923278385125,7.0366428019014435,3.8620241959176624,4.1912443052562285,2.9258628751455538,8.67158397981209,7.194468939539261,5.133530147993378,4.346821789675449,8.605178813349509,9.928071242062924,5.637639446118286,6.71272970233708,6.442626015442059,0.19900009768055282,0.2629518726195901,0.9049789881729753,0.9325519672327987,9.303099495758985,4.11853749590832,7.060932089480287,3.326093186106082,3.243439000823669,3.943906751468551,4.231401687655959,7.695217572619359,2.752215387805521,3.0134855749469356,7.410115052212289,0.11855460221155245,2.537036284914931,1.2727331535675879,8.89661766925388,1.2201552198160581,3.393865742997897,1.1732224676971625,7.441175150626796,8.890141953517238,4.714156388031119,8.963992541198062,1.5469540086756106,6.509488359025122,3.1495513650951135,9.52919459586469,2.893868370936463,3.900918718854103,7.798890044668715,6.473342958230298,9.540614776970681,1.416756953940983,4.649024611832759,9.200470694303647,2.4066299117050605,6.353605582914012,1.7835861346693516,8.258414451176911,9.391115594810715,9.102682149804851,1.2990639958591899,0.2541008597811034,6.096403874052568,9.803370619827666,4.354107042678152,3.4192456959203996,7.116227323790435,5.175966158565396,9.896026735150429,2.5854128369882137,8.120251962545964,4.550697816120747,2.3558361634844207,4.2522393774116,2.612802784946282,6.5579398721003646,7.348715528211624,1.014046188572384,6.950986574500563,9.98413295320663,5.768303690002852,3.458280136905848,5.802297817734825,2.897972189977136,2.8470637063792505,7.8930189863076095,8.367370624652398,6.0661545603568365,4.884003951644056,0.9197464312462333,3.8462316210940717,4.550573051169161,5.286412368137223,8.024076572814762,3.9241332904811923,6.677589897329708,1.435197502320389,9.399807978162983,6.874433672828806,0.2868882814842544,3.176814421262023,8.475282457930696,0.9024326045456299,7.998744229343906,0.7249346514375987,4.623327073280202,7.439850499291492,8.602672665070738,3.9189391215820457,2.5321406420309867,1.2750643232339254,0.027720411439451365,2.3243070546442945,4.472448619731507,5.927840515196623,0.017049494650415165,3.417841777388139,3.5665199182334795,2.7162439934855884,8.73911897265217,2.997731383533795,8.527067513266015,7.840748116156433,5.716675314492536,5.7294848594972745,5.657694666951444,5.768478939784062,6.1533331731318945,0.3548018776217743,9.752116334455307,7.911461182444361,9.993543477050839,4.9989045558055185,0.7491156892575412,2.211458774027275,1.0748052205066605,3.8873118717479804,7.987432761016336,4.326262061028334,9.536284226304563,5.970249475444404,2.631978415133519,8.632801971658022,1.033217232039697,1.9037165927533284,8.485718083042153,9.885857478466265,7.19310758452505,0.24333950880391364,2.5130553606066766,6.278949888672733,2.668228598261999,0.16763971922521548,8.644969428481039,4.35037420616622,5.743170960387617,9.044761535406725,2.5994375309807727,6.5143798637933426,6.766215958631595,3.503051894458382,4.539955631767417,6.7043323326222195,4.166272557791793,4.302236304052696,1.1460346026996504,0.8385667171144284,8.28061472322781,6.542126792330064,3.8875584509069316,3.9279551064021776,3.7255638912762477,5.599620529901913,2.3440353710770556,4.884991186096119,7.7845560234495546,1.0647752723599524,3.2100630894726,7.33418295068864,1.8971467338351278,5.293479017904219,1.6595525941035438,1.499198367534471,2.3453369762763288,6.669448487823846,2.911766588074868,3.2539916565537808,8.030967848239442,8.987696847674886,4.460353370535896,3.0982870395865736,5.252760331629899,5.775605234073256,4.1224019125461755,0.8669103146070178,1.4162558349882282,2.8693347938193705,4.76245863147374,8.036419990066758,3.8666593400292717,9.237666266243632,0.5133483395003813,9.188025348321638,9.150955694159334,2.408264475540408,9.832824877949186,2.7560721021215318,2.2397180305046547,5.068280893308639,2.9184085331830714,1.410138450408096,7.178665687025178,1.7151994368466816,0.7071575190580803,6.825535194476295,3.2507642754894084,7.452570807142411,4.652430688029579,9.568157396083615,0.9202436292364191,2.3530055814484574,3.929651035979499,2.105259697676286,5.54348034975723,6.386709444261905,8.79357221316652,2.344396451788706,5.696725246588969,4.817969774286971,0.12286693379396585,3.750906023286408,7.76960364579012,8.185745560304952,5.298049902581791,2.9965548031415623,9.515740384990393,5.139419863488871,5.8703604538698775,3.897013754929338,1.0668669779601025,8.65476249337161,2.3798859516441384,8.661909298264089,2.0692836495473377,5.715670566416927,1.8201419916434491,2.9092481440725804,4.626313392454348,4.551595566627963,0.7926026805078412,0.2702023516884611,6.129936914573964,3.4673524292433044,0.5598959715173235,1.949966613899492,6.987959848130748,9.397670432646866,0.5212296888630408,9.453994305443347,2.4951809693029157,8.385234074735843,9.962993343949563,1.0852804774882308,7.054632606430038,9.670752380296525,6.616577006744883,9.019637182324999,5.511098250887728,7.309270123217475,0.3666640403112764,3.886876621106535,7.763435176967262,3.424772323607886,0.3725212537644307,2.691861795524042,5.072158267678105,7.256409127721891,0.47321710579644516,0.5930816276862172,6.918316766234936,0.0797097127232238,6.324405014258943,3.9564151086964094,3.2224517577436504,4.218535152781902,1.9744095294768926,0.3998946445706397,3.080954494378946,0.9843593301080011,0.8374402864412345,3.8728622852457297,5.672094760459636,5.06918773297803,2.6787589329404526,0.7254526613983048,2.9031574721087616,3.55928243653856,3.6094312551267893,0.3817414547207387,8.1783369123322,4.44196964714819,2.004809083004565,0.5195440423316167,0.9684153964243558,2.548473829167639,6.916509241649656,9.448683173475217,9.33301060769822,4.100307727934652,3.7244956210765556,9.11756222227424,8.404924141808472,4.354051566347059,4.160150475303199,6.1055913862039155,8.463865011333299,3.1629374682443903,4.151505557290761,4.169208342500129,7.733676828595994,8.382055482028894,8.770496830180894,5.576941842115453,9.471553768059104,5.3527410051099285,5.971868082915198,3.6693031132314946,7.801014211183852,2.411136426788133,8.510122047351214,9.024642150660467,8.857572438228472,9.117765674336562,8.41484383743689,2.6120303745219675,5.157121433154892,4.904308955524432,5.8950033404979365,9.573791434404333,9.68594218563873,3.807864606048017,8.873564994350339,8.946976960783745,6.179608168714478,7.071416825478583,2.751300544453814,6.045050475279509,7.297148137399043,4.7096378329343604,1.450370987754802,8.501769027828924,7.34522761951529,1.8813388810162601,8.613975030096837,8.719822710064754,6.241430411285515,4.826929604414396,2.322794907203205,7.67217239217444,8.113140396459102,5.595602624699972,3.4150243622093877,0.7649910024422713,1.508735418166054,8.626319393709451,2.5366045106725075,8.215718753027272,1.458215747095698,2.520346664297736,2.602849056768334,8.329956442404768,7.943108862640139,4.954937568037446,2.9305839302598113,1.0242748479273256,6.583458645929353,3.321094730670362,9.088001653610013,2.0969223569000164,8.411990972860522,0.5709480696055158,4.398545970643898,1.5349966787327507,5.606914912797554,1.0941238120892527,9.484859557677364,4.151291524726551,9.218790902628301,4.422545367053141,8.437986078253042,4.454375032612573,8.825306575471398,7.449477025895414,5.908559390805605,8.411991927661006,4.046974825617022,5.72621887187721,8.115568331611001,6.794801205528521,4.960718175198515,8.940470739329527,8.020643993281311,6.342791156540891,8.718405189939334,1.8678652567047305,3.4800267709655097,1.416477607740998,8.768128596391714,8.467764140905597,3.3362946719190223,2.39323340778454,3.7875736585740083,0.9411738634195821,5.18612988025573,2.9621625916557806,0.5414479798533212,4.965991238155814,5.204304890964786,5.252983873547423,9.74644181126144,1.5417424502006738,5.6405306433461275,1.242899938522628,7.267253954618993,3.1217827153224875,5.093702040166514,9.394898683413444,3.655768560136151,2.293467462391755,6.304735248741032,1.859267662510763,0.24481027457680105,3.7348529246492856,4.674565207214647,9.317196481424869,9.797826986034837,7.053809937821204,4.4957554031424,5.0959895337007275,0.5288639896852243,5.756035874321631,8.148514170307198,9.042024777773637,0.43921626568040995,1.1329648724118635,6.201322355373195,2.6222933856762856,4.58969873655212,4.833406161818962,4.35669715265071,9.078144135589534,7.870069390140876,8.039070743559423,9.236067842534206,4.72101752066604,0.30564631120137187,3.8698514328374167,7.4399972888008135,8.43968454346429,7.593747897801122,5.76013399794176,2.891198501157075,6.49732251941371,3.9102795178549767,0.1628330267037592,5.743617303716787,4.42542491974085,9.783144877380106,9.346288352006843,8.613114879613287,3.126322700945493,3.3733789307316817,9.46407571145826,9.297324551439122,6.994742206252667,8.01189411317479,2.907890815077956,5.819357882058791,4.416796359374437,1.122702119432425,7.545278300340071,3.6563070003956524,0.6636928165098044,0.37894881510049716,7.320734857261345,0.6106694189317541,4.408362730819685,7.685907434626358,9.123045564351132,0.5539861046270145,1.2941996456470717,7.118681816006982,4.066214256147404,8.880704908064413,8.586386810886935,8.720491331216808,8.69025873486739,5.949704032408838,8.983854752453366,3.20975660759683,8.858623710319671,6.88227879703356,7.127373820391782,2.859645218390919,4.067317906154808,8.804786512046363,5.9782727207222495,8.175369118994741,3.661587224274485,6.145696213636789,7.146052917209948,6.311853453878131,5.574610785864857,8.653104620249984,0.11302347137516988,5.113703023922348,5.609713486525324,0.7948489346762555,4.6993412062811215,9.360121135284121,2.26694879301904,3.3532249267631284,6.270649642578378,1.603869683036574,9.350794882533133,3.727557539832318,8.403706815283583,8.81909272280671,0.17077653165586848,5.733367120844312,1.431494106158181,4.057885781340573,3.8110605240052275,9.258779235037686,2.979867270629233,9.20781848855592,5.1927969410356845,7.43818407783547,6.488751662386535,8.398676468754529,1.607984290054545,4.674081547425683,2.0973522505667175,9.672345053282529,3.033941540260715,6.5481656216613064,0.9706484789765646,8.327699982215158,0.801663256554187,3.12139210871605,4.349978726332142,1.9488932720521324,2.4424077603647723,0.9169654140304595,0.27009608713400524,4.256348261093475,5.496885856246077,0.5201707092385655,8.839050235697671,4.045824846325918,9.561221628477504,4.626673707966862,6.409291889033013,2.736938791669874,4.524381706813099,5.9949750146240275,3.3021624204327784,6.56910363971087,5.604095844312709,8.967886447926222,2.630133033536033,0.4439323238023185,2.424000578406246,6.65738588183644,6.726861510007383,9.982730001048402,8.912210173317732,7.343047255615125,5.891880477120141,9.227071411931547,7.3352999268733,3.3126247183464375,3.3416766732017877,1.881453023041757,1.7018560540685124,8.327494107738781,5.78000262475932,2.7610913515383695,6.735462753626605,8.275581598993643,7.106807665016362,7.969509430925992,7.773124859193805,3.9349822692840517,9.674659436259176,6.600495787214804,8.46292526654672,4.820064135534201,5.410020642183479,6.461037028128232,3.8070187123370722,6.931953272783742,9.129239321331792,4.130572083385635,8.870192576956429,9.240960905014283,5.008888117025554,1.9831351765224325,5.719340223215669,0.44734022035063825,5.75449158360745,1.7206470628185755,2.3353169334717006,9.161238771673595,7.988307405604562,4.44677324261881,2.9620566431003215,4.057686056318541,6.399781022141875,9.587306181405506,5.2848701601001915,4.9090860684122175,4.995927420838874,1.7931103809404392,9.320524435958454,0.1388557199226037,5.4425261550849315,8.787939796431605,2.595416138425705,2.812945999967742,0.10292750495609404,2.1446409975961975,9.629869611598721,2.472161033749317,3.212130745944428,9.834770989505468,7.091282353564214,3.854655333484022,2.184620080928217,9.15262535909719,4.32802417707157,2.3954643883960247,4.324393840564548,6.807137017206025,0.897259284542743,3.417357836209499,1.188241128564892,6.117115266163115,2.9737062319190377,2.5683031058180026,1.2465126348894207,8.316454657569732,9.769234836100935,3.18585422829353,5.066321048313281,4.877472855842122,6.1187903066718405,7.52422236397507,7.047381595708125,2.449647896920919,3.096191603164231,2.202102037325564,8.535808356025221,2.831375951729278,4.061153378484378,8.411681717427305,8.273237487152421,8.215657318989424,8.850561566414456,3.0123320866361514,5.908576458649532,5.678337648780839,0.16244340300148874,7.091265859076597,3.964672585958083,6.591689763515822,7.332928338504768,4.93368647787678,7.3800997924838105,8.192581614302984,4.258541508598786,8.440542820832121,3.3936383886445753,4.094409070179065,4.745180596817206,8.401269894277485,9.966164187832344,6.708212464190425,1.43435992485077,5.1839820589442525,9.23513902947857,6.612742443524903,5.987536532995188,8.332743811460965,2.5665187924936825,1.660731352230077,1.1610965732474943,7.924196640410689,3.0560599159809154,5.703993712402349,5.274446679912527,2.3571642664793933,7.20812535089123,8.574488855446656,8.968743053826778,6.824949040431728,8.502624359941267,8.199200646711626,3.5579268173143563,0.6786333162804925,2.9685877033253663,3.0374167151686295,9.253940270154375,3.7694182149036792,7.860192514888123,6.838113869974936,9.142984253863402,8.957292752747138,7.367670981936262,9.020134517597153,0.41983736541450156,8.928516363200506,9.281621720471547,7.079552842373408,8.57876708469565,3.1765289778775276,9.127081423027647,6.555243160601157,8.39643756873833,1.9702840401056965,2.9044275134715414,0.4149767525615722,6.047296838143929,7.208118100761113,0.9926872612911508,6.945200031480785,3.513538505764926,7.612736977503209,5.141917566802173,1.6019061939761714,4.738138604193062,5.328569648152576,6.865904589444403,7.312637113241647,7.603477001520131,1.9417128090249791,3.199182192457908,2.5961631093972857,5.281539539958768,4.597933586392786,8.078621618473553,2.1605209633271114,8.696533037931955,7.596473182094099,6.288735654332507,0.16446664584856663,8.914978983793402,2.4402068139769915,5.1111244009088885,9.832543409649704,3.4988176487430387,0.32572657843119135,4.646413155422372,2.3155630063233277,3.4386974826982075,4.917472770846172,9.527437889386167,9.45603098951324,3.60984053220979,6.339026252581176,9.16104804923578,6.6750102873865504,2.3885603703691363,9.44132284159112,1.710879222549635,9.437242145607676,4.116436060833469,5.262030014022956,7.88834113818197,8.560950863936025,2.3565737365133774,7.306383011692441,9.356660296771375,2.8521391787845287,3.035179533517182,3.3736269873272304,6.502257826770618,1.7862752506478707,2.6867530338616428,1.7984733143999376,5.142970568035846,3.749656037206023,6.718608594861529,9.166466510154766,3.851582308096196,7.500124693154779,5.532795765091606,9.044685947887746,0.16494328502546174,4.430941601783233,1.414753406431103,6.931994652756186,5.183200190235006,6.180431618300383,7.741625307075378,1.734691061289847,1.9343373380171136,5.038386731278647,0.6203819517511511,2.6144900327516996,5.088072901802364,7.569102675074633,3.003403385685368,4.093334817938271,8.005322934742772,7.232308749200321,9.816648119411722,8.432994457672102,7.955487530131757,1.8201601705508452,8.489007738487087,1.018770893284796,3.124950790709536,0.8374832489152784,7.814291041199568,3.73308717723995,5.176126271664463,6.878266093135759,2.465331919261974,3.6453743052018703,1.1617362360501304,8.050616154294012,6.172958320922773,3.8996588336719693,3.4144655325413598,2.1666415810941206,0.8553126120665611,8.723648372590358,7.874136540889979,0.007459113597187983,5.419819437710976,8.53717212810347,3.3785073433845794,6.90004363389775,9.236618949857894,3.4088518644721812,2.019498482837391,4.859695784846431,5.8262963216892905,2.802216691768723,1.9886460695970365,6.034784610801976,6.513396146954515,4.768157803520415,6.9271662746535645,9.278973000430696,1.8917287282851092,1.8294735989791477,8.789438124126175,1.8617122533189756,9.059734376303263,3.712608880641166,2.1774382761287967,7.310580513157587,2.526021672157105,0.9620496156686065,4.908258772538837,8.506051121043374,1.0118273685321544,4.507387976531641,9.019811146418176,7.455473769836274,6.238317111659062,5.563025462414696,3.1618155483316377,6.155463787888687,1.1157207913169342,4.249855512846948,2.9566558488162475,7.235309107710904,9.554942380263487,0.4721122894357832,1.7145289576249223,9.525917144914661,0.5170813469108271,6.131059721084899,1.6057986272503622,7.418239623449279,6.4711116004170215,1.9356326174912752,4.644114612830871,3.1504181472557544,9.258151059163303,8.964237780908347,1.787805751796554,0.867655038372781,6.023956328207034,1.4277964203807125,5.625326062697478,0.12694822815916718,4.171915485424283,7.363985646055427,3.0198113788989778,1.3650356395508767,5.28726438795906,0.003250593985295591,3.9666521610254337,2.6142595907025123,2.6357425357751243,4.818627482484047,2.1972003275171295,0.8027775924709024,9.078855933735888,2.470427227701333,9.094370678396048,3.798611063897562,9.572180608521709,7.541807540419922,6.636547738637061,5.019225700905383,8.720858749183266,9.46685191408353,4.083895463173459,6.31420315135181,2.0303596778406394,8.53486011687023,3.6646064969960337,0.38687682946657476,8.573548388401363,4.417162954236149,9.439196214044218,7.64672619534548,3.8638256877120014,9.513720079071543,6.215397799509028,3.02507519799288,8.247339946633081,7.029266074234755,6.881369472031463,4.535729450491952,6.110355924931335,9.003185948385935,8.719348847424378,7.984891495851668,0.8135533397953654,8.499328709551436,6.531727282487358,8.228595802376544,8.044384932290077,1.8897127407569714,0.8871400801868778,3.326253157218199,6.589240804081893,3.4564508469613275,5.219949157271666,4.856566392820028,9.436379862375802,4.031949692916571,5.656598548034778,3.7906381518706853,0.39444235859198207,7.384210703562171,1.664219448146016,6.989694814446739,8.447891987683745,3.7084181039504482,9.906598903410295,0.7673325920900476,5.31631901491761,6.039792583555288,1.2663939537997793,3.6459710289635994,6.668626243585193,3.5170966074244903,1.9281329575425932,8.922349687283466,4.747751925583427,8.627411974766428,3.9994751968450726,8.365164881968537,9.643321714349558,9.663750237537991,2.481591731132177,6.841851455969303,9.590780876303075,7.221448698233903,3.9809795284099456,9.593832505004272,5.843305474307703,8.309952446618055,3.2090910506195702,2.987816074348296,4.913913847467345,1.4751209133669163,1.084846581716875,4.696737475776008,2.076302375914384,0.013594694588232592,3.7738449224877977,7.58190615615689,2.8999363065783115,9.28417468474018,0.5444653288582291,3.3533836933696426,0.7407354382483577,1.7498324049272584,7.382992442469451,4.156220232323422,8.694214807868201,8.43721402581073,7.080939658075342,9.548900351305978,2.8990046655286195,1.6057212999721204,2.29251215708125,2.2080053738412966,5.025711177363947,2.696871709196339,0.5525497199197327,0.5814203223521519,3.2436288277669645,6.954027929284697,3.450148918619674,4.149501478888914,6.283022663339733,4.3756966650995786,5.75935660728224,4.137797320572107,3.031488848274689,0.07874176357526408,1.1494164986731858,1.034258135024323,5.522609510273053,5.254773098231963,4.775413657340818,2.48125201314767,4.486748608502475,3.6419871051388175,6.537621920519593,7.604733283616937,7.961051292282067,8.023239766293697,6.693732993280119,2.178958104664849,3.358624403236851,5.089988057773224,3.788529594257204,5.355811440426757,5.082010867810231,9.990257287767248,5.149360925279266,4.842435824724875,3.8508995107610113,8.97761026640055,9.49100521495058,3.4256449376290155,1.4183901543424993,1.7462874256907024,9.339478390572923,3.5671849688610404,2.6300367085267338,2.4967661595722532,5.015672968779011,2.5023192058787194,0.08998817213843213,2.2029914485693425,7.041432652520021,1.0536811973978344,2.096679805912175,5.073354630672449,4.076602114739158,5.581098129352625,2.529156528089028,9.667225080186991,5.956053215568894,4.322063096826582,9.006582331496476,6.119221353548876,1.345411915537944,8.44180614746191,7.152530245482937,8.950907031283387,7.778982324606551,3.881267842635816,2.7713679509853417,3.6380825674810247,8.961662566862655,8.736268207702699,0.44235404802508205,8.018846459522305,3.937709662867197,5.302016750175643,1.1389406163129612,8.76508983282713,4.299631736229576,4.660481231426545,0.5461131667647479,0.3665791977453292,3.034559564588567,6.986934160607126,2.4213350303938954,9.176617371644138,4.912714219130695,9.431833374339046,8.891572717149533,2.886905652964157,9.213020517969658,7.725832913348981,1.745200527418852,1.1111837913460476,0.4744355358925667,1.3649549431733,0.6240015436826474,2.388290916400153,9.9523279260227,6.4374352609285355,5.077546199998309,0.05799093548808587,8.619093169395773,1.621219317286402,6.653084304038583,3.6544725180185056,2.2390573586580222,7.578752606284175,3.488348037396085,1.783225625498901,1.587051472348775,1.5666358997760543,9.567062614905947,8.958409336965858,6.955906790693155,2.046718763239862,2.6367015519004076,5.7109274090007585,6.575352178966406,6.136849035953511,7.932024142868313,5.286254644993181,3.3574762419018747,5.0818768407317645,7.3119646757955685,8.568850316661607,7.784041735226007,5.233363754336608,3.0990704262527236,8.399734807143886,1.2714770605019632,4.79608514985787,1.1129219646189703,4.163994442971386,3.7910790885131007,3.7359298671150576,0.5665521132137763,2.854743092358023,9.90758812856285,6.068233590458602,5.149908290461623,9.738648752648913,2.2501982675490098,8.719713253088308,8.063059905501426,8.276470048202855,0.7089096372336268,9.766804415192865,6.1474952539740615,1.4236398457704502,1.1145587800888945,3.2174532263930633,8.71193774545554,3.4805406568404997,0.7093370673137367,7.365325856411515,8.111712843027806,8.917923920325448,5.5318501231615835,9.51506092883906,3.156106817959637,8.034007004983671,7.668282782509944,8.94307062132028,5.170143676919904,2.888243921345428,1.3093020893005425,5.207921236192473,9.907154822919255,0.18325940298942966,6.627421086190289,3.5285752054408803,4.183450803016094,7.561902714018679,3.0586859507825293,6.440512037490799,0.42834500023035016,2.3894221061802368,5.331255359718906,6.553539060519718,3.2998925366733802,1.9403346584373249,3.092920232238785,8.210731690029002,0.24459678235965066,8.281609991699254,5.4252082562889035,1.2221633209151006,3.7221750029224276,3.4718401893858983,0.000612964367798785,4.604517806443304,8.768226288545058,9.804246318256554,5.252658167519254,1.213625553644515,4.582132116747921,2.469847100236877,7.97989505981186,4.329418695208492,1.14945551698183,7.883484671476894,4.68981407570428,5.527143031371948,5.71010782191104,3.7635353333962387,7.7360123129013125,6.32215868268125,0.3141522368268068,0.37012999197134855,7.792796932792523,8.500389563206637,8.16080046847006,7.136420629514987,5.660076157113096,8.250518493922778,1.8477733321607837,9.883342791116709,8.312126240418031,9.345480803074814,0.23283181443057077,1.1774608573328338,1.6800237771232662,9.461232099237035,1.6606104200821292,2.8469289081154248,0.26734547322974866,7.692151724320633,4.667720515836652,6.557385523044252,8.847850629750285,3.6049027554954005,7.559304236407928,7.9456532614877755,4.379917588193068,0.63777185188021,8.090007156339636,7.551978151379659,6.65020145575544,4.781931971576037,3.675904583177992,3.6457295543356603,9.587729770404499,3.4145162718852196,7.19966619566455,6.717251279733155,0.8039029979711343,8.585220446295363,4.2118003381460225,6.4200354347162865,1.4152460126070987,2.153834169720473,0.4912190568524233,3.8358309596985087,9.739134922526913,3.7494995157694966,5.003220104635453,5.614661038351585,1.6964070190459202,5.773258474973199,1.47844228150253,8.715808861457605,9.950032317430225,7.272738417974491,5.428575338922558,3.331396369575189,5.27924120179843,6.800329775795212,4.070176361904063,4.512759167091259,9.63467168888404,7.404980671203463,8.43592326378889,4.808258881230019,0.3732996780438369,0.1532367976633353,6.752366162740301,7.658438915981445,4.370678460637025,9.41535621350728,2.4398938232785805,3.0095194357501134,3.6495624078998623,0.8696935123806149,0.5110723407828432,8.835157495104939,4.347075379846571,4.489165395894031,1.7847183059577565,7.472585961657824,8.441183210018993,3.1551948540249954,1.0478817133524665,3.9442568966903604,5.693021116004337,2.6880754909673565,8.838325397049832,2.5370171889320026,6.891084472634398,6.159155789835156,4.399749403701751,4.348568011836008,1.6072018772539098,4.351762854160083,8.611834162303953,4.986707789487703,9.601374775882807,4.2419537208293505,3.3387314246391107,0.4400057126677226,6.999453335260681,4.053601593700517,7.177225526777761,1.460980968754203,1.0185291950526287,6.53953246307104,9.452051765139643,3.533892998378385,8.411496982217098,0.5065535353833339,6.196108717591048,4.075096633640797,2.7782154517997726,9.64742381407901,3.401209452224858,7.295207835062939,4.823722226703787,8.636348838770223,7.491006184281766,0.8759142536593045,9.654571471055633,3.190165331690822,1.270028329051549,0.8687409567565019,3.3671166245603814,0.5686001534710594,5.831182290096737,1.9453752105083355,5.469230815829242,3.6296568885818727,9.385417579249847,7.8430097737783955,5.739047744153324,2.320681030481555,9.713837189745341,5.076280650872964,0.09334949288968608,3.801996542704922,1.4552319463234098,8.533316018553341,3.2121847542606186,8.747440130641124,3.1968394836580294,7.110235213369038,3.0847318663730228,1.7397654825893394,7.083244912387171,0.5746327100319437,6.715725302409844,0.6297083441252416,6.78011856384596,9.435926096285932,6.241598641393507,5.933462349583815,9.38333667574447,1.662628412269267,3.7659878525797517,2.635828399334298,7.507060837774794,0.5119035915690695,6.278052964687808,9.566744845709511,1.0924709664398569,7.036287677444441,2.9478374506941094,4.075852084380913,2.9458216683936724,1.3164856399197067,7.793659656171714,1.690378318727337,6.382488710305254,2.5690864866544083,9.93666541626334,2.865423543106461,8.535359853851187,8.254819247060727,6.49812048376666,3.062769925914383,7.351981099157127,5.34750379316406,6.17675172250514,4.510440812812062,5.8180960656779845,4.924096541403706,5.123462506402898,6.09650917706261,9.659631238062781,7.082069142905438,6.20395249769501,3.3623836962127562,2.6455945017664906,1.8109223389935147,2.254691957987618,7.565514138105568,3.2410630985674205,6.501074264323571,9.94455928781829,0.5500232057397347,6.542406750297662,5.744250436909165,9.124116372065021,8.18096934669113,0.9326034778180403,0.25416769283076346,3.479945696846214,1.910310398649696,3.621830580278609,2.0546888209099423,6.426021257110493,1.2311327111230053,7.75395990071851,6.839617128411621,4.379949448706658,0.5541124645130446,9.913084930852213,3.445413495425198,0.24901965227087985,0.6648193861657692,0.8211722013286404,6.9370560233941605,4.323937297268171,9.020903602873076,2.448434459492267,7.405702781566404,3.8235656406712604,8.768949317343083,1.3392944799679174,8.126280248688095,0.7157246857424837,1.8483315701459868,9.70346929246142,9.111775633099889,4.623670295168527,2.3997144715721195,4.636290164820009,9.29297925395609,8.71699008321818,9.473845951930588,5.960037066753965,7.026963439305404,6.08898210802295,2.580274826905049,1.815782809536508,9.585116320462188,6.898823752755509,8.044226521226847,9.348225504175854,9.749577315408121,0.4217787220344871,1.2485004838862956,5.487551240174996,8.87473688782703,9.918064713846782,7.399370502461252,7.319411942538618,2.579735615337484,6.216644760837959,6.134982500654963,3.1095119384012646,9.05283069242749,1.234580670525427,9.793182448179083,9.476922141944108,9.178529699848067,0.9999423075958092,4.6446347413674784,3.1775103329932133,5.378106468356919,3.40817799595862,3.1168991960053316,0.11278243829761836,5.238677100430124,1.0274510665341108,8.999982373193925,0.5972040587728156,5.284557419027268,3.4431136402173834,2.695293648021899,3.2670373599854186,2.799365543717811,8.521923870098036,8.59367314781237,4.626387581384006,1.226907780981119,5.022383915804021,2.742961380117279,6.112437833651526,0.9390607060286726,5.6043456280853885,5.291980947272813,9.902113774893635,5.7785623208155155,1.7470063593608576,7.057559094985586,0.8228335021963062,7.294553850990047,5.910622378321637,4.615422367191929,1.2433250898386927,2.7786918771159206,2.394118099466145,4.478652772183462,2.2716699609808586,3.3777781527868123,4.764585735358922,2.5079235203030894,4.9145016627617375,4.177275038821894,9.663396111128446,5.06836145318334,4.573740255139116,4.164289509215137,2.1283246585075224,2.3275468766202936,0.9671375378742586,6.989640715366955,3.080887311945869,4.153833605681038,6.256490492546176,1.4270946027423992,4.100995860112596,6.768934102299474,0.37621537795086035,7.801521267204143,7.234505637482452,1.8190706021778236,9.64198091440117,1.0884941960443562,2.224003312165795,3.3107109043650675,9.840290463642,3.856430946882875,9.470841284418855,5.711544619689742,5.6553627976835275,8.337194182826456,7.301837902606811,4.081649179713933,2.171834076672324,1.3659563164745714,3.022292497720037,7.710389930302005,5.780327385228757,3.8560935260784657,1.568532206615112,1.5259357045974042,9.886822405545534,7.949830286293346,0.26626621355704483,2.5620821979788255,8.912228813867186,7.2216108511335975,7.96242800669669,0.6389427343879006,7.785487160727104,7.892642521930561,3.365716393122864,7.249728225265529,4.012866648147577,6.247021148453792,5.017853548453176,3.7291964409298672,5.0139287944475495,4.1198676371831935,1.3478947526303753,5.4539884361847415,4.644989990623679,3.6648690354100335,3.71679776590774,6.588371949907078,1.834539534752918,8.37575687620951,2.302647724183038,6.991686230630883,8.716814531014563,7.941509981546057,3.467835924241731,7.351237973840933,5.745143427835517,2.588729798179017,5.515116633742808,0.920990499354537,1.768523111554855,8.95441274349012,2.2398074590462516,1.3990913803373095,6.785783615276476,3.428469762393033,6.334820049402346,8.80051384676243,2.2360960372284957,2.26904023542829,7.437002671090771,7.8547238555295475,4.848462719233016,6.402394916995111,6.118792580948228,4.812576476009247,1.9268203061399047,7.430415688735229,1.251050012213143,7.630799382416848,3.7560302362006306,0.1598464306957692,3.256900979748829,5.847161213914931,5.221715533791893,8.865518718142939,5.860939403787846,4.7797708322182695,6.899500751458806,5.746345793031006,6.087229044422454,3.1318234933794775,0.4192109754544371,2.729753756828096,1.8246151732415272,4.704306176222502,2.198039410973328,9.920474950844435,5.817600366305266,4.481834659508777,4.6525801721451385,3.3448346571353635,0.5959455333326491,5.024022303073966,0.51812070683252,5.302758769237287,1.774793148618251,7.988708877554508,4.511838829163511,8.274384633116451,0.5013123315715529,5.4164153141435065,1.2401043144017665,7.490910705173466,6.302673253450301,3.064753337597547,6.336632305903209,5.106775893408129,7.119549419706716,1.4754424146594536,1.6522975968206888,6.99359562129416,4.302046147466234,5.3846074094014496,2.2288667422299504,5.91607783063628,3.9159372741366383,5.987878463368752,3.922223061803586,7.271707327907259,0.616861374243115,5.043183468617504,6.033190955749114,1.7288661826150398,6.691461704952083,3.6270386823830423,8.664266816716278,1.7999246161679006,6.88713449788275,2.0365632612783404,8.303070829506918,6.310208467368165,5.2261976653134425,3.9133240665318434,9.840416383174075,3.6363454378188917,4.265887971844201,0.36512181022696155,9.379413718279842,3.4178125656762095,9.42214225467726,0.5650416717865581,4.589978166885867,4.470296428733331,9.067301318657936,4.525009667300566,0.7889344563794543,2.0868385884632215,6.064316044009747,9.605440869025628,7.462102315991875,2.736813492445702,0.8003374737301616,9.979124049749522,5.304443963013749,9.33059370635808,6.797332213099006,4.253131211134265,8.63619722818408,3.3997289336675065,9.973585763926136,5.012583646189157,2.7398469618136936,8.409037279955129,8.399859481263007,3.3949699418093937,1.326634674027516,7.656439999866401,4.5316417642057925,0.6299357646814618,1.3958187477311323,8.144992218943521,1.3745646555157631,2.7133848967617613,7.502746382553099,9.35167200093855,5.028882726517232,7.700208982955392,4.324680208699844,0.10722572894749205,2.097429303547459,7.028469630869618,4.118186384516803,2.046728168013815,0.3033561416067643,2.1061138679483573,1.9097653616757149,3.370502409244862,6.981254120629164,0.26042956384784044,3.352564205893691,8.785976967174566,3.5785634556489754,7.942763365072905,0.08407864176415591,6.1172026311600325,9.521219065455188,2.966503979670162,9.788348159042307,4.57168307610964,3.272857130744283,9.815012940763783,8.396604864705443,0.9218889583311585,2.0042773274117676,0.4103931285693141,1.9456691281022154,8.346505657323078,2.7043859703464035,3.9460102533576826,4.409972068910478,5.8379573908561,2.8574511232827806,7.960580743245042,5.2509946165949115,0.3204533388114472,3.278637599689247,0.43688617683770303,7.463812658941711,0.3233349608903746,5.621196012858708,6.020639967542666,1.7113127967985953,0.4984403804551163,7.741679493974201,2.1127424733695843,6.325403009724635,2.481758472206036,0.7664595890761727,3.1546578107111047,6.679990179083869,3.377081834339392,6.377022158244179,5.218383022996277,8.787381040895092,7.810969759002466,3.114326877888093,0.9265414279578177,1.2589001222789775,8.4952548734053,1.746494653782067,5.2147095888343316,5.177308337462804,8.618132846974625,1.9863298137802843,8.211665291125637,2.318090404209423,4.993355288754733,0.13286028272368133,5.684867758039975,9.801949186134888,2.566012950786777,0.2852055890709404,4.235614340559363,7.449415121067422,7.182104843331074,1.3726720103019896,0.2658383031009204,8.833642564266736,1.6794689109812488,5.121254372184984,8.976647300292935,5.976294267695139,5.508171702989002,3.9784569082527312,7.453183112198877,2.236498915306633,1.5057443929067538,4.79750670359044,5.7496282852916,1.876716211812235,3.8444762531942556,9.048903648848484,4.705943755854305,9.768152105289456,0.2219966840377241,6.000157576665643,7.111517753492005,5.049233786836086,2.8769141147727826,6.208237656939476,8.993185516001187,9.500039948806268,3.859268440275577,3.834201507295716,9.691359220563754,5.031293527846877,4.551917937724087,4.918898082951184,6.633748220114898,6.9489937175484275,1.459002159762438,2.6531608294292597,9.331285597573785,9.982156447233436,6.090317304212935,5.278471952649564,8.91483241737324,4.353806573005043,2.7188647416622658,9.827812002173955,4.842065040550368,3.8542265766112704,6.6674976326800595,0.8125893733930623,0.036979760952677854,2.879005794627857,0.46506481251114895,6.650733658604285,7.323757058080526,5.797585628823222,8.505361075960398,1.2016865401807975,7.460097245814229,5.98321950487136,9.793094403103712,9.473309854376973,4.370221139604109,2.2619477569934143,8.667204607047662,6.022812468860808,6.921857854573529,6.138439754418893,6.704186258098054,9.422953002705476,6.85270418171537,0.959297722159238,9.704043929267037,7.818951695502382,8.872790942463633,8.318992211608531,8.763776026039885,2.0994474047397302,1.3381205347793446,0.08230806890644149,7.79861893119187,1.8172317453694409,6.6271676946341955,3.5699369287549887,1.584564512297626,5.679715244596382,8.947213989128533,8.707263143931305,9.320745337062196,8.2706994072967,8.125507169027776,7.483722044036218,8.74328831383849,5.860693305469184,4.54519963304306,3.2716163469558177,0.48656961385691977,3.425538565779668,3.7624272319002063,3.690663560862263,0.9271746980173146,6.219506948278789,8.044010820762782,5.94450858505496,3.6945864246046534,1.8040945960428834,7.186921597172499,2.1750618978294156,6.683940944976521,9.163447748111341,2.261053269896216,2.423698604583401,6.639668954211703,2.0273586420605607,9.894983949594021,7.264865757083029,4.435538930170955,8.248818446648674,9.634694706051498,1.4847279671490288,6.116686761803436,0.7413749686082649,4.300364572547421,9.15376955690839,2.2957124251617076,8.72921742807111,7.242622082519854,7.314661783596756,2.0839141010786024,7.680641569546614,1.4679726590734155,3.716765917571565,5.4677708503572475,3.6175352653283643,5.403112398443193,7.610797472876837,8.442549482523992,5.664106093007202,5.459810100242377,8.176141662972503,3.9209855127384685,4.175090566780391,5.9928649884245,1.9975575407811463,4.674484104976694,9.190128525159288,2.378057662816401,4.360618950953514,0.37665229336618866,3.8565469571898414,7.488023820728759,5.767486027343788,2.24613670959858,3.3307840552102497,7.664853964897709,9.887557050013044,4.636594821692238,7.484007197496133,5.939895181488365,9.098305602472584,0.11260774303829546,5.6587406499273705,9.312913551198484,6.830848627824811,9.356838441849948,9.76504479123288,3.6440696413032736,8.984139826396216,4.6182403176420515,7.529164498849937,8.864288539402162,2.3705010808589186,0.7469100060730183,5.243086390339876,5.808112673188087,2.743631122701892,9.593203069084872,9.745178427108836,7.586938731507091,4.482230461321554,6.548078408776008,3.7209235009171406,1.6382745410495103,2.90417504285685,3.5972912174195626,3.858814096279156,4.093557388773249,0.8546300073132762,4.45308336752945,0.4328068579809896,3.2851152430587858,1.2722841574403643,2.7929602998672753,6.444896531197399,4.575739916814707,0.22625581725419064,1.2674187552800575,5.915070451897234,3.223105146675148,3.1422177013274344,4.154844795169535]}

},{}],32:[function(require,module,exports){
module.exports={"expectedx":[-709.78,-709.0705105105105,-708.361021021021,-707.6515315315315,-706.9420420420421,-706.2325525525525,-705.5230630630631,-704.8135735735735,-704.1040840840841,-703.3945945945947,-702.6851051051051,-701.9756156156157,-701.2661261261261,-700.5566366366367,-699.8471471471471,-699.1376576576577,-698.4281681681682,-697.7186786786787,-697.0091891891892,-696.2996996996997,-695.5902102102102,-694.8807207207208,-694.1712312312312,-693.4617417417418,-692.7522522522522,-692.0427627627628,-691.3332732732732,-690.6237837837838,-689.9142942942943,-689.2048048048048,-688.4953153153153,-687.7858258258258,-687.0763363363363,-686.3668468468469,-685.6573573573573,-684.9478678678679,-684.2383783783783,-683.5288888888889,-682.8193993993993,-682.1099099099099,-681.4004204204205,-680.6909309309309,-679.9814414414415,-679.2719519519519,-678.5624624624625,-677.852972972973,-677.1434834834835,-676.433993993994,-675.7245045045045,-675.015015015015,-674.3055255255256,-673.596036036036,-672.8865465465466,-672.177057057057,-671.4675675675676,-670.758078078078,-670.0485885885886,-669.3390990990991,-668.6296096096096,-667.9201201201201,-667.2106306306306,-666.5011411411411,-665.7916516516517,-665.0821621621621,-664.3726726726727,-663.6631831831832,-662.9536936936937,-662.2442042042042,-661.5347147147147,-660.8252252252253,-660.1157357357357,-659.4062462462463,-658.6967567567567,-657.9872672672673,-657.2777777777778,-656.5682882882883,-655.8587987987988,-655.1493093093093,-654.4398198198198,-653.7303303303303,-653.0208408408408,-652.3113513513514,-651.6018618618618,-650.8923723723724,-650.1828828828828,-649.4733933933934,-648.763903903904,-648.0544144144144,-647.344924924925,-646.6354354354354,-645.925945945946,-645.2164564564565,-644.506966966967,-643.7974774774775,-643.087987987988,-642.3784984984985,-641.669009009009,-640.9595195195195,-640.2500300300301,-639.5405405405405,-638.8310510510511,-638.1215615615615,-637.4120720720721,-636.7025825825826,-635.9930930930931,-635.2836036036036,-634.5741141141141,-633.8646246246246,-633.1551351351351,-632.4456456456456,-631.7361561561562,-631.0266666666666,-630.3171771771772,-629.6076876876876,-628.8981981981982,-628.1887087087088,-627.4792192192192,-626.7697297297298,-626.0602402402402,-625.3507507507508,-624.6412612612612,-623.9317717717718,-623.2222822822823,-622.5127927927928,-621.8033033033033,-621.0938138138138,-620.3843243243243,-619.6748348348349,-618.9653453453453,-618.2558558558559,-617.5463663663663,-616.8368768768769,-616.1273873873874,-615.4178978978979,-614.7084084084084,-613.9989189189189,-613.2894294294294,-612.5799399399399,-611.8704504504504,-611.160960960961,-610.4514714714715,-609.741981981982,-609.0324924924925,-608.323003003003,-607.6135135135136,-606.904024024024,-606.1945345345346,-605.485045045045,-604.7755555555556,-604.066066066066,-603.3565765765766,-602.6470870870871,-601.9375975975976,-601.2281081081081,-600.5186186186186,-599.8091291291291,-599.0996396396397,-598.3901501501501,-597.6806606606607,-596.9711711711711,-596.2616816816817,-595.5521921921921,-594.8427027027027,-594.1332132132133,-593.4237237237237,-592.7142342342343,-592.0047447447447,-591.2952552552553,-590.5857657657658,-589.8762762762763,-589.1667867867868,-588.4572972972973,-587.7478078078078,-587.0383183183184,-586.3288288288288,-585.6193393393394,-584.9098498498498,-584.2003603603604,-583.4908708708708,-582.7813813813814,-582.0718918918919,-581.3624024024024,-580.6529129129129,-579.9434234234234,-579.2339339339339,-578.5244444444445,-577.8149549549549,-577.1054654654655,-576.395975975976,-575.6864864864865,-574.976996996997,-574.2675075075075,-573.5580180180181,-572.8485285285285,-572.1390390390391,-571.4295495495495,-570.7200600600601,-570.0105705705706,-569.3010810810811,-568.5915915915916,-567.8821021021021,-567.1726126126126,-566.4631231231231,-565.7536336336336,-565.0441441441442,-564.3346546546546,-563.6251651651652,-562.9156756756756,-562.2061861861862,-561.4966966966967,-560.7872072072072,-560.0777177177177,-559.3682282282282,-558.6587387387387,-557.9492492492493,-557.2397597597597,-556.5302702702703,-555.8207807807808,-555.1112912912913,-554.4018018018018,-553.6923123123123,-552.9828228228229,-552.2733333333333,-551.5638438438439,-550.8543543543543,-550.1448648648649,-549.4353753753754,-548.7258858858859,-548.0163963963964,-547.3069069069069,-546.5974174174174,-545.8879279279279,-545.1784384384384,-544.468948948949,-543.7594594594594,-543.04996996997,-542.3404804804804,-541.630990990991,-540.9215015015016,-540.212012012012,-539.5025225225226,-538.793033033033,-538.0835435435436,-537.374054054054,-536.6645645645646,-535.9550750750751,-535.2455855855856,-534.5360960960961,-533.8266066066066,-533.1171171171171,-532.4076276276277,-531.6981381381381,-530.9886486486487,-530.2791591591591,-529.5696696696697,-528.8601801801802,-528.1506906906907,-527.4412012012012,-526.7317117117117,-526.0222222222222,-525.3127327327327,-524.6032432432432,-523.8937537537538,-523.1842642642642,-522.4747747747748,-521.7652852852852,-521.0557957957958,-520.3463063063064,-519.6368168168168,-518.9273273273274,-518.2178378378378,-517.5083483483484,-516.7988588588588,-516.0893693693694,-515.3798798798799,-514.6703903903904,-513.9609009009009,-513.2514114114114,-512.5419219219219,-511.8324324324324,-511.1229429429429,-510.4134534534534,-509.703963963964,-508.9944744744745,-508.284984984985,-507.5754954954955,-506.866006006006,-506.1565165165165,-505.44702702702705,-504.73753753753755,-504.02804804804805,-503.31855855855855,-502.60906906906905,-501.89957957957955,-501.1900900900901,-500.4806006006006,-499.7711111111111,-499.0616216216216,-498.3521321321321,-497.64264264264267,-496.93315315315317,-496.2236636636637,-495.5141741741742,-494.8046846846847,-494.0951951951952,-493.38570570570573,-492.67621621621623,-491.96672672672673,-491.25723723723723,-490.54774774774774,-489.83825825825824,-489.1287687687688,-488.4192792792793,-487.7097897897898,-487.0003003003003,-486.2908108108108,-485.5813213213213,-484.87183183183186,-484.16234234234236,-483.45285285285286,-482.74336336336336,-482.03387387387386,-481.32438438438436,-480.6148948948949,-479.9054054054054,-479.1959159159159,-478.4864264264264,-477.7769369369369,-477.0674474474474,-476.357957957958,-475.6484684684685,-474.938978978979,-474.2294894894895,-473.52,-472.8105105105105,-472.10102102102104,-471.39153153153154,-470.68204204204204,-469.97255255255254,-469.26306306306304,-468.5535735735736,-467.8440840840841,-467.1345945945946,-466.4251051051051,-465.7156156156156,-465.0061261261261,-464.29663663663666,-463.58714714714716,-462.87765765765766,-462.16816816816817,-461.45867867867867,-460.74918918918917,-460.0396996996997,-459.3302102102102,-458.6207207207207,-457.9112312312312,-457.2017417417417,-456.49225225225223,-455.7827627627628,-455.0732732732733,-454.3637837837838,-453.6542942942943,-452.9448048048048,-452.2353153153153,-451.52582582582585,-450.81633633633635,-450.10684684684685,-449.39735735735735,-448.68786786786785,-447.97837837837835,-447.2688888888889,-446.5593993993994,-445.8499099099099,-445.1404204204204,-444.4309309309309,-443.7214414414414,-443.01195195195197,-442.3024624624625,-441.592972972973,-440.8834834834835,-440.173993993994,-439.46450450450453,-438.75501501501503,-438.04552552552553,-437.33603603603603,-436.62654654654654,-435.91705705705704,-435.2075675675676,-434.4980780780781,-433.7885885885886,-433.0790990990991,-432.3696096096096,-431.6601201201201,-430.95063063063066,-430.24114114114116,-429.53165165165166,-428.82216216216216,-428.11267267267266,-427.40318318318316,-426.6936936936937,-425.9842042042042,-425.2747147147147,-424.5652252252252,-423.8557357357357,-423.1462462462462,-422.4367567567568,-421.7272672672673,-421.0177777777778,-420.3082882882883,-419.5987987987988,-418.8893093093093,-418.17981981981984,-417.47033033033034,-416.76084084084084,-416.05135135135134,-415.34186186186184,-414.63237237237234,-413.9228828828829,-413.2133933933934,-412.5039039039039,-411.7944144144144,-411.0849249249249,-410.37543543543546,-409.66594594594596,-408.95645645645646,-408.24696696696697,-407.53747747747747,-406.82798798798797,-406.1184984984985,-405.409009009009,-404.6995195195195,-403.99003003003,-403.2805405405405,-402.57105105105103,-401.8615615615616,-401.1520720720721,-400.4425825825826,-399.7330930930931,-399.0236036036036,-398.3141141141141,-397.60462462462465,-396.89513513513515,-396.18564564564565,-395.47615615615615,-394.76666666666665,-394.05717717717715,-393.3476876876877,-392.6381981981982,-391.9287087087087,-391.2192192192192,-390.5097297297297,-389.8002402402402,-389.0907507507508,-388.3812612612613,-387.6717717717718,-386.9622822822823,-386.2527927927928,-385.5433033033033,-384.83381381381383,-384.12432432432433,-383.41483483483483,-382.70534534534534,-381.99585585585584,-381.2863663663664,-380.5768768768769,-379.8673873873874,-379.1578978978979,-378.4484084084084,-377.7389189189189,-377.02942942942946,-376.31993993993996,-375.61045045045046,-374.90096096096096,-374.19147147147146,-373.48198198198196,-372.7724924924925,-372.063003003003,-371.3535135135135,-370.644024024024,-369.9345345345345,-369.225045045045,-368.5155555555556,-367.8060660660661,-367.0965765765766,-366.3870870870871,-365.6775975975976,-364.9681081081081,-364.25861861861864,-363.54912912912914,-362.83963963963964,-362.13015015015014,-361.42066066066064,-360.71117117117115,-360.0016816816817,-359.2921921921922,-358.5827027027027,-357.8732132132132,-357.1637237237237,-356.4542342342342,-355.74474474474476,-355.03525525525527,-354.32576576576577,-353.61627627627627,-352.90678678678677,-352.1972972972973,-351.4878078078078,-350.7783183183183,-350.0688288288288,-349.35933933933933,-348.64984984984983,-347.9403603603604,-347.2308708708709,-346.5213813813814,-345.8118918918919,-345.1024024024024,-344.3929129129129,-343.68342342342345,-342.97393393393395,-342.26444444444445,-341.55495495495495,-340.84546546546545,-340.13597597597595,-339.4264864864865,-338.716996996997,-338.0075075075075,-337.298018018018,-336.5885285285285,-335.879039039039,-335.1695495495496,-334.4600600600601,-333.7505705705706,-333.0410810810811,-332.3315915915916,-331.6221021021021,-330.91261261261263,-330.20312312312313,-329.49363363363364,-328.78414414414414,-328.07465465465464,-327.36516516516514,-326.6556756756757,-325.9461861861862,-325.2366966966967,-324.5272072072072,-323.8177177177177,-323.10822822822826,-322.39873873873876,-321.68924924924926,-320.97975975975976,-320.27027027027026,-319.56078078078076,-318.8512912912913,-318.1418018018018,-317.4323123123123,-316.7228228228228,-316.0133333333333,-315.3038438438438,-314.5943543543544,-313.8848648648649,-313.1753753753754,-312.4658858858859,-311.7563963963964,-311.0469069069069,-310.33741741741744,-309.62792792792794,-308.91843843843844,-308.20894894894894,-307.49945945945944,-306.78996996996995,-306.0804804804805,-305.370990990991,-304.6615015015015,-303.952012012012,-303.2425225225225,-302.533033033033,-301.82354354354356,-301.11405405405407,-300.40456456456457,-299.69507507507507,-298.98558558558557,-298.27609609609607,-297.5666066066066,-296.8571171171171,-296.1476276276276,-295.43813813813813,-294.72864864864863,-294.0191591591592,-293.3096696696697,-292.6001801801802,-291.8906906906907,-291.1812012012012,-290.4717117117117,-289.76222222222225,-289.05273273273275,-288.34324324324325,-287.63375375375375,-286.92426426426425,-286.21477477477475,-285.5052852852853,-284.7957957957958,-284.0863063063063,-283.3768168168168,-282.6673273273273,-281.9578378378378,-281.2483483483484,-280.5388588588589,-279.8293693693694,-279.1198798798799,-278.4103903903904,-277.7009009009009,-276.99141141141143,-276.28192192192193,-275.57243243243244,-274.86294294294294,-274.15345345345344,-273.44396396396394,-272.7344744744745,-272.024984984985,-271.3154954954955,-270.606006006006,-269.8965165165165,-269.187027027027,-268.47753753753756,-267.76804804804806,-267.05855855855856,-266.34906906906906,-265.63957957957956,-264.9300900900901,-264.2206006006006,-263.5111111111111,-262.8016216216216,-262.0921321321321,-261.3826426426426,-260.6731531531532,-259.9636636636637,-259.2541741741742,-258.5446846846847,-257.8351951951952,-257.1257057057057,-256.41621621621624,-255.7067267267267,-254.99723723723724,-254.28774774774774,-253.57825825825824,-252.86876876876877,-252.15927927927927,-251.44978978978978,-250.7403003003003,-250.0308108108108,-249.32132132132134,-248.61183183183184,-247.90234234234234,-247.19285285285287,-246.48336336336337,-245.77387387387387,-245.0643843843844,-244.3548948948949,-243.6454054054054,-242.93591591591593,-242.22642642642643,-241.51693693693693,-240.80744744744746,-240.09795795795796,-239.38846846846846,-238.678978978979,-237.9694894894895,-237.26,-236.55051051051052,-235.84102102102102,-235.13153153153152,-234.42204204204205,-233.71255255255255,-233.00306306306305,-232.29357357357358,-231.58408408408408,-230.87459459459458,-230.1651051051051,-229.4556156156156,-228.74612612612611,-228.03663663663664,-227.32714714714714,-226.61765765765765,-225.90816816816817,-225.19867867867868,-224.48918918918918,-223.7796996996997,-223.0702102102102,-222.3607207207207,-221.65123123123124,-220.94174174174174,-220.23225225225227,-219.52276276276277,-218.81327327327327,-218.1037837837838,-217.3942942942943,-216.6848048048048,-215.97531531531533,-215.26582582582583,-214.55633633633633,-213.84684684684686,-213.13735735735736,-212.42786786786786,-211.7183783783784,-211.0088888888889,-210.2993993993994,-209.58990990990992,-208.88042042042042,-208.17093093093092,-207.46144144144145,-206.75195195195195,-206.04246246246245,-205.33297297297298,-204.62348348348348,-203.91399399399398,-203.2045045045045,-202.495015015015,-201.78552552552551,-201.07603603603604,-200.36654654654654,-199.65705705705705,-198.94756756756757,-198.23807807807808,-197.52858858858858,-196.8190990990991,-196.1096096096096,-195.4001201201201,-194.69063063063064,-193.98114114114114,-193.27165165165164,-192.56216216216217,-191.85267267267267,-191.1431831831832,-190.4336936936937,-189.7242042042042,-189.01471471471473,-188.30522522522523,-187.59573573573573,-186.88624624624626,-186.17675675675676,-185.46726726726726,-184.7577777777778,-184.0482882882883,-183.3387987987988,-182.62930930930932,-181.91981981981982,-181.21033033033032,-180.50084084084085,-179.79135135135135,-179.08186186186185,-178.37237237237238,-177.66288288288288,-176.95339339339338,-176.2439039039039,-175.5344144144144,-174.82492492492491,-174.11543543543544,-173.40594594594594,-172.69645645645645,-171.98696696696697,-171.27747747747748,-170.56798798798798,-169.8584984984985,-169.149009009009,-168.4395195195195,-167.73003003003004,-167.02054054054054,-166.31105105105104,-165.60156156156157,-164.89207207207207,-164.18258258258257,-163.4730930930931,-162.7636036036036,-162.05411411411413,-161.34462462462463,-160.63513513513513,-159.92564564564566,-159.21615615615616,-158.50666666666666,-157.7971771771772,-157.0876876876877,-156.3781981981982,-155.66870870870872,-154.95921921921922,-154.24972972972972,-153.54024024024025,-152.83075075075075,-152.12126126126125,-151.41177177177178,-150.70228228228228,-149.99279279279278,-149.2833033033033,-148.5738138138138,-147.86432432432431,-147.15483483483484,-146.44534534534534,-145.73585585585585,-145.02636636636637,-144.31687687687688,-143.60738738738738,-142.8978978978979,-142.1884084084084,-141.4789189189189,-140.76942942942944,-140.05993993993994,-139.35045045045044,-138.64096096096097,-137.93147147147147,-137.22198198198197,-136.5124924924925,-135.803003003003,-135.0935135135135,-134.38402402402403,-133.67453453453453,-132.96504504504506,-132.25555555555556,-131.54606606606606,-130.8365765765766,-130.1270870870871,-129.4175975975976,-128.70810810810812,-127.99861861861862,-127.28912912912912,-126.57963963963964,-125.87015015015015,-125.16066066066067,-124.45117117117117,-123.74168168168168,-123.0321921921922,-122.3227027027027,-121.61321321321321,-120.90372372372373,-120.19423423423423,-119.48474474474475,-118.77525525525526,-118.06576576576576,-117.35627627627628,-116.64678678678679,-115.93729729729729,-115.2278078078078,-114.51831831831832,-113.80882882882882,-113.09933933933934,-112.38984984984985,-111.68036036036035,-110.97087087087087,-110.26138138138138,-109.5518918918919,-108.8424024024024,-108.13291291291291,-107.42342342342343,-106.71393393393393,-106.00444444444445,-105.29495495495496,-104.58546546546546,-103.87597597597598,-103.16648648648649,-102.45699699699699,-101.7475075075075,-101.03801801801802,-100.32852852852852,-99.61903903903904,-98.90954954954955,-98.20006006006005,-97.49057057057057,-96.78108108108108,-96.0715915915916,-95.3621021021021,-94.65261261261261,-93.94312312312313,-93.23363363363363,-92.52414414414415,-91.81465465465466,-91.10516516516516,-90.39567567567568,-89.68618618618619,-88.97669669669669,-88.2672072072072,-87.55771771771772,-86.84822822822822,-86.13873873873874,-85.42924924924925,-84.71975975975975,-84.01027027027027,-83.30078078078078,-82.59129129129128,-81.8818018018018,-81.17231231231231,-80.46282282282283,-79.75333333333333,-79.04384384384385,-78.33435435435436,-77.62486486486486,-76.91537537537538,-76.20588588588589,-75.49639639639639,-74.7869069069069,-74.07741741741742,-73.36792792792792,-72.65843843843844,-71.94894894894895,-71.23945945945945,-70.52996996996997,-69.82048048048048,-69.11099099099098,-68.4015015015015,-67.69201201201201,-66.98252252252253,-66.27303303303303,-65.56354354354355,-64.85405405405406,-64.14456456456456,-63.435075075075076,-62.725585585585584,-62.0160960960961,-61.30660660660661,-60.597117117117115,-59.88762762762763,-59.17813813813814,-58.468648648648646,-57.75915915915916,-57.04966966966967,-56.34018018018018,-55.63069069069069,-54.9212012012012,-54.211711711711715,-53.50222222222222,-52.79273273273273,-52.083243243243246,-51.37375375375375,-50.66426426426426,-49.954774774774776,-49.245285285285284,-48.5357957957958,-47.82630630630631,-47.116816816816815,-46.40732732732733,-45.69783783783784,-44.988348348348346,-44.27885885885886,-43.56936936936937,-42.85987987987988,-42.15039039039039,-41.4409009009009,-40.731411411411415,-40.02192192192192,-39.31243243243243,-38.602942942942946,-37.89345345345345,-37.18396396396396,-36.474474474474476,-35.764984984984984,-35.05549549549549,-34.34600600600601,-33.636516516516515,-32.92702702702703,-32.21753753753754,-31.50804804804805,-30.798558558558558,-30.08906906906907,-29.37957957957958,-28.67009009009009,-27.9606006006006,-27.25111111111111,-26.541621621621623,-25.83213213213213,-25.122642642642642,-24.413153153153154,-23.703663663663665,-22.994174174174173,-22.284684684684684,-21.575195195195196,-20.865705705705707,-20.156216216216215,-19.446726726726727,-18.737237237237238,-18.027747747747746,-17.318258258258258,-16.60876876876877,-15.899279279279279,-15.18978978978979,-14.4803003003003,-13.770810810810811,-13.061321321321321,-12.351831831831833,-11.642342342342342,-10.932852852852854,-10.223363363363363,-9.513873873873873,-8.804384384384385,-8.094894894894894,-7.385405405405406,-6.675915915915916,-5.966426426426427,-5.2569369369369365,-4.547447447447447,-3.837957957957958,-3.1284684684684683,-2.418978978978979,-1.7094894894894894,-1.0],"y":[-709.78,-709.0705105105105,-708.361021021021,-707.6515315315315,-706.9420420420421,-706.2325525525525,-705.5230630630631,-704.8135735735735,-704.1040840840841,-703.3945945945947,-702.6851051051051,-701.9756156156157,-701.2661261261261,-700.5566366366367,-699.8471471471471,-699.1376576576577,-698.4281681681682,-697.7186786786787,-697.0091891891892,-696.2996996996997,-695.5902102102102,-694.8807207207208,-694.1712312312312,-693.4617417417418,-692.7522522522522,-692.0427627627628,-691.3332732732732,-690.6237837837838,-689.9142942942943,-689.2048048048048,-688.4953153153153,-687.7858258258258,-687.0763363363363,-686.3668468468469,-685.6573573573573,-684.9478678678679,-684.2383783783783,-683.5288888888889,-682.8193993993993,-682.1099099099099,-681.4004204204205,-680.6909309309309,-679.9814414414415,-679.2719519519519,-678.5624624624625,-677.852972972973,-677.1434834834835,-676.433993993994,-675.7245045045045,-675.015015015015,-674.3055255255256,-673.596036036036,-672.8865465465466,-672.177057057057,-671.4675675675676,-670.758078078078,-670.0485885885886,-669.3390990990991,-668.6296096096096,-667.9201201201201,-667.2106306306306,-666.5011411411411,-665.7916516516517,-665.0821621621621,-664.3726726726727,-663.6631831831832,-662.9536936936937,-662.2442042042042,-661.5347147147147,-660.8252252252253,-660.1157357357357,-659.4062462462463,-658.6967567567567,-657.9872672672673,-657.2777777777778,-656.5682882882883,-655.8587987987988,-655.1493093093093,-654.4398198198198,-653.7303303303303,-653.0208408408408,-652.3113513513514,-651.6018618618618,-650.8923723723724,-650.1828828828828,-649.4733933933934,-648.763903903904,-648.0544144144144,-647.344924924925,-646.6354354354354,-645.925945945946,-645.2164564564565,-644.506966966967,-643.7974774774775,-643.087987987988,-642.3784984984985,-641.669009009009,-640.9595195195195,-640.2500300300301,-639.5405405405405,-638.8310510510511,-638.1215615615615,-637.4120720720721,-636.7025825825826,-635.9930930930931,-635.2836036036036,-634.5741141141141,-633.8646246246246,-633.1551351351351,-632.4456456456456,-631.7361561561562,-631.0266666666666,-630.3171771771772,-629.6076876876876,-628.8981981981982,-628.1887087087088,-627.4792192192192,-626.7697297297298,-626.0602402402402,-625.3507507507508,-624.6412612612612,-623.9317717717718,-623.2222822822823,-622.5127927927928,-621.8033033033033,-621.0938138138138,-620.3843243243243,-619.6748348348349,-618.9653453453453,-618.2558558558559,-617.5463663663663,-616.8368768768769,-616.1273873873874,-615.4178978978979,-614.7084084084084,-613.9989189189189,-613.2894294294294,-612.5799399399399,-611.8704504504504,-611.160960960961,-610.4514714714715,-609.741981981982,-609.0324924924925,-608.323003003003,-607.6135135135136,-606.904024024024,-606.1945345345346,-605.485045045045,-604.7755555555556,-604.066066066066,-603.3565765765766,-602.6470870870871,-601.9375975975976,-601.2281081081081,-600.5186186186186,-599.8091291291291,-599.0996396396397,-598.3901501501501,-597.6806606606607,-596.9711711711711,-596.2616816816817,-595.5521921921921,-594.8427027027027,-594.1332132132133,-593.4237237237237,-592.7142342342343,-592.0047447447447,-591.2952552552553,-590.5857657657658,-589.8762762762763,-589.1667867867868,-588.4572972972973,-587.7478078078078,-587.0383183183184,-586.3288288288288,-585.6193393393394,-584.9098498498498,-584.2003603603604,-583.4908708708708,-582.7813813813814,-582.0718918918919,-581.3624024024024,-580.6529129129129,-579.9434234234234,-579.2339339339339,-578.5244444444445,-577.8149549549549,-577.1054654654655,-576.395975975976,-575.6864864864865,-574.976996996997,-574.2675075075075,-573.5580180180181,-572.8485285285285,-572.1390390390391,-571.4295495495495,-570.7200600600601,-570.0105705705706,-569.3010810810811,-568.5915915915916,-567.8821021021021,-567.1726126126126,-566.4631231231231,-565.7536336336336,-565.0441441441442,-564.3346546546546,-563.6251651651652,-562.9156756756756,-562.2061861861862,-561.4966966966967,-560.7872072072072,-560.0777177177177,-559.3682282282282,-558.6587387387387,-557.9492492492493,-557.2397597597597,-556.5302702702703,-555.8207807807808,-555.1112912912913,-554.4018018018018,-553.6923123123123,-552.9828228228229,-552.2733333333333,-551.5638438438439,-550.8543543543543,-550.1448648648649,-549.4353753753754,-548.7258858858859,-548.0163963963964,-547.3069069069069,-546.5974174174174,-545.8879279279279,-545.1784384384384,-544.468948948949,-543.7594594594594,-543.04996996997,-542.3404804804804,-541.630990990991,-540.9215015015016,-540.212012012012,-539.5025225225226,-538.793033033033,-538.0835435435436,-537.374054054054,-536.6645645645646,-535.9550750750751,-535.2455855855856,-534.5360960960961,-533.8266066066066,-533.1171171171171,-532.4076276276277,-531.6981381381381,-530.9886486486487,-530.2791591591591,-529.5696696696697,-528.8601801801802,-528.1506906906907,-527.4412012012012,-526.7317117117117,-526.0222222222222,-525.3127327327327,-524.6032432432432,-523.8937537537538,-523.1842642642642,-522.4747747747748,-521.7652852852852,-521.0557957957958,-520.3463063063064,-519.6368168168168,-518.9273273273274,-518.2178378378378,-517.5083483483484,-516.7988588588588,-516.0893693693694,-515.3798798798799,-514.6703903903904,-513.9609009009009,-513.2514114114114,-512.5419219219219,-511.8324324324324,-511.1229429429429,-510.4134534534534,-509.703963963964,-508.9944744744745,-508.284984984985,-507.5754954954955,-506.866006006006,-506.1565165165165,-505.44702702702705,-504.73753753753755,-504.02804804804805,-503.31855855855855,-502.60906906906905,-501.89957957957955,-501.1900900900901,-500.4806006006006,-499.7711111111111,-499.0616216216216,-498.3521321321321,-497.64264264264267,-496.93315315315317,-496.2236636636637,-495.5141741741742,-494.8046846846847,-494.0951951951952,-493.38570570570573,-492.67621621621623,-491.96672672672673,-491.25723723723723,-490.54774774774774,-489.83825825825824,-489.1287687687688,-488.4192792792793,-487.7097897897898,-487.0003003003003,-486.2908108108108,-485.5813213213213,-484.87183183183186,-484.16234234234236,-483.45285285285286,-482.74336336336336,-482.03387387387386,-481.32438438438436,-480.6148948948949,-479.9054054054054,-479.1959159159159,-478.4864264264264,-477.7769369369369,-477.0674474474474,-476.357957957958,-475.6484684684685,-474.938978978979,-474.2294894894895,-473.52,-472.8105105105105,-472.10102102102104,-471.39153153153154,-470.68204204204204,-469.97255255255254,-469.26306306306304,-468.5535735735736,-467.8440840840841,-467.1345945945946,-466.4251051051051,-465.7156156156156,-465.0061261261261,-464.29663663663666,-463.58714714714716,-462.87765765765766,-462.16816816816817,-461.45867867867867,-460.74918918918917,-460.0396996996997,-459.3302102102102,-458.6207207207207,-457.9112312312312,-457.2017417417417,-456.49225225225223,-455.7827627627628,-455.0732732732733,-454.3637837837838,-453.6542942942943,-452.9448048048048,-452.2353153153153,-451.52582582582585,-450.81633633633635,-450.10684684684685,-449.39735735735735,-448.68786786786785,-447.97837837837835,-447.2688888888889,-446.5593993993994,-445.8499099099099,-445.1404204204204,-444.4309309309309,-443.7214414414414,-443.01195195195197,-442.3024624624625,-441.592972972973,-440.8834834834835,-440.173993993994,-439.46450450450453,-438.75501501501503,-438.04552552552553,-437.33603603603603,-436.62654654654654,-435.91705705705704,-435.2075675675676,-434.4980780780781,-433.7885885885886,-433.0790990990991,-432.3696096096096,-431.6601201201201,-430.95063063063066,-430.24114114114116,-429.53165165165166,-428.82216216216216,-428.11267267267266,-427.40318318318316,-426.6936936936937,-425.9842042042042,-425.2747147147147,-424.5652252252252,-423.8557357357357,-423.1462462462462,-422.4367567567568,-421.7272672672673,-421.0177777777778,-420.3082882882883,-419.5987987987988,-418.8893093093093,-418.17981981981984,-417.47033033033034,-416.76084084084084,-416.05135135135134,-415.34186186186184,-414.63237237237234,-413.9228828828829,-413.2133933933934,-412.5039039039039,-411.7944144144144,-411.0849249249249,-410.37543543543546,-409.66594594594596,-408.95645645645646,-408.24696696696697,-407.53747747747747,-406.82798798798797,-406.1184984984985,-405.409009009009,-404.6995195195195,-403.99003003003,-403.2805405405405,-402.57105105105103,-401.8615615615616,-401.1520720720721,-400.4425825825826,-399.7330930930931,-399.0236036036036,-398.3141141141141,-397.60462462462465,-396.89513513513515,-396.18564564564565,-395.47615615615615,-394.76666666666665,-394.05717717717715,-393.3476876876877,-392.6381981981982,-391.9287087087087,-391.2192192192192,-390.5097297297297,-389.8002402402402,-389.0907507507508,-388.3812612612613,-387.6717717717718,-386.9622822822823,-386.2527927927928,-385.5433033033033,-384.83381381381383,-384.12432432432433,-383.41483483483483,-382.70534534534534,-381.99585585585584,-381.2863663663664,-380.5768768768769,-379.8673873873874,-379.1578978978979,-378.4484084084084,-377.7389189189189,-377.02942942942946,-376.31993993993996,-375.61045045045046,-374.90096096096096,-374.19147147147146,-373.48198198198196,-372.7724924924925,-372.063003003003,-371.3535135135135,-370.644024024024,-369.9345345345345,-369.225045045045,-368.5155555555556,-367.8060660660661,-367.0965765765766,-366.3870870870871,-365.6775975975976,-364.9681081081081,-364.25861861861864,-363.54912912912914,-362.83963963963964,-362.13015015015014,-361.42066066066064,-360.71117117117115,-360.0016816816817,-359.2921921921922,-358.5827027027027,-357.8732132132132,-357.1637237237237,-356.4542342342342,-355.74474474474476,-355.03525525525527,-354.32576576576577,-353.61627627627627,-352.90678678678677,-352.1972972972973,-351.4878078078078,-350.7783183183183,-350.0688288288288,-349.35933933933933,-348.64984984984983,-347.9403603603604,-347.2308708708709,-346.5213813813814,-345.8118918918919,-345.1024024024024,-344.3929129129129,-343.68342342342345,-342.97393393393395,-342.26444444444445,-341.55495495495495,-340.84546546546545,-340.13597597597595,-339.4264864864865,-338.716996996997,-338.0075075075075,-337.298018018018,-336.5885285285285,-335.879039039039,-335.1695495495496,-334.4600600600601,-333.7505705705706,-333.0410810810811,-332.3315915915916,-331.6221021021021,-330.91261261261263,-330.20312312312313,-329.49363363363364,-328.78414414414414,-328.07465465465464,-327.36516516516514,-326.6556756756757,-325.9461861861862,-325.2366966966967,-324.5272072072072,-323.8177177177177,-323.10822822822826,-322.39873873873876,-321.68924924924926,-320.97975975975976,-320.27027027027026,-319.56078078078076,-318.8512912912913,-318.1418018018018,-317.4323123123123,-316.7228228228228,-316.0133333333333,-315.3038438438438,-314.5943543543544,-313.8848648648649,-313.1753753753754,-312.4658858858859,-311.7563963963964,-311.0469069069069,-310.33741741741744,-309.62792792792794,-308.91843843843844,-308.20894894894894,-307.49945945945944,-306.78996996996995,-306.0804804804805,-305.370990990991,-304.6615015015015,-303.952012012012,-303.2425225225225,-302.533033033033,-301.82354354354356,-301.11405405405407,-300.40456456456457,-299.69507507507507,-298.98558558558557,-298.27609609609607,-297.5666066066066,-296.8571171171171,-296.1476276276276,-295.43813813813813,-294.72864864864863,-294.0191591591592,-293.3096696696697,-292.6001801801802,-291.8906906906907,-291.1812012012012,-290.4717117117117,-289.76222222222225,-289.05273273273275,-288.34324324324325,-287.63375375375375,-286.92426426426425,-286.21477477477475,-285.5052852852853,-284.7957957957958,-284.0863063063063,-283.3768168168168,-282.6673273273273,-281.9578378378378,-281.2483483483484,-280.5388588588589,-279.8293693693694,-279.1198798798799,-278.4103903903904,-277.7009009009009,-276.99141141141143,-276.28192192192193,-275.57243243243244,-274.86294294294294,-274.15345345345344,-273.44396396396394,-272.7344744744745,-272.024984984985,-271.3154954954955,-270.606006006006,-269.8965165165165,-269.187027027027,-268.47753753753756,-267.76804804804806,-267.05855855855856,-266.34906906906906,-265.63957957957956,-264.9300900900901,-264.2206006006006,-263.5111111111111,-262.8016216216216,-262.0921321321321,-261.3826426426426,-260.6731531531532,-259.9636636636637,-259.2541741741742,-258.5446846846847,-257.8351951951952,-257.1257057057057,-256.41621621621624,-255.7067267267267,-254.99723723723724,-254.28774774774774,-253.57825825825824,-252.86876876876877,-252.15927927927927,-251.44978978978978,-250.7403003003003,-250.0308108108108,-249.32132132132134,-248.61183183183184,-247.90234234234234,-247.19285285285287,-246.48336336336337,-245.77387387387387,-245.0643843843844,-244.3548948948949,-243.6454054054054,-242.93591591591593,-242.22642642642643,-241.51693693693693,-240.80744744744746,-240.09795795795796,-239.38846846846846,-238.678978978979,-237.9694894894895,-237.26,-236.55051051051052,-235.84102102102102,-235.13153153153152,-234.42204204204205,-233.71255255255255,-233.00306306306305,-232.29357357357358,-231.58408408408408,-230.87459459459458,-230.1651051051051,-229.4556156156156,-228.74612612612611,-228.03663663663664,-227.32714714714714,-226.61765765765765,-225.90816816816817,-225.19867867867868,-224.48918918918918,-223.7796996996997,-223.0702102102102,-222.3607207207207,-221.65123123123124,-220.94174174174174,-220.23225225225227,-219.52276276276277,-218.81327327327327,-218.1037837837838,-217.3942942942943,-216.6848048048048,-215.97531531531533,-215.26582582582583,-214.55633633633633,-213.84684684684686,-213.13735735735736,-212.42786786786786,-211.7183783783784,-211.0088888888889,-210.2993993993994,-209.58990990990992,-208.88042042042042,-208.17093093093092,-207.46144144144145,-206.75195195195195,-206.04246246246245,-205.33297297297298,-204.62348348348348,-203.91399399399398,-203.2045045045045,-202.495015015015,-201.78552552552551,-201.07603603603604,-200.36654654654654,-199.65705705705705,-198.94756756756757,-198.23807807807808,-197.52858858858858,-196.8190990990991,-196.1096096096096,-195.4001201201201,-194.69063063063064,-193.98114114114114,-193.27165165165164,-192.56216216216217,-191.85267267267267,-191.1431831831832,-190.4336936936937,-189.7242042042042,-189.01471471471473,-188.30522522522523,-187.59573573573573,-186.88624624624626,-186.17675675675676,-185.46726726726726,-184.7577777777778,-184.0482882882883,-183.3387987987988,-182.62930930930932,-181.91981981981982,-181.21033033033032,-180.50084084084085,-179.79135135135135,-179.08186186186185,-178.37237237237238,-177.66288288288288,-176.95339339339338,-176.2439039039039,-175.5344144144144,-174.82492492492491,-174.11543543543544,-173.40594594594594,-172.69645645645645,-171.98696696696697,-171.27747747747748,-170.56798798798798,-169.8584984984985,-169.149009009009,-168.4395195195195,-167.73003003003004,-167.02054054054054,-166.31105105105104,-165.60156156156157,-164.89207207207207,-164.18258258258257,-163.4730930930931,-162.7636036036036,-162.05411411411413,-161.34462462462463,-160.63513513513513,-159.92564564564566,-159.21615615615616,-158.50666666666666,-157.7971771771772,-157.0876876876877,-156.3781981981982,-155.66870870870872,-154.95921921921922,-154.24972972972972,-153.54024024024025,-152.83075075075075,-152.12126126126125,-151.41177177177178,-150.70228228228228,-149.99279279279278,-149.2833033033033,-148.5738138138138,-147.86432432432431,-147.15483483483484,-146.44534534534534,-145.73585585585585,-145.02636636636637,-144.31687687687688,-143.60738738738738,-142.8978978978979,-142.1884084084084,-141.4789189189189,-140.76942942942944,-140.05993993993994,-139.35045045045044,-138.64096096096097,-137.93147147147147,-137.22198198198197,-136.5124924924925,-135.803003003003,-135.0935135135135,-134.38402402402403,-133.67453453453453,-132.96504504504506,-132.25555555555556,-131.54606606606606,-130.8365765765766,-130.1270870870871,-129.4175975975976,-128.70810810810812,-127.99861861861862,-127.28912912912912,-126.57963963963964,-125.87015015015015,-125.16066066066067,-124.45117117117117,-123.74168168168168,-123.0321921921922,-122.3227027027027,-121.61321321321321,-120.90372372372373,-120.19423423423423,-119.48474474474475,-118.77525525525526,-118.06576576576576,-117.35627627627628,-116.64678678678679,-115.93729729729729,-115.2278078078078,-114.51831831831832,-113.80882882882882,-113.09933933933934,-112.38984984984985,-111.68036036036035,-110.97087087087087,-110.26138138138138,-109.5518918918919,-108.8424024024024,-108.13291291291291,-107.42342342342343,-106.71393393393393,-106.00444444444445,-105.29495495495496,-104.58546546546546,-103.87597597597598,-103.16648648648649,-102.45699699699699,-101.7475075075075,-101.03801801801802,-100.32852852852852,-99.61903903903904,-98.90954954954955,-98.20006006006005,-97.49057057057057,-96.78108108108108,-96.0715915915916,-95.3621021021021,-94.65261261261261,-93.94312312312313,-93.23363363363363,-92.52414414414415,-91.81465465465466,-91.10516516516516,-90.39567567567568,-89.68618618618619,-88.97669669669669,-88.2672072072072,-87.55771771771772,-86.84822822822822,-86.13873873873874,-85.42924924924925,-84.71975975975975,-84.01027027027027,-83.30078078078078,-82.59129129129128,-81.8818018018018,-81.17231231231231,-80.46282282282283,-79.75333333333333,-79.04384384384385,-78.33435435435436,-77.62486486486486,-76.91537537537538,-76.20588588588589,-75.49639639639639,-74.7869069069069,-74.07741741741742,-73.36792792792792,-72.65843843843844,-71.94894894894895,-71.23945945945945,-70.52996996996997,-69.82048048048048,-69.11099099099098,-68.4015015015015,-67.69201201201201,-66.98252252252253,-66.27303303303303,-65.56354354354355,-64.85405405405406,-64.14456456456456,-63.435075075075076,-62.725585585585584,-62.0160960960961,-61.30660660660661,-60.597117117117115,-59.88762762762763,-59.17813813813814,-58.468648648648646,-57.75915915915916,-57.04966966966967,-56.34018018018018,-55.63069069069069,-54.9212012012012,-54.211711711711715,-53.50222222222222,-52.79273273273273,-52.083243243243246,-51.37375375375375,-50.66426426426426,-49.954774774774776,-49.245285285285284,-48.5357957957958,-47.82630630630631,-47.116816816816815,-46.40732732732733,-45.69783783783784,-44.988348348348346,-44.27885885885886,-43.56936936936937,-42.85987987987988,-42.15039039039039,-41.4409009009009,-40.731411411411415,-40.02192192192192,-39.31243243243243,-38.602942942942946,-37.89345345345345,-37.18396396396396,-36.474474474474476,-35.764984984984984,-35.05549549549549,-34.34600600600601,-33.636516516516515,-32.92702702702703,-32.21753753753754,-31.50804804804805,-30.798558558558558,-30.08906906906907,-29.37957957957958,-28.67009009009009,-27.9606006006006,-27.25111111111111,-26.541621621621623,-25.83213213213213,-25.122642642642642,-24.413153153153154,-23.703663663663665,-22.994174174174173,-22.284684684684684,-21.575195195195196,-20.865705705705707,-20.156216216216215,-19.446726726726727,-18.737237237237238,-18.027747747747746,-17.318258258258258,-16.60876876876877,-15.899279279279279,-15.18978978978979,-14.4803003003003,-13.770810810810811,-13.061321321321321,-12.351831831831833,-11.642342342342342,-10.932852852852854,-10.223363363363363,-9.513873873873873,-8.804384384384385,-8.094894894894894,-7.385405405405406,-6.675915915915916,-5.966426426426427,-5.2569369369369365,-4.547447447447447,-3.837957957957958,-3.1284684684684683,-2.418978978978979,-1.7094894894894894,-1.0]}

},{}],33:[function(require,module,exports){
module.exports={"expected":[-0.7799999999999727,-1.3418618618619096,-2.019159159159152,-0.6176576576577038,-0.7577777777777932,-1.3781981981982314,-1.0935135135135958,-0.7752552552551677,-3.132912912912885,-1.7810810810811102,-6.524144144144191,-6.429249249249274,-6.753333333333362,-5.367927927927944,-0.14456456456446176,-0.5971171171171221,-6.725585585585591,-5.4686486486486405,-8.468648648648646,-1.245285285285263,-12.049669669669656,-11.211711711711787,-13.211711711711686,-0.7314114114114716,-7.6978378378378665,-17.5022222222222,-10.697837837837785,-5.312432432432459,-1.346006006005993,-20.373753753753707,-19.954774774774805,-20.954774774774766,-23.373753753753718,-2.7985585585585966,-7.346006006006004,-13.312432432432502,-20.697837837837774,-2.2511111111111184,-11.764984984984949,-22.69783783783787,-5.67009009009011,-18.731411411411386,-2.4131531531531962,-17.602942942942864,-1.9941741741741623,-19.312432432432416,-4.413153153153161,-23.859879879879884,-9.670090090090113,-31.245285285285306,-17.764984984985006,-4.28468468468472,-28.697837837837874,-15.927027027026952,-3.156216216216265,-30.407327327327266,-18.34600600600595,-6.284684684684748,-36.37375375375371,-25.021921921921994,-13.670090090090056,-2.3182582582582327,-35.95477477477486,-25.312432432432416,-14.670090090090085,-4.027747747747739,-41.211711711711715,-31.27885885885876,-21.346006006006014,-11.413153153153175,-1.4803003003003141,-42.92120120120123,-33.69783783783777,-24.474474474474505,-15.251111111111157,-6.027747747747696,-51.725585585585634,-43.211711711711665,-34.69783783783789,-26.18396396396392,-17.670090090090063,-9.156216216216286,-0.6423423423423174,-52.01609609609609,-44.211711711711686,-36.40732732732732,-28.60294294294296,-20.798558558558554,-12.99417417417419,-5.189789789789785,-62.23945945945941,-55.144564564564604,-48.04966966966968,-40.95477477477475,-33.85987987987983,-26.76498498498502,-19.6700900900901,-12.575195195195164,-5.480300300300357,-69.62486486486489,-63.239459459459454,-56.85405405405402,-50.468648648648696,-44.08324324324326,-37.697837837837824,-31.3124324324325,-24.927027027026952,-18.54162162162163,-12.156216216216194,-5.770810810810758,-78.42924924924928,-72.75333333333333,-67.0774174174174,-61.40150150150144,-55.725585585585605,-50.04966966966977,-44.37375375375372,-38.69783783783788,-33.02192192192193,-27.346006006005993,-21.670090090090042,-15.994174174174205,-10.318258258258268,-4.642342342342317,-87.94312312312317,-82.97669669669662,-78.01027027027027,-73.04384384384392,-68.07741741741737,-63.11099099099101,-58.14456456456455,-53.17813813813811,-48.21171171171176,-43.24528528528529,-38.278858858858854,-33.31243243243239,-28.346006006006036,-23.37957957957957,-18.413153153153132,-13.44672672672678,-8.480300300300314,-3.5138738738738766,-100.29495495495492,-96.03801801801805,-91.78108108108111,-87.52414414414413,-83.26720720720726,-79.01027027027021,-74.75333333333334,-70.49639639639636,-66.23945945945943,-61.98252252252256,-57.72558558558558,-53.46864864864864,-49.21171171171166,-44.95477477477479,-40.69783783783792,-36.44090090090087,-32.183963963964004,-27.927027027027023,-23.670090090090085,-19.413153153153104,-15.156216216216237,-10.899279279279298,-6.642342342342317,-2.38540540540545,-116.90372372372366,-113.35627627627628,-109.8088288288289,-106.26138138138134,-102.71393393393396,-99.16648648648646,-95.61903903903902,-92.07159159159164,-88.52414414414415,-84.9766966966967,-81.42924924924921,-77.88180180180183,-74.33435435435433,-70.78690690690689,-67.23945945945945,-63.692012012012015,-60.144564564564575,-56.59711711711702,-53.0496696696697,-49.50222222222226,-45.954774774774705,-42.40732732732738,-38.85987987987983,-35.3124324324325,-31.76498498498495,-28.21753753753751,-24.670090090090184,-21.12264264264263,-17.575195195195192,-14.027747747747753,-10.480300300300314,-6.932852852852875,-3.385405405405436,-142.0263663663664,-139.18840840840835,-136.3504504504505,-133.51249249249244,-130.6745345345345,-127.83657657657665,-124.9986186186186,-122.16066066066065,-119.32270270270268,-116.48474474474475,-113.6467867867868,-110.80882882882884,-107.9708708708709,-105.13291291291284,-102.29495495495499,-99.45699699699705,-96.619039039039,-93.78108108108114,-90.94312312312309,-88.10516516516515,-85.26720720720718,-82.42924924924924,-79.5912912912913,-76.75333333333333,-73.91537537537539,-71.07741741741734,-68.23945945945948,-65.40150150150154,-62.56354354354349,-59.725585585585634,-56.88762762762758,-54.049669669669726,-51.21171171171167,-48.37375375375373,-45.53579579579588,-42.697837837837824,-39.859879879879884,-37.021921921921916,-34.183963963963976,-31.346006006006036,-28.508048048048067,-25.670090090090127,-22.832132132132074,-19.99417417417422,-17.156216216216166,-14.318258258258226,-11.480300300300371,-8.642342342342317,-5.804384384384377,-2.966426426426409,-0.12846846846846915,-175.6628828828829,-173.5344144144144,-171.40594594594597,-169.27747747747742,-167.14900900900903,-165.0205405405406,-162.89207207207204,-160.76360360360366,-158.6351351351351,-156.50666666666666,-154.37819819819816,-152.24972972972972,-150.12126126126128,-147.99279279279278,-145.86432432432434,-143.7358558558558,-141.6073873873874,-139.47891891891896,-137.3504504504504,-135.22198198198203,-133.09351351351347,-130.9650450450451,-128.83657657657653,-126.70810810810809,-124.57963963963971,-122.45117117117115,-120.32270270270271,-118.19423423423422,-116.06576576576578,-113.93729729729728,-111.80882882882884,-109.68036036036034,-107.5518918918919,-105.42342342342346,-103.29495495495496,-101.16648648648646,-99.03801801801802,-96.90954954954952,-94.78108108108108,-92.65261261261264,-90.52414414414415,-88.39567567567565,-86.2672072072072,-84.13873873873871,-82.01027027027027,-79.88180180180183,-77.75333333333333,-75.62486486486483,-73.49639639639639,-71.36792792792795,-69.23945945945945,-67.11099099099101,-64.98252252252252,-62.85405405405402,-60.72558558558558,-58.597117117117136,-56.46864864864864,-54.3401801801802,-52.2117117117117,-50.0832432432432,-47.95477477477476,-45.82630630630632,-43.69783783783788,-41.56936936936938,-39.440900900900886,-37.312432432432445,-35.18396396396395,-33.05549549549551,-30.927027027027066,-28.798558558558568,-26.67009009009007,-24.54162162162163,-22.413153153153132,-20.28468468468469,-18.15621621621625,-16.027747747747753,-13.899279279279256,-11.770810810810815,-9.642342342342317,-7.513873873873877,-5.385405405405436,-3.2569369369369383,-1.1284684684684407,-236.26,-234.841021021021,-233.42204204204205,-232.00306306306308,-230.58408408408408,-229.16510510510508,-227.74612612612611,-226.32714714714717,-224.90816816816817,-223.4891891891892,-222.0702102102102,-220.6512312312312,-219.23225225225224,-217.8132732732733,-216.3942942942943,-214.97531531531533,-213.55633633633633,-212.13735735735733,-210.71837837837836,-209.29939939939942,-207.88042042042045,-206.46144144144145,-205.04246246246245,-203.62348348348348,-202.20450450450448,-200.78552552552554,-199.36654654654657,-197.94756756756755,-196.5285885885886,-195.1096096096096,-193.6906306306306,-192.27165165165167,-190.85267267267267,-189.43369369369367,-188.01471471471473,-186.59573573573573,-185.17675675675673,-183.7577777777778,-182.3387987987988,-180.9198198198198,-179.50084084084085,-178.08186186186185,-176.66288288288285,-175.2439039039039,-173.82492492492491,-172.40594594594597,-170.98696696696697,-169.56798798798798,-168.14900900900903,-166.73003003003004,-165.31105105105104,-163.8920720720721,-162.4730930930931,-161.0541141141141,-159.63513513513516,-158.21615615615616,-156.79717717717716,-155.37819819819822,-153.95921921921922,-152.54024024024022,-151.12126126126128,-149.70228228228228,-148.28330330330328,-146.86432432432434,-145.44534534534534,-144.02636636636635,-142.6073873873874,-141.1884084084084,-139.7694294294294,-138.35045045045047,-136.93147147147147,-135.51249249249247,-134.09351351351353,-132.67453453453453,-131.25555555555553,-129.8365765765766,-128.4175975975976,-126.9986186186186,-125.57963963963965,-124.16066066066065,-122.74168168168165,-121.32270270270271,-119.90372372372372,-118.48474474474472,-117.06576576576578,-115.64678678678678,-114.22780780780784,-112.80882882882884,-111.38984984984984,-109.9708708708709,-108.5518918918919,-107.1329129129129,-105.71393393393396,-104.29495495495496,-102.87597597597596,-101.45699699699702,-100.03801801801802,-98.61903903903902,-97.20006006006008,-95.78108108108108,-94.36210210210209,-92.94312312312314,-91.52414414414415,-90.10516516516515,-88.6861861861862,-87.2672072072072,-85.84822822822821,-84.42924924924927,-83.01027027027027,-81.59129129129127,-80.17231231231233,-78.75333333333333,-77.33435435435433,-75.91537537537539,-74.49639639639639,-73.0774174174174,-71.65843843843845,-70.23945945945945,-68.82048048048046,-67.40150150150151,-65.98252252252252,-64.56354354354352,-63.144564564564575,-61.72558558558558,-60.30660660660658,-58.88762762762764,-57.46864864864864,-56.0496696696697,-54.6306906906907,-53.2117117117117,-51.79273273273276,-50.37375375375376,-48.95477477477476,-47.53579579579582,-46.11681681681682,-44.697837837837824,-43.27885885885888,-41.859879879879884,-40.440900900900886,-39.021921921921944,-37.602942942942946,-36.18396396396395,-34.764984984985006,-33.34600600600601,-31.92702702702701,-30.508048048048067,-29.08906906906907,-27.67009009009007,-26.25111111111113,-24.83213213213213,-23.413153153153132,-21.99417417417419,-20.575195195195192,-19.156216216216194,-17.737237237237252,-16.318258258258254,-14.899279279279256,-13.480300300300314,-12.061321321321316,-10.642342342342317,-9.223363363363376,-7.804384384384377,-6.385405405405379,-4.9664264264264375,-3.547447447447439,-2.1284684684684407,-0.7094894894894992,-355.03525525525527,-354.32576576576577,-353.61627627627627,-352.90678678678677,-352.1972972972973,-351.4878078078078,-350.7783183183183,-350.0688288288288,-349.35933933933933,-348.64984984984983,-347.9403603603604,-347.2308708708709,-346.5213813813814,-345.8118918918919,-345.1024024024024,-344.3929129129129,-343.68342342342345,-342.97393393393395,-342.26444444444445,-341.55495495495495,-340.84546546546545,-340.13597597597595,-339.4264864864865,-338.716996996997,-338.0075075075075,-337.298018018018,-336.5885285285285,-335.879039039039,-335.1695495495496,-334.4600600600601,-333.7505705705706,-333.0410810810811,-332.3315915915916,-331.6221021021021,-330.91261261261263,-330.20312312312313,-329.49363363363364,-328.78414414414414,-328.07465465465464,-327.36516516516514,-326.6556756756757,-325.9461861861862,-325.2366966966967,-324.5272072072072,-323.8177177177177,-323.10822822822826,-322.39873873873876,-321.68924924924926,-320.97975975975976,-320.27027027027026,-319.56078078078076,-318.8512912912913,-318.1418018018018,-317.4323123123123,-316.7228228228228,-316.0133333333333,-315.3038438438438,-314.5943543543544,-313.8848648648649,-313.1753753753754,-312.4658858858859,-311.7563963963964,-311.0469069069069,-310.33741741741744,-309.62792792792794,-308.91843843843844,-308.20894894894894,-307.49945945945944,-306.78996996996995,-306.0804804804805,-305.370990990991,-304.6615015015015,-303.952012012012,-303.2425225225225,-302.533033033033,-301.82354354354356,-301.11405405405407,-300.40456456456457,-299.69507507507507,-298.98558558558557,-298.27609609609607,-297.5666066066066,-296.8571171171171,-296.1476276276276,-295.43813813813813,-294.72864864864863,-294.0191591591592,-293.3096696696697,-292.6001801801802,-291.8906906906907,-291.1812012012012,-290.4717117117117,-289.76222222222225,-289.05273273273275,-288.34324324324325,-287.63375375375375,-286.92426426426425,-286.21477477477475,-285.5052852852853,-284.7957957957958,-284.0863063063063,-283.3768168168168,-282.6673273273273,-281.9578378378378,-281.2483483483484,-280.5388588588589,-279.8293693693694,-279.1198798798799,-278.4103903903904,-277.7009009009009,-276.99141141141143,-276.28192192192193,-275.57243243243244,-274.86294294294294,-274.15345345345344,-273.44396396396394,-272.7344744744745,-272.024984984985,-271.3154954954955,-270.606006006006,-269.8965165165165,-269.187027027027,-268.47753753753756,-267.76804804804806,-267.05855855855856,-266.34906906906906,-265.63957957957956,-264.9300900900901,-264.2206006006006,-263.5111111111111,-262.8016216216216,-262.0921321321321,-261.3826426426426,-260.6731531531532,-259.9636636636637,-259.2541741741742,-258.5446846846847,-257.8351951951952,-257.1257057057057,-256.41621621621624,-255.7067267267267,-254.99723723723724,-254.28774774774774,-253.57825825825824,-252.86876876876877,-252.15927927927927,-251.44978978978978,-250.7403003003003,-250.0308108108108,-249.32132132132134,-248.61183183183184,-247.90234234234234,-247.19285285285287,-246.48336336336337,-245.77387387387387,-245.0643843843844,-244.3548948948949,-243.6454054054054,-242.93591591591593,-242.22642642642643,-241.51693693693693,-240.80744744744746,-240.09795795795796,-239.38846846846846,-238.678978978979,-237.9694894894895,-237.26,-236.55051051051052,-235.84102102102102,-235.13153153153152,-234.42204204204205,-233.71255255255255,-233.00306306306305,-232.29357357357358,-231.58408408408408,-230.87459459459458,-230.1651051051051,-229.4556156156156,-228.74612612612611,-228.03663663663664,-227.32714714714714,-226.61765765765765,-225.90816816816817,-225.19867867867868,-224.48918918918918,-223.7796996996997,-223.0702102102102,-222.3607207207207,-221.65123123123124,-220.94174174174174,-220.23225225225227,-219.52276276276277,-218.81327327327327,-218.1037837837838,-217.3942942942943,-216.6848048048048,-215.97531531531533,-215.26582582582583,-214.55633633633633,-213.84684684684686,-213.13735735735736,-212.42786786786786,-211.7183783783784,-211.0088888888889,-210.2993993993994,-209.58990990990992,-208.88042042042042,-208.17093093093092,-207.46144144144145,-206.75195195195195,-206.04246246246245,-205.33297297297298,-204.62348348348348,-203.91399399399398,-203.2045045045045,-202.495015015015,-201.78552552552551,-201.07603603603604,-200.36654654654654,-199.65705705705705,-198.94756756756757,-198.23807807807808,-197.52858858858858,-196.8190990990991,-196.1096096096096,-195.4001201201201,-194.69063063063064,-193.98114114114114,-193.27165165165164,-192.56216216216217,-191.85267267267267,-191.1431831831832,-190.4336936936937,-189.7242042042042,-189.01471471471473,-188.30522522522523,-187.59573573573573,-186.88624624624626,-186.17675675675676,-185.46726726726726,-184.7577777777778,-184.0482882882883,-183.3387987987988,-182.62930930930932,-181.91981981981982,-181.21033033033032,-180.50084084084085,-179.79135135135135,-179.08186186186185,-178.37237237237238,-177.66288288288288,-176.95339339339338,-176.2439039039039,-175.5344144144144,-174.82492492492491,-174.11543543543544,-173.40594594594594,-172.69645645645645,-171.98696696696697,-171.27747747747748,-170.56798798798798,-169.8584984984985,-169.149009009009,-168.4395195195195,-167.73003003003004,-167.02054054054054,-166.31105105105104,-165.60156156156157,-164.89207207207207,-164.18258258258257,-163.4730930930931,-162.7636036036036,-162.05411411411413,-161.34462462462463,-160.63513513513513,-159.92564564564566,-159.21615615615616,-158.50666666666666,-157.7971771771772,-157.0876876876877,-156.3781981981982,-155.66870870870872,-154.95921921921922,-154.24972972972972,-153.54024024024025,-152.83075075075075,-152.12126126126125,-151.41177177177178,-150.70228228228228,-149.99279279279278,-149.2833033033033,-148.5738138138138,-147.86432432432431,-147.15483483483484,-146.44534534534534,-145.73585585585585,-145.02636636636637,-144.31687687687688,-143.60738738738738,-142.8978978978979,-142.1884084084084,-141.4789189189189,-140.76942942942944,-140.05993993993994,-139.35045045045044,-138.64096096096097,-137.93147147147147,-137.22198198198197,-136.5124924924925,-135.803003003003,-135.0935135135135,-134.38402402402403,-133.67453453453453,-132.96504504504506,-132.25555555555556,-131.54606606606606,-130.8365765765766,-130.1270870870871,-129.4175975975976,-128.70810810810812,-127.99861861861862,-127.28912912912912,-126.57963963963964,-125.87015015015015,-125.16066066066067,-124.45117117117117,-123.74168168168168,-123.0321921921922,-122.3227027027027,-121.61321321321321,-120.90372372372373,-120.19423423423423,-119.48474474474475,-118.77525525525526,-118.06576576576576,-117.35627627627628,-116.64678678678679,-115.93729729729729,-115.2278078078078,-114.51831831831832,-113.80882882882882,-113.09933933933934,-112.38984984984985,-111.68036036036035,-110.97087087087087,-110.26138138138138,-109.5518918918919,-108.8424024024024,-108.13291291291291,-107.42342342342343,-106.71393393393393,-106.00444444444445,-105.29495495495496,-104.58546546546546,-103.87597597597598,-103.16648648648649,-102.45699699699699,-101.7475075075075,-101.03801801801802,-100.32852852852852,-99.61903903903904,-98.90954954954955,-98.20006006006005,-97.49057057057057,-96.78108108108108,-96.0715915915916,-95.3621021021021,-94.65261261261261,-93.94312312312313,-93.23363363363363,-92.52414414414415,-91.81465465465466,-91.10516516516516,-90.39567567567568,-89.68618618618619,-88.97669669669669,-88.2672072072072,-87.55771771771772,-86.84822822822822,-86.13873873873874,-85.42924924924925,-84.71975975975975,-84.01027027027027,-83.30078078078078,-82.59129129129128,-81.8818018018018,-81.17231231231231,-80.46282282282283,-79.75333333333333,-79.04384384384385,-78.33435435435436,-77.62486486486486,-76.91537537537538,-76.20588588588589,-75.49639639639639,-74.7869069069069,-74.07741741741742,-73.36792792792792,-72.65843843843844,-71.94894894894895,-71.23945945945945,-70.52996996996997,-69.82048048048048,-69.11099099099098,-68.4015015015015,-67.69201201201201,-66.98252252252253,-66.27303303303303,-65.56354354354355,-64.85405405405406,-64.14456456456456,-63.435075075075076,-62.725585585585584,-62.0160960960961,-61.30660660660661,-60.597117117117115,-59.88762762762763,-59.17813813813814,-58.468648648648646,-57.75915915915916,-57.04966966966967,-56.34018018018018,-55.63069069069069,-54.9212012012012,-54.211711711711715,-53.50222222222222,-52.79273273273273,-52.083243243243246,-51.37375375375375,-50.66426426426426,-49.954774774774776,-49.245285285285284,-48.5357957957958,-47.82630630630631,-47.116816816816815,-46.40732732732733,-45.69783783783784,-44.988348348348346,-44.27885885885886,-43.56936936936937,-42.85987987987988,-42.15039039039039,-41.4409009009009,-40.731411411411415,-40.02192192192192,-39.31243243243243,-38.602942942942946,-37.89345345345345,-37.18396396396396,-36.474474474474476,-35.764984984984984,-35.05549549549549,-34.34600600600601,-33.636516516516515,-32.92702702702703,-32.21753753753754,-31.50804804804805,-30.798558558558558,-30.08906906906907,-29.37957957957958,-28.67009009009009,-27.9606006006006,-27.25111111111111,-26.541621621621623,-25.83213213213213,-25.122642642642642,-24.413153153153154,-23.703663663663665,-22.994174174174173,-22.284684684684684,-21.575195195195196,-20.865705705705707,-20.156216216216215,-19.446726726726727,-18.737237237237238,-18.027747747747746,-17.318258258258258,-16.60876876876877,-15.899279279279279,-15.18978978978979,-14.4803003003003,-13.770810810810811,-13.061321321321321,-12.351831831831833,-11.642342342342342,-10.932852852852854,-10.223363363363363,-9.513873873873873,-8.804384384384385,-8.094894894894894,-7.385405405405406,-6.675915915915916,-5.966426426426427,-5.2569369369369365,-4.547447447447447,-3.837957957957958,-3.1284684684684683,-2.418978978978979,-1.7094894894894894,-1.0],"x":[-709.78,-709.0705105105105,-708.361021021021,-707.6515315315315,-706.9420420420421,-706.2325525525525,-705.5230630630631,-704.8135735735735,-704.1040840840841,-703.3945945945947,-702.6851051051051,-701.9756156156157,-701.2661261261261,-700.5566366366367,-699.8471471471471,-699.1376576576577,-698.4281681681682,-697.7186786786787,-697.0091891891892,-696.2996996996997,-695.5902102102102,-694.8807207207208,-694.1712312312312,-693.4617417417418,-692.7522522522522,-692.0427627627628,-691.3332732732732,-690.6237837837838,-689.9142942942943,-689.2048048048048,-688.4953153153153,-687.7858258258258,-687.0763363363363,-686.3668468468469,-685.6573573573573,-684.9478678678679,-684.2383783783783,-683.5288888888889,-682.8193993993993,-682.1099099099099,-681.4004204204205,-680.6909309309309,-679.9814414414415,-679.2719519519519,-678.5624624624625,-677.852972972973,-677.1434834834835,-676.433993993994,-675.7245045045045,-675.015015015015,-674.3055255255256,-673.596036036036,-672.8865465465466,-672.177057057057,-671.4675675675676,-670.758078078078,-670.0485885885886,-669.3390990990991,-668.6296096096096,-667.9201201201201,-667.2106306306306,-666.5011411411411,-665.7916516516517,-665.0821621621621,-664.3726726726727,-663.6631831831832,-662.9536936936937,-662.2442042042042,-661.5347147147147,-660.8252252252253,-660.1157357357357,-659.4062462462463,-658.6967567567567,-657.9872672672673,-657.2777777777778,-656.5682882882883,-655.8587987987988,-655.1493093093093,-654.4398198198198,-653.7303303303303,-653.0208408408408,-652.3113513513514,-651.6018618618618,-650.8923723723724,-650.1828828828828,-649.4733933933934,-648.763903903904,-648.0544144144144,-647.344924924925,-646.6354354354354,-645.925945945946,-645.2164564564565,-644.506966966967,-643.7974774774775,-643.087987987988,-642.3784984984985,-641.669009009009,-640.9595195195195,-640.2500300300301,-639.5405405405405,-638.8310510510511,-638.1215615615615,-637.4120720720721,-636.7025825825826,-635.9930930930931,-635.2836036036036,-634.5741141141141,-633.8646246246246,-633.1551351351351,-632.4456456456456,-631.7361561561562,-631.0266666666666,-630.3171771771772,-629.6076876876876,-628.8981981981982,-628.1887087087088,-627.4792192192192,-626.7697297297298,-626.0602402402402,-625.3507507507508,-624.6412612612612,-623.9317717717718,-623.2222822822823,-622.5127927927928,-621.8033033033033,-621.0938138138138,-620.3843243243243,-619.6748348348349,-618.9653453453453,-618.2558558558559,-617.5463663663663,-616.8368768768769,-616.1273873873874,-615.4178978978979,-614.7084084084084,-613.9989189189189,-613.2894294294294,-612.5799399399399,-611.8704504504504,-611.160960960961,-610.4514714714715,-609.741981981982,-609.0324924924925,-608.323003003003,-607.6135135135136,-606.904024024024,-606.1945345345346,-605.485045045045,-604.7755555555556,-604.066066066066,-603.3565765765766,-602.6470870870871,-601.9375975975976,-601.2281081081081,-600.5186186186186,-599.8091291291291,-599.0996396396397,-598.3901501501501,-597.6806606606607,-596.9711711711711,-596.2616816816817,-595.5521921921921,-594.8427027027027,-594.1332132132133,-593.4237237237237,-592.7142342342343,-592.0047447447447,-591.2952552552553,-590.5857657657658,-589.8762762762763,-589.1667867867868,-588.4572972972973,-587.7478078078078,-587.0383183183184,-586.3288288288288,-585.6193393393394,-584.9098498498498,-584.2003603603604,-583.4908708708708,-582.7813813813814,-582.0718918918919,-581.3624024024024,-580.6529129129129,-579.9434234234234,-579.2339339339339,-578.5244444444445,-577.8149549549549,-577.1054654654655,-576.395975975976,-575.6864864864865,-574.976996996997,-574.2675075075075,-573.5580180180181,-572.8485285285285,-572.1390390390391,-571.4295495495495,-570.7200600600601,-570.0105705705706,-569.3010810810811,-568.5915915915916,-567.8821021021021,-567.1726126126126,-566.4631231231231,-565.7536336336336,-565.0441441441442,-564.3346546546546,-563.6251651651652,-562.9156756756756,-562.2061861861862,-561.4966966966967,-560.7872072072072,-560.0777177177177,-559.3682282282282,-558.6587387387387,-557.9492492492493,-557.2397597597597,-556.5302702702703,-555.8207807807808,-555.1112912912913,-554.4018018018018,-553.6923123123123,-552.9828228228229,-552.2733333333333,-551.5638438438439,-550.8543543543543,-550.1448648648649,-549.4353753753754,-548.7258858858859,-548.0163963963964,-547.3069069069069,-546.5974174174174,-545.8879279279279,-545.1784384384384,-544.468948948949,-543.7594594594594,-543.04996996997,-542.3404804804804,-541.630990990991,-540.9215015015016,-540.212012012012,-539.5025225225226,-538.793033033033,-538.0835435435436,-537.374054054054,-536.6645645645646,-535.9550750750751,-535.2455855855856,-534.5360960960961,-533.8266066066066,-533.1171171171171,-532.4076276276277,-531.6981381381381,-530.9886486486487,-530.2791591591591,-529.5696696696697,-528.8601801801802,-528.1506906906907,-527.4412012012012,-526.7317117117117,-526.0222222222222,-525.3127327327327,-524.6032432432432,-523.8937537537538,-523.1842642642642,-522.4747747747748,-521.7652852852852,-521.0557957957958,-520.3463063063064,-519.6368168168168,-518.9273273273274,-518.2178378378378,-517.5083483483484,-516.7988588588588,-516.0893693693694,-515.3798798798799,-514.6703903903904,-513.9609009009009,-513.2514114114114,-512.5419219219219,-511.8324324324324,-511.1229429429429,-510.4134534534534,-509.703963963964,-508.9944744744745,-508.284984984985,-507.5754954954955,-506.866006006006,-506.1565165165165,-505.44702702702705,-504.73753753753755,-504.02804804804805,-503.31855855855855,-502.60906906906905,-501.89957957957955,-501.1900900900901,-500.4806006006006,-499.7711111111111,-499.0616216216216,-498.3521321321321,-497.64264264264267,-496.93315315315317,-496.2236636636637,-495.5141741741742,-494.8046846846847,-494.0951951951952,-493.38570570570573,-492.67621621621623,-491.96672672672673,-491.25723723723723,-490.54774774774774,-489.83825825825824,-489.1287687687688,-488.4192792792793,-487.7097897897898,-487.0003003003003,-486.2908108108108,-485.5813213213213,-484.87183183183186,-484.16234234234236,-483.45285285285286,-482.74336336336336,-482.03387387387386,-481.32438438438436,-480.6148948948949,-479.9054054054054,-479.1959159159159,-478.4864264264264,-477.7769369369369,-477.0674474474474,-476.357957957958,-475.6484684684685,-474.938978978979,-474.2294894894895,-473.52,-472.8105105105105,-472.10102102102104,-471.39153153153154,-470.68204204204204,-469.97255255255254,-469.26306306306304,-468.5535735735736,-467.8440840840841,-467.1345945945946,-466.4251051051051,-465.7156156156156,-465.0061261261261,-464.29663663663666,-463.58714714714716,-462.87765765765766,-462.16816816816817,-461.45867867867867,-460.74918918918917,-460.0396996996997,-459.3302102102102,-458.6207207207207,-457.9112312312312,-457.2017417417417,-456.49225225225223,-455.7827627627628,-455.0732732732733,-454.3637837837838,-453.6542942942943,-452.9448048048048,-452.2353153153153,-451.52582582582585,-450.81633633633635,-450.10684684684685,-449.39735735735735,-448.68786786786785,-447.97837837837835,-447.2688888888889,-446.5593993993994,-445.8499099099099,-445.1404204204204,-444.4309309309309,-443.7214414414414,-443.01195195195197,-442.3024624624625,-441.592972972973,-440.8834834834835,-440.173993993994,-439.46450450450453,-438.75501501501503,-438.04552552552553,-437.33603603603603,-436.62654654654654,-435.91705705705704,-435.2075675675676,-434.4980780780781,-433.7885885885886,-433.0790990990991,-432.3696096096096,-431.6601201201201,-430.95063063063066,-430.24114114114116,-429.53165165165166,-428.82216216216216,-428.11267267267266,-427.40318318318316,-426.6936936936937,-425.9842042042042,-425.2747147147147,-424.5652252252252,-423.8557357357357,-423.1462462462462,-422.4367567567568,-421.7272672672673,-421.0177777777778,-420.3082882882883,-419.5987987987988,-418.8893093093093,-418.17981981981984,-417.47033033033034,-416.76084084084084,-416.05135135135134,-415.34186186186184,-414.63237237237234,-413.9228828828829,-413.2133933933934,-412.5039039039039,-411.7944144144144,-411.0849249249249,-410.37543543543546,-409.66594594594596,-408.95645645645646,-408.24696696696697,-407.53747747747747,-406.82798798798797,-406.1184984984985,-405.409009009009,-404.6995195195195,-403.99003003003,-403.2805405405405,-402.57105105105103,-401.8615615615616,-401.1520720720721,-400.4425825825826,-399.7330930930931,-399.0236036036036,-398.3141141141141,-397.60462462462465,-396.89513513513515,-396.18564564564565,-395.47615615615615,-394.76666666666665,-394.05717717717715,-393.3476876876877,-392.6381981981982,-391.9287087087087,-391.2192192192192,-390.5097297297297,-389.8002402402402,-389.0907507507508,-388.3812612612613,-387.6717717717718,-386.9622822822823,-386.2527927927928,-385.5433033033033,-384.83381381381383,-384.12432432432433,-383.41483483483483,-382.70534534534534,-381.99585585585584,-381.2863663663664,-380.5768768768769,-379.8673873873874,-379.1578978978979,-378.4484084084084,-377.7389189189189,-377.02942942942946,-376.31993993993996,-375.61045045045046,-374.90096096096096,-374.19147147147146,-373.48198198198196,-372.7724924924925,-372.063003003003,-371.3535135135135,-370.644024024024,-369.9345345345345,-369.225045045045,-368.5155555555556,-367.8060660660661,-367.0965765765766,-366.3870870870871,-365.6775975975976,-364.9681081081081,-364.25861861861864,-363.54912912912914,-362.83963963963964,-362.13015015015014,-361.42066066066064,-360.71117117117115,-360.0016816816817,-359.2921921921922,-358.5827027027027,-357.8732132132132,-357.1637237237237,-356.4542342342342,-355.74474474474476,-355.03525525525527,-354.32576576576577,-353.61627627627627,-352.90678678678677,-352.1972972972973,-351.4878078078078,-350.7783183183183,-350.0688288288288,-349.35933933933933,-348.64984984984983,-347.9403603603604,-347.2308708708709,-346.5213813813814,-345.8118918918919,-345.1024024024024,-344.3929129129129,-343.68342342342345,-342.97393393393395,-342.26444444444445,-341.55495495495495,-340.84546546546545,-340.13597597597595,-339.4264864864865,-338.716996996997,-338.0075075075075,-337.298018018018,-336.5885285285285,-335.879039039039,-335.1695495495496,-334.4600600600601,-333.7505705705706,-333.0410810810811,-332.3315915915916,-331.6221021021021,-330.91261261261263,-330.20312312312313,-329.49363363363364,-328.78414414414414,-328.07465465465464,-327.36516516516514,-326.6556756756757,-325.9461861861862,-325.2366966966967,-324.5272072072072,-323.8177177177177,-323.10822822822826,-322.39873873873876,-321.68924924924926,-320.97975975975976,-320.27027027027026,-319.56078078078076,-318.8512912912913,-318.1418018018018,-317.4323123123123,-316.7228228228228,-316.0133333333333,-315.3038438438438,-314.5943543543544,-313.8848648648649,-313.1753753753754,-312.4658858858859,-311.7563963963964,-311.0469069069069,-310.33741741741744,-309.62792792792794,-308.91843843843844,-308.20894894894894,-307.49945945945944,-306.78996996996995,-306.0804804804805,-305.370990990991,-304.6615015015015,-303.952012012012,-303.2425225225225,-302.533033033033,-301.82354354354356,-301.11405405405407,-300.40456456456457,-299.69507507507507,-298.98558558558557,-298.27609609609607,-297.5666066066066,-296.8571171171171,-296.1476276276276,-295.43813813813813,-294.72864864864863,-294.0191591591592,-293.3096696696697,-292.6001801801802,-291.8906906906907,-291.1812012012012,-290.4717117117117,-289.76222222222225,-289.05273273273275,-288.34324324324325,-287.63375375375375,-286.92426426426425,-286.21477477477475,-285.5052852852853,-284.7957957957958,-284.0863063063063,-283.3768168168168,-282.6673273273273,-281.9578378378378,-281.2483483483484,-280.5388588588589,-279.8293693693694,-279.1198798798799,-278.4103903903904,-277.7009009009009,-276.99141141141143,-276.28192192192193,-275.57243243243244,-274.86294294294294,-274.15345345345344,-273.44396396396394,-272.7344744744745,-272.024984984985,-271.3154954954955,-270.606006006006,-269.8965165165165,-269.187027027027,-268.47753753753756,-267.76804804804806,-267.05855855855856,-266.34906906906906,-265.63957957957956,-264.9300900900901,-264.2206006006006,-263.5111111111111,-262.8016216216216,-262.0921321321321,-261.3826426426426,-260.6731531531532,-259.9636636636637,-259.2541741741742,-258.5446846846847,-257.8351951951952,-257.1257057057057,-256.41621621621624,-255.7067267267267,-254.99723723723724,-254.28774774774774,-253.57825825825824,-252.86876876876877,-252.15927927927927,-251.44978978978978,-250.7403003003003,-250.0308108108108,-249.32132132132134,-248.61183183183184,-247.90234234234234,-247.19285285285287,-246.48336336336337,-245.77387387387387,-245.0643843843844,-244.3548948948949,-243.6454054054054,-242.93591591591593,-242.22642642642643,-241.51693693693693,-240.80744744744746,-240.09795795795796,-239.38846846846846,-238.678978978979,-237.9694894894895,-237.26,-236.55051051051052,-235.84102102102102,-235.13153153153152,-234.42204204204205,-233.71255255255255,-233.00306306306305,-232.29357357357358,-231.58408408408408,-230.87459459459458,-230.1651051051051,-229.4556156156156,-228.74612612612611,-228.03663663663664,-227.32714714714714,-226.61765765765765,-225.90816816816817,-225.19867867867868,-224.48918918918918,-223.7796996996997,-223.0702102102102,-222.3607207207207,-221.65123123123124,-220.94174174174174,-220.23225225225227,-219.52276276276277,-218.81327327327327,-218.1037837837838,-217.3942942942943,-216.6848048048048,-215.97531531531533,-215.26582582582583,-214.55633633633633,-213.84684684684686,-213.13735735735736,-212.42786786786786,-211.7183783783784,-211.0088888888889,-210.2993993993994,-209.58990990990992,-208.88042042042042,-208.17093093093092,-207.46144144144145,-206.75195195195195,-206.04246246246245,-205.33297297297298,-204.62348348348348,-203.91399399399398,-203.2045045045045,-202.495015015015,-201.78552552552551,-201.07603603603604,-200.36654654654654,-199.65705705705705,-198.94756756756757,-198.23807807807808,-197.52858858858858,-196.8190990990991,-196.1096096096096,-195.4001201201201,-194.69063063063064,-193.98114114114114,-193.27165165165164,-192.56216216216217,-191.85267267267267,-191.1431831831832,-190.4336936936937,-189.7242042042042,-189.01471471471473,-188.30522522522523,-187.59573573573573,-186.88624624624626,-186.17675675675676,-185.46726726726726,-184.7577777777778,-184.0482882882883,-183.3387987987988,-182.62930930930932,-181.91981981981982,-181.21033033033032,-180.50084084084085,-179.79135135135135,-179.08186186186185,-178.37237237237238,-177.66288288288288,-176.95339339339338,-176.2439039039039,-175.5344144144144,-174.82492492492491,-174.11543543543544,-173.40594594594594,-172.69645645645645,-171.98696696696697,-171.27747747747748,-170.56798798798798,-169.8584984984985,-169.149009009009,-168.4395195195195,-167.73003003003004,-167.02054054054054,-166.31105105105104,-165.60156156156157,-164.89207207207207,-164.18258258258257,-163.4730930930931,-162.7636036036036,-162.05411411411413,-161.34462462462463,-160.63513513513513,-159.92564564564566,-159.21615615615616,-158.50666666666666,-157.7971771771772,-157.0876876876877,-156.3781981981982,-155.66870870870872,-154.95921921921922,-154.24972972972972,-153.54024024024025,-152.83075075075075,-152.12126126126125,-151.41177177177178,-150.70228228228228,-149.99279279279278,-149.2833033033033,-148.5738138138138,-147.86432432432431,-147.15483483483484,-146.44534534534534,-145.73585585585585,-145.02636636636637,-144.31687687687688,-143.60738738738738,-142.8978978978979,-142.1884084084084,-141.4789189189189,-140.76942942942944,-140.05993993993994,-139.35045045045044,-138.64096096096097,-137.93147147147147,-137.22198198198197,-136.5124924924925,-135.803003003003,-135.0935135135135,-134.38402402402403,-133.67453453453453,-132.96504504504506,-132.25555555555556,-131.54606606606606,-130.8365765765766,-130.1270870870871,-129.4175975975976,-128.70810810810812,-127.99861861861862,-127.28912912912912,-126.57963963963964,-125.87015015015015,-125.16066066066067,-124.45117117117117,-123.74168168168168,-123.0321921921922,-122.3227027027027,-121.61321321321321,-120.90372372372373,-120.19423423423423,-119.48474474474475,-118.77525525525526,-118.06576576576576,-117.35627627627628,-116.64678678678679,-115.93729729729729,-115.2278078078078,-114.51831831831832,-113.80882882882882,-113.09933933933934,-112.38984984984985,-111.68036036036035,-110.97087087087087,-110.26138138138138,-109.5518918918919,-108.8424024024024,-108.13291291291291,-107.42342342342343,-106.71393393393393,-106.00444444444445,-105.29495495495496,-104.58546546546546,-103.87597597597598,-103.16648648648649,-102.45699699699699,-101.7475075075075,-101.03801801801802,-100.32852852852852,-99.61903903903904,-98.90954954954955,-98.20006006006005,-97.49057057057057,-96.78108108108108,-96.0715915915916,-95.3621021021021,-94.65261261261261,-93.94312312312313,-93.23363363363363,-92.52414414414415,-91.81465465465466,-91.10516516516516,-90.39567567567568,-89.68618618618619,-88.97669669669669,-88.2672072072072,-87.55771771771772,-86.84822822822822,-86.13873873873874,-85.42924924924925,-84.71975975975975,-84.01027027027027,-83.30078078078078,-82.59129129129128,-81.8818018018018,-81.17231231231231,-80.46282282282283,-79.75333333333333,-79.04384384384385,-78.33435435435436,-77.62486486486486,-76.91537537537538,-76.20588588588589,-75.49639639639639,-74.7869069069069,-74.07741741741742,-73.36792792792792,-72.65843843843844,-71.94894894894895,-71.23945945945945,-70.52996996996997,-69.82048048048048,-69.11099099099098,-68.4015015015015,-67.69201201201201,-66.98252252252253,-66.27303303303303,-65.56354354354355,-64.85405405405406,-64.14456456456456,-63.435075075075076,-62.725585585585584,-62.0160960960961,-61.30660660660661,-60.597117117117115,-59.88762762762763,-59.17813813813814,-58.468648648648646,-57.75915915915916,-57.04966966966967,-56.34018018018018,-55.63069069069069,-54.9212012012012,-54.211711711711715,-53.50222222222222,-52.79273273273273,-52.083243243243246,-51.37375375375375,-50.66426426426426,-49.954774774774776,-49.245285285285284,-48.5357957957958,-47.82630630630631,-47.116816816816815,-46.40732732732733,-45.69783783783784,-44.988348348348346,-44.27885885885886,-43.56936936936937,-42.85987987987988,-42.15039039039039,-41.4409009009009,-40.731411411411415,-40.02192192192192,-39.31243243243243,-38.602942942942946,-37.89345345345345,-37.18396396396396,-36.474474474474476,-35.764984984984984,-35.05549549549549,-34.34600600600601,-33.636516516516515,-32.92702702702703,-32.21753753753754,-31.50804804804805,-30.798558558558558,-30.08906906906907,-29.37957957957958,-28.67009009009009,-27.9606006006006,-27.25111111111111,-26.541621621621623,-25.83213213213213,-25.122642642642642,-24.413153153153154,-23.703663663663665,-22.994174174174173,-22.284684684684684,-21.575195195195196,-20.865705705705707,-20.156216216216215,-19.446726726726727,-18.737237237237238,-18.027747747747746,-17.318258258258258,-16.60876876876877,-15.899279279279279,-15.18978978978979,-14.4803003003003,-13.770810810810811,-13.061321321321321,-12.351831831831833,-11.642342342342342,-10.932852852852854,-10.223363363363363,-9.513873873873873,-8.804384384384385,-8.094894894894894,-7.385405405405406,-6.675915915915916,-5.966426426426427,-5.2569369369369365,-4.547447447447447,-3.837957957957958,-3.1284684684684683,-2.418978978978979,-1.7094894894894894,-1.0],"y":[1.0,1.7094894894894894,2.418978978978979,3.1284684684684683,3.837957957957958,4.547447447447447,5.2569369369369365,5.966426426426427,6.675915915915916,7.385405405405406,8.094894894894894,8.804384384384385,9.513873873873873,10.223363363363363,10.932852852852854,11.642342342342342,12.351831831831833,13.061321321321321,13.770810810810811,14.4803003003003,15.18978978978979,15.899279279279279,16.60876876876877,17.318258258258258,18.027747747747746,18.737237237237238,19.446726726726727,20.156216216216215,20.865705705705707,21.575195195195196,22.284684684684684,22.994174174174173,23.703663663663665,24.413153153153154,25.122642642642642,25.83213213213213,26.541621621621623,27.25111111111111,27.9606006006006,28.67009009009009,29.37957957957958,30.08906906906907,30.798558558558558,31.50804804804805,32.21753753753754,32.92702702702703,33.636516516516515,34.34600600600601,35.05549549549549,35.764984984984984,36.474474474474476,37.18396396396396,37.89345345345345,38.602942942942946,39.31243243243243,40.02192192192192,40.731411411411415,41.4409009009009,42.15039039039039,42.85987987987988,43.56936936936937,44.27885885885886,44.988348348348346,45.69783783783784,46.40732732732733,47.116816816816815,47.82630630630631,48.5357957957958,49.245285285285284,49.954774774774776,50.66426426426426,51.37375375375375,52.083243243243246,52.79273273273273,53.50222222222222,54.211711711711715,54.9212012012012,55.63069069069069,56.34018018018018,57.04966966966967,57.75915915915916,58.468648648648646,59.17813813813814,59.88762762762763,60.597117117117115,61.30660660660661,62.0160960960961,62.725585585585584,63.435075075075076,64.14456456456456,64.85405405405406,65.56354354354355,66.27303303303303,66.98252252252253,67.69201201201201,68.4015015015015,69.11099099099098,69.82048048048048,70.52996996996997,71.23945945945945,71.94894894894895,72.65843843843844,73.36792792792792,74.07741741741742,74.7869069069069,75.49639639639639,76.20588588588589,76.91537537537538,77.62486486486486,78.33435435435436,79.04384384384385,79.75333333333333,80.46282282282283,81.17231231231231,81.8818018018018,82.59129129129128,83.30078078078078,84.01027027027027,84.71975975975975,85.42924924924925,86.13873873873874,86.84822822822822,87.55771771771772,88.2672072072072,88.97669669669669,89.68618618618619,90.39567567567568,91.10516516516516,91.81465465465466,92.52414414414415,93.23363363363363,93.94312312312313,94.65261261261261,95.3621021021021,96.0715915915916,96.78108108108108,97.49057057057057,98.20006006006005,98.90954954954955,99.61903903903904,100.32852852852852,101.03801801801802,101.7475075075075,102.45699699699699,103.16648648648649,103.87597597597598,104.58546546546546,105.29495495495496,106.00444444444445,106.71393393393393,107.42342342342343,108.13291291291291,108.8424024024024,109.5518918918919,110.26138138138138,110.97087087087087,111.68036036036035,112.38984984984985,113.09933933933934,113.80882882882882,114.51831831831832,115.2278078078078,115.93729729729729,116.64678678678679,117.35627627627628,118.06576576576576,118.77525525525526,119.48474474474475,120.19423423423423,120.90372372372373,121.61321321321321,122.3227027027027,123.0321921921922,123.74168168168168,124.45117117117117,125.16066066066067,125.87015015015015,126.57963963963964,127.28912912912912,127.99861861861862,128.70810810810812,129.4175975975976,130.1270870870871,130.8365765765766,131.54606606606606,132.25555555555556,132.96504504504506,133.67453453453453,134.38402402402403,135.0935135135135,135.803003003003,136.5124924924925,137.22198198198197,137.93147147147147,138.64096096096097,139.35045045045044,140.05993993993994,140.76942942942944,141.4789189189189,142.1884084084084,142.8978978978979,143.60738738738738,144.31687687687688,145.02636636636637,145.73585585585585,146.44534534534534,147.15483483483484,147.86432432432431,148.5738138138138,149.2833033033033,149.99279279279278,150.70228228228228,151.41177177177178,152.12126126126125,152.83075075075075,153.54024024024025,154.24972972972972,154.95921921921922,155.66870870870872,156.3781981981982,157.0876876876877,157.7971771771772,158.50666666666666,159.21615615615616,159.92564564564566,160.63513513513513,161.34462462462463,162.05411411411413,162.7636036036036,163.4730930930931,164.18258258258257,164.89207207207207,165.60156156156157,166.31105105105104,167.02054054054054,167.73003003003004,168.4395195195195,169.149009009009,169.8584984984985,170.56798798798798,171.27747747747748,171.98696696696697,172.69645645645645,173.40594594594594,174.11543543543544,174.82492492492491,175.5344144144144,176.2439039039039,176.95339339339338,177.66288288288288,178.37237237237238,179.08186186186185,179.79135135135135,180.50084084084085,181.21033033033032,181.91981981981982,182.62930930930932,183.3387987987988,184.0482882882883,184.7577777777778,185.46726726726726,186.17675675675676,186.88624624624626,187.59573573573573,188.30522522522523,189.01471471471473,189.7242042042042,190.4336936936937,191.1431831831832,191.85267267267267,192.56216216216217,193.27165165165164,193.98114114114114,194.69063063063064,195.4001201201201,196.1096096096096,196.8190990990991,197.52858858858858,198.23807807807808,198.94756756756757,199.65705705705705,200.36654654654654,201.07603603603604,201.78552552552551,202.495015015015,203.2045045045045,203.91399399399398,204.62348348348348,205.33297297297298,206.04246246246245,206.75195195195195,207.46144144144145,208.17093093093092,208.88042042042042,209.58990990990992,210.2993993993994,211.0088888888889,211.7183783783784,212.42786786786786,213.13735735735736,213.84684684684686,214.55633633633633,215.26582582582583,215.97531531531533,216.6848048048048,217.3942942942943,218.1037837837838,218.81327327327327,219.52276276276277,220.23225225225227,220.94174174174174,221.65123123123124,222.3607207207207,223.0702102102102,223.7796996996997,224.48918918918918,225.19867867867868,225.90816816816817,226.61765765765765,227.32714714714714,228.03663663663664,228.74612612612611,229.4556156156156,230.1651051051051,230.87459459459458,231.58408408408408,232.29357357357358,233.00306306306305,233.71255255255255,234.42204204204205,235.13153153153152,235.84102102102102,236.55051051051052,237.26,237.9694894894895,238.678978978979,239.38846846846846,240.09795795795796,240.80744744744746,241.51693693693693,242.22642642642643,242.93591591591593,243.6454054054054,244.3548948948949,245.0643843843844,245.77387387387387,246.48336336336337,247.19285285285287,247.90234234234234,248.61183183183184,249.32132132132134,250.0308108108108,250.7403003003003,251.44978978978978,252.15927927927927,252.86876876876877,253.57825825825824,254.28774774774774,254.99723723723724,255.7067267267267,256.41621621621624,257.1257057057057,257.8351951951952,258.5446846846847,259.2541741741742,259.9636636636637,260.6731531531532,261.3826426426426,262.0921321321321,262.8016216216216,263.5111111111111,264.2206006006006,264.9300900900901,265.63957957957956,266.34906906906906,267.05855855855856,267.76804804804806,268.47753753753756,269.187027027027,269.8965165165165,270.606006006006,271.3154954954955,272.024984984985,272.7344744744745,273.44396396396394,274.15345345345344,274.86294294294294,275.57243243243244,276.28192192192193,276.99141141141143,277.7009009009009,278.4103903903904,279.1198798798799,279.8293693693694,280.5388588588589,281.2483483483484,281.9578378378378,282.6673273273273,283.3768168168168,284.0863063063063,284.7957957957958,285.5052852852853,286.21477477477475,286.92426426426425,287.63375375375375,288.34324324324325,289.05273273273275,289.76222222222225,290.4717117117117,291.1812012012012,291.8906906906907,292.6001801801802,293.3096696696697,294.0191591591592,294.72864864864863,295.43813813813813,296.1476276276276,296.8571171171171,297.5666066066066,298.27609609609607,298.98558558558557,299.69507507507507,300.40456456456457,301.11405405405407,301.82354354354356,302.533033033033,303.2425225225225,303.952012012012,304.6615015015015,305.370990990991,306.0804804804805,306.78996996996995,307.49945945945944,308.20894894894894,308.91843843843844,309.62792792792794,310.33741741741744,311.0469069069069,311.7563963963964,312.4658858858859,313.1753753753754,313.8848648648649,314.5943543543544,315.3038438438438,316.0133333333333,316.7228228228228,317.4323123123123,318.1418018018018,318.8512912912913,319.56078078078076,320.27027027027026,320.97975975975976,321.68924924924926,322.39873873873876,323.10822822822826,323.8177177177177,324.5272072072072,325.2366966966967,325.9461861861862,326.6556756756757,327.36516516516514,328.07465465465464,328.78414414414414,329.49363363363364,330.20312312312313,330.91261261261263,331.6221021021021,332.3315915915916,333.0410810810811,333.7505705705706,334.4600600600601,335.1695495495496,335.879039039039,336.5885285285285,337.298018018018,338.0075075075075,338.716996996997,339.4264864864865,340.13597597597595,340.84546546546545,341.55495495495495,342.26444444444445,342.97393393393395,343.68342342342345,344.3929129129129,345.1024024024024,345.8118918918919,346.5213813813814,347.2308708708709,347.9403603603604,348.64984984984983,349.35933933933933,350.0688288288288,350.7783183183183,351.4878078078078,352.1972972972973,352.90678678678677,353.61627627627627,354.32576576576577,355.03525525525527,355.74474474474476,356.4542342342342,357.1637237237237,357.8732132132132,358.5827027027027,359.2921921921922,360.0016816816817,360.71117117117115,361.42066066066064,362.13015015015014,362.83963963963964,363.54912912912914,364.25861861861864,364.9681081081081,365.6775975975976,366.3870870870871,367.0965765765766,367.8060660660661,368.5155555555556,369.225045045045,369.9345345345345,370.644024024024,371.3535135135135,372.063003003003,372.7724924924925,373.48198198198196,374.19147147147146,374.90096096096096,375.61045045045046,376.31993993993996,377.02942942942946,377.7389189189189,378.4484084084084,379.1578978978979,379.8673873873874,380.5768768768769,381.2863663663664,381.99585585585584,382.70534534534534,383.41483483483483,384.12432432432433,384.83381381381383,385.5433033033033,386.2527927927928,386.9622822822823,387.6717717717718,388.3812612612613,389.0907507507508,389.8002402402402,390.5097297297297,391.2192192192192,391.9287087087087,392.6381981981982,393.3476876876877,394.05717717717715,394.76666666666665,395.47615615615615,396.18564564564565,396.89513513513515,397.60462462462465,398.3141141141141,399.0236036036036,399.7330930930931,400.4425825825826,401.1520720720721,401.8615615615616,402.57105105105103,403.2805405405405,403.99003003003,404.6995195195195,405.409009009009,406.1184984984985,406.82798798798797,407.53747747747747,408.24696696696697,408.95645645645646,409.66594594594596,410.37543543543546,411.0849249249249,411.7944144144144,412.5039039039039,413.2133933933934,413.9228828828829,414.63237237237234,415.34186186186184,416.05135135135134,416.76084084084084,417.47033033033034,418.17981981981984,418.8893093093093,419.5987987987988,420.3082882882883,421.0177777777778,421.7272672672673,422.4367567567568,423.1462462462462,423.8557357357357,424.5652252252252,425.2747147147147,425.9842042042042,426.6936936936937,427.40318318318316,428.11267267267266,428.82216216216216,429.53165165165166,430.24114114114116,430.95063063063066,431.6601201201201,432.3696096096096,433.0790990990991,433.7885885885886,434.4980780780781,435.2075675675676,435.91705705705704,436.62654654654654,437.33603603603603,438.04552552552553,438.75501501501503,439.46450450450453,440.173993993994,440.8834834834835,441.592972972973,442.3024624624625,443.01195195195197,443.7214414414414,444.4309309309309,445.1404204204204,445.8499099099099,446.5593993993994,447.2688888888889,447.97837837837835,448.68786786786785,449.39735735735735,450.10684684684685,450.81633633633635,451.52582582582585,452.2353153153153,452.9448048048048,453.6542942942943,454.3637837837838,455.0732732732733,455.7827627627628,456.49225225225223,457.2017417417417,457.9112312312312,458.6207207207207,459.3302102102102,460.0396996996997,460.74918918918917,461.45867867867867,462.16816816816817,462.87765765765766,463.58714714714716,464.29663663663666,465.0061261261261,465.7156156156156,466.4251051051051,467.1345945945946,467.8440840840841,468.5535735735736,469.26306306306304,469.97255255255254,470.68204204204204,471.39153153153154,472.10102102102104,472.8105105105105,473.52,474.2294894894895,474.938978978979,475.6484684684685,476.357957957958,477.0674474474474,477.7769369369369,478.4864264264264,479.1959159159159,479.9054054054054,480.6148948948949,481.32438438438436,482.03387387387386,482.74336336336336,483.45285285285286,484.16234234234236,484.87183183183186,485.5813213213213,486.2908108108108,487.0003003003003,487.7097897897898,488.4192792792793,489.1287687687688,489.83825825825824,490.54774774774774,491.25723723723723,491.96672672672673,492.67621621621623,493.38570570570573,494.0951951951952,494.8046846846847,495.5141741741742,496.2236636636637,496.93315315315317,497.64264264264267,498.3521321321321,499.0616216216216,499.7711111111111,500.4806006006006,501.1900900900901,501.89957957957955,502.60906906906905,503.31855855855855,504.02804804804805,504.73753753753755,505.44702702702705,506.1565165165165,506.866006006006,507.5754954954955,508.284984984985,508.9944744744745,509.703963963964,510.4134534534534,511.1229429429429,511.8324324324324,512.5419219219219,513.2514114114114,513.9609009009009,514.6703903903904,515.3798798798799,516.0893693693694,516.7988588588588,517.5083483483484,518.2178378378378,518.9273273273274,519.6368168168168,520.3463063063064,521.0557957957958,521.7652852852852,522.4747747747748,523.1842642642642,523.8937537537538,524.6032432432432,525.3127327327327,526.0222222222222,526.7317117117117,527.4412012012012,528.1506906906907,528.8601801801802,529.5696696696697,530.2791591591591,530.9886486486487,531.6981381381381,532.4076276276277,533.1171171171171,533.8266066066066,534.5360960960961,535.2455855855856,535.9550750750751,536.6645645645646,537.374054054054,538.0835435435436,538.793033033033,539.5025225225226,540.212012012012,540.9215015015016,541.630990990991,542.3404804804804,543.04996996997,543.7594594594594,544.468948948949,545.1784384384384,545.8879279279279,546.5974174174174,547.3069069069069,548.0163963963964,548.7258858858859,549.4353753753754,550.1448648648649,550.8543543543543,551.5638438438439,552.2733333333333,552.9828228228229,553.6923123123123,554.4018018018018,555.1112912912913,555.8207807807808,556.5302702702703,557.2397597597597,557.9492492492493,558.6587387387387,559.3682282282282,560.0777177177177,560.7872072072072,561.4966966966967,562.2061861861862,562.9156756756756,563.6251651651652,564.3346546546546,565.0441441441442,565.7536336336336,566.4631231231231,567.1726126126126,567.8821021021021,568.5915915915916,569.3010810810811,570.0105705705706,570.7200600600601,571.4295495495495,572.1390390390391,572.8485285285285,573.5580180180181,574.2675075075075,574.976996996997,575.6864864864865,576.395975975976,577.1054654654655,577.8149549549549,578.5244444444445,579.2339339339339,579.9434234234234,580.6529129129129,581.3624024024024,582.0718918918919,582.7813813813814,583.4908708708708,584.2003603603604,584.9098498498498,585.6193393393394,586.3288288288288,587.0383183183184,587.7478078078078,588.4572972972973,589.1667867867868,589.8762762762763,590.5857657657658,591.2952552552553,592.0047447447447,592.7142342342343,593.4237237237237,594.1332132132133,594.8427027027027,595.5521921921921,596.2616816816817,596.9711711711711,597.6806606606607,598.3901501501501,599.0996396396397,599.8091291291291,600.5186186186186,601.2281081081081,601.9375975975976,602.6470870870871,603.3565765765766,604.066066066066,604.7755555555556,605.485045045045,606.1945345345346,606.904024024024,607.6135135135136,608.323003003003,609.0324924924925,609.741981981982,610.4514714714715,611.160960960961,611.8704504504504,612.5799399399399,613.2894294294294,613.9989189189189,614.7084084084084,615.4178978978979,616.1273873873874,616.8368768768769,617.5463663663663,618.2558558558559,618.9653453453453,619.6748348348349,620.3843243243243,621.0938138138138,621.8033033033033,622.5127927927928,623.2222822822823,623.9317717717718,624.6412612612612,625.3507507507508,626.0602402402402,626.7697297297298,627.4792192192192,628.1887087087088,628.8981981981982,629.6076876876876,630.3171771771772,631.0266666666666,631.7361561561562,632.4456456456456,633.1551351351351,633.8646246246246,634.5741141141141,635.2836036036036,635.9930930930931,636.7025825825826,637.4120720720721,638.1215615615615,638.8310510510511,639.5405405405405,640.2500300300301,640.9595195195195,641.669009009009,642.3784984984985,643.087987987988,643.7974774774775,644.506966966967,645.2164564564565,645.925945945946,646.6354354354354,647.344924924925,648.0544144144144,648.763903903904,649.4733933933934,650.1828828828828,650.8923723723724,651.6018618618618,652.3113513513514,653.0208408408408,653.7303303303303,654.4398198198198,655.1493093093093,655.8587987987988,656.5682882882883,657.2777777777778,657.9872672672673,658.6967567567567,659.4062462462463,660.1157357357357,660.8252252252253,661.5347147147147,662.2442042042042,662.9536936936937,663.6631831831832,664.3726726726727,665.0821621621621,665.7916516516517,666.5011411411411,667.2106306306306,667.9201201201201,668.6296096096096,669.3390990990991,670.0485885885886,670.758078078078,671.4675675675676,672.177057057057,672.8865465465466,673.596036036036,674.3055255255256,675.015015015015,675.7245045045045,676.433993993994,677.1434834834835,677.852972972973,678.5624624624625,679.2719519519519,679.9814414414415,680.6909309309309,681.4004204204205,682.1099099099099,682.8193993993993,683.5288888888889,684.2383783783783,684.9478678678679,685.6573573573573,686.3668468468469,687.0763363363363,687.7858258258258,688.4953153153153,689.2048048048048,689.9142942942943,690.6237837837838,691.3332732732732,692.0427627627628,692.7522522522522,693.4617417417418,694.1712312312312,694.8807207207208,695.5902102102102,696.2996996996997,697.0091891891892,697.7186786786787,698.4281681681682,699.1376576576577,699.8471471471471,700.5566366366367,701.2661261261261,701.9756156156157,702.6851051051051,703.3945945945947,704.1040840840841,704.8135735735735,705.5230630630631,706.2325525525525,706.9420420420421,707.6515315315315,708.361021021021,709.0705105105105,709.78]}

},{}],34:[function(require,module,exports){
module.exports={"expected":[1.0,1.7094894894894894,2.418978978978979,3.1284684684684683,3.837957957957958,4.547447447447447,5.2569369369369365,5.966426426426427,6.675915915915916,7.385405405405406,8.094894894894894,8.804384384384385,9.513873873873873,10.223363363363363,10.932852852852854,11.642342342342342,12.351831831831833,13.061321321321321,13.770810810810811,14.4803003003003,15.18978978978979,15.899279279279279,16.60876876876877,17.318258258258258,18.027747747747746,18.737237237237238,19.446726726726727,20.156216216216215,20.865705705705707,21.575195195195196,22.284684684684684,22.994174174174173,23.703663663663665,24.413153153153154,25.122642642642642,25.83213213213213,26.541621621621623,27.25111111111111,27.9606006006006,28.67009009009009,29.37957957957958,30.08906906906907,30.798558558558558,31.50804804804805,32.21753753753754,32.92702702702703,33.636516516516515,34.34600600600601,35.05549549549549,35.764984984984984,36.474474474474476,37.18396396396396,37.89345345345345,38.602942942942946,39.31243243243243,40.02192192192192,40.731411411411415,41.4409009009009,42.15039039039039,42.85987987987988,43.56936936936937,44.27885885885886,44.988348348348346,45.69783783783784,46.40732732732733,47.116816816816815,47.82630630630631,48.5357957957958,49.245285285285284,49.954774774774776,50.66426426426426,51.37375375375375,52.083243243243246,52.79273273273273,53.50222222222222,54.211711711711715,54.9212012012012,55.63069069069069,56.34018018018018,57.04966966966967,57.75915915915916,58.468648648648646,59.17813813813814,59.88762762762763,60.597117117117115,61.30660660660661,62.0160960960961,62.725585585585584,63.435075075075076,64.14456456456456,64.85405405405406,65.56354354354355,66.27303303303303,66.98252252252253,67.69201201201201,68.4015015015015,69.11099099099098,69.82048048048048,70.52996996996997,71.23945945945945,71.94894894894895,72.65843843843844,73.36792792792792,74.07741741741742,74.7869069069069,75.49639639639639,76.20588588588589,76.91537537537538,77.62486486486486,78.33435435435436,79.04384384384385,79.75333333333333,80.46282282282283,81.17231231231231,81.8818018018018,82.59129129129128,83.30078078078078,84.01027027027027,84.71975975975975,85.42924924924925,86.13873873873874,86.84822822822822,87.55771771771772,88.2672072072072,88.97669669669669,89.68618618618619,90.39567567567568,91.10516516516516,91.81465465465466,92.52414414414415,93.23363363363363,93.94312312312313,94.65261261261261,95.3621021021021,96.0715915915916,96.78108108108108,97.49057057057057,98.20006006006005,98.90954954954955,99.61903903903904,100.32852852852852,101.03801801801802,101.7475075075075,102.45699699699699,103.16648648648649,103.87597597597598,104.58546546546546,105.29495495495496,106.00444444444445,106.71393393393393,107.42342342342343,108.13291291291291,108.8424024024024,109.5518918918919,110.26138138138138,110.97087087087087,111.68036036036035,112.38984984984985,113.09933933933934,113.80882882882882,114.51831831831832,115.2278078078078,115.93729729729729,116.64678678678679,117.35627627627628,118.06576576576576,118.77525525525526,119.48474474474475,120.19423423423423,120.90372372372373,121.61321321321321,122.3227027027027,123.0321921921922,123.74168168168168,124.45117117117117,125.16066066066067,125.87015015015015,126.57963963963964,127.28912912912912,127.99861861861862,128.70810810810812,129.4175975975976,130.1270870870871,130.8365765765766,131.54606606606606,132.25555555555556,132.96504504504506,133.67453453453453,134.38402402402403,135.0935135135135,135.803003003003,136.5124924924925,137.22198198198197,137.93147147147147,138.64096096096097,139.35045045045044,140.05993993993994,140.76942942942944,141.4789189189189,142.1884084084084,142.8978978978979,143.60738738738738,144.31687687687688,145.02636636636637,145.73585585585585,146.44534534534534,147.15483483483484,147.86432432432431,148.5738138138138,149.2833033033033,149.99279279279278,150.70228228228228,151.41177177177178,152.12126126126125,152.83075075075075,153.54024024024025,154.24972972972972,154.95921921921922,155.66870870870872,156.3781981981982,157.0876876876877,157.7971771771772,158.50666666666666,159.21615615615616,159.92564564564566,160.63513513513513,161.34462462462463,162.05411411411413,162.7636036036036,163.4730930930931,164.18258258258257,164.89207207207207,165.60156156156157,166.31105105105104,167.02054054054054,167.73003003003004,168.4395195195195,169.149009009009,169.8584984984985,170.56798798798798,171.27747747747748,171.98696696696697,172.69645645645645,173.40594594594594,174.11543543543544,174.82492492492491,175.5344144144144,176.2439039039039,176.95339339339338,177.66288288288288,178.37237237237238,179.08186186186185,179.79135135135135,180.50084084084085,181.21033033033032,181.91981981981982,182.62930930930932,183.3387987987988,184.0482882882883,184.7577777777778,185.46726726726726,186.17675675675676,186.88624624624626,187.59573573573573,188.30522522522523,189.01471471471473,189.7242042042042,190.4336936936937,191.1431831831832,191.85267267267267,192.56216216216217,193.27165165165164,193.98114114114114,194.69063063063064,195.4001201201201,196.1096096096096,196.8190990990991,197.52858858858858,198.23807807807808,198.94756756756757,199.65705705705705,200.36654654654654,201.07603603603604,201.78552552552551,202.495015015015,203.2045045045045,203.91399399399398,204.62348348348348,205.33297297297298,206.04246246246245,206.75195195195195,207.46144144144145,208.17093093093092,208.88042042042042,209.58990990990992,210.2993993993994,211.0088888888889,211.7183783783784,212.42786786786786,213.13735735735736,213.84684684684686,214.55633633633633,215.26582582582583,215.97531531531533,216.6848048048048,217.3942942942943,218.1037837837838,218.81327327327327,219.52276276276277,220.23225225225227,220.94174174174174,221.65123123123124,222.3607207207207,223.0702102102102,223.7796996996997,224.48918918918918,225.19867867867868,225.90816816816817,226.61765765765765,227.32714714714714,228.03663663663664,228.74612612612611,229.4556156156156,230.1651051051051,230.87459459459458,231.58408408408408,232.29357357357358,233.00306306306305,233.71255255255255,234.42204204204205,235.13153153153152,235.84102102102102,236.55051051051052,237.26,237.9694894894895,238.678978978979,239.38846846846846,240.09795795795796,240.80744744744746,241.51693693693693,242.22642642642643,242.93591591591593,243.6454054054054,244.3548948948949,245.0643843843844,245.77387387387387,246.48336336336337,247.19285285285287,247.90234234234234,248.61183183183184,249.32132132132134,250.0308108108108,250.7403003003003,251.44978978978978,252.15927927927927,252.86876876876877,253.57825825825824,254.28774774774774,254.99723723723724,255.7067267267267,256.41621621621624,257.1257057057057,257.8351951951952,258.5446846846847,259.2541741741742,259.9636636636637,260.6731531531532,261.3826426426426,262.0921321321321,262.8016216216216,263.5111111111111,264.2206006006006,264.9300900900901,265.63957957957956,266.34906906906906,267.05855855855856,267.76804804804806,268.47753753753756,269.187027027027,269.8965165165165,270.606006006006,271.3154954954955,272.024984984985,272.7344744744745,273.44396396396394,274.15345345345344,274.86294294294294,275.57243243243244,276.28192192192193,276.99141141141143,277.7009009009009,278.4103903903904,279.1198798798799,279.8293693693694,280.5388588588589,281.2483483483484,281.9578378378378,282.6673273273273,283.3768168168168,284.0863063063063,284.7957957957958,285.5052852852853,286.21477477477475,286.92426426426425,287.63375375375375,288.34324324324325,289.05273273273275,289.76222222222225,290.4717117117117,291.1812012012012,291.8906906906907,292.6001801801802,293.3096696696697,294.0191591591592,294.72864864864863,295.43813813813813,296.1476276276276,296.8571171171171,297.5666066066066,298.27609609609607,298.98558558558557,299.69507507507507,300.40456456456457,301.11405405405407,301.82354354354356,302.533033033033,303.2425225225225,303.952012012012,304.6615015015015,305.370990990991,306.0804804804805,306.78996996996995,307.49945945945944,308.20894894894894,308.91843843843844,309.62792792792794,310.33741741741744,311.0469069069069,311.7563963963964,312.4658858858859,313.1753753753754,313.8848648648649,314.5943543543544,315.3038438438438,316.0133333333333,316.7228228228228,317.4323123123123,318.1418018018018,318.8512912912913,319.56078078078076,320.27027027027026,320.97975975975976,321.68924924924926,322.39873873873876,323.10822822822826,323.8177177177177,324.5272072072072,325.2366966966967,325.9461861861862,326.6556756756757,327.36516516516514,328.07465465465464,328.78414414414414,329.49363363363364,330.20312312312313,330.91261261261263,331.6221021021021,332.3315915915916,333.0410810810811,333.7505705705706,334.4600600600601,335.1695495495496,335.879039039039,336.5885285285285,337.298018018018,338.0075075075075,338.716996996997,339.4264864864865,340.13597597597595,340.84546546546545,341.55495495495495,342.26444444444445,342.97393393393395,343.68342342342345,344.3929129129129,345.1024024024024,345.8118918918919,346.5213813813814,347.2308708708709,347.9403603603604,348.64984984984983,349.35933933933933,350.0688288288288,350.7783183183183,351.4878078078078,352.1972972972973,352.90678678678677,353.61627627627627,354.32576576576577,355.03525525525527,0.7094894894894992,2.1284684684684407,3.547447447447439,4.9664264264264375,6.385405405405379,7.804384384384377,9.223363363363376,10.642342342342317,12.061321321321316,13.480300300300314,14.899279279279256,16.318258258258254,17.737237237237252,19.156216216216194,20.575195195195192,21.99417417417419,23.413153153153132,24.83213213213213,26.25111111111113,27.67009009009007,29.08906906906907,30.508048048048067,31.92702702702701,33.34600600600601,34.764984984985006,36.18396396396395,37.602942942942946,39.021921921921944,40.440900900900886,41.859879879879884,43.27885885885888,44.697837837837824,46.11681681681682,47.53579579579582,48.95477477477476,50.37375375375376,51.79273273273276,53.2117117117117,54.6306906906907,56.0496696696697,57.46864864864864,58.88762762762764,60.30660660660658,61.72558558558558,63.144564564564575,64.56354354354352,65.98252252252252,67.40150150150151,68.82048048048046,70.23945945945945,71.65843843843845,73.0774174174174,74.49639639639639,75.91537537537539,77.33435435435433,78.75333333333333,80.17231231231233,81.59129129129127,83.01027027027027,84.42924924924927,85.84822822822821,87.2672072072072,88.6861861861862,90.10516516516515,91.52414414414415,92.94312312312314,94.36210210210209,95.78108108108108,97.20006006006008,98.61903903903902,100.03801801801802,101.45699699699702,102.87597597597596,104.29495495495496,105.71393393393396,107.1329129129129,108.5518918918919,109.9708708708709,111.38984984984984,112.80882882882884,114.22780780780784,115.64678678678678,117.06576576576578,118.48474474474472,119.90372372372372,121.32270270270271,122.74168168168165,124.16066066066065,125.57963963963965,126.9986186186186,128.4175975975976,129.8365765765766,131.25555555555553,132.67453453453453,134.09351351351353,135.51249249249247,136.93147147147147,138.35045045045047,139.7694294294294,141.1884084084084,142.6073873873874,144.02636636636635,145.44534534534534,146.86432432432434,148.28330330330328,149.70228228228228,151.12126126126128,152.54024024024022,153.95921921921922,155.37819819819822,156.79717717717716,158.21615615615616,159.63513513513516,161.0541141141141,162.4730930930931,163.8920720720721,165.31105105105104,166.73003003003004,168.14900900900903,169.56798798798798,170.98696696696697,172.40594594594597,173.82492492492491,175.2439039039039,176.66288288288285,178.08186186186185,179.50084084084085,180.9198198198198,182.3387987987988,183.7577777777778,185.17675675675673,186.59573573573573,188.01471471471473,189.43369369369367,190.85267267267267,192.27165165165167,193.6906306306306,195.1096096096096,196.5285885885886,197.94756756756755,199.36654654654657,200.78552552552554,202.20450450450448,203.62348348348348,205.04246246246245,206.46144144144145,207.88042042042045,209.29939939939942,210.71837837837836,212.13735735735733,213.55633633633633,214.97531531531533,216.3942942942943,217.8132732732733,219.23225225225224,220.6512312312312,222.0702102102102,223.4891891891892,224.90816816816817,226.32714714714717,227.74612612612611,229.16510510510508,230.58408408408408,232.00306306306308,233.42204204204205,234.841021021021,236.26,1.1284684684684407,3.2569369369369383,5.385405405405436,7.513873873873877,9.642342342342317,11.770810810810815,13.899279279279256,16.027747747747753,18.15621621621625,20.28468468468469,22.413153153153132,24.54162162162163,26.67009009009007,28.798558558558568,30.927027027027066,33.05549549549551,35.18396396396395,37.312432432432445,39.440900900900886,41.56936936936938,43.69783783783788,45.82630630630632,47.95477477477476,50.0832432432432,52.2117117117117,54.3401801801802,56.46864864864864,58.597117117117136,60.72558558558558,62.85405405405402,64.98252252252252,67.11099099099101,69.23945945945945,71.36792792792795,73.49639639639639,75.62486486486483,77.75333333333333,79.88180180180183,82.01027027027027,84.13873873873871,86.2672072072072,88.39567567567565,90.52414414414415,92.65261261261264,94.78108108108108,96.90954954954952,99.03801801801802,101.16648648648646,103.29495495495496,105.42342342342346,107.5518918918919,109.68036036036034,111.80882882882884,113.93729729729728,116.06576576576578,118.19423423423422,120.32270270270271,122.45117117117115,124.57963963963971,126.70810810810809,128.83657657657653,130.9650450450451,133.09351351351347,135.22198198198203,137.3504504504504,139.47891891891896,141.6073873873874,143.7358558558558,145.86432432432434,147.99279279279278,150.12126126126128,152.24972972972972,154.37819819819816,156.50666666666666,158.6351351351351,160.76360360360366,162.89207207207204,165.0205405405406,167.14900900900903,169.27747747747742,171.40594594594597,173.5344144144144,175.6628828828829,0.12846846846846915,2.966426426426409,5.804384384384377,8.642342342342317,11.480300300300371,14.318258258258226,17.156216216216166,19.99417417417422,22.832132132132074,25.670090090090127,28.508048048048067,31.346006006006036,34.183963963963976,37.021921921921916,39.859879879879884,42.697837837837824,45.53579579579588,48.37375375375373,51.21171171171167,54.049669669669726,56.88762762762758,59.725585585585634,62.56354354354349,65.40150150150154,68.23945945945948,71.07741741741734,73.91537537537539,76.75333333333333,79.5912912912913,82.42924924924924,85.26720720720718,88.10516516516515,90.94312312312309,93.78108108108114,96.619039039039,99.45699699699705,102.29495495495499,105.13291291291284,107.9708708708709,110.80882882882884,113.6467867867868,116.48474474474475,119.32270270270268,122.16066066066065,124.9986186186186,127.83657657657665,130.6745345345345,133.51249249249244,136.3504504504505,139.18840840840835,142.0263663663664,3.385405405405436,6.932852852852875,10.480300300300314,14.027747747747753,17.575195195195192,21.12264264264263,24.670090090090184,28.21753753753751,31.76498498498495,35.3124324324325,38.85987987987983,42.40732732732738,45.954774774774705,49.50222222222226,53.0496696696697,56.59711711711702,60.144564564564575,63.692012012012015,67.23945945945945,70.78690690690689,74.33435435435433,77.88180180180183,81.42924924924921,84.9766966966967,88.52414414414415,92.07159159159164,95.61903903903902,99.16648648648646,102.71393393393396,106.26138138138134,109.8088288288289,113.35627627627628,116.90372372372366,2.38540540540545,6.642342342342317,10.899279279279298,15.156216216216237,19.413153153153104,23.670090090090085,27.927027027027023,32.183963963964004,36.44090090090087,40.69783783783792,44.95477477477479,49.21171171171166,53.46864864864864,57.72558558558558,61.98252252252256,66.23945945945943,70.49639639639636,74.75333333333334,79.01027027027021,83.26720720720726,87.52414414414413,91.78108108108111,96.03801801801805,100.29495495495492,3.5138738738738766,8.480300300300314,13.44672672672678,18.413153153153132,23.37957957957957,28.346006006006036,33.31243243243239,38.278858858858854,43.24528528528529,48.21171171171176,53.17813813813811,58.14456456456455,63.11099099099101,68.07741741741737,73.04384384384392,78.01027027027027,82.97669669669662,87.94312312312317,4.642342342342317,10.318258258258268,15.994174174174205,21.670090090090042,27.346006006005993,33.02192192192193,38.69783783783788,44.37375375375372,50.04966966966977,55.725585585585605,61.40150150150144,67.0774174174174,72.75333333333333,78.42924924924928,5.770810810810758,12.156216216216194,18.54162162162163,24.927027027026952,31.3124324324325,37.697837837837824,44.08324324324326,50.468648648648696,56.85405405405402,63.239459459459454,69.62486486486489,5.480300300300357,12.575195195195164,19.6700900900901,26.76498498498502,33.85987987987983,40.95477477477475,48.04966966966968,55.144564564564604,62.23945945945941,5.189789789789785,12.99417417417419,20.798558558558554,28.60294294294296,36.40732732732732,44.211711711711686,52.01609609609609,0.6423423423423174,9.156216216216286,17.670090090090063,26.18396396396392,34.69783783783789,43.211711711711665,51.725585585585634,6.027747747747696,15.251111111111157,24.474474474474505,33.69783783783777,42.92120120120123,1.4803003003003141,11.413153153153175,21.346006006006014,31.27885885885876,41.211711711711715,4.027747747747739,14.670090090090085,25.312432432432416,35.95477477477486,2.3182582582582327,13.670090090090056,25.021921921921994,36.37375375375371,6.284684684684748,18.34600600600595,30.407327327327266,3.156216216216265,15.927027027026952,28.697837837837874,4.28468468468472,17.764984984985006,31.245285285285306,9.670090090090113,23.859879879879884,4.413153153153161,19.312432432432416,1.9941741741741623,17.602942942942864,2.4131531531531962,18.731411411411386,5.67009009009011,22.69783783783787,11.764984984984949,2.2511111111111184,20.697837837837774,13.312432432432502,7.346006006006004,2.7985585585585966,23.373753753753718,20.954774774774766,19.954774774774805,20.373753753753707,1.346006006005993,5.312432432432459,10.697837837837785,17.5022222222222,7.6978378378378665,0.7314114114114716,13.211711711711686,11.211711711711787,12.049669669669656,1.245285285285263,8.468648648648646,5.4686486486486405,6.725585585585591,0.5971171171171221,0.14456456456446176,5.367927927927944,6.753333333333362,6.429249249249274,6.524144144144191,1.7810810810811102,3.132912912912885,0.7752552552551677,1.0935135135135958,1.3781981981982314,0.7577777777777932,0.6176576576577038,2.019159159159152,1.3418618618619096,0.7799999999999727],"x":[1.0,1.7094894894894894,2.418978978978979,3.1284684684684683,3.837957957957958,4.547447447447447,5.2569369369369365,5.966426426426427,6.675915915915916,7.385405405405406,8.094894894894894,8.804384384384385,9.513873873873873,10.223363363363363,10.932852852852854,11.642342342342342,12.351831831831833,13.061321321321321,13.770810810810811,14.4803003003003,15.18978978978979,15.899279279279279,16.60876876876877,17.318258258258258,18.027747747747746,18.737237237237238,19.446726726726727,20.156216216216215,20.865705705705707,21.575195195195196,22.284684684684684,22.994174174174173,23.703663663663665,24.413153153153154,25.122642642642642,25.83213213213213,26.541621621621623,27.25111111111111,27.9606006006006,28.67009009009009,29.37957957957958,30.08906906906907,30.798558558558558,31.50804804804805,32.21753753753754,32.92702702702703,33.636516516516515,34.34600600600601,35.05549549549549,35.764984984984984,36.474474474474476,37.18396396396396,37.89345345345345,38.602942942942946,39.31243243243243,40.02192192192192,40.731411411411415,41.4409009009009,42.15039039039039,42.85987987987988,43.56936936936937,44.27885885885886,44.988348348348346,45.69783783783784,46.40732732732733,47.116816816816815,47.82630630630631,48.5357957957958,49.245285285285284,49.954774774774776,50.66426426426426,51.37375375375375,52.083243243243246,52.79273273273273,53.50222222222222,54.211711711711715,54.9212012012012,55.63069069069069,56.34018018018018,57.04966966966967,57.75915915915916,58.468648648648646,59.17813813813814,59.88762762762763,60.597117117117115,61.30660660660661,62.0160960960961,62.725585585585584,63.435075075075076,64.14456456456456,64.85405405405406,65.56354354354355,66.27303303303303,66.98252252252253,67.69201201201201,68.4015015015015,69.11099099099098,69.82048048048048,70.52996996996997,71.23945945945945,71.94894894894895,72.65843843843844,73.36792792792792,74.07741741741742,74.7869069069069,75.49639639639639,76.20588588588589,76.91537537537538,77.62486486486486,78.33435435435436,79.04384384384385,79.75333333333333,80.46282282282283,81.17231231231231,81.8818018018018,82.59129129129128,83.30078078078078,84.01027027027027,84.71975975975975,85.42924924924925,86.13873873873874,86.84822822822822,87.55771771771772,88.2672072072072,88.97669669669669,89.68618618618619,90.39567567567568,91.10516516516516,91.81465465465466,92.52414414414415,93.23363363363363,93.94312312312313,94.65261261261261,95.3621021021021,96.0715915915916,96.78108108108108,97.49057057057057,98.20006006006005,98.90954954954955,99.61903903903904,100.32852852852852,101.03801801801802,101.7475075075075,102.45699699699699,103.16648648648649,103.87597597597598,104.58546546546546,105.29495495495496,106.00444444444445,106.71393393393393,107.42342342342343,108.13291291291291,108.8424024024024,109.5518918918919,110.26138138138138,110.97087087087087,111.68036036036035,112.38984984984985,113.09933933933934,113.80882882882882,114.51831831831832,115.2278078078078,115.93729729729729,116.64678678678679,117.35627627627628,118.06576576576576,118.77525525525526,119.48474474474475,120.19423423423423,120.90372372372373,121.61321321321321,122.3227027027027,123.0321921921922,123.74168168168168,124.45117117117117,125.16066066066067,125.87015015015015,126.57963963963964,127.28912912912912,127.99861861861862,128.70810810810812,129.4175975975976,130.1270870870871,130.8365765765766,131.54606606606606,132.25555555555556,132.96504504504506,133.67453453453453,134.38402402402403,135.0935135135135,135.803003003003,136.5124924924925,137.22198198198197,137.93147147147147,138.64096096096097,139.35045045045044,140.05993993993994,140.76942942942944,141.4789189189189,142.1884084084084,142.8978978978979,143.60738738738738,144.31687687687688,145.02636636636637,145.73585585585585,146.44534534534534,147.15483483483484,147.86432432432431,148.5738138138138,149.2833033033033,149.99279279279278,150.70228228228228,151.41177177177178,152.12126126126125,152.83075075075075,153.54024024024025,154.24972972972972,154.95921921921922,155.66870870870872,156.3781981981982,157.0876876876877,157.7971771771772,158.50666666666666,159.21615615615616,159.92564564564566,160.63513513513513,161.34462462462463,162.05411411411413,162.7636036036036,163.4730930930931,164.18258258258257,164.89207207207207,165.60156156156157,166.31105105105104,167.02054054054054,167.73003003003004,168.4395195195195,169.149009009009,169.8584984984985,170.56798798798798,171.27747747747748,171.98696696696697,172.69645645645645,173.40594594594594,174.11543543543544,174.82492492492491,175.5344144144144,176.2439039039039,176.95339339339338,177.66288288288288,178.37237237237238,179.08186186186185,179.79135135135135,180.50084084084085,181.21033033033032,181.91981981981982,182.62930930930932,183.3387987987988,184.0482882882883,184.7577777777778,185.46726726726726,186.17675675675676,186.88624624624626,187.59573573573573,188.30522522522523,189.01471471471473,189.7242042042042,190.4336936936937,191.1431831831832,191.85267267267267,192.56216216216217,193.27165165165164,193.98114114114114,194.69063063063064,195.4001201201201,196.1096096096096,196.8190990990991,197.52858858858858,198.23807807807808,198.94756756756757,199.65705705705705,200.36654654654654,201.07603603603604,201.78552552552551,202.495015015015,203.2045045045045,203.91399399399398,204.62348348348348,205.33297297297298,206.04246246246245,206.75195195195195,207.46144144144145,208.17093093093092,208.88042042042042,209.58990990990992,210.2993993993994,211.0088888888889,211.7183783783784,212.42786786786786,213.13735735735736,213.84684684684686,214.55633633633633,215.26582582582583,215.97531531531533,216.6848048048048,217.3942942942943,218.1037837837838,218.81327327327327,219.52276276276277,220.23225225225227,220.94174174174174,221.65123123123124,222.3607207207207,223.0702102102102,223.7796996996997,224.48918918918918,225.19867867867868,225.90816816816817,226.61765765765765,227.32714714714714,228.03663663663664,228.74612612612611,229.4556156156156,230.1651051051051,230.87459459459458,231.58408408408408,232.29357357357358,233.00306306306305,233.71255255255255,234.42204204204205,235.13153153153152,235.84102102102102,236.55051051051052,237.26,237.9694894894895,238.678978978979,239.38846846846846,240.09795795795796,240.80744744744746,241.51693693693693,242.22642642642643,242.93591591591593,243.6454054054054,244.3548948948949,245.0643843843844,245.77387387387387,246.48336336336337,247.19285285285287,247.90234234234234,248.61183183183184,249.32132132132134,250.0308108108108,250.7403003003003,251.44978978978978,252.15927927927927,252.86876876876877,253.57825825825824,254.28774774774774,254.99723723723724,255.7067267267267,256.41621621621624,257.1257057057057,257.8351951951952,258.5446846846847,259.2541741741742,259.9636636636637,260.6731531531532,261.3826426426426,262.0921321321321,262.8016216216216,263.5111111111111,264.2206006006006,264.9300900900901,265.63957957957956,266.34906906906906,267.05855855855856,267.76804804804806,268.47753753753756,269.187027027027,269.8965165165165,270.606006006006,271.3154954954955,272.024984984985,272.7344744744745,273.44396396396394,274.15345345345344,274.86294294294294,275.57243243243244,276.28192192192193,276.99141141141143,277.7009009009009,278.4103903903904,279.1198798798799,279.8293693693694,280.5388588588589,281.2483483483484,281.9578378378378,282.6673273273273,283.3768168168168,284.0863063063063,284.7957957957958,285.5052852852853,286.21477477477475,286.92426426426425,287.63375375375375,288.34324324324325,289.05273273273275,289.76222222222225,290.4717117117117,291.1812012012012,291.8906906906907,292.6001801801802,293.3096696696697,294.0191591591592,294.72864864864863,295.43813813813813,296.1476276276276,296.8571171171171,297.5666066066066,298.27609609609607,298.98558558558557,299.69507507507507,300.40456456456457,301.11405405405407,301.82354354354356,302.533033033033,303.2425225225225,303.952012012012,304.6615015015015,305.370990990991,306.0804804804805,306.78996996996995,307.49945945945944,308.20894894894894,308.91843843843844,309.62792792792794,310.33741741741744,311.0469069069069,311.7563963963964,312.4658858858859,313.1753753753754,313.8848648648649,314.5943543543544,315.3038438438438,316.0133333333333,316.7228228228228,317.4323123123123,318.1418018018018,318.8512912912913,319.56078078078076,320.27027027027026,320.97975975975976,321.68924924924926,322.39873873873876,323.10822822822826,323.8177177177177,324.5272072072072,325.2366966966967,325.9461861861862,326.6556756756757,327.36516516516514,328.07465465465464,328.78414414414414,329.49363363363364,330.20312312312313,330.91261261261263,331.6221021021021,332.3315915915916,333.0410810810811,333.7505705705706,334.4600600600601,335.1695495495496,335.879039039039,336.5885285285285,337.298018018018,338.0075075075075,338.716996996997,339.4264864864865,340.13597597597595,340.84546546546545,341.55495495495495,342.26444444444445,342.97393393393395,343.68342342342345,344.3929129129129,345.1024024024024,345.8118918918919,346.5213813813814,347.2308708708709,347.9403603603604,348.64984984984983,349.35933933933933,350.0688288288288,350.7783183183183,351.4878078078078,352.1972972972973,352.90678678678677,353.61627627627627,354.32576576576577,355.03525525525527,355.74474474474476,356.4542342342342,357.1637237237237,357.8732132132132,358.5827027027027,359.2921921921922,360.0016816816817,360.71117117117115,361.42066066066064,362.13015015015014,362.83963963963964,363.54912912912914,364.25861861861864,364.9681081081081,365.6775975975976,366.3870870870871,367.0965765765766,367.8060660660661,368.5155555555556,369.225045045045,369.9345345345345,370.644024024024,371.3535135135135,372.063003003003,372.7724924924925,373.48198198198196,374.19147147147146,374.90096096096096,375.61045045045046,376.31993993993996,377.02942942942946,377.7389189189189,378.4484084084084,379.1578978978979,379.8673873873874,380.5768768768769,381.2863663663664,381.99585585585584,382.70534534534534,383.41483483483483,384.12432432432433,384.83381381381383,385.5433033033033,386.2527927927928,386.9622822822823,387.6717717717718,388.3812612612613,389.0907507507508,389.8002402402402,390.5097297297297,391.2192192192192,391.9287087087087,392.6381981981982,393.3476876876877,394.05717717717715,394.76666666666665,395.47615615615615,396.18564564564565,396.89513513513515,397.60462462462465,398.3141141141141,399.0236036036036,399.7330930930931,400.4425825825826,401.1520720720721,401.8615615615616,402.57105105105103,403.2805405405405,403.99003003003,404.6995195195195,405.409009009009,406.1184984984985,406.82798798798797,407.53747747747747,408.24696696696697,408.95645645645646,409.66594594594596,410.37543543543546,411.0849249249249,411.7944144144144,412.5039039039039,413.2133933933934,413.9228828828829,414.63237237237234,415.34186186186184,416.05135135135134,416.76084084084084,417.47033033033034,418.17981981981984,418.8893093093093,419.5987987987988,420.3082882882883,421.0177777777778,421.7272672672673,422.4367567567568,423.1462462462462,423.8557357357357,424.5652252252252,425.2747147147147,425.9842042042042,426.6936936936937,427.40318318318316,428.11267267267266,428.82216216216216,429.53165165165166,430.24114114114116,430.95063063063066,431.6601201201201,432.3696096096096,433.0790990990991,433.7885885885886,434.4980780780781,435.2075675675676,435.91705705705704,436.62654654654654,437.33603603603603,438.04552552552553,438.75501501501503,439.46450450450453,440.173993993994,440.8834834834835,441.592972972973,442.3024624624625,443.01195195195197,443.7214414414414,444.4309309309309,445.1404204204204,445.8499099099099,446.5593993993994,447.2688888888889,447.97837837837835,448.68786786786785,449.39735735735735,450.10684684684685,450.81633633633635,451.52582582582585,452.2353153153153,452.9448048048048,453.6542942942943,454.3637837837838,455.0732732732733,455.7827627627628,456.49225225225223,457.2017417417417,457.9112312312312,458.6207207207207,459.3302102102102,460.0396996996997,460.74918918918917,461.45867867867867,462.16816816816817,462.87765765765766,463.58714714714716,464.29663663663666,465.0061261261261,465.7156156156156,466.4251051051051,467.1345945945946,467.8440840840841,468.5535735735736,469.26306306306304,469.97255255255254,470.68204204204204,471.39153153153154,472.10102102102104,472.8105105105105,473.52,474.2294894894895,474.938978978979,475.6484684684685,476.357957957958,477.0674474474474,477.7769369369369,478.4864264264264,479.1959159159159,479.9054054054054,480.6148948948949,481.32438438438436,482.03387387387386,482.74336336336336,483.45285285285286,484.16234234234236,484.87183183183186,485.5813213213213,486.2908108108108,487.0003003003003,487.7097897897898,488.4192792792793,489.1287687687688,489.83825825825824,490.54774774774774,491.25723723723723,491.96672672672673,492.67621621621623,493.38570570570573,494.0951951951952,494.8046846846847,495.5141741741742,496.2236636636637,496.93315315315317,497.64264264264267,498.3521321321321,499.0616216216216,499.7711111111111,500.4806006006006,501.1900900900901,501.89957957957955,502.60906906906905,503.31855855855855,504.02804804804805,504.73753753753755,505.44702702702705,506.1565165165165,506.866006006006,507.5754954954955,508.284984984985,508.9944744744745,509.703963963964,510.4134534534534,511.1229429429429,511.8324324324324,512.5419219219219,513.2514114114114,513.9609009009009,514.6703903903904,515.3798798798799,516.0893693693694,516.7988588588588,517.5083483483484,518.2178378378378,518.9273273273274,519.6368168168168,520.3463063063064,521.0557957957958,521.7652852852852,522.4747747747748,523.1842642642642,523.8937537537538,524.6032432432432,525.3127327327327,526.0222222222222,526.7317117117117,527.4412012012012,528.1506906906907,528.8601801801802,529.5696696696697,530.2791591591591,530.9886486486487,531.6981381381381,532.4076276276277,533.1171171171171,533.8266066066066,534.5360960960961,535.2455855855856,535.9550750750751,536.6645645645646,537.374054054054,538.0835435435436,538.793033033033,539.5025225225226,540.212012012012,540.9215015015016,541.630990990991,542.3404804804804,543.04996996997,543.7594594594594,544.468948948949,545.1784384384384,545.8879279279279,546.5974174174174,547.3069069069069,548.0163963963964,548.7258858858859,549.4353753753754,550.1448648648649,550.8543543543543,551.5638438438439,552.2733333333333,552.9828228228229,553.6923123123123,554.4018018018018,555.1112912912913,555.8207807807808,556.5302702702703,557.2397597597597,557.9492492492493,558.6587387387387,559.3682282282282,560.0777177177177,560.7872072072072,561.4966966966967,562.2061861861862,562.9156756756756,563.6251651651652,564.3346546546546,565.0441441441442,565.7536336336336,566.4631231231231,567.1726126126126,567.8821021021021,568.5915915915916,569.3010810810811,570.0105705705706,570.7200600600601,571.4295495495495,572.1390390390391,572.8485285285285,573.5580180180181,574.2675075075075,574.976996996997,575.6864864864865,576.395975975976,577.1054654654655,577.8149549549549,578.5244444444445,579.2339339339339,579.9434234234234,580.6529129129129,581.3624024024024,582.0718918918919,582.7813813813814,583.4908708708708,584.2003603603604,584.9098498498498,585.6193393393394,586.3288288288288,587.0383183183184,587.7478078078078,588.4572972972973,589.1667867867868,589.8762762762763,590.5857657657658,591.2952552552553,592.0047447447447,592.7142342342343,593.4237237237237,594.1332132132133,594.8427027027027,595.5521921921921,596.2616816816817,596.9711711711711,597.6806606606607,598.3901501501501,599.0996396396397,599.8091291291291,600.5186186186186,601.2281081081081,601.9375975975976,602.6470870870871,603.3565765765766,604.066066066066,604.7755555555556,605.485045045045,606.1945345345346,606.904024024024,607.6135135135136,608.323003003003,609.0324924924925,609.741981981982,610.4514714714715,611.160960960961,611.8704504504504,612.5799399399399,613.2894294294294,613.9989189189189,614.7084084084084,615.4178978978979,616.1273873873874,616.8368768768769,617.5463663663663,618.2558558558559,618.9653453453453,619.6748348348349,620.3843243243243,621.0938138138138,621.8033033033033,622.5127927927928,623.2222822822823,623.9317717717718,624.6412612612612,625.3507507507508,626.0602402402402,626.7697297297298,627.4792192192192,628.1887087087088,628.8981981981982,629.6076876876876,630.3171771771772,631.0266666666666,631.7361561561562,632.4456456456456,633.1551351351351,633.8646246246246,634.5741141141141,635.2836036036036,635.9930930930931,636.7025825825826,637.4120720720721,638.1215615615615,638.8310510510511,639.5405405405405,640.2500300300301,640.9595195195195,641.669009009009,642.3784984984985,643.087987987988,643.7974774774775,644.506966966967,645.2164564564565,645.925945945946,646.6354354354354,647.344924924925,648.0544144144144,648.763903903904,649.4733933933934,650.1828828828828,650.8923723723724,651.6018618618618,652.3113513513514,653.0208408408408,653.7303303303303,654.4398198198198,655.1493093093093,655.8587987987988,656.5682882882883,657.2777777777778,657.9872672672673,658.6967567567567,659.4062462462463,660.1157357357357,660.8252252252253,661.5347147147147,662.2442042042042,662.9536936936937,663.6631831831832,664.3726726726727,665.0821621621621,665.7916516516517,666.5011411411411,667.2106306306306,667.9201201201201,668.6296096096096,669.3390990990991,670.0485885885886,670.758078078078,671.4675675675676,672.177057057057,672.8865465465466,673.596036036036,674.3055255255256,675.015015015015,675.7245045045045,676.433993993994,677.1434834834835,677.852972972973,678.5624624624625,679.2719519519519,679.9814414414415,680.6909309309309,681.4004204204205,682.1099099099099,682.8193993993993,683.5288888888889,684.2383783783783,684.9478678678679,685.6573573573573,686.3668468468469,687.0763363363363,687.7858258258258,688.4953153153153,689.2048048048048,689.9142942942943,690.6237837837838,691.3332732732732,692.0427627627628,692.7522522522522,693.4617417417418,694.1712312312312,694.8807207207208,695.5902102102102,696.2996996996997,697.0091891891892,697.7186786786787,698.4281681681682,699.1376576576577,699.8471471471471,700.5566366366367,701.2661261261261,701.9756156156157,702.6851051051051,703.3945945945947,704.1040840840841,704.8135735735735,705.5230630630631,706.2325525525525,706.9420420420421,707.6515315315315,708.361021021021,709.0705105105105,709.78],"y":[-709.78,-709.0705105105105,-708.361021021021,-707.6515315315315,-706.9420420420421,-706.2325525525525,-705.5230630630631,-704.8135735735735,-704.1040840840841,-703.3945945945947,-702.6851051051051,-701.9756156156157,-701.2661261261261,-700.5566366366367,-699.8471471471471,-699.1376576576577,-698.4281681681682,-697.7186786786787,-697.0091891891892,-696.2996996996997,-695.5902102102102,-694.8807207207208,-694.1712312312312,-693.4617417417418,-692.7522522522522,-692.0427627627628,-691.3332732732732,-690.6237837837838,-689.9142942942943,-689.2048048048048,-688.4953153153153,-687.7858258258258,-687.0763363363363,-686.3668468468469,-685.6573573573573,-684.9478678678679,-684.2383783783783,-683.5288888888889,-682.8193993993993,-682.1099099099099,-681.4004204204205,-680.6909309309309,-679.9814414414415,-679.2719519519519,-678.5624624624625,-677.852972972973,-677.1434834834835,-676.433993993994,-675.7245045045045,-675.015015015015,-674.3055255255256,-673.596036036036,-672.8865465465466,-672.177057057057,-671.4675675675676,-670.758078078078,-670.0485885885886,-669.3390990990991,-668.6296096096096,-667.9201201201201,-667.2106306306306,-666.5011411411411,-665.7916516516517,-665.0821621621621,-664.3726726726727,-663.6631831831832,-662.9536936936937,-662.2442042042042,-661.5347147147147,-660.8252252252253,-660.1157357357357,-659.4062462462463,-658.6967567567567,-657.9872672672673,-657.2777777777778,-656.5682882882883,-655.8587987987988,-655.1493093093093,-654.4398198198198,-653.7303303303303,-653.0208408408408,-652.3113513513514,-651.6018618618618,-650.8923723723724,-650.1828828828828,-649.4733933933934,-648.763903903904,-648.0544144144144,-647.344924924925,-646.6354354354354,-645.925945945946,-645.2164564564565,-644.506966966967,-643.7974774774775,-643.087987987988,-642.3784984984985,-641.669009009009,-640.9595195195195,-640.2500300300301,-639.5405405405405,-638.8310510510511,-638.1215615615615,-637.4120720720721,-636.7025825825826,-635.9930930930931,-635.2836036036036,-634.5741141141141,-633.8646246246246,-633.1551351351351,-632.4456456456456,-631.7361561561562,-631.0266666666666,-630.3171771771772,-629.6076876876876,-628.8981981981982,-628.1887087087088,-627.4792192192192,-626.7697297297298,-626.0602402402402,-625.3507507507508,-624.6412612612612,-623.9317717717718,-623.2222822822823,-622.5127927927928,-621.8033033033033,-621.0938138138138,-620.3843243243243,-619.6748348348349,-618.9653453453453,-618.2558558558559,-617.5463663663663,-616.8368768768769,-616.1273873873874,-615.4178978978979,-614.7084084084084,-613.9989189189189,-613.2894294294294,-612.5799399399399,-611.8704504504504,-611.160960960961,-610.4514714714715,-609.741981981982,-609.0324924924925,-608.323003003003,-607.6135135135136,-606.904024024024,-606.1945345345346,-605.485045045045,-604.7755555555556,-604.066066066066,-603.3565765765766,-602.6470870870871,-601.9375975975976,-601.2281081081081,-600.5186186186186,-599.8091291291291,-599.0996396396397,-598.3901501501501,-597.6806606606607,-596.9711711711711,-596.2616816816817,-595.5521921921921,-594.8427027027027,-594.1332132132133,-593.4237237237237,-592.7142342342343,-592.0047447447447,-591.2952552552553,-590.5857657657658,-589.8762762762763,-589.1667867867868,-588.4572972972973,-587.7478078078078,-587.0383183183184,-586.3288288288288,-585.6193393393394,-584.9098498498498,-584.2003603603604,-583.4908708708708,-582.7813813813814,-582.0718918918919,-581.3624024024024,-580.6529129129129,-579.9434234234234,-579.2339339339339,-578.5244444444445,-577.8149549549549,-577.1054654654655,-576.395975975976,-575.6864864864865,-574.976996996997,-574.2675075075075,-573.5580180180181,-572.8485285285285,-572.1390390390391,-571.4295495495495,-570.7200600600601,-570.0105705705706,-569.3010810810811,-568.5915915915916,-567.8821021021021,-567.1726126126126,-566.4631231231231,-565.7536336336336,-565.0441441441442,-564.3346546546546,-563.6251651651652,-562.9156756756756,-562.2061861861862,-561.4966966966967,-560.7872072072072,-560.0777177177177,-559.3682282282282,-558.6587387387387,-557.9492492492493,-557.2397597597597,-556.5302702702703,-555.8207807807808,-555.1112912912913,-554.4018018018018,-553.6923123123123,-552.9828228228229,-552.2733333333333,-551.5638438438439,-550.8543543543543,-550.1448648648649,-549.4353753753754,-548.7258858858859,-548.0163963963964,-547.3069069069069,-546.5974174174174,-545.8879279279279,-545.1784384384384,-544.468948948949,-543.7594594594594,-543.04996996997,-542.3404804804804,-541.630990990991,-540.9215015015016,-540.212012012012,-539.5025225225226,-538.793033033033,-538.0835435435436,-537.374054054054,-536.6645645645646,-535.9550750750751,-535.2455855855856,-534.5360960960961,-533.8266066066066,-533.1171171171171,-532.4076276276277,-531.6981381381381,-530.9886486486487,-530.2791591591591,-529.5696696696697,-528.8601801801802,-528.1506906906907,-527.4412012012012,-526.7317117117117,-526.0222222222222,-525.3127327327327,-524.6032432432432,-523.8937537537538,-523.1842642642642,-522.4747747747748,-521.7652852852852,-521.0557957957958,-520.3463063063064,-519.6368168168168,-518.9273273273274,-518.2178378378378,-517.5083483483484,-516.7988588588588,-516.0893693693694,-515.3798798798799,-514.6703903903904,-513.9609009009009,-513.2514114114114,-512.5419219219219,-511.8324324324324,-511.1229429429429,-510.4134534534534,-509.703963963964,-508.9944744744745,-508.284984984985,-507.5754954954955,-506.866006006006,-506.1565165165165,-505.44702702702705,-504.73753753753755,-504.02804804804805,-503.31855855855855,-502.60906906906905,-501.89957957957955,-501.1900900900901,-500.4806006006006,-499.7711111111111,-499.0616216216216,-498.3521321321321,-497.64264264264267,-496.93315315315317,-496.2236636636637,-495.5141741741742,-494.8046846846847,-494.0951951951952,-493.38570570570573,-492.67621621621623,-491.96672672672673,-491.25723723723723,-490.54774774774774,-489.83825825825824,-489.1287687687688,-488.4192792792793,-487.7097897897898,-487.0003003003003,-486.2908108108108,-485.5813213213213,-484.87183183183186,-484.16234234234236,-483.45285285285286,-482.74336336336336,-482.03387387387386,-481.32438438438436,-480.6148948948949,-479.9054054054054,-479.1959159159159,-478.4864264264264,-477.7769369369369,-477.0674474474474,-476.357957957958,-475.6484684684685,-474.938978978979,-474.2294894894895,-473.52,-472.8105105105105,-472.10102102102104,-471.39153153153154,-470.68204204204204,-469.97255255255254,-469.26306306306304,-468.5535735735736,-467.8440840840841,-467.1345945945946,-466.4251051051051,-465.7156156156156,-465.0061261261261,-464.29663663663666,-463.58714714714716,-462.87765765765766,-462.16816816816817,-461.45867867867867,-460.74918918918917,-460.0396996996997,-459.3302102102102,-458.6207207207207,-457.9112312312312,-457.2017417417417,-456.49225225225223,-455.7827627627628,-455.0732732732733,-454.3637837837838,-453.6542942942943,-452.9448048048048,-452.2353153153153,-451.52582582582585,-450.81633633633635,-450.10684684684685,-449.39735735735735,-448.68786786786785,-447.97837837837835,-447.2688888888889,-446.5593993993994,-445.8499099099099,-445.1404204204204,-444.4309309309309,-443.7214414414414,-443.01195195195197,-442.3024624624625,-441.592972972973,-440.8834834834835,-440.173993993994,-439.46450450450453,-438.75501501501503,-438.04552552552553,-437.33603603603603,-436.62654654654654,-435.91705705705704,-435.2075675675676,-434.4980780780781,-433.7885885885886,-433.0790990990991,-432.3696096096096,-431.6601201201201,-430.95063063063066,-430.24114114114116,-429.53165165165166,-428.82216216216216,-428.11267267267266,-427.40318318318316,-426.6936936936937,-425.9842042042042,-425.2747147147147,-424.5652252252252,-423.8557357357357,-423.1462462462462,-422.4367567567568,-421.7272672672673,-421.0177777777778,-420.3082882882883,-419.5987987987988,-418.8893093093093,-418.17981981981984,-417.47033033033034,-416.76084084084084,-416.05135135135134,-415.34186186186184,-414.63237237237234,-413.9228828828829,-413.2133933933934,-412.5039039039039,-411.7944144144144,-411.0849249249249,-410.37543543543546,-409.66594594594596,-408.95645645645646,-408.24696696696697,-407.53747747747747,-406.82798798798797,-406.1184984984985,-405.409009009009,-404.6995195195195,-403.99003003003,-403.2805405405405,-402.57105105105103,-401.8615615615616,-401.1520720720721,-400.4425825825826,-399.7330930930931,-399.0236036036036,-398.3141141141141,-397.60462462462465,-396.89513513513515,-396.18564564564565,-395.47615615615615,-394.76666666666665,-394.05717717717715,-393.3476876876877,-392.6381981981982,-391.9287087087087,-391.2192192192192,-390.5097297297297,-389.8002402402402,-389.0907507507508,-388.3812612612613,-387.6717717717718,-386.9622822822823,-386.2527927927928,-385.5433033033033,-384.83381381381383,-384.12432432432433,-383.41483483483483,-382.70534534534534,-381.99585585585584,-381.2863663663664,-380.5768768768769,-379.8673873873874,-379.1578978978979,-378.4484084084084,-377.7389189189189,-377.02942942942946,-376.31993993993996,-375.61045045045046,-374.90096096096096,-374.19147147147146,-373.48198198198196,-372.7724924924925,-372.063003003003,-371.3535135135135,-370.644024024024,-369.9345345345345,-369.225045045045,-368.5155555555556,-367.8060660660661,-367.0965765765766,-366.3870870870871,-365.6775975975976,-364.9681081081081,-364.25861861861864,-363.54912912912914,-362.83963963963964,-362.13015015015014,-361.42066066066064,-360.71117117117115,-360.0016816816817,-359.2921921921922,-358.5827027027027,-357.8732132132132,-357.1637237237237,-356.4542342342342,-355.74474474474476,-355.03525525525527,-354.32576576576577,-353.61627627627627,-352.90678678678677,-352.1972972972973,-351.4878078078078,-350.7783183183183,-350.0688288288288,-349.35933933933933,-348.64984984984983,-347.9403603603604,-347.2308708708709,-346.5213813813814,-345.8118918918919,-345.1024024024024,-344.3929129129129,-343.68342342342345,-342.97393393393395,-342.26444444444445,-341.55495495495495,-340.84546546546545,-340.13597597597595,-339.4264864864865,-338.716996996997,-338.0075075075075,-337.298018018018,-336.5885285285285,-335.879039039039,-335.1695495495496,-334.4600600600601,-333.7505705705706,-333.0410810810811,-332.3315915915916,-331.6221021021021,-330.91261261261263,-330.20312312312313,-329.49363363363364,-328.78414414414414,-328.07465465465464,-327.36516516516514,-326.6556756756757,-325.9461861861862,-325.2366966966967,-324.5272072072072,-323.8177177177177,-323.10822822822826,-322.39873873873876,-321.68924924924926,-320.97975975975976,-320.27027027027026,-319.56078078078076,-318.8512912912913,-318.1418018018018,-317.4323123123123,-316.7228228228228,-316.0133333333333,-315.3038438438438,-314.5943543543544,-313.8848648648649,-313.1753753753754,-312.4658858858859,-311.7563963963964,-311.0469069069069,-310.33741741741744,-309.62792792792794,-308.91843843843844,-308.20894894894894,-307.49945945945944,-306.78996996996995,-306.0804804804805,-305.370990990991,-304.6615015015015,-303.952012012012,-303.2425225225225,-302.533033033033,-301.82354354354356,-301.11405405405407,-300.40456456456457,-299.69507507507507,-298.98558558558557,-298.27609609609607,-297.5666066066066,-296.8571171171171,-296.1476276276276,-295.43813813813813,-294.72864864864863,-294.0191591591592,-293.3096696696697,-292.6001801801802,-291.8906906906907,-291.1812012012012,-290.4717117117117,-289.76222222222225,-289.05273273273275,-288.34324324324325,-287.63375375375375,-286.92426426426425,-286.21477477477475,-285.5052852852853,-284.7957957957958,-284.0863063063063,-283.3768168168168,-282.6673273273273,-281.9578378378378,-281.2483483483484,-280.5388588588589,-279.8293693693694,-279.1198798798799,-278.4103903903904,-277.7009009009009,-276.99141141141143,-276.28192192192193,-275.57243243243244,-274.86294294294294,-274.15345345345344,-273.44396396396394,-272.7344744744745,-272.024984984985,-271.3154954954955,-270.606006006006,-269.8965165165165,-269.187027027027,-268.47753753753756,-267.76804804804806,-267.05855855855856,-266.34906906906906,-265.63957957957956,-264.9300900900901,-264.2206006006006,-263.5111111111111,-262.8016216216216,-262.0921321321321,-261.3826426426426,-260.6731531531532,-259.9636636636637,-259.2541741741742,-258.5446846846847,-257.8351951951952,-257.1257057057057,-256.41621621621624,-255.7067267267267,-254.99723723723724,-254.28774774774774,-253.57825825825824,-252.86876876876877,-252.15927927927927,-251.44978978978978,-250.7403003003003,-250.0308108108108,-249.32132132132134,-248.61183183183184,-247.90234234234234,-247.19285285285287,-246.48336336336337,-245.77387387387387,-245.0643843843844,-244.3548948948949,-243.6454054054054,-242.93591591591593,-242.22642642642643,-241.51693693693693,-240.80744744744746,-240.09795795795796,-239.38846846846846,-238.678978978979,-237.9694894894895,-237.26,-236.55051051051052,-235.84102102102102,-235.13153153153152,-234.42204204204205,-233.71255255255255,-233.00306306306305,-232.29357357357358,-231.58408408408408,-230.87459459459458,-230.1651051051051,-229.4556156156156,-228.74612612612611,-228.03663663663664,-227.32714714714714,-226.61765765765765,-225.90816816816817,-225.19867867867868,-224.48918918918918,-223.7796996996997,-223.0702102102102,-222.3607207207207,-221.65123123123124,-220.94174174174174,-220.23225225225227,-219.52276276276277,-218.81327327327327,-218.1037837837838,-217.3942942942943,-216.6848048048048,-215.97531531531533,-215.26582582582583,-214.55633633633633,-213.84684684684686,-213.13735735735736,-212.42786786786786,-211.7183783783784,-211.0088888888889,-210.2993993993994,-209.58990990990992,-208.88042042042042,-208.17093093093092,-207.46144144144145,-206.75195195195195,-206.04246246246245,-205.33297297297298,-204.62348348348348,-203.91399399399398,-203.2045045045045,-202.495015015015,-201.78552552552551,-201.07603603603604,-200.36654654654654,-199.65705705705705,-198.94756756756757,-198.23807807807808,-197.52858858858858,-196.8190990990991,-196.1096096096096,-195.4001201201201,-194.69063063063064,-193.98114114114114,-193.27165165165164,-192.56216216216217,-191.85267267267267,-191.1431831831832,-190.4336936936937,-189.7242042042042,-189.01471471471473,-188.30522522522523,-187.59573573573573,-186.88624624624626,-186.17675675675676,-185.46726726726726,-184.7577777777778,-184.0482882882883,-183.3387987987988,-182.62930930930932,-181.91981981981982,-181.21033033033032,-180.50084084084085,-179.79135135135135,-179.08186186186185,-178.37237237237238,-177.66288288288288,-176.95339339339338,-176.2439039039039,-175.5344144144144,-174.82492492492491,-174.11543543543544,-173.40594594594594,-172.69645645645645,-171.98696696696697,-171.27747747747748,-170.56798798798798,-169.8584984984985,-169.149009009009,-168.4395195195195,-167.73003003003004,-167.02054054054054,-166.31105105105104,-165.60156156156157,-164.89207207207207,-164.18258258258257,-163.4730930930931,-162.7636036036036,-162.05411411411413,-161.34462462462463,-160.63513513513513,-159.92564564564566,-159.21615615615616,-158.50666666666666,-157.7971771771772,-157.0876876876877,-156.3781981981982,-155.66870870870872,-154.95921921921922,-154.24972972972972,-153.54024024024025,-152.83075075075075,-152.12126126126125,-151.41177177177178,-150.70228228228228,-149.99279279279278,-149.2833033033033,-148.5738138138138,-147.86432432432431,-147.15483483483484,-146.44534534534534,-145.73585585585585,-145.02636636636637,-144.31687687687688,-143.60738738738738,-142.8978978978979,-142.1884084084084,-141.4789189189189,-140.76942942942944,-140.05993993993994,-139.35045045045044,-138.64096096096097,-137.93147147147147,-137.22198198198197,-136.5124924924925,-135.803003003003,-135.0935135135135,-134.38402402402403,-133.67453453453453,-132.96504504504506,-132.25555555555556,-131.54606606606606,-130.8365765765766,-130.1270870870871,-129.4175975975976,-128.70810810810812,-127.99861861861862,-127.28912912912912,-126.57963963963964,-125.87015015015015,-125.16066066066067,-124.45117117117117,-123.74168168168168,-123.0321921921922,-122.3227027027027,-121.61321321321321,-120.90372372372373,-120.19423423423423,-119.48474474474475,-118.77525525525526,-118.06576576576576,-117.35627627627628,-116.64678678678679,-115.93729729729729,-115.2278078078078,-114.51831831831832,-113.80882882882882,-113.09933933933934,-112.38984984984985,-111.68036036036035,-110.97087087087087,-110.26138138138138,-109.5518918918919,-108.8424024024024,-108.13291291291291,-107.42342342342343,-106.71393393393393,-106.00444444444445,-105.29495495495496,-104.58546546546546,-103.87597597597598,-103.16648648648649,-102.45699699699699,-101.7475075075075,-101.03801801801802,-100.32852852852852,-99.61903903903904,-98.90954954954955,-98.20006006006005,-97.49057057057057,-96.78108108108108,-96.0715915915916,-95.3621021021021,-94.65261261261261,-93.94312312312313,-93.23363363363363,-92.52414414414415,-91.81465465465466,-91.10516516516516,-90.39567567567568,-89.68618618618619,-88.97669669669669,-88.2672072072072,-87.55771771771772,-86.84822822822822,-86.13873873873874,-85.42924924924925,-84.71975975975975,-84.01027027027027,-83.30078078078078,-82.59129129129128,-81.8818018018018,-81.17231231231231,-80.46282282282283,-79.75333333333333,-79.04384384384385,-78.33435435435436,-77.62486486486486,-76.91537537537538,-76.20588588588589,-75.49639639639639,-74.7869069069069,-74.07741741741742,-73.36792792792792,-72.65843843843844,-71.94894894894895,-71.23945945945945,-70.52996996996997,-69.82048048048048,-69.11099099099098,-68.4015015015015,-67.69201201201201,-66.98252252252253,-66.27303303303303,-65.56354354354355,-64.85405405405406,-64.14456456456456,-63.435075075075076,-62.725585585585584,-62.0160960960961,-61.30660660660661,-60.597117117117115,-59.88762762762763,-59.17813813813814,-58.468648648648646,-57.75915915915916,-57.04966966966967,-56.34018018018018,-55.63069069069069,-54.9212012012012,-54.211711711711715,-53.50222222222222,-52.79273273273273,-52.083243243243246,-51.37375375375375,-50.66426426426426,-49.954774774774776,-49.245285285285284,-48.5357957957958,-47.82630630630631,-47.116816816816815,-46.40732732732733,-45.69783783783784,-44.988348348348346,-44.27885885885886,-43.56936936936937,-42.85987987987988,-42.15039039039039,-41.4409009009009,-40.731411411411415,-40.02192192192192,-39.31243243243243,-38.602942942942946,-37.89345345345345,-37.18396396396396,-36.474474474474476,-35.764984984984984,-35.05549549549549,-34.34600600600601,-33.636516516516515,-32.92702702702703,-32.21753753753754,-31.50804804804805,-30.798558558558558,-30.08906906906907,-29.37957957957958,-28.67009009009009,-27.9606006006006,-27.25111111111111,-26.541621621621623,-25.83213213213213,-25.122642642642642,-24.413153153153154,-23.703663663663665,-22.994174174174173,-22.284684684684684,-21.575195195195196,-20.865705705705707,-20.156216216216215,-19.446726726726727,-18.737237237237238,-18.027747747747746,-17.318258258258258,-16.60876876876877,-15.899279279279279,-15.18978978978979,-14.4803003003003,-13.770810810810811,-13.061321321321321,-12.351831831831833,-11.642342342342342,-10.932852852852854,-10.223363363363363,-9.513873873873873,-8.804384384384385,-8.094894894894894,-7.385405405405406,-6.675915915915916,-5.966426426426427,-5.2569369369369365,-4.547447447447447,-3.837957957957958,-3.1284684684684683,-2.418978978978979,-1.7094894894894894,-1.0]}

},{}],35:[function(require,module,exports){
module.exports={"expected":[0.7888379824345979,1.9512727287585516,1.0478480740760114,0.5321219161694628,0.7050788069986278,1.0400274294995675,0.1779040848975301,1.3471940520020333,0.8993965586112788,1.4302943529868188,1.283990438859745,1.7371545045516414,0.3702407032061448,1.2415089962280839,1.6198191534345965,0.5255107031741572,0.26916950920792726,1.5899282039412204,0.47797286802810524,1.2836534408946132,0.2681870493761888,0.6708163882529895,0.7377068457046738,0.31285273155177745,1.7786797202670082,0.07852483425522314,1.245329012358083,0.08447060535312773,0.012628757006270213,0.35055077137353474,0.5204185460183406,0.3436569479526355,0.762539224666578,0.9306324542206461,1.1019800339944361,1.3982048994428777,0.26044610692372966,1.5695621030904623,1.0635616632211924,0.20452754080032706,1.139261817644341,0.9801853596356085,0.9824859499702419,1.4443710733350887,1.0568404955459136,0.6193694136710105,0.41085900582496365,0.002732380627313887,0.3388279068598198,0.4235643055023084,1.4654808286608558,0.9566899590743614,0.31187851112516063,0.0936152938749841,0.5581971157528168,0.6470638802615901,1.9375075501439216,0.41653387060356717,1.1333486386190168,0.3120111207699616,0.12468255476763944,1.9425951752622763,1.8626315777862166,0.9125440251670996,0.057936756160340414,1.4668265205744533,0.20633764873918473,0.10404439371924185,1.133636522665873,1.7797184543608036,0.49864518198314767,0.94172611467506,0.44998838050710716,1.0065014780098076,1.5065831584314795,1.641793932103334,0.13130417206538578,0.5203651891983648,1.8563253600160865,1.717939204625033,1.8650161212360301,0.09939841451524915,0.9555043439986437,0.3093640217842472,0.8308798758415583,1.2422851273742135,0.7252724044759258,0.0720880709392899,1.5264407107906133,1.1566339782111177,1.9234139640761998,0.5459308045921505,1.5303419210279376,0.17876073888334287,0.5000847998014476,0.8353397855808257,1.5138055432272954,1.3771256698332743,0.007510386644211003,0.21026789197117732,0.38292990045857583,0.2191140989699386,0.14738472870005498,1.0654933742902009,1.747681497444181,1.080952021382207,1.4256637745165994,0.5130315497913827,0.15222524263280113,0.10254001841002959,0.25245443172894455,1.4073734921295333,0.954650583617204,1.4038008164569107,0.715977726799659,1.9858090343619215,0.9217426405197637,1.1985580390448418,1.462419403958616,1.1450417689824661,1.0114887552082312,1.9691555299764645,0.09380621156168961,0.7173773686339822,0.8422280626194437,1.7160458572626835,1.2990189167852446,0.44955642487504427,1.860915305955036,0.5817589402053914,1.1305105540376603,0.9726634781265019,0.5146756379468302,0.40389808200870575,1.4154911063970153,1.4402841416953802,0.90093345171675,1.7506585495664868,1.317953621090209,1.723345938656017,1.2748052525934648,0.7678379261711351,1.1662692562737362,0.4558352624298301,1.2037255298399026,1.807129142493456,0.2860570309263252,0.345010151853945,0.14818420040308827,1.3685936609417821,1.6113910657322674,0.44233259540708036,1.5681970849175424,0.14540690545450904,1.3648379595633142,1.4151401364196543,0.6070852544823093,1.2892768541348343,1.531972170481153,1.9317269743517744,0.25341125548152277,0.4003505614254447,0.29214239942016823,0.8808033399854367,1.5069592269093552,0.11569306854913877,0.012851761847047864,1.4115374664845017,0.19007511587419965,1.4084938857008615,0.2506305146493991,0.3272552815138248,0.35074500739449493,0.4467476237755041,1.766110225379264,1.4507459126517206,0.9488702273366421,0.7066038861868376,1.0369515112852936,1.0716058396732018,1.504015100322349,0.5485357333631943,0.7992673389218159,1.8310610589350291,1.0183648054397525,0.42217824439936097,0.8289812460881809,0.30600589527118055,0.1459331187967224,1.4791243066979431,0.015810646338579804,1.9526858294853184,1.3586862343881747,1.3606031552995677,0.9774119774757253,0.3525753811232642,1.570557880478315,0.6543332505417065,1.912391849066386,0.4976930610313534,0.21778691141432605,0.10543815367597759,1.5276154913597584,1.1273888882775078,0.014917339848595883,1.7803863326753868,0.7127966465871229,1.4486931741013724,1.3310474998953878,0.8268898172322973,0.5476330699536813,0.36488496443646623,1.895275789702392,1.2711523632938204,0.22459301928897213,1.5990134686044042,0.7148117501485857,0.5081033117732613,0.536663131349239,0.0170029564200351,1.3410260649445787,1.5050580991654183,0.22319002228064339,1.598265005352513,0.7568194683415584,0.13121407252428033,1.9879794784424822,1.8051688917187916,1.3232647454138813,0.11042395921452483,1.2750844137026245,1.5939305560081305,1.6168914610892073,1.6098300731031345,1.6930808046331416,0.30512936289253134,0.831823426820188,0.22211827609521229,1.3158859173772999,1.5187596337403255,1.7301743620352499,1.6492439665700738,0.14798682616457495,1.704661611581164,1.428167572702417,1.7374301533575272,0.10751252141213595,1.9281469632453374,1.1852789948945333,0.023983133349257637,1.116148945772711,1.723930275444705,1.4916887798327736,0.9282747797358369,1.2788790818174454,1.0259846282124037,1.8409703562598614,1.4425724837570204,1.9308563792309084,0.990146709310919,1.0344186101305666,0.17987509875337324,1.2331394506374027,1.1274759019424652,0.36176444489681153,0.11041706810061767,1.1822515515829832,1.8549716898458357,1.6160872159717377,1.4167766667620225,1.939876397950227,1.935733989063051,1.1640747252270132,1.688423503308447,1.819538301539247,1.1858569824119498,1.2085836735182411,0.4705765827035728,0.7618514061521331,0.35258863074610164,0.8814683535947788,0.6384032184003969,0.5916213222546292,0.4813142107632516,1.2060347305830226,0.8514146688156324,0.02317735230757418,1.9132349698361306,1.4124433020509262,1.1052751815980912,1.7550775932860294,1.9318995062218587,0.05563811119131051,1.2940770870986449,1.0182433100759405,0.1603777145094143,1.476880665968494,1.3127032681853583,1.80246310839153,1.8008424836862862,0.47916886209940457,1.4263748206331075,1.1764921309393352,0.17024235442398628,0.24413964042204436,1.228131860664265,1.2355416138966457,0.4237534097090802,1.2227221493200626,0.13877162616238256,1.2456052554862318,0.4991172561974457,1.2670466818636463,0.39721351447380365,1.60027876579117,0.7327580798350821,0.03662279996124451,0.9164553060417479,1.9790641888519223,1.0235993648512856,0.5755717762662292,1.3431328266351923,0.05877465752950549,1.3301883174848566,1.050810686453568,1.1374670750654716,1.702538385722666,1.704346328514067,1.938043012007145,1.3903151584176545,1.792056224360878,1.691215748251342,0.6100901657724876,0.4127330545728616,1.422110472445738,1.1132649873116542,1.3539611961446114,1.1284243476958613,0.4473713304700954,1.167489293697444,1.5189420869913988,1.3710421595369688,1.8947426821763353,1.4832621785239022,1.1082757806458396,0.06587219895113398,1.9283728576916488,1.105895720494135,1.3717661049408303,0.2921101696116469,0.7066873387390427,1.9215736439519042,0.7817398995550774,0.9216596063446513,1.705176569848609,0.683328108319868,1.639518621611091,1.364580776505415,0.2894968401626297,1.8535960646229566,1.3320000624922579,0.47060585683107886,1.6051048896396243,1.8449609483810594,0.4068041253787678,0.4436612363530752,1.0485811038077277,0.823005087931094,0.7518635574082181,1.760610855298889,1.5977583627554426,0.819460381095788,1.8550759235532877,0.6229945271118129,1.200181097766218,0.08758736430248094,0.15034157295209868,1.6606936135761023,0.30214312376459346,0.23409947400001538,0.41711590423999095,1.6174401234186886,1.7823187500723032,0.5287846067785728,1.5291955614064294,1.883313691883125,1.1554662756556848,0.04588705145890998,1.703901511631165,1.8374965175743032,1.0779221476488894,1.8192154269314291,0.12727114511540938,1.022442166226755,1.7658629450564143,0.011871828198082692,1.0156920331884698,0.9779489720960394,1.6645187454921384,1.5640467745836162,1.5087494154452559,0.2732975471506845,0.4870769710013043,1.185531443742127,0.6196410890102972,1.266026960072599,0.9463042847254782,1.861401319558915,1.150852930978254,0.977670178243176,0.14641973143560746,0.4141222003357063,0.681464318597725,1.9270055663059886,1.406099417699642,1.7216850480274337,0.3444057836458242,1.1008204955103076,0.915360684747989,0.013360660717455798,0.8276247265219804,0.7042479639023004,1.660379494641067,1.953042098155497,1.7005004774253119,0.12087572299454158,1.9029781485109702,1.3330907057446737,0.19204308669030215,1.5008227271035801,1.87985213576209,1.553640407217164,1.5245643438576306,1.220786770140687,0.19126130471918318,0.3122053626970527,1.7726024217060252,1.2411378920808211,1.974252833449153,1.552477445013627,0.5705792954147169,0.6846808770758821,0.09004697290504832,0.8312881240441384,1.721751961548094,0.2393376704850787,1.6323938643973763,1.7144856416259942,1.0847209689696313,0.14849636990600706,1.6989850369922932,0.5477936676654633,0.09301714845723066,1.340986776436025,1.7430264962187874,1.610333849747599,0.750849401455556,1.594349268207896,0.37118244464252426,1.9696057369758948,1.825015122097307,0.06511763430047439,0.24541763842565703,1.4623611981709523,1.0909856047465663,0.502841379071763,0.0768068837171891,0.5055628295286938,0.3346316553096702,0.486467983579701,1.2088209374301782,0.35708480338053034,1.4583470737782855,1.1356589089394524,1.0371913180883028,0.06579823279410249,0.37998865340421334,1.721552598497158,0.5961201092338948,0.6228168919892881,1.5579611387830024,0.11963725932367601,0.8332721009102354,0.7876953698818612,1.9883643685680397,0.7544245414190838,1.5589534483329135,1.1581190867902094,1.197402327684669,1.7888505886146844,1.3499612829744219,0.6911840896012982,0.33582585262759423,1.9969275214622229,1.5440934098541472,0.44712056617871837,1.4666412969694695,0.768076921360339,0.680799716958209,1.4162786662000975,1.4905505239292856,1.740993946619189,0.4424092702629893,1.2155922683424247,0.24519866136212323,0.9960164496895628,1.4320427879137991,1.621587650989317,0.4354905711312407,0.39756162890317837,0.17009889290576255,1.3646959222080737,0.3624702714492175,0.5267228464443058,0.5943788534776552,0.3152746499825017,0.09322946731480206,0.7802173201769557,0.9158288129767836,1.0283741911004018,1.8652986483241873,1.7162317210091118,1.074351926006604,0.8464896628764524,0.4883633470596721,0.3032749135450064,0.8298017543589726,0.8820363427139216,1.3531791569906606,1.3812769844830919,0.4495201767971025,1.731117883938211,0.7194801315697182,1.4702920206295003,1.242696432031173,0.6526765799545179,1.664028590254459,0.511275571367056,0.8992919661579881,0.03331070318153378,0.8535016462355346,0.4539347203603604,1.8319107484698247,1.049683774052973,1.5902372113634216,1.426103793161398,0.9285072515947569,0.11571255716623438,0.039520033562993134,0.22682255411115607,1.3512193273047979,1.73294809127622,1.971927181561685,1.1085489286614159,1.5523251382858452,0.9701524918910492,1.4001993868451728,1.5303058336642938,0.9179100814662112,0.749622169942401,0.1649245837866876,0.9459301770312213,0.4535651316784877,1.2803078015996046,0.18874268894265278,0.9866011409981919,1.8772369954403365,0.483767795600546,1.1626353562738179,1.3404952245509265,1.2059314444203537,1.9957990657739317,1.169788420920387,1.10634554307161,1.356488642801752,1.0738448973009196,1.7775745473771587,0.8451046291909793,1.86167765761192,0.8424176640521528,1.4304586830209323,0.49288343187347383,1.4228751677381106,0.4559941228038506,0.36340540944725236,0.9403170411458676,1.8489280657020473,1.8147952438622676,0.13180748470581483,0.5889175131646206,0.2819949990139391,1.248658102067421,1.5813520825005838,1.3458065861447703,1.521301466808332,0.0944147111350671,1.4741725402929882,0.5153650166729047,0.7242984129828254,0.1292365914114883,0.29382056984850424,0.8438042966744226,0.3001322822513289,1.2982265601265472,0.2942947000180518,1.0421797891847084,1.1126148606243556,1.7432038773839784,1.8013046996205315,0.2893310663478304,0.41289279090687586,0.726104864777195,1.7926300556355153,1.6163869501511163,1.0892386649101493,1.9928256481134445,0.24241211321131195,0.7968698792461166,0.34741715729692224,0.5159256981218268,0.26739310234360775,1.2843019873558936,1.2049963626332085,0.5484627280227719,1.7335794779794682,0.09898681445074871,0.7635279304372425,0.14432900198119972,0.8713690016094802,0.5748958912682748,0.7465594152924964,0.3688688727525004,1.5880618665934378,1.522274467598647,0.3058811964150731,0.032853286998130955,0.2935154051590677,1.2320416718904024,1.0597914815382434,1.8471882853078674,0.9724827491732079,0.5441011368932199,0.49570171315021727,1.7286382230419175,0.7632467092350664,0.08695261099583143,0.40583832113112595,1.8251654827225787,0.011603697704882707,0.998153964102492,0.46014366965970094,0.4661938508525424,1.0064193415906524,1.8669105634960057,1.9015376178972754,1.8648847014969094,0.21307061707054842,0.3280786726348477,0.09586582999368308,0.05505438075024687,1.814582308435363,0.5229177016426793,1.1194131362512962,1.8355005910421045,0.6907475485166455,0.05091307767142556,1.333957975253555,1.916190248524809,0.016882788166602537,1.5266738497621746,0.2271530304472364,0.3139829564553677,1.254296680028063,0.9766370014391595,1.1696319531662958,0.6824662209087374,0.8069609761424186,0.21677913078447797,0.8420626670179352,0.1379801080417321,1.1756029413019382,1.1487091991366611,1.9710881815489607,0.553074789189928,1.1538581005940183,0.9353298615953031,1.5344032531883676,1.4099853888751976,1.446656514462829,0.5032342383302153,1.7898986315663967,1.037186583323153,0.853866215922043,1.7079967701163805,0.8330812445269721,0.9275460138779019,0.928227932674478,0.6321761087251044,1.0671411092668062,1.9857711841252337,0.2949432539815313,0.8574798498372499,0.03143259691831235,1.191097748275083,1.4964505940694137,1.7122025198882884,1.4824005788035128,1.301356763051654,0.2220264015284835,0.260315206721784,1.772059663114914,1.8081760714405106,0.26205347073119123,1.8953869580748695,1.357242642587127,0.9695548128691683,0.09807686099827218,1.9624210717985044,1.5579326965161768,0.5400871116865609,0.5358288847988566,0.4362420776015174,1.0097315158117952,1.3634065479024904,0.33551422849643303,1.252139209207521,0.32439070465582753,1.40145051075265,1.6752098824283166,0.7900050610036575,1.562631681092373,0.5602513558626441,1.7021304095682288,1.6440145756121942,1.9175547733141525,1.7499610008383366,1.6360190620160964,1.282621481351325,1.0104532283067873,0.5555146786160515,0.12383092402748523,0.8014127278515316,0.3860031270657401,1.383085637024996,1.6536814839115643,0.043277068393071265,1.8221205591055032,0.5582812235994674,1.503227130411777,0.7714438310674122,0.6394698183834445,1.0548398972351059,0.9258804830154265,1.2648320378592024,1.3789769729254504,0.6915571763182151,0.7332059435748384,1.5575838120773091,1.877861733216902,0.7274873948431424,1.8029089994693712,1.1589081388602793,0.3715498095954514,1.8335650317184125,1.8502653043930557,0.47454600128858937,1.836214408018253,0.911402829811964,1.4344060263909235,0.8615050684228437,1.9768762896122374,0.14442799829627173,0.3579828169701108,1.2568018444475844,0.687756116394276,1.913286248591933,1.0005540138509452,0.18440601721537106,0.27868168465874965,1.364944962517075,0.35378458195475787,0.33421430374638417,1.099898977074688,0.06735372888475989,1.618877895314484,1.832155917923533,1.46683001287673,0.5969842842573826,0.909177061602797,0.28149539071683827,0.5987739135548815,0.511198171798521,1.0047259296126863,0.5974733936136242,0.304553103583352,1.378395812969988,0.6063687429414842,0.558363900132229,1.0870886566834561,1.9840465236665494,0.41051489378239564,1.1814850892592739,0.6855955556144404,1.3546921834747516,0.15833641441246862,0.40913632410700723,1.8602389351381041,0.058806430673035114,0.8596938859934002,0.1659602770114068,0.8561607867058619,0.9676826903356371,0.517706052778755,0.48858219614133086,0.5691687102230254,0.16108269851151283,0.8005656440282051,0.7504467526904258,1.8259745418719173,0.24263990654311482,1.746586410642032,0.41205650115048176,1.9888652582987612,1.7573070433631313,0.17200213441273873,0.5563658781166617,1.0609835482365895,1.4664578405573532,1.2425280056966355,0.9490658616068971,1.2385733510009498,1.7237345136860214,1.7745722102186625,0.7820619418588018,0.12507151789014664,0.81463068519034,0.9482207555304752,0.5335692852472871,1.388488305369023,1.4197577303846616,1.7504969757053597,0.14186294584783957,0.04716937694291066,1.6422412945887608,1.5748642822167105,1.0198370639378436,0.489986593641018,0.6509373420480318,0.31856504452431234,0.8130116292271817,1.8043644955524447,1.6032742373402253,0.8468014011378724,0.15473881088834063,1.163863984660249,0.6753883283810727,0.2912483302347177,0.2580153701433682,1.982798898194144,0.8925213257682052,0.19871493662541623,0.43390750647082704,0.601881280551984,0.43046011725363736,1.547051212989257,0.9798154827014682,1.147319452188145,1.0834225301810645,1.113059160193075,0.48433632567540585,0.6920543883344962,1.9901130328978087,0.23880055219994192,0.44682956522542233,0.5429612280493875,1.88312559022234,0.8494404728290149,0.380269251051491,1.9006894758096136,1.1649601055662349,0.512630240908735,1.002312502980602,0.16640623416761727,0.04968185590680399,0.01537979161191201,1.3481867620012762,0.7648405906935406,0.05070975973712208,1.0606084146094092,0.7312231297105816,0.8780784123219129,0.749581465250076,0.5221014910709587,0.33160861294594146,0.7430248385932168,1.6624970492282127,1.55397334347817,0.22961050493323626,1.9056452086112339,0.7360518213431203,1.8564850900398093,0.24494080848382427,0.11887201068426562,0.0068635169639749034,0.16083388189412112,0.8981290862665616,1.7910610823819062,0.3532993755473907,0.015768219154609894,1.7426802095651,1.9647884395490678,0.10088124361955375,1.0219089118983176,0.1977260079316214,0.6616300382362018,0.1165294516718465,0.9323990623274425,0.20157547856479377,1.5146161441327448,1.512080615530583,1.028106400205802,0.8512650548042092,0.9611140941356994,0.6413280523942407,1.2597390269194577,0.020007883503417322,1.5976374695864988,1.4620730887614548,1.720174353739163,1.8918637618805445,0.6838335240405051,1.134355476945841,1.0513456146867877,0.6217200995860016,0.5338290812638259,1.605182340954114,1.2974955790239098,0.3079959512660561,0.24973772721506665,0.21286360384497088,1.5648272681646458,0.4825390377048523,0.8578108570780616,0.1813593937118323,0.3309936328585288,1.0699793443950243,1.1641515959737614,0.45638057846146507,0.38980606333335516,1.1737709690085478,1.235173501229115,0.5077306533777947,1.306666878012441,0.9118158564111668,1.5703649742036767,1.1340146465353265,1.7606405768772362,0.5710491539320559,1.3132557498749189,1.020219689404166,1.2339655416155841,1.3730251384168164,1.872288993297692,0.37341585490525764,1.5011821905826115,1.040450558306932,0.11739226871355808,1.9511728514798146,1.1240918073511819,1.4502089539872467,1.5095503853730023,0.05253887744170989,0.5934181937693526,0.7832695616580858,1.4370403145570227,0.7642415422131891,1.6569396384316613,1.5054242695760574,0.4393357814576727,1.6912635693510027,1.2408216311287592,0.8480762577696386,1.567089189761599,1.039953065971673,1.554976783481426,1.1233074487373533,0.47480026510581996,1.1928777685181156,0.5509401678413247,1.3693669840653162,1.6149063381424071,0.8286192523867192,1.9696588937838015,1.2727827551732935,1.1614842722782672,1.150569205887336,1.5462214221999606,1.2872792482842645,0.984006222252236,1.6021807643974897,0.17579956795451823,1.5135568889131499,1.9264357740299318,0.9209363814862699,0.27393976486376037,1.0232296408814863,0.40456567637755986,1.3013342912810126,1.817886981650673,1.7875046114318498,1.1304847526774437,1.139404453603209,0.9406653734662658,0.3796807490471198,0.8540514461007666,0.3985233860506252,1.2599284865244145,0.22395211173075863,0.5300895544924925,0.7281483534084617,0.37477916828842245,1.9571605162689096,0.020211495631859148,1.5957018590372347,0.07893956512994676,0.3433758621320038,1.0157912281181354,1.1154908424254435,0.6007315235998493,0.6423651078728182,0.8948351659165791,0.8932570206032451,1.0627593047817026,1.5163818949512244,1.6199298631220402,0.7940402025993897,1.097426451846371,1.1701317430612128,0.9521150941741705,1.6155282444905783,1.213442739949684,1.08071359757994,0.24266719521375474,1.2309178198864035,1.5787840969083997,0.5880199158839152,1.775991008486901,1.8204095374006055,1.374449771395474,1.9200885487697956,1.5847317554948497,0.1028235021774727,1.1684810674096382,0.8703308409028065,1.4217943727175435,0.5002368172019241,0.9358751603155919,0.35885333621747295,1.1109239320513824,1.5793346997103326,1.8348984673754365,0.8643808221955165,0.9225718106305656,0.2236736737269036,0.7628194878974772,1.821190729415007,1.2342019973600578,0.6916487170057922,0.7522467228340627,1.1021084625307922,1.414734107417733,1.4224921262916979,0.6284814299945533,1.4902241459492316,1.5290149802284305,1.176066906403602,1.7648067340650968,1.7443367202248554,0.668261552066226,1.9842765086743672,0.5513016609178313,0.6604827065011306,0.38863527683846366,0.688015210984056,1.1100566353756744,1.7839593115364725,0.005348608610653498,1.9142478856957288,1.3850977836480747,0.3822966189036745,0.778751218463071,0.11193966239354979,1.7952210694359687,1.4289122537967411,1.8001895116759128,0.3041670410890442,1.6401031095124754,1.4393426371863698,1.36365134601612,1.986030442270284,1.642482195601757,0.6358000291004152,1.0173553291871973,1.7059197761659644,0.6113166812400499,1.6696199081956147,0.31618768900916283,1.9790476317014356,0.43967891621075694,0.9028642499250815,0.35695241130370753,0.45990475206756515,1.646504205759393,1.4823554357229727,0.38456962929945965,1.166212635669061,1.374292176446893,0.25947797054948835,1.5700347813680997,0.23503985184615003,0.2934529412780249,1.635675357809979,1.6294384389929726,0.06598752763998429,0.34662372909766614,1.4907368355252923,0.44118634337356777,0.009120375750717707,1.9588244254753713,1.9465928185803418,1.7683753434783387,0.13398852659922894,1.884439764542307,0.9747116033617014,1.7028973525800482,0.9992910366210261,1.992392623786806,1.8343715906259603,1.3636137436472664,0.36213192907610653,0.7284719109246943,1.4297869171075415,1.9914319221984478,0.18120386715324352,1.5595572017783994,1.0673710794557312,0.5632830306384601,0.08256122285547106,0.9531248280531855,0.06423029412775506,0.9429954554839336,0.8695890282840617,1.4111911902431598,0.058862665083771214,1.7129878047778284,1.0891893330366669,0.4200952816025508,0.17481580619988027,0.23657362180478836,0.8901209812290216,1.975613400038568,0.13124375596520996,1.938880326907303,1.8031730321515897,1.8711086291446712,1.4232404117143362,0.808890450607087,0.3819986561671187,1.8281657783924128,1.0994350458831537,0.9901609664377126,0.6479451714898741,0.1790897460240184,0.6306861687322576,1.3646684488796927,1.9105863749471685,1.9191227281074583,0.0571225726326719,0.7991259842832684,1.5480378423657277,1.8476483388136442,0.8648279373625142,1.7248525849319163,1.0125265200030218,1.2773144388621267,0.3613657472835611,1.9980602801665672,0.12650125510930696,1.9067495940552115,1.6523583627815481,1.7690968521960975,0.2526813022081336,1.657156381726221,0.9485972476929252,0.9092548857443964,0.16497127791195793,0.54914730595346,0.6512283023568282,1.032704030590181,0.6517606660174992,0.7927899661008748,1.3044479683345265,1.7101689793017587,0.5445697950616004,1.9224274707966083,0.35557145917086225,1.3055661287695344,1.2184225448731871,1.0850215649538473,0.3233337715735144,1.1607389646783173,0.47378112292999497,0.977741006206022,1.2973724357409298,0.0034442828565843363,0.815244235852441,1.5726898629752577,1.7090348443341792,1.1593971900182731,1.061816283965883,0.7011826306486783,0.2700238908572547,1.2611378554722152,0.774103077211522,1.9735289241210754,1.1402775164568653,0.07671588497410425,1.1980042496081889,1.5168744877348492,1.0939330389433877,0.5961944955673921,0.1631718437808537,1.0927437919727414,1.0565399102207795,0.9328422168664973,0.334728856997646,0.4526770329717802,1.46326293112342,1.6195246007905,0.2535588679424342,1.1504288161125475,1.7301493377335047,1.5915374957405948,0.3192310460216269,0.24541436521191118,1.2811073772437345,0.5122939274247041,1.8310322012263445,0.5213101137565435,1.317396379285342,1.1291739201711024,1.6032950395107686,0.6568458899237596,1.9339893874313696,0.5855713589679739,0.8417624214327424,0.14449565766032932,0.9346880421282968,1.0580296134943257,0.014554949191806879,1.5142262676325795,1.7900924147339021,1.4439417463588309,1.0431330009488955,0.7078952805948063,0.2690899745736693,1.3165424112150887,0.07805352064537313,1.9235127782333112,0.21071297326298957,0.24911540453511044,0.964899378220032,0.5160505906934432,1.0146392745599402,1.6881318883748184,0.6799150124218408,1.3551021866702158,0.8654529554141434,1.2199275215319558,1.359559956951291,1.5416604438902024,0.009550453783814916,0.1429944175652246,0.694016377657168,0.3940013442715085,1.720259812623628,1.2458186647563245,0.5356154714879915,0.2703571882125559,1.7256673449760418,1.599836350199971,0.8987064613316771,1.1116788363043437,1.9187096999644084,0.6584934053231319,1.7756039546188842,0.3513564803140834,1.40093982447921,0.7865810263585452,1.1691488163584463,1.2046181542054648,0.860064144714293,0.5469424274285248,1.0053017655740633,1.4356159010955032,0.675088047279818,1.2308669281353652,1.468627786767818,1.1481102966871792,1.3215121608302274,1.6387325686680547,1.4666534258330832,1.2566421313378622,0.11621830525645739,0.47730907784444565,0.9912245997701811,0.2168432019390062,1.1461934377145566,1.2495135385435936,1.503736896016456,0.22869675281628654,1.2237061786911978,1.5973567032770124,1.3211362833317501,1.096190108319639,1.6636172061449424,0.20587763174693732,1.6117359522561883,1.084800159879134,0.8229131205055292,1.795434676734389,1.8296358815119957,1.1928141247361537,0.6629654998664931,0.13155101388739612,1.8999268294816867,1.023433196622565,0.8159191876438173,1.2755916687549047,1.3032793979269948,0.026571053633373726,1.246373343451072,1.8421852057091752,0.20004527476419562,1.3995521012071879,1.8509974690310727,0.847293835827613,1.5420591180163428,1.4977277151448705,1.446699086422785,0.5777396820069381,1.1384818817098759,0.9673932881344568,0.5851780788586471,1.0690904115681559,1.0112295397884674,0.8885125591934075,0.5863609926121628,0.14151432471808573,0.8467266862742219,0.7292317398618705,1.817819918545973,1.7075125816823167,1.687621446804821,0.46496697994850467,1.9932816906666382,1.112602900142741,0.6270945906589294,0.34169054931195736,0.3463602427975718,1.8088850322141832,0.6772052577764769,1.0792079813117506,1.0353695095396032,1.984423726431728,1.1535590324013605,1.8598348211231575,0.07700040946599321,1.934539674593714,1.143666810465332,1.7302934280090652,0.21586214549225474,0.3121397830090796,0.4220630846487511,1.7701493981808967,1.6243440390394568,0.653747575320885,0.9041427739293358,1.9546440997044567,0.928546449679221,0.22220911328973872,1.898654588256468,1.9070723488602752,1.1984036818004113,0.31863858250608695,0.05510098751738237,0.3467527984951543,1.444590260316603,0.05112909790803202,1.4922941273667896,1.121222125664214,1.005240303296768,0.40881728530540135,1.6046777756977548,0.4165854312684028,1.0090342110606652,0.5695828882475051,0.7223209715886287,1.6614973512961184,1.251806609217045,0.16671273556766902,0.9493172194666348,0.40431758880549373,1.436310228818406,0.326564754224006,1.5355577181419797,0.2776227669945578,1.9667170977337984,0.6712895099018739,1.9749501114785257,0.4412733557161626,1.804757799803536,0.4330789121252772,1.8707287781869482,1.3572119050438105,1.7805030397187898,1.972501724523615,0.9617439603006275,1.3814987123018456,0.03996937088598533,1.14557944782939,0.0414950032766773,0.7767646454305386,0.4516596349013804,0.15593091873886697,0.19626978137870973,0.2418272620511263,1.3536706737069228,0.14251396506606623,1.7179549112842107,1.6524894127092271,0.9348041064399266,1.5288754143093124,0.8731812224098104,0.5043519595522598,1.2381681079035405,0.6149101892396293,0.9404999531618327,1.2301550474472935,1.1868265290010331,1.1525351566328104,1.8958127276794523,0.19686879118213685,0.37978880191045183,1.716141826453557,0.2248452437521068,0.8446358110769928,1.6041792168761155,0.24833979043512816,0.46997292527187084,0.19438596468800534,1.0588810145893277,0.5809892968182537,1.170482397488501,1.5481961056202913,0.3102113370057002,1.5481643713633693,0.5417201650043343,0.4723531955972116,0.35832200088982413,1.7466211645867649,0.9189714561946621,1.4253684079770732,0.6407107257202231,0.5875411741344335,0.04773399201295165,1.6409511214025736,0.6952074855144094,1.521689091878959,0.10749177097806124,1.9827623482612498,0.8593458809334323,1.9733737185292861,0.035108632911793836,1.9331698353427849,0.44478804001554684,1.733945938594804,0.3840068909830962,1.173545082108178,0.5985203879452422,0.19002957152897268,0.057991149193069844,1.703456059159724,1.201689314188074,1.113424915811607,1.8653305251929762,0.17621812884135296,1.6653890965371123,1.7440156693625064,0.9978234562157016,0.06344766865278745,1.8590834532511444,0.6757724775773108,1.5956887523200405,1.4543537786954566,1.3353578593642477,1.4090151528980281,1.991813562910802,1.6265693939702617,1.1600914542431582,0.65880302984069,1.2483496061047528,0.121480412050699,1.4380150506799656,0.7700064084094175,0.8652496188981427,1.6336264115294883,1.443597999396555,0.12427515420831795,0.19902302370340738,1.5871748224856312,1.8340768215691876,0.5394022326378332,1.5067810989140595,0.512116627976202,1.0382080449835454,1.07386009651689,1.1563678062768867,1.9121969306826616,0.8347065102237244,0.1040295632605203,1.04014104914613,1.983235049592228,0.6023536734929261,0.20038023400565186,0.38456556678291365,1.6270708605555324,1.8912217768221524,0.9056403754509266,0.3124280199051759,1.1537718944890571,1.923077637139803,0.50727512441101,1.307157335018868,1.743009569511488,1.769922514286811,1.239989172680652,1.8329086181900804,1.9922424917980086,0.1556936253613758,0.5411629170405038,1.1057948305515088,1.8141294563869093,1.6068972982722505,1.5981285045857934,0.9256783312196728,0.9539210152258492,0.7992499500561835,1.964487262718938,1.4116265420448737,0.34024717653523506,1.4573281846575803,0.7060996228774389,1.9030917975601245,1.0646165913674388,0.42905276302877626,1.8788595610608116,0.3792574851725091,1.9695683569422493,0.7612335659831841,1.5133057590127486,1.4683970455194522,1.6663479792010896,1.1540891694652613,0.4029586353636369,1.05673453991773,1.635320294470107,0.3185005719778682,0.0698169417382144,0.7362852386771599,1.7264732717956432,1.1754041441915621,0.6096986992046055,1.7214943257370128,1.1000902002742725,1.0764294975016149,1.4654101195006306,0.7515868664893184,1.7180209445562653,1.1681631012583147,0.18405692933306403,0.31007393600266375,0.8333941470086322,0.3062042197377282,1.461659644876541,1.1883008457726834,1.350894650574473,0.7425287457784748,1.7538040367897958,0.6692612656475757,1.1911752787133918,1.3158450365128729,0.931981231174055,1.4221218837235297,0.8688797024493959,1.434813214701686,0.6379796891787982,0.326855614592541,1.3676224285947123,0.7937530744501814,0.5102883085819295,0.18416885271658884,1.6037371291614375,1.0127092978912362,0.5894156298913781,0.13978352183187723,0.6218267418301199,1.969465506376401,1.0046033202581344,0.0010490607787944377,1.4310847464278997,1.9734019208922648,1.301562674526997,1.3979328080905566,1.542628865544253,1.9900412427851628,1.5782490653747718,1.901795976699439,1.1076917521104688,1.8616811969696148,0.0013363410344154499,1.0410574668178403,1.9730872512169328,0.3114947399929818,1.534591998627851,1.659284339472686,0.1248139886062376,1.1033503586243296,1.650754185024001,0.24867946203630437,1.4455163460899063,0.7116844984538421,0.8413060655739093,1.1256171875266296,1.8225241081277765,1.6016822978324525,1.3256107816343856,0.7842247893494638,1.5953991607819513,0.21063092633907984,0.04603096876402489,0.5911938495032903,1.3932797783710993,1.5522552016514901,0.5999293821495617,0.6613784439527589,0.6918560812495909,0.13055694671824605,1.8009559739075798,1.9045546088519478,0.10726541830786902,0.5919924104001668,0.09546535761799387,0.6321676670387947,0.5630926978066312,0.23589548463150806,0.15778366579993425,0.7725804859875025,1.6304412284265808,1.3847588938454338,0.8344376881549229,0.9719839146842668,1.0694683026999094,0.8846337917478875,1.993776616983729,1.0017768275786605,1.5158489019714587,0.847837979047371,0.33581617282914816,0.06949342932893122,1.5874291556006404,0.3490105287554217,1.3235583088217806,1.7527652136496492,0.43085245259096827,1.6612122294898335,1.6786707983816176,1.0377373819774411,1.2706233188761369,1.3106690796730995,1.6884549467076098,0.07106579690675692,1.1009415741385606,0.803561806823798,1.4994368159168345,1.3300579974163271,0.09591373601668383,1.8317672403006668,0.04658845963668836,0.6906561985399343,0.881645455197735,0.4875417247294743,0.3256426413146531,0.4740153202224596,0.11327176932881099,1.243632040652986,1.2012066984081444,0.76463291134675,1.384839824841222,1.2673483044196925,1.249811162742873,0.19672098012826442,1.462331353739594,0.9513353269580976,0.6871519651297775,1.55334157173585,0.7839816205726224,0.23221274891229893,0.1990999360436907,0.5033684409989029,1.1792427876657532,1.8171085467769441,1.9735454179057752,1.006075417107083,1.903932695636499,1.36520535792487,0.6645109970168701,0.028716381174268415,1.291814037497498,1.2842231861960942,1.6688373592295305,0.7431369729761599,1.1396581285153622,1.1068793168169866,1.4682934491661461,1.1098380789032105,0.9027308323722035,1.4635002926515297,1.367164387080408,1.5785101946361388,0.0612076184090722,0.547823347535733,1.561194180910378,1.7648620762823026,1.620140784891609,0.6355270397012197,0.2900441675103121,0.4522354714482877,0.29541052556372777,1.7527386253567319,0.6520948072448508,1.1247785302684736,1.2298716878296263,1.5125777194188068,0.8413307457818525,0.09427460679486019,0.46187856597297783,1.099705700956979,1.5437381155900456,0.9003458435233188,0.757225934619875,1.8425139847832375,1.887090338486343,0.9484819970424226,0.3713344921274945,0.820184241771144,1.2400152808701852,0.25668261620692306,1.7207731443757321,0.9368467174099654,1.3954749428285032,0.32549301529162633,0.8367196733414302,0.9598464875965805,1.1815493294211605,1.8545353372519944,1.6770852491504065,1.9064548148032778,0.6960727597262442,1.8649102452894628,1.597259683853269,1.0769479111906972,1.66395327455085,1.640044537621134,1.8908340387566518,1.1996826317079656,0.7831792780366288,1.2604408477220312,1.7534502684817233,1.9907808132249996,1.2504557770804965,1.7832141540694963,0.38008936803580984,1.2129201376289371,0.5672133443918653,0.2622097122622789,0.19005324700352766,1.9769224032057298,1.1232204147093925,0.38338566307016575,1.2947524709586151,1.6801958369898176,0.23139464438687432,1.726327736075611,0.5718568932436677,1.952207559665945,1.6651774443593685,0.4339035040496049,1.8647562303724694,0.13937268912892747,0.29861455343962484,1.2183856395208994,0.22378143992322586,0.06291118046224904,1.9884632067618428,0.9949799278214096,0.5813019346662357,1.947604673391691,1.8744655873972849,1.7552495997379656,1.0118104042868998,1.0478470360983814,1.7471737942172063,0.6257851599614094,0.9166186992181018,0.6908280414111082,1.6249934336643808,0.21723842758689077,0.9414703384451237,1.320841288713513,1.2377351599385094,1.4440078014733169,0.01336359010291112,0.5908136337967804,1.1823405445959045,1.2751145341547185,0.30335116111537447,0.004792478993573888,0.9352673642539018,1.2894774255833907,0.2748172025487397,0.1941673497625191,0.5633463288536815,0.2305608621388849,1.261491230571157,0.31641919195169355,0.25767002349429297,0.7660270834634559,0.014421350792777019,0.5851343496787602,0.36364233294248904,0.5758170861931441,1.5446990669766592,1.231623931757956,1.9056904465358586,1.579270703460632,1.9928227641917802,1.0409131775222382,0.04635363594580074,1.7914035919513014,0.4528824687400658,1.441616621245463,0.34010219635710087,1.4080252181031283,0.16053574282310368,1.6126959960826899,1.138050354710282,1.5282791639858333,1.0314563798668293,0.29690078450805424,1.0040041505819317,1.1356476317849435,1.1175684302574087,0.33535490803618184,0.9139013384616875,0.9172351634762342,1.3244759555707581,0.41897237154746836,1.235345768388751,0.9960228046423876,1.018847096250765,0.9972182276426401,0.011560331058344708,0.569312460659088,0.4860427646063374,1.7251836876880629,1.692435043865415,0.23371177063563892,1.2582930746463281,1.4407931627915018,1.8826700992855907,0.6602573303525276,1.0018139088572793,1.3033258065990323,1.499029564295723,0.22876739522361905,0.7807333645407343,0.766382417944717,0.030433705994596622,1.8184843457486959,1.435851642181271,1.2030730325477421,0.7636908086743254,0.4703678298696705,0.31478312792164365,1.0833134152321606,1.2267273702077217,1.814676124270108,1.8148537999113916,1.3621218569225342,0.15138420484512494,0.5531151742477659,0.2408860151110496,1.7317717868378337,1.688450128141105,1.2053006521060055,0.6841947121323957,1.404713225375542,1.6703874180550011,0.9193549116279632,0.003034592184041832,1.9291075896580183,0.8499928438421782,1.8552469552742727,1.2261164337935768,1.9053175582502702,1.9798024414019733,0.43898100450282734,0.7362197654344753,1.743702575527824,0.04404957175089517,0.6873166629049101,1.7439392355268868,1.8370712144732124,0.3609369676746775,1.4349373232404496,1.9608642575615338,0.22946767382379388,1.3145398876662628,0.6283050446884457,0.3576712146009047,0.6108208808697934,1.8332959665360873,1.3505218453178518,1.2432871704583601,1.0621380158871176,0.930851469820771,1.6551150764913107,0.49103137391396706,1.2924058220038064,0.620989699114478,0.7137023125159254,1.6594974010444479,0.1431688985414567,0.18471246144153933,1.9036142039350727,1.9918032175031466,0.7072237902783766,0.8346641680990868,1.5949831825851792,1.4679962368453765,0.060456456292089046,0.7955374249753059,0.6569290296046845,0.37770922096967885,1.4076097071698934,0.46762265758169996,0.14224173340529117,0.9722212341176577,1.137866360869589,1.159998366451704,1.7516569655092178,1.9753368128947242,0.43081482366668716,1.5100389780021393,0.6514480510758134,0.3207361049042869,0.21017181227503154,0.8270906552967999,0.4736596516070471,1.7499506457742529,1.6969794764888573,0.7099181579827487,0.6429299578011984,0.3327979384426476,0.6126680734254267,0.9001107814142632,0.562696901257741,1.9843590844841155,0.12240180295832494,0.4479556351284006,1.4034350933123045,1.392661863979196,1.7255777577350582,0.8386684556544017,1.8742321860621167,0.33198161248089286,0.2493545272941066,0.9947369340763658,0.4407645796528924,1.6595904060528979,0.9830881789519955,0.8989467865275582,1.7843066175651012,1.2998995266579119,0.3306911447468974,1.369249335411703,1.5699152644894623,1.7599913418977826,0.8674001305792606,0.9732118507840918,0.5300558724803696,1.3069130924736956,0.6602967676727771,0.13045622997123088,1.3135838440811083,0.8979205334352431,0.7748027586522003,1.7794837926227485,1.46714942149886,1.088396149737982,1.0872788347131348,0.7242379412711494,0.22704345741553328,1.6113230445436053,1.2401922504054232,1.388216627972837,1.1682495799788897,0.15669893606829133,1.731597402536102,0.06251702880096546,1.9059684231992047,1.7514988544570729,0.05459278272503226,1.389827813548679,1.649248317680853,0.3335564717495471,1.8902080984230407,1.5167260322366645,1.5052977758182693,1.5623836756289347,0.6909618360743591,1.5271021108130105,1.6455742239644489,0.13336418556916077,1.8153965672044459,1.8984680087304833,1.578083229760228,0.7137359999634979,1.3146340556325888,1.2175191663989144,0.3212236767823369,1.9098421658535325,0.5647345971560053,1.3916339853180284,1.6399172880517472,1.8678937890850413,0.09367621259000793,1.9537829442993913,0.03747427180191433,0.7743296975165396,0.1099793887560233,1.893332788339084,0.24131239250570427,0.5449747592970292,0.799325989979487,1.650934909540869,0.2835248671397631,1.7201923502466931,1.39947705582364,0.5348154463869534,1.1615973278842269,0.2949620784950921,1.4031044039755518,0.808830149538159,1.9411526566714177,1.455898046213701,0.5953446628177022,0.28663286099082985,0.8931508454510126,0.13915825165102694,0.14175583873159245,0.4020107656817199,1.3061015328343355,0.887744685195686,0.2596480694221736,0.9255808020958453,0.010467246377509674,1.0001876338934377,0.01870297612652814,0.7849669310044172,1.2674742703482054,0.43392711760705294,1.033823634948283,0.5277034230404086,0.884646385921231,1.6687561222815692,1.7277806987387314,0.5407764842051043,1.7479433260778665,0.13444560148558019,1.5489554576878803,1.399534340012116,0.016777864620173565,1.2851074227969987,0.9711090881044213,1.0078737653331822,0.874266291455158,1.0521394017542784,0.3698011282579569,0.4691280361200953,1.0858324767495215,1.3656400792668786,0.9716870230785509,1.4182752185660874,1.84343083385631,1.2228507107829205,0.26594593723733584,0.5829877328846401,0.9436174134201906,1.3739555318285557,1.0672345218222672,1.253746757160822,0.6078016377759571,1.2618972828009143,0.4693245259054656,0.85361915696543,1.5735242096393398,1.2050168179187781,1.021004300899337,1.4007510501762126,1.0639880275634392,0.5878152278561476,1.8496936413911491,1.9129282105979162,1.0871308634065173,0.5279318180051156,0.6557311708069542,0.6308043176431846,0.7227539249357366,1.420815318166549,1.3640712333828071,1.661770887129614,0.1861730595413803,1.3402891039707987,1.1289436756496565,0.9956145611302876,1.3903158878874458,0.9111345138392494,0.8577803689690068,0.8021915522247551,0.02953591005527603,0.7781733640825526,0.7657151151248803,0.23575406490006676,0.949955944282994,0.2618273882327075,0.33057674786896124,0.9754850011322621,1.4037529486539941,0.2005390100334861,1.8584650227721746,1.4892655043093685,0.7930648245435539,1.6389381504899316,0.8218874205001162,0.18026856645270523,0.02586640537139608,0.4660359777585275,0.08502907483861345,1.5606429237999166,1.7136766646663988,1.3828576116924196,1.9243770687123425,1.3252499311193422,0.05453117548061375,1.7791153825683321,1.6653570845203785,0.8438633477191924,1.509911229084726,0.9967092528988452,0.4880051084175353,0.7293242016292887,0.622776385545018,0.7714248736620113,0.9330088972420052,1.7730322880684302,0.7206700034741798,1.31109436672897,1.419649294391475,1.5420153514351707,1.3017169381044624,0.7127023354346805,0.961152081396073,1.4626199770563855,1.209829871873921,1.5730646263920662,0.2742512929195896,1.5623486091676604,1.7730876623622502,0.37307191042442484,0.47661377904773533,0.8346355864391045,0.6265059319635717,0.07593225065073084,1.4495937391798337,1.9500414642157327,0.046678043953314124,0.7919977960686525,1.5346178815456877,1.7402801297791266,0.08283148335729154,0.7650416189614739,0.8464765048882804,1.1062537317106098,1.64564710492188,1.0319064967443836,1.2729713010755674,0.5970619242258228,1.8528539020896009,0.04398325317626246,0.6231522639235445,1.3623841467573519,1.6858185294065544,1.1873796573043969,0.301002799332823,1.2844679529636533,1.7021058758203855,0.7651004448117881,1.2898722596420849,0.24408632991530504,0.3657782699232667,1.717941755008704,0.0787269205078592,0.6296854658091514,0.9793218296756272,0.7991793053157823,1.0363723706820578,1.7134630941378584,1.7870893054777595,1.5717509145767024,0.38520799472863376,1.9082199346279114,0.10809710556453277,0.03645180170054488,0.5315501187353112,0.8459522689567706,1.3686396709924233,1.7907819359588037,0.5798426220672561,0.3644705767982603,1.9833046458135535,1.1417240025602935,0.18405429337310883,0.9166325831771599,1.9052420818811635,0.9946224995007423,1.1263981339943616,0.41752546022839687,1.5708262688741588,1.4566229047136063,0.7589733958858235,1.3580887641133292,1.5500379957450878,1.6191360617100674,0.9090364692260763,1.5353925014667933,1.389444709254429,1.447843866083441,0.26994435081190266,0.2219439952452415,1.2802631334539145,1.2560479320923539,0.5690854356976163,1.146035004330986,1.3079918746784107,0.2573489491799171,0.4097580515159499,0.7085111710633439,0.6852638171575385,0.8194382899255954,1.4945524429220691,0.5823972495244675,0.7268311809612398,1.9847477030878704,0.9734084588573144,1.256153889006107,1.724047503755811,0.26906552248277077,0.9732001634673755,1.2802414646267388,0.3309532265067473,0.9707291347548023,1.0711458596618177,1.0231840636893534,1.1442293442029796,1.7162203466699937,1.5797146382874339,1.2187280665910727,0.43155671402588525,0.9901110213538602,0.34136255743646127,1.9013855947826386,1.297506952567391,0.9541452903943299,1.3940829706803104,1.8378409782592025,0.22789157233255738,1.8482295458731048,0.5607845117507407,0.6313780263931166,0.23399767300187432,1.6628657861488818,0.6535635292554565,0.5903845967475354,1.14319031766841,1.4507298683795764,1.1004567066620083,0.7189967039620836,1.1818613053887146,0.4963637113298006,1.2154662134916268,0.4431067568341906,0.6983184569331946,0.15342029623393988,1.8092187977333607,0.2434695225964223,0.5953241461802342,1.5963547455351133,1.3018569226753396,1.9168223480862199,0.2975806218372432,1.042535120383295,0.700549256411964,0.8496638188337148,1.8410605909928688,1.7827329278699113,1.90830164361404,1.1246851672187528,0.45137768749359736,0.6305102636782831,1.1895328184143563,1.3134530765945234,1.6058551340187592,1.556344541626843,1.1287869660315426,1.1252444294711534,1.1097639751233572,1.6608024387406874,0.40686240987797634,1.2528118800403754,0.35731828077224514,0.6583000759763834,0.541610812112419,0.8368814605053139,1.6945548947491926,1.1325546699371414,0.6209268166557032,0.8048024519259711,0.8019338668531727,1.941194519815308,1.245221649494169,0.857022543158486,1.1348642947418994,0.8379691615484645,0.20929301141633277,0.39664166949184154,1.9416983122693812,0.5954918630412805,0.11496631745516611,1.360614790317311,0.593613653352616,0.3519823452028603,0.25330039286230704,1.7772171516794493,1.994162904871459,0.7112739534652917,0.7047846543747787,1.8000346216231344,1.3937214621798468,0.3301382334742711,1.9373351237810899,1.5252908556214517,0.07817310866771876,0.9667308801683494,1.4447912929000886,0.7569529673089469,1.7285472229465488,1.617471925607069,1.51252130897033,1.156092017184035,1.4874364737535752,0.6858751237161665,1.0318463014422705,1.4188097553212142,0.4684027317493418,1.4388492804298851,1.1998617845564281,1.400820285577873,1.616932876145972,0.14515462929711598,0.8434089776805012,0.4967462652533199,1.3053405361585708,0.23237231969266675,0.9740009100086521,0.8733562050549281,0.7144453648133574,1.853486077653845,0.5476799210686973,1.2794585484204763,1.4770837295700323,1.8948275414252975,1.211797964576552,1.1714052269432333,0.6983218932275054,1.461586471418857,1.7296427415476046,0.5523412679034094,1.6830245183175074,0.4727376762311556,0.996280707267251,0.9577952681437554,0.9921958315142665,0.4644669325596266,0.8435315943072856,1.2713719764188638,1.5061324808215328,1.9086573236507811,0.5474285325837123,0.30476747708944396,1.187745967486968,1.3305934887910689,1.499277830741425,0.5924477765577291,0.36245525653795535,0.7450995969175034,0.8747380493082918,1.8452062643355245,0.33902224534357717,1.9945113286922915,1.7850086822062792,0.9223672367093619,1.8675657919784026,0.23325002107637055,1.428267172208683,0.047514337234295725,1.8036048297160323,1.966039656029378,1.840654609213682,0.737292489968439,0.040675646959466016,1.5794609007943567,0.3301606100108718,0.41813416873953885,1.3543881236210629,1.9594175149131656,1.1220865140109548,1.6814883091346065,0.40568637685991543,0.638536668041846,1.901200975118434,0.9098062265616785,1.7911374530836015,1.1306451261484636,1.06992334888376,1.0932926786735049,0.9539996119433746,1.1517263123341785,1.8523438261472098,1.2609721022953573,0.3760724782737984,0.5845826668126334,1.062900985671304,0.1209653400993949,0.09740729524853338,1.908449786076785,1.4944908173301803,1.8496912767234497,1.7174967174206965,0.7711671307376896,0.9719576998650848,0.29556222962008055,0.49475619934364296,1.8506025821903147,1.1190115541007901,1.3710239388466472,1.1293838231458966,0.5057475413732709,1.4177868669494582,1.301373844100112,1.8169452046727794,0.6134879861049346,0.5199604251790135,0.17297816991738793,0.04214803468060061,1.511327626667017,0.6789525424914942,0.7186219850343207,0.1262835392741752,0.026046248028859544,1.0677609822197986,0.5196176625701016,0.10018387919146873,1.9100996074034118,0.6160729196366925,0.34010922608204536,1.3534512718306533,1.5638898553321876,0.8944177424902289,0.6276520909921087,1.8475352847152802,1.8973258000681545,0.03881195275924574,0.7510049299028508,1.1351433599958205,1.7301150950673945,1.4946148758961804,0.3410053998146912,0.6466009623470583,0.2392340747238364,0.49606665442706166,1.7415671716423773,0.7963905540978824,0.4071031664906523,1.1304670113121278,0.35991336785467837,0.3869828882588185,0.5349538811602138,1.2699543491392244,0.7539769309749559,0.9745079486093967,1.1890495104236933,1.2778243632729385,0.8817219901576518,1.5757805483333045,1.1983020716427557,1.9482665744044265,0.9323623970539099,0.35200768905880714,1.2974320002624762,1.2440504128929075,0.07920507634525456,0.6979405551244575,0.20662139691516243,1.8128967223374606,1.3506196421327592,0.947128283930671,0.31090886642188303,1.0732374717078377,0.4620671104226199,0.0677077280620582,0.5621145930867649,0.4723758765621243,0.2386734457362433,1.8299417155858142,0.08917617564150045,1.9301361484073798,1.4717901751902451,1.0024012770056852,1.2471455521881996,0.00196206930850074,0.17068339905747507,0.7665259725542166,0.17201613185593184,0.07876323522243778,0.05814251752271644,0.02708261348823721,1.7581690240776564,1.3537258817165307,0.5781067775227582,0.355973699815118,0.40696354924218836,0.38819922468246376,0.16629291819080036,0.8212653761050442,0.45781858290366806,0.748980306439927,1.8926186429010394,1.5036486899843005,1.3075820073167241,0.5705171544932663,1.4012253164795503,1.9656392109736844,0.45242850345097435,1.5819666725980979,1.3884100335905822,1.65267340001914,0.761567286400482,0.8311531637374394,0.27402738202595306,0.44112969956964676,0.9061318096210159,0.20657941402129157,0.9580370959682973,0.5459031211158325,1.9687210940448394,0.8287910995830873,0.9228168447944605,1.8676246049646659,1.940954066599302,1.9513768909610758,0.1528943604572635,1.3477952433263762,0.2558959864175947,1.0854084851792813,0.7228240275875512,1.3572310368067801,1.4758552057669396,0.9547508384148372,0.9120273535510982,1.335392962633382,1.8209211876880103,0.1875823238537637,1.1166747082853807,1.0827291690264085,1.9778261110036652,1.9366909288141694,0.7216557797709957,0.01377850234306292,1.2557793244006998,0.9909689716445684,0.9624789155169198,0.6501729969232047,0.17312342045231222,0.9732017555434146,1.831484260339467,1.60074622536389,1.0516964692661508,1.284958786349169,0.699018659875974,0.5560497716509258,0.6005754695423865,0.7790180499050956,1.2850917376794695,1.6253962343055761,0.6053720167561907,0.4999999856645759,0.1527007330433705,0.8410662824982886,1.2239101927810958,1.1149807329151018,0.9624764380087321,1.8892781341134461,0.8544172265709199,1.245132763778625,0.6988656467573867,1.5633290313520678,1.0267926376023915,1.4063885297870324,0.6117346768674365,1.0152093070404016,0.9043084204309376,0.8342080343551815,0.6438475255972053,0.8594976382678343,1.4712556226771947,1.1668720294830395,1.0451160063849796,1.7968873916788268,0.4552075730302695,0.12194211727754475,1.146550362874661,0.3730787775822679,0.25007096481598706,0.3116404697835164,1.1045165636006247,1.279515732027779,1.7070107869709108,1.2789464599992593,0.1701565704489625,1.8713964203530844,1.9529121894095793,0.7455660289309843,1.1379674925154775,1.6237340362112525,1.1416608072684828,1.0336216660294,0.1083035295819238,0.18268457429876458,0.8406160229977597,0.23115242023594693,1.900297543513057,0.13546241397328113,1.863680806398737,0.32769147817614164,0.7111390190575501,0.736099008665066,0.6323946000046567,1.8479629982769148,0.5624708636135705,0.3109606929660637,0.6111490574512735,0.719840775151372,1.107774593431957,0.5838632258181932,1.2854092013230172,1.763436978970544,1.2894544562288854,1.4276287872499096,1.4517541602286919,1.0241810472069623,1.9140865592920577,1.878772522140972,0.5266593354065656,1.3764777830154693,1.4322823088318366,1.2129907500949528,1.835819038448134,1.1694899488642982,0.8448696460379118,0.09635427281400259,0.6276959204776251,1.314069099644754,0.3998131051488077,0.828933784205822,1.7514632617395607,0.6663227762243443,1.8221591930922607,0.0077710861949360005,1.1926429681822424,1.6554632410493062,0.08888452153468418,1.2137957566048794,0.20718003810506025,1.8098732577015013,1.9130424121081748,1.2275264355797957,1.4103475694688683,1.8069199946727663,0.9420579342567894,1.9383059111918721,0.4384667452367262,0.9422219904857334,1.5308611795473208,1.511717739465462,1.6728472749060457,1.8951904761646505,1.8384275332439926,1.1392011350519613,0.4395975064141101,0.5593013068722692,0.8198012436380998,0.9246651996123404,1.6232092374224765,1.4803247976390752,0.8728411346960966,0.6678701671644977,0.6873134337016483,0.36183341723884804,0.2706780078765768,0.7853288150448086,0.4602142381456457,0.7029473496205713,1.6378209200982803,1.9053696970132088,1.0856254938795549,1.2463050908262232,0.46392325747536767,0.918978742685866,1.2975283935878177,0.8982040950011392,0.9130883588611571,1.4617849426045404,0.7236898164053311,0.042055571924280506,0.26467597555384115,1.2390903950171814,1.0776930516662202,1.3683911831063693,1.2253677567358157,1.015476029893479,1.8366088218659617,0.6596705101308232,0.5544547878719078,0.9630567613723168,0.39418186447429926,1.2709585279839855,1.3743690810270295,1.9868945224737176,0.13984407259576104,1.1126952769744665,1.2054917210372487,0.45155875896584996,0.1070862076310363,0.019677868417147068,1.2534230106121382,1.8760079311285738,0.17677503260822475,0.5645193554544896,0.8560296326647863,1.461303813398082,1.5883116706607445,0.6556432845084023,0.2336647514140914,1.7620117262040524,1.047137518385048,1.5139705585860095,1.354256539464806,1.4320371040497801,0.9407564179072754,1.644550987971001,1.9694985344163174,0.989492067771371,0.7636486507324426,0.4872284272057795,1.542044614244923,0.3035275828836763,0.06062006232078115,0.45852011565598166,1.4836729809695028,0.7408554981937993,1.9706095760267388,0.7531938533742524,1.1315074400305432,0.9928013399982363,0.049027903084660554,1.3352537336008619,1.6479680681538784,0.0603460350227493,0.6885676202432823,0.41169487431548213,1.9869591648019926,0.5900262886973351,0.9096204437350265,1.9508101957723514,1.4242728662098265,0.019463669146637576,1.1808823173945808,1.328202170787409,0.754255563198238,0.3935637155510808,0.3439125694304609,1.803930687862211,0.3780989169360147,0.2988829767536296,0.46587397617003,1.9052216298221702,1.5052380758741586,1.1055110875489627,0.8954026424559314,0.6433216411166502,1.636075091636247,1.220087234618314,0.07160437638714644,0.8930833750665742,0.988372792816237,1.7886260567870003,1.5901516516540362,0.75169009279923,1.0071064342563711,1.7022682118100825,1.115212722080468,1.4990112499861927,1.101934148666323,0.6557256010490518,1.0757168131130292,0.8253103885733233,0.18268019885019182,1.8941558615203236,0.6851617913587877,0.7605074819098951,0.28042598875628055,1.5552671693595979,0.3215392996597994,0.2359240482300947,0.5878870748213857,0.6100449168351254,1.81024695891,0.8773026975824044,0.5274726980032215,0.9158365226469393,0.8662701067705039,0.3459179785202834,0.7586213183536166,1.9267604569635208,1.8798442927440897,0.653701008476315,0.947615373195783,1.58562918597246,1.313693309901019,0.4443881241876237,0.45058885840040463,1.9318687485727206,1.984039371614535,1.5670456866288773,0.1958853400732465,1.7647109689994513,1.0735549339072694,1.3276580706052052,1.7141933719929634,1.7596897538549865,0.23618803751348727,1.982458200637083,0.4059311278636186,0.6597508191777419,0.9328355682268239,0.5011654117400745,0.9765966641940153,1.4718672701643323,0.4324796240868893,0.22650311036064158,1.4128180424315888,1.079453641234765,0.27300442412462256,0.294094570084207,1.8818895614628186,1.1301808675131593,0.8016481143027705,1.6671380926383,1.5546466557755663,1.0421337717848111,0.8109013918432013,1.5926378064082898,0.44757155130402476,0.6259680141610676,1.30644747982323,0.22059473751717265,0.8089636106760546,1.4561769342364341,1.1717967571683814,1.6399056297445045,1.050630222893519,0.6269791571867427,0.3668092864082984,1.4911559547202502,0.6421844435862094,0.8672391307731532,0.33897312688485504,0.27475405186134416,0.02594865087454388,1.018350466633039,0.34799445068725526,1.8607224391197033,1.9686932817530571,0.14138780589051447,0.5325893819780533,1.9868723309798495,1.9617022039041498,1.790534384294536,1.8301717292845419,0.5520442485233776,1.95556577070948,0.45875770292476414,1.3137087841893536,0.19926411782608563,1.749190417562769,1.810495387432941,0.1069534623018572,1.704464296139639,1.1294325510781802,1.9250101807260165,0.7330838165410846,1.709687978029367,0.4326161278482165,1.3577749694725307,1.5287413018910405,0.8221042130307253,1.7512264226042358,0.6130961063529674,0.857056210055392,0.2846165478269088,0.3775926671387663,1.2055172227503181,1.1859421273516138,1.4040648938881646,0.05007447512606829,1.6218725913190097,1.212278633556264,1.220700960733039,1.7844603417728442,0.08647103718042197,1.185512897741155,1.0720281452746032,0.4091568231920958,0.10483656079880811,1.4877152929043813,1.4941408516288437,1.8013615248540646,0.623138637947951,0.08200040224603376,0.2969409306019714,0.8095115391927592,1.8359783501610754,0.947123555618532,0.03384575838775499,1.7562448843238878,1.3743535996340297,1.0945537389676578,0.031153331126555134,1.851536501271119,1.5244544802007443,0.49914293708918606,1.665816876788017,1.2280178698921185,1.3632545758507122,1.9412963823918334,1.6659111136094091,0.3993410105541534,0.9685365337117101,0.7758801242470338,1.40237775792085,1.8744895269292432,1.550398155240499,0.8807707802817878,1.843271773903771,1.6941171607039776,1.1489103440283746,1.491947094887048,1.112946839390253,0.029880092682963898,1.6561623947556283,0.6998728779179548,1.4543504011166128,0.4306243769468575,0.38207134133206666,0.1620103507425739,1.685424803392548,1.3709645600556526,1.324318154858033,0.7053042409703284,0.5005070586642706,0.5683728140483227,1.5166866139639483,1.6928361513326184,0.8690102995578389,1.0726332401858238,1.9831449709741613,0.8115163293543669,0.7724644297207613,1.82507938688431,0.23336033686380966,0.19291930246773703,1.8075528472617033,1.3855564589133704,0.22375421325006406,0.6924124875581489,0.03331046933421973,1.5968130139417733,1.5852809699989057,1.8625458207408256,0.5003628831883683,1.9892381969253505,1.01707520192517,0.46841523374404204,1.892294290003536,1.2721754482652214,1.8688410362575931,1.8949742209030094,1.7806191038325778,1.686128026462483,0.03869375042424168,0.3946030581849452,0.010507602935064536,1.7774453956356189,0.4849387310561985,1.1202191027693071,0.9125221535780047,1.8607949665727523,1.8848244133656693,0.657557378302725,1.0393184344626176,1.9691488465872462,0.6645762115186991,1.5570047025501625,1.7800365844732366,1.529151173808821,0.5304231121480875,0.9217116582729695,1.9147663216396855,0.6971399098288328,0.07923016803821797,0.18612289956954542,0.6548637085228763,1.2977031203656504,1.802576506713389,0.1510515525218384,0.24817159741246053,0.09402497466664665,1.15986163551397,1.8353228394993852,0.8271728397082808,0.47789376082289997,1.4739874903944514,0.26284804309323884,1.4032408920981494,1.686114064928917,1.3649114309243253,0.6300725820576529,1.4453622790306975,0.8611165073993255,0.6776567239031388,0.5876823540203681,1.362286092750988,1.120658056711668,0.3238185524194354,0.6882311749737282,1.0615748371641889,1.8765316528454528,0.8261731452820933,1.8630695546076106,0.9336001443224666,0.6848906804830429,1.5284802118726775,1.877080106385367,0.4304312242220736,1.1598960014773352,0.72646148241549,0.13634455530547498,0.6975277372511481,0.8974555877002799,1.379745915662873,0.44980935585140713,1.859658211203687,1.014340586085727,0.8942213257206957,0.8273085769364811,0.5309080035720537,1.1689382144173912,0.6890240344270588,0.06983788642450545,0.03442361164923058,1.3384310019708003,0.08103981773961448,0.44080828640348496,0.17248441003143078,0.07559748163963213,1.8954943019577224,0.36548539693542875,0.6164396049914127,1.1242754467544402,0.655534202126939,1.659439985549545,1.9577486493216751,0.7145853280153387,0.3530758661354396,1.4753278253769233,1.0528850771144949,0.07812670301187162,1.4241986500184665,0.26266134229901217,0.5553718126068709,0.049310392429220445,0.5929791551744942,1.779030740422671,1.4801550015267388,1.3662918020544004,0.027440178534060163,0.6382801395932932,1.486719565401274,1.6765245931900505,0.9433708117744629,1.4978099492824817,1.5780009470477223,1.0456074170994931,1.0706106474956796,1.9658084183274775,0.1805382247304588,0.5285740444901038,0.46617408106472674,1.661507732493733,0.9383864675885065,0.7841019592634512,1.758322578888717,0.9126104283208304,0.27015675448211574,0.9066661400455535,0.9076807215150854,0.5829729202066186,0.2515466113898204,0.17189902483283767,0.19741551229126494,0.09991092958276006,0.6071927230500449,1.93910016162195,1.254422120631595,0.09510493235476306,0.6769066047153692,0.030014105503449323,0.45823815971545595,1.5490847848211364,0.6167536346171147,0.3163571997413871,0.7794830951609697,1.6940961738995326,1.0513788968040696,0.1274857263009643,1.781666964518996,1.5545621078592216,1.0779703038273551,1.928134994097921,1.7469856666197485,1.7519080021620648,0.8508554572956597,1.1436273127932648,0.3703524821409991,0.19727399063050582,1.034201334403485,0.024881614549255165,0.7150698682201487,0.6945895671032793,1.6688693768934943,1.6508412505963932,0.32205698393103743,1.8202652975930684,1.372953155043802,1.1108568363366704,1.921147147616706,0.7317344343428881,1.6387084631743323,1.113225876615514,1.2971059885185015,0.5888888174160454,0.4443597691173041,0.21867194637716367,0.863466737264566,0.2756311842135793,1.7178662089692198,1.5139914115992177,0.20568608533457747,1.227263895130063,0.08573804102568161,0.07870411082816756,1.7089550288684165,0.8266513330489167,0.059242527848894465,0.26609106896258383,0.9954426717973673,1.232091535717943,1.5298419815955147,1.7766270560458703,1.7281223352478827,1.6275894312718302,0.26841318085572474,0.4610771011552537,0.5608970308632502,0.6786748530117184,1.3066971288871734,0.09674593272157245,0.5857407033988191,1.5854292829171495,0.9844497818112986,1.9354335981391628,1.8061555716838877,0.7992900843930035,0.2615744159985528,1.249697649299392,1.0648237320408966,0.015784958391412855,0.9062165134218015,0.49563346233171285,1.9192536305568326,1.8057013841578804,1.986764864832267,0.7002609650216889,1.474173836885151,1.7901591052269088,0.4476939985292448,0.5047100329972464,1.0914852668531,1.9139742247324438,0.3801473130648251,0.7941987156231606,1.0967911662232763,0.9618700521062836,1.0649843199035216,1.5877705112447447,1.8904475275277113,1.637980107218371,0.965011236843256,1.837643407021915,1.048368248735645,0.8387346746554624,1.758270295848165,1.4473975487148607,1.944491570125341,1.6974887195330517,0.12805102783243213,1.1070838141702166,0.5099001004437049,0.46164706963078,0.6862526551341634,1.7286344195191348,0.8572545728625699,0.3237604604499507,1.5346185672275234,0.8097914333291988,0.5700950678950919,1.225481444393506,1.8556580067554236,0.5909386000486024,0.889586868252759,0.2927882051694426,1.3184013643203532,0.4419607966753381,1.469133012401707,1.957535925105297,0.7263882251095419,1.348803465184094,0.47006643749036886,1.9253263221843917,1.7549727232654329,0.7949949625617974,0.7839404153441243,0.31749920659037056,1.796856227441217,0.04396229696771312,0.27010817074193705,0.08766962549740505,0.5584396813063879,0.43670179412537885,0.49417611272004774,1.725106316146494,1.4402386003823564,1.2832210660882113,0.7732284746563041,0.01945846604454674,1.2303498435186107,0.021391119492352336,0.18908978067794016,0.6611674140073907,0.6108883785287087,0.7421406350330609,1.1896926503014833,1.6521083983770142,0.5933069003103916,0.9555929124100705,1.1262190741747953,0.3167110985861219,1.9535804953500804,1.7335037312556225,0.35067541523155227,1.3224098998526428,0.7431910141565942,1.293631970647289,0.7021784520990433,1.392390465523021,0.5284571504475742,0.48657479724534,1.2822676776890567,0.3369695839570348,0.0635098401752385,0.6321864842207461,1.9493864782495656,0.14552265638024955,0.12837749148155872,1.5192775565247039,0.31923028973269285,1.4367505243970748,0.6020993529857273,0.3591295662703433,0.6961835991845988,1.0634779091373172,0.7279682840518974,1.8224007547876615,0.5854902458509638,1.7952481266351001,0.37077247757334125,1.1864539468686726,1.1616676621494308,1.8072492743931137,0.032289898377398076,0.9519162387702993,1.8248188656948658,1.230646336576314,0.239048972983849,0.2625183806019148,0.5106269595971757,0.02848936312759412,1.4476845427696434,1.3108169047781606,0.8024783065278329,0.5782427522566416,0.6061073936198703,0.5333794230421535,1.146377051836916,0.9084124111269644,0.9712848078044579,0.3500991024176935,0.2571597556007956,0.9801487382083512,1.4811569071950403,0.19344002006782898,0.18054080045007279,0.7796562207156421,1.3159168058939785,0.8518224475540122,1.2390231100507196,0.5005924529546864,0.16134050753773063,1.5224496990530847,1.3347995457261823,1.0596018657453483,1.1175486297690156,1.5904951388808715,0.5016142849837024,1.7563494115306841,1.9101943099297265,0.8843624340934798,1.2593745520767743,0.09707856389882634,1.0115978452952579,1.422502184337225,0.303404182095292,0.06376123937693005,0.25644588103740557,0.5335634479999112,0.7832695493548453,1.1443262651030526,1.2539714730019456,1.7590507481418358,0.5586076240808743,0.024524201768396432,0.7157760778534906,0.8559979155085878,1.721635430564123,1.618230859183255,1.5084167996577977,0.9034165802806114,0.8760822241689455,0.816714860888682,0.16669227733671513,0.4022191881256781,1.6192429131705905,0.6716516671291963,1.1375732846456523,0.8428423288927324,0.5436088132661407,1.6695019884477205,0.27103835373307134,1.5537197840067063,1.4773949864348725,0.6277166382479653,0.4094695880923955,1.6286220647135434,0.6111014234838461,0.23893067585354466,0.051555724305121335,0.38851822769708155,1.8871359761114277,0.29429070337160124,1.183184188162011,0.0890643634933024,0.046601956407648325,0.32022724649508943,1.1316059762566417,1.204184691749662,0.7751214595832654,0.045736330924320875,0.27275883720781235,0.4900119576796817,1.6716981350562743,0.39593352762347717,0.42286800528861407,1.0904546702778461,1.6267917806546468,0.9552682969291896,1.5412922463609153,1.2857284332999999,0.2911657121563217,0.5017031068433763,0.5019419924104583,1.4394787149114137,0.9854845054422466,1.6526811944728768,1.9138842363350963,1.5858723051696801,1.9894566299898049,0.5728007292859604,0.657371458047658,1.3929641106930906,0.41070264940258394,1.2823101888026693,0.5470906713913551,0.08972559654612676,0.18480841526843061,0.12364503808366951,0.9685245786465125,0.7514690727261627,0.3714675181575386,1.3323149711948676,0.5175788266097378,0.630039919716925,1.443386559727357,1.6562846277705667,1.4309184575212543,1.0043868868757468,0.7861714515264271,1.6019390057354097,1.6160808828378546,0.744155353013779,0.41449221424621435,1.5611202012355125,1.1354616185075617,1.1481023039527198,1.694086775361113,0.7697691837663049,0.44156714962941945,0.5617060912831641,0.3630546410421064,1.4023553584956787,0.25579918054510076,0.6606414578228283,1.3629615570672071,1.0835298604443968,0.2728184624556773,0.12277179836140989,0.5205664462724723,0.5123215958846561,0.545010692624326,1.6581669272827644,1.1909911556201012,1.255298501301423,0.2767914319078221,0.651689428475848,1.5580137687625661,0.7753209816080097,0.3607912978148142,0.6636720797482684,0.39447304971014946,1.2013014642770572,1.4926037400592314,1.901768159756659,1.5472240160672113,0.734985690282312,0.12477554916547463,1.106549505704937,1.0434819758993468,0.1248818010197068,0.9981784263147359,0.4186369629039052,0.9604309486549558,1.4268415610485052,1.0299768332167425,1.7498572900162477,0.2823351959667685,0.39257020880842014,0.9307807196507891,0.577613961279133,0.1559929527069431,0.817640100160378,0.2318174964116221,1.2142095824915546,1.2377605808599008,1.951927538288643,0.783239529729929,0.011899987183159879,1.8407355137837182,0.7494935654653376,0.6071846643980467,1.5845803494072566,1.2834438690122192,1.7417222386827218,0.790776470434449,1.7822912537834146,0.774350877327208,0.8053132880358923,0.7354499772044634,0.09843168533650318,0.8403970328032959,1.043867452556127,0.007519090572867346,0.6713218713338484,0.5262355581867378,0.7039316919558926,0.9368510556971199,0.7312674208475558,0.2506088556020879,1.736902011303176,1.117212232574188,0.04954719129158737,0.5455748924981163,1.2292628373332262,1.7184312758605544,0.4436096350679548,1.4241056864931076,0.6340164112699047,0.2557889033423293,1.462247671289518,1.8602544661086744,1.4763084929190828,1.902965862967876,1.078374711767781,0.661736223617507,0.7897558402976885,0.9829571919882252,1.3034658684996963,0.6508787723852071,0.6886959214618432,0.3388931078527339,1.2288660365202082,0.24917093645767452,0.5987274546572314,0.5303601275355355,1.754733994625867,0.5037123231202985,1.1840756887254675,1.174163922374775,0.007304612400532397,0.527451141087631,0.029919061303265212,1.5408423700964204,1.9783260574183843,0.04772924475968716,1.3227237569588404,0.9414499113522702,1.7468376948727575,1.1462782165486733,1.7790504220040069,1.3914236390559884,0.487509927195785,1.6207210292318803,0.8615713022307578,1.2133113258927615,1.5838367195864191,1.8135892204408584,1.7632887706403895,1.761452242606875,0.9094844550548822,0.4791269595140251,1.894472587773397,0.0797687161758673,0.5129732398922949,1.115694655266067,1.2050295743261394,0.2561102899461591,1.8829015841009458,1.0062077442707413,0.181544201632389,0.11711500774141247,0.805065104989768,1.3718117486971821,1.6400372279146922,0.299734231572787,0.8908839566039736,1.9616824690118349,1.931744591733881,0.3862139744984568,0.31968894994246705,1.6202870451299782,1.0840804404769329,1.801191115438563,1.4236688037595095,0.7261327707906025,0.010605400877835455,0.8294237384708742,1.081994958226969,1.8856574882044448,1.1827091510358654,0.2579410971347466,1.5260267289212035,0.6851372258724245,0.3996165917246146,1.6142220176855948,1.3975625703418182,1.3756401458566732,1.2067647735713025,1.9108198551177016,1.976165123725514,0.11723308418059296,1.4494097998526652,0.262733907327116,1.159046942669027,1.8784203026073842,0.23525824506747073,1.4699038994851474,0.3073071967292847,0.10305137246608807,0.889450546005263,0.14099900707765856,0.9826099836791548,1.908745158576756,0.21087444492154306,0.9816996315118637,0.2688966913338684,0.13945788528813838,1.1493096636227038,0.626031968464241,0.7879749645738151,0.8601402809848551,1.3764754395627432,1.934997787971769,1.8827794649781748,0.2205097663343988,1.380857611620355,0.43991118229155235,1.0625930926186187,0.9355428234072743,0.19411461515151354,0.8811318598448136,1.1188557018028693,1.7303790706497193,1.5236067662741124,1.0780831641909574,0.09342812881547932,0.7147454141667285,1.2948746790208456,0.8510967503376082,0.8208027154840958,1.5996120080633576,0.9739998147617582,0.2893928133829056,0.22656062377232034,1.4310032244874662,1.9712642668432208,1.953747704411105,0.016757255733932667,1.9527825501246356,1.452154001620028,1.0720390259283654,1.9614093277278215,0.7682096441851037,0.3254515705999055,0.8447634752821367,0.7759658791809005,1.0725394716042314,0.9012582830121194,1.5120428471800769,1.2806233412894557,0.30683322848341726,1.2070513531374953,1.4285285055461456,1.0010223026392964,1.8884931189360716,1.1875923045720025,0.4579323734715968,0.8521766078758795,1.720915420618699,0.16010466298482934,1.613422826888756,1.8701315772062368,0.2151956389148062,0.45685884314418607,0.3686856099639348,1.0557836302892842,1.1527838104413173,1.6798589295006279,0.7534779679566193,0.1866866298038026,1.9965550324343337,0.8415038555305602,1.2173287635595718,0.5105620568090659,0.19549607471025343,0.5731105348787472,1.083184124543955,0.47023003518620116,0.5498961722450786,0.5553564771240928,1.988014904072629,0.1941125685697822,0.4676916270213095,1.8500847498788813,0.601424294038149,0.9966017372413727,1.0871071817298659,1.289859021584173,1.911686848223654,1.2646228219678488,0.5060808767024849,0.4137194577994649,1.1801471062004985,0.9381791333891163,0.8484022759976361,1.1474517323842848,0.2402461837361863,0.07481879953705489,0.28376541052795257,0.1921179394700104,0.6269886172008773,0.6985093936024506,1.8983218676911966,0.6139995773770613,0.22662861484055002,1.5443930275259163,0.5315742998929548,1.7123485332829946,1.0173079164757717,1.8606206611832223,0.4452807398292473,0.5222441052494963,1.6029798083280697,0.5840006652465358,0.7031026410009209,0.5869154624784232,1.9130979119943479,0.2454196695002698,0.6508506354893961,0.6446393678345261,1.7495919477903448,1.8166179285740025,1.0124498567989153,1.1136206522164764,1.0867505181565909,1.670118018277408,1.926027809210903,1.1652066841688484,0.09909270650810129,0.3722739547087793,1.9461839616381575,0.14287390919600113,1.6530886738429533,0.539527572248906,1.281045924487677,1.3795188412422832,1.1695629517238548,0.14010990698486814,1.0456518223030606,0.879425224851293,1.003356233496906,1.8959358887245148,1.073329431080662,0.8490195453021785,1.6949973769341315,1.8564562160622704,1.9577082400369203,0.06077274710990311,1.8156551322996834,0.9629057101271775,0.40213186670482126,0.18540430231606075,0.5328259633462074,1.9857154007259155,1.3523222823110435,1.53853079516567,1.5100004969629535,0.5327241861927681,1.0924575775554701,0.9476858582008719,0.18759167021176312,1.3240350718000138,1.2275320030463672,0.831563635520984,1.1502855970549903,1.8629413160338548,0.3008699324829739,1.2061478046084066,0.01727667609685131,0.9396558067958485,0.6098449367397228,1.3194502832938164,1.5670736136954841,1.654279994714237,0.1972008271031687,1.682524590378939,0.43599991795487975,0.40979852549157014,0.011240136948029979,1.097035472891836,1.155474350155997,0.8173719764587813,0.09449328382161712,1.6787713207328039,0.0889954417761757,1.9940000017271606,0.9933636283800344,1.7720794048173862,0.22616850613580852,0.20663767517905507,1.1057519758552423,0.88664611741844,1.8947404797887053,1.2833089230688215,1.430555538242474,1.2002088384807252,0.3874299543552802,0.8786472607058887,1.7461578507761168,0.6558913010251123,0.8906081234797039,0.5868258559681172,0.4589848729721285,0.9825194787537912,1.9358666747668358,0.5457030349212904,1.6382849129985535,1.352914954874071,0.9243075969065138,0.9351051098315144,0.1678248287898443,0.8500263163760423,1.1391425664138384,0.4092616934969903,1.5206597246403541,0.8198487392423882,0.8300233881666583,1.4112531557133217,0.5886226204750102,1.8905232511676657,1.5729805665378278,0.09744452596267683,0.3377319896439688,0.8101647518735008,1.6901533808049651,1.96438940738818,0.6002140817041741,1.3255119703386522,0.3633064158018492,0.44757254484103565,1.3011741746621723,0.14320266540138282,0.22312863935014732,1.348835462838213,0.5266574895615058,1.5552370604769128,1.6087598161935737,1.123842050932924,1.7420371057468458,0.875387729692105,1.56670201221534,1.5192578112621065,1.4573167779944647,0.3964811127846032,0.7695231436232071,1.53254384354399,0.14933017364612028,1.9423661307738627,1.6382893468539432,0.60391792308177,1.7172619075318016,0.7735703544373168,1.0045214477603368,0.5850421473632849,1.488154806569622,1.6896851187154023,1.7740081664965521,0.2801282747905448,0.8577577638570503,1.7009784162532036,1.1393912060571263,0.5574105578667095,0.69305834266988,1.9810731828168777,1.4933206925496187,1.1178487223288833,1.4669113638627116,1.5728624736785617,1.1356036195182673,0.5809141464854467,1.4886577796534282,0.0630779090625333,0.4211714814681207,0.22322448555273944,0.9326934105470316,1.4368627598243011,1.8847830687307108,0.6103420331025281,1.6495295782608694,0.9363416892532115,1.320990980299078,1.0424722418467363,0.2818352173884639,0.8541247302403587,0.1937693859888208,1.7316960591561048,0.16745323771627446,1.085264386120116,1.988014711196673,0.762507646743167,1.153084218503022,1.1365284403891138,1.778778310896462,0.03483393021385529,1.5374807902327796,0.35503015264768445,1.3315952012869736,0.7485066801274411,1.6658849011673487,0.423057507006138,1.8989066260226108,0.13580215922521668,1.3413075272340065,0.0901418217718444,0.5469427850018953,1.0409917009177985,0.9096859035079138,0.6308277587409935,1.9045320375830561,1.289868063476988,0.19580468212866567,1.0791978961462274,0.4050708684892371,1.7941584424613883,0.675172226614054,1.470938777668415,1.867145393109243,0.10526071852442537,0.4706169335708381,0.31883069602856035,1.8081307980320258,1.331653833253235,1.2719873732604567,0.6488418497989139,0.25667453243177896,1.907183812467489,0.18037369588339094,1.1812346088696408,0.7680364552889162,1.4335578915201737,0.929218097797522,1.7058342409070018,1.511265102677332,1.419652163722101,0.3473429568810143,1.2118051661080425,0.1664498084966687,1.3590145884678133,0.8475314193251829,1.791782473192,0.9948250596702788,0.020863881025824826,0.10614387502285122,1.2533615094708102,0.4374342268364453,1.4368589098210882,1.2666512748672727,0.02643989073593427,1.7319073946169725,1.1801342893305975,0.7254541551739722,1.3243719051675005,0.47753018634538624,1.7032877482526376,0.8264336499711377,1.5733792254564738,0.798659337958426,1.6028744472802046,0.14997582713295496,0.9807782434461962,1.039401042100046,0.08908194074710242,1.5973462314227602,1.2410168387894054,0.6182079564053379,1.5076373197850361,0.4195425795178572,0.11253848256693337,0.03007788741134348,0.9149709571401938,1.442752059614717,1.188928083558782,0.7935991110994335,1.7375239960582463,1.22846593657174,1.9076958915823277,1.502107808677693,0.012446900132911932,0.052074044148755584,0.03480991472704188,1.1918955712585593,1.8797003808869364,0.7803761090663159,1.347069917737683,0.2093465324166012,0.927213449822406,0.04964689491555754,0.19825106100696605,0.05293967781316819,1.2703091535709097,1.4736379534399409,1.8980034851171392,1.410377644106109,0.9820533701645813,1.7562955784114123,1.0421009750990873,0.07169392335694628,0.9358747424167261,1.9804367641132792,0.9473888515510157,1.5626858956924694,1.8057269975123578,1.3975871546961725,1.424711544607028,0.688529697195067,1.4911104179618277,0.05277005450647863,0.30908253159931404,1.0310406377414667,1.0953803520807037,0.03852253613766986,0.18880951940196705,0.9055575692605004,0.7094166671422784,0.5487532011618603,0.7239029094173135,0.8490379799383427,1.134341795582651,1.2379532237237816,0.4333517271138805,0.6790222826730206,0.14876463918538055,0.9059257891225092,0.6983174353221584,1.6582164691535974,1.3067142109953698,1.3676061489311997,1.6407482876432564,1.1717814071820112,1.9299424748433591,1.6634722454075963,1.6891852369903697,0.25344956986720446,0.7532931767781337,1.9589578283483022,1.7551780022296033,0.9558923484928034,0.6269538233354023,1.278450438078912,0.8991674992369872,1.9169554031946057,1.000219357764828,1.5478768061370147,0.06232849752491548,0.97582089252625,0.4433515873905887,0.009850257740914537,0.4322750344468249,0.06874379554599482,1.0203937918479036,1.148406936723515,0.08908419479930593,1.3596987503594549,0.8260973913659598,1.9144833115128101,1.4325803944476327,1.1758177829305094,0.44159292828563346,1.7769439329825514,0.09578503542393327,1.1419729609030165,0.028044502024617054,1.617061267898145,1.8549838067140705,0.6212420238438168,0.4197541643687615,1.1456063465055772,0.5702854089537952,1.907259038626666,0.2308099338472792,1.9664157392334294,0.996680519275403,1.523829523140602,1.1477284568061121,1.8779486276187989,0.7086697874486395,0.8923441595585744,1.2322629985769529,1.2940244264663703,1.073473848108021,0.714746865172999,1.9625868692373314,0.2935386319929929,0.3738441213926498,1.4708410211597895,1.347779469609784,0.782853653626316,0.9803017239368077,0.5664320566235075,1.5142781372035872,1.6187659061858084,0.5923468502810065,1.5970333269239265,0.8495345112778407,1.1976525637257633,1.557680634283682,1.8548413305263565,1.0185473658290514,1.973327463904361,1.7447654953235854,0.8529328290044073,1.751224884471021,1.6927555573557034,0.19789666443121454,0.9790601055841744,0.8111090347566735,0.3070227267396548,1.2389337152778208,1.2435675740986174,1.5063295581602243,1.7882143634219876,0.9817806395221876,1.9820437744935306,0.2968636017138241,1.0194454739667398,1.7705252557477857,1.0084683042537474,0.6646110400021289,0.8803609156295966,1.3910002004778375,0.9512667178948742,0.9050871140802416,1.1333531678019866,0.5641815910852888,1.2314108628696017,0.6330373542658404,1.8237430891223743,0.7374412534973219,0.5631450635170164,1.688929080619135,0.22623251851494086,0.32395009301764,0.7702198961268932,0.08215173195488554,1.231232672392933,0.3758000854287413,1.6627279074591488,1.165675536136663,1.2693494476552936,1.5182335680863226,0.4834514982983303,1.7788989581495807,1.7675613026096868,1.2205531411806911,1.0614569847759487,0.0031865438974497955,0.08795243704135951,0.4486287691423152,0.8227308713060388,0.4885094432305277,0.6334570977532352,0.281080444444813,0.5366919881872525,1.5464500674806883,0.2733548703812838,0.5217791833107392,1.5682537335134417,0.20457013588955952,1.99788189290805,0.1577909132886869,0.29161657371274935,1.079573544078042,0.32619950548629023,0.029498657660166336,0.263343923713425,0.25379829744946136,0.20039355598419362,1.2052349202681871,1.2910104823097697,1.2298263222168815,1.9214947429722138,0.3692184509981917,1.6635209026088293,0.8111887840471939,0.09450955214009707,1.9821363237877616,0.445054272701629,0.5992151555963984,1.189260247166643,0.4631323642508686,0.34596334856984057,0.9314475427087415,1.027449598769774,1.9587786416396917,0.8181653500862472,0.2217640825345735,1.659112027024022,0.614882586625728,0.7499431036845015,0.4506816497237966,0.5555996390807686,1.5961646222212802,0.727800371319204,0.7159625100627579,1.7078738690215245,1.5429859875236798,0.9712830148894402,1.006028767603671,1.2566126477171704,0.04697184949072355,1.9449140102351408,0.4232295760091438,1.7495660226799248,1.4734701287219747,0.4106746833697568,1.3246995171819997,0.06326410285793473,1.8250783957283683,1.6770927082674234,0.41341147552716256,1.24260541592949,1.6900552598089713,1.0500050894636952,0.26784841811172494,0.3440988710841286,1.0347701687496005,1.5876658681501825,1.7432041415012118,1.5202072410280554,0.9109463820396378,1.064913894981319,0.9862472766504562,0.1388312301248214,1.776435253107877,0.6148966795098127,0.14418226219711838,1.093722172921852,1.2582289423805149,1.5019550329088915,1.9480961023814098,1.2882979576628981,1.7142975418028632,0.9191687144833495,1.5924945931570367,0.3829538092521817,1.1944165287377684,1.8442067963614777,0.8785145029208024,1.815204421063313,1.6787222596206213,0.5275242268459939,1.32468646822982,0.09764349001952155,1.251455387254651,0.6366646629890507,0.6238152202597438,0.3804974970791855,0.8601581966009831,0.8725702712699098,0.8917204771523878,0.33662243771195244,0.1536883138532453,0.49508950968180393,0.8655376510021894,0.6239148409231167,1.678451297402222,1.0259036744544918,1.1789346812013508,0.8568076807022172,0.9085650756322214,1.8004809433480284,1.164787262837847,0.5234409838949649,1.4533320807759516,0.588730414717607,1.497546841646839,0.820674731262626,0.5659458428923011,1.4833730345122218,0.590014282106854,0.4094100128314396,0.8896369163049554,0.07302950802649934,1.3183972227251906,1.2425231339012857,1.4251035229748241,1.2452058637605008,1.686009209325981,1.3947254065691168,0.11447729171272215,1.998697322437117,0.30662752035116797,0.023144409900107694,1.3476940842149534,1.370919781242993,0.6874206444468096,0.922457752449873,0.9882070272494419,1.3755569867140587,0.6609067157973745,0.13466607809738684,0.7275186795369948,1.028294926159602,0.7137117388113204,1.460915525007177,1.8602932808986763,0.7593767284717445,1.773082083824401,1.0712655435483738,1.44034865387431,0.43921953275403897,0.69988333562785,1.5919540012325468,1.3620385078655437,0.7086152784574582,1.690879615315431,1.0472964469002748,0.7663385405958685,0.6952868487435577,0.598996822166895,0.03547541305529461,0.8193710849618592,0.09933927928414625,1.4536212973086404,0.7693540399674964,1.405830267675543,0.941472059401321,0.7161111426461629,1.69135105114919,1.4699155511250697,0.949981578813918,0.6645894059222921,1.266671227595975,0.14272636933638827,1.7143554940041157,1.5687725392926175,0.5181470955598033,1.4352729134179925,1.0149435128768831,1.110944688219599,1.0461725809943834,0.6573380057086012,0.5771710605975824,1.557724631349298,0.9796622815001468,1.1987052183944882,1.1096350858470647,1.38147875648451,0.6626441696789864,1.3035473430822124,1.505884614147933,1.669299217157207,1.924805777800032,0.45752435510212275,0.2874131158965357,0.23989041270786898,1.902625881667529,0.4338866034860039,1.3167194727150668,1.958820581774736,0.6010603447426472,0.7565962212943146,0.3721211607480364,0.4983559523297926,1.7342922302852002,1.6928658440413864,0.24374198148979626,1.7201200126964782,0.3857441386093631,1.3923783874297142,1.5503598558963543,0.5171620215540411,0.3824940598714349,0.275361024821258,0.037518992876938495,0.10363633749507487,0.65401004832575,0.7741970289998243,1.8868423079499492,1.745148271917544,1.092427643741725,0.5405722267552054,0.47083757966925455,0.26372781023628167,1.6396350540190867,1.38540038648758,0.08055795339959777,0.7821000141335983,0.06900224848299105,1.3634662284081527,1.0089221420689973,0.825928262426218,0.9980381062190234,1.355675868586509,0.7727263697761649,1.703705282882251,0.8646584738185051,0.6768588795538516,1.542099054692799,0.05351841355207232,1.8701280964882985,1.0830312761423817,0.4958694243831718,0.2528243991731412,0.14959833062764546,1.0758954481227807,0.2639867268533414,1.4926981452384716,1.187399220007895,1.8109512597134618,1.7882064945194187,1.9015079635488243,0.4033389295427324,0.42062910212311727,0.9594440168676486,1.0645306504581826,0.8030845937979316,1.5128114567532502,1.418023951532439,1.1532543644577482,1.3303041261738744,0.7154046055480592,0.10941854409156537,1.548667196469952,0.5466192359723953,0.4991646962375012,0.1689504055328027,1.7484416338464877,0.9365544165103306,0.1364887372035286,1.1016962498697682,0.5123218275266571,1.4118955452618243,1.1016228934376078,1.6260569035706132,1.6084696117153445,1.1940879792712327,0.059022859040520854,0.7844258950683026,1.8115810469958826,1.6429733888656468,1.8412333439964896,1.0025264367803277,1.291484230515457,1.5798386419883759,0.20815870436887018,0.5766747058046208,0.052461250381178604,0.6131415485993351,1.272562812757908,1.2463084680243923,1.1320370609132597,1.5365467137256914,1.6739787665059378,0.33506182010147145,0.13756584114218007,1.1544440636420041,0.10416467480451803,1.464995823613209,0.15082121160012152,1.5300611597293297,1.034345016862993,1.0508009625523596,1.082491679804598,0.15569610192968095,1.3746486569624343,0.454817902704539,1.7307744761911856,1.3227898272862677,1.5696828779627117,1.1807743434936906,1.6105461977772306,0.7612821984894002,1.8853832440662888,0.6814764501590386,0.7398178426104177,0.1511319091661162,0.3442531338724239,1.8968198895228408,0.9717086841300225,0.30279258440439366,0.859170170368223,0.4286121161277798,1.0482525768659254,1.9546814695658252,0.31790663741247954,0.5408552988977094,0.6756904903187793,0.9194644461265301,0.034729735400467865,1.8042468979638182,1.0086983495856208,1.7997633245508864,0.042853573641080146,0.7304517050241107,1.744969939793809,1.50444753682254,0.9646046060106218,0.8956782015455607,1.4422986116027732,0.3831123904024111,0.5445014882023058,0.461239162827436,1.1879665552992027,0.47819773232318963,1.795934395554925,1.9163569031245595,1.0095094390335693,0.2741018138720797,0.23613951237327224,0.3481948315878106,0.6911086922876705,1.3881005185716901,0.8558581109635687,1.575940969983451,1.0121583838120245,0.6054120872343215,1.2599836170054846,1.6791522233846397,1.240515200467503,1.0555941687826975,0.5611660763828725,0.2072062436277848,1.9887987640655083,0.35635718940738914,0.9844381591809587,0.29359775208397304,0.0684443614624565,0.7357496410359726,1.2991976265645302,0.9308362853961665,1.3338330041575464,0.9799040284368105,0.8095818100180225,0.722439013414625,0.05120869930423487,0.3146689995764862,0.7752452780309403,0.7047081025495342,1.9028046603056161,1.271949147050419,1.8183690178670906,0.9392918241742838,0.9805460726640658,1.5193602774991182,0.8820523645454883,1.3618627327511958,1.0791190387622915,1.4203305105575486,1.166378891262107,1.933429374565427,0.31975708124554786,0.7124883464530153,1.2630547520469244,1.949707812879746,1.1103025165293858,0.21249711223581394,0.3334286984016787,0.6390480354518769,0.38976611718282,0.7977072313409491,1.160780322016404,0.8627886016586138,0.26874123103906994,0.36565199750671756,1.6656614752329715,0.013415692391787139,1.4997336831897992,1.5881613906002543,1.1566251476480747,1.2961499045399032,1.7423731463911405,0.37925725106797187,0.1710269800692848,0.06749666604251593,0.9235333611001186,0.8056675914123052,0.46589776009231376,1.8632172494733463,0.8186210316278317,0.46409354332018987,0.46805229568652784,1.1883892950729793,1.0369935248593458,1.709284444295865,1.0328484983204547,1.8772618630051698,1.9652035837967565,0.636172276959703,0.415742223316881,0.028142134177633314,1.2442904808773518,1.9270696341281308,0.6335913777559953,0.8977377214339023,1.320574371197315,0.76310770069954,1.188213167554416,1.2138371586628902,1.3992149110613112,1.380715591317976,1.2871221027890047,1.1091420342349185,1.156284653590499,1.759098055093685,1.8064945019687737,0.14220327637559038,0.9062240467914968,0.7596707832100201,0.3480884053476598,1.132146747302549,1.2361666647766654,0.5602857402442132,0.9482460596066967,0.4575439296179008,1.8923760618055554,1.778198791492995,1.5368680265222188,0.8797175434091163,0.20795549588910373,1.030471121604279,0.9830712584018673,0.4898963539422456,1.597641551959347,0.9293940625321387,0.41266879454302025,0.17895374389367075,0.16323605377485334,1.8076116080886326,1.126430165049616,1.0673766395257973,0.7691732375113212,1.977282081164161,1.1676555577604626,0.5200262826146116,0.6931590616639719,1.7813483542547985,1.8772652227142348,1.205566027739108,1.2723024828619631,1.5395671421798522,0.9638032977187468,0.6591878091537076,0.4085951486197854,1.9719832431323754,0.07049992897242191,1.7271224683725117,1.4145595295064026,0.2455028350059073,1.913178377352363,1.8196991499076167,0.24925077738164048,1.3265205932850888,1.5255833507444434,1.102171963416018,1.0709709794037263,1.791066633601838,1.5475632257243177,0.7995415255815345,1.1084657806067664,1.9407774597350758,1.8109194918618619,0.7079223387849242,0.5707672458509878,1.4318124453440193,1.4028528478946967,1.2545520090407771,1.1828963852670094,0.4054157906502155,0.6805723574612309,0.765780867796272,0.5118486023406937,0.00955445096357,0.6523496917611558,1.4936501993542468,0.9258690018057246,1.2863923156868577,1.2530747011809193,0.6290133098688664,1.819323247618914,1.4703861534371925,0.17872255346644775,1.5583193390054688,1.9539419297271765,0.43853687082429427,1.2118932148478632,1.0091319809318529,1.108926787210625,1.7794446955833259,0.14172702639376414,0.2988598329128171,0.5722339737573298,0.6587597362264928,1.8107929065445478,1.2494174520784629,0.903856593495823,0.9173155268214431,0.15610942817308804,1.2531170096235715,0.7275110501670791,0.6206049260232916,0.30579954478594973,1.973546737088613,1.686561354036628,1.751056831827361,0.47382646249970345,0.33030163780077704,0.8076935159758353,1.6267100217723671,0.7987752762165874,1.9524266642889616,1.6325927224270087,1.1626938134191906,1.3247560261564033,0.7808486086227621,0.7485860663373433,0.21825847126756726,1.7573491663280796,1.3265521830382503,0.5400603412020192,1.932802956108266,0.08496902642598587,0.16594840499345967,1.3759796387824736,1.3984640858960318,0.8789904456473728,0.4384234964584797,1.2712654969814918,0.7557933269576586,0.32627663104385923,0.32947723022112013,0.6640120599092504,0.05835898194085657,1.303769246686056,0.08076450342569225,0.024432011246100442,0.5276153717311486,1.3039666362758546,0.4734895301841738,1.216552796130502,0.9994985864690229,0.24115589555008518,0.3926563114908127,1.7502794663677175,0.6776087063491548,0.5793998626337802,0.8637146391311638,0.7466578578673336,1.9366940016471206,0.6417657084126609,0.9836024386243796,0.6610599907943845,1.4879413228952107,1.033696603264518,1.391722186403894,0.22382457205690115,1.109329612939311,1.6983831473127105,0.23886447188273235,0.012467289747147885,0.8101355762722593,1.854856161222947,0.9130329825751835,0.731154687760434,0.9535725738294785,0.6062640582477701,0.78325116453927,0.3027190913457289,0.053151261738754584,1.980236093738708,1.5527132953887106,0.21346869742664484,0.7280941570327959,1.6034334477355072,0.6299828448818774,0.4106449386416385,1.71724664725674,0.24423777482213038,1.2765777180376767,0.17876485245063856,1.0405605651180516,1.726026914357896,0.5125406968896475,1.2263133998871665,1.3560912529226008,0.22810774970009964,0.8725388221909659,1.6050113403800097,1.2562060722979775,0.08861074366670502,1.8326283391340592,1.5187131293787537,0.5417752597756196,0.03137872657908696,0.8841559277864967,1.992444623489825,1.5918257756632297,1.1789056798711677,0.8796044307923021,0.22087818907943196,0.2146786270764681,0.433602790144757,1.7980258783904877,0.9832280324979171,0.6474267500878615,1.1941743890264627,1.1593969831223347,0.565292225826903,0.5484590594115457,1.9122984927726565,1.0333765620036872,0.5699072643243295,0.6776691765303595,1.0472240663913865,0.38305809028150806,1.8631116123140614,1.153855137008957,0.7729423184548375,0.9220067685865458,1.3172291688987017,1.025958694618248,0.7570923759839474,1.7837379842917414,0.5172607971565596,1.7435631784738699,1.8630668180497862,1.7407101508812297,1.4272645685141863,1.7317046475618016,0.43778254255019733,0.9638724456262097,1.8474110010408449,1.1685255699740729,1.1660292119321933,0.8296396153339279,0.597336072326473,0.9935714881056938,0.629263107121013,0.9233159150729907,0.08646671909199888,0.06423598667704347,0.7486775941941015,1.0460374467096751,0.3806230153093057,0.9965182982144869,1.1173765501102404,0.9302019831975677,0.4551037206650455,1.3190373244316156,1.000152101616062,0.8154591615850925,1.120141860453224,0.41653482971618433,0.7958532225141492,1.2142318405244161,0.3102509869656718,1.0440277517791545,0.6176845634255229,0.7081049591607026,0.9671867758225653,1.0161540660995632,0.8528332572004279,0.3955678148193962,1.9618151533532147,1.9108191588963799,0.2896250012074142,1.8339501274761143,1.7761459653796294,1.8357904700285128,0.6295624235411428,1.6238113008014305,0.49995771200498706,1.546379550973783,1.4549755280348853,1.4314431481047274,0.12949885920643084,1.8195857524761605,0.3410283050388496,1.8886304265558043,1.2390128980504707,1.8631441261537947,0.9483013481938866,0.8693888919995336,1.2488436633739037,1.8006185112887947,1.9446481764137111,1.0953751917535106,0.31475600487165817,0.47353272326843976,0.6251795969854963,0.4548951917642631,1.5558595108129996,0.24096525008708772,0.262239095710696,1.3242607164201268,0.270221834374672,1.5469654341027388,0.411752808148112,1.6433462968829657,1.230506568886135,0.34274204051668766,1.5698584607154726,0.530921059200088,0.28879136366493063,0.7151261410903964,0.14859037574674527,1.7607840000844914,0.6134601993741775,0.2906588913675692,1.6593421895813856,1.606703689517609,1.2975067166088616,1.0883926396998043,1.3085617862251393,0.00013290777494536914,1.6093559455090223,1.6564979675288922,0.85369395468309,0.5356125578439113,1.728802480026192,1.1364522010726485,1.8764729226595778,0.5946187492994539,1.7506547722881298,1.5972607526667835,0.8855722524777044,1.8992228789599208,1.2785489526546097,1.7618184531390477,0.214519691285225,0.6209245858277505,1.711003990416977,1.387247830273372,1.3371991053131416,1.4715676063648337,0.5993552965569919,0.18246389448004682,0.794768093598419,0.4833952966974669,0.5389302471876373,0.2749263389583069,1.0368008862501414],"x":[0.7888379824345979,1.9512727287585516,1.0478480740760114,0.5321219161694628,0.7050788069986278,1.0400274294995675,0.1779040848975301,1.3471940520020333,0.8993965586112788,1.4302943529868188,1.283990438859745,1.7371545045516414,0.3702407032061448,1.2415089962280839,1.6198191534345965,0.5255107031741572,0.26916950920792726,1.5899282039412204,0.47797286802810524,1.2836534408946132,0.2681870493761888,0.6708163882529895,0.7377068457046738,0.31285273155177745,1.7786797202670082,0.07852483425522314,1.245329012358083,0.08447060535312773,0.012628757006270213,0.35055077137353474,0.5204185460183406,0.3436569479526355,0.762539224666578,0.9306324542206461,1.1019800339944361,1.3982048994428777,0.26044610692372966,1.5695621030904623,1.0635616632211924,0.20452754080032706,1.139261817644341,0.9801853596356085,0.9824859499702419,1.4443710733350887,1.0568404955459136,0.6193694136710105,0.41085900582496365,0.002732380627313887,0.3388279068598198,0.4235643055023084,1.4654808286608558,0.9566899590743614,0.31187851112516063,0.0936152938749841,0.5581971157528168,0.6470638802615901,1.9375075501439216,0.41653387060356717,1.1333486386190168,0.3120111207699616,0.12468255476763944,1.9425951752622763,1.8626315777862166,0.9125440251670996,0.057936756160340414,1.4668265205744533,0.20633764873918473,0.10404439371924185,1.133636522665873,1.7797184543608036,0.49864518198314767,0.94172611467506,0.44998838050710716,1.0065014780098076,1.5065831584314795,1.641793932103334,0.13130417206538578,0.5203651891983648,1.8563253600160865,1.717939204625033,1.8650161212360301,0.09939841451524915,0.9555043439986437,0.3093640217842472,0.8308798758415583,1.2422851273742135,0.7252724044759258,0.0720880709392899,1.5264407107906133,1.1566339782111177,1.9234139640761998,0.5459308045921505,1.5303419210279376,0.17876073888334287,0.5000847998014476,0.8353397855808257,1.5138055432272954,1.3771256698332743,0.007510386644211003,0.21026789197117732,0.38292990045857583,0.2191140989699386,0.14738472870005498,1.0654933742902009,1.747681497444181,1.080952021382207,1.4256637745165994,0.5130315497913827,0.15222524263280113,0.10254001841002959,0.25245443172894455,1.4073734921295333,0.954650583617204,1.4038008164569107,0.715977726799659,1.9858090343619215,0.9217426405197637,1.1985580390448418,1.462419403958616,1.1450417689824661,1.0114887552082312,1.9691555299764645,0.09380621156168961,0.7173773686339822,0.8422280626194437,1.7160458572626835,1.2990189167852446,0.44955642487504427,1.860915305955036,0.5817589402053914,1.1305105540376603,0.9726634781265019,0.5146756379468302,0.40389808200870575,1.4154911063970153,1.4402841416953802,0.90093345171675,1.7506585495664868,1.317953621090209,1.723345938656017,1.2748052525934648,0.7678379261711351,1.1662692562737362,0.4558352624298301,1.2037255298399026,1.807129142493456,0.2860570309263252,0.345010151853945,0.14818420040308827,1.3685936609417821,1.6113910657322674,0.44233259540708036,1.5681970849175424,0.14540690545450904,1.3648379595633142,1.4151401364196543,0.6070852544823093,1.2892768541348343,1.531972170481153,1.9317269743517744,0.25341125548152277,0.4003505614254447,0.29214239942016823,0.8808033399854367,1.5069592269093552,0.11569306854913877,0.012851761847047864,1.4115374664845017,0.19007511587419965,1.4084938857008615,0.2506305146493991,0.3272552815138248,0.35074500739449493,0.4467476237755041,1.766110225379264,1.4507459126517206,0.9488702273366421,0.7066038861868376,1.0369515112852936,1.0716058396732018,1.504015100322349,0.5485357333631943,0.7992673389218159,1.8310610589350291,1.0183648054397525,0.42217824439936097,0.8289812460881809,0.30600589527118055,0.1459331187967224,1.4791243066979431,0.015810646338579804,1.9526858294853184,1.3586862343881747,1.3606031552995677,0.9774119774757253,0.3525753811232642,1.570557880478315,0.6543332505417065,1.912391849066386,0.4976930610313534,0.21778691141432605,0.10543815367597759,1.5276154913597584,1.1273888882775078,0.014917339848595883,1.7803863326753868,0.7127966465871229,1.4486931741013724,1.3310474998953878,0.8268898172322973,0.5476330699536813,0.36488496443646623,1.895275789702392,1.2711523632938204,0.22459301928897213,1.5990134686044042,0.7148117501485857,0.5081033117732613,0.536663131349239,0.0170029564200351,1.3410260649445787,1.5050580991654183,0.22319002228064339,1.598265005352513,0.7568194683415584,0.13121407252428033,1.9879794784424822,1.8051688917187916,1.3232647454138813,0.11042395921452483,1.2750844137026245,1.5939305560081305,1.6168914610892073,1.6098300731031345,1.6930808046331416,0.30512936289253134,0.831823426820188,0.22211827609521229,1.3158859173772999,1.5187596337403255,1.7301743620352499,1.6492439665700738,0.14798682616457495,1.704661611581164,1.428167572702417,1.7374301533575272,0.10751252141213595,1.9281469632453374,1.1852789948945333,0.023983133349257637,1.116148945772711,1.723930275444705,1.4916887798327736,0.9282747797358369,1.2788790818174454,1.0259846282124037,1.8409703562598614,1.4425724837570204,1.9308563792309084,0.990146709310919,1.0344186101305666,0.17987509875337324,1.2331394506374027,1.1274759019424652,0.36176444489681153,0.11041706810061767,1.1822515515829832,1.8549716898458357,1.6160872159717377,1.4167766667620225,1.939876397950227,1.935733989063051,1.1640747252270132,1.688423503308447,1.819538301539247,1.1858569824119498,1.2085836735182411,0.4705765827035728,0.7618514061521331,0.35258863074610164,0.8814683535947788,0.6384032184003969,0.5916213222546292,0.4813142107632516,1.2060347305830226,0.8514146688156324,0.02317735230757418,1.9132349698361306,1.4124433020509262,1.1052751815980912,1.7550775932860294,1.9318995062218587,0.05563811119131051,1.2940770870986449,1.0182433100759405,0.1603777145094143,1.476880665968494,1.3127032681853583,1.80246310839153,1.8008424836862862,0.47916886209940457,1.4263748206331075,1.1764921309393352,0.17024235442398628,0.24413964042204436,1.228131860664265,1.2355416138966457,0.4237534097090802,1.2227221493200626,0.13877162616238256,1.2456052554862318,0.4991172561974457,1.2670466818636463,0.39721351447380365,1.60027876579117,0.7327580798350821,0.03662279996124451,0.9164553060417479,1.9790641888519223,1.0235993648512856,0.5755717762662292,1.3431328266351923,0.05877465752950549,1.3301883174848566,1.050810686453568,1.1374670750654716,1.702538385722666,1.704346328514067,1.938043012007145,1.3903151584176545,1.792056224360878,1.691215748251342,0.6100901657724876,0.4127330545728616,1.422110472445738,1.1132649873116542,1.3539611961446114,1.1284243476958613,0.4473713304700954,1.167489293697444,1.5189420869913988,1.3710421595369688,1.8947426821763353,1.4832621785239022,1.1082757806458396,0.06587219895113398,1.9283728576916488,1.105895720494135,1.3717661049408303,0.2921101696116469,0.7066873387390427,1.9215736439519042,0.7817398995550774,0.9216596063446513,1.705176569848609,0.683328108319868,1.639518621611091,1.364580776505415,0.2894968401626297,1.8535960646229566,1.3320000624922579,0.47060585683107886,1.6051048896396243,1.8449609483810594,0.4068041253787678,0.4436612363530752,1.0485811038077277,0.823005087931094,0.7518635574082181,1.760610855298889,1.5977583627554426,0.819460381095788,1.8550759235532877,0.6229945271118129,1.200181097766218,0.08758736430248094,0.15034157295209868,1.6606936135761023,0.30214312376459346,0.23409947400001538,0.41711590423999095,1.6174401234186886,1.7823187500723032,0.5287846067785728,1.5291955614064294,1.883313691883125,1.1554662756556848,0.04588705145890998,1.703901511631165,1.8374965175743032,1.0779221476488894,1.8192154269314291,0.12727114511540938,1.022442166226755,1.7658629450564143,0.011871828198082692,1.0156920331884698,0.9779489720960394,1.6645187454921384,1.5640467745836162,1.5087494154452559,0.2732975471506845,0.4870769710013043,1.185531443742127,0.6196410890102972,1.266026960072599,0.9463042847254782,1.861401319558915,1.150852930978254,0.977670178243176,0.14641973143560746,0.4141222003357063,0.681464318597725,1.9270055663059886,1.406099417699642,1.7216850480274337,0.3444057836458242,1.1008204955103076,0.915360684747989,0.013360660717455798,0.8276247265219804,0.7042479639023004,1.660379494641067,1.953042098155497,1.7005004774253119,0.12087572299454158,1.9029781485109702,1.3330907057446737,0.19204308669030215,1.5008227271035801,1.87985213576209,1.553640407217164,1.5245643438576306,1.220786770140687,0.19126130471918318,0.3122053626970527,1.7726024217060252,1.2411378920808211,1.974252833449153,1.552477445013627,0.5705792954147169,0.6846808770758821,0.09004697290504832,0.8312881240441384,1.721751961548094,0.2393376704850787,1.6323938643973763,1.7144856416259942,1.0847209689696313,0.14849636990600706,1.6989850369922932,0.5477936676654633,0.09301714845723066,1.340986776436025,1.7430264962187874,1.610333849747599,0.750849401455556,1.594349268207896,0.37118244464252426,1.9696057369758948,1.825015122097307,0.06511763430047439,0.24541763842565703,1.4623611981709523,1.0909856047465663,0.502841379071763,0.0768068837171891,0.5055628295286938,0.3346316553096702,0.486467983579701,1.2088209374301782,0.35708480338053034,1.4583470737782855,1.1356589089394524,1.0371913180883028,0.06579823279410249,0.37998865340421334,1.721552598497158,0.5961201092338948,0.6228168919892881,1.5579611387830024,0.11963725932367601,0.8332721009102354,0.7876953698818612,1.9883643685680397,0.7544245414190838,1.5589534483329135,1.1581190867902094,1.197402327684669,1.7888505886146844,1.3499612829744219,0.6911840896012982,0.33582585262759423,1.9969275214622229,1.5440934098541472,0.44712056617871837,1.4666412969694695,0.768076921360339,0.680799716958209,1.4162786662000975,1.4905505239292856,1.740993946619189,0.4424092702629893,1.2155922683424247,0.24519866136212323,0.9960164496895628,1.4320427879137991,1.621587650989317,0.4354905711312407,0.39756162890317837,0.17009889290576255,1.3646959222080737,0.3624702714492175,0.5267228464443058,0.5943788534776552,0.3152746499825017,0.09322946731480206,0.7802173201769557,0.9158288129767836,1.0283741911004018,1.8652986483241873,1.7162317210091118,1.074351926006604,0.8464896628764524,0.4883633470596721,0.3032749135450064,0.8298017543589726,0.8820363427139216,1.3531791569906606,1.3812769844830919,0.4495201767971025,1.731117883938211,0.7194801315697182,1.4702920206295003,1.242696432031173,0.6526765799545179,1.664028590254459,0.511275571367056,0.8992919661579881,0.03331070318153378,0.8535016462355346,0.4539347203603604,1.8319107484698247,1.049683774052973,1.5902372113634216,1.426103793161398,0.9285072515947569,0.11571255716623438,0.039520033562993134,0.22682255411115607,1.3512193273047979,1.73294809127622,1.971927181561685,1.1085489286614159,1.5523251382858452,0.9701524918910492,1.4001993868451728,1.5303058336642938,0.9179100814662112,0.749622169942401,0.1649245837866876,0.9459301770312213,0.4535651316784877,1.2803078015996046,0.18874268894265278,0.9866011409981919,1.8772369954403365,0.483767795600546,1.1626353562738179,1.3404952245509265,1.2059314444203537,1.9957990657739317,1.169788420920387,1.10634554307161,1.356488642801752,1.0738448973009196,1.7775745473771587,0.8451046291909793,1.86167765761192,0.8424176640521528,1.4304586830209323,0.49288343187347383,1.4228751677381106,0.4559941228038506,0.36340540944725236,0.9403170411458676,1.8489280657020473,1.8147952438622676,0.13180748470581483,0.5889175131646206,0.2819949990139391,1.248658102067421,1.5813520825005838,1.3458065861447703,1.521301466808332,0.0944147111350671,1.4741725402929882,0.5153650166729047,0.7242984129828254,0.1292365914114883,0.29382056984850424,0.8438042966744226,0.3001322822513289,1.2982265601265472,0.2942947000180518,1.0421797891847084,1.1126148606243556,1.7432038773839784,1.8013046996205315,0.2893310663478304,0.41289279090687586,0.726104864777195,1.7926300556355153,1.6163869501511163,1.0892386649101493,1.9928256481134445,0.24241211321131195,0.7968698792461166,0.34741715729692224,0.5159256981218268,0.26739310234360775,1.2843019873558936,1.2049963626332085,0.5484627280227719,1.7335794779794682,0.09898681445074871,0.7635279304372425,0.14432900198119972,0.8713690016094802,0.5748958912682748,0.7465594152924964,0.3688688727525004,1.5880618665934378,1.522274467598647,0.3058811964150731,0.032853286998130955,0.2935154051590677,1.2320416718904024,1.0597914815382434,1.8471882853078674,0.9724827491732079,0.5441011368932199,0.49570171315021727,1.7286382230419175,0.7632467092350664,0.08695261099583143,0.40583832113112595,1.8251654827225787,0.011603697704882707,0.998153964102492,0.46014366965970094,0.4661938508525424,1.0064193415906524,1.8669105634960057,1.9015376178972754,1.8648847014969094,0.21307061707054842,0.3280786726348477,0.09586582999368308,0.05505438075024687,1.814582308435363,0.5229177016426793,1.1194131362512962,1.8355005910421045,0.6907475485166455,0.05091307767142556,1.333957975253555,1.916190248524809,0.016882788166602537,1.5266738497621746,0.2271530304472364,0.3139829564553677,1.254296680028063,0.9766370014391595,1.1696319531662958,0.6824662209087374,0.8069609761424186,0.21677913078447797,0.8420626670179352,0.1379801080417321,1.1756029413019382,1.1487091991366611,1.9710881815489607,0.553074789189928,1.1538581005940183,0.9353298615953031,1.5344032531883676,1.4099853888751976,1.446656514462829,0.5032342383302153,1.7898986315663967,1.037186583323153,0.853866215922043,1.7079967701163805,0.8330812445269721,0.9275460138779019,0.928227932674478,0.6321761087251044,1.0671411092668062,1.9857711841252337,0.2949432539815313,0.8574798498372499,0.03143259691831235,1.191097748275083,1.4964505940694137,1.7122025198882884,1.4824005788035128,1.301356763051654,0.2220264015284835,0.260315206721784,1.772059663114914,1.8081760714405106,0.26205347073119123,1.8953869580748695,1.357242642587127,0.9695548128691683,0.09807686099827218,1.9624210717985044,1.5579326965161768,0.5400871116865609,0.5358288847988566,0.4362420776015174,1.0097315158117952,1.3634065479024904,0.33551422849643303,1.252139209207521,0.32439070465582753,1.40145051075265,1.6752098824283166,0.7900050610036575,1.562631681092373,0.5602513558626441,1.7021304095682288,1.6440145756121942,1.9175547733141525,1.7499610008383366,1.6360190620160964,1.282621481351325,1.0104532283067873,0.5555146786160515,0.12383092402748523,0.8014127278515316,0.3860031270657401,1.383085637024996,1.6536814839115643,0.043277068393071265,1.8221205591055032,0.5582812235994674,1.503227130411777,0.7714438310674122,0.6394698183834445,1.0548398972351059,0.9258804830154265,1.2648320378592024,1.3789769729254504,0.6915571763182151,0.7332059435748384,1.5575838120773091,1.877861733216902,0.7274873948431424,1.8029089994693712,1.1589081388602793,0.3715498095954514,1.8335650317184125,1.8502653043930557,0.47454600128858937,1.836214408018253,0.911402829811964,1.4344060263909235,0.8615050684228437,1.9768762896122374,0.14442799829627173,0.3579828169701108,1.2568018444475844,0.687756116394276,1.913286248591933,1.0005540138509452,0.18440601721537106,0.27868168465874965,1.364944962517075,0.35378458195475787,0.33421430374638417,1.099898977074688,0.06735372888475989,1.618877895314484,1.832155917923533,1.46683001287673,0.5969842842573826,0.909177061602797,0.28149539071683827,0.5987739135548815,0.511198171798521,1.0047259296126863,0.5974733936136242,0.304553103583352,1.378395812969988,0.6063687429414842,0.558363900132229,1.0870886566834561,1.9840465236665494,0.41051489378239564,1.1814850892592739,0.6855955556144404,1.3546921834747516,0.15833641441246862,0.40913632410700723,1.8602389351381041,0.058806430673035114,0.8596938859934002,0.1659602770114068,0.8561607867058619,0.9676826903356371,0.517706052778755,0.48858219614133086,0.5691687102230254,0.16108269851151283,0.8005656440282051,0.7504467526904258,1.8259745418719173,0.24263990654311482,1.746586410642032,0.41205650115048176,1.9888652582987612,1.7573070433631313,0.17200213441273873,0.5563658781166617,1.0609835482365895,1.4664578405573532,1.2425280056966355,0.9490658616068971,1.2385733510009498,1.7237345136860214,1.7745722102186625,0.7820619418588018,0.12507151789014664,0.81463068519034,0.9482207555304752,0.5335692852472871,1.388488305369023,1.4197577303846616,1.7504969757053597,0.14186294584783957,0.04716937694291066,1.6422412945887608,1.5748642822167105,1.0198370639378436,0.489986593641018,0.6509373420480318,0.31856504452431234,0.8130116292271817,1.8043644955524447,1.6032742373402253,0.8468014011378724,0.15473881088834063,1.163863984660249,0.6753883283810727,0.2912483302347177,0.2580153701433682,1.982798898194144,0.8925213257682052,0.19871493662541623,0.43390750647082704,0.601881280551984,0.43046011725363736,1.547051212989257,0.9798154827014682,1.147319452188145,1.0834225301810645,1.113059160193075,0.48433632567540585,0.6920543883344962,1.9901130328978087,0.23880055219994192,0.44682956522542233,0.5429612280493875,1.88312559022234,0.8494404728290149,0.380269251051491,1.9006894758096136,1.1649601055662349,0.512630240908735,1.002312502980602,0.16640623416761727,0.04968185590680399,0.01537979161191201,1.3481867620012762,0.7648405906935406,0.05070975973712208,1.0606084146094092,0.7312231297105816,0.8780784123219129,0.749581465250076,0.5221014910709587,0.33160861294594146,0.7430248385932168,1.6624970492282127,1.55397334347817,0.22961050493323626,1.9056452086112339,0.7360518213431203,1.8564850900398093,0.24494080848382427,0.11887201068426562,0.0068635169639749034,0.16083388189412112,0.8981290862665616,1.7910610823819062,0.3532993755473907,0.015768219154609894,1.7426802095651,1.9647884395490678,0.10088124361955375,1.0219089118983176,0.1977260079316214,0.6616300382362018,0.1165294516718465,0.9323990623274425,0.20157547856479377,1.5146161441327448,1.512080615530583,1.028106400205802,0.8512650548042092,0.9611140941356994,0.6413280523942407,1.2597390269194577,0.020007883503417322,1.5976374695864988,1.4620730887614548,1.720174353739163,1.8918637618805445,0.6838335240405051,1.134355476945841,1.0513456146867877,0.6217200995860016,0.5338290812638259,1.605182340954114,1.2974955790239098,0.3079959512660561,0.24973772721506665,0.21286360384497088,1.5648272681646458,0.4825390377048523,0.8578108570780616,0.1813593937118323,0.3309936328585288,1.0699793443950243,1.1641515959737614,0.45638057846146507,0.38980606333335516,1.1737709690085478,1.235173501229115,0.5077306533777947,1.306666878012441,0.9118158564111668,1.5703649742036767,1.1340146465353265,1.7606405768772362,0.5710491539320559,1.3132557498749189,1.020219689404166,1.2339655416155841,1.3730251384168164,1.872288993297692,0.37341585490525764,1.5011821905826115,1.040450558306932,0.11739226871355808,1.9511728514798146,1.1240918073511819,1.4502089539872467,1.5095503853730023,0.05253887744170989,0.5934181937693526,0.7832695616580858,1.4370403145570227,0.7642415422131891,1.6569396384316613,1.5054242695760574,0.4393357814576727,1.6912635693510027,1.2408216311287592,0.8480762577696386,1.567089189761599,1.039953065971673,1.554976783481426,1.1233074487373533,0.47480026510581996,1.1928777685181156,0.5509401678413247,1.3693669840653162,1.6149063381424071,0.8286192523867192,1.9696588937838015,1.2727827551732935,1.1614842722782672,1.150569205887336,1.5462214221999606,1.2872792482842645,0.984006222252236,1.6021807643974897,0.17579956795451823,1.5135568889131499,1.9264357740299318,0.9209363814862699,0.27393976486376037,1.0232296408814863,0.40456567637755986,1.3013342912810126,1.817886981650673,1.7875046114318498,1.1304847526774437,1.139404453603209,0.9406653734662658,0.3796807490471198,0.8540514461007666,0.3985233860506252,1.2599284865244145,0.22395211173075863,0.5300895544924925,0.7281483534084617,0.37477916828842245,1.9571605162689096,0.020211495631859148,1.5957018590372347,0.07893956512994676,0.3433758621320038,1.0157912281181354,1.1154908424254435,0.6007315235998493,0.6423651078728182,0.8948351659165791,0.8932570206032451,1.0627593047817026,1.5163818949512244,1.6199298631220402,0.7940402025993897,1.097426451846371,1.1701317430612128,0.9521150941741705,1.6155282444905783,1.213442739949684,1.08071359757994,0.24266719521375474,1.2309178198864035,1.5787840969083997,0.5880199158839152,1.775991008486901,1.8204095374006055,1.374449771395474,1.9200885487697956,1.5847317554948497,0.1028235021774727,1.1684810674096382,0.8703308409028065,1.4217943727175435,0.5002368172019241,0.9358751603155919,0.35885333621747295,1.1109239320513824,1.5793346997103326,1.8348984673754365,0.8643808221955165,0.9225718106305656,0.2236736737269036,0.7628194878974772,1.821190729415007,1.2342019973600578,0.6916487170057922,0.7522467228340627,1.1021084625307922,1.414734107417733,1.4224921262916979,0.6284814299945533,1.4902241459492316,1.5290149802284305,1.176066906403602,1.7648067340650968,1.7443367202248554,0.668261552066226,1.9842765086743672,0.5513016609178313,0.6604827065011306,0.38863527683846366,0.688015210984056,1.1100566353756744,1.7839593115364725,0.005348608610653498,1.9142478856957288,1.3850977836480747,0.3822966189036745,0.778751218463071,0.11193966239354979,1.7952210694359687,1.4289122537967411,1.8001895116759128,0.3041670410890442,1.6401031095124754,1.4393426371863698,1.36365134601612,1.986030442270284,1.642482195601757,0.6358000291004152,1.0173553291871973,1.7059197761659644,0.6113166812400499,1.6696199081956147,0.31618768900916283,1.9790476317014356,0.43967891621075694,0.9028642499250815,0.35695241130370753,0.45990475206756515,1.646504205759393,1.4823554357229727,0.38456962929945965,1.166212635669061,1.374292176446893,0.25947797054948835,1.5700347813680997,0.23503985184615003,0.2934529412780249,1.635675357809979,1.6294384389929726,0.06598752763998429,0.34662372909766614,1.4907368355252923,0.44118634337356777,0.009120375750717707,1.9588244254753713,1.9465928185803418,1.7683753434783387,0.13398852659922894,1.884439764542307,0.9747116033617014,1.7028973525800482,0.9992910366210261,1.992392623786806,1.8343715906259603,1.3636137436472664,0.36213192907610653,0.7284719109246943,1.4297869171075415,1.9914319221984478,0.18120386715324352,1.5595572017783994,1.0673710794557312,0.5632830306384601,0.08256122285547106,0.9531248280531855,0.06423029412775506,0.9429954554839336,0.8695890282840617,1.4111911902431598,0.058862665083771214,1.7129878047778284,1.0891893330366669,0.4200952816025508,0.17481580619988027,0.23657362180478836,0.8901209812290216,1.975613400038568,0.13124375596520996,1.938880326907303,1.8031730321515897,1.8711086291446712,1.4232404117143362,0.808890450607087,0.3819986561671187,1.8281657783924128,1.0994350458831537,0.9901609664377126,0.6479451714898741,0.1790897460240184,0.6306861687322576,1.3646684488796927,1.9105863749471685,1.9191227281074583,0.0571225726326719,0.7991259842832684,1.5480378423657277,1.8476483388136442,0.8648279373625142,1.7248525849319163,1.0125265200030218,1.2773144388621267,0.3613657472835611,1.9980602801665672,0.12650125510930696,1.9067495940552115,1.6523583627815481,1.7690968521960975,0.2526813022081336,1.657156381726221,0.9485972476929252,0.9092548857443964,0.16497127791195793,0.54914730595346,0.6512283023568282,1.032704030590181,0.6517606660174992,0.7927899661008748,1.3044479683345265,1.7101689793017587,0.5445697950616004,1.9224274707966083,0.35557145917086225,1.3055661287695344,1.2184225448731871,1.0850215649538473,0.3233337715735144,1.1607389646783173,0.47378112292999497,0.977741006206022,1.2973724357409298,0.0034442828565843363,0.815244235852441,1.5726898629752577,1.7090348443341792,1.1593971900182731,1.061816283965883,0.7011826306486783,0.2700238908572547,1.2611378554722152,0.774103077211522,1.9735289241210754,1.1402775164568653,0.07671588497410425,1.1980042496081889,1.5168744877348492,1.0939330389433877,0.5961944955673921,0.1631718437808537,1.0927437919727414,1.0565399102207795,0.9328422168664973,0.334728856997646,0.4526770329717802,1.46326293112342,1.6195246007905,0.2535588679424342,1.1504288161125475,1.7301493377335047,1.5915374957405948,0.3192310460216269,0.24541436521191118,1.2811073772437345,0.5122939274247041,1.8310322012263445,0.5213101137565435,1.317396379285342,1.1291739201711024,1.6032950395107686,0.6568458899237596,1.9339893874313696,0.5855713589679739,0.8417624214327424,0.14449565766032932,0.9346880421282968,1.0580296134943257,0.014554949191806879,1.5142262676325795,1.7900924147339021,1.4439417463588309,1.0431330009488955,0.7078952805948063,0.2690899745736693,1.3165424112150887,0.07805352064537313,1.9235127782333112,0.21071297326298957,0.24911540453511044,0.964899378220032,0.5160505906934432,1.0146392745599402,1.6881318883748184,0.6799150124218408,1.3551021866702158,0.8654529554141434,1.2199275215319558,1.359559956951291,1.5416604438902024,0.009550453783814916,0.1429944175652246,0.694016377657168,0.3940013442715085,1.720259812623628,1.2458186647563245,0.5356154714879915,0.2703571882125559,1.7256673449760418,1.599836350199971,0.8987064613316771,1.1116788363043437,1.9187096999644084,0.6584934053231319,1.7756039546188842,0.3513564803140834,1.40093982447921,0.7865810263585452,1.1691488163584463,1.2046181542054648,0.860064144714293,0.5469424274285248,1.0053017655740633,1.4356159010955032,0.675088047279818,1.2308669281353652,1.468627786767818,1.1481102966871792,1.3215121608302274,1.6387325686680547,1.4666534258330832,1.2566421313378622,0.11621830525645739,0.47730907784444565,0.9912245997701811,0.2168432019390062,1.1461934377145566,1.2495135385435936,1.503736896016456,0.22869675281628654,1.2237061786911978,1.5973567032770124,1.3211362833317501,1.096190108319639,1.6636172061449424,0.20587763174693732,1.6117359522561883,1.084800159879134,0.8229131205055292,1.795434676734389,1.8296358815119957,1.1928141247361537,0.6629654998664931,0.13155101388739612,1.8999268294816867,1.023433196622565,0.8159191876438173,1.2755916687549047,1.3032793979269948,0.026571053633373726,1.246373343451072,1.8421852057091752,0.20004527476419562,1.3995521012071879,1.8509974690310727,0.847293835827613,1.5420591180163428,1.4977277151448705,1.446699086422785,0.5777396820069381,1.1384818817098759,0.9673932881344568,0.5851780788586471,1.0690904115681559,1.0112295397884674,0.8885125591934075,0.5863609926121628,0.14151432471808573,0.8467266862742219,0.7292317398618705,1.817819918545973,1.7075125816823167,1.687621446804821,0.46496697994850467,1.9932816906666382,1.112602900142741,0.6270945906589294,0.34169054931195736,0.3463602427975718,1.8088850322141832,0.6772052577764769,1.0792079813117506,1.0353695095396032,1.984423726431728,1.1535590324013605,1.8598348211231575,0.07700040946599321,1.934539674593714,1.143666810465332,1.7302934280090652,0.21586214549225474,0.3121397830090796,0.4220630846487511,1.7701493981808967,1.6243440390394568,0.653747575320885,0.9041427739293358,1.9546440997044567,0.928546449679221,0.22220911328973872,1.898654588256468,1.9070723488602752,1.1984036818004113,0.31863858250608695,0.05510098751738237,0.3467527984951543,1.444590260316603,0.05112909790803202,1.4922941273667896,1.121222125664214,1.005240303296768,0.40881728530540135,1.6046777756977548,0.4165854312684028,1.0090342110606652,0.5695828882475051,0.7223209715886287,1.6614973512961184,1.251806609217045,0.16671273556766902,0.9493172194666348,0.40431758880549373,1.436310228818406,0.326564754224006,1.5355577181419797,0.2776227669945578,1.9667170977337984,0.6712895099018739,1.9749501114785257,0.4412733557161626,1.804757799803536,0.4330789121252772,1.8707287781869482,1.3572119050438105,1.7805030397187898,1.972501724523615,0.9617439603006275,1.3814987123018456,0.03996937088598533,1.14557944782939,0.0414950032766773,0.7767646454305386,0.4516596349013804,0.15593091873886697,0.19626978137870973,0.2418272620511263,1.3536706737069228,0.14251396506606623,1.7179549112842107,1.6524894127092271,0.9348041064399266,1.5288754143093124,0.8731812224098104,0.5043519595522598,1.2381681079035405,0.6149101892396293,0.9404999531618327,1.2301550474472935,1.1868265290010331,1.1525351566328104,1.8958127276794523,0.19686879118213685,0.37978880191045183,1.716141826453557,0.2248452437521068,0.8446358110769928,1.6041792168761155,0.24833979043512816,0.46997292527187084,0.19438596468800534,1.0588810145893277,0.5809892968182537,1.170482397488501,1.5481961056202913,0.3102113370057002,1.5481643713633693,0.5417201650043343,0.4723531955972116,0.35832200088982413,1.7466211645867649,0.9189714561946621,1.4253684079770732,0.6407107257202231,0.5875411741344335,0.04773399201295165,1.6409511214025736,0.6952074855144094,1.521689091878959,0.10749177097806124,1.9827623482612498,0.8593458809334323,1.9733737185292861,0.035108632911793836,1.9331698353427849,0.44478804001554684,1.733945938594804,0.3840068909830962,1.173545082108178,0.5985203879452422,0.19002957152897268,0.057991149193069844,1.703456059159724,1.201689314188074,1.113424915811607,1.8653305251929762,0.17621812884135296,1.6653890965371123,1.7440156693625064,0.9978234562157016,0.06344766865278745,1.8590834532511444,0.6757724775773108,1.5956887523200405,1.4543537786954566,1.3353578593642477,1.4090151528980281,1.991813562910802,1.6265693939702617,1.1600914542431582,0.65880302984069,1.2483496061047528,0.121480412050699,1.4380150506799656,0.7700064084094175,0.8652496188981427,1.6336264115294883,1.443597999396555,0.12427515420831795,0.19902302370340738,1.5871748224856312,1.8340768215691876,0.5394022326378332,1.5067810989140595,0.512116627976202,1.0382080449835454,1.07386009651689,1.1563678062768867,1.9121969306826616,0.8347065102237244,0.1040295632605203,1.04014104914613,1.983235049592228,0.6023536734929261,0.20038023400565186,0.38456556678291365,1.6270708605555324,1.8912217768221524,0.9056403754509266,0.3124280199051759,1.1537718944890571,1.923077637139803,0.50727512441101,1.307157335018868,1.743009569511488,1.769922514286811,1.239989172680652,1.8329086181900804,1.9922424917980086,0.1556936253613758,0.5411629170405038,1.1057948305515088,1.8141294563869093,1.6068972982722505,1.5981285045857934,0.9256783312196728,0.9539210152258492,0.7992499500561835,1.964487262718938,1.4116265420448737,0.34024717653523506,1.4573281846575803,0.7060996228774389,1.9030917975601245,1.0646165913674388,0.42905276302877626,1.8788595610608116,0.3792574851725091,1.9695683569422493,0.7612335659831841,1.5133057590127486,1.4683970455194522,1.6663479792010896,1.1540891694652613,0.4029586353636369,1.05673453991773,1.635320294470107,0.3185005719778682,0.0698169417382144,0.7362852386771599,1.7264732717956432,1.1754041441915621,0.6096986992046055,1.7214943257370128,1.1000902002742725,1.0764294975016149,1.4654101195006306,0.7515868664893184,1.7180209445562653,1.1681631012583147,0.18405692933306403,0.31007393600266375,0.8333941470086322,0.3062042197377282,1.461659644876541,1.1883008457726834,1.350894650574473,0.7425287457784748,1.7538040367897958,0.6692612656475757,1.1911752787133918,1.3158450365128729,0.931981231174055,1.4221218837235297,0.8688797024493959,1.434813214701686,0.6379796891787982,0.326855614592541,1.3676224285947123,0.7937530744501814,0.5102883085819295,0.18416885271658884,1.6037371291614375,1.0127092978912362,0.5894156298913781,0.13978352183187723,0.6218267418301199,1.969465506376401,1.0046033202581344,0.0010490607787944377,1.4310847464278997,1.9734019208922648,1.301562674526997,1.3979328080905566,1.542628865544253,1.9900412427851628,1.5782490653747718,1.901795976699439,1.1076917521104688,1.8616811969696148,0.0013363410344154499,1.0410574668178403,1.9730872512169328,0.3114947399929818,1.534591998627851,1.659284339472686,0.1248139886062376,1.1033503586243296,1.650754185024001,0.24867946203630437,1.4455163460899063,0.7116844984538421,0.8413060655739093,1.1256171875266296,1.8225241081277765,1.6016822978324525,1.3256107816343856,0.7842247893494638,1.5953991607819513,0.21063092633907984,0.04603096876402489,0.5911938495032903,1.3932797783710993,1.5522552016514901,0.5999293821495617,0.6613784439527589,0.6918560812495909,0.13055694671824605,1.8009559739075798,1.9045546088519478,0.10726541830786902,0.5919924104001668,0.09546535761799387,0.6321676670387947,0.5630926978066312,0.23589548463150806,0.15778366579993425,0.7725804859875025,1.6304412284265808,1.3847588938454338,0.8344376881549229,0.9719839146842668,1.0694683026999094,0.8846337917478875,1.993776616983729,1.0017768275786605,1.5158489019714587,0.847837979047371,0.33581617282914816,0.06949342932893122,1.5874291556006404,0.3490105287554217,1.3235583088217806,1.7527652136496492,0.43085245259096827,1.6612122294898335,1.6786707983816176,1.0377373819774411,1.2706233188761369,1.3106690796730995,1.6884549467076098,0.07106579690675692,1.1009415741385606,0.803561806823798,1.4994368159168345,1.3300579974163271,0.09591373601668383,1.8317672403006668,0.04658845963668836,0.6906561985399343,0.881645455197735,0.4875417247294743,0.3256426413146531,0.4740153202224596,0.11327176932881099,1.243632040652986,1.2012066984081444,0.76463291134675,1.384839824841222,1.2673483044196925,1.249811162742873,0.19672098012826442,1.462331353739594,0.9513353269580976,0.6871519651297775,1.55334157173585,0.7839816205726224,0.23221274891229893,0.1990999360436907,0.5033684409989029,1.1792427876657532,1.8171085467769441,1.9735454179057752,1.006075417107083,1.903932695636499,1.36520535792487,0.6645109970168701,0.028716381174268415,1.291814037497498,1.2842231861960942,1.6688373592295305,0.7431369729761599,1.1396581285153622,1.1068793168169866,1.4682934491661461,1.1098380789032105,0.9027308323722035,1.4635002926515297,1.367164387080408,1.5785101946361388,0.0612076184090722,0.547823347535733,1.561194180910378,1.7648620762823026,1.620140784891609,0.6355270397012197,0.2900441675103121,0.4522354714482877,0.29541052556372777,1.7527386253567319,0.6520948072448508,1.1247785302684736,1.2298716878296263,1.5125777194188068,0.8413307457818525,0.09427460679486019,0.46187856597297783,1.099705700956979,1.5437381155900456,0.9003458435233188,0.757225934619875,1.8425139847832375,1.887090338486343,0.9484819970424226,0.3713344921274945,0.820184241771144,1.2400152808701852,0.25668261620692306,1.7207731443757321,0.9368467174099654,1.3954749428285032,0.32549301529162633,0.8367196733414302,0.9598464875965805,1.1815493294211605,1.8545353372519944,1.6770852491504065,1.9064548148032778,0.6960727597262442,1.8649102452894628,1.597259683853269,1.0769479111906972,1.66395327455085,1.640044537621134,1.8908340387566518,1.1996826317079656,0.7831792780366288,1.2604408477220312,1.7534502684817233,1.9907808132249996,1.2504557770804965,1.7832141540694963,0.38008936803580984,1.2129201376289371,0.5672133443918653,0.2622097122622789,0.19005324700352766,1.9769224032057298,1.1232204147093925,0.38338566307016575,1.2947524709586151,1.6801958369898176,0.23139464438687432,1.726327736075611,0.5718568932436677,1.952207559665945,1.6651774443593685,0.4339035040496049,1.8647562303724694,0.13937268912892747,0.29861455343962484,1.2183856395208994,0.22378143992322586,0.06291118046224904,1.9884632067618428,0.9949799278214096,0.5813019346662357,1.947604673391691,1.8744655873972849,1.7552495997379656,1.0118104042868998,1.0478470360983814,1.7471737942172063,0.6257851599614094,0.9166186992181018,0.6908280414111082,1.6249934336643808,0.21723842758689077,0.9414703384451237,1.320841288713513,1.2377351599385094,1.4440078014733169,0.01336359010291112,0.5908136337967804,1.1823405445959045,1.2751145341547185,0.30335116111537447,0.004792478993573888,0.9352673642539018,1.2894774255833907,0.2748172025487397,0.1941673497625191,0.5633463288536815,0.2305608621388849,1.261491230571157,0.31641919195169355,0.25767002349429297,0.7660270834634559,0.014421350792777019,0.5851343496787602,0.36364233294248904,0.5758170861931441,1.5446990669766592,1.231623931757956,1.9056904465358586,1.579270703460632,1.9928227641917802,1.0409131775222382,0.04635363594580074,1.7914035919513014,0.4528824687400658,1.441616621245463,0.34010219635710087,1.4080252181031283,0.16053574282310368,1.6126959960826899,1.138050354710282,1.5282791639858333,1.0314563798668293,0.29690078450805424,1.0040041505819317,1.1356476317849435,1.1175684302574087,0.33535490803618184,0.9139013384616875,0.9172351634762342,1.3244759555707581,0.41897237154746836,1.235345768388751,0.9960228046423876,1.018847096250765,0.9972182276426401,0.011560331058344708,0.569312460659088,0.4860427646063374,1.7251836876880629,1.692435043865415,0.23371177063563892,1.2582930746463281,1.4407931627915018,1.8826700992855907,0.6602573303525276,1.0018139088572793,1.3033258065990323,1.499029564295723,0.22876739522361905,0.7807333645407343,0.766382417944717,0.030433705994596622,1.8184843457486959,1.435851642181271,1.2030730325477421,0.7636908086743254,0.4703678298696705,0.31478312792164365,1.0833134152321606,1.2267273702077217,1.814676124270108,1.8148537999113916,1.3621218569225342,0.15138420484512494,0.5531151742477659,0.2408860151110496,1.7317717868378337,1.688450128141105,1.2053006521060055,0.6841947121323957,1.404713225375542,1.6703874180550011,0.9193549116279632,0.003034592184041832,1.9291075896580183,0.8499928438421782,1.8552469552742727,1.2261164337935768,1.9053175582502702,1.9798024414019733,0.43898100450282734,0.7362197654344753,1.743702575527824,0.04404957175089517,0.6873166629049101,1.7439392355268868,1.8370712144732124,0.3609369676746775,1.4349373232404496,1.9608642575615338,0.22946767382379388,1.3145398876662628,0.6283050446884457,0.3576712146009047,0.6108208808697934,1.8332959665360873,1.3505218453178518,1.2432871704583601,1.0621380158871176,0.930851469820771,1.6551150764913107,0.49103137391396706,1.2924058220038064,0.620989699114478,0.7137023125159254,1.6594974010444479,0.1431688985414567,0.18471246144153933,1.9036142039350727,1.9918032175031466,0.7072237902783766,0.8346641680990868,1.5949831825851792,1.4679962368453765,0.060456456292089046,0.7955374249753059,0.6569290296046845,0.37770922096967885,1.4076097071698934,0.46762265758169996,0.14224173340529117,0.9722212341176577,1.137866360869589,1.159998366451704,1.7516569655092178,1.9753368128947242,0.43081482366668716,1.5100389780021393,0.6514480510758134,0.3207361049042869,0.21017181227503154,0.8270906552967999,0.4736596516070471,1.7499506457742529,1.6969794764888573,0.7099181579827487,0.6429299578011984,0.3327979384426476,0.6126680734254267,0.9001107814142632,0.562696901257741,1.9843590844841155,0.12240180295832494,0.4479556351284006,1.4034350933123045,1.392661863979196,1.7255777577350582,0.8386684556544017,1.8742321860621167,0.33198161248089286,0.2493545272941066,0.9947369340763658,0.4407645796528924,1.6595904060528979,0.9830881789519955,0.8989467865275582,1.7843066175651012,1.2998995266579119,0.3306911447468974,1.369249335411703,1.5699152644894623,1.7599913418977826,0.8674001305792606,0.9732118507840918,0.5300558724803696,1.3069130924736956,0.6602967676727771,0.13045622997123088,1.3135838440811083,0.8979205334352431,0.7748027586522003,1.7794837926227485,1.46714942149886,1.088396149737982,1.0872788347131348,0.7242379412711494,0.22704345741553328,1.6113230445436053,1.2401922504054232,1.388216627972837,1.1682495799788897,0.15669893606829133,1.731597402536102,0.06251702880096546,1.9059684231992047,1.7514988544570729,0.05459278272503226,1.389827813548679,1.649248317680853,0.3335564717495471,1.8902080984230407,1.5167260322366645,1.5052977758182693,1.5623836756289347,0.6909618360743591,1.5271021108130105,1.6455742239644489,0.13336418556916077,1.8153965672044459,1.8984680087304833,1.578083229760228,0.7137359999634979,1.3146340556325888,1.2175191663989144,0.3212236767823369,1.9098421658535325,0.5647345971560053,1.3916339853180284,1.6399172880517472,1.8678937890850413,0.09367621259000793,1.9537829442993913,0.03747427180191433,0.7743296975165396,0.1099793887560233,1.893332788339084,0.24131239250570427,0.5449747592970292,0.799325989979487,1.650934909540869,0.2835248671397631,1.7201923502466931,1.39947705582364,0.5348154463869534,1.1615973278842269,0.2949620784950921,1.4031044039755518,0.808830149538159,1.9411526566714177,1.455898046213701,0.5953446628177022,0.28663286099082985,0.8931508454510126,0.13915825165102694,0.14175583873159245,0.4020107656817199,1.3061015328343355,0.887744685195686,0.2596480694221736,0.9255808020958453,0.010467246377509674,1.0001876338934377,0.01870297612652814,0.7849669310044172,1.2674742703482054,0.43392711760705294,1.033823634948283,0.5277034230404086,0.884646385921231,1.6687561222815692,1.7277806987387314,0.5407764842051043,1.7479433260778665,0.13444560148558019,1.5489554576878803,1.399534340012116,0.016777864620173565,1.2851074227969987,0.9711090881044213,1.0078737653331822,0.874266291455158,1.0521394017542784,0.3698011282579569,0.4691280361200953,1.0858324767495215,1.3656400792668786,0.9716870230785509,1.4182752185660874,1.84343083385631,1.2228507107829205,0.26594593723733584,0.5829877328846401,0.9436174134201906,1.3739555318285557,1.0672345218222672,1.253746757160822,0.6078016377759571,1.2618972828009143,0.4693245259054656,0.85361915696543,1.5735242096393398,1.2050168179187781,1.021004300899337,1.4007510501762126,1.0639880275634392,0.5878152278561476,1.8496936413911491,1.9129282105979162,1.0871308634065173,0.5279318180051156,0.6557311708069542,0.6308043176431846,0.7227539249357366,1.420815318166549,1.3640712333828071,1.661770887129614,0.1861730595413803,1.3402891039707987,1.1289436756496565,0.9956145611302876,1.3903158878874458,0.9111345138392494,0.8577803689690068,0.8021915522247551,0.02953591005527603,0.7781733640825526,0.7657151151248803,0.23575406490006676,0.949955944282994,0.2618273882327075,0.33057674786896124,0.9754850011322621,1.4037529486539941,0.2005390100334861,1.8584650227721746,1.4892655043093685,0.7930648245435539,1.6389381504899316,0.8218874205001162,0.18026856645270523,0.02586640537139608,0.4660359777585275,0.08502907483861345,1.5606429237999166,1.7136766646663988,1.3828576116924196,1.9243770687123425,1.3252499311193422,0.05453117548061375,1.7791153825683321,1.6653570845203785,0.8438633477191924,1.509911229084726,0.9967092528988452,0.4880051084175353,0.7293242016292887,0.622776385545018,0.7714248736620113,0.9330088972420052,1.7730322880684302,0.7206700034741798,1.31109436672897,1.419649294391475,1.5420153514351707,1.3017169381044624,0.7127023354346805,0.961152081396073,1.4626199770563855,1.209829871873921,1.5730646263920662,0.2742512929195896,1.5623486091676604,1.7730876623622502,0.37307191042442484,0.47661377904773533,0.8346355864391045,0.6265059319635717,0.07593225065073084,1.4495937391798337,1.9500414642157327,0.046678043953314124,0.7919977960686525,1.5346178815456877,1.7402801297791266,0.08283148335729154,0.7650416189614739,0.8464765048882804,1.1062537317106098,1.64564710492188,1.0319064967443836,1.2729713010755674,0.5970619242258228,1.8528539020896009,0.04398325317626246,0.6231522639235445,1.3623841467573519,1.6858185294065544,1.1873796573043969,0.301002799332823,1.2844679529636533,1.7021058758203855,0.7651004448117881,1.2898722596420849,0.24408632991530504,0.3657782699232667,1.717941755008704,0.0787269205078592,0.6296854658091514,0.9793218296756272,0.7991793053157823,1.0363723706820578,1.7134630941378584,1.7870893054777595,1.5717509145767024,0.38520799472863376,1.9082199346279114,0.10809710556453277,0.03645180170054488,0.5315501187353112,0.8459522689567706,1.3686396709924233,1.7907819359588037,0.5798426220672561,0.3644705767982603,1.9833046458135535,1.1417240025602935,0.18405429337310883,0.9166325831771599,1.9052420818811635,0.9946224995007423,1.1263981339943616,0.41752546022839687,1.5708262688741588,1.4566229047136063,0.7589733958858235,1.3580887641133292,1.5500379957450878,1.6191360617100674,0.9090364692260763,1.5353925014667933,1.389444709254429,1.447843866083441,0.26994435081190266,0.2219439952452415,1.2802631334539145,1.2560479320923539,0.5690854356976163,1.146035004330986,1.3079918746784107,0.2573489491799171,0.4097580515159499,0.7085111710633439,0.6852638171575385,0.8194382899255954,1.4945524429220691,0.5823972495244675,0.7268311809612398,1.9847477030878704,0.9734084588573144,1.256153889006107,1.724047503755811,0.26906552248277077,0.9732001634673755,1.2802414646267388,0.3309532265067473,0.9707291347548023,1.0711458596618177,1.0231840636893534,1.1442293442029796,1.7162203466699937,1.5797146382874339,1.2187280665910727,0.43155671402588525,0.9901110213538602,0.34136255743646127,1.9013855947826386,1.297506952567391,0.9541452903943299,1.3940829706803104,1.8378409782592025,0.22789157233255738,1.8482295458731048,0.5607845117507407,0.6313780263931166,0.23399767300187432,1.6628657861488818,0.6535635292554565,0.5903845967475354,1.14319031766841,1.4507298683795764,1.1004567066620083,0.7189967039620836,1.1818613053887146,0.4963637113298006,1.2154662134916268,0.4431067568341906,0.6983184569331946,0.15342029623393988,1.8092187977333607,0.2434695225964223,0.5953241461802342,1.5963547455351133,1.3018569226753396,1.9168223480862199,0.2975806218372432,1.042535120383295,0.700549256411964,0.8496638188337148,1.8410605909928688,1.7827329278699113,1.90830164361404,1.1246851672187528,0.45137768749359736,0.6305102636782831,1.1895328184143563,1.3134530765945234,1.6058551340187592,1.556344541626843,1.1287869660315426,1.1252444294711534,1.1097639751233572,1.6608024387406874,0.40686240987797634,1.2528118800403754,0.35731828077224514,0.6583000759763834,0.541610812112419,0.8368814605053139,1.6945548947491926,1.1325546699371414,0.6209268166557032,0.8048024519259711,0.8019338668531727,1.941194519815308,1.245221649494169,0.857022543158486,1.1348642947418994,0.8379691615484645,0.20929301141633277,0.39664166949184154,1.9416983122693812,0.5954918630412805,0.11496631745516611,1.360614790317311,0.593613653352616,0.3519823452028603,0.25330039286230704,1.7772171516794493,1.994162904871459,0.7112739534652917,0.7047846543747787,1.8000346216231344,1.3937214621798468,0.3301382334742711,1.9373351237810899,1.5252908556214517,0.07817310866771876,0.9667308801683494,1.4447912929000886,0.7569529673089469,1.7285472229465488,1.617471925607069,1.51252130897033,1.156092017184035,1.4874364737535752,0.6858751237161665,1.0318463014422705,1.4188097553212142,0.4684027317493418,1.4388492804298851,1.1998617845564281,1.400820285577873,1.616932876145972,0.14515462929711598,0.8434089776805012,0.4967462652533199,1.3053405361585708,0.23237231969266675,0.9740009100086521,0.8733562050549281,0.7144453648133574,1.853486077653845,0.5476799210686973,1.2794585484204763,1.4770837295700323,1.8948275414252975,1.211797964576552,1.1714052269432333,0.6983218932275054,1.461586471418857,1.7296427415476046,0.5523412679034094,1.6830245183175074,0.4727376762311556,0.996280707267251,0.9577952681437554,0.9921958315142665,0.4644669325596266,0.8435315943072856,1.2713719764188638,1.5061324808215328,1.9086573236507811,0.5474285325837123,0.30476747708944396,1.187745967486968,1.3305934887910689,1.499277830741425,0.5924477765577291,0.36245525653795535,0.7450995969175034,0.8747380493082918,1.8452062643355245,0.33902224534357717,1.9945113286922915,1.7850086822062792,0.9223672367093619,1.8675657919784026,0.23325002107637055,1.428267172208683,0.047514337234295725,1.8036048297160323,1.966039656029378,1.840654609213682,0.737292489968439,0.040675646959466016,1.5794609007943567,0.3301606100108718,0.41813416873953885,1.3543881236210629,1.9594175149131656,1.1220865140109548,1.6814883091346065,0.40568637685991543,0.638536668041846,1.901200975118434,0.9098062265616785,1.7911374530836015,1.1306451261484636,1.06992334888376,1.0932926786735049,0.9539996119433746,1.1517263123341785,1.8523438261472098,1.2609721022953573,0.3760724782737984,0.5845826668126334,1.062900985671304,0.1209653400993949,0.09740729524853338,1.908449786076785,1.4944908173301803,1.8496912767234497,1.7174967174206965,0.7711671307376896,0.9719576998650848,0.29556222962008055,0.49475619934364296,1.8506025821903147,1.1190115541007901,1.3710239388466472,1.1293838231458966,0.5057475413732709,1.4177868669494582,1.301373844100112,1.8169452046727794,0.6134879861049346,0.5199604251790135,0.17297816991738793,0.04214803468060061,1.511327626667017,0.6789525424914942,0.7186219850343207,0.1262835392741752,0.026046248028859544,1.0677609822197986,0.5196176625701016,0.10018387919146873,1.9100996074034118,0.6160729196366925,0.34010922608204536,1.3534512718306533,1.5638898553321876,0.8944177424902289,0.6276520909921087,1.8475352847152802,1.8973258000681545,0.03881195275924574,0.7510049299028508,1.1351433599958205,1.7301150950673945,1.4946148758961804,0.3410053998146912,0.6466009623470583,0.2392340747238364,0.49606665442706166,1.7415671716423773,0.7963905540978824,0.4071031664906523,1.1304670113121278,0.35991336785467837,0.3869828882588185,0.5349538811602138,1.2699543491392244,0.7539769309749559,0.9745079486093967,1.1890495104236933,1.2778243632729385,0.8817219901576518,1.5757805483333045,1.1983020716427557,1.9482665744044265,0.9323623970539099,0.35200768905880714,1.2974320002624762,1.2440504128929075,0.07920507634525456,0.6979405551244575,0.20662139691516243,1.8128967223374606,1.3506196421327592,0.947128283930671,0.31090886642188303,1.0732374717078377,0.4620671104226199,0.0677077280620582,0.5621145930867649,0.4723758765621243,0.2386734457362433,1.8299417155858142,0.08917617564150045,1.9301361484073798,1.4717901751902451,1.0024012770056852,1.2471455521881996,0.00196206930850074,0.17068339905747507,0.7665259725542166,0.17201613185593184,0.07876323522243778,0.05814251752271644,0.02708261348823721,1.7581690240776564,1.3537258817165307,0.5781067775227582,0.355973699815118,0.40696354924218836,0.38819922468246376,0.16629291819080036,0.8212653761050442,0.45781858290366806,0.748980306439927,1.8926186429010394,1.5036486899843005,1.3075820073167241,0.5705171544932663,1.4012253164795503,1.9656392109736844,0.45242850345097435,1.5819666725980979,1.3884100335905822,1.65267340001914,0.761567286400482,0.8311531637374394,0.27402738202595306,0.44112969956964676,0.9061318096210159,0.20657941402129157,0.9580370959682973,0.5459031211158325,1.9687210940448394,0.8287910995830873,0.9228168447944605,1.8676246049646659,1.940954066599302,1.9513768909610758,0.1528943604572635,1.3477952433263762,0.2558959864175947,1.0854084851792813,0.7228240275875512,1.3572310368067801,1.4758552057669396,0.9547508384148372,0.9120273535510982,1.335392962633382,1.8209211876880103,0.1875823238537637,1.1166747082853807,1.0827291690264085,1.9778261110036652,1.9366909288141694,0.7216557797709957,0.01377850234306292,1.2557793244006998,0.9909689716445684,0.9624789155169198,0.6501729969232047,0.17312342045231222,0.9732017555434146,1.831484260339467,1.60074622536389,1.0516964692661508,1.284958786349169,0.699018659875974,0.5560497716509258,0.6005754695423865,0.7790180499050956,1.2850917376794695,1.6253962343055761,0.6053720167561907,0.4999999856645759,0.1527007330433705,0.8410662824982886,1.2239101927810958,1.1149807329151018,0.9624764380087321,1.8892781341134461,0.8544172265709199,1.245132763778625,0.6988656467573867,1.5633290313520678,1.0267926376023915,1.4063885297870324,0.6117346768674365,1.0152093070404016,0.9043084204309376,0.8342080343551815,0.6438475255972053,0.8594976382678343,1.4712556226771947,1.1668720294830395,1.0451160063849796,1.7968873916788268,0.4552075730302695,0.12194211727754475,1.146550362874661,0.3730787775822679,0.25007096481598706,0.3116404697835164,1.1045165636006247,1.279515732027779,1.7070107869709108,1.2789464599992593,0.1701565704489625,1.8713964203530844,1.9529121894095793,0.7455660289309843,1.1379674925154775,1.6237340362112525,1.1416608072684828,1.0336216660294,0.1083035295819238,0.18268457429876458,0.8406160229977597,0.23115242023594693,1.900297543513057,0.13546241397328113,1.863680806398737,0.32769147817614164,0.7111390190575501,0.736099008665066,0.6323946000046567,1.8479629982769148,0.5624708636135705,0.3109606929660637,0.6111490574512735,0.719840775151372,1.107774593431957,0.5838632258181932,1.2854092013230172,1.763436978970544,1.2894544562288854,1.4276287872499096,1.4517541602286919,1.0241810472069623,1.9140865592920577,1.878772522140972,0.5266593354065656,1.3764777830154693,1.4322823088318366,1.2129907500949528,1.835819038448134,1.1694899488642982,0.8448696460379118,0.09635427281400259,0.6276959204776251,1.314069099644754,0.3998131051488077,0.828933784205822,1.7514632617395607,0.6663227762243443,1.8221591930922607,0.0077710861949360005,1.1926429681822424,1.6554632410493062,0.7810038420041715,1.2137957566048794,0.20718003810506025,1.8098732577015013,1.9130424121081748,1.2275264355797957,1.4103475694688683,1.8069199946727663,0.9420579342567894,1.9383059111918721,0.4384667452367262,0.9422219904857334,1.5308611795473208,1.511717739465462,1.6728472749060457,1.8951904761646505,1.8384275332439926,1.1392011350519613,0.4395975064141101,0.5593013068722692,0.8198012436380998,0.9246651996123404,1.6232092374224765,1.4803247976390752,0.8728411346960966,0.6678701671644977,0.6873134337016483,0.36183341723884804,0.2706780078765768,0.7853288150448086,0.4602142381456457,0.7029473496205713,1.6378209200982803,1.9053696970132088,1.0856254938795549,1.2463050908262232,0.46392325747536767,0.918978742685866,1.2975283935878177,0.8982040950011392,0.9130883588611571,1.4617849426045404,0.7236898164053311,0.042055571924280506,0.26467597555384115,1.2390903950171814,1.0776930516662202,1.3683911831063693,1.2253677567358157,1.015476029893479,1.8366088218659617,0.6596705101308232,0.5544547878719078,0.9630567613723168,0.39418186447429926,1.2709585279839855,1.3743690810270295,1.9868945224737176,0.13984407259576104,1.1126952769744665,1.2054917210372487,0.45155875896584996,0.1070862076310363,0.019677868417147068,1.2534230106121382,1.8760079311285738,0.17677503260822475,0.5645193554544896,0.8560296326647863,1.461303813398082,1.5883116706607445,0.6556432845084023,0.2336647514140914,1.7620117262040524,1.047137518385048,1.5139705585860095,1.354256539464806,1.4320371040497801,0.9407564179072754,1.644550987971001,1.9694985344163174,0.989492067771371,0.7636486507324426,0.4872284272057795,1.542044614244923,0.3035275828836763,0.06062006232078115,0.45852011565598166,1.4836729809695028,0.7408554981937993,1.9706095760267388,0.7531938533742524,1.1315074400305432,0.9928013399982363,0.049027903084660554,1.3352537336008619,1.6479680681538784,0.0603460350227493,0.6885676202432823,0.41169487431548213,1.9869591648019926,0.5900262886973351,0.9096204437350265,1.9508101957723514,1.4242728662098265,0.019463669146637576,1.1808823173945808,1.328202170787409,0.754255563198238,0.3935637155510808,0.3439125694304609,1.803930687862211,0.3780989169360147,0.2988829767536296,0.46587397617003,1.9052216298221702,1.5052380758741586,1.1055110875489627,0.8954026424559314,0.6433216411166502,1.636075091636247,1.220087234618314,0.07160437638714644,0.8930833750665742,0.988372792816237,1.7886260567870003,1.5901516516540362,0.75169009279923,1.0071064342563711,1.7022682118100825,1.115212722080468,1.4990112499861927,1.101934148666323,0.6557256010490518,1.0757168131130292,0.8253103885733233,0.18268019885019182,1.8941558615203236,0.6851617913587877,0.7605074819098951,0.28042598875628055,1.5552671693595979,0.3215392996597994,0.2359240482300947,0.5878870748213857,0.6100449168351254,1.81024695891,0.8773026975824044,0.5274726980032215,0.9158365226469393,0.8662701067705039,0.3459179785202834,0.7586213183536166,1.9267604569635208,1.8798442927440897,0.653701008476315,0.947615373195783,1.58562918597246,1.313693309901019,0.4443881241876237,0.45058885840040463,1.9318687485727206,1.984039371614535,1.5670456866288773,0.1958853400732465,1.7647109689994513,1.0735549339072694,1.3276580706052052,1.7141933719929634,1.7596897538549865,0.23618803751348727,1.982458200637083,0.4059311278636186,0.6597508191777419,0.9328355682268239,0.5011654117400745,0.9765966641940153,1.4718672701643323,0.4324796240868893,0.22650311036064158,1.4128180424315888,1.079453641234765,0.27300442412462256,0.294094570084207,1.8818895614628186,1.1301808675131593,0.8016481143027705,1.6671380926383,1.5546466557755663,1.0421337717848111,0.8109013918432013,1.5926378064082898,0.44757155130402476,0.6259680141610676,1.30644747982323,0.22059473751717265,0.8089636106760546,1.4561769342364341,1.1717967571683814,1.6399056297445045,1.050630222893519,0.6269791571867427,0.3668092864082984,1.4911559547202502,0.6421844435862094,0.8672391307731532,0.33897312688485504,0.27475405186134416,0.02594865087454388,1.018350466633039,0.34799445068725526,1.8607224391197033,1.9686932817530571,0.14138780589051447,0.5325893819780533,1.9868723309798495,1.9617022039041498,1.790534384294536,1.8301717292845419,0.5520442485233776,1.95556577070948,0.45875770292476414,1.3137087841893536,0.19926411782608563,1.749190417562769,1.810495387432941,0.1069534623018572,1.704464296139639,1.1294325510781802,1.9250101807260165,0.7330838165410846,1.709687978029367,0.4326161278482165,1.3577749694725307,1.5287413018910405,0.8221042130307253,1.7512264226042358,0.6130961063529674,0.857056210055392,0.2846165478269088,0.3775926671387663,1.2055172227503181,1.1859421273516138,1.4040648938881646,0.05007447512606829,1.6218725913190097,1.212278633556264,1.220700960733039,1.7844603417728442,0.08647103718042197,1.185512897741155,1.0720281452746032,0.4091568231920958,0.10483656079880811,1.4877152929043813,1.4941408516288437,1.8013615248540646,0.623138637947951,0.08200040224603376,0.2969409306019714,0.8095115391927592,1.8359783501610754,0.947123555618532,0.03384575838775499,1.7562448843238878,1.3743535996340297,1.0945537389676578,0.031153331126555134,1.851536501271119,1.5244544802007443,0.49914293708918606,1.665816876788017,1.2280178698921185,1.3632545758507122,1.9412963823918334,1.6659111136094091,0.3993410105541534,0.9685365337117101,0.7758801242470338,1.40237775792085,1.8744895269292432,1.550398155240499,0.8807707802817878,1.843271773903771,1.6941171607039776,1.1489103440283746,1.491947094887048,1.112946839390253,0.029880092682963898,1.6561623947556283,0.6998728779179548,1.4543504011166128,0.4306243769468575,0.38207134133206666,0.1620103507425739,1.685424803392548,1.3709645600556526,1.324318154858033,0.7053042409703284,0.5005070586642706,0.5683728140483227,1.5166866139639483,1.6928361513326184,0.8690102995578389,1.0726332401858238,1.9831449709741613,0.8115163293543669,0.7724644297207613,1.82507938688431,0.23336033686380966,0.19291930246773703,1.8075528472617033,1.3855564589133704,0.22375421325006406,0.6924124875581489,0.03331046933421973,1.5968130139417733,1.5852809699989057,1.8625458207408256,0.5003628831883683,1.9892381969253505,1.01707520192517,0.46841523374404204,1.892294290003536,1.2721754482652214,1.8688410362575931,1.8949742209030094,1.7806191038325778,1.686128026462483,0.03869375042424168,0.3946030581849452,0.010507602935064536,1.7774453956356189,0.4849387310561985,1.1202191027693071,0.9125221535780047,1.8607949665727523,1.8848244133656693,0.657557378302725,1.0393184344626176,1.9691488465872462,0.6645762115186991,1.5570047025501625,1.7800365844732366,1.529151173808821,0.5304231121480875,0.9217116582729695,1.9147663216396855,0.6971399098288328,0.07923016803821797,0.18612289956954542,0.6548637085228763,1.2977031203656504,1.802576506713389,0.1510515525218384,0.24817159741246053,0.09402497466664665,1.15986163551397,1.8353228394993852,0.8271728397082808,0.47789376082289997,1.4739874903944514,0.26284804309323884,1.4032408920981494,1.686114064928917,1.3649114309243253,0.6300725820576529,1.4453622790306975,0.8611165073993255,0.6776567239031388,0.5876823540203681,1.362286092750988,1.120658056711668,0.3238185524194354,0.6882311749737282,1.0615748371641889,1.8765316528454528,0.8261731452820933,1.8630695546076106,0.9336001443224666,0.6848906804830429,1.5284802118726775,1.877080106385367,0.4304312242220736,1.1598960014773352,0.72646148241549,0.13634455530547498,0.6975277372511481,0.8974555877002799,1.379745915662873,0.44980935585140713,1.859658211203687,1.014340586085727,0.8942213257206957,0.8273085769364811,0.5309080035720537,1.1689382144173912,0.6890240344270588,0.06983788642450545,0.03442361164923058,1.3384310019708003,0.08103981773961448,0.44080828640348496,0.17248441003143078,0.07559748163963213,1.8954943019577224,0.36548539693542875,0.6164396049914127,1.1242754467544402,0.655534202126939,1.659439985549545,1.9577486493216751,0.7145853280153387,0.3530758661354396,1.4753278253769233,1.0528850771144949,0.07812670301187162,1.4241986500184665,0.26266134229901217,0.5553718126068709,0.049310392429220445,0.5929791551744942,1.779030740422671,1.4801550015267388,1.3662918020544004,0.027440178534060163,0.6382801395932932,1.486719565401274,1.6765245931900505,0.9433708117744629,1.4978099492824817,1.5780009470477223,1.0456074170994931,1.0706106474956796,1.9658084183274775,0.1805382247304588,0.5285740444901038,0.46617408106472674,1.661507732493733,0.9383864675885065,0.7841019592634512,1.758322578888717,0.9126104283208304,0.27015675448211574,0.9066661400455535,0.9076807215150854,0.5829729202066186,0.2515466113898204,0.17189902483283767,0.19741551229126494,0.09991092958276006,0.6071927230500449,1.93910016162195,1.254422120631595,0.09510493235476306,0.6769066047153692,0.030014105503449323,0.45823815971545595,1.5490847848211364,0.6167536346171147,0.3163571997413871,0.7794830951609697,1.6940961738995326,1.0513788968040696,0.1274857263009643,1.781666964518996,1.5545621078592216,1.0779703038273551,1.928134994097921,1.7469856666197485,1.7519080021620648,0.8508554572956597,1.1436273127932648,0.3703524821409991,0.19727399063050582,1.034201334403485,0.024881614549255165,0.7150698682201487,0.6945895671032793,1.6688693768934943,1.6508412505963932,0.32205698393103743,1.8202652975930684,1.372953155043802,1.1108568363366704,1.921147147616706,0.7317344343428881,1.6387084631743323,1.113225876615514,1.2971059885185015,0.5888888174160454,0.4443597691173041,0.21867194637716367,0.863466737264566,0.2756311842135793,1.7178662089692198,1.5139914115992177,0.20568608533457747,1.227263895130063,0.08573804102568161,0.07870411082816756,1.7089550288684165,0.8266513330489167,0.059242527848894465,0.26609106896258383,0.9954426717973673,1.232091535717943,1.5298419815955147,1.7766270560458703,1.7281223352478827,1.6275894312718302,0.26841318085572474,0.4610771011552537,0.5608970308632502,0.6786748530117184,1.3066971288871734,0.09674593272157245,0.5857407033988191,1.5854292829171495,0.9844497818112986,1.9354335981391628,1.8061555716838877,0.7992900843930035,0.2615744159985528,1.249697649299392,1.0648237320408966,0.015784958391412855,0.9062165134218015,0.49563346233171285,1.9192536305568326,1.8057013841578804,1.986764864832267,0.7002609650216889,1.474173836885151,1.7901591052269088,0.4476939985292448,0.5047100329972464,1.0914852668531,1.9139742247324438,0.3801473130648251,0.7941987156231606,1.0967911662232763,0.9618700521062836,1.0649843199035216,1.5877705112447447,1.8904475275277113,1.637980107218371,0.965011236843256,1.837643407021915,1.048368248735645,0.8387346746554624,1.758270295848165,1.4473975487148607,1.944491570125341,1.6974887195330517,0.12805102783243213,1.1070838141702166,0.5099001004437049,0.46164706963078,0.6862526551341634,1.7286344195191348,0.8572545728625699,0.3237604604499507,1.5346185672275234,0.8097914333291988,0.5700950678950919,1.225481444393506,1.8556580067554236,0.5909386000486024,0.889586868252759,0.2927882051694426,1.3184013643203532,0.4419607966753381,1.469133012401707,1.957535925105297,0.7263882251095419,1.348803465184094,0.47006643749036886,1.9253263221843917,1.7549727232654329,0.7949949625617974,0.7839404153441243,0.31749920659037056,1.796856227441217,0.04396229696771312,0.27010817074193705,0.08766962549740505,0.5584396813063879,0.43670179412537885,0.49417611272004774,1.725106316146494,1.4402386003823564,1.2832210660882113,0.7732284746563041,0.01945846604454674,1.2303498435186107,0.021391119492352336,0.18908978067794016,0.6611674140073907,0.6108883785287087,0.7421406350330609,1.1896926503014833,1.6521083983770142,0.5933069003103916,0.9555929124100705,1.1262190741747953,0.3167110985861219,1.9535804953500804,1.7335037312556225,0.35067541523155227,1.3224098998526428,0.7431910141565942,1.293631970647289,0.7021784520990433,1.392390465523021,0.5284571504475742,0.48657479724534,1.2822676776890567,0.3369695839570348,0.0635098401752385,0.6321864842207461,1.9493864782495656,0.14552265638024955,0.12837749148155872,1.5192775565247039,0.31923028973269285,1.4367505243970748,0.6020993529857273,0.3591295662703433,0.6961835991845988,1.0634779091373172,0.7279682840518974,1.8224007547876615,0.5854902458509638,1.7952481266351001,0.37077247757334125,1.1864539468686726,1.1616676621494308,1.8072492743931137,0.032289898377398076,0.9519162387702993,1.8248188656948658,1.230646336576314,0.239048972983849,0.2625183806019148,0.5106269595971757,0.02848936312759412,1.4476845427696434,1.3108169047781606,0.8024783065278329,0.5782427522566416,0.6061073936198703,0.5333794230421535,1.146377051836916,0.9084124111269644,0.9712848078044579,0.3500991024176935,0.2571597556007956,0.9801487382083512,1.4811569071950403,0.19344002006782898,0.18054080045007279,0.7796562207156421,1.3159168058939785,0.8518224475540122,1.2390231100507196,0.5005924529546864,0.16134050753773063,1.5224496990530847,1.3347995457261823,1.0596018657453483,1.1175486297690156,1.5904951388808715,0.5016142849837024,1.7563494115306841,1.9101943099297265,0.8843624340934798,1.2593745520767743,0.09707856389882634,1.0115978452952579,1.422502184337225,0.303404182095292,0.06376123937693005,0.25644588103740557,0.5335634479999112,0.7832695493548453,1.1443262651030526,1.2539714730019456,1.7590507481418358,0.5586076240808743,0.024524201768396432,0.7157760778534906,0.8559979155085878,1.721635430564123,1.618230859183255,1.5084167996577977,0.9034165802806114,0.8760822241689455,0.816714860888682,0.16669227733671513,0.4022191881256781,1.6192429131705905,0.6716516671291963,1.1375732846456523,0.8428423288927324,0.5436088132661407,1.6695019884477205,0.27103835373307134,1.5537197840067063,1.4773949864348725,0.6277166382479653,0.4094695880923955,1.6286220647135434,0.6111014234838461,0.23893067585354466,0.051555724305121335,0.38851822769708155,1.8871359761114277,0.29429070337160124,1.183184188162011,0.0890643634933024,0.046601956407648325,0.32022724649508943,1.1316059762566417,1.204184691749662,0.7751214595832654,0.045736330924320875,0.27275883720781235,0.4900119576796817,1.6716981350562743,0.39593352762347717,0.42286800528861407,1.0904546702778461,1.6267917806546468,0.9552682969291896,1.5412922463609153,1.2857284332999999,0.2911657121563217,0.5017031068433763,0.5019419924104583,1.4394787149114137,0.9854845054422466,1.6526811944728768,1.9138842363350963,1.5858723051696801,1.9894566299898049,0.5728007292859604,0.657371458047658,1.3929641106930906,0.41070264940258394,1.2823101888026693,0.5470906713913551,0.08972559654612676,0.18480841526843061,0.12364503808366951,0.9685245786465125,0.7514690727261627,0.3714675181575386,1.3323149711948676,0.5175788266097378,0.630039919716925,1.443386559727357,1.6562846277705667,1.4309184575212543,1.0043868868757468,0.7861714515264271,1.6019390057354097,1.6160808828378546,0.744155353013779,0.41449221424621435,1.5611202012355125,1.1354616185075617,1.1481023039527198,1.694086775361113,0.7697691837663049,0.44156714962941945,0.5617060912831641,0.3630546410421064,1.4023553584956787,0.25579918054510076,0.6606414578228283,1.3629615570672071,1.0835298604443968,0.2728184624556773,0.12277179836140989,0.5205664462724723,0.5123215958846561,0.545010692624326,1.6581669272827644,1.1909911556201012,1.255298501301423,0.2767914319078221,0.651689428475848,1.5580137687625661,0.7753209816080097,0.3607912978148142,0.6636720797482684,0.39447304971014946,1.2013014642770572,1.4926037400592314,1.901768159756659,1.5472240160672113,0.734985690282312,0.12477554916547463,1.106549505704937,1.0434819758993468,0.1248818010197068,0.9981784263147359,0.4186369629039052,0.9604309486549558,1.4268415610485052,1.0299768332167425,1.7498572900162477,0.2823351959667685,0.39257020880842014,0.9307807196507891,0.577613961279133,0.1559929527069431,0.817640100160378,0.2318174964116221,1.2142095824915546,1.2377605808599008,1.951927538288643,0.783239529729929,0.011899987183159879,1.8407355137837182,0.7494935654653376,0.6071846643980467,1.5845803494072566,1.2834438690122192,1.7417222386827218,0.790776470434449,1.7822912537834146,0.774350877327208,0.8053132880358923,0.7354499772044634,0.09843168533650318,0.8403970328032959,1.043867452556127,0.007519090572867346,0.6713218713338484,0.5262355581867378,0.7039316919558926,0.9368510556971199,0.7312674208475558,0.2506088556020879,1.736902011303176,1.117212232574188,0.04954719129158737,0.5455748924981163,1.2292628373332262,1.7184312758605544,0.4436096350679548,1.4241056864931076,0.6340164112699047,0.2557889033423293,1.462247671289518,1.8602544661086744,1.4763084929190828,1.902965862967876,1.078374711767781,0.661736223617507,0.7897558402976885,0.9829571919882252,1.3034658684996963,0.6508787723852071,0.6886959214618432,0.3388931078527339,1.2288660365202082,0.24917093645767452,0.5987274546572314,0.5303601275355355,1.754733994625867,0.5037123231202985,1.1840756887254675,1.174163922374775,0.007304612400532397,0.527451141087631,0.029919061303265212,1.5408423700964204,1.9783260574183843,0.04772924475968716,1.3227237569588404,0.9414499113522702,1.7468376948727575,1.1462782165486733,1.7790504220040069,1.3914236390559884,0.487509927195785,1.6207210292318803,0.8615713022307578,1.2133113258927615,1.5838367195864191,1.8135892204408584,1.7632887706403895,1.761452242606875,0.9094844550548822,0.4791269595140251,1.894472587773397,0.0797687161758673,0.5129732398922949,1.115694655266067,1.2050295743261394,0.2561102899461591,1.8829015841009458,1.0062077442707413,0.181544201632389,0.11711500774141247,0.805065104989768,1.3718117486971821,1.6400372279146922,0.299734231572787,0.8908839566039736,1.9616824690118349,1.931744591733881,0.3862139744984568,0.31968894994246705,1.6202870451299782,1.0840804404769329,1.801191115438563,1.4236688037595095,0.7261327707906025,0.010605400877835455,0.8294237384708742,1.081994958226969,1.8856574882044448,1.1827091510358654,0.2579410971347466,1.5260267289212035,0.6851372258724245,0.3996165917246146,1.6142220176855948,1.3975625703418182,1.3756401458566732,1.2067647735713025,1.9108198551177016,1.976165123725514,0.11723308418059296,1.4494097998526652,0.262733907327116,1.159046942669027,1.8784203026073842,0.23525824506747073,1.4699038994851474,0.3073071967292847,0.10305137246608807,0.889450546005263,0.14099900707765856,0.9826099836791548,1.908745158576756,0.21087444492154306,0.9816996315118637,0.2688966913338684,0.13945788528813838,1.1493096636227038,0.626031968464241,0.7879749645738151,0.8601402809848551,1.3764754395627432,1.934997787971769,1.8827794649781748,0.2205097663343988,1.380857611620355,0.43991118229155235,1.0625930926186187,0.9355428234072743,0.19411461515151354,0.8811318598448136,1.1188557018028693,1.7303790706497193,1.5236067662741124,1.0780831641909574,0.09342812881547932,0.7147454141667285,1.2948746790208456,0.8510967503376082,0.8208027154840958,1.5996120080633576,0.9739998147617582,0.2893928133829056,0.22656062377232034,1.4310032244874662,1.9712642668432208,1.953747704411105,0.016757255733932667,1.9527825501246356,1.452154001620028,1.0720390259283654,1.9614093277278215,0.7682096441851037,0.3254515705999055,0.8447634752821367,0.7759658791809005,1.0725394716042314,0.9012582830121194,1.5120428471800769,1.2806233412894557,0.30683322848341726,1.2070513531374953,1.4285285055461456,1.0010223026392964,1.8884931189360716,1.1875923045720025,0.4579323734715968,0.8521766078758795,1.720915420618699,0.16010466298482934,1.613422826888756,1.8701315772062368,0.2151956389148062,0.45685884314418607,0.3686856099639348,1.0557836302892842,1.1527838104413173,1.6798589295006279,0.7534779679566193,0.1866866298038026,1.9965550324343337,0.8415038555305602,1.2173287635595718,0.5105620568090659,0.19549607471025343,0.5731105348787472,1.083184124543955,0.47023003518620116,0.5498961722450786,0.5553564771240928,1.988014904072629,0.1941125685697822,0.4676916270213095,1.8500847498788813,0.601424294038149,0.9966017372413727,1.0871071817298659,1.289859021584173,1.911686848223654,1.2646228219678488,0.5060808767024849,0.4137194577994649,1.1801471062004985,0.9381791333891163,0.8484022759976361,1.1474517323842848,0.2402461837361863,0.07481879953705489,0.28376541052795257,0.1921179394700104,0.6269886172008773,0.6985093936024506,1.8983218676911966,0.6139995773770613,0.22662861484055002,1.5443930275259163,0.5315742998929548,1.7123485332829946,1.0173079164757717,1.8606206611832223,0.4452807398292473,0.5222441052494963,1.6029798083280697,0.5840006652465358,0.7031026410009209,0.5869154624784232,1.9130979119943479,0.2454196695002698,0.6508506354893961,0.6446393678345261,1.7495919477903448,1.8166179285740025,1.0124498567989153,1.1136206522164764,1.0867505181565909,1.670118018277408,1.926027809210903,1.1652066841688484,0.09909270650810129,0.3722739547087793,1.9461839616381575,0.14287390919600113,1.6530886738429533,0.539527572248906,1.281045924487677,1.3795188412422832,1.1695629517238548,0.14010990698486814,1.0456518223030606,0.879425224851293,1.003356233496906,1.8959358887245148,1.073329431080662,0.8490195453021785,1.6949973769341315,1.8564562160622704,1.9577082400369203,0.06077274710990311,1.8156551322996834,0.9629057101271775,0.40213186670482126,0.18540430231606075,0.5328259633462074,1.9857154007259155,1.3523222823110435,1.53853079516567,1.5100004969629535,0.5327241861927681,1.0924575775554701,0.9476858582008719,0.18759167021176312,1.3240350718000138,1.2275320030463672,0.831563635520984,1.1502855970549903,1.8629413160338548,0.3008699324829739,1.2061478046084066,0.01727667609685131,0.9396558067958485,0.6098449367397228,1.3194502832938164,1.5670736136954841,1.654279994714237,0.1972008271031687,1.682524590378939,0.43599991795487975,0.40979852549157014,0.011240136948029979,1.097035472891836,1.155474350155997,0.8173719764587813,0.09449328382161712,1.6787713207328039,0.0889954417761757,1.9940000017271606,0.9933636283800344,1.7720794048173862,0.22616850613580852,0.20663767517905507,1.1057519758552423,0.88664611741844,1.8947404797887053,1.2833089230688215,1.430555538242474,1.2002088384807252,0.3874299543552802,0.8786472607058887,1.7461578507761168,0.6558913010251123,0.8906081234797039,0.5868258559681172,0.4589848729721285,0.9825194787537912,1.9358666747668358,0.5457030349212904,1.6382849129985535,1.352914954874071,0.9243075969065138,0.9351051098315144,0.1678248287898443,0.8500263163760423,1.1391425664138384,0.4092616934969903,1.5206597246403541,0.8198487392423882,0.8300233881666583,1.4112531557133217,0.5886226204750102,1.8905232511676657,1.5729805665378278,0.09744452596267683,0.3377319896439688,0.8101647518735008,1.6901533808049651,1.96438940738818,0.6002140817041741,1.3255119703386522,0.3633064158018492,0.44757254484103565,1.3011741746621723,0.14320266540138282,0.22312863935014732,1.348835462838213,0.5266574895615058,1.5552370604769128,1.6087598161935737,1.123842050932924,1.7420371057468458,0.875387729692105,1.56670201221534,1.5192578112621065,1.4573167779944647,0.3964811127846032,0.7695231436232071,1.53254384354399,0.14933017364612028,1.9423661307738627,1.6382893468539432,0.60391792308177,1.7172619075318016,0.7735703544373168,1.0045214477603368,0.5850421473632849,1.488154806569622,1.6896851187154023,1.7740081664965521,0.2801282747905448,0.8577577638570503,1.7009784162532036,1.1393912060571263,0.5574105578667095,0.69305834266988,1.9810731828168777,1.4933206925496187,1.1178487223288833,1.4669113638627116,1.5728624736785617,1.1356036195182673,0.5809141464854467,1.4886577796534282,0.0630779090625333,0.4211714814681207,0.22322448555273944,0.9326934105470316,1.4368627598243011,1.8847830687307108,0.6103420331025281,1.6495295782608694,0.9363416892532115,1.320990980299078,1.0424722418467363,0.2818352173884639,0.8541247302403587,0.1937693859888208,1.7316960591561048,0.16745323771627446,1.085264386120116,1.988014711196673,0.762507646743167,1.153084218503022,1.1365284403891138,1.778778310896462,0.03483393021385529,1.5374807902327796,0.35503015264768445,1.3315952012869736,0.7485066801274411,1.6658849011673487,0.423057507006138,1.8989066260226108,0.13580215922521668,1.3413075272340065,0.0901418217718444,0.5469427850018953,1.0409917009177985,0.9096859035079138,0.6308277587409935,1.9045320375830561,1.289868063476988,0.19580468212866567,1.0791978961462274,0.4050708684892371,1.7941584424613883,0.675172226614054,1.470938777668415,1.867145393109243,0.10526071852442537,0.4706169335708381,0.31883069602856035,1.8081307980320258,1.331653833253235,1.2719873732604567,0.6488418497989139,0.25667453243177896,1.907183812467489,0.18037369588339094,1.1812346088696408,0.7680364552889162,1.4335578915201737,0.929218097797522,1.7058342409070018,1.511265102677332,1.419652163722101,0.3473429568810143,1.2118051661080425,0.1664498084966687,1.3590145884678133,0.8475314193251829,1.791782473192,0.9948250596702788,0.020863881025824826,0.10614387502285122,1.2533615094708102,0.4374342268364453,1.4368589098210882,1.2666512748672727,0.02643989073593427,1.7319073946169725,1.1801342893305975,0.7254541551739722,1.3243719051675005,0.47753018634538624,1.7032877482526376,0.8264336499711377,1.5733792254564738,0.798659337958426,1.6028744472802046,0.14997582713295496,0.9807782434461962,1.039401042100046,0.08908194074710242,1.5973462314227602,1.2410168387894054,0.6182079564053379,1.5076373197850361,0.4195425795178572,0.11253848256693337,0.03007788741134348,0.9149709571401938,1.442752059614717,1.188928083558782,0.7935991110994335,1.7375239960582463,1.22846593657174,1.9076958915823277,1.502107808677693,0.012446900132911932,0.052074044148755584,0.03480991472704188,1.1918955712585593,1.8797003808869364,0.7803761090663159,1.347069917737683,0.2093465324166012,0.927213449822406,0.04964689491555754,0.19825106100696605,0.05293967781316819,1.2703091535709097,1.4736379534399409,1.8980034851171392,1.410377644106109,0.9820533701645813,1.7562955784114123,1.0421009750990873,0.07169392335694628,0.9358747424167261,1.9804367641132792,0.9473888515510157,1.5626858956924694,1.8057269975123578,1.3975871546961725,1.424711544607028,0.688529697195067,1.4911104179618277,0.05277005450647863,0.30908253159931404,1.0310406377414667,1.0953803520807037,0.03852253613766986,0.18880951940196705,0.9055575692605004,0.7094166671422784,0.5487532011618603,0.7239029094173135,0.8490379799383427,1.134341795582651,1.2379532237237816,0.4333517271138805,0.6790222826730206,0.14876463918538055,0.9059257891225092,0.6983174353221584,1.6582164691535974,1.3067142109953698,1.3676061489311997,1.6407482876432564,1.1717814071820112,1.9299424748433591,1.6634722454075963,1.6891852369903697,0.25344956986720446,0.7532931767781337,1.9589578283483022,1.7551780022296033,0.9558923484928034,0.6269538233354023,1.278450438078912,0.8991674992369872,1.9169554031946057,1.000219357764828,1.5478768061370147,0.06232849752491548,0.97582089252625,0.4433515873905887,0.009850257740914537,0.4322750344468249,0.06874379554599482,1.0203937918479036,1.148406936723515,0.08908419479930593,1.3596987503594549,0.8260973913659598,1.9144833115128101,1.4325803944476327,1.1758177829305094,0.44159292828563346,1.7769439329825514,0.09578503542393327,1.1419729609030165,0.028044502024617054,1.617061267898145,1.8549838067140705,0.6212420238438168,0.4197541643687615,1.1456063465055772,0.5702854089537952,1.907259038626666,0.2308099338472792,1.9664157392334294,0.996680519275403,1.523829523140602,1.1477284568061121,1.8779486276187989,0.7086697874486395,0.8923441595585744,1.2322629985769529,1.2940244264663703,1.073473848108021,0.714746865172999,1.9625868692373314,0.2935386319929929,0.3738441213926498,1.4708410211597895,1.347779469609784,0.782853653626316,0.9803017239368077,0.5664320566235075,1.5142781372035872,1.6187659061858084,0.5923468502810065,1.5970333269239265,0.8495345112778407,1.1976525637257633,1.557680634283682,1.8548413305263565,1.0185473658290514,1.973327463904361,1.7447654953235854,0.8529328290044073,1.751224884471021,1.6927555573557034,0.19789666443121454,0.9790601055841744,0.8111090347566735,0.3070227267396548,1.2389337152778208,1.2435675740986174,1.5063295581602243,1.7882143634219876,0.9817806395221876,1.9820437744935306,0.2968636017138241,1.0194454739667398,1.7705252557477857,1.0084683042537474,0.6646110400021289,0.8803609156295966,1.3910002004778375,0.9512667178948742,0.9050871140802416,1.1333531678019866,0.5641815910852888,1.2314108628696017,0.6330373542658404,1.8237430891223743,0.7374412534973219,0.5631450635170164,1.688929080619135,0.22623251851494086,0.32395009301764,0.7702198961268932,0.08215173195488554,1.231232672392933,0.3758000854287413,1.6627279074591488,1.165675536136663,1.2693494476552936,1.5182335680863226,0.4834514982983303,1.7788989581495807,1.7675613026096868,1.2205531411806911,1.0614569847759487,0.0031865438974497955,0.08795243704135951,0.4486287691423152,0.8227308713060388,0.4885094432305277,0.6334570977532352,0.281080444444813,0.5366919881872525,1.5464500674806883,0.2733548703812838,0.5217791833107392,1.5682537335134417,0.20457013588955952,1.99788189290805,0.1577909132886869,0.29161657371274935,1.079573544078042,0.32619950548629023,0.029498657660166336,0.263343923713425,0.25379829744946136,0.20039355598419362,1.2052349202681871,1.2910104823097697,1.2298263222168815,1.9214947429722138,0.3692184509981917,1.6635209026088293,0.8111887840471939,0.09450955214009707,1.9821363237877616,0.445054272701629,0.5992151555963984,1.189260247166643,0.4631323642508686,0.34596334856984057,0.9314475427087415,1.027449598769774,1.9587786416396917,0.8181653500862472,0.2217640825345735,1.659112027024022,0.614882586625728,0.7499431036845015,0.4506816497237966,0.5555996390807686,1.5961646222212802,0.727800371319204,0.7159625100627579,1.7078738690215245,1.5429859875236798,0.9712830148894402,1.006028767603671,1.2566126477171704,0.04697184949072355,1.9449140102351408,0.4232295760091438,1.7495660226799248,1.4734701287219747,0.4106746833697568,1.3246995171819997,0.06326410285793473,1.8250783957283683,1.6770927082674234,0.41341147552716256,1.24260541592949,1.6900552598089713,1.0500050894636952,0.26784841811172494,0.3440988710841286,1.0347701687496005,1.5876658681501825,1.7432041415012118,1.5202072410280554,0.9109463820396378,1.064913894981319,0.9862472766504562,0.1388312301248214,1.776435253107877,0.6148966795098127,0.14418226219711838,1.093722172921852,1.2582289423805149,1.5019550329088915,1.9480961023814098,1.2882979576628981,1.7142975418028632,0.9191687144833495,1.5924945931570367,0.3829538092521817,1.1944165287377684,1.8442067963614777,0.8785145029208024,1.815204421063313,1.6787222596206213,0.5275242268459939,1.32468646822982,0.09764349001952155,1.251455387254651,0.6366646629890507,0.6238152202597438,0.3804974970791855,0.8601581966009831,0.8725702712699098,0.8917204771523878,0.33662243771195244,0.1536883138532453,0.49508950968180393,0.8655376510021894,0.6239148409231167,1.678451297402222,1.0259036744544918,1.1789346812013508,0.8568076807022172,0.9085650756322214,1.8004809433480284,1.164787262837847,0.5234409838949649,1.4533320807759516,0.588730414717607,1.497546841646839,0.820674731262626,0.5659458428923011,1.4833730345122218,0.590014282106854,0.4094100128314396,0.8896369163049554,0.07302950802649934,1.3183972227251906,1.2425231339012857,1.4251035229748241,1.2452058637605008,1.686009209325981,1.3947254065691168,0.11447729171272215,1.998697322437117,0.30662752035116797,0.023144409900107694,1.3476940842149534,1.370919781242993,0.6874206444468096,0.922457752449873,0.9882070272494419,1.3755569867140587,0.6609067157973745,0.13466607809738684,0.7275186795369948,1.028294926159602,0.7137117388113204,1.460915525007177,1.8602932808986763,0.7593767284717445,1.773082083824401,1.0712655435483738,1.44034865387431,0.43921953275403897,0.69988333562785,1.5919540012325468,1.3620385078655437,0.7086152784574582,1.690879615315431,1.0472964469002748,0.7663385405958685,0.6952868487435577,0.598996822166895,0.03547541305529461,0.8193710849618592,0.09933927928414625,1.4536212973086404,0.7693540399674964,1.405830267675543,0.941472059401321,0.7161111426461629,1.69135105114919,1.4699155511250697,0.949981578813918,0.6645894059222921,1.266671227595975,0.14272636933638827,1.7143554940041157,1.5687725392926175,0.5181470955598033,1.4352729134179925,1.0149435128768831,1.110944688219599,1.0461725809943834,0.6573380057086012,0.5771710605975824,1.557724631349298,0.9796622815001468,1.1987052183944882,1.1096350858470647,1.38147875648451,0.6626441696789864,1.3035473430822124,1.505884614147933,1.669299217157207,1.924805777800032,0.45752435510212275,0.2874131158965357,0.23989041270786898,1.902625881667529,0.4338866034860039,1.3167194727150668,1.958820581774736,0.6010603447426472,0.7565962212943146,0.3721211607480364,0.4983559523297926,1.7342922302852002,1.6928658440413864,0.24374198148979626,1.7201200126964782,0.3857441386093631,1.3923783874297142,1.5503598558963543,0.5171620215540411,0.3824940598714349,0.275361024821258,0.037518992876938495,0.10363633749507487,0.65401004832575,0.7741970289998243,1.8868423079499492,1.745148271917544,1.092427643741725,0.5405722267552054,0.47083757966925455,0.26372781023628167,1.6396350540190867,1.38540038648758,0.08055795339959777,0.7821000141335983,0.06900224848299105,1.3634662284081527,1.0089221420689973,0.825928262426218,0.9980381062190234,1.355675868586509,0.7727263697761649,1.703705282882251,0.8646584738185051,0.6768588795538516,1.542099054692799,0.05351841355207232,1.8701280964882985,1.0830312761423817,0.4958694243831718,0.2528243991731412,0.14959833062764546,1.0758954481227807,0.2639867268533414,1.4926981452384716,1.187399220007895,1.8109512597134618,1.7882064945194187,1.9015079635488243,0.4033389295427324,0.42062910212311727,0.9594440168676486,1.0645306504581826,0.8030845937979316,1.5128114567532502,1.418023951532439,1.1532543644577482,1.3303041261738744,0.7154046055480592,0.10941854409156537,1.548667196469952,0.5466192359723953,0.4991646962375012,0.1689504055328027,1.7484416338464877,0.9365544165103306,0.1364887372035286,1.1016962498697682,0.5123218275266571,1.4118955452618243,1.1016228934376078,1.6260569035706132,1.6084696117153445,1.1940879792712327,0.059022859040520854,0.7844258950683026,1.8115810469958826,1.6429733888656468,1.8412333439964896,1.0025264367803277,1.291484230515457,1.5798386419883759,0.20815870436887018,0.5766747058046208,0.052461250381178604,0.6131415485993351,1.272562812757908,1.2463084680243923,1.1320370609132597,1.5365467137256914,1.6739787665059378,0.33506182010147145,0.13756584114218007,1.1544440636420041,0.10416467480451803,1.464995823613209,0.15082121160012152,1.5300611597293297,1.034345016862993,1.0508009625523596,1.082491679804598,0.15569610192968095,1.3746486569624343,0.454817902704539,1.7307744761911856,1.3227898272862677,1.5696828779627117,1.1807743434936906,1.6105461977772306,0.7612821984894002,1.8853832440662888,0.6814764501590386,0.7398178426104177,0.1511319091661162,0.3442531338724239,1.8968198895228408,0.9717086841300225,0.30279258440439366,0.859170170368223,0.4286121161277798,1.0482525768659254,1.9546814695658252,0.31790663741247954,0.5408552988977094,0.6756904903187793,0.9194644461265301,0.034729735400467865,1.8042468979638182,1.0086983495856208,1.7997633245508864,0.042853573641080146,0.7304517050241107,1.744969939793809,1.50444753682254,0.9646046060106218,0.8956782015455607,1.4422986116027732,0.3831123904024111,0.5445014882023058,0.461239162827436,1.1879665552992027,0.47819773232318963,1.795934395554925,1.9163569031245595,1.0095094390335693,0.2741018138720797,0.23613951237327224,0.3481948315878106,0.6911086922876705,1.3881005185716901,0.8558581109635687,1.575940969983451,1.0121583838120245,0.6054120872343215,1.2599836170054846,1.6791522233846397,1.240515200467503,1.0555941687826975,0.5611660763828725,0.2072062436277848,1.9887987640655083,0.35635718940738914,0.9844381591809587,0.29359775208397304,0.0684443614624565,0.7357496410359726,1.2991976265645302,0.9308362853961665,1.3338330041575464,0.9799040284368105,0.8095818100180225,0.722439013414625,0.05120869930423487,0.3146689995764862,0.7752452780309403,0.7047081025495342,1.9028046603056161,1.271949147050419,1.8183690178670906,0.9392918241742838,0.9805460726640658,1.5193602774991182,0.8820523645454883,1.3618627327511958,1.0791190387622915,1.4203305105575486,1.166378891262107,1.933429374565427,0.31975708124554786,0.7124883464530153,1.2630547520469244,1.949707812879746,1.1103025165293858,0.21249711223581394,0.3334286984016787,0.6390480354518769,0.38976611718282,0.7977072313409491,1.160780322016404,0.8627886016586138,0.26874123103906994,0.36565199750671756,1.6656614752329715,0.013415692391787139,1.4997336831897992,1.5881613906002543,1.1566251476480747,1.2961499045399032,1.7423731463911405,0.37925725106797187,0.1710269800692848,0.06749666604251593,0.9235333611001186,0.8056675914123052,0.46589776009231376,1.8632172494733463,0.8186210316278317,0.46409354332018987,0.46805229568652784,1.1883892950729793,1.0369935248593458,1.709284444295865,1.0328484983204547,1.8772618630051698,1.9652035837967565,0.636172276959703,0.415742223316881,0.028142134177633314,1.2442904808773518,1.9270696341281308,0.6335913777559953,0.8977377214339023,1.320574371197315,0.76310770069954,1.188213167554416,1.2138371586628902,1.3992149110613112,1.380715591317976,1.2871221027890047,1.1091420342349185,1.156284653590499,1.759098055093685,1.8064945019687737,0.14220327637559038,0.9062240467914968,0.7596707832100201,0.3480884053476598,1.132146747302549,1.2361666647766654,0.5602857402442132,0.9482460596066967,0.4575439296179008,1.8923760618055554,1.778198791492995,1.5368680265222188,0.8797175434091163,0.20795549588910373,1.030471121604279,0.9830712584018673,0.4898963539422456,1.597641551959347,0.9293940625321387,0.41266879454302025,0.17895374389367075,0.16323605377485334,1.8076116080886326,1.126430165049616,1.0673766395257973,0.7691732375113212,1.977282081164161,1.1676555577604626,0.5200262826146116,0.6931590616639719,1.7813483542547985,1.8772652227142348,1.205566027739108,1.2723024828619631,1.5395671421798522,0.9638032977187468,0.6591878091537076,0.4085951486197854,1.9719832431323754,0.07049992897242191,1.7271224683725117,1.4145595295064026,0.2455028350059073,1.913178377352363,1.8196991499076167,0.24925077738164048,1.3265205932850888,1.5255833507444434,1.102171963416018,1.0709709794037263,1.791066633601838,1.5475632257243177,0.7995415255815345,1.1084657806067664,1.9407774597350758,1.8109194918618619,0.7079223387849242,0.5707672458509878,1.4318124453440193,1.4028528478946967,1.2545520090407771,1.1828963852670094,0.4054157906502155,0.6805723574612309,0.765780867796272,0.5118486023406937,0.00955445096357,0.6523496917611558,1.4936501993542468,0.9258690018057246,1.2863923156868577,1.2530747011809193,0.6290133098688664,1.819323247618914,1.4703861534371925,0.17872255346644775,1.5583193390054688,1.9539419297271765,0.43853687082429427,1.2118932148478632,1.0091319809318529,1.108926787210625,1.7794446955833259,0.14172702639376414,0.2988598329128171,0.5722339737573298,0.6587597362264928,1.8107929065445478,1.2494174520784629,0.903856593495823,0.9173155268214431,0.15610942817308804,1.2531170096235715,0.7275110501670791,0.6206049260232916,0.30579954478594973,1.973546737088613,1.686561354036628,1.751056831827361,0.47382646249970345,0.33030163780077704,0.8076935159758353,1.6267100217723671,0.7987752762165874,1.9524266642889616,1.6325927224270087,1.1626938134191906,1.3247560261564033,0.7808486086227621,0.7485860663373433,0.21825847126756726,1.7573491663280796,1.3265521830382503,0.5400603412020192,1.932802956108266,0.08496902642598587,0.16594840499345967,1.3759796387824736,1.3984640858960318,0.8789904456473728,0.4384234964584797,1.2712654969814918,0.7557933269576586,0.32627663104385923,0.32947723022112013,0.6640120599092504,0.05835898194085657,1.303769246686056,0.08076450342569225,0.024432011246100442,0.5276153717311486,1.3039666362758546,0.4734895301841738,1.216552796130502,0.9994985864690229,0.24115589555008518,0.3926563114908127,1.7502794663677175,0.6776087063491548,0.5793998626337802,0.8637146391311638,0.7466578578673336,1.9366940016471206,0.6417657084126609,0.9836024386243796,0.6610599907943845,1.4879413228952107,1.033696603264518,1.391722186403894,0.22382457205690115,1.109329612939311,1.6983831473127105,0.23886447188273235,0.012467289747147885,0.8101355762722593,1.854856161222947,0.9130329825751835,0.731154687760434,0.9535725738294785,0.6062640582477701,0.78325116453927,0.3027190913457289,0.053151261738754584,1.980236093738708,1.5527132953887106,0.21346869742664484,0.7280941570327959,1.6034334477355072,0.6299828448818774,0.4106449386416385,1.71724664725674,0.24423777482213038,1.2765777180376767,0.17876485245063856,1.0405605651180516,1.726026914357896,0.5125406968896475,1.2263133998871665,1.3560912529226008,0.22810774970009964,0.8725388221909659,1.6050113403800097,1.2562060722979775,0.08861074366670502,1.8326283391340592,1.5187131293787537,0.5417752597756196,0.03137872657908696,0.8841559277864967,1.992444623489825,1.5918257756632297,1.1789056798711677,0.8796044307923021,0.22087818907943196,0.2146786270764681,0.433602790144757,1.7980258783904877,0.9832280324979171,0.6474267500878615,1.1941743890264627,1.1593969831223347,0.565292225826903,0.5484590594115457,1.9122984927726565,1.0333765620036872,0.5699072643243295,0.6776691765303595,1.0472240663913865,0.38305809028150806,1.8631116123140614,1.153855137008957,0.7729423184548375,0.9220067685865458,1.3172291688987017,1.025958694618248,0.7570923759839474,1.7837379842917414,0.5172607971565596,1.7435631784738699,1.8630668180497862,1.7407101508812297,1.4272645685141863,1.7317046475618016,0.43778254255019733,0.9638724456262097,1.8474110010408449,1.1685255699740729,1.1660292119321933,0.8296396153339279,0.597336072326473,0.9935714881056938,0.629263107121013,0.9233159150729907,0.08646671909199888,0.06423598667704347,0.7486775941941015,1.0460374467096751,0.3806230153093057,0.9965182982144869,1.1173765501102404,0.9302019831975677,0.4551037206650455,1.3190373244316156,1.000152101616062,0.8154591615850925,1.120141860453224,0.41653482971618433,0.7958532225141492,1.2142318405244161,0.3102509869656718,1.0440277517791545,0.6176845634255229,0.7081049591607026,0.9671867758225653,1.0161540660995632,0.8528332572004279,0.3955678148193962,1.9618151533532147,1.9108191588963799,0.2896250012074142,1.8339501274761143,1.7761459653796294,1.8357904700285128,0.6295624235411428,1.6238113008014305,0.49995771200498706,1.546379550973783,1.4549755280348853,1.4314431481047274,0.12949885920643084,1.8195857524761605,0.3410283050388496,1.8886304265558043,1.2390128980504707,1.8631441261537947,0.9483013481938866,0.8693888919995336,1.2488436633739037,1.8006185112887947,1.9446481764137111,1.0953751917535106,0.31475600487165817,0.47353272326843976,0.6251795969854963,0.4548951917642631,1.5558595108129996,0.24096525008708772,0.262239095710696,1.3242607164201268,0.270221834374672,1.5469654341027388,0.411752808148112,1.6433462968829657,1.230506568886135,0.34274204051668766,1.5698584607154726,0.530921059200088,0.28879136366493063,0.7151261410903964,0.14859037574674527,1.7607840000844914,0.6134601993741775,0.2906588913675692,1.6593421895813856,1.606703689517609,1.2975067166088616,1.0883926396998043,1.3085617862251393,0.00013290777494536914,1.6093559455090223,1.6564979675288922,0.85369395468309,0.5356125578439113,1.728802480026192,1.1364522010726485,1.8764729226595778,0.5946187492994539,1.7506547722881298,1.5972607526667835,0.8855722524777044,1.8992228789599208,1.2785489526546097,1.7618184531390477,0.214519691285225,0.6209245858277505,1.711003990416977,1.387247830273372,1.3371991053131416,1.4715676063648337,0.5993552965569919,0.18246389448004682,0.794768093598419,0.4833952966974669,0.5389302471876373,0.2749263389583069,1.0368008862501414],"y":[819.3188473020803,455.34054948827554,238.32448285092437,973.3596948673176,766.5919183412747,137.029454143537,1003.04790657327,634.409357883977,365.6778184229182,665.5586095539903,110.3300957959517,395.34513543894786,587.8891569696766,380.3438476830511,897.2334391825108,192.10690104291382,283.27902448350085,997.7854408125252,809.5908133675615,3.214788010074699,275.54182430818037,537.7839308438353,643.5330957150762,904.0441230425577,657.3601115963266,914.8070998707647,902.5464233220287,513.2260580759647,10.254423574284033,591.0242085128882,726.8913293398849,461.992046990502,320.16213119647364,85.37756668202985,562.5590323304691,615.4844157334247,517.5837726720376,997.0816274717312,989.2262184667201,28.507464994232578,687.1588258571797,656.7696514945166,114.0357139210139,481.49220873125444,46.226061007688145,285.5292290660748,859.8768657380119,277.49146643417566,54.64407655192747,540.1263604481467,674.8997306911433,347.55652013022836,601.7983402363076,847.3489724833395,239.5929856654617,934.8526628372585,241.3102288849874,812.9878188427115,651.0187666432395,557.3536809333121,187.24547874344353,789.1011413154073,732.6827220151553,105.84311152877956,810.9208598650374,161.21810936673432,240.2856137615097,280.2646567307221,581.0013631387804,817.1514816998917,342.97011018058674,84.19310376279566,474.948789663923,425.86463219068514,885.4097933175354,236.76003541457123,14.955293066245076,1021.7715625493872,208.1238364148203,25.122689656096895,389.1166698153494,71.37518305611854,523.6816135424282,982.9237981363234,735.5164401393381,15.490853693622853,151.38233605639766,953.0211497628751,357.9683446099194,534.4904866097638,296.43506002872766,109.5050918657214,878.9170935492283,91.6696479403953,561.311940810114,145.3060637193728,897.4508128319634,15.922423982237092,21.977405309560822,358.82335898274437,817.2735529691304,214.46126566812018,738.9150015342364,167.8879646907783,292.25192650450174,970.4349907720612,1001.6692555240438,691.4410683166128,884.9843756382822,230.7728445062678,100.57564504541085,692.0814484360188,181.7866634497857,90.78003804835612,9.942644222679178,639.4745193288873,313.9285387576948,496.17418927816357,587.0606152902645,559.1025706511524,467.31263074630454,175.1748288550417,407.274083588336,201.26279225185556,74.545503472463,125.22504750008977,362.78047928511194,122.9019195880968,568.7363896778517,445.8238099868205,694.2160885085116,986.8199462881964,841.2677903048371,831.3252565890253,155.62985751891995,953.6711421318972,263.78631477385613,748.3961354847534,925.9215837346461,182.52555682607783,651.732173479043,55.05911077753683,822.303192087182,866.8022596860754,27.74767954808624,149.48612572066236,485.6904940341011,958.563892012733,664.2858105458895,492.2785629565616,746.9982973982752,168.61317248644013,810.8583541794168,350.98473773483875,755.0752243960544,950.8647883257496,912.7445882276885,442.46683980434204,824.2046842979933,542.3929938278244,199.87799289663963,378.2354010551809,49.6732375608716,61.75281940305831,13.33928204019253,430.4653932006705,570.8839328824055,1001.5586735767597,620.103017790696,556.4231124719437,469.39833347640786,200.8570713555864,533.6375628578279,320.735812859366,264.27025517885284,612.6107981866277,835.3612576545772,88.50883797391919,99.69046524145904,167.18800838645075,18.694992402466937,782.4431670793508,471.48730937557445,1011.483488933982,264.44949912465415,290.32133588589375,77.48546175236118,555.5274311207637,791.8701773627798,46.57568011442265,419.7610895169354,975.6634531769965,94.78464464697493,414.3965742998613,990.9206013544787,526.3065011477407,356.52202830213935,66.47703509361008,557.4299942710786,595.0641429322815,418.53299326639694,367.2049043415766,443.27157259889236,617.2098459936203,481.87261843654153,630.1136566401731,494.90119572332014,1006.2362213851534,378.4647763424008,270.24838617019634,713.5714991547196,1.4538284819508362,931.6308502546207,175.74686320955982,799.2850191850256,636.7239521045559,390.2518876659923,425.2968047617834,298.1534426167417,7.923658455106079,342.44959611579145,966.2148138212009,302.9268078731968,772.9007858570643,779.7457921567993,904.0029791458569,513.6000411223818,324.0431449816034,231.83485962722602,485.6569803936194,222.6208306036027,1020.1335820384551,240.62203836586832,850.2774034375576,905.6882086368842,183.96551852568257,136.98963009256806,474.1743621902348,227.1517327094682,373.01021533250196,186.84565551133062,353.2899720899709,356.48750303226666,970.7148304321375,902.9031870704097,713.8764948878568,927.3779536809935,133.79279091416208,1011.761180573566,691.306165501006,593.3182027916487,625.5866930783515,451.9494299838394,446.0741581056823,315.9533624164062,573.6373341101238,529.6083978584089,136.21669021092703,670.7793124761491,589.8416340407766,354.3651474606256,927.100501206124,833.1616287811928,932.9142638564803,955.8213588600987,759.1752322479472,315.9385936271268,811.5352727288691,737.5574370191542,1004.3226235032514,832.4368916051905,516.6248452578792,803.0686889230761,992.5285148081249,473.54329487662824,358.37930812400793,987.646378753179,257.4127041801347,188.72335193045683,461.0769389008319,887.0984078599948,504.3784158529561,434.5781888248291,850.5828193213902,334.28178036211284,703.3351277960919,175.65521065340806,663.0358965228637,70.18495077882892,71.9574157751207,113.24813431780524,393.83966013921076,905.0713710816594,608.8034294163249,758.620369527196,300.0082412190819,302.1885771729568,76.65341057925582,827.8932058010977,99.70793738686234,351.19165613020084,151.24991734372736,886.7784793004241,769.7489678960102,887.7372471031697,222.20558894914404,32.13291124711998,497.57306030922894,838.9042742867214,981.6944395142579,507.4014030091972,613.167049141596,776.4401961656681,997.6779262733827,96.16830030953372,370.9888483638945,94.04711277595743,741.1024598520288,944.0913398932158,975.7970242260034,484.53084541681335,929.1478677231975,270.71672525344843,801.1238013453637,132.124051900886,495.889528912026,65.75491041050748,188.35147737319812,840.0192217399526,890.9622055899886,679.2788068792252,545.182624639774,910.4024057641544,42.87928943457064,188.76628049806686,537.2997657723625,975.9247279904545,751.5541650538519,935.9708708441656,749.8244864627587,141.08547757996428,694.8617988632067,542.2843358774794,799.1021472807215,885.8677125705246,928.1403865132007,755.3799524345504,418.5856018986934,223.4747051193384,907.6045126701746,82.00302065414462,631.9027754018924,376.753078908814,297.94958881770924,709.1822343756128,520.6322323176101,387.7489066578487,758.3390263138788,87.18857924228519,472.33259749808644,827.452001621948,607.1021513506525,983.6075645710935,334.1951978694117,538.0219386506008,384.55577345360007,806.4408052093254,320.1797376107178,539.3913518585492,542.207079284742,227.8470119448167,194.64974657751668,759.1042320526873,1022.0717592848235,868.6263247910358,362.11293218002936,713.4085102766638,694.1514047203858,520.4709050477559,1017.0614951063128,566.474376280892,274.4082273291126,900.4811629923224,414.91768081226735,924.5618206998723,925.0308874807863,326.79105404734105,430.9621587773984,15.291858597495889,227.54799543821457,332.92916177550774,957.0311549575168,570.981437378457,956.5793001858763,602.8033296081304,595.3379940639425,634.3703546393193,680.6222791230847,235.32441365604404,999.3564347116171,457.09946572771037,5.112537057880786,1022.2741808905879,567.2274654521983,737.4746998093077,965.5359166134664,81.51256566390703,460.1405174791938,387.5720912630693,827.5686642185476,955.2592290096153,770.2315844086193,894.5676834426157,770.3161956481352,17.963591365885918,947.5497982027055,843.1241428719158,357.9042389913268,1004.2027704357089,629.7728924345894,467.2813090659329,334.81095197397906,755.5824349569525,810.9261351838867,930.7938635791847,545.2100188138319,903.414631451747,267.52130415044485,899.5057538371638,608.8711575538161,1007.4029251215571,522.7223418347611,661.1389851073073,1006.4475621002418,64.85855800822821,1020.8941644672423,682.6745542324818,342.97737416666416,822.9807515343358,179.69532628004538,793.9371792355489,882.4895801911883,933.3287354143785,144.72677679431456,467.8456549803185,901.7608985102281,96.55827852372875,316.2478438338072,1.1702854254538124,858.7078629513127,88.62949256767399,986.5519889772567,639.2874229891415,282.87632491202646,559.0702103763057,930.4301641095501,856.3074569568904,979.5529646682024,257.47401193558073,155.15651095229873,183.43015002027448,432.7465425213992,470.6293786242003,225.40835774740947,704.7071407676027,823.9036678639617,845.8014410653523,1014.3206260205675,166.14970629677248,677.853228495836,191.50162541355542,762.8720505081305,1003.5617774142788,759.7506879267614,904.2313994551332,512.2989356883307,991.0068182650302,888.2178280071302,230.12878037294,1001.4473954898002,250.98421845756013,472.01069787446625,578.4670502255029,966.2182255463405,477.94316841114187,224.58614852727828,57.22721371755142,408.3925978353748,494.76848814991297,683.8865218215011,705.6226906911747,596.0564280179536,147.33875209989844,155.3464639274914,209.09788299942227,329.01889925806836,262.2067877675064,710.6889698510848,775.1982831682072,165.3293192106894,117.23332925623379,267.64072094420874,381.5016759440447,358.99760548022675,893.4431962143728,405.8898552261485,657.6147374613149,557.8998617431132,65.01942194639662,113.27125188327113,256.96588631865575,406.2723571779319,625.090696142494,439.3044483050777,12.833072855931505,705.2842880867873,912.6770089216842,113.44605763926484,152.11085941509077,186.1788016347067,595.7239911827359,580.3450985649969,604.8899088219005,599.1370258931701,978.5577321992753,824.116032934997,384.777753527453,802.476254729006,633.7566630671,260.5331332046717,226.29725223912624,737.7056138822408,111.05105995180509,874.640431578993,229.43232028844795,379.5452806847783,520.9989524697287,509.2217730374646,300.123370606266,752.8903915127172,325.30074077572283,175.241160196122,167.6690885917859,455.23495438151406,384.30215823072683,254.12459589100672,151.97587295113476,922.2126463112255,167.53031585447422,1.3435021387924735,362.8495696807729,824.616070901375,514.1564861523674,245.19900308552872,534.0288744190242,926.4505058998461,866.9851489819988,931.571693634863,633.7296912254532,724.7585841836126,235.1490493343622,291.73788979125516,182.223226722066,723.8166296464319,244.19870463560653,401.05902862979735,154.59275259275137,899.6966089599239,812.2723241269205,685.9666702126356,473.60378501708567,605.93754038437,733.6360331577869,90.15723063073267,979.3769487630715,906.19048375418,364.54835028867944,581.8808913291564,252.72207969112287,524.3474635623821,906.5468272202115,626.496121427323,769.998311160291,409.3380305505856,99.42077934295583,232.34009212385422,458.2236926352773,995.5255605253154,840.4635042674657,835.8349490290484,480.01097585275,968.6302927668526,812.7560862315511,811.6039370680899,53.44229569819299,5.525651642266666,174.49706969448232,268.284730591884,95.82799368172834,468.5499342287086,214.5605893881194,43.34981183692253,515.8290696468065,58.77470774357971,628.465506359069,898.3810049161855,148.13131227529516,786.5706197354286,919.7540722341975,524.2913368321507,815.5720866575991,372.15940519375806,164.334224268384,575.3135707888063,891.5516120116058,913.2431111497076,725.1552743754155,262.62954210351154,249.57233396416314,143.91246295276858,950.575719658354,26.45916106553284,650.1835153258604,256.08334213212277,260.60859818884205,574.7124198743214,957.4745557207083,616.2358078393668,114.82974376580978,623.9126537988657,306.7033621734015,508.1627703077678,923.447273926743,611.9185218526911,507.442169967411,616.1570854583125,334.8412063202462,264.70778584079244,884.4638590752907,589.2339613677095,446.6534794371729,305.77321508681564,226.4786448056841,442.83175252668025,684.5236380194665,800.9019581283543,656.134217630816,349.11698724778273,829.5693171534067,715.5443477922016,4.742414758745895,843.1187965652331,999.7431783952142,105.03733783058408,95.26554600120164,61.508771926052646,949.2521195037126,771.7701353628105,704.9179751594179,974.7898900921066,508.4168988179048,218.1508043844393,984.8354834625014,93.3932214349428,569.6802097668627,305.75576941195084,490.1919309178662,460.9668687817565,734.4630667324366,790.9418447729903,333.7938114647725,923.2939895093491,336.5702256236822,573.2626496769818,967.5751493720587,826.3998457632335,536.7128424167983,649.9362998916586,337.0181339663566,611.3215243204461,848.9430414012942,927.0167532339086,364.87331170096274,419.96513786782145,347.8948329711135,27.33494839015441,683.0965897589278,785.6635866853975,321.4466534400873,272.8522138415075,280.042476571032,480.20097630669545,578.6804168428129,773.8512517591514,619.6795581231045,536.5416405263204,1018.2073531434149,559.1604490525139,177.31651059457806,850.7238028533457,333.5018324747125,219.39553712276575,322.97113433750803,491.48811573535215,862.022726988835,740.0654202533765,693.1166018404253,151.92097085953867,772.9800567786756,339.1900825319567,479.1241448734356,541.8471152832975,998.0116723512336,14.962434385688084,1002.8688809856077,57.071809977727185,524.4023663021636,547.1123477571459,498.35273176863154,757.329738420563,873.1763064129118,125.71677675810236,409.5505952849544,989.3361451544112,307.7841043697059,1005.4875215205542,643.0679348758588,333.9953704830108,327.0839861137956,530.3306915808089,995.7269388921169,14.878096630732443,336.69860737737963,330.5225465393495,981.5535350597482,613.7614004143736,491.61964669362067,58.3886892020555,207.455620223153,244.20281453232235,395.1130090035242,807.8338465438948,196.47873854428587,261.06606847917715,537.8075411497675,389.07525547169723,319.7839976348198,736.8669306976589,44.71236288772286,391.0351508790428,121.43154668948898,996.1227512879502,911.705650998781,324.67225712531183,393.42238826667904,838.6444022090246,823.2827152062399,104.83058492765008,11.077799548026292,696.6499114075201,847.6724397828883,424.28733739394306,522.640768622378,518.5181438879657,897.5609667945038,458.4490876506486,339.81539759697966,1004.8968260471398,224.0287339975638,349.9011229814356,169.7561850916985,999.6024824160063,611.6065247081466,614.3000977126082,782.3070076399687,248.21030014873293,589.7441680214671,314.05450318290457,1023.3349232811661,169.8979497810542,991.694679955204,955.8632205511115,289.1074358593637,516.4564937574801,302.82970525075973,241.2996711095194,229.02886880772178,872.9348566591768,203.88798512518974,503.98060646622696,514.9465991386298,804.5735297110325,786.3269639661567,954.5845411192677,655.1334614364857,12.831459084421226,630.0828014760616,592.5553881533941,932.8209715051116,994.0616212181817,157.4852846965366,853.800022717651,779.7671558666802,839.291389444156,315.39169297508386,135.2374167733965,979.3907301344866,83.54485919168155,366.6599957585886,744.1445541722074,586.167490734131,635.0442741555914,536.7356575639072,161.31626991656037,1002.7400212662352,150.77041551653656,404.31853782924986,880.9231188194051,210.28050439927813,943.6194278169316,276.92980265634833,761.9261777994492,658.6302956493174,781.3104182946116,230.29669362542109,642.2712568060048,409.7032810714164,57.99370602488136,104.62024900196445,690.630548276062,347.0598973309949,958.1323443266147,643.0614878031342,24.15570207810515,131.0498099152619,757.5640565716369,830.9615122924037,874.0764014539313,237.80586510312332,208.94087998351665,911.8929854007085,741.1250735041801,805.7766304179042,834.378796601514,566.737292659083,339.66755411221857,228.1179940607176,617.0457586220765,186.7210070531537,1004.075226594574,957.941962982626,125.72434716801081,444.75232768947785,42.61114273424039,972.320823504044,143.09511679621244,22.025996004601097,852.8217657627306,982.4529469048656,181.47939974112626,465.57792687593144,133.43830337209954,863.6962033818726,487.52643732468346,338.656096314039,22.48697757866603,163.90253427183848,761.4754507108062,613.6960665181119,642.492576531243,400.74579993426437,431.22161179743205,853.2577111952003,94.52836471235901,566.4220588090359,769.0687791058139,323.0204176282051,400.76566331557024,118.843533782863,994.1933116266483,715.1132640465258,805.9017083939091,352.81901815938033,481.47290930063957,185.8122447127845,383.4291942439122,352.4454706669775,220.2587122011264,649.7342949140417,415.9936880911557,769.5682354738886,359.1557972816987,684.6777411261677,499.08680733231745,849.4247324063299,797.5656297655773,293.01723593228667,480.1169167637622,687.4700968840945,553.5663788811911,558.6938851538685,713.5034612639572,234.1903894569108,234.99681532917123,66.7791170089206,417.2681232092576,856.0725349884226,703.6166720019435,293.77038658399306,867.1371668646378,431.55923572911934,358.48944571357765,152.967228762045,594.9304487172586,209.6648574229804,760.1536905562411,606.1942250895682,407.5784326976702,464.8225583041101,894.4412706073248,544.0198125238338,514.4768022131482,914.4905857352051,91.8601810835172,678.8997744159886,816.51530023354,18.097107098772653,183.27558673367662,114.520497652122,166.08556124520703,460.0496196092274,368.5196988766926,164.14329242445592,597.0878485195121,543.8152215642817,205.2582200575655,500.0363514176779,730.602895336422,431.96557485671303,33.663775963827106,368.65533567979594,306.60699005822914,473.05830757949695,124.04324551354193,21.595956528326383,721.6492305978848,309.2117631517043,722.689483225575,970.8533312386468,350.24209013707525,904.2893075949413,108.57461404749336,565.1171148114599,723.9748507238679,586.2167184456788,464.9557299156222,544.9832102512083,392.7214342929087,109.97902156073883,297.10038522134516,966.5123337492995,821.8167339068253,665.8274983958507,991.7676292695388,215.4561564824745,785.8731310080932,824.0048419478555,986.0972930804281,889.678556528053,441.3215041730673,384.6826640695084,510.9261676568175,580.9814945340845,661.7076218795069,782.8130564344326,279.7460792763235,924.3611687765948,524.4949913227056,184.93230022489422,872.2507205981577,507.8747540487126,654.1032953351046,372.3167078287556,440.4207853609247,763.0314967531705,566.3709800808191,490.02049244064915,981.9509438868456,688.5685540496207,332.0768530588715,941.9977056579925,967.6896430804815,46.97133081530899,999.0324903360497,733.4340676725463,205.7140368909453,867.9781631641731,179.58420082603936,229.68170511936592,59.04842299704342,878.5273138908802,885.2865230786379,242.64335950860175,825.7868031158188,595.0073769917623,791.4566411219853,387.8321880438999,681.9076806273125,1010.3156956381858,420.7533025783714,950.5061772723736,706.6831290733294,85.32717452934457,834.8770635018295,861.4868668158663,541.0369298040692,694.308674052877,568.2995016016124,364.59579796012645,29.825932877225,981.4050425768919,512.7137178077056,402.44729583947435,571.2508661454167,682.729624270409,187.63487206831076,216.26034119751102,504.5943685933231,417.106115818848,100.67219327823693,264.522849681382,287.7541139458291,762.672185329593,118.13530341303556,539.7719070198718,230.64739655390417,630.3321114633469,188.92681050988142,196.94638939775348,287.88768754527325,339.7297015846667,552.2774402649511,680.9042193573413,996.2199655223598,720.7278258544694,49.27744982632419,1008.3678844004373,652.9903288653089,734.37234089429,15.530135696922002,208.74111988839513,693.2462357257017,978.226571591241,38.88453299689024,829.0183496478363,162.93121657263248,865.8833375095414,505.44705189017714,951.6482437591843,581.2644881182978,100.34245281488666,680.8453389909074,689.0290755689008,184.6007097159703,177.9863788203594,804.3496573351322,289.16206790856586,102.26617916564055,371.85198047352674,72.02961242501772,636.0160476777818,1012.6095089970497,220.02106641868374,229.60985737760984,969.7515746614451,510.88047566094235,99.70437038780938,252.77845785287377,520.59331455345,438.97196530238057,851.1306354058314,853.2471962774082,644.6705909742806,123.38878914957502,339.0593270337574,867.7044615959034,13.74977180582357,182.96715574221446,747.235380822006,341.73830051878394,839.1826169198346,588.1668545709325,997.5627550534884,293.04910427599054,700.650393802943,460.2404441968133,651.7148536704956,818.9722240109427,732.938799194251,736.166230085871,384.41178511803776,294.95550440109196,157.41746909064136,213.03224787104944,432.9521063231713,776.4815537790233,784.0974080671978,733.0627564830312,584.7345944375862,89.05670491480907,666.6335642970556,904.8304919611712,194.4239553299575,750.4465977463387,683.8807758348288,662.2082977246558,497.3323850578721,493.63259788391497,270.5656938590797,610.4933404157235,924.941026878384,910.0911981538828,435.7898711540197,647.1832719257196,18.503089799848453,578.6210811138573,71.9526152601394,663.9492374001312,497.9341718320387,540.1313391529521,519.4995485289178,65.17599071766426,723.0950933633432,436.67107876180467,782.533374630968,946.9297528849536,592.7037791605127,980.5032650085525,604.1105672159073,827.9742521094022,392.87002411569165,183.09184038610204,458.52130633892045,874.9575973723709,564.7691555386921,798.6676490713015,2.543027223519289,140.11185839590974,394.66693237059144,634.5303986917833,232.03123967382282,892.9174707457955,598.6812336263858,126.171147248912,353.53398491806433,345.53205823996336,334.25421028136736,744.8062351352704,197.89695387811366,50.26080296091982,790.8930268545365,654.0141842006861,215.1647473804145,675.2493211616555,830.2945226665155,330.3573385206838,568.1500344392709,914.9290880850767,507.2748652126139,998.4836414296676,828.9605626733809,409.17528713558545,990.5466463762363,1015.9419320673935,741.6938255277058,640.3986319821776,917.7464695883638,806.4552709894705,144.8654713681343,248.4919415603165,675.5675255727185,17.374236750984096,248.21632132537138,655.4976805002542,521.6896119981457,444.7925303421317,595.313070004447,401.6904208958771,333.2857239310757,201.64941980094295,116.13436917892102,647.2489142754147,482.17392644812,855.2265561821446,788.2992478188096,818.802502912596,235.4302434131988,671.2911901885257,845.3578264311047,6.940391293139328,527.8945735190024,705.914966252609,543.7444233941543,132.7346886617621,575.9815611935863,545.4134509513536,33.28901395309663,422.7055677513208,238.3606959915229,953.5689570469918,112.00378939012899,911.2865503470998,10.409492225718509,35.748344274671126,429.7967295091785,157.45618648598293,71.5328258868675,320.8613537552096,867.1607284401771,125.9912947074613,988.1573469221393,305.03734568669984,149.27527934820785,971.9861988755613,504.2266710772982,419.22916286235034,168.92011824810538,602.231896580025,87.18163175007612,555.4969796955611,60.441181512458,370.85239639931206,923.9089459320666,111.84958629514438,780.929405451276,631.7604776933103,170.86031728272144,118.42141029390655,919.8590419163748,533.9030236835605,341.0999996440004,103.29292909730111,46.5835546903088,165.25106546236873,632.2367890232866,747.8027723582387,743.8702296318999,294.98348307375693,303.57977887070456,454.50438461431486,224.82373748350085,959.6897434395887,371.25487467665175,177.7723498168508,1021.8102143163408,607.4020810053496,369.2396459106908,82.61841453557963,584.925106416251,1022.7107098891536,111.62633605908616,645.7056174357805,105.36554363423045,652.1946044869848,962.3010420927242,804.3226823211047,224.03644655286644,936.2894024813222,666.4452207923564,971.0850842897701,725.2750213907874,812.510768835697,909.9401367170645,792.6222693330344,480.1081217334431,595.6924688086575,565.8597014482181,261.7734290990668,750.5046549432207,949.3384996503371,985.4337759930731,872.5504653225872,822.7339709563586,648.5132867340571,745.7634887260621,408.629307828228,592.349285440027,724.1969420348249,968.7222817972975,821.992923793631,20.941682737003248,549.8082078094748,536.703583547261,694.4599405611812,68.17102968436029,945.0893486038913,670.6221199468882,875.692919936474,656.1712983795803,458.3358474114774,808.3458037247902,908.6749092284891,46.24257277418508,202.97710220916963,54.87426709449437,49.53447946346944,691.9914195796506,814.5985881225852,640.0954430862788,1016.5198540836047,59.437442573889825,429.7472513614815,769.0451894537975,1001.7379449640614,440.66513283546726,967.860164917437,728.7063579300657,42.46250900877726,646.9011043505488,157.84038575527939,487.0997013745547,1017.6273153629014,770.9473957802649,270.10297923948633,300.3090207315614,700.8931137604324,446.44524845801755,515.0664660713747,703.0091114739945,460.7551232550353,1004.3422538103123,893.0975846667716,677.9594562072185,726.1257164564042,564.3115630024647,734.9514170421522,225.18636238816964,455.34363088119323,882.5010925798446,644.2764562588445,680.0794141706342,965.6469408223885,650.2065661347171,888.017548590484,288.9103524767007,801.2646852141789,703.1543217144407,517.9001612643921,422.8818297234561,867.3211245496263,247.91132350592204,125.93266461519943,690.9335021233692,865.1161311027522,253.85418188615176,314.9970682672615,464.2852088484864,786.0921634068758,395.68958128987515,177.78446501254598,886.1911428525059,686.5692407407553,546.235558953843,271.6735884552112,709.4806284953204,797.6910227092808,53.519701415879354,359.27079101586,481.5139431009792,677.6614293923255,245.0975362338578,170.05777707530422,1011.3724512355916,633.7031940806094,899.7775635147193,276.582494501656,542.283583434952,567.9472929293744,992.8479804630567,774.6463747916797,355.05606035316043,518.5949042651887,368.7229571647763,605.8093402668738,796.9752004284726,252.39435947804168,76.12462461680809,674.3913806927917,732.0966398972453,202.33773818279178,407.42094746922453,979.4666855346676,1001.442908458913,629.6078106632411,158.03358151712212,211.6067044712364,319.46125854015725,158.9977384306934,809.7539302154297,539.0035875006255,473.85339541115115,993.524887442216,158.1266326044398,513.0305476213075,895.4730478892841,434.15981006213144,272.4975019833631,306.05838240457797,335.7849300792841,994.776512574085,364.829172784546,987.4197557667184,356.65757838369404,347.73550330243677,882.114942901419,533.1987285063725,538.9045085299601,170.07838380504745,975.492413014356,597.3465939468867,164.60022348344182,475.0944277140576,596.2319262106165,682.4964698716658,26.40891722844742,1006.4116433532103,131.22420210698863,19.640922363753134,704.1041574116514,261.33126543107244,756.7938190320604,992.2745584945238,491.14293969107655,850.1817939730371,816.6808921362903,940.5588960259953,918.2539811448987,821.1121389882592,887.6305681230887,844.6787989541443,130.68878105513966,454.81771647367464,11.690899633720392,869.5573448325504,96.69833431633276,601.6950053281473,230.23425834491536,823.0890783798764,39.05016131869013,744.7771722674522,55.29424214501694,626.1673211336852,17.36415921620994,406.5421446837462,84.4667981573217,893.5209040800445,729.7493070846074,608.9150083858239,683.8539792530821,725.8741163543293,794.662158683399,316.4275034545692,329.6292450261104,705.4374285436547,498.30435799942813,855.1020106321754,97.93301199533255,802.5079792902266,318.59710437999445,163.7368305213239,662.2475284914634,145.8041628303697,482.0353260172161,578.9491171812922,662.207177066994,398.8506945140515,498.13378974995067,309.3716410836963,743.1430168964093,361.14567621482524,587.244455007898,639.5613867067677,523.8995401573424,480.96754489379725,970.0627621671562,464.7313365939161,568.6916391333793,685.7925449530887,115.70763305830769,10.697625445752237,125.72004316316645,210.53574326842727,848.2604320144883,3.8601274435945925,936.9388573381925,6.53017883971097,970.6234018632352,882.140573034439,454.8266193233185,853.4999476066056,679.3015809288199,151.6839425933922,350.2831400867334,153.17803505199697,287.29416346056166,725.4041072230052,183.87713457516713,795.9985258164656,251.59566352898275,932.3510093367273,520.5624492915886,739.3340328819706,372.91778112472514,912.2384134299027,7.0030656241305,898.1658023188476,642.6750578833977,949.4302764555176,426.4206424347328,164.8134678095737,949.8413611542783,85.21477494890678,873.1307583458774,776.270519647994,463.7636665297581,945.0530573194179,446.6312154369498,816.5045079660572,495.6755301207095,753.512237344676,839.9567522200696,845.7871538837614,155.53668261252994,929.4775633489315,356.2481309794922,574.6045920066737,305.46074377065236,455.4910465538652,616.2800031607569,1018.7077289039122,564.8615308110702,411.7282597428306,582.817182209625,657.6818344137828,38.329626852131014,976.5764275798549,972.0136618032918,875.4949319004974,267.0529169083393,219.65066100131241,650.2371608937508,833.5208846818429,675.5538819271748,509.9802839581415,192.2967781542352,637.9064960997144,259.905293380692,267.7412658357363,13.129543256194324,499.0510978637142,151.73681109880806,524.0074137460472,911.5409731671898,947.5687241761716,327.82967650849935,17.3195631554986,915.3404642942114,958.087790392653,896.4385912122377,300.83834817504953,706.4127310335006,412.23512568839317,1010.5053600293534,202.73101340739026,210.09566195079105,78.5536678470263,459.21232821675824,48.63439807570262,248.24469676059425,375.6716446954283,516.974398122801,122.20101559916236,769.5080566058143,925.3883382300821,439.9683314739824,365.59036028810965,946.6671404867981,251.96559814576472,905.5885674072217,250.22260061473025,332.59961508122444,375.4965679192792,56.783898883962365,441.2282197570046,42.090897951552506,933.6793395772878,16.147779255588148,910.2612151865583,756.9126012479418,64.6300651320986,127.74879576306887,101.32556460416106,592.0603104331705,665.6369914671689,574.9090078843942,559.6155292476951,16.587308219081137,778.979239413099,426.86385090343515,963.1046000818955,259.0280891022736,913.1145149498577,487.946030961832,110.85483570893018,392.9562027741937,112.27364169685063,913.9846866008537,475.22797075283233,779.8014161419923,651.1513547940164,44.87898721780027,753.440408248879,227.9400068379631,941.4750767421359,928.4456645298395,936.7390972490003,58.664496310928826,90.22577410490362,177.42717955971239,393.6779192911365,431.81226734821166,796.7898128125823,73.46260878146006,118.9371170584277,472.82289819643586,586.4875212209394,731.7037006665172,363.7285107867946,406.49876625315767,317.84507571337554,133.08343378045424,469.3048446026784,661.470101899274,138.96926873137625,543.3609597104803,659.071395714918,911.7653957574181,426.2424215174434,110.25753196871108,655.890396195949,272.1453035779641,33.37068564147182,845.7672588572874,151.67360984896322,670.9172344506709,220.92621519697298,30.74406820456818,138.63488616772258,80.63003189167,356.49128825021717,771.4689690397207,98.12310189939762,859.3107740116218,279.2604674265667,409.9811955696583,587.553785416279,160.24783244217804,127.80959349744728,812.9745324004847,689.8727263246135,372.07025553393464,652.7669009851113,22.127073043710766,68.94811138542786,568.6018040184367,407.9019117261158,21.501240144451685,992.2243793045667,781.2524050894758,896.2778472103744,11.921914452546389,172.68835930983437,326.4398373358308,536.9662827682517,199.6981900904068,638.1734146656011,500.80245751632276,895.5936064668864,719.8233714843343,15.756772753509495,405.6863223434948,955.1820628643202,360.0200628853388,667.5796232425575,412.72070354293896,350.201389231695,712.2177124991014,60.85984403291411,612.1416259763656,823.9709962360466,270.18289687370395,92.03274058508589,152.61151062086276,509.75557896125474,1002.5158801501398,622.9344018002699,678.8186875520361,651.6728291455834,459.4527402432685,26.818449036887728,94.27853287518565,293.93382740271807,78.43718020158565,67.607312104823,831.6692810181797,789.7448132140468,147.6040445717539,483.53433306341776,1016.359086748698,66.07690429534921,998.2202667056966,969.1608057452833,510.1515887934845,740.2544709578508,706.1406283696848,642.5564517732992,271.8443850629635,851.9963821654115,217.80787342776114,22.856693901001677,382.00116155309547,908.439403582618,531.1316778354686,305.37092586246786,917.055796383991,44.960120427646075,923.3247757349106,764.8936397035745,125.17196624777978,475.81055233980896,541.4369901553737,881.3767648607071,372.4409951081468,329.6399834338797,274.83208430240006,939.8329099158134,200.8585015658822,819.4496657045057,54.89646948966174,282.9222793861861,385.44088941962104,850.6710483278321,584.9982873951335,225.92886877293768,184.0949904358489,28.57965444760623,437.4791598689268,843.1842966787813,134.61598220377266,495.30015806249435,420.88572074481374,364.6666322986679,840.9343406766983,406.024679601883,293.28076955074107,481.58546948204264,695.257099874868,1019.434435999068,76.38668647735813,179.3969556933779,283.62296998471334,315.4476687239943,251.12647919286871,879.4935067855528,702.0237228742152,793.5410515373987,838.5502318864732,781.7226669047287,1011.0691633099996,476.65038526458056,33.29885624606925,492.20049387610686,522.9850409165605,327.34752768253134,215.34195361222214,71.55489389695117,1000.9695599588584,744.3416210544113,391.8809037716709,17.418754651490076,306.5601874552558,350.19607413018923,601.2739965866183,391.6640724097258,59.86810120938753,211.14502444802633,869.6283815981997,807.4833319178953,487.54389095974784,1017.2891567625425,117.58837966009287,569.8374598206585,600.8920187246496,977.4673087858275,982.4335106137405,698.7323215882856,576.3922297914586,18.05911503071536,889.365436882748,374.91068452110926,579.5986722388045,678.7625868080362,614.7675989811835,451.8610714935802,1021.9798983224931,189.91234466294725,552.152364699597,211.19222592358187,132.12961884535594,519.4270830014401,169.46500905519463,352.6977621914409,476.293399083209,27.234346425858803,454.732869910359,277.695703399659,127.01410046520414,157.596109612693,456.68551697735063,211.86758024698304,377.5331307133606,912.7882970118386,742.3410375721934,663.7304348924234,1018.2708508329149,688.2779887771898,794.3709260694714,886.9682805144216,169.34008003527038,357.5724252447418,509.8613360775166,646.110543893529,814.3506715691638,903.4664995027852,595.9463642349351,253.7537498639938,92.08835170360089,843.5954421509465,51.77208124690799,546.8436257136785,64.51537812776394,812.8664428976844,414.08819583012985,279.5269602219156,1020.096274750635,536.5554691719609,586.405473430668,287.69374070242316,760.1336226232124,913.4746804711713,721.36390980435,457.3173198702351,121.61300308188709,556.8412117471935,487.2301040704547,232.0501970824373,221.6469671659853,810.0922482031684,733.2313468085703,82.11630326050943,246.19329730191816,475.93158011799187,8.869883390546079,126.1957647215819,486.5503928435578,108.44815016934183,336.5003364419392,794.567793696246,217.0777711449051,192.81237331845807,316.971824649985,724.9266858884132,705.7571164876111,246.0076442213376,720.3241924722366,66.46309077978378,909.9898889889682,62.07177159771322,833.2476517927781,504.76749979569604,550.7057123183614,147.29498036560244,933.0865593571175,148.72997846057342,49.50076431072512,168.01343336528862,38.13500459630097,707.0482449354625,559.6012122057839,945.3963788764958,27.96119326770429,368.55684329473286,291.0456697683044,106.66137273482843,868.1901209370486,644.3348594942529,430.7153525945246,234.97391681612805,712.6574936392767,438.72223675077134,143.25298595196762,731.1267547649738,110.66002465103577,922.3177671427295,296.2269084944952,708.2778115155376,511.95931283712014,37.172045548385995,543.4516146877336,666.366600124777,988.0064939626674,694.5005479558005,35.052762843361506,380.99507899119965,582.2479950367907,539.1244569609012,606.9135944244692,65.9086770075445,905.1327170859129,280.6210509536892,383.2113678636837,5.364882689487558,750.1548547918939,284.01098494712517,689.7188331171621,498.2550690357292,975.448075809381,540.944722512996,486.17227436960513,186.71715615642074,127.96945098879178,730.0292467104509,827.2392661145511,427.83613115328046,939.5093293000641,416.41702141385883,733.2917631284025,1002.5841531014443,175.16249992894961,349.2189671923361,706.3922047475736,863.8402390442693,710.1932571717324,445.94574590277773,428.982377091442,991.0757756800338,865.9448999456052,223.01624522950613,570.4324874985303,734.6061086579274,849.0222220461937,989.2336901825773,535.875270579743,852.2770649240213,145.23799024170114,683.7773533623592,330.6792511152189,271.1651962481652,399.80429445549396,893.6666112034302,758.7206859998555,26.69427302748022,579.6265236658083,756.353450508199,182.2422678115655,1019.7110103122778,290.10286237287596,809.2291955315378,511.5777025027122,797.6512550208606,675.0870052128256,189.68811045686914,434.8506688618046,841.4313047533583,936.4853039620617,861.9971116498452,436.5887080530348,28.07204212044087,806.672972197339,608.2313683648629,787.1339714136838,98.77551679138969,17.391360251482524,254.0918875941611,971.6111701897321,303.6705036011565,520.3159721592178,692.1307890810787,379.9847122713875,469.4040999012908,897.5153707672072,630.0052008954605,396.0424564355368,66.89658492893977,185.28484123253327,430.5668567412765,301.94086758215246,297.45637080261724,311.49249981877165,436.3083626996563,506.6957923361134,160.8576939525907,922.345701029566,601.0220642404064,288.7594849453686,288.68493271468503,46.76416870197511,44.15207234091781,220.30580575041938,220.55103914493418,492.7991932707979,578.7227475968853,125.07668747075707,932.7795516083345,578.2484284223467,939.2005134788271,592.1269342169726,291.2095105997473,477.60018386435104,452.4040906394183,586.1068359024763,952.5368164487696,1012.6007317828331,558.0350921005655,777.4937687245475,622.3688679320309,83.23239642172746,499.6265235015027,182.25987861285273,265.53912509364784,717.9082182940731,833.0340175777283,429.03833637095306,323.684083906246,116.69938608703592,153.96297651126713,440.61680507280164,1009.6083682914991,544.9203284401253,672.4626505744558,538.3945120607287,670.9672910643197,687.0748097196023,926.1615506405076,686.0343677903635,25.190790576599397,512.0018545810578,502.5040342823679,774.2300955972177,901.8930709788823,627.5161748712073,602.9565166151162,389.42945411490075,608.952483079479,938.3121559190025,247.92955799461583,702.7618233999282,486.74937540906706,970.8368762723394,526.1387607462624,473.21565023923347,510.6748124296997,610.2360988546432,660.9721409595755,626.8762985977487,875.0279337482712,163.48383113860336,786.2554115939198,797.6764671451513,302.6082883173475,232.16581607775538,749.9278976052066,413.040231945447,47.540007441514035,870.587115714648,485.7327713139449,949.6329097313492,926.5546570441032,1014.3893065627817,551.1990251717899,966.5013032817424,569.5457856651497,765.7428842997745,490.81831057672605,700.680894510506,492.5548506811991,943.6245992433059,912.5465257086847,455.9452984032531,918.2719769964555,683.53846414331,769.7170500729475,363.2589381666943,461.74328918662627,823.3679247769779,521.6973421792376,698.3448971231322,54.78891619077365,190.71520054663927,499.2302275329911,1010.9171433602139,727.0326282894268,225.15895142719955,386.9837527467223,314.95639501835456,276.3569207140498,108.76186375405814,185.546187932056,59.99482730632246,459.3905909570052,965.3639660691816,232.27794143559913,862.1441271981996,512.205245679696,900.1995484685677,942.0702170618846,464.64641637801697,443.58875843352723,736.0299472737033,659.0272167580843,73.52401592228625,156.55285719911058,15.041576392613365,1017.7508333736732,389.00865914629867,726.8135784436829,691.9016532936181,198.02026065949235,106.38110831319113,887.4753232372688,160.6898215920038,508.1020775647718,198.7132157219619,848.6016033440329,928.824480263952,765.0468197675233,874.7128410572952,453.0115184254838,979.179619368099,13.370955608585405,810.9411365373599,173.9966199620626,47.901043853705005,162.73490054661647,323.12599530993464,437.79726065564535,336.68048630799285,234.75225294358768,223.7378717398908,19.514841182697523,40.71934879519836,997.3514819303156,42.72433982090445,522.8774342681679,703.1252551220249,535.1262562640273,939.2671339060478,418.8154900213259,311.8161743953457,76.40388241921573,58.371421091768866,864.1370310678179,888.8552405641275,472.8437001835175,680.9219307709292,373.7633985082772,952.256780165944,230.0903491639674,927.4092911108844,957.0053235602213,831.7264221487799,802.0452882847404,982.0424725188611,353.67282186655757,930.4118508807799,443.4236671330543,132.1588118982753,384.9155339640332,102.97238010783667,487.44338293089834,84.32945479312536,36.74881932653784,608.9164156714572,854.3364412047941,771.4445932372673,594.5092408752896,492.1006505822694,442.1566340131873,203.59841703235736,919.5985955301466,416.8431692423753,941.3704045576264,553.1338028702094,651.1647164389832,537.1842117678118,395.9089395700504,107.65215967441998,890.71940486826,13.251741559031302,110.99767495248523,516.8872998338726,631.7495820877365,561.6634922569751,371.6147001851326,974.3643348025716,360.12921966594797,847.9917437418176,143.19463209363857,50.26017607230767,895.5908343482009,1010.5668696904921,864.316674598753,785.3283063796547,163.1657826240962,678.6057478737459,367.7787317887653,622.644274087037,690.430929594739,74.05311876172436,479.8052179095521,121.37905945829016,466.1754410155911,218.01015127934852,585.5189583797292,805.3359388888798,20.406515154137537,666.9624075590325,752.6638262738629,103.69987977695621,514.3867502278267,668.8048499392812,757.2672470487162,224.85249938352,642.9911463601342,15.777858249114729,444.62099193728045,235.01304582185003,611.7757637090215,151.40617240588904,829.611966521201,350.45703530585513,806.1629603869612,448.18326475191543,731.2232658176334,617.1435015336145,634.8640014520834,987.5542717921504,803.3855458465632,15.887277643904781,875.4631980483463,591.4916505991264,724.4325360694965,958.9554704500098,930.1342573217612,788.8717704563468,513.9656050366372,856.7255092643811,93.23103711897159,32.965242270346494,743.3287380207216,157.67290116790832,645.569069115989,943.8687289799351,447.0422122381501,121.82724577606211,252.66952616520337,500.7516648539147,465.3100211987128,218.28561354137446,305.80483277654207,234.43579320751417,636.8737737972464,270.6032181242982,698.6494498010787,237.22742228453035,116.17644703608846,857.5877454382851,595.9445287194247,449.4951122757667,982.0018978386113,8.376054468565371,991.1618420311678,57.498850499246714,577.4805865072976,651.3861677540152,263.38156506253324,240.4261524836968,835.1985373999423,576.8457636615943,1023.7017558676765,24.16160529386741,334.76740756843776,288.42763970940837,847.9180271197017,903.8738182491809,99.48039583553691,755.4311844675159,792.4473443215926,767.7406590128758,593.1790350988394,647.0469878996066,164.75191319810415,846.2228826070191,123.58814889448252,72.45098914124162,872.3222169037824,99.85473713309125,422.4457237988156,828.3796752555348,252.56230701632103,992.2646570990978,68.75658551891672,975.6527488189515,429.4025291928667,41.13026149551047,627.889259428029,243.35546520994853,723.298797833286,211.12399887668562,258.64843743666756,426.08065891877936,508.95446285650496,346.4270142924877,725.6863522133659,491.08657732565587,963.5250109389242,289.0970302223908,23.31051156101944,148.94257833276686,223.08074868962763,501.67832155325084,561.9637547833732,564.3568903215245,588.3641247510993,564.4615862840869,247.64304183827846,774.2302610040241,91.943247250034,876.0270400969767,174.08510239863722,197.07007615024736,939.0826832634746,13.64376096439662,431.3447042335164,1010.6063874317572,307.51985574970615,482.418285211152,665.1296657155159,756.557421431821,559.0208411826171,647.9826332285321,897.503471905195,826.5099570985508,141.44556066312657,810.3354976764115,682.6624692927584,917.7903947198517,327.73177397506197,956.078590207551,497.6737640167694,802.5913848160832,651.1419103489652,724.0562212948187,785.3721480634161,262.6669412117866,673.9314164332075,129.65106739842463,345.27274388352794,155.92821977194683,399.62940531473396,531.0165405203676,770.2647069596387,104.87014008170456,255.69036200052562,785.3093273212481,738.2652562443011,599.861537110432,653.4013863011972,524.2653519649863,198.35178051616617,510.5631567026984,842.5677480090961,964.4293158267067,687.1195037432155,318.31342656250945,876.4841205325818,911.3175429893472,292.9629889761608,163.30153206043724,891.209866758745,607.9385049936303,924.6570950788964,4.317732865840412,306.4092236194299,824.1270175555993,253.80475293006873,227.99038187304427,445.26871803218364,892.4092732870168,671.2202234080039,1020.2906507561428,644.5206699550074,707.68066066392,252.1467797444402,520.6146697511183,15.171188925716933,907.8089885774634,903.0467389586153,979.3387870965993,607.6810068231674,253.0540579801542,895.8505355556032,345.1933550489342,991.1861956906679,90.51480765828853,358.3121380303178,20.516704660349205,400.29025443792807,571.8387755252464,342.9081949563489,10.385960632098431,232.11268937155967,69.38162428033218,656.4245817958474,997.6502492105705,13.85803480498953,864.581679062202,598.182609059867,119.99479358544932,863.0893732971887,393.8191914498068,1009.0219456686747,379.3845763416816,891.4029605187798,161.71414685808406,992.8391938030551,394.6982253267415,1008.7151086318252,105.41449605653179,975.4722399283955,360.9096093534266,940.0487119997957,612.0427304602783,683.4936702113696,1013.2790710901829,888.0833408961134,812.449502431186,741.537422482063,355.46834026810404,273.40799132235077,462.1616842098887,264.27524780478143,774.418028558251,467.431897073807,956.6876751854105,945.2434987330798,30.551444246237565,428.29098346511876,512.4570409249951,440.43525405109574,65.65214404481594,823.3156825234598,998.9777535020962,146.7859736317754,25.580878760612222,349.730726837396,717.8836776522002,732.6137542593492,52.03541585483492,78.40132869522665,208.9246081594307,140.50455246463298,309.8751843915926,155.31497240095734,976.2944335487647,971.530027655252,986.4269703164806,146.4702080528881,373.27966721134067,488.36441197812735,237.55813436805784,308.43727722750236,68.92711465090531,369.60257615261605,482.6518349632747,194.60444783102878,724.5870725927127,427.6274092553224,250.36069842866027,88.30304769194561,732.6392491754754,34.28357866292936,59.65119862332392,202.58090999194178,826.6136467243622,774.1803353060352,694.6294144689474,667.38478660514,259.05662580362457,107.5752685989554,837.6685058440833,535.9251057480924,961.6500579109991,518.0297902125251,956.421170903916,94.92024689376603,463.85719738445255,450.38544027821933,518.7623916796098,173.65358331350785,169.2364699323432,833.2252087082103,836.9090497305478,639.8875810195915,894.9062488249328,7.366346637537163,892.1681176059926,626.0022676416481,168.08452850190417,928.9729600368184,819.6497428791563,720.3361079526575,139.12872549975964,349.9049455670157,103.05704125274542,217.03705072541788,906.9056941814877,419.5836660643315,880.6169171510659,420.3160881669203,421.62918272321167,586.0434693364315,1.24091513239307,774.024233380428,927.4321830282876,514.290756878953,618.9778527357267,757.0665730024618,855.9335386471403,719.5828123922302,463.8525926966938,934.7280579967459,746.4694137250764,154.99927854592795,157.1877373027529,780.6837249150615,622.0072563651086,985.9855871290299,991.3810691765711,888.9081108119109,177.5711139093096,229.73953975104314,107.89346587060777,675.6064192990463,117.39267635064562,104.90559471561937,807.9399762919265,269.5133144576738,11.402346942094141,15.169737209732034,247.22235728944236,330.74126164113,741.3032738187597,854.0883912046422,552.4459053989897,582.3261110662577,946.2467010962768,622.2914750654076,484.0061208974397,652.5021257367708,143.32258491977404,925.6534652175178,513.342768890728,375.24255212962316,91.32050349825488,113.27598467201506,495.3872014307675,1017.6333244817996,210.58752083884667,377.3409176104901,144.25399003985422,880.6688482093003,365.629619459173,204.92686032327367,260.7709443493551,806.8117470412254,331.74290693077467,275.74380904107227,235.71047405967226,27.107824128128186,148.44655712813255,629.8308141667662,252.37538257319068,390.4419889729875,991.4620880154046,509.97265693431905,110.55046569103149,353.04798584340983,757.3159427329996,6.580446775253677,860.9138420997018,563.274523465342,915.4859719839842,791.5116070876735,89.60243618639265,542.8621801501117,282.6992281544167,694.2009215709652,746.2991595093667,29.680619041568093,355.69873008111597,227.02329591407192,641.3294538514333,745.1408783663591,528.3602170158194,678.7294074982449,1005.3505876274154,664.833921138076,69.77121542229645,215.55867315750515,78.98419593464394,531.1311002581837,335.04531095465495,724.9404556574599,440.3519198032254,564.813549299333,761.2502004028357,1003.813879732584,84.14810107531014,290.7303029924035,548.7414797954506,285.02692670218755,996.6310059368567,133.18263354516318,485.5275748795701,735.2476261054449,274.58607916086237,633.7009662728497,192.59609902554473,142.5347530784636,252.09080602072277,601.3246853906884,5.054108880944,916.1712896740703,776.4711860119152,408.3212231744949,430.55796416028625,753.6949260098595,571.9185651177818,597.9769345224041,479.65405251256675,400.74415590421495,393.26453358885476,361.40021057222407,849.3020508670043,848.896384441952,248.19318194911023,466.28306404156035,850.195946869225,529.1688772734768,173.21995388005553,513.3264719800229,790.3637017262467,178.7110785088272,248.7230253962474,807.4907656809625,704.3948257087317,982.9398644858046,425.9647210492682,571.950990168358,821.562882587952,9.868521201969315,974.3019824219383,820.1958165174265,22.548853546045393,467.12070778883447,263.50647400697255,752.371008720447,356.5282442179299,230.0448665028415,239.10319832833216,840.3161316864753,525.2057924709902,656.620923536705,385.79781048006316,794.481653562531,522.1083493438049,981.2757664401968,213.77650234899363,540.2445650224371,726.353227942141,273.7499800879608,306.12743498314967,47.23233802476784,760.4987151984287,757.2696600851345,859.5847129453712,385.4620514341839,699.4881489982288,234.62147353876765,250.95597273962005,389.13026644247054,918.6265721253814,586.819582433986,549.3490434136132,991.7544216963529,331.10563199405647,136.10506042753957,104.04061138491397,934.0419174439983,538.6940896813719,865.2496200052923,0.6921193204694873,860.5661634270409,667.3684039068806,382.14800762194466,815.5657708413995,923.5860386375132,816.0303552920674,407.95130532130554,282.18341459395697,1002.2793046895964,806.7832278249165,930.3213093250043,849.5570027231432,999.6863018428893,19.06758123601037,172.83641207854782,174.88210036589658,407.75783826229394,33.44160723480036,525.6393848255226,1014.5738307460326,518.2266782338239,203.51122022120364,602.8619929479572,75.15075526338205,711.2289613026263,924.7244823221741,698.993084326697,664.9982114352523,61.680332947062766,786.8748783978167,885.9010822079192,922.6632222247026,536.1615268556804,553.9944241829315,858.2762231724249,494.8524293462856,303.00605164801254,508.69234173353743,808.9825648850275,493.1395021816629,515.7217099390659,181.673448596929,432.43970002778553,357.9946867842158,307.78091648022075,576.083186973052,202.28849226285604,88.22087158927923,47.23580259661742,895.2522617805625,491.813925232066,466.4538174754945,365.0527537247558,267.9593457596832,922.9347254748478,761.1047712990035,743.3873046945594,658.4656749500318,374.61490718676896,694.3121554574934,793.627578009132,652.0678542766802,449.98612990117226,145.46273972398592,798.0311288851151,260.3689471228894,597.5146832173812,520.9075843258533,897.9189251377759,671.9593720796584,328.82774369764775,541.6997436967846,127.51469863096645,409.42166397043684,69.40859842954353,300.513848802644,265.5782294803107,343.6806677291373,314.0249765461024,692.5028068351321,977.7418693664719,980.4678600463251,202.9426422352343,203.3920118991532,917.5245512841499,963.5814725956224,450.61527613378223,964.6370708562407,54.7073555949072,555.5318414563443,672.850797152799,694.7654929355687,201.12277425496075,815.1418569711522,50.7443288105178,8.520298500648096,471.54099656821916,305.5441954352227,35.28555719047256,403.37940877059134,482.55871031360255,279.87527668022915,755.5755697205456,353.50896277499385,882.1199429939647,593.3087154971374,298.0020362688193,622.4577791749175,377.9112629331845,756.1573345593328,971.9635810063622,804.0872813646995,111.89887989495901,560.7850061456829,817.2223066490042,121.24121721474046,386.61862304123963,356.7236524963613,55.18281688127888,773.946765706414,168.51573511913148,496.95013714212575,988.639580643952,447.79889447979303,419.04607833283137,447.23553731229197,634.2295026073922,108.18425995068856,82.23920195372853,447.6554389635397,383.19673323127586,370.21619211731706,153.84530913684875,220.03500991844203,290.70058207094246,375.0812760957066,169.0306994102882,844.7715645390984,743.6061994665067,881.6259754630514,161.20052316109002,539.2344057725893,950.4506947190582,876.3729456847656,271.45422843722395,845.5897716122764,745.2574883999713,859.027783950132,647.6779037784007,145.88250573936773,1022.6745910050523,295.67421861097216,132.41192431955415,93.09126231774746,990.9789714907987,556.6215072375212,849.733019803187,490.41956348952885,933.7295044183618,181.9142941471158,404.12968685099656,284.42293602722464,189.67142342088107,553.0720280925203,168.15723142167406,571.3324829999431,921.6525360318245,657.4609257097734,672.1024067037904,246.40717871117693,443.9861506766068,839.3598257184572,910.1664728329116,563.7390743766058,610.5091589560744,228.10641187744045,660.3585322891456,653.1224766303224,881.4608873986872,219.7921984962461,395.2199626616921,333.2212308483772,494.3519720089582,733.3919730570263,541.360518974804,608.6775996669442,1021.713042667018,492.5814724070823,159.67452743321235,123.7669241283919,473.39320341019766,655.579106111651,607.2384304181702,900.8631932871248,939.8656726073423,522.67931591616,465.6729520597959,1012.7427392437601,475.33577929410137,641.7765501865044,406.0352003693106,718.2455218207908,525.0081046950473,863.4958602850728,915.0744515253406,523.8977321178198,625.3649016710054,589.637826677014,652.9794859712771,254.8296249494657,303.00761121346943,454.897227192463,510.18601599236626,787.2792403848784,156.31775518868915,212.6958110356651,391.10959893522386,698.618761305051,756.5893336345836,74.06291392591118,255.90490584819224,964.2803256198013,802.6283156819674,442.29685238306695,301.8144882289141,90.56681169805427,18.706598418244653,866.0737441411719,766.4942087913926,883.6605417130121,300.38455447189097,506.22705759831285,417.9065653413684,588.0761493754168,91.32383763206485,165.30059290546706,994.0860012379497,940.1266136541151,78.2974399399194,764.6630175469234,930.3897442238975,551.7487032159155,582.4070204062826,87.69156851204662,705.5883650120621,534.9286480241656,385.7757399387617,605.6732873048383,1010.1853648242319,388.40373640728114,790.0990223662017,948.1484320487028,260.99760001980985,440.579042620069,417.43168309667135,399.5881399116796,649.5909199331512,371.01794353246703,306.88171187585226,356.3110094009734,314.2743981428216,778.4660705693447,816.3557703203917,657.5248143321749,18.797979395876723,211.34593727280696,932.4077937903704,473.95779347418704,93.62789493031471,173.8225860387039,599.1401949755754,486.81864264233025,250.59696941313211,899.5230005773368,515.3345435323433,1007.7939345772187,432.83753837297843,988.6637345586947,554.9650026101956,593.1180283353408,241.17120152275152,657.0603968371308,188.35625498691672,88.61946831240232,625.4075535322919,449.8546390039701,584.1600984327798,250.12857342634686,988.0043762083146,650.0685564692407,431.1218550427217,346.2510134961176,899.4259967186227,226.26862094970875,665.8816009577595,899.5888202800835,942.4307376534686,699.289783397853,413.41883922224406,138.21100541585736,667.6480224749412,282.7506283762268,672.1819025078586,306.1605837973052,401.3074147711145,601.9809034882354,980.9705856018477,616.6310799280134,814.8454071349494,267.0058945588228,703.7689499177067,880.6392587842522,515.5646211693984,360.81401074292455,172.38623809862077,938.3057841387022,981.0550346443555,820.2126279698081,706.9071129480196,155.72730125784892,310.5937503461737,970.7359783928702,121.55795565877452,584.7392182728532,816.7468995163097,570.6611389582757,215.64236383955654,720.5310544903286,1.1202733078683877,232.55508594522473,0.19686210492670853,188.94445907816487,384.8354398804387,468.60053227471394,108.58752119341023,901.8258392031336,864.2208859226046,482.1397429734536,30.1162272513335,951.976496222181,36.32576652193234,712.2000149178147,139.48892257827515,313.9732053832537,735.3106236313672,326.2613249628953,322.19165081397216,93.44035765467959,649.2558452287939,666.7042646958198,348.3366770573416,523.3162431495444,381.54954190380977,715.3753136740727,380.90183692142205,309.79515712626414,832.2450004280533,130.5351682401623,528.0842209988132,490.9112500695154,718.3178577595801,53.921723796068136,668.2421287994722,6.832168214652825,920.9899624149396,869.6013781751349,919.3363987078461,671.0488343784001,3.2182963607629063,208.8166442524223,999.2473456939937,1022.2108622185344,510.1372144489376,449.1697764231201,107.46284351041072,917.6848390777299,464.68438965188807,796.1110372620752,748.9834133429152,651.4118609028552,781.7074595796223,887.888591963561,546.2433979716214,53.23944414058212,390.39894377099915,742.1370460412529,765.858037788843,492.95773262016576,10.973997136157095,481.39202798912504,479.703604281322,254.97605616735405,981.5947680024208,751.8171748894518,660.8297120863194,1003.3050914181213,28.918488688728416,45.946518585083595,178.37179932866377,655.6801401256033,75.04443228115599,892.1482479714078,451.84308814226506,732.1437808230352,1013.297874636877,674.7575752471588,293.2698537761346,176.3065606914887,701.3178967440695,99.53070434287827,171.1758585207076,609.4353209913777,183.6522024514062,937.4265924576116,706.3477598720646,652.063464743887,602.3580343115777,364.0888321271325,119.53677226072546,525.9104842460385,618.3747816455874,321.4305062477533,226.88259107291765,8.747545901615126,546.2549233198321,206.3645765055236,249.552831594611,753.4121959679145,486.60602371909215,911.8179420958706,38.46283199522736,561.2394025880709,84.49176689071771,324.4714192433032,1015.6775102031236,465.86468498435215,18.21425262678224,892.1193937659356,861.5026931508497,55.70553288310589,489.84755860386394,245.34393941529186,673.2428248722798,428.9097353211931,31.853252349657396,780.0634381504688,692.6230647498284,557.0583339597252,296.38789278942625,41.83531181104195,962.6839429586649,234.75721032351737,494.91546265797297,895.6376735743161,346.77543753503164,662.531153176858,537.0480307419524,863.531343006079,218.36376310501043,898.7877588520187,496.0557458532584,286.0479683508797,190.29361557104028,893.7266615747924,582.3589975057852,89.86120202463576,521.162794591109,716.9540237678849,215.94420845702507,649.8276121340294,831.114803347289,766.2042100793572,454.71998900690005,261.41843611183526,617.2489544390891,978.2907456795401,751.5842646517735,423.34460197652504,832.166920147082,409.4188299382092,488.2113003860095,455.434000555357,984.2453895503172,785.3772220432861,1002.6982014847009,574.9646516965786,592.4130384770908,84.3749214579077,188.29646556113323,236.3078740766082,888.4097354048114,263.4412699985688,845.6924981042854,975.150621432494,446.4196751767631,641.8459033048649,790.1999772330689,776.1499857434821,790.4683393785892,731.093356245209,584.8927162094558,839.7847962989918,254.03267335627288,50.53129340088674,960.7930676202036,217.9585732107089,252.55615088079753,504.98321937821254,684.6806908045863,364.1212162824263,208.38699018874524,971.5881788449921,97.7677905026809,229.10849505228134,868.2401764923429,650.1271334178505,367.54810089264254,678.3394663441,320.9996922641294,122.4185004689457,546.7553726251439,1008.1165877094764,399.14715450060953,483.42803321674296,787.4054417680421,41.41303770198738,597.5187507834348,339.4010214232262,783.8500178068118,732.8567820940651,146.46084397696768,404.4124069311828,33.00419954405197,335.3230687623412,651.9832566664576,225.63644299646523,642.0234052859055,38.91953590112382,466.58180875238406,550.0035675468658,86.31047469787404,548.0338958940958,857.2348877335402,228.50408665388977,387.27313829263244,52.18042990582387,586.4154562319732,906.1852532877325,82.41014076307545,21.957577444020217,825.6505001857696,678.779153457278,845.4165967981265,151.51157945242971,22.117300564860216,504.59019866508663,843.3748655211385,377.08747278040687,80.03169558848401,843.7732791449536,809.1690094884926,244.70436183932702,892.9013787259238,453.3581931819407,396.68078776195375,995.8151092823846,849.0882495738259,651.879115861395,786.1319747159008,665.0870737654444,636.5142405374538,235.72959022579846,605.0387060550423,519.3128532673793,368.7756628530676,119.99368851590305,743.8547355844348,994.5798356971193,644.0794127120007,576.4578723167903,368.67573939354907,155.4696150865842,685.4970321016802,178.66020234937912,510.1731242525725,690.8107439839717,155.5984832272403,383.94364356684866,645.0243056368175,485.1156082307698,706.9794534329235,516.602016690734,573.2274544457872,1017.656531720429,644.6465548786352,321.0702388486702,14.198002722059982,583.0204923654538,241.99303552026754,151.76591770799894,523.0640775952745,993.3856663594563,72.35361757609769,578.8076586560464,989.9211528077761,453.48249969265066,441.4805094829885,794.153536720407,127.08883620754307,618.7062062936085,283.5573832374573,727.6981194001356,76.41067483199038,826.8151772445744,692.339817165037,981.1301967471633,138.63365723484037,95.49473882287793,863.6431584964412,682.5925315941926,254.60085707442806,211.11219230974825,352.6535719296364,173.11684892798814,799.2385055102781,374.76151705776044,865.096008080919,425.120298993107,986.4540040877864,563.1703550042022,84.57987806645383,218.51590095776282,776.1293142207488,328.5804407929551,406.2797552544,511.28833000223426,813.379502634836,337.09737955582364,259.6723644673725,252.66561298681825,336.1147425014651,723.5875563105865,235.05545146852523,1008.4791662263706,265.75934332381723,937.2669238675364,229.62446444566024,580.2398935953565,745.3572214482978,738.893671051193,686.7101236730921,458.0605032119148,15.372968769085787,836.7314217492673,374.88715845947206,31.453555492121836,1006.1420096665215,441.7314923717321,774.8581445665008,446.118533647651,272.4466557707765,680.2041065877343,734.5315585621614,933.9375587262131,319.86821485000905,650.1677557335457,497.40927165394226,129.01748749834417,427.9715578316079,397.55912162754373,493.1400507578394,470.50492928242886,807.4385892575998,959.502928714006,214.33896817293873,648.8872176578913,361.7818547682185,941.6647542482004,284.39206835952984,720.5373211962867,212.32511913289795,288.25336279206863,407.6580594671084,419.54781756495447,782.4475549510391,64.79963391655315,69.50365482881205,550.0136335128067,12.756169676539116,307.7517859395425,573.743961607719,282.88257699019687,790.2866985492119,510.59732654776053,952.1404599896923,3.6267939346391813,212.8032350581302,108.89079126352783,464.3972002208732,461.97108439173087,372.7458042053555,68.8683886773872,893.1242478574097,630.5941773486227,822.3213317319072,795.8089532966677,185.83892462936228,166.96632307281027,845.5754364534952,6.503321291452949,267.9101953505044,181.28362592882718,997.2789229920046,371.6071925689772,774.7632014856022,189.69758690581727,302.7700314538607,532.9472580809428,89.00406040080884,37.8810273780515,43.91167906593091,827.5264677410389,216.25299241059906,691.7538994542099,1.1962112123364932,728.4727899213373,657.8335737571906,504.2068016617203,714.352046986304,1009.6014667880145,9.225940957350645,865.8771305828711,37.073760673295396,739.8766054758753,172.2671247256377,332.5917281794601,555.7063549800035,778.9785363151883,704.1894929770978,67.6776766142043,910.075376484668,611.5079472024854,766.0230363369095,746.8312877271081,958.1223557907127,997.4704917604424,259.15202324879965,79.6696699054138,368.57295996608,633.8076371020186,902.0140735737514,739.0313087218088,601.6111053880862,525.3427038087654,549.9596298115761,114.04070959604417,647.978583918181,673.4249169005898,251.1052213841549,890.0941947866618,754.6965845261469,363.38267271093605,75.39336773255536,942.6356939038986,987.6076745821981,999.0019435055427,83.57498689988256,96.74197944521711,22.824166524785255,691.75061431281,317.70641802212276,603.3156673519597,969.0127617848899,302.0892124357231,266.67803337606017,772.7716987426123,759.3406741597789,465.28789233750206,767.3148144719985,537.9291189029015,314.84617027244144,87.42621032942236,673.7538947314222,344.20220421120916,510.4283115391223,955.0506254574417,841.407784198246,75.83024739524558,375.20401167925513,84.06713470763566,117.43167760552592,105.94963316281951,955.1751346878151,124.40727336589111,947.83336036348,891.2081186022695,737.5624481572175,99.05672583555929,676.0500727982029,865.3723539290709,869.2658286566493,138.56036171809205,869.8480848731283,756.0468084685601,252.77395999472367,594.0779487835462,493.66360750175477,209.35271452738368,78.48606521201202,2.135996194722111,685.6254332440425,616.1616499342946,420.9774550981364,61.357196602115664,640.413682679086,312.7448908173387,754.7835673494538,608.4453069667959,49.92216149290118,318.783975356244,648.5584674753162,109.90889342195851,951.5440732135129,499.78086018692875,681.0410029394692,212.07129759112001,567.9101222746089,689.3067855334953,493.6754939098107,107.85002692276919,273.0975165645119,338.218726392206,69.9793558929698,189.55507516531338,652.7627310946875,860.2520672447057,652.6849192949167,202.10950738152076,504.45553571374944,979.2980910490862,692.3162159258925,1013.9293045080973,618.5880134589922,767.7387070821766,475.04485205339324,978.5921352520228,419.491907167297,319.0810671992457,896.1561170090976,996.340430103099,324.8169438980243,210.54436860905219,599.5545900825468,348.62580352077225,505.4157052607711,400.50716084392025,809.872070156669,78.49899002526058,650.9937778557801,317.90153449711124,904.0519375237134,989.5465992732987,248.671885036944,824.9794543539022,498.7480030642557,179.19504400343465,57.94959119250052,105.91941136825756,868.887251223123,568.0598539532642,689.374258360206,599.5540023885779,130.4603420174476,498.71923344846584,56.97005298585918,681.0315725014219,1001.9289665008449,636.3504186256143,770.2300214020738,104.29148210515382,438.5009331935996,562.9617138098216,1007.6257940500788,29.256019163255587,801.4305850676978,721.9756521345543,936.0547539734206,745.7895171567044,667.6865762285407,260.39067952967264,504.4750886364063,706.1514842109426,226.231199237542,602.2457711560194,490.78961124002535,625.7481399945866,675.6523410474368,995.8918446342301,825.5502574675478,441.2574446634418,594.4086367087493,761.4037662822366,1014.1454422475512,636.713494699975,685.3505817429316,403.43226765396093,700.0752649691481,330.9086440109319,866.0266819117459,335.6706163834066,124.30303906643815,512.034111367246,431.649417365706,796.0670353188018,725.6798683582613,635.4210525806403,292.7595534699291,994.7842390118112,862.366701307246,991.6512263778077,913.2943605076467,864.6543599129017,7.086169376243902,358.4158273743561,45.7505604398209,884.693624613782,668.6959163489031,909.0152437764531,215.07228729224687,433.07027473296296,477.55048178606944,650.9289801449243,746.5737590087953,874.5792321714276,341.56413680565277,261.11019999255086,539.0736833397381,905.1459507328833,553.5645261094347,630.7273388415737,730.7912668261026,701.9709378028324,712.1174052279154,53.758002270909515,174.60946509941687,406.72400880225473,783.2618933596395,33.00573278447985,33.939187882161605,621.1537050973973,684.1085489744252,444.89619823181977,49.9753156375283,956.8511024427613,20.65357501119763,752.8152283452988,159.2803560852892,539.7441219108331,832.455708334053,714.4217640636441,750.7643343749749,928.7175227067704,587.722968187522,500.4363659588332,86.7739990123697,717.0975588637373,208.27221703974487,700.4322801144097,138.21051788662703,374.7154829090633,313.6717589936527,827.8716372259918,468.06848575749893,917.2401392641215,240.47577090137327,394.2584462297689,625.8422962373398,731.4126163087352,973.2771442347253,155.96940356418588,841.5954021200413,652.1693614661997,270.5420913456318,259.54460259061136,113.82576624858712,430.0266882044282,804.0175577238748,138.18364879930937,812.1593089800824,698.1002375272062,286.54944858782414,120.52921474768186,543.6189143970126,328.2827182595629,459.9851870845357,99.21482559379285,500.64319701919294,695.4139606524461,704.1591138274551,604.8002117687498,683.0643850556942,293.5675889200769,893.7437429523457,358.56610414192687,851.7662584683142,402.52104888113786,113.13666222550705,261.29739615259916,25.739835088223003,909.8563420279173,69.88457296257434,785.1322601160094,708.3646541583169,445.126167391645,808.3561025541203,807.3911832759828,517.8729885153721,154.6377304547393,900.5173649944619,713.2199404936845,697.4119621755399,675.5879065681851,105.7043051021119,838.4302864055342,420.2519048556745,845.2426582292601,334.7702641198265,170.40990804959245,588.4998545924128,305.90129683759574,637.8804230548662,459.2125082943659,54.35841014199525,888.617500370202,634.9475279973449,822.5255863086522,829.1408350882599,758.5947114032779,346.21955499220996,785.0602820589173,79.97826870194046,932.7364395743756,454.36396355244585,506.56778535028275,670.4123274544913,881.1554590039403,304.5461268965464,632.8011255365827,596.1665491245768,343.0608607014566,777.9987843017686,952.3736948499193,719.9217749296322,32.59148919587483,484.20780897771715,423.3376804723043,550.9175924790395,428.17449057981935,73.72956866931042,649.0813520010862,226.47615844965674,963.1710823767007,518.6850429513988,195.54509776682505,601.2041675273439,505.1504006110989,313.57282798376946,358.3716540027393,320.52030858086005,20.11306715448586,15.470909198767231,776.2227034270359,8.349398138565675,741.8365257794131,333.6841850298774,697.5285560154986,378.52260081395445,674.1886303785517,315.9802897241832,247.1032780887317,565.382470143553,107.96962320760997,378.20521192986496,669.3367138169076,407.0263888346135,87.23059621826201,345.6621590207693,128.72068831230615,171.35927121270925,151.3736424889321,139.87256888273896,47.66134597548091,157.00590673482782,932.7326399886114,270.25588921083613,24.23390063319073,257.97708211522627,260.20178454591394,6.258193600795835,792.8273126702178,554.1517277823757,524.2489611011687,640.269008724262,412.3790432237578,268.04893842462445,535.0487352249502,331.62208216335205,616.5561826393779,218.7304822448616,702.252230567012,1012.1150866807002,681.7111915816199,137.23086140550697,920.0225691394317,986.4469518074877,373.1697200681016,804.8108111685,206.25267920613544,364.37692098902994,521.2883572072036,523.0031546475128,630.9094115890716,395.5734039700883,737.074213836494,664.6194930244623,195.3824299395767,378.44611380097444,244.3631391270893,839.1840395951042,668.5799391771191,277.646266983641,921.6268953405748,1010.3063032582666,875.082364703002,546.0261262947878,135.881607884579,232.97337613702882,133.16643771189536,378.28674243410273,192.55286240881708,518.2173229237039,417.44065522680023,605.004265133019,289.22248140586805,855.6503733737335,383.09397078505594,280.3051704947426,957.7901467683578,918.2291858502148,766.6241295841163,171.88695706001954,963.417172944762,201.33852262916957,771.3928594974918,796.9721312549659,784.2096471510222,540.1184065605778,435.64454878239076,761.4619662693137,378.78830802772904,134.73844733881424,861.2451193509554,129.92843087294943,64.00818811028262,972.7537914816595,965.2374097018511,832.5330908347973,345.3825994342586,657.3074794934563,531.1930229726229,269.3904956008772,415.7648741810484,318.1246389148804,879.6119679733,751.57175396969,20.894997123381017,865.6424667009169,269.05216479912735,308.4057007791981,112.74518559053661,949.3217825109888,363.5279308073941,473.1079925187322,932.1438438690005,337.7148396540001,580.8404432838887,21.99633532501639,274.233740903079,257.98268032232545,8.464920346794656,222.72061776151565,930.0926060704613,1020.0274923677947,895.57562939136,35.83996787700664,966.2466951550707,448.5650225484094,713.9764890921458,262.6179695555568,972.2919960105208,888.1865997051641,870.3664574730092,230.80111339473842,272.3432918277524,594.8319329919289,595.529024711724,271.8584472226149,297.98631825465645,953.2539198923885,235.56525618071612,476.097190905674,705.9960091086648,740.0800595887953,440.576480386257,221.28941849574483,240.7644567649303,506.4444800373626,997.8074041575114,987.5184216040545,410.2398241541563,547.1049439332475,221.48370273735566,794.4390246983147,400.6587019944518,824.390650215472,611.8943577540019,813.8907262605749,946.6471336118773,960.4387205948741,832.0637354789477,1020.821895099044,980.7654513014611,146.45471520045328,542.9651375754613,222.34230007400083,776.0215892565303,369.7039432578424,477.8910577968245,426.20158432970743,607.0940131964228,280.7727718254373,746.8090591784697,563.6541087620557,807.1438815596663,734.9601349740345,335.6509135663081,833.9674784026283,130.62725086819353,883.0883410320799,413.3318413676237,566.3665614212571,413.22651802100984,510.58779066097964,14.83289534296182,413.24082020351193,525.4517820694936,517.7956733760678,101.47225650101916,563.0943764062579,882.0892960957855,990.1333860118469,284.9733939751949,220.3409383383805,719.1780101291406,319.56394778077254,134.2470060698763,908.8569605853706,811.0622707810527,253.07238487122822,429.82154191556106,780.0859002057542,312.53063814702625,885.4888197142132,534.8145387681261,174.85037445640796,465.15118291126953,263.2015000363416,276.41079572193973,301.3046133323778,572.5566578918708,571.3195278096761,510.4193153580874,350.1261419777452,578.740298741429,202.66527702028145,323.5316694381612,584.8023007840968,310.0182940800536,459.46572472987,107.5805430063632,824.4095432900153,650.7517542687383,763.7192872026054,965.5759782101547,374.01198470258237,410.8955049504716,147.46092533104945,180.47211544568995,732.5138100878974,827.1492578529765,584.8660522675245,497.9515571276802,722.2443511236958,685.2431026329866,599.898301901193,627.9909898567071,215.16915154482012,533.3682468519112,531.4012529734919,270.30082394504666,263.3884622026683,958.2899419120333,420.50173031211193,504.7540920313062,501.52122949545253,1002.6499047018734,649.5566192084776,931.6325656658468,79.23056722484273,615.7147810262927,711.541383122204,642.1825362384144,485.98504879588734,460.1483823003233,849.9780965288121,589.3863716522063,862.235208332114,547.1115766668456,906.4276750118421,815.5589898116698,392.6675410365075,276.035123727831,771.4806399724215,316.63487235375385,59.677747145083345,594.735619735774,445.6960199681066,154.04575547065213,74.25920961470536,485.4866277062546,352.68202523671175,976.1961157093749,659.8882304701426,1004.321302717774,797.7515156804099,620.3416933419734,750.7009314642486,898.1539252753699,256.8420942791373,353.21301420812176,676.066044379714,77.91975087387277,929.1573798588049,563.4108945221423,172.0255337818321,392.65129446400647,36.51345154978685,881.4284317713688,755.0139141859783,681.9909318671565,794.8305317660396,985.9547769115695,636.0536420155953,543.2950809967541,403.83572366154044,265.44821240606643,857.9197809050437,232.8126254319278,937.5407207345484,999.0189797785829,97.18252454569028,769.0753302393375,347.5090585389463,836.2338324721661,378.3749106803177,774.7344901077786,690.5836113508816,22.226968256193572,691.8983983327466,44.50051640965967,61.68042854846442,421.2966822307334,953.1031916803903,202.28000318595753,836.259930915847,709.0747958265562,813.6304845990114,613.0001423571773,779.4871576200137,280.5757344686525,887.4062065092427,918.1032906431592,935.8913797239568,555.9270898858135,700.498373817643,330.9167988228596,64.56721247801693,299.64692961791536,741.112080789854,45.23984015053168,108.69902122128042,367.60440321119336,409.2181484532226,826.2792073990992,494.28539986205374,216.96941259007372,586.448577603776,429.09505025152714,630.2931896698866,677.2468835023759,59.929323290854995,125.09733217088785,297.20274047474345,660.5340173944559,336.56683408278514,283.92808849795153,763.3552726058487,948.1253304614024,420.4512897867613,360.9102370854391,149.01160362291432,803.9544456436406,6.481391637815705,5.952406560802956,779.6911862293364,576.6010348320062,221.28306760142823,396.51253421422166,957.6365518377635,808.7020000385653,729.4070799333978,265.03356966847593,949.1698018318856,1010.6519633705107,346.45636555754334,603.6417084649089,870.850707981169,164.74139773828756,388.4827979923896,760.5251476044456,232.61006512806512,280.3307094568505,550.3111998769621,566.9079724141428,453.5438791576572,175.74352883559288,785.4177401602818,12.714576942595045,247.67111484580607,654.4059695194713,527.1620851649263,555.5073847765121,614.953544848024,421.4641409957253,728.4383913812263,671.3419842432519,697.7568373076737,727.5553909196735,219.64947156826418,408.06669086950694,693.0661777901623,850.4134432301469,198.75863284286345,657.2188471814969,1002.075430021045,853.3146434470295,353.2996645648825,422.7655622522973,665.978563007862,580.997465328832,446.4512490125644,966.54605123827,511.4595059129124,576.4518672725573,941.6757766580475,688.3953073811414,668.2670401351087,380.6259254919346,622.6309752575454,408.55130556926565,723.1632346995369,77.533737580035,306.2797466182209,744.5155597275623,715.8939932981272,658.2331139527025,769.3098661198343,617.002013906488,871.8923981993574,23.352183534710775,90.27315694313597,289.18634237162314,549.3140431054761,102.41858512031285,498.0452944940588,699.4481553905193,392.8713630645058,567.9833631782706,661.4986629787527,564.2393612581461,477.3928179955234,750.3163532159039,970.6671642712611,670.7605017976103,870.6991698072896,374.4565398298828,972.6390301490591,23.516647338256803,197.65535417771218,388.3190613741639,730.557762016048,595.3696608331329,448.3823229535427,832.7484700560243,88.92827738190567,554.6405135400806,950.3328360917029,958.7671462177756,251.2002025002987,23.28293597837967,175.73334377150638,2.3286677518734678,75.92469683246725,648.4439418947126,769.8938736472344,965.8596108107621,615.5207930758851,188.7222696866936,78.80621404824262,34.28658980280807,694.4411066825407,544.3884322877547,611.9044612779048,701.2210633863352,122.25959419788228,468.8688492484075,913.9783772068326,981.7632063215702,967.5864911709583,433.4461273180003,238.41846426985558,352.7879692162127,834.7801115147774,916.3738235782482,608.538108846424,766.0202891652623,767.2710928695479,33.91113053870083,476.41888979236717,246.73194239785755,448.4699518917124,10.742926355324698,557.2334869379671,60.6927447556717,941.5640375451704,692.5531690625078,481.81753110701425,872.1198827231775,300.02184479382413,956.5646767915482,533.9064530020687,256.0136758205647,1008.4948429993553,645.6140027302449,677.91719753431,622.6037533372319,245.124416924485,113.93408996211622,541.4403515615732,520.7532810012451,1004.2174147661841,155.6030456977951,728.9439504578161,40.6565235111824,291.28623166231546,291.80185234182215,383.26502365391434,442.5139306360147,847.8524426958959,218.89848638611772,986.3260627703349,608.7845523093451,587.6555414910347,240.19442587293906,748.0719421554361,135.66427839924552,107.59791212420339,127.38360744372233,969.6963481658638,434.5320187695903,194.39579011067337,279.767543815046,249.30385959255614,920.2234619145019,996.8919559404135,534.4421532580886,143.77435970281329,467.05101535211134,999.6947731817111,877.6425729635451,600.3910486279352,537.3177374791801,759.8338134454372,183.36114671416794,457.3002272265637,14.484875924739981,208.94736435761456,726.3638071500457,560.48002789762,173.39187652955786,355.22560091183084,778.6639807706997,371.01951034818694,158.04276465768112,384.28134405784624,289.9961996562879,353.7474295533275,894.9430405715325,71.88801621859102,775.0837555915143,213.54366968240822,840.3102635408461,287.71955567509804,241.49323297160834,229.55826887652825,897.7864178350484,908.9078911685959,91.32409808929674,439.4691337606537,763.2354314603912,58.24904051692488,81.72421132485113,341.84939358250415,338.9905229638723,100.14754598512786,765.1176128946626,271.66141607139775,858.681959372127,1005.6953549097015,499.01874082647134,320.45113099874186,3.997545822881875,550.55433592711,687.1599213573359,10.966759920176855,860.0038555206855,197.0101688619452,212.63014139805557,532.9148412164508,125.02049074191882,368.8635235533403,552.6240758843761,456.14773976203253,646.0808485778952,263.3899619989488,406.25637920661893,1012.5539780199841,642.3432832623934,878.8647320429071,238.55729700965526,740.0157192290233,519.4048833412444,26.425064364835748,653.9133544939806,907.241950950295,114.82885198134602,465.03040522911135,533.6913576385725,490.86271162074115,448.70744756770455,330.42042962274104,174.81453813021335,377.0359309175652,956.4756672541527,316.7356978445557,30.585445899512933,568.5324412094562,403.6327649750946,330.08616302339146,912.9525822993688,120.91167143162386,572.3000835211868,1021.4628412679341,257.096717409638,592.9052013003284,762.7044689689604,586.47726106353,159.4525740977855,707.5434856356895,362.1680395677247,940.7294978073003,849.3022186741981,532.5774357864883,228.1747400178798,577.0475212461054,538.1612222804013,933.2667632747945,326.56675284630523,586.1641416362045,764.6378504138411,128.4473652107548,718.4519249657467,947.5840382901746,84.7511759512131,297.6936444233495,405.8743044074008,500.0332884221849,470.11756522414964,192.9333952772272,209.72973170679097,584.6994906749925,306.5989719545155,166.47300183375353,54.57924055069259,504.5580276717668,635.3088748548103,280.87561022991747,588.0122516283265,424.7470188428423,722.4575318176812,2.972127590135756,809.5026340454176,221.09326681678021,905.6627152563709,396.8500571961923,575.2864664928155,211.13762157573944,822.4172682664338,22.498671347043796,166.98688277780684,388.5141229505426,870.2805615356218,860.0460441139535,176.41651188265507,887.6232241182674,586.494566068217,205.3370786152384,1005.7150341959731,25.566501306474265,510.5156238367714,662.8944918923637,654.5070706779221,499.0579874226256,552.4510951793341,729.9709461750494,606.4307498165266,750.0834294785275,526.1855861731757,604.1021703790212,327.3973335700372,121.80952930038961,143.4591450399828,276.6144256507464,1001.0235134706946,676.5688532382713,641.4071393499669,864.0507454492777,375.4812710250493,24.54729929922223,675.7828772467834,260.6111469160934,402.56421783852124,788.6622590139393,82.76656821769473,778.3294742857046,18.12812701333769,993.832208623118,497.55899582580446,224.48104386831494,261.27274793426227,710.7293864211681,991.8540150142189,296.8497388477613,184.49657224745818,927.1238337495056,536.0768882388583,589.0898701037183,728.6319545929648,137.04193916564498,804.5228546043595,878.0173410050243,850.7274615044122,998.3663365831065,339.17034632910304,247.99461893811792,365.7037304319971,150.08974879166237,612.0617793865263,546.2971011105442,154.75153596064365,288.6138700283176,985.222082421472,524.3497167143962,708.471441835222,762.8333310736574,469.4425430789763,562.9425218681076,693.5621363565045,593.9100701622833,475.8584505554692,385.30238977616466,765.7676056035044,509.2050584147636,65.46345916077735,783.3772619695123,944.9877540315873,147.67760700026213,657.0387493310956,950.977037658161,538.2717010177229,746.4907833068834,642.7136506981718,398.1467756985305,858.2412959352943,296.9760548690874,935.2528060083537,13.85353970968822,354.2354269900062,210.84326227873532,217.45593982564583,933.8473984269955,654.9059430710164,131.95250202866737,32.907471543713086,109.02954334230469,147.14307185458858,404.9155106177135,256.8275676383056,302.54305237945823,493.8144318134125,385.5244329146474,133.22904188084578,6.226364951801202,974.9932205847357,538.1730735645194,206.1218624922367,550.2473042548767,49.41713968552506,915.3935955278868,958.8854612447243,156.87481624160478,235.27020893704753,691.5897393507216,147.0982943685833,386.1482979167105,95.28325871913478,836.909775101091,387.12064465854917,741.3303790979104,735.4043857820094,349.85290226058453,763.9817591015037,308.2368568825135,643.8146712077894,677.0860947983788,713.6495485518973,755.8291541712315,668.7929328750233,892.3825195690614,753.1107786113254,325.54510968764,727.8270709894671,197.3515383464404,910.729984689886,71.99889329597033,610.1090521259617,253.84999392629402,647.2296474373615,889.0813667946186,326.2919421207613,351.19055999057605,100.6312207315118,237.45897865352606,28.250422728190188,350.74278510018655,816.2120273218918,853.1832367799699,715.196391955674,872.5931421316444,413.69798750752864,356.3347385368229,777.4224381507281,532.0937737364736,134.82717890899949,72.66232175811137,569.3454028621923,150.56700875770957,22.055570107728954,265.4738659777121,337.17708239703916,886.7583109646004,266.0168455796006,120.54914080118635,491.40038029289656,148.0465370622412,860.223022529765,568.1912332697498,206.74110849170188,106.41445255892506,516.506630023279,399.17270309119056,816.8776869208742,935.7616376884177,139.70728469066512,825.132563192244,674.6213331388884,46.17594925624019,323.3751908190176,393.49999145644824,27.020824661580605,250.0753409028947,618.2977733152259,586.1146969953796,84.03794089991709,138.65653438870504,986.5469555042486,938.6855695384596,78.44049977717873,65.43264015588727,323.9523364695783,755.9997374953041,110.45521619258568,424.18208738863655,418.94346343965117,194.68852778591258,183.29828366269453,853.5052853723565,812.3038921388725,288.38941798407745,919.4105417299635,307.70661289112775,562.2866599129123,339.3672951341455,703.9601425690905,827.6755848593159,2.9371673250799404,520.4511769604026,707.6017552801312,740.2042887707997,762.5712246573139,373.3042372439834,275.79377927268445,403.8687128879884,560.9331443876608,327.0176621246733,467.88700855872946,993.483494561661,670.9556557639468,866.767757560658,642.5403187987039,891.3323100082914,512.1210007115048,444.56071657315897,247.56382329816904,236.18401797979993,254.658780120978,851.9898280142319,120.26713198828168,662.6313861413141,257.63719282850366,380.7444043400742,259.2943204957428,70.76268214991319,1016.5836011425823,917.8947931870828,947.8381663020824,869.2243823105844,984.4431280900292,543.4408937206701,143.4165385815785,376.08244097514853,514.7272659454457,286.13991038799884,17.883402554787494,978.1456811658583,152.25413514718707,313.6996081166974,1001.9503381729679,259.47534787641246,284.8629021475973,851.4357261393661,453.5077575057164,427.48150272427245,334.43329263553255,928.4229953468363,19.482178964333457,27.3414268632971,827.4085168806095,103.25240398102949,108.37752053873658,769.7213066251792,88.70792711766501,661.634100140909,537.3311878962301,118.1055947943313,115.03789531543532,224.0949264371601,95.9151943868145,879.2225933280234,517.608974656094,715.9068106581124,111.08385010634595,913.6689689061467,675.9600205632993,257.254353048134,910.2292250793445,816.7595518615498,549.7626800758754,315.41460214614256,947.8556357635615,220.24990448816789,674.1682223327126,108.34846231777078,356.5196616052307,276.1221188459658,215.51643885998112,824.48673758585,180.4798515180711,425.70782857032407,436.1326372674258,364.1077309094162,119.92470783921522,366.4507186473227,107.12564600398298,659.2342060899075,691.2214903506259,858.8842059922918,472.5361592976227,176.1804642209288,727.724839860513,743.1523234561661,708.3121913029878,209.997358884591,649.647779424983,166.6376479391605,434.920105427268,567.9024694453814,222.21429723357915,271.7122154780502,486.8219370409164,665.0367043318256,87.3489284426355,696.003129179269,489.6563063428291,576.262847164496,161.10244814872715,255.3739048398685,1007.4914236596651,549.4808418306279,734.4036640855933,211.18004058119868,877.3872530927974,167.59535584487492,730.5818236805356,646.7514924142849,497.3920624917672,897.9865027589696,934.7487452012236,904.3462345873149,394.5640653749771,74.71672105466507,7.954628785747559,241.55818389399144,413.9421611215836,1004.5312254401261,622.6243583601704,1006.4788983096832,336.2464230000518,55.998948776315956,478.76980297581633,809.3477526913417,751.8567161565633,973.108570914218,503.98075717988513,650.2508774871225,671.0011951896278,576.1103058152887,166.87654666762194,40.98250554381059,550.6690217518938,692.4372251622835,384.2274829453344,349.47859635817395,809.5587872087146,582.5812060346128,928.8275240091298,904.0318926222641,303.6187985252094,554.8069692845422,96.37124828393382,85.30640492465318,322.277656103196,778.3717543775996,383.9327080526733,114.99778838260875,146.11924651288507,802.7336401996666,884.944550578969,761.4643898236766,946.6506711623657,246.4761228076013,571.4161979536295,601.911140312731,233.33951817587013,624.3521116582976,821.4755202477165,20.688309181004115,1019.3364994421294,885.6826284382619,975.8308036942716,235.61021021026522,439.0127558996968,131.23207547414904,726.0890011355024,771.6483654270824,987.6973857615725,296.18568864851056,181.7486761701996,657.0649416909014,454.6687820692649,961.8250092861152,978.8296131704201,499.6459640400203,864.2570184794774,15.732278170288396,626.4203939986651,418.1119279818936,573.9344362912498,665.5910043859685,1023.4426478863495,110.69390250760819,430.95347046854124,426.46736116237673,917.9972535242977,602.7274758563858,572.2766449714891,901.9984867899555,63.33987828371744,256.86390223528167,527.6892301490645,915.6280847070437,532.1919973060697,140.7043019560757,72.12826360111671,677.2242470964505,93.56176413488276,195.2417683956893,700.8596591355432,113.14492066055845,681.426000862891,422.94858319650245,1020.3983940613398,394.7083234816423,431.754299464445,530.1161657083001,958.6969059662283,746.7131933732703,457.86272562572674,853.3935265044158,331.1359246460736,749.768340830856,356.50306093145673,164.23312703606348,445.4050881958781,543.3059311856464,884.0022303021818,793.905146686673,349.99164352707544,815.8218988204134,670.8492249603311,444.433331970587,134.70667552291525,964.7725140634917,583.6699478763496,951.1316388362634,190.78875120965438,756.5376812776954,287.91446486028724,106.42354045533034,395.70312351981465,334.5868426066912,307.47379904660465,395.9541004204856,227.25958592475672,863.1562979091265,244.18587678184247,604.5687142538494,460.1754224824939,199.7156024570819,188.33933977876382,194.50513479454332,794.3119024320284,860.7753740573186,1011.633569515414,386.6514811668237,341.3729744358185,118.99452324495041,339.3639029614417,72.13944952525321,982.9199900851097,81.902274168281,960.8817183629428,715.2646319539836,840.4635209540587,114.75181759299369,257.53262148184035,373.78563994963804,158.35374701574005,762.8595946893788,344.6113192419158,679.9577669957927,915.8131893659212,1017.4141740751754,951.9418146787965,577.2746202315533,192.09347534495862,237.33731914871373,987.6834596625615,937.6215376442009,220.7267000766601,695.669282147271,410.1666074565052,235.6485522783887,310.68661262933256,726.563858576205,72.32246856228062,153.77847672660357,46.62927404795096,54.350158033399,870.8216100047387,499.3251698644958,725.3771477183102,8.218161763826402,471.78361112649543,160.14766639505126,235.81086414172978,915.4556879055581,391.7132272496324,276.4221117616204,613.2937713942678,14.957659117887943,21.061648495761233,561.4806536885983,189.06880918583408,264.749325462328,157.86153569610985,712.7984250521754,553.9964855877731,318.26258518456416,722.613682149592,618.6933135072927,367.9083123305627,284.42093812291375,377.9099901281538,394.18603960879875,360.89173785418245,320.28286325189765,914.2676717004298,313.4760234155617,931.0597036829242,33.870432892535405,343.50732385931303,997.1479450603993,483.10002610685524,945.9836949407965,476.07033009695397,532.8293796047795,443.3358157490728,476.91559709252226,637.8403892051211,806.7670309070943,397.3194445739905,721.9770215161475,478.92847405018506,383.42037495451973,182.84597112718689,810.8463302167129,723.8628816590564]}

},{}],36:[function(require,module,exports){
module.exports={"expected":[10.539387969739336,8.08813040802606,34.168877475435785,34.240394441444,2.9187512107152322,5.183651879781958,3.378197507279719,7.7838620590926695,1.702619870703444,34.2097636459825,52.38950944833935,37.45215235829753,43.61778970965329,37.346489146093475,5.080908499465253,22.259962674612012,57.20953933625501,13.058252435787676,11.128217289210554,1.1499186829931256,19.91206553803041,12.033181579930574,82.27185140054111,4.050457046778462,0.19681219920798654,3.1632356947084475,35.48864194277246,10.847411739767908,43.26019360258788,0.4074760406390965,13.691161391037184,14.75637377599736,0.15070685503880688,10.522413587015748,9.141980555116831,4.921727874765169,0.30386513195280784,65.78907711175044,14.086058428912963,23.05387012920529,43.14814838365236,36.484207079390345,13.939027038215524,26.361890634123093,28.11788643483071,1.295610306707251,72.2320177311822,32.82892736504887,56.81179946289987,53.031816666887224,0.8605422392460178,60.03178089279629,34.586464950983455,18.661499908926785,12.831721746921577,53.67298858337642,8.07283066988601,19.218790829415234,5.082959246127338,1.319131902049742,21.02206395877689,86.71090560362302,0.5700342713079953,7.659614295608175,31.652829402825233,68.48591075428523,41.6666528977453,52.821294657972516,14.851086859928387,13.612664540043317,7.761333696546469,52.75776232542256,41.666560713517576,73.41509507290561,7.590906456029842,20.117239054820516,12.489387207770335,0.9621186969839273,3.4824589159531705,33.449105638633505,14.350776508286723,2.964273742620307,18.42154619605455,49.77926387969678,34.19910558905296,22.18834841480366,3.242961597153682,29.325927709424825,22.073891819276724,14.358092851620565,86.39172036435974,16.392586993297964,29.329188619281332,18.16652817187,22.413866294996268,13.150809892829187,4.704755095650029,3.844866301891625,1.3130188578466089,57.432381506574956,3.519685022867776,52.21383591707309,20.84327334440642,19.914161113676954,3.852662030950583,18.332549568535086,5.889596842255457,20.088619884404878,0.897218948123796,17.06160776122324,0.6002042518783721,19.624877419227804,4.533395336890223,28.104464314122815,6.811423643061875,7.676644998510625,25.22791621803352,22.03837941404192,10.400375830183627,72.1187309616754,83.95523913838755,8.096815558183756,14.431291226507803,6.771114182766391,28.954768972801958,25.41490487935323,17.353692494378237,43.31163242549761,4.988038008505759,19.79229774154672,2.1778026845078955,14.434095324899928,24.990958298076283,56.933745362654506,79.92986770174625,20.54118650410701,79.48735932984687,6.383861551423173,1.008687845931533,0.5385962244755458,4.263146270296453,8.31564151867773,70.74443592189124,25.653380472288845,5.870532802178319,12.179173652040753,1.492721051826173,99.5518812725886,6.949067630502967,6.6409554485213995,59.13674072397078,0.8511896882771208,6.496338054200356,25.41338615557477,74.8385170995573,14.802154905371001,12.772161170704521,10.36447682392839,62.576818523564214,30.569905740170288,21.891069832633427,11.204219375711233,13.129894304383257,4.596912344850246,17.889101607251035,47.84288303572078,58.09966327330923,15.15355685286955,1.828102210096695,12.211171224543023,23.214316333650544,7.005753349501774,15.257092967205502,40.5335073801666,59.10552920094582,31.311767940511345,0.8161351844547795,9.847543629734478,3.68353864917761,0.8797881286079283,74.87988884631261,9.216045266031003,8.767467747706482,39.86926305831447,3.8339411059359065,2.8053608766974776,10.716506422871607,2.241090445455187,12.582581007510225,21.088901311548735,11.434432136534955,38.24896153680653,17.953608720998247,32.64689326432898,32.24139122412252,27.500573549337474,68.34234612530075,7.516066569578271,20.526203325337626,17.59737454648117,30.69223370634907,49.0503610846026,25.554485918376933,4.641425344000822,78.97165211330473,96.67952449010895,43.91316097224601,32.26183387740788,7.682471322109404,55.36525884671889,81.18596285561081,9.322942586584148,38.441060641941164,24.22240957552959,4.270783627688369,58.21666454998833,82.6536269660554,13.91383928754802,12.81166299497405,12.302436943065153,29.369241622642747,3.70085499681678,0.402393037362188,34.82744168703701,41.029016225324376,9.559536225737794,19.236453987052794,27.602762353564792,28.179909205782394,17.29252317540528,15.113351725787183,6.852773222400501,9.529791878894766,20.093748047077153,6.452925002918008,20.087278428325483,3.035698175688161,29.17741367191481,26.869534098732547,22.77567352896258,61.41842875527656,1.6811035240169803,8.855465197360012,20.2503499270274,20.173444965971086,78.47379854808305,18.29139028177255,6.218035520767062,55.81603013339831,78.36323398892695,26.49717664896236,20.605319989705873,6.511035266833321,0.10002852357078229,29.557282223107762,10.714815490633669,21.65455179307793,3.5608450194687613,55.93017118058481,5.205185569842378,4.650415398818897,26.289344951858972,5.61443795403531,15.566926049731443,59.76311391805482,4.704971279307131,32.410977629670036,7.346471136569077,1.7691015774157437,26.256649832075354,14.570224509812313,7.489811173282064,28.4297524657118,38.09074737942175,6.699062828330966,18.948292753164242,10.237725143850668,10.779580451342374,9.278565576347262,2.5045934050933667,74.49991398160378,36.670797389580514,13.579793231272442,15.789128894528353,5.012552681292931,56.650728633777256,9.517927437443987,0.692133544478235,5.75493917604247,0.4616374533229717,13.003691523158167,60.45964566178402,29.452773377193616,11.058429473074785,72.0790640915981,61.33533476650715,5.374578374414375,38.44592792774326,56.322133911754904,28.800790861607318,69.8784855314352,42.69160844564929,9.98752448808763,3.4823407872616414,9.521824916579533,9.264633314654224,3.0433343997631113,31.501367243451455,23.26418928684625,10.776981506010863,0.652417382641687,21.0259935889474,27.115125993012235,72.57779380473465,36.512332076239154,14.973309795550975,13.71163141745888,11.749803951372328,4.888461769462527,0.2960182067488013,57.1650655571157,19.834449817740285,9.92095755930359,81.08292722599201,22.058644636061466,8.991131066983392,23.670563597834615,21.73065926065162,29.747698727974093,1.1522583613321515,30.601155841058024,24.581578724332594,4.298892405369484,15.046870632455793,14.465289396828794,7.685150917619077,14.49580079084603,23.837133668957467,33.181806000713905,13.913102654106822,38.860847774283194,19.737658252282674,2.4714720573521642,45.16344916556707,2.929287311694466,4.189518462428787,2.6547869683969054,9.071870259388525,14.99944968381175,55.048996481524895,2.5655539577587376,10.73911698144373,4.1133500184463045,5.98598328279083,11.722922171575567,12.031551199415631,36.168687315208615,0.39132979571445015,11.813377589753898,19.643418391715315,80.76873194055008,3.079702895795272,1.3261517285275897,6.290841198876926,27.65742659870398,5.351059970495342,40.25073095600711,32.70012296391247,31.575225395390095,10.95529778349771,30.761008535765065,21.542990439166715,5.793273425554133,47.39865571193519,6.530834185014292,17.89963369298151,74.27468912886809,5.435927543292209,7.563424879660232,39.466306684858964,1.5307620985747192,12.569048308786968,16.706066404708494,5.12628009727506,1.3628142627218622,23.82152648039214,1.519647686132373,4.4895141197568655,3.424535145764505,5.0517093668007504,3.843645706949339,25.491757346104905,47.17378151802569,19.818234532444016,18.321233760315764,37.75340776895481,7.292341180989826,7.601866259882456,36.72990099143006,40.4366493749429,57.837562034020195,30.210702068205986,36.91390715565422,5.492241693255173,5.69669364130511,22.174392031742116,42.02497081721387,1.48711581804654,41.65776868092648,40.30821899280946,2.61644213422737,30.199892481080994,34.01516057901471,5.226476870537681,27.96307822655136,2.7038798424737944,58.64790482964726,30.306063521924077,1.518351026683995,34.76170629421368,30.18691458959577,28.818781521555938,58.327058919876194,25.391170030415367,17.24905215085569,15.24047800333075,40.57066164353014,39.041048014422465,0.44794104572731896,49.23550653882375,84.84611713432089,4.390538852955835,29.794176556738762,43.20798726222479,39.24171879108196,24.760685098424624,70.48371900264061,3.166851783830692,44.75489780494313,25.813065034359823,3.3597808438180845,31.394311611940175,18.95032956224054,0.16096561304706825,15.66399967647503,10.671336331937153,0.4678239351323512,3.156138783701735,20.736043722784792,57.666099482240426,26.196940818390793,38.24173780331776,1.9724221426249215,67.75904731920063,2.6725496605866206,6.340532757670374,27.688050696691803,59.04808079814704,29.476703404046027,39.10400331620312,26.170252254986252,12.383666313742125,10.368728119073534,3.7264939563154797,10.504353464085824,28.84776882516814,15.49233226812968,2.4306684395301814,12.398961457781832,4.5752143398273155,55.222146261267625,4.139755607204414,22.128697685544996,3.5722842807239914,13.239889548428874,13.463265927431156,9.489494711781447,11.094737086789074,1.3628798031213245,37.03109590411323,47.49308964381969,0.11621654723776853,35.85150535058601,3.1550260187458647,32.57017355953547,27.1099435640609,12.18756011396148,1.510066902477213,55.83392900499581,72.1000423405428,6.446137310901904,0.1179649198194932,36.37498612206549,43.109660515628775,64.64161671555657,69.26910279129531,21.25163737350507,24.690310626884337,52.57203657011706,9.567145824220177,29.324778623269324,3.864130711906334,0.007815515433518883,1.0498496049062833,2.1287960471175866,7.81993842034624,0.5045301660954031,6.172305682286705,4.696443172762688,0.4468212689644062,84.20362789587772,13.221320765663592,6.683623432508966,36.88693999869547,3.6209799658027215,17.698033175832364,8.823510521421163,5.482887570605776,2.5574462952557866,25.742342826993948,3.34918933726928,17.99283103646026,7.470982501440481,39.56973621687722,8.433078126299042,1.451663675023994,8.345275372922487,23.57394216372888,59.781177185938915,32.853092134270184,0.22283003750934727,44.90639895737656,11.515377430881927,38.872347665332775,9.792982822098494,9.84043709128531,74.17884639011731,0.2891403228588558,3.864623252952616,7.393353570675547,63.33647577873599,7.876158078545927,6.563799815845561,2.4706534689211876,17.740572892156706,0.4900324351896157,0.6330140256018728,25.805791615263928,23.08461736706262,36.903278237322766,76.23091083839304,3.931894424974466,61.506274189634034,5.230934037818717,40.74229497578041,14.86367806278551,31.60870291522744,81.19199021708314,7.353929964586783,67.06597635423176,18.441937927907034,11.384907078182422,48.656492433131405,64.38343708907654,4.823871842983074,0.9468238865003755,6.634471981011092,11.759126324711866,82.61375719191855,11.204382780452477,3.7779831367236056,28.51532178505781,17.496563375538358,16.38061161566552,40.19911399136949,5.424484571917191,16.980706859654806,18.656864316640043,84.24850094823782,20.682095512976197,20.96483333771102,27.4300801290295,0.5167075007032835,13.024259432082125,26.59131477779443,5.929518783678311,30.238395003406925,60.60975044816982,45.3384807979711,8.018263526582237,49.36272893799315,33.44573748085925,4.220594520582788,11.78545340936008,8.147272270997497,43.57793924053325,40.231985735655506,2.062547631110668,1.495895923177791,18.193966278580987,30.815507740724144,33.91638304246064,10.882741277235777,7.424741122277844,50.22368777954098,4.8361114087700585,86.6408377834165,24.0529452622267,74.97569095438237,19.652310884135293,0.7490798465874136,68.13480208507569,1.6695739216804242,3.606001633555078,50.988276048316386,32.84511205659874,10.707631223977,23.354632398083453,7.653693892244689,7.985872117498616,0.5689795198431469,0.6492570889051166,16.043794229744783,12.013708894182024,32.6988096900521,58.19405820477025,29.30165354128016,63.343850119966625,8.336713209310528,32.78730883590093,69.93158013955956,36.26424019700055,53.6114275215408,24.234725109155352,19.872126490868883,18.994779823200915,40.250736731095614,0.8902529730780993,83.31450440680625,15.69845999230245,0.47828392860529334,2.7053386720884087,0.23587872631568585,38.87025633212941,24.755609609265022,17.22708638579296,18.40935471065245,15.359908551110447,21.752282477704544,16.074413840215207,6.392803132828725,71.22037433068287,5.95931253593559,6.01422646696296,21.941072770290702,0.10968530604003668,0.23039705004075017,17.103851403705928,11.527566880399451,74.91828891901605,5.364055439818916,11.574634316328186,12.707800986802253,4.584760611751282,5.274618386659032,78.04722916981322,15.301981111429242,69.8217933626917,14.092822303941531,4.874269350730282,13.045411479867838,18.707165252972192,25.038491818758857,85.58309436093316,17.262806316424346,25.441263882472853,19.36830338297838,7.004680021926728,20.71702498401379,5.151333184004052,15.37088181477192,40.34486783176517,13.944196346337012,13.81464940560295,23.63979388381709,2.2478811978651425,42.38745704743759,17.121565033673065,3.3488975186591885,10.984235155269829,0.5787462141863244,21.188619816791043,19.202565511906034,11.179577409185605,11.892297699379528,39.315400793896586,69.55792387386602,26.434765250482222,14.360086444446608,5.508810419282173,34.06654663746461,7.822456334834959,35.709546275755436,38.509032836545664,89.59465582132312,82.91896188820989,25.107470174656697,20.364130426294025,34.53750011349952,21.081815380368894,20.249126265269556,0.5071274277794089,23.53983565405707,30.597757799995772,26.84930549069504,64.77459869532287,52.93704126203732,32.255105280018334,0.0551276999765804,7.812245120006523,0.33876782471047306,24.894389183224845,10.08831568966222,7.626818471458577,51.731194584314736,0.46647834682612155,11.903128371514512,29.258016286404057,55.574616645695585,4.4717797215741015,7.600957719594437,34.66326956189924,20.57213073799229,4.39001048212743,7.599533108704186,64.7498092973246,7.106277590147705,6.529966757340716,10.04907307066653,54.86044621949424,4.875984388265323,38.84118083353283,18.230265740734108,36.59375809432971,38.0661608516897,3.421330742175728,22.621419877907524,15.670838722954771,39.733122237142005,2.3398405383841627,34.021623549131036,60.918260368186736,11.821110858629993,0.5856062949040677,41.92707181639681,63.38309715355843,27.725807650968804,9.791594248045932,1.420236055604562,10.882998811210385,15.625961396402772,50.1191282953117,65.00956145926875,1.561266989223531,9.864129120364618,40.36278088508514,17.21293793823861,0.030451256221017964,92.52365847497074,7.561141365164515,35.759041333148076,63.852590068215875,17.575158682904345,20.199446844645486,1.1662606038446266,8.355395777875785,55.198527154980084,3.6690296868282033,2.2518275380282375,6.485593397422065,6.454372454535971,36.81484962361909,63.429360024035965,22.150626654285322,3.9561795778223163,24.08873940176396,12.83345534169824,31.98714674499764,27.032646335045925,14.590145118114378,20.172946879423463,67.66425959130771,36.01724096558597,5.988518477468961,63.95169347346762,22.34170824443371,19.882787822527078,5.905238925168089,1.238985479139322,12.540566593895075,71.28937431946028,3.314403519391962,31.054981305112562,38.09765280421426,46.86737517362127,2.3324987826297203,17.21545444159267,21.558684062786952,2.5948122521636705,1.2007602350920692,4.222023523763729,6.99374847652855,3.445216753846026,83.04332239555248,14.70494731032458,46.480279393076884,51.89317219511417,8.804844522058207,59.03675552064307,0.2453586419867606,7.200693657376107,6.1983426506733394,8.466694174755585,76.34039519822524,6.3671197941517725,63.7975688696396,2.434479884235259,1.0238675618471813,36.856891575202376,1.3205321672717152,58.385345009664405,8.469376563702063,2.5096377853554372,10.307981976948469,26.696549903870537,6.260624579195813,10.877026279181145,13.170414163692945,65.7087298125021,3.2004813485064076,17.745952585762105,23.932180497421314,43.99746443596141,16.900297280743715,92.47677023613475,35.03046999487832,11.202942478544497,18.213753194157256,14.346359398477338,40.817822471014665,21.429710371626754,31.888869239449434,8.71078273049375,53.844585962554845,0.694890677498583,23.097107852000775,10.421728361606128,25.62450862232509,24.11259508639725,18.657157542545896,6.350502306428673,5.372770895111458,0.08787421558903397,7.141378927133202,4.713271381869518,74.61987190807807,11.20638224890786,21.478027419328814,26.031117493963592,38.978638494238155,15.095113766251103,46.58681249953597,15.185791040045991,5.728131490082312,36.050750970932356,10.15176357347481,70.33050270856356,40.55309711444218,41.64678366456284,4.100351088938552,9.230895651715398,31.61701017968107,19.26421924931023,76.28958661211888,14.655361609011997,13.466978622224595,45.45928455742697,11.653867099468318,11.56122204979237,8.840869387144053,24.304614516795844,72.53499533833244,6.320038690607845,15.966706069537128,18.062841041344,6.650552082346266,49.82796231942564,49.20953269031491,7.530842348191991,55.60576224793882,18.54335364020583,35.72285661457314,15.850602022669126,18.059415664407787,64.63784422588338,18.228638594342847,10.42865566207758,1.2221626538348804,26.509630074921464,6.623527414660302,56.095357778318046,72.7372335397205,9.54885764717767,30.888737397688665,5.89212200547945,2.4656570036933316,11.383452097841118,1.5946859936658768,29.175621927715312,0.3686726313467448,41.47229870214456,1.376471673737555,3.473809738880828,17.05821782423739,0.5914143146874551,51.79729705159218,25.060408348787377,2.518061703082367,4.078310779047358,80.09491985659093,0.7229245519390917,33.386988517512194,5.305119770381584,3.3219010684679473,1.0973762550387178,32.540906320313105,13.082098973162587,9.643281417890975,2.74783072470014,6.114546003921845,7.787714490853681,19.880049664234036,15.90993350378421,4.630241176165285,32.348411449134574,10.482164960772234,69.86963914839147,50.54530655826534,8.317939954864954,20.476073844988008,1.7587694079396976,1.469712770419859,22.499110078154068,0.12762625462659916,14.414232642499005,2.5593633794921455,1.2573612544736101,1.77992748816785,15.672725715399562,33.68838253337785,71.15279343301285,5.406532055066929,4.379498277930487,84.93573528448479,65.04263545815766,28.20900589330535,13.697983835305294,26.255045896568767,22.589329369683934,27.70663433440093,30.902933830361512,47.227080398359256,7.198212999181619,46.5535777423573,56.75252447387582,25.22592192637688,13.436258864832894,51.330124276953136,0.045098306398183574,55.498943768339274,0.26481424036708745,3.7404161058479364,9.397473903494731,21.13054360921537,0.9617028488650661,40.078245500339996,3.245199888702757,1.818882510788427,2.4834306313231798,16.04099976856115,12.54997025979614,3.898908350254729,5.101637947068147,81.36535499700746,1.7899567157437124,14.550504663670116,7.534433230381119,14.088689302358656,13.344524779241873,3.256845597446313,0.2710164031974376,12.97465007980729,44.10176740695854,14.430497639301976,21.59561664747113,22.625904923660393,60.73849650709601,37.01861850713938,16.552538829248363,22.43129492994767,30.28804050745384,28.515462981312478,1.0434256778257822,16.7922863232817,33.18317942595842,26.395910816465793,4.60431615353146,41.81667644844562,26.810498125671643,53.03879372368409,65.3595303561,2.6691418437363,56.70974240094687,31.744754958079398,35.04728323134468,9.3975539190808,7.776277201645414,22.75917664602811,6.044893493181817,11.221726384267006,6.522624406291946,3.0430068659264786,1.5609662466522636,32.26951799355744,84.0427952811145,34.32902844229315,7.03362119615184,12.832596486193829,30.01525225133583,43.26646179633228,3.87063908714379,15.391471993504513,41.7727429834496,0.04373699100206352,7.162041371522399,28.691172062074898,31.36069686695786,76.76478211791789,78.80810439975117,4.6054198372945665,43.6415697696264,25.707605144372593,27.360802124802742,1.0641341184210162,1.8060650435993324,41.195577388813874,3.6136390486219305,31.16350807196175,9.937329775224839,9.343870164191802,16.246564901252224,4.671659939598312,25.64521465959825,32.80803604276215,2.7713755309651678,40.09403003565421,0.6847686907638284,8.475408309857272,35.094824298764934,24.44442481754362,2.4815611226353624,2.2763408599076715,39.21920609111641,22.351707617883676,1.4205519472393888,17.773908961231374,0.7003328542919061,18.80277723138184,0.5938445250889046,1.5992902106948037,23.22184950841848,0.0961480006346882,0.27522846303984494,7.047330295920928,0.8912312687001558,2.995409350281797,1.3590860852297766,37.95249868524462,24.22649304236397,16.459410098127506,3.0522339569780037,1.1667139318091158,2.801960829656217,21.00042462807855,5.7475489332122365,38.31435793582558,18.845455819833067,26.816543295732632,7.553241887450859,33.5377236190834,51.104623955942984,24.035236820598772,2.376070340850722,29.933869959969694,2.4352156171766004,44.61148147945207,8.685972574555334,3.1261120938983957,55.12488940406525,60.30251180962408,46.14307387088253,11.194617593175565,3.03309028440496,2.479797616639665,40.695740375860076,3.4093973928271515,19.16242922078282,66.01961791450024,62.562237892715245,16.003804553157686,47.68041104493038,12.03586252158469,11.323492595053715,5.267037239767625,31.02659265768051,13.259668692991369,9.864643352635284,16.870355837072037,19.893152234456167,3.988548610419951,51.4654423973416,1.3397396782950892,2.11909451487341,18.642661913202772,14.373299280545872,29.74262917143774,20.73621228865005,38.59446483854639,60.14990400173067,9.820742861240845,54.15402733494062,19.153620377626538,28.28619075287741,30.98281071264767,46.97206447590258,49.32504964464412,40.71126559871411,17.839180480420495,41.114340388316045,15.45542762221389,4.1586135770976895,0.7400946527174277,0.7510837360582343,5.414167951840838,24.673949307413356,1.1082836589145337,33.297052295790124,21.018321519082672,1.092996340231597,27.637990544277123,45.83167430699602,68.58684762337786,6.460236634401961,25.708898391233447,31.987446491626326,25.739121551007006,4.723693412254445,91.60233828506273,10.897507923294427,8.556056217266761,92.2907534022741,23.66181874691813,54.30525571099739,17.965325919146714,14.546284127031672,53.658624283546374,32.097970267200964,31.743518195966594,28.063568728212623,31.793791668256244,95.03547068371326,9.5574947065478,5.488311982390876,46.55778899710891,12.469720880044811,62.35888560197582,27.46672586489081,8.43324312287944,13.852607293484132,17.229524425777576,30.940651046879765,34.043787210629496,6.786704798211829,36.92566903552596,15.440867670084323,33.44590281064553,8.242097273095672,27.818194753985523,3.3431495596877063,2.1428555446958626,3.6548536749212985,51.80533686064754,0.7552003751758574,2.8318769356805404,6.816420209182716,26.0917643695483,8.764740657269535,27.208765326400197,16.0936872241475,30.875335941845485,37.797154962608765,40.890132916693226,11.342256063358679,0.4102618573155308,46.075046653734034,11.603657224243634,21.52915267857056,6.067565495400828,2.4701164374251885,41.04232916707222,7.7318785909548104,64.25656065692552,22.623823133665596,6.093727104675693,27.221682245767887,2.18572419953062,4.783153525510883,11.031147559622834,8.270548065890093,0.5412239502247007,21.571803015603052,71.40307459502453,10.818551091247905,21.20775273040104,58.46313519048471,6.329046347632868,31.3336374977184,0.8184706038623784,8.11323093475518,71.907751656865,24.79364086336649,67.02666475754951,35.455229170250135,37.488044286707,2.0855290213017863,11.821999127919314,37.65824581066903,36.67466738352725,26.943428810974915,0.7209330798599352,7.874287047224238,26.499970333563148,6.149942941834723,25.199550762575456,37.81077326503567,16.391423352611568,7.406333866179011,1.1670831496162544,13.927137584228156,79.56241817385639,39.70024827821988,6.710148006804275,31.673712083694035,17.048997318577356,4.3308099992458216,3.1476000269681115,21.868071267704746,0.43596699897412616,40.93852792213094,50.34981558410784,62.13193063574819,46.98745036064073,31.989932400490506,46.681226320174964,24.582621998109076,8.140539247588933,57.956701294628985,20.037074173334034,20.086655354463005,3.047081917029437,55.70352304519335,53.70422127650921,31.17236808095948,0.6295849198651338,40.40749616555945,12.182801134939638,5.607964902742097,16.607533411068065,1.4208974621278685,3.2750135662668156,3.8274867320276087,2.972398921457576,15.529396110546124,11.379186407044749,23.407293316856276,34.08123942936245,21.480095548019506,27.108987957938886,88.4522136753288,74.97309886991471,0.36774645074317647,1.8111715001348987,11.73990010883481,51.09544843779288,7.930644958765921,17.193466497045264,62.544717456180365,71.01033883344856,71.58303637247643,16.77880043250441,11.914158013911724,0.06373002375008241,26.580392652269985,33.9785839256824,49.57467784530279,18.650978117676498,56.37081704695945,57.210280094792495,5.377858320290885,3.157337871839541,11.730847772402178,24.805234977435617,7.917870119596529,43.88471222283298,6.704568405293642,14.715813488714605,1.1961803631127133,83.44494192924606,70.52320880108313,44.38565840291932,7.859567366163105,37.49123824643653,19.735786856037816,58.67457093752218,75.96394712658832,6.9958265721977275,17.558564601102688,10.442005669629708,18.828681338752872,72.5559057635699,1.6425913688802085,11.445425637475338,38.53019172652827,21.70402859529218,18.988039668442745,0.46012146871651183,7.061681017636857,41.341227932867454,31.765556049964893,11.713280005706494,62.75217155203497,27.38148350195111,9.585683702381147,36.29296978413554,27.041470912341993,48.172547252819506,3.391924464148957,5.6367218434140165,2.6624853903944867,5.134677250437338,37.62420014783567,2.7143530108363123,0.6083878396986431,6.554882421887676,3.589397931951666,1.4441129988866663,2.7210843879276894,39.77229384970754,1.0261313432844532,28.28805546745201,14.591135469031954,2.695952827039335,16.820616554476594,1.2950885751941161,29.101362559547084,29.65417801405553,31.68003889183285,4.941306406001566,1.5116509708928554,15.279553434197247,0.367672353528703,13.874041945511863,8.049148443739574,20.211264445698106,3.8896960779430856,7.0881702691742845,21.295996001902722,5.880283868188581,1.9484544196480051,13.745537956067755,12.023897993937403,25.869887159820625,11.443541724202035,63.84552874360034,15.47443669888462,5.837901220816644,3.038913877668591,2.388010636095551,24.62187553120907,47.040246926611886,25.40222697231713,15.583227633110264,5.802748629541853,29.378524309959815,2.0206532495969487,2.438911408646277,19.102600950027785,0.7876167136726764,61.23835546284513,15.900601711886516,16.364046806770148,3.4706061232442096,19.400059740011734,45.629832640375,17.812414335032233,19.98731024092527,5.2467471720606955,44.41776349239203,16.041418515704734,48.41433072289822,28.715445435361787,23.57544928826839,46.274166225171186,50.75747371527051,0.1889125416093691,22.929380634248183,14.013004554900554,12.84939719398168,5.350568446504389,0.020668141816802432,14.933374284064662,16.099190635312297,28.3449141714581,1.4454758513285815,4.215353065638823,4.979747411918223,20.036431673977816,16.903481834651547,2.810701267252147,9.077847082535051,45.83183883941879,47.01292547105073,6.966628121478642,16.440767583123527,20.81628130269442,48.8534188837729,25.234744666020532,21.915691938701755,57.57506194154593,81.69808115054757,7.853577731552797,28.819206302102028,13.748283397364162,8.825031940847595,6.484588883190867,66.78820187488265,9.46411176970988,39.041122885340506,7.552894827454168,43.29820680852256,1.6366567673619659,8.050773646982705,11.800153019032791,27.862222706423765,2.7562589230187076,8.797853887635682,17.754358868977178,59.78513928983426,20.48541080215034,35.76216300855629,1.584464701828395,62.69237672319551,8.459554188807871,26.504806897094078,11.363500398771542,22.900964988675028,10.3674932102786,3.5121095476582154,37.09760767364958,44.526630364463195,1.7182921462750613,1.9986086900830702,27.487301438197463,37.448107612497594,34.693868093248646,0.008873260946421269,14.36408535481033,6.114505685462447,6.699535081132758,22.632043471496555,15.832651616914958,18.37645878810595,58.33288810201994,7.62554959220865,22.54059389582681,14.720092178472548,45.16840929783682,3.156540574284328,4.845934391758448,9.581858881797842,6.689647638958873,4.5280140966010975,31.454682684619517,13.190207355591221,23.45704023576086,39.84416754343467,12.337848469554736,65.16088931796028,44.38559206084592,51.9191279292454,8.710116875206019,45.542654941075824,5.6828351542703,7.444172224093193,0.7128917980716496,84.07309188618088,49.8476396179387,6.0998353592787,50.259827120866596,22.81761677123302,12.611628252389721,78.83808074307477,45.16081212881079,26.877213267091058,13.475419780369336,0.9374819507780288,3.28500587231092,65.79596817986321,6.664969713616964,19.43623786397847,21.789226304637836,6.703573470511504,26.419465741110614,8.973953691044423,17.06371303427684,8.179325751641798,11.486181747214818,1.3152057607264567,7.214564847106246,17.268444731924333,41.11085055911122,28.512286402063523,6.215897355995292,9.511005136866334,17.747755963911516,1.9040898800790558,3.876132698139614,54.01466680757848,22.93641029679495,6.960541168746463,11.007597825707682,37.383460923011924,1.1786146564317193,8.911811809207926,3.41379424861411,8.206003649520587,7.143522268821169,6.168916517546798,32.958385818848946,21.33955152312048,88.74928249662936,72.28301997109102,47.62928225121491,65.95028660776357,14.008315156635987,18.705034846388116,48.677964236080676,22.153649827263948,8.009645910273033,10.230191493529617,10.188746249620683,49.71322411196557,3.841596652297852,38.225747700747256,35.126778466776244,5.213503529722395,0.12804003444486511,23.65864254889728,2.025569099782009,1.4009432532160293,4.824190364854658,24.888991390264493,0.9569765098235816,5.5611916067983325,2.773130408151772,18.884123787688353,12.169268960144919,28.710416485776875,18.89662299446259,38.35302597819448,4.713954048050098,11.62612223325279,13.302719144581147,20.993930440582986,52.286942172985896,24.565055854532613,40.30850138220256,1.6627050508075114,2.964190684347699,2.088754118003095,0.06854104958148266,6.0275178375611915,23.13442107019299,26.505649417898304,2.797754107590567,46.40961847928473,28.169091181727083,15.299681731370107,27.560566097980434,30.49562872048901,17.518523305449733,60.69865393356888,29.981239459163845,3.4211168910790786,0.7884717884969135,40.57351514569649,9.90282412539576,44.12803440409396,6.9088397587965815,15.169204406651275,27.070877300161825,2.2136490270531226,32.96264398194163,2.804112270816958,10.421402452691813,42.80986884524061,5.227612398134259,48.76409257592399,19.488897447154216,9.265528611958263,77.21585645448575,14.761958444636704,30.758125723771723,25.496845807525283,26.00994496566894,24.991998829347125,7.53471875354752,8.051600622413076,25.17364554807805,0.6625773082296185,79.5457343571099,30.926296463281577,1.5432336539767775,36.65755044863538,0.1638868077723843,1.4964104426192257,5.098644591229114,2.0230819830705737,13.289434549893354,1.3658846561006461,16.715077025041126,19.018425226366865,40.183750180526445,47.73807319495022,0.018514033621042092,5.695569123425727,0.11759613071493646,4.971387333549238,15.120503456048827,18.71086611263376,22.879456993714964,1.1356604518904945,0.3259360358182768,13.652272675001909,7.142632159781714,12.67261785547996,75.62264683034098,4.916746759419488,32.524792580449514,5.201569100439329,40.4152427983136,24.273757310017817,2.6331615392540506,62.506333915723886,2.943120528787503,96.7646436769886,11.711057508760025,17.80419996317617,5.800121174627282,7.764717402489481,57.93850282145764,4.141080994115242,6.470224479182685,6.1449574937711855,46.6683523934426,24.79853715450355,9.423371380559042,31.114055463173997,1.8729896774301267,2.3106219572091913,30.53989873533179,17.958412062014993,25.770369714415008,60.05896329023758,3.2604974757105083,33.570121622859226,15.492265465998116,9.137517273105987,60.653152024415824,18.52691954194497,6.843819341283179,5.835267646872083,23.711094619325436,75.87675832748405,1.8718765522711123,27.42133859154211,12.0609854097682,12.46918360361291,4.356480228462026,1.698035171013757,5.5162392827236335,51.00245697382469,0.08344287708162756,0.08893382136013273,51.33494220208142,16.44769544835637,2.088640264665276,49.55938266669222,16.688756091280467,0.9450148521398205,3.1552355423251184,66.7367431439589,75.58450851174099,2.148770860764149,86.76789024560892,8.413519042696205,37.15559316614115,18.762106811034286,35.89952495223228,8.152283710880734,23.460537779562102,5.391133954244552,9.63902492578967,18.580384675172063,39.243930504430594,0.10986022719319388,11.945421272842502,22.010669096444634,37.87397477929074,75.320827288,45.84523198786298,0.4013384643297906,17.14632350498676,80.3640359656745,17.49644443998919,3.813660471591085,0.5182519757601511,54.988387765619095,32.726760193218176,24.219331375433516,45.524908249419006,10.368175081296073,9.097575001511203,50.20171992898329,0.5132619348093281,68.76852475102791,12.49434088366814,7.341620379873202,26.55250441282685,39.100785464216905,15.942517018834735,26.90055066154791,9.230040022556103,19.252422891858377,3.885646484017924,32.80509822291398,5.401007617824383,2.626720453604218,1.6832794102454196,5.9948014811516455,23.150293362000472,66.34037158642941,14.445251249059481,4.703438976035645,5.958055237441973,2.6333912337623167,13.638338410142737,9.978788968383014,46.70055698442977,34.190797566694044,0.8380162901545671,0.6384036521482779,41.03472918863247,32.79967003519115,4.482932461710976,5.112728273761425,50.58608679586018,4.344546622428702,2.6173266166322424,0.3647543405591236,58.0685011308168,48.76115498495987,36.78557068325159,54.09442363233033,12.888530815023927,31.52240183459491,44.61591183313346,44.349083364205086,68.27959007030393,81.967692739623,46.093865011250756,51.568613475605,0.849996553667534,43.136169008777415,3.7381554570769993,1.9054206231933213,14.603993158985606,0.30709870472860423,27.053936630900843,4.862288364248869,2.08614622568862,0.855486581155096,35.40529018435539,9.957847242102913,10.53694892242797,24.83486340675857,6.971853358352,16.20471675829154,62.89807163335354,60.032332140212056,3.5372456411565274,22.382337004376097,70.69916991144933,3.0080455453778363,21.02608219274904,6.307920056981409,5.425879443782611,0.7008389193118303,6.403260102083886,3.4772972386215297,4.756183541286719,4.0826896356141695,78.16422463912764,45.89876762579957,4.33739934886791,6.412922948162343,6.73078120512578,7.1741835745183336,18.549631844370744,28.25622595243209,10.194429550730348,14.842359592113993,33.36437560171816,8.740081699095473,72.3181431725483,19.441926745909445,20.44557596913389,1.826510982261265,22.04575985857723,0.688405916159228,5.023203978993674,61.83550091942032,3.8153688494947047,0.08420622232976882,39.88753581713239,21.151758266375822,8.436400195051641,25.73545573023891,5.207336333932517,24.397485450434697,9.539501245635506,11.694557556835438,35.36320034225858,9.004551693523878,3.1675463308587726,28.871314093057343,1.1177834835914382,31.25714045947609,22.59511800869992,45.95424614438196,12.615280275903558,9.492056857614656,0.5649246903494145,6.254941085025189,19.335885814661225,16.91478855411242,24.220113412427736,24.55310275556023,2.249542981753605,8.134418144387768,21.57364525168677,86.11689088016823,11.180221043633388,13.552367938132093,2.7415904418238313,43.075350984587836,8.558571369550101,2.1958896528283987,45.6978488140852,13.945816116779387,0.33783683998265257,6.813229413621579,8.109952882046246,17.512391935345605,16.194208316255043,50.0409356707572,26.753398088934976,11.037765398060529,19.36282878472033,6.2518083407897995,79.79802484573538,15.424211969077618,44.03420026538283,11.527913918756305,22.55197752583608,35.03944344670909,5.386971061634005,30.000494497748676,35.90819615060407,4.78709364234976,26.420114646067702,4.252827721132217,49.007868752931195,52.287521127174095,3.6804812870412595,19.91161224359638,3.7857043103648347,5.035835277288491,7.201789078279429,14.77796299121249,41.41668874649871,63.33865186549479,0.5450626603578144,56.89510486050877,31.804763118027747,11.028432872528448,3.3027235485983297,3.244593322395801,0.1487901342222826,55.74038625410562,5.98421825250438,2.0505828149694025,21.892257392175203,0.007783603149424945,45.29255406803942,40.054260359216165,1.711868819955452,8.006401507399573,41.159303625701035,8.674779603639188,6.637393896758114,5.1548040550929315,13.08233190820085,44.88227658258932,24.87863268268259,8.15306877475566,22.69733357344762,10.349155843702695,28.856312878715606,7.7585204455789665,2.7720766979082896,14.590803887411298,1.3880414626956394,25.47623021452654,51.01676784362507,8.658374046198325,3.5449217099611907,18.14466057385318,26.84782492463051,47.67059900007084,5.557487982525444,41.39079877025235,5.428291584142819,20.72578559855105,0.38329290943754213,62.89830873942983,3.6067885782494074,2.3401780066002544,11.177861662472456,26.567189132920255,46.07191466100833,14.88869095426959,53.82453639933801,30.300389122315877,20.401165956915932,4.099910864569562,88.64221389653778,0.9387702474157282,8.698231381741024,27.069551403499258,31.609061831391237,0.5403027952254003,20.89345383692589,34.0072340209124,19.85264354659526,1.6637465837478715,31.03711568828489,35.28857859634218,63.377691303748286,5.357040136542524,52.32409798515143,14.66186469473003,33.03631132701573,1.891505411771698,11.411417475376567,27.729320893982468,79.41061118880661,6.974764275985358,0.3865713006384226,6.547094645007401,33.70019340850497,23.72628386795125,11.683827586653372,21.019415847978696,24.702934253931666,13.999280204045917,3.522838562679162,19.850349604336927,50.37742660137346,31.501989320877477,17.90529681932854,17.059154143204925,6.056315839904148,17.69846232133715,5.110040940692045,43.983615045338944,22.517976495634805,10.461962304014483,18.939980306689165,28.134331711654593,16.152405978063378,77.23033544594486,65.42231104361427,14.110195343111869,47.90974806982858,31.059767897846523,41.7271350765733,5.920280653943499,3.5997220853176444,30.441857976900955,6.3468365332493235,32.68440436636123,58.08413910787205,8.647299727621032,31.94624924246193,24.996877577941966,4.219508666311647,17.555441225634805,30.63568714551539,13.471404286789266,3.6748848324806573,2.0511073179764168,5.593396806567114,5.900820192460483,23.226266288697595,12.116198872805171,6.773943743144017,53.60456497111876,19.21841643432756,13.970915069616275,3.1167878427579367,9.511051369140533,46.312765464063524,29.989645963377676,1.1370083256455166,93.68837700428254,16.035350427154714,1.0731465248137582,10.512404778164104,39.85633226643534,8.247548908713895,18.131498256629413,13.663832263338172,15.86076744006563,12.865032283460309,24.94890322833548,1.1784742057378566,12.070081760729835,36.64404673461206,35.36970778699179,4.162084689723223,5.3523561058735964,11.878973467236854,2.590503289688395,17.703873024312745,64.19525734164765,24.858328381263583,34.796150912939964,14.806542811866443,3.098571832537175,1.7231362854253418,15.201896101914102,12.348145354282769,7.459114267986251,27.865160114183308,11.869210319422073,2.0881510675075283,5.193105248575247,47.06321661747705,54.556068088605855,2.772139959562274,2.890471486907664,2.187958701357462,22.12066609355852,6.251245930768812,5.583990370547973,39.08462468636588,39.02816539275863,8.688466359349334,6.347212991091965,33.28063944757326,10.541063006882368,8.032824359330416,7.2184809539758135,59.90680803995714,4.350425513238207,7.214404236238014,6.3530863555974975,43.499715658124906,40.2512595822198,0.5221004895597048,11.893454346703635,11.996887385623388,16.847400152618185,25.72458072343609,0.07508177518430337,44.765265656815544,28.16561286680853,19.140777883901162,43.43703818704105,24.024618125911523,17.045907283230687,14.19300101622349,5.412254654801309,37.594306793323966,10.609353853631973,33.215280970858494,82.40182182071021,35.64877072004723,85.98232774986566,13.590186341357457,26.845741851579973,15.148080012677722,68.48112572620718,1.034530697842694,8.835433366764157,5.71425937324136,67.961296473332,6.635005915824243,48.8820717527338,32.47778741008677,19.483363749822566,15.843960644340598,5.195731278649365,1.2042334691165983,3.286991543232233,23.11930684315877,17.372621262529037,24.766221914796237,2.4800495108099803,8.997052589909085,38.959338524846174,26.685463862461653,91.76481961216739,4.263563262783187,46.368573634036416,4.7327481810918,16.061701383259475,25.92504334005701,10.76367501377845,36.43650204268558,63.82816918726887,51.558666351242124,64.20267801227637,22.684121665212576,2.1649709803316597,3.6227006609002235,7.914419164996474,15.037810401974061,35.217069938948164,4.534173756691182,6.377254605964,23.050396421237295,31.98080278670441,5.413414960390606,46.944020849401156,7.193622079158479,0.07743458960534255,8.14229573147788,2.7483614402074146,9.631019022558558,25.260958306316926,0.07241080310685533,1.5137397175650094,92.74166981208462,81.3276295593405,2.7122744219974173,17.535288445670115,9.592729846305872,11.565713940620604,9.84772102468272,4.481723854373264,1.7695985743491738,0.2680251520771604,10.750475456753417,5.497497005030549,83.1015747156317,25.434188715983012,12.33333703559233,26.42478613167829,7.69955791605539,30.697450490534084,7.66145345266726,2.2553543686184483,35.37773405148846,26.15117487425572,0.885588330742709,5.88448862338204,5.206377266310675,32.43776586325765,11.682569826968646,25.525060887585283,12.263058273270245,18.218529116006106,7.866187672166458,5.505194195717465,3.5630060617635295,24.878854300791765,31.16125174173259,13.378896390089203,10.773013434654679,10.795930034984792,4.609150956698437,18.602121693898365,47.06725910863734,36.83409464119598,25.960051055848833,13.773751110061571,16.315755913334552,16.512445532413317,8.563996842227745,15.03342402922847,34.802058111503676,4.0533835860596525,19.005918873326507,34.469906959714045,30.30425057273104,65.58661789190663,12.309478694802976,31.301104481850118,4.019895000534476,21.855641123287285,58.17814127735046,7.801944701654605,0.04451300858562757,45.04308641610894,20.02275097947495,6.251323127564859,39.147979563761126,2.1072227595763664,2.5742862469916545,2.888508236926299,24.80182738773282,52.19023357739266,7.155347180536964,6.73862294317383,22.37014345738629,27.421543865009774,23.852362318552395,8.250777113838637,22.413214850356482,54.75991712638542,51.32507579683252,8.318532211610218,30.361037885319973,14.395676942488336,21.3276788526354,31.7609760383053,8.57278531672494,16.334936244365725,11.562264962422908,5.660608888015652,14.188147319975608,0.2977144773574696,3.8024913840219443,1.8197024235293497,20.84309353269061,30.701254808349013,9.685565552621156,45.4746725534733,23.903708814284464,9.51570992222932,16.17640618889753,29.344213336816765,15.067889041264948,0.19792614063694014,70.8572178732265,23.00465518181175,22.29864232879504,11.484454481459508,9.059415234742618,20.620619226251854,7.697514227242067,19.01150732353123,3.5218510517321846,36.748522750148766,6.72373282846209,13.22550071583893,10.889357868962469,37.90343824259676,0.1238980257544755,18.607769454043165,35.645242023110896,1.8928862626648488,64.21255491325884,40.98461753572071,22.876121714196053,18.464798964206842,3.5068610190046705,44.9270187695625,79.89572190209803,19.688299665606976,27.794829254526665,18.54480795062361,21.707586543281877,9.13130120986758,7.229320190063104,24.42225129046961,52.261460054023146,2.2822638875107937,3.896226480992759,30.354015953951702,86.57728574860658,26.383790050246326,37.821357058016325,23.68827413233081,1.5636334440530248,8.863642955644302,4.440213368413415,44.133730424753736,21.54221399085494,26.29403051830419,25.038936348227125,44.03594917398287,35.00683329466501,1.3275345019562863,20.373451688875235,3.6902562475795597,76.32065126493619,29.08091013716924,10.190265824318264,41.171724715936996,17.253329253051845,9.686201658881025,14.094163319216264,3.7084606634602335,38.256724460804065,25.563255363088956,11.955013968969617,36.36963228664088,21.129783451986516,8.805628032612432,4.300115112880732,10.989909345366733,76.49121190028637,2.7388768702653152,24.669663503119278,6.32335888875205,16.140309416169963,1.9857665694793294,7.242927525121834,8.070490028298707,10.44975390829742,53.95617673380313,3.2371605733548705,12.53781866017971,20.728419827124668,2.648966042144462,39.181312215789646,37.30379502836595,42.687014728647284,19.433403141817806,8.995036281367987,8.145684958529442,59.61236910690913,3.8434738793818646,0.029069600680470487,20.487347163420566,79.98208030389674,11.514049795252646,1.4387373684062084,31.6257258311757,3.946280091360011,8.918546936408001,4.929389924643786,7.721302521473504,37.65075843646722,5.342858877969306,15.620864157944624,20.288919438477727,8.93237416047998,12.905397453382793,24.72108635903635,54.800640605621886,1.2135645574244727,13.97176445535403,7.692248960373675,32.57152010515823,75.51955843785873,11.009579326649344,63.93852538942617,27.987243738970847,41.78439215719602,1.2410209431927157,32.44379024220893,7.567647123074309,0.3349859715411325,25.614882609758816,16.1182966738288,27.122928417357635,2.980455535386774,23.67351475206543,34.16753911901227,74.92585023758268,6.443743524641498,12.999401618792675,0.18999916290559327,19.945537999488025,28.346184091768023,18.79829963603379,18.976099982753894,73.08941783041718,20.337243119100435,15.293415102625502,9.218748739077363,35.647954484260005,3.9234010309475202,41.36662445586071,12.979604452139839,0.08517533095118601,11.715273522412446,15.487043422774875,0.31632197781061855,11.730635464755945,1.1862096975009617,26.470281445108377,6.337082929086321,10.50287721154126,0.055312700509890345,11.942140561506285,4.939185100078269,14.398239687608749,12.885388016169898,9.450986939134928,2.5256148886000584,0.7327196511965752,6.0505152237847994,5.029501915515771,20.89524767919363,40.306665116544906,27.094078939673317,8.434583453819577,6.717767637356098,1.995978675569397,9.575128871529195,38.674156295236926,1.6190469806666385,74.26907729197782,30.10072555817044,11.612681459537988,29.39266195127533,7.501357935753051,10.668924818923514,11.509601253552447,38.4894523744064,3.4232871665855384,56.42948914819351,68.7066029745898,22.887943852605794,12.746625839588333,14.29988137958128,1.7975020655920604,27.528562900697896,3.477579232469525,8.085947727465069,3.7805094749566837,25.73368580897801,2.6238373742465626,2.7633386789427625,3.5015597226065953,5.177426868403712,6.5332135833741845,57.816060082057106,4.179529877859133,1.5982558144141592,42.31603554435702,44.45172445094789,29.12134907573214,39.36061068928398,12.888590392985655,55.57437446407404,17.34898688893557,1.2224013759599899,11.060636111925206,7.095808649120322,5.148454386527135,14.704112444662087,62.59530983255872,86.98455349638016,35.9242948973374,23.630439835361905,24.678283339799943,6.491682439389999,64.86207142454886,18.636556021468543,20.612419142376325,3.7404600254636406,6.967181890194407,38.98153070312772,80.53471085603701,4.94994195268692,31.340237139112247,59.365405181950614,10.913352377790586,60.1985553562678,0.004544077068555641,31.197045781371248,73.9473572101845,23.616851948470963,60.97148670364584,26.30776811702229,1.2853000386957447,18.65649674068525,3.584114594542342,1.7902330456918492,87.16886860569034,21.882122564815454,53.11936524691231,39.46810266128361,3.53590897589298,0.44234630773523165,12.811904753569547,20.3385648322137,20.860630211390085,37.37344212587969,1.5623420328755593,55.27627726526214,61.021837245175966,24.034835642763895,56.87321224956201,3.0301096368820843,0.847276885325396,5.4915823623417515,63.7936795278082,4.623263226231732,18.622325990599826,17.322014283571875,62.65411249866742,21.13860042810293,13.124815855019406,1.4937267255297648,0.712414729166376,2.7529516435018775,15.60618614509184,13.643388938791167,16.662815237693096,60.835326152538904,3.6777542091826163,1.1047721679546214,83.7416378564545,44.29436371658103,12.410084113227693,6.8104585589820985,31.022208351846338,1.945432682110468,35.979875078412135,53.71770068630604,36.28460940896287,14.921659580786176,4.400363537189037,62.353302606708624,48.86256830675138,0.5525231894760618,21.444079940819794,23.99043145719524,23.277229572719357,15.530754768680943,40.76523286695113,2.500735274713037,2.4266575812384894,89.73979554288474,3.357904716036364,19.59010052187412,18.20234370927859,26.29852152799611,84.87196645398609,24.70254682427546,11.525748660531965,3.8968432304651515,62.84295546405747,10.306413654969859,41.63182588059308,48.700385387139754,1.3615056174154923,1.3817544353246092,12.201222571241988,13.04604792739153,57.13581196315246,27.437725260451796,18.463987147202907,61.67208559564891,76.48397458563278,1.2821857184244556,26.580785754820024,11.927016234416,3.0060417452745867,9.182464014152869,3.7559119539308483,16.235529067739908,26.761305168459504,38.18295289983905,2.2537924071381132,12.320873473357594,48.76013155836234,20.423062183846824,17.53318305704993,20.46339364427946,6.101433373319011,23.989728883982618,1.563643247070864,19.83183606819834,37.28083888354266,13.683803189491538,14.598674219796603,0.3914869840415207,3.959793384501719,11.971234517649023,15.80558023389429,36.02620444325817,2.5040794877713353,24.58033997200568,15.422632704561892,6.479263793461769,33.8963175554988,0.6295583682216446,0.4026782927825536,15.177667500286844,4.029423819483057,16.20353720014177,0.7689337287462692,37.829856341329176,5.481956979395235,4.557728197287723,49.25357743563801,16.29256713678324,1.9696294377735484,18.83992454009808,19.418613902278203,10.01003142923176,19.151420864494064,8.334837691469431,3.972328610069553,8.648760694276502,30.283916722162274,6.523534114322885,16.820725152006442,13.29156970412022,21.21423254983661,23.6902340247591,3.5374751108735225,32.46285376887462,6.621957226987863,23.78944798779531,66.11730758467071,4.472915730347925,11.23993883600653,1.4927528623885729,5.757787852125027,1.4866338842382874,13.95968157617368,28.36242981527525,20.887534004457788,2.515653414607179,37.07718840774713,6.363349276701058,26.417767740019613,1.0084476620625473,7.29952720539211,8.018208277970182,53.55913729065237,51.157898248980985,14.041885416011212,47.34763608925658,24.574578808359014,41.43340704597737,35.41472609200985,30.241581370241683,81.06955506711417,3.6521090245053536,48.6249264188235,50.31248679774999,4.399101978256937,23.35521458673435,7.77477029251904,43.62471273517728,1.954118165615434,79.22886423018124,74.51041291284419,20.76848177636323,29.60997637640915,17.617760294112884,0.5346222529649793,23.9543055087327,4.603435384685625,2.204278989689655,13.83162287219597,11.181471894675198,26.065976200132482,46.90934377257939,52.003388403333325,12.680845898465975,0.9088550249367184,48.07844954244158,16.35582355072576,29.037511830008597,3.565192031751973,44.65384152340569,43.264929406618705,15.321701608654681,3.4520497002555848,36.44778147977296,10.387953348418918,52.706296528620285,34.56689541174086,1.6270438368805151,30.84953532527931,44.51347057556212,11.49319142624946,44.796774504665194,44.80997633210105,25.75882067324199,6.263272421338972,4.841916762095966,17.616632293993874,69.15436057174892,15.419460447165893,3.9792970971418775,6.081095215812815,13.009835618121734,0.23793440141918154,18.656646992079217,21.660752173033625,0.514191634246175,62.92134226123558,16.733692635988085,10.69176639612952,5.508312153884088,1.9303136922334545,29.702962796327178,35.44826874573359,17.40766790307076,25.267904082385876,39.95145572671006,24.265945124536344,57.1295027866053,84.60517563057304,66.51901529915888,2.4652214642166714,9.905373728008016,3.7918586578131634,11.113830754885882,15.99156000557872,26.633536327043938,26.59519964803222,85.17616999369118,3.7497444130571225,70.09798163555105,8.785244825814953,85.83036233186499,0.9946682894355661,0.5857874962830523,5.254761311882328,24.27694158841459,20.622509115703338,3.6895477453539938,2.277092600484231,19.082433310043015,28.735659368249998,50.568726869639654,27.859105312090918,1.1695319669085933,15.100233524514406,69.03448096686665,6.9782410631267116,6.900831424504105,23.417416719899997,20.53278477914563,13.707581401359025,12.612554660059338,25.967180728453865,28.878865087928787,0.8430687906899905,14.499183120704071,9.19813567778177,13.308738910662285,60.331342120444184,5.13211134065341,32.79966528635032,37.847358043001314,20.149070919192745,9.036536346373722,50.07787146058236,66.17122880047252,44.65035943333867,30.297462848751607,1.778690333985466,1.0882203885902997,22.63747897560728,0.04978252774957781,24.06310139023249,15.139850686816551,38.57322364773067,21.33138759535048,16.165656327391453,6.002239617650895,0.2606993883297264,31.123025393029145,5.694938725254728,49.098059131152894,1.1618638330598783,46.0172272754387,4.889242448340376,29.678459588717132,25.413978664105684,7.480795765855053,8.742981674027916,3.4303166348473635,5.669306084471849,36.6036754253356,19.902012002630475,36.36838747770429,9.749921803109643,29.541781054926574,19.315786443077762,1.519887656522791,2.2714253820234482,35.67529088080605,6.284610191448529,12.417057732570612,56.08648621201097,22.369889218992903,2.690520981904122,28.346787568948102,28.66882578125832,19.035379977339907,6.355842774723797,34.55302179276202,10.634587125529094,8.686784618972737,13.757703431159719,25.908574888909484,21.419538080981333,18.15628803173601,16.25621250376154,5.452110014629497,11.907347120628188,17.25157156350281,12.352074580928793,14.569400660452104,62.679774069701175,6.911843136751589,17.958111265198852,24.395206556557035,26.65386801205589,2.959338185072937,74.5242956176641,27.814764739021335,33.896227544931534,3.5209272002969416,42.70828687612026,18.533461201301193,12.628010392768452,25.389484492841063,3.9466180321494733,73.02630725155193,4.127984737610602,25.26792883469163,13.541492758686395,16.885045366333063,67.5271704585349,13.406108464608991,27.944372783063386,2.8949057372040965,17.23405793087897,43.61402672021456,39.813593002916605,0.5038863315281628,62.33879489518298,16.653490257311233,6.956019431081173,59.020346388932545,17.252556116075635,9.449497618447268,2.869972763293873,4.22692330940562,34.64265468447446,2.195828308909052,62.62251143621283,52.087879615880475,59.8590067251595,62.00974691110328,39.8059728350561,35.689303324539715,10.588199856785149,13.629915290976797,49.526385265121164,0.867686344441637,41.81558834434742,27.694990227647608,17.109428865467486,0.4447169275878182,35.764302247710226,14.05708787342433,21.85840541410017,28.214941085623778,37.88135203499081,28.35997260992189,0.2514404429549848,38.4573394095963,14.48924938967798,2.0823738160595937,5.669365158048425,27.64465370099708,29.177848373988937,10.711674640816142,21.23928796765823,22.930133599933345,7.448662336741222,0.8379507902214969,9.020916837558477,9.026882727030028,75.3290307929388,94.97721462667003,91.23487014634965,68.94260974529168,26.259462608040607,95.46489440301218,1.1227862913507058,7.7938894827168355,37.76583123738122,19.705087768108974,76.75158183376506,6.434990238809082,0.014966139179087179,34.904182062529806,36.548278016562854,34.65396729874497,9.426125875794966,54.01312393895973,31.406619438780915,26.998693457664658,23.86615054691405,20.677279445862762,55.72991350454636,3.2023968305745942,5.829956707925092,21.371264567528343,55.599185182959395,0.9515181660519261,32.79364187404398,34.415236732304955,1.8585669284615243,0.6382029419193813,3.0285456351596807,91.58568521768855,9.624696832616312,87.09570123503092,58.96781273430264,18.117229017900172,26.586875109746885,8.198255463066857,9.70467484154457,4.520956460052972,13.590119023520653,77.03553423734898,78.20048811066503,31.189937351771903,8.211026032683229,5.206725102732236,6.157784905486697,67.44914369294615,0.7313825530519402,7.249834551447208,0.5948125997838449,5.734108177104602,16.060204376521515,41.91063304039564,37.02373154030446,35.55741267480878,3.445647551738187,6.208833030579051,4.7872529723943416,31.141198473808004,3.511415752086833,41.034743188320846,29.638413789776784,2.033285274121738,2.3122551013051122,55.12403885311403,2.8138223176855632,4.194506162803947,23.78519758367846,1.3386933683600475,28.979017020247788,5.903043748211722,4.865803780298377,13.508246734626141,25.980030398892573,37.37802108280365,5.232077651937999,20.401895322239355,2.1564437189577745,18.804548146916126,64.59975295444235,13.978142916361435,26.57545480837223,0.02647624805471116,29.83611560683167,36.637631807558165,0.006870175829945424,10.731838059824796,0.89929563236241,72.23485593920996,26.01664399048323,13.631051046898504,23.252583377227097,1.8748602761306188,13.386646267412402,6.557970570019798,0.5632564286097477,51.75123890191614,7.206362174393021,31.44755604004894,30.772452179976106,3.9379997165541134,27.466005639894263,14.682381609061053,43.91642146904471,3.503135057038321,4.131852504679201,29.11177865518735,6.807704439377062,81.80901491016277,4.224941853546305,2.74031976899779,31.16006393623246,13.7750559437752,51.22812469134354,0.4791568590673023,7.512608700314216,43.965204323145535,6.507041113312506,1.3708282585515636,2.74914966042933,5.194223295826528,29.80666102040376,8.30894750761545,27.601157413405936,12.583327891417795,10.966286138237209,22.668233892652395,8.547234431949,24.155146541725337,8.948982564588693,11.270300304890942,81.01524845640948,32.36417127502923,17.016499796653406,1.6237420390626616,75.11504652339089,20.750230418788952,46.14871976097675,81.47535817396157,27.86488664669792,16.395464299165695,56.70632189941325,1.4081058879408772,3.2102897948729563,28.624719948961342,51.741097193906285,51.88774151404581,4.45356456376127,19.403756891232582,1.1841559858200346,42.31935821014127,52.33240050060869,61.890704820673605,6.2713236659930995,82.45885497913675,25.234919854788252,7.844646781901665,19.257883895563133,0.4341136230625513,13.986593757745368,21.99517296251252,41.17922600174143,21.69843216270786,7.845041703552809,11.95305862584631,21.070859438608167,5.138589674950856,23.83067420243239,5.015200913219675,4.347283504218012,0.04928207355058234,1.7596789769857324,19.921527515546376,6.086359324202618,33.3374996862866,16.040141502384138,5.479808733849723,10.400035415443078,1.7365009232045092,1.6688328315119678,0.8297556242188495,4.004462977806188,18.645605827528065,10.92219709177299,3.2270411040103824,6.576087511629125,49.23729243241346,2.4058303257460487,26.508565450501653,18.748353503061963,29.023098613742683,6.6071587195540715,1.701056701069568,28.477032652814103,60.91050793080047,75.47676210519614,30.547346666856058,29.441635691179393,43.742432409370814,56.857358323938136,9.924381948139647,14.565266687838331,1.0617068257005151,47.991348649085054,14.841462754537105,1.807378504411039,16.81744016921644,43.85579665906344,2.2525469602619195,85.22718056163457,0.1322636869087095,10.10987154418338,40.13523604026131,0.6216016360055647,29.417254909606594,2.5910850792600684,41.903492292332125,44.326751485248494,43.370915530612365,38.929811775575686,12.007540758780477,10.255889787367664,15.61115563188017,0.03333174397616201,0.18904739964182848,2.7872475000496166,47.28751656699532,4.912509825266014,9.03875479191462,23.846643025972845,47.70247175553259,57.56194055345114,20.203431743395228,8.974091615727463,58.371571923143094,37.92222624372561,32.45392944087152,7.914632369023966,47.35554237999996,31.96794875076246,60.9644324711899,2.579007643804465,2.5977287901810198,11.91940034144696,74.35786070142201,16.06365106950271,1.9266497598087398,2.7785403607572405,4.694720277742981,9.388522974880912,71.51459223391848,10.49751516132974,4.593297051585779,9.39127411288134,26.773152801113863,52.66590663262466,57.28994947411087,15.95587655232773,69.5184602994824,19.475140182963365,20.988545047283296,0.2808034242000019,23.28307263954461,0.26729557929488124,23.494298407867674,20.523973945796705,31.734528124662866,9.706634074796575,10.46192624251827,5.864816246805504,37.912498736350585,62.93855870379026,13.263547354690086,5.318468687659427,13.484638645942248,8.677432768263962,4.657239194205502,35.22384209617522,0.11186213074384099,14.805704709692087,2.4061575694752477,57.80178315311576,37.86960563198624,3.8206181120962746,8.20953002532554,45.03721543337133,76.83207497362156,25.26194491109588,4.9204771888348375,13.56027766979243,46.464379681767134,14.87438720120049,0.133947288892867,0.35866358654034514,39.13033432257866,1.3004903631564924,11.447715264323328,41.71914948424207,1.2725767875193643,30.207926841361065,0.34804849303073837,36.44141477332895,9.409498585215415,0.8589603819848648,3.3795904336474223,13.836166563465024,73.22876683986554,19.82069750497849,63.907762299548885,66.8840364159133,14.638022671333339,16.94064941808807,2.5676174841376636,24.14213411416189,20.467889147305108,22.169192057501995,44.44548275759056,0.5468556635104811,88.29746476428153,0.1692183843216677,25.872237645848205,8.487995201633755,19.417335284927887,5.0395569576661305,46.533019313610346,1.707454597845326,36.52717380549817,20.85272628100857,7.303671057612514,4.233225624622683,8.066352344235199,22.373470862410805,3.887187178025542,3.431174622868949,19.90742486950746,0.26006903420981153,0.14039638989389402,5.837646648849559,8.215767814733312,5.634752026905609,25.54130518353162,4.4998132912238304,4.142584702930542,0.7074803852703995,22.933836086973898,39.3828909784793,5.763344556143693,7.356564453230277,44.067078612095024,3.206027914365986,51.58317113784256,23.366379096485602,31.222200017281,54.87630733429821,58.82480086392688,2.766988321986341,25.993560098514646,16.441204698144947,7.938494943622018,18.353051109853315,6.682426739495575,26.382511673739955,2.1539471972498703,27.15106011137889,5.877978371792096,14.217508857708449,11.618612964457164,17.76020976112938,41.330290905340405,18.349410901215037,28.078371122862833,10.103542425193323,21.0445708299012,2.7480474483634865,11.662107053868597,35.327526340538306,1.748827836585086,71.20264058189875,7.529002711326477,24.994909802510684,62.88039404939746,13.411571153157922,7.965980213013545,7.91576229605353,70.03160106458095,37.99727843419985,10.794468266398724,60.22439911115218,24.544147138219373,15.894609072437468,0.07122885696049508,0.6562995109472212,26.04150624542963,16.241318339366906,35.36397293638084,13.662856874957985,4.827781400915465,41.69620391507021,11.67344460079195,57.578285107453674,1.4434546930014847,0.06847682046243975,35.90255928122586,6.54225956710585,27.087766913060417,0.2075615148747092,19.97665413232389,12.265344252745336,54.72561114259141,18.27904697320814,13.252634888647808,11.515329676045628,7.976030214066688,24.772314892816084,65.16304341653799,2.854054510619175,10.241401126737582,3.3580720289836385,3.5440506860869228,3.4341733434840993,3.0318882727479735,28.79840452640734,46.83420210085097,0.03456253703066903,67.94592206067371,35.98751732318449,22.501159656495506,0.3656039861248388,3.9072596079184,22.73952096976044,9.381810913869526,15.021553583559587,27.74876998063619,15.945699884238934,8.367405745708197,49.75848331009157,5.396015677224753,21.814239172488357,7.053332565469073,30.977239935451742,16.3555421524769,4.20407010842584,0.07922358811439656,74.17820833227938,6.360207227687664,33.04379427260678,9.208756013163388,7.7633849172538465,42.53484551933544,87.8265265295183,31.393755341070527,47.91643056649082,50.03274829176016,36.76875477285129,14.070415826474159,26.60456349822262,31.709389074219818,11.640003815874806,0.9086786781229321,1.3044551305957057,8.054269533388759,5.706724417118847,3.8814290191203256,7.668745895911044,0.3157615711255506,70.14606407104526,4.241622165835247,10.848943429969758,22.227362989734893,33.52806533367952,7.471127244804665,24.647278428240014,15.785369330708974,16.828428355045776,65.83706224441984,11.543344478588901,3.96867574056202,29.175962012109025,20.289845219777114,1.0130234443892827,14.419421400334727,26.237924122636503,46.228482736815636,48.03150751488639,11.825449050036497,31.904900169613292,6.721139468689131,6.19988775893793,28.96869560622347,23.531621954933623,75.07526189658932,8.120054629745987,4.734063244959042,41.94639625379819,15.356601993075582,11.11924006792978,2.684404871400794,24.622551215778465,50.73810486156399,19.378006008875005,3.9835628862262062,26.044520735263323,6.732043497106965,0.5920309306508198,23.08330684664719,16.76347021992012,45.162420009800464,2.2009461916292246,0.17603935388118552,8.725331475639642,6.992412653784131,18.621210380359166,11.80747336396638,3.1179404932126342,4.912893655077525,12.858042140601766,4.510907845474421,49.96594226820796,72.90424061993092,55.95617127363991,30.134730812763678,11.63277323007135,1.1022455581703845,14.76651439890199,57.28405292391865,20.46079886337968,12.208129355649177,11.119020005590253,10.385063359665068,3.2605151134476884,3.5617583642383437,8.985607581522551,9.058375613115174,5.7789554372625,62.65326524215221,5.559257720196653,4.760608890366733,7.487866035562382,54.74350555637092,76.496226775295,8.42350721534239,30.554049613396185,5.6345690535034905,4.639429215774085,3.304472850659323,3.5648225787293217,26.610859742050074,33.00161180506018,0.43716336872664563,35.55236900786786,0.24904034315828927,2.734085202519495,8.745767906679959,33.73247997313155,23.64410955680657,13.683684339283332,2.726529092102381,38.86965099203593,33.48952668292459,10.85500916654486,38.61280657075069,3.228447271060425,66.06393505729463,6.56227013896347,11.961750248010594,25.313300397214622,33.85624774107497,33.35345754374038,8.869662509053278,19.604984476007083,7.41237363769255,29.952342812086272,9.07729673264037,35.93358905394651,66.79645618808088,57.017053871246226,6.314975736462273,39.73895179042177,7.87613501730857,5.591078146159347,19.75888303474158,1.054168156879122,37.3966816880046,68.93858129821612,18.3926990115705,20.934578956553327,9.979275701352918,0.2104711309801246,11.667562832609612,32.53625121575807,75.80332623459488,2.511176976078751,0.8535208466062443,42.76083476912668,44.388346997193814,28.661769875152444,0.4206575064632956,10.755865869193627,44.55763897347103,0.2422906735127981,15.154772948382401,14.09901922739165,7.931955395739418,7.2798473573256715,4.0591131214340095,34.0773029201747,3.047607114252159,58.77725823238815,3.64687340391815,82.40923731206902,74.47563283914246,1.7135120107584667,12.449330850524483,87.76359466275059,62.005513074015376,3.4006471236824183,0.12694659108856854,52.308806589194376,4.455885832437531,13.926174865367443,15.180855421651273,21.165696901430984,42.77882452237962,25.053654678535423,23.44444089220181,29.27450676666401,39.690049967963205,18.426910152901,14.140216212902033,17.730583244353255,32.387684047983406,33.04092992580715,14.202917606967713,11.280126911850928,21.949138769120538,2.6922304466989466,14.566142363476642,25.03128004482661,7.749962485037585,7.058494518687047,13.078441144206423,80.64778282803084,17.131771370362912,40.05327442872514,1.8619557555197197,8.596630607249757,29.37029723242216,33.51744054079821,41.68299487352813,8.726055283040296,44.337022164343,22.72410745413339,35.304646543915474,50.24265294978505,16.63635719152785,65.66386005025191,76.38879249245616,90.09786126561518,15.535387844904772,17.25277394523378,27.606372863699463,2.4938375923442724,39.372269077928735,25.69302697385382,30.002315010448022,12.167412577253437,6.336920892977815,35.82913010247183,14.73338098029081,2.3477391313367244,0.672121301880992,6.615884173779374,12.48359891361066,0.247872509080727,28.473544255458506,6.141651890066225,43.266829209535416,0.37727314687615365,22.645026979196693,1.6508166062593048,22.362010244511065,10.471157260559636,35.999878248956676,20.05206309216103,6.703174913885519,30.114103199515764,18.1129097865018,6.96479473781018,19.065377327386624,2.4712458637102355,17.947404299319537,48.16280089442034,24.866095373386045,0.35299186029620255,28.67862527732421,25.891913342008355,16.307261006929295,86.25621659677105,1.4574244610251075,5.04694033230799,2.5079300077999136,3.6487040092316736,25.48198370154744,3.5363771729466578,2.476943776120109,6.84395538923952,6.033242806479979,8.901276328423279,33.70645899172854,11.879369502390873,30.20783049094996,90.71656249301353,2.4482252020411543,1.6168894790870123,28.878455718600648,0.04793255947025443,5.925823398192853,6.617508505559428,2.313457257217685,26.318077853332014,1.5312535726630925,5.233640124898443,3.3056384803171843,84.59742637193415,21.27344428737014,8.73499257459433,0.779509164734594,24.210169719940332,14.32445905839348,19.656749156816666,29.2770584345052,33.373999528241185,5.5693516913758465,5.367043365241009,6.459377432031399,23.738894448432347,12.883075410224388,7.213488488840852,3.152329301056625,1.3202284857431152,38.52500801542739,25.79936276608909,36.385194925955034,19.58786743881683,33.5494171404526,46.55820582650835,22.4712862533297,2.8539099296833257,0.08346845641859169,24.825610974760348,1.18914474161366,8.608784936565428,3.458513227380877,12.40465697782287,6.4878363812951605,47.70720807293428,5.626707620095189,19.768002281419356,4.765074884888998,21.02572026758779,51.890220266769006,8.725083795153122,17.995118559327516,70.90193492117176,30.945655667346863,6.586771457700777,1.6834909418332544,10.826177289333344,4.692788396129764,16.6946377377988,7.265002450645731,8.398345779494488,37.32472786632096,27.80280588249353,3.3969662190225236,86.05338184914802,4.264215354731487,31.048265723446477,5.560906449600303,5.172107831161675,46.299279607829696,49.46452504491386,3.6887269239177805,0.9741907136641692,21.1153335857875,2.545954343600883,0.5687057110957525,48.687724805122,8.696092274600243,19.43837595753739,32.22489864778936,36.185728568284645,0.855393191805021,21.103379633830023,3.4131153044358875,7.3337037437478045,2.377967273327865,69.14450395831948,10.920375309255482,24.471099115089558,1.2996053184650123,0.41760449637643404,39.7320561327423,34.556705722865765,7.731131394124116,23.083748987914333,5.408422937355793,69.55384685698294,41.06989674102425,7.559902393278062,13.529941966399548,1.4756899093914089,24.20982581146367,31.633978344013723,10.438676292254023,5.925650543677763,21.89122241364614,8.600054892239044,5.041113795170347,4.082967535093873,69.54017966546897,17.736452424891503,21.11118442435844,15.75519676459215,17.80491222759446,7.896827405465334,3.4815229965384873,3.904951494685644,32.092319959310025,47.027218661377525,34.03739235080963,0.08256054941823132,61.09393108098542,23.42851302981861,8.393052391014864,0.1064119311597409,18.264056443104053,26.86147896737674,9.746904767597453,13.5004632285819,1.0391022585844465,20.53866270398593,60.36346740630378,1.1883798622230657,1.1085064637590705,2.6915586308783213,31.594515335247642,0.4845874631229652,3.749722941825273,6.659221514518229,9.790037933047234,19.86401104230462,83.69023281964311,82.12846673434177,18.6551541561489,5.968231531301937,11.157498004063825,16.983942511973115,47.20570034479204,7.252421698056949,2.5410001274638327,40.579844098144996,10.257336130122729,31.78555544039201,1.729790440670154,19.9727297936399,22.61721767171342,1.0678492888737132,20.389752178979407,0.017249917825044037,29.438927442942152,9.517908709117384,29.934726033458283,10.053100265191546,3.755335954069894,0.16868830079798158,15.342472093258461,15.994682295788309,15.018142182854248,34.52465552035973,3.326363181004055,6.525465521321072,1.3008038381989904,9.555795082662934,25.478394957008263,8.967937119898883,22.749338157708358,6.907566447719887,3.2161213612305395,81.22976992868877,26.777353274606597,9.343978306132293,14.558795358855825,20.158785607835338,19.58976516867221,54.82748543206124,46.825355226746915,9.724763568669026,6.991098247859938,30.399937190028492,42.297973157687565,10.307027623734022,2.6833789835070867,36.59170520698919,13.939169791430047,10.772286357080684,17.78117171105133,25.62984448135438,40.91422536437433,48.29252082892596,1.6846421894287964,13.281937007010058,16.05811938021369,5.165368267483522,19.863403813490386,9.167574261332689,4.172916554364869,12.446602731085166,14.196541551496253,4.466650766740372,20.528634352453935,6.270111922609686,20.447440382402306,13.92080085622942,1.6503023387472338,29.59275264135991,77.73684965119244,10.65026174058768,11.94771307909599,19.04485074904322,2.013307010911791,20.51792320127236,23.68639168429194,3.3233533916345204,17.60238029009861,2.0780561823752985,8.252493773760905,11.662724930016754,22.27010322561778,30.322242349019056,17.388592679714478,67.75228324868846,13.994615680981468,16.174631129580717,9.746420272310537,2.3616742284077645,2.8540456590147563,47.49203382515209,8.173583482628374,1.4677597595767815,34.83213036185876,17.694245833013092,0.02247723388055789,19.29211405131981,35.469908949187825,8.206655362358717,7.271007760796387,19.906713679970395,22.71222294758287,28.076277690225304,2.4005839005725207,12.264168271872435,1.6997627344362831,0.1580315855181258,52.03637497200388,64.96049078807435,13.94447815737762,91.45651149357089,5.03332399305441,29.680913672951004,12.211834502901915,51.030815306711105,20.63218146040299,0.19534985543440442,2.2688296763345903,21.180072976656916,16.93895211316433,9.093372293874246,36.52837777423158,23.875443665125495,2.3546093674513657,9.853689961668458,31.76945731514673,37.10911180858518,34.95414082718514,4.37415377353005,59.358957793256195,72.87515882824101,11.88186612216916,52.14452188023139,0.014300996203985505,68.89506799525581,30.322667127804294,22.214431082414798,0.9776731636079141,23.872233981219445,15.798679463544275,29.274790967870167,0.3926733966694296,3.1695679430421144,55.89575920655876,15.468469270813017,48.25762407405018,8.57923850471024,20.004109109162783,2.942672896489984,3.2258176680237116,0.9057473064487773,28.871319478647408,0.5695696867656364,11.400834577278708,8.880552248174677,2.3054258439451107,72.7631768873536,46.6319525158408,1.0161329079724428,28.985753546267702,26.69062151665451,88.59136153077117,9.582326391790186,16.885136333065653,7.723938601971014,12.25314878753796,21.55448360504559,19.513749865869002,22.11040659294357,24.036587878161086,56.38688370393964,0.3221442159460408,8.002254955428501,12.058806288215504,0.07292364789063299,10.657211988482295,16.81928178720772,10.075887008972984,11.580087566310759,7.476565745835327,0.029452791872322415,9.605188667573046,14.549204833763984,3.2532441305705984,11.42804808793337,1.329068946753324,62.157801583220795,14.98755049898024,4.763289564579587,4.79127978444277,60.015814753923394,31.585411846360834,7.902393330151591,26.955356411352792,10.945712422834056,13.193729160894874,2.0458571504454675,13.793937751762456,7.77589499080058,42.574966761672115,58.382514066469845,41.24291402667751,24.914626525559157,26.166315635994586,43.36507941152934,46.34554629243441,47.815463067455674,55.23902173295161,40.346823568704124,1.365267273324946,24.147384337482322,31.014753593920204,81.60008839796406,1.4317567215457867,39.119975586891194,54.1887601411164,23.0766713459587,23.46254589177005,68.04669201383047,31.426239991069426,77.9086336954577,11.07517192349764,9.53591166901196,23.322878874591645,11.064019628744315,67.21173602703576,58.668911072266795,10.141141207353577,20.36199844205987,30.06310991961793,21.44767214514357,52.51720426836851,15.986271366442839,29.225769775530047,9.999512972855662,13.097919433769192,25.145733035184882,13.92975690956424,65.5896621436314,15.591123425353715,44.21187288480439,47.28317753324032,30.394666209184834,36.171008239421724,1.5004115176352357,2.6107319179371586,10.5036415989752,1.3516030627474862,10.99498086437302,7.895560379913469,2.726056183288641,4.3870765462521675,1.5088616324669983,46.10256762008045,2.071741956785573,9.455201203690699,1.495261132522515,21.25399572756994,6.203597655098704,11.114259972743845,35.05655746336762,1.73092816014897,0.05921651879689449,12.650149620825202,62.72735084716842,1.6650552807421803,12.31440305961038,6.088409403266311,27.484438513359912,34.033872827476394,5.046293777977983,8.9542166746471,9.817255922201724,14.243813125665103,31.587757322044673,1.0205890484736049,23.764235706103996,25.28242586577882,59.51772825169207,7.530655623189858,69.27955662228034,21.817939098047646,10.025419578238944,12.07410474643995,26.21038827019434,29.964612521249922,2.38980320669895,20.443827822022143,35.50694424578666,10.587200479157897,43.10924223931838,15.779018864760076,41.81031452878544,67.1069110997183,2.7018182617376425,9.89841731462857,0.5646430028082463,14.488756205210855,0.23756865623044376,38.64368117728701,20.911071748250166,61.94774301042882,7.487645987333327,7.665223453285996,55.87616467444325,9.67979865108169,62.69538824416697,13.853232208969061,21.831745784440283,30.03575788862952,43.54627113740888,12.863220926844345,8.93375808663357,23.19443624485431,10.669579802311869,14.960800436966018,9.650297929482765,1.1448737954132504,49.05961855390674,33.762598424842594,13.497823066276865,30.620938847966016,14.032546787706357,9.416701821214112,10.666200907256274,23.210358408619523,6.616897802309719,23.63614950389461,30.960791805213162,94.37943201939193,12.521292725663514,5.550486252446156,59.483366792852046,14.817308190591872,40.71172612138949,30.602158098444153,63.721643735138834,1.6513963918025292,7.576982029888812,26.64395854180033,0.5879233390594436,43.8274844557613,0.8379359325284774,2.3862689148682836,0.35201803331311865,5.604422803243192,65.68456916732849,40.96290944115947,18.45094573217318,46.893980970167014,38.7179658833605,19.34193688592525,17.94570101930516,80.24695012866003,1.9925474927501021,0.5244767969094397,7.213615231986303,6.475109038649151,17.08020994977352,44.80686408433012,4.050722855613209,21.815400405419037,5.4809761477294945,17.038296786568395,19.172678315251,54.18070760436616,15.711078458044753,12.143901063314333,31.375255919130986,1.3957878256504053,4.394088855461391,1.2062652783916032,37.0409943414997,2.5710705592960736,10.775246008437676,78.15270551567535,5.101998152810239,34.258805758691565,9.02842343361229,1.638941991791151,30.901144952957104,57.28085269155404,53.27058342371765,0.5646128865868683,39.17395343428524,3.557471484810847,20.682051946622614,7.955980043187333,2.6554919530824854,22.966617470329766,7.629525096405644,36.06340770351258,1.6186281613326585,4.235856391338416,21.689058250521775,0.38438852169646864,3.0241930081987363,11.484135689581699,26.18730615920785,31.83740340947724,56.348190512175655,34.05789840930041,48.623263107754426,1.6291951281202444,22.25922481254061,2.2723331831726705,4.501333958506692,69.55266444437099,9.875918500856166,1.9162021266128022,43.916280146635344,7.670832872971667,3.598754852916457,0.04689944741516072,5.810384033160576,58.832332657729516,21.415592541718386,11.967420226333248,61.22650202902163,31.376402461443575,12.930366418823311,32.776181036486854,0.047853069218716016,8.873098727869,18.446471736812498,38.88371771063343,59.181311783637966,33.68263176804875,20.035304042454307,62.37638256548386,1.6715767742724221,6.073831031334487,14.525191220738572,0.09486299143350863,36.202500213427605,55.7732756577204,15.60650291211182,36.70840372959465,11.587874578331014,31.103502930410706,1.5591991676557129,34.287071523010425,0.9349714553770436,12.345940940140672,84.7786569555247,7.296485164520401,0.9971982999586904,34.42344555763937,31.579828748927127,11.888039815808412,31.413051478935884,15.88692752594023,0.9705825720839911,31.129087772356584,74.91219181294045,41.29762800054622,0.01009513041717014,23.186528772179603,57.54506344404401,31.811033349876016,53.34702180138915,0.05680393267176953,1.2931309712051142,15.4272180427255,66.55995222429186,0.2062203750749818,52.680908169745045,11.041053805024115,0.7053511817886431,3.7507082441205952,53.92395980825264,84.50516299568642,10.319844111017652,24.80614073978719,4.747503300701085,17.389447450965974,63.03494782768423,21.36120048363199,3.1115116966338285,53.757018646546875,0.6748840623913246,23.436111999518584,6.618481656048729,27.946809501776237,10.984259041770372,19.639502440362435,74.24565968782635,50.12988494748261,22.373438987750927,70.45491414314861,83.22040390630585,34.651200033296824,7.571033056740369,64.36823999637112,28.356403803512908,13.433777104761262,2.8504304141481853,21.477538978298043,52.89562847027677,26.751359080059032,19.633972000068166,20.806365703576922,3.605235412273492,5.69697372176114,12.891575952425905,22.364394211931348,12.459799141162353,24.875932698082604,54.66416521119315,12.206091927618546,26.71023332621604,18.781212246695937,14.009440674072549,24.2014201665757,0.13200126647348043,3.1893539968082085,1.131698681319171,9.90982498659325,26.4486713733571,7.590506052480894,0.8652197461575306,45.343267232294195,2.2578239113501866,58.03213614705328,9.236074323945203,13.015799850496464,28.46697548925699,45.203890097412426,43.508222058404044,9.161019129387391,31.900716333274982,1.3128298531332234,10.868059811337815,17.795445766230422,12.098831265760523,86.37908834816665,15.711694905193706,13.971300900239072,1.3132355538124756,1.0785967670865375,18.82936151893017,10.084612022792541,1.2731697242759559,22.594389420140292,14.42313846217409,15.556426607369225,5.317509493709361,5.122094140467876,0.5079868949867086,58.108173714152066,8.669010919101716,35.53744352365798,37.36749292351569,31.293310491145487,35.82288026127921,0.466086393476953,22.26678325452356,25.97063065314146,15.699478271138062,9.503368269511679,29.96044785152564,33.75329158320432,15.507610439285124,6.8863099276230315,43.06371570300453,20.244637741019776,54.24028186830099,16.148759707187935,38.52714621038087,75.94329037790676,23.660971906403972,72.10850916820398,17.658127205867558,19.319955114574462,15.66818592335757,59.59533846595817,5.204231923682329,23.64391461765357,7.377905678341872,3.099841174410578,21.442736230700298,19.91068672175993,16.241133145964838,12.820550187468505,13.132301179371993,0.36193155596180304,29.09299805082061,21.18640163129861,13.711158298744778,9.218404920194772,12.222450534453344,7.614220064545819,17.841533189857103,6.507547459645863,9.883964735725337,14.172834557329939,22.579872979255917,53.77162860209863,75.43146970711035,3.1543791130399734,3.3031905105027737,0.7857784471686813,17.88886765388601,20.87162971296773,16.8029268337212,2.2217754421103493,1.6653537498207078,18.51471064225424,8.19156966609047,3.228910888849578,35.412928168275585,35.38674886563492,4.709896472903575,58.06858001043811,17.586958937476695,7.113681289930719,20.19837642437605,48.68101758408875,55.60741627131846,36.82697954314571,17.57882380216634,12.074302887751841,0.2135494253734631,1.430124515588349,63.89890980238887,3.523704370449579,14.642215840479778,38.461728971297696,9.539866605444873,29.920862728534882,6.301680811865573,7.42595305437439,2.711849272959288,1.8370025836741162,10.876888138425834,2.0737666525333265,29.235300365814354,14.737009271922542,24.846661054543716,17.394840792568335,1.2385591397623301,4.547226844374421,25.704658308315985,27.335111644382305,11.794665229855006,39.514955685030614,46.338653082388745,25.738701212177915,10.763906836510735,13.989190548317453,82.56298504842324,16.850719875435473,42.496303930569745,74.07434493830962,8.717179425507908,5.457848040097186,15.752987735762913,84.73730502569863,21.539907429482213,41.48462220473266,14.850014536338229,25.479130674963002,51.52714913756097,41.261485618464825,25.61984885673959,4.78187631278054,7.251619737848225,6.621823653713644,26.39059257481441,0.9975867428869245,1.6992032246092919,35.03916945121415,23.76464642662154,61.52660672341829,2.1589786094878844,4.512110202807785,34.522315011678536,2.251171418330794,6.877842183175716,45.79214432926675,5.966767960948394,72.01360424209005,15.120413778339092,0.44823743928164017,58.70442473883294,2.395704966149159,4.399649364564951,1.7652750803281094,25.71499440944749,44.54622739298192,0.27361057138904954,8.030850830984395,38.80510992385822,16.48058192672317,2.683579809875802,37.62346943255538,2.168281031600145,17.93499725606933,22.618102869928148,78.62808970328068,53.34938666853047,13.07805007820129,0.37524259165224727,38.04793731621986,6.312308982409263,53.88266127776345,23.229021311282093,4.269082841068139,14.389215536188274,11.130914630340795,16.30353594235634,0.053727347957666094,79.92761739875114,70.22055554090541,25.235372515176767,4.956352226167084,5.2810010552482245,5.056521736034313,51.66213921944791,74.00026242767284,54.73506377085147,16.892463194142582,9.725569919715419,9.834136135909265,7.15633587042155,17.375346970352936,40.64457304116967,16.972074496149958,3.135816022671836,4.582661229699713,25.371788954117292,28.052518870029942,5.756919333595878,31.530440359108603,1.5596197596435069,24.13115529279254,3.984637976054217,3.8737313006287906,58.41575935671219,7.677257706171991,6.502371607174568,10.468269294235895,7.965681604478366,5.715774054190874,29.657522507892168,16.48790729281683,0.015921721888378926,2.9365023825820984,32.355210859680284,2.1065911042406853,35.31967783737278,24.181356835921974,27.21506271541785,38.41397658951677,0.8877201033200777,24.23677044648702,1.4532229823581924,11.408108374753155,47.18772879047444,4.747655907582127,21.26754229248526,40.49946962314396,15.678843339114312,15.102640246948624,2.4920783484268156,70.37280143319936,8.704707674528922,10.748396708761241,0.2302693747303426,1.3016189324396161,23.240059113433496,27.26292663202834,74.78027929993517,1.8815070446290827,72.16236598328753,10.04492555659734,54.12683852593384,2.039451439332808,45.22249500755418,23.731792425167853,0.4668718677992678,42.198072861951665,9.178563023729225,47.538218845527034,51.88951152461869,48.799844916685366,2.048262903883156,17.880741719386528,2.8717752741054925,11.332500637318802,24.491913847987767,0.5389447122315927,82.32755824155483,20.126903771728777,2.6416144581906877,48.021594058635216,1.07667866123069,0.6505010669694755,49.93813067621578,9.727424301056622,39.23657870316658,40.516862155165775,1.147504185310975,29.922346426659306,9.27936456269412,32.902725088062354,5.316857644898207,27.618836158684203,32.3488216919753,5.200026698020022,1.6446856501439626,6.049154520026889,1.6924941192539293,0.7477784593529968,8.794370836232467,4.549138032471189,23.4062257018358,14.529114879456785,4.607232049937991,34.84823521561994,16.689899841342136,25.71915219068941,11.816609703178038,14.06235095672264,5.935393632131241,22.16552422557736,22.83222720952118,9.018192969689842,40.121586252715694,34.35707487103495,22.087990432720094,2.1442589342403844,17.98616500761299,27.587180563067903,2.3801124153380755,47.767939428456415,2.6489450055529384,12.605087649711633,53.99404635263354,5.505372230755647,2.714880249491582,5.563417512736322,20.845592033712347,2.526690918858307,26.85990048405681,22.436731578855763,10.020185570274288,23.42788582131491,10.672040681598915,12.438060646987324,27.331234510745794,27.657524081001394,44.483299241741584,16.86917593478354,47.806139547576606,9.178853050544545,8.124189750873683,42.3117408005597,1.6361923938481553,29.141210739026015,3.5285211382229065,8.774416036366596,7.96006757982105,0.48951556689047493,0.9372571911831642,14.873082741818322,81.20902247466016,40.62346164171524,46.55021980534102,13.895692648880349,3.9415324863828527,16.308459455844027,2.292897981113896,31.376765295211747,11.646871217041735,9.552487488950753,53.35679434375812,8.5194348078771,7.318929174365286,46.870225857918335,37.58523925418394,55.47265917864376,20.243475983819014,10.13292049874972,7.3763642041006126,6.807866451370348,39.28694085033058,15.317172123255096,86.36842807333602,32.142068570847314,2.5197853991837826,1.4614181659117662,32.81252594678499,2.1005516702164884,56.2377590872592,18.941479520184856,56.73678053808824,72.66344804642482,76.27321422504542,5.428425759295436,17.837706320163626,29.188684103437012,3.1015804783090184,29.41748307150491,19.897528050118616,5.326906888986349,24.8673911216163,15.675322620771936,14.360886265225979,17.08583998849742,18.92464843235485,17.33808316369604,6.588942515404639,5.497340833427076,15.908923483423571,8.37394762076562,35.10885379503913,5.179404007661169,20.313366109306152,49.22583144269424,63.63267291946559,10.139411446232288,25.635810996842455,2.5022054672245293,18.239529023805844,33.25276854973197,15.01945157151221,1.7572856336362297,0.9163203834305271,17.468651328670916,1.474019726522073,1.1092047419409727,71.3404756169535,21.85527166573395,5.561416286901699,19.89052668019786,85.9522538194979,70.00301548896421,2.1067989913808916,5.383297449090897,0.014955847720954374,79.21658894783663,39.543303136857126,0.5553678625304315,2.3423827127062147,0.6386936982704121,61.561037865827394,42.92591625189489,2.7609046640296953,16.84937664066098,32.19060256920105,3.5805875843405612,25.329835027463005,73.80648834778586,19.978414454474972,57.081866687957906,14.388560270748577,5.799042123308018,55.19038817799407,15.34574449369945,36.90467795742914,40.06353390441895,54.72444166072222,28.23503454195928,33.071306847947085,88.72264114969556,41.39711498128932,6.642436798593652,12.207916186202183,2.8729016166781696,27.144983036708247,29.72831006491169,7.3041605604030835,7.82074557217328,34.44456992056008,78.07893153744176,11.95870175910591,26.691721888352227,0.1699680368637102,21.813741155532377,1.0382145909413616,0.6384280878772444,53.20785723332931,6.631758826978093,9.189819633638896,6.114082455020265,22.872607870209045,8.09421136792841,3.4763207235108844,1.2250391309330415,43.274765490119336,12.863510690228408,7.797516689791255,10.319269326680281,32.03324035934245,5.069742795698488,8.48957916434111,0.2653338978244264,49.85817029005266,42.43937222855844,8.80237262330782,1.6976956117970126,7.086762993516636,60.257906840366225,16.420966506144996,5.239192496164428,74.52113486318798,2.652622152875942,39.7048944370433,3.3765566187476708,8.9417970678315,23.433986019960763,73.60714906897947,52.4740985532314,15.71286663263804,39.66031360999842,9.677702833294024,42.60340676769574,10.10468300476343,21.729462847753524,0.5527543919112219,11.090468977577217,4.618027197534275,14.731496071318128,30.01961203603425,17.231808283130047,37.33750998565899,4.245748895494458,66.85980559856783,11.559751024140507,0.425174881227683,15.062013983141377,4.686454637232987,70.35838031916875,47.23322522200395,25.28048106453342,24.23715473101147,18.469738429827913,63.857347711670286,15.587476602254473,9.251514483439294,19.53274193291766,17.154256279103947,24.126441084668073,18.679302784375835,3.8810776374110496,2.553738760505065,3.341963585788271,60.72547885216346,0.318577981319379,6.580213665885907,6.731996202982614,2.160034895301223,9.741562020460147,2.5054940931551677,11.36989405096217,14.04202040710095,15.292726822348923,2.989927835536953,25.6889615491665,34.401906986705626,24.798445520789265,5.179421980883725,1.4700302810524484,24.245751580243546,52.444512625313635,7.794196519077367,14.830729399194198,7.33581213934097,12.85819876603992,1.5957484606748675,25.080906534455522,4.263529459920889,14.329020474280906,42.24485113693266,4.471238634453094,45.10266046417362,21.741006067700898,58.31289579197756,6.6035189869762405,15.680541108293955,20.87418393547074,43.42960047173116,72.83237534108807,66.04776137794643,3.124562023949416,2.0531850047287676,73.9289307702996,58.27518850981186,15.29934848070068,22.83990244378217,25.893050549256287,20.76732868614063,35.17778741231062,14.738927706558368,47.45382553482278,1.1733661469975232,32.9164154663913,44.07694874443577,1.3800495645003998,28.964683450218985,6.927148858313739,11.601197810223862,5.567519223943265,55.025251461990585,38.57652861865723,14.9478896913093,16.918964517774917,42.21314585001949,14.224285245722832,12.261932736666331,25.501245125550774,8.694024294811925,9.335264684610955,37.196074834198335,36.39191999185414,53.10857793254081,11.440212666974531,50.077392062521916,17.49810495641583,26.78150921372139,62.823087879114425,7.945356479634015,5.021394832947749,92.38217616939018,10.977897617704883,8.72373197685338,43.701203921965266,8.258514321056609,5.067266503176249,39.587660763708676,7.439655279473822,8.72718748498707,70.62421951622791,6.5369870599464726,47.79618061193788,1.2224718988190668,40.230763723864385,2.7582086917512183,0.7452554368243725,1.852105272861639,44.690206731370154,5.829858160532664,3.8214086945131287,48.14906301127046,35.91278888464732,58.04091257463866,9.099326896113825,35.24605221311092,2.375062750005308,29.942914840901068,15.954666082064717,1.8832314364105116,16.47632074706,79.20468000355429,74.24646820678177,37.68830088499428,14.256431720105544,24.509538547462384,4.849395521550337,24.430787691295393,20.512886563014803,4.593018268279803,0.7585535690841976,30.755216960089072,12.369022499764299,8.884206702690854,84.18362794106913,12.019947932326808,32.23557016881545,0.3937876029233536,24.725984694827872,2.543956497464727,26.373509216923964,3.2018629351880157,2.7942078272326754,25.97622691090063,17.30471598829482,1.1909645816011079,37.55247818804808,62.461834749395486,64.87806301842369,4.5051573669308524,0.952415187977735,46.78133009092381,8.62848440208014,5.053436142894995,0.576358276233746,5.107237228220669,35.2642588628146,0.25184626396789156,40.86424524574207,0.04948472095339618,1.722970531919497,53.05050072345616,44.999596422077275,27.36851021406507,58.59863153998449,43.435611220484425,19.334595098801998,23.642909615019157,0.18100655282869305,53.59287626086666,60.384213867262616,27.144610931994556,0.10007258191088653,43.58367654708562,14.763314680356842,23.898427772955756,8.76650748735458],"x":[82.61265289174922,55.36391612652155,34.168877475435785,80.96058569576203,16.90389714956958,45.06602075984605,97.03631685613018,37.75730136734181,86.37697310558991,79.11316787562612,52.38950944833935,37.45215235829753,43.61778970965329,37.346489146093475,5.080908499465253,22.259962674612012,57.20953933625501,13.058252435787676,76.75944604205716,62.372052506617884,56.39109482826924,12.033181579930574,82.27185140054111,38.888502404216105,61.33472467220156,69.38329947290082,35.48864194277246,80.02632131374695,99.6462006469038,56.0650454808934,99.62503297986684,78.33751118559127,0.15070685503880688,97.4577554087967,81.3854758497046,4.921727874765169,21.723220754174644,65.78907711175044,89.19108034497265,23.05387012920529,43.14814838365236,94.43121791441578,34.45444190960436,83.09032796534702,86.7226620400304,1.295610306707251,72.2320177311822,67.10455509304786,56.81179946289987,53.031816666887224,54.955410517045664,60.03178089279629,34.586464950983455,97.9921288556509,12.831721746921577,53.67298858337642,85.83691400163373,71.30117913265336,60.3391752826594,12.513871425246181,72.62218434397056,86.71090560362302,0.5700342713079953,7.659614295608175,31.652829402825233,68.48591075428523,41.6666528977453,52.821294657972516,73.4957570242182,13.612664540043317,7.761333696546469,52.75776232542256,41.666560713517576,73.41509507290561,56.021717449256535,94.03505426752812,82.00352610052161,74.67101789099137,75.13108799364596,33.449105638633505,14.350776508286723,72.08608883469502,93.30050534365736,49.77926387969678,84.85988551328094,22.18834841480366,3.242961597153682,92.620662989992,90.72907913419222,44.61987599333194,86.39172036435974,16.392586993297964,29.329188619281332,18.16652817187,73.69377567200932,91.63375367618757,64.55438324985661,3.844866301891625,72.12208345678623,57.432381506574956,75.9174369594716,52.21383591707309,20.84327334440642,70.76082107633991,96.39205781412939,71.05923114461093,58.58598649304626,20.088619884404878,97.55830215461371,17.06160776122324,74.98106254723092,19.624877419227804,4.533395336890223,71.87256090466394,25.17428470596815,80.93790243238202,25.22791621803352,22.03837941404192,10.400375830183627,72.1187309616754,83.95523913838755,42.09380073647881,68.43375096861165,6.771114182766391,28.954768972801958,25.41490487935323,55.38833433734665,43.31163242549761,90.71337377324184,61.235393082020906,92.93072484535833,90.39477737348054,24.990958298076283,56.933745362654506,79.92986770174625,46.834009938225485,79.48735932984687,74.62292677681127,76.6363134568423,88.27116639788551,41.77168962222639,8.31564151867773,70.74443592189124,97.22574076234729,5.870532802178319,12.179173652040753,27.828639078888727,99.5518812725886,83.70478818141197,80.56453425998757,59.13674072397078,0.8511896882771208,90.56151094720504,25.41338615557477,74.8385170995573,14.802154905371001,79.75162010031373,23.390168053308933,62.576818523564214,30.569905740170288,74.4168524316352,92.27356908328007,93.75644025126788,4.596912344850246,85.484863360587,47.84288303572078,58.09966327330923,57.59317799525399,60.420156659762746,69.64295660940067,23.214316333650544,96.0261295042222,78.1642273618004,40.5335073801666,59.10552920094582,93.44377780415807,14.75060769325035,9.847543629734478,40.705758319896624,15.828305388986974,74.87988884631261,9.216045266031003,8.767467747706482,39.86926305831447,67.85896799386714,72.91352136015468,10.716506422871607,99.49590400050589,79.18314959508874,21.088901311548735,11.434432136534955,38.24896153680653,17.953608720998247,32.64689326432898,82.30876205767441,76.74766338152726,68.34234612530075,48.75635171381728,79.69399381033737,17.59737454648117,30.69223370634907,49.0503610846026,25.554485918376933,92.18406690860867,78.97165211330473,96.67952449010895,43.91316097224601,92.43642987429061,61.93566471646251,55.36525884671889,81.18596285561081,9.322942586584148,38.441060641941164,24.22240957552959,18.166333260558154,58.21666454998833,82.6536269660554,93.51099146961982,12.81166299497405,12.302436943065153,63.99909839880122,62.89225523332408,53.803395453456474,34.82744168703701,41.029016225324376,70.0838670261269,19.236453987052794,27.602762353564792,89.76254478582756,84.8569850008134,56.620386668801956,63.55011398024586,27.91773177542104,20.093748047077153,64.34207997364324,71.9852622496633,20.518262622522364,29.17741367191481,56.223138345573695,22.77567352896258,61.41842875527656,1.6811035240169803,48.40523047742978,20.2503499270274,90.07226982318461,78.47379854808305,86.91813199048444,6.218035520767062,55.81603013339831,78.36323398892695,77.13371875647313,20.605319989705873,85.08680343181322,58.07648069102387,29.557282223107762,73.1714428622734,64.32573674266713,3.5608450194687613,55.93017118058481,46.040854130993495,4.650415398818897,75.3447249428801,97.21719334525827,60.123885047373506,59.76311391805482,50.90255002500593,32.410977629670036,7.346471136569077,1.7691015774157437,78.82392234254122,47.96051436913358,56.900497257140415,28.4297524657118,38.09074737942175,72.58747987354342,18.948292753164242,80.24355701789403,10.779580451342374,45.19936633872399,60.34214663134072,74.49991398160378,77.54737207078622,13.579793231272442,73.69944196579522,53.89054762359088,56.650728633777256,96.18250047314184,0.692133544478235,70.92559368687945,0.4616374533229717,47.70005757725805,60.45964566178402,71.1261640597989,40.68677522023854,72.0790640915981,61.33533476650715,18.84391790781297,38.44592792774326,56.322133911754904,67.8753999403745,69.8784855314352,42.69160844564929,98.26582035783986,52.108282181654076,72.33634462687905,9.264633314654224,62.87130568343681,95.60185713988402,23.26418928684625,55.1786724376318,50.35728758126473,21.0259935889474,76.21064908737847,72.57779380473465,36.512332076239154,94.71525520768786,13.71163141745888,59.200273491391165,14.881493206875874,78.20284973476913,57.1650655571157,19.834449817740285,9.92095755930359,81.08292722599201,22.058644636061466,8.991131066983392,23.670563597834615,88.4568281562066,29.747698727974093,62.24638036794489,30.601155841058024,79.87743222064572,20.204722659637,83.30579894867675,90.80833982386837,7.685150917619077,90.14930640240479,23.837133668957467,90.01776733678241,83.28728269449583,38.860847774283194,19.737658252282674,2.4714720573521642,45.16344916556707,64.91112543077698,4.189518462428787,96.35282088140484,9.071870259388525,14.99944968381175,55.048996481524895,83.82664641734391,72.59237687788226,4.1133500184463045,24.99157231815484,11.722922171575567,78.7569014282365,36.168687315208615,91.28547725815153,94.60145219220864,96.2643990779919,80.76873194055008,64.93854935220776,26.933400080690582,44.333333020980724,27.65742659870398,5.351059970495342,40.25073095600711,95.83434827388923,31.575225395390095,10.95529778349771,30.761008535765065,76.3553639120301,55.909750436831175,47.39865571193519,58.69899463700815,17.89963369298151,74.27468912886809,77.37632719472612,48.25363078777717,39.466306684858964,54.99364978872878,54.768765596938316,66.98516424631568,21.39758101766972,94.91412160782262,23.82152648039214,75.65732842887523,4.4895141197568655,55.10402561655855,92.8329803141309,3.843645706949339,65.98904931525159,47.17378151802569,73.09546084941047,66.94823401624366,97.69646468097206,37.87855402752276,48.97918665289329,36.72990099143006,40.4366493749429,57.837562034020195,30.210702068205986,36.91390715565422,5.492241693255173,77.37156127973054,78.03586401140608,42.02497081721387,37.63548858591478,97.6863240186161,91.20653775511089,94.48022315698576,99.11852373842815,34.01516057901471,35.86667689890597,94.11432951797076,41.416424517163854,58.64790482964726,30.306063521924077,1.518351026683995,34.76170629421368,30.18691458959577,58.49474553280335,58.327058919876194,25.391170030415367,82.57681342076108,63.86233432629248,40.57066164353014,39.041048014422465,50.94518234987704,49.23550653882375,84.84611713432089,55.959113091911114,29.794176556738762,43.20798726222479,39.24171879108196,70.76851561935963,70.48371900264061,15.171972169073788,44.75489780494313,85.11503807767474,65.44124761414581,31.394311611940175,93.302034778816,50.8367198145942,97.35159768915175,10.671336331937153,31.910920776069407,39.4016351598218,77.63770024108807,57.666099482240426,82.59382662775204,83.79700460750932,87.32657179989283,67.75904731920063,2.6725496605866206,96.82920519568148,27.688050696691803,59.04808079814704,80.08295877599491,39.10400331620312,68.87077455129568,12.383666313742125,10.368728119073534,3.7264939563154797,48.85192499001795,82.9323719066974,36.68828802078926,2.4306684395301814,12.398961457781832,62.385059654298225,55.222146261267625,82.04128513045028,22.128697685544996,75.44286451814448,13.239889548428874,13.463265927431156,48.337133301988544,11.094737086789074,67.65533481113548,81.0935331327106,47.49308964381969,0.3855706560466299,35.85150535058601,94.50348375748176,85.79035390332747,86.75605931048591,73.1984272896618,8.601210532496605,55.83392900499581,72.1000423405428,82.94934462637983,97.07534690571812,96.74681775165087,43.109660515628775,64.64161671555657,69.26910279129531,57.96264645100586,24.690310626884337,52.57203657011706,74.03979482014545,83.74998341959092,50.64513941878756,41.69401046375716,1.0498496049062833,10.8810352894667,37.045350746576766,97.49562305995295,80.50932557540725,4.696443172762688,32.24892127317405,84.20362789587772,13.221320765663592,25.427291719659916,36.88693999869547,43.98848771828554,91.8403557763831,51.06071397005856,37.41927283266243,73.81578148985601,25.742342826993948,49.718607051016846,78.28226668910119,46.46200221065059,39.56973621687722,8.433078126299042,99.12783340828803,83.79706434552105,23.57394216372888,59.781177185938915,70.90869731744685,0.22283003750934727,44.90639895737656,45.094866257547984,38.872347665332775,9.792982822098494,74.24760064452951,74.17884639011731,89.56596203511207,74.89273475979493,92.09807956836407,63.33647577873599,98.43808767368537,6.563799815845561,32.28821836785558,55.071872283635074,54.19136608481704,74.38033721574908,25.805791615263928,23.08461736706262,36.903278237322766,76.23091083839304,91.27735990015381,61.506274189634034,65.0039428963417,40.74229497578041,92.77151433937235,31.60870291522744,81.19199021708314,77.0440902092748,67.06597635423176,68.52487618243906,72.39207715927138,48.656492433131405,64.38343708907654,15.311433664511975,82.61803803804155,6.634471981011092,11.759126324711866,82.61375719191855,85.43452800761115,64.89819946620513,28.51532178505781,68.1009743187195,16.38061161566552,40.19911399136949,91.89961781385098,35.424630496777255,49.17035166284407,84.24850094823782,20.682095512976197,20.96483333771102,90.59941546581523,75.25254524409773,67.78421539119537,84.57232589782309,5.929518783678311,30.238395003406925,60.60975044816982,45.3384807979711,8.018263526582237,49.36272893799315,69.3030613053148,4.220594520582788,11.78545340936008,8.147272270997497,95.56481820520744,40.231985735655506,42.44939303592371,30.97661754821267,91.0620031509605,96.24795639114056,33.91638304246064,25.16478933656542,37.54694991266477,50.22368777954098,52.786058746997334,86.6408377834165,24.0529452622267,74.97569095438237,19.652310884135293,34.00163901911857,68.13480208507569,32.28839274370572,3.606001633555078,50.988276048316386,32.84511205659874,29.833248734044915,85.14883867925326,97.05089356594759,99.0949577427656,94.83195460989037,75.47616543345475,54.13123299120559,93.5669849903236,32.6988096900521,58.19405820477025,29.30165354128016,63.343850119966625,69.65359347135399,74.05446300529205,69.93158013955956,74.25510125257011,53.6114275215408,24.234725109155352,91.10678938615565,18.994779823200915,40.250736731095614,59.0229848665645,83.31450440680625,15.69845999230245,23.80602836872232,2.7053386720884087,0.23587872631568585,38.87025633212941,90.93978083002312,69.54776853344909,92.00317588508422,15.359908551110447,21.752282477704544,16.074413840215207,74.8368766467365,71.22037433068287,5.95931253593559,33.97839222214557,21.941072770290702,73.89516771873274,97.62454332270154,17.103851403705928,97.35131873433079,74.91828891901605,5.364055439818916,73.47730566154684,12.707800986802253,75.18358087530785,95.4980885933004,78.04722916981322,77.49140164237154,69.8217933626917,14.092822303941531,58.31761641103241,84.98146313167817,18.707165252972192,25.038491818758857,85.58309436093316,66.7771014397886,58.31551477114233,19.36830338297838,96.83350181031292,90.47297001004007,60.454207878091395,15.37088181477192,40.34486783176517,38.201504966048915,97.56011893855451,61.5144788785427,2.2478811978651425,42.38745704743759,72.69697664454935,3.3488975186591885,96.31070618159698,77.61027506988461,21.188619816791043,19.202565511906034,35.00497680231882,11.892297699379528,80.59315515943808,69.55792387386602,69.13521510393159,93.195924245588,5.508810419282173,34.06654663746461,21.864470763794863,35.709546275755436,38.509032836545664,89.59465582132312,82.91896188820989,83.1799098513118,20.364130426294025,70.43813033293661,21.081815380368894,20.249126265269556,20.59781132764368,91.17673452839881,30.597757799995772,26.84930549069504,64.77459869532287,52.93704126203732,32.255105280018334,56.08749020999997,7.812245120006523,59.04125232434598,82.78374602621548,10.08831568966222,44.80654678849984,51.731194584314736,84.45579775101683,79.09181907066818,76.95076783105227,55.574616645695585,79.73084061799477,7.600957719594437,86.17374380924615,20.57213073799229,67.82725058271632,67.73906345513888,64.7498092973246,32.448109021517425,70.6641195785146,73.05164678892638,54.86044621949424,95.25775307777022,38.84118083353283,18.230265740734108,36.59375809432971,76.26222335980454,99.98393684628404,22.621419877907524,15.670838722954771,39.733122237142005,97.60055725445513,75.86077876612096,60.918260368186736,52.19371122434197,83.04173169380219,41.92707181639681,63.38309715355843,27.725807650968804,54.20790796851994,32.96788559985099,75.2114179976496,91.03037401326212,50.1191282953117,65.00956145926875,1.561266989223531,9.864129120364618,93.41577966326625,99.2267808542841,83.01320465146965,92.52365847497074,7.561141365164515,35.759041333148076,63.852590068215875,57.89316715589471,63.48918126519786,1.1662606038446266,8.355395777875785,55.198527154980084,53.83920028240809,54.414321138459655,83.05388471503016,72.07181688878809,81.46277247642728,63.429360024035965,22.150626654285322,3.9561795778223163,24.08873940176396,33.49766282052806,31.98714674499764,96.0924591904462,94.16676522378563,95.6346919068271,67.66425959130771,36.01724096558597,79.29759100208175,63.95169347346762,22.34170824443371,78.69179422440146,20.155241234401267,27.658204802008303,12.540566593895075,71.28937431946028,3.314403519391962,31.054981305112562,38.09765280421426,46.86737517362127,90.24609692191201,85.41376263521559,94.37036095501777,30.716918568158658,44.437084935722815,38.816428070640185,6.99374847652855,69.11494067118315,83.04332239555248,14.70494731032458,46.480279393076884,51.89317219511417,8.804844522058207,59.03675552064307,17.494027707732553,99.15769285671672,74.63870482487268,8.466694174755585,76.34039519822524,57.78402437246941,63.7975688696396,66.39160224099314,60.937028259656124,36.856891575202376,1.3205321672717152,58.385345009664405,38.89780060016959,74.42525497887101,94.37775785374514,26.696549903870537,63.36354513544952,50.38458866707076,13.170414163692945,65.7087298125021,53.410535681062456,39.01717162979107,80.34805546022122,43.99746443596141,16.900297280743715,92.47677023613475,84.39274655808167,11.202942478544497,74.53703127960749,14.346359398477338,89.5237094287012,90.85408170982056,31.888869239449434,74.26089883101012,53.844585962554845,0.694890677498583,96.79611512206343,96.07718261517344,25.62450862232509,73.08452757688343,72.73126927756356,6.350502306428673,74.74662680739264,78.2760688336528,7.141378927133202,44.481449592813114,74.61987190807807,71.88240038617222,21.478027419328814,93.46369857975469,90.78629327028159,73.1191350004631,46.58681249953597,53.602375415716686,95.91503121870845,36.050750970932356,35.02908808703262,70.33050270856356,40.55309711444218,86.32815980292821,51.259620183107,9.230895651715398,31.61701017968107,77.15783795479719,76.28958661211888,51.12894935612744,65.53260047302199,45.45928455742697,11.653867099468318,75.18005178606974,92.89983305354423,80.8890943411273,72.53499533833244,53.75220117068651,15.966706069537128,91.27217523487782,72.9764498217857,49.82796231942564,49.20953269031491,7.530842348191991,55.60576224793882,18.54335364020583,35.72285661457314,15.850602022669126,59.673608067958675,64.63784422588338,70.12814450384207,10.42865566207758,21.785601317781712,26.509630074921464,85.71787483274562,56.095357778318046,72.7372335397205,80.28746773288897,89.18605958567537,5.89212200547945,87.22176100768597,11.383452097841118,50.11034375968861,29.175621927715312,0.3686726313467448,41.47229870214456,84.12121124599128,18.493861820514322,38.2986079451087,23.282069243360404,51.79729705159218,25.060408348787377,66.81050447346045,48.409468317612614,80.09491985659093,81.41983888195496,33.386988517512194,5.305119770381584,3.3219010684679473,1.0973762550387178,93.96656991656616,66.85926522621595,57.24251126621965,2.74783072470014,50.89223062611411,52.35889566732818,67.26361480433333,38.97457825679753,35.50793439107844,32.348411449134574,37.73801480335979,69.86963914839147,50.54530655826534,82.1742758909096,53.79870796746161,1.7587694079396976,59.26637789766554,72.62858292993948,82.83425130883971,69.18500041800694,59.16194779015017,1.2573612544736101,76.08772520681418,34.36378636397646,33.68838253337785,71.15279343301285,43.66710191143084,77.69533115424846,84.93573528448479,65.04263545815766,28.20900589330535,13.697983835305294,67.20796698037252,93.953795778539,72.45194248886857,75.93666965537145,47.227080398359256,7.198212999181619,46.5535777423573,56.75252447387582,25.22592192637688,98.78264896756373,51.330124276953136,0.045098306398183574,55.498943768339274,76.01783545587462,83.4176190914496,60.329171514285754,21.13054360921537,56.4628688372686,40.078245500339996,54.8713637204008,92.99422800650844,59.8806825410196,92.78227816757254,86.8239167758578,60.81684768522565,77.58099936942126,81.36535499700746,1.7899567157437124,14.550504663670116,51.501490666230175,41.02005879195798,35.25043979494704,11.699983393504155,92.33576265059253,85.400084850713,44.10176740695854,79.44132048425996,21.59561664747113,82.40142666531695,60.73849650709601,98.42054275804183,16.552538829248363,73.54174432972759,30.28804050745384,28.515462981312478,22.18324950326641,16.7922863232817,33.18317942595842,83.4102947815657,93.42590380793635,41.81667644844562,79.10572273862887,53.03879372368409,65.3595303561,2.6691418437363,56.70974240094687,94.9974645949368,93.8692769653407,54.05613154933124,85.94723684055948,90.58183296722505,38.75416973343474,11.221726384267006,59.39203950402781,3.0430068659264786,55.82916266478689,32.26951799355744,84.0427952811145,34.32902844229315,7.03362119615184,59.73225608499797,92.69009372065844,90.01105934616993,3.87063908714379,33.22232437283724,41.7727429834496,85.20464847612246,59.093787170372536,28.691172062074898,31.36069686695786,76.76478211791789,78.80810439975117,4.6054198372945665,43.6415697696264,25.707605144372593,27.360802124802742,88.72223537949239,48.46095505900466,41.195577388813874,3.6136390486219305,70.06885504160022,50.39260753124613,24.998023826586824,32.74276188250309,61.66865889827682,25.64521465959825,32.80803604276215,47.39396978892657,40.09403003565421,31.3863149751486,98.20545848624525,80.63084281035326,24.44442481754362,72.920893444476,75.76240877624753,39.21920609111641,59.48121685097271,72.73748430112073,79.98161571718279,28.422060948263216,18.80277723138184,0.5938445250889046,17.553670537525868,62.432799737419096,65.53641874069189,0.27522846303984494,7.047330295920928,18.085378447854485,2.995409350281797,74.0636727831964,90.80061428257147,48.831210548512125,92.99642093963683,45.44404652212617,1.1667139318091158,58.733579576556075,21.00042462807855,62.932100933613924,38.31435793582558,18.845455819833067,26.816543295732632,90.82306282347876,33.5377236190834,51.104623955942984,24.035236820598772,2.376070340850722,29.933869959969694,2.4352156171766004,44.61148147945207,8.685972574555334,96.59503267827458,55.12488940406525,60.30251180962408,46.14307387088253,40.83467662707553,3.03309028440496,56.899207955109,88.87111203386455,3.4093973928271515,19.16242922078282,66.01961791450024,62.562237892715245,16.003804553157686,47.68041104493038,64.52975018805611,46.8741764459035,47.95988479112684,91.6228353700106,79.18776993303683,77.61923034053122,16.870355837072037,19.893152234456167,3.988548610419951,51.4654423973416,89.98473461137492,91.02824381185528,18.642661913202772,55.45636432137885,29.74262917143774,50.73263465058845,38.59446483854639,60.14990400173067,72.698863165793,54.15402733494062,78.88078974720239,78.42830191995887,30.98281071264767,97.9374662657751,49.32504964464412,40.71126559871411,73.7670631884273,87.85026609883585,94.13812526200832,60.989023745977676,19.07672434440354,27.620179017485903,73.04904583667863,50.441278233969065,74.61287652408322,83.23320951631527,47.24741712424534,59.04860383997369,27.637990544277123,45.83167430699602,68.58684762337786,6.460236634401961,25.708898391233447,31.987446491626326,25.739121551007006,93.07236336476802,91.60233828506273,79.5145076952565,23.908020971630616,92.2907534022741,95.36201589617863,54.30525571099739,17.965325919146714,14.546284127031672,53.658624283546374,64.2828861683755,67.9651697064179,74.43694630402744,31.793791668256244,95.03547068371326,54.479339984409904,64.568510474527,46.55778899710891,12.469720880044811,62.35888560197582,89.31959157920039,53.41094812596611,13.852607293484132,52.364460834553704,30.940651046879765,34.043787210629496,80.7204770581621,85.82093189194153,15.440867670084323,69.39971799924277,8.242097273095672,90.12005231157553,94.03424786074291,78.22292289333606,9.87643509081334,51.80533686064754,4.31033704850925,97.71814355800517,63.86682414268634,98.57696080209458,56.42205708643863,27.208765326400197,52.58643574429146,30.875335941845485,92.63358342182796,40.890132916693226,11.342256063358679,14.032699343334965,46.075046653734034,97.03706485082178,70.7331669830827,59.92158379779971,85.72286642613554,90.06020194353526,7.7318785909548104,64.25656065692552,95.31026011884127,26.545562124249,27.221682245767887,65.0917369805748,34.04897729496119,11.031147559622834,8.270548065890093,0.5412239502247007,21.571803015603052,71.40307459502453,71.3229557982565,63.79843448443106,58.46313519048471,88.29795489045213,98.82047734265231,44.739661998323335,73.9785657328637,71.907751656865,75.18779166176894,67.02666475754951,35.455229170250135,37.488044286707,80.97431077160444,11.821999127919314,98.25933382988,36.67466738352725,73.52485457181986,85.91997760250631,7.874287047224238,69.34555881733348,57.5594047921456,97.58730572207175,37.81077326503567,16.391423352611568,85.38237159428441,9.851720053471979,50.169756786713,79.56241817385639,98.82403097225773,47.35322560021531,91.33016062988156,63.41657014074763,4.3308099992458216,3.1476000269681115,91.48165300554729,59.96391609052867,40.93852792213094,50.34981558410784,62.13193063574819,46.98745036064073,31.989932400490506,46.681226320174964,24.582621998109076,65.19065933474818,57.956701294628985,20.037074173334034,96.07281131776888,3.047081917029437,55.70352304519335,53.70422127650921,31.17236808095948,21.118263044149277,87.88108039810568,34.26170458243655,86.90063349168524,48.4345156624556,16.801063020916917,3.2750135662668156,90.95516686081837,55.137665396214764,54.09157619626185,56.18916785141995,80.32210024939424,90.72370811138101,21.480095548019506,57.126872487187605,88.4522136753288,74.97309886991471,63.605200715334945,75.74487176290465,11.73990010883481,51.09544843779288,23.772095306603227,60.062133223945956,62.544717456180365,71.01033883344856,71.58303637247643,34.77874389541613,52.150735117220684,58.45855694735044,78.16499824633921,77.79341968133032,49.57467784530279,18.650978117676498,56.37081704695945,57.210280094792495,5.377858320290885,27.919306447978332,62.16846959396385,57.74446222585227,56.12899044180564,43.88471222283298,56.095198388208026,68.25458896862212,70.26746506469308,83.44494192924606,70.52320880108313,96.80719874316411,75.2904682608883,37.49123824643653,51.51869059105829,58.67457093752218,75.96394712658832,6.9958265721977275,82.72099147473718,39.59546117468902,56.02649792022274,72.5559057635699,1.6425913688802085,29.93413024253211,38.53019172652827,21.70402859529218,63.58994662866196,28.391814747471745,55.9324808756616,41.341227932867454,31.765556049964893,11.713280005706494,62.75217155203497,98.50355867249753,65.1859294025927,36.29296978413554,27.041470912341993,48.172547252819506,74.41910594110917,5.6367218434140165,63.312871290065864,58.61655088581625,84.8417406340537,2.7143530108363123,0.6083878396986431,52.25812899294353,39.32750230729029,83.66964263231324,55.896076448510314,97.06628581623158,1.0261313432844532,28.28805546745201,93.19339465874393,68.21650855885387,60.488141196511656,24.155554097388567,70.96309114831686,29.65417801405553,31.68003889183285,46.503124348916394,99.42343090945538,15.279553434197247,0.367672353528703,53.18890940150115,8.049148443739574,77.95337878849669,52.20624311075418,62.157817497122224,94.91283913219239,79.67951225419891,16.129463591443994,28.889151389184754,38.07678993092204,25.869887159820625,57.412680187349906,63.84552874360034,15.47443669888462,42.726961970457886,79.13062672892109,35.110924496809794,81.09794520029094,47.040246926611886,25.40222697231713,15.583227633110264,96.92944702203673,98.87292150052933,94.78867171646044,91.1521797803237,78.10511457581673,77.5621300088969,61.23835546284513,46.00646231922407,16.364046806770148,60.41715778795309,19.400059740011734,45.629832640375,17.812414335032233,19.98731024092527,5.2467471720606955,96.56146971767232,93.01582175852718,99.31051661935167,28.715445435361787,23.57544928826839,46.274166225171186,50.75747371527051,39.69693519309262,64.50724628699814,14.013004554900554,74.0402334494072,5.350568446504389,46.48441934093185,58.58767072005929,81.53001868942438,28.3449141714581,1.4454758513285815,47.80251251856596,4.979747411918223,96.09266121422215,16.903481834651547,2.810701267252147,9.077847082535051,45.83183883941879,47.01292547105073,56.082347107687944,16.440767583123527,52.51542362980041,48.8534188837729,99.64638201382807,73.91350496731626,57.57506194154593,81.69808115054757,7.853577731552797,28.819206302102028,89.72853982874457,74.15239754757876,79.88257263609883,66.78820187488265,47.46395240645277,39.041122885340506,76.61238124635125,43.29820680852256,1.6366567673619659,63.20745503185328,45.92190476078122,74.56120595375,48.60786522711042,80.38264397402894,78.03841941300853,59.78513928983426,20.48541080215034,73.52476591491043,38.14932477294116,62.69237672319551,50.31973585670579,81.64347159783286,11.363500398771542,93.91880097050392,34.77237632874169,3.5121095476582154,88.05385868332326,96.8302588234957,77.50285317210779,1.9986086900830702,27.487301438197463,37.448107612497594,77.90923994571004,64.22771398678472,14.36408535481033,87.30749802512841,39.238177020579734,22.632043471496555,93.32508453300072,87.75822566557761,58.33288810201994,62.287664115482436,22.54059389582681,77.34205814402215,45.16840929783682,67.06975058309777,79.08658565421388,71.52152873155137,6.689647638958873,32.44986230624735,31.454682684619517,13.190207355591221,53.93654344566282,39.84416754343467,12.337848469554736,65.16088931796028,44.38559206084592,51.9191279292454,70.19315618769544,45.542654941075824,76.03663178707956,7.444172224093193,87.68564696423874,84.07309188618088,49.8476396179387,73.33684447855467,50.259827120866596,97.24231021445155,87.00087509185164,78.83808074307477,45.16081212881079,70.67997824073828,60.5607678839977,10.105764560256269,3.28500587231092,65.79596817986321,6.664969713616964,84.53452011931728,72.747080526979,6.703573470511504,26.419465741110614,8.973953691044423,17.06371303427684,8.179325751641798,11.486181747214818,57.74081139086824,70.63425537020564,72.69874272932007,89.53064668855623,28.512286402063523,6.215897355995292,9.511005136866334,17.747755963911516,83.67672908611564,33.07483945984572,54.01466680757848,22.93641029679495,57.38067853264357,11.007597825707682,37.383460923011924,86.35503626002331,8.911811809207926,49.899632071744826,8.206003649520587,99.82335843462738,24.72686531699836,32.958385818848946,21.33955152312048,88.74928249662936,72.28301997109102,47.62928225121491,65.95028660776357,79.07705487210654,96.80726506526473,48.677964236080676,88.48894237673082,8.009645910273033,10.230191493529617,10.188746249620683,49.71322411196557,41.5160741446979,38.225747700747256,83.94443037027429,58.42113297510482,0.12804003444486511,54.34144909778966,67.92716567799977,73.30950052973016,63.868605197474935,24.888991390264493,0.9569765098235816,5.5611916067983325,83.2810102542182,58.12040318709861,68.43304118679457,81.4691655573744,70.9235032377363,94.878311978784,98.51779434828495,11.62612223325279,79.509973030095,76.14691187011258,52.286942172985896,24.565055854532613,40.30850138220256,1.6627050508075114,71.13576571550108,99.43680163816533,4.4034135834537524,83.16717628025965,23.13442107019299,26.505649417898304,10.35098006399603,46.40961847928473,89.51835842119672,67.36698285674892,27.560566097980434,30.49562872048901,69.42652324165466,60.69865393356888,29.981239459163845,82.57029460158736,55.556851674022354,40.57351514569649,9.90282412539576,97.01969542653741,6.9088397587965815,56.77667432025111,93.97171223464771,61.97716323322261,32.96264398194163,99.3877020998188,86.1830765847826,42.80986884524061,94.33959958808676,48.76409257592399,82.36737271505228,56.65631403722693,77.21585645448575,84.13426161104863,30.758125723771723,25.496845807525283,26.00994496566894,89.90130079862648,7.53471875354752,95.01956159757857,25.17364554807805,94.6759947995418,79.5457343571099,30.926296463281577,76.91522032831297,36.65755044863538,4.32009306636818,28.145190009954558,86.96652200074607,2.0230819830705737,13.289434549893354,40.22547424440833,85.97214092495501,19.018425226366865,40.183750180526445,47.73807319495022,0.018514033621042092,40.65769181262873,68.51214546589783,30.581409518951375,35.308016958174846,64.80094179287673,22.879456993714964,62.27602139068031,53.41566497237387,13.652272675001909,7.142632159781714,88.43608368955252,75.62264683034098,4.916746759419488,32.524792580449514,5.201569100439329,40.4152427983136,24.273757310017817,71.64265363777864,62.506333915723886,70.02112341730722,96.7646436769886,11.711057508760025,17.80419996317617,5.800121174627282,80.76878442157965,57.93850282145764,82.97999974943012,6.470224479182685,6.1449574937711855,46.6683523934426,81.34908247146359,45.239286821227296,62.507455258930214,30.441585675140626,6.547314243258073,65.37112255860767,17.958412062014993,25.770369714415008,60.05896329023758,44.80744589629282,33.570121622859226,87.05550079789474,20.795796540823417,60.653152024415824,60.43723497691922,79.27520365628342,74.55926476079708,86.77600995453822,75.87675832748405,10.798981017788378,27.42133859154211,60.91177813098475,12.46918360361291,82.49599520408086,82.61575569442047,5.5162392827236335,51.00245697382469,63.41690134746095,66.68424528619357,51.33494220208142,61.94158145095713,20.980001805136574,49.55938266669222,16.688756091280467,81.79030541280035,28.632461609314863,66.7367431439589,75.58450851174099,26.37681516647329,86.76789024560892,8.413519042696205,37.15559316614115,18.762106811034286,35.89952495223228,63.61332932678935,96.00500376321246,86.15862754719647,74.85755715453138,66.12195486903401,39.243930504430594,61.43286998890366,89.30803675801005,22.010669096444634,93.13450250076791,75.320827288,45.84523198786298,52.508656680355735,17.14632350498676,80.3640359656745,53.67855408317477,53.116356853160895,76.6573488608113,54.988387765619095,32.726760193218176,24.219331375433516,45.524908249419006,78.65376267329182,30.991798357850275,50.20171992898329,0.5132619348093281,68.76852475102791,61.89759305987044,93.5599853799506,75.21836377030341,39.100785464216905,93.78563050007665,81.72627807476805,70.10466917879643,45.17243811605825,11.210132580136278,32.80509822291398,5.401007617824383,76.87384436309543,1.6832794102454196,5.9948014811516455,52.48013931615591,66.34037158642941,89.41096876623641,4.703438976035645,5.958055237441973,2.6333912337623167,59.82862922483309,81.3876383403696,46.70055698442977,34.190797566694044,44.433547619683736,11.118391274272065,41.03472918863247,69.35189267035699,11.935068728002818,5.112728273761425,50.58608679586018,46.543285962968085,12.27639791479177,49.65389604310909,58.0685011308168,48.76115498495987,36.78557068325159,54.09442363233033,76.81742577847407,94.35640053566723,44.61591183313346,44.349083364205086,68.27959007030393,81.967692739623,46.093865011250756,51.568613475605,49.40893947066425,43.136169008777415,69.848630530879,1.9054206231933213,14.603993158985606,11.52482075745337,27.053936630900843,63.7204324642736,69.33528212114302,20.73279696323116,35.40529018435539,9.957847242102913,10.53694892242797,24.83486340675857,39.735006278106255,97.93022256558113,62.89807163335354,60.032332140212056,51.69005756947927,22.382337004376097,70.69916991144933,26.26902664205557,21.02608219274904,6.307920056981409,5.425879443782611,0.7008389193118303,95.16973070607612,59.986398864671465,18.33522096247665,80.41076640861104,78.16422463912764,45.89876762579957,4.33739934886791,44.637401507877314,6.73078120512578,7.1741835745183336,41.884732818281314,28.25622595243209,89.72639338988233,68.55183676014902,72.51477055414848,67.95410154057437,72.3181431725483,19.441926745909445,81.23424149291176,49.94117673236623,22.04575985857723,12.18238272030595,23.750469548677255,61.83550091942032,3.8153688494947047,44.87347641549129,39.88753581713239,71.83522713619365,8.436400195051641,25.73545573023891,94.86570244244386,24.397485450434697,9.539501245635506,11.694557556835438,35.36320034225858,64.21041780158093,3.1675463308587726,28.871314093057343,82.16871442590727,97.35925324000227,22.59511800869992,45.95424614438196,47.59894614777207,72.5755674510684,39.59157978143957,6.254941085025189,19.335885814661225,90.2120436499456,78.11144440703488,24.55310275556023,2.249542981753605,8.134418144387768,61.857525699646864,86.11689088016823,11.180221043633388,13.552367938132093,83.55323639523998,43.075350984587836,58.616450364177894,47.3247693343755,45.6978488140852,13.945816116779387,0.33783683998265257,6.813229413621579,8.109952882046246,47.169147663731536,16.194208316255043,50.0409356707572,26.753398088934976,69.25376357588006,19.36282878472033,6.2518083407897995,79.79802484573538,15.424211969077618,44.03420026538283,11.527913918756305,61.83529401445577,35.03944344670909,5.386971061634005,30.000494497748676,80.21595780658821,4.78709364234976,88.35503012739045,34.2140017857835,49.007868752931195,52.287521127174095,3.6804812870412595,81.71411064515428,3.7857043103648347,5.035835277288491,30.357993106238556,48.021164661660976,41.41668874649871,63.33865186549479,73.52677512692148,56.89510486050877,31.804763118027747,58.8804060338913,26.17586501212703,45.238592188142675,64.41715690428754,55.74038625410562,5.98421825250438,52.81082120308985,83.1960334076983,0.007783603149424945,45.29255406803942,40.054260359216165,18.345444854259483,97.71160710804368,41.159303625701035,65.01720211381516,6.637393896758114,42.95322357871761,13.08233190820085,44.88227658258932,24.87863268268259,71.65122799961834,22.69733357344762,10.349155843702695,83.13325240163017,80.076431185011,92.74379649837124,31.55478089611431,67.12588933951173,25.47623021452654,51.01676784362507,17.577086757717442,22.038086117775713,36.45216825955681,60.69164533600351,47.67059900007084,44.98876757119481,98.26901122812481,46.25179704885056,20.72578559855105,96.10939780618625,62.89830873942983,85.74834499898931,94.44791377763225,36.35090563483426,26.567189132920255,46.07191466100833,14.88869095426959,53.82453639933801,93.78276417321341,91.44091655816398,94.79033310748089,88.64221389653778,85.61997132575155,47.912579457907476,27.069551403499258,31.609061831391237,0.5403027952254003,20.89345383692589,34.0072340209124,19.85264354659526,1.6637465837478715,31.03711568828489,35.28857859634218,63.377691303748286,24.410507943134007,52.32409798515143,92.89031494792522,33.03631132701573,10.307364124682227,92.41080989342889,27.729320893982468,79.41061118880661,75.06181404378248,74.58970886977208,6.547094645007401,33.70019340850497,23.72628386795125,72.51041008108615,21.019415847978696,62.052578988900855,89.0598742828866,71.83889793315518,88.52416980841298,50.37742660137346,31.501989320877477,17.90529681932854,17.059154143204925,6.056315839904148,17.69846232133715,99.60084938813269,43.983615045338944,22.517976495634805,10.461962304014483,18.939980306689165,28.134331711654593,50.13277362558721,77.23033544594486,65.42231104361427,93.37509062008054,47.90974806982858,31.059767897846523,41.7271350765733,5.920280653943499,64.73810241910995,30.441857976900955,78.34114319378807,32.68440436636123,58.08413910787205,67.09665871931642,31.94624924246193,24.996877577941966,57.85251335287032,17.555441225634805,30.63568714551539,52.87180252060052,89.61607614830837,56.35805027377907,78.87089381439326,78.57703483162769,23.226266288697595,82.89929531380477,99.48407717915633,53.60456497111876,67.01248317634169,13.970915069616275,19.98963550077034,9.511051369140533,46.312765464063524,29.989645963377676,1.1370083256455166,93.68837700428254,16.035350427154714,62.835399171788644,62.601700356544065,39.85633226643534,38.772028442840664,95.4950868258488,13.663832263338172,92.53474254696683,12.865032283460309,54.84681406346046,90.55280801732312,12.070081760729835,84.4868461076293,35.36970778699179,74.58006045014753,99.10870593908746,11.878973467236854,2.590503289688395,17.703873024312745,64.19525734164765,24.858328381263583,99.81943918200264,51.85720394248573,88.73903669108554,1.7231362854253418,93.93219294006273,12.348145354282769,79.6421909918832,27.865160114183308,11.869210319422073,28.784263165469127,29.53056173933377,47.06321661747705,54.556068088605855,46.01224965407697,41.765259844333926,2.187958701357462,93.42780210597716,6.251245930768812,30.33430646587636,39.08462468636588,39.02816539275863,8.688466359349334,95.96495656715732,33.28063944757326,89.43705132935567,8.032824359330416,53.87661265758374,59.90680803995714,94.91582869674144,7.214404236238014,88.63920669243923,94.48213941501876,40.2512595822198,47.24416682840634,44.05843563589724,62.10720065761787,57.95920240941156,90.88929947588782,20.102562212406415,44.765265656815544,28.16561286680853,87.46161024631586,43.43703818704105,59.99957627074119,17.045907283230687,56.11137492338018,48.702407265276214,94.14597677513427,84.10411978560175,33.215280970858494,82.40182182071021,35.64877072004723,85.98232774986566,13.590186341357457,26.845741851579973,15.148080012677722,68.48112572620718,28.753100184117464,20.311477655293142,5.71425937324136,67.961296473332,55.568921195995514,48.8820717527338,89.39811255069203,67.2483687846268,89.66713642925394,36.6764439010718,15.857918542371884,55.61394813897379,23.11930684315877,77.93686671747689,24.766221914796237,29.674938518652183,79.6015287759007,38.959338524846174,63.47923446230978,91.76481961216739,60.704837104179596,46.368573634036416,43.1162170935062,16.061701383259475,25.92504334005701,30.323419404839246,36.43650204268558,63.82816918726887,51.558666351242124,64.20267801227637,22.684121665212576,31.6051872051869,87.53217691549983,40.52501086751364,15.037810401974061,35.217069938948164,63.75770427171228,26.701981075341273,23.050396421237295,31.98080278670441,5.413414960390606,46.944020849401156,7.193622079158479,61.562751266707636,27.804841546735105,19.472601322354876,98.45879303840391,25.260958306316926,47.35196517544738,49.64651680257418,92.74166981208462,81.3276295593405,7.3600390225006525,17.535288445670115,80.21574593258958,11.565713940620604,44.364048787901176,51.680078580978936,1.7695985743491738,95.82538646273562,10.750475456753417,5.497497005030549,83.1015747156317,68.970331777957,12.33333703559233,97.67225992222579,31.844849177008317,30.697450490534084,67.92039051372568,41.56684270455485,79.24482655765507,52.4834173821478,87.40859200348817,64.39027192700708,65.77461014127684,32.43776586325765,34.94992323309126,25.525060887585283,12.263058273270245,99.25168762902187,7.866187672166458,44.15388366731682,3.5630060617635295,24.878854300791765,31.16125174173259,30.976412733374026,66.84696141673861,58.845252189217156,4.609150956698437,18.602121693898365,47.06725910863734,81.478702017657,25.960051055848833,13.773751110061571,16.315755913334552,62.222130534640144,64.13683310286852,91.10200762113494,34.802058111503676,56.141577349180814,60.6348052475566,34.469906959714045,30.30425057273104,65.58661789190663,96.33296375075746,31.301104481850118,88.8659273274452,88.67733362972527,58.17814127735046,86.59926522614391,65.40181225368362,96.13973247952616,70.25601161242882,96.17204945244455,39.147979563761126,28.050821516383174,32.67015294203113,85.17389758324838,24.80182738773282,52.19023357739266,49.71494525433891,44.06337513954449,93.00468989179925,87.50529794200986,65.04915327366004,30.64678719938332,69.09070026026623,54.75991712638542,51.32507579683252,84.75581316570336,30.361037885319973,99.19286437455524,51.33519614023603,96.74402283229114,8.57278531672494,39.09803879729695,11.562264962422908,49.444668332006515,14.188147319975608,10.872623745419075,3.8024913840219443,89.85135079571427,67.97678969219494,63.03889279806061,91.83040369869924,45.4746725534733,23.903708814284464,93.08672711937419,78.81966631252361,81.28330493838799,92.8558712733504,64.90126725825272,70.8572178732265,23.00465518181175,93.21197374597531,97.67728326735254,9.059415234742618,76.49935728252333,79.20511835472824,19.01150732353123,24.749268197659358,94.61642844714146,63.26143434762977,84.5830734018336,10.889357868962469,37.90343824259676,63.8643197377075,18.607769454043165,97.20233353217893,45.009697868675445,64.21255491325884,85.11897451590237,73.38690837169283,18.464798964206842,22.878932941696462,44.9270187695625,79.89572190209803,61.48158183122503,27.794829254526665,46.18632951590561,59.262719268087785,43.09068793057832,7.229320190063104,86.7041509005083,52.261460054023146,2.2822638875107937,26.5439747390115,97.51823652888535,86.57728574860658,26.383790050246326,37.821357058016325,23.68827413233081,52.14538627014002,8.863642955644302,4.440213368413415,44.133730424753736,21.54221399085494,26.29403051830419,67.5450450114424,44.03594917398287,35.00683329466501,58.882620172430535,45.45704140326714,3.6902562475795597,76.32065126493619,67.99826378249219,65.11739320587449,41.171724715936996,91.03331510335829,38.22693974774069,95.27182849182667,3.7084606634602335,78.74924906622097,25.563255363088956,45.07439756079751,82.52096360605658,21.129783451986516,98.75015388696798,39.902582656878764,10.989909345366733,76.49121190028637,67.82579881412114,24.669663503119278,18.472744716155354,16.140309416169963,79.95001587092807,7.242927525121834,53.36752015687999,10.44975390829742,53.95617673380313,64.67873999886862,70.10563844320079,91.09152876407126,24.48482028082648,39.181312215789646,37.30379502836595,42.687014728647284,64.71788669528593,95.11896546816581,8.145684958529442,59.61236910690913,40.437588730754236,86.37222608869286,52.934243029898774,79.98208030389674,39.25683168730253,66.10445936481267,31.6257258311757,15.667593142302817,8.918546936408001,94.50699053678291,60.615196631023025,37.65075843646722,61.215096759185414,49.613701669613775,20.288919438477727,94.63176004960668,12.905397453382793,90.05946629266532,54.800640605621886,26.31110321696929,13.97176445535403,78.78384265877608,32.57152010515823,75.51955843785873,11.009579326649344,63.93852538942617,71.99031268071238,41.78439215719602,25.819740096255227,32.44379024220893,81.49968924802839,98.70512280638681,25.614882609758816,16.1182966738288,78.8415161690682,66.51810236377325,87.71094421623005,34.16753911901227,74.92585023758268,58.474680446670256,83.92541331112746,49.433172074425734,83.72433440907801,58.402272292986424,97.29561089942511,96.43096965415579,73.08941783041718,71.24636657785399,80.18838789405964,57.949847535013475,35.647954484260005,83.35366174265741,41.36662445586071,88.26274284062092,85.29529686030386,98.20718639279227,71.85158706812996,0.31632197781061855,11.730635464755945,1.1862096975009617,75.87487687069637,62.86423447357786,51.76811436434956,28.527285986567207,48.43297630112675,4.939185100078269,14.398239687608749,77.901737400136,67.11633692502555,2.5256148886000584,88.38200639270607,48.47805823035718,67.85666027063705,20.89524767919363,80.75003256776705,27.094078939673317,8.434583453819577,6.717767637356098,55.81743511021982,30.476150893578936,38.674156295236926,69.12827886809309,74.26907729197782,30.10072555817044,11.612681459537988,99.6726480875003,7.501357935753051,85.94714717517574,65.10747699715715,98.34431759384732,87.21958200941584,56.42948914819351,68.7066029745898,77.50330491976526,12.746625839588333,79.93432028770353,1.7975020655920604,27.528562900697896,74.71214801434559,92.75004923431852,3.7805094749566837,93.03758839571555,80.58388756833963,48.710571001092596,3.5015597226065953,5.177426868403712,26.036890298572423,57.816060082057106,4.179529877859133,85.63537323450302,42.31603554435702,44.45172445094789,29.12134907573214,39.36061068928398,52.464194314574485,55.57437446407404,93.51545248616088,95.52563750638714,54.165424145211205,69.95005270891443,58.24400825502509,34.28470641162272,62.59530983255872,86.98455349638016,35.9242948973374,81.44379634870924,24.678283339799943,52.95270527758805,64.86207142454886,72.54965816100953,20.612419142376325,92.06705595533843,6.967181890194407,38.98153070312772,80.53471085603701,29.114978005454617,31.340237139112247,59.365405181950614,10.913352377790586,60.1985553562678,46.24874556587578,31.197045781371248,73.9473572101845,23.616851948470963,60.97148670364584,79.86735118494018,54.35285240807038,68.79166416220028,43.904432168788745,23.639028678095432,87.16886860569034,21.882122564815454,53.11936524691231,39.46810266128361,96.29358009909718,34.537212249707295,12.811904753569547,65.68642299547164,20.860630211390085,98.24164308276022,64.52168511097814,55.27627726526214,61.021837245175966,69.73884293462375,56.87321224956201,26.477467520304465,70.98819298287438,5.4915823623417515,63.7936795278082,22.80985347144323,86.51895303599706,88.1246261511269,62.65411249866742,47.44314720480284,77.42514104894788,72.38118994141625,53.33297389524895,2.7529516435018775,61.54409766501454,13.643388938791167,56.9975255496585,60.835326152538904,13.713025013533809,90.04449470307608,83.7416378564545,44.29436371658103,12.410084113227693,50.264282114380386,71.35602811639907,61.34123929400796,35.979875078412135,53.71770068630604,88.2902980310767,45.70554253403603,54.796983550000945,62.353302606708624,48.86256830675138,2.7522235567996045,21.444079940819794,23.99043145719524,82.25490671935289,15.530754768680943,82.16074847022519,89.21507396422011,2.4266575812384894,89.73979554288474,3.357904716036364,56.75000415073994,41.76877591595485,26.29852152799611,84.87196645398609,99.52598505178675,11.525748660531965,98.38978656495945,62.84295546405747,10.306413654969859,41.63182588059308,48.700385387139754,22.774122363285564,42.493397732452074,12.201222571241988,89.05854086459705,57.13581196315246,27.437725260451796,63.42548182571538,61.67208559564891,76.48397458563278,1.2821857184244556,26.580785754820024,11.927016234416,88.74975171892237,9.182464014152869,86.8679083417448,16.235529067739908,26.761305168459504,38.18295289983905,49.42390653889554,83.50853340770611,48.76013155836234,89.4670211238179,17.53318305704993,20.46339364427946,40.03978454790664,23.989728883982618,20.356262866896678,19.83183606819834,37.28083888354266,13.683803189491538,14.598674219796603,48.3018035719486,90.86738813705989,65.50108890791826,15.80558023389429,79.66727764230053,70.18800347663097,24.58033997200568,84.04366429584293,89.16133273305877,33.8963175554988,43.314535926974465,71.26023299646921,82.72891280142163,79.32810199650638,16.20353720014177,31.968849648971897,94.36936837747677,86.27162754390329,55.14770761968646,49.25357743563801,51.60694294600899,80.1071662554774,73.67486882134523,19.418613902278203,10.01003142923176,19.151420864494064,8.334837691469431,3.972328610069553,8.648760694276502,76.21385926494098,80.85320899630445,16.820725152006442,77.47705089377986,21.21423254983661,70.71963269218632,24.753028270517152,32.46285376887462,95.98729943807287,23.78944798779531,66.11730758467071,34.514053530492816,99.63713509367095,67.54283219721148,53.053995407734654,52.985068978464156,65.81782177770027,28.36242981527525,20.887534004457788,42.981877596993655,37.07718840774713,86.3250106771344,96.96192993433291,67.11577307027808,88.65059173537911,78.92060911019527,53.55913729065237,51.157898248980985,14.041885416011212,47.34763608925658,51.641822887543576,41.43340704597737,35.41472609200985,78.30150169908839,81.06955506711417,89.845902283452,48.6249264188235,50.31248679774999,69.03402359186207,90.10078481541845,20.838081398136556,43.62471273517728,85.51445003394916,79.22886423018124,74.51041291284419,74.43004781651989,68.46207318949112,17.617760294112884,96.35989940592448,23.9543055087327,38.3946284790477,35.65497152611897,13.83162287219597,37.026042485791756,84.93349158977911,46.90934377257939,52.003388403333325,89.31128317638701,18.47252540790918,48.07844954244158,96.10487091055396,59.07179592404239,39.640897282546646,44.65384152340569,92.96691925314184,15.321701608654681,41.793607141377805,92.40421881018068,77.02839888880327,52.706296528620285,34.56689541174086,1.6270438368805151,30.84953532527931,94.83753932938252,11.49319142624946,44.796774504665194,44.80997633210105,25.75882067324199,6.263272421338972,4.841916762095966,17.616632293993874,69.15436057174892,44.52590033687064,20.869632201790168,6.081095215812815,58.179122191531754,25.067888701689334,18.656646992079217,21.660752173033625,7.856992104017713,62.92134226123558,16.733692635988085,39.05824712475613,92.54012693873996,71.17967866144839,92.13909302538201,35.44826874573359,47.98351668281299,52.80843433005833,39.95145572671006,95.6666745680785,57.1295027866053,84.60517563057304,66.51901529915888,2.4652214642166714,98.3386720835321,87.27284008746483,91.87906663507533,86.00566965081194,26.633536327043938,26.59519964803222,85.17616999369118,93.5227613839676,70.09798163555105,30.82540125573653,85.83036233186499,73.75207033461245,0.5857874962830523,5.254761311882328,24.27694158841459,20.622509115703338,3.6895477453539938,33.08863476718751,78.18320455828123,90.66730129853428,50.568726869639654,93.0484506253854,98.71693633377903,15.100233524514406,69.03448096686665,38.49423727148944,73.29390671303145,23.417416719899997,20.53278477914563,13.707581401359025,57.43744025175609,25.967180728453865,81.64833404240443,54.18563784371112,45.50776061051794,9.19813567778177,90.02199275709654,60.331342120444184,42.175186916629514,32.79966528635032,92.16844553219457,20.149070919192745,55.68929108300541,50.07787146058236,66.17122880047252,44.65035943333867,78.41588287981544,91.78635067738456,1.0882203885902997,55.085538730130764,35.236056349080904,24.06310139023249,65.79384524062564,38.57322364773067,21.33138759535048,91.1698762600394,6.002239617650895,83.82103204219644,31.123025393029145,5.694938725254728,49.098059131152894,78.72196239884404,46.0172272754387,64.8159627428778,29.678459588717132,67.82240764618408,7.480795765855053,8.742981674027916,3.4303166348473635,27.350438754273256,36.6036754253356,19.902012002630475,36.36838747770429,55.07048025045479,29.541781054926574,80.5985001772458,33.35147045523548,29.19156779695008,35.67529088080605,61.847912940479134,79.27898777339621,56.08648621201097,80.96590771249453,84.30384100481677,93.22893826019214,94.3046931968143,19.035379977339907,6.355842774723797,34.55302179276202,10.634587125529094,75.63765003456857,13.757703431159719,25.908574888909484,92.63436129242835,53.07946601921426,92.43100410489667,5.452110014629497,93.14728285934721,17.25157156350281,33.07478565751458,14.569400660452104,62.679774069701175,97.04335505081096,55.204577300772115,24.395206556557035,26.65386801205589,49.58195777333966,74.5242956176641,27.814764739021335,79.41482844502629,3.5209272002969416,42.70828687612026,62.21860063934059,12.628010392768452,25.389484492841063,60.15832102753006,73.02630725155193,4.127984737610602,91.08407792983715,69.52151721729703,16.885045366333063,67.5271704585349,13.406108464608991,61.543022886358386,46.802196224311,72.0275954287633,43.61402672021456,39.813593002916605,85.76050267546805,62.33879489518298,16.653490257311233,6.956019431081173,59.020346388932545,17.252556116075635,63.36750341441192,45.715426655791305,78.06648654027897,34.64265468447446,22.746898157826944,62.62251143621283,52.087879615880475,59.8590067251595,62.00974691110328,39.8059728350561,35.689303324539715,89.23385775697841,67.39096831136389,49.526385265121164,99.28869868380424,41.81558834434742,27.694990227647608,55.42662990788468,0.4447169275878182,73.37247307345113,53.90105001734402,21.85840541410017,99.45313651497418,91.46758790602898,28.35997260992189,77.52244262673184,38.4573394095963,87.27226114789629,70.73866623941696,28.659248044941055,27.64465370099708,97.51684834530926,99.82291192247921,44.063137238910954,22.930133599933345,62.45652179237737,20.947720414085346,37.63735010190242,93.33496235184096,75.3290307929388,94.97721462667003,91.23487014634965,68.94260974529168,26.259462608040607,95.46489440301218,63.25560022252553,58.68218687191295,94.56144073715201,19.705087768108974,76.75158183376506,89.35665698131989,44.5886267884524,90.70704689219589,36.548278016562854,74.14567233861766,9.426125875794966,54.01312393895973,31.406619438780915,26.998693457664658,85.02667774587785,20.677279445862762,55.72991350454636,3.2023968305745942,72.33129070439334,83.35459152236736,55.599185182959395,77.16741264412906,32.79364187404398,34.415236732304955,26.879835817175557,40.15462434907368,63.35545195445723,91.58568521768855,89.46597162630938,87.09570123503092,58.96781273430264,87.24714118808214,98.36699433054804,67.41700353520899,9.70467484154457,96.33149294577589,39.767021374266044,77.03553423734898,78.20048811066503,31.189937351771903,67.19935478433162,95.85878353318404,6.157784905486697,67.44914369294615,74.53656745667844,84.04378100652828,54.506737385175086,91.99483393857444,16.060204376521515,41.91063304039564,37.02373154030446,71.3870993472272,17.080938829825744,93.6832487020056,79.57198616402664,86.35217293411685,75.22305066073916,41.034743188320846,29.638413789776784,67.19777540233974,56.78302154535307,55.12403885311403,97.50001101946515,87.24195810654032,63.57857125969185,46.583578526026784,28.979017020247788,5.903043748211722,71.51956218596287,47.338731538542625,25.980030398892573,37.37802108280365,84.57384686495567,89.3083757976503,89.8584086146495,52.23112638446798,64.59975295444235,13.978142916361435,96.56865742901378,97.21239308454548,29.83611560683167,36.637631807558165,62.822294460928,87.39074190496183,49.94453838550507,72.23485593920996,53.12331343600712,92.42082254212637,23.252583377227097,45.22059951340478,93.21190435996036,59.897157760969144,80.00581545259037,51.75123890191614,7.206362174393021,31.44755604004894,30.772452179976106,32.86088060150066,27.466005639894263,56.482910621278236,43.91642146904471,79.38065835313293,4.131852504679201,89.49082593651008,94.19384463878295,81.80901491016277,55.89754153290246,2.74031976899779,31.16006393623246,80.08048893735165,51.22812469134354,59.137899619528014,7.512608700314216,43.965204323145535,6.507041113312506,94.70832954466334,19.919400731056726,5.194223295826528,29.80666102040376,8.30894750761545,88.37446447924819,37.90301001796477,68.32569655678805,89.79065096412856,30.68241490894271,24.155146541725337,8.948982564588693,34.4148581863818,81.01524845640948,95.21098474064537,92.00591772791155,47.47172137541747,75.11504652339089,20.750230418788952,46.14871976097675,81.47535817396157,83.0086398927581,85.77052685019339,56.70632189941325,68.04769169217967,11.18667854805986,28.624719948961342,51.741097193906285,51.88774151404581,4.45356456376127,19.403756891232582,1.1841559858200346,42.31935821014127,52.33240050060869,61.890704820673605,15.907945439010184,82.45885497913675,25.234919854788252,7.844646781901665,19.257883895563133,54.863033607609005,75.78927207297959,21.99517296251252,41.17922600174143,21.69843216270786,63.275400479146626,66.51801085431035,77.40758140751872,5.138589674950856,23.83067420243239,5.015200913219675,97.01759992623575,24.415944141732947,53.55435158903986,19.921527515546376,98.129335256699,33.3374996862866,36.380508107282026,5.479808733849723,28.408855240421683,1.7365009232045092,46.25459613062964,63.50258325031931,21.21419607670454,18.645605827528065,10.92219709177299,71.35667797489174,6.576087511629125,49.23729243241346,92.2932394621699,26.508565450501653,18.748353503061963,78.86161870450134,70.57251041186895,49.66653612089734,58.021422782181084,60.91050793080047,75.47676210519614,30.547346666856058,88.46446859510999,43.742432409370814,56.857358323938136,53.592048315704886,87.9188746148872,25.5905850094303,47.991348649085054,71.74229007352702,15.655086077247349,84.28037645320806,43.85579665906344,69.9714819664417,85.22718056163457,68.34014037467509,10.10987154418338,40.13523604026131,22.858231401644236,29.417254909606594,59.80007224714272,84.93217784763664,44.326751485248494,43.370915530612365,38.929811775575686,12.007540758780477,51.73914214217048,15.61115563188017,32.05390824629938,0.18904739964182848,89.67265831479551,47.28751656699532,87.19280761649082,68.87713138343977,59.06404212764957,47.70247175553259,57.56194055345114,20.203431743395228,8.974091615727463,58.371571923143094,37.92222624372561,32.45392944087152,7.914632369023966,47.35554237999996,83.04659461806516,60.9644324711899,2.579007643804465,2.5977287901810198,77.40866970789797,74.35786070142201,58.209846494855874,40.73489732621647,99.72567383076792,58.79931061500928,51.11805082287715,71.51459223391848,57.97814812856213,83.43325002919964,34.41629624519516,26.773152801113863,52.66590663262466,57.28994947411087,39.767246345773664,69.5184602994824,69.29629517807334,73.74410568949142,70.64634135053267,23.28307263954461,87.89093961590837,23.494298407867674,20.523973945796705,31.734528124662866,39.446945520157264,10.46192624251827,5.864816246805504,89.62175917765437,62.93855870379026,13.263547354690086,89.47298631219745,13.484638645942248,52.24196981673569,72.59654332248923,35.22384209617522,68.61487734345496,54.28973857907153,96.99275697375734,57.80178315311576,84.78607121298623,3.8206181120962746,8.20953002532554,92.38800112621514,76.83207497362156,96.56995126634568,93.73386312132892,13.56027766979243,46.464379681767134,14.87438720120049,59.93789939579981,85.3672862750048,96.11116186705698,1.3004903631564924,68.94307947038327,90.35096162515497,32.860871287117,30.207926841361065,30.186661824752147,98.23841442120553,9.409498585215415,35.79990947343396,71.77403482635263,13.836166563465024,73.22876683986554,78.54700046713094,63.907762299548885,66.8840364159133,14.638022671333339,16.94064941808807,43.75451097486324,76.88202560201022,76.78015815774815,22.169192057501995,44.44548275759056,21.8322053225233,88.29746476428153,13.524820257042425,25.872237645848205,29.578664828770627,44.44973290202683,83.09500650597647,46.533019313610346,1.707454597845326,36.52717380549817,20.85272628100857,45.58139539951187,4.233225624622683,95.50331224309922,22.373470862410805,85.10126467064659,3.431174622868949,61.74601380342052,16.904110989465305,71.07741798479232,5.837646648849559,25.646800545660454,59.5084651567647,99.71953636227158,4.4998132912238304,55.0267502451518,63.70535066629041,80.21956303503845,39.3828909784793,53.578459955913885,46.58405235864507,44.067078612095024,91.814634558201,51.58317113784256,94.33587235936423,62.94347870260552,54.87630733429821,58.82480086392688,2.766988321986341,25.993560098514646,82.66600089863458,87.73753583230624,18.353051109853315,66.46395127600316,94.92093289349913,96.03592568321577,27.15106011137889,70.66626548111866,14.217508857708449,32.46361643677699,43.77659363261247,41.330290905340405,55.41688277735787,28.078371122862833,10.103542425193323,21.0445708299012,62.58517006551113,11.662107053868597,35.327526340538306,44.291292175720855,71.20264058189875,36.96783495227011,72.42043477580667,62.88039404939746,98.31363326404082,58.910578806871214,7.91576229605353,70.03160106458095,87.43711729765286,96.11472495453624,60.22439911115218,78.24152027014632,44.556780612556445,75.56015503195471,69.07410709794716,98.59987738009065,16.241318339366906,35.36397293638084,13.662856874957985,4.827781400915465,41.69620391507021,11.67344460079195,57.578285107453674,91.3173098328543,51.78120979116755,35.90255928122586,73.87901061379748,27.087766913060417,11.667524092376812,19.97665413232389,12.265344252745336,54.72561114259141,91.50956888955055,13.252634888647808,64.89130184608821,88.55630943617115,24.772314892816084,65.16304341653799,2.854054510619175,30.322783139162336,3.3580720289836385,45.923657092739866,99.9848765134142,3.0318882727479735,72.90863939524421,46.83420210085097,0.03456253703066903,67.94592206067371,35.98751732318449,22.501159656495506,92.08674817148051,43.96279819459308,22.73952096976044,9.381810913869526,15.021553583559587,27.74876998063619,86.73824903431287,83.53240193250562,49.75848331009157,16.62687906960213,98.28309242676681,7.053332565469073,82.03499697138223,76.95128516913564,27.697010769788378,0.07922358811439656,74.17820833227938,6.360207227687664,79.16386979843038,9.208756013163388,7.7633849172538465,88.66767024572994,87.8265265295183,31.393755341070527,47.91643056649082,50.03274829176016,36.76875477285129,14.070415826474159,26.60456349822262,31.709389074219818,90.17062166962755,75.58422413526654,30.360224084643328,31.92236259488975,13.148845511140618,47.57046958039851,56.54561242164628,12.97520111123961,70.14606407104526,19.856673786748402,95.65166044121676,63.771404185574724,69.99973871618317,7.471127244804665,24.647278428240014,93.58163331626048,16.828428355045776,65.83706224441984,11.543344478588901,65.9471188851426,29.175962012109025,20.289845219777114,1.0130234443892827,99.04444051209923,26.237924122636503,46.228482736815636,48.03150751488639,25.86168960951395,31.904900169613292,80.29897833383406,29.696841479577774,28.96869560622347,23.531621954933623,75.07526189658932,8.120054629745987,21.461803416481295,41.94639625379819,78.12151053014443,11.11924006792978,55.80626332910131,66.72074768991503,50.73810486156399,19.378006008875005,65.4034831963606,26.044520735263323,6.732043497106965,88.6972420333327,96.54517294267475,37.0441405065751,45.162420009800464,92.51082914569524,0.17603935388118552,8.725331475639642,6.992412653784131,18.621210380359166,39.252680194114554,3.1179404932126342,61.7227723455955,12.858042140601766,4.510907845474421,49.96594226820796,72.90424061993092,55.95617127363991,30.134730812763678,92.56675016856882,95.18115718685681,94.18962942954093,57.28405292391865,66.67927598097617,90.45963054103116,11.119020005590253,44.38106476908759,65.90831193113799,96.7318374097892,63.930977828941415,74.13084175212474,88.24065259659828,62.65326524215221,5.559257720196653,73.36182156740551,74.63808095412054,54.74350555637092,76.496226775295,77.9848382815713,30.554049613396185,5.6345690535034905,19.37918083169945,12.456601288704395,16.548449474015115,26.610859742050074,33.00161180506018,16.174876364369418,35.55236900786786,93.80846940998819,67.50312735350494,89.69290680314252,75.88941357754813,23.64410955680657,43.63015231849329,2.726529092102381,38.86965099203593,77.61814953549742,66.47507197600216,87.07836372713268,54.83457263998906,66.06393505729463,98.95214097194143,11.961750248010594,25.313300397214622,79.47581559261371,88.10732840594392,8.869662509053278,19.604984476007083,29.69351711532191,99.16844497977522,56.75764321387455,35.93358905394651,66.79645618808088,57.017053871246226,79.00227779184972,80.49513185575827,77.90448371581495,55.21855977686868,19.75888303474158,48.95090298215279,37.3966816880046,68.93858129821612,18.3926990115705,89.94498404950524,60.61753330370331,62.59584281469116,88.42239921313649,32.53625121575807,75.80332623459488,55.22283581343837,72.15289207303518,87.21980140934274,44.388346997193814,93.21382845802837,0.4206575064632956,93.99687463841256,44.55763897347103,85.73642882113006,96.09668455029912,93.41774984133761,28.201974187822497,43.506735776841964,84.04959707113174,34.0773029201747,16.659627259907072,58.77725823238815,38.313438135774206,82.40923731206902,74.47563283914246,1.7135120107584667,74.80357937262538,87.76359466275059,62.005513074015376,48.487956403620956,73.83206927392419,52.308806589194376,49.7402360542123,84.24320351697514,15.180855421651273,79.82840389006756,93.89878716851798,82.06164664855667,48.3512406883005,29.27450676666401,92.94453548751221,57.144573666835385,50.03969765772865,50.216401509816265,84.70908105163166,33.04092992580715,14.202917606967713,42.225683497247054,84.83636186401468,31.01331227573678,14.566142363476642,25.03128004482661,84.73614329593526,56.143000735134876,74.01052674404397,80.64778282803084,17.131771370362912,98.59783494571454,62.4137404375688,64.34063818851621,98.55918614349235,82.85192855022721,41.68299487352813,80.42295442278396,44.337022164343,96.26847673885244,35.304646543915474,50.24265294978505,16.63635719152785,65.66386005025191,76.38879249245616,90.09786126561518,35.916507467887584,36.43577401612692,83.4577696574495,2.4938375923442724,39.372269077928735,94.28075549459518,30.002315010448022,70.99410602757817,87.39578473285023,35.82913010247183,14.73338098029081,62.49480101823328,65.82038623238176,30.144815799034575,12.48359891361066,45.04620623169505,28.473544255458506,23.49021191149,43.266829209535416,50.71454441639226,59.948208878021646,61.56148186346921,22.362010244511065,39.55841615728477,35.999878248956676,20.05206309216103,84.92685528927845,30.114103199515764,78.81970121539527,95.07371914166512,19.065377327386624,32.67063088880884,17.947404299319537,48.16280089442034,24.866095373386045,28.57541617438788,28.67862527732421,25.891913342008355,16.307261006929295,86.25621659677105,59.518006290381685,66.56701224717284,76.47338681229317,3.6487040092316736,25.48198370154744,38.33987269913334,25.140051367623006,6.84395538923952,33.17104320964327,37.66240809323307,33.70645899172854,35.70728415856107,95.03695143152517,90.71656249301353,2.4482252020411543,17.598378788447576,28.878455718600648,90.07357817598515,5.925823398192853,99.47263951694302,62.73318965975507,88.53500926242356,85.26546390259882,96.16439461296903,81.16021928515872,84.59742637193415,86.3231014144909,90.6345778108812,20.94263924121378,24.210169719940332,72.21743900419548,19.656749156816666,29.2770584345052,33.373999528241185,28.618144804108404,5.367043365241009,6.459377432031399,23.738894448432347,12.883075410224388,76.75778399360989,82.09290660088094,89.23779815504194,38.52500801542739,59.821306801255666,82.5899352360537,19.58786743881683,33.5494171404526,46.55820582650835,22.4712862533297,86.1005219608536,48.31289042796211,24.825610974760348,94.190001817884,22.848744672022093,3.458513227380877,12.40465697782287,44.169682431585485,47.70720807293428,93.24759367891288,90.71254125125564,4.765074884888998,21.02572026758779,51.890220266769006,8.725083795153122,17.995118559327516,70.90193492117176,75.97771309473964,84.09148728546657,1.6834909418332544,65.8087524633069,93.33348169568019,95.65973130047283,60.638140291607755,8.398345779494488,37.32472786632096,27.80280588249353,3.3969662190225236,86.05338184914802,53.0407893827502,31.048265723446477,64.27075434439296,87.9836019474024,99.52510405003126,49.46452504491386,81.16169705897694,0.9741907136641692,21.1153335857875,51.15514324453265,20.935362401340264,48.687724805122,8.696092274600243,46.87933984013848,32.22489864778936,36.185728568284645,60.764072051065135,21.103379633830023,60.81756879875655,72.94554029181793,25.497636504417986,69.14450395831948,10.920375309255482,24.471099115089558,73.66657381700125,20.155426542868625,39.7320561327423,34.556705722865765,39.044921630274324,83.7357332308153,64.43477265524824,69.55384685698294,89.2943831516742,7.559902393278062,92.43866979096812,1.4756899093914089,24.20982581146367,31.633978344013723,48.3486229997521,5.925650543677763,21.89122241364614,52.48135062517857,76.57744630752738,4.082967535093873,69.54017966546897,64.8812139855839,51.811552446366235,15.75519676459215,17.80491222759446,7.896827405465334,39.73463193606273,52.0232654024654,32.092319959310025,47.027218661377525,80.29173694864282,69.43397990062046,61.09393108098542,54.29401313114507,37.284986783433325,95.4888837557097,49.04716283996874,98.12035112515858,39.79603858312698,69.43832663924788,42.24898560614976,20.53866270398593,60.36346740630378,1.1883798622230657,65.01593821264558,6.3412919763569775,31.594515335247642,3.320318027146696,3.749722941825273,63.319136059449455,38.64770030933823,47.93804446171044,83.69023281964311,82.12846673434177,18.6551541561489,5.968231531301937,91.75926769099605,16.983942511973115,47.20570034479204,93.41088399056328,2.5410001274638327,93.39488707271457,10.257336130122729,31.78555544039201,14.397177480235335,57.484674262405036,98.62571688363843,11.084984827800671,74.03859244307552,76.55062531643303,29.438927442942152,9.517908709117384,66.905879088109,57.572574994418005,3.755335954069894,31.44875733294351,84.90751886822063,87.42383595196887,71.20413036526216,99.08108102805045,3.326363181004055,6.525465521321072,56.17930391516816,25.22209125745323,81.7686439772029,8.967937119898883,76.66767943360139,92.87525468994545,3.2161213612305395,81.22976992868877,95.60968262533964,19.22620806306947,14.558795358855825,20.158785607835338,62.82300565810951,54.82748543206124,46.825355226746915,9.724763568669026,44.27657517341383,30.399937190028492,98.89453266046961,51.7330092187929,29.731977084685322,76.26667906331252,95.17544503488325,10.772286357080684,56.24649928609319,25.62984448135438,88.02955059321262,48.29252082892596,50.23548477987093,49.03991237404885,55.66865158831924,62.41786972739821,19.863403813490386,9.167574261332689,4.172916554364869,12.446602731085166,53.3530022054123,68.45321451102893,62.9818850767869,53.794518961599636,85.3145732580572,67.98244265089895,1.6503023387472338,95.11901348154473,77.73684965119244,62.983273029555406,11.94771307909599,98.74884003670864,2.013307010911791,20.51792320127236,23.68639168429194,3.3233533916345204,17.60238029009861,2.0780561823752985,8.252493773760905,11.662724930016754,70.7037063594531,92.22338396232321,17.388592679714478,67.75228324868846,72.94784373923743,16.174631129580717,46.983704709929185,78.02818347524408,41.34833731181693,47.49203382515209,95.07048118083054,19.24127226267761,34.83213036185876,55.49014370227579,0.02247723388055789,81.3212256812463,35.469908949187825,8.206655362358717,50.500127083429135,65.47236038794458,46.39946980543381,28.076277690225304,41.04829606707759,55.549332222345605,1.6997627344362831,4.826287691225373,52.03637497200388,64.96049078807435,97.12844586527476,91.45651149357089,38.176763129436054,29.680913672951004,87.9418482862882,51.030815306711105,91.03828789328354,27.986023391953875,97.20524412796658,55.46179345692971,16.93895211316433,9.093372293874246,36.52837777423158,23.875443665125495,2.3546093674513657,70.10411499426445,31.76945731514673,37.10911180858518,34.95414082718514,92.54814642768076,59.358957793256195,72.87515882824101,11.88186612216916,52.14452188023139,79.66907232053771,68.89506799525581,30.322667127804294,22.214431082414798,94.01404862678329,77.57334510443759,15.798679463544275,29.274790967870167,0.3926733966694296,83.23616512736086,55.89575920655876,89.96641204099065,48.25762407405018,44.31699832056819,67.77364670649682,2.942672896489984,3.2258176680237116,67.12508841073551,28.871319478647408,2.6149733761477,34.47002978432982,8.880552248174677,64.57400822739967,72.7631768873536,46.6319525158408,57.21343861511916,28.985753546267702,26.69062151665451,88.59136153077117,9.582326391790186,16.885136333065653,7.723938601971014,59.863028157587486,93.49459145831001,19.513749865869002,66.43299616883344,24.036587878161086,56.38688370393964,0.3221442159460408,8.002254955428501,75.7897299286318,46.597185128001875,10.657211988482295,37.12497391013918,76.22139795364426,11.580087566310759,64.86495182113522,59.71797625067439,47.145907184482226,14.549204833763984,8.090652080758575,85.93046141791241,66.78194622470829,62.157801583220795,14.98755049898024,4.763289564579587,4.79127978444277,60.015814753923394,31.585411846360834,7.902393330151591,26.955356411352792,99.52190703496048,13.193729160894874,70.1071753541768,77.81101378340199,7.77589499080058,42.574966761672115,58.382514066469845,41.24291402667751,95.88104659819872,26.166315635994586,43.36507941152934,46.34554629243441,47.815463067455674,55.23902173295161,40.346823568704124,66.97511772081899,67.05941430617713,65.7325373235427,81.60008839796406,22.33435028542661,81.28964459935769,54.1887601411164,23.0766713459587,23.46254589177005,68.04669201383047,31.426239991069426,77.9086336954577,11.07517192349764,55.402145060163136,23.322878874591645,11.064019628744315,67.21173602703576,58.668911072266795,35.91452779203951,20.36199844205987,97.44485918852645,21.44767214514357,52.51720426836851,15.986271366442839,61.68098481627975,72.05597662686951,58.79009286188304,73.57389073417347,71.47834708183096,65.5896621436314,77.9576915860848,44.21187288480439,47.28317753324032,95.63300553288539,36.171008239421724,63.05925092875372,67.04866039227035,10.5036415989752,80.28414926329877,88.49079582077705,7.895560379913469,75.38073073269406,37.892661003631666,46.04691612256684,46.10256762008045,79.57939470859368,32.58567814704427,74.42223293445015,21.25399572756994,37.71514409905765,55.59007143721016,74.20436661366598,36.26101629115903,44.00556166503908,12.650149620825202,62.72735084716842,77.62376141613466,12.31440305961038,46.02559968357913,27.484438513359912,34.033872827476394,23.334193618052257,96.11127882326723,65.65149290832692,42.67864498143319,31.587757322044673,60.77177569441686,79.33210256242795,93.71879081200663,59.51772825169207,92.98055946794673,69.27955662228034,21.817939098047646,86.3716693106082,63.206874801279156,26.21038827019434,29.964612521249922,59.03785892410993,20.443827822022143,35.50694424578666,24.412827995718665,43.10924223931838,52.24052751003361,41.81031452878544,67.1069110997183,83.66296163149603,9.89841731462857,85.47779052931132,72.89072734736918,51.570176449349056,38.64368117728701,20.911071748250166,61.94774301042882,43.663796168689395,7.665223453285996,55.87616467444325,82.98836938305477,62.69538824416697,55.2890211235791,21.831745784440283,90.64795706985042,43.54627113740888,81.09345151475932,8.93375808663357,23.19443624485431,10.669579802311869,54.974867465424026,9.650297929482765,22.12584575391252,49.05961855390674,33.762598424842594,80.31211905609139,30.620938847966016,14.032546787706357,94.48845189894593,10.666200907256274,23.210358408619523,26.269788722555386,23.63614950389461,30.960791805213162,94.37943201939193,12.521292725663514,47.19740003514025,59.483366792852046,14.817308190591872,40.71172612138949,30.602158098444153,63.721643735138834,93.52028445233057,30.384401481992995,90.82848669618976,39.95817672778498,43.8274844557613,0.8379359325284774,2.3862689148682836,95.59032810345164,23.244318010650943,65.68456916732849,40.96290944115947,45.06607073701514,46.893980970167014,85.25242452575982,19.34193688592525,17.94570101930516,80.24695012866003,56.62584715030713,55.72993750334568,80.20503397031604,97.42867673961227,68.77801199231932,44.80686408433012,51.60822503028041,21.815400405419037,78.07918307447592,35.37413691605242,19.172678315251,54.18070760436616,85.1322305972833,12.143901063314333,31.375255919130986,40.99260993500501,93.57381310330976,33.007624372208475,37.0409943414997,2.5710705592960736,79.36800402702139,78.15270551567535,67.40362730972292,34.258805758691565,51.873946419434645,63.70287826982287,30.901144952957104,57.28085269155404,53.27058342371765,6.360154715865418,39.17395343428524,98.10738266317591,62.946703450566396,87.3384395230564,73.10340902303221,94.87129815275549,69.34603777416378,36.06340770351258,70.0540171143511,82.9901673803872,55.34318756195999,33.86513889668266,99.04313548940507,69.48962819823252,88.23229127655858,31.83740340947724,56.348190512175655,89.47902735018324,48.623263107754426,47.40812327427179,93.5321685143121,19.798087834822276,57.13646365535963,69.55266444437099,67.16025907549702,75.78084239884856,88.10458291405592,7.670832872971667,74.87075158816575,0.04689944741516072,5.810384033160576,58.832332657729516,21.415592541718386,11.967420226333248,61.22650202902163,64.74028957733091,89.36474322957785,32.776181036486854,24.630458245767027,8.873098727869,18.446471736812498,38.88371771063343,59.181311783637966,33.68263176804875,53.01395465222464,62.37638256548386,80.90532452937082,6.073831031334487,88.27450402299068,44.99604344434906,36.202500213427605,55.7732756577204,15.60650291211182,36.70840372959465,11.587874578331014,87.44010784927015,63.78314517467773,34.287071523010425,12.857977881588267,65.4409854614484,84.7786569555247,37.904527758778336,0.9971982999586904,34.42344555763937,70.33394305856244,64.05449532967286,31.413051478935884,15.88692752594023,43.03745613902793,98.44823671670707,74.91219181294045,41.29762800054622,81.54653568730468,23.186528772179603,57.54506344404401,31.811033349876016,53.34702180138915,76.98775518349417,1.2931309712051142,59.97493594223967,66.55995222429186,54.12384667378238,52.680908169745045,11.041053805024115,88.99018055127318,50.42036903220172,53.92395980825264,84.50516299568642,35.19423391843289,60.89802765729032,67.80436550952726,98.86896206700766,63.03494782768423,74.07016887730242,3.1115116966338285,53.757018646546875,27.512626652724105,23.436111999518584,61.39666580585097,63.34148024438373,93.3134447609551,83.41975656350209,74.24565968782635,50.12988494748261,22.373438987750927,70.45491414314861,83.22040390630585,34.651200033296824,91.4911892177246,64.36823999637112,28.356403803512908,80.46030477570223,67.36022192358728,88.19715989386748,52.89562847027677,61.443159022474404,19.633972000068166,70.82002767715753,43.5498834294978,94.73111943439022,12.891575952425905,22.364394211931348,93.00643435816578,24.875932698082604,54.66416521119315,26.457809363025998,95.94868457792985,63.11622621815215,14.009440674072549,62.58201412022459,0.13200126647348043,3.1893539968082085,22.79039160062517,97.84123883938369,97.108287639492,7.590506052480894,0.8652197461575306,45.343267232294195,24.855485613063,58.03213614705328,82.96128053151892,67.1859469630201,71.76729696704304,45.203890097412426,43.508222058404044,97.61753773603678,31.900716333274982,65.60307536106279,64.36373130193805,17.795445766230422,12.098831265760523,86.37908834816665,15.711694905193706,80.58090104481973,16.101498859892438,86.52381044669704,69.77851397327105,52.256878967942136,17.37561970327097,22.594389420140292,14.42313846217409,61.35049958172567,5.317509493709361,69.56477546166883,45.27778564147516,58.108173714152066,42.975917001398436,93.65547847392726,37.36749292351569,31.293310491145487,35.82288026127921,60.1837049028929,22.26678325452356,25.97063065314146,77.69289115984348,33.11888192712213,29.96044785152564,33.75329158320432,15.507610439285124,85.58850080730016,43.06371570300453,20.244637741019776,54.24028186830099,60.75090489560454,38.52714621038087,75.94329037790676,98.18212811205561,72.10850916820398,94.4347825347348,19.319955114574462,15.66818592335757,59.59533846595817,93.88938215112623,23.64391461765357,76.62810799964272,3.099841174410578,21.442736230700298,19.91068672175993,76.45828168795013,61.54668424279788,79.29985508538388,87.59733486172574,78.59246028711661,21.18640163129861,87.42471177192918,69.91495556450094,26.54194536220238,58.46309112422716,81.73155915937966,63.90709325169796,9.883964735725337,14.172834557329939,70.62249471543922,53.77162860209863,75.43146970711035,3.1543791130399734,3.3031905105027737,89.61081748426416,71.47279422789116,77.87647397651779,84.15522171459884,79.08311739109564,9.159179716469678,18.51471064225424,8.19156966609047,13.12577358462319,35.412928168275585,35.38674886563492,24.468315453777944,58.06858001043811,17.586958937476695,93.36117461656676,20.19837642437605,48.68101758408875,55.60741627131846,36.82697954314571,53.994285947255726,53.05025845391356,54.93294768942676,20.184198446148383,63.89890980238887,79.83921250384533,80.10484491631445,38.461728971297696,55.572396699720386,29.920862728534882,6.301680811865573,7.42595305437439,29.197084566143495,44.537538987187084,47.47673607304688,2.0737666525333265,29.235300365814354,14.737009271922542,24.846661054543716,17.394840792568335,81.41967836798312,63.414889883784156,99.92963036237072,27.335111644382305,80.73275881233685,39.514955685030614,46.338653082388745,25.738701212177915,52.46244573819195,73.81034142401742,82.56298504842324,98.56599594917616,42.496303930569745,74.07434493830962,99.27705180623295,77.95113901309804,15.752987735762913,84.73730502569863,59.02862907885177,41.48462220473266,14.850014536338229,77.61699660504863,51.52714913756097,41.261485618464825,25.61984885673959,76.93438860357837,32.729117689984655,76.37723717992004,26.39059257481441,0.9975867428869245,76.43303742282791,85.59503282763696,23.76464642662154,61.52660672341829,21.624289065926263,10.228140564921762,34.522315011678536,95.10511928568329,71.38907703567395,45.79214432926675,5.966767960948394,72.01360424209005,15.120413778339092,0.44823743928164017,58.70442473883294,2.395704966149159,4.399649364564951,80.92709255833608,25.71499440944749,44.54622739298192,48.88294677128996,65.24704258039108,38.80510992385822,67.27763598990173,38.037804153790454,37.62346943255538,61.609629027162185,17.93499725606933,22.618102869928148,78.62808970328068,53.34938666853047,41.45646232755054,11.560772134243313,97.29873695852694,61.97592153997958,53.88266127776345,23.229021311282093,4.269082841068139,59.294723072717126,26.621469316822445,16.30353594235634,0.053727347957666094,79.92761739875114,70.22055554090541,25.235372515176767,66.6344755553951,5.2810010552482245,76.94088830827577,51.66213921944791,74.00026242767284,54.73506377085147,16.892463194142582,30.387461795162764,9.834136135909265,92.34986997105135,52.825420567924475,40.64457304116967,97.82974136327557,53.91126476600826,4.582661229699713,25.371788954117292,92.64201938429751,23.09047069423409,31.530440359108603,83.46353892975017,24.13115529279254,3.984637976054217,58.78953700936417,58.41575935671219,7.677257706171991,96.61556481738684,64.70249865539157,55.314160637593815,84.56333287340257,79.9254789757763,16.48790729281683,0.015921721888378926,90.58675200895746,99.4668343296287,50.242037095455814,35.31967783737278,24.181356835921974,74.33936635216051,38.41397658951677,61.76113576141803,24.23677044648702,82.18346584241856,48.173429849593404,47.18772879047444,4.747655907582127,99.94346050541954,85.81207014933244,15.678843339114312,82.28858046263969,50.61403379432689,70.37280143319936,8.704707674528922,32.12778314627105,61.869151929736745,47.619206586652815,23.240059113433496,67.35705502269502,74.78027929993517,1.8815070446290827,72.16236598328753,10.04492555659734,54.12683852593384,84.1202168899021,92.47468532288791,95.19467389438735,0.4668718677992678,42.198072861951665,9.178563023729225,47.538218845527034,51.88951152461869,48.799844916685366,39.27376727170504,59.90343855482764,2.8717752741054925,93.1547868206262,24.491913847987767,0.5389447122315927,82.32755824155483,73.6986183941794,53.15612693717713,48.021594058635216,1.07667866123069,32.261159791520356,49.93813067621578,54.9880184219137,99.57319126586052,40.516862155165775,51.860189512334756,29.922346426659306,62.732258014499024,32.902725088062354,73.30045599723228,94.48691725152591,83.69189348531843,37.19337757494705,44.31866582418805,6.049154520026889,62.81985191310601,48.55285679040361,30.81775818532668,4.549138032471189,76.22589974428602,80.42168063887803,46.07259732321117,34.84823521561994,16.689899841342136,25.71915219068941,67.74057298685301,90.86257340976191,70.53884749733822,22.16552422557736,91.04569787803426,54.54688447791896,84.85852568569867,94.97187174761304,22.087990432720094,51.44703724500087,40.43447640526268,27.587180563067903,86.58770475100589,47.767939428456415,2.6489450055529384,12.605087649711633,53.99404635263354,72.65688102871701,65.54389111421446,84.3806420657824,20.845592033712347,68.13994087772141,26.85990048405681,51.54789353877766,23.115471113954445,23.42788582131491,38.053618505198806,57.11916364765214,27.331234510745794,27.657524081001394,97.54409648535507,88.56723091199645,47.806139547576606,9.178853050544545,88.41226339615676,42.3117408005597,51.690063141961005,29.141210739026015,29.477703266371048,43.798849311544174,47.47259840448176,20.42815160746837,54.55458594291917,14.873082741818322,81.20902247466016,90.68570108029242,46.55021980534102,68.83383379446192,93.12670446250739,16.308459455844027,59.39540679628115,81.91468720703365,89.95706802260828,77.76967752671125,53.35679434375812,29.285946058343036,7.318929174365286,46.870225857918335,84.31894146278064,55.47265917864376,82.10004042515081,10.13292049874972,92.85526007956256,6.807866451370348,89.05850273530518,15.317172123255096,86.36842807333602,88.13767903039539,2.5197853991837826,92.78844940756834,32.81252594678499,2.1005516702164884,56.2377590872592,18.941479520184856,56.73678053808824,72.66344804642482,76.27321422504542,78.56127798844875,17.837706320163626,29.188684103437012,3.1015804783090184,29.41748307150491,19.897528050118616,5.326906888986349,24.8673911216163,95.58503978830373,44.48406984804998,17.08583998849742,18.92464843235485,90.87965093949715,29.176161295790827,17.303904513752542,69.09569490268348,8.37394762076562,83.4534573887629,60.46564943218045,75.72530718712333,49.22583144269424,63.63267291946559,61.43058176917482,25.635810996842455,38.79432530754321,18.239529023805844,77.11759097503408,15.01945157151221,1.7572856336362297,56.88119334801372,66.07444389963874,89.35349211973448,52.091403459116215,71.3404756169535,85.68393848956326,5.561416286901699,58.60768917417938,85.9522538194979,70.00301548896421,92.9094877047545,27.67976376270045,0.014955847720954374,79.21658894783663,96.06721443190513,80.8850835426953,21.136817611965242,49.02500201769311,61.561037865827394,42.92591625189489,25.176081552175443,87.62641450763398,72.80121047415606,62.33756758167112,86.39450784576186,73.80648834778586,92.9997706852588,57.081866687957906,99.54487981841558,5.799042123308018,55.19038817799407,62.640372642108154,98.82744195299888,40.06353390441895,54.72444166072222,77.28730744888986,97.1266475080277,88.72264114969556,96.5087648774118,40.524789837927564,82.1127641729059,2.8729016166781696,27.144983036708247,29.72831006491169,7.3041605604030835,72.10040182449514,34.44456992056008,78.07893153744176,63.91175639447739,26.691721888352227,0.1699680368637102,82.9464057210262,75.79530761791989,83.65353887388886,53.20785723332931,59.509087582410835,9.189819633638896,6.114082455020265,51.45148923628477,89.5385138481671,61.78081273839319,91.85867568413354,43.274765490119336,12.863510690228408,79.35793438566772,10.319269326680281,32.03324035934245,56.02210046366615,8.48957916434111,10.383540554504178,49.85817029005266,91.28477169284717,8.80237262330782,30.797087747949647,75.60256162065826,60.257906840366225,16.420966506144996,44.45983905369735,74.52113486318798,45.299995363071766,39.7048944370433,77.47555147807311,63.86616546348679,60.12075882185477,73.60714906897947,52.4740985532314,73.6982054057115,39.66031360999842,26.982025961649448,42.60340676769574,57.575484971035564,21.729462847753524,44.47764787567898,82.27564047454716,83.19285919974403,14.731496071318128,30.01961203603425,17.231808283130047,37.33750998565899,49.470217543904646,66.85980559856783,11.559751024140507,50.200065238889714,15.062013983141377,41.69630266274365,70.35838031916875,47.23322522200395,80.55897924889341,24.23715473101147,92.98727288004373,63.857347711670286,69.14106652275707,9.251514483439294,90.39050070705596,57.81197666697129,49.54990372586907,77.52174882248283,91.97723955002779,84.37801998191945,45.33437686867162,60.72547885216346,14.993663027313398,85.18431475319997,93.48894078189738,52.18385567721621,9.741562020460147,44.222804952120185,11.36989405096217,86.82847082879475,15.292726822348923,25.70871052846031,82.68686904227503,86.88723879143852,69.38154603257307,5.179421980883725,16.557498815895656,24.245751580243546,52.444512625313635,23.562121284195868,98.18647869107144,7.33581213934097,12.85819876603992,65.23355762448033,76.02915426178583,4.263529459920889,14.329020474280906,42.24485113693266,32.32086081278614,45.10266046417362,21.741006067700898,58.31289579197756,26.993796351421583,15.680541108293955,83.67089549658967,88.37593011877549,72.83237534108807,66.04776137794643,29.853737121214685,58.62374895481225,73.9289307702996,58.27518850981186,68.85169341016142,22.83990244378217,91.27725913901637,20.76732868614063,35.17778741231062,37.575451327528086,47.45382553482278,1.1733661469975232,67.16866897231544,90.8962053164853,65.46490233637022,66.05555172410033,53.56549858437909,11.601197810223862,37.63344361213038,55.025251461990585,77.69759464608991,52.9019000871327,72.86543096005154,95.15291908307576,52.27060539651094,75.96957715455474,70.82722041014186,46.3053964532473,58.286238831033465,37.196074834198335,36.39191999185414,53.10857793254081,97.04048482413776,50.077392062521916,90.69844870627438,26.78150921372139,62.823087879114425,76.19433221808126,90.0797203125309,92.38217616939018,43.467918399068175,70.16309920521974,96.52041082223249,59.37357196989305,5.067266503176249,39.587660763708676,7.439655279473822,87.6213826468645,70.62421951622791,36.32381649645362,47.79618061193788,5.369259701525298,40.230763723864385,2.7582086917512183,86.28530117287436,45.57984607639578,44.690206731370154,5.829858160532664,3.8214086945131287,48.14906301127046,35.91278888464732,58.04091257463866,9.099326896113825,35.24605221311092,2.375062750005308,94.48430030833188,15.954666082064717,46.19612364151335,16.47632074706,79.20468000355429,74.24646820678177,80.91827379264083,14.256431720105544,56.51365991505074,4.849395521550337,67.8453143945684,93.78945364723191,4.593018268279803,12.00914287568703,30.755216960089072,72.06107634159925,37.69105700353854,84.18362794106913,75.85869049199214,68.20766690292479,85.18357697829434,24.725984694827872,69.81422643199085,95.53627628902572,3.2018629351880157,2.7942078272326754,84.31990515541221,37.3827311230505,80.55031945796331,37.55247818804808,62.461834749395486,64.87806301842369,61.018126105032536,73.41815736582159,46.78133009092381,31.913318316608674,89.65396251200224,0.576358276233746,44.219558098972215,35.2642588628146,96.57157077320323,40.86424524574207,16.942348204637902,23.33639172248003,53.05050072345616,95.34528324649104,27.36851021406507,58.59863153998449,43.435611220484425,95.61643675731796,23.642909615019157,91.59913758318908,53.59287626086666,60.384213867262616,74.02015171128107,95.39830845075234,43.58367654708562,14.763314680356842,23.898427772955756,44.232457465864826],"y":[14.414652984401977,23.637892859247746,63.405024819702284,46.72019125431803,13.985145938854348,5.697481268580584,10.40645770542783,29.97343930824914,84.67435323488647,44.90340422964362,70.56005098347214,92.4266149428416,74.55900877035205,58.96558309419252,43.369956670972456,24.742280810777128,78.18404347507247,53.824369073121844,65.63122875284661,1.3309159526874947,36.47902929023883,53.397083796275346,88.64487886626233,17.41902267871882,20.379304157664524,66.22006377819237,62.03743837803293,13.835781914795808,56.38600704431591,6.957196180031788,14.32231193147161,21.193712469864636,83.94224969829371,21.733835455445238,36.12174764729389,55.817342693302265,0.4462365754629549,88.33780556773337,75.10502191605968,82.10012793101637,96.40351236248702,57.94701083502544,20.51541487138884,28.36421866561196,58.60477560519969,75.79874644933054,72.76840936049987,34.275627727998994,63.969941154924015,96.38433576497286,2.351950794686941,73.70828164084455,67.34498595625297,19.83265723668103,84.83954205282753,76.17468758097408,25.921361110582573,26.041194151619063,55.25621603653206,11.19473952319644,51.60012038519367,98.98420573328718,43.55146351353814,22.7211594957202,70.13976348700346,78.43454297316937,68.94494171862874,93.07586341102946,58.644670164289806,89.27007187901502,29.46076081660445,69.3168706941542,45.86935340026559,89.02953565848959,48.43081099322669,24.639271737569203,69.51413889275128,3.2047347475655408,23.88287635923093,98.40326947412159,58.1731236992591,3.637990268003932,18.719739786900703,53.28459284504491,50.66077992422798,66.51356959328278,14.148432777461839,31.647367640283587,34.32759365745775,15.130891570855686,92.35807683039246,32.11216664240294,57.60125356588999,23.09523319302561,51.279909377013055,78.48294378335838,5.984962815420658,88.59487842970964,3.3718602189971247,57.66162256308299,72.39775193660383,52.46608447157476,28.05222419450527,25.423329981331477,92.5393957831788,52.72668157607585,52.696389650790806,59.34875276975413,3.2220361068829972,79.83496917554412,0.9786955038862177,49.219013987774964,69.10170188921198,43.76809659054113,18.362861062906276,18.315314358467848,83.47827210009778,51.6483604170817,84.81057957447226,88.7001134110923,98.9096704645237,16.998492589147528,54.002459742103845,25.302067206012147,41.68540395117155,31.537522479122405,19.017320921484206,43.46100029380029,7.793212342248735,41.44309534047419,11.344115270106304,75.96068204858061,64.32515675859494,62.06085086792938,83.63194835809306,26.292823434118475,99.53560112673452,22.746355075129365,37.813812805455385,3.5093028069363985,37.50854335192994,28.987303220782902,82.94560142113849,71.57236029005844,59.5571673445749,33.5243724326786,26.335918027062554,99.61572709326254,38.3778602754545,6.720325346496924,63.93865077066552,27.424810180468494,9.340574765889409,64.4264691892041,80.68271014634679,39.42868335239723,33.489729464804604,13.025691229380543,78.74109058557698,50.4908328452182,52.52578259900178,40.534674853784416,80.62654594688462,35.31505267175476,67.59576175333596,54.947524116444846,82.64695543830292,21.21981057119222,58.59205444966605,14.357946346214412,30.695368845863634,29.67345871824014,62.9071343945949,67.21315140599626,92.06653239499781,62.13200986364673,13.93447250879557,60.02315436350997,12.340739890239671,1.0677512328842176,79.00566460685887,60.857458120104766,63.68368797692916,55.71154147724845,32.01251344396562,70.1081604834572,61.487044424817626,2.3155907989297786,22.200189529192837,90.64369873014854,56.252764162305525,95.41393499512718,36.116078789494225,81.52959664943485,50.06737083355189,49.247089832189786,84.07886674581503,41.24028514423901,59.16779048499975,79.80141952411905,62.7350539169847,97.78258015993838,78.42615319328931,21.885660391151962,85.135518471692,96.98259200818003,78.70006131099872,60.17459599688273,9.042198899058851,82.71570875602275,86.03040740049232,26.402168952844885,50.60292421693317,37.36919019623335,13.895549632869786,77.17057875860782,99.25323869504729,15.91943043641436,49.304762614365536,27.709739933234477,34.629856776158476,59.1914002365073,53.401002416094286,74.84692035347011,65.5388676385449,15.131082700097275,86.12546546741797,97.00502756538702,61.582635580045164,67.56446182540812,20.753517471507386,28.34867037892268,18.387939896526273,93.98136082139101,57.88915497072523,51.89798382133781,8.741282223417102,59.04254971780296,29.353604246841147,95.76230953416228,97.62163090516542,70.96068258416568,9.887441320017443,82.02663270815647,34.94941242860676,88.43412308804459,22.87558056957063,13.618095908663008,82.77410451506742,97.55468253262615,50.63654210751077,76.98512583603761,8.730640907219989,1.8702081344339705,53.516844326189585,15.614156842909932,42.671184949589204,41.80721538391972,61.61072462771857,40.83566856115112,78.87392624431816,49.055379991021134,91.60275539122296,44.55695899764206,77.06692703450535,46.1975787456988,78.36377347021954,63.326674136840296,16.685635697140043,52.56727251046587,16.695144929660632,16.47022869461945,50.93754803501977,45.057283659267824,32.944208522606225,39.10038902196595,35.00291593702168,41.42892195976792,35.92080076237673,9.639592204374559,80.39236588791083,40.87657468120571,51.41352170159158,57.91031307126686,6.109749367787243,59.99845707953263,17.33291460713957,36.15111098628234,32.58532725541849,81.65692856805975,34.69636605409988,89.34807373002677,41.67339068260528,14.814172873581876,93.97196499999383,84.50220160843742,13.469339533398594,94.152551658559,87.58863881356143,39.07460907876719,97.6753325841353,47.189376796533914,88.27829586975223,48.625941394392434,15.70362992757488,29.195991515441154,59.8279712836737,64.10048989643256,83.15257616624308,22.20084546581047,0.8875869678325543,34.93974638555082,49.095523094366236,83.56596683748812,38.3192213661928,79.74194541213689,82.95538319257885,47.45046954001884,4.996515718706673,25.968943842673443,63.74270582322895,56.051900749705595,64.7107223063941,99.73179325922607,28.123871944505975,40.40810725692106,60.5722544489145,66.72616889555498,65.64001528622484,61.094122006612736,30.970750238097732,27.64792674815656,5.301943418089172,34.12946415811048,38.171525213519786,48.8876076048668,15.130701122311752,25.407495327250686,56.83596133606851,69.374180040389,81.51712445643129,29.190170003714655,23.86023155835192,72.71868642839783,3.873864882442657,50.602286999058876,23.424508478251983,89.90348403530628,72.95239650114735,99.07124157213383,4.514505136643621,12.370651979287706,58.119127861209286,19.00558903536401,12.388800554903723,33.362675114410436,79.9919935201403,2.2169304259130995,82.78807460245474,38.31049034313829,93.43380485784587,12.371769291282497,1.7071498901441995,9.51062295552595,84.97266392117554,34.52976221163582,73.43934554928015,63.13422530997676,55.30653240571953,32.1069362695512,42.22766352759359,27.406186736431692,25.05823850563852,84.13712572463709,17.389386817331285,46.03341862571257,91.71775594115825,71.9403996514339,40.69020590811694,41.55331931931088,53.46288769015406,42.19971728815135,50.27909784160718,8.13565046019733,13.364472477871537,37.077538453131076,74.13768074274286,26.72610957215371,17.226496823598016,43.89063547366507,60.24995393207868,40.49729196914669,56.09046404733727,26.638613158483228,24.313500127963948,59.94305691201725,15.293106423266467,20.688660196505417,74.02966191869407,83.45611079171864,61.515647834022225,51.63872380320383,66.32067993771176,22.97814140153346,7.96387418204727,27.93073598983198,95.81648044077829,9.03709319196706,56.028555337689625,50.89831876230143,45.931890511379194,68.91863125734716,66.78101173441739,15.320100014184145,66.1512512914194,4.30139385274334,95.15433641501775,75.04003910991428,51.975283498906,51.539293292122565,84.07189126005764,29.675964011247412,59.12464283203571,49.709153169680874,65.3277612699054,48.62185632296173,42.915300195927074,44.634717196119446,25.24862065207486,70.66371764696751,86.9665373809154,51.56857423895528,58.45499111359138,90.4939160115101,90.9413155138229,46.00783052093501,93.48504958309583,12.005120385243096,97.8140188809173,59.301973043314916,6.897940752258636,90.88232068082263,74.35170521657545,25.337877100773564,81.68759801267672,50.51066300311082,31.443096840937056,36.245496376120066,28.45082825915164,91.07617392182921,56.396885809361244,45.55526680419156,85.35414965726791,88.01529743620642,69.06993944208854,90.48867243801111,73.50711529189664,89.34096110659263,50.60625537194888,46.63939598250594,42.70052229630943,65.51546514451987,29.61754457313892,53.47675808396042,38.347571525932125,54.08460308152926,21.19595575265958,96.70341478134307,72.14423526118219,4.817487109539242,82.77322498481108,15.580305904649173,33.614058750498735,71.87058023742048,52.546637442248056,92.08843350878489,9.711909647551774,86.063952778169,2.5497098080005443,44.062437228597375,82.30510611420827,0.13467705440443067,52.496381424132665,9.13484577387359,53.220180343792,59.64611574642501,12.202173435140063,3.545571815009696,63.10292770487798,79.20925947311592,19.12580182886948,1.6433454573881123,60.37183162958537,50.7361257202827,65.39381050464392,71.2887043030627,36.71100907750079,70.24471251153867,88.10523650925326,16.118162248981317,54.425204796321594,46.781008706881224,0.3532728385451156,18.196687137203217,2.917413080783038,29.225412326230526,3.7304266497637517,18.584254973280135,93.91578320377101,7.9505250010524104,90.09276817500289,34.447954609092136,9.371834143575475,92.24793945427632,4.485278639164758,37.07116130027537,10.559300862159349,31.936385262056653,71.25833519460022,34.14127493710044,11.592354428436892,60.28943565264093,38.99101970921011,62.253149344504145,43.693729347670754,24.419042433316008,18.86294724314964,96.39103030214879,79.13957692326655,38.05560518317667,69.92130168226859,54.95422930375388,16.78974441333303,47.178914186702315,31.749163852968564,16.10179088831105,96.5777567911752,17.855364342450642,6.457101046076574,9.411636221965392,72.76555795631407,90.56192959513945,16.638626452171923,2.981756489893439,37.33129939147837,0.8803497319611053,0.6957294640579925,76.21027131741604,38.22547988742486,51.46160726064893,86.10913120330291,7.278788789598279,95.75293311354929,19.924336286174327,96.3630100051502,38.95391813829342,65.41680121910983,99.73024215180153,69.69016024468802,94.69646598382698,50.082938254532024,30.50358504054448,99.14848950467862,67.80629336712578,10.487561821528901,27.223738050513724,34.913484076401545,43.92664173703659,89.56005178945921,18.557536306789668,61.12021632948152,88.60813357976238,25.302205471590568,43.75383672389578,58.15087701759979,21.618783310483447,18.44392363712245,30.513487346204027,93.09651432682142,47.38347225731526,73.83720920696898,31.584667668392864,12.455972957232408,54.75995595911325,57.98101112002866,43.25172086027388,67.17361172854723,68.81341714177768,60.70459871777574,32.759716841617006,95.07752589066014,35.85732382445555,75.56732160068366,69.6914341094977,10.495907895213785,51.9868789646742,59.62215407552633,13.462281801604348,4.91345360417248,72.86803687237952,32.71622432520821,35.421890899092325,14.282048059329643,30.122208790386928,66.03344301485082,47.949947338227275,96.3698326372296,98.99647078568377,84.22879640906687,86.73839209934795,11.084186390843719,91.94441346993847,10.206272940675099,28.950956699531773,59.865257169799946,78.41831273048705,19.125617510067915,30.897103140584903,89.3971996737029,45.55454281263349,9.426297509004723,24.942302781516545,19.043719380730405,27.184425365380527,66.99088021966118,68.23432136456317,34.52651710319963,93.13891111361131,12.263376052408692,41.26715416939112,76.62242281022586,37.99086105556957,55.23939372227963,50.84405043417277,23.744887631762257,66.13473020370591,89.35600370463642,4.4717486071912615,92.86582432512513,88.97561540019689,0.6861101305916772,24.14775912064092,39.598074832861265,43.42195430687917,33.09208561037905,26.160341073828064,36.79691058721588,64.6155176920313,62.32772532723547,21.782864705840943,11.407345585651296,81.92997706444281,56.22006916494377,13.982082877591306,71.25412106668114,6.707771128426609,19.478829254532158,59.439446885775936,28.60791728464378,74.9303587587739,29.206029103394037,15.475667836304662,49.71633955385627,6.418074569414234,15.037245034440227,89.25316004400983,62.1894205309423,89.60653530557809,91.12724835978163,10.688669412060426,71.93605165181033,92.23682927877277,59.95233900678528,93.58575048308107,49.51429512336425,32.87425088866948,91.11443894055837,29.942940596128732,23.251981675342094,27.65143734704367,22.160711127893297,59.320468948331694,24.257308619711903,83.74546953295156,37.874684994725605,65.93321057728939,86.97352717631532,27.787705805438144,26.211669215857157,85.32647102632716,77.03152885569828,49.770065308864375,43.28755283634859,23.825399393133218,16.671166338877264,41.2777543655415,89.16339226518029,42.70044985344936,78.8358378011414,58.55226773182123,83.15000661041014,14.042014428959904,93.93892595981069,48.97628474809215,97.655882658216,96.67496426915547,58.07243967665511,27.046395741000275,35.90063021943709,57.29370569947591,71.71797394117166,20.09068389986427,33.81844943717087,61.40920672921914,61.49453883070771,69.03376608397784,58.805332086852424,33.25036317793113,28.016181255011695,30.782674072966078,58.70248449963551,28.94467842149532,31.036234022385546,37.17972831704126,98.05357212131808,2.896183427730714,67.18869069915367,47.69275154464822,73.29513507330196,10.751294413774382,48.97161325709815,51.510474247346906,60.012092209116496,31.718620050294444,30.069765173217345,77.84126433287994,12.67091571568486,64.13415282117388,63.002573718259846,73.41966509881786,22.595442172376224,52.558376115795824,35.611434083648255,99.56855317507309,38.196062508114835,10.729178456012034,81.40961064146626,24.91507438457844,60.440919993270036,31.75357223869032,41.83915521698992,92.86002366651286,20.186300182855987,82.45612539889812,73.87839825295315,84.79430765019967,33.47732905623254,11.104078430118502,3.5052943938051584,64.32841918643922,37.70220630842967,74.20484208457155,82.56506604478142,29.54966635471652,63.706103595111905,53.05299877818111,82.01384291604549,3.1916443613557166,94.00948606330081,87.56807365907545,93.80738591773314,68.84044640518994,20.159004236495182,21.644867210276185,18.067630770476562,82.69143583852187,66.1643460921289,25.085085297789945,6.520311700053927,19.142072829402025,65.61744443425212,44.647922852808186,90.91582728884215,26.03733598953718,90.45949795746606,52.25153401346879,20.664207478829823,70.88639313600315,34.52990642770014,79.57662010567125,37.73087251370182,68.71762335792917,77.82611613266417,10.472724646373255,76.22652670910423,54.705405924888865,58.809006401874385,14.250002309233178,1.258058062993761,75.22075102319201,84.42957347188414,11.476593363799237,56.614574356676215,63.294713768284524,87.6862128179829,4.884088785515683,68.19830819362292,36.40583844611541,14.061053157997494,5.404540587578843,6.918880909375291,70.80139606558191,8.20871548966714,98.15542856969857,28.18742039461156,49.973255624315726,72.87504139947032,12.06068800792549,80.9865521966729,1.326820697365061,22.989249799835154,68.44036217419934,31.71717516933046,83.21781725873566,7.345272082616805,76.73410571704848,63.95712235675788,1.3024600151697596,47.07354415805103,62.93185274654084,80.4809983133868,15.214212018233763,71.91561719351557,42.034887938398334,47.95109361799913,6.344768950694856,39.507562387889614,26.567503347211098,97.44072018881761,4.184171194379671,21.271219044028967,56.415874962799904,81.14047810041811,57.20265009154271,95.63128884131652,49.36227656320335,59.30810707929328,28.161639042725117,31.45098346007934,48.70588695768653,69.42437133819381,86.97281355671707,21.850038700172124,93.6780948773304,17.891708134335538,24.56633575668755,85.65545425356731,49.165464696591634,48.97193249048618,54.07411173501766,44.392414441447784,8.671731989035148,0.11864672931420905,45.89995646588487,39.768178210943596,98.66292864546614,12.135203627452873,90.35217685784423,67.4325810857911,51.807654776043435,29.012010617106,67.28833587963403,38.416584375670695,18.037379945725228,51.74170808283187,24.87732451355781,77.28694747229851,66.82245114852373,44.68137613836537,47.15926909416845,11.841747991659767,52.89001017666948,57.89361870548696,88.8277460017487,18.236793873557723,52.06562185079739,58.28668600066611,72.40625484017312,31.809414868138685,84.05896366640017,56.58447982433146,76.5145506384511,47.43216248007867,71.5945029924415,73.20933419353382,22.108632579813147,73.94937366413174,94.0638158357102,94.88844700343017,79.16354209648208,32.34372613723423,80.66258803870295,45.520009324335255,20.807096201775444,79.83333709088208,51.89950590949922,80.61557713159586,2.056343866394683,31.56640970864306,39.54717370904266,67.9687082948679,82.69972517403103,35.36930504285565,58.2973221879867,30.553382515307504,3.3902441601597055,33.968025007801884,48.515657766022734,42.95329094880736,55.50163907441355,69.21427134510944,20.68618489306343,15.020052081633494,21.24039012087131,2.269065492867295,87.72540819671455,41.598205519732446,32.146221385189044,8.866231507713051,84.76410267792212,3.5085614926093855,95.56307427562115,59.03937078448372,19.22017063291731,19.219388620833765,61.42566359625305,53.777166253053366,47.599229848328676,5.1303982490515265,44.77768462219227,22.28559058823725,47.38356514009929,23.06464475301332,15.438846607456579,67.34482697408224,27.255849842587555,92.56577043109282,82.4289251186066,36.92816796802232,33.3226341224736,98.82959763981421,2.752222148916461,50.129472851785415,0.7876821433734582,18.256922591835977,8.086083487236861,12.923442453464162,6.192316476553861,18.691060648576897,61.19291147343214,79.89164798313067,12.753523285454637,5.63967945202446,97.83093759660645,69.87767861614856,78.98787721657106,58.7030310758818,40.95292108380375,23.788155469618356,44.74530815446764,45.033735825009934,80.34650874847837,55.10516054257758,52.84720795871378,70.84076764156342,98.02019649043372,21.33659752568271,79.11955437166192,75.8563006418665,91.13602558438461,75.75302121550753,15.935440597120332,16.97723253693034,51.481800141659285,55.501165988403535,65.8045285707305,51.626163831698044,5.065296971984445,2.733202471890306,76.74127839901139,74.27394651606166,56.917939334970924,14.495872284470623,87.44296765758887,72.91780716784014,87.52660617796278,10.991764358962264,26.931369489599323,21.90591501570517,8.443137796057842,0.6974601988439022,36.212717385452855,74.2685515233074,65.01082284495799,45.87990476649936,59.775521741656554,89.84203418104087,61.401924250902454,19.75826846173675,51.110449399779924,92.34058827310693,38.43356800205979,7.0466079418135426,88.83328874662261,85.65975506380775,28.50719198254995,29.60719588480163,96.33859791089982,52.29522461295723,89.06364452611896,94.98655203417985,41.42224881871564,87.86181193964467,63.2527096368574,58.821993733996024,44.65857763025044,39.085479819457035,67.82265632119694,32.709276240252926,80.11803848474376,26.43470754886793,67.81776615908973,1.8089398806044876,94.04471137012906,99.30346155655975,95.13049394557702,74.93106493859759,46.89965959880414,31.337420734661304,46.74459754983765,81.01510875953169,17.83085237933273,66.82749262834172,3.4064364594048158,25.96587289942507,86.5199037642946,43.38165956186105,82.14281898191854,81.21446670139599,34.128699084030934,52.196606120284464,28.17555541690905,91.7483204579476,17.531620252214275,7.775815002567555,78.42147675810118,5.304486623323035,38.905346969638465,20.227638878010644,15.654153662395021,16.496196981250865,8.142428422668358,84.6999082273796,54.811055834176756,3.4325072506124155,55.828679056927655,15.350773142192386,22.432512544096994,45.536018511588324,77.8137849414318,3.5219666160920315,6.6805516287581685,55.626111422836246,37.12950923308903,71.31693235388134,20.735902251983806,1.980123435283665,95.6822633146343,19.760911765755797,15.954380326831064,39.210950229000616,21.813423580019066,45.962389793739845,22.609537522288647,2.8656911965257215,53.41344019473706,72.70458669796662,52.84811559732685,24.604717506148155,38.268505420754664,14.130604188382723,17.060703510441687,55.93161874689986,87.00423697377431,28.592276000200844,55.47676327453791,94.91431578937626,95.94322382520754,27.75660697867597,51.851488651837585,77.27225560394557,32.68561491700116,23.34565264563827,83.27969984909339,98.82392934898854,69.60366860763965,13.548568920151416,31.156306861458727,74.98979313363905,94.1744923874776,74.83791540206053,29.640059033899966,37.98225061135071,13.604852584617333,48.17537165800447,75.14752255417446,25.888802487705632,80.81256724561035,87.77192258732781,90.85813539777769,79.9262094292619,17.497962555490474,17.775341925424893,42.692847551359215,60.596242712330096,32.96405062002273,67.75458698789593,30.734415025027538,82.1716784513448,29.993514894821427,99.84848821104326,88.64499493307983,88.90914929698187,38.334443584221525,41.08306504083298,66.08745154400654,29.9964223619384,84.52392453329226,96.79730512667362,31.439060152276078,97.38555943985463,29.863584684787924,50.14211116708146,94.01349783454422,50.96540178987252,53.06739327477096,41.11456587324713,55.927882708006806,46.7359257105198,39.34134881989721,56.830410168879986,18.336629691686113,1.2213225127921667,6.763487788483779,25.76732892655571,24.50153095505623,49.936157220525146,26.229095605162666,2.4148169791559204,94.43992571326115,46.626106101857026,87.5640189767286,17.621515339296966,34.50111207309369,32.85339488164845,42.9024944702394,29.44955665083786,94.60010283304102,17.154249942990518,15.351964754363856,97.06241648957803,71.7001971492605,59.44205071210502,79.18642822113976,63.61020533349831,87.04835910456248,32.184915901174534,36.2216515104513,46.37337757581482,87.4726467114402,97.69286499610054,44.921845277862104,7.385024811517016,85.42242729812101,13.644320374155228,73.09280358754654,61.85286571430958,44.97770500308667,42.26737127887459,35.13493640877613,85.32793254739714,58.66317536946083,73.93377225995027,48.89526285641557,47.78677863884796,35.95381518859724,12.987515544129291,62.30185755759001,10.076788700117245,15.21601346972804,6.221581415892041,95.73302027654131,1.1850455577777974,18.977253324464925,14.262600983375906,36.24259821627314,47.65731642916909,55.138475072239935,36.492748520143955,55.000848620987405,54.8364284592192,95.02598545548682,69.04780648964623,1.9460624980027763,68.82032191985158,42.71670381328907,49.204014304512135,8.97566971706648,3.330109999548414,49.017872776463044,75.61942198212878,69.05628650972378,72.68643698517567,20.451835019573306,91.73332088532288,4.493286627217441,14.632911884725154,65.51348118767537,66.65343186965977,84.03322985042794,71.03323507089182,99.68361640047817,20.1681349023362,21.29534087701501,68.79795811621582,40.98445427140963,67.48683984493391,1.5145238411883089,32.93266739905426,90.20403309646723,50.39415079840245,95.05099574325763,51.06574966264211,55.79346784516179,3.7566086547763167,54.13886851632985,60.60108801921098,75.2073252210397,46.581425760844944,1.7039808904529274,18.68452643097389,42.845588483770335,51.409461850310876,72.38775495949629,99.70282244452453,17.856684619165144,9.747004716013175,1.4474394839759541,36.242619202484846,98.81860039419388,59.12378269403785,20.321538796705518,59.65644854618753,23.183786411085137,74.17270697731672,54.41347269813483,23.204527245947514,5.411631735595868,95.2719146069119,93.7301719930166,79.83152279254904,83.66480614119538,80.03954477866725,65.8413971207019,75.19326610713473,57.05012008715924,84.85215935392014,27.036814153934607,75.98615596330588,23.86212309195229,76.74266403704941,79.71885600531397,90.80258313892476,1.0783514802254812,47.47358423254623,22.078903447496913,20.323167147235786,31.826982251387538,7.690082779394524,36.72748397433744,43.56384006439538,3.7260904624826563,38.562180085715724,44.809981444375204,28.457403466268982,56.64246868201857,25.222958836666276,30.017884529248718,92.31091540432152,78.10681676624665,4.516961018899412,1.9456236911255198,47.46632769801098,85.10438643552021,15.841450347837306,42.86866672690069,63.076947154205676,82.3453392283005,76.87339013301369,17.999943462911716,40.23657710330896,19.464942307866785,51.584605594069224,43.81483575564792,57.76329827883412,99.92880649826795,68.4574045516235,97.69177585850046,12.553480740607547,24.76196857613879,50.43762182156167,32.93922724841665,24.105560161104556,69.55319370549357,49.39062998291438,17.846258493302503,5.755940391798364,92.9036741485149,91.41815908254787,52.42154034024479,67.4309008947252,71.93775147372233,31.782903735020472,79.14960144169962,92.8943815444672,25.651532060844517,65.16242687363449,29.153455505059313,37.197816581469866,73.41710649866074,14.606238737200883,18.48870460505677,44.817273300540904,84.8267020712543,44.60190696021922,27.931693278755233,48.87079985802474,75.73078525242028,50.457758405631324,37.79374154437676,70.70982610795372,71.12207517054642,55.60024570021156,81.77637898135673,62.16636010716565,86.88059580786228,17.756795369240052,60.36028963957636,3.790649118729461,17.82729121179297,47.217540486218034,66.06452760952536,12.783478536680482,45.70324657105586,11.912701458446207,10.278191204178322,26.587496030291312,57.29399196652405,8.990818022628632,56.97647616528529,78.60225918971197,16.380138932953635,43.66752464203506,4.57209310443889,41.86172858876978,92.10684367066352,87.87235254861292,41.56181794291483,7.531675379889425,97.87248152844795,3.6083505455176135,19.657433727994643,20.61029580181547,28.871057171399293,24.158273516405547,55.06964722794794,73.61684313028967,24.599742795336777,2.8362018343591977,15.143613433116998,26.052891936984636,56.271678168533754,22.984569231573936,77.67503242310877,25.567833610931935,12.296353583213747,76.0917128512525,32.72291386071424,56.476069669081866,47.71543974657203,51.51669931259357,77.75137881081406,45.56334919624744,69.49439719056952,6.184534564457566,17.742653674335486,59.00251362578894,76.77451329522422,80.18933642703256,30.105860607337554,78.51468533282976,7.11831895808861,84.07532528040586,96.26935190593896,86.2282179992963,87.34325560097643,12.289317110145426,52.1437062252803,76.97440324282245,50.89618589645345,31.784469031475492,35.99997321344185,47.843829331666875,58.601661157953075,6.584670441913875,41.577865652749956,21.079318590172015,30.595418127712758,38.43423172208874,5.162639022123894,21.827148217997316,65.43082805411208,38.19863597240809,3.4464545286442716,43.58715945292714,57.77526159982207,76.05622954024433,42.60699146986098,73.35771151616599,99.92937857630822,78.30192815203716,63.237788545047145,12.278929746552325,32.021547749384794,31.69914232710599,70.25580775637859,37.20581867390377,25.99890651430725,78.62813307909947,96.44858304172452,59.23644827610469,84.99359939071,75.98025643138041,65.32736560673116,36.69899187645398,68.39123742710089,37.99984063674289,69.36488672992414,69.05948641889708,84.9667548967976,77.1883902164038,27.578340692435287,34.121751741748426,46.69898324732624,6.550229472013102,71.58479008639326,30.142030272015674,81.96818874644259,26.020366479271505,37.76260290635414,36.56486007111277,74.54942980467543,41.86018166789792,55.13866470073878,41.15126072227425,71.0178359818289,24.404883118463093,37.53077775400612,50.95625100967368,52.3036284590325,37.892280512916365,79.87243288311642,42.11505282094446,96.04552247504262,43.215371852461395,0.5442274637782907,52.8212438321759,81.19299233966596,32.538641939446975,80.99513141352693,77.49243291608576,34.69088343873583,98.25370778085504,9.110352420545631,66.40879923494967,62.6219659655496,72.89525366707205,6.391321000881344,37.120325631227715,61.93966984975353,9.138329368767618,13.960924104823125,64.26094462404387,41.92191113797693,30.47950320990196,86.40259769520522,69.63569902282931,79.17314330088264,74.996923534681,93.13676871384773,30.74151965624471,94.04087051656248,23.451265544269752,88.91087153842254,2.8990918388722364,95.78964749292575,70.61359484138086,33.618504559637984,92.4572198302126,37.212346721609265,74.38924683946192,99.00507860843828,87.3082830007344,43.80276497364722,23.54267405181418,9.16828260947824,7.910810282228065,82.36171756007033,78.97865578238567,21.69942741844627,50.95785422234117,85.95984211079501,98.71979403777067,71.87080947154986,38.285935978153,46.18102026764031,84.89988144202736,18.80853521004726,31.709845261549695,55.43029799739574,48.41979612944501,77.4816457312194,71.78470876488396,57.8582144558662,34.76958061777148,4.810155247413917,14.599353380853053,69.84349098439286,30.992372254890576,10.084027472779422,95.5691735156927,40.416080340985474,85.17642160359159,9.161595467179994,15.495279274376905,13.885720643299626,8.425439651436928,9.278974399725781,57.96371108214843,71.8055471901429,98.39477827036706,75.54218600847926,78.93771789042852,87.79713101420825,65.06873971547056,19.525557554719153,92.23871230423006,66.33529254946687,56.913753106127764,84.14372643649114,94.22743734079322,93.92723857082773,18.837238746200025,99.28088294373897,48.817651903498046,53.20762944538242,54.42954852154725,30.682806548892383,2.1258579541360567,4.793903818434275,59.04441483262028,33.32703704469826,58.76395982137266,99.98387588232467,80.50787984606643,19.61813969970513,18.75459074221655,52.75874907159752,26.013440121636854,56.52528600058952,11.725480037529357,80.00084508755512,16.551813471378463,55.15298142952959,82.86123088491301,55.52914977617734,86.91930084650478,61.728619520893865,17.042893757788345,12.16850594002028,4.33487253387227,7.0126962220634965,72.11262188926914,82.50053124191443,3.7766129782027313,74.74441916167002,61.34926723946964,17.355767041792937,89.51434503957697,35.72987653135529,51.90799993620493,82.52076416094715,55.790497980861545,5.276611847367219,54.76837988552544,46.134404702865204,66.48232010072017,52.89166102244345,51.43240781205467,41.607469913599836,66.90083493448589,59.76351420616949,51.15155952143247,96.58358982900184,15.152334826418157,85.09306540038834,17.8223974379905,49.76345079849502,31.439237633949034,15.796928475089555,98.33831430714766,69.37230316641192,59.23479834005406,63.26919289146957,55.00670349973949,64.90930196927935,74.89594780590082,86.9679609751655,56.343196806669994,2.765100514450358,85.79393607312892,95.75997243989828,4.187332593018677,80.34291879383139,0.5937437512279709,4.441463261222555,16.37357548190339,77.95445848482339,31.30712315861611,5.551369941186812,17.314265974978472,91.37832516053955,53.53718076184043,64.39000346104616,60.846915522871605,34.962122689203,11.399091555863816,12.805011092701069,20.18751350212602,46.09007568024297,36.591995087961024,20.38012031292994,0.9831431284547332,53.767409808184496,96.26088266259345,15.152693166814512,80.87962976958548,36.51302095913985,64.56569941817393,65.13348082755917,63.858683950463416,97.38594589330887,11.501582016420764,96.54723838213489,9.582571841217103,97.6007686493683,35.055239017589834,63.65581834509242,48.38245118012726,73.00406701909017,73.22059911523768,78.83891875531488,7.398502692718911,60.05195436358481,86.56207705242409,56.55054531696004,11.938638480222751,31.393399795756217,28.5685959977105,4.236692286048882,34.83122382327588,44.58987533726043,29.21179421597586,70.34488838513052,20.773474210291155,93.54062779770463,71.56323533189662,11.65827926771743,90.49825043553265,41.91031543497425,12.071897385833374,68.723997113925,63.06491533521279,93.65816951333751,2.9757014885057553,88.43178394111128,12.212698180304137,29.599337166218632,26.046504991872943,40.45886026170336,76.96061002067631,94.13496971395351,3.7254975570811366,6.659531146483344,90.15945761962531,45.49388600260076,18.891361540471298,66.93980159523873,32.29378108849805,16.169058112132106,3.6396037238556778,79.01141138119982,97.24610168191836,3.461149186529877,95.68868893948036,57.51630960073516,43.47733140712995,59.005930137674646,42.87208685326651,9.243507602651436,72.54446598365035,80.76749359295192,65.21853222874171,47.54157019386195,88.48491960060468,2.9201433219862127,15.472523097033509,72.60808201193743,55.26052772147717,95.68424661525685,47.71066580601774,0.8542183314102614,50.30562685345319,85.22584946346507,18.091054821592788,49.30269638156981,19.034774221262786,99.63108036968097,75.13638391666703,62.21870865407189,79.310655095075,68.28558759199575,21.894223356339072,86.64082035356613,78.83015137341575,96.44419439048797,16.467750725400766,17.24367300001548,48.66585935747656,39.93918811406034,77.84311348124191,27.412863706610068,60.874629156240324,25.920015224199876,7.324486096118354,36.5705562915702,62.465852950072865,10.606731987070173,37.15983790861348,71.0616796321284,29.32984595415544,88.56415133632841,37.48285875858846,23.220504595396495,28.71934477061242,48.76143215975778,46.19029081469035,23.802949790662197,98.62286455746391,78.11042465708773,2.075977682358532,1.1644430691248653,53.238652936779786,36.55222263516584,7.452136266291842,25.19241884483724,87.7027068033919,42.19873934053938,9.659071298159528,49.28914170254997,91.48364307658461,72.64944867345345,49.94916221133602,84.882055943173,63.92889496345015,62.833998701072325,58.71274472470528,73.67474738078805,75.47187857043073,84.94612842639532,63.920795970023825,54.21418275534303,4.046578576416393,90.25419392376938,66.11047507380201,31.50712153570331,74.02732199962622,11.217722052724765,92.15982055309226,58.85814410002473,3.7360631053030224,2.208590042452896,87.2766000929954,16.63275038224722,96.72228973272203,52.3418536541221,32.763152919754255,81.7255058072896,84.1098456430079,69.77544145853165,8.025468654720457,48.146801964651345,92.67465488405044,23.260981096677735,93.92134501763145,34.994616250429644,90.07417321256315,34.73298265199672,8.069679145817476,4.34685397123461,6.789518710594966,25.442692257665623,88.37103307287761,94.77485800178049,72.61473080167713,12.741492853238324,7.783164566129863,98.0310493971729,23.33510097391057,69.13185934351655,79.53196383915198,26.85473858401751,39.150394952430325,11.84280396829578,92.3108891884105,76.6036948356137,60.78866552377787,8.019110958350828,86.47198497161118,11.493976804146723,18.72726556968358,99.10551097920745,29.899858619980215,22.39463509658076,70.15029804305121,25.341734434908915,97.39187227908155,27.932677383666004,9.962040678723483,90.9749657033736,71.82610328533532,84.29357584257738,57.5325106955786,11.04117322161141,89.44183449749342,80.09820931158747,27.016976980771943,33.05105639026309,64.46784113814695,70.15797408993208,34.98366587186851,15.770877648363435,39.026655091090156,55.01095566018258,48.683803319283946,36.64862754791659,26.945665497303573,81.71826413147033,36.80221661264022,34.847916603843984,40.283880447960094,88.18650182355522,23.03768253964519,51.89308539407013,80.81164595341615,59.25686839758097,25.028939497313896,22.564439840773552,61.0938122026921,62.542905984311325,6.972083227215354,16.878295938354547,40.15835571252584,29.65675572838593,61.980824179611005,55.27183223954426,39.258458953847,58.21599817781953,81.26602078681853,67.55742625511223,90.77530720348166,62.72049133304788,52.95439483449319,35.3174147419825,39.28331648861969,90.94507858534244,28.115957720040797,63.16544444524137,44.30776165598414,78.62253875779018,30.967457740661374,14.980587032325642,54.364753372080486,59.568772176779994,73.79191392871121,20.6008328005193,16.69701046526424,8.984818025641095,11.578102013979564,33.243201670448485,67.74385499701935,93.42283409694909,4.561357029160229,62.02798647783372,85.64980336015346,23.925986580681425,22.8731414635287,41.993998865746875,0.8569115569342034,97.17636540685683,61.86023790052255,3.625731313437175,61.30377601552309,65.68236765417078,80.4551387531195,93.91993300479469,16.63357603430403,44.85260280032205,54.39907478292996,56.34242251017597,41.89262968340368,9.44960488090617,24.362355367658505,44.968509118167646,25.9894062518496,12.699631844972536,41.411414168638395,45.67464557474601,54.27693952291457,72.31791073943204,44.985859900231475,16.96397700870301,32.868923938408045,90.78158750818554,59.03001113988571,8.918712711519117,18.493164407814522,18.307507685703627,33.843820411373,51.56081697985309,9.857819897167342,56.87821245787246,20.41175273235387,23.77832623895726,1.0636233877416523,69.1890495794749,13.69025940345665,46.053867885516,25.173043972361807,31.315118961430954,81.1947093403555,50.03792016670432,76.8651511235116,31.741187525448765,71.03975060124804,5.334730720171255,91.13055496949269,2.5660970023738128,39.21434807616645,29.084004106242322,77.22424033959726,39.170330409174504,42.05906235909309,35.90417190340891,78.48617651378076,17.021466985962707,36.47316416099855,51.956358360647634,74.91713305160587,6.351155935530494,64.88579774029523,15.645690050639038,93.31939360342794,8.415858712910529,26.999797472684108,54.593975339701416,96.27377077474634,13.617409953559424,0.44168534267341464,66.57519361451408,34.467017758504404,77.97851953730614,30.41329124721639,99.35729606759028,37.34964473496919,75.06059407884068,6.831605937047602,68.67382020407605,67.4745971442537,82.72029569032138,73.54074881167718,68.33700304784968,8.099992397523692,83.65185870871156,94.49080844744064,94.16608247315163,40.68528178849813,26.18818575006484,26.158035291868885,61.149565379943574,33.980367647523835,87.18033571430752,98.81814531751361,39.63244763848434,96.18564091817932,96.11947792856594,43.097150324404666,93.37286858957083,61.138380333792306,35.608759743512955,14.39886133210775,40.150648258392216,74.52887527518828,9.741559831949232,71.68364053440672,77.55593417064205,26.816502343279335,58.148282686293086,39.210080762232366,39.40039823381125,14.323531885971285,6.788367869475332,73.27749700782614,12.1127024398612,59.91099963055012,70.7830964409996,23.17753335900308,79.03993359570846,47.79406674201413,22.91149196201846,8.436423829006202,52.77637180464847,50.910964768622534,95.35027585655877,68.7543484498414,93.73933920559551,96.76468196113268,5.614750240634081,52.08929557837996,88.87208403996857,30.52447953412677,19.340897142304847,83.27037375433862,38.3369875534506,32.30378388220886,29.897910835124975,44.68716690579263,52.43713458618872,47.84279937301724,57.9874435385708,14.083595152084861,23.439087458303465,12.228511393040343,48.575360986897756,69.32542867319748,65.02718476992054,73.44590095974723,65.02328826906268,37.05066113061929,42.820232429274185,15.807697563950839,39.365148419074316,18.995150319166253,72.18307672389695,85.87010492528854,20.54095147614401,26.6961120979616,24.337456490758523,60.15971499010592,98.26670801096962,43.24010969451469,9.718697089356565,21.548130055805647,23.769045337472882,25.05827322833738,8.250105365109462,63.35225097736905,74.3019342554982,30.218786924500705,89.61774357606535,71.96714365837812,78.8959883224733,68.62312541364226,46.65813170360793,73.08872434430434,45.28270159175162,13.43842402652463,82.28612033684173,50.98242375689386,82.01701326227959,23.36103316942332,32.164981289193605,50.11031327199448,41.111802256793375,32.58235937622587,3.3379134062036853,65.69620675814234,62.14799879961491,22.773610787471565,72.09897816665858,35.974958144829664,92.06614625683416,41.91837390715669,43.290152610474905,56.551669981810306,73.49476593196978,62.848530424030116,98.18192509810444,65.44427955208502,96.46254398726691,64.46495836850576,31.755274447038207,87.38279869697996,73.43328843019384,9.23952316209159,11.476044288528986,30.15084768331957,98.56304169216598,9.786783056034254,94.53299084520121,56.920325140605264,47.76500503480424,24.607725261637782,31.480712622422434,7.326842536627643,26.16347829787078,98.3297259932154,60.56424545494785,72.47158836601838,27.194889007842203,11.76741269766527,58.847285699081354,36.79377059984813,93.31475717860175,56.44127384139641,46.9140977841145,19.1917344562072,77.7428727138405,79.87652309288632,19.559744391060796,37.290682308748416,90.68286749070288,87.96359439942879,70.0327961288987,45.25367090861212,29.44021622485524,5.593965083639974,32.61059170251717,61.97899579436712,97.52277954270784,29.611765257510548,6.774908823125758,84.7544240207097,70.98379387909198,72.38286750950056,78.06099728343709,21.023819164579827,20.495105559034098,19.662545815257225,16.72423988214746,17.76555480316907,28.678434622700077,23.639777186170264,48.132777085009174,92.9126271732648,89.03786020981241,4.647764600503235,48.65972202322951,35.311508043141856,21.245515595629595,34.516327763218456,23.599177363302836,58.11567064091538,0.29044790671932663,31.747618949837953,14.558322319217865,96.92754042600353,43.53614306197399,32.67018337355194,35.62373689527375,12.072645630476464,59.38499145277295,60.25893706105842,9.8278720839841,43.867092506166614,26.33224250789208,5.768200244849697,29.25289165181252,60.568232874966164,75.44690194475238,23.267353406122616,54.2676476177286,31.39937123296064,27.011052837671922,41.3152013296024,38.648689471599354,16.159841436457455,99.26671019800278,41.73395003985597,17.597516343284823,11.214789596416786,48.049322154232364,98.0828101092102,61.649751000020224,72.44740248531798,44.64460737646102,69.51406051807967,26.443677586573045,49.263172123586074,22.854842501113414,55.57283626064078,76.06858359190647,68.31514944124127,17.36273125437372,41.62888637423009,52.26642156675374,48.68767511790869,69.1042651284591,16.804697011190896,73.62996718238217,42.423016163455365,66.82169250643798,70.5641521048004,9.849665065561164,0.24570413250036838,51.09664606341722,50.23326063295387,89.9207263248797,92.29006614881388,6.485899689201702,30.095866695039476,13.714231557720346,35.45856362863087,63.00458276730505,21.27979903690097,37.32475219637066,23.544848811470985,30.041877038500044,41.196790955107645,11.19800504277234,23.338742704954875,89.5000895279215,68.6891026181088,38.21864047704657,51.30128870833448,42.39859371603345,30.007517287600628,32.49152339699292,29.84724313114876,22.763102552931226,31.98903443016836,43.78405944399086,55.618568453170866,1.5107013240088007,95.81840777783405,88.03164837218492,23.566848079752166,32.337637989711595,41.07241907303904,96.71223425985842,96.23488631704014,27.857005732381623,62.64326012362608,51.93909160157122,38.89399111604273,0.4792840082786354,89.13091058499501,30.872996461509004,70.91333141718027,21.548207196473257,28.721611467043584,55.87873805627148,35.75380206374309,99.91825640974203,21.227417145927173,57.86790569699269,56.53770151916768,23.785857561998224,38.73883905183991,65.06153504884013,0.1885811293253048,60.16233731705201,61.55709150906803,3.316677815846969,76.4361803195473,44.13435698018166,25.255393328748386,79.63540362904557,4.843017980672948,84.40189870683393,86.25840206552942,41.79328216561805,44.5364430871819,27.641521565282,37.55513272480591,33.95938672071074,57.81940823787235,62.281899610038685,66.86965253377534,13.218179823041021,4.529549651603748,33.582110287466826,90.49283144550803,31.34365050836997,70.90758679266087,56.50950167204506,7.225964689441,21.25376624381985,62.007269712064726,66.44973039305468,80.09586647232986,45.732826886791536,42.50610866321527,74.05269957182976,85.56398498044703,2.055538773945509,25.083589714391906,97.04617347013978,95.31131431614598,38.91735364532295,18.309042460518743,72.8392603522454,36.88999292515322,28.540738088859662,81.1776651726104,98.6395717128776,40.492524605416904,74.69796869787977,16.559691795913945,46.1513313194157,82.05520168871038,22.486131463588887,17.801233771999016,92.55767334752734,95.80959070281794,65.08692194385583,98.33678401308603,12.149385827403304,85.85523125140485,3.898212465072437,63.72185667940668,22.648515064290642,38.44016498062408,59.29611685257052,61.44157942551375,28.78390989151054,35.181554468473294,7.2786180795606725,96.73849618816273,42.33026992384391,71.69815860145803,22.64224177673406,12.303418455256832,37.59623892146242,71.69717807524111,12.19803828379079,0.0784937786254658,32.44689586647821,90.5133914468246,27.742781892049884,64.66572199640646,81.37781043541219,11.721313050942806,58.14887764835177,89.57760061213912,52.89389410954952,49.25111396990145,18.624079293738703,33.99283751166915,35.81470643750871,85.6993858891267,77.6913242902885,65.33837993362897,83.50339921456616,25.097538659544817,75.82138424454247,23.69719789946747,96.63158906499815,85.24248223411905,40.87685799778631,72.19999936645878,44.00306894174153,55.359447595589685,3.072339894132814,66.18142630916446,18.48301053123852,0.5404952573343169,33.01947550122355,31.365562025234482,51.718587751710565,12.707529365677296,32.01871473208231,50.974043668246296,94.30409336990606,26.01546846101438,70.92601169233478,24.62158645576007,63.77879640958999,30.0560882012184,19.62432781584783,77.4548696714019,73.4901501897654,50.909123458753555,64.89497279143414,48.73109879593611,90.67452299796516,7.943026071170989,45.71870589830925,75.28313838848108,0.1356849068938737,86.49191287037982,28.182271822677542,53.67051635607831,49.556901050384695,37.226153786191105,49.40459542558799,56.52715154449154,41.2652371528083,0.22071297120974664,36.490835739620465,18.989606130162816,83.64132890614897,32.50817469198305,57.66534998589062,84.29490069080424,87.6492867415095,14.142514335524126,8.975308336445897,76.88153109018747,40.443367451222144,75.94458089593117,14.080630052115628,6.983277593849257,17.940485478216807,20.90102202204974,53.07088492185874,33.754615943713226,93.9614045929278,64.02970313177887,27.18930862300124,70.27998613622498,50.404226769236246,37.639111178126115,53.5978757436047,59.854865219440924,10.474536855353788,62.229197332614646,98.86610407774079,54.61536106715946,97.38384013596676,65.63443890812225,3.0967388681241825,52.3461515703241,7.123456878187606,42.33205075342673,74.018754460244,67.30390258673754,77.96005019409307,3.8289360268458195,56.688374968302504,48.53870584577107,19.50367671519824,74.48025103202916,60.435459095522994,84.03711742008886,93.25064857238688,57.59680638400654,31.67659304620053,42.1540369896229,19.787801960794415,91.27245702739314,38.083232798612656,23.575809032606788,43.104788033286,62.854244059794105,53.09555386849796,19.580593966960635,64.43387845024726,91.91575077469241,43.80725194061388,57.81335651334734,42.01022357755658,15.487007612732684,94.82704402295508,53.91310213954099,50.65822054638007,8.83265959298748,35.95064476884635,91.71152239791854,98.29926472145956,12.082518026383848,49.15357487132567,71.55939185833242,17.531675502599597,81.0041822286802,0.035820450417356486,91.44901623620098,90.4562889795848,73.14748965433232,87.50375554056788,53.559583067917885,26.53377618468732,50.13516742151503,40.3203175742464,10.924397816201791,87.97593580001406,57.04459097750325,94.80928842937669,84.7102581951604,46.3788355616021,2.435347567283719,83.85332347816549,45.347858163257946,75.6632885886808,60.86820095688053,4.197289538540172,65.79547837921211,86.38402384891863,45.70400729185985,99.55018430637091,23.44735788342238,7.793435121949887,44.99228259962692,85.02704215296653,9.093295122605749,22.63220901513241,23.600870622518343,62.711096008896035,26.30454677669991,32.150162596964236,10.126780459412355,52.62055916608257,89.55939253251842,22.96895575996135,93.69713035763996,40.3347103119654,89.73870502014869,10.035270804351192,88.93972253512146,84.74081073321898,78.36031671891388,18.966510983822804,21.726911777699144,40.333819764552736,3.2997670339943053,66.35664874951081,96.84013407725394,52.00568862211383,30.78388295324985,25.198310006405954,69.60722866623134,86.32203299494059,2.1997003673235427,62.3349905144992,29.257817587833067,29.488838573316766,77.02547591892585,41.395515603274056,8.671433868950707,95.32888358118988,93.7871765865037,42.68701215092895,37.15990362886582,23.566432206676257,85.7935792918206,87.09661790260202,24.941146075837096,44.55641417359622,94.4929433344943,97.67872917166015,23.76077879372098,49.61370782020816,72.24569332010078,21.41261674587007,2.5694777060704665,18.63034106892828,25.337497645735173,73.14147669392977,54.36677310232827,22.480747339256236,65.99450182010455,99.59177396658436,72.94726676546168,86.45969572098707,18.698063599469585,85.74370997364778,9.915936256202151,41.55599819390697,99.7282182909334,94.81813385850833,68.64655315087653,6.738587733108203,17.79691498358713,67.55080180678988,69.04395893997108,55.91839962821742,20.478637247185837,33.93835117458763,26.345602766285147,9.396309809912907,74.94656181848104,95.03524043767209,50.84274236466649,68.12807058955592,5.9887895734883845,28.969198250852724,53.529854390269236,71.69390733058411,43.64107319904236,33.841961994429816,42.773486439333276,68.62103159128104,82.682068939597,58.19125694104683,21.34248877937641,70.85755470368666,67.55124530113478,75.29867817702332,41.19049488527343,31.199915920225628,56.5395120361476,80.78967056450806,6.323747427799842,99.66033060372371,35.31437580922575,78.13753681770385,54.83494428124715,99.17361972135699,76.5002682576608,38.67790386680618,69.40423504541171,21.52762897225702,53.70158367429381,45.929942542778704,37.16483744099078,20.054149439455248,64.18548118965964,34.23602264365283,47.02939866742722,4.243110631928726,72.71728772786213,17.873068442217,88.53508829995027,80.83253273895554,10.013712600048297,88.39719625766442,3.8852987844013476,47.29620755560963,51.49843509422587,25.929070100763298,95.12590232295754,75.54341494339943,20.233112091193238,60.364724790122935,39.98083070021667,35.27208109715665,1.1804879537181345,13.558510754997833,10.128914404603584,95.96969047391917,73.38020932389813,53.9971628098632,69.74068276393888,27.06724407918456,51.395715758964165,72.86928020311827,48.05992032884671,98.34866210702214,28.731264419648884,67.83944537511252,87.08924627980119,64.63492161360513,33.37278511434205,13.063311105617515,51.624146793916694,2.3874380533809636,92.09236744044395,79.47214381923709,53.66156604015666,38.85209681308197,78.18599237690134,95.8252771529595,55.37661676763309,16.895596547181036,33.450692536429315,68.26304206070519,25.844570591116558,58.86751538964663,91.40530189506802,88.84780394771542,76.63043727792103,0.9244037043669717,97.51624360023331,79.7490473598282,30.034284094033794,5.153672178684953,79.73507522665433,49.701989846523134,95.35234752693255,3.834155744112222,55.956437330407724,16.660111385096087,57.29226181543936,94.61296782222527,22.026159389423505,74.86912498671605,50.324068753820406,67.49085827316306,88.57632322480113,94.61716950523773,82.74083711402525,28.862852951351837,78.71535293473137,21.74387036673503,82.97435975008227,29.10643988970475,16.89033510464829,76.50579550337525,15.05642885780334,12.414977150135076,34.731302510853205,48.17567093746795,1.8357001174428844,95.33699876748685,61.3743342566601,28.36648072862661,6.2165581989182765,34.62468248460747,31.218065114527416,50.37176294014654,30.57584877974223,27.540530247672457,46.83526356949523,35.70036472177108,76.31168928705296,88.16189739658488,87.96886913641579,9.863937282716462,14.738883059254015,11.925854489950238,20.191308970047363,17.503527411308305,31.157012768356896,98.38748052371571,87.36986740008271,12.824716710130069,87.76695515940838,22.040156429921577,91.98614389799548,6.614309276834263,59.396900739814264,33.03033123207874,89.56986976681456,44.485004452286915,20.723194008502254,3.8514427708379095,59.10077124823822,61.931641930284286,75.36171513071135,32.59467265664724,12.193425545858805,91.95943983904012,69.85745782451414,10.505332069454242,33.19653764426367,26.833895014592002,36.15833455083316,63.240149546049516,22.412442795848374,49.743295529886986,52.76946895447564,53.34256905302113,31.00857748981387,77.58669617213484,76.71325384643426,74.09708637958292,37.043075575976104,96.30434183729882,54.32108748919325,97.92977751621635,23.326377368315843,56.170682926243565,70.43162615732983,52.37251014562776,48.118420031063835,10.000851149266566,19.816859557753087,32.448059754523484,1.099571056916604,25.811078987475334,50.65399455380909,41.18228828599728,56.16359473464831,25.001406644215983,85.10917739887638,6.963361054488892,46.243261928815905,42.68513603269647,89.78915976427416,2.281179369581887,66.87078852181246,59.926720294537425,31.257963114932064,42.40842898207839,99.12872671118713,37.00320983895604,74.32236033611173,21.681132669801407,53.905774185689715,92.04982766677044,43.341221451984545,45.32055844734515,68.55155091004347,61.282713734168034,3.5368425331902986,26.92014241492663,80.7634152809318,9.260550458171767,66.8619300408256,72.54960976127073,58.596018493501624,9.068146669212517,64.88215069124404,65.63586741555598,93.05624647294606,19.466771307945795,80.87260376504858,38.95992673740093,33.475432707797914,37.13043940149522,35.301527522506234,23.738274403815673,34.92317798747825,25.391597200378378,62.106446531447844,81.23993573871903,62.03984542972356,20.72271107658579,68.26543629657368,95.14961552429135,12.875930273437053,18.62323301778663,97.14216850333528,94.1869993223017,5.82782744853334,90.66006381285206,36.737939430320935,45.518600900094754,61.30048423254581,95.56658729952467,43.6851394380394,63.82369570667679,50.090937927757885,28.105851497690292,80.24730653327249,97.65683268763141,65.81614909514552,27.990012229305318,82.53574734516478,99.79643204592014,43.43930044393301,33.598650103295,8.78145809742138,27.39676874894217,84.83147257942049,46.6109025065856,2.5075475395276436,64.71028904924037,74.55832663293911,87.27182563271512,92.12624895298926,95.20005113948179,17.972668598654884,21.422726946248716,18.459890807718338,41.50118223427166,6.850356616305964,85.9950073255232,53.030968260244535,98.10959457455994,83.91151592178261,87.66383724383374,43.37438511897259,11.235093985741894,17.9203510067957,56.68564394310492,49.2105061696813,52.61383271382726,79.34593127985646,38.317201042417196,57.77879871456874,37.608170825740906,39.84396214391969,57.00445501275695,71.2381954293504,53.58623587103817,99.5611523340319,0.29834363777520023,43.47995941004631,72.78301175821831,22.885430807785788,11.494941443446315,58.61384522641575,34.16949998566016,29.703745760554355,22.823849271252726,54.52403265723331,55.00785945563615,1.34065130825759,28.616433264343943,84.30807962481093,82.86772813160103,98.96020249880303,98.22998752554558,77.26147565736031,81.20873238564087,96.48610295805733,1.4793527126470196,12.722074347299028,56.79560949977079,53.09373318505961,80.69910679658724,13.820277790418467,44.573660649273315,55.802864829666085,48.60329737266282,39.491705039872684,74.28030542346025,58.406698325109865,37.931482951074344,27.641886537641046,61.1605271989638,59.87553145779959,99.03945279996191,81.31052461880347,33.250666998234124,61.983326954839015,67.21480061975657,38.107947239038566,54.342300388367924,39.3210149476688,12.510634444357017,39.5164214071543,60.32690631929755,96.55852272997232,26.613758264564357,94.74531999647066,68.97250555522012,23.043304056727322,71.78011922080115,29.609374036071067,54.60249957156045,45.90526824286146,26.17690235074539,80.53653817518486,78.95019150304955,58.71904838368711,9.831388125274731,22.66301460761295,77.60311863657608,91.09829251709183,4.100288050201472,38.396973227540535,0.6268828463417586,6.16148041153356,99.33210161132278,86.58723608994426,99.99443026970044,35.829686672418426,6.8176456390437785,8.747441567142655,9.348091648954037,55.21097446030885,71.71163490865233,89.29042076648336,97.99491931259374,16.2911225320545,54.47076644404796,88.67660299682039,23.671547175444896,41.52372597186819,39.79337367601339,3.4803757813589797,42.51231060255589,45.80094691100308,6.059432582333136,33.830484803916484,86.29460199500413,41.19089557588509,79.34176921301767,68.90648047541094,21.925491223922933,33.42657823755185,75.64998356422142,66.09902958316057,69.99320262064155,0.03519953525407127,59.682319144837926,66.4572607001688,62.815424285098054,19.164725961284258,1.2906642829774384,72.63645666876903,27.10666944552389,15.757954299045574,89.8433612044658,10.83643480931854,79.82525809254795,53.339187190949346,15.888511804796124,62.6726881315981,36.72822319191571,85.47892561829157,40.122955158768804,9.640960294982182,31.410983101243282,20.90026450610859,94.42605801561706,18.969380824023652,42.43926229290683,60.37904728132273,87.38614019940589,92.14972398430933,25.836299839678077,8.320154437080262,86.77162081220253,33.15271649678822,85.85837775853295,58.65874276046071,14.453926169809161,49.10373131022324,73.2332781736817,10.370833476234642,5.723417023542465,43.14263641370967,95.57924039643038,9.656690383720989,60.77330706584225,25.319682126546972,28.67970520927542,67.12241707147616,22.13518047699371,69.5915702195616,86.84342917134965,11.572278940745429,90.64433236024139,62.846813465616144,74.98941793125815,2.413051544018674,98.5816200679311,64.32073593973433,94.3695950293754,84.45447860611819,55.14375324606018,17.343765637756924,76.54398035604703,33.319792902119396,7.976388753186903,97.28335248221248,57.533410338026535,81.89703385680411,14.49138796036321,42.20808311409121,49.189159643432646,87.3891366231052,65.30103630348123,69.32847947293398,9.636621773017085,98.22073207797848,35.95416322703999,33.497925672904024,25.83333249244616,0.8123719400678575,20.60089277174474,57.480134725570366,85.43930849644279,58.401463067483036,27.71517938779691,54.56495222846404,28.168360984455276,78.89152126631359,79.37582979421319,30.77984771542368,23.167579105504434,12.183331034091182,25.897336306027064,70.01096790712724,46.02148796624819,36.73208403520071,20.340366604897888,49.1703308041138,18.008819824978605,58.348608413328215,2.622691958771628,6.963647514011162,8.604866549449175,70.93780392276898,34.01670648421338,68.12963687088136,23.843607850324755,51.15987976093489,29.96246971214128,83.82072271562917,71.1862517404977,49.83852009075866,63.965351692314876,47.96547941982777,29.54439012936698,96.39065301335589,85.94831377481307,56.17268287015493,59.0228329039306,84.17728359582334,79.96673319905202,43.66766636756524,73.35360792704887,8.176292727909928,52.496178926659596,56.90082731898991,3.4619268932090774,67.46293628399162,79.44821606354171,3.983466765069399,86.25358331667793,0.13587226431825972,88.64409017320736,81.21360058203305,5.559157441409668,49.949355932326526,57.208987167882654,43.02868555530451,68.24301572837975,62.03812451867186,66.20580017750791,57.826280146290244,10.370813088700704,57.33294026783916,0.07260901701207079,7.165881404282115,86.8854108147459,71.84467715434654,82.28029779122481,59.838376591525154,35.217399101676726,79.40227999949988,59.2548027314283,80.17146385863671,95.54607541586219,75.69438884048861,38.75928404086433,90.81104590699884,9.52086429720984,50.091436270915956,51.0786458673027,82.57637255054877,90.21937763116658,64.53419403492174,32.744634683225506,79.13101982777549,42.14619542535316,9.702061891601932,32.315711156670226,54.1045903372663,13.909842615998746,84.30453424878857,15.82687765574413,39.41997648880693,25.025022132313822,97.63108332379176,62.29551699967691,57.29685433628472,23.811369793445934,73.29204072731244,24.910577497554986,52.755560642208124,70.36553792633266,82.7658737206902,87.62364403661348,70.6141659275573,99.54070245797939,77.39700559917499,14.870155722680344,26.179539610198987,64.05377138865865,51.70926044130378,88.39333484368328,57.06033506430946,7.65041069313982,74.8630501164981,43.56453704847173,16.98482603207093,84.4854707649342,22.83433840423704,19.742016934689723,15.764433234047015,85.2360456454822,46.91646558099999,41.9696020640141,23.658177062016783,47.350785692843814,80.23023325816732,35.6540031776249,22.20334648312352,62.96174466429846,54.92220243915561,73.77158228863348,2.718361459404861,21.252155672116114,56.980827544478316,86.20297786720172,57.49536420605994,48.6318121409129,2.2563067499712597,75.02030036859728,29.838613331721408,61.79699964787658,27.880996684715107,34.94094909144909,34.197222196352605,99.20767467122602,85.0244738960213,58.72630296215245,82.6080735606769,82.21781905307861,20.201109964967433,62.24088273383054,10.296723372681393,52.739891487848325,28.15613450522152,64.67652244489082,91.82305054921407,21.28534965901282,98.6206756915234,0.9539715623371969,49.6673981189076,21.090669627136872,25.032397617098944,8.672827727590038,81.98475639755183,10.99573283315709,91.88212245486177,40.85538204376756,7.655544868379871,59.51351533160627,21.859239974716004,33.725782635231184,81.21407749262104,4.6741978555346675,41.83858893391306,5.548013985085165,5.911418466241535,26.807055327661256,17.431032730927143,26.936856564929545,37.08911558936998,50.387624169033074,50.88416554222126,3.3156773832115793,28.642863474032275,93.47372896725982,47.81511539977019,13.07582930180493,59.36619288184393,29.536202214611674,80.90313466848555,70.96949326287863,31.721278685324517,92.24761114485244,81.76658184428403,19.319034974560225,80.8823077278906,22.074932066829877,9.974880111085527,72.0542279533411,29.89076226825379,68.53842121975917,6.705855606140421,30.722415411150507,16.19707177733164,64.3352075697082,20.845003472319824,26.016383871483086,96.16922538845193,37.06747187614283,50.94425197250826,94.55715174098725,37.387084951922525,14.95928065428691,42.49927079786367,74.74978856706149,42.54246433913577,88.50935057497009,9.812944080314544,47.425524973295985,98.34774733896468,42.45103105544145,25.472299296928835,80.06209353659692,83.40534680495131,49.43983886345301,21.33006417203438,75.17877892962767,26.848686565963476,28.662171540118976,4.440525069117307,68.41780758699994,72.55837113466102,19.367083960497045,94.52928958042098,68.41334717041909,14.523581902127791,53.03287419597743,21.70071651937101,64.51354987458208,44.93692756992641,8.618788828450851,89.51268056874514,9.61953586381309,54.38185687169352,1.637137511071729,76.6984206354541,76.19196732498105,81.87725377368429,73.23052191634241,77.70350836313841,17.791990723347528,8.953364358011607,97.99805415236465,95.30748988942027,69.88131598033151,20.081382012424754,53.58150600748287,4.237960640665294,10.727855907770012,98.4791675203065,44.11023486883687,73.09125284696295,47.845869738771405,97.98098730932388,94.55967402310631,22.586247183460053,91.72114418535567,6.675923097779113,51.50007591549609,60.042646848152614,90.879545128033,86.30684532882373,35.39627457503697,37.58249809339871,69.54881625336655,5.615431696188688,38.23442662713923,60.02675173318648,51.057757035930486,60.595743016658744,4.698588132272508,64.90233228724381,79.78629274161328,52.293978961049135,46.1200755258236,95.60425213953387,40.39685230707074,46.132824726394496,96.2101550721595,38.61642419473549,91.53749950393903,57.08896550703927,73.39541528391612,94.2258924892291,95.75800951187149,81.6299131424782,39.26530892687637,7.467554545714361,29.055768954047622,11.934046530750496,7.44212109402177,43.68904056127818,48.87686652573524,0.632971977005703,83.68190016088609,5.205017206971052,28.267572337082335,41.54404119583983,36.47167338250365,65.45396163068787,31.626086970427004,77.7962639855515,67.74760109243981,72.22260735844802,49.73122372483936,10.329740524096763,90.75608996364359,46.886348257627105,89.45640582579826,42.31250955588225,72.58337518344416,52.61806363896565,88.0796277426478,14.036240559477452,87.20690610259051,73.57783886514493,11.748476860319922,30.100745809994045,86.29705881963629,77.02775984648403,17.3841723632409,16.727740171522253,87.23936026254454,20.92163617902295,45.19931345859387,26.56092922885026,42.098196474136564,53.24880340387716,22.76071266956732,5.118326692511199,51.831500435573105,67.53168298294447,1.49330866275732,73.46186609602756,20.280670286654978,53.138536906620914,5.31234605612153,26.02212972940996,21.878600469666974,91.96739388073404,98.47572362450737,13.722603415074087,98.36368678358343,56.80987869051798,66.84246480497784,64.34200287916299,56.398981081943234,77.91981295893527,85.70451647024385,72.46414494423024,40.46698846924873,18.815782325737285,79.42311503063894,89.73430631896788,46.21847711759649,78.25150118538198,63.409042872213476,33.99600140942252,10.44129946961505,93.17007904555085,54.945370247418865,10.84541102316826,13.74361619322263,81.2698392487982,52.170222967891334,6.860121267703878,13.430042983711632,85.57829696568444,81.19826278460984,11.593555177704818,58.849563330481715,92.83960537373159,4.913250538641789,4.576064219022536,12.983626895285793,98.77055563689673,84.24716171369593,1.311476082970231,68.04445420648064,0.27928187781143254,32.38452107549272,80.94713889646256,42.15693360441658,47.3761641943082,29.946467979209956,35.14674274421294,57.72235069770283,44.12862285257283,55.620062809457295,48.46555715638199,25.80306268446432,67.28128132106862,23.09746770824449,28.778723309743416,68.46849899177015,45.61956785153875,54.753870862203534,53.65215097973668,29.695543994316708,7.427047825876453,69.21610216768894,47.68034648123418,50.54688614068935,97.88647760389227,58.364620742839676,18.171825513846862,40.7561800653365,70.02834869850638,24.813740815354667,57.265141596994184,47.89673482527367,38.96020222057008,83.13622500174766,37.165661414644916,23.003468364317303,50.63825760235039,62.385371683711035,12.792472730087812,79.3428057109824,77.21033927550823,26.35582941867981,4.753291415095262,44.458966640216055,54.21025477690834,64.55205858287593,10.5956563465897,20.810252192304734,57.24543740294785,85.49413814761726,80.94191160191671,19.82968265348649,20.27001879208308,36.22688841951629,79.99048394969773,56.588390520166996,13.612020145654913,83.94346913436405,34.666564731856056,95.08212790091368,89.41403001123079,91.21991438128813,62.354248522100896,93.91429771041618,79.70080801812992,45.08730927993854,0.5758212709596533,60.502955577982846,45.28435022177477,35.15851432580385,89.54275687104895,29.33135349431829,51.11996264613836,57.00799197002125,24.90679979609869,71.98192036028226,53.25448551954901,38.71766351393438,17.94974072241331,32.48581826546301,52.32139700364825,39.51983512865904,85.81128158209617,15.472778292698063,62.88722309489414,9.440360609679278,41.51686620804501,35.47023785175135,19.24654520272442,9.816901243289566,60.93208559983755,91.28164015597993,39.14764729714688,58.5445605169894,8.65025495457844,55.74400758126645,34.5944444555351,49.334488009429,56.02948600072351,11.949483189957277,80.134985559227,73.54436928471905,83.08884958692578,53.811781489875585,41.83472971581451,84.97684304492867,87.76410756441976,97.11185211448122,20.381119622982812,19.18300007089314,27.92569839687502,71.92551872534962,63.271976012730704,68.58772852074136,51.167915652638825,58.82669345032473,40.52943191993621,75.8190586400122,97.7937916389564,4.009804125793104,21.716088310166924,7.8429772084184,91.28334115021826,8.959666744522865,97.59543033240942,8.674280010711888,49.859998184685125,3.5955193763940074,37.30318189882495,59.91066525720991,34.487946246418296,29.08725889672513,70.70544525709244,72.42553460535707,9.777960046924116,55.97182357783307,20.23559714296449,88.10892440385494,40.60294762289969,5.033230837516434,91.88703028331486,56.36395177542318,44.0107881223028,0.910400784325538,80.35655959951747,54.11406418106487,78.5251919778343,95.36539037056464,5.278234711759689,20.506690638288283,73.96545680449326,78.63295087952315,26.570746007103395,34.80349552618668,22.663107591502897,39.559437594890134,13.568900201581647,14.380565882404895,68.08439715516641,11.9139573280851,64.82912094057521,94.4519246782223,17.997778009759546,7.990744654680282,41.76554419308515,0.535866938193541,57.31726337225125,46.427565505691796,60.419732402537385,62.21693140909154,1.9936716745222793,90.93075448807059,5.1903053869894356,91.98693200416744,32.52482856356038,40.949792618143434,3.3605216794131976,96.5402061717113,28.946489972901002,33.189149116892224,59.75487484306087,93.94614274359294,5.762198278183139,33.85206765796287,59.354021831597514,99.93646448625604,91.3228607517251,34.77214775238452,39.470288649912156,87.91756966929883,58.62295860411528,34.02194403516658,46.20474031009867,75.01400320824825,63.01225752134375,96.99036157438952,52.9098750346928,27.748870677056757,1.3397061658762088,51.875175682976725,93.00085707627034,14.239959735456665,4.439116924338338,91.73908482354842,37.681846050290325,69.08812926768647,43.810443029408844,70.94453896983629,57.447528625108134,49.34879028880847,67.5432774815256,51.62613459682759,19.170518790172896,71.14038968552006,45.03205742739278,19.376178956941448,44.47872936002513,13.74564379349339,8.058244845413675,39.482546781337014,53.37313784096202,17.84990952753649,60.51263846246025,71.19948419753635,83.44299867785418,97.6220265613594,4.877657402801871,65.82389112978578,58.70984789479265,27.603831372080244,53.225824442201564,55.23908619644946,12.912161689176527,44.03147158287123,31.212929738763794,16.203062966977257,0.6788885563414837,65.15580311926932,44.04109388693595,27.44096388260109,83.64872068910483,80.7751569340352,59.908678859260114,30.833625411923936,9.56740891572011,32.805918274035065,23.11966923109012,87.37667169855466,69.55136557285111,38.20795720577645,6.030580708211353,4.934455511623048,76.40898295967676,97.11163529255018,31.313790236150208,60.651984242900966,11.80526994357849,90.98727719326914,48.224486410649945,68.48918618951527,26.30290927485619,86.18082238232277,73.27080635006217,61.90907967556686,12.63664890249936,29.389777194416023,98.96335436731066,43.88129573293953,71.53633251235703,23.450505204078997,87.25069744870468,47.144761560692395,30.700368022007794,18.31006501664302,18.95912267948664,74.19011162505423,36.253108939524246,16.039437969259918,47.38302864010687,84.54112725203117,46.25434459783319,1.4755621138553665,91.49274317115095,30.86550010132646,9.63064479747282,0.822262688142672,30.78310639686469,35.62943607889092,30.049133815529526,13.984465852666494,2.747325556504354,57.16548884829653,95.06906985984138,45.07331934981702,10.651238624814418,3.6497333454786562,42.55392263470969,1.4178652820118653,99.31081572545928,28.329957272465613,28.857662376290993,28.07403341940582,93.3668223912998,83.78086820452637,21.525649832514247,80.89013931579649,80.60176968693223,88.30709921424295,54.827673082788856,86.15846229250633,74.98695801999004,52.81504297456957,50.55991961994284,82.62957617264942,12.667387039565181,37.51194446876514,38.00424960596251,1.6695225898211596,53.64884026409611,0.024720082493090434,97.11066216854404,48.004615247052726,36.97115305465072,23.75973736461323,48.14947495399324,31.28006903214553,23.18834892498739,35.71457682809028,56.18598818240791,64.55642550769072,20.598310219117767,21.688348669575674,1.6140735316755639,15.666296174790295,56.290249020194636,90.51803215692892,26.959170637946517,21.49192206055639,26.212683352082756,90.6051575129312,68.83232935073305,9.882229756937178,21.264821392560307,35.315177393869654,43.2332404894373,85.07091815614987,61.45873288718033,30.79193297063497,37.285476925553894,43.680589427471304,56.59655950278204,10.35649539876472,27.048598101178236,39.674973856323334,40.6181376217266,67.05482902166654,19.23266378752093,69.42096757933193,47.11532522883829,51.01434058604146,5.3945380656046815,17.878987683519398,19.805266104052777,9.542083576652448,79.4797511853529,35.083924062484584,47.750646930452035,98.08895431334051,19.578230326958025,63.98656374428856,21.226625362166484,47.52440703898995,64.86713287565489,54.06164179466953,44.60467953957997,65.52626084018482,92.78698534138732,13.083252822241931,84.45538674295653,79.70398928766542,50.219904455882826,49.52642507434445,67.03577353867655,32.76963064374615,83.98288451226395,79.3642598298065,88.69173123941023,27.92289413068,24.216801566917656,61.901141613304155,23.60909802375054,96.41650601307055,29.47661402912798,22.767461127853583,37.23728443761865,37.833254623418156,2.9610993579078593,82.86770898713046,43.448448849101084,3.554702500620166,57.704414569738596,18.897948934631348,95.75429491600065,20.67637054330883,90.85730119702342,14.170697551846544,43.22911932263275,22.78282335398709,23.68724685785094,67.04121342088277,4.830964020813133,21.642581975236585,13.796449776413677,0.4243869187006588,61.28333615911795,78.74032434547586,27.727989235965712,96.24077463949476,16.571719568190822,40.240766273746885,12.621668963897715,68.94885073025587,70.40610643288055,6.947668384129868,15.822735741938665,34.281720480272796,32.440049446676035,49.449924786766594,95.09697754846718,88.79399890857187,40.05321359327942,60.25042503259599,84.43082352108487,95.94847246333619,91.60268129085871,7.347832721179226,99.50272383255714,95.13545992970768,37.43288902242051,63.310876271108484,19.91369283108343,90.46593274985378,82.9061895184898,72.34455052297781,4.430303593484542,53.70111112321815,89.21878876838718,90.6641148401987,30.04587128006072,8.006659718431875,74.27523579895218,37.248971385088815,95.40847792549016,35.73775981585795,47.769537597334036,50.97133978578078,23.699541492717756,13.243868220857347,55.65588410002486,2.0454036893820637,23.06919520705111,86.94678001021727,3.113429119172728,87.85807669321217,68.62515604076208,1.2772114933442436,46.3120774200981,52.88268120093698,89.69062438419196,44.606651697079855,56.62142195267064,38.284796677997804,15.869959790016509,71.94010785326442,47.79347777108768,44.32258957588987,37.25049324426284,78.14466922081535,83.22216126496555,47.579659176877676,21.2436412134721,46.52426148011124,65.98051747580983,20.30569212293146,33.072755472335636,91.50652798893304,19.129462025099965,1.3881051967163271,37.54071851690918,26.489704186471073,4.837407950187977,24.83413777665968,8.181609659744371,78.41451889424064,15.732483928930286,15.970236042979934,85.23406498687605,73.94018114429632,56.29594038130591,14.855641374754015,61.70403150377709,29.52539820404214,40.011425611063444,4.861522728837953,32.00853801581977,66.43268056464227,50.91473364506168,93.61152220363539,61.75881371061619,70.96642007263956,87.93956435308763,94.21706013076432,86.37680890888319,52.9368958761676,84.41158130895246,53.502168803519055,65.60985044749404,42.91202996869481,34.7177837296225,93.03176547996276,1.9002357785346202,42.16966901246649,90.51092645321188,98.62409736389246,83.6721479866588,77.75541897945351,47.367759966297285,81.25573632620456,73.3278782635812,45.86623339115118,53.37030684658182,19.37733165605803,94.37670435017458,61.55998130814524,25.77338658468593,68.12894937319986,33.69087463445426,58.799836122901816,89.02268477252994,90.39059654775284,32.4552150407497,10.342743942335641,22.846086714056923,48.42815769898859,28.77429508613336,76.00791465131674,31.183284080365546,69.11982455050689,58.73294800107733,65.23833932370056,93.07556046044135,30.779419705559242,7.159769830481466,97.25177740555557,78.93254620055129,38.747907478202016,10.45197014044824,12.109112424900903,16.75279222868975,2.969203632673323,48.98135614847939,4.844228296988007,23.13047694335357,9.115871475240954,23.481222559122884,31.51154644395895,44.47581146446632,39.147809150298365,34.53008813101006,4.394634514624219,15.902335851113136,89.57035973396783,75.95870613539248,57.54983607028181,9.984297570078205,41.0149064813081,96.16205975336396,18.287899840074274,10.894632768577516,18.611412328708397,28.434831855768085,57.5954687656118,1.195023732918865,55.56786685632395,68.43636494622781,82.37154139867724,21.36247596118922,94.98306995747161,57.96737966713309,15.26924994647385,25.566385027419603,72.2062032023522,79.41237284281306,28.32402785870549,65.06951355030834,92.41657964541149,13.825627516560768,44.054121572908166,36.46150864527353,86.74501115875063,81.33842857866959,40.480571684879195,13.612391447599547,0.7790197020780099,58.401971142158324,0.44252248097516045,60.49981727571355,27.942859548107613,68.79341520567402,12.05871672711869,83.93245262565898,58.03214735229785,24.436190243991028,77.51792922509446,41.435788914610036,93.54025501576506,60.6121991812209,87.59883782566426,22.74341019597166,62.02797215103109,70.41845024241532,67.04370317345443,40.01406702845801,31.30063363083375,6.993657319499757,87.98424822238272,50.37493088216552,66.81429598981453,80.02921694566783,17.75814638187583,17.014350015546363,89.70916114445284,82.31426588840766,19.652890920245667,66.79804945820143,73.97383680807147,97.7968937234478,86.66368222567361,41.64691378269409,69.84197745413407,65.01874251707368,83.16300259082574,45.38210782585751,84.98978032377586,2.417602317382317,7.602473150701394,64.18452815438943,39.37025338872554,64.80762368755032,3.4736922881162258,15.785227041920002,1.40056338338439,17.63989520740775,85.86279265442496,81.00162203703748,26.615125004841957,70.79081641210566,46.53445864239932,48.113341433373215,22.368020831077317,94.17889248619298,10.926659931511406,13.80136517660906,24.330472912776578,90.95356770096312,51.6978020425458,62.22202972318212,47.5575021746672,69.4641568748123,8.066467436305159,18.335840129484026,70.1133858749781,91.04303562096386,69.42115213923854,51.26193902513487,77.08193012210793,3.29973517577955,44.589862123924185,6.360271818763374,51.870391570065166,33.38826492949758,17.148189504645927,98.87539153691806,7.787703644614085,69.55491783540322,21.422761492911178,2.2986643065937673,50.74876583058445,93.44472841336773,85.16751407744067,1.15910836585571,46.840784105305076,4.502376722779289,42.26465150394378,11.340351354267009,5.870659755829144,71.90468068242572,61.71651267775813,53.10834351892554,4.888242068072746,39.377155494524395,33.65412931143821,5.580125062497698,96.01894248120634,58.005492508650825,62.044985117350734,81.8325561802697,91.34360643177328,55.42112894088284,92.5300186517989,3.2699234390108245,71.2729437017715,2.9209591086082676,26.317564848426468,90.50928192426383,57.28434057464086,73.86464027223576,44.18830276742058,89.53043194485375,71.27199673524929,64.44047019662766,17.397724413888195,85.64987013785232,30.665798342664587,30.154404264086597,90.94609440821813,33.36388711588734,15.286875362150909,40.9464049948113,0.13287894690026114,75.1840856572637,89.06786979745134,87.87131100482591,68.32863574745235,50.54337831328988,32.978650609770334,95.43808631323827,3.9616873877549197,92.10579250355346,14.749862560450422,22.450590226457777,47.32949556018746,72.66557412588368,87.76662166849442,63.763020383336325,63.72913982108469,56.33660491885944,62.223946007022015,93.01391002041677,5.961503213105612,13.273761130326934,87.17504082060145,30.608042594257935,45.80824620411351,77.3703525835042,38.75411430963531,52.16645551386445,57.822554059874285,20.480472503201476,21.03343678347197,33.659574472175244,91.07169273570224,48.774805382349165,20.384110139221878,73.29901437423395,77.30222700505986,55.481394904540636,53.66996054478754,25.6436504169408,54.79041964925976,44.54771789951417,80.87510822961481,0.816933731798597,68.40471986156692,80.21449596614964,2.758900917796392,46.669660788081124,93.18184484656165,87.14614926274315,24.87438980741524,36.09188691750313,9.008123172689453,40.73975730802084,68.44195815586325,52.70896839367043,28.45729816305291,71.99385538538638,4.472957098388797,33.858225368548766,13.69454603745056,35.394670742607495,82.32918571918472,63.780254123139656,81.28636238894777,85.79129927172895,27.172156015336626,94.3576384281975,92.23880758834315,74.76029908066747,7.629105105544021,79.62809646070755,40.561433086992324,33.51326383547048,9.215684501348441,66.71962091556944,96.48035558874257,34.69179994241537,86.46181856732703,50.013661973580604,7.988929603444861,22.25853642815727,20.960130946723897,26.896701826206815,13.424439202833904,81.40531814874205,66.83810341687617,14.251717435407452,69.23845125171381,44.33501397145621,25.658239566441456,38.38059395364889,50.36632190661579,9.193941644086445,1.9689720835732727,87.93141385279044,35.32980813306745,27.862725345552587,77.73424184928163,63.75726246059274,22.597661701712813,89.84062201354676,18.43130155189343,27.08507355626182,43.30032147778605,86.48636286211759,56.78297767410206,9.828502067405488,66.28019670417932,32.145122753964785,53.49567149060023,76.20414978682831,85.39302351079989,89.99511030299064,20.59157559497199,66.60960014458065,14.788263306079962,85.4452136796105,50.949152454340876,42.172266945149595,4.025612494748754,39.96505077922512,22.9352586546139,22.897036487178223,44.680673911386435,12.88853626424019,0.6305605457251895,96.43940299314534,17.15345304114836,58.11803495026928,51.52340832692644,35.85159010224067,79.17534907456385,9.952936418235991,64.91618207027336,47.62325746937825,61.99341288870542,11.807756828805227,55.09260693166258,50.15224627072621,81.09076037040187,78.70219087967713,45.88034881168901,76.8780567673249,74.84943854695652,44.60214518841661,81.74541134302275,98.27737321901749,74.52115620565164,74.60369941063256,76.77665532886724,52.37680963291237,71.93734709497093,73.10611906030634,88.6851502274439,92.99565599287271,7.694466924588983,40.3423929263441,54.384959841474014,61.436935711107886,60.217148541985296,24.363067027664687,66.16755390601189,43.61770165288197,49.499462236296,75.10990436900823,36.8567767365922,30.348275322153086,14.319494827749036,50.84887105968134,21.296675323174185,57.399545792052095,94.44899298160304,36.75286765074159,24.02131086809165,85.09309304810907,94.70469060548238,28.936522388023256,38.07086877309156,4.441251951854774,53.58392657400515,57.004844263550055,67.35229488087764,25.62044731632843,2.49794198888299,71.7272237818068,96.62866508789836,9.896862695773612,92.07993035440568,80.38973448354429,6.586139660291456,73.68309910381686,67.65889506578297,12.32107047523372,38.086826153089135,51.8135825437844,89.8874834585593,38.37841870714394,36.415462145089386,40.975955566161716,6.0799331404503665,6.2513579768533445,97.33771042059641,19.078877033348938,16.365657268958667,43.487966236298256,15.344176698091838,66.10468505501078,23.886798094969397,25.512468027681678,26.485235293184207,2.372252022417387,36.599847934621046,84.69263931541366,46.00941963416303,83.49919404815488,75.00654496629095,43.98828256169375,80.1811192282208,4.905638586617478,74.22497205405473,48.49451740198487,22.97936452749395,91.03990721196199,81.7953416940998,72.42880400479011,41.69853890168122,14.955287718924993,94.71151070046585,81.71527607374068,42.81744755883098,81.8289060168173,18.111974476145008,6.041107581083405,53.70474710440537,93.0515356061118,37.48872164936956,49.55873820526041,41.592926545284605,26.068932965042812,76.70682917303189,80.52897939657205,98.20957095740141,72.15251229079783,8.49249931737881,6.97554135262064,88.08645972082333,23.29553720013888,37.36691709910931,50.555863376422806,58.866460668171264,69.28174378633629,2.1628122729375976,5.716030362113978,98.01510387023367,3.4390351061982405,8.06390435656228,65.72197031540625,82.34476040127802,97.12392674230632,44.64501049056586,3.5184753215230735,82.01205404928302,42.89290588539075,6.574235641147386,79.16181747800798,52.91013098554861,57.64206856939492,24.304668099950455,9.536031958234448,59.53162767884065,50.79705406317856,35.35422434391465,97.97884659217426,14.86033699889051,93.04382242106985,82.21299542365821,85.47284711450413,93.87377645598262,28.37841224934925,11.185529542591066,59.250799642307086,18.554537519190106,73.14089889966911,76.42014848483917,27.80309349589559,44.90550753652885,15.49055468648165,88.84611735300936,12.449429780485344,83.53682792760706,98.71841680627257,66.70747578222677,30.839061664614007,19.763989492794842,35.94218328612073,61.490696196040886,77.29602363588994,84.81634162433322,31.633456400737114,20.661891875447346,89.51724532681476,8.51935341006298,35.45007359757154,55.9290759160611,20.214416716781404,16.92514958111214,31.359933809506067,91.79455759928415,32.294750257133785,17.33355136063821,74.04398200074279,1.8614527084115151,67.28377748454629,87.08295577105109,9.15263428478923,87.65960715121082,86.6463760679465,6.931784093093252,27.117114680577835,9.46969580662309,78.8475588192117,50.26795646788413,19.255695934785777,99.10807868833082,17.530049925275073,67.11162346994841,48.13544599121513,62.16660658209757,92.78279102175193,47.12430363674266,41.72450881198754,60.873415658097954,34.052668986309655,5.382016190670691,36.76532147484025,74.15527253434288,33.31342008767163,39.33795910646714,45.31260052618848,24.312185738180514,67.18594021569106,3.4372825318500055,78.91042117502248,95.7709208202232,21.379386437509808,3.4243823641670224,2.7245639796596,27.89628609119681,40.09412839066668,93.64201548920644,42.92617754366507,86.84789930228087,84.10190915188917,77.15861380977022,82.08076545056929,47.25219031533373,71.4628814692195,97.54618091405209,86.23203486871822,33.802819307533404,59.093446711236254,69.88229130295971,63.19681390485151,18.612752183910942,42.02269683544111,74.43693357665647,16.36445723666148,68.785704457614,60.163660592041545,83.1833536344756,26.785857311225314,5.612723608776271,49.423930730364376,68.77851778363613,4.515808389221554,69.87139248436628,11.31514853021427,60.33661256269394,46.53725594598534,5.071268532702378,65.16704701242159,13.363223362951226,82.53045989960268,33.991799176167035,66.8680810928417,51.34307179334313,15.996675438463514,42.67398017404409,19.66067881062998,30.56367889692604,15.935026110350204,22.023387349094214,23.951335971630684,26.409837021225112,65.89256575942125,20.73268263663659,36.11068662792416,57.81005094699205,70.129421557229,27.961981641837486,76.80022245303927,21.53448462173566,75.2969347638256,34.10673533425654,15.176230502743039,44.73693943298297,60.61479687657808,74.85704351259871,2.7390432394866937,22.44831139764969,98.56099220739219,42.103796167833906,53.72365179583309,82.57245684017617,19.995771542166953,96.621156982344,11.19191813299356,4.833000835747914,39.40861227652304,92.08051626733652,32.806624979431554,56.78089722893211,29.111161959921894,13.095285543680157,87.78731213076573,27.38157782359989,44.68110300066481,99.37075401154067,54.65779540053058,53.060797243613486,17.924513744303226,87.73508471062611,97.2570643307976,20.07201841132077,69.78556676029866,3.5752764820080607,42.19671153178337,12.97459106407407,35.02443327517758,39.51253082466071,19.938636040577894,53.617328751736004,70.97667569191951,84.74202473239481,50.06223943857718,81.60354221807282,54.938141145581575,8.107742906920413,82.52967533381693,28.551254407583627,50.537921911821904,13.051699467594425,13.6434380075521,82.12679969700028,20.766511250465935,17.8349142404875,70.77900877773175,46.7337022085967,64.95497653450849,20.618854813777265,73.14046149520148,9.49765509727355,19.091599589953944,49.7715618849746,46.339913638930796,90.90925489412574,55.995610459548075,96.50378449612211,22.831757810414143,50.69932594643277,29.12332952315718,94.82984678984269,73.853556653542,95.9307683699771,83.5392894932251,94.74686699302343,36.56642611457666,90.97342760389762,78.60943204413635,84.48303870934784,44.10588121796002,76.5404944028948,11.509315756274175,38.3859513044126,39.9548585837659,15.061591791411999,53.89768686226023,30.750637324120646,24.513855925267038,11.293609390193094,5.903281840162733,53.186771419259905,92.19256435666469,48.34460359372377,55.28624542451928,55.41194107781718,80.51694546080253,95.65135140162427,51.291170322942534,44.65308077895541,6.048686640053114,71.53808527803386,43.86482242530211,26.691766109527272,9.182690910816016,11.192974592916638,48.60579257096782,43.939736196606205,2.549109935858762,73.62139632638436,63.82866682382931,93.83300692988126,38.71716249398152,91.65253479358803,90.95364536694093,15.133781452228934,11.148233156804777,95.63420602891041,94.08074486297014,56.523911295048,40.16485784008243,6.264811633086342,1.6128769439807566,70.76778606941723,87.64878317192652,22.415176888145748,23.592345955657667,40.61060790495502,4.51976769210235,61.06467281829886,89.11297982408769,36.51067811539191,62.79353497559013,17.0312639095334,29.222659916547357,95.14107543107019,23.647314074204353,61.92276399556974,86.71780645315786,71.72559596274837,49.05227290693058,64.05534066008062,94.30666550795037,55.111649896122486,11.29411767977797,17.47621199667593,21.21775913500581,34.55426742028133,67.58145776472811,32.559397323945596,21.426552084107286,49.15485905796502,84.85857244171285,17.31768487845716,86.17502215303526,10.866398145785606,30.56633228274691,14.951418605395705,27.671703595337206,66.02983731163012,52.87732875543274,15.637285398104195,70.45661918182779,28.578881366075727,81.44430248023869,4.858707667906859,2.9236656952645323,84.53296653588784,47.91200542565338,23.853472565292154,13.492463563876267,34.66316993787778,25.47617883398383,56.09086678843747,2.529551664169938,93.85835334742025,48.84539946428873,92.17225978733173,9.699797378717545,22.838599542380543,98.08622040854962,55.77480327686509,6.536774426255487,85.83301762877696,42.64737321019582,78.51116284741883,37.04949742966272,10.984873679131058,36.68677280189401,99.85856461989292,80.3619317714706,19.328446257691155,41.34471124507021,17.304323128355424,66.83973070607104,11.867700491568034,29.648511535297207,43.92489348376776,23.72839049898998,9.82185400027622,79.02111635275863,63.53880981124015,90.53396857468223,87.16527057416631,45.22446864841019,70.92715367262056,69.06989661027114,49.77489035766203,53.564786855693015,7.401969605102132,96.26513536921854,79.41505850981389,27.639249092179995,65.92432973164429,74.51753445021582,70.81019026473399,17.851196640167533,11.331777836681024,70.8577587741383,40.65772038786734,25.423462641201,58.842446038107,29.36538730420558,3.557577444409321,20.996206641441674,67.20125935783214,1.4675085045994019,39.30205054365703,43.378472289457385,6.252977597739373,99.50173711324517,13.905770286321673,46.49407350612825,36.3932252108469,66.4475283885298,22.718782692923355,28.498953746554267,52.485331804732894,44.583100511783805,61.83816097828084,15.087468534843207,82.50370454117053,96.27672493496108,7.88396238255925,83.35574929187725,81.77445667589289,17.716872645128092,3.181890458190273,50.94824772733031,15.6889744712975,36.78218650173682,97.67419432989854,6.962405544583261,82.53156899963379,97.89869733967154,77.23289550161937,20.390277364445343,39.567052168962626,62.796711561118926,44.94632964704432,88.99901193467045,80.06487279549715,6.682293774316317,14.14264098752087,85.77509252918769,74.42504595147014,53.55234492946074,72.1684410682903,65.38420858976008,74.68981649796001,74.63227431403233,22.836523620969718,87.53887035845644,49.15992534646697,34.252253505924145,46.819256572049525,2.136161759062327,37.09086827388134,7.773058287677559,61.43764964608739,16.032962194093557,88.81400199306803,39.12106602743268,18.9770051979117,55.94646644227662,52.93977323305627,38.046320150788105,63.70764441788841,45.32597528459109,9.402843039608843,48.95097414642251,54.48452886550413,43.42938170179633,70.16729040126432,85.60027215716323,83.6738233284802,73.20034374985855,62.54027516195063,84.41154964301647,11.374829289741207,85.05832547958315,92.45570422270191,32.49002078136329,30.71968361418318,52.819206900267226,51.11505764883644,65.00576492659388,58.90508273255857,42.25922009815876,39.44709758093872,87.27995992731,29.786829436507144,72.2959742369374,4.146787802706231,86.8423023417934,9.266211700094152,28.513348578683328,8.745548160706829,72.67267261776594,28.063657277919862,12.914532063854523,64.39056412897534,78.84902285148273,71.12406669421657,78.73523141398582,53.75282601969623,67.92738911698233,64.54138546743081,22.305245132572004,44.31289220510284,22.55358716237852,98.10359346385616,91.55122878636627,43.229972907646555,20.769920691863575,32.004121367588354,93.52901185226511,43.41452670327301,73.2765670842171,4.991145432301158,11.250589306602832,90.42005796615523,59.69205384183495,28.806850300847685,92.61145717545503,31.919371279832664,35.972096734109336,42.39489468768549,58.95474357140248,22.423423311508706,69.16276707210176,35.47155453908808,49.34589147619638,58.34367824451159,20.078015134755677,13.226559146060367,39.73390897503163,78.6516396577113,88.69165021701673,18.837656246033895,2.498818695787719,98.29544290838636,11.642416957264267,21.15013159227681,45.91010434359531,39.112320870751546,56.504357992885176,32.10657483641178,41.927177944000405,0.10828758643387504,7.2044737301868444,68.54965723055962,50.34568682441376,95.5714637769581,92.61892485058564,57.55617773541343,76.28184165851596,88.87770011635659,3.9747013491461036,99.69791096167343,66.46689321567175,46.87554077928652,0.23824558967210363,97.81278894321238,42.42200530768183,45.21624725366441,8.866487494627561]}

},{}],37:[function(require,module,exports){
module.exports={"expected":[2.91054089796621e-309,2.31007621842388e-309,1.99930323527566e-310,6.5282400526105e-310,1.87588963238104e-309,1.68434172805608e-309,1.315109873823404e-309,8.8234682233518e-310,3.089788034019667e-309,1.696642830606533e-309,1.304286302193854e-309,8.341638916584e-311,1.61449473398278e-309,3.052464593451424e-309,2.13471190796222e-309,1.37701237186254e-309,1.0136865023855e-310,2.4267519134534e-311,9.2583459856452e-310,1.23285818097987e-309,2.26518194307147e-309,2.772625315686317e-309,1.794456882651466e-309,3.1638020550348e-310,3.898280950054e-311,1.639417855213447e-309,6.79200958650294e-310,4.0759751111274e-310,2.568626021712757e-309,6.98048859358903e-310,3.02730165302831e-309,1.50759685267118e-309,3.05844387540917e-310,2.993205102801757e-309,1.87714646133387e-310,3.017232648629086e-309,2.934608235362482e-309,4.2394767953713e-311,2.383061874313957e-309,2.605514282779875e-309,1.943698103314215e-309,2.58120066345792e-309,2.231571210938336e-309,2.38425720875783e-309,2.48995815318782e-309,1.257871539028e-311,2.58058888132654e-309,2.94326119273398e-309,2.731087849099425e-309,2.28334971225e-311,2.806965186426086e-309,8.51933382450055e-310,1.824833498932644e-309,1.92223950662057e-309,2.02404868706955e-309,2.45783452883831e-309,1.39326004220466e-309,2.70142110772698e-309,1.701282743046935e-309,3.0514137957031e-310,1.77304841456518e-309,2.37878357977153e-309,9.6539544117576e-311,1.690403488507853e-309,2.11459188556968e-309,8.14730925965377e-310,2.714343803641565e-309,1.526347430915264e-309,1.489184806267135e-309,1.53821284070951e-309,2.527338712381314e-309,9.05241007506225e-310,2.36828633590922e-309,2.97080107980696e-309,7.77075368199644e-310,2.53768081533188e-309,2.623335463850233e-309,2.625247258724485e-309,1.35703840426294e-309,1.679065946487005e-309,1.40444301274209e-309,1.718024072999943e-309,7.67567101331453e-310,2.716935079157716e-309,1.782055692194164e-309,9.39081382011584e-310,9.66223279100615e-310,2.445381079241427e-309,1.603503727605766e-309,8.00842387248113e-310,2.865878341380983e-309,6.2196677951533e-310,7.7392076432823e-311,6.18050233851333e-310,1.748501332207117e-309,1.354292193377e-311,1.58631092561149e-309,6.1237345097412e-310,2.79099736139685e-309,7.95034231791696e-310,2.113094466090773e-309,7.72379371207946e-310,5.46184901412998e-310,6.7031596422243e-310,8.2963363519346e-310,2.755739120714927e-309,4.293695156757e-311,2.404213648577457e-309,2.83078267230923e-309,4.5015379976008e-310,6.60127589983965e-310,2.2901310001078e-310,1.2972050870456e-310,1.35135247961167e-309,1.1949544436515e-310,2.51892801310397e-309,1.2096639475933e-310,2.03422767634311e-309,1.729709282050047e-309,1.77883451874842e-309,1.377322786023484e-309,4.56010826942915e-310,1.47383417674719e-309,2.605208260076205e-309,9.89945320185844e-310,1.28211672350675e-309,2.6604774535362e-310,3.807264065943e-310,9.71125012063087e-310,2.89164089225355e-310,7.63622889813033e-310,2.704819784867e-310,2.874211162334064e-309,1.40657799245865e-309,2.21224691358802e-309,2.126976088966963e-309,8.899612627511e-311,8.7490072842427e-310,2.14614743215065e-309,1.590659878136057e-309,2.07709392469923e-310,2.411539948828357e-309,1.59933398562986e-309,1.7659271637743e-309,2.16589729539262e-309,1.48425936244241e-309,2.22870194235846e-309,1.70801600837309e-309,2.43579549218047e-309,2.649880043740105e-309,6.06648064112377e-310,1.49492056928933e-309,2.581736809043316e-309,1.351874451839638e-309,1.7117193202832e-309,2.13791256373426e-309,2.365600695294433e-309,6.448066553631e-311,2.631826959614084e-309,2.530489997282854e-309,2.57897997486736e-309,1.6145078580168e-309,2.95319049090527e-310,1.32228571660842e-309,1.6615563487979e-310,2.60119533439453e-309,2.4735859874072e-310,1.057993752711504e-309,1.260189805332193e-309,9.18393290483184e-310,2.616192570977376e-309,6.71006994397955e-310,2.85192215496488e-309,1.059299213360506e-309,9.03211803395076e-310,9.67496440373646e-310,1.01556523122667e-309,2.76457203355855e-309,2.71243781929966e-309,1.323434840216173e-309,2.72621512168745e-309,2.804400653038274e-309,6.55323038085486e-310,2.733652483756145e-309,1.3699315282698e-309,2.6659972822972e-309,1.553322981389e-310,5.32179138376645e-310,2.44139957375528e-309,4.38657637112724e-310,6.6325116266375e-310,2.7571608316589e-310,5.42950765644627e-310,2.271969302142856e-309,7.6500821878219e-310,4.35495168420905e-310,1.673032417015646e-309,2.499198271903514e-309,1.52546952893899e-309,8.4081397756493e-310,2.633659444386064e-309,2.62969117895151e-309,2.101266242770047e-309,4.89128789521624e-310,2.60382171863706e-309,1.19038919319688e-309,2.65295786379852e-309,1.11140336352824e-309,6.39843230884097e-310,1.85341662775879e-309,1.71331400576184e-309,2.26832463071454e-309,2.351000588323113e-309,1.195213548999824e-309,1.43514333232586e-309,1.420591483695585e-309,1.168843136555644e-309,2.63559286683287e-309,1.179175283980954e-309,1.908404000594723e-309,2.03625628830525e-309,2.60741474188105e-309,1.50357498275266e-309,3.70367683102994e-310,2.570369696702497e-309,6.753999288197e-310,5.3042337011533e-310,3.0451711906472e-310,9.201535877549e-311,2.431768362039585e-309,1.2098328595209e-310,1.1024707300514e-310,2.114967906251414e-309,2.4228258131327e-309,1.49653075337314e-310,4.69394818516827e-310,2.25070672974394e-309,1.8696192289147e-309,2.7155597150007e-311,6.57106417440186e-310,2.241762564007875e-309,1.642294066658604e-309,2.0540723205161e-310,5.23583403724885e-310,1.23453918383049e-309,1.153269898996687e-309,2.612044578976574e-309,5.6707165728712e-310,2.247402270626105e-309,9.16851734736776e-310,8.4683453224211e-310,4.3343277438681e-310,1.87224593548249e-309,8.81920728824755e-310,2.40926908129393e-309,1.80683261282095e-309,6.0037594999527e-311,2.05124243716666e-309,1.400035975769875e-309,2.05082295666191e-309,1.70049458729386e-309,4.6122737393926e-311,2.17884138975104e-309,1.4144390630499e-310,4.38436523904884e-310,1.85467312089515e-310,1.75581067291531e-309,1.4094215304254e-310,1.635360601084146e-309,2.65351935040135e-309,7.4992962371354e-310,2.437073753532385e-309,7.25396478817175e-310,2.47522439183114e-309,2.236430554632913e-309,1.577962148781375e-309,7.4032221053032e-310,1.494365309914024e-309,1.921762211325943e-309,1.038965061055674e-309,1.498025875485303e-309,4.06586254860334e-310,1.125750214369635e-309,1.7597358980635e-310,2.528421794069393e-309,5.7177239430006e-310,1.2908865015174e-309,1.0860535438113e-311,6.96455106697137e-310,2.16384590840128e-309,2.481613696373863e-309,1.73105943812785e-309,8.34152358354604e-310,6.716406687878e-310,1.412885002793573e-309,8.8194356714112e-310,1.05735659333633e-309,2.16874014384444e-309,2.58995794683481e-309,2.50252536193524e-309,2.044277653699155e-309,6.1508951079014e-310,1.304759886896296e-309,1.136282370381966e-309,1.708895731183043e-309,9.08875725959063e-310,8.94401554118614e-310,3.45308669347376e-310,1.9880253327903e-309,6.6310535496563e-310,2.52731429864038e-309,1.151229626622333e-309,7.35960544158817e-310,1.915999952230457e-309,1.274734851834576e-309,1.37668835007508e-309,3.08672651280155e-310,1.9994397126076e-309,2.016988035198023e-309,3.46806032181434e-310,1.29016397796382e-309,1.448457611685625e-309,1.14527077168406e-309,1.09774556272213e-310,2.377542670353886e-309,5.4750975471946e-310,1.176451008558616e-309,2.312441884271684e-309,5.21129806076977e-310,1.71789632504911e-309,1.888734419486847e-309,6.9015719918644e-310,2.360081561245787e-309,1.90892101204749e-309,3.7912448851696e-310,4.77096187685704e-310,2.215279913127227e-309,1.91190460325022e-309,4.3149056760274e-310,7.1021767000678e-310,2.62602263247087e-310,3.3302121814602e-310,3.0847004934041e-310,6.2077046315891e-310,7.8515310687152e-310,3.08116254466834e-310,1.86941218181357e-309,7.45809068174735e-310,2.34714693965681e-309,1.1285887702233e-310,1.27309918194048e-309,2.23885804085814e-309,2.30523827984113e-309,1.997181462805816e-309,2.054563586271437e-309,9.5240428350596e-311,7.0258944869275e-310,1.841786684641813e-309,1.809628994892467e-309,9.7249869355765e-310,2.502768656236265e-309,2.538647018186733e-309,8.20436054284787e-310,2.34018405236614e-309,5.99694217841654e-310,2.361758915555e-310,1.15337526601725e-310,1.228654898504204e-309,5.29040673742333e-310,6.82641851733187e-310,7.725587968223e-311,2.047629196517016e-309,1.725395485076293e-309,5.6702792862229e-310,9.1924508601727e-310,1.833724740520477e-309,1.566572329975663e-309,9.9518039158575e-310,8.44156253261646e-310,1.821798496532427e-309,2.3825349998775e-310,2.053677960312363e-309,1.13531831101413e-309,1.621761138650693e-309,1.698958708138303e-309,2.48911233219024e-309,3.110384470968e-311,1.738837850580906e-309,2.94352231772926e-310,5.1127820271069e-310,2.07736084566957e-309,1.933537174485975e-309,2.472048949688446e-309,1.145995878027184e-309,8.45726110912715e-310,4.57032593505375e-310,1.34721767279981e-309,6.18233148758766e-310,2.038676564439434e-309,6.58430143324123e-310,1.903902200911e-309,7.12877015013214e-310,1.060574217622213e-309,4.5822698196465e-310,1.99996007997811e-309,1.835467746369806e-309,2.7327833271912e-310,1.13599713855718e-309,1.44087540164972e-309,2.24367744240747e-309,8.59305125533447e-310,1.123201752671914e-309,7.30046280532584e-310,1.1083133318744e-309,1.43843355178322e-309,1.577950324102524e-309,1.85097361025358e-309,6.69271650878895e-310,1.774961461061817e-309,1.9239211171955e-309,2.008673252440804e-309,7.47541074543477e-310,2.028179108836047e-309,1.7670021139762e-309,2.70080429195496e-310,2.129052478201533e-309,1.540399612812427e-309,2.83879831557215e-310,4.32767793125583e-310,8.7495279126561e-310,6.8380246127952e-310,1.08322005144064e-309,1.760082111933725e-309,1.579955057665485e-309,1.68811910238123e-309,9.76241759682717e-310,1.72746023030203e-309,3.57720000676676e-310,1.60103840951713e-310,1.95889090910734e-309,1.75685469063093e-309,6.08826958977324e-310,1.9479522513872e-309,3.504255021465e-312,1.0330978445188e-310,9.870906949196e-312,1.388264309969394e-309,1.276451632437643e-309,1.905457349489147e-309,3.66060647863963e-310,2.2812368638801e-309,1.04377007557736e-309,2.385619820170325e-309,1.6594483965735e-309,2.127119772351667e-309,9.4192258157686e-310,2.00122632688149e-309,2.15905305488806e-309,1.850445760388005e-309,1.010512385000333e-309,1.68394547472985e-310,1.62314059560564e-309,3.1778523457317e-310,1.95503055114271e-309,1.918334324701507e-309,1.837029501793487e-309,2.172296958132467e-309,1.47656439224844e-309,2.98090883077757e-310,1.75194664552895e-309,7.885872447104e-311,1.221380549448166e-309,9.9407472860957e-310,7.302946599887e-312,1.33189391886401e-309,6.52546288845044e-310,1.34844363409638e-309,1.724196664986294e-309,1.6518743286231e-309,1.955911864932964e-309,1.967066758964123e-309,1.86349662631947e-309,3.45550249773236e-310,1.86892439572242e-309,1.75191436504336e-309,2.4488280739569e-310,1.36333833414179e-309,2.13230295742661e-309,1.4955650771873e-310,1.51921297632766e-309,2.196118850302315e-309,9.27841315861976e-310,1.92699634798827e-309,2.00820262494854e-310,7.1298386069716e-311,1.352579159048235e-309,1.696472714397927e-309,1.369893618450864e-309,1.471833181909003e-309,2.5889999999967e-310,1.029232862731656e-309,1.37609656692827e-309,1.02752999589041e-309,2.714209096177e-310,5.0817600964177e-310,2.073679109903823e-309,1.74025714039748e-309,1.6718335416657e-310,1.325005257496614e-309,1.749846941078573e-309,2.52117740286416e-310,1.717374391579873e-309,1.816981684227207e-309,7.88957640583225e-310,8.28948488538956e-310,2.228257545167626e-309,5.3652104726268e-310,1.907731194249967e-309,3.3609922310046e-310,1.213810508674096e-309,1.079852086503454e-309,2.0839076680424e-310,4.52245096604983e-310,8.44998862188697e-310,1.004452046460284e-309,1.540205613253774e-309,5.636202133541e-310,1.72754005106549e-309,5.25231734116604e-310,1.187029925460983e-309,2.001373619644563e-309,2.97019178268687e-310,1.375465565372253e-309,2.044334313504516e-309,3.5979305125569e-310,1.5709135071766e-309,9.29678250817663e-310,1.23925588904884e-310,5.7699016007023e-310,1.33186039295395e-309,5.5414757150366e-310,7.5393226116672e-310,9.0630289954042e-310,1.708181961173e-309,1.598543628185905e-309,1.57818868925961e-309,1.042246526728893e-309,1.181432869011666e-309,3.4401210375135e-310,1.06505472440575e-310,3.6895357429363e-310,9.79534827697054e-310,1.75570224707959e-309,1.42436753766434e-309,7.3519576870777e-310,5.1869471176083e-310,1.409968536946946e-309,7.72691017561785e-310,7.978583894216e-310,1.84253844261631e-309,9.02007792435233e-310,2.18778662842488e-309,1.09122423778966e-309,1.14330538378251e-309,1.92603678028082e-309,9.31306043544564e-310,1.63033800393482e-309,6.26657731304935e-310,4.6561060691053e-310,2.173677330789504e-309,1.75985622003753e-309,1.481428402135886e-309,1.837724860964836e-309,8.85202992872613e-310,4.00037177482986e-310,1.00064026102842e-309,4.67962052783045e-310,1.391080396674014e-309,1.972836105909426e-309,5.55675202562044e-310,2.093848914286997e-309,1.74839965697715e-309,1.11551970826413e-309,5.38845332329513e-310,1.898075867086525e-309,8.2952905487251e-310,1.856845871393544e-309,2.16652677222977e-309,8.47309486063225e-310,2.15021622995131e-309,1.2442769046389e-310,1.470301879822783e-309,1.79204637503173e-310,1.82189184565799e-309,3.488466870609e-311,3.1649103200082e-310,6.7525100315531e-310,1.94202006922066e-310,1.729979996973214e-309,1.895077334968453e-309,4.2932461374502e-310,6.68549327386843e-310,8.12809776722194e-310,7.8518984143273e-310,1.85377888029726e-309,9.43438877976676e-310,1.478881802702606e-309,2.0573117027793e-309,2.95919481275343e-310,3.0866975514992e-310,6.9538199811979e-310,5.38620856248137e-310,2.034222813665704e-309,9.35810105580256e-310,2.040019759128434e-309,1.12809974893034e-309,1.35627622664884e-309,1.36809337078003e-309,1.591902757920775e-309,9.3042504532209e-310,2.3219205894913e-310,1.512897657503143e-309,1.965590223882593e-309,1.22788383086295e-309,1.061648772261483e-309,1.645248720999077e-309,1.02827279169437e-309,1.576821196531247e-309,4.28019782032466e-310,3.2666154661368e-310,1.616329746867737e-309,7.62232955302616e-310,1.350070652993126e-309,6.02127282204393e-310,1.26546567124794e-309,1.84890669200825e-309,2.55516721918817e-310,7.75052470291673e-310,1.9543574752272e-309,1.6899628034801e-309,1.91142994537375e-309,5.3571978351316e-310,2.16181491223905e-310,2.009979415165403e-309,3.4088087682382e-310,2.834348792595e-310,9.9841914092512e-310,4.7398626577108e-310,6.0310212023307e-311,1.66590668494324e-309,3.5792300793152e-310,1.925711674369447e-309,3.52263180743476e-310,1.46322300985373e-309,4.919059858488e-311,3.996456636426e-311,1.13831237434808e-309,2.08068813838845e-309,1.364860850664887e-309,1.882157636193037e-309,1.553768250529837e-309,1.06441603148541e-309,4.51600092019457e-310,1.468273173337513e-309,1.46360820348203e-309,1.93412639288452e-309,1.6864122326689e-309,1.39225695786698e-309,1.6334935456934e-310,1.16295279588482e-309,1.490798288707863e-309,1.243969401201473e-309,1.31794509166166e-309,1.9825225262663e-310,1.83172591249548e-309,1.247375224807346e-309,1.23541242214344e-309,1.08959795242257e-310,7.48904458150447e-310,1.099031178831404e-309,1.36862399365897e-309,2.5566691914335e-310,1.54149282836627e-309,1.880984465201657e-309,8.2639807924866e-310,4.2388199323507e-310,1.866150634385923e-309,8.7902951352e-311,8.05934499247944e-310,1.421734056782925e-309,5.87997855811274e-310,1.78027306008302e-309,1.14425245933573e-309,1.215020338331685e-309,1.32960321047554e-309,1.488802462204683e-309,1.182991951942027e-309,7.8211467746087e-311,1.839755169314537e-309,5.7909137718252e-310,3.96538382395924e-310,1.048382555348714e-309,1.64399877591354e-309,1.16654232182932e-309,1.83793892376442e-309,8.2775251016309e-310,2.7690183209639e-310,1.596071597276253e-309,1.120588203417846e-309,1.05185364351964e-310,9.53869620944134e-310,5.05963205851617e-310,1.705391944139564e-309,3.764337585843e-312,8.0987826369356e-310,1.67892342774778e-309,6.53224472550665e-310,1.781344207219245e-309,1.004352471774174e-309,1.15795882547131e-309,7.09250012009303e-310,6.9228492402312e-310,1.6660487627623e-309,1.2065403341475e-311,1.098257540249415e-309,4.2997759832e-312,1.66258771004333e-309,7.363356193159e-310,1.558101116083604e-309,3.36900277323192e-310,1.71661014207122e-309,1.1116857130973e-309,1.28576636524764e-309,1.309156176615536e-309,7.0746274028329e-310,4.89446185841578e-310,2.58992771156914e-310,1.146928442125596e-309,1.480413953687917e-309,2.50057978535666e-310,1.876475397377366e-309,9.65439978697026e-310,7.9711563031548e-310,1.132287365396007e-309,1.632731750392276e-309,1.576963354383997e-309,6.3211487097755e-310,1.9692269710372e-310,1.34330728077634e-309,1.95713749174651e-309,2.780121576435e-310,5.05311064154037e-310,9.3510583103457e-310,1.786878397488793e-309,1.107401046764766e-309,1.78954704996822e-309,1.05702802342809e-309,7.8489443582635e-310,2.3385087641618e-310,4.29613408539327e-310,1.73462452400209e-309,7.55095311885166e-310,1.75817277791713e-310,1.468434409731667e-309,4.02578817725504e-310,1.76510126391343e-309,1.058436983737785e-309,1.20911450659713e-309,9.7878289237082e-310,1.51212857118761e-309,9.26445595076995e-310,7.7445914155448e-310,1.07807158093346e-309,3.49046069551343e-310,1.09627904432774e-310,1.5148879310229e-310,1.484973106981176e-309,1.046869008700086e-309,8.07328127535455e-310,9.0111027511714e-311,1.78563088260322e-309,1.07982172076011e-309,8.8776829940237e-310,1.148942363794497e-309,9.0774226802965e-310,1.714969042167786e-309,2.5759724419329e-310,8.4617969318533e-311,2.62336385776013e-310,1.63650427406745e-309,1.52045636640484e-309,2.32670164765528e-310,8.0416845238092e-310,9.71459721755035e-310,1.84384768229597e-309,8.69002687183024e-310,7.3630119917281e-310,3.8663304199727e-310,1.25605789919867e-309,7.1681987553988e-310,1.24206519539989e-309,1.197374201342325e-309,9.83305290061415e-310,3.631619553303e-311,1.04505727163552e-309,7.82594949908904e-310,1.735619331810653e-309,1.08810477027454e-309,6.4363156245057e-311,1.6283802309433e-310,1.816237410591724e-309,9.0494093685562e-310,7.87947049415707e-310,3.7671631393642e-310,1.81252300661323e-310,7.76700668207254e-310,2.9077430263461e-310,1.375537658383846e-309,1.01657256753799e-309,1.648022265578275e-309,9.45086516172885e-310,8.62903217212847e-310,1.06661812686764e-309,1.281800929293593e-309,5.00596952953756e-310,4.23201495686956e-310,1.309899750528656e-309,1.66887568497511e-309,1.41331471623741e-309,6.399713013804e-311,3.25015249547763e-310,8.31414223324666e-310,1.119405078976863e-309,3.65285663032614e-310,1.2322582359392e-309,5.1230966179585e-310,1.333210830514575e-309,1.542811682831977e-309,6.90574702413817e-310,6.90188235509067e-310,1.144600552852216e-309,4.4030864978761e-310,4.9826564736014e-310,1.558486482034706e-309,1.66174832574774e-309,1.632347773919247e-309,1.484645335721464e-309,1.571761371455707e-309,8.324052804024e-310,1.60631974099866e-309,3.69035443343906e-310,1.28323335318327e-309,2.93708640575583e-310,3.40619291929246e-310,7.2911480445381e-310,2.9005180585485e-310,1.77608475633486e-309,1.469444305338045e-309,2.196956875695e-310,1.054809094398035e-309,3.73237760300386e-310,1.313149298029046e-309,1.1627159670742e-309,4.0441568586201e-310,1.655259024092826e-309,9.0612074766059e-310,7.6392525181158e-310,3.57618060642725e-310,1.0786012541278e-309,1.396510535093606e-309,1.25897767455524e-309,7.6680578084915e-311,1.12531892879422e-309,1.71695404639474e-309,1.498211606412077e-309,1.233673009235916e-309,2.6212164441886e-310,1.236337757122695e-309,1.316724354274617e-309,1.60272657521308e-309,1.56699420852243e-309,1.38788059173654e-310,8.32623096864456e-310,2.42870610213935e-310,9.9376706089772e-310,1.223320083558026e-309,7.79317123864375e-310,9.20525924644034e-310,1.47316024511432e-309,5.38721566089944e-310,1.67020336892345e-309,9.5173524879659e-310,1.022749873381015e-309,1.43323549991341e-309,1.027297433001374e-309,5.4786203124078e-310,3.6833092396683e-310,7.45457934495783e-310,1.92452810407314e-310,6.205470648594e-310,9.848637178147e-311,8.65748803063087e-310,1.425295031353716e-309,1.71684840568677e-309,1.26699642158684e-309,9.2633744303073e-310,8.2048010190509e-310,1.349773296913707e-309,3.4310177146283e-310,3.3810662785737e-310,8.63959655041113e-310,8.51396993410615e-310,1.341959957576705e-309,1.96793617405767e-310,1.25830590888723e-309,5.728291067847e-311,9.6084611695973e-310,3.46832683983407e-310,4.7048707393578e-310,4.37027820703244e-310,1.19729108539271e-309,7.4966378020555e-310,3.4351962182839e-310,1.386924340519715e-309,2.248867187659e-310,2.364948313114e-311,1.58733163365517e-309,1.17353958544711e-309,1.512568524531363e-309,1.10828324188192e-309,3.0097641869e-311,1.64033778776941e-309,1.5644767507699e-309,1.0682320637844e-310,9.4698312115177e-310,1.08762096122359e-309,1.62034835548935e-310,1.59216743629654e-309,1.518800538470614e-309,5.1025483150095e-310,6.093151820647e-311,5.21758417843887e-310,2.19918753809656e-310,8.89735853542375e-310,1.02107486574353e-310,8.81041344162817e-310,1.026365564086003e-309,1.04462980339977e-309,4.4796911849686e-310,1.44834087722884e-309,1.475838757301487e-309,1.046468271984706e-309,1.605389502160674e-309,9.8428797513197e-311,9.4013579267547e-310,1.5206025910348e-310,5.79008755491113e-310,1.131645604221655e-309,7.9684754862764e-310,1.49008517212249e-309,1.187822370127093e-309,7.1840249386542e-310,1.57966985577721e-309,3.09891227139943e-310,7.80307777517937e-310,1.062706228676017e-309,2.99687981263507e-310,8.1807709496977e-311,9.31243133149734e-310,1.37083366724986e-309,4.6292772133046e-310,1.0287510257897e-310,2.8035810327841e-310,5.24727297501465e-310,2.38511546878284e-310,5.61968761178815e-310,8.0497169526914e-310,1.43027490066343e-309,4.2987088596516e-310,3.18653664583073e-310,1.57473490154044e-309,1.526231139737506e-309,5.32769999831465e-310,1.552030418338864e-309,9.69697601782297e-310,8.4085410574273e-310,1.000408431354437e-309,4.52037489089433e-310,1.14918367518259e-309,7.1603723601157e-311,6.6389773728711e-310,8.0821525917981e-310,1.572768817880216e-309,1.066313048005324e-309,8.89513449804e-310,9.15538669818943e-310,4.30690480310223e-310,6.2029807290394e-310,3.25191095973573e-310,8.4121411957877e-310,1.38684069471115e-309,5.1499553408817e-310,1.426296787249373e-309,7.48856562212746e-310,1.02155880382163e-309,9.7383048599847e-310,1.31259991573617e-309,1.073874694024967e-309,2.9842000705616e-311,1.374953027985624e-309,6.9361701059298e-310,5.79338134808466e-310,1.70176234478655e-310,1.364788941110857e-309,4.8632059438787e-310,7.04234673644345e-310,4.23263047570255e-310,3.00938777942706e-310,1.396418549336715e-309,7.65899106196773e-310,9.03695736768946e-310,7.11005050372837e-310,1.7146310727216e-310,1.1269418909737e-310,2.82299262164203e-310,1.28528310978433e-309,8.1846838265316e-311,1.064874781602143e-309,4.2859341140798e-310,4.4468028385147e-310,6.6398486945406e-310,4.63937758061947e-310,1.108113875804534e-309,1.382124805914223e-309,2.82098907788867e-310,4.9167231853165e-310,7.42047672768454e-310,1.11957295248183e-310,2.692603076051e-311,9.5374256461275e-310,8.957680900923e-311,2.5249758692378e-310,1.31390027550842e-309,5.8409843495196e-310,3.1263569202348e-310,7.38272660814645e-310,1.19311325959852e-309,7.57004052189975e-310,2.3180679644618e-310,7.32728884803316e-310,1.98763919635454e-310,1.40343125558307e-309,2.6061114188696e-310,9.69574139071167e-310,4.1272440572208e-310,3.783341911579e-310,1.05813482436481e-309,3.64124504413084e-310,1.40124274797331e-309,1.223030973453816e-309,7.91003824624226e-310,3.4703243135627e-310,9.11365051170354e-310,2.8579715031993e-310,3.22607067511716e-310,8.09261187425544e-310,1.4428023054274e-309,7.74357973641823e-310,2.2527866525573e-310,1.43793499983038e-309,8.724603599726e-311,1.9717974198918e-310,2.6456282816961e-310,1.129970225746747e-309,3.599587980555e-311,9.683924516372e-310,1.403940491792817e-309,6.47982367660542e-310,3.84686976811664e-310,1.389079242238866e-309,1.26032312065395e-309,9.33262384539833e-310,1.09260665346946e-309,8.30100894047287e-310,6.96795901825753e-310,2.7796816594334e-310,3.90878403779966e-310,1.217163366606313e-309,3.18510905707894e-310,5.082688250999e-311,8.15428178193393e-310,1.112415811021623e-309,1.38408609167113e-309,1.228951179104584e-309,9.37904837004e-311,1.125282809318633e-309,7.7120413003818e-310,1.39572971522975e-309,5.89841858105603e-310,4.5591415189436e-310,4.4311220237998e-310,6.9965896529371e-310,8.14302864226205e-310,9.77105507565675e-310,2.23283069839775e-310,5.48046457908764e-310,1.51235781557395e-310,1.351166035412186e-309,2.0237855368847e-311,1.02199495100843e-310,5.69457117066823e-310,1.082207909097356e-309,9.99480126575603e-310,5.04472739397353e-310,7.97580817389177e-310,6.8092933192941e-310,3.3208037949927e-310,7.9208573019564e-310,8.89528185235866e-310,2.1651162483461e-310,1.291909529114394e-309,4.1487255786083e-310,1.17211616824643e-309,3.99373792185733e-310,1.10184205541209e-309,5.9492035985484e-310,8.4306195729313e-310,1.315874340059455e-309,7.55062549466953e-310,8.4552444536511e-310,8.2804264343288e-310,6.6092294345894e-310,9.09623566117854e-310,1.269350480065077e-309,1.076552450139955e-309,4.98206175937844e-310,6.61446811804246e-310,5.02077166187485e-310,1.02363106391751e-309,7.84804622459836e-310,8.02017303381986e-310,1.159580479736264e-309,3.5713145665436e-310,1.05360915579193e-310,5.98696406479523e-310,5.2671756666099e-310,5.7677312766113e-310,1.174469014431026e-309,7.5534281126708e-310,1.11813001951133e-310,1.4954671151626e-310,5.2323456800793e-310,1.10620306061679e-309,7.98871059011475e-310,1.10018100357103e-309,9.3627490762172e-310,3.8312633727177e-310,1.24885091377181e-309,8.9435909019775e-310,1.5306029309673e-310,7.55655206733485e-310,7.4642186519436e-310,1.30311508878286e-309,4.5952394733573e-310,1.262111867030436e-309,6.16417061096392e-310,1.14181246965909e-309,1.214074039465905e-309,7.12095503756095e-310,1.132866529379365e-309,3.21151207279806e-310,1.214395081073665e-309,1.254835695284897e-309,3.85347147132313e-310,5.13585439369056e-310,9.09520531179595e-310,5.1342386548407e-310,1.069889887147706e-309,9.7161817096963e-311,9.7025075209716e-310,6.41509303016323e-310,5.753274689188e-311,7.0656969700499e-310,1.283149575396518e-309,3.06094594436545e-310,7.0293417133303e-310,8.49697205713693e-310,5.166191508501e-310,5.3315453683231e-310,1.05759067982815e-309,9.53979156719e-311,7.6094347321724e-311,7.8532097796055e-310,1.24405015445923e-309,4.74086149397716e-310,7.28891376827796e-310,1.2714814791783e-311,8.11868213447685e-310,1.23371338901547e-309,2.090066718742e-310,5.5637469105694e-310,9.83958961800623e-310,5.570505607396e-312,6.5709425994781e-310,2.20169075115906e-310,7.0980359688572e-310,1.07830461997671e-309,5.24442344737463e-310,9.60754331230256e-310,8.62484303097107e-310,5.3611081114291e-310,2.4353321807474e-310,4.679485846525e-311,5.58802069310474e-310,6.1771752874085e-310,1.007776216255635e-309,1.15588459294287e-310,1.21292637109469e-309,5.9387413359049e-310,5.8288924037221e-310,1.0992509365599e-310,4.7933945491483e-310,5.2504835099124e-310,2.276351706783e-311,9.26565973561245e-310,1.122455068792706e-309,5.3218664807817e-310,1.095499087806327e-309,7.7542263555625e-310,4.90334467886714e-310,6.1132376803584e-311,6.04588940561424e-310,6.88237484981984e-310,2.5254563067571e-310,7.59890473363286e-310,8.27923838659584e-310,6.6780595317584e-310,7.73959296460154e-310,8.20242396415147e-310,8.9206517788116e-310,1.06001445368406e-309,2.20213110770453e-310,5.01999503708623e-310,3.0095163562806e-310,6.045985375649e-310,2.7073131060873e-310,1.03101847271216e-309,4.9480520089214e-310,1.167857833722414e-309,7.38219610576377e-310,8.8380820985896e-310,1.02086184270603e-309,6.40096825448447e-310,3.82982674025755e-310,8.2112953278276e-310,1.155972792505266e-309,4.27712377214015e-310,1.038362514962065e-309,5.37372202178677e-310,4.033808001999e-310,3.928856078587e-311,1.02763812055659e-309,9.25841147017707e-310,1.7723798379307e-310,2.67471947011405e-310,6.73017104544853e-310,2.04168000364734e-310,2.41526444635645e-310,7.42697615375873e-310,2.33074665818476e-310,7.8415645124381e-310,4.52465376354277e-310,3.792018941059e-310,4.17371999169007e-310,5.1595007924745e-311,5.2812641566778e-310,8.11293170276696e-310,1.10919424990419e-309,9.72852900476557e-310,1.131092707890713e-309,9.970389236491e-310,1.84853779881237e-310,6.2110397929433e-311,1.041519672749907e-309,9.09373043233857e-310,1.084457615449896e-309,9.49521032076476e-310,7.22942957487247e-310,8.74514933633606e-310,4.0109232859409e-310,5.3033194747677e-310,2.16179268313055e-310,8.9437039677536e-310,1.04706694585905e-309,9.1848727901704e-310,6.61355895605185e-310,9.53848949143734e-310,6.7479409134769e-310,5.1839971346627e-310,4.15224434983326e-310,6.0969012467663e-310,3.985938299572e-310,8.89978778187973e-310,6.4341267332552e-310,9.87652801113186e-310,3.61473738030867e-310,1.39508991607e-312,6.1771728186638e-310,2.0276353881958e-310,7.5661147166646e-310,3.1415829372888e-310,5.59790817405083e-310,1.7050334533075e-310,1.50944792583416e-310,2.13242956445323e-310,9.55087995724323e-310,7.458469805669e-311,2.62691614625e-311,1.97343942320163e-310,4.46348301982066e-310,1.66535591027605e-310,4.9820594240923e-310,2.9862910255504e-310,2.7111477016109e-310,8.3269511667228e-310,5.21002500737116e-310,8.4426467562379e-310,9.5145296658202e-310,6.57015765133015e-310,6.09748701507e-310,1.80143771235155e-310,4.291391983682e-311,6.77570882354853e-310,6.2372850872624e-311,1.95142146049994e-310,8.50395519144554e-310,2.51448143637454e-310,5.83320801560224e-310,1.21748320514725e-310,1.038143055633287e-309,9.3937512010093e-310,1.72300878965325e-310,9.980802746325e-312,3.24306359687593e-310,9.99028057107784e-310,4.92788714629025e-310,4.5772163269608e-310,3.4154683862065e-310,3.1654880602086e-310,1.39269556605365e-310,4.69396528589425e-310,1.1705504075635e-310,8.4385881174984e-310,2.6692635841224e-310,7.81175046377926e-310,4.27115320858226e-310,6.8693509964683e-311,8.72765877352056e-310,4.670353821362e-310,8.2077151217489e-310,7.48487325105383e-310,6.4604449196802e-310,7.65140532394756e-310,2.697563439426e-311,5.3003249820165e-310,6.1615895264466e-310,8.56057365286243e-310,4.12815005891746e-310,2.4993939247059e-310,2.6123313691438e-310,9.5191502501297e-311,7.26457949648455e-310,1.9844715281205e-310,8.41333766777157e-310,6.76285907662264e-310,6.39387967593924e-310,6.5488530445251e-310,7.95420052811956e-310,4.1113598828852e-310,7.8184445637623e-310,4.45460317366246e-310,5.56058903421955e-310,2.52105072474077e-310,6.12978603978134e-310,5.87236244381e-311,1.570130753344e-312,6.8529484841974e-310,9.20527547037306e-310,7.91257186758357e-310,8.50712829192306e-310,9.4980076588043e-310,2.5184480802734e-311,6.49879423553853e-310,2.036148925476e-311,9.2537043100854e-310,5.64826778595526e-310,9.50100595702475e-310,8.9164389286092e-310,1.94567534260843e-310,7.31634243374114e-310,2.9622200615404e-310,2.3264322454056e-310,6.9417816538066e-311,6.8560734908574e-310,9.24585104011274e-310,7.14745343913277e-310,6.6588423513352e-310,1.4895179300845e-310,9.08010653357157e-310,7.103064536697e-310,2.3058959901228e-310,3.8769992135214e-310,1.2692145141736e-310,9.772203655696e-311,2.50044948210836e-310,5.034403142398e-310,8.1598996974198e-310,7.65653899307783e-310,8.7697369674591e-310,3.1960346242314e-310,5.4306513804262e-310,8.1990802599373e-310,5.35781888563654e-310,8.49003077503106e-310,8.05752954251065e-310,1.0238638637458e-310,6.5874037773714e-310,7.7908750026164e-310,1.54698512705283e-310,6.04706018448576e-310,2.295832245264e-312,5.8658592588131e-310,8.33082885773113e-310,6.89891366412947e-310,8.10554067585246e-310,1.31352312028325e-310,1.1766307458803e-310,3.950421433973e-311,8.50141853531015e-310,6.9658282522387e-310,4.5824144173191e-310,2.1891014779069e-310,6.4071001755524e-310,5.97422479858797e-310,1.61092848567473e-310,4.90030124262246e-310,2.3184478694402e-310,3.778330190931e-310,5.1492693965518e-310,2.979358337264e-310,3.62088087076335e-310,2.14783304810193e-310,7.00446634319255e-310,6.9309469220956e-310,2.13735224034507e-310,4.0211731459385e-310,7.29234610060385e-310,5.79814903301e-311,1.80357393508694e-310,7.89363431288664e-310,2.47169285463923e-310,3.5793550361105e-310,1.44753367653075e-310,7.85611890814857e-310,3.45385879298865e-310,7.4558129893937e-311,3.30487286866084e-310,4.94376021164167e-310,1.6588109977988e-310,6.195652916002e-311,5.435368767865e-310,2.92670140269513e-310,3.18969316151033e-310,3.69130440794383e-310,5.2398169587247e-310,2.8804623333206e-310,7.2531584567154e-310,3.57450183392137e-310,9.44048637457e-312,1.91299046817625e-310,6.3954402756843e-310,1.22066282170563e-310,5.31792777528175e-310,2.80728945934653e-310,3.7853073613789e-310,1.9474012900589e-310,3.829281551041e-311,4.014989898286e-311,1.3853774579993e-310,5.59492141527803e-310,7.3381654351881e-310,7.44825447984837e-310,4.3619214141038e-310,5.436842113449e-310,7.43460570448006e-310,5.00410721230403e-310,2.9152964834262e-310,6.01951926617446e-310,2.87724908094852e-310,4.99471587193464e-310,6.0882491360638e-310,3.4925153433087e-310,4.92864211642993e-310,4.7868225387653e-310,4.434243948018e-311,7.4463578001566e-310,5.7047225195558e-310,6.71220915161753e-310,5.9122983154356e-310,7.343436564644e-311,7.09414908750004e-310,2.8534737954972e-310,1.1183552291298e-310,3.84303202763595e-310,6.5232207038549e-310,2.28499382868933e-310,4.9249754613606e-311,7.5726297080332e-310,4.2976950645224e-310,2.8107915543341e-310,2.2035758391157e-310,4.86029708783597e-310,5.81857342546103e-310,5.2713170877278e-310,3.5297678934377e-310,5.71163394124983e-310,5.9249117004996e-310,1.9811779590167e-310,6.65810276340424e-310,8.3432335231685e-311,3.8076732963775e-310,2.16182449240853e-310,4.04953440855495e-310,5.67184766500194e-310,7.6677751742374e-311,1.967741152957e-312,2.45859094638946e-310,3.61492638748747e-310,2.8854309347702e-310,4.22014601376697e-310,6.49518446926577e-310,7.11344162066637e-310,4.5126828437424e-311,4.43550851086e-312,1.9148003464426e-311,4.3803448551073e-310,1.4083827553297e-310,6.94872952747053e-310,2.1463998600866e-310,4.4395051609374e-310,6.3664475966138e-310,6.4184299459398e-310,2.52361510978707e-310,2.35019695676134e-310,4.1462547487951e-310,4.50014572272235e-310,3.07091793770756e-310,3.84718970220533e-310,3.69810075781624e-310,2.81921232650827e-310,4.2042445585107e-310,3.1621122908402e-310,1.66804777011416e-310,4.48382485117946e-310,8.3884263373513e-311,7.46386702977e-312,3.1169093742299e-310,3.6940487348161e-310,5.04600979355723e-310,1.07539677854277e-310,2.09301424699143e-310,3.15852902639187e-310,4.4067480589444e-310,2.0557238049423e-310,1.98044813019585e-310,4.1292480735791e-310,1.7988340586973e-310,2.9246050311436e-310,2.2712907484343e-310,4.05969616261165e-310,5.824821040563e-310,3.59538840462324e-310,2.3964179381317e-310,7.784909771628e-311,4.40607497113417e-310,1.7292928336663e-310,5.30948252352e-310,4.79674273441724e-310,4.7225920444525e-310,5.15693203751057e-310,5.82903022054264e-310,2.23992884134983e-310,3.3635540491203e-310,2.00868207490275e-310,6.610749982286e-312,1.30851699521684e-310,1.2451541369134e-310,6.2970080854542e-310,4.9379212639221e-310,2.737401634309e-310,2.534501196309e-311,2.0790072706567e-310,2.5726716601481e-310,5.2790435564755e-310,2.9750524269703e-310,9.9121439424367e-311,1.37649627360194e-310,1.29251601391777e-310,1.11993243070255e-310,3.699619358406e-310,4.161680136832e-311,2.98412712124606e-310,3.2337161485695e-310,1.97641478934756e-310,2.0198745151903e-310,3.6085878751086e-310,2.8551521626945e-310,8.4803263390645e-311,3.7092479435565e-310,3.09513625038705e-310,2.5870402570902e-310,4.7973595034332e-310,5.9314454910636e-310,4.0587910477676e-310,1.8360233234304e-310,4.74556071651494e-310,3.8322771739113e-310,3.53015583076245e-310,1.4814453419443e-310,2.67003908633225e-310,3.72228100881957e-310,1.20669103131353e-310,1.4814117243915e-311,3.40294902226804e-310,1.566391348147e-311,1.60806432881043e-310,2.6388207718164e-310,4.4676624290262e-310,5.6819986248817e-311,3.5735585205258e-310,2.74433745193827e-310,1.3171989600642e-310,2.8661175987339e-310,1.49847697102325e-310,5.4946406088234e-310,2.6860725585962e-310,3.85513953748215e-310,1.53644922719913e-310,4.21666495693254e-310,6.261833712448e-311,4.69578995094e-311,2.1237823615251e-310,1.6425721634759e-310,2.33245506138754e-310,5.41936630056826e-310,1.73247606018917e-310,2.78999446443813e-310,1.79950790549566e-310,4.3122697727889e-310,1.4650832017198e-310,3.4638263770332e-310,4.5645309181755e-311,5.2079448252668e-310,3.78564698383605e-310,1.69014988788454e-310,3.74606311675155e-310,1.7318695055111e-310,4.15043639585685e-310,2.8838073714287e-310,5.19840396560465e-310,3.47862673228747e-310,2.5030014899944e-310,4.1259079546633e-310,3.9917235118786e-310,1.2700749828367e-310,4.3398507845078e-310,3.5260422586046e-310,4.59718381827497e-310,5.0752456060283e-310,3.3486489769263e-310,3.66857056301344e-310,1.42216120871854e-310,9.711223196e-314,3.5150040536049e-310,1.68406456442666e-310,1.2388606245906e-310,1.7675121362108e-310,1.7568612334151e-310,7.043747207066e-311,4.31774999746307e-310,5.363616159333e-311,2.9511708482139e-310,4.56225102898905e-310,2.399271919359e-311,3.68645048858806e-310,2.0196933421182e-310,1.83395890961844e-310,2.2242483793837e-311,3.07585323317195e-310,2.51287656552117e-310,2.93840840497045e-310,6.10938670762e-311,7.899620730715e-311,2.086016957972e-311,9.3873844875524e-311,3.73771915306654e-310,9.7898097341905e-311,2.67152409917894e-310,3.54300201736385e-310,2.2671745358761e-310,1.552163274436e-311,1.77071058368408e-310,2.3657386678731e-310,4.38946883535585e-310,5.4191463215157e-311,3.984518450193e-310,3.03805888355597e-310,3.1152301734982e-310,1.41071557223784e-310,2.8934244652645e-310,1.4300389043413e-311,4.23749759746247e-310,3.4865604285193e-310,2.9006498674721e-310,1.6349978329843e-310,1.20286485562207e-310,2.4237088077073e-310,2.30990771650976e-310,5.147959996451e-311,1.2701493920706e-310,1.0550229922375e-311,7.1484264112663e-311,3.03774610282173e-310,3.05498123713836e-310,3.6796133712218e-310,2.8196442153588e-310,3.12591643978174e-310,2.46417183600626e-310,8.70794779948e-312,3.5149228114066e-310,1.3197512763666e-310,6.3450049070675e-311,1.23055675093976e-310,3.27547423655473e-310,4.87900254406e-313,6.6043617111516e-311,1.07100225396216e-310,6.4425717089994e-311,2.69353775550427e-310,3.58827410518995e-310,2.2866140768992e-310,3.46693021785274e-310,3.72224482379816e-310,2.3182701444817e-310,1.9260853738426e-311,2.80845251402796e-310,1.4900485749258e-310,1.97319531215997e-310,2.6561910646055e-311,3.34157698232577e-310,3.7492073932907e-310,3.28213634654514e-310,2.0743107881184e-310,2.83547426837956e-310,4.0140398018744e-311,2.03486169702896e-310,2.3933726595624e-310,1.0415240941774e-310,3.52311940753154e-310,1.9142208824827e-311,3.4195760608789e-310,1.80219338147726e-310,2.2890238976354e-310,4.798737430675e-311,1.48027718027484e-310,2.6628098576415e-310,2.2433849506871e-310,1.4612078255184e-311,2.924616479839e-311,1.28159409440246e-310,1.74319937258276e-310,2.77778249780213e-310,1.635396990084e-312,2.777113707798e-310,3.665428878081e-311,1.28522987368997e-310,2.56424742264465e-310,1.1372741484522e-310,3.20809797814003e-310,5.307068953035e-311,1.89768897980113e-310,2.29262275562057e-310,1.08599318278623e-310,2.2442996751736e-310,2.14615676542915e-310,2.83578391171917e-310,1.8103052971605e-310,2.8988289111604e-310,1.4443380721897e-310,2.8809708032616e-310,2.83641596888514e-310,2.03656146457927e-310,3.09967755092457e-310,3.4494951648465e-311,2.55979836326746e-310,7.170423806437e-311,5.14630082097e-311,2.9433162119909e-310,1.04304226194805e-310,1.95745191538226e-310,8.943086075933e-312,7.9148428347736e-311,1.9526285612501e-310,4.9608324275357e-311,2.5645687195747e-310,6.2127200594974e-311,2.5192686207953e-310,1.6883098002596e-310,1.2280350194541e-310,1.3348299775711e-310,1.75789904353283e-310,3.4756751685856e-311,1.0395502264161e-310,7.701234709537e-311,4.4035718107087e-311,1.02669433802956e-310,4.0224603767e-312,1.9084141722219e-310,1.13625594026405e-310,9.161617528612e-311,1.0009468728306e-310,1.36959183061154e-310,3.278100107767e-311,2.44736103172004e-310,1.218651216704e-311,7.9214417761627e-311,8.563854815624e-312,1.5462855509029e-310,2.1945587798959e-310,9.187710211017e-311,8.753488932145e-311,1.64710275663457e-310,1.9857148141996e-310,7.632010166214e-311,6.6316563721933e-311,1.45509974047172e-310,1.7703783667662e-310,9.63953904768e-312,1.05083953505965e-310,5.5631641701063e-311,3.4072868483697e-311,1.38972183839477e-310,1.13811344981504e-310,6.964690733586e-311,8.364996111966e-311,2.15281259959264e-310,5.865307651897e-311,1.3913212893516e-310,9.610304064809e-311,1.41879312384754e-310,1.55786777601606e-310,8.874155270778e-311,1.05265125756525e-310,3.285493140441e-311,2.01028208836815e-310,6.471452745341e-311,1.8803647366641e-310,1.77259591170866e-310,8.401505115795e-311,1.0229121343544e-310,4.227603667173e-311,4.954252632561e-311,1.504231346247e-311,1.1273921245536e-310,9.5591896692566e-311,1.29416484142313e-310,1.046560226989e-310,1.6656600719426e-310,5.771221851228e-311,1.4239998965079e-310,6.2924743306363e-311,3.324456893926e-311,6.2921910500727e-311,2.7986633759217e-311,6.88085583349e-311,1.61220459264627e-310,3.2242889375295e-311,1.5006555764651e-310,1.43539315215794e-310,5.49619428819e-312,6.835478583668e-311,1.7371145800394e-310,1.64313956658326e-310,5.5355937098173e-311,5.026839279586e-312,4.8410554158026e-311,4.2705630697674e-311,3.6815595503347e-311,5.301227314683e-311,1.1666049099122e-310,1.440035722184e-312,1.19470678979435e-310,5.24100068679e-312,6.002604107543e-311,4.674449533098e-311,1.0645040798129e-310,1.29865654648523e-310,9.9393370899203e-311,8.95799685411e-312,8.2693013022457e-311,4.987265344288e-311,8.412575478389e-311,8.932315477655e-311,1.220111415267e-311,5.9881388512937e-311,7.553202662112e-311,1.26213037583996e-310,1.4465797665e-311,6.5494882859237e-311,9.776988131081e-311,5.4479840167183e-311,7.154580220803e-311,3.1471101769236e-311,6.5113490647e-312,6.0255669466124e-311,1.06657004421543e-310,5.9554625000544e-311,6.2416405079536e-311,1.00166565823636e-310,3.173667743767e-311,2.546854785455e-311,8.309109960752e-311,6.197779068989e-311,1.932821097131e-311,8.0912822532166e-311,7.078718125771e-311,8.024264073314e-311,7.396670390821e-311,3.6850487877353e-311,5.896577834935e-311,4.340667453308e-311,5.26945847695e-311,5.5465032539924e-311,6.01598738658e-312,6.1161228542725e-311,7.9526175532645e-311,5.380269408453e-311,1.75828573381e-311,4.4703696180235e-311,6.2267891008844e-311,4.8748315983875e-311,5.3302809843997e-311,2.77533067337e-311,3.480588608938e-311,3.0212088873277e-311,7.238644891479e-311,3.26382447176e-312,1.329063330602e-311,4.3414609442264e-311,2.4988984507997e-311,3.7688066518726e-311,3.999735907357e-311,5.787015909627e-311,1.4189760960484e-311,1.398223307106e-312,3.51119647737e-312,9.332206274834e-312,3.1284330544492e-311,1.8610465309286e-311,2.88949178624e-312,3.2894920996433e-311,4.511191817027e-311,3.197951791533e-311,1.915436035069e-311,2.062824195463e-311,5.551235248286e-312,1.837866327906e-311,6.43480529189e-312,2.287720419996e-311,3.4300492641567e-311,3.641877873e-312,2.406654239842e-311,1.269520713379e-311,2.039283796307e-311,1.3689729170233e-311,2.498102298995e-311,1.219147438743e-311,1.2404812530826e-311,1.50598287084e-312,1.6800310792653e-311,3.84000231364e-312,2.54605906357e-313,2.16267869763e-313,5.360932788236e-312,8.940996348353e-312,9.000038957887e-312,7.796343583706e-312,5.15877095642e-312,4.517402906966e-312,2.026897093577e-312,1.91630050328e-312],"x":[3.14e-52,3.1384457e-52,3.1368914000000002e-52,3.1353371e-52,3.1337828e-52,3.1322285e-52,3.1306742e-52,3.1291199e-52,3.1275656e-52,3.1260113e-52,3.124457e-52,3.1229027000000002e-52,3.1213484e-52,3.1197941e-52,3.1182398e-52,3.1166855e-52,3.1151312e-52,3.1135769e-52,3.1120226e-52,3.1104683e-52,3.1089140000000002e-52,3.1073597e-52,3.1058054e-52,3.1042511e-52,3.1026968e-52,3.1011425e-52,3.0995882e-52,3.0980339e-52,3.0964796e-52,3.0949253000000002e-52,3.093371e-52,3.0918167e-52,3.0902624e-52,3.0887081e-52,3.0871538e-52,3.0855995e-52,3.0840452e-52,3.0824909e-52,3.0809366e-52,3.0793823e-52,3.077828e-52,3.0762737e-52,3.0747194000000002e-52,3.0731651e-52,3.0716108e-52,3.0700565e-52,3.0685022e-52,3.0669479e-52,3.0653936e-52,3.0638393e-52,3.062285e-52,3.0607307000000002e-52,3.0591764e-52,3.0576221e-52,3.0560678e-52,3.0545135e-52,3.0529592e-52,3.0514049e-52,3.0498506e-52,3.0482963e-52,3.0467420000000002e-52,3.0451877e-52,3.0436334e-52,3.0420791e-52,3.0405248e-52,3.0389705e-52,3.0374162e-52,3.0358619e-52,3.0343076e-52,3.0327533000000002e-52,3.031199e-52,3.0296447e-52,3.0280904e-52,3.0265361e-52,3.0249818e-52,3.0234275e-52,3.0218732e-52,3.0203189e-52,3.0187646000000002e-52,3.0172103e-52,3.015656e-52,3.0141017e-52,3.0125474e-52,3.0109931e-52,3.0094388e-52,3.0078845e-52,3.0063302e-52,3.0047759000000002e-52,3.0032216e-52,3.0016673e-52,3.000113e-52,2.9985587e-52,2.9970044e-52,2.9954501e-52,2.9938958e-52,2.9923415e-52,2.9907872e-52,2.9892329e-52,2.9876786e-52,2.9861243e-52,2.98457e-52,2.9830157e-52,2.9814614e-52,2.9799071e-52,2.9783528e-52,2.9767985e-52,2.9752442e-52,2.9736899e-52,2.9721356e-52,2.9705813000000002e-52,2.969027e-52,2.9674727e-52,2.9659184e-52,2.9643641e-52,2.9628098e-52,2.9612555e-52,2.9597012e-52,2.9581469e-52,2.9565926000000002e-52,2.9550383e-52,2.953484e-52,2.9519297e-52,2.9503754e-52,2.9488211e-52,2.9472668e-52,2.9457125e-52,2.9441582e-52,2.9426039000000002e-52,2.9410496e-52,2.9394953e-52,2.937941e-52,2.9363867e-52,2.9348324e-52,2.9332781e-52,2.9317238e-52,2.9301695e-52,2.9286152000000002e-52,2.9270609e-52,2.9255066e-52,2.9239523e-52,2.922398e-52,2.9208437e-52,2.9192894e-52,2.9177351e-52,2.9161808e-52,2.9146265000000002e-52,2.9130722e-52,2.9115179e-52,2.9099636e-52,2.9084093e-52,2.906855e-52,2.9053007e-52,2.9037464e-52,2.9021921e-52,2.9006378000000002e-52,2.8990835e-52,2.8975292e-52,2.8959749e-52,2.8944206e-52,2.8928663e-52,2.891312e-52,2.8897577e-52,2.8882034e-52,2.8866491e-52,2.8850948e-52,2.8835405e-52,2.8819862e-52,2.8804319000000002e-52,2.8788776e-52,2.8773233e-52,2.875769e-52,2.8742147e-52,2.8726604e-52,2.8711061e-52,2.8695518e-52,2.8679975e-52,2.8664432000000002e-52,2.8648889e-52,2.8633346e-52,2.8617803e-52,2.860226e-52,2.8586717e-52,2.8571174e-52,2.8555631e-52,2.8540088e-52,2.8524545000000002e-52,2.8509002e-52,2.8493459e-52,2.8477916e-52,2.8462373e-52,2.844683e-52,2.8431287e-52,2.8415744e-52,2.8400201e-52,2.8384658000000002e-52,2.8369115e-52,2.8353572e-52,2.8338029e-52,2.8322486e-52,2.8306943e-52,2.82914e-52,2.8275857e-52,2.8260314e-52,2.8244771000000002e-52,2.8229228e-52,2.8213685e-52,2.8198142e-52,2.8182599e-52,2.8167056e-52,2.8151513e-52,2.813597e-52,2.8120427e-52,2.8104884000000002e-52,2.8089341e-52,2.8073798e-52,2.8058255e-52,2.8042712e-52,2.8027169e-52,2.8011626e-52,2.7996083e-52,2.798054e-52,2.7964997e-52,2.7949454e-52,2.7933911e-52,2.7918368e-52,2.7902825e-52,2.7887282e-52,2.7871739e-52,2.7856196e-52,2.7840653e-52,2.782511e-52,2.7809567e-52,2.7794024e-52,2.7778481e-52,2.7762938000000002e-52,2.7747395e-52,2.7731852e-52,2.7716309e-52,2.7700766e-52,2.7685223e-52,2.766968e-52,2.7654137e-52,2.7638594e-52,2.7623051000000002e-52,2.7607508e-52,2.7591965e-52,2.7576422e-52,2.7560879e-52,2.7545336e-52,2.7529793e-52,2.751425e-52,2.7498707e-52,2.7483164000000002e-52,2.7467621e-52,2.7452078e-52,2.7436535e-52,2.7420992e-52,2.7405449e-52,2.7389906e-52,2.7374363e-52,2.735882e-52,2.7343277000000002e-52,2.7327734e-52,2.7312191e-52,2.7296648e-52,2.7281105e-52,2.7265562e-52,2.7250019e-52,2.7234476e-52,2.7218933e-52,2.7203390000000002e-52,2.7187847e-52,2.7172304e-52,2.7156761e-52,2.7141218e-52,2.7125675e-52,2.7110132e-52,2.7094589e-52,2.7079046e-52,2.7063503000000002e-52,2.704796e-52,2.7032417e-52,2.7016874e-52,2.7001331e-52,2.6985788e-52,2.6970245e-52,2.6954702e-52,2.6939159e-52,2.6923616e-52,2.6908073e-52,2.689253e-52,2.6876987e-52,2.6861444e-52,2.6845901e-52,2.6830358e-52,2.6814815e-52,2.6799272e-52,2.6783729e-52,2.6768186e-52,2.6752643e-52,2.67371e-52,2.6721557000000002e-52,2.6706014e-52,2.6690471e-52,2.6674928e-52,2.6659385e-52,2.6643842e-52,2.6628299e-52,2.6612756e-52,2.6597213e-52,2.6581670000000002e-52,2.6566127e-52,2.6550584e-52,2.6535041e-52,2.6519498e-52,2.6503955e-52,2.6488412e-52,2.6472869e-52,2.6457326e-52,2.6441783000000002e-52,2.642624e-52,2.6410697e-52,2.6395154e-52,2.6379611e-52,2.6364068e-52,2.6348525e-52,2.6332982e-52,2.6317439e-52,2.6301896000000002e-52,2.6286353e-52,2.627081e-52,2.6255267e-52,2.6239724e-52,2.6224181e-52,2.6208638e-52,2.6193095e-52,2.6177552e-52,2.6162009000000002e-52,2.6146466e-52,2.6130923e-52,2.611538e-52,2.6099837e-52,2.6084294e-52,2.6068751e-52,2.6053208e-52,2.6037665e-52,2.6022122e-52,2.6006579e-52,2.5991036e-52,2.5975493e-52,2.595995e-52,2.5944407e-52,2.5928864e-52,2.5913321e-52,2.5897778e-52,2.5882235e-52,2.5866692e-52,2.5851149e-52,2.5835606e-52,2.5820063000000002e-52,2.580452e-52,2.5788977e-52,2.5773434e-52,2.5757891e-52,2.5742348e-52,2.5726805e-52,2.5711262e-52,2.5695719e-52,2.5680176000000002e-52,2.5664633e-52,2.564909e-52,2.5633547e-52,2.5618004e-52,2.5602461e-52,2.5586918e-52,2.5571375e-52,2.5555832e-52,2.5540289000000002e-52,2.5524746e-52,2.5509203e-52,2.549366e-52,2.5478117e-52,2.5462574e-52,2.5447031e-52,2.5431488e-52,2.5415945e-52,2.5400402000000002e-52,2.5384859e-52,2.5369316e-52,2.5353773e-52,2.533823e-52,2.5322687e-52,2.5307144e-52,2.5291601e-52,2.5276058e-52,2.5260515000000002e-52,2.5244972e-52,2.5229429e-52,2.5213886e-52,2.5198343e-52,2.51828e-52,2.5167257e-52,2.5151714e-52,2.5136171e-52,2.5120628000000002e-52,2.5105085e-52,2.5089542e-52,2.5073999e-52,2.5058456e-52,2.5042913e-52,2.502737e-52,2.5011827e-52,2.4996284e-52,2.4980741e-52,2.4965198e-52,2.4949655e-52,2.4934112e-52,2.4918569e-52,2.4903026e-52,2.4887483e-52,2.487194e-52,2.4856397e-52,2.4840854e-52,2.4825311e-52,2.4809768e-52,2.4794225e-52,2.4778682000000002e-52,2.4763139e-52,2.4747596e-52,2.4732053e-52,2.471651e-52,2.4700967e-52,2.4685424e-52,2.4669881e-52,2.4654338e-52,2.4638795000000002e-52,2.4623252e-52,2.4607709e-52,2.4592166e-52,2.4576623e-52,2.456108e-52,2.4545537e-52,2.4529994e-52,2.4514451e-52,2.4498908000000002e-52,2.4483365e-52,2.4467822e-52,2.4452279e-52,2.4436736e-52,2.4421193e-52,2.440565e-52,2.4390107e-52,2.4374564e-52,2.4359021000000002e-52,2.4343478e-52,2.4327935e-52,2.4312392e-52,2.4296849e-52,2.4281306e-52,2.4265763e-52,2.425022e-52,2.4234677e-52,2.4219134000000002e-52,2.4203591e-52,2.4188048e-52,2.4172505e-52,2.4156962e-52,2.4141419e-52,2.4125876e-52,2.4110333e-52,2.409479e-52,2.4079247e-52,2.4063704e-52,2.4048161e-52,2.4032618e-52,2.4017075e-52,2.4001532e-52,2.3985989e-52,2.3970446e-52,2.3954903e-52,2.393936e-52,2.3923817e-52,2.3908274e-52,2.3892731e-52,2.3877188e-52,2.3861645e-52,2.3846102e-52,2.3830559e-52,2.3815016e-52,2.3799473e-52,2.378393e-52,2.3768387e-52,2.3752844e-52,2.3737301000000002e-52,2.3721758e-52,2.3706215e-52,2.3690672e-52,2.3675129e-52,2.3659586e-52,2.3644043e-52,2.36285e-52,2.3612957e-52,2.3597414000000002e-52,2.3581871e-52,2.3566328e-52,2.3550785e-52,2.3535242e-52,2.3519699e-52,2.3504156e-52,2.3488613e-52,2.347307e-52,2.3457527000000002e-52,2.3441984e-52,2.3426441e-52,2.3410898e-52,2.3395355e-52,2.3379812e-52,2.3364269e-52,2.3348726e-52,2.3333183e-52,2.3317640000000002e-52,2.3302097e-52,2.3286554e-52,2.3271011e-52,2.3255468e-52,2.3239925e-52,2.3224382e-52,2.3208839e-52,2.3193296e-52,2.3177753000000002e-52,2.316221e-52,2.3146667e-52,2.3131124e-52,2.3115581e-52,2.3100038e-52,2.3084495e-52,2.3068952e-52,2.3053409e-52,2.3037866e-52,2.3022323e-52,2.300678e-52,2.2991237e-52,2.2975694e-52,2.2960151e-52,2.2944608e-52,2.2929065e-52,2.2913522e-52,2.2897979e-52,2.2882436e-52,2.2866893e-52,2.285135e-52,2.2835807e-52,2.2820264e-52,2.2804721e-52,2.2789178e-52,2.2773635e-52,2.2758092e-52,2.2742549e-52,2.2727006e-52,2.2711463e-52,2.2695920000000002e-52,2.2680377e-52,2.2664834e-52,2.2649291e-52,2.2633748e-52,2.2618205e-52,2.2602662e-52,2.2587119e-52,2.2571576e-52,2.2556033000000002e-52,2.254049e-52,2.2524947e-52,2.2509404e-52,2.2493861e-52,2.2478318e-52,2.2462775e-52,2.2447232e-52,2.2431689e-52,2.2416146000000002e-52,2.2400603e-52,2.238506e-52,2.2369517e-52,2.2353974e-52,2.2338431e-52,2.2322888e-52,2.2307345e-52,2.2291802e-52,2.2276259000000002e-52,2.2260716e-52,2.2245173e-52,2.222963e-52,2.2214087e-52,2.2198544e-52,2.2183001e-52,2.2167458e-52,2.2151915e-52,2.2136372000000002e-52,2.2120829e-52,2.2105286e-52,2.2089743e-52,2.20742e-52,2.2058657e-52,2.2043114e-52,2.2027571e-52,2.2012028e-52,2.1996485e-52,2.1980942e-52,2.1965399e-52,2.1949856e-52,2.1934313e-52,2.191877e-52,2.1903227e-52,2.1887684e-52,2.1872141e-52,2.1856598e-52,2.1841055e-52,2.1825512e-52,2.1809969e-52,2.1794426000000002e-52,2.1778883e-52,2.176334e-52,2.1747797e-52,2.1732254e-52,2.1716711e-52,2.1701168e-52,2.1685625e-52,2.1670082e-52,2.1654539000000002e-52,2.1638996e-52,2.1623453e-52,2.160791e-52,2.1592367e-52,2.1576824e-52,2.1561281e-52,2.1545738e-52,2.1530195e-52,2.1514652000000002e-52,2.1499109e-52,2.1483566e-52,2.1468023e-52,2.145248e-52,2.1436937e-52,2.1421394e-52,2.1405851e-52,2.1390308e-52,2.1374765000000002e-52,2.1359222e-52,2.1343679e-52,2.1328136e-52,2.1312593e-52,2.129705e-52,2.1281507e-52,2.1265964e-52,2.1250421e-52,2.1234878000000002e-52,2.1219335e-52,2.1203792e-52,2.1188249e-52,2.1172706e-52,2.1157163e-52,2.114162e-52,2.1126077e-52,2.1110534e-52,2.1094991e-52,2.1079448e-52,2.1063905e-52,2.1048362e-52,2.1032819e-52,2.1017276e-52,2.1001733e-52,2.098619e-52,2.0970647e-52,2.0955104e-52,2.0939561e-52,2.0924018e-52,2.0908475e-52,2.0892932e-52,2.0877389e-52,2.0861846e-52,2.0846303e-52,2.083076e-52,2.0815217e-52,2.0799674e-52,2.0784131e-52,2.0768588e-52,2.0753045000000002e-52,2.0737502e-52,2.0721959e-52,2.0706416e-52,2.0690873e-52,2.067533e-52,2.0659787e-52,2.0644244e-52,2.0628701e-52,2.0613158000000002e-52,2.0597615e-52,2.0582072e-52,2.0566529e-52,2.0550986e-52,2.0535443e-52,2.05199e-52,2.0504357e-52,2.0488814e-52,2.0473271000000002e-52,2.0457728e-52,2.0442185e-52,2.0426642e-52,2.0411099e-52,2.0395556e-52,2.0380013e-52,2.036447e-52,2.0348927e-52,2.0333384000000002e-52,2.0317841e-52,2.0302298e-52,2.0286755e-52,2.0271212e-52,2.0255669e-52,2.0240126e-52,2.0224583e-52,2.020904e-52,2.0193497000000002e-52,2.0177954e-52,2.0162411e-52,2.0146868e-52,2.0131325e-52,2.0115782e-52,2.0100239e-52,2.0084696e-52,2.0069153e-52,2.005361e-52,2.0038067e-52,2.0022524e-52,2.0006981e-52,1.9991438e-52,1.9975895e-52,1.9960352e-52,1.9944809e-52,1.9929266e-52,1.9913723e-52,1.989818e-52,1.9882637e-52,1.9867094e-52,1.9851551e-52,1.9836008e-52,1.9820465e-52,1.9804922e-52,1.9789379e-52,1.9773836e-52,1.9758293e-52,1.974275e-52,1.9727207e-52,1.9711664000000002e-52,1.9696121e-52,1.9680578e-52,1.9665035e-52,1.9649492e-52,1.9633949e-52,1.9618406e-52,1.9602863e-52,1.958732e-52,1.9571777000000002e-52,1.9556234e-52,1.9540691e-52,1.9525148e-52,1.9509605e-52,1.9494062e-52,1.9478519e-52,1.9462976e-52,1.9447433e-52,1.9431890000000002e-52,1.9416347e-52,1.9400804e-52,1.9385261e-52,1.9369718e-52,1.9354175e-52,1.9338632e-52,1.9323089e-52,1.9307546e-52,1.9292003000000002e-52,1.927646e-52,1.9260917e-52,1.9245374e-52,1.9229831e-52,1.9214288e-52,1.9198745e-52,1.9183202e-52,1.9167659e-52,1.9152116e-52,1.9136573e-52,1.912103e-52,1.9105487e-52,1.9089944e-52,1.9074401e-52,1.9058858e-52,1.9043315e-52,1.9027772e-52,1.9012229e-52,1.8996686e-52,1.8981143e-52,1.89656e-52,1.8950057e-52,1.8934514e-52,1.8918971e-52,1.8903428e-52,1.8887885e-52,1.8872342e-52,1.8856799e-52,1.8841256e-52,1.8825713e-52,1.881017e-52,1.8794627e-52,1.8779084e-52,1.8763541e-52,1.8747998e-52,1.8732455e-52,1.8716912e-52,1.8701369e-52,1.8685826e-52,1.8670283000000002e-52,1.865474e-52,1.8639197e-52,1.8623654e-52,1.8608111e-52,1.8592568e-52,1.8577025e-52,1.8561482e-52,1.8545939e-52,1.8530396000000002e-52,1.8514853e-52,1.849931e-52,1.8483767e-52,1.8468224e-52,1.8452681e-52,1.8437138e-52,1.8421595e-52,1.8406052e-52,1.8390509000000002e-52,1.8374966e-52,1.8359423e-52,1.834388e-52,1.8328337e-52,1.8312794e-52,1.8297251e-52,1.8281708e-52,1.8266165e-52,1.8250622000000002e-52,1.8235079e-52,1.8219536e-52,1.8203993e-52,1.818845e-52,1.8172907e-52,1.8157364e-52,1.8141821e-52,1.8126278e-52,1.8110735e-52,1.8095192e-52,1.8079649e-52,1.8064106e-52,1.8048563e-52,1.803302e-52,1.8017477e-52,1.8001934e-52,1.7986391e-52,1.7970848e-52,1.7955305e-52,1.7939762e-52,1.7924219e-52,1.7908676e-52,1.7893133e-52,1.787759e-52,1.7862047e-52,1.7846504e-52,1.7830961e-52,1.7815418e-52,1.7799875e-52,1.7784332e-52,1.7768789000000002e-52,1.7753246e-52,1.7737703e-52,1.772216e-52,1.7706617e-52,1.7691074e-52,1.7675531e-52,1.7659988e-52,1.7644445e-52,1.7628902000000002e-52,1.7613359e-52,1.7597816e-52,1.7582273e-52,1.756673e-52,1.7551187e-52,1.7535644e-52,1.7520101e-52,1.7504558e-52,1.7489015000000002e-52,1.7473472e-52,1.7457929e-52,1.7442386e-52,1.7426843e-52,1.74113e-52,1.7395757e-52,1.7380214e-52,1.7364671e-52,1.7349128000000002e-52,1.7333585e-52,1.7318042e-52,1.7302499e-52,1.7286956e-52,1.7271413e-52,1.725587e-52,1.7240327e-52,1.7224784e-52,1.7209241e-52,1.7193698e-52,1.7178155e-52,1.7162612e-52,1.7147069e-52,1.7131526e-52,1.7115983e-52,1.710044e-52,1.7084897e-52,1.7069354e-52,1.7053811e-52,1.7038268e-52,1.7022725e-52,1.7007182e-52,1.6991639e-52,1.6976096e-52,1.6960553e-52,1.694501e-52,1.6929467e-52,1.6913924e-52,1.6898381e-52,1.6882838e-52,1.6867295e-52,1.6851752e-52,1.6836209e-52,1.6820666e-52,1.6805123e-52,1.678958e-52,1.6774037e-52,1.6758494e-52,1.6742951e-52,1.6727408000000002e-52,1.6711865e-52,1.6696322e-52,1.6680779e-52,1.6665236e-52,1.6649693e-52,1.663415e-52,1.6618607e-52,1.6603064000000001e-52,1.6587521e-52,1.6571978e-52,1.6556435e-52,1.6540892e-52,1.6525349e-52,1.6509806e-52,1.6494263e-52,1.647872e-52,1.6463177e-52,1.6447634e-52,1.6432091000000001e-52,1.6416548e-52,1.6401005e-52,1.6385462e-52,1.6369919e-52,1.6354376e-52,1.6338833e-52,1.632329e-52,1.6307747e-52,1.6292204000000001e-52,1.6276661e-52,1.6261118e-52,1.6245575e-52,1.6230032e-52,1.6214489e-52,1.6198946e-52,1.6183403e-52,1.616786e-52,1.6152317000000001e-52,1.6136774e-52,1.6121231e-52,1.6105688e-52,1.6090145e-52,1.6074602e-52,1.6059059e-52,1.6043516e-52,1.6027973e-52,1.601243e-52,1.5996887e-52,1.5981344000000001e-52,1.5965801e-52,1.5950258e-52,1.5934715e-52,1.5919172e-52,1.5903629e-52,1.5888086e-52,1.5872543e-52,1.5857e-52,1.5841457000000001e-52,1.5825914e-52,1.5810371e-52,1.5794828e-52,1.5779285e-52,1.5763742e-52,1.5748199e-52,1.5732656e-52,1.5717113e-52,1.5701570000000001e-52,1.5686027e-52,1.5670484e-52,1.5654941e-52,1.5639398e-52,1.5623855e-52,1.5608312e-52,1.5592769e-52,1.5577226e-52,1.5561683000000001e-52,1.554614e-52,1.5530597000000001e-52,1.5515054e-52,1.5499511e-52,1.5483968e-52,1.5468425e-52,1.5452882e-52,1.5437339e-52,1.5421796e-52,1.5406253e-52,1.5390710000000001e-52,1.5375167e-52,1.5359624e-52,1.5344081e-52,1.5328538e-52,1.5312995e-52,1.5297452e-52,1.5281909e-52,1.5266366e-52,1.5250823000000001e-52,1.523528e-52,1.5219737e-52,1.5204194e-52,1.5188651e-52,1.5173108e-52,1.5157565e-52,1.5142022e-52,1.5126479e-52,1.5110936000000001e-52,1.5095393e-52,1.507985e-52,1.5064307e-52,1.5048764e-52,1.5033221e-52,1.5017678e-52,1.5002135e-52,1.4986592e-52,1.4971049e-52,1.4955506e-52,1.4939963000000001e-52,1.492442e-52,1.4908877e-52,1.4893334e-52,1.4877791e-52,1.4862248e-52,1.4846705e-52,1.4831162e-52,1.4815619e-52,1.4800076000000001e-52,1.4784533e-52,1.476899e-52,1.4753447e-52,1.4737904e-52,1.4722361e-52,1.4706818e-52,1.4691275e-52,1.4675732e-52,1.4660189000000001e-52,1.4644646e-52,1.4629103e-52,1.461356e-52,1.4598017e-52,1.4582474e-52,1.4566931e-52,1.4551388e-52,1.4535845e-52,1.4520302e-52,1.4504759e-52,1.4489216000000001e-52,1.4473673e-52,1.445813e-52,1.4442587e-52,1.4427044e-52,1.4411501e-52,1.4395958e-52,1.4380415e-52,1.4364872e-52,1.4349329000000001e-52,1.4333786e-52,1.4318243e-52,1.43027e-52,1.4287157e-52,1.4271614e-52,1.4256071e-52,1.4240528e-52,1.4224985e-52,1.4209442000000001e-52,1.4193899e-52,1.4178356e-52,1.4162813e-52,1.414727e-52,1.4131727e-52,1.4116184e-52,1.4100641e-52,1.4085098e-52,1.4069555e-52,1.4054012e-52,1.4038469e-52,1.4022926e-52,1.4007383e-52,1.399184e-52,1.3976297e-52,1.3960754e-52,1.3945211e-52,1.3929668e-52,1.3914125e-52,1.3898582000000001e-52,1.3883039e-52,1.3867496e-52,1.3851953e-52,1.383641e-52,1.3820867e-52,1.3805324e-52,1.3789781e-52,1.3774238e-52,1.3758695000000001e-52,1.3743152e-52,1.3727609e-52,1.3712066e-52,1.3696523e-52,1.368098e-52,1.3665437e-52,1.3649894e-52,1.3634351e-52,1.3618808000000001e-52,1.3603265e-52,1.3587722e-52,1.3572179e-52,1.3556636e-52,1.3541093e-52,1.352555e-52,1.3510007e-52,1.3494464e-52,1.3478921e-52,1.3463378e-52,1.3447835000000001e-52,1.3432292e-52,1.3416749e-52,1.3401206e-52,1.3385663e-52,1.337012e-52,1.3354577e-52,1.3339034e-52,1.3323491e-52,1.3307948000000001e-52,1.3292405e-52,1.3276862e-52,1.3261319e-52,1.3245776e-52,1.3230233e-52,1.321469e-52,1.3199147e-52,1.3183604e-52,1.3168061000000001e-52,1.3152518e-52,1.3136975e-52,1.3121432e-52,1.3105889e-52,1.3090346e-52,1.3074803e-52,1.305926e-52,1.3043717e-52,1.3028174e-52,1.3012631e-52,1.2997088000000001e-52,1.2981545e-52,1.2966002e-52,1.2950459e-52,1.2934916e-52,1.2919373e-52,1.290383e-52,1.2888287e-52,1.2872744e-52,1.2857201000000001e-52,1.2841658e-52,1.2826115e-52,1.2810572e-52,1.2795029e-52,1.2779486e-52,1.2763943e-52,1.27484e-52,1.2732857e-52,1.2717314000000001e-52,1.2701771e-52,1.2686228e-52,1.2670685e-52,1.2655142e-52,1.2639599e-52,1.2624056e-52,1.2608513e-52,1.259297e-52,1.2577427e-52,1.2561884e-52,1.2546341e-52,1.2530798e-52,1.2515255e-52,1.2499712e-52,1.2484169e-52,1.2468626e-52,1.2453083e-52,1.243754e-52,1.2421997e-52,1.2406454000000001e-52,1.2390911e-52,1.2375368e-52,1.2359825e-52,1.2344282e-52,1.2328739e-52,1.2313196e-52,1.2297653e-52,1.228211e-52,1.2266567000000001e-52,1.2251024e-52,1.2235481e-52,1.2219938e-52,1.2204395e-52,1.2188852e-52,1.2173309e-52,1.2157766e-52,1.2142223e-52,1.212668e-52,1.2111137e-52,1.2095594e-52,1.2080051e-52,1.2064508e-52,1.2048965e-52,1.2033422e-52,1.2017879e-52,1.2002336e-52,1.1986793e-52,1.197125e-52,1.1955707000000001e-52,1.1940164e-52,1.1924621e-52,1.1909078e-52,1.1893535e-52,1.1877992e-52,1.1862449e-52,1.1846906e-52,1.1831363e-52,1.1815820000000001e-52,1.1800277e-52,1.1784734e-52,1.1769191e-52,1.1753648e-52,1.1738105e-52,1.1722562e-52,1.1707019e-52,1.1691476e-52,1.1675933000000001e-52,1.166039e-52,1.1644847e-52,1.1629304e-52,1.1613761e-52,1.1598218e-52,1.1582675e-52,1.1567132e-52,1.1551589e-52,1.1536046e-52,1.1520503e-52,1.1504960000000001e-52,1.1489417e-52,1.1473874e-52,1.1458331e-52,1.1442788e-52,1.1427245e-52,1.1411702e-52,1.1396159e-52,1.1380616e-52,1.1365073000000001e-52,1.134953e-52,1.1333987e-52,1.1318444e-52,1.1302901e-52,1.1287358e-52,1.1271815e-52,1.1256272e-52,1.1240729e-52,1.1225186000000001e-52,1.1209643e-52,1.11941e-52,1.1178557e-52,1.1163014e-52,1.1147471e-52,1.1131928e-52,1.1116385e-52,1.1100842e-52,1.1085299e-52,1.1069756e-52,1.1054213e-52,1.103867e-52,1.1023127e-52,1.1007584e-52,1.0992041e-52,1.0976498e-52,1.0960955e-52,1.0945412e-52,1.0929869e-52,1.0914326000000001e-52,1.0898783e-52,1.088324e-52,1.0867697e-52,1.0852154e-52,1.0836611e-52,1.0821068e-52,1.0805525e-52,1.0789982e-52,1.0774439000000001e-52,1.0758896e-52,1.0743353e-52,1.072781e-52,1.0712267e-52,1.0696724e-52,1.0681181e-52,1.0665638e-52,1.0650095e-52,1.0634552e-52,1.0619009e-52,1.0603466e-52,1.0587923e-52,1.057238e-52,1.0556837e-52,1.0541294e-52,1.0525751e-52,1.0510208e-52,1.0494665e-52,1.0479122e-52,1.0463579000000001e-52,1.0448036e-52,1.0432493e-52,1.041695e-52,1.0401407e-52,1.0385864e-52,1.0370321e-52,1.0354778e-52,1.0339235e-52,1.0323692000000001e-52,1.0308149e-52,1.0292606e-52,1.0277063e-52,1.026152e-52,1.0245977e-52,1.0230434e-52,1.0214891e-52,1.0199348e-52,1.0183805000000001e-52,1.0168262e-52,1.0152719e-52,1.0137176e-52,1.0121633e-52,1.010609e-52,1.0090547e-52,1.0075004e-52,1.0059461e-52,1.0043918e-52,1.0028375e-52,1.0012832000000001e-52,9.997289e-53,9.981746e-53,9.966203e-53,9.95066e-53,9.935117e-53,9.919574e-53,9.904031e-53,9.888488e-53,9.872945000000001e-53,9.857402e-53,9.841859e-53,9.826316e-53,9.810773e-53,9.79523e-53,9.779687e-53,9.764144e-53,9.748601e-53,9.733058000000001e-53,9.717515e-53,9.701972e-53,9.686429e-53,9.670886e-53,9.655343e-53,9.6398e-53,9.624257e-53,9.608714e-53,9.593171e-53,9.577628e-53,9.562085e-53,9.546542e-53,9.530999e-53,9.515456e-53,9.499913e-53,9.48437e-53,9.468827e-53,9.453284e-53,9.437741e-53,9.422198000000001e-53,9.406655e-53,9.391112e-53,9.375569e-53,9.360026e-53,9.344483e-53,9.32894e-53,9.313397e-53,9.297854e-53,9.282311000000001e-53,9.266768e-53,9.251225e-53,9.235682e-53,9.220139e-53,9.204596e-53,9.189053e-53,9.17351e-53,9.157967e-53,9.142424e-53,9.126881e-53,9.111338e-53,9.095795e-53,9.080252e-53,9.064709e-53,9.049166e-53,9.033623e-53,9.01808e-53,9.002537e-53,8.986994e-53,8.971451000000001e-53,8.955908e-53,8.940365e-53,8.924822e-53,8.909279e-53,8.893736e-53,8.878193e-53,8.86265e-53,8.847107e-53,8.831564000000001e-53,8.816021e-53,8.800478e-53,8.784935e-53,8.769392e-53,8.753849e-53,8.738306e-53,8.722763e-53,8.70722e-53,8.691677e-53,8.676134e-53,8.660591e-53,8.645048e-53,8.629505e-53,8.613962e-53,8.598419e-53,8.582876e-53,8.567333e-53,8.55179e-53,8.536247e-53,8.520704e-53,8.505161e-53,8.489618e-53,8.474075e-53,8.458532e-53,8.442989e-53,8.427446e-53,8.411903e-53,8.39636e-53,8.380817000000001e-53,8.365274e-53,8.349731e-53,8.334188e-53,8.318645e-53,8.3031020000000005e-53,8.287559e-53,8.272016e-53,8.256473e-53,8.24093e-53,8.225387e-53,8.209844e-53,8.194301e-53,8.178758e-53,8.163215000000001e-53,8.147672e-53,8.132129e-53,8.116586e-53,8.101043e-53,8.0855e-53,8.069957e-53,8.054414e-53,8.038871e-53,8.023328e-53,8.0077850000000005e-53,7.992242e-53,7.976699e-53,7.961156e-53,7.945613e-53,7.93007e-53,7.914527e-53,7.898984e-53,7.883441e-53,7.867898000000001e-53,7.8523550000000005e-53,7.836812e-53,7.821269e-53,7.805726e-53,7.790183e-53,7.77464e-53,7.759097e-53,7.743554e-53,7.728011e-53,7.7124680000000005e-53,7.696925e-53,7.681382e-53,7.665839e-53,7.650296e-53,7.634753e-53,7.61921e-53,7.603667e-53,7.588124e-53,7.572581e-53,7.5570380000000005e-53,7.541495e-53,7.525952e-53,7.510409e-53,7.494866e-53,7.479323e-53,7.46378e-53,7.448237e-53,7.432694e-53,7.417151000000001e-53,7.401608e-53,7.386065e-53,7.370522e-53,7.354979e-53,7.339436e-53,7.323893e-53,7.30835e-53,7.292807e-53,7.277264e-53,7.2617210000000005e-53,7.246178e-53,7.230635e-53,7.215092e-53,7.199549e-53,7.184006e-53,7.168463e-53,7.15292e-53,7.137377e-53,7.121834e-53,7.1062910000000005e-53,7.090748e-53,7.075205e-53,7.059662e-53,7.044119e-53,7.028576e-53,7.013033e-53,6.99749e-53,6.981947e-53,6.9664040000000005e-53,6.950861e-53,6.935318e-53,6.919775e-53,6.904232e-53,6.888689e-53,6.873146e-53,6.857603e-53,6.84206e-53,6.826517e-53,6.8109740000000005e-53,6.795431e-53,6.779888e-53,6.764345e-53,6.748802e-53,6.733259e-53,6.717716e-53,6.702173e-53,6.68663e-53,6.671087000000001e-53,6.655544e-53,6.640001e-53,6.624458e-53,6.608915e-53,6.593372e-53,6.577829e-53,6.562286e-53,6.546743e-53,6.5312e-53,6.5156570000000005e-53,6.500114e-53,6.484571e-53,6.469028e-53,6.453485e-53,6.437942e-53,6.422399e-53,6.406856e-53,6.391313e-53,6.37577e-53,6.3602270000000005e-53,6.344684e-53,6.329141e-53,6.313598e-53,6.298055e-53,6.282512e-53,6.266969e-53,6.251426e-53,6.235883e-53,6.2203400000000005e-53,6.204797e-53,6.189254e-53,6.173711e-53,6.158168e-53,6.142625e-53,6.127082e-53,6.111539e-53,6.095996e-53,6.080453e-53,6.0649100000000005e-53,6.049367e-53,6.033824e-53,6.018281e-53,6.002738e-53,5.987195e-53,5.971652e-53,5.956109e-53,5.940566e-53,5.925023000000001e-53,5.90948e-53,5.893937e-53,5.878394e-53,5.862851e-53,5.847308e-53,5.831765e-53,5.816222e-53,5.800679e-53,5.785136e-53,5.7695930000000005e-53,5.75405e-53,5.738507e-53,5.722964e-53,5.707421e-53,5.691878e-53,5.676335e-53,5.660792e-53,5.645249e-53,5.629706e-53,5.6141630000000005e-53,5.59862e-53,5.583077e-53,5.567534e-53,5.551991e-53,5.536448e-53,5.520905e-53,5.505362e-53,5.489819e-53,5.4742760000000005e-53,5.458733e-53,5.44319e-53,5.427647e-53,5.412104e-53,5.396561e-53,5.381018e-53,5.365475e-53,5.349932e-53,5.334389e-53,5.3188460000000005e-53,5.303303e-53,5.28776e-53,5.272217e-53,5.256674e-53,5.241131e-53,5.225588e-53,5.210045e-53,5.194502e-53,5.178959000000001e-53,5.163416e-53,5.147873e-53,5.13233e-53,5.116787e-53,5.101244e-53,5.085701e-53,5.070158e-53,5.054615e-53,5.039072e-53,5.0235290000000005e-53,5.007986e-53,4.992443e-53,4.9769e-53,4.961357e-53,4.945814e-53,4.930271e-53,4.914728e-53,4.899185e-53,4.883642e-53,4.8680990000000005e-53,4.852556e-53,4.837013e-53,4.82147e-53,4.805927e-53,4.790384e-53,4.774841e-53,4.759298e-53,4.743755e-53,4.7282120000000005e-53,4.712669e-53,4.697126e-53,4.681583e-53,4.66604e-53,4.650497e-53,4.634954e-53,4.619411e-53,4.603868e-53,4.588325e-53,4.5727820000000005e-53,4.557239e-53,4.541696e-53,4.526153e-53,4.51061e-53,4.495067e-53,4.479524e-53,4.463981e-53,4.448438e-53,4.432895e-53,4.417352e-53,4.401809e-53,4.386266e-53,4.370723e-53,4.35518e-53,4.339637e-53,4.324094e-53,4.308551e-53,4.293008e-53,4.2774650000000005e-53,4.261922e-53,4.246379e-53,4.230836e-53,4.215293e-53,4.19975e-53,4.184207e-53,4.1686640000000003e-53,4.153121e-53,4.137578e-53,4.122035e-53,4.106492e-53,4.0909490000000003e-53,4.075406e-53,4.059863e-53,4.04432e-53,4.028777e-53,4.0132340000000003e-53,3.997691e-53,3.982148e-53,3.966605e-53,3.951062e-53,3.935519e-53,3.919976e-53,3.904433e-53,3.88889e-53,3.873347e-53,3.857804e-53,3.842261e-53,3.826718e-53,3.811175e-53,3.7956320000000003e-53,3.780089e-53,3.764546e-53,3.749003e-53,3.73346e-53,3.7179170000000003e-53,3.702374e-53,3.686831e-53,3.671288e-53,3.655745e-53,3.6402020000000002e-53,3.624659e-53,3.609116e-53,3.593573e-53,3.57803e-53,3.562487e-53,3.546944e-53,3.531401e-53,3.515858e-53,3.500315e-53,3.484772e-53,3.469229e-53,3.453686e-53,3.438143e-53,3.4226000000000003e-53,3.407057e-53,3.391514e-53,3.375971e-53,3.360428e-53,3.3448850000000003e-53,3.329342e-53,3.313799e-53,3.298256e-53,3.282713e-53,3.2671700000000002e-53,3.251627e-53,3.236084e-53,3.220541e-53,3.204998e-53,3.189455e-53,3.173912e-53,3.158369e-53,3.142826e-53,3.127283e-53,3.11174e-53,3.096197e-53,3.080654e-53,3.065111e-53,3.0495680000000003e-53,3.034025e-53,3.018482e-53,3.002939e-53,2.987396e-53,2.9718530000000003e-53,2.95631e-53,2.940767e-53,2.925224e-53,2.909681e-53,2.8941380000000002e-53,2.878595e-53,2.863052e-53,2.847509e-53,2.831966e-53,2.816423e-53,2.80088e-53,2.785337e-53,2.769794e-53,2.754251e-53,2.738708e-53,2.723165e-53,2.707622e-53,2.692079e-53,2.676536e-53,2.660993e-53,2.64545e-53,2.629907e-53,2.614364e-53,2.5988210000000003e-53,2.583278e-53,2.567735e-53,2.552192e-53,2.536649e-53,2.5211060000000002e-53,2.505563e-53,2.49002e-53,2.474477e-53,2.458934e-53,2.443391e-53,2.427848e-53,2.412305e-53,2.396762e-53,2.381219e-53,2.365676e-53,2.350133e-53,2.33459e-53,2.319047e-53,2.303504e-53,2.287961e-53,2.272418e-53,2.256875e-53,2.241332e-53,2.2257890000000003e-53,2.210246e-53,2.194703e-53,2.17916e-53,2.163617e-53,2.1480740000000002e-53,2.132531e-53,2.116988e-53,2.101445e-53,2.085902e-53,2.070359e-53,2.0548160000000001e-53,2.039273e-53,2.02373e-53,2.008187e-53,1.992644e-53,1.977101e-53,1.961558e-53,1.9460150000000001e-53,1.930472e-53,1.914929e-53,1.899386e-53,1.883843e-53,1.8683000000000001e-53,1.852757e-53,1.837214e-53,1.821671e-53,1.806128e-53,1.790585e-53,1.775042e-53,1.7594990000000001e-53,1.743956e-53,1.728413e-53,1.71287e-53,1.697327e-53,1.6817840000000001e-53,1.666241e-53,1.650698e-53,1.635155e-53,1.619612e-53,1.604069e-53,1.588526e-53,1.5729830000000001e-53,1.55744e-53,1.541897e-53,1.526354e-53,1.510811e-53,1.4952680000000001e-53,1.479725e-53,1.464182e-53,1.448639e-53,1.433096e-53,1.417553e-53,1.40201e-53,1.3864670000000001e-53,1.370924e-53,1.355381e-53,1.339838e-53,1.324295e-53,1.3087520000000001e-53,1.293209e-53,1.277666e-53,1.262123e-53,1.24658e-53,1.231037e-53,1.215494e-53,1.1999510000000001e-53,1.184408e-53,1.168865e-53,1.153322e-53,1.137779e-53,1.1222360000000001e-53,1.106693e-53,1.09115e-53,1.075607e-53,1.060064e-53,1.044521e-53,1.028978e-53,1.013435e-53,9.97892e-54,9.823490000000001e-54,9.668060000000001e-54,9.51263e-54,9.3572e-54,9.20177e-54,9.04634e-54,8.890910000000001e-54,8.735480000000001e-54,8.58005e-54,8.42462e-54,8.26919e-54,8.11376e-54,7.958330000000001e-54,7.802900000000001e-54,7.64747e-54,7.49204e-54,7.33661e-54,7.18118e-54,7.025750000000001e-54,6.870320000000001e-54,6.71489e-54,6.55946e-54,6.40403e-54,6.2486e-54,6.093170000000001e-54,5.937740000000001e-54,5.78231e-54,5.62688e-54,5.47145e-54,5.31602e-54,5.16059e-54,5.00516e-54,4.8497300000000004e-54,4.6943e-54,4.53887e-54,4.3834400000000004e-54,4.22801e-54,4.07258e-54,3.9171500000000004e-54,3.76172e-54,3.60629e-54,3.4508600000000004e-54,3.29543e-54,3.14e-54],"y":[3.14e-309,3.138431569999997e-309,3.136863139999996e-309,3.135294709999995e-309,3.133726279999994e-309,3.132157849999993e-309,3.13058941999999e-309,3.12902098999999e-309,3.12745255999999e-309,3.12588412999999e-309,3.12431569999999e-309,3.122747269999987e-309,3.121178839999986e-309,3.119610409999985e-309,3.118041979999983e-309,3.11647354999998e-309,3.11490511999998e-309,3.11333668999998e-309,3.11176825999998e-309,3.11019982999998e-309,3.108631399999977e-309,3.107062969999976e-309,3.105494539999975e-309,3.103926109999974e-309,3.102357679999973e-309,3.10078924999997e-309,3.09922081999997e-309,3.09765238999997e-309,3.09608395999997e-309,3.09451552999997e-309,3.092947099999966e-309,3.091378669999965e-309,3.089810239999964e-309,3.088241809999963e-309,3.08667337999996e-309,3.08510494999996e-309,3.08353651999996e-309,3.08196808999996e-309,3.08039965999996e-309,3.078831229999957e-309,3.077262799999956e-309,3.075694369999955e-309,3.074125939999954e-309,3.072557509999953e-309,3.07098907999995e-309,3.06942064999995e-309,3.06785221999995e-309,3.06628378999995e-309,3.064715359999947e-309,3.063146929999946e-309,3.061578499999945e-309,3.060010069999944e-309,3.058441639999943e-309,3.05687320999994e-309,3.05530477999994e-309,3.05373634999994e-309,3.05216791999994e-309,3.05059948999994e-309,3.049031059999937e-309,3.047462629999936e-309,3.045894199999935e-309,3.044325769999934e-309,3.042757339999933e-309,3.04118890999993e-309,3.03962047999993e-309,3.03805204999993e-309,3.03648361999993e-309,3.034915189999927e-309,3.033346759999926e-309,3.031778329999925e-309,3.030209899999924e-309,3.028641469999923e-309,3.02707303999992e-309,3.02550460999992e-309,3.02393617999992e-309,3.02236774999992e-309,3.02079931999992e-309,3.019230889999917e-309,3.017662459999916e-309,3.016094029999914e-309,3.014525599999913e-309,3.01295716999991e-309,3.01138873999991e-309,3.00982030999991e-309,3.00825187999991e-309,3.00668344999991e-309,3.005115019999907e-309,3.003546589999906e-309,3.001978159999905e-309,3.000409729999904e-309,2.998841299999903e-309,2.9972728699999e-309,2.9957044399999e-309,2.9941360099999e-309,2.9925675799999e-309,2.990999149999897e-309,2.989430719999896e-309,2.987862289999895e-309,2.986293859999894e-309,2.984725429999893e-309,2.98315699999989e-309,2.98158856999989e-309,2.98002013999989e-309,2.97845170999989e-309,2.97688327999989e-309,2.975314849999887e-309,2.973746419999886e-309,2.972177989999885e-309,2.970609559999884e-309,2.969041129999883e-309,2.96747269999988e-309,2.96590426999988e-309,2.96433583999988e-309,2.96276740999988e-309,2.961198979999877e-309,2.959630549999876e-309,2.958062119999875e-309,2.956493689999874e-309,2.954925259999873e-309,2.95335682999987e-309,2.95178839999987e-309,2.95021996999987e-309,2.94865153999987e-309,2.94708310999987e-309,2.945514679999867e-309,2.943946249999866e-309,2.942377819999865e-309,2.940809389999864e-309,2.93924095999986e-309,2.93767252999986e-309,2.93610409999986e-309,2.93453566999986e-309,2.93296723999986e-309,2.931398809999857e-309,2.929830379999856e-309,2.928261949999855e-309,2.926693519999854e-309,2.925125089999853e-309,2.92355665999985e-309,2.92198822999985e-309,2.92041979999985e-309,2.91885136999985e-309,2.91728293999985e-309,2.915714509999847e-309,2.914146079999845e-309,2.912577649999844e-309,2.911009219999843e-309,2.90944078999984e-309,2.90787235999984e-309,2.90630392999984e-309,2.90473549999984e-309,2.90316706999984e-309,2.901598639999837e-309,2.900030209999836e-309,2.898461779999835e-309,2.896893349999834e-309,2.895324919999833e-309,2.89375648999983e-309,2.89218805999983e-309,2.89061962999983e-309,2.88905119999983e-309,2.887482769999827e-309,2.885914339999826e-309,2.884345909999825e-309,2.882777479999824e-309,2.881209049999823e-309,2.87964061999982e-309,2.87807218999982e-309,2.87650375999982e-309,2.87493532999982e-309,2.87336689999982e-309,2.871798469999817e-309,2.870230039999816e-309,2.868661609999815e-309,2.867093179999814e-309,2.865524749999813e-309,2.86395631999981e-309,2.86238788999981e-309,2.86081945999981e-309,2.85925102999981e-309,2.857682599999807e-309,2.856114169999806e-309,2.854545739999805e-309,2.852977309999804e-309,2.851408879999803e-309,2.8498404499998e-309,2.8482720199998e-309,2.8467035899998e-309,2.8451351599998e-309,2.8435667299998e-309,2.841998299999797e-309,2.840429869999796e-309,2.838861439999795e-309,2.837293009999793e-309,2.83572457999979e-309,2.83415614999979e-309,2.83258771999979e-309,2.83101928999979e-309,2.82945085999979e-309,2.827882429999787e-309,2.826313999999786e-309,2.824745569999785e-309,2.823177139999784e-309,2.821608709999783e-309,2.82004027999978e-309,2.81847184999978e-309,2.81690341999978e-309,2.81533498999978e-309,2.81376655999978e-309,2.812198129999777e-309,2.810629699999775e-309,2.809061269999774e-309,2.807492839999773e-309,2.80592440999977e-309,2.80435597999977e-309,2.80278754999977e-309,2.80121911999977e-309,2.79965068999977e-309,2.798082259999767e-309,2.796513829999766e-309,2.794945399999765e-309,2.793376969999764e-309,2.791808539999763e-309,2.79024010999976e-309,2.78867167999976e-309,2.78710324999976e-309,2.78553481999976e-309,2.783966389999757e-309,2.782397959999756e-309,2.780829529999755e-309,2.779261099999754e-309,2.777692669999753e-309,2.77612423999975e-309,2.77455580999975e-309,2.77298737999975e-309,2.77141894999975e-309,2.76985051999975e-309,2.768282089999747e-309,2.766713659999746e-309,2.765145229999745e-309,2.763576799999744e-309,2.762008369999743e-309,2.76043993999974e-309,2.75887150999974e-309,2.75730307999974e-309,2.75573464999974e-309,2.754166219999737e-309,2.752597789999736e-309,2.751029359999735e-309,2.749460929999734e-309,2.747892499999733e-309,2.74632406999973e-309,2.74475563999973e-309,2.74318720999973e-309,2.74161877999973e-309,2.74005034999973e-309,2.738481919999727e-309,2.736913489999726e-309,2.735345059999725e-309,2.733776629999723e-309,2.73220819999972e-309,2.73063976999972e-309,2.72907133999972e-309,2.72750290999972e-309,2.72593447999972e-309,2.724366049999717e-309,2.722797619999716e-309,2.721229189999715e-309,2.719660759999714e-309,2.718092329999713e-309,2.71652389999971e-309,2.71495546999971e-309,2.71338703999971e-309,2.71181860999971e-309,2.710250179999708e-309,2.708681749999706e-309,2.707113319999705e-309,2.705544889999704e-309,2.703976459999703e-309,2.7024080299997e-309,2.7008395999997e-309,2.6992711699997e-309,2.6977027399997e-309,2.6961343099997e-309,2.694565879999697e-309,2.692997449999696e-309,2.691429019999695e-309,2.689860589999694e-309,2.688292159999693e-309,2.68672372999969e-309,2.68515529999969e-309,2.68358686999969e-309,2.68201843999969e-309,2.680450009999687e-309,2.678881579999686e-309,2.677313149999685e-309,2.675744719999684e-309,2.674176289999683e-309,2.67260785999968e-309,2.67103942999968e-309,2.66947099999968e-309,2.66790256999968e-309,2.66633413999968e-309,2.664765709999677e-309,2.663197279999676e-309,2.661628849999675e-309,2.660060419999674e-309,2.658491989999672e-309,2.65692355999967e-309,2.65535512999967e-309,2.65378669999967e-309,2.65221826999967e-309,2.650649839999667e-309,2.649081409999666e-309,2.647512979999665e-309,2.645944549999664e-309,2.644376119999663e-309,2.64280768999966e-309,2.64123925999966e-309,2.63967082999966e-309,2.63810239999966e-309,2.63653396999966e-309,2.634965539999657e-309,2.633397109999656e-309,2.631828679999654e-309,2.630260249999653e-309,2.62869181999965e-309,2.62712338999965e-309,2.62555495999965e-309,2.62398652999965e-309,2.62241809999965e-309,2.620849669999647e-309,2.619281239999646e-309,2.617712809999645e-309,2.616144379999644e-309,2.614575949999643e-309,2.61300751999964e-309,2.61143908999964e-309,2.60987065999964e-309,2.60830222999964e-309,2.606733799999637e-309,2.605165369999636e-309,2.603596939999635e-309,2.602028509999634e-309,2.600460079999633e-309,2.59889164999963e-309,2.59732321999963e-309,2.59575478999963e-309,2.59418635999963e-309,2.59261792999963e-309,2.591049499999627e-309,2.589481069999626e-309,2.587912639999625e-309,2.586344209999624e-309,2.584775779999623e-309,2.58320734999962e-309,2.58163891999962e-309,2.58007048999962e-309,2.57850205999962e-309,2.576933629999617e-309,2.575365199999616e-309,2.573796769999615e-309,2.572228339999614e-309,2.570659909999613e-309,2.56909147999961e-309,2.56752304999961e-309,2.56595461999961e-309,2.56438618999961e-309,2.56281775999961e-309,2.561249329999607e-309,2.559680899999606e-309,2.558112469999605e-309,2.556544039999604e-309,2.5549756099996e-309,2.5534071799996e-309,2.5518387499996e-309,2.5502703199996e-309,2.5487018899996e-309,2.547133459999597e-309,2.545565029999596e-309,2.543996599999595e-309,2.542428169999594e-309,2.540859739999593e-309,2.53929130999959e-309,2.53772287999959e-309,2.53615444999959e-309,2.53458601999959e-309,2.53301758999959e-309,2.531449159999587e-309,2.529880729999585e-309,2.528312299999584e-309,2.526743869999583e-309,2.52517543999958e-309,2.52360700999958e-309,2.52203857999958e-309,2.52047014999958e-309,2.51890171999958e-309,2.517333289999577e-309,2.515764859999576e-309,2.514196429999575e-309,2.512627999999574e-309,2.511059569999573e-309,2.50949113999957e-309,2.50792270999957e-309,2.50635427999957e-309,2.50478584999957e-309,2.503217419999567e-309,2.501648989999566e-309,2.500080559999565e-309,2.498512129999564e-309,2.496943699999563e-309,2.49537526999956e-309,2.49380683999956e-309,2.49223840999956e-309,2.49066997999956e-309,2.48910154999956e-309,2.487533119999557e-309,2.485964689999556e-309,2.484396259999555e-309,2.482827829999554e-309,2.481259399999553e-309,2.47969096999955e-309,2.47812253999955e-309,2.47655410999955e-309,2.47498567999955e-309,2.473417249999547e-309,2.471848819999546e-309,2.470280389999545e-309,2.468711959999544e-309,2.467143529999543e-309,2.46557509999954e-309,2.46400666999954e-309,2.46243823999954e-309,2.46086980999954e-309,2.45930137999954e-309,2.457732949999537e-309,2.456164519999536e-309,2.454596089999535e-309,2.453027659999533e-309,2.45145922999953e-309,2.44989079999953e-309,2.44832236999953e-309,2.44675393999953e-309,2.44518550999953e-309,2.443617079999527e-309,2.442048649999526e-309,2.440480219999525e-309,2.438911789999524e-309,2.437343359999523e-309,2.43577492999952e-309,2.43420649999952e-309,2.43263806999952e-309,2.43106963999952e-309,2.42950120999952e-309,2.427932779999516e-309,2.426364349999515e-309,2.424795919999514e-309,2.423227489999513e-309,2.42165905999951e-309,2.42009062999951e-309,2.41852219999951e-309,2.41695376999951e-309,2.41538533999951e-309,2.413816909999507e-309,2.412248479999506e-309,2.410680049999505e-309,2.409111619999504e-309,2.407543189999503e-309,2.4059747599995e-309,2.4044063299995e-309,2.4028378999995e-309,2.4012694699995e-309,2.399701039999497e-309,2.398132609999496e-309,2.396564179999495e-309,2.394995749999494e-309,2.393427319999493e-309,2.39185888999949e-309,2.39029045999949e-309,2.38872202999949e-309,2.38715359999949e-309,2.38558516999949e-309,2.384016739999487e-309,2.382448309999486e-309,2.380879879999485e-309,2.379311449999484e-309,2.377743019999483e-309,2.37617458999948e-309,2.37460615999948e-309,2.37303772999948e-309,2.37146929999948e-309,2.369900869999477e-309,2.368332439999476e-309,2.366764009999475e-309,2.365195579999474e-309,2.363627149999473e-309,2.36205871999947e-309,2.36049028999947e-309,2.35892185999947e-309,2.35735342999947e-309,2.35578499999947e-309,2.354216569999467e-309,2.352648139999466e-309,2.351079709999464e-309,2.349511279999463e-309,2.34794284999946e-309,2.34637441999946e-309,2.34480598999946e-309,2.34323755999946e-309,2.34166912999946e-309,2.340100699999457e-309,2.338532269999456e-309,2.336963839999455e-309,2.335395409999454e-309,2.333826979999453e-309,2.33225854999945e-309,2.33069011999945e-309,2.32912168999945e-309,2.32755325999945e-309,2.325984829999448e-309,2.324416399999446e-309,2.322847969999445e-309,2.321279539999444e-309,2.319711109999443e-309,2.31814267999944e-309,2.31657424999944e-309,2.31500581999944e-309,2.31343738999944e-309,2.31186895999944e-309,2.310300529999437e-309,2.308732099999436e-309,2.307163669999435e-309,2.305595239999434e-309,2.304026809999433e-309,2.30245837999943e-309,2.30088994999943e-309,2.29932151999943e-309,2.29775308999943e-309,2.296184659999427e-309,2.294616229999426e-309,2.293047799999425e-309,2.291479369999424e-309,2.289910939999423e-309,2.28834250999942e-309,2.28677407999942e-309,2.28520564999942e-309,2.28363721999942e-309,2.28206878999942e-309,2.280500359999417e-309,2.278931929999416e-309,2.277363499999415e-309,2.275795069999414e-309,2.274226639999412e-309,2.27265820999941e-309,2.27108977999941e-309,2.26952134999941e-309,2.26795291999941e-309,2.266384489999407e-309,2.264816059999406e-309,2.263247629999405e-309,2.261679199999404e-309,2.260110769999403e-309,2.2585423399994e-309,2.2569739099994e-309,2.2554054799994e-309,2.2538370499994e-309,2.2522686199994e-309,2.250700189999397e-309,2.249131759999396e-309,2.247563329999394e-309,2.245994899999393e-309,2.24442646999939e-309,2.24285803999939e-309,2.24128960999939e-309,2.23972117999939e-309,2.23815274999939e-309,2.236584319999387e-309,2.235015889999386e-309,2.233447459999385e-309,2.231879029999384e-309,2.230310599999383e-309,2.22874216999938e-309,2.22717373999938e-309,2.22560530999938e-309,2.22403687999938e-309,2.222468449999377e-309,2.220900019999376e-309,2.219331589999375e-309,2.217763159999374e-309,2.216194729999373e-309,2.21462629999937e-309,2.21305786999937e-309,2.21148943999937e-309,2.20992100999937e-309,2.20835257999937e-309,2.206784149999367e-309,2.205215719999366e-309,2.203647289999365e-309,2.202078859999364e-309,2.200510429999363e-309,2.19894199999936e-309,2.19737356999936e-309,2.19580513999936e-309,2.19423670999936e-309,2.192668279999357e-309,2.191099849999356e-309,2.189531419999355e-309,2.187962989999354e-309,2.186394559999353e-309,2.18482612999935e-309,2.18325769999935e-309,2.18168926999935e-309,2.18012083999935e-309,2.17855240999935e-309,2.176983979999347e-309,2.175415549999346e-309,2.173847119999345e-309,2.172278689999343e-309,2.17071025999934e-309,2.16914182999934e-309,2.16757339999934e-309,2.16600496999934e-309,2.16443653999934e-309,2.162868109999337e-309,2.161299679999336e-309,2.159731249999335e-309,2.158162819999334e-309,2.156594389999333e-309,2.15502595999933e-309,2.15345752999933e-309,2.15188909999933e-309,2.15032066999933e-309,2.14875223999933e-309,2.147183809999327e-309,2.145615379999325e-309,2.144046949999324e-309,2.142478519999323e-309,2.14091008999932e-309,2.13934165999932e-309,2.13777322999932e-309,2.13620479999932e-309,2.13463636999932e-309,2.133067939999317e-309,2.131499509999316e-309,2.129931079999315e-309,2.128362649999314e-309,2.126794219999313e-309,2.12522578999931e-309,2.12365735999931e-309,2.12208892999931e-309,2.12052049999931e-309,2.118952069999307e-309,2.117383639999306e-309,2.115815209999305e-309,2.114246779999304e-309,2.112678349999303e-309,2.1111099199993e-309,2.1095414899993e-309,2.1079730599993e-309,2.1064046299993e-309,2.1048361999993e-309,2.103267769999297e-309,2.101699339999296e-309,2.100130909999295e-309,2.098562479999294e-309,2.096994049999293e-309,2.09542561999929e-309,2.09385718999929e-309,2.09228875999929e-309,2.09072032999929e-309,2.089151899999287e-309,2.087583469999286e-309,2.086015039999285e-309,2.084446609999284e-309,2.082878179999283e-309,2.08130974999928e-309,2.07974131999928e-309,2.07817288999928e-309,2.07660445999928e-309,2.07503602999928e-309,2.073467599999277e-309,2.071899169999276e-309,2.070330739999275e-309,2.068762309999273e-309,2.06719387999927e-309,2.06562544999927e-309,2.06405701999927e-309,2.06248858999927e-309,2.06092015999927e-309,2.059351729999267e-309,2.057783299999266e-309,2.056214869999265e-309,2.054646439999264e-309,2.053078009999263e-309,2.05150957999926e-309,2.04994114999926e-309,2.04837271999926e-309,2.04680428999926e-309,2.04523585999926e-309,2.043667429999256e-309,2.042098999999255e-309,2.040530569999254e-309,2.038962139999253e-309,2.03739370999925e-309,2.03582527999925e-309,2.03425684999925e-309,2.03268841999925e-309,2.03111998999925e-309,2.029551559999247e-309,2.027983129999246e-309,2.026414699999245e-309,2.024846269999244e-309,2.023277839999243e-309,2.02170940999924e-309,2.02014097999924e-309,2.01857254999924e-309,2.01700411999924e-309,2.015435689999237e-309,2.013867259999236e-309,2.012298829999235e-309,2.010730399999234e-309,2.009161969999233e-309,2.00759353999923e-309,2.00602510999923e-309,2.00445667999923e-309,2.00288824999923e-309,2.00131981999923e-309,1.999751389999227e-309,1.998182959999226e-309,1.996614529999225e-309,1.995046099999224e-309,1.993477669999223e-309,1.99190923999922e-309,1.99034080999922e-309,1.98877237999922e-309,1.98720394999922e-309,1.985635519999217e-309,1.984067089999216e-309,1.982498659999215e-309,1.980930229999214e-309,1.979361799999213e-309,1.97779336999921e-309,1.97622493999921e-309,1.97465650999921e-309,1.97308807999921e-309,1.97151964999921e-309,1.969951219999207e-309,1.968382789999206e-309,1.966814359999204e-309,1.965245929999203e-309,1.9636774999992e-309,1.9621090699992e-309,1.9605406399992e-309,1.9589722099992e-309,1.9574037799992e-309,1.955835349999197e-309,1.954266919999196e-309,1.952698489999195e-309,1.951130059999194e-309,1.949561629999193e-309,1.94799319999919e-309,1.94642476999919e-309,1.94485633999919e-309,1.94328790999919e-309,1.941719479999187e-309,1.940151049999186e-309,1.938582619999185e-309,1.937014189999184e-309,1.935445759999183e-309,1.93387732999918e-309,1.93230889999918e-309,1.93074046999918e-309,1.92917203999918e-309,1.92760360999918e-309,1.926035179999177e-309,1.924466749999176e-309,1.922898319999175e-309,1.921329889999174e-309,1.919761459999173e-309,1.91819302999917e-309,1.91662459999917e-309,1.91505616999917e-309,1.91348773999917e-309,1.911919309999167e-309,1.910350879999166e-309,1.908782449999165e-309,1.907214019999164e-309,1.905645589999163e-309,1.90407715999916e-309,1.90250872999916e-309,1.90094029999916e-309,1.89937186999916e-309,1.89780343999916e-309,1.896235009999157e-309,1.894666579999156e-309,1.893098149999155e-309,1.891529719999154e-309,1.88996128999915e-309,1.88839285999915e-309,1.88682442999915e-309,1.88525599999915e-309,1.88368756999915e-309,1.882119139999147e-309,1.880550709999146e-309,1.878982279999145e-309,1.877413849999144e-309,1.875845419999143e-309,1.87427698999914e-309,1.87270855999914e-309,1.87114012999914e-309,1.86957169999914e-309,1.86800326999914e-309,1.866434839999137e-309,1.864866409999135e-309,1.863297979999134e-309,1.861729549999133e-309,1.86016111999913e-309,1.85859268999913e-309,1.85702425999913e-309,1.85545582999913e-309,1.85388739999913e-309,1.852318969999127e-309,1.850750539999126e-309,1.849182109999125e-309,1.847613679999124e-309,1.846045249999123e-309,1.84447681999912e-309,1.84290838999912e-309,1.84133995999912e-309,1.83977152999912e-309,1.838203099999117e-309,1.836634669999116e-309,1.835066239999115e-309,1.833497809999114e-309,1.831929379999113e-309,1.83036094999911e-309,1.82879251999911e-309,1.82722408999911e-309,1.82565565999911e-309,1.82408722999911e-309,1.822518799999107e-309,1.820950369999106e-309,1.819381939999105e-309,1.817813509999104e-309,1.816245079999103e-309,1.8146766499991e-309,1.8131082199991e-309,1.8115397899991e-309,1.8099713599991e-309,1.808402929999097e-309,1.806834499999096e-309,1.805266069999095e-309,1.803697639999094e-309,1.802129209999093e-309,1.80056077999909e-309,1.79899234999909e-309,1.79742391999909e-309,1.79585548999909e-309,1.79428705999909e-309,1.792718629999087e-309,1.791150199999086e-309,1.789581769999085e-309,1.788013339999083e-309,1.78644490999908e-309,1.78487647999908e-309,1.78330804999908e-309,1.78173961999908e-309,1.78017118999908e-309,1.778602759999077e-309,1.777034329999076e-309,1.775465899999075e-309,1.773897469999074e-309,1.772329039999073e-309,1.77076060999907e-309,1.76919217999907e-309,1.76762374999907e-309,1.76605531999907e-309,1.76448688999907e-309,1.762918459999067e-309,1.761350029999065e-309,1.759781599999064e-309,1.758213169999063e-309,1.75664473999906e-309,1.75507630999906e-309,1.75350787999906e-309,1.75193944999906e-309,1.75037101999906e-309,1.748802589999057e-309,1.747234159999056e-309,1.745665729999055e-309,1.744097299999054e-309,1.742528869999053e-309,1.74096043999905e-309,1.73939200999905e-309,1.73782357999905e-309,1.73625514999905e-309,1.734686719999047e-309,1.733118289999046e-309,1.731549859999045e-309,1.729981429999044e-309,1.728412999999043e-309,1.72684456999904e-309,1.72527613999904e-309,1.72370770999904e-309,1.72213927999904e-309,1.72057084999904e-309,1.719002419999037e-309,1.717433989999036e-309,1.715865559999035e-309,1.714297129999034e-309,1.712728699999033e-309,1.71116026999903e-309,1.70959183999903e-309,1.70802340999903e-309,1.70645497999903e-309,1.704886549999027e-309,1.703318119999026e-309,1.701749689999025e-309,1.700181259999024e-309,1.698612829999023e-309,1.69704439999902e-309,1.69547596999902e-309,1.69390753999902e-309,1.69233910999902e-309,1.69077067999902e-309,1.689202249999017e-309,1.687633819999016e-309,1.686065389999014e-309,1.684496959999013e-309,1.68292852999901e-309,1.68136009999901e-309,1.67979166999901e-309,1.67822323999901e-309,1.67665480999901e-309,1.675086379999007e-309,1.673517949999006e-309,1.671949519999005e-309,1.670381089999004e-309,1.668812659999003e-309,1.667244229999e-309,1.665675799999e-309,1.664107369999e-309,1.662538939999e-309,1.660970509998998e-309,1.659402079998996e-309,1.657833649998995e-309,1.656265219998994e-309,1.654696789998993e-309,1.65312835999899e-309,1.65155992999899e-309,1.64999149999899e-309,1.64842306999899e-309,1.64685463999899e-309,1.645286209998987e-309,1.643717779998986e-309,1.642149349998985e-309,1.640580919998984e-309,1.639012489998983e-309,1.63744405999898e-309,1.63587562999898e-309,1.63430719999898e-309,1.63273876999898e-309,1.631170339998977e-309,1.629601909998976e-309,1.628033479998975e-309,1.626465049998974e-309,1.624896619998973e-309,1.62332818999897e-309,1.62175975999897e-309,1.62019132999897e-309,1.61862289999897e-309,1.61705446999897e-309,1.615486039998967e-309,1.613917609998966e-309,1.612349179998965e-309,1.610780749998964e-309,1.609212319998962e-309,1.60764388999896e-309,1.60607545999896e-309,1.60450702999896e-309,1.60293859999896e-309,1.601370169998957e-309,1.599801739998956e-309,1.598233309998955e-309,1.596664879998954e-309,1.595096449998953e-309,1.59352801999895e-309,1.59195958999895e-309,1.59039115999895e-309,1.58882272999895e-309,1.58725429999895e-309,1.585685869998947e-309,1.584117439998946e-309,1.582549009998944e-309,1.580980579998943e-309,1.57941214999894e-309,1.57784371999894e-309,1.57627528999894e-309,1.57470685999894e-309,1.57313842999894e-309,1.571569999998937e-309,1.570001569998936e-309,1.568433139998935e-309,1.566864709998934e-309,1.565296279998933e-309,1.56372784999893e-309,1.56215941999893e-309,1.56059098999893e-309,1.55902255999893e-309,1.557454129998927e-309,1.555885699998926e-309,1.554317269998925e-309,1.552748839998924e-309,1.551180409998923e-309,1.54961197999892e-309,1.54804354999892e-309,1.54647511999892e-309,1.54490668999892e-309,1.54333825999892e-309,1.541769829998917e-309,1.540201399998916e-309,1.538632969998915e-309,1.537064539998914e-309,1.535496109998913e-309,1.53392767999891e-309,1.53235924999891e-309,1.53079081999891e-309,1.52922238999891e-309,1.527653959998907e-309,1.526085529998906e-309,1.524517099998905e-309,1.522948669998904e-309,1.521380239998903e-309,1.5198118099989e-309,1.5182433799989e-309,1.5166749499989e-309,1.5151065199989e-309,1.5135380899989e-309,1.511969659998897e-309,1.510401229998896e-309,1.508832799998895e-309,1.507264369998894e-309,1.50569593999889e-309,1.50412750999889e-309,1.50255907999889e-309,1.50099064999889e-309,1.49942221999889e-309,1.497853789998887e-309,1.496285359998886e-309,1.494716929998885e-309,1.493148499998884e-309,1.491580069998883e-309,1.49001163999888e-309,1.48844320999888e-309,1.48687477999888e-309,1.48530634999888e-309,1.48373791999888e-309,1.482169489998877e-309,1.480601059998875e-309,1.479032629998874e-309,1.477464199998873e-309,1.47589576999887e-309,1.47432733999887e-309,1.47275890999887e-309,1.47119047999887e-309,1.46962204999887e-309,1.468053619998867e-309,1.466485189998866e-309,1.464916759998865e-309,1.463348329998864e-309,1.461779899998863e-309,1.46021146999886e-309,1.45864303999886e-309,1.45707460999886e-309,1.45550617999886e-309,1.453937749998857e-309,1.452369319998856e-309,1.450800889998855e-309,1.449232459998854e-309,1.447664029998853e-309,1.44609559999885e-309,1.44452716999885e-309,1.44295873999885e-309,1.44139030999885e-309,1.43982187999885e-309,1.438253449998847e-309,1.436685019998846e-309,1.435116589998845e-309,1.433548159998844e-309,1.431979729998843e-309,1.43041129999884e-309,1.42884286999884e-309,1.42727443999884e-309,1.42570600999884e-309,1.424137579998837e-309,1.422569149998836e-309,1.421000719998835e-309,1.419432289998834e-309,1.417863859998833e-309,1.41629542999883e-309,1.41472699999883e-309,1.41315856999883e-309,1.41159013999883e-309,1.41002170999883e-309,1.408453279998827e-309,1.406884849998826e-309,1.405316419998825e-309,1.403747989998823e-309,1.40217955999882e-309,1.40061112999882e-309,1.39904269999882e-309,1.39747426999882e-309,1.39590583999882e-309,1.394337409998817e-309,1.392768979998816e-309,1.391200549998815e-309,1.389632119998814e-309,1.388063689998813e-309,1.38649525999881e-309,1.38492682999881e-309,1.38335839999881e-309,1.38178996999881e-309,1.38022153999881e-309,1.378653109998806e-309,1.377084679998805e-309,1.375516249998804e-309,1.373947819998803e-309,1.3723793899988e-309,1.3708109599988e-309,1.3692425299988e-309,1.3676740999988e-309,1.3661056699988e-309,1.364537239998797e-309,1.362968809998796e-309,1.361400379998795e-309,1.359831949998794e-309,1.358263519998793e-309,1.35669508999879e-309,1.35512665999879e-309,1.35355822999879e-309,1.35198979999879e-309,1.350421369998787e-309,1.348852939998786e-309,1.347284509998785e-309,1.345716079998784e-309,1.344147649998783e-309,1.34257921999878e-309,1.34101078999878e-309,1.33944235999878e-309,1.33787392999878e-309,1.33630549999878e-309,1.334737069998777e-309,1.333168639998776e-309,1.331600209998775e-309,1.330031779998774e-309,1.328463349998773e-309,1.32689491999877e-309,1.32532648999877e-309,1.32375805999877e-309,1.32218962999877e-309,1.320621199998767e-309,1.319052769998766e-309,1.317484339998765e-309,1.315915909998764e-309,1.314347479998763e-309,1.31277904999876e-309,1.31121061999876e-309,1.30964218999876e-309,1.30807375999876e-309,1.30650532999876e-309,1.304936899998757e-309,1.303368469998756e-309,1.301800039998754e-309,1.300231609998753e-309,1.29866317999875e-309,1.29709474999875e-309,1.29552631999875e-309,1.29395788999875e-309,1.29238945999875e-309,1.290821029998747e-309,1.289252599998746e-309,1.287684169998745e-309,1.286115739998744e-309,1.284547309998743e-309,1.28297887999874e-309,1.28141044999874e-309,1.27984201999874e-309,1.27827358999874e-309,1.276705159998738e-309,1.275136729998736e-309,1.273568299998735e-309,1.271999869998734e-309,1.270431439998733e-309,1.26886300999873e-309,1.26729457999873e-309,1.26572614999873e-309,1.26415771999873e-309,1.26258928999873e-309,1.261020859998727e-309,1.259452429998726e-309,1.257883999998725e-309,1.256315569998724e-309,1.254747139998723e-309,1.25317870999872e-309,1.25161027999872e-309,1.25004184999872e-309,1.24847341999872e-309,1.246904989998717e-309,1.245336559998716e-309,1.243768129998715e-309,1.242199699998714e-309,1.240631269998713e-309,1.23906283999871e-309,1.23749440999871e-309,1.23592597999871e-309,1.23435754999871e-309,1.23278911999871e-309,1.231220689998707e-309,1.229652259998706e-309,1.228083829998705e-309,1.226515399998704e-309,1.224946969998702e-309,1.2233785399987e-309,1.2218101099987e-309,1.2202416799987e-309,1.2186732499987e-309,1.217104819998697e-309,1.215536389998696e-309,1.213967959998695e-309,1.212399529998694e-309,1.210831099998693e-309,1.20926266999869e-309,1.20769423999869e-309,1.20612580999869e-309,1.20455737999869e-309,1.20298894999869e-309,1.201420519998687e-309,1.199852089998686e-309,1.198283659998684e-309,1.196715229998683e-309,1.19514679999868e-309,1.19357836999868e-309,1.19200993999868e-309,1.19044150999868e-309,1.18887307999868e-309,1.187304649998677e-309,1.185736219998676e-309,1.184167789998675e-309,1.182599359998674e-309,1.181030929998673e-309,1.17946249999867e-309,1.17789406999867e-309,1.17632563999867e-309,1.17475720999867e-309,1.173188779998667e-309,1.171620349998666e-309,1.170051919998665e-309,1.168483489998664e-309,1.166915059998663e-309,1.16534662999866e-309,1.16377819999866e-309,1.16220976999866e-309,1.16064133999866e-309,1.15907290999866e-309,1.157504479998657e-309,1.155936049998656e-309,1.154367619998655e-309,1.152799189998654e-309,1.151230759998653e-309,1.14966232999865e-309,1.14809389999865e-309,1.14652546999865e-309,1.14495703999865e-309,1.143388609998647e-309,1.141820179998646e-309,1.140251749998645e-309,1.138683319998644e-309,1.137114889998643e-309,1.13554645999864e-309,1.13397802999864e-309,1.13240959999864e-309,1.13084116999864e-309,1.12927273999864e-309,1.127704309998637e-309,1.126135879998636e-309,1.124567449998635e-309,1.122999019998633e-309,1.12143058999863e-309,1.11986215999863e-309,1.11829372999863e-309,1.11672529999863e-309,1.11515686999863e-309,1.113588439998627e-309,1.112020009998626e-309,1.110451579998625e-309,1.108883149998624e-309,1.107314719998623e-309,1.10574628999862e-309,1.10417785999862e-309,1.10260942999862e-309,1.10104099999862e-309,1.09947256999862e-309,1.097904139998617e-309,1.096335709998615e-309,1.094767279998614e-309,1.093198849998613e-309,1.09163041999861e-309,1.09006198999861e-309,1.08849355999861e-309,1.08692512999861e-309,1.08535669999861e-309,1.083788269998607e-309,1.082219839998606e-309,1.080651409998605e-309,1.079082979998604e-309,1.077514549998603e-309,1.0759461199986e-309,1.0743776899986e-309,1.0728092599986e-309,1.0712408299986e-309,1.069672399998597e-309,1.068103969998596e-309,1.066535539998595e-309,1.064967109998594e-309,1.063398679998593e-309,1.06183024999859e-309,1.06026181999859e-309,1.05869338999859e-309,1.05712495999859e-309,1.05555652999859e-309,1.053988099998587e-309,1.052419669998586e-309,1.050851239998585e-309,1.049282809998584e-309,1.047714379998583e-309,1.04614594999858e-309,1.04457751999858e-309,1.04300908999858e-309,1.04144065999858e-309,1.039872229998577e-309,1.038303799998576e-309,1.036735369998575e-309,1.035166939998574e-309,1.033598509998573e-309,1.03203007999857e-309,1.03046164999857e-309,1.02889321999857e-309,1.02732478999857e-309,1.02575635999857e-309,1.024187929998567e-309,1.022619499998566e-309,1.021051069998565e-309,1.019482639998563e-309,1.01791420999856e-309,1.01634577999856e-309,1.01477734999856e-309,1.01320891999856e-309,1.01164048999856e-309,1.010072059998557e-309,1.008503629998556e-309,1.006935199998555e-309,1.005366769998554e-309,1.003798339998553e-309,1.00222990999855e-309,1.00066147999855e-309,9.9909304999855e-310,9.9752461999855e-310,9.9595618999855e-310,9.94387759998546e-310,9.92819329998545e-310,9.91250899998544e-310,9.89682469998543e-310,9.8811403999854e-310,9.8654560999854e-310,9.8497717999854e-310,9.8340874999854e-310,9.8184031999854e-310,9.80271889998537e-310,9.78703459998536e-310,9.77135029998535e-310,9.75566599998534e-310,9.73998169998533e-310,9.7242973999853e-310,9.7086130999853e-310,9.6929287999853e-310,9.6772444999853e-310,9.66156019998527e-310,9.64587589998526e-310,9.63019159998525e-310,9.61450729998524e-310,9.59882299998523e-310,9.5831386999852e-310,9.5674543999852e-310,9.5517700999852e-310,9.5360857999852e-310,9.5204014999852e-310,9.50471719998517e-310,9.48903289998516e-310,9.47334859998515e-310,9.45766429998514e-310,9.44197999998513e-310,9.4262956999851e-310,9.4106113999851e-310,9.3949270999851e-310,9.3792427999851e-310,9.36355849998507e-310,9.34787419998506e-310,9.33218989998505e-310,9.31650559998504e-310,9.30082129998503e-310,9.285136999985e-310,9.269452699985e-310,9.253768399985e-310,9.238084099985e-310,9.222399799985e-310,9.20671549998497e-310,9.19103119998496e-310,9.17534689998494e-310,9.15966259998493e-310,9.1439782999849e-310,9.1282939999849e-310,9.1126096999849e-310,9.0969253999849e-310,9.0812410999849e-310,9.06555679998487e-310,9.04987249998486e-310,9.03418819998485e-310,9.01850389998484e-310,9.00281959998483e-310,8.9871352999848e-310,8.9714509999848e-310,8.9557666999848e-310,8.9400823999848e-310,8.92439809998477e-310,8.90871379998476e-310,8.89302949998475e-310,8.87734519998474e-310,8.86166089998473e-310,8.8459765999847e-310,8.8302922999847e-310,8.8146079999847e-310,8.7989236999847e-310,8.7832393999847e-310,8.76755509998467e-310,8.75187079998466e-310,8.73618649998465e-310,8.72050219998464e-310,8.70481789998463e-310,8.6891335999846e-310,8.6734492999846e-310,8.6577649999846e-310,8.6420806999846e-310,8.62639639998457e-310,8.61071209998456e-310,8.59502779998455e-310,8.57934349998454e-310,8.56365919998453e-310,8.5479748999845e-310,8.5322905999845e-310,8.5166062999845e-310,8.5009219999845e-310,8.4852376999845e-310,8.46955339998447e-310,8.45386909998446e-310,8.43818479998445e-310,8.42250049998444e-310,8.4068161999844e-310,8.3911318999844e-310,8.3754475999844e-310,8.3597632999844e-310,8.3440789999844e-310,8.32839469998437e-310,8.31271039998436e-310,8.29702609998435e-310,8.28134179998434e-310,8.26565749998433e-310,8.2499731999843e-310,8.2342888999843e-310,8.2186045999843e-310,8.2029202999843e-310,8.1872359999843e-310,8.17155169998427e-310,8.15586739998425e-310,8.14018309998424e-310,8.12449879998423e-310,8.1088144999842e-310,8.0931301999842e-310,8.0774458999842e-310,8.0617615999842e-310,8.0460772999842e-310,8.03039299998417e-310,8.01470869998416e-310,7.99902439998415e-310,7.98334009998414e-310,7.96765579998413e-310,7.9519714999841e-310,7.9362871999841e-310,7.9206028999841e-310,7.9049185999841e-310,7.88923429998407e-310,7.87354999998406e-310,7.85786569998405e-310,7.84218139998404e-310,7.82649709998403e-310,7.810812799984e-310,7.795128499984e-310,7.779444199984e-310,7.763759899984e-310,7.748075599984e-310,7.73239129998397e-310,7.71670699998396e-310,7.70102269998395e-310,7.68533839998394e-310,7.66965409998393e-310,7.6539697999839e-310,7.6382854999839e-310,7.6226011999839e-310,7.6069168999839e-310,7.59123259998387e-310,7.57554829998386e-310,7.55986399998385e-310,7.54417969998384e-310,7.52849539998383e-310,7.5128110999838e-310,7.4971267999838e-310,7.4814424999838e-310,7.4657581999838e-310,7.4500738999838e-310,7.43438959998377e-310,7.41870529998376e-310,7.40302099998375e-310,7.38733669998373e-310,7.3716523999837e-310,7.3559680999837e-310,7.3402837999837e-310,7.3245994999837e-310,7.3089151999837e-310,7.29323089998367e-310,7.27754659998366e-310,7.26186229998365e-310,7.24617799998364e-310,7.23049369998363e-310,7.2148093999836e-310,7.1991250999836e-310,7.1834407999836e-310,7.1677564999836e-310,7.1520721999836e-310,7.13638789998357e-310,7.12070359998355e-310,7.10501929998354e-310,7.08933499998353e-310,7.0736506999835e-310,7.0579663999835e-310,7.0422820999835e-310,7.0265977999835e-310,7.0109134999835e-310,6.99522919998347e-310,6.97954489998346e-310,6.96386059998345e-310,6.94817629998344e-310,6.93249199998343e-310,6.9168076999834e-310,6.9011233999834e-310,6.8854390999834e-310,6.8697547999834e-310,6.85407049998337e-310,6.83838619998336e-310,6.82270189998335e-310,6.80701759998334e-310,6.79133329998333e-310,6.7756489999833e-310,6.7599646999833e-310,6.7442803999833e-310,6.7285960999833e-310,6.7129117999833e-310,6.69722749998327e-310,6.68154319998326e-310,6.66585889998325e-310,6.65017459998324e-310,6.63449029998323e-310,6.6188059999832e-310,6.6031216999832e-310,6.5874373999832e-310,6.5717530999832e-310,6.55606879998317e-310,6.54038449998316e-310,6.52470019998315e-310,6.50901589998314e-310,6.49333159998313e-310,6.4776472999831e-310,6.4619629999831e-310,6.4462786999831e-310,6.4305943999831e-310,6.4149100999831e-310,6.39922579998307e-310,6.38354149998306e-310,6.36785719998304e-310,6.35217289998303e-310,6.336488599983e-310,6.320804299983e-310,6.305119999983e-310,6.289435699983e-310,6.273751399983e-310,6.25806709998297e-310,6.24238279998296e-310,6.22669849998295e-310,6.21101419998294e-310,6.19532989998293e-310,6.1796455999829e-310,6.1639612999829e-310,6.1482769999829e-310,6.1325926999829e-310,6.11690839998288e-310,6.10122409998286e-310,6.08553979998285e-310,6.06985549998284e-310,6.05417119998283e-310,6.0384868999828e-310,6.0228025999828e-310,6.0071182999828e-310,5.9914339999828e-310,5.9757496999828e-310,5.96006539998277e-310,5.94438109998276e-310,5.92869679998275e-310,5.91301249998274e-310,5.89732819998273e-310,5.8816438999827e-310,5.8659595999827e-310,5.8502752999827e-310,5.8345909999827e-310,5.81890669998267e-310,5.80322239998266e-310,5.78753809998265e-310,5.77185379998264e-310,5.75616949998263e-310,5.7404851999826e-310,5.7248008999826e-310,5.7091165999826e-310,5.6934322999826e-310,5.6777479999826e-310,5.66206369998257e-310,5.64637939998256e-310,5.63069509998255e-310,5.61501079998254e-310,5.59932649998252e-310,5.5836421999825e-310,5.5679578999825e-310,5.5522735999825e-310,5.5365892999825e-310,5.52090499998247e-310,5.50522069998246e-310,5.48953639998245e-310,5.47385209998244e-310,5.45816779998243e-310,5.4424834999824e-310,5.4267991999824e-310,5.4111148999824e-310,5.3954305999824e-310,5.3797462999824e-310,5.36406199998237e-310,5.34837769998236e-310,5.33269339998234e-310,5.31700909998233e-310,5.3013247999823e-310,5.2856404999823e-310,5.2699561999823e-310,5.2542718999823e-310,5.2385875999823e-310,5.22290329998227e-310,5.20721899998226e-310,5.19153469998225e-310,5.17585039998224e-310,5.16016609998223e-310,5.1444817999822e-310,5.1287974999822e-310,5.1131131999822e-310,5.0974288999822e-310,5.08174459998217e-310,5.06606029998216e-310,5.05037599998215e-310,5.03469169998214e-310,5.01900739998213e-310,5.0033230999821e-310,4.9876387999821e-310,4.9719544999821e-310,4.9562701999821e-310,4.9405858999821e-310,4.92490159998207e-310,4.90921729998206e-310,4.89353299998205e-310,4.87784869998204e-310,4.86216439998203e-310,4.846480099982e-310,4.830795799982e-310,4.815111499982e-310,4.799427199982e-310,4.78374289998197e-310,4.76805859998196e-310,4.75237429998195e-310,4.73668999998194e-310,4.72100569998193e-310,4.7053213999819e-310,4.6896370999819e-310,4.6739527999819e-310,4.6582684999819e-310,4.6425841999819e-310,4.62689989998187e-310,4.61121559998186e-310,4.59553129998185e-310,4.57984699998184e-310,4.5641626999818e-310,4.5484783999818e-310,4.5327940999818e-310,4.5171097999818e-310,4.5014254999818e-310,4.48574119998177e-310,4.47005689998176e-310,4.45437259998175e-310,4.43868829998174e-310,4.42300399998173e-310,4.4073196999817e-310,4.3916353999817e-310,4.3759510999817e-310,4.3602667999817e-310,4.3445824999817e-310,4.32889819998167e-310,4.31321389998165e-310,4.29752959998164e-310,4.28184529998163e-310,4.2661609999816e-310,4.2504766999816e-310,4.2347923999816e-310,4.2191080999816e-310,4.2034237999816e-310,4.18773949998157e-310,4.17205519998156e-310,4.15637089998155e-310,4.14068659998154e-310,4.12500229998153e-310,4.1093179999815e-310,4.0936336999815e-310,4.0779493999815e-310,4.0622650999815e-310,4.04658079998147e-310,4.03089649998146e-310,4.01521219998145e-310,3.99952789998144e-310,3.98384359998143e-310,3.9681592999814e-310,3.9524749999814e-310,3.9367906999814e-310,3.9211063999814e-310,3.9054220999814e-310,3.88973779998137e-310,3.87405349998136e-310,3.85836919998135e-310,3.84268489998134e-310,3.82700059998133e-310,3.8113162999813e-310,3.7956319999813e-310,3.7799476999813e-310,3.7642633999813e-310,3.74857909998127e-310,3.73289479998126e-310,3.71721049998125e-310,3.70152619998124e-310,3.68584189998123e-310,3.6701575999812e-310,3.6544732999812e-310,3.6387889999812e-310,3.6231046999812e-310,3.6074203999812e-310,3.59173609998117e-310,3.57605179998116e-310,3.56036749998115e-310,3.54468319998113e-310,3.5289988999811e-310,3.5133145999811e-310,3.4976302999811e-310,3.4819459999811e-310,3.4662616999811e-310,3.45057739998107e-310,3.43489309998106e-310,3.41920879998105e-310,3.40352449998104e-310,3.38784019998103e-310,3.372155899981e-310,3.356471599981e-310,3.340787299981e-310,3.325102999981e-310,3.309418699981e-310,3.29373439998096e-310,3.27805009998095e-310,3.26236579998094e-310,3.24668149998093e-310,3.2309971999809e-310,3.2153128999809e-310,3.1996285999809e-310,3.1839442999809e-310,3.1682599999809e-310,3.15257569998087e-310,3.13689139998086e-310,3.12120709998085e-310,3.10552279998084e-310,3.08983849998083e-310,3.0741541999808e-310,3.0584698999808e-310,3.0427855999808e-310,3.0271012999808e-310,3.01141699998077e-310,2.99573269998076e-310,2.98004839998075e-310,2.96436409998074e-310,2.94867979998073e-310,2.9329954999807e-310,2.9173111999807e-310,2.9016268999807e-310,2.8859425999807e-310,2.8702582999807e-310,2.85457399998067e-310,2.83888969998066e-310,2.82320539998065e-310,2.80752109998064e-310,2.79183679998063e-310,2.7761524999806e-310,2.7604681999806e-310,2.7447838999806e-310,2.7290995999806e-310,2.71341529998057e-310,2.69773099998056e-310,2.68204669998055e-310,2.66636239998054e-310,2.65067809998053e-310,2.6349937999805e-310,2.6193094999805e-310,2.6036251999805e-310,2.5879408999805e-310,2.5722565999805e-310,2.55657229998047e-310,2.54088799998046e-310,2.52520369998044e-310,2.50951939998043e-310,2.4938350999804e-310,2.4781507999804e-310,2.4624664999804e-310,2.4467821999804e-310,2.4310978999804e-310,2.41541359998037e-310,2.39972929998036e-310,2.38404499998035e-310,2.36836069998034e-310,2.35267639998033e-310,2.3369920999803e-310,2.3213077999803e-310,2.3056234999803e-310,2.2899391999803e-310,2.27425489998028e-310,2.25857059998026e-310,2.24288629998025e-310,2.22720199998024e-310,2.21151769998023e-310,2.1958333999802e-310,2.1801490999802e-310,2.1644647999802e-310,2.1487804999802e-310,2.1330961999802e-310,2.11741189998017e-310,2.10172759998016e-310,2.08604329998015e-310,2.07035899998014e-310,2.05467469998013e-310,2.0389903999801e-310,2.0233060999801e-310,2.0076217999801e-310,1.9919374999801e-310,1.97625319998007e-310,1.96056889998006e-310,1.94488459998005e-310,1.92920029998004e-310,1.91351599998003e-310,1.89783169998e-310,1.88214739998e-310,1.86646309998e-310,1.85077879998e-310,1.83509449998e-310,1.81941019997997e-310,1.80372589997996e-310,1.78804159997995e-310,1.77235729997994e-310,1.75667299997992e-310,1.7409886999799e-310,1.7253043999799e-310,1.7096200999799e-310,1.6939357999799e-310,1.67825149997987e-310,1.66256719997986e-310,1.64688289997985e-310,1.63119859997984e-310,1.61551429997983e-310,1.5998299999798e-310,1.5841456999798e-310,1.5684613999798e-310,1.5527770999798e-310,1.5370927999798e-310,1.52140849997977e-310,1.50572419997975e-310,1.49003989997974e-310,1.47435559997973e-310,1.4586712999797e-310,1.4429869999797e-310,1.4273026999797e-310,1.4116183999797e-310,1.3959340999797e-310,1.38024979997967e-310,1.36456549997966e-310,1.34888119997965e-310,1.33319689997964e-310,1.31751259997963e-310,1.3018282999796e-310,1.2861439999796e-310,1.2704596999796e-310,1.2547753999796e-310,1.23909109997957e-310,1.22340679997956e-310,1.20772249997955e-310,1.19203819997954e-310,1.17635389997953e-310,1.1606695999795e-310,1.1449852999795e-310,1.1293009999795e-310,1.1136166999795e-310,1.0979323999795e-310,1.08224809997947e-310,1.06656379997946e-310,1.05087949997945e-310,1.03519519997944e-310,1.01951089997943e-310,1.0038265999794e-310,9.881422999794e-311,9.724579999794e-311,9.567736999794e-311,9.4108939997937e-311,9.2540509997936e-311,9.0972079997935e-311,8.9403649997934e-311,8.7835219997933e-311,8.626678999793e-311,8.469835999793e-311,8.312992999793e-311,8.156149999793e-311,7.999306999793e-311,7.8424639997927e-311,7.6856209997926e-311,7.5287779997925e-311,7.3719349997923e-311,7.215091999792e-311,7.058248999792e-311,6.901405999792e-311,6.744562999792e-311,6.587719999792e-311,6.4308769997917e-311,6.2740339997916e-311,6.1171909997915e-311,5.9603479997914e-311,5.8035049997913e-311,5.646661999791e-311,5.489818999791e-311,5.332975999791e-311,5.176132999791e-311,5.019289999791e-311,4.8624469997907e-311,4.7056039997905e-311,4.5487609997904e-311,4.3919179997903e-311,4.23507499979e-311,4.07823199979e-311,3.92138899979e-311,3.76454599979e-311,3.60770299979e-311,3.4508599997897e-311,3.2940169997896e-311,3.1371739997895e-311,2.9803309997894e-311,2.8234879997893e-311,2.666644999789e-311,2.509801999789e-311,2.352958999789e-311,2.196115999789e-311,2.0392729997887e-311,1.8824299997886e-311,1.7255869997885e-311,1.5687439997884e-311,1.4119009997883e-311,1.255057999788e-311,1.098214999788e-311,9.41371999788e-312,7.84528999788e-312,6.27685999788e-312,4.708429997877e-312,3.139999997876e-312]}

},{}],38:[function(require,module,exports){
(function (__filename){(function (){
/**
* @license Apache-2.0
*
* Copyright (c) 2024 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var tape = require( 'tape' );
var isnan = require( '@stdlib/math/base/assert/is-nan' );
var fmod = require( './../lib' );


// FIXTURES //

var subnormalResults = require( './fixtures/julia/subnormal_results.json' );
var smallSmall = require( './fixtures/julia/small_small.json' );
var smallLarge = require( './fixtures/julia/small_large.json' );
var largeSmall = require( './fixtures/julia/large_small.json' );
var negativePositive = require( './fixtures/julia/negative_positive.json' );
var positiveNegative = require( './fixtures/julia/positive_negative.json' );
var negativeNegative = require( './fixtures/julia/negative_negative.json' );


// TESTS //

tape( 'main export is a function', function test( t ) {
	t.ok( true, __filename );
	t.strictEqual( typeof fmod, 'function', 'main export is a function' );
	t.end();
});

tape( 'the function evaluates the modulus function (subnormal results)', function test( t ) {
	var expected;
	var actual;
	var x;
	var y;
	var i;

	x = subnormalResults.x;
	y = subnormalResults.y;
	expected = subnormalResults.expected;
	for ( i = 0; i < x.length; i++ ) {
		actual = fmod( x[ i ], y[ i ] );
		t.equal( actual, expected[ i ], 'fmod('+x[ i ]+','+y[ i ]+') returns '+expected[ i ] );
	}
	t.end();
});

tape( 'the function evaluates the modulus function (small `x`, large `y`)', function test( t ) {
	var expected;
	var actual;
	var x;
	var y;
	var i;

	x = smallLarge.x;
	y = smallLarge.y;
	expected = smallLarge.expected;
	for ( i = 0; i < x.length; i++ ) {
		actual = fmod( x[ i ], y[ i ] );
		t.equal( actual, expected[ i ], 'fmod('+x[ i ]+','+y[ i ]+') returns '+expected[ i ] );
	}
	t.end();
});

tape( 'the function evaluates the modulus function (large `x`, small `y`)', function test( t ) {
	var expected;
	var actual;
	var x;
	var y;
	var i;

	x = largeSmall.x;
	y = largeSmall.y;
	expected = largeSmall.expected;
	for ( i = 0; i < x.length; i++ ) {
		actual = fmod( x[ i ], y[ i ] );
		t.equal( actual, expected[ i ], 'fmod('+x[ i ]+','+y[ i ]+') returns '+expected[ i ] );
	}
	t.end();
});

tape( 'the function evaluates the modulus function (small `x`, small `y`)', function test( t ) {
	var expected;
	var actual;
	var x;
	var y;
	var i;

	x = smallSmall.x;
	y = smallSmall.y;
	expected = smallSmall.expected;
	for ( i = 0; i < x.length; i++ ) {
		actual = fmod( x[ i ], y[ i ] );
		t.equal( actual, expected[ i ], 'fmod('+x[ i ]+','+y[ i ]+') returns '+expected[ i ] );
	}
	t.end();
});

tape( 'the function evaluates the modulus function (positive `x`, negative `y`)', function test( t ) {
	var expected;
	var actual;
	var x;
	var y;
	var i;

	x = positiveNegative.x;
	y = positiveNegative.y;
	expected = positiveNegative.expected;
	for ( i = 0; i < x.length; i++ ) {
		actual = fmod( x[ i ], y[ i ] );
		t.equal( actual, expected[ i ], 'fmod('+x[ i ]+','+y[ i ]+') returns '+expected[ i ] );
	}
	t.end();
});

tape( 'the function evaluates the modulus function (negative `x`, positive `y`)', function test( t ) {
	var expected;
	var actual;
	var x;
	var y;
	var i;

	x = negativePositive.x;
	y = negativePositive.y;
	expected = negativePositive.expected;
	for ( i = 0; i < x.length; i++ ) {
		actual = fmod( x[ i ], y[ i ] );
		t.equal( actual, expected[ i ], 'fmod('+x[ i ]+','+y[ i ]+') returns '+expected[ i ] );
	}
	t.end();
});

tape( 'the function evaluates the modulus function (negative `x`, negative `y`)', function test( t ) {
	var expected;
	var actual;
	var x;
	var y;
	var i;

	x = negativeNegative.x;
	y = negativeNegative.y;
	expected = negativeNegative.expected;
	for ( i = 0; i < x.length; i++ ) {
		actual = fmod( x[ i ], y[ i ] );
		t.equal( actual, expected[ i ], 'fmod('+x[ i ]+','+y[ i ]+') returns '+expected[ i ] );
	}
	t.end();
});

tape( 'the function returns `NaN` if provided `NaN` for `y`', function test( t ) {
	var v;

	v = fmod( -3.0, NaN );
	t.equal( isnan( v ), true, 'returns expected value' );

	v = fmod( 0.0, NaN );
	t.equal( isnan( v ), true, 'returns expected value' );

	t.end();
});

tape( 'the function returns `NaN` if provided `NaN` for `x`', function test( t ) {
	var v;

	v = fmod( NaN, 5.0 );
	t.equal( isnan( v ), true, 'returns expected value' );

	v = fmod( NaN, 1.0 );
	t.equal( isnan( v ), true, 'returns expected value' );

	v = fmod( NaN, 0.0 );
	t.equal( isnan( v ), true, 'returns expected value' );

	t.end();
});

}).call(this)}).call(this,"/lib/node_modules/@stdlib/math/base/special/fmod/test/test.js")
},{"./../lib":29,"./fixtures/julia/large_small.json":31,"./fixtures/julia/negative_negative.json":32,"./fixtures/julia/negative_positive.json":33,"./fixtures/julia/positive_negative.json":34,"./fixtures/julia/small_large.json":35,"./fixtures/julia/small_small.json":36,"./fixtures/julia/subnormal_results.json":37,"@stdlib/math/base/assert/is-nan":27,"tape":217}],39:[function(require,module,exports){
(function (__filename,__dirname){(function (){
/**
* @license Apache-2.0
*
* Copyright (c) 2024 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var resolve = require( 'path' ).resolve;
var tape = require( 'tape' );
var isnan = require( '@stdlib/math/base/assert/is-nan' );
var tryRequire = require( '@stdlib/utils/try-require' );


// VARIABLES //

var fmod = tryRequire( resolve( __dirname, './../lib/native.js' ) );
var opts = {
	'skip': ( fmod instanceof Error )
};


// FIXTURES //

var subnormalResults = require( './fixtures/julia/subnormal_results.json' );
var smallSmall = require( './fixtures/julia/small_small.json' );
var smallLarge = require( './fixtures/julia/small_large.json' );
var largeSmall = require( './fixtures/julia/large_small.json' );
var negativePositive = require( './fixtures/julia/negative_positive.json' );
var positiveNegative = require( './fixtures/julia/positive_negative.json' );
var negativeNegative = require( './fixtures/julia/negative_negative.json' );


// TESTS //

tape( 'main export is a function', opts, function test( t ) {
	t.ok( true, __filename );
	t.strictEqual( typeof fmod, 'function', 'main export is a function' );
	t.end();
});

tape( 'the function evaluates the modulus function (subnormal results)', opts, function test( t ) {
	var expected;
	var actual;
	var x;
	var y;
	var i;

	x = subnormalResults.x;
	y = subnormalResults.y;
	expected = subnormalResults.expected;
	for ( i = 0; i < x.length; i++ ) {
		actual = fmod( x[ i ], y[ i ] );
		t.equal( actual, expected[ i ], 'fmod('+x[ i ]+','+y[ i ]+') returns '+expected[ i ] );
	}
	t.end();
});

tape( 'the function evaluates the modulus function (small `x`, large `y`)', opts, function test( t ) {
	var expected;
	var actual;
	var x;
	var y;
	var i;

	x = smallLarge.x;
	y = smallLarge.y;
	expected = smallLarge.expected;
	for ( i = 0; i < x.length; i++ ) {
		actual = fmod( x[ i ], y[ i ] );
		t.equal( actual, expected[ i ], 'fmod('+x[ i ]+','+y[ i ]+') returns '+expected[ i ] );
	}
	t.end();
});

tape( 'the function evaluates the modulus function (large `x`, small `y`)', opts, function test( t ) {
	var expected;
	var actual;
	var x;
	var y;
	var i;

	x = largeSmall.x;
	y = largeSmall.y;
	expected = largeSmall.expected;
	for ( i = 0; i < x.length; i++ ) {
		actual = fmod( x[ i ], y[ i ] );
		t.equal( actual, expected[ i ], 'fmod('+x[ i ]+','+y[ i ]+') returns '+expected[ i ] );
	}
	t.end();
});

tape( 'the function evaluates the modulus function (small `x`, small `y`)', opts, function test( t ) {
	var expected;
	var actual;
	var x;
	var y;
	var i;

	x = smallSmall.x;
	y = smallSmall.y;
	expected = smallSmall.expected;
	for ( i = 0; i < x.length; i++ ) {
		actual = fmod( x[ i ], y[ i ] );
		t.equal( actual, expected[ i ], 'fmod('+x[ i ]+','+y[ i ]+') returns '+expected[ i ] );
	}
	t.end();
});

tape( 'the function evaluates the modulus function (positive `x`, negative `y`)', opts, function test( t ) {
	var expected;
	var actual;
	var x;
	var y;
	var i;

	x = positiveNegative.x;
	y = positiveNegative.y;
	expected = positiveNegative.expected;
	for ( i = 0; i < x.length; i++ ) {
		actual = fmod( x[ i ], y[ i ] );
		t.equal( actual, expected[ i ], 'fmod('+x[ i ]+','+y[ i ]+') returns '+expected[ i ] );
	}
	t.end();
});

tape( 'the function evaluates the modulus function (negative `x`, positive `y`)', opts, function test( t ) {
	var expected;
	var actual;
	var x;
	var y;
	var i;

	x = negativePositive.x;
	y = negativePositive.y;
	expected = negativePositive.expected;
	for ( i = 0; i < x.length; i++ ) {
		actual = fmod( x[ i ], y[ i ] );
		t.equal( actual, expected[ i ], 'fmod('+x[ i ]+','+y[ i ]+') returns '+expected[ i ] );
	}
	t.end();
});

tape( 'the function evaluates the modulus function (negative `x`, negative `y`)', opts, function test( t ) {
	var expected;
	var actual;
	var x;
	var y;
	var i;

	x = negativeNegative.x;
	y = negativeNegative.y;
	expected = negativeNegative.expected;
	for ( i = 0; i < x.length; i++ ) {
		actual = fmod( x[ i ], y[ i ] );
		t.equal( actual, expected[ i ], 'fmod('+x[ i ]+','+y[ i ]+') returns '+expected[ i ] );
	}
	t.end();
});

tape( 'the function returns `NaN` if provided `NaN` for `y`', opts, function test( t ) {
	var v;

	v = fmod( -3.0, NaN );
	t.equal( isnan( v ), true, 'returns expected value' );

	v = fmod( 0.0, NaN );
	t.equal( isnan( v ), true, 'returns expected value' );

	t.end();
});

tape( 'the function returns `NaN` if provided `NaN` for `x`', opts, function test( t ) {
	var v;

	v = fmod( NaN, 5.0 );
	t.equal( isnan( v ), true, 'returns expected value' );

	v = fmod( NaN, 1.0 );
	t.equal( isnan( v ), true, 'returns expected value' );

	v = fmod( NaN, 0.0 );
	t.equal( isnan( v ), true, 'returns expected value' );

	t.end();
});

}).call(this)}).call(this,"/lib/node_modules/@stdlib/math/base/special/fmod/test/test.native.js","/lib/node_modules/@stdlib/math/base/special/fmod/test")
},{"./fixtures/julia/large_small.json":31,"./fixtures/julia/negative_negative.json":32,"./fixtures/julia/negative_positive.json":33,"./fixtures/julia/positive_negative.json":34,"./fixtures/julia/small_large.json":35,"./fixtures/julia/small_small.json":36,"./fixtures/julia/subnormal_results.json":37,"@stdlib/math/base/assert/is-nan":27,"@stdlib/utils/try-require":85,"path":99,"tape":217}],40:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2022 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Object constructor.
*
* @module @stdlib/object/ctor
*
* @example
* var Object = require( '@stdlib/object/ctor' );
*
* var o = new Object( null );
* // returns {}
*
* o = new Object( 5.0 );
* // returns <Number>
*
* o = new Object( 'beep' );
* // returns <String>
*
* var o1 = {};
*
* var o2 = new Object( o1 );
* // returns {}
*
* var bool = ( o1 === o2 );
* // returns true
*/

// MODULES //

var main = require( './main.js' );


// EXPORTS //

module.exports = main;

},{"./main.js":41}],41:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2022 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MAIN //

/**
* Returns an object.
*
* @name Object
* @constructor
* @type {Function}
* @param {*} value - input value
* @returns {Object} object
*
* @example
* var o = new Object( null );
* // returns {}
*
* @example
* var o = new Object( 5.0 );
* // returns <Number>
*
* @example
* var o = new Object( 'beep' );
* // returns <String>
*
* @example
* var o1 = {};
*
* var o2 = new Object( o1 );
* // returns {}
*
* var bool = ( o1 === o2 );
* // returns true
*/
var Obj = Object; // eslint-disable-line stdlib/require-globals


// EXPORTS //

module.exports = Obj;

},{}],42:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2021 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Regular expression to capture everything that is not a space immediately after the `function` keyword and before the first left parenthesis.
*
* @module @stdlib/regexp/function-name
*
* @example
* var reFunctionName = require( '@stdlib/regexp/function-name' );
* var RE_FUNCTION_NAME = reFunctionName();
*
* function fname( fcn ) {
*     return RE_FUNCTION_NAME.exec( fcn.toString() )[ 1 ];
* }
*
* var fn = fname( Math.sqrt );
* // returns 'sqrt'
*
* fn = fname( Int8Array );
* // returns 'Int8Array'
*
* fn = fname( Object.prototype.toString );
* // returns 'toString'
*
* fn = fname( function(){} );
* // returns ''
*/

// MODULES //

var setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );
var main = require( './main.js' );
var REGEXP = require( './regexp.js' );


// MAIN //

setReadOnly( main, 'REGEXP', REGEXP );


// EXPORTS //

module.exports = main;

},{"./main.js":43,"./regexp.js":44,"@stdlib/utils/define-nonenumerable-read-only-property":62}],43:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2021 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MAIN //

/**
* Returns a regular expression to capture everything that is not a space immediately after the `function` keyword and before the first left parenthesis.
*
* @returns {RegExp} regular expression
*
* @example
* var RE_FUNCTION_NAME = reFunctionName();
*
* function fname( fcn ) {
*     return RE_FUNCTION_NAME.exec( fcn.toString() )[ 1 ];
* }
*
* var fn = fname( Math.sqrt );
* // returns 'sqrt'
*
* fn = fname( Int8Array );
* // returns 'Int8Array'
*
* fn = fname( Object.prototype.toString );
* // returns 'toString'
*
* fn = fname( function(){} );
* // returns ''
*/
function reFunctionName() {
	return /^\s*function\s*([^(]*)/i;
}


// EXPORTS //

module.exports = reFunctionName;

},{}],44:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var reFunctionName = require( './main.js' );


// MAIN //

/**
* Captures everything that is not a space immediately after the `function` keyword and before the first left parenthesis.
*
* Regular expression: `/^\s*function\s*([^(]*)/i`
*
* -   `/^\s*`
*     -   Match zero or more spaces at beginning
*
* -   `function`
*     -   Match the word `function`
*
* -   `\s*`
*     -   Match zero or more spaces after the word `function`
*
* -   `()`
*     -   Capture
*
* -   `[^(]*`
*     -   Match anything except a left parenthesis `(` zero or more times
*
* -   `/i`
*     -   ignore case
*
* @constant
* @type {RegExp}
* @default /^\s*function\s*([^(]*)/i
*/
var RE_FUNCTION_NAME = reFunctionName();


// EXPORTS //

module.exports = RE_FUNCTION_NAME;

},{"./main.js":43}],45:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2022 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var isNumber = require( './is_number.js' );

// NOTE: for the following, we explicitly avoid using stdlib packages in this particular package in order to avoid circular dependencies.
var abs = Math.abs; // eslint-disable-line stdlib/no-builtin-math
var lowercase = String.prototype.toLowerCase;
var uppercase = String.prototype.toUpperCase;
var replace = String.prototype.replace;


// VARIABLES //

var RE_EXP_POS_DIGITS = /e\+(\d)$/;
var RE_EXP_NEG_DIGITS = /e-(\d)$/;
var RE_ONLY_DIGITS = /^(\d+)$/;
var RE_DIGITS_BEFORE_EXP = /^(\d+)e/;
var RE_TRAILING_PERIOD_ZERO = /\.0$/;
var RE_PERIOD_ZERO_EXP = /\.0*e/;
var RE_ZERO_BEFORE_EXP = /(\..*[^0])0*e/;


// MAIN //

/**
* Formats a token object argument as a floating-point number.
*
* @private
* @param {Object} token - token object
* @throws {Error} must provide a valid floating-point number
* @returns {string} formatted token argument
*/
function formatDouble( token ) {
	var digits;
	var out;
	var f = parseFloat( token.arg );
	if ( !isFinite( f ) ) { // NOTE: We use the global `isFinite` function here instead of `@stdlib/math/base/assert/is-finite` in order to avoid circular dependencies.
		if ( !isNumber( token.arg ) ) {
			throw new Error( 'invalid floating-point number. Value: ' + out );
		}
		// Case: NaN, Infinity, or -Infinity
		f = token.arg;
	}
	switch ( token.specifier ) {
	case 'e':
	case 'E':
		out = f.toExponential( token.precision );
		break;
	case 'f':
	case 'F':
		out = f.toFixed( token.precision );
		break;
	case 'g':
	case 'G':
		if ( abs( f ) < 0.0001 ) {
			digits = token.precision;
			if ( digits > 0 ) {
				digits -= 1;
			}
			out = f.toExponential( digits );
		} else {
			out = f.toPrecision( token.precision );
		}
		if ( !token.alternate ) {
			out = replace.call( out, RE_ZERO_BEFORE_EXP, '$1e' );
			out = replace.call( out, RE_PERIOD_ZERO_EXP, 'e' );
			out = replace.call( out, RE_TRAILING_PERIOD_ZERO, '' );
		}
		break;
	default:
		throw new Error( 'invalid double notation. Value: ' + token.specifier );
	}
	out = replace.call( out, RE_EXP_POS_DIGITS, 'e+0$1' );
	out = replace.call( out, RE_EXP_NEG_DIGITS, 'e-0$1' );
	if ( token.alternate ) {
		out = replace.call( out, RE_ONLY_DIGITS, '$1.' );
		out = replace.call( out, RE_DIGITS_BEFORE_EXP, '$1.e' );
	}
	if ( f >= 0 && token.sign ) {
		out = token.sign + out;
	}
	out = ( token.specifier === uppercase.call( token.specifier ) ) ?
		uppercase.call( out ) :
		lowercase.call( out );
	return out;
}


// EXPORTS //

module.exports = formatDouble;

},{"./is_number.js":48}],46:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2022 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var isNumber = require( './is_number.js' );
var zeroPad = require( './zero_pad.js' );

// NOTE: for the following, we explicitly avoid using stdlib packages in this particular package in order to avoid circular dependencies.
var lowercase = String.prototype.toLowerCase;
var uppercase = String.prototype.toUpperCase;


// MAIN //

/**
* Formats a token object argument as an integer.
*
* @private
* @param {Object} token - token object
* @throws {Error} must provide a valid integer
* @returns {string} formatted token argument
*/
function formatInteger( token ) {
	var base;
	var out;
	var i;

	switch ( token.specifier ) {
	case 'b':
		// Case: %b (binary)
		base = 2;
		break;
	case 'o':
		// Case: %o (octal)
		base = 8;
		break;
	case 'x':
	case 'X':
		// Case: %x, %X (hexadecimal)
		base = 16;
		break;
	case 'd':
	case 'i':
	case 'u':
	default:
		// Case: %d, %i, %u (decimal)
		base = 10;
		break;
	}
	out = token.arg;
	i = parseInt( out, 10 );
	if ( !isFinite( i ) ) { // NOTE: We use the global `isFinite` function here instead of `@stdlib/math/base/assert/is-finite` in order to avoid circular dependencies.
		if ( !isNumber( out ) ) {
			throw new Error( 'invalid integer. Value: ' + out );
		}
		i = 0;
	}
	if ( i < 0 && ( token.specifier === 'u' || base !== 10 ) ) {
		i = 0xffffffff + i + 1;
	}
	if ( i < 0 ) {
		out = ( -i ).toString( base );
		if ( token.precision ) {
			out = zeroPad( out, token.precision, token.padRight );
		}
		out = '-' + out;
	} else {
		out = i.toString( base );
		if ( !i && !token.precision ) {
			out = '';
		} else if ( token.precision ) {
			out = zeroPad( out, token.precision, token.padRight );
		}
		if ( token.sign ) {
			out = token.sign + out;
		}
	}
	if ( base === 16 ) {
		if ( token.alternate ) {
			out = '0x' + out;
		}
		out = ( token.specifier === uppercase.call( token.specifier ) ) ?
			uppercase.call( out ) :
			lowercase.call( out );
	}
	if ( base === 8 ) {
		if ( token.alternate && out.charAt( 0 ) !== '0' ) {
			out = '0' + out;
		}
	}
	return out;
}


// EXPORTS //

module.exports = formatInteger;

},{"./is_number.js":48,"./zero_pad.js":52}],47:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2022 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Generate string from a token array by interpolating values.
*
* @module @stdlib/string/base/format-interpolate
*
* @example
* var formatInterpolate = require( '@stdlib/string/base/format-interpolate' );
*
* var tokens = ['Hello ', { 'specifier': 's' }, '!' ];
* var out = formatInterpolate( tokens, 'World' );
* // returns 'Hello World!'
*/

// MODULES //

var main = require( './main.js' );


// EXPORTS //

module.exports = main;

},{"./main.js":50}],48:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2022 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Tests if a value is a number primitive.
*
* @param {*} value - value to test
* @returns {boolean} boolean indicating if a value is a number primitive
*
* @example
* var bool = isNumber( 3.14 );
* // returns true
*
* @example
* var bool = isNumber( NaN );
* // returns true
*
* @example
* var bool = isNumber( new Number( 3.14 ) );
* // returns false
*/
function isNumber( value ) {
	return ( typeof value === 'number' );  // NOTE: we inline the `isNumber.isPrimitive` function from `@stdlib/assert/is-number` in order to avoid circular dependencies.
}


// EXPORTS //

module.exports = isNumber;

},{}],49:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2022 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Tests if a value is a string primitive.
*
* @param {*} value - value to test
* @returns {boolean} boolean indicating if a value is a string primitive
*
* @example
* var bool = isString( 'beep' );
* // returns true
*
* @example
* var bool = isString( new String( 'beep' ) );
* // returns false
*/
function isString( value ) {
	return ( typeof value === 'string' ); // NOTE: we inline the `isString.isPrimitive` function from `@stdlib/assert/is-string` in order to avoid circular dependencies.
}


// EXPORTS //

module.exports = isString;

},{}],50:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2022 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var formatInteger = require( './format_integer.js' );
var isString = require( './is_string.js' );
var formatDouble = require( './format_double.js' );
var spacePad = require( './space_pad.js' );
var zeroPad = require( './zero_pad.js' );


// VARIABLES //

var fromCharCode = String.fromCharCode;
var isArray = Array.isArray; // NOTE: We use the global `Array.isArray` function here instead of `@stdlib/assert/is-array` to avoid circular dependencies.


// FUNCTIONS //

/**
* Returns a boolean indicating whether a value is `NaN`.
*
* @private
* @param {*} value - input value
* @returns {boolean} boolean indicating whether a value is `NaN`
*
* @example
* var bool = isnan( NaN );
* // returns true
*
* @example
* var bool = isnan( 4 );
* // returns false
*/
function isnan( value ) { // explicitly define a function here instead of `@stdlib/math/base/assert/is-nan` in order to avoid circular dependencies
	return ( value !== value );
}

/**
* Initializes token object with properties of supplied format identifier object or default values if not present.
*
* @private
* @param {Object} token - format identifier object
* @returns {Object} token object
*/
function initialize( token ) {
	var out = {};
	out.specifier = token.specifier;
	out.precision = ( token.precision === void 0 ) ? 1 : token.precision;
	out.width = token.width;
	out.flags = token.flags || '';
	out.mapping = token.mapping;
	return out;
}


// MAIN //

/**
* Generates string from a token array by interpolating values.
*
* @param {Array} tokens - string parts and format identifier objects
* @param {Array} ...args - variable values
* @throws {TypeError} first argument must be an array
* @throws {Error} invalid flags
* @returns {string} formatted string
*
* @example
* var tokens = [ 'beep ', { 'specifier': 's' } ];
* var out = formatInterpolate( tokens, 'boop' );
* // returns 'beep boop'
*/
function formatInterpolate( tokens ) {
	var hasPeriod;
	var flags;
	var token;
	var flag;
	var num;
	var out;
	var pos;
	var i;
	var j;

	if ( !isArray( tokens ) ) {
		throw new TypeError( 'invalid argument. First argument must be an array. Value: `' + tokens + '`.' );
	}
	out = '';
	pos = 1;
	for ( i = 0; i < tokens.length; i++ ) {
		token = tokens[ i ];
		if ( isString( token ) ) {
			out += token;
		} else {
			hasPeriod = token.precision !== void 0;
			token = initialize( token );
			if ( !token.specifier ) {
				throw new TypeError( 'invalid argument. Token is missing `specifier` property. Index: `'+ i +'`. Value: `' + token + '`.' );
			}
			if ( token.mapping ) {
				pos = token.mapping;
			}
			flags = token.flags;
			for ( j = 0; j < flags.length; j++ ) {
				flag = flags.charAt( j );
				switch ( flag ) {
				case ' ':
					token.sign = ' ';
					break;
				case '+':
					token.sign = '+';
					break;
				case '-':
					token.padRight = true;
					token.padZeros = false;
					break;
				case '0':
					token.padZeros = flags.indexOf( '-' ) < 0; // NOTE: We use built-in `Array.prototype.indexOf` here instead of `@stdlib/assert/contains` in order to avoid circular dependencies.
					break;
				case '#':
					token.alternate = true;
					break;
				default:
					throw new Error( 'invalid flag: ' + flag );
				}
			}
			if ( token.width === '*' ) {
				token.width = parseInt( arguments[ pos ], 10 );
				pos += 1;
				if ( isnan( token.width ) ) {
					throw new TypeError( 'the argument for * width at position ' + pos + ' is not a number. Value: `' + token.width + '`.' );
				}
				if ( token.width < 0 ) {
					token.padRight = true;
					token.width = -token.width;
				}
			}
			if ( hasPeriod ) {
				if ( token.precision === '*' ) {
					token.precision = parseInt( arguments[ pos ], 10 );
					pos += 1;
					if ( isnan( token.precision ) ) {
						throw new TypeError( 'the argument for * precision at position ' + pos + ' is not a number. Value: `' + token.precision + '`.' );
					}
					if ( token.precision < 0 ) {
						token.precision = 1;
						hasPeriod = false;
					}
				}
			}
			token.arg = arguments[ pos ];
			switch ( token.specifier ) {
			case 'b':
			case 'o':
			case 'x':
			case 'X':
			case 'd':
			case 'i':
			case 'u':
				// Case: %b (binary), %o (octal), %x, %X (hexadecimal), %d, %i (decimal), %u (unsigned decimal)
				if ( hasPeriod ) {
					token.padZeros = false;
				}
				token.arg = formatInteger( token );
				break;
			case 's':
				// Case: %s (string)
				token.maxWidth = ( hasPeriod ) ? token.precision : -1;
				token.arg = String( token.arg );
				break;
			case 'c':
				// Case: %c (character)
				if ( !isnan( token.arg ) ) {
					num = parseInt( token.arg, 10 );
					if ( num < 0 || num > 127 ) {
						throw new Error( 'invalid character code. Value: ' + token.arg );
					}
					token.arg = ( isnan( num ) ) ? String( token.arg ) : fromCharCode( num ); // eslint-disable-line max-len
				}
				break;
			case 'e':
			case 'E':
			case 'f':
			case 'F':
			case 'g':
			case 'G':
				// Case: %e, %E (scientific notation), %f, %F (decimal floating point), %g, %G (uses the shorter of %e/E or %f/F)
				if ( !hasPeriod ) {
					token.precision = 6;
				}
				token.arg = formatDouble( token );
				break;
			default:
				throw new Error( 'invalid specifier: ' + token.specifier );
			}
			// Fit argument into field width...
			if ( token.maxWidth >= 0 && token.arg.length > token.maxWidth ) {
				token.arg = token.arg.substring( 0, token.maxWidth );
			}
			if ( token.padZeros ) {
				token.arg = zeroPad( token.arg, token.width || token.precision, token.padRight ); // eslint-disable-line max-len
			} else if ( token.width ) {
				token.arg = spacePad( token.arg, token.width, token.padRight );
			}
			out += token.arg || '';
			pos += 1;
		}
	}
	return out;
}


// EXPORTS //

module.exports = formatInterpolate;

},{"./format_double.js":45,"./format_integer.js":46,"./is_string.js":49,"./space_pad.js":51,"./zero_pad.js":52}],51:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2022 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// FUNCTIONS //

/**
* Returns `n` spaces.
*
* @private
* @param {number} n - number of spaces
* @returns {string} string of spaces
*/
function spaces( n ) {
	var out = '';
	var i;
	for ( i = 0; i < n; i++ ) {
		out += ' ';
	}
	return out;
}


// MAIN //

/**
* Pads a token with spaces to the specified width.
*
* @private
* @param {string} str - token argument
* @param {number} width - token width
* @param {boolean} [right=false] - boolean indicating whether to pad to the right
* @returns {string} padded token argument
*/
function spacePad( str, width, right ) {
	var pad = width - str.length;
	if ( pad < 0 ) {
		return str;
	}
	str = ( right ) ?
		str + spaces( pad ) :
		spaces( pad ) + str;
	return str;
}


// EXPORTS //

module.exports = spacePad;

},{}],52:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2022 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// FUNCTIONS //

/**
* Tests if a string starts with a minus sign (`-`).
*
* @private
* @param {string} str - input string
* @returns {boolean} boolean indicating if a string starts with a minus sign (`-`)
*/
function startsWithMinus( str ) {
	return str[ 0 ] === '-';
}

/**
* Returns a string of `n` zeros.
*
* @private
* @param {number} n - number of zeros
* @returns {string} string of zeros
*/
function zeros( n ) {
	var out = '';
	var i;
	for ( i = 0; i < n; i++ ) {
		out += '0';
	}
	return out;
}


// MAIN //

/**
* Pads a token with zeros to the specified width.
*
* @private
* @param {string} str - token argument
* @param {number} width - token width
* @param {boolean} [right=false] - boolean indicating whether to pad to the right
* @returns {string} padded token argument
*/
function zeroPad( str, width, right ) {
	var negative = false;
	var pad = width - str.length;
	if ( pad < 0 ) {
		return str;
	}
	if ( startsWithMinus( str ) ) {
		negative = true;
		str = str.substr( 1 );
	}
	str = ( right ) ?
		str + zeros( pad ) :
		zeros( pad ) + str;
	if ( negative ) {
		str = '-' + str;
	}
	return str;
}


// EXPORTS //

module.exports = zeroPad;

},{}],53:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2022 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Tokenize a string into an array of string parts and format identifier objects.
*
* @module @stdlib/string/base/format-tokenize
*
* @example
* var formatTokenize = require( '@stdlib/string/base/format-tokenize' );
*
* var str = 'Hello %s!';
* var tokens = formatTokenize( str );
* // returns [ 'Hello ', {...}, '!' ]
*/

// MODULES //

var main = require( './main.js' );


// EXPORTS //

module.exports = main;

},{"./main.js":54}],54:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2022 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// VARIABLES //

var RE = /%(?:([1-9]\d*)\$)?([0 +\-#]*)(\*|\d+)?(?:(\.)(\*|\d+)?)?[hlL]?([%A-Za-z])/g;


// FUNCTIONS //

/**
* Parses a delimiter.
*
* @private
* @param {Array} match - regular expression match
* @returns {Object} delimiter token object
*/
function parse( match ) {
	var token = {
		'mapping': ( match[ 1 ] ) ? parseInt( match[ 1 ], 10 ) : void 0,
		'flags': match[ 2 ],
		'width': match[ 3 ],
		'precision': match[ 5 ],
		'specifier': match[ 6 ]
	};
	if ( match[ 4 ] === '.' && match[ 5 ] === void 0 ) {
		token.precision = '1';
	}
	return token;
}


// MAIN //

/**
* Tokenizes a string into an array of string parts and format identifier objects.
*
* @param {string} str - input string
* @returns {Array} tokens
*
* @example
* var tokens = formatTokenize( 'Hello %s!' );
* // returns [ 'Hello ', {...}, '!' ]
*/
function formatTokenize( str ) {
	var content;
	var tokens;
	var match;
	var prev;

	tokens = [];
	prev = 0;
	match = RE.exec( str );
	while ( match ) {
		content = str.slice( prev, RE.lastIndex - match[ 0 ].length );
		if ( content.length ) {
			tokens.push( content );
		}
		tokens.push( parse( match ) );
		prev = RE.lastIndex;
		match = RE.exec( str );
	}
	content = str.slice( prev );
	if ( content.length ) {
		tokens.push( content );
	}
	return tokens;
}


// EXPORTS //

module.exports = formatTokenize;

},{}],55:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2022 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Insert supplied variable values into a format string.
*
* @module @stdlib/string/format
*
* @example
* var format = require( '@stdlib/string/format' );
*
* var out = format( '%s %s!', 'Hello', 'World' );
* // returns 'Hello World!'
*
* out = format( 'Pi: ~%.2f', 3.141592653589793 );
* // returns 'Pi: ~3.14'
*/

// MODULES //

var main = require( './main.js' );


// EXPORTS //

module.exports = main;

},{"./main.js":57}],56:[function(require,module,exports){
arguments[4][49][0].apply(exports,arguments)
},{"dup":49}],57:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2022 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var interpolate = require( '@stdlib/string/base/format-interpolate' );
var tokenize = require( '@stdlib/string/base/format-tokenize' );
var isString = require( './is_string.js' );


// MAIN //

/**
* Inserts supplied variable values into a format string.
*
* @param {string} str - input string
* @param {Array} ...args - variable values
* @throws {TypeError} first argument must be a string
* @throws {Error} invalid flags
* @returns {string} formatted string
*
* @example
* var str = format( 'Hello %s!', 'world' );
* // returns 'Hello world!'
*
* @example
* var str = format( 'Pi: ~%.2f', 3.141592653589793 );
* // returns 'Pi: ~3.14'
*/
function format( str ) {
	var args;
	var i;

	if ( !isString( str ) ) {
		throw new TypeError( format( 'invalid argument. First argument must be a string. Value: `%s`.', str ) );
	}
	args = [ tokenize( str ) ];
	for ( i = 1; i < arguments.length; i++ ) {
		args.push( arguments[ i ] );
	}
	return interpolate.apply( null, args );
}


// EXPORTS //

module.exports = format;

},{"./is_string.js":56,"@stdlib/string/base/format-interpolate":47,"@stdlib/string/base/format-tokenize":53}],58:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Symbol factory.
*
* @module @stdlib/symbol/ctor
*
* @example
* var Symbol = require( '@stdlib/symbol/ctor' );
*
* var s = Symbol( 'beep' );
* // returns <symbol>
*/

// MODULES //

var main = require( './main.js' );


// EXPORTS //

module.exports = main;

},{"./main.js":59}],59:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MAIN //

var Sym = ( typeof Symbol === 'function' ) ? Symbol : void 0; // eslint-disable-line stdlib/require-globals


// EXPORTS //

module.exports = Sym;

},{}],60:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Determine the name of a value's constructor.
*
* @module @stdlib/utils/constructor-name
*
* @example
* var constructorName = require( '@stdlib/utils/constructor-name' );
*
* var v = constructorName( 'a' );
* // returns 'String'
*
* v = constructorName( {} );
* // returns 'Object'
*
* v = constructorName( true );
* // returns 'Boolean'
*/

// MODULES //

var main = require( './main.js' );


// EXPORTS //

module.exports = main;

},{"./main.js":61}],61:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var nativeClass = require( '@stdlib/utils/native-class' );
var RE = require( '@stdlib/regexp/function-name' ).REGEXP;
var isBuffer = require( '@stdlib/assert/is-buffer' );


// MAIN //

/**
* Determines the name of a value's constructor.
*
* @param {*} v - input value
* @returns {string} name of a value's constructor
*
* @example
* var v = constructorName( 'a' );
* // returns 'String'
*
* @example
* var v = constructorName( 5 );
* // returns 'Number'
*
* @example
* var v = constructorName( null );
* // returns 'Null'
*
* @example
* var v = constructorName( undefined );
* // returns 'Undefined'
*
* @example
* var v = constructorName( function noop() {} );
* // returns 'Function'
*/
function constructorName( v ) {
	var match;
	var name;
	var ctor;
	name = nativeClass( v ).slice( 8, -1 );
	if ( (name === 'Object' || name === 'Error') && v.constructor ) {
		ctor = v.constructor;
		if ( typeof ctor.name === 'string' ) {
			return ctor.name;
		}
		match = RE.exec( ctor.toString() );
		if ( match ) {
			return match[ 1 ];
		}
	}
	if ( isBuffer( v ) ) {
		return 'Buffer';
	}
	return name;
}


// EXPORTS //

module.exports = constructorName;

},{"@stdlib/assert/is-buffer":15,"@stdlib/regexp/function-name":42,"@stdlib/utils/native-class":80}],62:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Define a non-enumerable read-only property.
*
* @module @stdlib/utils/define-nonenumerable-read-only-property
*
* @example
* var setNonEnumerableReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );
*
* var obj = {};
*
* setNonEnumerableReadOnly( obj, 'foo', 'bar' );
*
* try {
*     obj.foo = 'boop';
* } catch ( err ) {
*     console.error( err.message );
* }
*/

// MODULES //

var main = require( './main.js' );


// EXPORTS //

module.exports = main;

},{"./main.js":63}],63:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var defineProperty = require( '@stdlib/utils/define-property' );


// MAIN //

/**
* Defines a non-enumerable read-only property.
*
* @param {Object} obj - object on which to define the property
* @param {(string|symbol)} prop - property name
* @param {*} value - value to set
*
* @example
* var obj = {};
*
* setNonEnumerableReadOnly( obj, 'foo', 'bar' );
*
* try {
*     obj.foo = 'boop';
* } catch ( err ) {
*     console.error( err.message );
* }
*/
function setNonEnumerableReadOnly( obj, prop, value ) {
	defineProperty( obj, prop, {
		'configurable': false,
		'enumerable': false,
		'writable': false,
		'value': value
	});
}


// EXPORTS //

module.exports = setNonEnumerableReadOnly;

},{"@stdlib/utils/define-property":67}],64:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MAIN //

/**
* Defines (or modifies) an object property.
*
* ## Notes
*
* -   Property descriptors come in two flavors: **data descriptors** and **accessor descriptors**. A data descriptor is a property that has a value, which may or may not be writable. An accessor descriptor is a property described by a getter-setter function pair. A descriptor must be one of these two flavors and cannot be both.
*
* @name defineProperty
* @type {Function}
* @param {Object} obj - object on which to define the property
* @param {(string|symbol)} prop - property name
* @param {Object} descriptor - property descriptor
* @param {boolean} [descriptor.configurable=false] - boolean indicating if property descriptor can be changed and if the property can be deleted from the provided object
* @param {boolean} [descriptor.enumerable=false] - boolean indicating if the property shows up when enumerating object properties
* @param {boolean} [descriptor.writable=false] - boolean indicating if the value associated with the property can be changed with an assignment operator
* @param {*} [descriptor.value] - property value
* @param {(Function|void)} [descriptor.get=undefined] - function which serves as a getter for the property, or, if no getter, undefined. When the property is accessed, a getter function is called without arguments and with the `this` context set to the object through which the property is accessed (which may not be the object on which the property is defined due to inheritance). The return value will be used as the property value.
* @param {(Function|void)} [descriptor.set=undefined] - function which serves as a setter for the property, or, if no setter, undefined. When assigning a property value, a setter function is called with one argument (the value being assigned to the property) and with the `this` context set to the object through which the property is assigned.
* @throws {TypeError} first argument must be an object
* @throws {TypeError} third argument must be an object
* @throws {Error} property descriptor cannot have both a value and a setter and/or getter
* @returns {Object} object with added property
*
* @example
* var obj = {};
*
* defineProperty( obj, 'foo', {
*     'value': 'bar'
* });
*
* var str = obj.foo;
* // returns 'bar'
*/
var defineProperty = Object.defineProperty;


// EXPORTS //

module.exports = defineProperty;

},{}],65:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2021 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MAIN //

var main = ( typeof Object.defineProperty === 'function' ) ? Object.defineProperty : null;


// EXPORTS //

module.exports = main;

},{}],66:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2021 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var defineProperty = require( './define_property.js' );


// MAIN //

/**
* Tests for `Object.defineProperty` support.
*
* @private
* @returns {boolean} boolean indicating if an environment has `Object.defineProperty` support
*
* @example
* var bool = hasDefinePropertySupport();
* // returns <boolean>
*/
function hasDefinePropertySupport() {
	// Test basic support...
	try {
		defineProperty( {}, 'x', {} );
		return true;
	} catch ( err ) { // eslint-disable-line no-unused-vars
		return false;
	}
}


// EXPORTS //

module.exports = hasDefinePropertySupport;

},{"./define_property.js":65}],67:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Define (or modify) an object property.
*
* @module @stdlib/utils/define-property
*
* @example
* var defineProperty = require( '@stdlib/utils/define-property' );
*
* var obj = {};
* defineProperty( obj, 'foo', {
*     'value': 'bar',
*     'writable': false,
*     'configurable': false,
*     'enumerable': false
* });
* obj.foo = 'boop'; // => throws
*/

// MODULES //

var hasDefinePropertySupport = require( './has_define_property_support.js' );
var builtin = require( './builtin.js' );
var polyfill = require( './polyfill.js' );


// MAIN //

var defineProperty;
if ( hasDefinePropertySupport() ) {
	defineProperty = builtin;
} else {
	defineProperty = polyfill;
}


// EXPORTS //

module.exports = defineProperty;

},{"./builtin.js":64,"./has_define_property_support.js":66,"./polyfill.js":68}],68:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

/* eslint-disable no-underscore-dangle, no-proto */

'use strict';

// MODULES //

var format = require( '@stdlib/string/format' );


// VARIABLES //

var objectProtoype = Object.prototype;
var toStr = objectProtoype.toString;
var defineGetter = objectProtoype.__defineGetter__;
var defineSetter = objectProtoype.__defineSetter__;
var lookupGetter = objectProtoype.__lookupGetter__;
var lookupSetter = objectProtoype.__lookupSetter__;


// MAIN //

/**
* Defines (or modifies) an object property.
*
* ## Notes
*
* -   Property descriptors come in two flavors: **data descriptors** and **accessor descriptors**. A data descriptor is a property that has a value, which may or may not be writable. An accessor descriptor is a property described by a getter-setter function pair. A descriptor must be one of these two flavors and cannot be both.
*
* @param {Object} obj - object on which to define the property
* @param {string} prop - property name
* @param {Object} descriptor - property descriptor
* @param {boolean} [descriptor.configurable=false] - boolean indicating if property descriptor can be changed and if the property can be deleted from the provided object
* @param {boolean} [descriptor.enumerable=false] - boolean indicating if the property shows up when enumerating object properties
* @param {boolean} [descriptor.writable=false] - boolean indicating if the value associated with the property can be changed with an assignment operator
* @param {*} [descriptor.value] - property value
* @param {(Function|void)} [descriptor.get=undefined] - function which serves as a getter for the property, or, if no getter, undefined. When the property is accessed, a getter function is called without arguments and with the `this` context set to the object through which the property is accessed (which may not be the object on which the property is defined due to inheritance). The return value will be used as the property value.
* @param {(Function|void)} [descriptor.set=undefined] - function which serves as a setter for the property, or, if no setter, undefined. When assigning a property value, a setter function is called with one argument (the value being assigned to the property) and with the `this` context set to the object through which the property is assigned.
* @throws {TypeError} first argument must be an object
* @throws {TypeError} third argument must be an object
* @throws {Error} property descriptor cannot have both a value and a setter and/or getter
* @returns {Object} object with added property
*
* @example
* var obj = {};
*
* defineProperty( obj, 'foo', {
*     'value': 'bar'
* });
*
* var str = obj.foo;
* // returns 'bar'
*/
function defineProperty( obj, prop, descriptor ) {
	var prototype;
	var hasValue;
	var hasGet;
	var hasSet;

	if ( typeof obj !== 'object' || obj === null || toStr.call( obj ) === '[object Array]' ) {
		throw new TypeError( format( 'invalid argument. First argument must be an object. Value: `%s`.', obj ) );
	}
	if ( typeof descriptor !== 'object' || descriptor === null || toStr.call( descriptor ) === '[object Array]' ) {
		throw new TypeError( format( 'invalid argument. Property descriptor must be an object. Value: `%s`.', descriptor ) );
	}
	hasValue = ( 'value' in descriptor );
	if ( hasValue ) {
		if (
			lookupGetter.call( obj, prop ) ||
			lookupSetter.call( obj, prop )
		) {
			// Override `__proto__` to avoid touching inherited accessors:
			prototype = obj.__proto__;
			obj.__proto__ = objectProtoype;

			// Delete property as existing getters/setters prevent assigning value to specified property:
			delete obj[ prop ];
			obj[ prop ] = descriptor.value;

			// Restore original prototype:
			obj.__proto__ = prototype;
		} else {
			obj[ prop ] = descriptor.value;
		}
	}
	hasGet = ( 'get' in descriptor );
	hasSet = ( 'set' in descriptor );

	if ( hasValue && ( hasGet || hasSet ) ) {
		throw new Error( 'invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.' );
	}

	if ( hasGet && defineGetter ) {
		defineGetter.call( obj, prop, descriptor.get );
	}
	if ( hasSet && defineSetter ) {
		defineSetter.call( obj, prop, descriptor.set );
	}
	return obj;
}


// EXPORTS //

module.exports = defineProperty;

},{"@stdlib/string/format":55}],69:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var isFunction = require( '@stdlib/assert/is-function' );
var builtin = require( './native.js' );
var polyfill = require( './polyfill.js' );


// MAIN //

var getProto;
if ( isFunction( Object.getPrototypeOf ) ) {
	getProto = builtin;
} else {
	getProto = polyfill;
}


// EXPORTS //

module.exports = getProto;

},{"./native.js":72,"./polyfill.js":73,"@stdlib/assert/is-function":19}],70:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Return the prototype of a provided object.
*
* @module @stdlib/utils/get-prototype-of
*
* @example
* var getPrototype = require( '@stdlib/utils/get-prototype-of' );
*
* var proto = getPrototype( {} );
* // returns {}
*/

// MODULES //

var main = require( './main.js' );


// EXPORTS //

module.exports = main;

},{"./main.js":71}],71:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var Object = require( '@stdlib/object/ctor' );
var getProto = require( './detect.js' );


// MAIN //

/**
* Returns the prototype of a provided object.
*
* @param {*} value - input value
* @returns {(Object|null)} prototype
*
* @example
* var proto = getPrototypeOf( {} );
* // returns {}
*/
function getPrototypeOf( value ) {
	if (
		value === null ||
		value === void 0
	) {
		return null;
	}
	// In order to ensure consistent ES5/ES6 behavior, cast input value to an object (strings, numbers, booleans); ES5 `Object.getPrototypeOf` throws when provided primitives and ES6 `Object.getPrototypeOf` casts:
	value = Object( value );

	return getProto( value );
}


// EXPORTS //

module.exports = getPrototypeOf;

},{"./detect.js":69,"@stdlib/object/ctor":40}],72:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MAIN //

var getProto = Object.getPrototypeOf;


// EXPORTS //

module.exports = getProto;

},{}],73:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var nativeClass = require( '@stdlib/utils/native-class' );
var getProto = require( './proto.js' );


// MAIN //

/**
* Returns the prototype of a provided object.
*
* @private
* @param {Object} obj - input object
* @returns {(Object|null)} prototype
*/
function getPrototypeOf( obj ) {
	var proto = getProto( obj );
	if ( proto || proto === null ) {
		return proto;
	}
	if ( nativeClass( obj.constructor ) === '[object Function]' ) {
		// May break if the constructor has been tampered with...
		return obj.constructor.prototype;
	}
	if ( obj instanceof Object ) {
		return Object.prototype;
	}
	// Return `null` for objects created via `Object.create( null )`. Also return `null` for cross-realm objects on browsers that lack `__proto__` support, such as IE < 11.
	return null;
}


// EXPORTS //

module.exports = getPrototypeOf;

},{"./proto.js":74,"@stdlib/utils/native-class":80}],74:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Returns the value of the `__proto__` property.
*
* @private
* @param {Object} obj - input object
* @returns {*} value of `__proto__` property
*/
function getProto( obj ) {
	// eslint-disable-next-line no-proto
	return obj.__proto__;
}


// EXPORTS //

module.exports = getProto;

},{}],75:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2022 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var isBoolean = require( '@stdlib/assert/is-boolean' ).isPrimitive;
var format = require( '@stdlib/string/format' );
var getThis = require( './codegen.js' );
var Self = require( './self.js' );
var Win = require( './window.js' );
var GlobalThis = require( './global_this.js' );


// MAIN //

/**
* Returns the global object.
*
* ## Notes
*
* -   Using code generation is the **most** reliable way to resolve the global object; however, doing so is likely to violate content security policies (CSPs) in, e.g., Chrome Apps and elsewhere.
*
* @private
* @param {boolean} [codegen=false] - boolean indicating whether to use code generation to resolve the global object
* @throws {TypeError} must provide a boolean
* @throws {Error} unable to resolve global object
* @returns {Object} global object
*
* @example
* var g = getGlobal();
* // returns {...}
*/
function getGlobal( codegen ) {
	if ( arguments.length ) {
		if ( !isBoolean( codegen ) ) {
			throw new TypeError( format( 'invalid argument. Must provide a boolean. Value: `%s`.', codegen ) );
		}
		if ( codegen ) {
			return getThis();
		}
		// Fall through...
	}
	// Case: 2020 revision of ECMAScript standard
	if ( GlobalThis ) {
		return GlobalThis;
	}
	// Case: browsers and web workers
	if ( Self ) {
		return Self;
	}
	// Case: browsers
	if ( Win ) {
		return Win;
	}
	// Case: unknown
	throw new Error( 'unexpected error. Unable to resolve global object.' );
}


// EXPORTS //

module.exports = getGlobal;

},{"./codegen.js":76,"./global_this.js":77,"./self.js":78,"./window.js":79,"@stdlib/assert/is-boolean":9,"@stdlib/string/format":55}],76:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MAIN //

/**
* Returns the global object using code generation.
*
* @private
* @returns {Object} global object
*/
function getGlobal() {
	return new Function( 'return this;' )(); // eslint-disable-line no-new-func, stdlib/require-globals
}


// EXPORTS //

module.exports = getGlobal;

},{}],77:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2022 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MAIN //

var obj = ( typeof globalThis === 'object' ) ? globalThis : null; // eslint-disable-line no-undef


// EXPORTS //

module.exports = obj;

},{}],78:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MAIN //

var obj = ( typeof self === 'object' ) ? self : null;


// EXPORTS //

module.exports = obj;

},{}],79:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MAIN //

var obj = ( typeof window === 'object' ) ? window : null;


// EXPORTS //

module.exports = obj;

},{}],80:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Return a string value indicating a specification defined classification of an object.
*
* @module @stdlib/utils/native-class
*
* @example
* var nativeClass = require( '@stdlib/utils/native-class' );
*
* var str = nativeClass( 'a' );
* // returns '[object String]'
*
* str = nativeClass( 5 );
* // returns '[object Number]'
*
* function Beep() {
*     return this;
* }
* str = nativeClass( new Beep() );
* // returns '[object Object]'
*/

// MODULES //

var hasToStringTag = require( '@stdlib/assert/has-tostringtag-support' );
var builtin = require( './main.js' );
var polyfill = require( './polyfill.js' );


// MAIN //

var main;
if ( hasToStringTag() ) {
	main = polyfill;
} else {
	main = builtin;
}


// EXPORTS //

module.exports = main;

},{"./main.js":81,"./polyfill.js":82,"@stdlib/assert/has-tostringtag-support":5}],81:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var toStr = require( './tostring.js' );


// MAIN //

/**
* Returns a string value indicating a specification defined classification (via the internal property `[[Class]]`) of an object.
*
* @param {*} v - input value
* @returns {string} string value indicating a specification defined classification of the input value
*
* @example
* var str = nativeClass( 'a' );
* // returns '[object String]'
*
* @example
* var str = nativeClass( 5 );
* // returns '[object Number]'
*
* @example
* function Beep() {
*     return this;
* }
* var str = nativeClass( new Beep() );
* // returns '[object Object]'
*/
function nativeClass( v ) {
	return toStr.call( v );
}


// EXPORTS //

module.exports = nativeClass;

},{"./tostring.js":83}],82:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var hasOwnProp = require( '@stdlib/assert/has-own-property' );
var toStringTag = require( './tostringtag.js' );
var toStr = require( './tostring.js' );


// MAIN //

/**
* Returns a string value indicating a specification defined classification of an object in environments supporting `Symbol.toStringTag`.
*
* @param {*} v - input value
* @returns {string} string value indicating a specification defined classification of the input value
*
* @example
* var str = nativeClass( 'a' );
* // returns '[object String]'
*
* @example
* var str = nativeClass( 5 );
* // returns '[object Number]'
*
* @example
* function Beep() {
*     return this;
* }
* var str = nativeClass( new Beep() );
* // returns '[object Object]'
*/
function nativeClass( v ) {
	var isOwn;
	var tag;
	var out;

	if ( v === null || v === void 0 ) {
		return toStr.call( v );
	}
	tag = v[ toStringTag ];
	isOwn = hasOwnProp( v, toStringTag );

	// Attempt to override the `toStringTag` property. For built-ins having a `Symbol.toStringTag` property (e.g., `JSON`, `Math`, etc), the `Symbol.toStringTag` property is read-only (e.g., , so we need to wrap in a `try/catch`.
	try {
		v[ toStringTag ] = void 0;
	} catch ( err ) { // eslint-disable-line no-unused-vars
		return toStr.call( v );
	}
	out = toStr.call( v );

	if ( isOwn ) {
		v[ toStringTag ] = tag;
	} else {
		delete v[ toStringTag ];
	}
	return out;
}


// EXPORTS //

module.exports = nativeClass;

},{"./tostring.js":83,"./tostringtag.js":84,"@stdlib/assert/has-own-property":1}],83:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MAIN //

var toStr = Object.prototype.toString;


// EXPORTS //

module.exports = toStr;

},{}],84:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var Symbol = require( '@stdlib/symbol/ctor' );


// MAIN //

var toStrTag = ( typeof Symbol === 'function' ) ? Symbol.toStringTag : '';


// EXPORTS //

module.exports = toStrTag;

},{"@stdlib/symbol/ctor":58}],85:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Wrap `require` in a try/catch block.
*
* @module @stdlib/utils/try-require
*
* @example
* var tryRequire = require( '@stdlib/utils/try-require' );
*
* var out = tryRequire( 'beepboop' );
*
* if ( out instanceof Error ) {
*     console.log( out.message );
* }
*/

// MODULES //

var main = require( './main.js' );


// EXPORTS //

module.exports = main;

},{"./main.js":86}],86:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var isError = require( '@stdlib/assert/is-error' );


// MAIN //

/**
* Wraps `require` in a try/catch block.
*
* @param {string} id - module id
* @returns {*|Error} `module.exports` of the resolved module or an error
*
* @example
* var out = tryRequire( 'beepboop' );
*
* if ( out instanceof Error ) {
*     console.error( out.message );
* }
*/
function tryRequire( id ) {
	try {
		return require( id ); // eslint-disable-line stdlib/no-dynamic-require
	} catch ( error ) {
		if ( isError( error ) ) {
			return error;
		}
		// Handle case where a literal is thrown...
		if ( typeof error === 'object' ) {
			return new Error( JSON.stringify( error ) );
		}
		return new Error( error.toString() );
	}
}


// EXPORTS //

module.exports = tryRequire;

},{"@stdlib/assert/is-error":17}],87:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var RE = require( './fixtures/re.js' );
var nodeList = require( './fixtures/nodelist.js' );
var typedarray = require( './fixtures/typedarray.js' );


// MAIN //

/**
* Checks whether a polyfill is needed when using the `typeof` operator.
*
* @private
* @returns {boolean} boolean indicating whether a polyfill is needed
*/
function check() {
	if (
		// Chrome 1-12 returns 'function' for regular expression instances (see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/typeof):
		typeof RE === 'function' ||

		// Safari 8 returns 'object' for typed array and weak map constructors (underscore #1929):
		typeof typedarray === 'object' ||

		// PhantomJS 1.9 returns 'function' for `NodeList` instances (underscore #2236):
		typeof nodeList === 'function'
	) {
		return true;
	}
	return false;
}


// EXPORTS //

module.exports = check;

},{"./fixtures/nodelist.js":88,"./fixtures/re.js":89,"./fixtures/typedarray.js":90}],88:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var getGlobal = require( '@stdlib/utils/global' );


// MAIN //

var root = getGlobal();
var nodeList = root.document && root.document.childNodes;


// EXPORTS //

module.exports = nodeList;

},{"@stdlib/utils/global":75}],89:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

var RE = /./;


// EXPORTS //

module.exports = RE;

},{}],90:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

var typedarray = Int8Array; // eslint-disable-line stdlib/require-globals


// EXPORTS //

module.exports = typedarray;

},{}],91:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Determine a value's type.
*
* @module @stdlib/utils/type-of
*
* @example
* var typeOf = require( '@stdlib/utils/type-of' );
*
* var str = typeOf( 'a' );
* // returns 'string'
*
* str = typeOf( 5 );
* // returns 'number'
*/

// MODULES //

var usePolyfill = require( './check.js' );
var builtin = require( './main.js' );
var polyfill = require( './polyfill.js' );


// MAIN //

var main = ( usePolyfill() ) ? polyfill : builtin;


// EXPORTS //

module.exports = main;

},{"./check.js":87,"./main.js":92,"./polyfill.js":93}],92:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var ctorName = require( '@stdlib/utils/constructor-name' );


// NOTES //

/*
* Built-in `typeof` operator behavior:
*
* ```text
* typeof null => 'object'
* typeof undefined => 'undefined'
* typeof 'a' => 'string'
* typeof 5 => 'number'
* typeof NaN => 'number'
* typeof true => 'boolean'
* typeof false => 'boolean'
* typeof {} => 'object'
* typeof [] => 'object'
* typeof function foo(){} => 'function'
* typeof function* foo(){} => 'object'
* typeof Symbol() => 'symbol'
* ```
*
*/


// MAIN //

/**
* Determines a value's type.
*
* @param {*} v - input value
* @returns {string} string indicating the value's type
*/
function typeOf( v ) {
	var type;

	// Address `typeof null` => `object` (see http://wiki.ecmascript.org/doku.php?id=harmony:typeof_null):
	if ( v === null ) {
		return 'null';
	}
	type = typeof v;

	// If the `typeof` operator returned something other than `object`, we are done. Otherwise, we need to check for an internal class name or search for a constructor.
	if ( type === 'object' ) {
		return ctorName( v ).toLowerCase();
	}
	return type;
}


// EXPORTS //

module.exports = typeOf;

},{"@stdlib/utils/constructor-name":60}],93:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var ctorName = require( '@stdlib/utils/constructor-name' );


// MAIN //

/**
* Determines a value's type.
*
* @param {*} v - input value
* @returns {string} string indicating the value's type
*/
function typeOf( v ) {
	return ctorName( v ).toLowerCase();
}


// EXPORTS //

module.exports = typeOf;

},{"@stdlib/utils/constructor-name":60}],94:[function(require,module,exports){
'use strict'

exports.byteLength = byteLength
exports.toByteArray = toByteArray
exports.fromByteArray = fromByteArray

var lookup = []
var revLookup = []
var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array

var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
for (var i = 0, len = code.length; i < len; ++i) {
  lookup[i] = code[i]
  revLookup[code.charCodeAt(i)] = i
}

// Support decoding URL-safe base64 strings, as Node.js does.
// See: https://en.wikipedia.org/wiki/Base64#URL_applications
revLookup['-'.charCodeAt(0)] = 62
revLookup['_'.charCodeAt(0)] = 63

function getLens (b64) {
  var len = b64.length

  if (len % 4 > 0) {
    throw new Error('Invalid string. Length must be a multiple of 4')
  }

  // Trim off extra bytes after placeholder bytes are found
  // See: https://github.com/beatgammit/base64-js/issues/42
  var validLen = b64.indexOf('=')
  if (validLen === -1) validLen = len

  var placeHoldersLen = validLen === len
    ? 0
    : 4 - (validLen % 4)

  return [validLen, placeHoldersLen]
}

// base64 is 4/3 + up to two characters of the original data
function byteLength (b64) {
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function _byteLength (b64, validLen, placeHoldersLen) {
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function toByteArray (b64) {
  var tmp
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]

  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))

  var curByte = 0

  // if there are placeholders, only get up to the last complete 4 chars
  var len = placeHoldersLen > 0
    ? validLen - 4
    : validLen

  var i
  for (i = 0; i < len; i += 4) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 18) |
      (revLookup[b64.charCodeAt(i + 1)] << 12) |
      (revLookup[b64.charCodeAt(i + 2)] << 6) |
      revLookup[b64.charCodeAt(i + 3)]
    arr[curByte++] = (tmp >> 16) & 0xFF
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 2) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 2) |
      (revLookup[b64.charCodeAt(i + 1)] >> 4)
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 1) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 10) |
      (revLookup[b64.charCodeAt(i + 1)] << 4) |
      (revLookup[b64.charCodeAt(i + 2)] >> 2)
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  return arr
}

function tripletToBase64 (num) {
  return lookup[num >> 18 & 0x3F] +
    lookup[num >> 12 & 0x3F] +
    lookup[num >> 6 & 0x3F] +
    lookup[num & 0x3F]
}

function encodeChunk (uint8, start, end) {
  var tmp
  var output = []
  for (var i = start; i < end; i += 3) {
    tmp =
      ((uint8[i] << 16) & 0xFF0000) +
      ((uint8[i + 1] << 8) & 0xFF00) +
      (uint8[i + 2] & 0xFF)
    output.push(tripletToBase64(tmp))
  }
  return output.join('')
}

function fromByteArray (uint8) {
  var tmp
  var len = uint8.length
  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes
  var parts = []
  var maxChunkLength = 16383 // must be multiple of 3

  // go through the array every three bytes, we'll deal with trailing stuff later
  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))
  }

  // pad the end with zeros, but make sure to not forget the extra bytes
  if (extraBytes === 1) {
    tmp = uint8[len - 1]
    parts.push(
      lookup[tmp >> 2] +
      lookup[(tmp << 4) & 0x3F] +
      '=='
    )
  } else if (extraBytes === 2) {
    tmp = (uint8[len - 2] << 8) + uint8[len - 1]
    parts.push(
      lookup[tmp >> 10] +
      lookup[(tmp >> 4) & 0x3F] +
      lookup[(tmp << 2) & 0x3F] +
      '='
    )
  }

  return parts.join('')
}

},{}],95:[function(require,module,exports){

},{}],96:[function(require,module,exports){
arguments[4][95][0].apply(exports,arguments)
},{"dup":95}],97:[function(require,module,exports){
(function (Buffer){(function (){
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
/* eslint-disable no-proto */

'use strict'

var base64 = require('base64-js')
var ieee754 = require('ieee754')

exports.Buffer = Buffer
exports.SlowBuffer = SlowBuffer
exports.INSPECT_MAX_BYTES = 50

var K_MAX_LENGTH = 0x7fffffff
exports.kMaxLength = K_MAX_LENGTH

/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Print warning and recommend using `buffer` v4.x which has an Object
 *               implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * We report that the browser does not support typed arrays if the are not subclassable
 * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`
 * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support
 * for __proto__ and has a buggy typed array implementation.
 */
Buffer.TYPED_ARRAY_SUPPORT = typedArraySupport()

if (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&
    typeof console.error === 'function') {
  console.error(
    'This browser lacks typed array (Uint8Array) support which is required by ' +
    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'
  )
}

function typedArraySupport () {
  // Can typed array instances can be augmented?
  try {
    var arr = new Uint8Array(1)
    arr.__proto__ = { __proto__: Uint8Array.prototype, foo: function () { return 42 } }
    return arr.foo() === 42
  } catch (e) {
    return false
  }
}

Object.defineProperty(Buffer.prototype, 'parent', {
  enumerable: true,
  get: function () {
    if (!Buffer.isBuffer(this)) return undefined
    return this.buffer
  }
})

Object.defineProperty(Buffer.prototype, 'offset', {
  enumerable: true,
  get: function () {
    if (!Buffer.isBuffer(this)) return undefined
    return this.byteOffset
  }
})

function createBuffer (length) {
  if (length > K_MAX_LENGTH) {
    throw new RangeError('The value "' + length + '" is invalid for option "size"')
  }
  // Return an augmented `Uint8Array` instance
  var buf = new Uint8Array(length)
  buf.__proto__ = Buffer.prototype
  return buf
}

/**
 * The Buffer constructor returns instances of `Uint8Array` that have their
 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
 * returns a single octet.
 *
 * The `Uint8Array` prototype remains unmodified.
 */

function Buffer (arg, encodingOrOffset, length) {
  // Common case.
  if (typeof arg === 'number') {
    if (typeof encodingOrOffset === 'string') {
      throw new TypeError(
        'The "string" argument must be of type string. Received type number'
      )
    }
    return allocUnsafe(arg)
  }
  return from(arg, encodingOrOffset, length)
}

// Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
if (typeof Symbol !== 'undefined' && Symbol.species != null &&
    Buffer[Symbol.species] === Buffer) {
  Object.defineProperty(Buffer, Symbol.species, {
    value: null,
    configurable: true,
    enumerable: false,
    writable: false
  })
}

Buffer.poolSize = 8192 // not used by this implementation

function from (value, encodingOrOffset, length) {
  if (typeof value === 'string') {
    return fromString(value, encodingOrOffset)
  }

  if (ArrayBuffer.isView(value)) {
    return fromArrayLike(value)
  }

  if (value == null) {
    throw TypeError(
      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +
      'or Array-like Object. Received type ' + (typeof value)
    )
  }

  if (isInstance(value, ArrayBuffer) ||
      (value && isInstance(value.buffer, ArrayBuffer))) {
    return fromArrayBuffer(value, encodingOrOffset, length)
  }

  if (typeof value === 'number') {
    throw new TypeError(
      'The "value" argument must not be of type number. Received type number'
    )
  }

  var valueOf = value.valueOf && value.valueOf()
  if (valueOf != null && valueOf !== value) {
    return Buffer.from(valueOf, encodingOrOffset, length)
  }

  var b = fromObject(value)
  if (b) return b

  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&
      typeof value[Symbol.toPrimitive] === 'function') {
    return Buffer.from(
      value[Symbol.toPrimitive]('string'), encodingOrOffset, length
    )
  }

  throw new TypeError(
    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +
    'or Array-like Object. Received type ' + (typeof value)
  )
}

/**
 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
 * if value is a number.
 * Buffer.from(str[, encoding])
 * Buffer.from(array)
 * Buffer.from(buffer)
 * Buffer.from(arrayBuffer[, byteOffset[, length]])
 **/
Buffer.from = function (value, encodingOrOffset, length) {
  return from(value, encodingOrOffset, length)
}

// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:
// https://github.com/feross/buffer/pull/148
Buffer.prototype.__proto__ = Uint8Array.prototype
Buffer.__proto__ = Uint8Array

function assertSize (size) {
  if (typeof size !== 'number') {
    throw new TypeError('"size" argument must be of type number')
  } else if (size < 0) {
    throw new RangeError('The value "' + size + '" is invalid for option "size"')
  }
}

function alloc (size, fill, encoding) {
  assertSize(size)
  if (size <= 0) {
    return createBuffer(size)
  }
  if (fill !== undefined) {
    // Only pay attention to encoding if it's a string. This
    // prevents accidentally sending in a number that would
    // be interpretted as a start offset.
    return typeof encoding === 'string'
      ? createBuffer(size).fill(fill, encoding)
      : createBuffer(size).fill(fill)
  }
  return createBuffer(size)
}

/**
 * Creates a new filled Buffer instance.
 * alloc(size[, fill[, encoding]])
 **/
Buffer.alloc = function (size, fill, encoding) {
  return alloc(size, fill, encoding)
}

function allocUnsafe (size) {
  assertSize(size)
  return createBuffer(size < 0 ? 0 : checked(size) | 0)
}

/**
 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
 * */
Buffer.allocUnsafe = function (size) {
  return allocUnsafe(size)
}
/**
 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
 */
Buffer.allocUnsafeSlow = function (size) {
  return allocUnsafe(size)
}

function fromString (string, encoding) {
  if (typeof encoding !== 'string' || encoding === '') {
    encoding = 'utf8'
  }

  if (!Buffer.isEncoding(encoding)) {
    throw new TypeError('Unknown encoding: ' + encoding)
  }

  var length = byteLength(string, encoding) | 0
  var buf = createBuffer(length)

  var actual = buf.write(string, encoding)

  if (actual !== length) {
    // Writing a hex string, for example, that contains invalid characters will
    // cause everything after the first invalid character to be ignored. (e.g.
    // 'abxxcd' will be treated as 'ab')
    buf = buf.slice(0, actual)
  }

  return buf
}

function fromArrayLike (array) {
  var length = array.length < 0 ? 0 : checked(array.length) | 0
  var buf = createBuffer(length)
  for (var i = 0; i < length; i += 1) {
    buf[i] = array[i] & 255
  }
  return buf
}

function fromArrayBuffer (array, byteOffset, length) {
  if (byteOffset < 0 || array.byteLength < byteOffset) {
    throw new RangeError('"offset" is outside of buffer bounds')
  }

  if (array.byteLength < byteOffset + (length || 0)) {
    throw new RangeError('"length" is outside of buffer bounds')
  }

  var buf
  if (byteOffset === undefined && length === undefined) {
    buf = new Uint8Array(array)
  } else if (length === undefined) {
    buf = new Uint8Array(array, byteOffset)
  } else {
    buf = new Uint8Array(array, byteOffset, length)
  }

  // Return an augmented `Uint8Array` instance
  buf.__proto__ = Buffer.prototype
  return buf
}

function fromObject (obj) {
  if (Buffer.isBuffer(obj)) {
    var len = checked(obj.length) | 0
    var buf = createBuffer(len)

    if (buf.length === 0) {
      return buf
    }

    obj.copy(buf, 0, 0, len)
    return buf
  }

  if (obj.length !== undefined) {
    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {
      return createBuffer(0)
    }
    return fromArrayLike(obj)
  }

  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {
    return fromArrayLike(obj.data)
  }
}

function checked (length) {
  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when
  // length is NaN (which is otherwise coerced to zero.)
  if (length >= K_MAX_LENGTH) {
    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')
  }
  return length | 0
}

function SlowBuffer (length) {
  if (+length != length) { // eslint-disable-line eqeqeq
    length = 0
  }
  return Buffer.alloc(+length)
}

Buffer.isBuffer = function isBuffer (b) {
  return b != null && b._isBuffer === true &&
    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false
}

Buffer.compare = function compare (a, b) {
  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)
  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)
  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
    throw new TypeError(
      'The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array'
    )
  }

  if (a === b) return 0

  var x = a.length
  var y = b.length

  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
    if (a[i] !== b[i]) {
      x = a[i]
      y = b[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

Buffer.isEncoding = function isEncoding (encoding) {
  switch (String(encoding).toLowerCase()) {
    case 'hex':
    case 'utf8':
    case 'utf-8':
    case 'ascii':
    case 'latin1':
    case 'binary':
    case 'base64':
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      return true
    default:
      return false
  }
}

Buffer.concat = function concat (list, length) {
  if (!Array.isArray(list)) {
    throw new TypeError('"list" argument must be an Array of Buffers')
  }

  if (list.length === 0) {
    return Buffer.alloc(0)
  }

  var i
  if (length === undefined) {
    length = 0
    for (i = 0; i < list.length; ++i) {
      length += list[i].length
    }
  }

  var buffer = Buffer.allocUnsafe(length)
  var pos = 0
  for (i = 0; i < list.length; ++i) {
    var buf = list[i]
    if (isInstance(buf, Uint8Array)) {
      buf = Buffer.from(buf)
    }
    if (!Buffer.isBuffer(buf)) {
      throw new TypeError('"list" argument must be an Array of Buffers')
    }
    buf.copy(buffer, pos)
    pos += buf.length
  }
  return buffer
}

function byteLength (string, encoding) {
  if (Buffer.isBuffer(string)) {
    return string.length
  }
  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {
    return string.byteLength
  }
  if (typeof string !== 'string') {
    throw new TypeError(
      'The "string" argument must be one of type string, Buffer, or ArrayBuffer. ' +
      'Received type ' + typeof string
    )
  }

  var len = string.length
  var mustMatch = (arguments.length > 2 && arguments[2] === true)
  if (!mustMatch && len === 0) return 0

  // Use a for loop to avoid recursion
  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'ascii':
      case 'latin1':
      case 'binary':
        return len
      case 'utf8':
      case 'utf-8':
        return utf8ToBytes(string).length
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return len * 2
      case 'hex':
        return len >>> 1
      case 'base64':
        return base64ToBytes(string).length
      default:
        if (loweredCase) {
          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8
        }
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}
Buffer.byteLength = byteLength

function slowToString (encoding, start, end) {
  var loweredCase = false

  // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
  // property of a typed array.

  // This behaves neither like String nor Uint8Array in that we set start/end
  // to their upper/lower bounds if the value passed is out of range.
  // undefined is handled specially as per ECMA-262 6th Edition,
  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
  if (start === undefined || start < 0) {
    start = 0
  }
  // Return early if start > this.length. Done here to prevent potential uint32
  // coercion fail below.
  if (start > this.length) {
    return ''
  }

  if (end === undefined || end > this.length) {
    end = this.length
  }

  if (end <= 0) {
    return ''
  }

  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
  end >>>= 0
  start >>>= 0

  if (end <= start) {
    return ''
  }

  if (!encoding) encoding = 'utf8'

  while (true) {
    switch (encoding) {
      case 'hex':
        return hexSlice(this, start, end)

      case 'utf8':
      case 'utf-8':
        return utf8Slice(this, start, end)

      case 'ascii':
        return asciiSlice(this, start, end)

      case 'latin1':
      case 'binary':
        return latin1Slice(this, start, end)

      case 'base64':
        return base64Slice(this, start, end)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return utf16leSlice(this, start, end)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = (encoding + '').toLowerCase()
        loweredCase = true
    }
  }
}

// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)
// to detect a Buffer instance. It's not possible to use `instanceof Buffer`
// reliably in a browserify context because there could be multiple different
// copies of the 'buffer' package in use. This method works even for Buffer
// instances that were created from another copy of the `buffer` package.
// See: https://github.com/feross/buffer/issues/154
Buffer.prototype._isBuffer = true

function swap (b, n, m) {
  var i = b[n]
  b[n] = b[m]
  b[m] = i
}

Buffer.prototype.swap16 = function swap16 () {
  var len = this.length
  if (len % 2 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 16-bits')
  }
  for (var i = 0; i < len; i += 2) {
    swap(this, i, i + 1)
  }
  return this
}

Buffer.prototype.swap32 = function swap32 () {
  var len = this.length
  if (len % 4 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 32-bits')
  }
  for (var i = 0; i < len; i += 4) {
    swap(this, i, i + 3)
    swap(this, i + 1, i + 2)
  }
  return this
}

Buffer.prototype.swap64 = function swap64 () {
  var len = this.length
  if (len % 8 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 64-bits')
  }
  for (var i = 0; i < len; i += 8) {
    swap(this, i, i + 7)
    swap(this, i + 1, i + 6)
    swap(this, i + 2, i + 5)
    swap(this, i + 3, i + 4)
  }
  return this
}

Buffer.prototype.toString = function toString () {
  var length = this.length
  if (length === 0) return ''
  if (arguments.length === 0) return utf8Slice(this, 0, length)
  return slowToString.apply(this, arguments)
}

Buffer.prototype.toLocaleString = Buffer.prototype.toString

Buffer.prototype.equals = function equals (b) {
  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
  if (this === b) return true
  return Buffer.compare(this, b) === 0
}

Buffer.prototype.inspect = function inspect () {
  var str = ''
  var max = exports.INSPECT_MAX_BYTES
  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()
  if (this.length > max) str += ' ... '
  return '<Buffer ' + str + '>'
}

Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {
  if (isInstance(target, Uint8Array)) {
    target = Buffer.from(target, target.offset, target.byteLength)
  }
  if (!Buffer.isBuffer(target)) {
    throw new TypeError(
      'The "target" argument must be one of type Buffer or Uint8Array. ' +
      'Received type ' + (typeof target)
    )
  }

  if (start === undefined) {
    start = 0
  }
  if (end === undefined) {
    end = target ? target.length : 0
  }
  if (thisStart === undefined) {
    thisStart = 0
  }
  if (thisEnd === undefined) {
    thisEnd = this.length
  }

  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
    throw new RangeError('out of range index')
  }

  if (thisStart >= thisEnd && start >= end) {
    return 0
  }
  if (thisStart >= thisEnd) {
    return -1
  }
  if (start >= end) {
    return 1
  }

  start >>>= 0
  end >>>= 0
  thisStart >>>= 0
  thisEnd >>>= 0

  if (this === target) return 0

  var x = thisEnd - thisStart
  var y = end - start
  var len = Math.min(x, y)

  var thisCopy = this.slice(thisStart, thisEnd)
  var targetCopy = target.slice(start, end)

  for (var i = 0; i < len; ++i) {
    if (thisCopy[i] !== targetCopy[i]) {
      x = thisCopy[i]
      y = targetCopy[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
//
// Arguments:
// - buffer - a Buffer to search
// - val - a string, Buffer, or number
// - byteOffset - an index into `buffer`; will be clamped to an int32
// - encoding - an optional encoding, relevant is val is a string
// - dir - true for indexOf, false for lastIndexOf
function bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {
  // Empty buffer means no match
  if (buffer.length === 0) return -1

  // Normalize byteOffset
  if (typeof byteOffset === 'string') {
    encoding = byteOffset
    byteOffset = 0
  } else if (byteOffset > 0x7fffffff) {
    byteOffset = 0x7fffffff
  } else if (byteOffset < -0x80000000) {
    byteOffset = -0x80000000
  }
  byteOffset = +byteOffset // Coerce to Number.
  if (numberIsNaN(byteOffset)) {
    // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
    byteOffset = dir ? 0 : (buffer.length - 1)
  }

  // Normalize byteOffset: negative offsets start from the end of the buffer
  if (byteOffset < 0) byteOffset = buffer.length + byteOffset
  if (byteOffset >= buffer.length) {
    if (dir) return -1
    else byteOffset = buffer.length - 1
  } else if (byteOffset < 0) {
    if (dir) byteOffset = 0
    else return -1
  }

  // Normalize val
  if (typeof val === 'string') {
    val = Buffer.from(val, encoding)
  }

  // Finally, search either indexOf (if dir is true) or lastIndexOf
  if (Buffer.isBuffer(val)) {
    // Special case: looking for empty string/buffer always fails
    if (val.length === 0) {
      return -1
    }
    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)
  } else if (typeof val === 'number') {
    val = val & 0xFF // Search for a byte value [0-255]
    if (typeof Uint8Array.prototype.indexOf === 'function') {
      if (dir) {
        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)
      } else {
        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)
      }
    }
    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)
  }

  throw new TypeError('val must be string, number or Buffer')
}

function arrayIndexOf (arr, val, byteOffset, encoding, dir) {
  var indexSize = 1
  var arrLength = arr.length
  var valLength = val.length

  if (encoding !== undefined) {
    encoding = String(encoding).toLowerCase()
    if (encoding === 'ucs2' || encoding === 'ucs-2' ||
        encoding === 'utf16le' || encoding === 'utf-16le') {
      if (arr.length < 2 || val.length < 2) {
        return -1
      }
      indexSize = 2
      arrLength /= 2
      valLength /= 2
      byteOffset /= 2
    }
  }

  function read (buf, i) {
    if (indexSize === 1) {
      return buf[i]
    } else {
      return buf.readUInt16BE(i * indexSize)
    }
  }

  var i
  if (dir) {
    var foundIndex = -1
    for (i = byteOffset; i < arrLength; i++) {
      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
        if (foundIndex === -1) foundIndex = i
        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize
      } else {
        if (foundIndex !== -1) i -= i - foundIndex
        foundIndex = -1
      }
    }
  } else {
    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength
    for (i = byteOffset; i >= 0; i--) {
      var found = true
      for (var j = 0; j < valLength; j++) {
        if (read(arr, i + j) !== read(val, j)) {
          found = false
          break
        }
      }
      if (found) return i
    }
  }

  return -1
}

Buffer.prototype.includes = function includes (val, byteOffset, encoding) {
  return this.indexOf(val, byteOffset, encoding) !== -1
}

Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)
}

Buffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)
}

function hexWrite (buf, string, offset, length) {
  offset = Number(offset) || 0
  var remaining = buf.length - offset
  if (!length) {
    length = remaining
  } else {
    length = Number(length)
    if (length > remaining) {
      length = remaining
    }
  }

  var strLen = string.length

  if (length > strLen / 2) {
    length = strLen / 2
  }
  for (var i = 0; i < length; ++i) {
    var parsed = parseInt(string.substr(i * 2, 2), 16)
    if (numberIsNaN(parsed)) return i
    buf[offset + i] = parsed
  }
  return i
}

function utf8Write (buf, string, offset, length) {
  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
}

function asciiWrite (buf, string, offset, length) {
  return blitBuffer(asciiToBytes(string), buf, offset, length)
}

function latin1Write (buf, string, offset, length) {
  return asciiWrite(buf, string, offset, length)
}

function base64Write (buf, string, offset, length) {
  return blitBuffer(base64ToBytes(string), buf, offset, length)
}

function ucs2Write (buf, string, offset, length) {
  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
}

Buffer.prototype.write = function write (string, offset, length, encoding) {
  // Buffer#write(string)
  if (offset === undefined) {
    encoding = 'utf8'
    length = this.length
    offset = 0
  // Buffer#write(string, encoding)
  } else if (length === undefined && typeof offset === 'string') {
    encoding = offset
    length = this.length
    offset = 0
  // Buffer#write(string, offset[, length][, encoding])
  } else if (isFinite(offset)) {
    offset = offset >>> 0
    if (isFinite(length)) {
      length = length >>> 0
      if (encoding === undefined) encoding = 'utf8'
    } else {
      encoding = length
      length = undefined
    }
  } else {
    throw new Error(
      'Buffer.write(string, encoding, offset[, length]) is no longer supported'
    )
  }

  var remaining = this.length - offset
  if (length === undefined || length > remaining) length = remaining

  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
    throw new RangeError('Attempt to write outside buffer bounds')
  }

  if (!encoding) encoding = 'utf8'

  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'hex':
        return hexWrite(this, string, offset, length)

      case 'utf8':
      case 'utf-8':
        return utf8Write(this, string, offset, length)

      case 'ascii':
        return asciiWrite(this, string, offset, length)

      case 'latin1':
      case 'binary':
        return latin1Write(this, string, offset, length)

      case 'base64':
        // Warning: maxLength not taken into account in base64Write
        return base64Write(this, string, offset, length)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return ucs2Write(this, string, offset, length)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}

Buffer.prototype.toJSON = function toJSON () {
  return {
    type: 'Buffer',
    data: Array.prototype.slice.call(this._arr || this, 0)
  }
}

function base64Slice (buf, start, end) {
  if (start === 0 && end === buf.length) {
    return base64.fromByteArray(buf)
  } else {
    return base64.fromByteArray(buf.slice(start, end))
  }
}

function utf8Slice (buf, start, end) {
  end = Math.min(buf.length, end)
  var res = []

  var i = start
  while (i < end) {
    var firstByte = buf[i]
    var codePoint = null
    var bytesPerSequence = (firstByte > 0xEF) ? 4
      : (firstByte > 0xDF) ? 3
        : (firstByte > 0xBF) ? 2
          : 1

    if (i + bytesPerSequence <= end) {
      var secondByte, thirdByte, fourthByte, tempCodePoint

      switch (bytesPerSequence) {
        case 1:
          if (firstByte < 0x80) {
            codePoint = firstByte
          }
          break
        case 2:
          secondByte = buf[i + 1]
          if ((secondByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
            if (tempCodePoint > 0x7F) {
              codePoint = tempCodePoint
            }
          }
          break
        case 3:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
              codePoint = tempCodePoint
            }
          }
          break
        case 4:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          fourthByte = buf[i + 3]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
              codePoint = tempCodePoint
            }
          }
      }
    }

    if (codePoint === null) {
      // we did not generate a valid codePoint so insert a
      // replacement char (U+FFFD) and advance only 1 byte
      codePoint = 0xFFFD
      bytesPerSequence = 1
    } else if (codePoint > 0xFFFF) {
      // encode to utf16 (surrogate pair dance)
      codePoint -= 0x10000
      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
      codePoint = 0xDC00 | codePoint & 0x3FF
    }

    res.push(codePoint)
    i += bytesPerSequence
  }

  return decodeCodePointsArray(res)
}

// Based on http://stackoverflow.com/a/22747272/680742, the browser with
// the lowest limit is Chrome, with 0x10000 args.
// We go 1 magnitude less, for safety
var MAX_ARGUMENTS_LENGTH = 0x1000

function decodeCodePointsArray (codePoints) {
  var len = codePoints.length
  if (len <= MAX_ARGUMENTS_LENGTH) {
    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
  }

  // Decode in chunks to avoid "call stack size exceeded".
  var res = ''
  var i = 0
  while (i < len) {
    res += String.fromCharCode.apply(
      String,
      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
    )
  }
  return res
}

function asciiSlice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i] & 0x7F)
  }
  return ret
}

function latin1Slice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i])
  }
  return ret
}

function hexSlice (buf, start, end) {
  var len = buf.length

  if (!start || start < 0) start = 0
  if (!end || end < 0 || end > len) end = len

  var out = ''
  for (var i = start; i < end; ++i) {
    out += toHex(buf[i])
  }
  return out
}

function utf16leSlice (buf, start, end) {
  var bytes = buf.slice(start, end)
  var res = ''
  for (var i = 0; i < bytes.length; i += 2) {
    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))
  }
  return res
}

Buffer.prototype.slice = function slice (start, end) {
  var len = this.length
  start = ~~start
  end = end === undefined ? len : ~~end

  if (start < 0) {
    start += len
    if (start < 0) start = 0
  } else if (start > len) {
    start = len
  }

  if (end < 0) {
    end += len
    if (end < 0) end = 0
  } else if (end > len) {
    end = len
  }

  if (end < start) end = start

  var newBuf = this.subarray(start, end)
  // Return an augmented `Uint8Array` instance
  newBuf.__proto__ = Buffer.prototype
  return newBuf
}

/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */
function checkOffset (offset, ext, length) {
  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
}

Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }

  return val
}

Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    checkOffset(offset, byteLength, this.length)
  }

  var val = this[offset + --byteLength]
  var mul = 1
  while (byteLength > 0 && (mul *= 0x100)) {
    val += this[offset + --byteLength] * mul
  }

  return val
}

Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 1, this.length)
  return this[offset]
}

Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  return this[offset] | (this[offset + 1] << 8)
}

Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  return (this[offset] << 8) | this[offset + 1]
}

Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return ((this[offset]) |
      (this[offset + 1] << 8) |
      (this[offset + 2] << 16)) +
      (this[offset + 3] * 0x1000000)
}

Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] * 0x1000000) +
    ((this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    this[offset + 3])
}

Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var i = byteLength
  var mul = 1
  var val = this[offset + --i]
  while (i > 0 && (mul *= 0x100)) {
    val += this[offset + --i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 1, this.length)
  if (!(this[offset] & 0x80)) return (this[offset])
  return ((0xff - this[offset] + 1) * -1)
}

Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset] | (this[offset + 1] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset + 1] | (this[offset] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset]) |
    (this[offset + 1] << 8) |
    (this[offset + 2] << 16) |
    (this[offset + 3] << 24)
}

Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] << 24) |
    (this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    (this[offset + 3])
}

Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, true, 23, 4)
}

Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, false, 23, 4)
}

Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, true, 52, 8)
}

Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, false, 52, 8)
}

function checkInt (buf, value, offset, ext, max, min) {
  if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance')
  if (value > max || value < min) throw new RangeError('"value" argument is out of bounds')
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
}

Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var mul = 1
  var i = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var i = byteLength - 1
  var mul = 1
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  return offset + 2
}

Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  this[offset] = (value >>> 8)
  this[offset + 1] = (value & 0xff)
  return offset + 2
}

Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  this[offset + 3] = (value >>> 24)
  this[offset + 2] = (value >>> 16)
  this[offset + 1] = (value >>> 8)
  this[offset] = (value & 0xff)
  return offset + 4
}

Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  this[offset] = (value >>> 24)
  this[offset + 1] = (value >>> 16)
  this[offset + 2] = (value >>> 8)
  this[offset + 3] = (value & 0xff)
  return offset + 4
}

Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    var limit = Math.pow(2, (8 * byteLength) - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = 0
  var mul = 1
  var sub = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    var limit = Math.pow(2, (8 * byteLength) - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = byteLength - 1
  var mul = 1
  var sub = 0
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
  if (value < 0) value = 0xff + value + 1
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  return offset + 2
}

Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  this[offset] = (value >>> 8)
  this[offset + 1] = (value & 0xff)
  return offset + 2
}

Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  this[offset + 2] = (value >>> 16)
  this[offset + 3] = (value >>> 24)
  return offset + 4
}

Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (value < 0) value = 0xffffffff + value + 1
  this[offset] = (value >>> 24)
  this[offset + 1] = (value >>> 16)
  this[offset + 2] = (value >>> 8)
  this[offset + 3] = (value & 0xff)
  return offset + 4
}

function checkIEEE754 (buf, value, offset, ext, max, min) {
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
  if (offset < 0) throw new RangeError('Index out of range')
}

function writeFloat (buf, value, offset, littleEndian, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
  }
  ieee754.write(buf, value, offset, littleEndian, 23, 4)
  return offset + 4
}

Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
  return writeFloat(this, value, offset, true, noAssert)
}

Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
  return writeFloat(this, value, offset, false, noAssert)
}

function writeDouble (buf, value, offset, littleEndian, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
  }
  ieee754.write(buf, value, offset, littleEndian, 52, 8)
  return offset + 8
}

Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
  return writeDouble(this, value, offset, true, noAssert)
}

Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
  return writeDouble(this, value, offset, false, noAssert)
}

// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Buffer.prototype.copy = function copy (target, targetStart, start, end) {
  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')
  if (!start) start = 0
  if (!end && end !== 0) end = this.length
  if (targetStart >= target.length) targetStart = target.length
  if (!targetStart) targetStart = 0
  if (end > 0 && end < start) end = start

  // Copy 0 bytes; we're done
  if (end === start) return 0
  if (target.length === 0 || this.length === 0) return 0

  // Fatal error conditions
  if (targetStart < 0) {
    throw new RangeError('targetStart out of bounds')
  }
  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')
  if (end < 0) throw new RangeError('sourceEnd out of bounds')

  // Are we oob?
  if (end > this.length) end = this.length
  if (target.length - targetStart < end - start) {
    end = target.length - targetStart + start
  }

  var len = end - start

  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {
    // Use built-in when available, missing from IE11
    this.copyWithin(targetStart, start, end)
  } else if (this === target && start < targetStart && targetStart < end) {
    // descending copy from end
    for (var i = len - 1; i >= 0; --i) {
      target[i + targetStart] = this[i + start]
    }
  } else {
    Uint8Array.prototype.set.call(
      target,
      this.subarray(start, end),
      targetStart
    )
  }

  return len
}

// Usage:
//    buffer.fill(number[, offset[, end]])
//    buffer.fill(buffer[, offset[, end]])
//    buffer.fill(string[, offset[, end]][, encoding])
Buffer.prototype.fill = function fill (val, start, end, encoding) {
  // Handle string cases:
  if (typeof val === 'string') {
    if (typeof start === 'string') {
      encoding = start
      start = 0
      end = this.length
    } else if (typeof end === 'string') {
      encoding = end
      end = this.length
    }
    if (encoding !== undefined && typeof encoding !== 'string') {
      throw new TypeError('encoding must be a string')
    }
    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
      throw new TypeError('Unknown encoding: ' + encoding)
    }
    if (val.length === 1) {
      var code = val.charCodeAt(0)
      if ((encoding === 'utf8' && code < 128) ||
          encoding === 'latin1') {
        // Fast path: If `val` fits into a single byte, use that numeric value.
        val = code
      }
    }
  } else if (typeof val === 'number') {
    val = val & 255
  }

  // Invalid ranges are not set to a default, so can range check early.
  if (start < 0 || this.length < start || this.length < end) {
    throw new RangeError('Out of range index')
  }

  if (end <= start) {
    return this
  }

  start = start >>> 0
  end = end === undefined ? this.length : end >>> 0

  if (!val) val = 0

  var i
  if (typeof val === 'number') {
    for (i = start; i < end; ++i) {
      this[i] = val
    }
  } else {
    var bytes = Buffer.isBuffer(val)
      ? val
      : Buffer.from(val, encoding)
    var len = bytes.length
    if (len === 0) {
      throw new TypeError('The value "' + val +
        '" is invalid for argument "value"')
    }
    for (i = 0; i < end - start; ++i) {
      this[i + start] = bytes[i % len]
    }
  }

  return this
}

// HELPER FUNCTIONS
// ================

var INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g

function base64clean (str) {
  // Node takes equal signs as end of the Base64 encoding
  str = str.split('=')[0]
  // Node strips out invalid characters like \n and \t from the string, base64-js does not
  str = str.trim().replace(INVALID_BASE64_RE, '')
  // Node converts strings with length < 2 to ''
  if (str.length < 2) return ''
  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
  while (str.length % 4 !== 0) {
    str = str + '='
  }
  return str
}

function toHex (n) {
  if (n < 16) return '0' + n.toString(16)
  return n.toString(16)
}

function utf8ToBytes (string, units) {
  units = units || Infinity
  var codePoint
  var length = string.length
  var leadSurrogate = null
  var bytes = []

  for (var i = 0; i < length; ++i) {
    codePoint = string.charCodeAt(i)

    // is surrogate component
    if (codePoint > 0xD7FF && codePoint < 0xE000) {
      // last char was a lead
      if (!leadSurrogate) {
        // no lead yet
        if (codePoint > 0xDBFF) {
          // unexpected trail
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        } else if (i + 1 === length) {
          // unpaired lead
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        }

        // valid lead
        leadSurrogate = codePoint

        continue
      }

      // 2 leads in a row
      if (codePoint < 0xDC00) {
        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
        leadSurrogate = codePoint
        continue
      }

      // valid surrogate pair
      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
    } else if (leadSurrogate) {
      // valid bmp char, but last char was a lead
      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
    }

    leadSurrogate = null

    // encode utf8
    if (codePoint < 0x80) {
      if ((units -= 1) < 0) break
      bytes.push(codePoint)
    } else if (codePoint < 0x800) {
      if ((units -= 2) < 0) break
      bytes.push(
        codePoint >> 0x6 | 0xC0,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x10000) {
      if ((units -= 3) < 0) break
      bytes.push(
        codePoint >> 0xC | 0xE0,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x110000) {
      if ((units -= 4) < 0) break
      bytes.push(
        codePoint >> 0x12 | 0xF0,
        codePoint >> 0xC & 0x3F | 0x80,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else {
      throw new Error('Invalid code point')
    }
  }

  return bytes
}

function asciiToBytes (str) {
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    // Node's code seems to be doing this and not & 0x7F..
    byteArray.push(str.charCodeAt(i) & 0xFF)
  }
  return byteArray
}

function utf16leToBytes (str, units) {
  var c, hi, lo
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    if ((units -= 2) < 0) break

    c = str.charCodeAt(i)
    hi = c >> 8
    lo = c % 256
    byteArray.push(lo)
    byteArray.push(hi)
  }

  return byteArray
}

function base64ToBytes (str) {
  return base64.toByteArray(base64clean(str))
}

function blitBuffer (src, dst, offset, length) {
  for (var i = 0; i < length; ++i) {
    if ((i + offset >= dst.length) || (i >= src.length)) break
    dst[i + offset] = src[i]
  }
  return i
}

// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass
// the `instanceof` check but they should be treated as of that type.
// See: https://github.com/feross/buffer/issues/166
function isInstance (obj, type) {
  return obj instanceof type ||
    (obj != null && obj.constructor != null && obj.constructor.name != null &&
      obj.constructor.name === type.name)
}
function numberIsNaN (obj) {
  // For IE11 support
  return obj !== obj // eslint-disable-line no-self-compare
}

}).call(this)}).call(this,require("buffer").Buffer)
},{"base64-js":94,"buffer":97,"ieee754":200}],98:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

'use strict';

var R = typeof Reflect === 'object' ? Reflect : null
var ReflectApply = R && typeof R.apply === 'function'
  ? R.apply
  : function ReflectApply(target, receiver, args) {
    return Function.prototype.apply.call(target, receiver, args);
  }

var ReflectOwnKeys
if (R && typeof R.ownKeys === 'function') {
  ReflectOwnKeys = R.ownKeys
} else if (Object.getOwnPropertySymbols) {
  ReflectOwnKeys = function ReflectOwnKeys(target) {
    return Object.getOwnPropertyNames(target)
      .concat(Object.getOwnPropertySymbols(target));
  };
} else {
  ReflectOwnKeys = function ReflectOwnKeys(target) {
    return Object.getOwnPropertyNames(target);
  };
}

function ProcessEmitWarning(warning) {
  if (console && console.warn) console.warn(warning);
}

var NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {
  return value !== value;
}

function EventEmitter() {
  EventEmitter.init.call(this);
}
module.exports = EventEmitter;
module.exports.once = once;

// Backwards-compat with node 0.10.x
EventEmitter.EventEmitter = EventEmitter;

EventEmitter.prototype._events = undefined;
EventEmitter.prototype._eventsCount = 0;
EventEmitter.prototype._maxListeners = undefined;

// By default EventEmitters will print a warning if more than 10 listeners are
// added to it. This is a useful default which helps finding memory leaks.
var defaultMaxListeners = 10;

function checkListener(listener) {
  if (typeof listener !== 'function') {
    throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof listener);
  }
}

Object.defineProperty(EventEmitter, 'defaultMaxListeners', {
  enumerable: true,
  get: function() {
    return defaultMaxListeners;
  },
  set: function(arg) {
    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {
      throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + arg + '.');
    }
    defaultMaxListeners = arg;
  }
});

EventEmitter.init = function() {

  if (this._events === undefined ||
      this._events === Object.getPrototypeOf(this)._events) {
    this._events = Object.create(null);
    this._eventsCount = 0;
  }

  this._maxListeners = this._maxListeners || undefined;
};

// Obviously not all Emitters should be limited to 10. This function allows
// that to be increased. Set to zero for unlimited.
EventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {
  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {
    throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + n + '.');
  }
  this._maxListeners = n;
  return this;
};

function _getMaxListeners(that) {
  if (that._maxListeners === undefined)
    return EventEmitter.defaultMaxListeners;
  return that._maxListeners;
}

EventEmitter.prototype.getMaxListeners = function getMaxListeners() {
  return _getMaxListeners(this);
};

EventEmitter.prototype.emit = function emit(type) {
  var args = [];
  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);
  var doError = (type === 'error');

  var events = this._events;
  if (events !== undefined)
    doError = (doError && events.error === undefined);
  else if (!doError)
    return false;

  // If there is no 'error' event listener then throw.
  if (doError) {
    var er;
    if (args.length > 0)
      er = args[0];
    if (er instanceof Error) {
      // Note: The comments on the `throw` lines are intentional, they show
      // up in Node's output if this results in an unhandled exception.
      throw er; // Unhandled 'error' event
    }
    // At least give some kind of context to the user
    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));
    err.context = er;
    throw err; // Unhandled 'error' event
  }

  var handler = events[type];

  if (handler === undefined)
    return false;

  if (typeof handler === 'function') {
    ReflectApply(handler, this, args);
  } else {
    var len = handler.length;
    var listeners = arrayClone(handler, len);
    for (var i = 0; i < len; ++i)
      ReflectApply(listeners[i], this, args);
  }

  return true;
};

function _addListener(target, type, listener, prepend) {
  var m;
  var events;
  var existing;

  checkListener(listener);

  events = target._events;
  if (events === undefined) {
    events = target._events = Object.create(null);
    target._eventsCount = 0;
  } else {
    // To avoid recursion in the case that type === "newListener"! Before
    // adding it to the listeners, first emit "newListener".
    if (events.newListener !== undefined) {
      target.emit('newListener', type,
                  listener.listener ? listener.listener : listener);

      // Re-assign `events` because a newListener handler could have caused the
      // this._events to be assigned to a new object
      events = target._events;
    }
    existing = events[type];
  }

  if (existing === undefined) {
    // Optimize the case of one listener. Don't need the extra array object.
    existing = events[type] = listener;
    ++target._eventsCount;
  } else {
    if (typeof existing === 'function') {
      // Adding the second element, need to change to array.
      existing = events[type] =
        prepend ? [listener, existing] : [existing, listener];
      // If we've already got an array, just append.
    } else if (prepend) {
      existing.unshift(listener);
    } else {
      existing.push(listener);
    }

    // Check for listener leak
    m = _getMaxListeners(target);
    if (m > 0 && existing.length > m && !existing.warned) {
      existing.warned = true;
      // No error code for this since it is a Warning
      // eslint-disable-next-line no-restricted-syntax
      var w = new Error('Possible EventEmitter memory leak detected. ' +
                          existing.length + ' ' + String(type) + ' listeners ' +
                          'added. Use emitter.setMaxListeners() to ' +
                          'increase limit');
      w.name = 'MaxListenersExceededWarning';
      w.emitter = target;
      w.type = type;
      w.count = existing.length;
      ProcessEmitWarning(w);
    }
  }

  return target;
}

EventEmitter.prototype.addListener = function addListener(type, listener) {
  return _addListener(this, type, listener, false);
};

EventEmitter.prototype.on = EventEmitter.prototype.addListener;

EventEmitter.prototype.prependListener =
    function prependListener(type, listener) {
      return _addListener(this, type, listener, true);
    };

function onceWrapper() {
  if (!this.fired) {
    this.target.removeListener(this.type, this.wrapFn);
    this.fired = true;
    if (arguments.length === 0)
      return this.listener.call(this.target);
    return this.listener.apply(this.target, arguments);
  }
}

function _onceWrap(target, type, listener) {
  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };
  var wrapped = onceWrapper.bind(state);
  wrapped.listener = listener;
  state.wrapFn = wrapped;
  return wrapped;
}

EventEmitter.prototype.once = function once(type, listener) {
  checkListener(listener);
  this.on(type, _onceWrap(this, type, listener));
  return this;
};

EventEmitter.prototype.prependOnceListener =
    function prependOnceListener(type, listener) {
      checkListener(listener);
      this.prependListener(type, _onceWrap(this, type, listener));
      return this;
    };

// Emits a 'removeListener' event if and only if the listener was removed.
EventEmitter.prototype.removeListener =
    function removeListener(type, listener) {
      var list, events, position, i, originalListener;

      checkListener(listener);

      events = this._events;
      if (events === undefined)
        return this;

      list = events[type];
      if (list === undefined)
        return this;

      if (list === listener || list.listener === listener) {
        if (--this._eventsCount === 0)
          this._events = Object.create(null);
        else {
          delete events[type];
          if (events.removeListener)
            this.emit('removeListener', type, list.listener || listener);
        }
      } else if (typeof list !== 'function') {
        position = -1;

        for (i = list.length - 1; i >= 0; i--) {
          if (list[i] === listener || list[i].listener === listener) {
            originalListener = list[i].listener;
            position = i;
            break;
          }
        }

        if (position < 0)
          return this;

        if (position === 0)
          list.shift();
        else {
          spliceOne(list, position);
        }

        if (list.length === 1)
          events[type] = list[0];

        if (events.removeListener !== undefined)
          this.emit('removeListener', type, originalListener || listener);
      }

      return this;
    };

EventEmitter.prototype.off = EventEmitter.prototype.removeListener;

EventEmitter.prototype.removeAllListeners =
    function removeAllListeners(type) {
      var listeners, events, i;

      events = this._events;
      if (events === undefined)
        return this;

      // not listening for removeListener, no need to emit
      if (events.removeListener === undefined) {
        if (arguments.length === 0) {
          this._events = Object.create(null);
          this._eventsCount = 0;
        } else if (events[type] !== undefined) {
          if (--this._eventsCount === 0)
            this._events = Object.create(null);
          else
            delete events[type];
        }
        return this;
      }

      // emit removeListener for all listeners on all events
      if (arguments.length === 0) {
        var keys = Object.keys(events);
        var key;
        for (i = 0; i < keys.length; ++i) {
          key = keys[i];
          if (key === 'removeListener') continue;
          this.removeAllListeners(key);
        }
        this.removeAllListeners('removeListener');
        this._events = Object.create(null);
        this._eventsCount = 0;
        return this;
      }

      listeners = events[type];

      if (typeof listeners === 'function') {
        this.removeListener(type, listeners);
      } else if (listeners !== undefined) {
        // LIFO order
        for (i = listeners.length - 1; i >= 0; i--) {
          this.removeListener(type, listeners[i]);
        }
      }

      return this;
    };

function _listeners(target, type, unwrap) {
  var events = target._events;

  if (events === undefined)
    return [];

  var evlistener = events[type];
  if (evlistener === undefined)
    return [];

  if (typeof evlistener === 'function')
    return unwrap ? [evlistener.listener || evlistener] : [evlistener];

  return unwrap ?
    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);
}

EventEmitter.prototype.listeners = function listeners(type) {
  return _listeners(this, type, true);
};

EventEmitter.prototype.rawListeners = function rawListeners(type) {
  return _listeners(this, type, false);
};

EventEmitter.listenerCount = function(emitter, type) {
  if (typeof emitter.listenerCount === 'function') {
    return emitter.listenerCount(type);
  } else {
    return listenerCount.call(emitter, type);
  }
};

EventEmitter.prototype.listenerCount = listenerCount;
function listenerCount(type) {
  var events = this._events;

  if (events !== undefined) {
    var evlistener = events[type];

    if (typeof evlistener === 'function') {
      return 1;
    } else if (evlistener !== undefined) {
      return evlistener.length;
    }
  }

  return 0;
}

EventEmitter.prototype.eventNames = function eventNames() {
  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];
};

function arrayClone(arr, n) {
  var copy = new Array(n);
  for (var i = 0; i < n; ++i)
    copy[i] = arr[i];
  return copy;
}

function spliceOne(list, index) {
  for (; index + 1 < list.length; index++)
    list[index] = list[index + 1];
  list.pop();
}

function unwrapListeners(arr) {
  var ret = new Array(arr.length);
  for (var i = 0; i < ret.length; ++i) {
    ret[i] = arr[i].listener || arr[i];
  }
  return ret;
}

function once(emitter, name) {
  return new Promise(function (resolve, reject) {
    function errorListener(err) {
      emitter.removeListener(name, resolver);
      reject(err);
    }

    function resolver() {
      if (typeof emitter.removeListener === 'function') {
        emitter.removeListener('error', errorListener);
      }
      resolve([].slice.call(arguments));
    };

    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });
    if (name !== 'error') {
      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });
    }
  });
}

function addErrorHandlerIfEventEmitter(emitter, handler, flags) {
  if (typeof emitter.on === 'function') {
    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);
  }
}

function eventTargetAgnosticAddListener(emitter, name, listener, flags) {
  if (typeof emitter.on === 'function') {
    if (flags.once) {
      emitter.once(name, listener);
    } else {
      emitter.on(name, listener);
    }
  } else if (typeof emitter.addEventListener === 'function') {
    // EventTarget does not have `error` event semantics like Node
    // EventEmitters, we do not listen for `error` events here.
    emitter.addEventListener(name, function wrapListener(arg) {
      // IE does not have builtin `{ once: true }` support so we
      // have to do it manually.
      if (flags.once) {
        emitter.removeEventListener(name, wrapListener);
      }
      listener(arg);
    });
  } else {
    throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type ' + typeof emitter);
  }
}

},{}],99:[function(require,module,exports){
(function (process){(function (){
// 'path' module extracted from Node.js v8.11.1 (only the posix part)
// transplited with Babel

// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

'use strict';

function assertPath(path) {
  if (typeof path !== 'string') {
    throw new TypeError('Path must be a string. Received ' + JSON.stringify(path));
  }
}

// Resolves . and .. elements in a path with directory names
function normalizeStringPosix(path, allowAboveRoot) {
  var res = '';
  var lastSegmentLength = 0;
  var lastSlash = -1;
  var dots = 0;
  var code;
  for (var i = 0; i <= path.length; ++i) {
    if (i < path.length)
      code = path.charCodeAt(i);
    else if (code === 47 /*/*/)
      break;
    else
      code = 47 /*/*/;
    if (code === 47 /*/*/) {
      if (lastSlash === i - 1 || dots === 1) {
        // NOOP
      } else if (lastSlash !== i - 1 && dots === 2) {
        if (res.length < 2 || lastSegmentLength !== 2 || res.charCodeAt(res.length - 1) !== 46 /*.*/ || res.charCodeAt(res.length - 2) !== 46 /*.*/) {
          if (res.length > 2) {
            var lastSlashIndex = res.lastIndexOf('/');
            if (lastSlashIndex !== res.length - 1) {
              if (lastSlashIndex === -1) {
                res = '';
                lastSegmentLength = 0;
              } else {
                res = res.slice(0, lastSlashIndex);
                lastSegmentLength = res.length - 1 - res.lastIndexOf('/');
              }
              lastSlash = i;
              dots = 0;
              continue;
            }
          } else if (res.length === 2 || res.length === 1) {
            res = '';
            lastSegmentLength = 0;
            lastSlash = i;
            dots = 0;
            continue;
          }
        }
        if (allowAboveRoot) {
          if (res.length > 0)
            res += '/..';
          else
            res = '..';
          lastSegmentLength = 2;
        }
      } else {
        if (res.length > 0)
          res += '/' + path.slice(lastSlash + 1, i);
        else
          res = path.slice(lastSlash + 1, i);
        lastSegmentLength = i - lastSlash - 1;
      }
      lastSlash = i;
      dots = 0;
    } else if (code === 46 /*.*/ && dots !== -1) {
      ++dots;
    } else {
      dots = -1;
    }
  }
  return res;
}

function _format(sep, pathObject) {
  var dir = pathObject.dir || pathObject.root;
  var base = pathObject.base || (pathObject.name || '') + (pathObject.ext || '');
  if (!dir) {
    return base;
  }
  if (dir === pathObject.root) {
    return dir + base;
  }
  return dir + sep + base;
}

var posix = {
  // path.resolve([from ...], to)
  resolve: function resolve() {
    var resolvedPath = '';
    var resolvedAbsolute = false;
    var cwd;

    for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
      var path;
      if (i >= 0)
        path = arguments[i];
      else {
        if (cwd === undefined)
          cwd = process.cwd();
        path = cwd;
      }

      assertPath(path);

      // Skip empty entries
      if (path.length === 0) {
        continue;
      }

      resolvedPath = path + '/' + resolvedPath;
      resolvedAbsolute = path.charCodeAt(0) === 47 /*/*/;
    }

    // At this point the path should be resolved to a full absolute path, but
    // handle relative paths to be safe (might happen when process.cwd() fails)

    // Normalize the path
    resolvedPath = normalizeStringPosix(resolvedPath, !resolvedAbsolute);

    if (resolvedAbsolute) {
      if (resolvedPath.length > 0)
        return '/' + resolvedPath;
      else
        return '/';
    } else if (resolvedPath.length > 0) {
      return resolvedPath;
    } else {
      return '.';
    }
  },

  normalize: function normalize(path) {
    assertPath(path);

    if (path.length === 0) return '.';

    var isAbsolute = path.charCodeAt(0) === 47 /*/*/;
    var trailingSeparator = path.charCodeAt(path.length - 1) === 47 /*/*/;

    // Normalize the path
    path = normalizeStringPosix(path, !isAbsolute);

    if (path.length === 0 && !isAbsolute) path = '.';
    if (path.length > 0 && trailingSeparator) path += '/';

    if (isAbsolute) return '/' + path;
    return path;
  },

  isAbsolute: function isAbsolute(path) {
    assertPath(path);
    return path.length > 0 && path.charCodeAt(0) === 47 /*/*/;
  },

  join: function join() {
    if (arguments.length === 0)
      return '.';
    var joined;
    for (var i = 0; i < arguments.length; ++i) {
      var arg = arguments[i];
      assertPath(arg);
      if (arg.length > 0) {
        if (joined === undefined)
          joined = arg;
        else
          joined += '/' + arg;
      }
    }
    if (joined === undefined)
      return '.';
    return posix.normalize(joined);
  },

  relative: function relative(from, to) {
    assertPath(from);
    assertPath(to);

    if (from === to) return '';

    from = posix.resolve(from);
    to = posix.resolve(to);

    if (from === to) return '';

    // Trim any leading backslashes
    var fromStart = 1;
    for (; fromStart < from.length; ++fromStart) {
      if (from.charCodeAt(fromStart) !== 47 /*/*/)
        break;
    }
    var fromEnd = from.length;
    var fromLen = fromEnd - fromStart;

    // Trim any leading backslashes
    var toStart = 1;
    for (; toStart < to.length; ++toStart) {
      if (to.charCodeAt(toStart) !== 47 /*/*/)
        break;
    }
    var toEnd = to.length;
    var toLen = toEnd - toStart;

    // Compare paths to find the longest common path from root
    var length = fromLen < toLen ? fromLen : toLen;
    var lastCommonSep = -1;
    var i = 0;
    for (; i <= length; ++i) {
      if (i === length) {
        if (toLen > length) {
          if (to.charCodeAt(toStart + i) === 47 /*/*/) {
            // We get here if `from` is the exact base path for `to`.
            // For example: from='/foo/bar'; to='/foo/bar/baz'
            return to.slice(toStart + i + 1);
          } else if (i === 0) {
            // We get here if `from` is the root
            // For example: from='/'; to='/foo'
            return to.slice(toStart + i);
          }
        } else if (fromLen > length) {
          if (from.charCodeAt(fromStart + i) === 47 /*/*/) {
            // We get here if `to` is the exact base path for `from`.
            // For example: from='/foo/bar/baz'; to='/foo/bar'
            lastCommonSep = i;
          } else if (i === 0) {
            // We get here if `to` is the root.
            // For example: from='/foo'; to='/'
            lastCommonSep = 0;
          }
        }
        break;
      }
      var fromCode = from.charCodeAt(fromStart + i);
      var toCode = to.charCodeAt(toStart + i);
      if (fromCode !== toCode)
        break;
      else if (fromCode === 47 /*/*/)
        lastCommonSep = i;
    }

    var out = '';
    // Generate the relative path based on the path difference between `to`
    // and `from`
    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {
      if (i === fromEnd || from.charCodeAt(i) === 47 /*/*/) {
        if (out.length === 0)
          out += '..';
        else
          out += '/..';
      }
    }

    // Lastly, append the rest of the destination (`to`) path that comes after
    // the common path parts
    if (out.length > 0)
      return out + to.slice(toStart + lastCommonSep);
    else {
      toStart += lastCommonSep;
      if (to.charCodeAt(toStart) === 47 /*/*/)
        ++toStart;
      return to.slice(toStart);
    }
  },

  _makeLong: function _makeLong(path) {
    return path;
  },

  dirname: function dirname(path) {
    assertPath(path);
    if (path.length === 0) return '.';
    var code = path.charCodeAt(0);
    var hasRoot = code === 47 /*/*/;
    var end = -1;
    var matchedSlash = true;
    for (var i = path.length - 1; i >= 1; --i) {
      code = path.charCodeAt(i);
      if (code === 47 /*/*/) {
          if (!matchedSlash) {
            end = i;
            break;
          }
        } else {
        // We saw the first non-path separator
        matchedSlash = false;
      }
    }

    if (end === -1) return hasRoot ? '/' : '.';
    if (hasRoot && end === 1) return '//';
    return path.slice(0, end);
  },

  basename: function basename(path, ext) {
    if (ext !== undefined && typeof ext !== 'string') throw new TypeError('"ext" argument must be a string');
    assertPath(path);

    var start = 0;
    var end = -1;
    var matchedSlash = true;
    var i;

    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {
      if (ext.length === path.length && ext === path) return '';
      var extIdx = ext.length - 1;
      var firstNonSlashEnd = -1;
      for (i = path.length - 1; i >= 0; --i) {
        var code = path.charCodeAt(i);
        if (code === 47 /*/*/) {
            // If we reached a path separator that was not part of a set of path
            // separators at the end of the string, stop now
            if (!matchedSlash) {
              start = i + 1;
              break;
            }
          } else {
          if (firstNonSlashEnd === -1) {
            // We saw the first non-path separator, remember this index in case
            // we need it if the extension ends up not matching
            matchedSlash = false;
            firstNonSlashEnd = i + 1;
          }
          if (extIdx >= 0) {
            // Try to match the explicit extension
            if (code === ext.charCodeAt(extIdx)) {
              if (--extIdx === -1) {
                // We matched the extension, so mark this as the end of our path
                // component
                end = i;
              }
            } else {
              // Extension does not match, so our result is the entire path
              // component
              extIdx = -1;
              end = firstNonSlashEnd;
            }
          }
        }
      }

      if (start === end) end = firstNonSlashEnd;else if (end === -1) end = path.length;
      return path.slice(start, end);
    } else {
      for (i = path.length - 1; i >= 0; --i) {
        if (path.charCodeAt(i) === 47 /*/*/) {
            // If we reached a path separator that was not part of a set of path
            // separators at the end of the string, stop now
            if (!matchedSlash) {
              start = i + 1;
              break;
            }
          } else if (end === -1) {
          // We saw the first non-path separator, mark this as the end of our
          // path component
          matchedSlash = false;
          end = i + 1;
        }
      }

      if (end === -1) return '';
      return path.slice(start, end);
    }
  },

  extname: function extname(path) {
    assertPath(path);
    var startDot = -1;
    var startPart = 0;
    var end = -1;
    var matchedSlash = true;
    // Track the state of characters (if any) we see before our first dot and
    // after any path separator we find
    var preDotState = 0;
    for (var i = path.length - 1; i >= 0; --i) {
      var code = path.charCodeAt(i);
      if (code === 47 /*/*/) {
          // If we reached a path separator that was not part of a set of path
          // separators at the end of the string, stop now
          if (!matchedSlash) {
            startPart = i + 1;
            break;
          }
          continue;
        }
      if (end === -1) {
        // We saw the first non-path separator, mark this as the end of our
        // extension
        matchedSlash = false;
        end = i + 1;
      }
      if (code === 46 /*.*/) {
          // If this is our first dot, mark it as the start of our extension
          if (startDot === -1)
            startDot = i;
          else if (preDotState !== 1)
            preDotState = 1;
      } else if (startDot !== -1) {
        // We saw a non-dot and non-path separator before our dot, so we should
        // have a good chance at having a non-empty extension
        preDotState = -1;
      }
    }

    if (startDot === -1 || end === -1 ||
        // We saw a non-dot character immediately before the dot
        preDotState === 0 ||
        // The (right-most) trimmed path component is exactly '..'
        preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {
      return '';
    }
    return path.slice(startDot, end);
  },

  format: function format(pathObject) {
    if (pathObject === null || typeof pathObject !== 'object') {
      throw new TypeError('The "pathObject" argument must be of type Object. Received type ' + typeof pathObject);
    }
    return _format('/', pathObject);
  },

  parse: function parse(path) {
    assertPath(path);

    var ret = { root: '', dir: '', base: '', ext: '', name: '' };
    if (path.length === 0) return ret;
    var code = path.charCodeAt(0);
    var isAbsolute = code === 47 /*/*/;
    var start;
    if (isAbsolute) {
      ret.root = '/';
      start = 1;
    } else {
      start = 0;
    }
    var startDot = -1;
    var startPart = 0;
    var end = -1;
    var matchedSlash = true;
    var i = path.length - 1;

    // Track the state of characters (if any) we see before our first dot and
    // after any path separator we find
    var preDotState = 0;

    // Get non-dir info
    for (; i >= start; --i) {
      code = path.charCodeAt(i);
      if (code === 47 /*/*/) {
          // If we reached a path separator that was not part of a set of path
          // separators at the end of the string, stop now
          if (!matchedSlash) {
            startPart = i + 1;
            break;
          }
          continue;
        }
      if (end === -1) {
        // We saw the first non-path separator, mark this as the end of our
        // extension
        matchedSlash = false;
        end = i + 1;
      }
      if (code === 46 /*.*/) {
          // If this is our first dot, mark it as the start of our extension
          if (startDot === -1) startDot = i;else if (preDotState !== 1) preDotState = 1;
        } else if (startDot !== -1) {
        // We saw a non-dot and non-path separator before our dot, so we should
        // have a good chance at having a non-empty extension
        preDotState = -1;
      }
    }

    if (startDot === -1 || end === -1 ||
    // We saw a non-dot character immediately before the dot
    preDotState === 0 ||
    // The (right-most) trimmed path component is exactly '..'
    preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {
      if (end !== -1) {
        if (startPart === 0 && isAbsolute) ret.base = ret.name = path.slice(1, end);else ret.base = ret.name = path.slice(startPart, end);
      }
    } else {
      if (startPart === 0 && isAbsolute) {
        ret.name = path.slice(1, startDot);
        ret.base = path.slice(1, end);
      } else {
        ret.name = path.slice(startPart, startDot);
        ret.base = path.slice(startPart, end);
      }
      ret.ext = path.slice(startDot, end);
    }

    if (startPart > 0) ret.dir = path.slice(0, startPart - 1);else if (isAbsolute) ret.dir = '/';

    return ret;
  },

  sep: '/',
  delimiter: ':',
  win32: null,
  posix: null
};

posix.posix = posix;

module.exports = posix;

}).call(this)}).call(this,require('_process'))
},{"_process":207}],100:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

module.exports = Stream;

var EE = require('events').EventEmitter;
var inherits = require('inherits');

inherits(Stream, EE);
Stream.Readable = require('readable-stream/lib/_stream_readable.js');
Stream.Writable = require('readable-stream/lib/_stream_writable.js');
Stream.Duplex = require('readable-stream/lib/_stream_duplex.js');
Stream.Transform = require('readable-stream/lib/_stream_transform.js');
Stream.PassThrough = require('readable-stream/lib/_stream_passthrough.js');
Stream.finished = require('readable-stream/lib/internal/streams/end-of-stream.js')
Stream.pipeline = require('readable-stream/lib/internal/streams/pipeline.js')

// Backwards-compat with node 0.4.x
Stream.Stream = Stream;



// old-style streams.  Note that the pipe method (the only relevant
// part of this class) is overridden in the Readable class.

function Stream() {
  EE.call(this);
}

Stream.prototype.pipe = function(dest, options) {
  var source = this;

  function ondata(chunk) {
    if (dest.writable) {
      if (false === dest.write(chunk) && source.pause) {
        source.pause();
      }
    }
  }

  source.on('data', ondata);

  function ondrain() {
    if (source.readable && source.resume) {
      source.resume();
    }
  }

  dest.on('drain', ondrain);

  // If the 'end' option is not supplied, dest.end() will be called when
  // source gets the 'end' or 'close' events.  Only dest.end() once.
  if (!dest._isStdio && (!options || options.end !== false)) {
    source.on('end', onend);
    source.on('close', onclose);
  }

  var didOnEnd = false;
  function onend() {
    if (didOnEnd) return;
    didOnEnd = true;

    dest.end();
  }


  function onclose() {
    if (didOnEnd) return;
    didOnEnd = true;

    if (typeof dest.destroy === 'function') dest.destroy();
  }

  // don't leave dangling pipes when there are errors.
  function onerror(er) {
    cleanup();
    if (EE.listenerCount(this, 'error') === 0) {
      throw er; // Unhandled stream error in pipe.
    }
  }

  source.on('error', onerror);
  dest.on('error', onerror);

  // remove all the event listeners that were added.
  function cleanup() {
    source.removeListener('data', ondata);
    dest.removeListener('drain', ondrain);

    source.removeListener('end', onend);
    source.removeListener('close', onclose);

    source.removeListener('error', onerror);
    dest.removeListener('error', onerror);

    source.removeListener('end', cleanup);
    source.removeListener('close', cleanup);

    dest.removeListener('close', cleanup);
  }

  source.on('end', cleanup);
  source.on('close', cleanup);

  dest.on('close', cleanup);

  dest.emit('pipe', source);

  // Allow for unix-like usage: A.pipe(B).pipe(C)
  return dest;
};

},{"events":98,"inherits":201,"readable-stream/lib/_stream_duplex.js":102,"readable-stream/lib/_stream_passthrough.js":103,"readable-stream/lib/_stream_readable.js":104,"readable-stream/lib/_stream_transform.js":105,"readable-stream/lib/_stream_writable.js":106,"readable-stream/lib/internal/streams/end-of-stream.js":110,"readable-stream/lib/internal/streams/pipeline.js":112}],101:[function(require,module,exports){
'use strict';

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

var codes = {};

function createErrorType(code, message, Base) {
  if (!Base) {
    Base = Error;
  }

  function getMessage(arg1, arg2, arg3) {
    if (typeof message === 'string') {
      return message;
    } else {
      return message(arg1, arg2, arg3);
    }
  }

  var NodeError =
  /*#__PURE__*/
  function (_Base) {
    _inheritsLoose(NodeError, _Base);

    function NodeError(arg1, arg2, arg3) {
      return _Base.call(this, getMessage(arg1, arg2, arg3)) || this;
    }

    return NodeError;
  }(Base);

  NodeError.prototype.name = Base.name;
  NodeError.prototype.code = code;
  codes[code] = NodeError;
} // https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js


function oneOf(expected, thing) {
  if (Array.isArray(expected)) {
    var len = expected.length;
    expected = expected.map(function (i) {
      return String(i);
    });

    if (len > 2) {
      return "one of ".concat(thing, " ").concat(expected.slice(0, len - 1).join(', '), ", or ") + expected[len - 1];
    } else if (len === 2) {
      return "one of ".concat(thing, " ").concat(expected[0], " or ").concat(expected[1]);
    } else {
      return "of ".concat(thing, " ").concat(expected[0]);
    }
  } else {
    return "of ".concat(thing, " ").concat(String(expected));
  }
} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith


function startsWith(str, search, pos) {
  return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;
} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith


function endsWith(str, search, this_len) {
  if (this_len === undefined || this_len > str.length) {
    this_len = str.length;
  }

  return str.substring(this_len - search.length, this_len) === search;
} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes


function includes(str, search, start) {
  if (typeof start !== 'number') {
    start = 0;
  }

  if (start + search.length > str.length) {
    return false;
  } else {
    return str.indexOf(search, start) !== -1;
  }
}

createErrorType('ERR_INVALID_OPT_VALUE', function (name, value) {
  return 'The value "' + value + '" is invalid for option "' + name + '"';
}, TypeError);
createErrorType('ERR_INVALID_ARG_TYPE', function (name, expected, actual) {
  // determiner: 'must be' or 'must not be'
  var determiner;

  if (typeof expected === 'string' && startsWith(expected, 'not ')) {
    determiner = 'must not be';
    expected = expected.replace(/^not /, '');
  } else {
    determiner = 'must be';
  }

  var msg;

  if (endsWith(name, ' argument')) {
    // For cases like 'first argument'
    msg = "The ".concat(name, " ").concat(determiner, " ").concat(oneOf(expected, 'type'));
  } else {
    var type = includes(name, '.') ? 'property' : 'argument';
    msg = "The \"".concat(name, "\" ").concat(type, " ").concat(determiner, " ").concat(oneOf(expected, 'type'));
  }

  msg += ". Received type ".concat(typeof actual);
  return msg;
}, TypeError);
createErrorType('ERR_STREAM_PUSH_AFTER_EOF', 'stream.push() after EOF');
createErrorType('ERR_METHOD_NOT_IMPLEMENTED', function (name) {
  return 'The ' + name + ' method is not implemented';
});
createErrorType('ERR_STREAM_PREMATURE_CLOSE', 'Premature close');
createErrorType('ERR_STREAM_DESTROYED', function (name) {
  return 'Cannot call ' + name + ' after a stream was destroyed';
});
createErrorType('ERR_MULTIPLE_CALLBACK', 'Callback called multiple times');
createErrorType('ERR_STREAM_CANNOT_PIPE', 'Cannot pipe, not readable');
createErrorType('ERR_STREAM_WRITE_AFTER_END', 'write after end');
createErrorType('ERR_STREAM_NULL_VALUES', 'May not write null values to stream', TypeError);
createErrorType('ERR_UNKNOWN_ENCODING', function (arg) {
  return 'Unknown encoding: ' + arg;
}, TypeError);
createErrorType('ERR_STREAM_UNSHIFT_AFTER_END_EVENT', 'stream.unshift() after end event');
module.exports.codes = codes;

},{}],102:[function(require,module,exports){
(function (process){(function (){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
// a duplex stream is just a stream that is both readable and writable.
// Since JS doesn't have multiple prototypal inheritance, this class
// prototypally inherits from Readable, and then parasitically from
// Writable.
'use strict';
/*<replacement>*/

var objectKeys = Object.keys || function (obj) {
  var keys = [];

  for (var key in obj) {
    keys.push(key);
  }

  return keys;
};
/*</replacement>*/


module.exports = Duplex;

var Readable = require('./_stream_readable');

var Writable = require('./_stream_writable');

require('inherits')(Duplex, Readable);

{
  // Allow the keys array to be GC'ed.
  var keys = objectKeys(Writable.prototype);

  for (var v = 0; v < keys.length; v++) {
    var method = keys[v];
    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];
  }
}

function Duplex(options) {
  if (!(this instanceof Duplex)) return new Duplex(options);
  Readable.call(this, options);
  Writable.call(this, options);
  this.allowHalfOpen = true;

  if (options) {
    if (options.readable === false) this.readable = false;
    if (options.writable === false) this.writable = false;

    if (options.allowHalfOpen === false) {
      this.allowHalfOpen = false;
      this.once('end', onend);
    }
  }
}

Object.defineProperty(Duplex.prototype, 'writableHighWaterMark', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._writableState.highWaterMark;
  }
});
Object.defineProperty(Duplex.prototype, 'writableBuffer', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._writableState && this._writableState.getBuffer();
  }
});
Object.defineProperty(Duplex.prototype, 'writableLength', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._writableState.length;
  }
}); // the no-half-open enforcer

function onend() {
  // If the writable side ended, then we're ok.
  if (this._writableState.ended) return; // no more data can be written.
  // But allow more writes to happen in this tick.

  process.nextTick(onEndNT, this);
}

function onEndNT(self) {
  self.end();
}

Object.defineProperty(Duplex.prototype, 'destroyed', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    if (this._readableState === undefined || this._writableState === undefined) {
      return false;
    }

    return this._readableState.destroyed && this._writableState.destroyed;
  },
  set: function set(value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (this._readableState === undefined || this._writableState === undefined) {
      return;
    } // backward compatibility, the user is explicitly
    // managing destroyed


    this._readableState.destroyed = value;
    this._writableState.destroyed = value;
  }
});
}).call(this)}).call(this,require('_process'))
},{"./_stream_readable":104,"./_stream_writable":106,"_process":207,"inherits":201}],103:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
// a passthrough stream.
// basically just the most minimal sort of Transform stream.
// Every written chunk gets output as-is.
'use strict';

module.exports = PassThrough;

var Transform = require('./_stream_transform');

require('inherits')(PassThrough, Transform);

function PassThrough(options) {
  if (!(this instanceof PassThrough)) return new PassThrough(options);
  Transform.call(this, options);
}

PassThrough.prototype._transform = function (chunk, encoding, cb) {
  cb(null, chunk);
};
},{"./_stream_transform":105,"inherits":201}],104:[function(require,module,exports){
(function (process,global){(function (){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
'use strict';

module.exports = Readable;
/*<replacement>*/

var Duplex;
/*</replacement>*/

Readable.ReadableState = ReadableState;
/*<replacement>*/

var EE = require('events').EventEmitter;

var EElistenerCount = function EElistenerCount(emitter, type) {
  return emitter.listeners(type).length;
};
/*</replacement>*/

/*<replacement>*/


var Stream = require('./internal/streams/stream');
/*</replacement>*/


var Buffer = require('buffer').Buffer;

var OurUint8Array = global.Uint8Array || function () {};

function _uint8ArrayToBuffer(chunk) {
  return Buffer.from(chunk);
}

function _isUint8Array(obj) {
  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;
}
/*<replacement>*/


var debugUtil = require('util');

var debug;

if (debugUtil && debugUtil.debuglog) {
  debug = debugUtil.debuglog('stream');
} else {
  debug = function debug() {};
}
/*</replacement>*/


var BufferList = require('./internal/streams/buffer_list');

var destroyImpl = require('./internal/streams/destroy');

var _require = require('./internal/streams/state'),
    getHighWaterMark = _require.getHighWaterMark;

var _require$codes = require('../errors').codes,
    ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,
    ERR_STREAM_PUSH_AFTER_EOF = _require$codes.ERR_STREAM_PUSH_AFTER_EOF,
    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,
    ERR_STREAM_UNSHIFT_AFTER_END_EVENT = _require$codes.ERR_STREAM_UNSHIFT_AFTER_END_EVENT; // Lazy loaded to improve the startup performance.


var StringDecoder;
var createReadableStreamAsyncIterator;
var from;

require('inherits')(Readable, Stream);

var errorOrDestroy = destroyImpl.errorOrDestroy;
var kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];

function prependListener(emitter, event, fn) {
  // Sadly this is not cacheable as some libraries bundle their own
  // event emitter implementation with them.
  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn); // This is a hack to make sure that our error handler is attached before any
  // userland ones.  NEVER DO THIS. This is here only because this code needs
  // to continue to work with older versions of Node.js that do not include
  // the prependListener() method. The goal is to eventually remove this hack.

  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (Array.isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];
}

function ReadableState(options, stream, isDuplex) {
  Duplex = Duplex || require('./_stream_duplex');
  options = options || {}; // Duplex streams are both readable and writable, but share
  // the same options object.
  // However, some cases require setting options to different
  // values for the readable and the writable sides of the duplex stream.
  // These options can be provided separately as readableXXX and writableXXX.

  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex; // object stream flag. Used to make read(n) ignore n and to
  // make all the buffer merging and length checks go away

  this.objectMode = !!options.objectMode;
  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode; // the point at which it stops calling _read() to fill the buffer
  // Note: 0 is a valid value, means "don't call _read preemptively ever"

  this.highWaterMark = getHighWaterMark(this, options, 'readableHighWaterMark', isDuplex); // A linked list is used to store data chunks instead of an array because the
  // linked list can remove elements from the beginning faster than
  // array.shift()

  this.buffer = new BufferList();
  this.length = 0;
  this.pipes = null;
  this.pipesCount = 0;
  this.flowing = null;
  this.ended = false;
  this.endEmitted = false;
  this.reading = false; // a flag to be able to tell if the event 'readable'/'data' is emitted
  // immediately, or on a later tick.  We set this to true at first, because
  // any actions that shouldn't happen until "later" should generally also
  // not happen before the first read call.

  this.sync = true; // whenever we return null, then we set a flag to say
  // that we're awaiting a 'readable' event emission.

  this.needReadable = false;
  this.emittedReadable = false;
  this.readableListening = false;
  this.resumeScheduled = false;
  this.paused = true; // Should close be emitted on destroy. Defaults to true.

  this.emitClose = options.emitClose !== false; // Should .destroy() be called after 'end' (and potentially 'finish')

  this.autoDestroy = !!options.autoDestroy; // has it been destroyed

  this.destroyed = false; // Crypto is kind of old and crusty.  Historically, its default string
  // encoding is 'binary' so we have to make this configurable.
  // Everything else in the universe uses 'utf8', though.

  this.defaultEncoding = options.defaultEncoding || 'utf8'; // the number of writers that are awaiting a drain event in .pipe()s

  this.awaitDrain = 0; // if true, a maybeReadMore has been scheduled

  this.readingMore = false;
  this.decoder = null;
  this.encoding = null;

  if (options.encoding) {
    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;
    this.decoder = new StringDecoder(options.encoding);
    this.encoding = options.encoding;
  }
}

function Readable(options) {
  Duplex = Duplex || require('./_stream_duplex');
  if (!(this instanceof Readable)) return new Readable(options); // Checking for a Stream.Duplex instance is faster here instead of inside
  // the ReadableState constructor, at least with V8 6.5

  var isDuplex = this instanceof Duplex;
  this._readableState = new ReadableState(options, this, isDuplex); // legacy

  this.readable = true;

  if (options) {
    if (typeof options.read === 'function') this._read = options.read;
    if (typeof options.destroy === 'function') this._destroy = options.destroy;
  }

  Stream.call(this);
}

Object.defineProperty(Readable.prototype, 'destroyed', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    if (this._readableState === undefined) {
      return false;
    }

    return this._readableState.destroyed;
  },
  set: function set(value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (!this._readableState) {
      return;
    } // backward compatibility, the user is explicitly
    // managing destroyed


    this._readableState.destroyed = value;
  }
});
Readable.prototype.destroy = destroyImpl.destroy;
Readable.prototype._undestroy = destroyImpl.undestroy;

Readable.prototype._destroy = function (err, cb) {
  cb(err);
}; // Manually shove something into the read() buffer.
// This returns true if the highWaterMark has not been hit yet,
// similar to how Writable.write() returns true if you should
// write() some more.


Readable.prototype.push = function (chunk, encoding) {
  var state = this._readableState;
  var skipChunkCheck;

  if (!state.objectMode) {
    if (typeof chunk === 'string') {
      encoding = encoding || state.defaultEncoding;

      if (encoding !== state.encoding) {
        chunk = Buffer.from(chunk, encoding);
        encoding = '';
      }

      skipChunkCheck = true;
    }
  } else {
    skipChunkCheck = true;
  }

  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);
}; // Unshift should *always* be something directly out of read()


Readable.prototype.unshift = function (chunk) {
  return readableAddChunk(this, chunk, null, true, false);
};

function readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {
  debug('readableAddChunk', chunk);
  var state = stream._readableState;

  if (chunk === null) {
    state.reading = false;
    onEofChunk(stream, state);
  } else {
    var er;
    if (!skipChunkCheck) er = chunkInvalid(state, chunk);

    if (er) {
      errorOrDestroy(stream, er);
    } else if (state.objectMode || chunk && chunk.length > 0) {
      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {
        chunk = _uint8ArrayToBuffer(chunk);
      }

      if (addToFront) {
        if (state.endEmitted) errorOrDestroy(stream, new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());else addChunk(stream, state, chunk, true);
      } else if (state.ended) {
        errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF());
      } else if (state.destroyed) {
        return false;
      } else {
        state.reading = false;

        if (state.decoder && !encoding) {
          chunk = state.decoder.write(chunk);
          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);
        } else {
          addChunk(stream, state, chunk, false);
        }
      }
    } else if (!addToFront) {
      state.reading = false;
      maybeReadMore(stream, state);
    }
  } // We can push more data if we are below the highWaterMark.
  // Also, if we have no data yet, we can stand some more bytes.
  // This is to work around cases where hwm=0, such as the repl.


  return !state.ended && (state.length < state.highWaterMark || state.length === 0);
}

function addChunk(stream, state, chunk, addToFront) {
  if (state.flowing && state.length === 0 && !state.sync) {
    state.awaitDrain = 0;
    stream.emit('data', chunk);
  } else {
    // update the buffer info.
    state.length += state.objectMode ? 1 : chunk.length;
    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);
    if (state.needReadable) emitReadable(stream);
  }

  maybeReadMore(stream, state);
}

function chunkInvalid(state, chunk) {
  var er;

  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {
    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer', 'Uint8Array'], chunk);
  }

  return er;
}

Readable.prototype.isPaused = function () {
  return this._readableState.flowing === false;
}; // backwards compatibility.


Readable.prototype.setEncoding = function (enc) {
  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;
  var decoder = new StringDecoder(enc);
  this._readableState.decoder = decoder; // If setEncoding(null), decoder.encoding equals utf8

  this._readableState.encoding = this._readableState.decoder.encoding; // Iterate over current buffer to convert already stored Buffers:

  var p = this._readableState.buffer.head;
  var content = '';

  while (p !== null) {
    content += decoder.write(p.data);
    p = p.next;
  }

  this._readableState.buffer.clear();

  if (content !== '') this._readableState.buffer.push(content);
  this._readableState.length = content.length;
  return this;
}; // Don't raise the hwm > 1GB


var MAX_HWM = 0x40000000;

function computeNewHighWaterMark(n) {
  if (n >= MAX_HWM) {
    // TODO(ronag): Throw ERR_VALUE_OUT_OF_RANGE.
    n = MAX_HWM;
  } else {
    // Get the next highest power of 2 to prevent increasing hwm excessively in
    // tiny amounts
    n--;
    n |= n >>> 1;
    n |= n >>> 2;
    n |= n >>> 4;
    n |= n >>> 8;
    n |= n >>> 16;
    n++;
  }

  return n;
} // This function is designed to be inlinable, so please take care when making
// changes to the function body.


function howMuchToRead(n, state) {
  if (n <= 0 || state.length === 0 && state.ended) return 0;
  if (state.objectMode) return 1;

  if (n !== n) {
    // Only flow one buffer at a time
    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;
  } // If we're asking for more than the current hwm, then raise the hwm.


  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);
  if (n <= state.length) return n; // Don't have enough

  if (!state.ended) {
    state.needReadable = true;
    return 0;
  }

  return state.length;
} // you can override either this method, or the async _read(n) below.


Readable.prototype.read = function (n) {
  debug('read', n);
  n = parseInt(n, 10);
  var state = this._readableState;
  var nOrig = n;
  if (n !== 0) state.emittedReadable = false; // if we're doing read(0) to trigger a readable event, but we
  // already have a bunch of data in the buffer, then just trigger
  // the 'readable' event and move on.

  if (n === 0 && state.needReadable && ((state.highWaterMark !== 0 ? state.length >= state.highWaterMark : state.length > 0) || state.ended)) {
    debug('read: emitReadable', state.length, state.ended);
    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);
    return null;
  }

  n = howMuchToRead(n, state); // if we've ended, and we're now clear, then finish it up.

  if (n === 0 && state.ended) {
    if (state.length === 0) endReadable(this);
    return null;
  } // All the actual chunk generation logic needs to be
  // *below* the call to _read.  The reason is that in certain
  // synthetic stream cases, such as passthrough streams, _read
  // may be a completely synchronous operation which may change
  // the state of the read buffer, providing enough data when
  // before there was *not* enough.
  //
  // So, the steps are:
  // 1. Figure out what the state of things will be after we do
  // a read from the buffer.
  //
  // 2. If that resulting state will trigger a _read, then call _read.
  // Note that this may be asynchronous, or synchronous.  Yes, it is
  // deeply ugly to write APIs this way, but that still doesn't mean
  // that the Readable class should behave improperly, as streams are
  // designed to be sync/async agnostic.
  // Take note if the _read call is sync or async (ie, if the read call
  // has returned yet), so that we know whether or not it's safe to emit
  // 'readable' etc.
  //
  // 3. Actually pull the requested chunks out of the buffer and return.
  // if we need a readable event, then we need to do some reading.


  var doRead = state.needReadable;
  debug('need readable', doRead); // if we currently have less than the highWaterMark, then also read some

  if (state.length === 0 || state.length - n < state.highWaterMark) {
    doRead = true;
    debug('length less than watermark', doRead);
  } // however, if we've ended, then there's no point, and if we're already
  // reading, then it's unnecessary.


  if (state.ended || state.reading) {
    doRead = false;
    debug('reading or ended', doRead);
  } else if (doRead) {
    debug('do read');
    state.reading = true;
    state.sync = true; // if the length is currently zero, then we *need* a readable event.

    if (state.length === 0) state.needReadable = true; // call internal read method

    this._read(state.highWaterMark);

    state.sync = false; // If _read pushed data synchronously, then `reading` will be false,
    // and we need to re-evaluate how much data we can return to the user.

    if (!state.reading) n = howMuchToRead(nOrig, state);
  }

  var ret;
  if (n > 0) ret = fromList(n, state);else ret = null;

  if (ret === null) {
    state.needReadable = state.length <= state.highWaterMark;
    n = 0;
  } else {
    state.length -= n;
    state.awaitDrain = 0;
  }

  if (state.length === 0) {
    // If we have nothing in the buffer, then we want to know
    // as soon as we *do* get something into the buffer.
    if (!state.ended) state.needReadable = true; // If we tried to read() past the EOF, then emit end on the next tick.

    if (nOrig !== n && state.ended) endReadable(this);
  }

  if (ret !== null) this.emit('data', ret);
  return ret;
};

function onEofChunk(stream, state) {
  debug('onEofChunk');
  if (state.ended) return;

  if (state.decoder) {
    var chunk = state.decoder.end();

    if (chunk && chunk.length) {
      state.buffer.push(chunk);
      state.length += state.objectMode ? 1 : chunk.length;
    }
  }

  state.ended = true;

  if (state.sync) {
    // if we are sync, wait until next tick to emit the data.
    // Otherwise we risk emitting data in the flow()
    // the readable code triggers during a read() call
    emitReadable(stream);
  } else {
    // emit 'readable' now to make sure it gets picked up.
    state.needReadable = false;

    if (!state.emittedReadable) {
      state.emittedReadable = true;
      emitReadable_(stream);
    }
  }
} // Don't emit readable right away in sync mode, because this can trigger
// another read() call => stack overflow.  This way, it might trigger
// a nextTick recursion warning, but that's not so bad.


function emitReadable(stream) {
  var state = stream._readableState;
  debug('emitReadable', state.needReadable, state.emittedReadable);
  state.needReadable = false;

  if (!state.emittedReadable) {
    debug('emitReadable', state.flowing);
    state.emittedReadable = true;
    process.nextTick(emitReadable_, stream);
  }
}

function emitReadable_(stream) {
  var state = stream._readableState;
  debug('emitReadable_', state.destroyed, state.length, state.ended);

  if (!state.destroyed && (state.length || state.ended)) {
    stream.emit('readable');
    state.emittedReadable = false;
  } // The stream needs another readable event if
  // 1. It is not flowing, as the flow mechanism will take
  //    care of it.
  // 2. It is not ended.
  // 3. It is below the highWaterMark, so we can schedule
  //    another readable later.


  state.needReadable = !state.flowing && !state.ended && state.length <= state.highWaterMark;
  flow(stream);
} // at this point, the user has presumably seen the 'readable' event,
// and called read() to consume some data.  that may have triggered
// in turn another _read(n) call, in which case reading = true if
// it's in progress.
// However, if we're not ended, or reading, and the length < hwm,
// then go ahead and try to read some more preemptively.


function maybeReadMore(stream, state) {
  if (!state.readingMore) {
    state.readingMore = true;
    process.nextTick(maybeReadMore_, stream, state);
  }
}

function maybeReadMore_(stream, state) {
  // Attempt to read more data if we should.
  //
  // The conditions for reading more data are (one of):
  // - Not enough data buffered (state.length < state.highWaterMark). The loop
  //   is responsible for filling the buffer with enough data if such data
  //   is available. If highWaterMark is 0 and we are not in the flowing mode
  //   we should _not_ attempt to buffer any extra data. We'll get more data
  //   when the stream consumer calls read() instead.
  // - No data in the buffer, and the stream is in flowing mode. In this mode
  //   the loop below is responsible for ensuring read() is called. Failing to
  //   call read here would abort the flow and there's no other mechanism for
  //   continuing the flow if the stream consumer has just subscribed to the
  //   'data' event.
  //
  // In addition to the above conditions to keep reading data, the following
  // conditions prevent the data from being read:
  // - The stream has ended (state.ended).
  // - There is already a pending 'read' operation (state.reading). This is a
  //   case where the the stream has called the implementation defined _read()
  //   method, but they are processing the call asynchronously and have _not_
  //   called push() with new data. In this case we skip performing more
  //   read()s. The execution ends in this method again after the _read() ends
  //   up calling push() with more data.
  while (!state.reading && !state.ended && (state.length < state.highWaterMark || state.flowing && state.length === 0)) {
    var len = state.length;
    debug('maybeReadMore read 0');
    stream.read(0);
    if (len === state.length) // didn't get any data, stop spinning.
      break;
  }

  state.readingMore = false;
} // abstract method.  to be overridden in specific implementation classes.
// call cb(er, data) where data is <= n in length.
// for virtual (non-string, non-buffer) streams, "length" is somewhat
// arbitrary, and perhaps not very meaningful.


Readable.prototype._read = function (n) {
  errorOrDestroy(this, new ERR_METHOD_NOT_IMPLEMENTED('_read()'));
};

Readable.prototype.pipe = function (dest, pipeOpts) {
  var src = this;
  var state = this._readableState;

  switch (state.pipesCount) {
    case 0:
      state.pipes = dest;
      break;

    case 1:
      state.pipes = [state.pipes, dest];
      break;

    default:
      state.pipes.push(dest);
      break;
  }

  state.pipesCount += 1;
  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);
  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;
  var endFn = doEnd ? onend : unpipe;
  if (state.endEmitted) process.nextTick(endFn);else src.once('end', endFn);
  dest.on('unpipe', onunpipe);

  function onunpipe(readable, unpipeInfo) {
    debug('onunpipe');

    if (readable === src) {
      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {
        unpipeInfo.hasUnpiped = true;
        cleanup();
      }
    }
  }

  function onend() {
    debug('onend');
    dest.end();
  } // when the dest drains, it reduces the awaitDrain counter
  // on the source.  This would be more elegant with a .once()
  // handler in flow(), but adding and removing repeatedly is
  // too slow.


  var ondrain = pipeOnDrain(src);
  dest.on('drain', ondrain);
  var cleanedUp = false;

  function cleanup() {
    debug('cleanup'); // cleanup event handlers once the pipe is broken

    dest.removeListener('close', onclose);
    dest.removeListener('finish', onfinish);
    dest.removeListener('drain', ondrain);
    dest.removeListener('error', onerror);
    dest.removeListener('unpipe', onunpipe);
    src.removeListener('end', onend);
    src.removeListener('end', unpipe);
    src.removeListener('data', ondata);
    cleanedUp = true; // if the reader is waiting for a drain event from this
    // specific writer, then it would cause it to never start
    // flowing again.
    // So, if this is awaiting a drain, then we just call it now.
    // If we don't know, then assume that we are waiting for one.

    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();
  }

  src.on('data', ondata);

  function ondata(chunk) {
    debug('ondata');
    var ret = dest.write(chunk);
    debug('dest.write', ret);

    if (ret === false) {
      // If the user unpiped during `dest.write()`, it is possible
      // to get stuck in a permanently paused state if that write
      // also returned false.
      // => Check whether `dest` is still a piping destination.
      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {
        debug('false write response, pause', state.awaitDrain);
        state.awaitDrain++;
      }

      src.pause();
    }
  } // if the dest has an error, then stop piping into it.
  // however, don't suppress the throwing behavior for this.


  function onerror(er) {
    debug('onerror', er);
    unpipe();
    dest.removeListener('error', onerror);
    if (EElistenerCount(dest, 'error') === 0) errorOrDestroy(dest, er);
  } // Make sure our error handler is attached before userland ones.


  prependListener(dest, 'error', onerror); // Both close and finish should trigger unpipe, but only once.

  function onclose() {
    dest.removeListener('finish', onfinish);
    unpipe();
  }

  dest.once('close', onclose);

  function onfinish() {
    debug('onfinish');
    dest.removeListener('close', onclose);
    unpipe();
  }

  dest.once('finish', onfinish);

  function unpipe() {
    debug('unpipe');
    src.unpipe(dest);
  } // tell the dest that it's being piped to


  dest.emit('pipe', src); // start the flow if it hasn't been started already.

  if (!state.flowing) {
    debug('pipe resume');
    src.resume();
  }

  return dest;
};

function pipeOnDrain(src) {
  return function pipeOnDrainFunctionResult() {
    var state = src._readableState;
    debug('pipeOnDrain', state.awaitDrain);
    if (state.awaitDrain) state.awaitDrain--;

    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {
      state.flowing = true;
      flow(src);
    }
  };
}

Readable.prototype.unpipe = function (dest) {
  var state = this._readableState;
  var unpipeInfo = {
    hasUnpiped: false
  }; // if we're not piping anywhere, then do nothing.

  if (state.pipesCount === 0) return this; // just one destination.  most common case.

  if (state.pipesCount === 1) {
    // passed in one, but it's not the right one.
    if (dest && dest !== state.pipes) return this;
    if (!dest) dest = state.pipes; // got a match.

    state.pipes = null;
    state.pipesCount = 0;
    state.flowing = false;
    if (dest) dest.emit('unpipe', this, unpipeInfo);
    return this;
  } // slow case. multiple pipe destinations.


  if (!dest) {
    // remove all.
    var dests = state.pipes;
    var len = state.pipesCount;
    state.pipes = null;
    state.pipesCount = 0;
    state.flowing = false;

    for (var i = 0; i < len; i++) {
      dests[i].emit('unpipe', this, {
        hasUnpiped: false
      });
    }

    return this;
  } // try to find the right one.


  var index = indexOf(state.pipes, dest);
  if (index === -1) return this;
  state.pipes.splice(index, 1);
  state.pipesCount -= 1;
  if (state.pipesCount === 1) state.pipes = state.pipes[0];
  dest.emit('unpipe', this, unpipeInfo);
  return this;
}; // set up data events if they are asked for
// Ensure readable listeners eventually get something


Readable.prototype.on = function (ev, fn) {
  var res = Stream.prototype.on.call(this, ev, fn);
  var state = this._readableState;

  if (ev === 'data') {
    // update readableListening so that resume() may be a no-op
    // a few lines down. This is needed to support once('readable').
    state.readableListening = this.listenerCount('readable') > 0; // Try start flowing on next tick if stream isn't explicitly paused

    if (state.flowing !== false) this.resume();
  } else if (ev === 'readable') {
    if (!state.endEmitted && !state.readableListening) {
      state.readableListening = state.needReadable = true;
      state.flowing = false;
      state.emittedReadable = false;
      debug('on readable', state.length, state.reading);

      if (state.length) {
        emitReadable(this);
      } else if (!state.reading) {
        process.nextTick(nReadingNextTick, this);
      }
    }
  }

  return res;
};

Readable.prototype.addListener = Readable.prototype.on;

Readable.prototype.removeListener = function (ev, fn) {
  var res = Stream.prototype.removeListener.call(this, ev, fn);

  if (ev === 'readable') {
    // We need to check if there is someone still listening to
    // readable and reset the state. However this needs to happen
    // after readable has been emitted but before I/O (nextTick) to
    // support once('readable', fn) cycles. This means that calling
    // resume within the same tick will have no
    // effect.
    process.nextTick(updateReadableListening, this);
  }

  return res;
};

Readable.prototype.removeAllListeners = function (ev) {
  var res = Stream.prototype.removeAllListeners.apply(this, arguments);

  if (ev === 'readable' || ev === undefined) {
    // We need to check if there is someone still listening to
    // readable and reset the state. However this needs to happen
    // after readable has been emitted but before I/O (nextTick) to
    // support once('readable', fn) cycles. This means that calling
    // resume within the same tick will have no
    // effect.
    process.nextTick(updateReadableListening, this);
  }

  return res;
};

function updateReadableListening(self) {
  var state = self._readableState;
  state.readableListening = self.listenerCount('readable') > 0;

  if (state.resumeScheduled && !state.paused) {
    // flowing needs to be set to true now, otherwise
    // the upcoming resume will not flow.
    state.flowing = true; // crude way to check if we should resume
  } else if (self.listenerCount('data') > 0) {
    self.resume();
  }
}

function nReadingNextTick(self) {
  debug('readable nexttick read 0');
  self.read(0);
} // pause() and resume() are remnants of the legacy readable stream API
// If the user uses them, then switch into old mode.


Readable.prototype.resume = function () {
  var state = this._readableState;

  if (!state.flowing) {
    debug('resume'); // we flow only if there is no one listening
    // for readable, but we still have to call
    // resume()

    state.flowing = !state.readableListening;
    resume(this, state);
  }

  state.paused = false;
  return this;
};

function resume(stream, state) {
  if (!state.resumeScheduled) {
    state.resumeScheduled = true;
    process.nextTick(resume_, stream, state);
  }
}

function resume_(stream, state) {
  debug('resume', state.reading);

  if (!state.reading) {
    stream.read(0);
  }

  state.resumeScheduled = false;
  stream.emit('resume');
  flow(stream);
  if (state.flowing && !state.reading) stream.read(0);
}

Readable.prototype.pause = function () {
  debug('call pause flowing=%j', this._readableState.flowing);

  if (this._readableState.flowing !== false) {
    debug('pause');
    this._readableState.flowing = false;
    this.emit('pause');
  }

  this._readableState.paused = true;
  return this;
};

function flow(stream) {
  var state = stream._readableState;
  debug('flow', state.flowing);

  while (state.flowing && stream.read() !== null) {
    ;
  }
} // wrap an old-style stream as the async data source.
// This is *not* part of the readable stream interface.
// It is an ugly unfortunate mess of history.


Readable.prototype.wrap = function (stream) {
  var _this = this;

  var state = this._readableState;
  var paused = false;
  stream.on('end', function () {
    debug('wrapped end');

    if (state.decoder && !state.ended) {
      var chunk = state.decoder.end();
      if (chunk && chunk.length) _this.push(chunk);
    }

    _this.push(null);
  });
  stream.on('data', function (chunk) {
    debug('wrapped data');
    if (state.decoder) chunk = state.decoder.write(chunk); // don't skip over falsy values in objectMode

    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;

    var ret = _this.push(chunk);

    if (!ret) {
      paused = true;
      stream.pause();
    }
  }); // proxy all the other methods.
  // important when wrapping filters and duplexes.

  for (var i in stream) {
    if (this[i] === undefined && typeof stream[i] === 'function') {
      this[i] = function methodWrap(method) {
        return function methodWrapReturnFunction() {
          return stream[method].apply(stream, arguments);
        };
      }(i);
    }
  } // proxy certain important events.


  for (var n = 0; n < kProxyEvents.length; n++) {
    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));
  } // when we try to consume some more bytes, simply unpause the
  // underlying stream.


  this._read = function (n) {
    debug('wrapped _read', n);

    if (paused) {
      paused = false;
      stream.resume();
    }
  };

  return this;
};

if (typeof Symbol === 'function') {
  Readable.prototype[Symbol.asyncIterator] = function () {
    if (createReadableStreamAsyncIterator === undefined) {
      createReadableStreamAsyncIterator = require('./internal/streams/async_iterator');
    }

    return createReadableStreamAsyncIterator(this);
  };
}

Object.defineProperty(Readable.prototype, 'readableHighWaterMark', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._readableState.highWaterMark;
  }
});
Object.defineProperty(Readable.prototype, 'readableBuffer', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._readableState && this._readableState.buffer;
  }
});
Object.defineProperty(Readable.prototype, 'readableFlowing', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._readableState.flowing;
  },
  set: function set(state) {
    if (this._readableState) {
      this._readableState.flowing = state;
    }
  }
}); // exposed for testing purposes only.

Readable._fromList = fromList;
Object.defineProperty(Readable.prototype, 'readableLength', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._readableState.length;
  }
}); // Pluck off n bytes from an array of buffers.
// Length is the combined lengths of all the buffers in the list.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.

function fromList(n, state) {
  // nothing buffered
  if (state.length === 0) return null;
  var ret;
  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {
    // read it all, truncate the list
    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.first();else ret = state.buffer.concat(state.length);
    state.buffer.clear();
  } else {
    // read part of list
    ret = state.buffer.consume(n, state.decoder);
  }
  return ret;
}

function endReadable(stream) {
  var state = stream._readableState;
  debug('endReadable', state.endEmitted);

  if (!state.endEmitted) {
    state.ended = true;
    process.nextTick(endReadableNT, state, stream);
  }
}

function endReadableNT(state, stream) {
  debug('endReadableNT', state.endEmitted, state.length); // Check that we didn't get one last unshift.

  if (!state.endEmitted && state.length === 0) {
    state.endEmitted = true;
    stream.readable = false;
    stream.emit('end');

    if (state.autoDestroy) {
      // In case of duplex streams we need a way to detect
      // if the writable side is ready for autoDestroy as well
      var wState = stream._writableState;

      if (!wState || wState.autoDestroy && wState.finished) {
        stream.destroy();
      }
    }
  }
}

if (typeof Symbol === 'function') {
  Readable.from = function (iterable, opts) {
    if (from === undefined) {
      from = require('./internal/streams/from');
    }

    return from(Readable, iterable, opts);
  };
}

function indexOf(xs, x) {
  for (var i = 0, l = xs.length; i < l; i++) {
    if (xs[i] === x) return i;
  }

  return -1;
}
}).call(this)}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"../errors":101,"./_stream_duplex":102,"./internal/streams/async_iterator":107,"./internal/streams/buffer_list":108,"./internal/streams/destroy":109,"./internal/streams/from":111,"./internal/streams/state":113,"./internal/streams/stream":114,"_process":207,"buffer":97,"events":98,"inherits":201,"string_decoder/":216,"util":95}],105:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
// a transform stream is a readable/writable stream where you do
// something with the data.  Sometimes it's called a "filter",
// but that's not a great name for it, since that implies a thing where
// some bits pass through, and others are simply ignored.  (That would
// be a valid example of a transform, of course.)
//
// While the output is causally related to the input, it's not a
// necessarily symmetric or synchronous transformation.  For example,
// a zlib stream might take multiple plain-text writes(), and then
// emit a single compressed chunk some time in the future.
//
// Here's how this works:
//
// The Transform stream has all the aspects of the readable and writable
// stream classes.  When you write(chunk), that calls _write(chunk,cb)
// internally, and returns false if there's a lot of pending writes
// buffered up.  When you call read(), that calls _read(n) until
// there's enough pending readable data buffered up.
//
// In a transform stream, the written data is placed in a buffer.  When
// _read(n) is called, it transforms the queued up data, calling the
// buffered _write cb's as it consumes chunks.  If consuming a single
// written chunk would result in multiple output chunks, then the first
// outputted bit calls the readcb, and subsequent chunks just go into
// the read buffer, and will cause it to emit 'readable' if necessary.
//
// This way, back-pressure is actually determined by the reading side,
// since _read has to be called to start processing a new chunk.  However,
// a pathological inflate type of transform can cause excessive buffering
// here.  For example, imagine a stream where every byte of input is
// interpreted as an integer from 0-255, and then results in that many
// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in
// 1kb of data being output.  In this case, you could write a very small
// amount of input, and end up with a very large amount of output.  In
// such a pathological inflating mechanism, there'd be no way to tell
// the system to stop doing the transform.  A single 4MB write could
// cause the system to run out of memory.
//
// However, even in such a pathological case, only a single written chunk
// would be consumed, and then the rest would wait (un-transformed) until
// the results of the previous transformed chunk were consumed.
'use strict';

module.exports = Transform;

var _require$codes = require('../errors').codes,
    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,
    ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,
    ERR_TRANSFORM_ALREADY_TRANSFORMING = _require$codes.ERR_TRANSFORM_ALREADY_TRANSFORMING,
    ERR_TRANSFORM_WITH_LENGTH_0 = _require$codes.ERR_TRANSFORM_WITH_LENGTH_0;

var Duplex = require('./_stream_duplex');

require('inherits')(Transform, Duplex);

function afterTransform(er, data) {
  var ts = this._transformState;
  ts.transforming = false;
  var cb = ts.writecb;

  if (cb === null) {
    return this.emit('error', new ERR_MULTIPLE_CALLBACK());
  }

  ts.writechunk = null;
  ts.writecb = null;
  if (data != null) // single equals check for both `null` and `undefined`
    this.push(data);
  cb(er);
  var rs = this._readableState;
  rs.reading = false;

  if (rs.needReadable || rs.length < rs.highWaterMark) {
    this._read(rs.highWaterMark);
  }
}

function Transform(options) {
  if (!(this instanceof Transform)) return new Transform(options);
  Duplex.call(this, options);
  this._transformState = {
    afterTransform: afterTransform.bind(this),
    needTransform: false,
    transforming: false,
    writecb: null,
    writechunk: null,
    writeencoding: null
  }; // start out asking for a readable event once data is transformed.

  this._readableState.needReadable = true; // we have implemented the _read method, and done the other things
  // that Readable wants before the first _read call, so unset the
  // sync guard flag.

  this._readableState.sync = false;

  if (options) {
    if (typeof options.transform === 'function') this._transform = options.transform;
    if (typeof options.flush === 'function') this._flush = options.flush;
  } // When the writable side finishes, then flush out anything remaining.


  this.on('prefinish', prefinish);
}

function prefinish() {
  var _this = this;

  if (typeof this._flush === 'function' && !this._readableState.destroyed) {
    this._flush(function (er, data) {
      done(_this, er, data);
    });
  } else {
    done(this, null, null);
  }
}

Transform.prototype.push = function (chunk, encoding) {
  this._transformState.needTransform = false;
  return Duplex.prototype.push.call(this, chunk, encoding);
}; // This is the part where you do stuff!
// override this function in implementation classes.
// 'chunk' is an input chunk.
//
// Call `push(newChunk)` to pass along transformed output
// to the readable side.  You may call 'push' zero or more times.
//
// Call `cb(err)` when you are done with this chunk.  If you pass
// an error, then that'll put the hurt on the whole operation.  If you
// never call cb(), then you'll never get another chunk.


Transform.prototype._transform = function (chunk, encoding, cb) {
  cb(new ERR_METHOD_NOT_IMPLEMENTED('_transform()'));
};

Transform.prototype._write = function (chunk, encoding, cb) {
  var ts = this._transformState;
  ts.writecb = cb;
  ts.writechunk = chunk;
  ts.writeencoding = encoding;

  if (!ts.transforming) {
    var rs = this._readableState;
    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);
  }
}; // Doesn't matter what the args are here.
// _transform does all the work.
// That we got here means that the readable side wants more data.


Transform.prototype._read = function (n) {
  var ts = this._transformState;

  if (ts.writechunk !== null && !ts.transforming) {
    ts.transforming = true;

    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);
  } else {
    // mark that we need a transform, so that any data that comes in
    // will get processed, now that we've asked for it.
    ts.needTransform = true;
  }
};

Transform.prototype._destroy = function (err, cb) {
  Duplex.prototype._destroy.call(this, err, function (err2) {
    cb(err2);
  });
};

function done(stream, er, data) {
  if (er) return stream.emit('error', er);
  if (data != null) // single equals check for both `null` and `undefined`
    stream.push(data); // TODO(BridgeAR): Write a test for these two error cases
  // if there's nothing in the write buffer, then that means
  // that nothing more will ever be provided

  if (stream._writableState.length) throw new ERR_TRANSFORM_WITH_LENGTH_0();
  if (stream._transformState.transforming) throw new ERR_TRANSFORM_ALREADY_TRANSFORMING();
  return stream.push(null);
}
},{"../errors":101,"./_stream_duplex":102,"inherits":201}],106:[function(require,module,exports){
(function (process,global){(function (){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
// A bit simpler than readable streams.
// Implement an async ._write(chunk, encoding, cb), and it'll handle all
// the drain event emission and buffering.
'use strict';

module.exports = Writable;
/* <replacement> */

function WriteReq(chunk, encoding, cb) {
  this.chunk = chunk;
  this.encoding = encoding;
  this.callback = cb;
  this.next = null;
} // It seems a linked list but it is not
// there will be only 2 of these for each stream


function CorkedRequest(state) {
  var _this = this;

  this.next = null;
  this.entry = null;

  this.finish = function () {
    onCorkedFinish(_this, state);
  };
}
/* </replacement> */

/*<replacement>*/


var Duplex;
/*</replacement>*/

Writable.WritableState = WritableState;
/*<replacement>*/

var internalUtil = {
  deprecate: require('util-deprecate')
};
/*</replacement>*/

/*<replacement>*/

var Stream = require('./internal/streams/stream');
/*</replacement>*/


var Buffer = require('buffer').Buffer;

var OurUint8Array = global.Uint8Array || function () {};

function _uint8ArrayToBuffer(chunk) {
  return Buffer.from(chunk);
}

function _isUint8Array(obj) {
  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;
}

var destroyImpl = require('./internal/streams/destroy');

var _require = require('./internal/streams/state'),
    getHighWaterMark = _require.getHighWaterMark;

var _require$codes = require('../errors').codes,
    ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,
    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,
    ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,
    ERR_STREAM_CANNOT_PIPE = _require$codes.ERR_STREAM_CANNOT_PIPE,
    ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED,
    ERR_STREAM_NULL_VALUES = _require$codes.ERR_STREAM_NULL_VALUES,
    ERR_STREAM_WRITE_AFTER_END = _require$codes.ERR_STREAM_WRITE_AFTER_END,
    ERR_UNKNOWN_ENCODING = _require$codes.ERR_UNKNOWN_ENCODING;

var errorOrDestroy = destroyImpl.errorOrDestroy;

require('inherits')(Writable, Stream);

function nop() {}

function WritableState(options, stream, isDuplex) {
  Duplex = Duplex || require('./_stream_duplex');
  options = options || {}; // Duplex streams are both readable and writable, but share
  // the same options object.
  // However, some cases require setting options to different
  // values for the readable and the writable sides of the duplex stream,
  // e.g. options.readableObjectMode vs. options.writableObjectMode, etc.

  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex; // object stream flag to indicate whether or not this stream
  // contains buffers or objects.

  this.objectMode = !!options.objectMode;
  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode; // the point at which write() starts returning false
  // Note: 0 is a valid value, means that we always return false if
  // the entire buffer is not flushed immediately on write()

  this.highWaterMark = getHighWaterMark(this, options, 'writableHighWaterMark', isDuplex); // if _final has been called

  this.finalCalled = false; // drain event flag.

  this.needDrain = false; // at the start of calling end()

  this.ending = false; // when end() has been called, and returned

  this.ended = false; // when 'finish' is emitted

  this.finished = false; // has it been destroyed

  this.destroyed = false; // should we decode strings into buffers before passing to _write?
  // this is here so that some node-core streams can optimize string
  // handling at a lower level.

  var noDecode = options.decodeStrings === false;
  this.decodeStrings = !noDecode; // Crypto is kind of old and crusty.  Historically, its default string
  // encoding is 'binary' so we have to make this configurable.
  // Everything else in the universe uses 'utf8', though.

  this.defaultEncoding = options.defaultEncoding || 'utf8'; // not an actual buffer we keep track of, but a measurement
  // of how much we're waiting to get pushed to some underlying
  // socket or file.

  this.length = 0; // a flag to see when we're in the middle of a write.

  this.writing = false; // when true all writes will be buffered until .uncork() call

  this.corked = 0; // a flag to be able to tell if the onwrite cb is called immediately,
  // or on a later tick.  We set this to true at first, because any
  // actions that shouldn't happen until "later" should generally also
  // not happen before the first write call.

  this.sync = true; // a flag to know if we're processing previously buffered items, which
  // may call the _write() callback in the same tick, so that we don't
  // end up in an overlapped onwrite situation.

  this.bufferProcessing = false; // the callback that's passed to _write(chunk,cb)

  this.onwrite = function (er) {
    onwrite(stream, er);
  }; // the callback that the user supplies to write(chunk,encoding,cb)


  this.writecb = null; // the amount that is being written when _write is called.

  this.writelen = 0;
  this.bufferedRequest = null;
  this.lastBufferedRequest = null; // number of pending user-supplied write callbacks
  // this must be 0 before 'finish' can be emitted

  this.pendingcb = 0; // emit prefinish if the only thing we're waiting for is _write cbs
  // This is relevant for synchronous Transform streams

  this.prefinished = false; // True if the error was already emitted and should not be thrown again

  this.errorEmitted = false; // Should close be emitted on destroy. Defaults to true.

  this.emitClose = options.emitClose !== false; // Should .destroy() be called after 'finish' (and potentially 'end')

  this.autoDestroy = !!options.autoDestroy; // count buffered requests

  this.bufferedRequestCount = 0; // allocate the first CorkedRequest, there is always
  // one allocated and free to use, and we maintain at most two

  this.corkedRequestsFree = new CorkedRequest(this);
}

WritableState.prototype.getBuffer = function getBuffer() {
  var current = this.bufferedRequest;
  var out = [];

  while (current) {
    out.push(current);
    current = current.next;
  }

  return out;
};

(function () {
  try {
    Object.defineProperty(WritableState.prototype, 'buffer', {
      get: internalUtil.deprecate(function writableStateBufferGetter() {
        return this.getBuffer();
      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')
    });
  } catch (_) {}
})(); // Test _writableState for inheritance to account for Duplex streams,
// whose prototype chain only points to Readable.


var realHasInstance;

if (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {
  realHasInstance = Function.prototype[Symbol.hasInstance];
  Object.defineProperty(Writable, Symbol.hasInstance, {
    value: function value(object) {
      if (realHasInstance.call(this, object)) return true;
      if (this !== Writable) return false;
      return object && object._writableState instanceof WritableState;
    }
  });
} else {
  realHasInstance = function realHasInstance(object) {
    return object instanceof this;
  };
}

function Writable(options) {
  Duplex = Duplex || require('./_stream_duplex'); // Writable ctor is applied to Duplexes, too.
  // `realHasInstance` is necessary because using plain `instanceof`
  // would return false, as no `_writableState` property is attached.
  // Trying to use the custom `instanceof` for Writable here will also break the
  // Node.js LazyTransform implementation, which has a non-trivial getter for
  // `_writableState` that would lead to infinite recursion.
  // Checking for a Stream.Duplex instance is faster here instead of inside
  // the WritableState constructor, at least with V8 6.5

  var isDuplex = this instanceof Duplex;
  if (!isDuplex && !realHasInstance.call(Writable, this)) return new Writable(options);
  this._writableState = new WritableState(options, this, isDuplex); // legacy.

  this.writable = true;

  if (options) {
    if (typeof options.write === 'function') this._write = options.write;
    if (typeof options.writev === 'function') this._writev = options.writev;
    if (typeof options.destroy === 'function') this._destroy = options.destroy;
    if (typeof options.final === 'function') this._final = options.final;
  }

  Stream.call(this);
} // Otherwise people can pipe Writable streams, which is just wrong.


Writable.prototype.pipe = function () {
  errorOrDestroy(this, new ERR_STREAM_CANNOT_PIPE());
};

function writeAfterEnd(stream, cb) {
  var er = new ERR_STREAM_WRITE_AFTER_END(); // TODO: defer error events consistently everywhere, not just the cb

  errorOrDestroy(stream, er);
  process.nextTick(cb, er);
} // Checks that a user-supplied chunk is valid, especially for the particular
// mode the stream is in. Currently this means that `null` is never accepted
// and undefined/non-string values are only allowed in object mode.


function validChunk(stream, state, chunk, cb) {
  var er;

  if (chunk === null) {
    er = new ERR_STREAM_NULL_VALUES();
  } else if (typeof chunk !== 'string' && !state.objectMode) {
    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer'], chunk);
  }

  if (er) {
    errorOrDestroy(stream, er);
    process.nextTick(cb, er);
    return false;
  }

  return true;
}

Writable.prototype.write = function (chunk, encoding, cb) {
  var state = this._writableState;
  var ret = false;

  var isBuf = !state.objectMode && _isUint8Array(chunk);

  if (isBuf && !Buffer.isBuffer(chunk)) {
    chunk = _uint8ArrayToBuffer(chunk);
  }

  if (typeof encoding === 'function') {
    cb = encoding;
    encoding = null;
  }

  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;
  if (typeof cb !== 'function') cb = nop;
  if (state.ending) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {
    state.pendingcb++;
    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);
  }
  return ret;
};

Writable.prototype.cork = function () {
  this._writableState.corked++;
};

Writable.prototype.uncork = function () {
  var state = this._writableState;

  if (state.corked) {
    state.corked--;
    if (!state.writing && !state.corked && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);
  }
};

Writable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {
  // node::ParseEncoding() requires lower case.
  if (typeof encoding === 'string') encoding = encoding.toLowerCase();
  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new ERR_UNKNOWN_ENCODING(encoding);
  this._writableState.defaultEncoding = encoding;
  return this;
};

Object.defineProperty(Writable.prototype, 'writableBuffer', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._writableState && this._writableState.getBuffer();
  }
});

function decodeChunk(state, chunk, encoding) {
  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {
    chunk = Buffer.from(chunk, encoding);
  }

  return chunk;
}

Object.defineProperty(Writable.prototype, 'writableHighWaterMark', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._writableState.highWaterMark;
  }
}); // if we're already writing something, then just put this
// in the queue, and wait our turn.  Otherwise, call _write
// If we return false, then we need a drain event, so set that flag.

function writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {
  if (!isBuf) {
    var newChunk = decodeChunk(state, chunk, encoding);

    if (chunk !== newChunk) {
      isBuf = true;
      encoding = 'buffer';
      chunk = newChunk;
    }
  }

  var len = state.objectMode ? 1 : chunk.length;
  state.length += len;
  var ret = state.length < state.highWaterMark; // we must ensure that previous needDrain will not be reset to false.

  if (!ret) state.needDrain = true;

  if (state.writing || state.corked) {
    var last = state.lastBufferedRequest;
    state.lastBufferedRequest = {
      chunk: chunk,
      encoding: encoding,
      isBuf: isBuf,
      callback: cb,
      next: null
    };

    if (last) {
      last.next = state.lastBufferedRequest;
    } else {
      state.bufferedRequest = state.lastBufferedRequest;
    }

    state.bufferedRequestCount += 1;
  } else {
    doWrite(stream, state, false, len, chunk, encoding, cb);
  }

  return ret;
}

function doWrite(stream, state, writev, len, chunk, encoding, cb) {
  state.writelen = len;
  state.writecb = cb;
  state.writing = true;
  state.sync = true;
  if (state.destroyed) state.onwrite(new ERR_STREAM_DESTROYED('write'));else if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);
  state.sync = false;
}

function onwriteError(stream, state, sync, er, cb) {
  --state.pendingcb;

  if (sync) {
    // defer the callback if we are being called synchronously
    // to avoid piling up things on the stack
    process.nextTick(cb, er); // this can emit finish, and it will always happen
    // after error

    process.nextTick(finishMaybe, stream, state);
    stream._writableState.errorEmitted = true;
    errorOrDestroy(stream, er);
  } else {
    // the caller expect this to happen before if
    // it is async
    cb(er);
    stream._writableState.errorEmitted = true;
    errorOrDestroy(stream, er); // this can emit finish, but finish must
    // always follow error

    finishMaybe(stream, state);
  }
}

function onwriteStateUpdate(state) {
  state.writing = false;
  state.writecb = null;
  state.length -= state.writelen;
  state.writelen = 0;
}

function onwrite(stream, er) {
  var state = stream._writableState;
  var sync = state.sync;
  var cb = state.writecb;
  if (typeof cb !== 'function') throw new ERR_MULTIPLE_CALLBACK();
  onwriteStateUpdate(state);
  if (er) onwriteError(stream, state, sync, er, cb);else {
    // Check if we're actually ready to finish, but don't emit yet
    var finished = needFinish(state) || stream.destroyed;

    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {
      clearBuffer(stream, state);
    }

    if (sync) {
      process.nextTick(afterWrite, stream, state, finished, cb);
    } else {
      afterWrite(stream, state, finished, cb);
    }
  }
}

function afterWrite(stream, state, finished, cb) {
  if (!finished) onwriteDrain(stream, state);
  state.pendingcb--;
  cb();
  finishMaybe(stream, state);
} // Must force callback to be called on nextTick, so that we don't
// emit 'drain' before the write() consumer gets the 'false' return
// value, and has a chance to attach a 'drain' listener.


function onwriteDrain(stream, state) {
  if (state.length === 0 && state.needDrain) {
    state.needDrain = false;
    stream.emit('drain');
  }
} // if there's something in the buffer waiting, then process it


function clearBuffer(stream, state) {
  state.bufferProcessing = true;
  var entry = state.bufferedRequest;

  if (stream._writev && entry && entry.next) {
    // Fast case, write everything using _writev()
    var l = state.bufferedRequestCount;
    var buffer = new Array(l);
    var holder = state.corkedRequestsFree;
    holder.entry = entry;
    var count = 0;
    var allBuffers = true;

    while (entry) {
      buffer[count] = entry;
      if (!entry.isBuf) allBuffers = false;
      entry = entry.next;
      count += 1;
    }

    buffer.allBuffers = allBuffers;
    doWrite(stream, state, true, state.length, buffer, '', holder.finish); // doWrite is almost always async, defer these to save a bit of time
    // as the hot path ends with doWrite

    state.pendingcb++;
    state.lastBufferedRequest = null;

    if (holder.next) {
      state.corkedRequestsFree = holder.next;
      holder.next = null;
    } else {
      state.corkedRequestsFree = new CorkedRequest(state);
    }

    state.bufferedRequestCount = 0;
  } else {
    // Slow case, write chunks one-by-one
    while (entry) {
      var chunk = entry.chunk;
      var encoding = entry.encoding;
      var cb = entry.callback;
      var len = state.objectMode ? 1 : chunk.length;
      doWrite(stream, state, false, len, chunk, encoding, cb);
      entry = entry.next;
      state.bufferedRequestCount--; // if we didn't call the onwrite immediately, then
      // it means that we need to wait until it does.
      // also, that means that the chunk and cb are currently
      // being processed, so move the buffer counter past them.

      if (state.writing) {
        break;
      }
    }

    if (entry === null) state.lastBufferedRequest = null;
  }

  state.bufferedRequest = entry;
  state.bufferProcessing = false;
}

Writable.prototype._write = function (chunk, encoding, cb) {
  cb(new ERR_METHOD_NOT_IMPLEMENTED('_write()'));
};

Writable.prototype._writev = null;

Writable.prototype.end = function (chunk, encoding, cb) {
  var state = this._writableState;

  if (typeof chunk === 'function') {
    cb = chunk;
    chunk = null;
    encoding = null;
  } else if (typeof encoding === 'function') {
    cb = encoding;
    encoding = null;
  }

  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding); // .end() fully uncorks

  if (state.corked) {
    state.corked = 1;
    this.uncork();
  } // ignore unnecessary end() calls.


  if (!state.ending) endWritable(this, state, cb);
  return this;
};

Object.defineProperty(Writable.prototype, 'writableLength', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._writableState.length;
  }
});

function needFinish(state) {
  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;
}

function callFinal(stream, state) {
  stream._final(function (err) {
    state.pendingcb--;

    if (err) {
      errorOrDestroy(stream, err);
    }

    state.prefinished = true;
    stream.emit('prefinish');
    finishMaybe(stream, state);
  });
}

function prefinish(stream, state) {
  if (!state.prefinished && !state.finalCalled) {
    if (typeof stream._final === 'function' && !state.destroyed) {
      state.pendingcb++;
      state.finalCalled = true;
      process.nextTick(callFinal, stream, state);
    } else {
      state.prefinished = true;
      stream.emit('prefinish');
    }
  }
}

function finishMaybe(stream, state) {
  var need = needFinish(state);

  if (need) {
    prefinish(stream, state);

    if (state.pendingcb === 0) {
      state.finished = true;
      stream.emit('finish');

      if (state.autoDestroy) {
        // In case of duplex streams we need a way to detect
        // if the readable side is ready for autoDestroy as well
        var rState = stream._readableState;

        if (!rState || rState.autoDestroy && rState.endEmitted) {
          stream.destroy();
        }
      }
    }
  }

  return need;
}

function endWritable(stream, state, cb) {
  state.ending = true;
  finishMaybe(stream, state);

  if (cb) {
    if (state.finished) process.nextTick(cb);else stream.once('finish', cb);
  }

  state.ended = true;
  stream.writable = false;
}

function onCorkedFinish(corkReq, state, err) {
  var entry = corkReq.entry;
  corkReq.entry = null;

  while (entry) {
    var cb = entry.callback;
    state.pendingcb--;
    cb(err);
    entry = entry.next;
  } // reuse the free corkReq.


  state.corkedRequestsFree.next = corkReq;
}

Object.defineProperty(Writable.prototype, 'destroyed', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    if (this._writableState === undefined) {
      return false;
    }

    return this._writableState.destroyed;
  },
  set: function set(value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (!this._writableState) {
      return;
    } // backward compatibility, the user is explicitly
    // managing destroyed


    this._writableState.destroyed = value;
  }
});
Writable.prototype.destroy = destroyImpl.destroy;
Writable.prototype._undestroy = destroyImpl.undestroy;

Writable.prototype._destroy = function (err, cb) {
  cb(err);
};
}).call(this)}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"../errors":101,"./_stream_duplex":102,"./internal/streams/destroy":109,"./internal/streams/state":113,"./internal/streams/stream":114,"_process":207,"buffer":97,"inherits":201,"util-deprecate":225}],107:[function(require,module,exports){
(function (process){(function (){
'use strict';

var _Object$setPrototypeO;

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var finished = require('./end-of-stream');

var kLastResolve = Symbol('lastResolve');
var kLastReject = Symbol('lastReject');
var kError = Symbol('error');
var kEnded = Symbol('ended');
var kLastPromise = Symbol('lastPromise');
var kHandlePromise = Symbol('handlePromise');
var kStream = Symbol('stream');

function createIterResult(value, done) {
  return {
    value: value,
    done: done
  };
}

function readAndResolve(iter) {
  var resolve = iter[kLastResolve];

  if (resolve !== null) {
    var data = iter[kStream].read(); // we defer if data is null
    // we can be expecting either 'end' or
    // 'error'

    if (data !== null) {
      iter[kLastPromise] = null;
      iter[kLastResolve] = null;
      iter[kLastReject] = null;
      resolve(createIterResult(data, false));
    }
  }
}

function onReadable(iter) {
  // we wait for the next tick, because it might
  // emit an error with process.nextTick
  process.nextTick(readAndResolve, iter);
}

function wrapForNext(lastPromise, iter) {
  return function (resolve, reject) {
    lastPromise.then(function () {
      if (iter[kEnded]) {
        resolve(createIterResult(undefined, true));
        return;
      }

      iter[kHandlePromise](resolve, reject);
    }, reject);
  };
}

var AsyncIteratorPrototype = Object.getPrototypeOf(function () {});
var ReadableStreamAsyncIteratorPrototype = Object.setPrototypeOf((_Object$setPrototypeO = {
  get stream() {
    return this[kStream];
  },

  next: function next() {
    var _this = this;

    // if we have detected an error in the meanwhile
    // reject straight away
    var error = this[kError];

    if (error !== null) {
      return Promise.reject(error);
    }

    if (this[kEnded]) {
      return Promise.resolve(createIterResult(undefined, true));
    }

    if (this[kStream].destroyed) {
      // We need to defer via nextTick because if .destroy(err) is
      // called, the error will be emitted via nextTick, and
      // we cannot guarantee that there is no error lingering around
      // waiting to be emitted.
      return new Promise(function (resolve, reject) {
        process.nextTick(function () {
          if (_this[kError]) {
            reject(_this[kError]);
          } else {
            resolve(createIterResult(undefined, true));
          }
        });
      });
    } // if we have multiple next() calls
    // we will wait for the previous Promise to finish
    // this logic is optimized to support for await loops,
    // where next() is only called once at a time


    var lastPromise = this[kLastPromise];
    var promise;

    if (lastPromise) {
      promise = new Promise(wrapForNext(lastPromise, this));
    } else {
      // fast path needed to support multiple this.push()
      // without triggering the next() queue
      var data = this[kStream].read();

      if (data !== null) {
        return Promise.resolve(createIterResult(data, false));
      }

      promise = new Promise(this[kHandlePromise]);
    }

    this[kLastPromise] = promise;
    return promise;
  }
}, _defineProperty(_Object$setPrototypeO, Symbol.asyncIterator, function () {
  return this;
}), _defineProperty(_Object$setPrototypeO, "return", function _return() {
  var _this2 = this;

  // destroy(err, cb) is a private API
  // we can guarantee we have that here, because we control the
  // Readable class this is attached to
  return new Promise(function (resolve, reject) {
    _this2[kStream].destroy(null, function (err) {
      if (err) {
        reject(err);
        return;
      }

      resolve(createIterResult(undefined, true));
    });
  });
}), _Object$setPrototypeO), AsyncIteratorPrototype);

var createReadableStreamAsyncIterator = function createReadableStreamAsyncIterator(stream) {
  var _Object$create;

  var iterator = Object.create(ReadableStreamAsyncIteratorPrototype, (_Object$create = {}, _defineProperty(_Object$create, kStream, {
    value: stream,
    writable: true
  }), _defineProperty(_Object$create, kLastResolve, {
    value: null,
    writable: true
  }), _defineProperty(_Object$create, kLastReject, {
    value: null,
    writable: true
  }), _defineProperty(_Object$create, kError, {
    value: null,
    writable: true
  }), _defineProperty(_Object$create, kEnded, {
    value: stream._readableState.endEmitted,
    writable: true
  }), _defineProperty(_Object$create, kHandlePromise, {
    value: function value(resolve, reject) {
      var data = iterator[kStream].read();

      if (data) {
        iterator[kLastPromise] = null;
        iterator[kLastResolve] = null;
        iterator[kLastReject] = null;
        resolve(createIterResult(data, false));
      } else {
        iterator[kLastResolve] = resolve;
        iterator[kLastReject] = reject;
      }
    },
    writable: true
  }), _Object$create));
  iterator[kLastPromise] = null;
  finished(stream, function (err) {
    if (err && err.code !== 'ERR_STREAM_PREMATURE_CLOSE') {
      var reject = iterator[kLastReject]; // reject if we are waiting for data in the Promise
      // returned by next() and store the error

      if (reject !== null) {
        iterator[kLastPromise] = null;
        iterator[kLastResolve] = null;
        iterator[kLastReject] = null;
        reject(err);
      }

      iterator[kError] = err;
      return;
    }

    var resolve = iterator[kLastResolve];

    if (resolve !== null) {
      iterator[kLastPromise] = null;
      iterator[kLastResolve] = null;
      iterator[kLastReject] = null;
      resolve(createIterResult(undefined, true));
    }

    iterator[kEnded] = true;
  });
  stream.on('readable', onReadable.bind(null, iterator));
  return iterator;
};

module.exports = createReadableStreamAsyncIterator;
}).call(this)}).call(this,require('_process'))
},{"./end-of-stream":110,"_process":207}],108:[function(require,module,exports){
'use strict';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var _require = require('buffer'),
    Buffer = _require.Buffer;

var _require2 = require('util'),
    inspect = _require2.inspect;

var custom = inspect && inspect.custom || 'inspect';

function copyBuffer(src, target, offset) {
  Buffer.prototype.copy.call(src, target, offset);
}

module.exports =
/*#__PURE__*/
function () {
  function BufferList() {
    _classCallCheck(this, BufferList);

    this.head = null;
    this.tail = null;
    this.length = 0;
  }

  _createClass(BufferList, [{
    key: "push",
    value: function push(v) {
      var entry = {
        data: v,
        next: null
      };
      if (this.length > 0) this.tail.next = entry;else this.head = entry;
      this.tail = entry;
      ++this.length;
    }
  }, {
    key: "unshift",
    value: function unshift(v) {
      var entry = {
        data: v,
        next: this.head
      };
      if (this.length === 0) this.tail = entry;
      this.head = entry;
      ++this.length;
    }
  }, {
    key: "shift",
    value: function shift() {
      if (this.length === 0) return;
      var ret = this.head.data;
      if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;
      --this.length;
      return ret;
    }
  }, {
    key: "clear",
    value: function clear() {
      this.head = this.tail = null;
      this.length = 0;
    }
  }, {
    key: "join",
    value: function join(s) {
      if (this.length === 0) return '';
      var p = this.head;
      var ret = '' + p.data;

      while (p = p.next) {
        ret += s + p.data;
      }

      return ret;
    }
  }, {
    key: "concat",
    value: function concat(n) {
      if (this.length === 0) return Buffer.alloc(0);
      var ret = Buffer.allocUnsafe(n >>> 0);
      var p = this.head;
      var i = 0;

      while (p) {
        copyBuffer(p.data, ret, i);
        i += p.data.length;
        p = p.next;
      }

      return ret;
    } // Consumes a specified amount of bytes or characters from the buffered data.

  }, {
    key: "consume",
    value: function consume(n, hasStrings) {
      var ret;

      if (n < this.head.data.length) {
        // `slice` is the same for buffers and strings.
        ret = this.head.data.slice(0, n);
        this.head.data = this.head.data.slice(n);
      } else if (n === this.head.data.length) {
        // First chunk is a perfect match.
        ret = this.shift();
      } else {
        // Result spans more than one buffer.
        ret = hasStrings ? this._getString(n) : this._getBuffer(n);
      }

      return ret;
    }
  }, {
    key: "first",
    value: function first() {
      return this.head.data;
    } // Consumes a specified amount of characters from the buffered data.

  }, {
    key: "_getString",
    value: function _getString(n) {
      var p = this.head;
      var c = 1;
      var ret = p.data;
      n -= ret.length;

      while (p = p.next) {
        var str = p.data;
        var nb = n > str.length ? str.length : n;
        if (nb === str.length) ret += str;else ret += str.slice(0, n);
        n -= nb;

        if (n === 0) {
          if (nb === str.length) {
            ++c;
            if (p.next) this.head = p.next;else this.head = this.tail = null;
          } else {
            this.head = p;
            p.data = str.slice(nb);
          }

          break;
        }

        ++c;
      }

      this.length -= c;
      return ret;
    } // Consumes a specified amount of bytes from the buffered data.

  }, {
    key: "_getBuffer",
    value: function _getBuffer(n) {
      var ret = Buffer.allocUnsafe(n);
      var p = this.head;
      var c = 1;
      p.data.copy(ret);
      n -= p.data.length;

      while (p = p.next) {
        var buf = p.data;
        var nb = n > buf.length ? buf.length : n;
        buf.copy(ret, ret.length - n, 0, nb);
        n -= nb;

        if (n === 0) {
          if (nb === buf.length) {
            ++c;
            if (p.next) this.head = p.next;else this.head = this.tail = null;
          } else {
            this.head = p;
            p.data = buf.slice(nb);
          }

          break;
        }

        ++c;
      }

      this.length -= c;
      return ret;
    } // Make sure the linked list only shows the minimal necessary information.

  }, {
    key: custom,
    value: function value(_, options) {
      return inspect(this, _objectSpread({}, options, {
        // Only inspect one level.
        depth: 0,
        // It should not recurse.
        customInspect: false
      }));
    }
  }]);

  return BufferList;
}();
},{"buffer":97,"util":95}],109:[function(require,module,exports){
(function (process){(function (){
'use strict'; // undocumented cb() API, needed for core, not for public API

function destroy(err, cb) {
  var _this = this;

  var readableDestroyed = this._readableState && this._readableState.destroyed;
  var writableDestroyed = this._writableState && this._writableState.destroyed;

  if (readableDestroyed || writableDestroyed) {
    if (cb) {
      cb(err);
    } else if (err) {
      if (!this._writableState) {
        process.nextTick(emitErrorNT, this, err);
      } else if (!this._writableState.errorEmitted) {
        this._writableState.errorEmitted = true;
        process.nextTick(emitErrorNT, this, err);
      }
    }

    return this;
  } // we set destroyed to true before firing error callbacks in order
  // to make it re-entrance safe in case destroy() is called within callbacks


  if (this._readableState) {
    this._readableState.destroyed = true;
  } // if this is a duplex stream mark the writable part as destroyed as well


  if (this._writableState) {
    this._writableState.destroyed = true;
  }

  this._destroy(err || null, function (err) {
    if (!cb && err) {
      if (!_this._writableState) {
        process.nextTick(emitErrorAndCloseNT, _this, err);
      } else if (!_this._writableState.errorEmitted) {
        _this._writableState.errorEmitted = true;
        process.nextTick(emitErrorAndCloseNT, _this, err);
      } else {
        process.nextTick(emitCloseNT, _this);
      }
    } else if (cb) {
      process.nextTick(emitCloseNT, _this);
      cb(err);
    } else {
      process.nextTick(emitCloseNT, _this);
    }
  });

  return this;
}

function emitErrorAndCloseNT(self, err) {
  emitErrorNT(self, err);
  emitCloseNT(self);
}

function emitCloseNT(self) {
  if (self._writableState && !self._writableState.emitClose) return;
  if (self._readableState && !self._readableState.emitClose) return;
  self.emit('close');
}

function undestroy() {
  if (this._readableState) {
    this._readableState.destroyed = false;
    this._readableState.reading = false;
    this._readableState.ended = false;
    this._readableState.endEmitted = false;
  }

  if (this._writableState) {
    this._writableState.destroyed = false;
    this._writableState.ended = false;
    this._writableState.ending = false;
    this._writableState.finalCalled = false;
    this._writableState.prefinished = false;
    this._writableState.finished = false;
    this._writableState.errorEmitted = false;
  }
}

function emitErrorNT(self, err) {
  self.emit('error', err);
}

function errorOrDestroy(stream, err) {
  // We have tests that rely on errors being emitted
  // in the same tick, so changing this is semver major.
  // For now when you opt-in to autoDestroy we allow
  // the error to be emitted nextTick. In a future
  // semver major update we should change the default to this.
  var rState = stream._readableState;
  var wState = stream._writableState;
  if (rState && rState.autoDestroy || wState && wState.autoDestroy) stream.destroy(err);else stream.emit('error', err);
}

module.exports = {
  destroy: destroy,
  undestroy: undestroy,
  errorOrDestroy: errorOrDestroy
};
}).call(this)}).call(this,require('_process'))
},{"_process":207}],110:[function(require,module,exports){
// Ported from https://github.com/mafintosh/end-of-stream with
// permission from the author, Mathias Buus (@mafintosh).
'use strict';

var ERR_STREAM_PREMATURE_CLOSE = require('../../../errors').codes.ERR_STREAM_PREMATURE_CLOSE;

function once(callback) {
  var called = false;
  return function () {
    if (called) return;
    called = true;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    callback.apply(this, args);
  };
}

function noop() {}

function isRequest(stream) {
  return stream.setHeader && typeof stream.abort === 'function';
}

function eos(stream, opts, callback) {
  if (typeof opts === 'function') return eos(stream, null, opts);
  if (!opts) opts = {};
  callback = once(callback || noop);
  var readable = opts.readable || opts.readable !== false && stream.readable;
  var writable = opts.writable || opts.writable !== false && stream.writable;

  var onlegacyfinish = function onlegacyfinish() {
    if (!stream.writable) onfinish();
  };

  var writableEnded = stream._writableState && stream._writableState.finished;

  var onfinish = function onfinish() {
    writable = false;
    writableEnded = true;
    if (!readable) callback.call(stream);
  };

  var readableEnded = stream._readableState && stream._readableState.endEmitted;

  var onend = function onend() {
    readable = false;
    readableEnded = true;
    if (!writable) callback.call(stream);
  };

  var onerror = function onerror(err) {
    callback.call(stream, err);
  };

  var onclose = function onclose() {
    var err;

    if (readable && !readableEnded) {
      if (!stream._readableState || !stream._readableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();
      return callback.call(stream, err);
    }

    if (writable && !writableEnded) {
      if (!stream._writableState || !stream._writableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();
      return callback.call(stream, err);
    }
  };

  var onrequest = function onrequest() {
    stream.req.on('finish', onfinish);
  };

  if (isRequest(stream)) {
    stream.on('complete', onfinish);
    stream.on('abort', onclose);
    if (stream.req) onrequest();else stream.on('request', onrequest);
  } else if (writable && !stream._writableState) {
    // legacy streams
    stream.on('end', onlegacyfinish);
    stream.on('close', onlegacyfinish);
  }

  stream.on('end', onend);
  stream.on('finish', onfinish);
  if (opts.error !== false) stream.on('error', onerror);
  stream.on('close', onclose);
  return function () {
    stream.removeListener('complete', onfinish);
    stream.removeListener('abort', onclose);
    stream.removeListener('request', onrequest);
    if (stream.req) stream.req.removeListener('finish', onfinish);
    stream.removeListener('end', onlegacyfinish);
    stream.removeListener('close', onlegacyfinish);
    stream.removeListener('finish', onfinish);
    stream.removeListener('end', onend);
    stream.removeListener('error', onerror);
    stream.removeListener('close', onclose);
  };
}

module.exports = eos;
},{"../../../errors":101}],111:[function(require,module,exports){
module.exports = function () {
  throw new Error('Readable.from is not available in the browser')
};

},{}],112:[function(require,module,exports){
// Ported from https://github.com/mafintosh/pump with
// permission from the author, Mathias Buus (@mafintosh).
'use strict';

var eos;

function once(callback) {
  var called = false;
  return function () {
    if (called) return;
    called = true;
    callback.apply(void 0, arguments);
  };
}

var _require$codes = require('../../../errors').codes,
    ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS,
    ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED;

function noop(err) {
  // Rethrow the error if it exists to avoid swallowing it
  if (err) throw err;
}

function isRequest(stream) {
  return stream.setHeader && typeof stream.abort === 'function';
}

function destroyer(stream, reading, writing, callback) {
  callback = once(callback);
  var closed = false;
  stream.on('close', function () {
    closed = true;
  });
  if (eos === undefined) eos = require('./end-of-stream');
  eos(stream, {
    readable: reading,
    writable: writing
  }, function (err) {
    if (err) return callback(err);
    closed = true;
    callback();
  });
  var destroyed = false;
  return function (err) {
    if (closed) return;
    if (destroyed) return;
    destroyed = true; // request.destroy just do .end - .abort is what we want

    if (isRequest(stream)) return stream.abort();
    if (typeof stream.destroy === 'function') return stream.destroy();
    callback(err || new ERR_STREAM_DESTROYED('pipe'));
  };
}

function call(fn) {
  fn();
}

function pipe(from, to) {
  return from.pipe(to);
}

function popCallback(streams) {
  if (!streams.length) return noop;
  if (typeof streams[streams.length - 1] !== 'function') return noop;
  return streams.pop();
}

function pipeline() {
  for (var _len = arguments.length, streams = new Array(_len), _key = 0; _key < _len; _key++) {
    streams[_key] = arguments[_key];
  }

  var callback = popCallback(streams);
  if (Array.isArray(streams[0])) streams = streams[0];

  if (streams.length < 2) {
    throw new ERR_MISSING_ARGS('streams');
  }

  var error;
  var destroys = streams.map(function (stream, i) {
    var reading = i < streams.length - 1;
    var writing = i > 0;
    return destroyer(stream, reading, writing, function (err) {
      if (!error) error = err;
      if (err) destroys.forEach(call);
      if (reading) return;
      destroys.forEach(call);
      callback(error);
    });
  });
  return streams.reduce(pipe);
}

module.exports = pipeline;
},{"../../../errors":101,"./end-of-stream":110}],113:[function(require,module,exports){
'use strict';

var ERR_INVALID_OPT_VALUE = require('../../../errors').codes.ERR_INVALID_OPT_VALUE;

function highWaterMarkFrom(options, isDuplex, duplexKey) {
  return options.highWaterMark != null ? options.highWaterMark : isDuplex ? options[duplexKey] : null;
}

function getHighWaterMark(state, options, duplexKey, isDuplex) {
  var hwm = highWaterMarkFrom(options, isDuplex, duplexKey);

  if (hwm != null) {
    if (!(isFinite(hwm) && Math.floor(hwm) === hwm) || hwm < 0) {
      var name = isDuplex ? duplexKey : 'highWaterMark';
      throw new ERR_INVALID_OPT_VALUE(name, hwm);
    }

    return Math.floor(hwm);
  } // Default value


  return state.objectMode ? 16 : 16 * 1024;
}

module.exports = {
  getHighWaterMark: getHighWaterMark
};
},{"../../../errors":101}],114:[function(require,module,exports){
module.exports = require('events').EventEmitter;

},{"events":98}],115:[function(require,module,exports){
'use strict';

var GetIntrinsic = require('get-intrinsic');

var callBind = require('./');

var $indexOf = callBind(GetIntrinsic('String.prototype.indexOf'));

module.exports = function callBoundIntrinsic(name, allowMissing) {
	var intrinsic = GetIntrinsic(name, !!allowMissing);
	if (typeof intrinsic === 'function' && $indexOf(name, '.prototype.') > -1) {
		return callBind(intrinsic);
	}
	return intrinsic;
};

},{"./":116,"get-intrinsic":191}],116:[function(require,module,exports){
'use strict';

var bind = require('function-bind');
var GetIntrinsic = require('get-intrinsic');
var setFunctionLength = require('set-function-length');

var $TypeError = require('es-errors/type');
var $apply = GetIntrinsic('%Function.prototype.apply%');
var $call = GetIntrinsic('%Function.prototype.call%');
var $reflectApply = GetIntrinsic('%Reflect.apply%', true) || bind.call($call, $apply);

var $defineProperty = require('es-define-property');
var $max = GetIntrinsic('%Math.max%');

module.exports = function callBind(originalFunction) {
	if (typeof originalFunction !== 'function') {
		throw new $TypeError('a function is required');
	}
	var func = $reflectApply(bind, $call, arguments);
	return setFunctionLength(
		func,
		1 + $max(0, originalFunction.length - (arguments.length - 1)),
		true
	);
};

var applyBind = function applyBind() {
	return $reflectApply(bind, $apply, arguments);
};

if ($defineProperty) {
	$defineProperty(module.exports, 'apply', { value: applyBind });
} else {
	module.exports.apply = applyBind;
}

},{"es-define-property":176,"es-errors/type":182,"function-bind":190,"get-intrinsic":191,"set-function-length":211}],117:[function(require,module,exports){
var pSlice = Array.prototype.slice;
var objectKeys = require('./lib/keys.js');
var isArguments = require('./lib/is_arguments.js');

var deepEqual = module.exports = function (actual, expected, opts) {
  if (!opts) opts = {};
  // 7.1. All identical values are equivalent, as determined by ===.
  if (actual === expected) {
    return true;

  } else if (actual instanceof Date && expected instanceof Date) {
    return actual.getTime() === expected.getTime();

  // 7.3. Other pairs that do not both pass typeof value == 'object',
  // equivalence is determined by ==.
  } else if (!actual || !expected || typeof actual != 'object' && typeof expected != 'object') {
    return opts.strict ? actual === expected : actual == expected;

  // 7.4. For all other Object pairs, including Array objects, equivalence is
  // determined by having the same number of owned properties (as verified
  // with Object.prototype.hasOwnProperty.call), the same set of keys
  // (although not necessarily the same order), equivalent values for every
  // corresponding key, and an identical 'prototype' property. Note: this
  // accounts for both named and indexed properties on Arrays.
  } else {
    return objEquiv(actual, expected, opts);
  }
}

function isUndefinedOrNull(value) {
  return value === null || value === undefined;
}

function isBuffer (x) {
  if (!x || typeof x !== 'object' || typeof x.length !== 'number') return false;
  if (typeof x.copy !== 'function' || typeof x.slice !== 'function') {
    return false;
  }
  if (x.length > 0 && typeof x[0] !== 'number') return false;
  return true;
}

function objEquiv(a, b, opts) {
  var i, key;
  if (isUndefinedOrNull(a) || isUndefinedOrNull(b))
    return false;
  // an identical 'prototype' property.
  if (a.prototype !== b.prototype) return false;
  //~~~I've managed to break Object.keys through screwy arguments passing.
  //   Converting to array solves the problem.
  if (isArguments(a)) {
    if (!isArguments(b)) {
      return false;
    }
    a = pSlice.call(a);
    b = pSlice.call(b);
    return deepEqual(a, b, opts);
  }
  if (isBuffer(a)) {
    if (!isBuffer(b)) {
      return false;
    }
    if (a.length !== b.length) return false;
    for (i = 0; i < a.length; i++) {
      if (a[i] !== b[i]) return false;
    }
    return true;
  }
  try {
    var ka = objectKeys(a),
        kb = objectKeys(b);
  } catch (e) {//happens when one is a string literal and the other isn't
    return false;
  }
  // having the same number of owned properties (keys incorporates
  // hasOwnProperty)
  if (ka.length != kb.length)
    return false;
  //the same set of keys (although not necessarily the same order),
  ka.sort();
  kb.sort();
  //~~~cheap key test
  for (i = ka.length - 1; i >= 0; i--) {
    if (ka[i] != kb[i])
      return false;
  }
  //equivalent values for every corresponding key, and
  //~~~possibly expensive deep test
  for (i = ka.length - 1; i >= 0; i--) {
    key = ka[i];
    if (!deepEqual(a[key], b[key], opts)) return false;
  }
  return typeof a === typeof b;
}

},{"./lib/is_arguments.js":118,"./lib/keys.js":119}],118:[function(require,module,exports){
var supportsArgumentsClass = (function(){
  return Object.prototype.toString.call(arguments)
})() == '[object Arguments]';

exports = module.exports = supportsArgumentsClass ? supported : unsupported;

exports.supported = supported;
function supported(object) {
  return Object.prototype.toString.call(object) == '[object Arguments]';
};

exports.unsupported = unsupported;
function unsupported(object){
  return object &&
    typeof object == 'object' &&
    typeof object.length == 'number' &&
    Object.prototype.hasOwnProperty.call(object, 'callee') &&
    !Object.prototype.propertyIsEnumerable.call(object, 'callee') ||
    false;
};

},{}],119:[function(require,module,exports){
exports = module.exports = typeof Object.keys === 'function'
  ? Object.keys : shim;

exports.shim = shim;
function shim (obj) {
  var keys = [];
  for (var key in obj) keys.push(key);
  return keys;
}

},{}],120:[function(require,module,exports){
'use strict';

var $defineProperty = require('es-define-property');

var $SyntaxError = require('es-errors/syntax');
var $TypeError = require('es-errors/type');

var gopd = require('gopd');

/** @type {import('.')} */
module.exports = function defineDataProperty(
	obj,
	property,
	value
) {
	if (!obj || (typeof obj !== 'object' && typeof obj !== 'function')) {
		throw new $TypeError('`obj` must be an object or a function`');
	}
	if (typeof property !== 'string' && typeof property !== 'symbol') {
		throw new $TypeError('`property` must be a string or a symbol`');
	}
	if (arguments.length > 3 && typeof arguments[3] !== 'boolean' && arguments[3] !== null) {
		throw new $TypeError('`nonEnumerable`, if provided, must be a boolean or null');
	}
	if (arguments.length > 4 && typeof arguments[4] !== 'boolean' && arguments[4] !== null) {
		throw new $TypeError('`nonWritable`, if provided, must be a boolean or null');
	}
	if (arguments.length > 5 && typeof arguments[5] !== 'boolean' && arguments[5] !== null) {
		throw new $TypeError('`nonConfigurable`, if provided, must be a boolean or null');
	}
	if (arguments.length > 6 && typeof arguments[6] !== 'boolean') {
		throw new $TypeError('`loose`, if provided, must be a boolean');
	}

	var nonEnumerable = arguments.length > 3 ? arguments[3] : null;
	var nonWritable = arguments.length > 4 ? arguments[4] : null;
	var nonConfigurable = arguments.length > 5 ? arguments[5] : null;
	var loose = arguments.length > 6 ? arguments[6] : false;

	/* @type {false | TypedPropertyDescriptor<unknown>} */
	var desc = !!gopd && gopd(obj, property);

	if ($defineProperty) {
		$defineProperty(obj, property, {
			configurable: nonConfigurable === null && desc ? desc.configurable : !nonConfigurable,
			enumerable: nonEnumerable === null && desc ? desc.enumerable : !nonEnumerable,
			value: value,
			writable: nonWritable === null && desc ? desc.writable : !nonWritable
		});
	} else if (loose || (!nonEnumerable && !nonWritable && !nonConfigurable)) {
		// must fall back to [[Set]], and was not explicitly asked to make non-enumerable, non-writable, or non-configurable
		obj[property] = value; // eslint-disable-line no-param-reassign
	} else {
		throw new $SyntaxError('This environment does not support defining a property as non-configurable, non-writable, or non-enumerable.');
	}
};

},{"es-define-property":176,"es-errors/syntax":181,"es-errors/type":182,"gopd":192}],121:[function(require,module,exports){
'use strict';

var keys = require('object-keys');
var hasSymbols = typeof Symbol === 'function' && typeof Symbol('foo') === 'symbol';

var toStr = Object.prototype.toString;
var concat = Array.prototype.concat;
var defineDataProperty = require('define-data-property');

var isFunction = function (fn) {
	return typeof fn === 'function' && toStr.call(fn) === '[object Function]';
};

var supportsDescriptors = require('has-property-descriptors')();

var defineProperty = function (object, name, value, predicate) {
	if (name in object) {
		if (predicate === true) {
			if (object[name] === value) {
				return;
			}
		} else if (!isFunction(predicate) || !predicate()) {
			return;
		}
	}

	if (supportsDescriptors) {
		defineDataProperty(object, name, value, true);
	} else {
		defineDataProperty(object, name, value);
	}
};

var defineProperties = function (object, map) {
	var predicates = arguments.length > 2 ? arguments[2] : {};
	var props = keys(map);
	if (hasSymbols) {
		props = concat.call(props, Object.getOwnPropertySymbols(map));
	}
	for (var i = 0; i < props.length; i += 1) {
		defineProperty(object, props[i], map[props[i]], predicates[props[i]]);
	}
};

defineProperties.supportsDescriptors = !!supportsDescriptors;

module.exports = defineProperties;

},{"define-data-property":120,"has-property-descriptors":193,"object-keys":205}],122:[function(require,module,exports){
module.exports = function () {
    for (var i = 0; i < arguments.length; i++) {
        if (arguments[i] !== undefined) return arguments[i];
    }
};

},{}],123:[function(require,module,exports){
'use strict';

var ToNumber = require('./ToNumber');
var ToPrimitive = require('./ToPrimitive');
var Type = require('./Type');

// https://262.ecma-international.org/5.1/#sec-11.9.3

module.exports = function AbstractEqualityComparison(x, y) {
	var xType = Type(x);
	var yType = Type(y);
	if (xType === yType) {
		return x === y; // ES6+ specified this shortcut anyways.
	}
	if (x == null && y == null) {
		return true;
	}
	if (xType === 'Number' && yType === 'String') {
		return AbstractEqualityComparison(x, ToNumber(y));
	}
	if (xType === 'String' && yType === 'Number') {
		return AbstractEqualityComparison(ToNumber(x), y);
	}
	if (xType === 'Boolean') {
		return AbstractEqualityComparison(ToNumber(x), y);
	}
	if (yType === 'Boolean') {
		return AbstractEqualityComparison(x, ToNumber(y));
	}
	if ((xType === 'String' || xType === 'Number') && yType === 'Object') {
		return AbstractEqualityComparison(x, ToPrimitive(y));
	}
	if (xType === 'Object' && (yType === 'String' || yType === 'Number')) {
		return AbstractEqualityComparison(ToPrimitive(x), y);
	}
	return false;
};

},{"./ToNumber":154,"./ToPrimitive":156,"./Type":161}],124:[function(require,module,exports){
'use strict';

var GetIntrinsic = require('get-intrinsic');

var $Number = GetIntrinsic('%Number%');
var $TypeError = require('es-errors/type');

var $isNaN = require('../helpers/isNaN');
var $isFinite = require('../helpers/isFinite');
var isPrefixOf = require('../helpers/isPrefixOf');

var ToNumber = require('./ToNumber');
var ToPrimitive = require('./ToPrimitive');

// https://262.ecma-international.org/5.1/#sec-11.8.5

// eslint-disable-next-line max-statements
module.exports = function AbstractRelationalComparison(x, y, LeftFirst) {
	if (typeof LeftFirst !== 'boolean') {
		throw new $TypeError('Assertion failed: LeftFirst argument must be a Boolean');
	}
	var px;
	var py;
	if (LeftFirst) {
		px = ToPrimitive(x, $Number);
		py = ToPrimitive(y, $Number);
	} else {
		py = ToPrimitive(y, $Number);
		px = ToPrimitive(x, $Number);
	}
	var bothStrings = typeof px === 'string' && typeof py === 'string';
	if (!bothStrings) {
		var nx = ToNumber(px);
		var ny = ToNumber(py);
		if ($isNaN(nx) || $isNaN(ny)) {
			return undefined;
		}
		if ($isFinite(nx) && $isFinite(ny) && nx === ny) {
			return false;
		}
		if (nx === Infinity) {
			return false;
		}
		if (ny === Infinity) {
			return true;
		}
		if (ny === -Infinity) {
			return false;
		}
		if (nx === -Infinity) {
			return true;
		}
		return nx < ny; // by now, these are both nonzero, finite, and not equal
	}
	if (isPrefixOf(py, px)) {
		return false;
	}
	if (isPrefixOf(px, py)) {
		return true;
	}
	return px < py; // both strings, neither a prefix of the other. shortcut for steps c-f
};

},{"../helpers/isFinite":169,"../helpers/isNaN":170,"../helpers/isPrefixOf":171,"./ToNumber":154,"./ToPrimitive":156,"es-errors/type":182,"get-intrinsic":191}],125:[function(require,module,exports){
'use strict';

var $TypeError = require('es-errors/type');

var callBound = require('call-bind/callBound');

var $charCodeAt = callBound('String.prototype.charCodeAt');
var $toUpperCase = callBound('String.prototype.toUpperCase');

// https://262.ecma-international.org/5.1/#sec-15.10.2.8

module.exports = function Canonicalize(ch, IgnoreCase) {
	if (typeof ch !== 'string' || ch.length !== 1) {
		throw new $TypeError('Assertion failed: `ch` must be a character');
	}

	if (typeof IgnoreCase !== 'boolean') {
		throw new $TypeError('Assertion failed: `IgnoreCase` must be a Boolean');
	}

	if (!IgnoreCase) {
		return ch; // step 1
	}

	var u = $toUpperCase(ch); // step 2

	if (u.length !== 1) {
		return ch; // step 3
	}

	var cu = u; // step 4

	if ($charCodeAt(ch, 0) >= 128 && $charCodeAt(cu, 0) < 128) {
		return ch; // step 5
	}

	return cu;
};

},{"call-bind/callBound":115,"es-errors/type":182}],126:[function(require,module,exports){
'use strict';

var RequireObjectCoercible = require('es-object-atoms/RequireObjectCoercible');

// http://262.ecma-international.org/5.1/#sec-9.10

module.exports = function CheckObjectCoercible(value) {
	return RequireObjectCoercible(value, arguments.length > 1 ? arguments[1] : void undefined);
};

},{"es-object-atoms/RequireObjectCoercible":184}],127:[function(require,module,exports){
'use strict';

var $EvalError = require('es-errors/eval');

var DayWithinYear = require('./DayWithinYear');
var InLeapYear = require('./InLeapYear');
var MonthFromTime = require('./MonthFromTime');

// https://262.ecma-international.org/5.1/#sec-15.9.1.5

module.exports = function DateFromTime(t) {
	var m = MonthFromTime(t);
	var d = DayWithinYear(t);
	if (m === 0) {
		return d + 1;
	}
	if (m === 1) {
		return d - 30;
	}
	var leap = InLeapYear(t);
	if (m === 2) {
		return d - 58 - leap;
	}
	if (m === 3) {
		return d - 89 - leap;
	}
	if (m === 4) {
		return d - 119 - leap;
	}
	if (m === 5) {
		return d - 150 - leap;
	}
	if (m === 6) {
		return d - 180 - leap;
	}
	if (m === 7) {
		return d - 211 - leap;
	}
	if (m === 8) {
		return d - 242 - leap;
	}
	if (m === 9) {
		return d - 272 - leap;
	}
	if (m === 10) {
		return d - 303 - leap;
	}
	if (m === 11) {
		return d - 333 - leap;
	}
	throw new $EvalError('Assertion failed: MonthFromTime returned an impossible value: ' + m);
};

},{"./DayWithinYear":130,"./InLeapYear":134,"./MonthFromTime":144,"es-errors/eval":177}],128:[function(require,module,exports){
'use strict';

var floor = require('./floor');

var msPerDay = require('../helpers/timeConstants').msPerDay;

// https://262.ecma-international.org/5.1/#sec-15.9.1.2

module.exports = function Day(t) {
	return floor(t / msPerDay);
};

},{"../helpers/timeConstants":175,"./floor":165}],129:[function(require,module,exports){
'use strict';

var floor = require('./floor');

// https://262.ecma-international.org/5.1/#sec-15.9.1.3

module.exports = function DayFromYear(y) {
	return (365 * (y - 1970)) + floor((y - 1969) / 4) - floor((y - 1901) / 100) + floor((y - 1601) / 400);
};


},{"./floor":165}],130:[function(require,module,exports){
'use strict';

var Day = require('./Day');
var DayFromYear = require('./DayFromYear');
var YearFromTime = require('./YearFromTime');

// https://262.ecma-international.org/5.1/#sec-15.9.1.4

module.exports = function DayWithinYear(t) {
	return Day(t) - DayFromYear(YearFromTime(t));
};

},{"./Day":128,"./DayFromYear":129,"./YearFromTime":163}],131:[function(require,module,exports){
'use strict';

var modulo = require('./modulo');

// https://262.ecma-international.org/5.1/#sec-15.9.1.3

module.exports = function DaysInYear(y) {
	if (modulo(y, 4) !== 0) {
		return 365;
	}
	if (modulo(y, 100) !== 0) {
		return 366;
	}
	if (modulo(y, 400) !== 0) {
		return 365;
	}
	return 366;
};

},{"./modulo":166}],132:[function(require,module,exports){
'use strict';

var $TypeError = require('es-errors/type');

var IsDataDescriptor = require('./IsDataDescriptor');
var IsAccessorDescriptor = require('./IsAccessorDescriptor');

var isPropertyDescriptor = require('../helpers/records/property-descriptor');

// https://262.ecma-international.org/5.1/#sec-8.10.4

module.exports = function FromPropertyDescriptor(Desc) {
	if (typeof Desc === 'undefined') {
		return Desc;
	}

	if (!isPropertyDescriptor(Desc)) {
		throw new $TypeError('Assertion failed: `Desc` must be a Property Descriptor');
	}

	if (IsDataDescriptor(Desc)) {
		return {
			value: Desc['[[Value]]'],
			writable: !!Desc['[[Writable]]'],
			enumerable: !!Desc['[[Enumerable]]'],
			configurable: !!Desc['[[Configurable]]']
		};
	} else if (IsAccessorDescriptor(Desc)) {
		return {
			get: Desc['[[Get]]'],
			set: Desc['[[Set]]'],
			enumerable: !!Desc['[[Enumerable]]'],
			configurable: !!Desc['[[Configurable]]']
		};
	}
	throw new $TypeError('FromPropertyDescriptor must be called with a fully populated Property Descriptor');

};

},{"../helpers/records/property-descriptor":173,"./IsAccessorDescriptor":135,"./IsDataDescriptor":137,"es-errors/type":182}],133:[function(require,module,exports){
'use strict';

var floor = require('./floor');
var modulo = require('./modulo');

var timeConstants = require('../helpers/timeConstants');
var msPerHour = timeConstants.msPerHour;
var HoursPerDay = timeConstants.HoursPerDay;

// https://262.ecma-international.org/5.1/#sec-15.9.1.10

module.exports = function HourFromTime(t) {
	return modulo(floor(t / msPerHour), HoursPerDay);
};

},{"../helpers/timeConstants":175,"./floor":165,"./modulo":166}],134:[function(require,module,exports){
'use strict';

var $EvalError = require('es-errors/eval');

var DaysInYear = require('./DaysInYear');
var YearFromTime = require('./YearFromTime');

// https://262.ecma-international.org/5.1/#sec-15.9.1.3

module.exports = function InLeapYear(t) {
	var days = DaysInYear(YearFromTime(t));
	if (days === 365) {
		return 0;
	}
	if (days === 366) {
		return 1;
	}
	throw new $EvalError('Assertion failed: there are not 365 or 366 days in a year, got: ' + days);
};

},{"./DaysInYear":131,"./YearFromTime":163,"es-errors/eval":177}],135:[function(require,module,exports){
'use strict';

var $TypeError = require('es-errors/type');

var hasOwn = require('hasown');

var isPropertyDescriptor = require('../helpers/records/property-descriptor');

// https://262.ecma-international.org/5.1/#sec-8.10.1

module.exports = function IsAccessorDescriptor(Desc) {
	if (typeof Desc === 'undefined') {
		return false;
	}

	if (!isPropertyDescriptor(Desc)) {
		throw new $TypeError('Assertion failed: `Desc` must be a Property Descriptor');
	}

	if (!hasOwn(Desc, '[[Get]]') && !hasOwn(Desc, '[[Set]]')) {
		return false;
	}

	return true;
};

},{"../helpers/records/property-descriptor":173,"es-errors/type":182,"hasown":199}],136:[function(require,module,exports){
'use strict';

// http://262.ecma-international.org/5.1/#sec-9.11

module.exports = require('is-callable');

},{"is-callable":202}],137:[function(require,module,exports){
'use strict';

var $TypeError = require('es-errors/type');

var hasOwn = require('hasown');

var isPropertyDescriptor = require('../helpers/records/property-descriptor');

// https://262.ecma-international.org/5.1/#sec-8.10.2

module.exports = function IsDataDescriptor(Desc) {
	if (typeof Desc === 'undefined') {
		return false;
	}

	if (!isPropertyDescriptor(Desc)) {
		throw new $TypeError('Assertion failed: `Desc` must be a Property Descriptor');
	}

	if (!hasOwn(Desc, '[[Value]]') && !hasOwn(Desc, '[[Writable]]')) {
		return false;
	}

	return true;
};

},{"../helpers/records/property-descriptor":173,"es-errors/type":182,"hasown":199}],138:[function(require,module,exports){
'use strict';

var $TypeError = require('es-errors/type');

var IsAccessorDescriptor = require('./IsAccessorDescriptor');
var IsDataDescriptor = require('./IsDataDescriptor');

var isPropertyDescriptor = require('./IsPropertyDescriptor');

// https://262.ecma-international.org/5.1/#sec-8.10.3

module.exports = function IsGenericDescriptor(Desc) {
	if (typeof Desc === 'undefined') {
		return false;
	}

	if (!isPropertyDescriptor(Desc)) {
		throw new $TypeError('Assertion failed: `Desc` must be a Property Descriptor');
	}

	if (!IsAccessorDescriptor(Desc) && !IsDataDescriptor(Desc)) {
		return true;
	}

	return false;
};

},{"./IsAccessorDescriptor":135,"./IsDataDescriptor":137,"./IsPropertyDescriptor":139,"es-errors/type":182}],139:[function(require,module,exports){
'use strict';

// TODO, semver-major: delete this

var isPropertyDescriptor = require('../helpers/records/property-descriptor');

// https://262.ecma-international.org/6.0/#sec-property-descriptor-specification-type

module.exports = function IsPropertyDescriptor(Desc) {
	return isPropertyDescriptor(Desc);
};

},{"../helpers/records/property-descriptor":173}],140:[function(require,module,exports){
'use strict';

var $isFinite = require('../helpers/isFinite');
var msPerDay = require('../helpers/timeConstants').msPerDay;

// https://262.ecma-international.org/5.1/#sec-15.9.1.13

module.exports = function MakeDate(day, time) {
	if (!$isFinite(day) || !$isFinite(time)) {
		return NaN;
	}
	return (day * msPerDay) + time;
};

},{"../helpers/isFinite":169,"../helpers/timeConstants":175}],141:[function(require,module,exports){
'use strict';

var GetIntrinsic = require('get-intrinsic');

var $DateUTC = GetIntrinsic('%Date.UTC%');

var $isFinite = require('../helpers/isFinite');

var DateFromTime = require('./DateFromTime');
var Day = require('./Day');
var floor = require('./floor');
var modulo = require('./modulo');
var MonthFromTime = require('./MonthFromTime');
var ToInteger = require('./ToInteger');
var YearFromTime = require('./YearFromTime');

// https://262.ecma-international.org/5.1/#sec-15.9.1.12

module.exports = function MakeDay(year, month, date) {
	if (!$isFinite(year) || !$isFinite(month) || !$isFinite(date)) {
		return NaN;
	}
	var y = ToInteger(year);
	var m = ToInteger(month);
	var dt = ToInteger(date);
	var ym = y + floor(m / 12);
	var mn = modulo(m, 12);
	var t = $DateUTC(ym, mn, 1);
	if (YearFromTime(t) !== ym || MonthFromTime(t) !== mn || DateFromTime(t) !== 1) {
		return NaN;
	}
	return Day(t) + dt - 1;
};

},{"../helpers/isFinite":169,"./DateFromTime":127,"./Day":128,"./MonthFromTime":144,"./ToInteger":153,"./YearFromTime":163,"./floor":165,"./modulo":166,"get-intrinsic":191}],142:[function(require,module,exports){
'use strict';

var $isFinite = require('../helpers/isFinite');
var timeConstants = require('../helpers/timeConstants');
var msPerSecond = timeConstants.msPerSecond;
var msPerMinute = timeConstants.msPerMinute;
var msPerHour = timeConstants.msPerHour;

var ToInteger = require('./ToInteger');

// https://262.ecma-international.org/5.1/#sec-15.9.1.11

module.exports = function MakeTime(hour, min, sec, ms) {
	if (!$isFinite(hour) || !$isFinite(min) || !$isFinite(sec) || !$isFinite(ms)) {
		return NaN;
	}
	var h = ToInteger(hour);
	var m = ToInteger(min);
	var s = ToInteger(sec);
	var milli = ToInteger(ms);
	var t = (h * msPerHour) + (m * msPerMinute) + (s * msPerSecond) + milli;
	return t;
};

},{"../helpers/isFinite":169,"../helpers/timeConstants":175,"./ToInteger":153}],143:[function(require,module,exports){
'use strict';

var floor = require('./floor');
var modulo = require('./modulo');

var timeConstants = require('../helpers/timeConstants');
var msPerMinute = timeConstants.msPerMinute;
var MinutesPerHour = timeConstants.MinutesPerHour;

// https://262.ecma-international.org/5.1/#sec-15.9.1.10

module.exports = function MinFromTime(t) {
	return modulo(floor(t / msPerMinute), MinutesPerHour);
};

},{"../helpers/timeConstants":175,"./floor":165,"./modulo":166}],144:[function(require,module,exports){
'use strict';

var DayWithinYear = require('./DayWithinYear');
var InLeapYear = require('./InLeapYear');

// https://262.ecma-international.org/5.1/#sec-15.9.1.4

module.exports = function MonthFromTime(t) {
	var day = DayWithinYear(t);
	if (0 <= day && day < 31) {
		return 0;
	}
	var leap = InLeapYear(t);
	if (31 <= day && day < (59 + leap)) {
		return 1;
	}
	if ((59 + leap) <= day && day < (90 + leap)) {
		return 2;
	}
	if ((90 + leap) <= day && day < (120 + leap)) {
		return 3;
	}
	if ((120 + leap) <= day && day < (151 + leap)) {
		return 4;
	}
	if ((151 + leap) <= day && day < (181 + leap)) {
		return 5;
	}
	if ((181 + leap) <= day && day < (212 + leap)) {
		return 6;
	}
	if ((212 + leap) <= day && day < (243 + leap)) {
		return 7;
	}
	if ((243 + leap) <= day && day < (273 + leap)) {
		return 8;
	}
	if ((273 + leap) <= day && day < (304 + leap)) {
		return 9;
	}
	if ((304 + leap) <= day && day < (334 + leap)) {
		return 10;
	}
	if ((334 + leap) <= day && day < (365 + leap)) {
		return 11;
	}
};

},{"./DayWithinYear":130,"./InLeapYear":134}],145:[function(require,module,exports){
'use strict';

var $isNaN = require('../helpers/isNaN');

// http://262.ecma-international.org/5.1/#sec-9.12

module.exports = function SameValue(x, y) {
	if (x === y) { // 0 === -0, but they are not identical.
		if (x === 0) { return 1 / x === 1 / y; }
		return true;
	}
	return $isNaN(x) && $isNaN(y);
};

},{"../helpers/isNaN":170}],146:[function(require,module,exports){
'use strict';

var floor = require('./floor');
var modulo = require('./modulo');

var timeConstants = require('../helpers/timeConstants');
var msPerSecond = timeConstants.msPerSecond;
var SecondsPerMinute = timeConstants.SecondsPerMinute;

// https://262.ecma-international.org/5.1/#sec-15.9.1.10

module.exports = function SecFromTime(t) {
	return modulo(floor(t / msPerSecond), SecondsPerMinute);
};

},{"../helpers/timeConstants":175,"./floor":165,"./modulo":166}],147:[function(require,module,exports){
'use strict';

var Type = require('./Type');

// https://262.ecma-international.org/5.1/#sec-11.9.6

module.exports = function StrictEqualityComparison(x, y) {
	var xType = Type(x);
	var yType = Type(y);
	if (xType !== yType) {
		return false;
	}
	if (xType === 'Undefined' || xType === 'Null') {
		return true;
	}
	return x === y; // shortcut for steps 4-7
};

},{"./Type":161}],148:[function(require,module,exports){
'use strict';

var GetIntrinsic = require('get-intrinsic');

var $Date = GetIntrinsic('%Date%');
var $Number = GetIntrinsic('%Number%');

var $isFinite = require('../helpers/isFinite');

var abs = require('./abs');
var ToNumber = require('./ToNumber');

// https://262.ecma-international.org/5.1/#sec-15.9.1.14

module.exports = function TimeClip(time) {
	if (!$isFinite(time) || abs(time) > 8.64e15) {
		return NaN;
	}
	return $Number(new $Date(ToNumber(time)));
};


},{"../helpers/isFinite":169,"./ToNumber":154,"./abs":164,"get-intrinsic":191}],149:[function(require,module,exports){
'use strict';

var msPerDay = require('../helpers/timeConstants').msPerDay;

var DayFromYear = require('./DayFromYear');

// https://262.ecma-international.org/5.1/#sec-15.9.1.3

module.exports = function TimeFromYear(y) {
	return msPerDay * DayFromYear(y);
};

},{"../helpers/timeConstants":175,"./DayFromYear":129}],150:[function(require,module,exports){
'use strict';

var modulo = require('./modulo');

var msPerDay = require('../helpers/timeConstants').msPerDay;

// https://262.ecma-international.org/5.1/#sec-15.9.1.2

module.exports = function TimeWithinDay(t) {
	return modulo(t, msPerDay);
};


},{"../helpers/timeConstants":175,"./modulo":166}],151:[function(require,module,exports){
'use strict';

// http://262.ecma-international.org/5.1/#sec-9.2

module.exports = function ToBoolean(value) { return !!value; };

},{}],152:[function(require,module,exports){
'use strict';

var ToNumber = require('./ToNumber');

// http://262.ecma-international.org/5.1/#sec-9.5

module.exports = function ToInt32(x) {
	return ToNumber(x) >> 0;
};

},{"./ToNumber":154}],153:[function(require,module,exports){
'use strict';

var abs = require('./abs');
var floor = require('./floor');
var ToNumber = require('./ToNumber');

var $isNaN = require('../helpers/isNaN');
var $isFinite = require('../helpers/isFinite');
var $sign = require('../helpers/sign');

// http://262.ecma-international.org/5.1/#sec-9.4

module.exports = function ToInteger(value) {
	var number = ToNumber(value);
	if ($isNaN(number)) { return 0; }
	if (number === 0 || !$isFinite(number)) { return number; }
	return $sign(number) * floor(abs(number));
};

},{"../helpers/isFinite":169,"../helpers/isNaN":170,"../helpers/sign":174,"./ToNumber":154,"./abs":164,"./floor":165}],154:[function(require,module,exports){
'use strict';

var ToPrimitive = require('./ToPrimitive');

var callBound = require('call-bind/callBound');

var $replace = callBound('String.prototype.replace');

var safeRegexTester = require('safe-regex-test');

var isNonDecimal = safeRegexTester(/^0[ob]|^[+-]0x/);

// http://262.ecma-international.org/5.1/#sec-9.3

module.exports = function ToNumber(value) {
	var prim = ToPrimitive(value, Number);
	if (typeof prim !== 'string') {
		return +prim; // eslint-disable-line no-implicit-coercion
	}

	var trimmed = $replace(
		prim,
		// eslint-disable-next-line no-control-regex
		/^[ \t\x0b\f\xa0\ufeff\n\r\u2028\u2029\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u0085]+|[ \t\x0b\f\xa0\ufeff\n\r\u2028\u2029\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u0085]+$/g,
		''
	);
	if (isNonDecimal(trimmed)) {
		return NaN;
	}

	return +trimmed; // eslint-disable-line no-implicit-coercion
};

},{"./ToPrimitive":156,"call-bind/callBound":115,"safe-regex-test":210}],155:[function(require,module,exports){
'use strict';

// http://262.ecma-international.org/5.1/#sec-9.9

module.exports = require('es-object-atoms/ToObject');

},{"es-object-atoms/ToObject":185}],156:[function(require,module,exports){
'use strict';

// http://262.ecma-international.org/5.1/#sec-9.1

module.exports = require('es-to-primitive/es5');

},{"es-to-primitive/es5":187}],157:[function(require,module,exports){
'use strict';

var hasOwn = require('hasown');

var $TypeError = require('es-errors/type');

var Type = require('./Type');
var ToBoolean = require('./ToBoolean');
var IsCallable = require('./IsCallable');

// https://262.ecma-international.org/5.1/#sec-8.10.5

module.exports = function ToPropertyDescriptor(Obj) {
	if (Type(Obj) !== 'Object') {
		throw new $TypeError('ToPropertyDescriptor requires an object');
	}

	var desc = {};
	if (hasOwn(Obj, 'enumerable')) {
		desc['[[Enumerable]]'] = ToBoolean(Obj.enumerable);
	}
	if (hasOwn(Obj, 'configurable')) {
		desc['[[Configurable]]'] = ToBoolean(Obj.configurable);
	}
	if (hasOwn(Obj, 'value')) {
		desc['[[Value]]'] = Obj.value;
	}
	if (hasOwn(Obj, 'writable')) {
		desc['[[Writable]]'] = ToBoolean(Obj.writable);
	}
	if (hasOwn(Obj, 'get')) {
		var getter = Obj.get;
		if (typeof getter !== 'undefined' && !IsCallable(getter)) {
			throw new $TypeError('getter must be a function');
		}
		desc['[[Get]]'] = getter;
	}
	if (hasOwn(Obj, 'set')) {
		var setter = Obj.set;
		if (typeof setter !== 'undefined' && !IsCallable(setter)) {
			throw new $TypeError('setter must be a function');
		}
		desc['[[Set]]'] = setter;
	}

	if ((hasOwn(desc, '[[Get]]') || hasOwn(desc, '[[Set]]')) && (hasOwn(desc, '[[Value]]') || hasOwn(desc, '[[Writable]]'))) {
		throw new $TypeError('Invalid property descriptor. Cannot both specify accessors and a value or writable attribute');
	}
	return desc;
};

},{"./IsCallable":136,"./ToBoolean":151,"./Type":161,"es-errors/type":182,"hasown":199}],158:[function(require,module,exports){
'use strict';

var GetIntrinsic = require('get-intrinsic');

var $String = GetIntrinsic('%String%');

// http://262.ecma-international.org/5.1/#sec-9.8

module.exports = function ToString(value) {
	return $String(value);
};


},{"get-intrinsic":191}],159:[function(require,module,exports){
'use strict';

var abs = require('./abs');
var floor = require('./floor');
var modulo = require('./modulo');
var ToNumber = require('./ToNumber');

var $isNaN = require('../helpers/isNaN');
var $isFinite = require('../helpers/isFinite');
var $sign = require('../helpers/sign');

// http://262.ecma-international.org/5.1/#sec-9.7

module.exports = function ToUint16(value) {
	var number = ToNumber(value);
	if ($isNaN(number) || number === 0 || !$isFinite(number)) { return 0; }
	var posInt = $sign(number) * floor(abs(number));
	return modulo(posInt, 0x10000);
};

},{"../helpers/isFinite":169,"../helpers/isNaN":170,"../helpers/sign":174,"./ToNumber":154,"./abs":164,"./floor":165,"./modulo":166}],160:[function(require,module,exports){
'use strict';

var ToNumber = require('./ToNumber');

// http://262.ecma-international.org/5.1/#sec-9.6

module.exports = function ToUint32(x) {
	return ToNumber(x) >>> 0;
};

},{"./ToNumber":154}],161:[function(require,module,exports){
'use strict';

// https://262.ecma-international.org/5.1/#sec-8

module.exports = function Type(x) {
	if (x === null) {
		return 'Null';
	}
	if (typeof x === 'undefined') {
		return 'Undefined';
	}
	if (typeof x === 'function' || typeof x === 'object') {
		return 'Object';
	}
	if (typeof x === 'number') {
		return 'Number';
	}
	if (typeof x === 'boolean') {
		return 'Boolean';
	}
	if (typeof x === 'string') {
		return 'String';
	}
};

},{}],162:[function(require,module,exports){
'use strict';

var Day = require('./Day');
var modulo = require('./modulo');

// https://262.ecma-international.org/5.1/#sec-15.9.1.6

module.exports = function WeekDay(t) {
	return modulo(Day(t) + 4, 7);
};

},{"./Day":128,"./modulo":166}],163:[function(require,module,exports){
'use strict';

var GetIntrinsic = require('get-intrinsic');

var $Date = GetIntrinsic('%Date%');

var callBound = require('call-bind/callBound');

var $getUTCFullYear = callBound('Date.prototype.getUTCFullYear');

// https://262.ecma-international.org/5.1/#sec-15.9.1.3

module.exports = function YearFromTime(t) {
	// largest y such that this.TimeFromYear(y) <= t
	return $getUTCFullYear(new $Date(t));
};

},{"call-bind/callBound":115,"get-intrinsic":191}],164:[function(require,module,exports){
'use strict';

var GetIntrinsic = require('get-intrinsic');

var $abs = GetIntrinsic('%Math.abs%');

// http://262.ecma-international.org/5.1/#sec-5.2

module.exports = function abs(x) {
	return $abs(x);
};

},{"get-intrinsic":191}],165:[function(require,module,exports){
'use strict';

// var modulo = require('./modulo');
var $floor = Math.floor;

// http://262.ecma-international.org/5.1/#sec-5.2

module.exports = function floor(x) {
	// return x - modulo(x, 1);
	return $floor(x);
};

},{}],166:[function(require,module,exports){
'use strict';

var mod = require('../helpers/mod');

// https://262.ecma-international.org/5.1/#sec-5.2

module.exports = function modulo(x, y) {
	return mod(x, y);
};

},{"../helpers/mod":172}],167:[function(require,module,exports){
'use strict';

var modulo = require('./modulo');

var msPerSecond = require('../helpers/timeConstants').msPerSecond;

// https://262.ecma-international.org/5.1/#sec-15.9.1.10

module.exports = function msFromTime(t) {
	return modulo(t, msPerSecond);
};

},{"../helpers/timeConstants":175,"./modulo":166}],168:[function(require,module,exports){
'use strict';

/* eslint global-require: 0 */

// https://es5.github.io/#x9
module.exports = {
	'Abstract Equality Comparison': require('./5/AbstractEqualityComparison'),
	'Abstract Relational Comparison': require('./5/AbstractRelationalComparison'),
	'Strict Equality Comparison': require('./5/StrictEqualityComparison'),
	abs: require('./5/abs'),
	Canonicalize: require('./5/Canonicalize'),
	CheckObjectCoercible: require('./5/CheckObjectCoercible'),
	DateFromTime: require('./5/DateFromTime'),
	Day: require('./5/Day'),
	DayFromYear: require('./5/DayFromYear'),
	DaysInYear: require('./5/DaysInYear'),
	DayWithinYear: require('./5/DayWithinYear'),
	floor: require('./5/floor'),
	FromPropertyDescriptor: require('./5/FromPropertyDescriptor'),
	HourFromTime: require('./5/HourFromTime'),
	InLeapYear: require('./5/InLeapYear'),
	IsAccessorDescriptor: require('./5/IsAccessorDescriptor'),
	IsCallable: require('./5/IsCallable'),
	IsDataDescriptor: require('./5/IsDataDescriptor'),
	IsGenericDescriptor: require('./5/IsGenericDescriptor'),
	IsPropertyDescriptor: require('./5/IsPropertyDescriptor'),
	MakeDate: require('./5/MakeDate'),
	MakeDay: require('./5/MakeDay'),
	MakeTime: require('./5/MakeTime'),
	MinFromTime: require('./5/MinFromTime'),
	modulo: require('./5/modulo'),
	MonthFromTime: require('./5/MonthFromTime'),
	msFromTime: require('./5/msFromTime'),
	SameValue: require('./5/SameValue'),
	SecFromTime: require('./5/SecFromTime'),
	TimeClip: require('./5/TimeClip'),
	TimeFromYear: require('./5/TimeFromYear'),
	TimeWithinDay: require('./5/TimeWithinDay'),
	ToBoolean: require('./5/ToBoolean'),
	ToInt32: require('./5/ToInt32'),
	ToInteger: require('./5/ToInteger'),
	ToNumber: require('./5/ToNumber'),
	ToObject: require('./5/ToObject'),
	ToPrimitive: require('./5/ToPrimitive'),
	ToPropertyDescriptor: require('./5/ToPropertyDescriptor'),
	ToString: require('./5/ToString'),
	ToUint16: require('./5/ToUint16'),
	ToUint32: require('./5/ToUint32'),
	Type: require('./5/Type'),
	WeekDay: require('./5/WeekDay'),
	YearFromTime: require('./5/YearFromTime')
};

},{"./5/AbstractEqualityComparison":123,"./5/AbstractRelationalComparison":124,"./5/Canonicalize":125,"./5/CheckObjectCoercible":126,"./5/DateFromTime":127,"./5/Day":128,"./5/DayFromYear":129,"./5/DayWithinYear":130,"./5/DaysInYear":131,"./5/FromPropertyDescriptor":132,"./5/HourFromTime":133,"./5/InLeapYear":134,"./5/IsAccessorDescriptor":135,"./5/IsCallable":136,"./5/IsDataDescriptor":137,"./5/IsGenericDescriptor":138,"./5/IsPropertyDescriptor":139,"./5/MakeDate":140,"./5/MakeDay":141,"./5/MakeTime":142,"./5/MinFromTime":143,"./5/MonthFromTime":144,"./5/SameValue":145,"./5/SecFromTime":146,"./5/StrictEqualityComparison":147,"./5/TimeClip":148,"./5/TimeFromYear":149,"./5/TimeWithinDay":150,"./5/ToBoolean":151,"./5/ToInt32":152,"./5/ToInteger":153,"./5/ToNumber":154,"./5/ToObject":155,"./5/ToPrimitive":156,"./5/ToPropertyDescriptor":157,"./5/ToString":158,"./5/ToUint16":159,"./5/ToUint32":160,"./5/Type":161,"./5/WeekDay":162,"./5/YearFromTime":163,"./5/abs":164,"./5/floor":165,"./5/modulo":166,"./5/msFromTime":167}],169:[function(require,module,exports){
'use strict';

var $isNaN = require('./isNaN');

module.exports = function (x) { return (typeof x === 'number' || typeof x === 'bigint') && !$isNaN(x) && x !== Infinity && x !== -Infinity; };

},{"./isNaN":170}],170:[function(require,module,exports){
'use strict';

module.exports = Number.isNaN || function isNaN(a) {
	return a !== a;
};

},{}],171:[function(require,module,exports){
'use strict';

var $strSlice = require('call-bind/callBound')('String.prototype.slice');

module.exports = function isPrefixOf(prefix, string) {
	if (prefix === string) {
		return true;
	}
	if (prefix.length > string.length) {
		return false;
	}
	return $strSlice(string, 0, prefix.length) === prefix;
};

},{"call-bind/callBound":115}],172:[function(require,module,exports){
'use strict';

var $floor = Math.floor;

module.exports = function mod(number, modulo) {
	var remain = number % modulo;
	return $floor(remain >= 0 ? remain : remain + modulo);
};

},{}],173:[function(require,module,exports){
'use strict';

var $TypeError = require('es-errors/type');

var hasOwn = require('hasown');

var allowed = {
	__proto__: null,
	'[[Configurable]]': true,
	'[[Enumerable]]': true,
	'[[Get]]': true,
	'[[Set]]': true,
	'[[Value]]': true,
	'[[Writable]]': true
};

// https://262.ecma-international.org/6.0/#sec-property-descriptor-specification-type

module.exports = function isPropertyDescriptor(Desc) {
	if (!Desc || typeof Desc !== 'object') {
		return false;
	}

	for (var key in Desc) { // eslint-disable-line
		if (hasOwn(Desc, key) && !allowed[key]) {
			return false;
		}
	}

	var isData = hasOwn(Desc, '[[Value]]') || hasOwn(Desc, '[[Writable]]');
	var IsAccessor = hasOwn(Desc, '[[Get]]') || hasOwn(Desc, '[[Set]]');
	if (isData && IsAccessor) {
		throw new $TypeError('Property Descriptors may not be both accessor and data descriptors');
	}
	return true;
};

},{"es-errors/type":182,"hasown":199}],174:[function(require,module,exports){
'use strict';

module.exports = function sign(number) {
	return number >= 0 ? 1 : -1;
};

},{}],175:[function(require,module,exports){
'use strict';

var HoursPerDay = 24;
var MinutesPerHour = 60;
var SecondsPerMinute = 60;
var msPerSecond = 1e3;
var msPerMinute = msPerSecond * SecondsPerMinute;
var msPerHour = msPerMinute * MinutesPerHour;
var msPerDay = 86400000;

module.exports = {
	HoursPerDay: HoursPerDay,
	MinutesPerHour: MinutesPerHour,
	SecondsPerMinute: SecondsPerMinute,
	msPerSecond: msPerSecond,
	msPerMinute: msPerMinute,
	msPerHour: msPerHour,
	msPerDay: msPerDay
};

},{}],176:[function(require,module,exports){
'use strict';

var GetIntrinsic = require('get-intrinsic');

/** @type {import('.')} */
var $defineProperty = GetIntrinsic('%Object.defineProperty%', true) || false;
if ($defineProperty) {
	try {
		$defineProperty({}, 'a', { value: 1 });
	} catch (e) {
		// IE 8 has a broken defineProperty
		$defineProperty = false;
	}
}

module.exports = $defineProperty;

},{"get-intrinsic":191}],177:[function(require,module,exports){
'use strict';

/** @type {import('./eval')} */
module.exports = EvalError;

},{}],178:[function(require,module,exports){
'use strict';

/** @type {import('.')} */
module.exports = Error;

},{}],179:[function(require,module,exports){
'use strict';

/** @type {import('./range')} */
module.exports = RangeError;

},{}],180:[function(require,module,exports){
'use strict';

/** @type {import('./ref')} */
module.exports = ReferenceError;

},{}],181:[function(require,module,exports){
'use strict';

/** @type {import('./syntax')} */
module.exports = SyntaxError;

},{}],182:[function(require,module,exports){
'use strict';

/** @type {import('./type')} */
module.exports = TypeError;

},{}],183:[function(require,module,exports){
'use strict';

/** @type {import('./uri')} */
module.exports = URIError;

},{}],184:[function(require,module,exports){
'use strict';

var $TypeError = require('es-errors/type');

/** @type {import('./RequireObjectCoercible')} */
module.exports = function RequireObjectCoercible(value) {
	if (value == null) {
		throw new $TypeError((arguments.length > 0 && arguments[1]) || ('Cannot call method on ' + value));
	}
	return value;
};

},{"es-errors/type":182}],185:[function(require,module,exports){
'use strict';

var $Object = require('./');
var RequireObjectCoercible = require('./RequireObjectCoercible');

/** @type {import('./ToObject')} */
module.exports = function ToObject(value) {
	RequireObjectCoercible(value);
	return $Object(value);
};

},{"./":186,"./RequireObjectCoercible":184}],186:[function(require,module,exports){
'use strict';

/** @type {import('.')} */
module.exports = Object;

},{}],187:[function(require,module,exports){
'use strict';

var toStr = Object.prototype.toString;

var isPrimitive = require('./helpers/isPrimitive');

var isCallable = require('is-callable');

// http://ecma-international.org/ecma-262/5.1/#sec-8.12.8
var ES5internalSlots = {
	'[[DefaultValue]]': function (O) {
		var actualHint;
		if (arguments.length > 1) {
			actualHint = arguments[1];
		} else {
			actualHint = toStr.call(O) === '[object Date]' ? String : Number;
		}

		if (actualHint === String || actualHint === Number) {
			var methods = actualHint === String ? ['toString', 'valueOf'] : ['valueOf', 'toString'];
			var value, i;
			for (i = 0; i < methods.length; ++i) {
				if (isCallable(O[methods[i]])) {
					value = O[methods[i]]();
					if (isPrimitive(value)) {
						return value;
					}
				}
			}
			throw new TypeError('No default value');
		}
		throw new TypeError('invalid [[DefaultValue]] hint supplied');
	}
};

// http://ecma-international.org/ecma-262/5.1/#sec-9.1
module.exports = function ToPrimitive(input) {
	if (isPrimitive(input)) {
		return input;
	}
	if (arguments.length > 1) {
		return ES5internalSlots['[[DefaultValue]]'](input, arguments[1]);
	}
	return ES5internalSlots['[[DefaultValue]]'](input);
};

},{"./helpers/isPrimitive":188,"is-callable":202}],188:[function(require,module,exports){
'use strict';

module.exports = function isPrimitive(value) {
	return value === null || (typeof value !== 'function' && typeof value !== 'object');
};

},{}],189:[function(require,module,exports){
'use strict';

/* eslint no-invalid-this: 1 */

var ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';
var toStr = Object.prototype.toString;
var max = Math.max;
var funcType = '[object Function]';

var concatty = function concatty(a, b) {
    var arr = [];

    for (var i = 0; i < a.length; i += 1) {
        arr[i] = a[i];
    }
    for (var j = 0; j < b.length; j += 1) {
        arr[j + a.length] = b[j];
    }

    return arr;
};

var slicy = function slicy(arrLike, offset) {
    var arr = [];
    for (var i = offset || 0, j = 0; i < arrLike.length; i += 1, j += 1) {
        arr[j] = arrLike[i];
    }
    return arr;
};

var joiny = function (arr, joiner) {
    var str = '';
    for (var i = 0; i < arr.length; i += 1) {
        str += arr[i];
        if (i + 1 < arr.length) {
            str += joiner;
        }
    }
    return str;
};

module.exports = function bind(that) {
    var target = this;
    if (typeof target !== 'function' || toStr.apply(target) !== funcType) {
        throw new TypeError(ERROR_MESSAGE + target);
    }
    var args = slicy(arguments, 1);

    var bound;
    var binder = function () {
        if (this instanceof bound) {
            var result = target.apply(
                this,
                concatty(args, arguments)
            );
            if (Object(result) === result) {
                return result;
            }
            return this;
        }
        return target.apply(
            that,
            concatty(args, arguments)
        );

    };

    var boundLength = max(0, target.length - args.length);
    var boundArgs = [];
    for (var i = 0; i < boundLength; i++) {
        boundArgs[i] = '$' + i;
    }

    bound = Function('binder', 'return function (' + joiny(boundArgs, ',') + '){ return binder.apply(this,arguments); }')(binder);

    if (target.prototype) {
        var Empty = function Empty() {};
        Empty.prototype = target.prototype;
        bound.prototype = new Empty();
        Empty.prototype = null;
    }

    return bound;
};

},{}],190:[function(require,module,exports){
'use strict';

var implementation = require('./implementation');

module.exports = Function.prototype.bind || implementation;

},{"./implementation":189}],191:[function(require,module,exports){
'use strict';

var undefined;

var $Error = require('es-errors');
var $EvalError = require('es-errors/eval');
var $RangeError = require('es-errors/range');
var $ReferenceError = require('es-errors/ref');
var $SyntaxError = require('es-errors/syntax');
var $TypeError = require('es-errors/type');
var $URIError = require('es-errors/uri');

var $Function = Function;

// eslint-disable-next-line consistent-return
var getEvalledConstructor = function (expressionSyntax) {
	try {
		return $Function('"use strict"; return (' + expressionSyntax + ').constructor;')();
	} catch (e) {}
};

var $gOPD = Object.getOwnPropertyDescriptor;
if ($gOPD) {
	try {
		$gOPD({}, '');
	} catch (e) {
		$gOPD = null; // this is IE 8, which has a broken gOPD
	}
}

var throwTypeError = function () {
	throw new $TypeError();
};
var ThrowTypeError = $gOPD
	? (function () {
		try {
			// eslint-disable-next-line no-unused-expressions, no-caller, no-restricted-properties
			arguments.callee; // IE 8 does not throw here
			return throwTypeError;
		} catch (calleeThrows) {
			try {
				// IE 8 throws on Object.getOwnPropertyDescriptor(arguments, '')
				return $gOPD(arguments, 'callee').get;
			} catch (gOPDthrows) {
				return throwTypeError;
			}
		}
	}())
	: throwTypeError;

var hasSymbols = require('has-symbols')();
var hasProto = require('has-proto')();

var getProto = Object.getPrototypeOf || (
	hasProto
		? function (x) { return x.__proto__; } // eslint-disable-line no-proto
		: null
);

var needsEval = {};

var TypedArray = typeof Uint8Array === 'undefined' || !getProto ? undefined : getProto(Uint8Array);

var INTRINSICS = {
	__proto__: null,
	'%AggregateError%': typeof AggregateError === 'undefined' ? undefined : AggregateError,
	'%Array%': Array,
	'%ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,
	'%ArrayIteratorPrototype%': hasSymbols && getProto ? getProto([][Symbol.iterator]()) : undefined,
	'%AsyncFromSyncIteratorPrototype%': undefined,
	'%AsyncFunction%': needsEval,
	'%AsyncGenerator%': needsEval,
	'%AsyncGeneratorFunction%': needsEval,
	'%AsyncIteratorPrototype%': needsEval,
	'%Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,
	'%BigInt%': typeof BigInt === 'undefined' ? undefined : BigInt,
	'%BigInt64Array%': typeof BigInt64Array === 'undefined' ? undefined : BigInt64Array,
	'%BigUint64Array%': typeof BigUint64Array === 'undefined' ? undefined : BigUint64Array,
	'%Boolean%': Boolean,
	'%DataView%': typeof DataView === 'undefined' ? undefined : DataView,
	'%Date%': Date,
	'%decodeURI%': decodeURI,
	'%decodeURIComponent%': decodeURIComponent,
	'%encodeURI%': encodeURI,
	'%encodeURIComponent%': encodeURIComponent,
	'%Error%': $Error,
	'%eval%': eval, // eslint-disable-line no-eval
	'%EvalError%': $EvalError,
	'%Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,
	'%Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,
	'%FinalizationRegistry%': typeof FinalizationRegistry === 'undefined' ? undefined : FinalizationRegistry,
	'%Function%': $Function,
	'%GeneratorFunction%': needsEval,
	'%Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,
	'%Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,
	'%Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,
	'%isFinite%': isFinite,
	'%isNaN%': isNaN,
	'%IteratorPrototype%': hasSymbols && getProto ? getProto(getProto([][Symbol.iterator]())) : undefined,
	'%JSON%': typeof JSON === 'object' ? JSON : undefined,
	'%Map%': typeof Map === 'undefined' ? undefined : Map,
	'%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols || !getProto ? undefined : getProto(new Map()[Symbol.iterator]()),
	'%Math%': Math,
	'%Number%': Number,
	'%Object%': Object,
	'%parseFloat%': parseFloat,
	'%parseInt%': parseInt,
	'%Promise%': typeof Promise === 'undefined' ? undefined : Promise,
	'%Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,
	'%RangeError%': $RangeError,
	'%ReferenceError%': $ReferenceError,
	'%Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,
	'%RegExp%': RegExp,
	'%Set%': typeof Set === 'undefined' ? undefined : Set,
	'%SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols || !getProto ? undefined : getProto(new Set()[Symbol.iterator]()),
	'%SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,
	'%String%': String,
	'%StringIteratorPrototype%': hasSymbols && getProto ? getProto(''[Symbol.iterator]()) : undefined,
	'%Symbol%': hasSymbols ? Symbol : undefined,
	'%SyntaxError%': $SyntaxError,
	'%ThrowTypeError%': ThrowTypeError,
	'%TypedArray%': TypedArray,
	'%TypeError%': $TypeError,
	'%Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,
	'%Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,
	'%Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,
	'%Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,
	'%URIError%': $URIError,
	'%WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,
	'%WeakRef%': typeof WeakRef === 'undefined' ? undefined : WeakRef,
	'%WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet
};

if (getProto) {
	try {
		null.error; // eslint-disable-line no-unused-expressions
	} catch (e) {
		// https://github.com/tc39/proposal-shadowrealm/pull/384#issuecomment-1364264229
		var errorProto = getProto(getProto(e));
		INTRINSICS['%Error.prototype%'] = errorProto;
	}
}

var doEval = function doEval(name) {
	var value;
	if (name === '%AsyncFunction%') {
		value = getEvalledConstructor('async function () {}');
	} else if (name === '%GeneratorFunction%') {
		value = getEvalledConstructor('function* () {}');
	} else if (name === '%AsyncGeneratorFunction%') {
		value = getEvalledConstructor('async function* () {}');
	} else if (name === '%AsyncGenerator%') {
		var fn = doEval('%AsyncGeneratorFunction%');
		if (fn) {
			value = fn.prototype;
		}
	} else if (name === '%AsyncIteratorPrototype%') {
		var gen = doEval('%AsyncGenerator%');
		if (gen && getProto) {
			value = getProto(gen.prototype);
		}
	}

	INTRINSICS[name] = value;

	return value;
};

var LEGACY_ALIASES = {
	__proto__: null,
	'%ArrayBufferPrototype%': ['ArrayBuffer', 'prototype'],
	'%ArrayPrototype%': ['Array', 'prototype'],
	'%ArrayProto_entries%': ['Array', 'prototype', 'entries'],
	'%ArrayProto_forEach%': ['Array', 'prototype', 'forEach'],
	'%ArrayProto_keys%': ['Array', 'prototype', 'keys'],
	'%ArrayProto_values%': ['Array', 'prototype', 'values'],
	'%AsyncFunctionPrototype%': ['AsyncFunction', 'prototype'],
	'%AsyncGenerator%': ['AsyncGeneratorFunction', 'prototype'],
	'%AsyncGeneratorPrototype%': ['AsyncGeneratorFunction', 'prototype', 'prototype'],
	'%BooleanPrototype%': ['Boolean', 'prototype'],
	'%DataViewPrototype%': ['DataView', 'prototype'],
	'%DatePrototype%': ['Date', 'prototype'],
	'%ErrorPrototype%': ['Error', 'prototype'],
	'%EvalErrorPrototype%': ['EvalError', 'prototype'],
	'%Float32ArrayPrototype%': ['Float32Array', 'prototype'],
	'%Float64ArrayPrototype%': ['Float64Array', 'prototype'],
	'%FunctionPrototype%': ['Function', 'prototype'],
	'%Generator%': ['GeneratorFunction', 'prototype'],
	'%GeneratorPrototype%': ['GeneratorFunction', 'prototype', 'prototype'],
	'%Int8ArrayPrototype%': ['Int8Array', 'prototype'],
	'%Int16ArrayPrototype%': ['Int16Array', 'prototype'],
	'%Int32ArrayPrototype%': ['Int32Array', 'prototype'],
	'%JSONParse%': ['JSON', 'parse'],
	'%JSONStringify%': ['JSON', 'stringify'],
	'%MapPrototype%': ['Map', 'prototype'],
	'%NumberPrototype%': ['Number', 'prototype'],
	'%ObjectPrototype%': ['Object', 'prototype'],
	'%ObjProto_toString%': ['Object', 'prototype', 'toString'],
	'%ObjProto_valueOf%': ['Object', 'prototype', 'valueOf'],
	'%PromisePrototype%': ['Promise', 'prototype'],
	'%PromiseProto_then%': ['Promise', 'prototype', 'then'],
	'%Promise_all%': ['Promise', 'all'],
	'%Promise_reject%': ['Promise', 'reject'],
	'%Promise_resolve%': ['Promise', 'resolve'],
	'%RangeErrorPrototype%': ['RangeError', 'prototype'],
	'%ReferenceErrorPrototype%': ['ReferenceError', 'prototype'],
	'%RegExpPrototype%': ['RegExp', 'prototype'],
	'%SetPrototype%': ['Set', 'prototype'],
	'%SharedArrayBufferPrototype%': ['SharedArrayBuffer', 'prototype'],
	'%StringPrototype%': ['String', 'prototype'],
	'%SymbolPrototype%': ['Symbol', 'prototype'],
	'%SyntaxErrorPrototype%': ['SyntaxError', 'prototype'],
	'%TypedArrayPrototype%': ['TypedArray', 'prototype'],
	'%TypeErrorPrototype%': ['TypeError', 'prototype'],
	'%Uint8ArrayPrototype%': ['Uint8Array', 'prototype'],
	'%Uint8ClampedArrayPrototype%': ['Uint8ClampedArray', 'prototype'],
	'%Uint16ArrayPrototype%': ['Uint16Array', 'prototype'],
	'%Uint32ArrayPrototype%': ['Uint32Array', 'prototype'],
	'%URIErrorPrototype%': ['URIError', 'prototype'],
	'%WeakMapPrototype%': ['WeakMap', 'prototype'],
	'%WeakSetPrototype%': ['WeakSet', 'prototype']
};

var bind = require('function-bind');
var hasOwn = require('hasown');
var $concat = bind.call(Function.call, Array.prototype.concat);
var $spliceApply = bind.call(Function.apply, Array.prototype.splice);
var $replace = bind.call(Function.call, String.prototype.replace);
var $strSlice = bind.call(Function.call, String.prototype.slice);
var $exec = bind.call(Function.call, RegExp.prototype.exec);

/* adapted from https://github.com/lodash/lodash/blob/4.17.15/dist/lodash.js#L6735-L6744 */
var rePropName = /[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g;
var reEscapeChar = /\\(\\)?/g; /** Used to match backslashes in property paths. */
var stringToPath = function stringToPath(string) {
	var first = $strSlice(string, 0, 1);
	var last = $strSlice(string, -1);
	if (first === '%' && last !== '%') {
		throw new $SyntaxError('invalid intrinsic syntax, expected closing `%`');
	} else if (last === '%' && first !== '%') {
		throw new $SyntaxError('invalid intrinsic syntax, expected opening `%`');
	}
	var result = [];
	$replace(string, rePropName, function (match, number, quote, subString) {
		result[result.length] = quote ? $replace(subString, reEscapeChar, '$1') : number || match;
	});
	return result;
};
/* end adaptation */

var getBaseIntrinsic = function getBaseIntrinsic(name, allowMissing) {
	var intrinsicName = name;
	var alias;
	if (hasOwn(LEGACY_ALIASES, intrinsicName)) {
		alias = LEGACY_ALIASES[intrinsicName];
		intrinsicName = '%' + alias[0] + '%';
	}

	if (hasOwn(INTRINSICS, intrinsicName)) {
		var value = INTRINSICS[intrinsicName];
		if (value === needsEval) {
			value = doEval(intrinsicName);
		}
		if (typeof value === 'undefined' && !allowMissing) {
			throw new $TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');
		}

		return {
			alias: alias,
			name: intrinsicName,
			value: value
		};
	}

	throw new $SyntaxError('intrinsic ' + name + ' does not exist!');
};

module.exports = function GetIntrinsic(name, allowMissing) {
	if (typeof name !== 'string' || name.length === 0) {
		throw new $TypeError('intrinsic name must be a non-empty string');
	}
	if (arguments.length > 1 && typeof allowMissing !== 'boolean') {
		throw new $TypeError('"allowMissing" argument must be a boolean');
	}

	if ($exec(/^%?[^%]*%?$/, name) === null) {
		throw new $SyntaxError('`%` may not be present anywhere but at the beginning and end of the intrinsic name');
	}
	var parts = stringToPath(name);
	var intrinsicBaseName = parts.length > 0 ? parts[0] : '';

	var intrinsic = getBaseIntrinsic('%' + intrinsicBaseName + '%', allowMissing);
	var intrinsicRealName = intrinsic.name;
	var value = intrinsic.value;
	var skipFurtherCaching = false;

	var alias = intrinsic.alias;
	if (alias) {
		intrinsicBaseName = alias[0];
		$spliceApply(parts, $concat([0, 1], alias));
	}

	for (var i = 1, isOwn = true; i < parts.length; i += 1) {
		var part = parts[i];
		var first = $strSlice(part, 0, 1);
		var last = $strSlice(part, -1);
		if (
			(
				(first === '"' || first === "'" || first === '`')
				|| (last === '"' || last === "'" || last === '`')
			)
			&& first !== last
		) {
			throw new $SyntaxError('property names with quotes must have matching quotes');
		}
		if (part === 'constructor' || !isOwn) {
			skipFurtherCaching = true;
		}

		intrinsicBaseName += '.' + part;
		intrinsicRealName = '%' + intrinsicBaseName + '%';

		if (hasOwn(INTRINSICS, intrinsicRealName)) {
			value = INTRINSICS[intrinsicRealName];
		} else if (value != null) {
			if (!(part in value)) {
				if (!allowMissing) {
					throw new $TypeError('base intrinsic for ' + name + ' exists, but the property is not available.');
				}
				return void undefined;
			}
			if ($gOPD && (i + 1) >= parts.length) {
				var desc = $gOPD(value, part);
				isOwn = !!desc;

				// By convention, when a data property is converted to an accessor
				// property to emulate a data property that does not suffer from
				// the override mistake, that accessor's getter is marked with
				// an `originalValue` property. Here, when we detect this, we
				// uphold the illusion by pretending to see that original data
				// property, i.e., returning the value rather than the getter
				// itself.
				if (isOwn && 'get' in desc && !('originalValue' in desc.get)) {
					value = desc.get;
				} else {
					value = value[part];
				}
			} else {
				isOwn = hasOwn(value, part);
				value = value[part];
			}

			if (isOwn && !skipFurtherCaching) {
				INTRINSICS[intrinsicRealName] = value;
			}
		}
	}
	return value;
};

},{"es-errors":178,"es-errors/eval":177,"es-errors/range":179,"es-errors/ref":180,"es-errors/syntax":181,"es-errors/type":182,"es-errors/uri":183,"function-bind":190,"has-proto":194,"has-symbols":195,"hasown":199}],192:[function(require,module,exports){
'use strict';

var GetIntrinsic = require('get-intrinsic');

var $gOPD = GetIntrinsic('%Object.getOwnPropertyDescriptor%', true);

if ($gOPD) {
	try {
		$gOPD([], 'length');
	} catch (e) {
		// IE 8 has a broken gOPD
		$gOPD = null;
	}
}

module.exports = $gOPD;

},{"get-intrinsic":191}],193:[function(require,module,exports){
'use strict';

var $defineProperty = require('es-define-property');

var hasPropertyDescriptors = function hasPropertyDescriptors() {
	return !!$defineProperty;
};

hasPropertyDescriptors.hasArrayLengthDefineBug = function hasArrayLengthDefineBug() {
	// node v0.6 has a bug where array lengths can be Set but not Defined
	if (!$defineProperty) {
		return null;
	}
	try {
		return $defineProperty([], 'length', { value: 1 }).length !== 1;
	} catch (e) {
		// In Firefox 4-22, defining length on an array throws an exception.
		return true;
	}
};

module.exports = hasPropertyDescriptors;

},{"es-define-property":176}],194:[function(require,module,exports){
'use strict';

var test = {
	__proto__: null,
	foo: {}
};

var $Object = Object;

/** @type {import('.')} */
module.exports = function hasProto() {
	// @ts-expect-error: TS errors on an inherited property for some reason
	return { __proto__: test }.foo === test.foo
		&& !(test instanceof $Object);
};

},{}],195:[function(require,module,exports){
'use strict';

var origSymbol = typeof Symbol !== 'undefined' && Symbol;
var hasSymbolSham = require('./shams');

module.exports = function hasNativeSymbols() {
	if (typeof origSymbol !== 'function') { return false; }
	if (typeof Symbol !== 'function') { return false; }
	if (typeof origSymbol('foo') !== 'symbol') { return false; }
	if (typeof Symbol('bar') !== 'symbol') { return false; }

	return hasSymbolSham();
};

},{"./shams":196}],196:[function(require,module,exports){
'use strict';

/* eslint complexity: [2, 18], max-statements: [2, 33] */
module.exports = function hasSymbols() {
	if (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') { return false; }
	if (typeof Symbol.iterator === 'symbol') { return true; }

	var obj = {};
	var sym = Symbol('test');
	var symObj = Object(sym);
	if (typeof sym === 'string') { return false; }

	if (Object.prototype.toString.call(sym) !== '[object Symbol]') { return false; }
	if (Object.prototype.toString.call(symObj) !== '[object Symbol]') { return false; }

	// temp disabled per https://github.com/ljharb/object.assign/issues/17
	// if (sym instanceof Symbol) { return false; }
	// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4
	// if (!(symObj instanceof Symbol)) { return false; }

	// if (typeof Symbol.prototype.toString !== 'function') { return false; }
	// if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }

	var symVal = 42;
	obj[sym] = symVal;
	for (sym in obj) { return false; } // eslint-disable-line no-restricted-syntax, no-unreachable-loop
	if (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) { return false; }

	if (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) { return false; }

	var syms = Object.getOwnPropertySymbols(obj);
	if (syms.length !== 1 || syms[0] !== sym) { return false; }

	if (!Object.prototype.propertyIsEnumerable.call(obj, sym)) { return false; }

	if (typeof Object.getOwnPropertyDescriptor === 'function') {
		var descriptor = Object.getOwnPropertyDescriptor(obj, sym);
		if (descriptor.value !== symVal || descriptor.enumerable !== true) { return false; }
	}

	return true;
};

},{}],197:[function(require,module,exports){
'use strict';

var hasSymbols = require('has-symbols/shams');

/** @type {import('.')} */
module.exports = function hasToStringTagShams() {
	return hasSymbols() && !!Symbol.toStringTag;
};

},{"has-symbols/shams":196}],198:[function(require,module,exports){
'use strict';

var bind = require('function-bind');

module.exports = bind.call(Function.call, Object.prototype.hasOwnProperty);

},{"function-bind":190}],199:[function(require,module,exports){
'use strict';

var call = Function.prototype.call;
var $hasOwn = Object.prototype.hasOwnProperty;
var bind = require('function-bind');

/** @type {import('.')} */
module.exports = bind.call(call, $hasOwn);

},{"function-bind":190}],200:[function(require,module,exports){
/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */
exports.read = function (buffer, offset, isLE, mLen, nBytes) {
  var e, m
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var nBits = -7
  var i = isLE ? (nBytes - 1) : 0
  var d = isLE ? -1 : 1
  var s = buffer[offset + i]

  i += d

  e = s & ((1 << (-nBits)) - 1)
  s >>= (-nBits)
  nBits += eLen
  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  m = e & ((1 << (-nBits)) - 1)
  e >>= (-nBits)
  nBits += mLen
  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  if (e === 0) {
    e = 1 - eBias
  } else if (e === eMax) {
    return m ? NaN : ((s ? -1 : 1) * Infinity)
  } else {
    m = m + Math.pow(2, mLen)
    e = e - eBias
  }
  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
}

exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
  var e, m, c
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
  var i = isLE ? 0 : (nBytes - 1)
  var d = isLE ? 1 : -1
  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0

  value = Math.abs(value)

  if (isNaN(value) || value === Infinity) {
    m = isNaN(value) ? 1 : 0
    e = eMax
  } else {
    e = Math.floor(Math.log(value) / Math.LN2)
    if (value * (c = Math.pow(2, -e)) < 1) {
      e--
      c *= 2
    }
    if (e + eBias >= 1) {
      value += rt / c
    } else {
      value += rt * Math.pow(2, 1 - eBias)
    }
    if (value * c >= 2) {
      e++
      c /= 2
    }

    if (e + eBias >= eMax) {
      m = 0
      e = eMax
    } else if (e + eBias >= 1) {
      m = ((value * c) - 1) * Math.pow(2, mLen)
      e = e + eBias
    } else {
      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
      e = 0
    }
  }

  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

  e = (e << mLen) | m
  eLen += mLen
  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

  buffer[offset + i - d] |= s * 128
}

},{}],201:[function(require,module,exports){
if (typeof Object.create === 'function') {
  // implementation from standard node.js 'util' module
  module.exports = function inherits(ctor, superCtor) {
    if (superCtor) {
      ctor.super_ = superCtor
      ctor.prototype = Object.create(superCtor.prototype, {
        constructor: {
          value: ctor,
          enumerable: false,
          writable: true,
          configurable: true
        }
      })
    }
  };
} else {
  // old school shim for old browsers
  module.exports = function inherits(ctor, superCtor) {
    if (superCtor) {
      ctor.super_ = superCtor
      var TempCtor = function () {}
      TempCtor.prototype = superCtor.prototype
      ctor.prototype = new TempCtor()
      ctor.prototype.constructor = ctor
    }
  }
}

},{}],202:[function(require,module,exports){
'use strict';

var fnToStr = Function.prototype.toString;
var reflectApply = typeof Reflect === 'object' && Reflect !== null && Reflect.apply;
var badArrayLike;
var isCallableMarker;
if (typeof reflectApply === 'function' && typeof Object.defineProperty === 'function') {
	try {
		badArrayLike = Object.defineProperty({}, 'length', {
			get: function () {
				throw isCallableMarker;
			}
		});
		isCallableMarker = {};
		// eslint-disable-next-line no-throw-literal
		reflectApply(function () { throw 42; }, null, badArrayLike);
	} catch (_) {
		if (_ !== isCallableMarker) {
			reflectApply = null;
		}
	}
} else {
	reflectApply = null;
}

var constructorRegex = /^\s*class\b/;
var isES6ClassFn = function isES6ClassFunction(value) {
	try {
		var fnStr = fnToStr.call(value);
		return constructorRegex.test(fnStr);
	} catch (e) {
		return false; // not a function
	}
};

var tryFunctionObject = function tryFunctionToStr(value) {
	try {
		if (isES6ClassFn(value)) { return false; }
		fnToStr.call(value);
		return true;
	} catch (e) {
		return false;
	}
};
var toStr = Object.prototype.toString;
var objectClass = '[object Object]';
var fnClass = '[object Function]';
var genClass = '[object GeneratorFunction]';
var ddaClass = '[object HTMLAllCollection]'; // IE 11
var ddaClass2 = '[object HTML document.all class]';
var ddaClass3 = '[object HTMLCollection]'; // IE 9-10
var hasToStringTag = typeof Symbol === 'function' && !!Symbol.toStringTag; // better: use `has-tostringtag`

var isIE68 = !(0 in [,]); // eslint-disable-line no-sparse-arrays, comma-spacing

var isDDA = function isDocumentDotAll() { return false; };
if (typeof document === 'object') {
	// Firefox 3 canonicalizes DDA to undefined when it's not accessed directly
	var all = document.all;
	if (toStr.call(all) === toStr.call(document.all)) {
		isDDA = function isDocumentDotAll(value) {
			/* globals document: false */
			// in IE 6-8, typeof document.all is "object" and it's truthy
			if ((isIE68 || !value) && (typeof value === 'undefined' || typeof value === 'object')) {
				try {
					var str = toStr.call(value);
					return (
						str === ddaClass
						|| str === ddaClass2
						|| str === ddaClass3 // opera 12.16
						|| str === objectClass // IE 6-8
					) && value('') == null; // eslint-disable-line eqeqeq
				} catch (e) { /**/ }
			}
			return false;
		};
	}
}

module.exports = reflectApply
	? function isCallable(value) {
		if (isDDA(value)) { return true; }
		if (!value) { return false; }
		if (typeof value !== 'function' && typeof value !== 'object') { return false; }
		try {
			reflectApply(value, null, badArrayLike);
		} catch (e) {
			if (e !== isCallableMarker) { return false; }
		}
		return !isES6ClassFn(value) && tryFunctionObject(value);
	}
	: function isCallable(value) {
		if (isDDA(value)) { return true; }
		if (!value) { return false; }
		if (typeof value !== 'function' && typeof value !== 'object') { return false; }
		if (hasToStringTag) { return tryFunctionObject(value); }
		if (isES6ClassFn(value)) { return false; }
		var strClass = toStr.call(value);
		if (strClass !== fnClass && strClass !== genClass && !(/^\[object HTML/).test(strClass)) { return false; }
		return tryFunctionObject(value);
	};

},{}],203:[function(require,module,exports){
'use strict';

var callBound = require('call-bind/callBound');
var hasToStringTag = require('has-tostringtag/shams')();
var has;
var $exec;
var isRegexMarker;
var badStringifier;

if (hasToStringTag) {
	has = callBound('Object.prototype.hasOwnProperty');
	$exec = callBound('RegExp.prototype.exec');
	isRegexMarker = {};

	var throwRegexMarker = function () {
		throw isRegexMarker;
	};
	badStringifier = {
		toString: throwRegexMarker,
		valueOf: throwRegexMarker
	};

	if (typeof Symbol.toPrimitive === 'symbol') {
		badStringifier[Symbol.toPrimitive] = throwRegexMarker;
	}
}

var $toString = callBound('Object.prototype.toString');
var gOPD = Object.getOwnPropertyDescriptor;
var regexClass = '[object RegExp]';

module.exports = hasToStringTag
	// eslint-disable-next-line consistent-return
	? function isRegex(value) {
		if (!value || typeof value !== 'object') {
			return false;
		}

		var descriptor = gOPD(value, 'lastIndex');
		var hasLastIndexDataProperty = descriptor && has(descriptor, 'value');
		if (!hasLastIndexDataProperty) {
			return false;
		}

		try {
			$exec(value, badStringifier);
		} catch (e) {
			return e === isRegexMarker;
		}
	}
	: function isRegex(value) {
		// In older browsers, typeof regex incorrectly returns 'function'
		if (!value || (typeof value !== 'object' && typeof value !== 'function')) {
			return false;
		}

		return $toString(value) === regexClass;
	};

},{"call-bind/callBound":115,"has-tostringtag/shams":197}],204:[function(require,module,exports){
'use strict';

var keysShim;
if (!Object.keys) {
	// modified from https://github.com/es-shims/es5-shim
	var has = Object.prototype.hasOwnProperty;
	var toStr = Object.prototype.toString;
	var isArgs = require('./isArguments'); // eslint-disable-line global-require
	var isEnumerable = Object.prototype.propertyIsEnumerable;
	var hasDontEnumBug = !isEnumerable.call({ toString: null }, 'toString');
	var hasProtoEnumBug = isEnumerable.call(function () {}, 'prototype');
	var dontEnums = [
		'toString',
		'toLocaleString',
		'valueOf',
		'hasOwnProperty',
		'isPrototypeOf',
		'propertyIsEnumerable',
		'constructor'
	];
	var equalsConstructorPrototype = function (o) {
		var ctor = o.constructor;
		return ctor && ctor.prototype === o;
	};
	var excludedKeys = {
		$applicationCache: true,
		$console: true,
		$external: true,
		$frame: true,
		$frameElement: true,
		$frames: true,
		$innerHeight: true,
		$innerWidth: true,
		$onmozfullscreenchange: true,
		$onmozfullscreenerror: true,
		$outerHeight: true,
		$outerWidth: true,
		$pageXOffset: true,
		$pageYOffset: true,
		$parent: true,
		$scrollLeft: true,
		$scrollTop: true,
		$scrollX: true,
		$scrollY: true,
		$self: true,
		$webkitIndexedDB: true,
		$webkitStorageInfo: true,
		$window: true
	};
	var hasAutomationEqualityBug = (function () {
		/* global window */
		if (typeof window === 'undefined') { return false; }
		for (var k in window) {
			try {
				if (!excludedKeys['$' + k] && has.call(window, k) && window[k] !== null && typeof window[k] === 'object') {
					try {
						equalsConstructorPrototype(window[k]);
					} catch (e) {
						return true;
					}
				}
			} catch (e) {
				return true;
			}
		}
		return false;
	}());
	var equalsConstructorPrototypeIfNotBuggy = function (o) {
		/* global window */
		if (typeof window === 'undefined' || !hasAutomationEqualityBug) {
			return equalsConstructorPrototype(o);
		}
		try {
			return equalsConstructorPrototype(o);
		} catch (e) {
			return false;
		}
	};

	keysShim = function keys(object) {
		var isObject = object !== null && typeof object === 'object';
		var isFunction = toStr.call(object) === '[object Function]';
		var isArguments = isArgs(object);
		var isString = isObject && toStr.call(object) === '[object String]';
		var theKeys = [];

		if (!isObject && !isFunction && !isArguments) {
			throw new TypeError('Object.keys called on a non-object');
		}

		var skipProto = hasProtoEnumBug && isFunction;
		if (isString && object.length > 0 && !has.call(object, 0)) {
			for (var i = 0; i < object.length; ++i) {
				theKeys.push(String(i));
			}
		}

		if (isArguments && object.length > 0) {
			for (var j = 0; j < object.length; ++j) {
				theKeys.push(String(j));
			}
		} else {
			for (var name in object) {
				if (!(skipProto && name === 'prototype') && has.call(object, name)) {
					theKeys.push(String(name));
				}
			}
		}

		if (hasDontEnumBug) {
			var skipConstructor = equalsConstructorPrototypeIfNotBuggy(object);

			for (var k = 0; k < dontEnums.length; ++k) {
				if (!(skipConstructor && dontEnums[k] === 'constructor') && has.call(object, dontEnums[k])) {
					theKeys.push(dontEnums[k]);
				}
			}
		}
		return theKeys;
	};
}
module.exports = keysShim;

},{"./isArguments":206}],205:[function(require,module,exports){
'use strict';

var slice = Array.prototype.slice;
var isArgs = require('./isArguments');

var origKeys = Object.keys;
var keysShim = origKeys ? function keys(o) { return origKeys(o); } : require('./implementation');

var originalKeys = Object.keys;

keysShim.shim = function shimObjectKeys() {
	if (Object.keys) {
		var keysWorksWithArguments = (function () {
			// Safari 5.0 bug
			var args = Object.keys(arguments);
			return args && args.length === arguments.length;
		}(1, 2));
		if (!keysWorksWithArguments) {
			Object.keys = function keys(object) { // eslint-disable-line func-name-matching
				if (isArgs(object)) {
					return originalKeys(slice.call(object));
				}
				return originalKeys(object);
			};
		}
	} else {
		Object.keys = keysShim;
	}
	return Object.keys || keysShim;
};

module.exports = keysShim;

},{"./implementation":204,"./isArguments":206}],206:[function(require,module,exports){
'use strict';

var toStr = Object.prototype.toString;

module.exports = function isArguments(value) {
	var str = toStr.call(value);
	var isArgs = str === '[object Arguments]';
	if (!isArgs) {
		isArgs = str !== '[object Array]' &&
			value !== null &&
			typeof value === 'object' &&
			typeof value.length === 'number' &&
			value.length >= 0 &&
			toStr.call(value.callee) === '[object Function]';
	}
	return isArgs;
};

},{}],207:[function(require,module,exports){
// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };

},{}],208:[function(require,module,exports){
(function (process,setImmediate){(function (){
var through = require('through');
var nextTick = typeof setImmediate !== 'undefined'
    ? setImmediate
    : process.nextTick
;

module.exports = function (write, end) {
    var tr = through(write, end);
    tr.pause();
    var resume = tr.resume;
    var pause = tr.pause;
    var paused = false;
    
    tr.pause = function () {
        paused = true;
        return pause.apply(this, arguments);
    };
    
    tr.resume = function () {
        paused = false;
        return resume.apply(this, arguments);
    };
    
    nextTick(function () {
        if (!paused) tr.resume();
    });
    
    return tr;
};

}).call(this)}).call(this,require('_process'),require("timers").setImmediate)
},{"_process":207,"through":223,"timers":224}],209:[function(require,module,exports){
/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */
/* eslint-disable node/no-deprecated-api */
var buffer = require('buffer')
var Buffer = buffer.Buffer

// alternative to using Object.keys for old browsers
function copyProps (src, dst) {
  for (var key in src) {
    dst[key] = src[key]
  }
}
if (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {
  module.exports = buffer
} else {
  // Copy properties from require('buffer')
  copyProps(buffer, exports)
  exports.Buffer = SafeBuffer
}

function SafeBuffer (arg, encodingOrOffset, length) {
  return Buffer(arg, encodingOrOffset, length)
}

SafeBuffer.prototype = Object.create(Buffer.prototype)

// Copy static methods from Buffer
copyProps(Buffer, SafeBuffer)

SafeBuffer.from = function (arg, encodingOrOffset, length) {
  if (typeof arg === 'number') {
    throw new TypeError('Argument must not be a number')
  }
  return Buffer(arg, encodingOrOffset, length)
}

SafeBuffer.alloc = function (size, fill, encoding) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  var buf = Buffer(size)
  if (fill !== undefined) {
    if (typeof encoding === 'string') {
      buf.fill(fill, encoding)
    } else {
      buf.fill(fill)
    }
  } else {
    buf.fill(0)
  }
  return buf
}

SafeBuffer.allocUnsafe = function (size) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  return Buffer(size)
}

SafeBuffer.allocUnsafeSlow = function (size) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  return buffer.SlowBuffer(size)
}

},{"buffer":97}],210:[function(require,module,exports){
'use strict';

var callBound = require('call-bind/callBound');
var isRegex = require('is-regex');

var $exec = callBound('RegExp.prototype.exec');
var $TypeError = require('es-errors/type');

module.exports = function regexTester(regex) {
	if (!isRegex(regex)) {
		throw new $TypeError('`regex` must be a RegExp');
	}
	return function test(s) {
		return $exec(regex, s) !== null;
	};
};

},{"call-bind/callBound":115,"es-errors/type":182,"is-regex":203}],211:[function(require,module,exports){
'use strict';

var GetIntrinsic = require('get-intrinsic');
var define = require('define-data-property');
var hasDescriptors = require('has-property-descriptors')();
var gOPD = require('gopd');

var $TypeError = require('es-errors/type');
var $floor = GetIntrinsic('%Math.floor%');

/** @type {import('.')} */
module.exports = function setFunctionLength(fn, length) {
	if (typeof fn !== 'function') {
		throw new $TypeError('`fn` is not a function');
	}
	if (typeof length !== 'number' || length < 0 || length > 0xFFFFFFFF || $floor(length) !== length) {
		throw new $TypeError('`length` must be a positive 32-bit integer');
	}

	var loose = arguments.length > 2 && !!arguments[2];

	var functionLengthIsConfigurable = true;
	var functionLengthIsWritable = true;
	if ('length' in fn && gOPD) {
		var desc = gOPD(fn, 'length');
		if (desc && !desc.configurable) {
			functionLengthIsConfigurable = false;
		}
		if (desc && !desc.writable) {
			functionLengthIsWritable = false;
		}
	}

	if (functionLengthIsConfigurable || functionLengthIsWritable || !loose) {
		if (hasDescriptors) {
			define(/** @type {Parameters<define>[0]} */ (fn), 'length', length, true, true);
		} else {
			define(/** @type {Parameters<define>[0]} */ (fn), 'length', length);
		}
	}
	return fn;
};

},{"define-data-property":120,"es-errors/type":182,"get-intrinsic":191,"gopd":192,"has-property-descriptors":193}],212:[function(require,module,exports){
'use strict';

var bind = require('function-bind');
var ES = require('es-abstract/es5');
var replace = bind.call(Function.call, String.prototype.replace);

var leftWhitespace = /^[\x09\x0A\x0B\x0C\x0D\x20\xA0\u1680\u180E\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF]+/;
var rightWhitespace = /[\x09\x0A\x0B\x0C\x0D\x20\xA0\u1680\u180E\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF]+$/;

module.exports = function trim() {
	var S = ES.ToString(ES.CheckObjectCoercible(this));
	return replace(replace(S, leftWhitespace, ''), rightWhitespace, '');
};

},{"es-abstract/es5":168,"function-bind":190}],213:[function(require,module,exports){
'use strict';

var bind = require('function-bind');
var define = require('define-properties');

var implementation = require('./implementation');
var getPolyfill = require('./polyfill');
var shim = require('./shim');

var boundTrim = bind.call(Function.call, getPolyfill());

define(boundTrim, {
	getPolyfill: getPolyfill,
	implementation: implementation,
	shim: shim
});

module.exports = boundTrim;

},{"./implementation":212,"./polyfill":214,"./shim":215,"define-properties":121,"function-bind":190}],214:[function(require,module,exports){
'use strict';

var implementation = require('./implementation');

var zeroWidthSpace = '\u200b';

module.exports = function getPolyfill() {
	if (String.prototype.trim && zeroWidthSpace.trim() === zeroWidthSpace) {
		return String.prototype.trim;
	}
	return implementation;
};

},{"./implementation":212}],215:[function(require,module,exports){
'use strict';

var define = require('define-properties');
var getPolyfill = require('./polyfill');

module.exports = function shimStringTrim() {
	var polyfill = getPolyfill();
	define(String.prototype, { trim: polyfill }, { trim: function () { return String.prototype.trim !== polyfill; } });
	return polyfill;
};

},{"./polyfill":214,"define-properties":121}],216:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

'use strict';

/*<replacement>*/

var Buffer = require('safe-buffer').Buffer;
/*</replacement>*/

var isEncoding = Buffer.isEncoding || function (encoding) {
  encoding = '' + encoding;
  switch (encoding && encoding.toLowerCase()) {
    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':
      return true;
    default:
      return false;
  }
};

function _normalizeEncoding(enc) {
  if (!enc) return 'utf8';
  var retried;
  while (true) {
    switch (enc) {
      case 'utf8':
      case 'utf-8':
        return 'utf8';
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return 'utf16le';
      case 'latin1':
      case 'binary':
        return 'latin1';
      case 'base64':
      case 'ascii':
      case 'hex':
        return enc;
      default:
        if (retried) return; // undefined
        enc = ('' + enc).toLowerCase();
        retried = true;
    }
  }
};

// Do not cache `Buffer.isEncoding` when checking encoding names as some
// modules monkey-patch it to support additional encodings
function normalizeEncoding(enc) {
  var nenc = _normalizeEncoding(enc);
  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);
  return nenc || enc;
}

// StringDecoder provides an interface for efficiently splitting a series of
// buffers into a series of JS strings without breaking apart multi-byte
// characters.
exports.StringDecoder = StringDecoder;
function StringDecoder(encoding) {
  this.encoding = normalizeEncoding(encoding);
  var nb;
  switch (this.encoding) {
    case 'utf16le':
      this.text = utf16Text;
      this.end = utf16End;
      nb = 4;
      break;
    case 'utf8':
      this.fillLast = utf8FillLast;
      nb = 4;
      break;
    case 'base64':
      this.text = base64Text;
      this.end = base64End;
      nb = 3;
      break;
    default:
      this.write = simpleWrite;
      this.end = simpleEnd;
      return;
  }
  this.lastNeed = 0;
  this.lastTotal = 0;
  this.lastChar = Buffer.allocUnsafe(nb);
}

StringDecoder.prototype.write = function (buf) {
  if (buf.length === 0) return '';
  var r;
  var i;
  if (this.lastNeed) {
    r = this.fillLast(buf);
    if (r === undefined) return '';
    i = this.lastNeed;
    this.lastNeed = 0;
  } else {
    i = 0;
  }
  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);
  return r || '';
};

StringDecoder.prototype.end = utf8End;

// Returns only complete characters in a Buffer
StringDecoder.prototype.text = utf8Text;

// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer
StringDecoder.prototype.fillLast = function (buf) {
  if (this.lastNeed <= buf.length) {
    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);
    return this.lastChar.toString(this.encoding, 0, this.lastTotal);
  }
  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);
  this.lastNeed -= buf.length;
};

// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a
// continuation byte. If an invalid byte is detected, -2 is returned.
function utf8CheckByte(byte) {
  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;
  return byte >> 6 === 0x02 ? -1 : -2;
}

// Checks at most 3 bytes at the end of a Buffer in order to detect an
// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)
// needed to complete the UTF-8 character (if applicable) are returned.
function utf8CheckIncomplete(self, buf, i) {
  var j = buf.length - 1;
  if (j < i) return 0;
  var nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) self.lastNeed = nb - 1;
    return nb;
  }
  if (--j < i || nb === -2) return 0;
  nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) self.lastNeed = nb - 2;
    return nb;
  }
  if (--j < i || nb === -2) return 0;
  nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) {
      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;
    }
    return nb;
  }
  return 0;
}

// Validates as many continuation bytes for a multi-byte UTF-8 character as
// needed or are available. If we see a non-continuation byte where we expect
// one, we "replace" the validated continuation bytes we've seen so far with
// a single UTF-8 replacement character ('\ufffd'), to match v8's UTF-8 decoding
// behavior. The continuation byte check is included three times in the case
// where all of the continuation bytes for a character exist in the same buffer.
// It is also done this way as a slight performance increase instead of using a
// loop.
function utf8CheckExtraBytes(self, buf, p) {
  if ((buf[0] & 0xC0) !== 0x80) {
    self.lastNeed = 0;
    return '\ufffd';
  }
  if (self.lastNeed > 1 && buf.length > 1) {
    if ((buf[1] & 0xC0) !== 0x80) {
      self.lastNeed = 1;
      return '\ufffd';
    }
    if (self.lastNeed > 2 && buf.length > 2) {
      if ((buf[2] & 0xC0) !== 0x80) {
        self.lastNeed = 2;
        return '\ufffd';
      }
    }
  }
}

// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.
function utf8FillLast(buf) {
  var p = this.lastTotal - this.lastNeed;
  var r = utf8CheckExtraBytes(this, buf, p);
  if (r !== undefined) return r;
  if (this.lastNeed <= buf.length) {
    buf.copy(this.lastChar, p, 0, this.lastNeed);
    return this.lastChar.toString(this.encoding, 0, this.lastTotal);
  }
  buf.copy(this.lastChar, p, 0, buf.length);
  this.lastNeed -= buf.length;
}

// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a
// partial character, the character's bytes are buffered until the required
// number of bytes are available.
function utf8Text(buf, i) {
  var total = utf8CheckIncomplete(this, buf, i);
  if (!this.lastNeed) return buf.toString('utf8', i);
  this.lastTotal = total;
  var end = buf.length - (total - this.lastNeed);
  buf.copy(this.lastChar, 0, end);
  return buf.toString('utf8', i, end);
}

// For UTF-8, a replacement character is added when ending on a partial
// character.
function utf8End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) return r + '\ufffd';
  return r;
}

// UTF-16LE typically needs two bytes per character, but even if we have an even
// number of bytes available, we need to check if we end on a leading/high
// surrogate. In that case, we need to wait for the next two bytes in order to
// decode the last character properly.
function utf16Text(buf, i) {
  if ((buf.length - i) % 2 === 0) {
    var r = buf.toString('utf16le', i);
    if (r) {
      var c = r.charCodeAt(r.length - 1);
      if (c >= 0xD800 && c <= 0xDBFF) {
        this.lastNeed = 2;
        this.lastTotal = 4;
        this.lastChar[0] = buf[buf.length - 2];
        this.lastChar[1] = buf[buf.length - 1];
        return r.slice(0, -1);
      }
    }
    return r;
  }
  this.lastNeed = 1;
  this.lastTotal = 2;
  this.lastChar[0] = buf[buf.length - 1];
  return buf.toString('utf16le', i, buf.length - 1);
}

// For UTF-16LE we do not explicitly append special replacement characters if we
// end on a partial character, we simply let v8 handle that.
function utf16End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) {
    var end = this.lastTotal - this.lastNeed;
    return r + this.lastChar.toString('utf16le', 0, end);
  }
  return r;
}

function base64Text(buf, i) {
  var n = (buf.length - i) % 3;
  if (n === 0) return buf.toString('base64', i);
  this.lastNeed = 3 - n;
  this.lastTotal = 3;
  if (n === 1) {
    this.lastChar[0] = buf[buf.length - 1];
  } else {
    this.lastChar[0] = buf[buf.length - 2];
    this.lastChar[1] = buf[buf.length - 1];
  }
  return buf.toString('base64', i, buf.length - n);
}

function base64End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);
  return r;
}

// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)
function simpleWrite(buf) {
  return buf.toString(this.encoding);
}

function simpleEnd(buf) {
  return buf && buf.length ? this.write(buf) : '';
}
},{"safe-buffer":209}],217:[function(require,module,exports){
(function (process,setImmediate){(function (){
var defined = require('defined');
var createDefaultStream = require('./lib/default_stream');
var Test = require('./lib/test');
var createResult = require('./lib/results');
var through = require('through');

var canEmitExit = typeof process !== 'undefined' && process
    && typeof process.on === 'function' && process.browser !== true
;
var canExit = typeof process !== 'undefined' && process
    && typeof process.exit === 'function'
;

var nextTick = typeof setImmediate !== 'undefined'
    ? setImmediate
    : process.nextTick
;

exports = module.exports = (function () {
    var harness;
    var lazyLoad = function () {
        return getHarness().apply(this, arguments);
    };
    
    lazyLoad.only = function () {
        return getHarness().only.apply(this, arguments);
    };
    
    lazyLoad.createStream = function (opts) {
        if (!opts) opts = {};
        if (!harness) {
            var output = through();
            getHarness({ stream: output, objectMode: opts.objectMode });
            return output;
        }
        return harness.createStream(opts);
    };
    
    lazyLoad.onFinish = function () {
        return getHarness().onFinish.apply(this, arguments);
    };

    lazyLoad.getHarness = getHarness

    return lazyLoad

    function getHarness (opts) {
        if (!opts) opts = {};
        opts.autoclose = !canEmitExit;
        if (!harness) harness = createExitHarness(opts);
        return harness;
    }
})();

function createExitHarness (conf) {
    if (!conf) conf = {};
    var harness = createHarness({
        autoclose: defined(conf.autoclose, false)
    });
    
    var stream = harness.createStream({ objectMode: conf.objectMode });
    var es = stream.pipe(conf.stream || createDefaultStream());
    if (canEmitExit) {
        es.on('error', function (err) { harness._exitCode = 1 });
    }
    
    var ended = false;
    stream.on('end', function () { ended = true });
    
    if (conf.exit === false) return harness;
    if (!canEmitExit || !canExit) return harness;

    var inErrorState = false;

    process.on('exit', function (code) {
        // let the process exit cleanly.
        if (code !== 0) {
            return
        }

        if (!ended) {
            var only = harness._results._only;
            for (var i = 0; i < harness._tests.length; i++) {
                var t = harness._tests[i];
                if (only && t.name !== only) continue;
                t._exit();
            }
        }
        harness.close();
        process.exit(code || harness._exitCode);
    });
    
    return harness;
}

exports.createHarness = createHarness;
exports.Test = Test;
exports.test = exports; // tap compat
exports.test.skip = Test.skip;

var exitInterval;

function createHarness (conf_) {
    if (!conf_) conf_ = {};
    var results = createResult();
    if (conf_.autoclose !== false) {
        results.once('done', function () { results.close() });
    }
    
    var test = function (name, conf, cb) {
        var t = new Test(name, conf, cb);
        test._tests.push(t);
        
        (function inspectCode (st) {
            st.on('test', function sub (st_) {
                inspectCode(st_);
            });
            st.on('result', function (r) {
                if (!r.ok && typeof r !== 'string') test._exitCode = 1
            });
        })(t);
        
        results.push(t);
        return t;
    };
    test._results = results;
    
    test._tests = [];
    
    test.createStream = function (opts) {
        return results.createStream(opts);
    };

    test.onFinish = function (cb) {
        results.on('done', cb);
    };
    
    var only = false;
    test.only = function (name) {
        if (only) throw new Error('there can only be one only test');
        results.only(name);
        only = true;
        return test.apply(null, arguments);
    };
    test._exitCode = 0;
    
    test.close = function () { results.close() };
    
    return test;
}

}).call(this)}).call(this,require('_process'),require("timers").setImmediate)
},{"./lib/default_stream":218,"./lib/results":220,"./lib/test":221,"_process":207,"defined":122,"through":223,"timers":224}],218:[function(require,module,exports){
(function (process){(function (){
var through = require('through');
var fs = require('fs');

module.exports = function () {
    var line = '';
    var stream = through(write, flush);
    return stream;
    
    function write (buf) {
        for (var i = 0; i < buf.length; i++) {
            var c = typeof buf === 'string'
                ? buf.charAt(i)
                : String.fromCharCode(buf[i])
            ;
            if (c === '\n') flush();
            else line += c;
        }
    }
    
    function flush () {
        if (fs.writeSync && /^win/.test(process.platform)) {
            try { fs.writeSync(1, line + '\n'); }
            catch (e) { stream.emit('error', e) }
        }
        else {
            try { console.log(line) }
            catch (e) { stream.emit('error', e) }
        }
        line = '';
    }
};

}).call(this)}).call(this,require('_process'))
},{"_process":207,"fs":96,"through":223}],219:[function(require,module,exports){
(function (process,setImmediate){(function (){
module.exports = typeof setImmediate !== 'undefined'
    ? setImmediate
    : process.nextTick
;

}).call(this)}).call(this,require('_process'),require("timers").setImmediate)
},{"_process":207,"timers":224}],220:[function(require,module,exports){
(function (process,setImmediate){(function (){
var EventEmitter = require('events').EventEmitter;
var inherits = require('inherits');
var through = require('through');
var resumer = require('resumer');
var inspect = require('object-inspect');
var bind = require('function-bind');
var has = require('has');
var regexpTest = bind.call(Function.call, RegExp.prototype.test);
var yamlIndicators = /\:|\-|\?/;
var nextTick = typeof setImmediate !== 'undefined'
    ? setImmediate
    : process.nextTick
;

module.exports = Results;
inherits(Results, EventEmitter);

function Results () {
    if (!(this instanceof Results)) return new Results;
    this.count = 0;
    this.fail = 0;
    this.pass = 0;
    this._stream = through();
    this.tests = [];
}

Results.prototype.createStream = function (opts) {
    if (!opts) opts = {};
    var self = this;
    var output, testId = 0;
    if (opts.objectMode) {
        output = through();
        self.on('_push', function ontest (t, extra) {
            if (!extra) extra = {};
            var id = testId++;
            t.once('prerun', function () {
                var row = {
                    type: 'test',
                    name: t.name,
                    id: id
                };
                if (has(extra, 'parent')) {
                    row.parent = extra.parent;
                }
                output.queue(row);
            });
            t.on('test', function (st) {
                ontest(st, { parent: id });
            });
            t.on('result', function (res) {
                res.test = id;
                res.type = 'assert';
                output.queue(res);
            });
            t.on('end', function () {
                output.queue({ type: 'end', test: id });
            });
        });
        self.on('done', function () { output.queue(null) });
    }
    else {
        output = resumer();
        output.queue('TAP version 13\n');
        self._stream.pipe(output);
    }
    
    nextTick(function next() {
        var t;
        while (t = getNextTest(self)) {
            t.run();
            if (!t.ended) return t.once('end', function(){ nextTick(next); });
        }
        self.emit('done');
    });
    
    return output;
};

Results.prototype.push = function (t) {
    var self = this;
    self.tests.push(t);
    self._watch(t);
    self.emit('_push', t);
};

Results.prototype.only = function (name) {
    this._only = name;
};

Results.prototype._watch = function (t) {
    var self = this;
    var write = function (s) { self._stream.queue(s) };
    t.once('prerun', function () {
        write('# ' + t.name + '\n');
    });
    
    t.on('result', function (res) {
        if (typeof res === 'string') {
            write('# ' + res + '\n');
            return;
        }
        write(encodeResult(res, self.count + 1));
        self.count ++;

        if (res.ok) self.pass ++
        else self.fail ++
    });
    
    t.on('test', function (st) { self._watch(st) });
};

Results.prototype.close = function () {
    var self = this;
    if (self.closed) self._stream.emit('error', new Error('ALREADY CLOSED'));
    self.closed = true;
    var write = function (s) { self._stream.queue(s) };
    
    write('\n1..' + self.count + '\n');
    write('# tests ' + self.count + '\n');
    write('# pass  ' + self.pass + '\n');
    if (self.fail) write('# fail  ' + self.fail + '\n')
    else write('\n# ok\n')

    self._stream.queue(null);
};

function encodeResult (res, count) {
    var output = '';
    output += (res.ok ? 'ok ' : 'not ok ') + count;
    output += res.name ? ' ' + res.name.toString().replace(/\s+/g, ' ') : '';
    
    if (res.skip) output += ' # SKIP';
    else if (res.todo) output += ' # TODO';
    
    output += '\n';
    if (res.ok) return output;
    
    var outer = '  ';
    var inner = outer + '  ';
    output += outer + '---\n';
    output += inner + 'operator: ' + res.operator + '\n';
    
    if (has(res, 'expected') || has(res, 'actual')) {
        var ex = inspect(res.expected);
        var ac = inspect(res.actual);
        
        if (Math.max(ex.length, ac.length) > 65 || invalidYaml(ex) || invalidYaml(ac)) {
            output += inner + 'expected: |-\n' + inner + '  ' + ex + '\n';
            output += inner + 'actual: |-\n' + inner + '  ' + ac + '\n';
        }
        else {
            output += inner + 'expected: ' + ex + '\n';
            output += inner + 'actual:   ' + ac + '\n';
        }
    }
    if (res.at) {
        output += inner + 'at: ' + res.at + '\n';
    }
    if (res.operator === 'error' && res.actual && res.actual.stack) {
        var lines = String(res.actual.stack).split('\n');
        output += inner + 'stack: |-\n';
        for (var i = 0; i < lines.length; i++) {
            output += inner + '  ' + lines[i] + '\n';
        }
    }
    
    output += outer + '...\n';
    return output;
}

function getNextTest (results) {
    if (!results._only) {
        return results.tests.shift();
    }
    
    do {
        var t = results.tests.shift();
        if (!t) continue;
        if (results._only === t.name) {
            return t;
        }
    } while (results.tests.length !== 0)
}

function invalidYaml (str) {
    return regexpTest(yamlIndicators, str);
}

}).call(this)}).call(this,require('_process'),require("timers").setImmediate)
},{"_process":207,"events":98,"function-bind":190,"has":198,"inherits":201,"object-inspect":222,"resumer":208,"through":223,"timers":224}],221:[function(require,module,exports){
(function (__dirname){(function (){
var deepEqual = require('deep-equal');
var defined = require('defined');
var path = require('path');
var inherits = require('inherits');
var EventEmitter = require('events').EventEmitter;
var has = require('has');
var trim = require('string.prototype.trim');

var nextTick = require('./next_tick');

module.exports = Test;

inherits(Test, EventEmitter);

var getTestArgs = function (name_, opts_, cb_) {
    var name = '(anonymous)';
    var opts = {};
    var cb;

    for (var i = 0; i < arguments.length; i++) {
        var arg = arguments[i];
        var t = typeof arg;
        if (t === 'string') {
            name = arg;
        }
        else if (t === 'object') {
            opts = arg || opts;
        }
        else if (t === 'function') {
            cb = arg;
        }
    }
    return { name: name, opts: opts, cb: cb };
};

function Test (name_, opts_, cb_) {
    if (! (this instanceof Test)) {
        return new Test(name_, opts_, cb_);
    }

    var args = getTestArgs(name_, opts_, cb_);

    this.readable = true;
    this.name = args.name || '(anonymous)';
    this.assertCount = 0;
    this.pendingCount = 0;
    this._skip = args.opts.skip || false;
    this._timeout = args.opts.timeout;
    this._plan = undefined;
    this._cb = args.cb;
    this._progeny = [];
    this._ok = true;

    for (var prop in this) {
        this[prop] = (function bind(self, val) {
            if (typeof val === 'function') {
                return function bound() {
                    return val.apply(self, arguments);
                };
            }
            else return val;
        })(this, this[prop]);
    }
}

Test.prototype.run = function () {
    if (this._skip) {
        this.comment('SKIP ' + this.name);
    }
    if (!this._cb || this._skip) {
        return this._end();
    }
    if (this._timeout != null) {
        this.timeoutAfter(this._timeout);
    }
    this.emit('prerun');
    this._cb(this);
    this.emit('run');
};

Test.prototype.test = function (name, opts, cb) {
    var self = this;
    var t = new Test(name, opts, cb);
    this._progeny.push(t);
    this.pendingCount++;
    this.emit('test', t);
    t.on('prerun', function () {
        self.assertCount++;
    })
    
    if (!self._pendingAsserts()) {
        nextTick(function () {
            self._end();
        });
    }
    
    nextTick(function() {
        if (!self._plan && self.pendingCount == self._progeny.length) {
            self._end();
        }
    });
};

Test.prototype.comment = function (msg) {
    var that = this;
    trim(msg).split('\n').forEach(function (aMsg) {
        that.emit('result', trim(aMsg).replace(/^#\s*/, ''));
    });
};

Test.prototype.plan = function (n) {
    this._plan = n;
    this.emit('plan', n);
};

Test.prototype.timeoutAfter = function(ms) {
    if (!ms) throw new Error('timeoutAfter requires a timespan');
    var self = this;
    var timeout = setTimeout(function() {
        self.fail('test timed out after ' + ms + 'ms');
        self.end();
    }, ms);
    this.once('end', function() {
        clearTimeout(timeout);
    });
}

Test.prototype.end = function (err) { 
    var self = this;
    if (arguments.length >= 1 && !!err) {
        this.ifError(err);
    }
    
    if (this.calledEnd) {
        this.fail('.end() called twice');
    }
    this.calledEnd = true;
    this._end();
};

Test.prototype._end = function (err) {
    var self = this;
    if (this._progeny.length) {
        var t = this._progeny.shift();
        t.on('end', function () { self._end() });
        t.run();
        return;
    }
    
    if (!this.ended) this.emit('end');
    var pendingAsserts = this._pendingAsserts();
    if (!this._planError && this._plan !== undefined && pendingAsserts) {
        this._planError = true;
        this.fail('plan != count', {
            expected : this._plan,
            actual : this.assertCount
        });
    }
    this.ended = true;
};

Test.prototype._exit = function () {
    if (this._plan !== undefined &&
        !this._planError && this.assertCount !== this._plan) {
        this._planError = true;
        this.fail('plan != count', {
            expected : this._plan,
            actual : this.assertCount,
            exiting : true
        });
    }
    else if (!this.ended) {
        this.fail('test exited without ending', {
            exiting: true
        });
    }
};

Test.prototype._pendingAsserts = function () {
    if (this._plan === undefined) {
        return 1;
    }
    else {
        return this._plan - (this._progeny.length + this.assertCount);
    }
};

Test.prototype._assert = function assert (ok, opts) {
    var self = this;
    var extra = opts.extra || {};
    
    var res = {
        id : self.assertCount ++,
        ok : Boolean(ok),
        skip : defined(extra.skip, opts.skip),
        name : defined(extra.message, opts.message, '(unnamed assert)'),
        operator : defined(extra.operator, opts.operator)
    };
    if (has(opts, 'actual') || has(extra, 'actual')) {
        res.actual = defined(extra.actual, opts.actual);
    }
    if (has(opts, 'expected') || has(extra, 'expected')) {
        res.expected = defined(extra.expected, opts.expected);
    }
    this._ok = Boolean(this._ok && ok);
    
    if (!ok) {
        res.error = defined(extra.error, opts.error, new Error(res.name));
    }
    
    if (!ok) {
        var e = new Error('exception');
        var err = (e.stack || '').split('\n');
        var dir = path.dirname(__dirname) + '/';
        
        for (var i = 0; i < err.length; i++) {
            var m = /^[^\s]*\s*\bat\s+(.+)/.exec(err[i]);
            if (!m) {
                continue;
            }
            
            var s = m[1].split(/\s+/);
            var filem = /(\/[^:\s]+:(\d+)(?::(\d+))?)/.exec(s[1]);
            if (!filem) {
                filem = /(\/[^:\s]+:(\d+)(?::(\d+))?)/.exec(s[2]);
                
                if (!filem) {
                    filem = /(\/[^:\s]+:(\d+)(?::(\d+))?)/.exec(s[3]);

                    if (!filem) {
                        continue;
                    }
                }
            }
            
            if (filem[1].slice(0, dir.length) === dir) {
                continue;
            }
            
            res.functionName = s[0];
            res.file = filem[1];
            res.line = Number(filem[2]);
            if (filem[3]) res.column = filem[3];
            
            res.at = m[1];
            break;
        }
    }

    self.emit('result', res);
    
    var pendingAsserts = self._pendingAsserts();
    if (!pendingAsserts) {
        if (extra.exiting) {
            self._end();
        } else {
            nextTick(function () {
                self._end();
            });
        }
    }
    
    if (!self._planError && pendingAsserts < 0) {
        self._planError = true;
        self.fail('plan != count', {
            expected : self._plan,
            actual : self._plan - pendingAsserts
        });
    }
};

Test.prototype.fail = function (msg, extra) {
    this._assert(false, {
        message : msg,
        operator : 'fail',
        extra : extra
    });
};

Test.prototype.pass = function (msg, extra) {
    this._assert(true, {
        message : msg,
        operator : 'pass',
        extra : extra
    });
};

Test.prototype.skip = function (msg, extra) {
    this._assert(true, {
        message : msg,
        operator : 'skip',
        skip : true,
        extra : extra
    });
};

Test.prototype.ok
= Test.prototype['true']
= Test.prototype.assert
= function (value, msg, extra) {
    this._assert(value, {
        message : msg,
        operator : 'ok',
        expected : true,
        actual : value,
        extra : extra
    });
};

Test.prototype.notOk
= Test.prototype['false']
= Test.prototype.notok
= function (value, msg, extra) {
    this._assert(!value, {
        message : msg,
        operator : 'notOk',
        expected : false,
        actual : value,
        extra : extra
    });
};

Test.prototype.error
= Test.prototype.ifError
= Test.prototype.ifErr
= Test.prototype.iferror
= function (err, msg, extra) {
    this._assert(!err, {
        message : defined(msg, String(err)),
        operator : 'error',
        actual : err,
        extra : extra
    });
};

Test.prototype.equal
= Test.prototype.equals
= Test.prototype.isEqual
= Test.prototype.is
= Test.prototype.strictEqual
= Test.prototype.strictEquals
= function (a, b, msg, extra) {
    this._assert(a === b, {
        message : defined(msg, 'should be equal'),
        operator : 'equal',
        actual : a,
        expected : b,
        extra : extra
    });
};

Test.prototype.notEqual
= Test.prototype.notEquals
= Test.prototype.notStrictEqual
= Test.prototype.notStrictEquals
= Test.prototype.isNotEqual
= Test.prototype.isNot
= Test.prototype.not
= Test.prototype.doesNotEqual
= Test.prototype.isInequal
= function (a, b, msg, extra) {
    this._assert(a !== b, {
        message : defined(msg, 'should not be equal'),
        operator : 'notEqual',
        actual : a,
        notExpected : b,
        extra : extra
    });
};

Test.prototype.deepEqual
= Test.prototype.deepEquals
= Test.prototype.isEquivalent
= Test.prototype.same
= function (a, b, msg, extra) {
    this._assert(deepEqual(a, b, { strict: true }), {
        message : defined(msg, 'should be equivalent'),
        operator : 'deepEqual',
        actual : a,
        expected : b,
        extra : extra
    });
};

Test.prototype.deepLooseEqual
= Test.prototype.looseEqual
= Test.prototype.looseEquals
= function (a, b, msg, extra) {
    this._assert(deepEqual(a, b), {
        message : defined(msg, 'should be equivalent'),
        operator : 'deepLooseEqual',
        actual : a,
        expected : b,
        extra : extra
    });
};

Test.prototype.notDeepEqual
= Test.prototype.notEquivalent
= Test.prototype.notDeeply
= Test.prototype.notSame
= Test.prototype.isNotDeepEqual
= Test.prototype.isNotDeeply
= Test.prototype.isNotEquivalent
= Test.prototype.isInequivalent
= function (a, b, msg, extra) {
    this._assert(!deepEqual(a, b, { strict: true }), {
        message : defined(msg, 'should not be equivalent'),
        operator : 'notDeepEqual',
        actual : a,
        notExpected : b,
        extra : extra
    });
};

Test.prototype.notDeepLooseEqual
= Test.prototype.notLooseEqual
= Test.prototype.notLooseEquals
= function (a, b, msg, extra) {
    this._assert(!deepEqual(a, b), {
        message : defined(msg, 'should be equivalent'),
        operator : 'notDeepLooseEqual',
        actual : a,
        expected : b,
        extra : extra
    });
};

Test.prototype['throws'] = function (fn, expected, msg, extra) {
    if (typeof expected === 'string') {
        msg = expected;
        expected = undefined;
    }

    var caught = undefined;

    try {
        fn();
    } catch (err) {
        caught = { error : err };
        var message = err.message;
        delete err.message;
        err.message = message;
    }

    var passed = caught;

    if (expected instanceof RegExp) {
        passed = expected.test(caught && caught.error);
        expected = String(expected);
    }

    if (typeof expected === 'function' && caught) {
        passed = caught.error instanceof expected;
        caught.error = caught.error.constructor;
    }

    this._assert(typeof fn === 'function' && passed, {
        message : defined(msg, 'should throw'),
        operator : 'throws',
        actual : caught && caught.error,
        expected : expected,
        error: !passed && caught && caught.error,
        extra : extra
    });
};

Test.prototype.doesNotThrow = function (fn, expected, msg, extra) {
    if (typeof expected === 'string') {
        msg = expected;
        expected = undefined;
    }
    var caught = undefined;
    try {
        fn();
    }
    catch (err) {
        caught = { error : err };
    }
    this._assert(!caught, {
        message : defined(msg, 'should not throw'),
        operator : 'throws',
        actual : caught && caught.error,
        expected : expected,
        error : caught && caught.error,
        extra : extra
    });
};

Test.skip = function (name_, _opts, _cb) {
    var args = getTestArgs.apply(null, arguments);
    args.opts.skip = true;
    return Test(args.name, args.opts, args.cb);
};

// vim: set softtabstop=4 shiftwidth=4:


}).call(this)}).call(this,"/node_modules/tape/lib")
},{"./next_tick":219,"deep-equal":117,"defined":122,"events":98,"has":198,"inherits":201,"path":99,"string.prototype.trim":213}],222:[function(require,module,exports){
var hasMap = typeof Map === 'function' && Map.prototype;
var mapSizeDescriptor = Object.getOwnPropertyDescriptor && hasMap ? Object.getOwnPropertyDescriptor(Map.prototype, 'size') : null;
var mapSize = hasMap && mapSizeDescriptor && typeof mapSizeDescriptor.get === 'function' ? mapSizeDescriptor.get : null;
var mapForEach = hasMap && Map.prototype.forEach;
var hasSet = typeof Set === 'function' && Set.prototype;
var setSizeDescriptor = Object.getOwnPropertyDescriptor && hasSet ? Object.getOwnPropertyDescriptor(Set.prototype, 'size') : null;
var setSize = hasSet && setSizeDescriptor && typeof setSizeDescriptor.get === 'function' ? setSizeDescriptor.get : null;
var setForEach = hasSet && Set.prototype.forEach;

module.exports = function inspect_ (obj, opts, depth, seen) {
    if (!opts) opts = {};
    
    var maxDepth = opts.depth === undefined ? 5 : opts.depth;
    if (depth === undefined) depth = 0;
    if (depth >= maxDepth && maxDepth > 0
    && obj && typeof obj === 'object') {
        return '[Object]';
    }
    
    if (seen === undefined) seen = [];
    else if (indexOf(seen, obj) >= 0) {
        return '[Circular]';
    }
    
    function inspect (value, from) {
        if (from) {
            seen = seen.slice();
            seen.push(from);
        }
        return inspect_(value, opts, depth + 1, seen);
    }
    
    if (typeof obj === 'string') {
        return inspectString(obj);
    }
    else if (typeof obj === 'function') {
        var name = nameOf(obj);
        return '[Function' + (name ? ': ' + name : '') + ']';
    }
    else if (obj === null) {
        return 'null';
    }
    else if (isSymbol(obj)) {
        var symString = Symbol.prototype.toString.call(obj);
        return typeof obj === 'object' ? 'Object(' + symString + ')' : symString;
    }
    else if (isElement(obj)) {
        var s = '<' + String(obj.nodeName).toLowerCase();
        var attrs = obj.attributes || [];
        for (var i = 0; i < attrs.length; i++) {
            s += ' ' + attrs[i].name + '="' + quote(attrs[i].value) + '"';
        }
        s += '>';
        if (obj.childNodes && obj.childNodes.length) s += '...';
        s += '</' + String(obj.nodeName).toLowerCase() + '>';
        return s;
    }
    else if (isArray(obj)) {
        if (obj.length === 0) return '[]';
        var xs = Array(obj.length);
        for (var i = 0; i < obj.length; i++) {
            xs[i] = has(obj, i) ? inspect(obj[i], obj) : '';
        }
        return '[ ' + xs.join(', ') + ' ]';
    }
    else if (isError(obj)) {
        var parts = [];
        for (var key in obj) {
            if (!has(obj, key)) continue;
            
            if (/[^\w$]/.test(key)) {
                parts.push(inspect(key) + ': ' + inspect(obj[key]));
            }
            else {
                parts.push(key + ': ' + inspect(obj[key]));
            }
        }
        if (parts.length === 0) return '[' + obj + ']';
        return '{ [' + obj + '] ' + parts.join(', ') + ' }';
    }
    else if (typeof obj === 'object' && typeof obj.inspect === 'function') {
        return obj.inspect();
    }
    else if (isMap(obj)) {
        var parts = [];
        mapForEach.call(obj, function (value, key) {
            parts.push(inspect(key, obj) + ' => ' + inspect(value, obj));
        });
        return 'Map (' + mapSize.call(obj) + ') {' + parts.join(', ') + '}';
    }
    else if (isSet(obj)) {
        var parts = [];
        setForEach.call(obj, function (value ) {
            parts.push(inspect(value, obj));
        });
        return 'Set (' + setSize.call(obj) + ') {' + parts.join(', ') + '}';
    }
    else if (typeof obj === 'object' && !isDate(obj) && !isRegExp(obj)) {
        var xs = [], keys = [];
        for (var key in obj) {
            if (has(obj, key)) keys.push(key);
        }
        keys.sort();
        for (var i = 0; i < keys.length; i++) {
            var key = keys[i];
            if (/[^\w$]/.test(key)) {
                xs.push(inspect(key) + ': ' + inspect(obj[key], obj));
            }
            else xs.push(key + ': ' + inspect(obj[key], obj));
        }
        if (xs.length === 0) return '{}';
        return '{ ' + xs.join(', ') + ' }';
    }
    else return String(obj);
};

function quote (s) {
    return String(s).replace(/"/g, '&quot;');
}

function isArray (obj) { return toStr(obj) === '[object Array]' }
function isDate (obj) { return toStr(obj) === '[object Date]' }
function isRegExp (obj) { return toStr(obj) === '[object RegExp]' }
function isError (obj) { return toStr(obj) === '[object Error]' }
function isSymbol (obj) { return toStr(obj) === '[object Symbol]' }

var hasOwn = Object.prototype.hasOwnProperty || function (key) { return key in this; };
function has (obj, key) {
    return hasOwn.call(obj, key);
}

function toStr (obj) {
    return Object.prototype.toString.call(obj);
}

function nameOf (f) {
    if (f.name) return f.name;
    var m = f.toString().match(/^function\s*([\w$]+)/);
    if (m) return m[1];
}

function indexOf (xs, x) {
    if (xs.indexOf) return xs.indexOf(x);
    for (var i = 0, l = xs.length; i < l; i++) {
        if (xs[i] === x) return i;
    }
    return -1;
}

function isMap (x) {
    if (!mapSize) {
        return false;
    }
    try {
        mapSize.call(x);
        return true;
    } catch (e) {}
    return false;
}

function isSet (x) {
    if (!setSize) {
        return false;
    }
    try {
        setSize.call(x);
        return true;
    } catch (e) {}
    return false;
}

function isElement (x) {
    if (!x || typeof x !== 'object') return false;
    if (typeof HTMLElement !== 'undefined' && x instanceof HTMLElement) {
        return true;
    }
    return typeof x.nodeName === 'string'
        && typeof x.getAttribute === 'function'
    ;
}

function inspectString (str) {
    var s = str.replace(/(['\\])/g, '\\$1').replace(/[\x00-\x1f]/g, lowbyte);
    return "'" + s + "'";
    
    function lowbyte (c) {
        var n = c.charCodeAt(0);
        var x = { 8: 'b', 9: 't', 10: 'n', 12: 'f', 13: 'r' }[n];
        if (x) return '\\' + x;
        return '\\x' + (n < 0x10 ? '0' : '') + n.toString(16);
    }
}

},{}],223:[function(require,module,exports){
(function (process){(function (){
var Stream = require('stream')

// through
//
// a stream that does nothing but re-emit the input.
// useful for aggregating a series of changing but not ending streams into one stream)

exports = module.exports = through
through.through = through

//create a readable writable stream.

function through (write, end, opts) {
  write = write || function (data) { this.queue(data) }
  end = end || function () { this.queue(null) }

  var ended = false, destroyed = false, buffer = [], _ended = false
  var stream = new Stream()
  stream.readable = stream.writable = true
  stream.paused = false

//  stream.autoPause   = !(opts && opts.autoPause   === false)
  stream.autoDestroy = !(opts && opts.autoDestroy === false)

  stream.write = function (data) {
    write.call(this, data)
    return !stream.paused
  }

  function drain() {
    while(buffer.length && !stream.paused) {
      var data = buffer.shift()
      if(null === data)
        return stream.emit('end')
      else
        stream.emit('data', data)
    }
  }

  stream.queue = stream.push = function (data) {
//    console.error(ended)
    if(_ended) return stream
    if(data === null) _ended = true
    buffer.push(data)
    drain()
    return stream
  }

  //this will be registered as the first 'end' listener
  //must call destroy next tick, to make sure we're after any
  //stream piped from here.
  //this is only a problem if end is not emitted synchronously.
  //a nicer way to do this is to make sure this is the last listener for 'end'

  stream.on('end', function () {
    stream.readable = false
    if(!stream.writable && stream.autoDestroy)
      process.nextTick(function () {
        stream.destroy()
      })
  })

  function _end () {
    stream.writable = false
    end.call(stream)
    if(!stream.readable && stream.autoDestroy)
      stream.destroy()
  }

  stream.end = function (data) {
    if(ended) return
    ended = true
    if(arguments.length) stream.write(data)
    _end() // will emit or queue
    return stream
  }

  stream.destroy = function () {
    if(destroyed) return
    destroyed = true
    ended = true
    buffer.length = 0
    stream.writable = stream.readable = false
    stream.emit('close')
    return stream
  }

  stream.pause = function () {
    if(stream.paused) return
    stream.paused = true
    return stream
  }

  stream.resume = function () {
    if(stream.paused) {
      stream.paused = false
      stream.emit('resume')
    }
    drain()
    //may have become paused again,
    //as drain emits 'data'.
    if(!stream.paused)
      stream.emit('drain')
    return stream
  }
  return stream
}


}).call(this)}).call(this,require('_process'))
},{"_process":207,"stream":100}],224:[function(require,module,exports){
(function (setImmediate,clearImmediate){(function (){
var nextTick = require('process/browser.js').nextTick;
var apply = Function.prototype.apply;
var slice = Array.prototype.slice;
var immediateIds = {};
var nextImmediateId = 0;

// DOM APIs, for completeness

exports.setTimeout = function() {
  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);
};
exports.setInterval = function() {
  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);
};
exports.clearTimeout =
exports.clearInterval = function(timeout) { timeout.close(); };

function Timeout(id, clearFn) {
  this._id = id;
  this._clearFn = clearFn;
}
Timeout.prototype.unref = Timeout.prototype.ref = function() {};
Timeout.prototype.close = function() {
  this._clearFn.call(window, this._id);
};

// Does not start the time, just sets up the members needed.
exports.enroll = function(item, msecs) {
  clearTimeout(item._idleTimeoutId);
  item._idleTimeout = msecs;
};

exports.unenroll = function(item) {
  clearTimeout(item._idleTimeoutId);
  item._idleTimeout = -1;
};

exports._unrefActive = exports.active = function(item) {
  clearTimeout(item._idleTimeoutId);

  var msecs = item._idleTimeout;
  if (msecs >= 0) {
    item._idleTimeoutId = setTimeout(function onTimeout() {
      if (item._onTimeout)
        item._onTimeout();
    }, msecs);
  }
};

// That's not how node.js implements it but the exposed api is the same.
exports.setImmediate = typeof setImmediate === "function" ? setImmediate : function(fn) {
  var id = nextImmediateId++;
  var args = arguments.length < 2 ? false : slice.call(arguments, 1);

  immediateIds[id] = true;

  nextTick(function onNextTick() {
    if (immediateIds[id]) {
      // fn.call() is faster so we optimize for the common use-case
      // @see http://jsperf.com/call-apply-segu
      if (args) {
        fn.apply(null, args);
      } else {
        fn.call(null);
      }
      // Prevent ids from leaking
      exports.clearImmediate(id);
    }
  });

  return id;
};

exports.clearImmediate = typeof clearImmediate === "function" ? clearImmediate : function(id) {
  delete immediateIds[id];
};
}).call(this)}).call(this,require("timers").setImmediate,require("timers").clearImmediate)
},{"process/browser.js":207,"timers":224}],225:[function(require,module,exports){
(function (global){(function (){

/**
 * Module exports.
 */

module.exports = deprecate;

/**
 * Mark that a method should not be used.
 * Returns a modified function which warns once by default.
 *
 * If `localStorage.noDeprecation = true` is set, then it is a no-op.
 *
 * If `localStorage.throwDeprecation = true` is set, then deprecated functions
 * will throw an Error when invoked.
 *
 * If `localStorage.traceDeprecation = true` is set, then deprecated functions
 * will invoke `console.trace()` instead of `console.error()`.
 *
 * @param {Function} fn - the function to deprecate
 * @param {String} msg - the string to print to the console when `fn` is invoked
 * @returns {Function} a new "deprecated" version of `fn`
 * @api public
 */

function deprecate (fn, msg) {
  if (config('noDeprecation')) {
    return fn;
  }

  var warned = false;
  function deprecated() {
    if (!warned) {
      if (config('throwDeprecation')) {
        throw new Error(msg);
      } else if (config('traceDeprecation')) {
        console.trace(msg);
      } else {
        console.warn(msg);
      }
      warned = true;
    }
    return fn.apply(this, arguments);
  }

  return deprecated;
}

/**
 * Checks `localStorage` for boolean values for the given `name`.
 *
 * @param {String} name
 * @returns {Boolean}
 * @api private
 */

function config (name) {
  // accessing global.localStorage can trigger a DOMException in sandboxed iframes
  try {
    if (!global.localStorage) return false;
  } catch (_) {
    return false;
  }
  var val = global.localStorage[name];
  if (null == val) return false;
  return String(val).toLowerCase() === 'true';
}

}).call(this)}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}]},{},[38,39]);
