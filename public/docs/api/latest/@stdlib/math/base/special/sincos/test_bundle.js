// modules are defined as an array
// [ module function, map of requireuires ]
//
// map of requireuires is short require name -> numeric require
//
// anything defined in a previous bundle is accessed via the
// orig method which is the requireuire for previous bundles

(function outer (modules, cache, entry) {
    // Save the require from previous bundle to this closure if any
    var previousRequire = typeof require == "function" && require;

    function findProxyquireifyName() {
        var deps = Object.keys(modules)
            .map(function (k) { return modules[k][1]; });

        for (var i = 0; i < deps.length; i++) {
            var pq = deps[i]['proxyquireify'];
            if (pq) return pq;
        }
    }

    var proxyquireifyName = findProxyquireifyName();

    function newRequire(name, jumped){
        // Find the proxyquireify module, if present
        var pqify = (proxyquireifyName != null) && cache[proxyquireifyName];

        // Proxyquireify provides a separate cache that is used when inside
        // a proxyquire call, and is set to null outside a proxyquire call.
        // This allows the regular caching semantics to work correctly both
        // inside and outside proxyquire calls while keeping the cached
        // modules isolated.
        // When switching from one proxyquire call to another, it clears
        // the cache to prevent contamination between different sets
        // of stubs.
        var currentCache = (pqify && pqify.exports._cache) || cache;

        if(!currentCache[name]) {
            if(!modules[name]) {
                // if we cannot find the the module within our internal map or
                // cache jump to the current global require ie. the last bundle
                // that was added to the page.
                var currentRequire = typeof require == "function" && require;
                if (!jumped && currentRequire) return currentRequire(name, true);

                // If there are other bundles on this page the require from the
                // previous one is saved to 'previousRequire'. Repeat this as
                // many times as there are bundles until the module is found or
                // we exhaust the require chain.
                if (previousRequire) return previousRequire(name, true);
                var err = new Error('Cannot find module \'' + name + '\'');
                err.code = 'MODULE_NOT_FOUND';
                throw err;
            }
            var m = currentCache[name] = {exports:{}};

            // The normal browserify require function
            var req = function(x){
                var id = modules[name][1][x];
                return newRequire(id ? id : x);
            };

            // The require function substituted for proxyquireify
            var moduleRequire = function(x){
                var pqify = (proxyquireifyName != null) && cache[proxyquireifyName];
                // Only try to use the proxyquireify version if it has been `require`d
                if (pqify && pqify.exports._proxy) {
                    return pqify.exports._proxy(req, x);
                } else {
                    return req(x);
                }
            };

            modules[name][0].call(m.exports,moduleRequire,m,m.exports,outer,modules,currentCache,entry);
        }
        return currentCache[name].exports;
    }
    for(var i=0;i<entry.length;i++) newRequire(entry[i]);

    // Override the current require with this new one
    return newRequire;
})
({1:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2021 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Create a filled "generic" array.
*
* @module @stdlib/array/base/filled
*
* @example
* var filled = require( '@stdlib/array/base/filled' );
*
* var out = filled( 0.0, 3 );
* // returns [ 0.0, 0.0, 0.0 ]
*
* @example
* var filled = require( '@stdlib/array/base/filled' );
*
* var out = filled( 'beep', 3 );
* // returns [ 'beep', 'beep', 'beep' ]
*/

// MODULES //

var main = require( './main.js' );


// EXPORTS //

module.exports = main;

},{"./main.js":2}],2:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2021 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MAIN //

/**
* Returns a filled "generic" array.
*
* @param {*} value - fill value
* @param {NonNegativeInteger} len - array length
* @returns {Array} filled array
*
* @example
* var out = filled( 0.0, 3 );
* // returns [ 0.0, 0.0, 0.0 ]
*
* @example
* var out = filled( 'beep', 3 );
* // returns [ 'beep', 'beep', 'beep' ]
*/
function filled( value, len ) {
	var arr;
	var i;

	// Manually push elements in order to ensure "fast" elements...
	arr = [];
	for ( i = 0; i < len; i++ ) {
		arr.push( value );
	}
	return arr;
}


// EXPORTS //

module.exports = filled;

},{}],3:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2021 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Create a zero-filled "generic" array.
*
* @module @stdlib/array/base/zeros
*
* @example
* var zeros = require( '@stdlib/array/base/zeros' );
*
* var out = zeros( 3 );
* // returns [ 0.0, 0.0, 0.0 ]
*/

// MODULES //

var main = require( './main.js' );


// EXPORTS //

module.exports = main;

},{"./main.js":4}],4:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2021 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var filled = require( '@stdlib/array/base/filled' );


// MAIN //

/**
* Returns a zero-filled "generic" array.
*
* @param {NonNegativeInteger} len - array length
* @returns {Array} output array
*
* @example
* var out = zeros( 3 );
* // returns [ 0.0, 0.0, 0.0 ]
*/
function zeros( len ) {
	return filled( 0.0, len );
}


// EXPORTS //

module.exports = zeros;

},{"@stdlib/array/base/filled":1}],5:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MAIN //

var ctor = ( typeof Float64Array === 'function' ) ? Float64Array : void 0; // eslint-disable-line stdlib/require-globals


// EXPORTS //

module.exports = ctor;

},{}],6:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Typed array constructor which returns a typed array representing an array of double-precision floating-point numbers in the platform byte order.
*
* @module @stdlib/array/float64
*
* @example
* var ctor = require( '@stdlib/array/float64' );
*
* var arr = new ctor( 10 );
* // returns <Float64Array>
*/

// MODULES //

var hasFloat64ArraySupport = require( '@stdlib/assert/has-float64array-support' );
var builtin = require( './float64array.js' );
var polyfill = require( './polyfill.js' );


// MAIN //

var ctor;
if ( hasFloat64ArraySupport() ) {
	ctor = builtin;
} else {
	ctor = polyfill;
}


// EXPORTS //

module.exports = ctor;

},{"./float64array.js":5,"./polyfill.js":7,"@stdlib/assert/has-float64array-support":18}],7:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// TODO: write polyfill

// MAIN //

/**
* Typed array which represents an array of double-precision floating-point numbers in the platform byte order.
*
* @throws {Error} not implemented
*/
function polyfill() {
	throw new Error( 'not implemented' );
}


// EXPORTS //

module.exports = polyfill;

},{}],8:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Typed array constructor which returns a typed array representing an array of 16-bit unsigned integers in the platform byte order.
*
* @module @stdlib/array/uint16
*
* @example
* var ctor = require( '@stdlib/array/uint16' );
*
* var arr = new ctor( 10 );
* // returns <Uint16Array>
*/

// MODULES //

var hasUint16ArraySupport = require( '@stdlib/assert/has-uint16array-support' );
var builtin = require( './uint16array.js' );
var polyfill = require( './polyfill.js' );


// MAIN //

var ctor;
if ( hasUint16ArraySupport() ) {
	ctor = builtin;
} else {
	ctor = polyfill;
}


// EXPORTS //

module.exports = ctor;

},{"./polyfill.js":9,"./uint16array.js":10,"@stdlib/assert/has-uint16array-support":26}],9:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// TODO: write polyfill

// MAIN //

/**
* Typed array which represents an array of 16-bit unsigned integers in the platform byte order.
*
* @throws {Error} not implemented
*/
function polyfill() {
	throw new Error( 'not implemented' );
}


// EXPORTS //

module.exports = polyfill;

},{}],10:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MAIN //

var ctor = ( typeof Uint16Array === 'function' ) ? Uint16Array : void 0; // eslint-disable-line stdlib/require-globals


// EXPORTS //

module.exports = ctor;

},{}],11:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Typed array constructor which returns a typed array representing an array of 32-bit unsigned integers in the platform byte order.
*
* @module @stdlib/array/uint32
*
* @example
* var ctor = require( '@stdlib/array/uint32' );
*
* var arr = new ctor( 10 );
* // returns <Uint32Array>
*/

// MODULES //

var hasUint32ArraySupport = require( '@stdlib/assert/has-uint32array-support' );
var builtin = require( './uint32array.js' );
var polyfill = require( './polyfill.js' );


// MAIN //

var ctor;
if ( hasUint32ArraySupport() ) {
	ctor = builtin;
} else {
	ctor = polyfill;
}


// EXPORTS //

module.exports = ctor;

},{"./polyfill.js":12,"./uint32array.js":13,"@stdlib/assert/has-uint32array-support":29}],12:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// TODO: write polyfill

// MAIN //

/**
* Typed array which represents an array of 32-bit unsigned integers in the platform byte order.
*
* @throws {Error} not implemented
*/
function polyfill() {
	throw new Error( 'not implemented' );
}


// EXPORTS //

module.exports = polyfill;

},{}],13:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MAIN //

var ctor = ( typeof Uint32Array === 'function' ) ? Uint32Array : void 0; // eslint-disable-line stdlib/require-globals


// EXPORTS //

module.exports = ctor;

},{}],14:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Typed array constructor which returns a typed array representing an array of 8-bit unsigned integers in the platform byte order.
*
* @module @stdlib/array/uint8
*
* @example
* var ctor = require( '@stdlib/array/uint8' );
*
* var arr = new ctor( 10 );
* // returns <Uint8Array>
*/

// MODULES //

var hasUint8ArraySupport = require( '@stdlib/assert/has-uint8array-support' );
var builtin = require( './uint8array.js' );
var polyfill = require( './polyfill.js' );


// MAIN //

var ctor;
if ( hasUint8ArraySupport() ) {
	ctor = builtin;
} else {
	ctor = polyfill;
}


// EXPORTS //

module.exports = ctor;

},{"./polyfill.js":15,"./uint8array.js":16,"@stdlib/assert/has-uint8array-support":32}],15:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// TODO: write polyfill

// MAIN //

/**
* Typed array which represents an array of 8-bit unsigned integers in the platform byte order.
*
* @throws {Error} not implemented
*/
function polyfill() {
	throw new Error( 'not implemented' );
}


// EXPORTS //

module.exports = polyfill;

},{}],16:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MAIN //

var ctor = ( typeof Uint8Array === 'function' ) ? Uint8Array : void 0; // eslint-disable-line stdlib/require-globals


// EXPORTS //

module.exports = ctor;

},{}],17:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MAIN //

var main = ( typeof Float64Array === 'function' ) ? Float64Array : null; // eslint-disable-line stdlib/require-globals


// EXPORTS //

module.exports = main;

},{}],18:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Test for native `Float64Array` support.
*
* @module @stdlib/assert/has-float64array-support
*
* @example
* var hasFloat64ArraySupport = require( '@stdlib/assert/has-float64array-support' );
*
* var bool = hasFloat64ArraySupport();
* // returns <boolean>
*/

// MODULES //

var hasFloat64ArraySupport = require( './main.js' );


// EXPORTS //

module.exports = hasFloat64ArraySupport;

},{"./main.js":19}],19:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var isFloat64Array = require( '@stdlib/assert/is-float64array' );
var GlobalFloat64Array = require( './float64array.js' );


// MAIN //

/**
* Tests for native `Float64Array` support.
*
* @returns {boolean} boolean indicating if an environment has `Float64Array` support
*
* @example
* var bool = hasFloat64ArraySupport();
* // returns <boolean>
*/
function hasFloat64ArraySupport() {
	var bool;
	var arr;

	if ( typeof GlobalFloat64Array !== 'function' ) {
		return false;
	}
	// Test basic support...
	try {
		arr = new GlobalFloat64Array( [ 1.0, 3.14, -3.14, NaN ] );
		bool = (
			isFloat64Array( arr ) &&
			arr[ 0 ] === 1.0 &&
			arr[ 1 ] === 3.14 &&
			arr[ 2 ] === -3.14 &&
			arr[ 3 ] !== arr[ 3 ]
		);
	} catch ( err ) { // eslint-disable-line no-unused-vars
		bool = false;
	}
	return bool;
}


// EXPORTS //

module.exports = hasFloat64ArraySupport;

},{"./float64array.js":17,"@stdlib/assert/is-float64array":35}],20:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Test whether an object has a specified property.
*
* @module @stdlib/assert/has-own-property
*
* @example
* var hasOwnProp = require( '@stdlib/assert/has-own-property' );
*
* var beep = {
*     'boop': true
* };
*
* var bool = hasOwnProp( beep, 'boop' );
* // returns true
*
* bool = hasOwnProp( beep, 'bop' );
* // returns false
*/

// MODULES //

var hasOwnProp = require( './main.js' );


// EXPORTS //

module.exports = hasOwnProp;

},{"./main.js":21}],21:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// FUNCTIONS //

var has = Object.prototype.hasOwnProperty;


// MAIN //

/**
* Tests if an object has a specified property.
*
* @param {*} value - value to test
* @param {*} property - property to test
* @returns {boolean} boolean indicating if an object has a specified property
*
* @example
* var beep = {
*     'boop': true
* };
*
* var bool = hasOwnProp( beep, 'boop' );
* // returns true
*
* @example
* var beep = {
*     'boop': true
* };
*
* var bool = hasOwnProp( beep, 'bap' );
* // returns false
*/
function hasOwnProp( value, property ) {
	if (
		value === void 0 ||
		value === null
	) {
		return false;
	}
	return has.call( value, property );
}


// EXPORTS //

module.exports = hasOwnProp;

},{}],22:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Test for native `Symbol` support.
*
* @module @stdlib/assert/has-symbol-support
*
* @example
* var hasSymbolSupport = require( '@stdlib/assert/has-symbol-support' );
*
* var bool = hasSymbolSupport();
* // returns <boolean>
*/

// MODULES //

var hasSymbolSupport = require( './main.js' );


// EXPORTS //

module.exports = hasSymbolSupport;

},{"./main.js":23}],23:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MAIN //

/**
* Tests for native `Symbol` support.
*
* @returns {boolean} boolean indicating if an environment has `Symbol` support
*
* @example
* var bool = hasSymbolSupport();
* // returns <boolean>
*/
function hasSymbolSupport() {
	return (
		typeof Symbol === 'function' &&
		typeof Symbol( 'foo' ) === 'symbol'
	);
}


// EXPORTS //

module.exports = hasSymbolSupport;

},{}],24:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Test for native `toStringTag` support.
*
* @module @stdlib/assert/has-tostringtag-support
*
* @example
* var hasToStringTagSupport = require( '@stdlib/assert/has-tostringtag-support' );
*
* var bool = hasToStringTagSupport();
* // returns <boolean>
*/

// MODULES //

var hasToStringTagSupport = require( './main.js' );


// EXPORTS //

module.exports = hasToStringTagSupport;

},{"./main.js":25}],25:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var hasSymbols = require( '@stdlib/assert/has-symbol-support' );


// VARIABLES //

var FLG = hasSymbols();


// MAIN //

/**
* Tests for native `toStringTag` support.
*
* @returns {boolean} boolean indicating if an environment has `toStringTag` support
*
* @example
* var bool = hasToStringTagSupport();
* // returns <boolean>
*/
function hasToStringTagSupport() {
	return ( FLG && typeof Symbol.toStringTag === 'symbol' );
}


// EXPORTS //

module.exports = hasToStringTagSupport;

},{"@stdlib/assert/has-symbol-support":22}],26:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Test for native `Uint16Array` support.
*
* @module @stdlib/assert/has-uint16array-support
*
* @example
* var hasUint16ArraySupport = require( '@stdlib/assert/has-uint16array-support' );
*
* var bool = hasUint16ArraySupport();
* // returns <boolean>
*/

// MODULES //

var hasUint16ArraySupport = require( './main.js' );


// EXPORTS //

module.exports = hasUint16ArraySupport;

},{"./main.js":27}],27:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var isUint16Array = require( '@stdlib/assert/is-uint16array' );
var UINT16_MAX = require( '@stdlib/constants/uint16/max' );
var GlobalUint16Array = require( './uint16array.js' );


// MAIN //

/**
* Tests for native `Uint16Array` support.
*
* @returns {boolean} boolean indicating if an environment has `Uint16Array` support
*
* @example
* var bool = hasUint16ArraySupport();
* // returns <boolean>
*/
function hasUint16ArraySupport() {
	var bool;
	var arr;

	if ( typeof GlobalUint16Array !== 'function' ) {
		return false;
	}
	// Test basic support...
	try {
		arr = [ 1, 3.14, -3.14, UINT16_MAX+1, UINT16_MAX+2 ];
		arr = new GlobalUint16Array( arr );
		bool = (
			isUint16Array( arr ) &&
			arr[ 0 ] === 1 &&
			arr[ 1 ] === 3 &&            // truncation
			arr[ 2 ] === UINT16_MAX-2 && // truncation and wrap around
			arr[ 3 ] === 0 &&            // wrap around
			arr[ 4 ] === 1               // wrap around
		);
	} catch ( err ) { // eslint-disable-line no-unused-vars
		bool = false;
	}
	return bool;
}


// EXPORTS //

module.exports = hasUint16ArraySupport;

},{"./uint16array.js":28,"@stdlib/assert/is-uint16array":40,"@stdlib/constants/uint16/max":55}],28:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MAIN //

var main = ( typeof Uint16Array === 'function' ) ? Uint16Array : null; // eslint-disable-line stdlib/require-globals


// EXPORTS //

module.exports = main;

},{}],29:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Test for native `Uint32Array` support.
*
* @module @stdlib/assert/has-uint32array-support
*
* @example
* var hasUint32ArraySupport = require( '@stdlib/assert/has-uint32array-support' );
*
* var bool = hasUint32ArraySupport();
* // returns <boolean>
*/

// MODULES //

var hasUint32ArraySupport = require( './main.js' );


// EXPORTS //

module.exports = hasUint32ArraySupport;

},{"./main.js":30}],30:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var isUint32Array = require( '@stdlib/assert/is-uint32array' );
var UINT32_MAX = require( '@stdlib/constants/uint32/max' );
var GlobalUint32Array = require( './uint32array.js' );


// MAIN //

/**
* Tests for native `Uint32Array` support.
*
* @returns {boolean} boolean indicating if an environment has `Uint32Array` support
*
* @example
* var bool = hasUint32ArraySupport();
* // returns <boolean>
*/
function hasUint32ArraySupport() {
	var bool;
	var arr;

	if ( typeof GlobalUint32Array !== 'function' ) {
		return false;
	}
	// Test basic support...
	try {
		arr = [ 1, 3.14, -3.14, UINT32_MAX+1, UINT32_MAX+2 ];
		arr = new GlobalUint32Array( arr );
		bool = (
			isUint32Array( arr ) &&
			arr[ 0 ] === 1 &&
			arr[ 1 ] === 3 &&            // truncation
			arr[ 2 ] === UINT32_MAX-2 && // truncation and wrap around
			arr[ 3 ] === 0 &&            // wrap around
			arr[ 4 ] === 1               // wrap around
		);
	} catch ( err ) { // eslint-disable-line no-unused-vars
		bool = false;
	}
	return bool;
}


// EXPORTS //

module.exports = hasUint32ArraySupport;

},{"./uint32array.js":31,"@stdlib/assert/is-uint32array":42,"@stdlib/constants/uint32/max":56}],31:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MAIN //

var main = ( typeof Uint32Array === 'function' ) ? Uint32Array : null; // eslint-disable-line stdlib/require-globals


// EXPORTS //

module.exports = main;

},{}],32:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Test for native `Uint8Array` support.
*
* @module @stdlib/assert/has-uint8array-support
*
* @example
* var hasUint8ArraySupport = require( '@stdlib/assert/has-uint8array-support' );
*
* var bool = hasUint8ArraySupport();
* // returns <boolean>
*/

// MODULES //

var hasUint8ArraySupport = require( './main.js' );


// EXPORTS //

module.exports = hasUint8ArraySupport;

},{"./main.js":33}],33:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var isUint8Array = require( '@stdlib/assert/is-uint8array' );
var UINT8_MAX = require( '@stdlib/constants/uint8/max' );
var GlobalUint8Array = require( './uint8array.js' );


// MAIN //

/**
* Tests for native `Uint8Array` support.
*
* @returns {boolean} boolean indicating if an environment has `Uint8Array` support
*
* @example
* var bool = hasUint8ArraySupport();
* // returns <boolean>
*/
function hasUint8ArraySupport() {
	var bool;
	var arr;

	if ( typeof GlobalUint8Array !== 'function' ) {
		return false;
	}
	// Test basic support...
	try {
		arr = [ 1, 3.14, -3.14, UINT8_MAX+1, UINT8_MAX+2 ];
		arr = new GlobalUint8Array( arr );
		bool = (
			isUint8Array( arr ) &&
			arr[ 0 ] === 1 &&
			arr[ 1 ] === 3 &&           // truncation
			arr[ 2 ] === UINT8_MAX-2 && // truncation and wrap around
			arr[ 3 ] === 0 &&           // wrap around
			arr[ 4 ] === 1              // wrap around
		);
	} catch ( err ) { // eslint-disable-line no-unused-vars
		bool = false;
	}
	return bool;
}


// EXPORTS //

module.exports = hasUint8ArraySupport;

},{"./uint8array.js":34,"@stdlib/assert/is-uint8array":44,"@stdlib/constants/uint8/max":57}],34:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MAIN //

var main = ( typeof Uint8Array === 'function' ) ? Uint8Array : null; // eslint-disable-line stdlib/require-globals


// EXPORTS //

module.exports = main;

},{}],35:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Test if a value is a Float64Array.
*
* @module @stdlib/assert/is-float64array
*
* @example
* var isFloat64Array = require( '@stdlib/assert/is-float64array' );
*
* var bool = isFloat64Array( new Float64Array( 10 ) );
* // returns true
*
* bool = isFloat64Array( [] );
* // returns false
*/

// MODULES //

var isFloat64Array = require( './main.js' );


// EXPORTS //

module.exports = isFloat64Array;

},{"./main.js":36}],36:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var nativeClass = require( '@stdlib/utils/native-class' );


// VARIABLES //

var hasFloat64Array = ( typeof Float64Array === 'function' ); // eslint-disable-line stdlib/require-globals


// MAIN //

/**
* Tests if a value is a Float64Array.
*
* @param {*} value - value to test
* @returns {boolean} boolean indicating whether value is a Float64Array
*
* @example
* var bool = isFloat64Array( new Float64Array( 10 ) );
* // returns true
*
* @example
* var bool = isFloat64Array( [] );
* // returns false
*/
function isFloat64Array( value ) {
	return (
		( hasFloat64Array && value instanceof Float64Array ) || // eslint-disable-line stdlib/require-globals
		nativeClass( value ) === '[object Float64Array]'
	);
}


// EXPORTS //

module.exports = isFloat64Array;

},{"@stdlib/utils/native-class":107}],37:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var Uint8Array = require( '@stdlib/array/uint8' );
var Uint16Array = require( '@stdlib/array/uint16' );


// MAIN //

var ctors = {
	'uint16': Uint16Array,
	'uint8': Uint8Array
};


// EXPORTS //

module.exports = ctors;

},{"@stdlib/array/uint16":8,"@stdlib/array/uint8":14}],38:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Return a boolean indicating if an environment is little endian.
*
* @module @stdlib/assert/is-little-endian
*
* @example
* var IS_LITTLE_ENDIAN = require( '@stdlib/assert/is-little-endian' );
*
* var bool = IS_LITTLE_ENDIAN;
* // returns <boolean>
*/

// MODULES //

var IS_LITTLE_ENDIAN = require( './main.js' );


// EXPORTS //

module.exports = IS_LITTLE_ENDIAN;

},{"./main.js":39}],39:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var ctors = require( './ctors.js' );


// VARIABLES //

var bool;


// FUNCTIONS //

/**
* Returns a boolean indicating if an environment is little endian.
*
* @private
* @returns {boolean} boolean indicating if an environment is little endian
*
* @example
* var bool = isLittleEndian();
* // returns <boolean>
*/
function isLittleEndian() {
	var uint16view;
	var uint8view;

	uint16view = new ctors[ 'uint16' ]( 1 );

	/*
	* Set the uint16 view to a value having distinguishable lower and higher order words.
	*
	* 4660 => 0x1234 => 0x12 0x34 => '00010010 00110100' => (0x12,0x34) == (18,52)
	*/
	uint16view[ 0 ] = 0x1234;

	// Create a uint8 view on top of the uint16 buffer:
	uint8view = new ctors[ 'uint8' ]( uint16view.buffer );

	// If little endian, the least significant byte will be first...
	return ( uint8view[ 0 ] === 0x34 );
}


// MAIN //

bool = isLittleEndian();


// EXPORTS //

module.exports = bool;

},{"./ctors.js":37}],40:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Test if a value is a Uint16Array.
*
* @module @stdlib/assert/is-uint16array
*
* @example
* var isUint16Array = require( '@stdlib/assert/is-uint16array' );
*
* var bool = isUint16Array( new Uint16Array( 10 ) );
* // returns true
*
* bool = isUint16Array( [] );
* // returns false
*/

// MODULES //

var isUint16Array = require( './main.js' );


// EXPORTS //

module.exports = isUint16Array;

},{"./main.js":41}],41:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var nativeClass = require( '@stdlib/utils/native-class' );


// VARIABLES //

var hasUint16Array = ( typeof Uint16Array === 'function' ); // eslint-disable-line stdlib/require-globals


// MAIN //

/**
* Tests if a value is a Uint16Array.
*
* @param {*} value - value to test
* @returns {boolean} boolean indicating whether value is a Uint16Array
*
* @example
* var bool = isUint16Array( new Uint16Array( 10 ) );
* // returns true
*
* @example
* var bool = isUint16Array( [] );
* // returns false
*/
function isUint16Array( value ) {
	return (
		( hasUint16Array && value instanceof Uint16Array ) || // eslint-disable-line stdlib/require-globals
		nativeClass( value ) === '[object Uint16Array]'
	);
}


// EXPORTS //

module.exports = isUint16Array;

},{"@stdlib/utils/native-class":107}],42:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Test if a value is a Uint32Array.
*
* @module @stdlib/assert/is-uint32array
*
* @example
* var isUint32Array = require( '@stdlib/assert/is-uint32array' );
*
* var bool = isUint32Array( new Uint32Array( 10 ) );
* // returns true
*
* bool = isUint32Array( [] );
* // returns false
*/

// MODULES //

var isUint32Array = require( './main.js' );


// EXPORTS //

module.exports = isUint32Array;

},{"./main.js":43}],43:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var nativeClass = require( '@stdlib/utils/native-class' );


// VARIABLES //

var hasUint32Array = ( typeof Uint32Array === 'function' ); // eslint-disable-line stdlib/require-globals


// MAIN //

/**
* Tests if a value is a Uint32Array.
*
* @param {*} value - value to test
* @returns {boolean} boolean indicating whether value is a Uint32Array
*
* @example
* var bool = isUint32Array( new Uint32Array( 10 ) );
* // returns true
*
* @example
* var bool = isUint32Array( [] );
* // returns false
*/
function isUint32Array( value ) {
	return (
		( hasUint32Array && value instanceof Uint32Array ) || // eslint-disable-line stdlib/require-globals
		nativeClass( value ) === '[object Uint32Array]'
	);
}


// EXPORTS //

module.exports = isUint32Array;

},{"@stdlib/utils/native-class":107}],44:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Test if a value is a Uint8Array.
*
* @module @stdlib/assert/is-uint8array
*
* @example
* var isUint8Array = require( '@stdlib/assert/is-uint8array' );
*
* var bool = isUint8Array( new Uint8Array( 10 ) );
* // returns true
*
* bool = isUint8Array( [] );
* // returns false
*/

// MODULES //

var isUint8Array = require( './main.js' );


// EXPORTS //

module.exports = isUint8Array;

},{"./main.js":45}],45:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var nativeClass = require( '@stdlib/utils/native-class' );


// VARIABLES //

var hasUint8Array = ( typeof Uint8Array === 'function' ); // eslint-disable-line stdlib/require-globals


// MAIN //

/**
* Tests if a value is a Uint8Array.
*
* @param {*} value - value to test
* @returns {boolean} boolean indicating whether value is a Uint8Array
*
* @example
* var bool = isUint8Array( new Uint8Array( 10 ) );
* // returns true
*
* @example
* var bool = isUint8Array( [] );
* // returns false
*/
function isUint8Array( value ) {
	return (
		( hasUint8Array && value instanceof Uint8Array ) || // eslint-disable-line stdlib/require-globals
		nativeClass( value ) === '[object Uint8Array]'
	);
}


// EXPORTS //

module.exports = isUint8Array;

},{"@stdlib/utils/native-class":107}],46:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Difference between one and the smallest value greater than one that can be represented as a double-precision floating-point number.
*
* @module @stdlib/constants/float64/eps
* @type {number}
*
* @example
* var FLOAT64_EPSILON = require( '@stdlib/constants/float64/eps' );
* // returns 2.220446049250313e-16
*/


// MAIN //

/**
* Difference between one and the smallest value greater than one that can be represented as a double-precision floating-point number.
*
* ## Notes
*
* The difference is
*
* ```tex
* \frac{1}{2^{52}}
* ```
*
* @constant
* @type {number}
* @default 2.220446049250313e-16
* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}
* @see [Machine Epsilon]{@link https://en.wikipedia.org/wiki/Machine_epsilon}
*/
var FLOAT64_EPSILON = 2.2204460492503130808472633361816E-16;


// EXPORTS //

module.exports = FLOAT64_EPSILON;

},{}],47:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* The bias of a double-precision floating-point number's exponent.
*
* @module @stdlib/constants/float64/exponent-bias
* @type {integer32}
*
* @example
* var FLOAT64_EXPONENT_BIAS = require( '@stdlib/constants/float64/exponent-bias' );
* // returns 1023
*/


// MAIN //

/**
* Bias of a double-precision floating-point number's exponent.
*
* ## Notes
*
* The bias can be computed via
*
* ```tex
* \mathrm{bias} = 2^{k-1} - 1
* ```
*
* where \\(k\\) is the number of bits in the exponent; here, \\(k = 11\\).
*
* @constant
* @type {integer32}
* @default 1023
* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}
*/
var FLOAT64_EXPONENT_BIAS = 1023|0; // asm type annotation


// EXPORTS //

module.exports = FLOAT64_EXPONENT_BIAS;

},{}],48:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* High word mask for the exponent of a double-precision floating-point number.
*
* @module @stdlib/constants/float64/high-word-exponent-mask
* @type {uinteger32}
*
* @example
* var FLOAT64_HIGH_WORD_EXPONENT_MASK = require( '@stdlib/constants/float64/high-word-exponent-mask' );
* // returns 2146435072
*/


// MAIN //

/**
* High word mask for the exponent of a double-precision floating-point number.
*
* ## Notes
*
* The high word mask for the exponent of a double-precision floating-point number is an unsigned 32-bit integer with the value \\( 2146435072 \\), which corresponds to the bit sequence
*
* ```binarystring
* 0 11111111111 00000000000000000000
* ```
*
* @constant
* @type {uinteger32}
* @default 0x7ff00000
* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}
*/
var FLOAT64_HIGH_WORD_EXPONENT_MASK = 0x7ff00000;


// EXPORTS //

module.exports = FLOAT64_HIGH_WORD_EXPONENT_MASK;

},{}],49:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* The maximum biased base 2 exponent for a subnormal double-precision floating-point number.
*
* @module @stdlib/constants/float64/max-base2-exponent-subnormal
* @type {integer32}
*
* @example
* var FLOAT64_MAX_BASE2_EXPONENT_SUBNORMAL = require( '@stdlib/constants/float64/max-base2-exponent-subnormal' );
* // returns -1023
*/


// MAIN //

/**
* The maximum biased base 2 exponent for a subnormal double-precision floating-point number.
*
* ```text
* 00000000000 => 0 - BIAS = -1023
* ```
*
* where `BIAS = 1023`.
*
* @constant
* @type {integer32}
* @default -1023
* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}
*/
var FLOAT64_MAX_BASE2_EXPONENT_SUBNORMAL = -1023|0; // asm type annotation


// EXPORTS //

module.exports = FLOAT64_MAX_BASE2_EXPONENT_SUBNORMAL;

},{}],50:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* The maximum biased base 2 exponent for a double-precision floating-point number.
*
* @module @stdlib/constants/float64/max-base2-exponent
* @type {integer32}
*
* @example
* var FLOAT64_MAX_BASE2_EXPONENT = require( '@stdlib/constants/float64/max-base2-exponent' );
* // returns 1023
*/


// MAIN //

/**
* The maximum biased base 2 exponent for a double-precision floating-point number.
*
* ```text
* 11111111110 => 2046 - BIAS = 1023
* ```
*
* where `BIAS = 1023`.
*
* @constant
* @type {integer32}
* @default 1023
* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}
*/
var FLOAT64_MAX_BASE2_EXPONENT = 1023|0; // asm type annotation


// EXPORTS //

module.exports = FLOAT64_MAX_BASE2_EXPONENT;

},{}],51:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* The minimum biased base 2 exponent for a subnormal double-precision floating-point number.
*
* @module @stdlib/constants/float64/min-base2-exponent-subnormal
* @type {integer32}
*
* @example
* var FLOAT64_MIN_BASE2_EXPONENT_SUBNORMAL = require( '@stdlib/constants/float64/min-base2-exponent-subnormal' );
* // returns -1074
*/


// MAIN //

/**
* The minimum biased base 2 exponent for a subnormal double-precision floating-point number.
*
* ```text
* -(BIAS+(52-1)) = -(1023+51) = -1074
* ```
*
* where `BIAS = 1023` and `52` is the number of digits in the significand.
*
* @constant
* @type {integer32}
* @default -1074
* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}
*/
var FLOAT64_MIN_BASE2_EXPONENT_SUBNORMAL = -1074|0; // asm type annotation


// EXPORTS //

module.exports = FLOAT64_MIN_BASE2_EXPONENT_SUBNORMAL;

},{}],52:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Double-precision floating-point negative infinity.
*
* @module @stdlib/constants/float64/ninf
* @type {number}
*
* @example
* var FLOAT64_NINF = require( '@stdlib/constants/float64/ninf' );
* // returns -Infinity
*/

// MODULES //

var Number = require( '@stdlib/number/ctor' );


// MAIN //

/**
* Double-precision floating-point negative infinity.
*
* ## Notes
*
* Double-precision floating-point negative infinity has the bit sequence
*
* ```binarystring
* 1 11111111111 00000000000000000000 00000000000000000000000000000000
* ```
*
* @constant
* @type {number}
* @default Number.NEGATIVE_INFINITY
* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}
*/
var FLOAT64_NINF = Number.NEGATIVE_INFINITY;


// EXPORTS //

module.exports = FLOAT64_NINF;

},{"@stdlib/number/ctor":87}],53:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Double-precision floating-point positive infinity.
*
* @module @stdlib/constants/float64/pinf
* @type {number}
*
* @example
* var FLOAT64_PINF = require( '@stdlib/constants/float64/pinf' );
* // returns Infinity
*/


// MAIN //

/**
* Double-precision floating-point positive infinity.
*
* ## Notes
*
* Double-precision floating-point positive infinity has the bit sequence
*
* ```binarystring
* 0 11111111111 00000000000000000000 00000000000000000000000000000000
* ```
*
* @constant
* @type {number}
* @default Number.POSITIVE_INFINITY
* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}
*/
var FLOAT64_PINF = Number.POSITIVE_INFINITY; // eslint-disable-line stdlib/require-globals


// EXPORTS //

module.exports = FLOAT64_PINF;

},{}],54:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Smallest positive double-precision floating-point normal number.
*
* @module @stdlib/constants/float64/smallest-normal
* @type {number}
*
* @example
* var FLOAT64_SMALLEST_NORMAL = require( '@stdlib/constants/float64/smallest-normal' );
* // returns 2.2250738585072014e-308
*/


// MAIN //

/**
* The smallest positive double-precision floating-point normal number.
*
* ## Notes
*
* The number has the value
*
* ```tex
* \frac{1}{2^{1023-1}}
* ```
*
* which corresponds to the bit sequence
*
* ```binarystring
* 0 00000000001 00000000000000000000 00000000000000000000000000000000
* ```
*
* @constant
* @type {number}
* @default 2.2250738585072014e-308
* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}
*/
var FLOAT64_SMALLEST_NORMAL = 2.2250738585072014e-308;


// EXPORTS //

module.exports = FLOAT64_SMALLEST_NORMAL;

},{}],55:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Maximum unsigned 16-bit integer.
*
* @module @stdlib/constants/uint16/max
* @type {integer32}
*
* @example
* var UINT16_MAX = require( '@stdlib/constants/uint16/max' );
* // returns 65535
*/


// MAIN //

/**
* Maximum unsigned 16-bit integer.
*
* ## Notes
*
* The number has the value
*
* ```tex
* 2^{16} - 1
* ```
*
* which corresponds to the bit sequence
*
* ```binarystring
* 1111111111111111
* ```
*
* @constant
* @type {integer32}
* @default 65535
*/
var UINT16_MAX = 65535|0; // asm type annotation


// EXPORTS //

module.exports = UINT16_MAX;

},{}],56:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Maximum unsigned 32-bit integer.
*
* @module @stdlib/constants/uint32/max
* @type {uinteger32}
*
* @example
* var UINT32_MAX = require( '@stdlib/constants/uint32/max' );
* // returns 4294967295
*/


// MAIN //

/**
* Maximum unsigned 32-bit integer.
*
* ## Notes
*
* The number has the value
*
* ```tex
* 2^{32} - 1
* ```
*
* which corresponds to the bit sequence
*
* ```binarystring
* 11111111111111111111111111111111
* ```
*
* @constant
* @type {uinteger32}
* @default 4294967295
*/
var UINT32_MAX = 4294967295;


// EXPORTS //

module.exports = UINT32_MAX;

},{}],57:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Maximum unsigned 8-bit integer.
*
* @module @stdlib/constants/uint8/max
* @type {integer32}
*
* @example
* var UINT8_MAX = require( '@stdlib/constants/uint8/max' );
* // returns 255
*/


// MAIN //

/**
* Maximum unsigned 8-bit integer.
*
* ## Notes
*
* The number has the value
*
* ```tex
* 2^{8} - 1
* ```
*
* which corresponds to the bit sequence
*
* ```binarystring
* 11111111
* ```
*
* @constant
* @type {integer32}
* @default 255
*/
var UINT8_MAX = 255|0; // asm type annotation


// EXPORTS //

module.exports = UINT8_MAX;

},{}],58:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Test if a double-precision floating-point numeric value is infinite.
*
* @module @stdlib/math/base/assert/is-infinite
*
* @example
* var isInfinite = require( '@stdlib/math/base/assert/is-infinite' );
*
* var bool = isInfinite( Infinity );
* // returns true
*
* bool = isInfinite( -Infinity );
* // returns true
*
* bool = isInfinite( 5.0 );
* // returns false
*
* bool = isInfinite( NaN );
* // returns false
*/

// MODULES //

var isInfinite = require( './main.js' );


// EXPORTS //

module.exports = isInfinite;

},{"./main.js":59}],59:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var PINF = require( '@stdlib/constants/float64/pinf' );
var NINF = require( '@stdlib/constants/float64/ninf' );


// MAIN //

/**
* Tests if a double-precision floating-point numeric value is infinite.
*
* @param {number} x - value to test
* @returns {boolean} boolean indicating whether the value is infinite
*
* @example
* var bool = isInfinite( Infinity );
* // returns true
*
* @example
* var bool = isInfinite( -Infinity );
* // returns true
*
* @example
* var bool = isInfinite( 5.0 );
* // returns false
*
* @example
* var bool = isInfinite( NaN );
* // returns false
*/
function isInfinite( x ) {
	return (x === PINF || x === NINF);
}


// EXPORTS //

module.exports = isInfinite;

},{"@stdlib/constants/float64/ninf":52,"@stdlib/constants/float64/pinf":53}],60:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Test if a double-precision floating-point numeric value is `NaN`.
*
* @module @stdlib/math/base/assert/is-nan
*
* @example
* var isnan = require( '@stdlib/math/base/assert/is-nan' );
*
* var bool = isnan( NaN );
* // returns true
*
* bool = isnan( 7.0 );
* // returns false
*/

// MODULES //

var isnan = require( './main.js' );


// EXPORTS //

module.exports = isnan;

},{"./main.js":61}],61:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MAIN //

/**
* Tests if a double-precision floating-point numeric value is `NaN`.
*
* @param {number} x - value to test
* @returns {boolean} boolean indicating whether the value is `NaN`
*
* @example
* var bool = isnan( NaN );
* // returns true
*
* @example
* var bool = isnan( 7.0 );
* // returns false
*/
function isnan( x ) {
	return ( x !== x );
}


// EXPORTS //

module.exports = isnan;

},{}],62:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Compute an absolute value of a double-precision floating-point number.
*
* @module @stdlib/math/base/special/abs
*
* @example
* var abs = require( '@stdlib/math/base/special/abs' );
*
* var v = abs( -1.0 );
* // returns 1.0
*
* v = abs( 2.0 );
* // returns 2.0
*
* v = abs( 0.0 );
* // returns 0.0
*
* v = abs( -0.0 );
* // returns 0.0
*
* v = abs( NaN );
* // returns NaN
*/

// MODULES //

var abs = require( './main.js' );


// EXPORTS //

module.exports = abs;

},{"./main.js":63}],63:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2021 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MAIN //

/**
* Computes the absolute value of a double-precision floating-point number `x`.
*
* @param {number} x - input value
* @returns {number} absolute value
*
* @example
* var v = abs( -1.0 );
* // returns 1.0
*
* @example
* var v = abs( 2.0 );
* // returns 2.0
*
* @example
* var v = abs( 0.0 );
* // returns 0.0
*
* @example
* var v = abs( -0.0 );
* // returns 0.0
*
* @example
* var v = abs( NaN );
* // returns NaN
*/
function abs( x ) {
	return Math.abs( x ); // eslint-disable-line stdlib/no-builtin-math
}


// EXPORTS //

module.exports = abs;

},{}],64:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Return a double-precision floating-point number with the magnitude of `x` and the sign of `y`.
*
* @module @stdlib/math/base/special/copysign
*
* @example
* var copysign = require( '@stdlib/math/base/special/copysign' );
*
* var z = copysign( -3.14, 10.0 );
* // returns 3.14
*
* z = copysign( 3.14, -1.0 );
* // returns -3.14
*
* z = copysign( 1.0, -0.0 );
* // returns -1.0
*
* z = copysign( -3.14, -0.0 );
* // returns -3.14
*
* z = copysign( -0.0, 1.0 );
* // returns 0.0
*/

// MODULES //

var main = require( './main.js' );


// EXPORTS //

module.exports = main;

},{"./main.js":65}],65:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var toWords = require( '@stdlib/number/float64/base/to-words' );
var getHighWord = require( '@stdlib/number/float64/base/get-high-word' );
var fromWords = require( '@stdlib/number/float64/base/from-words' );


// VARIABLES //

// 10000000000000000000000000000000 => 2147483648 => 0x80000000
var SIGN_MASK = 0x80000000>>>0; // asm type annotation

// 01111111111111111111111111111111 => 2147483647 => 0x7fffffff
var MAGNITUDE_MASK = 0x7fffffff|0; // asm type annotation

// High/low words workspace:
var WORDS = [ 0, 0 ];


// MAIN //

/**
* Returns a double-precision floating-point number with the magnitude of `x` and the sign of `y`.
*
* @param {number} x - number from which to derive a magnitude
* @param {number} y - number from which to derive a sign
* @returns {number} a double-precision floating-point number
*
* @example
* var z = copysign( -3.14, 10.0 );
* // returns 3.14
*
* @example
* var z = copysign( 3.14, -1.0 );
* // returns -3.14
*
* @example
* var z = copysign( 1.0, -0.0 );
* // returns -1.0
*
* @example
* var z = copysign( -3.14, -0.0 );
* // returns -3.14
*
* @example
* var z = copysign( -0.0, 1.0 );
* // returns 0.0
*/
function copysign( x, y ) {
	var hx;
	var hy;

	// Split `x` into higher and lower order words:
	toWords( WORDS, x );
	hx = WORDS[ 0 ];

	// Turn off the sign bit of `x`:
	hx &= MAGNITUDE_MASK;

	// Extract the higher order word from `y`:
	hy = getHighWord( y );

	// Leave only the sign bit of `y` turned on:
	hy &= SIGN_MASK;

	// Copy the sign bit of `y` to `x`:
	hx |= hy;

	// Return a new value having the same magnitude as `x`, but with the sign of `y`:
	return fromWords( hx, WORDS[ 1 ] );
}


// EXPORTS //

module.exports = copysign;

},{"@stdlib/number/float64/base/from-words":91,"@stdlib/number/float64/base/get-high-word":95,"@stdlib/number/float64/base/to-words":103}],66:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Round a double-precision floating-point number toward negative infinity.
*
* @module @stdlib/math/base/special/floor
*
* @example
* var floor = require( '@stdlib/math/base/special/floor' );
*
* var v = floor( -4.2 );
* // returns -5.0
*
* v = floor( 9.99999 );
* // returns 9.0
*
* v = floor( 0.0 );
* // returns 0.0
*
* v = floor( NaN );
* // returns NaN
*/

// MODULES //

var floor = require( './main.js' );


// EXPORTS //

module.exports = floor;

},{"./main.js":67}],67:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// TODO: implementation (?)

/**
* Rounds a double-precision floating-point number toward negative infinity.
*
* @param {number} x - input value
* @returns {number} rounded value
*
* @example
* var v = floor( -4.2 );
* // returns -5.0
*
* @example
* var v = floor( 9.99999 );
* // returns 9.0
*
* @example
* var v = floor( 0.0 );
* // returns 0.0
*
* @example
* var v = floor( NaN );
* // returns NaN
*/
var floor = Math.floor; // eslint-disable-line stdlib/no-builtin-math


// EXPORTS //

module.exports = floor;

},{}],68:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Multiply a double-precision floating-point number by an integer power of two.
*
* @module @stdlib/math/base/special/ldexp
*
* @example
* var ldexp = require( '@stdlib/math/base/special/ldexp' );
*
* var x = ldexp( 0.5, 3 ); // => 0.5 * 2^3 = 0.5 * 8
* // returns 4.0
*
* x = ldexp( 4.0, -2 ); // => 4 * 2^(-2) = 4 * (1/4)
* // returns 1.0
*
* x = ldexp( 0.0, 20 );
* // returns 0.0
*
* x = ldexp( -0.0, 39 );
* // returns -0.0
*
* x = ldexp( NaN, -101 );
* // returns NaN
*
* x = ldexp( Infinity, 11 );
* // returns Infinity
*
* x = ldexp( -Infinity, -118 );
* // returns -Infinity
*/

// MODULES //

var main = require( './main.js' );


// EXPORTS //

module.exports = main;

},{"./main.js":69}],69:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// NOTES //

/*
* => ldexp: load exponent (see [The Open Group]{@link http://pubs.opengroup.org/onlinepubs/9699919799/functions/ldexp.html} and [cppreference]{@link http://en.cppreference.com/w/c/numeric/math/ldexp}).
*/


// MODULES //

var PINF = require( '@stdlib/constants/float64/pinf' );
var NINF = require( '@stdlib/constants/float64/ninf' );
var BIAS = require( '@stdlib/constants/float64/exponent-bias' );
var MAX_EXPONENT = require( '@stdlib/constants/float64/max-base2-exponent' );
var MAX_SUBNORMAL_EXPONENT = require( '@stdlib/constants/float64/max-base2-exponent-subnormal' );
var MIN_SUBNORMAL_EXPONENT = require( '@stdlib/constants/float64/min-base2-exponent-subnormal' );
var isnan = require( '@stdlib/math/base/assert/is-nan' );
var isInfinite = require( '@stdlib/math/base/assert/is-infinite' );
var copysign = require( '@stdlib/math/base/special/copysign' );
var normalize = require( '@stdlib/number/float64/base/normalize' );
var floatExp = require( '@stdlib/number/float64/base/exponent' );
var toWords = require( '@stdlib/number/float64/base/to-words' );
var fromWords = require( '@stdlib/number/float64/base/from-words' );


// VARIABLES //

// 1/(1<<52) = 1/(2**52) = 1/4503599627370496
var TWO52_INV = 2.220446049250313e-16;

// Exponent all 0s: 1 00000000000 11111111111111111111 => 2148532223
var CLEAR_EXP_MASK = 0x800fffff>>>0; // asm type annotation

// Normalization workspace:
var FRAC = [ 0.0, 0.0 ]; // WARNING: not thread safe

// High/low words workspace:
var WORDS = [ 0, 0 ]; // WARNING: not thread safe


// MAIN //

/**
* Multiplies a double-precision floating-point number by an integer power of two.
*
* @param {number} frac - fraction
* @param {integer} exp - exponent
* @returns {number} double-precision floating-point number
*
* @example
* var x = ldexp( 0.5, 3 ); // => 0.5 * 2^3 = 0.5 * 8
* // returns 4.0
*
* @example
* var x = ldexp( 4.0, -2 ); // => 4 * 2^(-2) = 4 * (1/4)
* // returns 1.0
*
* @example
* var x = ldexp( 0.0, 20 );
* // returns 0.0
*
* @example
* var x = ldexp( -0.0, 39 );
* // returns -0.0
*
* @example
* var x = ldexp( NaN, -101 );
* // returns NaN
*
* @example
* var x = ldexp( Infinity, 11 );
* // returns Infinity
*
* @example
* var x = ldexp( -Infinity, -118 );
* // returns -Infinity
*/
function ldexp( frac, exp ) {
	var high;
	var m;
	if (
		exp === 0 ||
		frac === 0.0 || // handles +-0
		isnan( frac ) ||
		isInfinite( frac )
	) {
		return frac;
	}
	// Normalize the input fraction:
	normalize( FRAC, frac );
	frac = FRAC[ 0 ];
	exp += FRAC[ 1 ];

	// Extract the exponent from `frac` and add it to `exp`:
	exp += floatExp( frac );

	// Check for underflow/overflow...
	if ( exp < MIN_SUBNORMAL_EXPONENT ) {
		return copysign( 0.0, frac );
	}
	if ( exp > MAX_EXPONENT ) {
		if ( frac < 0.0 ) {
			return NINF;
		}
		return PINF;
	}
	// Check for a subnormal and scale accordingly to retain precision...
	if ( exp <= MAX_SUBNORMAL_EXPONENT ) {
		exp += 52;
		m = TWO52_INV;
	} else {
		m = 1.0;
	}
	// Split the fraction into higher and lower order words:
	toWords( WORDS, frac );
	high = WORDS[ 0 ];

	// Clear the exponent bits within the higher order word:
	high &= CLEAR_EXP_MASK;

	// Set the exponent bits to the new exponent:
	high |= ((exp+BIAS) << 20);

	// Create a new floating-point number:
	return m * fromWords( high, WORDS[ 1 ] );
}


// EXPORTS //

module.exports = ldexp;

},{"@stdlib/constants/float64/exponent-bias":47,"@stdlib/constants/float64/max-base2-exponent":50,"@stdlib/constants/float64/max-base2-exponent-subnormal":49,"@stdlib/constants/float64/min-base2-exponent-subnormal":51,"@stdlib/constants/float64/ninf":52,"@stdlib/constants/float64/pinf":53,"@stdlib/math/base/assert/is-infinite":58,"@stdlib/math/base/assert/is-nan":60,"@stdlib/math/base/special/copysign":64,"@stdlib/number/float64/base/exponent":89,"@stdlib/number/float64/base/from-words":91,"@stdlib/number/float64/base/normalize":100,"@stdlib/number/float64/base/to-words":103}],70:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Compute `x - nπ/2 = r`.
*
* @module @stdlib/math/base/special/rempio2
*
* @example
* var rempio2 = require( '@stdlib/math/base/special/rempio2' );
*
* var y = [ 0.0, 0.0 ];
* var n = rempio2( 128.0, y );
* // returns 81
*
* var y1 = y[ 0 ];
* // returns ~0.765
*
* var y2 = y[ 1 ];
* // returns ~3.618e-17
*/

// MODULES //

var rempio2 = require( './rempio2.js' );


// EXPORTS //

module.exports = rempio2;

},{"./rempio2.js":72}],71:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*
*
* ## Notice
*
* The following copyright and license were part of the original implementation available as part of [FreeBSD]{@link https://svnweb.freebsd.org/base/release/9.3.0/lib/msun/src/k_rem_pio2.c}. The implementation follows the original, but has been modified for JavaScript.
*
* ```text
* Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.
*
* Developed at SunPro, a Sun Microsystems, Inc. business.
* Permission to use, copy, modify, and distribute this
* software is freely granted, provided that this notice
* is preserved.
* ```
*/

/* eslint-disable array-element-newline */

'use strict';

// MODULES //

var floor = require( '@stdlib/math/base/special/floor' );
var ldexp = require( '@stdlib/math/base/special/ldexp' );
var zeros = require( '@stdlib/array/base/zeros' );


// VARIABLES //

/*
* Table of constants for `2/π` (`396` hex digits, `476` decimal).
*
* Integer array which contains the (`24*i`)-th to (`24*i+23`)-th bit of `2/π` after binary point. The corresponding floating value is
*
* ```tex
* \operatorname{ipio2}[i] \cdot 2^{-24(i+1)}
* ```
*
* This table must have at least `(e0-3)/24 + jk` terms. For quad precision (`e0 <= 16360`, `jk = 6`), this is `686`.
*/
var IPIO2 = [
	0xA2F983, 0x6E4E44, 0x1529FC, 0x2757D1, 0xF534DD, 0xC0DB62,
	0x95993C, 0x439041, 0xFE5163, 0xABDEBB, 0xC561B7, 0x246E3A,
	0x424DD2, 0xE00649, 0x2EEA09, 0xD1921C, 0xFE1DEB, 0x1CB129,
	0xA73EE8, 0x8235F5, 0x2EBB44, 0x84E99C, 0x7026B4, 0x5F7E41,
	0x3991D6, 0x398353, 0x39F49C, 0x845F8B, 0xBDF928, 0x3B1FF8,
	0x97FFDE, 0x05980F, 0xEF2F11, 0x8B5A0A, 0x6D1F6D, 0x367ECF,
	0x27CB09, 0xB74F46, 0x3F669E, 0x5FEA2D, 0x7527BA, 0xC7EBE5,
	0xF17B3D, 0x0739F7, 0x8A5292, 0xEA6BFB, 0x5FB11F, 0x8D5D08,
	0x560330, 0x46FC7B, 0x6BABF0, 0xCFBC20, 0x9AF436, 0x1DA9E3,
	0x91615E, 0xE61B08, 0x659985, 0x5F14A0, 0x68408D, 0xFFD880,
	0x4D7327, 0x310606, 0x1556CA, 0x73A8C9, 0x60E27B, 0xC08C6B
];

// Double precision array, obtained by cutting `π/2` into `24` bits chunks...
var PIO2 = [
	1.57079625129699707031e+00, // 0x3FF921FB, 0x40000000
	7.54978941586159635335e-08, // 0x3E74442D, 0x00000000
	5.39030252995776476554e-15, // 0x3CF84698, 0x80000000
	3.28200341580791294123e-22, // 0x3B78CC51, 0x60000000
	1.27065575308067607349e-29, // 0x39F01B83, 0x80000000
	1.22933308981111328932e-36, // 0x387A2520, 0x40000000
	2.73370053816464559624e-44, // 0x36E38222, 0x80000000
	2.16741683877804819444e-51  // 0x3569F31D, 0x00000000
];
var TWO24 = 1.67772160000000000000e+07;  // 0x41700000, 0x00000000
var TWON24 = 5.96046447753906250000e-08; // 0x3E700000, 0x00000000

// Arrays for storing temporary values (note that, in C, this is not thread safe):
var F = zeros( 20 );
var Q = zeros( 20 );
var FQ = zeros( 20 );
var IQ = zeros( 20 );


// FUNCTIONS //

/**
* Performs the computation for `kernelRempio2()`.
*
* @private
* @param {PositiveNumber} x - input value
* @param {(Array|TypedArray|Object)} y - output object for storing double precision numbers
* @param {integer} jz - number of terms of `ipio2[]` used
* @param {Array<integer>} q - array with integral values, representing the 24-bits chunk of the product of `x` and `2/π`
* @param {integer} q0 - the corresponding exponent of `q[0]` (the exponent for `q[i]` would be `q0-24*i`)
* @param {integer} jk - `jk+1` is the initial number of terms of `IPIO2[]` needed in the computation
* @param {integer} jv - index for pointing to the suitable `ipio2[]` for the computation
* @param {integer} jx - `nx - 1`
* @param {Array<number>} f - `IPIO2[]` in floating point
* @returns {number} last three binary digits of `N`
*/
function compute( x, y, jz, q, q0, jk, jv, jx, f ) {
	var carry;
	var fw;
	var ih;
	var jp;
	var i;
	var k;
	var n;
	var j;
	var z;

	// `jp+1` is the number of terms in `PIO2[]` needed:
	jp = jk;

	// Distill `q[]` into `IQ[]` in reverse order...
	z = q[ jz ];
	j = jz;
	for ( i = 0; j > 0; i++ ) {
		fw = ( TWON24 * z )|0;
		IQ[ i ] = ( z - (TWO24*fw) )|0;
		z = q[ j-1 ] + fw;
		j -= 1;
	}
	// Compute `n`...
	z = ldexp( z, q0 );
	z -= 8.0 * floor( z*0.125 ); // Trim off integer >= 8
	n = z|0;
	z -= n;
	ih = 0;
	if ( q0 > 0 ) {
		// Need `IQ[jz-1]` to determine `n`...
		i = ( IQ[ jz-1 ] >> (24-q0) );
		n += i;
		IQ[ jz-1 ] -= ( i << (24-q0) );
		ih = ( IQ[ jz-1 ] >> (23-q0) );
	}
	else if ( q0 === 0 ) {
		ih = ( IQ[ jz-1 ] >> 23 );
	}
	else if ( z >= 0.5 ) {
		ih = 2;
	}
	// Case: q > 0.5
	if ( ih > 0 ) {
		n += 1;
		carry = 0;

		// Compute `1-q`:
		for ( i = 0; i < jz; i++ ) {
			j = IQ[ i ];
			if ( carry === 0 ) {
				if ( j !== 0 ) {
					carry = 1;
					IQ[ i ] = 0x1000000 - j;
				}
			} else {
				IQ[ i ] = 0xffffff - j;
			}
		}
		if ( q0 > 0 ) {
			// Rare case: chance is 1 in 12...
			switch ( q0 ) { // eslint-disable-line default-case
			case 1:
				IQ[ jz-1 ] &= 0x7fffff;
				break;
			case 2:
				IQ[ jz-1 ] &= 0x3fffff;
				break;
			}
		}
		if ( ih === 2 ) {
			z = 1.0 - z;
			if ( carry !== 0 ) {
				z -= ldexp( 1.0, q0 );
			}
		}
	}
	// Check if re-computation is needed...
	if ( z === 0.0 ) {
		j = 0;
		for ( i = jz-1; i >= jk; i-- ) {
			j |= IQ[ i ];
		}
		if ( j === 0 ) {
			// Need re-computation...
			for ( k = 1; IQ[ jk-k ] === 0; k++ ) {
				// `k` is the number of terms needed...
			}
			for ( i = jz+1; i <= jz+k; i++ ) {
				// Add `q[jz+1]` to `q[jz+k]`...
				f[ jx+i ] = IPIO2[ jv+i ];
				fw = 0.0;
				for ( j = 0; j <= jx; j++ ) {
					fw += x[ j ] * f[ jx + (i-j) ];
				}
				q[ i ] = fw;
			}
			jz += k;
			return compute( x, y, jz, q, q0, jk, jv, jx, f );
		}
	}
	// Chop off zero terms...
	if ( z === 0.0 ) {
		jz -= 1;
		q0 -= 24;
		while ( IQ[ jz ] === 0 ) {
			jz -= 1;
			q0 -= 24;
		}
	} else {
		// Break `z` into 24-bit if necessary...
		z = ldexp( z, -q0 );
		if ( z >= TWO24 ) {
			fw = (TWON24*z)|0;
			IQ[ jz ] = ( z - (TWO24*fw) )|0;
			jz += 1;
			q0 += 24;
			IQ[ jz ] = fw;
		} else {
			IQ[ jz ] = z|0;
		}
	}
	// Convert integer "bit" chunk to floating-point value...
	fw = ldexp( 1.0, q0 );
	for ( i = jz; i >= 0; i-- ) {
		q[ i ] = fw * IQ[i];
		fw *= TWON24;
	}
	// Compute `PIO2[0,...,jp]*q[jz,...,0]`...
	for ( i = jz; i >= 0; i-- ) {
		fw = 0.0;
		for ( k = 0; k <= jp && k <= jz-i; k++ ) {
			fw += PIO2[ k ] * q[ i+k ];
		}
		FQ[ jz-i ] = fw;
	}
	// Compress `FQ[]` into `y[]`...
	fw = 0.0;
	for ( i = jz; i >= 0; i-- ) {
		fw += FQ[ i ];
	}
	if ( ih === 0 ) {
		y[ 0 ] = fw;
	} else {
		y[ 0 ] = -fw;
	}
	fw = FQ[ 0 ] - fw;
	for ( i = 1; i <= jz; i++ ) {
		fw += FQ[i];
	}
	if ( ih === 0 ) {
		y[ 1 ] = fw;
	} else {
		y[ 1 ] = -fw;
	}
	return ( n & 7 );
}


// MAIN //

/**
* Returns the last three binary digits of `N` with `y = x - Nπ/2` so that `|y| < π/2`.
*
* ## Method
*
* -   The method is to compute the integer (`mod 8`) and fraction parts of `2x/π` without doing the full multiplication. In general, we skip the part of the product that is known to be a huge integer (more accurately, equals `0 mod 8` ). Thus, the number of operations is independent of the exponent of the input.
*
* @private
* @param {PositiveNumber} x - input value
* @param {(Array|TypedArray|Object)} y - remainder elements
* @param {PositiveInteger} e0 - the exponent of `x[0]` (must be <= 16360)
* @param {PositiveInteger} nx - dimension of `x[]`
* @returns {number} last three binary digits of `N`
*/
function kernelRempio2( x, y, e0, nx ) {
	var fw;
	var jk;
	var jv;
	var jx;
	var jz;
	var q0;
	var i;
	var j;
	var m;

	// Initialize `jk` for double-precision floating-point numbers:
	jk = 4;

	// Determine `jx`, `jv`, `q0` (note that `q0 < 3`):
	jx = nx - 1;
	jv = ( (e0 - 3) / 24 )|0;
	if ( jv < 0 ) {
		jv = 0;
	}
	q0 = e0 - (24 * (jv + 1));

	// Set up `F[0]` to `F[jx+jk]` where `F[jx+jk] = IPIO2[jv+jk]`:
	j = jv - jx;
	m = jx + jk;
	for ( i = 0; i <= m; i++ ) {
		if ( j < 0 ) {
			F[ i ] = 0.0;
		} else {
			F[ i ] = IPIO2[ j ];
		}
		j += 1;
	}
	// Compute `Q[0],Q[1],...,Q[jk]`:
	for ( i = 0; i <= jk; i++ ) {
		fw = 0.0;
		for ( j = 0; j <= jx; j++ ) {
			fw += x[ j ] * F[ jx + (i-j) ];
		}
		Q[ i ] = fw;
	}
	jz = jk;
	return compute( x, y, jz, Q, q0, jk, jv, jx, F );
}


// EXPORTS //

module.exports = kernelRempio2;

},{"@stdlib/array/base/zeros":3,"@stdlib/math/base/special/floor":66,"@stdlib/math/base/special/ldexp":68}],72:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*
*
* ## Notice
*
* The following copyright and license were part of the original implementation available as part of [FreeBSD]{@link https://svnweb.freebsd.org/base/release/9.3.0/lib/msun/src/e_rem_pio2.c}. The implementation follows the original, but has been modified for JavaScript.
*
* ```text
* Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.
*
* Developed at SunPro, a Sun Microsystems, Inc. business.
* Permission to use, copy, modify, and distribute this
* software is freely granted, provided that this notice
* is preserved.
*
* Optimized by Bruce D. Evans.
* ```
*/

'use strict';

// MODULES //

var getHighWord = require( '@stdlib/number/float64/base/get-high-word' );
var getLowWord = require( '@stdlib/number/float64/base/get-low-word' );
var fromWords = require( '@stdlib/number/float64/base/from-words' );
var rempio2Kernel = require( './kernel_rempio2.js' );
var rempio2Medium = require( './rempio2_medium.js' );


// VARIABLES //

var ZERO = 0.00000000000000000000e+00;    // 0x00000000, 0x00000000
var TWO24 = 1.67772160000000000000e+07;   // 0x41700000, 0x00000000

// 33 bits of π/2:
var PIO2_1 = 1.57079632673412561417e+00;  // 0x3FF921FB, 0x54400000

// PIO2_1T = π/2 - PIO2_1:
var PIO2_1T = 6.07710050650619224932e-11; // 0x3DD0B461, 0x1A626331
var TWO_PIO2_1T = 2.0 * PIO2_1T;
var THREE_PIO2_1T = 3.0 * PIO2_1T;
var FOUR_PIO2_1T = 4.0 * PIO2_1T;

// Absolute value mask: 0x7fffffff = 2147483647 => 01111111111111111111111111111111
var ABS_MASK = 0x7fffffff|0; // asm type annotation

// Exponent mask: 0x7ff00000 = 2146435072 => 01111111111100000000000000000000
var EXPONENT_MASK = 0x7ff00000|0; // asm type annotation

// High word significand mask: 0xfffff = 1048575 => 00000000000011111111111111111111
var SIGNIFICAND_MASK = 0xfffff|0; // asm type annotation

// High word significand for π and π/2: 0x921fb = 598523 => 00000000000010010010000111111011
var PI_HIGH_WORD_SIGNIFICAND = 0x921fb|0; // asm type annotation

// High word for π/4: 0x3fe921fb = 1072243195 => 00111111111010010010000111111011
var PIO4_HIGH_WORD = 0x3fe921fb|0; // asm type annotation

// High word for 3π/4: 0x4002d97c = 1073928572 => 01000000000000101101100101111100
var THREE_PIO4_HIGH_WORD = 0x4002d97c|0; // asm type annotation

// High word for 5π/4: 0x400f6a7a = 1074752122 => 01000000000011110110101001111010
var FIVE_PIO4_HIGH_WORD = 0x400f6a7a|0; // asm type annotation

// High word for 6π/4: 0x4012d97c = 1074977148 => 01000000000100101101100101111100
var THREE_PIO2_HIGH_WORD = 0x4012d97c|0; // asm type annotation

// High word for 7π/4: 0x4015fdbc = 1075183036 => 01000000000101011111110110111100
var SEVEN_PIO4_HIGH_WORD = 0x4015fdbc|0; // asm type annotation

// High word for 8π/4: 0x401921fb = 1075388923 => 01000000000110010010000111111011
var TWO_PI_HIGH_WORD = 0x401921fb|0; // asm type annotation

// High word for 9π/4: 0x401c463b = 1075594811 => 01000000000111000100011000111011
var NINE_PIO4_HIGH_WORD = 0x401c463b|0; // asm type annotation

// 2^20*π/2 = 1647099.3291652855 => 0100000100111001001000011111101101010100010001000010110100011000 => high word => 0x413921fb = 1094263291 => 01000001001110010010000111111011
var MEDIUM = 0x413921fb|0; // asm type annotation

// Arrays for storing temporary values:
var TX = [ 0.0, 0.0, 0.0 ]; // WARNING: not thread safe
var TY = [ 0.0, 0.0 ]; // WARNING: not thread safe


// MAIN //

/**
* Computes `x - nπ/2 = r`.
*
* ## Notes
*
* -   Returns `n` and stores the remainder `r` as two numbers `y[0]` and `y[1]`, such that `y[0]+y[1] = r`.
*
*
* @param {number} x - input value
* @param {(Array|TypedArray|Object)} y - remainder elements
* @returns {integer} factor of `π/2`
*
* @example
* var y = [ 0.0, 0.0 ];
* var n = rempio2( 128.0, y );
* // returns 81
*
* var y1 = y[ 0 ];
* // returns ~0.765
*
* var y2 = y[ 1 ];
* // returns ~3.618e-17
*
* @example
* var y = [ 0.0, 0.0 ];
* var n = rempio2( NaN, y );
* // returns 0
*
* var y1 = y[ 0 ];
* // returns NaN
*
* var y2 = y[ 1 ];
* // returns NaN
*/
function rempio2( x, y ) {
	var low;
	var e0;
	var hx;
	var ix;
	var nx;
	var i;
	var n;
	var z;

	hx = getHighWord( x );
	ix = (hx & ABS_MASK)|0; // asm type annotation

	// Case: |x| ~<= π/4 (no need for reduction)
	if ( ix <= PIO4_HIGH_WORD ) {
		y[ 0 ] = x;
		y[ 1 ] = 0.0;
		return 0;
	}
	// Case: |x| ~<= 5π/4
	if ( ix <= FIVE_PIO4_HIGH_WORD ) {
		// Case: |x| ~= π/2 or π
		if ( (ix & SIGNIFICAND_MASK) === PI_HIGH_WORD_SIGNIFICAND ) {
			// Cancellation => use medium case
			return rempio2Medium( x, ix, y );
		}
		// Case: |x| ~<= 3π/4
		if ( ix <= THREE_PIO4_HIGH_WORD ) {
			if ( x > 0.0 ) {
				z = x - PIO2_1;
				y[ 0 ] = z - PIO2_1T;
				y[ 1 ] = (z - y[0]) - PIO2_1T;
				return 1;
			}
			z = x + PIO2_1;
			y[ 0 ] = z + PIO2_1T;
			y[ 1 ] = (z - y[0]) + PIO2_1T;
			return -1;
		}
		if ( x > 0.0 ) {
			z = x - ( 2.0*PIO2_1 );
			y[ 0 ] = z - TWO_PIO2_1T;
			y[ 1 ] = (z - y[0]) - TWO_PIO2_1T;
			return 2;
		}
		z = x + ( 2.0*PIO2_1 );
		y[ 0 ] = z + TWO_PIO2_1T;
		y[ 1 ] = (z - y[0]) + TWO_PIO2_1T;
		return -2;
	}
	// Case: |x| ~<= 9π/4
	if ( ix <= NINE_PIO4_HIGH_WORD ) {
		// Case: |x| ~<= 7π/4
		if ( ix <= SEVEN_PIO4_HIGH_WORD ) {
			// Case: |x| ~= 3π/2
			if ( ix === THREE_PIO2_HIGH_WORD ) {
				return rempio2Medium( x, ix, y );
			}
			if ( x > 0.0 ) {
				z = x - ( 3.0*PIO2_1 );
				y[ 0 ] = z - THREE_PIO2_1T;
				y[ 1 ] = (z - y[0]) - THREE_PIO2_1T;
				return 3;
			}
			z = x + ( 3.0*PIO2_1 );
			y[ 0 ] = z + THREE_PIO2_1T;
			y[ 1 ] = (z - y[0]) + THREE_PIO2_1T;
			return -3;
		}
		// Case: |x| ~= 4π/2
		if ( ix === TWO_PI_HIGH_WORD ) {
			return rempio2Medium( x, ix, y );
		}
		if ( x > 0.0 ) {
			z = x - ( 4.0*PIO2_1 );
			y[ 0 ] = z - FOUR_PIO2_1T;
			y[ 1 ] = (z - y[0]) - FOUR_PIO2_1T;
			return 4;
		}
		z = x + ( 4.0*PIO2_1 );
		y[ 0 ] = z + FOUR_PIO2_1T;
		y[ 1 ] = (z - y[0]) + FOUR_PIO2_1T;
		return -4;
	}
	// Case: |x| ~< 2^20*π/2 (medium size)
	if ( ix < MEDIUM ) {
		return rempio2Medium( x, ix, y );
	}
	// Case: x is NaN or infinity
	if ( ix >= EXPONENT_MASK ) {
		y[ 0 ] = NaN;
		y[ 1 ] = NaN;
		return 0.0;
	}
	// Set z = scalbn(|x|, ilogb(x)-23)...
	low = getLowWord( x );
	e0 = (ix >> 20) - 1046; // `e0 = ilogb(z) - 23` => unbiased exponent minus 23
	z = fromWords( ix - ((e0 << 20)|0), low );
	for ( i = 0; i < 2; i++ ) {
		TX[ i ] = z|0;
		z = (z - TX[i]) * TWO24;
	}
	TX[ 2 ] = z;
	nx = 3;
	while ( TX[ nx-1 ] === ZERO ) {
		// Skip zero term...
		nx -= 1;
	}
	n = rempio2Kernel( TX, TY, e0, nx, 1 );
	if ( x < 0.0 ) {
		y[ 0 ] = -TY[ 0 ];
		y[ 1 ] = -TY[ 1 ];
		return -n;
	}
	y[ 0 ] = TY[ 0 ];
	y[ 1 ] = TY[ 1 ];
	return n;
}


// EXPORTS //

module.exports = rempio2;

},{"./kernel_rempio2.js":71,"./rempio2_medium.js":73,"@stdlib/number/float64/base/from-words":91,"@stdlib/number/float64/base/get-high-word":95,"@stdlib/number/float64/base/get-low-word":97}],73:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*
*
* ## Notice
*
* The following copyright and license were part of the original implementation available as part of [FreeBSD]{@link https://svnweb.freebsd.org/base/release/9.3.0/lib/msun/src/k_rem_pio2.c}. The implementation follows the original, but has been modified for JavaScript.
*
* ```text
* Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.
*
* Developed at SunPro, a Sun Microsystems, Inc. business.
* Permission to use, copy, modify, and distribute this
* software is freely granted, provided that this notice
* is preserved.
* ```
*/

'use strict';

// MODULES //

var round = require( '@stdlib/math/base/special/round' );
var getHighWord = require( '@stdlib/number/float64/base/get-high-word' );


// VARIABLES //

// 53 bits of 2/π:
var INVPIO2 = 6.36619772367581382433e-01; // 0x3FE45F30, 0x6DC9C883

// First 33 bits of π/2:
var PIO2_1 = 1.57079632673412561417e+00;  // 0x3FF921FB, 0x54400000

// PIO2_1T = π/2 - PIO2_1:
var PIO2_1T = 6.07710050650619224932e-11; // 0x3DD0B461, 0x1A626331

// Another 33 bits of π/2:
var PIO2_2 = 6.07710050630396597660e-11;  // 0x3DD0B461, 0x1A600000

// PIO2_2T = π/2 - ( PIO2_1 + PIO2_2 ):
var PIO2_2T = 2.02226624879595063154e-21; // 0x3BA3198A, 0x2E037073

// Another 33 bits of π/2:
var PIO2_3 = 2.02226624871116645580e-21;  // 0x3BA3198A, 0x2E000000

// PIO2_3T = π/2 - ( PIO2_1 + PIO2_2 + PIO2_3 ):
var PIO2_3T = 8.47842766036889956997e-32; // 0x397B839A, 0x252049C1

// Exponent mask (2047 => 0x7ff):
var EXPONENT_MASK = 0x7ff|0; // asm type annotation


// MAIN //

/**
* Computes `x - nπ/2 = r` for medium-sized inputs.
*
* @private
* @param {number} x - input value
* @param {uint32} ix - high word of `x`
* @param {(Array|TypedArray|Object)} y - remainder elements
* @returns {integer} factor of `π/2`
*/
function rempio2Medium( x, ix, y ) {
	var high;
	var n;
	var t;
	var r;
	var w;
	var i;
	var j;

	n = round( x * INVPIO2 );
	r = x - ( n * PIO2_1 );
	w = n * PIO2_1T;

	// First rounding (good to 85 bits)...
	j = (ix >> 20)|0; // asm type annotation
	y[ 0 ] = r - w;
	high = getHighWord( y[0] );
	i = j - ( (high >> 20) & EXPONENT_MASK );

	// Check if a second iteration is needed (good to 118 bits)...
	if ( i > 16 ) {
		t = r;
		w = n * PIO2_2;
		r = t - w;
		w = (n * PIO2_2T) - ((t-r) - w);
		y[ 0 ] = r - w;
		high = getHighWord( y[0] );
		i = j - ( (high >> 20) & EXPONENT_MASK );

		// Check if a third iteration is needed (151 bits accumulated)...
		if ( i > 49 ) {
			t = r;
			w = n * PIO2_3;
			r = t - w;
			w = (n * PIO2_3T) - ((t-r) - w);
			y[ 0 ] = r - w;
		}
	}
	y[ 1 ] = (r - y[0]) - w;
	return n;
}


// EXPORTS //

module.exports = rempio2Medium;

},{"@stdlib/math/base/special/round":74,"@stdlib/number/float64/base/get-high-word":95}],74:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// TODO: implementation

/**
* Round a numeric value to the nearest integer.
*
* @module @stdlib/math/base/special/round
*
* @example
* var round = require( '@stdlib/math/base/special/round' );
*
* var v = round( -4.2 );
* // returns -4.0
*
* v = round( -4.5 );
* // returns -4.0
*
* v = round( -4.6 );
* // returns -5.0
*
* v = round( 9.99999 );
* // returns 10.0
*
* v = round( 9.5 );
* // returns 10.0
*
* v = round( 9.2 );
* // returns 9.0
*
* v = round( 0.0 );
* // returns 0.0
*
* v = round( -0.0 );
* // returns -0.0
*
* v = round( Infinity );
* // returns Infinity
*
* v = round( -Infinity );
* // returns -Infinity
*
* v = round( NaN );
* // returns NaN
*/

// MODULES //

var round = require( './round.js' );


// EXPORTS //

module.exports = round;

},{"./round.js":75}],75:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// TODO: implementation

/**
* Rounds a numeric value to the nearest integer.
*
* @param {number} x - input value
* @returns {number} function value
*
* @example
* var v = round( -4.2 );
* // returns -4.0
*
* @example
* var v = round( -4.5 );
* // returns -4.0
*
* @example
* var v = round( -4.6 );
* // returns -5.0
*
* @example
* var v = round( 9.99999 );
* // returns 10.0
*
* @example
* var v = round( 9.5 );
* // returns 10.0
*
* @example
* var v = round( 9.2 );
* // returns 9.0
*
* @example
* var v = round( 0.0 );
* // returns 0.0
*
* @example
* var v = round( -0.0 );
* // returns -0.0
*
* @example
* var v = round( Infinity );
* // returns Infinity
*
* @example
* var v = round( -Infinity );
* // returns -Infinity
*
* @example
* var v = round( NaN );
* // returns NaN
*/
var round = Math.round; // eslint-disable-line stdlib/no-builtin-math


// EXPORTS //

module.exports = round;

},{}],76:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Simultaneously compute the sine and cosine of a number.
*
* @module @stdlib/math/base/special/sincos
*
* @example
* var sincos = require( '@stdlib/math/base/special/sincos' );
*
* var v = sincos( 0.0 );
* // returns [ ~0.0, ~1.0 ]
*
* v = sincos( 3.141592653589793/2.0 );
* // returns [ ~1.0, ~0.0 ]
*
* v = sincos( -3.141592653589793/6.0 );
* // returns [ ~-0.5, ~0.866 ]
*
* v = sincos( NaN );
* // returns [ NaN, NaN ]
*
* @example
* var sincos = require( '@stdlib/math/base/special/sincos' );
*
* var out = new Float64Array( 2 );
*
* var v = sincos( out, 0.0 );
* // return <Float64Array>[ ~0.0, ~1.0 ]
*
* var bool = ( v === out );
* // returns true
*/

// MODULES //

var sincos = require( './main.js' );


// EXPORTS //

module.exports = sincos;

},{"./main.js":78}],77:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*
*
* ## Notice
*
* The following copyright and license were part of the original implementation available as part of FreeBSD [k_sin.c]{@link https://svnweb.freebsd.org/base/release/9.3.0/lib/msun/src/k_sin.c} and [k_cos.c]{@link https://svnweb.freebsd.org/base/release/9.3.0/lib/msun/src/k_cos.c}. The implementation follows the original sine and cosine kernels, but has been modified for JavaScript and combined into a single function.
*
* ```text
* Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.
*
* Developed at SunPro, a Sun Microsystems, Inc. business.
* Permission to use, copy, modify, and distribute this
* software is freely granted, provided that this notice
* is preserved.
* ```
*/

'use strict';

// VARIABLES //

var S1 = -1.66666666666666324348e-01; // 0xBFC55555, 0x55555549
var S2 = 8.33333333332248946124e-03;  // 0x3F811111, 0x1110F8A6
var S3 = -1.98412698298579493134e-04; // 0xBF2A01A0, 0x19C161D5
var S4 = 2.75573137070700676789e-06;  // 0x3EC71DE3, 0x57B1FE7D
var S5 = -2.50507602534068634195e-08; // 0xBE5AE5E6, 0x8A2B9CEB
var S6 = 1.58969099521155010221e-10;  // 0x3DE5D93A, 0x5ACFD57C

var C1 = 4.16666666666666019037e-02;  // 0x3FA55555, 0x5555554C
var C2 = -1.38888888888741095749e-03; // 0xBF56C16C, 0x16C15177
var C3 = 2.48015872894767294178e-05;  // 0x3EFA01A0, 0x19CB1590
var C4 = -2.75573143513906633035e-07; // 0xBE927E4F, 0x809C52AD
var C5 = 2.08757232129817482790e-09;  // 0x3E21EE9E, 0xBDB4B1C4
var C6 = -1.13596475577881948265e-11; // 0xBDA8FAE9, 0xBE8838D4


// MAIN //

/**
* Computes the sine and cosine on \\( \approx \[-\pi/4, \pi/4\] \\) (except for \\(-0\\)), where \\( \pi/4 \approx 0.7854 \\).
*
* @private
* @param {(Array|TypedArray|Object)} out - destination array
* @param {number} x - input value (in radians, assumed to be bounded by `~π/4` in magnitude)
* @param {number} y - tail of `x`
* @returns {(Array|TypedArray|Object)} sine and cosine
*/
function kernelSincos( out, x, y ) {
	var hz;
	var r;
	var v;
	var w;
	var z;

	z = x * x;
	w = z * z;
	r = S2 + (z * (S3 + (z*S4))) + (z * w * (S5 + (z*S6)));
	v = z * x;
	if ( y === 0.0 ) {
		out[ 0 ] = x + (v * (S1 + (z*r)));
	} else {
		out[ 0 ] = x - (((z*((0.5*y) - (v*r))) - y) - (v*S1));
	}
	r = z * (C1 + (z * (C2 + (z*C3))));
	r += w * w * (C4 + (z * (C5 + (z*C6))));
	hz = 0.5 * z;
	w = 1.0 - hz;
	out[ 1 ] = w + ( ((1.0-w) - hz) + ((z*r) - (x*y)) );

	return out;
}


// EXPORTS //

module.exports = kernelSincos;

},{}],78:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var computeSincos = require( './sincos.js' );


// MAIN //

/**
* Simultaneously computes the sine and cosine of a number.
*
* @param {(Array|TypedArray|Object)} [out] - destination array
* @param {number} x - input value (in radians)
* @returns {(Array|TypedArray|Object)} sine and cosine
*
* @example
* var v = sincos( 0.0 );
* // returns [ ~0.0, ~1.0 ]
*
* @example
* var v = sincos( 3.141592653589793/2.0 );
* // returns [ ~1.0, ~0.0 ]
*
* @example
* var v = sincos( -3.141592653589793/6.0 );
* // returns [ ~-0.5, ~0.866 ]
*
* @example
* var v = sincos( NaN );
* // returns [ NaN, NaN ]
*
* @example
* var Float64Array = require( '@stdlib/array/float64' );
*
* var out = new Float64Array( 2 );
*
* var v = sincos( out, 0.0 );
* // return <Float64Array>[ ~0.0, ~1.0 ]
*
* var bool = ( v === out );
* // returns true
*/
function sincos( out, x ) {
	if ( arguments.length === 1 ) {
		return computeSincos( [ 0.0, 0.0 ], out );
	}
	return computeSincos( out, x );
}


// EXPORTS //

module.exports = sincos;

},{"./sincos.js":79}],79:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*
*
* ## Notice
*
* The following copyright and license were part of the original implementation available as part of FreeBSD [k_sin.c]{@link https://svnweb.freebsd.org/base/release/9.3.0/lib/msun/src/k_sin.c} and [k_cos.c]{@link https://svnweb.freebsd.org/base/release/9.3.0/lib/msun/src/k_cos.c}. The implementation follows the original sine and cosine kernels, but has been modified for JavaScript and combined into a single function.
*
* ```text
* Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.
*
* Developed at SunPro, a Sun Microsystems, Inc. business.
* Permission to use, copy, modify, and distribute this
* software is freely granted, provided that this notice
* is preserved.
* ```
*/

'use strict';

// MODULES //

var getHighWord = require( '@stdlib/number/float64/base/get-high-word' );
var rempio2 = require( '@stdlib/math/base/special/rempio2' );
var kernelSincos = require( './kernel_sincos.js' );


// VARIABLES //

// Absolute value mask: 0x7fffffff = 2147483647 => 01111111111111111111111111111111
var ABS_MASK = 0x7fffffff|0; // asm type annotation

// Exponent mask: 0x7ff00000 = 2146435072 => 01111111111100000000000000000000
var EXPONENT_MASK = 0x7ff00000|0; // asm type annotation

// High word for PI/4: 0x3fe921fb = 1072243195 => 00111111111010010010000111111011
var PIO4_HIGH_WORD = 0x3fe921fb|0; // asm type annotation

// The smaller of the two cutoffs for the sine and cosine kernels: 2^-27 = 0x3e400000 => 00111110010000000000000000000000
var SMALL_HIGH_WORD = 0x3e400000|0; // asm type annotation

// Array for storing remainder elements:
var Y = [ 0.0, 0.0 ];


// MAIN //

/**
* Simultaneously computes the sine and cosine of a number.
*
* ## Method
*
* -   Let \\(S\\), \\(C\\), and \\(T\\) denote the \\(\sin\\), \\(\cos\\) and \\(\tan\\), respectively, on \\(\[-\pi/4, +\pi/4\]\\).
*
* -   Reduce the argument \\(x\\) to \\(y1+y2 = x-k\pi/2\\) in \\(\[-\pi/4, +\pi/4\]\\), and let \\(n = k \mod 4\\).
*
* -   We have
*
*     | n | sin(x) | cos(x) | tan(x) |
*     | - | ------ | ------ | ------ |
*     | 0 |    S   |    C   |   T    |
*     | 1 |    C   |   -S   |  -1/T  |
*     | 2 |   -S   |   -C   |   T    |
*     | 3 |   -C   |    S   |  -1/T  |
*
*
* @private
* @param {(Array|TypedArray|Object)} out - destination array
* @param {number} x - input value (in radians)
* @returns {(Array|TypedArray|Object)} sine and cosine
*
* @example
* var v = sincos( [ 0.0, 0.0 ], 0.0 );
* // returns [ ~0.0, ~1.0 ]
*
* @example
* var v = sincos( [ 0.0, 0.0 ], 3.141592653589793/2.0 );
* // returns [ ~1.0, ~0.0 ]
*
* @example
* var v = sincos( [ 0.0, 0.0 ], -3.141592653589793/6.0 );
* // returns [ ~-0.5, ~0.866 ]
*
* @example
* var v = sincos( [ 0.0, 0.0 ], NaN );
* // returns [ NaN, NaN ]
*/
function sincos( out, x ) {
	var ix;
	var n;

	ix = getHighWord( x );

	// Case: |x| ~< π/4
	ix &= ABS_MASK;
	if ( ix <= PIO4_HIGH_WORD ) {
		// Case: |x| ~< 2^-26
		if ( ix < SMALL_HIGH_WORD ) {
			if ( (x|0) === 0 ) {
				out[ 0 ] = x;
				out[ 1 ] = 0.0;
			}
		}
		return kernelSincos( out, x, 0.0 );
	}
	// Case: x is NaN or infinity
	if ( ix >= EXPONENT_MASK ) {
		out[ 0 ] = NaN;
		out[ 1 ] = NaN;
		return out;
	}
	// Argument reduction...
	n = rempio2( x, Y );

	// Compute the sine and cosine together:
	kernelSincos( out, Y[ 0 ], Y[ 1 ] );

	switch ( n & 3 ) {
	case 1:
		ix = out[ 1 ];
		out[ 1 ] = -out[ 0 ];
		out[ 0 ] = ix;
		return out;
	case 2:
		out[ 0 ] *= -1;
		out[ 1 ] *= -1;
		return out;
	case 3:
		// Passing
		ix = -out[ 1 ];
		out[ 1 ] = out[ 0 ];
		out[ 0 ] = ix;
		return out;
	default:
		return out;
	}
}


// EXPORTS //

module.exports = sincos;

},{"./kernel_sincos.js":77,"@stdlib/math/base/special/rempio2":70,"@stdlib/number/float64/base/get-high-word":95}],80:[function(require,module,exports){
module.exports={"sine":[0.9959748854655721,-0.9973897635197664,-0.14403440393585104,0.5733189007340574,0.2850650224454897,-0.03239668097188226,0.9394774013049966,0.7830938406662683,0.5464743122423388,0.2538629051500614,-0.06475935124496074,-0.9247319000324113,0.6437503511161947,-0.5261909117677754,0.9740176930998966,-0.09705403582555941,0.9153180957360577,0.6682035327641902,0.4910928197833815,-0.9824392195464893,-0.1292468310927738,0.9017904670489352,0.7039412805366639,-0.4551785039007051,-0.9852413403473896,-0.1447637052683828,0.894910210848065,0.7149804798140974,-0.44117532695652595,-0.9902695484196156,-0.19319170951128617,0.8719102508677197,0.7372551378195307,-0.4118702898502005,-0.9942581512503326,-0.22487666202034878,0.8555890322361845,0.7587558102905912,-0.3666127242873715,-0.9972029615226474,-0.25632553440667866,0.8383695987257714,0.7794599253812273,-0.35199426501480574,-0.9999600968585507,-0.27143487078762074,0.8105820686815831,0.7891771112081494,-0.3372894335479856,-0.9999773449553958,-0.28647760260218985,0.8013093203097806,0.7987006491108716,-0.2906405049832142,-0.9997492190616029,-0.3331931832086989,0.7918399470177718,0.8456318863951806,-0.2756169148559408,-0.99744239197578,-0.37910435271077914,0.7608850013301959,0.8538891163490658,-0.2605256939742041,-0.9962004234802282,-0.39355269075453403,0.7506274118786814,0.8619368193760681,-0.21278730681264588,-0.9947140077733292,-0.4382338985705113,0.7401856338108306,0.8858010526327306,-0.16453519823928317,-0.9884693994520892,-0.4522599933627079,0.6821736296823296,0.8929615442867443,-0.14906437940641265,-0.985976252185617,-0.4955236597506354,0.670636486289904,0.9139942368729539,-0.16665125375007842,-0.9765886032057229,-0.5090686272241177,0.6589347824184449,0.920237456122903,-0.017865981288380337,-0.9730991910600503,-0.5224886796670739,0.6470713894267793,0.9493943438731495,-0.002202174512031111,-0.9693710002730397,-0.5357805240730781,0.6350492183489377,0.9541977511880966,0.013462172632908288,-0.9654049456664677,-0.548940898895335,0.5691379809546511,0.9587670178885107,0.029123216435988735,-0.9612020004290279,-0.6160448894695573,0.5561884598490995,0.9631010227697863,0.04477711399733364,-0.9351605436586692,-0.6283081034485942,0.543102461469709,0.9671987023557571,0.06042002417060799,-0.9027400019131201,-0.6404171434681197,0.5298831968528699,0.9710590511596514,0.14258437687979675,-0.8958907529945014,-0.7016114028595514,0.5165339097357813,0.9874563917723655,0.1580709524424323,-0.8888216708063121,-0.7126869406043937,0.5030578757605051,0.9898084789444107,0.17351874062593328,-0.8815344899567564,-0.7235875995486574,0.43002293850981543,0.9919176873575807,0.18892395085899102,-0.8740309985709901,-0.7780784785231561,0.41582833476443243,0.9937834994552648,0.20428280301805513,-0.8663130378523507,-0.7878226976049827,0.3393617449744045,0.9954054574053307,0.21959152835489854,-0.8221388572483607,-0.7973736011080096,0.3245855659209821,0.9967831632124668,0.29934957401864004,-0.8131206120618129,-0.8067288454358358,0.3097297402075474,0.9975973737970478,0.31425866045719236,-0.8039028437056069,-0.8158861350028206,0.2947979131499249,0.9963897958912856,0.3290906342471452,-0.7944878140315917,-0.8608181923106071,0.2797937487131144,0.9949377243060592,0.46612512923274296,-0.7416645868367535,-0.8998782820357414,0.32864157267754257,0.9987811689835406,0.420158790080114,-0.7750752595901051,-0.8763371388705956,0.2495831514090795,0.9913015852382191,0.493609661671331,-0.7202891428333066,-0.9130985386010656,0.03572625942032203,0.9967449403717241,0.4483779390552457,-0.7549020013439728,-0.8909959973456621,0.08690970558709664,0.9866925253112602,0.5206097369646325,-0.5963840453355937,-0.9254226273120608,0.004404338344444141,0.9937304484764128,0.47615702392055287,-0.6367487959246597,-0.9047803806820647,0.05566119567633636,0.9811150681238637,0.5470988556730804,-0.5709473213598553,-0.9368384525934196,-0.02692190540448274,0.916654719500494,0.5034687806713015,-0.6122829891842189,-0.9176767600866713,0.024358056640470832,0.9359383395145436,0.5730510198395293,-0.5449502365749734,-0.9473348102922327,-0.05822172643430446,0.9036851588688359,0.5302864039656686,-0.5872162524132689,-0.9705307302295867,-0.006968988804650983,0.924447728873265,0.5984407585051583,-0.5184183060274693,-0.987106291725655,-0.08946440528565561,0.8898286692195789,0.6625129215139978,-0.561573187560841,-0.9776029314456658,-0.03828919448004381,0.9120498116242098,0.722065832451995,-0.4913775696925095,-0.9916358636071547,-0.12061927858181826,0.8750988501151717,0.7766932583124546,-0.41783007893644103,-0.9837156564558124,-0.069571820919669,0.8987567558022942,0.7433824670099968,-0.46385456691676513,-0.9951921865493603,-0.282255084970381,0.8595101582542326,0.7960426861793063,-0.38916604357533724,-0.9998801330486875,-0.23270521577066683,0.8845816079833361,0.7639695029077852,-0.3118228709565637,-0.997771770170713,-0.31216729182604314,0.8430778932829074,0.8146108315932034,-0.23235263619372504,-0.9998744545510966,-0.2630554683408876,0.8695382804793904,0.7838067348345339,-0.2819072902262439,-0.9993720827182625,-0.34177311959962287,0.743139943102071,0.8323794706995111,-0.20177152574577945,-0.9988874412833216,-0.41815940670174795,0.7764648658437995,0.8028746933805131,-0.2517150293341216,-0.9999915535524762,-0.3710435114149672,0.7218149873791698,0.8493311643254471,-0.17099238502218655,-0.9775265727988723,-0.44640845120173733,0.7563444397306021,0.8211546641454973,-0.2212757207158182,-0.9870482002742277,-0.39994973961222396,0.699781600571215,0.8654492750958958,-0.14004542245646623,-0.9704433082179592,-0.4742193645614878,0.6384452855371359,0.9038403280904009,-0.19061923927391916,-0.9815386446887674,-0.4284634339428327,0.6770614075216865,0.93606594318658,-0.10896101119222568,-0.9624075943005199,-0.6125695683904464,0.6140226289025851,0.9619062972337766,-0.15977567305701254,-0.9750657501601745,-0.5712449049296128,0.6536767071455367,0.9466272781818917,-0.07776965927319526,-0.953427317762166,-0.637028280029097,0.5889973348542277,0.9699977026345968,0.13822365625243296,-0.9676358695624883,-0.5966749977323117,0.6296504505437412,0.9562595382735932,0.08727084451677442,-0.9435112923670386,-0.6608617751738791,0.5633939646668038,0.97713709604205,0.16917953061132737,-0.9592562950113693,-0.6215194790923849,0.49329435474075045,0.9649532698030769,-0.015188660389110742,-0.8761624577988185,-0.6840466622506064,0.5372376469724975,0.998798996304681,0.1999693623685365,-0.8997201146260121,-0.8247793346184769,0.5797681982260009,0.9949740894307973,0.14947869861515845,-0.784947845573678,-0.794707910779138,0.6207741685121575,0.9885327600549708,0.098594959871414,-0.8156764698794579,-0.762546692157883,0.437857225011681,0.9794919465470551,0.31007440931511926,-0.8442601596660697,-0.8837221209850056,0.48336937187038315,0.967875422981319,0.2609302149950627,-0.8706237501529022,-0.8585684198087069,0.28401946460785066,0.9992916315798106,0.2110998684493332,-0.7446116954519268,-0.8311569937761458,0.07140690451188102,0.9960485627876384,0.16071440549219648,-0.7778507065702046,-0.8015599250376454,0.12244530174551083,0.9901862460166608,0.36899763836763566,-0.809044251265345,-0.9112938619935059,0.1731617120589311,0.9817200970427017,0.3208669507901435,-0.8381103017809243,-0.8889877366887002,0.22342276961018537,0.957434040303421,0.2718924990190959,-0.7013530421995287,-0.8643438947107356,0.008808591252254383,0.970972404123329,0.22220306817462349,-0.7369719813762368,-0.8374271404634356,0.06005816617048877,0.981957461205001,0.42647260014216326,-0.7706529504129614,-0.9352888942545041,0.1111498098028102,0.9184061548085332,0.3795443259359986,-0.8023073805256398,-0.9159178934340242,0.16194916957915595,0.9374803107570859,0.33161798723206226,-0.6553416703502614,-0.8941383593544684,-0.05382429457139259,0.9540892320766683,0.7327371689111333,-0.6932007379262082,-0.8700075643243852,-0.0025646898205920763,0.9681892433028283,0.696888579056303,-0.7292369379236525,-0.9556130404171325,0.04870165913815152,0.8918297153016775,0.6592074239327298,-0.5652120095495305,-0.9392531927156175,0.09983994032286503,0.9138470940903604,0.6197927913691442,-0.6067581684969392,-0.9204234483458902,-0.11624592710644557,0.9334613850743338,0.773911524722363,-0.42182747868341586,-0.8991733227349332,-0.06517747974089322,0.9506210097523734,0.7404293420904974,-0.467751921304004,-0.97218653087644,-0.013937639143672327,0.8617529612672731,0.7050000977086593,-0.26695279467706096,-0.958902046547928,0.03733885241066074,0.8866271475754142,0.6677169576936477,-0.3160045856826921,-0.943095996162171,-0.17821130964170862,0.9091698247071939,0.8120483794203822,-0.3642253987588674,-0.9925112501349904,-0.1275344566115822,0.9293217135634598,0.7810640171818091,-0.4114884305830335,-0.9955799195101807,-0.07652223402199068,0.828293940015565,0.7480257386737365,-0.2060833213656618,-0.9990854528419391,-0.28893385624864687,0.8559273059281022,0.7130204226362565,-0.2559751127160628,-0.9999637522708783,-0.23947723618732528,0.881309892159996,0.8469980508582023,-0.305193781970158,-0.9784455800477615,-0.1893908774864558,0.7592183056713183,0.8186331185661914,-0.3536099018040401,-0.9877451881954269,-0.13880648917980865,0.7915839738115055,0.7881154768368147,-0.14440499807843768,-0.9944473832405475,-0.5839398809355981,0.8218680619957337,0.9019470777534272,-0.1949409710437851,-0.9985345408307761,-0.5415568426101808,0.8499909340097359,0.8786233661646263,-0.2449643196618178,-0.963594519110086,-0.49774970538194985,0.7169743189904196,0.8529891924538611,-0.030962045738861556,-0.9760336867165536,-0.45263366620005935,0.751767144452107,0.8251119652397357,-0.08215990413538986,-0.9859062382395408,-0.6336270593305525,0.5925509219461325,0.9272184474747419,-0.13314171165760819,-0.9931862124341966,-0.593134803897195,0.633065979540658,0.9068002001297557,-0.18377340456475405,-0.9449614762132575,-0.5510828181511718,0.4519870381374412,0.8839973957660606,0.03168672260889044,-0.960491381179043,-0.5075816836271442,0.49712073874420115,0.8588699975234794,-0.019592343356921716,-0.9734955407115212,-0.680827334718387,0.5409471913523959,0.9985735157809691,-0.07081988853584166,-0.9016337378328573,-0.6423847889626791,0.5833511482203982,0.9945234206600106,-0.12186120298582247,-0.9226195836039655,-0.6022530032211248,0.3952432270264234,0.9878580881332092,0.09421112473114525,-0.9411792730912899,-0.7596899834860034,0.441812674427522,0.9785950456178025,0.04305211479657699,-0.9572640010146535,-0.7253554522160114,0.48722031406367966,0.999957316263254,-0.008220106650840239,-0.8727820177817717,-0.6891134980822033,0.2882396710105543,0.9991161912870443,0.20679273659063582,-0.896656530277016,-0.6510594243345005,0.33694813814820557,0.9956477515770065,0.4121491280193293,-0.9181731599416906,-0.7989187330635907,0.3847705533775675,0.9895611178768869,0.364900533754275,-0.9372753258109052,-0.7670366448091773,0.43158116101853483,0.9974164155823119,0.31669238287601104,-0.8405047429147742,-0.7331375272083601,0.22771360647313857,0.9997875620559356,0.2676514454100836,-0.8671742178075423,-0.697310522697137,0.27733057207198175,0.9995296283330868,0.46839262554323857,-0.7399418282573773,-0.8350118315188926,0.32621825842933144,0.9827808059902182,0.4224847375685514,-0.7734521626980885,-0.8057073192900605,0.3742481085867582,0.990960786439673,0.3754658673222213,-0.6192236478783572,-0.7742840878075676,0.16629379593109592,0.9965348979245732,0.5658099735206569,-0.6586620543082059,-0.7408247688211331,0.2166245199162953,0.9994884825449069,0.5227977435159226,-0.6963684174231843,-0.9683704058237197,0.26638559965205927,0.9692819021935475,0.47841074426379765,-0.5259306588895889,-0.9543061449006738,0.31544618147081527,0.9806157663320418,0.4327656975411309,-0.5688398673915632,-0.9377324034818204,0.10422130407584768,0.9893709651725698,0.6163304071096329,-0.6102532324893171,-0.9904604924632461,0.15506824496462387,0.9955244757042824,0.5751509489932044,-0.6500618519898446,-0.9820943081867652,0.20550741237490247,0.9519786942059242,0.5324590516073066,-0.47164020210367297,-0.9711455705812427,-0.27379370592434443,0.9664219581049497,0.4883669792230975,-0.5162234651188872,-0.9576430708722422,-0.22412941586451252,0.9783238812952901,0.664431824780255,-0.559449246864473,-0.9971453552253665,-0.17387574638943304,0.9876531660175543,0.6252467625180175,-0.6012038791462285,-0.9919636193477155,-0.12316484649978504,0.9309390948466378,0.5844175270897685,-0.4154986194549671,-0.9841733774171533,-0.3334817001859951,0.8307536297658973,0.5420514846384519,-0.46158095353025724,-0.9737951149563677,-0.28471456465398604,0.8581964706454278,0.7099254347843009,-0.5064494964062453,-0.9608561230473296,0.03037381662196064,0.7278832868362916,0.8446485070768617,-0.309385030395883,-0.99793960355619,-0.18506441291923295,0.9062456817804909,0.6340822405175152,-0.0978734339549763,-0.9884230155486976,-0.39186082256346794,0.79426761287397,0.7853968418067885,-0.40512679730862106,-0.9327507482961175,-0.08346893063877256,0.9447687642618925,0.9000363311851807,-0.19925892129209838,-0.9987632104044811,-0.29559859476228645,0.8523028834427068,0.9726474708007462,-0.49661001704171853,-0.964762751833414,-0.49392490373266995,0.9733607773023479,0.8506821691512719,-0.2985498705168964,-0.885711460348959,-0.19622914085215984,0.9013790526520746,0.943751276954111,-0.08654855523591087,-0.9866335163237344,-0.4022990575493427,0.787306278139557,0.7923859421236964,-0.3947025708835147,-0.9285901507398203,-0.5895831042609498,0.9409802494627778,0.9049347091271451,-0.18810094856671522,-0.8271850782010126,-0.30644438836965926,0.8462990484899261,0.9752263903331402,-0.4867062997893475,-0.9617078354560491,-0.5037819665642747,0.25406426731463044,0.8566057931195267,-0.2876760923812495,-0.8803743470763179,-0.6775948002998669,0.5446462422816256,0.9474508420284045,-0.07521248122034813,-0.9847163933074863,-0.41268525403246503,0.351760701360454,0.9940534598351741,-0.3842272885823483,-0.9243094374631197,-0.5987311553264483,0.14244924375420068,0.9097160312459154,-0.17691864446012193,-0.820740668055486,-0.31725054254251595,0.4457595534328348,0.9776791616177437,0.03865144246313438,-0.9585285194935914,-0.5135738637964036,0.24304786615699936,0.8624186127443795,-0.27676510254240755,-0.8749233549316691,-0.685915195402986,0.5350727414077524,0.9510278516993843,-0.06386667826101194,-0.7504625232120524,-0.42301806852941354,0.34109165680880904,0.9952276265022273,-0.37370230541204175,-0.9199091621881919,-0.607801758850647,0.13118286023109976,0.9143796790641682,-0.16571345543447663,-0.8141900928203023,-0.7642033672243679,0.4355500146461225,0.9800054673817647,0.5527307710815876,-0.9552252151994091,-0.5232993288198977,0.2320000260814423,0.999868644651909,0.26340519982062716,-0.8693591890160174,-0.6941468654665752,0.017616499021381495,0.954481843270894,0.46449675963193393,-0.7428973215321092,-0.4332961644618752,0.3303784911020467,0.9962730577059251,0.643898048060747,-0.9153898941028902,-0.6167937415257352,0.11989950783992642,0.9915420251185406,0.37138012531254233,-0.8075341998305996,-0.7714893444890267,0.42528413625281486,0.9822050067110782,0.5621729515724689,-0.6619696613483945,-0.5329571036187887,0.22092217615682083,0.999619642741223,0.7267143915080503,-0.8636825690697097,-0.7022887457012019,0.006243971962483491,0.957812369959511,0.47453849521638275,-0.7352360240160315,-0.8388261149124745,0.31962259001796767,0.9971896182168318,0.6525581306482683,-0.5724566907126994,-0.6257059402137277,0.10860064611371574,0.9900018194842285,0.38191586087784846,-0.8007738500446604,-0.9898439812377284,-0.10749254411825485,0.9842774950891503,0.5715424134274529,-0.65340232128804,-0.9972725055741267,0.20981574933385405,0.9992413372476574,0.7344800606256612,-0.8578942293793353,-0.9700857717223187,-0.005129362771565767,0.967544324767088,0.4845188479257638,-0.7274796216739754,-0.9995882821158729,-0.21983495270976383,0.9979771894752943,0.6611338030254235,-0.5630944208651333,-0.9401303694894139,0.09728773659167841,0.988333554359243,0.8068762680368321,-0.7939099179325445,-0.9913967461621598,-0.11879284720053757,0.9325384175029784,0.580837944680572,-0.6447504618189106,-0.9963685814283778,0.19868218225976234,0.9987337771060807,0.7421507227032622,-0.4654835567277597,-0.9727840041926482,-0.01650203400826474,0.9646077363104264,0.868807821760822,-0.7196291178181714,-0.9998499578617146,-0.23091566665309057,0.9986356696067785,0.6696239559051231,-0.5536593131870522,-0.9802266365722639,0.08596224263014664,0.764921799479012,0.8135424363805865,-0.7869432913629741,-0.9928212711582696,-0.13007778409741666,0.6086864941348488,0.590058342928988,-0.6360152020831079,-0.9953357742335786,-0.34004366201898595,0.8268542360834052,0.7497253855193653,-0.4553875679721741,-0.975356404344632,-0.027872570660937117,0.6867258627754664,0.8743830405584804,-0.7116855279331421,-0.9999823002327749,-0.24196651101226294,0.5145299453563912,0.6780274910624629,-0.5441525881358937,-0.9779127412658046,0.07462562921328489,0.7575466161441823,0.8201033707459849,-0.3512097459756959,-0.9941173719597851,-0.14134589507089682,0.5996235439949508,0.9238834726779599,-0.6271976720107904,-0.9941742175862138,-0.35071709166857623,0.820404311953984,0.7572030692702535,-0.4452326735672596,-0.9478068242190044,-0.039239501919020967,0.6784141156081701,0.8798451554763038,-0.2424769649244166,-0.9999852921101998,-0.25298605632980686,0.5047445028356069,0.6863433214767817,-0.534575475433002,-0.9754723502245853,-0.45491910267192825,0.7500734420461889,0.826558222457907,0.18700610110560326,-0.9054084770057662,-0.1525957225594628,0.590483030880795,0.9281759281157538,-0.13059941736361222,-0.9928840617368688,-0.36134515508626114,0.40331925796211204,0.7645828066967222,0.08543805692071721,-0.9441192490481894,-0.5532211125800348,0.6700146136868919,0.8851934599745258,0.29748589165950545,-0.9998589331069817,-0.2639728771968665,0.4948937702086015,0.9644688703798705,-0.017028081388652333,-0.972905779119979,-0.46501784520819367,0.2966632279891703,0.832906156563319,0.19816652222542525,-0.9005215431262245,-0.163825811366619,0.5812661371431923,0.9323483214139935,0.4041074861598624,-0.9914654735707934,-0.37192647750245805,0.39288606333550913,0.9882532867145428,0.09676409758510206,-0.940309549424885,-0.5626595601964757,0.6615284435105824,0.8904272622350743,0.308324898274035,-0.8452446659856165,-0.2749255524375848,0.4849790216950562,0.967411239285508,0.505488072760273,-0.9702133599451014,-0.8576237756690526,0.28578288302467486,0.8391463519392772,0.2093013099540703,-0.8955181242787933,-0.948081176448288,0.5719740550129996,0.9364001128619935,0.41448450349322946,-0.7790055223106398,-0.8004586100156079,0.3824020478031531,0.9899274706410828,0.10807762154415533,-0.9363782181443404,-0.91053482822744,0.17497328697322928,0.8955458852510605,0.31912402220485847,-0.8391124189606346,-0.9780924559046144,0.47500153979528553,0.9702284708548938,0.5152685177332605,-0.9673954409718659,-0.8634172653881755,0.2748655712488837,0.9996049947920317,0.220409023975756,-0.8903988676696258,-0.951636843855419,0.06189440264895152,0.9403307783492534,0.42480790610249736,-0.7718239783125591,-0.807223770804088,0.37186856750163166,0.9914736046941791,0.6093698387183456,-0.9323257637351983,-0.9151779675828617,0.16376426929623306,0.9005486669143514,0.32988186655523993,-0.8328716304088848,-0.9803967564852041,0.46496261512434206,0.9546386368572097,0.52498231128941,-0.6945254890852204,-0.8690990696810013,0.2639127048464595,0.8683808986976265,0.23148822747675915,-0.8851644354888121,-0.9550694143882498,0.050539052646365004,0.9801100143981295,0.43507635862680694,-0.7645425967347822,-0.996441568994849,0.36128698496593814,0.9145925568032678,0.6183480417176682,-0.928152710393715,-0.9197027261210994,0.1525340682552229,0.8063670278384548,0.3405970397680719,-0.8265231075937354,-0.9825742400167516,-0.06334162222500854,0.9511903469071639,0.5346281969224899,-0.6862979492040548,-0.8746684535903311,0.25292570060115493,0.8626848137522146,0.7036942053659222,-0.8798155048247229,-0.9583784440342283,0.03917716527666095,0.7338951078020258,0.4452885328132456,-0.7571623194442813,-0.9973357249980713,0.3506586689532235,0.9099343671893045,0.6272462596768396,-0.10663593687969117,-0.9241085185520431,0.14128413650795882,0.7995886169385145,0.7799139187112726,-0.4131644269712043,-0.984624624835702,-0.07468783972857629,0.9476190178384407,0.5442049269103476,-0.2078831422556366,-0.9991624225957545,0.2419059797125476,0.856877138125163,0.7117293516257297,0.007105512162452348,-0.9615635047611606,0.027810210231592445,0.7261222824718232,0.45544310768866036,-0.30694515481039925,-0.9981008728495306,-0.18758419265125215,0.9051584750324622,0.6360633415866016,-0.0953207356551872,-0.9880306417452499,0.13001592926442254,0.7927067770255984,0.7869817827176753,-0.40278067029805625,-0.9865476457190724,-0.08602439615220774,0.6432386203160912,0.5537112624763058,-0.19674500618403132,-0.998632410016111,-0.2980477021615658,0.8509586230554778,0.7196724337130553,0.01847791809659537,-0.964624184572577,0.016439657858430514,0.718255531203476,0.852027578492042,-0.2961011639719769,-0.998736913575223,-0.19874332278430076,0.5520125769719701,0.6447981469328701,-0.08399320442823437,-0.9862123426485294,-0.4046457293062009,0.7857223982848527,0.7939478484401955,0.13203692542252451,-0.9883430539187594,-0.5916526849978877,0.6344889842742405,0.906023137824903,-0.18558142059830537,-0.9979732215548888,-0.75103166043853,0.8449300341195553,0.7275224241681242,0.029847933860605788,-0.9610017508391391,-0.5059957678918356,0.710295871583155,0.8579262825660546,-0.28521887162390097,-0.9992437649015101,-0.6794787355979629,0.5424935331724782,0.6534495458442631,-0.0726548084465231,-0.9842664742405108,-0.8212325730827471,0.7786363841651059,0.8008112147988444,0.14330196410884255,-0.9900106171937155,-0.600783374679779,0.6256572753163963,0.9107779779441897,-0.1743938295393242,-0.9971849424799497,-0.758492394586699,0.443462298299311,0.7352783075728232,0.04121408871130008,-0.9577944391157849,-0.5157727950132572,0.7022443332149853,0.8637140114876803,0.2548974622791183,-0.9996213612657626,-0.6877792168489213,0.5329043163246298,0.9750354435830744,-0.06130701436313008,-0.9821932882246887,-0.8276689068552541,0.7714496512620058,0.9954746173199422,0.15454846628727228,-0.9189004410384976,-0.6098363513600857,0.6167446358486921,0.9926467889141298,0.36318710827086587,-0.9962676747573861,-0.7658550156326307,0.43323993938732186,0.9805125420887137,0.05257491240491458,-0.954463234016046,-0.8861110986077759,0.6941019575878631,0.9998237882295865,0.2658784520603771,-0.8680889095432773,-0.6959907319439878,0.5232461668203124,0.9724469814364475,-0.049951290046802606,-0.9799930527734437,-0.8339981793511329,0.3279567258219714,0.9964909994940219,0.16577497719145629,-0.9143544203906389,-0.9330610131145446,0.6077522187458484,0.99120590321443,0.37376016945093893,-0.9952215370383306,-0.7731185712008012,0.4229615396834015,0.9396351771842948,0.06392893538728567,-0.9510085664405734,-0.891324936058578,0.21842012955587692,0.9995456250490395,0.27682504972388233,-0.48324984960609824,-0.7041122187008311,0.5135203339680445,0.9697327305663064,0.4767944636487447,-0.7334952305344953,-0.8402195718613711,0.317191379991973,0.8946369236448795,0.176980044640964,-0.570351929161029,-0.9370917954830161,0.5986811872020446,0.9896368022724752,0.38428488371286307,-0.3805753136244362,-0.7802821217300823,0.4126284287271579,0.9356827631895546,0.5736450477292744,-0.6514586743775083,-0.8964234781482104,0.20730745704381737,0.9991381678600075,0.2877358392967603,-0.4732615988385675,-0.9707051916054689,0.503728075831374,0.9668930420685555,0.4867607958979989,-0.27296496651939106,-0.8463322796315322,0.30638500457418166,0.8894976067314992,0.18816221922913554,-0.5609731283457075,-0.9410013624196754,0.09473489293632759,0.9879396890558392,0.3947598896555567,-0.3700333773282329,-0.9917291808201995,0.4022419431352518,0.9316093160252507,0.5829237412016541,-0.6427879100952536,-0.9014060653660638,-0.33174678534394275,0.8317762522481023,0.2986094094380134,-0.46321213036606923,-0.9733750788813145,-0.526663243538906,0.9639282832648051,0.4966641642835757,-0.26200606666404397,-0.8523355119658539,-0.23341028313319034,0.8842432308270834,0.6715265495681392,-0.5515217640949623,-0.9447892082111582,-0.4368548536825691,0.98611478309084,0.4051838323078476,-0.35944357618481393,-0.9931247617559842,-0.13262025597780497,0.9274153626031109,0.5921270318657456,-0.150580709905067,-0.9062720532006142,-0.3424544027297527,0.8254090933978683,0.309444353621081,-0.4531027441153195,-0.9759190573816584,-0.5362972023359764,0.9608388376548579,0.5065032877772118,-0.2510132755947718,-0.999994270666402,-0.24445419426746373,0.8788744755997792,0.6799104018932661,-0.541999058969064,-0.9484548428890692,-0.44705711430605377,0.7558699437445675,0.41555536330374226,-0.34880728001443023,-0.994391879239821,-0.6287841295472528,0.9231014454226827,0.9248618740961253,-0.13932749816888812,-0.9110208122227925,-0.35311772268546776,0.8189351655841662,0.9849679093153356,-0.44293474776356573,-0.9783367980358014,-0.5458617895973294,0.676527658831035,0.8810611574791645,-0.23998801525969402,-0.999968093454648,-0.25546648457135607,0.8733920355130169,0.9621042533639462,-0.5324062447564236,-0.9749045974220902,0.06071960484428427,0.748374805923676,0.9982206583278882,-0.3381258646515939,-0.904316682000941,-0.1551298746561406,0.5884112558278837,0.6103026527915711,-0.12805626403305181,-0.7915005403509164,-0.363735365880974,0.4009710881696052,0.7662333001316509,0.08799308792176676,-0.9806279881022609,-0.5553557681169831,0.19480706175755577,0.8863837016949274,0.29993348988451407,-0.9998125675869448,-0.7210431211454243,0.8677966197356805,0.9651432805234729,0.4978681132118009,-0.9723096180999028,0.04936351014714868,0.7407828637387993,0.9988342571638508,0.6725541470401835,-0.8994034251088433,-0.16635531159233624,0.5791773027038646,0.619272631986153,0.8158344031828774,-0.7844984367151774,-0.3743059588945737,0.3905263153796657,0.7734917039714413,0.099316433959206,-0.6329602885875713,-0.5647779098223925,0.9508264566024047,0.8915915897119377,0.3107636252368076,-0.4518652487290412,-0.7288768325624748,0.8620889520503734,0.9680574637135256,0.50769931083128,-0.9695888678225312,-0.8589399176462944,0.7330950992287886,0.446342105427347,0.68092732655662,-0.8943738278805337,-0.9488937026571321,0.5698684313838037,0.6281625065422592,0.8223585682496238,-0.7773948560232729,-0.3848281343906409,0.3800310269239387,0.7806500545065799,0.11062693313950014,-0.6241144352347842,-0.5741269959333052,0.1724475867021025,0.8966841478753862,0.3215535624492751,-0.4416901911724772,-0.73661626173266,0.8562697707597963,0.9708464259763984,0.5174648361318998,-0.9667426985265959,-0.8647082873135903,0.7253125068273792,0.9996737862044882,0.6892124262282441,-0.8892285409084116,-0.9524216514085176,0.5604858459961144,0.636971126529874,0.8287763589468204,-0.7701907171431356,-0.39530053129649045,0.36948658039719595,0.7877074257845023,0.9296395176165184,-0.6151878509427957,-0.5834018171194125,0.16123366547819348,0.9016607174487009,0.33230190581350816,-0.4314579997603952,-0.744260407539277,0.8503398285912446,0.6670753519847129,0.5271634259157839,-0.22758066442252614,-0.8703648045573098,0.7174360932345587,0.4914554851078197,0.6974083743543542,-0.8839682297496672,-0.9558264017685615,0.5510307602043294,0.9795978156487831,0.8350869451153787,-0.7628869519501799,-0.9966544603834606,0.35889433975294244,0.9135524482563924,0.9337700609201982,-0.606181690390128,-0.5926011736567811,0.14999888823091748,0.8048475786954089,0.34300726500137835,-0.4211699980552321,-0.7518082811907908,-0.06590095358088915,0.6585593201409702,0.5367938256433513,-0.2164912329872107,-0.8759087376912044,0.7094668772863464,0.4815187902754311,0.7055141107662499,-0.8785935748401887,-0.9591075133233289,0.5415043970501111,0.2819931234950075,0.8412895104634145,-0.7554845052067609,-0.9975195346507382,0.3482556751269853,0.908867663645897,0.9377798184676762,-0.5970971185487141,-0.6017238755830394,0.13874470820997944,0.7980457675851146,0.3536682552448801,-0.4108275168386415,-0.7592589063487376,-0.0772451206399794,0.6499581018162982,0.5463547895955942,-0.20537379780838091,-0.8813393695920937,0.7014058898230047,0.4715198096473815,0.7135285869643666,-0.8731052714065475,-0.9622645616519083,0.5319079887950466,0.2710632957763851,0.8473832526718373,-0.7479843344399673,-0.9982555769899627,0.33757196266020284,0.9040653144735944,0.941668271585654,-0.5879353105332054,-0.6107687428513036,0.12747258117488722,0.7911407270337025,0.9919808839337899,-0.40043189393935336,-0.7666113192540173,-0.08857929582773015,0.6412728096022258,0.5558450810352159,-0.19422979695721862,-0.886655997792627,0.693254173555697,0.4614598366196439,0.7214507662539029,0.021042109273762176,-0.9652971383813119,0.5222427767612521,0.2600984052660444,0.8533673834981328,-0.7403874098177615,-0.998862492192009,0.32684458432053703,0.8991460219367158,0.9454349172918987,-0.5786974514489672,-0.9857846820189433,0.11618396520664474,0.7841333502273857,0.9933541561722696,-0.3899844740601224,-0.7738645688515574,-0.9212473015082624,0.6325045669654731,0.5652634723666057,-0.18306067194124934,-0.8918579345721497,-0.9833011934225391,0.45134017247772784,0.7292796238789189,0.03241138282208492,-0.9682048512392997,-0.5082062409590197,0.24909987030308978,0.8592411288783238,-0.732694714023487,-0.9993402017507066,-0.6813582015263604,0.03522753049594086,0.9490792683603048,-0.5693847362387827,-0.9838100810183855,-0.8226932678025431,0.7770245435898566,0.9945989352859954,-0.3794866086037866,-0.7810177169133359,-0.9256116177655106,0.6236545081026287,0.9936745304808366,-0.17186786751787925,-0.8969445070456614,-0.985307347187418,0.4411621262283546,0.7370141471548918,0.04377646386783391,-0.9709873241051207,-0.5179683336599233,0.23806911357862928,0.8650037290270979,0.2573765971794601,-0.9996886438729946,-0.6896387143275413,0.023859158616105113,0.9526008533839191,-0.5599983695282829,-0.9817082214457574,-0.8291055315483626,0.7698152266650388,0.9957150602593243,-0.36893965549846,-0.9178856756881946,-0.9298562035838852,0.6147237777934375,0.9923330765180834,-0.16065283150751175,-0.9019150572508561,-0.9871860487046805,0.4309270144301336,0.7446533355997097,0.055135882306145155,-0.9736441970581659,-0.9984179763321799,0.22700756195174543,0.8706544385360876,0.26834995544613804,-0.9999077734869147,-0.6978300204416564,0.012487700487698768,0.9559992168359175,-0.5505395654701253,-0.9794793751824447,-0.8354105481861517,-0.20261529015196608,0.9967023867183848,-0.3583449790218804,-0.9133129323798874,-0.9339805099143974,0.6057135312527205,0.9908632615100713,-0.1494170146062679,-0.906768942233231,-0.9889370549590568,0.4206361610232617,0.9387545066446495,0.0664881687646287,-0.9761751264245242,-0.9977139170296879,0.21591664626492715,0.8761925264702911,0.27928860189922095,-0.9999975622474414,-0.7059310603004622,0.0011146270404792022,0.9592739191285296,0.4790472958965336,-0.281428452427545,-0.8416075021444605,-0.21373944112187182,0.9975607869497517,-0.34770394962493667,-0.06871232339156995,-0.9379840032665449,0.5966249339809446,0.9892652755814622,-0.13816187019833487,0.14721241563097595,-0.9905601394530145,0.41029089715826816,0.9347747545566097,0.077831854793436,-0.6495107424032847,-0.9968808006552411,0.2047978011589862,0.881617276462621,0.2901911215943463,-0.47100075084071913,-0.9566508354992914,-0.010258590586850223,0.9624245366698995,0.4889995421306686,-0.2704967756921565,-0.8476955918300473,-0.22483594430019962,0.9982901499169656,-0.3370179437543969,-0.05736160699662169,-0.9418661657773201,-0.4289142954967717,0.9875393254361835,-0.12688885416796652,0.15845213543897235,-0.9920550922360568,0.39989256102382625,0.9306740867524501,0.08916547305520811,-0.6408211303411117,-0.9959187349747614,0.19365246488748242,0.8303498290514237,0.30105610426024815,-0.4609376571595681,-0.953276676245,-0.021630481236936047,0.9654506619188798,0.49888853491307017,-0.25953010944599936,-0.8536740297315674,-0.23590336432338016,0.9988903812748972,0.6734247261681109,-0.04600347071816248,-0.9456264952781975,-0.43916043753362194,0.98568563433069,-0.11559942471116089,0.16967135902225372,-0.9934217199318809,0.38944249767365513,0.926453033664964,0.10048755751487967,0.37742316724160396,-0.9948278444341218,0.18248207913068168,0.8239585214645891,0.31188214448117973,-0.450814939909605,-0.9497792079995248,-0.03299957392407301,0.9683519034377475,0.5087129950749993,-0.2485298722578742,-0.8603794144303034,-0.24694026958983112,0.9993614033819495,0.6817888405150233,-0.03463938376273134,-0.949264505360091,-0.4493497729456281,0.9837044420450854,-0.10429504214703839,0.18086863514302481,-0.9946598457633905,-0.6307763128711188,0.9221121412991159,0.11179664362931478,0.3879307613714196,-0.9936082701430501,0.1712880888090705,0.8174606325498034,0.9854076878436019,-0.44063390849247924,-0.9461588831701172,-0.04436439802448015,0.9711278859428373,0.9989663089315579,-0.23749748703907672,-0.8545273947694392,-0.25794523244513895,0.9997031553101021,0.9658769181800704,-0.02327081610660391,-0.952779725436271,-0.4594809837138961,0.9815960048521057,0.8294344169981305,0.1920425154024557,-0.9957693095755636,-0.6395606816837092,0.917651971161415,0.930072567505567,0.39838817557758244,-0.992260169856875,0.1600719418964515,0.8108570028270822,0.9872797877077114,-0.43039587985294,-0.94241617005587,-0.05572348346653007,0.6661980277391795,0.9983847131536991,-0.2264343808593397,-0.848564839611784,-0.26891682936672984,0.9999155928527921,0.9628687851203289,-0.011899238305646927,-0.9561717008032373,-0.46955275933811647,0.9793605954839699,0.8823904653761077,0.20319155442803627,-0.9967499678561683,-0.6482623215421307,0.9130731001872815,0.9341906354345026,0.4087940571644605,-0.9907837179561205,0.14883508923264405,0.804148486494309,0.9890241801835337,0.5953073975857937,-0.938551552787141,-0.06707536092090681,0.6576731288140063,0.99767397353454,-0.21534198476223781,-0.8424925202304423,-0.2798536411480064,0.999998688530632,0.9597361023034244,-0.0005261213050977501,-0.7070922198982705,-0.47956379700608087,0.9769985030971015,0.876982123999714,0.21431431006053908,-0.9976016937543266,-0.6568801068650498,0.9083761206664199,0.9381878632047526,0.4191470601023094,-0.9891791054239493,-0.8035225584285284,0.7973359513167423,0.990640639629047,0.6044072010907947,-0.9345655312629296,-0.07841856199066767,0.6490631580392184,0.9968341820102284,-0.20422173358007797,-0.8363112220968261,-0.290754253081926,0.47048152890801764,0.9564792749505978,0.010847063750706515,-0.699004288792119,-0.48951280176220485,0.9745100332347243,0.8714603425448084,0.22540934354056677,-0.9983243770969231,-0.6654129229179505,0.9035616401662037,0.7457474527821238,0.4294458452013851,-0.987446539821458,-0.8102407349989343,-0.1590331791124393,0.9921289569507233,0.613428822842179,-0.9304586210862139,-0.08975161940118445,-0.3674141602956351,0.9958654472101351,0.7687669555720339,-0.8300217447790524,-0.30161725514399684,-0.558638266470923,0.9530987243415316,0.022218845708625628,-0.6908259395357786,-0.49939848667503356,0.25896172374049503,0.8658258352691903,0.23647521969465962,-0.5193711318433366,-0.6738596659573279,0.04541557990685469,0.7381220993770686,0.439689080285172,-0.9855862452608295,-0.8168541046752472,-0.17025130262462626,0.9934889396305748,0.6223710958680646,-0.9262313534972552,-0.9217044942842992,-0.377968082425407,0.9947678944428029,0.775990695642728,-0.8236249018385171,-0.3124412421746689,-0.5680351583009675,0.9495948877598556,0.03358775359701396,-0.6825582300214875,-0.5092195730037102,-0.731577104597349,0.8600793310120575,0.24751050712093906,-0.5096186270450415,-0.6822192433734617,0.034051225032544194,0.7304012678241548,0.4498754403627036,-0.9835984623763426,-0.823361811999693,-0.1814474036569839,0.5666161815220822,0.6312328634605479,-0.9218842753048812,-0.9260564457847718,-0.38847311333177553,0.9935416656797367,0.7831140591572427,-0.8171215207246577,-0.323224814061095,-0.5773585732023592,0.9459682184365832,0.8984267404039628,-0.6742022297004815,-0.5189747903633846,-0.7392835346882138,0.8542215730997287,0.25851377837426365,-0.49980020165899314,-0.690490573831747,0.022682465537506087,0.7225859568344319,0.46000360779995364,-0.30205936277284157,-0.8297630151822178,-0.19262003396268326,0.557208263415923,0.6400129793253271,-0.9174179488157548,-0.9302886093066284,-0.3989278941597558,0.9921869195370397,0.790136124688682,-0.8105124426679212,-0.6120670797175866,-0.5866073051654318,0.9422191854914851,0.9033628512542183,-0.6657590194446582,-0.5286628768895411,-0.7468943363963301,0.8482533192494932,0.2694836101508731,-0.4899171257258416,-0.962709739547841,-0.8723041795423833,0.7146771773401279,0.470072272490276,-0.2911979240569218,-0.8821134100262124,-0.2037677483308992,0.5477282688700971,0.6487103077299787,-0.9128329517616377,-0.76032566451114,-0.4093310725543506,0.3552024870434688,0.7970559839133257,-0.8037985225709483,-0.603033537834422,-0.5957801578409655,0.9383482738724068,0.9081821096054704,-0.6572296914067628,-0.9976336845057527,-0.7544085252433148,0.842175341471597,0.9768995079737096,-0.47997067764896484,-0.9595706229070738,-0.8778088198841649,0.7066759523638814,0.48008013202387023,-0.2802988180790779,-0.8766991815082528,-0.21488910477375242,0.5381774241482832,0.6573237236508677,-0.06753804603293381,-0.7528891484542558,-0.4196813028354809,0.34454801150852343,0.8038727417281243,-0.7969806288979894,-0.593921991884806,-0.6048759446949372,0.9343559842925396,0.9128838920732384,-0.6486153488791153,-0.40722088687140884,-0.7618251292479277,0.8359884259693816,0.9792667593373989,-0.46996214402910397,-0.9563073831356051,-0.8831999132120213,0.6985833168864117,0.4900258918562525,-0.26936345466900197,-0.8711715495111803,-0.9633325455241992,0.5285569646788275,0.6658521129186723,-0.05618649363930561,-0.7453552440906159,-0.4299772461720536,0.33384896772936085,0.8105855163664824,-0.7900596435625663,-0.584733620472566,-0.6138934891620024,0.12355146544824615,0.9174675904688744,-0.639917106150897,-0.3968071111873523,-0.769143189051799,0.8296933730375863,0.9815073398203222,-0.4598928194979381,-0.9529204423425814,-0.8884767621730264,0.6904003177126411,0.49990826547570777,-0.25839324834638583,-0.8655312290495779,-0.9663217744185161,0.5188681348949375,0.6742943723625048,-0.04482767336634977,-0.7377249259517178,-0.44021757075514295,0.3231067396570708,0.8171934395123177,-0.7830364618133943,-0.5754696121391168,-0.6228316247976872,0.11225746119214355,0.9219326118782337,0.3785128667040341,-0.3863420073990902,-0.7763617580435261,0.8232909969588278,0.983620959597158,0.568519402820595,-0.9494102386382206,-0.8936386841920807,0.682128013336287,0.9993778662268548,0.7319781969396372,-0.8597789497145951,-0.969186006901894,0.5091121880737114,0.6826494099526101,0.8612563312188347,-0.729999181040449,-0.45040095197026386,0.31232271682875185,0.8236956564123806,0.9503169975251015,-0.5661311652097195,-0.6316891954292707,0.10094893612100647,0.9262783787383703,0.3890153307486512,-0.37582692919692345,-0.7834799024811194,0.8167821258982707,0.9856073452653058,0.5778389828274447,-0.16797297315251725,-0.8986850115602046,0.6737674738029437,0.9989121138789476,0.7396797031784843,-0.8539154555795733,-0.9719248724778896,0.49929038617402244,0.6909161449416229,0.8669801319873894,-0.7221790087034159,-0.9997794560813779,0.30149829418777024,0.8300913259868185,0.9537958126121784,-0.5567194876384747,-0.6404650553053401,0.08962735302402615,0.9305043289122459,0.3994674745775481,-0.36526323673548255,-0.7904967016127851,-0.12642885223483488,0.9874662398802508,0.5870838177536536,-0.15675055095634927,-0.9036150915209086,0.6653197805716683,0.9983171494689885,0.7472855297890861,-0.847941505103798,-0.974538016866618,0.4894039996732822,0.9625503605511997,0.8725917864629361,-0.7142654205016749,-0.9999536407724983,0.2906348719033206,0.8363796209379717,0.9571512515563375,-0.5472357968520701,-0.6491580692439958,0.07829417637948584,0.9346099157614439,0.9970153124949254,-0.35465229645778773,-0.7974112477960266,-0.13770256603407438,0.9891974029888013,0.5962527117540939,-0.1455078526401549,-0.9084282863546284,0.6567860263750915,0.9975930499572797,0.7547946929366025,0.07043126680567773,-0.9770251020505796,0.47945430740309963,0.212055825865886,0.8780905687623506,-0.7062594400798844,-0.9999984786771643,0.27973385518931,0.842559727857387,0.9603828803222129,-0.5376813195923038,-0.9762756449754446,0.06695087216532646,0.7525016944748257,0.9978288826811321,-0.3439954809184957,-0.8042226466150509,-0.14895846762315051,0.5934484227127705,0.6053444788068084,-0.13424633247825138,-0.9131239734612164,-0.35791200089528763,0.40668331642607264,0.7622062212898809,0.0817716204760763,-0.9793858063183841,0.4694425963838615,0.2009276115676992,0.8834757676028382,-0.698162103033894,-0.9999139639954682,0.26879665412258946,-0.0142106655751248,0.9634902808896294,-0.5280572917574007,-0.9737498578656041,0.05559890766951819,0.7449627772533439,0.998513380924257,-0.333294168606356,-0.8109300169964638,-0.16019510101986592,0.584256108294398,0.9869096191731097,-0.1229674471796142,-0.9177015454404768,-0.3685085941981833,0.39626685171131676,0.7695191561471016,0.09310139675978366,-0.9816198243063642,0.4593701616582522,0.18977340672374454,0.8887466863939413,0.30482275168029344,-0.999700107659619,0.2578246834605569,-0.025581750660443943,0.9664730513076754,-0.5183649582421463,-0.9710981135015571,0.0442397513002628,0.7373274970232815,0.9990687186825473,-0.3225497437658996,-0.8971494485990812,-0.1714110127344175,0.5749882187223455,0.9850115920634288,-0.11167265569944755,-0.9221604101707338,-0.379057519888805,0.38579912877642214,0.7767325515597878,0.10441913011870502,-0.9837268670380755,-0.5690034504396481,0.1785946541614624,0.8939026433276444,0.3156349308565885,-0.9993569373325294,0.24681936245815414,-0.036949526675117327,0.9693308057466956,-0.5086055727768563,-0.9683207548938175,0.032874872396050886,-0.25076830201764566,0.9994948241215185,-0.31176359621838295,-0.8920675940296997,-0.18260475195740938,0.565645952823923,0.9829861509628799,-0.10036341905046448,-0.926499990885425,-0.38955741343425526,0.3752815016504837,0.9205756799176151,0.11572335657253148,-0.9857066619616764,-0.9931543542542012,0.16739279988360883,0.8989429714665683,0.3264062817761181,-0.998884497404236,-0.7400756154886533,-0.04831252316567922,0.9720631745482,0.5218472474054662,-0.965418141301451,-0.8672732594783193,-0.2617618310396042,0.999791642123246,-0.3009371211820107,-0.886870348034273,-0.953972467320076,0.5562305190472255,0.9808335578679066,-0.08904120011390082,-0.7669090074579749,-0.9961247084101251,0.36471533081784213,0.9160741938187756,0.12701261388810986,-0.9875589529851837,-0.9917616298382161,0.15616929288121115,0.9038670188302405,0.33713541113466244,-0.9982828489861585,-0.9410869711489757,-0.05966927029690866,0.9746698042726795,0.5315152383636117,-0.9623906481856042,-0.8728790911707184,-0.2727215004401955,0.9999591342934953,-0.29007171909146057,-0.8815583828910353,-0.9573215103319704,0.5467431353048167,0.9785540912224167,-0.07770746345028746,-0.7595606193062941,-0.9970605748867167,0.35410198304210205,0.9114542109733942,0.13828544176858676,-0.9892835005095981,-0.9902406182951907,0.14492558494613678,0.9086741484794297,0.3478209310894783,-0.9975520699031942,-0.9371801071693108,-0.0710182990419567,0.9771503577453244,0.5411144763463885,-0.9592386671609373,-0.8783720135233215,-0.2836458925556801,0.9999972789666878,-0.279168795416733,-0.8761323857174619,-0.9605467211421347,-0.48302827766162587,0.9761480458817647,-0.06636367511000534,-0.7521139798745355,-0.9978674688029782,0.3434428311893367,0.90671632898911,0.1495403820423018,-0.9908800814598977,-0.9885915163722011,0.13366313048330006,0.7949443312766358,0.3584614594388201,-0.9966922546836513,-0.9331520163344713,-0.08235814137236912,0.9795045140996396,0.5506437196656474,-0.9559626059449687,-0.8837513160113347,-0.2945335942855337,0.9999060712087041,0.7171129658252124,-0.8705930583813885,-0.963647682560574,-0.49295542360748795,0.9736157330746121,-0.055011302443647686,0.22925822860873996,-0.9985452857849355,0.3327392540505043,0.901861160724144,0.16077597885140646,0.43301184087145983,-0.9868145373851707,0.12238338632253083,0.7879930258572483,0.3690556198007316,-0.39572645499252346,-0.9290032196892173,-0.09368733044798,0.9817319688189484,0.5601017356872439,-0.1891955623323702,-0.8278109062544848,-0.3053831972752355,0.9996855228175215,0.7249931833291622,0.026170059540112565,-0.9666239934692986,-0.5028188043973378,0.9709574803626682,-0.043651813912214274,0.24031363694888183,-0.9990939381550757,-0.6767746431519677,0.896889334208024,0.17199077884018307,0.44323546115001694,-0.9849099111912772,0.11108781153012955,0.7809397913468639,0.3796020417910849,-0.38525611653637953,-0.9247342538919417,-0.10500440080665158,0.6285232642571726,0.5694873009904822,-0.17801557889147507,-0.8213769456818489,-0.3161932980984426,0.9993356623216882,0.7327796209470838,0.037537624313308475,-0.9694752688742088,-0.5126171441754189,0.9681736315983194,0.8618538575428937,0.2513379600512556,-0.9995133549436879,-0.6851036758537021,0.8918014925603469,0.18318333134304066,0.4534017476880837,-0.9828778841592195,0.09977786722013285,0.7737855401009965,0.3900993612008433,0.634293359741934,-0.9203456711452515,-0.11630788855383588,0.6196366803422724,0.5787992015263692,-0.16681256864000638,-0.8148367377152742,-0.3269624984385274,0.9988565349766331,0.7404712714816007,0.04890033349032664,-0.6712779587116161,-0.5223491754992108,0.9652645468801514,0.8675660865984932,0.2623297718889856,-0.9998034818980429,-0.6933440884882189,0.8865982939075904,0.19435218857216244,0.46350938544820214,-0.9807187191373498,-0.831962410836048,0.7665311975419562,0.4005462201725256,0.6430448343276244,-0.915838039124539,-0.1275963315519335,0.6106699446982282,0.588036232774654,-0.15558798071851979,-0.8081911283488635,-0.33768940526945374,0.42629267629363216,0.9408877963023917,0.06025671727311088,-0.6628046972443458,-0.532013639503376,0.9622306025063689,0.8461535591432989,0.27328765064061883,-0.9999642814894119,-0.7014948151352095,0.8812804112979812,0.7119070973055577,0.473557066979297,-0.9784326954196728,-0.8382187915009991,0.7591777020391429,0.9971054919573126,0.6517131292743045,-0.9112119409045516,-0.1388682696094252,0.6016242171972517,0.990158427758581,0.7994366119132233,-0.8014409772106842,-0.3483726310359683,0.41597711863105996,0.9369746470179188,0.0716053066818124,-0.6542457001448023,-0.541609286062598,0.9590721909261207,0.8400376345250286,0.28421017887404126,-0.47649958178087753,-0.7095548014754974,0.8758485326144355,0.7038739882902927,0.48354349258579793,-0.9760201087097188,-0.8443667462323812,0.7517260047876658,0.9979057093241697,0.6602971233138979,-0.9064679748839691,-0.9397499038290574,0.5925006679293705,0.9885027035795405,0.8062173337849715,-0.7945871574515726,-0.3590107938330853,0.40560775317046627,0.9329402974551136,0.08294463374480636,-0.6456020745430816,-0.5511348739532881,0.19977446464429993,0.8338130487007821,0.29509594372982695,-0.4664697755096888,-0.7175230049274174,0.8703033604855788,0.6957498312156558,0.49346737049575906,-0.9734812710822933,-0.8504054797751393,0.7441770696853037,0.5251976838500501,0.6687957060828851,-0.9016067547079996,-0.943577181062032,0.5833004770510747,0.9867191138246412,0.8128937692007712,-0.7876305556321898,-0.3696025175848393,0.395185921218133,0.9287852694683204,0.9190327161494198,-0.6368749385162116,-0.5605891710141415,0.18861765241514977,0.8274806068380598,0.305943537103995,-0.4563796300747829,-0.7253983947816761,0.8646456121948589,0.6875356769639754,0.503327417027953,-0.25457309001656503,-0.8563342110022829,0.7365318732078217,0.5154853876675517,0.6772077782659319,-0.8966289091890021,-0.94728240396052,0.5740248346326599,0.9848078892061818,0.81946505454512,-0.7805720716083424,-0.99399603124806,-0.625918914713376,0.924510100521973,0.9234563600656784,-0.6280654209435264,-0.5699709543055209,-0.7788468195060241,0.8210411280558408,0.31675155583015213,-0.44623045066455397,-0.7331799523346778,-0.8954054740721171,0.6792325880589651,0.5131223567579191,-0.24355817770619115,-0.8621521730159272,-0.251907531036669,0.5057064120154855,0.6855322517380896,-0.8915350822251487,-0.9508650932436271,-0.45392620817447726,0.9827692769463859,0.8259303398039695,-0.7734126184145836,-0.9951761495338103,-0.6347482193748686,0.9201153436210734,0.9277605523316454,-0.619174661360642,-0.5792790102676465,-0.7859298491252251,0.8144954453186275,0.32751860186099563,-0.43602355010360555,-0.7408666710202955,-0.9004114775049876,0.6708416385282836,0.5228509226829422,-0.23251176046767214,-0.8678586132464935,-0.2628976218832748,0.4958620218315687,0.6937680497055463,-0.886325932717134,-0.9543247854805234,-0.46403077556512884,0.29772749264349146,0.8322887886746777,-0.7661531221461101,-0.9962275390148942,-0.6434954175875858,0.9156015672396578,0.931944736188072,-0.6102038098120551,-0.5885121348775738,-0.7929112165310815,0.8078444053286997,0.9880823300806069,-0.4257602486829325,-0.748457556540074,-0.9053010102072631,0.6623639137646059,0.532511856385944,-0.22143526718582163,-0.8734527935500561,-0.2738537061908066,0.48595349051506975,0.7019141068449133,-0.006770082147309615,-0.9576610331503892,-0.47407531928349395,0.2868508463404744,0.8385395786741868,-0.7587945218389681,-0.9971500636911566,-0.652159377877094,0.9109693552472637,0.9360083703991312,-0.6011540267023806,-0.9900758942912602,-0.7997900186642892,0.8010888684165909,0.989769051896718,-0.41544187398913784,-0.7559516269918448,-0.9100734397042801,0.6538005103852249,0.5421039081982623,-0.2103301306358732,-0.8789339903038232,-0.9778598153379109,0.47598209976209155,0.7099693694410281,0.004603247677821495,-0.7034558360232608,-0.4840585400398873,0.2759370950821345,0.8446819012454134,-0.7513377693485878,-0.5343446923514166,-0.6607389795360169,0.06300685417023666,0.939950929322428,-0.5920264826462506,-0.3402816385778069,-0.8065653657326475,0.7942297084298022,0.9913277443312912,-0.4050697607327059,-0.9327282554619284,-0.914728148669001,0.645152536090201,0.996413240062536,-0.1991977872981468,-0.8334880214369167,-0.9801765285994897,0.4659491393997797,0.7179327955232547,0.015975982060053955,-0.6953269962456761,-0.4939791464769192,0.26498765059257146,0.8507149618618378,0.23040373246484153,-0.5246967859946866,0.3316290794090546,0.9013520364300626,0.9437719029769929,0.4340724853501159,-0.32956518699178183,0.12121513765215729,0.7872678126197682,0.9927582057631218,0.6174716673251903,-0.11904411928787163,-0.0948591002786574,0.6364211095190779,0.9953863920421246,0.7720372185858181,-0.8895546118361998,-0.30650377097250436,0.4558559072194804,0.9515337352880285,0.8905515026604673,-0.9669248734009445,-0.5038358553365365,0.25400392921290404,0.8632479914993756,0.967480343193811,-0.9991433390152312,-0.6776406788362733,0.04029091225911684,0.7346517766089412,-0.5735428442934035,-0.9847055261434766,-0.819802202530382,-0.17530354047011257,0.5717500556501636,-0.3841696919564824,-0.9242856269578846,-0.9236820119086786,-0.3827119697486688,0.38214973322033413,-0.1768572435907408,-0.8207050260710776,-0.9844293061639361,-0.5722491732047775,0.17470443932317994,0.03871378038375787,-0.6788005523663762,-0.9992074125512405,-0.7350644682560683,0.8624501898918377,0.2524770147766212,-0.5051986170753331,0.3100855873062548,-0.863554986073743,0.9510471332569471,0.4544505114484158,-0.30800578501440173,0.09860666009131092,-0.9517206972846133,0.9952337120928574,0.6352028591695912,-0.09643022815333575,-0.1174768314680573,-0.9954445910309289,0.9929465774815389,0.7862935954529563,-0.8997149827935129,-0.32807459185092225,-0.992684924067789,0.9442925301043295,0.9006673447648607,-0.9724760605864269,-0.5233524887828858,-0.9435705625801875,0.8515435330472677,0.9729832783262743,-0.9998261226301409,-0.694191770643779,0.0175541240556049,0.7190306195735692,0.999864510956193,-0.980488022732018,-0.8326148782590462,-0.19765080733787213,0.5529416499757513,0.9800557890522001,-0.9153647782460315,-0.9321579672475933,-0.4036261810192038,0.588987833155652,0.9144821062658733,-0.8074974025203236,-0.9881727455177289,-0.5907537129840005,0.7488477138636221,0.8062055097389668,-0.6619229008822557,-0.9980435312225612,-0.7502952433478554,0.8737391910229159,0.2744196668947117,-0.48543906122038677,-0.9613093953754897,-0.874800775918949,0.9578302970755849,0.47459340739680816,-0.28628702256854727,-0.8796856855198553,-0.9584563653164161,0.9971942900728116,0.6526054006115044,-0.798829540349842,-0.7569839253774111,-0.9973556065997113,0.9899930179218129,0.800143148416693,-0.9094098462567227,-0.5989338308641696,-0.9896820498528518,0.9365627532531625,0.9103171866283996,-0.9775240941035849,-0.5425983425820744,-0.9357940216407853,0.8393984907394171,0.9779827973587946,-0.9999916018077727,-0.7103836915163113,-0.838207892491292,0.7030374401218736,0.9999802482102453,-0.9757632203078841,-0.8449967637119632,-0.21989581078466955,0.5338471553878631,0.9752823400284045,-0.9059703249235396,-0.9401516292739139,-0.42433155836380226,0.33972819367812834,0.9050423732829428,-0.7938719843351234,-0.9914049098263081,-0.6089526001000772,0.7637279483200085,0.7925402932243151,-0.6447027741956854,-0.9963632677594165,-0.7651378198820459,0.8845761243891003,0.6430295286374718,-0.4654283419134027,-0.9547951661960693,-0.8855939487411802,0.9641178848619291,0.4944907513737203,-0.2644201368202928,-0.8686416809028197,-0.9646961333917233,0.9986389253109158,0.6696702876734342,-0.051064494618745446,-0.7419258592697916,-0.9987505959623763,0.986527241518124,0.8135787117958762,-0.9186341861577603,-0.580564858957792,-0.9861671196870894,0.9283484040777872,0.9194960354769384,-0.9820663621281434,-0.39209363863928015,-0.9275333061146063,0.826819148352707,0.9824763135682195,-0.9996396909301265,-0.7262080638446782,-0.8255871363012115,0.6866805130353485,0.9995786012833077,-0.9705335634573925,-0.8569414525709326,-0.6850891172769443,0.514476451271078,0.9700042853830152,-0.8961071276279534,-0.9476588621116692,-0.4448173889361667,0.31824825238082516,0.8951343764439008,-0.7798358212305495,-0.9941241267859591,-0.6268364185507193,0.10715904355238823,0.7784650207998137,-0.6271490819037884,-0.9941674915207136,-0.7795845183926525,0.894955383021749,0.6254442435089828,0.9939292684393337,-0.947786931344077,-0.8959289202132557,0.9699066434532667,0.4432175458429956,0.9470872680104051,-0.8571482459440827,-0.9704367730894726,0.9995668703609873,0.6863886910783702,0.8560198140340111,-0.7264839248770327,-0.9996288373592386,0.9825510414437768,0.8265933341052463,0.7249794179645392,-0.5618955060442883,-0.9821419521756874,0.9196537326364701,0.9281991422254805,0.39373554258276827,-0.37106865656164695,-0.9187926900496077,0.8138120143684499,0.9864615020344242,0.5820177146725423,-0.16291428068520006,-0.8125392259497207,0.669968301296477,0.9986597779852507,0.7431218237965603,-0.8684427647208236,-0.6683432015320044,0.494839559919239,0.9642243559519508,0.8695249071455582,-0.9546757815606257,-0.49293803492487676,0.2966036512197854,0.8847632420908313,0.9553244107736347,-0.9963289894890532,-0.6443959153484017,0.08451745496807088,0.7639869749325999,0.9965138169181021,-0.9914573385887829,-0.7936278642387612,-0.1315153921413757,0.6075353570311052,0.9911697334802402,-0.9402883168409824,-0.9058003430788064,0.975193577778317,0.42271409715642017,0.9395417092839196,-0.8452113272825339,-0.9756753142348292,0.9999776451094532,0.21815366086251986,0.8440405810735075,-0.7106661117695215,-0.9999898763931174,0.9780664749624249,0.8391802816520965,0.7091258964029192,-0.5429354315423162,-0.9776086299177775,0.910483237503529,0.9364220039353275,0.5410976693482646,-0.3498516856389242,-0.9095766957915979,0.8003838186049351,0.9899363008432113,0.6003627039143007,-0.14043116698571986,-0.799070912352573,0.6529094517100319,0.9972242537101043,0.7581494258828473,-0.8794947494471319,-0.6512514887570094,0.47494664134997394,0.957945542238334,0.8805333889410598,-0.9611987571059524,-0.47302104240084386,0.2748055889904498,0.8739343361905754,0.961799717114989,-0.9980183571519743,-0.6616220053078063,0.0618321375258123,0.7491136464825352,0.9981535750784465,-0.9882342111815758,-0.8072605914718671,-0.1540286448303416,0.5893121351614209,0.9878973728511431,-0.9323032024279405,-0.9152031099189176,0.9799759524068646,0.4019919385629823,0.9315100369380562,-0.8328371010130476,-0.9804090464359381,0.9998710370237588,0.19590021329356877,0.8316246462425994,-0.6944806039951874,-0.9998335262644382,0.9730758623636542,0.8513330420202473,0.6929054770732822,-0.523694445288255,-0.972569498428911,0.900841663441795,0.944160366143875,0.5218301987848295,-0.32845370341306196,-0.8998900916444008,0.7865415087354589,0.9928989121531345,0.6183970688548115,-0.1178753949867918,-0.7851891639398073,0.6355127904292676,0.9952727711900896,0.7727847657014739,0.09820725605019567,-0.6338228221084433,0.4548079880479592,0.9511710928652217,0.8910862876917092,-0.9672244137966276,-0.4528593114381751,0.25286534388815674,0.8626532615584085,0.9677773936683484,-0.9991913557053531,-0.2507489549406794,0.03911482848182967,0.7338527308264756,0.9992768941682507,-0.984499776927165,-0.8204756465952372,-0.17646220396096252,0.5707840064928835,0.984113879653108,-0.9238357195584356,-0.9241323557946772,-0.38379910767670145,0.3810617915915038,0.9229964065151129,-0.8200319694910057,-0.9846355204862651,0.9992471012623306,0.17354540805121157,0.8187784334764444,-0.6779357758451211,-0.9991598678678821,0.967581785762478,-0.04207490069363788,0.6763265523297627,-0.5041825024606523,-0.9670271649275036,0.890733998947699,0.9514102250658476,0.5022927361985545,-0.30688578108024495,-0.8897378894027616,0.7722922466936372,0.9953478031256913,0.30480371712850335,-0.0952586349185461,-0.7709011630503207,0.6177873183893173,0.9928063401113354,0.7870202710095693,0.12081673526208113,-0.6160662190808373,0.43443401963964606,0.9439045128947858,0.9011781433867841,0.33125041317889586,-0.4324632736035741,0.23079426767286662,0.8509258549591766,0.9732543476173362,-0.9998473782463064,-0.22866590142060897,-0.8497750969619775,0.7182121238767273,0.9998831929885076,-0.9802559680009222,-0.014190681965542877,-0.7166887406633121,0.5519605573755173,0.97982121144433,-0.9148902492606904,-0.932583460764269,-0.5501356852770517,0.35993448538282824,0.9140052229197982,-0.8068025580197544,-0.9883525496318029,-0.3578933391402835,0.1511008113865039,0.805508589333595,-0.6610401875207641,-0.9979692497505313,-0.7510728494276514,-0.06478870861332171,0.6593977000151883,-0.4844096984294687,-0.9609844969858743,-0.8753704118678085,-0.27765283684624287,0.48249539016318094,-0.2851590777627176,-0.879125341759272,-0.9587914312537937,0.9972817067184051,0.28306233981314644,-0.0725925885659985,-0.7562143022157672,-0.9974404561923182,0.9898262365914708,0.07041133079839293,0.14336370457166064,-0.597990866841169,-0.9895127209402375,0.9361495620148136,0.910803734556658,0.352625445822622,-0.411843481692808,-0.9353784212534971,0.8387581840873861,0.9782277452166479,0.5454208900377844,-0.20646453744356844,-0.8375654276219516,0.702199917995746,0.9999721578436027,-0.9755049801258227,0.008555532938737417,-0.7006412431177075,0.5328515269564926,0.9750215892273031,-0.9054714198709465,0.22317609174767916,-0.5309997179865169,0.3386209510868848,0.9045411381401578,-0.7931557114227106,-0.9915582107024852,-0.3365624806176743,0.12857803600808057,0.7918219795571056,-0.6438025807049077,-0.9962622879315327,-0.1264090269558542,-0.08746899521795626,0.6421276790229528,-0.4643862635327913,-0.95444462104658,-0.8861400104601996,-0.29943154963228213,0.4624484037146913,-0.2632848347351167,-0.8680579395866578,-0.965005449382675,-0.49741176415439586,0.26117450762819033,-0.04988898321461229,-0.741136180335703,-0.9988087223187149,0.98633400251937,0.04770473324722394,0.16583649830326624,-0.5796061174754736,-0.9859713421241245,0.9279102525934659,-0.16799267478006044,0.3738180320352214,-0.3910106042707499,-0.9270927667165039,0.8261565444278125,0.9826950132582143,0.5643436537626695,-0.18415634987096194,-0.824922406619659,0.6858243978091934,0.9995437427036181,0.7285165254455317,0.0312973212581823,-0.6842312377161855,0.5134668021411465,0.9697174962996866,-0.8955841046387887,0.2452895238677765,-0.5115890144152524,0.3171322162069721,0.8946090488406618,-0.7790984905018874,0.4478276178541144,-0.3150574865521901,0.10598873507380509,0.7777256855222358,-0.6262318740387959,-0.9940398655833734,-0.10381394564985844,-0.11010402585425157,0.6245254247652132,-0.44412255778371357,-0.9474109208048113,0.11227732046850523,-0.3210553382112219,0.44216214905162016,-0.2412743696082991,-0.8565414090968305,-0.9707201790956366,-0.5170145601602467,0.23915154521544574,-0.027159565582666422,-0.7256745987459581,-0.9996602104050577,-0.6888311247364568,0.02497345353419761,0.18822348915925857,-0.5609214831501266,-0.9819198272565869,0.9191908476033012,-0.19037080556002464,0.39481720689125643,-0.36997542015152335,-0.9183274395733086,0.8131274559982522,-0.39682545595348256,0.582974429241165,-0.1617528808341239,-0.8118525753833712,0.6690940359195184,0.9985981692281483,0.7439089136126322,0.05402291651885893,-0.6674672149036525,0.49381641247755276,0.9639116769694611,0.8701056180415655,0.26727604456173426,-0.4919136175525949,0.2954793988941898,0.884214093828699,-0.7646381683846751,0.46804837522471554,-0.29338948350734223,0.08334459616149106,0.7632270005725863,-0.6083371585076696,0.64696458726417,-0.08116515158969423,-0.13268208928410227,0.6066000445497581,-0.42362906551012264,-0.9398870354576878,0.13484929108389684,-0.34251301455593486,0.4216471221685363,-0.21913907047367265,-0.8445817088781782,0.34456677331870184,-0.5363498557277167,0.21700484713234636,-0.004416095743569273,-0.7098375571822693,-0.9999944798961788,-0.7051411531245235,0.0022292526961526517,0.2105130942359257,-0.5419466311903025,-0.9773602725687305,-0.8410049808305731,-0.2126504395511819,0.5401074751427981,-0.3487488128216043,-0.9090869749550935,0.7996776599761019,-0.4176001470401155,0.34669842401525724,-0.13926572176248472,-0.7983626961705845,0.6520174885222806,-0.6030494805633688,0.13709984572991094,0.07672056062503244,-0.6503578482916407,0.4739105249672901,0.9576071351350378,-0.0789007855272068,0.28912427812685987,-0.47198370733870787,0.27367370219496967,0.8733616513957853,-0.2912170435031564,0.4880269669868331,-0.2715696823865751,0.06065733522181485,0.7483334262465641,0.9982243762649935,0.6641406112810109,-0.05847436313458539,-0.15519150374391666,0.588360812867937,0.987714123542141,0.8092413587226137,0.15735149143117627,-0.36379347658483346,0.4009139374254742,0.9310812941947988,-0.8321850268126252,0.36582961647932666,-0.5554076468831479,0.19474587195646897,0.8309704307568604,-0.6936332496412612,0.5572248588234558,-0.7210863454284329,-0.020516101544754497,0.6920563382754594,-0.5226913790781549,-0.9722950371486193,-0.8530929930966634,-0.23482004939566098,0.5208257882991468,-0.3273417648087658,-0.8993761538265096,-0.9452633703258216,-0.43815877414904053,0.32527461076848624,-0.11670650738623023,-0.7844597485692666,0.6346035909274823,-0.621037113500713,0.11453431849137598,0.09937850994273874,-0.6329119901706304,0.4537594388050924,-0.7749153290601225,-0.10155430054834823,0.3108229204094469,-0.45180959539753757,0.251726408254682,0.8620573365348668,-0.3129007113954933,0.5077530563289604,-0.24960937263280766,0.037938690516548315,0.7330526683961283,-0.5096358225829346,0.6809730126644598,-0.03575332037142052,-0.17762062298869566,0.5698171665960904,0.9839042332587404,0.8223940615962765,0.17977227899788586,-0.38488571390602483,0.3799733220561236,0.9225428430231591,0.9254123660320729,0.38690318144486424,-0.5741780732321117,0.1723861363569295,0.8181021326153429,-0.677070060140919,0.575967144068755,-0.7366584516949726,-0.043250840869603215,0.6754590948348134,-0.5031656893733059,0.7381355828742439,-0.8647396198250578,-0.25686816466146806,0.5012746291090168,-0.30576535199978,-0.8892000005120326,-0.9524406633573684,-0.4584907003617104,0.3036825022594933,-0.0940869097165574,-0.7701509258866562,-0.9956662696868155,-0.6387034253130568,0.09190953183779359,0.12198504137587506,-0.6151386669299247,0.4333735800501031,-0.7890910754050088,-0.1241552719430438,0.33236074465348087,-0.4314017197016365,0.22964887248031657,-0.9026311066145365,-0.33442248621185566,0.527216437082929,-0.22751991638733882,0.015200416545247907,0.7173926331998253,-0.529073413968591,0.6974530824242948,-0.013013779040497778,-0.1999578423177349,0.5509787001129636,-0.6990185807220965,0.8351212623875015,0.20210005339408482,-0.40577881351402584,0.3588361106176187,0.913527073350359,0.9337923849055084,0.4077765648708038,-0.5926514230611208,0.1499372091357228,0.8048105530114097,0.9888588754782764,0.5944114271388665,-0.7518494150035571,-0.065963202451571,0.658512372640763,-0.4833796645582737,0.7532894861566466,-0.8759388351163025,-0.27878337777722395,0.4814641132326952,-0.28403073790981626,0.8769917273769807,-0.9591251689229281,-0.47858540605335215,0.2819332701243149,-0.07141863200664104,-0.7554436314274865,-0.9975239239739918,-0.6560392755495918,0.06923719170708983,0.14452845843166418,-0.5970470743874459,-0.989342021199432,-0.8028585504460309,-0.146692006095249,0.3537266073092999,-0.4107706391716149,0.20745251766525888,-0.9121873165717976,-0.35577123270646555,0.5464070390045227,-0.20531274261113905,-0.007545722036457605,-0.9789203271022203,-0.5482372657324301,0.7135722938647031,0.009732495546829282,-0.22219160457883175,0.5318551603356281,-0.7151026571410979,0.8474163761138659,0.22432326235432593,-0.4264619654360913,0.33751323938479905,-0.8485754136645978,0.9416892648278059,0.4284389669854423,-0.33545390139542397,0.12741070524208933,0.7911025689339207,0.9919887666697227,0.6125481650650098,-0.12524136952962392,-0.08864143504195424,0.6412249398324776,-0.46334354181150506,0.76805364167699,0.09081946856669817,-0.3005543499343779,0.4614044905201668,-0.26214916790650067,0.887693869331179,0.30263937520509904,-0.4984324943357622,0.26003816729387214,-0.048713402696436266,-0.7403454746635564,0.5003271484257586,-0.6730356947384786,0.046529028641093574,0.16699709727235426,-0.5786465730318705,0.6746515043472682,-0.8162106309686946,-0.1691528426249089,0.37490945379920493,-0.3899270282130144,-0.9266509429641191,-0.9212715659192979,-0.37693590515743,0.565314932983766,-0.1829993411715701,-0.8242565341262289,-0.9833125446110055,-0.5671174626048583,0.7293223069959456,0.03247373459545795,-0.6833724102510188,0.5124564416764815,-0.7308167434495437,0.8592730413523747,0.246430407714733,-0.5105773360273094,0.3160157406918421,-0.8603896000133543,0.9490989199975124,0.44887969717762555,-0.31394019886012847,0.10481827976300555,0.7769852728170794,0.9946054084279793,0.6303679740005389,-0.10264322183411627,-0.11127380505019842,0.6236057408308906,0.9936675228559374,0.7824204105438801,0.11344681195922338,-0.3221698169538432,0.44110613970789825,-0.24013196339162624,0.8979367234480667,0.32423930150096447,-0.5180216964365979,0.23800852217176677,-0.025982969344449217,0.9715227304630821,0.5198910213891155,-0.689683889027601,0.02379679171621978,0.18937933275002333,-0.5599466831795658,0.6912657638615631,-0.8291404086813028,-0.19152616042097356,0.39589832423703647,-0.36888167119343024,0.8303609657243731,-0.9298791545172926,-0.3979055530817353,0.5839303361821896,-0.16059125689759196,-0.8111648001115237,-0.9871960017153113,-0.5857042360777341,0.744694972849421,0.05519817191564506,-0.6665903035950458,-0.9984144666514491,-0.7461527092671696,0.8706851235308254,0.2684100513620865,-0.4908885187044307,0.2943547372241953,-0.8717586256008537,0.9560175167005337,0.4690881795280109,-0.29226406542386485,0.08217162189290698,-0.9566566558681302,0.9967074469172523,0.6478616340760938,-0.07999196711038693,-0.13384860261479226,0.6056638917109056,0.9908548457507199,0.7963823594715527,0.13601545860649134,-0.3436185951140209,0.42057956304893823,0.9387330079117461,0.907714990132279,0.3456714681978257,-0.5373428770123827,0.21585573277302902,-0.0032390925496161432,0.9766607062114526,0.5391859056491584,-0.7059752447344562,0.0010522424645632042,0.2116635844213655,0.999999999151893,0.7075223663404097,-0.8416411937892678,-0.21380038365409568,0.416682359098758,-0.3476454568627399,0.8428201635385763,-0.9380056288476398,-0.418669326900966,0.6022436170944164,-0.13810008360653286,0.9387613932371649,-0.9905686891361775,-0.6039879694585403,0.7596823376938968,0.07789405001076763,-0.6494633068485947,-0.9968758752020618,-0.7611026198511358,0.8816467181018013,0.29025082115183926,-0.47094571841072647,-0.956632664910117,-0.8826766081569184,0.9624414752936769,0.48905395828098863,-0.27043671619669657,0.059482448885764684,-0.9630328812108798,0.9982937945545982,0.6650200941699077,-0.05729932499079325,-0.1563541476618844,-0.9984190998767744,0.9875295058966469,0.8099322646258132,0.1585137316171009,-0.3648895869371941,0.39983538087911075,0.9306512615717255,0.9170236101633873,0.36692478641264414,-0.5563860393924768,0.19359126082684833,0.8303150640805724,0.9812933631792844,0.5582018181408138,-0.7219013328028255,-0.02169285121145246,0.23383832253934775,0.9997403652031949,0.7234129007087144,-0.8537065184563736,-0.2359639877658999,0.4372508048411133,0.9715032098382066,0.8548432909195736,-0.9456467843180255,-0.43921648355481563,0.6202453005314486,-0.11553745810551333,0.9463556782917432,-0.9934288618640181,-0.6219592028460061,0.7742766471507249,0.10054962616058583,0.9936767746357962,-0.9948215057568957,-0.7756587402014191,-0.10272515666302506,0.31194141679200044,-0.45075925343939804,-0.9497596847055905,-0.8931378987785097,-0.3140184036203984,0.5087667032544312,-0.24846944452689054,-0.8603476181848878,-0.9689108387334364,-0.5106481588474504,0.6818344765908078,-0.03457703652129946,-0.1787787959484883,-0.9994392455419514,-0.6834325439686945,0.8230631153616081,0.18092999051057648,-0.3859717869313015,-0.9832975561299944,-0.8243031707204389,0.9258577673135117,0.38798825979758433,-0.5751413307512975,0.1712266258463387,-0.9266819046793381,0.985418304455803,0.5769289201374391,-0.7374539131639213,-0.0444267211277214,-0.9857880396783042,0.9989634711876313,0.7389291452929754,-0.8653301401511977,-0.2580055054317249,0.5002558275752554,0.965860758592105,0.8664241271685822,-0.9527986674373963,-0.45953639205948627,0.30256086668185916,0.8876559402506426,0.953460324217534,-0.9957750400614793,-0.6396086380246077,0.09073743842681269,0.12315317849686064,0.9959734696931956,-0.9922524212351983,-0.7898135390628578,-0.12532309078366224,0.3334706156898433,0.9919783577925786,-0.9423953041584189,-0.9031370848524384,-0.3355314976849428,0.5282162151844716,-0.226373616157802,-0.8485318307983769,-0.9742874872134917,-0.5300718313623587,0.698296081671482,-0.0118368580867252,-0.7150450763173104,-0.9999422869378894,-0.6998597816570024,0.8357681178502934,0.2032526372400874,-0.4068542872841169,-0.9789035002792507,-0.8369668826689471,0.9342128908392097,0.40885099022946275,-0.5935990472061169,-0.9121535603390373,-0.9349907426317305,0.9890333958194898,0.5953575223413246,-0.752624938999752,-0.06713760490724827,-0.9893540117997113,0.9976697190658157,0.7540630720751283,-0.8765060448769622,-0.27991353249375284,-0.9975181276597141,0.9597185763978882,0.8775566804257742,-0.9594575778614736,-0.4796185390080998,0.2808038098573063,0.8769521450519819,0.9600716551105183,-0.9976060098290994,-0.6569271432754122,0.06806295669757138,0.7532353095940858,0.9977548536543734,-0.9891699508669154,-0.8035596928217814,-0.14785618343888018,0.3548272787584118,0.9888466108152738,-0.9345433335578602,-0.9126689928558207,-0.35687098963140856,0.5473924310025459,0.9337629084073322,-0.8362770177940027,-0.9791600448032288,-0.5492212476798809,0.7143963922696397,0.010909444671942116,-0.6989596751052903,-0.9999279637937872,-0.715924915813177,0.8480406985947238,0.2254701221932125,-0.5290035147626794,-0.9740029652388761,-0.8491975526389959,0.9420846578463541,0.4295021834483758,-0.6117496388377962,-0.9025956501654915,-0.9428158216094076,0.9921367668423161,0.6134780898968815,-0.7674065609065012,-0.789040474650064,-0.9924080976953451,0.9958597782178513,0.7688068508461994,-0.8872284502831418,-0.30167673386145677,-0.9956586060189987,0.9530798411862299,0.8882351907704314,-0.9656200703072906,-0.49945253401027584,-0.9524155599290969,0.8657946197240038,0.9661862503051122,-0.9989208238333731,-0.673905758100779,0.04535325957565631,0.7380800090918784,0.9990200048412433,-0.9855756895049551,-0.8168900892952073,-0.17031277613271412,0.5758998066827901,0.9852032401386238,-0.9262078354695356,-0.9217286910328301,-0.37802583852615396,0.5662854290419677,0.9253811477294087,-0.8235895197433921,-0.983525990468635,-0.5680864999992423,0.7301270781747312,0.8223471968727863,-0.6825126360712265,-0.9993962835203591,-0.7316196344267631,0.8598745078303427,0.2475709501676448,-0.5095649503075743,-0.9685984865182599,-0.8609888525504286,0.9494689955267738,0.44993115464258926,0.9680524525558042,-0.8925707420566746,-0.9501530929603231,0.9947268118574921,0.6312812473239237,-0.7817911309557644,-0.7748632630827884,-0.9949487171982646,0.9935345850969982,0.7831528532576107,-0.8974918086572202,-0.6209725511539336,-0.9932839361907637,0.9459479878015549,0.8984541332010967,-0.9712829563357631,-0.5190281150680617,-0.9452364890201638,0.854189137107836,0.9718009461440011,0.5208961029552118,-0.6905356978604695,-0.8530500127985775,0.7225428301258787,0.9997682686716652,0.6921157943472878,-0.8297978314106442,-0.19268124994985095,0.5571564598476264,0.9810501308222155,0.8310162518669927,-0.9303114919463598,-0.3989850989688185,0.3657529547540946,0.9165206000273629,0.9311113406677839,-0.9873830652938702,-0.5866578275445298,0.7454800004179544,0.8091929654136761,0.9877269923194222,-0.9983475212060017,-0.7469358171382336,0.8712634228105158,0.6640790284056834,0.998219466422526,-0.9626928603644294,-0.872334681650697,0.9563620832655018,0.4701273339768001,0.9620988034541259,-0.8820840228439073,-0.9569987604213656,0.9968021907902301,0.6487577833684878,0.8810517040554083,-0.7602851416020752,-0.9969745558061652,0.9906953427451569,0.7970936567680458,0.13718143769914332,-0.6029837714677608,-0.9903953468158813,0.9383267062248691,0.9082082204941775,0.3467756841986254,-0.4175253014803947,-0.9375683580447055,0.8421417018151987,0.9769128376149979,0.5401767957770409,-0.7068083583167726,-0.8409604134241433,0.7066318115454826,0.9999992579981233,0.7083536597111583,-0.8422762407745992,-0.7050827447186214,0.5381248433799599,0.9763894316615536,0.8434530418430509,-0.9384129549032771,-0.41973792675541133,0.34448944611662785,0.9071858496989608,0.9391663034119876,-0.9907292736500178,-0.6049256216148623,0.13476767274898127,0.7956200620453729,0.991023991025056,-0.9967822194744635,-0.7618655394404171,0.8822015509744051,0.6469017761121518,0.9966045435103603,-0.9562891423152878,-0.8832291696713565,0.9627603546175403,0.46797558282386464,0.9556473698188556,-0.8711409182969891,-0.963349282082523,0.9983618298510916,0.6658986557686851,0.8700650176572956,-0.7453136528463474,-0.9984845653614952,0.987343520170422,0.8106220484838305,0.7438538646223881,-0.584683011354665,-0.9869943324343191,0.9302199396645847,0.917492405939527,0.3680194480242083,-0.3967498474534281,-0.9294151344507505,0.829658547121652,0.9815192798540795,0.559178004149479,-0.19028994104262675,-0.8284357058407986,0.6903551856226092,0.9997128533080335,0.7242250268579521,-0.8543188611279406,-0.6887714104152562,0.5188148041315828,0.971223554076286,0.8554534339382123,-0.9460288882520125,-0.516944051410437,0.32304770056872434,0.897381726491752,0.9467353467697095,-0.9935628842276115,-0.6228804305558792,0.11219547068468655,0.7816355093120774,0.9938082394670164,-0.9947011882040956,-0.776401076778594,-0.10389587046670606,0.629389820462015,0.9944739829879138,-0.949390645618696,-0.8936666798653088,0.9686604991531191,0.44775396746523677,0.9487014895856308,-0.8597470903169365,-0.9692013722194481,0.9994049220915594,0.24520966921987392,0.8586281644910146,-0.729956542980054,-0.9994779645937659,0.9834808515870249,0.8237310288908439,0.728460097036473,-0.566079739525453,-0.983082652711874,0.9216318825163259,0.9263018859515829,0.38907280064812466,-0.37576911727700757,-0.9207810366705322,0.8167461317415347,0.9856178895138255,0.5778898969537123,-0.16791147459863087,-0.8154823702621146,0.6737213737923692,0.9989092027855787,0.73972168403118,-0.8659194616863309,-0.6721037096409482,0.49923633300867437,0.9655551708625488,0.8670112192168036,-0.9531553515512972,-0.49734030508562693,0.30143881194946653,0.8871133030041852,0.9538145545602995,-0.9958824309324055,-0.6405129646499731,0.08956521931210312,0.7672465427430666,0.99607829709075,-0.9921055041088245,-0.7905349085471383,-0.7658421644572478,0.6115522220430675,0.9918288871952707,-0.9420009395182162,-0.9036418119232251,0.9740594641704936,0.4273006867110607,0.9412647565139907,-0.847908434006546,-0.9745520029934731,0.9999309278215495,0.2230957982834736,0.8467470619203527,-0.7142217576858467,-0.9999542395237772,-0.7007000130363904,0.8364138154760277,0.7126894282753959,-0.5471835812087991,-0.9786623315297308,-0.8376104266916728,0.9346321025547161,0.5453518485593903,-0.3545939662634438,-0.9116705319378948,-0.9354075481850356,0.9892065459965482,0.5963027927611818,-0.14544613169790543,-0.8021071086713866,-0.9895246156142028,0.9975887222350391,0.7548356133471945,0.07049349635734711,-0.6550882661707466,-0.997434563171668,0.9593872148100766,0.87812041774544,-0.9597886576089251,-0.47747923767184464,-0.9587680257206784,0.8763858920610745,0.960400264041287,-0.9976867136439229,-0.2775737043430379,-0.875330586773588,0.7524606071090716,0.9978329893811536,-0.9889965101810664,-0.8042597219806354,-0.751018464456131,0.5933982099288487,0.9886706246901827,-0.9341238474064059,-0.913149404767635,-0.591636572609549,0.4066263229742694,0.9333410183279841,-0.8356310746203014,-0.9793984060181966,-0.5502044687599335,0.20086649883027624,0.8344278571612509,-0.6981174380535293,-0.999913143729547,-0.716746182673795,-0.014273043860585685,0.6965500179948653,-0.5280043131712066,-0.9737356559373175,-0.8498185151717773,0.9424787457415015,0.5261458832010109,-0.3332353503173,-0.9020883339769726,-0.9432074831732026,0.9922833925514785,0.3311726922043644,-0.12290553578307156,-0.7883168413540665,-0.9925521691515694,0.9957520948656576,0.7695589949435988,0.09316351023182001,-0.6377338836998241,-0.9955483597663953,0.952722877184793,0.8887752816870094,0.3048821667596565,-0.45737112517415723,-0.9520561440576972,0.8652050439647732,0.9664890678034634,-0.9989747988363922,-0.25565083589756543,-0.8641064467675444,0.7372853525703951,0.9990714084702617,-0.9853758149968705,-0.04199260325582824,-0.7358061917068658,0.5749371769035725,0.9850008295399852,-0.9257634448466154,-0.9221845392232387,-0.573146523685615,0.38574157305489354,0.9249343747253792,-0.8229213643952017,-0.9837380737918312,-0.38372304432900706,0.17853327217534498,0.8216769241012699,-0.6816519163679027,-0.9993546984738092,-0.7324215118497361,-0.03701186861532881,0.6800502166353869,-0.5085518586585629,-0.9683051749689983,-0.8615869123107287],"x":[-1.8110048645192806e18,-4.208856674911989e297,-8.417713349823978e297,-1.2626570024735968e298,-1.6835426699647956e298,-2.1044283374559944e298,-2.5253140049471936e298,-2.9461996724383924e298,-3.367085339929591e298,-3.78797100742079e298,-4.208856674911989e298,-4.629742342403187e298,-5.050628009894387e298,-5.4715136773855865e298,-5.892399344876785e298,-6.313285012367983e298,-6.734170679859182e298,-7.155056347350382e298,-7.57594201484158e298,-7.996827682332778e298,-8.417713349823977e298,-8.838599017315177e298,-9.259484684806374e298,-9.680370352297573e298,-1.0101256019788774e299,-1.0522141687279974e299,-1.0943027354771173e299,-1.136391302226237e299,-1.178479868975357e299,-1.2205684357244769e299,-1.2626570024735966e299,-1.3047455692227165e299,-1.3468341359718365e299,-1.3889227027209564e299,-1.4310112694700763e299,-1.473099836219196e299,-1.515188402968316e299,-1.557276969717436e299,-1.5993655364665556e299,-1.6414541032156758e299,-1.6835426699647955e299,-1.7256312367139154e299,-1.7677198034630353e299,-1.8098083702121553e299,-1.851896936961275e299,-1.893985503710395e299,-1.9360740704595147e299,-1.978162637208635e299,-2.020251203957755e299,-2.0623397707068744e299,-2.1044283374559947e299,-2.1465169042051143e299,-2.1886054709542346e299,-2.230694037703354e299,-2.272782604452474e299,-2.314871171201594e299,-2.356959737950714e299,-2.3990483046998335e299,-2.4411368714489538e299,-2.4832254381980733e299,-2.5253140049471932e299,-2.567402571696313e299,-2.609491138445433e299,-2.6515797051945534e299,-2.693668271943673e299,-2.735756838692793e299,-2.7778454054419128e299,-2.8199339721910327e299,-2.8620225389401526e299,-2.9041111056892726e299,-2.946199672438392e299,-2.9882882391875124e299,-3.030376805936632e299,-3.072465372685752e299,-3.114553939434872e299,-3.1566425061839917e299,-3.1987310729331113e299,-3.2408196396822316e299,-3.2829082064313515e299,-3.3249967731804714e299,-3.367085339929591e299,-3.409173906678711e299,-3.451262473427831e299,-3.4933510401769515e299,-3.535439606926071e299,-3.5775281736751906e299,-3.6196167404243105e299,-3.6617053071734305e299,-3.70379387392255e299,-3.74588244067167e299,-3.78797100742079e299,-3.83005957416991e299,-3.872148140919029e299,-3.914236707668149e299,-3.95632527441727e299,-3.99841384116639e299,-4.04050240791551e299,-4.082590974664629e299,-4.124679541413749e299,-4.1667681081628696e299,-4.2088566749119895e299,-4.250945241661109e299,-4.2930338084102286e299,-4.3351223751593485e299,-4.377210941908469e299,-4.419299508657588e299,-4.461388075406708e299,-4.503476642155828e299,-4.545565208904948e299,-4.587653775654068e299,-4.629742342403188e299,-4.671830909152308e299,-4.713919475901428e299,-4.756008042650548e299,-4.798096609399667e299,-4.8401851761487876e299,-4.8822737428979075e299,-4.9243623096470275e299,-4.966450876396147e299,-5.0085394431452666e299,-5.0506280098943865e299,-5.092716576643507e299,-5.134805143392626e299,-5.176893710141746e299,-5.218982276890866e299,-5.261070843639986e299,-5.303159410389107e299,-5.345247977138226e299,-5.387336543887346e299,-5.429425110636466e299,-5.471513677385586e299,-5.513602244134706e299,-5.5556908108838256e299,-5.5977793776329455e299,-5.6398679443820654e299,-5.6819565111311846e299,-5.724045077880305e299,-5.766133644629425e299,-5.808222211378545e299,-5.850310778127665e299,-5.892399344876784e299,-5.934487911625904e299,-5.976576478375025e299,-6.018665045124145e299,-6.060753611873264e299,-6.102842178622384e299,-6.144930745371504e299,-6.1870193121206245e299,-6.229107878869744e299,-6.2711964456188636e299,-6.3132850123679835e299,-6.3553735791171034e299,-6.3974621458662226e299,-6.439550712615343e299,-6.481639279364463e299,-6.523727846113583e299,-6.565816412862703e299,-6.607904979611822e299,-6.649993546360943e299,-6.692082113110063e299,-6.734170679859182e299,-6.776259246608303e299,-6.818347813357422e299,-6.860436380106541e299,-6.902524946855662e299,-6.944613513604781e299,-6.986702080353903e299,-7.028790647103022e299,-7.070879213852141e299,-7.112967780601262e299,-7.155056347350381e299,-7.197144914099502e299,-7.239233480848621e299,-7.28132204759774e299,-7.323410614346861e299,-7.36549918109598e299,-7.4075877478451e299,-7.449676314594221e299,-7.49176488134334e299,-7.533853448092461e299,-7.57594201484158e299,-7.6180305815907e299,-7.66011914833982e299,-7.70220771508894e299,-7.744296281838059e299,-7.78638484858718e299,-7.828473415336299e299,-7.87056198208542e299,-7.91265054883454e299,-7.954739115583659e299,-7.99682768233278e299,-8.038916249081899e299,-8.08100481583102e299,-8.123093382580139e299,-8.165181949329258e299,-8.207270516078379e299,-8.249359082827498e299,-8.291447649576617e299,-8.333536216325739e299,-8.375624783074858e299,-8.417713349823979e299,-8.459801916573098e299,-8.501890483322217e299,-8.543979050071338e299,-8.586067616820457e299,-8.628156183569578e299,-8.670244750318697e299,-8.712333317067816e299,-8.754421883816938e299,-8.796510450566058e299,-8.838599017315177e299,-8.880687584064297e299,-8.922776150813417e299,-8.964864717562537e299,-9.006953284311656e299,-9.049041851060776e299,-9.091130417809896e299,-9.133218984559015e299,-9.175307551308136e299,-9.217396118057257e299,-9.259484684806376e299,-9.301573251555497e299,-9.343661818304616e299,-9.385750385053735e299,-9.427838951802856e299,-9.469927518551975e299,-9.512016085301096e299,-9.554104652050215e299,-9.596193218799334e299,-9.638281785548455e299,-9.680370352297575e299,-9.722458919046696e299,-9.764547485795815e299,-9.806636052544934e299,-9.848724619294055e299,-9.890813186043174e299,-9.932901752792293e299,-9.974990319541414e299,-1.0017078886290533e300,-1.0059167453039654e300,-1.0101256019788773e300,-1.0143344586537894e300,-1.0185433153287014e300,-1.0227521720036133e300,-1.0269610286785253e300,-1.0311698853534373e300,-1.0353787420283493e300,-1.0395875987032613e300,-1.0437964553781732e300,-1.0480053120530852e300,-1.0522141687279972e300,-1.0564230254029093e300,-1.0606318820778214e300,-1.0648407387527333e300,-1.0690495954276452e300,-1.0732584521025573e300,-1.0774673087774692e300,-1.0816761654523811e300,-1.0858850221272932e300,-1.0900938788022051e300,-1.0943027354771171e300,-1.098511592152029e300,-1.1027204488269411e300,-1.1069293055018532e300,-1.1111381621767651e300,-1.1153470188516772e300,-1.1195558755265891e300,-1.123764732201501e300,-1.1279735888764131e300,-1.132182445551325e300,-1.1363913022262369e300,-1.140600158901149e300,-1.144809015576061e300,-1.1490178722509731e300,-1.153226728925885e300,-1.157435585600797e300,-1.161644442275709e300,-1.165853298950621e300,-1.170062155625533e300,-1.174271012300445e300,-1.1784798689753568e300,-1.1826887256502689e300,-1.1868975823251808e300,-1.1911064390000929e300,-1.195315295675005e300,-1.1995241523499169e300,-1.203733009024829e300,-1.2079418656997409e300,-1.2121507223746528e300,-1.2163595790495649e300,-1.2205684357244768e300,-1.2247772923993887e300,-1.2289861490743008e300,-1.2331950057492127e300,-1.2374038624241249e300,-1.2416127190990368e300,-1.2458215757739487e300,-1.2500304324488608e300,-1.2542392891237727e300,-1.2584481457986848e300,-1.2626570024735967e300,-1.2668658591485086e300,-1.2710747158234207e300,-1.2752835724983326e300,-1.2794924291732445e300,-1.2837012858481567e300,-1.2879101425230687e300,-1.2921189991979807e300,-1.2963278558728926e300,-1.3005367125478046e300,-1.3047455692227166e300,-1.3089544258976285e300,-1.3131632825725406e300,-1.3173721392474525e300,-1.3215809959223644e300,-1.3257898525972767e300,-1.3299987092721886e300,-1.3342075659471005e300,-1.3384164226220126e300,-1.3426252792969246e300,-1.3468341359718364e300,-1.3510429926467485e300,-1.3552518493216605e300,-1.3594607059965723e300,-1.3636695626714844e300,-1.3678784193463964e300,-1.3720872760213082e300,-1.3762961326962206e300,-1.3805049893711323e300,-1.3847138460460444e300,-1.3889227027209562e300,-1.3931315593958682e300,-1.3973404160707806e300,-1.4015492727456924e300,-1.4057581294206044e300,-1.4099669860955162e300,-1.4141758427704283e300,-1.4183846994453403e300,-1.4225935561202524e300,-1.4268024127951642e300,-1.4310112694700762e300,-1.435220126144988e300,-1.4394289828199004e300,-1.4436378394948124e300,-1.4478466961697242e300,-1.4520555528446363e300,-1.456264409519548e300,-1.46047326619446e300,-1.4646821228693722e300,-1.4688909795442843e300,-1.473099836219196e300,-1.477308692894108e300,-1.48151754956902e300,-1.4857264062439322e300,-1.4899352629188443e300,-1.494144119593756e300,-1.498352976268668e300,-1.50256183294358e300,-1.5067706896184923e300,-1.510979546293404e300,-1.515188402968316e300,-1.519397259643228e300,-1.52360611631814e300,-1.5278149729930523e300,-1.532023829667964e300,-1.536232686342876e300,-1.540441543017788e300,-1.5446503996927e300,-1.5488592563676117e300,-1.553068113042524e300,-1.557276969717436e300,-1.561485826392348e300,-1.5656946830672597e300,-1.5699035397421718e300,-1.574112396417084e300,-1.578321253091996e300,-1.582530109766908e300,-1.5867389664418197e300,-1.5909478231167318e300,-1.595156679791644e300,-1.599365536466556e300,-1.6035743931414677e300,-1.6077832498163798e300,-1.6119921064912916e300,-1.616200963166204e300,-1.620409819841116e300,-1.6246186765160278e300,-1.6288275331909398e300,-1.6330363898658516e300,-1.637245246540764e300,-1.6414541032156757e300,-1.6456629598905878e300,-1.6498718165654996e300,-1.6540806732404116e300,-1.6582895299153234e300,-1.6624983865902358e300,-1.6667072432651478e300,-1.6709160999400596e300,-1.6751249566149717e300,-1.6793338132898834e300,-1.6835426699647958e300,-1.6877515266397076e300,-1.6919603833146196e300,-1.6961692399895314e300,-1.7003780966644435e300,-1.7045869533393555e300,-1.7087958100142676e300,-1.7130046666891797e300,-1.7172135233640914e300,-1.7214223800390035e300,-1.7256312367139156e300,-1.7298400933888276e300,-1.7340489500637394e300,-1.7382578067386515e300,-1.7424666634135632e300,-1.7466755200884753e300,-1.7508843767633877e300,-1.7550932334382994e300,-1.7593020901132115e300,-1.7635109467881233e300,-1.7677198034630353e300,-1.7719286601379474e300,-1.7761375168128595e300,-1.7803463734877712e300,-1.7845552301626833e300,-1.788764086837595e300,-1.7929729435125074e300,-1.7971818001874195e300,-1.8013906568623313e300,-1.8055995135372434e300,-1.809808370212155e300,-1.8140172268870675e300,-1.8182260835619793e300,-1.8224349402368913e300,-1.826643796911803e300,-1.8308526535867152e300,-1.8350615102616272e300,-1.8392703669365393e300,-1.8434792236114514e300,-1.847688080286363e300,-1.8518969369612752e300,-1.856105793636187e300,-1.8603146503110993e300,-1.864523506986011e300,-1.8687323636609232e300,-1.872941220335835e300,-1.877150077010747e300,-1.881358933685659e300,-1.885567790360571e300,-1.8897766470354832e300,-1.893985503710395e300,-1.898194360385307e300,-1.902403217060219e300,-1.9066120737351312e300,-1.910820930410043e300,-1.915029787084955e300,-1.9192386437598668e300,-1.923447500434779e300,-1.927656357109691e300,-1.931865213784603e300,-1.936074070459515e300,-1.9402829271344268e300,-1.9444917838093392e300,-1.948700640484251e300,-1.952909497159163e300,-1.9571183538340748e300,-1.9613272105089869e300,-1.9655360671838986e300,-1.969744923858811e300,-1.9739537805337228e300,-1.9781626372086348e300,-1.982371493883547e300,-1.9865803505584587e300,-1.990789207233371e300,-1.9949980639082828e300,-1.999206920583195e300,-2.0034157772581066e300,-2.0076246339330187e300,-2.0118334906079308e300,-2.0160423472828428e300,-2.0202512039577546e300,-2.0244600606326667e300,-2.0286689173075787e300,-2.0328777739824908e300,-2.037086630657403e300,-2.0412954873323146e300,-2.0455043440072267e300,-2.0497132006821385e300,-2.0539220573570505e300,-2.0581309140319626e300,-2.0623397707068747e300,-2.0665486273817867e300,-2.0707574840566985e300,-2.0749663407316106e300,-2.0791751974065226e300,-2.0833840540814347e300,-2.0875929107563465e300,-2.0918017674312585e300,-2.0960106241061703e300,-2.1002194807810827e300,-2.1044283374559944e300,-2.1086371941309065e300,-2.1128460508058186e300,-2.1170549074807303e300,-2.1212637641556427e300,-2.1254726208305545e300,-2.1296814775054665e300,-2.1338903341803783e300,-2.1380991908552904e300,-2.1423080475302022e300,-2.1465169042051145e300,-2.1507257608800263e300,-2.1549346175549384e300,-2.1591434742298504e300,-2.1633523309047622e300,-2.1675611875796746e300,-2.1717700442545863e300,-2.1759789009294984e300,-2.1801877576044102e300,-2.1843966142793222e300,-2.1886054709542343e300,-2.1928143276291464e300,-2.197023184304058e300,-2.2012320409789702e300,-2.2054408976538823e300,-2.2096497543287943e300,-2.2138586110037064e300,-2.2180674676786182e300,-2.2222763243535302e300,-2.226485181028442e300,-2.2306940377033544e300,-2.234902894378266e300,-2.2391117510531782e300,-2.24332060772809e300,-2.247529464403002e300,-2.251738321077914e300,-2.2559471777528262e300,-2.2601560344277382e300,-2.26436489110265e300,-2.268573747777562e300,-2.2727826044524738e300,-2.2769914611273862e300,-2.281200317802298e300,-2.28540917447721e300,-2.289618031152122e300,-2.293826887827034e300,-2.2980357445019462e300,-2.302244601176858e300,-2.30645345785177e300,-2.310662314526682e300,-2.314871171201594e300,-2.319080027876506e300,-2.323288884551418e300,-2.3274977412263298e300,-2.331706597901242e300,-2.335915454576154e300,-2.340124311251066e300,-2.344333167925978e300,-2.34854202460089e300,-2.352750881275802e300,-2.3569597379507137e300,-2.3611685946256258e300,-2.3653774513005378e300,-2.36958630797545e300,-2.3737951646503617e300,-2.3780040213252737e300,-2.3822128780001858e300,-2.386421734675098e300,-2.39063059135001e300,-2.3948394480249217e300,-2.3990483046998338e300,-2.4032571613747455e300,-2.407466018049658e300,-2.4116748747245697e300,-2.4158837313994817e300,-2.4200925880743935e300,-2.4243014447493056e300,-2.428510301424218e300,-2.4327191580991297e300,-2.4369280147740418e300,-2.4411368714489535e300,-2.4453457281238656e300,-2.4495545847987774e300,-2.4537634414736897e300,-2.4579722981486015e300,-2.4621811548235136e300,-2.4663900114984254e300,-2.4705988681733374e300,-2.4748077248482498e300,-2.4790165815231616e300,-2.4832254381980736e300,-2.4874342948729854e300,-2.4916431515478975e300,-2.4958520082228095e300,-2.5000608648977216e300,-2.5042697215726334e300,-2.5084785782475454e300,-2.5126874349224572e300,-2.5168962915973696e300,-2.5211051482722816e300,-2.5253140049471934e300,-2.5295228616221055e300,-2.5337317182970172e300,-2.5379405749719296e300,-2.5421494316468414e300,-2.5463582883217534e300,-2.5505671449966652e300,-2.5547760016715773e300,-2.558984858346489e300,-2.5631937150214014e300,-2.5674025716963135e300,-2.5716114283712252e300,-2.5758202850461373e300,-2.580029141721049e300,-2.5842379983959614e300,-2.5884468550708732e300,-2.5926557117457853e300,-2.596864568420697e300,-2.601073425095609e300,-2.6052822817705215e300,-2.6094911384454332e300,-2.6136999951203453e300,-2.617908851795257e300,-2.622117708470169e300,-2.6263265651450812e300,-2.6305354218199933e300,-2.634744278494905e300,-2.638953135169817e300,-2.643161991844729e300,-2.647370848519641e300,-2.6515797051945533e300,-2.655788561869465e300,-2.6599974185443772e300,-2.664206275219289e300,-2.668415131894201e300,-2.672623988569113e300,-2.676832845244025e300,-2.681041701918937e300,-2.685250558593849e300,-2.689459415268761e300,-2.693668271943673e300,-2.697877128618585e300,-2.702085985293497e300,-2.706294841968409e300,-2.710503698643321e300,-2.714712555318233e300,-2.7189214119931446e300,-2.7231302686680567e300,-2.727339125342969e300,-2.731547982017881e300,-2.735756838692793e300,-2.739965695367705e300,-2.7441745520426164e300,-2.748383408717529e300,-2.752592265392441e300,-2.7568011220673526e300,-2.7610099787422647e300,-2.765218835417177e300,-2.769427692092089e300,-2.773636548767001e300,-2.7778454054419123e300,-2.782054262116825e300,-2.7862631187917365e300,-2.7904719754666485e300,-2.794680832141561e300,-2.7988896888164727e300,-2.803098545491385e300,-2.807307402166296e300,-2.811516258841209e300,-2.815725115516121e300,-2.8199339721910324e300,-2.8241428288659445e300,-2.8283516855408566e300,-2.8325605422157686e300,-2.8367693988906807e300,-2.840978255565593e300,-2.845187112240505e300,-2.849395968915416e300,-2.8536048255903284e300,-2.857813682265241e300,-2.8620225389401525e300,-2.8662313956150646e300,-2.870440252289976e300,-2.8746491089648887e300,-2.878857965639801e300,-2.883066822314712e300,-2.887275678989625e300,-2.8914845356645364e300,-2.8956933923394484e300,-2.89990224901436e300,-2.9041111056892726e300,-2.9083199623641846e300,-2.912528819039096e300,-2.916737675714008e300,-2.92094653238892e300,-2.9251553890638323e300,-2.9293642457387444e300,-2.9335731024136564e300,-2.9377819590885685e300,-2.94199081576348e300,-2.946199672438392e300,-2.950408529113305e300,-2.954617385788216e300,-2.958826242463128e300,-2.96303509913804e300,-2.9672439558129524e300,-2.9714528124878644e300,-2.975661669162776e300,-2.9798705258376886e300,-2.9840793825126e300,-2.988288239187512e300,-2.992497095862424e300,-2.996705952537336e300,-3.0009148092122483e300,-3.00512366588716e300,-3.0093325225620725e300,-3.0135413792369845e300,-3.017750235911896e300,-3.021959092586808e300,-3.02616794926172e300,-3.030376805936632e300,-3.034585662611544e300,-3.038794519286456e300,-3.0430033759613684e300,-3.04721223263628e300,-3.051421089311192e300,-3.0556299459861046e300,-3.059838802661016e300,-3.064047659335928e300,-3.0682565160108396e300,-3.072465372685752e300,-3.0766742293606643e300,-3.080883086035576e300,-3.085091942710488e300,-3.0893007993854e300,-3.093509656060312e300,-3.0977185127352235e300,-3.101927369410136e300,-3.106136226085048e300,-3.1103450827599597e300,-3.114553939434872e300,-3.118762796109784e300,-3.122971652784696e300,-3.127180509459608e300,-3.1313893661345194e300,-3.135598222809432e300,-3.1398070794843435e300,-3.1440159361592556e300,-3.148224792834168e300,-3.15243364950908e300,-3.156642506183992e300,-3.160851362858903e300,-3.165060219533816e300,-3.169269076208728e300,-3.1734779328836395e300,-3.1776867895585516e300,-3.1818956462334636e300,-3.1861045029083757e300,-3.190313359583288e300,-3.1945222162582e300,-3.198731072933112e300,-3.2029399296080234e300,-3.2071487862829354e300,-3.211357642957848e300,-3.2155664996327596e300,-3.2197753563076716e300,-3.223984212982583e300,-3.228193069657496e300,-3.232401926332408e300,-3.2366107830073193e300,-3.240819639682232e300,-3.2450284963571434e300,-3.2492373530320555e300,-3.2534462097069676e300,-3.2576550663818796e300,-3.261863923056792e300,-3.266072779731703e300,-3.270281636406615e300,-3.274490493081528e300,-3.2786993497564394e300,-3.2829082064313514e300,-3.2871170631062635e300,-3.2913259197811756e300,-3.295534776456087e300,-3.299743633130999e300,-3.303952489805912e300,-3.308161346480823e300,-3.3123702031557353e300,-3.316579059830647e300,-3.3207879165055594e300,-3.3249967731804715e300,-3.329205629855383e300,-3.3334144865302956e300,-3.337623343205207e300,-3.341832199880119e300,-3.346041056555031e300,-3.3502499132299433e300,-3.3544587699048554e300,-3.358667626579767e300,-3.362876483254679e300,-3.3670853399295916e300,-3.371294196604503e300,-3.375503053279415e300,-3.379711909954327e300,-3.383920766629239e300,-3.3881296233041513e300,-3.392338479979063e300,-3.3965473366539755e300,-3.400756193328887e300,-3.404965050003799e300,-3.409173906678711e300,-3.413382763353623e300,-3.417591620028535e300,-3.4218004767034467e300,-3.4260093333783593e300,-3.4302181900532714e300,-3.434427046728183e300,-3.438635903403095e300,-3.442844760078007e300,-3.447053616752919e300,-3.451262473427831e300,-3.4554713301027426e300,-3.459680186777655e300,-3.463889043452567e300,-3.468097900127479e300,-3.4723067568023915e300,-3.476515613477303e300,-3.480724470152215e300,-3.4849333268271265e300,-3.489142183502039e300,-3.4933510401769506e300,-3.4975598968518627e300,-3.5017687535267753e300,-3.505977610201687e300,-3.510186466876599e300,-3.5143953235515104e300,-3.518604180226423e300,-3.522813036901335e300,-3.5270218935762466e300,-3.5312307502511586e300,-3.5354396069260707e300,-3.539648463600983e300,-3.543857320275895e300,-3.548066176950807e300,-3.552275033625719e300,-3.5564838903006304e300,-3.5606927469755425e300,-3.564901603650455e300,-3.5691104603253666e300,-3.5733193170002787e300,-3.57752817367519e300,-3.581737030350103e300,-3.585945887025015e300,-3.5901547436999264e300,-3.594363600374839e300,-3.5985724570497505e300,-3.6027813137246626e300,-3.6069901703995746e300,-3.611199027074487e300,-3.615407883749399e300,-3.61961674042431e300,-3.6238255970992223e300,-3.628034453774135e300,-3.6322433104490464e300,-3.6364521671239585e300,-3.6406610237988706e300,-3.6448698804737826e300,-3.649078737148695e300,-3.653287593823606e300,-3.657496450498519e300,-3.6617053071734303e300,-3.6659141638483424e300,-3.6701230205232545e300,-3.6743318771981665e300,-3.6785407338730786e300,-3.68274959054799e300,-3.686958447222903e300,-3.691167303897815e300,-3.695376160572726e300,-3.6995850172476383e300,-3.7037938739225504e300,-3.7080027305974625e300,-3.712211587272374e300,-3.716420443947286e300,-3.7206293006221987e300,-3.72483815729711e300,-3.729047013972022e300,-3.733255870646934e300,-3.7374647273218463e300,-3.7416735839967584e300,-3.74588244067167e300,-3.7500912973465825e300,-3.754300154021494e300,-3.758509010696406e300,-3.762717867371318e300,-3.76692672404623e300,-3.771135580721142e300,-3.775344437396054e300,-3.7795532940709664e300,-3.7837621507458785e300,-3.78797100742079e300,-3.792179864095702e300,-3.796388720770614e300,-3.800597577445526e300,-3.804806434120438e300,-3.8090152907953497e300,-3.8132241474702623e300,-3.817433004145174e300,-3.821641860820086e300,-3.8258507174949985e300,-3.83005957416991e300,-3.834268430844822e300,-3.8384772875197336e300,-3.842686144194646e300,-3.846895000869558e300,-3.85110385754447e300,-3.855312714219382e300,-3.859521570894294e300,-3.863730427569206e300,-3.867939284244118e300,-3.87214814091903e300,-3.876356997593942e300,-3.8805658542688536e300,-3.8847747109437657e300,-3.8889835676186784e300,-3.89319242429359e300,-3.897401280968502e300,-3.9016101376434134e300,-3.905818994318326e300,-3.9100278509932375e300,-3.9142367076681496e300,-3.918445564343062e300,-3.9226544210179737e300,-3.926863277692886e300,-3.931072134367797e300,-3.93528099104271e300,-3.939489847717622e300,-3.9436987043925334e300,-3.9479075610674455e300,-3.9521164177423576e300,-3.9563252744172696e300,-3.960534131092182e300,-3.964742987767094e300,-3.968951844442006e300,-3.9731607011169173e300,-3.9773695577918294e300,-3.981578414466742e300,-3.9857872711416535e300,-3.9899961278165656e300,-3.994204984491477e300,-3.99841384116639e300,-4.002622697841302e300,-4.006831554516213e300,-4.011040411191126e300,-4.0152492678660374e300,-4.0194581245409495e300,-4.0236669812158615e300,-4.0278758378907736e300,-4.0320846945656857e300,-4.036293551240597e300,-4.040502407915509e300,-4.044711264590422e300,-4.0489201212653333e300,-4.0531289779402454e300,-4.0573378346151575e300,-4.0615466912900695e300,-4.0657555479649816e300,-4.069964404639893e300,-4.074173261314806e300,-4.078382117989717e300,-4.082590974664629e300,-4.086799831339542e300,-4.0910086880144534e300,-4.0952175446893655e300,-4.099426401364277e300,-4.1036352580391896e300,-4.107844114714101e300,-4.112052971389013e300,-4.116261828063925e300,-4.120470684738837e300,-4.1246795414137493e300,-4.128888398088661e300,-4.1330972547635735e300,-4.1373061114384855e300,-4.141514968113397e300,-4.145723824788309e300,-4.149932681463221e300,-4.154141538138133e300,-4.158350394813045e300,-4.162559251487957e300,-4.1667681081628694e300,-4.170976964837781e300,-4.175185821512693e300,-4.1793946781876056e300,-4.183603534862517e300,-4.187812391537429e300,-4.1920212482123406e300,-4.196230104887253e300,-4.2004389615621654e300,-4.204647818237077e300,-4.208856674911989e300,-4.213065531586901e300,-4.217274388261813e300,-4.221483244936725e300,-4.225692101611637e300,-4.229900958286549e300,-4.2341098149614607e300,-4.238318671636373e300,-4.2425275283112854e300,-4.246736384986197e300,-4.250945241661109e300,-4.2551540983360204e300,-4.259362955010933e300,-4.263571811685845e300,-4.2677806683607566e300,-4.2719895250356693e300,-4.276198381710581e300,-4.280407238385493e300,-4.2846160950604043e300,-4.288824951735317e300,-4.293033808410229e300,-4.2972426650851405e300,-4.3014515217600526e300,-4.3056603784349646e300,-4.309869235109877e300,-4.314078091784789e300,-4.318286948459701e300,-4.322495805134613e300,-4.3267046618095244e300,-4.3309135184844364e300,-4.335122375159349e300,-4.3393312318342606e300,-4.3435400885091726e300,-4.347748945184084e300,-4.351957801858997e300,-4.356166658533909e300,-4.3603755152088203e300,-4.364584371883733e300,-4.3687932285586445e300,-4.3730020852335565e300,-4.3772109419084686e300,-4.3814197985833807e300,-4.385628655258293e300,-4.389837511933204e300,-4.394046368608116e300,-4.398255225283029e300,-4.4024640819579404e300,-4.4066729386328525e300,-4.4108817953077645e300,-4.4150906519826766e300,-4.4192995086575887e300,-4.4235083653325e300,-4.427717222007413e300,-4.431926078682324e300,-4.4361349353572363e300,-4.4403437920321484e300,-4.4445526487070605e300,-4.4487615053819725e300,-4.452970362056884e300,-4.4571792187317967e300,-4.461388075406709e300,-4.46559693208162e300,-4.469805788756532e300,-4.4740146454314443e300,-4.4782235021063564e300,-4.4824323587812685e300,-4.48664121545618e300,-4.4908500721310926e300,-4.495058928806004e300,-4.499267785480916e300,-4.503476642155828e300,-4.50768549883074e300,-4.5118943555056523e300,-4.516103212180564e300,-4.5203120688554765e300,-4.524520925530388e300,-4.5287297822053e300,-4.532938638880212e300,-4.537147495555124e300,-4.541356352230036e300,-4.5455652089049477e300,-4.5497740655798604e300,-4.5539829222547724e300,-4.558191778929684e300,-4.562400635604596e300,-4.566609492279508e300,-4.57081834895442e300,-4.575027205629332e300,-4.579236062304244e300,-4.583444918979156e300,-4.587653775654068e300,-4.59186263232898e300,-4.5960714890038925e300,-4.600280345678804e300,-4.604489202353716e300,-4.6086980590286275e300,-4.61290691570354e300,-4.617115772378452e300,-4.621324629053364e300,-4.6255334857282764e300,-4.629742342403188e300,-4.6339511990781e300,-4.638160055753012e300,-4.642368912427924e300,-4.646577769102836e300,-4.6507866257777476e300,-4.6549954824526596e300,-4.6592043391275723e300,-4.663413195802484e300,-4.667622052477396e300,-4.671830909152308e300,-4.67603976582722e300,-4.680248622502132e300,-4.6844574791770435e300,-4.688666335851956e300,-4.6928751925268677e300,-4.69708404920178e300,-4.701292905876691e300,-4.705501762551604e300,-4.709710619226516e300,-4.7139194759014274e300,-4.71812833257634e300,-4.7223371892512515e300,-4.7265460459261636e300,-4.7307549026010757e300,-4.734963759275988e300,-4.7391726159509e300,-4.743381472625811e300,-4.7475903293007233e300,-4.751799185975636e300,-4.7560080426505475e300,-4.7602168993254595e300,-4.7644257560003716e300,-4.7686346126752837e300,-4.772843469350196e300,-4.777052326025107e300,-4.78126118270002e300,-4.7854700393749313e300,-4.7896788960498434e300,-4.7938877527247555e300,-4.7980966093996675e300,-4.8023054660745796e300,-4.806514322749491e300,-4.810723179424404e300,-4.814932036099316e300,-4.819140892774227e300,-4.8233497494491393e300,-4.8275586061240514e300,-4.8317674627989635e300,-4.8359763194738755e300,-4.840185176148787e300,-4.8443940328236997e300,-4.848602889498611e300,-4.852811746173523e300,-4.857020602848436e300,-4.8612294595233474e300,-4.8654383161982594e300,-4.869647172873171e300,-4.8738560295480836e300,-4.8780648862229956e300,-4.882273742897907e300,-4.886482599572819e300,-4.890691456247731e300,-4.894900312922643e300,-4.899109169597555e300,-4.9033180262724674e300,-4.9075268829473795e300,-4.911735739622291e300,-4.915944596297203e300,-4.920153452972115e300,-4.924362309647027e300,-4.928571166321939e300,-4.9327800229968507e300,-4.9369888796717634e300,-4.941197736346675e300,-4.945406593021587e300,-4.9496154496964996e300,-4.953824306371411e300,-4.958033163046323e300,-4.9622420197212346e300,-4.966450876396147e300,-4.9706597330710593e300,-4.974868589745971e300,-4.979077446420883e300,-4.983286303095795e300,-4.987495159770707e300,-4.991704016445619e300,-4.995912873120531e300,-5.000121729795443e300,-5.0043305864703546e300,-5.008539443145267e300,-5.0127482998201794e300,-5.016957156495091e300,-5.021166013170003e300,-5.0253748698449144e300,-5.029583726519827e300,-5.033792583194739e300,-5.0380014398696506e300,-5.042210296544563e300,-5.046419153219475e300,-5.050628009894387e300,-5.054836866569299e300,-5.059045723244211e300,-5.063254579919123e300,-5.0674634365940345e300,-5.0716722932689465e300,-5.075881149943859e300,-5.0800900066187707e300,-5.084298863293683e300,-5.088507719968595e300,-5.092716576643507e300,-5.0969254333184183e300,-5.1011342899933304e300,-5.105343146668243e300,-5.1095520033431545e300,-5.1137608600180666e300,-5.117969716692978e300,-5.122178573367891e300,-5.126387430042803e300,-5.130596286717714e300,-5.134805143392627e300,-5.1390140000675384e300,-5.1432228567424505e300,-5.1474317134173625e300,-5.1516405700922746e300,-5.1558494267671867e300,-5.160058283442098e300,-5.164267140117011e300,-5.168475996791923e300,-5.1726848534668343e300,-5.1768937101417464e300,-5.1811025668166585e300,-5.1853114234915705e300,-5.1895202801664826e300,-5.193729136841394e300,-5.197937993516307e300,-5.202146850191218e300,-5.20635570686613e300,-5.210564563541043e300,-5.2147734202159544e300,-5.2189822768908665e300,-5.223191133565778e300,-5.2273999902406906e300,-5.2316088469156027e300,-5.235817703590514e300,-5.240026560265426e300,-5.244235416940338e300,-5.2484442736152504e300,-5.2526531302901624e300,-5.2568619869650745e300,-5.2610708436399866e300,-5.265279700314898e300,-5.26948855698981e300,-5.273697413664723e300,-5.277906270339634e300,-5.2821151270145463e300,-5.286323983689458e300,-5.2905328403643704e300,-5.294741697039282e300,-5.298950553714194e300,-5.3031594103891066e300,-5.307368267064018e300,-5.31157712373893e300,-5.3157859804138416e300,-5.3199948370887543e300,-5.3242036937636664e300,-5.328412550438578e300,-5.33262140711349e300,-5.336830263788402e300,-5.341039120463314e300,-5.345247977138226e300,-5.349456833813138e300,-5.35366569048805e300,-5.357874547162962e300,-5.362083403837874e300,-5.366292260512786e300,-5.370501117187699e300,-5.37470997386261e300,-5.378918830537521e300,-5.383127687212434e300,-5.387336543887346e300,-5.391545400562258e300,-5.39575425723717e300,-5.399963113912082e300,-5.404171970586994e300,-5.408380827261905e300,-5.412589683936818e300,-5.41679854061173e300,-5.421007397286642e300,-5.425216253961554e300,-5.429425110636466e300,-5.433633967311378e300,-5.437842823986289e300,-5.442051680661202e300,-5.446260537336113e300,-5.450469394011026e300,-5.454678250685937e300,-5.45888710736085e300,-5.463095964035762e300,-5.467304820710673e300,-5.471513677385586e300,-5.475722534060498e300,-5.47993139073541e300,-5.484140247410321e300,-5.488349104085233e300,-5.492557960760145e300,-5.496766817435058e300,-5.50097567410997e300,-5.505184530784882e300,-5.509393387459793e300,-5.513602244134705e300,-5.517811100809618e300,-5.522019957484529e300,-5.526228814159442e300,-5.530437670834353e300,-5.534646527509265e300,-5.538855384184178e300,-5.54306424085909e300,-5.547273097534002e300,-5.551481954208913e300,-5.555690810883825e300,-5.559899667558737e300,-5.56410852423365e300,-5.568317380908561e300,-5.572526237583473e300,-5.576735094258386e300,-5.580943950933297e300,-5.58515280760821e300,-5.589361664283122e300,-5.593570520958033e300,-5.597779377632945e300,-5.601988234307857e300,-5.60619709098277e300,-5.610405947657682e300,-5.614614804332592e300,-5.618823661007505e300,-5.623032517682418e300,-5.627241374357329e300,-5.631450231032242e300,-5.635659087707153e300,-5.639867944382065e300,-5.644076801056978e300,-5.648285657731889e300,-5.652494514406802e300,-5.656703371081713e300,-5.660912227756625e300,-5.665121084431537e300,-5.66932994110645e300,-5.673538797781361e300,-5.677747654456273e300,-5.681956511131186e300,-5.686165367806097e300,-5.69037422448101e300,-5.694583081155921e300,-5.698791937830833e300,-5.703000794505745e300,-5.707209651180657e300,-5.711418507855569e300,-5.715627364530482e300,-5.719836221205392e300,-5.724045077880305e300,-5.728253934555218e300,-5.732462791230129e300,-5.736671647905042e300,-5.740880504579952e300,-5.745089361254865e300,-5.749298217929777e300,-5.753507074604689e300,-5.757715931279602e300,-5.761924787954513e300,-5.766133644629424e300,-5.770342501304337e300,-5.77455135797925e300,-5.77876021465416e300,-5.782969071329073e300,-5.787177928003984e300,-5.791386784678897e300,-5.79559564135381e300,-5.79980449802872e300,-5.804013354703632e300,-5.808222211378545e300,-5.812431068053457e300,-5.816639924728369e300,-5.820848781403281e300,-5.825057638078192e300,-5.829266494753105e300,-5.833475351428016e300,-5.837684208102929e300,-5.84189306477784e300,-5.846101921452752e300,-5.850310778127665e300,-5.854519634802577e300,-5.858728491477489e300,-5.8629373481524e300,-5.867146204827313e300,-5.871355061502224e300,-5.875563918177137e300,-5.879772774852048e300,-5.88398163152696e300,-5.888190488201873e300,-5.892399344876784e300,-5.896608201551697e300,-5.90081705822661e300,-5.90502591490152e300,-5.909234771576432e300,-5.913443628251345e300,-5.917652484926256e300,-5.921861341601169e300,-5.92607019827608e300,-5.930279054950992e300,-5.934487911625905e300,-5.938696768300816e300,-5.942905624975729e300,-5.94711448165064e300,-5.951323338325552e300,-5.955532195000464e300,-5.959741051675377e300,-5.963949908350289e300,-5.9681587650252e300,-5.972367621700113e300,-5.976576478375024e300,-5.980785335049937e300,-5.984994191724848e300,-5.98920304839976e300,-5.993411905074673e300,-5.997620761749584e300,-6.001829618424497e300,-6.006038475099409e300,-6.01024733177432e300,-6.014456188449232e300,-6.018665045124145e300,-6.022873901799056e300,-6.027082758473969e300,-6.031291615148879e300,-6.035500471823792e300,-6.039709328498705e300,-6.043918185173616e300,-6.048127041848529e300,-6.05233589852344e300,-6.056544755198352e300,-6.060753611873264e300,-6.064962468548177e300,-6.069171325223089e300,-6.073380181898e300,-6.077589038572911e300,-6.081797895247824e300,-6.086006751922737e300,-6.090215608597648e300,-6.09442446527256e300,-6.098633321947472e300,-6.102842178622384e300,-6.107051035297297e300,-6.111259891972209e300,-6.11546874864712e300,-6.119677605322032e300,-6.123886461996944e300,-6.128095318671856e300,-6.132304175346769e300,-6.136513032021679e300,-6.140721888696592e300,-6.144930745371505e300,-6.149139602046416e300,-6.153348458721329e300,-6.15755731539624e300,-6.161766172071152e300,-6.165975028746064e300,-6.170183885420976e300,-6.174392742095888e300,-6.1786015987708e300,-6.182810455445711e300,-6.187019312120624e300,-6.191228168795537e300,-6.195437025470447e300,-6.19964588214536e300,-6.203854738820272e300,-6.208063595495184e300,-6.212272452170096e300,-6.216481308845007e300,-6.220690165519919e300,-6.224899022194832e300,-6.229107878869743e300,-6.233316735544656e300,-6.237525592219568e300,-6.241734448894479e300,-6.245943305569392e300,-6.250152162244304e300,-6.254361018919216e300,-6.258569875594127e300,-6.262778732269039e300,-6.266987588943951e300,-6.271196445618864e300,-6.275405302293776e300,-6.279614158968687e300,-6.2838230156436e300,-6.288031872318511e300,-6.292240728993424e300,-6.296449585668337e300,-6.300658442343247e300,-6.30486729901816e300,-6.309076155693071e300,-6.313285012367984e300,-6.317493869042896e300,-6.321702725717807e300,-6.325911582392719e300,-6.330120439067632e300,-6.334329295742543e300,-6.338538152417456e300,-6.342747009092368e300,-6.346955865767279e300,-6.351164722442192e300,-6.355373579117103e300,-6.359582435792016e300,-6.363791292466927e300,-6.368000149141839e300,-6.372209005816751e300,-6.376417862491664e300,-6.380626719166576e300,-6.384835575841487e300,-6.3890444325164e300,-6.393253289191311e300,-6.397462145866224e300,-6.401671002541135e300,-6.405879859216047e300,-6.410088715890959e300,-6.414297572565871e300,-6.418506429240784e300,-6.422715285915696e300,-6.426924142590606e300,-6.431132999265519e300,-6.435341855940432e300,-6.439550712615343e300,-6.443759569290256e300,-6.447968425965166e300,-6.452177282640079e300,-6.456386139314992e300,-6.460594995989903e300,-6.464803852664816e300,-6.469012709339727e300,-6.473221566014639e300,-6.477430422689551e300,-6.481639279364464e300,-6.485848136039375e300,-6.490056992714287e300,-6.494265849389198e300,-6.498474706064111e300,-6.502683562739024e300,-6.506892419413935e300,-6.511101276088847e300,-6.515310132763759e300,-6.519518989438671e300,-6.523727846113583e300,-6.527936702788496e300,-6.532145559463406e300,-6.536354416138319e300,-6.54056327281323e300,-6.544772129488143e300,-6.548980986163056e300,-6.553189842837966e300,-6.557398699512879e300,-6.561607556187791e300,-6.565816412862703e300,-6.570025269537616e300,-6.574234126212527e300,-6.578442982887438e300,-6.582651839562351e300,-6.586860696237263e300,-6.591069552912174e300,-6.595278409587087e300,-6.599487266261998e300,-6.603696122936911e300,-6.607904979611824e300,-6.612113836286734e300,-6.616322692961646e300,-6.620531549636559e300,-6.624740406311471e300,-6.628949262986383e300,-6.633158119661294e300,-6.637366976336206e300,-6.641575833011119e300,-6.64578468968603e300,-6.649993546360943e300,-6.654202403035855e300,-6.658411259710766e300,-6.662620116385679e300,-6.666828973060591e300,-6.671037829735503e300,-6.675246686410414e300,-6.679455543085326e300,-6.683664399760238e300,-6.687873256435151e300,-6.692082113110063e300,-6.696290969784974e300,-6.700499826459887e300,-6.704708683134798e300,-6.708917539809711e300,-6.713126396484623e300,-6.717335253159534e300,-6.721544109834446e300,-6.725752966509358e300,-6.72996182318427e300,-6.734170679859183e300,-6.738379536534093e300,-6.742588393209006e300,-6.746797249883919e300,-6.75100610655883e300,-6.755214963233743e300,-6.759423819908654e300,-6.763632676583566e300,-6.767841533258479e300,-6.77205038993339e300,-6.776259246608303e300,-6.780468103283214e300,-6.784676959958126e300,-6.788885816633038e300,-6.793094673307951e300,-6.797303529982862e300,-6.801512386657774e300,-6.805721243332687e300,-6.809930100007598e300,-6.814138956682511e300,-6.818347813357422e300,-6.822556670032334e300,-6.826765526707246e300,-6.830974383382158e300,-6.83518324005707e300,-6.839392096731983e300,-6.843600953406893e300,-6.847809810081806e300,-6.852018666756719e300,-6.85622752343163e300,-6.860436380106543e300,-6.864645236781453e300,-6.868854093456366e300,-6.873062950131278e300,-6.87727180680619e300,-6.881480663481103e300,-6.885689520156014e300,-6.889898376830925e300,-6.894107233505838e300,-6.898316090180751e300,-6.902524946855662e300,-6.906733803530574e300,-6.910942660205485e300,-6.915151516880398e300,-6.91936037355531e300,-6.923569230230222e300,-6.927778086905133e300,-6.931986943580046e300,-6.936195800254958e300,-6.94040465692987e300,-6.944613513604783e300,-6.948822370279693e300,-6.953031226954606e300,-6.957240083629517e300,-6.96144894030443e300,-6.965657796979343e300,-6.969866653654253e300,-6.974075510329166e300,-6.978284367004078e300,-6.98249322367899e300,-6.986702080353901e300,-6.990910937028814e300,-6.995119793703725e300,-6.999328650378638e300,-7.003537507053551e300,-7.007746363728461e300,-7.011955220403374e300,-7.016164077078285e300,-7.020372933753198e300,-7.02458179042811e300,-7.028790647103021e300,-7.032999503777933e300,-7.037208360452846e300,-7.041417217127758e300,-7.04562607380267e300,-7.049834930477582e300,-7.054043787152493e300,-7.058252643827406e300,-7.062461500502317e300,-7.06667035717723e300,-7.070879213852141e300,-7.075088070527053e300,-7.079296927201966e300,-7.083505783876878e300,-7.08771464055179e300,-7.091923497226701e300,-7.096132353901614e300,-7.100341210576525e300,-7.104550067251438e300,-7.108758923926349e300,-7.112967780601261e300,-7.117176637276174e300,-7.121385493951085e300,-7.125594350625998e300,-7.12980320730091e300,-7.134012063975821e300,-7.138220920650733e300,-7.142429777325646e300,-7.146638634000557e300,-7.15084749067547e300,-7.15505634735038e300,-7.159265204025293e300,-7.163474060700206e300,-7.167682917375117e300,-7.17189177405003e300,-7.176100630724941e300,-7.180309487399853e300,-7.184518344074765e300,-7.188727200749678e300,-7.19293605742459e300,-7.197144914099501e300,-7.201353770774412e300,-7.205562627449325e300,-7.209771484124238e300,-7.213980340799149e300,-7.218189197474061e300,-7.222398054148973e300,-7.226606910823885e300,-7.230815767498798e300,-7.23502462417371e300,-7.23923348084862e300,-7.243442337523533e300,-7.247651194198445e300,-7.251860050873357e300,-7.25606890754827e300,-7.26027776422318e300,-7.264486620898093e300,-7.268695477573006e300,-7.272904334247917e300,-7.27711319092283e300,-7.281322047597741e300,-7.285530904272653e300,-7.289739760947565e300,-7.293948617622477e300,-7.29815747429739e300,-7.302366330972301e300,-7.306575187647212e300,-7.310784044322125e300,-7.314992900997038e300,-7.319201757671949e300,-7.323410614346861e300,-7.327619471021773e300,-7.331828327696685e300,-7.336037184371597e300,-7.340246041046509e300,-7.34445489772142e300,-7.348663754396333e300,-7.352872611071245e300,-7.357081467746157e300,-7.36129032442107e300,-7.36549918109598e300,-7.369708037770893e300,-7.373916894445805e300,-7.378125751120717e300,-7.38233460779563e300,-7.38654346447054e300,-7.390752321145453e300,-7.394961177820365e300,-7.399170034495277e300,-7.403378891170188e300,-7.407587747845101e300,-7.411796604520012e300,-7.416005461194925e300,-7.420214317869838e300,-7.424423174544748e300,-7.42863203121966e300,-7.432840887894572e300,-7.437049744569485e300,-7.441258601244397e300,-7.445467457919308e300,-7.44967631459422e300,-7.453885171269133e300,-7.458094027944044e300,-7.462302884618957e300,-7.466511741293869e300,-7.47072059796878e300,-7.474929454643693e300,-7.479138311318604e300,-7.483347167993517e300,-7.487556024668428e300,-7.49176488134334e300,-7.495973738018252e300,-7.500182594693165e300,-7.504391451368077e300,-7.508600308042988e300,-7.512809164717901e300,-7.517018021392812e300,-7.521226878067725e300,-7.525435734742636e300,-7.529644591417548e300,-7.53385344809246e300,-7.538062304767372e300,-7.542271161442285e300,-7.546480018117197e300,-7.550688874792107e300,-7.55489773146702e300,-7.559106588141933e300,-7.563315444816844e300,-7.567524301491757e300,-7.571733158166667e300,-7.57594201484158e300,-7.580150871516493e300,-7.584359728191404e300,-7.588568584866317e300,-7.592777441541228e300,-7.59698629821614e300,-7.601195154891052e300,-7.605404011565965e300,-7.609612868240876e300,-7.613821724915788e300,-7.618030581590699e300,-7.622239438265612e300,-7.626448294940525e300,-7.630657151615436e300,-7.634866008290348e300,-7.63907486496526e300,-7.643283721640172e300,-7.647492578315084e300,-7.651701434989997e300,-7.655910291664907e300,-7.66011914833982e300,-7.664328005014732e300,-7.668536861689644e300,-7.672745718364557e300,-7.676954575039467e300,-7.68116343171438e300,-7.685372288389292e300,-7.689581145064204e300,-7.693790001739117e300,-7.697998858414028e300,-7.70220771508894e300,-7.706416571763852e300,-7.710625428438764e300,-7.714834285113676e300,-7.719043141788588e300,-7.723251998463499e300,-7.727460855138412e300,-7.731669711813325e300,-7.735878568488236e300,-7.740087425163148e300,-7.74429628183806e300,-7.748505138512972e300,-7.752713995187884e300,-7.756922851862795e300,-7.761131708537707e300,-7.76534056521262e300,-7.769549421887531e300,-7.773758278562444e300,-7.777967135237357e300,-7.782175991912267e300,-7.78638484858718e300,-7.790593705262092e300,-7.794802561937004e300,-7.799011418611915e300,-7.803220275286827e300,-7.807429131961739e300,-7.811637988636652e300,-7.815846845311564e300,-7.820055701986475e300,-7.824264558661388e300,-7.828473415336299e300,-7.832682272011212e300,-7.836891128686124e300,-7.841099985361035e300,-7.845308842035947e300,-7.849517698710859e300,-7.853726555385772e300,-7.857935412060684e300,-7.862144268735594e300,-7.866353125410507e300,-7.87056198208542e300,-7.874770838760331e300,-7.878979695435244e300,-7.883188552110155e300,-7.887397408785067e300,-7.89160626545998e300,-7.895815122134891e300,-7.900023978809804e300,-7.904232835484715e300,-7.908441692159627e300,-7.912650548834539e300,-7.916859405509452e300,-7.921068262184363e300,-7.925277118859275e300,-7.929485975534188e300,-7.933694832209099e300,-7.937903688884012e300,-7.942112545558923e300,-7.946321402233835e300,-7.950530258908747e300,-7.954739115583659e300,-7.958947972258571e300,-7.963156828933484e300,-7.967365685608394e300,-7.971574542283307e300,-7.97578339895822e300,-7.979992255633131e300,-7.984201112308044e300,-7.988409968982954e300,-7.992618825657867e300,-7.99682768233278e300,-8.001036539007691e300,-8.005245395682604e300,-8.009454252357515e300,-8.013663109032427e300,-8.017871965707339e300,-8.022080822382252e300,-8.026289679057163e300,-8.030498535732075e300,-8.034707392406986e300,-8.038916249081899e300,-8.043125105756812e300,-8.047333962431723e300,-8.051542819106635e300,-8.055751675781547e300,-8.059960532456459e300,-8.064169389131371e300,-8.068378245806284e300,-8.072587102481194e300,-8.076795959156107e300,-8.081004815831018e300,-8.085213672505931e300,-8.089422529180844e300,-8.093631385855754e300,-8.097840242530667e300,-8.102049099205579e300,-8.106257955880491e300,-8.110466812555403e300,-8.114675669230315e300,-8.118884525905226e300,-8.123093382580139e300,-8.127302239255052e300,-8.131511095929963e300,-8.135719952604875e300,-8.139928809279786e300,-8.144137665954699e300,-8.148346522629611e300,-8.152555379304523e300,-8.156764235979434e300,-8.160973092654347e300,-8.165181949329259e300,-8.169390806004171e300,-8.173599662679084e300,-8.177808519353994e300,-8.182017376028907e300,-8.186226232703818e300,-8.190435089378731e300,-8.194643946053642e300,-8.198852802728554e300,-8.203061659403467e300,-8.207270516078379e300,-8.211479372753291e300,-8.215688229428202e300,-8.219897086103115e300,-8.224105942778026e300,-8.228314799452939e300,-8.23252365612785e300,-8.236732512802762e300,-8.240941369477675e300,-8.245150226152586e300,-8.249359082827499e300,-8.253567939502411e300,-8.257776796177322e300,-8.261985652852234e300,-8.266194509527147e300,-8.270403366202058e300,-8.274612222876971e300,-8.278821079551881e300,-8.283029936226794e300,-8.287238792901707e300,-8.291447649576618e300,-8.295656506251531e300,-8.299865362926442e300,-8.304074219601354e300,-8.308283076276266e300,-8.312491932951179e300,-8.31670078962609e300,-8.320909646301002e300,-8.325118502975914e300,-8.329327359650826e300,-8.333536216325739e300,-8.33774507300065e300,-8.341953929675562e300,-8.346162786350474e300,-8.350371643025386e300,-8.354580499700299e300,-8.358789356375211e300,-8.362998213050122e300,-8.367207069725034e300,-8.371415926399946e300,-8.375624783074858e300,-8.379833639749771e300,-8.384042496424681e300,-8.388251353099594e300,-8.392460209774507e300,-8.396669066449418e300,-8.400877923124331e300,-8.405086779799242e300,-8.409295636474154e300,-8.413504493149066e300,-8.417713349823978e300,-8.42192220649889e300,-8.426131063173802e300,-8.430339919848713e300,-8.434548776523626e300,-8.438757633198539e300,-8.44296648987345e300,-8.447175346548362e300,-8.451384203223274e300,-8.455593059898186e300,-8.459801916573098e300,-8.46401077324801e300,-8.468219629922921e300,-8.472428486597834e300,-8.476637343272746e300,-8.480846199947658e300,-8.485055056622571e300,-8.489263913297481e300,-8.493472769972394e300,-8.497681626647306e300,-8.501890483322218e300,-8.50609933999713e300,-8.510308196672041e300,-8.514517053346954e300,-8.518725910021866e300,-8.522934766696778e300,-8.52714362337169e300,-8.531352480046602e300,-8.535561336721513e300,-8.539770193396426e300,-8.543979050071339e300,-8.54818790674625e300,-8.552396763421162e300,-8.556605620096073e300,-8.560814476770986e300,-8.565023333445898e300,-8.569232190120809e300,-8.573441046795721e300,-8.577649903470634e300,-8.581858760145545e300,-8.586067616820458e300,-8.590276473495371e300,-8.594485330170281e300,-8.598694186845194e300,-8.602903043520105e300,-8.607111900195018e300,-8.611320756869929e300,-8.615529613544841e300,-8.619738470219753e300,-8.623947326894666e300,-8.628156183569578e300,-8.632365040244489e300,-8.636573896919402e300,-8.640782753594313e300,-8.644991610269226e300,-8.649200466944137e300,-8.653409323619049e300,-8.657618180293961e300,-8.661827036968873e300,-8.666035893643786e300,-8.670244750318698e300,-8.674453606993609e300,-8.678662463668521e300,-8.682871320343434e300,-8.687080177018345e300,-8.691289033693258e300,-8.695497890368168e300,-8.699706747043081e300,-8.703915603717994e300,-8.708124460392905e300,-8.712333317067818e300,-8.716542173742729e300,-8.720751030417641e300,-8.724959887092553e300,-8.729168743767466e300,-8.733377600442377e300,-8.737586457117289e300,-8.7417953137922e300,-8.746004170467113e300,-8.750213027142026e300,-8.754421883816937e300,-8.758630740491849e300,-8.762839597166761e300,-8.767048453841673e300,-8.771257310516585e300,-8.775466167191498e300,-8.779675023866408e300,-8.783883880541321e300,-8.788092737216233e300,-8.792301593891145e300,-8.796510450566058e300,-8.800719307240968e300,-8.804928163915881e300,-8.809137020590793e300,-8.813345877265705e300,-8.817554733940618e300,-8.821763590615529e300,-8.82597244729044e300,-8.830181303965353e300,-8.834390160640265e300,-8.838599017315177e300,-8.842807873990089e300,-8.847016730665e300,-8.851225587339913e300,-8.855434444014826e300,-8.859643300689737e300,-8.863852157364649e300,-8.868061014039561e300,-8.872269870714473e300,-8.876478727389385e300,-8.880687584064297e300,-8.884896440739208e300,-8.889105297414121e300,-8.893314154089032e300,-8.897523010763945e300,-8.901731867438858e300,-8.905940724113768e300,-8.910149580788681e300,-8.914358437463593e300,-8.918567294138505e300,-8.922776150813417e300,-8.926985007488328e300,-8.93119386416324e300,-8.935402720838153e300,-8.939611577513065e300,-8.943820434187977e300,-8.948029290862889e300,-8.9522381475378e300,-8.956447004212713e300,-8.960655860887625e300,-8.964864717562537e300,-8.969073574237448e300,-8.97328243091236e300,-8.977491287587273e300,-8.981700144262185e300,-8.985909000937095e300,-8.990117857612008e300,-8.994326714286921e300,-8.998535570961832e300,-9.002744427636745e300,-9.006953284311656e300,-9.011162140986568e300,-9.01537099766148e300,-9.019579854336392e300,-9.023788711011305e300,-9.027997567686216e300,-9.032206424361128e300,-9.03641528103604e300,-9.040624137710953e300,-9.044832994385864e300,-9.049041851060776e300,-9.053250707735689e300,-9.0574595644106e300,-9.061668421085513e300,-9.065877277760424e300,-9.070086134435336e300,-9.074294991110248e300,-9.07850384778516e300,-9.082712704460072e300,-9.086921561134985e300,-9.091130417809895e300,-9.095339274484808e300,-9.099548131159721e300,-9.103756987834632e300,-9.107965844509545e300,-9.112174701184455e300,-9.116383557859368e300,-9.12059241453428e300,-9.124801271209192e300,-9.129010127884105e300,-9.133218984559016e300,-9.137427841233928e300,-9.14163669790884e300,-9.145845554583753e300,-9.150054411258664e300,-9.154263267933576e300,-9.158472124608488e300,-9.1626809812834e300,-9.166889837958313e300,-9.171098694633224e300,-9.175307551308136e300,-9.179516407983048e300,-9.18372526465796e300,-9.187934121332872e300,-9.192142978007785e300,-9.196351834682695e300,-9.200560691357608e300,-9.20476954803252e300,-9.208978404707432e300,-9.213187261382345e300,-9.217396118057255e300,-9.221604974732168e300,-9.22581383140708e300,-9.230022688081992e300,-9.234231544756904e300,-9.238440401431816e300,-9.242649258106727e300,-9.24685811478164e300,-9.251066971456553e300,-9.255275828131464e300,-9.259484684806376e300,-9.263693541481287e300,-9.2679023981562e300,-9.272111254831112e300,-9.276320111506024e300,-9.280528968180935e300,-9.284737824855848e300,-9.28894668153076e300,-9.293155538205672e300,-9.297364394880585e300,-9.301573251555495e300,-9.305782108230408e300,-9.309990964905319e300,-9.314199821580232e300,-9.318408678255145e300,-9.322617534930055e300,-9.326826391604968e300,-9.33103524827988e300,-9.335244104954792e300,-9.339452961629704e300,-9.343661818304616e300,-9.347870674979527e300,-9.35207953165444e300,-9.356288388329351e300,-9.360497245004264e300,-9.364706101679176e300,-9.368914958354087e300,-9.373123815029e300,-9.377332671703912e300,-9.381541528378823e300,-9.385750385053735e300,-9.389959241728648e300,-9.39416809840356e300,-9.398376955078472e300,-9.402585811753382e300,-9.406794668428295e300,-9.411003525103208e300,-9.415212381778119e300,-9.419421238453032e300,-9.423630095127943e300,-9.427838951802855e300,-9.432047808477767e300,-9.43625666515268e300,-9.440465521827592e300,-9.444674378502503e300,-9.448883235177415e300,-9.453092091852327e300,-9.45730094852724e300,-9.461509805202151e300,-9.465718661877063e300,-9.469927518551975e300,-9.474136375226887e300,-9.4783452319018e300,-9.482554088576712e300,-9.486762945251623e300,-9.490971801926535e300,-9.495180658601447e300,-9.499389515276359e300,-9.503598371951272e300,-9.507807228626182e300,-9.512016085301095e300,-9.516224941976008e300,-9.520433798650919e300,-9.524642655325832e300,-9.528851512000743e300,-9.533060368675655e300,-9.537269225350567e300,-9.541478082025479e300,-9.545686938700391e300,-9.549895795375303e300,-9.554104652050214e300,-9.558313508725127e300,-9.56252236540004e300,-9.566731222074951e300,-9.570940078749863e300,-9.575148935424775e300,-9.579357792099687e300,-9.5835666487746e300,-9.587775505449511e300,-9.591984362124422e300,-9.596193218799335e300,-9.600402075474247e300,-9.604610932149159e300,-9.608819788824072e300,-9.613028645498982e300,-9.617237502173895e300,-9.621446358848807e300,-9.625655215523719e300,-9.629864072198632e300,-9.634072928873542e300,-9.638281785548455e300,-9.642490642223367e300,-9.646699498898279e300,-9.650908355573191e300,-9.655117212248103e300,-9.659326068923014e300,-9.663534925597927e300,-9.66774378227284e300,-9.671952638947751e300,-9.676161495622663e300,-9.680370352297574e300,-9.684579208972487e300,-9.688788065647399e300,-9.692996922322311e300,-9.697205778997222e300,-9.701414635672135e300,-9.705623492347046e300,-9.709832349021959e300,-9.714041205696872e300,-9.718250062371782e300,-9.722458919046695e300,-9.726667775721606e300,-9.730876632396519e300,-9.735085489071431e300,-9.739294345746342e300,-9.743503202421254e300,-9.747712059096167e300,-9.751920915771079e300,-9.756129772445991e300,-9.760338629120903e300,-9.764547485795814e300,-9.768756342470727e300,-9.772965199145638e300,-9.77717405582055e300,-9.781382912495462e300,-9.785591769170374e300,-9.789800625845287e300,-9.794009482520199e300,-9.79821833919511e300,-9.802427195870022e300,-9.806636052544935e300,-9.810844909219846e300,-9.815053765894759e300,-9.819262622569669e300,-9.823471479244582e300,-9.827680335919495e300,-9.831889192594406e300,-9.836098049269319e300,-9.84030690594423e300,-9.844515762619142e300,-9.848724619294054e300,-9.852933475968967e300,-9.857142332643878e300,-9.86135118931879e300,-9.865560045993701e300,-9.869768902668614e300,-9.873977759343527e300,-9.878186616018438e300,-9.88239547269335e300,-9.886604329368262e300,-9.890813186043174e300,-9.895022042718086e300,-9.899230899392999e300,-9.90343975606791e300,-9.907648612742822e300,-9.911857469417734e300,-9.916066326092646e300,-9.920275182767559e300,-9.924484039442469e300,-9.928692896117382e300,-9.932901752792294e300,-9.937110609467206e300,-9.941319466142119e300,-9.94552832281703e300,-9.949737179491942e300,-9.953946036166854e300,-9.958154892841766e300,-9.962363749516678e300,-9.96657260619159e300,-9.970781462866501e300,-9.974990319541414e300,-9.979199176216327e300,-9.983408032891238e300,-9.98761688956615e300,-9.991825746241062e300,-9.996034602915974e300,-1.0000243459590886e301,-1.0004452316265798e301,-1.0008661172940709e301,-1.0012870029615622e301,-1.0017078886290533e301,-1.0021287742965446e301,-1.0025496599640359e301,-1.0029705456315269e301,-1.0033914312990182e301,-1.0038123169665094e301,-1.0042332026340006e301,-1.0046540883014918e301,-1.0050749739689829e301,-1.0054958596364741e301,-1.0059167453039654e301,-1.0063376309714566e301,-1.0067585166389478e301,-1.007179402306439e301,-1.0076002879739301e301,-1.0080211736414214e301,-1.0084420593089126e301,-1.0088629449764038e301,-1.009283830643895e301,-1.0097047163113861e301,-1.0101256019788774e301,-1.0105464876463686e301,-1.0109673733138598e301,-1.0113882589813509e301,-1.0118091446488422e301,-1.0122300303163333e301,-1.0126509159838246e301,-1.0130718016513159e301,-1.0134926873188069e301,-1.0139135729862982e301,-1.0143344586537893e301,-1.0147553443212806e301,-1.0151762299887718e301,-1.0155971156562629e301,-1.0160180013237541e301,-1.0164388869912454e301,-1.0168597726587365e301,-1.0172806583262278e301,-1.017701543993719e301,-1.0181224296612101e301,-1.0185433153287014e301,-1.0189642009961925e301,-1.0193850866636837e301,-1.0198059723311749e301,-1.0202268579986661e301,-1.0206477436661573e301,-1.0210686293336486e301,-1.0214895150011396e301,-1.0219104006686309e301,-1.0223312863361222e301,-1.0227521720036133e301,-1.0231730576711046e301,-1.0235939433385956e301,-1.0240148290060869e301,-1.0244357146735781e301,-1.0248566003410693e301,-1.0252774860085606e301,-1.0256983716760517e301,-1.0261192573435429e301,-1.0265401430110341e301,-1.0269610286785254e301,-1.0273819143460165e301,-1.0278028000135077e301,-1.028223685680999e301,-1.0286445713484901e301,-1.0290654570159814e301,-1.0294863426834725e301,-1.0299072283509637e301,-1.0303281140184549e301,-1.0307489996859461e301,-1.0311698853534373e301,-1.0315907710209286e301,-1.0320116566884196e301,-1.0324325423559109e301,-1.0328534280234022e301,-1.0332743136908933e301,-1.0336951993583846e301,-1.0341160850258756e301,-1.0345369706933669e301,-1.0349578563608581e301,-1.0353787420283493e301,-1.0357996276958405e301,-1.0362205133633317e301,-1.0366413990308228e301,-1.0370622846983141e301,-1.0374831703658054e301,-1.0379040560332965e301,-1.0383249417007877e301,-1.0387458273682788e301,-1.0391667130357701e301,-1.0395875987032613e301,-1.0400084843707525e301,-1.0404293700382436e301,-1.0408502557057349e301,-1.041271141373226e301,-1.0416920270407173e301,-1.0421129127082086e301,-1.0425337983756996e301,-1.0429546840431909e301,-1.043375569710682e301,-1.0437964553781733e301,-1.0442173410456646e301,-1.0446382267131556e301,-1.0450591123806469e301,-1.0454799980481381e301,-1.0459008837156293e301,-1.0463217693831205e301,-1.0467426550506117e301,-1.0471635407181028e301,-1.0475844263855941e301,-1.0480053120530852e301,-1.0484261977205765e301,-1.0488470833880677e301,-1.0492679690555588e301,-1.0496888547230501e301,-1.0501097403905413e301,-1.0505306260580325e301,-1.0509515117255236e301,-1.0513723973930149e301,-1.051793283060506e301,-1.0522141687279973e301,-1.0526350543954885e301,-1.0530559400629796e301,-1.0534768257304709e301,-1.053897711397962e301,-1.0543185970654533e301,-1.0547394827329446e301,-1.0551603684004356e301,-1.0555812540679268e301,-1.0560021397354181e301,-1.0564230254029093e301,-1.0568439110704005e301,-1.0572647967378916e301,-1.0576856824053828e301,-1.0581065680728741e301,-1.0585274537403652e301,-1.0589483394078564e301,-1.0593692250753476e301,-1.0597901107428388e301,-1.0602109964103301e301,-1.0606318820778213e301,-1.0610527677453124e301,-1.0614736534128036e301,-1.0618945390802948e301,-1.062315424747786e301,-1.0627363104152773e301,-1.0631571960827683e301,-1.0635780817502596e301,-1.0639989674177509e301,-1.064419853085242e301,-1.0648407387527333e301,-1.0652616244202244e301,-1.0656825100877156e301,-1.0661033957552068e301,-1.066524281422698e301,-1.0669451670901892e301,-1.0673660527576804e301,-1.0677869384251715e301,-1.0682078240926628e301,-1.0686287097601541e301,-1.0690495954276452e301,-1.0694704810951364e301,-1.0698913667626276e301,-1.0703122524301188e301,-1.07073313809761e301,-1.0711540237651012e301,-1.0715749094325923e301,-1.0719957951000837e301,-1.0724166807675749e301,-1.072837566435066e301,-1.0732584521025572e301,-1.0736793377700483e301,-1.0741002234375397e301,-1.0745211091050308e301,-1.074941994772522e301,-1.0753628804400131e301,-1.0757837661075043e301,-1.0762046517749957e301,-1.0766255374424868e301,-1.077046423109978e301,-1.077467308777469e301,-1.0778881944449605e301,-1.0783090801124517e301,-1.0787299657799428e301,-1.079150851447434e301,-1.079571737114925e301,-1.0799926227824165e301,-1.0804135084499076e301,-1.0808343941173988e301,-1.08125527978489e301,-1.081676165452381e301,-1.0820970511198725e301,-1.0825179367873636e301,-1.0829388224548547e301,-1.083359708122346e301,-1.0837805937898373e301,-1.0842014794573284e301,-1.0846223651248196e301,-1.0850432507923107e301,-1.0854641364598019e301,-1.0858850221272933e301,-1.0863059077947844e301,-1.0867267934622755e301,-1.0871476791297667e301,-1.0875685647972578e301,-1.0879894504647492e301,-1.0884103361322404e301,-1.0888312217997315e301,-1.0892521074672227e301,-1.0896729931347138e301,-1.0900938788022052e301,-1.0905147644696963e301,-1.0909356501371875e301,-1.0913565358046786e301,-1.09177742147217e301,-1.0921983071396612e301,-1.0926191928071523e301,-1.0930400784746437e301,-1.0934609641421346e301,-1.093881849809626e301,-1.0943027354771171e301,-1.0947236211446083e301,-1.0951445068120997e301,-1.0955653924795906e301,-1.095986278147082e301,-1.0964071638145731e301,-1.0968280494820643e301,-1.0972489351495557e301,-1.0976698208170466e301,-1.098090706484538e301,-1.098511592152029e301,-1.0989324778195205e301,-1.0993533634870116e301,-1.0997742491545025e301,-1.100195134821994e301,-1.100616020489485e301,-1.1010369061569765e301,-1.1014577918244676e301,-1.1018786774919585e301,-1.10229956315945e301,-1.102720448826941e301,-1.1031413344944324e301,-1.1035622201619236e301,-1.1039831058294147e301,-1.1044039914969059e301,-1.104824877164397e301,-1.1052457628318884e301,-1.1056666484993795e301,-1.1060875341668707e301,-1.1065084198343618e301,-1.106929305501853e301,-1.1073501911693444e301,-1.1077710768368355e301,-1.1081919625043267e301,-1.108612848171818e301,-1.109033733839309e301,-1.1094546195068003e301,-1.1098755051742915e301,-1.1102963908417826e301,-1.110717276509274e301,-1.111138162176765e301,-1.1115590478442563e301,-1.1119799335117475e301,-1.1124008191792386e301,-1.11282170484673e301,-1.1132425905142212e301,-1.1136634761817123e301,-1.1140843618492034e301,-1.1145052475166946e301,-1.114926133184186e301,-1.1153470188516771e301,-1.1157679045191683e301,-1.1161887901866594e301,-1.1166096758541506e301,-1.117030561521642e301,-1.117451447189133e301,-1.1178723328566245e301,-1.1182932185241154e301,-1.1187141041916065e301,-1.119134989859098e301,-1.119555875526589e301,-1.1199767611940805e301,-1.1203976468615714e301,-1.1208185325290625e301,-1.121239418196554e301,-1.121660303864045e301,-1.1220811895315364e301,-1.1225020751990276e301,-1.1229229608665185e301,-1.1233438465340099e301,-1.123764732201501e301,-1.1241856178689924e301,-1.1246065035364836e301,-1.1250273892039745e301,-1.1254482748714658e301,-1.125869160538957e301,-1.1262900462064484e301,-1.1267109318739395e301,-1.1271318175414307e301,-1.1275527032089218e301,-1.127973588876413e301,-1.1283944745439044e301,-1.1288153602113955e301,-1.1292362458788866e301,-1.1296571315463778e301,-1.130078017213869e301,-1.1304989028813603e301,-1.1309197885488515e301,-1.1313406742163426e301,-1.131761559883834e301,-1.132182445551325e301,-1.1326033312188163e301,-1.1330242168863074e301,-1.1334451025537986e301,-1.13386598822129e301,-1.134286873888781e301,-1.1347077595562723e301,-1.1351286452237634e301,-1.1355495308912546e301,-1.135970416558746e301,-1.136391302226237e301,-1.1368121878937282e301,-1.1372330735612194e301,-1.1376539592287105e301,-1.138074844896202e301,-1.138495730563693e301,-1.1389166162311842e301,-1.1393375018986754e301,-1.1397583875661665e301,-1.140179273233658e301,-1.140600158901149e301,-1.1410210445686404e301,-1.1414419302361313e301,-1.1418628159036225e301,-1.1422837015711139e301,-1.142704587238605e301,-1.1431254729060964e301,-1.1435463585735873e301,-1.1439672442410785e301,-1.1443881299085699e301,-1.144809015576061e301,-1.1452299012435524e301,-1.1456507869110435e301,-1.1460716725785344e301,-1.1464925582460258e301,-1.146913443913517e301,-1.1473343295810084e301,-1.1477552152484995e301,-1.1481761009159904e301,-1.1485969865834818e301,-1.149017872250973e301,-1.1494387579184643e301,-1.1498596435859555e301,-1.1502805292534466e301,-1.1507014149209378e301,-1.151122300588429e301,-1.1515431862559203e301,-1.1519640719234115e301,-1.1523849575909026e301,-1.1528058432583937e301,-1.153226728925885e301,-1.1536476145933763e301,-1.1540685002608674e301,-1.1544893859283586e301,-1.15491027159585e301,-1.1553311572633409e301,-1.155752042930832e301,-1.1561729285983234e301,-1.1565938142658145e301,-1.157014699933306e301,-1.1574355856007968e301,-1.157856471268288e301,-1.1582773569357794e301,-1.1586982426032705e301,-1.159119128270762e301,-1.159540013938253e301,-1.159960899605744e301,-1.1603817852732353e301,-1.1608026709407265e301,-1.1612235566082179e301,-1.161644442275709e301,-1.1620653279432e301,-1.1624862136106913e301,-1.1629070992781825e301,-1.1633279849456739e301,-1.163748870613165e301,-1.1641697562806561e301,-1.1645906419481473e301,-1.1650115276156384e301,-1.1654324132831298e301,-1.165853298950621e301,-1.1662741846181121e301,-1.1666950702856033e301,-1.1671159559530944e301,-1.1675368416205858e301,-1.167957727288077e301,-1.168378612955568e301,-1.1687994986230595e301,-1.1692203842905504e301,-1.1696412699580418e301,-1.170062155625533e301,-1.170483041293024e301,-1.1709039269605155e301,-1.1713248126280064e301,-1.1717456982954977e301,-1.172166583962989e301,-1.17258746963048e301,-1.1730083552979714e301,-1.1734292409654626e301,-1.1738501266329537e301,-1.1742710123004449e301,-1.174691897967936e301,-1.1751127836354274e301,-1.1755336693029185e301,-1.1759545549704097e301,-1.1763754406379008e301,-1.176796326305392e301,-1.1772172119728834e301,-1.1776380976403745e301,-1.178058983307866e301,-1.1784798689753568e301,-1.178900754642848e301,-1.1793216403103394e301,-1.1797425259778305e301,-1.180163411645322e301,-1.1805842973128128e301,-1.181005182980304e301,-1.1814260686477953e301,-1.1818469543152865e301,-1.1822678399827779e301,-1.182688725650269e301,-1.18310961131776e301,-1.1835304969852513e301,-1.1839513826527424e301,-1.1843722683202338e301,-1.184793153987725e301,-1.185214039655216e301,-1.1856349253227073e301,-1.1860558109901984e301,-1.1864766966576898e301,-1.186897582325181e301,-1.187318467992672e301,-1.1877393536601632e301,-1.1881602393276544e301,-1.1885811249951458e301,-1.189002010662637e301,-1.189422896330128e301,-1.1898437819976195e301,-1.1902646676651104e301,-1.1906855533326018e301,-1.191106439000093e301,-1.191527324667584e301,-1.1919482103350754e301,-1.1923690960025663e301,-1.1927899816700577e301,-1.1932108673375489e301,-1.19363175300504e301,-1.1940526386725314e301,-1.1944735243400226e301,-1.1948944100075137e301,-1.1953152956750048e301,-1.195736181342496e301,-1.1961570670099874e301,-1.1965779526774785e301,-1.1969988383449697e301,-1.1974197240124608e301,-1.197840609679952e301,-1.1982614953474434e301,-1.1986823810149345e301,-1.199103266682426e301,-1.1995241523499168e301,-1.199945038017408e301,-1.2003659236848993e301,-1.2007868093523905e301,-1.2012076950198819e301,-1.2016285806873728e301,-1.202049466354864e301,-1.2024703520223553e301,-1.2028912376898464e301,-1.2033121233573378e301,-1.203733009024829e301,-1.20415389469232e301,-1.2045747803598113e301,-1.2049956660273024e301,-1.2054165516947938e301,-1.205837437362285e301,-1.2062583230297759e301,-1.2066792086972672e301,-1.2071000943647584e301,-1.2075209800322498e301,-1.207941865699741e301,-1.208362751367232e301,-1.2087836370347232e301,-1.2092045227022144e301,-1.2096254083697058e301,-1.210046294037197e301,-1.210467179704688e301,-1.2108880653721792e301,-1.2113089510396703e301,-1.2117298367071617e301,-1.2121507223746529e301,-1.212571608042144e301,-1.2129924937096354e301,-1.2134133793771263e301,-1.2138342650446177e301,-1.2142551507121089e301,-1.2146760363796e301,-1.2150969220470914e301,-1.2155178077145823e301,-1.2159386933820737e301,-1.2163595790495648e301,-1.216780464717056e301,-1.2172013503845474e301,-1.2176222360520385e301,-1.2180431217195297e301,-1.2184640073870208e301,-1.218884893054512e301,-1.2193057787220033e301,-1.2197266643894945e301,-1.2201475500569856e301,-1.2205684357244768e301,-1.220989321391968e301,-1.2214102070594593e301,-1.2218310927269505e301,-1.2222519783944418e301,-1.2226728640619327e301,-1.223093749729424e301,-1.2235146353969153e301,-1.2239355210644064e301,-1.2243564067318978e301,-1.2247772923993887e301,-1.2251981780668799e301,-1.2256190637343713e301,-1.2260399494018624e301,-1.2264608350693538e301,-1.226881720736845e301,-1.2273026064043358e301,-1.2277234920718272e301,-1.2281443777393184e301,-1.2285652634068098e301,-1.228986149074301e301,-1.2294070347417918e301,-1.2298279204092832e301,-1.2302488060767743e301,-1.2306696917442657e301,-1.2310905774117569e301,-1.231511463079248e301,-1.2319323487467392e301,-1.2323532344142303e301,-1.2327741200817217e301,-1.2331950057492129e301,-1.233615891416704e301,-1.2340367770841951e301,-1.2344576627516863e301,-1.2348785484191777e301,-1.2352994340866688e301,-1.23572031975416e301,-1.2361412054216514e301,-1.2365620910891423e301,-1.2369829767566334e301,-1.2374038624241248e301,-1.237824748091616e301,-1.2382456337591073e301,-1.2386665194265982e301,-1.2390874050940894e301,-1.2395082907615808e301,-1.239929176429072e301,-1.2403500620965633e301,-1.2407709477640545e301,-1.2411918334315454e301,-1.2416127190990367e301,-1.242033604766528e301,-1.2424544904340193e301,-1.2428753761015104e301,-1.2432962617690013e301,-1.2437171474364927e301,-1.2441380331039839e301,-1.2445589187714753e301,-1.2449798044389664e301,-1.2454006901064576e301,-1.2458215757739487e301,-1.2462424614414398e301,-1.2466633471089312e301,-1.2470842327764224e301,-1.2475051184439135e301,-1.2479260041114047e301,-1.2483468897788958e301,-1.2487677754463872e301,-1.2491886611138784e301,-1.2496095467813695e301,-1.250030432448861e301,-1.2504513181163518e301,-1.2508722037838432e301,-1.2512930894513343e301,-1.2517139751188255e301,-1.2521348607863169e301,-1.2525557464538078e301,-1.2529766321212992e301,-1.2533975177887903e301,-1.2538184034562814e301,-1.2542392891237728e301,-1.254660174791264e301,-1.2550810604587551e301,-1.2555019461262463e301,-1.2559228317937374e301,-1.2563437174612288e301,-1.25676460312872e301,-1.257185488796211e301,-1.2576063744637022e301,-1.2580272601311934e301,-1.2584481457986848e301,-1.258869031466176e301,-1.2592899171336673e301,-1.2597108028011582e301,-1.2601316884686494e301,-1.2605525741361408e301,-1.260973459803632e301,-1.2613943454711233e301,-1.2618152311386142e301,-1.2622361168061053e301,-1.2626570024735967e301,-1.2630778881410879e301,-1.2634987738085793e301,-1.2639196594760704e301,-1.2643405451435613e301,-1.2647614308110527e301,-1.2651823164785438e301,-1.2656032021460352e301,-1.2660240878135264e301,-1.2664449734810173e301,-1.2668658591485087e301,-1.2672867448159998e301,-1.2677076304834912e301,-1.2681285161509824e301,-1.2685494018184735e301,-1.2689702874859646e301,-1.2693911731534558e301,-1.2698120588209472e301,-1.2702329444884383e301,-1.2706538301559295e301,-1.2710747158234206e301,-1.2714956014909118e301,-1.2719164871584032e301,-1.2723373728258943e301,-1.2727582584933854e301,-1.2731791441608768e301,-1.2736000298283677e301,-1.2740209154958591e301,-1.2744418011633503e301,-1.2748626868308414e301,-1.2752835724983328e301,-1.2757044581658237e301,-1.276125343833315e301,-1.2765462295008062e301,-1.2769671151682974e301,-1.2773880008357888e301,-1.27780888650328e301,-1.278229772170771e301,-1.2786506578382622e301,-1.2790715435057534e301,-1.2794924291732448e301,-1.279913314840736e301,-1.280334200508227e301,-1.2807550861757182e301,-1.2811759718432093e301,-1.2815968575107007e301,-1.2820177431781919e301,-1.2824386288456833e301,-1.2828595145131742e301,-1.2832804001806653e301,-1.2837012858481567e301,-1.2841221715156479e301,-1.2845430571831392e301,-1.2849639428506301e301,-1.2853848285181213e301,-1.2858057141856127e301,-1.2862265998531038e301,-1.2866474855205952e301,-1.2870683711880864e301,-1.2874892568555773e301,-1.2879101425230687e301,-1.2883310281905598e301,-1.2887519138580512e301,-1.2891727995255423e301,-1.2895936851930332e301,-1.2900145708605246e301,-1.2904354565280158e301,-1.2908563421955072e301,-1.2912772278629983e301,-1.2916981135304895e301,-1.2921189991979806e301,-1.2925398848654717e301,-1.2929607705329631e301,-1.2933816562004543e301,-1.2938025418679454e301,-1.2942234275354366e301,-1.2946443132029277e301,-1.295065198870419e301,-1.2954860845379103e301,-1.2959069702054014e301,-1.2963278558728928e301,-1.2967487415403837e301,-1.297169627207875e301,-1.2975905128753662e301,-1.2980113985428574e301,-1.2984322842103488e301,-1.2988531698778397e301,-1.299274055545331e301,-1.2996949412128222e301,-1.3001158268803133e301,-1.3005367125478047e301,-1.3009575982152959e301,-1.301378483882787e301,-1.3017993695502782e301,-1.3022202552177693e301,-1.3026411408852607e301,-1.3030620265527519e301,-1.303482912220243e301,-1.3039037978877341e301,-1.3043246835552253e301,-1.3047455692227167e301,-1.3051664548902078e301,-1.3055873405576992e301,-1.3060082262251901e301,-1.3064291118926813e301,-1.3068499975601727e301,-1.3072708832276638e301,-1.3076917688951552e301,-1.308112654562646e301,-1.3085335402301372e301,-1.3089544258976286e301,-1.3093753115651198e301,-1.3097961972326112e301,-1.3102170829001023e301,-1.3106379685675932e301,-1.3110588542350846e301,-1.3114797399025758e301,-1.3119006255700671e301,-1.3123215112375583e301,-1.3127423969050492e301,-1.3131632825725406e301,-1.3135841682400317e301,-1.314005053907523e301,-1.3144259395750143e301,-1.3148468252425054e301,-1.3152677109099966e301,-1.3156885965774877e301,-1.316109482244979e301,-1.3165303679124702e301,-1.3169512535799614e301,-1.3173721392474525e301,-1.3177930249149437e301,-1.3182139105824348e301,-1.3186347962499262e301,-1.3190556819174174e301,-1.3194765675849087e301,-1.3198974532523996e301,-1.3203183389198908e301,-1.3207392245873822e301,-1.3211601102548733e301,-1.3215809959223647e301,-1.3220018815898556e301,-1.3224227672573468e301,-1.3228436529248382e301,-1.3232645385923293e301,-1.3236854242598207e301,-1.3241063099273118e301,-1.3245271955948027e301,-1.3249480812622941e301,-1.3253689669297853e301,-1.3257898525972767e301,-1.3262107382647678e301,-1.3266316239322587e301,-1.32705250959975e301,-1.3274733952672412e301,-1.3278942809347326e301,-1.3283151666022238e301,-1.328736052269715e301,-1.329156937937206e301,-1.3295778236046972e301,-1.3299987092721886e301,-1.3304195949396798e301,-1.330840480607171e301,-1.331261366274662e301,-1.3316822519421532e301,-1.3321031376096446e301,-1.3325240232771357e301,-1.3329449089446269e301,-1.3333657946121183e301,-1.3337866802796092e301,-1.3342075659471006e301,-1.3346284516145917e301,-1.3350493372820828e301,-1.3354702229495742e301,-1.3358911086170651e301,-1.3363119942845565e301,-1.3367328799520477e301,-1.3371537656195388e301,-1.3375746512870302e301,-1.3379955369545214e301,-1.3384164226220125e301,-1.3388373082895036e301,-1.3392581939569948e301,-1.3396790796244862e301,-1.3400999652919773e301,-1.3405208509594685e301,-1.3409417366269596e301,-1.3413626222944508e301,-1.3417835079619422e301,-1.3422043936294333e301,-1.3426252792969247e301,-1.3430461649644156e301,-1.3434670506319067e301,-1.3438879362993981e301,-1.3443088219668893e301,-1.3447297076343807e301,-1.3451505933018716e301,-1.3455714789693627e301,-1.345992364636854e301,-1.3464132503043453e301,-1.3468341359718366e301,-1.3472550216393278e301,-1.3476759073068187e301,-1.34809679297431e301,-1.3485176786418012e301,-1.3489385643092926e301,-1.3493594499767838e301,-1.3497803356442747e301,-1.350201221311766e301,-1.3506221069792572e301,-1.3510429926467486e301,-1.3514638783142397e301,-1.3518847639817309e301,-1.352305649649222e301,-1.3527265353167132e301,-1.3531474209842046e301,-1.3535683066516957e301,-1.3539891923191869e301,-1.354410077986678e301,-1.3548309636541691e301,-1.3552518493216605e301,-1.3556727349891517e301,-1.3560936206566428e301,-1.3565145063241342e301,-1.3569353919916251e301,-1.3573562776591165e301,-1.3577771633266077e301,-1.3581980489940988e301,-1.3586189346615902e301,-1.359039820329081e301,-1.3594607059965725e301,-1.3598815916640636e301,-1.3603024773315548e301,-1.3607233629990462e301,-1.3611442486665373e301,-1.3615651343340285e301,-1.3619860200015196e301,-1.3624069056690107e301,-1.3628277913365021e301,-1.3632486770039933e301,-1.3636695626714844e301,-1.3640904483389756e301,-1.3645113340064667e301,-1.364932219673958e301,-1.3653531053414493e301,-1.3657739910089406e301,-1.3661948766764315e301,-1.3666157623439227e301,-1.367036648011414e301,-1.3674575336789052e301,-1.3678784193463966e301,-1.3682993050138875e301,-1.3687201906813787e301,-1.36914107634887e301,-1.3695619620163612e301,-1.3699828476838526e301,-1.3704037333513437e301,-1.3708246190188346e301,-1.371245504686326e301,-1.3716663903538172e301,-1.3720872760213086e301,-1.3725081616887997e301,-1.3729290473562906e301,-1.373349933023782e301,-1.3737708186912731e301,-1.3741917043587645e301,-1.3746125900262557e301,-1.3750334756937468e301,-1.375454361361238e301,-1.3758752470287291e301,-1.3762961326962205e301,-1.3767170183637117e301,-1.3771379040312028e301,-1.377558789698694e301,-1.377979675366185e301,-1.3784005610336765e301,-1.3788214467011676e301,-1.3792423323686588e301,-1.3796632180361502e301,-1.380084103703641e301,-1.3805049893711325e301,-1.3809258750386236e301,-1.3813467607061148e301,-1.3817676463736061e301,-1.382188532041097e301,-1.3826094177085884e301,-1.3830303033760796e301,-1.3834511890435707e301,-1.383872074711062e301,-1.3842929603785533e301,-1.3847138460460444e301,-1.3851347317135356e301,-1.3855556173810267e301,-1.385976503048518e301,-1.3863973887160092e301,-1.3868182743835004e301,-1.3872391600509915e301,-1.3876600457184827e301,-1.388080931385974e301,-1.3885018170534652e301,-1.3889227027209566e301,-1.3893435883884475e301,-1.3897644740559386e301,-1.39018535972343e301,-1.3906062453909212e301,-1.3910271310584126e301,-1.3914480167259035e301,-1.3918689023933946e301,-1.392289788060886e301,-1.3927106737283772e301,-1.3931315593958685e301,-1.3935524450633597e301,-1.3939733307308506e301,-1.394394216398342e301,-1.3948151020658331e301,-1.3952359877333245e301,-1.3956568734008157e301,-1.3960777590683066e301,-1.396498644735798e301,-1.396919530403289e301,-1.3973404160707802e301,-1.3977613017382716e301,-1.3981821874057628e301,-1.398603073073254e301,-1.399023958740745e301,-1.3994448444082362e301,-1.3998657300757276e301,-1.4002866157432188e301,-1.4007075014107101e301,-1.401128387078201e301,-1.4015492727456922e301,-1.4019701584131836e301,-1.4023910440806747e301,-1.402811929748166e301,-1.403232815415657e301,-1.4036537010831482e301,-1.4040745867506396e301,-1.4044954724181307e301,-1.404916358085622e301,-1.4053372437531132e301,-1.4057581294206041e301,-1.4061790150880955e301,-1.4065999007555867e301,-1.407020786423078e301,-1.4074416720905692e301,-1.40786255775806e301,-1.4082834434255515e301,-1.4087043290930426e301,-1.409125214760534e301,-1.4095461004280252e301,-1.4099669860955163e301,-1.4103878717630075e301,-1.4108087574304986e301,-1.41122964309799e301,-1.4116505287654812e301,-1.4120714144329723e301,-1.4124923001004635e301,-1.4129131857679546e301,-1.413334071435446e301,-1.4137549571029371e301,-1.4141758427704283e301,-1.4145967284379197e301,-1.4150176141054106e301,-1.415438499772902e301,-1.415859385440393e301,-1.4162802711078843e301,-1.4167011567753756e301,-1.4171220424428665e301,-1.417542928110358e301,-1.417963813777849e301,-1.4183846994453402e301,-1.4188055851128316e301,-1.4192264707803228e301,-1.419647356447814e301,-1.420068242115305e301,-1.4204891277827962e301,-1.4209100134502876e301,-1.4213308991177787e301,-1.4217517847852699e301,-1.422172670452761e301,-1.4225935561202522e301,-1.4230144417877436e301,-1.4234353274552347e301,-1.423856213122726e301,-1.424277098790217e301,-1.4246979844577081e301,-1.4251188701251995e301,-1.4255397557926907e301,-1.425960641460182e301,-1.426381527127673e301,-1.4268024127951641e301,-1.4272232984626555e301,-1.4276441841301467e301,-1.428065069797638e301,-1.4284859554651292e301,-1.42890684113262e301,-1.4293277268001115e301,-1.4297486124676026e301,-1.430169498135094e301,-1.4305903838025852e301,-1.431011269470076e301,-1.4314321551375675e301,-1.4318530408050586e301,-1.43227392647255e301,-1.4326948121400411e301,-1.4331156978075323e301,-1.4335365834750234e301,-1.4339574691425146e301,-1.434378354810006e301,-1.434799240477497e301,-1.4352201261449883e301,-1.4356410118124794e301,-1.4360618974799705e301,-1.436482783147462e301,-1.436903668814953e301,-1.4373245544824442e301,-1.4377454401499356e301,-1.4381663258174265e301,-1.438587211484918e301,-1.439008097152409e301,-1.4394289828199002e301,-1.4398498684873916e301,-1.4402707541548825e301,-1.440691639822374e301,-1.441112525489865e301,-1.4415334111573562e301,-1.4419542968248476e301,-1.4423751824923387e301,-1.4427960681598299e301,-1.443216953827321e301,-1.4436378394948121e301,-1.4440587251623035e301,-1.4444796108297947e301,-1.4449004964972858e301,-1.445321382164777e301,-1.4457422678322681e301,-1.4461631534997595e301,-1.4465840391672507e301,-1.447004924834742e301,-1.447425810502233e301,-1.447846696169724e301,-1.4482675818372155e301,-1.4486884675047066e301,-1.449109353172198e301,-1.449530238839689e301,-1.44995112450718e301,-1.4503720101746715e301,-1.4507928958421626e301,-1.451213781509654e301,-1.4516346671771451e301,-1.452055552844636e301,-1.4524764385121274e301,-1.4528973241796186e301,-1.45331820984711e301,-1.453739095514601e301,-1.454159981182092e301,-1.4545808668495834e301,-1.4550017525170746e301,-1.455422638184566e301,-1.455843523852057e301,-1.4562644095195482e301,-1.4566852951870394e301,-1.4571061808545305e301,-1.457527066522022e301,-1.457947952189513e301,-1.4583688378570042e301,-1.4587897235244954e301,-1.4592106091919865e301,-1.459631494859478e301,-1.460052380526969e301,-1.4604732661944602e301,-1.4608941518619516e301,-1.4613150375294425e301,-1.4617359231969339e301,-1.462156808864425e301,-1.4625776945319162e301,-1.4629985801994075e301,-1.4634194658668984e301,-1.4638403515343898e301,-1.464261237201881e301,-1.4646821228693721e301,-1.4651030085368635e301,-1.4655238942043547e301,-1.4659447798718458e301,-1.466365665539337e301,-1.466786551206828e301,-1.4672074368743195e301,-1.4676283225418106e301,-1.4680492082093018e301,-1.468470093876793e301,-1.468890979544284e301,-1.4693118652117755e301,-1.4697327508792666e301,-1.470153636546758e301,-1.470574522214249e301,-1.47099540788174e301,-1.4714162935492314e301,-1.4718371792167226e301,-1.472258064884214e301,-1.4726789505517049e301,-1.473099836219196e301,-1.4735207218866874e301,-1.4739416075541786e301,-1.47436249322167e301,-1.474783378889161e301,-1.475204264556652e301,-1.4756251502241434e301,-1.4760460358916345e301,-1.476466921559126e301,-1.476887807226617e301,-1.477308692894108e301,-1.4777295785615994e301,-1.4781504642290905e301,-1.4785713498965816e301,-1.478992235564073e301,-1.4794131212315642e301,-1.4798340068990553e301,-1.4802548925665465e301,-1.4806757782340376e301,-1.481096663901529e301,-1.4815175495690202e301,-1.4819384352365113e301,-1.4823593209040025e301,-1.4827802065714936e301,-1.483201092238985e301,-1.4836219779064761e301,-1.4840428635739675e301,-1.4844637492414584e301,-1.4848846349089496e301,-1.485305520576441e301,-1.485726406243932e301,-1.4861472919114235e301,-1.4865681775789144e301,-1.4869890632464055e301,-1.487409948913897e301,-1.487830834581388e301,-1.4882517202488795e301,-1.4886726059163706e301,-1.4890934915838615e301,-1.489514377251353e301,-1.489935262918844e301,-1.4903561485863354e301,-1.4907770342538266e301,-1.4911979199213175e301,-1.4916188055888089e301,-1.4920396912563e301,-1.4924605769237914e301,-1.4928814625912826e301,-1.4933023482587737e301,-1.4937232339262649e301,-1.494144119593756e301,-1.4945650052612474e301,-1.4949858909287385e301,-1.4954067765962297e301,-1.4958276622637208e301,-1.496248547931212e301,-1.4966694335987034e301,-1.4970903192661945e301,-1.4975112049336857e301,-1.497932090601177e301,-1.498352976268668e301,-1.4987738619361593e301,-1.4991947476036505e301,-1.4996156332711416e301,-1.500036518938633e301,-1.500457404606124e301,-1.5008782902736153e301,-1.5012991759411065e301,-1.5017200616085976e301,-1.502140947276089e301,-1.5025618329435801e301,-1.5029827186110713e301,-1.5034036042785624e301,-1.5038244899460536e301,-1.504245375613545e301,-1.504666261281036e301,-1.5050871469485273e301,-1.5055080326160184e301,-1.5059289182835095e301,-1.506349803951001e301,-1.506770689618492e301,-1.5071915752859835e301,-1.5076124609534744e301,-1.5080333466209655e301,-1.508454232288457e301,-1.508875117955948e301,-1.5092960036234394e301,-1.5097168892909303e301,-1.5101377749584215e301,-1.510558660625913e301,-1.510979546293404e301,-1.5114004319608954e301,-1.5118213176283866e301,-1.5122422032958775e301,-1.5126630889633689e301,-1.51308397463086e301,-1.5135048602983514e301,-1.5139257459658425e301,-1.5143466316333334e301,-1.5147675173008248e301,-1.515188402968316e301,-1.5156092886358074e301,-1.5160301743032985e301,-1.5164510599707897e301,-1.5168719456382808e301,-1.517292831305772e301,-1.5177137169732633e301,-1.5181346026407545e301,-1.5185554883082456e301,-1.5189763739757368e301,-1.519397259643228e301,-1.5198181453107193e301,-1.5202390309782105e301,-1.5206599166457016e301,-1.521080802313193e301,-1.521501687980684e301,-1.5219225736481753e301,-1.5223434593156664e301,-1.5227643449831576e301,-1.523185230650649e301,-1.5236061163181399e301,-1.5240270019856313e301,-1.5244478876531224e301,-1.5248687733206136e301,-1.525289658988105e301,-1.525710544655596e301,-1.5261314303230872e301,-1.5265523159905784e301,-1.5269732016580695e301,-1.527394087325561e301,-1.527814972993052e301,-1.5282358586605432e301,-1.5286567443280344e301,-1.5290776299955255e301,-1.529498515663017e301,-1.529919401330508e301,-1.5303402869979994e301,-1.5307611726654903e301,-1.5311820583329815e301,-1.5316029440004729e301,-1.532023829667964e301,-1.5324447153354554e301,-1.5328656010029463e301,-1.5332864866704374e301,-1.5337073723379288e301,-1.53412825800542e301,-1.5345491436729114e301,-1.5349700293404025e301,-1.5353909150078934e301,-1.5358118006753848e301,-1.536232686342876e301,-1.5366535720103673e301,-1.5370744576778585e301,-1.5374953433453494e301,-1.5379162290128408e301,-1.538337114680332e301,-1.5387580003478233e301,-1.5391788860153145e301,-1.5395997716828056e301,-1.5400206573502968e301,-1.540441543017788e301,-1.5408624286852793e301,-1.5412833143527704e301,-1.5417042000202616e301,-1.5421250856877527e301,-1.5425459713552439e301,-1.5429668570227353e301,-1.5433877426902264e301,-1.5438086283577176e301,-1.544229514025209e301,-1.5446503996926998e301,-1.5450712853601912e301,-1.5454921710276824e301,-1.5459130566951735e301,-1.546333942362665e301,-1.5467548280301558e301,-1.5471757136976472e301,-1.5475965993651384e301,-1.5480174850326295e301,-1.548438370700121e301,-1.548859256367612e301,-1.5492801420351032e301,-1.5497010277025943e301,-1.5501219133700855e301,-1.5505427990375769e301,-1.550963684705068e301,-1.551384570372559e301,-1.5518054560400503e301,-1.5522263417075415e301,-1.5526472273750328e301,-1.553068113042524e301,-1.5534889987100154e301,-1.5539098843775063e301,-1.5543307700449974e301,-1.5547516557124888e301,-1.55517254137998e301,-1.5555934270474713e301,-1.5560143127149623e301,-1.5564351983824534e301,-1.5568560840499448e301,-1.557276969717436e301,-1.5576978553849273e301,-1.5581187410524185e301,-1.5585396267199094e301,-1.5589605123874008e301,-1.559381398054892e301,-1.559802283722383e301,-1.5602231693898744e301,-1.5606440550573653e301,-1.5610649407248567e301,-1.5614858263923479e301,-1.561906712059839e301,-1.5623275977273304e301,-1.5627484833948216e301,-1.5631693690623127e301,-1.5635902547298039e301,-1.564011140397295e301,-1.5644320260647864e301,-1.5648529117322775e301,-1.5652737973997687e301,-1.5656946830672598e301,-1.566115568734751e301,-1.5665364544022424e301,-1.5669573400697335e301,-1.567378225737225e301,-1.5677991114047158e301,-1.568219997072207e301,-1.5686408827396983e301,-1.5690617684071895e301,-1.5694826540746809e301,-1.5699035397421718e301,-1.570324425409663e301,-1.5707453110771543e301,-1.5711661967446455e301,-1.5715870824121368e301,-1.572007968079628e301,-1.572428853747119e301,-1.5728497394146103e301,-1.5732706250821014e301,-1.5736915107495928e301,-1.574112396417084e301,-1.5745332820845749e301,-1.5749541677520663e301,-1.5753750534195574e301,-1.5757959390870488e301,-1.57621682475454e301,-1.576637710422031e301,-1.5770585960895222e301,-1.5774794817570134e301,-1.5779003674245048e301,-1.578321253091996e301,-1.578742138759487e301,-1.5791630244269782e301,-1.5795839100944694e301,-1.5800047957619607e301,-1.580425681429452e301,-1.580846567096943e301,-1.5812674527644344e301,-1.5816883384319253e301,-1.5821092240994167e301,-1.5825301097669079e301,-1.582950995434399e301,-1.5833718811018904e301,-1.5837927667693813e301,-1.5842136524368727e301,-1.5846345381043638e301,-1.585055423771855e301,-1.5854763094393464e301,-1.5858971951068375e301,-1.5863180807743287e301,-1.5867389664418198e301,-1.587159852109311e301,-1.5875807377768023e301,-1.5880016234442935e301,-1.5884225091117846e301,-1.5888433947792758e301,-1.589264280446767e301,-1.5896851661142583e301,-1.5901060517817495e301,-1.5905269374492408e301,-1.5909478231167318e301,-1.591368708784223e301,-1.5917895944517143e301,-1.5922104801192054e301,-1.5926313657866968e301,-1.5930522514541877e301,-1.5934731371216789e301,-1.5938940227891703e301,-1.5943149084566614e301,-1.5947357941241528e301,-1.595156679791644e301,-1.5955775654591348e301,-1.5959984511266262e301,-1.5964193367941174e301,-1.5968402224616088e301,-1.5972611081291e301,-1.5976819937965908e301,-1.5981028794640822e301,-1.5985237651315734e301,-1.5989446507990647e301,-1.599365536466556e301,-1.599786422134047e301,-1.6002073078015382e301,-1.6006281934690293e301,-1.6010490791365207e301,-1.6014699648040119e301,-1.601890850471503e301,-1.6023117361389942e301,-1.6027326218064853e301,-1.6031535074739767e301,-1.6035743931414678e301,-1.603995278808959e301,-1.6044161644764504e301,-1.6048370501439413e301,-1.6052579358114327e301,-1.6056788214789238e301,-1.606099707146415e301,-1.6065205928139063e301,-1.6069414784813972e301,-1.6073623641488886e301,-1.6077832498163798e301,-1.608204135483871e301,-1.6086250211513623e301,-1.6090459068188535e301,-1.6094667924863446e301,-1.6098876781538358e301,-1.610308563821327e301,-1.6107294494888183e301,-1.6111503351563094e301,-1.6115712208238006e301,-1.6119921064912917e301,-1.6124129921587829e301,-1.6128338778262743e301,-1.6132547634937654e301,-1.6136756491612568e301,-1.6140965348287477e301,-1.6145174204962389e301,-1.6149383061637302e301,-1.6153591918312214e301,-1.6157800774987128e301,-1.6162009631662037e301,-1.6166218488336948e301,-1.6170427345011862e301,-1.6174636201686774e301,-1.6178845058361687e301,-1.61830539150366e301,-1.6187262771711508e301,-1.6191471628386422e301,-1.6195680485061333e301,-1.6199889341736247e301,-1.6204098198411159e301,-1.620830705508607e301,-1.6212515911760982e301,-1.6216724768435893e301,-1.6220933625110807e301,-1.6225142481785718e301,-1.622935133846063e301,-1.6233560195135541e301,-1.6237769051810453e301,-1.6241977908485367e301,-1.6246186765160278e301,-1.625039562183519e301,-1.6254604478510103e301,-1.6258813335185013e301,-1.6263022191859926e301,-1.6267231048534838e301,-1.627143990520975e301,-1.6275648761884663e301,-1.6279857618559572e301,-1.6284066475234486e301,-1.6288275331909398e301,-1.629248418858431e301,-1.6296693045259223e301,-1.6300901901934134e301,-1.6305110758609046e301,-1.6309319615283957e301,-1.6313528471958869e301,-1.6317737328633783e301,-1.6321946185308694e301,-1.6326155041983603e301,-1.6330363898658517e301,-1.6334572755333429e301,-1.6338781612008342e301,-1.6342990468683254e301,-1.6347199325358168e301,-1.6351408182033077e301,-1.6355617038707988e301,-1.6359825895382902e301,-1.6364034752057814e301,-1.6368243608732727e301,-1.6372452465407637e301,-1.6376661322082548e301,-1.6380870178757462e301,-1.6385079035432373e301,-1.6389287892107285e301,-1.6393496748782199e301,-1.6397705605457108e301,-1.6401914462132022e301,-1.6406123318806933e301,-1.6410332175481845e301,-1.6414541032156758e301,-1.6418749888831667e301,-1.6422958745506581e301,-1.6427167602181493e301,-1.6431376458856404e301,-1.6435585315531318e301,-1.643979417220623e301,-1.644400302888114e301,-1.6448211885556053e301,-1.6452420742230964e301,-1.6456629598905878e301,-1.646083845558079e301,-1.64650473122557e301,-1.6469256168930612e301,-1.6473465025605524e301,-1.6477673882280438e301,-1.648188273895535e301,-1.6486091595630263e301,-1.6490300452305172e301,-1.6494509308980084e301,-1.6498718165654997e301,-1.650292702232991e301,-1.6507135879004823e301,-1.6511344735679732e301,-1.6515553592354643e301,-1.6519762449029557e301,-1.6523971305704469e301,-1.6528180162379382e301,-1.6532389019054294e301,-1.6536597875729203e301,-1.6540806732404117e301,-1.6545015589079028e301,-1.6549224445753942e301,-1.6553433302428854e301,-1.6557642159103763e301,-1.6561851015778677e301,-1.6566059872453588e301,-1.6570268729128502e301,-1.6574477585803413e301,-1.6578686442478325e301,-1.6582895299153236e301,-1.6587104155828148e301,-1.6591313012503062e301,-1.6595521869177973e301,-1.6599730725852885e301,-1.6603939582527796e301,-1.6608148439202708e301,-1.6612357295877621e301,-1.6616566152552533e301,-1.6620775009227444e301,-1.6624983865902358e301,-1.6629192722577267e301,-1.663340157925218e301,-1.6637610435927093e301,-1.6641819292602004e301,-1.6646028149276918e301,-1.6650237005951827e301,-1.665444586262674e301,-1.6658654719301652e301,-1.6662863575976564e301,-1.6667072432651478e301,-1.667128128932639e301,-1.66754901460013e301,-1.6679699002676212e301,-1.6683907859351124e301,-1.6688116716026037e301,-1.669232557270095e301,-1.669653442937586e301,-1.6700743286050772e301,-1.6704952142725683e301,-1.6709160999400597e301,-1.6713369856075509e301,-1.6717578712750422e301,-1.6721787569425332e301,-1.6725996426100243e301,-1.6730205282775157e301,-1.6734414139450068e301,-1.6738622996124982e301,-1.6742831852799891e301,-1.6747040709474803e301,-1.6751249566149717e301,-1.6755458422824628e301,-1.6759667279499542e301,-1.6763876136174453e301,-1.6768084992849362e301,-1.6772293849524276e301,-1.6776502706199188e301,-1.6780711562874102e301,-1.6784920419549013e301,-1.6789129276223922e301,-1.6793338132898836e301,-1.6797546989573748e301,-1.6801755846248661e301,-1.6805964702923573e301,-1.6810173559598484e301,-1.6814382416273396e301,-1.6818591272948307e301,-1.682280012962322e301,-1.6827008986298133e301,-1.6831217842973044e301],"cosine":[0.08963273688692398,0.07220567585712773,-0.9895726807480308,0.8193323123501793,0.9585081809656882,0.9994750897656259,0.3426108761221838,0.6219035590110039,0.837475865956305,0.9672402108001771,0.9979009101240122,-0.3806191180989816,-0.7652355751255792,-0.8503664647509315,-0.22647192657889348,0.9952791136811678,0.40273165211852563,-0.7439785203898401,0.8711072507775419,0.18658290354929347,0.9916124528526636,0.43217352248797414,-0.710258173875107,-0.890400207539686,0.17117097087555194,0.9894662549258407,0.4462462487459943,-0.6991444153283376,-0.8974209329432885,0.13916257209756755,0.9811610282599421,0.48966571702722883,-0.6756144327637656,-0.9112424838311215,0.10700807760291153,0.9743872366151898,0.5176556847144145,-0.6513751763386968,-0.9303736402062301,0.07474124383806659,0.966590513304952,0.5451022068680231,-0.626452092920673,-0.9360021567265145,0.008933347112803627,0.9624568098987651,0.5856250591734317,-0.6141656837899365,-0.9414009974590419,-0.006731238812969693,0.9580869392739376,0.5982502596611868,-0.6017285709602564,-0.9568323243197328,-0.02239417303039401,0.9428585804155649,0.6107286617696048,-0.5337665339001016,-0.9612675570543786,-0.07147499345669428,0.9253539267522136,0.6488867503276268,-0.5204549711364198,-0.9654669143887114,-0.08709027648259032,0.9193020611310877,0.6607257286774236,-0.5070156993662694,-0.9770985426554585,-0.10268418933565784,0.8988609737571717,0.6724025784454274,-0.46406518416570147,-0.9863712123436895,-0.15142075929946347,0.8918861465476204,0.7311902207811835,-0.4501329586078238,-0.9888274929390773,-0.16688567981107497,0.8685944408222611,0.7417861573639207,-0.40572716813522186,-0.9860159023177704,-0.21511555055061682,0.8607259336026493,0.7522000747933735,-0.3913604787768538,-0.9998403906187243,-0.23038655420461457,0.8526462218410152,0.762429417707172,-0.31408658013622937,-0.9999975752107695,-0.24560102570967937,0.8443572881333931,0.7724716760337581,-0.2991766227959318,-0.9999093808480856,-0.26075523174564413,0.8358611664146036,0.8222420316639518,-0.28419325363064507,-0.9995758291717655,-0.2758454537802552,0.7877110473761562,0.8310561937262044,-0.26914014925274815,-0.9989970020285696,-0.35422416290256414,0.7779646053265088,0.8396664315938462,-0.25402100338621525,-0.9981730414508414,-0.4301865745765433,0.7680272666723061,0.8480706324905861,-0.23883952596025132,-0.989782650620731,-0.44427441823601016,0.7125597795114823,0.8562667341973924,-0.1578919704985043,-0.9874277563416689,-0.4582532460387769,0.7014822340529725,0.8642527255585187,-0.14240496834644528,-0.9848305674843719,-0.4721196278663716,0.6902325591997323,0.9028179619144623,-0.1268830229273751,-0.9819917213458724,-0.4858701611922653,0.628167080687209,0.9094431241188418,-0.11132994300927157,-0.9789119145209575,-0.4995014719167818,0.6159021002873817,0.9406559445663049,-0.09574954499988174,-0.9755919027312393,-0.5692870096905072,0.6034859901075126,0.9458563370807196,-0.08014565201025368,-0.9541435073063479,-0.582095241554355,0.5909217968071269,0.950824635793039,0.06927827793207149,-0.9493373975187384,-0.5947606391499344,0.5782126033823193,0.9555596215843621,0.08489625812556308,-0.9442983397479907,-0.6072800946476864,0.5089126052546731,0.9600601325860076,0.10049340651346265,-0.8847188049870753,-0.6707709300739468,0.43614112110692177,0.9444547192470539,0.04935763855647883,-0.90745059982261,-0.6318689278413135,0.48169826555230444,0.9683533706931124,0.13160990503831319,-0.8696835642374265,-0.6936739513031035,0.407738959144939,0.9993616134252065,0.08061962443082979,-0.8938440712834484,-0.6558376082284886,0.4540111592395157,0.9962161929394463,0.16259723397059453,-0.8537947656068268,-0.802699240356656,0.3789366185245793,0.9999903008548371,0.11180248553081228,-0.8793602723407068,-0.7710713137502238,0.42587846004795554,0.9984497139545289,0.1934249805488065,-0.8370680032836078,-0.8209866967448414,0.349762367533111,0.9996375398160036,0.39968002854467294,-0.8640134182345509,-0.7906386919166287,0.3973277790399632,0.9997032985224664,0.35216391726972646,-0.8195196938822614,-0.8384683891816557,0.32024483947220683,0.9983036765288451,0.42819754044156616,-0.8478185712575301,-0.8094300914234138,0.24097738831688184,0.9999757163026713,0.3813087942613734,-0.8011670603312213,-0.8551271601204169,0.16006613894145796,0.9959900201241396,0.45629479444205046,-0.7490504848319555,-0.827427069301432,0.21045785428166122,0.9992666999285373,0.41007943269108643,-0.691824351700204,-0.8709466596773209,0.1290670911119193,0.9926988413584463,0.4839442142717528,-0.6298790221082003,-0.9085251923507501,0.17973176470426744,0.9975769452698481,0.43844759538596556,-0.668866584411369,-0.8859113616781649,0.09794136935485089,0.9593393909396002,0.5111186631867243,-0.6052404826021095,-0.9211676234692135,0.01548287875490467,0.9725473163569613,0.4663854401861356,-0.6452523526705126,-0.9501402513041989,0.06671952225849626,0.9500271479878846,0.5377914706070138,-0.5800079249898484,-0.9726316118931291,-0.01584535061610135,0.9647807111338599,0.4938655472706564,-0.6210048328540018,-0.9594416499804959,0.03543219275408097,0.9397824933031802,0.6691360287462114,-0.5542061139666375,-0.9794326170790006,-0.04715802844117622,0.9083736624246886,0.630160544710767,-0.5961478228838442,-0.9678013969856224,0.004110088041063077,0.9286154815836591,0.6920860668983366,-0.5278603729260043,-0.9852723502993598,-0.21081223748181913,0.8948293103691151,0.6541735920140782,-0.5707057188710267,-0.9752112875791047,-0.16042397057612062,0.916537072782173,0.7143568516518818,-0.5009965591059369,-0.9901450801013909,-0.24132920572318414,0.8804067209391911,0.7696672120958545,-0.427869911675776,-0.9816640492646312,-0.19126392493760472,0.9035591213495195,0.7359265251672565,-0.3518246011952809,-0.9940460241055077,-0.2716093194879105,0.7904166773809509,0.7892884207915116,-0.2733793615875297,-0.9871533489277027,-0.22191616179218698,0.8207796650697176,0.7567739177160958,-0.32233025951955435,-0.9969713536990574,-0.3016228601164733,0.7708404312457737,0.8081349760619304,-0.24311408203476037,-0.9904010404135333,-0.2523505972571636,0.8024829886553022,0.7768785684584584,-0.29251956423592307,-0.9961846212913191,-0.33134037057968146,0.7505076376120561,0.8261883808048986,-0.21261019622423924,-0.9855852507125555,-0.2825373612127442,0.7833987089016234,0.8698624486554795,-0.26242177328939414,-0.9998846456444784,-0.48201592042580255,0.7294382522625235,0.8434309163621252,-0.04899556082709571,-0.9798021504946399,-0.43646731302281455,0.5654547277955173,0.8147814653793841,-0.10013271873546475,-0.9887649461122288,-0.6195618449591948,0.6069920399354982,0.783989433416063,-0.15100656375833943,-0.995127647032256,-0.5785083374377468,0.6469331822368295,0.8990445208692783,-0.20148331605733782,-0.9507122912258366,-0.5359335619278032,0.4680119794212143,0.875416501065425,-0.2514302400045246,-0.9653576657916124,-0.491949474712289,0.5126990038094282,0.9588185144874236,-0.03763289856707917,-0.9774644983530983,-0.6674978823908035,0.5560378149883333,0.9974472687756637,-0.08881025035816537,-0.9870009523132639,-0.6284491055672158,0.5979144475371407,0.9924752632083335,-0.139754063266271,-0.9294303324505326,-0.5877477345719824,0.4117565993314023,0.9848934061495284,-0.19033037346274623,-0.9471242790102234,-0.5455007993107691,0.45793100355523236,0.9747216351449854,0.28865214093830494,-0.9623276307875354,-0.7128140782823149,0.5029012146299479,0.9999612036074953,0.23919153503199636,-0.975000408458265,-0.6759232934781755,0.5465489771422442,0.9981948791074006,0.1891019417769922,-0.9045004816626592,-0.6372550745343638,0.3538851286564427,0.9938036625917612,0.39563889446034567,-0.9251735537993877,-0.5969111049009612,0.40136568424241204,0.9867991013740445,0.34803831246401246,-0.943413753633132,-0.755332572515266,0.4477907930394501,0.9985504220187842,0.29952251540636043,-0.6805117495650588,-0.7207445712168496,0.49303837377870585,0.9999967111776539,0.2502190823112755,-0.7171794115706941,-0.6842612720063403,0.29462470531970675,0.9988133701533992,0.45237126224477264,-0.7519611507464825,-0.8249456856429891,0.34322505732175085,0.9950035107055285,0.4060584793137609,-0.7847655036804589,-0.7948864855828409,0.3909228513851043,0.993220461142018,0.3586779092376699,-0.6332937327195867,-0.9066761153949034,0.43759265953831944,0.9978736874648141,0.3103541458034321,-0.6721342048813118,-0.8838597966399495,0.23420791870138116,0.9999028663900813,0.5073281322251761,-0.7092072068378752,-0.963709606372224,0.2837373171195416,0.9993026619101216,0.4624849199512183,-0.7444152499837302,-0.9487576623287477,0.33252058887064767,0.9839922403737679,0.41642553937275545,-0.5835901211301738,-0.9313108282946914,0.12215325765397497,0.9918341405581824,0.3692711100255132,-0.6244509596948464,-0.9114149831423181,-0.0939181764521773,0.9970678751721388,0.5602938059031989,-0.6636697177675134,-0.9785344473522112,-0.042758132789184944,0.9573490621049807,0.5170961680061659,-0.7011432641790222,-0.966683371983815,0.008514349320153972,0.9709019792688034,0.4725387539461037,-0.5315959949457916,-0.9522902684826469,-0.20650483501603456,0.9819017748863225,0.6508360502719349,-0.5743168264874293,-0.9353929855125797,-0.15607512036446003,0.990319523467843,0.6110603999645091,-0.6155274122005292,-0.9895186691164378,-0.10523498451573797,0.8117969052989298,0.5696778815009206,-0.4318465803176553,-0.9808149763377934,-0.05411811866529687,0.840664134016726,0.5267973159586681,-0.47751542428443194,-0.9695320944108157,-0.2673679164391312,0.8673207196834295,0.6970995810558375,-0.5219285751488512,-0.9995205609309219,-0.21761948992333513,0.8916965651062547,0.6594286621935119,-0.5649692423647691,-0.9966191600368034,-0.16729880274633688,0.7736386428327611,0.8055329942968125,-0.37452096157962805,-0.9910970106991961,-0.11653818014116683,0.8051031638279881,0.7740978397775227,-0.42156066828469074,-0.9829686341764315,-0.3271816138979407,0.8344505542802177,0.892024504907653,-0.4674918226865823,-0.9994978497277056,-0.2783097315595958,0.8616036411519126,0.8676813764916357,-0.51219364243811,-0.9998080516188017,-0.22870599514394657,0.7324439502789668,0.8410565594345926,-0.053394134329855944,-0.9974891194332753,-0.4325004078628717,0.7663822694382838,0.8122200673893394,-0.10451395006749864,-0.9925471511252492,-0.3857111664839968,0.7983052800220827,0.9185765027964405,-0.1553589318636063,-0.9955522407070825,-0.3379076440439772,0.6502854211736843,0.8971073295404517,-0.20579537577965892,-0.9990728278817027,-0.28921554654170567,0.6883745113965984,0.8732790880146446,0.0092393534184267,-0.9999662143525894,-0.4881101816565388,0.7246534252737021,0.9575582969489259,-0.04203375201038218,-0.9783847730281557,-0.4427268533888392,0.7590267623642982,0.9415232085288486,-0.09319632385266927,-0.9111164010558181,-0.39617931339570317,0.6014389893913321,0.9230122541188283,-0.14411382302279666,-0.9310465082184913,-0.3485899648958092,0.6416032929465683,0.9020741108433905,0.07183657791774961,-0.9485282993291839,-0.5418041870803227,0.6800804115682285,0.9737281517071367,0.020611423003977246,-0.9635158035911466,-0.4980048955280229,0.7167691643310596,0.9607745592979798,-0.030667932508099655,-0.8835204289300341,-0.6726708636436767,0.5502319885497975,0.9452944767993379,0.1847752347508101,-0.9063700384068486,-0.6338546773651274,0.5923138658198241,0.9273286112372647,0.1341518532815138,-0.9268362220349247,-0.7852146674051754,0.6328381715478317,0.9860762513288853,0.08317570088950545,-0.8245356716750062,-0.7524388999875631,0.6716983414458567,0.9762549960799354,0.03198082644459756,-0.8524567551346283,-0.7176844900201828,0.24951704776388434,0.9638665427838092,0.2459524223911166,-0.8781361852087404,-0.8505274493159893,0.2988306908682813,0.9489434685983573,0.19594060023645496,-0.9015064342708478,-0.8224482994486333,0.3473585171839153,0.9945541311445696,0.1454135250707364,-0.7874876692825572,-0.7922064075961135,0.1377969987679848,0.9879037601930623,0.09450406485286081,-0.8180473005103167,-0.7598812990115847,0.18838994088634076,0.9786555591519275,0.3061642790692335,-0.8464557627906184,-0.8817910862327916,0.23848748550067062,0.9617884417044185,0.2569603060641757,-0.8726383521279056,-0.8564539299113813,0.2879578941622917,0.974559390157538,0.20708062026012725,-0.7473488811921649,-0.8288646090784514,0.0755058974681951,0.984767599394658,0.15665638721578354,-0.7804271176482387,-0.7990956736834001,0.1265234282280586,0.9923862255123679,0.3651744811540405,-0.8114531126505584,-0.909593808922981,0.1772082480679541,0.9427565728442618,0.5566402847717603,-0.8403452790378787,-0.8870980911590886,0.22742707421746106,0.9586123390995399,0.5133213591618133,-0.7042768468765116,-0.8622696258072996,0.2770478493012624,0.9995386091911685,0.6857010432720639,-0.5353213049121328,-0.9509368554046785,0.06416032772760956,0.9827263927822737,0.4227514213509083,-0.7732656155942071,-0.9951988700384767,-0.151723242562302,0.9200245082278419,0.607568069552281,-0.6189925693252888,-0.9142605088827033,-0.3605219016273947,0.9965103800854358,0.3277376726515532,-0.4358148718741935,-0.9799468772772886,-0.04971970979937509,0.9553122373206373,0.5230485588119402,-0.23228624054151736,-0.8679737847272947,-0.263121326909885,0.869504565527216,0.22927886341607895,-0.5256803658955571,-0.9543940354037972,-0.46423615650497796,0.9805580677759085,0.4330309497484544,-0.3306562070300283,-0.9962476336667387,-0.1629549154418584,0.9155083114286351,0.6165621010101403,-0.6100200969843059,-0.9188089467010778,-0.37110690097194077,0.8077077213757597,0.3384614750912849,-0.4255504343987552,-0.9821496999685445,-0.5619295742364737,0.9518885632450604,0.5327081006752625,-0.22120914899206529,-0.8735656688225344,-0.2740767031734742,0.8638308458052607,0.9671873386649972,-0.5159714286606059,-0.957727761878215,-0.47427946298563983,0.7354354401350153,0.8386658874477397,-0.3199013940883461,-0.9971675298908799,-0.17416550964957447,0.9108736910813484,0.9360899577382515,-0.10889315400758603,-0.923238534025014,-0.38164389660600007,0.8009500631384309,0.9898021079760622,-0.4152309507902569,-0.98422547886264,-0.5713009327839703,0.9483417597345797,0.8951527358631932,-0.21010344342353293,-0.9992527538093248,-0.28499662685271154,0.8580453871592301,0.9700142961609016,-0.5061957490853317,-0.9609376036011342,-0.48426142009777384,0.7276814857582151,0.8448059903921092,-0.30910520101100525,-0.9979584397197633,-0.6609130058140781,0.9061212466870228,0.9400300429536397,-0.09758058949782578,-0.9275486978750631,-0.3921315255398614,0.7940887997812713,0.9913581881346357,-0.4048577559026241,-0.9861739454517979,-0.5805983919657955,0.6449753588494198,0.900164532039428,-0.19897056038984445,-0.833359883063466,-0.29587968542507725,0.8521489379543018,0.9727157796079028,0.016207820394932234,-0.9646852858354664,-0.4941807366474463,0.7198334037559859,0.9998448174403014,-0.29826902431562763,-0.8855748191380745,-0.6694053851444713,0.9012515929875673,0.9438485326667276,-0.0862554026672326,-0.7651113015134203,-0.40256843116953345,0.7871248188277922,0.992786033352476,0.12978602553365817,-0.9284809112323421,-0.5898207491297277,0.6362422426559651,0.9050598894281512,-0.18781193996040477,-0.8270196929458805,-0.7495306314316259,0.8461422609125913,0.9752914395615983,0.027578430809416618,-0.6869397303803909,-0.5040361295434544,0.7118922092995769,0.999980506217062,-0.28739426569182747,-0.8802347508237623,-0.6778111750252408,0.5443994387771207,0.9475449329452436,-0.07491905846024274,-0.7577386661144049,-0.8199349591633868,0.7800590210883116,0.99408545893383,0.14105459020505884,-0.9241970975987384,-0.5989668113382007,0.14215798538050362,0.994205890627784,-0.17662902553382245,-0.8205725255292932,-0.7570108364715797,-0.07380751740780532,0.9777409428532046,0.038945473877120905,-0.6786302679245342,-0.5138263239632983,0.24276242605047726,0.9999868447322483,0.25270136448187164,-0.8747808216946064,-0.6861292881440709,0.02869261676177407,0.975537079544953,-0.06357302326453011,-0.7502680151100276,-0.8263925660305519,0.3408150354131962,0.9952562967943827,0.15230490907264047,-0.5907204821901423,-0.608035395522613,0.13089114446394845,0.9929190598704356,0.36107076852196285,-0.8140192147727526,-0.7643931200529617,-0.08514487619582284,0.9800639726326535,0.050307479239388116,-0.670233022754792,-0.8850565283732302,0.23171379153368898,0.9998638321659555,0.26368904992448,-0.4951494409238647,-0.6943586485298793,0.01732229095494055,0.9729737688623259,-0.05221876472132498,-0.7427003148497877,-0.832743276719327,-0.19787809619618546,0.9962983954829977,0.6441231564551846,-0.5815055495934147,-0.617025328636361,0.11960737241356723,0.9915037922692509,0.7934108342200947,-0.8073606083652439,-0.7716765272568444,-0.09647122125713352,0.9404096489938402,0.5624162802328257,-0.6617490810781979,-0.8902933016351344,0.22063518419307168,0.9996114844302015,0.7269164941004511,-0.48523633250582837,-0.7024981916919963,0.005949724461561487,0.970284601314765,0.8574724108282138,-0.735036544236776,-0.8389862697476094,-0.20901356527747036,0.9972116202013098,0.6527810692479515,-0.5722153976354304,-0.936296808886844,0.1083081288166791,0.9899602708930328,0.8002822036550202,-0.3826739198227563,-0.7788601159542354,-0.10778508749748077,0.9364814582315741,0.571783844584044,-0.6531795403162195,-0.8954149129806528,-0.3188451410385381,0.9992298341668683,0.7346797177978881,-0.4752604574176972,-0.9701571632890432,-0.005423611645235655,0.967469924753577,0.863268780193768,-0.7272776946010506,-0.8451207375668757,-0.22012199787237063,0.890532767518505,0.661354542992624,-0.5628512280232009,-0.9823587522637954,-0.4245415053514779,0.9882886954005674,0.807050054359598,-0.3721417021330169,-0.9914352183497845,-0.11908501143677819,0.9324321309863179,0.9150593293097947,-0.6445255089628049,-0.9963434841607649,-0.3296040709346335,0.8330344534265726,0.7423479086291043,-0.4652231060666781,-0.9547262142957786,-0.01679624619277176,0.9645301032650085,0.8689534833399979,-0.2641965141105697,-0.9998550117113087,-0.23120195707421368,0.88530130669616,0.9549821616967752,-0.5534142520381273,-0.9801683679190428,-0.4348113963151879,0.9864892820147967,0.8137135108935033,-0.36156134687838054,-0.9147115062300007,-0.13036953139841487,0.9282621910498206,0.9195871580425242,-0.15282487133285472,-0.995307344200042,-0.34032036562681606,0.8266887076279128,0.7499200746922743,-0.4551255768121038,-0.9512811136064386,-0.5343795043065027,0.9614655171231513,0.8745257849347303,-0.2532103751904284,-0.8628335924714017,-0.24225200965943955,0.514277609280395,0.9582943930599328,-0.5439056903793182,-0.9778511960679448,-0.4450250432146395,0.3180284309058391,0.8202717113200882,-0.3509342226572463,-0.9100563698826414,-0.6270170621358937,0.5993880326231755,0.9239960356170123,-0.14157543173216253,-0.9941424584642576,-0.35099263893254234,0.4134323724441838,0.9845731810514564,-0.44496917579748635,-0.9477129620574961,-0.5439580391409179,0.2081709578747236,0.8799849641852455,-0.2421914828035339,-0.8570287945179955,-0.2532707262729924,0.5044904615843642,0.9614826663762717,-0.028104348183551866,-0.9754075364431293,-0.45518112488617996,0.3072251900754506,0.9980827034473293,-0.34026170411770884,-0.9052835152110149,-0.6358362576180869,0.5902455284445866,0.9282853917326742,-0.13030767895535023,-0.7928861202344114,-0.3616195103635577,0.4030499815790872,0.9864995003049271,-0.43475521678156376,-0.9440222211992845,-0.5534662114890537,0.19703349936823297,0.8853303149315135,0.297766809801577,-0.8511131375047791,-0.7194680986749415,0.49463805664305505,0.9645465692337647,0.49589778662250805,-0.9728377051387699,-0.46527832761237936,0.29638220881167227,0.9987220855461283,0.1984549310964543,-0.9003935595971564,-0.6445732059107299,0.08428641396502476,0.9324546715493585,0.4043766252394683,-0.7859043830542777,-0.3721996053044664,0.3926154550771251,0.9882982131024578,0.5914154347114866,-0.9402093684394058,-0.5629027914423542,0.18587055403022537,0.9979919032206145,0.3086048022157614,-0.8450873866384514,-0.7273205104479789,0.4847216688924674,0.96748570530805,0.5057419422208393,-0.7105029664501221,-0.4753153452919629,0.2855008896843081,0.999232280163569,0.67926281419216,-0.8953871355704341,-0.6532267768652447,0.07294828060051507,0.9365033357591172,0.4147522723359087,-0.7788209869549065,-0.9942981328383306,0.38213014267334117,0.989969086775542,0.6005481193562707,-0.6258867943968993,-0.9106564425103225,0.17468356581874844,0.9972069627698548,0.3194028757398859,-0.8389523213666574,-0.9781536684825768,-0.040920083975756076,0.9702996944136963,0.515520678691389,-0.7024537920991091,-0.999974755529813,0.27458264022227163,0.9996132213045577,0.6875655829794782,-0.8902648907257297,-0.9517272045803987,0.061600711172883744,0.9822485279537851,0.42507427007160486,-0.7716368481932976,-0.9954466120059648,-0.1542577420179281,0.9915119051920197,0.609603121430401,-0.6169762342833878,-0.9152965266154179,0.16347398180186237,0.9962930308230847,0.7656657739078138,-0.8327087352771649,-0.9804546917332007,-0.05228106411898869,0.9545509767614355,0.5252327311273788,-0.6943137533950541,-0.9998292686968188,0.26362887273151786,0.9998648596932976,0.6957794132450403,-0.5234969011264414,-0.9551565843852203,0.05024517352181821,0.9800515760145765,0.8338357841114549,-0.764352896057794,-0.9964663273838594,-0.16548478844806153,0.9144735281867118,0.6185792696441575,-0.6079858665768345,-0.9912447983848222,0.1522432519704577,0.8061929671826654,0.7729319043969155,-0.4232281580021783,-0.9826288904406968,-0.0636352815610715,0.6602661925458131,0.5348768432477959,-0.6860839032746184,-0.9995544511652443,-0.27654228407986603,0.8625359603376265,0.703903242507041,-0.5137728035643675,-0.9584624120275081,0.038883136517717805,0.7336952009316904,0.8400599778980316,-0.7569700727478771,-0.997357147068992,-0.17669042896024026,0.5705936039843861,0.627475402907787,-0.598916854206324,-0.9896790121461342,0.14099282905069493,0.7994118692566281,0.7800980539929985,-0.4128964457244613,-0.9846759833664113,-0.07498126760237787,0.6516818912277179,0.8962930268539931,-0.6777653062918202,-0.9991503384835022,-0.287454017886129,0.8567254075397861,0.7119360199255554,-0.5039822480602459,-0.9669680882654119,0.027516069871691248,0.7259199328236445,0.8461755075884546,0.2220492822703048,-0.9981189558313572,-0.18787321407367713,0.5612166966734229,0.6362903704816926,-0.09502781840974021,-0.9879852081728004,-0.39448951755307105,0.7925273651804196,0.7871632957346678,0.12104690189536817,-0.9317162252455661,-0.08631755460803582,0.6430132930432644,0.9012786222471215,-0.19645649596470063,-0.9986169829246925,-0.29832856871515084,0.46347289125052443,0.7198767064384681,0.018772120025158285,-0.9640065605222704,-0.4964087480373041,0.7180507649519442,0.8521815821219383,0.2331241478164406,-0.9987516551288714,-0.19903169726399433,0.5517671944207951,0.9446927468696541,-0.0836999876189083,-0.986163605563079,-0.40491479833675975,0.35971814772910704,0.7941267157132409,0.13232859642898795,-0.927525382796614,-0.09764267619777055,0.6342615192997536,0.9061476347420692,0.34217792710494765,-0.997954453479841,-0.3091645299135164,0.45336503874931927,0.9758548288576503,0.030142054431059405,-0.960920335847551,-0.8754824857503909,0.7100887152153547,0.8580774245960257,0.244168858105237,-0.8790148118398835,-0.6796945981712285,0.5422463195459185,0.9483615494413445,0.44679388407992576,-0.9842144399463373,-0.8214004363903714,0.34908303716797395,0.800987413190963,0.14359317389036938,-0.9232145623579555,-0.9247499287156836,0.6254277020634768,0.9108994345185185,0.3528424105318974,-0.8191039978022806,-0.7586841210795833,0.4431985422185692,0.9782758395534594,0.041508089878330025,-0.9577098134530047,-0.8809219369869062,0.24027365854414823,0.8638622723670837,0.25518198447267904,-0.8735353041387318,-0.962023974261072,0.5326553036004559,0.9519076788071827,0.45693982931993915,-0.9821379634525725,-0.8278340107014391,0.3384027717444329,0.9955025364409388,0.15483917717506682,-0.9187843215462118,-0.929018460345682,0.12834808884317742,0.9155334069179436,0.36346125281103175,-0.812526868444033,-0.7660441910460363,0.4329747167228954,0.9433684701186276,0.555111039519213,-0.9543754086286386,-0.8862474385191349,0.2292181402350058,0.8500740131924273,0.2661621023402199,-0.8679428022148103,-0.9650662262410993,0.5229953872090133,0.9723783418647722,0.4670266681212981,-0.7409804944970613,-0.8341605023792368,0.3276787329805412,0.8995320098884648,0.1660651515812561,-0.914235233425362,-0.9331668208522375,0.11706070043836117,0.9911669222206628,0.37403308036554794,-0.8058446364739684,-0.9885977188950448,0.42269488474258005,0.9395344496350351,0.5645350551879921,-0.950917552688997,-0.8914583014786319,0.2181329719214756,0.8440292120339229,0.27710779139905417,-0.8622380294738078,-0.9679836442188386,0.003385060467795477,0.9696608411733688,0.4770530957233306,-0.7332951966277546,-0.8403790930744583,0.31691230806055953,0.8945054144879974,0.6547217944620329,-0.9095678864326152,-0.9371944736333728,0.10575816990614578,0.7775799112821161,0.3845565257001289,-0.3803031867384271,-0.9902463573545719,0.41236037600250025,0.9355788977555175,0.573886046676197,-0.17273742390975014,-0.896553851825771,0.2070195875009307,0.8378752333477825,0.7364172233432612,-0.47300236445653726,-0.9707758508181551,-0.007988245907357302,0.9668179121534484,0.48701781517972115,-0.2726818762936097,-0.84648897839509,-0.22262305793711518,0.998154862527631,0.6632760736365366,-0.05962815851120609,-0.9411008977009915,-0.4268622010143427,0.9878940843983074,0.8085618059338772,-0.7921683356431074,-0.9917669046917714,-0.6111684666474598,0.9315023261417192,0.9160907086375687,-0.6425624714915736,-0.996121085249174,0.19587942452057608,0.8316128731682764,0.9808415818517218,-0.4629513293744796,-0.9539601153327617,-0.019360518980669483,0.6928901914797646,0.4969195375262748,-0.2617220817210292,-0.867252755456517,-0.23369639824015498,0.9987808788047318,0.6717445562049189,-0.04827138609920402,-0.7400479168939342,-0.43711952473263105,0.9860658752360395,0.8152016020793114,-0.7851760358498867,-0.5782855925779565,-0.6201307949065606,0.9273052621095244,0.9205917645710187,-0.6338064246182396,-0.9950559009149319,-0.7741842629963093,0.8252429415491231,0.309724150535465,-0.45284041024950455,-0.9504872272838163,-0.8920862049101766,0.6846448443928386,0.5067569819476481,-0.2507284326687663,-0.8615343346503629,-0.2447395092636704,0.5120763789453454,0.6801261467453906,-0.8948624055812621,-0.7323509923175185,-0.4473203058238263,0.3155958508244969,0.8217359496286888,-0.7780821713511665,-0.5689695819869712,-0.6290129075214235,0.9229882485608465,0.924973739397577,-0.6249683931199032,-0.993862003330517,-0.7813329455050302,0.818766262458706,0.985018695173153,-0.44267091495714117,-0.9468913910666735,-0.8971676404229147,0.6763109365898213,0.516528875943026,-0.23970235119592304,-0.8557044719802428,-0.25575096255051594,0.5022744049333963,0.6884197610758881,-0.02554057899858742,-0.7245593361020043,-0.45746322478850393,0.30478352634004385,0.8281640033459677,-0.7708876597580632,-0.5595799735970285,-0.6378136555660615,0.9185518439134028,0.9292360662966039,-0.6160495202205362,-0.36847030719683077,-0.7883805604226836,0.8121836736734909,0.9869162604377668,-0.43244415894990873,-0.9431730718127561,-0.9021330248044125,0.6678895460848817,0.5262339554907236,0.7449902514627097,-0.8497639215551186,-0.9737592316281276,0.4924074603292642,0.6966243263943153,0.87090269614776,-0.7166739561198083,-0.46754696961186665,0.2939317772582005,0.8344849317445096,0.20096795659042943,-0.5501179819801062,-0.6465319006392214,0.08173057321316715,0.9333781939242525,0.4067209415370096,-0.35787354376803177,-0.7953261961206654,0.8054960266696575,0.9886861653373575,0.5934815709591474,-0.9393327504970079,-0.9069817157683807,0.6593817622083196,0.9978261693888016,0.7525288179568029,-0.8437134518017212,-0.9762845620205604,0.482476821449695,0.7047387814173137,0.8764357675333004,-0.7086958723667774,-0.4775702359334569,0.2830420072829128,0.8406979171946339,0.9594164259077126,-0.5405848310711543,-0.6551665150116385,0.07039018390496435,0.9373995864847859,0.4170846076983047,-0.3472304884003308,-0.8021689541616672,0.7987041865129586,0.9903281809298005,0.6025968410467194,-0.9353709238756795,-0.9117130861231486,0.6507886854656578,0.997012131991038,0.7599700427538933,-0.8375538453651525,-0.9786836072877497,0.47248377285046617,0.7127620765175424,0.8818554695130587,-0.7006261168302493,-0.48753172721587984,0.2721156250362348,0.8468021560293812,0.9625615251415589,-0.5309817540097749,-0.6637163817719126,0.05904068943056705,0.9412997237998844,0.4273943228047851,-0.33654251780256084,-0.8089079494158921,0.791809031746821,0.9918420948158088,0.6116341635557848,-0.1263879974916007,-0.9163265238527926,0.6421114273952888,0.9960691282991675,0.7673129633108433,-0.8312858990076484,-0.9809560571065137,0.4624296071602261,0.7206931738594502,0.8871611010334998,-0.692465733355562,-0.9997785903075296,0.2611540438761199,0.8527968586484691,0.9655821143631755,-0.5213099929807127,-0.6721803949709825,0.04768355787867283,0.9450781013759314,0.43764875326610847,-0.32581101449346495,-0.8155423101755482,-0.16801357295412428,0.9932277111664077,0.620592369483525,-0.11509787320049891,-0.9208214321963025,0.6333511104246942,0.3889773893991072,0.7745566298004423,-0.8249104235055147,-0.9831016175291435,0.45231562491328914,0.18198561210659053,0.8923519757964202,-0.6842157775110296,-0.9994746131160912,0.2501586817135989,0.861235401414911,0.9684778028509398,-0.5115707990531747,-0.6805574597651844,0.03632025832585654,0.7319501357420215,0.9993793179244593,-0.31503736662286363,-0.8220711782676071,-0.17921418606404385,0.5684855205828667,0.6294703000610712,-0.10379286067916405,-0.9251972297247741,0.6245088677252552,0.37847474560069977,0.7817001052342697,0.11229838589084336,-0.9851200110214271,0.4421431343814077,0.17079060740711996,0.8974274223477224,-0.6758773164514011,-0.9990413511017591,0.23913096082936922,0.8553997926850124,0.9712482160394869,-0.5017654320190013,-0.9663111751523532,0.02495226064654108,0.7241536050456807,0.999715329756492,-0.3042229677920935,-0.82849370916481,-0.19039161732021617,0.5590921369111777,0.6382668069033944,-0.09247442226242927,-0.9294533504166186,-0.39684491475439937,0.3679231450405971,0.7887424655838967,0.12359233490858378,-0.9870109764985489,0.43191345140454346,0.1595735104672455,0.9023867841642692,-0.6674514287798222,-0.9984788603081804,0.22807230768981904,-0.0562276136498317,0.9738929955681602,-0.491895160229708,-0.9633214943164383,0.013581035322865127,0.7162634030650996,0.9999220256282635,-0.2933692168737415,-0.8348090720949106,-0.2015444208907998,0.5496264331155422,0.9792584154331453,-0.08114402202180472,-0.9335892437307791,-0.40725850211831194,0.35732395259769834,0.7956827999004124,0.13487029691382782,-0.9887742693588615,0.4216278992206604,0.14833577224967512,0.9072294197388071,0.3445866745165294,-0.997787213495105,0.21698415276250985,-0.06757913705632126,0.976411799327367,-0.48196126043242116,-0.9602072051641658,0.002208053254472107,0.7082805504198638,0.9999993788030874,-0.28247751783069647,-0.8777890910088932,-0.959582214385113,0.5400896336110905,0.9768907059179701,-0.06980312557609569,-0.9376043746779446,-0.9976365152770483,0.346678539307045,0.8025202104322566,0.14613081307080186,-0.9904096615155259,-0.989104900748193,0.13707884638712364,0.9119547026629466,0.3552409861539487,-0.996966500128973,-0.7603524153330046,-0.07892191891334976,0.9788043015028307,-0.4719650176047272,-0.9569687105375052,-0.8821328089961731,-0.2912373240821095,0.9999473792751153,-0.2715492795345429,-0.8722840407780005,-0.9627208808061385,0.5304829720093812,0.9743966328711514,-0.058453199901820865,-0.9414982238897524,-0.9983534674867239,0.3359882821824742,0.9033451871341918,0.15737242680040128,-0.991916941426015,-0.987366659744408,0.12580418899428106,0.9165620217081905,0.36584934638112027,-0.9960168263713425,-0.7676902232726036,-0.09025449200051532,0.9810701926177364,0.5572424619447727,-0.9536064293447495,-0.8874325192442795,-0.3020986238420915,0.999766033770631,-0.2605859155833193,-0.8666661581787363,-0.9657350166018356,0.520807690958829,0.9717765189079794,-0.047095713143454745,-0.7392558002379183,-0.9989412798968131,0.3252545640384974,0.8984086542911738,0.1685936839686031,-0.9932959141194776,-0.985500700115196,0.11451325847946021,0.9210507809049971,0.376410382977124,-0.9949383150651571,-0.9260409023522213,-0.10157539041794886,0.9832091795727619,0.566650116832149,-0.9501207965063287,-0.8926174376261643,-0.3129208463042939,0.9994553657471802,-0.2495888441186654,-0.8609361698998502,-0.9686242318853502,-0.5096540623055684,0.9690307029474874,-0.03573213442351911,-0.7315490256634753,-0.9993998764721448,0.31447877331143015,0.8933559097883175,0.17979313307456216,-0.9945464012219578,-0.9835072632276283,0.10320751535594752,0.7759647177035284,0.3869227298424832,-0.9937311057188559,-0.9216885180915463,-0.11288314977593235,0.9852209856839916,0.5759844739498412,-0.17021071863641946,-0.8976868934582043,-0.32370259158412135,0.9990154153905362,-0.23855948764238166,0.04545672249138909,-0.9713881529286444,-0.5194063260960103,0.9661595401686117,-0.024363933652547916,0.2590015037156534,-0.9997291978919755,0.30366230387979365,0.888187607212187,0.1909693254383668,-0.5586041065897847,-0.9813866069383144,0.09188842205308159,0.7687406158414354,0.39738502717587354,-0.3673758554581433,-0.9172169108558593,-0.12417630738432163,0.9871053507187058,0.5852443258727771,-0.1589925180120632,-0.9026402309921787,-0.3344424650328147,0.9984462396095022,0.7457748908594519,0.056815178790582344,-0.9740264222108389,-0.5290914032325863,0.9631634019642488,-0.012992581338950294,0.26996981801842557,-0.999929201557663,0.2928065548840127,0.8829044150971049,0.20212081538842985,0.4705178706630983,-0.9791390055600473,0.08055744272708387,0.7614170752411632,0.4077959216500167,-0.35677423767206096,-0.9126266590600013,-0.13545340244174953,0.9888620309290427,0.5944284748133388,-0.14775375126300214,-0.803498041304165,-0.34513907741785266,0.9977479120285495,0.7533034286633743,0.06816628588827389,-0.9765386984644593,-0.5387080409236137,0.960042675893214,-0.0016195483987961866,0.28090321097387067,-0.9999998615981766,-0.7071213421749734,0.8775070168386748,0.21324616044848996,0.480523000682538,-0.9767647498263209,0.06921604307166601,0.753995043223071,0.4181540665867374,-0.34612647014537967,-0.9079183564658174,-0.1467129762245845,0.5952743049187259,0.6035357327763001,-0.1364958721549944,-0.7966755520722295,-0.35579104510265297,0.9969205229782943,0.760734524572243,0.07950857548716884,-0.9789246567195801,-0.5482549952302425,0.9567977656301102,0.8824098429620865,0.2918002683171807,-0.9999411688734433,-0.7151174758389169,0.8719961106053836,0.2243439215242001,0.49046597371447204,-0.974264146853722,0.05786569012843822,0.7464754798476569,0.42845812213115986,0.6662287420015546,-0.9030926121053521,-0.15795357227562068,0.5860972200483352,0.9872732387446703,-0.12522033692603501,-0.7897500106403662,-0.3663969902255496,0.995964179483813,0.9300574362985617,0.09084058043054027,-0.6395290204678022,-0.5577310312273627,0.9534290909131109,0.829411410118261,0.30265958048366015,-0.9997531309755305,-0.7230211070670819,0.86637240924829,0.96588758436857,0.5003455036076659,-0.9716375201022048,-0.8545487858558876,0.7388593577913718,0.9989681802248378,0.6746671523137827,-0.8981500502020693,-0.16917373659247462,0.576844321871335,0.9854006768592246,-0.11392860409798733,-0.7827223128466342,-0.3769555408780229,0.38789280119141695,0.9258186262263579,0.10216083489201008,-0.6307443541371694,-0.5671349231633448,0.9499370874896663,0.823004288527098,0.3134797427910571,-0.9994357722276636,-0.7308312135027718,0.860636640208816,0.6817587110033574,0.510160312417432,-0.96888520933325,-0.860400403863647,0.7311476622208003,0.9994200888884429,0.6830182925521595,-0.8930913100901069,-0.1803720178156645,0.5675168072758568,0.9834006506537096,0.8239818583180912,-0.7755933677433022,-0.38746533128216004,0.37738502781705063,0.9214600589381601,0.11346787456515775,-0.6218780992688732,-0.5764654546185944,0.9463222070601379,0.81649070904067,0.3242593556212631,-0.4391234360941244,-0.7385467848869827,0.8547895454246507,0.6733942792591132,0.5199091305709342,-0.9660075705659155,-0.8661407266845439,0.7233413906652272,0.9997427197820147,0.6912810824734527,-0.8879170461315777,-0.9532891174041928,0.5581158828018734,0.9812734188370817,0.8303727784441223,-0.7683640974792605,-0.3979250019673219,0.36682843863901726,0.9169822982267775,0.12476023685293235,-0.6129314027376568,-0.5857214186628996,-0.7908058484394166,0.8098715142086119,0.3349970246013572,-0.428877090754273,-0.7461668231890823,0.8488318812337776,0.6649427420906899,0.5295906970314125,-0.9630049760307847,-0.871769011791845,-0.2705364252364699,0.48896361659420995,0.6994544532627892,-0.8826279276319257,-0.9566628293317031,-0.47103708118568266,0.9790192565726965,0.83665628754021,-0.7610354371807375,-0.4083331999459945,-0.6495420570568878,0.9123859233030204,0.9347893844059925,-0.6039054218236165,-0.5949016180115504,-0.7977158342711399,0.8031475602421975,0.34569136078397233,-0.41857526896910346,-0.7536903427359086,-0.06875341111156731,0.6564051927279421,0.5392037594612995,-0.21369920758094554,-0.8772845311512073,-0.28146797269623813,0.4790111436423684,0.70753734767191,-0.8772246387533488,-0.9599127942597036,-0.48103902663168563,0.9766384554427167,0.842831572816965,-0.75360833483034,-0.9977166994382991,-0.6581473468303474,0.9076715287207776,0.9387686976915679,-0.5948013240625043,-0.6040048651802113,-0.8045226333395378,0.7963197169035859,0.3563409808269593,-0.4082193033079352,-0.761116370339269,-0.9133297045950401,0.6477827355266411,0.5487470743842155,-0.2025749591060769,-0.8826865713148511,-0.29236311149037064,0.4689967092659372,0.7155287201559272,-0.8717078784263019,-0.9630385917961858,-0.4909787483407903,0.2683102807084863,0.8488978354840496,-0.7460837511444274,-0.9984202912263553,-0.666667503412772,0.9028397243001093,0.9426265786333633,-0.5856202870947036,-0.6130299826385254,-0.8112253651662065,0.7893888673933162,0.992338165841459,-0.3978105333437487,-0.7684439454218256,-0.9179020190146376,0.6390764858256236,0.5582194073458149,-0.1914245069964515,-0.8879744335138468,-0.3032204323023416,0.45892160885987443,0.7234275370085688,-0.8660783602590872,-0.9660398176105388,-0.5008549605823298,0.25733679932075487,0.854854290853505,-0.7384626594488415,-0.9989947345709885,-0.6751014246981949,0.8978911350483647,0.9463625282037417,-0.5763634985128985,-0.6219758029624309,-0.8178231627341295,0.7823559082360617,0.9936791546604439,-0.38735030547990806,-0.9255960294531811,-0.9223556002534171,0.6302875698025191,0.5676195330734659,-0.1802492935940831,-0.822669853961183,-0.31403853070748644,0.44878714566645816,0.7312327764958914,0.035268690021870754,-0.6813280554952935,-0.5106663858407637,0.2463300307018246,0.8607001684412511,-0.730746045553004,-0.508170770445795,-0.6834480197354248,0.8928264010793364,0.9499760631472286,-0.5670321557084548,-0.311283800116351,-0.8243151725998287,0.7752217491646636,0.994891608315216,-0.37683997277599973,-0.9212312806470032,-0.9266898722282502,0.6214171243280762,0.5769462356347439,-0.16905076444392755,-0.8161507887179574,-0.9857916008418329,0.4385946306067082,0.738943428988444,0.046632485950165364,-0.6729590899198772,-0.5204117549809283,0.2352913986078497,0.866434712066752,-0.7229349076223989,-0.4983427041094601,-0.691706208869164,0.021000933256029124,0.953466716043022,-0.557627465716535,-0.3004555671700466,-0.8307005550037596,0.7679873130024529,0.9959753699715203,-0.3662808947728109,-0.9167473680107492,-0.9309042742889941,0.6124662968191046,0.9919756777878086,-0.15783036810689766,-0.8095261520987416,-0.9876382256549616,0.4283453821108149,0.746558497091867,0.05799024983661714,-0.6645030752132339,-0.5300898074122024,0.22422233091661375,0.8720571799508299,0.2711029387571361,-0.48845017575738636,-0.6998749238796641,0.009628930668846628,0.9568340353654549,-0.5481506450599641,-0.289588469459916,-0.836978483978937,0.7606535355438818,0.9969302994417704,-0.35567443731646864,-0.07720405851149424,-0.934998261291013,0.6034362450900541,0.9904736257506463,-0.1465895559724876,-0.8027968010187194,-0.989357096714857,0.4180407259475963,0.7540769957759073,0.069340512522857,-0.6559611051844004,-0.9975166347766574,0.21312425944282948,0.8775668448116155,0.9772575539315811,-0.4784944650156486,-0.7079531081209038,-0.0017443174473166364,0.960077585542401,-0.5386029195918697,-0.27868391267529274,-0.8431481474577756,-0.216531441199147,0.9977562732031817,0.6585903125711128,-0.06585985793579824,-0.9389713036656939,0.5943281372032481,0.988843453193357,0.8048720206217413,-0.7959636059381819,-0.9909479916807636,0.40768199505300656,0.9337553210638918,0.9135691983318455,-0.6473342847609735,-0.9966510934548342,0.20199861975292957,0.882962993958625,0.9796060917071208,-0.4684768596831394,-0.7159397166572689,-0.013117339931163395,0.9631969470116176,0.9998990233938185,-0.2677433073509459,-0.849208747377133,-0.2276207686190255,0.9984531844137493,0.6671060339308773,-0.0545071382041804,-0.9428228874889483,0.5851431513177907,0.987085370983298,0.8115693438768401,0.16127431160475508,-0.9924107047659899,0.39727052935771673,0.9296243413347558,0.9181353833911431,-0.6386237298461847,-0.9956566325402434,0.1908468509793723,0.888244929384948,0.9818279147083079,-0.45839865556498904,-0.9524090980550607,-0.02448866565058254,0.9661917162750173,0.999672733464881,-0.25676806868462365,-0.8551594997815425,-0.2386806526589805,0.9990209429260685,0.675535463268497,-0.04314736782253433,-0.9465525145476887,-0.44172714075361574,0.9851996065332961,0.8181616883785895,0.1724881546677029,-0.9937450467645274,0.3868076756137912,0.9253731121097847,0.9225828050832909,-0.6298305671745549,-0.9945333806691724,0.17967039563448547,0.8223351344724211,0.9839227355361536,-0.44826115630494934,-0.9488807039998003,-0.03585682369294416,0.9690615059508608,0.9993171330856311,-0.24575961635399304,-0.8609996349246183,-0.24970966269223013,0.9994594752989955,0.9680471366122555,-0.03178201620877485,-0.9501597024042754,-0.4519019890220256,0.9831864037722313,0.8246482013888808,0.1836796859077841,-0.9949508450755248,0.3762947872204815,0.9210021832973105,0.9269108881219155,0.3905642297295295,-0.9932814831373767,0.1684706994238738,-0.1168093687420691,0.9858902832197537,-0.4380656732167638,-0.9452295695846007,-0.0472203435553662,0.6725236675085056,0.9988322682539675,-0.23471937433300133,-0.8530389500927482,-0.2607063720856312,0.4978323948819038,0.9651325006499334,-0.02041255350276466,-0.9536439844589194,-0.46201838251044464,0.2998942006695805,0.8310280438592034,0.1948474576692851,-0.9960279437256147,-0.6417558525481665,0.08795206248203198,0.9311190726574298,0.4010088171340879,-0.9919011018812863,0.1572492110594125,-0.12809710996211066,0.9877303032513391,-0.42781352511454546,-0.94145616709386,-0.05857775533492808,-0.3381646237169807,0.9982182016885058,-0.22364877070768052,-0.8470487302317813,-0.2716693583842182,0.4879365657511033,0.9620930221125442,-0.009040450376147698,-0.9570049100100401,-0.4720750126352197,0.28902513014565867,0.8373003905391774,0.20599002536984698,-0.996976203389089,-0.650436519269205,0.07661729574038714,0.9352068143494523,0.4114015329320826,-0.9903924154570585,0.14600738207185257,-0.1393682814644652,0.9894425576191981,-0.4175060381421845,-0.9375609846276926,-0.06992758991880674,-0.34884587818421925,0.9974750128204652,-0.2125492374914207,-0.8409489422600956,-0.28259720349520173,0.4779776206675224,0.958929094165096,0.0023328221578863433,-0.960242044312563,-0.4820705785432551,0.27811867341675234,0.875604752716226,0.21710594768732625,-0.9977955014059212,-0.659033050216214,0.06527261833830089,0.9391735844372183,0.42174103279680053,-0.9887556190174812,0.1347466666230613,-0.15062142529172956,0.9910268248384624,0.6066823799741858,-0.9335445260387911,-0.08126837917431044,-0.35948200846622447,0.9966027977833942,-0.20142221043973507,-0.8347403752022421,-0.29348849387140286,0.467956847848425,0.9556411260704746,0.01370579293488167,-0.6969569529356657,-0.49200378728028143,0.2671762412633937,0.8700545674473309,0.22819378674623383,-0.9984857317976324,-0.973365637679481,0.05391949774136912,0.9430188698079769,0.4320259792851578,-0.9869909242867293,-0.901388232486485,-0.1618550858184305,0.9924828999797579,0.6156841651369134,-0.9294073108672526,-0.9183684297813434,-0.37007163874994237,0.9956016694007352,-0.19026912886454092,-0.8284238321536488,-0.9819394274565709,-0.5610072223119134,0.9522295431365038,0.0250769908294156,-0.6887560410814906,-0.9996575053405377,0.2561992491196362,0.8643918381986446,0.23925210830372837,-0.9990468052810005,-0.9706952950830662,0.04255940250733849,0.7361902487716927,0.4422550420107017,-0.9850985595329775,-0.8964052242033911,-0.17306780993931392,0.9938105946957129,0.6246063098393393,-0.9251498742733738,-0.9228096903865431,-0.38061339923722326,0.9944717571712312,0.7777907856792264,-0.822000130176739,-0.984027669159731,-0.5703857581517591,0.948694786660931,0.03644494494539273,-0.6804660367164905,-0.9992952150195221,0.2451891168899643,0.8586172974599555,0.25027948193513944,-0.5071567097440727,-0.9678993903486423,0.03119380209614435,0.7284455733489946,0.45242689781569956,-0.9830787695388736,-0.8913062634097167,-0.1842581472573081,0.9950097372453204,0.6334476599772149,-0.9207727669684275,-0.7730924484091728,-0.39110592632200886,0.9932132072521733,0.7848887719762646,-0.8154701001952417,-0.9859886241451892,-0.5796905130063191,0.9450373138743443,0.04780818480630944,-0.6720880121758024,-0.9988036630812559,-0.7412057083886806,0.8527316921841798,0.26127448121899693,-0.4973219132354574,-0.9649782851342681,0.01982416667983206,0.7206066714640108,0.4625402309422933,-0.9809318155698746,-0.8860920096702317,-0.19542465027113656,0.5548319988571954,0.6422070718972928,-0.9162765551434254,-0.7658285324043222,-0.4015478627667184,0.9918261824404965,0.7918852307261848,-0.8088345868867088,-0.9878220387579605,-0.5889202832796565,0.9412575978810278,0.9045852940095879,0.33871840039954887,-0.9981829131093501,-0.748792316540996,0.8467357836907402,0.27223568392154285,0.5329391657113669,-0.9619323572930328,0.008451966952386113,0.7126745571005171,0.47259373320269604,0.7022736537888741,-0.8807631374631693,-0.20656587456255643,0.5453340788678117,0.6508834125452624,-0.07603050643370454,-0.75846555434739,-0.41193785787781134,0.9903108621517205,0.7987792569175756,0.13995101978426217,-0.6007504502975477,-0.5980738750752983,0.9373561275977648,0.9093750803576053,0.34939735380458514,-0.9974330453995414,-0.7562820663231659,0.8406303475670879,0.28316167218070093,0.5425281306822666,-0.9587620008241803,-0.8791746974081139,0.7046502562995826,0.48258610414840997,0.710324861319324,-0.8753203360929805,-0.21768037898319795,0.5357656183975802,0.6594755596123135,-0.06468535613433493,-0.7510044666600799,-0.4222745676805032,0.341862718431357,0.805569958788962,0.15120319115659944,-0.5916194813430773,-0.6071501043506703,0.9333334076905947,0.9140472365080516,0.3600311116894817,-0.9965541569493049,-0.7636739889152107,0.8344161735683778,0.9798419072871314,0.5520469181295257,-0.9554676258221431,-0.8845371380196201,0.6965348070268487,0.49251605123844305,0.7182841863520222,-0.8697643096011708,-0.22876672584098093,0.5261278551534933,0.6679824016803098,0.8509802541061354,-0.7434462344548496,-0.43255665509261226,0.33115268892012506,0.8122564579441574,0.16243580397533952,-0.5824119847621297,-0.6161477970702549,0.9291899585095335,0.9186011581045256,0.37061829854806083,-0.39418126115661556,-0.7709671281513705,0.8280940655153118,0.9820506001206851,0.5614942967714955,-0.9520496584234965,-0.8897851612905243,0.6883292590382654,0.5023822900065027,0.7261505993261232,-0.8640957766752301,-0.9670535361806076,0.5164220358070496,0.6764028383655537,0.856898369178769,-0.7357918354100705,-0.4427827900975153,0.32039982388693383,0.8188378894658865,0.1736474052707523,-0.5731291515700137,-0.625065789357457,0.10941613164020038,0.7798881408279199,0.3811575448982366,-0.38370346760779744,-0.7781605406437871,0.8216648411901618,0.627214183310096,0.5708690445634554,-0.9485085407518363,-0.8949180883744104,0.6800346737443023,0.44525165581015785,0.7339230826992159,-0.8583154705556686,-0.9698862892486105,0.5066494158329947,0.967751308863496,0.8627056420624731,-0.7280422596435625,-0.45295164991618847,0.3096055142448022,0.8910392794553679,0.18483654479100656,-0.5637721825270378,-0.6339029276451542,0.09810418645021894,0.7727190291434745,0.3916474874591614,-0.37317604094754014,-0.7852532959045344,0.8151293322309877,0.6183156736279624,0.5801699488556871,-0.9448447308605888,-0.8999352553128744,0.6716521240726521,0.43503927544221255,0.7416006310789438,-0.8524241389411705,-0.9725935848257605,0.49681125934692066,0.964823735408763,0.8684013215703376,-0.7201985095845191,-0.46306191917831285,0.29877115626772455,0.885819078214296,0.9546508996089721,-0.5543422879831896,-0.6426580688249139,0.08677955121068155,0.7654499641020167,0.4020867693275698,-0.3626003429277816,-0.7922444764659791,0.8084883840240628,0.6093371830925799,0.5893958065503346,-0.15392631023473094,-0.9048360131214095,0.6631826943294449,0.42477062153320944,0.749182251353056,-0.8464225438918765,-0.97517507271584,0.4869088389417501,0.9617713593186061,0.8739846709503662,-0.7122615998438409,-0.9999770827312587,0.2878981514100589,0.8804842938100902,0.957975256441289,-0.5448406877215736,-0.6513300803948576,0.07544369079467461,0.7580818859773406,0.41247404015329814,-0.35197774154449435,-0.799133177999458,-0.14053370963353015,0.600279873096688,0.5985454242570283,-0.14267874371283118,-0.9096197278733533,0.6546274800589896,0.41444702236211084,0.7566669628178697,-0.8403114617308097,-0.9776304189962056,0.4769434355231223,0.20926103685900724,0.8794549679807775,-0.7042325570828922,-0.9999894049992814,-0.7107389723131942,0.8750356163119607,0.961175696507997,-0.5352686108006276,-0.6599178406061532,-0.8452666737520591,0.7506157478508582,0.9980130942665886,-0.34130961086073164,-0.8059185094322556,-0.9403235647620466,0.5911449152285424,0.6076176184472528,-0.13141272129833587,-0.914285780781889,-0.36058009021983967,0.4040698133152017,0.7640537973051256,0.08462065367319724,-0.9799593060609825,-0.5525375264370502,0.19812615370680797,0.8848115050634258,-0.6961124198807005,-0.9998723758546472,-0.7186935148531435,0.8694737505215062,0.9642518058232659,-0.525627295395142,-0.9730951238528892,-0.8512891886819931,0.9434098545649727,0.4330871810887263,-0.3305973308288885,-0.9008779481494558,-0.9441328230302514,0.9926262591751079,0.6166112156074405,-0.12012970028259938,-0.7865931223006272,-0.992888965425125,0.9954907086931166,0.771341799307224,0.09594754054879034,-0.6355773226903818,0.4568288438364503,0.9518694439783402,0.8900535893153313,0.30754438803010553,-0.45488242558839703,0.2550613439911419,0.8637994158815464,0.9672031864837947,0.5047800562346872,-0.2529462107515855,0.04138342786061481,0.7353931672148679,0.9991879915157749,0.6784443729041654,-0.8191755646745286,-0.17422694046128137,0.5726467922955079,0.9845144329559844,0.820427860243687,-0.9232625020989759,-0.381701558549438,0.38315994163839157,0.9238677114236075,0.9241004173787757,-0.9842365139484947,-0.5713521332608043,0.17578094653742024,0.8200798032913922,0.9846209214112674,-0.9992503406095983,-0.734322687996975,-0.03980636510227031,0.6779972179201206,-0.5061419464493463,-0.967602892208103,-0.8630031038792219,0.9507086454560804,0.5042546836938427,-0.30904587090550617,-0.8907719868991578,-0.9513844840009018,0.9951264877319047,0.3069653308764518,-0.09751850241811297,-0.7723453422548597,-0.9953397465681232,0.993075623539429,0.09534183859810277,0.1185626174968237,-0.6178530421950374,0.4364778914640107,0.9446518206100334,-0.12073376300160604,0.32910730406535194,-0.43450930263253923,0.23300281454588528,0.8521162904702382,-0.3311715468335233,0.5242839033628411,-0.23087559441711447,0.01864737264009059,0.7197900982720274,0.9998459144931485,0.6949783939919638,-0.016460854483686102,-0.19657883222528763,0.5538523851187008,0.9802724918912533,0.8332199779902626,0.19872254614227716,-0.40262553662999767,0.3620518251532989,0.9149239891902785,-0.8081419011501693,0.40462634283933113,-0.5898711256901208,0.15334479129058726,0.806851938459354,-0.6627421077924857,0.5916355939820834,-0.7495719266939094,-0.06252287409261184,0.6611029025874735,-0.4863947224946221,-0.9616100282450238,-0.8742705061029279,-0.2754709537552198,0.48448281956288686,-0.28733451237903346,-0.8802051452107555,-0.9581439039668499,-0.47555556425244605,0.2852391904778245,-0.07485684902653462,-0.7576979550537918,0.6015574498453662,-0.6534334983150206,0.07267595189690826,0.14111635081046087,-0.599809087995357,0.41590110787460505,-0.8007985178847238,-0.14328098338250403,0.3504999418243259,-0.41391136699655356,0.2108237307490923,0.8399922848617039,-0.35254722954714246,0.5435164889351461,-0.20868552434289023,-0.004098330626620821,0.7038146139628377,-0.5453508310851893,0.7111528371502731,0.006285156273005722,-0.21882901520225242,0.5347714178191545,0.9755233633282971,0.8455809923858782,0.22096234346313287,-0.42334119851242463,0.3407563850811972,0.9055068904081002,0.9405236596812417,0.42532141089107933,-0.608084922102015,0.1308292963074015,0.7932066129523603,-0.6455382412800272,0.6098195500440411,-0.7644333410732338,-0.08520703409799747,0.6438665363149028,-0.46639584063406814,0.7658413839041809,-0.8850855656622928,-0.2972645128645875,0.46446028673397227,-0.2654744885847982,-0.8691828903089692,-0.964407585642055,-0.4954408442976054,0.2633654689192535,-0.052156465120434196,-0.7426585391735423,-0.9986953576488339,-0.6704819306638929,0.049972463065154495,0.16359707131437598,-0.5814547959322054,0.3951091393808418,-0.8142140041434556,-0.16575407098490813,0.37171123287603997,-0.39309927593699895,0.18853556793452658,-0.9199253113914246,-0.3737405062982978,0.5624678621195208,-0.1863874815469148,-0.026841913440014804,0.6874749799134248,-0.5642746497708051,0.7269593338127729,0.029027915125035907,-0.2409659772720944,0.5154137627825048,-0.7284592654285463,0.8575045079109019,0.24308781610476923,-0.44383782602925914,0.31928463956353503,0.8956212874312507,0.948007410232932,0.44579642002643866,-0.6259840987802121,0.10824611097889078,0.7791508867854207,0.9942418917873745,0.6276879888855176,-0.7788992419223654,-0.10784710846106137,0.626297037101802,-0.4461556481771743,0.7802688628040185,0.11002094954894277,-0.3189042689795449,0.4441974447534675,-0.2434771097767054,0.8964140823620032,0.32097617788955485,-0.5150697860241682,0.24135548354179037,-0.029429095751332904,-0.7272348759236741,0.5169430123148752,-0.6871834594162332,0.027243118760833854,0.1859931476096621,-0.5627996624135205,0.6887705303856996,-0.8272082206356711,-0.18814139835913193,0.3927302026172776,-0.37208379751325144,-0.9192237608477345,-0.9286054340340328,-0.39474041180427105,0.5811282175815987,-0.16399300291167204,-0.8131761062693316,-0.9866402268044943,-0.5829065159123106,0.742389705786599,0.051755655096323495,-0.6691561514304968,0.49578943555107374,-0.7438530533418213,0.8689843554051672,0.26508751647153406,-0.4938890926650521,0.29764769796121127,-0.8700644192957214,0.9550006670589775,0.4660407765903332,-0.2955592498637248,0.08560691971868849,0.7646920323125485,0.9964219988567696,0.6452316654763116,-0.08342788916972073,-0.1304313833341022,0.6084034953086829,0.9913141286342589,0.7942926349633915,0.13259924371092624,-0.34037902581145096,0.4237047775023507,-0.221353757275375,0.9062630920793545,0.34243448499800766,-0.5344322335275983,0.21922062218862348,-0.006686499932879405,0.9759144328537623,0.5362793092233709,-0.7035294432945859,0.004499679019415415,0.2082929920918519,-0.5438533395009246,0.7050818839331757,-0.839774444226519,-0.21043138242735085,0.41354597595079123,-0.35087580501617033,0.8409597566030589,-0.9368051014248393,-0.4155360808315432,0.5994879005579532,-0.14151367521500888,-0.7997278435497353,-0.9900904440196506,-0.6012367894864938,0.7574359694836954,0.07445661698147235,-0.6520808600423026,0.4759085896418836,-0.7588619758505355,0.8800145952598623,0.2869500620416458,-0.473984125219371,0.27585675510665386,-0.8810511298704627,0.9614998118874554,0.486044006266036,-0.27375409432102954,0.0629234359175835,0.7498375304640846,0.9980865627634654,0.6624415028163915,-0.06074076520851534,-0.1529481737397623,0.5901951689538735,0.9880663826746301,0.8079054445611116,0.15510893176670904,-0.3616776724413696,0.4029928877719079,-0.19911587757951058,0.9156432063475246,0.3637156184213996,-0.5535181687859783,0.19697233731307182,0.016059555443198013,0.9806238353372481,0.5553381382201943,-0.7195114249784222,-0.018246088830731515,0.23048506694627924,-0.5246256299158019,0.7210284320620423,-0.8519061732222785,-0.23261249047662175,0.43414778291201706,-0.32948627134231856,0.8530493793656879,-0.9445200711018503,-0.43611675381740594,0.6175374118514181,-0.1189611291352016,-0.7858658061219979,-0.9930283939831267,-0.619255986512449,0.7720903400514773,0.09711905542991812,-0.6346681856684783,-0.9951659835721333,-0.7734782674222261,0.8905895204906509,0.30866414125644687,-0.4538339210413965,0.2539230855116764,-0.8915819895240942,0.9675014820972235,0.5057957594945217,-0.25180729994283085,0.040207395883077326,-0.9680521481801263,0.9992347222714176,0.6793085966322849,-0.03802221431551168,-0.17538582961676955,0.5716814789234714,0.9843074167013269,0.821100248405718,0.1775383673297351,-0.3827891890687974,0.38207249177790853,0.923416615047925,0.9245495719479152,0.38480856742046204,-0.5723177168432779,0.17462214005314972,0.038797301695215315,0.9848258685393771,0.5741096383739431,-0.7351211354799111,-0.040982416256687214,0.25255789011768,0.9991144592746221,0.7366019241175907,-0.8635971307342992,-0.254673246125844,0.45452496424139405,-0.3079262633166473,0.8646976391561211,-0.9517463513829554,-0.4564717824368987,0.6352674127459194,-0.09634703323330789,0.9524151899380057,-0.9954525566160625,-0.6369547839585341,0.7863452354006707,0.11973124502290693,-0.6169271375292419,-0.9926748291765094,-0.7876943656694784,0.9007036596904332,0.3302185193729404,-0.4334489057339385,-0.9435428786063783,-0.9016515496487988,0.9730025724577224,0.5252858168292709,-0.22973022187764788,0.017470552767084355,-0.9735049591694438,-0.5271454112322915,0.6958242199840995,-0.015283990941728253,-0.19773274184761383,-0.9998993072031568,-0.6973931810725107,0.8338702195795867,0.19987594553563875,-0.403702652713246,0.3609544136160952,-0.8350752827049479,0.9329775807768366,0.4057024186214939,-0.5908211509186014,0.15218159427576858,-0.9337624739723791,0.9885183583517001,0.5925840974155498,-0.7503504984222461,-0.06369753960995457,0.6602193384418761,0.9978990045271205,0.7517943024622359,-0.8748412679266286,-0.27660223526357497,0.48345283330060573,0.9606814780098728,0.8758985092299677,-0.958480203431201,-0.47659063511219263,0.2841108786271687,-0.07368308791591877,0.9591015127605143,-0.997361677670286,-0.6543240245660557,0.07150200242552737,0.1422814863401613,0.9975180421903151,-0.9896700703827966,-0.8015029152626628,-0.14444575139978208,0.3516020442765837,-0.4128396263897702,-0.9357645510268046,-0.911254600310553,-0.35364842577525396,0.5445040942237538,-0.20753428268205004,-0.8381623069014683,-0.9784540841440713,-0.5463370337552245,0.7119798277807929,0.007462140283385035,-0.21997734826503945,-0.9999634007583148,-0.7135137338849712,0.8462087509711385,0.22211010904653652,-0.4244072428657318,-0.9747781450526225,-0.8473719959369908,0.9409228722297134,0.4263863616628797,-0.609018897438769,0.12966231059365677,-0.941661136843014,0.9916993943006644,0.6107519567633547,-0.7651916342183184,-0.08637970621290493,-0.9919782043493063,0.9961672424224565,0.7665977066444928,-0.8856327671456454,-0.2983881119536271,0.4634176106511246,0.9541177847020829,0.8866461943197714,-0.9647181431892438,-0.49646290246157,0.26222982794057115,0.8675145744486439,0.9652916018308522,-0.9987547693772542,-0.6713547215871832,0.04879688740131155,0.16475811201309482,0.9988614811002631,-0.9861532618363693,-0.8148967717355416,-0.16691468632194298,0.37280365225132955,0.9857882436001358,-0.9275020641083848,-0.9203861729447173,-0.3748319648881859,0.5634406482488603,-0.18523096641068995,-0.8255399690250014,-0.9828969624544599,-0.5652459845561311,0.7277670612013554,0.030204410638900284,-0.685028227267147,-0.9995101188492601,-0.7292651186868715,0.8581094586933212,0.24422935403072904,-0.444892247087246,-0.9694498695036889,-0.8592302836432331,0.948381335457238,0.44684969478831055,-0.6269015409916301,-0.894119916279192,-0.9490725895143198,0.9943673305360825,0.6286038164686629,-0.7796368641475707,-0.10901718043954775,-0.9945967347063875,0.9939200689646458,0.7810044774659297,-0.895966044930081,-0.32001960430539184,-0.9936769109264905,0.9470604361951132,0.8969351336334489,-0.9704569431819826,-0.5160783026851798,0.24021310100936474,0.8559766028241115,0.970982254431596,-0.9996311109591182,-0.6880380634346421,0.02606652514079463,0.7249218451628477,0.9996881146730591,-0.9821262231142769,-0.8278690051817753,-0.1892972605200471,0.39381237370393124,0.9817122574310801,-0.9187596928155843,-0.9290415429267432,-0.395821568041373,0.5820856812375739,0.9178940883932691,-0.8124905013912087,-0.9868312953802497,-0.5838624802497483,0.7431777520196162,0.05293105340148191,-0.6682810249046979,-0.9985396960015142,-0.7446391857999157,0.8695661853865981,0.2662222361147192,-0.4928653096460587,-0.9636200060207518,-0.8706440104120164,0.9553491114923006,0.4670818303838126,-0.6444598291975453,-0.8837028451066025,-0.955992997342185,0.9965207866826853,0.6461304400792254,-0.7936787143289245,-0.7625200474912788,-0.9967006662822203,0.9911586468286525,0.7950071609439952,-0.9058357548998716,-0.34148552030585305,-0.9908661204694459,0.9395130839215631,0.9067600037314126,-0.975693634186436,-0.5354266868847838,-0.9387618114967919,0.843995753698357,0.9761705262509552,-0.9999902490016508,-0.7043654182407798,0.003322676206130525,0.7090669602866977,0.9999975152131213,-0.9775910377838047,-0.8404129038404171,-0.21158189337553662,0.541027376588438,0.977128338837171,0.8415960523284741,-0.9372162320166684,-0.41660637533167594,0.6004295463542297,0.9086309026178198,0.9379766536462072,-0.9902550473196157,-0.6021768887654482,0.758203926830439,0.7977037821097823,0.9905572332282646,-0.9970526343064245,-0.7596279807678672,0.8805730034047305,0.28807737630446684,0.9968824735359679,-0.9572915709425327,-0.8816072708450226,0.961822595246597,0.48707230045571964,0.9566570093681855,-0.8728285510302882,-0.9624187797463507,0.9981586485543209,0.6633227594181269,-0.05956588478621504,-0.74760768351274,-0.9982889105143884,0.987884404758827,0.8085985121686662,0.15627159100546786,-0.5874763172526856,-0.9875426614300693,0.9314796328392373,0.9161157212808887,0.36481176461366827,-0.5544980443147391,-0.9306818423642899,0.8315782258956307,0.9808537329061426,0.5563165854149577,-0.7203283383236452,-0.8303616421229847,0.6928452081357472,0.9997895226383428,0.7218434904137896,-0.8525219775685413,-0.23375705494415586,0.521758895591993,0.972038859512221,0.8536629886802943,-0.9449060106761321,-0.4371756328161882,0.3263083828531971,0.8988975963012751,0.9456195998335746,-0.9931664468424756,-0.6201797343308172,0.7728378111751163,0.7837811580120452,0.9934192920855303,-0.9950497031613853,-0.7742237484721403,0.891124217881709,0.632065054237016,0.9948299975574398,-0.9504678385659047,-0.8921143926126925,0.967798437375881,0.5068107620467539,0.9497858415496592,-0.8615026603491133,-0.9683466120629824,0.9992800687304283,0.6801718792756108,0.8603902186451307,-0.7323085115050142,-0.9993606456542196,0.9840990368296819,0.8217714990509244,0.17869655781668,-0.5689182783591855,-0.9837082533474578,0.9229642394107421,0.9249974456860047,0.38589467836023184,-0.3789616772114573,-0.9221203436579427,0.8187304441752852,0.9850294513322585,0.575072952424497,-0.7359185645577725,-0.817472842945429,0.6762649817537248,0.9990642445629171,0.7373974580949778,-0.8641899611992064,-0.6746524003476904,0.5022204594645807,0.9664464527243343,0.8652882445818952,-0.9521069002567152,-0.4575186980762658,0.3047241092912996,0.8886992054018211,0.9527732877350271,-0.9955639876070188,-0.6378617023743675,0.09299827637080973,0.7694530099319702,0.9957673613637663,-0.9925319388717554,-0.788418937144254,0.9012143696782452,0.6142762202105555,0.9922628021087704,-0.9431523394517896,-0.902159939389059,0.9732735460128973,0.43041501527225695,0.9424232598550829,-0.849731033015496,-0.9737734272648326,0.9998844669944877,0.6966690820114102,0.8485760558910557,-0.7166304471740297,-0.9999153171919536,0.9798045015693875,0.8345193059611197,0.7151035056586325,-0.5500658843341457,-0.9793648801228825,0.9139713094529551,0.9334005815922872,0.40677793236104626,-0.3578152901882237,-0.913081745049241,0.805459055907641,0.9886955210359711,0.5935317799085985,-0.14885605257374837,-0.8041610878964089,0.659334859656919,0.9978220562416593,0.7525699004604375,-0.8754108177830171,-0.6576890983176286,0.4824221772836474,0.9603540119534679,0.8764658051909695,-0.9588151750584705,-0.4805054735508635,0.28298217318157104,0.8780410065098031,0.959434016072502,-0.9974464291390791,-0.6552136443448441,0.07032795389836018,0.7547267511731427,0.9976002261850765,-0.9895006441146801,-0.8022062022730763,-0.14561031930815407,0.596169563107425,0.9891822154425096,-0.9353488585984656,-0.9117387136644703,0.978245088367095,0.40977347337955283,0.9345730736429987,-0.8375197596035033,-0.9786964175481037,0.9999715306342218,0.2042424862414329,0.836322844637302,-0.7005816022624815,-0.9999526381436428,0.97500302094644,0.8468353372553388,0.6990194487635815,-0.5309288893006698,-0.9745147889933289,0.9045054958574802,0.941320781264272,0.5290744440283964,-0.33648377153744946,-0.9035707230584926,-0.9420566225225473,0.9918500452133444,0.6116835173732829,-0.12632611290260803,-0.7904332644034471,-0.9921263021200195,0.996063600375851,0.7673529673734476,-0.8861787417116087,-0.6403855116308566,-0.9958673727606817,0.9537646893943619,0.8871898873002472,-0.9650273642575786,-0.46043413682288986,-0.9531051403572783,0.8669285141176465,0.9655983386224545,-0.9988127974739485,-0.6722265824446347,-0.8658364421460608,0.7396100010193841,0.9989169382354652,-0.9859573872650926,-0.8155784104048317,-0.7381364018133559,0.5777544512106206,0.9855898314369487,-0.9270614334832303,-0.920845759434753,-0.37592290420205704,0.38891991698626693,0.9262393445557952,-0.8248751581576209,-0.9831130357851895,-0.5662165362740802,0.1819242688885385,0.82363692462676,-0.6841702803528605,-0.9994725891996357,-0.7300699616527948,0.858713220687954,0.6825737231199307,-0.5115171946328296,-0.969160489368789,-0.8598318346835363,0.9487539468349981,0.5096368669836007,-0.3149781580674375,-0.8935921986352182,-0.9494427584323675,0.9944913917312328,0.6295187732112273,-0.10373081280802057,-0.776296475165549,-0.9947182359902288,0.9937897867807107,0.7817390101579658,0.112360375672855,-0.622750593066234,-0.9935440709179884,0.9466818943256109,0.897454942329695,-0.9707402537021336,-0.44012457405074545,-0.9459750923582326,0.8553674777666902,0.9712630659989144,-0.9996623856603015,-0.23694637408822578,-0.8542325947181963,0.7241105807925774,0.9997168162554908,-0.9819040015842465,-0.8285286428339113,-0.7226006114811208,0.5590404123959217,0.9814875087714563,-0.9182943519734326,-0.9294763647654211,-0.5572258667733279,0.36786513560570666,0.9174263844182368,-0.8118037709238329,-0.9870209968425452,-0.5848176357293201,0.1595119249376142,0.8105248594834077,-0.6674049725712269,-0.998475418734568,-0.7454242866670395,-0.05628989945898393,0.6657748376540396,-0.4918408438327498,-0.9633047515339069,-0.8712223953756985,0.9556962324262218,0.48993560667756186,-0.2933095766621757,-0.8831513346120792,-0.9563376579754218,0.9966181939717381,0.29121820475925947,-0.08108184297173154,-0.761758034478307,-0.9967955082151057,0.9910017919146602,0.7957205855560106,0.13493211127199095,-0.6047934668318785,-0.9907067149363962,0.9391092913457233,0.9072556591973203,0.34464523768212113,-0.4195872932884844,-0.9383556021434303,0.8433638790724057,0.9764252673036573,-0.9999947541259679,-0.2147879534390759,-0.8421867721291382,0.7082365098059579,0.9999994463927446,-0.9773425842711958,4.1185118671550966e-5,-0.7066909516387395,0.5400371292022209,0.9768773699648086,-0.9090521501079537,-0.9376260642296037,-0.5381952916300992,0.34662002286386123,0.9081387530065502,-0.7983123609647003,-0.9904182787630026,-0.34456791285233906,0.13701705040992132,0.7969934333163288,-0.6502943531939487,-0.9969616426788546,-0.7603929333293992,-0.07898410878223175,0.6486314840151821,-0.4719100173341555,-0.956950605214649,-0.8821621904789417,-0.29129700380705553,0.46998085643204435,-0.2714892385243489,-0.872253533033657,-0.9627377537692948,0.9982293515392905,0.2693838705391832,-0.05839092184391033,-0.7468254644495239,-0.9983570440256329,0.9877010582706316,0.05620765963150939,0.15743403375231316,-0.5865234238443522,-0.9873567728480024,0.9310507984770776,0.9165869670670953,0.3659074054114727,-0.39883292041017354,-0.9302506119944428,0.8309239286295427,0.9810822716426341,0.5572942619127483,-0.1925184027055313,-0.8297052068200427,0.6919960012149667,0.9997646824159763,-0.9722754953777165,0.02278600850044788,-0.6904156538551277,0.5207544338218326,0.9717618002770093,-0.899339609750287,0.23702639784222687,-0.5188862572566296,0.32519557086310025,0.8983812556892214,-0.7844079086601901,-0.9933031238119191,-0.3231268019910678,0.1144512840275794,0.7830496472096521,-0.6328472751596802,-0.9949320442517501,-0.11227852666205215,-0.10163745216987066,0.6311525320785359,0.9947097778691818,-0.9501013380107406,-0.8926455598045377,-0.31298009730322673,0.4497829407230876,0.9494168958827816,-0.8609044323614657,-0.9686397344402605,-0.5097077357501948,0.24741015861291696,0.8597897753903038,-0.731506491107317,-0.9994020354919259,0.9838892936297299,0.03348424212275124,0.7300136696285067,-0.5679499169215928,-0.983495977894085,0.9225105851387604,-0.1820052639589869,0.5661486401469414,-0.37787219361212515,-0.9216643153877893,0.8180540627988022,0.9852316695078767,0.3758465744687242,-0.17014924402844225,-0.8167943566829097,0.6753974577678092,0.9990126457907526,0.16799387139775734,0.045519042529017346,-0.6737831388782245,0.5012023030133727,0.9661434464751703,0.8658776512747031,0.2590617590689207,-0.49930875403918223,0.3036028644949218,0.8881589409407249,0.9531300656010817,0.460507254815543,-0.3015185071318093,0.09182630119175667,0.7687007156002305,0.9958748502034482,-0.992387673556116,-0.08964846717762232,-0.12423820890888033,0.6133470253559591,0.9921159825929778,-0.9427604936946801,0.12640782282413876,-0.3345012566495993,0.4293523098391803,0.9420289879092358,-0.8491099045566434,-0.9740405463365681,-0.5291443395917172,0.22530843805596856,0.8479527425488729,-0.7158090404027143,-0.9999299419412516,-0.6990783495677517,0.010743500054615277,0.7142802573353214,-0.549082555892079,-0.979126327628335,0.9134930699893313,-0.20432311944817,0.5472535402493297,-0.356715957857014,-0.9126011548252543,0.8047609403766998,-0.4098486090751295,0.3546721178679895,-0.14769205108525113,-0.8034609017193053,0.6584494674579208,0.9977437256166125,0.14552882647715096,0.06822852525986821,-0.6568020122781444,0.48139085293983813,0.9600252154640881,-0.07041011994208113,0.2809630831921001,-0.4794729112682965,0.28185307570469137,0.8774770977294711,0.9597651902260375,0.48057770993745397,-0.27975420828532704,0.06915380794188278,0.7539540625449311,0.9976810281475661,0.6577511447201758,-0.06697202407826536,-0.1467746854942779,0.595224176316927,0.9890088720627779,-0.9349318703782112,0.14893750460896782,-0.3558493469188359,0.40869953447433954,0.9341536794122791,-0.836876052041832,0.35789220567466973,-0.5483071671149022,0.20309014417479462,0.8356769837065964,-0.699741234108812,-0.999940490237769,-0.7151610815590479,-0.012002800640290232,0.698177280436635,-0.5299311026227589,-0.9742500828833313,-0.848619632914966,-0.226535259299467,0.5280752944343636,-0.3353751592627545,-0.9030658195353635,0.7910514391503412,-0.4304893637505271,0.3333141558994722,-0.1251584431018367,-0.7897117405841665,0.6411607990805868,-0.6143412157457789,0.12298848575662043,0.09090270693379826,-0.6394810599947036,0.461330333934562,0.9534102727822287,-0.09308028932219885,0.30271903858930127,-0.4593889918979504,0.2599574577113402,0.8663412527813241,-0.30480256102097447,0.5003995168432596,-0.2578451661779741,0.04644553489900958,0.7388173178794704,0.9989710115142797,0.6747131984620819,-0.04426093002866313,-0.16923522167927213,0.5767933616220529,0.9853900538801719,0.8175202827225297,0.17139012696289438,-0.377013322728571,0.38783530025889307,0.9257950450324295,-0.8242092045438189,0.3790379023620227,-0.5671863035800923,0.18076677259023696,0.8229688502723604,-0.6833113856186137,0.568986017223157,-0.7308737932113215,-0.03474289115335467,0.6817130705225253,-0.5105054659683145,-0.9688697666008005,-0.8604321945499478,-0.24863019107609674,0.5086238254190383,-0.3138608394390406,-0.8930632430472024,0.25074777985197094,-0.4509073856396645,0.3117837390531,-0.10256007884079169,-0.7755539870164754,0.6235403976960169,-0.6321288820523022,0.10038451148223893,0.11352985605617454,-0.6218292437916243,0.4410311251977479,-0.7838323103275185,-0.11570229948182847,0.324318368851025,-0.4390673872355655,0.23792733918501255,0.8547571677201046,-0.3263862433143188,0.5199624198410598,-0.23580271642545614,-0.8536200852405439,0.7232983132707792,-0.521829163294221,0.6913261593731902,-0.021526935621705122,-0.7217864831201973,0.5580641172716555,0.9812614004014236,0.8304075380498784,0.19375407302483696,-0.5562481362961452,0.3667704022307936,0.9169574094803107,0.9307119726793296,0.3999874869611332,-0.3647350699889471,0.15834987328975267,0.8098349173632443,-0.666527995643729,0.5875429726624437,-0.15619023222861345,-0.057465005889080725,0.66489614608301,-0.49081569664437613,0.7476623863962688,0.059648108562866946,-0.2705964829840795,0.48890919728450283,-0.29218412977447866,-0.882598600637836,0.2727011044938014,-0.4710921105723479,0.29009200704598853,-0.07990865056924415,-0.7609949661586509,0.4730199729198135,-0.6495894884148854,0.07772859882372404,0.1360982654667428,-0.6038556966197676,-0.9905459369210476,-0.7977534527324311,-0.1382644459195864,0.34574989860474037,-0.41851861156560216,-0.9379480928327405,-0.908665297358552,-0.34780105519298665,0.5392562971943871,-0.21363826366784747,-0.8415515606925396,0.7074050781649429,-0.5410966485328605,0.7075814320005503,0.001218196701202527,-0.7058577000882037,0.5390461336718866,-0.7091250405253331,0.842865145166944,0.21601777181433107,-0.5372029097144808,0.3455157392503271,0.9076453452990705,0.9387901903589848,0.42073012027423773,-0.34346274111679476,0.13585104465151546,0.7962819804025911,0.9908772246761066,0.6057959366576479,-0.13368413972034884,-0.08015738855253764,0.6477352081006268,-0.4708719820273383,0.7625733355310448,0.08233701387897416,-0.29242276978698334,0.4689416102689612,-0.2703562456772694,0.8837413953644269,0.2945133351111688,-0.4910330950849224,0.26825018305881465,-0.05721587800934413,-0.7460422107665612,0.49293697878025944,-0.666714000813568,0.05503246982342252,0.1585962583968469,-0.5855697178917967,0.6683422985913265,-0.8112618419679558,-0.16075505510724342,0.36700253929695953,-0.39775329670952847,-0.9298180928955712,-0.9179267718863425,-0.36903591675322506,0.5582711663591354,-0.191363275668894,-0.8290476220793382,-0.9817279349891158,-0.560084173395444,0.7234706059571272,0.02396269873595832,-0.689563710234666,0.5197492506209687,-0.7249785818867884,0.8548866585775611,0.23816970421828956,-0.5178797373554218,0.32408230836110324,-0.8560191865322666,0.9463826832509457,0.44125507017900933,-0.32201270654562353,0.1132819274434795,0.7823170516040939,0.9936861558650405,0.6237354652274066,-0.1111088797867632,-0.10280829823200231,0.6302391355485945,0.9945881801529542,0.7770897334920804,0.10498331848515016,-0.31409775868623374,0.44873139549012586,-0.2483884807724186,0.8941568009130947,0.31617318617809015,-0.5107200218236616,0.24626956792900492,-0.034493502274544924,0.9694700707711816,0.5125989418081071,-0.6834935591215243,0.03230786733139111,0.18101219451092324,-0.5669807686707122,0.6850882330222965,-0.8243504888691432,-0.18316249052954303,0.38806529493039355,-0.37678218652497447,-0.9212070102836954,-0.926713316242331,-0.3900798411965684,0.5769971891484739,-0.16898927738265662,-0.8161147388687622,-0.985802077852402,-0.5787819138429289,0.7389854602732876,0.046694802604568326,-0.6729129439786956,0.5001834522181385,-0.7404570233895252,0.8664658584180059,0.2601984089509274,-0.4982886169201457,0.3024811991002466,-0.8675555434306991,0.9534855230419045,0.4615517171812978,-0.30039606440321004,0.09065419880051147,0.7679473563437159,0.9959809594011197,0.6413522765600912,-0.088476132740935,-0.1254060154736414,0.6124169807968814,-0.643028599005859,0.7912040695763557,0.12757530531020073,-0.3356102351639442,0.42828900959995525,-0.22629220105847847,0.9041095747398409,0.33766945100890877,-0.5301427048829087,0.22416153430374616,-0.011753279794816777,0.9747965248133887,0.5319956890137837,-0.6999194816892438,0.009566548929711791,0.7134560194789882,-0.5480984667747517,0.7014797066376827,-0.8370126214433767,-0.20547515870486918,0.5462680414388104,-0.3556161313469211,0.8382072305061892,-0.9350203843176681,-0.4109219405143461,0.3535713772330282,-0.14652784499056445,-0.8027596024621662,-0.98936617224065,-0.5971801957691065,0.14436424451215152,0.06940274684378035,-0.6559140163335166,-0.9975122390082823,-0.7555523565745825,-0.07158416159000447,0.2820924884837665,-0.47843968474466436,0.28072358776073253,-0.8786430319488763,-0.28418985354103093,0.4816095599095959,-0.27862399901915547,0.06797956618270627,-0.9607043450808807,-0.48352493612905434,0.6586372558161643,-0.0657976086394527,-0.147938848345091,0.5942779649285601,-0.6602812022509463,0.8049090411054146,0.15010128538664735,-0.35694906878524535,0.40762502937444106,-0.8062047915702473,0.9135945673352185,0.3589910075565705,-0.5492910950752071,0.20193752075584112,0.8350299650650864,0.9796186245920739,0.5511171846288981,-0.7159832698363675,-0.013179719150815448,0.6973341448850351,0.9998981349212298,0.7175082385808214,-0.849241688374165,-0.22768151518364874,0.527075413267623,-0.3342660823737972,0.8503943259398126,-0.9428436780818474,-0.43155143112107736,0.33220421984988796,-0.12399059991196333,0.9435701605806075,-0.9924183741113806,-0.6152695000059303,0.12182032471026492,0.09207478249039917,-0.6385757224491063,-0.9956508225082152,-0.770256771201097,-0.09425212658842137,0.3038406149426536,-0.4583432105553405,-0.952390079952504,-0.889275915482324,-0.3059233540643625,0.501418220548391,-0.25670777513817583,0.04526976131801276,-0.9667691814000259,-0.5033090985217422,0.6755814598441465,-0.043085041223696975,-0.17039513848479698,-0.9991179216047517,-0.6771921796992632,0.8181975572037296,0.17254960389853377,-0.37810321895710913,0.386750146241243,-0.8194529043130512,0.9226068712171703,0.3801268241671086,-0.5681552851306935,0.17960902586545513,-0.9234482255388652,0.9839338751798132,0.5699535352986909,-0.731676612248858,-0.035919168118454484,0.6808514735092719,0.9993148260591362,0.7331655357790376,-0.8610313624107551,-0.24977007052138503,0.5076100792289933]}
},{}],81:[function(require,module,exports){
module.exports={"sine":[-0.9959748854655721,0.9973897635197664,0.14403440393585104,-0.5733189007340574,-0.2850650224454897,0.03239668097188226,-0.9394774013049966,-0.7830938406662683,-0.5464743122423388,-0.2538629051500614,0.06475935124496074,0.9247319000324113,-0.6437503511161947,0.5261909117677754,-0.9740176930998966,0.09705403582555941,-0.9153180957360577,-0.6682035327641902,-0.4910928197833815,0.9824392195464893,0.1292468310927738,-0.9017904670489352,-0.7039412805366639,0.4551785039007051,0.9852413403473896,0.1447637052683828,-0.894910210848065,-0.7149804798140974,0.44117532695652595,0.9902695484196156,0.19319170951128617,-0.8719102508677197,-0.7372551378195307,0.4118702898502005,0.9942581512503326,0.22487666202034878,-0.8555890322361845,-0.7587558102905912,0.3666127242873715,0.9972029615226474,0.25632553440667866,-0.8383695987257714,-0.7794599253812273,0.35199426501480574,0.9999600968585507,0.27143487078762074,-0.8105820686815831,-0.7891771112081494,0.3372894335479856,0.9999773449553958,0.28647760260218985,-0.8013093203097806,-0.7987006491108716,0.2906405049832142,0.9997492190616029,0.3331931832086989,-0.7918399470177718,-0.8456318863951806,0.2756169148559408,0.99744239197578,0.37910435271077914,-0.7608850013301959,-0.8538891163490658,0.2605256939742041,0.9962004234802282,0.39355269075453403,-0.7506274118786814,-0.8619368193760681,0.21278730681264588,0.9947140077733292,0.4382338985705113,-0.7401856338108306,-0.8858010526327306,0.16453519823928317,0.9884693994520892,0.4522599933627079,-0.6821736296823296,-0.8929615442867443,0.14906437940641265,0.985976252185617,0.4955236597506354,-0.670636486289904,-0.9139942368729539,0.16665125375007842,0.9765886032057229,0.5090686272241177,-0.6589347824184449,-0.920237456122903,0.017865981288380337,0.9730991910600503,0.5224886796670739,-0.6470713894267793,-0.9493943438731495,0.002202174512031111,0.9693710002730397,0.5357805240730781,-0.6350492183489377,-0.9541977511880966,-0.013462172632908288,0.9654049456664677,0.548940898895335,-0.5691379809546511,-0.9587670178885107,-0.029123216435988735,0.9612020004290279,0.6160448894695573,-0.5561884598490995,-0.9631010227697863,-0.04477711399733364,0.9351605436586692,0.6283081034485942,-0.543102461469709,-0.9671987023557571,-0.06042002417060799,0.9027400019131201,0.6404171434681197,-0.5298831968528699,-0.9710590511596514,-0.14258437687979675,0.8958907529945014,0.7016114028595514,-0.5165339097357813,-0.9874563917723655,-0.1580709524424323,0.8888216708063121,0.7126869406043937,-0.5030578757605051,-0.9898084789444107,-0.17351874062593328,0.8815344899567564,0.7235875995486574,-0.43002293850981543,-0.9919176873575807,-0.18892395085899102,0.8740309985709901,0.7780784785231561,-0.41582833476443243,-0.9937834994552648,-0.20428280301805513,0.8663130378523507,0.7878226976049827,-0.3393617449744045,-0.9954054574053307,-0.21959152835489854,0.8221388572483607,0.7973736011080096,-0.3245855659209821,-0.9967831632124668,-0.29934957401864004,0.8131206120618129,0.8067288454358358,-0.3097297402075474,-0.9975973737970478,-0.31425866045719236,0.8039028437056069,0.8158861350028206,-0.2947979131499249,-0.9963897958912856,-0.3290906342471452,0.7944878140315917,0.8608181923106071,-0.2797937487131144,-0.9949377243060592,-0.46612512923274296,0.7416645868367535,0.8998782820357414,-0.32864157267754257,-0.9987811689835406,-0.420158790080114,0.7750752595901051,0.8763371388705956,-0.2495831514090795,-0.9913015852382191,-0.493609661671331,0.7202891428333066,0.9130985386010656,-0.03572625942032203,-0.9967449403717241,-0.4483779390552457,0.7549020013439728,0.8909959973456621,-0.08690970558709664,-0.9866925253112602,-0.5206097369646325,0.5963840453355937,0.9254226273120608,-0.004404338344444141,-0.9937304484764128,-0.47615702392055287,0.6367487959246597,0.9047803806820647,-0.05566119567633636,-0.9811150681238637,-0.5470988556730804,0.5709473213598553,0.9368384525934196,0.02692190540448274,-0.916654719500494,-0.5034687806713015,0.6122829891842189,0.9176767600866713,-0.024358056640470832,-0.9359383395145436,-0.5730510198395293,0.5449502365749734,0.9473348102922327,0.05822172643430446,-0.9036851588688359,-0.5302864039656686,0.5872162524132689,0.9705307302295867,0.006968988804650983,-0.924447728873265,-0.5984407585051583,0.5184183060274693,0.987106291725655,0.08946440528565561,-0.8898286692195789,-0.6625129215139978,0.561573187560841,0.9776029314456658,0.03828919448004381,-0.9120498116242098,-0.722065832451995,0.4913775696925095,0.9916358636071547,0.12061927858181826,-0.8750988501151717,-0.7766932583124546,0.41783007893644103,0.9837156564558124,0.069571820919669,-0.8987567558022942,-0.7433824670099968,0.46385456691676513,0.9951921865493603,0.282255084970381,-0.8595101582542326,-0.7960426861793063,0.38916604357533724,0.9998801330486875,0.23270521577066683,-0.8845816079833361,-0.7639695029077852,0.3118228709565637,0.997771770170713,0.31216729182604314,-0.8430778932829074,-0.8146108315932034,0.23235263619372504,0.9998744545510966,0.2630554683408876,-0.8695382804793904,-0.7838067348345339,0.2819072902262439,0.9993720827182625,0.34177311959962287,-0.743139943102071,-0.8323794706995111,0.20177152574577945,0.9988874412833216,0.41815940670174795,-0.7764648658437995,-0.8028746933805131,0.2517150293341216,0.9999915535524762,0.3710435114149672,-0.7218149873791698,-0.8493311643254471,0.17099238502218655,0.9775265727988723,0.44640845120173733,-0.7563444397306021,-0.8211546641454973,0.2212757207158182,0.9870482002742277,0.39994973961222396,-0.699781600571215,-0.8654492750958958,0.14004542245646623,0.9704433082179592,0.4742193645614878,-0.6384452855371359,-0.9038403280904009,0.19061923927391916,0.9815386446887674,0.4284634339428327,-0.6770614075216865,-0.93606594318658,0.10896101119222568,0.9624075943005199,0.6125695683904464,-0.6140226289025851,-0.9619062972337766,0.15977567305701254,0.9750657501601745,0.5712449049296128,-0.6536767071455367,-0.9466272781818917,0.07776965927319526,0.953427317762166,0.637028280029097,-0.5889973348542277,-0.9699977026345968,-0.13822365625243296,0.9676358695624883,0.5966749977323117,-0.6296504505437412,-0.9562595382735932,-0.08727084451677442,0.9435112923670386,0.6608617751738791,-0.5633939646668038,-0.97713709604205,-0.16917953061132737,0.9592562950113693,0.6215194790923849,-0.49329435474075045,-0.9649532698030769,0.015188660389110742,0.8761624577988185,0.6840466622506064,-0.5372376469724975,-0.998798996304681,-0.1999693623685365,0.8997201146260121,0.8247793346184769,-0.5797681982260009,-0.9949740894307973,-0.14947869861515845,0.784947845573678,0.794707910779138,-0.6207741685121575,-0.9885327600549708,-0.098594959871414,0.8156764698794579,0.762546692157883,-0.437857225011681,-0.9794919465470551,-0.31007440931511926,0.8442601596660697,0.8837221209850056,-0.48336937187038315,-0.967875422981319,-0.2609302149950627,0.8706237501529022,0.8585684198087069,-0.28401946460785066,-0.9992916315798106,-0.2110998684493332,0.7446116954519268,0.8311569937761458,-0.07140690451188102,-0.9960485627876384,-0.16071440549219648,0.7778507065702046,0.8015599250376454,-0.12244530174551083,-0.9901862460166608,-0.36899763836763566,0.809044251265345,0.9112938619935059,-0.1731617120589311,-0.9817200970427017,-0.3208669507901435,0.8381103017809243,0.8889877366887002,-0.22342276961018537,-0.957434040303421,-0.2718924990190959,0.7013530421995287,0.8643438947107356,-0.008808591252254383,-0.970972404123329,-0.22220306817462349,0.7369719813762368,0.8374271404634356,-0.06005816617048877,-0.981957461205001,-0.42647260014216326,0.7706529504129614,0.9352888942545041,-0.1111498098028102,-0.9184061548085332,-0.3795443259359986,0.8023073805256398,0.9159178934340242,-0.16194916957915595,-0.9374803107570859,-0.33161798723206226,0.6553416703502614,0.8941383593544684,0.05382429457139259,-0.9540892320766683,-0.7327371689111333,0.6932007379262082,0.8700075643243852,0.0025646898205920763,-0.9681892433028283,-0.696888579056303,0.7292369379236525,0.9556130404171325,-0.04870165913815152,-0.8918297153016775,-0.6592074239327298,0.5652120095495305,0.9392531927156175,-0.09983994032286503,-0.9138470940903604,-0.6197927913691442,0.6067581684969392,0.9204234483458902,0.11624592710644557,-0.9334613850743338,-0.773911524722363,0.42182747868341586,0.8991733227349332,0.06517747974089322,-0.9506210097523734,-0.7404293420904974,0.467751921304004,0.97218653087644,0.013937639143672327,-0.8617529612672731,-0.7050000977086593,0.26695279467706096,0.958902046547928,-0.03733885241066074,-0.8866271475754142,-0.6677169576936477,0.3160045856826921,0.943095996162171,0.17821130964170862,-0.9091698247071939,-0.8120483794203822,0.3642253987588674,0.9925112501349904,0.1275344566115822,-0.9293217135634598,-0.7810640171818091,0.4114884305830335,0.9955799195101807,0.07652223402199068,-0.828293940015565,-0.7480257386737365,0.2060833213656618,0.9990854528419391,0.28893385624864687,-0.8559273059281022,-0.7130204226362565,0.2559751127160628,0.9999637522708783,0.23947723618732528,-0.881309892159996,-0.8469980508582023,0.305193781970158,0.9784455800477615,0.1893908774864558,-0.7592183056713183,-0.8186331185661914,0.3536099018040401,0.9877451881954269,0.13880648917980865,-0.7915839738115055,-0.7881154768368147,0.14440499807843768,0.9944473832405475,0.5839398809355981,-0.8218680619957337,-0.9019470777534272,0.1949409710437851,0.9985345408307761,0.5415568426101808,-0.8499909340097359,-0.8786233661646263,0.2449643196618178,0.963594519110086,0.49774970538194985,-0.7169743189904196,-0.8529891924538611,0.030962045738861556,0.9760336867165536,0.45263366620005935,-0.751767144452107,-0.8251119652397357,0.08215990413538986,0.9859062382395408,0.6336270593305525,-0.5925509219461325,-0.9272184474747419,0.13314171165760819,0.9931862124341966,0.593134803897195,-0.633065979540658,-0.9068002001297557,0.18377340456475405,0.9449614762132575,0.5510828181511718,-0.4519870381374412,-0.8839973957660606,-0.03168672260889044,0.960491381179043,0.5075816836271442,-0.49712073874420115,-0.8588699975234794,0.019592343356921716,0.9734955407115212,0.680827334718387,-0.5409471913523959,-0.9985735157809691,0.07081988853584166,0.9016337378328573,0.6423847889626791,-0.5833511482203982,-0.9945234206600106,0.12186120298582247,0.9226195836039655,0.6022530032211248,-0.3952432270264234,-0.9878580881332092,-0.09421112473114525,0.9411792730912899,0.7596899834860034,-0.441812674427522,-0.9785950456178025,-0.04305211479657699,0.9572640010146535,0.7253554522160114,-0.48722031406367966,-0.999957316263254,0.008220106650840239,0.8727820177817717,0.6891134980822033,-0.2882396710105543,-0.9991161912870443,-0.20679273659063582,0.896656530277016,0.6510594243345005,-0.33694813814820557,-0.9956477515770065,-0.4121491280193293,0.9181731599416906,0.7989187330635907,-0.3847705533775675,-0.9895611178768869,-0.364900533754275,0.9372753258109052,0.7670366448091773,-0.43158116101853483,-0.9974164155823119,-0.31669238287601104,0.8405047429147742,0.7331375272083601,-0.22771360647313857,-0.9997875620559356,-0.2676514454100836,0.8671742178075423,0.697310522697137,-0.27733057207198175,-0.9995296283330868,-0.46839262554323857,0.7399418282573773,0.8350118315188926,-0.32621825842933144,-0.9827808059902182,-0.4224847375685514,0.7734521626980885,0.8057073192900605,-0.3742481085867582,-0.990960786439673,-0.3754658673222213,0.6192236478783572,0.7742840878075676,-0.16629379593109592,-0.9965348979245732,-0.5658099735206569,0.6586620543082059,0.7408247688211331,-0.2166245199162953,-0.9994884825449069,-0.5227977435159226,0.6963684174231843,0.9683704058237197,-0.26638559965205927,-0.9692819021935475,-0.47841074426379765,0.5259306588895889,0.9543061449006738,-0.31544618147081527,-0.9806157663320418,-0.4327656975411309,0.5688398673915632,0.9377324034818204,-0.10422130407584768,-0.9893709651725698,-0.6163304071096329,0.6102532324893171,0.9904604924632461,-0.15506824496462387,-0.9955244757042824,-0.5751509489932044,0.6500618519898446,0.9820943081867652,-0.20550741237490247,-0.9519786942059242,-0.5324590516073066,0.47164020210367297,0.9711455705812427,0.27379370592434443,-0.9664219581049497,-0.4883669792230975,0.5162234651188872,0.9576430708722422,0.22412941586451252,-0.9783238812952901,-0.664431824780255,0.559449246864473,0.9971453552253665,0.17387574638943304,-0.9876531660175543,-0.6252467625180175,0.6012038791462285,0.9919636193477155,0.12316484649978504,-0.9309390948466378,-0.5844175270897685,0.4154986194549671,0.9841733774171533,0.3334817001859951,-0.8307536297658973,-0.5420514846384519,0.46158095353025724,0.9737951149563677,0.28471456465398604,-0.8581964706454278,-0.7099254347843009,0.5064494964062453,0.9608561230473296,-0.03037381662196064,-0.7278832868362916,-0.8446485070768617,0.309385030395883,0.99793960355619,0.18506441291923295,-0.9062456817804909,-0.6340822405175152,0.0978734339549763,0.9884230155486976,0.39186082256346794,-0.79426761287397,-0.7853968418067885,0.40512679730862106,0.9327507482961175,0.08346893063877256,-0.9447687642618925,-0.9000363311851807,0.19925892129209838,0.9987632104044811,0.29559859476228645,-0.8523028834427068,-0.9726474708007462,0.49661001704171853,0.964762751833414,0.49392490373266995,-0.9733607773023479,-0.8506821691512719,0.2985498705168964,0.885711460348959,0.19622914085215984,-0.9013790526520746,-0.943751276954111,0.08654855523591087,0.9866335163237344,0.4022990575493427,-0.787306278139557,-0.7923859421236964,0.3947025708835147,0.9285901507398203,0.5895831042609498,-0.9409802494627778,-0.9049347091271451,0.18810094856671522,0.8271850782010126,0.30644438836965926,-0.8462990484899261,-0.9752263903331402,0.4867062997893475,0.9617078354560491,0.5037819665642747,-0.25406426731463044,-0.8566057931195267,0.2876760923812495,0.8803743470763179,0.6775948002998669,-0.5446462422816256,-0.9474508420284045,0.07521248122034813,0.9847163933074863,0.41268525403246503,-0.351760701360454,-0.9940534598351741,0.3842272885823483,0.9243094374631197,0.5987311553264483,-0.14244924375420068,-0.9097160312459154,0.17691864446012193,0.820740668055486,0.31725054254251595,-0.4457595534328348,-0.9776791616177437,-0.03865144246313438,0.9585285194935914,0.5135738637964036,-0.24304786615699936,-0.8624186127443795,0.27676510254240755,0.8749233549316691,0.685915195402986,-0.5350727414077524,-0.9510278516993843,0.06386667826101194,0.7504625232120524,0.42301806852941354,-0.34109165680880904,-0.9952276265022273,0.37370230541204175,0.9199091621881919,0.607801758850647,-0.13118286023109976,-0.9143796790641682,0.16571345543447663,0.8141900928203023,0.7642033672243679,-0.4355500146461225,-0.9800054673817647,-0.5527307710815876,0.9552252151994091,0.5232993288198977,-0.2320000260814423,-0.999868644651909,-0.26340519982062716,0.8693591890160174,0.6941468654665752,-0.017616499021381495,-0.954481843270894,-0.46449675963193393,0.7428973215321092,0.4332961644618752,-0.3303784911020467,-0.9962730577059251,-0.643898048060747,0.9153898941028902,0.6167937415257352,-0.11989950783992642,-0.9915420251185406,-0.37138012531254233,0.8075341998305996,0.7714893444890267,-0.42528413625281486,-0.9822050067110782,-0.5621729515724689,0.6619696613483945,0.5329571036187887,-0.22092217615682083,-0.999619642741223,-0.7267143915080503,0.8636825690697097,0.7022887457012019,-0.006243971962483491,-0.957812369959511,-0.47453849521638275,0.7352360240160315,0.8388261149124745,-0.31962259001796767,-0.9971896182168318,-0.6525581306482683,0.5724566907126994,0.6257059402137277,-0.10860064611371574,-0.9900018194842285,-0.38191586087784846,0.8007738500446604,0.9898439812377284,0.10749254411825485,-0.9842774950891503,-0.5715424134274529,0.65340232128804,0.9972725055741267,-0.20981574933385405,-0.9992413372476574,-0.7344800606256612,0.8578942293793353,0.9700857717223187,0.005129362771565767,-0.967544324767088,-0.4845188479257638,0.7274796216739754,0.9995882821158729,0.21983495270976383,-0.9979771894752943,-0.6611338030254235,0.5630944208651333,0.9401303694894139,-0.09728773659167841,-0.988333554359243,-0.8068762680368321,0.7939099179325445,0.9913967461621598,0.11879284720053757,-0.9325384175029784,-0.580837944680572,0.6447504618189106,0.9963685814283778,-0.19868218225976234,-0.9987337771060807,-0.7421507227032622,0.4654835567277597,0.9727840041926482,0.01650203400826474,-0.9646077363104264,-0.868807821760822,0.7196291178181714,0.9998499578617146,0.23091566665309057,-0.9986356696067785,-0.6696239559051231,0.5536593131870522,0.9802266365722639,-0.08596224263014664,-0.764921799479012,-0.8135424363805865,0.7869432913629741,0.9928212711582696,0.13007778409741666,-0.6086864941348488,-0.590058342928988,0.6360152020831079,0.9953357742335786,0.34004366201898595,-0.8268542360834052,-0.7497253855193653,0.4553875679721741,0.975356404344632,0.027872570660937117,-0.6867258627754664,-0.8743830405584804,0.7116855279331421,0.9999823002327749,0.24196651101226294,-0.5145299453563912,-0.6780274910624629,0.5441525881358937,0.9779127412658046,-0.07462562921328489,-0.7575466161441823,-0.8201033707459849,0.3512097459756959,0.9941173719597851,0.14134589507089682,-0.5996235439949508,-0.9238834726779599,0.6271976720107904,0.9941742175862138,0.35071709166857623,-0.820404311953984,-0.7572030692702535,0.4452326735672596,0.9478068242190044,0.039239501919020967,-0.6784141156081701,-0.8798451554763038,0.2424769649244166,0.9999852921101998,0.25298605632980686,-0.5047445028356069,-0.6863433214767817,0.534575475433002,0.9754723502245853,0.45491910267192825,-0.7500734420461889,-0.826558222457907,-0.18700610110560326,0.9054084770057662,0.1525957225594628,-0.590483030880795,-0.9281759281157538,0.13059941736361222,0.9928840617368688,0.36134515508626114,-0.40331925796211204,-0.7645828066967222,-0.08543805692071721,0.9441192490481894,0.5532211125800348,-0.6700146136868919,-0.8851934599745258,-0.29748589165950545,0.9998589331069817,0.2639728771968665,-0.4948937702086015,-0.9644688703798705,0.017028081388652333,0.972905779119979,0.46501784520819367,-0.2966632279891703,-0.832906156563319,-0.19816652222542525,0.9005215431262245,0.163825811366619,-0.5812661371431923,-0.9323483214139935,-0.4041074861598624,0.9914654735707934,0.37192647750245805,-0.39288606333550913,-0.9882532867145428,-0.09676409758510206,0.940309549424885,0.5626595601964757,-0.6615284435105824,-0.8904272622350743,-0.308324898274035,0.8452446659856165,0.2749255524375848,-0.4849790216950562,-0.967411239285508,-0.505488072760273,0.9702133599451014,0.8576237756690526,-0.28578288302467486,-0.8391463519392772,-0.2093013099540703,0.8955181242787933,0.948081176448288,-0.5719740550129996,-0.9364001128619935,-0.41448450349322946,0.7790055223106398,0.8004586100156079,-0.3824020478031531,-0.9899274706410828,-0.10807762154415533,0.9363782181443404,0.91053482822744,-0.17497328697322928,-0.8955458852510605,-0.31912402220485847,0.8391124189606346,0.9780924559046144,-0.47500153979528553,-0.9702284708548938,-0.5152685177332605,0.9673954409718659,0.8634172653881755,-0.2748655712488837,-0.9996049947920317,-0.220409023975756,0.8903988676696258,0.951636843855419,-0.06189440264895152,-0.9403307783492534,-0.42480790610249736,0.7718239783125591,0.807223770804088,-0.37186856750163166,-0.9914736046941791,-0.6093698387183456,0.9323257637351983,0.9151779675828617,-0.16376426929623306,-0.9005486669143514,-0.32988186655523993,0.8328716304088848,0.9803967564852041,-0.46496261512434206,-0.9546386368572097,-0.52498231128941,0.6945254890852204,0.8690990696810013,-0.2639127048464595,-0.8683808986976265,-0.23148822747675915,0.8851644354888121,0.9550694143882498,-0.050539052646365004,-0.9801100143981295,-0.43507635862680694,0.7645425967347822,0.996441568994849,-0.36128698496593814,-0.9145925568032678,-0.6183480417176682,0.928152710393715,0.9197027261210994,-0.1525340682552229,-0.8063670278384548,-0.3405970397680719,0.8265231075937354,0.9825742400167516,0.06334162222500854,-0.9511903469071639,-0.5346281969224899,0.6862979492040548,0.8746684535903311,-0.25292570060115493,-0.8626848137522146,-0.7036942053659222,0.8798155048247229,0.9583784440342283,-0.03917716527666095,-0.7338951078020258,-0.4452885328132456,0.7571623194442813,0.9973357249980713,-0.3506586689532235,-0.9099343671893045,-0.6272462596768396,0.10663593687969117,0.9241085185520431,-0.14128413650795882,-0.7995886169385145,-0.7799139187112726,0.4131644269712043,0.984624624835702,0.07468783972857629,-0.9476190178384407,-0.5442049269103476,0.2078831422556366,0.9991624225957545,-0.2419059797125476,-0.856877138125163,-0.7117293516257297,-0.007105512162452348,0.9615635047611606,-0.027810210231592445,-0.7261222824718232,-0.45544310768866036,0.30694515481039925,0.9981008728495306,0.18758419265125215,-0.9051584750324622,-0.6360633415866016,0.0953207356551872,0.9880306417452499,-0.13001592926442254,-0.7927067770255984,-0.7869817827176753,0.40278067029805625,0.9865476457190724,0.08602439615220774,-0.6432386203160912,-0.5537112624763058,0.19674500618403132,0.998632410016111,0.2980477021615658,-0.8509586230554778,-0.7196724337130553,-0.01847791809659537,0.964624184572577,-0.016439657858430514,-0.718255531203476,-0.852027578492042,0.2961011639719769,0.998736913575223,0.19874332278430076,-0.5520125769719701,-0.6447981469328701,0.08399320442823437,0.9862123426485294,0.4046457293062009,-0.7857223982848527,-0.7939478484401955,-0.13203692542252451,0.9883430539187594,0.5916526849978877,-0.6344889842742405,-0.906023137824903,0.18558142059830537,0.9979732215548888,0.75103166043853,-0.8449300341195553,-0.7275224241681242,-0.029847933860605788,0.9610017508391391,0.5059957678918356,-0.710295871583155,-0.8579262825660546,0.28521887162390097,0.9992437649015101,0.6794787355979629,-0.5424935331724782,-0.6534495458442631,0.0726548084465231,0.9842664742405108,0.8212325730827471,-0.7786363841651059,-0.8008112147988444,-0.14330196410884255,0.9900106171937155,0.600783374679779,-0.6256572753163963,-0.9107779779441897,0.1743938295393242,0.9971849424799497,0.758492394586699,-0.443462298299311,-0.7352783075728232,-0.04121408871130008,0.9577944391157849,0.5157727950132572,-0.7022443332149853,-0.8637140114876803,-0.2548974622791183,0.9996213612657626,0.6877792168489213,-0.5329043163246298,-0.9750354435830744,0.06130701436313008,0.9821932882246887,0.8276689068552541,-0.7714496512620058,-0.9954746173199422,-0.15454846628727228,0.9189004410384976,0.6098363513600857,-0.6167446358486921,-0.9926467889141298,-0.36318710827086587,0.9962676747573861,0.7658550156326307,-0.43323993938732186,-0.9805125420887137,-0.05257491240491458,0.954463234016046,0.8861110986077759,-0.6941019575878631,-0.9998237882295865,-0.2658784520603771,0.8680889095432773,0.6959907319439878,-0.5232461668203124,-0.9724469814364475,0.049951290046802606,0.9799930527734437,0.8339981793511329,-0.3279567258219714,-0.9964909994940219,-0.16577497719145629,0.9143544203906389,0.9330610131145446,-0.6077522187458484,-0.99120590321443,-0.37376016945093893,0.9952215370383306,0.7731185712008012,-0.4229615396834015,-0.9396351771842948,-0.06392893538728567,0.9510085664405734,0.891324936058578,-0.21842012955587692,-0.9995456250490395,-0.27682504972388233,0.48324984960609824,0.7041122187008311,-0.5135203339680445,-0.9697327305663064,-0.4767944636487447,0.7334952305344953,0.8402195718613711,-0.317191379991973,-0.8946369236448795,-0.176980044640964,0.570351929161029,0.9370917954830161,-0.5986811872020446,-0.9896368022724752,-0.38428488371286307,0.3805753136244362,0.7802821217300823,-0.4126284287271579,-0.9356827631895546,-0.5736450477292744,0.6514586743775083,0.8964234781482104,-0.20730745704381737,-0.9991381678600075,-0.2877358392967603,0.4732615988385675,0.9707051916054689,-0.503728075831374,-0.9668930420685555,-0.4867607958979989,0.27296496651939106,0.8463322796315322,-0.30638500457418166,-0.8894976067314992,-0.18816221922913554,0.5609731283457075,0.9410013624196754,-0.09473489293632759,-0.9879396890558392,-0.3947598896555567,0.3700333773282329,0.9917291808201995,-0.4022419431352518,-0.9316093160252507,-0.5829237412016541,0.6427879100952536,0.9014060653660638,0.33174678534394275,-0.8317762522481023,-0.2986094094380134,0.46321213036606923,0.9733750788813145,0.526663243538906,-0.9639282832648051,-0.4966641642835757,0.26200606666404397,0.8523355119658539,0.23341028313319034,-0.8842432308270834,-0.6715265495681392,0.5515217640949623,0.9447892082111582,0.4368548536825691,-0.98611478309084,-0.4051838323078476,0.35944357618481393,0.9931247617559842,0.13262025597780497,-0.9274153626031109,-0.5921270318657456,0.150580709905067,0.9062720532006142,0.3424544027297527,-0.8254090933978683,-0.309444353621081,0.4531027441153195,0.9759190573816584,0.5362972023359764,-0.9608388376548579,-0.5065032877772118,0.2510132755947718,0.999994270666402,0.24445419426746373,-0.8788744755997792,-0.6799104018932661,0.541999058969064,0.9484548428890692,0.44705711430605377,-0.7558699437445675,-0.41555536330374226,0.34880728001443023,0.994391879239821,0.6287841295472528,-0.9231014454226827,-0.9248618740961253,0.13932749816888812,0.9110208122227925,0.35311772268546776,-0.8189351655841662,-0.9849679093153356,0.44293474776356573,0.9783367980358014,0.5458617895973294,-0.676527658831035,-0.8810611574791645,0.23998801525969402,0.999968093454648,0.25546648457135607,-0.8733920355130169,-0.9621042533639462,0.5324062447564236,0.9749045974220902,-0.06071960484428427,-0.748374805923676,-0.9982206583278882,0.3381258646515939,0.904316682000941,0.1551298746561406,-0.5884112558278837,-0.6103026527915711,0.12805626403305181,0.7915005403509164,0.363735365880974,-0.4009710881696052,-0.7662333001316509,-0.08799308792176676,0.9806279881022609,0.5553557681169831,-0.19480706175755577,-0.8863837016949274,-0.29993348988451407,0.9998125675869448,0.7210431211454243,-0.8677966197356805,-0.9651432805234729,-0.4978681132118009,0.9723096180999028,-0.04936351014714868,-0.7407828637387993,-0.9988342571638508,-0.6725541470401835,0.8994034251088433,0.16635531159233624,-0.5791773027038646,-0.619272631986153,-0.8158344031828774,0.7844984367151774,0.3743059588945737,-0.3905263153796657,-0.7734917039714413,-0.099316433959206,0.6329602885875713,0.5647779098223925,-0.9508264566024047,-0.8915915897119377,-0.3107636252368076,0.4518652487290412,0.7288768325624748,-0.8620889520503734,-0.9680574637135256,-0.50769931083128,0.9695888678225312,0.8589399176462944,-0.7330950992287886,-0.446342105427347,-0.68092732655662,0.8943738278805337,0.9488937026571321,-0.5698684313838037,-0.6281625065422592,-0.8223585682496238,0.7773948560232729,0.3848281343906409,-0.3800310269239387,-0.7806500545065799,-0.11062693313950014,0.6241144352347842,0.5741269959333052,-0.1724475867021025,-0.8966841478753862,-0.3215535624492751,0.4416901911724772,0.73661626173266,-0.8562697707597963,-0.9708464259763984,-0.5174648361318998,0.9667426985265959,0.8647082873135903,-0.7253125068273792,-0.9996737862044882,-0.6892124262282441,0.8892285409084116,0.9524216514085176,-0.5604858459961144,-0.636971126529874,-0.8287763589468204,0.7701907171431356,0.39530053129649045,-0.36948658039719595,-0.7877074257845023,-0.9296395176165184,0.6151878509427957,0.5834018171194125,-0.16123366547819348,-0.9016607174487009,-0.33230190581350816,0.4314579997603952,0.744260407539277,-0.8503398285912446,-0.6670753519847129,-0.5271634259157839,0.22758066442252614,0.8703648045573098,-0.7174360932345587,-0.4914554851078197,-0.6974083743543542,0.8839682297496672,0.9558264017685615,-0.5510307602043294,-0.9795978156487831,-0.8350869451153787,0.7628869519501799,0.9966544603834606,-0.35889433975294244,-0.9135524482563924,-0.9337700609201982,0.606181690390128,0.5926011736567811,-0.14999888823091748,-0.8048475786954089,-0.34300726500137835,0.4211699980552321,0.7518082811907908,0.06590095358088915,-0.6585593201409702,-0.5367938256433513,0.2164912329872107,0.8759087376912044,-0.7094668772863464,-0.4815187902754311,-0.7055141107662499,0.8785935748401887,0.9591075133233289,-0.5415043970501111,-0.2819931234950075,-0.8412895104634145,0.7554845052067609,0.9975195346507382,-0.3482556751269853,-0.908867663645897,-0.9377798184676762,0.5970971185487141,0.6017238755830394,-0.13874470820997944,-0.7980457675851146,-0.3536682552448801,0.4108275168386415,0.7592589063487376,0.0772451206399794,-0.6499581018162982,-0.5463547895955942,0.20537379780838091,0.8813393695920937,-0.7014058898230047,-0.4715198096473815,-0.7135285869643666,0.8731052714065475,0.9622645616519083,-0.5319079887950466,-0.2710632957763851,-0.8473832526718373,0.7479843344399673,0.9982555769899627,-0.33757196266020284,-0.9040653144735944,-0.941668271585654,0.5879353105332054,0.6107687428513036,-0.12747258117488722,-0.7911407270337025,-0.9919808839337899,0.40043189393935336,0.7666113192540173,0.08857929582773015,-0.6412728096022258,-0.5558450810352159,0.19422979695721862,0.886655997792627,-0.693254173555697,-0.4614598366196439,-0.7214507662539029,-0.021042109273762176,0.9652971383813119,-0.5222427767612521,-0.2600984052660444,-0.8533673834981328,0.7403874098177615,0.998862492192009,-0.32684458432053703,-0.8991460219367158,-0.9454349172918987,0.5786974514489672,0.9857846820189433,-0.11618396520664474,-0.7841333502273857,-0.9933541561722696,0.3899844740601224,0.7738645688515574,0.9212473015082624,-0.6325045669654731,-0.5652634723666057,0.18306067194124934,0.8918579345721497,0.9833011934225391,-0.45134017247772784,-0.7292796238789189,-0.03241138282208492,0.9682048512392997,0.5082062409590197,-0.24909987030308978,-0.8592411288783238,0.732694714023487,0.9993402017507066,0.6813582015263604,-0.03522753049594086,-0.9490792683603048,0.5693847362387827,0.9838100810183855,0.8226932678025431,-0.7770245435898566,-0.9945989352859954,0.3794866086037866,0.7810177169133359,0.9256116177655106,-0.6236545081026287,-0.9936745304808366,0.17186786751787925,0.8969445070456614,0.985307347187418,-0.4411621262283546,-0.7370141471548918,-0.04377646386783391,0.9709873241051207,0.5179683336599233,-0.23806911357862928,-0.8650037290270979,-0.2573765971794601,0.9996886438729946,0.6896387143275413,-0.023859158616105113,-0.9526008533839191,0.5599983695282829,0.9817082214457574,0.8291055315483626,-0.7698152266650388,-0.9957150602593243,0.36893965549846,0.9178856756881946,0.9298562035838852,-0.6147237777934375,-0.9923330765180834,0.16065283150751175,0.9019150572508561,0.9871860487046805,-0.4309270144301336,-0.7446533355997097,-0.055135882306145155,0.9736441970581659,0.9984179763321799,-0.22700756195174543,-0.8706544385360876,-0.26834995544613804,0.9999077734869147,0.6978300204416564,-0.012487700487698768,-0.9559992168359175,0.5505395654701253,0.9794793751824447,0.8354105481861517,0.20261529015196608,-0.9967023867183848,0.3583449790218804,0.9133129323798874,0.9339805099143974,-0.6057135312527205,-0.9908632615100713,0.1494170146062679,0.906768942233231,0.9889370549590568,-0.4206361610232617,-0.9387545066446495,-0.0664881687646287,0.9761751264245242,0.9977139170296879,-0.21591664626492715,-0.8761925264702911,-0.27928860189922095,0.9999975622474414,0.7059310603004622,-0.0011146270404792022,-0.9592739191285296,-0.4790472958965336,0.281428452427545,0.8416075021444605,0.21373944112187182,-0.9975607869497517,0.34770394962493667,0.06871232339156995,0.9379840032665449,-0.5966249339809446,-0.9892652755814622,0.13816187019833487,-0.14721241563097595,0.9905601394530145,-0.41029089715826816,-0.9347747545566097,-0.077831854793436,0.6495107424032847,0.9968808006552411,-0.2047978011589862,-0.881617276462621,-0.2901911215943463,0.47100075084071913,0.9566508354992914,0.010258590586850223,-0.9624245366698995,-0.4889995421306686,0.2704967756921565,0.8476955918300473,0.22483594430019962,-0.9982901499169656,0.3370179437543969,0.05736160699662169,0.9418661657773201,0.4289142954967717,-0.9875393254361835,0.12688885416796652,-0.15845213543897235,0.9920550922360568,-0.39989256102382625,-0.9306740867524501,-0.08916547305520811,0.6408211303411117,0.9959187349747614,-0.19365246488748242,-0.8303498290514237,-0.30105610426024815,0.4609376571595681,0.953276676245,0.021630481236936047,-0.9654506619188798,-0.49888853491307017,0.25953010944599936,0.8536740297315674,0.23590336432338016,-0.9988903812748972,-0.6734247261681109,0.04600347071816248,0.9456264952781975,0.43916043753362194,-0.98568563433069,0.11559942471116089,-0.16967135902225372,0.9934217199318809,-0.38944249767365513,-0.926453033664964,-0.10048755751487967,-0.37742316724160396,0.9948278444341218,-0.18248207913068168,-0.8239585214645891,-0.31188214448117973,0.450814939909605,0.9497792079995248,0.03299957392407301,-0.9683519034377475,-0.5087129950749993,0.2485298722578742,0.8603794144303034,0.24694026958983112,-0.9993614033819495,-0.6817888405150233,0.03463938376273134,0.949264505360091,0.4493497729456281,-0.9837044420450854,0.10429504214703839,-0.18086863514302481,0.9946598457633905,0.6307763128711188,-0.9221121412991159,-0.11179664362931478,-0.3879307613714196,0.9936082701430501,-0.1712880888090705,-0.8174606325498034,-0.9854076878436019,0.44063390849247924,0.9461588831701172,0.04436439802448015,-0.9711278859428373,-0.9989663089315579,0.23749748703907672,0.8545273947694392,0.25794523244513895,-0.9997031553101021,-0.9658769181800704,0.02327081610660391,0.952779725436271,0.4594809837138961,-0.9815960048521057,-0.8294344169981305,-0.1920425154024557,0.9957693095755636,0.6395606816837092,-0.917651971161415,-0.930072567505567,-0.39838817557758244,0.992260169856875,-0.1600719418964515,-0.8108570028270822,-0.9872797877077114,0.43039587985294,0.94241617005587,0.05572348346653007,-0.6661980277391795,-0.9983847131536991,0.2264343808593397,0.848564839611784,0.26891682936672984,-0.9999155928527921,-0.9628687851203289,0.011899238305646927,0.9561717008032373,0.46955275933811647,-0.9793605954839699,-0.8823904653761077,-0.20319155442803627,0.9967499678561683,0.6482623215421307,-0.9130731001872815,-0.9341906354345026,-0.4087940571644605,0.9907837179561205,-0.14883508923264405,-0.804148486494309,-0.9890241801835337,-0.5953073975857937,0.938551552787141,0.06707536092090681,-0.6576731288140063,-0.99767397353454,0.21534198476223781,0.8424925202304423,0.2798536411480064,-0.999998688530632,-0.9597361023034244,0.0005261213050977501,0.7070922198982705,0.47956379700608087,-0.9769985030971015,-0.876982123999714,-0.21431431006053908,0.9976016937543266,0.6568801068650498,-0.9083761206664199,-0.9381878632047526,-0.4191470601023094,0.9891791054239493,0.8035225584285284,-0.7973359513167423,-0.990640639629047,-0.6044072010907947,0.9345655312629296,0.07841856199066767,-0.6490631580392184,-0.9968341820102284,0.20422173358007797,0.8363112220968261,0.290754253081926,-0.47048152890801764,-0.9564792749505978,-0.010847063750706515,0.699004288792119,0.48951280176220485,-0.9745100332347243,-0.8714603425448084,-0.22540934354056677,0.9983243770969231,0.6654129229179505,-0.9035616401662037,-0.7457474527821238,-0.4294458452013851,0.987446539821458,0.8102407349989343,0.1590331791124393,-0.9921289569507233,-0.613428822842179,0.9304586210862139,0.08975161940118445,0.3674141602956351,-0.9958654472101351,-0.7687669555720339,0.8300217447790524,0.30161725514399684,0.558638266470923,-0.9530987243415316,-0.022218845708625628,0.6908259395357786,0.49939848667503356,-0.25896172374049503,-0.8658258352691903,-0.23647521969465962,0.5193711318433366,0.6738596659573279,-0.04541557990685469,-0.7381220993770686,-0.439689080285172,0.9855862452608295,0.8168541046752472,0.17025130262462626,-0.9934889396305748,-0.6223710958680646,0.9262313534972552,0.9217044942842992,0.377968082425407,-0.9947678944428029,-0.775990695642728,0.8236249018385171,0.3124412421746689,0.5680351583009675,-0.9495948877598556,-0.03358775359701396,0.6825582300214875,0.5092195730037102,0.731577104597349,-0.8600793310120575,-0.24751050712093906,0.5096186270450415,0.6822192433734617,-0.034051225032544194,-0.7304012678241548,-0.4498754403627036,0.9835984623763426,0.823361811999693,0.1814474036569839,-0.5666161815220822,-0.6312328634605479,0.9218842753048812,0.9260564457847718,0.38847311333177553,-0.9935416656797367,-0.7831140591572427,0.8171215207246577,0.323224814061095,0.5773585732023592,-0.9459682184365832,-0.8984267404039628,0.6742022297004815,0.5189747903633846,0.7392835346882138,-0.8542215730997287,-0.25851377837426365,0.49980020165899314,0.690490573831747,-0.022682465537506087,-0.7225859568344319,-0.46000360779995364,0.30205936277284157,0.8297630151822178,0.19262003396268326,-0.557208263415923,-0.6400129793253271,0.9174179488157548,0.9302886093066284,0.3989278941597558,-0.9921869195370397,-0.790136124688682,0.8105124426679212,0.6120670797175866,0.5866073051654318,-0.9422191854914851,-0.9033628512542183,0.6657590194446582,0.5286628768895411,0.7468943363963301,-0.8482533192494932,-0.2694836101508731,0.4899171257258416,0.962709739547841,0.8723041795423833,-0.7146771773401279,-0.470072272490276,0.2911979240569218,0.8821134100262124,0.2037677483308992,-0.5477282688700971,-0.6487103077299787,0.9128329517616377,0.76032566451114,0.4093310725543506,-0.3552024870434688,-0.7970559839133257,0.8037985225709483,0.603033537834422,0.5957801578409655,-0.9383482738724068,-0.9081821096054704,0.6572296914067628,0.9976336845057527,0.7544085252433148,-0.842175341471597,-0.9768995079737096,0.47997067764896484,0.9595706229070738,0.8778088198841649,-0.7066759523638814,-0.48008013202387023,0.2802988180790779,0.8766991815082528,0.21488910477375242,-0.5381774241482832,-0.6573237236508677,0.06753804603293381,0.7528891484542558,0.4196813028354809,-0.34454801150852343,-0.8038727417281243,0.7969806288979894,0.593921991884806,0.6048759446949372,-0.9343559842925396,-0.9128838920732384,0.6486153488791153,0.40722088687140884,0.7618251292479277,-0.8359884259693816,-0.9792667593373989,0.46996214402910397,0.9563073831356051,0.8831999132120213,-0.6985833168864117,-0.4900258918562525,0.26936345466900197,0.8711715495111803,0.9633325455241992,-0.5285569646788275,-0.6658521129186723,0.05618649363930561,0.7453552440906159,0.4299772461720536,-0.33384896772936085,-0.8105855163664824,0.7900596435625663,0.584733620472566,0.6138934891620024,-0.12355146544824615,-0.9174675904688744,0.639917106150897,0.3968071111873523,0.769143189051799,-0.8296933730375863,-0.9815073398203222,0.4598928194979381,0.9529204423425814,0.8884767621730264,-0.6904003177126411,-0.49990826547570777,0.25839324834638583,0.8655312290495779,0.9663217744185161,-0.5188681348949375,-0.6742943723625048,0.04482767336634977,0.7377249259517178,0.44021757075514295,-0.3231067396570708,-0.8171934395123177,0.7830364618133943,0.5754696121391168,0.6228316247976872,-0.11225746119214355,-0.9219326118782337,-0.3785128667040341,0.3863420073990902,0.7763617580435261,-0.8232909969588278,-0.983620959597158,-0.568519402820595,0.9494102386382206,0.8936386841920807,-0.682128013336287,-0.9993778662268548,-0.7319781969396372,0.8597789497145951,0.969186006901894,-0.5091121880737114,-0.6826494099526101,-0.8612563312188347,0.729999181040449,0.45040095197026386,-0.31232271682875185,-0.8236956564123806,-0.9503169975251015,0.5661311652097195,0.6316891954292707,-0.10094893612100647,-0.9262783787383703,-0.3890153307486512,0.37582692919692345,0.7834799024811194,-0.8167821258982707,-0.9856073452653058,-0.5778389828274447,0.16797297315251725,0.8986850115602046,-0.6737674738029437,-0.9989121138789476,-0.7396797031784843,0.8539154555795733,0.9719248724778896,-0.49929038617402244,-0.6909161449416229,-0.8669801319873894,0.7221790087034159,0.9997794560813779,-0.30149829418777024,-0.8300913259868185,-0.9537958126121784,0.5567194876384747,0.6404650553053401,-0.08962735302402615,-0.9305043289122459,-0.3994674745775481,0.36526323673548255,0.7904967016127851,0.12642885223483488,-0.9874662398802508,-0.5870838177536536,0.15675055095634927,0.9036150915209086,-0.6653197805716683,-0.9983171494689885,-0.7472855297890861,0.847941505103798,0.974538016866618,-0.4894039996732822,-0.9625503605511997,-0.8725917864629361,0.7142654205016749,0.9999536407724983,-0.2906348719033206,-0.8363796209379717,-0.9571512515563375,0.5472357968520701,0.6491580692439958,-0.07829417637948584,-0.9346099157614439,-0.9970153124949254,0.35465229645778773,0.7974112477960266,0.13770256603407438,-0.9891974029888013,-0.5962527117540939,0.1455078526401549,0.9084282863546284,-0.6567860263750915,-0.9975930499572797,-0.7547946929366025,-0.07043126680567773,0.9770251020505796,-0.47945430740309963,-0.212055825865886,-0.8780905687623506,0.7062594400798844,0.9999984786771643,-0.27973385518931,-0.842559727857387,-0.9603828803222129,0.5376813195923038,0.9762756449754446,-0.06695087216532646,-0.7525016944748257,-0.9978288826811321,0.3439954809184957,0.8042226466150509,0.14895846762315051,-0.5934484227127705,-0.6053444788068084,0.13424633247825138,0.9131239734612164,0.35791200089528763,-0.40668331642607264,-0.7622062212898809,-0.0817716204760763,0.9793858063183841,-0.4694425963838615,-0.2009276115676992,-0.8834757676028382,0.698162103033894,0.9999139639954682,-0.26879665412258946,0.0142106655751248,-0.9634902808896294,0.5280572917574007,0.9737498578656041,-0.05559890766951819,-0.7449627772533439,-0.998513380924257,0.333294168606356,0.8109300169964638,0.16019510101986592,-0.584256108294398,-0.9869096191731097,0.1229674471796142,0.9177015454404768,0.3685085941981833,-0.39626685171131676,-0.7695191561471016,-0.09310139675978366,0.9816198243063642,-0.4593701616582522,-0.18977340672374454,-0.8887466863939413,-0.30482275168029344,0.999700107659619,-0.2578246834605569,0.025581750660443943,-0.9664730513076754,0.5183649582421463,0.9710981135015571,-0.0442397513002628,-0.7373274970232815,-0.9990687186825473,0.3225497437658996,0.8971494485990812,0.1714110127344175,-0.5749882187223455,-0.9850115920634288,0.11167265569944755,0.9221604101707338,0.379057519888805,-0.38579912877642214,-0.7767325515597878,-0.10441913011870502,0.9837268670380755,0.5690034504396481,-0.1785946541614624,-0.8939026433276444,-0.3156349308565885,0.9993569373325294,-0.24681936245815414,0.036949526675117327,-0.9693308057466956,0.5086055727768563,0.9683207548938175,-0.032874872396050886,0.25076830201764566,-0.9994948241215185,0.31176359621838295,0.8920675940296997,0.18260475195740938,-0.565645952823923,-0.9829861509628799,0.10036341905046448,0.926499990885425,0.38955741343425526,-0.3752815016504837,-0.9205756799176151,-0.11572335657253148,0.9857066619616764,0.9931543542542012,-0.16739279988360883,-0.8989429714665683,-0.3264062817761181,0.998884497404236,0.7400756154886533,0.04831252316567922,-0.9720631745482,-0.5218472474054662,0.965418141301451,0.8672732594783193,0.2617618310396042,-0.999791642123246,0.3009371211820107,0.886870348034273,0.953972467320076,-0.5562305190472255,-0.9808335578679066,0.08904120011390082,0.7669090074579749,0.9961247084101251,-0.36471533081784213,-0.9160741938187756,-0.12701261388810986,0.9875589529851837,0.9917616298382161,-0.15616929288121115,-0.9038670188302405,-0.33713541113466244,0.9982828489861585,0.9410869711489757,0.05966927029690866,-0.9746698042726795,-0.5315152383636117,0.9623906481856042,0.8728790911707184,0.2727215004401955,-0.9999591342934953,0.29007171909146057,0.8815583828910353,0.9573215103319704,-0.5467431353048167,-0.9785540912224167,0.07770746345028746,0.7595606193062941,0.9970605748867167,-0.35410198304210205,-0.9114542109733942,-0.13828544176858676,0.9892835005095981,0.9902406182951907,-0.14492558494613678,-0.9086741484794297,-0.3478209310894783,0.9975520699031942,0.9371801071693108,0.0710182990419567,-0.9771503577453244,-0.5411144763463885,0.9592386671609373,0.8783720135233215,0.2836458925556801,-0.9999972789666878,0.279168795416733,0.8761323857174619,0.9605467211421347,0.48302827766162587,-0.9761480458817647,0.06636367511000534,0.7521139798745355,0.9978674688029782,-0.3434428311893367,-0.90671632898911,-0.1495403820423018,0.9908800814598977,0.9885915163722011,-0.13366313048330006,-0.7949443312766358,-0.3584614594388201,0.9966922546836513,0.9331520163344713,0.08235814137236912,-0.9795045140996396,-0.5506437196656474,0.9559626059449687,0.8837513160113347,0.2945335942855337,-0.9999060712087041,-0.7171129658252124,0.8705930583813885,0.963647682560574,0.49295542360748795,-0.9736157330746121,0.055011302443647686,-0.22925822860873996,0.9985452857849355,-0.3327392540505043,-0.901861160724144,-0.16077597885140646,-0.43301184087145983,0.9868145373851707,-0.12238338632253083,-0.7879930258572483,-0.3690556198007316,0.39572645499252346,0.9290032196892173,0.09368733044798,-0.9817319688189484,-0.5601017356872439,0.1891955623323702,0.8278109062544848,0.3053831972752355,-0.9996855228175215,-0.7249931833291622,-0.026170059540112565,0.9666239934692986,0.5028188043973378,-0.9709574803626682,0.043651813912214274,-0.24031363694888183,0.9990939381550757,0.6767746431519677,-0.896889334208024,-0.17199077884018307,-0.44323546115001694,0.9849099111912772,-0.11108781153012955,-0.7809397913468639,-0.3796020417910849,0.38525611653637953,0.9247342538919417,0.10500440080665158,-0.6285232642571726,-0.5694873009904822,0.17801557889147507,0.8213769456818489,0.3161932980984426,-0.9993356623216882,-0.7327796209470838,-0.037537624313308475,0.9694752688742088,0.5126171441754189,-0.9681736315983194,-0.8618538575428937,-0.2513379600512556,0.9995133549436879,0.6851036758537021,-0.8918014925603469,-0.18318333134304066,-0.4534017476880837,0.9828778841592195,-0.09977786722013285,-0.7737855401009965,-0.3900993612008433,-0.634293359741934,0.9203456711452515,0.11630788855383588,-0.6196366803422724,-0.5787992015263692,0.16681256864000638,0.8148367377152742,0.3269624984385274,-0.9988565349766331,-0.7404712714816007,-0.04890033349032664,0.6712779587116161,0.5223491754992108,-0.9652645468801514,-0.8675660865984932,-0.2623297718889856,0.9998034818980429,0.6933440884882189,-0.8865982939075904,-0.19435218857216244,-0.46350938544820214,0.9807187191373498,0.831962410836048,-0.7665311975419562,-0.4005462201725256,-0.6430448343276244,0.915838039124539,0.1275963315519335,-0.6106699446982282,-0.588036232774654,0.15558798071851979,0.8081911283488635,0.33768940526945374,-0.42629267629363216,-0.9408877963023917,-0.06025671727311088,0.6628046972443458,0.532013639503376,-0.9622306025063689,-0.8461535591432989,-0.27328765064061883,0.9999642814894119,0.7014948151352095,-0.8812804112979812,-0.7119070973055577,-0.473557066979297,0.9784326954196728,0.8382187915009991,-0.7591777020391429,-0.9971054919573126,-0.6517131292743045,0.9112119409045516,0.1388682696094252,-0.6016242171972517,-0.990158427758581,-0.7994366119132233,0.8014409772106842,0.3483726310359683,-0.41597711863105996,-0.9369746470179188,-0.0716053066818124,0.6542457001448023,0.541609286062598,-0.9590721909261207,-0.8400376345250286,-0.28421017887404126,0.47649958178087753,0.7095548014754974,-0.8758485326144355,-0.7038739882902927,-0.48354349258579793,0.9760201087097188,0.8443667462323812,-0.7517260047876658,-0.9979057093241697,-0.6602971233138979,0.9064679748839691,0.9397499038290574,-0.5925006679293705,-0.9885027035795405,-0.8062173337849715,0.7945871574515726,0.3590107938330853,-0.40560775317046627,-0.9329402974551136,-0.08294463374480636,0.6456020745430816,0.5511348739532881,-0.19977446464429993,-0.8338130487007821,-0.29509594372982695,0.4664697755096888,0.7175230049274174,-0.8703033604855788,-0.6957498312156558,-0.49346737049575906,0.9734812710822933,0.8504054797751393,-0.7441770696853037,-0.5251976838500501,-0.6687957060828851,0.9016067547079996,0.943577181062032,-0.5833004770510747,-0.9867191138246412,-0.8128937692007712,0.7876305556321898,0.3696025175848393,-0.395185921218133,-0.9287852694683204,-0.9190327161494198,0.6368749385162116,0.5605891710141415,-0.18861765241514977,-0.8274806068380598,-0.305943537103995,0.4563796300747829,0.7253983947816761,-0.8646456121948589,-0.6875356769639754,-0.503327417027953,0.25457309001656503,0.8563342110022829,-0.7365318732078217,-0.5154853876675517,-0.6772077782659319,0.8966289091890021,0.94728240396052,-0.5740248346326599,-0.9848078892061818,-0.81946505454512,0.7805720716083424,0.99399603124806,0.625918914713376,-0.924510100521973,-0.9234563600656784,0.6280654209435264,0.5699709543055209,0.7788468195060241,-0.8210411280558408,-0.31675155583015213,0.44623045066455397,0.7331799523346778,0.8954054740721171,-0.6792325880589651,-0.5131223567579191,0.24355817770619115,0.8621521730159272,0.251907531036669,-0.5057064120154855,-0.6855322517380896,0.8915350822251487,0.9508650932436271,0.45392620817447726,-0.9827692769463859,-0.8259303398039695,0.7734126184145836,0.9951761495338103,0.6347482193748686,-0.9201153436210734,-0.9277605523316454,0.619174661360642,0.5792790102676465,0.7859298491252251,-0.8144954453186275,-0.32751860186099563,0.43602355010360555,0.7408666710202955,0.9004114775049876,-0.6708416385282836,-0.5228509226829422,0.23251176046767214,0.8678586132464935,0.2628976218832748,-0.4958620218315687,-0.6937680497055463,0.886325932717134,0.9543247854805234,0.46403077556512884,-0.29772749264349146,-0.8322887886746777,0.7661531221461101,0.9962275390148942,0.6434954175875858,-0.9156015672396578,-0.931944736188072,0.6102038098120551,0.5885121348775738,0.7929112165310815,-0.8078444053286997,-0.9880823300806069,0.4257602486829325,0.748457556540074,0.9053010102072631,-0.6623639137646059,-0.532511856385944,0.22143526718582163,0.8734527935500561,0.2738537061908066,-0.48595349051506975,-0.7019141068449133,0.006770082147309615,0.9576610331503892,0.47407531928349395,-0.2868508463404744,-0.8385395786741868,0.7587945218389681,0.9971500636911566,0.652159377877094,-0.9109693552472637,-0.9360083703991312,0.6011540267023806,0.9900758942912602,0.7997900186642892,-0.8010888684165909,-0.989769051896718,0.41544187398913784,0.7559516269918448,0.9100734397042801,-0.6538005103852249,-0.5421039081982623,0.2103301306358732,0.8789339903038232,0.9778598153379109,-0.47598209976209155,-0.7099693694410281,-0.004603247677821495,0.7034558360232608,0.4840585400398873,-0.2759370950821345,-0.8446819012454134,0.7513377693485878,0.5343446923514166,0.6607389795360169,-0.06300685417023666,-0.939950929322428,0.5920264826462506,0.3402816385778069,0.8065653657326475,-0.7942297084298022,-0.9913277443312912,0.4050697607327059,0.9327282554619284,0.914728148669001,-0.645152536090201,-0.996413240062536,0.1991977872981468,0.8334880214369167,0.9801765285994897,-0.4659491393997797,-0.7179327955232547,-0.015975982060053955,0.6953269962456761,0.4939791464769192,-0.26498765059257146,-0.8507149618618378,-0.23040373246484153,0.5246967859946866,-0.3316290794090546,-0.9013520364300626,-0.9437719029769929,-0.4340724853501159,0.32956518699178183,-0.12121513765215729,-0.7872678126197682,-0.9927582057631218,-0.6174716673251903,0.11904411928787163,0.0948591002786574,-0.6364211095190779,-0.9953863920421246,-0.7720372185858181,0.8895546118361998,0.30650377097250436,-0.4558559072194804,-0.9515337352880285,-0.8905515026604673,0.9669248734009445,0.5038358553365365,-0.25400392921290404,-0.8632479914993756,-0.967480343193811,0.9991433390152312,0.6776406788362733,-0.04029091225911684,-0.7346517766089412,0.5735428442934035,0.9847055261434766,0.819802202530382,0.17530354047011257,-0.5717500556501636,0.3841696919564824,0.9242856269578846,0.9236820119086786,0.3827119697486688,-0.38214973322033413,0.1768572435907408,0.8207050260710776,0.9844293061639361,0.5722491732047775,-0.17470443932317994,-0.03871378038375787,0.6788005523663762,0.9992074125512405,0.7350644682560683,-0.8624501898918377,-0.2524770147766212,0.5051986170753331,-0.3100855873062548,0.863554986073743,-0.9510471332569471,-0.4544505114484158,0.30800578501440173,-0.09860666009131092,0.9517206972846133,-0.9952337120928574,-0.6352028591695912,0.09643022815333575,0.1174768314680573,0.9954445910309289,-0.9929465774815389,-0.7862935954529563,0.8997149827935129,0.32807459185092225,0.992684924067789,-0.9442925301043295,-0.9006673447648607,0.9724760605864269,0.5233524887828858,0.9435705625801875,-0.8515435330472677,-0.9729832783262743,0.9998261226301409,0.694191770643779,-0.0175541240556049,-0.7190306195735692,-0.999864510956193,0.980488022732018,0.8326148782590462,0.19765080733787213,-0.5529416499757513,-0.9800557890522001,0.9153647782460315,0.9321579672475933,0.4036261810192038,-0.588987833155652,-0.9144821062658733,0.8074974025203236,0.9881727455177289,0.5907537129840005,-0.7488477138636221,-0.8062055097389668,0.6619229008822557,0.9980435312225612,0.7502952433478554,-0.8737391910229159,-0.2744196668947117,0.48543906122038677,0.9613093953754897,0.874800775918949,-0.9578302970755849,-0.47459340739680816,0.28628702256854727,0.8796856855198553,0.9584563653164161,-0.9971942900728116,-0.6526054006115044,0.798829540349842,0.7569839253774111,0.9973556065997113,-0.9899930179218129,-0.800143148416693,0.9094098462567227,0.5989338308641696,0.9896820498528518,-0.9365627532531625,-0.9103171866283996,0.9775240941035849,0.5425983425820744,0.9357940216407853,-0.8393984907394171,-0.9779827973587946,0.9999916018077727,0.7103836915163113,0.838207892491292,-0.7030374401218736,-0.9999802482102453,0.9757632203078841,0.8449967637119632,0.21989581078466955,-0.5338471553878631,-0.9752823400284045,0.9059703249235396,0.9401516292739139,0.42433155836380226,-0.33972819367812834,-0.9050423732829428,0.7938719843351234,0.9914049098263081,0.6089526001000772,-0.7637279483200085,-0.7925402932243151,0.6447027741956854,0.9963632677594165,0.7651378198820459,-0.8845761243891003,-0.6430295286374718,0.4654283419134027,0.9547951661960693,0.8855939487411802,-0.9641178848619291,-0.4944907513737203,0.2644201368202928,0.8686416809028197,0.9646961333917233,-0.9986389253109158,-0.6696702876734342,0.051064494618745446,0.7419258592697916,0.9987505959623763,-0.986527241518124,-0.8135787117958762,0.9186341861577603,0.580564858957792,0.9861671196870894,-0.9283484040777872,-0.9194960354769384,0.9820663621281434,0.39209363863928015,0.9275333061146063,-0.826819148352707,-0.9824763135682195,0.9996396909301265,0.7262080638446782,0.8255871363012115,-0.6866805130353485,-0.9995786012833077,0.9705335634573925,0.8569414525709326,0.6850891172769443,-0.514476451271078,-0.9700042853830152,0.8961071276279534,0.9476588621116692,0.4448173889361667,-0.31824825238082516,-0.8951343764439008,0.7798358212305495,0.9941241267859591,0.6268364185507193,-0.10715904355238823,-0.7784650207998137,0.6271490819037884,0.9941674915207136,0.7795845183926525,-0.894955383021749,-0.6254442435089828,-0.9939292684393337,0.947786931344077,0.8959289202132557,-0.9699066434532667,-0.4432175458429956,-0.9470872680104051,0.8571482459440827,0.9704367730894726,-0.9995668703609873,-0.6863886910783702,-0.8560198140340111,0.7264839248770327,0.9996288373592386,-0.9825510414437768,-0.8265933341052463,-0.7249794179645392,0.5618955060442883,0.9821419521756874,-0.9196537326364701,-0.9281991422254805,-0.39373554258276827,0.37106865656164695,0.9187926900496077,-0.8138120143684499,-0.9864615020344242,-0.5820177146725423,0.16291428068520006,0.8125392259497207,-0.669968301296477,-0.9986597779852507,-0.7431218237965603,0.8684427647208236,0.6683432015320044,-0.494839559919239,-0.9642243559519508,-0.8695249071455582,0.9546757815606257,0.49293803492487676,-0.2966036512197854,-0.8847632420908313,-0.9553244107736347,0.9963289894890532,0.6443959153484017,-0.08451745496807088,-0.7639869749325999,-0.9965138169181021,0.9914573385887829,0.7936278642387612,0.1315153921413757,-0.6075353570311052,-0.9911697334802402,0.9402883168409824,0.9058003430788064,-0.975193577778317,-0.42271409715642017,-0.9395417092839196,0.8452113272825339,0.9756753142348292,-0.9999776451094532,-0.21815366086251986,-0.8440405810735075,0.7106661117695215,0.9999898763931174,-0.9780664749624249,-0.8391802816520965,-0.7091258964029192,0.5429354315423162,0.9776086299177775,-0.910483237503529,-0.9364220039353275,-0.5410976693482646,0.3498516856389242,0.9095766957915979,-0.8003838186049351,-0.9899363008432113,-0.6003627039143007,0.14043116698571986,0.799070912352573,-0.6529094517100319,-0.9972242537101043,-0.7581494258828473,0.8794947494471319,0.6512514887570094,-0.47494664134997394,-0.957945542238334,-0.8805333889410598,0.9611987571059524,0.47302104240084386,-0.2748055889904498,-0.8739343361905754,-0.961799717114989,0.9980183571519743,0.6616220053078063,-0.0618321375258123,-0.7491136464825352,-0.9981535750784465,0.9882342111815758,0.8072605914718671,0.1540286448303416,-0.5893121351614209,-0.9878973728511431,0.9323032024279405,0.9152031099189176,-0.9799759524068646,-0.4019919385629823,-0.9315100369380562,0.8328371010130476,0.9804090464359381,-0.9998710370237588,-0.19590021329356877,-0.8316246462425994,0.6944806039951874,0.9998335262644382,-0.9730758623636542,-0.8513330420202473,-0.6929054770732822,0.523694445288255,0.972569498428911,-0.900841663441795,-0.944160366143875,-0.5218301987848295,0.32845370341306196,0.8998900916444008,-0.7865415087354589,-0.9928989121531345,-0.6183970688548115,0.1178753949867918,0.7851891639398073,-0.6355127904292676,-0.9952727711900896,-0.7727847657014739,-0.09820725605019567,0.6338228221084433,-0.4548079880479592,-0.9511710928652217,-0.8910862876917092,0.9672244137966276,0.4528593114381751,-0.25286534388815674,-0.8626532615584085,-0.9677773936683484,0.9991913557053531,0.2507489549406794,-0.03911482848182967,-0.7338527308264756,-0.9992768941682507,0.984499776927165,0.8204756465952372,0.17646220396096252,-0.5707840064928835,-0.984113879653108,0.9238357195584356,0.9241323557946772,0.38379910767670145,-0.3810617915915038,-0.9229964065151129,0.8200319694910057,0.9846355204862651,-0.9992471012623306,-0.17354540805121157,-0.8187784334764444,0.6779357758451211,0.9991598678678821,-0.967581785762478,0.04207490069363788,-0.6763265523297627,0.5041825024606523,0.9670271649275036,-0.890733998947699,-0.9514102250658476,-0.5022927361985545,0.30688578108024495,0.8897378894027616,-0.7722922466936372,-0.9953478031256913,-0.30480371712850335,0.0952586349185461,0.7709011630503207,-0.6177873183893173,-0.9928063401113354,-0.7870202710095693,-0.12081673526208113,0.6160662190808373,-0.43443401963964606,-0.9439045128947858,-0.9011781433867841,-0.33125041317889586,0.4324632736035741,-0.23079426767286662,-0.8509258549591766,-0.9732543476173362,0.9998473782463064,0.22866590142060897,0.8497750969619775,-0.7182121238767273,-0.9998831929885076,0.9802559680009222,0.014190681965542877,0.7166887406633121,-0.5519605573755173,-0.97982121144433,0.9148902492606904,0.932583460764269,0.5501356852770517,-0.35993448538282824,-0.9140052229197982,0.8068025580197544,0.9883525496318029,0.3578933391402835,-0.1511008113865039,-0.805508589333595,0.6610401875207641,0.9979692497505313,0.7510728494276514,0.06478870861332171,-0.6593977000151883,0.4844096984294687,0.9609844969858743,0.8753704118678085,0.27765283684624287,-0.48249539016318094,0.2851590777627176,0.879125341759272,0.9587914312537937,-0.9972817067184051,-0.28306233981314644,0.0725925885659985,0.7562143022157672,0.9974404561923182,-0.9898262365914708,-0.07041133079839293,-0.14336370457166064,0.597990866841169,0.9895127209402375,-0.9361495620148136,-0.910803734556658,-0.352625445822622,0.411843481692808,0.9353784212534971,-0.8387581840873861,-0.9782277452166479,-0.5454208900377844,0.20646453744356844,0.8375654276219516,-0.702199917995746,-0.9999721578436027,0.9755049801258227,-0.008555532938737417,0.7006412431177075,-0.5328515269564926,-0.9750215892273031,0.9054714198709465,-0.22317609174767916,0.5309997179865169,-0.3386209510868848,-0.9045411381401578,0.7931557114227106,0.9915582107024852,0.3365624806176743,-0.12857803600808057,-0.7918219795571056,0.6438025807049077,0.9962622879315327,0.1264090269558542,0.08746899521795626,-0.6421276790229528,0.4643862635327913,0.95444462104658,0.8861400104601996,0.29943154963228213,-0.4624484037146913,0.2632848347351167,0.8680579395866578,0.965005449382675,0.49741176415439586,-0.26117450762819033,0.04988898321461229,0.741136180335703,0.9988087223187149,-0.98633400251937,-0.04770473324722394,-0.16583649830326624,0.5796061174754736,0.9859713421241245,-0.9279102525934659,0.16799267478006044,-0.3738180320352214,0.3910106042707499,0.9270927667165039,-0.8261565444278125,-0.9826950132582143,-0.5643436537626695,0.18415634987096194,0.824922406619659,-0.6858243978091934,-0.9995437427036181,-0.7285165254455317,-0.0312973212581823,0.6842312377161855,-0.5134668021411465,-0.9697174962996866,0.8955841046387887,-0.2452895238677765,0.5115890144152524,-0.3171322162069721,-0.8946090488406618,0.7790984905018874,-0.4478276178541144,0.3150574865521901,-0.10598873507380509,-0.7777256855222358,0.6262318740387959,0.9940398655833734,0.10381394564985844,0.11010402585425157,-0.6245254247652132,0.44412255778371357,0.9474109208048113,-0.11227732046850523,0.3210553382112219,-0.44216214905162016,0.2412743696082991,0.8565414090968305,0.9707201790956366,0.5170145601602467,-0.23915154521544574,0.027159565582666422,0.7256745987459581,0.9996602104050577,0.6888311247364568,-0.02497345353419761,-0.18822348915925857,0.5609214831501266,0.9819198272565869,-0.9191908476033012,0.19037080556002464,-0.39481720689125643,0.36997542015152335,0.9183274395733086,-0.8131274559982522,0.39682545595348256,-0.582974429241165,0.1617528808341239,0.8118525753833712,-0.6690940359195184,-0.9985981692281483,-0.7439089136126322,-0.05402291651885893,0.6674672149036525,-0.49381641247755276,-0.9639116769694611,-0.8701056180415655,-0.26727604456173426,0.4919136175525949,-0.2954793988941898,-0.884214093828699,0.7646381683846751,-0.46804837522471554,0.29338948350734223,-0.08334459616149106,-0.7632270005725863,0.6083371585076696,-0.64696458726417,0.08116515158969423,0.13268208928410227,-0.6066000445497581,0.42362906551012264,0.9398870354576878,-0.13484929108389684,0.34251301455593486,-0.4216471221685363,0.21913907047367265,0.8445817088781782,-0.34456677331870184,0.5363498557277167,-0.21700484713234636,0.004416095743569273,0.7098375571822693,0.9999944798961788,0.7051411531245235,-0.0022292526961526517,-0.2105130942359257,0.5419466311903025,0.9773602725687305,0.8410049808305731,0.2126504395511819,-0.5401074751427981,0.3487488128216043,0.9090869749550935,-0.7996776599761019,0.4176001470401155,-0.34669842401525724,0.13926572176248472,0.7983626961705845,-0.6520174885222806,0.6030494805633688,-0.13709984572991094,-0.07672056062503244,0.6503578482916407,-0.4739105249672901,-0.9576071351350378,0.0789007855272068,-0.28912427812685987,0.47198370733870787,-0.27367370219496967,-0.8733616513957853,0.2912170435031564,-0.4880269669868331,0.2715696823865751,-0.06065733522181485,-0.7483334262465641,-0.9982243762649935,-0.6641406112810109,0.05847436313458539,0.15519150374391666,-0.588360812867937,-0.987714123542141,-0.8092413587226137,-0.15735149143117627,0.36379347658483346,-0.4009139374254742,-0.9310812941947988,0.8321850268126252,-0.36582961647932666,0.5554076468831479,-0.19474587195646897,-0.8309704307568604,0.6936332496412612,-0.5572248588234558,0.7210863454284329,0.020516101544754497,-0.6920563382754594,0.5226913790781549,0.9722950371486193,0.8530929930966634,0.23482004939566098,-0.5208257882991468,0.3273417648087658,0.8993761538265096,0.9452633703258216,0.43815877414904053,-0.32527461076848624,0.11670650738623023,0.7844597485692666,-0.6346035909274823,0.621037113500713,-0.11453431849137598,-0.09937850994273874,0.6329119901706304,-0.4537594388050924,0.7749153290601225,0.10155430054834823,-0.3108229204094469,0.45180959539753757,-0.251726408254682,-0.8620573365348668,0.3129007113954933,-0.5077530563289604,0.24960937263280766,-0.037938690516548315,-0.7330526683961283,0.5096358225829346,-0.6809730126644598,0.03575332037142052,0.17762062298869566,-0.5698171665960904,-0.9839042332587404,-0.8223940615962765,-0.17977227899788586,0.38488571390602483,-0.3799733220561236,-0.9225428430231591,-0.9254123660320729,-0.38690318144486424,0.5741780732321117,-0.1723861363569295,-0.8181021326153429,0.677070060140919,-0.575967144068755,0.7366584516949726,0.043250840869603215,-0.6754590948348134,0.5031656893733059,-0.7381355828742439,0.8647396198250578,0.25686816466146806,-0.5012746291090168,0.30576535199978,0.8892000005120326,0.9524406633573684,0.4584907003617104,-0.3036825022594933,0.0940869097165574,0.7701509258866562,0.9956662696868155,0.6387034253130568,-0.09190953183779359,-0.12198504137587506,0.6151386669299247,-0.4333735800501031,0.7890910754050088,0.1241552719430438,-0.33236074465348087,0.4314017197016365,-0.22964887248031657,0.9026311066145365,0.33442248621185566,-0.527216437082929,0.22751991638733882,-0.015200416545247907,-0.7173926331998253,0.529073413968591,-0.6974530824242948,0.013013779040497778,0.1999578423177349,-0.5509787001129636,0.6990185807220965,-0.8351212623875015,-0.20210005339408482,0.40577881351402584,-0.3588361106176187,-0.913527073350359,-0.9337923849055084,-0.4077765648708038,0.5926514230611208,-0.1499372091357228,-0.8048105530114097,-0.9888588754782764,-0.5944114271388665,0.7518494150035571,0.065963202451571,-0.658512372640763,0.4833796645582737,-0.7532894861566466,0.8759388351163025,0.27878337777722395,-0.4814641132326952,0.28403073790981626,-0.8769917273769807,0.9591251689229281,0.47858540605335215,-0.2819332701243149,0.07141863200664104,0.7554436314274865,0.9975239239739918,0.6560392755495918,-0.06923719170708983,-0.14452845843166418,0.5970470743874459,0.989342021199432,0.8028585504460309,0.146692006095249,-0.3537266073092999,0.4107706391716149,-0.20745251766525888,0.9121873165717976,0.35577123270646555,-0.5464070390045227,0.20531274261113905,0.007545722036457605,0.9789203271022203,0.5482372657324301,-0.7135722938647031,-0.009732495546829282,0.22219160457883175,-0.5318551603356281,0.7151026571410979,-0.8474163761138659,-0.22432326235432593,0.4264619654360913,-0.33751323938479905,0.8485754136645978,-0.9416892648278059,-0.4284389669854423,0.33545390139542397,-0.12741070524208933,-0.7911025689339207,-0.9919887666697227,-0.6125481650650098,0.12524136952962392,0.08864143504195424,-0.6412249398324776,0.46334354181150506,-0.76805364167699,-0.09081946856669817,0.3005543499343779,-0.4614044905201668,0.26214916790650067,-0.887693869331179,-0.30263937520509904,0.4984324943357622,-0.26003816729387214,0.048713402696436266,0.7403454746635564,-0.5003271484257586,0.6730356947384786,-0.046529028641093574,-0.16699709727235426,0.5786465730318705,-0.6746515043472682,0.8162106309686946,0.1691528426249089,-0.37490945379920493,0.3899270282130144,0.9266509429641191,0.9212715659192979,0.37693590515743,-0.565314932983766,0.1829993411715701,0.8242565341262289,0.9833125446110055,0.5671174626048583,-0.7293223069959456,-0.03247373459545795,0.6833724102510188,-0.5124564416764815,0.7308167434495437,-0.8592730413523747,-0.246430407714733,0.5105773360273094,-0.3160157406918421,0.8603896000133543,-0.9490989199975124,-0.44887969717762555,0.31394019886012847,-0.10481827976300555,-0.7769852728170794,-0.9946054084279793,-0.6303679740005389,0.10264322183411627,0.11127380505019842,-0.6236057408308906,-0.9936675228559374,-0.7824204105438801,-0.11344681195922338,0.3221698169538432,-0.44110613970789825,0.24013196339162624,-0.8979367234480667,-0.32423930150096447,0.5180216964365979,-0.23800852217176677,0.025982969344449217,-0.9715227304630821,-0.5198910213891155,0.689683889027601,-0.02379679171621978,-0.18937933275002333,0.5599466831795658,-0.6912657638615631,0.8291404086813028,0.19152616042097356,-0.39589832423703647,0.36888167119343024,-0.8303609657243731,0.9298791545172926,0.3979055530817353,-0.5839303361821896,0.16059125689759196,0.8111648001115237,0.9871960017153113,0.5857042360777341,-0.744694972849421,-0.05519817191564506,0.6665903035950458,0.9984144666514491,0.7461527092671696,-0.8706851235308254,-0.2684100513620865,0.4908885187044307,-0.2943547372241953,0.8717586256008537,-0.9560175167005337,-0.4690881795280109,0.29226406542386485,-0.08217162189290698,0.9566566558681302,-0.9967074469172523,-0.6478616340760938,0.07999196711038693,0.13384860261479226,-0.6056638917109056,-0.9908548457507199,-0.7963823594715527,-0.13601545860649134,0.3436185951140209,-0.42057956304893823,-0.9387330079117461,-0.907714990132279,-0.3456714681978257,0.5373428770123827,-0.21585573277302902,0.0032390925496161432,-0.9766607062114526,-0.5391859056491584,0.7059752447344562,-0.0010522424645632042,-0.2116635844213655,-0.999999999151893,-0.7075223663404097,0.8416411937892678,0.21380038365409568,-0.416682359098758,0.3476454568627399,-0.8428201635385763,0.9380056288476398,0.418669326900966,-0.6022436170944164,0.13810008360653286,-0.9387613932371649,0.9905686891361775,0.6039879694585403,-0.7596823376938968,-0.07789405001076763,0.6494633068485947,0.9968758752020618,0.7611026198511358,-0.8816467181018013,-0.29025082115183926,0.47094571841072647,0.956632664910117,0.8826766081569184,-0.9624414752936769,-0.48905395828098863,0.27043671619669657,-0.059482448885764684,0.9630328812108798,-0.9982937945545982,-0.6650200941699077,0.05729932499079325,0.1563541476618844,0.9984190998767744,-0.9875295058966469,-0.8099322646258132,-0.1585137316171009,0.3648895869371941,-0.39983538087911075,-0.9306512615717255,-0.9170236101633873,-0.36692478641264414,0.5563860393924768,-0.19359126082684833,-0.8303150640805724,-0.9812933631792844,-0.5582018181408138,0.7219013328028255,0.02169285121145246,-0.23383832253934775,-0.9997403652031949,-0.7234129007087144,0.8537065184563736,0.2359639877658999,-0.4372508048411133,-0.9715032098382066,-0.8548432909195736,0.9456467843180255,0.43921648355481563,-0.6202453005314486,0.11553745810551333,-0.9463556782917432,0.9934288618640181,0.6219592028460061,-0.7742766471507249,-0.10054962616058583,-0.9936767746357962,0.9948215057568957,0.7756587402014191,0.10272515666302506,-0.31194141679200044,0.45075925343939804,0.9497596847055905,0.8931378987785097,0.3140184036203984,-0.5087667032544312,0.24846944452689054,0.8603476181848878,0.9689108387334364,0.5106481588474504,-0.6818344765908078,0.03457703652129946,0.1787787959484883,0.9994392455419514,0.6834325439686945,-0.8230631153616081,-0.18092999051057648,0.3859717869313015,0.9832975561299944,0.8243031707204389,-0.9258577673135117,-0.38798825979758433,0.5751413307512975,-0.1712266258463387,0.9266819046793381,-0.985418304455803,-0.5769289201374391,0.7374539131639213,0.0444267211277214,0.9857880396783042,-0.9989634711876313,-0.7389291452929754,0.8653301401511977,0.2580055054317249,-0.5002558275752554,-0.965860758592105,-0.8664241271685822,0.9527986674373963,0.45953639205948627,-0.30256086668185916,-0.8876559402506426,-0.953460324217534,0.9957750400614793,0.6396086380246077,-0.09073743842681269,-0.12315317849686064,-0.9959734696931956,0.9922524212351983,0.7898135390628578,0.12532309078366224,-0.3334706156898433,-0.9919783577925786,0.9423953041584189,0.9031370848524384,0.3355314976849428,-0.5282162151844716,0.226373616157802,0.8485318307983769,0.9742874872134917,0.5300718313623587,-0.698296081671482,0.0118368580867252,0.7150450763173104,0.9999422869378894,0.6998597816570024,-0.8357681178502934,-0.2032526372400874,0.4068542872841169,0.9789035002792507,0.8369668826689471,-0.9342128908392097,-0.40885099022946275,0.5935990472061169,0.9121535603390373,0.9349907426317305,-0.9890333958194898,-0.5953575223413246,0.752624938999752,0.06713760490724827,0.9893540117997113,-0.9976697190658157,-0.7540630720751283,0.8765060448769622,0.27991353249375284,0.9975181276597141,-0.9597185763978882,-0.8775566804257742,0.9594575778614736,0.4796185390080998,-0.2808038098573063,-0.8769521450519819,-0.9600716551105183,0.9976060098290994,0.6569271432754122,-0.06806295669757138,-0.7532353095940858,-0.9977548536543734,0.9891699508669154,0.8035596928217814,0.14785618343888018,-0.3548272787584118,-0.9888466108152738,0.9345433335578602,0.9126689928558207,0.35687098963140856,-0.5473924310025459,-0.9337629084073322,0.8362770177940027,0.9791600448032288,0.5492212476798809,-0.7143963922696397,-0.010909444671942116,0.6989596751052903,0.9999279637937872,0.715924915813177,-0.8480406985947238,-0.2254701221932125,0.5290035147626794,0.9740029652388761,0.8491975526389959,-0.9420846578463541,-0.4295021834483758,0.6117496388377962,0.9025956501654915,0.9428158216094076,-0.9921367668423161,-0.6134780898968815,0.7674065609065012,0.789040474650064,0.9924080976953451,-0.9958597782178513,-0.7688068508461994,0.8872284502831418,0.30167673386145677,0.9956586060189987,-0.9530798411862299,-0.8882351907704314,0.9656200703072906,0.49945253401027584,0.9524155599290969,-0.8657946197240038,-0.9661862503051122,0.9989208238333731,0.673905758100779,-0.04535325957565631,-0.7380800090918784,-0.9990200048412433,0.9855756895049551,0.8168900892952073,0.17031277613271412,-0.5758998066827901,-0.9852032401386238,0.9262078354695356,0.9217286910328301,0.37802583852615396,-0.5662854290419677,-0.9253811477294087,0.8235895197433921,0.983525990468635,0.5680864999992423,-0.7301270781747312,-0.8223471968727863,0.6825126360712265,0.9993962835203591,0.7316196344267631,-0.8598745078303427,-0.2475709501676448,0.5095649503075743,0.9685984865182599,0.8609888525504286,-0.9494689955267738,-0.44993115464258926,-0.9680524525558042,0.8925707420566746,0.9501530929603231,-0.9947268118574921,-0.6312812473239237,0.7817911309557644,0.7748632630827884,0.9949487171982646,-0.9935345850969982,-0.7831528532576107,0.8974918086572202,0.6209725511539336,0.9932839361907637,-0.9459479878015549,-0.8984541332010967,0.9712829563357631,0.5190281150680617,0.9452364890201638,-0.854189137107836,-0.9718009461440011,-0.5208961029552118,0.6905356978604695,0.8530500127985775,-0.7225428301258787,-0.9997682686716652,-0.6921157943472878,0.8297978314106442,0.19268124994985095,-0.5571564598476264,-0.9810501308222155,-0.8310162518669927,0.9303114919463598,0.3989850989688185,-0.3657529547540946,-0.9165206000273629,-0.9311113406677839,0.9873830652938702,0.5866578275445298,-0.7454800004179544,-0.8091929654136761,-0.9877269923194222,0.9983475212060017,0.7469358171382336,-0.8712634228105158,-0.6640790284056834,-0.998219466422526,0.9626928603644294,0.872334681650697,-0.9563620832655018,-0.4701273339768001,-0.9620988034541259,0.8820840228439073,0.9569987604213656,-0.9968021907902301,-0.6487577833684878,-0.8810517040554083,0.7602851416020752,0.9969745558061652,-0.9906953427451569,-0.7970936567680458,-0.13718143769914332,0.6029837714677608,0.9903953468158813,-0.9383267062248691,-0.9082082204941775,-0.3467756841986254,0.4175253014803947,0.9375683580447055,-0.8421417018151987,-0.9769128376149979,-0.5401767957770409,0.7068083583167726,0.8409604134241433,-0.7066318115454826,-0.9999992579981233,-0.7083536597111583,0.8422762407745992,0.7050827447186214,-0.5381248433799599,-0.9763894316615536,-0.8434530418430509,0.9384129549032771,0.41973792675541133,-0.34448944611662785,-0.9071858496989608,-0.9391663034119876,0.9907292736500178,0.6049256216148623,-0.13476767274898127,-0.7956200620453729,-0.991023991025056,0.9967822194744635,0.7618655394404171,-0.8822015509744051,-0.6469017761121518,-0.9966045435103603,0.9562891423152878,0.8832291696713565,-0.9627603546175403,-0.46797558282386464,-0.9556473698188556,0.8711409182969891,0.963349282082523,-0.9983618298510916,-0.6658986557686851,-0.8700650176572956,0.7453136528463474,0.9984845653614952,-0.987343520170422,-0.8106220484838305,-0.7438538646223881,0.584683011354665,0.9869943324343191,-0.9302199396645847,-0.917492405939527,-0.3680194480242083,0.3967498474534281,0.9294151344507505,-0.829658547121652,-0.9815192798540795,-0.559178004149479,0.19028994104262675,0.8284357058407986,-0.6903551856226092,-0.9997128533080335,-0.7242250268579521,0.8543188611279406,0.6887714104152562,-0.5188148041315828,-0.971223554076286,-0.8554534339382123,0.9460288882520125,0.516944051410437,-0.32304770056872434,-0.897381726491752,-0.9467353467697095,0.9935628842276115,0.6228804305558792,-0.11219547068468655,-0.7816355093120774,-0.9938082394670164,0.9947011882040956,0.776401076778594,0.10389587046670606,-0.629389820462015,-0.9944739829879138,0.949390645618696,0.8936666798653088,-0.9686604991531191,-0.44775396746523677,-0.9487014895856308,0.8597470903169365,0.9692013722194481,-0.9994049220915594,-0.24520966921987392,-0.8586281644910146,0.729956542980054,0.9994779645937659,-0.9834808515870249,-0.8237310288908439,-0.728460097036473,0.566079739525453,0.983082652711874,-0.9216318825163259,-0.9263018859515829,-0.38907280064812466,0.37576911727700757,0.9207810366705322,-0.8167461317415347,-0.9856178895138255,-0.5778898969537123,0.16791147459863087,0.8154823702621146,-0.6737213737923692,-0.9989092027855787,-0.73972168403118,0.8659194616863309,0.6721037096409482,-0.49923633300867437,-0.9655551708625488,-0.8670112192168036,0.9531553515512972,0.49734030508562693,-0.30143881194946653,-0.8871133030041852,-0.9538145545602995,0.9958824309324055,0.6405129646499731,-0.08956521931210312,-0.7672465427430666,-0.99607829709075,0.9921055041088245,0.7905349085471383,0.7658421644572478,-0.6115522220430675,-0.9918288871952707,0.9420009395182162,0.9036418119232251,-0.9740594641704936,-0.4273006867110607,-0.9412647565139907,0.847908434006546,0.9745520029934731,-0.9999309278215495,-0.2230957982834736,-0.8467470619203527,0.7142217576858467,0.9999542395237772,0.7007000130363904,-0.8364138154760277,-0.7126894282753959,0.5471835812087991,0.9786623315297308,0.8376104266916728,-0.9346321025547161,-0.5453518485593903,0.3545939662634438,0.9116705319378948,0.9354075481850356,-0.9892065459965482,-0.5963027927611818,0.14544613169790543,0.8021071086713866,0.9895246156142028,-0.9975887222350391,-0.7548356133471945,-0.07049349635734711,0.6550882661707466,0.997434563171668,-0.9593872148100766,-0.87812041774544,0.9597886576089251,0.47747923767184464,0.9587680257206784,-0.8763858920610745,-0.960400264041287,0.9976867136439229,0.2775737043430379,0.875330586773588,-0.7524606071090716,-0.9978329893811536,0.9889965101810664,0.8042597219806354,0.751018464456131,-0.5933982099288487,-0.9886706246901827,0.9341238474064059,0.913149404767635,0.591636572609549,-0.4066263229742694,-0.9333410183279841,0.8356310746203014,0.9793984060181966,0.5502044687599335,-0.20086649883027624,-0.8344278571612509,0.6981174380535293,0.999913143729547,0.716746182673795,0.014273043860585685,-0.6965500179948653,0.5280043131712066,0.9737356559373175,0.8498185151717773,-0.9424787457415015,-0.5261458832010109,0.3332353503173,0.9020883339769726,0.9432074831732026,-0.9922833925514785,-0.3311726922043644,0.12290553578307156,0.7883168413540665,0.9925521691515694,-0.9957520948656576,-0.7695589949435988,-0.09316351023182001,0.6377338836998241,0.9955483597663953,-0.952722877184793,-0.8887752816870094,-0.3048821667596565,0.45737112517415723,0.9520561440576972,-0.8652050439647732,-0.9664890678034634,0.9989747988363922,0.25565083589756543,0.8641064467675444,-0.7372853525703951,-0.9990714084702617,0.9853758149968705,0.04199260325582824,0.7358061917068658,-0.5749371769035725,-0.9850008295399852,0.9257634448466154,0.9221845392232387,0.573146523685615,-0.38574157305489354,-0.9249343747253792,0.8229213643952017,0.9837380737918312,0.38372304432900706,-0.17853327217534498,-0.8216769241012699,0.6816519163679027,0.9993546984738092,0.7324215118497361,0.03701186861532881,-0.6800502166353869,0.5085518586585629,0.9683051749689983,0.8615869123107287],"x":[1.8110048645192806e18,4.208856674911989e297,8.417713349823978e297,1.2626570024735968e298,1.6835426699647956e298,2.1044283374559944e298,2.5253140049471936e298,2.9461996724383924e298,3.367085339929591e298,3.78797100742079e298,4.208856674911989e298,4.629742342403187e298,5.050628009894387e298,5.4715136773855865e298,5.892399344876785e298,6.313285012367983e298,6.734170679859182e298,7.155056347350382e298,7.57594201484158e298,7.996827682332778e298,8.417713349823977e298,8.838599017315177e298,9.259484684806374e298,9.680370352297573e298,1.0101256019788774e299,1.0522141687279974e299,1.0943027354771173e299,1.136391302226237e299,1.178479868975357e299,1.2205684357244769e299,1.2626570024735966e299,1.3047455692227165e299,1.3468341359718365e299,1.3889227027209564e299,1.4310112694700763e299,1.473099836219196e299,1.515188402968316e299,1.557276969717436e299,1.5993655364665556e299,1.6414541032156758e299,1.6835426699647955e299,1.7256312367139154e299,1.7677198034630353e299,1.8098083702121553e299,1.851896936961275e299,1.893985503710395e299,1.9360740704595147e299,1.978162637208635e299,2.020251203957755e299,2.0623397707068744e299,2.1044283374559947e299,2.1465169042051143e299,2.1886054709542346e299,2.230694037703354e299,2.272782604452474e299,2.314871171201594e299,2.356959737950714e299,2.3990483046998335e299,2.4411368714489538e299,2.4832254381980733e299,2.5253140049471932e299,2.567402571696313e299,2.609491138445433e299,2.6515797051945534e299,2.693668271943673e299,2.735756838692793e299,2.7778454054419128e299,2.8199339721910327e299,2.8620225389401526e299,2.9041111056892726e299,2.946199672438392e299,2.9882882391875124e299,3.030376805936632e299,3.072465372685752e299,3.114553939434872e299,3.1566425061839917e299,3.1987310729331113e299,3.2408196396822316e299,3.2829082064313515e299,3.3249967731804714e299,3.367085339929591e299,3.409173906678711e299,3.451262473427831e299,3.4933510401769515e299,3.535439606926071e299,3.5775281736751906e299,3.6196167404243105e299,3.6617053071734305e299,3.70379387392255e299,3.74588244067167e299,3.78797100742079e299,3.83005957416991e299,3.872148140919029e299,3.914236707668149e299,3.95632527441727e299,3.99841384116639e299,4.04050240791551e299,4.082590974664629e299,4.124679541413749e299,4.1667681081628696e299,4.2088566749119895e299,4.250945241661109e299,4.2930338084102286e299,4.3351223751593485e299,4.377210941908469e299,4.419299508657588e299,4.461388075406708e299,4.503476642155828e299,4.545565208904948e299,4.587653775654068e299,4.629742342403188e299,4.671830909152308e299,4.713919475901428e299,4.756008042650548e299,4.798096609399667e299,4.8401851761487876e299,4.8822737428979075e299,4.9243623096470275e299,4.966450876396147e299,5.0085394431452666e299,5.0506280098943865e299,5.092716576643507e299,5.134805143392626e299,5.176893710141746e299,5.218982276890866e299,5.261070843639986e299,5.303159410389107e299,5.345247977138226e299,5.387336543887346e299,5.429425110636466e299,5.471513677385586e299,5.513602244134706e299,5.5556908108838256e299,5.5977793776329455e299,5.6398679443820654e299,5.6819565111311846e299,5.724045077880305e299,5.766133644629425e299,5.808222211378545e299,5.850310778127665e299,5.892399344876784e299,5.934487911625904e299,5.976576478375025e299,6.018665045124145e299,6.060753611873264e299,6.102842178622384e299,6.144930745371504e299,6.1870193121206245e299,6.229107878869744e299,6.2711964456188636e299,6.3132850123679835e299,6.3553735791171034e299,6.3974621458662226e299,6.439550712615343e299,6.481639279364463e299,6.523727846113583e299,6.565816412862703e299,6.607904979611822e299,6.649993546360943e299,6.692082113110063e299,6.734170679859182e299,6.776259246608303e299,6.818347813357422e299,6.860436380106541e299,6.902524946855662e299,6.944613513604781e299,6.986702080353903e299,7.028790647103022e299,7.070879213852141e299,7.112967780601262e299,7.155056347350381e299,7.197144914099502e299,7.239233480848621e299,7.28132204759774e299,7.323410614346861e299,7.36549918109598e299,7.4075877478451e299,7.449676314594221e299,7.49176488134334e299,7.533853448092461e299,7.57594201484158e299,7.6180305815907e299,7.66011914833982e299,7.70220771508894e299,7.744296281838059e299,7.78638484858718e299,7.828473415336299e299,7.87056198208542e299,7.91265054883454e299,7.954739115583659e299,7.99682768233278e299,8.038916249081899e299,8.08100481583102e299,8.123093382580139e299,8.165181949329258e299,8.207270516078379e299,8.249359082827498e299,8.291447649576617e299,8.333536216325739e299,8.375624783074858e299,8.417713349823979e299,8.459801916573098e299,8.501890483322217e299,8.543979050071338e299,8.586067616820457e299,8.628156183569578e299,8.670244750318697e299,8.712333317067816e299,8.754421883816938e299,8.796510450566058e299,8.838599017315177e299,8.880687584064297e299,8.922776150813417e299,8.964864717562537e299,9.006953284311656e299,9.049041851060776e299,9.091130417809896e299,9.133218984559015e299,9.175307551308136e299,9.217396118057257e299,9.259484684806376e299,9.301573251555497e299,9.343661818304616e299,9.385750385053735e299,9.427838951802856e299,9.469927518551975e299,9.512016085301096e299,9.554104652050215e299,9.596193218799334e299,9.638281785548455e299,9.680370352297575e299,9.722458919046696e299,9.764547485795815e299,9.806636052544934e299,9.848724619294055e299,9.890813186043174e299,9.932901752792293e299,9.974990319541414e299,1.0017078886290533e300,1.0059167453039654e300,1.0101256019788773e300,1.0143344586537894e300,1.0185433153287014e300,1.0227521720036133e300,1.0269610286785253e300,1.0311698853534373e300,1.0353787420283493e300,1.0395875987032613e300,1.0437964553781732e300,1.0480053120530852e300,1.0522141687279972e300,1.0564230254029093e300,1.0606318820778214e300,1.0648407387527333e300,1.0690495954276452e300,1.0732584521025573e300,1.0774673087774692e300,1.0816761654523811e300,1.0858850221272932e300,1.0900938788022051e300,1.0943027354771171e300,1.098511592152029e300,1.1027204488269411e300,1.1069293055018532e300,1.1111381621767651e300,1.1153470188516772e300,1.1195558755265891e300,1.123764732201501e300,1.1279735888764131e300,1.132182445551325e300,1.1363913022262369e300,1.140600158901149e300,1.144809015576061e300,1.1490178722509731e300,1.153226728925885e300,1.157435585600797e300,1.161644442275709e300,1.165853298950621e300,1.170062155625533e300,1.174271012300445e300,1.1784798689753568e300,1.1826887256502689e300,1.1868975823251808e300,1.1911064390000929e300,1.195315295675005e300,1.1995241523499169e300,1.203733009024829e300,1.2079418656997409e300,1.2121507223746528e300,1.2163595790495649e300,1.2205684357244768e300,1.2247772923993887e300,1.2289861490743008e300,1.2331950057492127e300,1.2374038624241249e300,1.2416127190990368e300,1.2458215757739487e300,1.2500304324488608e300,1.2542392891237727e300,1.2584481457986848e300,1.2626570024735967e300,1.2668658591485086e300,1.2710747158234207e300,1.2752835724983326e300,1.2794924291732445e300,1.2837012858481567e300,1.2879101425230687e300,1.2921189991979807e300,1.2963278558728926e300,1.3005367125478046e300,1.3047455692227166e300,1.3089544258976285e300,1.3131632825725406e300,1.3173721392474525e300,1.3215809959223644e300,1.3257898525972767e300,1.3299987092721886e300,1.3342075659471005e300,1.3384164226220126e300,1.3426252792969246e300,1.3468341359718364e300,1.3510429926467485e300,1.3552518493216605e300,1.3594607059965723e300,1.3636695626714844e300,1.3678784193463964e300,1.3720872760213082e300,1.3762961326962206e300,1.3805049893711323e300,1.3847138460460444e300,1.3889227027209562e300,1.3931315593958682e300,1.3973404160707806e300,1.4015492727456924e300,1.4057581294206044e300,1.4099669860955162e300,1.4141758427704283e300,1.4183846994453403e300,1.4225935561202524e300,1.4268024127951642e300,1.4310112694700762e300,1.435220126144988e300,1.4394289828199004e300,1.4436378394948124e300,1.4478466961697242e300,1.4520555528446363e300,1.456264409519548e300,1.46047326619446e300,1.4646821228693722e300,1.4688909795442843e300,1.473099836219196e300,1.477308692894108e300,1.48151754956902e300,1.4857264062439322e300,1.4899352629188443e300,1.494144119593756e300,1.498352976268668e300,1.50256183294358e300,1.5067706896184923e300,1.510979546293404e300,1.515188402968316e300,1.519397259643228e300,1.52360611631814e300,1.5278149729930523e300,1.532023829667964e300,1.536232686342876e300,1.540441543017788e300,1.5446503996927e300,1.5488592563676117e300,1.553068113042524e300,1.557276969717436e300,1.561485826392348e300,1.5656946830672597e300,1.5699035397421718e300,1.574112396417084e300,1.578321253091996e300,1.582530109766908e300,1.5867389664418197e300,1.5909478231167318e300,1.595156679791644e300,1.599365536466556e300,1.6035743931414677e300,1.6077832498163798e300,1.6119921064912916e300,1.616200963166204e300,1.620409819841116e300,1.6246186765160278e300,1.6288275331909398e300,1.6330363898658516e300,1.637245246540764e300,1.6414541032156757e300,1.6456629598905878e300,1.6498718165654996e300,1.6540806732404116e300,1.6582895299153234e300,1.6624983865902358e300,1.6667072432651478e300,1.6709160999400596e300,1.6751249566149717e300,1.6793338132898834e300,1.6835426699647958e300,1.6877515266397076e300,1.6919603833146196e300,1.6961692399895314e300,1.7003780966644435e300,1.7045869533393555e300,1.7087958100142676e300,1.7130046666891797e300,1.7172135233640914e300,1.7214223800390035e300,1.7256312367139156e300,1.7298400933888276e300,1.7340489500637394e300,1.7382578067386515e300,1.7424666634135632e300,1.7466755200884753e300,1.7508843767633877e300,1.7550932334382994e300,1.7593020901132115e300,1.7635109467881233e300,1.7677198034630353e300,1.7719286601379474e300,1.7761375168128595e300,1.7803463734877712e300,1.7845552301626833e300,1.788764086837595e300,1.7929729435125074e300,1.7971818001874195e300,1.8013906568623313e300,1.8055995135372434e300,1.809808370212155e300,1.8140172268870675e300,1.8182260835619793e300,1.8224349402368913e300,1.826643796911803e300,1.8308526535867152e300,1.8350615102616272e300,1.8392703669365393e300,1.8434792236114514e300,1.847688080286363e300,1.8518969369612752e300,1.856105793636187e300,1.8603146503110993e300,1.864523506986011e300,1.8687323636609232e300,1.872941220335835e300,1.877150077010747e300,1.881358933685659e300,1.885567790360571e300,1.8897766470354832e300,1.893985503710395e300,1.898194360385307e300,1.902403217060219e300,1.9066120737351312e300,1.910820930410043e300,1.915029787084955e300,1.9192386437598668e300,1.923447500434779e300,1.927656357109691e300,1.931865213784603e300,1.936074070459515e300,1.9402829271344268e300,1.9444917838093392e300,1.948700640484251e300,1.952909497159163e300,1.9571183538340748e300,1.9613272105089869e300,1.9655360671838986e300,1.969744923858811e300,1.9739537805337228e300,1.9781626372086348e300,1.982371493883547e300,1.9865803505584587e300,1.990789207233371e300,1.9949980639082828e300,1.999206920583195e300,2.0034157772581066e300,2.0076246339330187e300,2.0118334906079308e300,2.0160423472828428e300,2.0202512039577546e300,2.0244600606326667e300,2.0286689173075787e300,2.0328777739824908e300,2.037086630657403e300,2.0412954873323146e300,2.0455043440072267e300,2.0497132006821385e300,2.0539220573570505e300,2.0581309140319626e300,2.0623397707068747e300,2.0665486273817867e300,2.0707574840566985e300,2.0749663407316106e300,2.0791751974065226e300,2.0833840540814347e300,2.0875929107563465e300,2.0918017674312585e300,2.0960106241061703e300,2.1002194807810827e300,2.1044283374559944e300,2.1086371941309065e300,2.1128460508058186e300,2.1170549074807303e300,2.1212637641556427e300,2.1254726208305545e300,2.1296814775054665e300,2.1338903341803783e300,2.1380991908552904e300,2.1423080475302022e300,2.1465169042051145e300,2.1507257608800263e300,2.1549346175549384e300,2.1591434742298504e300,2.1633523309047622e300,2.1675611875796746e300,2.1717700442545863e300,2.1759789009294984e300,2.1801877576044102e300,2.1843966142793222e300,2.1886054709542343e300,2.1928143276291464e300,2.197023184304058e300,2.2012320409789702e300,2.2054408976538823e300,2.2096497543287943e300,2.2138586110037064e300,2.2180674676786182e300,2.2222763243535302e300,2.226485181028442e300,2.2306940377033544e300,2.234902894378266e300,2.2391117510531782e300,2.24332060772809e300,2.247529464403002e300,2.251738321077914e300,2.2559471777528262e300,2.2601560344277382e300,2.26436489110265e300,2.268573747777562e300,2.2727826044524738e300,2.2769914611273862e300,2.281200317802298e300,2.28540917447721e300,2.289618031152122e300,2.293826887827034e300,2.2980357445019462e300,2.302244601176858e300,2.30645345785177e300,2.310662314526682e300,2.314871171201594e300,2.319080027876506e300,2.323288884551418e300,2.3274977412263298e300,2.331706597901242e300,2.335915454576154e300,2.340124311251066e300,2.344333167925978e300,2.34854202460089e300,2.352750881275802e300,2.3569597379507137e300,2.3611685946256258e300,2.3653774513005378e300,2.36958630797545e300,2.3737951646503617e300,2.3780040213252737e300,2.3822128780001858e300,2.386421734675098e300,2.39063059135001e300,2.3948394480249217e300,2.3990483046998338e300,2.4032571613747455e300,2.407466018049658e300,2.4116748747245697e300,2.4158837313994817e300,2.4200925880743935e300,2.4243014447493056e300,2.428510301424218e300,2.4327191580991297e300,2.4369280147740418e300,2.4411368714489535e300,2.4453457281238656e300,2.4495545847987774e300,2.4537634414736897e300,2.4579722981486015e300,2.4621811548235136e300,2.4663900114984254e300,2.4705988681733374e300,2.4748077248482498e300,2.4790165815231616e300,2.4832254381980736e300,2.4874342948729854e300,2.4916431515478975e300,2.4958520082228095e300,2.5000608648977216e300,2.5042697215726334e300,2.5084785782475454e300,2.5126874349224572e300,2.5168962915973696e300,2.5211051482722816e300,2.5253140049471934e300,2.5295228616221055e300,2.5337317182970172e300,2.5379405749719296e300,2.5421494316468414e300,2.5463582883217534e300,2.5505671449966652e300,2.5547760016715773e300,2.558984858346489e300,2.5631937150214014e300,2.5674025716963135e300,2.5716114283712252e300,2.5758202850461373e300,2.580029141721049e300,2.5842379983959614e300,2.5884468550708732e300,2.5926557117457853e300,2.596864568420697e300,2.601073425095609e300,2.6052822817705215e300,2.6094911384454332e300,2.6136999951203453e300,2.617908851795257e300,2.622117708470169e300,2.6263265651450812e300,2.6305354218199933e300,2.634744278494905e300,2.638953135169817e300,2.643161991844729e300,2.647370848519641e300,2.6515797051945533e300,2.655788561869465e300,2.6599974185443772e300,2.664206275219289e300,2.668415131894201e300,2.672623988569113e300,2.676832845244025e300,2.681041701918937e300,2.685250558593849e300,2.689459415268761e300,2.693668271943673e300,2.697877128618585e300,2.702085985293497e300,2.706294841968409e300,2.710503698643321e300,2.714712555318233e300,2.7189214119931446e300,2.7231302686680567e300,2.727339125342969e300,2.731547982017881e300,2.735756838692793e300,2.739965695367705e300,2.7441745520426164e300,2.748383408717529e300,2.752592265392441e300,2.7568011220673526e300,2.7610099787422647e300,2.765218835417177e300,2.769427692092089e300,2.773636548767001e300,2.7778454054419123e300,2.782054262116825e300,2.7862631187917365e300,2.7904719754666485e300,2.794680832141561e300,2.7988896888164727e300,2.803098545491385e300,2.807307402166296e300,2.811516258841209e300,2.815725115516121e300,2.8199339721910324e300,2.8241428288659445e300,2.8283516855408566e300,2.8325605422157686e300,2.8367693988906807e300,2.840978255565593e300,2.845187112240505e300,2.849395968915416e300,2.8536048255903284e300,2.857813682265241e300,2.8620225389401525e300,2.8662313956150646e300,2.870440252289976e300,2.8746491089648887e300,2.878857965639801e300,2.883066822314712e300,2.887275678989625e300,2.8914845356645364e300,2.8956933923394484e300,2.89990224901436e300,2.9041111056892726e300,2.9083199623641846e300,2.912528819039096e300,2.916737675714008e300,2.92094653238892e300,2.9251553890638323e300,2.9293642457387444e300,2.9335731024136564e300,2.9377819590885685e300,2.94199081576348e300,2.946199672438392e300,2.950408529113305e300,2.954617385788216e300,2.958826242463128e300,2.96303509913804e300,2.9672439558129524e300,2.9714528124878644e300,2.975661669162776e300,2.9798705258376886e300,2.9840793825126e300,2.988288239187512e300,2.992497095862424e300,2.996705952537336e300,3.0009148092122483e300,3.00512366588716e300,3.0093325225620725e300,3.0135413792369845e300,3.017750235911896e300,3.021959092586808e300,3.02616794926172e300,3.030376805936632e300,3.034585662611544e300,3.038794519286456e300,3.0430033759613684e300,3.04721223263628e300,3.051421089311192e300,3.0556299459861046e300,3.059838802661016e300,3.064047659335928e300,3.0682565160108396e300,3.072465372685752e300,3.0766742293606643e300,3.080883086035576e300,3.085091942710488e300,3.0893007993854e300,3.093509656060312e300,3.0977185127352235e300,3.101927369410136e300,3.106136226085048e300,3.1103450827599597e300,3.114553939434872e300,3.118762796109784e300,3.122971652784696e300,3.127180509459608e300,3.1313893661345194e300,3.135598222809432e300,3.1398070794843435e300,3.1440159361592556e300,3.148224792834168e300,3.15243364950908e300,3.156642506183992e300,3.160851362858903e300,3.165060219533816e300,3.169269076208728e300,3.1734779328836395e300,3.1776867895585516e300,3.1818956462334636e300,3.1861045029083757e300,3.190313359583288e300,3.1945222162582e300,3.198731072933112e300,3.2029399296080234e300,3.2071487862829354e300,3.211357642957848e300,3.2155664996327596e300,3.2197753563076716e300,3.223984212982583e300,3.228193069657496e300,3.232401926332408e300,3.2366107830073193e300,3.240819639682232e300,3.2450284963571434e300,3.2492373530320555e300,3.2534462097069676e300,3.2576550663818796e300,3.261863923056792e300,3.266072779731703e300,3.270281636406615e300,3.274490493081528e300,3.2786993497564394e300,3.2829082064313514e300,3.2871170631062635e300,3.2913259197811756e300,3.295534776456087e300,3.299743633130999e300,3.303952489805912e300,3.308161346480823e300,3.3123702031557353e300,3.316579059830647e300,3.3207879165055594e300,3.3249967731804715e300,3.329205629855383e300,3.3334144865302956e300,3.337623343205207e300,3.341832199880119e300,3.346041056555031e300,3.3502499132299433e300,3.3544587699048554e300,3.358667626579767e300,3.362876483254679e300,3.3670853399295916e300,3.371294196604503e300,3.375503053279415e300,3.379711909954327e300,3.383920766629239e300,3.3881296233041513e300,3.392338479979063e300,3.3965473366539755e300,3.400756193328887e300,3.404965050003799e300,3.409173906678711e300,3.413382763353623e300,3.417591620028535e300,3.4218004767034467e300,3.4260093333783593e300,3.4302181900532714e300,3.434427046728183e300,3.438635903403095e300,3.442844760078007e300,3.447053616752919e300,3.451262473427831e300,3.4554713301027426e300,3.459680186777655e300,3.463889043452567e300,3.468097900127479e300,3.4723067568023915e300,3.476515613477303e300,3.480724470152215e300,3.4849333268271265e300,3.489142183502039e300,3.4933510401769506e300,3.4975598968518627e300,3.5017687535267753e300,3.505977610201687e300,3.510186466876599e300,3.5143953235515104e300,3.518604180226423e300,3.522813036901335e300,3.5270218935762466e300,3.5312307502511586e300,3.5354396069260707e300,3.539648463600983e300,3.543857320275895e300,3.548066176950807e300,3.552275033625719e300,3.5564838903006304e300,3.5606927469755425e300,3.564901603650455e300,3.5691104603253666e300,3.5733193170002787e300,3.57752817367519e300,3.581737030350103e300,3.585945887025015e300,3.5901547436999264e300,3.594363600374839e300,3.5985724570497505e300,3.6027813137246626e300,3.6069901703995746e300,3.611199027074487e300,3.615407883749399e300,3.61961674042431e300,3.6238255970992223e300,3.628034453774135e300,3.6322433104490464e300,3.6364521671239585e300,3.6406610237988706e300,3.6448698804737826e300,3.649078737148695e300,3.653287593823606e300,3.657496450498519e300,3.6617053071734303e300,3.6659141638483424e300,3.6701230205232545e300,3.6743318771981665e300,3.6785407338730786e300,3.68274959054799e300,3.686958447222903e300,3.691167303897815e300,3.695376160572726e300,3.6995850172476383e300,3.7037938739225504e300,3.7080027305974625e300,3.712211587272374e300,3.716420443947286e300,3.7206293006221987e300,3.72483815729711e300,3.729047013972022e300,3.733255870646934e300,3.7374647273218463e300,3.7416735839967584e300,3.74588244067167e300,3.7500912973465825e300,3.754300154021494e300,3.758509010696406e300,3.762717867371318e300,3.76692672404623e300,3.771135580721142e300,3.775344437396054e300,3.7795532940709664e300,3.7837621507458785e300,3.78797100742079e300,3.792179864095702e300,3.796388720770614e300,3.800597577445526e300,3.804806434120438e300,3.8090152907953497e300,3.8132241474702623e300,3.817433004145174e300,3.821641860820086e300,3.8258507174949985e300,3.83005957416991e300,3.834268430844822e300,3.8384772875197336e300,3.842686144194646e300,3.846895000869558e300,3.85110385754447e300,3.855312714219382e300,3.859521570894294e300,3.863730427569206e300,3.867939284244118e300,3.87214814091903e300,3.876356997593942e300,3.8805658542688536e300,3.8847747109437657e300,3.8889835676186784e300,3.89319242429359e300,3.897401280968502e300,3.9016101376434134e300,3.905818994318326e300,3.9100278509932375e300,3.9142367076681496e300,3.918445564343062e300,3.9226544210179737e300,3.926863277692886e300,3.931072134367797e300,3.93528099104271e300,3.939489847717622e300,3.9436987043925334e300,3.9479075610674455e300,3.9521164177423576e300,3.9563252744172696e300,3.960534131092182e300,3.964742987767094e300,3.968951844442006e300,3.9731607011169173e300,3.9773695577918294e300,3.981578414466742e300,3.9857872711416535e300,3.9899961278165656e300,3.994204984491477e300,3.99841384116639e300,4.002622697841302e300,4.006831554516213e300,4.011040411191126e300,4.0152492678660374e300,4.0194581245409495e300,4.0236669812158615e300,4.0278758378907736e300,4.0320846945656857e300,4.036293551240597e300,4.040502407915509e300,4.044711264590422e300,4.0489201212653333e300,4.0531289779402454e300,4.0573378346151575e300,4.0615466912900695e300,4.0657555479649816e300,4.069964404639893e300,4.074173261314806e300,4.078382117989717e300,4.082590974664629e300,4.086799831339542e300,4.0910086880144534e300,4.0952175446893655e300,4.099426401364277e300,4.1036352580391896e300,4.107844114714101e300,4.112052971389013e300,4.116261828063925e300,4.120470684738837e300,4.1246795414137493e300,4.128888398088661e300,4.1330972547635735e300,4.1373061114384855e300,4.141514968113397e300,4.145723824788309e300,4.149932681463221e300,4.154141538138133e300,4.158350394813045e300,4.162559251487957e300,4.1667681081628694e300,4.170976964837781e300,4.175185821512693e300,4.1793946781876056e300,4.183603534862517e300,4.187812391537429e300,4.1920212482123406e300,4.196230104887253e300,4.2004389615621654e300,4.204647818237077e300,4.208856674911989e300,4.213065531586901e300,4.217274388261813e300,4.221483244936725e300,4.225692101611637e300,4.229900958286549e300,4.2341098149614607e300,4.238318671636373e300,4.2425275283112854e300,4.246736384986197e300,4.250945241661109e300,4.2551540983360204e300,4.259362955010933e300,4.263571811685845e300,4.2677806683607566e300,4.2719895250356693e300,4.276198381710581e300,4.280407238385493e300,4.2846160950604043e300,4.288824951735317e300,4.293033808410229e300,4.2972426650851405e300,4.3014515217600526e300,4.3056603784349646e300,4.309869235109877e300,4.314078091784789e300,4.318286948459701e300,4.322495805134613e300,4.3267046618095244e300,4.3309135184844364e300,4.335122375159349e300,4.3393312318342606e300,4.3435400885091726e300,4.347748945184084e300,4.351957801858997e300,4.356166658533909e300,4.3603755152088203e300,4.364584371883733e300,4.3687932285586445e300,4.3730020852335565e300,4.3772109419084686e300,4.3814197985833807e300,4.385628655258293e300,4.389837511933204e300,4.394046368608116e300,4.398255225283029e300,4.4024640819579404e300,4.4066729386328525e300,4.4108817953077645e300,4.4150906519826766e300,4.4192995086575887e300,4.4235083653325e300,4.427717222007413e300,4.431926078682324e300,4.4361349353572363e300,4.4403437920321484e300,4.4445526487070605e300,4.4487615053819725e300,4.452970362056884e300,4.4571792187317967e300,4.461388075406709e300,4.46559693208162e300,4.469805788756532e300,4.4740146454314443e300,4.4782235021063564e300,4.4824323587812685e300,4.48664121545618e300,4.4908500721310926e300,4.495058928806004e300,4.499267785480916e300,4.503476642155828e300,4.50768549883074e300,4.5118943555056523e300,4.516103212180564e300,4.5203120688554765e300,4.524520925530388e300,4.5287297822053e300,4.532938638880212e300,4.537147495555124e300,4.541356352230036e300,4.5455652089049477e300,4.5497740655798604e300,4.5539829222547724e300,4.558191778929684e300,4.562400635604596e300,4.566609492279508e300,4.57081834895442e300,4.575027205629332e300,4.579236062304244e300,4.583444918979156e300,4.587653775654068e300,4.59186263232898e300,4.5960714890038925e300,4.600280345678804e300,4.604489202353716e300,4.6086980590286275e300,4.61290691570354e300,4.617115772378452e300,4.621324629053364e300,4.6255334857282764e300,4.629742342403188e300,4.6339511990781e300,4.638160055753012e300,4.642368912427924e300,4.646577769102836e300,4.6507866257777476e300,4.6549954824526596e300,4.6592043391275723e300,4.663413195802484e300,4.667622052477396e300,4.671830909152308e300,4.67603976582722e300,4.680248622502132e300,4.6844574791770435e300,4.688666335851956e300,4.6928751925268677e300,4.69708404920178e300,4.701292905876691e300,4.705501762551604e300,4.709710619226516e300,4.7139194759014274e300,4.71812833257634e300,4.7223371892512515e300,4.7265460459261636e300,4.7307549026010757e300,4.734963759275988e300,4.7391726159509e300,4.743381472625811e300,4.7475903293007233e300,4.751799185975636e300,4.7560080426505475e300,4.7602168993254595e300,4.7644257560003716e300,4.7686346126752837e300,4.772843469350196e300,4.777052326025107e300,4.78126118270002e300,4.7854700393749313e300,4.7896788960498434e300,4.7938877527247555e300,4.7980966093996675e300,4.8023054660745796e300,4.806514322749491e300,4.810723179424404e300,4.814932036099316e300,4.819140892774227e300,4.8233497494491393e300,4.8275586061240514e300,4.8317674627989635e300,4.8359763194738755e300,4.840185176148787e300,4.8443940328236997e300,4.848602889498611e300,4.852811746173523e300,4.857020602848436e300,4.8612294595233474e300,4.8654383161982594e300,4.869647172873171e300,4.8738560295480836e300,4.8780648862229956e300,4.882273742897907e300,4.886482599572819e300,4.890691456247731e300,4.894900312922643e300,4.899109169597555e300,4.9033180262724674e300,4.9075268829473795e300,4.911735739622291e300,4.915944596297203e300,4.920153452972115e300,4.924362309647027e300,4.928571166321939e300,4.9327800229968507e300,4.9369888796717634e300,4.941197736346675e300,4.945406593021587e300,4.9496154496964996e300,4.953824306371411e300,4.958033163046323e300,4.9622420197212346e300,4.966450876396147e300,4.9706597330710593e300,4.974868589745971e300,4.979077446420883e300,4.983286303095795e300,4.987495159770707e300,4.991704016445619e300,4.995912873120531e300,5.000121729795443e300,5.0043305864703546e300,5.008539443145267e300,5.0127482998201794e300,5.016957156495091e300,5.021166013170003e300,5.0253748698449144e300,5.029583726519827e300,5.033792583194739e300,5.0380014398696506e300,5.042210296544563e300,5.046419153219475e300,5.050628009894387e300,5.054836866569299e300,5.059045723244211e300,5.063254579919123e300,5.0674634365940345e300,5.0716722932689465e300,5.075881149943859e300,5.0800900066187707e300,5.084298863293683e300,5.088507719968595e300,5.092716576643507e300,5.0969254333184183e300,5.1011342899933304e300,5.105343146668243e300,5.1095520033431545e300,5.1137608600180666e300,5.117969716692978e300,5.122178573367891e300,5.126387430042803e300,5.130596286717714e300,5.134805143392627e300,5.1390140000675384e300,5.1432228567424505e300,5.1474317134173625e300,5.1516405700922746e300,5.1558494267671867e300,5.160058283442098e300,5.164267140117011e300,5.168475996791923e300,5.1726848534668343e300,5.1768937101417464e300,5.1811025668166585e300,5.1853114234915705e300,5.1895202801664826e300,5.193729136841394e300,5.197937993516307e300,5.202146850191218e300,5.20635570686613e300,5.210564563541043e300,5.2147734202159544e300,5.2189822768908665e300,5.223191133565778e300,5.2273999902406906e300,5.2316088469156027e300,5.235817703590514e300,5.240026560265426e300,5.244235416940338e300,5.2484442736152504e300,5.2526531302901624e300,5.2568619869650745e300,5.2610708436399866e300,5.265279700314898e300,5.26948855698981e300,5.273697413664723e300,5.277906270339634e300,5.2821151270145463e300,5.286323983689458e300,5.2905328403643704e300,5.294741697039282e300,5.298950553714194e300,5.3031594103891066e300,5.307368267064018e300,5.31157712373893e300,5.3157859804138416e300,5.3199948370887543e300,5.3242036937636664e300,5.328412550438578e300,5.33262140711349e300,5.336830263788402e300,5.341039120463314e300,5.345247977138226e300,5.349456833813138e300,5.35366569048805e300,5.357874547162962e300,5.362083403837874e300,5.366292260512786e300,5.370501117187699e300,5.37470997386261e300,5.378918830537521e300,5.383127687212434e300,5.387336543887346e300,5.391545400562258e300,5.39575425723717e300,5.399963113912082e300,5.404171970586994e300,5.408380827261905e300,5.412589683936818e300,5.41679854061173e300,5.421007397286642e300,5.425216253961554e300,5.429425110636466e300,5.433633967311378e300,5.437842823986289e300,5.442051680661202e300,5.446260537336113e300,5.450469394011026e300,5.454678250685937e300,5.45888710736085e300,5.463095964035762e300,5.467304820710673e300,5.471513677385586e300,5.475722534060498e300,5.47993139073541e300,5.484140247410321e300,5.488349104085233e300,5.492557960760145e300,5.496766817435058e300,5.50097567410997e300,5.505184530784882e300,5.509393387459793e300,5.513602244134705e300,5.517811100809618e300,5.522019957484529e300,5.526228814159442e300,5.530437670834353e300,5.534646527509265e300,5.538855384184178e300,5.54306424085909e300,5.547273097534002e300,5.551481954208913e300,5.555690810883825e300,5.559899667558737e300,5.56410852423365e300,5.568317380908561e300,5.572526237583473e300,5.576735094258386e300,5.580943950933297e300,5.58515280760821e300,5.589361664283122e300,5.593570520958033e300,5.597779377632945e300,5.601988234307857e300,5.60619709098277e300,5.610405947657682e300,5.614614804332592e300,5.618823661007505e300,5.623032517682418e300,5.627241374357329e300,5.631450231032242e300,5.635659087707153e300,5.639867944382065e300,5.644076801056978e300,5.648285657731889e300,5.652494514406802e300,5.656703371081713e300,5.660912227756625e300,5.665121084431537e300,5.66932994110645e300,5.673538797781361e300,5.677747654456273e300,5.681956511131186e300,5.686165367806097e300,5.69037422448101e300,5.694583081155921e300,5.698791937830833e300,5.703000794505745e300,5.707209651180657e300,5.711418507855569e300,5.715627364530482e300,5.719836221205392e300,5.724045077880305e300,5.728253934555218e300,5.732462791230129e300,5.736671647905042e300,5.740880504579952e300,5.745089361254865e300,5.749298217929777e300,5.753507074604689e300,5.757715931279602e300,5.761924787954513e300,5.766133644629424e300,5.770342501304337e300,5.77455135797925e300,5.77876021465416e300,5.782969071329073e300,5.787177928003984e300,5.791386784678897e300,5.79559564135381e300,5.79980449802872e300,5.804013354703632e300,5.808222211378545e300,5.812431068053457e300,5.816639924728369e300,5.820848781403281e300,5.825057638078192e300,5.829266494753105e300,5.833475351428016e300,5.837684208102929e300,5.84189306477784e300,5.846101921452752e300,5.850310778127665e300,5.854519634802577e300,5.858728491477489e300,5.8629373481524e300,5.867146204827313e300,5.871355061502224e300,5.875563918177137e300,5.879772774852048e300,5.88398163152696e300,5.888190488201873e300,5.892399344876784e300,5.896608201551697e300,5.90081705822661e300,5.90502591490152e300,5.909234771576432e300,5.913443628251345e300,5.917652484926256e300,5.921861341601169e300,5.92607019827608e300,5.930279054950992e300,5.934487911625905e300,5.938696768300816e300,5.942905624975729e300,5.94711448165064e300,5.951323338325552e300,5.955532195000464e300,5.959741051675377e300,5.963949908350289e300,5.9681587650252e300,5.972367621700113e300,5.976576478375024e300,5.980785335049937e300,5.984994191724848e300,5.98920304839976e300,5.993411905074673e300,5.997620761749584e300,6.001829618424497e300,6.006038475099409e300,6.01024733177432e300,6.014456188449232e300,6.018665045124145e300,6.022873901799056e300,6.027082758473969e300,6.031291615148879e300,6.035500471823792e300,6.039709328498705e300,6.043918185173616e300,6.048127041848529e300,6.05233589852344e300,6.056544755198352e300,6.060753611873264e300,6.064962468548177e300,6.069171325223089e300,6.073380181898e300,6.077589038572911e300,6.081797895247824e300,6.086006751922737e300,6.090215608597648e300,6.09442446527256e300,6.098633321947472e300,6.102842178622384e300,6.107051035297297e300,6.111259891972209e300,6.11546874864712e300,6.119677605322032e300,6.123886461996944e300,6.128095318671856e300,6.132304175346769e300,6.136513032021679e300,6.140721888696592e300,6.144930745371505e300,6.149139602046416e300,6.153348458721329e300,6.15755731539624e300,6.161766172071152e300,6.165975028746064e300,6.170183885420976e300,6.174392742095888e300,6.1786015987708e300,6.182810455445711e300,6.187019312120624e300,6.191228168795537e300,6.195437025470447e300,6.19964588214536e300,6.203854738820272e300,6.208063595495184e300,6.212272452170096e300,6.216481308845007e300,6.220690165519919e300,6.224899022194832e300,6.229107878869743e300,6.233316735544656e300,6.237525592219568e300,6.241734448894479e300,6.245943305569392e300,6.250152162244304e300,6.254361018919216e300,6.258569875594127e300,6.262778732269039e300,6.266987588943951e300,6.271196445618864e300,6.275405302293776e300,6.279614158968687e300,6.2838230156436e300,6.288031872318511e300,6.292240728993424e300,6.296449585668337e300,6.300658442343247e300,6.30486729901816e300,6.309076155693071e300,6.313285012367984e300,6.317493869042896e300,6.321702725717807e300,6.325911582392719e300,6.330120439067632e300,6.334329295742543e300,6.338538152417456e300,6.342747009092368e300,6.346955865767279e300,6.351164722442192e300,6.355373579117103e300,6.359582435792016e300,6.363791292466927e300,6.368000149141839e300,6.372209005816751e300,6.376417862491664e300,6.380626719166576e300,6.384835575841487e300,6.3890444325164e300,6.393253289191311e300,6.397462145866224e300,6.401671002541135e300,6.405879859216047e300,6.410088715890959e300,6.414297572565871e300,6.418506429240784e300,6.422715285915696e300,6.426924142590606e300,6.431132999265519e300,6.435341855940432e300,6.439550712615343e300,6.443759569290256e300,6.447968425965166e300,6.452177282640079e300,6.456386139314992e300,6.460594995989903e300,6.464803852664816e300,6.469012709339727e300,6.473221566014639e300,6.477430422689551e300,6.481639279364464e300,6.485848136039375e300,6.490056992714287e300,6.494265849389198e300,6.498474706064111e300,6.502683562739024e300,6.506892419413935e300,6.511101276088847e300,6.515310132763759e300,6.519518989438671e300,6.523727846113583e300,6.527936702788496e300,6.532145559463406e300,6.536354416138319e300,6.54056327281323e300,6.544772129488143e300,6.548980986163056e300,6.553189842837966e300,6.557398699512879e300,6.561607556187791e300,6.565816412862703e300,6.570025269537616e300,6.574234126212527e300,6.578442982887438e300,6.582651839562351e300,6.586860696237263e300,6.591069552912174e300,6.595278409587087e300,6.599487266261998e300,6.603696122936911e300,6.607904979611824e300,6.612113836286734e300,6.616322692961646e300,6.620531549636559e300,6.624740406311471e300,6.628949262986383e300,6.633158119661294e300,6.637366976336206e300,6.641575833011119e300,6.64578468968603e300,6.649993546360943e300,6.654202403035855e300,6.658411259710766e300,6.662620116385679e300,6.666828973060591e300,6.671037829735503e300,6.675246686410414e300,6.679455543085326e300,6.683664399760238e300,6.687873256435151e300,6.692082113110063e300,6.696290969784974e300,6.700499826459887e300,6.704708683134798e300,6.708917539809711e300,6.713126396484623e300,6.717335253159534e300,6.721544109834446e300,6.725752966509358e300,6.72996182318427e300,6.734170679859183e300,6.738379536534093e300,6.742588393209006e300,6.746797249883919e300,6.75100610655883e300,6.755214963233743e300,6.759423819908654e300,6.763632676583566e300,6.767841533258479e300,6.77205038993339e300,6.776259246608303e300,6.780468103283214e300,6.784676959958126e300,6.788885816633038e300,6.793094673307951e300,6.797303529982862e300,6.801512386657774e300,6.805721243332687e300,6.809930100007598e300,6.814138956682511e300,6.818347813357422e300,6.822556670032334e300,6.826765526707246e300,6.830974383382158e300,6.83518324005707e300,6.839392096731983e300,6.843600953406893e300,6.847809810081806e300,6.852018666756719e300,6.85622752343163e300,6.860436380106543e300,6.864645236781453e300,6.868854093456366e300,6.873062950131278e300,6.87727180680619e300,6.881480663481103e300,6.885689520156014e300,6.889898376830925e300,6.894107233505838e300,6.898316090180751e300,6.902524946855662e300,6.906733803530574e300,6.910942660205485e300,6.915151516880398e300,6.91936037355531e300,6.923569230230222e300,6.927778086905133e300,6.931986943580046e300,6.936195800254958e300,6.94040465692987e300,6.944613513604783e300,6.948822370279693e300,6.953031226954606e300,6.957240083629517e300,6.96144894030443e300,6.965657796979343e300,6.969866653654253e300,6.974075510329166e300,6.978284367004078e300,6.98249322367899e300,6.986702080353901e300,6.990910937028814e300,6.995119793703725e300,6.999328650378638e300,7.003537507053551e300,7.007746363728461e300,7.011955220403374e300,7.016164077078285e300,7.020372933753198e300,7.02458179042811e300,7.028790647103021e300,7.032999503777933e300,7.037208360452846e300,7.041417217127758e300,7.04562607380267e300,7.049834930477582e300,7.054043787152493e300,7.058252643827406e300,7.062461500502317e300,7.06667035717723e300,7.070879213852141e300,7.075088070527053e300,7.079296927201966e300,7.083505783876878e300,7.08771464055179e300,7.091923497226701e300,7.096132353901614e300,7.100341210576525e300,7.104550067251438e300,7.108758923926349e300,7.112967780601261e300,7.117176637276174e300,7.121385493951085e300,7.125594350625998e300,7.12980320730091e300,7.134012063975821e300,7.138220920650733e300,7.142429777325646e300,7.146638634000557e300,7.15084749067547e300,7.15505634735038e300,7.159265204025293e300,7.163474060700206e300,7.167682917375117e300,7.17189177405003e300,7.176100630724941e300,7.180309487399853e300,7.184518344074765e300,7.188727200749678e300,7.19293605742459e300,7.197144914099501e300,7.201353770774412e300,7.205562627449325e300,7.209771484124238e300,7.213980340799149e300,7.218189197474061e300,7.222398054148973e300,7.226606910823885e300,7.230815767498798e300,7.23502462417371e300,7.23923348084862e300,7.243442337523533e300,7.247651194198445e300,7.251860050873357e300,7.25606890754827e300,7.26027776422318e300,7.264486620898093e300,7.268695477573006e300,7.272904334247917e300,7.27711319092283e300,7.281322047597741e300,7.285530904272653e300,7.289739760947565e300,7.293948617622477e300,7.29815747429739e300,7.302366330972301e300,7.306575187647212e300,7.310784044322125e300,7.314992900997038e300,7.319201757671949e300,7.323410614346861e300,7.327619471021773e300,7.331828327696685e300,7.336037184371597e300,7.340246041046509e300,7.34445489772142e300,7.348663754396333e300,7.352872611071245e300,7.357081467746157e300,7.36129032442107e300,7.36549918109598e300,7.369708037770893e300,7.373916894445805e300,7.378125751120717e300,7.38233460779563e300,7.38654346447054e300,7.390752321145453e300,7.394961177820365e300,7.399170034495277e300,7.403378891170188e300,7.407587747845101e300,7.411796604520012e300,7.416005461194925e300,7.420214317869838e300,7.424423174544748e300,7.42863203121966e300,7.432840887894572e300,7.437049744569485e300,7.441258601244397e300,7.445467457919308e300,7.44967631459422e300,7.453885171269133e300,7.458094027944044e300,7.462302884618957e300,7.466511741293869e300,7.47072059796878e300,7.474929454643693e300,7.479138311318604e300,7.483347167993517e300,7.487556024668428e300,7.49176488134334e300,7.495973738018252e300,7.500182594693165e300,7.504391451368077e300,7.508600308042988e300,7.512809164717901e300,7.517018021392812e300,7.521226878067725e300,7.525435734742636e300,7.529644591417548e300,7.53385344809246e300,7.538062304767372e300,7.542271161442285e300,7.546480018117197e300,7.550688874792107e300,7.55489773146702e300,7.559106588141933e300,7.563315444816844e300,7.567524301491757e300,7.571733158166667e300,7.57594201484158e300,7.580150871516493e300,7.584359728191404e300,7.588568584866317e300,7.592777441541228e300,7.59698629821614e300,7.601195154891052e300,7.605404011565965e300,7.609612868240876e300,7.613821724915788e300,7.618030581590699e300,7.622239438265612e300,7.626448294940525e300,7.630657151615436e300,7.634866008290348e300,7.63907486496526e300,7.643283721640172e300,7.647492578315084e300,7.651701434989997e300,7.655910291664907e300,7.66011914833982e300,7.664328005014732e300,7.668536861689644e300,7.672745718364557e300,7.676954575039467e300,7.68116343171438e300,7.685372288389292e300,7.689581145064204e300,7.693790001739117e300,7.697998858414028e300,7.70220771508894e300,7.706416571763852e300,7.710625428438764e300,7.714834285113676e300,7.719043141788588e300,7.723251998463499e300,7.727460855138412e300,7.731669711813325e300,7.735878568488236e300,7.740087425163148e300,7.74429628183806e300,7.748505138512972e300,7.752713995187884e300,7.756922851862795e300,7.761131708537707e300,7.76534056521262e300,7.769549421887531e300,7.773758278562444e300,7.777967135237357e300,7.782175991912267e300,7.78638484858718e300,7.790593705262092e300,7.794802561937004e300,7.799011418611915e300,7.803220275286827e300,7.807429131961739e300,7.811637988636652e300,7.815846845311564e300,7.820055701986475e300,7.824264558661388e300,7.828473415336299e300,7.832682272011212e300,7.836891128686124e300,7.841099985361035e300,7.845308842035947e300,7.849517698710859e300,7.853726555385772e300,7.857935412060684e300,7.862144268735594e300,7.866353125410507e300,7.87056198208542e300,7.874770838760331e300,7.878979695435244e300,7.883188552110155e300,7.887397408785067e300,7.89160626545998e300,7.895815122134891e300,7.900023978809804e300,7.904232835484715e300,7.908441692159627e300,7.912650548834539e300,7.916859405509452e300,7.921068262184363e300,7.925277118859275e300,7.929485975534188e300,7.933694832209099e300,7.937903688884012e300,7.942112545558923e300,7.946321402233835e300,7.950530258908747e300,7.954739115583659e300,7.958947972258571e300,7.963156828933484e300,7.967365685608394e300,7.971574542283307e300,7.97578339895822e300,7.979992255633131e300,7.984201112308044e300,7.988409968982954e300,7.992618825657867e300,7.99682768233278e300,8.001036539007691e300,8.005245395682604e300,8.009454252357515e300,8.013663109032427e300,8.017871965707339e300,8.022080822382252e300,8.026289679057163e300,8.030498535732075e300,8.034707392406986e300,8.038916249081899e300,8.043125105756812e300,8.047333962431723e300,8.051542819106635e300,8.055751675781547e300,8.059960532456459e300,8.064169389131371e300,8.068378245806284e300,8.072587102481194e300,8.076795959156107e300,8.081004815831018e300,8.085213672505931e300,8.089422529180844e300,8.093631385855754e300,8.097840242530667e300,8.102049099205579e300,8.106257955880491e300,8.110466812555403e300,8.114675669230315e300,8.118884525905226e300,8.123093382580139e300,8.127302239255052e300,8.131511095929963e300,8.135719952604875e300,8.139928809279786e300,8.144137665954699e300,8.148346522629611e300,8.152555379304523e300,8.156764235979434e300,8.160973092654347e300,8.165181949329259e300,8.169390806004171e300,8.173599662679084e300,8.177808519353994e300,8.182017376028907e300,8.186226232703818e300,8.190435089378731e300,8.194643946053642e300,8.198852802728554e300,8.203061659403467e300,8.207270516078379e300,8.211479372753291e300,8.215688229428202e300,8.219897086103115e300,8.224105942778026e300,8.228314799452939e300,8.23252365612785e300,8.236732512802762e300,8.240941369477675e300,8.245150226152586e300,8.249359082827499e300,8.253567939502411e300,8.257776796177322e300,8.261985652852234e300,8.266194509527147e300,8.270403366202058e300,8.274612222876971e300,8.278821079551881e300,8.283029936226794e300,8.287238792901707e300,8.291447649576618e300,8.295656506251531e300,8.299865362926442e300,8.304074219601354e300,8.308283076276266e300,8.312491932951179e300,8.31670078962609e300,8.320909646301002e300,8.325118502975914e300,8.329327359650826e300,8.333536216325739e300,8.33774507300065e300,8.341953929675562e300,8.346162786350474e300,8.350371643025386e300,8.354580499700299e300,8.358789356375211e300,8.362998213050122e300,8.367207069725034e300,8.371415926399946e300,8.375624783074858e300,8.379833639749771e300,8.384042496424681e300,8.388251353099594e300,8.392460209774507e300,8.396669066449418e300,8.400877923124331e300,8.405086779799242e300,8.409295636474154e300,8.413504493149066e300,8.417713349823978e300,8.42192220649889e300,8.426131063173802e300,8.430339919848713e300,8.434548776523626e300,8.438757633198539e300,8.44296648987345e300,8.447175346548362e300,8.451384203223274e300,8.455593059898186e300,8.459801916573098e300,8.46401077324801e300,8.468219629922921e300,8.472428486597834e300,8.476637343272746e300,8.480846199947658e300,8.485055056622571e300,8.489263913297481e300,8.493472769972394e300,8.497681626647306e300,8.501890483322218e300,8.50609933999713e300,8.510308196672041e300,8.514517053346954e300,8.518725910021866e300,8.522934766696778e300,8.52714362337169e300,8.531352480046602e300,8.535561336721513e300,8.539770193396426e300,8.543979050071339e300,8.54818790674625e300,8.552396763421162e300,8.556605620096073e300,8.560814476770986e300,8.565023333445898e300,8.569232190120809e300,8.573441046795721e300,8.577649903470634e300,8.581858760145545e300,8.586067616820458e300,8.590276473495371e300,8.594485330170281e300,8.598694186845194e300,8.602903043520105e300,8.607111900195018e300,8.611320756869929e300,8.615529613544841e300,8.619738470219753e300,8.623947326894666e300,8.628156183569578e300,8.632365040244489e300,8.636573896919402e300,8.640782753594313e300,8.644991610269226e300,8.649200466944137e300,8.653409323619049e300,8.657618180293961e300,8.661827036968873e300,8.666035893643786e300,8.670244750318698e300,8.674453606993609e300,8.678662463668521e300,8.682871320343434e300,8.687080177018345e300,8.691289033693258e300,8.695497890368168e300,8.699706747043081e300,8.703915603717994e300,8.708124460392905e300,8.712333317067818e300,8.716542173742729e300,8.720751030417641e300,8.724959887092553e300,8.729168743767466e300,8.733377600442377e300,8.737586457117289e300,8.7417953137922e300,8.746004170467113e300,8.750213027142026e300,8.754421883816937e300,8.758630740491849e300,8.762839597166761e300,8.767048453841673e300,8.771257310516585e300,8.775466167191498e300,8.779675023866408e300,8.783883880541321e300,8.788092737216233e300,8.792301593891145e300,8.796510450566058e300,8.800719307240968e300,8.804928163915881e300,8.809137020590793e300,8.813345877265705e300,8.817554733940618e300,8.821763590615529e300,8.82597244729044e300,8.830181303965353e300,8.834390160640265e300,8.838599017315177e300,8.842807873990089e300,8.847016730665e300,8.851225587339913e300,8.855434444014826e300,8.859643300689737e300,8.863852157364649e300,8.868061014039561e300,8.872269870714473e300,8.876478727389385e300,8.880687584064297e300,8.884896440739208e300,8.889105297414121e300,8.893314154089032e300,8.897523010763945e300,8.901731867438858e300,8.905940724113768e300,8.910149580788681e300,8.914358437463593e300,8.918567294138505e300,8.922776150813417e300,8.926985007488328e300,8.93119386416324e300,8.935402720838153e300,8.939611577513065e300,8.943820434187977e300,8.948029290862889e300,8.9522381475378e300,8.956447004212713e300,8.960655860887625e300,8.964864717562537e300,8.969073574237448e300,8.97328243091236e300,8.977491287587273e300,8.981700144262185e300,8.985909000937095e300,8.990117857612008e300,8.994326714286921e300,8.998535570961832e300,9.002744427636745e300,9.006953284311656e300,9.011162140986568e300,9.01537099766148e300,9.019579854336392e300,9.023788711011305e300,9.027997567686216e300,9.032206424361128e300,9.03641528103604e300,9.040624137710953e300,9.044832994385864e300,9.049041851060776e300,9.053250707735689e300,9.0574595644106e300,9.061668421085513e300,9.065877277760424e300,9.070086134435336e300,9.074294991110248e300,9.07850384778516e300,9.082712704460072e300,9.086921561134985e300,9.091130417809895e300,9.095339274484808e300,9.099548131159721e300,9.103756987834632e300,9.107965844509545e300,9.112174701184455e300,9.116383557859368e300,9.12059241453428e300,9.124801271209192e300,9.129010127884105e300,9.133218984559016e300,9.137427841233928e300,9.14163669790884e300,9.145845554583753e300,9.150054411258664e300,9.154263267933576e300,9.158472124608488e300,9.1626809812834e300,9.166889837958313e300,9.171098694633224e300,9.175307551308136e300,9.179516407983048e300,9.18372526465796e300,9.187934121332872e300,9.192142978007785e300,9.196351834682695e300,9.200560691357608e300,9.20476954803252e300,9.208978404707432e300,9.213187261382345e300,9.217396118057255e300,9.221604974732168e300,9.22581383140708e300,9.230022688081992e300,9.234231544756904e300,9.238440401431816e300,9.242649258106727e300,9.24685811478164e300,9.251066971456553e300,9.255275828131464e300,9.259484684806376e300,9.263693541481287e300,9.2679023981562e300,9.272111254831112e300,9.276320111506024e300,9.280528968180935e300,9.284737824855848e300,9.28894668153076e300,9.293155538205672e300,9.297364394880585e300,9.301573251555495e300,9.305782108230408e300,9.309990964905319e300,9.314199821580232e300,9.318408678255145e300,9.322617534930055e300,9.326826391604968e300,9.33103524827988e300,9.335244104954792e300,9.339452961629704e300,9.343661818304616e300,9.347870674979527e300,9.35207953165444e300,9.356288388329351e300,9.360497245004264e300,9.364706101679176e300,9.368914958354087e300,9.373123815029e300,9.377332671703912e300,9.381541528378823e300,9.385750385053735e300,9.389959241728648e300,9.39416809840356e300,9.398376955078472e300,9.402585811753382e300,9.406794668428295e300,9.411003525103208e300,9.415212381778119e300,9.419421238453032e300,9.423630095127943e300,9.427838951802855e300,9.432047808477767e300,9.43625666515268e300,9.440465521827592e300,9.444674378502503e300,9.448883235177415e300,9.453092091852327e300,9.45730094852724e300,9.461509805202151e300,9.465718661877063e300,9.469927518551975e300,9.474136375226887e300,9.4783452319018e300,9.482554088576712e300,9.486762945251623e300,9.490971801926535e300,9.495180658601447e300,9.499389515276359e300,9.503598371951272e300,9.507807228626182e300,9.512016085301095e300,9.516224941976008e300,9.520433798650919e300,9.524642655325832e300,9.528851512000743e300,9.533060368675655e300,9.537269225350567e300,9.541478082025479e300,9.545686938700391e300,9.549895795375303e300,9.554104652050214e300,9.558313508725127e300,9.56252236540004e300,9.566731222074951e300,9.570940078749863e300,9.575148935424775e300,9.579357792099687e300,9.5835666487746e300,9.587775505449511e300,9.591984362124422e300,9.596193218799335e300,9.600402075474247e300,9.604610932149159e300,9.608819788824072e300,9.613028645498982e300,9.617237502173895e300,9.621446358848807e300,9.625655215523719e300,9.629864072198632e300,9.634072928873542e300,9.638281785548455e300,9.642490642223367e300,9.646699498898279e300,9.650908355573191e300,9.655117212248103e300,9.659326068923014e300,9.663534925597927e300,9.66774378227284e300,9.671952638947751e300,9.676161495622663e300,9.680370352297574e300,9.684579208972487e300,9.688788065647399e300,9.692996922322311e300,9.697205778997222e300,9.701414635672135e300,9.705623492347046e300,9.709832349021959e300,9.714041205696872e300,9.718250062371782e300,9.722458919046695e300,9.726667775721606e300,9.730876632396519e300,9.735085489071431e300,9.739294345746342e300,9.743503202421254e300,9.747712059096167e300,9.751920915771079e300,9.756129772445991e300,9.760338629120903e300,9.764547485795814e300,9.768756342470727e300,9.772965199145638e300,9.77717405582055e300,9.781382912495462e300,9.785591769170374e300,9.789800625845287e300,9.794009482520199e300,9.79821833919511e300,9.802427195870022e300,9.806636052544935e300,9.810844909219846e300,9.815053765894759e300,9.819262622569669e300,9.823471479244582e300,9.827680335919495e300,9.831889192594406e300,9.836098049269319e300,9.84030690594423e300,9.844515762619142e300,9.848724619294054e300,9.852933475968967e300,9.857142332643878e300,9.86135118931879e300,9.865560045993701e300,9.869768902668614e300,9.873977759343527e300,9.878186616018438e300,9.88239547269335e300,9.886604329368262e300,9.890813186043174e300,9.895022042718086e300,9.899230899392999e300,9.90343975606791e300,9.907648612742822e300,9.911857469417734e300,9.916066326092646e300,9.920275182767559e300,9.924484039442469e300,9.928692896117382e300,9.932901752792294e300,9.937110609467206e300,9.941319466142119e300,9.94552832281703e300,9.949737179491942e300,9.953946036166854e300,9.958154892841766e300,9.962363749516678e300,9.96657260619159e300,9.970781462866501e300,9.974990319541414e300,9.979199176216327e300,9.983408032891238e300,9.98761688956615e300,9.991825746241062e300,9.996034602915974e300,1.0000243459590886e301,1.0004452316265798e301,1.0008661172940709e301,1.0012870029615622e301,1.0017078886290533e301,1.0021287742965446e301,1.0025496599640359e301,1.0029705456315269e301,1.0033914312990182e301,1.0038123169665094e301,1.0042332026340006e301,1.0046540883014918e301,1.0050749739689829e301,1.0054958596364741e301,1.0059167453039654e301,1.0063376309714566e301,1.0067585166389478e301,1.007179402306439e301,1.0076002879739301e301,1.0080211736414214e301,1.0084420593089126e301,1.0088629449764038e301,1.009283830643895e301,1.0097047163113861e301,1.0101256019788774e301,1.0105464876463686e301,1.0109673733138598e301,1.0113882589813509e301,1.0118091446488422e301,1.0122300303163333e301,1.0126509159838246e301,1.0130718016513159e301,1.0134926873188069e301,1.0139135729862982e301,1.0143344586537893e301,1.0147553443212806e301,1.0151762299887718e301,1.0155971156562629e301,1.0160180013237541e301,1.0164388869912454e301,1.0168597726587365e301,1.0172806583262278e301,1.017701543993719e301,1.0181224296612101e301,1.0185433153287014e301,1.0189642009961925e301,1.0193850866636837e301,1.0198059723311749e301,1.0202268579986661e301,1.0206477436661573e301,1.0210686293336486e301,1.0214895150011396e301,1.0219104006686309e301,1.0223312863361222e301,1.0227521720036133e301,1.0231730576711046e301,1.0235939433385956e301,1.0240148290060869e301,1.0244357146735781e301,1.0248566003410693e301,1.0252774860085606e301,1.0256983716760517e301,1.0261192573435429e301,1.0265401430110341e301,1.0269610286785254e301,1.0273819143460165e301,1.0278028000135077e301,1.028223685680999e301,1.0286445713484901e301,1.0290654570159814e301,1.0294863426834725e301,1.0299072283509637e301,1.0303281140184549e301,1.0307489996859461e301,1.0311698853534373e301,1.0315907710209286e301,1.0320116566884196e301,1.0324325423559109e301,1.0328534280234022e301,1.0332743136908933e301,1.0336951993583846e301,1.0341160850258756e301,1.0345369706933669e301,1.0349578563608581e301,1.0353787420283493e301,1.0357996276958405e301,1.0362205133633317e301,1.0366413990308228e301,1.0370622846983141e301,1.0374831703658054e301,1.0379040560332965e301,1.0383249417007877e301,1.0387458273682788e301,1.0391667130357701e301,1.0395875987032613e301,1.0400084843707525e301,1.0404293700382436e301,1.0408502557057349e301,1.041271141373226e301,1.0416920270407173e301,1.0421129127082086e301,1.0425337983756996e301,1.0429546840431909e301,1.043375569710682e301,1.0437964553781733e301,1.0442173410456646e301,1.0446382267131556e301,1.0450591123806469e301,1.0454799980481381e301,1.0459008837156293e301,1.0463217693831205e301,1.0467426550506117e301,1.0471635407181028e301,1.0475844263855941e301,1.0480053120530852e301,1.0484261977205765e301,1.0488470833880677e301,1.0492679690555588e301,1.0496888547230501e301,1.0501097403905413e301,1.0505306260580325e301,1.0509515117255236e301,1.0513723973930149e301,1.051793283060506e301,1.0522141687279973e301,1.0526350543954885e301,1.0530559400629796e301,1.0534768257304709e301,1.053897711397962e301,1.0543185970654533e301,1.0547394827329446e301,1.0551603684004356e301,1.0555812540679268e301,1.0560021397354181e301,1.0564230254029093e301,1.0568439110704005e301,1.0572647967378916e301,1.0576856824053828e301,1.0581065680728741e301,1.0585274537403652e301,1.0589483394078564e301,1.0593692250753476e301,1.0597901107428388e301,1.0602109964103301e301,1.0606318820778213e301,1.0610527677453124e301,1.0614736534128036e301,1.0618945390802948e301,1.062315424747786e301,1.0627363104152773e301,1.0631571960827683e301,1.0635780817502596e301,1.0639989674177509e301,1.064419853085242e301,1.0648407387527333e301,1.0652616244202244e301,1.0656825100877156e301,1.0661033957552068e301,1.066524281422698e301,1.0669451670901892e301,1.0673660527576804e301,1.0677869384251715e301,1.0682078240926628e301,1.0686287097601541e301,1.0690495954276452e301,1.0694704810951364e301,1.0698913667626276e301,1.0703122524301188e301,1.07073313809761e301,1.0711540237651012e301,1.0715749094325923e301,1.0719957951000837e301,1.0724166807675749e301,1.072837566435066e301,1.0732584521025572e301,1.0736793377700483e301,1.0741002234375397e301,1.0745211091050308e301,1.074941994772522e301,1.0753628804400131e301,1.0757837661075043e301,1.0762046517749957e301,1.0766255374424868e301,1.077046423109978e301,1.077467308777469e301,1.0778881944449605e301,1.0783090801124517e301,1.0787299657799428e301,1.079150851447434e301,1.079571737114925e301,1.0799926227824165e301,1.0804135084499076e301,1.0808343941173988e301,1.08125527978489e301,1.081676165452381e301,1.0820970511198725e301,1.0825179367873636e301,1.0829388224548547e301,1.083359708122346e301,1.0837805937898373e301,1.0842014794573284e301,1.0846223651248196e301,1.0850432507923107e301,1.0854641364598019e301,1.0858850221272933e301,1.0863059077947844e301,1.0867267934622755e301,1.0871476791297667e301,1.0875685647972578e301,1.0879894504647492e301,1.0884103361322404e301,1.0888312217997315e301,1.0892521074672227e301,1.0896729931347138e301,1.0900938788022052e301,1.0905147644696963e301,1.0909356501371875e301,1.0913565358046786e301,1.09177742147217e301,1.0921983071396612e301,1.0926191928071523e301,1.0930400784746437e301,1.0934609641421346e301,1.093881849809626e301,1.0943027354771171e301,1.0947236211446083e301,1.0951445068120997e301,1.0955653924795906e301,1.095986278147082e301,1.0964071638145731e301,1.0968280494820643e301,1.0972489351495557e301,1.0976698208170466e301,1.098090706484538e301,1.098511592152029e301,1.0989324778195205e301,1.0993533634870116e301,1.0997742491545025e301,1.100195134821994e301,1.100616020489485e301,1.1010369061569765e301,1.1014577918244676e301,1.1018786774919585e301,1.10229956315945e301,1.102720448826941e301,1.1031413344944324e301,1.1035622201619236e301,1.1039831058294147e301,1.1044039914969059e301,1.104824877164397e301,1.1052457628318884e301,1.1056666484993795e301,1.1060875341668707e301,1.1065084198343618e301,1.106929305501853e301,1.1073501911693444e301,1.1077710768368355e301,1.1081919625043267e301,1.108612848171818e301,1.109033733839309e301,1.1094546195068003e301,1.1098755051742915e301,1.1102963908417826e301,1.110717276509274e301,1.111138162176765e301,1.1115590478442563e301,1.1119799335117475e301,1.1124008191792386e301,1.11282170484673e301,1.1132425905142212e301,1.1136634761817123e301,1.1140843618492034e301,1.1145052475166946e301,1.114926133184186e301,1.1153470188516771e301,1.1157679045191683e301,1.1161887901866594e301,1.1166096758541506e301,1.117030561521642e301,1.117451447189133e301,1.1178723328566245e301,1.1182932185241154e301,1.1187141041916065e301,1.119134989859098e301,1.119555875526589e301,1.1199767611940805e301,1.1203976468615714e301,1.1208185325290625e301,1.121239418196554e301,1.121660303864045e301,1.1220811895315364e301,1.1225020751990276e301,1.1229229608665185e301,1.1233438465340099e301,1.123764732201501e301,1.1241856178689924e301,1.1246065035364836e301,1.1250273892039745e301,1.1254482748714658e301,1.125869160538957e301,1.1262900462064484e301,1.1267109318739395e301,1.1271318175414307e301,1.1275527032089218e301,1.127973588876413e301,1.1283944745439044e301,1.1288153602113955e301,1.1292362458788866e301,1.1296571315463778e301,1.130078017213869e301,1.1304989028813603e301,1.1309197885488515e301,1.1313406742163426e301,1.131761559883834e301,1.132182445551325e301,1.1326033312188163e301,1.1330242168863074e301,1.1334451025537986e301,1.13386598822129e301,1.134286873888781e301,1.1347077595562723e301,1.1351286452237634e301,1.1355495308912546e301,1.135970416558746e301,1.136391302226237e301,1.1368121878937282e301,1.1372330735612194e301,1.1376539592287105e301,1.138074844896202e301,1.138495730563693e301,1.1389166162311842e301,1.1393375018986754e301,1.1397583875661665e301,1.140179273233658e301,1.140600158901149e301,1.1410210445686404e301,1.1414419302361313e301,1.1418628159036225e301,1.1422837015711139e301,1.142704587238605e301,1.1431254729060964e301,1.1435463585735873e301,1.1439672442410785e301,1.1443881299085699e301,1.144809015576061e301,1.1452299012435524e301,1.1456507869110435e301,1.1460716725785344e301,1.1464925582460258e301,1.146913443913517e301,1.1473343295810084e301,1.1477552152484995e301,1.1481761009159904e301,1.1485969865834818e301,1.149017872250973e301,1.1494387579184643e301,1.1498596435859555e301,1.1502805292534466e301,1.1507014149209378e301,1.151122300588429e301,1.1515431862559203e301,1.1519640719234115e301,1.1523849575909026e301,1.1528058432583937e301,1.153226728925885e301,1.1536476145933763e301,1.1540685002608674e301,1.1544893859283586e301,1.15491027159585e301,1.1553311572633409e301,1.155752042930832e301,1.1561729285983234e301,1.1565938142658145e301,1.157014699933306e301,1.1574355856007968e301,1.157856471268288e301,1.1582773569357794e301,1.1586982426032705e301,1.159119128270762e301,1.159540013938253e301,1.159960899605744e301,1.1603817852732353e301,1.1608026709407265e301,1.1612235566082179e301,1.161644442275709e301,1.1620653279432e301,1.1624862136106913e301,1.1629070992781825e301,1.1633279849456739e301,1.163748870613165e301,1.1641697562806561e301,1.1645906419481473e301,1.1650115276156384e301,1.1654324132831298e301,1.165853298950621e301,1.1662741846181121e301,1.1666950702856033e301,1.1671159559530944e301,1.1675368416205858e301,1.167957727288077e301,1.168378612955568e301,1.1687994986230595e301,1.1692203842905504e301,1.1696412699580418e301,1.170062155625533e301,1.170483041293024e301,1.1709039269605155e301,1.1713248126280064e301,1.1717456982954977e301,1.172166583962989e301,1.17258746963048e301,1.1730083552979714e301,1.1734292409654626e301,1.1738501266329537e301,1.1742710123004449e301,1.174691897967936e301,1.1751127836354274e301,1.1755336693029185e301,1.1759545549704097e301,1.1763754406379008e301,1.176796326305392e301,1.1772172119728834e301,1.1776380976403745e301,1.178058983307866e301,1.1784798689753568e301,1.178900754642848e301,1.1793216403103394e301,1.1797425259778305e301,1.180163411645322e301,1.1805842973128128e301,1.181005182980304e301,1.1814260686477953e301,1.1818469543152865e301,1.1822678399827779e301,1.182688725650269e301,1.18310961131776e301,1.1835304969852513e301,1.1839513826527424e301,1.1843722683202338e301,1.184793153987725e301,1.185214039655216e301,1.1856349253227073e301,1.1860558109901984e301,1.1864766966576898e301,1.186897582325181e301,1.187318467992672e301,1.1877393536601632e301,1.1881602393276544e301,1.1885811249951458e301,1.189002010662637e301,1.189422896330128e301,1.1898437819976195e301,1.1902646676651104e301,1.1906855533326018e301,1.191106439000093e301,1.191527324667584e301,1.1919482103350754e301,1.1923690960025663e301,1.1927899816700577e301,1.1932108673375489e301,1.19363175300504e301,1.1940526386725314e301,1.1944735243400226e301,1.1948944100075137e301,1.1953152956750048e301,1.195736181342496e301,1.1961570670099874e301,1.1965779526774785e301,1.1969988383449697e301,1.1974197240124608e301,1.197840609679952e301,1.1982614953474434e301,1.1986823810149345e301,1.199103266682426e301,1.1995241523499168e301,1.199945038017408e301,1.2003659236848993e301,1.2007868093523905e301,1.2012076950198819e301,1.2016285806873728e301,1.202049466354864e301,1.2024703520223553e301,1.2028912376898464e301,1.2033121233573378e301,1.203733009024829e301,1.20415389469232e301,1.2045747803598113e301,1.2049956660273024e301,1.2054165516947938e301,1.205837437362285e301,1.2062583230297759e301,1.2066792086972672e301,1.2071000943647584e301,1.2075209800322498e301,1.207941865699741e301,1.208362751367232e301,1.2087836370347232e301,1.2092045227022144e301,1.2096254083697058e301,1.210046294037197e301,1.210467179704688e301,1.2108880653721792e301,1.2113089510396703e301,1.2117298367071617e301,1.2121507223746529e301,1.212571608042144e301,1.2129924937096354e301,1.2134133793771263e301,1.2138342650446177e301,1.2142551507121089e301,1.2146760363796e301,1.2150969220470914e301,1.2155178077145823e301,1.2159386933820737e301,1.2163595790495648e301,1.216780464717056e301,1.2172013503845474e301,1.2176222360520385e301,1.2180431217195297e301,1.2184640073870208e301,1.218884893054512e301,1.2193057787220033e301,1.2197266643894945e301,1.2201475500569856e301,1.2205684357244768e301,1.220989321391968e301,1.2214102070594593e301,1.2218310927269505e301,1.2222519783944418e301,1.2226728640619327e301,1.223093749729424e301,1.2235146353969153e301,1.2239355210644064e301,1.2243564067318978e301,1.2247772923993887e301,1.2251981780668799e301,1.2256190637343713e301,1.2260399494018624e301,1.2264608350693538e301,1.226881720736845e301,1.2273026064043358e301,1.2277234920718272e301,1.2281443777393184e301,1.2285652634068098e301,1.228986149074301e301,1.2294070347417918e301,1.2298279204092832e301,1.2302488060767743e301,1.2306696917442657e301,1.2310905774117569e301,1.231511463079248e301,1.2319323487467392e301,1.2323532344142303e301,1.2327741200817217e301,1.2331950057492129e301,1.233615891416704e301,1.2340367770841951e301,1.2344576627516863e301,1.2348785484191777e301,1.2352994340866688e301,1.23572031975416e301,1.2361412054216514e301,1.2365620910891423e301,1.2369829767566334e301,1.2374038624241248e301,1.237824748091616e301,1.2382456337591073e301,1.2386665194265982e301,1.2390874050940894e301,1.2395082907615808e301,1.239929176429072e301,1.2403500620965633e301,1.2407709477640545e301,1.2411918334315454e301,1.2416127190990367e301,1.242033604766528e301,1.2424544904340193e301,1.2428753761015104e301,1.2432962617690013e301,1.2437171474364927e301,1.2441380331039839e301,1.2445589187714753e301,1.2449798044389664e301,1.2454006901064576e301,1.2458215757739487e301,1.2462424614414398e301,1.2466633471089312e301,1.2470842327764224e301,1.2475051184439135e301,1.2479260041114047e301,1.2483468897788958e301,1.2487677754463872e301,1.2491886611138784e301,1.2496095467813695e301,1.250030432448861e301,1.2504513181163518e301,1.2508722037838432e301,1.2512930894513343e301,1.2517139751188255e301,1.2521348607863169e301,1.2525557464538078e301,1.2529766321212992e301,1.2533975177887903e301,1.2538184034562814e301,1.2542392891237728e301,1.254660174791264e301,1.2550810604587551e301,1.2555019461262463e301,1.2559228317937374e301,1.2563437174612288e301,1.25676460312872e301,1.257185488796211e301,1.2576063744637022e301,1.2580272601311934e301,1.2584481457986848e301,1.258869031466176e301,1.2592899171336673e301,1.2597108028011582e301,1.2601316884686494e301,1.2605525741361408e301,1.260973459803632e301,1.2613943454711233e301,1.2618152311386142e301,1.2622361168061053e301,1.2626570024735967e301,1.2630778881410879e301,1.2634987738085793e301,1.2639196594760704e301,1.2643405451435613e301,1.2647614308110527e301,1.2651823164785438e301,1.2656032021460352e301,1.2660240878135264e301,1.2664449734810173e301,1.2668658591485087e301,1.2672867448159998e301,1.2677076304834912e301,1.2681285161509824e301,1.2685494018184735e301,1.2689702874859646e301,1.2693911731534558e301,1.2698120588209472e301,1.2702329444884383e301,1.2706538301559295e301,1.2710747158234206e301,1.2714956014909118e301,1.2719164871584032e301,1.2723373728258943e301,1.2727582584933854e301,1.2731791441608768e301,1.2736000298283677e301,1.2740209154958591e301,1.2744418011633503e301,1.2748626868308414e301,1.2752835724983328e301,1.2757044581658237e301,1.276125343833315e301,1.2765462295008062e301,1.2769671151682974e301,1.2773880008357888e301,1.27780888650328e301,1.278229772170771e301,1.2786506578382622e301,1.2790715435057534e301,1.2794924291732448e301,1.279913314840736e301,1.280334200508227e301,1.2807550861757182e301,1.2811759718432093e301,1.2815968575107007e301,1.2820177431781919e301,1.2824386288456833e301,1.2828595145131742e301,1.2832804001806653e301,1.2837012858481567e301,1.2841221715156479e301,1.2845430571831392e301,1.2849639428506301e301,1.2853848285181213e301,1.2858057141856127e301,1.2862265998531038e301,1.2866474855205952e301,1.2870683711880864e301,1.2874892568555773e301,1.2879101425230687e301,1.2883310281905598e301,1.2887519138580512e301,1.2891727995255423e301,1.2895936851930332e301,1.2900145708605246e301,1.2904354565280158e301,1.2908563421955072e301,1.2912772278629983e301,1.2916981135304895e301,1.2921189991979806e301,1.2925398848654717e301,1.2929607705329631e301,1.2933816562004543e301,1.2938025418679454e301,1.2942234275354366e301,1.2946443132029277e301,1.295065198870419e301,1.2954860845379103e301,1.2959069702054014e301,1.2963278558728928e301,1.2967487415403837e301,1.297169627207875e301,1.2975905128753662e301,1.2980113985428574e301,1.2984322842103488e301,1.2988531698778397e301,1.299274055545331e301,1.2996949412128222e301,1.3001158268803133e301,1.3005367125478047e301,1.3009575982152959e301,1.301378483882787e301,1.3017993695502782e301,1.3022202552177693e301,1.3026411408852607e301,1.3030620265527519e301,1.303482912220243e301,1.3039037978877341e301,1.3043246835552253e301,1.3047455692227167e301,1.3051664548902078e301,1.3055873405576992e301,1.3060082262251901e301,1.3064291118926813e301,1.3068499975601727e301,1.3072708832276638e301,1.3076917688951552e301,1.308112654562646e301,1.3085335402301372e301,1.3089544258976286e301,1.3093753115651198e301,1.3097961972326112e301,1.3102170829001023e301,1.3106379685675932e301,1.3110588542350846e301,1.3114797399025758e301,1.3119006255700671e301,1.3123215112375583e301,1.3127423969050492e301,1.3131632825725406e301,1.3135841682400317e301,1.314005053907523e301,1.3144259395750143e301,1.3148468252425054e301,1.3152677109099966e301,1.3156885965774877e301,1.316109482244979e301,1.3165303679124702e301,1.3169512535799614e301,1.3173721392474525e301,1.3177930249149437e301,1.3182139105824348e301,1.3186347962499262e301,1.3190556819174174e301,1.3194765675849087e301,1.3198974532523996e301,1.3203183389198908e301,1.3207392245873822e301,1.3211601102548733e301,1.3215809959223647e301,1.3220018815898556e301,1.3224227672573468e301,1.3228436529248382e301,1.3232645385923293e301,1.3236854242598207e301,1.3241063099273118e301,1.3245271955948027e301,1.3249480812622941e301,1.3253689669297853e301,1.3257898525972767e301,1.3262107382647678e301,1.3266316239322587e301,1.32705250959975e301,1.3274733952672412e301,1.3278942809347326e301,1.3283151666022238e301,1.328736052269715e301,1.329156937937206e301,1.3295778236046972e301,1.3299987092721886e301,1.3304195949396798e301,1.330840480607171e301,1.331261366274662e301,1.3316822519421532e301,1.3321031376096446e301,1.3325240232771357e301,1.3329449089446269e301,1.3333657946121183e301,1.3337866802796092e301,1.3342075659471006e301,1.3346284516145917e301,1.3350493372820828e301,1.3354702229495742e301,1.3358911086170651e301,1.3363119942845565e301,1.3367328799520477e301,1.3371537656195388e301,1.3375746512870302e301,1.3379955369545214e301,1.3384164226220125e301,1.3388373082895036e301,1.3392581939569948e301,1.3396790796244862e301,1.3400999652919773e301,1.3405208509594685e301,1.3409417366269596e301,1.3413626222944508e301,1.3417835079619422e301,1.3422043936294333e301,1.3426252792969247e301,1.3430461649644156e301,1.3434670506319067e301,1.3438879362993981e301,1.3443088219668893e301,1.3447297076343807e301,1.3451505933018716e301,1.3455714789693627e301,1.345992364636854e301,1.3464132503043453e301,1.3468341359718366e301,1.3472550216393278e301,1.3476759073068187e301,1.34809679297431e301,1.3485176786418012e301,1.3489385643092926e301,1.3493594499767838e301,1.3497803356442747e301,1.350201221311766e301,1.3506221069792572e301,1.3510429926467486e301,1.3514638783142397e301,1.3518847639817309e301,1.352305649649222e301,1.3527265353167132e301,1.3531474209842046e301,1.3535683066516957e301,1.3539891923191869e301,1.354410077986678e301,1.3548309636541691e301,1.3552518493216605e301,1.3556727349891517e301,1.3560936206566428e301,1.3565145063241342e301,1.3569353919916251e301,1.3573562776591165e301,1.3577771633266077e301,1.3581980489940988e301,1.3586189346615902e301,1.359039820329081e301,1.3594607059965725e301,1.3598815916640636e301,1.3603024773315548e301,1.3607233629990462e301,1.3611442486665373e301,1.3615651343340285e301,1.3619860200015196e301,1.3624069056690107e301,1.3628277913365021e301,1.3632486770039933e301,1.3636695626714844e301,1.3640904483389756e301,1.3645113340064667e301,1.364932219673958e301,1.3653531053414493e301,1.3657739910089406e301,1.3661948766764315e301,1.3666157623439227e301,1.367036648011414e301,1.3674575336789052e301,1.3678784193463966e301,1.3682993050138875e301,1.3687201906813787e301,1.36914107634887e301,1.3695619620163612e301,1.3699828476838526e301,1.3704037333513437e301,1.3708246190188346e301,1.371245504686326e301,1.3716663903538172e301,1.3720872760213086e301,1.3725081616887997e301,1.3729290473562906e301,1.373349933023782e301,1.3737708186912731e301,1.3741917043587645e301,1.3746125900262557e301,1.3750334756937468e301,1.375454361361238e301,1.3758752470287291e301,1.3762961326962205e301,1.3767170183637117e301,1.3771379040312028e301,1.377558789698694e301,1.377979675366185e301,1.3784005610336765e301,1.3788214467011676e301,1.3792423323686588e301,1.3796632180361502e301,1.380084103703641e301,1.3805049893711325e301,1.3809258750386236e301,1.3813467607061148e301,1.3817676463736061e301,1.382188532041097e301,1.3826094177085884e301,1.3830303033760796e301,1.3834511890435707e301,1.383872074711062e301,1.3842929603785533e301,1.3847138460460444e301,1.3851347317135356e301,1.3855556173810267e301,1.385976503048518e301,1.3863973887160092e301,1.3868182743835004e301,1.3872391600509915e301,1.3876600457184827e301,1.388080931385974e301,1.3885018170534652e301,1.3889227027209566e301,1.3893435883884475e301,1.3897644740559386e301,1.39018535972343e301,1.3906062453909212e301,1.3910271310584126e301,1.3914480167259035e301,1.3918689023933946e301,1.392289788060886e301,1.3927106737283772e301,1.3931315593958685e301,1.3935524450633597e301,1.3939733307308506e301,1.394394216398342e301,1.3948151020658331e301,1.3952359877333245e301,1.3956568734008157e301,1.3960777590683066e301,1.396498644735798e301,1.396919530403289e301,1.3973404160707802e301,1.3977613017382716e301,1.3981821874057628e301,1.398603073073254e301,1.399023958740745e301,1.3994448444082362e301,1.3998657300757276e301,1.4002866157432188e301,1.4007075014107101e301,1.401128387078201e301,1.4015492727456922e301,1.4019701584131836e301,1.4023910440806747e301,1.402811929748166e301,1.403232815415657e301,1.4036537010831482e301,1.4040745867506396e301,1.4044954724181307e301,1.404916358085622e301,1.4053372437531132e301,1.4057581294206041e301,1.4061790150880955e301,1.4065999007555867e301,1.407020786423078e301,1.4074416720905692e301,1.40786255775806e301,1.4082834434255515e301,1.4087043290930426e301,1.409125214760534e301,1.4095461004280252e301,1.4099669860955163e301,1.4103878717630075e301,1.4108087574304986e301,1.41122964309799e301,1.4116505287654812e301,1.4120714144329723e301,1.4124923001004635e301,1.4129131857679546e301,1.413334071435446e301,1.4137549571029371e301,1.4141758427704283e301,1.4145967284379197e301,1.4150176141054106e301,1.415438499772902e301,1.415859385440393e301,1.4162802711078843e301,1.4167011567753756e301,1.4171220424428665e301,1.417542928110358e301,1.417963813777849e301,1.4183846994453402e301,1.4188055851128316e301,1.4192264707803228e301,1.419647356447814e301,1.420068242115305e301,1.4204891277827962e301,1.4209100134502876e301,1.4213308991177787e301,1.4217517847852699e301,1.422172670452761e301,1.4225935561202522e301,1.4230144417877436e301,1.4234353274552347e301,1.423856213122726e301,1.424277098790217e301,1.4246979844577081e301,1.4251188701251995e301,1.4255397557926907e301,1.425960641460182e301,1.426381527127673e301,1.4268024127951641e301,1.4272232984626555e301,1.4276441841301467e301,1.428065069797638e301,1.4284859554651292e301,1.42890684113262e301,1.4293277268001115e301,1.4297486124676026e301,1.430169498135094e301,1.4305903838025852e301,1.431011269470076e301,1.4314321551375675e301,1.4318530408050586e301,1.43227392647255e301,1.4326948121400411e301,1.4331156978075323e301,1.4335365834750234e301,1.4339574691425146e301,1.434378354810006e301,1.434799240477497e301,1.4352201261449883e301,1.4356410118124794e301,1.4360618974799705e301,1.436482783147462e301,1.436903668814953e301,1.4373245544824442e301,1.4377454401499356e301,1.4381663258174265e301,1.438587211484918e301,1.439008097152409e301,1.4394289828199002e301,1.4398498684873916e301,1.4402707541548825e301,1.440691639822374e301,1.441112525489865e301,1.4415334111573562e301,1.4419542968248476e301,1.4423751824923387e301,1.4427960681598299e301,1.443216953827321e301,1.4436378394948121e301,1.4440587251623035e301,1.4444796108297947e301,1.4449004964972858e301,1.445321382164777e301,1.4457422678322681e301,1.4461631534997595e301,1.4465840391672507e301,1.447004924834742e301,1.447425810502233e301,1.447846696169724e301,1.4482675818372155e301,1.4486884675047066e301,1.449109353172198e301,1.449530238839689e301,1.44995112450718e301,1.4503720101746715e301,1.4507928958421626e301,1.451213781509654e301,1.4516346671771451e301,1.452055552844636e301,1.4524764385121274e301,1.4528973241796186e301,1.45331820984711e301,1.453739095514601e301,1.454159981182092e301,1.4545808668495834e301,1.4550017525170746e301,1.455422638184566e301,1.455843523852057e301,1.4562644095195482e301,1.4566852951870394e301,1.4571061808545305e301,1.457527066522022e301,1.457947952189513e301,1.4583688378570042e301,1.4587897235244954e301,1.4592106091919865e301,1.459631494859478e301,1.460052380526969e301,1.4604732661944602e301,1.4608941518619516e301,1.4613150375294425e301,1.4617359231969339e301,1.462156808864425e301,1.4625776945319162e301,1.4629985801994075e301,1.4634194658668984e301,1.4638403515343898e301,1.464261237201881e301,1.4646821228693721e301,1.4651030085368635e301,1.4655238942043547e301,1.4659447798718458e301,1.466365665539337e301,1.466786551206828e301,1.4672074368743195e301,1.4676283225418106e301,1.4680492082093018e301,1.468470093876793e301,1.468890979544284e301,1.4693118652117755e301,1.4697327508792666e301,1.470153636546758e301,1.470574522214249e301,1.47099540788174e301,1.4714162935492314e301,1.4718371792167226e301,1.472258064884214e301,1.4726789505517049e301,1.473099836219196e301,1.4735207218866874e301,1.4739416075541786e301,1.47436249322167e301,1.474783378889161e301,1.475204264556652e301,1.4756251502241434e301,1.4760460358916345e301,1.476466921559126e301,1.476887807226617e301,1.477308692894108e301,1.4777295785615994e301,1.4781504642290905e301,1.4785713498965816e301,1.478992235564073e301,1.4794131212315642e301,1.4798340068990553e301,1.4802548925665465e301,1.4806757782340376e301,1.481096663901529e301,1.4815175495690202e301,1.4819384352365113e301,1.4823593209040025e301,1.4827802065714936e301,1.483201092238985e301,1.4836219779064761e301,1.4840428635739675e301,1.4844637492414584e301,1.4848846349089496e301,1.485305520576441e301,1.485726406243932e301,1.4861472919114235e301,1.4865681775789144e301,1.4869890632464055e301,1.487409948913897e301,1.487830834581388e301,1.4882517202488795e301,1.4886726059163706e301,1.4890934915838615e301,1.489514377251353e301,1.489935262918844e301,1.4903561485863354e301,1.4907770342538266e301,1.4911979199213175e301,1.4916188055888089e301,1.4920396912563e301,1.4924605769237914e301,1.4928814625912826e301,1.4933023482587737e301,1.4937232339262649e301,1.494144119593756e301,1.4945650052612474e301,1.4949858909287385e301,1.4954067765962297e301,1.4958276622637208e301,1.496248547931212e301,1.4966694335987034e301,1.4970903192661945e301,1.4975112049336857e301,1.497932090601177e301,1.498352976268668e301,1.4987738619361593e301,1.4991947476036505e301,1.4996156332711416e301,1.500036518938633e301,1.500457404606124e301,1.5008782902736153e301,1.5012991759411065e301,1.5017200616085976e301,1.502140947276089e301,1.5025618329435801e301,1.5029827186110713e301,1.5034036042785624e301,1.5038244899460536e301,1.504245375613545e301,1.504666261281036e301,1.5050871469485273e301,1.5055080326160184e301,1.5059289182835095e301,1.506349803951001e301,1.506770689618492e301,1.5071915752859835e301,1.5076124609534744e301,1.5080333466209655e301,1.508454232288457e301,1.508875117955948e301,1.5092960036234394e301,1.5097168892909303e301,1.5101377749584215e301,1.510558660625913e301,1.510979546293404e301,1.5114004319608954e301,1.5118213176283866e301,1.5122422032958775e301,1.5126630889633689e301,1.51308397463086e301,1.5135048602983514e301,1.5139257459658425e301,1.5143466316333334e301,1.5147675173008248e301,1.515188402968316e301,1.5156092886358074e301,1.5160301743032985e301,1.5164510599707897e301,1.5168719456382808e301,1.517292831305772e301,1.5177137169732633e301,1.5181346026407545e301,1.5185554883082456e301,1.5189763739757368e301,1.519397259643228e301,1.5198181453107193e301,1.5202390309782105e301,1.5206599166457016e301,1.521080802313193e301,1.521501687980684e301,1.5219225736481753e301,1.5223434593156664e301,1.5227643449831576e301,1.523185230650649e301,1.5236061163181399e301,1.5240270019856313e301,1.5244478876531224e301,1.5248687733206136e301,1.525289658988105e301,1.525710544655596e301,1.5261314303230872e301,1.5265523159905784e301,1.5269732016580695e301,1.527394087325561e301,1.527814972993052e301,1.5282358586605432e301,1.5286567443280344e301,1.5290776299955255e301,1.529498515663017e301,1.529919401330508e301,1.5303402869979994e301,1.5307611726654903e301,1.5311820583329815e301,1.5316029440004729e301,1.532023829667964e301,1.5324447153354554e301,1.5328656010029463e301,1.5332864866704374e301,1.5337073723379288e301,1.53412825800542e301,1.5345491436729114e301,1.5349700293404025e301,1.5353909150078934e301,1.5358118006753848e301,1.536232686342876e301,1.5366535720103673e301,1.5370744576778585e301,1.5374953433453494e301,1.5379162290128408e301,1.538337114680332e301,1.5387580003478233e301,1.5391788860153145e301,1.5395997716828056e301,1.5400206573502968e301,1.540441543017788e301,1.5408624286852793e301,1.5412833143527704e301,1.5417042000202616e301,1.5421250856877527e301,1.5425459713552439e301,1.5429668570227353e301,1.5433877426902264e301,1.5438086283577176e301,1.544229514025209e301,1.5446503996926998e301,1.5450712853601912e301,1.5454921710276824e301,1.5459130566951735e301,1.546333942362665e301,1.5467548280301558e301,1.5471757136976472e301,1.5475965993651384e301,1.5480174850326295e301,1.548438370700121e301,1.548859256367612e301,1.5492801420351032e301,1.5497010277025943e301,1.5501219133700855e301,1.5505427990375769e301,1.550963684705068e301,1.551384570372559e301,1.5518054560400503e301,1.5522263417075415e301,1.5526472273750328e301,1.553068113042524e301,1.5534889987100154e301,1.5539098843775063e301,1.5543307700449974e301,1.5547516557124888e301,1.55517254137998e301,1.5555934270474713e301,1.5560143127149623e301,1.5564351983824534e301,1.5568560840499448e301,1.557276969717436e301,1.5576978553849273e301,1.5581187410524185e301,1.5585396267199094e301,1.5589605123874008e301,1.559381398054892e301,1.559802283722383e301,1.5602231693898744e301,1.5606440550573653e301,1.5610649407248567e301,1.5614858263923479e301,1.561906712059839e301,1.5623275977273304e301,1.5627484833948216e301,1.5631693690623127e301,1.5635902547298039e301,1.564011140397295e301,1.5644320260647864e301,1.5648529117322775e301,1.5652737973997687e301,1.5656946830672598e301,1.566115568734751e301,1.5665364544022424e301,1.5669573400697335e301,1.567378225737225e301,1.5677991114047158e301,1.568219997072207e301,1.5686408827396983e301,1.5690617684071895e301,1.5694826540746809e301,1.5699035397421718e301,1.570324425409663e301,1.5707453110771543e301,1.5711661967446455e301,1.5715870824121368e301,1.572007968079628e301,1.572428853747119e301,1.5728497394146103e301,1.5732706250821014e301,1.5736915107495928e301,1.574112396417084e301,1.5745332820845749e301,1.5749541677520663e301,1.5753750534195574e301,1.5757959390870488e301,1.57621682475454e301,1.576637710422031e301,1.5770585960895222e301,1.5774794817570134e301,1.5779003674245048e301,1.578321253091996e301,1.578742138759487e301,1.5791630244269782e301,1.5795839100944694e301,1.5800047957619607e301,1.580425681429452e301,1.580846567096943e301,1.5812674527644344e301,1.5816883384319253e301,1.5821092240994167e301,1.5825301097669079e301,1.582950995434399e301,1.5833718811018904e301,1.5837927667693813e301,1.5842136524368727e301,1.5846345381043638e301,1.585055423771855e301,1.5854763094393464e301,1.5858971951068375e301,1.5863180807743287e301,1.5867389664418198e301,1.587159852109311e301,1.5875807377768023e301,1.5880016234442935e301,1.5884225091117846e301,1.5888433947792758e301,1.589264280446767e301,1.5896851661142583e301,1.5901060517817495e301,1.5905269374492408e301,1.5909478231167318e301,1.591368708784223e301,1.5917895944517143e301,1.5922104801192054e301,1.5926313657866968e301,1.5930522514541877e301,1.5934731371216789e301,1.5938940227891703e301,1.5943149084566614e301,1.5947357941241528e301,1.595156679791644e301,1.5955775654591348e301,1.5959984511266262e301,1.5964193367941174e301,1.5968402224616088e301,1.5972611081291e301,1.5976819937965908e301,1.5981028794640822e301,1.5985237651315734e301,1.5989446507990647e301,1.599365536466556e301,1.599786422134047e301,1.6002073078015382e301,1.6006281934690293e301,1.6010490791365207e301,1.6014699648040119e301,1.601890850471503e301,1.6023117361389942e301,1.6027326218064853e301,1.6031535074739767e301,1.6035743931414678e301,1.603995278808959e301,1.6044161644764504e301,1.6048370501439413e301,1.6052579358114327e301,1.6056788214789238e301,1.606099707146415e301,1.6065205928139063e301,1.6069414784813972e301,1.6073623641488886e301,1.6077832498163798e301,1.608204135483871e301,1.6086250211513623e301,1.6090459068188535e301,1.6094667924863446e301,1.6098876781538358e301,1.610308563821327e301,1.6107294494888183e301,1.6111503351563094e301,1.6115712208238006e301,1.6119921064912917e301,1.6124129921587829e301,1.6128338778262743e301,1.6132547634937654e301,1.6136756491612568e301,1.6140965348287477e301,1.6145174204962389e301,1.6149383061637302e301,1.6153591918312214e301,1.6157800774987128e301,1.6162009631662037e301,1.6166218488336948e301,1.6170427345011862e301,1.6174636201686774e301,1.6178845058361687e301,1.61830539150366e301,1.6187262771711508e301,1.6191471628386422e301,1.6195680485061333e301,1.6199889341736247e301,1.6204098198411159e301,1.620830705508607e301,1.6212515911760982e301,1.6216724768435893e301,1.6220933625110807e301,1.6225142481785718e301,1.622935133846063e301,1.6233560195135541e301,1.6237769051810453e301,1.6241977908485367e301,1.6246186765160278e301,1.625039562183519e301,1.6254604478510103e301,1.6258813335185013e301,1.6263022191859926e301,1.6267231048534838e301,1.627143990520975e301,1.6275648761884663e301,1.6279857618559572e301,1.6284066475234486e301,1.6288275331909398e301,1.629248418858431e301,1.6296693045259223e301,1.6300901901934134e301,1.6305110758609046e301,1.6309319615283957e301,1.6313528471958869e301,1.6317737328633783e301,1.6321946185308694e301,1.6326155041983603e301,1.6330363898658517e301,1.6334572755333429e301,1.6338781612008342e301,1.6342990468683254e301,1.6347199325358168e301,1.6351408182033077e301,1.6355617038707988e301,1.6359825895382902e301,1.6364034752057814e301,1.6368243608732727e301,1.6372452465407637e301,1.6376661322082548e301,1.6380870178757462e301,1.6385079035432373e301,1.6389287892107285e301,1.6393496748782199e301,1.6397705605457108e301,1.6401914462132022e301,1.6406123318806933e301,1.6410332175481845e301,1.6414541032156758e301,1.6418749888831667e301,1.6422958745506581e301,1.6427167602181493e301,1.6431376458856404e301,1.6435585315531318e301,1.643979417220623e301,1.644400302888114e301,1.6448211885556053e301,1.6452420742230964e301,1.6456629598905878e301,1.646083845558079e301,1.64650473122557e301,1.6469256168930612e301,1.6473465025605524e301,1.6477673882280438e301,1.648188273895535e301,1.6486091595630263e301,1.6490300452305172e301,1.6494509308980084e301,1.6498718165654997e301,1.650292702232991e301,1.6507135879004823e301,1.6511344735679732e301,1.6515553592354643e301,1.6519762449029557e301,1.6523971305704469e301,1.6528180162379382e301,1.6532389019054294e301,1.6536597875729203e301,1.6540806732404117e301,1.6545015589079028e301,1.6549224445753942e301,1.6553433302428854e301,1.6557642159103763e301,1.6561851015778677e301,1.6566059872453588e301,1.6570268729128502e301,1.6574477585803413e301,1.6578686442478325e301,1.6582895299153236e301,1.6587104155828148e301,1.6591313012503062e301,1.6595521869177973e301,1.6599730725852885e301,1.6603939582527796e301,1.6608148439202708e301,1.6612357295877621e301,1.6616566152552533e301,1.6620775009227444e301,1.6624983865902358e301,1.6629192722577267e301,1.663340157925218e301,1.6637610435927093e301,1.6641819292602004e301,1.6646028149276918e301,1.6650237005951827e301,1.665444586262674e301,1.6658654719301652e301,1.6662863575976564e301,1.6667072432651478e301,1.667128128932639e301,1.66754901460013e301,1.6679699002676212e301,1.6683907859351124e301,1.6688116716026037e301,1.669232557270095e301,1.669653442937586e301,1.6700743286050772e301,1.6704952142725683e301,1.6709160999400597e301,1.6713369856075509e301,1.6717578712750422e301,1.6721787569425332e301,1.6725996426100243e301,1.6730205282775157e301,1.6734414139450068e301,1.6738622996124982e301,1.6742831852799891e301,1.6747040709474803e301,1.6751249566149717e301,1.6755458422824628e301,1.6759667279499542e301,1.6763876136174453e301,1.6768084992849362e301,1.6772293849524276e301,1.6776502706199188e301,1.6780711562874102e301,1.6784920419549013e301,1.6789129276223922e301,1.6793338132898836e301,1.6797546989573748e301,1.6801755846248661e301,1.6805964702923573e301,1.6810173559598484e301,1.6814382416273396e301,1.6818591272948307e301,1.682280012962322e301,1.6827008986298133e301,1.6831217842973044e301],"cosine":[0.08963273688692398,0.07220567585712773,-0.9895726807480308,0.8193323123501793,0.9585081809656882,0.9994750897656259,0.3426108761221838,0.6219035590110039,0.837475865956305,0.9672402108001771,0.9979009101240122,-0.3806191180989816,-0.7652355751255792,-0.8503664647509315,-0.22647192657889348,0.9952791136811678,0.40273165211852563,-0.7439785203898401,0.8711072507775419,0.18658290354929347,0.9916124528526636,0.43217352248797414,-0.710258173875107,-0.890400207539686,0.17117097087555194,0.9894662549258407,0.4462462487459943,-0.6991444153283376,-0.8974209329432885,0.13916257209756755,0.9811610282599421,0.48966571702722883,-0.6756144327637656,-0.9112424838311215,0.10700807760291153,0.9743872366151898,0.5176556847144145,-0.6513751763386968,-0.9303736402062301,0.07474124383806659,0.966590513304952,0.5451022068680231,-0.626452092920673,-0.9360021567265145,0.008933347112803627,0.9624568098987651,0.5856250591734317,-0.6141656837899365,-0.9414009974590419,-0.006731238812969693,0.9580869392739376,0.5982502596611868,-0.6017285709602564,-0.9568323243197328,-0.02239417303039401,0.9428585804155649,0.6107286617696048,-0.5337665339001016,-0.9612675570543786,-0.07147499345669428,0.9253539267522136,0.6488867503276268,-0.5204549711364198,-0.9654669143887114,-0.08709027648259032,0.9193020611310877,0.6607257286774236,-0.5070156993662694,-0.9770985426554585,-0.10268418933565784,0.8988609737571717,0.6724025784454274,-0.46406518416570147,-0.9863712123436895,-0.15142075929946347,0.8918861465476204,0.7311902207811835,-0.4501329586078238,-0.9888274929390773,-0.16688567981107497,0.8685944408222611,0.7417861573639207,-0.40572716813522186,-0.9860159023177704,-0.21511555055061682,0.8607259336026493,0.7522000747933735,-0.3913604787768538,-0.9998403906187243,-0.23038655420461457,0.8526462218410152,0.762429417707172,-0.31408658013622937,-0.9999975752107695,-0.24560102570967937,0.8443572881333931,0.7724716760337581,-0.2991766227959318,-0.9999093808480856,-0.26075523174564413,0.8358611664146036,0.8222420316639518,-0.28419325363064507,-0.9995758291717655,-0.2758454537802552,0.7877110473761562,0.8310561937262044,-0.26914014925274815,-0.9989970020285696,-0.35422416290256414,0.7779646053265088,0.8396664315938462,-0.25402100338621525,-0.9981730414508414,-0.4301865745765433,0.7680272666723061,0.8480706324905861,-0.23883952596025132,-0.989782650620731,-0.44427441823601016,0.7125597795114823,0.8562667341973924,-0.1578919704985043,-0.9874277563416689,-0.4582532460387769,0.7014822340529725,0.8642527255585187,-0.14240496834644528,-0.9848305674843719,-0.4721196278663716,0.6902325591997323,0.9028179619144623,-0.1268830229273751,-0.9819917213458724,-0.4858701611922653,0.628167080687209,0.9094431241188418,-0.11132994300927157,-0.9789119145209575,-0.4995014719167818,0.6159021002873817,0.9406559445663049,-0.09574954499988174,-0.9755919027312393,-0.5692870096905072,0.6034859901075126,0.9458563370807196,-0.08014565201025368,-0.9541435073063479,-0.582095241554355,0.5909217968071269,0.950824635793039,0.06927827793207149,-0.9493373975187384,-0.5947606391499344,0.5782126033823193,0.9555596215843621,0.08489625812556308,-0.9442983397479907,-0.6072800946476864,0.5089126052546731,0.9600601325860076,0.10049340651346265,-0.8847188049870753,-0.6707709300739468,0.43614112110692177,0.9444547192470539,0.04935763855647883,-0.90745059982261,-0.6318689278413135,0.48169826555230444,0.9683533706931124,0.13160990503831319,-0.8696835642374265,-0.6936739513031035,0.407738959144939,0.9993616134252065,0.08061962443082979,-0.8938440712834484,-0.6558376082284886,0.4540111592395157,0.9962161929394463,0.16259723397059453,-0.8537947656068268,-0.802699240356656,0.3789366185245793,0.9999903008548371,0.11180248553081228,-0.8793602723407068,-0.7710713137502238,0.42587846004795554,0.9984497139545289,0.1934249805488065,-0.8370680032836078,-0.8209866967448414,0.349762367533111,0.9996375398160036,0.39968002854467294,-0.8640134182345509,-0.7906386919166287,0.3973277790399632,0.9997032985224664,0.35216391726972646,-0.8195196938822614,-0.8384683891816557,0.32024483947220683,0.9983036765288451,0.42819754044156616,-0.8478185712575301,-0.8094300914234138,0.24097738831688184,0.9999757163026713,0.3813087942613734,-0.8011670603312213,-0.8551271601204169,0.16006613894145796,0.9959900201241396,0.45629479444205046,-0.7490504848319555,-0.827427069301432,0.21045785428166122,0.9992666999285373,0.41007943269108643,-0.691824351700204,-0.8709466596773209,0.1290670911119193,0.9926988413584463,0.4839442142717528,-0.6298790221082003,-0.9085251923507501,0.17973176470426744,0.9975769452698481,0.43844759538596556,-0.668866584411369,-0.8859113616781649,0.09794136935485089,0.9593393909396002,0.5111186631867243,-0.6052404826021095,-0.9211676234692135,0.01548287875490467,0.9725473163569613,0.4663854401861356,-0.6452523526705126,-0.9501402513041989,0.06671952225849626,0.9500271479878846,0.5377914706070138,-0.5800079249898484,-0.9726316118931291,-0.01584535061610135,0.9647807111338599,0.4938655472706564,-0.6210048328540018,-0.9594416499804959,0.03543219275408097,0.9397824933031802,0.6691360287462114,-0.5542061139666375,-0.9794326170790006,-0.04715802844117622,0.9083736624246886,0.630160544710767,-0.5961478228838442,-0.9678013969856224,0.004110088041063077,0.9286154815836591,0.6920860668983366,-0.5278603729260043,-0.9852723502993598,-0.21081223748181913,0.8948293103691151,0.6541735920140782,-0.5707057188710267,-0.9752112875791047,-0.16042397057612062,0.916537072782173,0.7143568516518818,-0.5009965591059369,-0.9901450801013909,-0.24132920572318414,0.8804067209391911,0.7696672120958545,-0.427869911675776,-0.9816640492646312,-0.19126392493760472,0.9035591213495195,0.7359265251672565,-0.3518246011952809,-0.9940460241055077,-0.2716093194879105,0.7904166773809509,0.7892884207915116,-0.2733793615875297,-0.9871533489277027,-0.22191616179218698,0.8207796650697176,0.7567739177160958,-0.32233025951955435,-0.9969713536990574,-0.3016228601164733,0.7708404312457737,0.8081349760619304,-0.24311408203476037,-0.9904010404135333,-0.2523505972571636,0.8024829886553022,0.7768785684584584,-0.29251956423592307,-0.9961846212913191,-0.33134037057968146,0.7505076376120561,0.8261883808048986,-0.21261019622423924,-0.9855852507125555,-0.2825373612127442,0.7833987089016234,0.8698624486554795,-0.26242177328939414,-0.9998846456444784,-0.48201592042580255,0.7294382522625235,0.8434309163621252,-0.04899556082709571,-0.9798021504946399,-0.43646731302281455,0.5654547277955173,0.8147814653793841,-0.10013271873546475,-0.9887649461122288,-0.6195618449591948,0.6069920399354982,0.783989433416063,-0.15100656375833943,-0.995127647032256,-0.5785083374377468,0.6469331822368295,0.8990445208692783,-0.20148331605733782,-0.9507122912258366,-0.5359335619278032,0.4680119794212143,0.875416501065425,-0.2514302400045246,-0.9653576657916124,-0.491949474712289,0.5126990038094282,0.9588185144874236,-0.03763289856707917,-0.9774644983530983,-0.6674978823908035,0.5560378149883333,0.9974472687756637,-0.08881025035816537,-0.9870009523132639,-0.6284491055672158,0.5979144475371407,0.9924752632083335,-0.139754063266271,-0.9294303324505326,-0.5877477345719824,0.4117565993314023,0.9848934061495284,-0.19033037346274623,-0.9471242790102234,-0.5455007993107691,0.45793100355523236,0.9747216351449854,0.28865214093830494,-0.9623276307875354,-0.7128140782823149,0.5029012146299479,0.9999612036074953,0.23919153503199636,-0.975000408458265,-0.6759232934781755,0.5465489771422442,0.9981948791074006,0.1891019417769922,-0.9045004816626592,-0.6372550745343638,0.3538851286564427,0.9938036625917612,0.39563889446034567,-0.9251735537993877,-0.5969111049009612,0.40136568424241204,0.9867991013740445,0.34803831246401246,-0.943413753633132,-0.755332572515266,0.4477907930394501,0.9985504220187842,0.29952251540636043,-0.6805117495650588,-0.7207445712168496,0.49303837377870585,0.9999967111776539,0.2502190823112755,-0.7171794115706941,-0.6842612720063403,0.29462470531970675,0.9988133701533992,0.45237126224477264,-0.7519611507464825,-0.8249456856429891,0.34322505732175085,0.9950035107055285,0.4060584793137609,-0.7847655036804589,-0.7948864855828409,0.3909228513851043,0.993220461142018,0.3586779092376699,-0.6332937327195867,-0.9066761153949034,0.43759265953831944,0.9978736874648141,0.3103541458034321,-0.6721342048813118,-0.8838597966399495,0.23420791870138116,0.9999028663900813,0.5073281322251761,-0.7092072068378752,-0.963709606372224,0.2837373171195416,0.9993026619101216,0.4624849199512183,-0.7444152499837302,-0.9487576623287477,0.33252058887064767,0.9839922403737679,0.41642553937275545,-0.5835901211301738,-0.9313108282946914,0.12215325765397497,0.9918341405581824,0.3692711100255132,-0.6244509596948464,-0.9114149831423181,-0.0939181764521773,0.9970678751721388,0.5602938059031989,-0.6636697177675134,-0.9785344473522112,-0.042758132789184944,0.9573490621049807,0.5170961680061659,-0.7011432641790222,-0.966683371983815,0.008514349320153972,0.9709019792688034,0.4725387539461037,-0.5315959949457916,-0.9522902684826469,-0.20650483501603456,0.9819017748863225,0.6508360502719349,-0.5743168264874293,-0.9353929855125797,-0.15607512036446003,0.990319523467843,0.6110603999645091,-0.6155274122005292,-0.9895186691164378,-0.10523498451573797,0.8117969052989298,0.5696778815009206,-0.4318465803176553,-0.9808149763377934,-0.05411811866529687,0.840664134016726,0.5267973159586681,-0.47751542428443194,-0.9695320944108157,-0.2673679164391312,0.8673207196834295,0.6970995810558375,-0.5219285751488512,-0.9995205609309219,-0.21761948992333513,0.8916965651062547,0.6594286621935119,-0.5649692423647691,-0.9966191600368034,-0.16729880274633688,0.7736386428327611,0.8055329942968125,-0.37452096157962805,-0.9910970106991961,-0.11653818014116683,0.8051031638279881,0.7740978397775227,-0.42156066828469074,-0.9829686341764315,-0.3271816138979407,0.8344505542802177,0.892024504907653,-0.4674918226865823,-0.9994978497277056,-0.2783097315595958,0.8616036411519126,0.8676813764916357,-0.51219364243811,-0.9998080516188017,-0.22870599514394657,0.7324439502789668,0.8410565594345926,-0.053394134329855944,-0.9974891194332753,-0.4325004078628717,0.7663822694382838,0.8122200673893394,-0.10451395006749864,-0.9925471511252492,-0.3857111664839968,0.7983052800220827,0.9185765027964405,-0.1553589318636063,-0.9955522407070825,-0.3379076440439772,0.6502854211736843,0.8971073295404517,-0.20579537577965892,-0.9990728278817027,-0.28921554654170567,0.6883745113965984,0.8732790880146446,0.0092393534184267,-0.9999662143525894,-0.4881101816565388,0.7246534252737021,0.9575582969489259,-0.04203375201038218,-0.9783847730281557,-0.4427268533888392,0.7590267623642982,0.9415232085288486,-0.09319632385266927,-0.9111164010558181,-0.39617931339570317,0.6014389893913321,0.9230122541188283,-0.14411382302279666,-0.9310465082184913,-0.3485899648958092,0.6416032929465683,0.9020741108433905,0.07183657791774961,-0.9485282993291839,-0.5418041870803227,0.6800804115682285,0.9737281517071367,0.020611423003977246,-0.9635158035911466,-0.4980048955280229,0.7167691643310596,0.9607745592979798,-0.030667932508099655,-0.8835204289300341,-0.6726708636436767,0.5502319885497975,0.9452944767993379,0.1847752347508101,-0.9063700384068486,-0.6338546773651274,0.5923138658198241,0.9273286112372647,0.1341518532815138,-0.9268362220349247,-0.7852146674051754,0.6328381715478317,0.9860762513288853,0.08317570088950545,-0.8245356716750062,-0.7524388999875631,0.6716983414458567,0.9762549960799354,0.03198082644459756,-0.8524567551346283,-0.7176844900201828,0.24951704776388434,0.9638665427838092,0.2459524223911166,-0.8781361852087404,-0.8505274493159893,0.2988306908682813,0.9489434685983573,0.19594060023645496,-0.9015064342708478,-0.8224482994486333,0.3473585171839153,0.9945541311445696,0.1454135250707364,-0.7874876692825572,-0.7922064075961135,0.1377969987679848,0.9879037601930623,0.09450406485286081,-0.8180473005103167,-0.7598812990115847,0.18838994088634076,0.9786555591519275,0.3061642790692335,-0.8464557627906184,-0.8817910862327916,0.23848748550067062,0.9617884417044185,0.2569603060641757,-0.8726383521279056,-0.8564539299113813,0.2879578941622917,0.974559390157538,0.20708062026012725,-0.7473488811921649,-0.8288646090784514,0.0755058974681951,0.984767599394658,0.15665638721578354,-0.7804271176482387,-0.7990956736834001,0.1265234282280586,0.9923862255123679,0.3651744811540405,-0.8114531126505584,-0.909593808922981,0.1772082480679541,0.9427565728442618,0.5566402847717603,-0.8403452790378787,-0.8870980911590886,0.22742707421746106,0.9586123390995399,0.5133213591618133,-0.7042768468765116,-0.8622696258072996,0.2770478493012624,0.9995386091911685,0.6857010432720639,-0.5353213049121328,-0.9509368554046785,0.06416032772760956,0.9827263927822737,0.4227514213509083,-0.7732656155942071,-0.9951988700384767,-0.151723242562302,0.9200245082278419,0.607568069552281,-0.6189925693252888,-0.9142605088827033,-0.3605219016273947,0.9965103800854358,0.3277376726515532,-0.4358148718741935,-0.9799468772772886,-0.04971970979937509,0.9553122373206373,0.5230485588119402,-0.23228624054151736,-0.8679737847272947,-0.263121326909885,0.869504565527216,0.22927886341607895,-0.5256803658955571,-0.9543940354037972,-0.46423615650497796,0.9805580677759085,0.4330309497484544,-0.3306562070300283,-0.9962476336667387,-0.1629549154418584,0.9155083114286351,0.6165621010101403,-0.6100200969843059,-0.9188089467010778,-0.37110690097194077,0.8077077213757597,0.3384614750912849,-0.4255504343987552,-0.9821496999685445,-0.5619295742364737,0.9518885632450604,0.5327081006752625,-0.22120914899206529,-0.8735656688225344,-0.2740767031734742,0.8638308458052607,0.9671873386649972,-0.5159714286606059,-0.957727761878215,-0.47427946298563983,0.7354354401350153,0.8386658874477397,-0.3199013940883461,-0.9971675298908799,-0.17416550964957447,0.9108736910813484,0.9360899577382515,-0.10889315400758603,-0.923238534025014,-0.38164389660600007,0.8009500631384309,0.9898021079760622,-0.4152309507902569,-0.98422547886264,-0.5713009327839703,0.9483417597345797,0.8951527358631932,-0.21010344342353293,-0.9992527538093248,-0.28499662685271154,0.8580453871592301,0.9700142961609016,-0.5061957490853317,-0.9609376036011342,-0.48426142009777384,0.7276814857582151,0.8448059903921092,-0.30910520101100525,-0.9979584397197633,-0.6609130058140781,0.9061212466870228,0.9400300429536397,-0.09758058949782578,-0.9275486978750631,-0.3921315255398614,0.7940887997812713,0.9913581881346357,-0.4048577559026241,-0.9861739454517979,-0.5805983919657955,0.6449753588494198,0.900164532039428,-0.19897056038984445,-0.833359883063466,-0.29587968542507725,0.8521489379543018,0.9727157796079028,0.016207820394932234,-0.9646852858354664,-0.4941807366474463,0.7198334037559859,0.9998448174403014,-0.29826902431562763,-0.8855748191380745,-0.6694053851444713,0.9012515929875673,0.9438485326667276,-0.0862554026672326,-0.7651113015134203,-0.40256843116953345,0.7871248188277922,0.992786033352476,0.12978602553365817,-0.9284809112323421,-0.5898207491297277,0.6362422426559651,0.9050598894281512,-0.18781193996040477,-0.8270196929458805,-0.7495306314316259,0.8461422609125913,0.9752914395615983,0.027578430809416618,-0.6869397303803909,-0.5040361295434544,0.7118922092995769,0.999980506217062,-0.28739426569182747,-0.8802347508237623,-0.6778111750252408,0.5443994387771207,0.9475449329452436,-0.07491905846024274,-0.7577386661144049,-0.8199349591633868,0.7800590210883116,0.99408545893383,0.14105459020505884,-0.9241970975987384,-0.5989668113382007,0.14215798538050362,0.994205890627784,-0.17662902553382245,-0.8205725255292932,-0.7570108364715797,-0.07380751740780532,0.9777409428532046,0.038945473877120905,-0.6786302679245342,-0.5138263239632983,0.24276242605047726,0.9999868447322483,0.25270136448187164,-0.8747808216946064,-0.6861292881440709,0.02869261676177407,0.975537079544953,-0.06357302326453011,-0.7502680151100276,-0.8263925660305519,0.3408150354131962,0.9952562967943827,0.15230490907264047,-0.5907204821901423,-0.608035395522613,0.13089114446394845,0.9929190598704356,0.36107076852196285,-0.8140192147727526,-0.7643931200529617,-0.08514487619582284,0.9800639726326535,0.050307479239388116,-0.670233022754792,-0.8850565283732302,0.23171379153368898,0.9998638321659555,0.26368904992448,-0.4951494409238647,-0.6943586485298793,0.01732229095494055,0.9729737688623259,-0.05221876472132498,-0.7427003148497877,-0.832743276719327,-0.19787809619618546,0.9962983954829977,0.6441231564551846,-0.5815055495934147,-0.617025328636361,0.11960737241356723,0.9915037922692509,0.7934108342200947,-0.8073606083652439,-0.7716765272568444,-0.09647122125713352,0.9404096489938402,0.5624162802328257,-0.6617490810781979,-0.8902933016351344,0.22063518419307168,0.9996114844302015,0.7269164941004511,-0.48523633250582837,-0.7024981916919963,0.005949724461561487,0.970284601314765,0.8574724108282138,-0.735036544236776,-0.8389862697476094,-0.20901356527747036,0.9972116202013098,0.6527810692479515,-0.5722153976354304,-0.936296808886844,0.1083081288166791,0.9899602708930328,0.8002822036550202,-0.3826739198227563,-0.7788601159542354,-0.10778508749748077,0.9364814582315741,0.571783844584044,-0.6531795403162195,-0.8954149129806528,-0.3188451410385381,0.9992298341668683,0.7346797177978881,-0.4752604574176972,-0.9701571632890432,-0.005423611645235655,0.967469924753577,0.863268780193768,-0.7272776946010506,-0.8451207375668757,-0.22012199787237063,0.890532767518505,0.661354542992624,-0.5628512280232009,-0.9823587522637954,-0.4245415053514779,0.9882886954005674,0.807050054359598,-0.3721417021330169,-0.9914352183497845,-0.11908501143677819,0.9324321309863179,0.9150593293097947,-0.6445255089628049,-0.9963434841607649,-0.3296040709346335,0.8330344534265726,0.7423479086291043,-0.4652231060666781,-0.9547262142957786,-0.01679624619277176,0.9645301032650085,0.8689534833399979,-0.2641965141105697,-0.9998550117113087,-0.23120195707421368,0.88530130669616,0.9549821616967752,-0.5534142520381273,-0.9801683679190428,-0.4348113963151879,0.9864892820147967,0.8137135108935033,-0.36156134687838054,-0.9147115062300007,-0.13036953139841487,0.9282621910498206,0.9195871580425242,-0.15282487133285472,-0.995307344200042,-0.34032036562681606,0.8266887076279128,0.7499200746922743,-0.4551255768121038,-0.9512811136064386,-0.5343795043065027,0.9614655171231513,0.8745257849347303,-0.2532103751904284,-0.8628335924714017,-0.24225200965943955,0.514277609280395,0.9582943930599328,-0.5439056903793182,-0.9778511960679448,-0.4450250432146395,0.3180284309058391,0.8202717113200882,-0.3509342226572463,-0.9100563698826414,-0.6270170621358937,0.5993880326231755,0.9239960356170123,-0.14157543173216253,-0.9941424584642576,-0.35099263893254234,0.4134323724441838,0.9845731810514564,-0.44496917579748635,-0.9477129620574961,-0.5439580391409179,0.2081709578747236,0.8799849641852455,-0.2421914828035339,-0.8570287945179955,-0.2532707262729924,0.5044904615843642,0.9614826663762717,-0.028104348183551866,-0.9754075364431293,-0.45518112488617996,0.3072251900754506,0.9980827034473293,-0.34026170411770884,-0.9052835152110149,-0.6358362576180869,0.5902455284445866,0.9282853917326742,-0.13030767895535023,-0.7928861202344114,-0.3616195103635577,0.4030499815790872,0.9864995003049271,-0.43475521678156376,-0.9440222211992845,-0.5534662114890537,0.19703349936823297,0.8853303149315135,0.297766809801577,-0.8511131375047791,-0.7194680986749415,0.49463805664305505,0.9645465692337647,0.49589778662250805,-0.9728377051387699,-0.46527832761237936,0.29638220881167227,0.9987220855461283,0.1984549310964543,-0.9003935595971564,-0.6445732059107299,0.08428641396502476,0.9324546715493585,0.4043766252394683,-0.7859043830542777,-0.3721996053044664,0.3926154550771251,0.9882982131024578,0.5914154347114866,-0.9402093684394058,-0.5629027914423542,0.18587055403022537,0.9979919032206145,0.3086048022157614,-0.8450873866384514,-0.7273205104479789,0.4847216688924674,0.96748570530805,0.5057419422208393,-0.7105029664501221,-0.4753153452919629,0.2855008896843081,0.999232280163569,0.67926281419216,-0.8953871355704341,-0.6532267768652447,0.07294828060051507,0.9365033357591172,0.4147522723359087,-0.7788209869549065,-0.9942981328383306,0.38213014267334117,0.989969086775542,0.6005481193562707,-0.6258867943968993,-0.9106564425103225,0.17468356581874844,0.9972069627698548,0.3194028757398859,-0.8389523213666574,-0.9781536684825768,-0.040920083975756076,0.9702996944136963,0.515520678691389,-0.7024537920991091,-0.999974755529813,0.27458264022227163,0.9996132213045577,0.6875655829794782,-0.8902648907257297,-0.9517272045803987,0.061600711172883744,0.9822485279537851,0.42507427007160486,-0.7716368481932976,-0.9954466120059648,-0.1542577420179281,0.9915119051920197,0.609603121430401,-0.6169762342833878,-0.9152965266154179,0.16347398180186237,0.9962930308230847,0.7656657739078138,-0.8327087352771649,-0.9804546917332007,-0.05228106411898869,0.9545509767614355,0.5252327311273788,-0.6943137533950541,-0.9998292686968188,0.26362887273151786,0.9998648596932976,0.6957794132450403,-0.5234969011264414,-0.9551565843852203,0.05024517352181821,0.9800515760145765,0.8338357841114549,-0.764352896057794,-0.9964663273838594,-0.16548478844806153,0.9144735281867118,0.6185792696441575,-0.6079858665768345,-0.9912447983848222,0.1522432519704577,0.8061929671826654,0.7729319043969155,-0.4232281580021783,-0.9826288904406968,-0.0636352815610715,0.6602661925458131,0.5348768432477959,-0.6860839032746184,-0.9995544511652443,-0.27654228407986603,0.8625359603376265,0.703903242507041,-0.5137728035643675,-0.9584624120275081,0.038883136517717805,0.7336952009316904,0.8400599778980316,-0.7569700727478771,-0.997357147068992,-0.17669042896024026,0.5705936039843861,0.627475402907787,-0.598916854206324,-0.9896790121461342,0.14099282905069493,0.7994118692566281,0.7800980539929985,-0.4128964457244613,-0.9846759833664113,-0.07498126760237787,0.6516818912277179,0.8962930268539931,-0.6777653062918202,-0.9991503384835022,-0.287454017886129,0.8567254075397861,0.7119360199255554,-0.5039822480602459,-0.9669680882654119,0.027516069871691248,0.7259199328236445,0.8461755075884546,0.2220492822703048,-0.9981189558313572,-0.18787321407367713,0.5612166966734229,0.6362903704816926,-0.09502781840974021,-0.9879852081728004,-0.39448951755307105,0.7925273651804196,0.7871632957346678,0.12104690189536817,-0.9317162252455661,-0.08631755460803582,0.6430132930432644,0.9012786222471215,-0.19645649596470063,-0.9986169829246925,-0.29832856871515084,0.46347289125052443,0.7198767064384681,0.018772120025158285,-0.9640065605222704,-0.4964087480373041,0.7180507649519442,0.8521815821219383,0.2331241478164406,-0.9987516551288714,-0.19903169726399433,0.5517671944207951,0.9446927468696541,-0.0836999876189083,-0.986163605563079,-0.40491479833675975,0.35971814772910704,0.7941267157132409,0.13232859642898795,-0.927525382796614,-0.09764267619777055,0.6342615192997536,0.9061476347420692,0.34217792710494765,-0.997954453479841,-0.3091645299135164,0.45336503874931927,0.9758548288576503,0.030142054431059405,-0.960920335847551,-0.8754824857503909,0.7100887152153547,0.8580774245960257,0.244168858105237,-0.8790148118398835,-0.6796945981712285,0.5422463195459185,0.9483615494413445,0.44679388407992576,-0.9842144399463373,-0.8214004363903714,0.34908303716797395,0.800987413190963,0.14359317389036938,-0.9232145623579555,-0.9247499287156836,0.6254277020634768,0.9108994345185185,0.3528424105318974,-0.8191039978022806,-0.7586841210795833,0.4431985422185692,0.9782758395534594,0.041508089878330025,-0.9577098134530047,-0.8809219369869062,0.24027365854414823,0.8638622723670837,0.25518198447267904,-0.8735353041387318,-0.962023974261072,0.5326553036004559,0.9519076788071827,0.45693982931993915,-0.9821379634525725,-0.8278340107014391,0.3384027717444329,0.9955025364409388,0.15483917717506682,-0.9187843215462118,-0.929018460345682,0.12834808884317742,0.9155334069179436,0.36346125281103175,-0.812526868444033,-0.7660441910460363,0.4329747167228954,0.9433684701186276,0.555111039519213,-0.9543754086286386,-0.8862474385191349,0.2292181402350058,0.8500740131924273,0.2661621023402199,-0.8679428022148103,-0.9650662262410993,0.5229953872090133,0.9723783418647722,0.4670266681212981,-0.7409804944970613,-0.8341605023792368,0.3276787329805412,0.8995320098884648,0.1660651515812561,-0.914235233425362,-0.9331668208522375,0.11706070043836117,0.9911669222206628,0.37403308036554794,-0.8058446364739684,-0.9885977188950448,0.42269488474258005,0.9395344496350351,0.5645350551879921,-0.950917552688997,-0.8914583014786319,0.2181329719214756,0.8440292120339229,0.27710779139905417,-0.8622380294738078,-0.9679836442188386,0.003385060467795477,0.9696608411733688,0.4770530957233306,-0.7332951966277546,-0.8403790930744583,0.31691230806055953,0.8945054144879974,0.6547217944620329,-0.9095678864326152,-0.9371944736333728,0.10575816990614578,0.7775799112821161,0.3845565257001289,-0.3803031867384271,-0.9902463573545719,0.41236037600250025,0.9355788977555175,0.573886046676197,-0.17273742390975014,-0.896553851825771,0.2070195875009307,0.8378752333477825,0.7364172233432612,-0.47300236445653726,-0.9707758508181551,-0.007988245907357302,0.9668179121534484,0.48701781517972115,-0.2726818762936097,-0.84648897839509,-0.22262305793711518,0.998154862527631,0.6632760736365366,-0.05962815851120609,-0.9411008977009915,-0.4268622010143427,0.9878940843983074,0.8085618059338772,-0.7921683356431074,-0.9917669046917714,-0.6111684666474598,0.9315023261417192,0.9160907086375687,-0.6425624714915736,-0.996121085249174,0.19587942452057608,0.8316128731682764,0.9808415818517218,-0.4629513293744796,-0.9539601153327617,-0.019360518980669483,0.6928901914797646,0.4969195375262748,-0.2617220817210292,-0.867252755456517,-0.23369639824015498,0.9987808788047318,0.6717445562049189,-0.04827138609920402,-0.7400479168939342,-0.43711952473263105,0.9860658752360395,0.8152016020793114,-0.7851760358498867,-0.5782855925779565,-0.6201307949065606,0.9273052621095244,0.9205917645710187,-0.6338064246182396,-0.9950559009149319,-0.7741842629963093,0.8252429415491231,0.309724150535465,-0.45284041024950455,-0.9504872272838163,-0.8920862049101766,0.6846448443928386,0.5067569819476481,-0.2507284326687663,-0.8615343346503629,-0.2447395092636704,0.5120763789453454,0.6801261467453906,-0.8948624055812621,-0.7323509923175185,-0.4473203058238263,0.3155958508244969,0.8217359496286888,-0.7780821713511665,-0.5689695819869712,-0.6290129075214235,0.9229882485608465,0.924973739397577,-0.6249683931199032,-0.993862003330517,-0.7813329455050302,0.818766262458706,0.985018695173153,-0.44267091495714117,-0.9468913910666735,-0.8971676404229147,0.6763109365898213,0.516528875943026,-0.23970235119592304,-0.8557044719802428,-0.25575096255051594,0.5022744049333963,0.6884197610758881,-0.02554057899858742,-0.7245593361020043,-0.45746322478850393,0.30478352634004385,0.8281640033459677,-0.7708876597580632,-0.5595799735970285,-0.6378136555660615,0.9185518439134028,0.9292360662966039,-0.6160495202205362,-0.36847030719683077,-0.7883805604226836,0.8121836736734909,0.9869162604377668,-0.43244415894990873,-0.9431730718127561,-0.9021330248044125,0.6678895460848817,0.5262339554907236,0.7449902514627097,-0.8497639215551186,-0.9737592316281276,0.4924074603292642,0.6966243263943153,0.87090269614776,-0.7166739561198083,-0.46754696961186665,0.2939317772582005,0.8344849317445096,0.20096795659042943,-0.5501179819801062,-0.6465319006392214,0.08173057321316715,0.9333781939242525,0.4067209415370096,-0.35787354376803177,-0.7953261961206654,0.8054960266696575,0.9886861653373575,0.5934815709591474,-0.9393327504970079,-0.9069817157683807,0.6593817622083196,0.9978261693888016,0.7525288179568029,-0.8437134518017212,-0.9762845620205604,0.482476821449695,0.7047387814173137,0.8764357675333004,-0.7086958723667774,-0.4775702359334569,0.2830420072829128,0.8406979171946339,0.9594164259077126,-0.5405848310711543,-0.6551665150116385,0.07039018390496435,0.9373995864847859,0.4170846076983047,-0.3472304884003308,-0.8021689541616672,0.7987041865129586,0.9903281809298005,0.6025968410467194,-0.9353709238756795,-0.9117130861231486,0.6507886854656578,0.997012131991038,0.7599700427538933,-0.8375538453651525,-0.9786836072877497,0.47248377285046617,0.7127620765175424,0.8818554695130587,-0.7006261168302493,-0.48753172721587984,0.2721156250362348,0.8468021560293812,0.9625615251415589,-0.5309817540097749,-0.6637163817719126,0.05904068943056705,0.9412997237998844,0.4273943228047851,-0.33654251780256084,-0.8089079494158921,0.791809031746821,0.9918420948158088,0.6116341635557848,-0.1263879974916007,-0.9163265238527926,0.6421114273952888,0.9960691282991675,0.7673129633108433,-0.8312858990076484,-0.9809560571065137,0.4624296071602261,0.7206931738594502,0.8871611010334998,-0.692465733355562,-0.9997785903075296,0.2611540438761199,0.8527968586484691,0.9655821143631755,-0.5213099929807127,-0.6721803949709825,0.04768355787867283,0.9450781013759314,0.43764875326610847,-0.32581101449346495,-0.8155423101755482,-0.16801357295412428,0.9932277111664077,0.620592369483525,-0.11509787320049891,-0.9208214321963025,0.6333511104246942,0.3889773893991072,0.7745566298004423,-0.8249104235055147,-0.9831016175291435,0.45231562491328914,0.18198561210659053,0.8923519757964202,-0.6842157775110296,-0.9994746131160912,0.2501586817135989,0.861235401414911,0.9684778028509398,-0.5115707990531747,-0.6805574597651844,0.03632025832585654,0.7319501357420215,0.9993793179244593,-0.31503736662286363,-0.8220711782676071,-0.17921418606404385,0.5684855205828667,0.6294703000610712,-0.10379286067916405,-0.9251972297247741,0.6245088677252552,0.37847474560069977,0.7817001052342697,0.11229838589084336,-0.9851200110214271,0.4421431343814077,0.17079060740711996,0.8974274223477224,-0.6758773164514011,-0.9990413511017591,0.23913096082936922,0.8553997926850124,0.9712482160394869,-0.5017654320190013,-0.9663111751523532,0.02495226064654108,0.7241536050456807,0.999715329756492,-0.3042229677920935,-0.82849370916481,-0.19039161732021617,0.5590921369111777,0.6382668069033944,-0.09247442226242927,-0.9294533504166186,-0.39684491475439937,0.3679231450405971,0.7887424655838967,0.12359233490858378,-0.9870109764985489,0.43191345140454346,0.1595735104672455,0.9023867841642692,-0.6674514287798222,-0.9984788603081804,0.22807230768981904,-0.0562276136498317,0.9738929955681602,-0.491895160229708,-0.9633214943164383,0.013581035322865127,0.7162634030650996,0.9999220256282635,-0.2933692168737415,-0.8348090720949106,-0.2015444208907998,0.5496264331155422,0.9792584154331453,-0.08114402202180472,-0.9335892437307791,-0.40725850211831194,0.35732395259769834,0.7956827999004124,0.13487029691382782,-0.9887742693588615,0.4216278992206604,0.14833577224967512,0.9072294197388071,0.3445866745165294,-0.997787213495105,0.21698415276250985,-0.06757913705632126,0.976411799327367,-0.48196126043242116,-0.9602072051641658,0.002208053254472107,0.7082805504198638,0.9999993788030874,-0.28247751783069647,-0.8777890910088932,-0.959582214385113,0.5400896336110905,0.9768907059179701,-0.06980312557609569,-0.9376043746779446,-0.9976365152770483,0.346678539307045,0.8025202104322566,0.14613081307080186,-0.9904096615155259,-0.989104900748193,0.13707884638712364,0.9119547026629466,0.3552409861539487,-0.996966500128973,-0.7603524153330046,-0.07892191891334976,0.9788043015028307,-0.4719650176047272,-0.9569687105375052,-0.8821328089961731,-0.2912373240821095,0.9999473792751153,-0.2715492795345429,-0.8722840407780005,-0.9627208808061385,0.5304829720093812,0.9743966328711514,-0.058453199901820865,-0.9414982238897524,-0.9983534674867239,0.3359882821824742,0.9033451871341918,0.15737242680040128,-0.991916941426015,-0.987366659744408,0.12580418899428106,0.9165620217081905,0.36584934638112027,-0.9960168263713425,-0.7676902232726036,-0.09025449200051532,0.9810701926177364,0.5572424619447727,-0.9536064293447495,-0.8874325192442795,-0.3020986238420915,0.999766033770631,-0.2605859155833193,-0.8666661581787363,-0.9657350166018356,0.520807690958829,0.9717765189079794,-0.047095713143454745,-0.7392558002379183,-0.9989412798968131,0.3252545640384974,0.8984086542911738,0.1685936839686031,-0.9932959141194776,-0.985500700115196,0.11451325847946021,0.9210507809049971,0.376410382977124,-0.9949383150651571,-0.9260409023522213,-0.10157539041794886,0.9832091795727619,0.566650116832149,-0.9501207965063287,-0.8926174376261643,-0.3129208463042939,0.9994553657471802,-0.2495888441186654,-0.8609361698998502,-0.9686242318853502,-0.5096540623055684,0.9690307029474874,-0.03573213442351911,-0.7315490256634753,-0.9993998764721448,0.31447877331143015,0.8933559097883175,0.17979313307456216,-0.9945464012219578,-0.9835072632276283,0.10320751535594752,0.7759647177035284,0.3869227298424832,-0.9937311057188559,-0.9216885180915463,-0.11288314977593235,0.9852209856839916,0.5759844739498412,-0.17021071863641946,-0.8976868934582043,-0.32370259158412135,0.9990154153905362,-0.23855948764238166,0.04545672249138909,-0.9713881529286444,-0.5194063260960103,0.9661595401686117,-0.024363933652547916,0.2590015037156534,-0.9997291978919755,0.30366230387979365,0.888187607212187,0.1909693254383668,-0.5586041065897847,-0.9813866069383144,0.09188842205308159,0.7687406158414354,0.39738502717587354,-0.3673758554581433,-0.9172169108558593,-0.12417630738432163,0.9871053507187058,0.5852443258727771,-0.1589925180120632,-0.9026402309921787,-0.3344424650328147,0.9984462396095022,0.7457748908594519,0.056815178790582344,-0.9740264222108389,-0.5290914032325863,0.9631634019642488,-0.012992581338950294,0.26996981801842557,-0.999929201557663,0.2928065548840127,0.8829044150971049,0.20212081538842985,0.4705178706630983,-0.9791390055600473,0.08055744272708387,0.7614170752411632,0.4077959216500167,-0.35677423767206096,-0.9126266590600013,-0.13545340244174953,0.9888620309290427,0.5944284748133388,-0.14775375126300214,-0.803498041304165,-0.34513907741785266,0.9977479120285495,0.7533034286633743,0.06816628588827389,-0.9765386984644593,-0.5387080409236137,0.960042675893214,-0.0016195483987961866,0.28090321097387067,-0.9999998615981766,-0.7071213421749734,0.8775070168386748,0.21324616044848996,0.480523000682538,-0.9767647498263209,0.06921604307166601,0.753995043223071,0.4181540665867374,-0.34612647014537967,-0.9079183564658174,-0.1467129762245845,0.5952743049187259,0.6035357327763001,-0.1364958721549944,-0.7966755520722295,-0.35579104510265297,0.9969205229782943,0.760734524572243,0.07950857548716884,-0.9789246567195801,-0.5482549952302425,0.9567977656301102,0.8824098429620865,0.2918002683171807,-0.9999411688734433,-0.7151174758389169,0.8719961106053836,0.2243439215242001,0.49046597371447204,-0.974264146853722,0.05786569012843822,0.7464754798476569,0.42845812213115986,0.6662287420015546,-0.9030926121053521,-0.15795357227562068,0.5860972200483352,0.9872732387446703,-0.12522033692603501,-0.7897500106403662,-0.3663969902255496,0.995964179483813,0.9300574362985617,0.09084058043054027,-0.6395290204678022,-0.5577310312273627,0.9534290909131109,0.829411410118261,0.30265958048366015,-0.9997531309755305,-0.7230211070670819,0.86637240924829,0.96588758436857,0.5003455036076659,-0.9716375201022048,-0.8545487858558876,0.7388593577913718,0.9989681802248378,0.6746671523137827,-0.8981500502020693,-0.16917373659247462,0.576844321871335,0.9854006768592246,-0.11392860409798733,-0.7827223128466342,-0.3769555408780229,0.38789280119141695,0.9258186262263579,0.10216083489201008,-0.6307443541371694,-0.5671349231633448,0.9499370874896663,0.823004288527098,0.3134797427910571,-0.9994357722276636,-0.7308312135027718,0.860636640208816,0.6817587110033574,0.510160312417432,-0.96888520933325,-0.860400403863647,0.7311476622208003,0.9994200888884429,0.6830182925521595,-0.8930913100901069,-0.1803720178156645,0.5675168072758568,0.9834006506537096,0.8239818583180912,-0.7755933677433022,-0.38746533128216004,0.37738502781705063,0.9214600589381601,0.11346787456515775,-0.6218780992688732,-0.5764654546185944,0.9463222070601379,0.81649070904067,0.3242593556212631,-0.4391234360941244,-0.7385467848869827,0.8547895454246507,0.6733942792591132,0.5199091305709342,-0.9660075705659155,-0.8661407266845439,0.7233413906652272,0.9997427197820147,0.6912810824734527,-0.8879170461315777,-0.9532891174041928,0.5581158828018734,0.9812734188370817,0.8303727784441223,-0.7683640974792605,-0.3979250019673219,0.36682843863901726,0.9169822982267775,0.12476023685293235,-0.6129314027376568,-0.5857214186628996,-0.7908058484394166,0.8098715142086119,0.3349970246013572,-0.428877090754273,-0.7461668231890823,0.8488318812337776,0.6649427420906899,0.5295906970314125,-0.9630049760307847,-0.871769011791845,-0.2705364252364699,0.48896361659420995,0.6994544532627892,-0.8826279276319257,-0.9566628293317031,-0.47103708118568266,0.9790192565726965,0.83665628754021,-0.7610354371807375,-0.4083331999459945,-0.6495420570568878,0.9123859233030204,0.9347893844059925,-0.6039054218236165,-0.5949016180115504,-0.7977158342711399,0.8031475602421975,0.34569136078397233,-0.41857526896910346,-0.7536903427359086,-0.06875341111156731,0.6564051927279421,0.5392037594612995,-0.21369920758094554,-0.8772845311512073,-0.28146797269623813,0.4790111436423684,0.70753734767191,-0.8772246387533488,-0.9599127942597036,-0.48103902663168563,0.9766384554427167,0.842831572816965,-0.75360833483034,-0.9977166994382991,-0.6581473468303474,0.9076715287207776,0.9387686976915679,-0.5948013240625043,-0.6040048651802113,-0.8045226333395378,0.7963197169035859,0.3563409808269593,-0.4082193033079352,-0.761116370339269,-0.9133297045950401,0.6477827355266411,0.5487470743842155,-0.2025749591060769,-0.8826865713148511,-0.29236311149037064,0.4689967092659372,0.7155287201559272,-0.8717078784263019,-0.9630385917961858,-0.4909787483407903,0.2683102807084863,0.8488978354840496,-0.7460837511444274,-0.9984202912263553,-0.666667503412772,0.9028397243001093,0.9426265786333633,-0.5856202870947036,-0.6130299826385254,-0.8112253651662065,0.7893888673933162,0.992338165841459,-0.3978105333437487,-0.7684439454218256,-0.9179020190146376,0.6390764858256236,0.5582194073458149,-0.1914245069964515,-0.8879744335138468,-0.3032204323023416,0.45892160885987443,0.7234275370085688,-0.8660783602590872,-0.9660398176105388,-0.5008549605823298,0.25733679932075487,0.854854290853505,-0.7384626594488415,-0.9989947345709885,-0.6751014246981949,0.8978911350483647,0.9463625282037417,-0.5763634985128985,-0.6219758029624309,-0.8178231627341295,0.7823559082360617,0.9936791546604439,-0.38735030547990806,-0.9255960294531811,-0.9223556002534171,0.6302875698025191,0.5676195330734659,-0.1802492935940831,-0.822669853961183,-0.31403853070748644,0.44878714566645816,0.7312327764958914,0.035268690021870754,-0.6813280554952935,-0.5106663858407637,0.2463300307018246,0.8607001684412511,-0.730746045553004,-0.508170770445795,-0.6834480197354248,0.8928264010793364,0.9499760631472286,-0.5670321557084548,-0.311283800116351,-0.8243151725998287,0.7752217491646636,0.994891608315216,-0.37683997277599973,-0.9212312806470032,-0.9266898722282502,0.6214171243280762,0.5769462356347439,-0.16905076444392755,-0.8161507887179574,-0.9857916008418329,0.4385946306067082,0.738943428988444,0.046632485950165364,-0.6729590899198772,-0.5204117549809283,0.2352913986078497,0.866434712066752,-0.7229349076223989,-0.4983427041094601,-0.691706208869164,0.021000933256029124,0.953466716043022,-0.557627465716535,-0.3004555671700466,-0.8307005550037596,0.7679873130024529,0.9959753699715203,-0.3662808947728109,-0.9167473680107492,-0.9309042742889941,0.6124662968191046,0.9919756777878086,-0.15783036810689766,-0.8095261520987416,-0.9876382256549616,0.4283453821108149,0.746558497091867,0.05799024983661714,-0.6645030752132339,-0.5300898074122024,0.22422233091661375,0.8720571799508299,0.2711029387571361,-0.48845017575738636,-0.6998749238796641,0.009628930668846628,0.9568340353654549,-0.5481506450599641,-0.289588469459916,-0.836978483978937,0.7606535355438818,0.9969302994417704,-0.35567443731646864,-0.07720405851149424,-0.934998261291013,0.6034362450900541,0.9904736257506463,-0.1465895559724876,-0.8027968010187194,-0.989357096714857,0.4180407259475963,0.7540769957759073,0.069340512522857,-0.6559611051844004,-0.9975166347766574,0.21312425944282948,0.8775668448116155,0.9772575539315811,-0.4784944650156486,-0.7079531081209038,-0.0017443174473166364,0.960077585542401,-0.5386029195918697,-0.27868391267529274,-0.8431481474577756,-0.216531441199147,0.9977562732031817,0.6585903125711128,-0.06585985793579824,-0.9389713036656939,0.5943281372032481,0.988843453193357,0.8048720206217413,-0.7959636059381819,-0.9909479916807636,0.40768199505300656,0.9337553210638918,0.9135691983318455,-0.6473342847609735,-0.9966510934548342,0.20199861975292957,0.882962993958625,0.9796060917071208,-0.4684768596831394,-0.7159397166572689,-0.013117339931163395,0.9631969470116176,0.9998990233938185,-0.2677433073509459,-0.849208747377133,-0.2276207686190255,0.9984531844137493,0.6671060339308773,-0.0545071382041804,-0.9428228874889483,0.5851431513177907,0.987085370983298,0.8115693438768401,0.16127431160475508,-0.9924107047659899,0.39727052935771673,0.9296243413347558,0.9181353833911431,-0.6386237298461847,-0.9956566325402434,0.1908468509793723,0.888244929384948,0.9818279147083079,-0.45839865556498904,-0.9524090980550607,-0.02448866565058254,0.9661917162750173,0.999672733464881,-0.25676806868462365,-0.8551594997815425,-0.2386806526589805,0.9990209429260685,0.675535463268497,-0.04314736782253433,-0.9465525145476887,-0.44172714075361574,0.9851996065332961,0.8181616883785895,0.1724881546677029,-0.9937450467645274,0.3868076756137912,0.9253731121097847,0.9225828050832909,-0.6298305671745549,-0.9945333806691724,0.17967039563448547,0.8223351344724211,0.9839227355361536,-0.44826115630494934,-0.9488807039998003,-0.03585682369294416,0.9690615059508608,0.9993171330856311,-0.24575961635399304,-0.8609996349246183,-0.24970966269223013,0.9994594752989955,0.9680471366122555,-0.03178201620877485,-0.9501597024042754,-0.4519019890220256,0.9831864037722313,0.8246482013888808,0.1836796859077841,-0.9949508450755248,0.3762947872204815,0.9210021832973105,0.9269108881219155,0.3905642297295295,-0.9932814831373767,0.1684706994238738,-0.1168093687420691,0.9858902832197537,-0.4380656732167638,-0.9452295695846007,-0.0472203435553662,0.6725236675085056,0.9988322682539675,-0.23471937433300133,-0.8530389500927482,-0.2607063720856312,0.4978323948819038,0.9651325006499334,-0.02041255350276466,-0.9536439844589194,-0.46201838251044464,0.2998942006695805,0.8310280438592034,0.1948474576692851,-0.9960279437256147,-0.6417558525481665,0.08795206248203198,0.9311190726574298,0.4010088171340879,-0.9919011018812863,0.1572492110594125,-0.12809710996211066,0.9877303032513391,-0.42781352511454546,-0.94145616709386,-0.05857775533492808,-0.3381646237169807,0.9982182016885058,-0.22364877070768052,-0.8470487302317813,-0.2716693583842182,0.4879365657511033,0.9620930221125442,-0.009040450376147698,-0.9570049100100401,-0.4720750126352197,0.28902513014565867,0.8373003905391774,0.20599002536984698,-0.996976203389089,-0.650436519269205,0.07661729574038714,0.9352068143494523,0.4114015329320826,-0.9903924154570585,0.14600738207185257,-0.1393682814644652,0.9894425576191981,-0.4175060381421845,-0.9375609846276926,-0.06992758991880674,-0.34884587818421925,0.9974750128204652,-0.2125492374914207,-0.8409489422600956,-0.28259720349520173,0.4779776206675224,0.958929094165096,0.0023328221578863433,-0.960242044312563,-0.4820705785432551,0.27811867341675234,0.875604752716226,0.21710594768732625,-0.9977955014059212,-0.659033050216214,0.06527261833830089,0.9391735844372183,0.42174103279680053,-0.9887556190174812,0.1347466666230613,-0.15062142529172956,0.9910268248384624,0.6066823799741858,-0.9335445260387911,-0.08126837917431044,-0.35948200846622447,0.9966027977833942,-0.20142221043973507,-0.8347403752022421,-0.29348849387140286,0.467956847848425,0.9556411260704746,0.01370579293488167,-0.6969569529356657,-0.49200378728028143,0.2671762412633937,0.8700545674473309,0.22819378674623383,-0.9984857317976324,-0.973365637679481,0.05391949774136912,0.9430188698079769,0.4320259792851578,-0.9869909242867293,-0.901388232486485,-0.1618550858184305,0.9924828999797579,0.6156841651369134,-0.9294073108672526,-0.9183684297813434,-0.37007163874994237,0.9956016694007352,-0.19026912886454092,-0.8284238321536488,-0.9819394274565709,-0.5610072223119134,0.9522295431365038,0.0250769908294156,-0.6887560410814906,-0.9996575053405377,0.2561992491196362,0.8643918381986446,0.23925210830372837,-0.9990468052810005,-0.9706952950830662,0.04255940250733849,0.7361902487716927,0.4422550420107017,-0.9850985595329775,-0.8964052242033911,-0.17306780993931392,0.9938105946957129,0.6246063098393393,-0.9251498742733738,-0.9228096903865431,-0.38061339923722326,0.9944717571712312,0.7777907856792264,-0.822000130176739,-0.984027669159731,-0.5703857581517591,0.948694786660931,0.03644494494539273,-0.6804660367164905,-0.9992952150195221,0.2451891168899643,0.8586172974599555,0.25027948193513944,-0.5071567097440727,-0.9678993903486423,0.03119380209614435,0.7284455733489946,0.45242689781569956,-0.9830787695388736,-0.8913062634097167,-0.1842581472573081,0.9950097372453204,0.6334476599772149,-0.9207727669684275,-0.7730924484091728,-0.39110592632200886,0.9932132072521733,0.7848887719762646,-0.8154701001952417,-0.9859886241451892,-0.5796905130063191,0.9450373138743443,0.04780818480630944,-0.6720880121758024,-0.9988036630812559,-0.7412057083886806,0.8527316921841798,0.26127448121899693,-0.4973219132354574,-0.9649782851342681,0.01982416667983206,0.7206066714640108,0.4625402309422933,-0.9809318155698746,-0.8860920096702317,-0.19542465027113656,0.5548319988571954,0.6422070718972928,-0.9162765551434254,-0.7658285324043222,-0.4015478627667184,0.9918261824404965,0.7918852307261848,-0.8088345868867088,-0.9878220387579605,-0.5889202832796565,0.9412575978810278,0.9045852940095879,0.33871840039954887,-0.9981829131093501,-0.748792316540996,0.8467357836907402,0.27223568392154285,0.5329391657113669,-0.9619323572930328,0.008451966952386113,0.7126745571005171,0.47259373320269604,0.7022736537888741,-0.8807631374631693,-0.20656587456255643,0.5453340788678117,0.6508834125452624,-0.07603050643370454,-0.75846555434739,-0.41193785787781134,0.9903108621517205,0.7987792569175756,0.13995101978426217,-0.6007504502975477,-0.5980738750752983,0.9373561275977648,0.9093750803576053,0.34939735380458514,-0.9974330453995414,-0.7562820663231659,0.8406303475670879,0.28316167218070093,0.5425281306822666,-0.9587620008241803,-0.8791746974081139,0.7046502562995826,0.48258610414840997,0.710324861319324,-0.8753203360929805,-0.21768037898319795,0.5357656183975802,0.6594755596123135,-0.06468535613433493,-0.7510044666600799,-0.4222745676805032,0.341862718431357,0.805569958788962,0.15120319115659944,-0.5916194813430773,-0.6071501043506703,0.9333334076905947,0.9140472365080516,0.3600311116894817,-0.9965541569493049,-0.7636739889152107,0.8344161735683778,0.9798419072871314,0.5520469181295257,-0.9554676258221431,-0.8845371380196201,0.6965348070268487,0.49251605123844305,0.7182841863520222,-0.8697643096011708,-0.22876672584098093,0.5261278551534933,0.6679824016803098,0.8509802541061354,-0.7434462344548496,-0.43255665509261226,0.33115268892012506,0.8122564579441574,0.16243580397533952,-0.5824119847621297,-0.6161477970702549,0.9291899585095335,0.9186011581045256,0.37061829854806083,-0.39418126115661556,-0.7709671281513705,0.8280940655153118,0.9820506001206851,0.5614942967714955,-0.9520496584234965,-0.8897851612905243,0.6883292590382654,0.5023822900065027,0.7261505993261232,-0.8640957766752301,-0.9670535361806076,0.5164220358070496,0.6764028383655537,0.856898369178769,-0.7357918354100705,-0.4427827900975153,0.32039982388693383,0.8188378894658865,0.1736474052707523,-0.5731291515700137,-0.625065789357457,0.10941613164020038,0.7798881408279199,0.3811575448982366,-0.38370346760779744,-0.7781605406437871,0.8216648411901618,0.627214183310096,0.5708690445634554,-0.9485085407518363,-0.8949180883744104,0.6800346737443023,0.44525165581015785,0.7339230826992159,-0.8583154705556686,-0.9698862892486105,0.5066494158329947,0.967751308863496,0.8627056420624731,-0.7280422596435625,-0.45295164991618847,0.3096055142448022,0.8910392794553679,0.18483654479100656,-0.5637721825270378,-0.6339029276451542,0.09810418645021894,0.7727190291434745,0.3916474874591614,-0.37317604094754014,-0.7852532959045344,0.8151293322309877,0.6183156736279624,0.5801699488556871,-0.9448447308605888,-0.8999352553128744,0.6716521240726521,0.43503927544221255,0.7416006310789438,-0.8524241389411705,-0.9725935848257605,0.49681125934692066,0.964823735408763,0.8684013215703376,-0.7201985095845191,-0.46306191917831285,0.29877115626772455,0.885819078214296,0.9546508996089721,-0.5543422879831896,-0.6426580688249139,0.08677955121068155,0.7654499641020167,0.4020867693275698,-0.3626003429277816,-0.7922444764659791,0.8084883840240628,0.6093371830925799,0.5893958065503346,-0.15392631023473094,-0.9048360131214095,0.6631826943294449,0.42477062153320944,0.749182251353056,-0.8464225438918765,-0.97517507271584,0.4869088389417501,0.9617713593186061,0.8739846709503662,-0.7122615998438409,-0.9999770827312587,0.2878981514100589,0.8804842938100902,0.957975256441289,-0.5448406877215736,-0.6513300803948576,0.07544369079467461,0.7580818859773406,0.41247404015329814,-0.35197774154449435,-0.799133177999458,-0.14053370963353015,0.600279873096688,0.5985454242570283,-0.14267874371283118,-0.9096197278733533,0.6546274800589896,0.41444702236211084,0.7566669628178697,-0.8403114617308097,-0.9776304189962056,0.4769434355231223,0.20926103685900724,0.8794549679807775,-0.7042325570828922,-0.9999894049992814,-0.7107389723131942,0.8750356163119607,0.961175696507997,-0.5352686108006276,-0.6599178406061532,-0.8452666737520591,0.7506157478508582,0.9980130942665886,-0.34130961086073164,-0.8059185094322556,-0.9403235647620466,0.5911449152285424,0.6076176184472528,-0.13141272129833587,-0.914285780781889,-0.36058009021983967,0.4040698133152017,0.7640537973051256,0.08462065367319724,-0.9799593060609825,-0.5525375264370502,0.19812615370680797,0.8848115050634258,-0.6961124198807005,-0.9998723758546472,-0.7186935148531435,0.8694737505215062,0.9642518058232659,-0.525627295395142,-0.9730951238528892,-0.8512891886819931,0.9434098545649727,0.4330871810887263,-0.3305973308288885,-0.9008779481494558,-0.9441328230302514,0.9926262591751079,0.6166112156074405,-0.12012970028259938,-0.7865931223006272,-0.992888965425125,0.9954907086931166,0.771341799307224,0.09594754054879034,-0.6355773226903818,0.4568288438364503,0.9518694439783402,0.8900535893153313,0.30754438803010553,-0.45488242558839703,0.2550613439911419,0.8637994158815464,0.9672031864837947,0.5047800562346872,-0.2529462107515855,0.04138342786061481,0.7353931672148679,0.9991879915157749,0.6784443729041654,-0.8191755646745286,-0.17422694046128137,0.5726467922955079,0.9845144329559844,0.820427860243687,-0.9232625020989759,-0.381701558549438,0.38315994163839157,0.9238677114236075,0.9241004173787757,-0.9842365139484947,-0.5713521332608043,0.17578094653742024,0.8200798032913922,0.9846209214112674,-0.9992503406095983,-0.734322687996975,-0.03980636510227031,0.6779972179201206,-0.5061419464493463,-0.967602892208103,-0.8630031038792219,0.9507086454560804,0.5042546836938427,-0.30904587090550617,-0.8907719868991578,-0.9513844840009018,0.9951264877319047,0.3069653308764518,-0.09751850241811297,-0.7723453422548597,-0.9953397465681232,0.993075623539429,0.09534183859810277,0.1185626174968237,-0.6178530421950374,0.4364778914640107,0.9446518206100334,-0.12073376300160604,0.32910730406535194,-0.43450930263253923,0.23300281454588528,0.8521162904702382,-0.3311715468335233,0.5242839033628411,-0.23087559441711447,0.01864737264009059,0.7197900982720274,0.9998459144931485,0.6949783939919638,-0.016460854483686102,-0.19657883222528763,0.5538523851187008,0.9802724918912533,0.8332199779902626,0.19872254614227716,-0.40262553662999767,0.3620518251532989,0.9149239891902785,-0.8081419011501693,0.40462634283933113,-0.5898711256901208,0.15334479129058726,0.806851938459354,-0.6627421077924857,0.5916355939820834,-0.7495719266939094,-0.06252287409261184,0.6611029025874735,-0.4863947224946221,-0.9616100282450238,-0.8742705061029279,-0.2754709537552198,0.48448281956288686,-0.28733451237903346,-0.8802051452107555,-0.9581439039668499,-0.47555556425244605,0.2852391904778245,-0.07485684902653462,-0.7576979550537918,0.6015574498453662,-0.6534334983150206,0.07267595189690826,0.14111635081046087,-0.599809087995357,0.41590110787460505,-0.8007985178847238,-0.14328098338250403,0.3504999418243259,-0.41391136699655356,0.2108237307490923,0.8399922848617039,-0.35254722954714246,0.5435164889351461,-0.20868552434289023,-0.004098330626620821,0.7038146139628377,-0.5453508310851893,0.7111528371502731,0.006285156273005722,-0.21882901520225242,0.5347714178191545,0.9755233633282971,0.8455809923858782,0.22096234346313287,-0.42334119851242463,0.3407563850811972,0.9055068904081002,0.9405236596812417,0.42532141089107933,-0.608084922102015,0.1308292963074015,0.7932066129523603,-0.6455382412800272,0.6098195500440411,-0.7644333410732338,-0.08520703409799747,0.6438665363149028,-0.46639584063406814,0.7658413839041809,-0.8850855656622928,-0.2972645128645875,0.46446028673397227,-0.2654744885847982,-0.8691828903089692,-0.964407585642055,-0.4954408442976054,0.2633654689192535,-0.052156465120434196,-0.7426585391735423,-0.9986953576488339,-0.6704819306638929,0.049972463065154495,0.16359707131437598,-0.5814547959322054,0.3951091393808418,-0.8142140041434556,-0.16575407098490813,0.37171123287603997,-0.39309927593699895,0.18853556793452658,-0.9199253113914246,-0.3737405062982978,0.5624678621195208,-0.1863874815469148,-0.026841913440014804,0.6874749799134248,-0.5642746497708051,0.7269593338127729,0.029027915125035907,-0.2409659772720944,0.5154137627825048,-0.7284592654285463,0.8575045079109019,0.24308781610476923,-0.44383782602925914,0.31928463956353503,0.8956212874312507,0.948007410232932,0.44579642002643866,-0.6259840987802121,0.10824611097889078,0.7791508867854207,0.9942418917873745,0.6276879888855176,-0.7788992419223654,-0.10784710846106137,0.626297037101802,-0.4461556481771743,0.7802688628040185,0.11002094954894277,-0.3189042689795449,0.4441974447534675,-0.2434771097767054,0.8964140823620032,0.32097617788955485,-0.5150697860241682,0.24135548354179037,-0.029429095751332904,-0.7272348759236741,0.5169430123148752,-0.6871834594162332,0.027243118760833854,0.1859931476096621,-0.5627996624135205,0.6887705303856996,-0.8272082206356711,-0.18814139835913193,0.3927302026172776,-0.37208379751325144,-0.9192237608477345,-0.9286054340340328,-0.39474041180427105,0.5811282175815987,-0.16399300291167204,-0.8131761062693316,-0.9866402268044943,-0.5829065159123106,0.742389705786599,0.051755655096323495,-0.6691561514304968,0.49578943555107374,-0.7438530533418213,0.8689843554051672,0.26508751647153406,-0.4938890926650521,0.29764769796121127,-0.8700644192957214,0.9550006670589775,0.4660407765903332,-0.2955592498637248,0.08560691971868849,0.7646920323125485,0.9964219988567696,0.6452316654763116,-0.08342788916972073,-0.1304313833341022,0.6084034953086829,0.9913141286342589,0.7942926349633915,0.13259924371092624,-0.34037902581145096,0.4237047775023507,-0.221353757275375,0.9062630920793545,0.34243448499800766,-0.5344322335275983,0.21922062218862348,-0.006686499932879405,0.9759144328537623,0.5362793092233709,-0.7035294432945859,0.004499679019415415,0.2082929920918519,-0.5438533395009246,0.7050818839331757,-0.839774444226519,-0.21043138242735085,0.41354597595079123,-0.35087580501617033,0.8409597566030589,-0.9368051014248393,-0.4155360808315432,0.5994879005579532,-0.14151367521500888,-0.7997278435497353,-0.9900904440196506,-0.6012367894864938,0.7574359694836954,0.07445661698147235,-0.6520808600423026,0.4759085896418836,-0.7588619758505355,0.8800145952598623,0.2869500620416458,-0.473984125219371,0.27585675510665386,-0.8810511298704627,0.9614998118874554,0.486044006266036,-0.27375409432102954,0.0629234359175835,0.7498375304640846,0.9980865627634654,0.6624415028163915,-0.06074076520851534,-0.1529481737397623,0.5901951689538735,0.9880663826746301,0.8079054445611116,0.15510893176670904,-0.3616776724413696,0.4029928877719079,-0.19911587757951058,0.9156432063475246,0.3637156184213996,-0.5535181687859783,0.19697233731307182,0.016059555443198013,0.9806238353372481,0.5553381382201943,-0.7195114249784222,-0.018246088830731515,0.23048506694627924,-0.5246256299158019,0.7210284320620423,-0.8519061732222785,-0.23261249047662175,0.43414778291201706,-0.32948627134231856,0.8530493793656879,-0.9445200711018503,-0.43611675381740594,0.6175374118514181,-0.1189611291352016,-0.7858658061219979,-0.9930283939831267,-0.619255986512449,0.7720903400514773,0.09711905542991812,-0.6346681856684783,-0.9951659835721333,-0.7734782674222261,0.8905895204906509,0.30866414125644687,-0.4538339210413965,0.2539230855116764,-0.8915819895240942,0.9675014820972235,0.5057957594945217,-0.25180729994283085,0.040207395883077326,-0.9680521481801263,0.9992347222714176,0.6793085966322849,-0.03802221431551168,-0.17538582961676955,0.5716814789234714,0.9843074167013269,0.821100248405718,0.1775383673297351,-0.3827891890687974,0.38207249177790853,0.923416615047925,0.9245495719479152,0.38480856742046204,-0.5723177168432779,0.17462214005314972,0.038797301695215315,0.9848258685393771,0.5741096383739431,-0.7351211354799111,-0.040982416256687214,0.25255789011768,0.9991144592746221,0.7366019241175907,-0.8635971307342992,-0.254673246125844,0.45452496424139405,-0.3079262633166473,0.8646976391561211,-0.9517463513829554,-0.4564717824368987,0.6352674127459194,-0.09634703323330789,0.9524151899380057,-0.9954525566160625,-0.6369547839585341,0.7863452354006707,0.11973124502290693,-0.6169271375292419,-0.9926748291765094,-0.7876943656694784,0.9007036596904332,0.3302185193729404,-0.4334489057339385,-0.9435428786063783,-0.9016515496487988,0.9730025724577224,0.5252858168292709,-0.22973022187764788,0.017470552767084355,-0.9735049591694438,-0.5271454112322915,0.6958242199840995,-0.015283990941728253,-0.19773274184761383,-0.9998993072031568,-0.6973931810725107,0.8338702195795867,0.19987594553563875,-0.403702652713246,0.3609544136160952,-0.8350752827049479,0.9329775807768366,0.4057024186214939,-0.5908211509186014,0.15218159427576858,-0.9337624739723791,0.9885183583517001,0.5925840974155498,-0.7503504984222461,-0.06369753960995457,0.6602193384418761,0.9978990045271205,0.7517943024622359,-0.8748412679266286,-0.27660223526357497,0.48345283330060573,0.9606814780098728,0.8758985092299677,-0.958480203431201,-0.47659063511219263,0.2841108786271687,-0.07368308791591877,0.9591015127605143,-0.997361677670286,-0.6543240245660557,0.07150200242552737,0.1422814863401613,0.9975180421903151,-0.9896700703827966,-0.8015029152626628,-0.14444575139978208,0.3516020442765837,-0.4128396263897702,-0.9357645510268046,-0.911254600310553,-0.35364842577525396,0.5445040942237538,-0.20753428268205004,-0.8381623069014683,-0.9784540841440713,-0.5463370337552245,0.7119798277807929,0.007462140283385035,-0.21997734826503945,-0.9999634007583148,-0.7135137338849712,0.8462087509711385,0.22211010904653652,-0.4244072428657318,-0.9747781450526225,-0.8473719959369908,0.9409228722297134,0.4263863616628797,-0.609018897438769,0.12966231059365677,-0.941661136843014,0.9916993943006644,0.6107519567633547,-0.7651916342183184,-0.08637970621290493,-0.9919782043493063,0.9961672424224565,0.7665977066444928,-0.8856327671456454,-0.2983881119536271,0.4634176106511246,0.9541177847020829,0.8866461943197714,-0.9647181431892438,-0.49646290246157,0.26222982794057115,0.8675145744486439,0.9652916018308522,-0.9987547693772542,-0.6713547215871832,0.04879688740131155,0.16475811201309482,0.9988614811002631,-0.9861532618363693,-0.8148967717355416,-0.16691468632194298,0.37280365225132955,0.9857882436001358,-0.9275020641083848,-0.9203861729447173,-0.3748319648881859,0.5634406482488603,-0.18523096641068995,-0.8255399690250014,-0.9828969624544599,-0.5652459845561311,0.7277670612013554,0.030204410638900284,-0.685028227267147,-0.9995101188492601,-0.7292651186868715,0.8581094586933212,0.24422935403072904,-0.444892247087246,-0.9694498695036889,-0.8592302836432331,0.948381335457238,0.44684969478831055,-0.6269015409916301,-0.894119916279192,-0.9490725895143198,0.9943673305360825,0.6286038164686629,-0.7796368641475707,-0.10901718043954775,-0.9945967347063875,0.9939200689646458,0.7810044774659297,-0.895966044930081,-0.32001960430539184,-0.9936769109264905,0.9470604361951132,0.8969351336334489,-0.9704569431819826,-0.5160783026851798,0.24021310100936474,0.8559766028241115,0.970982254431596,-0.9996311109591182,-0.6880380634346421,0.02606652514079463,0.7249218451628477,0.9996881146730591,-0.9821262231142769,-0.8278690051817753,-0.1892972605200471,0.39381237370393124,0.9817122574310801,-0.9187596928155843,-0.9290415429267432,-0.395821568041373,0.5820856812375739,0.9178940883932691,-0.8124905013912087,-0.9868312953802497,-0.5838624802497483,0.7431777520196162,0.05293105340148191,-0.6682810249046979,-0.9985396960015142,-0.7446391857999157,0.8695661853865981,0.2662222361147192,-0.4928653096460587,-0.9636200060207518,-0.8706440104120164,0.9553491114923006,0.4670818303838126,-0.6444598291975453,-0.8837028451066025,-0.955992997342185,0.9965207866826853,0.6461304400792254,-0.7936787143289245,-0.7625200474912788,-0.9967006662822203,0.9911586468286525,0.7950071609439952,-0.9058357548998716,-0.34148552030585305,-0.9908661204694459,0.9395130839215631,0.9067600037314126,-0.975693634186436,-0.5354266868847838,-0.9387618114967919,0.843995753698357,0.9761705262509552,-0.9999902490016508,-0.7043654182407798,0.003322676206130525,0.7090669602866977,0.9999975152131213,-0.9775910377838047,-0.8404129038404171,-0.21158189337553662,0.541027376588438,0.977128338837171,0.8415960523284741,-0.9372162320166684,-0.41660637533167594,0.6004295463542297,0.9086309026178198,0.9379766536462072,-0.9902550473196157,-0.6021768887654482,0.758203926830439,0.7977037821097823,0.9905572332282646,-0.9970526343064245,-0.7596279807678672,0.8805730034047305,0.28807737630446684,0.9968824735359679,-0.9572915709425327,-0.8816072708450226,0.961822595246597,0.48707230045571964,0.9566570093681855,-0.8728285510302882,-0.9624187797463507,0.9981586485543209,0.6633227594181269,-0.05956588478621504,-0.74760768351274,-0.9982889105143884,0.987884404758827,0.8085985121686662,0.15627159100546786,-0.5874763172526856,-0.9875426614300693,0.9314796328392373,0.9161157212808887,0.36481176461366827,-0.5544980443147391,-0.9306818423642899,0.8315782258956307,0.9808537329061426,0.5563165854149577,-0.7203283383236452,-0.8303616421229847,0.6928452081357472,0.9997895226383428,0.7218434904137896,-0.8525219775685413,-0.23375705494415586,0.521758895591993,0.972038859512221,0.8536629886802943,-0.9449060106761321,-0.4371756328161882,0.3263083828531971,0.8988975963012751,0.9456195998335746,-0.9931664468424756,-0.6201797343308172,0.7728378111751163,0.7837811580120452,0.9934192920855303,-0.9950497031613853,-0.7742237484721403,0.891124217881709,0.632065054237016,0.9948299975574398,-0.9504678385659047,-0.8921143926126925,0.967798437375881,0.5068107620467539,0.9497858415496592,-0.8615026603491133,-0.9683466120629824,0.9992800687304283,0.6801718792756108,0.8603902186451307,-0.7323085115050142,-0.9993606456542196,0.9840990368296819,0.8217714990509244,0.17869655781668,-0.5689182783591855,-0.9837082533474578,0.9229642394107421,0.9249974456860047,0.38589467836023184,-0.3789616772114573,-0.9221203436579427,0.8187304441752852,0.9850294513322585,0.575072952424497,-0.7359185645577725,-0.817472842945429,0.6762649817537248,0.9990642445629171,0.7373974580949778,-0.8641899611992064,-0.6746524003476904,0.5022204594645807,0.9664464527243343,0.8652882445818952,-0.9521069002567152,-0.4575186980762658,0.3047241092912996,0.8886992054018211,0.9527732877350271,-0.9955639876070188,-0.6378617023743675,0.09299827637080973,0.7694530099319702,0.9957673613637663,-0.9925319388717554,-0.788418937144254,0.9012143696782452,0.6142762202105555,0.9922628021087704,-0.9431523394517896,-0.902159939389059,0.9732735460128973,0.43041501527225695,0.9424232598550829,-0.849731033015496,-0.9737734272648326,0.9998844669944877,0.6966690820114102,0.8485760558910557,-0.7166304471740297,-0.9999153171919536,0.9798045015693875,0.8345193059611197,0.7151035056586325,-0.5500658843341457,-0.9793648801228825,0.9139713094529551,0.9334005815922872,0.40677793236104626,-0.3578152901882237,-0.913081745049241,0.805459055907641,0.9886955210359711,0.5935317799085985,-0.14885605257374837,-0.8041610878964089,0.659334859656919,0.9978220562416593,0.7525699004604375,-0.8754108177830171,-0.6576890983176286,0.4824221772836474,0.9603540119534679,0.8764658051909695,-0.9588151750584705,-0.4805054735508635,0.28298217318157104,0.8780410065098031,0.959434016072502,-0.9974464291390791,-0.6552136443448441,0.07032795389836018,0.7547267511731427,0.9976002261850765,-0.9895006441146801,-0.8022062022730763,-0.14561031930815407,0.596169563107425,0.9891822154425096,-0.9353488585984656,-0.9117387136644703,0.978245088367095,0.40977347337955283,0.9345730736429987,-0.8375197596035033,-0.9786964175481037,0.9999715306342218,0.2042424862414329,0.836322844637302,-0.7005816022624815,-0.9999526381436428,0.97500302094644,0.8468353372553388,0.6990194487635815,-0.5309288893006698,-0.9745147889933289,0.9045054958574802,0.941320781264272,0.5290744440283964,-0.33648377153744946,-0.9035707230584926,-0.9420566225225473,0.9918500452133444,0.6116835173732829,-0.12632611290260803,-0.7904332644034471,-0.9921263021200195,0.996063600375851,0.7673529673734476,-0.8861787417116087,-0.6403855116308566,-0.9958673727606817,0.9537646893943619,0.8871898873002472,-0.9650273642575786,-0.46043413682288986,-0.9531051403572783,0.8669285141176465,0.9655983386224545,-0.9988127974739485,-0.6722265824446347,-0.8658364421460608,0.7396100010193841,0.9989169382354652,-0.9859573872650926,-0.8155784104048317,-0.7381364018133559,0.5777544512106206,0.9855898314369487,-0.9270614334832303,-0.920845759434753,-0.37592290420205704,0.38891991698626693,0.9262393445557952,-0.8248751581576209,-0.9831130357851895,-0.5662165362740802,0.1819242688885385,0.82363692462676,-0.6841702803528605,-0.9994725891996357,-0.7300699616527948,0.858713220687954,0.6825737231199307,-0.5115171946328296,-0.969160489368789,-0.8598318346835363,0.9487539468349981,0.5096368669836007,-0.3149781580674375,-0.8935921986352182,-0.9494427584323675,0.9944913917312328,0.6295187732112273,-0.10373081280802057,-0.776296475165549,-0.9947182359902288,0.9937897867807107,0.7817390101579658,0.112360375672855,-0.622750593066234,-0.9935440709179884,0.9466818943256109,0.897454942329695,-0.9707402537021336,-0.44012457405074545,-0.9459750923582326,0.8553674777666902,0.9712630659989144,-0.9996623856603015,-0.23694637408822578,-0.8542325947181963,0.7241105807925774,0.9997168162554908,-0.9819040015842465,-0.8285286428339113,-0.7226006114811208,0.5590404123959217,0.9814875087714563,-0.9182943519734326,-0.9294763647654211,-0.5572258667733279,0.36786513560570666,0.9174263844182368,-0.8118037709238329,-0.9870209968425452,-0.5848176357293201,0.1595119249376142,0.8105248594834077,-0.6674049725712269,-0.998475418734568,-0.7454242866670395,-0.05628989945898393,0.6657748376540396,-0.4918408438327498,-0.9633047515339069,-0.8712223953756985,0.9556962324262218,0.48993560667756186,-0.2933095766621757,-0.8831513346120792,-0.9563376579754218,0.9966181939717381,0.29121820475925947,-0.08108184297173154,-0.761758034478307,-0.9967955082151057,0.9910017919146602,0.7957205855560106,0.13493211127199095,-0.6047934668318785,-0.9907067149363962,0.9391092913457233,0.9072556591973203,0.34464523768212113,-0.4195872932884844,-0.9383556021434303,0.8433638790724057,0.9764252673036573,-0.9999947541259679,-0.2147879534390759,-0.8421867721291382,0.7082365098059579,0.9999994463927446,-0.9773425842711958,4.1185118671550966e-5,-0.7066909516387395,0.5400371292022209,0.9768773699648086,-0.9090521501079537,-0.9376260642296037,-0.5381952916300992,0.34662002286386123,0.9081387530065502,-0.7983123609647003,-0.9904182787630026,-0.34456791285233906,0.13701705040992132,0.7969934333163288,-0.6502943531939487,-0.9969616426788546,-0.7603929333293992,-0.07898410878223175,0.6486314840151821,-0.4719100173341555,-0.956950605214649,-0.8821621904789417,-0.29129700380705553,0.46998085643204435,-0.2714892385243489,-0.872253533033657,-0.9627377537692948,0.9982293515392905,0.2693838705391832,-0.05839092184391033,-0.7468254644495239,-0.9983570440256329,0.9877010582706316,0.05620765963150939,0.15743403375231316,-0.5865234238443522,-0.9873567728480024,0.9310507984770776,0.9165869670670953,0.3659074054114727,-0.39883292041017354,-0.9302506119944428,0.8309239286295427,0.9810822716426341,0.5572942619127483,-0.1925184027055313,-0.8297052068200427,0.6919960012149667,0.9997646824159763,-0.9722754953777165,0.02278600850044788,-0.6904156538551277,0.5207544338218326,0.9717618002770093,-0.899339609750287,0.23702639784222687,-0.5188862572566296,0.32519557086310025,0.8983812556892214,-0.7844079086601901,-0.9933031238119191,-0.3231268019910678,0.1144512840275794,0.7830496472096521,-0.6328472751596802,-0.9949320442517501,-0.11227852666205215,-0.10163745216987066,0.6311525320785359,0.9947097778691818,-0.9501013380107406,-0.8926455598045377,-0.31298009730322673,0.4497829407230876,0.9494168958827816,-0.8609044323614657,-0.9686397344402605,-0.5097077357501948,0.24741015861291696,0.8597897753903038,-0.731506491107317,-0.9994020354919259,0.9838892936297299,0.03348424212275124,0.7300136696285067,-0.5679499169215928,-0.983495977894085,0.9225105851387604,-0.1820052639589869,0.5661486401469414,-0.37787219361212515,-0.9216643153877893,0.8180540627988022,0.9852316695078767,0.3758465744687242,-0.17014924402844225,-0.8167943566829097,0.6753974577678092,0.9990126457907526,0.16799387139775734,0.045519042529017346,-0.6737831388782245,0.5012023030133727,0.9661434464751703,0.8658776512747031,0.2590617590689207,-0.49930875403918223,0.3036028644949218,0.8881589409407249,0.9531300656010817,0.460507254815543,-0.3015185071318093,0.09182630119175667,0.7687007156002305,0.9958748502034482,-0.992387673556116,-0.08964846717762232,-0.12423820890888033,0.6133470253559591,0.9921159825929778,-0.9427604936946801,0.12640782282413876,-0.3345012566495993,0.4293523098391803,0.9420289879092358,-0.8491099045566434,-0.9740405463365681,-0.5291443395917172,0.22530843805596856,0.8479527425488729,-0.7158090404027143,-0.9999299419412516,-0.6990783495677517,0.010743500054615277,0.7142802573353214,-0.549082555892079,-0.979126327628335,0.9134930699893313,-0.20432311944817,0.5472535402493297,-0.356715957857014,-0.9126011548252543,0.8047609403766998,-0.4098486090751295,0.3546721178679895,-0.14769205108525113,-0.8034609017193053,0.6584494674579208,0.9977437256166125,0.14552882647715096,0.06822852525986821,-0.6568020122781444,0.48139085293983813,0.9600252154640881,-0.07041011994208113,0.2809630831921001,-0.4794729112682965,0.28185307570469137,0.8774770977294711,0.9597651902260375,0.48057770993745397,-0.27975420828532704,0.06915380794188278,0.7539540625449311,0.9976810281475661,0.6577511447201758,-0.06697202407826536,-0.1467746854942779,0.595224176316927,0.9890088720627779,-0.9349318703782112,0.14893750460896782,-0.3558493469188359,0.40869953447433954,0.9341536794122791,-0.836876052041832,0.35789220567466973,-0.5483071671149022,0.20309014417479462,0.8356769837065964,-0.699741234108812,-0.999940490237769,-0.7151610815590479,-0.012002800640290232,0.698177280436635,-0.5299311026227589,-0.9742500828833313,-0.848619632914966,-0.226535259299467,0.5280752944343636,-0.3353751592627545,-0.9030658195353635,0.7910514391503412,-0.4304893637505271,0.3333141558994722,-0.1251584431018367,-0.7897117405841665,0.6411607990805868,-0.6143412157457789,0.12298848575662043,0.09090270693379826,-0.6394810599947036,0.461330333934562,0.9534102727822287,-0.09308028932219885,0.30271903858930127,-0.4593889918979504,0.2599574577113402,0.8663412527813241,-0.30480256102097447,0.5003995168432596,-0.2578451661779741,0.04644553489900958,0.7388173178794704,0.9989710115142797,0.6747131984620819,-0.04426093002866313,-0.16923522167927213,0.5767933616220529,0.9853900538801719,0.8175202827225297,0.17139012696289438,-0.377013322728571,0.38783530025889307,0.9257950450324295,-0.8242092045438189,0.3790379023620227,-0.5671863035800923,0.18076677259023696,0.8229688502723604,-0.6833113856186137,0.568986017223157,-0.7308737932113215,-0.03474289115335467,0.6817130705225253,-0.5105054659683145,-0.9688697666008005,-0.8604321945499478,-0.24863019107609674,0.5086238254190383,-0.3138608394390406,-0.8930632430472024,0.25074777985197094,-0.4509073856396645,0.3117837390531,-0.10256007884079169,-0.7755539870164754,0.6235403976960169,-0.6321288820523022,0.10038451148223893,0.11352985605617454,-0.6218292437916243,0.4410311251977479,-0.7838323103275185,-0.11570229948182847,0.324318368851025,-0.4390673872355655,0.23792733918501255,0.8547571677201046,-0.3263862433143188,0.5199624198410598,-0.23580271642545614,-0.8536200852405439,0.7232983132707792,-0.521829163294221,0.6913261593731902,-0.021526935621705122,-0.7217864831201973,0.5580641172716555,0.9812614004014236,0.8304075380498784,0.19375407302483696,-0.5562481362961452,0.3667704022307936,0.9169574094803107,0.9307119726793296,0.3999874869611332,-0.3647350699889471,0.15834987328975267,0.8098349173632443,-0.666527995643729,0.5875429726624437,-0.15619023222861345,-0.057465005889080725,0.66489614608301,-0.49081569664437613,0.7476623863962688,0.059648108562866946,-0.2705964829840795,0.48890919728450283,-0.29218412977447866,-0.882598600637836,0.2727011044938014,-0.4710921105723479,0.29009200704598853,-0.07990865056924415,-0.7609949661586509,0.4730199729198135,-0.6495894884148854,0.07772859882372404,0.1360982654667428,-0.6038556966197676,-0.9905459369210476,-0.7977534527324311,-0.1382644459195864,0.34574989860474037,-0.41851861156560216,-0.9379480928327405,-0.908665297358552,-0.34780105519298665,0.5392562971943871,-0.21363826366784747,-0.8415515606925396,0.7074050781649429,-0.5410966485328605,0.7075814320005503,0.001218196701202527,-0.7058577000882037,0.5390461336718866,-0.7091250405253331,0.842865145166944,0.21601777181433107,-0.5372029097144808,0.3455157392503271,0.9076453452990705,0.9387901903589848,0.42073012027423773,-0.34346274111679476,0.13585104465151546,0.7962819804025911,0.9908772246761066,0.6057959366576479,-0.13368413972034884,-0.08015738855253764,0.6477352081006268,-0.4708719820273383,0.7625733355310448,0.08233701387897416,-0.29242276978698334,0.4689416102689612,-0.2703562456772694,0.8837413953644269,0.2945133351111688,-0.4910330950849224,0.26825018305881465,-0.05721587800934413,-0.7460422107665612,0.49293697878025944,-0.666714000813568,0.05503246982342252,0.1585962583968469,-0.5855697178917967,0.6683422985913265,-0.8112618419679558,-0.16075505510724342,0.36700253929695953,-0.39775329670952847,-0.9298180928955712,-0.9179267718863425,-0.36903591675322506,0.5582711663591354,-0.191363275668894,-0.8290476220793382,-0.9817279349891158,-0.560084173395444,0.7234706059571272,0.02396269873595832,-0.689563710234666,0.5197492506209687,-0.7249785818867884,0.8548866585775611,0.23816970421828956,-0.5178797373554218,0.32408230836110324,-0.8560191865322666,0.9463826832509457,0.44125507017900933,-0.32201270654562353,0.1132819274434795,0.7823170516040939,0.9936861558650405,0.6237354652274066,-0.1111088797867632,-0.10280829823200231,0.6302391355485945,0.9945881801529542,0.7770897334920804,0.10498331848515016,-0.31409775868623374,0.44873139549012586,-0.2483884807724186,0.8941568009130947,0.31617318617809015,-0.5107200218236616,0.24626956792900492,-0.034493502274544924,0.9694700707711816,0.5125989418081071,-0.6834935591215243,0.03230786733139111,0.18101219451092324,-0.5669807686707122,0.6850882330222965,-0.8243504888691432,-0.18316249052954303,0.38806529493039355,-0.37678218652497447,-0.9212070102836954,-0.926713316242331,-0.3900798411965684,0.5769971891484739,-0.16898927738265662,-0.8161147388687622,-0.985802077852402,-0.5787819138429289,0.7389854602732876,0.046694802604568326,-0.6729129439786956,0.5001834522181385,-0.7404570233895252,0.8664658584180059,0.2601984089509274,-0.4982886169201457,0.3024811991002466,-0.8675555434306991,0.9534855230419045,0.4615517171812978,-0.30039606440321004,0.09065419880051147,0.7679473563437159,0.9959809594011197,0.6413522765600912,-0.088476132740935,-0.1254060154736414,0.6124169807968814,-0.643028599005859,0.7912040695763557,0.12757530531020073,-0.3356102351639442,0.42828900959995525,-0.22629220105847847,0.9041095747398409,0.33766945100890877,-0.5301427048829087,0.22416153430374616,-0.011753279794816777,0.9747965248133887,0.5319956890137837,-0.6999194816892438,0.009566548929711791,0.7134560194789882,-0.5480984667747517,0.7014797066376827,-0.8370126214433767,-0.20547515870486918,0.5462680414388104,-0.3556161313469211,0.8382072305061892,-0.9350203843176681,-0.4109219405143461,0.3535713772330282,-0.14652784499056445,-0.8027596024621662,-0.98936617224065,-0.5971801957691065,0.14436424451215152,0.06940274684378035,-0.6559140163335166,-0.9975122390082823,-0.7555523565745825,-0.07158416159000447,0.2820924884837665,-0.47843968474466436,0.28072358776073253,-0.8786430319488763,-0.28418985354103093,0.4816095599095959,-0.27862399901915547,0.06797956618270627,-0.9607043450808807,-0.48352493612905434,0.6586372558161643,-0.0657976086394527,-0.147938848345091,0.5942779649285601,-0.6602812022509463,0.8049090411054146,0.15010128538664735,-0.35694906878524535,0.40762502937444106,-0.8062047915702473,0.9135945673352185,0.3589910075565705,-0.5492910950752071,0.20193752075584112,0.8350299650650864,0.9796186245920739,0.5511171846288981,-0.7159832698363675,-0.013179719150815448,0.6973341448850351,0.9998981349212298,0.7175082385808214,-0.849241688374165,-0.22768151518364874,0.527075413267623,-0.3342660823737972,0.8503943259398126,-0.9428436780818474,-0.43155143112107736,0.33220421984988796,-0.12399059991196333,0.9435701605806075,-0.9924183741113806,-0.6152695000059303,0.12182032471026492,0.09207478249039917,-0.6385757224491063,-0.9956508225082152,-0.770256771201097,-0.09425212658842137,0.3038406149426536,-0.4583432105553405,-0.952390079952504,-0.889275915482324,-0.3059233540643625,0.501418220548391,-0.25670777513817583,0.04526976131801276,-0.9667691814000259,-0.5033090985217422,0.6755814598441465,-0.043085041223696975,-0.17039513848479698,-0.9991179216047517,-0.6771921796992632,0.8181975572037296,0.17254960389853377,-0.37810321895710913,0.386750146241243,-0.8194529043130512,0.9226068712171703,0.3801268241671086,-0.5681552851306935,0.17960902586545513,-0.9234482255388652,0.9839338751798132,0.5699535352986909,-0.731676612248858,-0.035919168118454484,0.6808514735092719,0.9993148260591362,0.7331655357790376,-0.8610313624107551,-0.24977007052138503,0.5076100792289933]}
},{}],82:[function(require,module,exports){
module.exports={"sine":[6.420676210313675e-11,0.872101131199922,-0.8095983013279411,-0.2548357065241723,0.8837532652862997,-0.8314010833251086,-0.3377457489312408,0.9210102827059491,-0.6010236488212364,-0.1803713303686036,0.9979980384803384,-0.9656512638715452,-0.8511682798822809,0.7154307062423485,-0.4538623885513716,0.14444283110261608,0.9250606976775017,-0.5925751860667804,-0.6379961685151007,0.8510797756590359,-0.7155484877347008,-0.5044425985476721,-0.14460965188661998,-0.9249966504812456,-0.9790167962824384,0.43484670551177834,0.7683615617895581,-0.20104291018423115,0.9991085039302812,-0.28296083989951776,-0.8620321932998887,0.7005599421079199,0.5226560016201628,-0.9537531276256253,-0.06062401149197215,-0.5754821187113868,-0.6540693837303029,0.8923366278013464,-0.9789480298997485,0.4351503143772189,0.7681457164571306,-0.8072674627284683,-0.3770766005961805,0.9899368004825175,-0.10248404961812378,-0.940289876105621,0.5579939611148452,0.6699777241809122,-0.8825550370145306,-0.5757578379879984,0.99999997456668,0.8924887709279896,-0.8827670457043919,-0.9997723379808147,0.5583682247463044,-0.940136246716298,-0.10293273679843956,-0.5403502229901095,-0.3766587868198501,0.08146074541833026,0.5220809586611415,0.396545766570962,-0.05995087483395125,-0.7814917617588655,-0.41604531516037485,0.9830389330122974,-0.06017376233181375,-0.9538886189966753,0.5222713893066875,0.7008817533844839,0.9471945950451103,-0.28339344909590275,-0.6853386863791969,0.8725405684109716,0.26264895293200213,0.6375188806589102,0.2216786779729173,0.8923880290662991,-0.6539832283784597,-0.5755752566978446,0.9328123861739306,0.6701434742368061,-0.9927311178495242,0.4733680662769646,0.8196778229397198,0.989905177908368,-0.4542642805028312,-0.8071356596579117,-0.9866189325741165,0.43494926207442697,0.4856076398109074,-0.9943131525590182,-0.4154319924652796,-0.5043442566108404,0.9963783005407689,0.8510199732043524,0.5228463535936478,-0.9979801331307656,-0.8621453474476589,0.9107364387334729,0.9991179054776865,-0.60976305459247,-0.29674132296875727,-0.9997910885179819,0.7107618205907688,0.3172636993356654,-0.9579822463854177,-0.5750236660754464,-0.3376385482473215,0.12301849462400076,0.7404295050767173,0.3578563954095742,-0.9694580410050561,0.7588472497170117,-0.37790783953400386,-0.3637021114515288,-0.7446277770353766,-0.11679586451063086,-0.9791308553050291,0.7300620528245374,0.9597612123804801,-0.8892337396378035,-0.7151568501386795,-0.15950733420583213,0.8988908685263286,0.6999190998893029,-0.9993614843709795,-0.9081300136283045,0.8653040733218573,-0.20192215508050554,0.916946878746062,-0.854294698638729,0.06710190277021978,-0.925337364041905,0.8428880773648646,-0.04557230776943546,-0.7903940445646417,-0.4292968272494215,0.02402152166923049,0.8034194962285797,0.8189044935898433,-0.0024595655739376417,-0.8160713582444532,0.9424794755539634,0.9919572643416622,0.8283437475030024,-0.9350527501482344,0.24872897798974164,0.658712045984076,0.9271912256998018,-0.22778620035527244,-0.6423353053907473,-0.9188985578134472,0.20673750225605958,0.6807608431431292,-0.9908953335834039,-0.1855926713257764,-0.6963972899118968,0.9877618825839201,0.9519885274440588,0.7117099123028985,-0.9841691228225526,0.42193919925390316,-0.7266915899546832,0.9801187249307226,0.12167990096013977,-0.5167249038242955,0.997499314359573,-0.6322790481175462,0.535065611684008,0.9706527604130285,-0.36244542155828885,-0.5531575143124576,0.9996189622733547,0.342264708491463,0.5709921989843275,0.9593815936583825,0.580871226449707,0.3308852103447893,0.999879537138163,-0.5631843209743078,-0.3511562737175539,0.9676757731911825,0.5452355350824439,-0.6228706351809007,0.998280554341634,-0.5270332149502238,0.1096764515855427,0.9776494774649015,-0.7349400455276209,-0.13108346524291098,-0.9819555267048419,-0.48990194219981104,-0.4305145570004881,0.9858049671353637,-0.7050188581875279,0.44987650617320374,-0.989196008768668,-0.868873524219612,0.1948991130878238,-0.9140642553918006,-0.673786489679669,-0.21600289276807189,0.9225968636303813,-0.8467220906982619,0.23700623121547845,0.9966040426352224,-0.6413010253913168,-0.031184292637842427,-0.7991324625956014,-0.8229959389310636,0.009624936064091576,0.811909124719137,-0.944850433957164,-0.2993161944964565,0.9524005521217893,-0.7977391943807897,-0.033497176683462436,-0.9587524639486215,-0.9298515187280139,0.23475743646717995,-0.8479510030536539,0.9217016961009482,-0.07655699199495411,0.8591836379147967,-0.91312328266437,0.19262887492394914,-0.8700167528309817,0.9041202673760677,-0.11947442801403559,-0.7066580987616017,0.9854138041141854,0.15014206572502084,0.7217505254056567,-0.9815152747779352,0.40884165984831716,-0.7365073384306217,-0.8746064498023622,0.1073760250604631,0.750921675926112,-0.9723510288697108,0.36911435694406075,0.5471739397811913,-0.9993955111840765,-0.3489886091904723,0.7786962760585784,-0.961378422315944,0.32870058191504264,0.5827533323644298,0.9552202304979928,-0.30825970903990735,0.34443812211426045,0.9995524096726935,-0.5512282162991677,0.6172489309668755,-0.9986749426809095,0.5331092089606468,0.38459473320663456,0.9973330923599703,0.2461153955845904,0.6505965813056565,-0.9955274826695771,-0.725099945987879,0.4240360820538273,-0.9845766187351367,0.7100824177092809,0.1666437215318864,-0.990528558868148,0.45824018303556374,0.4626888163571885,-0.9912042371061445,-0.43896819700824397,0.20900104907677458,-0.9198089930283266,-0.663077402081978,-0.23003884865898055,-0.9959884319800213,0.6467825395497854,0.25096968029615274,-0.9358706124202913,-0.6301869234729515,-0.27178381116246136,-0.9989203057987109,-0.8147317404777334,-0.004773644986220049,-0.9501917167774874,0.8020395030873592,0.026334882597596716,-0.8323742449192273,0.5786734011606559,0.333429511840701,-0.962745671972165,0.775542259755089,0.06941060043016659,-0.8554952512537564,0.9160210789781966,-0.1996551881064196,0.8664616893339305,0.7476026771236806,0.11235722969855062,-0.8770252231790205,0.8978744896408757,-0.13375716287874187,0.8871809407512804,0.7182727167175047,0.13589146404369012,0.7316415049324376,0.8780580497624486,-0.11449729657605114,-0.7461703939428511,0.9739993725376623,0.09304988792502916,-0.9151549330552291,0.8566086135950806,-0.07155921112449683,0.5591688275823041,0.9633258895667711,-0.3354594443799068,-0.5769153710230114,0.8335660724075442,-0.028488041161915646,-0.8007511407009108,0.9508608307392165,-0.29453066705402514,-0.6115955344714027,0.999018054645662,0.014636110338172309,-0.3779705317204718,0.936627378343245,-0.7445825772271808,-0.6451382637394514,0.7828759744855752,-0.5023446807257715,-0.8493777678293846,0.9832977178304948,-0.21110696148183428,-0.15957418141909516,0.9914869959919624,-0.46459727921535926,-0.45632461322620843,0.9029644168984932,-0.1687671831161576,-0.7085641225152768,0.9169738953773089,-0.4259858281890681,0.06703434069068977,0.9953216828876009,-0.6522308450411335,-0.24402711281385733,0.9765835692138197,-0.38658213651677137,-0.5312856164096399,0.9985617780832038,-0.6189421709771719,-0.28561191411981257,0.9479340944012334,-0.8062986315498022,-0.019171236362753006,0.9999447663616394,-0.5845023995927674,-0.3266655396157389,0.9544185912447569,-0.7800458706726913,-0.06226064501913498,0.8517629396948025,-0.9188718427312677,-0.36711163852038603,0.9718457702172013,-0.2643569870215539,-0.10523426246753152,0.9971325925387802,-0.9010060418134276,-0.406874989919338,0.7117574783442544,-0.9841571193902945,-0.14801216716080282,0.8937326404245519,-0.474926991550806,0.12161268929563639,0.9885311235426193,-0.9755977067836517,-0.19051480153480863,0.5351228164168828,-0.8602837592225749,-0.48405905288206386,0.7696253157773297,-0.6610558113195829,0.34220108287792034,0.9290568419630097,-0.9999821520598898,0.035649856898291137,0.7964384961977838,-0.95305497832176,-0.2743787357895691,0.944142813380513,-0.813164692215883,0.5451787698870884,0.8217704748810492,-0.9729044800623432,0.25997986547017654,0.6396468219304954,-0.9967790949684392,-0.050578055999050964,0.8455741398768479,-0.9234256494592331,0.21810550910048473,0.6721933044449007,-0.9923945258021273,0.4709305209225198,0.4499369803777379,-0.9892059333830459,0.17582552409717916,0.7034896541555506,-0.9861643194615548,-0.13642988726410635,0.4880230259290347,-0.994603829591799,0.6576456621253369,0.23707201590372146,-0.978100062770436,0.3931805889552375,0.90738725673574,-0.998151979803543,0.09036380250179092,0.2787376009668718,-0.9682167534857568,0.8105163610856859,0.012006605792112138,-0.9998437852334591,0.5903013870947251,0.7893081325114382,-0.9587717090920637,0.3125070966660537,0.055107492872092885,-0.9996760994927758,0.9216754275528035,0.3604370730302134,-0.9430698491829754,0.7570434838274229,0.6306088156199147,-0.8700501356078848,0.5185678269321609,-0.17135861410027203,-0.9796890786202229,0.7281696014443546,0.14092183567665417,-0.9937669596027492,0.4812205803672123,0.43945645468509015,-0.7365531408619437,0.6979414825649636,0.18347569545723572,-0.9092842836384573,0.8639147340890453,-0.08584566714893382,-0.993321805420558,0.666415344891445,0.2256883304977518,-0.9263822239820468,0.8413969507061098,-0.042809842213840106,-0.7920849590309178,0.9552001918598805,-0.3081952913342237,-0.9417572956220092,0.8173143526752121,0.00030559968220996434,-0.9995685210627031,0.9415515774653896,0.3087766818227204,-0.6341225378336216,0.9973281479771353,0.04342047322956477,-0.8417270964199961,0.5646465480618633,-0.2250928582207127,-0.9672277130226039,0.9932511017020608,0.08645459417557719,-0.4435262457810091,0.9090297475781656,0.38956907225678117,-0.6983790655354294,0.7361396004759875,-0.43890735430653294,-0.8851104305769468,0.993834908950369,-0.14031670934522547,-0.23010474667108416,0.9795663363575747,0.171960741009935,-0.5190903278111391,0.8697486742895582,-0.6301343455122694,-0.7574426783706325,0.9432729547170045,-0.3598668890320469,-0.5554589933918462,0.9996914677172258,-0.05449721200477067,-0.7848882990931058,0.9585978409559787,-0.7889327103468327,-0.5907946265037853,0.999832795540602,-0.5608972261315076,-0.3537440011116136,0.9683694413018202,-0.278150573048003,-0.6250315105832793,0.9981146526318084,-0.5246812399475954,-0.3937424896327902,0.9782270921830514,-0.7330620892119967,-0.1338242686441646,0.887212183677569,-0.48748946119741365,-0.43300870307882483,0.9862654542237456,-0.19436602174990628,-0.17642716892854893,0.9891161883675832,-0.8675013517642335,0.09298246694914812,0.9924695778253139,-0.6717406617614033,-0.7205238609785707,0.9236600414534635,-0.410456886478358,0.04996762948334946,0.9968279246722427,-0.9572963612088567,-0.2605699995690093,0.9727629845172915,-0.8214220486122932,-0.5456910485702855,0.8135202789185667,-0.6054243937706095,0.2737909419911563,0.9532398698200356,-0.9978259937616862,-0.03626066106155046,0.9999783136238403,-0.9288305631825319,-0.342775318202984,0.6615142931595158,-0.769234923822364,0.4835241414542205,0.8605951974375309,-0.9119924797836155,0.1899147611436329,0.975731722994176,-0.7409704953574614,-0.12221932936948501,0.47546477366065387,-0.8934582894639418,0.14740767220948922,0.7236616836146506,-0.9809823146902851,0.40631659320036817,0.9012710157894881,-0.8732624617714166,0.1046264371847258,0.9909683590230691,-0.9717015791842497,0.3665430464536,0.5494863426731484,-0.9994878216335925,0.6018081398820204,0.7804281660490763,-0.9606136908673092,0.3260878096582549,0.9352452820937117,-0.9999381557646347,0.018560145775319743,0.3470327664164074,-0.9665566510475323,0.2850261207232308,0.619422113673247,-0.8030957794415106,0.5307677135149524,0.8313916437461161,-0.976714879254152,0.2434343454260143,0.1267198304837174,-0.9952624450400379,-0.06764415271602701,0.42653871889669137,-0.9167298878338801,0.7081326995385874,0.6847520674867559,-0.9032268899628584,0.4557806746472472,0.4651384229488229,-0.9915663924663366,0.1589707842223879,0.7155366208319505,-0.9831862932053409,0.8490550271067803,0.5028730710758652,-0.7832561029132697,0.6446711466999248,0.2536453858132219,-0.9368413231559544,0.37740460200392,0.5396724850699279,-0.9990449471882543,0.6111118572970902,0.2951146998139077,-0.9510498918209692,0.8003848844617388,0.029098987111330958,-0.8339035553090368,0.5764160332478686,0.33603516489767005,-0.963489715305228,0.29622227403996887,0.072168830195348,-0.8569238121282987,0.9149083862743539,-0.19694493380551842,-0.6880505789557083,0.7457633455469073,0.1151044550099487,-0.8783503777269296,0.5038748815450707,-0.15449106651396963,-0.9829739178140326,0.9823479250659969,-0.41285347054666066,-0.898143403370422,0.8767314121084415,0.4547483860734275,-0.7480084632296893,0.6855965579910811,-0.37320038393913035,-0.9162660783519763,0.9992328574386469,-0.06880086223494657,-0.9951490526213481,0.9625802186365894,0.24230964932021928,-0.5791717624232986,0.8320353542405188,-0.5727036766514153,-0.8024044049129748,0.620331902050905,-0.2918870339007953,-0.947368728622497,0.998891724929068,0.017400922413486855,-0.3805291244828346,0.6913349349904483,0.3249915538698936,-0.647248564871528,0.7811525577176168,-0.49995181269642386,-0.8508339338428839,0.983797230638214,-0.20840330878606744,-0.16230330259265005,0.99112316518907,0.10347331958003127,-0.4587833487756248,0.9017727313545519,-0.682287553465498,-0.7105126418805533,0.9180735442638436,-0.423482473048276,0.06427513996655347,0.4764844279001362,-0.12336996585796045,-0.24670774878505308,0.9759849426496855,-0.8295107054563053,-0.5336262124048747,0.8051030062296292,0.4825089483991509,0.28754578869770314,0.9488110827274606,-0.34386425832846074,-0.928400371741555,0.999970005917603,-0.9340447183298621,-0.997748913758925,0.6506994233768465,-0.7783126634911411,0.496018458215862,0.8141939717756153,-0.5466622521681206,0.20396499444621002,0.5953800239655042,-0.2616891831480604,-0.10798367068021876,0.4628088728148662,0.048809633590411086,0.6789645120698466,0.7136970785276622,-0.7213273469632562,-0.6708813346737784,0.8949696763092853,-0.9960005413235903,-0.8669240374933069,0.98894493188409,-0.9749868416719063,0.8269689909438173,0.9864562888177644,-0.8588707466903902,0.6131912963231997,0.8877464949163432,-0.6589784797669928,0.33960155236687933,0.02647026447714096,-0.39480797931463296,0.032886314088566994,0.33355718794855177,-0.09212702628655786,-0.2770367287566549,0.6081081979106139,-0.8555653700348196,-0.5599369899877996,0.8233429753152849,-0.973540087070748,-0.7882197459300518,0.9582670389915509,-0.9965535284536892,0.8978148585437392,0.9997195942549991,-0.9223609116832481,0.7181784837597639,0.6742379949636645,-0.7581991503966978,-0.6292336557405864,-0.11436275707638117,-0.5200809496405427,0.17310276522480525,0.1976768842557167,-0.9857021659908883,-0.13916867486512763,0.4904346805509942,-0.7742663855742826,-0.43786529140989716,0.7353543821359475,-0.699208418863432,0.39063662439798374,0.9085459739984202,-0.9983161944587932,0.9508188906530978,0.281392108623921,-0.9675214494789449,-0.2239630499192619,-0.5390437668264217,-0.8423525002066019,0.588067136991632,0.7910029182633412,-0.9595538408885514,0.30987922978618093,0.057868244541690886,-0.4176588904559281,0.0014650100234304083,0.36301499469573306,-0.9421465646897691,0.755233929471494,0.632752451041246,-0.8714099336689805,0.5162015280871347,-0.16863369508008563,-0.9802398110879603,0.2268176761028645,0.14365886680528125,-0.993454906801509,0.8835340912144551,0.4419386217894561,-0.7384206258513712,0.695958528676919,-0.3864572328177421,-0.7373368475826977,0.44049761600080783,-0.08309038248811096,-0.9936370434957604,0.966364906405777,0.2283812894306411,-0.5674299509426934,-0.17021623749135253,-0.5843925081543133,-0.7937698170985568,0.6315082113241908,0.7562854572839577,-0.9426836014653097,0.9994636498393364,0.9212250009840481,-0.3672376081643255,0.9406164801343285,-0.7522531709324424,-0.9591005430065999,0.7900194769709604,-0.5123114865924102,-0.8250023550164277,0.5623622085753746,-0.22239779499289875,-0.14814610321614632,0.2798508736502528,-0.881400601857026,-0.44600286005678075,-0.02995774087060861,0.39211429155018895,-0.7003555012494327,0.9122984977210045,0.656771804328458,-0.8863939017729171,0.9941376834129628,-0.9651884820691143,-0.9859714603020564,0.9790064578754758,-0.8374290015400284,-0.9893751592529635,0.8683807546610651,-0.6279848248066766,0.3012415806881888,0.6730512520753956,0.7192949376661052,-0.007606472051268737,0.41207082630152125,-0.05173594868865776,-0.31571257250873996,0.6397509162007631,0.2588601475819697,-0.5930233631240418,0.8456464320273981,0.5442064465853192,-0.8124893296769615,0.9690557051166211,-0.9923778456579572,-0.9527032713515693,0.997941119189865,-0.9059630152537186,-0.3962827807487339,0.9294851264084851,0.34111143967059276,0.43233557921200866,0.7703650772862867,-0.4850732527785632,0.133084318811748,0.9867184001807313,-0.19165284869753396,-0.1791482834475809,0.5253166975401786,0.12046180253011972,-0.4739063617985903,0.8942521513370364,-0.6696896976147797,-0.7224385545860503,0.9247161568353865,-0.9998461697716593,0.047205728375091766,0.9970441848156572,-0.10638716466444137,-0.2632386448927147,0.9721182949245346,-0.8198418775791636,-0.54800613248097,0.815125212821736,-0.6032212771825055,0.2711303901092362,0.09824066692437775,-0.3277611253970281,-0.039023868185266035,0.9999562799150562,-0.9278025056613175,-0.34537165117073704,0.6635854508130434,-0.7674651368821823,0.48110185887533957,0.8620001767222218,-0.5322675036050426,0.1871991952469907,0.9763334790909086,-0.9880156001950983,-0.12496329621788264,0.477895567004104,-0.8922129107803131,0.6663143654628904,0.9174358226865601,-0.7093817802289212,0.40378841979570923,0.9024655934961985,-0.9973824125419108,0.10187604931978993,0.26761172652991194,-0.16071862801066739,0.8172363120179206,0.551794544111336,-0.8499891169130952,-0.5013418384686733,0.7821540887704985,-0.9554208981027787,-0.743808135001467,0.04355577419736989,-0.9999035805407499,0.9261007970044339,0.9989660155877614,-0.9468534332584396,0.7645494072285841,0.9642700778967036,-0.8014450861723879,0.5284221597408931,-0.18274169050124617,-0.5778619943999187,0.9873053235360755,0.12946221900494043,-0.29791295235137427,-0.07040272474651496,0.4290380943614843,-0.7286811353377703,-0.3746896443254663,0.686764635226954,-0.9044101440121073,-0.6424284986817838,0.8775026188664582,-0.9919209661633757,0.9699511269832947,0.9826470361155727,-0.9826776006393987,0.8475909326268769,-0.5959613200464438,-0.8775816659694398,-0.4531707332572699,-0.31917730789434623,-0.6868844544780205,0.3748424830694366,-0.011260027867958567,-0.3538706704224133,0.07056716808438711,0.29775558043933925,-0.6251372207348536,-0.24059142617134455,0.5777274440392242,-0.8330162470099832,0.9782551898083186,0.8013464817058944,-0.96422639165356,0.9945260926965289,0.07492650814698991,-0.9989734967693027,-0.01563055391128865,-0.7029588251671497,-0.9362784946142797,0.7439183117533981,0.6458978519714945,-0.8796688162780634,0.5014844709059026,-0.15175850971522062,-0.2188341017717732,0.21013471410401147,0.16055591552326567,-0.9913570085474207,0.8753980708365094,0.4572093579689452,-0.74984081313329,0.6835809479495063,-0.37063357396158725,-0.9173702177428984,0.42508581180813365,-0.06604198728383746,-0.9954172812759923,0.9618271876758228,0.2449914824169335,-0.5814237253907103,0.8304982742082312,-0.5704347093288005,-0.8040515338223935,0.618160703168343,-0.2892411689361743,-0.9482503588392756,0.9987577575387464,0.020165601438777422,-0.3830848076632836,0.934675638063687,-0.7408795428379802,-0.6493539170454385,0.779423168141777,-0.49755512196164214,-0.8522835942544036,0.9842892211869394,-0.20569806260780746,-0.165031182771171,0.9907517561120054,-0.873196465923222,-0.9970568369985296,0.9005741507230586,-0.6802633779416003,-0.712455728561183,0.919166173424402,-0.4209758798979201,0.06151544778519953,0.4740515211409372,-0.9605760480370983,-0.24938649839234744,0.9753788535604658,0.19149104866296543,-0.5359627282152396,0.8067400439884332,0.4849290862947413,0.2848963066509952,0.9496808163039506,-0.998521470618582,-0.9294243060373907,0.9999875995551432,-0.9330535522007308,-0.9979305324713007,0.952753357683634,-0.7765735052159605,0.49361553669317604,0.812585424195449,-0.9850799470275625,0.20125717923464273,0.5931560925548773,-0.2590193783604047,-0.11073225323380405,0.4652583056556266,0.05157131540395949,-0.4119206142695883,0.7156312216777498,0.35713162781792873,-0.67292931807472,0.8961998691236306,-0.9962437932130673,-0.8682989924065576,0.9893511786064825,-0.974368521666703,-0.19594090410174858,0.9859989632350665,0.13741507775148543,0.6110046535747746,0.886470205587872,-0.656896109567574,0.3369994252121885,0.029234358585967422,-0.3922659375433212,0.030122519825225968,0.3361627156295893,-0.08937326937840154,-0.27969260345997704,0.9679675232987341,-0.8569936102591552,-0.5622258851774846,0.8249091803474723,-0.9741682502477944,0.2546357474365618,0.9590538656564094,-0.3115621967482272,0.8965937221535026,0.9996502937213252,-0.921289121399442,-0.36136460147796967,0.6762775301590916,-0.7563933009587688,0.46604464646594784,-0.11161529772723552,-0.5177171876381796,0.17037868278311036,0.9798880253076839,-0.985232475695811,-0.14190639836189697,0.4928425852369184,-0.8843620009597101,0.6534694731777974,0.7372254749595286,-0.6972288803752522,0.38808967297537844,0.9096977443843342,-0.9984727758409069,0.08485473881090577,0.28404446471532846,-0.966818747660167,0.8072647770084225,0.980272407875305,-0.8408590582926565,0.5858283904403153,0.7926916558900506,-0.9603286357945857,0.3072489935239287,0.060628553742140365,-0.36316859736427054,0.9195157847335356,0.36559014069496326,-0.9412160764047153,0.7534186004853453,0.6348912483438395,-0.8727630688009614,0.5138312822889496,-0.16590748666174893,-0.9807830484972594,0.9844457187259055,0.9674797632285884,-0.993135257897256,0.8822356021340464,0.44441740976581784,-0.7402824647675827,0.6939702533871275,-0.3839054241429028,-0.7354660904204392,0.998713087469097,-0.08033446250594593,-0.9939446840753058,0.1393319220885583,0.23107250212644517,-0.5697046777603683,-0.1729403981836055,-0.582146423044116,-0.7954486058848846,0.9615836488549508,0.7580916519089134,-0.9436026994105001,0.9993692760141896,0.9222972114648879,-0.9997156769762837,0.9396741907106725,-0.7504283997452846,-0.9583141533553703,0.874968196511468,-0.5099348057620544,-0.8234365256813063,0.5600735691843428,-0.21970103127868218,-0.1508801888157673,0.277195125874847,0.09196287275926729,-0.44847606412878194,-0.03272154945760295,0.3946565126797837,-0.7023265819417872,0.9134274162614856,0.658854474418629,-0.8876705954701387,0.994432856551933,-0.1348389694400919,-0.9864292354479036,0.1933903354082967,-0.8359145101977423,-0.9889693634367251,0.8670061952650078,-0.6258305024363208,-0.7610418422141894,0.6710035749886226,-0.3547015889302175,-0.010371527192933135,0.4095497665229995,-0.04897428979183654,-0.9969065854916501,0.6418737266834865,0.26153007101518627,-0.5952475654000373,0.8471190874552866,-0.5563101878569527,-0.8140982480169026,0.6046325233482241,-0.9920332940467178,-0.9535399682651446,0.9977599553426658,0.037254546415645684,-0.3988200418279803,0.9284616155688983,-0.7292893756795774,0.429840542433627,0.7685990549888345,-0.48265333541794647,-0.8611012895313226,0.9871638015430293,-0.1889382102391614,-0.18186802817236622,0.9882873521748158,-0.8647371182654676,-0.47633948517443175,0.8930111459598012,-0.667633612921773,-0.7243477243215924,0.9257652017009359,-0.4054076330196611,0.04444346632485968,0.9972528214119089,-0.9556828635912038,-0.9911012349832925,0.9714661723716519,-0.8182554379138961,-0.5503170262557907,0.8167239141570831,-0.6010135482753828,0.2684677651242903,0.6473742203282484,-0.9974462675107791,-0.041786776926719206,0.9999266003928,-0.01756575057045851,-0.3479653433758122,0.665651534594161,0.2917293554829692,0.4786758977205569,0.8633985650261902,-0.9878780584738622,-0.8319438950527701,0.9769277699975946,-0.9875850086335296,-0.1277063075784525,0.9951652571529065,-0.8909607101049329,0.6642499154639875,0.9163321012398703,-0.9274706455644985,0.40125715896512776,0.9036532708176305,-0.45489520158050467,0.09912488249552748,0.2702750133596657,-0.15798879575729166,-0.2126762565260508,0.5540985264469047,-0.8193327776347993,-0.503732478220616,0.783874031026185,-0.9562336524430121,-0.7456535083037092,0.9371887109038664,-0.99986135990634,0.9250540258679165,0.9990879095939278,-0.6690295576515239,0.7627641558729844,0.9635338409306324,-0.7997882649357126,0.5260725655729193,-0.18002239035837286,-0.575603039286498,0.23806668161787306,0.13220361763890728,-0.2952722068910351,-0.07316075846736661,0.431534189337612,-0.7305720808914271,-0.3772519346800983,0.688771951863273,-0.9055864828077571,0.4508512218038682,0.8788253590125321,-0.5030155569315848,0.969274654781922,0.9831561767416394,-0.982161394375319,0.8461203573414605,0.507645558903907,-0.8762526160310766,0.6404335894293772,-0.3165555553050558,-0.6848721993663761,0.37227749803394006,0.9166640152114773,-0.9992713125368595,0.06780862755554311,0.3003941843816057,-0.627293082565916,0.7970573003254694,0.5799822446346019,-0.8314832392984176,0.9788249584148165,0.8029975406655303,-0.964955695384425,0.2909356423862891,0.0776836131994792,-0.9988444198697343,0.9126620228538382,-0.7009894684467517,-0.9353036275335086,0.7420675898505539,0.6480063749506801,-0.7805312292541843,0.9928207003734674,-0.1490247925484821,-0.9839750530089304,0.20743048589368132,0.971662625663842,-0.511548195669945,0.8740580361415766,0.4596668339741535,-0.9013424272081553,0.9403144708861044,-0.3680639300649719,-0.9184673427855828,0.4225812898357057,0.8933842340704893,-0.3047173732400767,0.9610668024422572,0.24767144227257257,-0.9757678075780081,0.8394168041362898,-0.5681613803781093,-0.8056925148349758,0.6159847777377035,0.7691295776712299,-0.08220486972746309,-0.729856812637187,0.022930126274899668,-0.9999772143506084,0.036425405509114085,-0.7390195212423489,-0.6514543041633492,0.7776878189812241,0.6052931782945392,0.14453814593746891,-0.556999459463683,-0.20299124363176632,0.8412505433173816,0.26072915451568884,0.9572486877087477,-0.46369027732559726,0.8993686841685377,0.41030655442409175,0.36384278982601753,0.9202517745045801,-0.4184660679037821,0.2993954604605749,0.4716149897137605,-0.9598036120110519,-0.2520633411536251,0.9747653065804074,-0.8418733027490293,-0.9862926693135486,-0.13566104983335933,-0.6124053579493087,-0.7720204393360397,0.08672443503439294,0.7329499523095133,-0.027464460236290192,0.9999975471397364,0.7427689536849358,-0.9981045208593684,0.6548888308459904,-0.7748284091450105,-0.6088974306359066,-0.14004852570754078,0.5607607388188023,0.19854782518094477,-0.5106483524988021,-0.25634759307230864,0.8696149752476838,0.3132441869441605,-0.8973764381952245,0.943362849980492,0.9219762288407687,0.3597130753605772,0.41434223676626286,0.8974232094613519,-0.46761048235072533,-0.8696673081774102,0.2564500542734092,-0.9737427514958078,-0.5690225898115077,0.985534098558602,-0.8110326809382161,0.6088133389944849,0.774895418033995,-0.0912422161381373,-0.7360280128217482,0.698497046219363,0.69456740448695,0.027358495240647374,-0.7328778349549138,-0.08661882910902154,0.7719530585728872,0.6124891559802986,0.9845911497564458,-0.5645104815049757,-0.1941003219567601,-0.9747889647904538,0.25196075772668886,0.959833359253699,-0.30893347534959714,-0.9414960307105011,0.3648177462843611,-0.9202102868028816,0.9237638039205386,0.9418127219064334,-0.8994150234722976,0.4635963547219387,0.8718973882974594,-0.5153494670937006,-0.8413078496210015,0.20309504035774587,-0.9847552521676439,-0.144643036821376,0.9933408121645912,-0.7777544546174501,-0.9984265943664142,0.7390909308481939,-0.036531339785388244,-0.6978234125619667,-0.02282414918949171,0.6540972951179332,0.08209922321559701,0.993748568661643,-0.1410850419982972,0.8056297200437921,-0.9870479602439879,-0.8393591870461039,-0.5184268642520644,-0.24756873873027474,0.46677857601136813,0.30461640799047207,0.94301500701039,-0.42267736229033953,0.9184254130518691,0.4152948252920739,-0.9402783914424647,-0.3123504956763077,0.9588185436657405,-0.8741095306575567,0.26520756234199405,0.8437510303094881,-0.5615395399189265,0.9839561461640731,0.14912961283242082,-0.9928080153340729,-0.09019962236473421,-0.6479256343317675,-0.7421386433746826,-0.9999991884869641,0.7010650641438553,0.018289333571487047,-0.657521464639642,-0.07757792827461017,0.7661547721688321,0.13659319734020553,0.9861369782004509,-0.19512721582879644,0.8368850159087402,0.5223001614960003,-0.8678871261484259,0.9623390436514488,-0.47968782978848423,0.41761132137581464,0.35635651644271665,-0.916621644308379,-0.41116442977285733,0.9387247163993057,0.3166561069476282,0.45553956919788197,-0.25982067722525004,0.9729425821613171,-0.8461768522999856,0.5577806473880433,0.8130687309653921,-0.15361312076317019,-0.5979624274132567,0.6521678697252996,-0.9978768379607741,-0.035485107850795124,-0.6886950968177519,-0.7042922925413185,0.7304996929177937,-0.999056745504862,0.07305503730377666,-0.6152432988345283,-0.1320985425165854,0.8002224792860203,0.19067663289874764,-0.8343936273295945,-0.5261627133299309,0.8656250066114705,0.4747819099919964,-0.8938065814959598,0.9459947261182613,-0.352114860849278,-0.9250942850733767,0.37658161028031867,0.39776251959223596,-0.460502241013793,0.9562026296152716,0.2641979947508355,-0.9718845994138431,0.8485852656854601,-0.5540102794983703,0.982297221496381,0.6024277458896269,0.77994270764804,-0.09923036469333708,0.9975711624754166,0.04001764865202471,0.6853993530432305,0.7075050313597909,0.9987987571895084,-0.6643291514614285,0.766827155869438,0.6188126807160312,0.1276011699970787,0.9876016549050348,-0.5793925462660912,-0.9765480896565432,0.24418697907233558,-0.863345078357818,-0.47876896638818445,0.8917633124873906,-0.9474554076237479,0.34786596110998663,-0.37140405823640293,-0.4028783469225166,-0.9028935646161262,0.32524769711139717,-0.9548651507455533,-0.268569876865932,-0.49971721675782993,0.5586492654745331,-0.9833277085032308,0.8183163707007014,-0.5988012239298626,-0.7827733957516606,0.10374272005939844,-0.9972449637125637,-0.04454936616030147,0.9998892752840054,-0.014800945834713189,0.7242746368317895,0.07409911054961531,-0.7639079721232226,0.995610425465692,0.8008498765123759,0.5748333781745517,0.18176379017014505,0.9775145911701978,-0.23978601062965724,0.8610473882929949,0.48274617295237765,-0.8897016970123127,-0.3530945310897627,0.9152213733825348,-0.9285009835521533,0.398722830063018,0.9048340386726277,-0.32953349924694275,-0.8779791465769613,0.5045450659734241,-0.9697086716318933,-0.21537734822986818,-0.5464354281519771,0.1570596368070567,0.5951623826848726,0.7855879796652031,0.9976435380365961,-0.7474931802290473,0.04908016714348375,-0.9998114941842301,0.01026552800779322,-0.7211397256733846,-0.06957505524314754,0.7609730723099409,0.1286394528810338,-0.7981253283997851,0.9889850593381978,0.8324655976389399,-0.9784609820351439,0.23538010901025852,0.9644895521453579,-0.2926292037357719,0.8876217774848496,0.43402698473956347,-0.9133842669877317,-0.3798113405106941,0.9359286847705425,-0.9067558973553477,-0.9551756014453073,0.8801413795300534,-0.2772969752030977,0.9685907713633163,0.21980444488310147,0.5426311005345413,-0.1615374908144271,0.991226040507495,0.10270140144343838,0.6383074574096794,-0.9965310236203344,-0.682854707620697,0.9997131437160627,-0.005729898985634392,0.6669328223272323,0.06504956855191324,-0.7580225168100105,-0.6294441480213788,0.7953843602580204,0.5822326106000375,-0.8299438739431422,-0.5329697281244897,0.8615792964143973,-0.9656776209214587,0.4906707094929004,0.9485656853206416,-0.4381087878462167,0.9115283693131919,0.38400330392083043,-0.9343216089829987,-0.32854488430624407,-0.4443224460415974,-0.8822855051175293,0.49669216466122273,0.8528034057823307,-0.2242270194452933,-0.8203166756229343,0.16601202147116884,0.5878480420422366,-0.107212123350636,-0.6348093452855417,0.048034491219705405,0.6795340630351665,0.7131532740564092,-0.7218646193895107,0.9995233447560289,-0.6777799613362052,-0.9959309032697063,0.11963809894533352,-0.7926270284776953,-0.17833194060975086,0.8274050756073877,0.5368021098689838,0.22655386891572799,0.9668458225737586,0.8881034699734451,-0.9499918612001175,0.3403313814742734,0.929790850776783,-0.3881873671363121,-0.3862074041578932,0.33282547949299973,-0.952450794634715,-0.2762909679037901,-0.49275034570667153,-0.8551633539840612,0.5435101779403367,-0.9798668667364462,-0.17048313672165952,-0.7877419305198982,0.11172063955638478,0.6312981730722191,-0.05256452379738236,-0.6761994382278054,-0.7163255444816425,0.7187182906706507,0.6736646660801707,-0.758704926291399,0.9963294219545711,-0.11513368365141614,-0.989495445218591,0.5895839296117253,0.16389396598005823,-0.2319878416090077,0.8569389782903094,0.48975822009119635,-0.8860095002801361,0.9513984926627946,-0.3360628779776396,0.9077603532380762,0.39135089812368984,0.9082214773389498,-0.3370992273791014,0.9510589846063962,0.2806473292966674,0.48879838927776137,-0.9651176022616962,0.9809661865522598,-0.8254709611113741,0.58869464069542,-0.9893357442478998,-0.11622685730586915,0.9962346083659733,-0.7594214108735321,-0.9996234991512328,0.002241061399709695,-0.7155571755831833,0.9997622717479138,0.755742369907802,-0.9967074429085744,0.11062689968383665,-0.5850655878932371,-0.16939858293680282,-0.9800860027442433,0.5444336634541489,-0.8545923502453981,-0.49370772422331677,-0.27523307890618254,0.8791199202951566,-0.9100880726685946,0.9330916808702937,-0.38717287549049584,-0.9101103053076435,0.3413660400396802,-0.9496476082070856,0.8886087984380888,0.9665641965752672,0.22762567770800113,0.5358732315132823,0.8280226563521881,-0.5850220764986279,0.9886649200949157,0.12073068389156028,0.7557775034770415,-0.061621251508780936,0.9994887628207325,0.0022947126856971258,0.7123813391615087,0.680341072241124,0.04693517041987648,-0.6356593308548381,0.7904950227862537,-0.9907661340209644,0.16492663051666592,0.9809766031004828,-0.5482326782889861,0.8522281404613495,0.2805958336680972,-0.8817669200725496,-0.44530813415756704,-0.3275052172302349,-0.9347133177078532,0.3829868874542697,-0.9277014220998825,0.9513819686662723,-0.8860343754042855,0.28934264109659796,-0.9653911721350842,-0.23204002901769966,-0.5320381819852695,-0.8305573164787285,0.581337476498408,0.7960509351648826,-0.6285885797293526,0.9954071388077181,0.6736250147148521,-0.999333463761472,0.7257536733667265,0.9997388973720265,-0.05251094646928263,0.7497706741875299,0.6391542632156905,-0.7877088798193688,0.9913709099389775,-0.16045128502029363,-0.9818470215831887,-0.8551355420762855,0.968863850811672,-0.5015761799301712,0.8796183968419209,0.44936477254779456,0.3232162360383285,-0.3955701453544379,0.9297711009788224,-0.9138317509997719,0.4330352256199597,-0.9467662728438146,-0.4857517442027489,0.9641982864642817,0.2364496065106674,0.8274352053562543,-0.1783847317653711,-0.5776409164989443,-0.7987879243150439,0.625054478878121,-0.9949626815325289,-0.6702658244963114,0.9991576051684573,0.7131156629452844,-0.9998322570531646,0.6869614913915173,0.9969842602263399,-0.6426360460982903,0.7849065311234749,0.5960464399682803,-0.8202859906797215,0.9826972402850268,-0.2143024848833012,-0.9699769124912136,0.27187729222180673,0.9538391235213892,-0.4534121660457571,-0.9343407306744859,0.3997318827178137,0.37459135981227937,0.9156642921609868,-0.4289423392314884,-0.8902036113730772,0.4817820519677553,0.861606529871465,-0.532924331046895,0.9772819260707569,-0.8355753231557782,-0.9881350895471853,-0.1241932891308922,-0.6215075186269767,0.065103106250337,0.6668928447336968,-0.9989611906596706,-0.01590137842815978,0.9999050469387512,-0.043449869723140355,-0.9973259980500843,0.10264803356803137,0.9912331306011289,-0.5996822989277284,-0.15149078315630088,0.5511471654953447,0.20986989581830665,0.9710700185965687,-0.2675095865294017,-0.9551914830280501,0.3242067768423923,-0.9024199255797042,-0.40388539629860504,0.9263933043058074,0.34889757614719336,0.42484062810650836,-0.29268050620072716,-0.4778024479118142,0.9617530300050474,0.5290808551590334,-0.9763105478860562,-0.5784951837274797,0.987428289675321,0.12869265835318922,-0.9950670849034828,0.7675330912780071,-0.07971874913537659,-0.7281494338280357,0.7067268264945433,-0.9999572655312617,-0.7474575401496047,0.9976472176401614,-0.09813517432265005,0.7792534474905219,0.6033058204753777,0.9825027938411662,-0.5549261727522734,0.848002489869383,0.5045913871011304,0.26313637729631345,-0.8730644261820528,-0.3199126730107552,-0.937535171636671,0.37556183969186735,-0.9246758001212297,-0.3531447261912569,0.9456373707640311,-0.8942995902050828,0.4738130139083011,-0.23983809646932552,-0.5252264943602838,0.9753190838237261,0.574789475970517,-0.9867011751977843,-0.13318937994969435,0.9946068818093405,0.07415261437281956,-0.9990083499589242,0.7312508387143012,-0.7035105658363878,-0.6894926434758141,-0.03438521737585585,0.7376426775992687,-0.7827400069766334,0.9923909033061125,-0.15252552811544604,-0.9833374631856703,0.5586937633762227,-0.8455898478891596,0.9731962745407671,0.8757729532132106,0.456519030805939,0.31561198753681585,0.9391034762353527,-0.3713542438924908,0.92293927235342,0.35738461090179413,0.891787588588541,-0.301342659672319,0.9620392707178324,-0.8684333173685771,0.5213613279473615,0.8374869333631859,-0.19620650469904652,-0.8035898821374434,0.6187705345618466,-0.9941262164225799,-0.0786751266311048,0.9987961268088845,-0.7343371993967583,0.7002798316818977,0.039964040146723584,-0.7414005461298416,-0.648763544057857,-0.08910349184017474,-0.9929391704543215,0.14804126726715527,-0.8097745381418398,0.8485568797146431,-0.9718972306556037,0.51240252062981,-0.873574426496753,-0.4605498644957376,-0.31130480889963685,-0.9406524604266644,0.3671390081306902,0.918860232810354,-0.4216796886291549,0.9426482236381946,0.4747346905036804,-0.9607915148937786,0.8706732422710852,-0.5174854354392878,0.19072929970037247,0.567342661081473,0.806281226493961,-0.6152010025308777,0.9936250986320485,0.08319602028661105,0.6532644223308001,-0.7042542038393126,0.9999834336616003,-0.6960346449234769,0.7383491383638173,0.6522085405673761,0.0845848544141114,0.993467009620149,0.8130374956687558,-0.9849460937867551,0.2020172920296399,-0.8407124243371843,-0.5162923148403378,0.8713579275182229,-0.9604041349992015,0.9387432069676402,-0.4112133357371995,-0.36291621912755045,-0.9206405163248144,0.4175625717085492,-0.9411245445997574,-0.3099800148841004,0.9595239924689878,0.2530256603096289,-0.9745428073051161,0.8424096243334801,0.9861280742233125,-0.8089559830280021,0.14666273414660672,0.7726521958793617,-0.6574810407891241,0.9983100398607073,0.02845862882911821,-0.9999992553985766,0.6992841996829997,-0.7352825403589158,-0.6556401190297759,-0.9928144369116629,0.6096860610736233,0.1390637008205561,0.9857200219485819,-0.19757297008515953,0.8382477431098699,0.25538614241590796,0.9588337803291912,-0.4685830241251728,0.8969371302116951,-0.9436923405147819,-0.9215906340305257,0.9224018592749313,-0.413436864170198,0.30466750919822505,0.4667311274033636,-0.9582367295205113,-0.2574112242827258,0.9735158577698458,-0.8448449983973114,-0.9853650562906314,0.8116140967111413,0.9937425775161061,-0.7755236840101263,0.09223257978666041,0.73670091546945,-0.032992261394079986,0.999994503904303,-0.026364296643971486,-0.9984296013995688,0.6590582088463467,-0.7713204570341514,-0.613275029743729,0.8077225519998202,0.5653311357030789,0.19312458342325028,-0.5153954445557393,-0.2509981627252431,0.8668711955460754,0.4725851847966356,-0.8949223796673725,-0.4194653806768312,0.9198205377231295,0.3648676994707958,-0.941477947534175,0.8998492953440249,-0.3185918610459731,-0.8723839804933872,0.5144968963451488,-0.9724688798527952,-0.5644661954176219,0.9845817661996871,-0.8142555128573501,0.6044167613943645,0.7783792171009197,0.9983703313897724,-0.7397605047772491,0.6945288051703133,0.6985354388671514,0.021829839645938546,-0.7291040263032028,-0.08110798273508371,-0.9938591108665429,0.6168513813554334,-0.8050401265303578,-0.5690667077329349,0.8388181532426979,-0.9760080290453009,0.2466050191874882,0.9613703234611933,-0.3036689662169866,0.8928892176642733,0.35966301468597106,-0.918031517721012,0.925867578926378,0.9399393726793528,-0.9018185426908487,-0.9585355959147425,0.8745921835543674,-0.5106022228242886,-0.8442844265066064,0.20850698489289507,0.5523095837178842,-0.15011297493795128,0.9926884585459921,-0.7812187364041558,-0.9981012176297344,0.7428048748097814,-0.6912583389675226,0.9999232820362774,-0.01729493353723202,0.6582704745670516,0.076586329870483,0.9943507827491425,-0.13560789420508015,0.8023411387718747,-0.9879200680652382,-0.836340202477198,-0.5231480236050072,0.8673926391699641,-0.9626089402087699,0.2993442696443066,0.9448407970388542,-0.42768290673519044,0.9162236108301225,0.4102576265431378,-0.9383814602200568,0.9037692367024337,0.9572331667860815,-0.8767823934147084,0.5066970445579997,0.84670643558135,-0.5569549004647614,-0.8136473280113172,0.1545957978000571,-0.9921307592975397,-0.09570600714055158,-0.6437032711145656,0.9970914522507206,-0.9999768507313888,0.7049979905318557,-0.7298201354704769,-0.6616781412134263,-0.07206310137643408,-0.9948219976079128,0.6239659393560717,0.9870395600729381,-0.18970022849320875,0.833845045478497,0.5270082086687019,-0.8651266107293466,0.9638277529652702,-0.2950134145881584,0.42262991485573087,0.35118382399902787,0.9254714982593949,-0.3775027654924965,0.9368042422076043,0.3218969845049144,0.4506094374950444,-0.26515708327894916,0.9716499425687952,-0.849111025155823,0.553182026740326,0.8162758636148139,-0.15907544012469632,0.9915526486983479,0.6479655112205334,-0.9975013935213045,-0.041011389535544236,-0.6846748098538791,-0.7082075433826327,0.7267118030449936,-0.9992816141658166,0.994239114679906,-0.619593637834364,-0.1266146794960786,-0.9877572928708079,0.18524487481503754,-0.8313327335800755,-0.530857551462576,0.8628427838256534,0.4796418922005502,-0.891312832111646,0.9477730858702592,0.9166425716333826,-0.927180203312416,0.3816990366250503,0.9033206426438037,-0.45558617438776056,0.9545692555472203,0.26952776154752156,-0.9705675836967244,0.8514981457598114,-0.5493977722656572,-0.8188876057737002,-0.9922612951609793,0.783391928456783,-0.10473185962765519,0.997170695513242,0.045542914057470234,0.681361882387594,0.7114025261049979,0.9990544707562509,-0.6684525660768258,0.7632657814024523,-0.9957030178973547,-0.8002538746960718,0.9884547042943415,-0.5838911554493786,0.5261181921157869,0.23882035014382585,-0.8605412054446185,-0.48361692805272466,0.8892471994736546,-0.9492099971134227,0.34267573349511804,0.9288698332585008,0.9371699947170782,-0.9052570383214884,0.3304723415004427,0.8784548058391749,-0.2738928947549985,-0.49491928577917654,0.21634845768642735,-0.9823070274631487,0.8214825007559611,-0.5943628566216734,-0.7862029734615764,0.6410294155295078,-0.9968194824665897,-0.050073501613795875,-0.7074680318042733,-0.009271017993536775,0.7204503499867783,0.6718191849219374,-0.7603274435959962,0.9961128052025786,0.797525721363225,0.5793498749010964,0.1763228259327359,0.9786658064226196,-0.5385233936916384,-0.9647517586175699,0.4875820143345936,-0.8871632721337678,-0.347915044268192,0.9129789324605915,-0.9305403533364759,0.3936450455789377,0.9071748099229157,-0.33474986573597615,-0.8806130721949932,0.27825239309641825,0.850948723521842,-0.2207745705760606,-0.541795432715758,0.16251890632165952,0.5907090961587237,0.7889978437187439,-0.63754154985696,-0.7511553637270986,0.05460305899562626,-0.9996888290604861,0.004735355136096776,0.9994077531336993,-0.06405708547656268,0.7573734633855702,0.12315312734976151,-0.7947811603370678,0.989788506044703,0.829388652743592,-0.979587650686815,0.23000158509744015,0.9659354732184611,-0.28733650519275206,-0.9488800735334277,0.4390026006051844,0.33413944332681544,-0.38492142034360133,0.9339666557231812,-0.9090739179932974,-0.9535238035138462,0.8827532214809457,-0.28260616688274653,0.9672007918473281,0.22519614141601732,0.8208850667750842,-0.16699269596128014,0.9904798992791918,0.10820089520882828,0.6340405678849094,-0.9960555405817982,-0.6788040759713164,-0.7138501141399598,-0.0001995948570279728,-0.9995535544405388,0.05952997950879024,0.9960200403362897,-0.6337318240528474,0.7920202480821308,0.1773532374404599,-0.8268461174308436,0.9804893416527372,0.8587588097044462,-0.9670993153906923,0.49548201209499676,0.9503019664170105,-0.33939602535461755,-0.9301564758186209,0.3891037397754706,-0.9323361475620214,-0.33376317096467,-0.4393612319059749,0.949005996902141,0.4918846673188472,0.8556784683953905,-0.22961307924023036,-0.8234669667646023,0.17146305001899156,-0.9898453291694629,0.7945388303259311,-0.6305265416399211,0.0535576801968929,0.6754663948891321,0.7170191587360256,-0.7180264181130024,0.9996787916856442,-0.6818358368208931,-0.9964140651822553,0.11414568316726519,0.9896387330766708,-0.5903869490654414,0.824286571209047,0.5414598664535569,0.22116389263111902,0.9682432611902516,0.8855479185809301,-0.9517043085039234,0.44713508961430876,0.9318122734055597,-0.3932780540801606,0.930686458219413,0.33803540568874935,-0.9507511866737612,-0.28160177753258103,-0.48793049891269563,-0.8580169589422519,0.5388597122456141,-0.9787477454073229,0.8316925464324937,-0.7911365833067994,0.11721461674507244,-0.9961478891685043,-0.058086381772721844,-0.6721148172702569,-0.7201734519201443,0.00887184470465318,0.6777414667918448,-0.7550906913183874,0.9967875905559734,-0.10963839221444269,-0.9902797971978432,0.5940417821060099,-0.8217100667363777,-0.22660486074998354,0.8540754545105441,0.49457237486140954,0.2742767977038096,0.953087070943437,-0.3308490766722392,0.9054265676590245,0.38625569503567286,0.9105219660003027,-0.3423006859270785,0.9493355238346518,0.2859510871062154,0.4839662921920816,0.860337797294657,0.9798773178558481,-0.8285798898072676,0.584215183885541,-0.9885151094280673,-0.12171790663382956,0.9957399051256168,-0.7630078102554304,0.7162890130620932,-0.0032892662746166344,-0.7116830138725948,-0.6810696425074964,0.7521091858221557,-0.9971406087728146,0.10512884564394379,0.9909004880485758,-0.16394561123530488,-0.9811691873760439,0.5490641811648455,0.9679809924601795,-0.49850948382467053,-0.2699121568134416,0.4461984180752015,-0.9077823136788835,0.9350663236977332,-0.3820679719362435,-0.912387959304558,0.3465589239289955,-0.9479003300817342,-0.29029451373762816,-0.8574787730350529,0.23300732638782362,0.5311958069001208,0.8311108076709883,-0.5805279549259021,0.9878194871633393,0.6278147638080402,0.7593873487576063,-0.06714010670250767,0.9992966630235034,-0.7264375247811542,-0.9997611288814856,0.6843838064094623,-0.7491122069981976,-0.11067893159202345,0.7870957955158873,-0.9915007928592429,0.15946953404631606,0.9820351781823976,-0.5528494335249812,0.8493218152584812,0.502436336829404,0.9527696526654321,-0.45025303648009063,-0.32227490157136995,0.39648338675303796,0.3778723884582214,-0.9256226444664503,-0.43213854034069016,-0.8885847844991109,0.2946319680684322,-0.9639340705722385,-0.23741584499836815,0.9780263354074732,-0.833624626887137,0.5768287826215068,-0.12067871327100813,-0.624277837050689,0.9948624890470946,0.0716649437919492,-0.9991162968219097,0.7295471755857298,0.9998499783847106,-0.046987466063459375,-0.9970609487994804,0.6433977298531504,0.09610335679846743,-0.5968447249604346,-0.1549901760512831,-0.9828809653368914,-0.8522555290415161,0.9702183061467385,-0.5063528530874949,0.8769742888322736,0.454298391718242,-0.9039400258931622,-0.4006433282150331,-0.3736690309183801,0.34557670222825304,0.4280437117433719,-0.944971468342061,-0.48091029196547225,0.962717001953534,0.24181947919419422,-0.9770706527940942,-0.18382360953349505,0.9879818495111146,-0.8021028121899022,0.6207280668714685,0.7652583281619882,-0.6661514168921965,0.9989153755543908,0.7092277557879615,-0.9999182577277985,0.6909698263295635,0.9973981881886823,-0.6468633830921132,-0.9913640457461147,0.6004778850963151,-0.8171103676145246,-0.5519767595706826,-0.20889738414658793,0.844498283137415,0.266551143328863,0.9554853882176312,-0.4583344005635648,-0.9362973387890154,0.4047950271430508,-0.9260183382496745,0.917873162896106,-0.42394007689722973,0.29363136741515694,0.4769285254873833,0.8644004095226356,-0.5282366405576395,0.9760948686652604,-0.8386007628598665,-0.9872705940077994,-0.12967888183228404,-0.6171655263006764,-0.7681702322073792,0.6627617178728296,0.7288307616215669,-0.021430743327159715,0.9999659655060218,0.7467964765017627,-0.9977149078590316,0.6503157282511994,0.9919486614292704,-0.6040986914526063,-0.14602198632843175,0.5557532701554416,-0.8474749627946349,-0.5054497968678233,-0.2621767393603985,-0.9568137837059165,0.318970224386975,-0.9000233505658974,0.9413433158171708,-0.915643247774146,0.3540750282608069,0.41982772022735526,-0.2979641671985098,-0.4729369470411438,-0.8666721175643095,0.2506117320558347,0.8355465603118982,-0.5739753441046576,0.9865390271431238,0.13417501051693184,-0.9945032377141917,0.7710663324971763,-0.08523023656814205,-0.7319288732243922,0.702803401114467,0.6902126530804633,0.033391231155469075,0.9980111012945763,-0.09263006059435583,0.7757756380554062,0.6077070695375665,0.9835177769668069,-0.5595183470911425,-0.20001749512608696,0.5093583073856931,0.25779694156523053,0.9581224944283093,-0.3146681075826979,-0.9394447759833252,0.37043062242801433,-0.9225559654402681,-0.3583133082403157,0.9438243270095912,-0.8967605537855776,0.31192027955679286,-0.24520332246230003,-0.5205123784907537,-0.8380300023360696,0.5702552283535061,-0.9857871639677931,-0.13866837878600494,-0.6100024274176994,0.07966656224165754,-0.9987468457942876,0.7350119266740378,-0.6995695022390634,-0.6934876606913944,-0.02885765458441861,-0.9982867624016557,-0.7792862567680279,0.9930566583748048,-0.14705759555161546,0.8091905899138309,0.5632719129179288,-0.842624655660973,0.9744532307226672,0.8730899527605446,0.46143243946693246,0.3103595170338563,0.940989519525968,-0.3662137230428589,0.9207962911726728,0.3625442165517852,0.8942761624692718,-0.30661128748073196,0.9605152769836075,-0.8711619965005672,0.5166341447292796,0.840496203362371,-0.20162631673889841,0.133137492799659,0.6144166188013319,-0.9935124858649875,-0.0841870885528688,0.9985095691371783,-0.738079858542085,0.6963212109477983,0.6967484010096898,-0.7376780251512581,-0.6529621318428784,-0.08359381945380075,0.6068753205639383,0.1425696335256543,-0.8065172958986319,-0.2010431406032097,0.8401734737708728,-0.975461896125007,-0.8708695190969153,0.9606807542832376,-0.47438331426059827,-0.9425149038592071,-0.9229594243002941,0.9210283474984978,-0.36676766615169554,-0.8962967874897142,0.3109254300802635,0.46090416208997764,-0.25398772918667933,-0.8374583233126557,0.19615516863973548,0.5627798776231673,-0.13763150641329025,-0.6108316647072628,0.9929864450734471,-0.7796592166441716,-0.9982517498965019,-0.7003172041657759,0.9999999745136013,-0.6999948069513351,-0.998224959510352,0.6563907586907098,0.07907307270360645,-0.6104740884436943,-0.1380787383794694,0.5624065716462605,0.19659791956114733,-0.8377050067847364,-0.25442443914569585,0.8686311688199404,0.3113545604430153,-0.8964969350276899,0.9440208976009344,-0.4254269003195328,-0.9227855325041738,0.3709835701499768,0.8982989727753489,-0.31523317593425765,-0.8706474904340606,0.2583721396751323,0.5088458706879248,-0.2006007964335088,-0.5590247964362136,0.983409953346423,0.6072341438227437,-0.08314384826666447,-0.6533040597604025,0.9979733933764374,0.6970722288919156,-0.9999907119367315,0.70322681172722,0.015253735838114912,-0.6598058814496172,-0.9934610337050102,0.6140602968895049,0.9849370425346353,-0.5661512307069692,-0.19214865386161095,0.8352193054869435,-0.977419001336715,-0.4645248617311068,0.9631599572566556,0.8944781438519653,0.36296500267254894,0.42952735640920303,-0.4176101419616622,0.9411422419041342,-0.9002826771347242,0.3195344364183966,0.4528347564486706,-0.2627512346098492,-0.8423814131929205,0.20504229721763526,0.5552582142942849,-0.1466109466616051,0.8206562850348298,0.08766305059635504,0.7335905918995203,-0.997674505303682,-0.6938129125792141,0.9999608763043786,-0.7064443488445136,-0.9987241454370898,0.663207429859438,0.9939686700011181,-0.6176338721214196,-0.12908851835404409,0.5698842421988134,0.973980842492553,-0.83271642101644,-0.24564105571669048,0.46853677346635414,-0.9643698484019633,-0.4152960060828617,0.9469745897766966,0.9176367143242806,-0.9262429126722318,0.3793923945593438,-0.46677742807615075,0.958251700033482,-0.8750739713530847,0.2671249238986303,0.844816987584384,-0.9687032756365441,-0.8115835110572222,-0.9937484237482274,0.6000016979901094,-0.09218044941249073,0.7881077416794123,0.03293993644506209,0.6905393222823897,-0.9999104682303585,-0.7322364715195964,0.998942920365126,-0.6665953339392783,-0.9944558571346965,-0.807753416511987,0.12458937843281692,-0.5736055293216273,-0.18323835471480585,0.5239953682449969,0.9600972880416186,-0.861809080647587,-0.2983951695109832,0.8903853964539893,-0.9484222274436939,-0.36481895484252047,-0.4093504175093221,0.938037275845899,-0.9041944802107938,0.32811714744878484,0.8772602298181374,0.9724810785796378,-0.8472351813476564,0.21391255233937026,0.8142251202424208,-0.9808506578034295,-0.7783463488605508,0.09669595177751185,0.6429418427091268,-0.037472898618558126,-0.6872515253498226,-0.021882180544862666,0.7291398561255492,-0.9991411437941535,0.6699695239889519,0.9949225850827246,-0.6247428291248025,-0.9871986756110136,-0.8388466538994817,0.17877750458131844,-0.5278531827201746,-0.23683745785562824,0.4765315966294106,0.9433281069885399,-0.888311524432839,-0.3502524397772116,0.9139937863374938,-0.9296240699370304,-0.9364558290393001,-0.45873567624111355,0.95561851337744,-0.8794284401921774,-0.9714143246215002,0.8496359447326415,0.983787610342052,-0.5438902382203693,0.16005725452747785,0.7811860533339446,-0.9900500379437059,-0.7427698227703147,0.04200508985287124,0.6839495894221697,-0.9997479393287682,-0.7260282399574589,-0.07663852940578668,0.7655489189670445,0.13565976381371378,0.6282780646419455,0.9879119538018362,-0.7901310343178484,-0.9769744127348194,-0.8674186903110318,0.23242830484679708,-0.48051434357775147,-0.28972473264604826,0.42763558239724414,0.34600039076223016,-0.37325015855136456,-0.4010570065619535,0.9348551162960299,-0.9080318748056219,-0.9542724161419087,-0.5067421789997325,-0.2802126586466403,-0.8520192283478419,-0.9829640582108344,0.8194580308484852,0.9921373129011948,-0.7840096862740473,0.1057208956009636,0.6359674425648962,-0.04653641690611368,-0.7049608600441747,-0.012812020740747634,0.7229016870313723,-0.9994759202656796,-0.7626228357014927,0.9957946254348019,0.7996570813130075,-0.988604907436445,0.5846982801017988,0.9779320973705654,-0.5355361535651395,-0.9638137981054061,0.4844872047860222,0.28538052872016306,-0.8841089970767385,-0.34174122339589674,0.37745428527972963,0.396897881822769,-0.3218474171848516,0.9099225699985922,0.9529066864246665,-0.8837105386109374,-0.9692208836237145,-0.5532256395308988,-0.22718470090732099,-0.8220492246113908,0.16900514897320087,0.786817189589562,-0.11023015138699967,-0.7488130090007478,0.05106678655417669,0.6773035725972624,0.00827649880890339,-0.7197602616706332,-0.06759062408271899,0.759681062808303,-0.99619991989815,-0.7969253254584427,0.9892775222585342,0.8313618291559083,-0.9788696627681448,0.5393611518712732,0.2235957442236286,-0.4884500985195695,-0.9477563866930336,0.4358181183843382,0.9271605896380922,-0.9083884618124527,-0.3927305916055993,0.931596025122592,0.4466024738923539,-0.2694773452358781,0.8858243385589909,0.9680942417102687,-0.8567331605019876,-0.9812563030217751,0.8246235061529069,0.9909611631606468,-0.7896085055210308,0.11473713938095197,-0.6887710108271541,-0.055596105592648444,-0.7113657319541566,0.9993498923442988,0.7166040285045607,0.06306453903949502,-0.7567236608092948,-0.12216607998813578,0.7941771742626604,-0.9899297844302332,0.5920334283670834,0.9797870896387935,0.8605678720861921,-0.9661923700656526,0.49240294324880346,0.2766745967516112,-0.4398959791271215,-0.3332018842534204,0.3858391560234464,0.9052347939869774,-0.9299377137425107,-0.4425395858503627,0.9501164423383519,0.4949647770134135,-0.9669476829552865,0.8590637120600443,0.980372135098002,-0.8271808225117047,-0.9903425012036222,0.7923835766420229,0.996823653282359,-0.6254078940263066,0.060124280838731586,0.7145462481225591,-0.0007949625642231368,-0.6717804050395485,0.9998238605235208,0.7537506905478283,-0.9969490157085223,-0.7914126842640529,-0.17637435884318037,0.8262863413839672,-0.9806843591080623,0.5469777807892953,0.9673518516066071,-0.49634565765087485,-0.9506111316478909,-0.913000291749368,0.3289218881592072,-0.39001972753478475,-0.384371857842287,0.33470053229631813,0.4384675933323553,-0.9486919853736592,-0.4910185023859841,0.965781230947204,0.5418394355535914,-0.9794677977365646,-0.5907513385053347,-0.18240068359483372,-0.7951423458603156,-0.04444476306157124,0.7577620935569956,0.9996901336377843,-0.6672302125641353,0.005330715376093855,0.7102473987955759,0.054008569769069086,-0.6301760041917814,-0.11315756977653359,0.7886319123371545,-0.9911731975648544,-0.5337667226515099,0.981561452716205,0.8559120582576958,-0.9684914315793999,0.5002781606113481,0.9520091829719205,-0.44802446663871365,-0.9321727778065734,0.3941922750741019,0.3801805862624352,-0.3389712496325174,-0.8827286227077719,0.28255594722363064,0.4870621259138353,-0.9645949096837257,0.8636717464040526,0.978543309542618,0.5870855650803048,-0.9890440667552348,-0.6340810518925606,-0.12824356962127728,-0.7607140239981498,-0.9995669437221156,0.7208631137198165,0.9995519888583851,-0.7070471330291741,-0.04947887185255583,0.7477582902111531,0.1086497762968304,-0.7858349156914716,-0.16743788153475778,0.8211428563912085,-0.9824183524185588,-0.48662197733575946,0.969611086539171,0.8829652831192424,-0.9533876483762932,0.4520749261781449,0.9338051969914959,-0.39835671279854856,-0.9109327260551198,0.34323499322961826,0.43029663015030195,-0.9457845481291214,-0.8556513739256822,0.2295621242996773,0.5341927657784628,-0.1714114717044465,0.8347504561204191,0.988364320976884,-0.8006107518979969,-0.995647707994127,-0.6755049988808531,-0.07370101235914751,-0.7239993331902379,-0.9996774634760007,0.6817975390975426,0.044948155995012014,-0.6371936088408208,-0.10413974753848981,0.7830217518703059,0.9793660875106278,-0.818545746991442,-0.22121494928721153,-0.5583181314237584,-0.9707107934509832,-0.4380146621945567,0.9547464995015004,0.9073647059739777,-0.9354184047718536,0.40251295503212053,0.3717746648448846,0.950767412577017,-0.8869548145681905,0.2912460992354216,0.4791193932235675,-0.9621627574247748,-0.8260024166328878,0.9766339571502696,0.5797178591273326,-0.11716262407238746,0.8033202762145197,0.9952147476456843,0.6721535812674668,-0.9992588738366849,0.727120657643862,-0.0189369425435323,-0.6851086215125555,-0.9967833961759479,0.6406827834801744,0.09962757628744554,-0.5939996664234307,0.9928853505330292,0.815931797448195,0.9668190792556809,-0.8487963928372814,-0.27432714302074446,0.8786704750692971,-0.9560857083915627,-0.9054487905914181,0.937012367958725,-0.4066609162674215,-0.9146377083421996,0.35174120847560875,0.4220902567556962,0.9663221631241069,-0.4751332004132466,0.2383818486474793,0.5265021359114934,-0.9756491322334451,-0.7938708624443835,0.9869438422344683,0.6235005777222354,-0.9947613124988495,0.7694756718664734,-0.08274474053993083,0.711719791202693,-0.9998667107200977,0.6884056090189717,0.9971366511352154,-0.7386544671708709,-0.9908934401046142,0.7773471545365985,0.15400756027480558,-0.549020424473956,0.984867713878236,0.8463895139448775,0.26996256674895375,-0.8764959332050796,0.9574052474946056,0.9035142471876345,-0.9385870537591126,-0.9273492638958175,-0.43627158742390226,-0.35598350512403465,-0.8911080166436389,0.9412775355933652,0.4711372325704406,0.9789725778555625,-0.522640533579192,0.18480112795542009,0.5723024467059067,-0.9862031384942627,-0.619948001126175,0.06708787133833301,0.6654093301306514,-0.9988685723774096,0.7333183649453681,-0.02800596819968425,0.7491468871248422,-0.031350832984747286,0.6476215184717753,0.9914939802887557,-0.774485837768947,-0.9820252978574935,0.5528058076612161,0.20792466584515978,-0.84396522207231,0.9738900017080155,0.8743033589739119,0.322324461277379,-0.9015611155624651,0.940142429776617,0.9256424562275475,-0.35910863528498904,-0.9464625366334544,-0.48492795110702486,-0.3042361654587104,-0.8649000494929558,0.24718195594197956,0.5187681788343265,-0.18925686514244305,-0.5685770411154438,0.13066497704021943,0.6163826701870275,-0.9937930555455772,-0.662016635358364,0.012308163967979189,-0.7363946202862895,-0.9999736763698951,-0.7461346741642546,0.026816977659082173,0.7843223797841484,-0.08607913608713791,0.6048909648889055,0.14503801708471661,-0.8079894474574918,-0.9702056231367662,0.5063077066716034,0.2612168420937901,-0.8720927974841641,-0.31802746025553513,-0.47218605425233856,0.3737175914403918,-0.3455275738167751,0.9200539609095644,0.9449885946075038,-0.4097157805685323,-0.962731162784063,0.8671678518913135,-0.2515744268222435,-0.8360925764150103,0.19370870870131462,0.5648399380493209,-0.13516050836568871,-0.7652246260066867,0.9932782536593286,0.6586103207546048,-0.998396071463197,-0.702095541218391,-0.04250853628404603,-0.6982113252475284,-0.9980733030238674,0.6545069590287568,0.0815593235775238,0.8171405472515683,-0.9836971179066928,0.5603423773615375,0.1990429365514058,-0.8390645992461178,-0.2568358736383668,0.45828786928564863,0.3137239163763358,-0.8975992487585966,-0.36950663455410593,-0.42316824707768025,0.4239874922838536,-0.943495211098192,0.8972002179207355,0.9614945164164035,-0.8694178138316376,-0.9761062460732917,0.8385722423761421,-0.1981565670431596,-0.5610912143918806,0.13965325900069303,0.6092140389420911,-0.08065791905046428,-0.7287949145665626,0.9981290080973731,0.6988584808208674,-0.9999983516229154,-0.7400642592920122,-0.09719747473042166,-0.6579295166527478,-0.9931731640187048,0.6120897321630839,0.13605653834446693,-0.564093408822892,-0.9723635563674681,0.5141096491845053,0.2524496212351875,-0.46231455801474375,-0.30941391817765035,0.40889062183560726,-0.9446923811307547,-0.9204079148163187,-0.4198752358017798,-0.3728785838461832,0.4729830747827585,-0.9602380889849834,0.8716498890249067,-0.2603437512137257,-0.841034656183766,-0.9865475869332153,0.8074562566443519,0.9945087180578045,-0.6056108861183204,0.08517807354592659,-0.7837610212094697,-0.02591290780593684,-0.6901747688661037,0.9999798294515395,0.7370061822684993,-0.9985950802812544,-0.7758086724535079,0.9936920412697687,0.8118778027162548,-0.9852879869988279,0.5678328350514592,0.1901448275042528,-0.5179947951579259,-0.9581075012641451,0.865353646092367,0.30509755433013447,-0.4130256772185875,-0.36106200171768094,0.3582644305374451,0.41575434112295184,-0.940450242923815,0.901169463464916,0.9589619063385939,0.5205570799478275,-0.9740949170844461,0.8434797671780354,-0.2070399621320957,-0.8101237213955594,0.1486300485365499,0.7739134155477334,0.9987494645751351,-0.6483103601363633,0.030446880582332678,0.6923412935549321,0.028909986145931904,-0.7339329426350761,0.9988251549737582,0.7729387700271458,-0.9941904750494543,-0.8092213488511466,0.9860530237640098,0.8426528468845791,-0.18568985934970733,0.5218692842967043,0.95939672796693,-0.47033931889236946,-0.9409717999751723,0.891518053833069,0.3568284995010554,-0.9168234818175156,-0.411624893027552,0.3065614552672443,0.46497103338525037,-0.9576659947324555,0.8760601958550794,0.9730591816995848,-0.845907525055079,-0.9850240479174306,0.8127745192716955,-0.15311390275569792,-0.7767779140266212,0.09421303241012267,0.738044533988886,-0.03498022696754705,-0.689061300766221,0.999881067418314,0.7308446036182592,0.08364598950230642,-0.7700529657408854,-0.14262145193305362,-0.622793254518285,-0.9867977742172039,0.5752765643220198,0.9754503682270443,0.8708952503490611,-0.2392600632660339,0.47433722594551586,0.2964460850242173,-0.4212702112505608,-0.3525876561637269,0.36671896061862724,0.40748697647173404,-0.9373278826885585,-0.868381398345569,0.956350380827677,0.5127902289564584,0.27345734210094885,0.8483178798680354,0.9842318727552699,-0.8154085957372419,-0.992992633364207,0.7796264316619547,-0.09872765090042,-0.6413769127532372,-0.9999999613232521,0.6999574179163366,0.019841156763768592,-0.7277412287552085,0.999223652819567,0.76715131896509,-0.9951259715978857,-0.8038585511843047,-0.19664925097754543,-0.5789807142223357,-0.9764391969642147,-0.8686571066093988,0.9619159415386688,-0.4783253743419562,-0.29211115755462735,0.42537952028272236,0.3483395589536111,-0.3709349522057467,-0.40334067658587563,0.3151834913752796,-0.9069841822277684,-0.9550150916907076,-0.8399000950909992,0.9709276756907443,0.5590682045446221,-0.9834194487481103,0.8180258966006939,-0.16207206886113887,-0.7824589098504782,-0.9979767233913432,0.7441351327975215,-0.04404466751662521,-0.6824588542764254,-0.998481941250653,0.7246228818924206,0.07460290677828493,-0.614018975646134,0.9955630151204304,0.8011523177127298,-0.9882263553175611,-0.8352480943697668,0.9774079371770266,-0.5334280147030471,-0.9631458765792207,-0.8945015504445846,0.94549042218239,-0.42948007787712794,-0.9245037783845662,0.9113054616574716,0.3991860786728267,0.9595534754626215,-0.45288143383367757,0.2627007203547085,-0.8825403694815482,-0.9698319489187638,-0.5553017547088092,0.982586792610151,0.603665869081457,-0.9918797474951518,0.7852752903189194,-0.10775070159752725,0.6938506142096965,0.04857557519551858,0.7064072937808182,0.010770694601961988,-0.7214896271844142,-0.9939629273336585,0.7613007370547753,0.1291404335447221,-0.7984296019369835,0.9889101565741727,0.8327454079398934,0.24569180472124394,-0.8641272522531099,0.9643559965821722,-0.48627206717053273,-0.28342336289800807,0.433571799671995,0.9262231779839473,-0.3793439547916545,-0.9022252827996439,0.9324997960294188,0.44883282209627373,-0.2670744725507059,-0.5010610303643677,0.20942838748816622,-0.8554440318304436,-0.9817339214718325,0.8232099564820476,0.9912926894517726,-0.7880755151251886,-0.9973588956638615,0.7501644948188488,-0.05310548351712624,0.7322721258272074,-0.006235084484991799,0.66655630776196,0.06555368478985622,-0.7583519222857202,-0.1246413237493228,0.7956904598721689,0.18328982144743092,-0.8302255892334136,0.9792850727227462,-0.5410790953575593,0.2984451374119718,-0.8904092268949237,0.9484056295962265,0.9158456938130792,-0.3355526187934405,0.3835367927899593,0.390852330828385,-0.3280676920339378,-0.8772350981915347,0.9508914496194991,0.49713057313375286,-0.21386141047559526,-0.5477346596805618,0.9808608528794827,0.5964089457237622,-0.9906852372994716,0.7908595266595705,0.03742058193329433,-0.7531560567826617,-0.9998404253650891,0.6724500531825138,0.001699346092091123,0.7684927522296311,-0.06102700426707667,0.6247019491292403,0.12013964967723736,-0.792934947871331,0.9902167101604925,0.5278087163847287,0.23688832144402988,-0.859526286650461,0.9667166922990569,-0.4941787434243787,0.35030147639328796,0.44172839932662106,0.9296047759476544,0.9364741925721499,-0.3866733523492415,0.3323490444243669,0.8794035171376101,-0.2758054033065318,-0.4931898883132801,0.9664251452745345,0.5439341701678391,-0.1600055758576111,-0.5927620415543589,0.9900574035355116,0.6395014701774087,0.12126842002280207,0.7561321238812139,-0.017399624590681458,-0.7159729453915451,-0.9993168782212211,0.6732912225892846,0.056499068220690986,-0.6282373334151066,-0.11563550394251644,0.5809700135204459,0.17436452806494918,-0.8251347627054408,0.981081620389908,0.4804684296709173,-0.9678672194458151,-0.8862436292878485,-0.3460495100515645,-0.44579310937864425,0.40110496451079963,0.3918987108975954,0.9080099426635115,-0.3366235593159582,-0.43663191731465373,0.2801624022427692,0.8519918196236247,-0.22271416586870935,-0.5401224901633165,0.16448125410144937,-0.8308588944047174,-0.105668835448165,-0.7457642103009662,0.996278280770861,0.6806719368589532,0.0666882805033302,0.7191321233165868,0.9994742241613354,-0.6766379368923221,-0.0519699698050439,0.6317597928194089,0.11112897921006083,-0.5846558075571623,-0.9779211582008914,0.8225638596187773,0.2280653440196956,0.5524720328584949,0.9689978344216218,0.431684067966563,-0.9526320298851122,-0.9102973166639338,0.9329098743517569,-0.39606761897512377,-0.9099008537031006,-0.9529225620038209,0.8836860342343841,-0.284513637328826,-0.48527816040222954,0.9640544913919331,0.8220194125959919,-0.97812064407221,-0.5854317233761901,0.11017811686830241,-0.7991137105446957,-0.05101450138817454,-0.6773420882602826,0.9995047873877961,-0.7222765063591401,0.011907705591874032,0.6799707305562461,0.9961953587588722,-0.6352692548737213,-0.106620168193715,0.5883295733257922,-0.9920237197653101,-0.53931706566247,-0.9649992823209291,0.8524923344947793,0.28108069670740915,-0.8820051004210625,0.9540016707565598,0.908410350952993,-0.9345336509771105,-0.9316150540633409,0.9117730451280732,-0.3451517249825109,-0.8858000442798025,-0.9681073594342555,0.48130728008158086,-0.23154859354229407,-0.8245938896465841,0.9771669694319671,0.7895763798161453,-0.9880517438344435,-0.6289814084935166,0.9954553750973658,-0.7649667453131322,0.0037931596357959124,-0.7166405429870114,0.999727225938525,-0.683289535014671,-0.9965803947622424,0.7433750465659326,0.989922371964783,0.8288619015774736,-0.16094991364756692,0.5431310960850049,-0.9836250180292431,-0.4923573758794229,-0.27672490609208283,0.8798585955314316,0.33325124549256957,-0.9065046962919168,0.9361382012112358,0.9299569637089948,0.4425865331055531,0.3494052003054172,0.8878958305424994,-0.29319845799469135,-0.8590369128149868,-0.9803824555407613,0.5286210925267134,-0.17788761738563988,-0.5780532285210337,0.9873425169787577,0.754760230650698,-0.06007202206430885,-0.6706406544780492,0.9991782096077961,-0.7285206293418203,-0.9998228765705325,-0.7537850941033709,0.9969449278714257,-0.6422488983971472,-0.9905545032136164,0.7789138346926557,0.9806741175950234,-0.5469339525375808,-0.2147959150494159,0.49630020767210425,0.27236342234703187,-0.4439178782068049,-0.3289713280194442,0.9045803918862081,-0.9377234920433253,-0.9282797411207361,0.9154611154518624,0.948708538309226,0.49106410933667194,0.2975318648995429,0.8613499949114765,-0.24036396648865344,-0.8296918974112016,-0.9897109568289912,0.5743461044345992,-0.1236919899521686,-0.6219032128473524,0.9945505508496857,0.6672692071647359,-0.005278362708022162,-0.7102842521140807,0.9998979575999752,0.7507967953808878,-0.9972889505867926,-0.7886641015639606,0.0930809452738741,-0.599277946456899,-0.981551444183164,0.8121115533151081,0.9684783918002179,-0.5002328289582411,-0.2679963352021366,0.8755113256416578,0.3246846425380735,-0.39414416028955523,-0.3802290080481465,0.3389219952559726,-0.9172769184750986,-0.9472647887809627,0.4161185421375392,0.964608715837593,0.5380657646638263,0.24476428067635236,0.8322153232426562,-0.1868070475114252,-0.7978531961689354,0.12819164833857116,0.7606800410316072,-0.06912459925978194,-0.6638840319574959,0.9987694068920177,0.7070841546301563,0.04953116106537699,0.6931613318185652,0.9976124558306788,0.7858672918615698,-0.9917576163594485,-0.8211727345427398,0.9824085770714235,-0.554505830815937,-0.2059273821556851,0.504155158831046,0.9533718495227607,-0.452028227370488,-0.3203912772394948,0.9006759925805206,0.376030004705678,-0.9248680376590386,-0.4303438883270768,0.28685382167617046,-0.8940734173429123,-0.96340277864004,0.8659229495839392,0.977609707412879,-0.8347216277030675,0.19126104358925766,0.8005793814365568,-0.13268866940658444,-0.7636165021022467,0.07364880123477185,0.7239632187844094,-0.9985341814319116,-0.7038695101295737,-0.04500045642554394,0.7447739207499262,0.1041918161378793,0.6526190873013971,0.992328573504504,-0.6065153415505786,-0.9832454986257958,-0.8512132865079941,0.9706982141615094,-0.5080671165954594,-0.2592457102068877,0.4560694940867137,0.316091320452171,-0.4024650294258166,-0.9127732234015479,0.9231336269754162,0.4262451874651139,-0.9443188548917927,-0.4791653457542877,0.9621770211195771,-0.8681827280793885,-0.9766452070583657,0.8372107592296159,0.9876724378209251,-0.8032890961871662,-0.9952198618299396,0.6111901437894193,-0.07817148801481447,-0.727084715528009,0.01888459850096903,0.6850704842113267,-0.9999997697424097,-0.7417394687515324,0.9981978877040447,0.7802252268041718,0.15853931682476044,-0.8159620643548791,0.9840621916280873,-0.5620320773882678,0.2743774875857818,0.5119686217698098,0.9560703629675152,-0.8688554440922663,-0.3117848606401733,0.40661308673019503,0.36760887609301796,-0.35169220011377317,-0.42213771735581057,0.9428167311383102,-0.8980999091874396,-0.23833100418597536,-0.5265466446832336,0.9756606139411974,-0.8396826666127847,0.20015713961088963,0.8059822846731338,-0.1416744295703116,-0.7694422339424505,-0.9990762513358061,0.6536468368161924,-0.023419357802592283,-0.6883676347931972,-0.03593636295977111,0.7386897567641584,-0.9984598022892901,-0.7773800875247601,0.9934092302069248,0.8133315218911198,-0.9848586392762716,-0.8464173943420413,0.19259303696738972,-0.5158595940874691,0.32666431280547914,0.46412379607976095,0.9385689883220295,-0.41075277868328214,-0.3633869240727817,0.9196078661141837,0.41802156250316214,-0.2998623400392691,-0.4711834107648352,0.9596661463884182,-0.8726486549347782,-0.18474967603585804,0.8421372989974139,0.9862118037060441,0.6199890790036474,0.14616298379976606,0.7723313848577971,-0.08721194383774349,-0.7332827696242442,0.027953635291992983,0.6941389573728445,0.031403160611661124,-0.6475816262697587,-0.09064931565282422,0.7745189550131302,0.14957609142538197,0.6172776647517527,0.9856348251848347,0.5023458030804213,-0.9738781150822046,-0.8743287690654479,0.24607999699184735,-0.46813666565344164,-0.9401245874025487,0.41488402011817466,0.9182466915946013,-0.36016963872812335,-0.4138968075898373,0.9397543245307267,0.8648737698238009,-0.958381080834567,-0.5188129358318312,0.9736312308569607,-0.844574605883746,-0.1306130723042483,0.8113188615617595,0.9937988782176046,-0.7752046464091302,0.09172952688910313,0.7363591994627846,0.9999732951338979,-0.6949193825439625,-0.026869312198584842,0.7325448041050328,-0.99892200181485,-0.6048492746089121,-0.14508981671001495,0.8080202928168237,0.20353715216245002,0.5732345340001767,0.9748980390509775,0.8721184149316867,-0.959970545232317,-0.899612299312612,0.29882734969273494,-0.4190067260418239,-0.9200334480211038,0.36439728681156797,0.409763537475436,-0.3085039885901491,-0.4631627008848602,0.9570762982704331,0.836063854800101,-0.9725864826408909,-0.5648831393302528,0.9846700116941596,-0.8139621401737054,-0.07608390360997964,0.7780619594841316,0.9983990340951008,-0.7394204800019515,0.03702037170672314,0.6875804075237902,0.9980700533469877,-0.6544673760273056,-0.0816115024544248,0.6084550616842634,-0.9948769076998761,-0.5602990143060576,0.9871263483256197,0.8390930800131295,0.2568864704978676,0.5274685144943235,0.9612311418222309,0.8976223255594188,-0.9431777297129537,0.4231208116367843,0.9218012763726288,-0.36861743805978203,-0.8971770961705271,-0.9615089030768943,0.4591380115017579,-0.25591111229766783,0.8792127835582332,0.9715217251633043,0.8047411026602547,-0.9838687208656163,-0.6092555546625615,0.9927493112210066,-0.7809032652985949,-0.9981322077808857,-0.6988959261577109,0.9999984453103381,-0.7014139435976485,-0.01780005029283127,0.7263395684564532,0.9931670556680299,-0.7658401883506682,-0.13610840473220598,0.564050179268684,-0.9878416548723682,-0.5140647436836501,-0.25250027856914065,0.8676439255858942,-0.9624719627668546,0.4801171585895695,0.9446752101297898,0.9204283816118126,-0.9235501402792077,0.3728300056505534,0.8991711819000853,-0.9350157923793139,-0.871624227906676,-0.9751222185801145,0.5071325203135674,-0.20254908070954275,-0.557374415034125,0.9830471886632874,0.6056525460822164,-0.9921938861048126,-0.6517968180294016,0.9978448466466519,-0.7454973415732128,-0.9999801606002238,-0.7370415661918028,0.013264823384315366,-0.6612992679870688,-0.9936861688226901,0.7629156748101336,0.9852790383333506,-0.7999289109243206,-0.19019622551547335,0.8341238057342474,-0.9778373881818793,-0.8653798824286354,-0.3051474111640285,0.8935870183568916,-0.9461532555106007,-0.9186458330176042,0.3421667657705833,0.9404680381998715,0.46902811661592375,0.3214186380339722,0.8738385776770299,-0.9530439189773616,-0.5032180747305381,0.20698874281184051,0.5536028137050684,-0.1485782764243011,-0.6020370772627058,0.9916180483391559,0.6483502198827527,-0.030394551407742148,0.7485127975845357,0.9999413030517016,-0.7078507835001806,-0.008729323575317286,-0.7729719861885301,0.06804242269292346,-0.6191970200924611,-0.12711579204492354,0.7971987950322567,0.9744297092243726,-0.5218246247940024,-0.2437124008052987,0.8630980355976798,-0.9648941760167451,0.48805490297153864,-0.3568774059873614,0.9168443848961638,-0.926990831229194,-0.9389167393205119,0.3931470082937861,0.9576810650043677,-0.876034949750864,0.26904122855487544,0.49929327631797965,-0.9682076182721903,-0.5498198229688243,0.15306216646394097,0.5984092225859612,-0.9910218097708887,-0.6448902830671672,-0.11428727710530345,0.6890992404943854,0.02442816001496476,0.7110473923005051,0.9990323794180735,-0.6680767399351487,-0.0635164722959909,0.6227522930702298,0.12261551665874743,-0.5752337405967831,-0.1812825571641321,0.8290858892695186,0.23931089576535977,-0.47429113633033254,0.9660755184892214,0.8894781755883457,0.35263664688618224,0.4394892606245553,-0.40753478561924633,-0.385421340607091,-0.9050422836706399,0.32999548881726315,0.4429456252881843,0.9720157273014675,-0.8482901582439012,0.21585520047445425,0.546025520653794,-0.15754290751788985,0.826926270041241,0.09867555313350697,0.7410623058246437,-0.9968596155549535,-0.6858052347181575,-0.0596722527841702,0.7277771344351532,-0.999221588904347,0.6714448939362584,0.9951208075670624,-0.626294754011522,-0.11811271867331392,0.5789380275391978,0.9764278981428882,-0.8265413195549431,-0.23490446732335568,0.8584811190599819,0.29216122713243525,-0.4253321390799982,0.9504704793579154,0.913184938706195,-0.930355237727786,0.38960270849310435,-0.45696729644530343,0.9550306161611589,-0.8803735804337454,0.2777671142099651,0.491412944198987,-0.22028181362295055,-0.8179957827755474,0.1620204074027572,0.5911166544610469,-0.10318816444934886,0.7948676511352619,0.04399236485733577,0.6824971197017377,-0.9997013034860907,-0.7246589600186086,0.9993902411584953,0.7642676531112307,-0.9955580874473204,0.6298243300364152,0.11360749072579628,-0.582630403846824,-0.17235397060653168,0.5333837310820626,0.9631317932619194,-0.8561461443382018,-0.2878203588443499,0.885296135380984,0.3441334514372065,-0.3750947820732482,0.9320087475414517,0.9341470729362955,-0.9088633203329075,0.33854518342599554,0.8825157497830737,0.9698447100129856,-0.8530588646987772,0.22470389485938058,0.8205964487472841,-0.16649457400183393,-0.7852428748015621,0.9891108140130865,0.6344311537914307,-0.048523283526998445,0.7604200126290104,-0.01082304495503256,0.7215258770146012,-0.9995383327107938,0.6781396915247291,0.9959748854655721],"x":[-1.6470993291652855e6,-4.5286443388456706e14,-9.057288661220349e14,-1.3585932983595028e15,-1.8114577305969702e15,-2.264322162834438e15,-2.717186595071906e15,-3.1700510273093735e15,-3.6229154595468415e15,-4.075779891784309e15,-4.528644324021777e15,-4.981508756259244e15,-5.434373188496713e15,-5.887237620734181e15,-6.340102052971648e15,-6.792966485209115e15,-7.245830917446583e15,-7.698695349684051e15,-8.151559781921519e15,-8.604424214158986e15,-9.057288646396454e15,-9.510153078633922e15,-9.963017510871388e15,-1.0415881943108856e16,-1.0868746375346326e16,-1.1321610807583794e16,-1.1774475239821262e16,-1.2227339672058728e16,-1.2680204104296196e16,-1.3133068536533664e16,-1.3585932968771132e16,-1.40387974010086e16,-1.4491661833246068e16,-1.4944526265483536e16,-1.5397390697721004e16,-1.585025512995847e16,-1.6303119562195938e16,-1.6755983994433406e16,-1.7208848426670872e16,-1.766171285890834e16,-1.811457729114581e16,-1.8567441723383276e16,-1.9020306155620744e16,-1.9473170587858212e16,-1.992603502009568e16,-2.0378899452333148e16,-2.0831763884570616e16,-2.1284628316808084e16,-2.173749274904555e16,-2.2190357181283016e16,-2.264322161352049e16,-2.309608604575795e16,-2.3548950477995424e16,-2.400181491023289e16,-2.445467934247036e16,-2.4907543774707828e16,-2.5360408206945296e16,-2.581327263918276e16,-2.626613707142023e16,-2.6719001503657696e16,-2.717186593589516e16,-2.762473036813263e16,-2.8077594800370096e16,-2.853045923260757e16,-2.8983323664845036e16,-2.9436188097082504e16,-2.9889052529319972e16,-3.034191696155744e16,-3.0794781393794908e16,-3.1247645826032376e16,-3.170051025826984e16,-3.215337469050731e16,-3.2606239122744776e16,-3.3059103554982244e16,-3.351196798721971e16,-3.3964832419457184e16,-3.441769685169465e16,-3.4870561283932116e16,-3.5323425716169584e16,-3.5776290148407052e16,-3.622915458064452e16,-3.668201901288198e16,-3.713488344511946e16,-3.758774787735693e16,-3.804061230959439e16,-3.849347674183186e16,-3.894634117406933e16,-3.939920560630679e16,-3.985207003854426e16,-4.030493447078173e16,-4.07577989030192e16,-4.121066333525667e16,-4.166352776749413e16,-4.21163921997316e16,-4.256925663196907e16,-4.3022121064206536e16,-4.3474985496444e16,-4.392784992868147e16,-4.4380714360918936e16,-4.483357879315641e16,-4.528644322539387e16,-4.573930765763134e16,-4.619217208986882e16,-4.664503652210627e16,-4.709790095434375e16,-4.755076538658122e16,-4.800362981881869e16,-4.845649425105614e16,-4.890935868329362e16,-4.936222311553108e16,-4.981508754776855e16,-5.026795198000602e16,-5.072081641224349e16,-5.117368084448096e16,-5.162654527671842e16,-5.2079409708955896e16,-5.253227414119336e16,-5.298513857343083e16,-5.343800300566829e16,-5.389086743790576e16,-5.4343731870143224e16,-5.47965963023807e16,-5.524946073461816e16,-5.570232516685563e16,-5.61551895990931e16,-5.660805403133056e16,-5.706091846356804e16,-5.75137828958055e16,-5.796664732804298e16,-5.841951176028043e16,-5.88723761925179e16,-5.932524062475538e16,-5.977810505699285e16,-6.02309694892303e16,-6.068383392146778e16,-6.113669835370525e16,-6.158956278594272e16,-6.2042427218180184e16,-6.249529165041765e16,-6.294815608265512e16,-6.340102051489258e16,-6.385388494713005e16,-6.430674937936752e16,-6.475961381160499e16,-6.5212478243842456e16,-6.566534267607992e16,-6.611820710831739e16,-6.657107154055486e16,-6.702393597279233e16,-6.747680040502979e16,-6.792966483726726e16,-6.838252926950473e16,-6.883539370174219e16,-6.928825813397966e16,-6.974112256621714e16,-7.019398699845461e16,-7.064685143069206e16,-7.109971586292954e16,-7.155258029516701e16,-7.200544472740447e16,-7.245830915964194e16,-7.291117359187941e16,-7.336403802411688e16,-7.381690245635434e16,-7.42697668885918e16,-7.472263132082926e16,-7.517549575306675e16,-7.562836018530422e16,-7.60812246175417e16,-7.653408904977915e16,-7.69869534820166e16,-7.743981791425408e16,-7.789268234649155e16,-7.834554677872902e16,-7.879841121096648e16,-7.925127564320395e16,-7.97041400754414e16,-8.01570045076789e16,-8.060986893991637e16,-8.106273337215382e16,-8.15155978043913e16,-8.196846223662877e16,-8.242132666886624e16,-8.28741911011037e16,-8.332705553334115e16,-8.377991996557862e16,-8.42327843978161e16,-8.468564883005358e16,-8.513851326229104e16,-8.559137769452851e16,-8.604424212676598e16,-8.649710655900344e16,-8.69499709912409e16,-8.740283542347837e16,-8.785569985571584e16,-8.830856428795331e16,-8.876142872019077e16,-8.921429315242824e16,-8.966715758466573e16,-9.012002201690318e16,-9.057288644914066e16,-9.102575088137811e16,-9.147861531361558e16,-9.193147974585306e16,-9.238434417809053e16,-9.283720861032798e16,-9.329007304256544e16,-9.374293747480291e16,-9.41958019070404e16,-9.464866633927787e16,-9.510153077151533e16,-9.55543952037528e16,-9.600725963599027e16,-9.646012406822774e16,-9.691298850046518e16,-9.736585293270266e16,-9.781871736494013e16,-9.82715817971776e16,-9.872444622941506e16,-9.917731066165254e16,-9.963017509389002e16,-1.0008303952612747e17,-1.0053590395836494e17,-1.009887683906024e17,-1.0144163282283987e17,-1.0189449725507734e17,-1.0234736168731482e17,-1.0280022611955227e17,-1.0325309055178974e17,-1.037059549840272e17,-1.0415881941626469e17,-1.0461168384850216e17,-1.0506454828073962e17,-1.0551741271297709e17,-1.0597027714521456e17,-1.0642314157745203e17,-1.0687600600968949e17,-1.0732887044192694e17,-1.0778173487416442e17,-1.0823459930640189e17,-1.0868746373863936e17,-1.0914032817087683e17,-1.095931926031143e17,-1.1004605703535178e17,-1.1049892146758923e17,-1.1095178589982669e17,-1.1140465033206416e17,-1.1185751476430163e17,-1.123103791965391e17,-1.1276324362877656e17,-1.1321610806101403e17,-1.1366897249325152e17,-1.1412183692548898e17,-1.1457470135772645e17,-1.150275657899639e17,-1.1548043022220138e17,-1.1593329465443885e17,-1.1638615908667632e17,-1.1683902351891378e17,-1.1729188795115123e17,-1.177447523833887e17,-1.1819761681562618e17,-1.1865048124786366e17,-1.1910334568010112e17,-1.195562101123386e17,-1.2000907454457606e17,-1.2046193897681354e17,-1.2091480340905098e17,-1.2136766784128845e17,-1.2182053227352592e17,-1.222733967057634e17,-1.2272626113800085e17,-1.2317912557023834e17,-1.236319900024758e17,-1.2408485443471326e17,-1.2453771886695074e17,-1.249905832991882e17,-1.2544344773142566e17,-1.2589631216366314e17,-1.263491765959006e17,-1.2680204102813806e17,-1.2725490546037554e17,-1.27707769892613e17,-1.2816063432485048e17,-1.2861349875708795e17,-1.290663631893254e17,-1.2951922762156288e17,-1.2997209205380035e17,-1.3042495648603782e17,-1.3087782091827526e17,-1.3133068535051274e17,-1.317835497827502e17,-1.3223641421498768e17,-1.3268927864722515e17,-1.3314214307946262e17,-1.335950075117001e17,-1.3404787194393757e17,-1.3450073637617502e17,-1.3495360080841248e17,-1.3540646524064995e17,-1.3585932967288742e17,-1.363121941051249e17,-1.3676505853736235e17,-1.3721792296959982e17,-1.3767078740183728e17,-1.3812365183407477e17,-1.3857651626631224e17,-1.390293806985497e17,-1.3948224513078717e17,-1.3993510956302464e17,-1.4038797399526211e17,-1.4084083842749957e17,-1.4129370285973702e17,-1.417465672919745e17,-1.4219943172421197e17,-1.4265229615644946e17,-1.4310516058868691e17,-1.4355802502092438e17,-1.4401088945316186e17,-1.444637538853993e17,-1.4491661831763677e17,-1.4536948274987424e17,-1.458223471821117e17,-1.462752116143492e17,-1.4672807604658666e17,-1.4718094047882413e17,-1.4763380491106157e17,-1.4808666934329907e17,-1.485395337755365e17,-1.48992398207774e17,-1.4944526264001146e17,-1.498981270722489e17,-1.503509915044864e17,-1.5080385593672384e17,-1.5125672036896134e17,-1.517095848011988e17,-1.521624492334363e17,-1.5261531366567373e17,-1.530681780979112e17,-1.5352104253014867e17,-1.539739069623861e17,-1.5442677139462358e17,-1.5487963582686106e17,-1.5533250025909856e17,-1.55785364691336e17,-1.562382291235735e17,-1.5669109355581094e17,-1.5714395798804842e17,-1.575968224202859e17,-1.5804968685252333e17,-1.585025512847608e17,-1.5895541571699827e17,-1.5940828014923574e17,-1.598611445814732e17,-1.603140090137107e17,-1.6076687344594816e17,-1.6121973787818563e17,-1.616726023104231e17,-1.6212546674266054e17,-1.6257833117489802e17,-1.630311956071355e17,-1.6348406003937293e17,-1.6393692447161043e17,-1.643897889038479e17,-1.6484265333608538e17,-1.6529551776832285e17,-1.657483822005603e17,-1.6620124663279776e17,-1.666541110650352e17,-1.671069754972727e17,-1.6755983992951014e17,-1.6801270436174765e17,-1.684655687939851e17,-1.689184332262226e17,-1.6937129765846006e17,-1.698241620906975e17,-1.7027702652293498e17,-1.707298909551724e17,-1.7118275538740992e17,-1.7163561981964736e17,-1.7208848425188486e17,-1.725413486841223e17,-1.729942131163598e17,-1.7344707754859725e17,-1.738999419808347e17,-1.743528064130722e17,-1.7480567084530963e17,-1.7525853527754714e17,-1.7571139970978458e17,-1.7616426414202208e17,-1.7661712857425952e17,-1.77069993006497e17,-1.7752285743873446e17,-1.779757218709719e17,-1.7842858630320938e17,-1.7888145073544685e17,-1.7933431516768435e17,-1.797871795999218e17,-1.802400440321593e17,-1.8069290846439674e17,-1.811457728966342e17,-1.8159863732887168e17,-1.8205150176110912e17,-1.825043661933466e17,-1.8295723062558406e17,-1.8341009505782154e17,-1.83862959490059e17,-1.8431582392229648e17,-1.8476868835453395e17,-1.8522155278677142e17,-1.856744172190089e17,-1.8612728165124634e17,-1.865801460834838e17,-1.8703301051572128e17,-1.8748587494795872e17,-1.8793873938019622e17,-1.883916038124337e17,-1.8884446824467117e17,-1.8929733267690864e17,-1.8975019710914608e17,-1.9020306154138355e17,-1.90655925973621e17,-1.911087904058585e17,-1.9156165483809594e17,-1.9201451927033344e17,-1.9246738370257088e17,-1.929202481348084e17,-1.9337311256704586e17,-1.938259769992833e17,-1.9427884143152077e17,-1.947317058637582e17,-1.951845702959957e17,-1.9563743472823315e17,-1.9609029916047066e17,-1.965431635927081e17,-1.969960280249456e17,-1.9744889245718304e17,-1.9790175688942048e17,-1.98354621321658e17,-1.9880748575389542e17,-1.9926035018613293e17,-1.9971321461837037e17,-2.0016607905060787e17,-2.006189434828453e17,-2.0107180791508278e17,-2.0152467234732026e17,-2.019775367795577e17,-2.0243040121179517e17,-2.0288326564403264e17,-2.0333613007627014e17,-2.037889945085076e17,-2.0424185894074506e17,-2.0469472337298253e17,-2.0514758780522e17,-2.0560045223745747e17,-2.060533166696949e17,-2.0650618110193238e17,-2.0695904553416986e17,-2.0741190996640733e17,-2.078647743986448e17,-2.0831763883088227e17,-2.0877050326311974e17,-2.0922336769535722e17,-2.096762321275947e17,-2.1012909655983213e17,-2.105819609920696e17,-2.1103482542430707e17,-2.114876898565445e17,-2.11940554288782e17,-2.1239341872101946e17,-2.1284628315325696e17,-2.1329914758549443e17,-2.1375201201773187e17,-2.1420487644996934e17,-2.146577408822068e17,-2.151106053144443e17,-2.1556346974668173e17,-2.1601633417891923e17,-2.1646919861115667e17,-2.1692206304339418e17,-2.173749274756316e17,-2.1782779190786906e17,-2.1828065634010656e17,-2.18733520772344e17,-2.191863852045815e17,-2.1963924963681894e17,-2.2009211406905645e17,-2.205449785012939e17,-2.209978429335314e17,-2.2145070736576883e17,-2.2190357179800627e17,-2.2235643623024378e17,-2.228093006624812e17,-2.2326216509471872e17,-2.2371502952695616e17,-2.2416789395919366e17,-2.246207583914311e17,-2.2507362282366858e17,-2.2552648725590605e17,-2.259793516881435e17,-2.2643221612038096e17,-2.2688508055261843e17,-2.2733794498485594e17,-2.2779080941709338e17,-2.2824367384933085e17,-2.2869653828156832e17,-2.291494027138058e17,-2.2960226714604326e17,-2.300551315782807e17,-2.3050799601051818e17,-2.3096086044275565e17,-2.3141372487499312e17,-2.318665893072306e17,-2.3231945373946806e17,-2.3277231817170554e17,-2.33225182603943e17,-2.3367804703618048e17,-2.3413091146841792e17,-2.345837759006554e17,-2.3503664033289286e17,-2.354895047651303e17,-2.359423691973678e17,-2.3639523362960525e17,-2.3684809806184275e17,-2.3730096249408022e17,-2.3775382692631766e17,-2.3820669135855514e17,-2.3865955579079258e17,-2.3911242022303008e17,-2.3956528465526752e17,-2.4001814908750502e17,-2.4047101351974246e17,-2.4092387795197997e17,-2.413767423842174e17,-2.4182960681645485e17,-2.4228247124869235e17,-2.427353356809298e17,-2.431882001131673e17,-2.4364106454540474e17,-2.4409392897764224e17,-2.4454679340987968e17,-2.449996578421172e17,-2.4545252227435462e17,-2.4590538670659206e17,-2.4635825113882957e17,-2.46811115571067e17,-2.472639800033045e17,-2.4771684443554195e17,-2.4816970886777946e17,-2.486225733000169e17,-2.4907543773225437e17,-2.4952830216449184e17,-2.4998116659672928e17,-2.5043403102896675e17,-2.5088689546120422e17,-2.5133975989344173e17,-2.5179262432567917e17,-2.5224548875791664e17,-2.526983531901541e17,-2.5315121762239158e17,-2.5360408205462906e17,-2.540569464868665e17,-2.5450981091910397e17,-2.5496267535134144e17,-2.5541553978357888e17,-2.558684042158164e17,-2.5632126864805386e17,-2.5677413308029133e17,-2.572269975125288e17,-2.5767986194476627e17,-2.581327263770037e17,-2.5858559080924118e17,-2.5903845524147866e17,-2.594913196737161e17,-2.599441841059536e17,-2.6039704853819104e17,-2.6084991297042854e17,-2.6130277740266602e17,-2.6175564183490346e17,-2.6220850626714093e17,-2.6266137069937837e17,-2.6311423513161587e17,-2.635670995638533e17,-2.640199639960908e17,-2.6447282842832826e17,-2.6492569286056576e17,-2.653785572928032e17,-2.6583142172504064e17,-2.6628428615727814e17,-2.667371505895156e17,-2.671900150217531e17,-2.6764287945399053e17,-2.6809574388622803e17,-2.6854860831846547e17,-2.6900147275070294e17,-2.694543371829404e17,-2.6990720161517786e17,-2.7036006604741533e17,-2.708129304796528e17,-2.712657949118903e17,-2.7171865934412774e17,-2.7217152377636525e17,-2.726243882086027e17,-2.7307725264084016e17,-2.7353011707307763e17,-2.7398298150531507e17,-2.7443584593755254e17,-2.7488871036979e17,-2.753415748020275e17,-2.7579443923426496e17,-2.7624730366650243e17,-2.767001680987399e17,-2.7715303253097738e17,-2.7760589696321485e17,-2.780587613954523e17,-2.7851162582768976e17,-2.7896449025992723e17,-2.7941735469216467e17,-2.7987021912440218e17,-2.8032308355663965e17,-2.8077594798887712e17,-2.812288124211146e17,-2.8168167685335206e17,-2.821345412855895e17,-2.8258740571782698e17,-2.8304027015006445e17,-2.834931345823019e17,-2.839459990145394e17,-2.8439886344677683e17,-2.8485172787901434e17,-2.853045923112518e17,-2.8575745674348925e17,-2.8621032117572672e17,-2.8666318560796416e17,-2.8711605004020166e17,-2.875689144724391e17,-2.880217789046766e17,-2.8847464333691405e17,-2.8892750776915155e17,-2.89380372201389e17,-2.8983323663362643e17,-2.9028610106586394e17,-2.907389654981014e17,-2.911918299303389e17,-2.916446943625763e17,-2.920975587948138e17,-2.9255042322705126e17,-2.930032876592887e17,-2.934561520915262e17,-2.9390901652376365e17,-2.9436188095600115e17,-2.948147453882386e17,-2.952676098204761e17,-2.957204742527136e17,-2.96173338684951e17,-2.966262031171885e17,-2.970790675494259e17,-2.975319319816634e17,-2.9798479641390086e17,-2.984376608461384e17,-2.988905252783758e17,-2.993433897106133e17,-2.9979625414285075e17,-3.002491185750882e17,-3.007019830073257e17,-3.0115484743956314e17,-3.0160771187180064e17,-3.020605763040381e17,-3.025134407362756e17,-3.02966305168513e17,-3.034191696007505e17,-3.038720340329879e17,-3.043248984652254e17,-3.047777628974629e17,-3.0523062732970035e17,-3.0568349176193786e17,-3.061363561941753e17,-3.065892206264128e17,-3.070420850586502e17,-3.0749494949088774e17,-3.079478139231252e17,-3.084006783553626e17,-3.0885354278760006e17,-3.093064072198376e17,-3.097592716520751e17,-3.1021213608431245e17,-3.1066500051655e17,-3.1111786494878746e17,-3.1157072938102496e17,-3.1202359381326234e17,-3.1247645824549984e17,-3.1292932267773734e17,-3.133821871099747e17,-3.138350515422122e17,-3.142879159744497e17,-3.147407804066872e17,-3.151936448389246e17,-3.156465092711622e17,-3.160993737033996e17,-3.1655223813563706e17,-3.170051025678745e17,-3.17457967000112e17,-3.179108314323495e17,-3.183636958645869e17,-3.188165602968244e17,-3.192694247290619e17,-3.197222891612994e17,-3.201751535935368e17,-3.206280180257743e17,-3.210808824580118e17,-3.2153374689024915e17,-3.2198661132248666e17,-3.2243947575472416e17,-3.2289234018696166e17,-3.2334520461919904e17,-3.2379806905143654e17,-3.2425093348367405e17,-3.247037979159114e17,-3.251566623481489e17,-3.256095267803864e17,-3.2606239121262394e17,-3.265152556448613e17,-3.269681200770988e17,-3.274209845093363e17,-3.278738489415737e17,-3.283267133738112e17,-3.287795778060487e17,-3.292324422382862e17,-3.296853066705236e17,-3.301381711027611e17,-3.305910355349986e17,-3.3104389996723603e17,-3.314967643994735e17,-3.319496288317109e17,-3.324024932639485e17,-3.3285535769618586e17,-3.3330822212842336e17,-3.3376108656066086e17,-3.342139509928983e17,-3.3466681542513574e17,-3.3511967985737325e17,-3.3557254428961075e17,-3.360254087218481e17,-3.364782731540856e17,-3.369311375863231e17,-3.373840020185606e17,-3.37836866450798e17,-3.382897308830355e17,-3.38742595315273e17,-3.3919545974751046e17,-3.396483241797479e17,-3.4010118861198534e17,-3.405540530442229e17,-3.410069174764603e17,-3.414597819086978e17,-3.4191264634093523e17,-3.4236551077317274e17,-3.428183752054102e17,-3.432712396376477e17,-3.437241040698852e17,-3.4417696850212256e17,-3.4462983293436006e17,-3.450826973665975e17,-3.45535561798835e17,-3.4598842623107245e17,-3.4644129066330995e17,-3.468941550955474e17,-3.473470195277849e17,-3.4779988396002234e17,-3.482527483922598e17,-3.487056128244973e17,-3.491584772567347e17,-3.496113416889722e17,-3.5006420612120966e17,-3.505170705534472e17,-3.509699349856846e17,-3.514227994179221e17,-3.518756638501595e17,-3.52328528282397e17,-3.527813927146345e17,-3.5323425714687194e17,-3.5368712157910944e17,-3.541399860113469e17,-3.545928504435844e17,-3.5504571487582176e17,-3.554985793080593e17,-3.5595144374029677e17,-3.564043081725342e17,-3.5685717260477165e17,-3.5731003703700915e17,-3.5776290146924666e17,-3.58215765901484e17,-3.586686303337216e17,-3.5912149476595904e17,-3.5957435919819654e17,-3.600272236304339e17,-3.604800880626714e17,-3.609329524949089e17,-3.613858169271463e17,-3.618386813593838e17,-3.622915457916213e17,-3.627444102238588e17,-3.631972746560962e17,-3.6365013908833376e17,-3.641030035205712e17,-3.645558679528086e17,-3.650087323850461e17,-3.654615968172836e17,-3.659144612495211e17,-3.6636732568175846e17,-3.6682019011399597e17,-3.672730545462335e17,-3.67725918978471e17,-3.6817878341070835e17,-3.6863164784294586e17,-3.6908451227518336e17,-3.6953737670742074e17,-3.6999024113965824e17,-3.7044310557189574e17,-3.7089597000413325e17,-3.713488344363706e17,-3.7180169886860806e17,-3.7225456330084563e17,-3.72707427733083e17,-3.731602921653205e17,-3.73613156597558e17,-3.740660210297955e17,-3.745188854620329e17,-3.749717498942704e17,-3.754246143265079e17,-3.758774787587453e17,-3.763303431909828e17,-3.767832076232203e17,-3.772360720554578e17,-3.7768893648769517e17,-3.781418009199327e17,-3.785946653521702e17,-3.790475297844076e17,-3.7950039421664506e17,-3.799532586488825e17,-3.8040612308112006e17,-3.8085898751335744e17,-3.8131185194559494e17,-3.8176471637783245e17,-3.822175808100699e17,-3.826704452423073e17,-3.8312330967454483e17,-3.8357617410678234e17,-3.840290385390197e17,-3.844819029712572e17,-3.8493476740349466e17,-3.8538763183573216e17,-3.858404962679696e17,-3.862933607002071e17,-3.867462251324446e17,-3.8719908956468205e17,-3.876519539969195e17,-3.881048184291569e17,-3.885576828613944e17,-3.890105472936319e17,-3.894634117258694e17,-3.899162761581068e17,-3.903691405903443e17,-3.9082200502258176e17,-3.9127486945481926e17,-3.917277338870568e17,-3.9218059831929414e17,-3.9263346275153165e17,-3.930863271837691e17,-3.935391916160066e17,-3.9399205604824403e17,-3.9444492048048154e17,-3.94897784912719e17,-3.953506493449565e17,-3.958035137771939e17,-3.9625637820943136e17,-3.9670924264166886e17,-3.971621070739063e17,-3.976149715061438e17,-3.9806783593838125e17,-3.9852070037061875e17,-3.989735648028562e17,-3.994264292350937e17,-3.998792936673311e17,-4.003321580995686e17,-4.007850225318061e17,-4.012378869640435e17,-4.01690751396281e17,-4.0214361582851846e17,-4.02596480260756e17,-4.0304934469299334e17,-4.035022091252309e17,-4.0395507355746835e17,-4.044079379897058e17,-4.0486080242194323e17,-4.0531366685418074e17,-4.0576653128641824e17,-4.062193957186556e17,-4.066722601508932e17,-4.071251245831306e17,-4.075779890153681e17,-4.080308534476055e17,-4.08483717879843e17,-4.089365823120805e17,-4.093894467443179e17,-4.098423111765554e17,-4.102951756087929e17,-4.107480400410304e17,-4.112009044732678e17,-4.1165376890550534e17,-4.121066333377428e17,-4.1255949776998016e17,-4.1301236220221766e17,-4.134652266344552e17,-4.139180910666927e17,-4.1437095549893005e17,-4.1482381993116755e17,-4.1527668436340506e17,-4.1572954879564243e17,-4.1618241322787994e17,-4.1663527766011744e17,-4.1708814209235494e17,-4.175410065245923e17,-4.179938709568298e17,-4.184467353890673e17,-4.188995998213048e17,-4.193524642535422e17,-4.1980532868577965e17,-4.202581931180172e17,-4.207110575502546e17,-4.211639219824921e17,-4.216167864147296e17,-4.220696508469671e17,-4.225225152792045e17,-4.22975379711442e17,-4.234282441436795e17,-4.2388110857591686e17,-4.243339730081544e17,-4.247868374403918e17,-4.252397018726294e17,-4.2569256630486675e17,-4.2614543073710426e17,-4.2659829516934176e17,-4.270511596015792e17,-4.2750402403381664e17,-4.279568884660541e17,-4.2840975289829165e17,-4.28862617330529e17,-4.293154817627665e17,-4.2976834619500397e17,-4.302212106272415e17,-4.306740750594789e17,-4.311269394917164e17,-4.315798039239539e17,-4.320326683561913e17,-4.324855327884288e17,-4.3293839722066624e17,-4.3339126165290374e17,-4.338441260851412e17,-4.342969905173787e17,-4.347498549496161e17,-4.3520271938185363e17,-4.356555838140911e17,-4.361084482463285e17,-4.36561312678566e17,-4.3701417711080346e17,-4.3746704154304096e17,-4.379199059752784e17,-4.383727704075159e17,-4.3882563483975334e17,-4.3927849927199085e17,-4.397313637042283e17,-4.401842281364657e17,-4.406370925687032e17,-4.410899570009407e17,-4.415428214331782e17,-4.419956858654156e17,-4.424485502976531e17,-4.4290141472989056e17,-4.4335427916212806e17,-4.438071435943655e17,-4.4426000802660294e17,-4.4471287245884045e17,-4.451657368910779e17,-4.456186013233154e17,-4.4607146575555283e17,-4.4652433018779034e17,-4.469771946200278e17,-4.474300590522653e17,-4.4788292348450266e17,-4.4833578791674016e17,-4.4878865234897766e17,-4.492415167812151e17,-4.496943812134526e17,-4.5014724564569005e17,-4.5060011007792755e17,-4.510529745101649e17,-4.515058389424025e17,-4.5195870337463994e17,-4.524115678068774e17,-4.528644322391148e17,-4.533172966713523e17,-4.537701611035898e17,-4.542230255358272e17,-4.546758899680648e17,-4.551287544003022e17,-4.555816188325397e17,-4.560344832647771e17,-4.564873476970146e17,-4.569402121292521e17,-4.573930765614895e17,-4.57845940993727e17,-4.582988054259645e17,-4.58751669858202e17,-4.5920453429043936e17,-4.596573987226769e17,-4.6011026315491437e17,-4.6056312758715174e17,-4.6101599201938925e17,-4.6146885645162675e17,-4.6192172088386426e17,-4.623745853161016e17,-4.6282744974833914e17,-4.6328031418057664e17,-4.63733178612814e17,-4.641860430450515e17,-4.64638907477289e17,-4.650917719095265e17,-4.655446363417639e17,-4.659975007740014e17,-4.664503652062389e17,-4.6690322963847635e17,-4.673560940707138e17,-4.6780895850295123e17,-4.682618229351888e17,-4.687146873674262e17,-4.691675517996637e17,-4.696204162319012e17,-4.700732806641387e17,-4.7052614509637606e17,-4.7097900952861357e17,-4.714318739608511e17,-4.7188473839308845e17,-4.7233760282532595e17,-4.727904672575634e17,-4.7324333168980096e17,-4.7369619612203834e17,-4.7414906055427584e17,-4.7460192498651334e17,-4.750547894187508e17,-4.755076538509882e17,-4.7596051828322566e17,-4.7641338271546323e17,-4.768662471477006e17,-4.773191115799381e17,-4.7777197601217555e17,-4.7822484044441306e17,-4.786777048766505e17,-4.79130569308888e17,-4.795834337411255e17,-4.800362981733629e17,-4.804891626056004e17,-4.809420270378378e17,-4.813948914700753e17,-4.8184775590231277e17,-4.823006203345503e17,-4.827534847667877e17,-4.832063491990252e17,-4.8365921363126266e17,-4.841120780635001e17,-4.845649424957376e17,-4.8501780692797504e17,-4.8547067136021254e17,-4.8592353579245e17,-4.863764002246875e17,-4.868292646569249e17,-4.8728212908916243e17,-4.877349935213998e17,-4.881878579536373e17,-4.886407223858748e17,-4.8909358681811226e17,-4.8954645125034976e17,-4.899993156825872e17,-4.904521801148247e17,-4.909050445470621e17,-4.9135790897929965e17,-4.918107734115371e17,-4.922636378437745e17,-4.92716502276012e17,-4.931693667082495e17,-4.93622231140487e17,-4.940750955727244e17,-4.945279600049619e17,-4.9498082443719936e17,-4.9543368886943686e17,-4.9588655330167424e17,-4.9633941773391174e17,-4.9679228216614925e17,-4.972451465983867e17,-4.976980110306242e17,-4.9815087546286163e17,-4.9860373989509914e17,-4.990566043273365e17,-4.995094687595741e17,-4.999623331918115e17,-5.0041519762404896e17,-5.008680620562864e17,-5.013209264885239e17,-5.017737909207614e17,-5.022266553529988e17,-5.0267951978523635e17,-5.031323842174738e17,-5.035852486497113e17,-5.040381130819487e17,-5.044909775141862e17,-5.049438419464237e17,-5.0539670637866106e17,-5.0584957081089856e17,-5.0630243524313606e17,-5.067552996753736e17,-5.0720816410761094e17,-5.076610285398485e17,-5.0811389297208595e17,-5.085667574043233e17,-5.0901962183656083e17,-5.0947248626879834e17,-5.0992535070103584e17,-5.103782151332732e17,-5.108310795655107e17,-5.112839439977482e17,-5.117368084299856e17,-5.121896728622231e17,-5.126425372944606e17,-5.130954017266981e17,-5.135482661589355e17,-5.14001130591173e17,-5.144539950234105e17,-5.1490685945564794e17,-5.153597238878854e17,-5.158125883201228e17,-5.162654527523604e17,-5.1671831718459776e17,-5.1717118161683526e17,-5.176240460490728e17,-5.180769104813102e17,-5.1852977491354765e17,-5.1898263934578515e17,-5.1943550377802266e17,-5.1988836821026003e17,-5.2034123264249754e17,-5.20794097074735e17,-5.2124696150697254e17,-5.216998259392099e17,-5.221526903714474e17,-5.226055548036849e17,-5.2305841923592237e17,-5.235112836681598e17,-5.2396414810039725e17,-5.244170125326348e17,-5.248698769648722e17,-5.253227413971097e17,-5.2577560582934714e17,-5.2622847026158464e17,-5.266813346938221e17,-5.271341991260596e17,-5.275870635582971e17,-5.2803992799053446e17,-5.28492792422772e17,-5.289456568550094e17,-5.293985212872469e17,-5.2985138571948435e17,-5.3030425015172186e17,-5.307571145839593e17,-5.312099790161968e17,-5.3166284344843424e17,-5.321157078806717e17,-5.325685723129092e17,-5.330214367451466e17,-5.334743011773841e17,-5.3392716560962157e17,-5.343800300418591e17,-5.348328944740965e17,-5.35285758906334e17,-5.357386233385714e17,-5.361914877708089e17,-5.366443522030464e17,-5.3709721663528384e17,-5.3755008106752134e17,-5.380029454997588e17,-5.384558099319963e17,-5.3890867436423366e17,-5.3936153879647123e17,-5.398144032287087e17,-5.402672676609461e17,-5.4072013209318355e17,-5.4117299652542106e17,-5.4162586095765856e17,-5.4207872538989594e17,-5.425315898221335e17,-5.4298445425437094e17,-5.4343731868660845e17,-5.438901831188458e17,-5.443430475510833e17,-5.447959119833208e17,-5.452487764155583e17,-5.457016408477957e17,-5.461545052800332e17,-5.466073697122707e17,-5.470602341445081e17,-5.4751309857674566e17,-5.479659630089831e17,-5.4841882744122054e17,-5.48871691873458e17,-5.493245563056955e17,-5.49777420737933e17,-5.502302851701704e17,-5.506831496024079e17,-5.511360140346454e17,-5.515888784668829e17,-5.5204174289912026e17,-5.5249460733135776e17,-5.5294747176359526e17,-5.5340033619583264e17,-5.5385320062807014e17,-5.5430606506030765e17,-5.5475892949254515e17,-5.552117939247825e17,-5.556646583570201e17,-5.5611752278925754e17,-5.565703872214949e17,-5.570232516537324e17,-5.574761160859699e17,-5.579289805182074e17,-5.583818449504448e17,-5.588347093826823e17,-5.592875738149198e17,-5.597404382471572e17,-5.601933026793947e17,-5.606461671116322e17,-5.610990315438697e17,-5.615518959761071e17,-5.620047604083446e17,-5.624576248405821e17,-5.629104892728195e17,-5.6336335370505696e17,-5.638162181372944e17,-5.6426908256953197e17,-5.6472194700176934e17,-5.6517481143400685e17,-5.6562767586624435e17,-5.660805402984818e17,-5.665334047307192e17,-5.6698626916295674e17,-5.6743913359519424e17,-5.678919980274316e17,-5.683448624596691e17,-5.6879772689190656e17,-5.6925059132414406e17,-5.697034557563815e17,-5.70156320188619e17,-5.706091846208565e17,-5.7106204905309395e17,-5.715149134853314e17,-5.7196777791756883e17,-5.724206423498064e17,-5.728735067820438e17,-5.733263712142813e17,-5.737792356465187e17,-5.742321000787562e17,-5.7468496451099366e17,-5.7513782894323117e17,-5.755906933754687e17,-5.7604355780770605e17,-5.764964222399436e17,-5.76949286672181e17,-5.774021511044184e17,-5.77855015536656e17,-5.783078799688934e17,-5.787607444011309e17,-5.792136088333683e17,-5.796664732656058e17,-5.801193376978433e17,-5.805722021300808e17,-5.810250665623182e17,-5.814779309945556e17,-5.819307954267932e17,-5.823836598590307e17,-5.828365242912681e17,-5.832893887235055e17,-5.83742253155743e17,-5.841951175879805e17,-5.84647982020218e17,-5.851008464524554e17,-5.855537108846929e17,-5.860065753169304e17,-5.864594397491679e17,-5.869123041814053e17,-5.873651686136428e17,-5.878180330458802e17,-5.882708974781178e17,-5.887237619103551e17,-5.891766263425926e17,-5.896294907748301e17,-5.900823552070675e17,-5.905352196393051e17,-5.909880840715425e17,-5.9144094850378e17,-5.918938129360174e17,-5.92346677368255e17,-5.927995418004923e17,-5.932524062327299e17,-5.937052706649674e17,-5.941581350972047e17,-5.946109995294422e17,-5.950638639616797e17,-5.955167283939172e17,-5.959695928261546e17,-5.964224572583922e17,-5.968753216906296e17,-5.973281861228671e17,-5.977810505551044e17,-5.98233914987342e17,-5.986867794195795e17,-5.99139643851817e17,-5.995925082840544e17,-6.00045372716292e17,-6.004982371485293e17,-6.009511015807667e17,-6.014039660130043e17,-6.018568304452417e17,-6.023096948774793e17,-6.027625593097166e17,-6.032154237419542e17,-6.036682881741916e17,-6.041211526064289e17,-6.045740170386665e17,-6.05026881470904e17,-6.054797459031415e17,-6.05932610335379e17,-6.063854747676165e17,-6.068383391998538e17,-6.072912036320914e17,-6.077440680643287e17,-6.081969324965663e17,-6.086497969288038e17,-6.091026613610412e17,-6.095555257932787e17,-6.100083902255163e17,-6.104612546577536e17,-6.10914119089991e17,-6.113669835222286e17,-6.11819847954466e17,-6.122727123867035e17,-6.127255768189409e17,-6.131784412511785e17,-6.136313056834159e17,-6.140841701156532e17,-6.145370345478908e17,-6.149898989801284e17,-6.154427634123658e17,-6.158956278446033e17,-6.163484922768408e17,-6.168013567090781e17,-6.172542211413156e17,-6.17707085573553e17,-6.181599500057906e17,-6.186128144380282e17,-6.190656788702655e17,-6.19518543302503e17,-6.199714077347405e17,-6.204242721669778e17,-6.208771365992154e17,-6.213300010314529e17,-6.217828654636904e17,-6.222357298959278e17,-6.226885943281652e17,-6.231414587604027e17,-6.235943231926401e17,-6.240471876248776e17,-6.245000520571151e17,-6.249529164893527e17,-6.2540578092159e17,-6.258586453538276e17,-6.26311509786065e17,-6.267643742183025e17,-6.272172386505399e17,-6.276701030827773e17,-6.281229675150149e17,-6.285758319472524e17,-6.290286963794898e17,-6.294815608117272e17,-6.299344252439648e17,-6.303872896762021e17,-6.308401541084397e17,-6.312930185406772e17,-6.317458829729146e17,-6.321987474051521e17,-6.326516118373894e17,-6.33104476269627e17,-6.335573407018644e17,-6.340102051341019e17,-6.344630695663395e17,-6.34915933998577e17,-6.353687984308143e17,-6.358216628630518e17,-6.362745272952893e17,-6.367273917275267e17,-6.371802561597642e17,-6.376331205920017e17,-6.380859850242392e17,-6.385388494564767e17,-6.38991713888714e17,-6.394445783209516e17,-6.39897442753189e17,-6.403503071854264e17,-6.40803171617664e17,-6.412560360499016e17,-6.417089004821389e17,-6.421617649143763e17,-6.426146293466139e17,-6.430674937788513e17,-6.435203582110888e17,-6.439732226433262e17,-6.444260870755638e17,-6.448789515078012e17,-6.453318159400385e17,-6.457846803722761e17,-6.462375448045137e17,-6.46690409236751e17,-6.471432736689885e17,-6.475961381012261e17,-6.480490025334634e17,-6.485018669657009e17,-6.489547313979383e17,-6.494075958301759e17,-6.498604602624133e17,-6.503133246946508e17,-6.507661891268883e17,-6.512190535591259e17,-6.516719179913631e17,-6.521247824236006e17,-6.525776468558382e17,-6.530305112880755e17,-6.534833757203131e17,-6.539362401525505e17,-6.543891045847881e17,-6.548419690170254e17,-6.552948334492628e17,-6.557476978815004e17,-6.562005623137379e17,-6.566534267459753e17,-6.571062911782129e17,-6.575591556104504e17,-6.580120200426876e17,-6.584648844749252e17,-6.589177489071626e17,-6.593706133394002e17,-6.598234777716376e17,-6.602763422038751e17,-6.607292066361126e17,-6.611820710683501e17,-6.616349355005874e17,-6.62087799932825e17,-6.625406643650625e17,-6.629935287972998e17,-6.634463932295374e17,-6.638992576617748e17,-6.643521220940123e17,-6.648049865262497e17,-6.652578509584872e17,-6.657107153907247e17,-6.661635798229622e17,-6.666164442551996e17,-6.670693086874372e17,-6.675221731196748e17,-6.67975037551912e17,-6.684279019841495e17,-6.68880766416387e17,-6.693336308486244e17,-6.69786495280862e17,-6.702393597130994e17,-6.70692224145337e17,-6.711450885775743e17,-6.715979530098117e17,-6.720508174420493e17,-6.725036818742867e17,-6.729565463065242e17,-6.734094107387617e17,-6.738622751709992e17,-6.743151396032365e17,-6.74768004035474e17,-6.752208684677115e17,-6.756737328999489e17,-6.761265973321865e17,-6.76579461764424e17,-6.770323261966615e17,-6.774851906288988e17,-6.779380550611363e17,-6.783909194933738e17,-6.788437839256113e17,-6.792966483578487e17,-6.797495127900863e17,-6.802023772223237e17,-6.80655241654561e17,-6.811081060867986e17,-6.81560970519036e17,-6.820138349512736e17,-6.82466699383511e17,-6.829195638157485e17,-6.83372428247986e17,-6.838252926802232e17,-6.842781571124608e17,-6.847310215446984e17,-6.851838859769358e17,-6.856367504091732e17,-6.860896148414108e17,-6.865424792736483e17,-6.869953437058857e17,-6.874482081381231e17,-6.879010725703606e17,-6.883539370025981e17,-6.888068014348355e17,-6.89259665867073e17,-6.897125302993106e17,-6.901653947315479e17,-6.906182591637853e17,-6.910711235960229e17,-6.915239880282604e17,-6.919768524604978e17,-6.924297168927354e17,-6.928825813249728e17,-6.933354457572102e17,-6.937883101894476e17,-6.942411746216851e17,-6.946940390539227e17,-6.951469034861601e17,-6.955997679183976e17,-6.960526323506351e17,-6.965054967828724e17,-6.969583612151099e17,-6.974112256473475e17,-6.978640900795849e17,-6.983169545118225e17,-6.987698189440598e17,-6.992226833762973e17,-6.996755478085348e17,-7.001284122407721e17,-7.005812766730097e17,-7.010341411052472e17,-7.014870055374847e17,-7.019398699697221e17,-7.023927344019597e17,-7.02845598834197e17,-7.032984632664346e17,-7.037513276986719e17,-7.042041921309094e17,-7.04657056563147e17,-7.051099209953843e17,-7.055627854276219e17,-7.060156498598593e17,-7.064685142920968e17,-7.069213787243342e17,-7.073742431565718e17,-7.078271075888092e17,-7.082799720210467e17,-7.087328364532841e17,-7.091857008855215e17,-7.096385653177591e17,-7.100914297499964e17,-7.10544294182234e17,-7.109971586144716e17,-7.11450023046709e17,-7.119028874789464e17,-7.12355751911184e17,-7.128086163434213e17,-7.132614807756588e17,-7.137143452078962e17,-7.141672096401338e17,-7.146200740723713e17,-7.150729385046086e17,-7.155258029368462e17,-7.159786673690836e17,-7.16431531801321e17,-7.168843962335585e17,-7.173372606657961e17,-7.177901250980335e17,-7.18242989530271e17,-7.186958539625084e17,-7.191487183947459e17,-7.196015828269833e17,-7.200544472592207e17,-7.205073116914583e17,-7.209601761236959e17,-7.214130405559332e17,-7.218659049881708e17,-7.223187694204082e17,-7.227716338526456e17,-7.232244982848831e17,-7.236773627171205e17,-7.241302271493581e17,-7.245830915815955e17,-7.25035956013833e17,-7.254888204460704e17,-7.25941684878308e17,-7.263945493105453e17,-7.268474137427828e17,-7.273002781750204e17,-7.277531426072577e17,-7.282060070394953e17,-7.286588714717326e17,-7.291117359039702e17,-7.295646003362076e17,-7.30017464768445e17,-7.304703292006826e17,-7.309231936329202e17,-7.313760580651575e17,-7.31828922497395e17,-7.322817869296325e17,-7.327346513618698e17,-7.331875157941074e17,-7.336403802263448e17,-7.340932446585824e17,-7.345461090908198e17,-7.349989735230572e17,-7.354518379552947e17,-7.359047023875322e17,-7.363575668197696e17,-7.368104312520072e17,-7.372632956842447e17,-7.37716160116482e17,-7.381690245487195e17,-7.386218889809569e17,-7.390747534131945e17,-7.395276178454319e17,-7.399804822776694e17,-7.40433346709907e17,-7.408862111421444e17,-7.413390755743817e17,-7.417919400066193e17,-7.422448044388568e17,-7.426976688710941e17,-7.431505333033317e17,-7.436033977355692e17,-7.440562621678066e17,-7.44509126600044e17,-7.449619910322815e17,-7.45414855464519e17,-7.458677198967565e17,-7.463205843289939e17,-7.467734487612315e17,-7.47226313193469e17,-7.476791776257062e17,-7.481320420579438e17,-7.485849064901812e17,-7.490377709224187e17,-7.494906353546563e17,-7.499434997868937e17,-7.503963642191313e17,-7.508492286513686e17,-7.51302093083606e17,-7.517549575158436e17,-7.52207821948081e17,-7.526606863803185e17,-7.53113550812556e17,-7.535664152447936e17,-7.540192796770308e17,-7.544721441092684e17,-7.549250085415058e17,-7.553778729737434e17,-7.558307374059808e17,-7.562836018382182e17,-7.567364662704558e17,-7.571893307026931e17,-7.576421951349306e17,-7.580950595671681e17,-7.585479239994057e17,-7.59000788431643e17,-7.594536528638806e17,-7.59906517296118e17,-7.603593817283553e17,-7.608122461605929e17,-7.612651105928303e17,-7.617179750250679e17,-7.621708394573053e17,-7.626237038895428e17,-7.630765683217804e17,-7.635294327540179e17,-7.639822971862551e17,-7.644351616184927e17,-7.648880260507301e17,-7.653408904829676e17,-7.657937549152051e17,-7.662466193474426e17,-7.666994837796801e17,-7.671523482119174e17,-7.676052126441549e17,-7.680580770763924e17,-7.685109415086299e17,-7.689638059408673e17,-7.694166703731049e17,-7.698695348053423e17,-7.703223992375796e17,-7.707752636698172e17,-7.712281281020547e17,-7.716809925342921e17,-7.721338569665297e17,-7.725867213987671e17,-7.730395858310047e17,-7.73492450263242e17,-7.739453146954794e17,-7.74398179127717e17,-7.748510435599544e17,-7.753039079921919e17,-7.757567724244294e17,-7.762096368566669e17,-7.766625012889042e17,-7.771153657211418e17,-7.775682301533792e17,-7.780210945856168e17,-7.784739590178542e17,-7.789268234500916e17,-7.793796878823292e17,-7.798325523145664e17,-7.80285416746804e17,-7.807382811790415e17,-7.81191145611279e17,-7.816440100435164e17,-7.82096874475754e17,-7.825497389079914e17,-7.830026033402289e17,-7.834554677724663e17,-7.839083322047037e17,-7.843611966369413e17,-7.848140610691786e17,-7.852669255014162e17,-7.857197899336538e17,-7.861726543658911e17,-7.866255187981285e17,-7.870783832303661e17,-7.875312476626035e17,-7.87984112094841e17,-7.884369765270785e17,-7.88889840959316e17,-7.893427053915534e17,-7.897955698237907e17,-7.902484342560283e17,-7.907012986882659e17,-7.911541631205033e17,-7.916070275527407e17,-7.920598919849783e17,-7.925127564172156e17,-7.92965620849453e17,-7.934184852816906e17,-7.938713497139281e17,-7.943242141461656e17,-7.94777078578403e17,-7.952299430106405e17,-7.95682807442878e17,-7.961356718751153e17,-7.965885363073528e17,-7.970414007395904e17,-7.974942651718278e17,-7.979471296040653e17,-7.983999940363028e17,-7.988528584685402e17,-7.993057229007777e17,-7.99758587333015e17,-8.002114517652526e17,-8.006643161974902e17,-8.011171806297275e17,-8.01570045061965e17,-8.020229094942025e17,-8.0247577392644e17,-8.029286383586774e17,-8.03381502790915e17,-8.038343672231524e17,-8.042872316553898e17,-8.047400960876273e17,-8.051929605198647e17,-8.056458249521023e17,-8.060986893843396e17,-8.065515538165772e17,-8.070044182488147e17,-8.074572826810522e17,-8.079101471132896e17,-8.08363011545527e17,-8.088158759777645e17,-8.092687404100019e17,-8.097216048422394e17,-8.101744692744769e17,-8.106273337067145e17,-8.110801981389518e17,-8.115330625711892e17,-8.119859270034268e17,-8.124387914356641e17,-8.128916558679017e17,-8.133445203001393e17,-8.137973847323767e17,-8.142502491646141e17,-8.147031135968516e17,-8.15155978029089e17,-8.156088424613265e17,-8.160617068935639e17,-8.165145713258015e17,-8.16967435758039e17,-8.174203001902764e17,-8.178731646225139e17,-8.183260290547514e17,-8.187788934869888e17,-8.192317579192262e17,-8.196846223514637e17,-8.201374867837012e17,-8.205903512159387e17,-8.210432156481761e17,-8.214960800804136e17,-8.219489445126511e17,-8.224018089448884e17,-8.22854673377126e17,-8.233075378093636e17,-8.237604022416009e17,-8.242132666738385e17,-8.246661311060758e17,-8.251189955383133e17,-8.255718599705508e17,-8.260247244027882e17,-8.264775888350258e17,-8.269304532672634e17,-8.273833176995007e17,-8.278361821317381e17,-8.282890465639757e17,-8.28741910996213e17,-8.291947754284506e17,-8.29647639860688e17,-8.301005042929256e17,-8.30553368725163e17,-8.310062331574003e17,-8.314590975896379e17,-8.319119620218753e17,-8.323648264541128e17,-8.328176908863503e17,-8.332705553185879e17,-8.337234197508252e17,-8.341762841830627e17,-8.346291486153001e17,-8.350820130475377e17,-8.355348774797751e17,-8.359877419120125e17,-8.364406063442501e17,-8.368934707764876e17,-8.373463352087249e17,-8.377991996409624e17,-8.382520640732e17,-8.387049285054373e17,-8.391577929376749e17,-8.396106573699123e17,-8.400635218021498e17,-8.405163862343872e17,-8.409692506666246e17,-8.414221150988622e17,-8.418749795310996e17,-8.423278439633371e17,-8.427807083955747e17,-8.432335728278122e17,-8.436864372600494e17,-8.44139301692287e17,-8.445921661245244e17,-8.450450305567619e17,-8.454978949889994e17,-8.459507594212369e17,-8.464036238534744e17,-8.468564882857117e17,-8.473093527179492e17,-8.477622171501868e17,-8.482150815824242e17,-8.486679460146616e17,-8.491208104468992e17,-8.495736748791366e17,-8.50026539311374e17,-8.504794037436115e17,-8.50932268175849e17,-8.513851326080865e17,-8.51837997040324e17,-8.522908614725614e17,-8.52743725904799e17,-8.531965903370363e17,-8.536494547692737e17,-8.541023192015113e17,-8.545551836337487e17,-8.550080480659862e17,-8.554609124982237e17,-8.559137769304612e17,-8.563666413626985e17,-8.56819505794936e17,-8.572723702271735e17,-8.577252346594111e17,-8.581780990916485e17,-8.58630963523886e17,-8.590838279561235e17,-8.595366923883607e17,-8.599895568205983e17,-8.604424212528358e17,-8.608952856850733e17,-8.613481501173107e17,-8.618010145495483e17,-8.622538789817857e17,-8.627067434140232e17,-8.631596078462606e17,-8.63612472278498e17,-8.640653367107356e17,-8.645182011429729e17,-8.649710655752105e17,-8.65423930007448e17,-8.658767944396855e17,-8.663296588719228e17,-8.667825233041604e17,-8.672353877363978e17,-8.676882521686353e17,-8.681411166008728e17,-8.685939810331103e17,-8.690468454653478e17,-8.69499709897585e17,-8.699525743298226e17,-8.704054387620602e17,-8.708583031942976e17,-8.71311167626535e17,-8.717640320587726e17,-8.7221689649101e17,-8.726697609232474e17,-8.731226253554849e17,-8.735754897877224e17,-8.740283542199599e17,-8.744812186521974e17,-8.749340830844348e17,-8.753869475166724e17,-8.758398119489096e17,-8.762926763811471e17,-8.767455408133847e17,-8.771984052456221e17,-8.776512696778596e17,-8.781041341100972e17,-8.785569985423346e17,-8.79009862974572e17,-8.794627274068095e17,-8.799155918390469e17,-8.803684562712845e17,-8.808213207035218e17,-8.812741851357594e17,-8.817270495679969e17,-8.821799140002342e17,-8.826327784324717e17,-8.830856428647092e17,-8.835385072969467e17,-8.839913717291841e17,-8.844442361614217e17,-8.848971005936591e17,-8.853499650258966e17,-8.858028294581339e17,-8.862556938903715e17,-8.86708558322609e17,-8.871614227548465e17,-8.876142871870839e17,-8.880671516193215e17,-8.885200160515588e17,-8.889728804837962e17,-8.894257449160338e17,-8.898786093482712e17,-8.903314737805088e17,-8.907843382127461e17,-8.912372026449837e17,-8.916900670772211e17,-8.921429315094584e17,-8.92595795941696e17,-8.930486603739336e17,-8.93501524806171e17,-8.939543892384084e17,-8.94407253670646e17,-8.948601181028833e17,-8.953129825351209e17,-8.957658469673582e17,-8.962187113995958e17,-8.966715758318333e17,-8.971244402640707e17,-8.975773046963082e17,-8.980301691285457e17,-8.984830335607831e17,-8.989358979930205e17,-8.993887624252581e17,-8.998416268574956e17,-9.00294491289733e17,-9.007473557219704e17,-9.012002201542079e17,-9.016530845864454e17,-9.021059490186828e17,-9.025588134509203e17,-9.030116778831579e17,-9.034645423153953e17,-9.039174067476328e17,-9.043702711798702e17,-9.048231356121076e17,-9.052760000443451e17,-9.057288644765825e17,-9.061817289088201e17,-9.066345933410577e17,-9.07087457773295e17,-9.075403222055324e17,-9.0799318663777e17,-9.084460510700073e17,-9.088989155022449e17,-9.093517799344824e17,-9.098046443667199e17,-9.102575087989573e17,-9.107103732311946e17,-9.111632376634322e17,-9.116161020956696e17,-9.120689665279071e17,-9.125218309601446e17,-9.129746953923822e17,-9.134275598246195e17,-9.13880424256857e17,-9.143332886890945e17,-9.14786153121332e17,-9.152390175535694e17,-9.156918819858068e17,-9.161447464180444e17,-9.165976108502819e17,-9.170504752825193e17,-9.175033397147567e17,-9.179562041469943e17,-9.184090685792316e17,-9.188619330114692e17,-9.193147974437068e17,-9.197676618759441e17,-9.202205263081816e17,-9.20673390740419e17,-9.211262551726565e17,-9.21579119604894e17,-9.220319840371314e17,-9.22484848469369e17,-9.229377129016065e17,-9.233905773338438e17,-9.238434417660813e17,-9.242963061983188e17,-9.247491706305562e17,-9.252020350627937e17,-9.256548994950312e17,-9.261077639272687e17,-9.265606283595062e17,-9.270134927917435e17,-9.27466357223981e17,-9.279192216562185e17,-9.28372086088456e17,-9.288249505206935e17,-9.292778149529311e17,-9.297306793851684e17,-9.301835438174058e17,-9.306364082496433e17,-9.310892726818808e17,-9.315421371141183e17,-9.319950015463557e17,-9.324478659785933e17,-9.329007304108307e17,-9.33353594843068e17,-9.338064592753056e17,-9.342593237075432e17,-9.347121881397805e17,-9.35165052572018e17,-9.356179170042555e17,-9.360707814364929e17,-9.365236458687304e17,-9.369765103009678e17,-9.374293747332054e17,-9.378822391654428e17,-9.383351035976803e17,-9.387879680299178e17,-9.392408324621554e17,-9.396936968943926e17,-9.401465613266301e17,-9.405994257588676e17,-9.41052290191105e17,-9.415051546233426e17,-9.4195801905558e17,-9.424108834878176e17,-9.428637479200549e17,-9.433166123522924e17,-9.437694767845299e17,-9.442223412167674e17,-9.446752056490048e17,-9.451280700812424e17,-9.455809345134798e17,-9.460337989457171e17,-9.464866633779547e17,-9.469395278101921e17,-9.473923922424297e17,-9.478452566746671e17,-9.482981211069046e17,-9.487509855391421e17,-9.492038499713795e17,-9.496567144036169e17,-9.501095788358545e17,-9.505624432680919e17,-9.510153077003293e17,-9.514681721325669e17,-9.519210365648044e17,-9.523739009970417e17,-9.528267654292792e17,-9.532796298615167e17,-9.537324942937542e17,-9.541853587259917e17,-9.546382231582291e17,-9.550910875904667e17,-9.555439520227039e17,-9.559968164549414e17,-9.56449680887179e17,-9.569025453194164e17,-9.573554097516539e17,-9.578082741838915e17,-9.582611386161289e17,-9.587140030483663e17,-9.591668674806038e17,-9.596197319128412e17,-9.600725963450788e17,-9.605254607773161e17,-9.609783252095537e17,-9.614311896417912e17,-9.618840540740285e17,-9.62336918506266e17,-9.627897829385036e17,-9.63242647370741e17,-9.636955118029784e17,-9.64148376235216e17,-9.646012406674534e17,-9.650541050996909e17,-9.655069695319282e17,-9.659598339641658e17,-9.664126983964033e17,-9.668655628286408e17,-9.673184272608782e17,-9.677712916931158e17,-9.682241561253532e17,-9.686770205575905e17,-9.691298849898281e17,-9.695827494220655e17,-9.700356138543031e17,-9.704884782865404e17,-9.70941342718778e17,-9.713942071510156e17,-9.718470715832527e17,-9.722999360154903e17,-9.727528004477279e17,-9.732056648799653e17,-9.736585293122028e17,-9.741113937444403e17,-9.745642581766778e17,-9.750171226089152e17,-9.754699870411525e17,-9.759228514733901e17,-9.763757159056276e17,-9.76828580337865e17,-9.772814447701025e17,-9.777343092023401e17,-9.781871736345774e17,-9.786400380668148e17,-9.790929024990524e17,-9.795457669312899e17,-9.799986313635273e17,-9.804514957957647e17,-9.809043602280023e17,-9.813572246602397e17,-9.81810089092477e17,-9.822629535247146e17,-9.827158179569522e17,-9.831686823891896e17,-9.836215468214271e17,-9.840744112536646e17,-9.84527275685902e17,-9.849801401181394e17,-9.85433004550377e17,-9.858858689826144e17,-9.86338733414852e17,-9.867915978470893e17,-9.872444622793268e17,-9.876973267115643e17,-9.881501911438016e17,-9.886030555760392e17,-9.890559200082767e17,-9.895087844405142e17,-9.899616488727516e17,-9.904145133049892e17,-9.908673777372265e17,-9.91320242169464e17,-9.917731066017014e17,-9.92225971033939e17,-9.926788354661765e17,-9.931316998984138e17,-9.935845643306514e17,-9.940374287628888e17,-9.944902931951263e17,-9.949431576273637e17,-9.953960220596013e17,-9.958488864918387e17,-9.963017509240762e17,-9.967546153563136e17,-9.97207479788551e17,-9.976603442207886e17,-9.981132086530259e17,-9.985660730852635e17,-9.99018937517501e17,-9.994718019497384e17,-9.999246663819759e17,-1.0003775308142134e18,-1.0008303952464508e18,-1.0012832596786883e18,-1.0017361241109257e18,-1.0021889885431633e18,-1.0026418529754008e18,-1.0030947174076381e18,-1.0035475818398756e18,-1.0040004462721132e18,-1.0044533107043505e18,-1.004906175136588e18,-1.0053590395688256e18,-1.005811904001063e18,-1.0062647684333005e18,-1.0067176328655378e18,-1.0071704972977754e18,-1.0076233617300128e18,-1.0080762261622502e18,-1.0085290905944878e18,-1.0089819550267254e18,-1.0094348194589627e18,-1.0098876838912001e18,-1.0103405483234377e18,-1.0107934127556751e18,-1.0112462771879126e18,-1.01169914162015e18,-1.0121520060523876e18,-1.012604870484625e18,-1.0130577349168623e18,-1.0135105993490999e18,-1.0139634637813375e18,-1.0144163282135748e18,-1.0148691926458124e18,-1.0153220570780499e18,-1.0157749215102872e18,-1.0162277859425247e18,-1.0166806503747621e18,-1.0171335148069997e18,-1.0175863792392371e18,-1.0180392436714746e18,-1.0184921081037121e18,-1.0189449725359497e18,-1.019397836968187e18,-1.0198507014004244e18,-1.020303565832662e18,-1.0207564302648993e18,-1.0212092946971369e18,-1.0216621591293743e18,-1.0221150235616119e18,-1.0225678879938493e18,-1.0230207524260867e18,-1.0234736168583242e18,-1.0239264812905617e18,-1.0243793457227991e18,-1.0248322101550367e18,-1.0252850745872742e18,-1.0257379390195116e18,-1.026190803451749e18,-1.0266436678839864e18,-1.027096532316224e18,-1.0275493967484614e18,-1.0280022611806989e18,-1.0284551256129364e18,-1.0289079900451739e18,-1.0293608544774112e18,-1.0298137189096488e18,-1.0302665833418863e18,-1.0307194477741236e18,-1.0311723122063612e18,-1.0316251766385987e18,-1.0320780410708361e18,-1.0325309055030735e18,-1.032983769935311e18,-1.0334366343675485e18,-1.033889498799786e18,-1.0343423632320234e18,-1.034795227664261e18,-1.0352480920964986e18,-1.0357009565287357e18,-1.0361538209609733e18,-1.0366066853932108e18,-1.0370595498254482e18,-1.0375124142576858e18,-1.0379652786899232e18,-1.0384181431221608e18,-1.0388710075543981e18,-1.0393238719866355e18,-1.0397767364188731e18,-1.0402296008511105e18,-1.040682465283348e18,-1.0411353297155855e18,-1.041588194147823e18,-1.0420410585800603e18,-1.0424939230122979e18,-1.0429467874445353e18,-1.0433996518767729e18,-1.0438525163090103e18,-1.0443053807412477e18,-1.0447582451734853e18,-1.0452111096057226e18,-1.0456639740379601e18,-1.0461168384701976e18,-1.0465697029024351e18,-1.0470225673346725e18,-1.0474754317669101e18,-1.0479282961991475e18,-1.0483811606313848e18,-1.0488340250636224e18,-1.0492868894958598e18,-1.0497397539280974e18,-1.0501926183603348e18,-1.0506454827925723e18,-1.0510983472248099e18,-1.051551211657047e18,-1.0520040760892846e18,-1.0524569405215222e18,-1.0529098049537596e18,-1.053362669385997e18,-1.0538155338182346e18,-1.0542683982504721e18,-1.0547212626827095e18,-1.055174127114947e18,-1.0556269915471844e18,-1.056079855979422e18,-1.0565327204116593e18,-1.0569855848438968e18,-1.0574384492761344e18,-1.0578913137083717e18,-1.0583441781406092e18,-1.0587970425728467e18,-1.0592499070050842e18,-1.0597027714373216e18,-1.0601556358695592e18,-1.0606085003017966e18,-1.061061364734034e18,-1.0615142291662714e18,-1.0619670935985089e18,-1.0624199580307465e18,-1.062872822462984e18,-1.0633256868952214e18,-1.063778551327459e18,-1.0642314157596963e18,-1.0646842801919337e18,-1.0651371446241713e18,-1.0655900090564087e18,-1.0660428734886463e18,-1.0664957379208836e18,-1.0669486023531212e18,-1.0674014667853586e18,-1.0678543312175959e18,-1.0683071956498335e18,-1.068760060082071e18,-1.0692129245143085e18,-1.0696657889465459e18,-1.0701186533787835e18,-1.0705715178110209e18,-1.0710243822432584e18,-1.0714772466754957e18,-1.0719301111077332e18,-1.0723829755399708e18,-1.0728358399722081e18,-1.0732887044044457e18,-1.0737415688366833e18,-1.0741944332689206e18,-1.074647297701158e18,-1.0751001621333956e18,-1.075553026565633e18,-1.0760058909978705e18,-1.0764587554301079e18,-1.0769116198623455e18,-1.0773644842945829e18,-1.0778173487268202e18,-1.0782702131590578e18,-1.0787230775912954e18,-1.0791759420235328e18,-1.0796288064557702e18,-1.0800816708880078e18,-1.0805345353202451e18,-1.0809873997524826e18,-1.08144026418472e18,-1.0818931286169576e18,-1.0823459930491951e18,-1.0827988574814324e18,-1.08325172191367e18,-1.0837045863459075e18,-1.0841574507781448e18,-1.0846103152103823e18,-1.0850631796426199e18,-1.0855160440748573e18,-1.0859689085070948e18,-1.0864217729393322e18,-1.0868746373715697e18,-1.0873275018038072e18,-1.0877803662360445e18,-1.0882332306682821e18,-1.0886860951005197e18,-1.089138959532757e18,-1.0895918239649946e18,-1.090044688397232e18,-1.0904975528294694e18,-1.0909504172617069e18,-1.0914032816939443e18,-1.0918561461261819e18,-1.0923090105584193e18,-1.0927618749906568e18,-1.0932147394228942e18,-1.0936676038551318e18,-1.0941204682873691e18,-1.0945733327196067e18,-1.0950261971518442e18,-1.0954790615840815e18,-1.0959319260163191e18,-1.0963847904485564e18,-1.096837654880794e18,-1.0972905193130314e18,-1.0977433837452689e18,-1.0981962481775064e18,-1.098649112609744e18,-1.0991019770419813e18,-1.0995548414742188e18,-1.1000077059064563e18,-1.1004605703386936e18,-1.1009134347709312e18,-1.1013662992031686e18,-1.1018191636354062e18,-1.1022720280676436e18,-1.102724892499881e18,-1.1031777569321185e18,-1.103630621364356e18,-1.1040834857965934e18,-1.104536350228831e18,-1.1049892146610685e18,-1.1054420790933059e18,-1.1058949435255433e18,-1.1063478079577809e18,-1.1068006723900183e18,-1.1072535368222557e18,-1.1077064012544932e18,-1.1081592656867308e18,-1.1086121301189682e18,-1.1090649945512055e18,-1.1095178589834431e18,-1.1099707234156806e18,-1.110423587847918e18,-1.1108764522801555e18,-1.1113293167123931e18,-1.1117821811446304e18,-1.1122350455768678e18,-1.1126879100091053e18,-1.1131407744413428e18,-1.1135936388735803e18,-1.1140465033058177e18,-1.1144993677380553e18,-1.1149522321702929e18,-1.11540509660253e18,-1.1158579610347676e18,-1.1163108254670052e18,-1.1167636898992425e18,-1.11721655433148e18,-1.1176694187637175e18,-1.1181222831959551e18,-1.1185751476281924e18,-1.1190280120604298e18,-1.1194808764926674e18,-1.1199337409249048e18,-1.1203866053571423e18,-1.1208394697893798e18,-1.1212923342216174e18,-1.1217451986538547e18,-1.1221980630860922e18,-1.1226509275183296e18,-1.1231037919505672e18,-1.1235566563828046e18,-1.124009520815042e18,-1.1244623852472796e18,-1.124915249679517e18,-1.1253681141117544e18,-1.1258209785439919e18,-1.1262738429762295e18,-1.1267267074084668e18,-1.1271795718407044e18,-1.1276324362729418e18,-1.1280853007051793e18,-1.1285381651374167e18,-1.1289910295696541e18,-1.1294438940018917e18,-1.1298967584341292e18,-1.1303496228663666e18,-1.1308024872986042e18,-1.1312553517308417e18,-1.1317082161630789e18,-1.1321610805953165e18,-1.1326139450275539e18,-1.1330668094597914e18,-1.1335196738920289e18,-1.1339725383242664e18,-1.1344254027565039e18,-1.1348782671887412e18,-1.1353311316209787e18,-1.1357839960532163e18,-1.1362368604854537e18,-1.1366897249176911e18,-1.1371425893499287e18,-1.1375954537821661e18,-1.1380483182144035e18,-1.138501182646641e18,-1.1389540470788785e18,-1.139406911511116e18,-1.1398597759433535e18,-1.1403126403755909e18,-1.1407655048078285e18,-1.1412183692400658e18,-1.1416712336723032e18,-1.1421240981045408e18,-1.1425769625367782e18,-1.1430298269690157e18,-1.1434826914012532e18,-1.1439355558334907e18,-1.144388420265728e18,-1.1448412846979656e18,-1.145294149130203e18,-1.1457470135624406e18,-1.146199877994678e18,-1.1466527424269155e18,-1.147105606859153e18,-1.1475584712913902e18,-1.1480113357236278e18,-1.1484642001558653e18,-1.1489170645881028e18,-1.1493699290203402e18,-1.1498227934525778e18,-1.1502756578848152e18,-1.1507285223170527e18,-1.1511813867492901e18,-1.1516342511815276e18,-1.1520871156137651e18,-1.1525399800460024e18,-1.15299284447824e18,-1.1534457089104776e18,-1.153898573342715e18,-1.1543514377749524e18,-1.15480430220719e18,-1.1552571666394273e18,-1.155710031071665e18,-1.1561628955039025e18,-1.1566157599361398e18,-1.157068624368377e18,-1.1575214888006147e18,-1.1579743532328522e18,-1.1584272176650895e18,-1.158880082097327e18,-1.1593329465295647e18,-1.159785810961802e18,-1.1602386753940393e18,-1.1606915398262769e18,-1.1611444042585144e18,-1.1615972686907517e18,-1.1620501331229893e18,-1.162502997555227e18,-1.1629558619874644e18,-1.1634087264197018e18,-1.163861590851939e18,-1.1643144552841766e18,-1.1647673197164142e18,-1.1652201841486515e18,-1.165673048580889e18,-1.1661259130131267e18,-1.166578777445364e18,-1.1670316418776015e18,-1.1674845063098388e18,-1.1679373707420764e18,-1.168390235174314e18,-1.1688430996065513e18,-1.1692959640387889e18,-1.1697488284710262e18,-1.1702016929032637e18,-1.1706545573355013e18,-1.171107421767739e18,-1.1715602861999762e18,-1.1720131506322138e18,-1.172466015064451e18,-1.1729188794966886e18,-1.173371743928926e18,-1.1738246083611635e18,-1.174277472793401e18,-1.1747303372256384e18,-1.175183201657876e18,-1.1756360660901135e18,-1.1760889305223508e18,-1.1765417949545882e18,-1.1769946593868257e18,-1.1774475238190633e18,-1.1779003882513006e18,-1.1783532526835382e18,-1.1788061171157757e18,-1.1792589815480133e18,-1.1797118459802506e18,-1.180164710412488e18,-1.1806175748447255e18,-1.1810704392769628e18,-1.1815233037092004e18,-1.181976168141438e18,-1.1824290325736755e18,-1.182881897005913e18,-1.1833347614381501e18,-1.183787625870388e18,-1.1842404903026253e18,-1.1846933547348626e18,-1.1851462191671004e18,-1.1855990835993375e18,-1.186051948031575e18,-1.1865048124638126e18,-1.1869576768960502e18,-1.1874105413282877e18,-1.187863405760525e18,-1.1883162701927624e18,-1.188769134625e18,-1.1892219990572375e18,-1.1896748634894748e18,-1.1901277279217126e18,-1.1905805923539497e18,-1.191033456786187e18,-1.1914863212184248e18,-1.1919391856506621e18,-1.1923920500828997e18,-1.1928449145151373e18,-1.1932977789473746e18,-1.1937506433796122e18,-1.1942035078118495e18,-1.194656372244087e18,-1.1951092366763246e18,-1.195562101108562e18,-1.1960149655407992e18,-1.196467829973037e18,-1.1969206944052744e18,-1.1973735588375117e18,-1.1978264232697495e18,-1.1982792877019866e18,-1.1987321521342244e18,-1.1991850165664617e18,-1.1996378809986993e18,-1.2000907454309368e18,-1.200543609863174e18,-1.2009964742954115e18,-1.201449338727649e18,-1.2019022031598866e18,-1.202355067592124e18,-1.2028079320243617e18,-1.2032607964565988e18,-1.203713660888836e18,-1.204166525321074e18,-1.2046193897533112e18,-1.205072254185549e18,-1.205525118617786e18,-1.2059779830500237e18,-1.2064308474822612e18,-1.2068837119144986e18,-1.207336576346736e18,-1.2077894407789737e18,-1.208242305211211e18,-1.2086951696434483e18,-1.2091480340756861e18,-1.2096008985079235e18,-1.210053762940161e18,-1.2105066273723983e18,-1.2109594918046356e18,-1.2114123562368735e18,-1.2118652206691108e18,-1.2123180851013484e18,-1.212770949533586e18,-1.213223813965823e18,-1.2136766783980605e18,-1.214129542830298e18,-1.2145824072625357e18,-1.2150352716947732e18,-1.2154881361270106e18,-1.215941000559248e18,-1.2163938649914854e18,-1.216846729423723e18,-1.2172995938559603e18,-1.2177524582881981e18,-1.2182053227204352e18,-1.2186581871526728e18,-1.2191110515849103e18,-1.2195639160171476e18,-1.2200167804493852e18,-1.2204696448816225e18,-1.22092250931386e18,-1.2213753737460977e18,-1.2218282381783352e18,-1.2222811026105725e18,-1.22273396704281e18,-1.2231868314750474e18,-1.2236396959072847e18,-1.2240925603395226e18,-1.2245454247717599e18,-1.2249982892039974e18,-1.2254511536362348e18,-1.225904018068472e18,-1.22635688250071e18,-1.2268097469329472e18,-1.2272626113651848e18,-1.2277154757974223e18,-1.2281683402296596e18,-1.228621204661897e18,-1.2290740690941345e18,-1.229526933526372e18,-1.2299797979586094e18,-1.230432662390847e18,-1.2308855268230843e18,-1.231338391255322e18,-1.2317912556875594e18,-1.2322441201197967e18,-1.2326969845520346e18,-1.2331498489842716e18,-1.2336027134165092e18,-1.2340555778487468e18,-1.2345084422809843e18,-1.2349613067132216e18,-1.235414171145459e18,-1.2358670355776965e18,-1.2363199000099338e18,-1.2367727644421716e18,-1.237225628874409e18,-1.2376784933066468e18,-1.2381313577388838e18,-1.2385842221711212e18,-1.239037086603359e18,-1.2394899510355963e18,-1.2399428154678339e18,-1.2403956799000712e18,-1.2408485443323087e18,-1.241301408764546e18,-1.2417542731967836e18,-1.2422071376290212e18,-1.2426600020612588e18,-1.243112866493496e18,-1.2435657309257334e18,-1.2440185953579712e18,-1.2444714597902085e18,-1.2449243242224458e18,-1.2453771886546834e18,-1.2458300530869207e18,-1.2462829175191583e18,-1.2467357819513958e18,-1.2471886463836334e18,-1.2476415108158707e18,-1.248094375248108e18,-1.2485472396803456e18,-1.2490001041125832e18,-1.2494529685448207e18,-1.249905832977058e18,-1.2503586974092956e18,-1.250811561841533e18,-1.2512644262737705e18,-1.251717290706008e18,-1.2521701551382454e18,-1.252623019570483e18,-1.2530758840027203e18,-1.2535287484349578e18,-1.2539816128671954e18,-1.254434477299433e18,-1.2548873417316703e18,-1.2553402061639076e18,-1.2557930705961452e18,-1.2562459350283825e18,-1.2566987994606203e18,-1.2571516638928576e18,-1.2576045283250952e18,-1.2580573927573325e18,-1.2585102571895698e18,-1.2589631216218076e18,-1.259415986054045e18,-1.2598688504862825e18,-1.2603217149185198e18,-1.2607745793507574e18,-1.2612274437829947e18,-1.2616803082152323e18,-1.2621331726474698e18,-1.2625860370797071e18,-1.2630389015119447e18,-1.263491765944182e18,-1.2639446303764196e18,-1.2643974948086572e18,-1.2648503592408945e18,-1.265303223673132e18,-1.2657560881053693e18,-1.266208952537607e18,-1.2666618169698445e18,-1.267114681402082e18,-1.2675675458343194e18,-1.2680204102665567e18,-1.2684732746987942e18,-1.2689261391310316e18,-1.2693790035632694e18,-1.2698318679955067e18,-1.2702847324277443e18,-1.2707375968599816e18,-1.271190461292219e18,-1.2716433257244567e18,-1.272096190156694e18,-1.2725490545889316e18,-1.273001919021169e18,-1.2734547834534065e18,-1.2739076478856438e18,-1.2743605123178813e18,-1.274813376750119e18,-1.275266241182356e18,-1.2757191056145938e18,-1.276171970046831e18,-1.276624834479069e18,-1.2770776989113062e18,-1.2775305633435436e18,-1.277983427775781e18,-1.2784362922080184e18,-1.278889156640256e18,-1.2793420210724936e18,-1.2797948855047311e18,-1.2802477499369684e18,-1.2807006143692058e18,-1.2811534788014433e18,-1.281606343233681e18,-1.2820592076659185e18,-1.2825120720981558e18,-1.2829649365303933e18,-1.2834178009626307e18,-1.283870665394868e18,-1.2843235298271058e18,-1.284776394259343e18,-1.2852292586915807e18,-1.285682123123818e18,-1.2861349875560556e18,-1.286587851988293e18,-1.2870407164205304e18,-1.287493580852768e18,-1.2879464452850053e18,-1.288399309717243e18,-1.2888521741494802e18,-1.289305038581718e18,-1.2897579030139553e18,-1.2902107674461926e18,-1.2906636318784302e18,-1.2911164963106675e18,-1.2915693607429053e18,-1.2920222251751427e18,-1.2924750896073802e18,-1.2929279540396175e18,-1.2933808184718548e18,-1.2938336829040924e18,-1.29428654733633e18,-1.2947394117685676e18,-1.2951922762008049e18,-1.2956451406330424e18,-1.2960980050652797e18,-1.296550869497517e18,-1.297003733929755e18,-1.2974565983619922e18,-1.2979094627942298e18,-1.298362327226467e18,-1.2988151916587046e18,-1.2992680560909422e18,-1.2997209205231795e18,-1.300173784955417e18,-1.3006266493876544e18,-1.301079513819892e18,-1.3015323782521293e18,-1.301985242684367e18,-1.3024381071166044e18,-1.3028909715488415e18,-1.3033438359810793e18,-1.3037967004133166e18,-1.3042495648455544e18,-1.3047024292777917e18,-1.3051552937100293e18,-1.3056081581422666e18,-1.306061022574504e18,-1.3065138870067415e18,-1.306966751438979e18,-1.3074196158712166e18,-1.3078724803034537e18,-1.3083253447356915e18,-1.3087782091679288e18,-1.3092310736001664e18,-1.309683938032404e18,-1.3101368024646413e18,-1.3105896668968788e18,-1.3110425313291162e18,-1.3114953957613537e18,-1.3119482601935913e18,-1.3124011246258286e18,-1.312853989058066e18,-1.3133068534903035e18,-1.313759717922541e18,-1.3142125823547786e18,-1.3146654467870162e18,-1.3151183112192535e18,-1.3155711756514908e18,-1.3160240400837284e18,-1.3164769045159657e18,-1.3169297689482035e18,-1.3173826333804408e18,-1.3178354978126781e18,-1.3182883622449157e18,-1.318741226677153e18,-1.3191940911093908e18,-1.3196469555416282e18,-1.3200998199738657e18,-1.320552684406103e18,-1.3210055488383406e18,-1.321458413270578e18,-1.3219112777028155e18,-1.322364142135053e18,-1.32281700656729e18,-1.323269870999528e18,-1.3237227354317652e18,-1.3241755998640028e18,-1.3246284642962404e18,-1.3250813287284777e18,-1.3255341931607153e18,-1.3259870575929526e18,-1.3264399220251901e18,-1.3268927864574277e18,-1.3273456508896653e18,-1.3277985153219023e18,-1.32825137975414e18,-1.3287042441863775e18,-1.3291571086186148e18,-1.3296099730508526e18,-1.33006283748309e18,-1.3305157019153275e18,-1.3309685663475648e18,-1.331421430779802e18,-1.33187429521204e18,-1.3323271596442772e18,-1.3327800240765146e18,-1.3332328885087521e18,-1.3336857529409897e18,-1.334138617373227e18,-1.3345914818054646e18,-1.3350443462377021e18,-1.3354972106699392e18,-1.335950075102177e18,-1.3364029395344143e18,-1.3368558039666522e18,-1.3373086683988895e18,-1.3377615328311265e18,-1.3382143972633644e18,-1.3386672616956017e18,-1.3391201261278392e18,-1.3395729905600768e18,-1.3400258549923144e18,-1.3404787194245514e18,-1.340931583856789e18,-1.3413844482890266e18,-1.341837312721264e18,-1.3422901771535017e18,-1.3427430415857388e18,-1.3431959060179766e18,-1.343648770450214e18,-1.3441016348824512e18,-1.344554499314689e18,-1.3450073637469263e18,-1.3454602281791636e18,-1.3459130926114012e18,-1.3463659570436388e18,-1.3468188214758764e18,-1.3472716859081137e18,-1.347724550340351e18,-1.3481774147725885e18,-1.348630279204826e18,-1.3490831436370634e18,-1.3495360080693012e18,-1.3499888725015386e18,-1.3504417369337756e18,-1.3508946013660134e18,-1.3513474657982508e18,-1.3518003302304883e18,-1.352253194662726e18,-1.3527060590949632e18,-1.3531589235272008e18,-1.3536117879594383e18,-1.3540646523916756e18,-1.3545175168239132e18,-1.3549703812561508e18,-1.3554232456883878e18,-1.3558761101206257e18,-1.356328974552863e18,-1.3567818389851005e18,-1.357234703417338e18,-1.3576875678495752e18,-1.358140432281813e18,-1.3585932967140503e18,-1.3590461611462879e18,-1.3594990255785254e18,-1.359951890010763e18,-1.360404754443e18,-1.3608576188752376e18,-1.3613104833074752e18,-1.3617633477397125e18,-1.3622162121719503e18,-1.3626690766041874e18,-1.3631219410364252e18,-1.3635748054686625e18,-1.3640276699008998e18,-1.3644805343331377e18,-1.364933398765375e18,-1.3653862631976123e18,-1.3658391276298499e18,-1.3662919920620874e18,-1.3667448564943247e18,-1.3671977209265623e18,-1.3676505853587996e18,-1.368103449791037e18,-1.3685563142232748e18,-1.369009178655512e18,-1.36946204308775e18,-1.3699149075199872e18,-1.3703677719522243e18,-1.370820636384462e18,-1.3712735008166994e18,-1.371726365248937e18,-1.3721792296811745e18,-1.3726320941134118e18,-1.3730849585456492e18,-1.3735378229778867e18,-1.3739906874101243e18,-1.3744435518423619e18,-1.3748964162745994e18,-1.3753492807068365e18,-1.3758021451390743e18,-1.3762550095713116e18,-1.376707874003549e18,-1.3771607384357868e18,-1.3776136028680238e18,-1.3780664673002614e18,-1.378519331732499e18,-1.3789721961647365e18,-1.379425060596974e18,-1.3798779250292114e18,-1.3803307894614487e18,-1.3807836538936863e18,-1.3812365183259238e18,-1.3816893827581612e18,-1.382142247190399e18,-1.382595111622636e18,-1.3830479760548733e18,-1.3835008404871112e18,-1.3839537049193485e18,-1.384406569351586e18,-1.3848594337838236e18,-1.385312298216061e18,-1.3857651626482985e18,-1.3862180270805358e18,-1.3866708915127734e18,-1.387123755945011e18,-1.3875766203772483e18,-1.3880294848094856e18,-1.3884823492417234e18,-1.3889352136739607e18,-1.389388078106198e18,-1.3898409425384358e18,-1.390293806970673e18,-1.3907466714029107e18,-1.391199535835148e18,-1.3916524002673856e18,-1.3921052646996232e18,-1.3925581291318602e18,-1.3930109935640978e18,-1.3934638579963354e18,-1.393916722428573e18,-1.3943695868608102e18,-1.394822451293048e18,-1.395275315725285e18,-1.3957281801575224e18,-1.3961810445897603e18,-1.3966339090219976e18,-1.3970867734542354e18,-1.3975396378864724e18,-1.39799250231871e18,-1.3984453667509476e18,-1.398898231183185e18,-1.3993510956154225e18,-1.39980396004766e18,-1.4002568244798973e18,-1.4007096889121347e18,-1.4011625533443725e18,-1.4016154177766098e18,-1.4020682822088474e18,-1.4025211466410847e18,-1.402974011073322e18,-1.4034268755055598e18,-1.403879739937797e18,-1.4043326043700347e18,-1.4047854688022723e18,-1.4052383332345093e18,-1.405691197666747e18,-1.4061440620989844e18,-1.406596926531222e18,-1.4070497909634596e18,-1.407502655395697e18,-1.4079555198279342e18,-1.4084083842601718e18,-1.4088612486924093e18,-1.4093141131246467e18,-1.4097669775568845e18,-1.4102198419891215e18,-1.410672706421359e18,-1.4111255708535967e18,-1.411578435285834e18,-1.4120312997180716e18,-1.4124841641503089e18,-1.4129370285825464e18,-1.413389893014784e18,-1.4138427574470216e18,-1.414295621879259e18,-1.4147484863114964e18,-1.4152013507437338e18,-1.415654215175971e18,-1.416107079608209e18,-1.4165599440404462e18,-1.4170128084726838e18,-1.417465672904921e18,-1.4179185373371584e18,-1.4183714017693962e18,-1.4188242662016335e18,-1.419277130633871e18,-1.4197299950661087e18,-1.420182859498346e18,-1.4206357239305833e18,-1.4210885883628209e18,-1.4215414527950584e18,-1.4219943172272957e18,-1.4224471816595333e18,-1.4229000460917706e18,-1.4233529105240084e18,-1.4238057749562458e18,-1.424258639388483e18,-1.424711503820721e18,-1.425164368252958e18,-1.4256172326851955e18,-1.426070097117433e18,-1.4265229615496707e18,-1.426975825981908e18,-1.4274286904141453e18,-1.4278815548463828e18,-1.4283344192786202e18,-1.428787283710858e18,-1.4292401481430953e18,-1.429693012575333e18,-1.4301458770075702e18,-1.4305987414398075e18,-1.4310516058720453e18,-1.4315044703042826e18,-1.4319573347365202e18,-1.4324101991687575e18,-1.432863063600995e18,-1.4333159280332324e18,-1.43376879246547e18,-1.4342216568977075e18,-1.434674521329945e18,-1.4351273857621824e18,-1.4355802501944197e18,-1.4360331146266575e18,-1.4364859790588948e18,-1.4369388434911322e18,-1.4373917079233697e18,-1.437844572355607e18,-1.4382974367878446e18,-1.4387503012200822e18,-1.4392031656523197e18,-1.439656030084557e18,-1.4401088945167944e18,-1.440561758949032e18,-1.4410146233812695e18,-1.441467487813507e18,-1.4419203522457444e18,-1.442373216677982e18,-1.4428260811102193e18,-1.4432789455424566e18,-1.4437318099746944e18,-1.4441846744069317e18,-1.4446375388391693e18,-1.4450904032714066e18,-1.4455432677036442e18,-1.4459961321358817e18,-1.446448996568119e18,-1.4469018610003566e18,-1.447354725432594e18,-1.4478075898648315e18,-1.4482604542970688e18,-1.4487133187293066e18,-1.449166183161544e18,-1.4496190475937812e18,-1.4500719120260188e18,-1.4505247764582561e18,-1.450977640890494e18,-1.4514305053227313e18,-1.4518833697549688e18,-1.4523362341872061e18,-1.4527890986194435e18,-1.453241963051681e18,-1.4536948274839186e18,-1.4541476919161562e18,-1.4546005563483935e18,-1.455053420780631e18,-1.4555062852128684e18,-1.455959149645106e18,-1.4564120140773435e18,-1.4568648785095808e18,-1.4573177429418184e18,-1.4577706073740557e18,-1.4582234718062932e18,-1.4586763362385308e18,-1.4591292006707684e18,-1.4595820651030057e18,-1.460034929535243e18,-1.4604877939674806e18,-1.460940658399718e18,-1.4613935228319557e18,-1.461846387264193e18,-1.4622992516964306e18,-1.462752116128668e18,-1.4632049805609052e18,-1.463657844993143e18,-1.4641107094253804e18,-1.464563573857618e18,-1.4650164382898552e18,-1.4654693027220928e18,-1.46592216715433e18,-1.4663750315865677e18,-1.4668278960188052e18,-1.4672807604510423e18,-1.4677336248832801e18,-1.4681864893155174e18,-1.4686393537477553e18,-1.4690922181799926e18,-1.46954508261223e18,-1.4699979470444675e18,-1.4704508114767048e18,-1.4709036759089423e18,-1.47135654034118e18,-1.4718094047734175e18,-1.4722622692056545e18,-1.472715133637892e18,-1.4731679980701297e18,-1.4736208625023672e18,-1.4740737269346048e18,-1.474526591366842e18,-1.4749794557990797e18,-1.475432320231317e18,-1.4758851846635543e18,-1.476338049095792e18,-1.4767909135280294e18,-1.4772437779602668e18,-1.4776966423925043e18,-1.478149506824742e18,-1.4786023712569795e18,-1.4790552356892168e18,-1.4795081001214543e18,-1.4799609645536916e18,-1.4804138289859292e18,-1.4808666934181665e18,-1.4813195578504044e18,-1.4817724222826417e18,-1.4822252867148787e18,-1.4826781511471165e18,-1.4831310155793539e18,-1.4835838800115914e18,-1.484036744443829e18,-1.4844896088760666e18,-1.484942473308304e18,-1.4853953377405412e18,-1.4858482021727788e18,-1.4863010666050163e18,-1.486753931037254e18,-1.487206795469491e18,-1.4876596599017288e18,-1.488112524333966e18,-1.4885653887662034e18,-1.4890182531984412e18,-1.4894711176306785e18,-1.489923982062916e18,-1.4903768464951534e18,-1.490829710927391e18,-1.4912825753596285e18,-1.4917354397918659e18,-1.4921883042241032e18,-1.4926411686563407e18,-1.4930940330885783e18,-1.4935468975208156e18,-1.4939997619530534e18,-1.4944526263852908e18,-1.4949054908175278e18,-1.4953583552497656e18,-1.495811219682003e18,-1.4962640841142408e18,-1.496716948546478e18,-1.4971698129787154e18,-1.497622677410953e18,-1.4980755418431903e18,-1.4985284062754278e18,-1.4989812707076654e18,-1.499434135139903e18,-1.49988699957214e18,-1.5003398640043779e18,-1.5007927284366152e18,-1.5012455928688527e18,-1.5016984573010903e18,-1.5021513217333274e18,-1.5026041861655652e18,-1.5030570505978025e18,-1.50350991503004e18,-1.5039627794622776e18,-1.504415643894515e18,-1.5048685083267523e18,-1.5053213727589898e18,-1.5057742371912274e18,-1.506227101623465e18,-1.5066799660557025e18,-1.5071328304879398e18,-1.5075856949201772e18,-1.5080385593524147e18,-1.508491423784652e18,-1.5089442882168899e18,-1.5093971526491272e18,-1.5098500170813645e18,-1.510302881513602e18,-1.5107557459458394e18,-1.5112086103780772e18,-1.5116614748103145e18,-1.512114339242552e18,-1.5125672036747894e18,-1.513020068107027e18,-1.5134729325392643e18,-1.5139257969715018e18,-1.5143786614037394e18,-1.5148315258359764e18,-1.5152843902682143e18,-1.5157372547004516e18,-1.5161901191326892e18,-1.5166429835649267e18,-1.517095847997164e18,-1.5175487124294016e18,-1.518001576861639e18,-1.5184544412938765e18,-1.518907305726114e18,-1.5193601701583516e18,-1.5198130345905887e18,-1.5202658990228262e18,-1.5207187634550638e18,-1.521171627887301e18,-1.521624492319539e18,-1.5220773567517763e18,-1.5225302211840138e18,-1.5229830856162511e18,-1.5234359500484884e18,-1.5238888144807263e18,-1.5243416789129636e18,-1.524794543345201e18,-1.5252474077774385e18,-1.525700272209676e18,-1.5261531366419133e18,-1.526606001074151e18,-1.5270588655063885e18,-1.5275117299386255e18,-1.5279645943708634e18,-1.5284174588031007e18,-1.5288703232353385e18,-1.5293231876675758e18,-1.5297760520998129e18,-1.5302289165320507e18,-1.530681780964288e18,-1.5311346453965256e18,-1.5315875098287631e18,-1.5320403742610007e18,-1.5324932386932378e18,-1.5329461031254753e18,-1.533398967557713e18,-1.5338518319899505e18,-1.534304696422188e18,-1.534757560854425e18,-1.535210425286663e18,-1.5356632897189002e18,-1.5361161541511375e18,-1.5365690185833754e18,-1.5370218830156127e18,-1.53747474744785e18,-1.5379276118800876e18,-1.538380476312325e18,-1.5388333407445627e18,-1.5392862051768e18,-1.5397390696090373e18,-1.540191934041275e18,-1.5406447984735124e18,-1.5410976629057498e18,-1.5415505273379876e18,-1.542003391770225e18,-1.542456256202462e18,-1.5429091206346998e18,-1.543361985066937e18,-1.5438148494991747e18,-1.5442677139314122e18,-1.5447205783636495e18,-1.545173442795887e18,-1.5456263072281244e18,-1.546079171660362e18,-1.5465320360925996e18,-1.546984900524837e18,-1.5474377649570742e18,-1.547890629389312e18,-1.5483434938215493e18,-1.5487963582537866e18,-1.5492492226860244e18,-1.5497020871182615e18,-1.5501549515504993e18,-1.5506078159827366e18,-1.5510606804149742e18,-1.5515135448472118e18,-1.551966409279449e18,-1.5524192737116864e18,-1.552872138143924e18,-1.5533250025761615e18,-1.5537778670083988e18,-1.5542307314406367e18,-1.5546835958728737e18,-1.555136460305111e18,-1.5555893247373489e18,-1.5560421891695862e18,-1.556495053601824e18,-1.5569479180340613e18,-1.5574007824662986e18,-1.5578536468985362e18,-1.5583065113307738e18,-1.558759375763011e18,-1.5592122401952486e18,-1.559665104627486e18,-1.5601179690597233e18,-1.560570833491961e18,-1.5610236979241984e18,-1.5614765623564362e18,-1.5619294267886735e18,-1.5623822912209106e18,-1.5628351556531484e18,-1.5632880200853857e18,-1.5637408845176233e18,-1.5641937489498609e18,-1.5646466133820982e18,-1.5650994778143355e18,-1.565552342246573e18,-1.5660052066788106e18,-1.5664580711110482e18,-1.5669109355432858e18,-1.5673637999755228e18,-1.5678166644077606e18,-1.568269528839998e18,-1.5687223932722353e18,-1.569175257704473e18,-1.5696281221367101e18,-1.5700809865689477e18,-1.5705338510011853e18,-1.5709867154334228e18,-1.5714395798656604e18,-1.5718924442978977e18,-1.572345308730135e18,-1.5727981731623726e18,-1.5732510375946102e18,-1.5737039020268475e18,-1.5741567664590853e18,-1.5746096308913224e18,-1.5750624953235597e18,-1.5755153597557975e18,-1.5759682241880348e18,-1.5764210886202724e18,-1.57687395305251e18,-1.5773268174847473e18,-1.5777796819169848e18,-1.5782325463492221e18,-1.5786854107814597e18,-1.5791382752136973e18,-1.5795911396459346e18,-1.580044004078172e18,-1.5804968685104097e18,-1.580949732942647e18,-1.5814025973748844e18,-1.5818554618071222e18,-1.5823083262393592e18,-1.582761190671597e18,-1.5832140551038344e18,-1.583666919536072e18,-1.5841197839683095e18,-1.5845726484005466e18,-1.5850255128327841e18,-1.5854783772650217e18,-1.5859312416972593e18,-1.5863841061294966e18,-1.5868369705617344e18,-1.5872898349939715e18,-1.5877426994262088e18,-1.5881955638584466e18,-1.588648428290684e18,-1.5891012927229217e18,-1.5895541571551588e18,-1.5900070215873964e18,-1.590459886019634e18,-1.5909127504518712e18,-1.5913656148841088e18,-1.5918184793163464e18,-1.5922713437485837e18,-1.592724208180821e18,-1.5931770726130588e18,-1.593629937045296e18,-1.5940828014775337e18,-1.594535665909771e18,-1.5949885303420083e18,-1.5954413947742461e18,-1.5958942592064835e18,-1.596347123638721e18,-1.5967999880709586e18,-1.5972528525031956e18,-1.5977057169354332e18,-1.5981585813676708e18,-1.5986114457999084e18,-1.599064310232146e18,-1.5995171746643832e18,-1.5999700390966205e18,-1.600422903528858e18,-1.6008757679610957e18,-1.601328632393333e18,-1.6017814968255708e18,-1.602234361257808e18,-1.6026872256900454e18,-1.603140090122283e18,-1.6035929545545203e18,-1.604045818986758e18,-1.6044986834189952e18,-1.6049515478512328e18,-1.6054044122834703e18,-1.605857276715708e18,-1.6063101411479452e18,-1.6067630055801828e18,-1.60721587001242e18,-1.6076687344446574e18,-1.6081215988768952e18,-1.6085744633091325e18,-1.60902732774137e18,-1.6094801921736074e18,-1.6099330566058447e18,-1.6103859210380826e18,-1.6108387854703199e18,-1.6112916499025574e18,-1.611744514334795e18,-1.6121973787670323e18,-1.6126502431992696e18,-1.6131031076315072e18,-1.6135559720637448e18,-1.614008836495982e18,-1.6144617009282196e18,-1.614914565360457e18,-1.6153674297926948e18,-1.615820294224932e18,-1.6162731586571694e18,-1.6167260230894072e18,-1.6171788875216443e18,-1.6176317519538819e18,-1.6180846163861194e18,-1.618537480818357e18,-1.6189903452505943e18,-1.6194432096828316e18,-1.6198960741150692e18,-1.6203489385473065e18,-1.6208018029795443e18,-1.6212546674117816e18,-1.6217075318440195e18,-1.6221603962762565e18,-1.6226132607084938e18,-1.6230661251407316e18,-1.623518989572969e18,-1.6239718540052065e18,-1.6244247184374438e18,-1.6248775828696814e18,-1.6253304473019187e18,-1.6257833117341563e18,-1.6262361761663939e18,-1.6266890405986314e18,-1.6271419050308687e18,-1.627594769463106e18,-1.6280476338953439e18,-1.6285004983275812e18,-1.6289533627598185e18,-1.629406227192056e18,-1.6298590916242934e18,-1.630311956056531e18,-1.6307648204887685e18,-1.631217684921006e18,-1.6316705493532434e18,-1.6321234137854807e18,-1.6325762782177183e18,-1.6330291426499558e18,-1.6334820070821934e18,-1.6339348715144307e18,-1.6343877359466683e18,-1.6348406003789056e18,-1.635293464811143e18,-1.6357463292433807e18,-1.636199193675618e18,-1.6366520581078556e18,-1.637104922540093e18,-1.6375577869723305e18,-1.638010651404568e18,-1.6384635158368054e18,-1.638916380269043e18,-1.6393692447012803e18,-1.6398221091335178e18,-1.6402749735657551e18,-1.640727837997993e18,-1.6411807024302303e18,-1.6416335668624676e18,-1.6420864312947052e18,-1.6425392957269425e18,-1.6429921601591803e18,-1.6434450245914176e18,-1.6438978890236552e18,-1.6443507534558925e18,-1.6448036178881298e18,-1.6452564823203674e18,-1.645709346752605e18,-1.6461622111848425e18,-1.6466150756170798e18,-1.6470679400493174e18,-1.6475208044815547e18,-1.647973668913792e18,-1.6484265333460298e18,-1.6488793977782671e18,-1.6493322622105047e18,-1.649785126642742e18,-1.6502379910749796e18,-1.6506908555072172e18,-1.6511437199394545e18,-1.651596584371692e18,-1.6520494488039293e18,-1.652502313236167e18,-1.6529551776684042e18,-1.653408042100642e18,-1.6538609065328794e18,-1.6543137709651167e18,-1.6547666353973542e18,-1.6552194998295916e18,-1.6556723642618294e18,-1.6561252286940667e18,-1.6565780931263043e18,-1.6570309575585416e18,-1.657483821990779e18,-1.6579366864230164e18,-1.658389550855254e18,-1.6588424152874916e18,-1.6592952797197286e18,-1.6597481441519665e18,-1.6602010085842038e18,-1.6606538730164416e18,-1.661106737448679e18,-1.6615596018809162e18,-1.6620124663131538e18,-1.662465330745391e18,-1.6629181951776287e18,-1.6633710596098662e18,-1.6638239240421038e18,-1.6642767884743409e18,-1.6647296529065784e18,-1.665182517338816e18,-1.6656353817710536e18,-1.6660882462032911e18,-1.6665411106355284e18,-1.666993975067766e18,-1.6674468395000033e18,-1.6678997039322406e18,-1.6683525683644785e18,-1.6688054327967158e18,-1.669258297228953e18,-1.6697111616611907e18,-1.6701640260934282e18,-1.6706168905256658e18,-1.671069754957903e18,-1.6715226193901407e18,-1.671975483822378e18,-1.6724283482546156e18,-1.6728812126868529e18,-1.6733340771190907e18,-1.673786941551328e18,-1.674239805983565e18,-1.674692670415803e18,-1.6751455348480402e18,-1.6755983992802778e18,-1.6760512637125153e18,-1.676504128144753e18,-1.6769569925769902e18,-1.6774098570092275e18,-1.677862721441465e18,-1.6783155858737027e18,-1.6787684503059402e18,-1.6792213147381773e18,-1.679674179170415e18,-1.6801270436026524e18,-1.6805799080348897e18,-1.6810327724671276e18,-1.6814856368993649e18,-1.6819385013316024e18,-1.6823913657638397e18,-1.6828442301960773e18,-1.683297094628315e18,-1.6837499590605522e18,-1.6842028234927895e18,-1.684655687925027e18,-1.6851085523572646e18,-1.685561416789502e18,-1.6860142812217398e18,-1.686467145653977e18,-1.6869200100862141e18,-1.687372874518452e18,-1.6878257389506893e18,-1.688278603382927e18,-1.6887314678151644e18,-1.6891843322474017e18,-1.6896371966796393e18,-1.6900900611118766e18,-1.6905429255441142e18,-1.6909957899763517e18,-1.6914486544085893e18,-1.6919015188408264e18,-1.6923543832730642e18,-1.6928072477053015e18,-1.693260112137539e18,-1.6937129765697766e18,-1.6941658410020137e18,-1.6946187054342515e18,-1.6950715698664888e18,-1.6955244342987264e18,-1.695977298730964e18,-1.6964301631632013e18,-1.6968830275954386e18,-1.6973358920276762e18,-1.6977887564599137e18,-1.6982416208921513e18,-1.6986944853243889e18,-1.699147349756626e18,-1.6996002141888635e18,-1.700053078621101e18,-1.7005059430533384e18,-1.7009588074855762e18,-1.7014116719178135e18,-1.7018645363500508e18,-1.7023174007822884e18,-1.7027702652145257e18,-1.7032231296467635e18,-1.7036759940790008e18,-1.7041288585112381e18,-1.7045817229434757e18,-1.7050345873757133e18,-1.7054874518079506e18,-1.7059403162401882e18,-1.7063931806724257e18,-1.7068460451046628e18,-1.7072989095369006e18,-1.707751773969138e18,-1.7082046384013755e18,-1.708657502833613e18,-1.70911036726585e18,-1.709563231698088e18,-1.7100160961303252e18,-1.7104689605625628e18,-1.7109218249948004e18,-1.711374689427038e18,-1.711827553859275e18,-1.7122804182915126e18,-1.7127332827237501e18,-1.7131861471559875e18,-1.7136390115882253e18,-1.7140918760204623e18,-1.7145447404527002e18,-1.7149976048849375e18,-1.7154504693171748e18,-1.7159033337494126e18,-1.71635619818165e18,-1.7168090626138872e18,-1.7172619270461248e18,-1.7177147914783624e18,-1.7181676559105997e18,-1.7186205203428372e18,-1.7190733847750746e18,-1.719526249207312e18,-1.7199791136395497e18,-1.720431978071787e18,-1.7208848425040248e18,-1.7213377069362621e18,-1.7217905713684992e18,-1.722243435800737e18,-1.7226963002329743e18,-1.723149164665212e18,-1.7236020290974495e18,-1.7240548935296868e18,-1.724507757961924e18,-1.7249606223941617e18,-1.7254134868263992e18,-1.7258663512586368e18,-1.7263192156908744e18,-1.7267720801231114e18,-1.7272249445553492e18,-1.7276778089875866e18,-1.7281306734198239e18,-1.7285835378520617e18,-1.7290364022842988e18,-1.7294892667165363e18,-1.729942131148774e18,-1.7303949955810115e18,-1.730847860013249e18,-1.7313007244454863e18,-1.7317535888777236e18,-1.7322064533099612e18,-1.7326593177421988e18,-1.733112182174436e18,-1.733565046606674e18,-1.734017911038911e18,-1.7344707754711483e18,-1.734923639903386e18,-1.7353765043356234e18,-1.735829368767861e18,-1.7362822332000986e18,-1.736735097632336e18,-1.7371879620645734e18,-1.7376408264968108e18,-1.7380936909290483e18,-1.738546555361286e18,-1.7389994197935232e18,-1.7394522842257605e18,-1.7399051486579983e18,-1.7403580130902356e18,-1.740810877522473e18,-1.7412637419547108e18,-1.7417166063869478e18,-1.7421694708191857e18,-1.742622335251423e18,-1.7430751996836605e18,-1.743528064115898e18,-1.7439809285481354e18,-1.7444337929803727e18,-1.7448866574126103e18,-1.7453395218448479e18,-1.7457923862770852e18,-1.746245250709323e18,-1.74669811514156e18,-1.7471509795737974e18,-1.7476038440060352e18,-1.7480567084382725e18,-1.7485095728705103e18,-1.7489624373027476e18,-1.749415301734985e18,-1.7498681661672225e18,-1.7503210305994598e18,-1.7507738950316974e18,-1.751226759463935e18,-1.7516796238961723e18,-1.7521324883284096e18,-1.7525853527606474e18,-1.7530382171928847e18,-1.7534910816251223e18,-1.75394394605736e18,-1.754396810489597e18,-1.7548496749218348e18,-1.755302539354072e18,-1.7557554037863096e18,-1.7562082682185472e18,-1.7566611326507843e18,-1.7571139970830218e18,-1.7575668615152594e18,-1.758019725947497e18,-1.7584725903797345e18,-1.758925454811972e18,-1.7593783192442092e18,-1.7598311836764467e18,-1.7602840481086843e18,-1.7607369125409216e18,-1.7611897769731594e18,-1.7616426414053965e18,-1.762095505837634e18,-1.7625483702698716e18,-1.7630012347021092e18,-1.7634540991343468e18,-1.763906963566584e18,-1.7643598279988214e18,-1.764812692431059e18,-1.7652655568632965e18,-1.7657184212955338e18,-1.7661712857277716e18,-1.7666241501600087e18,-1.767077014592246e18,-1.7675298790244838e18,-1.7679827434567212e18,-1.7684356078889587e18,-1.7688884723211963e18,-1.7693413367534336e18,-1.7697942011856712e18,-1.7702470656179085e18,-1.770699930050146e18,-1.7711527944823836e18,-1.771605658914621e18,-1.7720585233468582e18,-1.772511387779096e18,-1.7729642522113334e18,-1.7734171166435707e18,-1.7738699810758085e18,-1.7743228455080456e18,-1.7747757099402834e18,-1.7752285743725207e18,-1.7756814388047583e18,-1.7761343032369958e18,-1.776587167669233e18,-1.7770400321014705e18,-1.777492896533708e18,-1.7779457609659456e18,-1.778398625398183e18,-1.7788514898304207e18,-1.7793043542626578e18,-1.779757218694895e18,-1.780210083127133e18,-1.7806629475593702e18,-1.781115811991608e18,-1.781568676423845e18,-1.7820215408560827e18,-1.7824744052883203e18,-1.7829272697205576e18,-1.7833801341527951e18,-1.7838329985850327e18,-1.78428586301727e18,-1.7847387274495073e18,-1.7851915918817452e18,-1.7856444563139825e18,-1.78609732074622e18,-1.7865501851784573e18,-1.7870030496106947e18,-1.7874559140429325e18,-1.7879087784751698e18,-1.7883616429074074e18,-1.788814507339645e18,-1.789267371771882e18,-1.7897202362041196e18,-1.790173100636357e18,-1.7906259650685947e18,-1.7910788295008323e18,-1.7915316939330696e18,-1.791984558365307e18,-1.7924374227975444e18,-1.792890287229782e18,-1.7933431516620193e18,-1.7937960160942572e18,-1.7942488805264942e18,-1.7947017449587318e18,-1.7951546093909693e18,-1.7956074738232067e18,-1.7960603382554442e18,-1.7965132026876815e18,-1.796966067119919e18,-1.7974189315521567e18,-1.7978717959843942e18,-1.7983246604166316e18,-1.798777524848869e18,-1.7992303892811064e18,-1.7996832537133437e18,-1.8001361181455816e18,-1.800588982577819e18,-1.8010418470100564e18,-1.8014947114422938e18,-1.801947575874531e18,-1.802400440306769e18,-1.8028533047390062e18,-1.8033061691712438e18,-1.8037590336034813e18,-1.8042118980357187e18,-1.804664762467956e18,-1.8051176269001935e18,-1.805570491332431e18,-1.8060233557646684e18,-1.806476220196906e18,-1.8069290846291433e18,-1.807381949061381e18,-1.8078348134936184e18,-1.8082876779258557e18,-1.8087405423580936e18,-1.8091934067903306e18,-1.8096462712225682e18,-1.8100991356548058e18,-1.8105520000870433e18,-1.8110048645192806e18],"cosine":[1.0,-0.4893256757618757,-0.5869843187742857,0.9669843652719138,-0.46795316656242764,-0.5556727801915762,0.9412373818962331,-0.3895382640382172,-0.7992312391026811,0.983598588439949,-0.06324488271312602,-0.2598415605388933,0.5248929027165818,0.6986836942176156,-0.8910717884987964,0.9895131472310316,-0.37981930652932056,-0.805515145020825,0.7700395372706854,-0.5250363944186774,-0.698563069236116,0.8634452297456232,-0.9894887814327309,0.3799752578767154,0.20377956864433294,0.9005044934399565,-0.6400160235215296,0.9795824356656541,-0.04221607956922786,-0.9591314628784521,0.5068535268838358,0.7135935590472687,-0.8525436668994876,-0.3005910370326063,0.9981606730535025,-0.8178143622139766,0.756434558482531,0.4513705159667846,0.20410966355222146,0.9003578199235055,-0.6402750645531665,-0.5901857704315998,0.9261820756648385,0.14151018002404042,-0.994734647820146,0.3403747183521067,0.8298450092392944,-0.7423812020123931,-0.4702091094824519,-0.817620273718421,0.00022553633712735167,0.4510696107780334,0.46981096519593935,0.021337108716404908,-0.8295932289945842,-0.34079882278287293,0.9946883188693748,0.841440215650844,-0.926352070387603,-0.9966765508207214,-0.8528959330442745,0.9180149535898902,0.9982013286940886,-0.6239155602347362,0.9093438820012506,0.18339699065700013,-0.9981879173416368,0.3001607944895794,0.852779336001795,-0.713277483012531,-0.3206593193988434,0.959003729403347,0.728224474288002,0.48854166299002444,-0.9648914589339689,0.7704347323449342,0.9751197689167109,-0.45126888390311837,-0.7565090462114036,0.817748814659618,0.36036239010265464,0.7422315837646786,0.12035334500226487,-0.8808647307215832,-0.5728248131678667,-0.14173122009706374,0.8908669729310011,0.5903660109699641,0.16304319024820071,-0.9004549624611502,0.8741768815046987,-0.10649579638721278,0.9096242409018835,-0.8635026756320208,0.08503106615519461,0.5251333213644543,0.8524269414640917,-0.06352679652162026,-0.5066610305464151,-0.41298806176822017,0.04199298696068967,0.7925837604026847,-0.9549578981519299,-0.020439650682653677,0.703432750439227,0.9483373582664814,-0.2868275014888719,0.8181367755168774,-0.9412758420024606,-0.9924043782553786,0.6721340253341199,0.9337766329612593,-0.24525722564409622,-0.6512686477920823,-0.9258432182711831,0.9315153107306932,0.6674799425206374,-0.9931559424547659,-0.20323082490026498,-0.68338085942293,-0.280817405461184,-0.45745311922618587,0.698964004580867,-0.9871967434784967,0.4381725761386518,-0.7142221318400516,0.035729869238950704,-0.41868828303101047,-0.5012473049230308,-0.9794015740683921,0.3990093000894275,0.5197889647518147,-0.9977461273513498,-0.37914477803073987,-0.5380889229822169,0.9989610426661131,-0.6125987710702228,-0.9031634592439955,-0.9997114416153767,0.595413396792359,-0.5739298131116403,0.9999969752640192,-0.5779511555945306,-0.3342640246265311,0.1265732425112266,0.560220167409816,0.354508609825239,-0.9685731234698692,-0.7523951358664359,-0.3745883487046802,0.973711172231123,0.7664237440532328,0.39449390419671476,-0.9783964458035024,0.7325057504505038,0.1346344602344984,0.982626765537232,-0.7176564739507096,-0.15596943070444932,0.3061337021872836,0.7024734875636237,0.17723187547020808,-0.9066241294676505,-0.6869638513700227,-0.19841190750601254,-0.9925693938976411,-0.8561514899641142,0.07067614768917337,0.7747407342534467,0.8448105060859614,-0.240485381473735,0.9320049980506726,-0.833076685761679,0.027603084312110625,-0.9396035703003974,0.8209554852116174,-0.28211160513084593,-0.8139954657630553,0.9436710113037724,-0.015521314775907897,0.8263313019659293,-0.936316864864028,0.25219753761455943,-0.8382828945429824,-0.782324850576371,-0.05861684760680891,0.8498446860098797,0.9939673414995103,0.2102415258996304,0.6781320885195291,-0.9913713356456856,-0.18911198685915315,0.8717775444623778,-0.9025836339147046,0.16789451084310195,0.7091885571552564,0.8930907732103112,-0.14659896396679373,0.4950341391360714,0.9808232948485571,-0.40556939851896273,0.7389260898934001,-0.9763927234037669,0.3857655080737308,0.5320354322068827,0.9715081298502011,0.082343076230682,0.7672893814148907,0.9995136516789941,-0.6011549777103152,0.5680472555192719,-0.9999536792300742,0.5837838411585274,0.32750214877304074,-0.9541539790370103,0.3048494518907832,0.6030026349434044,-0.9994388121111952,-0.2842423488371274,0.3679349849079402,-0.9720539830808564,-0.5300746140123127,-0.3878994501215945,-0.9970652069833169,0.5116673492998117,0.40768354229260345,-0.9812716833505049,-0.49302215953589207,-0.42727806182839295,-0.9928372782338096,-0.7075551790882731,-0.17017530567391304,-0.9886644325046914,0.6921532916028491,0.19138381691667217,-0.912605334836737,-0.6764295531966663,0.48483353634428805,-0.9942184816438562,0.6603912753999095,0.23352403871125288,-0.929383984958732,0.8370189242928318,-0.0347651006775223,0.937126966133885,0.6274010755908076,0.27522995677307105,-0.9444341837569796,0.8126490962390548,-0.29589577767748143,0.9513022399756198,0.9388090221309133,-0.02991622164498499,0.8343545131151613,0.7867679182708516,0.05146220808789758,-0.8460464356767621,0.9230855275594552,-0.07298426463080349,-0.9692405336428314,0.7594235237292775,0.09447238352859913,0.6886436439323135,0.9056452954200336,-0.17495394205357379,-0.704118569603261,0.9860171753443259,0.1373068609596402,-0.8888284056281803,0.8865207607371549,-0.13234107579593812,0.8985025998934736,0.9779154163243402,-0.39236643121477127,0.7485508391874361,-0.9731814466519851,-0.08948208402791315,-0.7626744695697703,0.9679949481128747,-0.35234386160123293,0.7764434567202536,-0.962358332426133,-0.04645667511789645,0.5798380731360465,-0.9999886060918622,-0.3116660093232037,-0.597270989993137,0.9996531768361319,-0.5542139626490353,-0.8155593753916134,0.9427750318255527,-0.27040852630578144,-0.6312956544551611,0.9975881758260389,-0.5178106556283603,-0.4011301320863599,0.9798662183493164,0.4992435687283226,-0.6641462468142886,0.9936678785864355,-0.48044433382837304,-0.440251519988446,-0.9910141378298444,0.46142169256296683,-0.6957616721401483,-0.99072373041129,0.6816895981751503,-0.47855413617203785,0.9934235597552414,-0.6657550174074323,-0.22655070579506073,-0.9956614476603679,-0.4031022804508542,-0.5159667461326496,0.9974363535099569,0.829053811438215,-0.2683341768958795,0.9420546487207226,-0.8168039267029641,-0.5524197705830782,0.9995941333915266,-0.5989971708332102,-0.3096186050061061,0.9556420282536296,-0.7911705898316995,-0.04430492627233604,0.9998928864004228,-0.9258176262909147,-0.35032721010201273,0.6675303631219551,-0.7640658483790819,-0.6221777949856946,0.8646674631015803,-0.5277853801661923,0.18200439035732233,0.9774629664667134,-0.9871859402485561,-0.13020574787172093,0.885522087892609,-0.889813377829279,-0.4297153264838993,0.9856559429654129,-0.705646430079651,0.398947208533365,0.9047298349132042,-0.9977506688387457,0.09661649742044101,0.7580203986548969,-0.9697684095760869,-0.21513840275877452,0.9222549819470364,-0.8471927725117991,0.053613201278327735,0.7854365594916405,-0.9583453628587226,0.31846656444863003,0.5915086785169903,-0.9998162149596912,0.010510196285815065,0.8113919797917014,-0.9451400029771029,-0.29847135990974677,0.6257223343037094,-0.9980599240936394,0.5239273752749212,0.39455612609062934,-0.930176889017824,0.23561790872286176,0.9644248977566299,-0.9944474596492842,-0.07567425517896388,0.4338065382353059,-0.9134838491063422,0.702425292839764,0.1772985176288782,-0.9889855400218764,0.4486000082921964,0.8800252000349198,-0.9925776311212554,0.15101727645394328,0.2195657407668146,-0.9816843231895641,0.8447742724243342,0.5098155093932262,-0.8750353326140147,0.6384957895825512,0.7503367339539015,-0.9396267444454626,0.3699370005848552,-0.005974576275472565,-0.9993643418209054,0.604719539765512,0.3027973056288802,-0.9616217080258317,0.3295365654095611,0.5820336616841404,-0.8383198129976418,0.5698186436172259,-0.23120742348510703,-0.9656140375688979,0.768668942519611,0.08019623328996972,-0.9987201110678391,0.533858009185522,0.383777370256238,-0.975925195340308,0.7403756894033224,0.12309794944665382,-0.8821703035489487,0.8930603079795693,-0.1465319806724015,-0.9844213452967953,0.7107054991317457,0.16577073029014647,-0.9906497291480492,0.8728307545928183,-0.10374595009602773,-0.7533274076307905,0.971492078853629,0.2081352137637191,-0.9194612686072278,0.42029557018078145,-0.0607669747006351,-0.9959088227329936,0.9603672994262314,0.2501126111764487,-0.5857159963774405,0.9999279181107771,-0.017674985997975196,-0.8071829237502758,0.6139972898566458,-0.28417742669797535,-0.9499154249370592,0.9984804275644827,0.025449874320120146,-0.3879618618438633,0.9327835313648138,0.33259473772445647,-0.6533644952049649,0.7761008450339739,-0.4929632456164467,-0.8550364956367983,0.9852087217303925,-0.20052259032901668,-0.6853969882720303,0.9900207251515102,0.11147748652489374,-0.8765995397164222,0.8982638946521291,-0.6763796793860721,-0.7161547925658396,0.9830242464845329,-0.41617555373675846,-0.5036380964778719,0.9963084469338571,-0.11537673455269463,-0.7455807052849587,0.974199557317256,-0.376584618764597,-0.540417589778923,0.9990832384789698,-0.61041085973055,-0.29596045930300824,0.9513231114607765,-0.336293318611476,-0.5761920243383267,0.999999953304416,-0.02937297568378825,-0.3368688572314698,0.9511345650130429,-0.7732325698077177,-0.07305179842069098,0.999056886520743,-0.5399032275809829,-0.8253328272653535,0.9743373159117074,-0.2539105180197609,-0.11598383063014693,0.996255792026293,-0.8962613844763166,-0.4167312299528038,0.9209972518639732,-0.7157280774301511,-0.6768297338408336,0.898532322365556,-0.46538105428121135,0.11087007599714058,0.9901066715655074,-0.973165867444721,-0.20112133818916095,0.9851038034396751,-0.8547193876196586,-0.4934949276046878,0.7764861277613553,-0.6529016686934738,0.33201827193612715,0.9330036560369935,-0.8315439294830532,0.024838868198428572,0.9985139227290258,-0.6196372793390754,-0.28476337425051024,0.6144795997791959,-0.8068219811670062,-0.018286086554118154,0.8278854399722104,-0.9353422804928401,0.249520791023114,0.9605374842831838,-0.7805995200984842,-0.06137703317760074,0.851298770377976,-0.919220785153258,0.20753736077894952,0.6801617258859415,-0.9910050782523037,0.4613616164507831,0.8731288709127968,-0.9013897398228993,0.16516795634997988,0.9809290746986323,-0.9843136969807224,-0.1471365553123484,0.49743482456220095,-0.9956677462085686,0.12249137557903099,0.7407863952154845,-0.6934301448311383,0.38321290142972225,0.9118800054516452,-0.9987508377988049,0.07958698758986689,0.2891084170623229,-0.9654549576881392,-0.2318020188717338,0.5703208027536638,-0.837986443512222,0.5815365472506929,0.7959028228543293,-0.9617892285129811,0.30221474250188646,0.06590361275000998,-0.9993423659884431,-0.006585763586757753,0.3705047704119619,-0.9394174158651962,0.749932556931399,0.6389660648046982,-0.8753310257445232,0.5092896093063918,0.41020691951517796,-0.9818005823484507,0.21896941508534176,0.6715375827231997,-0.9925031161303592,0.879734760599934,0.44914617329792234,-0.9890758202351222,0.6901548867232699,0.19409713615839483,-0.9137323602073238,0.43325576291352935,0.4872501132487555,-0.994511593015401,0.1340959037969672,0.23621185620293358,-0.9304010936668734,0.83550269850892,-0.03200147506187885,-0.7986406969167941,0.625245453911722,0.27788727376093675,-0.9453394842025175,0.35400037051033384,0.011121359899812631,-0.9998277456586204,0.9378530050244416,-0.25645319322593535,-0.9585197496689707,0.7850581157421195,0.5958499551424273,-0.8475173356870698,0.5556869034889441,-0.21454147534578763,-0.9699173776497707,0.9919385487832287,0.09722481932575383,-0.9977095111320383,0.9044693036703729,0.3995075878529488,-0.706079372198475,0.7287761014691778,-0.4291633549687374,-0.8900921169284111,0.8852379609442209,-0.1295997273581042,-0.9872832874933714,0.698575224473638,0.1826053472742279,-0.5283044207128166,0.8643602688617332,-0.6216991854981937,-0.7644600137434293,0.9672972750171799,-0.3497546786354696,-0.9260484687025096,0.8418750553724991,-0.04369431882542744,-0.791544248839508,0.9554618328084838,-0.3090373816665594,-0.5994864775165233,0.9995765348131651,-0.5519101923709583,-0.8171563844300502,0.9418494401719394,-0.2677453426318575,-0.9551190315152293,0.9973924302641539,-0.5154430911434397,-0.40366154724578074,0.9804145516302478,-0.7256627321274771,-0.6662109519053887,0.9933533935296455,-0.478017378289702,-0.8637766515413235,0.9879941853914811,-0.1837451411529878,-0.18706296832492136,0.9107974592946434,-0.4397026574654689,-0.4809802813238169,0.8906199556284448,-0.6636891885037443,-0.7279817028406567,0.9277507604026448,-0.40057018568721536,0.0391624388285111,0.9976304132070793,-0.09837867180864565,-0.2709969053135768,0.9701989661127827,-0.8152055382610511,-0.5547226057173571,0.8197624648335341,-0.5967806724218327,-0.7843394235265153,0.9564528004248803,-0.3201444861749047,-0.047067205868111195,0.9998485924874625,-0.9247689362323582,0.7225344335474627,0.9457169184873622,-0.7622790140570233,-0.6243401969849653,0.8660532229496983,-0.5254346933934255,0.1792847148771492,0.9780429749694126,-0.9867409173473646,-0.13294687444840378,0.9946322295879461,-0.8885481635151937,-0.4322105285452346,0.7310839174719037,-0.7036844361842292,0.3964100999253481,0.905904296833234,-0.9979322153244077,-0.8791829104166435,0.992360746666355,-0.9690899270394937,-0.21783799420920613,0.558490814188902,-0.8457204416557681,0.59313501781636,0.8758910404352505,-0.9577668919952369,0.31584415348957123,0.9390193671294632,-0.3715814173907819,0.0077451446177001235,0.35715607815083944,-0.06706045848997114,0.7593354070613588,0.6278768970501508,-0.8683119768315759,-0.5805929523549598,0.8373532003010904,-0.9789781821065051,-0.8034442277238886,0.9651522011700024,-0.9941526677862038,0.8864580910814864,0.998808099521009,-0.7341710913334542,0.7004544811057175,0.6925942957626422,-0.7415647205647864,0.44612697574440974,-0.08934719739933177,-0.49844028049135775,0.14828324821358807,0.22226258921969116,-0.5622475326912202,-0.16402435871504986,0.5121923861982834,-0.7899344492509958,-0.46033266315105975,0.7521617932359919,-0.9405693943723694,0.9996496011595815,0.9187636581131713,-0.9994590988858264,0.9427298671241165,0.9957472626262127,-0.960859329412902,0.7938541551405432,-0.5176947919355401,-0.8285351937264963,0.5675441348467748,-0.2285162989072777,-0.6153938837248584,0.2858745913549604,0.08295218457944382,-0.44037311427707027,-0.023679798618651413,0.3863293266098853,-0.6958589407807637,0.7385141340200454,0.6520230427965913,-0.7772161903121533,0.993439056909828,0.8541169743196719,-0.9849037682289199,0.9802672336821995,0.16849700282459373,-0.9902686907785606,0.8714779538880167,-0.6328598297962482,-0.8990405922863137,0.6776827669886987,0.7149178882854306,-0.9205449623342407,0.4177848885865331,-0.058006688246382304,-0.30974737638471206,0.9595928726309838,0.2527889332984366,-0.9745976360893054,0.8422777555210527,0.5389269573844742,-0.808812118103126,0.6118123758954848,-0.28152517904448343,-0.950775926781449,0.998324229032664,-0.9086039022715691,-0.9999989268722398,0.9317832975676571,0.33520120919123586,-0.6554553468963742,0.774354141011266,-0.4905555294796126,-0.8564671519681926,0.9856787899126351,-0.197812822532413,-0.9739372370986212,0.9896272682117356,0.11422498917489585,-0.46836685371815845,0.8970452912594972,-0.674340403147601,-0.7180819774662627,0.9223073279568224,0.6755252572604593,-0.8977537804418341,0.9965420153400354,-0.11262959554666069,-0.25717478038749025,0.9735717675847003,-0.8234216725185053,-0.9854067345488803,0.8114711309794765,-0.6082182810992479,-0.7753691888578764,0.6542417803081634,-0.3336879193623785,-0.03274771213126437,0.38903020134938165,-0.9301271628921205,-0.33947111408734953,0.6588741661516907,0.2830656256143535,-0.6130817449627172,0.8587997093068178,0.565129289824327,-0.8268910123868968,0.9749560096652036,-0.9889654857991107,-0.9600434826179438,0.472369536534769,-0.8950315350987202,-0.9995511661550546,0.9199165083648045,-0.7137942083469547,0.40952588569710513,0.7540893826590729,-0.4629317994043876,0.10812153540487503,0.2615553365563757,-0.16691398823894432,-0.20382923106883935,0.5465461255737443,0.14538498634031327,-0.4958980388489947,0.7782255841415956,-0.9535478541030238,-0.7395958437415278,0.694704824114468,-0.9999710703730049,-0.9111518172682209,0.9986607990770863,-0.9488548738136479,0.7685823086828659,0.9659148119755908,-0.8051852524661953,0.5337434889526347,0.838951335594014,-0.5829760622539161,0.24684213655883058,0.12323234740631911,-0.3039020841587273,-0.06413674945052766,0.4233568412018287,-0.9181285082612624,-0.36885959359274134,0.9400228644697189,-0.9017127851746458,-0.6376030486891461,0.8744735212908531,-0.9911047190314518,0.16244013895825796,0.981462778502639,-0.9838220837823195,0.8509067911854273,0.9927179630344132,-0.8805752439438799,-0.4475635036830887,0.7426410363753305,-0.6914351269986349,0.3806573646832449,-0.017539577900915614,-0.9988851882016156,0.0768302904151847,0.994324781545075,-0.964730747843691,-0.23449098207183924,0.5725899892309259,-0.8364743144671267,0.5792848068284887,0.7975738779287515,-0.962542628437418,0.9951626858771653,0.9447606282431935,-0.9992382787462953,-0.009350842659444044,0.37307172298176233,-0.9384659943586655,0.7481004942313899,0.6410906828759978,-0.8766647029433162,0.5069079752093651,0.8465762249236958,-0.9823219743540704,0.216270519503335,0.1543540533031759,-0.9921613652014282,0.8784166591304071,0.451615015070271,-0.7456709504719798,-0.39788379113936595,0.7048244390479423,-0.9148523990452689,0.43076194418211344,-0.07230714454379758,-0.9947971002043541,0.9635268360682434,0.9870002647468584,-0.5763027071941863,0.8339800843479195,0.5268002478447561,-0.8652493056922095,0.6230850515135081,-0.2952471972237496,-0.66839319139683,0.9990509969636524,0.01388631058950382,-0.3772761770742386,0.04546316861716062,0.3216653166362603,-0.6445651277461577,-0.26492115218133333,0.5980683688761126,-0.8489817554545975,0.9831609606533137,0.8161344959185026,-0.158833869553459,0.991584355388041,0.9545930404215651,-0.9975186496242897,0.9032863962147698,-0.6848531251318475,-0.9271502954943474,0.72687986338981,-0.4266641435696224,-0.766345629648574,0.47957184433878863,-0.1268573879816049,-0.24329983819114326,0.18548531589665088,0.18532332071704985,-0.5306501775451518,0.8030131412427198,0.4794271785728283,-0.8914237412808055,0.9476950174635919,0.7267666380595852,-0.9270885140515651,0.9999366038766722,-0.9352943646867502,-0.997507029944426,0.9546421393994884,-0.78051486549066,-0.970626481017718,0.8162297473162229,0.55324852662922,0.20740487846984346,0.5982004816594388,-0.26508011173748103,-0.10448852064114543,0.9971890584923698,0.045298485101733545,-0.9998778354301221,0.7112305463909862,0.35125856647606224,-0.6682705630491097,0.7634238434962648,-0.4755867677595234,-0.8651666460516303,0.9884176013856771,-0.9757620795571742,-0.9776724410191919,0.9870267463399793,0.1311917741472739,-0.4834027488292941,0.8893590967576736,-0.6616182849344526,-0.7298747067822355,0.9287791738903606,-0.3980350281047475,-0.9051530547920722,0.99781684487465,-0.09562654514888629,-0.2736575616488928,0.9695252309987366,-0.813600916637136,-0.5570211993606253,0.8213429505346515,-0.5945596109372521,-0.7860517445171277,0.9572562594166911,-0.317523632130248,-0.04982912558107551,0.9997966535844238,-0.9237131752538691,-0.35550169002444915,0.6716379255254914,-0.7604863512369868,-0.6264978251868359,0.8674323608269036,-0.5230799890693537,0.17656366855955455,0.978615505211007,-0.9862883496793158,-0.13568698449364003,0.4873683739218163,0.07666592329377887,-0.43470242586100416,0.732967759612579,-0.7017170618136301,0.3938699603071326,0.9070718320751515,-0.9981061314728942,-0.8804971069253797,0.27801736625151724,-0.9684040346981231,-0.2205359200381457,0.9814943597810217,-0.8442416442962745,0.5909065081935896,0.874553475360625,-0.958558341707286,0.3132193275394449,0.054358740913530594,-0.3690128173206382,0.0049800337290649924,0.35973749974891156,-0.06430126251906848,-0.3037450237000785,0.6300266589570608,-0.8696802297023359,-0.5828421127416088,-0.17209735025320602,-0.9795384361047375,-0.8050874796349958,0.9658721248870316,-0.993850274484927,0.8851749595523224,0.9986693143516052,-0.9112197361447814,0.6984783135932077,0.9340540671781888,-0.7397067884476201,0.44365053204384564,-0.08659275076147575,-0.4960411875900598,0.14554808617760634,0.22495773821996848,-0.9806157056155023,-0.1667514452692209,0.9905135518540639,-0.7916270039039659,-0.4627856681067337,0.7539811013778699,-0.9415048525667059,0.9995725847971557,0.9198518545087895,-0.9995462139387947,0.9418039225977666,0.9959982021673612,-0.9600896039275605,-0.2510754345588486,-0.5153270340036307,-0.826983708446783,0.565265286550007,-0.22582342706006076,-0.9670370396874276,0.2832237327087859,0.9502257613627505,-0.4428540362183998,-0.0264440969380379,0.38887832903241637,-0.9324245946985033,0.7366469318485749,0.6541170952243165,-0.8847612036591737,0.993751490722535,0.8555518181992332,-0.9853786604413007,0.19954813418974326,0.17122198700605984,-0.9898800806683377,0.870118489734008,0.46680172585214147,-0.7569528701476281,0.6756468005331613,0.7168485812015479,-0.9216216174384495,0.4152710125472937,-0.055245958264419956,-0.9963933326258928,0.95881110864684,0.25546332255888776,-0.590189443993657,-0.19765122402442029,0.5412541400185193,-0.8104351281590091,0.6096227839264946,-0.2788707788078737,-0.9516291588526136,0.9981603971662752,0.931723440667062,-0.39305307736471196,0.9307759392177244,0.3378051176600396,-0.6575411868793495,0.7726015161623753,-0.48814406248271447,-0.8578912596251892,0.9861413214492036,-0.1951015422297389,-0.17568900615074212,0.2529484290189494,0.11697161844375255,-0.4708081799705446,0.8958198289260185,-0.6722959708027653,-0.7200036718057806,0.923372419619331,0.677561532144258,0.05071655467343697,0.9967679640387128,-0.10988159535809675,-0.9902457348997308,0.9729365337785523,-0.8218494875206499,-0.984932291417078,0.8130839699175856,-0.6060210519410967,0.2745120876296683,0.6521480256092286,-0.331079968686143,-0.03551126805500783,0.3864813756497097,-0.023844605424512513,-0.3420707752969298,0.6609517507774159,0.28571661393552156,0.48418039519735745,0.8602130514427317,0.5674083962842807,-0.8284428749775756,0.975567248760988,-0.9885520566075002,-0.9608136459226772,0.9957624365449135,-0.8937948421777543,-0.9994645067240225,0.9188287310480837,-0.7118548814877693,0.407001664888323,0.7522704178276268,-0.4604790048826216,0.10537216809937346,0.9908675251113712,-0.16418697711348573,-0.9811218977123416,0.5488596647968117,0.1481202153102633,-0.4982973583836213,0.7799590900940269,-0.6487027935805679,-0.7414541134503794,0.9349795627768444,-0.9999462142653905,-0.9122877773712397,0.9988000395171124,-0.07859554569680935,0.7668103539946841,0.9651953283946165,-0.8035423671999681,0.531403097157819,0.8309747137467914,-0.580727167072292,-0.7965045584989198,0.1259759639884462,-0.3012665413233054,-0.06689597532439129,0.9993058084347176,-0.9170292112230275,-0.37142836242698446,0.6842053832884482,-0.9029048167333948,-0.6397307970312751,0.8758114853151512,-0.50843344615347,0.15971107952523098,0.9819889778972177,-0.983322948134892,-0.1526044217291608,0.502224766707034,-0.8792614485258394,-0.45003454666454495,0.7444899991920778,-0.6894348223509822,0.37809891737431023,0.9141360134517159,-0.9990119009806795,0.07407300578474935,0.2943981389854843,-0.13311026261935024,-0.2371781523192468,0.5748547976005228,-0.8349557896158235,0.5770286371090549,0.7992388346354512,-0.9632886686186902,-0.7621723026024971,0.07142088930288626,-0.9991265511806182,-0.012115850234205658,0.9998457103007926,-0.9375073972024718,0.7462627114444608,0.9565009059846684,-0.8779916770342524,0.5045224652190581,-0.1552318961615574,-0.5548597619979534,0.21356997028497945,0.15708548857966265,-0.9918120280600945,-0.09821461681333113,0.4540804037274827,-0.7475105683574551,-0.4004191307084666,-0.37389597699918126,-0.9159654427865902,0.4282648317812218,0.8905449767299977,-0.9950750010276853,0.9627831620637289,0.987440904771096,-0.9771227199845808,0.832451093451963,-0.5733182357933895,-0.8638597052680005,0.6209198849149216,-0.2926041727923524,-0.6663338844411038,0.3488227632399427,0.016651155102412364,-0.3798355555046948,0.042700689727867315,-0.7432357977039361,-0.646676768189003,-0.2675865044830602,0.6002822096906772,-0.8504396837821754,0.9836625127398408,0.817729259085271,-0.971248812150344,0.991222580192353,0.9554131691774495,-0.9973201609415502,0.9020965820979093,-0.6828355838867582,-0.9261106725333225,0.7249780674796011,-0.4241616698334207,-0.8925991125908423,0.4771435720582371,0.8642773568044043,-0.24598098218639983,0.18276742635043694,0.1880398771503778,-0.5329918769478191,0.8615660082228987,0.4818520031074838,-0.7680135529602351,0.9485739720261713,0.7286632078917273,-0.9281214707448534,0.3996587084205379,-0.03816862508477395,-0.997698346209431,0.9538151466556347,-0.7787832744512114,-0.603903684371833,0.8146291155541943,0.5555498382375882,0.2046990492997775,0.595982340078219,-0.26241285400140135,-0.9567426257825441,0.9969780620656975,0.0480606376892146,-0.4087150988651387,0.713171623893394,0.3538461873790075,-0.6703250644973602,0.7616349112424394,0.6251167892153849,0.11961211021438278,0.9888334597928419,-0.17830618344878718,-0.9782497602973953,0.2363720412571007,-0.8592545859678746,-0.48582152016592495,0.8880914377158345,0.4331071794769874,0.3403067672588741,0.929800485795274,-0.39549682708764006,-0.9063250264010099,0.4492934567899751,-0.9524428184650603,-0.2763161255580561,0.9688440827515147,0.21880855946330655,0.5434882049627368,0.8229171561262054,-0.5923340033620325,-0.7877580552399525,0.6390928670790149,-0.9966154521143503,-0.6836000534282353,0.9997370700884394,-0.00675061327565353,-0.9993363747174905,0.6736840114049979,-0.7586878736259376,-0.6286506630937622,0.7960026182809296,-0.9894992290896234,-0.830512854901816,0.9791805528138459,-0.5406454692015927,-0.9654119887309945,0.28926622664922436,-0.8859973627013292,-0.43719099937779277,0.9119476582549186,-0.9314603718310406,0.3913268091010014,0.9082324317118098,0.9541291098460419,-0.8818045710231318,0.28067245388626605,-0.9677107377964095,-0.22323215961685372,-0.5396752191072343,0.1650053649380982,-0.9907553076103659,0.7905439124773392,-0.6355977039349562,0.9962323385475726,0.6802825643873891,-0.9996227805647134,0.002214884762356107,-0.6695478186371648,-0.06154157489121129,0.755725227336743,0.632171603587042,-0.7932489640491132,0.9901446411747853,0.8279778945113154,-0.9800912004073483,-0.8597896603764545,0.9665846634030741,-0.49373048804481395,-0.9496726169294826,0.44126582484037036,0.331762766561716,-0.38724647635912,0.9330629686225018,-0.9101211517328505,0.4411706961257586,0.8839346337799656,-0.49363830188454516,0.9665574838896885,0.22765116716013903,0.8223218909187598,-0.1694772568172018,-0.5850008465379941,-0.7933135056598913,0.6320894644826159,-0.9958287292472544,-0.6769510797256094,-0.7156129375736754,0.7194276340426892,-0.9996256863137158,0.6803602567991448,0.9962415261590847,-0.6356795382580477,0.7904789901107692,0.17487214707116808,-0.8254258999274378,0.980981684342925,-0.22312882853355231,-0.967737452290544,0.2805707084921013,0.9510836492172599,-0.33702407058898787,-0.9310789504633855,0.391424358033782,0.38296270649536707,-0.3361380621934908,-0.4370956594983829,-0.8860465111316281,0.4896886197167228,0.8569801204031742,-0.5405562895444714,0.9791590292603575,0.1739456619989131,-0.9894839017887507,-0.11521298055423373,-0.6285682208978695,0.05607437616134172,0.6736056679823517,-0.9993325078338463,-0.7162698408284208,0.9997394951755061,0.7564104233281053,-0.9966241606279649,0.11164131082594794,0.9899974802616109,-0.5924194073307871,-0.1604254474146259,0.5435771841434329,-0.8551219716635584,0.968870331676794,0.8843742199865391,-0.9524751146266144,0.3327502014322367,-0.9062802256516916,-0.39559418683861314,-0.9096868736469851,0.34040644322099883,-0.9499669298721745,-0.28401936610503964,-0.4857288630641851,0.9641913445352107,0.5367347565154293,0.8274499048931243,-0.17841048855363056,0.9888176568895057,0.11971735333033061,-0.9959237059761452,0.761703598767773,-0.6702463979835965,0.0012739801463340571,0.7130973116181074,-0.9998327361501577,-0.7534358124871289,0.9969862913022522,-0.642656101723873,-0.9906272247623622,0.16593330053272462,0.9807779410462403,-0.5473787264293596,0.8527617142562464,0.49676144804707456,0.2718521014522692,-0.87743922066022,0.9086257668912686,-0.9343500592330541,0.39975587698669734,0.9115611947036584,-0.3446678209828169,0.9485404102792734,-0.8902155362017719,-0.965656883000485,-0.23104703377725627,-0.5329021811098996,-0.8299884031716197,0.5821677067017088,-0.9881310688007942,0.8015241327633534,-0.7580745805644485,0.06512922739759044,-0.9993702052396887,0.7250510765588776,-0.7099101116809746,-0.6829130242183181,-0.043423717726989663,-0.9973279107317431,-0.7883372902756836,0.9912365888449608,-0.5997032463188229,-0.9816529028462129,0.5511690073577811,-0.8503839127719226,-0.5006928678630161,0.8801034813840654,0.44845266737361056,0.3241820139311182,0.9359567964222993,-0.37973749317729755,0.926383446958484,-0.917488407560355,0.8876585413441784,-0.2927055365326042,0.9644684647875417,0.23545769348694826,0.529058642176401,0.8325098258940477,-0.18732903843368728,-0.7981734216211056,0.6258509189788284,-0.995064487720684,-0.06965468970174286,0.9991989730761152,-0.7281673755723481,0.7067083065880726,0.04900043506636933,-0.7474401504592447,-0.6418536538972017,0.7855385835113633,-0.9918255599728092,0.15698079891769062,-0.8150486349484277,-0.21529939291172226,-0.9697281677106873,0.5046139868011319,-0.8779409301448415,-0.45250214861535915,-0.3198878718621849,-0.9375442779415942,-0.9284713380204748,0.9152535373222986,-0.4298641773569705,0.9456288571758652,0.297039633536792,-0.9632602043270645,0.8661886072188943,-0.8294040017896975,0.18184228795795848,0.5747680553433987,0.8008976802439239,-0.6223068462610821,0.9946041665078009,0.07417871898278937,-0.9990071841456974,-0.014880765169386112,0.9998904600016933,-0.6895116028336139,-0.9972508820832178,0.6453251971886623,0.09359423435246231,-0.5988651561830194,0.818270485436468,-0.9833422214992009,0.21086778807907344,0.970825766606096,-0.5085247241912753,0.8757603168103891,0.4565423204188314,0.9355876506851192,-0.40295140861372686,-0.3713299389258616,-0.9170714829207904,0.42576444480414494,-0.9441438835654581,-0.4786988804833272,-0.8633853579959954,0.2442643898768482,-0.976530899597893,0.8375012375276621,0.9875891202752466,-0.8036054618012903,0.6187499706711463,-0.0686102835865206,-0.664269482598038,0.9987948423941564,0.019415872298128578,-0.9999473080791413,0.6927896477688705,0.9975767197002509,-0.6487834640457242,-0.991691429408598,0.6024914606587675,0.14801537895036937,-0.5540767354325956,-0.2064318450114271,-0.9719033924636331,0.26412100219870244,0.9562259927030682,-0.46057309966457666,0.900899870417286,0.40709849031810963,-0.925063968393251,-0.35218957540461443,-0.4216559528944162,0.2960398121935552,0.47471165146742966,-0.9607842565025785,-0.24866024537471984,0.9755439539096287,-0.8399711237493064,-0.9868665761192741,-0.13217767065519825,0.9947122308193228,-0.7697815208324958,0.08322210621108193,0.7305542062573128,-0.023950579979342905,0.9999835839940646,0.7451178500765047,-0.9978820339254585,0.6522283833206105,-0.7770457287197714,-0.60610536992914,0.8130222550175764,0.5578469020298039,-0.8461343090212733,-0.5076230057730561,-0.2597435898178652,0.8713450836756547,0.31658038573509517,-0.8989219599119374,-0.41123719668487335,0.9233317186027383,0.3564311027217189,-0.9444883583169232,0.8958669342841111,-0.47071465609167745,-0.8679267789186763,0.5222320854620648,-0.9745369381150619,-0.5719095660110413,0.9861237289139007,-0.8089713712283697,-0.9942361694319152,0.7726688133593473,0.9988456775965264,-0.733643958044308,0.7010081366878876,0.6920342992031802,0.030872047028348233,-0.7352647985665383,-0.09012011935404264,-0.9928175689827142,0.6097068096442902,0.9839703852039249,-0.5616055919051492,0.8437081810911918,-0.973998636795409,0.25536083366811,-0.45964358651146886,-0.3122746606011074,-0.9403055624549993,0.36808826904940345,-0.9215804728811142,0.9224119692272112,0.9429884411806195,0.3046924413235415,-0.9610740351579512,0.8701707285389205,-0.5183585998155441,-0.8394025771197414,0.19965200593056828,-0.9853605939419051,-0.6160053984347734,0.9937396533786464,-0.7755402095801858,-0.99861752980706,0.7367186163932608,-0.6977662318592656,-0.6953013869218571,0.739037155814978,0.6514344439935326,0.08560188635579359,0.9933500062358965,-0.1445640477147147,0.8077071189135304,-0.9864779611908862,0.9727186856155247,-0.5154178765688678,0.8718582945944273,0.4636670846775125,0.30796251096352995,0.9418395521772199,-0.41948914299309714,-0.9202415305439009,0.41848984229041397,-0.9414691237106042,-0.3090093975908349,0.9598109587614886,-0.8723967759222097,0.26181675615711536,-0.19417863126800805,-0.5644445875033831,-0.8083555034862386,0.14565296136177297,-0.9932226928744636,-0.08669835692731236,-0.6505990475760427,0.02743829339892124,-0.9999974888187484,0.6985541700336613,0.021803669174030166,-0.6548690482273071,-0.08108189224882979,-0.9938620070544715,-0.8109859788326435,0.9855476244702754,-0.19857348066852007,0.8388039020521391,0.5192994462755057,-0.8696278991857571,0.961377528484946,-0.4766006354803123,0.41441488871222154,0.3596385895460192,0.9220071390636957,-0.4143660605947693,0.9399304371641699,0.31331999653159964,0.4586658951114809,-0.25642475289801575,0.9737487103190294,-0.844298454189934,0.5606946411082117,0.8110173672673314,-0.1501388549766981,0.9926852985549227,0.6548285006305166,-0.9980996049305357,-0.03197206585570558,0.9999973671433791,-0.7017925816182838,0.7328956442917354,-0.9988979376180818,-0.7719696983024524,-0.6124684636372393,-0.13558195926137265,-0.9863058382400558,0.19412600075579206,-0.8363258518401097,-0.5231703323065924,-0.9598260145089346,0.4716853810176544,-0.8953773872804173,0.9448493703691486,-0.3554026078964221,-0.9237537789032804,0.3733230121943404,-0.30801355440416567,-0.4636195483388698,0.9572255930778519,0.2608062207150134,-0.972706237737512,0.8467203628765575,-0.5569331594039388,-0.813662545788156,0.6052296329684428,0.7777380005077773,-0.09573206364971033,-0.739073297819922,0.036505180543295754,0.6879546537343162,0.02285031906483491,0.9986203485313626,-0.6616977679638771,0.7690785576345291,0.616047661024466,0.13108668478058236,0.987043760496634,-0.18967452704098514,0.5184044798011465,0.24759410047571445,-0.86511348141539,-0.475680014229365,0.8933483649691585,-0.946325136917125,-0.918435768088476,-0.3681381531227487,-0.4060930076530388,-0.9013769984708233,0.32192176783409904,0.8740968155782214,-0.2651823229013257,0.9716437534307265,0.5615611996363827,-0.9839608160252097,0.8162909846288023,-0.6016127092810322,-0.7805811286691478,0.10024600918540129,0.7421210982799774,-0.04103754420080558,-0.7010463973676119,-0.018315505889125158,0.7266938209075005,0.07760402606139596,-0.766171594523809,-0.6196141843112644,0.8029499619535075,0.5719535763456575,0.1852191511053656,0.9767673443419587,-0.2431970173213735,-0.9623319271302071,0.30031804214856633,-0.8913009635817156,-0.3563809745239888,0.916632108284928,-0.927190009196598,0.4019439066105109,0.9033318712492208,-0.4555628719489016,-0.8762910785816201,0.507576780086375,0.8461629023883164,-0.21194347589730497,-0.5493758998473784,0.15358725469769946,-0.992258044530177,0.7834081977424913,0.9978785424872896,-0.745153630899694,0.045569063582799996,-0.9998735650891489,0.013780315903996719,0.9990556084728428,-0.07308114403458216,-0.9947177394641237,0.13212448977644226,-0.8002381772652156,0.9884586701621321,0.8344080548307568,-0.9777293218622489,0.23879493081483044,0.9635551987898091,-0.29598856523635203,-0.9459862397780779,0.4308576074722613,-0.9148095903830036,-0.37655736048757266,0.9371608620501677,-0.9052681595582976,-0.9562102913533644,0.8784673134325933,-0.27391807037161753,-0.8485714163841402,0.2163740143511433,0.81568579882459,-0.158067620811064,0.9916845262914963,0.0992043171524553,0.6410093242638726,-0.9968173960341437,-0.6854184138290356,-0.707486531824424,-0.009244842413031393,0.664309585715502,0.0685567584913726,0.9951730942708726,-0.6267089153459814,0.7975099290795892,0.18624784587828888,-0.8318995989868694,-0.5299922425614615,0.8633582871921467,-0.9647586469907239,0.48760486844924233,0.9474470336895428,-0.34789050280828,-0.9267973373760091,0.38075538692205485,-0.9355687053142073,-0.32522294355486436,-0.4474687061225857,-0.8806254753589247,-0.9708129003479354,0.8509624725109837,-0.22080010128903338,-0.8183013248880503,0.16254473496029112,-0.9910906058825378,-0.10371668456666204,0.997246905125143,0.044523215431363276,0.6821086503480447,0.7106847991596313,-0.7242926857236196,0.999408653567706,-0.6751912915494255,0.6223488422727401,0.12312714987068495,0.9882995311509079,-0.18178953076448207,0.8293740282674116,0.5338331285587173,0.22997611010705443,-0.482723248269867,0.8897136474799103,-0.9488883355395727,0.34363448738838237,0.9284912630407658,-0.3849455799820795,0.9339573008925907,0.45245430359256744,-0.9535159156834315,-0.27291105070462285,-0.49580598350988897,-0.8533360215770596,0.5464573509853505,-0.9805625974479054,-0.5951834182219207,-0.78557178256226,0.10822691819194391,-0.9969003081801007,-0.049054021971400075,-0.6787848536776036,-0.713868445401233,-0.9992011186418633,0.6710627617431716,-0.7609900550608326,0.9960223731131184,-0.11862463394035802,-0.9889811844448482,0.5867411672766536,-0.5291041692227995,-0.23540555015540351,0.8587453969904102,0.4866905807295526,-0.8876338334656683,0.9503101156759095,-0.33937140229144613,-0.930166086625831,0.39458316304640023,0.9067448594823238,-0.3337878465009719,-0.8801289528429199,0.2772718249446166,0.49186187613308285,0.8556920147507575,0.9816426713605136,-0.823481818206688,0.5915324030037526,0.7883702978201316,-0.11273492523815246,0.9965332017592138,-0.7571298399328916,0.7099478969436109,0.005756075256274593,-0.7180081984672942,-0.6744186755105529,0.7580395897385396,-0.9964162796761922,0.11411967751618791,-0.5822113281590096,-0.1728617723333085,-0.9793819549700776,0.5414818737179428,-0.8564124273017093,-0.49064790038391826,-0.2786106557122961,0.3446174565690343,-0.9115391338345739,0.9318217736746464,-0.3904113724024688,-0.908648171025586,0.33806004134162226,-0.9507430727449203,-0.2816268948029892,0.9674595677468264,0.2242015092051418,0.5388376609242573,-0.1659862079469888,-0.5878692180436043,0.989186555919884,0.634829570989569,0.7534710883656056,-0.05811251425736849,0.9995949711984182,-0.001220328764098026,0.7148437648001881,0.6777607142962325,-0.7550735290808579,-0.11966408759430587,0.7926429883197921,-0.990283437766224,0.16839251268891722,0.9802881828787536,-0.5452895755203923,-0.9668391377379805,0.2839679237160993,-0.8834194640722536,-0.44215809892798397,-0.33082437403210335,0.3881632430656125,0.3862315497291098,0.9105327887259818,0.9524587701517317,-0.8843992620489827,0.28597617068181463,-0.9663019515727308,-0.22861949757324115,-0.5350111481857616,0.17045734317230463,0.584193938705083,-0.11169462669101789,-0.6313184739411337,0.9957374911219811,0.6762187228600478,-0.9994556071622714,-0.0033154428342030994,0.9996524015188823,-0.05602080907214875,0.7520919341092851,0.6364469754509231,-0.7898694435745874,-0.5895627863009144,0.8248640536504588,-0.9811742430769349,-0.8569524699370391,0.9679875630960102,-0.4985321758247084,0.8812849953963416,0.44622184434481377,-0.9077713337694913,-0.39233936634339006,0.9310593761317745,0.33707458270661284,0.43620092350757567,-0.9478919907221831,-0.48882122558100266,-0.8574922411609386,0.23303278249604653,0.8254561855306162,-0.17492497153666992,-0.5805066406006169,-0.7966682989460218,0.6277943886220705,-0.057067340928732176,-0.6728702665237258,-0.7194648975375358,0.7155754611825899,-0.9997617006572279,0.6844028921830024,0.9967053201105357,-0.11065291567584083,0.787079648650563,0.5932203592898556,-0.822291360863045,-0.5444117061475715,-0.21773453386889963,-0.969116073807229,0.2752582445052655,0.9527776020439958,-0.4502764095296155,-0.9330822663983058,0.39650741792664523,0.37784815242767444,-0.3413414356434694,-0.43211493385319816,0.2849728256595172,0.48485927078442426,0.8598170561502577,-0.5358953322789916,0.9780208777172776,-0.8336390848163115,-0.9886688498963028,-0.12070469862263883,-0.6242573875342559,0.06159512453142469,0.6695079670615018,0.7226077143290552,-0.012386688088392432,0.999850431451596,0.7527814970582558,-0.9970629539186427,0.1061438686225807,0.9907625845929305,-0.5968657278100756,-0.15496431561483748,0.5482107858482899,-0.8522418350434193,-0.49762436587627457,-0.27089486564006526,-0.9541451714655986,0.327529950158734,-0.9039288308747201,-0.40066731206502515,-0.9119696704733066,0.3456012660788064,0.42802005419174044,-0.28931758398806307,-0.480887340858517,-0.8621241819112769,0.5320603461498755,0.8305427375206454,-0.5813587753014862,0.9879778030414266,0.12520605598647128,-0.9954096444164144,0.7652751784530896,-0.07621440709307518,0.006804263467396559,0.7092093015084091,0.6836392103016435,-0.7497879949961489,0.9974000749047545,-0.10163263784533963,0.7814515381797486,0.160477122516017,0.9818420561931661,-0.5519985870733395,0.8498601932058036,0.50155353394025,0.26652591358800004,0.9554931110233267,0.9063023530086621,-0.9363065319442238,0.3788172460560777,-0.9260084567894168,-0.34985398637408194,0.9467746993697301,-0.8927211965896181,-0.964205227732665,-0.23642417200036256,-0.5282144138120687,-0.8330604091489795,0.5776622841071501,-0.987266430275604,-0.129704837455242,-0.7616696766110049,0.07064679697661867,-0.9991586790537146,0.7288486843999614,-0.7060043027460502,-0.6869424687083296,-0.037897962876123875,0.10718480694817098,-0.7849227503106143,0.9919519761238975,-0.15599849480213912,-0.9826923915217626,0.5557750318953516,-0.8474610669848842,-0.5054723834197045,0.877464332748788,0.45338883457041224,0.3189454149223129,-0.3997078881750259,-0.3746156304608057,0.9242866684311251,0.4289659853340186,0.8901916859343976,-0.29798915477585036,0.9629926197823026,0.24082891329136963,0.5243576143888854,0.8355609420201097,-0.5739539085242098,0.12416731504488585,0.6215280254572296,-0.9945004965202044,-0.07517049959683106,0.998962383165229,-0.7319467092823319,0.7027847791830923,0.04347602168951834,-0.7437547760554596,-0.6460846283112639,-0.09260399640458403,0.5996613511257197,0.15151665769276332,-0.8118319521846806,0.8504114580159512,-0.9710637674000511,0.5093808336911811,-0.875279764932816,-0.4574269539809197,-0.314643260502964,-0.9394537464258593,0.37040630780579975,-0.34887304424674553,-0.4248643248960865,0.9438156766568432,0.47782544312547615,-0.9617601999473295,0.8689389509993379,0.976316211509726,0.1872776115730676,0.5702337248459902,0.8041969874778966,-0.6179683523613291,-0.767516311504777,0.07969265571582056,-0.9987455353773218,-0.7067453459167509,0.9999570231891787,-0.6935065199433447,0.7407151832997779,0.6495399745318045,0.08808677148953604,-0.6032849440886683,0.8150789670038628,-0.9843323935821142,0.20545860736207594,-0.8426105591830906,-0.2631616314060735,0.8730771897704236,0.4614556626339158,0.9375260646893301,-0.40800670200760025,-0.36618936469049274,-0.9192625185936584,0.4207539236196401,-0.9423070239522499,-0.4738360656168922,0.9605079935826231,0.5252487695716647,-0.975324863308096,0.8405103860680988,0.9867054297448715,-0.8068846037168783,0.6143959656501436,0.7704159734883392,-0.6601254574276092,0.9985081401512559,0.024944840181374335,-0.9999887881430146,0.03441137858689583,0.9979462359266897,-0.6529819576062929,-0.9923876799033599,0.6068961255217108,0.14254372417540848,-0.5586720529077587,-0.2010174982977517,-0.9731902541911653,0.2587830395876586,0.9578296992595372,-0.3156368261961786,0.8984857910183582,-0.9425236508508664,-0.9229493486430687,-0.35736016285710537,-0.41663486606897837,0.3013176996667936,0.4698369397620971,-0.9592360264501335,-0.2540130474009188,0.9743134495075685,0.5710934311876346,-0.9859581327295716,-0.13765743395793065,0.994129049105803,-0.7732997855141185,0.08873195634213003,0.734319430796113,-0.700298518163766,0.9999999800809464,-0.029877948478514667,-0.998226518150907,0.08912956439081227,-0.7735528263684717,-0.6104948211311215,-0.9841472599003606,0.5624282159436346,0.19657225365087033,-0.5123800413316298,-0.25439912376196244,0.868618199032402,0.3113296847779907,0.9406435764802138,-0.36716335668566275,0.9211939424967702,0.36159273768869954,-0.9426569607803299,0.8983104741112975,-0.31525801788974916,-0.8706603666508698,0.5175078344571401,-0.973281990916209,-0.5673642169255172,0.9851905513545005,0.14214859943523067,0.6072133456243376,0.7761676882527389,0.9985647574854258,-0.7373907711488388,0.6970534599336569,0.6960158495981338,0.025343903683732485,-0.7315052232395559,-0.0846109372774719,-0.9934640220029503,0.14357986625708288,-0.8071203444178568,-0.5661728080051467,0.840726598258968,-0.9752366546619599,0.2500099741203663,-0.46454804261452054,-0.3070161382974337,0.8944664396362807,0.36294061102439673,-0.9194195844003554,-0.36581787338374383,0.9411333935743873,0.3099551274594999,-0.9595313642036359,0.8728824824859346,-0.5136213568062469,-0.8423955190518133,0.20506791767627167,0.5552364435163045,-0.6116395233743841,0.9931066073797444,0.08768912649315988,-0.9983115607126632,0.7404469409794122,-0.693794061050845,0.999960644411337,0.7353002816474632,0.6556203534701465,0.08009056944245652,0.9939715403132184,-0.13908962312767456,0.8044341869365795,0.5699057520538793,0.9739867745942347,-0.5201491305410474,0.8691364484498079,-0.9616507880937568,0.30269627549816297,0.9436836803003043,-0.42450292175342913,-0.9223917486906034,0.4134606987743137,-0.9395904641990848,-0.31426432057360115,0.9582442151053006,-0.8750866402944617,0.5097243122965371,-0.19960070629040685,-0.5598708477916816,-0.8115988041622435,0.15112206467758488,-0.9925647340121844,-0.09220651463116643,-0.6463892646766445,0.6978037329840909,-0.9999945903490551,0.7025007386225441,-0.7322186436131704,-0.6590385213338702,-0.07556855388440817,-0.9944586094019056,0.13459651847315451,0.9864693794318616,-0.1931502672631692,0.8357801893810225,0.2510235013615375,-0.8668842451774403,0.9628849503467775,0.8949340599771515,0.4194416180731393,0.35447280613102894,0.9241342244612121,-0.40932653434155014,0.9380282043974887,0.31856704825034754,-0.9569373518124549,-0.5145193424880159,0.972474979549396,-0.8472490865924434,0.5561068470828942,0.8142403168288522,-0.15560417982932603,-0.77836278324741,0.6506388049808386,-0.997743557269089,-0.03749905692268323,-0.6872325098464347,-0.021856010102888693,0.7291219414641804,0.6624431306355962,0.9938562139976025,-0.616830777994429,-0.13010064473127264,-0.9872028503357609,0.18869793006884486,-0.8332811673445569,-0.527875415345362,0.8646142072817504,0.3036939066886127,-0.8929010041098947,0.9466461259716662,0.9180418966631321,-0.9258576877905583,0.3784477771779555,0.9018072310378852,-0.45871241617888286,0.9556108012115195,0.2661411422347828,-0.9714081101904136,-0.20848138346007955,-0.5523314054508232,-0.8168650779286567,-0.9926916178568518,0.7812023951366979,-0.10123550704678447,0.9974287622839522,0.04203124343715675,0.6839304925172471,0.01732110631841546,0.9988954790331845,-0.07661242966438302,0.7655320771984755,-0.9953713602530798,-0.8023567624734668,0.987916011272007,-0.18424171074547824,0.5231257145449508,0.24223219938264529,-0.8623263814647872,-0.48053730003728956,0.890849578370119,0.4276592447127376,-0.9162340986651726,0.9275621032214062,0.9383905066000217,-0.9037580322392478,0.32715275334230215,0.8767698050695429,-0.27051058047625254,0.9703212558128615,0.21291533399105506,-0.9829592466516998,-0.15456993574624187,-0.5971859665774562,-0.7840259351564907,0.6437233032745658,0.7458165255426559,-0.046562565232495454,-0.7049794255295481,-0.012785846182551094,0.7228835999675832,0.0720892099965995,-0.762605903212548,-0.131138586243315,0.7996413630561245,0.5764812634742403,-0.8338594946955086,0.9779375659502568,-0.5355582599287947,-0.9638207758655527,0.29503842614582015,-0.8887798249623119,-0.35120833329607604,0.9144074507571867,0.3774785255154409,0.3968738550661891,0.9056902402037745,0.9559187308918604,-0.8789420808997772,0.5028040692129487,0.8490971979534375,-0.21734490416236615,-0.5447465103429759,0.15904959669073943,-0.9915560436035517,0.7868333452174031,-0.6402456515670067,-0.7488303581735025,0.6846938884743508,-0.9997703352472733,0.008250323000320628,-0.6650526465510472,-0.06756450721972378,0.7596640399473389,0.12664064548429413,-0.7969095124198536,0.9892813449715401,0.8313472816528197,0.5308353675446205,-0.8628560151301469,0.965019874063923,-0.2907015364774799,-0.94776473660636,0.4358416781769909,0.3374503841549663,-0.401991844202857,0.9352170199275186,-0.9076038151796749,-0.9545770555935746,0.8810962740378615,-0.49887818216133256,0.9680876818532371,0.5494196443074778,0.8188725812725323,-0.16352598546866765,0.9909576512408496,0.1047058268483183,0.6367548279277935,-0.9963612832575032,-0.6813810421052758,-0.7113841292733044,0.723606587537474,-0.9994423573583031,0.06303841442158174,0.9957005934889694,-0.6310088425685708,0.7941612667676907,0.18081145536240326,-0.8288179650975211,0.9797923257729088,0.8605545390602398,-0.9661991186704805,0.28635866613475186,0.9492017604652467,-0.34270032517877774,-0.9288601369246039,0.385863305628528,-0.9336013994943884,-0.3304476354052066,-0.44251611176790406,0.9501082776195628,-0.9694716760449731,0.8538541232774474,-0.5456241519439982,-0.8214675736360447,0.16799900998617642,-0.9903388716620494,0.7923995447654638,0.9968215682159952,0.05004735773206698,0.6780541775160145,0.7145645607899884,-0.7204685034536745,0.999583531162797,-0.05851102471859651,0.6266681179160748,0.11763704032942289,0.9891279308515039,-0.5875462443032944,0.8262715970658663,0.5385013367413554,0.22459051879844874,-0.487559159885844,0.8871753512173316,-0.950619256162272,0.3384357016366446,0.9305307673876712,-0.39004383107882923,0.9319665718494694,0.4475155251376567,-0.951834816756252,-0.278227250069262,-0.490995698405949,-0.8562062604885845,0.5418174343203067,-0.9794625201600649,0.991097577441808,-0.7889817605881259,0.11372308661996934,-0.9964499656886899,-0.05457692132656965,-0.6747133631509722,-0.717730291393774,0.7173155969937085,0.6751526725185495,-0.7573905560404113,0.9964999113643339,0.794797046603985,-0.9897847743809564,0.5912104967068487,0.9795823883759844,-0.5423177426304476,-0.22016832017392093,0.4915142731476956,0.27765534093510547,-0.880318391919157,-0.33416411537337404,0.38489726044136735,0.38949554953065424,-0.9303125706264741,-0.4434546975009039,0.950434309633971,-0.8874499159773106,-0.9672074407398829,-0.5465011955287522,0.9805728681826338,-0.8266068045585234,-0.9904835023575145,0.7917604924413406,-0.11822825339316304,-0.6262040449420594,0.059105362096612914,0.7138317823895424,0.00022577155875839675,-0.714147933023098,-0.059556109766808474,0.7544210839481055,-0.9968688224501808,-0.7920362285519775,0.9904212548241955,0.8268608396635432,-0.9804841957034436,0.5461229912829021,0.9670926557292213,-0.4954592743652137,-0.9502938165069458,0.443049935657323,0.3298856542693635,-0.9049927913991991,-0.3853139771679562,0.9286394298535774,0.4393847465613174,-0.9490142489922906,-0.49190745816756254,0.9660454634434623,-0.8608576420546243,-0.9796730681560262,0.8291509373868245,-0.18139697808724994,-0.7945229352107209,-0.9965375559884383,0.7570956382786632,-0.06363258687746824,-0.7170009119294458,0.0043099930706423295,0.7109655767109748,-0.9998836550034114,-0.7514360909648229,-0.11417168874012756,0.789259115743349,0.17291333737779127,-0.8243013914636952,0.9813658312877879,-0.5499170044124002,-0.21131042526562344,-0.8855600786133576,0.2689291667658184,-0.44711167527939005,-0.9318027724979769,0.9030538467312574,0.9086263089580668,-0.3380107698042479,-0.4353057560510014,0.9475746640464685,-0.8915944612614376,-0.9648636114555259,-0.5388817631977335,0.9787531130738307,-0.8316780118884483,-0.9891942328577275,0.5714221397818185,0.9961501842393751,0.6795916740782744,0.06815850252942393,0.7201552904327981,-0.008845669029492905,-0.7077685935287402,-0.05049832988282562,0.7484356385015605,0.10966441107400506,-0.7864657653123255,0.991633074493362,0.8217249847080738,0.22663035643420887,0.5536997039637742,0.9693608573417795,0.883443994778242,-0.26455773565173696,-0.9096863345855117,0.32130845976609035,-0.39742025681152515,-0.37692713715579085,0.9252358677388848,0.8843748258734042,-0.2859260033346768,-0.48398919890875736,0.9636619090906058,0.5350553779646056,0.2482216021441923,-0.584236428665683,0.11164260073069585,-0.7999987265046024,-0.995742318446952,0.6155373160946269,0.9994573330497882,-0.7232948530037926,0.013381163004213471,0.681050475204688,0.04596783497613874,-0.7454197882873663,-0.10515487725491371,0.5895204984673668,-0.9922083887882245,-0.8191316724017303,0.9830685150900781,0.8517211128402243,0.2796662251597949,0.5072327951871418,0.9544424146131141,-0.4552074755333796,-0.3170099028275651,-0.931078476922118,0.9123772441731236,-0.3465343693251865,-0.42712099217473776,0.9446370401112124,0.48001509265795855,-0.23298187011993948,-0.5312179849052587,0.9768528138627929,0.5805492688533983,0.19476135932617575,-0.6278351385638189,0.9953139670022928,-0.7659149997837831,-0.9992976442827849,0.7264195350514345,0.9997605564206872,-0.6843647201669687,-0.04143639436184867,0.7423886023680706,0.10064318005860469,-0.7808305817891213,-0.15949537570682312,0.5443677904153067,-0.9838895282782903,-0.8493356330051047,0.9715492877648995,0.8791573450832477,0.3318615412569192,0.4592413696084072,0.9366553413236434,-0.40572818306897496,-0.36850927884343865,0.3507855188834297,0.8885727766163041,-0.2946069532280111,-0.47603111093830186,0.23739041665609523,0.5273696629673268,-0.1793374967414091,0.8391563672931225,0.9871077323540355,0.6242982861393545,0.1407157502473214,-0.6695468545081481,0.9991173967189503,-0.7295292722908694,0.02245123176758486,0.6876648855251186,0.9970589429971121,-0.6433776905274144,-0.9907554837001951,0.7779888646309607,0.1550160363815264,0.6129379647303691,-0.21335650180262747,0.4975789542365054,-0.9726135322449736,-0.8769868674136704,0.9571100142058779,0.9039512202922069,-0.9382343681577562,-0.9277307363353773,0.9160530975263198,-0.3550294516447002,-0.4189010794173101,0.2989383812605597,0.862097653414393,-0.9599379490020079,-0.5235104913232858,0.18379787883892273,0.5731391939816392,-0.125154114391804,-0.620748589872317,0.9943958428278601,-0.7717158881333631,-0.9989165940665619,-0.7092462095815371,0.9999179226939272,-0.6909509033840219,-0.03237104893377754,0.6468434203627753,0.09161366685796722,-0.6004569529166617,-0.15053350787309105,0.8112508374393202,0.20892298325556927,-0.8445123019972268,-0.2665763728870798,0.8747983472770322,-0.9584142913309464,0.46728073070474846,0.9397940924648738,0.9260282190754062,-0.9178627737328708,-0.9467915504753093,0.41477815348346997,-0.30326365916008186,-0.46803384914765184,0.24619276745604465,0.8330314470448448,-0.9738516887461104,-0.5694164313714621,0.9856151681161092,0.6171861227914828,-0.9939060889868817,-0.6627813195551351,0.9986952404567823,-0.735703656744334,-0.9999657491971744,0.6942227061396231,0.9977131389012117,-0.6502958425289578,-0.08709603662004023,0.6040778307825534,0.14604788240168143,-0.5557315080347185,-0.2044851664844627,0.8420745500560467,-0.97468197026778,-0.8725918296982976,-0.3189950336330724,0.900034759155409,0.3746641709877596,0.41812725628211106,0.9196535665222617,-0.3634953176806918,-0.8947324909229738,-0.9630067291585368,0.46402073360629725,-0.2505863906269049,-0.515759916721216,0.19270720738996286,0.5656819540166423,-0.13414907046751368,-0.6136109581883658,0.9933958872708685,0.7249789615182914,-0.9984533404435738,-0.702822022564267,-0.036052637510150344,-0.6974802264803173,-0.9980094508148387,0.6537348859984293,0.9925096719429652,-0.6076862808062856,-0.14155925225117633,0.8059134070704603,0.2000431427896064,-0.5093357807311826,-0.2578222333836182,0.8703673600726969,-0.9609636660729339,-0.8980487333924542,0.942855505541528,0.9225660657530791,0.42491171760185026,0.36771707678506355,0.896748969865809,-0.31189540874837063,-0.8689130390988858,0.25497485842216405,0.5118686732176696,-0.19715597054967635,-0.561935838747503,0.13864245493265612,0.6100231696157086,-0.07964046871290542,0.7802979982606517,0.9981908990036051,0.6995882069431804,-0.9999996840172108,-0.740750354306294,0.018768269175481384,-0.6571604800189007,-0.07805549357866157,0.6112822287503266,0.984323161132896,-0.5632502836593143,-0.19559700355784912,0.8371471240605307,0.2534371622183076,-0.8681249841647921,-0.31038440100481246,0.40795890389298883,-0.9443571313278584,-0.920806500918457,0.9231783548691275,0.9423245479560433,-0.8987469997709768,0.3162017028540247,0.8711491435538609,-0.2593580805567921,-0.8404820200807186,0.2016006775709952,0.8068536769787664,-0.9832242829711527,-0.6064228308859704,-0.99901184329136,0.6525309261392283,-0.024892503033424537,0.7448515579909992,0.9999857916358508,-0.7039521521411225,-0.9985404720848823,-0.7764523190388962,0.9935770550904791,-0.6148656006343522,-0.13257334735557516,-0.8456317672544392,0.19114684026070955,-0.5171214059861329,-0.24904687702776895,0.8658647481075357,0.30606946194799695,-0.8940212957715806,-0.36201369078582757,0.9190279921046495,-0.9249122779102628,-0.9407967325212018,-0.46988315425480004,0.9592508205305622,-0.8733673256427076,0.2637359668536792,0.5040546740814669,-0.20604123701186597,-0.8095248849012235,0.14762057450188545,0.7732665902719603,-0.9917427019397685,-0.6490871849702029,0.029426603915995473,0.6930774641251661,0.029930278469246237,0.7071664243127112,0.9987751705164674,-0.6639710380886299,-0.9940800903904317,0.6184363227367696,0.9858826278148695,-0.5707227079744481,-0.18669274445249448,-0.8736126436664224,0.2446514681344221,-0.4694382907328249,-0.30174822604867363,0.8919799667711292,0.3577818526304452,-0.9172305759013568,-0.4125549279814605,0.9392495618432111,-0.9026875484248658,0.3247946867179228,-0.5175526314290096,0.9732940106088291,-0.845362696710682,-0.985199526678792,0.5506284373393298,-0.1521051248969047,-0.59918479949455,0.09319678946209188,0.7373554071728088,-0.997280382228206,-0.6898006708753558,-0.025396240237273857,0.7315409186645234,-0.9989893209002026,-0.7707037724394574,0.9945626742355755,-0.6219943215962322,0.20209420237633072,0.5744413460765356,0.9752250746426983,-0.8296269427420272,-0.24025102596609793,-0.8989678279574794,0.29742078220869417,-0.4203442521942663,-0.35354265374079086,0.9154142892872659,-0.9283230033665404,-0.3099053519731539,-0.4618562080499804,0.9566481639976899,-0.8777497405508478,0.2724753717765225,-0.5636665749506788,-0.2149095478125749,-0.8148172824681752,-0.99311274260301,0.5955472557426722,-0.09771185224186908,-0.7404117524656932,0.03849289621008285,0.6865096861862603,-0.9998206800257249,-0.728440921921034,-0.08014275455674831,0.7678056856732021,-0.9950247966975945,-0.8044652859439325,0.11907426546867231,-0.5781481660551712,0.25546206760925855,0.5287198535201978,0.9616364274517039,-0.47742873420176096,-0.2930872194576277,0.4244555190082209,0.3492961813309486,-0.913579169629289,-0.4042744890276029,0.9360972824766229,-0.9065538126067919,-0.2573353396934572,0.8799138832096387,0.9711715060870609,-0.8501738062776548,0.21933711672246828,-0.6080863867591599,-0.16106474560084538,-0.7818228888821551,0.10222490477161741,0.6386761232468608,-0.9965707741615643,-0.7024634786310211,-0.016326689614627816,0.7253259387828472,0.07562075748660266,0.6740842515060834,-0.13464839530288958,-0.6290718570512066,-0.9880696692937204,-0.8358089336148765,0.17330777870671887,-0.5325643535612894,-0.9628708182068437,0.4814092635948717,0.2887476269509292,-0.42855805339412556,-0.3450425227646423,0.37419693044155955,0.8998150376642016,-0.9344922386406461,-0.45379125451405544,-0.3376338267817384,-0.8820599231831512,-0.20399189152227284,0.8525531494634557,0.9827759373867496,-0.8200426266325628,0.1655396315812809,0.7846428970555078,0.9977470709149144,-0.7464786824652648,0.047556020825083194,0.6798854136057428,-0.9996077559448998,-0.6624039111532773,0.9995084418208595,0.7619621833216607,0.13015255299516967,0.6325912480388363,-0.18874934269528268,0.8333101097526842,-0.9781448427166494,0.5363978970246215,0.2270204056316557,-0.485379888836502,-0.9466292524860234,0.4326517709495288,0.34078176555343853,-0.37839931716248226,0.9332957666590762,0.3228136718749178,0.8745541048072114,-0.9525966384713838,-0.5019441247659768,0.9689690813729287,-0.8549149528630998,-0.9819276139290793,0.8226300190951014,0.9914265801233488,-0.787446762577071,0.1112446077317252,0.7494891423555053,0.9999242516809648,-0.6765522619971139,-0.007255795426847816,0.6657950495533904,-0.9996403601842176,-0.620353451324106,0.9962883028172578,0.7963083075014156,-0.9894260829390609,0.5891969558622457,-0.2422829932822346,0.8623528895788206,-0.9652801465929712,0.48934052823799984,0.9480815020468515,-0.8814989110427803,-0.9275425391042679,-0.9384085974309342,0.3917916653205143,-0.3271032804203203,0.9122132311872693,0.2704601785927939,0.498015980312083,-0.9678379553257145,-0.5485883736133224,0.9810590890324952,-0.8252004873874224,-0.9908237163987995,-0.6437633662712771,-0.11575107259751169,-0.7524841828208195,0.056615231933242985,0.7120827557252419,0.9990961036571947,-0.715891713386941,-0.062045803975992644,0.7560559771491323,-0.9966684888856359,-0.5764384841745107,-0.17983320111165849,0.8282610821068562,-0.9799907700631639,0.5440317989713026,0.9664550346562518,0.888803819110618,-0.9495142464931707,0.44081241886771166,0.9292280920314981,-0.9060511214413917,-0.9056680442561994,0.33138615938928123,0.4416240131186083,-0.27482411630202025,-0.49407759005263113,0.21729380197489892,0.5447904132014886,-0.9801703805653739,0.8277539786266477,0.9902004682136266,-0.7930058352596557,-0.9967418422512666,-0.6847320443077838,-0.061143136937468215,-0.7152599693711017,0.0018156958589345784,0.6725361641715375,0.9952651158892434,-0.7530795118160377,-0.11664933035845021,0.79078831540465,-0.9907010741761213,-0.8257109821981112,-0.23347187035788664,0.8577244712699906,-0.9676100396018069,-0.8867159914243298,0.9509274563487765,0.9125833985860637,-0.3279577793459164,0.39095942288615626,0.90758183452535,-0.927880144042788,-0.881071512971023,0.2791823999869389,0.49012903501309507,-0.9655159922051865,-0.5409812446821557,0.16347433656770127,0.5899274477475094,-0.10465376107442285,0.7957609280525042,0.9963657439851115,-0.6210625263471378,-0.9996642042251193,-0.7236427215281173,-0.006351432127482443,-0.6758860017029583,-0.052989297391784186,0.630968227207936,0.11214333291426748,-0.583827400398976,-0.1709022605929994,0.8231438947337351,-0.9817560514574779,-0.8553837689536191,-0.2864088267169434,-0.5011617176068484,-0.952321102539354,-0.910719380466962,0.9325418118859987,0.9336201571365521,-0.9094769528896377,0.3399313762872405,0.43346695158726384,-0.283534939983505,-0.8538268715121299,0.22613954212000645,0.5371609464222871,-0.9783324864688591,-0.5862589496393297,0.9888928701694754,0.633291422044576,-0.049995069865746776,0.761376173083883,0.9995363862625538,-0.7215701859408296,-0.9995820189964614,0.6792219340650139,0.04845936227033683,-0.6344806204991,-0.10763502831764567,0.5875038796157273,0.16643147035898337,-0.5384572217338291,0.9826084042662601,0.8530254686160581,0.2820601325362174,-0.8824856515002734,-0.3384849651779002,-0.45298516497750446,-0.9341699106392933,0.39929275373841633,0.911353360360325,0.9518508675966153,-0.8853258937321625,0.28788164674583994,0.4822017557396072,-0.23055547902865894,-0.5333295970178206,0.17241700909237304,0.5825783902812258,-0.9882085472120339,-0.629774620225721,0.9955520601777132,0.6747520032197963,-0.9993880045914594,0.7247030590430563,-0.015422419343708176,-0.6825438926267451,-0.9964955335776373,0.6379799604640154,0.9897773090188053,-0.7823864531844367,-0.16195725608929087,0.8179589687397852,0.22021938862353524,-0.49146867948979833,0.9709555201583301,0.8803432262943316,-0.9550495896411948,-0.9069351736000252,0.9357787904846794,0.9303317708875656,-0.9132110183336185,0.34844861936099547,-0.49589691167357974,-0.2922224308480738,-0.8585139376194093,0.9618841313022503,0.5294872752920522,-0.1768830705654283,-0.5788858453942533,0.11817626700999478,0.6262448618983213,-0.9951144913765877,0.7672259483275617,-0.00027812496173719843,0.7141845791557634,-0.9998031448731673,0.6858518090446792,0.03939659434419951,-0.6414661751098983,-0.09861186871449056,0.5948205020742564,0.9804739017893186,-0.8153412368809725,-0.21579271218435436,0.49541379788716783,0.273345425082946,-0.8781826895701301,0.9563843744186203,0.9050150627056109,-0.9373684183222751,-0.9286588508338895,0.9150498885914625,0.9490307512217342,-0.42116468654034384,0.296557202986185,-0.5427410342567905,-0.2393730322692362,-0.8291216693991615,0.181345492979459,0.5751813909460483,-0.9867789238198545,-0.6227022196809655,0.0635803394853977,0.6680291192279083,-0.9990295627574541,0.7309240126167075,-0.05508005987948296,-0.6891456152642365,-0.9972133203584028,-0.7892912628089027,0.09409719934364459,-0.5984604947893564,-0.15299892370787968,0.5498732770845235,0.211361596188498,-0.845845466459427,-0.2689795911002257,0.4470648456904595,0.32564990643537095,-0.9030763327131633,-0.3811728790885586,-0.41173092615598184,-0.916869933302326,-0.28152642456367094,0.8915707525983299,0.9648773660549392,-0.470236638550605,0.243774467195464,0.831648941090721,-0.18580418452794853,-0.7972374291929156,0.1271792691791934,0.6191467664573053,-0.9941779449903526,-0.7201189659777243,0.9988195099688555,0.7078055773256245,-0.99994199438657,0.6924252435211291,-0.10971644856767927,-0.6483989418250587,-0.9916263149109553,0.6020881752291354,0.14851498989814194,-0.553656107665237,-0.9693479958677472,0.503273376917049,0.26460822333405576,-0.8738074597356656,0.9589948891227649,0.9011190235086526,0.37697562860922085,-0.9252557289544482,-0.4312650450443471,-0.36117050046355165,-0.8936157439353308,-0.9636758926691911,0.8654119503740391,0.9778239874916684,-0.517895267796178,0.19025905348113628,0.5677370584600104,-0.13167689182036246,-0.6155785753745566,0.0726308009054189,0.6612512614076296,-0.9985889082202006,-0.6810121391990768,0.9999805616718082,0.7454546858010508,-0.9978490438991622,0.6518453512648171,0.9922018647503221,-0.6057034687604294,-0.9830589205911153,0.5574275477423332,0.20248641026598724,-0.8409717073523016,-0.9544267913020618,0.45516086020261476,0.31705955552574855,-0.40153040373555726,0.9420214647346757,0.9235255971419482,-0.9204533966942697,-0.9446542168664285,-0.48006101955989783,-0.3095245564418558,-0.8676757420002627,-0.9768640115744817,0.8366521036754878,-0.19471000818790485,-0.8026807394354685,0.13617180544036875,0.6119977198419944,0.9992996047471316,-0.6578418914386587,0.01786403665910268,-0.7401425038293872,-0.9999985561103872,-0.6398584919890701,0.9981361153420841,0.7808632881331585,-0.9927570017760795,0.609306301004913,0.1395380482840836,0.8493632667523978,-0.9715368871861891,0.5110915402908459,0.2558492462962722,-0.8693603220457569,-0.9366370031323141,0.8971488289176669,0.3685579473234992,-0.3507364917517706,0.9222167416518741,0.9431564624547776,0.47607715135889594,-0.9612134931985304,0.8699216827195045,-0.25694831889135783,-0.8391278916373976,-0.9871161105434731,0.8053776518455851,-0.14066391756424598,-0.7687898735291282,0.9926197511157901,0.6544189875262519,0.9998486150733537,-0.6981280265591373,-0.03695641895791863,0.7393773932060855,-0.998402651884596,-0.7780217560605078,0.9932917145672565,0.8139249617686222,-0.9846811724373974,0.5649359462585434,0.19359456121779972,0.8770120227736692,-0.25146181722525285,0.46321941836099934,0.9382162525735057,-0.8951360252109845,-0.9160320995711833,0.9200083697427991,0.41894861740338335,-0.9416393042526716,0.8996402440876738,0.9599526177731694,0.5235550967132542,-0.9748837881108727,0.8415864160142903,0.9863802091735288,-0.5564831512171511,-0.9944013763139252,-0.6662099838895964,-0.0861950535950721,-0.732588366255349,0.9977738587693652,0.6948733619978373,0.0324233748566791,-0.7363158984825073,0.9986486480431758,0.7751642175544338,-0.9938059921230752,-0.8112814472731904,-0.20897418104403992,-0.5686727502255232,-0.9736458282441197,0.8335314348656576,0.24706921476826516,0.9020248696481932,-0.3041253288316688,0.41395506431790635,0.3601099364596723,-0.9182213465169367,-0.4148257904595239,0.30321377083515544,0.4680801137616369,-0.9586719930059088,0.8743598269800757,-0.2657046059575203,0.5694594676667871,0.20803847153775445,0.8107217138234205,0.9939118585485107,-0.6011799045373093,-0.9986979126082701,0.7356681965881082,-0.031467125526118765,-0.6916044016355269,0.9999291007604175,0.7332392553503971,0.08714819095817172,-0.7722907314037809,0.9942998238631765,0.8086212420845073,-0.12605133645859273,-0.842102786294656,-0.26225252166583957,-0.5227397245548125,-0.9596841365462271,0.4712398570062082,0.2998012878452866,-0.4180796984803973,-0.3558747745926821,0.3634465449588955,0.4106944292023943,-0.9385469017271312,-0.4640671088904059,0.2505357072539425,-0.8765519392143689,-0.9728233389616974,-0.5657251250894882,-0.2124728543864957,0.6136522960410319,0.15412252108538624,0.7774203417518171,-0.09522917719776135,-0.6440697777143665,-0.9999928059441114,0.6974427088638044,0.02335537876510096,-0.7301475271062928,-0.08262878902376031,-0.6688748314468841,0.14161107825173008,-0.5594532582024833,0.9869625754286941,0.839647909820242,-0.18022714531105233,-0.8703931378504364,0.9609491798988788,-0.47523557513033104,-0.9428380599963342,0.42219573138616606,0.3516322912262066,-0.3676683908757283,-0.8967258001828692,0.9369717210244561,0.4600445566521194,-0.9560516012378909,-0.5119136474262985,0.1971046444604166,-0.8488579036186585,-0.9840508094508434,0.8159990594335325,-0.1586025036563152,0.6560007577953741,-0.9981940453464473,0.7417823889532926,-0.04053277001339863,-0.6850238628131126,-0.01882061333288183,0.6571210177034152,0.07810768714689863,-0.7664961529633733,-0.13711956885589202,-0.6271309577148796,0.1956483454548546,-0.8371757590623484,0.9766589552541276,0.868150968360127,-0.9621944534071127,-0.8960674736917797,0.9443399098529741,-0.42630307835505277,-0.34738257364190217,0.37188267266010006,0.4024064439042097,-0.31615203516531704,-0.8711234358696711,0.9547118881470996,0.5080119942147031,-0.9706828336865969,-0.5582216005944235,0.14308117253029026,-0.818612577670781,-0.9923206596769376,0.7830941155762446,-0.10425546414738508,-0.7448166251969305,-0.9999860693465298,0.7039149673069475,0.01428546069954403,-0.6605332482515844,-0.07358497834133038,0.6148243122261113,-0.9956585446963844,-0.8005410313596687,-0.19119822808265027,-0.5835022064843649,0.2490975805102562,-0.8658909381858867,0.9634199314516095,-0.48319759795883405,-0.945822331571804,-0.9190486281528532,0.9248923728946642,0.9408144775308841,-0.39824999037391984,0.3204518995664688,-0.9093103754435715,-0.2636854666646416,-0.8429028608901099,0.9695826147910181,0.5544525730485171,-0.9823966240781083,-0.6028517872271878,0.9917494145681358,0.6491270100497686,-0.9976080341382454,0.7478355381444897,-0.04959507895514795,-0.7071294070189398,-0.998772578760308,0.7207824693147807,0.06906075565385895,-0.6183951807559324,-0.12812817954308484,0.5706797175680937,0.18674417714215613,-0.8321798384911326,0.9785672758060666,0.8636130938238736,0.3017981387244635,-0.8920036332102546,0.9472852946545962,-0.43449137665676874,-0.926607487321923,0.3802881971830301,0.9026650196942011,0.9579743655180841,-0.44792044427639877,0.268057990197364,0.5001774139081558,-0.21042637660736593,-0.5506721386131149,0.9815392061477464,0.5992267133720426,-0.9911577659540938,-0.6456700687790393,0.9972842393604148,0.6898385737600626,0.05412474953385132,0.7103292987832854,0.9989869663421503,-0.6673168714866894,-0.9945572208022474,0.7576861664897225,0.12362848460818501,-0.7950717832144371,-0.18228628426766036,0.5248199128008193,0.24030184565178941,-0.8613174821367414,0.9658114007089202,0.8899441648572617,-0.9487287690034507,-0.9154353609563466,-0.4084666971016708,-0.38447926699265983,-0.9046076719566499,0.3290317618344063,0.877724655816489,-0.2724249989069593,-0.49624464799595636,0.2148584174053276,0.5468803750640264,-0.15653483819543487,-0.5955893114779728,0.09765974922759112,-0.7914838015617686,-0.9969399272080288,-0.6865477524874394,0.9998216700689464,0.7284767886916222,-0.0006786126492646681,0.6706881246124717,0.0600081409742327,-0.625498677423365,-0.9873526649686718,0.578105448455318,0.17782464117249228,-0.827115435708117,-0.9616220641739218,0.8590041503526752,0.2931372733979146,0.4950658716486429,0.9501527249214138,0.9136004584607775,-0.9299804913102361,-0.9361156960435679,0.9065317135024157,-0.33331158318557,-0.4397914882276744,-0.9711839848575061,0.850146240933187,-0.21928603786809062,-0.5430773604101382,0.979763807998023,0.5919396563781443,-0.9899133073183363,-0.6387164070427902,0.04297259611418889,-0.7567997177062014,-0.9997257292278289,-0.7253619781662253,0.999354080302484,-0.6740455795060958,-0.05547993522375176,0.629031159418988,0.1146215570461553,-0.5818005117720978,-0.17335933964713537,0.5325200414587504,-0.9812787178532293,-0.8566731460644204,-0.9451404269944885,0.8857703437756947,0.34509166051958134,-0.9117467602377113,0.9316383114776476,-0.3928375905904597,-0.9084371047477172,-0.9539824825572919,0.882035256336172,-0.28114211259788735,-0.48834856920085523,-0.9827856110081412,0.5392631728918085,-0.16548800026246926,-0.7846104395916543,0.9892605228991751,0.6352198296366679,-0.996189779536029,-0.6799238043870781,0.9996092207827828,-0.7198410295734333,-0.9995067991282491,-0.7619960874688364,0.9958828754284685,-0.6325507002014691,-0.9887502176353267,0.7867453746915979,0.1688904715573389,0.8646668110477507,-0.2270713917778552,0.48533411541380306,-0.969249521578676,-0.883656076916171,-0.34083098474344664,0.9098743044237385,0.39600885517317563,-0.9328868266507214,0.9103238064924707,-0.3418505660749993,0.5019894045403419,0.28549203823989067,0.8548877924111188,-0.2281276535187255,-0.5354378909792573,-0.9914334195210717,0.5846038871527717,-0.11119257912932319,-0.6317101836963651,0.9957839594493885,0.6765908138354577,0.007308147443395037,-0.7190876523517269,0.9996389548541889,-0.6807188185871749,-0.04642019269900473,-0.7963399745115605,0.9894184883491183,-0.5891546540563135,-0.979067223274071,0.8193913405873902,0.22265177622143228,-0.4892948705402932,-0.2801009680211192,0.43668949028511705,-0.9543071911473873,-0.9079831295413544,-0.3918398327408775,0.9312435864822737,-0.9121917799210958,-0.9512230490394822,0.8862732719139405,-0.28983609038379793,0.5486321451544701,0.2325414668058585,0.8251709149627113,-0.17442754389781365,-0.5809179239478166,-0.9971014189195938,0.6281875414266933,-0.056562962422152405,-0.6732439036141982,0.9993145110918265,-0.7261082448157565,0.06209805642643876,-0.7560902417806576,0.9966642176114939,0.7935883302511442,-0.10109371160231531,-0.8282904168029837,0.15994240351241212,-0.5439878703372713,-0.9664415870993694,0.8495745795497601,0.27574388840213704,-0.4407654258869458,-0.33228868499170805,0.906073274498166,0.38766274889108504,-0.9295811876099057,-0.44167098399942556,0.27477377841393014,-0.8883649511288768,-0.9667003168524206,0.47642930349400575,-0.23695049596005743,0.5936259408829414,0.17889197886505703,0.7929739397438068,-0.12020318244629315,-0.6246519752998403,0.06109088140184886,0.7152233807700609,-0.0017633425381219218,-0.7127541509712833,0.999841566554208,-0.6873360395719792,0.11670132619510545,0.6430309525264029,0.9906939497954219,0.8257405132770013,-0.15546338764809195,-0.8577513854850152,0.9675968216785886,-0.4971861003627307,-0.27138113583614887,0.8772043741499914,0.3280072367589432,-0.3909112358623879,-0.3834776895599741,0.9278996642345595,0.4375970585371932,0.35460607439986686,-0.49017466818073213,0.22166790212251172,-0.8618680913228016,-0.9792721122873453,0.8302612609687188,-0.18335273344351008,-0.7957292211701973,0.12470482098231021,0.7583936365811275,-0.06561754354377913,-0.6665085998749548,0.006299079770152566,0.6758474159938279,-0.999912018359907,-0.7501221754886113,-0.1121953559220886,-0.646498007057252,0.17095384353944124,0.6000947737378075,0.9817460953829494,-0.5515772626816805,-0.2093658097055026,0.5011164127104611,0.9523051283385443,-0.44889000949457575,-0.3237190403524203,0.39508205917175243,-0.9396392416252627,-0.33988214004929,-0.8831832345689763,0.9469371991448992,0.48621614551903286,0.3028321127295985,0.8641594582393289,0.9783433243750241,-0.8327808383109156,-0.9889006501033276,0.7984681318631187,-0.1292038939352969,-0.7613422307858577,-0.9995379788906082,0.6631203449240355,-0.010834687409661944,-0.7063619952249558,0.9999618987291052,0.634440153653407,-0.9976824287888795,-0.7852356654588585,0.9918878844974324,-0.6037168882838362,0.22469254945570552,-0.8530527890808391,0.9698475476556702,-0.5050364154666733,-0.2626389710019563,0.8728129305214503,0.9341512281722548,-0.3992447543604988,-0.37508398901713724,0.3441443833970531,-0.9194756276648368,-0.2878315092760001,-0.4822476198126862,0.963128660843235,-0.8664330465902473,0.25014797204793154,0.8352832826475882,0.9882165618918582,-0.8011906154742862,0.13370030874471603,0.764275161709151,-0.9934477431107565,-0.7246669833448058,-0.9997015879742731,0.7031440861606189,0.043980732989144525,-0.7440923797201686,0.9979807902695685,0.7824190574594733,-0.9924542483532973,-0.8179890853055638,0.9834310522187273,-0.5591212643194422,-0.9709429927487921,-0.8803680582565918,0.2582597385884646,-0.45697765279281205,-0.9357603300380232,0.898247844303387,0.9131896837515604,-0.9227406949975886,-0.42532160157724547,0.9439825090330093,-0.896548477795852,-0.23491578465186064,-0.5295316868956351,0.9764253849773331,-0.8377685424953322,-0.9875121428573977,0.5623103626251971,0.9951196587414985,0.6714362656915861,0.07918905780239041,0.7277851194090004,-0.9982180234035358,-0.6858137083737513,-0.039448907050413304,0.7410544881497761,0.09866396681199038,-0.7795863525598989,0.9930001942032028,0.815371547375197,0.21584383180499145,0.5628760494712609,0.9720184623923203,-0.5128451698295707,-0.9563690800943272,-0.9050373315314861,0.31081484499478884,-0.4075454179845026,-0.36665942185149786,0.9209830234780862,0.8894834961816156,-0.2965072042882554,-0.4742808860519974,0.9606484425967016,-0.8709267008616071,-0.9754362729502034,-0.5752242165985534,0.9867874074921328,-0.8065860777491632,-0.9946618534545165,0.6067828418624833,0.9990318672766445,-0.7308882825704842,0.024439799676168418,0.6891076778448697,0.034916269519590475,-0.6448991815841074,-0.09414932032804788,0.7767376090380719,-0.9935257108152703,-0.812737234604941,0.9850350799926685,0.8458733920729378,0.2690300146973925,0.516733760784827,0.9576844162012399,-0.46502769022875895,-0.9389207461771818,-0.9269864640119738,0.36243577983722103,-0.35688828241419124,-0.4170940720670131,0.9409501361810089,0.4702828418992333,-0.24372369285694828,-0.521814692547875,0.9744270930321183,0.5715080649503959,-0.9860423707062227,-0.6191878774438162,-0.14717267953791352,-0.7729793730099621,-0.9988220516967767,0.6494316010122203,0.9999414291336775,-0.6923874701338193,-0.03038291364774556,0.7349330301318244,0.08963273688692398]}
},{}],83:[function(require,module,exports){
module.exports={"sine":[-6.420676210313675e-11,-0.872101131199922,0.8095983013279411,0.2548357065241723,-0.8837532652862997,0.8314010833251086,0.3377457489312408,-0.9210102827059491,0.6010236488212364,0.1803713303686036,-0.9979980384803384,0.9656512638715452,0.8511682798822809,-0.7154307062423485,0.4538623885513716,-0.14444283110261608,-0.9250606976775017,0.5925751860667804,0.6379961685151007,-0.8510797756590359,0.7155484877347008,0.5044425985476721,0.14460965188661998,0.9249966504812456,0.9790167962824384,-0.43484670551177834,-0.7683615617895581,0.20104291018423115,-0.9991085039302812,0.28296083989951776,0.8620321932998887,-0.7005599421079199,-0.5226560016201628,0.9537531276256253,0.06062401149197215,0.5754821187113868,0.6540693837303029,-0.8923366278013464,0.9789480298997485,-0.4351503143772189,-0.7681457164571306,0.8072674627284683,0.3770766005961805,-0.9899368004825175,0.10248404961812378,0.940289876105621,-0.5579939611148452,-0.6699777241809122,0.8825550370145306,0.5757578379879984,-0.99999997456668,-0.8924887709279896,0.8827670457043919,0.9997723379808147,-0.5583682247463044,0.940136246716298,0.10293273679843956,0.5403502229901095,0.3766587868198501,-0.08146074541833026,-0.5220809586611415,-0.396545766570962,0.05995087483395125,0.7814917617588655,0.41604531516037485,-0.9830389330122974,0.06017376233181375,0.9538886189966753,-0.5222713893066875,-0.7008817533844839,-0.9471945950451103,0.28339344909590275,0.6853386863791969,-0.8725405684109716,-0.26264895293200213,-0.6375188806589102,-0.2216786779729173,-0.8923880290662991,0.6539832283784597,0.5755752566978446,-0.9328123861739306,-0.6701434742368061,0.9927311178495242,-0.4733680662769646,-0.8196778229397198,-0.989905177908368,0.4542642805028312,0.8071356596579117,0.9866189325741165,-0.43494926207442697,-0.4856076398109074,0.9943131525590182,0.4154319924652796,0.5043442566108404,-0.9963783005407689,-0.8510199732043524,-0.5228463535936478,0.9979801331307656,0.8621453474476589,-0.9107364387334729,-0.9991179054776865,0.60976305459247,0.29674132296875727,0.9997910885179819,-0.7107618205907688,-0.3172636993356654,0.9579822463854177,0.5750236660754464,0.3376385482473215,-0.12301849462400076,-0.7404295050767173,-0.3578563954095742,0.9694580410050561,-0.7588472497170117,0.37790783953400386,0.3637021114515288,0.7446277770353766,0.11679586451063086,0.9791308553050291,-0.7300620528245374,-0.9597612123804801,0.8892337396378035,0.7151568501386795,0.15950733420583213,-0.8988908685263286,-0.6999190998893029,0.9993614843709795,0.9081300136283045,-0.8653040733218573,0.20192215508050554,-0.916946878746062,0.854294698638729,-0.06710190277021978,0.925337364041905,-0.8428880773648646,0.04557230776943546,0.7903940445646417,0.4292968272494215,-0.02402152166923049,-0.8034194962285797,-0.8189044935898433,0.0024595655739376417,0.8160713582444532,-0.9424794755539634,-0.9919572643416622,-0.8283437475030024,0.9350527501482344,-0.24872897798974164,-0.658712045984076,-0.9271912256998018,0.22778620035527244,0.6423353053907473,0.9188985578134472,-0.20673750225605958,-0.6807608431431292,0.9908953335834039,0.1855926713257764,0.6963972899118968,-0.9877618825839201,-0.9519885274440588,-0.7117099123028985,0.9841691228225526,-0.42193919925390316,0.7266915899546832,-0.9801187249307226,-0.12167990096013977,0.5167249038242955,-0.997499314359573,0.6322790481175462,-0.535065611684008,-0.9706527604130285,0.36244542155828885,0.5531575143124576,-0.9996189622733547,-0.342264708491463,-0.5709921989843275,-0.9593815936583825,-0.580871226449707,-0.3308852103447893,-0.999879537138163,0.5631843209743078,0.3511562737175539,-0.9676757731911825,-0.5452355350824439,0.6228706351809007,-0.998280554341634,0.5270332149502238,-0.1096764515855427,-0.9776494774649015,0.7349400455276209,0.13108346524291098,0.9819555267048419,0.48990194219981104,0.4305145570004881,-0.9858049671353637,0.7050188581875279,-0.44987650617320374,0.989196008768668,0.868873524219612,-0.1948991130878238,0.9140642553918006,0.673786489679669,0.21600289276807189,-0.9225968636303813,0.8467220906982619,-0.23700623121547845,-0.9966040426352224,0.6413010253913168,0.031184292637842427,0.7991324625956014,0.8229959389310636,-0.009624936064091576,-0.811909124719137,0.944850433957164,0.2993161944964565,-0.9524005521217893,0.7977391943807897,0.033497176683462436,0.9587524639486215,0.9298515187280139,-0.23475743646717995,0.8479510030536539,-0.9217016961009482,0.07655699199495411,-0.8591836379147967,0.91312328266437,-0.19262887492394914,0.8700167528309817,-0.9041202673760677,0.11947442801403559,0.7066580987616017,-0.9854138041141854,-0.15014206572502084,-0.7217505254056567,0.9815152747779352,-0.40884165984831716,0.7365073384306217,0.8746064498023622,-0.1073760250604631,-0.750921675926112,0.9723510288697108,-0.36911435694406075,-0.5471739397811913,0.9993955111840765,0.3489886091904723,-0.7786962760585784,0.961378422315944,-0.32870058191504264,-0.5827533323644298,-0.9552202304979928,0.30825970903990735,-0.34443812211426045,-0.9995524096726935,0.5512282162991677,-0.6172489309668755,0.9986749426809095,-0.5331092089606468,-0.38459473320663456,-0.9973330923599703,-0.2461153955845904,-0.6505965813056565,0.9955274826695771,0.725099945987879,-0.4240360820538273,0.9845766187351367,-0.7100824177092809,-0.1666437215318864,0.990528558868148,-0.45824018303556374,-0.4626888163571885,0.9912042371061445,0.43896819700824397,-0.20900104907677458,0.9198089930283266,0.663077402081978,0.23003884865898055,0.9959884319800213,-0.6467825395497854,-0.25096968029615274,0.9358706124202913,0.6301869234729515,0.27178381116246136,0.9989203057987109,0.8147317404777334,0.004773644986220049,0.9501917167774874,-0.8020395030873592,-0.026334882597596716,0.8323742449192273,-0.5786734011606559,-0.333429511840701,0.962745671972165,-0.775542259755089,-0.06941060043016659,0.8554952512537564,-0.9160210789781966,0.1996551881064196,-0.8664616893339305,-0.7476026771236806,-0.11235722969855062,0.8770252231790205,-0.8978744896408757,0.13375716287874187,-0.8871809407512804,-0.7182727167175047,-0.13589146404369012,-0.7316415049324376,-0.8780580497624486,0.11449729657605114,0.7461703939428511,-0.9739993725376623,-0.09304988792502916,0.9151549330552291,-0.8566086135950806,0.07155921112449683,-0.5591688275823041,-0.9633258895667711,0.3354594443799068,0.5769153710230114,-0.8335660724075442,0.028488041161915646,0.8007511407009108,-0.9508608307392165,0.29453066705402514,0.6115955344714027,-0.999018054645662,-0.014636110338172309,0.3779705317204718,-0.936627378343245,0.7445825772271808,0.6451382637394514,-0.7828759744855752,0.5023446807257715,0.8493777678293846,-0.9832977178304948,0.21110696148183428,0.15957418141909516,-0.9914869959919624,0.46459727921535926,0.45632461322620843,-0.9029644168984932,0.1687671831161576,0.7085641225152768,-0.9169738953773089,0.4259858281890681,-0.06703434069068977,-0.9953216828876009,0.6522308450411335,0.24402711281385733,-0.9765835692138197,0.38658213651677137,0.5312856164096399,-0.9985617780832038,0.6189421709771719,0.28561191411981257,-0.9479340944012334,0.8062986315498022,0.019171236362753006,-0.9999447663616394,0.5845023995927674,0.3266655396157389,-0.9544185912447569,0.7800458706726913,0.06226064501913498,-0.8517629396948025,0.9188718427312677,0.36711163852038603,-0.9718457702172013,0.2643569870215539,0.10523426246753152,-0.9971325925387802,0.9010060418134276,0.406874989919338,-0.7117574783442544,0.9841571193902945,0.14801216716080282,-0.8937326404245519,0.474926991550806,-0.12161268929563639,-0.9885311235426193,0.9755977067836517,0.19051480153480863,-0.5351228164168828,0.8602837592225749,0.48405905288206386,-0.7696253157773297,0.6610558113195829,-0.34220108287792034,-0.9290568419630097,0.9999821520598898,-0.035649856898291137,-0.7964384961977838,0.95305497832176,0.2743787357895691,-0.944142813380513,0.813164692215883,-0.5451787698870884,-0.8217704748810492,0.9729044800623432,-0.25997986547017654,-0.6396468219304954,0.9967790949684392,0.050578055999050964,-0.8455741398768479,0.9234256494592331,-0.21810550910048473,-0.6721933044449007,0.9923945258021273,-0.4709305209225198,-0.4499369803777379,0.9892059333830459,-0.17582552409717916,-0.7034896541555506,0.9861643194615548,0.13642988726410635,-0.4880230259290347,0.994603829591799,-0.6576456621253369,-0.23707201590372146,0.978100062770436,-0.3931805889552375,-0.90738725673574,0.998151979803543,-0.09036380250179092,-0.2787376009668718,0.9682167534857568,-0.8105163610856859,-0.012006605792112138,0.9998437852334591,-0.5903013870947251,-0.7893081325114382,0.9587717090920637,-0.3125070966660537,-0.055107492872092885,0.9996760994927758,-0.9216754275528035,-0.3604370730302134,0.9430698491829754,-0.7570434838274229,-0.6306088156199147,0.8700501356078848,-0.5185678269321609,0.17135861410027203,0.9796890786202229,-0.7281696014443546,-0.14092183567665417,0.9937669596027492,-0.4812205803672123,-0.43945645468509015,0.7365531408619437,-0.6979414825649636,-0.18347569545723572,0.9092842836384573,-0.8639147340890453,0.08584566714893382,0.993321805420558,-0.666415344891445,-0.2256883304977518,0.9263822239820468,-0.8413969507061098,0.042809842213840106,0.7920849590309178,-0.9552001918598805,0.3081952913342237,0.9417572956220092,-0.8173143526752121,-0.00030559968220996434,0.9995685210627031,-0.9415515774653896,-0.3087766818227204,0.6341225378336216,-0.9973281479771353,-0.04342047322956477,0.8417270964199961,-0.5646465480618633,0.2250928582207127,0.9672277130226039,-0.9932511017020608,-0.08645459417557719,0.4435262457810091,-0.9090297475781656,-0.38956907225678117,0.6983790655354294,-0.7361396004759875,0.43890735430653294,0.8851104305769468,-0.993834908950369,0.14031670934522547,0.23010474667108416,-0.9795663363575747,-0.171960741009935,0.5190903278111391,-0.8697486742895582,0.6301343455122694,0.7574426783706325,-0.9432729547170045,0.3598668890320469,0.5554589933918462,-0.9996914677172258,0.05449721200477067,0.7848882990931058,-0.9585978409559787,0.7889327103468327,0.5907946265037853,-0.999832795540602,0.5608972261315076,0.3537440011116136,-0.9683694413018202,0.278150573048003,0.6250315105832793,-0.9981146526318084,0.5246812399475954,0.3937424896327902,-0.9782270921830514,0.7330620892119967,0.1338242686441646,-0.887212183677569,0.48748946119741365,0.43300870307882483,-0.9862654542237456,0.19436602174990628,0.17642716892854893,-0.9891161883675832,0.8675013517642335,-0.09298246694914812,-0.9924695778253139,0.6717406617614033,0.7205238609785707,-0.9236600414534635,0.410456886478358,-0.04996762948334946,-0.9968279246722427,0.9572963612088567,0.2605699995690093,-0.9727629845172915,0.8214220486122932,0.5456910485702855,-0.8135202789185667,0.6054243937706095,-0.2737909419911563,-0.9532398698200356,0.9978259937616862,0.03626066106155046,-0.9999783136238403,0.9288305631825319,0.342775318202984,-0.6615142931595158,0.769234923822364,-0.4835241414542205,-0.8605951974375309,0.9119924797836155,-0.1899147611436329,-0.975731722994176,0.7409704953574614,0.12221932936948501,-0.47546477366065387,0.8934582894639418,-0.14740767220948922,-0.7236616836146506,0.9809823146902851,-0.40631659320036817,-0.9012710157894881,0.8732624617714166,-0.1046264371847258,-0.9909683590230691,0.9717015791842497,-0.3665430464536,-0.5494863426731484,0.9994878216335925,-0.6018081398820204,-0.7804281660490763,0.9606136908673092,-0.3260878096582549,-0.9352452820937117,0.9999381557646347,-0.018560145775319743,-0.3470327664164074,0.9665566510475323,-0.2850261207232308,-0.619422113673247,0.8030957794415106,-0.5307677135149524,-0.8313916437461161,0.976714879254152,-0.2434343454260143,-0.1267198304837174,0.9952624450400379,0.06764415271602701,-0.42653871889669137,0.9167298878338801,-0.7081326995385874,-0.6847520674867559,0.9032268899628584,-0.4557806746472472,-0.4651384229488229,0.9915663924663366,-0.1589707842223879,-0.7155366208319505,0.9831862932053409,-0.8490550271067803,-0.5028730710758652,0.7832561029132697,-0.6446711466999248,-0.2536453858132219,0.9368413231559544,-0.37740460200392,-0.5396724850699279,0.9990449471882543,-0.6111118572970902,-0.2951146998139077,0.9510498918209692,-0.8003848844617388,-0.029098987111330958,0.8339035553090368,-0.5764160332478686,-0.33603516489767005,0.963489715305228,-0.29622227403996887,-0.072168830195348,0.8569238121282987,-0.9149083862743539,0.19694493380551842,0.6880505789557083,-0.7457633455469073,-0.1151044550099487,0.8783503777269296,-0.5038748815450707,0.15449106651396963,0.9829739178140326,-0.9823479250659969,0.41285347054666066,0.898143403370422,-0.8767314121084415,-0.4547483860734275,0.7480084632296893,-0.6855965579910811,0.37320038393913035,0.9162660783519763,-0.9992328574386469,0.06880086223494657,0.9951490526213481,-0.9625802186365894,-0.24230964932021928,0.5791717624232986,-0.8320353542405188,0.5727036766514153,0.8024044049129748,-0.620331902050905,0.2918870339007953,0.947368728622497,-0.998891724929068,-0.017400922413486855,0.3805291244828346,-0.6913349349904483,-0.3249915538698936,0.647248564871528,-0.7811525577176168,0.49995181269642386,0.8508339338428839,-0.983797230638214,0.20840330878606744,0.16230330259265005,-0.99112316518907,-0.10347331958003127,0.4587833487756248,-0.9017727313545519,0.682287553465498,0.7105126418805533,-0.9180735442638436,0.423482473048276,-0.06427513996655347,-0.4764844279001362,0.12336996585796045,0.24670774878505308,-0.9759849426496855,0.8295107054563053,0.5336262124048747,-0.8051030062296292,-0.4825089483991509,-0.28754578869770314,-0.9488110827274606,0.34386425832846074,0.928400371741555,-0.999970005917603,0.9340447183298621,0.997748913758925,-0.6506994233768465,0.7783126634911411,-0.496018458215862,-0.8141939717756153,0.5466622521681206,-0.20396499444621002,-0.5953800239655042,0.2616891831480604,0.10798367068021876,-0.4628088728148662,-0.048809633590411086,-0.6789645120698466,-0.7136970785276622,0.7213273469632562,0.6708813346737784,-0.8949696763092853,0.9960005413235903,0.8669240374933069,-0.98894493188409,0.9749868416719063,-0.8269689909438173,-0.9864562888177644,0.8588707466903902,-0.6131912963231997,-0.8877464949163432,0.6589784797669928,-0.33960155236687933,-0.02647026447714096,0.39480797931463296,-0.032886314088566994,-0.33355718794855177,0.09212702628655786,0.2770367287566549,-0.6081081979106139,0.8555653700348196,0.5599369899877996,-0.8233429753152849,0.973540087070748,0.7882197459300518,-0.9582670389915509,0.9965535284536892,-0.8978148585437392,-0.9997195942549991,0.9223609116832481,-0.7181784837597639,-0.6742379949636645,0.7581991503966978,0.6292336557405864,0.11436275707638117,0.5200809496405427,-0.17310276522480525,-0.1976768842557167,0.9857021659908883,0.13916867486512763,-0.4904346805509942,0.7742663855742826,0.43786529140989716,-0.7353543821359475,0.699208418863432,-0.39063662439798374,-0.9085459739984202,0.9983161944587932,-0.9508188906530978,-0.281392108623921,0.9675214494789449,0.2239630499192619,0.5390437668264217,0.8423525002066019,-0.588067136991632,-0.7910029182633412,0.9595538408885514,-0.30987922978618093,-0.057868244541690886,0.4176588904559281,-0.0014650100234304083,-0.36301499469573306,0.9421465646897691,-0.755233929471494,-0.632752451041246,0.8714099336689805,-0.5162015280871347,0.16863369508008563,0.9802398110879603,-0.2268176761028645,-0.14365886680528125,0.993454906801509,-0.8835340912144551,-0.4419386217894561,0.7384206258513712,-0.695958528676919,0.3864572328177421,0.7373368475826977,-0.44049761600080783,0.08309038248811096,0.9936370434957604,-0.966364906405777,-0.2283812894306411,0.5674299509426934,0.17021623749135253,0.5843925081543133,0.7937698170985568,-0.6315082113241908,-0.7562854572839577,0.9426836014653097,-0.9994636498393364,-0.9212250009840481,0.3672376081643255,-0.9406164801343285,0.7522531709324424,0.9591005430065999,-0.7900194769709604,0.5123114865924102,0.8250023550164277,-0.5623622085753746,0.22239779499289875,0.14814610321614632,-0.2798508736502528,0.881400601857026,0.44600286005678075,0.02995774087060861,-0.39211429155018895,0.7003555012494327,-0.9122984977210045,-0.656771804328458,0.8863939017729171,-0.9941376834129628,0.9651884820691143,0.9859714603020564,-0.9790064578754758,0.8374290015400284,0.9893751592529635,-0.8683807546610651,0.6279848248066766,-0.3012415806881888,-0.6730512520753956,-0.7192949376661052,0.007606472051268737,-0.41207082630152125,0.05173594868865776,0.31571257250873996,-0.6397509162007631,-0.2588601475819697,0.5930233631240418,-0.8456464320273981,-0.5442064465853192,0.8124893296769615,-0.9690557051166211,0.9923778456579572,0.9527032713515693,-0.997941119189865,0.9059630152537186,0.3962827807487339,-0.9294851264084851,-0.34111143967059276,-0.43233557921200866,-0.7703650772862867,0.4850732527785632,-0.133084318811748,-0.9867184001807313,0.19165284869753396,0.1791482834475809,-0.5253166975401786,-0.12046180253011972,0.4739063617985903,-0.8942521513370364,0.6696896976147797,0.7224385545860503,-0.9247161568353865,0.9998461697716593,-0.047205728375091766,-0.9970441848156572,0.10638716466444137,0.2632386448927147,-0.9721182949245346,0.8198418775791636,0.54800613248097,-0.815125212821736,0.6032212771825055,-0.2711303901092362,-0.09824066692437775,0.3277611253970281,0.039023868185266035,-0.9999562799150562,0.9278025056613175,0.34537165117073704,-0.6635854508130434,0.7674651368821823,-0.48110185887533957,-0.8620001767222218,0.5322675036050426,-0.1871991952469907,-0.9763334790909086,0.9880156001950983,0.12496329621788264,-0.477895567004104,0.8922129107803131,-0.6663143654628904,-0.9174358226865601,0.7093817802289212,-0.40378841979570923,-0.9024655934961985,0.9973824125419108,-0.10187604931978993,-0.26761172652991194,0.16071862801066739,-0.8172363120179206,-0.551794544111336,0.8499891169130952,0.5013418384686733,-0.7821540887704985,0.9554208981027787,0.743808135001467,-0.04355577419736989,0.9999035805407499,-0.9261007970044339,-0.9989660155877614,0.9468534332584396,-0.7645494072285841,-0.9642700778967036,0.8014450861723879,-0.5284221597408931,0.18274169050124617,0.5778619943999187,-0.9873053235360755,-0.12946221900494043,0.29791295235137427,0.07040272474651496,-0.4290380943614843,0.7286811353377703,0.3746896443254663,-0.686764635226954,0.9044101440121073,0.6424284986817838,-0.8775026188664582,0.9919209661633757,-0.9699511269832947,-0.9826470361155727,0.9826776006393987,-0.8475909326268769,0.5959613200464438,0.8775816659694398,0.4531707332572699,0.31917730789434623,0.6868844544780205,-0.3748424830694366,0.011260027867958567,0.3538706704224133,-0.07056716808438711,-0.29775558043933925,0.6251372207348536,0.24059142617134455,-0.5777274440392242,0.8330162470099832,-0.9782551898083186,-0.8013464817058944,0.96422639165356,-0.9945260926965289,-0.07492650814698991,0.9989734967693027,0.01563055391128865,0.7029588251671497,0.9362784946142797,-0.7439183117533981,-0.6458978519714945,0.8796688162780634,-0.5014844709059026,0.15175850971522062,0.2188341017717732,-0.21013471410401147,-0.16055591552326567,0.9913570085474207,-0.8753980708365094,-0.4572093579689452,0.74984081313329,-0.6835809479495063,0.37063357396158725,0.9173702177428984,-0.42508581180813365,0.06604198728383746,0.9954172812759923,-0.9618271876758228,-0.2449914824169335,0.5814237253907103,-0.8304982742082312,0.5704347093288005,0.8040515338223935,-0.618160703168343,0.2892411689361743,0.9482503588392756,-0.9987577575387464,-0.020165601438777422,0.3830848076632836,-0.934675638063687,0.7408795428379802,0.6493539170454385,-0.779423168141777,0.49755512196164214,0.8522835942544036,-0.9842892211869394,0.20569806260780746,0.165031182771171,-0.9907517561120054,0.873196465923222,0.9970568369985296,-0.9005741507230586,0.6802633779416003,0.712455728561183,-0.919166173424402,0.4209758798979201,-0.06151544778519953,-0.4740515211409372,0.9605760480370983,0.24938649839234744,-0.9753788535604658,-0.19149104866296543,0.5359627282152396,-0.8067400439884332,-0.4849290862947413,-0.2848963066509952,-0.9496808163039506,0.998521470618582,0.9294243060373907,-0.9999875995551432,0.9330535522007308,0.9979305324713007,-0.952753357683634,0.7765735052159605,-0.49361553669317604,-0.812585424195449,0.9850799470275625,-0.20125717923464273,-0.5931560925548773,0.2590193783604047,0.11073225323380405,-0.4652583056556266,-0.05157131540395949,0.4119206142695883,-0.7156312216777498,-0.35713162781792873,0.67292931807472,-0.8961998691236306,0.9962437932130673,0.8682989924065576,-0.9893511786064825,0.974368521666703,0.19594090410174858,-0.9859989632350665,-0.13741507775148543,-0.6110046535747746,-0.886470205587872,0.656896109567574,-0.3369994252121885,-0.029234358585967422,0.3922659375433212,-0.030122519825225968,-0.3361627156295893,0.08937326937840154,0.27969260345997704,-0.9679675232987341,0.8569936102591552,0.5622258851774846,-0.8249091803474723,0.9741682502477944,-0.2546357474365618,-0.9590538656564094,0.3115621967482272,-0.8965937221535026,-0.9996502937213252,0.921289121399442,0.36136460147796967,-0.6762775301590916,0.7563933009587688,-0.46604464646594784,0.11161529772723552,0.5177171876381796,-0.17037868278311036,-0.9798880253076839,0.985232475695811,0.14190639836189697,-0.4928425852369184,0.8843620009597101,-0.6534694731777974,-0.7372254749595286,0.6972288803752522,-0.38808967297537844,-0.9096977443843342,0.9984727758409069,-0.08485473881090577,-0.28404446471532846,0.966818747660167,-0.8072647770084225,-0.980272407875305,0.8408590582926565,-0.5858283904403153,-0.7926916558900506,0.9603286357945857,-0.3072489935239287,-0.060628553742140365,0.36316859736427054,-0.9195157847335356,-0.36559014069496326,0.9412160764047153,-0.7534186004853453,-0.6348912483438395,0.8727630688009614,-0.5138312822889496,0.16590748666174893,0.9807830484972594,-0.9844457187259055,-0.9674797632285884,0.993135257897256,-0.8822356021340464,-0.44441740976581784,0.7402824647675827,-0.6939702533871275,0.3839054241429028,0.7354660904204392,-0.998713087469097,0.08033446250594593,0.9939446840753058,-0.1393319220885583,-0.23107250212644517,0.5697046777603683,0.1729403981836055,0.582146423044116,0.7954486058848846,-0.9615836488549508,-0.7580916519089134,0.9436026994105001,-0.9993692760141896,-0.9222972114648879,0.9997156769762837,-0.9396741907106725,0.7504283997452846,0.9583141533553703,-0.874968196511468,0.5099348057620544,0.8234365256813063,-0.5600735691843428,0.21970103127868218,0.1508801888157673,-0.277195125874847,-0.09196287275926729,0.44847606412878194,0.03272154945760295,-0.3946565126797837,0.7023265819417872,-0.9134274162614856,-0.658854474418629,0.8876705954701387,-0.994432856551933,0.1348389694400919,0.9864292354479036,-0.1933903354082967,0.8359145101977423,0.9889693634367251,-0.8670061952650078,0.6258305024363208,0.7610418422141894,-0.6710035749886226,0.3547015889302175,0.010371527192933135,-0.4095497665229995,0.04897428979183654,0.9969065854916501,-0.6418737266834865,-0.26153007101518627,0.5952475654000373,-0.8471190874552866,0.5563101878569527,0.8140982480169026,-0.6046325233482241,0.9920332940467178,0.9535399682651446,-0.9977599553426658,-0.037254546415645684,0.3988200418279803,-0.9284616155688983,0.7292893756795774,-0.429840542433627,-0.7685990549888345,0.48265333541794647,0.8611012895313226,-0.9871638015430293,0.1889382102391614,0.18186802817236622,-0.9882873521748158,0.8647371182654676,0.47633948517443175,-0.8930111459598012,0.667633612921773,0.7243477243215924,-0.9257652017009359,0.4054076330196611,-0.04444346632485968,-0.9972528214119089,0.9556828635912038,0.9911012349832925,-0.9714661723716519,0.8182554379138961,0.5503170262557907,-0.8167239141570831,0.6010135482753828,-0.2684677651242903,-0.6473742203282484,0.9974462675107791,0.041786776926719206,-0.9999266003928,0.01756575057045851,0.3479653433758122,-0.665651534594161,-0.2917293554829692,-0.4786758977205569,-0.8633985650261902,0.9878780584738622,0.8319438950527701,-0.9769277699975946,0.9875850086335296,0.1277063075784525,-0.9951652571529065,0.8909607101049329,-0.6642499154639875,-0.9163321012398703,0.9274706455644985,-0.40125715896512776,-0.9036532708176305,0.45489520158050467,-0.09912488249552748,-0.2702750133596657,0.15798879575729166,0.2126762565260508,-0.5540985264469047,0.8193327776347993,0.503732478220616,-0.783874031026185,0.9562336524430121,0.7456535083037092,-0.9371887109038664,0.99986135990634,-0.9250540258679165,-0.9990879095939278,0.6690295576515239,-0.7627641558729844,-0.9635338409306324,0.7997882649357126,-0.5260725655729193,0.18002239035837286,0.575603039286498,-0.23806668161787306,-0.13220361763890728,0.2952722068910351,0.07316075846736661,-0.431534189337612,0.7305720808914271,0.3772519346800983,-0.688771951863273,0.9055864828077571,-0.4508512218038682,-0.8788253590125321,0.5030155569315848,-0.969274654781922,-0.9831561767416394,0.982161394375319,-0.8461203573414605,-0.507645558903907,0.8762526160310766,-0.6404335894293772,0.3165555553050558,0.6848721993663761,-0.37227749803394006,-0.9166640152114773,0.9992713125368595,-0.06780862755554311,-0.3003941843816057,0.627293082565916,-0.7970573003254694,-0.5799822446346019,0.8314832392984176,-0.9788249584148165,-0.8029975406655303,0.964955695384425,-0.2909356423862891,-0.0776836131994792,0.9988444198697343,-0.9126620228538382,0.7009894684467517,0.9353036275335086,-0.7420675898505539,-0.6480063749506801,0.7805312292541843,-0.9928207003734674,0.1490247925484821,0.9839750530089304,-0.20743048589368132,-0.971662625663842,0.511548195669945,-0.8740580361415766,-0.4596668339741535,0.9013424272081553,-0.9403144708861044,0.3680639300649719,0.9184673427855828,-0.4225812898357057,-0.8933842340704893,0.3047173732400767,-0.9610668024422572,-0.24767144227257257,0.9757678075780081,-0.8394168041362898,0.5681613803781093,0.8056925148349758,-0.6159847777377035,-0.7691295776712299,0.08220486972746309,0.729856812637187,-0.022930126274899668,0.9999772143506084,-0.036425405509114085,0.7390195212423489,0.6514543041633492,-0.7776878189812241,-0.6052931782945392,-0.14453814593746891,0.556999459463683,0.20299124363176632,-0.8412505433173816,-0.26072915451568884,-0.9572486877087477,0.46369027732559726,-0.8993686841685377,-0.41030655442409175,-0.36384278982601753,-0.9202517745045801,0.4184660679037821,-0.2993954604605749,-0.4716149897137605,0.9598036120110519,0.2520633411536251,-0.9747653065804074,0.8418733027490293,0.9862926693135486,0.13566104983335933,0.6124053579493087,0.7720204393360397,-0.08672443503439294,-0.7329499523095133,0.027464460236290192,-0.9999975471397364,-0.7427689536849358,0.9981045208593684,-0.6548888308459904,0.7748284091450105,0.6088974306359066,0.14004852570754078,-0.5607607388188023,-0.19854782518094477,0.5106483524988021,0.25634759307230864,-0.8696149752476838,-0.3132441869441605,0.8973764381952245,-0.943362849980492,-0.9219762288407687,-0.3597130753605772,-0.41434223676626286,-0.8974232094613519,0.46761048235072533,0.8696673081774102,-0.2564500542734092,0.9737427514958078,0.5690225898115077,-0.985534098558602,0.8110326809382161,-0.6088133389944849,-0.774895418033995,0.0912422161381373,0.7360280128217482,-0.698497046219363,-0.69456740448695,-0.027358495240647374,0.7328778349549138,0.08661882910902154,-0.7719530585728872,-0.6124891559802986,-0.9845911497564458,0.5645104815049757,0.1941003219567601,0.9747889647904538,-0.25196075772668886,-0.959833359253699,0.30893347534959714,0.9414960307105011,-0.3648177462843611,0.9202102868028816,-0.9237638039205386,-0.9418127219064334,0.8994150234722976,-0.4635963547219387,-0.8718973882974594,0.5153494670937006,0.8413078496210015,-0.20309504035774587,0.9847552521676439,0.144643036821376,-0.9933408121645912,0.7777544546174501,0.9984265943664142,-0.7390909308481939,0.036531339785388244,0.6978234125619667,0.02282414918949171,-0.6540972951179332,-0.08209922321559701,-0.993748568661643,0.1410850419982972,-0.8056297200437921,0.9870479602439879,0.8393591870461039,0.5184268642520644,0.24756873873027474,-0.46677857601136813,-0.30461640799047207,-0.94301500701039,0.42267736229033953,-0.9184254130518691,-0.4152948252920739,0.9402783914424647,0.3123504956763077,-0.9588185436657405,0.8741095306575567,-0.26520756234199405,-0.8437510303094881,0.5615395399189265,-0.9839561461640731,-0.14912961283242082,0.9928080153340729,0.09019962236473421,0.6479256343317675,0.7421386433746826,0.9999991884869641,-0.7010650641438553,-0.018289333571487047,0.657521464639642,0.07757792827461017,-0.7661547721688321,-0.13659319734020553,-0.9861369782004509,0.19512721582879644,-0.8368850159087402,-0.5223001614960003,0.8678871261484259,-0.9623390436514488,0.47968782978848423,-0.41761132137581464,-0.35635651644271665,0.916621644308379,0.41116442977285733,-0.9387247163993057,-0.3166561069476282,-0.45553956919788197,0.25982067722525004,-0.9729425821613171,0.8461768522999856,-0.5577806473880433,-0.8130687309653921,0.15361312076317019,0.5979624274132567,-0.6521678697252996,0.9978768379607741,0.035485107850795124,0.6886950968177519,0.7042922925413185,-0.7304996929177937,0.999056745504862,-0.07305503730377666,0.6152432988345283,0.1320985425165854,-0.8002224792860203,-0.19067663289874764,0.8343936273295945,0.5261627133299309,-0.8656250066114705,-0.4747819099919964,0.8938065814959598,-0.9459947261182613,0.352114860849278,0.9250942850733767,-0.37658161028031867,-0.39776251959223596,0.460502241013793,-0.9562026296152716,-0.2641979947508355,0.9718845994138431,-0.8485852656854601,0.5540102794983703,-0.982297221496381,-0.6024277458896269,-0.77994270764804,0.09923036469333708,-0.9975711624754166,-0.04001764865202471,-0.6853993530432305,-0.7075050313597909,-0.9987987571895084,0.6643291514614285,-0.766827155869438,-0.6188126807160312,-0.1276011699970787,-0.9876016549050348,0.5793925462660912,0.9765480896565432,-0.24418697907233558,0.863345078357818,0.47876896638818445,-0.8917633124873906,0.9474554076237479,-0.34786596110998663,0.37140405823640293,0.4028783469225166,0.9028935646161262,-0.32524769711139717,0.9548651507455533,0.268569876865932,0.49971721675782993,-0.5586492654745331,0.9833277085032308,-0.8183163707007014,0.5988012239298626,0.7827733957516606,-0.10374272005939844,0.9972449637125637,0.04454936616030147,-0.9998892752840054,0.014800945834713189,-0.7242746368317895,-0.07409911054961531,0.7639079721232226,-0.995610425465692,-0.8008498765123759,-0.5748333781745517,-0.18176379017014505,-0.9775145911701978,0.23978601062965724,-0.8610473882929949,-0.48274617295237765,0.8897016970123127,0.3530945310897627,-0.9152213733825348,0.9285009835521533,-0.398722830063018,-0.9048340386726277,0.32953349924694275,0.8779791465769613,-0.5045450659734241,0.9697086716318933,0.21537734822986818,0.5464354281519771,-0.1570596368070567,-0.5951623826848726,-0.7855879796652031,-0.9976435380365961,0.7474931802290473,-0.04908016714348375,0.9998114941842301,-0.01026552800779322,0.7211397256733846,0.06957505524314754,-0.7609730723099409,-0.1286394528810338,0.7981253283997851,-0.9889850593381978,-0.8324655976389399,0.9784609820351439,-0.23538010901025852,-0.9644895521453579,0.2926292037357719,-0.8876217774848496,-0.43402698473956347,0.9133842669877317,0.3798113405106941,-0.9359286847705425,0.9067558973553477,0.9551756014453073,-0.8801413795300534,0.2772969752030977,-0.9685907713633163,-0.21980444488310147,-0.5426311005345413,0.1615374908144271,-0.991226040507495,-0.10270140144343838,-0.6383074574096794,0.9965310236203344,0.682854707620697,-0.9997131437160627,0.005729898985634392,-0.6669328223272323,-0.06504956855191324,0.7580225168100105,0.6294441480213788,-0.7953843602580204,-0.5822326106000375,0.8299438739431422,0.5329697281244897,-0.8615792964143973,0.9656776209214587,-0.4906707094929004,-0.9485656853206416,0.4381087878462167,-0.9115283693131919,-0.38400330392083043,0.9343216089829987,0.32854488430624407,0.4443224460415974,0.8822855051175293,-0.49669216466122273,-0.8528034057823307,0.2242270194452933,0.8203166756229343,-0.16601202147116884,-0.5878480420422366,0.107212123350636,0.6348093452855417,-0.048034491219705405,-0.6795340630351665,-0.7131532740564092,0.7218646193895107,-0.9995233447560289,0.6777799613362052,0.9959309032697063,-0.11963809894533352,0.7926270284776953,0.17833194060975086,-0.8274050756073877,-0.5368021098689838,-0.22655386891572799,-0.9668458225737586,-0.8881034699734451,0.9499918612001175,-0.3403313814742734,-0.929790850776783,0.3881873671363121,0.3862074041578932,-0.33282547949299973,0.952450794634715,0.2762909679037901,0.49275034570667153,0.8551633539840612,-0.5435101779403367,0.9798668667364462,0.17048313672165952,0.7877419305198982,-0.11172063955638478,-0.6312981730722191,0.05256452379738236,0.6761994382278054,0.7163255444816425,-0.7187182906706507,-0.6736646660801707,0.758704926291399,-0.9963294219545711,0.11513368365141614,0.989495445218591,-0.5895839296117253,-0.16389396598005823,0.2319878416090077,-0.8569389782903094,-0.48975822009119635,0.8860095002801361,-0.9513984926627946,0.3360628779776396,-0.9077603532380762,-0.39135089812368984,-0.9082214773389498,0.3370992273791014,-0.9510589846063962,-0.2806473292966674,-0.48879838927776137,0.9651176022616962,-0.9809661865522598,0.8254709611113741,-0.58869464069542,0.9893357442478998,0.11622685730586915,-0.9962346083659733,0.7594214108735321,0.9996234991512328,-0.002241061399709695,0.7155571755831833,-0.9997622717479138,-0.755742369907802,0.9967074429085744,-0.11062689968383665,0.5850655878932371,0.16939858293680282,0.9800860027442433,-0.5444336634541489,0.8545923502453981,0.49370772422331677,0.27523307890618254,-0.8791199202951566,0.9100880726685946,-0.9330916808702937,0.38717287549049584,0.9101103053076435,-0.3413660400396802,0.9496476082070856,-0.8886087984380888,-0.9665641965752672,-0.22762567770800113,-0.5358732315132823,-0.8280226563521881,0.5850220764986279,-0.9886649200949157,-0.12073068389156028,-0.7557775034770415,0.061621251508780936,-0.9994887628207325,-0.0022947126856971258,-0.7123813391615087,-0.680341072241124,-0.04693517041987648,0.6356593308548381,-0.7904950227862537,0.9907661340209644,-0.16492663051666592,-0.9809766031004828,0.5482326782889861,-0.8522281404613495,-0.2805958336680972,0.8817669200725496,0.44530813415756704,0.3275052172302349,0.9347133177078532,-0.3829868874542697,0.9277014220998825,-0.9513819686662723,0.8860343754042855,-0.28934264109659796,0.9653911721350842,0.23204002901769966,0.5320381819852695,0.8305573164787285,-0.581337476498408,-0.7960509351648826,0.6285885797293526,-0.9954071388077181,-0.6736250147148521,0.999333463761472,-0.7257536733667265,-0.9997388973720265,0.05251094646928263,-0.7497706741875299,-0.6391542632156905,0.7877088798193688,-0.9913709099389775,0.16045128502029363,0.9818470215831887,0.8551355420762855,-0.968863850811672,0.5015761799301712,-0.8796183968419209,-0.44936477254779456,-0.3232162360383285,0.3955701453544379,-0.9297711009788224,0.9138317509997719,-0.4330352256199597,0.9467662728438146,0.4857517442027489,-0.9641982864642817,-0.2364496065106674,-0.8274352053562543,0.1783847317653711,0.5776409164989443,0.7987879243150439,-0.625054478878121,0.9949626815325289,0.6702658244963114,-0.9991576051684573,-0.7131156629452844,0.9998322570531646,-0.6869614913915173,-0.9969842602263399,0.6426360460982903,-0.7849065311234749,-0.5960464399682803,0.8202859906797215,-0.9826972402850268,0.2143024848833012,0.9699769124912136,-0.27187729222180673,-0.9538391235213892,0.4534121660457571,0.9343407306744859,-0.3997318827178137,-0.37459135981227937,-0.9156642921609868,0.4289423392314884,0.8902036113730772,-0.4817820519677553,-0.861606529871465,0.532924331046895,-0.9772819260707569,0.8355753231557782,0.9881350895471853,0.1241932891308922,0.6215075186269767,-0.065103106250337,-0.6668928447336968,0.9989611906596706,0.01590137842815978,-0.9999050469387512,0.043449869723140355,0.9973259980500843,-0.10264803356803137,-0.9912331306011289,0.5996822989277284,0.15149078315630088,-0.5511471654953447,-0.20986989581830665,-0.9710700185965687,0.2675095865294017,0.9551914830280501,-0.3242067768423923,0.9024199255797042,0.40388539629860504,-0.9263933043058074,-0.34889757614719336,-0.42484062810650836,0.29268050620072716,0.4778024479118142,-0.9617530300050474,-0.5290808551590334,0.9763105478860562,0.5784951837274797,-0.987428289675321,-0.12869265835318922,0.9950670849034828,-0.7675330912780071,0.07971874913537659,0.7281494338280357,-0.7067268264945433,0.9999572655312617,0.7474575401496047,-0.9976472176401614,0.09813517432265005,-0.7792534474905219,-0.6033058204753777,-0.9825027938411662,0.5549261727522734,-0.848002489869383,-0.5045913871011304,-0.26313637729631345,0.8730644261820528,0.3199126730107552,0.937535171636671,-0.37556183969186735,0.9246758001212297,0.3531447261912569,-0.9456373707640311,0.8942995902050828,-0.4738130139083011,0.23983809646932552,0.5252264943602838,-0.9753190838237261,-0.574789475970517,0.9867011751977843,0.13318937994969435,-0.9946068818093405,-0.07415261437281956,0.9990083499589242,-0.7312508387143012,0.7035105658363878,0.6894926434758141,0.03438521737585585,-0.7376426775992687,0.7827400069766334,-0.9923909033061125,0.15252552811544604,0.9833374631856703,-0.5586937633762227,0.8455898478891596,-0.9731962745407671,-0.8757729532132106,-0.456519030805939,-0.31561198753681585,-0.9391034762353527,0.3713542438924908,-0.92293927235342,-0.35738461090179413,-0.891787588588541,0.301342659672319,-0.9620392707178324,0.8684333173685771,-0.5213613279473615,-0.8374869333631859,0.19620650469904652,0.8035898821374434,-0.6187705345618466,0.9941262164225799,0.0786751266311048,-0.9987961268088845,0.7343371993967583,-0.7002798316818977,-0.039964040146723584,0.7414005461298416,0.648763544057857,0.08910349184017474,0.9929391704543215,-0.14804126726715527,0.8097745381418398,-0.8485568797146431,0.9718972306556037,-0.51240252062981,0.873574426496753,0.4605498644957376,0.31130480889963685,0.9406524604266644,-0.3671390081306902,-0.918860232810354,0.4216796886291549,-0.9426482236381946,-0.4747346905036804,0.9607915148937786,-0.8706732422710852,0.5174854354392878,-0.19072929970037247,-0.567342661081473,-0.806281226493961,0.6152010025308777,-0.9936250986320485,-0.08319602028661105,-0.6532644223308001,0.7042542038393126,-0.9999834336616003,0.6960346449234769,-0.7383491383638173,-0.6522085405673761,-0.0845848544141114,-0.993467009620149,-0.8130374956687558,0.9849460937867551,-0.2020172920296399,0.8407124243371843,0.5162923148403378,-0.8713579275182229,0.9604041349992015,-0.9387432069676402,0.4112133357371995,0.36291621912755045,0.9206405163248144,-0.4175625717085492,0.9411245445997574,0.3099800148841004,-0.9595239924689878,-0.2530256603096289,0.9745428073051161,-0.8424096243334801,-0.9861280742233125,0.8089559830280021,-0.14666273414660672,-0.7726521958793617,0.6574810407891241,-0.9983100398607073,-0.02845862882911821,0.9999992553985766,-0.6992841996829997,0.7352825403589158,0.6556401190297759,0.9928144369116629,-0.6096860610736233,-0.1390637008205561,-0.9857200219485819,0.19757297008515953,-0.8382477431098699,-0.25538614241590796,-0.9588337803291912,0.4685830241251728,-0.8969371302116951,0.9436923405147819,0.9215906340305257,-0.9224018592749313,0.413436864170198,-0.30466750919822505,-0.4667311274033636,0.9582367295205113,0.2574112242827258,-0.9735158577698458,0.8448449983973114,0.9853650562906314,-0.8116140967111413,-0.9937425775161061,0.7755236840101263,-0.09223257978666041,-0.73670091546945,0.032992261394079986,-0.999994503904303,0.026364296643971486,0.9984296013995688,-0.6590582088463467,0.7713204570341514,0.613275029743729,-0.8077225519998202,-0.5653311357030789,-0.19312458342325028,0.5153954445557393,0.2509981627252431,-0.8668711955460754,-0.4725851847966356,0.8949223796673725,0.4194653806768312,-0.9198205377231295,-0.3648676994707958,0.941477947534175,-0.8998492953440249,0.3185918610459731,0.8723839804933872,-0.5144968963451488,0.9724688798527952,0.5644661954176219,-0.9845817661996871,0.8142555128573501,-0.6044167613943645,-0.7783792171009197,-0.9983703313897724,0.7397605047772491,-0.6945288051703133,-0.6985354388671514,-0.021829839645938546,0.7291040263032028,0.08110798273508371,0.9938591108665429,-0.6168513813554334,0.8050401265303578,0.5690667077329349,-0.8388181532426979,0.9760080290453009,-0.2466050191874882,-0.9613703234611933,0.3036689662169866,-0.8928892176642733,-0.35966301468597106,0.918031517721012,-0.925867578926378,-0.9399393726793528,0.9018185426908487,0.9585355959147425,-0.8745921835543674,0.5106022228242886,0.8442844265066064,-0.20850698489289507,-0.5523095837178842,0.15011297493795128,-0.9926884585459921,0.7812187364041558,0.9981012176297344,-0.7428048748097814,0.6912583389675226,-0.9999232820362774,0.01729493353723202,-0.6582704745670516,-0.076586329870483,-0.9943507827491425,0.13560789420508015,-0.8023411387718747,0.9879200680652382,0.836340202477198,0.5231480236050072,-0.8673926391699641,0.9626089402087699,-0.2993442696443066,-0.9448407970388542,0.42768290673519044,-0.9162236108301225,-0.4102576265431378,0.9383814602200568,-0.9037692367024337,-0.9572331667860815,0.8767823934147084,-0.5066970445579997,-0.84670643558135,0.5569549004647614,0.8136473280113172,-0.1545957978000571,0.9921307592975397,0.09570600714055158,0.6437032711145656,-0.9970914522507206,0.9999768507313888,-0.7049979905318557,0.7298201354704769,0.6616781412134263,0.07206310137643408,0.9948219976079128,-0.6239659393560717,-0.9870395600729381,0.18970022849320875,-0.833845045478497,-0.5270082086687019,0.8651266107293466,-0.9638277529652702,0.2950134145881584,-0.42262991485573087,-0.35118382399902787,-0.9254714982593949,0.3775027654924965,-0.9368042422076043,-0.3218969845049144,-0.4506094374950444,0.26515708327894916,-0.9716499425687952,0.849111025155823,-0.553182026740326,-0.8162758636148139,0.15907544012469632,-0.9915526486983479,-0.6479655112205334,0.9975013935213045,0.041011389535544236,0.6846748098538791,0.7082075433826327,-0.7267118030449936,0.9992816141658166,-0.994239114679906,0.619593637834364,0.1266146794960786,0.9877572928708079,-0.18524487481503754,0.8313327335800755,0.530857551462576,-0.8628427838256534,-0.4796418922005502,0.891312832111646,-0.9477730858702592,-0.9166425716333826,0.927180203312416,-0.3816990366250503,-0.9033206426438037,0.45558617438776056,-0.9545692555472203,-0.26952776154752156,0.9705675836967244,-0.8514981457598114,0.5493977722656572,0.8188876057737002,0.9922612951609793,-0.783391928456783,0.10473185962765519,-0.997170695513242,-0.045542914057470234,-0.681361882387594,-0.7114025261049979,-0.9990544707562509,0.6684525660768258,-0.7632657814024523,0.9957030178973547,0.8002538746960718,-0.9884547042943415,0.5838911554493786,-0.5261181921157869,-0.23882035014382585,0.8605412054446185,0.48361692805272466,-0.8892471994736546,0.9492099971134227,-0.34267573349511804,-0.9288698332585008,-0.9371699947170782,0.9052570383214884,-0.3304723415004427,-0.8784548058391749,0.2738928947549985,0.49491928577917654,-0.21634845768642735,0.9823070274631487,-0.8214825007559611,0.5943628566216734,0.7862029734615764,-0.6410294155295078,0.9968194824665897,0.050073501613795875,0.7074680318042733,0.009271017993536775,-0.7204503499867783,-0.6718191849219374,0.7603274435959962,-0.9961128052025786,-0.797525721363225,-0.5793498749010964,-0.1763228259327359,-0.9786658064226196,0.5385233936916384,0.9647517586175699,-0.4875820143345936,0.8871632721337678,0.347915044268192,-0.9129789324605915,0.9305403533364759,-0.3936450455789377,-0.9071748099229157,0.33474986573597615,0.8806130721949932,-0.27825239309641825,-0.850948723521842,0.2207745705760606,0.541795432715758,-0.16251890632165952,-0.5907090961587237,-0.7889978437187439,0.63754154985696,0.7511553637270986,-0.05460305899562626,0.9996888290604861,-0.004735355136096776,-0.9994077531336993,0.06405708547656268,-0.7573734633855702,-0.12315312734976151,0.7947811603370678,-0.989788506044703,-0.829388652743592,0.979587650686815,-0.23000158509744015,-0.9659354732184611,0.28733650519275206,0.9488800735334277,-0.4390026006051844,-0.33413944332681544,0.38492142034360133,-0.9339666557231812,0.9090739179932974,0.9535238035138462,-0.8827532214809457,0.28260616688274653,-0.9672007918473281,-0.22519614141601732,-0.8208850667750842,0.16699269596128014,-0.9904798992791918,-0.10820089520882828,-0.6340405678849094,0.9960555405817982,0.6788040759713164,0.7138501141399598,0.0001995948570279728,0.9995535544405388,-0.05952997950879024,-0.9960200403362897,0.6337318240528474,-0.7920202480821308,-0.1773532374404599,0.8268461174308436,-0.9804893416527372,-0.8587588097044462,0.9670993153906923,-0.49548201209499676,-0.9503019664170105,0.33939602535461755,0.9301564758186209,-0.3891037397754706,0.9323361475620214,0.33376317096467,0.4393612319059749,-0.949005996902141,-0.4918846673188472,-0.8556784683953905,0.22961307924023036,0.8234669667646023,-0.17146305001899156,0.9898453291694629,-0.7945388303259311,0.6305265416399211,-0.0535576801968929,-0.6754663948891321,-0.7170191587360256,0.7180264181130024,-0.9996787916856442,0.6818358368208931,0.9964140651822553,-0.11414568316726519,-0.9896387330766708,0.5903869490654414,-0.824286571209047,-0.5414598664535569,-0.22116389263111902,-0.9682432611902516,-0.8855479185809301,0.9517043085039234,-0.44713508961430876,-0.9318122734055597,0.3932780540801606,-0.930686458219413,-0.33803540568874935,0.9507511866737612,0.28160177753258103,0.48793049891269563,0.8580169589422519,-0.5388597122456141,0.9787477454073229,-0.8316925464324937,0.7911365833067994,-0.11721461674507244,0.9961478891685043,0.058086381772721844,0.6721148172702569,0.7201734519201443,-0.00887184470465318,-0.6777414667918448,0.7550906913183874,-0.9967875905559734,0.10963839221444269,0.9902797971978432,-0.5940417821060099,0.8217100667363777,0.22660486074998354,-0.8540754545105441,-0.49457237486140954,-0.2742767977038096,-0.953087070943437,0.3308490766722392,-0.9054265676590245,-0.38625569503567286,-0.9105219660003027,0.3423006859270785,-0.9493355238346518,-0.2859510871062154,-0.4839662921920816,-0.860337797294657,-0.9798773178558481,0.8285798898072676,-0.584215183885541,0.9885151094280673,0.12171790663382956,-0.9957399051256168,0.7630078102554304,-0.7162890130620932,0.0032892662746166344,0.7116830138725948,0.6810696425074964,-0.7521091858221557,0.9971406087728146,-0.10512884564394379,-0.9909004880485758,0.16394561123530488,0.9811691873760439,-0.5490641811648455,-0.9679809924601795,0.49850948382467053,0.2699121568134416,-0.4461984180752015,0.9077823136788835,-0.9350663236977332,0.3820679719362435,0.912387959304558,-0.3465589239289955,0.9479003300817342,0.29029451373762816,0.8574787730350529,-0.23300732638782362,-0.5311958069001208,-0.8311108076709883,0.5805279549259021,-0.9878194871633393,-0.6278147638080402,-0.7593873487576063,0.06714010670250767,-0.9992966630235034,0.7264375247811542,0.9997611288814856,-0.6843838064094623,0.7491122069981976,0.11067893159202345,-0.7870957955158873,0.9915007928592429,-0.15946953404631606,-0.9820351781823976,0.5528494335249812,-0.8493218152584812,-0.502436336829404,-0.9527696526654321,0.45025303648009063,0.32227490157136995,-0.39648338675303796,-0.3778723884582214,0.9256226444664503,0.43213854034069016,0.8885847844991109,-0.2946319680684322,0.9639340705722385,0.23741584499836815,-0.9780263354074732,0.833624626887137,-0.5768287826215068,0.12067871327100813,0.624277837050689,-0.9948624890470946,-0.0716649437919492,0.9991162968219097,-0.7295471755857298,-0.9998499783847106,0.046987466063459375,0.9970609487994804,-0.6433977298531504,-0.09610335679846743,0.5968447249604346,0.1549901760512831,0.9828809653368914,0.8522555290415161,-0.9702183061467385,0.5063528530874949,-0.8769742888322736,-0.454298391718242,0.9039400258931622,0.4006433282150331,0.3736690309183801,-0.34557670222825304,-0.4280437117433719,0.944971468342061,0.48091029196547225,-0.962717001953534,-0.24181947919419422,0.9770706527940942,0.18382360953349505,-0.9879818495111146,0.8021028121899022,-0.6207280668714685,-0.7652583281619882,0.6661514168921965,-0.9989153755543908,-0.7092277557879615,0.9999182577277985,-0.6909698263295635,-0.9973981881886823,0.6468633830921132,0.9913640457461147,-0.6004778850963151,0.8171103676145246,0.5519767595706826,0.20889738414658793,-0.844498283137415,-0.266551143328863,-0.9554853882176312,0.4583344005635648,0.9362973387890154,-0.4047950271430508,0.9260183382496745,-0.917873162896106,0.42394007689722973,-0.29363136741515694,-0.4769285254873833,-0.8644004095226356,0.5282366405576395,-0.9760948686652604,0.8386007628598665,0.9872705940077994,0.12967888183228404,0.6171655263006764,0.7681702322073792,-0.6627617178728296,-0.7288307616215669,0.021430743327159715,-0.9999659655060218,-0.7467964765017627,0.9977149078590316,-0.6503157282511994,-0.9919486614292704,0.6040986914526063,0.14602198632843175,-0.5557532701554416,0.8474749627946349,0.5054497968678233,0.2621767393603985,0.9568137837059165,-0.318970224386975,0.9000233505658974,-0.9413433158171708,0.915643247774146,-0.3540750282608069,-0.41982772022735526,0.2979641671985098,0.4729369470411438,0.8666721175643095,-0.2506117320558347,-0.8355465603118982,0.5739753441046576,-0.9865390271431238,-0.13417501051693184,0.9945032377141917,-0.7710663324971763,0.08523023656814205,0.7319288732243922,-0.702803401114467,-0.6902126530804633,-0.033391231155469075,-0.9980111012945763,0.09263006059435583,-0.7757756380554062,-0.6077070695375665,-0.9835177769668069,0.5595183470911425,0.20001749512608696,-0.5093583073856931,-0.25779694156523053,-0.9581224944283093,0.3146681075826979,0.9394447759833252,-0.37043062242801433,0.9225559654402681,0.3583133082403157,-0.9438243270095912,0.8967605537855776,-0.31192027955679286,0.24520332246230003,0.5205123784907537,0.8380300023360696,-0.5702552283535061,0.9857871639677931,0.13866837878600494,0.6100024274176994,-0.07966656224165754,0.9987468457942876,-0.7350119266740378,0.6995695022390634,0.6934876606913944,0.02885765458441861,0.9982867624016557,0.7792862567680279,-0.9930566583748048,0.14705759555161546,-0.8091905899138309,-0.5632719129179288,0.842624655660973,-0.9744532307226672,-0.8730899527605446,-0.46143243946693246,-0.3103595170338563,-0.940989519525968,0.3662137230428589,-0.9207962911726728,-0.3625442165517852,-0.8942761624692718,0.30661128748073196,-0.9605152769836075,0.8711619965005672,-0.5166341447292796,-0.840496203362371,0.20162631673889841,-0.133137492799659,-0.6144166188013319,0.9935124858649875,0.0841870885528688,-0.9985095691371783,0.738079858542085,-0.6963212109477983,-0.6967484010096898,0.7376780251512581,0.6529621318428784,0.08359381945380075,-0.6068753205639383,-0.1425696335256543,0.8065172958986319,0.2010431406032097,-0.8401734737708728,0.975461896125007,0.8708695190969153,-0.9606807542832376,0.47438331426059827,0.9425149038592071,0.9229594243002941,-0.9210283474984978,0.36676766615169554,0.8962967874897142,-0.3109254300802635,-0.46090416208997764,0.25398772918667933,0.8374583233126557,-0.19615516863973548,-0.5627798776231673,0.13763150641329025,0.6108316647072628,-0.9929864450734471,0.7796592166441716,0.9982517498965019,0.7003172041657759,-0.9999999745136013,0.6999948069513351,0.998224959510352,-0.6563907586907098,-0.07907307270360645,0.6104740884436943,0.1380787383794694,-0.5624065716462605,-0.19659791956114733,0.8377050067847364,0.25442443914569585,-0.8686311688199404,-0.3113545604430153,0.8964969350276899,-0.9440208976009344,0.4254269003195328,0.9227855325041738,-0.3709835701499768,-0.8982989727753489,0.31523317593425765,0.8706474904340606,-0.2583721396751323,-0.5088458706879248,0.2006007964335088,0.5590247964362136,-0.983409953346423,-0.6072341438227437,0.08314384826666447,0.6533040597604025,-0.9979733933764374,-0.6970722288919156,0.9999907119367315,-0.70322681172722,-0.015253735838114912,0.6598058814496172,0.9934610337050102,-0.6140602968895049,-0.9849370425346353,0.5661512307069692,0.19214865386161095,-0.8352193054869435,0.977419001336715,0.4645248617311068,-0.9631599572566556,-0.8944781438519653,-0.36296500267254894,-0.42952735640920303,0.4176101419616622,-0.9411422419041342,0.9002826771347242,-0.3195344364183966,-0.4528347564486706,0.2627512346098492,0.8423814131929205,-0.20504229721763526,-0.5552582142942849,0.1466109466616051,-0.8206562850348298,-0.08766305059635504,-0.7335905918995203,0.997674505303682,0.6938129125792141,-0.9999608763043786,0.7064443488445136,0.9987241454370898,-0.663207429859438,-0.9939686700011181,0.6176338721214196,0.12908851835404409,-0.5698842421988134,-0.973980842492553,0.83271642101644,0.24564105571669048,-0.46853677346635414,0.9643698484019633,0.4152960060828617,-0.9469745897766966,-0.9176367143242806,0.9262429126722318,-0.3793923945593438,0.46677742807615075,-0.958251700033482,0.8750739713530847,-0.2671249238986303,-0.844816987584384,0.9687032756365441,0.8115835110572222,0.9937484237482274,-0.6000016979901094,0.09218044941249073,-0.7881077416794123,-0.03293993644506209,-0.6905393222823897,0.9999104682303585,0.7322364715195964,-0.998942920365126,0.6665953339392783,0.9944558571346965,0.807753416511987,-0.12458937843281692,0.5736055293216273,0.18323835471480585,-0.5239953682449969,-0.9600972880416186,0.861809080647587,0.2983951695109832,-0.8903853964539893,0.9484222274436939,0.36481895484252047,0.4093504175093221,-0.938037275845899,0.9041944802107938,-0.32811714744878484,-0.8772602298181374,-0.9724810785796378,0.8472351813476564,-0.21391255233937026,-0.8142251202424208,0.9808506578034295,0.7783463488605508,-0.09669595177751185,-0.6429418427091268,0.037472898618558126,0.6872515253498226,0.021882180544862666,-0.7291398561255492,0.9991411437941535,-0.6699695239889519,-0.9949225850827246,0.6247428291248025,0.9871986756110136,0.8388466538994817,-0.17877750458131844,0.5278531827201746,0.23683745785562824,-0.4765315966294106,-0.9433281069885399,0.888311524432839,0.3502524397772116,-0.9139937863374938,0.9296240699370304,0.9364558290393001,0.45873567624111355,-0.95561851337744,0.8794284401921774,0.9714143246215002,-0.8496359447326415,-0.983787610342052,0.5438902382203693,-0.16005725452747785,-0.7811860533339446,0.9900500379437059,0.7427698227703147,-0.04200508985287124,-0.6839495894221697,0.9997479393287682,0.7260282399574589,0.07663852940578668,-0.7655489189670445,-0.13565976381371378,-0.6282780646419455,-0.9879119538018362,0.7901310343178484,0.9769744127348194,0.8674186903110318,-0.23242830484679708,0.48051434357775147,0.28972473264604826,-0.42763558239724414,-0.34600039076223016,0.37325015855136456,0.4010570065619535,-0.9348551162960299,0.9080318748056219,0.9542724161419087,0.5067421789997325,0.2802126586466403,0.8520192283478419,0.9829640582108344,-0.8194580308484852,-0.9921373129011948,0.7840096862740473,-0.1057208956009636,-0.6359674425648962,0.04653641690611368,0.7049608600441747,0.012812020740747634,-0.7229016870313723,0.9994759202656796,0.7626228357014927,-0.9957946254348019,-0.7996570813130075,0.988604907436445,-0.5846982801017988,-0.9779320973705654,0.5355361535651395,0.9638137981054061,-0.4844872047860222,-0.28538052872016306,0.8841089970767385,0.34174122339589674,-0.37745428527972963,-0.396897881822769,0.3218474171848516,-0.9099225699985922,-0.9529066864246665,0.8837105386109374,0.9692208836237145,0.5532256395308988,0.22718470090732099,0.8220492246113908,-0.16900514897320087,-0.786817189589562,0.11023015138699967,0.7488130090007478,-0.05106678655417669,-0.6773035725972624,-0.00827649880890339,0.7197602616706332,0.06759062408271899,-0.759681062808303,0.99619991989815,0.7969253254584427,-0.9892775222585342,-0.8313618291559083,0.9788696627681448,-0.5393611518712732,-0.2235957442236286,0.4884500985195695,0.9477563866930336,-0.4358181183843382,-0.9271605896380922,0.9083884618124527,0.3927305916055993,-0.931596025122592,-0.4466024738923539,0.2694773452358781,-0.8858243385589909,-0.9680942417102687,0.8567331605019876,0.9812563030217751,-0.8246235061529069,-0.9909611631606468,0.7896085055210308,-0.11473713938095197,0.6887710108271541,0.055596105592648444,0.7113657319541566,-0.9993498923442988,-0.7166040285045607,-0.06306453903949502,0.7567236608092948,0.12216607998813578,-0.7941771742626604,0.9899297844302332,-0.5920334283670834,-0.9797870896387935,-0.8605678720861921,0.9661923700656526,-0.49240294324880346,-0.2766745967516112,0.4398959791271215,0.3332018842534204,-0.3858391560234464,-0.9052347939869774,0.9299377137425107,0.4425395858503627,-0.9501164423383519,-0.4949647770134135,0.9669476829552865,-0.8590637120600443,-0.980372135098002,0.8271808225117047,0.9903425012036222,-0.7923835766420229,-0.996823653282359,0.6254078940263066,-0.060124280838731586,-0.7145462481225591,0.0007949625642231368,0.6717804050395485,-0.9998238605235208,-0.7537506905478283,0.9969490157085223,0.7914126842640529,0.17637435884318037,-0.8262863413839672,0.9806843591080623,-0.5469777807892953,-0.9673518516066071,0.49634565765087485,0.9506111316478909,0.913000291749368,-0.3289218881592072,0.39001972753478475,0.384371857842287,-0.33470053229631813,-0.4384675933323553,0.9486919853736592,0.4910185023859841,-0.965781230947204,-0.5418394355535914,0.9794677977365646,0.5907513385053347,0.18240068359483372,0.7951423458603156,0.04444476306157124,-0.7577620935569956,-0.9996901336377843,0.6672302125641353,-0.005330715376093855,-0.7102473987955759,-0.054008569769069086,0.6301760041917814,0.11315756977653359,-0.7886319123371545,0.9911731975648544,0.5337667226515099,-0.981561452716205,-0.8559120582576958,0.9684914315793999,-0.5002781606113481,-0.9520091829719205,0.44802446663871365,0.9321727778065734,-0.3941922750741019,-0.3801805862624352,0.3389712496325174,0.8827286227077719,-0.28255594722363064,-0.4870621259138353,0.9645949096837257,-0.8636717464040526,-0.978543309542618,-0.5870855650803048,0.9890440667552348,0.6340810518925606,0.12824356962127728,0.7607140239981498,0.9995669437221156,-0.7208631137198165,-0.9995519888583851,0.7070471330291741,0.04947887185255583,-0.7477582902111531,-0.1086497762968304,0.7858349156914716,0.16743788153475778,-0.8211428563912085,0.9824183524185588,0.48662197733575946,-0.969611086539171,-0.8829652831192424,0.9533876483762932,-0.4520749261781449,-0.9338051969914959,0.39835671279854856,0.9109327260551198,-0.34323499322961826,-0.43029663015030195,0.9457845481291214,0.8556513739256822,-0.2295621242996773,-0.5341927657784628,0.1714114717044465,-0.8347504561204191,-0.988364320976884,0.8006107518979969,0.995647707994127,0.6755049988808531,0.07370101235914751,0.7239993331902379,0.9996774634760007,-0.6817975390975426,-0.044948155995012014,0.6371936088408208,0.10413974753848981,-0.7830217518703059,-0.9793660875106278,0.818545746991442,0.22121494928721153,0.5583181314237584,0.9707107934509832,0.4380146621945567,-0.9547464995015004,-0.9073647059739777,0.9354184047718536,-0.40251295503212053,-0.3717746648448846,-0.950767412577017,0.8869548145681905,-0.2912460992354216,-0.4791193932235675,0.9621627574247748,0.8260024166328878,-0.9766339571502696,-0.5797178591273326,0.11716262407238746,-0.8033202762145197,-0.9952147476456843,-0.6721535812674668,0.9992588738366849,-0.727120657643862,0.0189369425435323,0.6851086215125555,0.9967833961759479,-0.6406827834801744,-0.09962757628744554,0.5939996664234307,-0.9928853505330292,-0.815931797448195,-0.9668190792556809,0.8487963928372814,0.27432714302074446,-0.8786704750692971,0.9560857083915627,0.9054487905914181,-0.937012367958725,0.4066609162674215,0.9146377083421996,-0.35174120847560875,-0.4220902567556962,-0.9663221631241069,0.4751332004132466,-0.2383818486474793,-0.5265021359114934,0.9756491322334451,0.7938708624443835,-0.9869438422344683,-0.6235005777222354,0.9947613124988495,-0.7694756718664734,0.08274474053993083,-0.711719791202693,0.9998667107200977,-0.6884056090189717,-0.9971366511352154,0.7386544671708709,0.9908934401046142,-0.7773471545365985,-0.15400756027480558,0.549020424473956,-0.984867713878236,-0.8463895139448775,-0.26996256674895375,0.8764959332050796,-0.9574052474946056,-0.9035142471876345,0.9385870537591126,0.9273492638958175,0.43627158742390226,0.35598350512403465,0.8911080166436389,-0.9412775355933652,-0.4711372325704406,-0.9789725778555625,0.522640533579192,-0.18480112795542009,-0.5723024467059067,0.9862031384942627,0.619948001126175,-0.06708787133833301,-0.6654093301306514,0.9988685723774096,-0.7333183649453681,0.02800596819968425,-0.7491468871248422,0.031350832984747286,-0.6476215184717753,-0.9914939802887557,0.774485837768947,0.9820252978574935,-0.5528058076612161,-0.20792466584515978,0.84396522207231,-0.9738900017080155,-0.8743033589739119,-0.322324461277379,0.9015611155624651,-0.940142429776617,-0.9256424562275475,0.35910863528498904,0.9464625366334544,0.48492795110702486,0.3042361654587104,0.8649000494929558,-0.24718195594197956,-0.5187681788343265,0.18925686514244305,0.5685770411154438,-0.13066497704021943,-0.6163826701870275,0.9937930555455772,0.662016635358364,-0.012308163967979189,0.7363946202862895,0.9999736763698951,0.7461346741642546,-0.026816977659082173,-0.7843223797841484,0.08607913608713791,-0.6048909648889055,-0.14503801708471661,0.8079894474574918,0.9702056231367662,-0.5063077066716034,-0.2612168420937901,0.8720927974841641,0.31802746025553513,0.47218605425233856,-0.3737175914403918,0.3455275738167751,-0.9200539609095644,-0.9449885946075038,0.4097157805685323,0.962731162784063,-0.8671678518913135,0.2515744268222435,0.8360925764150103,-0.19370870870131462,-0.5648399380493209,0.13516050836568871,0.7652246260066867,-0.9932782536593286,-0.6586103207546048,0.998396071463197,0.702095541218391,0.04250853628404603,0.6982113252475284,0.9980733030238674,-0.6545069590287568,-0.0815593235775238,-0.8171405472515683,0.9836971179066928,-0.5603423773615375,-0.1990429365514058,0.8390645992461178,0.2568358736383668,-0.45828786928564863,-0.3137239163763358,0.8975992487585966,0.36950663455410593,0.42316824707768025,-0.4239874922838536,0.943495211098192,-0.8972002179207355,-0.9614945164164035,0.8694178138316376,0.9761062460732917,-0.8385722423761421,0.1981565670431596,0.5610912143918806,-0.13965325900069303,-0.6092140389420911,0.08065791905046428,0.7287949145665626,-0.9981290080973731,-0.6988584808208674,0.9999983516229154,0.7400642592920122,0.09719747473042166,0.6579295166527478,0.9931731640187048,-0.6120897321630839,-0.13605653834446693,0.564093408822892,0.9723635563674681,-0.5141096491845053,-0.2524496212351875,0.46231455801474375,0.30941391817765035,-0.40889062183560726,0.9446923811307547,0.9204079148163187,0.4198752358017798,0.3728785838461832,-0.4729830747827585,0.9602380889849834,-0.8716498890249067,0.2603437512137257,0.841034656183766,0.9865475869332153,-0.8074562566443519,-0.9945087180578045,0.6056108861183204,-0.08517807354592659,0.7837610212094697,0.02591290780593684,0.6901747688661037,-0.9999798294515395,-0.7370061822684993,0.9985950802812544,0.7758086724535079,-0.9936920412697687,-0.8118778027162548,0.9852879869988279,-0.5678328350514592,-0.1901448275042528,0.5179947951579259,0.9581075012641451,-0.865353646092367,-0.30509755433013447,0.4130256772185875,0.36106200171768094,-0.3582644305374451,-0.41575434112295184,0.940450242923815,-0.901169463464916,-0.9589619063385939,-0.5205570799478275,0.9740949170844461,-0.8434797671780354,0.2070399621320957,0.8101237213955594,-0.1486300485365499,-0.7739134155477334,-0.9987494645751351,0.6483103601363633,-0.030446880582332678,-0.6923412935549321,-0.028909986145931904,0.7339329426350761,-0.9988251549737582,-0.7729387700271458,0.9941904750494543,0.8092213488511466,-0.9860530237640098,-0.8426528468845791,0.18568985934970733,-0.5218692842967043,-0.95939672796693,0.47033931889236946,0.9409717999751723,-0.891518053833069,-0.3568284995010554,0.9168234818175156,0.411624893027552,-0.3065614552672443,-0.46497103338525037,0.9576659947324555,-0.8760601958550794,-0.9730591816995848,0.845907525055079,0.9850240479174306,-0.8127745192716955,0.15311390275569792,0.7767779140266212,-0.09421303241012267,-0.738044533988886,0.03498022696754705,0.689061300766221,-0.999881067418314,-0.7308446036182592,-0.08364598950230642,0.7700529657408854,0.14262145193305362,0.622793254518285,0.9867977742172039,-0.5752765643220198,-0.9754503682270443,-0.8708952503490611,0.2392600632660339,-0.47433722594551586,-0.2964460850242173,0.4212702112505608,0.3525876561637269,-0.36671896061862724,-0.40748697647173404,0.9373278826885585,0.868381398345569,-0.956350380827677,-0.5127902289564584,-0.27345734210094885,-0.8483178798680354,-0.9842318727552699,0.8154085957372419,0.992992633364207,-0.7796264316619547,0.09872765090042,0.6413769127532372,0.9999999613232521,-0.6999574179163366,-0.019841156763768592,0.7277412287552085,-0.999223652819567,-0.76715131896509,0.9951259715978857,0.8038585511843047,0.19664925097754543,0.5789807142223357,0.9764391969642147,0.8686571066093988,-0.9619159415386688,0.4783253743419562,0.29211115755462735,-0.42537952028272236,-0.3483395589536111,0.3709349522057467,0.40334067658587563,-0.3151834913752796,0.9069841822277684,0.9550150916907076,0.8399000950909992,-0.9709276756907443,-0.5590682045446221,0.9834194487481103,-0.8180258966006939,0.16207206886113887,0.7824589098504782,0.9979767233913432,-0.7441351327975215,0.04404466751662521,0.6824588542764254,0.998481941250653,-0.7246228818924206,-0.07460290677828493,0.614018975646134,-0.9955630151204304,-0.8011523177127298,0.9882263553175611,0.8352480943697668,-0.9774079371770266,0.5334280147030471,0.9631458765792207,0.8945015504445846,-0.94549042218239,0.42948007787712794,0.9245037783845662,-0.9113054616574716,-0.3991860786728267,-0.9595534754626215,0.45288143383367757,-0.2627007203547085,0.8825403694815482,0.9698319489187638,0.5553017547088092,-0.982586792610151,-0.603665869081457,0.9918797474951518,-0.7852752903189194,0.10775070159752725,-0.6938506142096965,-0.04857557519551858,-0.7064072937808182,-0.010770694601961988,0.7214896271844142,0.9939629273336585,-0.7613007370547753,-0.1291404335447221,0.7984296019369835,-0.9889101565741727,-0.8327454079398934,-0.24569180472124394,0.8641272522531099,-0.9643559965821722,0.48627206717053273,0.28342336289800807,-0.433571799671995,-0.9262231779839473,0.3793439547916545,0.9022252827996439,-0.9324997960294188,-0.44883282209627373,0.2670744725507059,0.5010610303643677,-0.20942838748816622,0.8554440318304436,0.9817339214718325,-0.8232099564820476,-0.9912926894517726,0.7880755151251886,0.9973588956638615,-0.7501644948188488,0.05310548351712624,-0.7322721258272074,0.006235084484991799,-0.66655630776196,-0.06555368478985622,0.7583519222857202,0.1246413237493228,-0.7956904598721689,-0.18328982144743092,0.8302255892334136,-0.9792850727227462,0.5410790953575593,-0.2984451374119718,0.8904092268949237,-0.9484056295962265,-0.9158456938130792,0.3355526187934405,-0.3835367927899593,-0.390852330828385,0.3280676920339378,0.8772350981915347,-0.9508914496194991,-0.49713057313375286,0.21386141047559526,0.5477346596805618,-0.9808608528794827,-0.5964089457237622,0.9906852372994716,-0.7908595266595705,-0.03742058193329433,0.7531560567826617,0.9998404253650891,-0.6724500531825138,-0.001699346092091123,-0.7684927522296311,0.06102700426707667,-0.6247019491292403,-0.12013964967723736,0.792934947871331,-0.9902167101604925,-0.5278087163847287,-0.23688832144402988,0.859526286650461,-0.9667166922990569,0.4941787434243787,-0.35030147639328796,-0.44172839932662106,-0.9296047759476544,-0.9364741925721499,0.3866733523492415,-0.3323490444243669,-0.8794035171376101,0.2758054033065318,0.4931898883132801,-0.9664251452745345,-0.5439341701678391,0.1600055758576111,0.5927620415543589,-0.9900574035355116,-0.6395014701774087,-0.12126842002280207,-0.7561321238812139,0.017399624590681458,0.7159729453915451,0.9993168782212211,-0.6732912225892846,-0.056499068220690986,0.6282373334151066,0.11563550394251644,-0.5809700135204459,-0.17436452806494918,0.8251347627054408,-0.981081620389908,-0.4804684296709173,0.9678672194458151,0.8862436292878485,0.3460495100515645,0.44579310937864425,-0.40110496451079963,-0.3918987108975954,-0.9080099426635115,0.3366235593159582,0.43663191731465373,-0.2801624022427692,-0.8519918196236247,0.22271416586870935,0.5401224901633165,-0.16448125410144937,0.8308588944047174,0.105668835448165,0.7457642103009662,-0.996278280770861,-0.6806719368589532,-0.0666882805033302,-0.7191321233165868,-0.9994742241613354,0.6766379368923221,0.0519699698050439,-0.6317597928194089,-0.11112897921006083,0.5846558075571623,0.9779211582008914,-0.8225638596187773,-0.2280653440196956,-0.5524720328584949,-0.9689978344216218,-0.431684067966563,0.9526320298851122,0.9102973166639338,-0.9329098743517569,0.39606761897512377,0.9099008537031006,0.9529225620038209,-0.8836860342343841,0.284513637328826,0.48527816040222954,-0.9640544913919331,-0.8220194125959919,0.97812064407221,0.5854317233761901,-0.11017811686830241,0.7991137105446957,0.05101450138817454,0.6773420882602826,-0.9995047873877961,0.7222765063591401,-0.011907705591874032,-0.6799707305562461,-0.9961953587588722,0.6352692548737213,0.106620168193715,-0.5883295733257922,0.9920237197653101,0.53931706566247,0.9649992823209291,-0.8524923344947793,-0.28108069670740915,0.8820051004210625,-0.9540016707565598,-0.908410350952993,0.9345336509771105,0.9316150540633409,-0.9117730451280732,0.3451517249825109,0.8858000442798025,0.9681073594342555,-0.48130728008158086,0.23154859354229407,0.8245938896465841,-0.9771669694319671,-0.7895763798161453,0.9880517438344435,0.6289814084935166,-0.9954553750973658,0.7649667453131322,-0.0037931596357959124,0.7166405429870114,-0.999727225938525,0.683289535014671,0.9965803947622424,-0.7433750465659326,-0.989922371964783,-0.8288619015774736,0.16094991364756692,-0.5431310960850049,0.9836250180292431,0.4923573758794229,0.27672490609208283,-0.8798585955314316,-0.33325124549256957,0.9065046962919168,-0.9361382012112358,-0.9299569637089948,-0.4425865331055531,-0.3494052003054172,-0.8878958305424994,0.29319845799469135,0.8590369128149868,0.9803824555407613,-0.5286210925267134,0.17788761738563988,0.5780532285210337,-0.9873425169787577,-0.754760230650698,0.06007202206430885,0.6706406544780492,-0.9991782096077961,0.7285206293418203,0.9998228765705325,0.7537850941033709,-0.9969449278714257,0.6422488983971472,0.9905545032136164,-0.7789138346926557,-0.9806741175950234,0.5469339525375808,0.2147959150494159,-0.49630020767210425,-0.27236342234703187,0.4439178782068049,0.3289713280194442,-0.9045803918862081,0.9377234920433253,0.9282797411207361,-0.9154611154518624,-0.948708538309226,-0.49106410933667194,-0.2975318648995429,-0.8613499949114765,0.24036396648865344,0.8296918974112016,0.9897109568289912,-0.5743461044345992,0.1236919899521686,0.6219032128473524,-0.9945505508496857,-0.6672692071647359,0.005278362708022162,0.7102842521140807,-0.9998979575999752,-0.7507967953808878,0.9972889505867926,0.7886641015639606,-0.0930809452738741,0.599277946456899,0.981551444183164,-0.8121115533151081,-0.9684783918002179,0.5002328289582411,0.2679963352021366,-0.8755113256416578,-0.3246846425380735,0.39414416028955523,0.3802290080481465,-0.3389219952559726,0.9172769184750986,0.9472647887809627,-0.4161185421375392,-0.964608715837593,-0.5380657646638263,-0.24476428067635236,-0.8322153232426562,0.1868070475114252,0.7978531961689354,-0.12819164833857116,-0.7606800410316072,0.06912459925978194,0.6638840319574959,-0.9987694068920177,-0.7070841546301563,-0.04953116106537699,-0.6931613318185652,-0.9976124558306788,-0.7858672918615698,0.9917576163594485,0.8211727345427398,-0.9824085770714235,0.554505830815937,0.2059273821556851,-0.504155158831046,-0.9533718495227607,0.452028227370488,0.3203912772394948,-0.9006759925805206,-0.376030004705678,0.9248680376590386,0.4303438883270768,-0.28685382167617046,0.8940734173429123,0.96340277864004,-0.8659229495839392,-0.977609707412879,0.8347216277030675,-0.19126104358925766,-0.8005793814365568,0.13268866940658444,0.7636165021022467,-0.07364880123477185,-0.7239632187844094,0.9985341814319116,0.7038695101295737,0.04500045642554394,-0.7447739207499262,-0.1041918161378793,-0.6526190873013971,-0.992328573504504,0.6065153415505786,0.9832454986257958,0.8512132865079941,-0.9706982141615094,0.5080671165954594,0.2592457102068877,-0.4560694940867137,-0.316091320452171,0.4024650294258166,0.9127732234015479,-0.9231336269754162,-0.4262451874651139,0.9443188548917927,0.4791653457542877,-0.9621770211195771,0.8681827280793885,0.9766452070583657,-0.8372107592296159,-0.9876724378209251,0.8032890961871662,0.9952198618299396,-0.6111901437894193,0.07817148801481447,0.727084715528009,-0.01888459850096903,-0.6850704842113267,0.9999997697424097,0.7417394687515324,-0.9981978877040447,-0.7802252268041718,-0.15853931682476044,0.8159620643548791,-0.9840621916280873,0.5620320773882678,-0.2743774875857818,-0.5119686217698098,-0.9560703629675152,0.8688554440922663,0.3117848606401733,-0.40661308673019503,-0.36760887609301796,0.35169220011377317,0.42213771735581057,-0.9428167311383102,0.8980999091874396,0.23833100418597536,0.5265466446832336,-0.9756606139411974,0.8396826666127847,-0.20015713961088963,-0.8059822846731338,0.1416744295703116,0.7694422339424505,0.9990762513358061,-0.6536468368161924,0.023419357802592283,0.6883676347931972,0.03593636295977111,-0.7386897567641584,0.9984598022892901,0.7773800875247601,-0.9934092302069248,-0.8133315218911198,0.9848586392762716,0.8464173943420413,-0.19259303696738972,0.5158595940874691,-0.32666431280547914,-0.46412379607976095,-0.9385689883220295,0.41075277868328214,0.3633869240727817,-0.9196078661141837,-0.41802156250316214,0.2998623400392691,0.4711834107648352,-0.9596661463884182,0.8726486549347782,0.18474967603585804,-0.8421372989974139,-0.9862118037060441,-0.6199890790036474,-0.14616298379976606,-0.7723313848577971,0.08721194383774349,0.7332827696242442,-0.027953635291992983,-0.6941389573728445,-0.031403160611661124,0.6475816262697587,0.09064931565282422,-0.7745189550131302,-0.14957609142538197,-0.6172776647517527,-0.9856348251848347,-0.5023458030804213,0.9738781150822046,0.8743287690654479,-0.24607999699184735,0.46813666565344164,0.9401245874025487,-0.41488402011817466,-0.9182466915946013,0.36016963872812335,0.4138968075898373,-0.9397543245307267,-0.8648737698238009,0.958381080834567,0.5188129358318312,-0.9736312308569607,0.844574605883746,0.1306130723042483,-0.8113188615617595,-0.9937988782176046,0.7752046464091302,-0.09172952688910313,-0.7363591994627846,-0.9999732951338979,0.6949193825439625,0.026869312198584842,-0.7325448041050328,0.99892200181485,0.6048492746089121,0.14508981671001495,-0.8080202928168237,-0.20353715216245002,-0.5732345340001767,-0.9748980390509775,-0.8721184149316867,0.959970545232317,0.899612299312612,-0.29882734969273494,0.4190067260418239,0.9200334480211038,-0.36439728681156797,-0.409763537475436,0.3085039885901491,0.4631627008848602,-0.9570762982704331,-0.836063854800101,0.9725864826408909,0.5648831393302528,-0.9846700116941596,0.8139621401737054,0.07608390360997964,-0.7780619594841316,-0.9983990340951008,0.7394204800019515,-0.03702037170672314,-0.6875804075237902,-0.9980700533469877,0.6544673760273056,0.0816115024544248,-0.6084550616842634,0.9948769076998761,0.5602990143060576,-0.9871263483256197,-0.8390930800131295,-0.2568864704978676,-0.5274685144943235,-0.9612311418222309,-0.8976223255594188,0.9431777297129537,-0.4231208116367843,-0.9218012763726288,0.36861743805978203,0.8971770961705271,0.9615089030768943,-0.4591380115017579,0.25591111229766783,-0.8792127835582332,-0.9715217251633043,-0.8047411026602547,0.9838687208656163,0.6092555546625615,-0.9927493112210066,0.7809032652985949,0.9981322077808857,0.6988959261577109,-0.9999984453103381,0.7014139435976485,0.01780005029283127,-0.7263395684564532,-0.9931670556680299,0.7658401883506682,0.13610840473220598,-0.564050179268684,0.9878416548723682,0.5140647436836501,0.25250027856914065,-0.8676439255858942,0.9624719627668546,-0.4801171585895695,-0.9446752101297898,-0.9204283816118126,0.9235501402792077,-0.3728300056505534,-0.8991711819000853,0.9350157923793139,0.871624227906676,0.9751222185801145,-0.5071325203135674,0.20254908070954275,0.557374415034125,-0.9830471886632874,-0.6056525460822164,0.9921938861048126,0.6517968180294016,-0.9978448466466519,0.7454973415732128,0.9999801606002238,0.7370415661918028,-0.013264823384315366,0.6612992679870688,0.9936861688226901,-0.7629156748101336,-0.9852790383333506,0.7999289109243206,0.19019622551547335,-0.8341238057342474,0.9778373881818793,0.8653798824286354,0.3051474111640285,-0.8935870183568916,0.9461532555106007,0.9186458330176042,-0.3421667657705833,-0.9404680381998715,-0.46902811661592375,-0.3214186380339722,-0.8738385776770299,0.9530439189773616,0.5032180747305381,-0.20698874281184051,-0.5536028137050684,0.1485782764243011,0.6020370772627058,-0.9916180483391559,-0.6483502198827527,0.030394551407742148,-0.7485127975845357,-0.9999413030517016,0.7078507835001806,0.008729323575317286,0.7729719861885301,-0.06804242269292346,0.6191970200924611,0.12711579204492354,-0.7971987950322567,-0.9744297092243726,0.5218246247940024,0.2437124008052987,-0.8630980355976798,0.9648941760167451,-0.48805490297153864,0.3568774059873614,-0.9168443848961638,0.926990831229194,0.9389167393205119,-0.3931470082937861,-0.9576810650043677,0.876034949750864,-0.26904122855487544,-0.49929327631797965,0.9682076182721903,0.5498198229688243,-0.15306216646394097,-0.5984092225859612,0.9910218097708887,0.6448902830671672,0.11428727710530345,-0.6890992404943854,-0.02442816001496476,-0.7110473923005051,-0.9990323794180735,0.6680767399351487,0.0635164722959909,-0.6227522930702298,-0.12261551665874743,0.5752337405967831,0.1812825571641321,-0.8290858892695186,-0.23931089576535977,0.47429113633033254,-0.9660755184892214,-0.8894781755883457,-0.35263664688618224,-0.4394892606245553,0.40753478561924633,0.385421340607091,0.9050422836706399,-0.32999548881726315,-0.4429456252881843,-0.9720157273014675,0.8482901582439012,-0.21585520047445425,-0.546025520653794,0.15754290751788985,-0.826926270041241,-0.09867555313350697,-0.7410623058246437,0.9968596155549535,0.6858052347181575,0.0596722527841702,-0.7277771344351532,0.999221588904347,-0.6714448939362584,-0.9951208075670624,0.626294754011522,0.11811271867331392,-0.5789380275391978,-0.9764278981428882,0.8265413195549431,0.23490446732335568,-0.8584811190599819,-0.29216122713243525,0.4253321390799982,-0.9504704793579154,-0.913184938706195,0.930355237727786,-0.38960270849310435,0.45696729644530343,-0.9550306161611589,0.8803735804337454,-0.2777671142099651,-0.491412944198987,0.22028181362295055,0.8179957827755474,-0.1620204074027572,-0.5911166544610469,0.10318816444934886,-0.7948676511352619,-0.04399236485733577,-0.6824971197017377,0.9997013034860907,0.7246589600186086,-0.9993902411584953,-0.7642676531112307,0.9955580874473204,-0.6298243300364152,-0.11360749072579628,0.582630403846824,0.17235397060653168,-0.5333837310820626,-0.9631317932619194,0.8561461443382018,0.2878203588443499,-0.885296135380984,-0.3441334514372065,0.3750947820732482,-0.9320087475414517,-0.9341470729362955,0.9088633203329075,-0.33854518342599554,-0.8825157497830737,-0.9698447100129856,0.8530588646987772,-0.22470389485938058,-0.8205964487472841,0.16649457400183393,0.7852428748015621,-0.9891108140130865,-0.6344311537914307,0.048523283526998445,-0.7604200126290104,0.01082304495503256,-0.7215258770146012,0.9995383327107938,-0.6781396915247291,-0.9959748854655721],"x":[1.6470993291652855e6,4.5286443388456706e14,9.057288661220349e14,1.3585932983595028e15,1.8114577305969702e15,2.264322162834438e15,2.717186595071906e15,3.1700510273093735e15,3.6229154595468415e15,4.075779891784309e15,4.528644324021777e15,4.981508756259244e15,5.434373188496713e15,5.887237620734181e15,6.340102052971648e15,6.792966485209115e15,7.245830917446583e15,7.698695349684051e15,8.151559781921519e15,8.604424214158986e15,9.057288646396454e15,9.510153078633922e15,9.963017510871388e15,1.0415881943108856e16,1.0868746375346326e16,1.1321610807583794e16,1.1774475239821262e16,1.2227339672058728e16,1.2680204104296196e16,1.3133068536533664e16,1.3585932968771132e16,1.40387974010086e16,1.4491661833246068e16,1.4944526265483536e16,1.5397390697721004e16,1.585025512995847e16,1.6303119562195938e16,1.6755983994433406e16,1.7208848426670872e16,1.766171285890834e16,1.811457729114581e16,1.8567441723383276e16,1.9020306155620744e16,1.9473170587858212e16,1.992603502009568e16,2.0378899452333148e16,2.0831763884570616e16,2.1284628316808084e16,2.173749274904555e16,2.2190357181283016e16,2.264322161352049e16,2.309608604575795e16,2.3548950477995424e16,2.400181491023289e16,2.445467934247036e16,2.4907543774707828e16,2.5360408206945296e16,2.581327263918276e16,2.626613707142023e16,2.6719001503657696e16,2.717186593589516e16,2.762473036813263e16,2.8077594800370096e16,2.853045923260757e16,2.8983323664845036e16,2.9436188097082504e16,2.9889052529319972e16,3.034191696155744e16,3.0794781393794908e16,3.1247645826032376e16,3.170051025826984e16,3.215337469050731e16,3.2606239122744776e16,3.3059103554982244e16,3.351196798721971e16,3.3964832419457184e16,3.441769685169465e16,3.4870561283932116e16,3.5323425716169584e16,3.5776290148407052e16,3.622915458064452e16,3.668201901288198e16,3.713488344511946e16,3.758774787735693e16,3.804061230959439e16,3.849347674183186e16,3.894634117406933e16,3.939920560630679e16,3.985207003854426e16,4.030493447078173e16,4.07577989030192e16,4.121066333525667e16,4.166352776749413e16,4.21163921997316e16,4.256925663196907e16,4.3022121064206536e16,4.3474985496444e16,4.392784992868147e16,4.4380714360918936e16,4.483357879315641e16,4.528644322539387e16,4.573930765763134e16,4.619217208986882e16,4.664503652210627e16,4.709790095434375e16,4.755076538658122e16,4.800362981881869e16,4.845649425105614e16,4.890935868329362e16,4.936222311553108e16,4.981508754776855e16,5.026795198000602e16,5.072081641224349e16,5.117368084448096e16,5.162654527671842e16,5.2079409708955896e16,5.253227414119336e16,5.298513857343083e16,5.343800300566829e16,5.389086743790576e16,5.4343731870143224e16,5.47965963023807e16,5.524946073461816e16,5.570232516685563e16,5.61551895990931e16,5.660805403133056e16,5.706091846356804e16,5.75137828958055e16,5.796664732804298e16,5.841951176028043e16,5.88723761925179e16,5.932524062475538e16,5.977810505699285e16,6.02309694892303e16,6.068383392146778e16,6.113669835370525e16,6.158956278594272e16,6.2042427218180184e16,6.249529165041765e16,6.294815608265512e16,6.340102051489258e16,6.385388494713005e16,6.430674937936752e16,6.475961381160499e16,6.5212478243842456e16,6.566534267607992e16,6.611820710831739e16,6.657107154055486e16,6.702393597279233e16,6.747680040502979e16,6.792966483726726e16,6.838252926950473e16,6.883539370174219e16,6.928825813397966e16,6.974112256621714e16,7.019398699845461e16,7.064685143069206e16,7.109971586292954e16,7.155258029516701e16,7.200544472740447e16,7.245830915964194e16,7.291117359187941e16,7.336403802411688e16,7.381690245635434e16,7.42697668885918e16,7.472263132082926e16,7.517549575306675e16,7.562836018530422e16,7.60812246175417e16,7.653408904977915e16,7.69869534820166e16,7.743981791425408e16,7.789268234649155e16,7.834554677872902e16,7.879841121096648e16,7.925127564320395e16,7.97041400754414e16,8.01570045076789e16,8.060986893991637e16,8.106273337215382e16,8.15155978043913e16,8.196846223662877e16,8.242132666886624e16,8.28741911011037e16,8.332705553334115e16,8.377991996557862e16,8.42327843978161e16,8.468564883005358e16,8.513851326229104e16,8.559137769452851e16,8.604424212676598e16,8.649710655900344e16,8.69499709912409e16,8.740283542347837e16,8.785569985571584e16,8.830856428795331e16,8.876142872019077e16,8.921429315242824e16,8.966715758466573e16,9.012002201690318e16,9.057288644914066e16,9.102575088137811e16,9.147861531361558e16,9.193147974585306e16,9.238434417809053e16,9.283720861032798e16,9.329007304256544e16,9.374293747480291e16,9.41958019070404e16,9.464866633927787e16,9.510153077151533e16,9.55543952037528e16,9.600725963599027e16,9.646012406822774e16,9.691298850046518e16,9.736585293270266e16,9.781871736494013e16,9.82715817971776e16,9.872444622941506e16,9.917731066165254e16,9.963017509389002e16,1.0008303952612747e17,1.0053590395836494e17,1.009887683906024e17,1.0144163282283987e17,1.0189449725507734e17,1.0234736168731482e17,1.0280022611955227e17,1.0325309055178974e17,1.037059549840272e17,1.0415881941626469e17,1.0461168384850216e17,1.0506454828073962e17,1.0551741271297709e17,1.0597027714521456e17,1.0642314157745203e17,1.0687600600968949e17,1.0732887044192694e17,1.0778173487416442e17,1.0823459930640189e17,1.0868746373863936e17,1.0914032817087683e17,1.095931926031143e17,1.1004605703535178e17,1.1049892146758923e17,1.1095178589982669e17,1.1140465033206416e17,1.1185751476430163e17,1.123103791965391e17,1.1276324362877656e17,1.1321610806101403e17,1.1366897249325152e17,1.1412183692548898e17,1.1457470135772645e17,1.150275657899639e17,1.1548043022220138e17,1.1593329465443885e17,1.1638615908667632e17,1.1683902351891378e17,1.1729188795115123e17,1.177447523833887e17,1.1819761681562618e17,1.1865048124786366e17,1.1910334568010112e17,1.195562101123386e17,1.2000907454457606e17,1.2046193897681354e17,1.2091480340905098e17,1.2136766784128845e17,1.2182053227352592e17,1.222733967057634e17,1.2272626113800085e17,1.2317912557023834e17,1.236319900024758e17,1.2408485443471326e17,1.2453771886695074e17,1.249905832991882e17,1.2544344773142566e17,1.2589631216366314e17,1.263491765959006e17,1.2680204102813806e17,1.2725490546037554e17,1.27707769892613e17,1.2816063432485048e17,1.2861349875708795e17,1.290663631893254e17,1.2951922762156288e17,1.2997209205380035e17,1.3042495648603782e17,1.3087782091827526e17,1.3133068535051274e17,1.317835497827502e17,1.3223641421498768e17,1.3268927864722515e17,1.3314214307946262e17,1.335950075117001e17,1.3404787194393757e17,1.3450073637617502e17,1.3495360080841248e17,1.3540646524064995e17,1.3585932967288742e17,1.363121941051249e17,1.3676505853736235e17,1.3721792296959982e17,1.3767078740183728e17,1.3812365183407477e17,1.3857651626631224e17,1.390293806985497e17,1.3948224513078717e17,1.3993510956302464e17,1.4038797399526211e17,1.4084083842749957e17,1.4129370285973702e17,1.417465672919745e17,1.4219943172421197e17,1.4265229615644946e17,1.4310516058868691e17,1.4355802502092438e17,1.4401088945316186e17,1.444637538853993e17,1.4491661831763677e17,1.4536948274987424e17,1.458223471821117e17,1.462752116143492e17,1.4672807604658666e17,1.4718094047882413e17,1.4763380491106157e17,1.4808666934329907e17,1.485395337755365e17,1.48992398207774e17,1.4944526264001146e17,1.498981270722489e17,1.503509915044864e17,1.5080385593672384e17,1.5125672036896134e17,1.517095848011988e17,1.521624492334363e17,1.5261531366567373e17,1.530681780979112e17,1.5352104253014867e17,1.539739069623861e17,1.5442677139462358e17,1.5487963582686106e17,1.5533250025909856e17,1.55785364691336e17,1.562382291235735e17,1.5669109355581094e17,1.5714395798804842e17,1.575968224202859e17,1.5804968685252333e17,1.585025512847608e17,1.5895541571699827e17,1.5940828014923574e17,1.598611445814732e17,1.603140090137107e17,1.6076687344594816e17,1.6121973787818563e17,1.616726023104231e17,1.6212546674266054e17,1.6257833117489802e17,1.630311956071355e17,1.6348406003937293e17,1.6393692447161043e17,1.643897889038479e17,1.6484265333608538e17,1.6529551776832285e17,1.657483822005603e17,1.6620124663279776e17,1.666541110650352e17,1.671069754972727e17,1.6755983992951014e17,1.6801270436174765e17,1.684655687939851e17,1.689184332262226e17,1.6937129765846006e17,1.698241620906975e17,1.7027702652293498e17,1.707298909551724e17,1.7118275538740992e17,1.7163561981964736e17,1.7208848425188486e17,1.725413486841223e17,1.729942131163598e17,1.7344707754859725e17,1.738999419808347e17,1.743528064130722e17,1.7480567084530963e17,1.7525853527754714e17,1.7571139970978458e17,1.7616426414202208e17,1.7661712857425952e17,1.77069993006497e17,1.7752285743873446e17,1.779757218709719e17,1.7842858630320938e17,1.7888145073544685e17,1.7933431516768435e17,1.797871795999218e17,1.802400440321593e17,1.8069290846439674e17,1.811457728966342e17,1.8159863732887168e17,1.8205150176110912e17,1.825043661933466e17,1.8295723062558406e17,1.8341009505782154e17,1.83862959490059e17,1.8431582392229648e17,1.8476868835453395e17,1.8522155278677142e17,1.856744172190089e17,1.8612728165124634e17,1.865801460834838e17,1.8703301051572128e17,1.8748587494795872e17,1.8793873938019622e17,1.883916038124337e17,1.8884446824467117e17,1.8929733267690864e17,1.8975019710914608e17,1.9020306154138355e17,1.90655925973621e17,1.911087904058585e17,1.9156165483809594e17,1.9201451927033344e17,1.9246738370257088e17,1.929202481348084e17,1.9337311256704586e17,1.938259769992833e17,1.9427884143152077e17,1.947317058637582e17,1.951845702959957e17,1.9563743472823315e17,1.9609029916047066e17,1.965431635927081e17,1.969960280249456e17,1.9744889245718304e17,1.9790175688942048e17,1.98354621321658e17,1.9880748575389542e17,1.9926035018613293e17,1.9971321461837037e17,2.0016607905060787e17,2.006189434828453e17,2.0107180791508278e17,2.0152467234732026e17,2.019775367795577e17,2.0243040121179517e17,2.0288326564403264e17,2.0333613007627014e17,2.037889945085076e17,2.0424185894074506e17,2.0469472337298253e17,2.0514758780522e17,2.0560045223745747e17,2.060533166696949e17,2.0650618110193238e17,2.0695904553416986e17,2.0741190996640733e17,2.078647743986448e17,2.0831763883088227e17,2.0877050326311974e17,2.0922336769535722e17,2.096762321275947e17,2.1012909655983213e17,2.105819609920696e17,2.1103482542430707e17,2.114876898565445e17,2.11940554288782e17,2.1239341872101946e17,2.1284628315325696e17,2.1329914758549443e17,2.1375201201773187e17,2.1420487644996934e17,2.146577408822068e17,2.151106053144443e17,2.1556346974668173e17,2.1601633417891923e17,2.1646919861115667e17,2.1692206304339418e17,2.173749274756316e17,2.1782779190786906e17,2.1828065634010656e17,2.18733520772344e17,2.191863852045815e17,2.1963924963681894e17,2.2009211406905645e17,2.205449785012939e17,2.209978429335314e17,2.2145070736576883e17,2.2190357179800627e17,2.2235643623024378e17,2.228093006624812e17,2.2326216509471872e17,2.2371502952695616e17,2.2416789395919366e17,2.246207583914311e17,2.2507362282366858e17,2.2552648725590605e17,2.259793516881435e17,2.2643221612038096e17,2.2688508055261843e17,2.2733794498485594e17,2.2779080941709338e17,2.2824367384933085e17,2.2869653828156832e17,2.291494027138058e17,2.2960226714604326e17,2.300551315782807e17,2.3050799601051818e17,2.3096086044275565e17,2.3141372487499312e17,2.318665893072306e17,2.3231945373946806e17,2.3277231817170554e17,2.33225182603943e17,2.3367804703618048e17,2.3413091146841792e17,2.345837759006554e17,2.3503664033289286e17,2.354895047651303e17,2.359423691973678e17,2.3639523362960525e17,2.3684809806184275e17,2.3730096249408022e17,2.3775382692631766e17,2.3820669135855514e17,2.3865955579079258e17,2.3911242022303008e17,2.3956528465526752e17,2.4001814908750502e17,2.4047101351974246e17,2.4092387795197997e17,2.413767423842174e17,2.4182960681645485e17,2.4228247124869235e17,2.427353356809298e17,2.431882001131673e17,2.4364106454540474e17,2.4409392897764224e17,2.4454679340987968e17,2.449996578421172e17,2.4545252227435462e17,2.4590538670659206e17,2.4635825113882957e17,2.46811115571067e17,2.472639800033045e17,2.4771684443554195e17,2.4816970886777946e17,2.486225733000169e17,2.4907543773225437e17,2.4952830216449184e17,2.4998116659672928e17,2.5043403102896675e17,2.5088689546120422e17,2.5133975989344173e17,2.5179262432567917e17,2.5224548875791664e17,2.526983531901541e17,2.5315121762239158e17,2.5360408205462906e17,2.540569464868665e17,2.5450981091910397e17,2.5496267535134144e17,2.5541553978357888e17,2.558684042158164e17,2.5632126864805386e17,2.5677413308029133e17,2.572269975125288e17,2.5767986194476627e17,2.581327263770037e17,2.5858559080924118e17,2.5903845524147866e17,2.594913196737161e17,2.599441841059536e17,2.6039704853819104e17,2.6084991297042854e17,2.6130277740266602e17,2.6175564183490346e17,2.6220850626714093e17,2.6266137069937837e17,2.6311423513161587e17,2.635670995638533e17,2.640199639960908e17,2.6447282842832826e17,2.6492569286056576e17,2.653785572928032e17,2.6583142172504064e17,2.6628428615727814e17,2.667371505895156e17,2.671900150217531e17,2.6764287945399053e17,2.6809574388622803e17,2.6854860831846547e17,2.6900147275070294e17,2.694543371829404e17,2.6990720161517786e17,2.7036006604741533e17,2.708129304796528e17,2.712657949118903e17,2.7171865934412774e17,2.7217152377636525e17,2.726243882086027e17,2.7307725264084016e17,2.7353011707307763e17,2.7398298150531507e17,2.7443584593755254e17,2.7488871036979e17,2.753415748020275e17,2.7579443923426496e17,2.7624730366650243e17,2.767001680987399e17,2.7715303253097738e17,2.7760589696321485e17,2.780587613954523e17,2.7851162582768976e17,2.7896449025992723e17,2.7941735469216467e17,2.7987021912440218e17,2.8032308355663965e17,2.8077594798887712e17,2.812288124211146e17,2.8168167685335206e17,2.821345412855895e17,2.8258740571782698e17,2.8304027015006445e17,2.834931345823019e17,2.839459990145394e17,2.8439886344677683e17,2.8485172787901434e17,2.853045923112518e17,2.8575745674348925e17,2.8621032117572672e17,2.8666318560796416e17,2.8711605004020166e17,2.875689144724391e17,2.880217789046766e17,2.8847464333691405e17,2.8892750776915155e17,2.89380372201389e17,2.8983323663362643e17,2.9028610106586394e17,2.907389654981014e17,2.911918299303389e17,2.916446943625763e17,2.920975587948138e17,2.9255042322705126e17,2.930032876592887e17,2.934561520915262e17,2.9390901652376365e17,2.9436188095600115e17,2.948147453882386e17,2.952676098204761e17,2.957204742527136e17,2.96173338684951e17,2.966262031171885e17,2.970790675494259e17,2.975319319816634e17,2.9798479641390086e17,2.984376608461384e17,2.988905252783758e17,2.993433897106133e17,2.9979625414285075e17,3.002491185750882e17,3.007019830073257e17,3.0115484743956314e17,3.0160771187180064e17,3.020605763040381e17,3.025134407362756e17,3.02966305168513e17,3.034191696007505e17,3.038720340329879e17,3.043248984652254e17,3.047777628974629e17,3.0523062732970035e17,3.0568349176193786e17,3.061363561941753e17,3.065892206264128e17,3.070420850586502e17,3.0749494949088774e17,3.079478139231252e17,3.084006783553626e17,3.0885354278760006e17,3.093064072198376e17,3.097592716520751e17,3.1021213608431245e17,3.1066500051655e17,3.1111786494878746e17,3.1157072938102496e17,3.1202359381326234e17,3.1247645824549984e17,3.1292932267773734e17,3.133821871099747e17,3.138350515422122e17,3.142879159744497e17,3.147407804066872e17,3.151936448389246e17,3.156465092711622e17,3.160993737033996e17,3.1655223813563706e17,3.170051025678745e17,3.17457967000112e17,3.179108314323495e17,3.183636958645869e17,3.188165602968244e17,3.192694247290619e17,3.197222891612994e17,3.201751535935368e17,3.206280180257743e17,3.210808824580118e17,3.2153374689024915e17,3.2198661132248666e17,3.2243947575472416e17,3.2289234018696166e17,3.2334520461919904e17,3.2379806905143654e17,3.2425093348367405e17,3.247037979159114e17,3.251566623481489e17,3.256095267803864e17,3.2606239121262394e17,3.265152556448613e17,3.269681200770988e17,3.274209845093363e17,3.278738489415737e17,3.283267133738112e17,3.287795778060487e17,3.292324422382862e17,3.296853066705236e17,3.301381711027611e17,3.305910355349986e17,3.3104389996723603e17,3.314967643994735e17,3.319496288317109e17,3.324024932639485e17,3.3285535769618586e17,3.3330822212842336e17,3.3376108656066086e17,3.342139509928983e17,3.3466681542513574e17,3.3511967985737325e17,3.3557254428961075e17,3.360254087218481e17,3.364782731540856e17,3.369311375863231e17,3.373840020185606e17,3.37836866450798e17,3.382897308830355e17,3.38742595315273e17,3.3919545974751046e17,3.396483241797479e17,3.4010118861198534e17,3.405540530442229e17,3.410069174764603e17,3.414597819086978e17,3.4191264634093523e17,3.4236551077317274e17,3.428183752054102e17,3.432712396376477e17,3.437241040698852e17,3.4417696850212256e17,3.4462983293436006e17,3.450826973665975e17,3.45535561798835e17,3.4598842623107245e17,3.4644129066330995e17,3.468941550955474e17,3.473470195277849e17,3.4779988396002234e17,3.482527483922598e17,3.487056128244973e17,3.491584772567347e17,3.496113416889722e17,3.5006420612120966e17,3.505170705534472e17,3.509699349856846e17,3.514227994179221e17,3.518756638501595e17,3.52328528282397e17,3.527813927146345e17,3.5323425714687194e17,3.5368712157910944e17,3.541399860113469e17,3.545928504435844e17,3.5504571487582176e17,3.554985793080593e17,3.5595144374029677e17,3.564043081725342e17,3.5685717260477165e17,3.5731003703700915e17,3.5776290146924666e17,3.58215765901484e17,3.586686303337216e17,3.5912149476595904e17,3.5957435919819654e17,3.600272236304339e17,3.604800880626714e17,3.609329524949089e17,3.613858169271463e17,3.618386813593838e17,3.622915457916213e17,3.627444102238588e17,3.631972746560962e17,3.6365013908833376e17,3.641030035205712e17,3.645558679528086e17,3.650087323850461e17,3.654615968172836e17,3.659144612495211e17,3.6636732568175846e17,3.6682019011399597e17,3.672730545462335e17,3.67725918978471e17,3.6817878341070835e17,3.6863164784294586e17,3.6908451227518336e17,3.6953737670742074e17,3.6999024113965824e17,3.7044310557189574e17,3.7089597000413325e17,3.713488344363706e17,3.7180169886860806e17,3.7225456330084563e17,3.72707427733083e17,3.731602921653205e17,3.73613156597558e17,3.740660210297955e17,3.745188854620329e17,3.749717498942704e17,3.754246143265079e17,3.758774787587453e17,3.763303431909828e17,3.767832076232203e17,3.772360720554578e17,3.7768893648769517e17,3.781418009199327e17,3.785946653521702e17,3.790475297844076e17,3.7950039421664506e17,3.799532586488825e17,3.8040612308112006e17,3.8085898751335744e17,3.8131185194559494e17,3.8176471637783245e17,3.822175808100699e17,3.826704452423073e17,3.8312330967454483e17,3.8357617410678234e17,3.840290385390197e17,3.844819029712572e17,3.8493476740349466e17,3.8538763183573216e17,3.858404962679696e17,3.862933607002071e17,3.867462251324446e17,3.8719908956468205e17,3.876519539969195e17,3.881048184291569e17,3.885576828613944e17,3.890105472936319e17,3.894634117258694e17,3.899162761581068e17,3.903691405903443e17,3.9082200502258176e17,3.9127486945481926e17,3.917277338870568e17,3.9218059831929414e17,3.9263346275153165e17,3.930863271837691e17,3.935391916160066e17,3.9399205604824403e17,3.9444492048048154e17,3.94897784912719e17,3.953506493449565e17,3.958035137771939e17,3.9625637820943136e17,3.9670924264166886e17,3.971621070739063e17,3.976149715061438e17,3.9806783593838125e17,3.9852070037061875e17,3.989735648028562e17,3.994264292350937e17,3.998792936673311e17,4.003321580995686e17,4.007850225318061e17,4.012378869640435e17,4.01690751396281e17,4.0214361582851846e17,4.02596480260756e17,4.0304934469299334e17,4.035022091252309e17,4.0395507355746835e17,4.044079379897058e17,4.0486080242194323e17,4.0531366685418074e17,4.0576653128641824e17,4.062193957186556e17,4.066722601508932e17,4.071251245831306e17,4.075779890153681e17,4.080308534476055e17,4.08483717879843e17,4.089365823120805e17,4.093894467443179e17,4.098423111765554e17,4.102951756087929e17,4.107480400410304e17,4.112009044732678e17,4.1165376890550534e17,4.121066333377428e17,4.1255949776998016e17,4.1301236220221766e17,4.134652266344552e17,4.139180910666927e17,4.1437095549893005e17,4.1482381993116755e17,4.1527668436340506e17,4.1572954879564243e17,4.1618241322787994e17,4.1663527766011744e17,4.1708814209235494e17,4.175410065245923e17,4.179938709568298e17,4.184467353890673e17,4.188995998213048e17,4.193524642535422e17,4.1980532868577965e17,4.202581931180172e17,4.207110575502546e17,4.211639219824921e17,4.216167864147296e17,4.220696508469671e17,4.225225152792045e17,4.22975379711442e17,4.234282441436795e17,4.2388110857591686e17,4.243339730081544e17,4.247868374403918e17,4.252397018726294e17,4.2569256630486675e17,4.2614543073710426e17,4.2659829516934176e17,4.270511596015792e17,4.2750402403381664e17,4.279568884660541e17,4.2840975289829165e17,4.28862617330529e17,4.293154817627665e17,4.2976834619500397e17,4.302212106272415e17,4.306740750594789e17,4.311269394917164e17,4.315798039239539e17,4.320326683561913e17,4.324855327884288e17,4.3293839722066624e17,4.3339126165290374e17,4.338441260851412e17,4.342969905173787e17,4.347498549496161e17,4.3520271938185363e17,4.356555838140911e17,4.361084482463285e17,4.36561312678566e17,4.3701417711080346e17,4.3746704154304096e17,4.379199059752784e17,4.383727704075159e17,4.3882563483975334e17,4.3927849927199085e17,4.397313637042283e17,4.401842281364657e17,4.406370925687032e17,4.410899570009407e17,4.415428214331782e17,4.419956858654156e17,4.424485502976531e17,4.4290141472989056e17,4.4335427916212806e17,4.438071435943655e17,4.4426000802660294e17,4.4471287245884045e17,4.451657368910779e17,4.456186013233154e17,4.4607146575555283e17,4.4652433018779034e17,4.469771946200278e17,4.474300590522653e17,4.4788292348450266e17,4.4833578791674016e17,4.4878865234897766e17,4.492415167812151e17,4.496943812134526e17,4.5014724564569005e17,4.5060011007792755e17,4.510529745101649e17,4.515058389424025e17,4.5195870337463994e17,4.524115678068774e17,4.528644322391148e17,4.533172966713523e17,4.537701611035898e17,4.542230255358272e17,4.546758899680648e17,4.551287544003022e17,4.555816188325397e17,4.560344832647771e17,4.564873476970146e17,4.569402121292521e17,4.573930765614895e17,4.57845940993727e17,4.582988054259645e17,4.58751669858202e17,4.5920453429043936e17,4.596573987226769e17,4.6011026315491437e17,4.6056312758715174e17,4.6101599201938925e17,4.6146885645162675e17,4.6192172088386426e17,4.623745853161016e17,4.6282744974833914e17,4.6328031418057664e17,4.63733178612814e17,4.641860430450515e17,4.64638907477289e17,4.650917719095265e17,4.655446363417639e17,4.659975007740014e17,4.664503652062389e17,4.6690322963847635e17,4.673560940707138e17,4.6780895850295123e17,4.682618229351888e17,4.687146873674262e17,4.691675517996637e17,4.696204162319012e17,4.700732806641387e17,4.7052614509637606e17,4.7097900952861357e17,4.714318739608511e17,4.7188473839308845e17,4.7233760282532595e17,4.727904672575634e17,4.7324333168980096e17,4.7369619612203834e17,4.7414906055427584e17,4.7460192498651334e17,4.750547894187508e17,4.755076538509882e17,4.7596051828322566e17,4.7641338271546323e17,4.768662471477006e17,4.773191115799381e17,4.7777197601217555e17,4.7822484044441306e17,4.786777048766505e17,4.79130569308888e17,4.795834337411255e17,4.800362981733629e17,4.804891626056004e17,4.809420270378378e17,4.813948914700753e17,4.8184775590231277e17,4.823006203345503e17,4.827534847667877e17,4.832063491990252e17,4.8365921363126266e17,4.841120780635001e17,4.845649424957376e17,4.8501780692797504e17,4.8547067136021254e17,4.8592353579245e17,4.863764002246875e17,4.868292646569249e17,4.8728212908916243e17,4.877349935213998e17,4.881878579536373e17,4.886407223858748e17,4.8909358681811226e17,4.8954645125034976e17,4.899993156825872e17,4.904521801148247e17,4.909050445470621e17,4.9135790897929965e17,4.918107734115371e17,4.922636378437745e17,4.92716502276012e17,4.931693667082495e17,4.93622231140487e17,4.940750955727244e17,4.945279600049619e17,4.9498082443719936e17,4.9543368886943686e17,4.9588655330167424e17,4.9633941773391174e17,4.9679228216614925e17,4.972451465983867e17,4.976980110306242e17,4.9815087546286163e17,4.9860373989509914e17,4.990566043273365e17,4.995094687595741e17,4.999623331918115e17,5.0041519762404896e17,5.008680620562864e17,5.013209264885239e17,5.017737909207614e17,5.022266553529988e17,5.0267951978523635e17,5.031323842174738e17,5.035852486497113e17,5.040381130819487e17,5.044909775141862e17,5.049438419464237e17,5.0539670637866106e17,5.0584957081089856e17,5.0630243524313606e17,5.067552996753736e17,5.0720816410761094e17,5.076610285398485e17,5.0811389297208595e17,5.085667574043233e17,5.0901962183656083e17,5.0947248626879834e17,5.0992535070103584e17,5.103782151332732e17,5.108310795655107e17,5.112839439977482e17,5.117368084299856e17,5.121896728622231e17,5.126425372944606e17,5.130954017266981e17,5.135482661589355e17,5.14001130591173e17,5.144539950234105e17,5.1490685945564794e17,5.153597238878854e17,5.158125883201228e17,5.162654527523604e17,5.1671831718459776e17,5.1717118161683526e17,5.176240460490728e17,5.180769104813102e17,5.1852977491354765e17,5.1898263934578515e17,5.1943550377802266e17,5.1988836821026003e17,5.2034123264249754e17,5.20794097074735e17,5.2124696150697254e17,5.216998259392099e17,5.221526903714474e17,5.226055548036849e17,5.2305841923592237e17,5.235112836681598e17,5.2396414810039725e17,5.244170125326348e17,5.248698769648722e17,5.253227413971097e17,5.2577560582934714e17,5.2622847026158464e17,5.266813346938221e17,5.271341991260596e17,5.275870635582971e17,5.2803992799053446e17,5.28492792422772e17,5.289456568550094e17,5.293985212872469e17,5.2985138571948435e17,5.3030425015172186e17,5.307571145839593e17,5.312099790161968e17,5.3166284344843424e17,5.321157078806717e17,5.325685723129092e17,5.330214367451466e17,5.334743011773841e17,5.3392716560962157e17,5.343800300418591e17,5.348328944740965e17,5.35285758906334e17,5.357386233385714e17,5.361914877708089e17,5.366443522030464e17,5.3709721663528384e17,5.3755008106752134e17,5.380029454997588e17,5.384558099319963e17,5.3890867436423366e17,5.3936153879647123e17,5.398144032287087e17,5.402672676609461e17,5.4072013209318355e17,5.4117299652542106e17,5.4162586095765856e17,5.4207872538989594e17,5.425315898221335e17,5.4298445425437094e17,5.4343731868660845e17,5.438901831188458e17,5.443430475510833e17,5.447959119833208e17,5.452487764155583e17,5.457016408477957e17,5.461545052800332e17,5.466073697122707e17,5.470602341445081e17,5.4751309857674566e17,5.479659630089831e17,5.4841882744122054e17,5.48871691873458e17,5.493245563056955e17,5.49777420737933e17,5.502302851701704e17,5.506831496024079e17,5.511360140346454e17,5.515888784668829e17,5.5204174289912026e17,5.5249460733135776e17,5.5294747176359526e17,5.5340033619583264e17,5.5385320062807014e17,5.5430606506030765e17,5.5475892949254515e17,5.552117939247825e17,5.556646583570201e17,5.5611752278925754e17,5.565703872214949e17,5.570232516537324e17,5.574761160859699e17,5.579289805182074e17,5.583818449504448e17,5.588347093826823e17,5.592875738149198e17,5.597404382471572e17,5.601933026793947e17,5.606461671116322e17,5.610990315438697e17,5.615518959761071e17,5.620047604083446e17,5.624576248405821e17,5.629104892728195e17,5.6336335370505696e17,5.638162181372944e17,5.6426908256953197e17,5.6472194700176934e17,5.6517481143400685e17,5.6562767586624435e17,5.660805402984818e17,5.665334047307192e17,5.6698626916295674e17,5.6743913359519424e17,5.678919980274316e17,5.683448624596691e17,5.6879772689190656e17,5.6925059132414406e17,5.697034557563815e17,5.70156320188619e17,5.706091846208565e17,5.7106204905309395e17,5.715149134853314e17,5.7196777791756883e17,5.724206423498064e17,5.728735067820438e17,5.733263712142813e17,5.737792356465187e17,5.742321000787562e17,5.7468496451099366e17,5.7513782894323117e17,5.755906933754687e17,5.7604355780770605e17,5.764964222399436e17,5.76949286672181e17,5.774021511044184e17,5.77855015536656e17,5.783078799688934e17,5.787607444011309e17,5.792136088333683e17,5.796664732656058e17,5.801193376978433e17,5.805722021300808e17,5.810250665623182e17,5.814779309945556e17,5.819307954267932e17,5.823836598590307e17,5.828365242912681e17,5.832893887235055e17,5.83742253155743e17,5.841951175879805e17,5.84647982020218e17,5.851008464524554e17,5.855537108846929e17,5.860065753169304e17,5.864594397491679e17,5.869123041814053e17,5.873651686136428e17,5.878180330458802e17,5.882708974781178e17,5.887237619103551e17,5.891766263425926e17,5.896294907748301e17,5.900823552070675e17,5.905352196393051e17,5.909880840715425e17,5.9144094850378e17,5.918938129360174e17,5.92346677368255e17,5.927995418004923e17,5.932524062327299e17,5.937052706649674e17,5.941581350972047e17,5.946109995294422e17,5.950638639616797e17,5.955167283939172e17,5.959695928261546e17,5.964224572583922e17,5.968753216906296e17,5.973281861228671e17,5.977810505551044e17,5.98233914987342e17,5.986867794195795e17,5.99139643851817e17,5.995925082840544e17,6.00045372716292e17,6.004982371485293e17,6.009511015807667e17,6.014039660130043e17,6.018568304452417e17,6.023096948774793e17,6.027625593097166e17,6.032154237419542e17,6.036682881741916e17,6.041211526064289e17,6.045740170386665e17,6.05026881470904e17,6.054797459031415e17,6.05932610335379e17,6.063854747676165e17,6.068383391998538e17,6.072912036320914e17,6.077440680643287e17,6.081969324965663e17,6.086497969288038e17,6.091026613610412e17,6.095555257932787e17,6.100083902255163e17,6.104612546577536e17,6.10914119089991e17,6.113669835222286e17,6.11819847954466e17,6.122727123867035e17,6.127255768189409e17,6.131784412511785e17,6.136313056834159e17,6.140841701156532e17,6.145370345478908e17,6.149898989801284e17,6.154427634123658e17,6.158956278446033e17,6.163484922768408e17,6.168013567090781e17,6.172542211413156e17,6.17707085573553e17,6.181599500057906e17,6.186128144380282e17,6.190656788702655e17,6.19518543302503e17,6.199714077347405e17,6.204242721669778e17,6.208771365992154e17,6.213300010314529e17,6.217828654636904e17,6.222357298959278e17,6.226885943281652e17,6.231414587604027e17,6.235943231926401e17,6.240471876248776e17,6.245000520571151e17,6.249529164893527e17,6.2540578092159e17,6.258586453538276e17,6.26311509786065e17,6.267643742183025e17,6.272172386505399e17,6.276701030827773e17,6.281229675150149e17,6.285758319472524e17,6.290286963794898e17,6.294815608117272e17,6.299344252439648e17,6.303872896762021e17,6.308401541084397e17,6.312930185406772e17,6.317458829729146e17,6.321987474051521e17,6.326516118373894e17,6.33104476269627e17,6.335573407018644e17,6.340102051341019e17,6.344630695663395e17,6.34915933998577e17,6.353687984308143e17,6.358216628630518e17,6.362745272952893e17,6.367273917275267e17,6.371802561597642e17,6.376331205920017e17,6.380859850242392e17,6.385388494564767e17,6.38991713888714e17,6.394445783209516e17,6.39897442753189e17,6.403503071854264e17,6.40803171617664e17,6.412560360499016e17,6.417089004821389e17,6.421617649143763e17,6.426146293466139e17,6.430674937788513e17,6.435203582110888e17,6.439732226433262e17,6.444260870755638e17,6.448789515078012e17,6.453318159400385e17,6.457846803722761e17,6.462375448045137e17,6.46690409236751e17,6.471432736689885e17,6.475961381012261e17,6.480490025334634e17,6.485018669657009e17,6.489547313979383e17,6.494075958301759e17,6.498604602624133e17,6.503133246946508e17,6.507661891268883e17,6.512190535591259e17,6.516719179913631e17,6.521247824236006e17,6.525776468558382e17,6.530305112880755e17,6.534833757203131e17,6.539362401525505e17,6.543891045847881e17,6.548419690170254e17,6.552948334492628e17,6.557476978815004e17,6.562005623137379e17,6.566534267459753e17,6.571062911782129e17,6.575591556104504e17,6.580120200426876e17,6.584648844749252e17,6.589177489071626e17,6.593706133394002e17,6.598234777716376e17,6.602763422038751e17,6.607292066361126e17,6.611820710683501e17,6.616349355005874e17,6.62087799932825e17,6.625406643650625e17,6.629935287972998e17,6.634463932295374e17,6.638992576617748e17,6.643521220940123e17,6.648049865262497e17,6.652578509584872e17,6.657107153907247e17,6.661635798229622e17,6.666164442551996e17,6.670693086874372e17,6.675221731196748e17,6.67975037551912e17,6.684279019841495e17,6.68880766416387e17,6.693336308486244e17,6.69786495280862e17,6.702393597130994e17,6.70692224145337e17,6.711450885775743e17,6.715979530098117e17,6.720508174420493e17,6.725036818742867e17,6.729565463065242e17,6.734094107387617e17,6.738622751709992e17,6.743151396032365e17,6.74768004035474e17,6.752208684677115e17,6.756737328999489e17,6.761265973321865e17,6.76579461764424e17,6.770323261966615e17,6.774851906288988e17,6.779380550611363e17,6.783909194933738e17,6.788437839256113e17,6.792966483578487e17,6.797495127900863e17,6.802023772223237e17,6.80655241654561e17,6.811081060867986e17,6.81560970519036e17,6.820138349512736e17,6.82466699383511e17,6.829195638157485e17,6.83372428247986e17,6.838252926802232e17,6.842781571124608e17,6.847310215446984e17,6.851838859769358e17,6.856367504091732e17,6.860896148414108e17,6.865424792736483e17,6.869953437058857e17,6.874482081381231e17,6.879010725703606e17,6.883539370025981e17,6.888068014348355e17,6.89259665867073e17,6.897125302993106e17,6.901653947315479e17,6.906182591637853e17,6.910711235960229e17,6.915239880282604e17,6.919768524604978e17,6.924297168927354e17,6.928825813249728e17,6.933354457572102e17,6.937883101894476e17,6.942411746216851e17,6.946940390539227e17,6.951469034861601e17,6.955997679183976e17,6.960526323506351e17,6.965054967828724e17,6.969583612151099e17,6.974112256473475e17,6.978640900795849e17,6.983169545118225e17,6.987698189440598e17,6.992226833762973e17,6.996755478085348e17,7.001284122407721e17,7.005812766730097e17,7.010341411052472e17,7.014870055374847e17,7.019398699697221e17,7.023927344019597e17,7.02845598834197e17,7.032984632664346e17,7.037513276986719e17,7.042041921309094e17,7.04657056563147e17,7.051099209953843e17,7.055627854276219e17,7.060156498598593e17,7.064685142920968e17,7.069213787243342e17,7.073742431565718e17,7.078271075888092e17,7.082799720210467e17,7.087328364532841e17,7.091857008855215e17,7.096385653177591e17,7.100914297499964e17,7.10544294182234e17,7.109971586144716e17,7.11450023046709e17,7.119028874789464e17,7.12355751911184e17,7.128086163434213e17,7.132614807756588e17,7.137143452078962e17,7.141672096401338e17,7.146200740723713e17,7.150729385046086e17,7.155258029368462e17,7.159786673690836e17,7.16431531801321e17,7.168843962335585e17,7.173372606657961e17,7.177901250980335e17,7.18242989530271e17,7.186958539625084e17,7.191487183947459e17,7.196015828269833e17,7.200544472592207e17,7.205073116914583e17,7.209601761236959e17,7.214130405559332e17,7.218659049881708e17,7.223187694204082e17,7.227716338526456e17,7.232244982848831e17,7.236773627171205e17,7.241302271493581e17,7.245830915815955e17,7.25035956013833e17,7.254888204460704e17,7.25941684878308e17,7.263945493105453e17,7.268474137427828e17,7.273002781750204e17,7.277531426072577e17,7.282060070394953e17,7.286588714717326e17,7.291117359039702e17,7.295646003362076e17,7.30017464768445e17,7.304703292006826e17,7.309231936329202e17,7.313760580651575e17,7.31828922497395e17,7.322817869296325e17,7.327346513618698e17,7.331875157941074e17,7.336403802263448e17,7.340932446585824e17,7.345461090908198e17,7.349989735230572e17,7.354518379552947e17,7.359047023875322e17,7.363575668197696e17,7.368104312520072e17,7.372632956842447e17,7.37716160116482e17,7.381690245487195e17,7.386218889809569e17,7.390747534131945e17,7.395276178454319e17,7.399804822776694e17,7.40433346709907e17,7.408862111421444e17,7.413390755743817e17,7.417919400066193e17,7.422448044388568e17,7.426976688710941e17,7.431505333033317e17,7.436033977355692e17,7.440562621678066e17,7.44509126600044e17,7.449619910322815e17,7.45414855464519e17,7.458677198967565e17,7.463205843289939e17,7.467734487612315e17,7.47226313193469e17,7.476791776257062e17,7.481320420579438e17,7.485849064901812e17,7.490377709224187e17,7.494906353546563e17,7.499434997868937e17,7.503963642191313e17,7.508492286513686e17,7.51302093083606e17,7.517549575158436e17,7.52207821948081e17,7.526606863803185e17,7.53113550812556e17,7.535664152447936e17,7.540192796770308e17,7.544721441092684e17,7.549250085415058e17,7.553778729737434e17,7.558307374059808e17,7.562836018382182e17,7.567364662704558e17,7.571893307026931e17,7.576421951349306e17,7.580950595671681e17,7.585479239994057e17,7.59000788431643e17,7.594536528638806e17,7.59906517296118e17,7.603593817283553e17,7.608122461605929e17,7.612651105928303e17,7.617179750250679e17,7.621708394573053e17,7.626237038895428e17,7.630765683217804e17,7.635294327540179e17,7.639822971862551e17,7.644351616184927e17,7.648880260507301e17,7.653408904829676e17,7.657937549152051e17,7.662466193474426e17,7.666994837796801e17,7.671523482119174e17,7.676052126441549e17,7.680580770763924e17,7.685109415086299e17,7.689638059408673e17,7.694166703731049e17,7.698695348053423e17,7.703223992375796e17,7.707752636698172e17,7.712281281020547e17,7.716809925342921e17,7.721338569665297e17,7.725867213987671e17,7.730395858310047e17,7.73492450263242e17,7.739453146954794e17,7.74398179127717e17,7.748510435599544e17,7.753039079921919e17,7.757567724244294e17,7.762096368566669e17,7.766625012889042e17,7.771153657211418e17,7.775682301533792e17,7.780210945856168e17,7.784739590178542e17,7.789268234500916e17,7.793796878823292e17,7.798325523145664e17,7.80285416746804e17,7.807382811790415e17,7.81191145611279e17,7.816440100435164e17,7.82096874475754e17,7.825497389079914e17,7.830026033402289e17,7.834554677724663e17,7.839083322047037e17,7.843611966369413e17,7.848140610691786e17,7.852669255014162e17,7.857197899336538e17,7.861726543658911e17,7.866255187981285e17,7.870783832303661e17,7.875312476626035e17,7.87984112094841e17,7.884369765270785e17,7.88889840959316e17,7.893427053915534e17,7.897955698237907e17,7.902484342560283e17,7.907012986882659e17,7.911541631205033e17,7.916070275527407e17,7.920598919849783e17,7.925127564172156e17,7.92965620849453e17,7.934184852816906e17,7.938713497139281e17,7.943242141461656e17,7.94777078578403e17,7.952299430106405e17,7.95682807442878e17,7.961356718751153e17,7.965885363073528e17,7.970414007395904e17,7.974942651718278e17,7.979471296040653e17,7.983999940363028e17,7.988528584685402e17,7.993057229007777e17,7.99758587333015e17,8.002114517652526e17,8.006643161974902e17,8.011171806297275e17,8.01570045061965e17,8.020229094942025e17,8.0247577392644e17,8.029286383586774e17,8.03381502790915e17,8.038343672231524e17,8.042872316553898e17,8.047400960876273e17,8.051929605198647e17,8.056458249521023e17,8.060986893843396e17,8.065515538165772e17,8.070044182488147e17,8.074572826810522e17,8.079101471132896e17,8.08363011545527e17,8.088158759777645e17,8.092687404100019e17,8.097216048422394e17,8.101744692744769e17,8.106273337067145e17,8.110801981389518e17,8.115330625711892e17,8.119859270034268e17,8.124387914356641e17,8.128916558679017e17,8.133445203001393e17,8.137973847323767e17,8.142502491646141e17,8.147031135968516e17,8.15155978029089e17,8.156088424613265e17,8.160617068935639e17,8.165145713258015e17,8.16967435758039e17,8.174203001902764e17,8.178731646225139e17,8.183260290547514e17,8.187788934869888e17,8.192317579192262e17,8.196846223514637e17,8.201374867837012e17,8.205903512159387e17,8.210432156481761e17,8.214960800804136e17,8.219489445126511e17,8.224018089448884e17,8.22854673377126e17,8.233075378093636e17,8.237604022416009e17,8.242132666738385e17,8.246661311060758e17,8.251189955383133e17,8.255718599705508e17,8.260247244027882e17,8.264775888350258e17,8.269304532672634e17,8.273833176995007e17,8.278361821317381e17,8.282890465639757e17,8.28741910996213e17,8.291947754284506e17,8.29647639860688e17,8.301005042929256e17,8.30553368725163e17,8.310062331574003e17,8.314590975896379e17,8.319119620218753e17,8.323648264541128e17,8.328176908863503e17,8.332705553185879e17,8.337234197508252e17,8.341762841830627e17,8.346291486153001e17,8.350820130475377e17,8.355348774797751e17,8.359877419120125e17,8.364406063442501e17,8.368934707764876e17,8.373463352087249e17,8.377991996409624e17,8.382520640732e17,8.387049285054373e17,8.391577929376749e17,8.396106573699123e17,8.400635218021498e17,8.405163862343872e17,8.409692506666246e17,8.414221150988622e17,8.418749795310996e17,8.423278439633371e17,8.427807083955747e17,8.432335728278122e17,8.436864372600494e17,8.44139301692287e17,8.445921661245244e17,8.450450305567619e17,8.454978949889994e17,8.459507594212369e17,8.464036238534744e17,8.468564882857117e17,8.473093527179492e17,8.477622171501868e17,8.482150815824242e17,8.486679460146616e17,8.491208104468992e17,8.495736748791366e17,8.50026539311374e17,8.504794037436115e17,8.50932268175849e17,8.513851326080865e17,8.51837997040324e17,8.522908614725614e17,8.52743725904799e17,8.531965903370363e17,8.536494547692737e17,8.541023192015113e17,8.545551836337487e17,8.550080480659862e17,8.554609124982237e17,8.559137769304612e17,8.563666413626985e17,8.56819505794936e17,8.572723702271735e17,8.577252346594111e17,8.581780990916485e17,8.58630963523886e17,8.590838279561235e17,8.595366923883607e17,8.599895568205983e17,8.604424212528358e17,8.608952856850733e17,8.613481501173107e17,8.618010145495483e17,8.622538789817857e17,8.627067434140232e17,8.631596078462606e17,8.63612472278498e17,8.640653367107356e17,8.645182011429729e17,8.649710655752105e17,8.65423930007448e17,8.658767944396855e17,8.663296588719228e17,8.667825233041604e17,8.672353877363978e17,8.676882521686353e17,8.681411166008728e17,8.685939810331103e17,8.690468454653478e17,8.69499709897585e17,8.699525743298226e17,8.704054387620602e17,8.708583031942976e17,8.71311167626535e17,8.717640320587726e17,8.7221689649101e17,8.726697609232474e17,8.731226253554849e17,8.735754897877224e17,8.740283542199599e17,8.744812186521974e17,8.749340830844348e17,8.753869475166724e17,8.758398119489096e17,8.762926763811471e17,8.767455408133847e17,8.771984052456221e17,8.776512696778596e17,8.781041341100972e17,8.785569985423346e17,8.79009862974572e17,8.794627274068095e17,8.799155918390469e17,8.803684562712845e17,8.808213207035218e17,8.812741851357594e17,8.817270495679969e17,8.821799140002342e17,8.826327784324717e17,8.830856428647092e17,8.835385072969467e17,8.839913717291841e17,8.844442361614217e17,8.848971005936591e17,8.853499650258966e17,8.858028294581339e17,8.862556938903715e17,8.86708558322609e17,8.871614227548465e17,8.876142871870839e17,8.880671516193215e17,8.885200160515588e17,8.889728804837962e17,8.894257449160338e17,8.898786093482712e17,8.903314737805088e17,8.907843382127461e17,8.912372026449837e17,8.916900670772211e17,8.921429315094584e17,8.92595795941696e17,8.930486603739336e17,8.93501524806171e17,8.939543892384084e17,8.94407253670646e17,8.948601181028833e17,8.953129825351209e17,8.957658469673582e17,8.962187113995958e17,8.966715758318333e17,8.971244402640707e17,8.975773046963082e17,8.980301691285457e17,8.984830335607831e17,8.989358979930205e17,8.993887624252581e17,8.998416268574956e17,9.00294491289733e17,9.007473557219704e17,9.012002201542079e17,9.016530845864454e17,9.021059490186828e17,9.025588134509203e17,9.030116778831579e17,9.034645423153953e17,9.039174067476328e17,9.043702711798702e17,9.048231356121076e17,9.052760000443451e17,9.057288644765825e17,9.061817289088201e17,9.066345933410577e17,9.07087457773295e17,9.075403222055324e17,9.0799318663777e17,9.084460510700073e17,9.088989155022449e17,9.093517799344824e17,9.098046443667199e17,9.102575087989573e17,9.107103732311946e17,9.111632376634322e17,9.116161020956696e17,9.120689665279071e17,9.125218309601446e17,9.129746953923822e17,9.134275598246195e17,9.13880424256857e17,9.143332886890945e17,9.14786153121332e17,9.152390175535694e17,9.156918819858068e17,9.161447464180444e17,9.165976108502819e17,9.170504752825193e17,9.175033397147567e17,9.179562041469943e17,9.184090685792316e17,9.188619330114692e17,9.193147974437068e17,9.197676618759441e17,9.202205263081816e17,9.20673390740419e17,9.211262551726565e17,9.21579119604894e17,9.220319840371314e17,9.22484848469369e17,9.229377129016065e17,9.233905773338438e17,9.238434417660813e17,9.242963061983188e17,9.247491706305562e17,9.252020350627937e17,9.256548994950312e17,9.261077639272687e17,9.265606283595062e17,9.270134927917435e17,9.27466357223981e17,9.279192216562185e17,9.28372086088456e17,9.288249505206935e17,9.292778149529311e17,9.297306793851684e17,9.301835438174058e17,9.306364082496433e17,9.310892726818808e17,9.315421371141183e17,9.319950015463557e17,9.324478659785933e17,9.329007304108307e17,9.33353594843068e17,9.338064592753056e17,9.342593237075432e17,9.347121881397805e17,9.35165052572018e17,9.356179170042555e17,9.360707814364929e17,9.365236458687304e17,9.369765103009678e17,9.374293747332054e17,9.378822391654428e17,9.383351035976803e17,9.387879680299178e17,9.392408324621554e17,9.396936968943926e17,9.401465613266301e17,9.405994257588676e17,9.41052290191105e17,9.415051546233426e17,9.4195801905558e17,9.424108834878176e17,9.428637479200549e17,9.433166123522924e17,9.437694767845299e17,9.442223412167674e17,9.446752056490048e17,9.451280700812424e17,9.455809345134798e17,9.460337989457171e17,9.464866633779547e17,9.469395278101921e17,9.473923922424297e17,9.478452566746671e17,9.482981211069046e17,9.487509855391421e17,9.492038499713795e17,9.496567144036169e17,9.501095788358545e17,9.505624432680919e17,9.510153077003293e17,9.514681721325669e17,9.519210365648044e17,9.523739009970417e17,9.528267654292792e17,9.532796298615167e17,9.537324942937542e17,9.541853587259917e17,9.546382231582291e17,9.550910875904667e17,9.555439520227039e17,9.559968164549414e17,9.56449680887179e17,9.569025453194164e17,9.573554097516539e17,9.578082741838915e17,9.582611386161289e17,9.587140030483663e17,9.591668674806038e17,9.596197319128412e17,9.600725963450788e17,9.605254607773161e17,9.609783252095537e17,9.614311896417912e17,9.618840540740285e17,9.62336918506266e17,9.627897829385036e17,9.63242647370741e17,9.636955118029784e17,9.64148376235216e17,9.646012406674534e17,9.650541050996909e17,9.655069695319282e17,9.659598339641658e17,9.664126983964033e17,9.668655628286408e17,9.673184272608782e17,9.677712916931158e17,9.682241561253532e17,9.686770205575905e17,9.691298849898281e17,9.695827494220655e17,9.700356138543031e17,9.704884782865404e17,9.70941342718778e17,9.713942071510156e17,9.718470715832527e17,9.722999360154903e17,9.727528004477279e17,9.732056648799653e17,9.736585293122028e17,9.741113937444403e17,9.745642581766778e17,9.750171226089152e17,9.754699870411525e17,9.759228514733901e17,9.763757159056276e17,9.76828580337865e17,9.772814447701025e17,9.777343092023401e17,9.781871736345774e17,9.786400380668148e17,9.790929024990524e17,9.795457669312899e17,9.799986313635273e17,9.804514957957647e17,9.809043602280023e17,9.813572246602397e17,9.81810089092477e17,9.822629535247146e17,9.827158179569522e17,9.831686823891896e17,9.836215468214271e17,9.840744112536646e17,9.84527275685902e17,9.849801401181394e17,9.85433004550377e17,9.858858689826144e17,9.86338733414852e17,9.867915978470893e17,9.872444622793268e17,9.876973267115643e17,9.881501911438016e17,9.886030555760392e17,9.890559200082767e17,9.895087844405142e17,9.899616488727516e17,9.904145133049892e17,9.908673777372265e17,9.91320242169464e17,9.917731066017014e17,9.92225971033939e17,9.926788354661765e17,9.931316998984138e17,9.935845643306514e17,9.940374287628888e17,9.944902931951263e17,9.949431576273637e17,9.953960220596013e17,9.958488864918387e17,9.963017509240762e17,9.967546153563136e17,9.97207479788551e17,9.976603442207886e17,9.981132086530259e17,9.985660730852635e17,9.99018937517501e17,9.994718019497384e17,9.999246663819759e17,1.0003775308142134e18,1.0008303952464508e18,1.0012832596786883e18,1.0017361241109257e18,1.0021889885431633e18,1.0026418529754008e18,1.0030947174076381e18,1.0035475818398756e18,1.0040004462721132e18,1.0044533107043505e18,1.004906175136588e18,1.0053590395688256e18,1.005811904001063e18,1.0062647684333005e18,1.0067176328655378e18,1.0071704972977754e18,1.0076233617300128e18,1.0080762261622502e18,1.0085290905944878e18,1.0089819550267254e18,1.0094348194589627e18,1.0098876838912001e18,1.0103405483234377e18,1.0107934127556751e18,1.0112462771879126e18,1.01169914162015e18,1.0121520060523876e18,1.012604870484625e18,1.0130577349168623e18,1.0135105993490999e18,1.0139634637813375e18,1.0144163282135748e18,1.0148691926458124e18,1.0153220570780499e18,1.0157749215102872e18,1.0162277859425247e18,1.0166806503747621e18,1.0171335148069997e18,1.0175863792392371e18,1.0180392436714746e18,1.0184921081037121e18,1.0189449725359497e18,1.019397836968187e18,1.0198507014004244e18,1.020303565832662e18,1.0207564302648993e18,1.0212092946971369e18,1.0216621591293743e18,1.0221150235616119e18,1.0225678879938493e18,1.0230207524260867e18,1.0234736168583242e18,1.0239264812905617e18,1.0243793457227991e18,1.0248322101550367e18,1.0252850745872742e18,1.0257379390195116e18,1.026190803451749e18,1.0266436678839864e18,1.027096532316224e18,1.0275493967484614e18,1.0280022611806989e18,1.0284551256129364e18,1.0289079900451739e18,1.0293608544774112e18,1.0298137189096488e18,1.0302665833418863e18,1.0307194477741236e18,1.0311723122063612e18,1.0316251766385987e18,1.0320780410708361e18,1.0325309055030735e18,1.032983769935311e18,1.0334366343675485e18,1.033889498799786e18,1.0343423632320234e18,1.034795227664261e18,1.0352480920964986e18,1.0357009565287357e18,1.0361538209609733e18,1.0366066853932108e18,1.0370595498254482e18,1.0375124142576858e18,1.0379652786899232e18,1.0384181431221608e18,1.0388710075543981e18,1.0393238719866355e18,1.0397767364188731e18,1.0402296008511105e18,1.040682465283348e18,1.0411353297155855e18,1.041588194147823e18,1.0420410585800603e18,1.0424939230122979e18,1.0429467874445353e18,1.0433996518767729e18,1.0438525163090103e18,1.0443053807412477e18,1.0447582451734853e18,1.0452111096057226e18,1.0456639740379601e18,1.0461168384701976e18,1.0465697029024351e18,1.0470225673346725e18,1.0474754317669101e18,1.0479282961991475e18,1.0483811606313848e18,1.0488340250636224e18,1.0492868894958598e18,1.0497397539280974e18,1.0501926183603348e18,1.0506454827925723e18,1.0510983472248099e18,1.051551211657047e18,1.0520040760892846e18,1.0524569405215222e18,1.0529098049537596e18,1.053362669385997e18,1.0538155338182346e18,1.0542683982504721e18,1.0547212626827095e18,1.055174127114947e18,1.0556269915471844e18,1.056079855979422e18,1.0565327204116593e18,1.0569855848438968e18,1.0574384492761344e18,1.0578913137083717e18,1.0583441781406092e18,1.0587970425728467e18,1.0592499070050842e18,1.0597027714373216e18,1.0601556358695592e18,1.0606085003017966e18,1.061061364734034e18,1.0615142291662714e18,1.0619670935985089e18,1.0624199580307465e18,1.062872822462984e18,1.0633256868952214e18,1.063778551327459e18,1.0642314157596963e18,1.0646842801919337e18,1.0651371446241713e18,1.0655900090564087e18,1.0660428734886463e18,1.0664957379208836e18,1.0669486023531212e18,1.0674014667853586e18,1.0678543312175959e18,1.0683071956498335e18,1.068760060082071e18,1.0692129245143085e18,1.0696657889465459e18,1.0701186533787835e18,1.0705715178110209e18,1.0710243822432584e18,1.0714772466754957e18,1.0719301111077332e18,1.0723829755399708e18,1.0728358399722081e18,1.0732887044044457e18,1.0737415688366833e18,1.0741944332689206e18,1.074647297701158e18,1.0751001621333956e18,1.075553026565633e18,1.0760058909978705e18,1.0764587554301079e18,1.0769116198623455e18,1.0773644842945829e18,1.0778173487268202e18,1.0782702131590578e18,1.0787230775912954e18,1.0791759420235328e18,1.0796288064557702e18,1.0800816708880078e18,1.0805345353202451e18,1.0809873997524826e18,1.08144026418472e18,1.0818931286169576e18,1.0823459930491951e18,1.0827988574814324e18,1.08325172191367e18,1.0837045863459075e18,1.0841574507781448e18,1.0846103152103823e18,1.0850631796426199e18,1.0855160440748573e18,1.0859689085070948e18,1.0864217729393322e18,1.0868746373715697e18,1.0873275018038072e18,1.0877803662360445e18,1.0882332306682821e18,1.0886860951005197e18,1.089138959532757e18,1.0895918239649946e18,1.090044688397232e18,1.0904975528294694e18,1.0909504172617069e18,1.0914032816939443e18,1.0918561461261819e18,1.0923090105584193e18,1.0927618749906568e18,1.0932147394228942e18,1.0936676038551318e18,1.0941204682873691e18,1.0945733327196067e18,1.0950261971518442e18,1.0954790615840815e18,1.0959319260163191e18,1.0963847904485564e18,1.096837654880794e18,1.0972905193130314e18,1.0977433837452689e18,1.0981962481775064e18,1.098649112609744e18,1.0991019770419813e18,1.0995548414742188e18,1.1000077059064563e18,1.1004605703386936e18,1.1009134347709312e18,1.1013662992031686e18,1.1018191636354062e18,1.1022720280676436e18,1.102724892499881e18,1.1031777569321185e18,1.103630621364356e18,1.1040834857965934e18,1.104536350228831e18,1.1049892146610685e18,1.1054420790933059e18,1.1058949435255433e18,1.1063478079577809e18,1.1068006723900183e18,1.1072535368222557e18,1.1077064012544932e18,1.1081592656867308e18,1.1086121301189682e18,1.1090649945512055e18,1.1095178589834431e18,1.1099707234156806e18,1.110423587847918e18,1.1108764522801555e18,1.1113293167123931e18,1.1117821811446304e18,1.1122350455768678e18,1.1126879100091053e18,1.1131407744413428e18,1.1135936388735803e18,1.1140465033058177e18,1.1144993677380553e18,1.1149522321702929e18,1.11540509660253e18,1.1158579610347676e18,1.1163108254670052e18,1.1167636898992425e18,1.11721655433148e18,1.1176694187637175e18,1.1181222831959551e18,1.1185751476281924e18,1.1190280120604298e18,1.1194808764926674e18,1.1199337409249048e18,1.1203866053571423e18,1.1208394697893798e18,1.1212923342216174e18,1.1217451986538547e18,1.1221980630860922e18,1.1226509275183296e18,1.1231037919505672e18,1.1235566563828046e18,1.124009520815042e18,1.1244623852472796e18,1.124915249679517e18,1.1253681141117544e18,1.1258209785439919e18,1.1262738429762295e18,1.1267267074084668e18,1.1271795718407044e18,1.1276324362729418e18,1.1280853007051793e18,1.1285381651374167e18,1.1289910295696541e18,1.1294438940018917e18,1.1298967584341292e18,1.1303496228663666e18,1.1308024872986042e18,1.1312553517308417e18,1.1317082161630789e18,1.1321610805953165e18,1.1326139450275539e18,1.1330668094597914e18,1.1335196738920289e18,1.1339725383242664e18,1.1344254027565039e18,1.1348782671887412e18,1.1353311316209787e18,1.1357839960532163e18,1.1362368604854537e18,1.1366897249176911e18,1.1371425893499287e18,1.1375954537821661e18,1.1380483182144035e18,1.138501182646641e18,1.1389540470788785e18,1.139406911511116e18,1.1398597759433535e18,1.1403126403755909e18,1.1407655048078285e18,1.1412183692400658e18,1.1416712336723032e18,1.1421240981045408e18,1.1425769625367782e18,1.1430298269690157e18,1.1434826914012532e18,1.1439355558334907e18,1.144388420265728e18,1.1448412846979656e18,1.145294149130203e18,1.1457470135624406e18,1.146199877994678e18,1.1466527424269155e18,1.147105606859153e18,1.1475584712913902e18,1.1480113357236278e18,1.1484642001558653e18,1.1489170645881028e18,1.1493699290203402e18,1.1498227934525778e18,1.1502756578848152e18,1.1507285223170527e18,1.1511813867492901e18,1.1516342511815276e18,1.1520871156137651e18,1.1525399800460024e18,1.15299284447824e18,1.1534457089104776e18,1.153898573342715e18,1.1543514377749524e18,1.15480430220719e18,1.1552571666394273e18,1.155710031071665e18,1.1561628955039025e18,1.1566157599361398e18,1.157068624368377e18,1.1575214888006147e18,1.1579743532328522e18,1.1584272176650895e18,1.158880082097327e18,1.1593329465295647e18,1.159785810961802e18,1.1602386753940393e18,1.1606915398262769e18,1.1611444042585144e18,1.1615972686907517e18,1.1620501331229893e18,1.162502997555227e18,1.1629558619874644e18,1.1634087264197018e18,1.163861590851939e18,1.1643144552841766e18,1.1647673197164142e18,1.1652201841486515e18,1.165673048580889e18,1.1661259130131267e18,1.166578777445364e18,1.1670316418776015e18,1.1674845063098388e18,1.1679373707420764e18,1.168390235174314e18,1.1688430996065513e18,1.1692959640387889e18,1.1697488284710262e18,1.1702016929032637e18,1.1706545573355013e18,1.171107421767739e18,1.1715602861999762e18,1.1720131506322138e18,1.172466015064451e18,1.1729188794966886e18,1.173371743928926e18,1.1738246083611635e18,1.174277472793401e18,1.1747303372256384e18,1.175183201657876e18,1.1756360660901135e18,1.1760889305223508e18,1.1765417949545882e18,1.1769946593868257e18,1.1774475238190633e18,1.1779003882513006e18,1.1783532526835382e18,1.1788061171157757e18,1.1792589815480133e18,1.1797118459802506e18,1.180164710412488e18,1.1806175748447255e18,1.1810704392769628e18,1.1815233037092004e18,1.181976168141438e18,1.1824290325736755e18,1.182881897005913e18,1.1833347614381501e18,1.183787625870388e18,1.1842404903026253e18,1.1846933547348626e18,1.1851462191671004e18,1.1855990835993375e18,1.186051948031575e18,1.1865048124638126e18,1.1869576768960502e18,1.1874105413282877e18,1.187863405760525e18,1.1883162701927624e18,1.188769134625e18,1.1892219990572375e18,1.1896748634894748e18,1.1901277279217126e18,1.1905805923539497e18,1.191033456786187e18,1.1914863212184248e18,1.1919391856506621e18,1.1923920500828997e18,1.1928449145151373e18,1.1932977789473746e18,1.1937506433796122e18,1.1942035078118495e18,1.194656372244087e18,1.1951092366763246e18,1.195562101108562e18,1.1960149655407992e18,1.196467829973037e18,1.1969206944052744e18,1.1973735588375117e18,1.1978264232697495e18,1.1982792877019866e18,1.1987321521342244e18,1.1991850165664617e18,1.1996378809986993e18,1.2000907454309368e18,1.200543609863174e18,1.2009964742954115e18,1.201449338727649e18,1.2019022031598866e18,1.202355067592124e18,1.2028079320243617e18,1.2032607964565988e18,1.203713660888836e18,1.204166525321074e18,1.2046193897533112e18,1.205072254185549e18,1.205525118617786e18,1.2059779830500237e18,1.2064308474822612e18,1.2068837119144986e18,1.207336576346736e18,1.2077894407789737e18,1.208242305211211e18,1.2086951696434483e18,1.2091480340756861e18,1.2096008985079235e18,1.210053762940161e18,1.2105066273723983e18,1.2109594918046356e18,1.2114123562368735e18,1.2118652206691108e18,1.2123180851013484e18,1.212770949533586e18,1.213223813965823e18,1.2136766783980605e18,1.214129542830298e18,1.2145824072625357e18,1.2150352716947732e18,1.2154881361270106e18,1.215941000559248e18,1.2163938649914854e18,1.216846729423723e18,1.2172995938559603e18,1.2177524582881981e18,1.2182053227204352e18,1.2186581871526728e18,1.2191110515849103e18,1.2195639160171476e18,1.2200167804493852e18,1.2204696448816225e18,1.22092250931386e18,1.2213753737460977e18,1.2218282381783352e18,1.2222811026105725e18,1.22273396704281e18,1.2231868314750474e18,1.2236396959072847e18,1.2240925603395226e18,1.2245454247717599e18,1.2249982892039974e18,1.2254511536362348e18,1.225904018068472e18,1.22635688250071e18,1.2268097469329472e18,1.2272626113651848e18,1.2277154757974223e18,1.2281683402296596e18,1.228621204661897e18,1.2290740690941345e18,1.229526933526372e18,1.2299797979586094e18,1.230432662390847e18,1.2308855268230843e18,1.231338391255322e18,1.2317912556875594e18,1.2322441201197967e18,1.2326969845520346e18,1.2331498489842716e18,1.2336027134165092e18,1.2340555778487468e18,1.2345084422809843e18,1.2349613067132216e18,1.235414171145459e18,1.2358670355776965e18,1.2363199000099338e18,1.2367727644421716e18,1.237225628874409e18,1.2376784933066468e18,1.2381313577388838e18,1.2385842221711212e18,1.239037086603359e18,1.2394899510355963e18,1.2399428154678339e18,1.2403956799000712e18,1.2408485443323087e18,1.241301408764546e18,1.2417542731967836e18,1.2422071376290212e18,1.2426600020612588e18,1.243112866493496e18,1.2435657309257334e18,1.2440185953579712e18,1.2444714597902085e18,1.2449243242224458e18,1.2453771886546834e18,1.2458300530869207e18,1.2462829175191583e18,1.2467357819513958e18,1.2471886463836334e18,1.2476415108158707e18,1.248094375248108e18,1.2485472396803456e18,1.2490001041125832e18,1.2494529685448207e18,1.249905832977058e18,1.2503586974092956e18,1.250811561841533e18,1.2512644262737705e18,1.251717290706008e18,1.2521701551382454e18,1.252623019570483e18,1.2530758840027203e18,1.2535287484349578e18,1.2539816128671954e18,1.254434477299433e18,1.2548873417316703e18,1.2553402061639076e18,1.2557930705961452e18,1.2562459350283825e18,1.2566987994606203e18,1.2571516638928576e18,1.2576045283250952e18,1.2580573927573325e18,1.2585102571895698e18,1.2589631216218076e18,1.259415986054045e18,1.2598688504862825e18,1.2603217149185198e18,1.2607745793507574e18,1.2612274437829947e18,1.2616803082152323e18,1.2621331726474698e18,1.2625860370797071e18,1.2630389015119447e18,1.263491765944182e18,1.2639446303764196e18,1.2643974948086572e18,1.2648503592408945e18,1.265303223673132e18,1.2657560881053693e18,1.266208952537607e18,1.2666618169698445e18,1.267114681402082e18,1.2675675458343194e18,1.2680204102665567e18,1.2684732746987942e18,1.2689261391310316e18,1.2693790035632694e18,1.2698318679955067e18,1.2702847324277443e18,1.2707375968599816e18,1.271190461292219e18,1.2716433257244567e18,1.272096190156694e18,1.2725490545889316e18,1.273001919021169e18,1.2734547834534065e18,1.2739076478856438e18,1.2743605123178813e18,1.274813376750119e18,1.275266241182356e18,1.2757191056145938e18,1.276171970046831e18,1.276624834479069e18,1.2770776989113062e18,1.2775305633435436e18,1.277983427775781e18,1.2784362922080184e18,1.278889156640256e18,1.2793420210724936e18,1.2797948855047311e18,1.2802477499369684e18,1.2807006143692058e18,1.2811534788014433e18,1.281606343233681e18,1.2820592076659185e18,1.2825120720981558e18,1.2829649365303933e18,1.2834178009626307e18,1.283870665394868e18,1.2843235298271058e18,1.284776394259343e18,1.2852292586915807e18,1.285682123123818e18,1.2861349875560556e18,1.286587851988293e18,1.2870407164205304e18,1.287493580852768e18,1.2879464452850053e18,1.288399309717243e18,1.2888521741494802e18,1.289305038581718e18,1.2897579030139553e18,1.2902107674461926e18,1.2906636318784302e18,1.2911164963106675e18,1.2915693607429053e18,1.2920222251751427e18,1.2924750896073802e18,1.2929279540396175e18,1.2933808184718548e18,1.2938336829040924e18,1.29428654733633e18,1.2947394117685676e18,1.2951922762008049e18,1.2956451406330424e18,1.2960980050652797e18,1.296550869497517e18,1.297003733929755e18,1.2974565983619922e18,1.2979094627942298e18,1.298362327226467e18,1.2988151916587046e18,1.2992680560909422e18,1.2997209205231795e18,1.300173784955417e18,1.3006266493876544e18,1.301079513819892e18,1.3015323782521293e18,1.301985242684367e18,1.3024381071166044e18,1.3028909715488415e18,1.3033438359810793e18,1.3037967004133166e18,1.3042495648455544e18,1.3047024292777917e18,1.3051552937100293e18,1.3056081581422666e18,1.306061022574504e18,1.3065138870067415e18,1.306966751438979e18,1.3074196158712166e18,1.3078724803034537e18,1.3083253447356915e18,1.3087782091679288e18,1.3092310736001664e18,1.309683938032404e18,1.3101368024646413e18,1.3105896668968788e18,1.3110425313291162e18,1.3114953957613537e18,1.3119482601935913e18,1.3124011246258286e18,1.312853989058066e18,1.3133068534903035e18,1.313759717922541e18,1.3142125823547786e18,1.3146654467870162e18,1.3151183112192535e18,1.3155711756514908e18,1.3160240400837284e18,1.3164769045159657e18,1.3169297689482035e18,1.3173826333804408e18,1.3178354978126781e18,1.3182883622449157e18,1.318741226677153e18,1.3191940911093908e18,1.3196469555416282e18,1.3200998199738657e18,1.320552684406103e18,1.3210055488383406e18,1.321458413270578e18,1.3219112777028155e18,1.322364142135053e18,1.32281700656729e18,1.323269870999528e18,1.3237227354317652e18,1.3241755998640028e18,1.3246284642962404e18,1.3250813287284777e18,1.3255341931607153e18,1.3259870575929526e18,1.3264399220251901e18,1.3268927864574277e18,1.3273456508896653e18,1.3277985153219023e18,1.32825137975414e18,1.3287042441863775e18,1.3291571086186148e18,1.3296099730508526e18,1.33006283748309e18,1.3305157019153275e18,1.3309685663475648e18,1.331421430779802e18,1.33187429521204e18,1.3323271596442772e18,1.3327800240765146e18,1.3332328885087521e18,1.3336857529409897e18,1.334138617373227e18,1.3345914818054646e18,1.3350443462377021e18,1.3354972106699392e18,1.335950075102177e18,1.3364029395344143e18,1.3368558039666522e18,1.3373086683988895e18,1.3377615328311265e18,1.3382143972633644e18,1.3386672616956017e18,1.3391201261278392e18,1.3395729905600768e18,1.3400258549923144e18,1.3404787194245514e18,1.340931583856789e18,1.3413844482890266e18,1.341837312721264e18,1.3422901771535017e18,1.3427430415857388e18,1.3431959060179766e18,1.343648770450214e18,1.3441016348824512e18,1.344554499314689e18,1.3450073637469263e18,1.3454602281791636e18,1.3459130926114012e18,1.3463659570436388e18,1.3468188214758764e18,1.3472716859081137e18,1.347724550340351e18,1.3481774147725885e18,1.348630279204826e18,1.3490831436370634e18,1.3495360080693012e18,1.3499888725015386e18,1.3504417369337756e18,1.3508946013660134e18,1.3513474657982508e18,1.3518003302304883e18,1.352253194662726e18,1.3527060590949632e18,1.3531589235272008e18,1.3536117879594383e18,1.3540646523916756e18,1.3545175168239132e18,1.3549703812561508e18,1.3554232456883878e18,1.3558761101206257e18,1.356328974552863e18,1.3567818389851005e18,1.357234703417338e18,1.3576875678495752e18,1.358140432281813e18,1.3585932967140503e18,1.3590461611462879e18,1.3594990255785254e18,1.359951890010763e18,1.360404754443e18,1.3608576188752376e18,1.3613104833074752e18,1.3617633477397125e18,1.3622162121719503e18,1.3626690766041874e18,1.3631219410364252e18,1.3635748054686625e18,1.3640276699008998e18,1.3644805343331377e18,1.364933398765375e18,1.3653862631976123e18,1.3658391276298499e18,1.3662919920620874e18,1.3667448564943247e18,1.3671977209265623e18,1.3676505853587996e18,1.368103449791037e18,1.3685563142232748e18,1.369009178655512e18,1.36946204308775e18,1.3699149075199872e18,1.3703677719522243e18,1.370820636384462e18,1.3712735008166994e18,1.371726365248937e18,1.3721792296811745e18,1.3726320941134118e18,1.3730849585456492e18,1.3735378229778867e18,1.3739906874101243e18,1.3744435518423619e18,1.3748964162745994e18,1.3753492807068365e18,1.3758021451390743e18,1.3762550095713116e18,1.376707874003549e18,1.3771607384357868e18,1.3776136028680238e18,1.3780664673002614e18,1.378519331732499e18,1.3789721961647365e18,1.379425060596974e18,1.3798779250292114e18,1.3803307894614487e18,1.3807836538936863e18,1.3812365183259238e18,1.3816893827581612e18,1.382142247190399e18,1.382595111622636e18,1.3830479760548733e18,1.3835008404871112e18,1.3839537049193485e18,1.384406569351586e18,1.3848594337838236e18,1.385312298216061e18,1.3857651626482985e18,1.3862180270805358e18,1.3866708915127734e18,1.387123755945011e18,1.3875766203772483e18,1.3880294848094856e18,1.3884823492417234e18,1.3889352136739607e18,1.389388078106198e18,1.3898409425384358e18,1.390293806970673e18,1.3907466714029107e18,1.391199535835148e18,1.3916524002673856e18,1.3921052646996232e18,1.3925581291318602e18,1.3930109935640978e18,1.3934638579963354e18,1.393916722428573e18,1.3943695868608102e18,1.394822451293048e18,1.395275315725285e18,1.3957281801575224e18,1.3961810445897603e18,1.3966339090219976e18,1.3970867734542354e18,1.3975396378864724e18,1.39799250231871e18,1.3984453667509476e18,1.398898231183185e18,1.3993510956154225e18,1.39980396004766e18,1.4002568244798973e18,1.4007096889121347e18,1.4011625533443725e18,1.4016154177766098e18,1.4020682822088474e18,1.4025211466410847e18,1.402974011073322e18,1.4034268755055598e18,1.403879739937797e18,1.4043326043700347e18,1.4047854688022723e18,1.4052383332345093e18,1.405691197666747e18,1.4061440620989844e18,1.406596926531222e18,1.4070497909634596e18,1.407502655395697e18,1.4079555198279342e18,1.4084083842601718e18,1.4088612486924093e18,1.4093141131246467e18,1.4097669775568845e18,1.4102198419891215e18,1.410672706421359e18,1.4111255708535967e18,1.411578435285834e18,1.4120312997180716e18,1.4124841641503089e18,1.4129370285825464e18,1.413389893014784e18,1.4138427574470216e18,1.414295621879259e18,1.4147484863114964e18,1.4152013507437338e18,1.415654215175971e18,1.416107079608209e18,1.4165599440404462e18,1.4170128084726838e18,1.417465672904921e18,1.4179185373371584e18,1.4183714017693962e18,1.4188242662016335e18,1.419277130633871e18,1.4197299950661087e18,1.420182859498346e18,1.4206357239305833e18,1.4210885883628209e18,1.4215414527950584e18,1.4219943172272957e18,1.4224471816595333e18,1.4229000460917706e18,1.4233529105240084e18,1.4238057749562458e18,1.424258639388483e18,1.424711503820721e18,1.425164368252958e18,1.4256172326851955e18,1.426070097117433e18,1.4265229615496707e18,1.426975825981908e18,1.4274286904141453e18,1.4278815548463828e18,1.4283344192786202e18,1.428787283710858e18,1.4292401481430953e18,1.429693012575333e18,1.4301458770075702e18,1.4305987414398075e18,1.4310516058720453e18,1.4315044703042826e18,1.4319573347365202e18,1.4324101991687575e18,1.432863063600995e18,1.4333159280332324e18,1.43376879246547e18,1.4342216568977075e18,1.434674521329945e18,1.4351273857621824e18,1.4355802501944197e18,1.4360331146266575e18,1.4364859790588948e18,1.4369388434911322e18,1.4373917079233697e18,1.437844572355607e18,1.4382974367878446e18,1.4387503012200822e18,1.4392031656523197e18,1.439656030084557e18,1.4401088945167944e18,1.440561758949032e18,1.4410146233812695e18,1.441467487813507e18,1.4419203522457444e18,1.442373216677982e18,1.4428260811102193e18,1.4432789455424566e18,1.4437318099746944e18,1.4441846744069317e18,1.4446375388391693e18,1.4450904032714066e18,1.4455432677036442e18,1.4459961321358817e18,1.446448996568119e18,1.4469018610003566e18,1.447354725432594e18,1.4478075898648315e18,1.4482604542970688e18,1.4487133187293066e18,1.449166183161544e18,1.4496190475937812e18,1.4500719120260188e18,1.4505247764582561e18,1.450977640890494e18,1.4514305053227313e18,1.4518833697549688e18,1.4523362341872061e18,1.4527890986194435e18,1.453241963051681e18,1.4536948274839186e18,1.4541476919161562e18,1.4546005563483935e18,1.455053420780631e18,1.4555062852128684e18,1.455959149645106e18,1.4564120140773435e18,1.4568648785095808e18,1.4573177429418184e18,1.4577706073740557e18,1.4582234718062932e18,1.4586763362385308e18,1.4591292006707684e18,1.4595820651030057e18,1.460034929535243e18,1.4604877939674806e18,1.460940658399718e18,1.4613935228319557e18,1.461846387264193e18,1.4622992516964306e18,1.462752116128668e18,1.4632049805609052e18,1.463657844993143e18,1.4641107094253804e18,1.464563573857618e18,1.4650164382898552e18,1.4654693027220928e18,1.46592216715433e18,1.4663750315865677e18,1.4668278960188052e18,1.4672807604510423e18,1.4677336248832801e18,1.4681864893155174e18,1.4686393537477553e18,1.4690922181799926e18,1.46954508261223e18,1.4699979470444675e18,1.4704508114767048e18,1.4709036759089423e18,1.47135654034118e18,1.4718094047734175e18,1.4722622692056545e18,1.472715133637892e18,1.4731679980701297e18,1.4736208625023672e18,1.4740737269346048e18,1.474526591366842e18,1.4749794557990797e18,1.475432320231317e18,1.4758851846635543e18,1.476338049095792e18,1.4767909135280294e18,1.4772437779602668e18,1.4776966423925043e18,1.478149506824742e18,1.4786023712569795e18,1.4790552356892168e18,1.4795081001214543e18,1.4799609645536916e18,1.4804138289859292e18,1.4808666934181665e18,1.4813195578504044e18,1.4817724222826417e18,1.4822252867148787e18,1.4826781511471165e18,1.4831310155793539e18,1.4835838800115914e18,1.484036744443829e18,1.4844896088760666e18,1.484942473308304e18,1.4853953377405412e18,1.4858482021727788e18,1.4863010666050163e18,1.486753931037254e18,1.487206795469491e18,1.4876596599017288e18,1.488112524333966e18,1.4885653887662034e18,1.4890182531984412e18,1.4894711176306785e18,1.489923982062916e18,1.4903768464951534e18,1.490829710927391e18,1.4912825753596285e18,1.4917354397918659e18,1.4921883042241032e18,1.4926411686563407e18,1.4930940330885783e18,1.4935468975208156e18,1.4939997619530534e18,1.4944526263852908e18,1.4949054908175278e18,1.4953583552497656e18,1.495811219682003e18,1.4962640841142408e18,1.496716948546478e18,1.4971698129787154e18,1.497622677410953e18,1.4980755418431903e18,1.4985284062754278e18,1.4989812707076654e18,1.499434135139903e18,1.49988699957214e18,1.5003398640043779e18,1.5007927284366152e18,1.5012455928688527e18,1.5016984573010903e18,1.5021513217333274e18,1.5026041861655652e18,1.5030570505978025e18,1.50350991503004e18,1.5039627794622776e18,1.504415643894515e18,1.5048685083267523e18,1.5053213727589898e18,1.5057742371912274e18,1.506227101623465e18,1.5066799660557025e18,1.5071328304879398e18,1.5075856949201772e18,1.5080385593524147e18,1.508491423784652e18,1.5089442882168899e18,1.5093971526491272e18,1.5098500170813645e18,1.510302881513602e18,1.5107557459458394e18,1.5112086103780772e18,1.5116614748103145e18,1.512114339242552e18,1.5125672036747894e18,1.513020068107027e18,1.5134729325392643e18,1.5139257969715018e18,1.5143786614037394e18,1.5148315258359764e18,1.5152843902682143e18,1.5157372547004516e18,1.5161901191326892e18,1.5166429835649267e18,1.517095847997164e18,1.5175487124294016e18,1.518001576861639e18,1.5184544412938765e18,1.518907305726114e18,1.5193601701583516e18,1.5198130345905887e18,1.5202658990228262e18,1.5207187634550638e18,1.521171627887301e18,1.521624492319539e18,1.5220773567517763e18,1.5225302211840138e18,1.5229830856162511e18,1.5234359500484884e18,1.5238888144807263e18,1.5243416789129636e18,1.524794543345201e18,1.5252474077774385e18,1.525700272209676e18,1.5261531366419133e18,1.526606001074151e18,1.5270588655063885e18,1.5275117299386255e18,1.5279645943708634e18,1.5284174588031007e18,1.5288703232353385e18,1.5293231876675758e18,1.5297760520998129e18,1.5302289165320507e18,1.530681780964288e18,1.5311346453965256e18,1.5315875098287631e18,1.5320403742610007e18,1.5324932386932378e18,1.5329461031254753e18,1.533398967557713e18,1.5338518319899505e18,1.534304696422188e18,1.534757560854425e18,1.535210425286663e18,1.5356632897189002e18,1.5361161541511375e18,1.5365690185833754e18,1.5370218830156127e18,1.53747474744785e18,1.5379276118800876e18,1.538380476312325e18,1.5388333407445627e18,1.5392862051768e18,1.5397390696090373e18,1.540191934041275e18,1.5406447984735124e18,1.5410976629057498e18,1.5415505273379876e18,1.542003391770225e18,1.542456256202462e18,1.5429091206346998e18,1.543361985066937e18,1.5438148494991747e18,1.5442677139314122e18,1.5447205783636495e18,1.545173442795887e18,1.5456263072281244e18,1.546079171660362e18,1.5465320360925996e18,1.546984900524837e18,1.5474377649570742e18,1.547890629389312e18,1.5483434938215493e18,1.5487963582537866e18,1.5492492226860244e18,1.5497020871182615e18,1.5501549515504993e18,1.5506078159827366e18,1.5510606804149742e18,1.5515135448472118e18,1.551966409279449e18,1.5524192737116864e18,1.552872138143924e18,1.5533250025761615e18,1.5537778670083988e18,1.5542307314406367e18,1.5546835958728737e18,1.555136460305111e18,1.5555893247373489e18,1.5560421891695862e18,1.556495053601824e18,1.5569479180340613e18,1.5574007824662986e18,1.5578536468985362e18,1.5583065113307738e18,1.558759375763011e18,1.5592122401952486e18,1.559665104627486e18,1.5601179690597233e18,1.560570833491961e18,1.5610236979241984e18,1.5614765623564362e18,1.5619294267886735e18,1.5623822912209106e18,1.5628351556531484e18,1.5632880200853857e18,1.5637408845176233e18,1.5641937489498609e18,1.5646466133820982e18,1.5650994778143355e18,1.565552342246573e18,1.5660052066788106e18,1.5664580711110482e18,1.5669109355432858e18,1.5673637999755228e18,1.5678166644077606e18,1.568269528839998e18,1.5687223932722353e18,1.569175257704473e18,1.5696281221367101e18,1.5700809865689477e18,1.5705338510011853e18,1.5709867154334228e18,1.5714395798656604e18,1.5718924442978977e18,1.572345308730135e18,1.5727981731623726e18,1.5732510375946102e18,1.5737039020268475e18,1.5741567664590853e18,1.5746096308913224e18,1.5750624953235597e18,1.5755153597557975e18,1.5759682241880348e18,1.5764210886202724e18,1.57687395305251e18,1.5773268174847473e18,1.5777796819169848e18,1.5782325463492221e18,1.5786854107814597e18,1.5791382752136973e18,1.5795911396459346e18,1.580044004078172e18,1.5804968685104097e18,1.580949732942647e18,1.5814025973748844e18,1.5818554618071222e18,1.5823083262393592e18,1.582761190671597e18,1.5832140551038344e18,1.583666919536072e18,1.5841197839683095e18,1.5845726484005466e18,1.5850255128327841e18,1.5854783772650217e18,1.5859312416972593e18,1.5863841061294966e18,1.5868369705617344e18,1.5872898349939715e18,1.5877426994262088e18,1.5881955638584466e18,1.588648428290684e18,1.5891012927229217e18,1.5895541571551588e18,1.5900070215873964e18,1.590459886019634e18,1.5909127504518712e18,1.5913656148841088e18,1.5918184793163464e18,1.5922713437485837e18,1.592724208180821e18,1.5931770726130588e18,1.593629937045296e18,1.5940828014775337e18,1.594535665909771e18,1.5949885303420083e18,1.5954413947742461e18,1.5958942592064835e18,1.596347123638721e18,1.5967999880709586e18,1.5972528525031956e18,1.5977057169354332e18,1.5981585813676708e18,1.5986114457999084e18,1.599064310232146e18,1.5995171746643832e18,1.5999700390966205e18,1.600422903528858e18,1.6008757679610957e18,1.601328632393333e18,1.6017814968255708e18,1.602234361257808e18,1.6026872256900454e18,1.603140090122283e18,1.6035929545545203e18,1.604045818986758e18,1.6044986834189952e18,1.6049515478512328e18,1.6054044122834703e18,1.605857276715708e18,1.6063101411479452e18,1.6067630055801828e18,1.60721587001242e18,1.6076687344446574e18,1.6081215988768952e18,1.6085744633091325e18,1.60902732774137e18,1.6094801921736074e18,1.6099330566058447e18,1.6103859210380826e18,1.6108387854703199e18,1.6112916499025574e18,1.611744514334795e18,1.6121973787670323e18,1.6126502431992696e18,1.6131031076315072e18,1.6135559720637448e18,1.614008836495982e18,1.6144617009282196e18,1.614914565360457e18,1.6153674297926948e18,1.615820294224932e18,1.6162731586571694e18,1.6167260230894072e18,1.6171788875216443e18,1.6176317519538819e18,1.6180846163861194e18,1.618537480818357e18,1.6189903452505943e18,1.6194432096828316e18,1.6198960741150692e18,1.6203489385473065e18,1.6208018029795443e18,1.6212546674117816e18,1.6217075318440195e18,1.6221603962762565e18,1.6226132607084938e18,1.6230661251407316e18,1.623518989572969e18,1.6239718540052065e18,1.6244247184374438e18,1.6248775828696814e18,1.6253304473019187e18,1.6257833117341563e18,1.6262361761663939e18,1.6266890405986314e18,1.6271419050308687e18,1.627594769463106e18,1.6280476338953439e18,1.6285004983275812e18,1.6289533627598185e18,1.629406227192056e18,1.6298590916242934e18,1.630311956056531e18,1.6307648204887685e18,1.631217684921006e18,1.6316705493532434e18,1.6321234137854807e18,1.6325762782177183e18,1.6330291426499558e18,1.6334820070821934e18,1.6339348715144307e18,1.6343877359466683e18,1.6348406003789056e18,1.635293464811143e18,1.6357463292433807e18,1.636199193675618e18,1.6366520581078556e18,1.637104922540093e18,1.6375577869723305e18,1.638010651404568e18,1.6384635158368054e18,1.638916380269043e18,1.6393692447012803e18,1.6398221091335178e18,1.6402749735657551e18,1.640727837997993e18,1.6411807024302303e18,1.6416335668624676e18,1.6420864312947052e18,1.6425392957269425e18,1.6429921601591803e18,1.6434450245914176e18,1.6438978890236552e18,1.6443507534558925e18,1.6448036178881298e18,1.6452564823203674e18,1.645709346752605e18,1.6461622111848425e18,1.6466150756170798e18,1.6470679400493174e18,1.6475208044815547e18,1.647973668913792e18,1.6484265333460298e18,1.6488793977782671e18,1.6493322622105047e18,1.649785126642742e18,1.6502379910749796e18,1.6506908555072172e18,1.6511437199394545e18,1.651596584371692e18,1.6520494488039293e18,1.652502313236167e18,1.6529551776684042e18,1.653408042100642e18,1.6538609065328794e18,1.6543137709651167e18,1.6547666353973542e18,1.6552194998295916e18,1.6556723642618294e18,1.6561252286940667e18,1.6565780931263043e18,1.6570309575585416e18,1.657483821990779e18,1.6579366864230164e18,1.658389550855254e18,1.6588424152874916e18,1.6592952797197286e18,1.6597481441519665e18,1.6602010085842038e18,1.6606538730164416e18,1.661106737448679e18,1.6615596018809162e18,1.6620124663131538e18,1.662465330745391e18,1.6629181951776287e18,1.6633710596098662e18,1.6638239240421038e18,1.6642767884743409e18,1.6647296529065784e18,1.665182517338816e18,1.6656353817710536e18,1.6660882462032911e18,1.6665411106355284e18,1.666993975067766e18,1.6674468395000033e18,1.6678997039322406e18,1.6683525683644785e18,1.6688054327967158e18,1.669258297228953e18,1.6697111616611907e18,1.6701640260934282e18,1.6706168905256658e18,1.671069754957903e18,1.6715226193901407e18,1.671975483822378e18,1.6724283482546156e18,1.6728812126868529e18,1.6733340771190907e18,1.673786941551328e18,1.674239805983565e18,1.674692670415803e18,1.6751455348480402e18,1.6755983992802778e18,1.6760512637125153e18,1.676504128144753e18,1.6769569925769902e18,1.6774098570092275e18,1.677862721441465e18,1.6783155858737027e18,1.6787684503059402e18,1.6792213147381773e18,1.679674179170415e18,1.6801270436026524e18,1.6805799080348897e18,1.6810327724671276e18,1.6814856368993649e18,1.6819385013316024e18,1.6823913657638397e18,1.6828442301960773e18,1.683297094628315e18,1.6837499590605522e18,1.6842028234927895e18,1.684655687925027e18,1.6851085523572646e18,1.685561416789502e18,1.6860142812217398e18,1.686467145653977e18,1.6869200100862141e18,1.687372874518452e18,1.6878257389506893e18,1.688278603382927e18,1.6887314678151644e18,1.6891843322474017e18,1.6896371966796393e18,1.6900900611118766e18,1.6905429255441142e18,1.6909957899763517e18,1.6914486544085893e18,1.6919015188408264e18,1.6923543832730642e18,1.6928072477053015e18,1.693260112137539e18,1.6937129765697766e18,1.6941658410020137e18,1.6946187054342515e18,1.6950715698664888e18,1.6955244342987264e18,1.695977298730964e18,1.6964301631632013e18,1.6968830275954386e18,1.6973358920276762e18,1.6977887564599137e18,1.6982416208921513e18,1.6986944853243889e18,1.699147349756626e18,1.6996002141888635e18,1.700053078621101e18,1.7005059430533384e18,1.7009588074855762e18,1.7014116719178135e18,1.7018645363500508e18,1.7023174007822884e18,1.7027702652145257e18,1.7032231296467635e18,1.7036759940790008e18,1.7041288585112381e18,1.7045817229434757e18,1.7050345873757133e18,1.7054874518079506e18,1.7059403162401882e18,1.7063931806724257e18,1.7068460451046628e18,1.7072989095369006e18,1.707751773969138e18,1.7082046384013755e18,1.708657502833613e18,1.70911036726585e18,1.709563231698088e18,1.7100160961303252e18,1.7104689605625628e18,1.7109218249948004e18,1.711374689427038e18,1.711827553859275e18,1.7122804182915126e18,1.7127332827237501e18,1.7131861471559875e18,1.7136390115882253e18,1.7140918760204623e18,1.7145447404527002e18,1.7149976048849375e18,1.7154504693171748e18,1.7159033337494126e18,1.71635619818165e18,1.7168090626138872e18,1.7172619270461248e18,1.7177147914783624e18,1.7181676559105997e18,1.7186205203428372e18,1.7190733847750746e18,1.719526249207312e18,1.7199791136395497e18,1.720431978071787e18,1.7208848425040248e18,1.7213377069362621e18,1.7217905713684992e18,1.722243435800737e18,1.7226963002329743e18,1.723149164665212e18,1.7236020290974495e18,1.7240548935296868e18,1.724507757961924e18,1.7249606223941617e18,1.7254134868263992e18,1.7258663512586368e18,1.7263192156908744e18,1.7267720801231114e18,1.7272249445553492e18,1.7276778089875866e18,1.7281306734198239e18,1.7285835378520617e18,1.7290364022842988e18,1.7294892667165363e18,1.729942131148774e18,1.7303949955810115e18,1.730847860013249e18,1.7313007244454863e18,1.7317535888777236e18,1.7322064533099612e18,1.7326593177421988e18,1.733112182174436e18,1.733565046606674e18,1.734017911038911e18,1.7344707754711483e18,1.734923639903386e18,1.7353765043356234e18,1.735829368767861e18,1.7362822332000986e18,1.736735097632336e18,1.7371879620645734e18,1.7376408264968108e18,1.7380936909290483e18,1.738546555361286e18,1.7389994197935232e18,1.7394522842257605e18,1.7399051486579983e18,1.7403580130902356e18,1.740810877522473e18,1.7412637419547108e18,1.7417166063869478e18,1.7421694708191857e18,1.742622335251423e18,1.7430751996836605e18,1.743528064115898e18,1.7439809285481354e18,1.7444337929803727e18,1.7448866574126103e18,1.7453395218448479e18,1.7457923862770852e18,1.746245250709323e18,1.74669811514156e18,1.7471509795737974e18,1.7476038440060352e18,1.7480567084382725e18,1.7485095728705103e18,1.7489624373027476e18,1.749415301734985e18,1.7498681661672225e18,1.7503210305994598e18,1.7507738950316974e18,1.751226759463935e18,1.7516796238961723e18,1.7521324883284096e18,1.7525853527606474e18,1.7530382171928847e18,1.7534910816251223e18,1.75394394605736e18,1.754396810489597e18,1.7548496749218348e18,1.755302539354072e18,1.7557554037863096e18,1.7562082682185472e18,1.7566611326507843e18,1.7571139970830218e18,1.7575668615152594e18,1.758019725947497e18,1.7584725903797345e18,1.758925454811972e18,1.7593783192442092e18,1.7598311836764467e18,1.7602840481086843e18,1.7607369125409216e18,1.7611897769731594e18,1.7616426414053965e18,1.762095505837634e18,1.7625483702698716e18,1.7630012347021092e18,1.7634540991343468e18,1.763906963566584e18,1.7643598279988214e18,1.764812692431059e18,1.7652655568632965e18,1.7657184212955338e18,1.7661712857277716e18,1.7666241501600087e18,1.767077014592246e18,1.7675298790244838e18,1.7679827434567212e18,1.7684356078889587e18,1.7688884723211963e18,1.7693413367534336e18,1.7697942011856712e18,1.7702470656179085e18,1.770699930050146e18,1.7711527944823836e18,1.771605658914621e18,1.7720585233468582e18,1.772511387779096e18,1.7729642522113334e18,1.7734171166435707e18,1.7738699810758085e18,1.7743228455080456e18,1.7747757099402834e18,1.7752285743725207e18,1.7756814388047583e18,1.7761343032369958e18,1.776587167669233e18,1.7770400321014705e18,1.777492896533708e18,1.7779457609659456e18,1.778398625398183e18,1.7788514898304207e18,1.7793043542626578e18,1.779757218694895e18,1.780210083127133e18,1.7806629475593702e18,1.781115811991608e18,1.781568676423845e18,1.7820215408560827e18,1.7824744052883203e18,1.7829272697205576e18,1.7833801341527951e18,1.7838329985850327e18,1.78428586301727e18,1.7847387274495073e18,1.7851915918817452e18,1.7856444563139825e18,1.78609732074622e18,1.7865501851784573e18,1.7870030496106947e18,1.7874559140429325e18,1.7879087784751698e18,1.7883616429074074e18,1.788814507339645e18,1.789267371771882e18,1.7897202362041196e18,1.790173100636357e18,1.7906259650685947e18,1.7910788295008323e18,1.7915316939330696e18,1.791984558365307e18,1.7924374227975444e18,1.792890287229782e18,1.7933431516620193e18,1.7937960160942572e18,1.7942488805264942e18,1.7947017449587318e18,1.7951546093909693e18,1.7956074738232067e18,1.7960603382554442e18,1.7965132026876815e18,1.796966067119919e18,1.7974189315521567e18,1.7978717959843942e18,1.7983246604166316e18,1.798777524848869e18,1.7992303892811064e18,1.7996832537133437e18,1.8001361181455816e18,1.800588982577819e18,1.8010418470100564e18,1.8014947114422938e18,1.801947575874531e18,1.802400440306769e18,1.8028533047390062e18,1.8033061691712438e18,1.8037590336034813e18,1.8042118980357187e18,1.804664762467956e18,1.8051176269001935e18,1.805570491332431e18,1.8060233557646684e18,1.806476220196906e18,1.8069290846291433e18,1.807381949061381e18,1.8078348134936184e18,1.8082876779258557e18,1.8087405423580936e18,1.8091934067903306e18,1.8096462712225682e18,1.8100991356548058e18,1.8105520000870433e18,1.8110048645192806e18],"cosine":[1.0,-0.4893256757618757,-0.5869843187742857,0.9669843652719138,-0.46795316656242764,-0.5556727801915762,0.9412373818962331,-0.3895382640382172,-0.7992312391026811,0.983598588439949,-0.06324488271312602,-0.2598415605388933,0.5248929027165818,0.6986836942176156,-0.8910717884987964,0.9895131472310316,-0.37981930652932056,-0.805515145020825,0.7700395372706854,-0.5250363944186774,-0.698563069236116,0.8634452297456232,-0.9894887814327309,0.3799752578767154,0.20377956864433294,0.9005044934399565,-0.6400160235215296,0.9795824356656541,-0.04221607956922786,-0.9591314628784521,0.5068535268838358,0.7135935590472687,-0.8525436668994876,-0.3005910370326063,0.9981606730535025,-0.8178143622139766,0.756434558482531,0.4513705159667846,0.20410966355222146,0.9003578199235055,-0.6402750645531665,-0.5901857704315998,0.9261820756648385,0.14151018002404042,-0.994734647820146,0.3403747183521067,0.8298450092392944,-0.7423812020123931,-0.4702091094824519,-0.817620273718421,0.00022553633712735167,0.4510696107780334,0.46981096519593935,0.021337108716404908,-0.8295932289945842,-0.34079882278287293,0.9946883188693748,0.841440215650844,-0.926352070387603,-0.9966765508207214,-0.8528959330442745,0.9180149535898902,0.9982013286940886,-0.6239155602347362,0.9093438820012506,0.18339699065700013,-0.9981879173416368,0.3001607944895794,0.852779336001795,-0.713277483012531,-0.3206593193988434,0.959003729403347,0.728224474288002,0.48854166299002444,-0.9648914589339689,0.7704347323449342,0.9751197689167109,-0.45126888390311837,-0.7565090462114036,0.817748814659618,0.36036239010265464,0.7422315837646786,0.12035334500226487,-0.8808647307215832,-0.5728248131678667,-0.14173122009706374,0.8908669729310011,0.5903660109699641,0.16304319024820071,-0.9004549624611502,0.8741768815046987,-0.10649579638721278,0.9096242409018835,-0.8635026756320208,0.08503106615519461,0.5251333213644543,0.8524269414640917,-0.06352679652162026,-0.5066610305464151,-0.41298806176822017,0.04199298696068967,0.7925837604026847,-0.9549578981519299,-0.020439650682653677,0.703432750439227,0.9483373582664814,-0.2868275014888719,0.8181367755168774,-0.9412758420024606,-0.9924043782553786,0.6721340253341199,0.9337766329612593,-0.24525722564409622,-0.6512686477920823,-0.9258432182711831,0.9315153107306932,0.6674799425206374,-0.9931559424547659,-0.20323082490026498,-0.68338085942293,-0.280817405461184,-0.45745311922618587,0.698964004580867,-0.9871967434784967,0.4381725761386518,-0.7142221318400516,0.035729869238950704,-0.41868828303101047,-0.5012473049230308,-0.9794015740683921,0.3990093000894275,0.5197889647518147,-0.9977461273513498,-0.37914477803073987,-0.5380889229822169,0.9989610426661131,-0.6125987710702228,-0.9031634592439955,-0.9997114416153767,0.595413396792359,-0.5739298131116403,0.9999969752640192,-0.5779511555945306,-0.3342640246265311,0.1265732425112266,0.560220167409816,0.354508609825239,-0.9685731234698692,-0.7523951358664359,-0.3745883487046802,0.973711172231123,0.7664237440532328,0.39449390419671476,-0.9783964458035024,0.7325057504505038,0.1346344602344984,0.982626765537232,-0.7176564739507096,-0.15596943070444932,0.3061337021872836,0.7024734875636237,0.17723187547020808,-0.9066241294676505,-0.6869638513700227,-0.19841190750601254,-0.9925693938976411,-0.8561514899641142,0.07067614768917337,0.7747407342534467,0.8448105060859614,-0.240485381473735,0.9320049980506726,-0.833076685761679,0.027603084312110625,-0.9396035703003974,0.8209554852116174,-0.28211160513084593,-0.8139954657630553,0.9436710113037724,-0.015521314775907897,0.8263313019659293,-0.936316864864028,0.25219753761455943,-0.8382828945429824,-0.782324850576371,-0.05861684760680891,0.8498446860098797,0.9939673414995103,0.2102415258996304,0.6781320885195291,-0.9913713356456856,-0.18911198685915315,0.8717775444623778,-0.9025836339147046,0.16789451084310195,0.7091885571552564,0.8930907732103112,-0.14659896396679373,0.4950341391360714,0.9808232948485571,-0.40556939851896273,0.7389260898934001,-0.9763927234037669,0.3857655080737308,0.5320354322068827,0.9715081298502011,0.082343076230682,0.7672893814148907,0.9995136516789941,-0.6011549777103152,0.5680472555192719,-0.9999536792300742,0.5837838411585274,0.32750214877304074,-0.9541539790370103,0.3048494518907832,0.6030026349434044,-0.9994388121111952,-0.2842423488371274,0.3679349849079402,-0.9720539830808564,-0.5300746140123127,-0.3878994501215945,-0.9970652069833169,0.5116673492998117,0.40768354229260345,-0.9812716833505049,-0.49302215953589207,-0.42727806182839295,-0.9928372782338096,-0.7075551790882731,-0.17017530567391304,-0.9886644325046914,0.6921532916028491,0.19138381691667217,-0.912605334836737,-0.6764295531966663,0.48483353634428805,-0.9942184816438562,0.6603912753999095,0.23352403871125288,-0.929383984958732,0.8370189242928318,-0.0347651006775223,0.937126966133885,0.6274010755908076,0.27522995677307105,-0.9444341837569796,0.8126490962390548,-0.29589577767748143,0.9513022399756198,0.9388090221309133,-0.02991622164498499,0.8343545131151613,0.7867679182708516,0.05146220808789758,-0.8460464356767621,0.9230855275594552,-0.07298426463080349,-0.9692405336428314,0.7594235237292775,0.09447238352859913,0.6886436439323135,0.9056452954200336,-0.17495394205357379,-0.704118569603261,0.9860171753443259,0.1373068609596402,-0.8888284056281803,0.8865207607371549,-0.13234107579593812,0.8985025998934736,0.9779154163243402,-0.39236643121477127,0.7485508391874361,-0.9731814466519851,-0.08948208402791315,-0.7626744695697703,0.9679949481128747,-0.35234386160123293,0.7764434567202536,-0.962358332426133,-0.04645667511789645,0.5798380731360465,-0.9999886060918622,-0.3116660093232037,-0.597270989993137,0.9996531768361319,-0.5542139626490353,-0.8155593753916134,0.9427750318255527,-0.27040852630578144,-0.6312956544551611,0.9975881758260389,-0.5178106556283603,-0.4011301320863599,0.9798662183493164,0.4992435687283226,-0.6641462468142886,0.9936678785864355,-0.48044433382837304,-0.440251519988446,-0.9910141378298444,0.46142169256296683,-0.6957616721401483,-0.99072373041129,0.6816895981751503,-0.47855413617203785,0.9934235597552414,-0.6657550174074323,-0.22655070579506073,-0.9956614476603679,-0.4031022804508542,-0.5159667461326496,0.9974363535099569,0.829053811438215,-0.2683341768958795,0.9420546487207226,-0.8168039267029641,-0.5524197705830782,0.9995941333915266,-0.5989971708332102,-0.3096186050061061,0.9556420282536296,-0.7911705898316995,-0.04430492627233604,0.9998928864004228,-0.9258176262909147,-0.35032721010201273,0.6675303631219551,-0.7640658483790819,-0.6221777949856946,0.8646674631015803,-0.5277853801661923,0.18200439035732233,0.9774629664667134,-0.9871859402485561,-0.13020574787172093,0.885522087892609,-0.889813377829279,-0.4297153264838993,0.9856559429654129,-0.705646430079651,0.398947208533365,0.9047298349132042,-0.9977506688387457,0.09661649742044101,0.7580203986548969,-0.9697684095760869,-0.21513840275877452,0.9222549819470364,-0.8471927725117991,0.053613201278327735,0.7854365594916405,-0.9583453628587226,0.31846656444863003,0.5915086785169903,-0.9998162149596912,0.010510196285815065,0.8113919797917014,-0.9451400029771029,-0.29847135990974677,0.6257223343037094,-0.9980599240936394,0.5239273752749212,0.39455612609062934,-0.930176889017824,0.23561790872286176,0.9644248977566299,-0.9944474596492842,-0.07567425517896388,0.4338065382353059,-0.9134838491063422,0.702425292839764,0.1772985176288782,-0.9889855400218764,0.4486000082921964,0.8800252000349198,-0.9925776311212554,0.15101727645394328,0.2195657407668146,-0.9816843231895641,0.8447742724243342,0.5098155093932262,-0.8750353326140147,0.6384957895825512,0.7503367339539015,-0.9396267444454626,0.3699370005848552,-0.005974576275472565,-0.9993643418209054,0.604719539765512,0.3027973056288802,-0.9616217080258317,0.3295365654095611,0.5820336616841404,-0.8383198129976418,0.5698186436172259,-0.23120742348510703,-0.9656140375688979,0.768668942519611,0.08019623328996972,-0.9987201110678391,0.533858009185522,0.383777370256238,-0.975925195340308,0.7403756894033224,0.12309794944665382,-0.8821703035489487,0.8930603079795693,-0.1465319806724015,-0.9844213452967953,0.7107054991317457,0.16577073029014647,-0.9906497291480492,0.8728307545928183,-0.10374595009602773,-0.7533274076307905,0.971492078853629,0.2081352137637191,-0.9194612686072278,0.42029557018078145,-0.0607669747006351,-0.9959088227329936,0.9603672994262314,0.2501126111764487,-0.5857159963774405,0.9999279181107771,-0.017674985997975196,-0.8071829237502758,0.6139972898566458,-0.28417742669797535,-0.9499154249370592,0.9984804275644827,0.025449874320120146,-0.3879618618438633,0.9327835313648138,0.33259473772445647,-0.6533644952049649,0.7761008450339739,-0.4929632456164467,-0.8550364956367983,0.9852087217303925,-0.20052259032901668,-0.6853969882720303,0.9900207251515102,0.11147748652489374,-0.8765995397164222,0.8982638946521291,-0.6763796793860721,-0.7161547925658396,0.9830242464845329,-0.41617555373675846,-0.5036380964778719,0.9963084469338571,-0.11537673455269463,-0.7455807052849587,0.974199557317256,-0.376584618764597,-0.540417589778923,0.9990832384789698,-0.61041085973055,-0.29596045930300824,0.9513231114607765,-0.336293318611476,-0.5761920243383267,0.999999953304416,-0.02937297568378825,-0.3368688572314698,0.9511345650130429,-0.7732325698077177,-0.07305179842069098,0.999056886520743,-0.5399032275809829,-0.8253328272653535,0.9743373159117074,-0.2539105180197609,-0.11598383063014693,0.996255792026293,-0.8962613844763166,-0.4167312299528038,0.9209972518639732,-0.7157280774301511,-0.6768297338408336,0.898532322365556,-0.46538105428121135,0.11087007599714058,0.9901066715655074,-0.973165867444721,-0.20112133818916095,0.9851038034396751,-0.8547193876196586,-0.4934949276046878,0.7764861277613553,-0.6529016686934738,0.33201827193612715,0.9330036560369935,-0.8315439294830532,0.024838868198428572,0.9985139227290258,-0.6196372793390754,-0.28476337425051024,0.6144795997791959,-0.8068219811670062,-0.018286086554118154,0.8278854399722104,-0.9353422804928401,0.249520791023114,0.9605374842831838,-0.7805995200984842,-0.06137703317760074,0.851298770377976,-0.919220785153258,0.20753736077894952,0.6801617258859415,-0.9910050782523037,0.4613616164507831,0.8731288709127968,-0.9013897398228993,0.16516795634997988,0.9809290746986323,-0.9843136969807224,-0.1471365553123484,0.49743482456220095,-0.9956677462085686,0.12249137557903099,0.7407863952154845,-0.6934301448311383,0.38321290142972225,0.9118800054516452,-0.9987508377988049,0.07958698758986689,0.2891084170623229,-0.9654549576881392,-0.2318020188717338,0.5703208027536638,-0.837986443512222,0.5815365472506929,0.7959028228543293,-0.9617892285129811,0.30221474250188646,0.06590361275000998,-0.9993423659884431,-0.006585763586757753,0.3705047704119619,-0.9394174158651962,0.749932556931399,0.6389660648046982,-0.8753310257445232,0.5092896093063918,0.41020691951517796,-0.9818005823484507,0.21896941508534176,0.6715375827231997,-0.9925031161303592,0.879734760599934,0.44914617329792234,-0.9890758202351222,0.6901548867232699,0.19409713615839483,-0.9137323602073238,0.43325576291352935,0.4872501132487555,-0.994511593015401,0.1340959037969672,0.23621185620293358,-0.9304010936668734,0.83550269850892,-0.03200147506187885,-0.7986406969167941,0.625245453911722,0.27788727376093675,-0.9453394842025175,0.35400037051033384,0.011121359899812631,-0.9998277456586204,0.9378530050244416,-0.25645319322593535,-0.9585197496689707,0.7850581157421195,0.5958499551424273,-0.8475173356870698,0.5556869034889441,-0.21454147534578763,-0.9699173776497707,0.9919385487832287,0.09722481932575383,-0.9977095111320383,0.9044693036703729,0.3995075878529488,-0.706079372198475,0.7287761014691778,-0.4291633549687374,-0.8900921169284111,0.8852379609442209,-0.1295997273581042,-0.9872832874933714,0.698575224473638,0.1826053472742279,-0.5283044207128166,0.8643602688617332,-0.6216991854981937,-0.7644600137434293,0.9672972750171799,-0.3497546786354696,-0.9260484687025096,0.8418750553724991,-0.04369431882542744,-0.791544248839508,0.9554618328084838,-0.3090373816665594,-0.5994864775165233,0.9995765348131651,-0.5519101923709583,-0.8171563844300502,0.9418494401719394,-0.2677453426318575,-0.9551190315152293,0.9973924302641539,-0.5154430911434397,-0.40366154724578074,0.9804145516302478,-0.7256627321274771,-0.6662109519053887,0.9933533935296455,-0.478017378289702,-0.8637766515413235,0.9879941853914811,-0.1837451411529878,-0.18706296832492136,0.9107974592946434,-0.4397026574654689,-0.4809802813238169,0.8906199556284448,-0.6636891885037443,-0.7279817028406567,0.9277507604026448,-0.40057018568721536,0.0391624388285111,0.9976304132070793,-0.09837867180864565,-0.2709969053135768,0.9701989661127827,-0.8152055382610511,-0.5547226057173571,0.8197624648335341,-0.5967806724218327,-0.7843394235265153,0.9564528004248803,-0.3201444861749047,-0.047067205868111195,0.9998485924874625,-0.9247689362323582,0.7225344335474627,0.9457169184873622,-0.7622790140570233,-0.6243401969849653,0.8660532229496983,-0.5254346933934255,0.1792847148771492,0.9780429749694126,-0.9867409173473646,-0.13294687444840378,0.9946322295879461,-0.8885481635151937,-0.4322105285452346,0.7310839174719037,-0.7036844361842292,0.3964100999253481,0.905904296833234,-0.9979322153244077,-0.8791829104166435,0.992360746666355,-0.9690899270394937,-0.21783799420920613,0.558490814188902,-0.8457204416557681,0.59313501781636,0.8758910404352505,-0.9577668919952369,0.31584415348957123,0.9390193671294632,-0.3715814173907819,0.0077451446177001235,0.35715607815083944,-0.06706045848997114,0.7593354070613588,0.6278768970501508,-0.8683119768315759,-0.5805929523549598,0.8373532003010904,-0.9789781821065051,-0.8034442277238886,0.9651522011700024,-0.9941526677862038,0.8864580910814864,0.998808099521009,-0.7341710913334542,0.7004544811057175,0.6925942957626422,-0.7415647205647864,0.44612697574440974,-0.08934719739933177,-0.49844028049135775,0.14828324821358807,0.22226258921969116,-0.5622475326912202,-0.16402435871504986,0.5121923861982834,-0.7899344492509958,-0.46033266315105975,0.7521617932359919,-0.9405693943723694,0.9996496011595815,0.9187636581131713,-0.9994590988858264,0.9427298671241165,0.9957472626262127,-0.960859329412902,0.7938541551405432,-0.5176947919355401,-0.8285351937264963,0.5675441348467748,-0.2285162989072777,-0.6153938837248584,0.2858745913549604,0.08295218457944382,-0.44037311427707027,-0.023679798618651413,0.3863293266098853,-0.6958589407807637,0.7385141340200454,0.6520230427965913,-0.7772161903121533,0.993439056909828,0.8541169743196719,-0.9849037682289199,0.9802672336821995,0.16849700282459373,-0.9902686907785606,0.8714779538880167,-0.6328598297962482,-0.8990405922863137,0.6776827669886987,0.7149178882854306,-0.9205449623342407,0.4177848885865331,-0.058006688246382304,-0.30974737638471206,0.9595928726309838,0.2527889332984366,-0.9745976360893054,0.8422777555210527,0.5389269573844742,-0.808812118103126,0.6118123758954848,-0.28152517904448343,-0.950775926781449,0.998324229032664,-0.9086039022715691,-0.9999989268722398,0.9317832975676571,0.33520120919123586,-0.6554553468963742,0.774354141011266,-0.4905555294796126,-0.8564671519681926,0.9856787899126351,-0.197812822532413,-0.9739372370986212,0.9896272682117356,0.11422498917489585,-0.46836685371815845,0.8970452912594972,-0.674340403147601,-0.7180819774662627,0.9223073279568224,0.6755252572604593,-0.8977537804418341,0.9965420153400354,-0.11262959554666069,-0.25717478038749025,0.9735717675847003,-0.8234216725185053,-0.9854067345488803,0.8114711309794765,-0.6082182810992479,-0.7753691888578764,0.6542417803081634,-0.3336879193623785,-0.03274771213126437,0.38903020134938165,-0.9301271628921205,-0.33947111408734953,0.6588741661516907,0.2830656256143535,-0.6130817449627172,0.8587997093068178,0.565129289824327,-0.8268910123868968,0.9749560096652036,-0.9889654857991107,-0.9600434826179438,0.472369536534769,-0.8950315350987202,-0.9995511661550546,0.9199165083648045,-0.7137942083469547,0.40952588569710513,0.7540893826590729,-0.4629317994043876,0.10812153540487503,0.2615553365563757,-0.16691398823894432,-0.20382923106883935,0.5465461255737443,0.14538498634031327,-0.4958980388489947,0.7782255841415956,-0.9535478541030238,-0.7395958437415278,0.694704824114468,-0.9999710703730049,-0.9111518172682209,0.9986607990770863,-0.9488548738136479,0.7685823086828659,0.9659148119755908,-0.8051852524661953,0.5337434889526347,0.838951335594014,-0.5829760622539161,0.24684213655883058,0.12323234740631911,-0.3039020841587273,-0.06413674945052766,0.4233568412018287,-0.9181285082612624,-0.36885959359274134,0.9400228644697189,-0.9017127851746458,-0.6376030486891461,0.8744735212908531,-0.9911047190314518,0.16244013895825796,0.981462778502639,-0.9838220837823195,0.8509067911854273,0.9927179630344132,-0.8805752439438799,-0.4475635036830887,0.7426410363753305,-0.6914351269986349,0.3806573646832449,-0.017539577900915614,-0.9988851882016156,0.0768302904151847,0.994324781545075,-0.964730747843691,-0.23449098207183924,0.5725899892309259,-0.8364743144671267,0.5792848068284887,0.7975738779287515,-0.962542628437418,0.9951626858771653,0.9447606282431935,-0.9992382787462953,-0.009350842659444044,0.37307172298176233,-0.9384659943586655,0.7481004942313899,0.6410906828759978,-0.8766647029433162,0.5069079752093651,0.8465762249236958,-0.9823219743540704,0.216270519503335,0.1543540533031759,-0.9921613652014282,0.8784166591304071,0.451615015070271,-0.7456709504719798,-0.39788379113936595,0.7048244390479423,-0.9148523990452689,0.43076194418211344,-0.07230714454379758,-0.9947971002043541,0.9635268360682434,0.9870002647468584,-0.5763027071941863,0.8339800843479195,0.5268002478447561,-0.8652493056922095,0.6230850515135081,-0.2952471972237496,-0.66839319139683,0.9990509969636524,0.01388631058950382,-0.3772761770742386,0.04546316861716062,0.3216653166362603,-0.6445651277461577,-0.26492115218133333,0.5980683688761126,-0.8489817554545975,0.9831609606533137,0.8161344959185026,-0.158833869553459,0.991584355388041,0.9545930404215651,-0.9975186496242897,0.9032863962147698,-0.6848531251318475,-0.9271502954943474,0.72687986338981,-0.4266641435696224,-0.766345629648574,0.47957184433878863,-0.1268573879816049,-0.24329983819114326,0.18548531589665088,0.18532332071704985,-0.5306501775451518,0.8030131412427198,0.4794271785728283,-0.8914237412808055,0.9476950174635919,0.7267666380595852,-0.9270885140515651,0.9999366038766722,-0.9352943646867502,-0.997507029944426,0.9546421393994884,-0.78051486549066,-0.970626481017718,0.8162297473162229,0.55324852662922,0.20740487846984346,0.5982004816594388,-0.26508011173748103,-0.10448852064114543,0.9971890584923698,0.045298485101733545,-0.9998778354301221,0.7112305463909862,0.35125856647606224,-0.6682705630491097,0.7634238434962648,-0.4755867677595234,-0.8651666460516303,0.9884176013856771,-0.9757620795571742,-0.9776724410191919,0.9870267463399793,0.1311917741472739,-0.4834027488292941,0.8893590967576736,-0.6616182849344526,-0.7298747067822355,0.9287791738903606,-0.3980350281047475,-0.9051530547920722,0.99781684487465,-0.09562654514888629,-0.2736575616488928,0.9695252309987366,-0.813600916637136,-0.5570211993606253,0.8213429505346515,-0.5945596109372521,-0.7860517445171277,0.9572562594166911,-0.317523632130248,-0.04982912558107551,0.9997966535844238,-0.9237131752538691,-0.35550169002444915,0.6716379255254914,-0.7604863512369868,-0.6264978251868359,0.8674323608269036,-0.5230799890693537,0.17656366855955455,0.978615505211007,-0.9862883496793158,-0.13568698449364003,0.4873683739218163,0.07666592329377887,-0.43470242586100416,0.732967759612579,-0.7017170618136301,0.3938699603071326,0.9070718320751515,-0.9981061314728942,-0.8804971069253797,0.27801736625151724,-0.9684040346981231,-0.2205359200381457,0.9814943597810217,-0.8442416442962745,0.5909065081935896,0.874553475360625,-0.958558341707286,0.3132193275394449,0.054358740913530594,-0.3690128173206382,0.0049800337290649924,0.35973749974891156,-0.06430126251906848,-0.3037450237000785,0.6300266589570608,-0.8696802297023359,-0.5828421127416088,-0.17209735025320602,-0.9795384361047375,-0.8050874796349958,0.9658721248870316,-0.993850274484927,0.8851749595523224,0.9986693143516052,-0.9112197361447814,0.6984783135932077,0.9340540671781888,-0.7397067884476201,0.44365053204384564,-0.08659275076147575,-0.4960411875900598,0.14554808617760634,0.22495773821996848,-0.9806157056155023,-0.1667514452692209,0.9905135518540639,-0.7916270039039659,-0.4627856681067337,0.7539811013778699,-0.9415048525667059,0.9995725847971557,0.9198518545087895,-0.9995462139387947,0.9418039225977666,0.9959982021673612,-0.9600896039275605,-0.2510754345588486,-0.5153270340036307,-0.826983708446783,0.565265286550007,-0.22582342706006076,-0.9670370396874276,0.2832237327087859,0.9502257613627505,-0.4428540362183998,-0.0264440969380379,0.38887832903241637,-0.9324245946985033,0.7366469318485749,0.6541170952243165,-0.8847612036591737,0.993751490722535,0.8555518181992332,-0.9853786604413007,0.19954813418974326,0.17122198700605984,-0.9898800806683377,0.870118489734008,0.46680172585214147,-0.7569528701476281,0.6756468005331613,0.7168485812015479,-0.9216216174384495,0.4152710125472937,-0.055245958264419956,-0.9963933326258928,0.95881110864684,0.25546332255888776,-0.590189443993657,-0.19765122402442029,0.5412541400185193,-0.8104351281590091,0.6096227839264946,-0.2788707788078737,-0.9516291588526136,0.9981603971662752,0.931723440667062,-0.39305307736471196,0.9307759392177244,0.3378051176600396,-0.6575411868793495,0.7726015161623753,-0.48814406248271447,-0.8578912596251892,0.9861413214492036,-0.1951015422297389,-0.17568900615074212,0.2529484290189494,0.11697161844375255,-0.4708081799705446,0.8958198289260185,-0.6722959708027653,-0.7200036718057806,0.923372419619331,0.677561532144258,0.05071655467343697,0.9967679640387128,-0.10988159535809675,-0.9902457348997308,0.9729365337785523,-0.8218494875206499,-0.984932291417078,0.8130839699175856,-0.6060210519410967,0.2745120876296683,0.6521480256092286,-0.331079968686143,-0.03551126805500783,0.3864813756497097,-0.023844605424512513,-0.3420707752969298,0.6609517507774159,0.28571661393552156,0.48418039519735745,0.8602130514427317,0.5674083962842807,-0.8284428749775756,0.975567248760988,-0.9885520566075002,-0.9608136459226772,0.9957624365449135,-0.8937948421777543,-0.9994645067240225,0.9188287310480837,-0.7118548814877693,0.407001664888323,0.7522704178276268,-0.4604790048826216,0.10537216809937346,0.9908675251113712,-0.16418697711348573,-0.9811218977123416,0.5488596647968117,0.1481202153102633,-0.4982973583836213,0.7799590900940269,-0.6487027935805679,-0.7414541134503794,0.9349795627768444,-0.9999462142653905,-0.9122877773712397,0.9988000395171124,-0.07859554569680935,0.7668103539946841,0.9651953283946165,-0.8035423671999681,0.531403097157819,0.8309747137467914,-0.580727167072292,-0.7965045584989198,0.1259759639884462,-0.3012665413233054,-0.06689597532439129,0.9993058084347176,-0.9170292112230275,-0.37142836242698446,0.6842053832884482,-0.9029048167333948,-0.6397307970312751,0.8758114853151512,-0.50843344615347,0.15971107952523098,0.9819889778972177,-0.983322948134892,-0.1526044217291608,0.502224766707034,-0.8792614485258394,-0.45003454666454495,0.7444899991920778,-0.6894348223509822,0.37809891737431023,0.9141360134517159,-0.9990119009806795,0.07407300578474935,0.2943981389854843,-0.13311026261935024,-0.2371781523192468,0.5748547976005228,-0.8349557896158235,0.5770286371090549,0.7992388346354512,-0.9632886686186902,-0.7621723026024971,0.07142088930288626,-0.9991265511806182,-0.012115850234205658,0.9998457103007926,-0.9375073972024718,0.7462627114444608,0.9565009059846684,-0.8779916770342524,0.5045224652190581,-0.1552318961615574,-0.5548597619979534,0.21356997028497945,0.15708548857966265,-0.9918120280600945,-0.09821461681333113,0.4540804037274827,-0.7475105683574551,-0.4004191307084666,-0.37389597699918126,-0.9159654427865902,0.4282648317812218,0.8905449767299977,-0.9950750010276853,0.9627831620637289,0.987440904771096,-0.9771227199845808,0.832451093451963,-0.5733182357933895,-0.8638597052680005,0.6209198849149216,-0.2926041727923524,-0.6663338844411038,0.3488227632399427,0.016651155102412364,-0.3798355555046948,0.042700689727867315,-0.7432357977039361,-0.646676768189003,-0.2675865044830602,0.6002822096906772,-0.8504396837821754,0.9836625127398408,0.817729259085271,-0.971248812150344,0.991222580192353,0.9554131691774495,-0.9973201609415502,0.9020965820979093,-0.6828355838867582,-0.9261106725333225,0.7249780674796011,-0.4241616698334207,-0.8925991125908423,0.4771435720582371,0.8642773568044043,-0.24598098218639983,0.18276742635043694,0.1880398771503778,-0.5329918769478191,0.8615660082228987,0.4818520031074838,-0.7680135529602351,0.9485739720261713,0.7286632078917273,-0.9281214707448534,0.3996587084205379,-0.03816862508477395,-0.997698346209431,0.9538151466556347,-0.7787832744512114,-0.603903684371833,0.8146291155541943,0.5555498382375882,0.2046990492997775,0.595982340078219,-0.26241285400140135,-0.9567426257825441,0.9969780620656975,0.0480606376892146,-0.4087150988651387,0.713171623893394,0.3538461873790075,-0.6703250644973602,0.7616349112424394,0.6251167892153849,0.11961211021438278,0.9888334597928419,-0.17830618344878718,-0.9782497602973953,0.2363720412571007,-0.8592545859678746,-0.48582152016592495,0.8880914377158345,0.4331071794769874,0.3403067672588741,0.929800485795274,-0.39549682708764006,-0.9063250264010099,0.4492934567899751,-0.9524428184650603,-0.2763161255580561,0.9688440827515147,0.21880855946330655,0.5434882049627368,0.8229171561262054,-0.5923340033620325,-0.7877580552399525,0.6390928670790149,-0.9966154521143503,-0.6836000534282353,0.9997370700884394,-0.00675061327565353,-0.9993363747174905,0.6736840114049979,-0.7586878736259376,-0.6286506630937622,0.7960026182809296,-0.9894992290896234,-0.830512854901816,0.9791805528138459,-0.5406454692015927,-0.9654119887309945,0.28926622664922436,-0.8859973627013292,-0.43719099937779277,0.9119476582549186,-0.9314603718310406,0.3913268091010014,0.9082324317118098,0.9541291098460419,-0.8818045710231318,0.28067245388626605,-0.9677107377964095,-0.22323215961685372,-0.5396752191072343,0.1650053649380982,-0.9907553076103659,0.7905439124773392,-0.6355977039349562,0.9962323385475726,0.6802825643873891,-0.9996227805647134,0.002214884762356107,-0.6695478186371648,-0.06154157489121129,0.755725227336743,0.632171603587042,-0.7932489640491132,0.9901446411747853,0.8279778945113154,-0.9800912004073483,-0.8597896603764545,0.9665846634030741,-0.49373048804481395,-0.9496726169294826,0.44126582484037036,0.331762766561716,-0.38724647635912,0.9330629686225018,-0.9101211517328505,0.4411706961257586,0.8839346337799656,-0.49363830188454516,0.9665574838896885,0.22765116716013903,0.8223218909187598,-0.1694772568172018,-0.5850008465379941,-0.7933135056598913,0.6320894644826159,-0.9958287292472544,-0.6769510797256094,-0.7156129375736754,0.7194276340426892,-0.9996256863137158,0.6803602567991448,0.9962415261590847,-0.6356795382580477,0.7904789901107692,0.17487214707116808,-0.8254258999274378,0.980981684342925,-0.22312882853355231,-0.967737452290544,0.2805707084921013,0.9510836492172599,-0.33702407058898787,-0.9310789504633855,0.391424358033782,0.38296270649536707,-0.3361380621934908,-0.4370956594983829,-0.8860465111316281,0.4896886197167228,0.8569801204031742,-0.5405562895444714,0.9791590292603575,0.1739456619989131,-0.9894839017887507,-0.11521298055423373,-0.6285682208978695,0.05607437616134172,0.6736056679823517,-0.9993325078338463,-0.7162698408284208,0.9997394951755061,0.7564104233281053,-0.9966241606279649,0.11164131082594794,0.9899974802616109,-0.5924194073307871,-0.1604254474146259,0.5435771841434329,-0.8551219716635584,0.968870331676794,0.8843742199865391,-0.9524751146266144,0.3327502014322367,-0.9062802256516916,-0.39559418683861314,-0.9096868736469851,0.34040644322099883,-0.9499669298721745,-0.28401936610503964,-0.4857288630641851,0.9641913445352107,0.5367347565154293,0.8274499048931243,-0.17841048855363056,0.9888176568895057,0.11971735333033061,-0.9959237059761452,0.761703598767773,-0.6702463979835965,0.0012739801463340571,0.7130973116181074,-0.9998327361501577,-0.7534358124871289,0.9969862913022522,-0.642656101723873,-0.9906272247623622,0.16593330053272462,0.9807779410462403,-0.5473787264293596,0.8527617142562464,0.49676144804707456,0.2718521014522692,-0.87743922066022,0.9086257668912686,-0.9343500592330541,0.39975587698669734,0.9115611947036584,-0.3446678209828169,0.9485404102792734,-0.8902155362017719,-0.965656883000485,-0.23104703377725627,-0.5329021811098996,-0.8299884031716197,0.5821677067017088,-0.9881310688007942,0.8015241327633534,-0.7580745805644485,0.06512922739759044,-0.9993702052396887,0.7250510765588776,-0.7099101116809746,-0.6829130242183181,-0.043423717726989663,-0.9973279107317431,-0.7883372902756836,0.9912365888449608,-0.5997032463188229,-0.9816529028462129,0.5511690073577811,-0.8503839127719226,-0.5006928678630161,0.8801034813840654,0.44845266737361056,0.3241820139311182,0.9359567964222993,-0.37973749317729755,0.926383446958484,-0.917488407560355,0.8876585413441784,-0.2927055365326042,0.9644684647875417,0.23545769348694826,0.529058642176401,0.8325098258940477,-0.18732903843368728,-0.7981734216211056,0.6258509189788284,-0.995064487720684,-0.06965468970174286,0.9991989730761152,-0.7281673755723481,0.7067083065880726,0.04900043506636933,-0.7474401504592447,-0.6418536538972017,0.7855385835113633,-0.9918255599728092,0.15698079891769062,-0.8150486349484277,-0.21529939291172226,-0.9697281677106873,0.5046139868011319,-0.8779409301448415,-0.45250214861535915,-0.3198878718621849,-0.9375442779415942,-0.9284713380204748,0.9152535373222986,-0.4298641773569705,0.9456288571758652,0.297039633536792,-0.9632602043270645,0.8661886072188943,-0.8294040017896975,0.18184228795795848,0.5747680553433987,0.8008976802439239,-0.6223068462610821,0.9946041665078009,0.07417871898278937,-0.9990071841456974,-0.014880765169386112,0.9998904600016933,-0.6895116028336139,-0.9972508820832178,0.6453251971886623,0.09359423435246231,-0.5988651561830194,0.818270485436468,-0.9833422214992009,0.21086778807907344,0.970825766606096,-0.5085247241912753,0.8757603168103891,0.4565423204188314,0.9355876506851192,-0.40295140861372686,-0.3713299389258616,-0.9170714829207904,0.42576444480414494,-0.9441438835654581,-0.4786988804833272,-0.8633853579959954,0.2442643898768482,-0.976530899597893,0.8375012375276621,0.9875891202752466,-0.8036054618012903,0.6187499706711463,-0.0686102835865206,-0.664269482598038,0.9987948423941564,0.019415872298128578,-0.9999473080791413,0.6927896477688705,0.9975767197002509,-0.6487834640457242,-0.991691429408598,0.6024914606587675,0.14801537895036937,-0.5540767354325956,-0.2064318450114271,-0.9719033924636331,0.26412100219870244,0.9562259927030682,-0.46057309966457666,0.900899870417286,0.40709849031810963,-0.925063968393251,-0.35218957540461443,-0.4216559528944162,0.2960398121935552,0.47471165146742966,-0.9607842565025785,-0.24866024537471984,0.9755439539096287,-0.8399711237493064,-0.9868665761192741,-0.13217767065519825,0.9947122308193228,-0.7697815208324958,0.08322210621108193,0.7305542062573128,-0.023950579979342905,0.9999835839940646,0.7451178500765047,-0.9978820339254585,0.6522283833206105,-0.7770457287197714,-0.60610536992914,0.8130222550175764,0.5578469020298039,-0.8461343090212733,-0.5076230057730561,-0.2597435898178652,0.8713450836756547,0.31658038573509517,-0.8989219599119374,-0.41123719668487335,0.9233317186027383,0.3564311027217189,-0.9444883583169232,0.8958669342841111,-0.47071465609167745,-0.8679267789186763,0.5222320854620648,-0.9745369381150619,-0.5719095660110413,0.9861237289139007,-0.8089713712283697,-0.9942361694319152,0.7726688133593473,0.9988456775965264,-0.733643958044308,0.7010081366878876,0.6920342992031802,0.030872047028348233,-0.7352647985665383,-0.09012011935404264,-0.9928175689827142,0.6097068096442902,0.9839703852039249,-0.5616055919051492,0.8437081810911918,-0.973998636795409,0.25536083366811,-0.45964358651146886,-0.3122746606011074,-0.9403055624549993,0.36808826904940345,-0.9215804728811142,0.9224119692272112,0.9429884411806195,0.3046924413235415,-0.9610740351579512,0.8701707285389205,-0.5183585998155441,-0.8394025771197414,0.19965200593056828,-0.9853605939419051,-0.6160053984347734,0.9937396533786464,-0.7755402095801858,-0.99861752980706,0.7367186163932608,-0.6977662318592656,-0.6953013869218571,0.739037155814978,0.6514344439935326,0.08560188635579359,0.9933500062358965,-0.1445640477147147,0.8077071189135304,-0.9864779611908862,0.9727186856155247,-0.5154178765688678,0.8718582945944273,0.4636670846775125,0.30796251096352995,0.9418395521772199,-0.41948914299309714,-0.9202415305439009,0.41848984229041397,-0.9414691237106042,-0.3090093975908349,0.9598109587614886,-0.8723967759222097,0.26181675615711536,-0.19417863126800805,-0.5644445875033831,-0.8083555034862386,0.14565296136177297,-0.9932226928744636,-0.08669835692731236,-0.6505990475760427,0.02743829339892124,-0.9999974888187484,0.6985541700336613,0.021803669174030166,-0.6548690482273071,-0.08108189224882979,-0.9938620070544715,-0.8109859788326435,0.9855476244702754,-0.19857348066852007,0.8388039020521391,0.5192994462755057,-0.8696278991857571,0.961377528484946,-0.4766006354803123,0.41441488871222154,0.3596385895460192,0.9220071390636957,-0.4143660605947693,0.9399304371641699,0.31331999653159964,0.4586658951114809,-0.25642475289801575,0.9737487103190294,-0.844298454189934,0.5606946411082117,0.8110173672673314,-0.1501388549766981,0.9926852985549227,0.6548285006305166,-0.9980996049305357,-0.03197206585570558,0.9999973671433791,-0.7017925816182838,0.7328956442917354,-0.9988979376180818,-0.7719696983024524,-0.6124684636372393,-0.13558195926137265,-0.9863058382400558,0.19412600075579206,-0.8363258518401097,-0.5231703323065924,-0.9598260145089346,0.4716853810176544,-0.8953773872804173,0.9448493703691486,-0.3554026078964221,-0.9237537789032804,0.3733230121943404,-0.30801355440416567,-0.4636195483388698,0.9572255930778519,0.2608062207150134,-0.972706237737512,0.8467203628765575,-0.5569331594039388,-0.813662545788156,0.6052296329684428,0.7777380005077773,-0.09573206364971033,-0.739073297819922,0.036505180543295754,0.6879546537343162,0.02285031906483491,0.9986203485313626,-0.6616977679638771,0.7690785576345291,0.616047661024466,0.13108668478058236,0.987043760496634,-0.18967452704098514,0.5184044798011465,0.24759410047571445,-0.86511348141539,-0.475680014229365,0.8933483649691585,-0.946325136917125,-0.918435768088476,-0.3681381531227487,-0.4060930076530388,-0.9013769984708233,0.32192176783409904,0.8740968155782214,-0.2651823229013257,0.9716437534307265,0.5615611996363827,-0.9839608160252097,0.8162909846288023,-0.6016127092810322,-0.7805811286691478,0.10024600918540129,0.7421210982799774,-0.04103754420080558,-0.7010463973676119,-0.018315505889125158,0.7266938209075005,0.07760402606139596,-0.766171594523809,-0.6196141843112644,0.8029499619535075,0.5719535763456575,0.1852191511053656,0.9767673443419587,-0.2431970173213735,-0.9623319271302071,0.30031804214856633,-0.8913009635817156,-0.3563809745239888,0.916632108284928,-0.927190009196598,0.4019439066105109,0.9033318712492208,-0.4555628719489016,-0.8762910785816201,0.507576780086375,0.8461629023883164,-0.21194347589730497,-0.5493758998473784,0.15358725469769946,-0.992258044530177,0.7834081977424913,0.9978785424872896,-0.745153630899694,0.045569063582799996,-0.9998735650891489,0.013780315903996719,0.9990556084728428,-0.07308114403458216,-0.9947177394641237,0.13212448977644226,-0.8002381772652156,0.9884586701621321,0.8344080548307568,-0.9777293218622489,0.23879493081483044,0.9635551987898091,-0.29598856523635203,-0.9459862397780779,0.4308576074722613,-0.9148095903830036,-0.37655736048757266,0.9371608620501677,-0.9052681595582976,-0.9562102913533644,0.8784673134325933,-0.27391807037161753,-0.8485714163841402,0.2163740143511433,0.81568579882459,-0.158067620811064,0.9916845262914963,0.0992043171524553,0.6410093242638726,-0.9968173960341437,-0.6854184138290356,-0.707486531824424,-0.009244842413031393,0.664309585715502,0.0685567584913726,0.9951730942708726,-0.6267089153459814,0.7975099290795892,0.18624784587828888,-0.8318995989868694,-0.5299922425614615,0.8633582871921467,-0.9647586469907239,0.48760486844924233,0.9474470336895428,-0.34789050280828,-0.9267973373760091,0.38075538692205485,-0.9355687053142073,-0.32522294355486436,-0.4474687061225857,-0.8806254753589247,-0.9708129003479354,0.8509624725109837,-0.22080010128903338,-0.8183013248880503,0.16254473496029112,-0.9910906058825378,-0.10371668456666204,0.997246905125143,0.044523215431363276,0.6821086503480447,0.7106847991596313,-0.7242926857236196,0.999408653567706,-0.6751912915494255,0.6223488422727401,0.12312714987068495,0.9882995311509079,-0.18178953076448207,0.8293740282674116,0.5338331285587173,0.22997611010705443,-0.482723248269867,0.8897136474799103,-0.9488883355395727,0.34363448738838237,0.9284912630407658,-0.3849455799820795,0.9339573008925907,0.45245430359256744,-0.9535159156834315,-0.27291105070462285,-0.49580598350988897,-0.8533360215770596,0.5464573509853505,-0.9805625974479054,-0.5951834182219207,-0.78557178256226,0.10822691819194391,-0.9969003081801007,-0.049054021971400075,-0.6787848536776036,-0.713868445401233,-0.9992011186418633,0.6710627617431716,-0.7609900550608326,0.9960223731131184,-0.11862463394035802,-0.9889811844448482,0.5867411672766536,-0.5291041692227995,-0.23540555015540351,0.8587453969904102,0.4866905807295526,-0.8876338334656683,0.9503101156759095,-0.33937140229144613,-0.930166086625831,0.39458316304640023,0.9067448594823238,-0.3337878465009719,-0.8801289528429199,0.2772718249446166,0.49186187613308285,0.8556920147507575,0.9816426713605136,-0.823481818206688,0.5915324030037526,0.7883702978201316,-0.11273492523815246,0.9965332017592138,-0.7571298399328916,0.7099478969436109,0.005756075256274593,-0.7180081984672942,-0.6744186755105529,0.7580395897385396,-0.9964162796761922,0.11411967751618791,-0.5822113281590096,-0.1728617723333085,-0.9793819549700776,0.5414818737179428,-0.8564124273017093,-0.49064790038391826,-0.2786106557122961,0.3446174565690343,-0.9115391338345739,0.9318217736746464,-0.3904113724024688,-0.908648171025586,0.33806004134162226,-0.9507430727449203,-0.2816268948029892,0.9674595677468264,0.2242015092051418,0.5388376609242573,-0.1659862079469888,-0.5878692180436043,0.989186555919884,0.634829570989569,0.7534710883656056,-0.05811251425736849,0.9995949711984182,-0.001220328764098026,0.7148437648001881,0.6777607142962325,-0.7550735290808579,-0.11966408759430587,0.7926429883197921,-0.990283437766224,0.16839251268891722,0.9802881828787536,-0.5452895755203923,-0.9668391377379805,0.2839679237160993,-0.8834194640722536,-0.44215809892798397,-0.33082437403210335,0.3881632430656125,0.3862315497291098,0.9105327887259818,0.9524587701517317,-0.8843992620489827,0.28597617068181463,-0.9663019515727308,-0.22861949757324115,-0.5350111481857616,0.17045734317230463,0.584193938705083,-0.11169462669101789,-0.6313184739411337,0.9957374911219811,0.6762187228600478,-0.9994556071622714,-0.0033154428342030994,0.9996524015188823,-0.05602080907214875,0.7520919341092851,0.6364469754509231,-0.7898694435745874,-0.5895627863009144,0.8248640536504588,-0.9811742430769349,-0.8569524699370391,0.9679875630960102,-0.4985321758247084,0.8812849953963416,0.44622184434481377,-0.9077713337694913,-0.39233936634339006,0.9310593761317745,0.33707458270661284,0.43620092350757567,-0.9478919907221831,-0.48882122558100266,-0.8574922411609386,0.23303278249604653,0.8254561855306162,-0.17492497153666992,-0.5805066406006169,-0.7966682989460218,0.6277943886220705,-0.057067340928732176,-0.6728702665237258,-0.7194648975375358,0.7155754611825899,-0.9997617006572279,0.6844028921830024,0.9967053201105357,-0.11065291567584083,0.787079648650563,0.5932203592898556,-0.822291360863045,-0.5444117061475715,-0.21773453386889963,-0.969116073807229,0.2752582445052655,0.9527776020439958,-0.4502764095296155,-0.9330822663983058,0.39650741792664523,0.37784815242767444,-0.3413414356434694,-0.43211493385319816,0.2849728256595172,0.48485927078442426,0.8598170561502577,-0.5358953322789916,0.9780208777172776,-0.8336390848163115,-0.9886688498963028,-0.12070469862263883,-0.6242573875342559,0.06159512453142469,0.6695079670615018,0.7226077143290552,-0.012386688088392432,0.999850431451596,0.7527814970582558,-0.9970629539186427,0.1061438686225807,0.9907625845929305,-0.5968657278100756,-0.15496431561483748,0.5482107858482899,-0.8522418350434193,-0.49762436587627457,-0.27089486564006526,-0.9541451714655986,0.327529950158734,-0.9039288308747201,-0.40066731206502515,-0.9119696704733066,0.3456012660788064,0.42802005419174044,-0.28931758398806307,-0.480887340858517,-0.8621241819112769,0.5320603461498755,0.8305427375206454,-0.5813587753014862,0.9879778030414266,0.12520605598647128,-0.9954096444164144,0.7652751784530896,-0.07621440709307518,0.006804263467396559,0.7092093015084091,0.6836392103016435,-0.7497879949961489,0.9974000749047545,-0.10163263784533963,0.7814515381797486,0.160477122516017,0.9818420561931661,-0.5519985870733395,0.8498601932058036,0.50155353394025,0.26652591358800004,0.9554931110233267,0.9063023530086621,-0.9363065319442238,0.3788172460560777,-0.9260084567894168,-0.34985398637408194,0.9467746993697301,-0.8927211965896181,-0.964205227732665,-0.23642417200036256,-0.5282144138120687,-0.8330604091489795,0.5776622841071501,-0.987266430275604,-0.129704837455242,-0.7616696766110049,0.07064679697661867,-0.9991586790537146,0.7288486843999614,-0.7060043027460502,-0.6869424687083296,-0.037897962876123875,0.10718480694817098,-0.7849227503106143,0.9919519761238975,-0.15599849480213912,-0.9826923915217626,0.5557750318953516,-0.8474610669848842,-0.5054723834197045,0.877464332748788,0.45338883457041224,0.3189454149223129,-0.3997078881750259,-0.3746156304608057,0.9242866684311251,0.4289659853340186,0.8901916859343976,-0.29798915477585036,0.9629926197823026,0.24082891329136963,0.5243576143888854,0.8355609420201097,-0.5739539085242098,0.12416731504488585,0.6215280254572296,-0.9945004965202044,-0.07517049959683106,0.998962383165229,-0.7319467092823319,0.7027847791830923,0.04347602168951834,-0.7437547760554596,-0.6460846283112639,-0.09260399640458403,0.5996613511257197,0.15151665769276332,-0.8118319521846806,0.8504114580159512,-0.9710637674000511,0.5093808336911811,-0.875279764932816,-0.4574269539809197,-0.314643260502964,-0.9394537464258593,0.37040630780579975,-0.34887304424674553,-0.4248643248960865,0.9438156766568432,0.47782544312547615,-0.9617601999473295,0.8689389509993379,0.976316211509726,0.1872776115730676,0.5702337248459902,0.8041969874778966,-0.6179683523613291,-0.767516311504777,0.07969265571582056,-0.9987455353773218,-0.7067453459167509,0.9999570231891787,-0.6935065199433447,0.7407151832997779,0.6495399745318045,0.08808677148953604,-0.6032849440886683,0.8150789670038628,-0.9843323935821142,0.20545860736207594,-0.8426105591830906,-0.2631616314060735,0.8730771897704236,0.4614556626339158,0.9375260646893301,-0.40800670200760025,-0.36618936469049274,-0.9192625185936584,0.4207539236196401,-0.9423070239522499,-0.4738360656168922,0.9605079935826231,0.5252487695716647,-0.975324863308096,0.8405103860680988,0.9867054297448715,-0.8068846037168783,0.6143959656501436,0.7704159734883392,-0.6601254574276092,0.9985081401512559,0.024944840181374335,-0.9999887881430146,0.03441137858689583,0.9979462359266897,-0.6529819576062929,-0.9923876799033599,0.6068961255217108,0.14254372417540848,-0.5586720529077587,-0.2010174982977517,-0.9731902541911653,0.2587830395876586,0.9578296992595372,-0.3156368261961786,0.8984857910183582,-0.9425236508508664,-0.9229493486430687,-0.35736016285710537,-0.41663486606897837,0.3013176996667936,0.4698369397620971,-0.9592360264501335,-0.2540130474009188,0.9743134495075685,0.5710934311876346,-0.9859581327295716,-0.13765743395793065,0.994129049105803,-0.7732997855141185,0.08873195634213003,0.734319430796113,-0.700298518163766,0.9999999800809464,-0.029877948478514667,-0.998226518150907,0.08912956439081227,-0.7735528263684717,-0.6104948211311215,-0.9841472599003606,0.5624282159436346,0.19657225365087033,-0.5123800413316298,-0.25439912376196244,0.868618199032402,0.3113296847779907,0.9406435764802138,-0.36716335668566275,0.9211939424967702,0.36159273768869954,-0.9426569607803299,0.8983104741112975,-0.31525801788974916,-0.8706603666508698,0.5175078344571401,-0.973281990916209,-0.5673642169255172,0.9851905513545005,0.14214859943523067,0.6072133456243376,0.7761676882527389,0.9985647574854258,-0.7373907711488388,0.6970534599336569,0.6960158495981338,0.025343903683732485,-0.7315052232395559,-0.0846109372774719,-0.9934640220029503,0.14357986625708288,-0.8071203444178568,-0.5661728080051467,0.840726598258968,-0.9752366546619599,0.2500099741203663,-0.46454804261452054,-0.3070161382974337,0.8944664396362807,0.36294061102439673,-0.9194195844003554,-0.36581787338374383,0.9411333935743873,0.3099551274594999,-0.9595313642036359,0.8728824824859346,-0.5136213568062469,-0.8423955190518133,0.20506791767627167,0.5552364435163045,-0.6116395233743841,0.9931066073797444,0.08768912649315988,-0.9983115607126632,0.7404469409794122,-0.693794061050845,0.999960644411337,0.7353002816474632,0.6556203534701465,0.08009056944245652,0.9939715403132184,-0.13908962312767456,0.8044341869365795,0.5699057520538793,0.9739867745942347,-0.5201491305410474,0.8691364484498079,-0.9616507880937568,0.30269627549816297,0.9436836803003043,-0.42450292175342913,-0.9223917486906034,0.4134606987743137,-0.9395904641990848,-0.31426432057360115,0.9582442151053006,-0.8750866402944617,0.5097243122965371,-0.19960070629040685,-0.5598708477916816,-0.8115988041622435,0.15112206467758488,-0.9925647340121844,-0.09220651463116643,-0.6463892646766445,0.6978037329840909,-0.9999945903490551,0.7025007386225441,-0.7322186436131704,-0.6590385213338702,-0.07556855388440817,-0.9944586094019056,0.13459651847315451,0.9864693794318616,-0.1931502672631692,0.8357801893810225,0.2510235013615375,-0.8668842451774403,0.9628849503467775,0.8949340599771515,0.4194416180731393,0.35447280613102894,0.9241342244612121,-0.40932653434155014,0.9380282043974887,0.31856704825034754,-0.9569373518124549,-0.5145193424880159,0.972474979549396,-0.8472490865924434,0.5561068470828942,0.8142403168288522,-0.15560417982932603,-0.77836278324741,0.6506388049808386,-0.997743557269089,-0.03749905692268323,-0.6872325098464347,-0.021856010102888693,0.7291219414641804,0.6624431306355962,0.9938562139976025,-0.616830777994429,-0.13010064473127264,-0.9872028503357609,0.18869793006884486,-0.8332811673445569,-0.527875415345362,0.8646142072817504,0.3036939066886127,-0.8929010041098947,0.9466461259716662,0.9180418966631321,-0.9258576877905583,0.3784477771779555,0.9018072310378852,-0.45871241617888286,0.9556108012115195,0.2661411422347828,-0.9714081101904136,-0.20848138346007955,-0.5523314054508232,-0.8168650779286567,-0.9926916178568518,0.7812023951366979,-0.10123550704678447,0.9974287622839522,0.04203124343715675,0.6839304925172471,0.01732110631841546,0.9988954790331845,-0.07661242966438302,0.7655320771984755,-0.9953713602530798,-0.8023567624734668,0.987916011272007,-0.18424171074547824,0.5231257145449508,0.24223219938264529,-0.8623263814647872,-0.48053730003728956,0.890849578370119,0.4276592447127376,-0.9162340986651726,0.9275621032214062,0.9383905066000217,-0.9037580322392478,0.32715275334230215,0.8767698050695429,-0.27051058047625254,0.9703212558128615,0.21291533399105506,-0.9829592466516998,-0.15456993574624187,-0.5971859665774562,-0.7840259351564907,0.6437233032745658,0.7458165255426559,-0.046562565232495454,-0.7049794255295481,-0.012785846182551094,0.7228835999675832,0.0720892099965995,-0.762605903212548,-0.131138586243315,0.7996413630561245,0.5764812634742403,-0.8338594946955086,0.9779375659502568,-0.5355582599287947,-0.9638207758655527,0.29503842614582015,-0.8887798249623119,-0.35120833329607604,0.9144074507571867,0.3774785255154409,0.3968738550661891,0.9056902402037745,0.9559187308918604,-0.8789420808997772,0.5028040692129487,0.8490971979534375,-0.21734490416236615,-0.5447465103429759,0.15904959669073943,-0.9915560436035517,0.7868333452174031,-0.6402456515670067,-0.7488303581735025,0.6846938884743508,-0.9997703352472733,0.008250323000320628,-0.6650526465510472,-0.06756450721972378,0.7596640399473389,0.12664064548429413,-0.7969095124198536,0.9892813449715401,0.8313472816528197,0.5308353675446205,-0.8628560151301469,0.965019874063923,-0.2907015364774799,-0.94776473660636,0.4358416781769909,0.3374503841549663,-0.401991844202857,0.9352170199275186,-0.9076038151796749,-0.9545770555935746,0.8810962740378615,-0.49887818216133256,0.9680876818532371,0.5494196443074778,0.8188725812725323,-0.16352598546866765,0.9909576512408496,0.1047058268483183,0.6367548279277935,-0.9963612832575032,-0.6813810421052758,-0.7113841292733044,0.723606587537474,-0.9994423573583031,0.06303841442158174,0.9957005934889694,-0.6310088425685708,0.7941612667676907,0.18081145536240326,-0.8288179650975211,0.9797923257729088,0.8605545390602398,-0.9661991186704805,0.28635866613475186,0.9492017604652467,-0.34270032517877774,-0.9288601369246039,0.385863305628528,-0.9336013994943884,-0.3304476354052066,-0.44251611176790406,0.9501082776195628,-0.9694716760449731,0.8538541232774474,-0.5456241519439982,-0.8214675736360447,0.16799900998617642,-0.9903388716620494,0.7923995447654638,0.9968215682159952,0.05004735773206698,0.6780541775160145,0.7145645607899884,-0.7204685034536745,0.999583531162797,-0.05851102471859651,0.6266681179160748,0.11763704032942289,0.9891279308515039,-0.5875462443032944,0.8262715970658663,0.5385013367413554,0.22459051879844874,-0.487559159885844,0.8871753512173316,-0.950619256162272,0.3384357016366446,0.9305307673876712,-0.39004383107882923,0.9319665718494694,0.4475155251376567,-0.951834816756252,-0.278227250069262,-0.490995698405949,-0.8562062604885845,0.5418174343203067,-0.9794625201600649,0.991097577441808,-0.7889817605881259,0.11372308661996934,-0.9964499656886899,-0.05457692132656965,-0.6747133631509722,-0.717730291393774,0.7173155969937085,0.6751526725185495,-0.7573905560404113,0.9964999113643339,0.794797046603985,-0.9897847743809564,0.5912104967068487,0.9795823883759844,-0.5423177426304476,-0.22016832017392093,0.4915142731476956,0.27765534093510547,-0.880318391919157,-0.33416411537337404,0.38489726044136735,0.38949554953065424,-0.9303125706264741,-0.4434546975009039,0.950434309633971,-0.8874499159773106,-0.9672074407398829,-0.5465011955287522,0.9805728681826338,-0.8266068045585234,-0.9904835023575145,0.7917604924413406,-0.11822825339316304,-0.6262040449420594,0.059105362096612914,0.7138317823895424,0.00022577155875839675,-0.714147933023098,-0.059556109766808474,0.7544210839481055,-0.9968688224501808,-0.7920362285519775,0.9904212548241955,0.8268608396635432,-0.9804841957034436,0.5461229912829021,0.9670926557292213,-0.4954592743652137,-0.9502938165069458,0.443049935657323,0.3298856542693635,-0.9049927913991991,-0.3853139771679562,0.9286394298535774,0.4393847465613174,-0.9490142489922906,-0.49190745816756254,0.9660454634434623,-0.8608576420546243,-0.9796730681560262,0.8291509373868245,-0.18139697808724994,-0.7945229352107209,-0.9965375559884383,0.7570956382786632,-0.06363258687746824,-0.7170009119294458,0.0043099930706423295,0.7109655767109748,-0.9998836550034114,-0.7514360909648229,-0.11417168874012756,0.789259115743349,0.17291333737779127,-0.8243013914636952,0.9813658312877879,-0.5499170044124002,-0.21131042526562344,-0.8855600786133576,0.2689291667658184,-0.44711167527939005,-0.9318027724979769,0.9030538467312574,0.9086263089580668,-0.3380107698042479,-0.4353057560510014,0.9475746640464685,-0.8915944612614376,-0.9648636114555259,-0.5388817631977335,0.9787531130738307,-0.8316780118884483,-0.9891942328577275,0.5714221397818185,0.9961501842393751,0.6795916740782744,0.06815850252942393,0.7201552904327981,-0.008845669029492905,-0.7077685935287402,-0.05049832988282562,0.7484356385015605,0.10966441107400506,-0.7864657653123255,0.991633074493362,0.8217249847080738,0.22663035643420887,0.5536997039637742,0.9693608573417795,0.883443994778242,-0.26455773565173696,-0.9096863345855117,0.32130845976609035,-0.39742025681152515,-0.37692713715579085,0.9252358677388848,0.8843748258734042,-0.2859260033346768,-0.48398919890875736,0.9636619090906058,0.5350553779646056,0.2482216021441923,-0.584236428665683,0.11164260073069585,-0.7999987265046024,-0.995742318446952,0.6155373160946269,0.9994573330497882,-0.7232948530037926,0.013381163004213471,0.681050475204688,0.04596783497613874,-0.7454197882873663,-0.10515487725491371,0.5895204984673668,-0.9922083887882245,-0.8191316724017303,0.9830685150900781,0.8517211128402243,0.2796662251597949,0.5072327951871418,0.9544424146131141,-0.4552074755333796,-0.3170099028275651,-0.931078476922118,0.9123772441731236,-0.3465343693251865,-0.42712099217473776,0.9446370401112124,0.48001509265795855,-0.23298187011993948,-0.5312179849052587,0.9768528138627929,0.5805492688533983,0.19476135932617575,-0.6278351385638189,0.9953139670022928,-0.7659149997837831,-0.9992976442827849,0.7264195350514345,0.9997605564206872,-0.6843647201669687,-0.04143639436184867,0.7423886023680706,0.10064318005860469,-0.7808305817891213,-0.15949537570682312,0.5443677904153067,-0.9838895282782903,-0.8493356330051047,0.9715492877648995,0.8791573450832477,0.3318615412569192,0.4592413696084072,0.9366553413236434,-0.40572818306897496,-0.36850927884343865,0.3507855188834297,0.8885727766163041,-0.2946069532280111,-0.47603111093830186,0.23739041665609523,0.5273696629673268,-0.1793374967414091,0.8391563672931225,0.9871077323540355,0.6242982861393545,0.1407157502473214,-0.6695468545081481,0.9991173967189503,-0.7295292722908694,0.02245123176758486,0.6876648855251186,0.9970589429971121,-0.6433776905274144,-0.9907554837001951,0.7779888646309607,0.1550160363815264,0.6129379647303691,-0.21335650180262747,0.4975789542365054,-0.9726135322449736,-0.8769868674136704,0.9571100142058779,0.9039512202922069,-0.9382343681577562,-0.9277307363353773,0.9160530975263198,-0.3550294516447002,-0.4189010794173101,0.2989383812605597,0.862097653414393,-0.9599379490020079,-0.5235104913232858,0.18379787883892273,0.5731391939816392,-0.125154114391804,-0.620748589872317,0.9943958428278601,-0.7717158881333631,-0.9989165940665619,-0.7092462095815371,0.9999179226939272,-0.6909509033840219,-0.03237104893377754,0.6468434203627753,0.09161366685796722,-0.6004569529166617,-0.15053350787309105,0.8112508374393202,0.20892298325556927,-0.8445123019972268,-0.2665763728870798,0.8747983472770322,-0.9584142913309464,0.46728073070474846,0.9397940924648738,0.9260282190754062,-0.9178627737328708,-0.9467915504753093,0.41477815348346997,-0.30326365916008186,-0.46803384914765184,0.24619276745604465,0.8330314470448448,-0.9738516887461104,-0.5694164313714621,0.9856151681161092,0.6171861227914828,-0.9939060889868817,-0.6627813195551351,0.9986952404567823,-0.735703656744334,-0.9999657491971744,0.6942227061396231,0.9977131389012117,-0.6502958425289578,-0.08709603662004023,0.6040778307825534,0.14604788240168143,-0.5557315080347185,-0.2044851664844627,0.8420745500560467,-0.97468197026778,-0.8725918296982976,-0.3189950336330724,0.900034759155409,0.3746641709877596,0.41812725628211106,0.9196535665222617,-0.3634953176806918,-0.8947324909229738,-0.9630067291585368,0.46402073360629725,-0.2505863906269049,-0.515759916721216,0.19270720738996286,0.5656819540166423,-0.13414907046751368,-0.6136109581883658,0.9933958872708685,0.7249789615182914,-0.9984533404435738,-0.702822022564267,-0.036052637510150344,-0.6974802264803173,-0.9980094508148387,0.6537348859984293,0.9925096719429652,-0.6076862808062856,-0.14155925225117633,0.8059134070704603,0.2000431427896064,-0.5093357807311826,-0.2578222333836182,0.8703673600726969,-0.9609636660729339,-0.8980487333924542,0.942855505541528,0.9225660657530791,0.42491171760185026,0.36771707678506355,0.896748969865809,-0.31189540874837063,-0.8689130390988858,0.25497485842216405,0.5118686732176696,-0.19715597054967635,-0.561935838747503,0.13864245493265612,0.6100231696157086,-0.07964046871290542,0.7802979982606517,0.9981908990036051,0.6995882069431804,-0.9999996840172108,-0.740750354306294,0.018768269175481384,-0.6571604800189007,-0.07805549357866157,0.6112822287503266,0.984323161132896,-0.5632502836593143,-0.19559700355784912,0.8371471240605307,0.2534371622183076,-0.8681249841647921,-0.31038440100481246,0.40795890389298883,-0.9443571313278584,-0.920806500918457,0.9231783548691275,0.9423245479560433,-0.8987469997709768,0.3162017028540247,0.8711491435538609,-0.2593580805567921,-0.8404820200807186,0.2016006775709952,0.8068536769787664,-0.9832242829711527,-0.6064228308859704,-0.99901184329136,0.6525309261392283,-0.024892503033424537,0.7448515579909992,0.9999857916358508,-0.7039521521411225,-0.9985404720848823,-0.7764523190388962,0.9935770550904791,-0.6148656006343522,-0.13257334735557516,-0.8456317672544392,0.19114684026070955,-0.5171214059861329,-0.24904687702776895,0.8658647481075357,0.30606946194799695,-0.8940212957715806,-0.36201369078582757,0.9190279921046495,-0.9249122779102628,-0.9407967325212018,-0.46988315425480004,0.9592508205305622,-0.8733673256427076,0.2637359668536792,0.5040546740814669,-0.20604123701186597,-0.8095248849012235,0.14762057450188545,0.7732665902719603,-0.9917427019397685,-0.6490871849702029,0.029426603915995473,0.6930774641251661,0.029930278469246237,0.7071664243127112,0.9987751705164674,-0.6639710380886299,-0.9940800903904317,0.6184363227367696,0.9858826278148695,-0.5707227079744481,-0.18669274445249448,-0.8736126436664224,0.2446514681344221,-0.4694382907328249,-0.30174822604867363,0.8919799667711292,0.3577818526304452,-0.9172305759013568,-0.4125549279814605,0.9392495618432111,-0.9026875484248658,0.3247946867179228,-0.5175526314290096,0.9732940106088291,-0.845362696710682,-0.985199526678792,0.5506284373393298,-0.1521051248969047,-0.59918479949455,0.09319678946209188,0.7373554071728088,-0.997280382228206,-0.6898006708753558,-0.025396240237273857,0.7315409186645234,-0.9989893209002026,-0.7707037724394574,0.9945626742355755,-0.6219943215962322,0.20209420237633072,0.5744413460765356,0.9752250746426983,-0.8296269427420272,-0.24025102596609793,-0.8989678279574794,0.29742078220869417,-0.4203442521942663,-0.35354265374079086,0.9154142892872659,-0.9283230033665404,-0.3099053519731539,-0.4618562080499804,0.9566481639976899,-0.8777497405508478,0.2724753717765225,-0.5636665749506788,-0.2149095478125749,-0.8148172824681752,-0.99311274260301,0.5955472557426722,-0.09771185224186908,-0.7404117524656932,0.03849289621008285,0.6865096861862603,-0.9998206800257249,-0.728440921921034,-0.08014275455674831,0.7678056856732021,-0.9950247966975945,-0.8044652859439325,0.11907426546867231,-0.5781481660551712,0.25546206760925855,0.5287198535201978,0.9616364274517039,-0.47742873420176096,-0.2930872194576277,0.4244555190082209,0.3492961813309486,-0.913579169629289,-0.4042744890276029,0.9360972824766229,-0.9065538126067919,-0.2573353396934572,0.8799138832096387,0.9711715060870609,-0.8501738062776548,0.21933711672246828,-0.6080863867591599,-0.16106474560084538,-0.7818228888821551,0.10222490477161741,0.6386761232468608,-0.9965707741615643,-0.7024634786310211,-0.016326689614627816,0.7253259387828472,0.07562075748660266,0.6740842515060834,-0.13464839530288958,-0.6290718570512066,-0.9880696692937204,-0.8358089336148765,0.17330777870671887,-0.5325643535612894,-0.9628708182068437,0.4814092635948717,0.2887476269509292,-0.42855805339412556,-0.3450425227646423,0.37419693044155955,0.8998150376642016,-0.9344922386406461,-0.45379125451405544,-0.3376338267817384,-0.8820599231831512,-0.20399189152227284,0.8525531494634557,0.9827759373867496,-0.8200426266325628,0.1655396315812809,0.7846428970555078,0.9977470709149144,-0.7464786824652648,0.047556020825083194,0.6798854136057428,-0.9996077559448998,-0.6624039111532773,0.9995084418208595,0.7619621833216607,0.13015255299516967,0.6325912480388363,-0.18874934269528268,0.8333101097526842,-0.9781448427166494,0.5363978970246215,0.2270204056316557,-0.485379888836502,-0.9466292524860234,0.4326517709495288,0.34078176555343853,-0.37839931716248226,0.9332957666590762,0.3228136718749178,0.8745541048072114,-0.9525966384713838,-0.5019441247659768,0.9689690813729287,-0.8549149528630998,-0.9819276139290793,0.8226300190951014,0.9914265801233488,-0.787446762577071,0.1112446077317252,0.7494891423555053,0.9999242516809648,-0.6765522619971139,-0.007255795426847816,0.6657950495533904,-0.9996403601842176,-0.620353451324106,0.9962883028172578,0.7963083075014156,-0.9894260829390609,0.5891969558622457,-0.2422829932822346,0.8623528895788206,-0.9652801465929712,0.48934052823799984,0.9480815020468515,-0.8814989110427803,-0.9275425391042679,-0.9384085974309342,0.3917916653205143,-0.3271032804203203,0.9122132311872693,0.2704601785927939,0.498015980312083,-0.9678379553257145,-0.5485883736133224,0.9810590890324952,-0.8252004873874224,-0.9908237163987995,-0.6437633662712771,-0.11575107259751169,-0.7524841828208195,0.056615231933242985,0.7120827557252419,0.9990961036571947,-0.715891713386941,-0.062045803975992644,0.7560559771491323,-0.9966684888856359,-0.5764384841745107,-0.17983320111165849,0.8282610821068562,-0.9799907700631639,0.5440317989713026,0.9664550346562518,0.888803819110618,-0.9495142464931707,0.44081241886771166,0.9292280920314981,-0.9060511214413917,-0.9056680442561994,0.33138615938928123,0.4416240131186083,-0.27482411630202025,-0.49407759005263113,0.21729380197489892,0.5447904132014886,-0.9801703805653739,0.8277539786266477,0.9902004682136266,-0.7930058352596557,-0.9967418422512666,-0.6847320443077838,-0.061143136937468215,-0.7152599693711017,0.0018156958589345784,0.6725361641715375,0.9952651158892434,-0.7530795118160377,-0.11664933035845021,0.79078831540465,-0.9907010741761213,-0.8257109821981112,-0.23347187035788664,0.8577244712699906,-0.9676100396018069,-0.8867159914243298,0.9509274563487765,0.9125833985860637,-0.3279577793459164,0.39095942288615626,0.90758183452535,-0.927880144042788,-0.881071512971023,0.2791823999869389,0.49012903501309507,-0.9655159922051865,-0.5409812446821557,0.16347433656770127,0.5899274477475094,-0.10465376107442285,0.7957609280525042,0.9963657439851115,-0.6210625263471378,-0.9996642042251193,-0.7236427215281173,-0.006351432127482443,-0.6758860017029583,-0.052989297391784186,0.630968227207936,0.11214333291426748,-0.583827400398976,-0.1709022605929994,0.8231438947337351,-0.9817560514574779,-0.8553837689536191,-0.2864088267169434,-0.5011617176068484,-0.952321102539354,-0.910719380466962,0.9325418118859987,0.9336201571365521,-0.9094769528896377,0.3399313762872405,0.43346695158726384,-0.283534939983505,-0.8538268715121299,0.22613954212000645,0.5371609464222871,-0.9783324864688591,-0.5862589496393297,0.9888928701694754,0.633291422044576,-0.049995069865746776,0.761376173083883,0.9995363862625538,-0.7215701859408296,-0.9995820189964614,0.6792219340650139,0.04845936227033683,-0.6344806204991,-0.10763502831764567,0.5875038796157273,0.16643147035898337,-0.5384572217338291,0.9826084042662601,0.8530254686160581,0.2820601325362174,-0.8824856515002734,-0.3384849651779002,-0.45298516497750446,-0.9341699106392933,0.39929275373841633,0.911353360360325,0.9518508675966153,-0.8853258937321625,0.28788164674583994,0.4822017557396072,-0.23055547902865894,-0.5333295970178206,0.17241700909237304,0.5825783902812258,-0.9882085472120339,-0.629774620225721,0.9955520601777132,0.6747520032197963,-0.9993880045914594,0.7247030590430563,-0.015422419343708176,-0.6825438926267451,-0.9964955335776373,0.6379799604640154,0.9897773090188053,-0.7823864531844367,-0.16195725608929087,0.8179589687397852,0.22021938862353524,-0.49146867948979833,0.9709555201583301,0.8803432262943316,-0.9550495896411948,-0.9069351736000252,0.9357787904846794,0.9303317708875656,-0.9132110183336185,0.34844861936099547,-0.49589691167357974,-0.2922224308480738,-0.8585139376194093,0.9618841313022503,0.5294872752920522,-0.1768830705654283,-0.5788858453942533,0.11817626700999478,0.6262448618983213,-0.9951144913765877,0.7672259483275617,-0.00027812496173719843,0.7141845791557634,-0.9998031448731673,0.6858518090446792,0.03939659434419951,-0.6414661751098983,-0.09861186871449056,0.5948205020742564,0.9804739017893186,-0.8153412368809725,-0.21579271218435436,0.49541379788716783,0.273345425082946,-0.8781826895701301,0.9563843744186203,0.9050150627056109,-0.9373684183222751,-0.9286588508338895,0.9150498885914625,0.9490307512217342,-0.42116468654034384,0.296557202986185,-0.5427410342567905,-0.2393730322692362,-0.8291216693991615,0.181345492979459,0.5751813909460483,-0.9867789238198545,-0.6227022196809655,0.0635803394853977,0.6680291192279083,-0.9990295627574541,0.7309240126167075,-0.05508005987948296,-0.6891456152642365,-0.9972133203584028,-0.7892912628089027,0.09409719934364459,-0.5984604947893564,-0.15299892370787968,0.5498732770845235,0.211361596188498,-0.845845466459427,-0.2689795911002257,0.4470648456904595,0.32564990643537095,-0.9030763327131633,-0.3811728790885586,-0.41173092615598184,-0.916869933302326,-0.28152642456367094,0.8915707525983299,0.9648773660549392,-0.470236638550605,0.243774467195464,0.831648941090721,-0.18580418452794853,-0.7972374291929156,0.1271792691791934,0.6191467664573053,-0.9941779449903526,-0.7201189659777243,0.9988195099688555,0.7078055773256245,-0.99994199438657,0.6924252435211291,-0.10971644856767927,-0.6483989418250587,-0.9916263149109553,0.6020881752291354,0.14851498989814194,-0.553656107665237,-0.9693479958677472,0.503273376917049,0.26460822333405576,-0.8738074597356656,0.9589948891227649,0.9011190235086526,0.37697562860922085,-0.9252557289544482,-0.4312650450443471,-0.36117050046355165,-0.8936157439353308,-0.9636758926691911,0.8654119503740391,0.9778239874916684,-0.517895267796178,0.19025905348113628,0.5677370584600104,-0.13167689182036246,-0.6155785753745566,0.0726308009054189,0.6612512614076296,-0.9985889082202006,-0.6810121391990768,0.9999805616718082,0.7454546858010508,-0.9978490438991622,0.6518453512648171,0.9922018647503221,-0.6057034687604294,-0.9830589205911153,0.5574275477423332,0.20248641026598724,-0.8409717073523016,-0.9544267913020618,0.45516086020261476,0.31705955552574855,-0.40153040373555726,0.9420214647346757,0.9235255971419482,-0.9204533966942697,-0.9446542168664285,-0.48006101955989783,-0.3095245564418558,-0.8676757420002627,-0.9768640115744817,0.8366521036754878,-0.19471000818790485,-0.8026807394354685,0.13617180544036875,0.6119977198419944,0.9992996047471316,-0.6578418914386587,0.01786403665910268,-0.7401425038293872,-0.9999985561103872,-0.6398584919890701,0.9981361153420841,0.7808632881331585,-0.9927570017760795,0.609306301004913,0.1395380482840836,0.8493632667523978,-0.9715368871861891,0.5110915402908459,0.2558492462962722,-0.8693603220457569,-0.9366370031323141,0.8971488289176669,0.3685579473234992,-0.3507364917517706,0.9222167416518741,0.9431564624547776,0.47607715135889594,-0.9612134931985304,0.8699216827195045,-0.25694831889135783,-0.8391278916373976,-0.9871161105434731,0.8053776518455851,-0.14066391756424598,-0.7687898735291282,0.9926197511157901,0.6544189875262519,0.9998486150733537,-0.6981280265591373,-0.03695641895791863,0.7393773932060855,-0.998402651884596,-0.7780217560605078,0.9932917145672565,0.8139249617686222,-0.9846811724373974,0.5649359462585434,0.19359456121779972,0.8770120227736692,-0.25146181722525285,0.46321941836099934,0.9382162525735057,-0.8951360252109845,-0.9160320995711833,0.9200083697427991,0.41894861740338335,-0.9416393042526716,0.8996402440876738,0.9599526177731694,0.5235550967132542,-0.9748837881108727,0.8415864160142903,0.9863802091735288,-0.5564831512171511,-0.9944013763139252,-0.6662099838895964,-0.0861950535950721,-0.732588366255349,0.9977738587693652,0.6948733619978373,0.0324233748566791,-0.7363158984825073,0.9986486480431758,0.7751642175544338,-0.9938059921230752,-0.8112814472731904,-0.20897418104403992,-0.5686727502255232,-0.9736458282441197,0.8335314348656576,0.24706921476826516,0.9020248696481932,-0.3041253288316688,0.41395506431790635,0.3601099364596723,-0.9182213465169367,-0.4148257904595239,0.30321377083515544,0.4680801137616369,-0.9586719930059088,0.8743598269800757,-0.2657046059575203,0.5694594676667871,0.20803847153775445,0.8107217138234205,0.9939118585485107,-0.6011799045373093,-0.9986979126082701,0.7356681965881082,-0.031467125526118765,-0.6916044016355269,0.9999291007604175,0.7332392553503971,0.08714819095817172,-0.7722907314037809,0.9942998238631765,0.8086212420845073,-0.12605133645859273,-0.842102786294656,-0.26225252166583957,-0.5227397245548125,-0.9596841365462271,0.4712398570062082,0.2998012878452866,-0.4180796984803973,-0.3558747745926821,0.3634465449588955,0.4106944292023943,-0.9385469017271312,-0.4640671088904059,0.2505357072539425,-0.8765519392143689,-0.9728233389616974,-0.5657251250894882,-0.2124728543864957,0.6136522960410319,0.15412252108538624,0.7774203417518171,-0.09522917719776135,-0.6440697777143665,-0.9999928059441114,0.6974427088638044,0.02335537876510096,-0.7301475271062928,-0.08262878902376031,-0.6688748314468841,0.14161107825173008,-0.5594532582024833,0.9869625754286941,0.839647909820242,-0.18022714531105233,-0.8703931378504364,0.9609491798988788,-0.47523557513033104,-0.9428380599963342,0.42219573138616606,0.3516322912262066,-0.3676683908757283,-0.8967258001828692,0.9369717210244561,0.4600445566521194,-0.9560516012378909,-0.5119136474262985,0.1971046444604166,-0.8488579036186585,-0.9840508094508434,0.8159990594335325,-0.1586025036563152,0.6560007577953741,-0.9981940453464473,0.7417823889532926,-0.04053277001339863,-0.6850238628131126,-0.01882061333288183,0.6571210177034152,0.07810768714689863,-0.7664961529633733,-0.13711956885589202,-0.6271309577148796,0.1956483454548546,-0.8371757590623484,0.9766589552541276,0.868150968360127,-0.9621944534071127,-0.8960674736917797,0.9443399098529741,-0.42630307835505277,-0.34738257364190217,0.37188267266010006,0.4024064439042097,-0.31615203516531704,-0.8711234358696711,0.9547118881470996,0.5080119942147031,-0.9706828336865969,-0.5582216005944235,0.14308117253029026,-0.818612577670781,-0.9923206596769376,0.7830941155762446,-0.10425546414738508,-0.7448166251969305,-0.9999860693465298,0.7039149673069475,0.01428546069954403,-0.6605332482515844,-0.07358497834133038,0.6148243122261113,-0.9956585446963844,-0.8005410313596687,-0.19119822808265027,-0.5835022064843649,0.2490975805102562,-0.8658909381858867,0.9634199314516095,-0.48319759795883405,-0.945822331571804,-0.9190486281528532,0.9248923728946642,0.9408144775308841,-0.39824999037391984,0.3204518995664688,-0.9093103754435715,-0.2636854666646416,-0.8429028608901099,0.9695826147910181,0.5544525730485171,-0.9823966240781083,-0.6028517872271878,0.9917494145681358,0.6491270100497686,-0.9976080341382454,0.7478355381444897,-0.04959507895514795,-0.7071294070189398,-0.998772578760308,0.7207824693147807,0.06906075565385895,-0.6183951807559324,-0.12812817954308484,0.5706797175680937,0.18674417714215613,-0.8321798384911326,0.9785672758060666,0.8636130938238736,0.3017981387244635,-0.8920036332102546,0.9472852946545962,-0.43449137665676874,-0.926607487321923,0.3802881971830301,0.9026650196942011,0.9579743655180841,-0.44792044427639877,0.268057990197364,0.5001774139081558,-0.21042637660736593,-0.5506721386131149,0.9815392061477464,0.5992267133720426,-0.9911577659540938,-0.6456700687790393,0.9972842393604148,0.6898385737600626,0.05412474953385132,0.7103292987832854,0.9989869663421503,-0.6673168714866894,-0.9945572208022474,0.7576861664897225,0.12362848460818501,-0.7950717832144371,-0.18228628426766036,0.5248199128008193,0.24030184565178941,-0.8613174821367414,0.9658114007089202,0.8899441648572617,-0.9487287690034507,-0.9154353609563466,-0.4084666971016708,-0.38447926699265983,-0.9046076719566499,0.3290317618344063,0.877724655816489,-0.2724249989069593,-0.49624464799595636,0.2148584174053276,0.5468803750640264,-0.15653483819543487,-0.5955893114779728,0.09765974922759112,-0.7914838015617686,-0.9969399272080288,-0.6865477524874394,0.9998216700689464,0.7284767886916222,-0.0006786126492646681,0.6706881246124717,0.0600081409742327,-0.625498677423365,-0.9873526649686718,0.578105448455318,0.17782464117249228,-0.827115435708117,-0.9616220641739218,0.8590041503526752,0.2931372733979146,0.4950658716486429,0.9501527249214138,0.9136004584607775,-0.9299804913102361,-0.9361156960435679,0.9065317135024157,-0.33331158318557,-0.4397914882276744,-0.9711839848575061,0.850146240933187,-0.21928603786809062,-0.5430773604101382,0.979763807998023,0.5919396563781443,-0.9899133073183363,-0.6387164070427902,0.04297259611418889,-0.7567997177062014,-0.9997257292278289,-0.7253619781662253,0.999354080302484,-0.6740455795060958,-0.05547993522375176,0.629031159418988,0.1146215570461553,-0.5818005117720978,-0.17335933964713537,0.5325200414587504,-0.9812787178532293,-0.8566731460644204,-0.9451404269944885,0.8857703437756947,0.34509166051958134,-0.9117467602377113,0.9316383114776476,-0.3928375905904597,-0.9084371047477172,-0.9539824825572919,0.882035256336172,-0.28114211259788735,-0.48834856920085523,-0.9827856110081412,0.5392631728918085,-0.16548800026246926,-0.7846104395916543,0.9892605228991751,0.6352198296366679,-0.996189779536029,-0.6799238043870781,0.9996092207827828,-0.7198410295734333,-0.9995067991282491,-0.7619960874688364,0.9958828754284685,-0.6325507002014691,-0.9887502176353267,0.7867453746915979,0.1688904715573389,0.8646668110477507,-0.2270713917778552,0.48533411541380306,-0.969249521578676,-0.883656076916171,-0.34083098474344664,0.9098743044237385,0.39600885517317563,-0.9328868266507214,0.9103238064924707,-0.3418505660749993,0.5019894045403419,0.28549203823989067,0.8548877924111188,-0.2281276535187255,-0.5354378909792573,-0.9914334195210717,0.5846038871527717,-0.11119257912932319,-0.6317101836963651,0.9957839594493885,0.6765908138354577,0.007308147443395037,-0.7190876523517269,0.9996389548541889,-0.6807188185871749,-0.04642019269900473,-0.7963399745115605,0.9894184883491183,-0.5891546540563135,-0.979067223274071,0.8193913405873902,0.22265177622143228,-0.4892948705402932,-0.2801009680211192,0.43668949028511705,-0.9543071911473873,-0.9079831295413544,-0.3918398327408775,0.9312435864822737,-0.9121917799210958,-0.9512230490394822,0.8862732719139405,-0.28983609038379793,0.5486321451544701,0.2325414668058585,0.8251709149627113,-0.17442754389781365,-0.5809179239478166,-0.9971014189195938,0.6281875414266933,-0.056562962422152405,-0.6732439036141982,0.9993145110918265,-0.7261082448157565,0.06209805642643876,-0.7560902417806576,0.9966642176114939,0.7935883302511442,-0.10109371160231531,-0.8282904168029837,0.15994240351241212,-0.5439878703372713,-0.9664415870993694,0.8495745795497601,0.27574388840213704,-0.4407654258869458,-0.33228868499170805,0.906073274498166,0.38766274889108504,-0.9295811876099057,-0.44167098399942556,0.27477377841393014,-0.8883649511288768,-0.9667003168524206,0.47642930349400575,-0.23695049596005743,0.5936259408829414,0.17889197886505703,0.7929739397438068,-0.12020318244629315,-0.6246519752998403,0.06109088140184886,0.7152233807700609,-0.0017633425381219218,-0.7127541509712833,0.999841566554208,-0.6873360395719792,0.11670132619510545,0.6430309525264029,0.9906939497954219,0.8257405132770013,-0.15546338764809195,-0.8577513854850152,0.9675968216785886,-0.4971861003627307,-0.27138113583614887,0.8772043741499914,0.3280072367589432,-0.3909112358623879,-0.3834776895599741,0.9278996642345595,0.4375970585371932,0.35460607439986686,-0.49017466818073213,0.22166790212251172,-0.8618680913228016,-0.9792721122873453,0.8302612609687188,-0.18335273344351008,-0.7957292211701973,0.12470482098231021,0.7583936365811275,-0.06561754354377913,-0.6665085998749548,0.006299079770152566,0.6758474159938279,-0.999912018359907,-0.7501221754886113,-0.1121953559220886,-0.646498007057252,0.17095384353944124,0.6000947737378075,0.9817460953829494,-0.5515772626816805,-0.2093658097055026,0.5011164127104611,0.9523051283385443,-0.44889000949457575,-0.3237190403524203,0.39508205917175243,-0.9396392416252627,-0.33988214004929,-0.8831832345689763,0.9469371991448992,0.48621614551903286,0.3028321127295985,0.8641594582393289,0.9783433243750241,-0.8327808383109156,-0.9889006501033276,0.7984681318631187,-0.1292038939352969,-0.7613422307858577,-0.9995379788906082,0.6631203449240355,-0.010834687409661944,-0.7063619952249558,0.9999618987291052,0.634440153653407,-0.9976824287888795,-0.7852356654588585,0.9918878844974324,-0.6037168882838362,0.22469254945570552,-0.8530527890808391,0.9698475476556702,-0.5050364154666733,-0.2626389710019563,0.8728129305214503,0.9341512281722548,-0.3992447543604988,-0.37508398901713724,0.3441443833970531,-0.9194756276648368,-0.2878315092760001,-0.4822476198126862,0.963128660843235,-0.8664330465902473,0.25014797204793154,0.8352832826475882,0.9882165618918582,-0.8011906154742862,0.13370030874471603,0.764275161709151,-0.9934477431107565,-0.7246669833448058,-0.9997015879742731,0.7031440861606189,0.043980732989144525,-0.7440923797201686,0.9979807902695685,0.7824190574594733,-0.9924542483532973,-0.8179890853055638,0.9834310522187273,-0.5591212643194422,-0.9709429927487921,-0.8803680582565918,0.2582597385884646,-0.45697765279281205,-0.9357603300380232,0.898247844303387,0.9131896837515604,-0.9227406949975886,-0.42532160157724547,0.9439825090330093,-0.896548477795852,-0.23491578465186064,-0.5295316868956351,0.9764253849773331,-0.8377685424953322,-0.9875121428573977,0.5623103626251971,0.9951196587414985,0.6714362656915861,0.07918905780239041,0.7277851194090004,-0.9982180234035358,-0.6858137083737513,-0.039448907050413304,0.7410544881497761,0.09866396681199038,-0.7795863525598989,0.9930001942032028,0.815371547375197,0.21584383180499145,0.5628760494712609,0.9720184623923203,-0.5128451698295707,-0.9563690800943272,-0.9050373315314861,0.31081484499478884,-0.4075454179845026,-0.36665942185149786,0.9209830234780862,0.8894834961816156,-0.2965072042882554,-0.4742808860519974,0.9606484425967016,-0.8709267008616071,-0.9754362729502034,-0.5752242165985534,0.9867874074921328,-0.8065860777491632,-0.9946618534545165,0.6067828418624833,0.9990318672766445,-0.7308882825704842,0.024439799676168418,0.6891076778448697,0.034916269519590475,-0.6448991815841074,-0.09414932032804788,0.7767376090380719,-0.9935257108152703,-0.812737234604941,0.9850350799926685,0.8458733920729378,0.2690300146973925,0.516733760784827,0.9576844162012399,-0.46502769022875895,-0.9389207461771818,-0.9269864640119738,0.36243577983722103,-0.35688828241419124,-0.4170940720670131,0.9409501361810089,0.4702828418992333,-0.24372369285694828,-0.521814692547875,0.9744270930321183,0.5715080649503959,-0.9860423707062227,-0.6191878774438162,-0.14717267953791352,-0.7729793730099621,-0.9988220516967767,0.6494316010122203,0.9999414291336775,-0.6923874701338193,-0.03038291364774556,0.7349330301318244,0.08963273688692398]}
},{}],84:[function(require,module,exports){
module.exports={"sine":[3.135095805817224e-14,0.19975924546521834,0.39146619978763,0.5673931595176209,0.7204485124679824,0.844462600458311,0.9344364181110172,0.98674312265705,0.9992742318945281,0.9715246170636294,0.9046128645766713,0.8012361858226548,0.6655616926302876,0.5030584210748672,0.3202768747448853,0.124584974074305,-0.07612894438013779,-0.2737741066271227,-0.4603834401756131,-0.6284347265659114,-0.7711538218441553,-0.8827877221672955,-0.958836467272162,-0.9962345337824432,-0.9934744063937264,-0.9506673457851993,-0.8695389037038822,-0.7533593660085821,-0.6068119275127992,-0.43580391249727973,-0.24722865058693883,-0.04868760677396403,0.15181603348292447,0.3461999725019611,0.5266285976344522,0.6858288346521817,0.8173833252220423,0.9159891104911325,0.9776713932504442,0.9999437619300285,0.9819084177990489,0.9242923652145185,0.829418106090318,0.7011100198919773,0.5445402029782067,0.3660199815004213,0.1727455019744958,-0.027492345240689983,-0.22662197657561428,-0.4166164806200265,-0.5898171827606637,-0.7392423661984733,-0.8588687048126487,-0.9438740633142088,-0.9908318774218579,-0.9978492785991192,-0.9646433955465273,-0.8925527567380446,-0.7844833343652887,-0.6447914046575512,-0.4791079464747739,-0.2941116566638662,-0.09725973192389181,0.10351273064209479,0.30011259713026145,0.4846149309006835,0.6495824466120003,0.7883653070441347,0.8953691779011502,0.966280735313796,0.998241535837669,0.9899632402503264,0.9417795464794113,0.8556327382458149,0.7349953916464363,0.5847303956815909,0.41089492929832944,0.22049629662920914,0.021209462704269093,-0.178932324233017,-0.37186135280109145,-0.5498006577618828,-0.7055775093328759,-0.8329125457794704,-0.9266728943587621,-0.9830790773167677,-0.9998573625597087,-0.9763314177489768,-0.9134495732438686,-0.8137465949240341,-0.6812415078280731,-0.5212755893358658,-0.3402970623850175,-0.14560116773499812,0.05496390704032573,0.25331338783510343,0.4414518110916764,0.6117953207754777,0.7574773734579571,0.8726255285429942,0.9525981662292726,0.9941715911096599,0.9956699792684799,0.9570329307093359,0.8798179040779627,0.7671374355353319,0.6235336724885809,0.4547952797203925,0.26772409842889094,0.06986096414695006,-0.13081826418607526,-0.32622421093695686,-0.508480066345676,-0.6702391005686685,-0.8049808102092547,-0.9072737596782356,-0.9729945222524533,-0.9994938953221931,-0.9857036896952306,-0.9321797882813732,-0.8410797384635533,-0.7160757814067914,-0.5622068240905339,-0.3856753210707721,-0.1935972536624941,0.006284715123673178,0.2059133471703701,0.39724161635907906,0.5725570840302316,0.7247927872291383,0.8478121078402922,0.9366561395390696,0.9877435812052446,0.9990150990990697,0.9700163385622601,0.9019162390453115,0.7974599141817464,0.6608579963134495,0.4976169059853876,0.314316888245918,0.11834676310114187,-0.08239391766972684,-0.27981330128637405,-0.4659534163899085,-0.6333109587068648,-0.7751397490927582,-0.885722671876949,-0.9606021316794163,-0.996759738990705,-0.99273798139171,-0.9486989758498705,-0.8664179337874363,-0.7492116023451626,-0.6018045663718083,-0.430138800505095,-0.24113414829335683,-0.04240938344290703,0.15802490279590478,0.35208920840059516,0.5319608051387166,0.6903890725853064,0.8209877704854726,0.9184924679691496,0.9789727526537855,0.999990665487432,0.9806989748291085,0.9218753283388381,0.8258909060164723,0.6966148379835733,0.5392582399269217,0.3601641531301644,0.1665518566082899,-0.033774141883455386,-0.23273870539937497,-0.4223215764097659,-0.5948806732203318,-0.7434601421301987,-0.8620707477539662,-0.9459312989789432,-0.9916613786819907,-0.9974176082756384,-0.9629679542614074,-0.8897010814956479,-0.7805703761369043,-0.6399748947101911,-0.4735820382269589,-0.28809909936514566,-0.0910028916375325,0.10976164081085939,0.30610168373896884,0.49010277398922036,0.6543478313367894,0.7922161408431442,0.8981502337418092,0.9678799088915092,0.9985943644978698,0.9890555014768577,0.9396478312038515,0.8523629758678477,0.730719386221319,0.5796205129015813,0.4051571484347156,0.21436190751248682,0.014925742435713757,-0.18511207901641277,-0.37768803630905823,-0.555039396500318,-0.710017129849209,-0.8363740870604237,-0.9290168217452998,-0.9842109071434068,-0.9997314707890791,-0.974952879075785,-0.9108739565340906,-0.8100777232351516,-0.6766272733037958,-0.5159019916762728,-0.33438071120312135,-0.1393805510271171,0.06123803634045773,0.25938811970212905,0.4470822732072806,0.6167545493255974,0.7615654620400815,0.8756776863891521,0.9544913609183339,0.9948295080020712,0.9950660977476201,0.9551915932270914,0.8768133349109316,0.763090748805949,0.6186079900569728,0.4491891557457111,0.26166351565512114,0.0635902245430731,-0.13704638723362192,-0.3321586619140328,-0.5138816276533755,-0.6748900353800802,-0.8086936394362378,-0.9098988192498237,-0.974425996070363,-0.9996740807057866,-0.9846253233753658,-0.9298863391825851,-0.8376636554726699,-0.7116747667598536,-0.5569982825990335,-0.3798692089369468,-0.1874276151488834,0.012569182013422057,0.21205931570320233,0.40300134266768,0.5776983936635506,0.7291084340999899,0.851128128310635,0.9388388648908398,0.9887050258236961,0.998716507171046,0.968469746322367,0.8991839895954397,0.7936521444419354,0.6561281974047799,0.49215573600623347,0.30834448684774635,0.11210387766336845,-0.08865563656142379,-0.2858414438701698,-0.47150498836032384,-0.6381621763099938,-0.779095059845107,-0.8886226372822091,-0.9623298541907801,-0.9972455741487065,-0.9919623451909297,-0.9466931341699043,-0.8632627420658023,-0.7450342462963185,-0.5967734351335581,-0.4244566988757504,-0.23503012167471596,-0.03612948502457202,0.16422753043586857,0.3579645374675245,0.5372720012368051,0.6949220415073889,0.8245597883458591,0.9209595468002463,0.9802354445578288,0.9999980713793202,0.979450796177467,0.919421879199858,0.8223310848753679,0.6920921411584681,0.533954977235324,0.3542940989838664,0.16035163277104186,-0.040054604514009294,-0.23884624150167763,-0.4280099913273297,-0.5999206670628188,-0.7476485528478729,-0.8652387405954554,-0.9479511722168351,-0.9924517112670644,-0.9969465419173452,-0.9612544776351177,-0.8868142648094459,-0.7766265869131722,-0.6351331070125468,-0.46803742441959717,-0.28207516271845146,-0.0847424569157329,0.11600621561069334,0.3120786799329004,0.49557125898172366,0.6590873706084655,0.7960356836618518,0.9008958144138111,0.9694408531154709,0.9989077506437074,0.9881086969553731,0.9374790016861487,0.8490595468279012,0.7264145188168094,0.5744877362506329,0.39940336466019294,0.20821905152191933,0.008641432629900445,-0.19128452223669062,-0.38349980188215205,-0.5602562122736828,-0.7144287060845778,-0.8398025932089502,-0.9313240547936729,-0.9853038625740069,-0.9995660915906163,-0.9735358316804232,-0.9082623620937114,-0.8063768550687108,-0.6719863133321634,-0.5105080169021642,-0.3284511526404553,-0.13315442906168873,0.06750974685842194,0.26545260624854883,0.45269507645206475,0.6216894172834292,0.7656234702834606,0.8786952566880414,0.9563468550749695,0.9954481310845539,0.9944229130719912,0.9533125275546556,0.8737741333408574,0.759013921492065,0.6136578738257217,0.4435652896822878,0.2555925976869687,0.05731697325033179,-0.14326909721816472,-0.3380799932768102,-0.5192628916470639,-0.6795143133617036,-0.8123745268541859,-0.9124879396066745,-0.9758189819769194,-0.9998147809283445,-0.9835080662907953,-0.9275561614013614,-0.8342144864140054,-0.7072456423587122,-0.5517677407704068,-0.3740480927161119,-0.18125057361291783,0.01885315244518979,0.21819690830981733,0.40874515121535765,0.5828168853459542,0.7333952826210466,0.8544105308930495,0.9409845079530079,0.9896274185371973,0.9983784679042683,0.9668849014312743,0.8964162241455867,0.7898130270025732,0.651372482722209,0.4866751268431803,0.3023599064483766,0.10585656434268706,-0.09491385372975504,-0.29185829627883714,-0.47703793681037865,-0.6429881877615641,-0.7830195978742007,-0.8914875038401429,-0.9640195665646426,-0.9976920200668886,-0.9911475284275186,-0.9446498999721018,-0.8600734531627928,-0.7408274628593273,-0.5917187325178435,-0.41875783204129596,-0.22891681182839935,-0.029848159562487923,0.17042367141121717,0.36382572763880144,0.5425619761470091,0.6994275623748212,0.8280992377155818,0.9233902495397018,0.9814594190887284,0.999965979313176,0.9781639311447943,0.9169321147040845,0.8187387832728767,0.6875421080543781,0.5286306243717694,0.34841005091712657,0.15414507535962926,-0.04633348506653744,-0.24494434364718354,-0.43368150069161426,-0.6049369652182753,-0.7518074329173543,-0.8683725582075119,-0.9499336032469707,-0.9932028439604959,-0.9964360981304349,-0.9595030333465869,-0.8838924207031273,-0.7726521224657994,-0.6302662328056261,-0.46247432405403466,-0.2760400846573307,-0.0784786750335843,0.12224620839282879,0.3180433496325639,0.5010201698836867,0.6638008772246304,0.7998237846358947,0.9036058114721164,0.9709635063314797,0.9991816818970432,0.9871228640827738,0.9352731435907671,0.8457225816049285,0.7220809594668631,0.5693322684633317,0.39363380523790964,0.2020679712881319,0.0023567815043718287,-0.1974494100942538,-0.3892964199670567,-0.5654508990281032,-0.7188120637904737,-0.8431979288059838,-0.9335945023726279,-0.9863579004389168,-0.9993612314964697,-0.9720803315334781,-0.9056148930754364,-0.8026441366016632,-0.6673188112222227,-0.5050938780648417,-0.3225086209028187,-0.12692304775795357,0.0737787908740953,0.2715066079387363,0.4582899991311313,0.6265997297314785,0.769651237904893,0.8816781202516227,0.9581645754108077,0.9960274359226903,0.9937404506461108,0.951395807911326,0.8707004194101736,0.754907114620345,0.6086835193148669,0.4379239036619803,0.2495115843134294,0.05104145804982027,-0.1494861483550045,-0.3439879711444478,-0.5246236457771968,-0.6841117518638993,-0.8160233270753474,-0.9150410184836715,-0.9771734249519197,-0.9999159904324799,-0.9823519625709777,-0.9251893469751009,-0.8307323675230189,-0.7027885831450755,-0.5465154052006796,-0.3682122023309151,-0.17506637303548334,0.025136378214610944,0.22432588256737282,0.4144728151330698,0.5879123569070828,0.7376531634700637,0.8576591859391448,0.9430929839768529,0.9905107229130667,0.9980009946506062,0.9652618664872971,0.8936130520169958,0.7859427135012517,0.6465910401070328,0.48117529496921946,0.2963633834271867,0.099605069895919,-0.10116832198744476,-0.2978636208585339,-0.4825520431997866,-0.6477888024436981,-0.78691320816836,-0.8943171583941532,-0.9656712020607164,-0.9980990591115405,-0.9902935632851236,-0.9425693539602713,-0.856850193049224,-0.7365914181937883,-0.5866406581752985,-0.41304242509566624,-0.2227944602180181,-0.023565655157003613,0.17661308098667425,0.3696725474092538,0.5478305209257188,0.7039054572284681,0.8316059787931573,0.9257844801794486,0.9826446279019616,0.999894390556573,0.9768384305597072,0.9144061331923233,0.8151141430979802,0.682964918388419,0.5232853916376325,0.3425122413382769,0.1479324295208694,-0.05261053553737382,-0.25103277097251436,-0.4393358804892509,-0.6099293695527854,-0.7559366180710573,-0.8714720768105582,-0.9518785137671127,-0.9939147470940326,-0.9958862970764232,-0.9577136905744541,-0.8809356645837387,-0.7686471397785334,-0.6253744643215691,-0.45689295686169873,-0.2699941035556126,-0.07221179339804455,0.12848137269015614,0.32399545724501566,0.5064492914739382,0.6684881650110389,0.8035802941427307,0.9062801178771687,0.9724478083976719,0.9994161474381209,0.9860980417975206,0.933030344044765,0.8423522120024963,0.7177188793384783,0.5641543131707076,0.3878486980541213,0.19590890976659045,-0.003927962709393271,-0.20360649908826253,-0.39507766160854313,-0.5706232515833828,-0.7231670298329628,-0.8465599597423802,-0.9358280748039909,-0.9873729791057327,-0.9991168985982224,-0.9705864361243167,-0.9029316540490856,-0.7988797152690505,-0.662624951331048,-0.499659789012441,-0.3165533507087483,-0.12068665324322334,0.08004492077256282,0.2775498856516355,0.46386682025603376,0.6314852927218784,0.7736486058154736,0.884626159262702,0.9599444501294684,0.9965673996350801,0.993018737425928,0.9494415100038636,0.8675923145244816,0.750770490401587,0.6036851230016343,0.43226522050834504,0.24342071572290727,0.04476392681193906,-0.15569729508295507,-0.3498823621633271,-0.529963678304622,-0.6886821692966336,-0.8196398959791545,-0.9175579550392629,-0.9784892714975781,-0.9999777052206189,-0.9811570578797371,-0.9227859893884062,-0.8272174363364977,-0.6983037651637783,-0.5412414833467821,-0.36236176828755445,-0.16887525768056966,0.03141861114639182,0.23044599639376628,0.42018410818935115,0.5929846070858265,0.7418819084691958,0.8608739651333152,0.9451642096818301,0.9913549040625332,0.9975841023195167,0.9636007055970965,0.8907745839295572,0.7820413568077459,0.641784058416748,0.4756564576169974,0.29035515463493994,0.09334964124469279,-0.10741879429529173,-0.3038571804108527,-0.48804708973218386,-0.652563830741553,-0.7907757369377034,-0.8971114891784474,-0.9672846954425863,-0.998466675205418,-0.989400483493689,-0.9404515783118538,-0.8535930890373603,-0.7323262796152917,-0.5815394126798762,-0.4073107037860966,-0.2166633086644256,-0.01728221995435212,0.1827955146925047,0.37550476584067655,0.553077427475867,0.7083555492002854,0.8350798730693978,0.928142144152127,0.9837910241840448,0.9997833079371242,0.9754743467768481,0.911844034435787,0.8114573075167755,0.6783607529508324,0.5179194901592922,0.3366009031990948,0.14171394064183537,-0.05888550799547778,-0.25711128299686975,-0.44497290738314815,-0.6148976828762815,-0.7600359452145087,-0.8745371739797024,-0.9537858269571552,-0.9945873925488745,-0.9952971604713908,-0.9558865199941431,-0.87794411323728,-0.7646117970402457,-0.620457994775616,-0.45129354329582366,-0.2639374582173371,-0.06594205953850543,0.13471146222582978,0.3299347676737063,0.5118584093126517,0.6731490488290375,0.8073050638076862,0.9089186279991696,0.9738937006870356,0.9996111380060182,0.985034270578079,0.9307506916342744,0.8389485711435166,0.7133284507253245,0.5589540748917228,0.3820482716091893,0.18974211022834056,-0.010212551776466584,-0.2097555460258051,-0.40084329845903605,-0.5757730656420446,-0.7274934321992896,-0.8498885532245868,-0.9380246838660415,-0.988349058480843,-0.9988331025465315,-0.9690542044589252,-0.9002127509974232,-0.7950837397581152,-0.6579049190567924,-0.4942059643805029,-0.3105855772796027,-0.11444549184304749,0.0863078890540114,0.28358220068976553,0.46942531955350236,0.6363459132845838,0.7776154161268833,0.8875392572793747,0.9616864089294304,0.9970680008942463,0.9922578019176842,0.9474497110231596,0.864449941447984,0.7466042122242404,0.5986628823125808,0.42658946372824275,0.23732023249262832,0.038484627487172435,-0.16190229207370582,-0.3557629335169095,-0.5352827783086481,-0.6932253851374859,-0.8232240907182466,-0.9200386498593115,-0.9797664696405405,-0.999999922855149,-0.97992339941346,-0.9203461835691794,-0.8236698316874409,-0.6937913655565574,-0.535946183518164,-0.3564970216665677,-0.16267747208506322,0.037699603104794845,0.23655700805620006,0.425878804799456,0.598033435538365,0.7460813505912524,0.864054741498161,0.9471981032584824,0.9921599286420703,0.9971278073774188,0.9619014843732626,0.88790093199713,0.7781091110179761,0.6369517275178559,0.4701188327696403,0.2843354573848626,0.0870905254661433,-0.11366502377192696,-0.30983873820175645,-0.49352285936383566,-0.6573130840508977,-0.7946070316200068,-0.8998703858224527,-0.9688599829804657,-0.9987948538283946,-0.9884683243281109,-0.9382966566747849,-0.8503022697764652,-0.7280322155883507,-0.57641519752093,-0.4015628945046227,-0.2105235993359445,-0.010998102137871982,0.1889707283348426,0.38132215257201246,0.558302488554675,0.7127776625204681,0.8385207833323065,0.9304631483346448,0.9848985626546004,0.9996327358423815,0.9740717336748944,0.9092459196323379,0.8077684209670122,0.6737297935970197,0.5125331318793096,0.3306762699860301,0.13548985434061334,-0.06515815459188597,-0.26317963963097385,-0.45059235872182607,-0.6198417089499743,-0.7641052524321215,-0.8775677286496864,-0.9556554674820099,-0.9952207537568506,-0.994668711585066,-0.9540215937753981,-0.874917884824257,-0.7605462536389682,-0.6155170183584713,-0.44567630452213713,-0.2578703878684173,-0.059669721097356236,0.1409362309236726,0.33586104632787117,0.517247309750404,0.6777833445828775,0.8109979465095465,0.9115212376220605,0.9753011260897454,0.9997666458989908,0.983931592441321,0.9284342764011664,0.8355117934652355,0.7089098470404624,0.5537317590254719,0.37623275500855574,0.18356781624972998,-0.016496737467706784,-0.2158963080316152,-0.40659310278731786,-0.580900137796463,-0.7317911000051446,-0.8531835777795836,-0.9401842427970399,-0.9892861000110474,-0.9985098545507808,-0.9674836970574157,-0.8974582913117263,-0.7912563600024278,-0.6531589008316226,-0.4887326195843782,-0.3046055363307008,-0.10819981007091976,0.09256744834350564,0.2896033147883224,0.47496527747374073,0.6411813994347249,0.7815515121579855,0.8904172992401543,0.9633903830066821,0.9975292199273951,0.9914576741768212,0.9454204896413582,0.8612734242980707,0.742408444648254,0.5936169956166126,0.4208968575028058,0.2312103755795773,0.03220380809515923,-0.1681008942421857,-0.3616294529338671,-0.5405807356950886,-0.697741219938443,-0.8267757697241069,-0.9224830049612944,-0.9810049689339446,-0.9999826424585164,-0.9786510358992072,-0.917870025884821,-0.8200896936991953,-0.6892515625542457,-0.5306297148690471,-0.3506181941141298,-0.15647326104897502,0.04397910600298476,0.24265867618183723,0.4315566800337543,0.6030586428457171,0.750251323966752,0.8672013893993253,0.9491945843720494,0.9929257648547913,0.9966321278470822,0.9601642699316931,0.8849922097232636,0.774146131447921,0.6320942382779288,0.4645626391526441,0.27830452944316264,0.08082796978292636,-0.11990676370367773,-0.31580805797147155,-0.4989791358127054,-0.6620363747855625,-0.7984069408865229,-0.9025937393552242,-0.9703970024535662,-0.9990835820180669,-0.987497122606844,-0.9361046741643111,-0.84697786524737,-0.7237093957200532,-0.5712682150947934,-0.3957992242781007,-0.204375574739246,-0.004713549918091038,0.19513847800488823,0.3871244778279214,0.5635054977827859,0.7171716225240728,0.8419285736725676,0.9327474010518996,0.9859671995680548,0.9994426802196399,0.972630646654282,0.9066118914024974,0.8040476291526586,0.6690722232406874,0.5071265295480536,0.3247385757103415,0.12926041645660213,-0.07142822756904821,-0.2692376011867781,-0.4561940125483079,-0.6247612524946426,-0.7681443789943345,-0.8805636211193942,-0.9574873614944839,-0.9958148057014714,-0.9940009752399445,-0.952118985579106,-0.8718570988747447,-0.7564506701558201,-0.6105517302289893,-0.4400414624104264,-0.25179313214609605,-0.05339502581963542,0.14715543291733246,0.3417740591308314,0.5226157799363181,0.682390869226987,0.8146587963867064,0.9140878439479256,0.976670029015187,0.9998826649747843,0.9827900509408445,0.9260811898392912,0.8320420147135541,0.7044632428102904,0.5484875718433546,0.3704023779535887,0.1773862717033454,-0.022780271570246147,-0.22202854255766508,-0.4123268474872125,-0.5860042655374589,-0.7360598635010978,-0.8564449032604389,-0.9423066662986536,-0.9901840666850139,-0.9981471673786426,-0.965874975951743,-0.894668383787738,-0.787397727175965,-0.6483870841138439,-0.48323997081062486,-0.2986134640619047,-0.10194985461887934,0.09882335140075854,0.2956129901252448,0.480486475199101,0.6459915601798424,0.7854567384407947,0.8932601714679883,0.9650563050576294,0.9979510385172907,0.9906183858068563,0.9433539260086774,0.8580628885409227,0.7381833533981237,0.5885476622162445,0.41518762667909903,0.2250913863113126,0.025921716715918572,-0.17429285675579423,-0.36748168869832176,-0.5458573412050426,-0.7022294953327438,-0.8302947927123949,-0.9248909237980334,-0.9822047204595266,-0.999925864713265,-0.9773400175928825,-0.9153576141388253,-0.8164771637801078,-0.6846845354701376,-0.5252922873892041,-0.3447255178322664,-0.15026286962678126,0.05025687181305484,0.2487507597668916,0.43721750962764433,0.608060030522164,0.7543916638897166,0.8703137845502879,0.9511535741654871,0.9936523824516994,0.9960970833068662,0.9583891308889437,0.8820485319968752,0.7701525746274107,0.6272117825579786,0.4589880962246345,0.27226260901963817,0.07456222155390714,-0.1261437675538609,-0.32176490394392515,-0.5044157035665993,-0.6667335163848485,-0.8021753146483751,-0.9052814422095522,-0.9718956931527224,-0.9993328483702432,-0.9864869166904471,-0.9338757173593939,-0.8436200067576387,-0.7193579907532861,-0.5660986686970608,-0.39001992076027836,-0.19821947770910497,0.0015711884776458168,0.20129852008865412,0.3929115124280666,0.5686862496515619,0.7215372556583974,0.8453031094892242,0.9349948120803993,0.986996892715312,0.9992131485757203,0.9711511426351153,0.903942053785156,0.8002950790374761,0.6643882258468773,0.5016998967156869,0.31878805489917267,0.12302587304023986,-0.07769547927174789,-0.2752849283864907,-0.4617776476079746,-0.629656119198076,-0.7721531653635886,-0.8835247330571264,-0.9592814366383987,-0.9963695249188197,-0.9932939778102859,-0.9501787705545152,-0.8687618762836606,-0.7523252083582249,-0.6055623265064699,-0.43438923952608177,-0.24570593108991745,-0.0471182215432447,0.15336882256066892,0.3476735725303124,0.5279636078260843,0.6869714407732824,0.8182874688429895,0.9166183456008604,0.9780003553944115,0.9999591906508682,0.981609691165336,0.9236915248908135,0.8285393719379122,0.699988813666855,0.543221720480457,0.36455737073293154,0.17119772074770906,-0.029062905896953376,-0.22815200739274563,-0.4180443060870765,-0.5910852472618354,-0.7402995540793824,-0.8596724008512651,-0.9443918705393264,-0.991042923034826,-0.9977450553555416,-0.9642281046832286,-0.8918431386212698,-0.7835079936870675,-0.6435896573809232,-0.47772823500797335,-0.29260959714828977,-0.09569587234810661,0.10507535113001024,0.3016109893300621,0.4859886946532268,0.6507762055283044,0.7893309407264083,0.8960677616750626,0.9666841092816258,0.9983334400029281,0.9897399699579861,0.9412501017503929,0.8548184609865075,0.7339291053566483,0.5834550823401806,0.40946199676020734,0.21896350637577122,0.019638601479937942,-0.18047793504418427,-0.37331940965857047,-0.5511123864231561,-0.7066900340424155,-0.8337810206884928,-0.9272623112613381,-0.9833656768294803,-0.9998295918620019,-0.975990396277109,-0.9128090475664729,-0.8128323846182057,-0.6800904646927419,-0.5199341118965268,-0.33881922557010696,-0.14404654311662266,0.05653265257525572,0.2548330181858169,0.44286106998948427,0.6130374010227242,0.7585022068249337,0.8733918040175602,0.9530749952624785,0.9943397527328256,0.9955226948899674,0.9565761373595169,0.8790700150874502,0.7661285982942336,0.6223045532056729,0.45339542416899736,0.2662099347582689,0.0682935282638237,-0.13237578897319796,-0.3277090408350876,-0.5098323478918758,-0.6714043233209803,-0.8059120040621404,-0.9079333882265069,-0.9733559958825154,-0.9995426430393833,-0.9854377464800486,-0.9316098742994867,-0.8402288269360212,-0.7149781725599917,-0.5609067625148397,-0.38422521222217865,-0.1920555513992525,0.007855864814526433,0.20745061127658734,0.3986830277957479,0.573844539531301,0.725874389489515,0.8486442574947453,0.9372052926518261,0.9879876014255365,0.9989441499766801,0.9696332800548946,0.901236512233602,0.7965109188398845,0.6596779864241945,0.49625344772373503,0.31282494258672155,0.11678647034362273,-0.08395966215574939,-0.2813213823726846,-0.4673430433583191,-0.6345261157223966,-0.7761314532007741,-0.8864509475047805,-0.9610376220513133,-0.996884889498588,-0.9925477472211385,-0.948201025336375,-0.8656323393062108,-0.7481700311937381,-0.6005490042624625,-0.428719859120797,-0.23960902513257734,-0.04083955618961401,0.1595761544371175,0.353559353507132,0.5332905821913044,0.6915248782980264,0.8218838205527698,0.9191126426310688,0.9792920526821653,0.9999962199046339,0.9803905597366659,0.9212653759429301,0.8250040034857496,0.6954867363412297,0.5379344129273657,0.358697964212774,0.16500240781875405,-0.035344392295895616,-0.23426646067214385,-0.42374525275884434,-0.5961428822808952,-0.7445100042805551,-0.8628659430721352,-0.9464397731576266,-0.9918626351373918,-0.9973035343641123,-0.9625431483000502,-0.8889826674040542,-0.7795873131727024,-0.6387668101215247,-0.47219762987905267,-0.28659417273079685,-0.0894381102784942,0.11132320058933534,0.30759707549392185,0.4914717185093651,0.655535146495938,0.7931739659915229,0.8988399589669817,0.9682737313836045,0.9986764092802061,0.9888224613259075,0.9391090999633903,0.8515402697832777,0.7296458685582627,0.5783394571352222,0.40372019389725633,0.21282697781216448,0.01335471055780424,-0.18665588480892192,-0.3791423852358999,-0.5563456637854721,-0.7111226598850273,-0.8372343159533128,-0.929597073686195,-0.9844877921882693,-0.9996938277073135,-0.9746022252592503,-0.9102244268311332,-0.8091555001749042,-0.6754695316789893,-0.5145554000286082,-0.3328995506144781,-0.1378245270510637,0.0628062004089248,0.26090521120147225,0.4484871382095296,0.6179905577511368,0.7625827904141118,0.8764353262255355,0.9549587717707033,0.9949878485483703,0.9949089852836316,0.9547253609530592,0.8760567766403887,0.7620743613874725,0.6173727440468362,0.4477848438855888,0.26014674572767993,0.062022137513397815,-0.1386025818090937,-0.3336402338633446,-0.515228854841439,-0.6760486111060967,-0.8096168615361344,-0.9105494726594812,-0.9747778529638854,-0.9997129577390128,-0.9843496534158475,-0.9293072344808125,-0.8368044597273917,-0.710570114134379,-0.5556927016182193,-0.3784153275436073,-0.18588403927266084,0.014140230860303539,0.21359450857329074,0.4044387959674548,0.5789801636797871,0.7301828527091649,0.851951885720412,0.9393787554565819,0.9889392865676649,0.9986356950474312,0.9680771188662082,0.898495373611506,0.7926952980267034,0.6549416910178371,0.4907873976961286,0.30684947430387893,0.11054245481111764,-0.09022052879825612,-0.2873467247172939,-0.47288997997714977,-0.6393710497125802,-0.7800790853711983,-0.8893421488825322,-0.9627558483673558,-0.9973608790848967,-0.9917623129471042,-0.9461858280416989,-0.8624686115530668,-0.743985302783916,-0.5955119615132491,-0.4230335451237482,-0.23350265508976575,-0.03455927775390943,0.16577718336893474,0.35943116958461796,0.5385964926269615,0.6960510019494711,0.82544770946729,0.9215706365185872,0.980545069858898,0.9999937512734967,0.9791327048081291,0.9188028388237122,0.8214360489973634,0.6909571886567817,0.5326258580223341,0.3528243898280489,0.15880057761905042,-0.04162448266070827,-0.24037166088675374,-0.4294294623260196,-0.601176970828088,-0.7486910478001099,-0.8660254037844112,-0.9484502932653526,-0.9926431706156492,-0.9968226218435569,-0.960820173354641,-0.8860870831190828,-0.7756358404919727,-0.6339187328288955,-0.46664837387209346,-0.28056742840675614,-0.08317681557945572,0.11756665300107531,0.31357101217786276,0.49693533019865355,0.6602681951140156,0.796985662444195,0.9015766538474529,0.9698251085766174,0.9989799328025,0.987865896150441,0.9369310052130313,0.8482284444133417,0.7253338121824002,0.5732009886586938,0.39796244488037963,0.20668204300130752,0.007070292150742392,-0.1928264620331361,-0.3849503854343272,-0.5615569665876331,-0.7155271977803324,-0.8406545421085418,-0.931895118854035,-0.985571022214564,-0.9995185776116219,-0.9731755593694091,-0.9076038540201972,-0.805446655679909,-0.6708219189465673,-0.5091563642338969,-0.3269667267812253,-0.13159706718773298,0.06907726752125501,0.2669670989741703,0.4540954920692477,0.6229193050671797,0.7666332534820727,0.8794442309610678,0.9568048292847257,0.9955966442998354,0.9942559787281493,0.9528368747716676,0.8730089356728487,0.7579900240414414,0.6124165498782354,0.44215657698099686,0.2540732814121384,0.055748297010576126,-0.14482390011558421,-0.339558248758231,-0.520605011264263,-0.6806661963000447,-0.813289740735568,-0.9131295921781875,-0.976161208236273,-0.9998437857420437,-0.9832226804753621,-0.9269678888532413,-0.8333470403876473,-0.7061339895860902,-0.5504566919520716,-0.3725904962034834,-0.17970518509192707,0.020424038394644718,0.2197299693066764,0.41017858960197107,0.5840929192499619,0.7344624751415969,0.855225863521292,0.9415151146470797,0.9898519105520557,0.9982877959713369,0.9664827205343346,0.8957187461884064,0.7888483673075922,0.6501795267021628,0.4853019625310986,0.30086188606989483,0.10429407306895087,-0.09647783190711674,-0.29336071743114045,-0.47841823837137415,-0.644190729803257,-0.7839959059512226,-0.8921982229936638,-0.9644360477199647,-0.9977974748770755,-0.9909377060112905,-0.9441332582668189,-0.8592708179851994,-0.7397711884170781,-0.590451397212299,-0.41733052213315924,-0.22738706215109555,-0.028277634294669875,0.17197166442800443,0.36528878883736554,0.5438811295598319,0.7005496329546296,0.8289789948199439,0.9239922301776664,0.9817593574329179,0.9999517848549624,0.9778361760625227,0.916304010798535,0.8178356493996837,0.6864003495216591,0.5272962654430376,0.3469368795737174,0.1525924751086996,-0.04790292894050803,-0.24646736689327906,-0.4350967102736015,-0.6061873140665849,-0.7528425194950841,-0.8691506581957764,-0.9504233514509496,-0.9933844986399962,-0.9963023367889968,-0.9590592479011868,-0.8831565001360848,-0.7716537317202814,-0.629045616992427,-0.46108068617174996,-0.27452960222093925,-0.07691223555948351,0.1238054617611332,0.3195325634232916,0.502379313919221,0.6649751644362496,0.8007658795299419,0.9042777382224084,0.9713381795843284,0.9992439985812339,0.9868703122140144,0.9347159035297568,0.844883115687291,0.7209931065467718,0.5680398798699068,0.39218897712924117,0.20052894465599,0.0007855944812098249,-0.1989894229912122,-0.3907431808492618,-0.5667460889935643,-0.7199034737579819,-0.844041564061816,-0.9341563559966115,-0.986615324122908,-0.9993038484969571,-0.9717104549580071,-0.904947432641258,-0.8017059976254209,-0.6661478100670426,-0.5037372177636441,-0.3210209884048518,-0.12536440949899708,0.07534560621719615,0.27301844207126036,0.4596859100497364,0.6278234482953352,0.7706534360435257,0.882418399378226,0.9586130948888195,0.9961661159409905,0.9935637010160004,0.9509107534068006,0.8699266125685026,0.7538757475796216,0.6074361664597522,0.43651084576075044,0.24798978170143612,0.04947225455961202,-0.1510394981625449,-0.3454628517698986,-0.5259606048123968,-0.6852568965172863,-0.8169304965890329,-0.9156736448730018,-0.9775060070598881,-0.9999351218810183,-0.9820568721718081,-0.924591929816264,-0.8298567054780254,-0.7016699741332435,-0.545198940328769,-0.36675094827119453,-0.173519232909589,0.0267070392196187,0.22585675113821768,0.4159021819884195,0.5891826042980308,0.7387130877499446,0.8584660615817583,0.943614285841371,0.9907254373318047,0.9979004664897233,0.9648501480349464,0.8929067396356283,0.7849702786286482,0.6453916815733011,0.479797358892501,0.2948624143830051,0.09804157191591824,-0.10273132433132881,-0.2993631229733343,-0.4839276001857029,-0.6489849656263634,-0.787881760234134,-0.8950190570288877,-0.966078153744583,-0.9981946596304546,-0.9900739589840803,-0.9420433970842059,-0.8560390849091392,-0.7355278545424947,-0.5853675112419091,-0.4116110154074336,-0.2212624878704104,-0.02199487392440677,0.17815935294444551,0.3711319799010354,0.5491442842572413,0.7050205936264607,0.8324775371319647,0.9263773279599639,0.9829348674422529,0.9998703223066225,0.9765010247101711,0.9137689905661472,0.8142029469016445,0.68181639892205,0.5219458456977619,0.3410356659944882,0.14637834549543444,-0.054179483148668196,-0.2525533379233154,-0.44074677275648777,-0.611173714097859,-0.7569642553904316,-0.8722415828646545,-0.9523588697824978,-0.9940865899294395,-0.995742699750646,-0.9572604414927669,-0.8801910342074852,-0.7676411441430607,-0.6241476550907036,-0.45549478669059,-0.26848093265555717,-0.07064461765751337,0.13003938044888355,0.32548149376054547,0.5078034546445597,0.6696558685466905,0.8045144679375177,0.9069431054043492,0.972812884643393,0.9994685961863288,0.9858357488402362,0.9324638824057893,0.8415044157390038,0.7166239231007561,0.5628563346225125,0.38640001868446766,0.1943679258116122,-0.005499134217817277,-0.2051445242582516,-0.39652054267672443,-0.5719128260429909,-0.724251314963637,-0.8473952480325498,-0.9363806957994817,-0.9876206566654375,-0.9990496488447034,-0.9702069698938001,-0.9022552676176185,-0.7979336737600132,-0.661447389658485,-0.49829817466358073,-0.3150625703305503,-0.11912680016241337,0.0816109689098054,0.2790590014766404,0.4652581713403739,0.6327027937314084,0.7746431793092708,0.8853577140032852,0.9603834971601148,0.996696240978815,0.9928321794907992,0.9489470729364659,0.8668099290730257,0.7497316945076975,0.6024317905068313,0.4308478732201853,0.2418964868818527,0.04319425805178813,-0.15724913044635258,-0.35135380967786894,-0.5312954239506659,-0.6898205304342284,-0.8205389852937641,-0.9181815302589126,-0.9788121963177605,-0.9999869625483434,-0.9808522745523109,-0.9221794512156347,-0.8263335928597986,-0.6971782440958356,-0.5399196544190707,-0.3608969143973516,-0.16732642705865344,0.032988985169043965,0.23197461207207618,0.42160934705625613,0.5942490177914855,0.7429345226435583,0.8616723519203568,0.94567618612632,0.9915598324043456,0.9974737219013504,0.9631794658513747,0.8900594650218766,0.7810611851668563,0.6405783447416785,0.4742738042014582,0.28885129621027644,0.09178519831346756,-0.10898075907006503,-0.3053537042607102,-0.48941784781112446,-0.6537535678190964,-0.7917364947363619,-0.8978045395707537,-0.967682101581221,-0.9985524176570272,-0.9891711059817689,-0.9399163270392686,-0.8527735399720481,-0.7312554687635892,-0.5802605044054431,-0.40587525085568865,-0.215129174156521,-0.015711244799917805,0.18434000451666918,0.3769605119810671,0.5543857488349727,0.7094637073706862,0.835943198217651,0.9287258356589138,0.9840715534565684,0.9997493668460864,0.9751273034869522,0.91119787825498,0.8105380849876894,0.6772055179149503,0.5165748101176659,0.33512098217691044,0.14015843422544005,-0.06045389737374953,-0.25862933359302576,-0.446379426608215,-0.6161359739688662,-0.7610560926857615,-0.8752980557056541,-0.9542567718108452,-0.9947494167527463,-0.9951437328330874,-0.9554238251786492,-0.877190802463306,-0.7635982362497047,-0.6192250405835031,-0.4498908960608645,-0.2624216586210031,-0.06437420943196158,0.13626816283668003,0.331417568218678,0.5132075381316262,0.6743101225667273,0.8082312796051847,0.9095726501164628,0.9742491655058475,0.9996537167466206,0.9847622468923258,0.9301750307914548,0.838092478020516,0.71222643441855,0.5576505576563585,0.38059579819848516,0.18819922981625153,-0.011783645711909764,-0.2112915227197984,-0.40228224272212354,-0.5770569736601432,-0.7285705496660384,-0.8507154615568182,-0.9385680504055959,-0.9885869801334667,-0.9987559886952382,-0.9686651635615057,-0.8995274652845777,-0.7941298330830282,-0.6567208433783885,-0.4928394497651682,-0.30909170790401375,-0.11288448555145805,0.08787310812962945,0.2850885385999791,0.47081205584784375,0.6375571486509343,0.7786023256922194,0.8882620587390428,0.9621159661711856,0.9971869984744174,0.992061443046215,0.9469459109221635,0.8636590082893455,0.7455580285076561,0.5974036196823947,0.4251678830356359,0.23579363762650013,0.03691455545568205,-0.16345255169851433,-0.3572308898011516,-0.5366092579640565,-0.69435691779622,-0.8241150643216166,-0.9206531492792859,-0.9800797244180418,-0.9999993056964124,-0.9796089351961302,-0.9197305483394944,-0.8227778416890845,-0.6926589768882927,-0.534619042744344,-0.3550286258048908,-0.16112701214288994,0.039269628118404495,0.2380833104647714,0.4272998593837313,0.5992919596169064,0.7471266130839055,0.8648446078949223,0.9477007340609368,0.9923550628126983,0.9970075790617828,0.9614707399723419,0.8871770348089794,0.7771212413235823,0.6357397063247253,0.46873151662742235,0.2828287689792231,0.08552519937622721,-0.11522588928316439,-0.3113322246770291,-0.49488876439360097,-0.6584963480310435,-0.7955599572033666,-0.9005545605982027,-0.9692478278771214,-0.9988707348260443,-0.9882291826652747,-0.9377521321470725,-0.8494743121565025,-0.7269541998311239,-0.5751305784197236,-0.40012345502950475,-0.2089873632630404,-0.009426995112144261,0.19051337502103244,0.38277415486195365,0.5596053162653369,0.713878798693208,0.8393758411903597,0.9310376605130147,0.9851693705790112,0.999588923250859,0.9737150666521421,0.9085907754187993,0.8068412084127589,0.672567888621179,0.5111833708480483,0.3291930617393145,0.1339329869727034,-0.06672592378878105,-0.2646951139124154,-0.45199444935007993,-0.6210738976801407,-0.7651178697614704,-0.8783199559941336,-0.9561169825725748,-0.9953729529295492,-0.9945054596943155,-0.953549471501617,-0.8741559234067757,-0.7595251677270543,-0.614277967904556,-0.4442692356250346,-0.2563520194467994,-0.058101258551740184,0.14249156289997542,0.3373405523343098,0.5185913509297952,0.6789377426625172,0.8119161677260873,0.9121662684969498,0.9756469654414347,0.9997993529502113,0.9836498487714896,0.9278494390919331,0.8346474372966918,0.7078008141922729,0.5524227545893542,0.3747765449266981,0.1820231003212176,-0.01806769177510397,-0.2174301755815527,-0.408028053409842,-0.5821783286611627,-0.732861007263984,-0.8540020734926833,-0.9407183334187084,-0.989514256359153,-0.9984228796475644,-0.9670850968594576,-0.8967641333849412,-0.7902946258387987,-0.6519683579158687,-0.48736125867725966,-0.3031086369626787,-0.10663771222523075,0.0941317765343659,0.29110681528646765,0.47634734420467567,0.6423863213163922,0.7825307188138012,0.8911313188696178,0.9638104334929114,0.9976383690438452,0.9912515221248086,0.944907346405914,0.860473974672611,0.7413549144310617,0.5923518525893968,0.4194710995554462,0.22968147498603747,0.030633394807315372,-0.1696495168963097,-0.36309386000647514,-0.5419018969666667,-0.6988658794249193,-0.827658592424402,-0.9230884043101187,-0.9813085412958398,-0.9999721508376958,-0.9783269032127158,-0.9172453179146701,-0.8191895924110331,-0.6881123510127442,-0.529297314668426,-0.3491463142796228,-0.1549212330267766,0.04554871999465024,0.24418260503478043,0.4329734942067427,0.6043112305879142,0.7512891934918061,0.867982704207608,0.9496878496795214,0.9931110971468391,0.9965020563827597,0.9597240378890994,0.8842595628471592,0.7731506027189695,0.6308759574390596,0.463170715079958,0.2767950705677773,0.0792618223616229,-0.121466468300147,-0.31729844808243324,-0.5003401338427318,-0.6632131189317095,-0.7993519966160352,-0.9032690114908346,-0.9707752707891449,-0.9991495985646068,-0.9872482262387083,-0.9355508978891008,-0.8461415317754855,-0.7226242176368046,-0.569977935906836,-0.394355855113302,-0.2028372977795919,-0.0031423730765384483,0.19667922062164758,0.3885726789160721,0.5648027803858701,0.7182656932065175,0.8427753304673475,0.9333127112097712,0.986228275447943,0.9993889978581463,0.9722643699863063,0.9059477850331127,0.8031124631961434,0.667903694217935,0.5057717408401619,0.32325213882285087,0.1277022496302655,-0.07299531466093538,-0.2707504392951408,-0.45759161919977265,-0.6259872901933135,-0.7691494261854218,-0.8813071643708903,-0.9579394285929855,-0.9959571738314175,-0.993827905544881,-0.9516374544949218,-0.8710865169096782,-0.7554220994534203,-0.6093066324533291,-0.43863002742773766,-0.250272254871817,-0.05182601278602091,0.14870933482653237,0.34325021216126544,0.5239546803890932,0.6835385460520796,0.8155689867544222,0.9147238581029358,0.9770062292398051,0.9999054990447578,0.9824985984152764,0.9254871991635677,0.8311694296398368,0.7033472372252235,0.5471731319095385,0.36894248871806595,0.17583978127165215,-0.02435102419999037,-0.22356024037884922,-0.4137577477914966,-0.5872766887626869,-0.7371225182927552,-0.8572549540253759,-0.9428314599069451,-0.990402448716883,-0.998050334858838,-0.9654668321971708,-0.8939653810648868,-0.786428203510333,-0.6471901209848443,-0.48186381777773324,-0.2971135938260318,-0.10038672691894145,0.10038672691897264,0.29711359382606173,0.4818638177777607,0.6471901209848682,0.7864282035103525,0.8939653810648753,0.965466832197179,0.9980503348588434,0.9904024487168864,0.9428314599069345,0.8572549540253598,0.737122518292734,0.5872766887626155,0.4137577477915198,0.22356024037881866,0.024351024199959027,-0.17583978127162705,-0.3689424887181479,-0.5471731319095647,-0.7033472372252054,-0.8311694296398542,-0.9254871991635796,-0.9824985984152929,-0.9999054990447573,-0.9770062292398105,-0.9147238581029231,-0.815568986754404,-0.6835385460520568,-0.5239546803890666,-0.343250212161236,-0.1487093348265576,0.05182601278605222,0.25027225487190236,0.43863002742776586,0.6093066324533539,0.7554220994534036,0.8710865169097215,0.9516374544949489,0.9938279055448782,0.9959571738314146,0.9579394285929765,0.8813071643709024,0.7691494261853655,0.625987290193289,0.4575916191997448,0.2707504392951106,0.07299531466090411,-0.12770224963035298,-0.3232521388228805,-0.5057717408401399,-0.6679036942179585,-0.8031124631961959,-0.9059477850331259,-0.9722643699863136,-0.9993889978581473,-0.9862282754479378,-0.9333127112097395,-0.8427753304673613,-0.7182656932064956,-0.5648027803858442,-0.38857267891609565,-0.1966792206215611,0.003142373076569799,0.20283729777956694,0.3943558551133308,0.5699779359068617,0.7226242176368656,0.8461415317755022,0.9355508978890917,0.9872482262387133,0.9991495985646055,0.9707752707891374,0.9032690114908212,0.7993519966160163,0.6632131189317286,0.5003401338427046,0.3172984480823496,0.12146646830011588,-0.07926182236165415,-0.27679507056780744,-0.46317071507998575,-0.6308759574391279,-0.7731506027189534,-0.8842595628471739,-0.9597240378891082,-0.9965020563827576,-0.9931110971468288,-0.9496878496795116,-0.8679827042075924,-0.7512891934917855,-0.6043112305878893,-0.4329734942066632,-0.24418260503475003,-0.045548719994675704,0.15492123302680758,0.3491463142796522,0.5292973146684526,0.6881123510127669,0.819189592411051,0.9172453179146827,0.9783269032127222,0.9999721508376964,0.9813085412958338,0.9230884043101066,0.8276585924244163,0.6988658794248968,0.5419018969665926,0.3630938600064989,0.16964951689627877,-0.030633394807346708,-0.229681474986068,-0.4194710995555263,-0.5923518525894221,-0.7413549144310827,-0.860473974672627,-0.9449073464059057,-0.9912515221248203,-0.997638369043843,-0.9638104334929182,-0.8911313188696036,-0.7825307188137817,-0.6423863213163246,-0.4763473442046481,-0.2911068152864376,-0.09413177653433469,0.10663771222526192,0.30310863696270857,0.4873612586772871,0.6519683579158925,0.7902946258387831,0.8967641333849551,0.9670850968594801,0.9984228796475662,0.9895142563591486,0.9407183334186977,0.8540020734926375,0.7328610072639239,0.5821783286611834,0.40802805340981335,0.21743017558152208,0.018067691775072624,-0.18202310032130434,-0.3747765449267272,-0.5524227545893804,-0.707800814192295,-0.8346474372967403,-0.9278494390919659,-0.9836498487714953,-0.9997993529502118,-0.9756469654414279,-0.9121662684969136,-0.8119161677261022,-0.6789377426624942,-0.5185913509297685,-0.33734055233428034,-0.14249156289988812,0.058101258551828225,0.2563520194468297,0.4442692356250627,0.6142779679045359,0.7595251677271116,0.874155923406791,0.9535494715016092,0.9945054596943187,0.9953729529295462,0.956116982572549,0.8783199559941186,0.7651178697614502,0.6210738976801161,0.45199444935005195,0.2646951139123852,0.06672592378874977,-0.13393298697273448,-0.32919306173929047,-0.5111833708480753,-0.6725678886212443,-0.8068412084127439,-0.9085907754188124,-0.9737150666521492,-0.99958892325086,-0.985169370578996,-0.931037660513024,-0.8393758411903426,-0.713878798693186,-0.5596053162653581,-0.3827741548618722,-0.19051337502100166,0.00942699511211877,0.20898736326307105,0.40012345502953345,0.5751305784197958,0.7269541998311454,0.849474312156489,0.9377521321470834,0.9882291826652796,0.9988707348260428,0.9692478278771137,0.9005545605981892,0.795559957203382,0.65849634803102,0.4948887643935243,0.3113322246769993,0.11522588928313325,-0.0855251993762018,-0.28282876897925313,-0.4687315166275003,-0.6357397063247057,-0.777121241323602,-0.8871770348089938,-0.9614707399723349,-0.9970075790617896,-0.9923550628126944,-0.9477007340609268,-0.8648446078949067,-0.7471266130839224,-0.5992919596168358,-0.4272998593837029,-0.23808331046479617,-0.03926962811837317,0.16112701214292088,0.3550286258049201,0.5346190427443704,0.6926589768883153,0.8227778416891024,0.9197305483395067,0.9796089351961366,0.9999993056964125,0.9800797244180356,0.9206531492792959,0.8241150643215667,0.6943569177961566,0.5366092579640779,0.35723088980112233,0.16345255169848338,-0.03691455545577018,-0.23579363762658584,-0.4251678830356128,-0.59740361968242,-0.7455580285076769,-0.8636590082893614,-0.9469459109221918,-0.992061443046219,-0.9971869984744193,-0.962115966171177,-0.8882620587390023,-0.7786023256921997,-0.6375571486509102,-0.47081205584786623,-0.2850885385999491,-0.0878731081295416,0.11288448555143271,0.30909170790404356,0.4928394497651955,0.6567208433783693,0.7941298330830818,0.8995274652845915,0.9686651635615134,0.9987559886952397,0.9885869801334705,0.9385680504055655,0.8507154615568018,0.7285705496660558,0.5770569736601177,0.40228224272209484,0.21129152271976775,0.011783645711878414,-0.18819922981628234,-0.3805957981985142,-0.5576505576563846,-0.7122264344185721,-0.8380924780205331,-0.9301750307914662,-0.9847622468923214,-0.9996537167466198,-0.9742491655058276,-0.9095726501164734,-0.8082312796051663,-0.6743101225667041,-0.5132075381315993,-0.3314175682185948,-0.1362681628367053,0.06437420943199287,0.26242165862103334,0.44989089606084176,0.6192250405835724,0.7635982362497249,0.8771908024632938,0.9554238251786584,0.9951437328330905,0.9947494167527373,0.9542567718108359,0.8752980557056664,0.7610560926857411,0.6161359739688416,0.44637942660818697,0.2586293335929955,0.060453897373718236,-0.14015843422541482,-0.33512098217694003,-0.5165748101177414,-0.6772055179149734,-0.8105380849877079,-0.9111978782549695,-0.9751273034869592,-0.9997493668460884,-0.9840715534565729,-0.9287258356589021,-0.8359431982176337,-0.7094637073707042,-0.5543857488348992,-0.3769605119810381,-0.18434000451663837,0.01571124479994915,0.2151291741564961,0.40587525085576925,0.5802605044054686,0.7312554687635717,0.8527735399720644,0.9399163270392794,0.9891711059817735,0.9985524176570255,0.9676821015812131,0.8978045395707399,0.791736494736308,0.6537535678190728,0.4894178478110971,0.3053537042606803,0.10898075907009037,-0.09178519831355537,-0.2888512962103609,-0.4742738042014357,-0.6405783447417026,-0.7810611851668758,-0.8900594650219168,-0.9631794658513984,-0.9974737219013485,-0.9915598324043416,-0.9456761861263098,-0.861672351920341,-0.7429345226434992,-0.5942490177914603,-0.4216093470562792,-0.23197461207204567,-0.03298898516895581,0.16732642705868436,0.36089691439738086,0.5399196544190971,0.6971782440958582,0.8263335928598482,0.9221794512156248,0.980852274552317,0.9999869625483432,0.9788121963177657,0.9181815302588776,0.8205389852937462,0.6898205304342058,0.5312954239506393,0.3513538096778396,0.15724913044626548,-0.04319425805181945,-0.24189648688182797,-0.43084787322021356,-0.6024317905068564,-0.7497316945077181,-0.8668099290730413,-0.9489470729364757,-0.9928321794908029,-0.9966962409788125,-0.9603834971600903,-0.8853577140032707,-0.7746431793092511,-0.6327027937314281,-0.46525817134034614,-0.27905900147655577,-0.08161096890983081,0.1191268001624445,0.31506257033058005,0.49829817466360793,0.6614473896585512,0.7979336737600321,0.9022552676176321,0.9702069698938076,0.9990496488447023,0.9876206566654236,0.9363806957994707,0.8473952480325634,0.7242513149636155,0.5719128260429652,0.3965205426766435,0.20514452425822094,0.005499134217785927,-0.19436792581164294,-0.3864000186844965,-0.5628563346225384,-0.7166239231007779,-0.8415044157390207,-0.93246388240578,-0.9858357488402414,-0.9994685961863259,-0.9728128846433858,-0.906943105404336,-0.804514467937499,-0.6696558685466671,-0.5078034546444837,-0.32548149376056956,-0.13003938044885247,0.07064461765754465,0.26848093265553263,0.4554947866906685,0.624147655090728,0.7676411441430808,0.8801910342075001,0.957260441492776,0.9957426997506541,0.9940865899294361,0.9523588697825056,0.8722415828646392,0.7569642553904111,0.6111737140978343,0.4407467727564596,0.25255333792328505,0.054179483148636895,-0.14637834549552167,-0.34103566599457114,-0.5219458456977887,-0.681816398922073,-0.8142029469016296,-0.9137689905661831,-0.9765010247101901,-0.9998703223066221,-0.9829348674422471,-0.926377327959952,-0.8324775371319159,-0.7050205936263982,-0.5491442842572151,-0.3711319799010063,-0.17815935294441465,0.021994873924438118,0.22126248787044095,0.4116110154074622,0.5853675112418885,0.7355278545425159,0.8560390849091848,0.9420433970841974,0.9900739589840848,0.9981946596304527,0.9660781537445748,0.8950190570288483,0.7878817602341498,0.6489849656263396,0.48392760018567543,0.2993631229733586,0.10273132433124109,-0.09804157191594944,-0.2948624143829807,-0.4797973588925285,-0.6453916815733249,-0.7849702786287028,-0.8929067396356424,-0.9648501480349397,-0.9979004664897253,-0.9907254373318005,-0.9436142858413606,-0.8584660615817422,-0.7387130877499235,-0.5891826042980514,-0.41590218198839096,-0.22585675113813178,-0.02670703921958736,0.17351923290961987,0.36675094827117083,0.5451989403287953,0.7016699741333063,0.8298567054780112,0.9245919298162759,0.9820568721718141,0.9999351218810186,0.9775060070598695,0.9156736448729893,0.8169304965890148,0.6852568965172634,0.5259606048124185,0.34546285176981584,0.15103949816251389,-0.04947225455958656,-0.2479897817014665,-0.4365108457607787,-0.607436166459777,-0.7538757475796422,-0.8699266125685181,-0.9509107534068103,-0.9935637010160039,-0.9961661159409878,-0.9586130948888106,-0.8824183993782112,-0.7706534360435419,-0.6278234482953109,-0.4596859100496581,-0.2730184420712849,-0.07534560621716488,0.12536440949902816,0.3210209884048815,0.5037372177637203,0.6661478100670236,0.8017059976254397,0.9049474326412713,0.971710454958001,0.9993038484969604,0.9866153241229029,0.9341563559966206,0.8440415640617992,0.7199034737579603,0.5667460889934917,0.39074318084923293,0.19898942299123717,-0.0007855944812411758,-0.2005289446560764,-0.39218897712927003,-0.5680398798699325,-0.7209931065467936,-0.8448831156872775,-0.9347159035297881,-0.9868703122140287,-0.9992439985812327,-0.971338179584321,-0.9042777382224193,-0.8007658795298891,-0.6649751644361837,-0.5023793139192431,-0.3195325634232619,-0.1238054617611021,0.07691223555951478,0.2745296022209694,0.4610806861717778,0.6290456169924514,0.7716537317203014,0.8831565001360995,0.9590592479011957,0.9963023367889995,0.9933844986399992,0.9504233514509398,0.8691506581957328,0.7528425194951008,0.6061873140665599,0.4350967102735732,0.24646736689324866,0.047902928940419934,-0.15259247510861823,-0.34693687957369346,-0.5272962654430643,-0.6864003495216819,-0.8178356493997344,-0.9163040107985247,-0.9778361760625174,-0.9999517848549626,-0.9817593574329011,-0.9239922301776327,-0.8289789948199581,-0.7005496329546478,-0.5438811295598056,-0.36528878883728344,-0.17197166442802955,0.02827763429464439,0.22738706215112608,0.4173305221331877,0.5904513972123702,0.7397711884170991,0.8592708179851865,0.9441332582668293,0.9909377060112947,0.9977974748770697,0.9644360477199564,0.8921982229936753,0.7839959059512032,0.6441907298031895,0.4784182383713965,0.2933607174311105,0.09647783190708553,-0.10429407306898206,-0.30086188606997893,-0.4853019625310763,-0.6501795267021867,-0.7888483673076115,-0.8957187461884204,-0.9664827205343572,-0.9982877959713388,-0.9898519105520512,-0.9415151146470692,-0.8552258635212464,-0.7344624751415371,-0.5840929192499363,-0.41017858960189063,-0.21972996930664582,-0.020424038394556542,0.17970518509190198,0.3725904962035125,0.5504566919521452,0.7061339895860319,0.833347040387696,0.9269678888532531,0.9832226804753678,0.9998437857420421,0.9761612082362785,0.9131295921781515,0.8132897407355497,0.6806661963000217,0.5206050112641876,0.33955824875825497,0.14482390011549695,-0.05574829701060743,-0.25407328141222374,-0.442156576980974,-0.6124165498782153,-0.757990024041536,-0.873008935672864,-0.9528368747716943,-0.9942559787281466,-0.9955966442998377,-0.9568048292846835,-0.879444230961053,-0.766633253482016,-0.6229193050671552,-0.45409549206927047,-0.2669670989741401,-0.06907726752116702,0.1315970671878204,0.32696672678125493,0.5091563642338749,0.6708219189465906,0.8054466556799612,0.9076038540202341,0.9731755593694033,0.9995185776116229,0.9855710222145587,0.9318951188540443,0.8406545421084632,0.7155271977803502,0.5615569665876071,0.3849503854342982,0.19282646203316112,-0.007070292150887426,-0.20668204300128257,-0.39796244488040844,-0.5732009886587661,-0.7253338121823827,-0.8482284444133582,-0.9369310052130423,-0.9878658961504458,-0.998979932802496,-0.9698251085766236,-0.9015766538474393,-0.7969856624441761,-0.660268195113992,-0.496935330198577,-0.313571012177833,-0.11756665300104419,0.08317681557937368,0.2805674284068408,0.4666483738721715,0.6339187328289198,0.7756358404919924,0.8860870831190446,0.9608201733546654,0.996822621843564,0.9926431706156454,0.9484502932653246,0.8660254037844524,0.7486910478001269,0.6011769708279721,0.4294294623259913,0.24037166088666814,0.04162448266079054,-0.15880057761902525,-0.3528243898281846,-0.5326258580223607,-0.6909571886568454,-0.8214360489973489,-0.9188028388237021,-0.9791327048081355,-0.9999937512734969,-0.9805450698588807,-0.921570636518597,-0.8254477094673043,-0.6960510019494486,-0.5385964926268872,-0.35943116958453564,-0.16577718336895989,0.034559277753940756,0.23350265508979626,0.4230335451237251,0.5955119615133656,0.743985302783899,0.8624686115530826,0.9461858280417091,0.9917623129471008,0.9973608790848861,0.9627558483673474,0.8893421488825178,0.7800790853711786,0.6393710497125998,0.4728899799771221,0.28734672471726386,0.0902205287982249,-0.1105424548112053,-0.3068494743038547,-0.4907873976961559,-0.6549416910178607,-0.7926952980267572,-0.8984953736115447,-0.9680771188662017,-0.9986356950474328,-0.9889392865676772,-0.9393787554565516,-0.8519518857203658,-0.7301828527091435,-0.5789801636797616,-0.40443879596753013,-0.21359450857320456,-0.014140230860215354,0.18588403927269162,0.37841532754363627,0.5556927016181981,0.710570114134361,0.83680445972744,0.9293072344808241,0.984349653415853,0.9997129577390134,0.9747778529638912,0.9105494726594329,0.809616861536116,0.6760486111060526,0.5152288548414607,0.33364023386334185,0.13860258180906268,-0.06202213751342911,-0.2601467457277376,-0.4477848438855914,-0.6173727440468384,-0.7620743613874928,-0.8760567766404038,-0.9547253609530855,-0.9949089852836318,-0.99498784854837,-0.9549587717706856,-0.8764353262255615,-0.7625827904140547,-0.6179905577510674,-0.4484871382095016,-0.2609052112014146,-0.06280620040897861,0.13782452705115106,0.3328995506145881,0.5145554000286351,0.6754695316790333,0.8091555001748892,0.9102244268311345,0.9746022252592765,0.9996938277073143,0.9844877921882538,0.9295970736862045,0.8372343159533112,0.7111226598849454,0.5563456637854225,0.3791423852358183,0.186655884808947,-0.013354710557835589,-0.21282697781219512,-0.40372019389731106,-0.5783394571352941,-0.7296458685582646,-0.8515402697832941,-0.9391090999634011,-0.9888224613259163,-0.9986764092802001,-0.9682737313836038,-0.8988399589669679,-0.7931739659914865,-0.6555351464959573,-0.4914717185092635,-0.30759707549391907,-0.11132320058927594,0.08943811027855374,0.2865941727307724,0.4721976298791805,0.6387668101215489,0.7795873131727398,0.8889826674040815,0.9625431483000509,0.9973035343641147,0.9918626351373878,0.9464397731576074,0.8628659430720906,0.7445100042805533,0.5961428822808928,0.4237452527587902,0.2342664606720581,0.03534439229580748,-0.16500240781875694,-0.35869796421280326,-0.5379344129273202,-0.6954867363412931,-0.8250040034857995,-0.9212653759429423,-0.9803905597366721,-0.9999962199046342,-0.9792920526821417,-0.9191126426310229,-0.8218838205527519,-0.6915248782980038,-0.533290582191326,-0.35355935350712925,-0.1595761544370024,0.04083955618964534,0.23960902513263538,0.428719859120774,0.6005490042624648,0.7481700311938344,0.8656323393062406,0.9482010253363939,0.9925477472211354,0.9968848894985856,0.9610376220513046,0.8864509475047528,0.7761314532007364,0.6345261157223943,0.4673430433582914,0.2813213823726546,0.0839596621557748,-0.11678647034371031,-0.31282494258672433,-0.49625344772376223,-0.6596779864242395,-0.7965109188398691,-0.9012365122336402,-0.9696332800548954,-0.9989441499766828,-0.9879876014255272,-0.9372052926518349,-0.8486442574947437,-0.7258743894894933,-0.5738445395312753,-0.3986830277956931,-0.20745061127658446,-0.007855864814523503,0.19205555139928326,0.38422521222220757,0.5609067625149128,0.7149781725599939,0.8402288269360227,0.9316098742994672,0.9854377464800588,0.9995426430393807,0.9733559958825148,0.9079333882264938,0.8059120040621723,0.671404323320936,0.5098323478918,0.32770904083505803,0.13237578897316687,-0.06829352826376991,-0.2662099347582443,-0.4533954241691013,-0.6223045532056974,-0.7661285982942537,-0.879070015087438,-0.9565761373595094,-0.9955226948899785,-0.9943397527328223,-0.9530749952624604,-0.8733918040175727,-0.7585022068249504,-0.6130374010226994,-0.44286106998943064,-0.25483301818575904,-0.05653265257528117,0.14404654311662554,0.3388192255701365,0.5199341118965779,0.6800904646927857,0.8128323846182075,0.9128090475664741,0.9759903962771159,0.9998295918620015,0.9833656768294643,0.927262311261337,0.8337810206884912,0.7066900340423732,0.5511123864232012,0.3733194096584887,0.1804779350441814,-0.01963860147996929,-0.21896350637582954,-0.40946199676015815,-0.583455082340183,-0.7339291053566697,-0.8548184609865237,-0.9412501017504131,-0.9897399699579824,-0.9983334400029279,-0.9666841092816177,-0.8960677616750488,-0.7893309407263541,-0.6507762055283237,-0.48598869465322425,-0.3016109893301135,-0.1050753511299508,0.09569587234819439,0.2926095971482654,0.4777282350080009,0.643589657380882,0.7835079936871047,0.8918431386213098,0.9642281046832294,0.9977450553555437,0.9910429230348332,0.9443918705393348,0.8596724008512054,0.7402995540793804,0.5910852472618101,0.4180443060870997,0.22815200739277045,0.02906290589683681,-0.17119772074773995,-0.3645573707329872,-0.5432217204804356,-0.6999888136668367,-0.8285393719379297,-0.9236915248908256,-0.9816096911653474,-0.9999591906508685,-0.9780003553944109,-0.9166183456008479,-0.8182874688429715,-0.6869714407732183,-0.527963607826106,-0.34767357253030967,-0.15336882256063794,0.04711822154319085,0.24570593109000294,0.4343892395261612,0.6055623265064722,0.7523252083582643,0.8687618762836339,0.9501787705545426,0.9932939778102994,0.996369524918817,0.9592814366383818,0.8835247330571517,0.7721531653635867,0.6296561191979854,0.46177764760794676,0.2752849283864332,0.0776954792717733,-0.12302587304024276,-0.3187880548992832,-0.5016998967157386,-0.6643882258469431,-0.8002950790374609,-0.9039420537851572,-0.9711511426351227,-0.9992131485757227,-0.9869968927152978,-0.9349948120804082,-0.8453031094892075,-0.7215372556583758,-0.5686862496515127,-0.39291151242795935,-0.20129852008865126,-0.0015711884776144658,0.1982194777091357,0.3900199207602549,0.566098668697157,0.7193579907532882,0.8436200067576556,0.9338757173594152,0.9864869166904429,0.9993328483702388,0.9718956931527151,0.9052814422095268,0.8021753146483394,0.6667335163848676,0.5044157035665722,0.32176490394389545,0.1261437675538016,-0.07456222155396675,-0.272262609019641,-0.4589880962246371,-0.627211782558003,-0.770152574627467,-0.8820485319969168,-0.9583891308889445,-0.9960970833068664,-0.9936523824517055,-0.9511535741654599,-0.8703137845502443,-0.7543916638897147,-0.6080600305221391,-0.4372175096276928,-0.24875075976680616,-0.05025687181293837,0.15026286962681226,0.3447255178322958,0.5252922873891581,0.6846845354701397,0.8164771637801751,0.915357614138838,0.9773400175928891,0.9999258647132646,0.9822047204595261,0.924890923797989,0.8302947927123616,0.7022294953327013,0.545857341205064,0.36748168869831904,0.17429285675576336,-0.025921716715978326,-0.22509138631137082,-0.4151876266790758,-0.5885476622162699,-0.7381833533981448,-0.8580628885409535,-0.9433539260087066,-0.9906183858068568,-0.9979510385172887,-0.9650563050576212,-0.8932601714679999,-0.78545673844074,-0.6459915601798402,-0.48048647519909843,-0.29561299012518766,-0.09882335140078391,0.10194985461896708,0.2986134640619346,0.48323997081065234,0.6483870841138895,0.7873977271759494,0.8946683837877394,0.9658749759517511,0.9981471673786445,0.9901840666850016,0.9423066662986527,0.8564449032604373,0.7360598635010766,0.5860042655374105,0.41232684748713216,0.22202854255766222,0.02278027157024322,-0.17738627170329233,-0.3704023779536443,-0.5484875718434284,-0.7044632428103127,-0.8320420147135714,-0.9260811898392708,-0.9827900509408556,-0.9998826649747825,-0.9766700290151802,-0.9140878439479129,-0.8146587963867375,-0.6823908692270056,-0.5226157799362187,-0.341774059130802,-0.14715543291727334,0.05339502581960996,0.25179313214607135,0.4400414624105311,0.6105517302290366,0.7564506701558593,0.8718570988747322,0.9521189855790982,0.9940009752399479,0.995814805701466,0.9574873614944666,0.8805636211193928,0.7681443789943326,0.6247612524946182,0.45619401254827996,0.26923760118669315,0.0714282275690453,-0.12926041645660505,-0.3247385757103711,-0.5071265295480072,-0.6690722232407529,-0.8040476291526604,-0.9066118914025106,-0.9726306466542959,-0.999442680219638,-0.98596719956804,-0.9327474010518884,-0.8419285736725507,-0.7171716225240312,-0.5635054977828304,-0.38712447782791876,-0.19513847800485748,0.004713549918122389,0.20437557473933235,0.3957992242780773,0.5712682150947959,0.7237093957200749,0.8469778652474017,0.9361046741643421,0.98749712260684,0.9990835820180668,0.9703970024535793,0.9025937393551985,0.7984069408864697,0.6620363747855604,0.4989791358126782,0.3158080579715227,0.11990676370361839,-0.0808279697830426,-0.2783045294431654,-0.4645626391526719,-0.6320942382778869,-0.7741461314479049,-0.8849922097233179,-0.960164269931694,-0.9966321278470871,-0.9929257648547943,-0.9491945843720575,-0.8672013893992673,-0.7502513239667313,-0.6030586428456695,-0.43155668003380293,-0.24265867618186196,-0.04397910600295344,0.15647326104900597,0.35061819411418577,0.5306297148690255,0.6892515625542478,0.8200896936992133,0.9178700258848335,0.9786510358992253,0.999982642458517,0.9810049689339441,0.9224830049612823,0.8267757697241374,0.6977412199383797,0.5405807356950144,0.3616294529338379,0.16810089424212676,-0.03220380809510534,-0.23121037557966312,-0.4208968575029116,-0.5936169956166378,-0.742408444648294,-0.8612734242980433,-0.9454204896413592,-0.9914576741768364,-0.9975292199273929,-0.9633903830066586,-0.8904172992401659,-0.7815515121579837,-0.6411813994346354,-0.47496527747368816,-0.289603314788238,-0.09256744834353102,0.10819981007092268,0.3046055363307307,0.4887326195844303,0.6531589008316894,0.7912563600024296,0.8974582913117402,0.9674836970574235,0.9985098545507841,0.9892861000110305,0.9401842427970389,0.8531835777795673,0.7317911000051233,0.5809001377964838,0.40659310278721134,0.21589630803161233,0.01649673746764702,-0.18356781624978874,-0.37623275500853215,-0.5537317590255453,-0.7089098470404845,-0.8355117934652684,-0.9284342764011886,-0.9839315924413216,-0.9997666458989907,-0.9753011260897385,-0.911521237622036,-0.810997946509495,-0.6777833445828754,-0.5172473097504015,-0.33586104632784164,-0.1409362309235853,0.05966972109744427,0.25787038786842015,0.4456763045221652,0.6155170183584289,0.7605462536390255,0.8749178848242997,0.9540215937754075,0.9946687115850693,0.9952207537568558,0.9556554674819839,0.8775677286496304,0.7641052524321013,0.6198417089499497,0.45059235872184883,0.263179639630971,0.0651581545917696,-0.13548985434064442,-0.33067626998608657,-0.5125331318792877,-0.6737297935970219,-0.8077684209670809,-0.9092459196323628,-0.974071733674908,-0.9996327358423809,-0.984898562654595,-0.9304631483346334,-0.8385207833322739,-0.7127776625204262,-0.5583024885546726,-0.3813221525719835,-0.18897072833481182,0.010998102137931752,0.2105235993360307,0.40156289450462535,0.5764151975209323,0.7280322155883917,0.8503022697764517,0.9382966566748154,0.9884683243281114,0.9987948538283931,0.968859982980451,0.8998703858224639,0.7946070316199533,0.6573130840508741,0.4935228593638084,0.3098387382016996,0.11366502377192404,-0.08709052546614622,-0.28433545738489263,-0.4701188327696679,-0.6369517275179238,-0.778109111017978,-0.8879009319971314,-0.9619014843732712,-0.9971278073774232,-0.9921599286420592,-0.9471981032584814,-0.8640547414981452,-0.7460813505912882,-0.5980334355383171,-0.42587880479937623,-0.23655700805616958,-0.037699603104763516,0.16267747208501004,0.35649702166662356,0.5359461835182625,0.6937913655565799,0.8236698316874587,0.9203461835691695,0.9799233994134549,0.999999922855149,0.9797664696405342,0.9200386498592881,0.8232240907182611,0.6932253851375042,0.5352827783085495,0.3557629335168537,0.16190229207364681,-0.03848462748714696,-0.23732023249263118,-0.4265894637282711,-0.5986628823126059,-0.7466042122242802,-0.8644499414479855,-0.9474497110231604,-0.9922578019176881,-0.997068000894244,-0.9616864089294062,-0.8875392572793732,-0.7776154161268815,-0.6363459132845377,-0.46942531955355,-0.28358220068968093,-0.08630788905400849,0.11444549184307863,0.31058557727965946,0.494205964380456,0.6579049190568588,0.7950837397581342,0.9002127509974368,0.96905420445894,0.9988331025465302,0.9883490584808425,0.9380246838660307,0.8498885532245702,0.7274934321992291,0.5757730656420654,0.4008432984590334,0.20975554602574664,0.010212551776406816,-0.18974211022842716,-0.3820482716091657,-0.5589540748917488,-0.7133284507252867,-0.8389485711435491,-0.9307506916343067,-0.9850342705780795,-0.9996111380060173,-0.973893700687048,-0.9089186279991328,-0.8073050638076174,-0.6731490488290353,-0.5118584093126248,-0.3299347676737303,-0.13471146222585503,0.0659420595386218,0.2639374582173399,0.451293543295877,0.6204579947755737,0.7646117970402293,0.8779441132373496,0.9558865199941523,0.9952971604713966,0.9945873925488683,0.9537858269571543,0.8745371739796872,0.7600359452144884,0.6148976828762344,0.44497290738306916,0.2571112829968669,0.058885507995446486,-0.141713940641782,-0.33660090319917785,-0.5179194901593677,-0.6783607529508346,-0.8114573075168103,-0.9118440344357649,-0.9754743467768675,-0.9997833079371261,-0.9837910241840393,-0.9281421441521047,-0.8350798730694274,-0.7083555492002833,-0.5530774274757698,-0.37550476584064746,-0.18279551469244595,0.017282219954326633,0.21666330866442846,0.40731070378620304,0.5815394126799017,0.7323262796153518,0.8535930890373471,0.9404515783118548,0.9894004834936936,0.9984666752054147,0.9672846954425639,0.8971114891784461,0.7907757369377016,0.6525638307415292,0.4880470897321317,0.3038571804107687,0.10741879429528882,-0.093349641244724,-0.2903551546349971,-0.47565645761694997,-0.6417840584168157,-0.7820413568077478,-0.8907745839295714,-0.9636007055971125,-0.9975841023195149,-0.9913549040625198,-0.9451642096818246,-0.8608739651332993,-0.7418819084691463,-0.5929846070858354,-0.4201841081893485,-0.23044599639373578,-0.03141861114634629,0.16887525768064257,0.36236176828754396,0.5412414833467964,0.6983037651638008,0.8272174363365312,0.9227859893884347,0.9811570578797376,0.9999777052206188,0.9784892714975921,0.9175579550392334,0.819639895979104,0.6886821692966212,0.5299636783045955,0.3498823621633776,0.155697295082882,-0.04476392681204136,-0.24342071572293766,-0.4322652205083861,-0.6036851230016027,-0.7507704904015702,-0.8675923145245396,-0.949441510003869,-0.993018737425935,-0.9965673996350833,-0.9599444501294716,-0.8846261592626476,-0.7736486058154537,-0.631485292721821,-0.46386682025605636,-0.2775498856516327,-0.08004492077254574,0.12068665324326856,0.31655335070881846,0.49965978901243124,0.6626249513310503,0.7988797152690693,0.9029316540491052,0.9705864361243379,0.9991168985982226,0.9873729791057301,0.9358280748039749,0.8465599597424089,0.723167029832892,0.5706232515833803,0.3950776616085143,0.20360649908821793,0.003927962709432974,-0.19590890976667694,-0.3878486980541371,-0.5641543131707453,-0.71771887933852,-0.8423522120024827,-0.933030344044761,-0.9860980417975258,-0.9994161474381194,-0.9724478083976547,-0.9062801178771794,-0.803580294142729,-0.6684881650110156,-0.5064492914738867,-0.32399545724493223,-0.12848137269016735,0.07221179339806165,0.26999410355554704,0.45689295686176457,0.6253744643216379,0.7686471397785353,0.8809356645837468,0.9577136905744346,0.9958862970764298,0.9939147470940213,0.9518785137671075,0.8714720768105428,0.7559366180710926,0.6099293695528056,0.43933588048914607,0.25103277097249777,0.05261053553732832,-0.1479324295208161,-0.3425122413382663,-0.5232853916377319,-0.682964918388442,-0.8151141430980149,-0.9144061331923072,-0.9768384305597078,-0.9998943905565734,-0.9826446279019532,-0.9257844801794259,-0.8316059787931714,-0.703905457228466,-0.5478305209256926,-0.36967254740919825,-0.17661308098660142,0.023565655156992337,0.22279446021802096,0.41304242509570777,0.5866406581752549,0.7365914181938479,0.8568501930492183,0.9425693539602771,0.99029356328513,0.9980990591115431,0.9656712020606898,0.8943171583941518,0.7869132081683406,0.6477888024436526,0.48255204319980893,0.2978636208585447,0.1011683219874277,-0.0996050698959502,-0.2963633834272574,-0.4811752949691971,-0.646591040107035,-0.785942713501271,-0.8936130520170164,-0.96526186648732,-0.9980009946506054,-0.9905107229130644,-0.9430929839768802,-0.8576591859391142,-0.7376531634700139,-0.5879123569070804,-0.41447281513305423,-0.2243258825674392,-0.025136378214536986,0.17506637303557018,0.36821220233093105,0.5465154052007059,0.7027885831450372,0.8307323675229968,0.9251893469751398,0.9823519625709809,0.9999159904324793,0.9771734249519313,0.9150410184836817,0.81602332707528,0.6841117518638764,0.5246236457771459,0.3439879711443783,0.14948614835501567,-0.0510414580498232,-0.24951158431345977,-0.43792390366203404,-0.6086835193149369,-0.754907114620347,-0.8707004194101821,-0.95139580791134,-0.9937404506461192,-0.9960274359226812,-0.9581645754108068,-0.881678120251608,-0.7696512379049364,-0.6265997297314098,-0.4582899991310403,-0.27150660793871984,-0.07377879087404987,0.12692304775790011,0.3225086209029156,0.5050938780649424,0.6673188112222461,0.8026441366016904,0.9056148930754195,0.9720803315334721,0.9993612314964744,0.9863579004389117,0.9335945023726064,0.8431979288059974,0.7188120637904816,0.5654508990279836,0.38929641996701475,0.19744941009418127,-0.0023567815043463365,-0.20206797128813475,-0.3936338052379385,-0.5693322684633809,-0.7220809594669144,-0.8457225816049225,-0.9352731435907732,-0.9871228640827812,-0.9991816818970402,-0.9709635063314586,-0.903605811472115,-0.7998237846358843,-0.6638008772245858,-0.5010201698837211,-0.31804334963246683,-0.12224620839282589,0.07847867503361555,0.27604008465738816,0.46247432405401206,0.6302662328057166,0.7726521224658103,0.8838924207031487,0.9595030333466038,0.9964360981304339,0.9932028439604955,0.9499336032469609,0.8683725582074893,0.7518074329173055,0.604936965218273,0.43368150069159883,0.24494434364713935,0.046333485066477734,-0.15414507535971642,-0.3484100509171293,-0.528630624371796,-0.6875421080543287,-0.8187387832729192,-0.9169321147041198,-0.9781639311447978,-0.9999659793131763,-0.9814594190887387,-0.923390249539668,-0.8280992377155244,-0.699427562374809,-0.5425619761469708,-0.3638257276388384,-0.1704236714112423,0.029848159562604486,0.22891681182842985,0.41875783204135025,0.5917187325178229,0.7408274628593198,0.8600734531628597,0.9446498999721121,0.9911475284275285,0.9976920200668904,0.9640195665646418,0.8914875038401351,0.7830195978741723,0.6429881877614965,0.4770379368103886,0.29185829627882076,0.09491385372972383,-0.1058565643427465,-0.3023599064484472,-0.48667512684318287,-0.651372482722222,-0.7898130270026011,-0.8964162241455628,-0.9668849014312968,-0.9983784679042693,-0.9896274185371927,-0.9409845079529877,-0.8544105308930702,-0.733395282620977,-0.5828168853459402,-0.40874515121531607,-0.21819690830975902,-0.01885315244521528,0.18125057361290672,0.374048092716141,0.5517677407704566,0.7072456423587645,0.8342144864139992,0.9275561614013625,0.9835080662908036,0.9998147809283434,0.9758189819769001,0.9124879396066792,0.8123745268541759,0.679514313361764,0.5192628916470006,0.33807999327671384,0.14326909721816183,-0.057316973250363085,-0.25559259768690284,-0.44356528968236686,-0.6136578738258025,-0.7590139214920762,-0.8737741333408727,-0.9533125275546394,-0.99442291307199,-0.9954481310845428,-0.9563468550749603,-0.8786952566880196,-0.7656234702834862,-0.6216894172834381,-0.4526950764519481,-0.2654526062485186,-0.06750974685836231,0.13315442906164937,0.32845115264044467,0.5105080169021912,0.6719863133321972,0.8063768550687546,0.9082623620937007,0.9735358316804239,0.9995660915906173,0.9853038625739967,0.9313240547936459,0.8398025932089563,0.7144287060845758,0.5602562122736451,0.38349980188218874,0.19128452223660405,-0.008641432629903375,-0.2082190515219361,-0.39940336466024773,-0.5744877362506003,-0.7264145188168798,-0.8490595468279102,-0.9374790016861596,-0.9881086969553823,-0.9989077506437086,-0.9694408531154736,-0.9008958144138036,-0.7960356836618243,-0.6590873706084152,-0.4955712589817458,-0.3120786799328909,-0.11600621561054927,0.08474245691578539,0.2820751627185293,0.4680374244195872,0.63513310701256,0.7766265869131248,0.8868142648094735,0.961254477635142,0.9969465419173449,0.9924517112670607,0.9479511722168545,0.8652387405954183,0.7476485528478048,0.5999206670628108,0.4280099913273014,0.23884624150172998,0.040054604514041865,-0.16035163277114994,-0.35429409898388237,-0.5339549772353566,-0.6920921411585215,-0.8223310848753574,-0.9194218791999066,-0.9794507961774733,-0.9999980713793203,-0.9802354445578128,-0.9209595468002506,-0.8245597883458534,-0.6949220415073613,-0.5372720012367546,-0.35796453746744217,-0.1642275304358657,0.03612948502459625,0.23503012167476714,0.4244566988758174,0.5967734351336345,0.7450342462963252,0.8632627420658181,0.9466931341698869,0.99196234519094,0.997245574148699,0.9623298541907754,0.8886226372821882,0.7790950598451318,0.6381621763099204,0.471504988360221,0.28584144387013977,0.08865563656137133,-0.112103877663329,-0.30834448684773563,-0.49215573600634116,-0.656128197404809,-0.7936521444419761,-0.8991839895954286,-0.9684697463223677,-0.9987165071710529,-0.9887050258236881,-0.9388388648908144,-0.8511281283106447,-0.729108434099983,-0.577698393663525,-0.40300134266763177,-0.21205931570312309,-0.012569182013426232,0.1874276151489072,0.37986920893698894,0.5569982825990891,0.7116747667599206,0.8376636554726715,0.9298863391825967,0.984625323375375,0.9996740807057876,0.97442599607034,0.9098988192498166,0.8086936394362152,0.6748900353800308,0.5138816276533974,0.3321586619139228,0.1370463872335979,-0.06359022454311858,-0.2616635156551925,-0.4491891557456947,-0.6186079900569751,-0.7630907488059692,-0.8768133349109604,-0.9551915932271174,-0.9950660977476197,-0.9948295080020694,-0.9544913609183203,-0.8756776863891198,-0.7615654620400196,-0.616754549325595,-0.4470822732072589,-0.25938811970218795,-0.06123803634038388,0.13938055102721852,0.3343807112031375,0.5159019916763058,0.6766272733037614,0.8100777232352033,0.9108739565341358,0.9749528790757903,0.9997314707890801,0.9842109071434139,0.9290168217453065,0.8363740870603599,0.7100171298491819,0.5550393965002682,0.3776880363090884,0.18511207901641685,-0.014925742435844571,-0.2143619075125313,-0.40515714843477674,-0.5796205129015606,-0.730719386221321,-0.8523629758678604,-0.9396478312038721,-0.9890555014768697,-0.9985943644978703,-0.967879908891505,-0.8981502337417924,-0.7922161408431078,-0.6543478313367228,-0.49010277398922397,-0.30610168373894575,-0.1097616408108141,0.09100289163748589,0.2880990993652437,0.4735820382269677,0.6399748947102206,0.7805703761369417,0.889701081495633,0.9629679542614369,0.9974176082756396,0.9916613786819857,0.9459312989789216,0.8620707477539791,0.7434601421301921,0.5948806732203067,0.4223215764097182,0.2327387053992961,0.03377414188346666,-0.1665518566082998,-0.36016415313020034,-0.5392582399269721,-0.6966148379836365,-0.82589090601647,-0.9218753283388448,-0.9806989748290965,-0.9999906654874317,-0.9789727526537646,-0.9184924679691456,-0.8209877704854547,-0.6903890725853453,-0.5319608051386479,-0.35208920840049596,-0.15802490279588433,0.042409383442949006,0.24113414829331142,0.4301388005050752,0.6018045663719015,0.7492116023451832,0.8664179337874626,0.9486989758498591,0.9927379813917087,0.9967597389907039,0.9606021316794067,0.8857226718769197,0.7751397490927743,0.6333109587068653,0.4659534163898902,0.2798133012863303,0.08239391766965311,-0.11834676310112713,-0.3143168882459242,-0.4976169059854148,-0.6608579963134064,-0.7974599141817954,-0.9019162390453097,-0.9700163385622642,-0.9990150990990716,-0.9877435812052519,-0.9366561395390374,-0.8478121078402906,-0.7247927872291192,-0.5725570840301885,-0.3972416163591122,-0.20591334717038462,-0.006284715123659591,0.19359725366253186,0.3856753210708306,0.5622068240905128,0.7160757814067884,0.8410797384636279,0.9321797882813909,0.985703689695243,0.9994938953221937,0.9729945222524519,0.9072737596782703,0.8049808102092192,0.6702391005686084,0.5084800663456827,0.32622421093694065,0.1308182641861463,-0.06986096414701677,-0.2677240984289793,-0.45479527972039513,-0.6235336724886027,-0.7671374355353656,-0.8798179040779438,-0.9570329307093656,-0.9956699792684812,-0.9941715911096558,-0.9525981662292544,-0.8726255285430085,-0.7574773734578834,-0.6117953207754585,-0.44145181109163556,-0.2533133878350353,-0.05496390704034409,0.14560116773500806,0.3402970623850503,0.5212755893359138,0.6812415078281324,0.8137465949240296,0.913449573243877,0.9763314177489858,0.9998573625597098,0.9830790773167508,0.926672894358761,0.832912545779457,0.7055775093329191,0.5498006577618181,0.3718613528009964,0.17893232423300537,-0.021209462704305765,-0.2204962966291583,-0.4108949292984098,-0.5847303956816812,-0.7349953916464517,-0.8556327382458394,-0.9417795464793974,-0.9899632402503239,-0.9982415358376617,-0.966280735313788,-0.8953691779011252,-0.7883653070441546,-0.6495824466120061,-0.4846149309005691,-0.30011259713022137,-0.10351273064203004,0.09725973192386997,0.29411165666386896,0.47910794647479826,0.6447914046575915,0.7844833343653357,0.8925527567380395,0.9646433955465304,0.9978492785991216,0.9908318774218496,0.9438740633141802,0.8588687048126508,0.7392423661984582,0.589817182760627,0.41661648062006423,0.22662197657552147,0.027492345240683506,-0.17274550197452845,-0.36601998150047366,-0.5445402029781808,-0.7011100198920529,-0.8294181060903275,-0.9242923652145346,-0.9819084177990617,-0.9999437619300288,-0.9776713932504436,-0.9159891104911217,-0.8173833252220125,-0.685828834652126,-0.5266285976344633,-0.34619997250195006,-0.1518160334828882,0.04868760677402551,0.24722865058702256,0.43580391249727674,0.6068119275128164,0.7533593660085379,0.869538903703917,0.9506673457852289,0.9934744063937271,0.9962345337824404,0.9588364672721781,0.8827877221672573,0.7711538218440879,0.628434726565898,0.4603834401755762,0.27377410662716856,0.07612894438016055,-0.12458497407441982,-0.3202768747449104,-0.5030584210749112,-0.6655616926302593,-0.8012361858226472,-0.9046128645767249,-0.9715246170636379,-0.9992742318945305,-0.9867431226570545,-0.9344364181110183,-0.8444626004582995,-0.7204485124679503,-0.5673931595175625,-0.3914661997876466,-0.19975924546521184,0.0],"x":[-804.247719318987,-804.0466071111053,-803.8454949032237,-803.6443826953418,-803.4432704874602,-803.2421582795785,-803.0410460716968,-802.8399338638151,-802.6388216559333,-802.4377094480516,-802.2365972401698,-802.0354850322882,-801.8343728244065,-801.6332606165247,-801.432148408643,-801.2310362007612,-801.0299239928796,-800.8288117849979,-800.6276995771161,-800.4265873692344,-800.2254751613526,-800.0243629534709,-799.8232507455893,-799.6221385377075,-799.4210263298258,-799.219914121944,-799.0188019140624,-798.8176897061808,-798.616577498299,-798.4154652904173,-798.2143530825355,-798.0132408746538,-797.8121286667721,-797.6110164588904,-797.4099042510087,-797.2087920431269,-797.0076798352452,-796.8065676273635,-796.6054554194818,-796.4043432116001,-796.2032310037183,-796.0021187958366,-795.8010065879549,-795.5998943800731,-795.3987821721915,-795.1976699643097,-794.996557756428,-794.7954455485464,-794.5943333406645,-794.393221132783,-794.1921089249012,-793.9909967170195,-793.7898845091378,-793.588772301256,-793.3876600933743,-793.1865478854926,-792.9854356776109,-792.7843234697292,-792.5832112618474,-792.3820990539657,-792.180986846084,-791.9798746382023,-791.7787624303206,-791.5776502224388,-791.3765380145571,-791.1754258066753,-790.9743135987937,-790.773201390912,-790.5720891830302,-790.3709769751486,-790.1698647672667,-789.9687525593852,-789.7676403515035,-789.5665281436217,-789.36541593574,-789.1643037278582,-788.9631915199765,-788.7620793120949,-788.5609671042131,-788.3598548963314,-788.1587426884496,-787.9576304805679,-787.7565182726863,-787.5554060648045,-787.3542938569228,-787.153181649041,-786.9520694411593,-786.7509572332776,-786.5498450253959,-786.3487328175142,-786.1476206096324,-785.9465084017507,-785.745396193869,-785.5442839859874,-785.3431717781057,-785.1420595702239,-784.9409473623422,-784.7398351544605,-784.5387229465787,-784.3376107386971,-784.1364985308153,-783.9353863229336,-783.7342741150519,-783.5331619071701,-783.3320496992885,-783.1309374914067,-782.929825283525,-782.7287130756433,-782.5276008677615,-782.3264886598798,-782.1253764519982,-781.9242642441164,-781.7231520362348,-781.522039828353,-781.3209276204713,-781.1198154125897,-780.9187032047079,-780.7175909968262,-780.5164787889444,-780.3153665810627,-780.1142543731809,-779.9131421652993,-779.7120299574176,-779.5109177495358,-779.3098055416541,-779.1086933337724,-778.9075811258907,-778.706468918009,-778.5053567101272,-778.3042445022455,-778.1031322943638,-777.902020086482,-777.7009078786004,-777.4997956707186,-777.298683462837,-777.0975712549553,-776.8964590470734,-776.6953468391919,-776.4942346313101,-776.2931224234284,-776.0920102155467,-775.8908980076649,-775.6897857997832,-775.4886735919015,-775.2875613840198,-775.0864491761381,-774.8853369682563,-774.6842247603746,-774.4831125524929,-774.2820003446112,-774.0808881367295,-773.8797759288477,-773.678663720966,-773.4775515130842,-773.2764393052026,-773.075327097321,-772.8742148894391,-772.6731026815575,-772.4719904736756,-772.270878265794,-772.0697660579124,-771.8686538500306,-771.6675416421489,-771.4664294342671,-771.2653172263854,-771.0642050185038,-770.863092810622,-770.6619806027403,-770.4608683948585,-770.2597561869768,-770.0586439790951,-769.8575317712134,-769.6564195633317,-769.4553073554499,-769.2541951475682,-769.0530829396865,-768.8519707318048,-768.6508585239231,-768.4497463160413,-768.2486341081596,-768.047521900278,-767.8464096923962,-767.6452974845146,-767.4441852766328,-767.2430730687511,-767.0419608608694,-766.8408486529876,-766.639736445106,-766.4386242372242,-766.2375120293425,-766.0363998214608,-765.835287613579,-765.6341754056973,-765.4330631978156,-765.2319509899339,-765.0308387820522,-764.8297265741704,-764.6286143662887,-764.427502158407,-764.2263899505253,-764.0252777426437,-763.8241655347618,-763.6230533268802,-763.4219411189983,-763.2208289111168,-763.0197167032351,-762.8186044953533,-762.6174922874716,-762.4163800795898,-762.2152678717082,-762.0141556638265,-761.8130434559447,-761.611931248063,-761.4108190401812,-761.2097068322995,-761.0085946244179,-760.8074824165361,-760.6063702086544,-760.4052580007726,-760.2041457928909,-760.0030335850093,-759.8019213771275,-759.6008091692458,-759.399696961364,-759.1985847534824,-758.9974725456007,-758.796360337719,-758.5952481298373,-758.3941359219555,-758.1930237140738,-757.9919115061921,-757.7907992983104,-757.5896870904287,-757.3885748825469,-757.1874626746652,-756.9863504667835,-756.7852382589017,-756.5841260510201,-756.3830138431383,-756.1819016352566,-755.9807894273749,-755.7796772194931,-755.5785650116115,-755.3774528037297,-755.176340595848,-754.9752283879664,-754.7741161800845,-754.5730039722029,-754.3718917643212,-754.1707795564395,-753.9696673485578,-753.768555140676,-753.5674429327943,-753.3663307249126,-753.1652185170309,-752.9641063091492,-752.7629941012674,-752.5618818933857,-752.3607696855039,-752.1596574776223,-751.9585452697406,-751.7574330618588,-751.5563208539771,-751.3552086460953,-751.1540964382137,-750.952984230332,-750.7518720224502,-750.5507598145686,-750.3496476066867,-750.148535398805,-749.9474231909235,-749.7463109830417,-749.54519877516,-749.3440865672782,-749.1429743593965,-748.9418621515149,-748.7407499436331,-748.5396377357514,-748.3385255278696,-748.1374133199879,-747.9363011121062,-747.7351889042245,-747.5340766963428,-747.332964488461,-747.1318522805793,-746.9307400726976,-746.7296278648159,-746.5285156569342,-746.3274034490524,-746.1262912411707,-745.925179033289,-745.7240668254072,-745.5229546175257,-745.3218424096439,-745.1207302017622,-744.9196179938805,-744.7185057859987,-744.5173935781171,-744.3162813702354,-744.1151691623536,-743.9140569544719,-743.7129447465901,-743.5118325387084,-743.3107203308268,-743.109608122945,-742.9084959150633,-742.7073837071815,-742.5062714992998,-742.3051592914182,-742.1040470835364,-741.9029348756548,-741.701822667773,-741.5007104598913,-741.2995982520094,-741.0984860441279,-740.8973738362462,-740.6962616283644,-740.4951494204827,-740.294037212601,-740.0929250047193,-739.8918127968376,-739.6907005889558,-739.4895883810741,-739.2884761731924,-739.0873639653106,-738.886251757429,-738.6851395495472,-738.4840273416655,-738.2829151337838,-738.081802925902,-737.8806907180204,-737.6795785101386,-737.478466302257,-737.2773540943753,-737.0762418864934,-736.8751296786118,-736.6740174707301,-736.4729052628484,-736.2717930549667,-736.0706808470849,-735.8695686392032,-735.6684564313215,-735.4673442234398,-735.2662320155581,-735.0651198076763,-734.8640075997946,-734.6628953919128,-734.4617831840312,-734.2606709761495,-734.0595587682677,-733.858446560386,-733.6573343525042,-733.4562221446226,-733.255109936741,-733.0539977288591,-732.8528855209775,-732.6517733130956,-732.450661105214,-732.2495488973324,-732.0484366894506,-731.8473244815689,-731.6462122736871,-731.4451000658054,-731.2439878579238,-731.042875650042,-730.8417634421603,-730.6406512342785,-730.4395390263968,-730.2384268185151,-730.0373146106334,-729.8362024027517,-729.6350901948699,-729.4339779869882,-729.2328657791065,-729.0317535712248,-728.8306413633431,-728.6295291554613,-728.4284169475796,-728.227304739698,-728.0261925318162,-727.8250803239346,-727.6239681160528,-727.4228559081711,-727.2217437002894,-727.0206314924076,-726.819519284526,-726.6184070766442,-726.4172948687625,-726.2161826608808,-726.015070452999,-725.8139582451173,-725.6128460372356,-725.4117338293539,-725.2106216214722,-725.0095094135904,-724.8083972057087,-724.607284997827,-724.4061727899453,-724.2050605820637,-724.0039483741818,-723.8028361663002,-723.6017239584183,-723.4006117505368,-723.1994995426551,-722.9983873347733,-722.7972751268916,-722.5961629190098,-722.3950507111282,-722.1939385032465,-721.9928262953647,-721.791714087483,-721.5906018796012,-721.3894896717195,-721.1883774638379,-720.9872652559561,-720.7861530480744,-720.5850408401926,-720.3839286323109,-720.1828164244293,-719.9817042165475,-719.7805920086658,-719.579479800784,-719.3783675929024,-719.1772553850207,-718.976143177139,-718.7750309692573,-718.5739187613755,-718.3728065534938,-718.1716943456121,-717.9705821377304,-717.7694699298487,-717.5683577219669,-717.3672455140852,-717.1661333062035,-716.9650210983217,-716.7639088904401,-716.5627966825583,-716.3616844746766,-716.1605722667949,-715.9594600589131,-715.7583478510315,-715.5572356431497,-715.356123435268,-715.1550112273864,-714.9538990195045,-714.7527868116229,-714.5516746037412,-714.3505623958595,-714.1494501879778,-713.948337980096,-713.7472257722143,-713.5461135643326,-713.3450013564509,-713.1438891485692,-712.9427769406874,-712.7416647328057,-712.5405525249239,-712.3394403170423,-712.1383281091606,-711.9372159012788,-711.7361036933971,-711.5349914855153,-711.3338792776337,-711.132767069752,-710.9316548618702,-710.7305426539886,-710.5294304461067,-710.328318238225,-710.1272060303435,-709.9260938224617,-709.72498161458,-709.5238694066982,-709.3227571988165,-709.1216449909349,-708.9205327830531,-708.7194205751714,-708.5183083672896,-708.3171961594079,-708.1160839515262,-707.9149717436445,-707.7138595357628,-707.512747327881,-707.3116351199993,-707.1105229121176,-706.9094107042359,-706.7082984963542,-706.5071862884724,-706.3060740805907,-706.104961872709,-705.9038496648272,-705.7027374569457,-705.501625249064,-705.3005130411822,-705.0994008333005,-704.8982886254187,-704.6971764175371,-704.4960642096554,-704.2949520017736,-704.0938397938919,-703.8927275860101,-703.6916153781284,-703.4905031702468,-703.289390962365,-703.0882787544833,-702.8871665466015,-702.6860543387198,-702.4849421308382,-702.2838299229564,-702.0827177150748,-701.881605507193,-701.6804932993113,-701.4793810914296,-701.2782688835479,-701.0771566756662,-700.8760444677844,-700.6749322599027,-700.473820052021,-700.2727078441393,-700.0715956362576,-699.8704834283758,-699.6693712204941,-699.4682590126124,-699.2671468047306,-699.066034596849,-698.8649223889672,-698.6638101810855,-698.4626979732038,-698.261585765322,-698.0604735574404,-697.8593613495586,-697.658249141677,-697.4571369337953,-697.2560247259134,-697.0549125180318,-696.8538003101501,-696.6526881022684,-696.4515758943867,-696.2504636865049,-696.0493514786232,-695.8482392707415,-695.6471270628598,-695.4460148549781,-695.2449026470963,-695.0437904392146,-694.8426782313328,-694.6415660234512,-694.4404538155695,-694.2393416076877,-694.038229399806,-693.8371171919242,-693.6360049840426,-693.434892776161,-693.2337805682791,-693.0326683603975,-692.8315561525156,-692.630443944634,-692.4293317367524,-692.2282195288706,-692.0271073209889,-691.8259951131071,-691.6248829052254,-691.4237706973438,-691.222658489462,-691.0215462815803,-690.8204340736985,-690.6193218658168,-690.4182096579351,-690.2170974500534,-690.0159852421717,-689.8148730342899,-689.6137608264082,-689.4126486185265,-689.2115364106448,-689.0104242027631,-688.8093119948813,-688.6081997869996,-688.407087579118,-688.2059753712361,-688.0048631633546,-687.8037509554728,-687.6026387475911,-687.4015265397094,-687.2004143318276,-686.999302123946,-686.7981899160642,-686.5970777081825,-686.3959655003008,-686.194853292419,-685.9937410845373,-685.7926288766556,-685.5915166687739,-685.3904044608922,-685.1892922530104,-684.9881800451287,-684.787067837247,-684.5859556293653,-684.3848434214837,-684.1837312136018,-683.9826190057202,-683.7815067978383,-683.5803945899568,-683.3792823820751,-683.1781701741933,-682.9770579663116,-682.7759457584298,-682.5748335505482,-682.3737213426665,-682.1726091347847,-681.971496926903,-681.7703847190212,-681.5692725111395,-681.3681603032579,-681.1670480953761,-680.9659358874944,-680.7648236796126,-680.5637114717309,-680.3625992638493,-680.1614870559675,-679.9603748480858,-679.759262640204,-679.5581504323223,-679.3570382244407,-679.155926016559,-678.9548138086773,-678.7537016007955,-678.5525893929138,-678.3514771850321,-678.1503649771504,-677.9492527692687,-677.7481405613869,-677.5470283535052,-677.3459161456235,-677.1448039377417,-676.9436917298601,-676.7425795219783,-676.5414673140966,-676.3403551062149,-676.1392428983331,-675.9381306904515,-675.7370184825697,-675.535906274688,-675.3347940668064,-675.1336818589245,-674.9325696510429,-674.7314574431612,-674.5303452352795,-674.3292330273978,-674.128120819516,-673.9270086116343,-673.7258964037526,-673.5247841958709,-673.3236719879892,-673.1225597801074,-672.9214475722257,-672.7203353643439,-672.5192231564623,-672.3181109485806,-672.1169987406988,-671.9158865328171,-671.7147743249353,-671.5136621170537,-671.312549909172,-671.1114377012902,-670.9103254934085,-670.7092132855267,-670.508101077645,-670.3069888697635,-670.1058766618817,-669.904764454,-669.7036522461182,-669.5025400382365,-669.3014278303549,-669.1003156224731,-668.8992034145914,-668.6980912067096,-668.4969789988279,-668.2958667909462,-668.0947545830645,-667.8936423751828,-667.692530167301,-667.4914179594193,-667.2903057515376,-667.0891935436558,-666.8880813357742,-666.6869691278926,-666.4858569200107,-666.284744712129,-666.0836325042472,-665.8825202963657,-665.681408088484,-665.4802958806022,-665.2791836727205,-665.0780714648387,-664.876959256957,-664.6758470490754,-664.4747348411936,-664.2736226333119,-664.0725104254301,-663.8713982175484,-663.6702860096668,-663.469173801785,-663.2680615939033,-663.0669493860215,-662.8658371781398,-662.6647249702581,-662.4636127623764,-662.2625005544947,-662.061388346613,-661.8602761387313,-661.6591639308496,-661.4580517229679,-661.2569395150862,-661.0558273072044,-660.8547150993227,-660.653602891441,-660.4524906835592,-660.2513784756776,-660.0502662677958,-659.8491540599141,-659.6480418520324,-659.4469296441506,-659.245817436269,-659.0447052283872,-658.8435930205055,-658.6424808126238,-658.441368604742,-658.2402563968603,-658.0391441889786,-657.838031981097,-657.6369197732153,-657.4358075653334,-657.2346953574518,-657.0335831495701,-656.8324709416884,-656.6313587338067,-656.4302465259249,-656.2291343180432,-656.0280221101614,-655.8269099022798,-655.6257976943981,-655.4246854865163,-655.2235732786346,-655.0224610707528,-654.8213488628712,-654.6202366549895,-654.4191244471077,-654.218012239226,-654.0169000313442,-653.8157878234625,-653.614675615581,-653.4135634076991,-653.2124511998175,-653.0113389919356,-652.810226784054,-652.6091145761724,-652.4080023682906,-652.2068901604089,-652.0057779525271,-651.8046657446454,-651.6035535367637,-651.402441328882,-651.2013291210003,-651.0002169131185,-650.7991047052368,-650.5979924973551,-650.3968802894734,-650.1957680815917,-649.9946558737099,-649.7935436658282,-649.5924314579465,-649.3913192500647,-649.1902070421831,-648.9890948343013,-648.7879826264196,-648.586870418538,-648.3857582106561,-648.1846460027746,-647.9835337948928,-647.7824215870111,-647.5813093791294,-647.3801971712476,-647.1790849633659,-646.9779727554842,-646.7768605476025,-646.5757483397208,-646.374636131839,-646.1735239239573,-645.9724117160756,-645.7712995081939,-645.5701873003122,-645.3690750924304,-645.1679628845487,-644.9668506766669,-644.7657384687853,-644.5646262609037,-644.3635140530218,-644.1624018451402,-643.9612896372583,-643.7601774293768,-643.5590652214951,-643.3579530136133,-643.1568408057316,-642.9557285978498,-642.7546163899681,-642.5535041820865,-642.3523919742047,-642.151279766323,-641.9501675584412,-641.7490553505595,-641.5479431426779,-641.3468309347961,-641.1457187269144,-640.9446065190326,-640.7434943111509,-640.5423821032692,-640.3412698953875,-640.1401576875058,-639.939045479624,-639.7379332717423,-639.5368210638607,-639.335708855979,-639.1345966480973,-638.9334844402155,-638.7323722323338,-638.5312600244521,-638.3301478165703,-638.1290356086887,-637.9279234008069,-637.7268111929252,-637.5256989850435,-637.3245867771617,-637.1234745692801,-636.9223623613983,-636.7212501535166,-636.5201379456349,-636.3190257377531,-636.1179135298714,-635.9168013219897,-635.715689114108,-635.5145769062264,-635.3134646983445,-635.1123524904629,-634.9112402825812,-634.7101280746995,-634.5090158668178,-634.307903658936,-634.1067914510543,-633.9056792431725,-633.7045670352909,-633.5034548274092,-633.3023426195274,-633.1012304116457,-632.9001182037639,-632.6990059958823,-632.4978937880006,-632.2967815801188,-632.0956693722371,-631.8945571643553,-631.6934449564736,-631.492332748592,-631.2912205407102,-631.0901083328285,-630.8889961249467,-630.687883917065,-630.4867717091835,-630.2856595013017,-630.08454729342,-629.8834350855382,-629.6823228776565,-629.4812106697748,-629.2800984618931,-629.0789862540114,-628.8778740461297,-628.6767618382479,-628.4756496303662,-628.2745374224845,-628.0734252146028,-627.8723130067211,-627.6712007988393,-627.4700885909576,-627.2689763830758,-627.0678641751942,-626.8667519673126,-626.6656397594307,-626.464527551549,-626.2634153436672,-626.0623031357857,-625.861190927904,-625.6600787200222,-625.4589665121405,-625.2578543042587,-625.056742096377,-624.8556298884954,-624.6545176806136,-624.4534054727319,-624.2522932648501,-624.0511810569684,-623.8500688490868,-623.648956641205,-623.4478444333233,-623.2467322254415,-623.0456200175598,-622.8445078096781,-622.6433956017964,-622.4422833939147,-622.241171186033,-622.0400589781513,-621.8389467702696,-621.6378345623879,-621.4367223545062,-621.2356101466244,-621.0344979387427,-620.833385730861,-620.6322735229792,-620.4311613150976,-620.2300491072158,-620.0289368993341,-619.8278246914524,-619.6267124835706,-619.425600275689,-619.2244880678072,-619.0233758599255,-618.8222636520438,-618.621151444162,-618.4200392362803,-618.2189270283986,-618.017814820517,-617.8167026126353,-617.6155904047534,-617.4144781968718,-617.2133659889901,-617.0122537811084,-616.8111415732267,-616.6100293653449,-616.4089171574632,-616.2078049495814,-616.0066927416998,-615.8055805338181,-615.6044683259363,-615.4033561180546,-615.2022439101728,-615.0011317022912,-614.8000194944095,-614.5989072865277,-614.397795078646,-614.1966828707642,-613.9955706628825,-613.794458455001,-613.5933462471191,-613.3922340392375,-613.1911218313556,-612.990009623474,-612.7888974155924,-612.5877852077106,-612.3866729998289,-612.1855607919471,-611.9844485840654,-611.7833363761837,-611.582224168302,-611.3811119604203,-611.1799997525385,-610.9788875446568,-610.7777753367751,-610.5766631288934,-610.3755509210117,-610.1744387131299,-609.9733265052482,-609.7722142973665,-609.5711020894847,-609.3699898816031,-609.1688776737213,-608.9677654658396,-608.766653257958,-608.5655410500761,-608.3644288421946,-608.1633166343128,-607.9622044264311,-607.7610922185494,-607.5599800106676,-607.3588678027859,-607.1577555949042,-606.9566433870225,-606.7555311791408,-606.554418971259,-606.3533067633773,-606.1521945554956,-605.9510823476139,-605.7499701397322,-605.5488579318504,-605.3477457239687,-605.1466335160869,-604.9455213082053,-604.7444091003237,-604.5432968924418,-604.3421846845602,-604.1410724766783,-603.9399602687968,-603.7388480609151,-603.5377358530333,-603.3366236451516,-603.1355114372698,-602.9343992293881,-602.7332870215065,-602.5321748136247,-602.331062605743,-602.1299503978612,-601.9288381899795,-601.7277259820979,-601.5266137742161,-601.3255015663344,-601.1243893584526,-600.9232771505709,-600.7221649426892,-600.5210527348075,-600.3199405269258,-600.118828319044,-599.9177161111623,-599.7166039032807,-599.515491695399,-599.3143794875173,-599.1132672796355,-598.9121550717538,-598.7110428638721,-598.5099306559903,-598.3088184481087,-598.1077062402269,-597.9065940323452,-597.7054818244635,-597.5043696165817,-597.3032574087001,-597.1021452008183,-596.9010329929366,-596.6999207850549,-596.4988085771731,-596.2976963692914,-596.0965841614097,-595.895471953528,-595.6943597456464,-595.4932475377645,-595.2921353298829,-595.0910231220012,-594.8899109141195,-594.6887987062378,-594.487686498356,-594.2865742904743,-594.0854620825925,-593.8843498747109,-593.6832376668292,-593.4821254589474,-593.2810132510657,-593.0799010431839,-592.8787888353023,-592.6776766274206,-592.4765644195388,-592.2754522116571,-592.0743400037753,-591.8732277958936,-591.672115588012,-591.4710033801302,-591.2698911722485,-591.0687789643667,-590.867666756485,-590.6665545486035,-590.4654423407217,-590.26433013284,-590.0632179249583,-589.8621057170765,-589.6609935091948,-589.4598813013131,-589.2587690934314,-589.0576568855497,-588.8565446776679,-588.6554324697862,-588.4543202619045,-588.2532080540228,-588.0520958461411,-587.8509836382593,-587.6498714303776,-587.4487592224958,-587.2476470146142,-587.0465348067326,-586.8454225988507,-586.644310390969,-586.4431981830872,-586.2420859752057,-586.040973767324,-585.8398615594422,-585.6387493515605,-585.4376371436787,-585.236524935797,-585.0354127279154,-584.8343005200336,-584.6331883121519,-584.4320761042701,-584.2309638963884,-584.0298516885068,-583.828739480625,-583.6276272727433,-583.4265150648615,-583.2254028569798,-583.0242906490981,-582.8231784412164,-582.6220662333347,-582.4209540254529,-582.2198418175713,-582.0187296096896,-581.8176174018079,-581.6165051939262,-581.4153929860444,-581.2142807781627,-581.013168570281,-580.8120563623992,-580.6109441545176,-580.4098319466358,-580.2087197387541,-580.0076075308724,-579.8064953229906,-579.605383115109,-579.4042709072272,-579.2031586993455,-579.0020464914638,-578.800934283582,-578.5998220757003,-578.3987098678186,-578.197597659937,-577.9964854520553,-577.7953732441734,-577.5942610362918,-577.3931488284101,-577.1920366205284,-576.9909244126467,-576.7898122047649,-576.5886999968832,-576.3875877890014,-576.1864755811198,-575.9853633732381,-575.7842511653563,-575.5831389574746,-575.3820267495928,-575.1809145417112,-574.9798023338295,-574.7786901259477,-574.577577918066,-574.3764657101842,-574.1753535023025,-573.974241294421,-573.7731290865391,-573.5720168786575,-573.3709046707756,-573.169792462894,-572.9686802550124,-572.7675680471306,-572.5664558392489,-572.3653436313671,-572.1642314234854,-571.9631192156037,-571.762007007722,-571.5608947998403,-571.3597825919585,-571.1586703840768,-570.9575581761951,-570.7564459683134,-570.5553337604317,-570.3542215525499,-570.1531093446682,-569.9519971367865,-569.7508849289047,-569.5497727210231,-569.3486605131413,-569.1475483052596,-568.946436097378,-568.7453238894961,-568.5442116816146,-568.3430994737328,-568.1419872658511,-567.9408750579694,-567.7397628500876,-567.5386506422059,-567.3375384343242,-567.1364262264425,-566.9353140185608,-566.734201810679,-566.5330896027973,-566.3319773949155,-566.1308651870339,-565.9297529791522,-565.7286407712704,-565.5275285633887,-565.3264163555069,-565.1253041476253,-564.9241919397437,-564.7230797318618,-564.5219675239802,-564.3208553160983,-564.1197431082167,-563.9186309003351,-563.7175186924533,-563.5164064845716,-563.3152942766898,-563.1141820688081,-562.9130698609265,-562.7119576530447,-562.510845445163,-562.3097332372812,-562.1086210293995,-561.9075088215178,-561.7063966136361,-561.5052844057544,-561.3041721978726,-561.1030599899909,-560.9019477821092,-560.7008355742275,-560.4997233663458,-560.298611158464,-560.0974989505823,-559.8963867427007,-559.6952745348189,-559.4941623269373,-559.2930501190555,-559.0919379111738,-558.8908257032921,-558.6897134954103,-558.4886012875287,-558.2874890796469,-558.0863768717652,-557.8852646638835,-557.6841524560017,-557.48304024812,-557.2819280402383,-557.0808158323566,-556.8797036244749,-556.6785914165931,-556.4774792087114,-556.2763670008297,-556.075254792948,-555.8741425850664,-555.6730303771845,-555.4719181693029,-555.270805961421,-555.0696937535395,-554.8685815456578,-554.667469337776,-554.4663571298943,-554.2652449220125,-554.0641327141309,-553.8630205062492,-553.6619082983674,-553.4607960904857,-553.2596838826039,-553.0585716747222,-552.8574594668406,-552.6563472589588,-552.4552350510771,-552.2541228431953,-552.0530106353136,-551.851898427432,-551.6507862195502,-551.4496740116685,-551.2485618037869,-551.047449595905,-550.8463373880234,-550.6452251801417,-550.44411297226,-550.2430007643783,-550.0418885564965,-549.8407763486148,-549.6396641407331,-549.4385519328514,-549.2374397249697,-549.0363275170879,-548.8352153092062,-548.6341031013244,-548.4329908934428,-548.2318786855611,-548.0307664776793,-547.8296542697976,-547.6285420619158,-547.4274298540342,-547.2263176461526,-547.0252054382707,-546.824093230389,-546.6229810225072,-546.4218688146256,-546.220756606744,-546.0196443988622,-545.8185321909805,-545.6174199830987,-545.416307775217,-545.2151955673354,-545.0140833594536,-544.8129711515719,-544.6118589436901,-544.4107467358084,-544.2096345279267,-544.008522320045,-543.8074101121633,-543.6062979042815,-543.4051856963998,-543.2040734885181,-543.0029612806364,-542.8018490727547,-542.6007368648729,-542.3996246569913,-542.1985124491096,-541.9974002412278,-541.7962880333462,-541.5951758254644,-541.3940636175827,-541.192951409701,-540.9918392018192,-540.7907269939376,-540.5896147860558,-540.3885025781741,-540.1873903702924,-539.9862781624106,-539.7851659545289,-539.5840537466472,-539.3829415387655,-539.1818293308838,-538.980717123002,-538.7796049151203,-538.5784927072386,-538.377380499357,-538.1762682914753,-537.9751560835934,-537.7740438757118,-537.57293166783,-537.3718194599484,-537.1707072520667,-536.9695950441849,-536.7684828363032,-536.5673706284214,-536.3662584205398,-536.1651462126581,-535.9640340047763,-535.7629217968946,-535.5618095890128,-535.3606973811311,-535.1595851732495,-534.9584729653677,-534.757360757486,-534.5562485496042,-534.3551363417225,-534.154024133841,-533.9529119259591,-533.7517997180775,-533.5506875101956,-533.349575302314,-533.1484630944323,-532.9473508865506,-532.7462386786689,-532.5451264707871,-532.3440142629054,-532.1429020550237,-531.941789847142,-531.7406776392603,-531.5395654313785,-531.3384532234968,-531.1373410156151,-530.9362288077333,-530.7351165998517,-530.5340043919699,-530.3328921840882,-530.1317799762065,-529.9306677683247,-529.7295555604431,-529.5284433525613,-529.3273311446796,-529.126218936798,-528.9251067289161,-528.7239945210345,-528.5228823131528,-528.3217701052711,-528.1206578973894,-527.9195456895076,-527.7184334816259,-527.5173212737442,-527.3162090658625,-527.1150968579808,-526.913984650099,-526.7128724422173,-526.5117602343355,-526.3106480264539,-526.1095358185722,-525.9084236106904,-525.7073114028087,-525.5061991949269,-525.3050869870453,-525.1039747791637,-524.9028625712818,-524.7017503634002,-524.5006381555183,-524.2995259476368,-524.098413739755,-523.8973015318733,-523.6961893239916,-523.4950771161098,-523.2939649082282,-523.0928527003464,-522.8917404924647,-522.690628284583,-522.4895160767012,-522.2884038688196,-522.0872916609378,-521.8861794530561,-521.6850672451744,-521.4839550372926,-521.2828428294109,-521.0817306215292,-520.8806184136475,-520.6795062057657,-520.478393997884,-520.2772817900023,-520.0761695821207,-519.875057374239,-519.6739451663572,-519.4728329584755,-519.2717207505938,-519.0706085427121,-518.8694963348304,-518.6683841269486,-518.4672719190669,-518.2661597111852,-518.0650475033035,-517.8639352954218,-517.66282308754,-517.4617108796583,-517.2605986717766,-517.0594864638949,-516.8583742560131,-516.6572620481314,-516.4561498402497,-516.255037632368,-516.0539254244864,-515.8528132166045,-515.6517010087229,-515.4505888008412,-515.2494765929595,-515.0483643850778,-514.847252177196,-514.6461399693143,-514.4450277614326,-514.2439155535509,-514.0428033456691,-513.8416911377874,-513.6405789299057,-513.439466722024,-513.2383545141423,-513.0372423062605,-512.8361300983788,-512.6350178904971,-512.4339056826154,-512.2327934747337,-512.0316812668519,-511.83056905897024,-511.62945685108855,-511.4283446432068,-511.2272324353251,-511.02612022744336,-510.82500801956166,-510.62389581168,-510.4227836037982,-510.2216713959165,-510.0205591880348,-509.8194469801531,-509.61833477227134,-509.41722256438965,-509.2161103565079,-509.0149981486262,-508.8138859407445,-508.61277373286276,-508.41166152498107,-508.2105493170993,-508.0094371092176,-507.80832490133594,-507.6072126934542,-507.40610048557244,-507.20498827769075,-507.003876069809,-506.80276386192736,-506.6016516540456,-506.40053944616386,-506.19942723828217,-505.9983150304004,-505.7972028225187,-505.59609061463703,-505.3949784067553,-505.19386619887354,-504.9927539909919,-504.79164178311015,-504.59052957522846,-504.3894173673467,-504.18830515946496,-503.9871929515833,-503.7860807437016,-503.5849685358198,-503.38385632793813,-503.1827441200564,-502.9816319121747,-502.780519704293,-502.57940749641125,-502.37829528852956,-502.1771830806478,-501.9760708727661,-501.7749586648844,-501.5738464570027,-501.3727342491209,-501.17162204123923,-500.97050983335754,-500.7693976254758,-500.5682854175941,-500.36717320971235,-500.16606100183066,-499.96494879394896,-499.7638365860672,-499.5627243781855,-499.3616121703038,-499.160499962422,-498.9593877545404,-498.75827554665864,-498.5571633387769,-498.3560511308952,-498.15493892301345,-497.9538267151318,-497.75271450725006,-497.5516022993683,-497.3504900914866,-497.14937788360487,-496.9482656757232,-496.7471534678415,-496.54604125995974,-496.344929052078,-496.1438168441963,-495.9427046363146,-495.7415924284329,-495.54048022055116,-495.3393680126694,-495.1382558047877,-494.937143596906,-494.7360313890243,-494.5349191811426,-494.33380697326083,-494.1326947653791,-493.93158255749745,-493.7304703496157,-493.529358141734,-493.32824593385226,-493.1271337259705,-492.9260215180889,-492.7249093102071,-492.5237971023254,-492.3226848944437,-492.12157268656193,-491.92046047868024,-491.71934827079855,-491.5182360629168,-491.3171238550351,-491.11601164715336,-490.91489943927166,-490.71378723139,-490.5126750235082,-490.3115628156265,-490.1104506077448,-489.9093383998631,-489.70822619198134,-489.50711398409965,-489.3060017762179,-489.10488956833615,-488.9037773604545,-488.70266515257276,-488.50155294469107,-488.3004407368093,-488.0993285289276,-487.89821632104594,-487.6971041131642,-487.49599190528244,-487.29487969740075,-487.093767489519,-486.8926552816373,-486.6915430737556,-486.49043086587386,-486.28931865799217,-486.0882064501105,-485.8870942422287,-485.68598203434703,-485.4848698264653,-485.28375761858354,-485.0826454107019,-484.88153320282015,-484.6804209949384,-484.4793087870567,-484.27819657917496,-484.0770843712933,-483.8759721634116,-483.6748599555298,-483.47374774764813,-483.2726355397664,-483.0715233318847,-482.870411124003,-482.66929891612125,-482.4681867082395,-482.2670745003578,-482.0659622924761,-481.8648500845944,-481.6637378767127,-481.4626256688309,-481.26151346094923,-481.06040125306754,-480.8592890451858,-480.6581768373041,-480.45706462942235,-480.2559524215406,-480.05484021365896,-479.8537280057772,-479.6526157978955,-479.4515035900138,-479.250391382132,-479.0492791742504,-478.84816696636864,-478.6470547584869,-478.4459425506052,-478.24483034272345,-478.04371813484175,-477.84260592696006,-477.6414937190783,-477.4403815111966,-477.23926930331487,-477.0381570954332,-476.8370448875515,-476.63593267966974,-476.434820471788,-476.2337082639063,-476.0325960560246,-475.83148384814285,-475.63037164026116,-475.4292594323794,-475.2281472244977,-475.027035016616,-474.8259228087343,-474.6248106008526,-474.42369839297083,-474.2225861850891,-474.02147397720745,-473.8203617693257,-473.61924956144395,-473.41813735356226,-473.2170251456805,-473.0159129377989,-472.8148007299171,-472.6136885220354,-472.4125763141537,-472.21146410627193,-472.01035189839024,-471.80923969050855,-471.6081274826268,-471.40701527474505,-471.20590306686336,-471.00479085898166,-470.8036786511,-470.6025664432182,-470.4014542353365,-470.2003420274548,-469.9992298195731,-469.79811761169134,-469.59700540380965,-469.3958931959279,-469.19478098804615,-468.9936687801645,-468.79255657228276,-468.59144436440107,-468.3903321565193,-468.1892199486376,-467.98810774075594,-467.7869955328742,-467.58588332499244,-467.38477111711074,-467.183658909229,-466.9825467013473,-466.7814344934656,-466.58032228558386,-466.37921007770217,-466.1780978698205,-465.9769856619387,-465.77587345405703,-465.5747612461753,-465.37364903829354,-465.1725368304119,-464.97142462253015,-464.7703124146484,-464.5692002067667,-464.36808799888496,-464.1669757910033,-463.9658635831216,-463.7647513752398,-463.56363916735813,-463.3625269594764,-463.1614147515947,-462.960302543713,-462.75919033583125,-462.5580781279495,-462.3569659200678,-462.1558537121861,-461.9547415043044,-461.7536292964227,-461.5525170885409,-461.35140488065923,-461.15029267277754,-460.9491804648958,-460.7480682570141,-460.54695604913235,-460.3458438412506,-460.14473163336896,-459.9436194254872,-459.7425072176055,-459.5413950097238,-459.340282801842,-459.1391705939604,-458.93805838607864,-458.7369461781969,-458.5358339703152,-458.33472176243345,-458.13360955455175,-457.93249734667006,-457.7313851387883,-457.5302729309066,-457.32916072302487,-457.1280485151432,-456.9269363072615,-456.72582409937974,-456.524711891498,-456.3235996836163,-456.1224874757346,-455.92137526785285,-455.72026305997116,-455.5191508520894,-455.3180386442077,-455.116926436326,-454.9158142284443,-454.7147020205626,-454.51358981268083,-454.3124776047991,-454.11136539691745,-453.9102531890357,-453.70914098115395,-453.50802877327226,-453.3069165653905,-453.1058043575089,-452.9046921496271,-452.7035799417454,-452.5024677338637,-452.30135552598193,-452.10024331810024,-451.89913111021855,-451.6980189023368,-451.49690669445505,-451.29579448657336,-451.09468227869166,-450.89357007081,-450.6924578629282,-450.4913456550465,-450.2902334471648,-450.0891212392831,-449.88800903140134,-449.68689682351965,-449.4857846156379,-449.28467240775615,-449.0835601998745,-448.88244799199276,-448.68133578411107,-448.4802235762293,-448.27911136834757,-448.07799916046594,-447.8768869525842,-447.67577474470244,-447.47466253682074,-447.27355032893905,-447.0724381210573,-446.8713259131756,-446.67021370529386,-446.46910149741217,-446.2679892895305,-446.0668770816487,-445.86576487376703,-445.6646526658853,-445.46354045800354,-445.2624282501219,-445.06131604224015,-444.8602038343584,-444.6590916264767,-444.45797941859496,-444.2568672107133,-444.0557550028316,-443.8546427949498,-443.65353058706813,-443.4524183791864,-443.2513061713047,-443.050193963423,-442.84908175554125,-442.6479695476595,-442.4468573397778,-442.2457451318961,-442.0446329240144,-441.8435207161327,-441.6424085082509,-441.44129630036923,-441.24018409248754,-441.0390718846058,-440.8379596767241,-440.63684746884235,-440.4357352609606,-440.23462305307896,-440.0335108451972,-439.8323986373155,-439.63128642943377,-439.430174221552,-439.2290620136704,-439.02794980578864,-438.8268375979069,-438.6257253900252,-438.42461318214345,-438.22350097426175,-438.02238876638006,-437.8212765584983,-437.6201643506166,-437.41905214273487,-437.2179399348532,-437.0168277269715,-436.81571551908974,-436.614603311208,-436.4134911033263,-436.2123788954446,-436.01126668756285,-435.81015447968116,-435.6090422717994,-435.40793006391766,-435.206817856036,-435.0057056481543,-434.8045934402726,-434.60348123239083,-434.4023690245091,-434.20125681662745,-434.0001446087457,-433.79903240086395,-433.59792019298226,-433.3968079851005,-433.1956957772188,-432.9945835693371,-432.7934713614554,-432.5923591535737,-432.39124694569193,-432.19013473781024,-431.98902252992855,-431.7879103220468,-431.58679811416505,-431.38568590628336,-431.18457369840166,-430.9834614905199,-430.7823492826382,-430.5812370747565,-430.3801248668748,-430.1790126589931,-429.97790045111134,-429.77678824322965,-429.5756760353479,-429.37456382746615,-429.1734516195845,-428.97233941170276,-428.771227203821,-428.5701149959393,-428.3690027880576,-428.16789058017594,-427.9667783722942,-427.76566616441244,-427.56455395653074,-427.36344174864905,-427.1623295407673,-426.9612173328856,-426.76010512500386,-426.5589929171221,-426.3578807092405,-426.1567685013587,-425.95565629347703,-425.7545440855953,-425.55343187771354,-425.3523196698319,-425.15120746195015,-424.9500952540684,-424.7489830461867,-424.54787083830496,-424.34675863042327,-424.1456464225416,-423.9445342146598,-423.74342200677813,-423.5423097988964,-423.3411975910147,-423.140085383133,-422.93897317525125,-422.7378609673695,-422.5367487594878,-422.3356365516061,-422.13452434372437,-421.9334121358427,-421.7322999279609,-421.53118772007923,-421.33007551219754,-421.1289633043158,-420.9278510964341,-420.72673888855235,-420.5256266806706,-420.32451447278896,-420.1234022649072,-419.92229005702546,-419.72117784914377,-419.520065641262,-419.3189534333804,-419.11784122549864,-418.9167290176169,-418.7156168097352,-418.51450460185345,-418.31339239397175,-418.11228018609006,-417.9111679782083,-417.71005577032656,-417.50894356244487,-417.3078313545632,-417.1067191466815,-416.90560693879974,-416.704494730918,-416.5033825230363,-416.3022703151546,-416.10115810727285,-415.90004589939116,-415.6989336915094,-415.49782148362766,-415.296709275746,-415.0955970678643,-414.8944848599826,-414.69337265210083,-414.4922604442191,-414.29114823633745,-414.0900360284557,-413.88892382057395,-413.68781161269226,-413.4866994048105,-413.2855871969288,-413.0844749890471,-412.8833627811654,-412.6822505732837,-412.48113836540193,-412.28002615752024,-412.07891394963855,-411.8778017417568,-411.67668953387505,-411.47557732599336,-411.27446511811166,-411.0733529102299,-410.8722407023482,-410.6711284944665,-410.47001628658484,-410.2689040787031,-410.06779187082134,-409.86667966293965,-409.6655674550579,-409.46445524717615,-409.2633430392945,-409.06223083141276,-408.861118623531,-408.6600064156493,-408.4588942077676,-408.25778199988594,-408.0566697920042,-407.85555758412244,-407.65444537624074,-407.45333316835905,-407.2522209604773,-407.0511087525956,-406.84999654471386,-406.6488843368321,-406.4477721289505,-406.2466599210687,-406.04554771318703,-405.8444355053053,-405.64332329742354,-405.4422110895419,-405.24109888166015,-405.0399866737784,-404.8388744658967,-404.63776225801496,-404.43665005013327,-404.2355378422516,-404.0344256343698,-403.83331342648813,-403.6322012186064,-403.4310890107247,-403.229976802843,-403.02886459496125,-402.8277523870795,-402.6266401791978,-402.4255279713161,-402.22441576343437,-402.0233035555527,-401.8221913476709,-401.62107913978923,-401.41996693190754,-401.2188547240258,-401.0177425161441,-400.81663030826235,-400.6155181003806,-400.41440589249896,-400.2132936846172,-400.01218147673546,-399.81106926885377,-399.609957060972,-399.4088448530904,-399.20773264520864,-399.0066204373269,-398.8055082294452,-398.60439602156345,-398.40328381368175,-398.20217160580006,-398.0010593979183,-397.79994719003656,-397.59883498215487,-397.3977227742732,-397.1966105663915,-396.99549835850974,-396.794386150628,-396.5932739427463,-396.3921617348646,-396.19104952698285,-395.98993731910116,-395.7888251112194,-395.58771290333766,-395.386600695456,-395.1854884875743,-394.9843762796926,-394.78326407181083,-394.5821518639291,-394.38103965604745,-394.1799274481657,-393.97881524028395,-393.77770303240226,-393.5765908245205,-393.3754786166388,-393.1743664087571,-392.9732542008754,-392.7721419929937,-392.57102978511193,-392.36991757723024,-392.16880536934855,-391.9676931614668,-391.76658095358505,-391.56546874570336,-391.36435653782166,-391.1632443299399,-390.9621321220582,-390.7610199141765,-390.55990770629484,-390.3587954984131,-390.15768329053134,-389.95657108264965,-389.7554588747679,-389.5543466668862,-389.3532344590045,-389.15212225112276,-388.951010043241,-388.7498978353593,-388.5487856274776,-388.34767341959594,-388.1465612117142,-387.94544900383244,-387.74433679595074,-387.54322458806905,-387.3421123801873,-387.1410001723056,-386.93988796442386,-386.7387757565421,-386.5376635486605,-386.3365513407787,-386.135439132897,-385.9343269250153,-385.73321471713354,-385.5321025092519,-385.33099030137015,-385.1298780934884,-384.9287658856067,-384.72765367772496,-384.52654146984327,-384.3254292619616,-384.1243170540798,-383.9232048461981,-383.7220926383164,-383.5209804304347,-383.319868222553,-383.11875601467125,-382.9176438067895,-382.7165315989078,-382.5154193910261,-382.31430718314436,-382.1131949752627,-381.9120827673809,-381.7109705594992,-381.50985835161754,-381.3087461437358,-381.1076339358541,-380.90652172797235,-380.7054095200906,-380.50429731220896,-380.3031851043272,-380.10207289644546,-379.90096068856377,-379.699848480682,-379.49873627280033,-379.29762406491864,-379.0965118570369,-378.8953996491552,-378.69428744127345,-378.49317523339175,-378.29206302551006,-378.0909508176283,-377.88983860974656,-377.68872640186487,-377.4876141939832,-377.2865019861014,-377.08538977821974,-376.884277570338,-376.6831653624563,-376.4820531545746,-376.28094094669285,-376.07982873881116,-375.8787165309294,-375.67760432304766,-375.476492115166,-375.2753799072843,-375.0742676994025,-374.87315549152083,-374.6720432836391,-374.47093107575745,-374.2698188678757,-374.06870665999395,-373.86759445211226,-373.6664822442305,-373.4653700363488,-373.2642578284671,-373.0631456205854,-372.8620334127036,-372.66092120482193,-372.45980899694024,-372.25869678905855,-372.0575845811768,-371.85647237329505,-371.6553601654134,-371.45424795753166,-371.2531357496499,-371.0520235417682,-370.8509113338865,-370.6497991260047,-370.4486869181231,-370.24757471024134,-370.04646250235965,-369.8453502944779,-369.6442380865962,-369.4431258787145,-369.24201367083276,-369.040901462951,-368.8397892550693,-368.6386770471876,-368.4375648393059,-368.2364526314242,-368.03534042354244,-367.83422821566074,-367.63311600777905,-367.4320037998973,-367.2308915920156,-367.02977938413386,-366.8286671762521,-366.6275549683705,-366.4264427604887,-366.225330552607,-366.0242183447253,-365.82310613684353,-365.6219939289619,-365.42088172108015,-365.2197695131984,-365.0186573053167,-364.81754509743496,-364.61643288955327,-364.4153206816716,-364.2142084737898,-364.0130962659081,-363.8119840580264,-363.6108718501447,-363.409759642263,-363.20864743438125,-363.0075352264995,-362.8064230186178,-362.6053108107361,-362.40419860285436,-362.2030863949727,-362.0019741870909,-361.8008619792092,-361.59974977132754,-361.3986375634458,-361.1975253555641,-360.99641314768235,-360.7953009398006,-360.59418873191896,-360.3930765240372,-360.19196431615546,-359.99085210827377,-359.789739900392,-359.58862769251033,-359.38751548462864,-359.1864032767469,-358.9852910688652,-358.78417886098345,-358.58306665310175,-358.38195444522006,-358.1808422373383,-357.97973002945656,-357.77861782157487,-357.5775056136932,-357.3763934058114,-357.17528119792973,-356.974168990048,-356.7730567821663,-356.5719445742846,-356.37083236640285,-356.16972015852116,-355.9686079506394,-355.76749574275766,-355.566383534876,-355.3652713269943,-355.1641591191125,-354.96304691123083,-354.7619347033491,-354.56082249546745,-354.3597102875857,-354.15859807970395,-353.95748587182226,-353.7563736639405,-353.5552614560588,-353.3541492481771,-353.1530370402954,-352.9519248324136,-352.750812624532,-352.54970041665024,-352.34858820876855,-352.1474760008868,-351.94636379300505,-351.7452515851234,-351.54413937724166,-351.3430271693599,-351.1419149614782,-350.9408027535965,-350.7396905457148,-350.5385783378331,-350.33746612995134,-350.13635392206965,-349.9352417141879,-349.7341295063062,-349.5330172984245,-349.33190509054276,-349.130792882661,-348.9296806747793,-348.7285684668976,-348.5274562590159,-348.3263440511342,-348.12523184325244,-347.92411963537074,-347.72300742748905,-347.5218952196073,-347.3207830117256,-347.11967080384386,-346.9185585959621,-346.7174463880805,-346.5163341801987,-346.315221972317,-346.1141097644353,-345.91299755655353,-345.7118853486719,-345.51077314079015,-345.3096609329084,-345.1085487250267,-344.90743651714496,-344.70632430926327,-344.5052121013816,-344.3040998934998,-344.1029876856181,-343.9018754777364,-343.7007632698547,-343.499651061973,-343.29853885409125,-343.0974266462095,-342.8963144383278,-342.6952022304461,-342.49409002256436,-342.2929778146827,-342.0918656068009,-341.8907533989192,-341.68964119103754,-341.4885289831558,-341.2874167752741,-341.08630456739235,-340.8851923595106,-340.68408015162896,-340.4829679437472,-340.28185573586546,-340.08074352798377,-339.879631320102,-339.67851911222033,-339.47740690433864,-339.2762946964569,-339.0751824885752,-338.87407028069345,-338.67295807281175,-338.47184586493006,-338.2707336570483,-338.06962144916656,-337.86850924128487,-337.6673970334032,-337.4662848255214,-337.26517261763973,-337.064060409758,-336.8629482018763,-336.6618359939946,-336.46072378611285,-336.25961157823116,-336.0584993703494,-335.85738716246766,-335.656274954586,-335.4551627467043,-335.2540505388225,-335.05293833094083,-334.8518261230591,-334.65071391517745,-334.4496017072957,-334.24848949941395,-334.04737729153226,-333.8462650836505,-333.6451528757688,-333.4440406678871,-333.2429284600054,-333.0418162521236,-332.840704044242,-332.63959183636024,-332.4384796284785,-332.2373674205968,-332.03625521271505,-331.8351430048334,-331.63403079695166,-331.4329185890699,-331.2318063811882,-331.0306941733065,-330.8295819654248,-330.6284697575431,-330.42735754966134,-330.2262453417796,-330.0251331338979,-329.8240209260162,-329.6229087181345,-329.42179651025276,-329.220684302371,-329.0195720944893,-328.8184598866076,-328.6173476787259,-328.4162354708442,-328.21512326296244,-328.0140110550807,-327.81289884719905,-327.6117866393173,-327.4106744314356,-327.20956222355386,-327.0084500156721,-326.8073378077905,-326.6062255999087,-326.405113392027,-326.2040011841453,-326.00288897626353,-325.80177676838184,-325.60066456050015,-325.3995523526184,-325.1984401447367,-324.99732793685496,-324.79621572897327,-324.5951035210916,-324.3939913132098,-324.1928791053281,-323.9917668974464,-323.7906546895647,-323.58954248168294,-323.38843027380125,-323.1873180659195,-322.9862058580378,-322.7850936501561,-322.58398144227436,-322.3828692343927,-322.1817570265109,-321.9806448186292,-321.77953261074754,-321.5784204028658,-321.37730819498404,-321.17619598710235,-320.9750837792206,-320.77397157133896,-320.5728593634572,-320.37174715557546,-320.17063494769377,-319.969522739812,-319.76841053193033,-319.56729832404864,-319.3661861161669,-319.16507390828514,-318.96396170040344,-318.76284949252175,-318.56173728464006,-318.3606250767583,-318.15951286887656,-317.95840066099487,-317.7572884531132,-317.5561762452314,-317.35506403734973,-317.153951829468,-316.95283962158624,-316.7517274137046,-316.55061520582285,-316.34950299794116,-316.1483907900594,-315.94727858217766,-315.746166374296,-315.5450541664143,-315.3439419585325,-315.14282975065083,-314.9417175427691,-314.7406053348874,-314.5394931270057,-314.33838091912395,-314.13726871124226,-313.93615650336056,-313.7350442954788,-313.5339320875971,-313.3328198797154,-313.1317076718336,-312.930595463952,-312.72948325607024,-312.5283710481885,-312.3272588403068,-312.12614663242505,-311.9250344245434,-311.72392221666166,-311.5228100087799,-311.3216978008982,-311.1205855930165,-310.9194733851348,-310.7183611772531,-310.51724896937134,-310.3161367614896,-310.1150245536079,-309.9139123457262,-309.7128001378445,-309.51168792996276,-309.310575722081,-309.1094635141993,-308.9083513063176,-308.7072390984359,-308.5061268905542,-308.30501468267244,-308.1039024747907,-307.90279026690905,-307.7016780590273,-307.5005658511456,-307.29945364326386,-307.0983414353821,-306.8972292275005,-306.6961170196187,-306.495004811737,-306.2938926038553,-306.09278039597353,-305.89166818809184,-305.69055598021015,-305.4894437723284,-305.2883315644467,-305.08721935656496,-304.88610714868327,-304.6849949408016,-304.4838827329198,-304.2827705250381,-304.0816583171564,-303.8805461092747,-303.67943390139294,-303.47832169351125,-303.2772094856295,-303.0760972777478,-302.8749850698661,-302.67387286198436,-302.4727606541027,-302.2716484462209,-302.0705362383392,-301.86942403045754,-301.6683118225758,-301.46719961469404,-301.26608740681235,-301.0649751989306,-300.86386299104896,-300.6627507831672,-300.46163857528546,-300.26052636740377,-300.059414159522,-299.8583019516403,-299.65718974375864,-299.4560775358769,-299.25496532799514,-299.05385312011344,-298.85274091223175,-298.65162870435006,-298.4505164964683,-298.24940428858656,-298.04829208070487,-297.8471798728232,-297.6460676649414,-297.44495545705973,-297.243843249178,-297.04273104129624,-296.8416188334146,-296.64050662553285,-296.43939441765116,-296.2382822097694,-296.03717000188766,-295.836057794006,-295.6349455861243,-295.4338333782425,-295.23272117036083,-295.03160896247914,-294.8304967545974,-294.6293845467157,-294.42827233883395,-294.22716013095226,-294.02604792307056,-293.8249357151888,-293.6238235073071,-293.4227112994254,-293.2215990915436,-293.020486883662,-292.81937467578024,-292.6182624678985,-292.4171502600168,-292.21603805213505,-292.0149258442534,-291.81381363637166,-291.6127014284899,-291.4115892206082,-291.21047701272647,-291.0093648048448,-290.8082525969631,-290.60714038908134,-290.4060281811996,-290.2049159733179,-290.0038037654362,-289.8026915575545,-289.60157934967276,-289.400467141791,-289.1993549339093,-288.9982427260276,-288.7971305181459,-288.5960183102642,-288.39490610238244,-288.1937938945007,-287.99268168661905,-287.7915694787373,-287.5904572708556,-287.38934506297386,-287.1882328550921,-286.9871206472105,-286.7860084393287,-286.584896231447,-286.3837840235653,-286.18267181568353,-285.98155960780184,-285.78044739992015,-285.5793351920384,-285.3782229841567,-285.17711077627496,-284.97599856839327,-284.7748863605116,-284.5737741526298,-284.3726619447481,-284.1715497368664,-283.9704375289847,-283.76932532110294,-283.56821311322125,-283.3671009053395,-283.16598869745775,-282.9648764895761,-282.76376428169436,-282.56265207381267,-282.3615398659309,-282.1604276580492,-281.95931545016754,-281.7582032422858,-281.55709103440404,-281.35597882652235,-281.1548666186406,-280.9537544107589,-280.7526422028772,-280.55152999499546,-280.35041778711377,-280.149305579232,-279.9481933713503,-279.74708116346864,-279.5459689555869,-279.34485674770514,-279.14374453982344,-278.94263233194175,-278.74152012406,-278.5404079161783,-278.33929570829656,-278.13818350041487,-277.9370712925332,-277.7359590846514,-277.53484687676973,-277.333734668888,-277.13262246100624,-276.9315102531246,-276.73039804524285,-276.5292858373611,-276.3281736294794,-276.12706142159766,-275.925949213716,-275.7248370058343,-275.5237247979525,-275.32261259007083,-275.12150038218914,-274.9203881743074,-274.7192759664257,-274.51816375854395,-274.3170515506622,-274.11593934278056,-273.9148271348988,-273.7137149270171,-273.5126027191354,-273.3114905112536,-273.110378303372,-272.90926609549024,-272.7081538876085,-272.5070416797268,-272.30592947184505,-272.10481726396335,-271.90370505608166,-271.7025928481999,-271.5014806403182,-271.30036843243647,-271.0992562245548,-270.8981440166731,-270.69703180879134,-270.4959196009096,-270.2948073930279,-270.0936951851462,-269.89258297726445,-269.69147076938276,-269.490358561501,-269.2892463536193,-269.0881341457376,-268.8870219378559,-268.6859097299742,-268.48479752209244,-268.2836853142107,-268.08257310632905,-267.8814608984473,-267.68034869056555,-267.47923648268386,-267.2781242748021,-267.0770120669205,-266.8758998590387,-266.674787651157,-266.4736754432753,-266.27256323539353,-266.07145102751184,-265.87033881963015,-265.6692266117484,-265.46811440386665,-265.26700219598496,-265.06588998810327,-264.8647777802216,-264.6636655723398,-264.4625533644581,-264.2614411565764,-264.0603289486947,-263.85921674081294,-263.65810453293125,-263.4569923250495,-263.25588011716775,-263.0547679092861,-262.85365570140436,-262.65254349352267,-262.4514312856409,-262.2503190777592,-262.0492068698775,-261.8480946619958,-261.6469824541141,-261.44587024623235,-261.2447580383506,-261.0436458304689,-260.8425336225872,-260.64142141470546,-260.44030920682377,-260.239196998942,-260.0380847910603,-259.8369725831786,-259.6358603752969,-259.4347481674152,-259.23363595953344,-259.03252375165175,-258.83141154377,-258.6302993358883,-258.42918712800656,-258.22807492012487,-258.0269627122432,-257.8258505043614,-257.62473829647973,-257.423626088598,-257.2225138807163,-257.02140167283454,-256.82028946495285,-256.61917725707116,-256.4180650491894,-256.2169528413077,-256.01584063342597,-255.81472842554427,-255.61361621766255,-255.41250400978083,-255.2113918018991,-255.0102795940174,-254.80916738613567,-254.60805517825395,-254.40694297037226,-254.20583076249054,-254.0047185546088,-253.8036063467271,-253.60249413884537,-253.40138193096368,-253.20026972308193,-252.9991575152002,-252.79804530731852,-252.59693309943677,-252.39582089155508,-252.19470868367335,-251.99359647579166,-251.7924842679099,-251.5913720600282,-251.3902598521465,-251.18914764426478,-250.98803543638306,-250.78692322850134,-250.58581102061962,-250.3846988127379,-250.18358660485617,-249.98247439697448,-249.78136218909276,-249.580249981211,-249.37913777332932,-249.1780255654476,-248.9769133575659,-248.77580114968416,-248.57468894180244,-248.37357673392074,-248.172464526039,-247.9713523181573,-247.77024011027558,-247.56912790239386,-247.36801569451214,-247.16690348663042,-246.96579127874872,-246.764679070867,-246.56356686298525,-246.36245465510356,-246.16134244722184,-245.96023023934012,-245.7591180314584,-245.55800582357668,-245.356893615695,-245.15578140781324,-244.95466919993154,-244.75355699204982,-244.55244478416807,-244.35133257628638,-244.15022036840466,-243.94910816052297,-243.74799595264122,-243.5468837447595,-243.3457715368778,-243.14465932899608,-242.94354712111436,-242.74243491323264,-242.54132270535095,-242.3402104974692,-242.13909828958748,-241.9379860817058,-241.73687387382407,-241.53576166594235,-241.33464945806062,-241.1335372501789,-240.9324250422972,-240.73131283441546,-240.53020062653377,-240.32908841865205,-240.1279762107703,-239.9268640028886,-239.7257517950069,-239.5246395871252,-239.32352737924344,-239.12241517136172,-238.92130296348003,-238.7201907555983,-238.5190785477166,-238.31796633983487,-238.11685413195315,-237.91574192407143,-237.7146297161897,-237.513517508308,-237.3124053004263,-237.11129309254454,-236.91018088466285,-236.70906867678113,-236.50795646889944,-236.3068442610177,-236.10573205313597,-235.90461984525427,-235.70350763737252,-235.50239542949083,-235.3012832216091,-235.1001710137274,-234.89905880584567,-234.69794659796395,-234.49683439008226,-234.29572218220054,-234.0946099743188,-233.8934977664371,-233.69238555855537,-233.49127335067365,-233.29016114279193,-233.08904893491024,-232.88793672702852,-232.68682451914677,-232.48571231126508,-232.28460010338335,-232.08348789550166,-231.8823756876199,-231.6812634797382,-231.4801512718565,-231.27903906397475,-231.07792685609306,-230.87681464821134,-230.67570244032962,-230.4745902324479,-230.27347802456617,-230.07236581668448,-229.87125360880276,-229.670141400921,-229.46902919303932,-229.2679169851576,-229.06680477727588,-228.86569256939416,-228.66458036151244,-228.46346815363074,-228.262355945749,-228.0612437378673,-227.86013152998558,-227.65901932210386,-227.45790711422214,-227.25679490634042,-227.05568269845872,-226.85457049057698,-226.65345828269525,-226.45234607481356,-226.25123386693184,-226.05012165905012,-225.8490094511684,-225.64789724328668,-225.446785035405,-225.24567282752324,-225.04456061964154,-224.84344841175982,-224.64233620387807,-224.44122399599638,-224.24011178811466,-224.03899958023297,-223.83788737235122,-223.63677516446953,-223.4356629565878,-223.23455074870608,-223.03343854082436,-222.83232633294264,-222.63121412506095,-222.4301019171792,-222.22898970929748,-222.0278775014158,-221.82676529353407,-221.62565308565235,-221.42454087777062,-221.2234286698889,-221.0223164620072,-220.82120425412546,-220.62009204624377,-220.41897983836205,-220.2178676304803,-220.0167554225986,-219.81564321471689,-219.6145310068352,-219.41341879895344,-219.21230659107172,-219.01119438319003,-218.8100821753083,-218.6089699674266,-218.40785775954487,-218.20674555166315,-218.00563334378143,-217.8045211358997,-217.603408928018,-217.4022967201363,-217.20118451225454,-217.00007230437285,-216.79896009649113,-216.5978478886094,-216.3967356807277,-216.19562347284597,-215.99451126496427,-215.79339905708252,-215.59228684920083,-215.3911746413191,-215.1900624334374,-214.98895022555567,-214.78783801767395,-214.58672580979226,-214.3856136019105,-214.1845013940288,-213.9833891861471,-213.78227697826537,-213.58116477038365,-213.38005256250193,-213.17894035462024,-212.97782814673852,-212.77671593885677,-212.57560373097508,-212.37449152309335,-212.17337931521163,-211.9722671073299,-211.7711548994482,-211.5700426915665,-211.36893048368475,-211.16781827580306,-210.96670606792134,-210.76559386003962,-210.5644816521579,-210.36336944427617,-210.16225723639448,-209.96114502851273,-209.760032820631,-209.55892061274932,-209.3578084048676,-209.15669619698588,-208.95558398910416,-208.75447178122243,-208.55335957334074,-208.352247365459,-208.1511351575773,-207.95002294969558,-207.74891074181383,-207.54779853393214,-207.34668632605042,-207.14557411816872,-206.94446191028698,-206.74334970240525,-206.54223749452356,-206.34112528664184,-206.14001307876012,-205.9389008708784,-205.73778866299668,-205.53667645511496,-205.33556424723324,-205.13445203935154,-204.93333983146982,-204.73222762358807,-204.53111541570638,-204.33000320782466,-204.12889099994297,-203.92777879206122,-203.72666658417953,-203.5255543762978,-203.32444216841606,-203.12332996053436,-202.92221775265264,-202.72110554477095,-202.5199933368892,-202.31888112900748,-202.1177689211258,-201.91665671324407,-201.71554450536235,-201.51443229748062,-201.3133200895989,-201.11220788171718,-200.91109567383546,-200.70998346595377,-200.50887125807205,-200.3077590501903,-200.1066468423086,-199.90553463442689,-199.7044224265452,-199.50331021866344,-199.30219801078172,-199.10108580290003,-198.89997359501828,-198.6988613871366,-198.49774917925487,-198.29663697137315,-198.09552476349143,-197.8944125556097,-197.693300347728,-197.4921881398463,-197.29107593196454,-197.08996372408285,-196.88885151620113,-196.6877393083194,-196.4866271004377,-196.28551489255597,-196.08440268467427,-195.88329047679252,-195.68217826891083,-195.4810660610291,-195.27995385314742,-195.07884164526567,-194.87772943738395,-194.67661722950226,-194.4755050216205,-194.2743928137388,-194.0732806058571,-193.87216839797537,-193.67105619009365,-193.46994398221193,-193.26883177433024,-193.0677195664485,-192.86660735856677,-192.66549515068508,-192.46438294280335,-192.26327073492163,-192.0621585270399,-191.8610463191582,-191.6599341112765,-191.45882190339475,-191.25770969551306,-191.05659748763134,-190.8554852797496,-190.6543730718679,-190.45326086398617,-190.25214865610448,-190.05103644822273,-189.849924240341,-189.64881203245932,-189.4476998245776,-189.24658761669588,-189.04547540881416,-188.84436320093243,-188.6432509930507,-188.442138785169,-188.2410265772873,-188.03991436940558,-187.83880216152383,-187.63768995364214,-187.43657774576042,-187.23546553787872,-187.03435332999697,-186.83324112211525,-186.63212891423356,-186.4310167063518,-186.22990449847012,-186.0287922905884,-185.8276800827067,-185.62656787482496,-185.42545566694324,-185.22434345906154,-185.02323125117982,-184.8221190432981,-184.62100683541638,-184.41989462753466,-184.21878241965294,-184.01767021177122,-183.81655800388953,-183.6154457960078,-183.41433358812606,-183.21322138024436,-183.01210917236264,-182.81099696448095,-182.6098847565992,-182.40877254871748,-182.2076603408358,-182.00654813295404,-181.80543592507235,-181.60432371719062,-181.4032115093089,-181.20209930142718,-181.00098709354546,-180.79987488566377,-180.59876267778205,-180.3976504699003,-180.1965382620186,-179.99542605413689,-179.79431384625516,-179.59320163837344,-179.39208943049172,-179.19097722261003,-178.98986501472828,-178.7887528068466,-178.58764059896487,-178.38652839108315,-178.18541618320143,-177.9843039753197,-177.783191767438,-177.58207955955626,-177.38096735167454,-177.17985514379285,-176.97874293591113,-176.7776307280294,-176.5765185201477,-176.375406312266,-176.17429410438427,-175.97318189650252,-175.77206968862083,-175.5709574807391,-175.3698452728574,-175.16873306497567,-174.96762085709395,-174.76650864921226,-174.5653964413305,-174.3642842334488,-174.1631720255671,-173.96205981768537,-173.76094760980365,-173.55983540192193,-173.35872319404024,-173.1576109861585,-172.95649877827677,-172.75538657039507,-172.55427436251335,-172.35316215463163,-172.1520499467499,-171.9509377388682,-171.7498255309865,-171.54871332310475,-171.34760111522306,-171.14648890734134,-170.9453766994596,-170.7442644915779,-170.54315228369617,-170.34204007581448,-170.14092786793273,-169.939815660051,-169.73870345216932,-169.5375912442876,-169.33647903640588,-169.13536682852416,-168.93425462064243,-168.7331424127607,-168.532030204879,-168.3309179969973,-168.12980578911558,-167.92869358123383,-167.72758137335214,-167.52646916547042,-167.32535695758872,-167.12424474970697,-166.92313254182525,-166.72202033394356,-166.5209081260618,-166.31979591818012,-166.1186837102984,-165.9175715024167,-165.71645929453496,-165.51534708665324,-165.31423487877154,-165.1131226708898,-164.9120104630081,-164.71089825512638,-164.50978604724466,-164.30867383936294,-164.10756163148122,-163.90644942359953,-163.7053372157178,-163.50422500783606,-163.30311279995436,-163.10200059207264,-162.90088838419092,-162.6997761763092,-162.49866396842748,-162.2975517605458,-162.09643955266404,-161.89532734478234,-161.69421513690062,-161.4931029290189,-161.29199072113718,-161.09087851325546,-160.88976630537377,-160.68865409749202,-160.4875418896103,-160.2864296817286,-160.08531747384689,-159.88420526596516,-159.68309305808344,-159.48198085020172,-159.28086864232003,-159.07975643443828,-158.8786442265566,-158.67753201867487,-158.47641981079312,-158.27530760291143,-158.0741953950297,-157.873083187148,-157.67197097926626,-157.47085877138454,-157.26974656350285,-157.06863435562113,-156.8675221477394,-156.6664099398577,-156.465297731976,-156.26418552409424,-156.06307331621252,-155.86196110833083,-155.6608489004491,-155.4597366925674,-155.25862448468567,-155.05751227680395,-154.85640006892226,-154.6552878610405,-154.4541756531588,-154.2530634452771,-154.05195123739534,-153.85083902951365,-153.64972682163193,-153.44861461375024,-153.2475024058685,-153.04639019798677,-152.84527799010507,-152.64416578222335,-152.44305357434163,-152.2419413664599,-152.0408291585782,-151.83971695069647,-151.63860474281475,-151.43749253493306,-151.23638032705134,-151.0352681191696,-150.8341559112879,-150.63304370340617,-150.43193149552448,-150.23081928764273,-150.029707079761,-149.82859487187932,-149.62748266399757,-149.42637045611588,-149.22525824823416,-149.02414604035243,-148.8230338324707,-148.621921624589,-148.4208094167073,-148.21969720882558,-148.01858500094383,-147.81747279306214,-147.61636058518042,-147.4152483772987,-147.21413616941697,-147.01302396153528,-146.81191175365356,-146.6107995457718,-146.40968733789012,-146.2085751300084,-146.0074629221267,-145.80635071424496,-145.60523850636324,-145.40412629848154,-145.2030140905998,-145.0019018827181,-144.80078967483638,-144.59967746695466,-144.39856525907294,-144.19745305119122,-143.99634084330953,-143.7952286354278,-143.59411642754606,-143.39300421966436,-143.19189201178264,-142.99077980390092,-142.7896675960192,-142.58855538813748,-142.3874431802558,-142.18633097237404,-141.98521876449234,-141.78410655661062,-141.58299434872887,-141.38188214084718,-141.18076993296546,-140.97965772508377,-140.77854551720202,-140.5774333093203,-140.3763211014386,-140.17520889355688,-139.97409668567516,-139.77298447779344,-139.57187226991172,-139.37076006203,-139.16964785414828,-138.9685356462666,-138.76742343838487,-138.56631123050312,-138.36519902262143,-138.1640868147397,-137.962974606858,-137.76186239897626,-137.56075019109457,-137.35963798321285,-137.1585257753311,-136.9574135674494,-136.7563013595677,-136.555189151686,-136.35407694380424,-136.15296473592252,-135.95185252804083,-135.7507403201591,-135.5496281122774,-135.34851590439567,-135.14740369651395,-134.94629148863223,-134.7451792807505,-134.5440670728688,-134.3429548649871,-134.14184265710534,-133.94073044922365,-133.73961824134193,-133.53850603346024,-133.3373938255785,-133.13628161769677,-132.93516940981507,-132.73405720193333,-132.53294499405163,-132.3318327861699,-132.1307205782882,-131.92960837040647,-131.72849616252475,-131.52738395464306,-131.32627174676134,-131.1251595388796,-130.9240473309979,-130.72293512311617,-130.52182291523445,-130.32071070735273,-130.119598499471,-129.9184862915893,-129.7173740837076,-129.51626187582588,-129.31514966794415,-129.11403746006243,-128.9129252521807,-128.711813044299,-128.51070083641727,-128.30958862853558,-128.10847642065386,-127.90736421277214,-127.70625200489042,-127.5051397970087,-127.30402758912697,-127.10291538124527,-126.90180317336355,-126.70069096548184,-126.4995787576001,-126.29846654971838,-126.09735434183668,-125.89624213395496,-125.69512992607325,-125.49401771819153,-125.29290551030981,-125.09179330242809,-124.89068109454638,-124.68956888666466,-124.48845667878295,-124.28734447090122,-124.0862322630195,-123.88512005513779,-123.68400784725607,-123.48289563937436,-123.28178343149263,-123.08067122361092,-122.8795590157292,-122.6784468078475,-122.47733459996577,-122.27622239208404,-122.07511018420233,-121.87399797632061,-121.6728857684389,-121.47177356055718,-121.27066135267548,-121.06954914479374,-120.86843693691203,-120.66732472903031,-120.4662125211486,-120.26510031326688,-120.06398810538515,-119.86287589750344,-119.66176368962172,-119.46065148174002,-119.2595392738583,-119.05842706597657,-118.85731485809485,-118.65620265021315,-118.45509044233143,-118.25397823444972,-118.05286602656798,-117.85175381868626,-117.65064161080456,-117.44952940292283,-117.24841719504113,-117.0473049871594,-116.84619277927769,-116.64508057139597,-116.44396836351426,-116.24285615563254,-116.04174394775083,-115.8406317398691,-115.63951953198737,-115.43840732410567,-115.23729511622395,-115.03618290834224,-114.8350707004605,-114.6339584925788,-114.43284628469708,-114.23173407681537,-114.03062186893365,-113.82950966105193,-113.62839745317021,-113.42728524528849,-113.22617303740678,-113.02506082952506,-112.82394862164334,-112.62283641376162,-112.42172420587991,-112.22061199799819,-112.01949979011648,-111.81838758223476,-111.61727537435304,-111.41616316647132,-111.2150509585896,-111.0139387507079,-110.81282654282617,-110.61171433494445,-110.41060212706273,-110.20948991918102,-110.0083777112993,-109.8072655034176,-109.60615329553586,-109.40504108765415,-109.20392887977243,-109.00281667189071,-108.801704464009,-108.60059225612727,-108.39948004824556,-108.19836784036384,-107.99725563248214,-107.79614342460042,-107.5950312167187,-107.39391900883697,-107.19280680095525,-106.99169459307355,-106.79058238519183,-106.58947017731012,-106.38835796942838,-106.18724576154668,-105.98613355366496,-105.78502134578325,-105.58390913790153,-105.38279693001981,-105.18168472213809,-104.98057251425637,-104.77946030637466,-104.57834809849294,-104.37723589061122,-104.1761236827295,-103.97501147484779,-103.77389926696607,-103.57278705908436,-103.37167485120263,-103.17056264332092,-102.9694504354392,-102.76833822755748,-102.56722601967577,-102.36611381179404,-102.16500160391233,-101.96388939603061,-101.7627771881489,-101.56166498026718,-101.36055277238547,-101.15944056450374,-100.95832835662203,-100.75721614874031,-100.55610394085859,-100.35499173297688,-100.15387952509515,-99.95276731721344,-99.75165510933172,-99.55054290145002,-99.3494306935683,-99.14831848568657,-98.94720627780485,-98.74609406992315,-98.54498186204142,-98.3438696541597,-98.14275744627798,-97.94164523839626,-97.74053303051456,-97.53942082263283,-97.33830861475113,-97.1371964068694,-96.93608419898769,-96.73497199110597,-96.53385978322424,-96.33274757534254,-96.13163536746082,-95.9305231595791,-95.72941095169737,-95.52829874381567,-95.32718653593395,-95.12607432805224,-94.9249621201705,-94.7238499122888,-94.52273770440708,-94.32162549652536,-94.12051328864365,-93.91940108076192,-93.71828887288021,-93.51717666499849,-93.31606445711678,-93.11495224923506,-92.91384004135335,-92.71272783347162,-92.51161562558991,-92.31050341770819,-92.10939120982647,-91.90827900194476,-91.70716679406303,-91.50605458618132,-91.3049423782996,-91.1038301704179,-90.90271796253617,-90.70160575465445,-90.50049354677273,-90.29938133889102,-90.0982691310093,-89.89715692312758,-89.69604471524586,-89.49493250736414,-89.29382029948243,-89.09270809160071,-88.891595883719,-88.69048367583727,-88.48937146795556,-88.28825926007384,-88.08714705219214,-87.88603484431042,-87.6849226364287,-87.48381042854697,-87.28269822066525,-87.08158601278355,-86.88047380490183,-86.67936159702012,-86.47824938913838,-86.27713718125668,-86.07602497337496,-85.87491276549325,-85.67380055761153,-85.4726883497298,-85.27157614184809,-85.07046393396637,-84.86935172608466,-84.66823951820294,-84.46712731032122,-84.2660151024395,-84.06490289455779,-83.86379068667607,-83.66267847879436,-83.46156627091263,-83.2604540630309,-83.0593418551492,-82.85822964726748,-82.65711743938577,-82.45600523150405,-82.25489302362233,-82.05378081574061,-81.8526686078589,-81.65155639997718,-81.45044419209546,-81.24933198421374,-81.04821977633202,-80.84710756845031,-80.64599536056859,-80.44488315268688,-80.24377094480515,-80.04265873692344,-79.84154652904172,-79.64043432116001,-79.4393221132783,-79.23820990539656,-79.03709769751485,-78.83598548963313,-78.63487328175142,-78.4337610738697,-78.232648865988,-78.03153665810626,-77.83042445022456,-77.62931224234283,-77.42820003446113,-77.2270878265794,-77.02597561869767,-76.82486341081596,-76.62375120293424,-76.42263899505254,-76.22152678717082,-76.0204145792891,-75.81930237140737,-75.61819016352567,-75.41707795564395,-75.21596574776224,-75.0148535398805,-74.81374133199878,-74.61262912411708,-74.41151691623536,-74.21040470835365,-74.00929250047191,-73.80818029259021,-73.60706808470849,-73.40595587682678,-73.20484366894506,-73.00373146106335,-72.80261925318162,-72.6015070452999,-72.40039483741819,-72.19928262953647,-71.99817042165476,-71.79705821377303,-71.59594600589132,-71.3948337980096,-71.1937215901279,-70.99260938224617,-70.79149717436444,-70.59038496648273,-70.38927275860101,-70.1881605507193,-69.98704834283758,-69.78593613495586,-69.58482392707414,-69.38371171919243,-69.18259951131071,-68.981487303429,-68.78037509554729,-68.57926288766555,-68.37815067978384,-68.17703847190212,-67.97592626402042,-67.7748140561387,-67.57370184825697,-67.37258964037525,-67.17147743249355,-66.97036522461183,-66.76925301673012,-66.56814080884838,-66.36702860096666,-66.16591639308496,-65.96480418520323,-65.76369197732153,-65.5625797694398,-65.36146756155809,-65.16035535367637,-64.95924314579464,-64.75813093791294,-64.55701873003122,-64.3559065221495,-64.15479431426779,-63.95368210638607,-63.75256989850435,-63.551457690622634,-63.35034548274092,-63.14923327485919,-62.94812106697748,-62.747008859095764,-62.54589665121404,-62.34478444333233,-62.14367223545061,-61.942560027568895,-61.74144781968718,-61.54033561180546,-61.33922340392375,-61.13811119604202,-60.936998988160305,-60.73588678027859,-60.53477457239687,-60.333662364515156,-60.13255015663344,-59.93143794875172,-59.73032574087001,-59.52921353298829,-59.32810132510657,-59.12698911722486,-58.92587690934313,-58.72476470146142,-58.5236524935797,-58.32254028569798,-58.12142807781627,-57.92031586993455,-57.719203662052834,-57.51809145417112,-57.3169792462894,-57.115867038407686,-56.914754830525965,-56.713642622644244,-56.51253041476253,-56.31141820688081,-56.110305998999095,-55.90919379111738,-55.70808158323566,-55.50696937535395,-55.305857167472226,-55.10474495959051,-54.9036327517088,-54.70252054382708,-54.50140833594536,-54.300296128063636,-54.09918392018192,-53.89807171230021,-53.69695950441849,-53.49584729653677,-53.29473508865506,-53.09362288077334,-52.892510672891625,-52.691398465009904,-52.49028625712818,-52.28917404924647,-52.08806184136475,-51.886949633483034,-51.685837425601314,-51.4847252177196,-51.283613009837886,-51.082500801956165,-50.88138859407445,-50.68027638619274,-50.47916417831102,-50.278051970429296,-50.076939762547575,-49.87582755466586,-49.67471534678415,-49.473603138902426,-49.27249093102071,-49.07137872313899,-48.87026651525728,-48.669154307375564,-48.46804209949384,-48.26692989161212,-48.06581768373041,-47.86470547584869,-47.663593267966974,-47.46248106008525,-47.26136885220354,-47.060256644321825,-46.859144436440104,-46.65803222855839,-46.45692002067668,-46.255807812794956,-46.054695604913235,-45.853583397031514,-45.6524711891498,-45.451358981268086,-45.250246773386365,-45.04913456550465,-44.84802235762293,-44.64691014974122,-44.4457979418595,-44.24468573397778,-44.04357352609607,-43.84246131821435,-43.64134911033263,-43.44023690245091,-43.23912469456919,-43.03801248668748,-42.836900278805764,-42.63578807092404,-42.43467586304233,-42.23356365516061,-42.032451447278895,-41.83133923939718,-41.63022703151545,-41.42911482363374,-41.228002615752025,-41.026890407870305,-40.82577819998859,-40.62466599210687,-40.423553784225156,-40.22244157634344,-40.02132936846172,-39.82021716058001,-39.61910495269828,-39.417992744816566,-39.21688053693485,-39.01576832905313,-38.81465612117142,-38.6135439132897,-38.41243170540798,-38.21131949752627,-38.01020728964455,-37.809095081762834,-37.60798287388112,-37.40687066599939,-37.20575845811768,-37.00464625023596,-36.803534042354244,-36.60242183447253,-36.40130962659081,-36.200197418709095,-35.99908521082738,-35.79797300294566,-35.59686079506395,-35.39574858718222,-35.194636379300505,-34.99352417141879,-34.79241196353707,-34.591299755655356,-34.39018754777364,-34.18907533989192,-33.98796313201021,-33.78685092412849,-33.58573871624677,-33.38462650836506,-33.18351430048333,-32.98240209260162,-32.7812898847199,-32.58017767683818,-32.37906546895647,-32.17795326107475,-31.976841053193034,-31.775728845311317,-31.574616637429596,-31.373504429547882,-31.172392221666165,-30.971280013784448,-30.77016780590273,-30.56905559802101,-30.367943390139295,-30.166831182257578,-29.96571897437586,-29.764606766494143,-29.56349455861243,-29.36238235073071,-29.16127014284899,-28.960157934967274,-28.75904572708556,-28.557933519203843,-28.356821311322122,-28.155709103440405,-27.95459689555869,-27.753484687676973,-27.552372479795256,-27.35126027191354,-27.150148064031818,-26.949035856150104,-26.747923648268387,-26.54681144038667,-26.345699232504952,-26.144587024623235,-25.943474816741517,-25.7423626088598,-25.541250400978083,-25.34013819309637,-25.139025985214648,-24.93791377733293,-24.736801569451213,-24.535689361569496,-24.334577153687782,-24.13346494580606,-23.932352737924344,-23.731240530042626,-23.530128322160913,-23.329016114279195,-23.127903906397478,-22.926791698515757,-22.725679490634043,-22.524567282752326,-22.32345507487061,-22.12234286698889,-21.921230659107174,-21.720118451225456,-21.51900624334374,-21.31789403546202,-21.116781827580304,-20.91566961969859,-20.71455741181687,-20.513445203935152,-20.312332996053435,-20.11122078817172,-19.910108580290004,-19.708996372408283,-19.507884164526565,-19.30677195664485,-19.105659748763134,-18.904547540881417,-18.703435332999696,-18.50232312511798,-18.301210917236265,-18.100098709354548,-17.89898650147283,-17.69787429359111,-17.496762085709396,-17.295649877827678,-17.09453766994596,-16.893425462064243,-16.69231325418253,-16.49120104630081,-16.29008883841909,-16.088976630537374,-15.887864422655658,-15.686752214773941,-15.485640006892224,-15.284527799010505,-15.083415591128789,-14.882303383247072,-14.681191175365354,-14.480078967483637,-14.278966759601921,-14.077854551720202,-13.876742343838487,-13.67563013595677,-13.474517928075052,-13.273405720193335,-13.072293512311617,-12.8711813044299,-12.670069096548184,-12.468956888666465,-12.267844680784748,-12.06673247290303,-11.865620265021313,-11.664508057139598,-11.463395849257878,-11.262283641376163,-11.061171433494446,-10.860059225612728,-10.65894701773101,-10.457834809849295,-10.256722601967576,-10.05561039408586,-9.854498186204141,-9.653385978322426,-9.452273770440708,-9.25116156255899,-9.050049354677274,-8.848937146795555,-8.647824938913839,-8.446712731032122,-8.245600523150404,-8.044488315268687,-7.8433761073869706,-7.642263899505252,-7.441151691623536,-7.2400394837418185,-7.038927275860101,-6.837815067978385,-6.636702860096667,-6.43559065221495,-6.234478444333233,-6.033366236451515,-5.832254028569799,-5.6311418206880814,-5.430029612806364,-5.228917404924648,-5.02780519704293,-4.826692989161213,-4.625580781279495,-4.424468573397777,-4.223356365516061,-4.0222441576343435,-3.821131949752626,-3.6200197418709092,-3.4189075339891923,-3.217795326107475,-3.0166831182257576,-2.8155709103440407,-2.614458702462324,-2.4133464945806065,-2.2122342866988887,-2.0111220788171718,-1.8100098709354546,-1.6088976630537375,-1.4077854551720204,-1.2066732472903032,-1.0055610394085859,-0.8044488315268687,-0.6033366236451516,-0.4022244157634344,-0.2011122078817172,0.0],"cosine":[1.0,0.9798450101169912,0.9201924877023455,0.823447024727524,0.6935084288476034,0.5356145222332821,0.35613000506535863,0.16228989459918333,-0.03809211823462575,-0.23693863855304062,-0.42623416714570045,-0.5983482050849356,-0.7463428389842744,-0.8642524081457116,-0.9473239802219983,-0.9922089418236991,-0.9970979810568096,-0.9617940208488098,-0.8877201631212776,-0.7778623235804831,-0.636648869515334,-0.46977211240204325,-0.28395885094330175,-0.08669921394844407,0.11405526660629492,0.3102121816720359,0.49386444997129597,0.6576090522849782,0.794845447007279,0.9000416378435296,0.9689571684697736,0.998814055240826,0.9884087676551193,0.9381607426446927,0.8500954770809983,0.7277628800369186,0.576094176024161,0.40120312743255615,0.21013958889208698,0.010605327775341206,-0.18935643388955206,-0.38168524153568095,-0.5586283248185238,-0.7130531116312944,-0.8387347419419643,-0.9306069917760296,-0.9849664926014384,-0.9996220140398904,-0.9739827923187153,-0.9090823439467863,-0.8075368046846371,-0.6734394731653932,-0.5121958101092232,-0.3303055443112106,-0.13510066870551146,0.06555011212208062,0.2635585692563723,0.45094298579678227,0.6201498997041913,0.764358583702533,0.8777559886578531,0.9557710674708856,0.9952590338932336,0.9946281287973999,0.9539037839550325,0.8747275968826671,0.760291158079303,0.6152073980774347,0.4453246403070667,0.2574908552967069,0.059277619119292066,-0.141325096685176,-0.3362310007019494,-0.5175834398838209,-0.6780721010766493,-0.8112276895952517,-0.9116827063605631,-0.9753878116794386,-0.9997750540455569,-0.9838613842125172,-0.928288281889275,-0.835295897706077,-0.7086327527878001,-0.5534046359429614,-0.37586878942092883,-0.18318167960255402,0.01688948001399722,0.2162798250329259,0.4069519346809822,0.5812198200763116,0.7320587462848411,0.8533883992430092,0.9403179830951482,0.9893433680751111,0.9984883419063352,0.967384270878694,0.8972849594659875,0.7910161094928664,0.6528614161514177,0.4883898923350687,0.30423138184057735,0.10780931050000778,-0.09295855196540406,-0.28997925708212213,-0.4753109042130855,-0.6414827784128538,-0.7817964947944593,-0.8905960102897665,-0.9634956186306389,-0.997556738079824,-0.9914063656015843,-0.945292422586027,-0.861073761143084,-0.7421452338113492,-0.5933008471212997,-0.42054051528874015,-0.23082820379390398,-0.03181121207481541,0.16848808895945314,0.36199563853683964,0.5409111512495197,0.6980225463999377,0.8269966668288545,0.9226345683513906,0.9810810890922014,0.9999802509828953,0.9785702291900641,0.9177140612589666,0.8198648580874767,0.6889669190756672,0.5302967374964708,0.3502503051587067,0.15608529010716668,-0.0443715198305843,-0.24303971470166524,-0.43191098359078645,-0.6033719294707384,-0.7505109650821717,-0.8673969188771251,-0.9493181204229714,-0.9929723277430657,-0.9965998406236247,-0.9600544340938283,-0.8848092527514462,-0.7738974283338792,-0.6317898142392103,-0.4642147655160901,-0.27792722898802363,-0.08043645148302807,0.12029671775369759,0.3161807287318549,0.49931950093252886,0.662330714153733,0.798643389689065,0.902762766345643,0.9704917941573938,0.9991003173835911,0.9874351270318191,0.935966446689112,0.8467689778187251,0.723438268586063,0.5709457773845893,0.39543847344933525,0.20399105265052728,0.004320756647034932,-0.19552370896936175,-0.3874866178336477,-0.56382994897335,-0.7174453062785483,-0.842140457804349,-0.9328889445159223,-0.986032696750129,-0.9994294909297184,-0.972539302552356,-0.9064460745674672,-0.8038140236577891,-0.6687802457188345,-0.5067879496070498,-0.3243670415008422,-0.12887090451507477,0.07182001602412208,0.2696158731707019,0.45654351992496245,0.6250679066289452,0.768395818664235,0.8807497107968866,0.9576005999084336,0.9958506282136933,0.9939579378457158,0.9519988231149071,0.871664655087076,0.7561937024498687,0.6102405969677824,0.4396887053695301,0.25141297095449106,0.053002784767365245,-0.14754394260138742,-0.342143176629168,-0.5229506261299501,-0.6826779464728143,-0.8148865326066616,-0.9142470590995904,-0.9767543051390191,-0.9998886049019374,-0.9827174152329964,-0.9259329064403141,-0.8318240609242815,-0.7041844043435579,-0.5481590886721142,-0.37003749122793206,-0.17699968999959367,0.023172965151331167,0.22241151854577562,0.41268466812801696,0.5863225070881666,0.736325697651162,0.8566476142408003,0.9424380828337184,0.9902388913769128,0.9981231902451545,0.9657731635106631,0.8944928400964485,0.7871555283971391,0.6480879932753555,0.48289604425812166,0.29823856546775906,0.10155909613794874,-0.09921421830223605,-0.2959882096102663,-0.48083092217781753,-0.6462913500015114,-0.7856997865837003,-0.8934366806665458,-0.9651591602295458,-0.9979760935726675,-0.9905646307769181,-0.9432235277575932,-0.8578611034196139,-0.7379183153606327,-0.5882300549405582,-0.41483025290807396,-0.22470865177442761,-0.02552904943472496,0.17467962837135953,0.3678469738921476,0.546186415338357,0.7025090934338913,0.8305136441875758,0.9250402067486679,0.9822784172929802,0.9999210047116289,0.9772567966627245,0.9151993869141561,0.8162503083972179,0.6843981964647925,0.524958007080981,0.34435677105362605,0.14987452055290945,-0.05064916883884822,-0.24913119125932442,-0.4375707404011701,-0.608371821851339,-0.7546494474723705,-0.8705071691354199,-0.9512747644243487,-0.9936964932074765,-0.996062336455851,-0.9582769270759974,-0.8818633941554275,-0.7699019656601043,-0.6269058045073033,-0.4586390830594482,-0.2718846294536563,-0.07417051193578636,0.12653341741733998,0.3221367872745422,0.5047548297550327,0.667026215261197,0.8024097875268552,0.9054482374931769,0.9719880873269837,0.999347117027842,0.9864224846620924,0.9337351818988407,0.8434090328464585,0.7190850827455697,0.565774827509171,0.3896582004237625,0.1978344591635028,-0.001963985142551515,-0.20168326124724886,-0.39327268917203223,-0.5690093029535637,-0.7218091632465516,-0.8455129107740607,-0.9351340499763712,-0.9870599545456501,-0.9991974923193244,-0.9710573993953819,-0.9037740023501335,-0.800059493557137,-0.664094602767167,-0.5013600719770077,-0.3184157268300801,-0.12263605017724302,0.07808708317671374,0.2756625277879401,0.4621260214816755,0.6299612246000519,0.7724027035016053,0.8837086450537133,0.9593923090046944,0.9964028883919823,0.9932484875093872,0.9500562601926995,0.8685672842510644,0.7520663786557802,0.605249692554245,0.4340354035924675,0.24532515629414783,0.046725856909519026,-0.15375696082179408,-0.34804183857338467,-0.528297156854359,-0.6872568274321786,-0.8185131892019964,-0.9167753008770017,-0.9780822187236164,-0.999962662123993,-0.981534630847369,-0.923540958461697,-0.8283193687272719,-0.6997082419997037,-0.5428918901950207,-0.36419157728134227,-0.17081070925659894,0.029455535002094843,0.22853442724085735,0.41840110134170533,0.5914020355134866,0.7405635656000419,0.8598729933418189,0.944520958120653,0.9910953021890759,0.9977186146800668,0.9641239100011226,0.8916653900180601,0.7832638562054234,0.6432889721976516,0.47738312273679834,0.2922339692578795,0.09530487039112305,-0.10546596587247951,-0.30198547118587343,-0.48633194826623666,-0.6510743943523176,-0.7895720447759625,-0.8962420620507989,-0.9667845799388959,-0.9983560309716273,-0.9896837705965942,-0.9411173774540305,-0.8546145618688753,-0.7336622505871297,-0.583136028828984,-0.4091036055479906,-0.21858022420504702,-0.019245878447252947,0.1808642682813289,0.37368378001509706,0.5514401061375724,0.706967892739559,0.8339978178899038,0.9274093078762143,0.98343694742723,0.9998222635263122,0.9759047644130227,0.9126485639926983,0.8126035184243549,0.6798024414704578,0.5195985418561692,0.3384496355330223,0.14365783124982465,-0.0569248173042816,-0.25521282762477865,-0.44321321402748054,-0.6133476847409083,-0.7587581226928022,-0.8735830360716572,-0.9531938349425729,-0.9943814096138174,-0.9954854897838374,-0.9564615700033193,-0.878882703689006,-0.7658760933722241,-0.621997033228395,-0.4530452852606141,-0.265831291010894,-0.06790164279935366,0.13276511925961976,0.3280801220474932,0.5101702217541015,0.6716953701443922,0.8061444917553409,0.9080979452152029,0.9734459888778222,0.9995544444254811,0.9853708805433219,0.9314670364044542,0.8400157748753605,0.7147034944579574,0.5605815306401669,0.3838625366651546,0.19167005160435416,-0.008248649358585615,-0.20783484743267233,-0.39904322701218153,-0.5741661821849572,-0.7261445101714546,-0.8488519676458983,-0.9373422194801242,-0.9880482254133015,-0.9989260273721918,-0.9695371413799734,-0.9010662328363378,-0.7962733626792391,-0.659382729384246,-0.49591239160978967,-0.3124518353638315,-0.11639635195650612,0.08435106604302281,0.2816982942772256,0.467690269968882,0.6348296603413354,0.7763790799506414,0.886632674556247,0.9611461239907144,0.9969157926148894,0.9924998058103472,0.9480761719157901,0.8654356067147467,0.7479093497181399,0.6002348819676461,0.4283649582701859,0.2392276517722786,0.040447083472064556,-0.15996390594450233,-0.35392675354915515,-0.5336228208795938,-0.6918085630977795,-0.8221075161354485,-0.919267331832217,-0.9793714999832794,-0.9999972227866138,-0.9803130777733362,-0.921112532430665,-0.8247819595434358,-0.6952044425557707,-0.5376032485553814,-0.35833127848348,-0.16461498182647863,0.03573694141724298,0.23464830927531397,0.4241010085344834,0.5964582047209767,0.7447721827437968,0.8630644091499885,0.9465665266865092,0.9919125666851046,0.9972746311910058,0.9624365754924328,0.8888027209096446,0.7793412466310494,0.6384645424700309,0.47185134552056235,0.28621783038068516,0.08904688028937947,-0.11171354774450805,-0.3079708049292258,-0.49181376519872616,-0.6558317225444231,-0.7934131164245195,-0.8990120436353746,-0.9683718135578928,-0.998696535269923,-0.9887638198528431,-0.9389740548640982,-0.8513342647229949,-0.7293772075968008,-0.5780189699905017,-0.40336079939970026,-0.21244316314660447,-0.012961947285529293,0.18704176440824252,0.37950582636342534,0.5566720161366114,0.7113987682031346,0.8374490503178906,0.9297417781591926,0.9845566337353078,0.9996840313270249,0.9745141858435767,0.9100616932470392,0.8089246322099228,0.6751798356161175,0.5142185535102787,0.3325291319172434,0.13743546774480675,-0.0631982173514473,-0.2612843835851267,-0.44883818160320305,-0.6182993216026438,-0.7628368284589473,-0.8766243981953072,-0.9550752561780618,-0.9950270499092118,-0.9948693233918938,-0.9546084345788296,-0.875867299083435,-0.7618199704842079,-0.6170636942894788,-0.44743359306360453,-0.2597674527545956,-0.06163009168139746,0.13899157714067725,0.33401049830045265,0.5155654630321036,0.6763379943809631,0.8098473548611815,0.9107117848535238,0.9748654412256914,0.9997222913874738,0.984280356211783,0.9291620997931163,0.8365893379324503,0.7102936767872717,0.555366091902877,0.3780517110910466,0.1854980734547272,-0.014532987769185171,-0.21397822455018212,-0.40479800342919553,-0.5793003829807515,-0.7304511758158105,-0.8521574965337391,-0.9395133658088266,-0.9889974703183285,-0.9986151068106625,-0.9679785885534148,-0.898322872977603,-0.7924557805688225,-0.6546448116798089,-0.4904451236779631,-0.3064756026644087,-0.11015205630856482,0.09061171720815296,0.28772293423753825,0.47323604560980614,0.6396730215588896,0.7803247909521461,0.8895216838111221,0.9628619755942184,0.9973893206237162,0.9917119223200118,0.946058636493845,0.8622697461731716,0.7437227798314194,0.5951963632831457,0.4226775933741286,0.2331206982285461,0.03416671245443701,-0.16616453280738136,-0.3597976891139065,-0.5389274078523948,-0.696332973685089,-0.8256693714380394,-0.9217230535349125,-0.980622097993955,-0.9999922855247202,-0.979052804259822,-0.9186477242653603,-0.8212119730936754,-0.6906731839029012,-0.5322933726442398,-0.352456826304522,-0.15841275242817482,0.042016936293229265,0.24075292316293412,0.42978416457122093,0.6014908150018925,0.7489513828503999,0.8662217356104861,0.948574707735276,0.9926906525846558,0.9967912573144461,0.9607112266309601,0.8859049458410064,0.7753878546095261,0.6336148946479825,0.4663009311036388,0.2801903864618352,0.0827853730110253,-0.11795671715089309,-0.3139439744310813,-0.49727615645439205,-0.6605631466727162,-0.7972228498145933,-0.9017465160114964,-0.9699207983938418,-0.9989975930183093,-0.9878048148818932,-0.9367936446448655,-0.8480203415472032,-0.7250633556406523,-0.5728790805390617,-0.39760206129265235,-0.20629771100072555,-0.00667750415236834,0.193211872753147,0.38531288297753596,0.5618819386854078,0.7158015448139873,0.8408672051546398,0.9320375254696115,0.985637431991765,0.9995063135736721,0.9730851158794303,0.9074388768534879,0.8052137950626952,0.6705305614855327,0.5088182545424679,0.32659549405422217,0.13120767580886963,-0.06946912119326211,-0.2673456193259536,-0.45444542095297236,-0.6232265368566231,-0.7668854036700191,-0.8796311353784889,-0.95691895381841,-0.99563338859215,-0.9942138616173815,-0.9527175939977001,-0.8728172994412666,-0.7577337572049365,-0.6121059825476566,-0.44180422811922987,-0.25369335419467165,-0.055356106295858194,0.1452125451276661,0.33992768179532407,0.5209403404879076,0.680953904596211,0.813518230588562,0.9132896531666581,0.9762463883050139,0.9998506512842052,0.9831509547410826,0.9268204631054164,0.8331298573551887,0.7058558039126419,0.5501287172965964,0.3722259532175213,0.17931876849596085,-0.020816752155450324,-0.2201131499485695,-0.41053679112092656,-0.5844117025502016,-0.7347289900745578,-0.8554293668755701,-0.9416474032065048,-0.9899076517674578,-0.9982647429154826,-0.966381802475452,-0.89554403113135,-0.7886068980128058,-0.6498810367920335,-0.4849584841278639,-0.30048726478114773,-0.10390340987104818,0.0968687893884638,0.2937362097077694,0.47876312935731163,0.6444911169495557,0.7842396806582932,0.8923755587080479,0.9645397960425331,0.9978234537150448,0.9908848681582431,0.9440037336155496,0.8590698276717218,0.7395068343568991,0.5901343355122356,0.4169735335439255,0.22700453687561092,0.027884991918832137,-0.17235859649785926,-0.36565441337733073,-0.5442107082520996,-0.700829880488702,-0.8291986144235519,-0.9241423689889081,-0.981833963359435,-0.999947850533323,-0.9777538600851527,-0.9161466313208165,-0.8176095503852446,-0.6861146450170683,-0.5269624721911597,-0.34656845277378145,-0.15220426603755646,0.0482952715829421,0.2468480277832487,0.43545034497822077,0.6064996675780209,0.753101000849737,0.8693448480152954,0.9505454219477868,0.993429529154838,0.9962685121427056,0.9589479315645608,0.8829721792684593,0.7714038362919963,0.6287402202832375,0.460732098716788,0.2741518755734064,0.07652059587294935,-0.12419522749882893,-0.319904743763095,-0.5027189062792218,-0.6652684798553298,-0.8010010944694101,-0.9044453711728808,-0.9714314732649159,-0.9992591923255816,-0.9868067935625902,-0.9345762329181301,-0.8446729232348902,-0.7207208651072788,-0.5677165634901945,-0.39182761868589,-0.2001441105006889,-0.0003927972708062588,0.19937434960889192,0.3911047204901089,0.5670696680020743,0.7201760486708562,0.8442521473898154,0.9342964591300059,0.9866792995071972,0.9992891172857538,0.971617610966114,0.9047802184080876,0.8014711535533766,0.6658548027159771,0.503397858253833,0.32064895631131146,0.12497470142777756,-0.07573728114146491,-0.2733962954403627,-0.4600347106019587,-0.6281291358875298,-0.7709036884151088,-0.8826031288610476,-0.9587248550411849,-0.9962004017134459,-0.9935191303497519,-0.9507891229444853,-0.8697328252316017,-0.7536176149318018,-0.6071240938227057,-0.4361574127763393,-0.24760923524596504,-0.04907993445305226,0.15142777750457992,0.34583143881509804,0.5262946418243221,0.6855429184708403,0.8171569739449742,0.9158314483337364,0.9775887755711186,0.9999395190457095,0.9819827207403392,0.9244422188313594,0.8296374697864465,0.7013900511212414,0.5448696136873253,0.3663854931505622,0.17313238079834212,-0.027099694320699398,-0.22623938131011934,-0.41625936341654124,-0.589499939006324,-0.7389777839825208,-0.8586674494389468,-0.9437442473827992,-0.9907787338103091,-0.99787494952533,-0.964746846215996,-0.8927298170563708,-0.7847268670346234,-0.6450915928809209,-0.4794526896708689,-0.2944870582415144,-0.09765065945320717,0.10312203544201759,0.2997378831750322,0.4842713029022556,0.6492837562081237,0.7881235944387767,0.8951941865246285,0.9661795190649572,0.9982181747414559,0.9900186759920386,0.9419115444454152,0.8558359776008307,0.7352616798161375,0.5850489985952447,0.4112530040789332,0.22087940928949115,0.02160216998086253,-0.17854585236259646,-0.3714966950101206,-0.5494725133985372,-0.7052991058898829,-0.8326951056938888,-0.9265251826359994,-0.9830070482134425,-0.9998639195675187,-0.9764162965550698,-0.9136093523852421,-0.8139748337068231,-0.6815290059515152,-0.5216107577564223,-0.3406663904704375,-0.14598976787751894,0.05457169930447933,0.25293338239171753,0.4410993259525984,0.6114845646095315,0.7572208728399044,0.872433623007614,0.9524785914847043,0.9941291672114931,0.9957064163231913,0.9571467599399874,0.8800045370305158,0.7673893490392786,0.6238407119157632,0.45514506831764034,0.26810253622492686,0.07025279632187321,-0.13042883237953315,-0.32585287748659597,-0.5081417996955924,-0.6699475362406824,-0.8047477011555277,-0.9071085025201024,-0.9729037785024534,-0.9994813228590969,-0.9857697953147974,-0.9323219072674158,-0.8412921420026201,-0.7163499075164409,-0.5625316227529884,-0.3860376996584407,-0.19398260470184017,0.005891925125362177,0.20552895156986684,0.39688111013526195,0.572234999181595,0.7245221069895181,0.8476037433246704,0.9365184899168549,0.9876821951299413,0.9990324510420961,0.9701117290671618,0.902085822922766,0.7976968555090849,0.6611527439904759,0.49795757873927343,0.31468975356495527,0.11873679079176609,-0.08200244961583288,-0.2794361729385419,-0.46560582978430903,-0.6330069250523395,-0.7748915239798697,-0.8855402612549754,-0.9604928885168385,-0.9967280668772052,-0.9927851570295108,-0.9488230975900026,-0.8666139982850529,-0.7494717062443319,-0.6021182248896179,-0.4304933700729357,-0.24151533621932456,-0.04280182404931632,0.15763702878195765,0.35172153617276414,0.5316281555570661,0.6901048547478241,0.8207634412072755,0.918337069958985,0.9788925500022987,0.9999888911618817,0.9807757003524994,0.9220274609069186,0.8261123131684788,0.6968965948016884,0.5395889887995083,0.360530561576861,0.16693915471191184,-0.033381566101408806,-0.23235667666084678,-0.4219654942854762,-0.5945648913735058,-0.7431973897207684,-0.8618716163260901,-0.945803815516526,-0.9916106820408228,-0.9974457420362995,-0.9630737843525746,-0.8898803419084357,-0.780815840887802,-0.6402766691200048,-0.47392795777533525,-0.2884752200420889,-0.09139405202605225,0.10937120837788779,0.3057277175851317,0.489760348682612,0.6540507500345907,0.7919763788866354,0.897977455930656,0.9677810798956852,0.9985734681122469,0.9891133800343176,0.9397821516209142,0.8525683236911596,0.7309874838843939,0.5799405533929861,0.40551623092871736,0.21474555740101794,0.015318494799530362,-0.18472605601726091,-0.3773243032536372,-0.5547126154608437,-0.7097404733627707,-0.8361587071443919,-0.9288714003597736,-0.9841413062214119,-0.999740495942415,-0.9750401665007032,-0.9110359876762592,-0.8103079666225079,-0.6769164478299706,-0.5162384407221313,-0.3347508725143489,-0.13976950340874797,0.06084597155105704,0.259008746628796,0.4467308843707099,0.616445309202791,0.7613108360941325,0.8754879385867896,0.9543741399896319,0.9947895391203053,0.995104992057583,0.9553077828999468,0.877002136343318,0.7633445514159468,0.6189165630664194,0.4495400605830142,0.26204260735330004,0.06398222192344469,-0.13665728557752876,-0.3317881406621021,-0.513544622509873,-0.6746001310153303,-0.8084625218894153,-0.9097358048645646,-0.9743376559532385,-0.9996639758451336,-0.984693861097907,-0.9300307567341145,-0.8378781313846075,-0.7119506555125291,-0.5573244631224087,-0.3802325329006192,-0.187813436971435,0.012176414801956777,0.2116754355411703,0.40264182375664526,0.5773777282036353,0.728839548109213,0.8509218605779368,0.938703530064352,0.9886460792475359,0.9987363249805057,0.96856752966192,0.8993557968207025,0.7938910500071058,0.65642457103136,0.49249763087933246,0.30871812119183945,0.11249419028581728,-0.08826437915464069,-0.28546501325720314,-0.4711585584515656,-0.6378597116880564,-0.7788487528528519,-0.8884424165493707,-0.9622229844115239,-0.9972163632416718,-0.992011970647188,-0.9468195955882813,-0.863460941789154,-0.7452961948977701,-0.5970885734702854,-0.42481232372777655,-0.23541189781145144,-0.03652202305755626,0.16384005370657995,0.3575977412211625,0.5369406710226388,0.6946395332396473,0.8243374899271628,0.920806419075229,0.980157660102052,0.9999987656826221,0.9795299412524957,0.9195762847102404,0.8225545267380403,0.6923756124365938,0.534287051207353,0.35466138975470524,0.1607393348571499,-0.03966211937599198,-0.23846479437961074,-0.42765495834688283,-0.5996063595963603,-0.7473876406230162,-0.8650417409787051,-0.9478260262588288,-0.9924034635986952,-0.9969771374012212,-0.961362682967903,-0.8869957182363651,-0.7768739740501147,-0.6354364556893086,-0.468384506657013,-0.2824519876385538,-0.08513383471361705,0.11561606136614093,0.31170547635149126,0.4952300498920613,0.6587919101421582,0.7957978818243182,0.9007252569923596,0.9693444152762406,0.9988893197940409,0.9881690160424754,0.9376156392488393,0.8492669950087927,0.7266844153839276,0.5748092016787252,0.3997634406845399,0.20860322348517227,0.009034214567993911,-0.19089896335573361,-0.3831370079291265,-0.5599308074652886,-0.7141538074821621,-0.8395892819696141,-0.9311809294891579,-0.9852366925824421,-0.999577584532999,-0.9736255242764852,-0.9084266388367168,-0.8066090939664733,-0.672277152839413,-0.510845733284151,-0.32882213255684617,-0.13354371831946266,0.06711784050136894,0.26507388052953973,0.45234479779716974,0.6213817054182286,0.7653707290668398,0.8785076741134175,0.9562319925921301,0.9954106187978582,0.9944642631009447,0.9534310730804515,0.8739650957957376,0.759269603183337,0.6139679682295839,0.44391729689959497,0.25597232831380373,0.05770912035302585,-0.14288034108149644,-0.3377102988581707,-0.518927161320988,-0.679226080410926,-0.8121454099429566,-0.9123271744331328,-0.9757330489819578,-0.9998071440692511,-0.9835790334092056,-0.9277028718141258,-0.8344310262274371,-0.7075232828572707,-0.5520952902712131,-0.37441234770541615,-0.1816368509793596,0.01846042353421667,0.21781355874887956,0.4083866338174999,0.5824976519402298,0.7331282014995811,0.8542063680905042,0.9408514932677063,0.9895709137884717,0.9984007507973967,0.9669850737432855,0.8965902479325598,0.7900538873692754,0.6516704705920818,0.48701823033121844,0.3027342950599197,0.1062471464803792,-0.0945228224240944,-0.29148257826900525,-0.47669267728186276,-0.6426873041189727,-0.7827752187310786,-0.8913094801148561,-0.9639150743898542,-0.9976652715201018,-0.991199601742113,-0.9447786960738196,-0.8602737802833801,-0.7410912458165301,-0.592035338226144,-0.4191144981309224,-0.22929916109649567,-0.030240779517793668,0.17003660727126818,0.36345982186163917,0.5422319783872191,0.6991467748354236,0.8278789789366083,0.9232393981480761,0.9813840559010163,0.9999691422179066,0.9782454926453636,0.9170887870580552,0.81896425102083,0.6878272825958738,0.5289640103269716,0.34877820950484434,0.15453316611464102,-0.04594110607471363,-0.24456349320776866,-0.4333275308782175,-0.6046241445467117,-0.7515483711826673,-0.868177698182985,-0.9498107997362498,-0.9931570471706266,-0.996469154129064,-0.9596136096470922,-0.8840760599770725,-0.7729014222177676,-0.6305711437676598,-0.462822555271323,-0.2764175989367485,-0.07887025478206598,0.12185634774702127,0.31767092336417463,0.5006801904881572,0.6635070492644075,0.7995879523100413,0.903437481177001,0.9708694634578924,0.9991657173113153,0.9871856213170151,0.9354120929021705,0.8459321219495448,0.7223526442776407,0.5696551461310453,0.3939948605702023,0.20245265015195793,0.002749577502627728,-0.19706433056042125,-0.3889345794458646,-0.5651268833036394,-0.7185389339301141,-0.842986694668718,-0.9334536788023343,-0.9862931640308644,-0.9993751917739573,-0.9721724257579758,-0.9057814089306222,-0.8028783618368518,-0.6676113042228746,-0.5054328484440191,-0.3228804047713955,-0.12731265851559742,0.0733870584289207,0.2711285445330824,0.4579408444932302,0.6262935582777193,0.7694003914004541,0.8814927103139341,0.9580520759106731,0.9959923817127377,0.9937842547608342,0.9515167046077471,0.8708935353448499,0.7551646652939669,0.608995122864936,0.43827699935569836,0.2498919388705271,0.0514337393856836,-0.1490977530929767,-0.3436191181613023,-0.5242892035293333,-0.683825201711562,-0.8157962198493791,-0.9148825088718013,-0.9770899024733295,-0.9999108218765898,-0.9824253562821953,-0.9253383444544122,-0.8309509626849844,-0.7030679644231016,-0.5468443107413558,-0.36857737395838996,-0.1754530906888423,0.024743703116149946,0.22394307874930494,0.4141153134091215,0.5875945681647343,0.737387897767089,0.8574571361306633,0.942962294686632,0.9904566622236183,0.9980257417472728,0.9653644238151285,0.8937892854921826,0.7861855191559044,0.6468906304501765,0.48151959352028345,0.29673851151845754,0.09999590612162777,-0.10077753222764813,-0.2974886302920681,-0.48220796768868524,-0.6474895116647651,-0.7866707665269377,-0.8941413387079018,-0.9655690916176314,-0.9980747739815234,-0.9903480824012603,-0.9427004796581004,-0.8570526396545194,-0.7368570250879866,-0.5869587187497769,-0.41340011833518003,-0.22317736751543085,-0.023958341526800837,0.17622644472411347,0.36930754655385006,0.5475018686546632,0.7036264015079705,0.8313877683537597,0.9256359110795478,0.9825716889589685,0.9999000219378023,0.976922405264274,0.914565066201632,0.815341627825617,0.6832517849296158,0.5236200764079181,0.34288125320122625,0.14832089361596296,-0.05221827819005593,-0.2506525322587056,-0.43898298782381107,-0.6096180480320083,-0.7556794170590437,-0.8712793640748426,-0.9517580575542469,-0.9938714029915199,-0.9959218122841587,-0.9578266334751001,-0.8811214824513195,-0.7688983422985338,-0.6256809255254908,-0.4572423233046127,-0.27037229228316445,-0.07260355963038008,0.12809182104182262,0.3236238229998597,0.5061105552008625,0.6681959811623569,0.8033464406435387,0.9061140213571545,0.9723561642042642,0.9994026497469016,0.9861632347001498,0.9331715996166159,0.8425638362343445,0.7179923416618992,0.5644785903249161,0.38821071843359267,0.19629408033715337,-0.0035351681657583996,-0.20322191411143903,-0.3947167888112787,-0.5703006377408333,-0.7228956795025937,-0.8463508110505786,-0.9356895585302131,-0.9873106788381537,-0.9991333256594078,-0.9706809283397627,-0.9031004024394994,-0.7991159175901605,-0.6629190862722038,-0.5000000000000475,-0.3169259238447791,-0.12107657011210357,0.07965337771204144,0.27717249949220724,0.4635188034260484,0.6311806737728202,0.7733996639310153,0.8844429292851692,0.9598343180555797,0.9965348048864431,0.9930649938962327,0.9495647530957279,0.8677875763113662,0.7510298998847384,0.6039982233900921,0.43261939073188815,0.24380167918690043,0.0451563268868571,-0.1553092760361923,-0.3495143651847499,-0.529630537344782,-0.6883973132609879,-0.8194148074087361,-0.9174017072497908,-0.978408162834308,-0.9999750051720808,-0.9812328752848548,-0.9229372680491145,-0.8274380782130443,-0.6985848761865842,-0.5415717319361101,-0.3627278421296385,-0.16926240034614687,0.03102600537033742,0.23006375343812346,0.4198276362600307,0.5926682755589758,0.7416184686621855,0.8606740362995269,0.9450358509485085,0.9913032895676214,0.997611312642252,0.9637056438899357,0.8909530201320313,0.7822860981601436,0.6420852394001064,0.4760019376318713,0.2907310073890074,0.09374071612115562,-0.10702826151689959,-0.3034829320989262,-0.4877042118286042,-0.6522661446477619,-0.7905352423739493,-0.8969378804758152,-0.9671849707643664,-0.9984448544513715,-0.9894574462579536,-0.9405850284265869,-0.8537976471310615,-0.732593699955459,-0.5818589155579491,-0.40766941004752494,-0.2170467588670692,-0.01767495722818748,0.1824093215788165,0.37514068432384773,0.552750133674474,0.7080782363208401,0.834863719588522,0.9279958632121384,0.9837205123667373,0.9997914075724266,0.9755607313686253,0.9120052218228456,0.8116868002388961,0.6786493001608999,0.5182554605252706,0.33697075376224617,0.14210276273333008,-0.05849338778605994,-0.2567316710274587,-0.4446211058043344,-0.6145878728026987,-0.759780615083954,-0.8743466161445723,-0.9536677227999623,-0.9945465028457384,-0.9953351334854518,-0.9560018250339727,-0.8781321023591103,-0.7648648924061996,-0.6207659941167216,-0.45164403116497465,-0.2643163064555306,-0.06633399678092554,0.13432223496160725,0.32956394013071305,0.5115209295415449,0.6728585206326692,0.8070731983717734,0.9087547718147425,0.9738044587935988,0.9996001077424397,0.9851018965740863,0.9308942478873369,0.839162270903978,0.7136036797600849,0.5592797387241161,0.38241124273653654,0.19012775729204862,-0.009819774201837696,-0.2093714707963412,-0.4004834076394655,-0.5754518664241152,-0.7272238721167947,-0.8496814982390906,-0.9378884803598198,-0.9882891968144754,-0.9988519957425728,-0.969151090933036,-0.9003837252577868,-0.7953219098357216,-0.6582006843207426,-0.49454740253877455,-0.3109589249671809,-0.11483569942210152,0.08591655084315444,0.28320550668235595,0.4690784542775139,0.6360428588720763,0.7773683886952291,0.8873582144993014,0.9615786486317242,0.9970378668943535,0.9923065089165306,0.9475752956425891,0.8646473413745357,0.7468654702709069,0.598977467172713,0.4269446944925834,0.2377017898161538,0.03887713080188646,-0.16151466456831,-0.355395807077898,-0.5349509517951487,-0.6929422344698261,-0.8230010296939986,-0.9198846700637637,-0.9796877779962119,-0.999999691420608,-0.9800016375178281,-0.9204997374360305,-0.8238925115635528,-0.6940741952206483,-0.536277762112213,-0.35686398326411695,-0.16306502447137228,0.037307082158360205,0.2361753410610492,0.4255233767444462,0.5977185737213028,0.7458197470856368,0.8638569415358905,0.9470720801520717,0.9921107623803744,0.9971574798514843,0.9620087994862531,0.8880815638789861,0.7783557784012106,0.6372544872453293,0.4704654806027426,0.28471201995644496,0.0874818235466147,-0.11327476340027282,-0.30946524692655036,-0.49318119261088045,-0.6570170144001346,-0.7943684936329488,-0.899698994960667,-0.9687626480060397,-0.9987754983122028,-0.9885277284906108,-0.9384324259354049,-0.8505089312790183,-0.7283014388119092,-0.5767361300827234,-0.4019225996196178,-0.21090757729828974,-0.011390874803679379,0.1885849936238958,0.38095900477431527,0.5579765661505488,0.7125021034353888,0.8383066953474649,0.9303191613323782,0.9848304807480666,0.9996433034118328,0.974160524741836,0.9094093550306548,0.8079999126191724,0.6740200100790351,0.5128703745707143,0.3310469446409065,0.13587901907102598,-0.06476618700828891,-0.2628006693997221,-0.4502416621252106,-0.6195334225606093,-0.7638518032681384,-0.8773793332417744,-0.9555397200452868,-0.9951823200681651,-0.9947091409055872,-0.9541392564000563,-0.8751080377750546,-0.7608012318542524,-0.6158265436714809,-0.4460278999738925,-0.2582498806533275,-0.06006181386905366,0.14054734341704758,0.3354910401337851,0.5169110998111025,0.6774944835141573,0.8107680782951765,0.9113596282452178,0.9752142900211197,0.999758083498728,0.9840016488596025,0.9285801276652099,0.8357275603135284,0.7091868319156758,0.5540587966729689,0.37659666254729035,0.18395392457428228,-0.01610399237613964,-0.21551275771978298,-0.40623420816042105,-0.5805803658897517,-0.7315233408176173,-0.8529786246787477,-0.9400503574382044,-0.9892286793103096,-0.9985312131354448,-0.9675829739633659,-0.8976314846888677,-0.7914964884292466,-0.6534562847361784,-0.4890752714273766,-0.3049796438233268,-0.10859029294765879,0.09217633043951638,0.2892273278116591,0.47461957745204486,0.6408799215287779,0.7813064089361972,0.890238450808374,0.9632849987414951,0.9975015478664802,0.991508829780386,0.9455484108280252,0.8614729545673797,0.7426715409391811,0.5939330525229362,0.42125313477707865,0.2315925116919813,0.03259639914667347,-0.1677136735886814,-0.36126321153519414,-0.5402502367345691,-0.6974597858225817,-0.8265547450564362,-0.9223312992415703,-0.9809286974167346,-0.9999848796471147,-0.978731691612597,-0.9180258488928054,-0.8203144027795194,-0.6895360996883648,-0.5309626103708747,-0.3509860289727762,-0.1568612078486267,0.04358668538986206,0.24227760022232953,0.43120230989207314,0.6027452631749576,0.7499915670952416,0.8670057261211968,0.9490709018701959,0.9928790487683101,0.9966642613004656,0.960273957626083,0.8851750301499762,0.7743947151191509,0.6323985647909274,0.46491044111191665,0.2786817869587241,0.08121947561207125,-0.11951679115316616,-0.31543533848526495,-0.498638693705589,-0.6617419332720397,-0.7981703688979774,-0.9024245731038374,-0.9703020610275017,-0.999066692504237,-0.9875589658212142,-0.9362427572082188,-0.8471866219960524,-0.7239804111931757,-0.5715905646641483,-0.39615991403901746,-0.20476006529497384,-0.005106342461894932,0.19475321693250136,0.3867622780929273,0.5631809596492203,0.7168978281174015,0.8417165596398773,0.9326057136745789,0.9859015502613763,0.9994557153058442,0.9727218406893153,0.906777568356649,0.8042811105912253,0.6693640975316709,0.5074650312445583,0.32511005981602265,0.12964990845452198,-0.07103642809339109,-0.2688592876622651,-0.45584443478556447,-0.6244545019661127,-0.7678928208077032,-0.8803773955800301,-0.9573739753500944,-0.9957788295452747,-0.9940438592700588,-0.952239001141133,-0.8720494081437857,-0.7567075211492232,-0.6108627692883066,-0.44039415155760975,-0.2521732544885587,-0.053787258633489446,0.14676690052870964,0.34140488890027715,0.5222808531083077,0.6821036866953173,0.814430934473354,0.9139284877619429,0.976585602201227,0.9998765707760319,0.9828625350143296,0.9262293303534346,0.8322598401272806,0.7047419725855991,0.5488159703886587,0.3707672075300785,0.17777282603811023,-0.022387574474456644,-0.2216455323128923,-0.41196896322856985,-0.5856859335723278,-0.7357939157845381,-0.856242060139478,-0.9421751043753931,-0.9901290892179024,-0.9981709905083017,-0.9659766393682755,-0.894843789440884,-0.7876398044673952,-0.6486860749128823,-0.483583822804177,-0.29898831658301367,-0.10234059737011035,0.09843246925191217,0.29523772503018303,0.4801419540862693,0.6456916706883714,0.7852135691099326,0.8930835244486108,0.9649533009874631,0.9979258294883493,0.9906719879945713,0.9434841787099654,0.8582645412720227,0.7384482775415251,0.5888651786850414,0.4155449363908972,0.22547408611891465,0.026314379997771892,-0.17390605824863603,-0.3671163468059086,-0.5455281828516569,-0.7019497888848167,-0.830075813131278,-0.9247414981461889,-0.9821308720820101,-0.9999305704366359,-0.9774230877295405,-0.915515700133241,-0.8167038931890779,-0.6849707688356684,-0.5256264866501399,-0.34509421142325597,-0.1506511955166397,0.04986456703308691,0.24837028989466806,0.4368642113960616,0.6077481453756333,0.7541337639121976,0.8701202656846732,0.9510322371533889,0.9936081183856051,0.9961316764703542,0.9585011868323002,0.8822335337473445,0.7704030647681059,0.6275176638363793,0.4593370385726337,0.27264054657824854,0.07495391966790166,-0.1257540982276975,-0.3213929709682431,-0.5040764995520662,-0.6664407146384269,-0.8019407180025047,-0.9051145072503235,-0.9718031490249776,-0.9993184255258728,-0.98655119651402,-0.9340161087325408,-0.8438308505069394,-0.7196307877714331,-0.5664224225418496,-0.39038158092068453,-0.198604465671483,0.00117839157037876,0.2009137478718264,0.3925502750618485,0.5683631086070345,0.7212652367444751,0.8450931777828533,0.9348554299243765,0.9869336786015082,0.9992286506638219,0.9712447360362553,0.9041099657512042,0.8005305410404578,0.6646817464183684,0.5020396440472386,0.3191603337828206,0.12341567692155499,-0.07730386337928302,-0.27490728651135704,-0.461429202486738,-0.6293509166464243,-0.771903508090326,-0.8833406847418251,-0.9591704162648561,-0.9963360077161001,-0.9933393148561592,-0.9503011343135669,-0.8689563342751896,-0.7525839219846374,-0.6058748670266638,-0.4347430084380633,-0.2460866679759024,-0.04751057890700046,0.15298066063631385,0.34730525284484154,0.5276299773385102,0.6866859481217673,0.8180616222306203,0.9164612488999477,0.9779183411698351,0.9999555648943385,0.9816846000310362,0.9238419488038617,0.8287592473134596,0.7002692773329001,0.5435514669522805,0.3649231079370727,0.17158470582471788,-0.02867027230753436,-0.22776955234318402,-0.41768744633261956,-0.5907683678118176,-0.7400354283381636,-0.8594716757220255,-0.9442626372480782,-0.990990390972874,-0.9977713420892252,-0.9643321505948526,-0.8920207496222933,-0.7837520102815674,-0.6438902432648514,-0.47807327357055146,-0.29298517989194384,-0.09608685954025911,0.10468472017538329,0.3012364609388895,0.4856453660572158,0.6504779162963107,0.7890897148911835,0.8958933230452985,0.9665834894749381,0.9983106950016633,0.9897960166126768,0.9413826808215577,0.8550222282144541,0.7341958468885027,0.5837740458302203,0.40982032479655095,0.21934675476268123,0.02003132148258897,-0.1800915739612087,-0.372954981702598,-0.5507845816778688,-0.7064120663102773,-0.8335640948432881,-0.9271151715794573,-0.9832942545085128,-0.9998367659342798,-0.9760758775559281,-0.9129693903031881,-0.8130611254003571,-0.6803783829840707,-0.5202696017164539,-0.33918876333087433,-0.14443523275846618,0.05614047912393722,0.25445316942874463,0.44250885762248354,0.6127270227191821,0.758246173928023,0.8732004372081574,0.9529560085327271,0.9942979424354497,0.9955597463972136,0.9566905571258506,0.8792571908543895,0.7663809850104535,0.6226119771677667,0.4537454931232877,0.26658853743213745,0.06868540319119221,-0.13198643826261147,-0.32733790906055177,-0.5094943953677201,-0.6711131729067111,-0.8056793920250843,-0.9077686911530629,-0.973265852708415,-0.9995306874341473,-0.9855044603738984,-0.9317525684566682,-0.8404417493579958,-0.7152527403482172,-0.5612319078474224,-0.3845878284972092,-0.19244102156201284,0.007463079058445051,0.20706634311306493,0.39832276706662867,0.5735228083393419,0.7256041568125929,0.8484364164065527,0.9370682212224225,0.9879268250014589,0.9989621184543731,0.9697292691253722,0.9014066525794026,0.7967483521070632,0.659973141682623,0.4965944272708344,0.31319800154389044,0.11717657071190254,-0.08356824531442136,-0.2809444270631514,-0.46699574464158755,-0.6342224732026563,-0.7758837067018163,-0.8862690836830089,-0.9609289718337038,-0.9968538325732186,-0.9925955354920197,-0.9483257324593061,-0.865828938339576,-0.748430597234556,-0.6008630338987064,-0.4290746938242461,-0.239990361523671,-0.041232022606040516,0.15918837830860705,0.35319189891459474,0.5329582612218663,0.6912410868031471,0.8216599981618813,0.9189578116202377,0.9792124542863377,0.9999950627335357,0.9804678904358171,0.921418077313435,0.8252259201384737,0.695768922820329,0.5382654943015138,0.35906459459861295,0.16538980835280107,-0.03495183772121569,-0.2338845759239608,-0.4233894316035736,-0.5958274678621516,-0.7442477109471248,-0.8626673438629239,-0.9463128736028336,-0.9918125505554815,-0.9973322836635496,-0.9626495725971566,-0.8891624767375927,-0.7798332594320612,-0.6390689792179216,-0.4725438413825118,-0.2869704708623246,-0.08982932646822955,0.1109328362581392,0.3072232985996109,0.49112959599088,0.6552384693051735,0.7929346931799515,0.8986677356168642,0.968175499814665,0.9986561292049948,0.9888809502338743,0.9392440001678192,0.8517461434596362,0.729914416942842,0.5786598550481665,0.40407952610504805,0.21321075964082456,0.01374747176952804,-0.1862699764106322,-0.37877888561055617,-0.5560192255958318,-0.7108464418477771,-0.8370194524121328,-0.929452225785984,-0.9844187987448927,-0.9997034698451394,-0.9746901143039007,-0.9103870199769482,-0.8093862432954578,-0.6757591235238684,-0.5148921671563383,-0.33326991794900834,-0.13821356509258437,0.06241417377616582,0.26052599856283054,0.44813602561890936,0.6176816985499167,0.7623286347105312,0.8762461190308733,0.9548421400230406,0.9949484936711558,0.9949484936711526,0.9548421400230312,0.8762461190308583,0.7623286347105109,0.6176816985498921,0.4481360256189321,0.2605259985628003,0.0624141737760778,-0.13821356509255914,-0.33326991794903793,-0.5148921671563652,-0.6757591235238914,-0.8093862432955097,-0.9103870199769376,-0.9746901143039077,-0.9997034698451401,-0.9844187987448971,-0.9294522257859514,-0.8370194524121157,-0.710846441847795,-0.5560192255958057,-0.3787788856105272,-0.18626997641054555,0.013747471769559387,0.21321075964079966,0.40407952610507675,0.5786598550481921,0.7299144169428634,0.8517461434596526,0.9392440001678299,0.9888809502338706,0.9986561292049931,0.9681754998146429,0.8986677356168504,0.7929346931799324,0.6552384693051927,0.4911295959908032,0.30722329859952696,0.11093283625816452,-0.08982932646826078,-0.2869704708623546,-0.4725438413824894,-0.6390689792179894,-0.7798332594320807,-0.8891624767376072,-0.9626495725971651,-0.997332283663552,-0.9918125505554701,-0.9463128736028233,-0.8626673438629368,-0.744247710947104,-0.5958274678620807,-0.4233894316035452,-0.23388457592393033,-0.03495183772118436,0.16538980835283199,0.3590645945986953,0.5382654943014924,0.6957689228203515,0.8252259201384914,0.921418077313425,0.9804678904358344,0.9999950627335356,0.979212454286343,0.9189578116202254,0.8216599981618634,0.6912410868030834,0.5329582612218398,0.35319189891461855,0.1591883783085761,-0.04123202260607184,-0.23999036152370146,-0.42907469382427443,-0.6008630338987315,-0.7484305972345391,-0.8658289383395916,-0.948325732459334,-0.9925955354920235,-0.9968538325732161,-0.9609289718336952,-0.8862690836829945,-0.7758837067017605,-0.634222473202676,-0.46699574464155985,-0.28094442706312134,-0.08356824531444677,0.11717657071199013,0.3131980015439202,0.49659442727086167,0.6599731416826465,0.7967483521070822,0.9014066525794407,0.9697292691253798,0.9989621184543719,0.987926825001454,0.9370682212224115,0.8484364164065361,0.7256041568125713,0.5735228083393161,0.3983227670665999,0.20706634311303426,0.007463079058356859,-0.19244102156204362,-0.3845878284972381,-0.5612319078474013,-0.7152527403482392,-0.8404417493580435,-0.931752568456659,-0.9855044603739037,-0.9995306874341464,-0.9732658527084078,-0.9077686911530259,-0.8056793920250657,-0.6711131729066879,-0.5094943953676931,-0.32733790906057586,-0.13198643826252404,0.06868540319122349,0.2665885374321129,0.45374549312331564,0.6226119771677913,0.7663809850105101,0.8792571908544043,0.9566905571258597,0.9955597463972166,0.9942979424354463,0.9529560085327176,0.8732004372081421,0.7582461739280025,0.6127270227192022,0.4425088576224554,0.25445316942865936,0.05614047912390592,-0.1444352327584972,-0.3391887633309038,-0.5202696017165291,-0.6803783829841353,-0.8130611254003423,-0.9129693903032009,-0.976075877555935,-0.9998367659342804,-0.9832942545084967,-0.9271151715794456,-0.8335640948432708,-0.7064120663102551,-0.5507845816777952,-0.3729549817025162,-0.18009157396117786,0.020031321482563483,0.21934675476271182,0.4098203247966314,0.5837740458301995,0.7341958468885239,0.8550222282144703,0.9413826808215683,0.9897960166126893,0.9983106950016581,0.96658348947493,0.8958933230452845,0.7890897148911992,0.6504779162962436,0.48564536605718844,0.3012364609389138,0.1046847201753521,-0.09608685954029032,-0.29298517989202816,-0.478073273570579,-0.6438902432648754,-0.7837520102815869,-0.8920207496223075,-0.9643321505948609,-0.9977713420892274,-0.9909903909728698,-0.9442626372480867,-0.8594716757220096,-0.7400354283381043,-0.5907683678118382,-0.4176874463325911,-0.2277695523431535,-0.028670272307503023,0.17158470582480476,0.364923107937049,0.5435514669523068,0.7002692773329225,0.8287592473134454,0.9238419488038955,0.9816846000310422,0.9999555648943388,0.9779183411698286,0.9164612488999352,0.8180616222305696,0.6866859481217445,0.5276299773385319,0.3473052528448122,0.15298066063628288,-0.047510578907031774,-0.2460866679759328,-0.43474300843809155,-0.6058748670266436,-0.7525839219846581,-0.8689563342752332,-0.9503011343135767,-0.9933393148561629,-0.9963360077161022,-0.9591704162648472,-0.8833406847417837,-0.7719035080903422,-0.6293509166464,-0.4614292024867102,-0.2749072865113816,-0.07730386337919509,0.12341567692158609,0.3191603337828503,0.5020396440472656,0.6646817464183494,0.8005305410405107,0.9041099657512175,0.9712447360362493,0.9992286506638232,0.986933678601503,0.9348554299243653,0.8450931777828365,0.7212652367444533,0.5683631086070088,0.39255027506181966,0.2009137478717957,0.0011783915703474093,-0.1986044656715137,-0.39038158092066105,-0.5664224225419223,-0.7196307877714944,-0.8438308505069257,-0.934016108732552,-0.9865511965140251,-0.9993184255258696,-0.9718031490249568,-0.9051145072503343,-0.8019407180024859,-0.6664407146384035,-0.5040764995520391,-0.3213929709681596,-0.1257540982276664,0.07495391966787623,0.2726405465782787,0.459337038572712,0.6275176638364037,0.7704030647681259,0.8822335337473325,0.9585011868323092,0.9961316764703619,0.993608118385608,0.9510322371533793,0.8701202656846577,0.7541337639122143,0.6077481453755632,0.4368642113960334,0.2483702898946377,0.04986456703305559,-0.1506511955166145,-0.34509421142333874,-0.5256264866501665,-0.6849707688356499,-0.816703893189096,-0.9155157001332537,-0.9774230877295471,-0.9999305704366364,-0.9821308720820042,-0.924741498146177,-0.8300758131312606,-0.7019497888847944,-0.5455281828516307,-0.36711634680587946,-0.17390605824866112,0.02631437999780323,0.22547408611900058,0.41554493639087403,0.5888651786850668,0.7384482775415462,0.8582645412720388,0.9434841787099946,0.9906719879945678,0.9979258294883473,0.9649533009874549,0.8930835244486223,0.7852135691098779,0.6456916706883474,0.4801419540862917,0.2952377250301531,0.09843246925188097,-0.10234059737019809,-0.2989883165830436,-0.4835838228041547,-0.6486860749129062,-0.7876398044674146,-0.894843789440898,-0.9659766393682836,-0.9981709905083036,-0.990129089217906,-0.9421751043753825,-0.8562420601394324,-0.7357939157845168,-0.5856859335723024,-0.41196896322859305,-0.22164553231286171,-0.022387574474368472,0.17777282603808514,0.3707672075301076,0.5488159703886849,0.704741972585581,0.8322598401273295,0.9262293303534463,0.9828625350143354,0.9998765707760314,0.9765856022012325,0.913928487761907,0.8144309344733358,0.6821036866953358,0.522280853108281,0.34140488890024767,0.1467669005286786,-0.053787258633520754,-0.252173254488589,-0.4403941515576379,-0.6108627692883765,-0.7567075211492437,-0.872049408143801,-0.9522390011411426,-0.994043859270056,-0.9957788295452668,-0.957373975350069,-0.8803773955800422,-0.7678928208076831,-0.6244545019660882,-0.455844434785486,-0.2688592876621801,-0.07103642809341651,0.12964990845455307,0.3251100598160523,0.5074650312445854,0.6693640975317364,0.8042811105912439,0.9067775683566384,0.9727218406893227,0.9994557153058471,0.985901550261371,0.9326057136745676,0.8417165596398605,0.7168978281173797,0.5631809596491474,0.38676227809295083,0.1947532169324706,-0.005106342461926283,-0.2047600652949489,-0.39615991403909845,-0.571590564664174,-0.7239804111931973,-0.8471866219960691,-0.9362427572082299,-0.987558965821228,-0.9990666925042356,-0.9703020610275079,-0.9024245731038238,-0.7981703688979586,-0.6617419332720162,-0.49863869370556185,-0.3154353384852352,-0.11951679115313503,0.0812194756121025,0.2786817869588088,0.4649104411119444,0.6323985647909517,0.7743947151191348,0.8851750301499908,0.9602739576261077,0.9966642613004635,0.9928790487683065,0.9490709018701861,0.8670057261211811,0.7499915670951832,0.6027452631749325,0.4312023098920449,0.24227760022229913,0.04358668538988753,-0.1568612078487138,-0.35098602897280556,-0.5309626103708531,-0.6895360996883875,-0.8203144027795374,-0.9180258488928403,-0.9787316916126034,-0.9999848796471148,-0.9809286974167285,-0.9223312992415582,-0.8265547450564186,-0.6974597858225593,-0.5402502367345426,-0.3612632115352179,-0.16771367358865047,0.03259639914676162,0.23159251169201178,0.4212531347771071,0.5939330525229614,0.742671540939202,0.8614729545674245,0.945548410828017,0.9915088297803901,0.9975015478664779,0.963284998741502,0.890238450808334,0.7813064089361776,0.640879921528754,0.4746195774520172,0.28922732781162913,0.09217633043942856,-0.10859029294768995,-0.3049796438233025,-0.4890752714274039,-0.6534562847362022,-0.7914964884292657,-0.8976314846888815,-0.9675829739633739,-0.9985312131354466,-0.9892286793102967,-0.9400503574381743,-0.8529786246787314,-0.731523340817596,-0.5805803658897725,-0.40623420816034045,-0.21551275771969686,-0.01610399237616513,0.1839539245743131,0.3765966625473194,0.5540587966730424,0.7091868319157378,0.8357275603135456,0.9285801276652215,0.9840016488596081,0.9997580834987272,0.9752142900211127,0.9113596282452048,0.8107680782951914,0.6774944835141343,0.516911099811027,0.33549104013380915,0.14054734341701652,-0.060061813869084955,-0.2582498806533578,-0.44602789997397146,-0.615826543671461,-0.7608012318542727,-0.8751080377750698,-0.9541392564000486,-0.9947091409055963,-0.995182320068162,-0.9555397200452943,-0.8773793332417593,-0.7638518032681182,-0.61953342256054,-0.45024166212518263,-0.26280066939974667,-0.06476618700825762,0.13587901907105707,0.3310469446409361,0.5128703745707412,0.6740200100790583,0.8079999126191573,0.9094093550306679,0.9741605247418559,0.9996433034118337,0.9848304807480611,0.9303191613323876,0.8383066953474478,0.7125021034353268,0.55797656615057,0.3809590047742863,0.188584993623865,-0.011390874803653887,-0.21090757729837595,-0.4019225996196465,-0.5767361300827489,-0.7283014388119308,-0.8505089312790048,-0.9384324259354353,-0.9885277284906154,-0.998775498312204,-0.968762648006032,-0.8996989949606533,-0.7943684936329298,-0.657017014400111,-0.4931811926108532,-0.30946524692652055,-0.11327476340024167,0.08748182354664592,0.284712019956475,0.4704654806027703,0.6372544872453096,0.7783557784012303,0.8880815638790266,0.9620087994862461,0.9971574798514866,0.9921107623803705,0.9470720801520616,0.8638569415358461,0.7458197470856538,0.5977185737212777,0.4255233767444178,0.23617534106107396,0.037307082158272074,-0.16306502447140322,-0.35686398326409313,-0.5362777621122394,-0.6940741952206708,-0.8238925115636028,-0.9204997374360427,-0.980001637517823,-0.999999691420608,-0.9796877779961942,-0.9198846700637515,-0.8230010296939808,-0.6929422344698034,-0.5349509517951703,-0.35539580707781554,-0.161514664568223,0.03887713080191779,0.23770178981618426,0.42694469449256034,0.5989774671727837,0.7468654702709655,0.8646473413745228,0.9475752956425991,0.9923065089165345,0.997037866894351,0.9615786486317156,0.887358214499287,0.7773683886952094,0.6360428588720521,0.4690784542774862,0.2832055066823259,0.0859165508431232,-0.1148356994220762,-0.3109589249672107,-0.4945474025388512,-0.6582006843207235,-0.7953219098357406,-0.9003837252578004,-0.9691510909330437,-0.998851995742577,-0.988289196814488,-0.9378884803598285,-0.849681498239074,-0.7272238721167732,-0.575451866424043,-0.40048340763948886,-0.20937147079636612,-0.009819774201806346,0.1901277572921352,0.38241124273661803,0.559279738724095,0.7136036797600671,0.839162270903995,0.9308942478873691,0.9851018965740819,0.9996001077424403,0.9738044587935917,0.9087547718147294,0.8070731983717213,0.672858520632646,0.5115209295415669,0.32956394013068346,0.1343222349615762,-0.06633399678101354,-0.26431630645556087,-0.4516440311649519,-0.6207659941167462,-0.7648648924062563,-0.8781321023590981,-0.9560018250339819,-0.9953351334854548,-0.9945465028457351,-0.9536677227999357,-0.8743466161445848,-0.7597806150839336,-0.6145878728026739,-0.4446211058043063,-0.25673167102737343,-0.058493387786028646,0.14210276273336112,0.33697075376227564,0.518255460525346,0.6786493001609646,0.8116868002389144,0.9120052218228818,0.9755607313686322,0.9997914075724285,0.983720512366742,0.9279958632121268,0.8348637195884734,0.7080782363208983,0.5527501336744005,0.37514068432381864,0.18240932157878567,-0.01767495722827566,-0.21704675886704433,-0.40766941004760543,-0.5818589155579746,-0.7325936999554803,-0.8537976471311075,-0.9405850284265783,-0.9894574462579665,-0.9984448544513699,-0.967184970764344,-0.8969378804758265,-0.790535242373965,-0.652266144647652,-0.4877042118285768,-0.3034829320988422,-0.10702826151692495,0.09374071612113023,0.2907310073891462,0.47600193763189885,0.642085239400174,0.7822860981601631,0.8909530201320197,0.9637056438899441,0.997611312642258,0.9913032895676097,0.9450358509484983,0.8606740362995399,0.7416184686621645,0.5926682755589048,0.4198276362599507,0.23006375343814825,0.031026005370306083,-0.1692624003461778,-0.36272784212961473,-0.5415717319362321,-0.6985848761865658,-0.8274380782130618,-0.9229372680491266,-0.9812328752848499,-0.9999750051720798,-0.9784081628343132,-0.9174017072497783,-0.8194148074086854,-0.6883973132610063,-0.5296305373447555,-0.3495143651847205,-0.15530927603616132,0.0451563268869452,0.2438016791868757,0.43261939073191646,0.6039982233901171,0.7510298998847591,0.86778757631141,0.9495647530957377,0.9930649938962364,0.99653480488645,0.959834318055555,0.8844429292851281,0.7733996639309955,0.6311806737727959,0.4635188034261214,0.2771724994921225,0.07965337771195352,-0.12107657011213468,-0.31692592384486273,-0.49999999999997624,-0.6629190862721847,-0.7991159175902477,-0.9031004024395128,-0.9706809283397838,-0.9991333256594045,-0.9873106788381578,-0.9356895585301619,-0.846350811050562,-0.7228956795025328,-0.5703006377408543,-0.3947167888113021,-0.20322191411140833,-0.0035351681656702054,0.19629408033723986,0.3882107184335692,0.5644785903248951,0.717992341661921,0.842563836234392,0.9331715996166475,0.9861632347001454,0.9994026497469005,0.9723561642042569,0.9061140213571652,0.8033464406434523,0.6681959811623759,0.5061105552008355,0.32362382299983006,0.1280918210418479,-0.07260355963052474,-0.27037229228319465,-0.45724232330464054,-0.6256809255255152,-0.7688983422985175,-0.8811214824513343,-0.9578266334751091,-0.9959218122841615,-0.9938714029915101,-0.9517580575542547,-0.8712793640748272,-0.7556794170590232,-0.6096180480319383,-0.43898298782373185,-0.2506525322587303,-0.05221827819002462,0.14832089361588152,0.3428812532013091,0.5236200764079932,0.6832517849296387,0.8153416278256351,0.9145650662015987,0.9769224052642929,0.9999000219378035,0.9825716889589626,0.9256359110795359,0.8313877683537738,0.7036264015079886,0.5475018686545894,0.369307546553821,0.1762264447240826,-0.02395834152677535,-0.22317736751540598,-0.4134001183352862,-0.5869587187498023,-0.736857025088027,-0.8570526396545063,-0.9427004796581014,-0.9903480824012647,-0.9980747739815216,-0.9655690916176158,-0.8941413387079006,-0.7866707665269359,-0.6474895116647412,-0.4822079676886578,-0.29748863029198397,-0.10077753222764521,0.09999590612163069,0.2967385115185146,0.4815195935202362,0.6468906304502438,0.7861855191559589,0.8937892854921966,0.9653644238151442,0.9980257417472693,0.9904566622236061,0.9429622946865931,0.8574571361306472,0.7373878977670486,0.587594568164755,0.41411531340911883,0.2239430787491913,0.024743703116118607,-0.17545309068892911,-0.36857737395836626,-0.5468443107413582,-0.7030679644231845,-0.8309509626850177,-0.9253383444544457,-0.9824253562821906,-0.9999108218765894,-0.9770899024733227,-0.9148825088717772,-0.8157962198493282,-0.6838252017115598,-0.5242892035293066,-0.34361911816127283,-0.1490977530929176,0.051433739385800065,0.24989193887052993,0.4382769993557265,0.6089951228649835,0.7551646652939502,0.8708935353449072,0.951516704607748,0.9937842547608409,0.9959923817127324,0.9580520759106804,0.8814927103138656,0.769400391400434,0.6262935582776726,0.45794084449317707,0.27112854453307955,0.07338705842888943,-0.1273126585156285,-0.3228804047714521,-0.5054328484440952,-0.6676113042228768,-0.8028783618368536,-0.9057814089306475,-0.9721724257579965,-0.9993751917739604,-0.9862931640308639,-0.9334536788023231,-0.842986694668747,-0.7185389339300527,-0.5651268833035665,-0.38893457944583576,-0.1970643305603905,0.002749577502573814,0.20245265015207212,0.39399486057030947,0.569655146131071,0.7223526442776623,0.8459321219495313,0.9354120929021715,0.9871856213170338,0.9991657173113141,0.9708694634578781,0.903437481177012,0.7995879523100395,0.663507049264299,0.5006801904881054,0.31767092336411795,0.12185634774704657,-0.07887025478209725,-0.27641759893677864,-0.462822555271376,-0.6305711437677061,-0.7729014222177695,-0.8840760599770872,-0.959613609647101,-0.9964691541290619,-0.9931570471706163,-0.9498107997362488,-0.8681776981829694,-0.7515483711826279,-0.604624144546732,-0.433327530878138,-0.24456349320776583,-0.04594110607465392,0.15453316611470005,0.3487782095048204,0.528964010326974,0.6878272825958965,0.818964251020848,0.9170887870580791,0.9782454926453643,0.9999691422179066,0.9813840559010103,0.9232393981480641,0.8278789789365588,0.6991467748354216,0.5422319783872167,0.36345982186168935,0.17003660727120928,-0.030240779517881823,-0.22929916109649853,-0.41911449813095086,-0.5920353382261004,-0.7410912458165703,-0.860273780283425,-0.9447786960738299,-0.9911996017421171,-0.9976652715201054,-0.963915074389861,-0.8913094801148032,-0.782775218731059,-0.6426873041189487,-0.47669267728188514,-0.2914825782690297,-0.09452282242397832,0.10624714648041036,0.30273429505997673,0.4870182303311962,0.6516704705920625,0.7900538873692946,0.8965902479325863,0.9669850737433007,0.9984007507973952,0.9895709137884713,0.9408514932676958,0.8542063680904731,0.7331282014995405,0.5824976519402275,0.40838663381749724,0.21781355874884895,0.018460423534242158,-0.18163685097944635,-0.37441234770541887,-0.5520952902712155,-0.707523282857313,-0.8344310262274074,-0.9277028718141588,-0.9835790334092062,-0.9998071440692504,-0.9757330489819447,-0.9123271744331549,-0.8121454099429549,-0.679226080410903,-0.5189271613209613,-0.33771029885811443,-0.14288034108152167,0.057709120353028776,0.25597232831383404,0.44391729689962306,0.6139679682296535,0.7592696031833205,0.873965095795739,0.9534310730804352,0.994464263100951,0.9954106187978498,0.9562319925921375,0.8785076741134026,0.7653707290668744,0.6213817054181817,0.4523447977970911,0.2650738805295369,0.06711784050133766,-0.13354371831940923,-0.32882213255682213,-0.5108457332842512,-0.6722771528394152,-0.8066090939664917,-0.9084266388367062,-0.9736255242764793,-0.9995775845330024,-0.9852366925824367,-0.931180929489136,-0.839589281969628,-0.7141538074821799,-0.5599308074652626,-0.38313700792909755,-0.19089896335567494,0.00903421456796842,0.20860322348517513,0.39976344068456865,0.5748092016787508,0.7266844153839881,0.8492669950087792,0.9376156392488403,0.9881690160424802,0.9988893197940435,0.969344415276219,0.9007252569923213,0.7957978818243164,0.6587919101421132,0.49523004989210817,0.3117054763514075,0.11561606136602509,-0.08513383471364828,-0.2824519876386111,-0.4683845066569653,-0.6354364556893108,-0.7768739740501882,-0.8869957182363796,-0.9613626829679194,-0.9969771374012192,-0.9924034635986949,-0.9478260262587916,-0.8650417409786751,-0.7473876406229577,-0.5996063595963808,-0.42765495834688017,-0.2384647943795803,-0.03966211937593226,0.16073933485723693,0.3546613897546814,0.5342870512073795,0.6923756124366165,0.8225545267380743,0.9195762847102863,0.9795299412524963,0.9999987656826221,0.9801576601020457,0.920806419075239,0.8243374899270969,0.6946395332396452,0.5369406710226123,0.3575977412211067,0.1638400537066051,-0.0365220230576728,-0.23541189781148192,-0.4248123237278307,-0.5970885734703334,-0.7452961948977531,-0.8634609417891698,-0.9468195955882914,-0.9920119706471956,-0.9972163632416674,-0.962222984411523,-0.8884424165493694,-0.7788487528528323,-0.6378597116879886,-0.47115855845148785,-0.2854650132572003,-0.08826437915463778,0.1124941902857637,0.3087181211919233,0.49249763087940923,0.6564245710313621,0.7938910500071249,0.8993557968206789,0.9685675296619419,0.9987363249805115,0.9886460792475311,0.9387035300643412,0.8509218605779652,0.728839548109211,0.5773777282035402,0.40264182375661656,0.21167543554113966,0.012176414801982267,-0.18781343697143787,-0.38023253290072706,-0.5573244631224583,-0.7119506555125711,-0.8378781313845937,-0.9300307567341156,-0.9846938610979125,-0.999663975845132,-0.9743376559532251,-0.9097358048645752,-0.8084625218893968,-0.6746001310153071,-0.5135446225098217,-0.3317881406620189,-0.13665728557752585,0.06398222192347597,0.2620426073533303,0.44954006058299145,0.6189165630664887,0.7633445514159487,0.8770021363433194,0.9553077828999645,0.9951049920575804,0.9947895391202963,0.9543741399896226,0.8754879385867745,0.7613108360940938,0.616445309202811,0.4467308843707073,0.2590087466287657,0.060845971551025745,-0.1397695034088353,-0.33475087251435165,-0.5162384407221339,-0.6769164478299937,-0.8103079666225429,-0.9110359876762955,-0.9750401665007039,-0.999740495942415,-0.9841413062214215,-0.9288714003597515,-0.8361587071443435,-0.7097404733627486,-0.5547126154608176,-0.3773243032536871,-0.18472605601720216,0.015318494799646963,0.21474555740104856,0.405516230928746,0.5799405533929423,0.7309874838843766,0.8525683236912206,0.9397821516209249,0.9891133800343265,0.9985734681122482,0.9677810798956916,0.8979774559306047,0.7919763788865989,0.6540507500345454,0.4897603486826342,0.30572771758515593,0.10937120837785663,-0.09139405202611177,-0.28847522004214615,-0.4739279577753378,-0.6402766691200071,-0.7808158408878216,-0.88988034190845,-0.9630737843525984,-0.9974457420362998,-0.9916106820408225,-0.9458038155165158,-0.8618716163261174,-0.7431973897207094,-0.5945648913735034,-0.4219654942854478,-0.23235667666078863,-0.03338156610146269,0.1669391547119988,0.36053056157689023,0.5395889887995348,0.6968965948017314,0.8261123131684484,0.9220274609069197,0.9807757003525055,0.9999888911618815,0.9788925500022807,0.9183370699589951,0.8207634412072738,0.6901048547478015,0.5316281555570155,0.3517215361726816,0.15763702878198282,-0.042801824049319245,-0.24151533621927224,-0.43049337007298966,-0.6021182248896882,-0.7494717062443339,-0.8666139982850686,-0.9488230975899856,-0.992785157029518,-0.9967280668771957,-0.9604928885168377,-0.8855402612549609,-0.7748915239799038,-0.6330069250523592,-0.46560582978420584,-0.27943617293853906,-0.0820024496157733,0.11873679079174078,0.3146897535649311,0.4979575787393746,0.6611527439904994,0.797696855509121,0.9020858229227426,0.9701117290671556,0.9990324510420975,0.9876821951299364,0.9365184899168341,0.8476037433246839,0.7245221069895161,0.5722349991815693,0.39688111013523314,0.20552895156978052,0.005891925125273984,-0.19398260470184306,-0.3860376996584696,-0.5625316227529438,-0.7163499075165025,-0.8412921420026678,-0.9323219072674271,-0.9857697953148075,-0.9994813228590985,-0.9729037785024329,-0.9071085025200534,-0.8047477011555091,-0.669947536240638,-0.5081417996956388,-0.3258528774865932,-0.13042883237941752,0.0702527963219045,0.26810253622501184,0.45514506831761764,0.6238407119157655,0.7673893490393534,0.8800045370305442,0.957146759940013,0.995706416323189,0.9941291672114928,0.9524785914846947,0.8724336230075848,0.7572208728398467,0.6114845646095292,0.44109932595257023,0.25293338239168717,0.05457169930441965,-0.1459897678776343,-0.3406663904704403,-0.521610757756449,-0.6815290059515382,-0.8139748337068082,-0.9136093523852895,-0.9764162965550703,-0.9998639195675197,-0.9830070482134315,-0.926525182636009,-0.83269510569384,-0.7052991058898607,-0.5494725133984872,-0.3714966950100651,-0.17854585236259357,0.021602169980865463,0.22087940928952174,0.41125300407898774,0.5850489985953163,0.7352616798161395,0.8558359776008322,0.9419115444454258,0.9900186759920511,0.9982181747414506,0.9661795190649565,0.8951941865246145,0.7881235944388099,0.6492837562080567,0.48427130290217846,0.29973788317500233,0.1031220354419864,-0.0976506594531535,-0.29448705824159865,-0.47945268967097127,-0.6450915928809449,-0.7847268670346428,-0.8927298170563592,-0.9647468462159968,-0.9978749495253376,-0.9907787338103049,-0.9437442473827794,-0.8586674494389598,-0.7389777839825188,-0.5894999390062299,-0.4162593634164869,-0.22623938131006113,-0.02709969432072488,0.173132380798373,0.3663854931505914,0.5448696136873754,0.701390051121284,0.8296374697864481,0.9244422188313712,0.9819827207403452,0.9999395190457089,0.9775887755710999,0.9158314483337352,0.8171569739449726,0.6855429184707967,0.5262946418243437,0.34583143881501527,0.151427777504577,-0.04907993445308357,-0.24760923524602294,-0.43615741277631637,-0.6071240938227758,-0.7536176149318223,-0.8697328252316171,-0.9507891229445038,-0.9935191303497523,-0.9962004017134457,-0.958724855041176,-0.8826031288610329,-0.7709036884150526,-0.6281291358875275,-0.4600347106019561,-0.2733962954403325,-0.07573728114140531,0.12497470142786506,0.32064895631131424,0.5033978582538601,0.6658548027159368,0.8014711535534124,0.9047802184081253,0.9716176109661214,0.999289117285755,0.986679299507206,0.9342964591299846,0.8442521473897528,0.7201760486708344,0.5670696680020484,0.3911047204901324,0.1993743496089169,-0.00039279727092287486,-0.2001441105007196,-0.39182761868594496,-0.5677165634901735,-0.7207208651072611,-0.8446729232349526,-0.9345762329181514,-0.9868067935625998,-0.9992591923255826,-0.9714314732649151,-0.9044453711728675,-0.8010010944693915,-0.6652684798552851,-0.5027189062792192,-0.31990474376309225,-0.12419522749879781,0.07652059587298062,0.27415187557349124,0.4607320987167906,0.6287402202832398,0.7714038362920342,0.882972179268434,0.9589479315645858,0.996268512142706,0.9934295291548343,0.9505454219477681,0.8693448480153221,0.7531010008496789,0.6064996675779959,0.43545034497819257,0.2468480277831908,0.048295271582967564,-0.15220426603755935,-0.3465684527738109,-0.5269624721911863,-0.6861146450171325,-0.81760955038523,-0.9161466313208178,-0.9777538600851652,-0.9999478505333237,-0.9818339633594182,-0.9241423689889178,-0.8291986144235344,-0.7008298804887404,-0.5442107082520494,-0.36565441337724863,-0.17235859649785637,0.027884991918863476,0.2270045368755584,0.4169735335440057,0.5901343355123296,0.739506834356901,0.8590698276717379,0.9440037336155411,0.9908848681582397,0.9978234537150371,0.9645397960425324,0.8923755587080209,0.7842396806583266,0.6444911169495753,0.4787631293571843,0.29373620970773945,0.0968687893884043,-0.10390340987110763,-0.3004872647811505,-0.48495848412789133,-0.6498810367920573,-0.7886068980128426,-0.8955440311313891,-0.9663818024754528,-0.9982647429154844,-0.9899076517674654,-0.941647403206475,-0.8554293668755245,-0.7347289900745558,-0.5844117025501531,-0.41053679112097574,-0.2201131499484835,-0.020816752155362148,0.1793187684959917,0.37222595321757673,0.5501287172965513,0.705855803912644,0.8331298573552532,0.9268204631054283,0.9831509547410936,0.9998506512842057,0.9762463883050132,0.9132896531666106,0.8135182305885438,0.6809539045961464,0.5209403404879294,0.33992768179532135,0.14521254512763507,-0.055356106295917876,-0.2536933541947569,-0.44180422811923253,-0.6121059825476589,-0.7577337572049571,-0.8728172994412958,-0.9527175939977269,-0.9942138616173818,-0.9956333885921471,-0.9569189538183925,-0.8796311353785146,-0.7668854036699625,-0.6232265368566209,-0.4544454209529444,-0.26734561932589596,-0.06946912119328753,0.13120767580897116,0.3265954940542384,0.5088182545424949,0.6705305614855877,0.8052137950626885,0.9074388768534891,0.9730851158794375,0.9995063135736736,0.9856374319917525,0.9320375254696156,0.8408672051546304,0.7158015448139654,0.5618819386853584,0.3853128829774677,0.19321187275314414,-0.00667750415239969,-0.20629771100065888,-0.39760206129272024,-0.572879080539134,-0.725063355640664,-0.8480203415472197,-0.9367936446448466,-0.9878048148819046,-0.9989975930183046,-0.9699207983938342,-0.9017465160114766,-0.7972228498146172,-0.6605631466727354,-0.4972761564542909,-0.31394397443106503,-0.11795671715083374,0.08278537301098574,0.28019038646182437,0.466300931103742,0.6336148946480068,0.7753878546095728,0.8859049458409946,0.960711226630961,0.9967912573144474,0.9926906525846504,0.9485747077352525,0.8662217356104918,0.748951382850398,0.6014908150018674,0.4297841645711798,0.2407529231628485,0.04201693629322634,-0.15841275242819175,-0.35245682630456465,-0.5322933726441942,-0.6906731839029753,-0.8212119730936771,-0.9186477242653727,-0.9790528042598313,-0.9999922855247201,-0.9806220979939377,-0.9217230535349058,-0.8256693714380138,-0.6963329736850461,-0.5389274078524162,-0.359797689113917,-0.16616453280735044,0.03416671245448255,0.23312069822861806,0.4226775933741055,0.5951963632831481,0.7437227798314404,0.862269746173202,0.9460586364938737,0.9917119223200104,0.997389320623715,0.9628619755942367,0.8895216838110883,0.780324790952091,0.6396730215588874,0.47323604560979105,0.2877229342376035,0.09061171720807928,-0.1101520563086666,-0.30647560266442503,-0.4904451236779905,-0.6546448116797682,-0.7924557805688068,-0.8983228729776542,-0.9679785885534191,-0.9986151068106648,-0.9889974703183364,-0.9395133658088304,-0.8521574965336781,-0.7304511758157891,-0.5793003829807029,-0.40479800342923183,-0.21397822455017926,-0.014532987769168034,0.18549807345477198,0.37805171109110197,0.5553660919028558,0.7102936767872738,0.8365893379324675,0.9291620997931384,0.9842803562117961,0.9997222913874741,0.9748654412256907,0.9107117848535049,0.8098473548612132,0.6763379943808981,0.5155654630321133,0.3340104983004365,0.13899157714063215,-0.06163009168135783,-0.25976745275469454,-0.44743359306360714,-0.6170636942895035,-0.7618199704842467,-0.8758672990834226,-0.9546084345788263,-0.9948693233918956,-0.9950270499092086,-0.9550752561780398,-0.8766243981953196,-0.7628368284589454,-0.6182993216026191,-0.4488381816031623,-0.2612843835850415,-0.06319821735145856,0.13743546774482374,0.33252913191716577,0.51421855351033,0.675179835616172,0.8089246322099245,0.9100616932470463,0.9745141858435614,0.9996840313270268,0.9845566337352923,0.9297417781591862,0.8374490503178735,0.7113987682031725,0.5566720161366444,0.37950582636333063,0.18704176440822567,-0.01296194728557485,-0.2124431631465518,-0.40336079939967695,-0.5780189699905969,-0.7293772075968222,-0.8513342647230262,-0.9389740548641237,-0.9887638198528415,-0.9986965352699227,-0.968371813557885,-0.8990120436353484,-0.7934131164244658,-0.655831722544421,-0.4918137651987113,-0.30797080492918244,-0.11171354774443452,0.08904688028948146,0.28621783038068793,0.47185134552058994,0.6384645424699784,0.7793412466311047,0.8888027209096916,0.9624365754924374,0.9972746311910091,0.9919125666851115,0.9465665266864762,0.8630644091499295,0.7447721827437759,0.5964582047209401,0.4241010085345193,0.23464830927533875,0.035736941417112235,-0.16461498182650955,-0.3583312784835358,-0.5376032485553599,-0.6952044425557626,-0.8247819595435179,-0.9211125324306828,-0.9803130777733509,-0.999997222786614,-0.9793714999832789,-0.9192673318322047,-0.8221075161354144,-0.691808563097726,-0.5336228208796032,-0.35392675354913916,-0.15996390594445734,0.040447083472138476,0.2392276517723642,0.42836495827018856,0.6002348819676597,0.7479093497181797,0.8654356067147269,0.9480761719158226,0.9924998058103477,0.9969157926148869,0.9611461239906979,0.8866326745562587,0.7763790799505679,0.6348296603413222,0.4676902699688418,0.28169829427716825,0.08435106604303405,-0.11639635195650902,-0.3124518353638613,-0.49591239160982925,-0.6593827293843016,-0.7962733626792409,-0.9010662328363452,-0.9695371413799845,-0.9989260273721946,-0.9880482254132879,-0.9373422194801232,-0.8488519676458818,-0.7261445101715015,-0.5741661821848966,-0.3990432270121007,-0.20783484743265557,-0.008248649358540054,0.19167005160430123,0.383862536665236,0.5605815306402517,0.7147034944579694,0.8400157748753853,0.9314670364044397,0.9853708805433176,0.9995544444254777,0.9734459888778151,0.908097945215178,0.806144491755356,0.6716953701444005,0.5101702217539891,0.3280801220474636,0.13276511925954643,-0.06790164279932823,-0.26583129101089675,-0.45304528526062937,-0.6219970332284306,-0.7658760933722808,-0.8788827036890007,-0.9564615700033243,-0.9954854897838404,-0.994381409613811,-0.9531938349425505,-0.8735830360716558,-0.758758122692791,-0.6133476847408723,-0.44321321402752883,-0.2552128276246934,-0.05692481730426449,0.14365783124985568,0.33844963553307855,0.5195985418561353,0.6798024414705329,0.8126035184243648,0.912648563992717,0.9759047644130356,0.9998222635263116,0.983436947427232,0.9274093078762027,0.8339978178898708,0.7069678927395067,0.5514401061375819,0.37368378001509434,0.1808642682812841,-0.01924587844731271,-0.2185802242051331,-0.40910360554798025,-0.583136028828998,-0.7336622505870738,-0.8546145618689137,-0.9411173774540651,-0.9896837705965946,-0.9983560309716255,-0.9667845799389133,-0.8962420620507598,-0.7895720447758997,-0.6510743943523046,-0.48633194826620924,-0.30198547118592484,-0.10546596587249074,0.09530487039123914,0.2922339692579095,0.47738312273683836,0.6432889721976212,0.7832638562054164,0.8916653900181193,0.964123910001131,0.997718614680071,0.9910953021890812,0.9445209581206567,0.8598729933418029,0.7405635656000112,0.591402035513427,0.4184011013417285,0.2285344272408545,0.029455535002063507,-0.17081070925665784,-0.36419157728141116,-0.5428918901950113,-0.6997082419997058,-0.8283193687272974,-0.9235409584616818,-0.9815346308473859,-0.9999626621239929,-0.9780822187236129,-0.9167753008769778,-0.8185131892020193,-0.6872568274321043,-0.5282971568543444,-0.34804183857335524,-0.153756960821735,0.04672585690949356,0.2453251562941369,0.43403540359248294,0.6052496925542813,0.7520663786558243,0.8685672842510518,0.9500562601927026,0.9932484875094041,0.9964028883919779,0.9593923090046715,0.8837086450537186,0.7724027035015945,0.6299612246001103,0.46212602148162246,0.2756625277878553,0.0780870831767179,-0.12263605017727414,-0.3184157268300223,-0.5013600719770718,-0.6640946027672436,-0.800059493557143,-0.9037740023501469,-0.9710573993953691,-0.9991974923193231,-0.9870599545456326,-0.9351340499763652,-0.8455129107740401,-0.7218091632465005,-0.5690093029535789,-0.39327268917191843,-0.20168326124721814,-0.0019639851424988475,0.1978344591635823,0.3896582004237521,0.5657748275091792,0.7190850827455965,0.8434090328464906,0.9337351818988724,0.9864224846620928,0.9993471170278411,0.9719880873269714,0.9054482374931455,0.8024097875267984,0.6670262152611894,0.5047548297550057,0.3221367872745933,0.12653341741725954,-0.07417051193588849,-0.2718846294536728,-0.45863908305948875,-0.6269058045072723,-0.7699019656601651,-0.8818633941554825,-0.9582769270760064,-0.9960623364558556,-0.993696493207481,-0.9512747644243521,-0.8705071691353591,-0.7546494474723453,-0.6083718218512859,-0.43757074040119304,-0.2491311912593216,-0.050649168838710464,0.14987452055296152,0.34435677105369555,0.5249580070809653,0.6843981964647998,0.816250308397236,0.9151993869141773,0.9772567966627417,0.9999210047116289,0.9822784172929756,0.9250402067486506,0.8305136441875385,0.7025090934338235,0.5461864153383545,0.36784697389211846,0.17467962837130768,-0.02552904943468527,-0.2247086517745274,-0.4148302529080895,-0.5882300549405893,-0.7379183153606778,-0.8578611034196008,-0.943223527757632,-0.9905646307769215,-0.9979760935726646,-0.9651591602295265,-0.893436680666554,-0.7856997865836985,-0.6462913500014875,-0.48083092217776513,-0.2959882096101821,-0.09921421830224021,0.10155909613796579,0.2982385654678026,0.4828960442581802,0.6480879932754281,0.7871555283971409,0.8944928400964592,0.9657731635106472,0.9981231902451589,0.9902388913768985,0.9424380828337127,0.8566476142407804,0.7363256976511936,0.5863225070880951,0.4126846681279172,0.22241151854575197,0.023172965151285616,-0.1769996899995546,-0.37003749122791496,-0.5481590886722117,-0.7041844043435853,-0.8318240609243147,-0.9259329064403018,-0.9827174152329956,-0.9998886049019354,-0.9767543051390093,-0.9142470590995633,-0.8148865326066763,-0.6826779464728122,-0.5229506261299295,-0.34214317662911187,-0.1475439426013072,0.053002784767353976,0.25141297095450765,0.43968870536956467,0.6102405969678298,0.7561937024499265,0.871664655087074,0.9519988231149146,0.9939579378457208,0.9958506282136975,0.9576005999084041,0.8807497107968818,0.7683958186642104,0.6250679066288986,0.4565435199249914,0.26961587317059643,0.071820016024105,-0.1288709045151129,-0.3243670415009055,-0.5067879496070278,-0.668780245718842,-0.8038140236578077,-0.9064460745674894,-0.9725393025523749,-0.9994294909297181,-0.9860326967501272,-0.9328889445159084,-0.8421404578043168,-0.7174453062784868,-0.5638299489733535,-0.38748661783363186,-0.1955237089694216,0.0043207566471089144,0.20399105265062753,0.39543847344934446,0.570945777384615,0.7234382685860258,0.8467689778187681,0.9359664466891493,0.9874351270318225,0.9991003173835893,0.9704917941574052,0.9027627663456524,0.7986433896889948,0.6623307141537096,0.49931950093248323,0.3161807287318892,0.12029671775370879,-0.08043645148304161,-0.27792722898805716,-0.46421476551614616,-0.6317898142391906,-0.7738974283338789,-0.8848092527514558,-0.9600544340938411,-0.9965998406236308,-0.9929723277430674,-0.9493181204229693,-0.8673969188771095,-0.7505109650822097,-0.6033719294706736,-0.43191098359079017,-0.24303971470164862,-0.044371519830542334,0.15608529010712044,0.35025030515879263,0.5302967374964733,0.6889669190756874,0.8198648580875069,0.9177140612589522,0.9785702291900611,0.9999802509828953,0.9810810890921939,0.9226345683513661,0.826996666828869,0.6980225463999407,0.5409111512494037,0.36199563853679384,0.1684880889593802,-0.03181121207479703,-0.23082820379391028,-0.42054051528866543,-0.5933008471213479,-0.7421452338114036,-0.8610737611430801,-0.9452924225860326,-0.9914063656015749,-0.9975567380798193,-0.9634956186306143,-0.8905960102897652,-0.781796494794442,-0.6414827784128134,-0.47531090421312044,-0.28997925708202416,-0.09295855196539055,0.10780931050004601,0.3042313818406343,0.4883898923350434,0.6528614161515033,0.7910161094928811,0.8972849594660076,0.9673842708787119,0.9984883419063342,0.9893433680751097,0.9403179830951364,0.8533883992429799,0.7320587462847858,0.5812198200763178,0.4069519346809633,0.21627982503288487,0.01688948001393035,-0.18318167960264423,-0.37586878942093155,-0.5534046359429816,-0.7086327527877571,-0.8352958977061196,-0.9282882818893131,-0.9838613842125193,-0.9997750540455561,-0.97538781167945,-0.911682706360527,-0.8112276895951868,-0.6780721010766327,-0.5175834398837804,-0.33623100070198847,-0.14132509668519422,0.059277619119413795,0.2574908552967372,0.44532464030711705,0.6152073980774091,0.7602911580792981,0.8747275968827305,0.9539037839550452,0.9946281287974067,0.9952590338932358,0.9557710674708847,0.8777559886578398,0.764358583702499,0.6201498997041319,0.4509429857967924,0.26355856925636084,0.06555011212204401,-0.13510066870557244,-0.33030554431129217,-0.5121958101092197,-0.6734394731654099,-0.807536804684664,-0.909082343946769,-0.973982792318737,-0.9996220140398905,-0.9849664926014327,-0.930606991776009,-0.838734741941981,-0.7130531116312201,-0.5586283248185095,-0.3816852415356421,-0.1893564338894864,0.010605327775318378,0.21013958889208986,0.4012031274325808,0.5760941760242033,0.7277628800369712,0.8500954770809915,0.9381607426446968,0.9884087676551249,0.998814055240823,0.9689571684697523,0.9000416378435311,0.7948454470072659,0.6576090522850289,0.4938644499712347,0.3102121816719453,0.11405526660628848,-0.08669921394847618,-0.28395885094324747,-0.46977211240211486,-0.6366488695154157,-0.7778623235804939,-0.8877201631212968,-0.9617940208487968,-0.9970979810568079,-0.9922089418236847,-0.9473239802219898,-0.8642524081456859,-0.7463428389842997,-0.5983482050849457,-0.42623416714558693,-0.2369386385530052,-0.03809211823456469,0.16228989459915577,0.3561300050653555,0.5356145222333003,0.6935084288476367,0.8234470247275643,0.9201924877023385,0.9798450101169925,1.0]}
},{}],85:[function(require,module,exports){
module.exports={"sine":[0.0,0.19975924546521184,0.3914661997876466,0.5673931595175625,0.7204485124679503,0.8444626004582995,0.9344364181110183,0.9867431226570545,0.9992742318945305,0.9715246170636379,0.9046128645767249,0.8012361858226472,0.6655616926302593,0.5030584210749112,0.3202768747449104,0.12458497407441982,-0.07612894438016055,-0.27377410662716856,-0.4603834401755762,-0.628434726565898,-0.7711538218440879,-0.8827877221672573,-0.9588364672721781,-0.9962345337824404,-0.9934744063937271,-0.9506673457852289,-0.869538903703917,-0.7533593660085379,-0.6068119275128164,-0.43580391249727674,-0.24722865058702256,-0.04868760677402551,0.1518160334828882,0.34619997250195006,0.5266285976344633,0.685828834652126,0.8173833252220125,0.9159891104911217,0.9776713932504436,0.9999437619300288,0.9819084177990617,0.9242923652145346,0.8294181060903275,0.7011100198920529,0.5445402029781808,0.36601998150047366,0.17274550197452845,-0.027492345240683506,-0.22662197657552147,-0.41661648062006423,-0.589817182760627,-0.7392423661984582,-0.8588687048126508,-0.9438740633141802,-0.9908318774218496,-0.9978492785991216,-0.9646433955465304,-0.8925527567380395,-0.7844833343653357,-0.6447914046575915,-0.47910794647479826,-0.29411165666386896,-0.09725973192386997,0.10351273064203004,0.30011259713022137,0.4846149309005691,0.6495824466120061,0.7883653070441546,0.8953691779011252,0.966280735313788,0.9982415358376617,0.9899632402503239,0.9417795464793974,0.8556327382458394,0.7349953916464517,0.5847303956816812,0.4108949292984098,0.2204962966291583,0.021209462704305765,-0.17893232423300537,-0.3718613528009964,-0.5498006577618181,-0.7055775093329191,-0.832912545779457,-0.926672894358761,-0.9830790773167508,-0.9998573625597098,-0.9763314177489858,-0.913449573243877,-0.8137465949240296,-0.6812415078281324,-0.5212755893359138,-0.3402970623850503,-0.14560116773500806,0.05496390704034409,0.2533133878350353,0.44145181109163556,0.6117953207754585,0.7574773734578834,0.8726255285430085,0.9525981662292544,0.9941715911096558,0.9956699792684812,0.9570329307093656,0.8798179040779438,0.7671374355353656,0.6235336724886027,0.45479527972039513,0.2677240984289793,0.06986096414701677,-0.1308182641861463,-0.32622421093694065,-0.5084800663456827,-0.6702391005686084,-0.8049808102092192,-0.9072737596782703,-0.9729945222524519,-0.9994938953221937,-0.985703689695243,-0.9321797882813909,-0.8410797384636279,-0.7160757814067884,-0.5622068240905128,-0.3856753210708306,-0.19359725366253186,0.006284715123659591,0.20591334717038462,0.3972416163591122,0.5725570840301885,0.7247927872291192,0.8478121078402906,0.9366561395390374,0.9877435812052519,0.9990150990990716,0.9700163385622642,0.9019162390453097,0.7974599141817954,0.6608579963134064,0.4976169059854148,0.3143168882459242,0.11834676310112713,-0.08239391766965311,-0.2798133012863303,-0.4659534163898902,-0.6333109587068653,-0.7751397490927743,-0.8857226718769197,-0.9606021316794067,-0.9967597389907039,-0.9927379813917087,-0.9486989758498591,-0.8664179337874626,-0.7492116023451832,-0.6018045663719015,-0.4301388005050752,-0.24113414829331142,-0.042409383442949006,0.15802490279588433,0.35208920840049596,0.5319608051386479,0.6903890725853453,0.8209877704854547,0.9184924679691456,0.9789727526537646,0.9999906654874317,0.9806989748290965,0.9218753283388448,0.82589090601647,0.6966148379836365,0.5392582399269721,0.36016415313020034,0.1665518566082998,-0.03377414188346666,-0.2327387053992961,-0.4223215764097182,-0.5948806732203067,-0.7434601421301921,-0.8620707477539791,-0.9459312989789216,-0.9916613786819857,-0.9974176082756396,-0.9629679542614369,-0.889701081495633,-0.7805703761369417,-0.6399748947102206,-0.4735820382269677,-0.2880990993652437,-0.09100289163748589,0.1097616408108141,0.30610168373894575,0.49010277398922397,0.6543478313367228,0.7922161408431078,0.8981502337417924,0.967879908891505,0.9985943644978703,0.9890555014768697,0.9396478312038721,0.8523629758678604,0.730719386221321,0.5796205129015606,0.40515714843477674,0.2143619075125313,0.014925742435844571,-0.18511207901641685,-0.3776880363090884,-0.5550393965002682,-0.7100171298491819,-0.8363740870603599,-0.9290168217453065,-0.9842109071434139,-0.9997314707890801,-0.9749528790757903,-0.9108739565341358,-0.8100777232352033,-0.6766272733037614,-0.5159019916763058,-0.3343807112031375,-0.13938055102721852,0.06123803634038388,0.25938811970218795,0.4470822732072589,0.616754549325595,0.7615654620400196,0.8756776863891198,0.9544913609183203,0.9948295080020694,0.9950660977476197,0.9551915932271174,0.8768133349109604,0.7630907488059692,0.6186079900569751,0.4491891557456947,0.2616635156551925,0.06359022454311858,-0.1370463872335979,-0.3321586619139228,-0.5138816276533974,-0.6748900353800308,-0.8086936394362152,-0.9098988192498166,-0.97442599607034,-0.9996740807057876,-0.984625323375375,-0.9298863391825967,-0.8376636554726715,-0.7116747667599206,-0.5569982825990891,-0.37986920893698894,-0.1874276151489072,0.012569182013426232,0.21205931570312309,0.40300134266763177,0.577698393663525,0.729108434099983,0.8511281283106447,0.9388388648908144,0.9887050258236881,0.9987165071710529,0.9684697463223677,0.8991839895954286,0.7936521444419761,0.656128197404809,0.49215573600634116,0.30834448684773563,0.112103877663329,-0.08865563656137133,-0.28584144387013977,-0.471504988360221,-0.6381621763099204,-0.7790950598451318,-0.8886226372821882,-0.9623298541907754,-0.997245574148699,-0.99196234519094,-0.9466931341698869,-0.8632627420658181,-0.7450342462963252,-0.5967734351336345,-0.4244566988758174,-0.23503012167476714,-0.03612948502459625,0.1642275304358657,0.35796453746744217,0.5372720012367546,0.6949220415073613,0.8245597883458534,0.9209595468002506,0.9802354445578128,0.9999980713793203,0.9794507961774733,0.9194218791999066,0.8223310848753574,0.6920921411585215,0.5339549772353566,0.35429409898388237,0.16035163277114994,-0.040054604514041865,-0.23884624150172998,-0.4280099913273014,-0.5999206670628108,-0.7476485528478048,-0.8652387405954183,-0.9479511722168545,-0.9924517112670607,-0.9969465419173449,-0.961254477635142,-0.8868142648094735,-0.7766265869131248,-0.63513310701256,-0.4680374244195872,-0.2820751627185293,-0.08474245691578539,0.11600621561054927,0.3120786799328909,0.4955712589817458,0.6590873706084152,0.7960356836618243,0.9008958144138036,0.9694408531154736,0.9989077506437086,0.9881086969553823,0.9374790016861596,0.8490595468279102,0.7264145188168798,0.5744877362506003,0.39940336466024773,0.2082190515219361,0.008641432629903375,-0.19128452223660405,-0.38349980188218874,-0.5602562122736451,-0.7144287060845758,-0.8398025932089563,-0.9313240547936459,-0.9853038625739967,-0.9995660915906173,-0.9735358316804239,-0.9082623620937007,-0.8063768550687546,-0.6719863133321972,-0.5105080169021912,-0.32845115264044467,-0.13315442906164937,0.06750974685836231,0.2654526062485186,0.4526950764519481,0.6216894172834381,0.7656234702834862,0.8786952566880196,0.9563468550749603,0.9954481310845428,0.99442291307199,0.9533125275546394,0.8737741333408727,0.7590139214920762,0.6136578738258025,0.44356528968236686,0.25559259768690284,0.057316973250363085,-0.14326909721816183,-0.33807999327671384,-0.5192628916470006,-0.679514313361764,-0.8123745268541759,-0.9124879396066792,-0.9758189819769001,-0.9998147809283434,-0.9835080662908036,-0.9275561614013625,-0.8342144864139992,-0.7072456423587645,-0.5517677407704566,-0.374048092716141,-0.18125057361290672,0.01885315244521528,0.21819690830975902,0.40874515121531607,0.5828168853459402,0.733395282620977,0.8544105308930702,0.9409845079529877,0.9896274185371927,0.9983784679042693,0.9668849014312968,0.8964162241455628,0.7898130270026011,0.651372482722222,0.48667512684318287,0.3023599064484472,0.1058565643427465,-0.09491385372972383,-0.29185829627882076,-0.4770379368103886,-0.6429881877614965,-0.7830195978741723,-0.8914875038401351,-0.9640195665646418,-0.9976920200668904,-0.9911475284275285,-0.9446498999721121,-0.8600734531628597,-0.7408274628593198,-0.5917187325178229,-0.41875783204135025,-0.22891681182842985,-0.029848159562604486,0.1704236714112423,0.3638257276388384,0.5425619761469708,0.699427562374809,0.8280992377155244,0.923390249539668,0.9814594190887387,0.9999659793131763,0.9781639311447978,0.9169321147041198,0.8187387832729192,0.6875421080543287,0.528630624371796,0.3484100509171293,0.15414507535971642,-0.046333485066477734,-0.24494434364713935,-0.43368150069159883,-0.604936965218273,-0.7518074329173055,-0.8683725582074893,-0.9499336032469609,-0.9932028439604955,-0.9964360981304339,-0.9595030333466038,-0.8838924207031487,-0.7726521224658103,-0.6302662328057166,-0.46247432405401206,-0.27604008465738816,-0.07847867503361555,0.12224620839282589,0.31804334963246683,0.5010201698837211,0.6638008772245858,0.7998237846358843,0.903605811472115,0.9709635063314586,0.9991816818970402,0.9871228640827812,0.9352731435907732,0.8457225816049225,0.7220809594669144,0.5693322684633809,0.3936338052379385,0.20206797128813475,0.0023567815043463365,-0.19744941009418127,-0.38929641996701475,-0.5654508990279836,-0.7188120637904816,-0.8431979288059974,-0.9335945023726064,-0.9863579004389117,-0.9993612314964744,-0.9720803315334721,-0.9056148930754195,-0.8026441366016904,-0.6673188112222461,-0.5050938780649424,-0.3225086209029156,-0.12692304775790011,0.07377879087404987,0.27150660793871984,0.4582899991310403,0.6265997297314098,0.7696512379049364,0.881678120251608,0.9581645754108068,0.9960274359226812,0.9937404506461192,0.95139580791134,0.8707004194101821,0.754907114620347,0.6086835193149369,0.43792390366203404,0.24951158431345977,0.0510414580498232,-0.14948614835501567,-0.3439879711443783,-0.5246236457771459,-0.6841117518638764,-0.81602332707528,-0.9150410184836817,-0.9771734249519313,-0.9999159904324793,-0.9823519625709809,-0.9251893469751398,-0.8307323675229968,-0.7027885831450372,-0.5465154052007059,-0.36821220233093105,-0.17506637303557018,0.025136378214536986,0.2243258825674392,0.41447281513305423,0.5879123569070804,0.7376531634700139,0.8576591859391142,0.9430929839768802,0.9905107229130644,0.9980009946506054,0.96526186648732,0.8936130520170164,0.785942713501271,0.646591040107035,0.4811752949691971,0.2963633834272574,0.0996050698959502,-0.1011683219874277,-0.2978636208585447,-0.48255204319980893,-0.6477888024436526,-0.7869132081683406,-0.8943171583941518,-0.9656712020606898,-0.9980990591115431,-0.99029356328513,-0.9425693539602771,-0.8568501930492183,-0.7365914181938479,-0.5866406581752549,-0.41304242509570777,-0.22279446021802096,-0.023565655156992337,0.17661308098660142,0.36967254740919825,0.5478305209256926,0.703905457228466,0.8316059787931714,0.9257844801794259,0.9826446279019532,0.9998943905565734,0.9768384305597078,0.9144061331923072,0.8151141430980149,0.682964918388442,0.5232853916377319,0.3425122413382663,0.1479324295208161,-0.05261053553732832,-0.25103277097249777,-0.43933588048914607,-0.6099293695528056,-0.7559366180710926,-0.8714720768105428,-0.9518785137671075,-0.9939147470940213,-0.9958862970764298,-0.9577136905744346,-0.8809356645837468,-0.7686471397785353,-0.6253744643216379,-0.45689295686176457,-0.26999410355554704,-0.07221179339806165,0.12848137269016735,0.32399545724493223,0.5064492914738867,0.6684881650110156,0.803580294142729,0.9062801178771794,0.9724478083976547,0.9994161474381194,0.9860980417975258,0.933030344044761,0.8423522120024827,0.71771887933852,0.5641543131707453,0.3878486980541371,0.19590890976667694,-0.003927962709432974,-0.20360649908821793,-0.3950776616085143,-0.5706232515833803,-0.723167029832892,-0.8465599597424089,-0.9358280748039749,-0.9873729791057301,-0.9991168985982226,-0.9705864361243379,-0.9029316540491052,-0.7988797152690693,-0.6626249513310503,-0.49965978901243124,-0.31655335070881846,-0.12068665324326856,0.08004492077254574,0.2775498856516327,0.46386682025605636,0.631485292721821,0.7736486058154537,0.8846261592626476,0.9599444501294716,0.9965673996350833,0.993018737425935,0.949441510003869,0.8675923145245396,0.7507704904015702,0.6036851230016027,0.4322652205083861,0.24342071572293766,0.04476392681204136,-0.155697295082882,-0.3498823621633776,-0.5299636783045955,-0.6886821692966212,-0.819639895979104,-0.9175579550392334,-0.9784892714975921,-0.9999777052206188,-0.9811570578797376,-0.9227859893884347,-0.8272174363365312,-0.6983037651638008,-0.5412414833467964,-0.36236176828754396,-0.16887525768064257,0.03141861114634629,0.23044599639373578,0.4201841081893485,0.5929846070858354,0.7418819084691463,0.8608739651332993,0.9451642096818246,0.9913549040625198,0.9975841023195149,0.9636007055971125,0.8907745839295714,0.7820413568077478,0.6417840584168157,0.47565645761694997,0.2903551546349971,0.093349641244724,-0.10741879429528882,-0.3038571804107687,-0.4880470897321317,-0.6525638307415292,-0.7907757369377016,-0.8971114891784461,-0.9672846954425639,-0.9984666752054147,-0.9894004834936936,-0.9404515783118548,-0.8535930890373471,-0.7323262796153518,-0.5815394126799017,-0.40731070378620304,-0.21666330866442846,-0.017282219954326633,0.18279551469244595,0.37550476584064746,0.5530774274757698,0.7083555492002833,0.8350798730694274,0.9281421441521047,0.9837910241840393,0.9997833079371261,0.9754743467768675,0.9118440344357649,0.8114573075168103,0.6783607529508346,0.5179194901593677,0.33660090319917785,0.141713940641782,-0.058885507995446486,-0.2571112829968669,-0.44497290738306916,-0.6148976828762344,-0.7600359452144884,-0.8745371739796872,-0.9537858269571543,-0.9945873925488683,-0.9952971604713966,-0.9558865199941523,-0.8779441132373496,-0.7646117970402293,-0.6204579947755737,-0.451293543295877,-0.2639374582173399,-0.0659420595386218,0.13471146222585503,0.3299347676737303,0.5118584093126248,0.6731490488290353,0.8073050638076174,0.9089186279991328,0.973893700687048,0.9996111380060173,0.9850342705780795,0.9307506916343067,0.8389485711435491,0.7133284507252867,0.5589540748917488,0.3820482716091657,0.18974211022842716,-0.010212551776406816,-0.20975554602574664,-0.4008432984590334,-0.5757730656420654,-0.7274934321992291,-0.8498885532245702,-0.9380246838660307,-0.9883490584808425,-0.9988331025465302,-0.96905420445894,-0.9002127509974368,-0.7950837397581342,-0.6579049190568588,-0.494205964380456,-0.31058557727965946,-0.11444549184307863,0.08630788905400849,0.28358220068968093,0.46942531955355,0.6363459132845377,0.7776154161268815,0.8875392572793732,0.9616864089294062,0.997068000894244,0.9922578019176881,0.9474497110231604,0.8644499414479855,0.7466042122242802,0.5986628823126059,0.4265894637282711,0.23732023249263118,0.03848462748714696,-0.16190229207364681,-0.3557629335168537,-0.5352827783085495,-0.6932253851375042,-0.8232240907182611,-0.9200386498592881,-0.9797664696405342,-0.999999922855149,-0.9799233994134549,-0.9203461835691695,-0.8236698316874587,-0.6937913655565799,-0.5359461835182625,-0.35649702166662356,-0.16267747208501004,0.037699603104763516,0.23655700805616958,0.42587880479937623,0.5980334355383171,0.7460813505912882,0.8640547414981452,0.9471981032584814,0.9921599286420592,0.9971278073774232,0.9619014843732712,0.8879009319971314,0.778109111017978,0.6369517275179238,0.4701188327696679,0.28433545738489263,0.08709052546614622,-0.11366502377192404,-0.3098387382016996,-0.4935228593638084,-0.6573130840508741,-0.7946070316199533,-0.8998703858224639,-0.968859982980451,-0.9987948538283931,-0.9884683243281114,-0.9382966566748154,-0.8503022697764517,-0.7280322155883917,-0.5764151975209323,-0.40156289450462535,-0.2105235993360307,-0.010998102137931752,0.18897072833481182,0.3813221525719835,0.5583024885546726,0.7127776625204262,0.8385207833322739,0.9304631483346334,0.984898562654595,0.9996327358423809,0.974071733674908,0.9092459196323628,0.8077684209670809,0.6737297935970219,0.5125331318792877,0.33067626998608657,0.13548985434064442,-0.0651581545917696,-0.263179639630971,-0.45059235872184883,-0.6198417089499497,-0.7641052524321013,-0.8775677286496304,-0.9556554674819839,-0.9952207537568558,-0.9946687115850693,-0.9540215937754075,-0.8749178848242997,-0.7605462536390255,-0.6155170183584289,-0.4456763045221652,-0.25787038786842015,-0.05966972109744427,0.1409362309235853,0.33586104632784164,0.5172473097504015,0.6777833445828754,0.810997946509495,0.911521237622036,0.9753011260897385,0.9997666458989907,0.9839315924413216,0.9284342764011886,0.8355117934652684,0.7089098470404845,0.5537317590255453,0.37623275500853215,0.18356781624978874,-0.01649673746764702,-0.21589630803161233,-0.40659310278721134,-0.5809001377964838,-0.7317911000051233,-0.8531835777795673,-0.9401842427970389,-0.9892861000110305,-0.9985098545507841,-0.9674836970574235,-0.8974582913117402,-0.7912563600024296,-0.6531589008316894,-0.4887326195844303,-0.3046055363307307,-0.10819981007092268,0.09256744834353102,0.289603314788238,0.47496527747368816,0.6411813994346354,0.7815515121579837,0.8904172992401659,0.9633903830066586,0.9975292199273929,0.9914576741768364,0.9454204896413592,0.8612734242980433,0.742408444648294,0.5936169956166378,0.4208968575029116,0.23121037557966312,0.03220380809510534,-0.16810089424212676,-0.3616294529338379,-0.5405807356950144,-0.6977412199383797,-0.8267757697241374,-0.9224830049612823,-0.9810049689339441,-0.999982642458517,-0.9786510358992253,-0.9178700258848335,-0.8200896936992133,-0.6892515625542478,-0.5306297148690255,-0.35061819411418577,-0.15647326104900597,0.04397910600295344,0.24265867618186196,0.43155668003380293,0.6030586428456695,0.7502513239667313,0.8672013893992673,0.9491945843720575,0.9929257648547943,0.9966321278470871,0.960164269931694,0.8849922097233179,0.7741461314479049,0.6320942382778869,0.4645626391526719,0.2783045294431654,0.0808279697830426,-0.11990676370361839,-0.3158080579715227,-0.4989791358126782,-0.6620363747855604,-0.7984069408864697,-0.9025937393551985,-0.9703970024535793,-0.9990835820180668,-0.98749712260684,-0.9361046741643421,-0.8469778652474017,-0.7237093957200749,-0.5712682150947959,-0.3957992242780773,-0.20437557473933235,-0.004713549918122389,0.19513847800485748,0.38712447782791876,0.5635054977828304,0.7171716225240312,0.8419285736725507,0.9327474010518884,0.98596719956804,0.999442680219638,0.9726306466542959,0.9066118914025106,0.8040476291526604,0.6690722232407529,0.5071265295480072,0.3247385757103711,0.12926041645660505,-0.0714282275690453,-0.26923760118669315,-0.45619401254827996,-0.6247612524946182,-0.7681443789943326,-0.8805636211193928,-0.9574873614944666,-0.995814805701466,-0.9940009752399479,-0.9521189855790982,-0.8718570988747322,-0.7564506701558593,-0.6105517302290366,-0.4400414624105311,-0.25179313214607135,-0.05339502581960996,0.14715543291727334,0.341774059130802,0.5226157799362187,0.6823908692270056,0.8146587963867375,0.9140878439479129,0.9766700290151802,0.9998826649747825,0.9827900509408556,0.9260811898392708,0.8320420147135714,0.7044632428103127,0.5484875718434284,0.3704023779536443,0.17738627170329233,-0.02278027157024322,-0.22202854255766222,-0.41232684748713216,-0.5860042655374105,-0.7360598635010766,-0.8564449032604373,-0.9423066662986527,-0.9901840666850016,-0.9981471673786445,-0.9658749759517511,-0.8946683837877394,-0.7873977271759494,-0.6483870841138895,-0.48323997081065234,-0.2986134640619346,-0.10194985461896708,0.09882335140078391,0.29561299012518766,0.48048647519909843,0.6459915601798402,0.78545673844074,0.8932601714679999,0.9650563050576212,0.9979510385172887,0.9906183858068568,0.9433539260087066,0.8580628885409535,0.7381833533981448,0.5885476622162699,0.4151876266790758,0.22509138631137082,0.025921716715978326,-0.17429285675576336,-0.36748168869831904,-0.545857341205064,-0.7022294953327013,-0.8302947927123616,-0.924890923797989,-0.9822047204595261,-0.9999258647132646,-0.9773400175928891,-0.915357614138838,-0.8164771637801751,-0.6846845354701397,-0.5252922873891581,-0.3447255178322958,-0.15026286962681226,0.05025687181293837,0.24875075976680616,0.4372175096276928,0.6080600305221391,0.7543916638897147,0.8703137845502443,0.9511535741654599,0.9936523824517055,0.9960970833068664,0.9583891308889445,0.8820485319969168,0.770152574627467,0.627211782558003,0.4589880962246371,0.272262609019641,0.07456222155396675,-0.1261437675538016,-0.32176490394389545,-0.5044157035665722,-0.6667335163848676,-0.8021753146483394,-0.9052814422095268,-0.9718956931527151,-0.9993328483702388,-0.9864869166904429,-0.9338757173594152,-0.8436200067576556,-0.7193579907532882,-0.566098668697157,-0.3900199207602549,-0.1982194777091357,0.0015711884776144658,0.20129852008865126,0.39291151242795935,0.5686862496515127,0.7215372556583758,0.8453031094892075,0.9349948120804082,0.9869968927152978,0.9992131485757227,0.9711511426351227,0.9039420537851572,0.8002950790374609,0.6643882258469431,0.5016998967157386,0.3187880548992832,0.12302587304024276,-0.0776954792717733,-0.2752849283864332,-0.46177764760794676,-0.6296561191979854,-0.7721531653635867,-0.8835247330571517,-0.9592814366383818,-0.996369524918817,-0.9932939778102994,-0.9501787705545426,-0.8687618762836339,-0.7523252083582643,-0.6055623265064722,-0.4343892395261612,-0.24570593109000294,-0.04711822154319085,0.15336882256063794,0.34767357253030967,0.527963607826106,0.6869714407732183,0.8182874688429715,0.9166183456008479,0.9780003553944109,0.9999591906508685,0.9816096911653474,0.9236915248908256,0.8285393719379297,0.6999888136668367,0.5432217204804356,0.3645573707329872,0.17119772074773995,-0.02906290589683681,-0.22815200739277045,-0.4180443060870997,-0.5910852472618101,-0.7402995540793804,-0.8596724008512054,-0.9443918705393348,-0.9910429230348332,-0.9977450553555437,-0.9642281046832294,-0.8918431386213098,-0.7835079936871047,-0.643589657380882,-0.4777282350080009,-0.2926095971482654,-0.09569587234819439,0.1050753511299508,0.3016109893301135,0.48598869465322425,0.6507762055283237,0.7893309407263541,0.8960677616750488,0.9666841092816177,0.9983334400029279,0.9897399699579824,0.9412501017504131,0.8548184609865237,0.7339291053566697,0.583455082340183,0.40946199676015815,0.21896350637582954,0.01963860147996929,-0.1804779350441814,-0.3733194096584887,-0.5511123864232012,-0.7066900340423732,-0.8337810206884912,-0.927262311261337,-0.9833656768294643,-0.9998295918620015,-0.9759903962771159,-0.9128090475664741,-0.8128323846182075,-0.6800904646927857,-0.5199341118965779,-0.3388192255701365,-0.14404654311662554,0.05653265257528117,0.25483301818575904,0.44286106998943064,0.6130374010226994,0.7585022068249504,0.8733918040175727,0.9530749952624604,0.9943397527328223,0.9955226948899785,0.9565761373595094,0.879070015087438,0.7661285982942537,0.6223045532056974,0.4533954241691013,0.2662099347582443,0.06829352826376991,-0.13237578897316687,-0.32770904083505803,-0.5098323478918,-0.671404323320936,-0.8059120040621723,-0.9079333882264938,-0.9733559958825148,-0.9995426430393807,-0.9854377464800588,-0.9316098742994672,-0.8402288269360227,-0.7149781725599939,-0.5609067625149128,-0.38422521222220757,-0.19205555139928326,0.007855864814523503,0.20745061127658446,0.3986830277956931,0.5738445395312753,0.7258743894894933,0.8486442574947437,0.9372052926518349,0.9879876014255272,0.9989441499766828,0.9696332800548954,0.9012365122336402,0.7965109188398691,0.6596779864242395,0.49625344772376223,0.31282494258672433,0.11678647034371031,-0.0839596621557748,-0.2813213823726546,-0.4673430433582914,-0.6345261157223943,-0.7761314532007364,-0.8864509475047528,-0.9610376220513046,-0.9968848894985856,-0.9925477472211354,-0.9482010253363939,-0.8656323393062406,-0.7481700311938344,-0.6005490042624648,-0.428719859120774,-0.23960902513263538,-0.04083955618964534,0.1595761544370024,0.35355935350712925,0.533290582191326,0.6915248782980038,0.8218838205527519,0.9191126426310229,0.9792920526821417,0.9999962199046342,0.9803905597366721,0.9212653759429423,0.8250040034857995,0.6954867363412931,0.5379344129273202,0.35869796421280326,0.16500240781875694,-0.03534439229580748,-0.2342664606720581,-0.4237452527587902,-0.5961428822808928,-0.7445100042805533,-0.8628659430720906,-0.9464397731576074,-0.9918626351373878,-0.9973035343641147,-0.9625431483000509,-0.8889826674040815,-0.7795873131727398,-0.6387668101215489,-0.4721976298791805,-0.2865941727307724,-0.08943811027855374,0.11132320058927594,0.30759707549391907,0.4914717185092635,0.6555351464959573,0.7931739659914865,0.8988399589669679,0.9682737313836038,0.9986764092802001,0.9888224613259163,0.9391090999634011,0.8515402697832941,0.7296458685582646,0.5783394571352941,0.40372019389731106,0.21282697781219512,0.013354710557835589,-0.186655884808947,-0.3791423852358183,-0.5563456637854225,-0.7111226598849454,-0.8372343159533112,-0.9295970736862045,-0.9844877921882538,-0.9996938277073143,-0.9746022252592765,-0.9102244268311345,-0.8091555001748892,-0.6754695316790333,-0.5145554000286351,-0.3328995506145881,-0.13782452705115106,0.06280620040897861,0.2609052112014146,0.4484871382095016,0.6179905577510674,0.7625827904140547,0.8764353262255615,0.9549587717706856,0.99498784854837,0.9949089852836318,0.9547253609530855,0.8760567766404038,0.7620743613874928,0.6173727440468384,0.4477848438855914,0.2601467457277376,0.06202213751342911,-0.13860258180906268,-0.33364023386334185,-0.5152288548414607,-0.6760486111060526,-0.809616861536116,-0.9105494726594329,-0.9747778529638912,-0.9997129577390134,-0.984349653415853,-0.9293072344808241,-0.83680445972744,-0.710570114134361,-0.5556927016181981,-0.37841532754363627,-0.18588403927269162,0.014140230860215354,0.21359450857320456,0.40443879596753013,0.5789801636797616,0.7301828527091435,0.8519518857203658,0.9393787554565516,0.9889392865676772,0.9986356950474328,0.9680771188662017,0.8984953736115447,0.7926952980267572,0.6549416910178607,0.4907873976961559,0.3068494743038547,0.1105424548112053,-0.0902205287982249,-0.28734672471726386,-0.4728899799771221,-0.6393710497125998,-0.7800790853711786,-0.8893421488825178,-0.9627558483673474,-0.9973608790848861,-0.9917623129471008,-0.9461858280417091,-0.8624686115530826,-0.743985302783899,-0.5955119615133656,-0.4230335451237251,-0.23350265508979626,-0.034559277753940756,0.16577718336895989,0.35943116958453564,0.5385964926268872,0.6960510019494486,0.8254477094673043,0.921570636518597,0.9805450698588807,0.9999937512734969,0.9791327048081355,0.9188028388237021,0.8214360489973489,0.6909571886568454,0.5326258580223607,0.3528243898281846,0.15880057761902525,-0.04162448266079054,-0.24037166088666814,-0.4294294623259913,-0.6011769708279721,-0.7486910478001269,-0.8660254037844524,-0.9484502932653246,-0.9926431706156454,-0.996822621843564,-0.9608201733546654,-0.8860870831190446,-0.7756358404919924,-0.6339187328289198,-0.4666483738721715,-0.2805674284068408,-0.08317681557937368,0.11756665300104419,0.313571012177833,0.496935330198577,0.660268195113992,0.7969856624441761,0.9015766538474393,0.9698251085766236,0.998979932802496,0.9878658961504458,0.9369310052130423,0.8482284444133582,0.7253338121823827,0.5732009886587661,0.39796244488040844,0.20668204300128257,0.007070292150887426,-0.19282646203316112,-0.3849503854342982,-0.5615569665876071,-0.7155271977803502,-0.8406545421084632,-0.9318951188540443,-0.9855710222145587,-0.9995185776116229,-0.9731755593694033,-0.9076038540202341,-0.8054466556799612,-0.6708219189465906,-0.5091563642338749,-0.32696672678125493,-0.1315970671878204,0.06907726752116702,0.2669670989741401,0.45409549206927047,0.6229193050671552,0.766633253482016,0.879444230961053,0.9568048292846835,0.9955966442998377,0.9942559787281466,0.9528368747716943,0.873008935672864,0.757990024041536,0.6124165498782153,0.442156576980974,0.25407328141222374,0.05574829701060743,-0.14482390011549695,-0.33955824875825497,-0.5206050112641876,-0.6806661963000217,-0.8132897407355497,-0.9131295921781515,-0.9761612082362785,-0.9998437857420421,-0.9832226804753678,-0.9269678888532531,-0.833347040387696,-0.7061339895860319,-0.5504566919521452,-0.3725904962035125,-0.17970518509190198,0.020424038394556542,0.21972996930664582,0.41017858960189063,0.5840929192499363,0.7344624751415371,0.8552258635212464,0.9415151146470692,0.9898519105520512,0.9982877959713388,0.9664827205343572,0.8957187461884204,0.7888483673076115,0.6501795267021867,0.4853019625310763,0.30086188606997893,0.10429407306898206,-0.09647783190708553,-0.2933607174311105,-0.4784182383713965,-0.6441907298031895,-0.7839959059512032,-0.8921982229936753,-0.9644360477199564,-0.9977974748770697,-0.9909377060112947,-0.9441332582668293,-0.8592708179851865,-0.7397711884170991,-0.5904513972123702,-0.4173305221331877,-0.22738706215112608,-0.02827763429464439,0.17197166442802955,0.36528878883728344,0.5438811295598056,0.7005496329546478,0.8289789948199581,0.9239922301776327,0.9817593574329011,0.9999517848549626,0.9778361760625174,0.9163040107985247,0.8178356493997344,0.6864003495216819,0.5272962654430643,0.34693687957369346,0.15259247510861823,-0.047902928940419934,-0.24646736689324866,-0.4350967102735732,-0.6061873140665599,-0.7528425194951008,-0.8691506581957328,-0.9504233514509398,-0.9933844986399992,-0.9963023367889995,-0.9590592479011957,-0.8831565001360995,-0.7716537317203014,-0.6290456169924514,-0.4610806861717778,-0.2745296022209694,-0.07691223555951478,0.1238054617611021,0.3195325634232619,0.5023793139192431,0.6649751644361837,0.8007658795298891,0.9042777382224193,0.971338179584321,0.9992439985812327,0.9868703122140287,0.9347159035297881,0.8448831156872775,0.7209931065467936,0.5680398798699325,0.39218897712927003,0.2005289446560764,0.0007855944812411758,-0.19898942299123717,-0.39074318084923293,-0.5667460889934917,-0.7199034737579603,-0.8440415640617992,-0.9341563559966206,-0.9866153241229029,-0.9993038484969604,-0.971710454958001,-0.9049474326412713,-0.8017059976254397,-0.6661478100670236,-0.5037372177637203,-0.3210209884048815,-0.12536440949902816,0.07534560621716488,0.2730184420712849,0.4596859100496581,0.6278234482953109,0.7706534360435419,0.8824183993782112,0.9586130948888106,0.9961661159409878,0.9935637010160039,0.9509107534068103,0.8699266125685181,0.7538757475796422,0.607436166459777,0.4365108457607787,0.2479897817014665,0.04947225455958656,-0.15103949816251389,-0.34546285176981584,-0.5259606048124185,-0.6852568965172634,-0.8169304965890148,-0.9156736448729893,-0.9775060070598695,-0.9999351218810186,-0.9820568721718141,-0.9245919298162759,-0.8298567054780112,-0.7016699741333063,-0.5451989403287953,-0.36675094827117083,-0.17351923290961987,0.02670703921958736,0.22585675113813178,0.41590218198839096,0.5891826042980514,0.7387130877499235,0.8584660615817422,0.9436142858413606,0.9907254373318005,0.9979004664897253,0.9648501480349397,0.8929067396356424,0.7849702786287028,0.6453916815733249,0.4797973588925285,0.2948624143829807,0.09804157191594944,-0.10273132433124109,-0.2993631229733586,-0.48392760018567543,-0.6489849656263396,-0.7878817602341498,-0.8950190570288483,-0.9660781537445748,-0.9981946596304527,-0.9900739589840848,-0.9420433970841974,-0.8560390849091848,-0.7355278545425159,-0.5853675112418885,-0.4116110154074622,-0.22126248787044095,-0.021994873924438118,0.17815935294441465,0.3711319799010063,0.5491442842572151,0.7050205936263982,0.8324775371319159,0.926377327959952,0.9829348674422471,0.9998703223066221,0.9765010247101901,0.9137689905661831,0.8142029469016296,0.681816398922073,0.5219458456977887,0.34103566599457114,0.14637834549552167,-0.054179483148636895,-0.25255333792328505,-0.4407467727564596,-0.6111737140978343,-0.7569642553904111,-0.8722415828646392,-0.9523588697825056,-0.9940865899294361,-0.9957426997506541,-0.957260441492776,-0.8801910342075001,-0.7676411441430808,-0.624147655090728,-0.4554947866906685,-0.26848093265553263,-0.07064461765754465,0.13003938044885247,0.32548149376056956,0.5078034546444837,0.6696558685466671,0.804514467937499,0.906943105404336,0.9728128846433858,0.9994685961863259,0.9858357488402414,0.93246388240578,0.8415044157390207,0.7166239231007779,0.5628563346225384,0.3864000186844965,0.19436792581164294,-0.005499134217785927,-0.20514452425822094,-0.3965205426766435,-0.5719128260429652,-0.7242513149636155,-0.8473952480325634,-0.9363806957994707,-0.9876206566654236,-0.9990496488447023,-0.9702069698938076,-0.9022552676176321,-0.7979336737600321,-0.6614473896585512,-0.49829817466360793,-0.31506257033058005,-0.1191268001624445,0.08161096890983081,0.27905900147655577,0.46525817134034614,0.6327027937314281,0.7746431793092511,0.8853577140032707,0.9603834971600903,0.9966962409788125,0.9928321794908029,0.9489470729364757,0.8668099290730413,0.7497316945077181,0.6024317905068564,0.43084787322021356,0.24189648688182797,0.04319425805181945,-0.15724913044626548,-0.3513538096778396,-0.5312954239506393,-0.6898205304342058,-0.8205389852937462,-0.9181815302588776,-0.9788121963177657,-0.9999869625483432,-0.980852274552317,-0.9221794512156248,-0.8263335928598482,-0.6971782440958582,-0.5399196544190971,-0.36089691439738086,-0.16732642705868436,0.03298898516895581,0.23197461207204567,0.4216093470562792,0.5942490177914603,0.7429345226434992,0.861672351920341,0.9456761861263098,0.9915598324043416,0.9974737219013485,0.9631794658513984,0.8900594650219168,0.7810611851668758,0.6405783447417026,0.4742738042014357,0.2888512962103609,0.09178519831355537,-0.10898075907009037,-0.3053537042606803,-0.4894178478110971,-0.6537535678190728,-0.791736494736308,-0.8978045395707399,-0.9676821015812131,-0.9985524176570255,-0.9891711059817735,-0.9399163270392794,-0.8527735399720644,-0.7312554687635717,-0.5802605044054686,-0.40587525085576925,-0.2151291741564961,-0.01571124479994915,0.18434000451663837,0.3769605119810381,0.5543857488348992,0.7094637073707042,0.8359431982176337,0.9287258356589021,0.9840715534565729,0.9997493668460884,0.9751273034869592,0.9111978782549695,0.8105380849877079,0.6772055179149734,0.5165748101177414,0.33512098217694003,0.14015843422541482,-0.060453897373718236,-0.2586293335929955,-0.44637942660818697,-0.6161359739688416,-0.7610560926857411,-0.8752980557056664,-0.9542567718108359,-0.9947494167527373,-0.9951437328330905,-0.9554238251786584,-0.8771908024632938,-0.7635982362497249,-0.6192250405835724,-0.44989089606084176,-0.26242165862103334,-0.06437420943199287,0.1362681628367053,0.3314175682185948,0.5132075381315993,0.6743101225667041,0.8082312796051663,0.9095726501164734,0.9742491655058276,0.9996537167466198,0.9847622468923214,0.9301750307914662,0.8380924780205331,0.7122264344185721,0.5576505576563846,0.3805957981985142,0.18819922981628234,-0.011783645711878414,-0.21129152271976775,-0.40228224272209484,-0.5770569736601177,-0.7285705496660558,-0.8507154615568018,-0.9385680504055655,-0.9885869801334705,-0.9987559886952397,-0.9686651635615134,-0.8995274652845915,-0.7941298330830818,-0.6567208433783693,-0.4928394497651955,-0.30909170790404356,-0.11288448555143271,0.0878731081295416,0.2850885385999491,0.47081205584786623,0.6375571486509102,0.7786023256921997,0.8882620587390023,0.962115966171177,0.9971869984744193,0.992061443046219,0.9469459109221918,0.8636590082893614,0.7455580285076769,0.59740361968242,0.4251678830356128,0.23579363762658584,0.03691455545577018,-0.16345255169848338,-0.35723088980112233,-0.5366092579640779,-0.6943569177961566,-0.8241150643215667,-0.9206531492792959,-0.9800797244180356,-0.9999993056964125,-0.9796089351961366,-0.9197305483395067,-0.8227778416891024,-0.6926589768883153,-0.5346190427443704,-0.3550286258049201,-0.16112701214292088,0.03926962811837317,0.23808331046479617,0.4272998593837029,0.5992919596168358,0.7471266130839224,0.8648446078949067,0.9477007340609268,0.9923550628126944,0.9970075790617896,0.9614707399723349,0.8871770348089938,0.777121241323602,0.6357397063247057,0.4687315166275003,0.28282876897925313,0.0855251993762018,-0.11522588928313325,-0.3113322246769993,-0.4948887643935243,-0.65849634803102,-0.795559957203382,-0.9005545605981892,-0.9692478278771137,-0.9988707348260428,-0.9882291826652796,-0.9377521321470834,-0.849474312156489,-0.7269541998311454,-0.5751305784197958,-0.40012345502953345,-0.20898736326307105,-0.00942699511211877,0.19051337502100166,0.3827741548618722,0.5596053162653581,0.713878798693186,0.8393758411903426,0.931037660513024,0.985169370578996,0.99958892325086,0.9737150666521492,0.9085907754188124,0.8068412084127439,0.6725678886212443,0.5111833708480753,0.32919306173929047,0.13393298697273448,-0.06672592378874977,-0.2646951139123852,-0.45199444935005195,-0.6210738976801161,-0.7651178697614502,-0.8783199559941186,-0.956116982572549,-0.9953729529295462,-0.9945054596943187,-0.9535494715016092,-0.874155923406791,-0.7595251677271116,-0.6142779679045359,-0.4442692356250627,-0.2563520194468297,-0.058101258551828225,0.14249156289988812,0.33734055233428034,0.5185913509297685,0.6789377426624942,0.8119161677261022,0.9121662684969136,0.9756469654414279,0.9997993529502118,0.9836498487714953,0.9278494390919659,0.8346474372967403,0.707800814192295,0.5524227545893804,0.3747765449267272,0.18202310032130434,-0.018067691775072624,-0.21743017558152208,-0.40802805340981335,-0.5821783286611834,-0.7328610072639239,-0.8540020734926375,-0.9407183334186977,-0.9895142563591486,-0.9984228796475662,-0.9670850968594801,-0.8967641333849551,-0.7902946258387831,-0.6519683579158925,-0.4873612586772871,-0.30310863696270857,-0.10663771222526192,0.09413177653433469,0.2911068152864376,0.4763473442046481,0.6423863213163246,0.7825307188137817,0.8911313188696036,0.9638104334929182,0.997638369043843,0.9912515221248203,0.9449073464059057,0.860473974672627,0.7413549144310827,0.5923518525894221,0.4194710995555263,0.229681474986068,0.030633394807346708,-0.16964951689627877,-0.3630938600064989,-0.5419018969665926,-0.6988658794248968,-0.8276585924244163,-0.9230884043101066,-0.9813085412958338,-0.9999721508376964,-0.9783269032127222,-0.9172453179146827,-0.819189592411051,-0.6881123510127669,-0.5292973146684526,-0.3491463142796522,-0.15492123302680758,0.045548719994675704,0.24418260503475003,0.4329734942066632,0.6043112305878893,0.7512891934917855,0.8679827042075924,0.9496878496795116,0.9931110971468288,0.9965020563827576,0.9597240378891082,0.8842595628471739,0.7731506027189534,0.6308759574391279,0.46317071507998575,0.27679507056780744,0.07926182236165415,-0.12146646830011588,-0.3172984480823496,-0.5003401338427046,-0.6632131189317286,-0.7993519966160163,-0.9032690114908212,-0.9707752707891374,-0.9991495985646055,-0.9872482262387133,-0.9355508978890917,-0.8461415317755022,-0.7226242176368656,-0.5699779359068617,-0.3943558551133308,-0.20283729777956694,-0.003142373076569799,0.1966792206215611,0.38857267891609565,0.5648027803858442,0.7182656932064956,0.8427753304673613,0.9333127112097395,0.9862282754479378,0.9993889978581473,0.9722643699863136,0.9059477850331259,0.8031124631961959,0.6679036942179585,0.5057717408401399,0.3232521388228805,0.12770224963035298,-0.07299531466090411,-0.2707504392951106,-0.4575916191997448,-0.625987290193289,-0.7691494261853655,-0.8813071643709024,-0.9579394285929765,-0.9959571738314146,-0.9938279055448782,-0.9516374544949489,-0.8710865169097215,-0.7554220994534036,-0.6093066324533539,-0.43863002742776586,-0.25027225487190236,-0.05182601278605222,0.1487093348265576,0.343250212161236,0.5239546803890666,0.6835385460520568,0.815568986754404,0.9147238581029231,0.9770062292398105,0.9999054990447573,0.9824985984152929,0.9254871991635796,0.8311694296398542,0.7033472372252054,0.5471731319095647,0.3689424887181479,0.17583978127162705,-0.024351024199959027,-0.22356024037881866,-0.4137577477915198,-0.5872766887626155,-0.737122518292734,-0.8572549540253598,-0.9428314599069345,-0.9904024487168864,-0.9980503348588434,-0.965466832197179,-0.8939653810648753,-0.7864282035103525,-0.6471901209848682,-0.4818638177777607,-0.29711359382606173,-0.10038672691897264,0.10038672691894145,0.2971135938260318,0.48186381777773324,0.6471901209848443,0.786428203510333,0.8939653810648868,0.9654668321971708,0.998050334858838,0.990402448716883,0.9428314599069451,0.8572549540253759,0.7371225182927552,0.5872766887626869,0.4137577477914966,0.22356024037884922,0.02435102419999037,-0.17583978127165215,-0.36894248871806595,-0.5471731319095385,-0.7033472372252235,-0.8311694296398368,-0.9254871991635677,-0.9824985984152764,-0.9999054990447578,-0.9770062292398051,-0.9147238581029358,-0.8155689867544222,-0.6835385460520796,-0.5239546803890932,-0.34325021216126544,-0.14870933482653237,0.05182601278602091,0.250272254871817,0.43863002742773766,0.6093066324533291,0.7554220994534203,0.8710865169096782,0.9516374544949218,0.993827905544881,0.9959571738314175,0.9579394285929855,0.8813071643708903,0.7691494261854218,0.6259872901933135,0.45759161919977265,0.2707504392951408,0.07299531466093538,-0.1277022496302655,-0.32325213882285087,-0.5057717408401619,-0.667903694217935,-0.8031124631961434,-0.9059477850331127,-0.9722643699863063,-0.9993889978581463,-0.986228275447943,-0.9333127112097712,-0.8427753304673475,-0.7182656932065175,-0.5648027803858701,-0.3885726789160721,-0.19667922062164758,0.0031423730765384483,0.2028372977795919,0.394355855113302,0.569977935906836,0.7226242176368046,0.8461415317754855,0.9355508978891008,0.9872482262387083,0.9991495985646068,0.9707752707891449,0.9032690114908346,0.7993519966160352,0.6632131189317095,0.5003401338427318,0.31729844808243324,0.121466468300147,-0.0792618223616229,-0.2767950705677773,-0.463170715079958,-0.6308759574390596,-0.7731506027189695,-0.8842595628471592,-0.9597240378890994,-0.9965020563827597,-0.9931110971468391,-0.9496878496795214,-0.867982704207608,-0.7512891934918061,-0.6043112305879142,-0.4329734942067427,-0.24418260503478043,-0.04554871999465024,0.1549212330267766,0.3491463142796228,0.529297314668426,0.6881123510127442,0.8191895924110331,0.9172453179146701,0.9783269032127158,0.9999721508376958,0.9813085412958398,0.9230884043101187,0.827658592424402,0.6988658794249193,0.5419018969666667,0.36309386000647514,0.1696495168963097,-0.030633394807315372,-0.22968147498603747,-0.4194710995554462,-0.5923518525893968,-0.7413549144310617,-0.860473974672611,-0.944907346405914,-0.9912515221248086,-0.9976383690438452,-0.9638104334929114,-0.8911313188696178,-0.7825307188138012,-0.6423863213163922,-0.47634734420467567,-0.29110681528646765,-0.0941317765343659,0.10663771222523075,0.3031086369626787,0.48736125867725966,0.6519683579158687,0.7902946258387987,0.8967641333849412,0.9670850968594576,0.9984228796475644,0.989514256359153,0.9407183334187084,0.8540020734926833,0.732861007263984,0.5821783286611627,0.408028053409842,0.2174301755815527,0.01806769177510397,-0.1820231003212176,-0.3747765449266981,-0.5524227545893542,-0.7078008141922729,-0.8346474372966918,-0.9278494390919331,-0.9836498487714896,-0.9997993529502113,-0.9756469654414347,-0.9121662684969498,-0.8119161677260873,-0.6789377426625172,-0.5185913509297952,-0.3373405523343098,-0.14249156289997542,0.058101258551740184,0.2563520194467994,0.4442692356250346,0.614277967904556,0.7595251677270543,0.8741559234067757,0.953549471501617,0.9945054596943155,0.9953729529295492,0.9561169825725748,0.8783199559941336,0.7651178697614704,0.6210738976801407,0.45199444935007993,0.2646951139124154,0.06672592378878105,-0.1339329869727034,-0.3291930617393145,-0.5111833708480483,-0.672567888621179,-0.8068412084127589,-0.9085907754187993,-0.9737150666521421,-0.999588923250859,-0.9851693705790112,-0.9310376605130147,-0.8393758411903597,-0.713878798693208,-0.5596053162653369,-0.38277415486195365,-0.19051337502103244,0.009426995112144261,0.2089873632630404,0.40012345502950475,0.5751305784197236,0.7269541998311239,0.8494743121565025,0.9377521321470725,0.9882291826652747,0.9988707348260443,0.9692478278771214,0.9005545605982027,0.7955599572033666,0.6584963480310435,0.49488876439360097,0.3113322246770291,0.11522588928316439,-0.08552519937622721,-0.2828287689792231,-0.46873151662742235,-0.6357397063247253,-0.7771212413235823,-0.8871770348089794,-0.9614707399723419,-0.9970075790617828,-0.9923550628126983,-0.9477007340609368,-0.8648446078949223,-0.7471266130839055,-0.5992919596169064,-0.4272998593837313,-0.2380833104647714,-0.039269628118404495,0.16112701214288994,0.3550286258048908,0.534619042744344,0.6926589768882927,0.8227778416890845,0.9197305483394944,0.9796089351961302,0.9999993056964124,0.9800797244180418,0.9206531492792859,0.8241150643216166,0.69435691779622,0.5366092579640565,0.3572308898011516,0.16345255169851433,-0.03691455545568205,-0.23579363762650013,-0.4251678830356359,-0.5974036196823947,-0.7455580285076561,-0.8636590082893455,-0.9469459109221635,-0.992061443046215,-0.9971869984744174,-0.9621159661711856,-0.8882620587390428,-0.7786023256922194,-0.6375571486509343,-0.47081205584784375,-0.2850885385999791,-0.08787310812962945,0.11288448555145805,0.30909170790401375,0.4928394497651682,0.6567208433783885,0.7941298330830282,0.8995274652845777,0.9686651635615057,0.9987559886952382,0.9885869801334667,0.9385680504055959,0.8507154615568182,0.7285705496660384,0.5770569736601432,0.40228224272212354,0.2112915227197984,0.011783645711909764,-0.18819922981625153,-0.38059579819848516,-0.5576505576563585,-0.71222643441855,-0.838092478020516,-0.9301750307914548,-0.9847622468923258,-0.9996537167466206,-0.9742491655058475,-0.9095726501164628,-0.8082312796051847,-0.6743101225667273,-0.5132075381316262,-0.331417568218678,-0.13626816283668003,0.06437420943196158,0.2624216586210031,0.4498908960608645,0.6192250405835031,0.7635982362497047,0.877190802463306,0.9554238251786492,0.9951437328330874,0.9947494167527463,0.9542567718108452,0.8752980557056541,0.7610560926857615,0.6161359739688662,0.446379426608215,0.25862933359302576,0.06045389737374953,-0.14015843422544005,-0.33512098217691044,-0.5165748101176659,-0.6772055179149503,-0.8105380849876894,-0.91119787825498,-0.9751273034869522,-0.9997493668460864,-0.9840715534565684,-0.9287258356589138,-0.835943198217651,-0.7094637073706862,-0.5543857488349727,-0.3769605119810671,-0.18434000451666918,0.015711244799917805,0.215129174156521,0.40587525085568865,0.5802605044054431,0.7312554687635892,0.8527735399720481,0.9399163270392686,0.9891711059817689,0.9985524176570272,0.967682101581221,0.8978045395707537,0.7917364947363619,0.6537535678190964,0.48941784781112446,0.3053537042607102,0.10898075907006503,-0.09178519831346756,-0.28885129621027644,-0.4742738042014582,-0.6405783447416785,-0.7810611851668563,-0.8900594650218766,-0.9631794658513747,-0.9974737219013504,-0.9915598324043456,-0.94567618612632,-0.8616723519203568,-0.7429345226435583,-0.5942490177914855,-0.42160934705625613,-0.23197461207207618,-0.032988985169043965,0.16732642705865344,0.3608969143973516,0.5399196544190707,0.6971782440958356,0.8263335928597986,0.9221794512156347,0.9808522745523109,0.9999869625483434,0.9788121963177605,0.9181815302589126,0.8205389852937641,0.6898205304342284,0.5312954239506659,0.35135380967786894,0.15724913044635258,-0.04319425805178813,-0.2418964868818527,-0.4308478732201853,-0.6024317905068313,-0.7497316945076975,-0.8668099290730257,-0.9489470729364659,-0.9928321794907992,-0.996696240978815,-0.9603834971601148,-0.8853577140032852,-0.7746431793092708,-0.6327027937314084,-0.4652581713403739,-0.2790590014766404,-0.0816109689098054,0.11912680016241337,0.3150625703305503,0.49829817466358073,0.661447389658485,0.7979336737600132,0.9022552676176185,0.9702069698938001,0.9990496488447034,0.9876206566654375,0.9363806957994817,0.8473952480325498,0.724251314963637,0.5719128260429909,0.39652054267672443,0.2051445242582516,0.005499134217817277,-0.1943679258116122,-0.38640001868446766,-0.5628563346225125,-0.7166239231007561,-0.8415044157390038,-0.9324638824057893,-0.9858357488402362,-0.9994685961863288,-0.972812884643393,-0.9069431054043492,-0.8045144679375177,-0.6696558685466905,-0.5078034546445597,-0.32548149376054547,-0.13003938044888355,0.07064461765751337,0.26848093265555717,0.45549478669059,0.6241476550907036,0.7676411441430607,0.8801910342074852,0.9572604414927669,0.995742699750646,0.9940865899294395,0.9523588697824978,0.8722415828646545,0.7569642553904316,0.611173714097859,0.44074677275648777,0.2525533379233154,0.054179483148668196,-0.14637834549543444,-0.3410356659944882,-0.5219458456977619,-0.68181639892205,-0.8142029469016445,-0.9137689905661472,-0.9765010247101711,-0.9998703223066225,-0.9829348674422529,-0.9263773279599639,-0.8324775371319647,-0.7050205936264607,-0.5491442842572413,-0.3711319799010354,-0.17815935294444551,0.02199487392440677,0.2212624878704104,0.4116110154074336,0.5853675112419091,0.7355278545424947,0.8560390849091392,0.9420433970842059,0.9900739589840803,0.9981946596304546,0.966078153744583,0.8950190570288877,0.787881760234134,0.6489849656263634,0.4839276001857029,0.2993631229733343,0.10273132433132881,-0.09804157191591824,-0.2948624143830051,-0.479797358892501,-0.6453916815733011,-0.7849702786286482,-0.8929067396356283,-0.9648501480349464,-0.9979004664897233,-0.9907254373318047,-0.943614285841371,-0.8584660615817583,-0.7387130877499446,-0.5891826042980308,-0.4159021819884195,-0.22585675113821768,-0.0267070392196187,0.173519232909589,0.36675094827119453,0.545198940328769,0.7016699741332435,0.8298567054780254,0.924591929816264,0.9820568721718081,0.9999351218810183,0.9775060070598881,0.9156736448730018,0.8169304965890329,0.6852568965172863,0.5259606048123968,0.3454628517698986,0.1510394981625449,-0.04947225455961202,-0.24798978170143612,-0.43651084576075044,-0.6074361664597522,-0.7538757475796216,-0.8699266125685026,-0.9509107534068006,-0.9935637010160004,-0.9961661159409905,-0.9586130948888195,-0.882418399378226,-0.7706534360435257,-0.6278234482953352,-0.4596859100497364,-0.27301844207126036,-0.07534560621719615,0.12536440949899708,0.3210209884048518,0.5037372177636441,0.6661478100670426,0.8017059976254209,0.904947432641258,0.9717104549580071,0.9993038484969571,0.986615324122908,0.9341563559966115,0.844041564061816,0.7199034737579819,0.5667460889935643,0.3907431808492618,0.1989894229912122,-0.0007855944812098249,-0.20052894465599,-0.39218897712924117,-0.5680398798699068,-0.7209931065467718,-0.844883115687291,-0.9347159035297568,-0.9868703122140144,-0.9992439985812339,-0.9713381795843284,-0.9042777382224084,-0.8007658795299419,-0.6649751644362496,-0.502379313919221,-0.3195325634232916,-0.1238054617611332,0.07691223555948351,0.27452960222093925,0.46108068617174996,0.629045616992427,0.7716537317202814,0.8831565001360848,0.9590592479011868,0.9963023367889968,0.9933844986399962,0.9504233514509496,0.8691506581957764,0.7528425194950841,0.6061873140665849,0.4350967102736015,0.24646736689327906,0.04790292894050803,-0.1525924751086996,-0.3469368795737174,-0.5272962654430376,-0.6864003495216591,-0.8178356493996837,-0.916304010798535,-0.9778361760625227,-0.9999517848549624,-0.9817593574329179,-0.9239922301776664,-0.8289789948199439,-0.7005496329546296,-0.5438811295598319,-0.36528878883736554,-0.17197166442800443,0.028277634294669875,0.22738706215109555,0.41733052213315924,0.590451397212299,0.7397711884170781,0.8592708179851994,0.9441332582668189,0.9909377060112905,0.9977974748770755,0.9644360477199647,0.8921982229936638,0.7839959059512226,0.644190729803257,0.47841823837137415,0.29336071743114045,0.09647783190711674,-0.10429407306895087,-0.30086188606989483,-0.4853019625310986,-0.6501795267021628,-0.7888483673075922,-0.8957187461884064,-0.9664827205343346,-0.9982877959713369,-0.9898519105520557,-0.9415151146470797,-0.855225863521292,-0.7344624751415969,-0.5840929192499619,-0.41017858960197107,-0.2197299693066764,-0.020424038394644718,0.17970518509192707,0.3725904962034834,0.5504566919520716,0.7061339895860902,0.8333470403876473,0.9269678888532413,0.9832226804753621,0.9998437857420437,0.976161208236273,0.9131295921781875,0.813289740735568,0.6806661963000447,0.520605011264263,0.339558248758231,0.14482390011558421,-0.055748297010576126,-0.2540732814121384,-0.44215657698099686,-0.6124165498782354,-0.7579900240414414,-0.8730089356728487,-0.9528368747716676,-0.9942559787281493,-0.9955966442998354,-0.9568048292847257,-0.8794442309610678,-0.7666332534820727,-0.6229193050671797,-0.4540954920692477,-0.2669670989741703,-0.06907726752125501,0.13159706718773298,0.3269667267812253,0.5091563642338969,0.6708219189465673,0.805446655679909,0.9076038540201972,0.9731755593694091,0.9995185776116219,0.985571022214564,0.931895118854035,0.8406545421085418,0.7155271977803324,0.5615569665876331,0.3849503854343272,0.1928264620331361,-0.007070292150742392,-0.20668204300130752,-0.39796244488037963,-0.5732009886586938,-0.7253338121824002,-0.8482284444133417,-0.9369310052130313,-0.987865896150441,-0.9989799328025,-0.9698251085766174,-0.9015766538474529,-0.796985662444195,-0.6602681951140156,-0.49693533019865355,-0.31357101217786276,-0.11756665300107531,0.08317681557945572,0.28056742840675614,0.46664837387209346,0.6339187328288955,0.7756358404919727,0.8860870831190828,0.960820173354641,0.9968226218435569,0.9926431706156492,0.9484502932653526,0.8660254037844112,0.7486910478001099,0.601176970828088,0.4294294623260196,0.24037166088675374,0.04162448266070827,-0.15880057761905042,-0.3528243898280489,-0.5326258580223341,-0.6909571886567817,-0.8214360489973634,-0.9188028388237122,-0.9791327048081291,-0.9999937512734967,-0.980545069858898,-0.9215706365185872,-0.82544770946729,-0.6960510019494711,-0.5385964926269615,-0.35943116958461796,-0.16577718336893474,0.03455927775390943,0.23350265508976575,0.4230335451237482,0.5955119615132491,0.743985302783916,0.8624686115530668,0.9461858280416989,0.9917623129471042,0.9973608790848967,0.9627558483673558,0.8893421488825322,0.7800790853711983,0.6393710497125802,0.47288997997714977,0.2873467247172939,0.09022052879825612,-0.11054245481111764,-0.30684947430387893,-0.4907873976961286,-0.6549416910178371,-0.7926952980267034,-0.898495373611506,-0.9680771188662082,-0.9986356950474312,-0.9889392865676649,-0.9393787554565819,-0.851951885720412,-0.7301828527091649,-0.5789801636797871,-0.4044387959674548,-0.21359450857329074,-0.014140230860303539,0.18588403927266084,0.3784153275436073,0.5556927016182193,0.710570114134379,0.8368044597273917,0.9293072344808125,0.9843496534158475,0.9997129577390128,0.9747778529638854,0.9105494726594812,0.8096168615361344,0.6760486111060967,0.515228854841439,0.3336402338633446,0.1386025818090937,-0.062022137513397815,-0.26014674572767993,-0.4477848438855888,-0.6173727440468362,-0.7620743613874725,-0.8760567766403887,-0.9547253609530592,-0.9949089852836316,-0.9949878485483703,-0.9549587717707033,-0.8764353262255355,-0.7625827904141118,-0.6179905577511368,-0.4484871382095296,-0.26090521120147225,-0.0628062004089248,0.1378245270510637,0.3328995506144781,0.5145554000286082,0.6754695316789893,0.8091555001749042,0.9102244268311332,0.9746022252592503,0.9996938277073135,0.9844877921882693,0.929597073686195,0.8372343159533128,0.7111226598850273,0.5563456637854721,0.3791423852358999,0.18665588480892192,-0.01335471055780424,-0.21282697781216448,-0.40372019389725633,-0.5783394571352222,-0.7296458685582627,-0.8515402697832777,-0.9391090999633903,-0.9888224613259075,-0.9986764092802061,-0.9682737313836045,-0.8988399589669817,-0.7931739659915229,-0.655535146495938,-0.4914717185093651,-0.30759707549392185,-0.11132320058933534,0.0894381102784942,0.28659417273079685,0.47219762987905267,0.6387668101215247,0.7795873131727024,0.8889826674040542,0.9625431483000502,0.9973035343641123,0.9918626351373918,0.9464397731576266,0.8628659430721352,0.7445100042805551,0.5961428822808952,0.42374525275884434,0.23426646067214385,0.035344392295895616,-0.16500240781875405,-0.358697964212774,-0.5379344129273657,-0.6954867363412297,-0.8250040034857496,-0.9212653759429301,-0.9803905597366659,-0.9999962199046339,-0.9792920526821653,-0.9191126426310688,-0.8218838205527698,-0.6915248782980264,-0.5332905821913044,-0.353559353507132,-0.1595761544371175,0.04083955618961401,0.23960902513257734,0.428719859120797,0.6005490042624625,0.7481700311937381,0.8656323393062108,0.948201025336375,0.9925477472211385,0.996884889498588,0.9610376220513133,0.8864509475047805,0.7761314532007741,0.6345261157223966,0.4673430433583191,0.2813213823726846,0.08395966215574939,-0.11678647034362273,-0.31282494258672155,-0.49625344772373503,-0.6596779864241945,-0.7965109188398845,-0.901236512233602,-0.9696332800548946,-0.9989441499766801,-0.9879876014255365,-0.9372052926518261,-0.8486442574947453,-0.725874389489515,-0.573844539531301,-0.3986830277957479,-0.20745061127658734,-0.007855864814526433,0.1920555513992525,0.38422521222217865,0.5609067625148397,0.7149781725599917,0.8402288269360212,0.9316098742994867,0.9854377464800486,0.9995426430393833,0.9733559958825154,0.9079333882265069,0.8059120040621404,0.6714043233209803,0.5098323478918758,0.3277090408350876,0.13237578897319796,-0.0682935282638237,-0.2662099347582689,-0.45339542416899736,-0.6223045532056729,-0.7661285982942336,-0.8790700150874502,-0.9565761373595169,-0.9955226948899674,-0.9943397527328256,-0.9530749952624785,-0.8733918040175602,-0.7585022068249337,-0.6130374010227242,-0.44286106998948427,-0.2548330181858169,-0.05653265257525572,0.14404654311662266,0.33881922557010696,0.5199341118965268,0.6800904646927419,0.8128323846182057,0.9128090475664729,0.975990396277109,0.9998295918620019,0.9833656768294803,0.9272623112613381,0.8337810206884928,0.7066900340424155,0.5511123864231561,0.37331940965857047,0.18047793504418427,-0.019638601479937942,-0.21896350637577122,-0.40946199676020734,-0.5834550823401806,-0.7339291053566483,-0.8548184609865075,-0.9412501017503929,-0.9897399699579861,-0.9983334400029281,-0.9666841092816258,-0.8960677616750626,-0.7893309407264083,-0.6507762055283044,-0.4859886946532268,-0.3016109893300621,-0.10507535113001024,0.09569587234810661,0.29260959714828977,0.47772823500797335,0.6435896573809232,0.7835079936870675,0.8918431386212698,0.9642281046832286,0.9977450553555416,0.991042923034826,0.9443918705393264,0.8596724008512651,0.7402995540793824,0.5910852472618354,0.4180443060870765,0.22815200739274563,0.029062905896953376,-0.17119772074770906,-0.36455737073293154,-0.543221720480457,-0.699988813666855,-0.8285393719379122,-0.9236915248908135,-0.981609691165336,-0.9999591906508682,-0.9780003553944115,-0.9166183456008604,-0.8182874688429895,-0.6869714407732824,-0.5279636078260843,-0.3476735725303124,-0.15336882256066892,0.0471182215432447,0.24570593108991745,0.43438923952608177,0.6055623265064699,0.7523252083582249,0.8687618762836606,0.9501787705545152,0.9932939778102859,0.9963695249188197,0.9592814366383987,0.8835247330571264,0.7721531653635886,0.629656119198076,0.4617776476079746,0.2752849283864907,0.07769547927174789,-0.12302587304023986,-0.31878805489917267,-0.5016998967156869,-0.6643882258468773,-0.8002950790374761,-0.903942053785156,-0.9711511426351153,-0.9992131485757203,-0.986996892715312,-0.9349948120803993,-0.8453031094892242,-0.7215372556583974,-0.5686862496515619,-0.3929115124280666,-0.20129852008865412,-0.0015711884776458168,0.19821947770910497,0.39001992076027836,0.5660986686970608,0.7193579907532861,0.8436200067576387,0.9338757173593939,0.9864869166904471,0.9993328483702432,0.9718956931527224,0.9052814422095522,0.8021753146483751,0.6667335163848485,0.5044157035665993,0.32176490394392515,0.1261437675538609,-0.07456222155390714,-0.27226260901963817,-0.4589880962246345,-0.6272117825579786,-0.7701525746274107,-0.8820485319968752,-0.9583891308889437,-0.9960970833068662,-0.9936523824516994,-0.9511535741654871,-0.8703137845502879,-0.7543916638897166,-0.608060030522164,-0.43721750962764433,-0.2487507597668916,-0.05025687181305484,0.15026286962678126,0.3447255178322664,0.5252922873892041,0.6846845354701376,0.8164771637801078,0.9153576141388253,0.9773400175928825,0.999925864713265,0.9822047204595266,0.9248909237980334,0.8302947927123949,0.7022294953327438,0.5458573412050426,0.36748168869832176,0.17429285675579423,-0.025921716715918572,-0.2250913863113126,-0.41518762667909903,-0.5885476622162445,-0.7381833533981237,-0.8580628885409227,-0.9433539260086774,-0.9906183858068563,-0.9979510385172907,-0.9650563050576294,-0.8932601714679883,-0.7854567384407947,-0.6459915601798424,-0.480486475199101,-0.2956129901252448,-0.09882335140075854,0.10194985461887934,0.2986134640619047,0.48323997081062486,0.6483870841138439,0.787397727175965,0.894668383787738,0.965874975951743,0.9981471673786426,0.9901840666850139,0.9423066662986536,0.8564449032604389,0.7360598635010978,0.5860042655374589,0.4123268474872125,0.22202854255766508,0.022780271570246147,-0.1773862717033454,-0.3704023779535887,-0.5484875718433546,-0.7044632428102904,-0.8320420147135541,-0.9260811898392912,-0.9827900509408445,-0.9998826649747843,-0.976670029015187,-0.9140878439479256,-0.8146587963867064,-0.682390869226987,-0.5226157799363181,-0.3417740591308314,-0.14715543291733246,0.05339502581963542,0.25179313214609605,0.4400414624104264,0.6105517302289893,0.7564506701558201,0.8718570988747447,0.952118985579106,0.9940009752399445,0.9958148057014714,0.9574873614944839,0.8805636211193942,0.7681443789943345,0.6247612524946426,0.4561940125483079,0.2692376011867781,0.07142822756904821,-0.12926041645660213,-0.3247385757103415,-0.5071265295480536,-0.6690722232406874,-0.8040476291526586,-0.9066118914024974,-0.972630646654282,-0.9994426802196399,-0.9859671995680548,-0.9327474010518996,-0.8419285736725676,-0.7171716225240728,-0.5635054977827859,-0.3871244778279214,-0.19513847800488823,0.004713549918091038,0.204375574739246,0.3957992242781007,0.5712682150947934,0.7237093957200532,0.84697786524737,0.9361046741643111,0.987497122606844,0.9990835820180669,0.9703970024535662,0.9025937393552242,0.7984069408865229,0.6620363747855625,0.4989791358127054,0.31580805797147155,0.11990676370367773,-0.08082796978292636,-0.27830452944316264,-0.4645626391526441,-0.6320942382779288,-0.774146131447921,-0.8849922097232636,-0.9601642699316931,-0.9966321278470822,-0.9929257648547913,-0.9491945843720494,-0.8672013893993253,-0.750251323966752,-0.6030586428457171,-0.4315566800337543,-0.24265867618183723,-0.04397910600298476,0.15647326104897502,0.3506181941141298,0.5306297148690471,0.6892515625542457,0.8200896936991953,0.917870025884821,0.9786510358992072,0.9999826424585164,0.9810049689339446,0.9224830049612944,0.8267757697241069,0.697741219938443,0.5405807356950886,0.3616294529338671,0.1681008942421857,-0.03220380809515923,-0.2312103755795773,-0.4208968575028058,-0.5936169956166126,-0.742408444648254,-0.8612734242980707,-0.9454204896413582,-0.9914576741768212,-0.9975292199273951,-0.9633903830066821,-0.8904172992401543,-0.7815515121579855,-0.6411813994347249,-0.47496527747374073,-0.2896033147883224,-0.09256744834350564,0.10819981007091976,0.3046055363307008,0.4887326195843782,0.6531589008316226,0.7912563600024278,0.8974582913117263,0.9674836970574157,0.9985098545507808,0.9892861000110474,0.9401842427970399,0.8531835777795836,0.7317911000051446,0.580900137796463,0.40659310278731786,0.2158963080316152,0.016496737467706784,-0.18356781624972998,-0.37623275500855574,-0.5537317590254719,-0.7089098470404624,-0.8355117934652355,-0.9284342764011664,-0.983931592441321,-0.9997666458989908,-0.9753011260897454,-0.9115212376220605,-0.8109979465095465,-0.6777833445828775,-0.517247309750404,-0.33586104632787117,-0.1409362309236726,0.059669721097356236,0.2578703878684173,0.44567630452213713,0.6155170183584713,0.7605462536389682,0.874917884824257,0.9540215937753981,0.994668711585066,0.9952207537568506,0.9556554674820099,0.8775677286496864,0.7641052524321215,0.6198417089499743,0.45059235872182607,0.26317963963097385,0.06515815459188597,-0.13548985434061334,-0.3306762699860301,-0.5125331318793096,-0.6737297935970197,-0.8077684209670122,-0.9092459196323379,-0.9740717336748944,-0.9996327358423815,-0.9848985626546004,-0.9304631483346448,-0.8385207833323065,-0.7127776625204681,-0.558302488554675,-0.38132215257201246,-0.1889707283348426,0.010998102137871982,0.2105235993359445,0.4015628945046227,0.57641519752093,0.7280322155883507,0.8503022697764652,0.9382966566747849,0.9884683243281109,0.9987948538283946,0.9688599829804657,0.8998703858224527,0.7946070316200068,0.6573130840508977,0.49352285936383566,0.30983873820175645,0.11366502377192696,-0.0870905254661433,-0.2843354573848626,-0.4701188327696403,-0.6369517275178559,-0.7781091110179761,-0.88790093199713,-0.9619014843732626,-0.9971278073774188,-0.9921599286420703,-0.9471981032584824,-0.864054741498161,-0.7460813505912524,-0.598033435538365,-0.425878804799456,-0.23655700805620006,-0.037699603104794845,0.16267747208506322,0.3564970216665677,0.535946183518164,0.6937913655565574,0.8236698316874409,0.9203461835691794,0.97992339941346,0.999999922855149,0.9797664696405405,0.9200386498593115,0.8232240907182466,0.6932253851374859,0.5352827783086481,0.3557629335169095,0.16190229207370582,-0.038484627487172435,-0.23732023249262832,-0.42658946372824275,-0.5986628823125808,-0.7466042122242404,-0.864449941447984,-0.9474497110231596,-0.9922578019176842,-0.9970680008942463,-0.9616864089294304,-0.8875392572793747,-0.7776154161268833,-0.6363459132845838,-0.46942531955350236,-0.28358220068976553,-0.0863078890540114,0.11444549184304749,0.3105855772796027,0.4942059643805029,0.6579049190567924,0.7950837397581152,0.9002127509974232,0.9690542044589252,0.9988331025465315,0.988349058480843,0.9380246838660415,0.8498885532245868,0.7274934321992896,0.5757730656420446,0.40084329845903605,0.2097555460258051,0.010212551776466584,-0.18974211022834056,-0.3820482716091893,-0.5589540748917228,-0.7133284507253245,-0.8389485711435166,-0.9307506916342744,-0.985034270578079,-0.9996111380060182,-0.9738937006870356,-0.9089186279991696,-0.8073050638076862,-0.6731490488290375,-0.5118584093126517,-0.3299347676737063,-0.13471146222582978,0.06594205953850543,0.2639374582173371,0.45129354329582366,0.620457994775616,0.7646117970402457,0.87794411323728,0.9558865199941431,0.9952971604713908,0.9945873925488745,0.9537858269571552,0.8745371739797024,0.7600359452145087,0.6148976828762815,0.44497290738314815,0.25711128299686975,0.05888550799547778,-0.14171394064183537,-0.3366009031990948,-0.5179194901592922,-0.6783607529508324,-0.8114573075167755,-0.911844034435787,-0.9754743467768481,-0.9997833079371242,-0.9837910241840448,-0.928142144152127,-0.8350798730693978,-0.7083555492002854,-0.553077427475867,-0.37550476584067655,-0.1827955146925047,0.01728221995435212,0.2166633086644256,0.4073107037860966,0.5815394126798762,0.7323262796152917,0.8535930890373603,0.9404515783118538,0.989400483493689,0.998466675205418,0.9672846954425863,0.8971114891784474,0.7907757369377034,0.652563830741553,0.48804708973218386,0.3038571804108527,0.10741879429529173,-0.09334964124469279,-0.29035515463493994,-0.4756564576169974,-0.641784058416748,-0.7820413568077459,-0.8907745839295572,-0.9636007055970965,-0.9975841023195167,-0.9913549040625332,-0.9451642096818301,-0.8608739651333152,-0.7418819084691958,-0.5929846070858265,-0.42018410818935115,-0.23044599639376628,-0.03141861114639182,0.16887525768056966,0.36236176828755445,0.5412414833467821,0.6983037651637783,0.8272174363364977,0.9227859893884062,0.9811570578797371,0.9999777052206189,0.9784892714975781,0.9175579550392629,0.8196398959791545,0.6886821692966336,0.529963678304622,0.3498823621633271,0.15569729508295507,-0.04476392681193906,-0.24342071572290727,-0.43226522050834504,-0.6036851230016343,-0.750770490401587,-0.8675923145244816,-0.9494415100038636,-0.993018737425928,-0.9965673996350801,-0.9599444501294684,-0.884626159262702,-0.7736486058154736,-0.6314852927218784,-0.46386682025603376,-0.2775498856516355,-0.08004492077256282,0.12068665324322334,0.3165533507087483,0.499659789012441,0.662624951331048,0.7988797152690505,0.9029316540490856,0.9705864361243167,0.9991168985982224,0.9873729791057327,0.9358280748039909,0.8465599597423802,0.7231670298329628,0.5706232515833828,0.39507766160854313,0.20360649908826253,0.003927962709393271,-0.19590890976659045,-0.3878486980541213,-0.5641543131707076,-0.7177188793384783,-0.8423522120024963,-0.933030344044765,-0.9860980417975206,-0.9994161474381209,-0.9724478083976719,-0.9062801178771687,-0.8035802941427307,-0.6684881650110389,-0.5064492914739382,-0.32399545724501566,-0.12848137269015614,0.07221179339804455,0.2699941035556126,0.45689295686169873,0.6253744643215691,0.7686471397785334,0.8809356645837387,0.9577136905744541,0.9958862970764232,0.9939147470940326,0.9518785137671127,0.8714720768105582,0.7559366180710573,0.6099293695527854,0.4393358804892509,0.25103277097251436,0.05261053553737382,-0.1479324295208694,-0.3425122413382769,-0.5232853916376325,-0.682964918388419,-0.8151141430979802,-0.9144061331923233,-0.9768384305597072,-0.999894390556573,-0.9826446279019616,-0.9257844801794486,-0.8316059787931573,-0.7039054572284681,-0.5478305209257188,-0.3696725474092538,-0.17661308098667425,0.023565655157003613,0.2227944602180181,0.41304242509566624,0.5866406581752985,0.7365914181937883,0.856850193049224,0.9425693539602713,0.9902935632851236,0.9980990591115405,0.9656712020607164,0.8943171583941532,0.78691320816836,0.6477888024436981,0.4825520431997866,0.2978636208585339,0.10116832198744476,-0.099605069895919,-0.2963633834271867,-0.48117529496921946,-0.6465910401070328,-0.7859427135012517,-0.8936130520169958,-0.9652618664872971,-0.9980009946506062,-0.9905107229130667,-0.9430929839768529,-0.8576591859391448,-0.7376531634700637,-0.5879123569070828,-0.4144728151330698,-0.22432588256737282,-0.025136378214610944,0.17506637303548334,0.3682122023309151,0.5465154052006796,0.7027885831450755,0.8307323675230189,0.9251893469751009,0.9823519625709777,0.9999159904324799,0.9771734249519197,0.9150410184836715,0.8160233270753474,0.6841117518638993,0.5246236457771968,0.3439879711444478,0.1494861483550045,-0.05104145804982027,-0.2495115843134294,-0.4379239036619803,-0.6086835193148669,-0.754907114620345,-0.8707004194101736,-0.951395807911326,-0.9937404506461108,-0.9960274359226903,-0.9581645754108077,-0.8816781202516227,-0.769651237904893,-0.6265997297314785,-0.4582899991311313,-0.2715066079387363,-0.0737787908740953,0.12692304775795357,0.3225086209028187,0.5050938780648417,0.6673188112222227,0.8026441366016632,0.9056148930754364,0.9720803315334781,0.9993612314964697,0.9863579004389168,0.9335945023726279,0.8431979288059838,0.7188120637904737,0.5654508990281032,0.3892964199670567,0.1974494100942538,-0.0023567815043718287,-0.2020679712881319,-0.39363380523790964,-0.5693322684633317,-0.7220809594668631,-0.8457225816049285,-0.9352731435907671,-0.9871228640827738,-0.9991816818970432,-0.9709635063314797,-0.9036058114721164,-0.7998237846358947,-0.6638008772246304,-0.5010201698836867,-0.3180433496325639,-0.12224620839282879,0.0784786750335843,0.2760400846573307,0.46247432405403466,0.6302662328056261,0.7726521224657994,0.8838924207031273,0.9595030333465869,0.9964360981304349,0.9932028439604959,0.9499336032469707,0.8683725582075119,0.7518074329173543,0.6049369652182753,0.43368150069161426,0.24494434364718354,0.04633348506653744,-0.15414507535962926,-0.34841005091712657,-0.5286306243717694,-0.6875421080543781,-0.8187387832728767,-0.9169321147040845,-0.9781639311447943,-0.999965979313176,-0.9814594190887284,-0.9233902495397018,-0.8280992377155818,-0.6994275623748212,-0.5425619761470091,-0.36382572763880144,-0.17042367141121717,0.029848159562487923,0.22891681182839935,0.41875783204129596,0.5917187325178435,0.7408274628593273,0.8600734531627928,0.9446498999721018,0.9911475284275186,0.9976920200668886,0.9640195665646426,0.8914875038401429,0.7830195978742007,0.6429881877615641,0.47703793681037865,0.29185829627883714,0.09491385372975504,-0.10585656434268706,-0.3023599064483766,-0.4866751268431803,-0.651372482722209,-0.7898130270025732,-0.8964162241455867,-0.9668849014312743,-0.9983784679042683,-0.9896274185371973,-0.9409845079530079,-0.8544105308930495,-0.7333952826210466,-0.5828168853459542,-0.40874515121535765,-0.21819690830981733,-0.01885315244518979,0.18125057361291783,0.3740480927161119,0.5517677407704068,0.7072456423587122,0.8342144864140054,0.9275561614013614,0.9835080662907953,0.9998147809283445,0.9758189819769194,0.9124879396066745,0.8123745268541859,0.6795143133617036,0.5192628916470639,0.3380799932768102,0.14326909721816472,-0.05731697325033179,-0.2555925976869687,-0.4435652896822878,-0.6136578738257217,-0.759013921492065,-0.8737741333408574,-0.9533125275546556,-0.9944229130719912,-0.9954481310845539,-0.9563468550749695,-0.8786952566880414,-0.7656234702834606,-0.6216894172834292,-0.45269507645206475,-0.26545260624854883,-0.06750974685842194,0.13315442906168873,0.3284511526404553,0.5105080169021642,0.6719863133321634,0.8063768550687108,0.9082623620937114,0.9735358316804232,0.9995660915906163,0.9853038625740069,0.9313240547936729,0.8398025932089502,0.7144287060845778,0.5602562122736828,0.38349980188215205,0.19128452223669062,-0.008641432629900445,-0.20821905152191933,-0.39940336466019294,-0.5744877362506329,-0.7264145188168094,-0.8490595468279012,-0.9374790016861487,-0.9881086969553731,-0.9989077506437074,-0.9694408531154709,-0.9008958144138111,-0.7960356836618518,-0.6590873706084655,-0.49557125898172366,-0.3120786799329004,-0.11600621561069334,0.0847424569157329,0.28207516271845146,0.46803742441959717,0.6351331070125468,0.7766265869131722,0.8868142648094459,0.9612544776351177,0.9969465419173452,0.9924517112670644,0.9479511722168351,0.8652387405954554,0.7476485528478729,0.5999206670628188,0.4280099913273297,0.23884624150167763,0.040054604514009294,-0.16035163277104186,-0.3542940989838664,-0.533954977235324,-0.6920921411584681,-0.8223310848753679,-0.919421879199858,-0.979450796177467,-0.9999980713793202,-0.9802354445578288,-0.9209595468002463,-0.8245597883458591,-0.6949220415073889,-0.5372720012368051,-0.3579645374675245,-0.16422753043586857,0.03612948502457202,0.23503012167471596,0.4244566988757504,0.5967734351335581,0.7450342462963185,0.8632627420658023,0.9466931341699043,0.9919623451909297,0.9972455741487065,0.9623298541907801,0.8886226372822091,0.779095059845107,0.6381621763099938,0.47150498836032384,0.2858414438701698,0.08865563656142379,-0.11210387766336845,-0.30834448684774635,-0.49215573600623347,-0.6561281974047799,-0.7936521444419354,-0.8991839895954397,-0.968469746322367,-0.998716507171046,-0.9887050258236961,-0.9388388648908398,-0.851128128310635,-0.7291084340999899,-0.5776983936635506,-0.40300134266768,-0.21205931570320233,-0.012569182013422057,0.1874276151488834,0.3798692089369468,0.5569982825990335,0.7116747667598536,0.8376636554726699,0.9298863391825851,0.9846253233753658,0.9996740807057866,0.974425996070363,0.9098988192498237,0.8086936394362378,0.6748900353800802,0.5138816276533755,0.3321586619140328,0.13704638723362192,-0.0635902245430731,-0.26166351565512114,-0.4491891557457111,-0.6186079900569728,-0.763090748805949,-0.8768133349109316,-0.9551915932270914,-0.9950660977476201,-0.9948295080020712,-0.9544913609183339,-0.8756776863891521,-0.7615654620400815,-0.6167545493255974,-0.4470822732072806,-0.25938811970212905,-0.06123803634045773,0.1393805510271171,0.33438071120312135,0.5159019916762728,0.6766272733037958,0.8100777232351516,0.9108739565340906,0.974952879075785,0.9997314707890791,0.9842109071434068,0.9290168217452998,0.8363740870604237,0.710017129849209,0.555039396500318,0.37768803630905823,0.18511207901641277,-0.014925742435713757,-0.21436190751248682,-0.4051571484347156,-0.5796205129015813,-0.730719386221319,-0.8523629758678477,-0.9396478312038515,-0.9890555014768577,-0.9985943644978698,-0.9678799088915092,-0.8981502337418092,-0.7922161408431442,-0.6543478313367894,-0.49010277398922036,-0.30610168373896884,-0.10976164081085939,0.0910028916375325,0.28809909936514566,0.4735820382269589,0.6399748947101911,0.7805703761369043,0.8897010814956479,0.9629679542614074,0.9974176082756384,0.9916613786819907,0.9459312989789432,0.8620707477539662,0.7434601421301987,0.5948806732203318,0.4223215764097659,0.23273870539937497,0.033774141883455386,-0.1665518566082899,-0.3601641531301644,-0.5392582399269217,-0.6966148379835733,-0.8258909060164723,-0.9218753283388381,-0.9806989748291085,-0.999990665487432,-0.9789727526537855,-0.9184924679691496,-0.8209877704854726,-0.6903890725853064,-0.5319608051387166,-0.35208920840059516,-0.15802490279590478,0.04240938344290703,0.24113414829335683,0.430138800505095,0.6018045663718083,0.7492116023451626,0.8664179337874363,0.9486989758498705,0.99273798139171,0.996759738990705,0.9606021316794163,0.885722671876949,0.7751397490927582,0.6333109587068648,0.4659534163899085,0.27981330128637405,0.08239391766972684,-0.11834676310114187,-0.314316888245918,-0.4976169059853876,-0.6608579963134495,-0.7974599141817464,-0.9019162390453115,-0.9700163385622601,-0.9990150990990697,-0.9877435812052446,-0.9366561395390696,-0.8478121078402922,-0.7247927872291383,-0.5725570840302316,-0.39724161635907906,-0.2059133471703701,-0.006284715123673178,0.1935972536624941,0.3856753210707721,0.5622068240905339,0.7160757814067914,0.8410797384635533,0.9321797882813732,0.9857036896952306,0.9994938953221931,0.9729945222524533,0.9072737596782356,0.8049808102092547,0.6702391005686685,0.508480066345676,0.32622421093695686,0.13081826418607526,-0.06986096414695006,-0.26772409842889094,-0.4547952797203925,-0.6235336724885809,-0.7671374355353319,-0.8798179040779627,-0.9570329307093359,-0.9956699792684799,-0.9941715911096599,-0.9525981662292726,-0.8726255285429942,-0.7574773734579571,-0.6117953207754777,-0.4414518110916764,-0.25331338783510343,-0.05496390704032573,0.14560116773499812,0.3402970623850175,0.5212755893358658,0.6812415078280731,0.8137465949240341,0.9134495732438686,0.9763314177489768,0.9998573625597087,0.9830790773167677,0.9266728943587621,0.8329125457794704,0.7055775093328759,0.5498006577618828,0.37186135280109145,0.178932324233017,-0.021209462704269093,-0.22049629662920914,-0.41089492929832944,-0.5847303956815909,-0.7349953916464363,-0.8556327382458149,-0.9417795464794113,-0.9899632402503264,-0.998241535837669,-0.966280735313796,-0.8953691779011502,-0.7883653070441347,-0.6495824466120003,-0.4846149309006835,-0.30011259713026145,-0.10351273064209479,0.09725973192389181,0.2941116566638662,0.4791079464747739,0.6447914046575512,0.7844833343652887,0.8925527567380446,0.9646433955465273,0.9978492785991192,0.9908318774218579,0.9438740633142088,0.8588687048126487,0.7392423661984733,0.5898171827606637,0.4166164806200265,0.22662197657561428,0.027492345240689983,-0.1727455019744958,-0.3660199815004213,-0.5445402029782067,-0.7011100198919773,-0.829418106090318,-0.9242923652145185,-0.9819084177990489,-0.9999437619300285,-0.9776713932504442,-0.9159891104911325,-0.8173833252220423,-0.6858288346521817,-0.5266285976344522,-0.3461999725019611,-0.15181603348292447,0.04868760677396403,0.24722865058693883,0.43580391249727973,0.6068119275127992,0.7533593660085821,0.8695389037038822,0.9506673457851993,0.9934744063937264,0.9962345337824432,0.958836467272162,0.8827877221672955,0.7711538218441553,0.6284347265659114,0.4603834401756131,0.2737741066271227,0.07612894438013779,-0.124584974074305,-0.3202768747448853,-0.5030584210748672,-0.6655616926302876,-0.8012361858226548,-0.9046128645766713,-0.9715246170636294,-0.9992742318945281,-0.98674312265705,-0.9344364181110172,-0.844462600458311,-0.7204485124679824,-0.5673931595176209,-0.39146619978763,-0.19975924546521834,-3.135095805817224e-14],"x":[0.0,0.2011122078817172,0.4022244157634344,0.6033366236451516,0.8044488315268687,1.0055610394085859,1.2066732472903032,1.4077854551720204,1.6088976630537375,1.8100098709354546,2.0111220788171718,2.2122342866988887,2.4133464945806065,2.614458702462324,2.8155709103440407,3.0166831182257576,3.217795326107475,3.4189075339891923,3.6200197418709092,3.821131949752626,4.0222441576343435,4.223356365516061,4.424468573397777,4.625580781279495,4.826692989161213,5.02780519704293,5.228917404924648,5.430029612806364,5.6311418206880814,5.832254028569799,6.033366236451515,6.234478444333233,6.43559065221495,6.636702860096667,6.837815067978385,7.038927275860101,7.2400394837418185,7.441151691623536,7.642263899505252,7.8433761073869706,8.044488315268687,8.245600523150404,8.446712731032122,8.647824938913839,8.848937146795555,9.050049354677274,9.25116156255899,9.452273770440708,9.653385978322426,9.854498186204141,10.05561039408586,10.256722601967576,10.457834809849295,10.65894701773101,10.860059225612728,11.061171433494446,11.262283641376163,11.463395849257878,11.664508057139598,11.865620265021313,12.06673247290303,12.267844680784748,12.468956888666465,12.670069096548184,12.8711813044299,13.072293512311617,13.273405720193335,13.474517928075052,13.67563013595677,13.876742343838487,14.077854551720202,14.278966759601921,14.480078967483637,14.681191175365354,14.882303383247072,15.083415591128789,15.284527799010505,15.485640006892224,15.686752214773941,15.887864422655658,16.088976630537374,16.29008883841909,16.49120104630081,16.69231325418253,16.893425462064243,17.09453766994596,17.295649877827678,17.496762085709396,17.69787429359111,17.89898650147283,18.100098709354548,18.301210917236265,18.50232312511798,18.703435332999696,18.904547540881417,19.105659748763134,19.30677195664485,19.507884164526565,19.708996372408283,19.910108580290004,20.11122078817172,20.312332996053435,20.513445203935152,20.71455741181687,20.91566961969859,21.116781827580304,21.31789403546202,21.51900624334374,21.720118451225456,21.921230659107174,22.12234286698889,22.32345507487061,22.524567282752326,22.725679490634043,22.926791698515757,23.127903906397478,23.329016114279195,23.530128322160913,23.731240530042626,23.932352737924344,24.13346494580606,24.334577153687782,24.535689361569496,24.736801569451213,24.93791377733293,25.139025985214648,25.34013819309637,25.541250400978083,25.7423626088598,25.943474816741517,26.144587024623235,26.345699232504952,26.54681144038667,26.747923648268387,26.949035856150104,27.150148064031818,27.35126027191354,27.552372479795256,27.753484687676973,27.95459689555869,28.155709103440405,28.356821311322122,28.557933519203843,28.75904572708556,28.960157934967274,29.16127014284899,29.36238235073071,29.56349455861243,29.764606766494143,29.96571897437586,30.166831182257578,30.367943390139295,30.56905559802101,30.77016780590273,30.971280013784448,31.172392221666165,31.373504429547882,31.574616637429596,31.775728845311317,31.976841053193034,32.17795326107475,32.37906546895647,32.58017767683818,32.7812898847199,32.98240209260162,33.18351430048333,33.38462650836506,33.58573871624677,33.78685092412849,33.98796313201021,34.18907533989192,34.39018754777364,34.591299755655356,34.79241196353707,34.99352417141879,35.194636379300505,35.39574858718222,35.59686079506395,35.79797300294566,35.99908521082738,36.200197418709095,36.40130962659081,36.60242183447253,36.803534042354244,37.00464625023596,37.20575845811768,37.40687066599939,37.60798287388112,37.809095081762834,38.01020728964455,38.21131949752627,38.41243170540798,38.6135439132897,38.81465612117142,39.01576832905313,39.21688053693485,39.417992744816566,39.61910495269828,39.82021716058001,40.02132936846172,40.22244157634344,40.423553784225156,40.62466599210687,40.82577819998859,41.026890407870305,41.228002615752025,41.42911482363374,41.63022703151545,41.83133923939718,42.032451447278895,42.23356365516061,42.43467586304233,42.63578807092404,42.836900278805764,43.03801248668748,43.23912469456919,43.44023690245091,43.64134911033263,43.84246131821435,44.04357352609607,44.24468573397778,44.4457979418595,44.64691014974122,44.84802235762293,45.04913456550465,45.250246773386365,45.451358981268086,45.6524711891498,45.853583397031514,46.054695604913235,46.255807812794956,46.45692002067668,46.65803222855839,46.859144436440104,47.060256644321825,47.26136885220354,47.46248106008525,47.663593267966974,47.86470547584869,48.06581768373041,48.26692989161212,48.46804209949384,48.669154307375564,48.87026651525728,49.07137872313899,49.27249093102071,49.473603138902426,49.67471534678415,49.87582755466586,50.076939762547575,50.278051970429296,50.47916417831102,50.68027638619274,50.88138859407445,51.082500801956165,51.283613009837886,51.4847252177196,51.685837425601314,51.886949633483034,52.08806184136475,52.28917404924647,52.49028625712818,52.691398465009904,52.892510672891625,53.09362288077334,53.29473508865506,53.49584729653677,53.69695950441849,53.89807171230021,54.09918392018192,54.300296128063636,54.50140833594536,54.70252054382708,54.9036327517088,55.10474495959051,55.305857167472226,55.50696937535395,55.70808158323566,55.90919379111738,56.110305998999095,56.31141820688081,56.51253041476253,56.713642622644244,56.914754830525965,57.115867038407686,57.3169792462894,57.51809145417112,57.719203662052834,57.92031586993455,58.12142807781627,58.32254028569798,58.5236524935797,58.72476470146142,58.92587690934313,59.12698911722486,59.32810132510657,59.52921353298829,59.73032574087001,59.93143794875172,60.13255015663344,60.333662364515156,60.53477457239687,60.73588678027859,60.936998988160305,61.13811119604202,61.33922340392375,61.54033561180546,61.74144781968718,61.942560027568895,62.14367223545061,62.34478444333233,62.54589665121404,62.747008859095764,62.94812106697748,63.14923327485919,63.35034548274092,63.551457690622634,63.75256989850435,63.95368210638607,64.15479431426779,64.3559065221495,64.55701873003122,64.75813093791294,64.95924314579464,65.16035535367637,65.36146756155809,65.5625797694398,65.76369197732153,65.96480418520323,66.16591639308496,66.36702860096666,66.56814080884838,66.76925301673012,66.97036522461183,67.17147743249355,67.37258964037525,67.57370184825697,67.7748140561387,67.97592626402042,68.17703847190212,68.37815067978384,68.57926288766555,68.78037509554729,68.981487303429,69.18259951131071,69.38371171919243,69.58482392707414,69.78593613495586,69.98704834283758,70.1881605507193,70.38927275860101,70.59038496648273,70.79149717436444,70.99260938224617,71.1937215901279,71.3948337980096,71.59594600589132,71.79705821377303,71.99817042165476,72.19928262953647,72.40039483741819,72.6015070452999,72.80261925318162,73.00373146106335,73.20484366894506,73.40595587682678,73.60706808470849,73.80818029259021,74.00929250047191,74.21040470835365,74.41151691623536,74.61262912411708,74.81374133199878,75.0148535398805,75.21596574776224,75.41707795564395,75.61819016352567,75.81930237140737,76.0204145792891,76.22152678717082,76.42263899505254,76.62375120293424,76.82486341081596,77.02597561869767,77.2270878265794,77.42820003446113,77.62931224234283,77.83042445022456,78.03153665810626,78.232648865988,78.4337610738697,78.63487328175142,78.83598548963313,79.03709769751485,79.23820990539656,79.4393221132783,79.64043432116001,79.84154652904172,80.04265873692344,80.24377094480515,80.44488315268688,80.64599536056859,80.84710756845031,81.04821977633202,81.24933198421374,81.45044419209546,81.65155639997718,81.8526686078589,82.05378081574061,82.25489302362233,82.45600523150405,82.65711743938577,82.85822964726748,83.0593418551492,83.2604540630309,83.46156627091263,83.66267847879436,83.86379068667607,84.06490289455779,84.2660151024395,84.46712731032122,84.66823951820294,84.86935172608466,85.07046393396637,85.27157614184809,85.4726883497298,85.67380055761153,85.87491276549325,86.07602497337496,86.27713718125668,86.47824938913838,86.67936159702012,86.88047380490183,87.08158601278355,87.28269822066525,87.48381042854697,87.6849226364287,87.88603484431042,88.08714705219214,88.28825926007384,88.48937146795556,88.69048367583727,88.891595883719,89.09270809160071,89.29382029948243,89.49493250736414,89.69604471524586,89.89715692312758,90.0982691310093,90.29938133889102,90.50049354677273,90.70160575465445,90.90271796253617,91.1038301704179,91.3049423782996,91.50605458618132,91.70716679406303,91.90827900194476,92.10939120982647,92.31050341770819,92.51161562558991,92.71272783347162,92.91384004135335,93.11495224923506,93.31606445711678,93.51717666499849,93.71828887288021,93.91940108076192,94.12051328864365,94.32162549652536,94.52273770440708,94.7238499122888,94.9249621201705,95.12607432805224,95.32718653593395,95.52829874381567,95.72941095169737,95.9305231595791,96.13163536746082,96.33274757534254,96.53385978322424,96.73497199110597,96.93608419898769,97.1371964068694,97.33830861475113,97.53942082263283,97.74053303051456,97.94164523839626,98.14275744627798,98.3438696541597,98.54498186204142,98.74609406992315,98.94720627780485,99.14831848568657,99.3494306935683,99.55054290145002,99.75165510933172,99.95276731721344,100.15387952509515,100.35499173297688,100.55610394085859,100.75721614874031,100.95832835662203,101.15944056450374,101.36055277238547,101.56166498026718,101.7627771881489,101.96388939603061,102.16500160391233,102.36611381179404,102.56722601967577,102.76833822755748,102.9694504354392,103.17056264332092,103.37167485120263,103.57278705908436,103.77389926696607,103.97501147484779,104.1761236827295,104.37723589061122,104.57834809849294,104.77946030637466,104.98057251425637,105.18168472213809,105.38279693001981,105.58390913790153,105.78502134578325,105.98613355366496,106.18724576154668,106.38835796942838,106.58947017731012,106.79058238519183,106.99169459307355,107.19280680095525,107.39391900883697,107.5950312167187,107.79614342460042,107.99725563248214,108.19836784036384,108.39948004824556,108.60059225612727,108.801704464009,109.00281667189071,109.20392887977243,109.40504108765415,109.60615329553586,109.8072655034176,110.0083777112993,110.20948991918102,110.41060212706273,110.61171433494445,110.81282654282617,111.0139387507079,111.2150509585896,111.41616316647132,111.61727537435304,111.81838758223476,112.01949979011648,112.22061199799819,112.42172420587991,112.62283641376162,112.82394862164334,113.02506082952506,113.22617303740678,113.42728524528849,113.62839745317021,113.82950966105193,114.03062186893365,114.23173407681537,114.43284628469708,114.6339584925788,114.8350707004605,115.03618290834224,115.23729511622395,115.43840732410567,115.63951953198737,115.8406317398691,116.04174394775083,116.24285615563254,116.44396836351426,116.64508057139597,116.84619277927769,117.0473049871594,117.24841719504113,117.44952940292283,117.65064161080456,117.85175381868626,118.05286602656798,118.25397823444972,118.45509044233143,118.65620265021315,118.85731485809485,119.05842706597657,119.2595392738583,119.46065148174002,119.66176368962172,119.86287589750344,120.06398810538515,120.26510031326688,120.4662125211486,120.66732472903031,120.86843693691203,121.06954914479374,121.27066135267548,121.47177356055718,121.6728857684389,121.87399797632061,122.07511018420233,122.27622239208404,122.47733459996577,122.6784468078475,122.8795590157292,123.08067122361092,123.28178343149263,123.48289563937436,123.68400784725607,123.88512005513779,124.0862322630195,124.28734447090122,124.48845667878295,124.68956888666466,124.89068109454638,125.09179330242809,125.29290551030981,125.49401771819153,125.69512992607325,125.89624213395496,126.09735434183668,126.29846654971838,126.4995787576001,126.70069096548184,126.90180317336355,127.10291538124527,127.30402758912697,127.5051397970087,127.70625200489042,127.90736421277214,128.10847642065386,128.30958862853558,128.51070083641727,128.711813044299,128.9129252521807,129.11403746006243,129.31514966794415,129.51626187582588,129.7173740837076,129.9184862915893,130.119598499471,130.32071070735273,130.52182291523445,130.72293512311617,130.9240473309979,131.1251595388796,131.32627174676134,131.52738395464306,131.72849616252475,131.92960837040647,132.1307205782882,132.3318327861699,132.53294499405163,132.73405720193333,132.93516940981507,133.13628161769677,133.3373938255785,133.53850603346024,133.73961824134193,133.94073044922365,134.14184265710534,134.3429548649871,134.5440670728688,134.7451792807505,134.94629148863223,135.14740369651395,135.34851590439567,135.5496281122774,135.7507403201591,135.95185252804083,136.15296473592252,136.35407694380424,136.555189151686,136.7563013595677,136.9574135674494,137.1585257753311,137.35963798321285,137.56075019109457,137.76186239897626,137.962974606858,138.1640868147397,138.36519902262143,138.56631123050312,138.76742343838487,138.9685356462666,139.16964785414828,139.37076006203,139.57187226991172,139.77298447779344,139.97409668567516,140.17520889355688,140.3763211014386,140.5774333093203,140.77854551720202,140.97965772508377,141.18076993296546,141.38188214084718,141.58299434872887,141.78410655661062,141.98521876449234,142.18633097237404,142.3874431802558,142.58855538813748,142.7896675960192,142.99077980390092,143.19189201178264,143.39300421966436,143.59411642754606,143.7952286354278,143.99634084330953,144.19745305119122,144.39856525907294,144.59967746695466,144.80078967483638,145.0019018827181,145.2030140905998,145.40412629848154,145.60523850636324,145.80635071424496,146.0074629221267,146.2085751300084,146.40968733789012,146.6107995457718,146.81191175365356,147.01302396153528,147.21413616941697,147.4152483772987,147.61636058518042,147.81747279306214,148.01858500094383,148.21969720882558,148.4208094167073,148.621921624589,148.8230338324707,149.02414604035243,149.22525824823416,149.42637045611588,149.62748266399757,149.82859487187932,150.029707079761,150.23081928764273,150.43193149552448,150.63304370340617,150.8341559112879,151.0352681191696,151.23638032705134,151.43749253493306,151.63860474281475,151.83971695069647,152.0408291585782,152.2419413664599,152.44305357434163,152.64416578222335,152.84527799010507,153.04639019798677,153.2475024058685,153.44861461375024,153.64972682163193,153.85083902951365,154.05195123739534,154.2530634452771,154.4541756531588,154.6552878610405,154.85640006892226,155.05751227680395,155.25862448468567,155.4597366925674,155.6608489004491,155.86196110833083,156.06307331621252,156.26418552409424,156.465297731976,156.6664099398577,156.8675221477394,157.06863435562113,157.26974656350285,157.47085877138454,157.67197097926626,157.873083187148,158.0741953950297,158.27530760291143,158.47641981079312,158.67753201867487,158.8786442265566,159.07975643443828,159.28086864232003,159.48198085020172,159.68309305808344,159.88420526596516,160.08531747384689,160.2864296817286,160.4875418896103,160.68865409749202,160.88976630537377,161.09087851325546,161.29199072113718,161.4931029290189,161.69421513690062,161.89532734478234,162.09643955266404,162.2975517605458,162.49866396842748,162.6997761763092,162.90088838419092,163.10200059207264,163.30311279995436,163.50422500783606,163.7053372157178,163.90644942359953,164.10756163148122,164.30867383936294,164.50978604724466,164.71089825512638,164.9120104630081,165.1131226708898,165.31423487877154,165.51534708665324,165.71645929453496,165.9175715024167,166.1186837102984,166.31979591818012,166.5209081260618,166.72202033394356,166.92313254182525,167.12424474970697,167.32535695758872,167.52646916547042,167.72758137335214,167.92869358123383,168.12980578911558,168.3309179969973,168.532030204879,168.7331424127607,168.93425462064243,169.13536682852416,169.33647903640588,169.5375912442876,169.73870345216932,169.939815660051,170.14092786793273,170.34204007581448,170.54315228369617,170.7442644915779,170.9453766994596,171.14648890734134,171.34760111522306,171.54871332310475,171.7498255309865,171.9509377388682,172.1520499467499,172.35316215463163,172.55427436251335,172.75538657039507,172.95649877827677,173.1576109861585,173.35872319404024,173.55983540192193,173.76094760980365,173.96205981768537,174.1631720255671,174.3642842334488,174.5653964413305,174.76650864921226,174.96762085709395,175.16873306497567,175.3698452728574,175.5709574807391,175.77206968862083,175.97318189650252,176.17429410438427,176.375406312266,176.5765185201477,176.7776307280294,176.97874293591113,177.17985514379285,177.38096735167454,177.58207955955626,177.783191767438,177.9843039753197,178.18541618320143,178.38652839108315,178.58764059896487,178.7887528068466,178.98986501472828,179.19097722261003,179.39208943049172,179.59320163837344,179.79431384625516,179.99542605413689,180.1965382620186,180.3976504699003,180.59876267778205,180.79987488566377,181.00098709354546,181.20209930142718,181.4032115093089,181.60432371719062,181.80543592507235,182.00654813295404,182.2076603408358,182.40877254871748,182.6098847565992,182.81099696448095,183.01210917236264,183.21322138024436,183.41433358812606,183.6154457960078,183.81655800388953,184.01767021177122,184.21878241965294,184.41989462753466,184.62100683541638,184.8221190432981,185.02323125117982,185.22434345906154,185.42545566694324,185.62656787482496,185.8276800827067,186.0287922905884,186.22990449847012,186.4310167063518,186.63212891423356,186.83324112211525,187.03435332999697,187.23546553787872,187.43657774576042,187.63768995364214,187.83880216152383,188.03991436940558,188.2410265772873,188.442138785169,188.6432509930507,188.84436320093243,189.04547540881416,189.24658761669588,189.4476998245776,189.64881203245932,189.849924240341,190.05103644822273,190.25214865610448,190.45326086398617,190.6543730718679,190.8554852797496,191.05659748763134,191.25770969551306,191.45882190339475,191.6599341112765,191.8610463191582,192.0621585270399,192.26327073492163,192.46438294280335,192.66549515068508,192.86660735856677,193.0677195664485,193.26883177433024,193.46994398221193,193.67105619009365,193.87216839797537,194.0732806058571,194.2743928137388,194.4755050216205,194.67661722950226,194.87772943738395,195.07884164526567,195.27995385314742,195.4810660610291,195.68217826891083,195.88329047679252,196.08440268467427,196.28551489255597,196.4866271004377,196.6877393083194,196.88885151620113,197.08996372408285,197.29107593196454,197.4921881398463,197.693300347728,197.8944125556097,198.09552476349143,198.29663697137315,198.49774917925487,198.6988613871366,198.89997359501828,199.10108580290003,199.30219801078172,199.50331021866344,199.7044224265452,199.90553463442689,200.1066468423086,200.3077590501903,200.50887125807205,200.70998346595377,200.91109567383546,201.11220788171718,201.3133200895989,201.51443229748062,201.71554450536235,201.91665671324407,202.1177689211258,202.31888112900748,202.5199933368892,202.72110554477095,202.92221775265264,203.12332996053436,203.32444216841606,203.5255543762978,203.72666658417953,203.92777879206122,204.12889099994297,204.33000320782466,204.53111541570638,204.73222762358807,204.93333983146982,205.13445203935154,205.33556424723324,205.53667645511496,205.73778866299668,205.9389008708784,206.14001307876012,206.34112528664184,206.54223749452356,206.74334970240525,206.94446191028698,207.14557411816872,207.34668632605042,207.54779853393214,207.74891074181383,207.95002294969558,208.1511351575773,208.352247365459,208.55335957334074,208.75447178122243,208.95558398910416,209.15669619698588,209.3578084048676,209.55892061274932,209.760032820631,209.96114502851273,210.16225723639448,210.36336944427617,210.5644816521579,210.76559386003962,210.96670606792134,211.16781827580306,211.36893048368475,211.5700426915665,211.7711548994482,211.9722671073299,212.17337931521163,212.37449152309335,212.57560373097508,212.77671593885677,212.97782814673852,213.17894035462024,213.38005256250193,213.58116477038365,213.78227697826537,213.9833891861471,214.1845013940288,214.3856136019105,214.58672580979226,214.78783801767395,214.98895022555567,215.1900624334374,215.3911746413191,215.59228684920083,215.79339905708252,215.99451126496427,216.19562347284597,216.3967356807277,216.5978478886094,216.79896009649113,217.00007230437285,217.20118451225454,217.4022967201363,217.603408928018,217.8045211358997,218.00563334378143,218.20674555166315,218.40785775954487,218.6089699674266,218.8100821753083,219.01119438319003,219.21230659107172,219.41341879895344,219.6145310068352,219.81564321471689,220.0167554225986,220.2178676304803,220.41897983836205,220.62009204624377,220.82120425412546,221.0223164620072,221.2234286698889,221.42454087777062,221.62565308565235,221.82676529353407,222.0278775014158,222.22898970929748,222.4301019171792,222.63121412506095,222.83232633294264,223.03343854082436,223.23455074870608,223.4356629565878,223.63677516446953,223.83788737235122,224.03899958023297,224.24011178811466,224.44122399599638,224.64233620387807,224.84344841175982,225.04456061964154,225.24567282752324,225.446785035405,225.64789724328668,225.8490094511684,226.05012165905012,226.25123386693184,226.45234607481356,226.65345828269525,226.85457049057698,227.05568269845872,227.25679490634042,227.45790711422214,227.65901932210386,227.86013152998558,228.0612437378673,228.262355945749,228.46346815363074,228.66458036151244,228.86569256939416,229.06680477727588,229.2679169851576,229.46902919303932,229.670141400921,229.87125360880276,230.07236581668448,230.27347802456617,230.4745902324479,230.67570244032962,230.87681464821134,231.07792685609306,231.27903906397475,231.4801512718565,231.6812634797382,231.8823756876199,232.08348789550166,232.28460010338335,232.48571231126508,232.68682451914677,232.88793672702852,233.08904893491024,233.29016114279193,233.49127335067365,233.69238555855537,233.8934977664371,234.0946099743188,234.29572218220054,234.49683439008226,234.69794659796395,234.89905880584567,235.1001710137274,235.3012832216091,235.50239542949083,235.70350763737252,235.90461984525427,236.10573205313597,236.3068442610177,236.50795646889944,236.70906867678113,236.91018088466285,237.11129309254454,237.3124053004263,237.513517508308,237.7146297161897,237.91574192407143,238.11685413195315,238.31796633983487,238.5190785477166,238.7201907555983,238.92130296348003,239.12241517136172,239.32352737924344,239.5246395871252,239.7257517950069,239.9268640028886,240.1279762107703,240.32908841865205,240.53020062653377,240.73131283441546,240.9324250422972,241.1335372501789,241.33464945806062,241.53576166594235,241.73687387382407,241.9379860817058,242.13909828958748,242.3402104974692,242.54132270535095,242.74243491323264,242.94354712111436,243.14465932899608,243.3457715368778,243.5468837447595,243.74799595264122,243.94910816052297,244.15022036840466,244.35133257628638,244.55244478416807,244.75355699204982,244.95466919993154,245.15578140781324,245.356893615695,245.55800582357668,245.7591180314584,245.96023023934012,246.16134244722184,246.36245465510356,246.56356686298525,246.764679070867,246.96579127874872,247.16690348663042,247.36801569451214,247.56912790239386,247.77024011027558,247.9713523181573,248.172464526039,248.37357673392074,248.57468894180244,248.77580114968416,248.9769133575659,249.1780255654476,249.37913777332932,249.580249981211,249.78136218909276,249.98247439697448,250.18358660485617,250.3846988127379,250.58581102061962,250.78692322850134,250.98803543638306,251.18914764426478,251.3902598521465,251.5913720600282,251.7924842679099,251.99359647579166,252.19470868367335,252.39582089155508,252.59693309943677,252.79804530731852,252.9991575152002,253.20026972308193,253.40138193096368,253.60249413884537,253.8036063467271,254.0047185546088,254.20583076249054,254.40694297037226,254.60805517825395,254.80916738613567,255.0102795940174,255.2113918018991,255.41250400978083,255.61361621766255,255.81472842554427,256.01584063342597,256.2169528413077,256.4180650491894,256.61917725707116,256.82028946495285,257.02140167283454,257.2225138807163,257.423626088598,257.62473829647973,257.8258505043614,258.0269627122432,258.22807492012487,258.42918712800656,258.6302993358883,258.83141154377,259.03252375165175,259.23363595953344,259.4347481674152,259.6358603752969,259.8369725831786,260.0380847910603,260.239196998942,260.44030920682377,260.64142141470546,260.8425336225872,261.0436458304689,261.2447580383506,261.44587024623235,261.6469824541141,261.8480946619958,262.0492068698775,262.2503190777592,262.4514312856409,262.65254349352267,262.85365570140436,263.0547679092861,263.25588011716775,263.4569923250495,263.65810453293125,263.85921674081294,264.0603289486947,264.2614411565764,264.4625533644581,264.6636655723398,264.8647777802216,265.06588998810327,265.26700219598496,265.46811440386665,265.6692266117484,265.87033881963015,266.07145102751184,266.27256323539353,266.4736754432753,266.674787651157,266.8758998590387,267.0770120669205,267.2781242748021,267.47923648268386,267.68034869056555,267.8814608984473,268.08257310632905,268.2836853142107,268.48479752209244,268.6859097299742,268.8870219378559,269.0881341457376,269.2892463536193,269.490358561501,269.69147076938276,269.89258297726445,270.0936951851462,270.2948073930279,270.4959196009096,270.69703180879134,270.8981440166731,271.0992562245548,271.30036843243647,271.5014806403182,271.7025928481999,271.90370505608166,272.10481726396335,272.30592947184505,272.5070416797268,272.7081538876085,272.90926609549024,273.110378303372,273.3114905112536,273.5126027191354,273.7137149270171,273.9148271348988,274.11593934278056,274.3170515506622,274.51816375854395,274.7192759664257,274.9203881743074,275.12150038218914,275.32261259007083,275.5237247979525,275.7248370058343,275.925949213716,276.12706142159766,276.3281736294794,276.5292858373611,276.73039804524285,276.9315102531246,277.13262246100624,277.333734668888,277.53484687676973,277.7359590846514,277.9370712925332,278.13818350041487,278.33929570829656,278.5404079161783,278.74152012406,278.94263233194175,279.14374453982344,279.34485674770514,279.5459689555869,279.74708116346864,279.9481933713503,280.149305579232,280.35041778711377,280.55152999499546,280.7526422028772,280.9537544107589,281.1548666186406,281.35597882652235,281.55709103440404,281.7582032422858,281.95931545016754,282.1604276580492,282.3615398659309,282.56265207381267,282.76376428169436,282.9648764895761,283.16598869745775,283.3671009053395,283.56821311322125,283.76932532110294,283.9704375289847,284.1715497368664,284.3726619447481,284.5737741526298,284.7748863605116,284.97599856839327,285.17711077627496,285.3782229841567,285.5793351920384,285.78044739992015,285.98155960780184,286.18267181568353,286.3837840235653,286.584896231447,286.7860084393287,286.9871206472105,287.1882328550921,287.38934506297386,287.5904572708556,287.7915694787373,287.99268168661905,288.1937938945007,288.39490610238244,288.5960183102642,288.7971305181459,288.9982427260276,289.1993549339093,289.400467141791,289.60157934967276,289.8026915575545,290.0038037654362,290.2049159733179,290.4060281811996,290.60714038908134,290.8082525969631,291.0093648048448,291.21047701272647,291.4115892206082,291.6127014284899,291.81381363637166,292.0149258442534,292.21603805213505,292.4171502600168,292.6182624678985,292.81937467578024,293.020486883662,293.2215990915436,293.4227112994254,293.6238235073071,293.8249357151888,294.02604792307056,294.22716013095226,294.42827233883395,294.6293845467157,294.8304967545974,295.03160896247914,295.23272117036083,295.4338333782425,295.6349455861243,295.836057794006,296.03717000188766,296.2382822097694,296.43939441765116,296.64050662553285,296.8416188334146,297.04273104129624,297.243843249178,297.44495545705973,297.6460676649414,297.8471798728232,298.04829208070487,298.24940428858656,298.4505164964683,298.65162870435006,298.85274091223175,299.05385312011344,299.25496532799514,299.4560775358769,299.65718974375864,299.8583019516403,300.059414159522,300.26052636740377,300.46163857528546,300.6627507831672,300.86386299104896,301.0649751989306,301.26608740681235,301.46719961469404,301.6683118225758,301.86942403045754,302.0705362383392,302.2716484462209,302.4727606541027,302.67387286198436,302.8749850698661,303.0760972777478,303.2772094856295,303.47832169351125,303.67943390139294,303.8805461092747,304.0816583171564,304.2827705250381,304.4838827329198,304.6849949408016,304.88610714868327,305.08721935656496,305.2883315644467,305.4894437723284,305.69055598021015,305.89166818809184,306.09278039597353,306.2938926038553,306.495004811737,306.6961170196187,306.8972292275005,307.0983414353821,307.29945364326386,307.5005658511456,307.7016780590273,307.90279026690905,308.1039024747907,308.30501468267244,308.5061268905542,308.7072390984359,308.9083513063176,309.1094635141993,309.310575722081,309.51168792996276,309.7128001378445,309.9139123457262,310.1150245536079,310.3161367614896,310.51724896937134,310.7183611772531,310.9194733851348,311.1205855930165,311.3216978008982,311.5228100087799,311.72392221666166,311.9250344245434,312.12614663242505,312.3272588403068,312.5283710481885,312.72948325607024,312.930595463952,313.1317076718336,313.3328198797154,313.5339320875971,313.7350442954788,313.93615650336056,314.13726871124226,314.33838091912395,314.5394931270057,314.7406053348874,314.9417175427691,315.14282975065083,315.3439419585325,315.5450541664143,315.746166374296,315.94727858217766,316.1483907900594,316.34950299794116,316.55061520582285,316.7517274137046,316.95283962158624,317.153951829468,317.35506403734973,317.5561762452314,317.7572884531132,317.95840066099487,318.15951286887656,318.3606250767583,318.56173728464006,318.76284949252175,318.96396170040344,319.16507390828514,319.3661861161669,319.56729832404864,319.76841053193033,319.969522739812,320.17063494769377,320.37174715557546,320.5728593634572,320.77397157133896,320.9750837792206,321.17619598710235,321.37730819498404,321.5784204028658,321.77953261074754,321.9806448186292,322.1817570265109,322.3828692343927,322.58398144227436,322.7850936501561,322.9862058580378,323.1873180659195,323.38843027380125,323.58954248168294,323.7906546895647,323.9917668974464,324.1928791053281,324.3939913132098,324.5951035210916,324.79621572897327,324.99732793685496,325.1984401447367,325.3995523526184,325.60066456050015,325.80177676838184,326.00288897626353,326.2040011841453,326.405113392027,326.6062255999087,326.8073378077905,327.0084500156721,327.20956222355386,327.4106744314356,327.6117866393173,327.81289884719905,328.0140110550807,328.21512326296244,328.4162354708442,328.6173476787259,328.8184598866076,329.0195720944893,329.220684302371,329.42179651025276,329.6229087181345,329.8240209260162,330.0251331338979,330.2262453417796,330.42735754966134,330.6284697575431,330.8295819654248,331.0306941733065,331.2318063811882,331.4329185890699,331.63403079695166,331.8351430048334,332.03625521271505,332.2373674205968,332.4384796284785,332.63959183636024,332.840704044242,333.0418162521236,333.2429284600054,333.4440406678871,333.6451528757688,333.8462650836505,334.04737729153226,334.24848949941395,334.4496017072957,334.65071391517745,334.8518261230591,335.05293833094083,335.2540505388225,335.4551627467043,335.656274954586,335.85738716246766,336.0584993703494,336.25961157823116,336.46072378611285,336.6618359939946,336.8629482018763,337.064060409758,337.26517261763973,337.4662848255214,337.6673970334032,337.86850924128487,338.06962144916656,338.2707336570483,338.47184586493006,338.67295807281175,338.87407028069345,339.0751824885752,339.2762946964569,339.47740690433864,339.67851911222033,339.879631320102,340.08074352798377,340.28185573586546,340.4829679437472,340.68408015162896,340.8851923595106,341.08630456739235,341.2874167752741,341.4885289831558,341.68964119103754,341.8907533989192,342.0918656068009,342.2929778146827,342.49409002256436,342.6952022304461,342.8963144383278,343.0974266462095,343.29853885409125,343.499651061973,343.7007632698547,343.9018754777364,344.1029876856181,344.3040998934998,344.5052121013816,344.70632430926327,344.90743651714496,345.1085487250267,345.3096609329084,345.51077314079015,345.7118853486719,345.91299755655353,346.1141097644353,346.315221972317,346.5163341801987,346.7174463880805,346.9185585959621,347.11967080384386,347.3207830117256,347.5218952196073,347.72300742748905,347.92411963537074,348.12523184325244,348.3263440511342,348.5274562590159,348.7285684668976,348.9296806747793,349.130792882661,349.33190509054276,349.5330172984245,349.7341295063062,349.9352417141879,350.13635392206965,350.33746612995134,350.5385783378331,350.7396905457148,350.9408027535965,351.1419149614782,351.3430271693599,351.54413937724166,351.7452515851234,351.94636379300505,352.1474760008868,352.34858820876855,352.54970041665024,352.750812624532,352.9519248324136,353.1530370402954,353.3541492481771,353.5552614560588,353.7563736639405,353.95748587182226,354.15859807970395,354.3597102875857,354.56082249546745,354.7619347033491,354.96304691123083,355.1641591191125,355.3652713269943,355.566383534876,355.76749574275766,355.9686079506394,356.16972015852116,356.37083236640285,356.5719445742846,356.7730567821663,356.974168990048,357.17528119792973,357.3763934058114,357.5775056136932,357.77861782157487,357.97973002945656,358.1808422373383,358.38195444522006,358.58306665310175,358.78417886098345,358.9852910688652,359.1864032767469,359.38751548462864,359.58862769251033,359.789739900392,359.99085210827377,360.19196431615546,360.3930765240372,360.59418873191896,360.7953009398006,360.99641314768235,361.1975253555641,361.3986375634458,361.59974977132754,361.8008619792092,362.0019741870909,362.2030863949727,362.40419860285436,362.6053108107361,362.8064230186178,363.0075352264995,363.20864743438125,363.409759642263,363.6108718501447,363.8119840580264,364.0130962659081,364.2142084737898,364.4153206816716,364.61643288955327,364.81754509743496,365.0186573053167,365.2197695131984,365.42088172108015,365.6219939289619,365.82310613684353,366.0242183447253,366.225330552607,366.4264427604887,366.6275549683705,366.8286671762521,367.02977938413386,367.2308915920156,367.4320037998973,367.63311600777905,367.83422821566074,368.03534042354244,368.2364526314242,368.4375648393059,368.6386770471876,368.8397892550693,369.040901462951,369.24201367083276,369.4431258787145,369.6442380865962,369.8453502944779,370.04646250235965,370.24757471024134,370.4486869181231,370.6497991260047,370.8509113338865,371.0520235417682,371.2531357496499,371.45424795753166,371.6553601654134,371.85647237329505,372.0575845811768,372.25869678905855,372.45980899694024,372.66092120482193,372.8620334127036,373.0631456205854,373.2642578284671,373.4653700363488,373.6664822442305,373.86759445211226,374.06870665999395,374.2698188678757,374.47093107575745,374.6720432836391,374.87315549152083,375.0742676994025,375.2753799072843,375.476492115166,375.67760432304766,375.8787165309294,376.07982873881116,376.28094094669285,376.4820531545746,376.6831653624563,376.884277570338,377.08538977821974,377.2865019861014,377.4876141939832,377.68872640186487,377.88983860974656,378.0909508176283,378.29206302551006,378.49317523339175,378.69428744127345,378.8953996491552,379.0965118570369,379.29762406491864,379.49873627280033,379.699848480682,379.90096068856377,380.10207289644546,380.3031851043272,380.50429731220896,380.7054095200906,380.90652172797235,381.1076339358541,381.3087461437358,381.50985835161754,381.7109705594992,381.9120827673809,382.1131949752627,382.31430718314436,382.5154193910261,382.7165315989078,382.9176438067895,383.11875601467125,383.319868222553,383.5209804304347,383.7220926383164,383.9232048461981,384.1243170540798,384.3254292619616,384.52654146984327,384.72765367772496,384.9287658856067,385.1298780934884,385.33099030137015,385.5321025092519,385.73321471713354,385.9343269250153,386.135439132897,386.3365513407787,386.5376635486605,386.7387757565421,386.93988796442386,387.1410001723056,387.3421123801873,387.54322458806905,387.74433679595074,387.94544900383244,388.1465612117142,388.34767341959594,388.5487856274776,388.7498978353593,388.951010043241,389.15212225112276,389.3532344590045,389.5543466668862,389.7554588747679,389.95657108264965,390.15768329053134,390.3587954984131,390.55990770629484,390.7610199141765,390.9621321220582,391.1632443299399,391.36435653782166,391.56546874570336,391.76658095358505,391.9676931614668,392.16880536934855,392.36991757723024,392.57102978511193,392.7721419929937,392.9732542008754,393.1743664087571,393.3754786166388,393.5765908245205,393.77770303240226,393.97881524028395,394.1799274481657,394.38103965604745,394.5821518639291,394.78326407181083,394.9843762796926,395.1854884875743,395.386600695456,395.58771290333766,395.7888251112194,395.98993731910116,396.19104952698285,396.3921617348646,396.5932739427463,396.794386150628,396.99549835850974,397.1966105663915,397.3977227742732,397.59883498215487,397.79994719003656,398.0010593979183,398.20217160580006,398.40328381368175,398.60439602156345,398.8055082294452,399.0066204373269,399.20773264520864,399.4088448530904,399.609957060972,399.81106926885377,400.01218147673546,400.2132936846172,400.41440589249896,400.6155181003806,400.81663030826235,401.0177425161441,401.2188547240258,401.41996693190754,401.62107913978923,401.8221913476709,402.0233035555527,402.22441576343437,402.4255279713161,402.6266401791978,402.8277523870795,403.02886459496125,403.229976802843,403.4310890107247,403.6322012186064,403.83331342648813,404.0344256343698,404.2355378422516,404.43665005013327,404.63776225801496,404.8388744658967,405.0399866737784,405.24109888166015,405.4422110895419,405.64332329742354,405.8444355053053,406.04554771318703,406.2466599210687,406.4477721289505,406.6488843368321,406.84999654471386,407.0511087525956,407.2522209604773,407.45333316835905,407.65444537624074,407.85555758412244,408.0566697920042,408.25778199988594,408.4588942077676,408.6600064156493,408.861118623531,409.06223083141276,409.2633430392945,409.46445524717615,409.6655674550579,409.86667966293965,410.06779187082134,410.2689040787031,410.47001628658484,410.6711284944665,410.8722407023482,411.0733529102299,411.27446511811166,411.47557732599336,411.67668953387505,411.8778017417568,412.07891394963855,412.28002615752024,412.48113836540193,412.6822505732837,412.8833627811654,413.0844749890471,413.2855871969288,413.4866994048105,413.68781161269226,413.88892382057395,414.0900360284557,414.29114823633745,414.4922604442191,414.69337265210083,414.8944848599826,415.0955970678643,415.296709275746,415.49782148362766,415.6989336915094,415.90004589939116,416.10115810727285,416.3022703151546,416.5033825230363,416.704494730918,416.90560693879974,417.1067191466815,417.3078313545632,417.50894356244487,417.71005577032656,417.9111679782083,418.11228018609006,418.31339239397175,418.51450460185345,418.7156168097352,418.9167290176169,419.11784122549864,419.3189534333804,419.520065641262,419.72117784914377,419.92229005702546,420.1234022649072,420.32451447278896,420.5256266806706,420.72673888855235,420.9278510964341,421.1289633043158,421.33007551219754,421.53118772007923,421.7322999279609,421.9334121358427,422.13452434372437,422.3356365516061,422.5367487594878,422.7378609673695,422.93897317525125,423.140085383133,423.3411975910147,423.5423097988964,423.74342200677813,423.9445342146598,424.1456464225416,424.34675863042327,424.54787083830496,424.7489830461867,424.9500952540684,425.15120746195015,425.3523196698319,425.55343187771354,425.7545440855953,425.95565629347703,426.1567685013587,426.3578807092405,426.5589929171221,426.76010512500386,426.9612173328856,427.1623295407673,427.36344174864905,427.56455395653074,427.76566616441244,427.9667783722942,428.16789058017594,428.3690027880576,428.5701149959393,428.771227203821,428.97233941170276,429.1734516195845,429.37456382746615,429.5756760353479,429.77678824322965,429.97790045111134,430.1790126589931,430.3801248668748,430.5812370747565,430.7823492826382,430.9834614905199,431.18457369840166,431.38568590628336,431.58679811416505,431.7879103220468,431.98902252992855,432.19013473781024,432.39124694569193,432.5923591535737,432.7934713614554,432.9945835693371,433.1956957772188,433.3968079851005,433.59792019298226,433.79903240086395,434.0001446087457,434.20125681662745,434.4023690245091,434.60348123239083,434.8045934402726,435.0057056481543,435.206817856036,435.40793006391766,435.6090422717994,435.81015447968116,436.01126668756285,436.2123788954446,436.4134911033263,436.614603311208,436.81571551908974,437.0168277269715,437.2179399348532,437.41905214273487,437.6201643506166,437.8212765584983,438.02238876638006,438.22350097426175,438.42461318214345,438.6257253900252,438.8268375979069,439.02794980578864,439.2290620136704,439.430174221552,439.63128642943377,439.8323986373155,440.0335108451972,440.23462305307896,440.4357352609606,440.63684746884235,440.8379596767241,441.0390718846058,441.24018409248754,441.44129630036923,441.6424085082509,441.8435207161327,442.0446329240144,442.2457451318961,442.4468573397778,442.6479695476595,442.84908175554125,443.050193963423,443.2513061713047,443.4524183791864,443.65353058706813,443.8546427949498,444.0557550028316,444.2568672107133,444.45797941859496,444.6590916264767,444.8602038343584,445.06131604224015,445.2624282501219,445.46354045800354,445.6646526658853,445.86576487376703,446.0668770816487,446.2679892895305,446.46910149741217,446.67021370529386,446.8713259131756,447.0724381210573,447.27355032893905,447.47466253682074,447.67577474470244,447.8768869525842,448.07799916046594,448.27911136834757,448.4802235762293,448.68133578411107,448.88244799199276,449.0835601998745,449.28467240775615,449.4857846156379,449.68689682351965,449.88800903140134,450.0891212392831,450.2902334471648,450.4913456550465,450.6924578629282,450.89357007081,451.09468227869166,451.29579448657336,451.49690669445505,451.6980189023368,451.89913111021855,452.10024331810024,452.30135552598193,452.5024677338637,452.7035799417454,452.9046921496271,453.1058043575089,453.3069165653905,453.50802877327226,453.70914098115395,453.9102531890357,454.11136539691745,454.3124776047991,454.51358981268083,454.7147020205626,454.9158142284443,455.116926436326,455.3180386442077,455.5191508520894,455.72026305997116,455.92137526785285,456.1224874757346,456.3235996836163,456.524711891498,456.72582409937974,456.9269363072615,457.1280485151432,457.32916072302487,457.5302729309066,457.7313851387883,457.93249734667006,458.13360955455175,458.33472176243345,458.5358339703152,458.7369461781969,458.93805838607864,459.1391705939604,459.340282801842,459.5413950097238,459.7425072176055,459.9436194254872,460.14473163336896,460.3458438412506,460.54695604913235,460.7480682570141,460.9491804648958,461.15029267277754,461.35140488065923,461.5525170885409,461.7536292964227,461.9547415043044,462.1558537121861,462.3569659200678,462.5580781279495,462.75919033583125,462.960302543713,463.1614147515947,463.3625269594764,463.56363916735813,463.7647513752398,463.9658635831216,464.1669757910033,464.36808799888496,464.5692002067667,464.7703124146484,464.97142462253015,465.1725368304119,465.37364903829354,465.5747612461753,465.77587345405703,465.9769856619387,466.1780978698205,466.37921007770217,466.58032228558386,466.7814344934656,466.9825467013473,467.183658909229,467.38477111711074,467.58588332499244,467.7869955328742,467.98810774075594,468.1892199486376,468.3903321565193,468.59144436440107,468.79255657228276,468.9936687801645,469.19478098804615,469.3958931959279,469.59700540380965,469.79811761169134,469.9992298195731,470.2003420274548,470.4014542353365,470.6025664432182,470.8036786511,471.00479085898166,471.20590306686336,471.40701527474505,471.6081274826268,471.80923969050855,472.01035189839024,472.21146410627193,472.4125763141537,472.6136885220354,472.8148007299171,473.0159129377989,473.2170251456805,473.41813735356226,473.61924956144395,473.8203617693257,474.02147397720745,474.2225861850891,474.42369839297083,474.6248106008526,474.8259228087343,475.027035016616,475.2281472244977,475.4292594323794,475.63037164026116,475.83148384814285,476.0325960560246,476.2337082639063,476.434820471788,476.63593267966974,476.8370448875515,477.0381570954332,477.23926930331487,477.4403815111966,477.6414937190783,477.84260592696006,478.04371813484175,478.24483034272345,478.4459425506052,478.6470547584869,478.84816696636864,479.0492791742504,479.250391382132,479.4515035900138,479.6526157978955,479.8537280057772,480.05484021365896,480.2559524215406,480.45706462942235,480.6581768373041,480.8592890451858,481.06040125306754,481.26151346094923,481.4626256688309,481.6637378767127,481.8648500845944,482.0659622924761,482.2670745003578,482.4681867082395,482.66929891612125,482.870411124003,483.0715233318847,483.2726355397664,483.47374774764813,483.6748599555298,483.8759721634116,484.0770843712933,484.27819657917496,484.4793087870567,484.6804209949384,484.88153320282015,485.0826454107019,485.28375761858354,485.4848698264653,485.68598203434703,485.8870942422287,486.0882064501105,486.28931865799217,486.49043086587386,486.6915430737556,486.8926552816373,487.093767489519,487.29487969740075,487.49599190528244,487.6971041131642,487.89821632104594,488.0993285289276,488.3004407368093,488.50155294469107,488.70266515257276,488.9037773604545,489.10488956833615,489.3060017762179,489.50711398409965,489.70822619198134,489.9093383998631,490.1104506077448,490.3115628156265,490.5126750235082,490.71378723139,490.91489943927166,491.11601164715336,491.3171238550351,491.5182360629168,491.71934827079855,491.92046047868024,492.12157268656193,492.3226848944437,492.5237971023254,492.7249093102071,492.9260215180889,493.1271337259705,493.32824593385226,493.529358141734,493.7304703496157,493.93158255749745,494.1326947653791,494.33380697326083,494.5349191811426,494.7360313890243,494.937143596906,495.1382558047877,495.3393680126694,495.54048022055116,495.7415924284329,495.9427046363146,496.1438168441963,496.344929052078,496.54604125995974,496.7471534678415,496.9482656757232,497.14937788360487,497.3504900914866,497.5516022993683,497.75271450725006,497.9538267151318,498.15493892301345,498.3560511308952,498.5571633387769,498.75827554665864,498.9593877545404,499.160499962422,499.3616121703038,499.5627243781855,499.7638365860672,499.96494879394896,500.16606100183066,500.36717320971235,500.5682854175941,500.7693976254758,500.97050983335754,501.17162204123923,501.3727342491209,501.5738464570027,501.7749586648844,501.9760708727661,502.1771830806478,502.37829528852956,502.57940749641125,502.780519704293,502.9816319121747,503.1827441200564,503.38385632793813,503.5849685358198,503.7860807437016,503.9871929515833,504.18830515946496,504.3894173673467,504.59052957522846,504.79164178311015,504.9927539909919,505.19386619887354,505.3949784067553,505.59609061463703,505.7972028225187,505.9983150304004,506.19942723828217,506.40053944616386,506.6016516540456,506.80276386192736,507.003876069809,507.20498827769075,507.40610048557244,507.6072126934542,507.80832490133594,508.0094371092176,508.2105493170993,508.41166152498107,508.61277373286276,508.8138859407445,509.0149981486262,509.2161103565079,509.41722256438965,509.61833477227134,509.8194469801531,510.0205591880348,510.2216713959165,510.4227836037982,510.62389581168,510.82500801956166,511.02612022744336,511.2272324353251,511.4283446432068,511.62945685108855,511.83056905897024,512.0316812668519,512.2327934747337,512.4339056826154,512.6350178904971,512.8361300983788,513.0372423062605,513.2383545141423,513.439466722024,513.6405789299057,513.8416911377874,514.0428033456691,514.2439155535509,514.4450277614326,514.6461399693143,514.847252177196,515.0483643850778,515.2494765929595,515.4505888008412,515.6517010087229,515.8528132166045,516.0539254244864,516.255037632368,516.4561498402497,516.6572620481314,516.8583742560131,517.0594864638949,517.2605986717766,517.4617108796583,517.66282308754,517.8639352954218,518.0650475033035,518.2661597111852,518.4672719190669,518.6683841269486,518.8694963348304,519.0706085427121,519.2717207505938,519.4728329584755,519.6739451663572,519.875057374239,520.0761695821207,520.2772817900023,520.478393997884,520.6795062057657,520.8806184136475,521.0817306215292,521.2828428294109,521.4839550372926,521.6850672451744,521.8861794530561,522.0872916609378,522.2884038688196,522.4895160767012,522.690628284583,522.8917404924647,523.0928527003464,523.2939649082282,523.4950771161098,523.6961893239916,523.8973015318733,524.098413739755,524.2995259476368,524.5006381555183,524.7017503634002,524.9028625712818,525.1039747791637,525.3050869870453,525.5061991949269,525.7073114028087,525.9084236106904,526.1095358185722,526.3106480264539,526.5117602343355,526.7128724422173,526.913984650099,527.1150968579808,527.3162090658625,527.5173212737442,527.7184334816259,527.9195456895076,528.1206578973894,528.3217701052711,528.5228823131528,528.7239945210345,528.9251067289161,529.126218936798,529.3273311446796,529.5284433525613,529.7295555604431,529.9306677683247,530.1317799762065,530.3328921840882,530.5340043919699,530.7351165998517,530.9362288077333,531.1373410156151,531.3384532234968,531.5395654313785,531.7406776392603,531.941789847142,532.1429020550237,532.3440142629054,532.5451264707871,532.7462386786689,532.9473508865506,533.1484630944323,533.349575302314,533.5506875101956,533.7517997180775,533.9529119259591,534.154024133841,534.3551363417225,534.5562485496042,534.757360757486,534.9584729653677,535.1595851732495,535.3606973811311,535.5618095890128,535.7629217968946,535.9640340047763,536.1651462126581,536.3662584205398,536.5673706284214,536.7684828363032,536.9695950441849,537.1707072520667,537.3718194599484,537.57293166783,537.7740438757118,537.9751560835934,538.1762682914753,538.377380499357,538.5784927072386,538.7796049151203,538.980717123002,539.1818293308838,539.3829415387655,539.5840537466472,539.7851659545289,539.9862781624106,540.1873903702924,540.3885025781741,540.5896147860558,540.7907269939376,540.9918392018192,541.192951409701,541.3940636175827,541.5951758254644,541.7962880333462,541.9974002412278,542.1985124491096,542.3996246569913,542.6007368648729,542.8018490727547,543.0029612806364,543.2040734885181,543.4051856963998,543.6062979042815,543.8074101121633,544.008522320045,544.2096345279267,544.4107467358084,544.6118589436901,544.8129711515719,545.0140833594536,545.2151955673354,545.416307775217,545.6174199830987,545.8185321909805,546.0196443988622,546.220756606744,546.4218688146256,546.6229810225072,546.824093230389,547.0252054382707,547.2263176461526,547.4274298540342,547.6285420619158,547.8296542697976,548.0307664776793,548.2318786855611,548.4329908934428,548.6341031013244,548.8352153092062,549.0363275170879,549.2374397249697,549.4385519328514,549.6396641407331,549.8407763486148,550.0418885564965,550.2430007643783,550.44411297226,550.6452251801417,550.8463373880234,551.047449595905,551.2485618037869,551.4496740116685,551.6507862195502,551.851898427432,552.0530106353136,552.2541228431953,552.4552350510771,552.6563472589588,552.8574594668406,553.0585716747222,553.2596838826039,553.4607960904857,553.6619082983674,553.8630205062492,554.0641327141309,554.2652449220125,554.4663571298943,554.667469337776,554.8685815456578,555.0696937535395,555.270805961421,555.4719181693029,555.6730303771845,555.8741425850664,556.075254792948,556.2763670008297,556.4774792087114,556.6785914165931,556.8797036244749,557.0808158323566,557.2819280402383,557.48304024812,557.6841524560017,557.8852646638835,558.0863768717652,558.2874890796469,558.4886012875287,558.6897134954103,558.8908257032921,559.0919379111738,559.2930501190555,559.4941623269373,559.6952745348189,559.8963867427007,560.0974989505823,560.298611158464,560.4997233663458,560.7008355742275,560.9019477821092,561.1030599899909,561.3041721978726,561.5052844057544,561.7063966136361,561.9075088215178,562.1086210293995,562.3097332372812,562.510845445163,562.7119576530447,562.9130698609265,563.1141820688081,563.3152942766898,563.5164064845716,563.7175186924533,563.9186309003351,564.1197431082167,564.3208553160983,564.5219675239802,564.7230797318618,564.9241919397437,565.1253041476253,565.3264163555069,565.5275285633887,565.7286407712704,565.9297529791522,566.1308651870339,566.3319773949155,566.5330896027973,566.734201810679,566.9353140185608,567.1364262264425,567.3375384343242,567.5386506422059,567.7397628500876,567.9408750579694,568.1419872658511,568.3430994737328,568.5442116816146,568.7453238894961,568.946436097378,569.1475483052596,569.3486605131413,569.5497727210231,569.7508849289047,569.9519971367865,570.1531093446682,570.3542215525499,570.5553337604317,570.7564459683134,570.9575581761951,571.1586703840768,571.3597825919585,571.5608947998403,571.762007007722,571.9631192156037,572.1642314234854,572.3653436313671,572.5664558392489,572.7675680471306,572.9686802550124,573.169792462894,573.3709046707756,573.5720168786575,573.7731290865391,573.974241294421,574.1753535023025,574.3764657101842,574.577577918066,574.7786901259477,574.9798023338295,575.1809145417112,575.3820267495928,575.5831389574746,575.7842511653563,575.9853633732381,576.1864755811198,576.3875877890014,576.5886999968832,576.7898122047649,576.9909244126467,577.1920366205284,577.3931488284101,577.5942610362918,577.7953732441734,577.9964854520553,578.197597659937,578.3987098678186,578.5998220757003,578.800934283582,579.0020464914638,579.2031586993455,579.4042709072272,579.605383115109,579.8064953229906,580.0076075308724,580.2087197387541,580.4098319466358,580.6109441545176,580.8120563623992,581.013168570281,581.2142807781627,581.4153929860444,581.6165051939262,581.8176174018079,582.0187296096896,582.2198418175713,582.4209540254529,582.6220662333347,582.8231784412164,583.0242906490981,583.2254028569798,583.4265150648615,583.6276272727433,583.828739480625,584.0298516885068,584.2309638963884,584.4320761042701,584.6331883121519,584.8343005200336,585.0354127279154,585.236524935797,585.4376371436787,585.6387493515605,585.8398615594422,586.040973767324,586.2420859752057,586.4431981830872,586.644310390969,586.8454225988507,587.0465348067326,587.2476470146142,587.4487592224958,587.6498714303776,587.8509836382593,588.0520958461411,588.2532080540228,588.4543202619045,588.6554324697862,588.8565446776679,589.0576568855497,589.2587690934314,589.4598813013131,589.6609935091948,589.8621057170765,590.0632179249583,590.26433013284,590.4654423407217,590.6665545486035,590.867666756485,591.0687789643667,591.2698911722485,591.4710033801302,591.672115588012,591.8732277958936,592.0743400037753,592.2754522116571,592.4765644195388,592.6776766274206,592.8787888353023,593.0799010431839,593.2810132510657,593.4821254589474,593.6832376668292,593.8843498747109,594.0854620825925,594.2865742904743,594.487686498356,594.6887987062378,594.8899109141195,595.0910231220012,595.2921353298829,595.4932475377645,595.6943597456464,595.895471953528,596.0965841614097,596.2976963692914,596.4988085771731,596.6999207850549,596.9010329929366,597.1021452008183,597.3032574087001,597.5043696165817,597.7054818244635,597.9065940323452,598.1077062402269,598.3088184481087,598.5099306559903,598.7110428638721,598.9121550717538,599.1132672796355,599.3143794875173,599.515491695399,599.7166039032807,599.9177161111623,600.118828319044,600.3199405269258,600.5210527348075,600.7221649426892,600.9232771505709,601.1243893584526,601.3255015663344,601.5266137742161,601.7277259820979,601.9288381899795,602.1299503978612,602.331062605743,602.5321748136247,602.7332870215065,602.9343992293881,603.1355114372698,603.3366236451516,603.5377358530333,603.7388480609151,603.9399602687968,604.1410724766783,604.3421846845602,604.5432968924418,604.7444091003237,604.9455213082053,605.1466335160869,605.3477457239687,605.5488579318504,605.7499701397322,605.9510823476139,606.1521945554956,606.3533067633773,606.554418971259,606.7555311791408,606.9566433870225,607.1577555949042,607.3588678027859,607.5599800106676,607.7610922185494,607.9622044264311,608.1633166343128,608.3644288421946,608.5655410500761,608.766653257958,608.9677654658396,609.1688776737213,609.3699898816031,609.5711020894847,609.7722142973665,609.9733265052482,610.1744387131299,610.3755509210117,610.5766631288934,610.7777753367751,610.9788875446568,611.1799997525385,611.3811119604203,611.582224168302,611.7833363761837,611.9844485840654,612.1855607919471,612.3866729998289,612.5877852077106,612.7888974155924,612.990009623474,613.1911218313556,613.3922340392375,613.5933462471191,613.794458455001,613.9955706628825,614.1966828707642,614.397795078646,614.5989072865277,614.8000194944095,615.0011317022912,615.2022439101728,615.4033561180546,615.6044683259363,615.8055805338181,616.0066927416998,616.2078049495814,616.4089171574632,616.6100293653449,616.8111415732267,617.0122537811084,617.2133659889901,617.4144781968718,617.6155904047534,617.8167026126353,618.017814820517,618.2189270283986,618.4200392362803,618.621151444162,618.8222636520438,619.0233758599255,619.2244880678072,619.425600275689,619.6267124835706,619.8278246914524,620.0289368993341,620.2300491072158,620.4311613150976,620.6322735229792,620.833385730861,621.0344979387427,621.2356101466244,621.4367223545062,621.6378345623879,621.8389467702696,622.0400589781513,622.241171186033,622.4422833939147,622.6433956017964,622.8445078096781,623.0456200175598,623.2467322254415,623.4478444333233,623.648956641205,623.8500688490868,624.0511810569684,624.2522932648501,624.4534054727319,624.6545176806136,624.8556298884954,625.056742096377,625.2578543042587,625.4589665121405,625.6600787200222,625.861190927904,626.0623031357857,626.2634153436672,626.464527551549,626.6656397594307,626.8667519673126,627.0678641751942,627.2689763830758,627.4700885909576,627.6712007988393,627.8723130067211,628.0734252146028,628.2745374224845,628.4756496303662,628.6767618382479,628.8778740461297,629.0789862540114,629.2800984618931,629.4812106697748,629.6823228776565,629.8834350855382,630.08454729342,630.2856595013017,630.4867717091835,630.687883917065,630.8889961249467,631.0901083328285,631.2912205407102,631.492332748592,631.6934449564736,631.8945571643553,632.0956693722371,632.2967815801188,632.4978937880006,632.6990059958823,632.9001182037639,633.1012304116457,633.3023426195274,633.5034548274092,633.7045670352909,633.9056792431725,634.1067914510543,634.307903658936,634.5090158668178,634.7101280746995,634.9112402825812,635.1123524904629,635.3134646983445,635.5145769062264,635.715689114108,635.9168013219897,636.1179135298714,636.3190257377531,636.5201379456349,636.7212501535166,636.9223623613983,637.1234745692801,637.3245867771617,637.5256989850435,637.7268111929252,637.9279234008069,638.1290356086887,638.3301478165703,638.5312600244521,638.7323722323338,638.9334844402155,639.1345966480973,639.335708855979,639.5368210638607,639.7379332717423,639.939045479624,640.1401576875058,640.3412698953875,640.5423821032692,640.7434943111509,640.9446065190326,641.1457187269144,641.3468309347961,641.5479431426779,641.7490553505595,641.9501675584412,642.151279766323,642.3523919742047,642.5535041820865,642.7546163899681,642.9557285978498,643.1568408057316,643.3579530136133,643.5590652214951,643.7601774293768,643.9612896372583,644.1624018451402,644.3635140530218,644.5646262609037,644.7657384687853,644.9668506766669,645.1679628845487,645.3690750924304,645.5701873003122,645.7712995081939,645.9724117160756,646.1735239239573,646.374636131839,646.5757483397208,646.7768605476025,646.9779727554842,647.1790849633659,647.3801971712476,647.5813093791294,647.7824215870111,647.9835337948928,648.1846460027746,648.3857582106561,648.586870418538,648.7879826264196,648.9890948343013,649.1902070421831,649.3913192500647,649.5924314579465,649.7935436658282,649.9946558737099,650.1957680815917,650.3968802894734,650.5979924973551,650.7991047052368,651.0002169131185,651.2013291210003,651.402441328882,651.6035535367637,651.8046657446454,652.0057779525271,652.2068901604089,652.4080023682906,652.6091145761724,652.810226784054,653.0113389919356,653.2124511998175,653.4135634076991,653.614675615581,653.8157878234625,654.0169000313442,654.218012239226,654.4191244471077,654.6202366549895,654.8213488628712,655.0224610707528,655.2235732786346,655.4246854865163,655.6257976943981,655.8269099022798,656.0280221101614,656.2291343180432,656.4302465259249,656.6313587338067,656.8324709416884,657.0335831495701,657.2346953574518,657.4358075653334,657.6369197732153,657.838031981097,658.0391441889786,658.2402563968603,658.441368604742,658.6424808126238,658.8435930205055,659.0447052283872,659.245817436269,659.4469296441506,659.6480418520324,659.8491540599141,660.0502662677958,660.2513784756776,660.4524906835592,660.653602891441,660.8547150993227,661.0558273072044,661.2569395150862,661.4580517229679,661.6591639308496,661.8602761387313,662.061388346613,662.2625005544947,662.4636127623764,662.6647249702581,662.8658371781398,663.0669493860215,663.2680615939033,663.469173801785,663.6702860096668,663.8713982175484,664.0725104254301,664.2736226333119,664.4747348411936,664.6758470490754,664.876959256957,665.0780714648387,665.2791836727205,665.4802958806022,665.681408088484,665.8825202963657,666.0836325042472,666.284744712129,666.4858569200107,666.6869691278926,666.8880813357742,667.0891935436558,667.2903057515376,667.4914179594193,667.692530167301,667.8936423751828,668.0947545830645,668.2958667909462,668.4969789988279,668.6980912067096,668.8992034145914,669.1003156224731,669.3014278303549,669.5025400382365,669.7036522461182,669.904764454,670.1058766618817,670.3069888697635,670.508101077645,670.7092132855267,670.9103254934085,671.1114377012902,671.312549909172,671.5136621170537,671.7147743249353,671.9158865328171,672.1169987406988,672.3181109485806,672.5192231564623,672.7203353643439,672.9214475722257,673.1225597801074,673.3236719879892,673.5247841958709,673.7258964037526,673.9270086116343,674.128120819516,674.3292330273978,674.5303452352795,674.7314574431612,674.9325696510429,675.1336818589245,675.3347940668064,675.535906274688,675.7370184825697,675.9381306904515,676.1392428983331,676.3403551062149,676.5414673140966,676.7425795219783,676.9436917298601,677.1448039377417,677.3459161456235,677.5470283535052,677.7481405613869,677.9492527692687,678.1503649771504,678.3514771850321,678.5525893929138,678.7537016007955,678.9548138086773,679.155926016559,679.3570382244407,679.5581504323223,679.759262640204,679.9603748480858,680.1614870559675,680.3625992638493,680.5637114717309,680.7648236796126,680.9659358874944,681.1670480953761,681.3681603032579,681.5692725111395,681.7703847190212,681.971496926903,682.1726091347847,682.3737213426665,682.5748335505482,682.7759457584298,682.9770579663116,683.1781701741933,683.3792823820751,683.5803945899568,683.7815067978383,683.9826190057202,684.1837312136018,684.3848434214837,684.5859556293653,684.787067837247,684.9881800451287,685.1892922530104,685.3904044608922,685.5915166687739,685.7926288766556,685.9937410845373,686.194853292419,686.3959655003008,686.5970777081825,686.7981899160642,686.999302123946,687.2004143318276,687.4015265397094,687.6026387475911,687.8037509554728,688.0048631633546,688.2059753712361,688.407087579118,688.6081997869996,688.8093119948813,689.0104242027631,689.2115364106448,689.4126486185265,689.6137608264082,689.8148730342899,690.0159852421717,690.2170974500534,690.4182096579351,690.6193218658168,690.8204340736985,691.0215462815803,691.222658489462,691.4237706973438,691.6248829052254,691.8259951131071,692.0271073209889,692.2282195288706,692.4293317367524,692.630443944634,692.8315561525156,693.0326683603975,693.2337805682791,693.434892776161,693.6360049840426,693.8371171919242,694.038229399806,694.2393416076877,694.4404538155695,694.6415660234512,694.8426782313328,695.0437904392146,695.2449026470963,695.4460148549781,695.6471270628598,695.8482392707415,696.0493514786232,696.2504636865049,696.4515758943867,696.6526881022684,696.8538003101501,697.0549125180318,697.2560247259134,697.4571369337953,697.658249141677,697.8593613495586,698.0604735574404,698.261585765322,698.4626979732038,698.6638101810855,698.8649223889672,699.066034596849,699.2671468047306,699.4682590126124,699.6693712204941,699.8704834283758,700.0715956362576,700.2727078441393,700.473820052021,700.6749322599027,700.8760444677844,701.0771566756662,701.2782688835479,701.4793810914296,701.6804932993113,701.881605507193,702.0827177150748,702.2838299229564,702.4849421308382,702.6860543387198,702.8871665466015,703.0882787544833,703.289390962365,703.4905031702468,703.6916153781284,703.8927275860101,704.0938397938919,704.2949520017736,704.4960642096554,704.6971764175371,704.8982886254187,705.0994008333005,705.3005130411822,705.501625249064,705.7027374569457,705.9038496648272,706.104961872709,706.3060740805907,706.5071862884724,706.7082984963542,706.9094107042359,707.1105229121176,707.3116351199993,707.512747327881,707.7138595357628,707.9149717436445,708.1160839515262,708.3171961594079,708.5183083672896,708.7194205751714,708.9205327830531,709.1216449909349,709.3227571988165,709.5238694066982,709.72498161458,709.9260938224617,710.1272060303435,710.328318238225,710.5294304461067,710.7305426539886,710.9316548618702,711.132767069752,711.3338792776337,711.5349914855153,711.7361036933971,711.9372159012788,712.1383281091606,712.3394403170423,712.5405525249239,712.7416647328057,712.9427769406874,713.1438891485692,713.3450013564509,713.5461135643326,713.7472257722143,713.948337980096,714.1494501879778,714.3505623958595,714.5516746037412,714.7527868116229,714.9538990195045,715.1550112273864,715.356123435268,715.5572356431497,715.7583478510315,715.9594600589131,716.1605722667949,716.3616844746766,716.5627966825583,716.7639088904401,716.9650210983217,717.1661333062035,717.3672455140852,717.5683577219669,717.7694699298487,717.9705821377304,718.1716943456121,718.3728065534938,718.5739187613755,718.7750309692573,718.976143177139,719.1772553850207,719.3783675929024,719.579479800784,719.7805920086658,719.9817042165475,720.1828164244293,720.3839286323109,720.5850408401926,720.7861530480744,720.9872652559561,721.1883774638379,721.3894896717195,721.5906018796012,721.791714087483,721.9928262953647,722.1939385032465,722.3950507111282,722.5961629190098,722.7972751268916,722.9983873347733,723.1994995426551,723.4006117505368,723.6017239584183,723.8028361663002,724.0039483741818,724.2050605820637,724.4061727899453,724.607284997827,724.8083972057087,725.0095094135904,725.2106216214722,725.4117338293539,725.6128460372356,725.8139582451173,726.015070452999,726.2161826608808,726.4172948687625,726.6184070766442,726.819519284526,727.0206314924076,727.2217437002894,727.4228559081711,727.6239681160528,727.8250803239346,728.0261925318162,728.227304739698,728.4284169475796,728.6295291554613,728.8306413633431,729.0317535712248,729.2328657791065,729.4339779869882,729.6350901948699,729.8362024027517,730.0373146106334,730.2384268185151,730.4395390263968,730.6406512342785,730.8417634421603,731.042875650042,731.2439878579238,731.4451000658054,731.6462122736871,731.8473244815689,732.0484366894506,732.2495488973324,732.450661105214,732.6517733130956,732.8528855209775,733.0539977288591,733.255109936741,733.4562221446226,733.6573343525042,733.858446560386,734.0595587682677,734.2606709761495,734.4617831840312,734.6628953919128,734.8640075997946,735.0651198076763,735.2662320155581,735.4673442234398,735.6684564313215,735.8695686392032,736.0706808470849,736.2717930549667,736.4729052628484,736.6740174707301,736.8751296786118,737.0762418864934,737.2773540943753,737.478466302257,737.6795785101386,737.8806907180204,738.081802925902,738.2829151337838,738.4840273416655,738.6851395495472,738.886251757429,739.0873639653106,739.2884761731924,739.4895883810741,739.6907005889558,739.8918127968376,740.0929250047193,740.294037212601,740.4951494204827,740.6962616283644,740.8973738362462,741.0984860441279,741.2995982520094,741.5007104598913,741.701822667773,741.9029348756548,742.1040470835364,742.3051592914182,742.5062714992998,742.7073837071815,742.9084959150633,743.109608122945,743.3107203308268,743.5118325387084,743.7129447465901,743.9140569544719,744.1151691623536,744.3162813702354,744.5173935781171,744.7185057859987,744.9196179938805,745.1207302017622,745.3218424096439,745.5229546175257,745.7240668254072,745.925179033289,746.1262912411707,746.3274034490524,746.5285156569342,746.7296278648159,746.9307400726976,747.1318522805793,747.332964488461,747.5340766963428,747.7351889042245,747.9363011121062,748.1374133199879,748.3385255278696,748.5396377357514,748.7407499436331,748.9418621515149,749.1429743593965,749.3440865672782,749.54519877516,749.7463109830417,749.9474231909235,750.148535398805,750.3496476066867,750.5507598145686,750.7518720224502,750.952984230332,751.1540964382137,751.3552086460953,751.5563208539771,751.7574330618588,751.9585452697406,752.1596574776223,752.3607696855039,752.5618818933857,752.7629941012674,752.9641063091492,753.1652185170309,753.3663307249126,753.5674429327943,753.768555140676,753.9696673485578,754.1707795564395,754.3718917643212,754.5730039722029,754.7741161800845,754.9752283879664,755.176340595848,755.3774528037297,755.5785650116115,755.7796772194931,755.9807894273749,756.1819016352566,756.3830138431383,756.5841260510201,756.7852382589017,756.9863504667835,757.1874626746652,757.3885748825469,757.5896870904287,757.7907992983104,757.9919115061921,758.1930237140738,758.3941359219555,758.5952481298373,758.796360337719,758.9974725456007,759.1985847534824,759.399696961364,759.6008091692458,759.8019213771275,760.0030335850093,760.2041457928909,760.4052580007726,760.6063702086544,760.8074824165361,761.0085946244179,761.2097068322995,761.4108190401812,761.611931248063,761.8130434559447,762.0141556638265,762.2152678717082,762.4163800795898,762.6174922874716,762.8186044953533,763.0197167032351,763.2208289111168,763.4219411189983,763.6230533268802,763.8241655347618,764.0252777426437,764.2263899505253,764.427502158407,764.6286143662887,764.8297265741704,765.0308387820522,765.2319509899339,765.4330631978156,765.6341754056973,765.835287613579,766.0363998214608,766.2375120293425,766.4386242372242,766.639736445106,766.8408486529876,767.0419608608694,767.2430730687511,767.4441852766328,767.6452974845146,767.8464096923962,768.047521900278,768.2486341081596,768.4497463160413,768.6508585239231,768.8519707318048,769.0530829396865,769.2541951475682,769.4553073554499,769.6564195633317,769.8575317712134,770.0586439790951,770.2597561869768,770.4608683948585,770.6619806027403,770.863092810622,771.0642050185038,771.2653172263854,771.4664294342671,771.6675416421489,771.8686538500306,772.0697660579124,772.270878265794,772.4719904736756,772.6731026815575,772.8742148894391,773.075327097321,773.2764393052026,773.4775515130842,773.678663720966,773.8797759288477,774.0808881367295,774.2820003446112,774.4831125524929,774.6842247603746,774.8853369682563,775.0864491761381,775.2875613840198,775.4886735919015,775.6897857997832,775.8908980076649,776.0920102155467,776.2931224234284,776.4942346313101,776.6953468391919,776.8964590470734,777.0975712549553,777.298683462837,777.4997956707186,777.7009078786004,777.902020086482,778.1031322943638,778.3042445022455,778.5053567101272,778.706468918009,778.9075811258907,779.1086933337724,779.3098055416541,779.5109177495358,779.7120299574176,779.9131421652993,780.1142543731809,780.3153665810627,780.5164787889444,780.7175909968262,780.9187032047079,781.1198154125897,781.3209276204713,781.522039828353,781.7231520362348,781.9242642441164,782.1253764519982,782.3264886598798,782.5276008677615,782.7287130756433,782.929825283525,783.1309374914067,783.3320496992885,783.5331619071701,783.7342741150519,783.9353863229336,784.1364985308153,784.3376107386971,784.5387229465787,784.7398351544605,784.9409473623422,785.1420595702239,785.3431717781057,785.5442839859874,785.745396193869,785.9465084017507,786.1476206096324,786.3487328175142,786.5498450253959,786.7509572332776,786.9520694411593,787.153181649041,787.3542938569228,787.5554060648045,787.7565182726863,787.9576304805679,788.1587426884496,788.3598548963314,788.5609671042131,788.7620793120949,788.9631915199765,789.1643037278582,789.36541593574,789.5665281436217,789.7676403515035,789.9687525593852,790.1698647672667,790.3709769751486,790.5720891830302,790.773201390912,790.9743135987937,791.1754258066753,791.3765380145571,791.5776502224388,791.7787624303206,791.9798746382023,792.180986846084,792.3820990539657,792.5832112618474,792.7843234697292,792.9854356776109,793.1865478854926,793.3876600933743,793.588772301256,793.7898845091378,793.9909967170195,794.1921089249012,794.393221132783,794.5943333406645,794.7954455485464,794.996557756428,795.1976699643097,795.3987821721915,795.5998943800731,795.8010065879549,796.0021187958366,796.2032310037183,796.4043432116001,796.6054554194818,796.8065676273635,797.0076798352452,797.2087920431269,797.4099042510087,797.6110164588904,797.8121286667721,798.0132408746538,798.2143530825355,798.4154652904173,798.616577498299,798.8176897061808,799.0188019140624,799.219914121944,799.4210263298258,799.6221385377075,799.8232507455893,800.0243629534709,800.2254751613526,800.4265873692344,800.6276995771161,800.8288117849979,801.0299239928796,801.2310362007612,801.432148408643,801.6332606165247,801.8343728244065,802.0354850322882,802.2365972401698,802.4377094480516,802.6388216559333,802.8399338638151,803.0410460716968,803.2421582795785,803.4432704874602,803.6443826953418,803.8454949032237,804.0466071111053,804.247719318987],"cosine":[1.0,0.9798450101169925,0.9201924877023385,0.8234470247275643,0.6935084288476367,0.5356145222333003,0.3561300050653555,0.16228989459915577,-0.03809211823456469,-0.2369386385530052,-0.42623416714558693,-0.5983482050849457,-0.7463428389842997,-0.8642524081456859,-0.9473239802219898,-0.9922089418236847,-0.9970979810568079,-0.9617940208487968,-0.8877201631212968,-0.7778623235804939,-0.6366488695154157,-0.46977211240211486,-0.28395885094324747,-0.08669921394847618,0.11405526660628848,0.3102121816719453,0.4938644499712347,0.6576090522850289,0.7948454470072659,0.9000416378435311,0.9689571684697523,0.998814055240823,0.9884087676551249,0.9381607426446968,0.8500954770809915,0.7277628800369712,0.5760941760242033,0.4012031274325808,0.21013958889208986,0.010605327775318378,-0.1893564338894864,-0.3816852415356421,-0.5586283248185095,-0.7130531116312201,-0.838734741941981,-0.930606991776009,-0.9849664926014327,-0.9996220140398905,-0.973982792318737,-0.909082343946769,-0.807536804684664,-0.6734394731654099,-0.5121958101092197,-0.33030554431129217,-0.13510066870557244,0.06555011212204401,0.26355856925636084,0.4509429857967924,0.6201498997041319,0.764358583702499,0.8777559886578398,0.9557710674708847,0.9952590338932358,0.9946281287974067,0.9539037839550452,0.8747275968827305,0.7602911580792981,0.6152073980774091,0.44532464030711705,0.2574908552967372,0.059277619119413795,-0.14132509668519422,-0.33623100070198847,-0.5175834398837804,-0.6780721010766327,-0.8112276895951868,-0.911682706360527,-0.97538781167945,-0.9997750540455561,-0.9838613842125193,-0.9282882818893131,-0.8352958977061196,-0.7086327527877571,-0.5534046359429816,-0.37586878942093155,-0.18318167960264423,0.01688948001393035,0.21627982503288487,0.4069519346809633,0.5812198200763178,0.7320587462847858,0.8533883992429799,0.9403179830951364,0.9893433680751097,0.9984883419063342,0.9673842708787119,0.8972849594660076,0.7910161094928811,0.6528614161515033,0.4883898923350434,0.3042313818406343,0.10780931050004601,-0.09295855196539055,-0.28997925708202416,-0.47531090421312044,-0.6414827784128134,-0.781796494794442,-0.8905960102897652,-0.9634956186306143,-0.9975567380798193,-0.9914063656015749,-0.9452924225860326,-0.8610737611430801,-0.7421452338114036,-0.5933008471213479,-0.42054051528866543,-0.23082820379391028,-0.03181121207479703,0.1684880889593802,0.36199563853679384,0.5409111512494037,0.6980225463999407,0.826996666828869,0.9226345683513661,0.9810810890921939,0.9999802509828953,0.9785702291900611,0.9177140612589522,0.8198648580875069,0.6889669190756874,0.5302967374964733,0.35025030515879263,0.15608529010712044,-0.044371519830542334,-0.24303971470164862,-0.43191098359079017,-0.6033719294706736,-0.7505109650822097,-0.8673969188771095,-0.9493181204229693,-0.9929723277430674,-0.9965998406236308,-0.9600544340938411,-0.8848092527514558,-0.7738974283338789,-0.6317898142391906,-0.46421476551614616,-0.27792722898805716,-0.08043645148304161,0.12029671775370879,0.3161807287318892,0.49931950093248323,0.6623307141537096,0.7986433896889948,0.9027627663456524,0.9704917941574052,0.9991003173835893,0.9874351270318225,0.9359664466891493,0.8467689778187681,0.7234382685860258,0.570945777384615,0.39543847344934446,0.20399105265062753,0.0043207566471089144,-0.1955237089694216,-0.38748661783363186,-0.5638299489733535,-0.7174453062784868,-0.8421404578043168,-0.9328889445159084,-0.9860326967501272,-0.9994294909297181,-0.9725393025523749,-0.9064460745674894,-0.8038140236578077,-0.668780245718842,-0.5067879496070278,-0.3243670415009055,-0.1288709045151129,0.071820016024105,0.26961587317059643,0.4565435199249914,0.6250679066288986,0.7683958186642104,0.8807497107968818,0.9576005999084041,0.9958506282136975,0.9939579378457208,0.9519988231149146,0.871664655087074,0.7561937024499265,0.6102405969678298,0.43968870536956467,0.25141297095450765,0.053002784767353976,-0.1475439426013072,-0.34214317662911187,-0.5229506261299295,-0.6826779464728122,-0.8148865326066763,-0.9142470590995633,-0.9767543051390093,-0.9998886049019354,-0.9827174152329956,-0.9259329064403018,-0.8318240609243147,-0.7041844043435853,-0.5481590886722117,-0.37003749122791496,-0.1769996899995546,0.023172965151285616,0.22241151854575197,0.4126846681279172,0.5863225070880951,0.7363256976511936,0.8566476142407804,0.9424380828337127,0.9902388913768985,0.9981231902451589,0.9657731635106472,0.8944928400964592,0.7871555283971409,0.6480879932754281,0.4828960442581802,0.2982385654678026,0.10155909613796579,-0.09921421830224021,-0.2959882096101821,-0.48083092217776513,-0.6462913500014875,-0.7856997865836985,-0.893436680666554,-0.9651591602295265,-0.9979760935726646,-0.9905646307769215,-0.943223527757632,-0.8578611034196008,-0.7379183153606778,-0.5882300549405893,-0.4148302529080895,-0.2247086517745274,-0.02552904943468527,0.17467962837130768,0.36784697389211846,0.5461864153383545,0.7025090934338235,0.8305136441875385,0.9250402067486506,0.9822784172929756,0.9999210047116289,0.9772567966627417,0.9151993869141773,0.816250308397236,0.6843981964647998,0.5249580070809653,0.34435677105369555,0.14987452055296152,-0.050649168838710464,-0.2491311912593216,-0.43757074040119304,-0.6083718218512859,-0.7546494474723453,-0.8705071691353591,-0.9512747644243521,-0.993696493207481,-0.9960623364558556,-0.9582769270760064,-0.8818633941554825,-0.7699019656601651,-0.6269058045072723,-0.45863908305948875,-0.2718846294536728,-0.07417051193588849,0.12653341741725954,0.3221367872745933,0.5047548297550057,0.6670262152611894,0.8024097875267984,0.9054482374931455,0.9719880873269714,0.9993471170278411,0.9864224846620928,0.9337351818988724,0.8434090328464906,0.7190850827455965,0.5657748275091792,0.3896582004237521,0.1978344591635823,-0.0019639851424988475,-0.20168326124721814,-0.39327268917191843,-0.5690093029535789,-0.7218091632465005,-0.8455129107740401,-0.9351340499763652,-0.9870599545456326,-0.9991974923193231,-0.9710573993953691,-0.9037740023501469,-0.800059493557143,-0.6640946027672436,-0.5013600719770718,-0.3184157268300223,-0.12263605017727414,0.0780870831767179,0.2756625277878553,0.46212602148162246,0.6299612246001103,0.7724027035015945,0.8837086450537186,0.9593923090046715,0.9964028883919779,0.9932484875094041,0.9500562601927026,0.8685672842510518,0.7520663786558243,0.6052496925542813,0.43403540359248294,0.2453251562941369,0.04672585690949356,-0.153756960821735,-0.34804183857335524,-0.5282971568543444,-0.6872568274321043,-0.8185131892020193,-0.9167753008769778,-0.9780822187236129,-0.9999626621239929,-0.9815346308473859,-0.9235409584616818,-0.8283193687272974,-0.6997082419997058,-0.5428918901950113,-0.36419157728141116,-0.17081070925665784,0.029455535002063507,0.2285344272408545,0.4184011013417285,0.591402035513427,0.7405635656000112,0.8598729933418029,0.9445209581206567,0.9910953021890812,0.997718614680071,0.964123910001131,0.8916653900181193,0.7832638562054164,0.6432889721976212,0.47738312273683836,0.2922339692579095,0.09530487039123914,-0.10546596587249074,-0.30198547118592484,-0.48633194826620924,-0.6510743943523046,-0.7895720447758997,-0.8962420620507598,-0.9667845799389133,-0.9983560309716255,-0.9896837705965946,-0.9411173774540651,-0.8546145618689137,-0.7336622505870738,-0.583136028828998,-0.40910360554798025,-0.2185802242051331,-0.01924587844731271,0.1808642682812841,0.37368378001509434,0.5514401061375819,0.7069678927395067,0.8339978178898708,0.9274093078762027,0.983436947427232,0.9998222635263116,0.9759047644130356,0.912648563992717,0.8126035184243648,0.6798024414705329,0.5195985418561353,0.33844963553307855,0.14365783124985568,-0.05692481730426449,-0.2552128276246934,-0.44321321402752883,-0.6133476847408723,-0.758758122692791,-0.8735830360716558,-0.9531938349425505,-0.994381409613811,-0.9954854897838404,-0.9564615700033243,-0.8788827036890007,-0.7658760933722808,-0.6219970332284306,-0.45304528526062937,-0.26583129101089675,-0.06790164279932823,0.13276511925954643,0.3280801220474636,0.5101702217539891,0.6716953701444005,0.806144491755356,0.908097945215178,0.9734459888778151,0.9995544444254777,0.9853708805433176,0.9314670364044397,0.8400157748753853,0.7147034944579694,0.5605815306402517,0.383862536665236,0.19167005160430123,-0.008248649358540054,-0.20783484743265557,-0.3990432270121007,-0.5741661821848966,-0.7261445101715015,-0.8488519676458818,-0.9373422194801232,-0.9880482254132879,-0.9989260273721946,-0.9695371413799845,-0.9010662328363452,-0.7962733626792409,-0.6593827293843016,-0.49591239160982925,-0.3124518353638613,-0.11639635195650902,0.08435106604303405,0.28169829427716825,0.4676902699688418,0.6348296603413222,0.7763790799505679,0.8866326745562587,0.9611461239906979,0.9969157926148869,0.9924998058103477,0.9480761719158226,0.8654356067147269,0.7479093497181797,0.6002348819676597,0.42836495827018856,0.2392276517723642,0.040447083472138476,-0.15996390594445734,-0.35392675354913916,-0.5336228208796032,-0.691808563097726,-0.8221075161354144,-0.9192673318322047,-0.9793714999832789,-0.999997222786614,-0.9803130777733509,-0.9211125324306828,-0.8247819595435179,-0.6952044425557626,-0.5376032485553599,-0.3583312784835358,-0.16461498182650955,0.035736941417112235,0.23464830927533875,0.4241010085345193,0.5964582047209401,0.7447721827437759,0.8630644091499295,0.9465665266864762,0.9919125666851115,0.9972746311910091,0.9624365754924374,0.8888027209096916,0.7793412466311047,0.6384645424699784,0.47185134552058994,0.28621783038068793,0.08904688028948146,-0.11171354774443452,-0.30797080492918244,-0.4918137651987113,-0.655831722544421,-0.7934131164244658,-0.8990120436353484,-0.968371813557885,-0.9986965352699227,-0.9887638198528415,-0.9389740548641237,-0.8513342647230262,-0.7293772075968222,-0.5780189699905969,-0.40336079939967695,-0.2124431631465518,-0.01296194728557485,0.18704176440822567,0.37950582636333063,0.5566720161366444,0.7113987682031725,0.8374490503178735,0.9297417781591862,0.9845566337352923,0.9996840313270268,0.9745141858435614,0.9100616932470463,0.8089246322099245,0.675179835616172,0.51421855351033,0.33252913191716577,0.13743546774482374,-0.06319821735145856,-0.2612843835850415,-0.4488381816031623,-0.6182993216026191,-0.7628368284589454,-0.8766243981953196,-0.9550752561780398,-0.9950270499092086,-0.9948693233918956,-0.9546084345788263,-0.8758672990834226,-0.7618199704842467,-0.6170636942895035,-0.44743359306360714,-0.25976745275469454,-0.06163009168135783,0.13899157714063215,0.3340104983004365,0.5155654630321133,0.6763379943808981,0.8098473548612132,0.9107117848535049,0.9748654412256907,0.9997222913874741,0.9842803562117961,0.9291620997931384,0.8365893379324675,0.7102936767872738,0.5553660919028558,0.37805171109110197,0.18549807345477198,-0.014532987769168034,-0.21397822455017926,-0.40479800342923183,-0.5793003829807029,-0.7304511758157891,-0.8521574965336781,-0.9395133658088304,-0.9889974703183364,-0.9986151068106648,-0.9679785885534191,-0.8983228729776542,-0.7924557805688068,-0.6546448116797682,-0.4904451236779905,-0.30647560266442503,-0.1101520563086666,0.09061171720807928,0.2877229342376035,0.47323604560979105,0.6396730215588874,0.780324790952091,0.8895216838110883,0.9628619755942367,0.997389320623715,0.9917119223200104,0.9460586364938737,0.862269746173202,0.7437227798314404,0.5951963632831481,0.4226775933741055,0.23312069822861806,0.03416671245448255,-0.16616453280735044,-0.359797689113917,-0.5389274078524162,-0.6963329736850461,-0.8256693714380138,-0.9217230535349058,-0.9806220979939377,-0.9999922855247201,-0.9790528042598313,-0.9186477242653727,-0.8212119730936771,-0.6906731839029753,-0.5322933726441942,-0.35245682630456465,-0.15841275242819175,0.04201693629322634,0.2407529231628485,0.4297841645711798,0.6014908150018674,0.748951382850398,0.8662217356104918,0.9485747077352525,0.9926906525846504,0.9967912573144474,0.960711226630961,0.8859049458409946,0.7753878546095728,0.6336148946480068,0.466300931103742,0.28019038646182437,0.08278537301098574,-0.11795671715083374,-0.31394397443106503,-0.4972761564542909,-0.6605631466727354,-0.7972228498146172,-0.9017465160114766,-0.9699207983938342,-0.9989975930183046,-0.9878048148819046,-0.9367936446448466,-0.8480203415472197,-0.725063355640664,-0.572879080539134,-0.39760206129272024,-0.20629771100065888,-0.00667750415239969,0.19321187275314414,0.3853128829774677,0.5618819386853584,0.7158015448139654,0.8408672051546304,0.9320375254696156,0.9856374319917525,0.9995063135736736,0.9730851158794375,0.9074388768534891,0.8052137950626885,0.6705305614855877,0.5088182545424949,0.3265954940542384,0.13120767580897116,-0.06946912119328753,-0.26734561932589596,-0.4544454209529444,-0.6232265368566209,-0.7668854036699625,-0.8796311353785146,-0.9569189538183925,-0.9956333885921471,-0.9942138616173818,-0.9527175939977269,-0.8728172994412958,-0.7577337572049571,-0.6121059825476589,-0.44180422811923253,-0.2536933541947569,-0.055356106295917876,0.14521254512763507,0.33992768179532135,0.5209403404879294,0.6809539045961464,0.8135182305885438,0.9132896531666106,0.9762463883050132,0.9998506512842057,0.9831509547410936,0.9268204631054283,0.8331298573552532,0.705855803912644,0.5501287172965513,0.37222595321757673,0.1793187684959917,-0.020816752155362148,-0.2201131499484835,-0.41053679112097574,-0.5844117025501531,-0.7347289900745558,-0.8554293668755245,-0.941647403206475,-0.9899076517674654,-0.9982647429154844,-0.9663818024754528,-0.8955440311313891,-0.7886068980128426,-0.6498810367920573,-0.48495848412789133,-0.3004872647811505,-0.10390340987110763,0.0968687893884043,0.29373620970773945,0.4787631293571843,0.6444911169495753,0.7842396806583266,0.8923755587080209,0.9645397960425324,0.9978234537150371,0.9908848681582397,0.9440037336155411,0.8590698276717379,0.739506834356901,0.5901343355123296,0.4169735335440057,0.2270045368755584,0.027884991918863476,-0.17235859649785637,-0.36565441337724863,-0.5442107082520494,-0.7008298804887404,-0.8291986144235344,-0.9241423689889178,-0.9818339633594182,-0.9999478505333237,-0.9777538600851652,-0.9161466313208178,-0.81760955038523,-0.6861146450171325,-0.5269624721911863,-0.3465684527738109,-0.15220426603755935,0.048295271582967564,0.2468480277831908,0.43545034497819257,0.6064996675779959,0.7531010008496789,0.8693448480153221,0.9505454219477681,0.9934295291548343,0.996268512142706,0.9589479315645858,0.882972179268434,0.7714038362920342,0.6287402202832398,0.4607320987167906,0.27415187557349124,0.07652059587298062,-0.12419522749879781,-0.31990474376309225,-0.5027189062792192,-0.6652684798552851,-0.8010010944693915,-0.9044453711728675,-0.9714314732649151,-0.9992591923255826,-0.9868067935625998,-0.9345762329181514,-0.8446729232349526,-0.7207208651072611,-0.5677165634901735,-0.39182761868594496,-0.2001441105007196,-0.00039279727092287486,0.1993743496089169,0.3911047204901324,0.5670696680020484,0.7201760486708344,0.8442521473897528,0.9342964591299846,0.986679299507206,0.999289117285755,0.9716176109661214,0.9047802184081253,0.8014711535534124,0.6658548027159368,0.5033978582538601,0.32064895631131424,0.12497470142786506,-0.07573728114140531,-0.2733962954403325,-0.4600347106019561,-0.6281291358875275,-0.7709036884150526,-0.8826031288610329,-0.958724855041176,-0.9962004017134457,-0.9935191303497523,-0.9507891229445038,-0.8697328252316171,-0.7536176149318223,-0.6071240938227758,-0.43615741277631637,-0.24760923524602294,-0.04907993445308357,0.151427777504577,0.34583143881501527,0.5262946418243437,0.6855429184707967,0.8171569739449726,0.9158314483337352,0.9775887755710999,0.9999395190457089,0.9819827207403452,0.9244422188313712,0.8296374697864481,0.701390051121284,0.5448696136873754,0.3663854931505914,0.173132380798373,-0.02709969432072488,-0.22623938131006113,-0.4162593634164869,-0.5894999390062299,-0.7389777839825188,-0.8586674494389598,-0.9437442473827794,-0.9907787338103049,-0.9978749495253376,-0.9647468462159968,-0.8927298170563592,-0.7847268670346428,-0.6450915928809449,-0.47945268967097127,-0.29448705824159865,-0.0976506594531535,0.1031220354419864,0.29973788317500233,0.48427130290217846,0.6492837562080567,0.7881235944388099,0.8951941865246145,0.9661795190649565,0.9982181747414506,0.9900186759920511,0.9419115444454258,0.8558359776008322,0.7352616798161395,0.5850489985953163,0.41125300407898774,0.22087940928952174,0.021602169980865463,-0.17854585236259357,-0.3714966950100651,-0.5494725133984872,-0.7052991058898607,-0.83269510569384,-0.926525182636009,-0.9830070482134315,-0.9998639195675197,-0.9764162965550703,-0.9136093523852895,-0.8139748337068082,-0.6815290059515382,-0.521610757756449,-0.3406663904704403,-0.1459897678776343,0.05457169930441965,0.25293338239168717,0.44109932595257023,0.6114845646095292,0.7572208728398467,0.8724336230075848,0.9524785914846947,0.9941291672114928,0.995706416323189,0.957146759940013,0.8800045370305442,0.7673893490393534,0.6238407119157655,0.45514506831761764,0.26810253622501184,0.0702527963219045,-0.13042883237941752,-0.3258528774865932,-0.5081417996956388,-0.669947536240638,-0.8047477011555091,-0.9071085025200534,-0.9729037785024329,-0.9994813228590985,-0.9857697953148075,-0.9323219072674271,-0.8412921420026678,-0.7163499075165025,-0.5625316227529438,-0.3860376996584696,-0.19398260470184306,0.005891925125273984,0.20552895156978052,0.39688111013523314,0.5722349991815693,0.7245221069895161,0.8476037433246839,0.9365184899168341,0.9876821951299364,0.9990324510420975,0.9701117290671556,0.9020858229227426,0.797696855509121,0.6611527439904994,0.4979575787393746,0.3146897535649311,0.11873679079174078,-0.0820024496157733,-0.27943617293853906,-0.46560582978420584,-0.6330069250523592,-0.7748915239799038,-0.8855402612549609,-0.9604928885168377,-0.9967280668771957,-0.992785157029518,-0.9488230975899856,-0.8666139982850686,-0.7494717062443339,-0.6021182248896882,-0.43049337007298966,-0.24151533621927224,-0.042801824049319245,0.15763702878198282,0.3517215361726816,0.5316281555570155,0.6901048547478015,0.8207634412072738,0.9183370699589951,0.9788925500022807,0.9999888911618815,0.9807757003525055,0.9220274609069197,0.8261123131684484,0.6968965948017314,0.5395889887995348,0.36053056157689023,0.1669391547119988,-0.03338156610146269,-0.23235667666078863,-0.4219654942854478,-0.5945648913735034,-0.7431973897207094,-0.8618716163261174,-0.9458038155165158,-0.9916106820408225,-0.9974457420362998,-0.9630737843525984,-0.88988034190845,-0.7808158408878216,-0.6402766691200071,-0.4739279577753378,-0.28847522004214615,-0.09139405202611177,0.10937120837785663,0.30572771758515593,0.4897603486826342,0.6540507500345454,0.7919763788865989,0.8979774559306047,0.9677810798956916,0.9985734681122482,0.9891133800343265,0.9397821516209249,0.8525683236912206,0.7309874838843766,0.5799405533929423,0.405516230928746,0.21474555740104856,0.015318494799646963,-0.18472605601720216,-0.3773243032536871,-0.5547126154608176,-0.7097404733627486,-0.8361587071443435,-0.9288714003597515,-0.9841413062214215,-0.999740495942415,-0.9750401665007039,-0.9110359876762955,-0.8103079666225429,-0.6769164478299937,-0.5162384407221339,-0.33475087251435165,-0.1397695034088353,0.060845971551025745,0.2590087466287657,0.4467308843707073,0.616445309202811,0.7613108360940938,0.8754879385867745,0.9543741399896226,0.9947895391202963,0.9951049920575804,0.9553077828999645,0.8770021363433194,0.7633445514159487,0.6189165630664887,0.44954006058299145,0.2620426073533303,0.06398222192347597,-0.13665728557752585,-0.3317881406620189,-0.5135446225098217,-0.6746001310153071,-0.8084625218893968,-0.9097358048645752,-0.9743376559532251,-0.999663975845132,-0.9846938610979125,-0.9300307567341156,-0.8378781313845937,-0.7119506555125711,-0.5573244631224583,-0.38023253290072706,-0.18781343697143787,0.012176414801982267,0.21167543554113966,0.40264182375661656,0.5773777282035402,0.728839548109211,0.8509218605779652,0.9387035300643412,0.9886460792475311,0.9987363249805115,0.9685675296619419,0.8993557968206789,0.7938910500071249,0.6564245710313621,0.49249763087940923,0.3087181211919233,0.1124941902857637,-0.08826437915463778,-0.2854650132572003,-0.47115855845148785,-0.6378597116879886,-0.7788487528528323,-0.8884424165493694,-0.962222984411523,-0.9972163632416674,-0.9920119706471956,-0.9468195955882914,-0.8634609417891698,-0.7452961948977531,-0.5970885734703334,-0.4248123237278307,-0.23541189781148192,-0.0365220230576728,0.1638400537066051,0.3575977412211067,0.5369406710226123,0.6946395332396452,0.8243374899270969,0.920806419075239,0.9801576601020457,0.9999987656826221,0.9795299412524963,0.9195762847102863,0.8225545267380743,0.6923756124366165,0.5342870512073795,0.3546613897546814,0.16073933485723693,-0.03966211937593226,-0.2384647943795803,-0.42765495834688017,-0.5996063595963808,-0.7473876406229577,-0.8650417409786751,-0.9478260262587916,-0.9924034635986949,-0.9969771374012192,-0.9613626829679194,-0.8869957182363796,-0.7768739740501882,-0.6354364556893108,-0.4683845066569653,-0.2824519876386111,-0.08513383471364828,0.11561606136602509,0.3117054763514075,0.49523004989210817,0.6587919101421132,0.7957978818243164,0.9007252569923213,0.969344415276219,0.9988893197940435,0.9881690160424802,0.9376156392488403,0.8492669950087792,0.7266844153839881,0.5748092016787508,0.39976344068456865,0.20860322348517513,0.00903421456796842,-0.19089896335567494,-0.38313700792909755,-0.5599308074652626,-0.7141538074821799,-0.839589281969628,-0.931180929489136,-0.9852366925824367,-0.9995775845330024,-0.9736255242764793,-0.9084266388367062,-0.8066090939664917,-0.6722771528394152,-0.5108457332842512,-0.32882213255682213,-0.13354371831940923,0.06711784050133766,0.2650738805295369,0.4523447977970911,0.6213817054181817,0.7653707290668744,0.8785076741134026,0.9562319925921375,0.9954106187978498,0.994464263100951,0.9534310730804352,0.873965095795739,0.7592696031833205,0.6139679682296535,0.44391729689962306,0.25597232831383404,0.057709120353028776,-0.14288034108152167,-0.33771029885811443,-0.5189271613209613,-0.679226080410903,-0.8121454099429549,-0.9123271744331549,-0.9757330489819447,-0.9998071440692504,-0.9835790334092062,-0.9277028718141588,-0.8344310262274074,-0.707523282857313,-0.5520952902712155,-0.37441234770541887,-0.18163685097944635,0.018460423534242158,0.21781355874884895,0.40838663381749724,0.5824976519402275,0.7331282014995405,0.8542063680904731,0.9408514932676958,0.9895709137884713,0.9984007507973952,0.9669850737433007,0.8965902479325863,0.7900538873692946,0.6516704705920625,0.4870182303311962,0.30273429505997673,0.10624714648041036,-0.09452282242397832,-0.2914825782690297,-0.47669267728188514,-0.6426873041189487,-0.782775218731059,-0.8913094801148032,-0.963915074389861,-0.9976652715201054,-0.9911996017421171,-0.9447786960738299,-0.860273780283425,-0.7410912458165703,-0.5920353382261004,-0.41911449813095086,-0.22929916109649853,-0.030240779517881823,0.17003660727120928,0.36345982186168935,0.5422319783872167,0.6991467748354216,0.8278789789365588,0.9232393981480641,0.9813840559010103,0.9999691422179066,0.9782454926453643,0.9170887870580791,0.818964251020848,0.6878272825958965,0.528964010326974,0.3487782095048204,0.15453316611470005,-0.04594110607465392,-0.24456349320776583,-0.433327530878138,-0.604624144546732,-0.7515483711826279,-0.8681776981829694,-0.9498107997362488,-0.9931570471706163,-0.9964691541290619,-0.959613609647101,-0.8840760599770872,-0.7729014222177695,-0.6305711437677061,-0.462822555271376,-0.27641759893677864,-0.07887025478209725,0.12185634774704657,0.31767092336411795,0.5006801904881054,0.663507049264299,0.7995879523100395,0.903437481177012,0.9708694634578781,0.9991657173113141,0.9871856213170338,0.9354120929021715,0.8459321219495313,0.7223526442776623,0.569655146131071,0.39399486057030947,0.20245265015207212,0.002749577502573814,-0.1970643305603905,-0.38893457944583576,-0.5651268833035665,-0.7185389339300527,-0.842986694668747,-0.9334536788023231,-0.9862931640308639,-0.9993751917739604,-0.9721724257579965,-0.9057814089306475,-0.8028783618368536,-0.6676113042228768,-0.5054328484440952,-0.3228804047714521,-0.1273126585156285,0.07338705842888943,0.27112854453307955,0.45794084449317707,0.6262935582776726,0.769400391400434,0.8814927103138656,0.9580520759106804,0.9959923817127324,0.9937842547608409,0.951516704607748,0.8708935353449072,0.7551646652939502,0.6089951228649835,0.4382769993557265,0.24989193887052993,0.051433739385800065,-0.1490977530929176,-0.34361911816127283,-0.5242892035293066,-0.6838252017115598,-0.8157962198493282,-0.9148825088717772,-0.9770899024733227,-0.9999108218765894,-0.9824253562821906,-0.9253383444544457,-0.8309509626850177,-0.7030679644231845,-0.5468443107413582,-0.36857737395836626,-0.17545309068892911,0.024743703116118607,0.2239430787491913,0.41411531340911883,0.587594568164755,0.7373878977670486,0.8574571361306472,0.9429622946865931,0.9904566622236061,0.9980257417472693,0.9653644238151442,0.8937892854921966,0.7861855191559589,0.6468906304502438,0.4815195935202362,0.2967385115185146,0.09999590612163069,-0.10077753222764521,-0.29748863029198397,-0.4822079676886578,-0.6474895116647412,-0.7866707665269359,-0.8941413387079006,-0.9655690916176158,-0.9980747739815216,-0.9903480824012647,-0.9427004796581014,-0.8570526396545063,-0.736857025088027,-0.5869587187498023,-0.4134001183352862,-0.22317736751540598,-0.02395834152677535,0.1762264447240826,0.369307546553821,0.5475018686545894,0.7036264015079886,0.8313877683537738,0.9256359110795359,0.9825716889589626,0.9999000219378035,0.9769224052642929,0.9145650662015987,0.8153416278256351,0.6832517849296387,0.5236200764079932,0.3428812532013091,0.14832089361588152,-0.05221827819002462,-0.2506525322587303,-0.43898298782373185,-0.6096180480319383,-0.7556794170590232,-0.8712793640748272,-0.9517580575542547,-0.9938714029915101,-0.9959218122841615,-0.9578266334751091,-0.8811214824513343,-0.7688983422985175,-0.6256809255255152,-0.45724232330464054,-0.27037229228319465,-0.07260355963052474,0.1280918210418479,0.32362382299983006,0.5061105552008355,0.6681959811623759,0.8033464406434523,0.9061140213571652,0.9723561642042569,0.9994026497469005,0.9861632347001454,0.9331715996166475,0.842563836234392,0.717992341661921,0.5644785903248951,0.3882107184335692,0.19629408033723986,-0.0035351681656702054,-0.20322191411140833,-0.3947167888113021,-0.5703006377408543,-0.7228956795025328,-0.846350811050562,-0.9356895585301619,-0.9873106788381578,-0.9991333256594045,-0.9706809283397838,-0.9031004024395128,-0.7991159175902477,-0.6629190862721847,-0.49999999999997624,-0.31692592384486273,-0.12107657011213468,0.07965337771195352,0.2771724994921225,0.4635188034261214,0.6311806737727959,0.7733996639309955,0.8844429292851281,0.959834318055555,0.99653480488645,0.9930649938962364,0.9495647530957377,0.86778757631141,0.7510298998847591,0.6039982233901171,0.43261939073191646,0.2438016791868757,0.0451563268869452,-0.15530927603616132,-0.3495143651847205,-0.5296305373447555,-0.6883973132610063,-0.8194148074086854,-0.9174017072497783,-0.9784081628343132,-0.9999750051720798,-0.9812328752848499,-0.9229372680491266,-0.8274380782130618,-0.6985848761865658,-0.5415717319362321,-0.36272784212961473,-0.1692624003461778,0.031026005370306083,0.23006375343814825,0.4198276362599507,0.5926682755589048,0.7416184686621645,0.8606740362995399,0.9450358509484983,0.9913032895676097,0.997611312642258,0.9637056438899441,0.8909530201320197,0.7822860981601631,0.642085239400174,0.47600193763189885,0.2907310073891462,0.09374071612113023,-0.10702826151692495,-0.3034829320988422,-0.4877042118285768,-0.652266144647652,-0.790535242373965,-0.8969378804758265,-0.967184970764344,-0.9984448544513699,-0.9894574462579665,-0.9405850284265783,-0.8537976471311075,-0.7325936999554803,-0.5818589155579746,-0.40766941004760543,-0.21704675886704433,-0.01767495722827566,0.18240932157878567,0.37514068432381864,0.5527501336744005,0.7080782363208983,0.8348637195884734,0.9279958632121268,0.983720512366742,0.9997914075724285,0.9755607313686322,0.9120052218228818,0.8116868002389144,0.6786493001609646,0.518255460525346,0.33697075376227564,0.14210276273336112,-0.058493387786028646,-0.25673167102737343,-0.4446211058043063,-0.6145878728026739,-0.7597806150839336,-0.8743466161445848,-0.9536677227999357,-0.9945465028457351,-0.9953351334854548,-0.9560018250339819,-0.8781321023590981,-0.7648648924062563,-0.6207659941167462,-0.4516440311649519,-0.26431630645556087,-0.06633399678101354,0.1343222349615762,0.32956394013068346,0.5115209295415669,0.672858520632646,0.8070731983717213,0.9087547718147294,0.9738044587935917,0.9996001077424403,0.9851018965740819,0.9308942478873691,0.839162270903995,0.7136036797600671,0.559279738724095,0.38241124273661803,0.1901277572921352,-0.009819774201806346,-0.20937147079636612,-0.40048340763948886,-0.575451866424043,-0.7272238721167732,-0.849681498239074,-0.9378884803598285,-0.988289196814488,-0.998851995742577,-0.9691510909330437,-0.9003837252578004,-0.7953219098357406,-0.6582006843207235,-0.4945474025388512,-0.3109589249672107,-0.1148356994220762,0.0859165508431232,0.2832055066823259,0.4690784542774862,0.6360428588720521,0.7773683886952094,0.887358214499287,0.9615786486317156,0.997037866894351,0.9923065089165345,0.9475752956425991,0.8646473413745228,0.7468654702709655,0.5989774671727837,0.42694469449256034,0.23770178981618426,0.03887713080191779,-0.161514664568223,-0.35539580707781554,-0.5349509517951703,-0.6929422344698034,-0.8230010296939808,-0.9198846700637515,-0.9796877779961942,-0.999999691420608,-0.980001637517823,-0.9204997374360427,-0.8238925115636028,-0.6940741952206708,-0.5362777621122394,-0.35686398326409313,-0.16306502447140322,0.037307082158272074,0.23617534106107396,0.4255233767444178,0.5977185737212777,0.7458197470856538,0.8638569415358461,0.9470720801520616,0.9921107623803705,0.9971574798514866,0.9620087994862461,0.8880815638790266,0.7783557784012303,0.6372544872453096,0.4704654806027703,0.284712019956475,0.08748182354664592,-0.11327476340024167,-0.30946524692652055,-0.4931811926108532,-0.657017014400111,-0.7943684936329298,-0.8996989949606533,-0.968762648006032,-0.998775498312204,-0.9885277284906154,-0.9384324259354353,-0.8505089312790048,-0.7283014388119308,-0.5767361300827489,-0.4019225996196465,-0.21090757729837595,-0.011390874803653887,0.188584993623865,0.3809590047742863,0.55797656615057,0.7125021034353268,0.8383066953474478,0.9303191613323876,0.9848304807480611,0.9996433034118337,0.9741605247418559,0.9094093550306679,0.8079999126191573,0.6740200100790583,0.5128703745707412,0.3310469446409361,0.13587901907105707,-0.06476618700825762,-0.26280066939974667,-0.45024166212518263,-0.61953342256054,-0.7638518032681182,-0.8773793332417593,-0.9555397200452943,-0.995182320068162,-0.9947091409055963,-0.9541392564000486,-0.8751080377750698,-0.7608012318542727,-0.615826543671461,-0.44602789997397146,-0.2582498806533578,-0.060061813869084955,0.14054734341701652,0.33549104013380915,0.516911099811027,0.6774944835141343,0.8107680782951914,0.9113596282452048,0.9752142900211127,0.9997580834987272,0.9840016488596081,0.9285801276652215,0.8357275603135456,0.7091868319157378,0.5540587966730424,0.3765966625473194,0.1839539245743131,-0.01610399237616513,-0.21551275771969686,-0.40623420816034045,-0.5805803658897725,-0.731523340817596,-0.8529786246787314,-0.9400503574381743,-0.9892286793102967,-0.9985312131354466,-0.9675829739633739,-0.8976314846888815,-0.7914964884292657,-0.6534562847362022,-0.4890752714274039,-0.3049796438233025,-0.10859029294768995,0.09217633043942856,0.28922732781162913,0.4746195774520172,0.640879921528754,0.7813064089361776,0.890238450808334,0.963284998741502,0.9975015478664779,0.9915088297803901,0.945548410828017,0.8614729545674245,0.742671540939202,0.5939330525229614,0.4212531347771071,0.23159251169201178,0.03259639914676162,-0.16771367358865047,-0.3612632115352179,-0.5402502367345426,-0.6974597858225593,-0.8265547450564186,-0.9223312992415582,-0.9809286974167285,-0.9999848796471148,-0.9787316916126034,-0.9180258488928403,-0.8203144027795374,-0.6895360996883875,-0.5309626103708531,-0.35098602897280556,-0.1568612078487138,0.04358668538988753,0.24227760022229913,0.4312023098920449,0.6027452631749325,0.7499915670951832,0.8670057261211811,0.9490709018701861,0.9928790487683065,0.9966642613004635,0.9602739576261077,0.8851750301499908,0.7743947151191348,0.6323985647909517,0.4649104411119444,0.2786817869588088,0.0812194756121025,-0.11951679115313503,-0.3154353384852352,-0.49863869370556185,-0.6617419332720162,-0.7981703688979586,-0.9024245731038238,-0.9703020610275079,-0.9990666925042356,-0.987558965821228,-0.9362427572082299,-0.8471866219960691,-0.7239804111931973,-0.571590564664174,-0.39615991403909845,-0.2047600652949489,-0.005106342461926283,0.1947532169324706,0.38676227809295083,0.5631809596491474,0.7168978281173797,0.8417165596398605,0.9326057136745676,0.985901550261371,0.9994557153058471,0.9727218406893227,0.9067775683566384,0.8042811105912439,0.6693640975317364,0.5074650312445854,0.3251100598160523,0.12964990845455307,-0.07103642809341651,-0.2688592876621801,-0.455844434785486,-0.6244545019660882,-0.7678928208076831,-0.8803773955800422,-0.957373975350069,-0.9957788295452668,-0.994043859270056,-0.9522390011411426,-0.872049408143801,-0.7567075211492437,-0.6108627692883765,-0.4403941515576379,-0.252173254488589,-0.053787258633520754,0.1467669005286786,0.34140488890024767,0.522280853108281,0.6821036866953358,0.8144309344733358,0.913928487761907,0.9765856022012325,0.9998765707760314,0.9828625350143354,0.9262293303534463,0.8322598401273295,0.704741972585581,0.5488159703886849,0.3707672075301076,0.17777282603808514,-0.022387574474368472,-0.22164553231286171,-0.41196896322859305,-0.5856859335723024,-0.7357939157845168,-0.8562420601394324,-0.9421751043753825,-0.990129089217906,-0.9981709905083036,-0.9659766393682836,-0.894843789440898,-0.7876398044674146,-0.6486860749129062,-0.4835838228041547,-0.2989883165830436,-0.10234059737019809,0.09843246925188097,0.2952377250301531,0.4801419540862917,0.6456916706883474,0.7852135691098779,0.8930835244486223,0.9649533009874549,0.9979258294883473,0.9906719879945678,0.9434841787099946,0.8582645412720388,0.7384482775415462,0.5888651786850668,0.41554493639087403,0.22547408611900058,0.02631437999780323,-0.17390605824866112,-0.36711634680587946,-0.5455281828516307,-0.7019497888847944,-0.8300758131312606,-0.924741498146177,-0.9821308720820042,-0.9999305704366364,-0.9774230877295471,-0.9155157001332537,-0.816703893189096,-0.6849707688356499,-0.5256264866501665,-0.34509421142333874,-0.1506511955166145,0.04986456703305559,0.2483702898946377,0.4368642113960334,0.6077481453755632,0.7541337639122143,0.8701202656846577,0.9510322371533793,0.993608118385608,0.9961316764703619,0.9585011868323092,0.8822335337473325,0.7704030647681259,0.6275176638364037,0.459337038572712,0.2726405465782787,0.07495391966787623,-0.1257540982276664,-0.3213929709681596,-0.5040764995520391,-0.6664407146384035,-0.8019407180024859,-0.9051145072503343,-0.9718031490249568,-0.9993184255258696,-0.9865511965140251,-0.934016108732552,-0.8438308505069257,-0.7196307877714944,-0.5664224225419223,-0.39038158092066105,-0.1986044656715137,0.0011783915703474093,0.2009137478717957,0.39255027506181966,0.5683631086070088,0.7212652367444533,0.8450931777828365,0.9348554299243653,0.986933678601503,0.9992286506638232,0.9712447360362493,0.9041099657512175,0.8005305410405107,0.6646817464183494,0.5020396440472656,0.3191603337828503,0.12341567692158609,-0.07730386337919509,-0.2749072865113816,-0.4614292024867102,-0.6293509166464,-0.7719035080903422,-0.8833406847417837,-0.9591704162648472,-0.9963360077161022,-0.9933393148561629,-0.9503011343135767,-0.8689563342752332,-0.7525839219846581,-0.6058748670266436,-0.43474300843809155,-0.2460866679759328,-0.047510578907031774,0.15298066063628288,0.3473052528448122,0.5276299773385319,0.6866859481217445,0.8180616222305696,0.9164612488999352,0.9779183411698286,0.9999555648943388,0.9816846000310422,0.9238419488038955,0.8287592473134454,0.7002692773329225,0.5435514669523068,0.364923107937049,0.17158470582480476,-0.028670272307503023,-0.2277695523431535,-0.4176874463325911,-0.5907683678118382,-0.7400354283381043,-0.8594716757220096,-0.9442626372480867,-0.9909903909728698,-0.9977713420892274,-0.9643321505948609,-0.8920207496223075,-0.7837520102815869,-0.6438902432648754,-0.478073273570579,-0.29298517989202816,-0.09608685954029032,0.1046847201753521,0.3012364609389138,0.48564536605718844,0.6504779162962436,0.7890897148911992,0.8958933230452845,0.96658348947493,0.9983106950016581,0.9897960166126893,0.9413826808215683,0.8550222282144703,0.7341958468885239,0.5837740458301995,0.4098203247966314,0.21934675476271182,0.020031321482563483,-0.18009157396117786,-0.3729549817025162,-0.5507845816777952,-0.7064120663102551,-0.8335640948432708,-0.9271151715794456,-0.9832942545084967,-0.9998367659342804,-0.976075877555935,-0.9129693903032009,-0.8130611254003423,-0.6803783829841353,-0.5202696017165291,-0.3391887633309038,-0.1444352327584972,0.05614047912390592,0.25445316942865936,0.4425088576224554,0.6127270227192022,0.7582461739280025,0.8732004372081421,0.9529560085327176,0.9942979424354463,0.9955597463972166,0.9566905571258597,0.8792571908544043,0.7663809850105101,0.6226119771677913,0.45374549312331564,0.2665885374321129,0.06868540319122349,-0.13198643826252404,-0.32733790906057586,-0.5094943953676931,-0.6711131729066879,-0.8056793920250657,-0.9077686911530259,-0.9732658527084078,-0.9995306874341464,-0.9855044603739037,-0.931752568456659,-0.8404417493580435,-0.7152527403482392,-0.5612319078474013,-0.3845878284972381,-0.19244102156204362,0.007463079058356859,0.20706634311303426,0.3983227670665999,0.5735228083393161,0.7256041568125713,0.8484364164065361,0.9370682212224115,0.987926825001454,0.9989621184543719,0.9697292691253798,0.9014066525794407,0.7967483521070822,0.6599731416826465,0.49659442727086167,0.3131980015439202,0.11717657071199013,-0.08356824531444677,-0.28094442706312134,-0.46699574464155985,-0.634222473202676,-0.7758837067017605,-0.8862690836829945,-0.9609289718336952,-0.9968538325732161,-0.9925955354920235,-0.948325732459334,-0.8658289383395916,-0.7484305972345391,-0.6008630338987315,-0.42907469382427443,-0.23999036152370146,-0.04123202260607184,0.1591883783085761,0.35319189891461855,0.5329582612218398,0.6912410868030834,0.8216599981618634,0.9189578116202254,0.979212454286343,0.9999950627335356,0.9804678904358344,0.921418077313425,0.8252259201384914,0.6957689228203515,0.5382654943014924,0.3590645945986953,0.16538980835283199,-0.03495183772118436,-0.23388457592393033,-0.4233894316035452,-0.5958274678620807,-0.744247710947104,-0.8626673438629368,-0.9463128736028233,-0.9918125505554701,-0.997332283663552,-0.9626495725971651,-0.8891624767376072,-0.7798332594320807,-0.6390689792179894,-0.4725438413824894,-0.2869704708623546,-0.08982932646826078,0.11093283625816452,0.30722329859952696,0.4911295959908032,0.6552384693051927,0.7929346931799324,0.8986677356168504,0.9681754998146429,0.9986561292049931,0.9888809502338706,0.9392440001678299,0.8517461434596526,0.7299144169428634,0.5786598550481921,0.40407952610507675,0.21321075964079966,0.013747471769559387,-0.18626997641054555,-0.3787788856105272,-0.5560192255958057,-0.710846441847795,-0.8370194524121157,-0.9294522257859514,-0.9844187987448971,-0.9997034698451401,-0.9746901143039077,-0.9103870199769376,-0.8093862432955097,-0.6757591235238914,-0.5148921671563652,-0.33326991794903793,-0.13821356509255914,0.0624141737760778,0.2605259985628003,0.4481360256189321,0.6176816985498921,0.7623286347105109,0.8762461190308583,0.9548421400230312,0.9949484936711526,0.9949484936711558,0.9548421400230406,0.8762461190308733,0.7623286347105312,0.6176816985499167,0.44813602561890936,0.26052599856283054,0.06241417377616582,-0.13821356509258437,-0.33326991794900834,-0.5148921671563383,-0.6757591235238684,-0.8093862432954578,-0.9103870199769482,-0.9746901143039007,-0.9997034698451394,-0.9844187987448927,-0.929452225785984,-0.8370194524121328,-0.7108464418477771,-0.5560192255958318,-0.37877888561055617,-0.1862699764106322,0.01374747176952804,0.21321075964082456,0.40407952610504805,0.5786598550481665,0.729914416942842,0.8517461434596362,0.9392440001678192,0.9888809502338743,0.9986561292049948,0.968175499814665,0.8986677356168642,0.7929346931799515,0.6552384693051735,0.49112959599088,0.3072232985996109,0.1109328362581392,-0.08982932646822955,-0.2869704708623246,-0.4725438413825118,-0.6390689792179216,-0.7798332594320612,-0.8891624767375927,-0.9626495725971566,-0.9973322836635496,-0.9918125505554815,-0.9463128736028336,-0.8626673438629239,-0.7442477109471248,-0.5958274678621516,-0.4233894316035736,-0.2338845759239608,-0.03495183772121569,0.16538980835280107,0.35906459459861295,0.5382654943015138,0.695768922820329,0.8252259201384737,0.921418077313435,0.9804678904358171,0.9999950627335357,0.9792124542863377,0.9189578116202377,0.8216599981618813,0.6912410868031471,0.5329582612218663,0.35319189891459474,0.15918837830860705,-0.041232022606040516,-0.239990361523671,-0.4290746938242461,-0.6008630338987064,-0.748430597234556,-0.865828938339576,-0.9483257324593061,-0.9925955354920197,-0.9968538325732186,-0.9609289718337038,-0.8862690836830089,-0.7758837067018163,-0.6342224732026563,-0.46699574464158755,-0.2809444270631514,-0.08356824531442136,0.11717657071190254,0.31319800154389044,0.4965944272708344,0.659973141682623,0.7967483521070632,0.9014066525794026,0.9697292691253722,0.9989621184543731,0.9879268250014589,0.9370682212224225,0.8484364164065527,0.7256041568125929,0.5735228083393419,0.39832276706662867,0.20706634311306493,0.007463079058445051,-0.19244102156201284,-0.3845878284972092,-0.5612319078474224,-0.7152527403482172,-0.8404417493579958,-0.9317525684566682,-0.9855044603738984,-0.9995306874341473,-0.973265852708415,-0.9077686911530629,-0.8056793920250843,-0.6711131729067111,-0.5094943953677201,-0.32733790906055177,-0.13198643826261147,0.06868540319119221,0.26658853743213745,0.4537454931232877,0.6226119771677667,0.7663809850104535,0.8792571908543895,0.9566905571258506,0.9955597463972136,0.9942979424354497,0.9529560085327271,0.8732004372081574,0.758246173928023,0.6127270227191821,0.44250885762248354,0.25445316942874463,0.05614047912393722,-0.14443523275846618,-0.33918876333087433,-0.5202696017164539,-0.6803783829840707,-0.8130611254003571,-0.9129693903031881,-0.9760758775559281,-0.9998367659342798,-0.9832942545085128,-0.9271151715794573,-0.8335640948432881,-0.7064120663102773,-0.5507845816778688,-0.372954981702598,-0.1800915739612087,0.02003132148258897,0.21934675476268123,0.40982032479655095,0.5837740458302203,0.7341958468885027,0.8550222282144541,0.9413826808215577,0.9897960166126768,0.9983106950016633,0.9665834894749381,0.8958933230452985,0.7890897148911835,0.6504779162963107,0.4856453660572158,0.3012364609388895,0.10468472017538329,-0.09608685954025911,-0.29298517989194384,-0.47807327357055146,-0.6438902432648514,-0.7837520102815674,-0.8920207496222933,-0.9643321505948526,-0.9977713420892252,-0.990990390972874,-0.9442626372480782,-0.8594716757220255,-0.7400354283381636,-0.5907683678118176,-0.41768744633261956,-0.22776955234318402,-0.02867027230753436,0.17158470582471788,0.3649231079370727,0.5435514669522805,0.7002692773329001,0.8287592473134596,0.9238419488038617,0.9816846000310362,0.9999555648943385,0.9779183411698351,0.9164612488999477,0.8180616222306203,0.6866859481217673,0.5276299773385102,0.34730525284484154,0.15298066063631385,-0.04751057890700046,-0.2460866679759024,-0.4347430084380633,-0.6058748670266638,-0.7525839219846374,-0.8689563342751896,-0.9503011343135669,-0.9933393148561592,-0.9963360077161001,-0.9591704162648561,-0.8833406847418251,-0.771903508090326,-0.6293509166464243,-0.461429202486738,-0.27490728651135704,-0.07730386337928302,0.12341567692155499,0.3191603337828206,0.5020396440472386,0.6646817464183684,0.8005305410404578,0.9041099657512042,0.9712447360362553,0.9992286506638219,0.9869336786015082,0.9348554299243765,0.8450931777828533,0.7212652367444751,0.5683631086070345,0.3925502750618485,0.2009137478718264,0.00117839157037876,-0.198604465671483,-0.39038158092068453,-0.5664224225418496,-0.7196307877714331,-0.8438308505069394,-0.9340161087325408,-0.98655119651402,-0.9993184255258728,-0.9718031490249776,-0.9051145072503235,-0.8019407180025047,-0.6664407146384269,-0.5040764995520662,-0.3213929709682431,-0.1257540982276975,0.07495391966790166,0.27264054657824854,0.4593370385726337,0.6275176638363793,0.7704030647681059,0.8822335337473445,0.9585011868323002,0.9961316764703542,0.9936081183856051,0.9510322371533889,0.8701202656846732,0.7541337639121976,0.6077481453756333,0.4368642113960616,0.24837028989466806,0.04986456703308691,-0.1506511955166397,-0.34509421142325597,-0.5256264866501399,-0.6849707688356684,-0.8167038931890779,-0.915515700133241,-0.9774230877295405,-0.9999305704366359,-0.9821308720820101,-0.9247414981461889,-0.830075813131278,-0.7019497888848167,-0.5455281828516569,-0.3671163468059086,-0.17390605824863603,0.026314379997771892,0.22547408611891465,0.4155449363908972,0.5888651786850414,0.7384482775415251,0.8582645412720227,0.9434841787099654,0.9906719879945713,0.9979258294883493,0.9649533009874631,0.8930835244486108,0.7852135691099326,0.6456916706883714,0.4801419540862693,0.29523772503018303,0.09843246925191217,-0.10234059737011035,-0.29898831658301367,-0.483583822804177,-0.6486860749128823,-0.7876398044673952,-0.894843789440884,-0.9659766393682755,-0.9981709905083017,-0.9901290892179024,-0.9421751043753931,-0.856242060139478,-0.7357939157845381,-0.5856859335723278,-0.41196896322856985,-0.2216455323128923,-0.022387574474456644,0.17777282603811023,0.3707672075300785,0.5488159703886587,0.7047419725855991,0.8322598401272806,0.9262293303534346,0.9828625350143296,0.9998765707760319,0.976585602201227,0.9139284877619429,0.814430934473354,0.6821036866953173,0.5222808531083077,0.34140488890027715,0.14676690052870964,-0.053787258633489446,-0.2521732544885587,-0.44039415155760975,-0.6108627692883066,-0.7567075211492232,-0.8720494081437857,-0.952239001141133,-0.9940438592700588,-0.9957788295452747,-0.9573739753500944,-0.8803773955800301,-0.7678928208077032,-0.6244545019661127,-0.45584443478556447,-0.2688592876622651,-0.07103642809339109,0.12964990845452198,0.32511005981602265,0.5074650312445583,0.6693640975316709,0.8042811105912253,0.906777568356649,0.9727218406893153,0.9994557153058442,0.9859015502613763,0.9326057136745789,0.8417165596398773,0.7168978281174015,0.5631809596492203,0.3867622780929273,0.19475321693250136,-0.005106342461894932,-0.20476006529497384,-0.39615991403901746,-0.5715905646641483,-0.7239804111931757,-0.8471866219960524,-0.9362427572082188,-0.9875589658212142,-0.999066692504237,-0.9703020610275017,-0.9024245731038374,-0.7981703688979774,-0.6617419332720397,-0.498638693705589,-0.31543533848526495,-0.11951679115316616,0.08121947561207125,0.2786817869587241,0.46491044111191665,0.6323985647909274,0.7743947151191509,0.8851750301499762,0.960273957626083,0.9966642613004656,0.9928790487683101,0.9490709018701959,0.8670057261211968,0.7499915670952416,0.6027452631749576,0.43120230989207314,0.24227760022232953,0.04358668538986206,-0.1568612078486267,-0.3509860289727762,-0.5309626103708747,-0.6895360996883648,-0.8203144027795194,-0.9180258488928054,-0.978731691612597,-0.9999848796471147,-0.9809286974167346,-0.9223312992415703,-0.8265547450564362,-0.6974597858225817,-0.5402502367345691,-0.36126321153519414,-0.1677136735886814,0.03259639914667347,0.2315925116919813,0.42125313477707865,0.5939330525229362,0.7426715409391811,0.8614729545673797,0.9455484108280252,0.991508829780386,0.9975015478664802,0.9632849987414951,0.890238450808374,0.7813064089361972,0.6408799215287779,0.47461957745204486,0.2892273278116591,0.09217633043951638,-0.10859029294765879,-0.3049796438233268,-0.4890752714273766,-0.6534562847361784,-0.7914964884292466,-0.8976314846888677,-0.9675829739633659,-0.9985312131354448,-0.9892286793103096,-0.9400503574382044,-0.8529786246787477,-0.7315233408176173,-0.5805803658897517,-0.40623420816042105,-0.21551275771978298,-0.01610399237613964,0.18395392457428228,0.37659666254729035,0.5540587966729689,0.7091868319156758,0.8357275603135284,0.9285801276652099,0.9840016488596025,0.999758083498728,0.9752142900211197,0.9113596282452178,0.8107680782951765,0.6774944835141573,0.5169110998111025,0.3354910401337851,0.14054734341704758,-0.06006181386905366,-0.2582498806533275,-0.4460278999738925,-0.6158265436714809,-0.7608012318542524,-0.8751080377750546,-0.9541392564000563,-0.9947091409055872,-0.9951823200681651,-0.9555397200452868,-0.8773793332417744,-0.7638518032681384,-0.6195334225606093,-0.4502416621252106,-0.2628006693997221,-0.06476618700828891,0.13587901907102598,0.3310469446409065,0.5128703745707143,0.6740200100790351,0.8079999126191724,0.9094093550306548,0.974160524741836,0.9996433034118328,0.9848304807480666,0.9303191613323782,0.8383066953474649,0.7125021034353888,0.5579765661505488,0.38095900477431527,0.1885849936238958,-0.011390874803679379,-0.21090757729828974,-0.4019225996196178,-0.5767361300827234,-0.7283014388119092,-0.8505089312790183,-0.9384324259354049,-0.9885277284906108,-0.9987754983122028,-0.9687626480060397,-0.899698994960667,-0.7943684936329488,-0.6570170144001346,-0.49318119261088045,-0.30946524692655036,-0.11327476340027282,0.0874818235466147,0.28471201995644496,0.4704654806027426,0.6372544872453293,0.7783557784012106,0.8880815638789861,0.9620087994862531,0.9971574798514843,0.9921107623803744,0.9470720801520717,0.8638569415358905,0.7458197470856368,0.5977185737213028,0.4255233767444462,0.2361753410610492,0.037307082158360205,-0.16306502447137228,-0.35686398326411695,-0.536277762112213,-0.6940741952206483,-0.8238925115635528,-0.9204997374360305,-0.9800016375178281,-0.999999691420608,-0.9796877779962119,-0.9198846700637637,-0.8230010296939986,-0.6929422344698261,-0.5349509517951487,-0.355395807077898,-0.16151466456831,0.03887713080188646,0.2377017898161538,0.4269446944925834,0.598977467172713,0.7468654702709069,0.8646473413745357,0.9475752956425891,0.9923065089165306,0.9970378668943535,0.9615786486317242,0.8873582144993014,0.7773683886952291,0.6360428588720763,0.4690784542775139,0.28320550668235595,0.08591655084315444,-0.11483569942210152,-0.3109589249671809,-0.49454740253877455,-0.6582006843207426,-0.7953219098357216,-0.9003837252577868,-0.969151090933036,-0.9988519957425728,-0.9882891968144754,-0.9378884803598198,-0.8496814982390906,-0.7272238721167947,-0.5754518664241152,-0.4004834076394655,-0.2093714707963412,-0.009819774201837696,0.19012775729204862,0.38241124273653654,0.5592797387241161,0.7136036797600849,0.839162270903978,0.9308942478873369,0.9851018965740863,0.9996001077424397,0.9738044587935988,0.9087547718147425,0.8070731983717734,0.6728585206326692,0.5115209295415449,0.32956394013071305,0.13432223496160725,-0.06633399678092554,-0.2643163064555306,-0.45164403116497465,-0.6207659941167216,-0.7648648924061996,-0.8781321023591103,-0.9560018250339727,-0.9953351334854518,-0.9945465028457384,-0.9536677227999623,-0.8743466161445723,-0.759780615083954,-0.6145878728026987,-0.4446211058043344,-0.2567316710274587,-0.05849338778605994,0.14210276273333008,0.33697075376224617,0.5182554605252706,0.6786493001608999,0.8116868002388961,0.9120052218228456,0.9755607313686253,0.9997914075724266,0.9837205123667373,0.9279958632121384,0.834863719588522,0.7080782363208401,0.552750133674474,0.37514068432384773,0.1824093215788165,-0.01767495722818748,-0.2170467588670692,-0.40766941004752494,-0.5818589155579491,-0.732593699955459,-0.8537976471310615,-0.9405850284265869,-0.9894574462579536,-0.9984448544513715,-0.9671849707643664,-0.8969378804758152,-0.7905352423739493,-0.6522661446477619,-0.4877042118286042,-0.3034829320989262,-0.10702826151689959,0.09374071612115562,0.2907310073890074,0.4760019376318713,0.6420852394001064,0.7822860981601436,0.8909530201320313,0.9637056438899357,0.997611312642252,0.9913032895676214,0.9450358509485085,0.8606740362995269,0.7416184686621855,0.5926682755589758,0.4198276362600307,0.23006375343812346,0.03102600537033742,-0.16926240034614687,-0.3627278421296385,-0.5415717319361101,-0.6985848761865842,-0.8274380782130443,-0.9229372680491145,-0.9812328752848548,-0.9999750051720808,-0.978408162834308,-0.9174017072497908,-0.8194148074087361,-0.6883973132609879,-0.529630537344782,-0.3495143651847499,-0.1553092760361923,0.0451563268868571,0.24380167918690043,0.43261939073188815,0.6039982233900921,0.7510298998847384,0.8677875763113662,0.9495647530957279,0.9930649938962327,0.9965348048864431,0.9598343180555797,0.8844429292851692,0.7733996639310153,0.6311806737728202,0.4635188034260484,0.27717249949220724,0.07965337771204144,-0.12107657011210357,-0.3169259238447791,-0.5000000000000475,-0.6629190862722038,-0.7991159175901605,-0.9031004024394994,-0.9706809283397627,-0.9991333256594078,-0.9873106788381537,-0.9356895585302131,-0.8463508110505786,-0.7228956795025937,-0.5703006377408333,-0.3947167888112787,-0.20322191411143903,-0.0035351681657583996,0.19629408033715337,0.38821071843359267,0.5644785903249161,0.7179923416618992,0.8425638362343445,0.9331715996166159,0.9861632347001498,0.9994026497469016,0.9723561642042642,0.9061140213571545,0.8033464406435387,0.6681959811623569,0.5061105552008625,0.3236238229998597,0.12809182104182262,-0.07260355963038008,-0.27037229228316445,-0.4572423233046127,-0.6256809255254908,-0.7688983422985338,-0.8811214824513195,-0.9578266334751001,-0.9959218122841587,-0.9938714029915199,-0.9517580575542469,-0.8712793640748426,-0.7556794170590437,-0.6096180480320083,-0.43898298782381107,-0.2506525322587056,-0.05221827819005593,0.14832089361596296,0.34288125320122625,0.5236200764079181,0.6832517849296158,0.815341627825617,0.914565066201632,0.976922405264274,0.9999000219378023,0.9825716889589685,0.9256359110795478,0.8313877683537597,0.7036264015079705,0.5475018686546632,0.36930754655385006,0.17622644472411347,-0.023958341526800837,-0.22317736751543085,-0.41340011833518003,-0.5869587187497769,-0.7368570250879866,-0.8570526396545194,-0.9427004796581004,-0.9903480824012603,-0.9980747739815234,-0.9655690916176314,-0.8941413387079018,-0.7866707665269377,-0.6474895116647651,-0.48220796768868524,-0.2974886302920681,-0.10077753222764813,0.09999590612162777,0.29673851151845754,0.48151959352028345,0.6468906304501765,0.7861855191559044,0.8937892854921826,0.9653644238151285,0.9980257417472728,0.9904566622236183,0.942962294686632,0.8574571361306633,0.737387897767089,0.5875945681647343,0.4141153134091215,0.22394307874930494,0.024743703116149946,-0.1754530906888423,-0.36857737395838996,-0.5468443107413558,-0.7030679644231016,-0.8309509626849844,-0.9253383444544122,-0.9824253562821953,-0.9999108218765898,-0.9770899024733295,-0.9148825088718013,-0.8157962198493791,-0.683825201711562,-0.5242892035293333,-0.3436191181613023,-0.1490977530929767,0.0514337393856836,0.2498919388705271,0.43827699935569836,0.608995122864936,0.7551646652939669,0.8708935353448499,0.9515167046077471,0.9937842547608342,0.9959923817127377,0.9580520759106731,0.8814927103139341,0.7694003914004541,0.6262935582777193,0.4579408444932302,0.2711285445330824,0.0733870584289207,-0.12731265851559742,-0.3228804047713955,-0.5054328484440191,-0.6676113042228746,-0.8028783618368518,-0.9057814089306222,-0.9721724257579758,-0.9993751917739573,-0.9862931640308644,-0.9334536788023343,-0.842986694668718,-0.7185389339301141,-0.5651268833036394,-0.3889345794458646,-0.19706433056042125,0.002749577502627728,0.20245265015195793,0.3939948605702023,0.5696551461310453,0.7223526442776407,0.8459321219495448,0.9354120929021705,0.9871856213170151,0.9991657173113153,0.9708694634578924,0.903437481177001,0.7995879523100413,0.6635070492644075,0.5006801904881572,0.31767092336417463,0.12185634774702127,-0.07887025478206598,-0.2764175989367485,-0.462822555271323,-0.6305711437676598,-0.7729014222177676,-0.8840760599770725,-0.9596136096470922,-0.996469154129064,-0.9931570471706266,-0.9498107997362498,-0.868177698182985,-0.7515483711826673,-0.6046241445467117,-0.4333275308782175,-0.24456349320776866,-0.04594110607471363,0.15453316611464102,0.34877820950484434,0.5289640103269716,0.6878272825958738,0.81896425102083,0.9170887870580552,0.9782454926453636,0.9999691422179066,0.9813840559010163,0.9232393981480761,0.8278789789366083,0.6991467748354236,0.5422319783872191,0.36345982186163917,0.17003660727126818,-0.030240779517793668,-0.22929916109649567,-0.4191144981309224,-0.592035338226144,-0.7410912458165301,-0.8602737802833801,-0.9447786960738196,-0.991199601742113,-0.9976652715201018,-0.9639150743898542,-0.8913094801148561,-0.7827752187310786,-0.6426873041189727,-0.47669267728186276,-0.29148257826900525,-0.0945228224240944,0.1062471464803792,0.3027342950599197,0.48701823033121844,0.6516704705920818,0.7900538873692754,0.8965902479325598,0.9669850737432855,0.9984007507973967,0.9895709137884717,0.9408514932677063,0.8542063680905042,0.7331282014995811,0.5824976519402298,0.4083866338174999,0.21781355874887956,0.01846042353421667,-0.1816368509793596,-0.37441234770541615,-0.5520952902712131,-0.7075232828572707,-0.8344310262274371,-0.9277028718141258,-0.9835790334092056,-0.9998071440692511,-0.9757330489819578,-0.9123271744331328,-0.8121454099429566,-0.679226080410926,-0.518927161320988,-0.3377102988581707,-0.14288034108149644,0.05770912035302585,0.25597232831380373,0.44391729689959497,0.6139679682295839,0.759269603183337,0.8739650957957376,0.9534310730804515,0.9944642631009447,0.9954106187978582,0.9562319925921301,0.8785076741134175,0.7653707290668398,0.6213817054182286,0.45234479779716974,0.26507388052953973,0.06711784050136894,-0.13354371831946266,-0.32882213255684617,-0.510845733284151,-0.672277152839413,-0.8066090939664733,-0.9084266388367168,-0.9736255242764852,-0.999577584532999,-0.9852366925824421,-0.9311809294891579,-0.8395892819696141,-0.7141538074821621,-0.5599308074652886,-0.3831370079291265,-0.19089896335573361,0.009034214567993911,0.20860322348517227,0.3997634406845399,0.5748092016787252,0.7266844153839276,0.8492669950087927,0.9376156392488393,0.9881690160424754,0.9988893197940409,0.9693444152762406,0.9007252569923596,0.7957978818243182,0.6587919101421582,0.4952300498920613,0.31170547635149126,0.11561606136614093,-0.08513383471361705,-0.2824519876385538,-0.468384506657013,-0.6354364556893086,-0.7768739740501147,-0.8869957182363651,-0.961362682967903,-0.9969771374012212,-0.9924034635986952,-0.9478260262588288,-0.8650417409787051,-0.7473876406230162,-0.5996063595963603,-0.42765495834688283,-0.23846479437961074,-0.03966211937599198,0.1607393348571499,0.35466138975470524,0.534287051207353,0.6923756124365938,0.8225545267380403,0.9195762847102404,0.9795299412524957,0.9999987656826221,0.980157660102052,0.920806419075229,0.8243374899271628,0.6946395332396473,0.5369406710226388,0.3575977412211625,0.16384005370657995,-0.03652202305755626,-0.23541189781145144,-0.42481232372777655,-0.5970885734702854,-0.7452961948977701,-0.863460941789154,-0.9468195955882813,-0.992011970647188,-0.9972163632416718,-0.9622229844115239,-0.8884424165493707,-0.7788487528528519,-0.6378597116880564,-0.4711585584515656,-0.28546501325720314,-0.08826437915464069,0.11249419028581728,0.30871812119183945,0.49249763087933246,0.65642457103136,0.7938910500071058,0.8993557968207025,0.96856752966192,0.9987363249805057,0.9886460792475359,0.938703530064352,0.8509218605779368,0.728839548109213,0.5773777282036353,0.40264182375664526,0.2116754355411703,0.012176414801956777,-0.187813436971435,-0.3802325329006192,-0.5573244631224087,-0.7119506555125291,-0.8378781313846075,-0.9300307567341145,-0.984693861097907,-0.9996639758451336,-0.9743376559532385,-0.9097358048645646,-0.8084625218894153,-0.6746001310153303,-0.513544622509873,-0.3317881406621021,-0.13665728557752876,0.06398222192344469,0.26204260735330004,0.4495400605830142,0.6189165630664194,0.7633445514159468,0.877002136343318,0.9553077828999468,0.995104992057583,0.9947895391203053,0.9543741399896319,0.8754879385867896,0.7613108360941325,0.616445309202791,0.4467308843707099,0.259008746628796,0.06084597155105704,-0.13976950340874797,-0.3347508725143489,-0.5162384407221313,-0.6769164478299706,-0.8103079666225079,-0.9110359876762592,-0.9750401665007032,-0.999740495942415,-0.9841413062214119,-0.9288714003597736,-0.8361587071443919,-0.7097404733627707,-0.5547126154608437,-0.3773243032536372,-0.18472605601726091,0.015318494799530362,0.21474555740101794,0.40551623092871736,0.5799405533929861,0.7309874838843939,0.8525683236911596,0.9397821516209142,0.9891133800343176,0.9985734681122469,0.9677810798956852,0.897977455930656,0.7919763788866354,0.6540507500345907,0.489760348682612,0.3057277175851317,0.10937120837788779,-0.09139405202605225,-0.2884752200420889,-0.47392795777533525,-0.6402766691200048,-0.780815840887802,-0.8898803419084357,-0.9630737843525746,-0.9974457420362995,-0.9916106820408228,-0.945803815516526,-0.8618716163260901,-0.7431973897207684,-0.5945648913735058,-0.4219654942854762,-0.23235667666084678,-0.033381566101408806,0.16693915471191184,0.360530561576861,0.5395889887995083,0.6968965948016884,0.8261123131684788,0.9220274609069186,0.9807757003524994,0.9999888911618817,0.9788925500022987,0.918337069958985,0.8207634412072755,0.6901048547478241,0.5316281555570661,0.35172153617276414,0.15763702878195765,-0.04280182404931632,-0.24151533621932456,-0.4304933700729357,-0.6021182248896179,-0.7494717062443319,-0.8666139982850529,-0.9488230975900026,-0.9927851570295108,-0.9967280668772052,-0.9604928885168385,-0.8855402612549754,-0.7748915239798697,-0.6330069250523395,-0.46560582978430903,-0.2794361729385419,-0.08200244961583288,0.11873679079176609,0.31468975356495527,0.49795757873927343,0.6611527439904759,0.7976968555090849,0.902085822922766,0.9701117290671618,0.9990324510420961,0.9876821951299413,0.9365184899168549,0.8476037433246704,0.7245221069895181,0.572234999181595,0.39688111013526195,0.20552895156986684,0.005891925125362177,-0.19398260470184017,-0.3860376996584407,-0.5625316227529884,-0.7163499075164409,-0.8412921420026201,-0.9323219072674158,-0.9857697953147974,-0.9994813228590969,-0.9729037785024534,-0.9071085025201024,-0.8047477011555277,-0.6699475362406824,-0.5081417996955924,-0.32585287748659597,-0.13042883237953315,0.07025279632187321,0.26810253622492686,0.45514506831764034,0.6238407119157632,0.7673893490392786,0.8800045370305158,0.9571467599399874,0.9957064163231913,0.9941291672114931,0.9524785914847043,0.872433623007614,0.7572208728399044,0.6114845646095315,0.4410993259525984,0.25293338239171753,0.05457169930447933,-0.14598976787751894,-0.3406663904704375,-0.5216107577564223,-0.6815290059515152,-0.8139748337068231,-0.9136093523852421,-0.9764162965550698,-0.9998639195675187,-0.9830070482134425,-0.9265251826359994,-0.8326951056938888,-0.7052991058898829,-0.5494725133985372,-0.3714966950101206,-0.17854585236259646,0.02160216998086253,0.22087940928949115,0.4112530040789332,0.5850489985952447,0.7352616798161375,0.8558359776008307,0.9419115444454152,0.9900186759920386,0.9982181747414559,0.9661795190649572,0.8951941865246285,0.7881235944387767,0.6492837562081237,0.4842713029022556,0.2997378831750322,0.10312203544201759,-0.09765065945320717,-0.2944870582415144,-0.4794526896708689,-0.6450915928809209,-0.7847268670346234,-0.8927298170563708,-0.964746846215996,-0.99787494952533,-0.9907787338103091,-0.9437442473827992,-0.8586674494389468,-0.7389777839825208,-0.589499939006324,-0.41625936341654124,-0.22623938131011934,-0.027099694320699398,0.17313238079834212,0.3663854931505622,0.5448696136873253,0.7013900511212414,0.8296374697864465,0.9244422188313594,0.9819827207403392,0.9999395190457095,0.9775887755711186,0.9158314483337364,0.8171569739449742,0.6855429184708403,0.5262946418243221,0.34583143881509804,0.15142777750457992,-0.04907993445305226,-0.24760923524596504,-0.4361574127763393,-0.6071240938227057,-0.7536176149318018,-0.8697328252316017,-0.9507891229444853,-0.9935191303497519,-0.9962004017134459,-0.9587248550411849,-0.8826031288610476,-0.7709036884151088,-0.6281291358875298,-0.4600347106019587,-0.2733962954403627,-0.07573728114146491,0.12497470142777756,0.32064895631131146,0.503397858253833,0.6658548027159771,0.8014711535533766,0.9047802184080876,0.971617610966114,0.9992891172857538,0.9866792995071972,0.9342964591300059,0.8442521473898154,0.7201760486708562,0.5670696680020743,0.3911047204901089,0.19937434960889192,-0.0003927972708062588,-0.2001441105006889,-0.39182761868589,-0.5677165634901945,-0.7207208651072788,-0.8446729232348902,-0.9345762329181301,-0.9868067935625902,-0.9992591923255816,-0.9714314732649159,-0.9044453711728808,-0.8010010944694101,-0.6652684798553298,-0.5027189062792218,-0.319904743763095,-0.12419522749882893,0.07652059587294935,0.2741518755734064,0.460732098716788,0.6287402202832375,0.7714038362919963,0.8829721792684593,0.9589479315645608,0.9962685121427056,0.993429529154838,0.9505454219477868,0.8693448480152954,0.753101000849737,0.6064996675780209,0.43545034497822077,0.2468480277832487,0.0482952715829421,-0.15220426603755646,-0.34656845277378145,-0.5269624721911597,-0.6861146450170683,-0.8176095503852446,-0.9161466313208165,-0.9777538600851527,-0.999947850533323,-0.981833963359435,-0.9241423689889081,-0.8291986144235519,-0.700829880488702,-0.5442107082520996,-0.36565441337733073,-0.17235859649785926,0.027884991918832137,0.22700453687561092,0.4169735335439255,0.5901343355122356,0.7395068343568991,0.8590698276717218,0.9440037336155496,0.9908848681582431,0.9978234537150448,0.9645397960425331,0.8923755587080479,0.7842396806582932,0.6444911169495557,0.47876312935731163,0.2937362097077694,0.0968687893884638,-0.10390340987104818,-0.30048726478114773,-0.4849584841278639,-0.6498810367920335,-0.7886068980128058,-0.89554403113135,-0.966381802475452,-0.9982647429154826,-0.9899076517674578,-0.9416474032065048,-0.8554293668755701,-0.7347289900745578,-0.5844117025502016,-0.41053679112092656,-0.2201131499485695,-0.020816752155450324,0.17931876849596085,0.3722259532175213,0.5501287172965964,0.7058558039126419,0.8331298573551887,0.9268204631054164,0.9831509547410826,0.9998506512842052,0.9762463883050139,0.9132896531666581,0.813518230588562,0.680953904596211,0.5209403404879076,0.33992768179532407,0.1452125451276661,-0.055356106295858194,-0.25369335419467165,-0.44180422811922987,-0.6121059825476566,-0.7577337572049365,-0.8728172994412666,-0.9527175939977001,-0.9942138616173815,-0.99563338859215,-0.95691895381841,-0.8796311353784889,-0.7668854036700191,-0.6232265368566231,-0.45444542095297236,-0.2673456193259536,-0.06946912119326211,0.13120767580886963,0.32659549405422217,0.5088182545424679,0.6705305614855327,0.8052137950626952,0.9074388768534879,0.9730851158794303,0.9995063135736721,0.985637431991765,0.9320375254696115,0.8408672051546398,0.7158015448139873,0.5618819386854078,0.38531288297753596,0.193211872753147,-0.00667750415236834,-0.20629771100072555,-0.39760206129265235,-0.5728790805390617,-0.7250633556406523,-0.8480203415472032,-0.9367936446448655,-0.9878048148818932,-0.9989975930183093,-0.9699207983938418,-0.9017465160114964,-0.7972228498145933,-0.6605631466727162,-0.49727615645439205,-0.3139439744310813,-0.11795671715089309,0.0827853730110253,0.2801903864618352,0.4663009311036388,0.6336148946479825,0.7753878546095261,0.8859049458410064,0.9607112266309601,0.9967912573144461,0.9926906525846558,0.948574707735276,0.8662217356104861,0.7489513828503999,0.6014908150018925,0.42978416457122093,0.24075292316293412,0.042016936293229265,-0.15841275242817482,-0.352456826304522,-0.5322933726442398,-0.6906731839029012,-0.8212119730936754,-0.9186477242653603,-0.979052804259822,-0.9999922855247202,-0.980622097993955,-0.9217230535349125,-0.8256693714380394,-0.696332973685089,-0.5389274078523948,-0.3597976891139065,-0.16616453280738136,0.03416671245443701,0.2331206982285461,0.4226775933741286,0.5951963632831457,0.7437227798314194,0.8622697461731716,0.946058636493845,0.9917119223200118,0.9973893206237162,0.9628619755942184,0.8895216838111221,0.7803247909521461,0.6396730215588896,0.47323604560980614,0.28772293423753825,0.09061171720815296,-0.11015205630856482,-0.3064756026644087,-0.4904451236779631,-0.6546448116798089,-0.7924557805688225,-0.898322872977603,-0.9679785885534148,-0.9986151068106625,-0.9889974703183285,-0.9395133658088266,-0.8521574965337391,-0.7304511758158105,-0.5793003829807515,-0.40479800342919553,-0.21397822455018212,-0.014532987769185171,0.1854980734547272,0.3780517110910466,0.555366091902877,0.7102936767872717,0.8365893379324503,0.9291620997931163,0.984280356211783,0.9997222913874738,0.9748654412256914,0.9107117848535238,0.8098473548611815,0.6763379943809631,0.5155654630321036,0.33401049830045265,0.13899157714067725,-0.06163009168139746,-0.2597674527545956,-0.44743359306360453,-0.6170636942894788,-0.7618199704842079,-0.875867299083435,-0.9546084345788296,-0.9948693233918938,-0.9950270499092118,-0.9550752561780618,-0.8766243981953072,-0.7628368284589473,-0.6182993216026438,-0.44883818160320305,-0.2612843835851267,-0.0631982173514473,0.13743546774480675,0.3325291319172434,0.5142185535102787,0.6751798356161175,0.8089246322099228,0.9100616932470392,0.9745141858435767,0.9996840313270249,0.9845566337353078,0.9297417781591926,0.8374490503178906,0.7113987682031346,0.5566720161366114,0.37950582636342534,0.18704176440824252,-0.012961947285529293,-0.21244316314660447,-0.40336079939970026,-0.5780189699905017,-0.7293772075968008,-0.8513342647229949,-0.9389740548640982,-0.9887638198528431,-0.998696535269923,-0.9683718135578928,-0.8990120436353746,-0.7934131164245195,-0.6558317225444231,-0.49181376519872616,-0.3079708049292258,-0.11171354774450805,0.08904688028937947,0.28621783038068516,0.47185134552056235,0.6384645424700309,0.7793412466310494,0.8888027209096446,0.9624365754924328,0.9972746311910058,0.9919125666851046,0.9465665266865092,0.8630644091499885,0.7447721827437968,0.5964582047209767,0.4241010085344834,0.23464830927531397,0.03573694141724298,-0.16461498182647863,-0.35833127848348,-0.5376032485553814,-0.6952044425557707,-0.8247819595434358,-0.921112532430665,-0.9803130777733362,-0.9999972227866138,-0.9793714999832794,-0.919267331832217,-0.8221075161354485,-0.6918085630977795,-0.5336228208795938,-0.35392675354915515,-0.15996390594450233,0.040447083472064556,0.2392276517722786,0.4283649582701859,0.6002348819676461,0.7479093497181399,0.8654356067147467,0.9480761719157901,0.9924998058103472,0.9969157926148894,0.9611461239907144,0.886632674556247,0.7763790799506414,0.6348296603413354,0.467690269968882,0.2816982942772256,0.08435106604302281,-0.11639635195650612,-0.3124518353638315,-0.49591239160978967,-0.659382729384246,-0.7962733626792391,-0.9010662328363378,-0.9695371413799734,-0.9989260273721918,-0.9880482254133015,-0.9373422194801242,-0.8488519676458983,-0.7261445101714546,-0.5741661821849572,-0.39904322701218153,-0.20783484743267233,-0.008248649358585615,0.19167005160435416,0.3838625366651546,0.5605815306401669,0.7147034944579574,0.8400157748753605,0.9314670364044542,0.9853708805433219,0.9995544444254811,0.9734459888778222,0.9080979452152029,0.8061444917553409,0.6716953701443922,0.5101702217541015,0.3280801220474932,0.13276511925961976,-0.06790164279935366,-0.265831291010894,-0.4530452852606141,-0.621997033228395,-0.7658760933722241,-0.878882703689006,-0.9564615700033193,-0.9954854897838374,-0.9943814096138174,-0.9531938349425729,-0.8735830360716572,-0.7587581226928022,-0.6133476847409083,-0.44321321402748054,-0.25521282762477865,-0.0569248173042816,0.14365783124982465,0.3384496355330223,0.5195985418561692,0.6798024414704578,0.8126035184243549,0.9126485639926983,0.9759047644130227,0.9998222635263122,0.98343694742723,0.9274093078762143,0.8339978178899038,0.706967892739559,0.5514401061375724,0.37368378001509706,0.1808642682813289,-0.019245878447252947,-0.21858022420504702,-0.4091036055479906,-0.583136028828984,-0.7336622505871297,-0.8546145618688753,-0.9411173774540305,-0.9896837705965942,-0.9983560309716273,-0.9667845799388959,-0.8962420620507989,-0.7895720447759625,-0.6510743943523176,-0.48633194826623666,-0.30198547118587343,-0.10546596587247951,0.09530487039112305,0.2922339692578795,0.47738312273679834,0.6432889721976516,0.7832638562054234,0.8916653900180601,0.9641239100011226,0.9977186146800668,0.9910953021890759,0.944520958120653,0.8598729933418189,0.7405635656000419,0.5914020355134866,0.41840110134170533,0.22853442724085735,0.029455535002094843,-0.17081070925659894,-0.36419157728134227,-0.5428918901950207,-0.6997082419997037,-0.8283193687272719,-0.923540958461697,-0.981534630847369,-0.999962662123993,-0.9780822187236164,-0.9167753008770017,-0.8185131892019964,-0.6872568274321786,-0.528297156854359,-0.34804183857338467,-0.15375696082179408,0.046725856909519026,0.24532515629414783,0.4340354035924675,0.605249692554245,0.7520663786557802,0.8685672842510644,0.9500562601926995,0.9932484875093872,0.9964028883919823,0.9593923090046944,0.8837086450537133,0.7724027035016053,0.6299612246000519,0.4621260214816755,0.2756625277879401,0.07808708317671374,-0.12263605017724302,-0.3184157268300801,-0.5013600719770077,-0.664094602767167,-0.800059493557137,-0.9037740023501335,-0.9710573993953819,-0.9991974923193244,-0.9870599545456501,-0.9351340499763712,-0.8455129107740607,-0.7218091632465516,-0.5690093029535637,-0.39327268917203223,-0.20168326124724886,-0.001963985142551515,0.1978344591635028,0.3896582004237625,0.565774827509171,0.7190850827455697,0.8434090328464585,0.9337351818988407,0.9864224846620924,0.999347117027842,0.9719880873269837,0.9054482374931769,0.8024097875268552,0.667026215261197,0.5047548297550327,0.3221367872745422,0.12653341741733998,-0.07417051193578636,-0.2718846294536563,-0.4586390830594482,-0.6269058045073033,-0.7699019656601043,-0.8818633941554275,-0.9582769270759974,-0.996062336455851,-0.9936964932074765,-0.9512747644243487,-0.8705071691354199,-0.7546494474723705,-0.608371821851339,-0.4375707404011701,-0.24913119125932442,-0.05064916883884822,0.14987452055290945,0.34435677105362605,0.524958007080981,0.6843981964647925,0.8162503083972179,0.9151993869141561,0.9772567966627245,0.9999210047116289,0.9822784172929802,0.9250402067486679,0.8305136441875758,0.7025090934338913,0.546186415338357,0.3678469738921476,0.17467962837135953,-0.02552904943472496,-0.22470865177442761,-0.41483025290807396,-0.5882300549405582,-0.7379183153606327,-0.8578611034196139,-0.9432235277575932,-0.9905646307769181,-0.9979760935726675,-0.9651591602295458,-0.8934366806665458,-0.7856997865837003,-0.6462913500015114,-0.48083092217781753,-0.2959882096102663,-0.09921421830223605,0.10155909613794874,0.29823856546775906,0.48289604425812166,0.6480879932753555,0.7871555283971391,0.8944928400964485,0.9657731635106631,0.9981231902451545,0.9902388913769128,0.9424380828337184,0.8566476142408003,0.736325697651162,0.5863225070881666,0.41268466812801696,0.22241151854577562,0.023172965151331167,-0.17699968999959367,-0.37003749122793206,-0.5481590886721142,-0.7041844043435579,-0.8318240609242815,-0.9259329064403141,-0.9827174152329964,-0.9998886049019374,-0.9767543051390191,-0.9142470590995904,-0.8148865326066616,-0.6826779464728143,-0.5229506261299501,-0.342143176629168,-0.14754394260138742,0.053002784767365245,0.25141297095449106,0.4396887053695301,0.6102405969677824,0.7561937024498687,0.871664655087076,0.9519988231149071,0.9939579378457158,0.9958506282136933,0.9576005999084336,0.8807497107968866,0.768395818664235,0.6250679066289452,0.45654351992496245,0.2696158731707019,0.07182001602412208,-0.12887090451507477,-0.3243670415008422,-0.5067879496070498,-0.6687802457188345,-0.8038140236577891,-0.9064460745674672,-0.972539302552356,-0.9994294909297184,-0.986032696750129,-0.9328889445159223,-0.842140457804349,-0.7174453062785483,-0.56382994897335,-0.3874866178336477,-0.19552370896936175,0.004320756647034932,0.20399105265052728,0.39543847344933525,0.5709457773845893,0.723438268586063,0.8467689778187251,0.935966446689112,0.9874351270318191,0.9991003173835911,0.9704917941573938,0.902762766345643,0.798643389689065,0.662330714153733,0.49931950093252886,0.3161807287318549,0.12029671775369759,-0.08043645148302807,-0.27792722898802363,-0.4642147655160901,-0.6317898142392103,-0.7738974283338792,-0.8848092527514462,-0.9600544340938283,-0.9965998406236247,-0.9929723277430657,-0.9493181204229714,-0.8673969188771251,-0.7505109650821717,-0.6033719294707384,-0.43191098359078645,-0.24303971470166524,-0.0443715198305843,0.15608529010716668,0.3502503051587067,0.5302967374964708,0.6889669190756672,0.8198648580874767,0.9177140612589666,0.9785702291900641,0.9999802509828953,0.9810810890922014,0.9226345683513906,0.8269966668288545,0.6980225463999377,0.5409111512495197,0.36199563853683964,0.16848808895945314,-0.03181121207481541,-0.23082820379390398,-0.42054051528874015,-0.5933008471212997,-0.7421452338113492,-0.861073761143084,-0.945292422586027,-0.9914063656015843,-0.997556738079824,-0.9634956186306389,-0.8905960102897665,-0.7817964947944593,-0.6414827784128538,-0.4753109042130855,-0.28997925708212213,-0.09295855196540406,0.10780931050000778,0.30423138184057735,0.4883898923350687,0.6528614161514177,0.7910161094928664,0.8972849594659875,0.967384270878694,0.9984883419063352,0.9893433680751111,0.9403179830951482,0.8533883992430092,0.7320587462848411,0.5812198200763116,0.4069519346809822,0.2162798250329259,0.01688948001399722,-0.18318167960255402,-0.37586878942092883,-0.5534046359429614,-0.7086327527878001,-0.835295897706077,-0.928288281889275,-0.9838613842125172,-0.9997750540455569,-0.9753878116794386,-0.9116827063605631,-0.8112276895952517,-0.6780721010766493,-0.5175834398838209,-0.3362310007019494,-0.141325096685176,0.059277619119292066,0.2574908552967069,0.4453246403070667,0.6152073980774347,0.760291158079303,0.8747275968826671,0.9539037839550325,0.9946281287973999,0.9952590338932336,0.9557710674708856,0.8777559886578531,0.764358583702533,0.6201498997041913,0.45094298579678227,0.2635585692563723,0.06555011212208062,-0.13510066870551146,-0.3303055443112106,-0.5121958101092232,-0.6734394731653932,-0.8075368046846371,-0.9090823439467863,-0.9739827923187153,-0.9996220140398904,-0.9849664926014384,-0.9306069917760296,-0.8387347419419643,-0.7130531116312944,-0.5586283248185238,-0.38168524153568095,-0.18935643388955206,0.010605327775341206,0.21013958889208698,0.40120312743255615,0.576094176024161,0.7277628800369186,0.8500954770809983,0.9381607426446927,0.9884087676551193,0.998814055240826,0.9689571684697736,0.9000416378435296,0.794845447007279,0.6576090522849782,0.49386444997129597,0.3102121816720359,0.11405526660629492,-0.08669921394844407,-0.28395885094330175,-0.46977211240204325,-0.636648869515334,-0.7778623235804831,-0.8877201631212776,-0.9617940208488098,-0.9970979810568096,-0.9922089418236991,-0.9473239802219983,-0.8642524081457116,-0.7463428389842744,-0.5983482050849356,-0.42623416714570045,-0.23693863855304062,-0.03809211823462575,0.16228989459918333,0.35613000506535863,0.5356145222332821,0.6935084288476034,0.823447024727524,0.9201924877023455,0.9798450101169912,1.0]}
},{}],86:[function(require,module,exports){
(function (__filename){(function (){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var tape = require( 'tape' );
var isnan = require( '@stdlib/math/base/assert/is-nan' );
var PINF = require( '@stdlib/constants/float64/pinf' );
var NINF = require( '@stdlib/constants/float64/ninf' );
var EPS = require( '@stdlib/constants/float64/eps' );
var abs = require( '@stdlib/math/base/special/abs' );
var sincos = require( './../lib' );


// FIXTURES //

var mediumNegative = require( './fixtures/julia/medium_negative.json' );
var mediumPositive = require( './fixtures/julia/medium_positive.json' );
var largeNegative = require( './fixtures/julia/large_negative.json' );
var largePositive = require( './fixtures/julia/large_positive.json' );
var hugeNegative = require( './fixtures/julia/huge_negative.json' );
var hugePositive = require( './fixtures/julia/huge_positive.json' );


// TESTS //

tape( 'main export is a function', function test( t ) {
	t.ok( true, __filename );
	t.equal( typeof sincos, 'function', 'main export is a function' );
	t.end();
});

tape( 'the function computes in-place the sine and cosine (for -256*pi < x < 0)', function test( t ) {
	var cosine;
	var delta;
	var sine;
	var tol;
	var x;
	var y;
	var z;
	var i;

	z = [ 0.0, 0.0 ];
	x = mediumNegative.x;
	sine = mediumNegative.sine;
	cosine = mediumNegative.cosine;

	for ( i = 0; i < x.length; i++ ) {
		y = sincos( z, x[i] );
		t.equal( y, z, 'returns a reference to out' );
		if ( y[0] === sine[ i ] ) {
			t.equal( y[0], sine[ i ], 'x: '+x[i]+'. Expected: '+sine[i] );
		} else {
			delta = abs( y[0] - sine[i] );
			tol = EPS * abs( sine[i] );
			t.ok( delta <= tol, 'within tolerance. x: '+x[i]+'. Value: '+y[0]+'. Expected: '+sine[i]+'. tol: '+tol+'. delta: '+delta+'.' );
		}
		if ( y[1] === cosine[ i ] ) {
			t.equal( y[1], cosine[ i ], 'x: '+x[i]+'. Expected: '+cosine[i] );
		} else {
			delta = abs( y[1] - cosine[i] );
			tol = EPS * abs( cosine[i] );
			t.ok( delta <= tol, 'within tolerance. x: '+x[i]+'. Value: '+y[1]+'. Expected: '+cosine[i]+'. tol: '+tol+'. delta: '+delta+'.' );
		}
	}
	t.end();
});

tape( 'the function computes the sine and cosine (for -256*pi < x < 0)', function test( t ) {
	var cosine;
	var delta;
	var sine;
	var tol;
	var x;
	var y;
	var i;

	x = mediumNegative.x;
	sine = mediumNegative.sine;
	cosine = mediumNegative.cosine;

	for ( i = 0; i < x.length; i++ ) {
		y = sincos( x[i] );
		if ( y[0] === sine[ i ] ) {
			t.equal( y[0], sine[ i ], 'x: '+x[i]+'. Expected: '+sine[i] );
		} else {
			delta = abs( y[0] - sine[i] );
			tol = EPS * abs( sine[i] );
			t.ok( delta <= tol, 'within tolerance. x: '+x[i]+'. Value: '+y[0]+'. Expected: '+sine[i]+'. tol: '+tol+'. delta: '+delta+'.' );
		}
		if ( y[1] === cosine[ i ] ) {
			t.equal( y[1], cosine[ i ], 'x: '+x[i]+'. Expected: '+cosine[i] );
		} else {
			delta = abs( y[1] - cosine[i] );
			tol = EPS * abs( cosine[i] );
			t.ok( delta <= tol, 'within tolerance. x: '+x[i]+'. Value: '+y[1]+'. Expected: '+cosine[i]+'. tol: '+tol+'. delta: '+delta+'.' );
		}
	}
	t.end();
});

tape( 'the function computes the sine and cosine (for 0 < x < 256*pi)', function test( t ) {
	var cosine;
	var delta;
	var sine;
	var tol;
	var x;
	var y;
	var i;

	x = mediumPositive.x;
	sine = mediumPositive.sine;
	cosine = mediumPositive.cosine;

	for ( i = 0; i < x.length; i++ ) {
		y = sincos( x[i] );
		if ( y[0] === sine[ i ] ) {
			t.equal( y[0], sine[ i ], 'x: '+x[i]+'. Expected: '+sine[i] );
		} else {
			delta = abs( y[0] - sine[i] );
			tol = EPS * abs( sine[i] );
			t.ok( delta <= tol, 'within tolerance. x: '+x[i]+'. Value: '+y[0]+'. Expected: '+sine[i]+'. tol: '+tol+'. delta: '+delta+'.' );
		}
		if ( y[1] === cosine[ i ] ) {
			t.equal( y[1], cosine[ i ], 'x: '+x[i]+'. Expected: '+cosine[i] );
		} else {
			delta = abs( y[1] - cosine[i] );
			tol = EPS * abs( cosine[i] );
			t.ok( delta <= tol, 'within tolerance. x: '+x[i]+'. Value: '+y[1]+'. Expected: '+cosine[i]+'. tol: '+tol+'. delta: '+delta+'.' );
		}
	}
	t.end();
});

tape( 'the function computes the sine and cosine (for -2**60 (pi/2) < x < -2**20 (pi/2))', function test( t ) {
	var cosine;
	var delta;
	var sine;
	var tol;
	var x;
	var y;
	var i;

	x = largeNegative.x;
	sine = largeNegative.sine;
	cosine = largeNegative.cosine;

	for ( i = 0; i < x.length; i++ ) {
		y = sincos( x[i] );
		if ( y[0] === sine[ i ] ) {
			t.equal( y[0], sine[ i ], 'x: '+x[i]+'. Expected: '+sine[i] );
		} else {
			delta = abs( y[0] - sine[i] );
			tol = EPS * abs( sine[i] );
			t.ok( delta <= tol, 'within tolerance. x: '+x[i]+'. Value: '+y[0]+'. Expected: '+sine[i]+'. tol: '+tol+'. delta: '+delta+'.' );
		}
		if ( y[1] === cosine[ i ] ) {
			t.equal( y[1], cosine[ i ], 'x: '+x[i]+'. Expected: '+cosine[i] );
		} else {
			delta = abs( y[1] - cosine[i] );
			tol = EPS * abs( cosine[i] );
			t.ok( delta <= tol, 'within tolerance. x: '+x[i]+'. Value: '+y[1]+'. Expected: '+cosine[i]+'. tol: '+tol+'. delta: '+delta+'.' );
		}
	}
	t.end();
});

tape( 'the function computes the sine and cosine (for 2**20 (pi/2) < x < 2**60 (pi/2))', function test( t ) {
	var cosine;
	var delta;
	var sine;
	var tol;
	var x;
	var y;
	var i;

	x = largePositive.x;
	sine = largePositive.sine;
	cosine = largePositive.cosine;

	for ( i = 0; i < x.length; i++ ) {
		y = sincos( x[i] );
		if ( y[0] === sine[ i ] ) {
			t.equal( y[0], sine[ i ], 'x: '+x[i]+'. Expected: '+sine[i] );
		} else {
			delta = abs( y[0] - sine[i] );
			tol = EPS * abs( sine[i] );
			t.ok( delta <= tol, 'within tolerance. x: '+x[i]+'. Value: '+y[0]+'. Expected: '+sine[i]+'. tol: '+tol+'. delta: '+delta+'.' );
		}
		if ( y[1] === cosine[ i ] ) {
			t.equal( y[1], cosine[ i ], 'x: '+x[i]+'. Expected: '+cosine[i] );
		} else {
			delta = abs( y[1] - cosine[i] );
			tol = EPS * abs( cosine[i] );
			t.ok( delta <= tol, 'within tolerance. x: '+x[i]+'. Value: '+y[1]+'. Expected: '+cosine[i]+'. tol: '+tol+'. delta: '+delta+'.' );
		}
	}
	t.end();
});

tape( 'the function computes the sine and cosine (for x <= -2**60 (PI/2))', function test( t ) {
	var cosine;
	var delta;
	var sine;
	var tol;
	var x;
	var y;
	var i;

	x = hugeNegative.x;
	sine = hugeNegative.sine;
	cosine = hugeNegative.cosine;

	for ( i = 0; i < x.length; i++ ) {
		y = sincos( x[i] );
		if ( y[0] === sine[ i ] ) {
			t.equal( y[0], sine[ i ], 'x: '+x[i]+'. Expected: '+sine[i] );
		} else {
			delta = abs( y[0] - sine[i] );
			tol = EPS * abs( sine[i] );
			t.ok( delta <= tol, 'within tolerance. x: '+x[i]+'. Value: '+y[0]+'. Expected: '+sine[i]+'. tol: '+tol+'. delta: '+delta+'.' );
		}
		if ( y[1] === cosine[ i ] ) {
			t.equal( y[1], cosine[ i ], 'x: '+x[i]+'. Expected: '+cosine[i] );
		} else {
			delta = abs( y[1] - cosine[i] );
			tol = EPS * abs( cosine[i] );
			t.ok( delta <= tol, 'within tolerance. x: '+x[i]+'. Value: '+y[1]+'. Expected: '+cosine[i]+'. tol: '+tol+'. delta: '+delta+'.' );
		}
	}
	t.end();
});

tape( 'the function computes the sine and cosine (for x >= 2**60 (PI/2))', function test( t ) {
	var cosine;
	var delta;
	var sine;
	var tol;
	var x;
	var y;
	var i;

	x = hugePositive.x;
	sine = hugePositive.sine;
	cosine = hugePositive.cosine;

	for ( i = 0; i < x.length; i++ ) {
		y = sincos( x[i] );
		if ( y[0] === sine[ i ] ) {
			t.equal( y[0], sine[ i ], 'x: '+x[i]+'. Expected: '+sine[i] );
		} else {
			delta = abs( y[0] - sine[i] );
			tol = EPS * abs( sine[i] );
			t.ok( delta <= tol, 'within tolerance. x: '+x[i]+'. Value: '+y[0]+'. Expected: '+sine[i]+'. tol: '+tol+'. delta: '+delta+'.' );
		}
		if ( y[1] === cosine[ i ] ) {
			t.equal( y[1], cosine[ i ], 'x: '+x[i]+'. Expected: '+cosine[i] );
		} else {
			delta = abs( y[1] - cosine[i] );
			tol = EPS * abs( cosine[i] );
			t.ok( delta <= tol, 'within tolerance. x: '+x[i]+'. Value: '+y[1]+'. Expected: '+cosine[i]+'. tol: '+tol+'. delta: '+delta+'.' );
		}
	}
	t.end();
});

tape( 'the function returns `NaN` if provided a `NaN`', function test( t ) {
	var v = sincos( NaN );
	t.equal( isnan( v[0] ), true, 'returns NaN' );
	t.equal( isnan( v[1] ), true, 'returns NaN' );
	t.end();
});

tape( 'the function returns `NaN` if provided `+infinity`', function test( t ) {
	var v = sincos( PINF );
	t.equal( isnan( v[0] ), true, 'returns NaN' );
	t.equal( isnan( v[1] ), true, 'returns NaN' );
	t.end();
});

tape( 'the function returns `NaN` if provided `-infinity`', function test( t ) {
	var v = sincos( NINF );
	t.equal( isnan( v[0] ), true, 'returns NaN' );
	t.equal( isnan( v[1] ), true, 'returns NaN' );
	t.end();
});

}).call(this)}).call(this,"/lib/node_modules/@stdlib/math/base/special/sincos/test/test.js")
},{"./../lib":76,"./fixtures/julia/huge_negative.json":80,"./fixtures/julia/huge_positive.json":81,"./fixtures/julia/large_negative.json":82,"./fixtures/julia/large_positive.json":83,"./fixtures/julia/medium_negative.json":84,"./fixtures/julia/medium_positive.json":85,"@stdlib/constants/float64/eps":46,"@stdlib/constants/float64/ninf":52,"@stdlib/constants/float64/pinf":53,"@stdlib/math/base/assert/is-nan":60,"@stdlib/math/base/special/abs":62,"tape":217}],87:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Constructor which returns a `Number` object.
*
* @module @stdlib/number/ctor
*
* @example
* var Number = require( '@stdlib/number/ctor' );
*
* var v = new Number( 10.0 );
* // returns <Number>
*/

// MODULES //

var Number = require( './number.js' );


// EXPORTS //

module.exports = Number;

},{"./number.js":88}],88:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// EXPORTS //

module.exports = Number; // eslint-disable-line stdlib/require-globals

},{}],89:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Return an integer corresponding to the unbiased exponent of a double-precision floating-point number.
*
* @module @stdlib/number/float64/base/exponent
*
* @example
* var exponent = require( '@stdlib/number/float64/base/exponent' );
*
* var exp = exponent( 3.14e-307 ); // => 2**-1019 ~ 1e-307
* // returns -1019
*
* exp = exponent( -3.14 );
* // returns 1
*
* exp = exponent( 0.0 );
* // returns -1023
*
* exp = exponent( NaN );
* // returns 1024
*/

// MODULES //

var exponent = require( './main.js' );


// EXPORTS //

module.exports = exponent;

},{"./main.js":90}],90:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var getHighWord = require( '@stdlib/number/float64/base/get-high-word' );
var EXP_MASK = require( '@stdlib/constants/float64/high-word-exponent-mask' );
var BIAS = require( '@stdlib/constants/float64/exponent-bias' );


// MAIN //

/**
* Returns an integer corresponding to the unbiased exponent of a double-precision floating-point number.
*
* @param {number} x - input value
* @returns {integer32} unbiased exponent
*
* @example
* var exp = exponent( 3.14e-307 ); // => 2**-1019 ~ 1e-307
* // returns -1019
*
* @example
* var exp = exponent( -3.14 );
* // returns 1
*
* @example
* var exp = exponent( 0.0 );
* // returns -1023
*
* @example
* var exp = exponent( NaN );
* // returns 1024
*/
function exponent( x ) {
	// Extract from the input value a higher order word (unsigned 32-bit integer) which contains the exponent:
	var high = getHighWord( x );

	// Apply a mask to isolate only the exponent bits and then shift off all bits which are part of the fraction:
	high = ( high & EXP_MASK ) >>> 20;

	// Remove the bias and return:
	return (high - BIAS)|0; // asm type annotation
}


// EXPORTS //

module.exports = exponent;

},{"@stdlib/constants/float64/exponent-bias":47,"@stdlib/constants/float64/high-word-exponent-mask":48,"@stdlib/number/float64/base/get-high-word":95}],91:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Create a double-precision floating-point number from a higher order word (unsigned 32-bit integer) and a lower order word (unsigned 32-bit integer).
*
* @module @stdlib/number/float64/base/from-words
*
* @example
* var fromWords = require( '@stdlib/number/float64/base/from-words' );
*
* var v = fromWords( 1774486211, 2479577218 );
* // returns 3.14e201
*
* v = fromWords( 3221823995, 1413754136 );
* // returns -3.141592653589793
*
* v = fromWords( 0, 0 );
* // returns 0.0
*
* v = fromWords( 2147483648, 0 );
* // returns -0.0
*
* v = fromWords( 2146959360, 0 );
* // returns NaN
*
* v = fromWords( 2146435072, 0 );
* // returns Infinity
*
* v = fromWords( 4293918720, 0 );
* // returns -Infinity
*/

// MODULES //

var fromWords = require( './main.js' );


// EXPORTS //

module.exports = fromWords;

},{"./main.js":93}],92:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var isLittleEndian = require( '@stdlib/assert/is-little-endian' );


// MAIN //

var indices;
var HIGH;
var LOW;

if ( isLittleEndian === true ) {
	HIGH = 1; // second index
	LOW = 0; // first index
} else {
	HIGH = 0; // first index
	LOW = 1; // second index
}
indices = {
	'HIGH': HIGH,
	'LOW': LOW
};


// EXPORTS //

module.exports = indices;

},{"@stdlib/assert/is-little-endian":38}],93:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var Uint32Array = require( '@stdlib/array/uint32' );
var Float64Array = require( '@stdlib/array/float64' );
var indices = require( './indices.js' );


// VARIABLES //

var FLOAT64_VIEW = new Float64Array( 1 );
var UINT32_VIEW = new Uint32Array( FLOAT64_VIEW.buffer );

var HIGH = indices.HIGH;
var LOW = indices.LOW;


// MAIN //

/**
* Creates a double-precision floating-point number from a higher order word (unsigned 32-bit integer) and a lower order word (unsigned 32-bit integer).
*
* ## Notes
*
* ```text
* float64 (64 bits)
* f := fraction (significand/mantissa) (52 bits)
* e := exponent (11 bits)
* s := sign bit (1 bit)
*
* |-------- -------- -------- -------- -------- -------- -------- --------|
* |                                Float64                                |
* |-------- -------- -------- -------- -------- -------- -------- --------|
* |              Uint32               |               Uint32              |
* |-------- -------- -------- -------- -------- -------- -------- --------|
* ```
*
* If little endian (more significant bits last):
*
* ```text
*                         <-- lower      higher -->
* |   f7       f6       f5       f4       f3       f2    e2 | f1 |s|  e1  |
* ```
*
* If big endian (more significant bits first):
*
* ```text
*                         <-- higher      lower -->
* |s| e1    e2 | f1     f2       f3       f4       f5        f6      f7   |
* ```
*
*
* In which Uint32 should we place the higher order bits? If little endian, the second; if big endian, the first.
*
*
* ## References
*
* -   [Open Group][1]
*
* [1]: http://pubs.opengroup.org/onlinepubs/9629399/chap14.htm
*
* @param {uinteger32} high - higher order word (unsigned 32-bit integer)
* @param {uinteger32} low - lower order word (unsigned 32-bit integer)
* @returns {number} floating-point number
*
* @example
* var v = fromWords( 1774486211, 2479577218 );
* // returns 3.14e201
*
* @example
* var v = fromWords( 3221823995, 1413754136 );
* // returns -3.141592653589793
*
* @example
* var v = fromWords( 0, 0 );
* // returns 0.0
*
* @example
* var v = fromWords( 2147483648, 0 );
* // returns -0.0
*
* @example
* var v = fromWords( 2146959360, 0 );
* // returns NaN
*
* @example
* var v = fromWords( 2146435072, 0 );
* // returns Infinity
*
* @example
* var v = fromWords( 4293918720, 0 );
* // returns -Infinity
*/
function fromWords( high, low ) {
	UINT32_VIEW[ HIGH ] = high;
	UINT32_VIEW[ LOW ] = low;
	return FLOAT64_VIEW[ 0 ];
}


// EXPORTS //

module.exports = fromWords;

},{"./indices.js":92,"@stdlib/array/float64":6,"@stdlib/array/uint32":11}],94:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var isLittleEndian = require( '@stdlib/assert/is-little-endian' );


// MAIN //

var HIGH;
if ( isLittleEndian === true ) {
	HIGH = 1; // second index
} else {
	HIGH = 0; // first index
}


// EXPORTS //

module.exports = HIGH;

},{"@stdlib/assert/is-little-endian":38}],95:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Return an unsigned 32-bit integer corresponding to the more significant 32 bits of a double-precision floating-point number.
*
* @module @stdlib/number/float64/base/get-high-word
*
* @example
* var getHighWord = require( '@stdlib/number/float64/base/get-high-word' );
*
* var w = getHighWord( 3.14e201 ); // => 01101001110001001000001011000011
* // returns 1774486211
*/

// MODULES //

var getHighWord = require( './main.js' );


// EXPORTS //

module.exports = getHighWord;

},{"./main.js":96}],96:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var Uint32Array = require( '@stdlib/array/uint32' );
var Float64Array = require( '@stdlib/array/float64' );
var HIGH = require( './high.js' );


// VARIABLES //

var FLOAT64_VIEW = new Float64Array( 1 );
var UINT32_VIEW = new Uint32Array( FLOAT64_VIEW.buffer );


// MAIN //

/**
* Returns an unsigned 32-bit integer corresponding to the more significant 32 bits of a double-precision floating-point number.
*
* ## Notes
*
* ```text
* float64 (64 bits)
* f := fraction (significand/mantissa) (52 bits)
* e := exponent (11 bits)
* s := sign bit (1 bit)
*
* |-------- -------- -------- -------- -------- -------- -------- --------|
* |                                Float64                                |
* |-------- -------- -------- -------- -------- -------- -------- --------|
* |              Uint32               |               Uint32              |
* |-------- -------- -------- -------- -------- -------- -------- --------|
* ```
*
* If little endian (more significant bits last):
*
* ```text
*                         <-- lower      higher -->
* |   f7       f6       f5       f4       f3       f2    e2 | f1 |s|  e1  |
* ```
*
* If big endian (more significant bits first):
*
* ```text
*                         <-- higher      lower -->
* |s| e1    e2 | f1     f2       f3       f4       f5        f6      f7   |
* ```
*
* In which Uint32 can we find the higher order bits? If little endian, the second; if big endian, the first.
*
*
* ## References
*
* -   [Open Group][1]
*
* [1]: http://pubs.opengroup.org/onlinepubs/9629399/chap14.htm
*
* @param {number} x - input value
* @returns {uinteger32} higher order word
*
* @example
* var w = getHighWord( 3.14e201 ); // => 01101001110001001000001011000011
* // returns 1774486211
*/
function getHighWord( x ) {
	FLOAT64_VIEW[ 0 ] = x;
	return UINT32_VIEW[ HIGH ];
}


// EXPORTS //

module.exports = getHighWord;

},{"./high.js":94,"@stdlib/array/float64":6,"@stdlib/array/uint32":11}],97:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Return an unsigned 32-bit integer corresponding to the less significant 32 bits of a double-precision floating-point number.
*
* @module @stdlib/number/float64/base/get-low-word
*
* @example
* var getLowWord = require( '@stdlib/number/float64/base/get-low-word' );
*
* var w = getLowWord( 3.14e201 ); // => 10010011110010110101100010000010
* // returns 2479577218
*/

// MODULES //

var getLowWord = require( './main.js' );


// EXPORTS //

module.exports = getLowWord;

},{"./main.js":99}],98:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var isLittleEndian = require( '@stdlib/assert/is-little-endian' );


// MAIN //

var LOW;
if ( isLittleEndian === true ) {
	LOW = 0; // first index
} else {
	LOW = 1; // second index
}


// EXPORTS //

module.exports = LOW;

},{"@stdlib/assert/is-little-endian":38}],99:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var Uint32Array = require( '@stdlib/array/uint32' );
var Float64Array = require( '@stdlib/array/float64' );
var LOW = require( './low.js' );


// VARIABLES //

var FLOAT64_VIEW = new Float64Array( 1 );
var UINT32_VIEW = new Uint32Array( FLOAT64_VIEW.buffer );


// MAIN //

/**
* Returns a 32-bit unsigned integer corresponding to the less significant 32 bits of a double-precision floating-point number.
*
* ## Notes
*
* ```text
* float64 (64 bits)
* f := fraction (significand/mantissa) (52 bits)
* e := exponent (11 bits)
* s := sign bit (1 bit)
*
* |-------- -------- -------- -------- -------- -------- -------- --------|
* |                                Float64                                |
* |-------- -------- -------- -------- -------- -------- -------- --------|
* |              Uint32               |               Uint32              |
* |-------- -------- -------- -------- -------- -------- -------- --------|
* ```
*
* If little endian (more significant bits last):
*
* ```text
*                         <-- lower      higher -->
* |   f7       f6       f5       f4       f3       f2    e2 | f1 |s|  e1  |
* ```
*
* If big endian (more significant bits first):
*
* ```text
*                         <-- higher      lower -->
* |s| e1    e2 | f1     f2       f3       f4       f5        f6      f7   |
* ```
*
* In which Uint32 can we find the lower order bits? If little endian, the first; if big endian, the second.
*
*
* ## References
*
* -   [Open Group][1]
*
* [1]: http://pubs.opengroup.org/onlinepubs/9629399/chap14.htm
*
* @param {number} x - input value
* @returns {uinteger32} lower order word
*
* @example
* var w = getLowWord( 3.14e201 ); // => 10010011110010110101100010000010
* // returns 2479577218
*/
function getLowWord( x ) {
	FLOAT64_VIEW[ 0 ] = x;
	return UINT32_VIEW[ LOW ];
}


// EXPORTS //

module.exports = getLowWord;

},{"./low.js":98,"@stdlib/array/float64":6,"@stdlib/array/uint32":11}],100:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Return a normal number `y` and exponent `exp` satisfying \\(x = y \cdot 2^\mathrm{exp}\\).
*
* @module @stdlib/number/float64/base/normalize
*
* @example
* var normalize = require( '@stdlib/number/float64/base/normalize' );
* var pow = require( '@stdlib/math/base/special/pow' );
*
* var out = normalize( 3.14e-319 );
* // returns [ 1.4141234400356668e-303, -52 ]
*
* var y = out[ 0 ];
* var exp = out[ 1 ];
*
* var bool = ( y*pow(2.0,exp) === 3.14e-319 );
* // returns true
*
* @example
* var Float64Array = require( '@stdlib/array/float64' );
* var normalize = require( '@stdlib/number/float64/base/normalize' );
*
* var out = new Float64Array( 2 );
*
* var v = normalize( out, 3.14e-319 );
* // returns <Float64Array>[ 1.4141234400356668e-303, -52 ]
*
* var bool = ( v === out );
* // returns true
*/

// MODULES //

var normalize = require( './main.js' );


// EXPORTS //

module.exports = normalize;

},{"./main.js":101}],101:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var fcn = require( './normalize.js' );


// MAIN //

/**
* Returns a normal number `y` and exponent `exp` satisfying \\(x = y \cdot 2^\mathrm{exp}\\).
*
* @param {(Array|TypedArray|Object)} [out] - output array
* @param {number} x - input value
* @returns {(Array|TypedArray|Object)} output array
*
* @example
* var pow = require( '@stdlib/math/base/special/pow' );
*
* var out = normalize( [ 0.0, 0 ], 3.14e-319 );
* // returns [ 1.4141234400356668e-303, -52 ]
*
* var y = out[ 0 ];
* var exp = out[ 1 ];
*
* var bool = ( y*pow(2.0,exp) === 3.14e-319 );
* // returns true
*
* @example
* var Float64Array = require( '@stdlib/array/float64' );
* var pow = require( '@stdlib/math/base/special/pow' );
*
* var out = new Float64Array( 2 );
*
* var v = normalize( out, 3.14e-319 );
* // returns <Float64Array>[ 1.4141234400356668e-303, -52 ]
*
* var bool = ( v === out );
* // returns true
*
* @example
* var out = normalize( [ 0.0, 0 ], 0.0 );
* // returns [ 0.0, 0 ]
*
* @example
* var out = normalize( [ 0.0, 0 ], Infinity );
* // returns [ Infinity, 0 ]
*
* @example
* var out = normalize( [ 0.0, 0 ], -Infinity );
* // returns [ -Infinity, 0 ]
*
* @example
* var out = normalize( [ 0.0, 0 ], NaN );
* // returns [ NaN, 0 ]
*/
function normalize( out, x ) {
	if ( arguments.length === 1 ) {
		return fcn( [ 0.0, 0 ], out );
	}
	return fcn( out, x );
}


// EXPORTS //

module.exports = normalize;

},{"./normalize.js":102}],102:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var FLOAT64_SMALLEST_NORMAL = require( '@stdlib/constants/float64/smallest-normal' );
var isInfinite = require( '@stdlib/math/base/assert/is-infinite' );
var isnan = require( '@stdlib/math/base/assert/is-nan' );
var abs = require( '@stdlib/math/base/special/abs' );


// VARIABLES //

// (1<<52)
var SCALAR = 4503599627370496;


// MAIN //

/**
* Returns a normal number `y` and exponent `exp` satisfying \\(x = y \cdot 2^\mathrm{exp}\\).
*
* @private
* @param {(Array|TypedArray|Object)} out - output array
* @param {number} x - input value
* @returns {(Array|TypedArray|Object)} output array
*
* @example
* var pow = require( '@stdlib/math/base/special/pow' );
*
* var out = normalize( [ 0.0, 0 ], 3.14e-319 );
* // returns [ 1.4141234400356668e-303, -52 ]
*
* var y = out[ 0 ];
* var exp = out[ 1 ];
*
* var bool = ( y*pow(2.0,exp) === 3.14e-319 );
* // returns true
*
* @example
* var out = normalize( [ 0.0, 0 ], 0.0 );
* // returns [ 0.0, 0 ];
*
* @example
* var out = normalize( [ 0.0, 0 ], Infinity );
* // returns [ Infinity, 0 ]
*
* @example
* var out = normalize( [ 0.0, 0 ], -Infinity );
* // returns [ -Infinity, 0 ]
*
* @example
* var out = normalize( [ 0.0, 0 ], NaN );
* // returns [ NaN, 0 ]
*/
function normalize( out, x ) {
	if ( isnan( x ) || isInfinite( x ) ) {
		out[ 0 ] = x;
		out[ 1 ] = 0;
		return out;
	}
	if ( x !== 0.0 && abs( x ) < FLOAT64_SMALLEST_NORMAL ) {
		out[ 0 ] = x * SCALAR;
		out[ 1 ] = -52;
		return out;
	}
	out[ 0 ] = x;
	out[ 1 ] = 0;
	return out;
}


// EXPORTS //

module.exports = normalize;

},{"@stdlib/constants/float64/smallest-normal":54,"@stdlib/math/base/assert/is-infinite":58,"@stdlib/math/base/assert/is-nan":60,"@stdlib/math/base/special/abs":62}],103:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Split a double-precision floating-point number into a higher order word (unsigned 32-bit integer) and a lower order word (unsigned 32-bit integer).
*
* @module @stdlib/number/float64/base/to-words
*
* @example
* var toWords = require( '@stdlib/number/float64/base/to-words' );
*
* var w = toWords( 3.14e201 );
* // returns [ 1774486211, 2479577218 ]
*
* @example
* var Uint32Array = require( '@stdlib/array/uint32' );
* var toWords = require( '@stdlib/number/float64/base/to-words' );
*
* var out = new Uint32Array( 2 );
*
* var w = toWords( out, 3.14e201 );
* // returns <Uint32Array>[ 1774486211, 2479577218 ]
*
* var bool = ( w === out );
* // returns true
*/

// MODULES //

var toWords = require( './main.js' );


// EXPORTS //

module.exports = toWords;

},{"./main.js":105}],104:[function(require,module,exports){
arguments[4][92][0].apply(exports,arguments)
},{"@stdlib/assert/is-little-endian":38,"dup":92}],105:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var fcn = require( './to_words.js' );


// MAIN //

/**
* Splits a double-precision floating-point number into a higher order word (unsigned 32-bit integer) and a lower order word (unsigned 32-bit integer).
*
* @param {(Array|TypedArray|Object)} [out] - output array
* @param {number} x - input value
* @returns {(Array|TypedArray|Object)} output array
*
* @example
* var w = toWords( 3.14e201 );
* // returns [ 1774486211, 2479577218 ]
*
* @example
* var Uint32Array = require( '@stdlib/array/uint32' );
*
* var out = new Uint32Array( 2 );
*
* var w = toWords( out, 3.14e201 );
* // returns <Uint32Array>[ 1774486211, 2479577218 ]
*
* var bool = ( w === out );
* // returns true
*/
function toWords( out, x ) {
	if ( arguments.length === 1 ) {
		return fcn( [ 0, 0 ], out );
	}
	return fcn( out, x );
}


// EXPORTS //

module.exports = toWords;

},{"./to_words.js":106}],106:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var Uint32Array = require( '@stdlib/array/uint32' );
var Float64Array = require( '@stdlib/array/float64' );
var indices = require( './indices.js' );


// VARIABLES //

var FLOAT64_VIEW = new Float64Array( 1 );
var UINT32_VIEW = new Uint32Array( FLOAT64_VIEW.buffer );

var HIGH = indices.HIGH;
var LOW = indices.LOW;


// MAIN //

/**
* Splits a double-precision floating-point number into a higher order word (unsigned 32-bit integer) and a lower order word (unsigned 32-bit integer).
*
* ## Notes
*
* ```text
* float64 (64 bits)
* f := fraction (significand/mantissa) (52 bits)
* e := exponent (11 bits)
* s := sign bit (1 bit)
*
* |-------- -------- -------- -------- -------- -------- -------- --------|
* |                                Float64                                |
* |-------- -------- -------- -------- -------- -------- -------- --------|
* |              Uint32               |               Uint32              |
* |-------- -------- -------- -------- -------- -------- -------- --------|
* ```
*
* If little endian (more significant bits last):
*
* ```text
*                         <-- lower      higher -->
* |   f7       f6       f5       f4       f3       f2    e2 | f1 |s|  e1  |
* ```
*
* If big endian (more significant bits first):
*
* ```text
*                         <-- higher      lower -->
* |s| e1    e2 | f1     f2       f3       f4       f5        f6      f7   |
* ```
*
* In which Uint32 can we find the higher order bits? If little endian, the second; if big endian, the first.
*
*
* ## References
*
* -   [Open Group][1]
*
* [1]: http://pubs.opengroup.org/onlinepubs/9629399/chap14.htm
*
*
* @private
* @param {(Array|TypedArray|Object)} out - output array
* @param {number} x - input value
* @returns {(Array|TypedArray|Object)} output array
*
* @example
* var Uint32Array = require( '@stdlib/array/uint32' );
*
* var out = new Uint32Array( 2 );
*
* var w = toWords( out, 3.14e201 );
* // returns <Uint32Array>[ 1774486211, 2479577218 ]
*
* var bool = ( w === out );
* // returns true
*/
function toWords( out, x ) {
	FLOAT64_VIEW[ 0 ] = x;
	out[ 0 ] = UINT32_VIEW[ HIGH ];
	out[ 1 ] = UINT32_VIEW[ LOW ];
	return out;
}


// EXPORTS //

module.exports = toWords;

},{"./indices.js":104,"@stdlib/array/float64":6,"@stdlib/array/uint32":11}],107:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Return a string value indicating a specification defined classification of an object.
*
* @module @stdlib/utils/native-class
*
* @example
* var nativeClass = require( '@stdlib/utils/native-class' );
*
* var str = nativeClass( 'a' );
* // returns '[object String]'
*
* str = nativeClass( 5 );
* // returns '[object Number]'
*
* function Beep() {
*     return this;
* }
* str = nativeClass( new Beep() );
* // returns '[object Object]'
*/

// MODULES //

var hasToStringTag = require( '@stdlib/assert/has-tostringtag-support' );
var builtin = require( './native_class.js' );
var polyfill = require( './polyfill.js' );


// MAIN //

var nativeClass;
if ( hasToStringTag() ) {
	nativeClass = polyfill;
} else {
	nativeClass = builtin;
}


// EXPORTS //

module.exports = nativeClass;

},{"./native_class.js":108,"./polyfill.js":109,"@stdlib/assert/has-tostringtag-support":24}],108:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var toStr = require( './tostring.js' );


// MAIN //

/**
* Returns a string value indicating a specification defined classification (via the internal property `[[Class]]`) of an object.
*
* @param {*} v - input value
* @returns {string} string value indicating a specification defined classification of the input value
*
* @example
* var str = nativeClass( 'a' );
* // returns '[object String]'
*
* @example
* var str = nativeClass( 5 );
* // returns '[object Number]'
*
* @example
* function Beep() {
*     return this;
* }
* var str = nativeClass( new Beep() );
* // returns '[object Object]'
*/
function nativeClass( v ) {
	return toStr.call( v );
}


// EXPORTS //

module.exports = nativeClass;

},{"./tostring.js":110}],109:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var hasOwnProp = require( '@stdlib/assert/has-own-property' );
var toStringTag = require( './tostringtag.js' );
var toStr = require( './tostring.js' );


// MAIN //

/**
* Returns a string value indicating a specification defined classification of an object in environments supporting `Symbol.toStringTag`.
*
* @param {*} v - input value
* @returns {string} string value indicating a specification defined classification of the input value
*
* @example
* var str = nativeClass( 'a' );
* // returns '[object String]'
*
* @example
* var str = nativeClass( 5 );
* // returns '[object Number]'
*
* @example
* function Beep() {
*     return this;
* }
* var str = nativeClass( new Beep() );
* // returns '[object Object]'
*/
function nativeClass( v ) {
	var isOwn;
	var tag;
	var out;

	if ( v === null || v === void 0 ) {
		return toStr.call( v );
	}
	tag = v[ toStringTag ];
	isOwn = hasOwnProp( v, toStringTag );

	// Attempt to override the `toStringTag` property. For built-ins having a `Symbol.toStringTag` property (e.g., `JSON`, `Math`, etc), the `Symbol.toStringTag` property is read-only (e.g., , so we need to wrap in a `try/catch`.
	try {
		v[ toStringTag ] = void 0;
	} catch ( err ) { // eslint-disable-line no-unused-vars
		return toStr.call( v );
	}
	out = toStr.call( v );

	if ( isOwn ) {
		v[ toStringTag ] = tag;
	} else {
		delete v[ toStringTag ];
	}
	return out;
}


// EXPORTS //

module.exports = nativeClass;

},{"./tostring.js":110,"./tostringtag.js":111,"@stdlib/assert/has-own-property":20}],110:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MAIN //

var toStr = Object.prototype.toString;


// EXPORTS //

module.exports = toStr;

},{}],111:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MAIN //

var toStrTag = ( typeof Symbol === 'function' ) ? Symbol.toStringTag : '';


// EXPORTS //

module.exports = toStrTag;

},{}],112:[function(require,module,exports){
'use strict'

exports.byteLength = byteLength
exports.toByteArray = toByteArray
exports.fromByteArray = fromByteArray

var lookup = []
var revLookup = []
var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array

var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
for (var i = 0, len = code.length; i < len; ++i) {
  lookup[i] = code[i]
  revLookup[code.charCodeAt(i)] = i
}

// Support decoding URL-safe base64 strings, as Node.js does.
// See: https://en.wikipedia.org/wiki/Base64#URL_applications
revLookup['-'.charCodeAt(0)] = 62
revLookup['_'.charCodeAt(0)] = 63

function getLens (b64) {
  var len = b64.length

  if (len % 4 > 0) {
    throw new Error('Invalid string. Length must be a multiple of 4')
  }

  // Trim off extra bytes after placeholder bytes are found
  // See: https://github.com/beatgammit/base64-js/issues/42
  var validLen = b64.indexOf('=')
  if (validLen === -1) validLen = len

  var placeHoldersLen = validLen === len
    ? 0
    : 4 - (validLen % 4)

  return [validLen, placeHoldersLen]
}

// base64 is 4/3 + up to two characters of the original data
function byteLength (b64) {
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function _byteLength (b64, validLen, placeHoldersLen) {
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function toByteArray (b64) {
  var tmp
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]

  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))

  var curByte = 0

  // if there are placeholders, only get up to the last complete 4 chars
  var len = placeHoldersLen > 0
    ? validLen - 4
    : validLen

  var i
  for (i = 0; i < len; i += 4) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 18) |
      (revLookup[b64.charCodeAt(i + 1)] << 12) |
      (revLookup[b64.charCodeAt(i + 2)] << 6) |
      revLookup[b64.charCodeAt(i + 3)]
    arr[curByte++] = (tmp >> 16) & 0xFF
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 2) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 2) |
      (revLookup[b64.charCodeAt(i + 1)] >> 4)
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 1) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 10) |
      (revLookup[b64.charCodeAt(i + 1)] << 4) |
      (revLookup[b64.charCodeAt(i + 2)] >> 2)
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  return arr
}

function tripletToBase64 (num) {
  return lookup[num >> 18 & 0x3F] +
    lookup[num >> 12 & 0x3F] +
    lookup[num >> 6 & 0x3F] +
    lookup[num & 0x3F]
}

function encodeChunk (uint8, start, end) {
  var tmp
  var output = []
  for (var i = start; i < end; i += 3) {
    tmp =
      ((uint8[i] << 16) & 0xFF0000) +
      ((uint8[i + 1] << 8) & 0xFF00) +
      (uint8[i + 2] & 0xFF)
    output.push(tripletToBase64(tmp))
  }
  return output.join('')
}

function fromByteArray (uint8) {
  var tmp
  var len = uint8.length
  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes
  var parts = []
  var maxChunkLength = 16383 // must be multiple of 3

  // go through the array every three bytes, we'll deal with trailing stuff later
  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))
  }

  // pad the end with zeros, but make sure to not forget the extra bytes
  if (extraBytes === 1) {
    tmp = uint8[len - 1]
    parts.push(
      lookup[tmp >> 2] +
      lookup[(tmp << 4) & 0x3F] +
      '=='
    )
  } else if (extraBytes === 2) {
    tmp = (uint8[len - 2] << 8) + uint8[len - 1]
    parts.push(
      lookup[tmp >> 10] +
      lookup[(tmp >> 4) & 0x3F] +
      lookup[(tmp << 2) & 0x3F] +
      '='
    )
  }

  return parts.join('')
}

},{}],113:[function(require,module,exports){

},{}],114:[function(require,module,exports){
arguments[4][113][0].apply(exports,arguments)
},{"dup":113}],115:[function(require,module,exports){
(function (Buffer){(function (){
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
/* eslint-disable no-proto */

'use strict'

var base64 = require('base64-js')
var ieee754 = require('ieee754')

exports.Buffer = Buffer
exports.SlowBuffer = SlowBuffer
exports.INSPECT_MAX_BYTES = 50

var K_MAX_LENGTH = 0x7fffffff
exports.kMaxLength = K_MAX_LENGTH

/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Print warning and recommend using `buffer` v4.x which has an Object
 *               implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * We report that the browser does not support typed arrays if the are not subclassable
 * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`
 * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support
 * for __proto__ and has a buggy typed array implementation.
 */
Buffer.TYPED_ARRAY_SUPPORT = typedArraySupport()

if (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&
    typeof console.error === 'function') {
  console.error(
    'This browser lacks typed array (Uint8Array) support which is required by ' +
    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'
  )
}

function typedArraySupport () {
  // Can typed array instances can be augmented?
  try {
    var arr = new Uint8Array(1)
    arr.__proto__ = { __proto__: Uint8Array.prototype, foo: function () { return 42 } }
    return arr.foo() === 42
  } catch (e) {
    return false
  }
}

Object.defineProperty(Buffer.prototype, 'parent', {
  enumerable: true,
  get: function () {
    if (!Buffer.isBuffer(this)) return undefined
    return this.buffer
  }
})

Object.defineProperty(Buffer.prototype, 'offset', {
  enumerable: true,
  get: function () {
    if (!Buffer.isBuffer(this)) return undefined
    return this.byteOffset
  }
})

function createBuffer (length) {
  if (length > K_MAX_LENGTH) {
    throw new RangeError('The value "' + length + '" is invalid for option "size"')
  }
  // Return an augmented `Uint8Array` instance
  var buf = new Uint8Array(length)
  buf.__proto__ = Buffer.prototype
  return buf
}

/**
 * The Buffer constructor returns instances of `Uint8Array` that have their
 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
 * returns a single octet.
 *
 * The `Uint8Array` prototype remains unmodified.
 */

function Buffer (arg, encodingOrOffset, length) {
  // Common case.
  if (typeof arg === 'number') {
    if (typeof encodingOrOffset === 'string') {
      throw new TypeError(
        'The "string" argument must be of type string. Received type number'
      )
    }
    return allocUnsafe(arg)
  }
  return from(arg, encodingOrOffset, length)
}

// Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
if (typeof Symbol !== 'undefined' && Symbol.species != null &&
    Buffer[Symbol.species] === Buffer) {
  Object.defineProperty(Buffer, Symbol.species, {
    value: null,
    configurable: true,
    enumerable: false,
    writable: false
  })
}

Buffer.poolSize = 8192 // not used by this implementation

function from (value, encodingOrOffset, length) {
  if (typeof value === 'string') {
    return fromString(value, encodingOrOffset)
  }

  if (ArrayBuffer.isView(value)) {
    return fromArrayLike(value)
  }

  if (value == null) {
    throw TypeError(
      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +
      'or Array-like Object. Received type ' + (typeof value)
    )
  }

  if (isInstance(value, ArrayBuffer) ||
      (value && isInstance(value.buffer, ArrayBuffer))) {
    return fromArrayBuffer(value, encodingOrOffset, length)
  }

  if (typeof value === 'number') {
    throw new TypeError(
      'The "value" argument must not be of type number. Received type number'
    )
  }

  var valueOf = value.valueOf && value.valueOf()
  if (valueOf != null && valueOf !== value) {
    return Buffer.from(valueOf, encodingOrOffset, length)
  }

  var b = fromObject(value)
  if (b) return b

  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&
      typeof value[Symbol.toPrimitive] === 'function') {
    return Buffer.from(
      value[Symbol.toPrimitive]('string'), encodingOrOffset, length
    )
  }

  throw new TypeError(
    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +
    'or Array-like Object. Received type ' + (typeof value)
  )
}

/**
 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
 * if value is a number.
 * Buffer.from(str[, encoding])
 * Buffer.from(array)
 * Buffer.from(buffer)
 * Buffer.from(arrayBuffer[, byteOffset[, length]])
 **/
Buffer.from = function (value, encodingOrOffset, length) {
  return from(value, encodingOrOffset, length)
}

// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:
// https://github.com/feross/buffer/pull/148
Buffer.prototype.__proto__ = Uint8Array.prototype
Buffer.__proto__ = Uint8Array

function assertSize (size) {
  if (typeof size !== 'number') {
    throw new TypeError('"size" argument must be of type number')
  } else if (size < 0) {
    throw new RangeError('The value "' + size + '" is invalid for option "size"')
  }
}

function alloc (size, fill, encoding) {
  assertSize(size)
  if (size <= 0) {
    return createBuffer(size)
  }
  if (fill !== undefined) {
    // Only pay attention to encoding if it's a string. This
    // prevents accidentally sending in a number that would
    // be interpretted as a start offset.
    return typeof encoding === 'string'
      ? createBuffer(size).fill(fill, encoding)
      : createBuffer(size).fill(fill)
  }
  return createBuffer(size)
}

/**
 * Creates a new filled Buffer instance.
 * alloc(size[, fill[, encoding]])
 **/
Buffer.alloc = function (size, fill, encoding) {
  return alloc(size, fill, encoding)
}

function allocUnsafe (size) {
  assertSize(size)
  return createBuffer(size < 0 ? 0 : checked(size) | 0)
}

/**
 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
 * */
Buffer.allocUnsafe = function (size) {
  return allocUnsafe(size)
}
/**
 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
 */
Buffer.allocUnsafeSlow = function (size) {
  return allocUnsafe(size)
}

function fromString (string, encoding) {
  if (typeof encoding !== 'string' || encoding === '') {
    encoding = 'utf8'
  }

  if (!Buffer.isEncoding(encoding)) {
    throw new TypeError('Unknown encoding: ' + encoding)
  }

  var length = byteLength(string, encoding) | 0
  var buf = createBuffer(length)

  var actual = buf.write(string, encoding)

  if (actual !== length) {
    // Writing a hex string, for example, that contains invalid characters will
    // cause everything after the first invalid character to be ignored. (e.g.
    // 'abxxcd' will be treated as 'ab')
    buf = buf.slice(0, actual)
  }

  return buf
}

function fromArrayLike (array) {
  var length = array.length < 0 ? 0 : checked(array.length) | 0
  var buf = createBuffer(length)
  for (var i = 0; i < length; i += 1) {
    buf[i] = array[i] & 255
  }
  return buf
}

function fromArrayBuffer (array, byteOffset, length) {
  if (byteOffset < 0 || array.byteLength < byteOffset) {
    throw new RangeError('"offset" is outside of buffer bounds')
  }

  if (array.byteLength < byteOffset + (length || 0)) {
    throw new RangeError('"length" is outside of buffer bounds')
  }

  var buf
  if (byteOffset === undefined && length === undefined) {
    buf = new Uint8Array(array)
  } else if (length === undefined) {
    buf = new Uint8Array(array, byteOffset)
  } else {
    buf = new Uint8Array(array, byteOffset, length)
  }

  // Return an augmented `Uint8Array` instance
  buf.__proto__ = Buffer.prototype
  return buf
}

function fromObject (obj) {
  if (Buffer.isBuffer(obj)) {
    var len = checked(obj.length) | 0
    var buf = createBuffer(len)

    if (buf.length === 0) {
      return buf
    }

    obj.copy(buf, 0, 0, len)
    return buf
  }

  if (obj.length !== undefined) {
    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {
      return createBuffer(0)
    }
    return fromArrayLike(obj)
  }

  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {
    return fromArrayLike(obj.data)
  }
}

function checked (length) {
  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when
  // length is NaN (which is otherwise coerced to zero.)
  if (length >= K_MAX_LENGTH) {
    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')
  }
  return length | 0
}

function SlowBuffer (length) {
  if (+length != length) { // eslint-disable-line eqeqeq
    length = 0
  }
  return Buffer.alloc(+length)
}

Buffer.isBuffer = function isBuffer (b) {
  return b != null && b._isBuffer === true &&
    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false
}

Buffer.compare = function compare (a, b) {
  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)
  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)
  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
    throw new TypeError(
      'The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array'
    )
  }

  if (a === b) return 0

  var x = a.length
  var y = b.length

  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
    if (a[i] !== b[i]) {
      x = a[i]
      y = b[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

Buffer.isEncoding = function isEncoding (encoding) {
  switch (String(encoding).toLowerCase()) {
    case 'hex':
    case 'utf8':
    case 'utf-8':
    case 'ascii':
    case 'latin1':
    case 'binary':
    case 'base64':
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      return true
    default:
      return false
  }
}

Buffer.concat = function concat (list, length) {
  if (!Array.isArray(list)) {
    throw new TypeError('"list" argument must be an Array of Buffers')
  }

  if (list.length === 0) {
    return Buffer.alloc(0)
  }

  var i
  if (length === undefined) {
    length = 0
    for (i = 0; i < list.length; ++i) {
      length += list[i].length
    }
  }

  var buffer = Buffer.allocUnsafe(length)
  var pos = 0
  for (i = 0; i < list.length; ++i) {
    var buf = list[i]
    if (isInstance(buf, Uint8Array)) {
      buf = Buffer.from(buf)
    }
    if (!Buffer.isBuffer(buf)) {
      throw new TypeError('"list" argument must be an Array of Buffers')
    }
    buf.copy(buffer, pos)
    pos += buf.length
  }
  return buffer
}

function byteLength (string, encoding) {
  if (Buffer.isBuffer(string)) {
    return string.length
  }
  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {
    return string.byteLength
  }
  if (typeof string !== 'string') {
    throw new TypeError(
      'The "string" argument must be one of type string, Buffer, or ArrayBuffer. ' +
      'Received type ' + typeof string
    )
  }

  var len = string.length
  var mustMatch = (arguments.length > 2 && arguments[2] === true)
  if (!mustMatch && len === 0) return 0

  // Use a for loop to avoid recursion
  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'ascii':
      case 'latin1':
      case 'binary':
        return len
      case 'utf8':
      case 'utf-8':
        return utf8ToBytes(string).length
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return len * 2
      case 'hex':
        return len >>> 1
      case 'base64':
        return base64ToBytes(string).length
      default:
        if (loweredCase) {
          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8
        }
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}
Buffer.byteLength = byteLength

function slowToString (encoding, start, end) {
  var loweredCase = false

  // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
  // property of a typed array.

  // This behaves neither like String nor Uint8Array in that we set start/end
  // to their upper/lower bounds if the value passed is out of range.
  // undefined is handled specially as per ECMA-262 6th Edition,
  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
  if (start === undefined || start < 0) {
    start = 0
  }
  // Return early if start > this.length. Done here to prevent potential uint32
  // coercion fail below.
  if (start > this.length) {
    return ''
  }

  if (end === undefined || end > this.length) {
    end = this.length
  }

  if (end <= 0) {
    return ''
  }

  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
  end >>>= 0
  start >>>= 0

  if (end <= start) {
    return ''
  }

  if (!encoding) encoding = 'utf8'

  while (true) {
    switch (encoding) {
      case 'hex':
        return hexSlice(this, start, end)

      case 'utf8':
      case 'utf-8':
        return utf8Slice(this, start, end)

      case 'ascii':
        return asciiSlice(this, start, end)

      case 'latin1':
      case 'binary':
        return latin1Slice(this, start, end)

      case 'base64':
        return base64Slice(this, start, end)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return utf16leSlice(this, start, end)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = (encoding + '').toLowerCase()
        loweredCase = true
    }
  }
}

// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)
// to detect a Buffer instance. It's not possible to use `instanceof Buffer`
// reliably in a browserify context because there could be multiple different
// copies of the 'buffer' package in use. This method works even for Buffer
// instances that were created from another copy of the `buffer` package.
// See: https://github.com/feross/buffer/issues/154
Buffer.prototype._isBuffer = true

function swap (b, n, m) {
  var i = b[n]
  b[n] = b[m]
  b[m] = i
}

Buffer.prototype.swap16 = function swap16 () {
  var len = this.length
  if (len % 2 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 16-bits')
  }
  for (var i = 0; i < len; i += 2) {
    swap(this, i, i + 1)
  }
  return this
}

Buffer.prototype.swap32 = function swap32 () {
  var len = this.length
  if (len % 4 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 32-bits')
  }
  for (var i = 0; i < len; i += 4) {
    swap(this, i, i + 3)
    swap(this, i + 1, i + 2)
  }
  return this
}

Buffer.prototype.swap64 = function swap64 () {
  var len = this.length
  if (len % 8 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 64-bits')
  }
  for (var i = 0; i < len; i += 8) {
    swap(this, i, i + 7)
    swap(this, i + 1, i + 6)
    swap(this, i + 2, i + 5)
    swap(this, i + 3, i + 4)
  }
  return this
}

Buffer.prototype.toString = function toString () {
  var length = this.length
  if (length === 0) return ''
  if (arguments.length === 0) return utf8Slice(this, 0, length)
  return slowToString.apply(this, arguments)
}

Buffer.prototype.toLocaleString = Buffer.prototype.toString

Buffer.prototype.equals = function equals (b) {
  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
  if (this === b) return true
  return Buffer.compare(this, b) === 0
}

Buffer.prototype.inspect = function inspect () {
  var str = ''
  var max = exports.INSPECT_MAX_BYTES
  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()
  if (this.length > max) str += ' ... '
  return '<Buffer ' + str + '>'
}

Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {
  if (isInstance(target, Uint8Array)) {
    target = Buffer.from(target, target.offset, target.byteLength)
  }
  if (!Buffer.isBuffer(target)) {
    throw new TypeError(
      'The "target" argument must be one of type Buffer or Uint8Array. ' +
      'Received type ' + (typeof target)
    )
  }

  if (start === undefined) {
    start = 0
  }
  if (end === undefined) {
    end = target ? target.length : 0
  }
  if (thisStart === undefined) {
    thisStart = 0
  }
  if (thisEnd === undefined) {
    thisEnd = this.length
  }

  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
    throw new RangeError('out of range index')
  }

  if (thisStart >= thisEnd && start >= end) {
    return 0
  }
  if (thisStart >= thisEnd) {
    return -1
  }
  if (start >= end) {
    return 1
  }

  start >>>= 0
  end >>>= 0
  thisStart >>>= 0
  thisEnd >>>= 0

  if (this === target) return 0

  var x = thisEnd - thisStart
  var y = end - start
  var len = Math.min(x, y)

  var thisCopy = this.slice(thisStart, thisEnd)
  var targetCopy = target.slice(start, end)

  for (var i = 0; i < len; ++i) {
    if (thisCopy[i] !== targetCopy[i]) {
      x = thisCopy[i]
      y = targetCopy[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
//
// Arguments:
// - buffer - a Buffer to search
// - val - a string, Buffer, or number
// - byteOffset - an index into `buffer`; will be clamped to an int32
// - encoding - an optional encoding, relevant is val is a string
// - dir - true for indexOf, false for lastIndexOf
function bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {
  // Empty buffer means no match
  if (buffer.length === 0) return -1

  // Normalize byteOffset
  if (typeof byteOffset === 'string') {
    encoding = byteOffset
    byteOffset = 0
  } else if (byteOffset > 0x7fffffff) {
    byteOffset = 0x7fffffff
  } else if (byteOffset < -0x80000000) {
    byteOffset = -0x80000000
  }
  byteOffset = +byteOffset // Coerce to Number.
  if (numberIsNaN(byteOffset)) {
    // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
    byteOffset = dir ? 0 : (buffer.length - 1)
  }

  // Normalize byteOffset: negative offsets start from the end of the buffer
  if (byteOffset < 0) byteOffset = buffer.length + byteOffset
  if (byteOffset >= buffer.length) {
    if (dir) return -1
    else byteOffset = buffer.length - 1
  } else if (byteOffset < 0) {
    if (dir) byteOffset = 0
    else return -1
  }

  // Normalize val
  if (typeof val === 'string') {
    val = Buffer.from(val, encoding)
  }

  // Finally, search either indexOf (if dir is true) or lastIndexOf
  if (Buffer.isBuffer(val)) {
    // Special case: looking for empty string/buffer always fails
    if (val.length === 0) {
      return -1
    }
    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)
  } else if (typeof val === 'number') {
    val = val & 0xFF // Search for a byte value [0-255]
    if (typeof Uint8Array.prototype.indexOf === 'function') {
      if (dir) {
        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)
      } else {
        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)
      }
    }
    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)
  }

  throw new TypeError('val must be string, number or Buffer')
}

function arrayIndexOf (arr, val, byteOffset, encoding, dir) {
  var indexSize = 1
  var arrLength = arr.length
  var valLength = val.length

  if (encoding !== undefined) {
    encoding = String(encoding).toLowerCase()
    if (encoding === 'ucs2' || encoding === 'ucs-2' ||
        encoding === 'utf16le' || encoding === 'utf-16le') {
      if (arr.length < 2 || val.length < 2) {
        return -1
      }
      indexSize = 2
      arrLength /= 2
      valLength /= 2
      byteOffset /= 2
    }
  }

  function read (buf, i) {
    if (indexSize === 1) {
      return buf[i]
    } else {
      return buf.readUInt16BE(i * indexSize)
    }
  }

  var i
  if (dir) {
    var foundIndex = -1
    for (i = byteOffset; i < arrLength; i++) {
      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
        if (foundIndex === -1) foundIndex = i
        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize
      } else {
        if (foundIndex !== -1) i -= i - foundIndex
        foundIndex = -1
      }
    }
  } else {
    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength
    for (i = byteOffset; i >= 0; i--) {
      var found = true
      for (var j = 0; j < valLength; j++) {
        if (read(arr, i + j) !== read(val, j)) {
          found = false
          break
        }
      }
      if (found) return i
    }
  }

  return -1
}

Buffer.prototype.includes = function includes (val, byteOffset, encoding) {
  return this.indexOf(val, byteOffset, encoding) !== -1
}

Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)
}

Buffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)
}

function hexWrite (buf, string, offset, length) {
  offset = Number(offset) || 0
  var remaining = buf.length - offset
  if (!length) {
    length = remaining
  } else {
    length = Number(length)
    if (length > remaining) {
      length = remaining
    }
  }

  var strLen = string.length

  if (length > strLen / 2) {
    length = strLen / 2
  }
  for (var i = 0; i < length; ++i) {
    var parsed = parseInt(string.substr(i * 2, 2), 16)
    if (numberIsNaN(parsed)) return i
    buf[offset + i] = parsed
  }
  return i
}

function utf8Write (buf, string, offset, length) {
  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
}

function asciiWrite (buf, string, offset, length) {
  return blitBuffer(asciiToBytes(string), buf, offset, length)
}

function latin1Write (buf, string, offset, length) {
  return asciiWrite(buf, string, offset, length)
}

function base64Write (buf, string, offset, length) {
  return blitBuffer(base64ToBytes(string), buf, offset, length)
}

function ucs2Write (buf, string, offset, length) {
  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
}

Buffer.prototype.write = function write (string, offset, length, encoding) {
  // Buffer#write(string)
  if (offset === undefined) {
    encoding = 'utf8'
    length = this.length
    offset = 0
  // Buffer#write(string, encoding)
  } else if (length === undefined && typeof offset === 'string') {
    encoding = offset
    length = this.length
    offset = 0
  // Buffer#write(string, offset[, length][, encoding])
  } else if (isFinite(offset)) {
    offset = offset >>> 0
    if (isFinite(length)) {
      length = length >>> 0
      if (encoding === undefined) encoding = 'utf8'
    } else {
      encoding = length
      length = undefined
    }
  } else {
    throw new Error(
      'Buffer.write(string, encoding, offset[, length]) is no longer supported'
    )
  }

  var remaining = this.length - offset
  if (length === undefined || length > remaining) length = remaining

  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
    throw new RangeError('Attempt to write outside buffer bounds')
  }

  if (!encoding) encoding = 'utf8'

  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'hex':
        return hexWrite(this, string, offset, length)

      case 'utf8':
      case 'utf-8':
        return utf8Write(this, string, offset, length)

      case 'ascii':
        return asciiWrite(this, string, offset, length)

      case 'latin1':
      case 'binary':
        return latin1Write(this, string, offset, length)

      case 'base64':
        // Warning: maxLength not taken into account in base64Write
        return base64Write(this, string, offset, length)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return ucs2Write(this, string, offset, length)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}

Buffer.prototype.toJSON = function toJSON () {
  return {
    type: 'Buffer',
    data: Array.prototype.slice.call(this._arr || this, 0)
  }
}

function base64Slice (buf, start, end) {
  if (start === 0 && end === buf.length) {
    return base64.fromByteArray(buf)
  } else {
    return base64.fromByteArray(buf.slice(start, end))
  }
}

function utf8Slice (buf, start, end) {
  end = Math.min(buf.length, end)
  var res = []

  var i = start
  while (i < end) {
    var firstByte = buf[i]
    var codePoint = null
    var bytesPerSequence = (firstByte > 0xEF) ? 4
      : (firstByte > 0xDF) ? 3
        : (firstByte > 0xBF) ? 2
          : 1

    if (i + bytesPerSequence <= end) {
      var secondByte, thirdByte, fourthByte, tempCodePoint

      switch (bytesPerSequence) {
        case 1:
          if (firstByte < 0x80) {
            codePoint = firstByte
          }
          break
        case 2:
          secondByte = buf[i + 1]
          if ((secondByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
            if (tempCodePoint > 0x7F) {
              codePoint = tempCodePoint
            }
          }
          break
        case 3:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
              codePoint = tempCodePoint
            }
          }
          break
        case 4:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          fourthByte = buf[i + 3]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
              codePoint = tempCodePoint
            }
          }
      }
    }

    if (codePoint === null) {
      // we did not generate a valid codePoint so insert a
      // replacement char (U+FFFD) and advance only 1 byte
      codePoint = 0xFFFD
      bytesPerSequence = 1
    } else if (codePoint > 0xFFFF) {
      // encode to utf16 (surrogate pair dance)
      codePoint -= 0x10000
      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
      codePoint = 0xDC00 | codePoint & 0x3FF
    }

    res.push(codePoint)
    i += bytesPerSequence
  }

  return decodeCodePointsArray(res)
}

// Based on http://stackoverflow.com/a/22747272/680742, the browser with
// the lowest limit is Chrome, with 0x10000 args.
// We go 1 magnitude less, for safety
var MAX_ARGUMENTS_LENGTH = 0x1000

function decodeCodePointsArray (codePoints) {
  var len = codePoints.length
  if (len <= MAX_ARGUMENTS_LENGTH) {
    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
  }

  // Decode in chunks to avoid "call stack size exceeded".
  var res = ''
  var i = 0
  while (i < len) {
    res += String.fromCharCode.apply(
      String,
      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
    )
  }
  return res
}

function asciiSlice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i] & 0x7F)
  }
  return ret
}

function latin1Slice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i])
  }
  return ret
}

function hexSlice (buf, start, end) {
  var len = buf.length

  if (!start || start < 0) start = 0
  if (!end || end < 0 || end > len) end = len

  var out = ''
  for (var i = start; i < end; ++i) {
    out += toHex(buf[i])
  }
  return out
}

function utf16leSlice (buf, start, end) {
  var bytes = buf.slice(start, end)
  var res = ''
  for (var i = 0; i < bytes.length; i += 2) {
    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))
  }
  return res
}

Buffer.prototype.slice = function slice (start, end) {
  var len = this.length
  start = ~~start
  end = end === undefined ? len : ~~end

  if (start < 0) {
    start += len
    if (start < 0) start = 0
  } else if (start > len) {
    start = len
  }

  if (end < 0) {
    end += len
    if (end < 0) end = 0
  } else if (end > len) {
    end = len
  }

  if (end < start) end = start

  var newBuf = this.subarray(start, end)
  // Return an augmented `Uint8Array` instance
  newBuf.__proto__ = Buffer.prototype
  return newBuf
}

/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */
function checkOffset (offset, ext, length) {
  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
}

Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }

  return val
}

Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    checkOffset(offset, byteLength, this.length)
  }

  var val = this[offset + --byteLength]
  var mul = 1
  while (byteLength > 0 && (mul *= 0x100)) {
    val += this[offset + --byteLength] * mul
  }

  return val
}

Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 1, this.length)
  return this[offset]
}

Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  return this[offset] | (this[offset + 1] << 8)
}

Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  return (this[offset] << 8) | this[offset + 1]
}

Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return ((this[offset]) |
      (this[offset + 1] << 8) |
      (this[offset + 2] << 16)) +
      (this[offset + 3] * 0x1000000)
}

Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] * 0x1000000) +
    ((this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    this[offset + 3])
}

Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var i = byteLength
  var mul = 1
  var val = this[offset + --i]
  while (i > 0 && (mul *= 0x100)) {
    val += this[offset + --i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 1, this.length)
  if (!(this[offset] & 0x80)) return (this[offset])
  return ((0xff - this[offset] + 1) * -1)
}

Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset] | (this[offset + 1] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset + 1] | (this[offset] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset]) |
    (this[offset + 1] << 8) |
    (this[offset + 2] << 16) |
    (this[offset + 3] << 24)
}

Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] << 24) |
    (this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    (this[offset + 3])
}

Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, true, 23, 4)
}

Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, false, 23, 4)
}

Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, true, 52, 8)
}

Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, false, 52, 8)
}

function checkInt (buf, value, offset, ext, max, min) {
  if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance')
  if (value > max || value < min) throw new RangeError('"value" argument is out of bounds')
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
}

Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var mul = 1
  var i = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var i = byteLength - 1
  var mul = 1
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  return offset + 2
}

Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  this[offset] = (value >>> 8)
  this[offset + 1] = (value & 0xff)
  return offset + 2
}

Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  this[offset + 3] = (value >>> 24)
  this[offset + 2] = (value >>> 16)
  this[offset + 1] = (value >>> 8)
  this[offset] = (value & 0xff)
  return offset + 4
}

Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  this[offset] = (value >>> 24)
  this[offset + 1] = (value >>> 16)
  this[offset + 2] = (value >>> 8)
  this[offset + 3] = (value & 0xff)
  return offset + 4
}

Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    var limit = Math.pow(2, (8 * byteLength) - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = 0
  var mul = 1
  var sub = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    var limit = Math.pow(2, (8 * byteLength) - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = byteLength - 1
  var mul = 1
  var sub = 0
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
  if (value < 0) value = 0xff + value + 1
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  return offset + 2
}

Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  this[offset] = (value >>> 8)
  this[offset + 1] = (value & 0xff)
  return offset + 2
}

Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  this[offset + 2] = (value >>> 16)
  this[offset + 3] = (value >>> 24)
  return offset + 4
}

Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (value < 0) value = 0xffffffff + value + 1
  this[offset] = (value >>> 24)
  this[offset + 1] = (value >>> 16)
  this[offset + 2] = (value >>> 8)
  this[offset + 3] = (value & 0xff)
  return offset + 4
}

function checkIEEE754 (buf, value, offset, ext, max, min) {
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
  if (offset < 0) throw new RangeError('Index out of range')
}

function writeFloat (buf, value, offset, littleEndian, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
  }
  ieee754.write(buf, value, offset, littleEndian, 23, 4)
  return offset + 4
}

Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
  return writeFloat(this, value, offset, true, noAssert)
}

Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
  return writeFloat(this, value, offset, false, noAssert)
}

function writeDouble (buf, value, offset, littleEndian, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
  }
  ieee754.write(buf, value, offset, littleEndian, 52, 8)
  return offset + 8
}

Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
  return writeDouble(this, value, offset, true, noAssert)
}

Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
  return writeDouble(this, value, offset, false, noAssert)
}

// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Buffer.prototype.copy = function copy (target, targetStart, start, end) {
  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')
  if (!start) start = 0
  if (!end && end !== 0) end = this.length
  if (targetStart >= target.length) targetStart = target.length
  if (!targetStart) targetStart = 0
  if (end > 0 && end < start) end = start

  // Copy 0 bytes; we're done
  if (end === start) return 0
  if (target.length === 0 || this.length === 0) return 0

  // Fatal error conditions
  if (targetStart < 0) {
    throw new RangeError('targetStart out of bounds')
  }
  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')
  if (end < 0) throw new RangeError('sourceEnd out of bounds')

  // Are we oob?
  if (end > this.length) end = this.length
  if (target.length - targetStart < end - start) {
    end = target.length - targetStart + start
  }

  var len = end - start

  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {
    // Use built-in when available, missing from IE11
    this.copyWithin(targetStart, start, end)
  } else if (this === target && start < targetStart && targetStart < end) {
    // descending copy from end
    for (var i = len - 1; i >= 0; --i) {
      target[i + targetStart] = this[i + start]
    }
  } else {
    Uint8Array.prototype.set.call(
      target,
      this.subarray(start, end),
      targetStart
    )
  }

  return len
}

// Usage:
//    buffer.fill(number[, offset[, end]])
//    buffer.fill(buffer[, offset[, end]])
//    buffer.fill(string[, offset[, end]][, encoding])
Buffer.prototype.fill = function fill (val, start, end, encoding) {
  // Handle string cases:
  if (typeof val === 'string') {
    if (typeof start === 'string') {
      encoding = start
      start = 0
      end = this.length
    } else if (typeof end === 'string') {
      encoding = end
      end = this.length
    }
    if (encoding !== undefined && typeof encoding !== 'string') {
      throw new TypeError('encoding must be a string')
    }
    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
      throw new TypeError('Unknown encoding: ' + encoding)
    }
    if (val.length === 1) {
      var code = val.charCodeAt(0)
      if ((encoding === 'utf8' && code < 128) ||
          encoding === 'latin1') {
        // Fast path: If `val` fits into a single byte, use that numeric value.
        val = code
      }
    }
  } else if (typeof val === 'number') {
    val = val & 255
  }

  // Invalid ranges are not set to a default, so can range check early.
  if (start < 0 || this.length < start || this.length < end) {
    throw new RangeError('Out of range index')
  }

  if (end <= start) {
    return this
  }

  start = start >>> 0
  end = end === undefined ? this.length : end >>> 0

  if (!val) val = 0

  var i
  if (typeof val === 'number') {
    for (i = start; i < end; ++i) {
      this[i] = val
    }
  } else {
    var bytes = Buffer.isBuffer(val)
      ? val
      : Buffer.from(val, encoding)
    var len = bytes.length
    if (len === 0) {
      throw new TypeError('The value "' + val +
        '" is invalid for argument "value"')
    }
    for (i = 0; i < end - start; ++i) {
      this[i + start] = bytes[i % len]
    }
  }

  return this
}

// HELPER FUNCTIONS
// ================

var INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g

function base64clean (str) {
  // Node takes equal signs as end of the Base64 encoding
  str = str.split('=')[0]
  // Node strips out invalid characters like \n and \t from the string, base64-js does not
  str = str.trim().replace(INVALID_BASE64_RE, '')
  // Node converts strings with length < 2 to ''
  if (str.length < 2) return ''
  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
  while (str.length % 4 !== 0) {
    str = str + '='
  }
  return str
}

function toHex (n) {
  if (n < 16) return '0' + n.toString(16)
  return n.toString(16)
}

function utf8ToBytes (string, units) {
  units = units || Infinity
  var codePoint
  var length = string.length
  var leadSurrogate = null
  var bytes = []

  for (var i = 0; i < length; ++i) {
    codePoint = string.charCodeAt(i)

    // is surrogate component
    if (codePoint > 0xD7FF && codePoint < 0xE000) {
      // last char was a lead
      if (!leadSurrogate) {
        // no lead yet
        if (codePoint > 0xDBFF) {
          // unexpected trail
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        } else if (i + 1 === length) {
          // unpaired lead
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        }

        // valid lead
        leadSurrogate = codePoint

        continue
      }

      // 2 leads in a row
      if (codePoint < 0xDC00) {
        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
        leadSurrogate = codePoint
        continue
      }

      // valid surrogate pair
      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
    } else if (leadSurrogate) {
      // valid bmp char, but last char was a lead
      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
    }

    leadSurrogate = null

    // encode utf8
    if (codePoint < 0x80) {
      if ((units -= 1) < 0) break
      bytes.push(codePoint)
    } else if (codePoint < 0x800) {
      if ((units -= 2) < 0) break
      bytes.push(
        codePoint >> 0x6 | 0xC0,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x10000) {
      if ((units -= 3) < 0) break
      bytes.push(
        codePoint >> 0xC | 0xE0,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x110000) {
      if ((units -= 4) < 0) break
      bytes.push(
        codePoint >> 0x12 | 0xF0,
        codePoint >> 0xC & 0x3F | 0x80,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else {
      throw new Error('Invalid code point')
    }
  }

  return bytes
}

function asciiToBytes (str) {
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    // Node's code seems to be doing this and not & 0x7F..
    byteArray.push(str.charCodeAt(i) & 0xFF)
  }
  return byteArray
}

function utf16leToBytes (str, units) {
  var c, hi, lo
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    if ((units -= 2) < 0) break

    c = str.charCodeAt(i)
    hi = c >> 8
    lo = c % 256
    byteArray.push(lo)
    byteArray.push(hi)
  }

  return byteArray
}

function base64ToBytes (str) {
  return base64.toByteArray(base64clean(str))
}

function blitBuffer (src, dst, offset, length) {
  for (var i = 0; i < length; ++i) {
    if ((i + offset >= dst.length) || (i >= src.length)) break
    dst[i + offset] = src[i]
  }
  return i
}

// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass
// the `instanceof` check but they should be treated as of that type.
// See: https://github.com/feross/buffer/issues/166
function isInstance (obj, type) {
  return obj instanceof type ||
    (obj != null && obj.constructor != null && obj.constructor.name != null &&
      obj.constructor.name === type.name)
}
function numberIsNaN (obj) {
  // For IE11 support
  return obj !== obj // eslint-disable-line no-self-compare
}

}).call(this)}).call(this,require("buffer").Buffer)
},{"base64-js":112,"buffer":115,"ieee754":203}],116:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

'use strict';

var R = typeof Reflect === 'object' ? Reflect : null
var ReflectApply = R && typeof R.apply === 'function'
  ? R.apply
  : function ReflectApply(target, receiver, args) {
    return Function.prototype.apply.call(target, receiver, args);
  }

var ReflectOwnKeys
if (R && typeof R.ownKeys === 'function') {
  ReflectOwnKeys = R.ownKeys
} else if (Object.getOwnPropertySymbols) {
  ReflectOwnKeys = function ReflectOwnKeys(target) {
    return Object.getOwnPropertyNames(target)
      .concat(Object.getOwnPropertySymbols(target));
  };
} else {
  ReflectOwnKeys = function ReflectOwnKeys(target) {
    return Object.getOwnPropertyNames(target);
  };
}

function ProcessEmitWarning(warning) {
  if (console && console.warn) console.warn(warning);
}

var NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {
  return value !== value;
}

function EventEmitter() {
  EventEmitter.init.call(this);
}
module.exports = EventEmitter;
module.exports.once = once;

// Backwards-compat with node 0.10.x
EventEmitter.EventEmitter = EventEmitter;

EventEmitter.prototype._events = undefined;
EventEmitter.prototype._eventsCount = 0;
EventEmitter.prototype._maxListeners = undefined;

// By default EventEmitters will print a warning if more than 10 listeners are
// added to it. This is a useful default which helps finding memory leaks.
var defaultMaxListeners = 10;

function checkListener(listener) {
  if (typeof listener !== 'function') {
    throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof listener);
  }
}

Object.defineProperty(EventEmitter, 'defaultMaxListeners', {
  enumerable: true,
  get: function() {
    return defaultMaxListeners;
  },
  set: function(arg) {
    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {
      throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + arg + '.');
    }
    defaultMaxListeners = arg;
  }
});

EventEmitter.init = function() {

  if (this._events === undefined ||
      this._events === Object.getPrototypeOf(this)._events) {
    this._events = Object.create(null);
    this._eventsCount = 0;
  }

  this._maxListeners = this._maxListeners || undefined;
};

// Obviously not all Emitters should be limited to 10. This function allows
// that to be increased. Set to zero for unlimited.
EventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {
  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {
    throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + n + '.');
  }
  this._maxListeners = n;
  return this;
};

function _getMaxListeners(that) {
  if (that._maxListeners === undefined)
    return EventEmitter.defaultMaxListeners;
  return that._maxListeners;
}

EventEmitter.prototype.getMaxListeners = function getMaxListeners() {
  return _getMaxListeners(this);
};

EventEmitter.prototype.emit = function emit(type) {
  var args = [];
  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);
  var doError = (type === 'error');

  var events = this._events;
  if (events !== undefined)
    doError = (doError && events.error === undefined);
  else if (!doError)
    return false;

  // If there is no 'error' event listener then throw.
  if (doError) {
    var er;
    if (args.length > 0)
      er = args[0];
    if (er instanceof Error) {
      // Note: The comments on the `throw` lines are intentional, they show
      // up in Node's output if this results in an unhandled exception.
      throw er; // Unhandled 'error' event
    }
    // At least give some kind of context to the user
    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));
    err.context = er;
    throw err; // Unhandled 'error' event
  }

  var handler = events[type];

  if (handler === undefined)
    return false;

  if (typeof handler === 'function') {
    ReflectApply(handler, this, args);
  } else {
    var len = handler.length;
    var listeners = arrayClone(handler, len);
    for (var i = 0; i < len; ++i)
      ReflectApply(listeners[i], this, args);
  }

  return true;
};

function _addListener(target, type, listener, prepend) {
  var m;
  var events;
  var existing;

  checkListener(listener);

  events = target._events;
  if (events === undefined) {
    events = target._events = Object.create(null);
    target._eventsCount = 0;
  } else {
    // To avoid recursion in the case that type === "newListener"! Before
    // adding it to the listeners, first emit "newListener".
    if (events.newListener !== undefined) {
      target.emit('newListener', type,
                  listener.listener ? listener.listener : listener);

      // Re-assign `events` because a newListener handler could have caused the
      // this._events to be assigned to a new object
      events = target._events;
    }
    existing = events[type];
  }

  if (existing === undefined) {
    // Optimize the case of one listener. Don't need the extra array object.
    existing = events[type] = listener;
    ++target._eventsCount;
  } else {
    if (typeof existing === 'function') {
      // Adding the second element, need to change to array.
      existing = events[type] =
        prepend ? [listener, existing] : [existing, listener];
      // If we've already got an array, just append.
    } else if (prepend) {
      existing.unshift(listener);
    } else {
      existing.push(listener);
    }

    // Check for listener leak
    m = _getMaxListeners(target);
    if (m > 0 && existing.length > m && !existing.warned) {
      existing.warned = true;
      // No error code for this since it is a Warning
      // eslint-disable-next-line no-restricted-syntax
      var w = new Error('Possible EventEmitter memory leak detected. ' +
                          existing.length + ' ' + String(type) + ' listeners ' +
                          'added. Use emitter.setMaxListeners() to ' +
                          'increase limit');
      w.name = 'MaxListenersExceededWarning';
      w.emitter = target;
      w.type = type;
      w.count = existing.length;
      ProcessEmitWarning(w);
    }
  }

  return target;
}

EventEmitter.prototype.addListener = function addListener(type, listener) {
  return _addListener(this, type, listener, false);
};

EventEmitter.prototype.on = EventEmitter.prototype.addListener;

EventEmitter.prototype.prependListener =
    function prependListener(type, listener) {
      return _addListener(this, type, listener, true);
    };

function onceWrapper() {
  if (!this.fired) {
    this.target.removeListener(this.type, this.wrapFn);
    this.fired = true;
    if (arguments.length === 0)
      return this.listener.call(this.target);
    return this.listener.apply(this.target, arguments);
  }
}

function _onceWrap(target, type, listener) {
  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };
  var wrapped = onceWrapper.bind(state);
  wrapped.listener = listener;
  state.wrapFn = wrapped;
  return wrapped;
}

EventEmitter.prototype.once = function once(type, listener) {
  checkListener(listener);
  this.on(type, _onceWrap(this, type, listener));
  return this;
};

EventEmitter.prototype.prependOnceListener =
    function prependOnceListener(type, listener) {
      checkListener(listener);
      this.prependListener(type, _onceWrap(this, type, listener));
      return this;
    };

// Emits a 'removeListener' event if and only if the listener was removed.
EventEmitter.prototype.removeListener =
    function removeListener(type, listener) {
      var list, events, position, i, originalListener;

      checkListener(listener);

      events = this._events;
      if (events === undefined)
        return this;

      list = events[type];
      if (list === undefined)
        return this;

      if (list === listener || list.listener === listener) {
        if (--this._eventsCount === 0)
          this._events = Object.create(null);
        else {
          delete events[type];
          if (events.removeListener)
            this.emit('removeListener', type, list.listener || listener);
        }
      } else if (typeof list !== 'function') {
        position = -1;

        for (i = list.length - 1; i >= 0; i--) {
          if (list[i] === listener || list[i].listener === listener) {
            originalListener = list[i].listener;
            position = i;
            break;
          }
        }

        if (position < 0)
          return this;

        if (position === 0)
          list.shift();
        else {
          spliceOne(list, position);
        }

        if (list.length === 1)
          events[type] = list[0];

        if (events.removeListener !== undefined)
          this.emit('removeListener', type, originalListener || listener);
      }

      return this;
    };

EventEmitter.prototype.off = EventEmitter.prototype.removeListener;

EventEmitter.prototype.removeAllListeners =
    function removeAllListeners(type) {
      var listeners, events, i;

      events = this._events;
      if (events === undefined)
        return this;

      // not listening for removeListener, no need to emit
      if (events.removeListener === undefined) {
        if (arguments.length === 0) {
          this._events = Object.create(null);
          this._eventsCount = 0;
        } else if (events[type] !== undefined) {
          if (--this._eventsCount === 0)
            this._events = Object.create(null);
          else
            delete events[type];
        }
        return this;
      }

      // emit removeListener for all listeners on all events
      if (arguments.length === 0) {
        var keys = Object.keys(events);
        var key;
        for (i = 0; i < keys.length; ++i) {
          key = keys[i];
          if (key === 'removeListener') continue;
          this.removeAllListeners(key);
        }
        this.removeAllListeners('removeListener');
        this._events = Object.create(null);
        this._eventsCount = 0;
        return this;
      }

      listeners = events[type];

      if (typeof listeners === 'function') {
        this.removeListener(type, listeners);
      } else if (listeners !== undefined) {
        // LIFO order
        for (i = listeners.length - 1; i >= 0; i--) {
          this.removeListener(type, listeners[i]);
        }
      }

      return this;
    };

function _listeners(target, type, unwrap) {
  var events = target._events;

  if (events === undefined)
    return [];

  var evlistener = events[type];
  if (evlistener === undefined)
    return [];

  if (typeof evlistener === 'function')
    return unwrap ? [evlistener.listener || evlistener] : [evlistener];

  return unwrap ?
    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);
}

EventEmitter.prototype.listeners = function listeners(type) {
  return _listeners(this, type, true);
};

EventEmitter.prototype.rawListeners = function rawListeners(type) {
  return _listeners(this, type, false);
};

EventEmitter.listenerCount = function(emitter, type) {
  if (typeof emitter.listenerCount === 'function') {
    return emitter.listenerCount(type);
  } else {
    return listenerCount.call(emitter, type);
  }
};

EventEmitter.prototype.listenerCount = listenerCount;
function listenerCount(type) {
  var events = this._events;

  if (events !== undefined) {
    var evlistener = events[type];

    if (typeof evlistener === 'function') {
      return 1;
    } else if (evlistener !== undefined) {
      return evlistener.length;
    }
  }

  return 0;
}

EventEmitter.prototype.eventNames = function eventNames() {
  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];
};

function arrayClone(arr, n) {
  var copy = new Array(n);
  for (var i = 0; i < n; ++i)
    copy[i] = arr[i];
  return copy;
}

function spliceOne(list, index) {
  for (; index + 1 < list.length; index++)
    list[index] = list[index + 1];
  list.pop();
}

function unwrapListeners(arr) {
  var ret = new Array(arr.length);
  for (var i = 0; i < ret.length; ++i) {
    ret[i] = arr[i].listener || arr[i];
  }
  return ret;
}

function once(emitter, name) {
  return new Promise(function (resolve, reject) {
    function errorListener(err) {
      emitter.removeListener(name, resolver);
      reject(err);
    }

    function resolver() {
      if (typeof emitter.removeListener === 'function') {
        emitter.removeListener('error', errorListener);
      }
      resolve([].slice.call(arguments));
    };

    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });
    if (name !== 'error') {
      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });
    }
  });
}

function addErrorHandlerIfEventEmitter(emitter, handler, flags) {
  if (typeof emitter.on === 'function') {
    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);
  }
}

function eventTargetAgnosticAddListener(emitter, name, listener, flags) {
  if (typeof emitter.on === 'function') {
    if (flags.once) {
      emitter.once(name, listener);
    } else {
      emitter.on(name, listener);
    }
  } else if (typeof emitter.addEventListener === 'function') {
    // EventTarget does not have `error` event semantics like Node
    // EventEmitters, we do not listen for `error` events here.
    emitter.addEventListener(name, function wrapListener(arg) {
      // IE does not have builtin `{ once: true }` support so we
      // have to do it manually.
      if (flags.once) {
        emitter.removeEventListener(name, wrapListener);
      }
      listener(arg);
    });
  } else {
    throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type ' + typeof emitter);
  }
}

},{}],117:[function(require,module,exports){
(function (process){(function (){
// 'path' module extracted from Node.js v8.11.1 (only the posix part)
// transplited with Babel

// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

'use strict';

function assertPath(path) {
  if (typeof path !== 'string') {
    throw new TypeError('Path must be a string. Received ' + JSON.stringify(path));
  }
}

// Resolves . and .. elements in a path with directory names
function normalizeStringPosix(path, allowAboveRoot) {
  var res = '';
  var lastSegmentLength = 0;
  var lastSlash = -1;
  var dots = 0;
  var code;
  for (var i = 0; i <= path.length; ++i) {
    if (i < path.length)
      code = path.charCodeAt(i);
    else if (code === 47 /*/*/)
      break;
    else
      code = 47 /*/*/;
    if (code === 47 /*/*/) {
      if (lastSlash === i - 1 || dots === 1) {
        // NOOP
      } else if (lastSlash !== i - 1 && dots === 2) {
        if (res.length < 2 || lastSegmentLength !== 2 || res.charCodeAt(res.length - 1) !== 46 /*.*/ || res.charCodeAt(res.length - 2) !== 46 /*.*/) {
          if (res.length > 2) {
            var lastSlashIndex = res.lastIndexOf('/');
            if (lastSlashIndex !== res.length - 1) {
              if (lastSlashIndex === -1) {
                res = '';
                lastSegmentLength = 0;
              } else {
                res = res.slice(0, lastSlashIndex);
                lastSegmentLength = res.length - 1 - res.lastIndexOf('/');
              }
              lastSlash = i;
              dots = 0;
              continue;
            }
          } else if (res.length === 2 || res.length === 1) {
            res = '';
            lastSegmentLength = 0;
            lastSlash = i;
            dots = 0;
            continue;
          }
        }
        if (allowAboveRoot) {
          if (res.length > 0)
            res += '/..';
          else
            res = '..';
          lastSegmentLength = 2;
        }
      } else {
        if (res.length > 0)
          res += '/' + path.slice(lastSlash + 1, i);
        else
          res = path.slice(lastSlash + 1, i);
        lastSegmentLength = i - lastSlash - 1;
      }
      lastSlash = i;
      dots = 0;
    } else if (code === 46 /*.*/ && dots !== -1) {
      ++dots;
    } else {
      dots = -1;
    }
  }
  return res;
}

function _format(sep, pathObject) {
  var dir = pathObject.dir || pathObject.root;
  var base = pathObject.base || (pathObject.name || '') + (pathObject.ext || '');
  if (!dir) {
    return base;
  }
  if (dir === pathObject.root) {
    return dir + base;
  }
  return dir + sep + base;
}

var posix = {
  // path.resolve([from ...], to)
  resolve: function resolve() {
    var resolvedPath = '';
    var resolvedAbsolute = false;
    var cwd;

    for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
      var path;
      if (i >= 0)
        path = arguments[i];
      else {
        if (cwd === undefined)
          cwd = process.cwd();
        path = cwd;
      }

      assertPath(path);

      // Skip empty entries
      if (path.length === 0) {
        continue;
      }

      resolvedPath = path + '/' + resolvedPath;
      resolvedAbsolute = path.charCodeAt(0) === 47 /*/*/;
    }

    // At this point the path should be resolved to a full absolute path, but
    // handle relative paths to be safe (might happen when process.cwd() fails)

    // Normalize the path
    resolvedPath = normalizeStringPosix(resolvedPath, !resolvedAbsolute);

    if (resolvedAbsolute) {
      if (resolvedPath.length > 0)
        return '/' + resolvedPath;
      else
        return '/';
    } else if (resolvedPath.length > 0) {
      return resolvedPath;
    } else {
      return '.';
    }
  },

  normalize: function normalize(path) {
    assertPath(path);

    if (path.length === 0) return '.';

    var isAbsolute = path.charCodeAt(0) === 47 /*/*/;
    var trailingSeparator = path.charCodeAt(path.length - 1) === 47 /*/*/;

    // Normalize the path
    path = normalizeStringPosix(path, !isAbsolute);

    if (path.length === 0 && !isAbsolute) path = '.';
    if (path.length > 0 && trailingSeparator) path += '/';

    if (isAbsolute) return '/' + path;
    return path;
  },

  isAbsolute: function isAbsolute(path) {
    assertPath(path);
    return path.length > 0 && path.charCodeAt(0) === 47 /*/*/;
  },

  join: function join() {
    if (arguments.length === 0)
      return '.';
    var joined;
    for (var i = 0; i < arguments.length; ++i) {
      var arg = arguments[i];
      assertPath(arg);
      if (arg.length > 0) {
        if (joined === undefined)
          joined = arg;
        else
          joined += '/' + arg;
      }
    }
    if (joined === undefined)
      return '.';
    return posix.normalize(joined);
  },

  relative: function relative(from, to) {
    assertPath(from);
    assertPath(to);

    if (from === to) return '';

    from = posix.resolve(from);
    to = posix.resolve(to);

    if (from === to) return '';

    // Trim any leading backslashes
    var fromStart = 1;
    for (; fromStart < from.length; ++fromStart) {
      if (from.charCodeAt(fromStart) !== 47 /*/*/)
        break;
    }
    var fromEnd = from.length;
    var fromLen = fromEnd - fromStart;

    // Trim any leading backslashes
    var toStart = 1;
    for (; toStart < to.length; ++toStart) {
      if (to.charCodeAt(toStart) !== 47 /*/*/)
        break;
    }
    var toEnd = to.length;
    var toLen = toEnd - toStart;

    // Compare paths to find the longest common path from root
    var length = fromLen < toLen ? fromLen : toLen;
    var lastCommonSep = -1;
    var i = 0;
    for (; i <= length; ++i) {
      if (i === length) {
        if (toLen > length) {
          if (to.charCodeAt(toStart + i) === 47 /*/*/) {
            // We get here if `from` is the exact base path for `to`.
            // For example: from='/foo/bar'; to='/foo/bar/baz'
            return to.slice(toStart + i + 1);
          } else if (i === 0) {
            // We get here if `from` is the root
            // For example: from='/'; to='/foo'
            return to.slice(toStart + i);
          }
        } else if (fromLen > length) {
          if (from.charCodeAt(fromStart + i) === 47 /*/*/) {
            // We get here if `to` is the exact base path for `from`.
            // For example: from='/foo/bar/baz'; to='/foo/bar'
            lastCommonSep = i;
          } else if (i === 0) {
            // We get here if `to` is the root.
            // For example: from='/foo'; to='/'
            lastCommonSep = 0;
          }
        }
        break;
      }
      var fromCode = from.charCodeAt(fromStart + i);
      var toCode = to.charCodeAt(toStart + i);
      if (fromCode !== toCode)
        break;
      else if (fromCode === 47 /*/*/)
        lastCommonSep = i;
    }

    var out = '';
    // Generate the relative path based on the path difference between `to`
    // and `from`
    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {
      if (i === fromEnd || from.charCodeAt(i) === 47 /*/*/) {
        if (out.length === 0)
          out += '..';
        else
          out += '/..';
      }
    }

    // Lastly, append the rest of the destination (`to`) path that comes after
    // the common path parts
    if (out.length > 0)
      return out + to.slice(toStart + lastCommonSep);
    else {
      toStart += lastCommonSep;
      if (to.charCodeAt(toStart) === 47 /*/*/)
        ++toStart;
      return to.slice(toStart);
    }
  },

  _makeLong: function _makeLong(path) {
    return path;
  },

  dirname: function dirname(path) {
    assertPath(path);
    if (path.length === 0) return '.';
    var code = path.charCodeAt(0);
    var hasRoot = code === 47 /*/*/;
    var end = -1;
    var matchedSlash = true;
    for (var i = path.length - 1; i >= 1; --i) {
      code = path.charCodeAt(i);
      if (code === 47 /*/*/) {
          if (!matchedSlash) {
            end = i;
            break;
          }
        } else {
        // We saw the first non-path separator
        matchedSlash = false;
      }
    }

    if (end === -1) return hasRoot ? '/' : '.';
    if (hasRoot && end === 1) return '//';
    return path.slice(0, end);
  },

  basename: function basename(path, ext) {
    if (ext !== undefined && typeof ext !== 'string') throw new TypeError('"ext" argument must be a string');
    assertPath(path);

    var start = 0;
    var end = -1;
    var matchedSlash = true;
    var i;

    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {
      if (ext.length === path.length && ext === path) return '';
      var extIdx = ext.length - 1;
      var firstNonSlashEnd = -1;
      for (i = path.length - 1; i >= 0; --i) {
        var code = path.charCodeAt(i);
        if (code === 47 /*/*/) {
            // If we reached a path separator that was not part of a set of path
            // separators at the end of the string, stop now
            if (!matchedSlash) {
              start = i + 1;
              break;
            }
          } else {
          if (firstNonSlashEnd === -1) {
            // We saw the first non-path separator, remember this index in case
            // we need it if the extension ends up not matching
            matchedSlash = false;
            firstNonSlashEnd = i + 1;
          }
          if (extIdx >= 0) {
            // Try to match the explicit extension
            if (code === ext.charCodeAt(extIdx)) {
              if (--extIdx === -1) {
                // We matched the extension, so mark this as the end of our path
                // component
                end = i;
              }
            } else {
              // Extension does not match, so our result is the entire path
              // component
              extIdx = -1;
              end = firstNonSlashEnd;
            }
          }
        }
      }

      if (start === end) end = firstNonSlashEnd;else if (end === -1) end = path.length;
      return path.slice(start, end);
    } else {
      for (i = path.length - 1; i >= 0; --i) {
        if (path.charCodeAt(i) === 47 /*/*/) {
            // If we reached a path separator that was not part of a set of path
            // separators at the end of the string, stop now
            if (!matchedSlash) {
              start = i + 1;
              break;
            }
          } else if (end === -1) {
          // We saw the first non-path separator, mark this as the end of our
          // path component
          matchedSlash = false;
          end = i + 1;
        }
      }

      if (end === -1) return '';
      return path.slice(start, end);
    }
  },

  extname: function extname(path) {
    assertPath(path);
    var startDot = -1;
    var startPart = 0;
    var end = -1;
    var matchedSlash = true;
    // Track the state of characters (if any) we see before our first dot and
    // after any path separator we find
    var preDotState = 0;
    for (var i = path.length - 1; i >= 0; --i) {
      var code = path.charCodeAt(i);
      if (code === 47 /*/*/) {
          // If we reached a path separator that was not part of a set of path
          // separators at the end of the string, stop now
          if (!matchedSlash) {
            startPart = i + 1;
            break;
          }
          continue;
        }
      if (end === -1) {
        // We saw the first non-path separator, mark this as the end of our
        // extension
        matchedSlash = false;
        end = i + 1;
      }
      if (code === 46 /*.*/) {
          // If this is our first dot, mark it as the start of our extension
          if (startDot === -1)
            startDot = i;
          else if (preDotState !== 1)
            preDotState = 1;
      } else if (startDot !== -1) {
        // We saw a non-dot and non-path separator before our dot, so we should
        // have a good chance at having a non-empty extension
        preDotState = -1;
      }
    }

    if (startDot === -1 || end === -1 ||
        // We saw a non-dot character immediately before the dot
        preDotState === 0 ||
        // The (right-most) trimmed path component is exactly '..'
        preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {
      return '';
    }
    return path.slice(startDot, end);
  },

  format: function format(pathObject) {
    if (pathObject === null || typeof pathObject !== 'object') {
      throw new TypeError('The "pathObject" argument must be of type Object. Received type ' + typeof pathObject);
    }
    return _format('/', pathObject);
  },

  parse: function parse(path) {
    assertPath(path);

    var ret = { root: '', dir: '', base: '', ext: '', name: '' };
    if (path.length === 0) return ret;
    var code = path.charCodeAt(0);
    var isAbsolute = code === 47 /*/*/;
    var start;
    if (isAbsolute) {
      ret.root = '/';
      start = 1;
    } else {
      start = 0;
    }
    var startDot = -1;
    var startPart = 0;
    var end = -1;
    var matchedSlash = true;
    var i = path.length - 1;

    // Track the state of characters (if any) we see before our first dot and
    // after any path separator we find
    var preDotState = 0;

    // Get non-dir info
    for (; i >= start; --i) {
      code = path.charCodeAt(i);
      if (code === 47 /*/*/) {
          // If we reached a path separator that was not part of a set of path
          // separators at the end of the string, stop now
          if (!matchedSlash) {
            startPart = i + 1;
            break;
          }
          continue;
        }
      if (end === -1) {
        // We saw the first non-path separator, mark this as the end of our
        // extension
        matchedSlash = false;
        end = i + 1;
      }
      if (code === 46 /*.*/) {
          // If this is our first dot, mark it as the start of our extension
          if (startDot === -1) startDot = i;else if (preDotState !== 1) preDotState = 1;
        } else if (startDot !== -1) {
        // We saw a non-dot and non-path separator before our dot, so we should
        // have a good chance at having a non-empty extension
        preDotState = -1;
      }
    }

    if (startDot === -1 || end === -1 ||
    // We saw a non-dot character immediately before the dot
    preDotState === 0 ||
    // The (right-most) trimmed path component is exactly '..'
    preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {
      if (end !== -1) {
        if (startPart === 0 && isAbsolute) ret.base = ret.name = path.slice(1, end);else ret.base = ret.name = path.slice(startPart, end);
      }
    } else {
      if (startPart === 0 && isAbsolute) {
        ret.name = path.slice(1, startDot);
        ret.base = path.slice(1, end);
      } else {
        ret.name = path.slice(startPart, startDot);
        ret.base = path.slice(startPart, end);
      }
      ret.ext = path.slice(startDot, end);
    }

    if (startPart > 0) ret.dir = path.slice(0, startPart - 1);else if (isAbsolute) ret.dir = '/';

    return ret;
  },

  sep: '/',
  delimiter: ':',
  win32: null,
  posix: null
};

posix.posix = posix;

module.exports = posix;

}).call(this)}).call(this,require('_process'))
},{"_process":209}],118:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

module.exports = Stream;

var EE = require('events').EventEmitter;
var inherits = require('inherits');

inherits(Stream, EE);
Stream.Readable = require('readable-stream/lib/_stream_readable.js');
Stream.Writable = require('readable-stream/lib/_stream_writable.js');
Stream.Duplex = require('readable-stream/lib/_stream_duplex.js');
Stream.Transform = require('readable-stream/lib/_stream_transform.js');
Stream.PassThrough = require('readable-stream/lib/_stream_passthrough.js');
Stream.finished = require('readable-stream/lib/internal/streams/end-of-stream.js')
Stream.pipeline = require('readable-stream/lib/internal/streams/pipeline.js')

// Backwards-compat with node 0.4.x
Stream.Stream = Stream;



// old-style streams.  Note that the pipe method (the only relevant
// part of this class) is overridden in the Readable class.

function Stream() {
  EE.call(this);
}

Stream.prototype.pipe = function(dest, options) {
  var source = this;

  function ondata(chunk) {
    if (dest.writable) {
      if (false === dest.write(chunk) && source.pause) {
        source.pause();
      }
    }
  }

  source.on('data', ondata);

  function ondrain() {
    if (source.readable && source.resume) {
      source.resume();
    }
  }

  dest.on('drain', ondrain);

  // If the 'end' option is not supplied, dest.end() will be called when
  // source gets the 'end' or 'close' events.  Only dest.end() once.
  if (!dest._isStdio && (!options || options.end !== false)) {
    source.on('end', onend);
    source.on('close', onclose);
  }

  var didOnEnd = false;
  function onend() {
    if (didOnEnd) return;
    didOnEnd = true;

    dest.end();
  }


  function onclose() {
    if (didOnEnd) return;
    didOnEnd = true;

    if (typeof dest.destroy === 'function') dest.destroy();
  }

  // don't leave dangling pipes when there are errors.
  function onerror(er) {
    cleanup();
    if (EE.listenerCount(this, 'error') === 0) {
      throw er; // Unhandled stream error in pipe.
    }
  }

  source.on('error', onerror);
  dest.on('error', onerror);

  // remove all the event listeners that were added.
  function cleanup() {
    source.removeListener('data', ondata);
    dest.removeListener('drain', ondrain);

    source.removeListener('end', onend);
    source.removeListener('close', onclose);

    source.removeListener('error', onerror);
    dest.removeListener('error', onerror);

    source.removeListener('end', cleanup);
    source.removeListener('close', cleanup);

    dest.removeListener('close', cleanup);
  }

  source.on('end', cleanup);
  source.on('close', cleanup);

  dest.on('close', cleanup);

  dest.emit('pipe', source);

  // Allow for unix-like usage: A.pipe(B).pipe(C)
  return dest;
};

},{"events":116,"inherits":204,"readable-stream/lib/_stream_duplex.js":120,"readable-stream/lib/_stream_passthrough.js":121,"readable-stream/lib/_stream_readable.js":122,"readable-stream/lib/_stream_transform.js":123,"readable-stream/lib/_stream_writable.js":124,"readable-stream/lib/internal/streams/end-of-stream.js":128,"readable-stream/lib/internal/streams/pipeline.js":130}],119:[function(require,module,exports){
'use strict';

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

var codes = {};

function createErrorType(code, message, Base) {
  if (!Base) {
    Base = Error;
  }

  function getMessage(arg1, arg2, arg3) {
    if (typeof message === 'string') {
      return message;
    } else {
      return message(arg1, arg2, arg3);
    }
  }

  var NodeError =
  /*#__PURE__*/
  function (_Base) {
    _inheritsLoose(NodeError, _Base);

    function NodeError(arg1, arg2, arg3) {
      return _Base.call(this, getMessage(arg1, arg2, arg3)) || this;
    }

    return NodeError;
  }(Base);

  NodeError.prototype.name = Base.name;
  NodeError.prototype.code = code;
  codes[code] = NodeError;
} // https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js


function oneOf(expected, thing) {
  if (Array.isArray(expected)) {
    var len = expected.length;
    expected = expected.map(function (i) {
      return String(i);
    });

    if (len > 2) {
      return "one of ".concat(thing, " ").concat(expected.slice(0, len - 1).join(', '), ", or ") + expected[len - 1];
    } else if (len === 2) {
      return "one of ".concat(thing, " ").concat(expected[0], " or ").concat(expected[1]);
    } else {
      return "of ".concat(thing, " ").concat(expected[0]);
    }
  } else {
    return "of ".concat(thing, " ").concat(String(expected));
  }
} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith


function startsWith(str, search, pos) {
  return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;
} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith


function endsWith(str, search, this_len) {
  if (this_len === undefined || this_len > str.length) {
    this_len = str.length;
  }

  return str.substring(this_len - search.length, this_len) === search;
} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes


function includes(str, search, start) {
  if (typeof start !== 'number') {
    start = 0;
  }

  if (start + search.length > str.length) {
    return false;
  } else {
    return str.indexOf(search, start) !== -1;
  }
}

createErrorType('ERR_INVALID_OPT_VALUE', function (name, value) {
  return 'The value "' + value + '" is invalid for option "' + name + '"';
}, TypeError);
createErrorType('ERR_INVALID_ARG_TYPE', function (name, expected, actual) {
  // determiner: 'must be' or 'must not be'
  var determiner;

  if (typeof expected === 'string' && startsWith(expected, 'not ')) {
    determiner = 'must not be';
    expected = expected.replace(/^not /, '');
  } else {
    determiner = 'must be';
  }

  var msg;

  if (endsWith(name, ' argument')) {
    // For cases like 'first argument'
    msg = "The ".concat(name, " ").concat(determiner, " ").concat(oneOf(expected, 'type'));
  } else {
    var type = includes(name, '.') ? 'property' : 'argument';
    msg = "The \"".concat(name, "\" ").concat(type, " ").concat(determiner, " ").concat(oneOf(expected, 'type'));
  }

  msg += ". Received type ".concat(typeof actual);
  return msg;
}, TypeError);
createErrorType('ERR_STREAM_PUSH_AFTER_EOF', 'stream.push() after EOF');
createErrorType('ERR_METHOD_NOT_IMPLEMENTED', function (name) {
  return 'The ' + name + ' method is not implemented';
});
createErrorType('ERR_STREAM_PREMATURE_CLOSE', 'Premature close');
createErrorType('ERR_STREAM_DESTROYED', function (name) {
  return 'Cannot call ' + name + ' after a stream was destroyed';
});
createErrorType('ERR_MULTIPLE_CALLBACK', 'Callback called multiple times');
createErrorType('ERR_STREAM_CANNOT_PIPE', 'Cannot pipe, not readable');
createErrorType('ERR_STREAM_WRITE_AFTER_END', 'write after end');
createErrorType('ERR_STREAM_NULL_VALUES', 'May not write null values to stream', TypeError);
createErrorType('ERR_UNKNOWN_ENCODING', function (arg) {
  return 'Unknown encoding: ' + arg;
}, TypeError);
createErrorType('ERR_STREAM_UNSHIFT_AFTER_END_EVENT', 'stream.unshift() after end event');
module.exports.codes = codes;

},{}],120:[function(require,module,exports){
(function (process){(function (){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
// a duplex stream is just a stream that is both readable and writable.
// Since JS doesn't have multiple prototypal inheritance, this class
// prototypally inherits from Readable, and then parasitically from
// Writable.
'use strict';
/*<replacement>*/

var objectKeys = Object.keys || function (obj) {
  var keys = [];

  for (var key in obj) {
    keys.push(key);
  }

  return keys;
};
/*</replacement>*/


module.exports = Duplex;

var Readable = require('./_stream_readable');

var Writable = require('./_stream_writable');

require('inherits')(Duplex, Readable);

{
  // Allow the keys array to be GC'ed.
  var keys = objectKeys(Writable.prototype);

  for (var v = 0; v < keys.length; v++) {
    var method = keys[v];
    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];
  }
}

function Duplex(options) {
  if (!(this instanceof Duplex)) return new Duplex(options);
  Readable.call(this, options);
  Writable.call(this, options);
  this.allowHalfOpen = true;

  if (options) {
    if (options.readable === false) this.readable = false;
    if (options.writable === false) this.writable = false;

    if (options.allowHalfOpen === false) {
      this.allowHalfOpen = false;
      this.once('end', onend);
    }
  }
}

Object.defineProperty(Duplex.prototype, 'writableHighWaterMark', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._writableState.highWaterMark;
  }
});
Object.defineProperty(Duplex.prototype, 'writableBuffer', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._writableState && this._writableState.getBuffer();
  }
});
Object.defineProperty(Duplex.prototype, 'writableLength', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._writableState.length;
  }
}); // the no-half-open enforcer

function onend() {
  // If the writable side ended, then we're ok.
  if (this._writableState.ended) return; // no more data can be written.
  // But allow more writes to happen in this tick.

  process.nextTick(onEndNT, this);
}

function onEndNT(self) {
  self.end();
}

Object.defineProperty(Duplex.prototype, 'destroyed', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    if (this._readableState === undefined || this._writableState === undefined) {
      return false;
    }

    return this._readableState.destroyed && this._writableState.destroyed;
  },
  set: function set(value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (this._readableState === undefined || this._writableState === undefined) {
      return;
    } // backward compatibility, the user is explicitly
    // managing destroyed


    this._readableState.destroyed = value;
    this._writableState.destroyed = value;
  }
});
}).call(this)}).call(this,require('_process'))
},{"./_stream_readable":122,"./_stream_writable":124,"_process":209,"inherits":204}],121:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
// a passthrough stream.
// basically just the most minimal sort of Transform stream.
// Every written chunk gets output as-is.
'use strict';

module.exports = PassThrough;

var Transform = require('./_stream_transform');

require('inherits')(PassThrough, Transform);

function PassThrough(options) {
  if (!(this instanceof PassThrough)) return new PassThrough(options);
  Transform.call(this, options);
}

PassThrough.prototype._transform = function (chunk, encoding, cb) {
  cb(null, chunk);
};
},{"./_stream_transform":123,"inherits":204}],122:[function(require,module,exports){
(function (process,global){(function (){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
'use strict';

module.exports = Readable;
/*<replacement>*/

var Duplex;
/*</replacement>*/

Readable.ReadableState = ReadableState;
/*<replacement>*/

var EE = require('events').EventEmitter;

var EElistenerCount = function EElistenerCount(emitter, type) {
  return emitter.listeners(type).length;
};
/*</replacement>*/

/*<replacement>*/


var Stream = require('./internal/streams/stream');
/*</replacement>*/


var Buffer = require('buffer').Buffer;

var OurUint8Array = global.Uint8Array || function () {};

function _uint8ArrayToBuffer(chunk) {
  return Buffer.from(chunk);
}

function _isUint8Array(obj) {
  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;
}
/*<replacement>*/


var debugUtil = require('util');

var debug;

if (debugUtil && debugUtil.debuglog) {
  debug = debugUtil.debuglog('stream');
} else {
  debug = function debug() {};
}
/*</replacement>*/


var BufferList = require('./internal/streams/buffer_list');

var destroyImpl = require('./internal/streams/destroy');

var _require = require('./internal/streams/state'),
    getHighWaterMark = _require.getHighWaterMark;

var _require$codes = require('../errors').codes,
    ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,
    ERR_STREAM_PUSH_AFTER_EOF = _require$codes.ERR_STREAM_PUSH_AFTER_EOF,
    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,
    ERR_STREAM_UNSHIFT_AFTER_END_EVENT = _require$codes.ERR_STREAM_UNSHIFT_AFTER_END_EVENT; // Lazy loaded to improve the startup performance.


var StringDecoder;
var createReadableStreamAsyncIterator;
var from;

require('inherits')(Readable, Stream);

var errorOrDestroy = destroyImpl.errorOrDestroy;
var kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];

function prependListener(emitter, event, fn) {
  // Sadly this is not cacheable as some libraries bundle their own
  // event emitter implementation with them.
  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn); // This is a hack to make sure that our error handler is attached before any
  // userland ones.  NEVER DO THIS. This is here only because this code needs
  // to continue to work with older versions of Node.js that do not include
  // the prependListener() method. The goal is to eventually remove this hack.

  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (Array.isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];
}

function ReadableState(options, stream, isDuplex) {
  Duplex = Duplex || require('./_stream_duplex');
  options = options || {}; // Duplex streams are both readable and writable, but share
  // the same options object.
  // However, some cases require setting options to different
  // values for the readable and the writable sides of the duplex stream.
  // These options can be provided separately as readableXXX and writableXXX.

  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex; // object stream flag. Used to make read(n) ignore n and to
  // make all the buffer merging and length checks go away

  this.objectMode = !!options.objectMode;
  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode; // the point at which it stops calling _read() to fill the buffer
  // Note: 0 is a valid value, means "don't call _read preemptively ever"

  this.highWaterMark = getHighWaterMark(this, options, 'readableHighWaterMark', isDuplex); // A linked list is used to store data chunks instead of an array because the
  // linked list can remove elements from the beginning faster than
  // array.shift()

  this.buffer = new BufferList();
  this.length = 0;
  this.pipes = null;
  this.pipesCount = 0;
  this.flowing = null;
  this.ended = false;
  this.endEmitted = false;
  this.reading = false; // a flag to be able to tell if the event 'readable'/'data' is emitted
  // immediately, or on a later tick.  We set this to true at first, because
  // any actions that shouldn't happen until "later" should generally also
  // not happen before the first read call.

  this.sync = true; // whenever we return null, then we set a flag to say
  // that we're awaiting a 'readable' event emission.

  this.needReadable = false;
  this.emittedReadable = false;
  this.readableListening = false;
  this.resumeScheduled = false;
  this.paused = true; // Should close be emitted on destroy. Defaults to true.

  this.emitClose = options.emitClose !== false; // Should .destroy() be called after 'end' (and potentially 'finish')

  this.autoDestroy = !!options.autoDestroy; // has it been destroyed

  this.destroyed = false; // Crypto is kind of old and crusty.  Historically, its default string
  // encoding is 'binary' so we have to make this configurable.
  // Everything else in the universe uses 'utf8', though.

  this.defaultEncoding = options.defaultEncoding || 'utf8'; // the number of writers that are awaiting a drain event in .pipe()s

  this.awaitDrain = 0; // if true, a maybeReadMore has been scheduled

  this.readingMore = false;
  this.decoder = null;
  this.encoding = null;

  if (options.encoding) {
    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;
    this.decoder = new StringDecoder(options.encoding);
    this.encoding = options.encoding;
  }
}

function Readable(options) {
  Duplex = Duplex || require('./_stream_duplex');
  if (!(this instanceof Readable)) return new Readable(options); // Checking for a Stream.Duplex instance is faster here instead of inside
  // the ReadableState constructor, at least with V8 6.5

  var isDuplex = this instanceof Duplex;
  this._readableState = new ReadableState(options, this, isDuplex); // legacy

  this.readable = true;

  if (options) {
    if (typeof options.read === 'function') this._read = options.read;
    if (typeof options.destroy === 'function') this._destroy = options.destroy;
  }

  Stream.call(this);
}

Object.defineProperty(Readable.prototype, 'destroyed', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    if (this._readableState === undefined) {
      return false;
    }

    return this._readableState.destroyed;
  },
  set: function set(value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (!this._readableState) {
      return;
    } // backward compatibility, the user is explicitly
    // managing destroyed


    this._readableState.destroyed = value;
  }
});
Readable.prototype.destroy = destroyImpl.destroy;
Readable.prototype._undestroy = destroyImpl.undestroy;

Readable.prototype._destroy = function (err, cb) {
  cb(err);
}; // Manually shove something into the read() buffer.
// This returns true if the highWaterMark has not been hit yet,
// similar to how Writable.write() returns true if you should
// write() some more.


Readable.prototype.push = function (chunk, encoding) {
  var state = this._readableState;
  var skipChunkCheck;

  if (!state.objectMode) {
    if (typeof chunk === 'string') {
      encoding = encoding || state.defaultEncoding;

      if (encoding !== state.encoding) {
        chunk = Buffer.from(chunk, encoding);
        encoding = '';
      }

      skipChunkCheck = true;
    }
  } else {
    skipChunkCheck = true;
  }

  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);
}; // Unshift should *always* be something directly out of read()


Readable.prototype.unshift = function (chunk) {
  return readableAddChunk(this, chunk, null, true, false);
};

function readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {
  debug('readableAddChunk', chunk);
  var state = stream._readableState;

  if (chunk === null) {
    state.reading = false;
    onEofChunk(stream, state);
  } else {
    var er;
    if (!skipChunkCheck) er = chunkInvalid(state, chunk);

    if (er) {
      errorOrDestroy(stream, er);
    } else if (state.objectMode || chunk && chunk.length > 0) {
      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {
        chunk = _uint8ArrayToBuffer(chunk);
      }

      if (addToFront) {
        if (state.endEmitted) errorOrDestroy(stream, new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());else addChunk(stream, state, chunk, true);
      } else if (state.ended) {
        errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF());
      } else if (state.destroyed) {
        return false;
      } else {
        state.reading = false;

        if (state.decoder && !encoding) {
          chunk = state.decoder.write(chunk);
          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);
        } else {
          addChunk(stream, state, chunk, false);
        }
      }
    } else if (!addToFront) {
      state.reading = false;
      maybeReadMore(stream, state);
    }
  } // We can push more data if we are below the highWaterMark.
  // Also, if we have no data yet, we can stand some more bytes.
  // This is to work around cases where hwm=0, such as the repl.


  return !state.ended && (state.length < state.highWaterMark || state.length === 0);
}

function addChunk(stream, state, chunk, addToFront) {
  if (state.flowing && state.length === 0 && !state.sync) {
    state.awaitDrain = 0;
    stream.emit('data', chunk);
  } else {
    // update the buffer info.
    state.length += state.objectMode ? 1 : chunk.length;
    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);
    if (state.needReadable) emitReadable(stream);
  }

  maybeReadMore(stream, state);
}

function chunkInvalid(state, chunk) {
  var er;

  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {
    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer', 'Uint8Array'], chunk);
  }

  return er;
}

Readable.prototype.isPaused = function () {
  return this._readableState.flowing === false;
}; // backwards compatibility.


Readable.prototype.setEncoding = function (enc) {
  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;
  var decoder = new StringDecoder(enc);
  this._readableState.decoder = decoder; // If setEncoding(null), decoder.encoding equals utf8

  this._readableState.encoding = this._readableState.decoder.encoding; // Iterate over current buffer to convert already stored Buffers:

  var p = this._readableState.buffer.head;
  var content = '';

  while (p !== null) {
    content += decoder.write(p.data);
    p = p.next;
  }

  this._readableState.buffer.clear();

  if (content !== '') this._readableState.buffer.push(content);
  this._readableState.length = content.length;
  return this;
}; // Don't raise the hwm > 1GB


var MAX_HWM = 0x40000000;

function computeNewHighWaterMark(n) {
  if (n >= MAX_HWM) {
    // TODO(ronag): Throw ERR_VALUE_OUT_OF_RANGE.
    n = MAX_HWM;
  } else {
    // Get the next highest power of 2 to prevent increasing hwm excessively in
    // tiny amounts
    n--;
    n |= n >>> 1;
    n |= n >>> 2;
    n |= n >>> 4;
    n |= n >>> 8;
    n |= n >>> 16;
    n++;
  }

  return n;
} // This function is designed to be inlinable, so please take care when making
// changes to the function body.


function howMuchToRead(n, state) {
  if (n <= 0 || state.length === 0 && state.ended) return 0;
  if (state.objectMode) return 1;

  if (n !== n) {
    // Only flow one buffer at a time
    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;
  } // If we're asking for more than the current hwm, then raise the hwm.


  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);
  if (n <= state.length) return n; // Don't have enough

  if (!state.ended) {
    state.needReadable = true;
    return 0;
  }

  return state.length;
} // you can override either this method, or the async _read(n) below.


Readable.prototype.read = function (n) {
  debug('read', n);
  n = parseInt(n, 10);
  var state = this._readableState;
  var nOrig = n;
  if (n !== 0) state.emittedReadable = false; // if we're doing read(0) to trigger a readable event, but we
  // already have a bunch of data in the buffer, then just trigger
  // the 'readable' event and move on.

  if (n === 0 && state.needReadable && ((state.highWaterMark !== 0 ? state.length >= state.highWaterMark : state.length > 0) || state.ended)) {
    debug('read: emitReadable', state.length, state.ended);
    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);
    return null;
  }

  n = howMuchToRead(n, state); // if we've ended, and we're now clear, then finish it up.

  if (n === 0 && state.ended) {
    if (state.length === 0) endReadable(this);
    return null;
  } // All the actual chunk generation logic needs to be
  // *below* the call to _read.  The reason is that in certain
  // synthetic stream cases, such as passthrough streams, _read
  // may be a completely synchronous operation which may change
  // the state of the read buffer, providing enough data when
  // before there was *not* enough.
  //
  // So, the steps are:
  // 1. Figure out what the state of things will be after we do
  // a read from the buffer.
  //
  // 2. If that resulting state will trigger a _read, then call _read.
  // Note that this may be asynchronous, or synchronous.  Yes, it is
  // deeply ugly to write APIs this way, but that still doesn't mean
  // that the Readable class should behave improperly, as streams are
  // designed to be sync/async agnostic.
  // Take note if the _read call is sync or async (ie, if the read call
  // has returned yet), so that we know whether or not it's safe to emit
  // 'readable' etc.
  //
  // 3. Actually pull the requested chunks out of the buffer and return.
  // if we need a readable event, then we need to do some reading.


  var doRead = state.needReadable;
  debug('need readable', doRead); // if we currently have less than the highWaterMark, then also read some

  if (state.length === 0 || state.length - n < state.highWaterMark) {
    doRead = true;
    debug('length less than watermark', doRead);
  } // however, if we've ended, then there's no point, and if we're already
  // reading, then it's unnecessary.


  if (state.ended || state.reading) {
    doRead = false;
    debug('reading or ended', doRead);
  } else if (doRead) {
    debug('do read');
    state.reading = true;
    state.sync = true; // if the length is currently zero, then we *need* a readable event.

    if (state.length === 0) state.needReadable = true; // call internal read method

    this._read(state.highWaterMark);

    state.sync = false; // If _read pushed data synchronously, then `reading` will be false,
    // and we need to re-evaluate how much data we can return to the user.

    if (!state.reading) n = howMuchToRead(nOrig, state);
  }

  var ret;
  if (n > 0) ret = fromList(n, state);else ret = null;

  if (ret === null) {
    state.needReadable = state.length <= state.highWaterMark;
    n = 0;
  } else {
    state.length -= n;
    state.awaitDrain = 0;
  }

  if (state.length === 0) {
    // If we have nothing in the buffer, then we want to know
    // as soon as we *do* get something into the buffer.
    if (!state.ended) state.needReadable = true; // If we tried to read() past the EOF, then emit end on the next tick.

    if (nOrig !== n && state.ended) endReadable(this);
  }

  if (ret !== null) this.emit('data', ret);
  return ret;
};

function onEofChunk(stream, state) {
  debug('onEofChunk');
  if (state.ended) return;

  if (state.decoder) {
    var chunk = state.decoder.end();

    if (chunk && chunk.length) {
      state.buffer.push(chunk);
      state.length += state.objectMode ? 1 : chunk.length;
    }
  }

  state.ended = true;

  if (state.sync) {
    // if we are sync, wait until next tick to emit the data.
    // Otherwise we risk emitting data in the flow()
    // the readable code triggers during a read() call
    emitReadable(stream);
  } else {
    // emit 'readable' now to make sure it gets picked up.
    state.needReadable = false;

    if (!state.emittedReadable) {
      state.emittedReadable = true;
      emitReadable_(stream);
    }
  }
} // Don't emit readable right away in sync mode, because this can trigger
// another read() call => stack overflow.  This way, it might trigger
// a nextTick recursion warning, but that's not so bad.


function emitReadable(stream) {
  var state = stream._readableState;
  debug('emitReadable', state.needReadable, state.emittedReadable);
  state.needReadable = false;

  if (!state.emittedReadable) {
    debug('emitReadable', state.flowing);
    state.emittedReadable = true;
    process.nextTick(emitReadable_, stream);
  }
}

function emitReadable_(stream) {
  var state = stream._readableState;
  debug('emitReadable_', state.destroyed, state.length, state.ended);

  if (!state.destroyed && (state.length || state.ended)) {
    stream.emit('readable');
    state.emittedReadable = false;
  } // The stream needs another readable event if
  // 1. It is not flowing, as the flow mechanism will take
  //    care of it.
  // 2. It is not ended.
  // 3. It is below the highWaterMark, so we can schedule
  //    another readable later.


  state.needReadable = !state.flowing && !state.ended && state.length <= state.highWaterMark;
  flow(stream);
} // at this point, the user has presumably seen the 'readable' event,
// and called read() to consume some data.  that may have triggered
// in turn another _read(n) call, in which case reading = true if
// it's in progress.
// However, if we're not ended, or reading, and the length < hwm,
// then go ahead and try to read some more preemptively.


function maybeReadMore(stream, state) {
  if (!state.readingMore) {
    state.readingMore = true;
    process.nextTick(maybeReadMore_, stream, state);
  }
}

function maybeReadMore_(stream, state) {
  // Attempt to read more data if we should.
  //
  // The conditions for reading more data are (one of):
  // - Not enough data buffered (state.length < state.highWaterMark). The loop
  //   is responsible for filling the buffer with enough data if such data
  //   is available. If highWaterMark is 0 and we are not in the flowing mode
  //   we should _not_ attempt to buffer any extra data. We'll get more data
  //   when the stream consumer calls read() instead.
  // - No data in the buffer, and the stream is in flowing mode. In this mode
  //   the loop below is responsible for ensuring read() is called. Failing to
  //   call read here would abort the flow and there's no other mechanism for
  //   continuing the flow if the stream consumer has just subscribed to the
  //   'data' event.
  //
  // In addition to the above conditions to keep reading data, the following
  // conditions prevent the data from being read:
  // - The stream has ended (state.ended).
  // - There is already a pending 'read' operation (state.reading). This is a
  //   case where the the stream has called the implementation defined _read()
  //   method, but they are processing the call asynchronously and have _not_
  //   called push() with new data. In this case we skip performing more
  //   read()s. The execution ends in this method again after the _read() ends
  //   up calling push() with more data.
  while (!state.reading && !state.ended && (state.length < state.highWaterMark || state.flowing && state.length === 0)) {
    var len = state.length;
    debug('maybeReadMore read 0');
    stream.read(0);
    if (len === state.length) // didn't get any data, stop spinning.
      break;
  }

  state.readingMore = false;
} // abstract method.  to be overridden in specific implementation classes.
// call cb(er, data) where data is <= n in length.
// for virtual (non-string, non-buffer) streams, "length" is somewhat
// arbitrary, and perhaps not very meaningful.


Readable.prototype._read = function (n) {
  errorOrDestroy(this, new ERR_METHOD_NOT_IMPLEMENTED('_read()'));
};

Readable.prototype.pipe = function (dest, pipeOpts) {
  var src = this;
  var state = this._readableState;

  switch (state.pipesCount) {
    case 0:
      state.pipes = dest;
      break;

    case 1:
      state.pipes = [state.pipes, dest];
      break;

    default:
      state.pipes.push(dest);
      break;
  }

  state.pipesCount += 1;
  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);
  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;
  var endFn = doEnd ? onend : unpipe;
  if (state.endEmitted) process.nextTick(endFn);else src.once('end', endFn);
  dest.on('unpipe', onunpipe);

  function onunpipe(readable, unpipeInfo) {
    debug('onunpipe');

    if (readable === src) {
      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {
        unpipeInfo.hasUnpiped = true;
        cleanup();
      }
    }
  }

  function onend() {
    debug('onend');
    dest.end();
  } // when the dest drains, it reduces the awaitDrain counter
  // on the source.  This would be more elegant with a .once()
  // handler in flow(), but adding and removing repeatedly is
  // too slow.


  var ondrain = pipeOnDrain(src);
  dest.on('drain', ondrain);
  var cleanedUp = false;

  function cleanup() {
    debug('cleanup'); // cleanup event handlers once the pipe is broken

    dest.removeListener('close', onclose);
    dest.removeListener('finish', onfinish);
    dest.removeListener('drain', ondrain);
    dest.removeListener('error', onerror);
    dest.removeListener('unpipe', onunpipe);
    src.removeListener('end', onend);
    src.removeListener('end', unpipe);
    src.removeListener('data', ondata);
    cleanedUp = true; // if the reader is waiting for a drain event from this
    // specific writer, then it would cause it to never start
    // flowing again.
    // So, if this is awaiting a drain, then we just call it now.
    // If we don't know, then assume that we are waiting for one.

    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();
  }

  src.on('data', ondata);

  function ondata(chunk) {
    debug('ondata');
    var ret = dest.write(chunk);
    debug('dest.write', ret);

    if (ret === false) {
      // If the user unpiped during `dest.write()`, it is possible
      // to get stuck in a permanently paused state if that write
      // also returned false.
      // => Check whether `dest` is still a piping destination.
      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {
        debug('false write response, pause', state.awaitDrain);
        state.awaitDrain++;
      }

      src.pause();
    }
  } // if the dest has an error, then stop piping into it.
  // however, don't suppress the throwing behavior for this.


  function onerror(er) {
    debug('onerror', er);
    unpipe();
    dest.removeListener('error', onerror);
    if (EElistenerCount(dest, 'error') === 0) errorOrDestroy(dest, er);
  } // Make sure our error handler is attached before userland ones.


  prependListener(dest, 'error', onerror); // Both close and finish should trigger unpipe, but only once.

  function onclose() {
    dest.removeListener('finish', onfinish);
    unpipe();
  }

  dest.once('close', onclose);

  function onfinish() {
    debug('onfinish');
    dest.removeListener('close', onclose);
    unpipe();
  }

  dest.once('finish', onfinish);

  function unpipe() {
    debug('unpipe');
    src.unpipe(dest);
  } // tell the dest that it's being piped to


  dest.emit('pipe', src); // start the flow if it hasn't been started already.

  if (!state.flowing) {
    debug('pipe resume');
    src.resume();
  }

  return dest;
};

function pipeOnDrain(src) {
  return function pipeOnDrainFunctionResult() {
    var state = src._readableState;
    debug('pipeOnDrain', state.awaitDrain);
    if (state.awaitDrain) state.awaitDrain--;

    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {
      state.flowing = true;
      flow(src);
    }
  };
}

Readable.prototype.unpipe = function (dest) {
  var state = this._readableState;
  var unpipeInfo = {
    hasUnpiped: false
  }; // if we're not piping anywhere, then do nothing.

  if (state.pipesCount === 0) return this; // just one destination.  most common case.

  if (state.pipesCount === 1) {
    // passed in one, but it's not the right one.
    if (dest && dest !== state.pipes) return this;
    if (!dest) dest = state.pipes; // got a match.

    state.pipes = null;
    state.pipesCount = 0;
    state.flowing = false;
    if (dest) dest.emit('unpipe', this, unpipeInfo);
    return this;
  } // slow case. multiple pipe destinations.


  if (!dest) {
    // remove all.
    var dests = state.pipes;
    var len = state.pipesCount;
    state.pipes = null;
    state.pipesCount = 0;
    state.flowing = false;

    for (var i = 0; i < len; i++) {
      dests[i].emit('unpipe', this, {
        hasUnpiped: false
      });
    }

    return this;
  } // try to find the right one.


  var index = indexOf(state.pipes, dest);
  if (index === -1) return this;
  state.pipes.splice(index, 1);
  state.pipesCount -= 1;
  if (state.pipesCount === 1) state.pipes = state.pipes[0];
  dest.emit('unpipe', this, unpipeInfo);
  return this;
}; // set up data events if they are asked for
// Ensure readable listeners eventually get something


Readable.prototype.on = function (ev, fn) {
  var res = Stream.prototype.on.call(this, ev, fn);
  var state = this._readableState;

  if (ev === 'data') {
    // update readableListening so that resume() may be a no-op
    // a few lines down. This is needed to support once('readable').
    state.readableListening = this.listenerCount('readable') > 0; // Try start flowing on next tick if stream isn't explicitly paused

    if (state.flowing !== false) this.resume();
  } else if (ev === 'readable') {
    if (!state.endEmitted && !state.readableListening) {
      state.readableListening = state.needReadable = true;
      state.flowing = false;
      state.emittedReadable = false;
      debug('on readable', state.length, state.reading);

      if (state.length) {
        emitReadable(this);
      } else if (!state.reading) {
        process.nextTick(nReadingNextTick, this);
      }
    }
  }

  return res;
};

Readable.prototype.addListener = Readable.prototype.on;

Readable.prototype.removeListener = function (ev, fn) {
  var res = Stream.prototype.removeListener.call(this, ev, fn);

  if (ev === 'readable') {
    // We need to check if there is someone still listening to
    // readable and reset the state. However this needs to happen
    // after readable has been emitted but before I/O (nextTick) to
    // support once('readable', fn) cycles. This means that calling
    // resume within the same tick will have no
    // effect.
    process.nextTick(updateReadableListening, this);
  }

  return res;
};

Readable.prototype.removeAllListeners = function (ev) {
  var res = Stream.prototype.removeAllListeners.apply(this, arguments);

  if (ev === 'readable' || ev === undefined) {
    // We need to check if there is someone still listening to
    // readable and reset the state. However this needs to happen
    // after readable has been emitted but before I/O (nextTick) to
    // support once('readable', fn) cycles. This means that calling
    // resume within the same tick will have no
    // effect.
    process.nextTick(updateReadableListening, this);
  }

  return res;
};

function updateReadableListening(self) {
  var state = self._readableState;
  state.readableListening = self.listenerCount('readable') > 0;

  if (state.resumeScheduled && !state.paused) {
    // flowing needs to be set to true now, otherwise
    // the upcoming resume will not flow.
    state.flowing = true; // crude way to check if we should resume
  } else if (self.listenerCount('data') > 0) {
    self.resume();
  }
}

function nReadingNextTick(self) {
  debug('readable nexttick read 0');
  self.read(0);
} // pause() and resume() are remnants of the legacy readable stream API
// If the user uses them, then switch into old mode.


Readable.prototype.resume = function () {
  var state = this._readableState;

  if (!state.flowing) {
    debug('resume'); // we flow only if there is no one listening
    // for readable, but we still have to call
    // resume()

    state.flowing = !state.readableListening;
    resume(this, state);
  }

  state.paused = false;
  return this;
};

function resume(stream, state) {
  if (!state.resumeScheduled) {
    state.resumeScheduled = true;
    process.nextTick(resume_, stream, state);
  }
}

function resume_(stream, state) {
  debug('resume', state.reading);

  if (!state.reading) {
    stream.read(0);
  }

  state.resumeScheduled = false;
  stream.emit('resume');
  flow(stream);
  if (state.flowing && !state.reading) stream.read(0);
}

Readable.prototype.pause = function () {
  debug('call pause flowing=%j', this._readableState.flowing);

  if (this._readableState.flowing !== false) {
    debug('pause');
    this._readableState.flowing = false;
    this.emit('pause');
  }

  this._readableState.paused = true;
  return this;
};

function flow(stream) {
  var state = stream._readableState;
  debug('flow', state.flowing);

  while (state.flowing && stream.read() !== null) {
    ;
  }
} // wrap an old-style stream as the async data source.
// This is *not* part of the readable stream interface.
// It is an ugly unfortunate mess of history.


Readable.prototype.wrap = function (stream) {
  var _this = this;

  var state = this._readableState;
  var paused = false;
  stream.on('end', function () {
    debug('wrapped end');

    if (state.decoder && !state.ended) {
      var chunk = state.decoder.end();
      if (chunk && chunk.length) _this.push(chunk);
    }

    _this.push(null);
  });
  stream.on('data', function (chunk) {
    debug('wrapped data');
    if (state.decoder) chunk = state.decoder.write(chunk); // don't skip over falsy values in objectMode

    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;

    var ret = _this.push(chunk);

    if (!ret) {
      paused = true;
      stream.pause();
    }
  }); // proxy all the other methods.
  // important when wrapping filters and duplexes.

  for (var i in stream) {
    if (this[i] === undefined && typeof stream[i] === 'function') {
      this[i] = function methodWrap(method) {
        return function methodWrapReturnFunction() {
          return stream[method].apply(stream, arguments);
        };
      }(i);
    }
  } // proxy certain important events.


  for (var n = 0; n < kProxyEvents.length; n++) {
    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));
  } // when we try to consume some more bytes, simply unpause the
  // underlying stream.


  this._read = function (n) {
    debug('wrapped _read', n);

    if (paused) {
      paused = false;
      stream.resume();
    }
  };

  return this;
};

if (typeof Symbol === 'function') {
  Readable.prototype[Symbol.asyncIterator] = function () {
    if (createReadableStreamAsyncIterator === undefined) {
      createReadableStreamAsyncIterator = require('./internal/streams/async_iterator');
    }

    return createReadableStreamAsyncIterator(this);
  };
}

Object.defineProperty(Readable.prototype, 'readableHighWaterMark', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._readableState.highWaterMark;
  }
});
Object.defineProperty(Readable.prototype, 'readableBuffer', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._readableState && this._readableState.buffer;
  }
});
Object.defineProperty(Readable.prototype, 'readableFlowing', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._readableState.flowing;
  },
  set: function set(state) {
    if (this._readableState) {
      this._readableState.flowing = state;
    }
  }
}); // exposed for testing purposes only.

Readable._fromList = fromList;
Object.defineProperty(Readable.prototype, 'readableLength', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._readableState.length;
  }
}); // Pluck off n bytes from an array of buffers.
// Length is the combined lengths of all the buffers in the list.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.

function fromList(n, state) {
  // nothing buffered
  if (state.length === 0) return null;
  var ret;
  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {
    // read it all, truncate the list
    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.first();else ret = state.buffer.concat(state.length);
    state.buffer.clear();
  } else {
    // read part of list
    ret = state.buffer.consume(n, state.decoder);
  }
  return ret;
}

function endReadable(stream) {
  var state = stream._readableState;
  debug('endReadable', state.endEmitted);

  if (!state.endEmitted) {
    state.ended = true;
    process.nextTick(endReadableNT, state, stream);
  }
}

function endReadableNT(state, stream) {
  debug('endReadableNT', state.endEmitted, state.length); // Check that we didn't get one last unshift.

  if (!state.endEmitted && state.length === 0) {
    state.endEmitted = true;
    stream.readable = false;
    stream.emit('end');

    if (state.autoDestroy) {
      // In case of duplex streams we need a way to detect
      // if the writable side is ready for autoDestroy as well
      var wState = stream._writableState;

      if (!wState || wState.autoDestroy && wState.finished) {
        stream.destroy();
      }
    }
  }
}

if (typeof Symbol === 'function') {
  Readable.from = function (iterable, opts) {
    if (from === undefined) {
      from = require('./internal/streams/from');
    }

    return from(Readable, iterable, opts);
  };
}

function indexOf(xs, x) {
  for (var i = 0, l = xs.length; i < l; i++) {
    if (xs[i] === x) return i;
  }

  return -1;
}
}).call(this)}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"../errors":119,"./_stream_duplex":120,"./internal/streams/async_iterator":125,"./internal/streams/buffer_list":126,"./internal/streams/destroy":127,"./internal/streams/from":129,"./internal/streams/state":131,"./internal/streams/stream":132,"_process":209,"buffer":115,"events":116,"inherits":204,"string_decoder/":216,"util":113}],123:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
// a transform stream is a readable/writable stream where you do
// something with the data.  Sometimes it's called a "filter",
// but that's not a great name for it, since that implies a thing where
// some bits pass through, and others are simply ignored.  (That would
// be a valid example of a transform, of course.)
//
// While the output is causally related to the input, it's not a
// necessarily symmetric or synchronous transformation.  For example,
// a zlib stream might take multiple plain-text writes(), and then
// emit a single compressed chunk some time in the future.
//
// Here's how this works:
//
// The Transform stream has all the aspects of the readable and writable
// stream classes.  When you write(chunk), that calls _write(chunk,cb)
// internally, and returns false if there's a lot of pending writes
// buffered up.  When you call read(), that calls _read(n) until
// there's enough pending readable data buffered up.
//
// In a transform stream, the written data is placed in a buffer.  When
// _read(n) is called, it transforms the queued up data, calling the
// buffered _write cb's as it consumes chunks.  If consuming a single
// written chunk would result in multiple output chunks, then the first
// outputted bit calls the readcb, and subsequent chunks just go into
// the read buffer, and will cause it to emit 'readable' if necessary.
//
// This way, back-pressure is actually determined by the reading side,
// since _read has to be called to start processing a new chunk.  However,
// a pathological inflate type of transform can cause excessive buffering
// here.  For example, imagine a stream where every byte of input is
// interpreted as an integer from 0-255, and then results in that many
// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in
// 1kb of data being output.  In this case, you could write a very small
// amount of input, and end up with a very large amount of output.  In
// such a pathological inflating mechanism, there'd be no way to tell
// the system to stop doing the transform.  A single 4MB write could
// cause the system to run out of memory.
//
// However, even in such a pathological case, only a single written chunk
// would be consumed, and then the rest would wait (un-transformed) until
// the results of the previous transformed chunk were consumed.
'use strict';

module.exports = Transform;

var _require$codes = require('../errors').codes,
    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,
    ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,
    ERR_TRANSFORM_ALREADY_TRANSFORMING = _require$codes.ERR_TRANSFORM_ALREADY_TRANSFORMING,
    ERR_TRANSFORM_WITH_LENGTH_0 = _require$codes.ERR_TRANSFORM_WITH_LENGTH_0;

var Duplex = require('./_stream_duplex');

require('inherits')(Transform, Duplex);

function afterTransform(er, data) {
  var ts = this._transformState;
  ts.transforming = false;
  var cb = ts.writecb;

  if (cb === null) {
    return this.emit('error', new ERR_MULTIPLE_CALLBACK());
  }

  ts.writechunk = null;
  ts.writecb = null;
  if (data != null) // single equals check for both `null` and `undefined`
    this.push(data);
  cb(er);
  var rs = this._readableState;
  rs.reading = false;

  if (rs.needReadable || rs.length < rs.highWaterMark) {
    this._read(rs.highWaterMark);
  }
}

function Transform(options) {
  if (!(this instanceof Transform)) return new Transform(options);
  Duplex.call(this, options);
  this._transformState = {
    afterTransform: afterTransform.bind(this),
    needTransform: false,
    transforming: false,
    writecb: null,
    writechunk: null,
    writeencoding: null
  }; // start out asking for a readable event once data is transformed.

  this._readableState.needReadable = true; // we have implemented the _read method, and done the other things
  // that Readable wants before the first _read call, so unset the
  // sync guard flag.

  this._readableState.sync = false;

  if (options) {
    if (typeof options.transform === 'function') this._transform = options.transform;
    if (typeof options.flush === 'function') this._flush = options.flush;
  } // When the writable side finishes, then flush out anything remaining.


  this.on('prefinish', prefinish);
}

function prefinish() {
  var _this = this;

  if (typeof this._flush === 'function' && !this._readableState.destroyed) {
    this._flush(function (er, data) {
      done(_this, er, data);
    });
  } else {
    done(this, null, null);
  }
}

Transform.prototype.push = function (chunk, encoding) {
  this._transformState.needTransform = false;
  return Duplex.prototype.push.call(this, chunk, encoding);
}; // This is the part where you do stuff!
// override this function in implementation classes.
// 'chunk' is an input chunk.
//
// Call `push(newChunk)` to pass along transformed output
// to the readable side.  You may call 'push' zero or more times.
//
// Call `cb(err)` when you are done with this chunk.  If you pass
// an error, then that'll put the hurt on the whole operation.  If you
// never call cb(), then you'll never get another chunk.


Transform.prototype._transform = function (chunk, encoding, cb) {
  cb(new ERR_METHOD_NOT_IMPLEMENTED('_transform()'));
};

Transform.prototype._write = function (chunk, encoding, cb) {
  var ts = this._transformState;
  ts.writecb = cb;
  ts.writechunk = chunk;
  ts.writeencoding = encoding;

  if (!ts.transforming) {
    var rs = this._readableState;
    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);
  }
}; // Doesn't matter what the args are here.
// _transform does all the work.
// That we got here means that the readable side wants more data.


Transform.prototype._read = function (n) {
  var ts = this._transformState;

  if (ts.writechunk !== null && !ts.transforming) {
    ts.transforming = true;

    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);
  } else {
    // mark that we need a transform, so that any data that comes in
    // will get processed, now that we've asked for it.
    ts.needTransform = true;
  }
};

Transform.prototype._destroy = function (err, cb) {
  Duplex.prototype._destroy.call(this, err, function (err2) {
    cb(err2);
  });
};

function done(stream, er, data) {
  if (er) return stream.emit('error', er);
  if (data != null) // single equals check for both `null` and `undefined`
    stream.push(data); // TODO(BridgeAR): Write a test for these two error cases
  // if there's nothing in the write buffer, then that means
  // that nothing more will ever be provided

  if (stream._writableState.length) throw new ERR_TRANSFORM_WITH_LENGTH_0();
  if (stream._transformState.transforming) throw new ERR_TRANSFORM_ALREADY_TRANSFORMING();
  return stream.push(null);
}
},{"../errors":119,"./_stream_duplex":120,"inherits":204}],124:[function(require,module,exports){
(function (process,global){(function (){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
// A bit simpler than readable streams.
// Implement an async ._write(chunk, encoding, cb), and it'll handle all
// the drain event emission and buffering.
'use strict';

module.exports = Writable;
/* <replacement> */

function WriteReq(chunk, encoding, cb) {
  this.chunk = chunk;
  this.encoding = encoding;
  this.callback = cb;
  this.next = null;
} // It seems a linked list but it is not
// there will be only 2 of these for each stream


function CorkedRequest(state) {
  var _this = this;

  this.next = null;
  this.entry = null;

  this.finish = function () {
    onCorkedFinish(_this, state);
  };
}
/* </replacement> */

/*<replacement>*/


var Duplex;
/*</replacement>*/

Writable.WritableState = WritableState;
/*<replacement>*/

var internalUtil = {
  deprecate: require('util-deprecate')
};
/*</replacement>*/

/*<replacement>*/

var Stream = require('./internal/streams/stream');
/*</replacement>*/


var Buffer = require('buffer').Buffer;

var OurUint8Array = global.Uint8Array || function () {};

function _uint8ArrayToBuffer(chunk) {
  return Buffer.from(chunk);
}

function _isUint8Array(obj) {
  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;
}

var destroyImpl = require('./internal/streams/destroy');

var _require = require('./internal/streams/state'),
    getHighWaterMark = _require.getHighWaterMark;

var _require$codes = require('../errors').codes,
    ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,
    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,
    ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,
    ERR_STREAM_CANNOT_PIPE = _require$codes.ERR_STREAM_CANNOT_PIPE,
    ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED,
    ERR_STREAM_NULL_VALUES = _require$codes.ERR_STREAM_NULL_VALUES,
    ERR_STREAM_WRITE_AFTER_END = _require$codes.ERR_STREAM_WRITE_AFTER_END,
    ERR_UNKNOWN_ENCODING = _require$codes.ERR_UNKNOWN_ENCODING;

var errorOrDestroy = destroyImpl.errorOrDestroy;

require('inherits')(Writable, Stream);

function nop() {}

function WritableState(options, stream, isDuplex) {
  Duplex = Duplex || require('./_stream_duplex');
  options = options || {}; // Duplex streams are both readable and writable, but share
  // the same options object.
  // However, some cases require setting options to different
  // values for the readable and the writable sides of the duplex stream,
  // e.g. options.readableObjectMode vs. options.writableObjectMode, etc.

  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex; // object stream flag to indicate whether or not this stream
  // contains buffers or objects.

  this.objectMode = !!options.objectMode;
  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode; // the point at which write() starts returning false
  // Note: 0 is a valid value, means that we always return false if
  // the entire buffer is not flushed immediately on write()

  this.highWaterMark = getHighWaterMark(this, options, 'writableHighWaterMark', isDuplex); // if _final has been called

  this.finalCalled = false; // drain event flag.

  this.needDrain = false; // at the start of calling end()

  this.ending = false; // when end() has been called, and returned

  this.ended = false; // when 'finish' is emitted

  this.finished = false; // has it been destroyed

  this.destroyed = false; // should we decode strings into buffers before passing to _write?
  // this is here so that some node-core streams can optimize string
  // handling at a lower level.

  var noDecode = options.decodeStrings === false;
  this.decodeStrings = !noDecode; // Crypto is kind of old and crusty.  Historically, its default string
  // encoding is 'binary' so we have to make this configurable.
  // Everything else in the universe uses 'utf8', though.

  this.defaultEncoding = options.defaultEncoding || 'utf8'; // not an actual buffer we keep track of, but a measurement
  // of how much we're waiting to get pushed to some underlying
  // socket or file.

  this.length = 0; // a flag to see when we're in the middle of a write.

  this.writing = false; // when true all writes will be buffered until .uncork() call

  this.corked = 0; // a flag to be able to tell if the onwrite cb is called immediately,
  // or on a later tick.  We set this to true at first, because any
  // actions that shouldn't happen until "later" should generally also
  // not happen before the first write call.

  this.sync = true; // a flag to know if we're processing previously buffered items, which
  // may call the _write() callback in the same tick, so that we don't
  // end up in an overlapped onwrite situation.

  this.bufferProcessing = false; // the callback that's passed to _write(chunk,cb)

  this.onwrite = function (er) {
    onwrite(stream, er);
  }; // the callback that the user supplies to write(chunk,encoding,cb)


  this.writecb = null; // the amount that is being written when _write is called.

  this.writelen = 0;
  this.bufferedRequest = null;
  this.lastBufferedRequest = null; // number of pending user-supplied write callbacks
  // this must be 0 before 'finish' can be emitted

  this.pendingcb = 0; // emit prefinish if the only thing we're waiting for is _write cbs
  // This is relevant for synchronous Transform streams

  this.prefinished = false; // True if the error was already emitted and should not be thrown again

  this.errorEmitted = false; // Should close be emitted on destroy. Defaults to true.

  this.emitClose = options.emitClose !== false; // Should .destroy() be called after 'finish' (and potentially 'end')

  this.autoDestroy = !!options.autoDestroy; // count buffered requests

  this.bufferedRequestCount = 0; // allocate the first CorkedRequest, there is always
  // one allocated and free to use, and we maintain at most two

  this.corkedRequestsFree = new CorkedRequest(this);
}

WritableState.prototype.getBuffer = function getBuffer() {
  var current = this.bufferedRequest;
  var out = [];

  while (current) {
    out.push(current);
    current = current.next;
  }

  return out;
};

(function () {
  try {
    Object.defineProperty(WritableState.prototype, 'buffer', {
      get: internalUtil.deprecate(function writableStateBufferGetter() {
        return this.getBuffer();
      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')
    });
  } catch (_) {}
})(); // Test _writableState for inheritance to account for Duplex streams,
// whose prototype chain only points to Readable.


var realHasInstance;

if (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {
  realHasInstance = Function.prototype[Symbol.hasInstance];
  Object.defineProperty(Writable, Symbol.hasInstance, {
    value: function value(object) {
      if (realHasInstance.call(this, object)) return true;
      if (this !== Writable) return false;
      return object && object._writableState instanceof WritableState;
    }
  });
} else {
  realHasInstance = function realHasInstance(object) {
    return object instanceof this;
  };
}

function Writable(options) {
  Duplex = Duplex || require('./_stream_duplex'); // Writable ctor is applied to Duplexes, too.
  // `realHasInstance` is necessary because using plain `instanceof`
  // would return false, as no `_writableState` property is attached.
  // Trying to use the custom `instanceof` for Writable here will also break the
  // Node.js LazyTransform implementation, which has a non-trivial getter for
  // `_writableState` that would lead to infinite recursion.
  // Checking for a Stream.Duplex instance is faster here instead of inside
  // the WritableState constructor, at least with V8 6.5

  var isDuplex = this instanceof Duplex;
  if (!isDuplex && !realHasInstance.call(Writable, this)) return new Writable(options);
  this._writableState = new WritableState(options, this, isDuplex); // legacy.

  this.writable = true;

  if (options) {
    if (typeof options.write === 'function') this._write = options.write;
    if (typeof options.writev === 'function') this._writev = options.writev;
    if (typeof options.destroy === 'function') this._destroy = options.destroy;
    if (typeof options.final === 'function') this._final = options.final;
  }

  Stream.call(this);
} // Otherwise people can pipe Writable streams, which is just wrong.


Writable.prototype.pipe = function () {
  errorOrDestroy(this, new ERR_STREAM_CANNOT_PIPE());
};

function writeAfterEnd(stream, cb) {
  var er = new ERR_STREAM_WRITE_AFTER_END(); // TODO: defer error events consistently everywhere, not just the cb

  errorOrDestroy(stream, er);
  process.nextTick(cb, er);
} // Checks that a user-supplied chunk is valid, especially for the particular
// mode the stream is in. Currently this means that `null` is never accepted
// and undefined/non-string values are only allowed in object mode.


function validChunk(stream, state, chunk, cb) {
  var er;

  if (chunk === null) {
    er = new ERR_STREAM_NULL_VALUES();
  } else if (typeof chunk !== 'string' && !state.objectMode) {
    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer'], chunk);
  }

  if (er) {
    errorOrDestroy(stream, er);
    process.nextTick(cb, er);
    return false;
  }

  return true;
}

Writable.prototype.write = function (chunk, encoding, cb) {
  var state = this._writableState;
  var ret = false;

  var isBuf = !state.objectMode && _isUint8Array(chunk);

  if (isBuf && !Buffer.isBuffer(chunk)) {
    chunk = _uint8ArrayToBuffer(chunk);
  }

  if (typeof encoding === 'function') {
    cb = encoding;
    encoding = null;
  }

  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;
  if (typeof cb !== 'function') cb = nop;
  if (state.ending) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {
    state.pendingcb++;
    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);
  }
  return ret;
};

Writable.prototype.cork = function () {
  this._writableState.corked++;
};

Writable.prototype.uncork = function () {
  var state = this._writableState;

  if (state.corked) {
    state.corked--;
    if (!state.writing && !state.corked && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);
  }
};

Writable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {
  // node::ParseEncoding() requires lower case.
  if (typeof encoding === 'string') encoding = encoding.toLowerCase();
  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new ERR_UNKNOWN_ENCODING(encoding);
  this._writableState.defaultEncoding = encoding;
  return this;
};

Object.defineProperty(Writable.prototype, 'writableBuffer', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._writableState && this._writableState.getBuffer();
  }
});

function decodeChunk(state, chunk, encoding) {
  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {
    chunk = Buffer.from(chunk, encoding);
  }

  return chunk;
}

Object.defineProperty(Writable.prototype, 'writableHighWaterMark', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._writableState.highWaterMark;
  }
}); // if we're already writing something, then just put this
// in the queue, and wait our turn.  Otherwise, call _write
// If we return false, then we need a drain event, so set that flag.

function writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {
  if (!isBuf) {
    var newChunk = decodeChunk(state, chunk, encoding);

    if (chunk !== newChunk) {
      isBuf = true;
      encoding = 'buffer';
      chunk = newChunk;
    }
  }

  var len = state.objectMode ? 1 : chunk.length;
  state.length += len;
  var ret = state.length < state.highWaterMark; // we must ensure that previous needDrain will not be reset to false.

  if (!ret) state.needDrain = true;

  if (state.writing || state.corked) {
    var last = state.lastBufferedRequest;
    state.lastBufferedRequest = {
      chunk: chunk,
      encoding: encoding,
      isBuf: isBuf,
      callback: cb,
      next: null
    };

    if (last) {
      last.next = state.lastBufferedRequest;
    } else {
      state.bufferedRequest = state.lastBufferedRequest;
    }

    state.bufferedRequestCount += 1;
  } else {
    doWrite(stream, state, false, len, chunk, encoding, cb);
  }

  return ret;
}

function doWrite(stream, state, writev, len, chunk, encoding, cb) {
  state.writelen = len;
  state.writecb = cb;
  state.writing = true;
  state.sync = true;
  if (state.destroyed) state.onwrite(new ERR_STREAM_DESTROYED('write'));else if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);
  state.sync = false;
}

function onwriteError(stream, state, sync, er, cb) {
  --state.pendingcb;

  if (sync) {
    // defer the callback if we are being called synchronously
    // to avoid piling up things on the stack
    process.nextTick(cb, er); // this can emit finish, and it will always happen
    // after error

    process.nextTick(finishMaybe, stream, state);
    stream._writableState.errorEmitted = true;
    errorOrDestroy(stream, er);
  } else {
    // the caller expect this to happen before if
    // it is async
    cb(er);
    stream._writableState.errorEmitted = true;
    errorOrDestroy(stream, er); // this can emit finish, but finish must
    // always follow error

    finishMaybe(stream, state);
  }
}

function onwriteStateUpdate(state) {
  state.writing = false;
  state.writecb = null;
  state.length -= state.writelen;
  state.writelen = 0;
}

function onwrite(stream, er) {
  var state = stream._writableState;
  var sync = state.sync;
  var cb = state.writecb;
  if (typeof cb !== 'function') throw new ERR_MULTIPLE_CALLBACK();
  onwriteStateUpdate(state);
  if (er) onwriteError(stream, state, sync, er, cb);else {
    // Check if we're actually ready to finish, but don't emit yet
    var finished = needFinish(state) || stream.destroyed;

    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {
      clearBuffer(stream, state);
    }

    if (sync) {
      process.nextTick(afterWrite, stream, state, finished, cb);
    } else {
      afterWrite(stream, state, finished, cb);
    }
  }
}

function afterWrite(stream, state, finished, cb) {
  if (!finished) onwriteDrain(stream, state);
  state.pendingcb--;
  cb();
  finishMaybe(stream, state);
} // Must force callback to be called on nextTick, so that we don't
// emit 'drain' before the write() consumer gets the 'false' return
// value, and has a chance to attach a 'drain' listener.


function onwriteDrain(stream, state) {
  if (state.length === 0 && state.needDrain) {
    state.needDrain = false;
    stream.emit('drain');
  }
} // if there's something in the buffer waiting, then process it


function clearBuffer(stream, state) {
  state.bufferProcessing = true;
  var entry = state.bufferedRequest;

  if (stream._writev && entry && entry.next) {
    // Fast case, write everything using _writev()
    var l = state.bufferedRequestCount;
    var buffer = new Array(l);
    var holder = state.corkedRequestsFree;
    holder.entry = entry;
    var count = 0;
    var allBuffers = true;

    while (entry) {
      buffer[count] = entry;
      if (!entry.isBuf) allBuffers = false;
      entry = entry.next;
      count += 1;
    }

    buffer.allBuffers = allBuffers;
    doWrite(stream, state, true, state.length, buffer, '', holder.finish); // doWrite is almost always async, defer these to save a bit of time
    // as the hot path ends with doWrite

    state.pendingcb++;
    state.lastBufferedRequest = null;

    if (holder.next) {
      state.corkedRequestsFree = holder.next;
      holder.next = null;
    } else {
      state.corkedRequestsFree = new CorkedRequest(state);
    }

    state.bufferedRequestCount = 0;
  } else {
    // Slow case, write chunks one-by-one
    while (entry) {
      var chunk = entry.chunk;
      var encoding = entry.encoding;
      var cb = entry.callback;
      var len = state.objectMode ? 1 : chunk.length;
      doWrite(stream, state, false, len, chunk, encoding, cb);
      entry = entry.next;
      state.bufferedRequestCount--; // if we didn't call the onwrite immediately, then
      // it means that we need to wait until it does.
      // also, that means that the chunk and cb are currently
      // being processed, so move the buffer counter past them.

      if (state.writing) {
        break;
      }
    }

    if (entry === null) state.lastBufferedRequest = null;
  }

  state.bufferedRequest = entry;
  state.bufferProcessing = false;
}

Writable.prototype._write = function (chunk, encoding, cb) {
  cb(new ERR_METHOD_NOT_IMPLEMENTED('_write()'));
};

Writable.prototype._writev = null;

Writable.prototype.end = function (chunk, encoding, cb) {
  var state = this._writableState;

  if (typeof chunk === 'function') {
    cb = chunk;
    chunk = null;
    encoding = null;
  } else if (typeof encoding === 'function') {
    cb = encoding;
    encoding = null;
  }

  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding); // .end() fully uncorks

  if (state.corked) {
    state.corked = 1;
    this.uncork();
  } // ignore unnecessary end() calls.


  if (!state.ending) endWritable(this, state, cb);
  return this;
};

Object.defineProperty(Writable.prototype, 'writableLength', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._writableState.length;
  }
});

function needFinish(state) {
  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;
}

function callFinal(stream, state) {
  stream._final(function (err) {
    state.pendingcb--;

    if (err) {
      errorOrDestroy(stream, err);
    }

    state.prefinished = true;
    stream.emit('prefinish');
    finishMaybe(stream, state);
  });
}

function prefinish(stream, state) {
  if (!state.prefinished && !state.finalCalled) {
    if (typeof stream._final === 'function' && !state.destroyed) {
      state.pendingcb++;
      state.finalCalled = true;
      process.nextTick(callFinal, stream, state);
    } else {
      state.prefinished = true;
      stream.emit('prefinish');
    }
  }
}

function finishMaybe(stream, state) {
  var need = needFinish(state);

  if (need) {
    prefinish(stream, state);

    if (state.pendingcb === 0) {
      state.finished = true;
      stream.emit('finish');

      if (state.autoDestroy) {
        // In case of duplex streams we need a way to detect
        // if the readable side is ready for autoDestroy as well
        var rState = stream._readableState;

        if (!rState || rState.autoDestroy && rState.endEmitted) {
          stream.destroy();
        }
      }
    }
  }

  return need;
}

function endWritable(stream, state, cb) {
  state.ending = true;
  finishMaybe(stream, state);

  if (cb) {
    if (state.finished) process.nextTick(cb);else stream.once('finish', cb);
  }

  state.ended = true;
  stream.writable = false;
}

function onCorkedFinish(corkReq, state, err) {
  var entry = corkReq.entry;
  corkReq.entry = null;

  while (entry) {
    var cb = entry.callback;
    state.pendingcb--;
    cb(err);
    entry = entry.next;
  } // reuse the free corkReq.


  state.corkedRequestsFree.next = corkReq;
}

Object.defineProperty(Writable.prototype, 'destroyed', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    if (this._writableState === undefined) {
      return false;
    }

    return this._writableState.destroyed;
  },
  set: function set(value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (!this._writableState) {
      return;
    } // backward compatibility, the user is explicitly
    // managing destroyed


    this._writableState.destroyed = value;
  }
});
Writable.prototype.destroy = destroyImpl.destroy;
Writable.prototype._undestroy = destroyImpl.undestroy;

Writable.prototype._destroy = function (err, cb) {
  cb(err);
};
}).call(this)}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"../errors":119,"./_stream_duplex":120,"./internal/streams/destroy":127,"./internal/streams/state":131,"./internal/streams/stream":132,"_process":209,"buffer":115,"inherits":204,"util-deprecate":225}],125:[function(require,module,exports){
(function (process){(function (){
'use strict';

var _Object$setPrototypeO;

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var finished = require('./end-of-stream');

var kLastResolve = Symbol('lastResolve');
var kLastReject = Symbol('lastReject');
var kError = Symbol('error');
var kEnded = Symbol('ended');
var kLastPromise = Symbol('lastPromise');
var kHandlePromise = Symbol('handlePromise');
var kStream = Symbol('stream');

function createIterResult(value, done) {
  return {
    value: value,
    done: done
  };
}

function readAndResolve(iter) {
  var resolve = iter[kLastResolve];

  if (resolve !== null) {
    var data = iter[kStream].read(); // we defer if data is null
    // we can be expecting either 'end' or
    // 'error'

    if (data !== null) {
      iter[kLastPromise] = null;
      iter[kLastResolve] = null;
      iter[kLastReject] = null;
      resolve(createIterResult(data, false));
    }
  }
}

function onReadable(iter) {
  // we wait for the next tick, because it might
  // emit an error with process.nextTick
  process.nextTick(readAndResolve, iter);
}

function wrapForNext(lastPromise, iter) {
  return function (resolve, reject) {
    lastPromise.then(function () {
      if (iter[kEnded]) {
        resolve(createIterResult(undefined, true));
        return;
      }

      iter[kHandlePromise](resolve, reject);
    }, reject);
  };
}

var AsyncIteratorPrototype = Object.getPrototypeOf(function () {});
var ReadableStreamAsyncIteratorPrototype = Object.setPrototypeOf((_Object$setPrototypeO = {
  get stream() {
    return this[kStream];
  },

  next: function next() {
    var _this = this;

    // if we have detected an error in the meanwhile
    // reject straight away
    var error = this[kError];

    if (error !== null) {
      return Promise.reject(error);
    }

    if (this[kEnded]) {
      return Promise.resolve(createIterResult(undefined, true));
    }

    if (this[kStream].destroyed) {
      // We need to defer via nextTick because if .destroy(err) is
      // called, the error will be emitted via nextTick, and
      // we cannot guarantee that there is no error lingering around
      // waiting to be emitted.
      return new Promise(function (resolve, reject) {
        process.nextTick(function () {
          if (_this[kError]) {
            reject(_this[kError]);
          } else {
            resolve(createIterResult(undefined, true));
          }
        });
      });
    } // if we have multiple next() calls
    // we will wait for the previous Promise to finish
    // this logic is optimized to support for await loops,
    // where next() is only called once at a time


    var lastPromise = this[kLastPromise];
    var promise;

    if (lastPromise) {
      promise = new Promise(wrapForNext(lastPromise, this));
    } else {
      // fast path needed to support multiple this.push()
      // without triggering the next() queue
      var data = this[kStream].read();

      if (data !== null) {
        return Promise.resolve(createIterResult(data, false));
      }

      promise = new Promise(this[kHandlePromise]);
    }

    this[kLastPromise] = promise;
    return promise;
  }
}, _defineProperty(_Object$setPrototypeO, Symbol.asyncIterator, function () {
  return this;
}), _defineProperty(_Object$setPrototypeO, "return", function _return() {
  var _this2 = this;

  // destroy(err, cb) is a private API
  // we can guarantee we have that here, because we control the
  // Readable class this is attached to
  return new Promise(function (resolve, reject) {
    _this2[kStream].destroy(null, function (err) {
      if (err) {
        reject(err);
        return;
      }

      resolve(createIterResult(undefined, true));
    });
  });
}), _Object$setPrototypeO), AsyncIteratorPrototype);

var createReadableStreamAsyncIterator = function createReadableStreamAsyncIterator(stream) {
  var _Object$create;

  var iterator = Object.create(ReadableStreamAsyncIteratorPrototype, (_Object$create = {}, _defineProperty(_Object$create, kStream, {
    value: stream,
    writable: true
  }), _defineProperty(_Object$create, kLastResolve, {
    value: null,
    writable: true
  }), _defineProperty(_Object$create, kLastReject, {
    value: null,
    writable: true
  }), _defineProperty(_Object$create, kError, {
    value: null,
    writable: true
  }), _defineProperty(_Object$create, kEnded, {
    value: stream._readableState.endEmitted,
    writable: true
  }), _defineProperty(_Object$create, kHandlePromise, {
    value: function value(resolve, reject) {
      var data = iterator[kStream].read();

      if (data) {
        iterator[kLastPromise] = null;
        iterator[kLastResolve] = null;
        iterator[kLastReject] = null;
        resolve(createIterResult(data, false));
      } else {
        iterator[kLastResolve] = resolve;
        iterator[kLastReject] = reject;
      }
    },
    writable: true
  }), _Object$create));
  iterator[kLastPromise] = null;
  finished(stream, function (err) {
    if (err && err.code !== 'ERR_STREAM_PREMATURE_CLOSE') {
      var reject = iterator[kLastReject]; // reject if we are waiting for data in the Promise
      // returned by next() and store the error

      if (reject !== null) {
        iterator[kLastPromise] = null;
        iterator[kLastResolve] = null;
        iterator[kLastReject] = null;
        reject(err);
      }

      iterator[kError] = err;
      return;
    }

    var resolve = iterator[kLastResolve];

    if (resolve !== null) {
      iterator[kLastPromise] = null;
      iterator[kLastResolve] = null;
      iterator[kLastReject] = null;
      resolve(createIterResult(undefined, true));
    }

    iterator[kEnded] = true;
  });
  stream.on('readable', onReadable.bind(null, iterator));
  return iterator;
};

module.exports = createReadableStreamAsyncIterator;
}).call(this)}).call(this,require('_process'))
},{"./end-of-stream":128,"_process":209}],126:[function(require,module,exports){
'use strict';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var _require = require('buffer'),
    Buffer = _require.Buffer;

var _require2 = require('util'),
    inspect = _require2.inspect;

var custom = inspect && inspect.custom || 'inspect';

function copyBuffer(src, target, offset) {
  Buffer.prototype.copy.call(src, target, offset);
}

module.exports =
/*#__PURE__*/
function () {
  function BufferList() {
    _classCallCheck(this, BufferList);

    this.head = null;
    this.tail = null;
    this.length = 0;
  }

  _createClass(BufferList, [{
    key: "push",
    value: function push(v) {
      var entry = {
        data: v,
        next: null
      };
      if (this.length > 0) this.tail.next = entry;else this.head = entry;
      this.tail = entry;
      ++this.length;
    }
  }, {
    key: "unshift",
    value: function unshift(v) {
      var entry = {
        data: v,
        next: this.head
      };
      if (this.length === 0) this.tail = entry;
      this.head = entry;
      ++this.length;
    }
  }, {
    key: "shift",
    value: function shift() {
      if (this.length === 0) return;
      var ret = this.head.data;
      if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;
      --this.length;
      return ret;
    }
  }, {
    key: "clear",
    value: function clear() {
      this.head = this.tail = null;
      this.length = 0;
    }
  }, {
    key: "join",
    value: function join(s) {
      if (this.length === 0) return '';
      var p = this.head;
      var ret = '' + p.data;

      while (p = p.next) {
        ret += s + p.data;
      }

      return ret;
    }
  }, {
    key: "concat",
    value: function concat(n) {
      if (this.length === 0) return Buffer.alloc(0);
      var ret = Buffer.allocUnsafe(n >>> 0);
      var p = this.head;
      var i = 0;

      while (p) {
        copyBuffer(p.data, ret, i);
        i += p.data.length;
        p = p.next;
      }

      return ret;
    } // Consumes a specified amount of bytes or characters from the buffered data.

  }, {
    key: "consume",
    value: function consume(n, hasStrings) {
      var ret;

      if (n < this.head.data.length) {
        // `slice` is the same for buffers and strings.
        ret = this.head.data.slice(0, n);
        this.head.data = this.head.data.slice(n);
      } else if (n === this.head.data.length) {
        // First chunk is a perfect match.
        ret = this.shift();
      } else {
        // Result spans more than one buffer.
        ret = hasStrings ? this._getString(n) : this._getBuffer(n);
      }

      return ret;
    }
  }, {
    key: "first",
    value: function first() {
      return this.head.data;
    } // Consumes a specified amount of characters from the buffered data.

  }, {
    key: "_getString",
    value: function _getString(n) {
      var p = this.head;
      var c = 1;
      var ret = p.data;
      n -= ret.length;

      while (p = p.next) {
        var str = p.data;
        var nb = n > str.length ? str.length : n;
        if (nb === str.length) ret += str;else ret += str.slice(0, n);
        n -= nb;

        if (n === 0) {
          if (nb === str.length) {
            ++c;
            if (p.next) this.head = p.next;else this.head = this.tail = null;
          } else {
            this.head = p;
            p.data = str.slice(nb);
          }

          break;
        }

        ++c;
      }

      this.length -= c;
      return ret;
    } // Consumes a specified amount of bytes from the buffered data.

  }, {
    key: "_getBuffer",
    value: function _getBuffer(n) {
      var ret = Buffer.allocUnsafe(n);
      var p = this.head;
      var c = 1;
      p.data.copy(ret);
      n -= p.data.length;

      while (p = p.next) {
        var buf = p.data;
        var nb = n > buf.length ? buf.length : n;
        buf.copy(ret, ret.length - n, 0, nb);
        n -= nb;

        if (n === 0) {
          if (nb === buf.length) {
            ++c;
            if (p.next) this.head = p.next;else this.head = this.tail = null;
          } else {
            this.head = p;
            p.data = buf.slice(nb);
          }

          break;
        }

        ++c;
      }

      this.length -= c;
      return ret;
    } // Make sure the linked list only shows the minimal necessary information.

  }, {
    key: custom,
    value: function value(_, options) {
      return inspect(this, _objectSpread({}, options, {
        // Only inspect one level.
        depth: 0,
        // It should not recurse.
        customInspect: false
      }));
    }
  }]);

  return BufferList;
}();
},{"buffer":115,"util":113}],127:[function(require,module,exports){
(function (process){(function (){
'use strict'; // undocumented cb() API, needed for core, not for public API

function destroy(err, cb) {
  var _this = this;

  var readableDestroyed = this._readableState && this._readableState.destroyed;
  var writableDestroyed = this._writableState && this._writableState.destroyed;

  if (readableDestroyed || writableDestroyed) {
    if (cb) {
      cb(err);
    } else if (err) {
      if (!this._writableState) {
        process.nextTick(emitErrorNT, this, err);
      } else if (!this._writableState.errorEmitted) {
        this._writableState.errorEmitted = true;
        process.nextTick(emitErrorNT, this, err);
      }
    }

    return this;
  } // we set destroyed to true before firing error callbacks in order
  // to make it re-entrance safe in case destroy() is called within callbacks


  if (this._readableState) {
    this._readableState.destroyed = true;
  } // if this is a duplex stream mark the writable part as destroyed as well


  if (this._writableState) {
    this._writableState.destroyed = true;
  }

  this._destroy(err || null, function (err) {
    if (!cb && err) {
      if (!_this._writableState) {
        process.nextTick(emitErrorAndCloseNT, _this, err);
      } else if (!_this._writableState.errorEmitted) {
        _this._writableState.errorEmitted = true;
        process.nextTick(emitErrorAndCloseNT, _this, err);
      } else {
        process.nextTick(emitCloseNT, _this);
      }
    } else if (cb) {
      process.nextTick(emitCloseNT, _this);
      cb(err);
    } else {
      process.nextTick(emitCloseNT, _this);
    }
  });

  return this;
}

function emitErrorAndCloseNT(self, err) {
  emitErrorNT(self, err);
  emitCloseNT(self);
}

function emitCloseNT(self) {
  if (self._writableState && !self._writableState.emitClose) return;
  if (self._readableState && !self._readableState.emitClose) return;
  self.emit('close');
}

function undestroy() {
  if (this._readableState) {
    this._readableState.destroyed = false;
    this._readableState.reading = false;
    this._readableState.ended = false;
    this._readableState.endEmitted = false;
  }

  if (this._writableState) {
    this._writableState.destroyed = false;
    this._writableState.ended = false;
    this._writableState.ending = false;
    this._writableState.finalCalled = false;
    this._writableState.prefinished = false;
    this._writableState.finished = false;
    this._writableState.errorEmitted = false;
  }
}

function emitErrorNT(self, err) {
  self.emit('error', err);
}

function errorOrDestroy(stream, err) {
  // We have tests that rely on errors being emitted
  // in the same tick, so changing this is semver major.
  // For now when you opt-in to autoDestroy we allow
  // the error to be emitted nextTick. In a future
  // semver major update we should change the default to this.
  var rState = stream._readableState;
  var wState = stream._writableState;
  if (rState && rState.autoDestroy || wState && wState.autoDestroy) stream.destroy(err);else stream.emit('error', err);
}

module.exports = {
  destroy: destroy,
  undestroy: undestroy,
  errorOrDestroy: errorOrDestroy
};
}).call(this)}).call(this,require('_process'))
},{"_process":209}],128:[function(require,module,exports){
// Ported from https://github.com/mafintosh/end-of-stream with
// permission from the author, Mathias Buus (@mafintosh).
'use strict';

var ERR_STREAM_PREMATURE_CLOSE = require('../../../errors').codes.ERR_STREAM_PREMATURE_CLOSE;

function once(callback) {
  var called = false;
  return function () {
    if (called) return;
    called = true;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    callback.apply(this, args);
  };
}

function noop() {}

function isRequest(stream) {
  return stream.setHeader && typeof stream.abort === 'function';
}

function eos(stream, opts, callback) {
  if (typeof opts === 'function') return eos(stream, null, opts);
  if (!opts) opts = {};
  callback = once(callback || noop);
  var readable = opts.readable || opts.readable !== false && stream.readable;
  var writable = opts.writable || opts.writable !== false && stream.writable;

  var onlegacyfinish = function onlegacyfinish() {
    if (!stream.writable) onfinish();
  };

  var writableEnded = stream._writableState && stream._writableState.finished;

  var onfinish = function onfinish() {
    writable = false;
    writableEnded = true;
    if (!readable) callback.call(stream);
  };

  var readableEnded = stream._readableState && stream._readableState.endEmitted;

  var onend = function onend() {
    readable = false;
    readableEnded = true;
    if (!writable) callback.call(stream);
  };

  var onerror = function onerror(err) {
    callback.call(stream, err);
  };

  var onclose = function onclose() {
    var err;

    if (readable && !readableEnded) {
      if (!stream._readableState || !stream._readableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();
      return callback.call(stream, err);
    }

    if (writable && !writableEnded) {
      if (!stream._writableState || !stream._writableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();
      return callback.call(stream, err);
    }
  };

  var onrequest = function onrequest() {
    stream.req.on('finish', onfinish);
  };

  if (isRequest(stream)) {
    stream.on('complete', onfinish);
    stream.on('abort', onclose);
    if (stream.req) onrequest();else stream.on('request', onrequest);
  } else if (writable && !stream._writableState) {
    // legacy streams
    stream.on('end', onlegacyfinish);
    stream.on('close', onlegacyfinish);
  }

  stream.on('end', onend);
  stream.on('finish', onfinish);
  if (opts.error !== false) stream.on('error', onerror);
  stream.on('close', onclose);
  return function () {
    stream.removeListener('complete', onfinish);
    stream.removeListener('abort', onclose);
    stream.removeListener('request', onrequest);
    if (stream.req) stream.req.removeListener('finish', onfinish);
    stream.removeListener('end', onlegacyfinish);
    stream.removeListener('close', onlegacyfinish);
    stream.removeListener('finish', onfinish);
    stream.removeListener('end', onend);
    stream.removeListener('error', onerror);
    stream.removeListener('close', onclose);
  };
}

module.exports = eos;
},{"../../../errors":119}],129:[function(require,module,exports){
module.exports = function () {
  throw new Error('Readable.from is not available in the browser')
};

},{}],130:[function(require,module,exports){
// Ported from https://github.com/mafintosh/pump with
// permission from the author, Mathias Buus (@mafintosh).
'use strict';

var eos;

function once(callback) {
  var called = false;
  return function () {
    if (called) return;
    called = true;
    callback.apply(void 0, arguments);
  };
}

var _require$codes = require('../../../errors').codes,
    ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS,
    ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED;

function noop(err) {
  // Rethrow the error if it exists to avoid swallowing it
  if (err) throw err;
}

function isRequest(stream) {
  return stream.setHeader && typeof stream.abort === 'function';
}

function destroyer(stream, reading, writing, callback) {
  callback = once(callback);
  var closed = false;
  stream.on('close', function () {
    closed = true;
  });
  if (eos === undefined) eos = require('./end-of-stream');
  eos(stream, {
    readable: reading,
    writable: writing
  }, function (err) {
    if (err) return callback(err);
    closed = true;
    callback();
  });
  var destroyed = false;
  return function (err) {
    if (closed) return;
    if (destroyed) return;
    destroyed = true; // request.destroy just do .end - .abort is what we want

    if (isRequest(stream)) return stream.abort();
    if (typeof stream.destroy === 'function') return stream.destroy();
    callback(err || new ERR_STREAM_DESTROYED('pipe'));
  };
}

function call(fn) {
  fn();
}

function pipe(from, to) {
  return from.pipe(to);
}

function popCallback(streams) {
  if (!streams.length) return noop;
  if (typeof streams[streams.length - 1] !== 'function') return noop;
  return streams.pop();
}

function pipeline() {
  for (var _len = arguments.length, streams = new Array(_len), _key = 0; _key < _len; _key++) {
    streams[_key] = arguments[_key];
  }

  var callback = popCallback(streams);
  if (Array.isArray(streams[0])) streams = streams[0];

  if (streams.length < 2) {
    throw new ERR_MISSING_ARGS('streams');
  }

  var error;
  var destroys = streams.map(function (stream, i) {
    var reading = i < streams.length - 1;
    var writing = i > 0;
    return destroyer(stream, reading, writing, function (err) {
      if (!error) error = err;
      if (err) destroys.forEach(call);
      if (reading) return;
      destroys.forEach(call);
      callback(error);
    });
  });
  return streams.reduce(pipe);
}

module.exports = pipeline;
},{"../../../errors":119,"./end-of-stream":128}],131:[function(require,module,exports){
'use strict';

var ERR_INVALID_OPT_VALUE = require('../../../errors').codes.ERR_INVALID_OPT_VALUE;

function highWaterMarkFrom(options, isDuplex, duplexKey) {
  return options.highWaterMark != null ? options.highWaterMark : isDuplex ? options[duplexKey] : null;
}

function getHighWaterMark(state, options, duplexKey, isDuplex) {
  var hwm = highWaterMarkFrom(options, isDuplex, duplexKey);

  if (hwm != null) {
    if (!(isFinite(hwm) && Math.floor(hwm) === hwm) || hwm < 0) {
      var name = isDuplex ? duplexKey : 'highWaterMark';
      throw new ERR_INVALID_OPT_VALUE(name, hwm);
    }

    return Math.floor(hwm);
  } // Default value


  return state.objectMode ? 16 : 16 * 1024;
}

module.exports = {
  getHighWaterMark: getHighWaterMark
};
},{"../../../errors":119}],132:[function(require,module,exports){
module.exports = require('events').EventEmitter;

},{"events":116}],133:[function(require,module,exports){
'use strict';

var GetIntrinsic = require('get-intrinsic');

var callBind = require('./');

var $indexOf = callBind(GetIntrinsic('String.prototype.indexOf'));

module.exports = function callBoundIntrinsic(name, allowMissing) {
	var intrinsic = GetIntrinsic(name, !!allowMissing);
	if (typeof intrinsic === 'function' && $indexOf(name, '.prototype.') > -1) {
		return callBind(intrinsic);
	}
	return intrinsic;
};

},{"./":134,"get-intrinsic":198}],134:[function(require,module,exports){
'use strict';

var bind = require('function-bind');
var GetIntrinsic = require('get-intrinsic');

var $apply = GetIntrinsic('%Function.prototype.apply%');
var $call = GetIntrinsic('%Function.prototype.call%');
var $reflectApply = GetIntrinsic('%Reflect.apply%', true) || bind.call($call, $apply);

var $gOPD = GetIntrinsic('%Object.getOwnPropertyDescriptor%', true);
var $defineProperty = GetIntrinsic('%Object.defineProperty%', true);
var $max = GetIntrinsic('%Math.max%');

if ($defineProperty) {
	try {
		$defineProperty({}, 'a', { value: 1 });
	} catch (e) {
		// IE 8 has a broken defineProperty
		$defineProperty = null;
	}
}

module.exports = function callBind(originalFunction) {
	var func = $reflectApply(bind, $call, arguments);
	if ($gOPD && $defineProperty) {
		var desc = $gOPD(func, 'length');
		if (desc.configurable) {
			// original length, plus the receiver, minus any additional arguments (after the receiver)
			$defineProperty(
				func,
				'length',
				{ value: 1 + $max(0, originalFunction.length - (arguments.length - 1)) }
			);
		}
	}
	return func;
};

var applyBind = function applyBind() {
	return $reflectApply(bind, $apply, arguments);
};

if ($defineProperty) {
	$defineProperty(module.exports, 'apply', { value: applyBind });
} else {
	module.exports.apply = applyBind;
}

},{"function-bind":197,"get-intrinsic":198}],135:[function(require,module,exports){
var pSlice = Array.prototype.slice;
var objectKeys = require('./lib/keys.js');
var isArguments = require('./lib/is_arguments.js');

var deepEqual = module.exports = function (actual, expected, opts) {
  if (!opts) opts = {};
  // 7.1. All identical values are equivalent, as determined by ===.
  if (actual === expected) {
    return true;

  } else if (actual instanceof Date && expected instanceof Date) {
    return actual.getTime() === expected.getTime();

  // 7.3. Other pairs that do not both pass typeof value == 'object',
  // equivalence is determined by ==.
  } else if (!actual || !expected || typeof actual != 'object' && typeof expected != 'object') {
    return opts.strict ? actual === expected : actual == expected;

  // 7.4. For all other Object pairs, including Array objects, equivalence is
  // determined by having the same number of owned properties (as verified
  // with Object.prototype.hasOwnProperty.call), the same set of keys
  // (although not necessarily the same order), equivalent values for every
  // corresponding key, and an identical 'prototype' property. Note: this
  // accounts for both named and indexed properties on Arrays.
  } else {
    return objEquiv(actual, expected, opts);
  }
}

function isUndefinedOrNull(value) {
  return value === null || value === undefined;
}

function isBuffer (x) {
  if (!x || typeof x !== 'object' || typeof x.length !== 'number') return false;
  if (typeof x.copy !== 'function' || typeof x.slice !== 'function') {
    return false;
  }
  if (x.length > 0 && typeof x[0] !== 'number') return false;
  return true;
}

function objEquiv(a, b, opts) {
  var i, key;
  if (isUndefinedOrNull(a) || isUndefinedOrNull(b))
    return false;
  // an identical 'prototype' property.
  if (a.prototype !== b.prototype) return false;
  //~~~I've managed to break Object.keys through screwy arguments passing.
  //   Converting to array solves the problem.
  if (isArguments(a)) {
    if (!isArguments(b)) {
      return false;
    }
    a = pSlice.call(a);
    b = pSlice.call(b);
    return deepEqual(a, b, opts);
  }
  if (isBuffer(a)) {
    if (!isBuffer(b)) {
      return false;
    }
    if (a.length !== b.length) return false;
    for (i = 0; i < a.length; i++) {
      if (a[i] !== b[i]) return false;
    }
    return true;
  }
  try {
    var ka = objectKeys(a),
        kb = objectKeys(b);
  } catch (e) {//happens when one is a string literal and the other isn't
    return false;
  }
  // having the same number of owned properties (keys incorporates
  // hasOwnProperty)
  if (ka.length != kb.length)
    return false;
  //the same set of keys (although not necessarily the same order),
  ka.sort();
  kb.sort();
  //~~~cheap key test
  for (i = ka.length - 1; i >= 0; i--) {
    if (ka[i] != kb[i])
      return false;
  }
  //equivalent values for every corresponding key, and
  //~~~possibly expensive deep test
  for (i = ka.length - 1; i >= 0; i--) {
    key = ka[i];
    if (!deepEqual(a[key], b[key], opts)) return false;
  }
  return typeof a === typeof b;
}

},{"./lib/is_arguments.js":136,"./lib/keys.js":137}],136:[function(require,module,exports){
var supportsArgumentsClass = (function(){
  return Object.prototype.toString.call(arguments)
})() == '[object Arguments]';

exports = module.exports = supportsArgumentsClass ? supported : unsupported;

exports.supported = supported;
function supported(object) {
  return Object.prototype.toString.call(object) == '[object Arguments]';
};

exports.unsupported = unsupported;
function unsupported(object){
  return object &&
    typeof object == 'object' &&
    typeof object.length == 'number' &&
    Object.prototype.hasOwnProperty.call(object, 'callee') &&
    !Object.prototype.propertyIsEnumerable.call(object, 'callee') ||
    false;
};

},{}],137:[function(require,module,exports){
exports = module.exports = typeof Object.keys === 'function'
  ? Object.keys : shim;

exports.shim = shim;
function shim (obj) {
  var keys = [];
  for (var key in obj) keys.push(key);
  return keys;
}

},{}],138:[function(require,module,exports){
'use strict';

var keys = require('object-keys');
var hasSymbols = typeof Symbol === 'function' && typeof Symbol('foo') === 'symbol';

var toStr = Object.prototype.toString;
var concat = Array.prototype.concat;
var origDefineProperty = Object.defineProperty;

var isFunction = function (fn) {
	return typeof fn === 'function' && toStr.call(fn) === '[object Function]';
};

var hasPropertyDescriptors = require('has-property-descriptors')();

var supportsDescriptors = origDefineProperty && hasPropertyDescriptors;

var defineProperty = function (object, name, value, predicate) {
	if (name in object && (!isFunction(predicate) || !predicate())) {
		return;
	}
	if (supportsDescriptors) {
		origDefineProperty(object, name, {
			configurable: true,
			enumerable: false,
			value: value,
			writable: true
		});
	} else {
		object[name] = value; // eslint-disable-line no-param-reassign
	}
};

var defineProperties = function (object, map) {
	var predicates = arguments.length > 2 ? arguments[2] : {};
	var props = keys(map);
	if (hasSymbols) {
		props = concat.call(props, Object.getOwnPropertySymbols(map));
	}
	for (var i = 0; i < props.length; i += 1) {
		defineProperty(object, props[i], map[props[i]], predicates[props[i]]);
	}
};

defineProperties.supportsDescriptors = !!supportsDescriptors;

module.exports = defineProperties;

},{"has-property-descriptors":199,"object-keys":207}],139:[function(require,module,exports){
module.exports = function () {
    for (var i = 0; i < arguments.length; i++) {
        if (arguments[i] !== undefined) return arguments[i];
    }
};

},{}],140:[function(require,module,exports){
'use strict';

var ToNumber = require('./ToNumber');
var ToPrimitive = require('./ToPrimitive');
var Type = require('./Type');

// https://262.ecma-international.org/5.1/#sec-11.9.3

module.exports = function AbstractEqualityComparison(x, y) {
	var xType = Type(x);
	var yType = Type(y);
	if (xType === yType) {
		return x === y; // ES6+ specified this shortcut anyways.
	}
	if (x == null && y == null) {
		return true;
	}
	if (xType === 'Number' && yType === 'String') {
		return AbstractEqualityComparison(x, ToNumber(y));
	}
	if (xType === 'String' && yType === 'Number') {
		return AbstractEqualityComparison(ToNumber(x), y);
	}
	if (xType === 'Boolean') {
		return AbstractEqualityComparison(ToNumber(x), y);
	}
	if (yType === 'Boolean') {
		return AbstractEqualityComparison(x, ToNumber(y));
	}
	if ((xType === 'String' || xType === 'Number') && yType === 'Object') {
		return AbstractEqualityComparison(x, ToPrimitive(y));
	}
	if (xType === 'Object' && (yType === 'String' || yType === 'Number')) {
		return AbstractEqualityComparison(ToPrimitive(x), y);
	}
	return false;
};

},{"./ToNumber":170,"./ToPrimitive":172,"./Type":177}],141:[function(require,module,exports){
'use strict';

var GetIntrinsic = require('get-intrinsic');

var $Number = GetIntrinsic('%Number%');
var $TypeError = GetIntrinsic('%TypeError%');

var $isNaN = require('../helpers/isNaN');
var $isFinite = require('../helpers/isFinite');
var isPrefixOf = require('../helpers/isPrefixOf');

var ToNumber = require('./ToNumber');
var ToPrimitive = require('./ToPrimitive');
var Type = require('./Type');

// https://262.ecma-international.org/5.1/#sec-11.8.5

// eslint-disable-next-line max-statements
module.exports = function AbstractRelationalComparison(x, y, LeftFirst) {
	if (Type(LeftFirst) !== 'Boolean') {
		throw new $TypeError('Assertion failed: LeftFirst argument must be a Boolean');
	}
	var px;
	var py;
	if (LeftFirst) {
		px = ToPrimitive(x, $Number);
		py = ToPrimitive(y, $Number);
	} else {
		py = ToPrimitive(y, $Number);
		px = ToPrimitive(x, $Number);
	}
	var bothStrings = Type(px) === 'String' && Type(py) === 'String';
	if (!bothStrings) {
		var nx = ToNumber(px);
		var ny = ToNumber(py);
		if ($isNaN(nx) || $isNaN(ny)) {
			return undefined;
		}
		if ($isFinite(nx) && $isFinite(ny) && nx === ny) {
			return false;
		}
		if (nx === Infinity) {
			return false;
		}
		if (ny === Infinity) {
			return true;
		}
		if (ny === -Infinity) {
			return false;
		}
		if (nx === -Infinity) {
			return true;
		}
		return nx < ny; // by now, these are both nonzero, finite, and not equal
	}
	if (isPrefixOf(py, px)) {
		return false;
	}
	if (isPrefixOf(px, py)) {
		return true;
	}
	return px < py; // both strings, neither a prefix of the other. shortcut for steps c-f
};

},{"../helpers/isFinite":186,"../helpers/isNaN":188,"../helpers/isPrefixOf":189,"./ToNumber":170,"./ToPrimitive":172,"./Type":177,"get-intrinsic":198}],142:[function(require,module,exports){
'use strict';

var GetIntrinsic = require('get-intrinsic');

var $TypeError = GetIntrinsic('%TypeError%');

// http://262.ecma-international.org/5.1/#sec-9.10

module.exports = function CheckObjectCoercible(value, optMessage) {
	if (value == null) {
		throw new $TypeError(optMessage || ('Cannot call method on ' + value));
	}
	return value;
};

},{"get-intrinsic":198}],143:[function(require,module,exports){
'use strict';

var GetIntrinsic = require('get-intrinsic');

var $EvalError = GetIntrinsic('%EvalError%');

var DayWithinYear = require('./DayWithinYear');
var InLeapYear = require('./InLeapYear');
var MonthFromTime = require('./MonthFromTime');

// https://262.ecma-international.org/5.1/#sec-15.9.1.5

module.exports = function DateFromTime(t) {
	var m = MonthFromTime(t);
	var d = DayWithinYear(t);
	if (m === 0) {
		return d + 1;
	}
	if (m === 1) {
		return d - 30;
	}
	var leap = InLeapYear(t);
	if (m === 2) {
		return d - 58 - leap;
	}
	if (m === 3) {
		return d - 89 - leap;
	}
	if (m === 4) {
		return d - 119 - leap;
	}
	if (m === 5) {
		return d - 150 - leap;
	}
	if (m === 6) {
		return d - 180 - leap;
	}
	if (m === 7) {
		return d - 211 - leap;
	}
	if (m === 8) {
		return d - 242 - leap;
	}
	if (m === 9) {
		return d - 272 - leap;
	}
	if (m === 10) {
		return d - 303 - leap;
	}
	if (m === 11) {
		return d - 333 - leap;
	}
	throw new $EvalError('Assertion failed: MonthFromTime returned an impossible value: ' + m);
};

},{"./DayWithinYear":146,"./InLeapYear":150,"./MonthFromTime":160,"get-intrinsic":198}],144:[function(require,module,exports){
'use strict';

var floor = require('./floor');

var msPerDay = require('../helpers/timeConstants').msPerDay;

// https://262.ecma-international.org/5.1/#sec-15.9.1.2

module.exports = function Day(t) {
	return floor(t / msPerDay);
};

},{"../helpers/timeConstants":193,"./floor":181}],145:[function(require,module,exports){
'use strict';

var floor = require('./floor');

// https://262.ecma-international.org/5.1/#sec-15.9.1.3

module.exports = function DayFromYear(y) {
	return (365 * (y - 1970)) + floor((y - 1969) / 4) - floor((y - 1901) / 100) + floor((y - 1601) / 400);
};


},{"./floor":181}],146:[function(require,module,exports){
'use strict';

var Day = require('./Day');
var DayFromYear = require('./DayFromYear');
var YearFromTime = require('./YearFromTime');

// https://262.ecma-international.org/5.1/#sec-15.9.1.4

module.exports = function DayWithinYear(t) {
	return Day(t) - DayFromYear(YearFromTime(t));
};

},{"./Day":144,"./DayFromYear":145,"./YearFromTime":179}],147:[function(require,module,exports){
'use strict';

var modulo = require('./modulo');

// https://262.ecma-international.org/5.1/#sec-15.9.1.3

module.exports = function DaysInYear(y) {
	if (modulo(y, 4) !== 0) {
		return 365;
	}
	if (modulo(y, 100) !== 0) {
		return 366;
	}
	if (modulo(y, 400) !== 0) {
		return 365;
	}
	return 366;
};

},{"./modulo":182}],148:[function(require,module,exports){
'use strict';

var GetIntrinsic = require('get-intrinsic');

var $TypeError = GetIntrinsic('%TypeError%');

var Type = require('./Type');
var IsDataDescriptor = require('./IsDataDescriptor');
var IsAccessorDescriptor = require('./IsAccessorDescriptor');

var assertRecord = require('../helpers/assertRecord');

// https://262.ecma-international.org/5.1/#sec-8.10.4

module.exports = function FromPropertyDescriptor(Desc) {
	if (typeof Desc === 'undefined') {
		return Desc;
	}

	assertRecord(Type, 'Property Descriptor', 'Desc', Desc);

	if (IsDataDescriptor(Desc)) {
		return {
			value: Desc['[[Value]]'],
			writable: !!Desc['[[Writable]]'],
			enumerable: !!Desc['[[Enumerable]]'],
			configurable: !!Desc['[[Configurable]]']
		};
	} else if (IsAccessorDescriptor(Desc)) {
		return {
			get: Desc['[[Get]]'],
			set: Desc['[[Set]]'],
			enumerable: !!Desc['[[Enumerable]]'],
			configurable: !!Desc['[[Configurable]]']
		};
	}
	throw new $TypeError('FromPropertyDescriptor must be called with a fully populated Property Descriptor');

};

},{"../helpers/assertRecord":185,"./IsAccessorDescriptor":151,"./IsDataDescriptor":153,"./Type":177,"get-intrinsic":198}],149:[function(require,module,exports){
'use strict';

var floor = require('./floor');
var modulo = require('./modulo');

var timeConstants = require('../helpers/timeConstants');
var msPerHour = timeConstants.msPerHour;
var HoursPerDay = timeConstants.HoursPerDay;

// https://262.ecma-international.org/5.1/#sec-15.9.1.10

module.exports = function HourFromTime(t) {
	return modulo(floor(t / msPerHour), HoursPerDay);
};

},{"../helpers/timeConstants":193,"./floor":181,"./modulo":182}],150:[function(require,module,exports){
'use strict';

var GetIntrinsic = require('get-intrinsic');

var $EvalError = GetIntrinsic('%EvalError%');

var DaysInYear = require('./DaysInYear');
var YearFromTime = require('./YearFromTime');

// https://262.ecma-international.org/5.1/#sec-15.9.1.3

module.exports = function InLeapYear(t) {
	var days = DaysInYear(YearFromTime(t));
	if (days === 365) {
		return 0;
	}
	if (days === 366) {
		return 1;
	}
	throw new $EvalError('Assertion failed: there are not 365 or 366 days in a year, got: ' + days);
};

},{"./DaysInYear":147,"./YearFromTime":179,"get-intrinsic":198}],151:[function(require,module,exports){
'use strict';

var has = require('has');

var Type = require('./Type');

var assertRecord = require('../helpers/assertRecord');

// https://262.ecma-international.org/5.1/#sec-8.10.1

module.exports = function IsAccessorDescriptor(Desc) {
	if (typeof Desc === 'undefined') {
		return false;
	}

	assertRecord(Type, 'Property Descriptor', 'Desc', Desc);

	if (!has(Desc, '[[Get]]') && !has(Desc, '[[Set]]')) {
		return false;
	}

	return true;
};

},{"../helpers/assertRecord":185,"./Type":177,"has":202}],152:[function(require,module,exports){
'use strict';

// http://262.ecma-international.org/5.1/#sec-9.11

module.exports = require('is-callable');

},{"is-callable":205}],153:[function(require,module,exports){
'use strict';

var has = require('has');

var Type = require('./Type');

var assertRecord = require('../helpers/assertRecord');

// https://262.ecma-international.org/5.1/#sec-8.10.2

module.exports = function IsDataDescriptor(Desc) {
	if (typeof Desc === 'undefined') {
		return false;
	}

	assertRecord(Type, 'Property Descriptor', 'Desc', Desc);

	if (!has(Desc, '[[Value]]') && !has(Desc, '[[Writable]]')) {
		return false;
	}

	return true;
};

},{"../helpers/assertRecord":185,"./Type":177,"has":202}],154:[function(require,module,exports){
'use strict';

var IsAccessorDescriptor = require('./IsAccessorDescriptor');
var IsDataDescriptor = require('./IsDataDescriptor');
var Type = require('./Type');

var assertRecord = require('../helpers/assertRecord');

// https://262.ecma-international.org/5.1/#sec-8.10.3

module.exports = function IsGenericDescriptor(Desc) {
	if (typeof Desc === 'undefined') {
		return false;
	}

	assertRecord(Type, 'Property Descriptor', 'Desc', Desc);

	if (!IsAccessorDescriptor(Desc) && !IsDataDescriptor(Desc)) {
		return true;
	}

	return false;
};

},{"../helpers/assertRecord":185,"./IsAccessorDescriptor":151,"./IsDataDescriptor":153,"./Type":177}],155:[function(require,module,exports){
'use strict';

// TODO, semver-major: delete this

var isPropertyDescriptor = require('../helpers/isPropertyDescriptor');

var Type = require('./Type');
var IsDataDescriptor = require('./IsDataDescriptor');
var IsAccessorDescriptor = require('./IsAccessorDescriptor');

// https://262.ecma-international.org/6.0/#sec-property-descriptor-specification-type

module.exports = function IsPropertyDescriptor(Desc) {
	return isPropertyDescriptor({
		IsDataDescriptor: IsDataDescriptor,
		IsAccessorDescriptor: IsAccessorDescriptor,
		Type: Type
	}, Desc);
};

},{"../helpers/isPropertyDescriptor":190,"./IsAccessorDescriptor":151,"./IsDataDescriptor":153,"./Type":177}],156:[function(require,module,exports){
'use strict';

var $isFinite = require('../helpers/isFinite');
var msPerDay = require('../helpers/timeConstants').msPerDay;

// https://262.ecma-international.org/5.1/#sec-15.9.1.13

module.exports = function MakeDate(day, time) {
	if (!$isFinite(day) || !$isFinite(time)) {
		return NaN;
	}
	return (day * msPerDay) + time;
};

},{"../helpers/isFinite":186,"../helpers/timeConstants":193}],157:[function(require,module,exports){
'use strict';

var GetIntrinsic = require('get-intrinsic');

var $DateUTC = GetIntrinsic('%Date.UTC%');

var $isFinite = require('../helpers/isFinite');

var DateFromTime = require('./DateFromTime');
var Day = require('./Day');
var floor = require('./floor');
var modulo = require('./modulo');
var MonthFromTime = require('./MonthFromTime');
var ToInteger = require('./ToInteger');
var YearFromTime = require('./YearFromTime');

// https://262.ecma-international.org/5.1/#sec-15.9.1.12

module.exports = function MakeDay(year, month, date) {
	if (!$isFinite(year) || !$isFinite(month) || !$isFinite(date)) {
		return NaN;
	}
	var y = ToInteger(year);
	var m = ToInteger(month);
	var dt = ToInteger(date);
	var ym = y + floor(m / 12);
	var mn = modulo(m, 12);
	var t = $DateUTC(ym, mn, 1);
	if (YearFromTime(t) !== ym || MonthFromTime(t) !== mn || DateFromTime(t) !== 1) {
		return NaN;
	}
	return Day(t) + dt - 1;
};

},{"../helpers/isFinite":186,"./DateFromTime":143,"./Day":144,"./MonthFromTime":160,"./ToInteger":169,"./YearFromTime":179,"./floor":181,"./modulo":182,"get-intrinsic":198}],158:[function(require,module,exports){
'use strict';

var $isFinite = require('../helpers/isFinite');
var timeConstants = require('../helpers/timeConstants');
var msPerSecond = timeConstants.msPerSecond;
var msPerMinute = timeConstants.msPerMinute;
var msPerHour = timeConstants.msPerHour;

var ToInteger = require('./ToInteger');

// https://262.ecma-international.org/5.1/#sec-15.9.1.11

module.exports = function MakeTime(hour, min, sec, ms) {
	if (!$isFinite(hour) || !$isFinite(min) || !$isFinite(sec) || !$isFinite(ms)) {
		return NaN;
	}
	var h = ToInteger(hour);
	var m = ToInteger(min);
	var s = ToInteger(sec);
	var milli = ToInteger(ms);
	var t = (h * msPerHour) + (m * msPerMinute) + (s * msPerSecond) + milli;
	return t;
};

},{"../helpers/isFinite":186,"../helpers/timeConstants":193,"./ToInteger":169}],159:[function(require,module,exports){
'use strict';

var floor = require('./floor');
var modulo = require('./modulo');

var timeConstants = require('../helpers/timeConstants');
var msPerMinute = timeConstants.msPerMinute;
var MinutesPerHour = timeConstants.MinutesPerHour;

// https://262.ecma-international.org/5.1/#sec-15.9.1.10

module.exports = function MinFromTime(t) {
	return modulo(floor(t / msPerMinute), MinutesPerHour);
};

},{"../helpers/timeConstants":193,"./floor":181,"./modulo":182}],160:[function(require,module,exports){
'use strict';

var DayWithinYear = require('./DayWithinYear');
var InLeapYear = require('./InLeapYear');

// https://262.ecma-international.org/5.1/#sec-15.9.1.4

module.exports = function MonthFromTime(t) {
	var day = DayWithinYear(t);
	if (0 <= day && day < 31) {
		return 0;
	}
	var leap = InLeapYear(t);
	if (31 <= day && day < (59 + leap)) {
		return 1;
	}
	if ((59 + leap) <= day && day < (90 + leap)) {
		return 2;
	}
	if ((90 + leap) <= day && day < (120 + leap)) {
		return 3;
	}
	if ((120 + leap) <= day && day < (151 + leap)) {
		return 4;
	}
	if ((151 + leap) <= day && day < (181 + leap)) {
		return 5;
	}
	if ((181 + leap) <= day && day < (212 + leap)) {
		return 6;
	}
	if ((212 + leap) <= day && day < (243 + leap)) {
		return 7;
	}
	if ((243 + leap) <= day && day < (273 + leap)) {
		return 8;
	}
	if ((273 + leap) <= day && day < (304 + leap)) {
		return 9;
	}
	if ((304 + leap) <= day && day < (334 + leap)) {
		return 10;
	}
	if ((334 + leap) <= day && day < (365 + leap)) {
		return 11;
	}
};

},{"./DayWithinYear":146,"./InLeapYear":150}],161:[function(require,module,exports){
'use strict';

var $isNaN = require('../helpers/isNaN');

// http://262.ecma-international.org/5.1/#sec-9.12

module.exports = function SameValue(x, y) {
	if (x === y) { // 0 === -0, but they are not identical.
		if (x === 0) { return 1 / x === 1 / y; }
		return true;
	}
	return $isNaN(x) && $isNaN(y);
};

},{"../helpers/isNaN":188}],162:[function(require,module,exports){
'use strict';

var floor = require('./floor');
var modulo = require('./modulo');

var timeConstants = require('../helpers/timeConstants');
var msPerSecond = timeConstants.msPerSecond;
var SecondsPerMinute = timeConstants.SecondsPerMinute;

// https://262.ecma-international.org/5.1/#sec-15.9.1.10

module.exports = function SecFromTime(t) {
	return modulo(floor(t / msPerSecond), SecondsPerMinute);
};

},{"../helpers/timeConstants":193,"./floor":181,"./modulo":182}],163:[function(require,module,exports){
'use strict';

var Type = require('./Type');

// https://262.ecma-international.org/5.1/#sec-11.9.6

module.exports = function StrictEqualityComparison(x, y) {
	var xType = Type(x);
	var yType = Type(y);
	if (xType !== yType) {
		return false;
	}
	if (xType === 'Undefined' || xType === 'Null') {
		return true;
	}
	return x === y; // shortcut for steps 4-7
};

},{"./Type":177}],164:[function(require,module,exports){
'use strict';

var GetIntrinsic = require('get-intrinsic');

var $Date = GetIntrinsic('%Date%');
var $Number = GetIntrinsic('%Number%');

var $isFinite = require('../helpers/isFinite');

var abs = require('./abs');
var ToNumber = require('./ToNumber');

// https://262.ecma-international.org/5.1/#sec-15.9.1.14

module.exports = function TimeClip(time) {
	if (!$isFinite(time) || abs(time) > 8.64e15) {
		return NaN;
	}
	return $Number(new $Date(ToNumber(time)));
};


},{"../helpers/isFinite":186,"./ToNumber":170,"./abs":180,"get-intrinsic":198}],165:[function(require,module,exports){
'use strict';

var msPerDay = require('../helpers/timeConstants').msPerDay;

var DayFromYear = require('./DayFromYear');

// https://262.ecma-international.org/5.1/#sec-15.9.1.3

module.exports = function TimeFromYear(y) {
	return msPerDay * DayFromYear(y);
};

},{"../helpers/timeConstants":193,"./DayFromYear":145}],166:[function(require,module,exports){
'use strict';

var modulo = require('./modulo');

var msPerDay = require('../helpers/timeConstants').msPerDay;

// https://262.ecma-international.org/5.1/#sec-15.9.1.2

module.exports = function TimeWithinDay(t) {
	return modulo(t, msPerDay);
};


},{"../helpers/timeConstants":193,"./modulo":182}],167:[function(require,module,exports){
'use strict';

// http://262.ecma-international.org/5.1/#sec-9.2

module.exports = function ToBoolean(value) { return !!value; };

},{}],168:[function(require,module,exports){
'use strict';

var ToNumber = require('./ToNumber');

// http://262.ecma-international.org/5.1/#sec-9.5

module.exports = function ToInt32(x) {
	return ToNumber(x) >> 0;
};

},{"./ToNumber":170}],169:[function(require,module,exports){
'use strict';

var abs = require('./abs');
var floor = require('./floor');
var ToNumber = require('./ToNumber');

var $isNaN = require('../helpers/isNaN');
var $isFinite = require('../helpers/isFinite');
var $sign = require('../helpers/sign');

// http://262.ecma-international.org/5.1/#sec-9.4

module.exports = function ToInteger(value) {
	var number = ToNumber(value);
	if ($isNaN(number)) { return 0; }
	if (number === 0 || !$isFinite(number)) { return number; }
	return $sign(number) * floor(abs(number));
};

},{"../helpers/isFinite":186,"../helpers/isNaN":188,"../helpers/sign":192,"./ToNumber":170,"./abs":180,"./floor":181}],170:[function(require,module,exports){
'use strict';

var ToPrimitive = require('./ToPrimitive');

// http://262.ecma-international.org/5.1/#sec-9.3

module.exports = function ToNumber(value) {
	var prim = ToPrimitive(value, Number);
	if (typeof prim !== 'string') {
		return +prim; // eslint-disable-line no-implicit-coercion
	}

	// eslint-disable-next-line no-control-regex
	var trimmed = prim.replace(/^[ \t\x0b\f\xa0\ufeff\n\r\u2028\u2029\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u0085]+|[ \t\x0b\f\xa0\ufeff\n\r\u2028\u2029\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u0085]+$/g, '');
	if ((/^0[ob]|^[+-]0x/).test(trimmed)) {
		return NaN;
	}

	return +trimmed; // eslint-disable-line no-implicit-coercion
};

},{"./ToPrimitive":172}],171:[function(require,module,exports){
'use strict';

var GetIntrinsic = require('get-intrinsic');

var $Object = GetIntrinsic('%Object%');

var CheckObjectCoercible = require('./CheckObjectCoercible');

// http://262.ecma-international.org/5.1/#sec-9.9

module.exports = function ToObject(value) {
	CheckObjectCoercible(value);
	return $Object(value);
};

},{"./CheckObjectCoercible":142,"get-intrinsic":198}],172:[function(require,module,exports){
'use strict';

// http://262.ecma-international.org/5.1/#sec-9.1

module.exports = require('es-to-primitive/es5');

},{"es-to-primitive/es5":194}],173:[function(require,module,exports){
'use strict';

var has = require('has');

var GetIntrinsic = require('get-intrinsic');

var $TypeError = GetIntrinsic('%TypeError%');

var Type = require('./Type');
var ToBoolean = require('./ToBoolean');
var IsCallable = require('./IsCallable');

// https://262.ecma-international.org/5.1/#sec-8.10.5

module.exports = function ToPropertyDescriptor(Obj) {
	if (Type(Obj) !== 'Object') {
		throw new $TypeError('ToPropertyDescriptor requires an object');
	}

	var desc = {};
	if (has(Obj, 'enumerable')) {
		desc['[[Enumerable]]'] = ToBoolean(Obj.enumerable);
	}
	if (has(Obj, 'configurable')) {
		desc['[[Configurable]]'] = ToBoolean(Obj.configurable);
	}
	if (has(Obj, 'value')) {
		desc['[[Value]]'] = Obj.value;
	}
	if (has(Obj, 'writable')) {
		desc['[[Writable]]'] = ToBoolean(Obj.writable);
	}
	if (has(Obj, 'get')) {
		var getter = Obj.get;
		if (typeof getter !== 'undefined' && !IsCallable(getter)) {
			throw new $TypeError('getter must be a function');
		}
		desc['[[Get]]'] = getter;
	}
	if (has(Obj, 'set')) {
		var setter = Obj.set;
		if (typeof setter !== 'undefined' && !IsCallable(setter)) {
			throw new $TypeError('setter must be a function');
		}
		desc['[[Set]]'] = setter;
	}

	if ((has(desc, '[[Get]]') || has(desc, '[[Set]]')) && (has(desc, '[[Value]]') || has(desc, '[[Writable]]'))) {
		throw new $TypeError('Invalid property descriptor. Cannot both specify accessors and a value or writable attribute');
	}
	return desc;
};

},{"./IsCallable":152,"./ToBoolean":167,"./Type":177,"get-intrinsic":198,"has":202}],174:[function(require,module,exports){
'use strict';

var GetIntrinsic = require('get-intrinsic');

var $String = GetIntrinsic('%String%');

// http://262.ecma-international.org/5.1/#sec-9.8

module.exports = function ToString(value) {
	return $String(value);
};


},{"get-intrinsic":198}],175:[function(require,module,exports){
'use strict';

var abs = require('./abs');
var floor = require('./floor');
var modulo = require('./modulo');
var ToNumber = require('./ToNumber');

var $isNaN = require('../helpers/isNaN');
var $isFinite = require('../helpers/isFinite');
var $sign = require('../helpers/sign');

// http://262.ecma-international.org/5.1/#sec-9.7

module.exports = function ToUint16(value) {
	var number = ToNumber(value);
	if ($isNaN(number) || number === 0 || !$isFinite(number)) { return 0; }
	var posInt = $sign(number) * floor(abs(number));
	return modulo(posInt, 0x10000);
};

},{"../helpers/isFinite":186,"../helpers/isNaN":188,"../helpers/sign":192,"./ToNumber":170,"./abs":180,"./floor":181,"./modulo":182}],176:[function(require,module,exports){
'use strict';

var ToNumber = require('./ToNumber');

// http://262.ecma-international.org/5.1/#sec-9.6

module.exports = function ToUint32(x) {
	return ToNumber(x) >>> 0;
};

},{"./ToNumber":170}],177:[function(require,module,exports){
'use strict';

// https://262.ecma-international.org/5.1/#sec-8

module.exports = function Type(x) {
	if (x === null) {
		return 'Null';
	}
	if (typeof x === 'undefined') {
		return 'Undefined';
	}
	if (typeof x === 'function' || typeof x === 'object') {
		return 'Object';
	}
	if (typeof x === 'number') {
		return 'Number';
	}
	if (typeof x === 'boolean') {
		return 'Boolean';
	}
	if (typeof x === 'string') {
		return 'String';
	}
};

},{}],178:[function(require,module,exports){
'use strict';

var Day = require('./Day');
var modulo = require('./modulo');

// https://262.ecma-international.org/5.1/#sec-15.9.1.6

module.exports = function WeekDay(t) {
	return modulo(Day(t) + 4, 7);
};

},{"./Day":144,"./modulo":182}],179:[function(require,module,exports){
'use strict';

var GetIntrinsic = require('get-intrinsic');

var $Date = GetIntrinsic('%Date%');

var callBound = require('call-bind/callBound');

var $getUTCFullYear = callBound('Date.prototype.getUTCFullYear');

// https://262.ecma-international.org/5.1/#sec-15.9.1.3

module.exports = function YearFromTime(t) {
	// largest y such that this.TimeFromYear(y) <= t
	return $getUTCFullYear(new $Date(t));
};

},{"call-bind/callBound":133,"get-intrinsic":198}],180:[function(require,module,exports){
'use strict';

var GetIntrinsic = require('get-intrinsic');

var $abs = GetIntrinsic('%Math.abs%');

// http://262.ecma-international.org/5.1/#sec-5.2

module.exports = function abs(x) {
	return $abs(x);
};

},{"get-intrinsic":198}],181:[function(require,module,exports){
'use strict';

// var modulo = require('./modulo');
var $floor = Math.floor;

// http://262.ecma-international.org/5.1/#sec-5.2

module.exports = function floor(x) {
	// return x - modulo(x, 1);
	return $floor(x);
};

},{}],182:[function(require,module,exports){
'use strict';

var mod = require('../helpers/mod');

// https://262.ecma-international.org/5.1/#sec-5.2

module.exports = function modulo(x, y) {
	return mod(x, y);
};

},{"../helpers/mod":191}],183:[function(require,module,exports){
'use strict';

var modulo = require('./modulo');

var msPerSecond = require('../helpers/timeConstants').msPerSecond;

// https://262.ecma-international.org/5.1/#sec-15.9.1.10

module.exports = function msFromTime(t) {
	return modulo(t, msPerSecond);
};

},{"../helpers/timeConstants":193,"./modulo":182}],184:[function(require,module,exports){
'use strict';

/* eslint global-require: 0 */

// https://es5.github.io/#x9
module.exports = {
	'Abstract Equality Comparison': require('./5/AbstractEqualityComparison'),
	'Abstract Relational Comparison': require('./5/AbstractRelationalComparison'),
	'Strict Equality Comparison': require('./5/StrictEqualityComparison'),
	abs: require('./5/abs'),
	CheckObjectCoercible: require('./5/CheckObjectCoercible'),
	DateFromTime: require('./5/DateFromTime'),
	Day: require('./5/Day'),
	DayFromYear: require('./5/DayFromYear'),
	DaysInYear: require('./5/DaysInYear'),
	DayWithinYear: require('./5/DayWithinYear'),
	floor: require('./5/floor'),
	FromPropertyDescriptor: require('./5/FromPropertyDescriptor'),
	HourFromTime: require('./5/HourFromTime'),
	InLeapYear: require('./5/InLeapYear'),
	IsAccessorDescriptor: require('./5/IsAccessorDescriptor'),
	IsCallable: require('./5/IsCallable'),
	IsDataDescriptor: require('./5/IsDataDescriptor'),
	IsGenericDescriptor: require('./5/IsGenericDescriptor'),
	IsPropertyDescriptor: require('./5/IsPropertyDescriptor'),
	MakeDate: require('./5/MakeDate'),
	MakeDay: require('./5/MakeDay'),
	MakeTime: require('./5/MakeTime'),
	MinFromTime: require('./5/MinFromTime'),
	modulo: require('./5/modulo'),
	MonthFromTime: require('./5/MonthFromTime'),
	msFromTime: require('./5/msFromTime'),
	SameValue: require('./5/SameValue'),
	SecFromTime: require('./5/SecFromTime'),
	TimeClip: require('./5/TimeClip'),
	TimeFromYear: require('./5/TimeFromYear'),
	TimeWithinDay: require('./5/TimeWithinDay'),
	ToBoolean: require('./5/ToBoolean'),
	ToInt32: require('./5/ToInt32'),
	ToInteger: require('./5/ToInteger'),
	ToNumber: require('./5/ToNumber'),
	ToObject: require('./5/ToObject'),
	ToPrimitive: require('./5/ToPrimitive'),
	ToPropertyDescriptor: require('./5/ToPropertyDescriptor'),
	ToString: require('./5/ToString'),
	ToUint16: require('./5/ToUint16'),
	ToUint32: require('./5/ToUint32'),
	Type: require('./5/Type'),
	WeekDay: require('./5/WeekDay'),
	YearFromTime: require('./5/YearFromTime')
};

},{"./5/AbstractEqualityComparison":140,"./5/AbstractRelationalComparison":141,"./5/CheckObjectCoercible":142,"./5/DateFromTime":143,"./5/Day":144,"./5/DayFromYear":145,"./5/DayWithinYear":146,"./5/DaysInYear":147,"./5/FromPropertyDescriptor":148,"./5/HourFromTime":149,"./5/InLeapYear":150,"./5/IsAccessorDescriptor":151,"./5/IsCallable":152,"./5/IsDataDescriptor":153,"./5/IsGenericDescriptor":154,"./5/IsPropertyDescriptor":155,"./5/MakeDate":156,"./5/MakeDay":157,"./5/MakeTime":158,"./5/MinFromTime":159,"./5/MonthFromTime":160,"./5/SameValue":161,"./5/SecFromTime":162,"./5/StrictEqualityComparison":163,"./5/TimeClip":164,"./5/TimeFromYear":165,"./5/TimeWithinDay":166,"./5/ToBoolean":167,"./5/ToInt32":168,"./5/ToInteger":169,"./5/ToNumber":170,"./5/ToObject":171,"./5/ToPrimitive":172,"./5/ToPropertyDescriptor":173,"./5/ToString":174,"./5/ToUint16":175,"./5/ToUint32":176,"./5/Type":177,"./5/WeekDay":178,"./5/YearFromTime":179,"./5/abs":180,"./5/floor":181,"./5/modulo":182,"./5/msFromTime":183}],185:[function(require,module,exports){
'use strict';

var GetIntrinsic = require('get-intrinsic');

var $TypeError = GetIntrinsic('%TypeError%');
var $SyntaxError = GetIntrinsic('%SyntaxError%');

var has = require('has');

var isMatchRecord = require('./isMatchRecord');

var predicates = {
	// https://262.ecma-international.org/6.0/#sec-property-descriptor-specification-type
	'Property Descriptor': function isPropertyDescriptor(Desc) {
		var allowed = {
			'[[Configurable]]': true,
			'[[Enumerable]]': true,
			'[[Get]]': true,
			'[[Set]]': true,
			'[[Value]]': true,
			'[[Writable]]': true
		};

		for (var key in Desc) { // eslint-disable-line
			if (has(Desc, key) && !allowed[key]) {
				return false;
			}
		}

		var isData = has(Desc, '[[Value]]');
		var IsAccessor = has(Desc, '[[Get]]') || has(Desc, '[[Set]]');
		if (isData && IsAccessor) {
			throw new $TypeError('Property Descriptors may not be both accessor and data descriptors');
		}
		return true;
	},
	// https://262.ecma-international.org/13.0/#sec-match-records
	'Match Record': isMatchRecord
};

module.exports = function assertRecord(Type, recordType, argumentName, value) {
	var predicate = predicates[recordType];
	if (typeof predicate !== 'function') {
		throw new $SyntaxError('unknown record type: ' + recordType);
	}
	if (Type(value) !== 'Object' || !predicate(value)) {
		throw new $TypeError(argumentName + ' must be a ' + recordType);
	}
};

},{"./isMatchRecord":187,"get-intrinsic":198,"has":202}],186:[function(require,module,exports){
'use strict';

var $isNaN = Number.isNaN || function (a) { return a !== a; };

module.exports = Number.isFinite || function (x) { return typeof x === 'number' && !$isNaN(x) && x !== Infinity && x !== -Infinity; };

},{}],187:[function(require,module,exports){
'use strict';

var has = require('has');

// https://262.ecma-international.org/13.0/#sec-match-records

module.exports = function isMatchRecord(record) {
	return (
		has(record, '[[StartIndex]]')
        && has(record, '[[EndIndex]]')
        && record['[[StartIndex]]'] >= 0
        && record['[[EndIndex]]'] >= record['[[StartIndex]]']
        && String(parseInt(record['[[StartIndex]]'], 10)) === String(record['[[StartIndex]]'])
        && String(parseInt(record['[[EndIndex]]'], 10)) === String(record['[[EndIndex]]'])
	);
};

},{"has":202}],188:[function(require,module,exports){
'use strict';

module.exports = Number.isNaN || function isNaN(a) {
	return a !== a;
};

},{}],189:[function(require,module,exports){
'use strict';

var $strSlice = require('call-bind/callBound')('String.prototype.slice');

module.exports = function isPrefixOf(prefix, string) {
	if (prefix === string) {
		return true;
	}
	if (prefix.length > string.length) {
		return false;
	}
	return $strSlice(string, 0, prefix.length) === prefix;
};

},{"call-bind/callBound":133}],190:[function(require,module,exports){
'use strict';

var GetIntrinsic = require('get-intrinsic');

var has = require('has');
var $TypeError = GetIntrinsic('%TypeError%');

module.exports = function IsPropertyDescriptor(ES, Desc) {
	if (ES.Type(Desc) !== 'Object') {
		return false;
	}
	var allowed = {
		'[[Configurable]]': true,
		'[[Enumerable]]': true,
		'[[Get]]': true,
		'[[Set]]': true,
		'[[Value]]': true,
		'[[Writable]]': true
	};

	for (var key in Desc) { // eslint-disable-line no-restricted-syntax
		if (has(Desc, key) && !allowed[key]) {
			return false;
		}
	}

	if (ES.IsDataDescriptor(Desc) && ES.IsAccessorDescriptor(Desc)) {
		throw new $TypeError('Property Descriptors may not be both accessor and data descriptors');
	}
	return true;
};

},{"get-intrinsic":198,"has":202}],191:[function(require,module,exports){
'use strict';

var $floor = Math.floor;

module.exports = function mod(number, modulo) {
	var remain = number % modulo;
	return $floor(remain >= 0 ? remain : remain + modulo);
};

},{}],192:[function(require,module,exports){
'use strict';

module.exports = function sign(number) {
	return number >= 0 ? 1 : -1;
};

},{}],193:[function(require,module,exports){
'use strict';

var HoursPerDay = 24;
var MinutesPerHour = 60;
var SecondsPerMinute = 60;
var msPerSecond = 1e3;
var msPerMinute = msPerSecond * SecondsPerMinute;
var msPerHour = msPerMinute * MinutesPerHour;
var msPerDay = 86400000;

module.exports = {
	HoursPerDay: HoursPerDay,
	MinutesPerHour: MinutesPerHour,
	SecondsPerMinute: SecondsPerMinute,
	msPerSecond: msPerSecond,
	msPerMinute: msPerMinute,
	msPerHour: msPerHour,
	msPerDay: msPerDay
};

},{}],194:[function(require,module,exports){
'use strict';

var toStr = Object.prototype.toString;

var isPrimitive = require('./helpers/isPrimitive');

var isCallable = require('is-callable');

// http://ecma-international.org/ecma-262/5.1/#sec-8.12.8
var ES5internalSlots = {
	'[[DefaultValue]]': function (O) {
		var actualHint;
		if (arguments.length > 1) {
			actualHint = arguments[1];
		} else {
			actualHint = toStr.call(O) === '[object Date]' ? String : Number;
		}

		if (actualHint === String || actualHint === Number) {
			var methods = actualHint === String ? ['toString', 'valueOf'] : ['valueOf', 'toString'];
			var value, i;
			for (i = 0; i < methods.length; ++i) {
				if (isCallable(O[methods[i]])) {
					value = O[methods[i]]();
					if (isPrimitive(value)) {
						return value;
					}
				}
			}
			throw new TypeError('No default value');
		}
		throw new TypeError('invalid [[DefaultValue]] hint supplied');
	}
};

// http://ecma-international.org/ecma-262/5.1/#sec-9.1
module.exports = function ToPrimitive(input) {
	if (isPrimitive(input)) {
		return input;
	}
	if (arguments.length > 1) {
		return ES5internalSlots['[[DefaultValue]]'](input, arguments[1]);
	}
	return ES5internalSlots['[[DefaultValue]]'](input);
};

},{"./helpers/isPrimitive":195,"is-callable":205}],195:[function(require,module,exports){
'use strict';

module.exports = function isPrimitive(value) {
	return value === null || (typeof value !== 'function' && typeof value !== 'object');
};

},{}],196:[function(require,module,exports){
'use strict';

/* eslint no-invalid-this: 1 */

var ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';
var slice = Array.prototype.slice;
var toStr = Object.prototype.toString;
var funcType = '[object Function]';

module.exports = function bind(that) {
    var target = this;
    if (typeof target !== 'function' || toStr.call(target) !== funcType) {
        throw new TypeError(ERROR_MESSAGE + target);
    }
    var args = slice.call(arguments, 1);

    var bound;
    var binder = function () {
        if (this instanceof bound) {
            var result = target.apply(
                this,
                args.concat(slice.call(arguments))
            );
            if (Object(result) === result) {
                return result;
            }
            return this;
        } else {
            return target.apply(
                that,
                args.concat(slice.call(arguments))
            );
        }
    };

    var boundLength = Math.max(0, target.length - args.length);
    var boundArgs = [];
    for (var i = 0; i < boundLength; i++) {
        boundArgs.push('$' + i);
    }

    bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this,arguments); }')(binder);

    if (target.prototype) {
        var Empty = function Empty() {};
        Empty.prototype = target.prototype;
        bound.prototype = new Empty();
        Empty.prototype = null;
    }

    return bound;
};

},{}],197:[function(require,module,exports){
'use strict';

var implementation = require('./implementation');

module.exports = Function.prototype.bind || implementation;

},{"./implementation":196}],198:[function(require,module,exports){
'use strict';

var undefined;

var $SyntaxError = SyntaxError;
var $Function = Function;
var $TypeError = TypeError;

// eslint-disable-next-line consistent-return
var getEvalledConstructor = function (expressionSyntax) {
	try {
		return $Function('"use strict"; return (' + expressionSyntax + ').constructor;')();
	} catch (e) {}
};

var $gOPD = Object.getOwnPropertyDescriptor;
if ($gOPD) {
	try {
		$gOPD({}, '');
	} catch (e) {
		$gOPD = null; // this is IE 8, which has a broken gOPD
	}
}

var throwTypeError = function () {
	throw new $TypeError();
};
var ThrowTypeError = $gOPD
	? (function () {
		try {
			// eslint-disable-next-line no-unused-expressions, no-caller, no-restricted-properties
			arguments.callee; // IE 8 does not throw here
			return throwTypeError;
		} catch (calleeThrows) {
			try {
				// IE 8 throws on Object.getOwnPropertyDescriptor(arguments, '')
				return $gOPD(arguments, 'callee').get;
			} catch (gOPDthrows) {
				return throwTypeError;
			}
		}
	}())
	: throwTypeError;

var hasSymbols = require('has-symbols')();

var getProto = Object.getPrototypeOf || function (x) { return x.__proto__; }; // eslint-disable-line no-proto

var needsEval = {};

var TypedArray = typeof Uint8Array === 'undefined' ? undefined : getProto(Uint8Array);

var INTRINSICS = {
	'%AggregateError%': typeof AggregateError === 'undefined' ? undefined : AggregateError,
	'%Array%': Array,
	'%ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,
	'%ArrayIteratorPrototype%': hasSymbols ? getProto([][Symbol.iterator]()) : undefined,
	'%AsyncFromSyncIteratorPrototype%': undefined,
	'%AsyncFunction%': needsEval,
	'%AsyncGenerator%': needsEval,
	'%AsyncGeneratorFunction%': needsEval,
	'%AsyncIteratorPrototype%': needsEval,
	'%Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,
	'%BigInt%': typeof BigInt === 'undefined' ? undefined : BigInt,
	'%Boolean%': Boolean,
	'%DataView%': typeof DataView === 'undefined' ? undefined : DataView,
	'%Date%': Date,
	'%decodeURI%': decodeURI,
	'%decodeURIComponent%': decodeURIComponent,
	'%encodeURI%': encodeURI,
	'%encodeURIComponent%': encodeURIComponent,
	'%Error%': Error,
	'%eval%': eval, // eslint-disable-line no-eval
	'%EvalError%': EvalError,
	'%Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,
	'%Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,
	'%FinalizationRegistry%': typeof FinalizationRegistry === 'undefined' ? undefined : FinalizationRegistry,
	'%Function%': $Function,
	'%GeneratorFunction%': needsEval,
	'%Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,
	'%Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,
	'%Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,
	'%isFinite%': isFinite,
	'%isNaN%': isNaN,
	'%IteratorPrototype%': hasSymbols ? getProto(getProto([][Symbol.iterator]())) : undefined,
	'%JSON%': typeof JSON === 'object' ? JSON : undefined,
	'%Map%': typeof Map === 'undefined' ? undefined : Map,
	'%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols ? undefined : getProto(new Map()[Symbol.iterator]()),
	'%Math%': Math,
	'%Number%': Number,
	'%Object%': Object,
	'%parseFloat%': parseFloat,
	'%parseInt%': parseInt,
	'%Promise%': typeof Promise === 'undefined' ? undefined : Promise,
	'%Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,
	'%RangeError%': RangeError,
	'%ReferenceError%': ReferenceError,
	'%Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,
	'%RegExp%': RegExp,
	'%Set%': typeof Set === 'undefined' ? undefined : Set,
	'%SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols ? undefined : getProto(new Set()[Symbol.iterator]()),
	'%SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,
	'%String%': String,
	'%StringIteratorPrototype%': hasSymbols ? getProto(''[Symbol.iterator]()) : undefined,
	'%Symbol%': hasSymbols ? Symbol : undefined,
	'%SyntaxError%': $SyntaxError,
	'%ThrowTypeError%': ThrowTypeError,
	'%TypedArray%': TypedArray,
	'%TypeError%': $TypeError,
	'%Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,
	'%Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,
	'%Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,
	'%Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,
	'%URIError%': URIError,
	'%WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,
	'%WeakRef%': typeof WeakRef === 'undefined' ? undefined : WeakRef,
	'%WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet
};

var doEval = function doEval(name) {
	var value;
	if (name === '%AsyncFunction%') {
		value = getEvalledConstructor('async function () {}');
	} else if (name === '%GeneratorFunction%') {
		value = getEvalledConstructor('function* () {}');
	} else if (name === '%AsyncGeneratorFunction%') {
		value = getEvalledConstructor('async function* () {}');
	} else if (name === '%AsyncGenerator%') {
		var fn = doEval('%AsyncGeneratorFunction%');
		if (fn) {
			value = fn.prototype;
		}
	} else if (name === '%AsyncIteratorPrototype%') {
		var gen = doEval('%AsyncGenerator%');
		if (gen) {
			value = getProto(gen.prototype);
		}
	}

	INTRINSICS[name] = value;

	return value;
};

var LEGACY_ALIASES = {
	'%ArrayBufferPrototype%': ['ArrayBuffer', 'prototype'],
	'%ArrayPrototype%': ['Array', 'prototype'],
	'%ArrayProto_entries%': ['Array', 'prototype', 'entries'],
	'%ArrayProto_forEach%': ['Array', 'prototype', 'forEach'],
	'%ArrayProto_keys%': ['Array', 'prototype', 'keys'],
	'%ArrayProto_values%': ['Array', 'prototype', 'values'],
	'%AsyncFunctionPrototype%': ['AsyncFunction', 'prototype'],
	'%AsyncGenerator%': ['AsyncGeneratorFunction', 'prototype'],
	'%AsyncGeneratorPrototype%': ['AsyncGeneratorFunction', 'prototype', 'prototype'],
	'%BooleanPrototype%': ['Boolean', 'prototype'],
	'%DataViewPrototype%': ['DataView', 'prototype'],
	'%DatePrototype%': ['Date', 'prototype'],
	'%ErrorPrototype%': ['Error', 'prototype'],
	'%EvalErrorPrototype%': ['EvalError', 'prototype'],
	'%Float32ArrayPrototype%': ['Float32Array', 'prototype'],
	'%Float64ArrayPrototype%': ['Float64Array', 'prototype'],
	'%FunctionPrototype%': ['Function', 'prototype'],
	'%Generator%': ['GeneratorFunction', 'prototype'],
	'%GeneratorPrototype%': ['GeneratorFunction', 'prototype', 'prototype'],
	'%Int8ArrayPrototype%': ['Int8Array', 'prototype'],
	'%Int16ArrayPrototype%': ['Int16Array', 'prototype'],
	'%Int32ArrayPrototype%': ['Int32Array', 'prototype'],
	'%JSONParse%': ['JSON', 'parse'],
	'%JSONStringify%': ['JSON', 'stringify'],
	'%MapPrototype%': ['Map', 'prototype'],
	'%NumberPrototype%': ['Number', 'prototype'],
	'%ObjectPrototype%': ['Object', 'prototype'],
	'%ObjProto_toString%': ['Object', 'prototype', 'toString'],
	'%ObjProto_valueOf%': ['Object', 'prototype', 'valueOf'],
	'%PromisePrototype%': ['Promise', 'prototype'],
	'%PromiseProto_then%': ['Promise', 'prototype', 'then'],
	'%Promise_all%': ['Promise', 'all'],
	'%Promise_reject%': ['Promise', 'reject'],
	'%Promise_resolve%': ['Promise', 'resolve'],
	'%RangeErrorPrototype%': ['RangeError', 'prototype'],
	'%ReferenceErrorPrototype%': ['ReferenceError', 'prototype'],
	'%RegExpPrototype%': ['RegExp', 'prototype'],
	'%SetPrototype%': ['Set', 'prototype'],
	'%SharedArrayBufferPrototype%': ['SharedArrayBuffer', 'prototype'],
	'%StringPrototype%': ['String', 'prototype'],
	'%SymbolPrototype%': ['Symbol', 'prototype'],
	'%SyntaxErrorPrototype%': ['SyntaxError', 'prototype'],
	'%TypedArrayPrototype%': ['TypedArray', 'prototype'],
	'%TypeErrorPrototype%': ['TypeError', 'prototype'],
	'%Uint8ArrayPrototype%': ['Uint8Array', 'prototype'],
	'%Uint8ClampedArrayPrototype%': ['Uint8ClampedArray', 'prototype'],
	'%Uint16ArrayPrototype%': ['Uint16Array', 'prototype'],
	'%Uint32ArrayPrototype%': ['Uint32Array', 'prototype'],
	'%URIErrorPrototype%': ['URIError', 'prototype'],
	'%WeakMapPrototype%': ['WeakMap', 'prototype'],
	'%WeakSetPrototype%': ['WeakSet', 'prototype']
};

var bind = require('function-bind');
var hasOwn = require('has');
var $concat = bind.call(Function.call, Array.prototype.concat);
var $spliceApply = bind.call(Function.apply, Array.prototype.splice);
var $replace = bind.call(Function.call, String.prototype.replace);
var $strSlice = bind.call(Function.call, String.prototype.slice);

/* adapted from https://github.com/lodash/lodash/blob/4.17.15/dist/lodash.js#L6735-L6744 */
var rePropName = /[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g;
var reEscapeChar = /\\(\\)?/g; /** Used to match backslashes in property paths. */
var stringToPath = function stringToPath(string) {
	var first = $strSlice(string, 0, 1);
	var last = $strSlice(string, -1);
	if (first === '%' && last !== '%') {
		throw new $SyntaxError('invalid intrinsic syntax, expected closing `%`');
	} else if (last === '%' && first !== '%') {
		throw new $SyntaxError('invalid intrinsic syntax, expected opening `%`');
	}
	var result = [];
	$replace(string, rePropName, function (match, number, quote, subString) {
		result[result.length] = quote ? $replace(subString, reEscapeChar, '$1') : number || match;
	});
	return result;
};
/* end adaptation */

var getBaseIntrinsic = function getBaseIntrinsic(name, allowMissing) {
	var intrinsicName = name;
	var alias;
	if (hasOwn(LEGACY_ALIASES, intrinsicName)) {
		alias = LEGACY_ALIASES[intrinsicName];
		intrinsicName = '%' + alias[0] + '%';
	}

	if (hasOwn(INTRINSICS, intrinsicName)) {
		var value = INTRINSICS[intrinsicName];
		if (value === needsEval) {
			value = doEval(intrinsicName);
		}
		if (typeof value === 'undefined' && !allowMissing) {
			throw new $TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');
		}

		return {
			alias: alias,
			name: intrinsicName,
			value: value
		};
	}

	throw new $SyntaxError('intrinsic ' + name + ' does not exist!');
};

module.exports = function GetIntrinsic(name, allowMissing) {
	if (typeof name !== 'string' || name.length === 0) {
		throw new $TypeError('intrinsic name must be a non-empty string');
	}
	if (arguments.length > 1 && typeof allowMissing !== 'boolean') {
		throw new $TypeError('"allowMissing" argument must be a boolean');
	}

	var parts = stringToPath(name);
	var intrinsicBaseName = parts.length > 0 ? parts[0] : '';

	var intrinsic = getBaseIntrinsic('%' + intrinsicBaseName + '%', allowMissing);
	var intrinsicRealName = intrinsic.name;
	var value = intrinsic.value;
	var skipFurtherCaching = false;

	var alias = intrinsic.alias;
	if (alias) {
		intrinsicBaseName = alias[0];
		$spliceApply(parts, $concat([0, 1], alias));
	}

	for (var i = 1, isOwn = true; i < parts.length; i += 1) {
		var part = parts[i];
		var first = $strSlice(part, 0, 1);
		var last = $strSlice(part, -1);
		if (
			(
				(first === '"' || first === "'" || first === '`')
				|| (last === '"' || last === "'" || last === '`')
			)
			&& first !== last
		) {
			throw new $SyntaxError('property names with quotes must have matching quotes');
		}
		if (part === 'constructor' || !isOwn) {
			skipFurtherCaching = true;
		}

		intrinsicBaseName += '.' + part;
		intrinsicRealName = '%' + intrinsicBaseName + '%';

		if (hasOwn(INTRINSICS, intrinsicRealName)) {
			value = INTRINSICS[intrinsicRealName];
		} else if (value != null) {
			if (!(part in value)) {
				if (!allowMissing) {
					throw new $TypeError('base intrinsic for ' + name + ' exists, but the property is not available.');
				}
				return void undefined;
			}
			if ($gOPD && (i + 1) >= parts.length) {
				var desc = $gOPD(value, part);
				isOwn = !!desc;

				// By convention, when a data property is converted to an accessor
				// property to emulate a data property that does not suffer from
				// the override mistake, that accessor's getter is marked with
				// an `originalValue` property. Here, when we detect this, we
				// uphold the illusion by pretending to see that original data
				// property, i.e., returning the value rather than the getter
				// itself.
				if (isOwn && 'get' in desc && !('originalValue' in desc.get)) {
					value = desc.get;
				} else {
					value = value[part];
				}
			} else {
				isOwn = hasOwn(value, part);
				value = value[part];
			}

			if (isOwn && !skipFurtherCaching) {
				INTRINSICS[intrinsicRealName] = value;
			}
		}
	}
	return value;
};

},{"function-bind":197,"has":202,"has-symbols":200}],199:[function(require,module,exports){
'use strict';

var GetIntrinsic = require('get-intrinsic');

var $defineProperty = GetIntrinsic('%Object.defineProperty%', true);

var hasPropertyDescriptors = function hasPropertyDescriptors() {
	if ($defineProperty) {
		try {
			$defineProperty({}, 'a', { value: 1 });
			return true;
		} catch (e) {
			// IE 8 has a broken defineProperty
			return false;
		}
	}
	return false;
};

hasPropertyDescriptors.hasArrayLengthDefineBug = function hasArrayLengthDefineBug() {
	// node v0.6 has a bug where array lengths can be Set but not Defined
	if (!hasPropertyDescriptors()) {
		return null;
	}
	try {
		return $defineProperty([], 'length', { value: 1 }).length !== 1;
	} catch (e) {
		// In Firefox 4-22, defining length on an array throws an exception.
		return true;
	}
};

module.exports = hasPropertyDescriptors;

},{"get-intrinsic":198}],200:[function(require,module,exports){
'use strict';

var origSymbol = typeof Symbol !== 'undefined' && Symbol;
var hasSymbolSham = require('./shams');

module.exports = function hasNativeSymbols() {
	if (typeof origSymbol !== 'function') { return false; }
	if (typeof Symbol !== 'function') { return false; }
	if (typeof origSymbol('foo') !== 'symbol') { return false; }
	if (typeof Symbol('bar') !== 'symbol') { return false; }

	return hasSymbolSham();
};

},{"./shams":201}],201:[function(require,module,exports){
'use strict';

/* eslint complexity: [2, 18], max-statements: [2, 33] */
module.exports = function hasSymbols() {
	if (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') { return false; }
	if (typeof Symbol.iterator === 'symbol') { return true; }

	var obj = {};
	var sym = Symbol('test');
	var symObj = Object(sym);
	if (typeof sym === 'string') { return false; }

	if (Object.prototype.toString.call(sym) !== '[object Symbol]') { return false; }
	if (Object.prototype.toString.call(symObj) !== '[object Symbol]') { return false; }

	// temp disabled per https://github.com/ljharb/object.assign/issues/17
	// if (sym instanceof Symbol) { return false; }
	// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4
	// if (!(symObj instanceof Symbol)) { return false; }

	// if (typeof Symbol.prototype.toString !== 'function') { return false; }
	// if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }

	var symVal = 42;
	obj[sym] = symVal;
	for (sym in obj) { return false; } // eslint-disable-line no-restricted-syntax, no-unreachable-loop
	if (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) { return false; }

	if (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) { return false; }

	var syms = Object.getOwnPropertySymbols(obj);
	if (syms.length !== 1 || syms[0] !== sym) { return false; }

	if (!Object.prototype.propertyIsEnumerable.call(obj, sym)) { return false; }

	if (typeof Object.getOwnPropertyDescriptor === 'function') {
		var descriptor = Object.getOwnPropertyDescriptor(obj, sym);
		if (descriptor.value !== symVal || descriptor.enumerable !== true) { return false; }
	}

	return true;
};

},{}],202:[function(require,module,exports){
'use strict';

var bind = require('function-bind');

module.exports = bind.call(Function.call, Object.prototype.hasOwnProperty);

},{"function-bind":197}],203:[function(require,module,exports){
/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */
exports.read = function (buffer, offset, isLE, mLen, nBytes) {
  var e, m
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var nBits = -7
  var i = isLE ? (nBytes - 1) : 0
  var d = isLE ? -1 : 1
  var s = buffer[offset + i]

  i += d

  e = s & ((1 << (-nBits)) - 1)
  s >>= (-nBits)
  nBits += eLen
  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  m = e & ((1 << (-nBits)) - 1)
  e >>= (-nBits)
  nBits += mLen
  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  if (e === 0) {
    e = 1 - eBias
  } else if (e === eMax) {
    return m ? NaN : ((s ? -1 : 1) * Infinity)
  } else {
    m = m + Math.pow(2, mLen)
    e = e - eBias
  }
  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
}

exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
  var e, m, c
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
  var i = isLE ? 0 : (nBytes - 1)
  var d = isLE ? 1 : -1
  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0

  value = Math.abs(value)

  if (isNaN(value) || value === Infinity) {
    m = isNaN(value) ? 1 : 0
    e = eMax
  } else {
    e = Math.floor(Math.log(value) / Math.LN2)
    if (value * (c = Math.pow(2, -e)) < 1) {
      e--
      c *= 2
    }
    if (e + eBias >= 1) {
      value += rt / c
    } else {
      value += rt * Math.pow(2, 1 - eBias)
    }
    if (value * c >= 2) {
      e++
      c /= 2
    }

    if (e + eBias >= eMax) {
      m = 0
      e = eMax
    } else if (e + eBias >= 1) {
      m = ((value * c) - 1) * Math.pow(2, mLen)
      e = e + eBias
    } else {
      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
      e = 0
    }
  }

  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

  e = (e << mLen) | m
  eLen += mLen
  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

  buffer[offset + i - d] |= s * 128
}

},{}],204:[function(require,module,exports){
if (typeof Object.create === 'function') {
  // implementation from standard node.js 'util' module
  module.exports = function inherits(ctor, superCtor) {
    if (superCtor) {
      ctor.super_ = superCtor
      ctor.prototype = Object.create(superCtor.prototype, {
        constructor: {
          value: ctor,
          enumerable: false,
          writable: true,
          configurable: true
        }
      })
    }
  };
} else {
  // old school shim for old browsers
  module.exports = function inherits(ctor, superCtor) {
    if (superCtor) {
      ctor.super_ = superCtor
      var TempCtor = function () {}
      TempCtor.prototype = superCtor.prototype
      ctor.prototype = new TempCtor()
      ctor.prototype.constructor = ctor
    }
  }
}

},{}],205:[function(require,module,exports){
'use strict';

var fnToStr = Function.prototype.toString;
var reflectApply = typeof Reflect === 'object' && Reflect !== null && Reflect.apply;
var badArrayLike;
var isCallableMarker;
if (typeof reflectApply === 'function' && typeof Object.defineProperty === 'function') {
	try {
		badArrayLike = Object.defineProperty({}, 'length', {
			get: function () {
				throw isCallableMarker;
			}
		});
		isCallableMarker = {};
		// eslint-disable-next-line no-throw-literal
		reflectApply(function () { throw 42; }, null, badArrayLike);
	} catch (_) {
		if (_ !== isCallableMarker) {
			reflectApply = null;
		}
	}
} else {
	reflectApply = null;
}

var constructorRegex = /^\s*class\b/;
var isES6ClassFn = function isES6ClassFunction(value) {
	try {
		var fnStr = fnToStr.call(value);
		return constructorRegex.test(fnStr);
	} catch (e) {
		return false; // not a function
	}
};

var tryFunctionObject = function tryFunctionToStr(value) {
	try {
		if (isES6ClassFn(value)) { return false; }
		fnToStr.call(value);
		return true;
	} catch (e) {
		return false;
	}
};
var toStr = Object.prototype.toString;
var fnClass = '[object Function]';
var genClass = '[object GeneratorFunction]';
var hasToStringTag = typeof Symbol === 'function' && !!Symbol.toStringTag; // better: use `has-tostringtag`
/* globals document: false */
var documentDotAll = typeof document === 'object' && typeof document.all === 'undefined' && document.all !== undefined ? document.all : {};

module.exports = reflectApply
	? function isCallable(value) {
		if (value === documentDotAll) { return true; }
		if (!value) { return false; }
		if (typeof value !== 'function' && typeof value !== 'object') { return false; }
		if (typeof value === 'function' && !value.prototype) { return true; }
		try {
			reflectApply(value, null, badArrayLike);
		} catch (e) {
			if (e !== isCallableMarker) { return false; }
		}
		return !isES6ClassFn(value);
	}
	: function isCallable(value) {
		if (value === documentDotAll) { return true; }
		if (!value) { return false; }
		if (typeof value !== 'function' && typeof value !== 'object') { return false; }
		if (typeof value === 'function' && !value.prototype) { return true; }
		if (hasToStringTag) { return tryFunctionObject(value); }
		if (isES6ClassFn(value)) { return false; }
		var strClass = toStr.call(value);
		return strClass === fnClass || strClass === genClass;
	};

},{}],206:[function(require,module,exports){
'use strict';

var keysShim;
if (!Object.keys) {
	// modified from https://github.com/es-shims/es5-shim
	var has = Object.prototype.hasOwnProperty;
	var toStr = Object.prototype.toString;
	var isArgs = require('./isArguments'); // eslint-disable-line global-require
	var isEnumerable = Object.prototype.propertyIsEnumerable;
	var hasDontEnumBug = !isEnumerable.call({ toString: null }, 'toString');
	var hasProtoEnumBug = isEnumerable.call(function () {}, 'prototype');
	var dontEnums = [
		'toString',
		'toLocaleString',
		'valueOf',
		'hasOwnProperty',
		'isPrototypeOf',
		'propertyIsEnumerable',
		'constructor'
	];
	var equalsConstructorPrototype = function (o) {
		var ctor = o.constructor;
		return ctor && ctor.prototype === o;
	};
	var excludedKeys = {
		$applicationCache: true,
		$console: true,
		$external: true,
		$frame: true,
		$frameElement: true,
		$frames: true,
		$innerHeight: true,
		$innerWidth: true,
		$onmozfullscreenchange: true,
		$onmozfullscreenerror: true,
		$outerHeight: true,
		$outerWidth: true,
		$pageXOffset: true,
		$pageYOffset: true,
		$parent: true,
		$scrollLeft: true,
		$scrollTop: true,
		$scrollX: true,
		$scrollY: true,
		$self: true,
		$webkitIndexedDB: true,
		$webkitStorageInfo: true,
		$window: true
	};
	var hasAutomationEqualityBug = (function () {
		/* global window */
		if (typeof window === 'undefined') { return false; }
		for (var k in window) {
			try {
				if (!excludedKeys['$' + k] && has.call(window, k) && window[k] !== null && typeof window[k] === 'object') {
					try {
						equalsConstructorPrototype(window[k]);
					} catch (e) {
						return true;
					}
				}
			} catch (e) {
				return true;
			}
		}
		return false;
	}());
	var equalsConstructorPrototypeIfNotBuggy = function (o) {
		/* global window */
		if (typeof window === 'undefined' || !hasAutomationEqualityBug) {
			return equalsConstructorPrototype(o);
		}
		try {
			return equalsConstructorPrototype(o);
		} catch (e) {
			return false;
		}
	};

	keysShim = function keys(object) {
		var isObject = object !== null && typeof object === 'object';
		var isFunction = toStr.call(object) === '[object Function]';
		var isArguments = isArgs(object);
		var isString = isObject && toStr.call(object) === '[object String]';
		var theKeys = [];

		if (!isObject && !isFunction && !isArguments) {
			throw new TypeError('Object.keys called on a non-object');
		}

		var skipProto = hasProtoEnumBug && isFunction;
		if (isString && object.length > 0 && !has.call(object, 0)) {
			for (var i = 0; i < object.length; ++i) {
				theKeys.push(String(i));
			}
		}

		if (isArguments && object.length > 0) {
			for (var j = 0; j < object.length; ++j) {
				theKeys.push(String(j));
			}
		} else {
			for (var name in object) {
				if (!(skipProto && name === 'prototype') && has.call(object, name)) {
					theKeys.push(String(name));
				}
			}
		}

		if (hasDontEnumBug) {
			var skipConstructor = equalsConstructorPrototypeIfNotBuggy(object);

			for (var k = 0; k < dontEnums.length; ++k) {
				if (!(skipConstructor && dontEnums[k] === 'constructor') && has.call(object, dontEnums[k])) {
					theKeys.push(dontEnums[k]);
				}
			}
		}
		return theKeys;
	};
}
module.exports = keysShim;

},{"./isArguments":208}],207:[function(require,module,exports){
'use strict';

var slice = Array.prototype.slice;
var isArgs = require('./isArguments');

var origKeys = Object.keys;
var keysShim = origKeys ? function keys(o) { return origKeys(o); } : require('./implementation');

var originalKeys = Object.keys;

keysShim.shim = function shimObjectKeys() {
	if (Object.keys) {
		var keysWorksWithArguments = (function () {
			// Safari 5.0 bug
			var args = Object.keys(arguments);
			return args && args.length === arguments.length;
		}(1, 2));
		if (!keysWorksWithArguments) {
			Object.keys = function keys(object) { // eslint-disable-line func-name-matching
				if (isArgs(object)) {
					return originalKeys(slice.call(object));
				}
				return originalKeys(object);
			};
		}
	} else {
		Object.keys = keysShim;
	}
	return Object.keys || keysShim;
};

module.exports = keysShim;

},{"./implementation":206,"./isArguments":208}],208:[function(require,module,exports){
'use strict';

var toStr = Object.prototype.toString;

module.exports = function isArguments(value) {
	var str = toStr.call(value);
	var isArgs = str === '[object Arguments]';
	if (!isArgs) {
		isArgs = str !== '[object Array]' &&
			value !== null &&
			typeof value === 'object' &&
			typeof value.length === 'number' &&
			value.length >= 0 &&
			toStr.call(value.callee) === '[object Function]';
	}
	return isArgs;
};

},{}],209:[function(require,module,exports){
// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };

},{}],210:[function(require,module,exports){
(function (process,setImmediate){(function (){
var through = require('through');
var nextTick = typeof setImmediate !== 'undefined'
    ? setImmediate
    : process.nextTick
;

module.exports = function (write, end) {
    var tr = through(write, end);
    tr.pause();
    var resume = tr.resume;
    var pause = tr.pause;
    var paused = false;
    
    tr.pause = function () {
        paused = true;
        return pause.apply(this, arguments);
    };
    
    tr.resume = function () {
        paused = false;
        return resume.apply(this, arguments);
    };
    
    nextTick(function () {
        if (!paused) tr.resume();
    });
    
    return tr;
};

}).call(this)}).call(this,require('_process'),require("timers").setImmediate)
},{"_process":209,"through":223,"timers":224}],211:[function(require,module,exports){
/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */
/* eslint-disable node/no-deprecated-api */
var buffer = require('buffer')
var Buffer = buffer.Buffer

// alternative to using Object.keys for old browsers
function copyProps (src, dst) {
  for (var key in src) {
    dst[key] = src[key]
  }
}
if (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {
  module.exports = buffer
} else {
  // Copy properties from require('buffer')
  copyProps(buffer, exports)
  exports.Buffer = SafeBuffer
}

function SafeBuffer (arg, encodingOrOffset, length) {
  return Buffer(arg, encodingOrOffset, length)
}

SafeBuffer.prototype = Object.create(Buffer.prototype)

// Copy static methods from Buffer
copyProps(Buffer, SafeBuffer)

SafeBuffer.from = function (arg, encodingOrOffset, length) {
  if (typeof arg === 'number') {
    throw new TypeError('Argument must not be a number')
  }
  return Buffer(arg, encodingOrOffset, length)
}

SafeBuffer.alloc = function (size, fill, encoding) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  var buf = Buffer(size)
  if (fill !== undefined) {
    if (typeof encoding === 'string') {
      buf.fill(fill, encoding)
    } else {
      buf.fill(fill)
    }
  } else {
    buf.fill(0)
  }
  return buf
}

SafeBuffer.allocUnsafe = function (size) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  return Buffer(size)
}

SafeBuffer.allocUnsafeSlow = function (size) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  return buffer.SlowBuffer(size)
}

},{"buffer":115}],212:[function(require,module,exports){
'use strict';

var bind = require('function-bind');
var ES = require('es-abstract/es5');
var replace = bind.call(Function.call, String.prototype.replace);

var leftWhitespace = /^[\x09\x0A\x0B\x0C\x0D\x20\xA0\u1680\u180E\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF]+/;
var rightWhitespace = /[\x09\x0A\x0B\x0C\x0D\x20\xA0\u1680\u180E\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF]+$/;

module.exports = function trim() {
	var S = ES.ToString(ES.CheckObjectCoercible(this));
	return replace(replace(S, leftWhitespace, ''), rightWhitespace, '');
};

},{"es-abstract/es5":184,"function-bind":197}],213:[function(require,module,exports){
'use strict';

var bind = require('function-bind');
var define = require('define-properties');

var implementation = require('./implementation');
var getPolyfill = require('./polyfill');
var shim = require('./shim');

var boundTrim = bind.call(Function.call, getPolyfill());

define(boundTrim, {
	getPolyfill: getPolyfill,
	implementation: implementation,
	shim: shim
});

module.exports = boundTrim;

},{"./implementation":212,"./polyfill":214,"./shim":215,"define-properties":138,"function-bind":197}],214:[function(require,module,exports){
'use strict';

var implementation = require('./implementation');

var zeroWidthSpace = '\u200b';

module.exports = function getPolyfill() {
	if (String.prototype.trim && zeroWidthSpace.trim() === zeroWidthSpace) {
		return String.prototype.trim;
	}
	return implementation;
};

},{"./implementation":212}],215:[function(require,module,exports){
'use strict';

var define = require('define-properties');
var getPolyfill = require('./polyfill');

module.exports = function shimStringTrim() {
	var polyfill = getPolyfill();
	define(String.prototype, { trim: polyfill }, { trim: function () { return String.prototype.trim !== polyfill; } });
	return polyfill;
};

},{"./polyfill":214,"define-properties":138}],216:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

'use strict';

/*<replacement>*/

var Buffer = require('safe-buffer').Buffer;
/*</replacement>*/

var isEncoding = Buffer.isEncoding || function (encoding) {
  encoding = '' + encoding;
  switch (encoding && encoding.toLowerCase()) {
    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':
      return true;
    default:
      return false;
  }
};

function _normalizeEncoding(enc) {
  if (!enc) return 'utf8';
  var retried;
  while (true) {
    switch (enc) {
      case 'utf8':
      case 'utf-8':
        return 'utf8';
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return 'utf16le';
      case 'latin1':
      case 'binary':
        return 'latin1';
      case 'base64':
      case 'ascii':
      case 'hex':
        return enc;
      default:
        if (retried) return; // undefined
        enc = ('' + enc).toLowerCase();
        retried = true;
    }
  }
};

// Do not cache `Buffer.isEncoding` when checking encoding names as some
// modules monkey-patch it to support additional encodings
function normalizeEncoding(enc) {
  var nenc = _normalizeEncoding(enc);
  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);
  return nenc || enc;
}

// StringDecoder provides an interface for efficiently splitting a series of
// buffers into a series of JS strings without breaking apart multi-byte
// characters.
exports.StringDecoder = StringDecoder;
function StringDecoder(encoding) {
  this.encoding = normalizeEncoding(encoding);
  var nb;
  switch (this.encoding) {
    case 'utf16le':
      this.text = utf16Text;
      this.end = utf16End;
      nb = 4;
      break;
    case 'utf8':
      this.fillLast = utf8FillLast;
      nb = 4;
      break;
    case 'base64':
      this.text = base64Text;
      this.end = base64End;
      nb = 3;
      break;
    default:
      this.write = simpleWrite;
      this.end = simpleEnd;
      return;
  }
  this.lastNeed = 0;
  this.lastTotal = 0;
  this.lastChar = Buffer.allocUnsafe(nb);
}

StringDecoder.prototype.write = function (buf) {
  if (buf.length === 0) return '';
  var r;
  var i;
  if (this.lastNeed) {
    r = this.fillLast(buf);
    if (r === undefined) return '';
    i = this.lastNeed;
    this.lastNeed = 0;
  } else {
    i = 0;
  }
  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);
  return r || '';
};

StringDecoder.prototype.end = utf8End;

// Returns only complete characters in a Buffer
StringDecoder.prototype.text = utf8Text;

// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer
StringDecoder.prototype.fillLast = function (buf) {
  if (this.lastNeed <= buf.length) {
    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);
    return this.lastChar.toString(this.encoding, 0, this.lastTotal);
  }
  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);
  this.lastNeed -= buf.length;
};

// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a
// continuation byte. If an invalid byte is detected, -2 is returned.
function utf8CheckByte(byte) {
  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;
  return byte >> 6 === 0x02 ? -1 : -2;
}

// Checks at most 3 bytes at the end of a Buffer in order to detect an
// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)
// needed to complete the UTF-8 character (if applicable) are returned.
function utf8CheckIncomplete(self, buf, i) {
  var j = buf.length - 1;
  if (j < i) return 0;
  var nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) self.lastNeed = nb - 1;
    return nb;
  }
  if (--j < i || nb === -2) return 0;
  nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) self.lastNeed = nb - 2;
    return nb;
  }
  if (--j < i || nb === -2) return 0;
  nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) {
      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;
    }
    return nb;
  }
  return 0;
}

// Validates as many continuation bytes for a multi-byte UTF-8 character as
// needed or are available. If we see a non-continuation byte where we expect
// one, we "replace" the validated continuation bytes we've seen so far with
// a single UTF-8 replacement character ('\ufffd'), to match v8's UTF-8 decoding
// behavior. The continuation byte check is included three times in the case
// where all of the continuation bytes for a character exist in the same buffer.
// It is also done this way as a slight performance increase instead of using a
// loop.
function utf8CheckExtraBytes(self, buf, p) {
  if ((buf[0] & 0xC0) !== 0x80) {
    self.lastNeed = 0;
    return '\ufffd';
  }
  if (self.lastNeed > 1 && buf.length > 1) {
    if ((buf[1] & 0xC0) !== 0x80) {
      self.lastNeed = 1;
      return '\ufffd';
    }
    if (self.lastNeed > 2 && buf.length > 2) {
      if ((buf[2] & 0xC0) !== 0x80) {
        self.lastNeed = 2;
        return '\ufffd';
      }
    }
  }
}

// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.
function utf8FillLast(buf) {
  var p = this.lastTotal - this.lastNeed;
  var r = utf8CheckExtraBytes(this, buf, p);
  if (r !== undefined) return r;
  if (this.lastNeed <= buf.length) {
    buf.copy(this.lastChar, p, 0, this.lastNeed);
    return this.lastChar.toString(this.encoding, 0, this.lastTotal);
  }
  buf.copy(this.lastChar, p, 0, buf.length);
  this.lastNeed -= buf.length;
}

// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a
// partial character, the character's bytes are buffered until the required
// number of bytes are available.
function utf8Text(buf, i) {
  var total = utf8CheckIncomplete(this, buf, i);
  if (!this.lastNeed) return buf.toString('utf8', i);
  this.lastTotal = total;
  var end = buf.length - (total - this.lastNeed);
  buf.copy(this.lastChar, 0, end);
  return buf.toString('utf8', i, end);
}

// For UTF-8, a replacement character is added when ending on a partial
// character.
function utf8End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) return r + '\ufffd';
  return r;
}

// UTF-16LE typically needs two bytes per character, but even if we have an even
// number of bytes available, we need to check if we end on a leading/high
// surrogate. In that case, we need to wait for the next two bytes in order to
// decode the last character properly.
function utf16Text(buf, i) {
  if ((buf.length - i) % 2 === 0) {
    var r = buf.toString('utf16le', i);
    if (r) {
      var c = r.charCodeAt(r.length - 1);
      if (c >= 0xD800 && c <= 0xDBFF) {
        this.lastNeed = 2;
        this.lastTotal = 4;
        this.lastChar[0] = buf[buf.length - 2];
        this.lastChar[1] = buf[buf.length - 1];
        return r.slice(0, -1);
      }
    }
    return r;
  }
  this.lastNeed = 1;
  this.lastTotal = 2;
  this.lastChar[0] = buf[buf.length - 1];
  return buf.toString('utf16le', i, buf.length - 1);
}

// For UTF-16LE we do not explicitly append special replacement characters if we
// end on a partial character, we simply let v8 handle that.
function utf16End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) {
    var end = this.lastTotal - this.lastNeed;
    return r + this.lastChar.toString('utf16le', 0, end);
  }
  return r;
}

function base64Text(buf, i) {
  var n = (buf.length - i) % 3;
  if (n === 0) return buf.toString('base64', i);
  this.lastNeed = 3 - n;
  this.lastTotal = 3;
  if (n === 1) {
    this.lastChar[0] = buf[buf.length - 1];
  } else {
    this.lastChar[0] = buf[buf.length - 2];
    this.lastChar[1] = buf[buf.length - 1];
  }
  return buf.toString('base64', i, buf.length - n);
}

function base64End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);
  return r;
}

// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)
function simpleWrite(buf) {
  return buf.toString(this.encoding);
}

function simpleEnd(buf) {
  return buf && buf.length ? this.write(buf) : '';
}
},{"safe-buffer":211}],217:[function(require,module,exports){
(function (process,setImmediate){(function (){
var defined = require('defined');
var createDefaultStream = require('./lib/default_stream');
var Test = require('./lib/test');
var createResult = require('./lib/results');
var through = require('through');

var canEmitExit = typeof process !== 'undefined' && process
    && typeof process.on === 'function' && process.browser !== true
;
var canExit = typeof process !== 'undefined' && process
    && typeof process.exit === 'function'
;

var nextTick = typeof setImmediate !== 'undefined'
    ? setImmediate
    : process.nextTick
;

exports = module.exports = (function () {
    var harness;
    var lazyLoad = function () {
        return getHarness().apply(this, arguments);
    };
    
    lazyLoad.only = function () {
        return getHarness().only.apply(this, arguments);
    };
    
    lazyLoad.createStream = function (opts) {
        if (!opts) opts = {};
        if (!harness) {
            var output = through();
            getHarness({ stream: output, objectMode: opts.objectMode });
            return output;
        }
        return harness.createStream(opts);
    };
    
    lazyLoad.onFinish = function () {
        return getHarness().onFinish.apply(this, arguments);
    };

    lazyLoad.getHarness = getHarness

    return lazyLoad

    function getHarness (opts) {
        if (!opts) opts = {};
        opts.autoclose = !canEmitExit;
        if (!harness) harness = createExitHarness(opts);
        return harness;
    }
})();

function createExitHarness (conf) {
    if (!conf) conf = {};
    var harness = createHarness({
        autoclose: defined(conf.autoclose, false)
    });
    
    var stream = harness.createStream({ objectMode: conf.objectMode });
    var es = stream.pipe(conf.stream || createDefaultStream());
    if (canEmitExit) {
        es.on('error', function (err) { harness._exitCode = 1 });
    }
    
    var ended = false;
    stream.on('end', function () { ended = true });
    
    if (conf.exit === false) return harness;
    if (!canEmitExit || !canExit) return harness;

    var inErrorState = false;

    process.on('exit', function (code) {
        // let the process exit cleanly.
        if (code !== 0) {
            return
        }

        if (!ended) {
            var only = harness._results._only;
            for (var i = 0; i < harness._tests.length; i++) {
                var t = harness._tests[i];
                if (only && t.name !== only) continue;
                t._exit();
            }
        }
        harness.close();
        process.exit(code || harness._exitCode);
    });
    
    return harness;
}

exports.createHarness = createHarness;
exports.Test = Test;
exports.test = exports; // tap compat
exports.test.skip = Test.skip;

var exitInterval;

function createHarness (conf_) {
    if (!conf_) conf_ = {};
    var results = createResult();
    if (conf_.autoclose !== false) {
        results.once('done', function () { results.close() });
    }
    
    var test = function (name, conf, cb) {
        var t = new Test(name, conf, cb);
        test._tests.push(t);
        
        (function inspectCode (st) {
            st.on('test', function sub (st_) {
                inspectCode(st_);
            });
            st.on('result', function (r) {
                if (!r.ok && typeof r !== 'string') test._exitCode = 1
            });
        })(t);
        
        results.push(t);
        return t;
    };
    test._results = results;
    
    test._tests = [];
    
    test.createStream = function (opts) {
        return results.createStream(opts);
    };

    test.onFinish = function (cb) {
        results.on('done', cb);
    };
    
    var only = false;
    test.only = function (name) {
        if (only) throw new Error('there can only be one only test');
        results.only(name);
        only = true;
        return test.apply(null, arguments);
    };
    test._exitCode = 0;
    
    test.close = function () { results.close() };
    
    return test;
}

}).call(this)}).call(this,require('_process'),require("timers").setImmediate)
},{"./lib/default_stream":218,"./lib/results":220,"./lib/test":221,"_process":209,"defined":139,"through":223,"timers":224}],218:[function(require,module,exports){
(function (process){(function (){
var through = require('through');
var fs = require('fs');

module.exports = function () {
    var line = '';
    var stream = through(write, flush);
    return stream;
    
    function write (buf) {
        for (var i = 0; i < buf.length; i++) {
            var c = typeof buf === 'string'
                ? buf.charAt(i)
                : String.fromCharCode(buf[i])
            ;
            if (c === '\n') flush();
            else line += c;
        }
    }
    
    function flush () {
        if (fs.writeSync && /^win/.test(process.platform)) {
            try { fs.writeSync(1, line + '\n'); }
            catch (e) { stream.emit('error', e) }
        }
        else {
            try { console.log(line) }
            catch (e) { stream.emit('error', e) }
        }
        line = '';
    }
};

}).call(this)}).call(this,require('_process'))
},{"_process":209,"fs":114,"through":223}],219:[function(require,module,exports){
(function (process,setImmediate){(function (){
module.exports = typeof setImmediate !== 'undefined'
    ? setImmediate
    : process.nextTick
;

}).call(this)}).call(this,require('_process'),require("timers").setImmediate)
},{"_process":209,"timers":224}],220:[function(require,module,exports){
(function (process,setImmediate){(function (){
var EventEmitter = require('events').EventEmitter;
var inherits = require('inherits');
var through = require('through');
var resumer = require('resumer');
var inspect = require('object-inspect');
var bind = require('function-bind');
var has = require('has');
var regexpTest = bind.call(Function.call, RegExp.prototype.test);
var yamlIndicators = /\:|\-|\?/;
var nextTick = typeof setImmediate !== 'undefined'
    ? setImmediate
    : process.nextTick
;

module.exports = Results;
inherits(Results, EventEmitter);

function Results () {
    if (!(this instanceof Results)) return new Results;
    this.count = 0;
    this.fail = 0;
    this.pass = 0;
    this._stream = through();
    this.tests = [];
}

Results.prototype.createStream = function (opts) {
    if (!opts) opts = {};
    var self = this;
    var output, testId = 0;
    if (opts.objectMode) {
        output = through();
        self.on('_push', function ontest (t, extra) {
            if (!extra) extra = {};
            var id = testId++;
            t.once('prerun', function () {
                var row = {
                    type: 'test',
                    name: t.name,
                    id: id
                };
                if (has(extra, 'parent')) {
                    row.parent = extra.parent;
                }
                output.queue(row);
            });
            t.on('test', function (st) {
                ontest(st, { parent: id });
            });
            t.on('result', function (res) {
                res.test = id;
                res.type = 'assert';
                output.queue(res);
            });
            t.on('end', function () {
                output.queue({ type: 'end', test: id });
            });
        });
        self.on('done', function () { output.queue(null) });
    }
    else {
        output = resumer();
        output.queue('TAP version 13\n');
        self._stream.pipe(output);
    }
    
    nextTick(function next() {
        var t;
        while (t = getNextTest(self)) {
            t.run();
            if (!t.ended) return t.once('end', function(){ nextTick(next); });
        }
        self.emit('done');
    });
    
    return output;
};

Results.prototype.push = function (t) {
    var self = this;
    self.tests.push(t);
    self._watch(t);
    self.emit('_push', t);
};

Results.prototype.only = function (name) {
    this._only = name;
};

Results.prototype._watch = function (t) {
    var self = this;
    var write = function (s) { self._stream.queue(s) };
    t.once('prerun', function () {
        write('# ' + t.name + '\n');
    });
    
    t.on('result', function (res) {
        if (typeof res === 'string') {
            write('# ' + res + '\n');
            return;
        }
        write(encodeResult(res, self.count + 1));
        self.count ++;

        if (res.ok) self.pass ++
        else self.fail ++
    });
    
    t.on('test', function (st) { self._watch(st) });
};

Results.prototype.close = function () {
    var self = this;
    if (self.closed) self._stream.emit('error', new Error('ALREADY CLOSED'));
    self.closed = true;
    var write = function (s) { self._stream.queue(s) };
    
    write('\n1..' + self.count + '\n');
    write('# tests ' + self.count + '\n');
    write('# pass  ' + self.pass + '\n');
    if (self.fail) write('# fail  ' + self.fail + '\n')
    else write('\n# ok\n')

    self._stream.queue(null);
};

function encodeResult (res, count) {
    var output = '';
    output += (res.ok ? 'ok ' : 'not ok ') + count;
    output += res.name ? ' ' + res.name.toString().replace(/\s+/g, ' ') : '';
    
    if (res.skip) output += ' # SKIP';
    else if (res.todo) output += ' # TODO';
    
    output += '\n';
    if (res.ok) return output;
    
    var outer = '  ';
    var inner = outer + '  ';
    output += outer + '---\n';
    output += inner + 'operator: ' + res.operator + '\n';
    
    if (has(res, 'expected') || has(res, 'actual')) {
        var ex = inspect(res.expected);
        var ac = inspect(res.actual);
        
        if (Math.max(ex.length, ac.length) > 65 || invalidYaml(ex) || invalidYaml(ac)) {
            output += inner + 'expected: |-\n' + inner + '  ' + ex + '\n';
            output += inner + 'actual: |-\n' + inner + '  ' + ac + '\n';
        }
        else {
            output += inner + 'expected: ' + ex + '\n';
            output += inner + 'actual:   ' + ac + '\n';
        }
    }
    if (res.at) {
        output += inner + 'at: ' + res.at + '\n';
    }
    if (res.operator === 'error' && res.actual && res.actual.stack) {
        var lines = String(res.actual.stack).split('\n');
        output += inner + 'stack: |-\n';
        for (var i = 0; i < lines.length; i++) {
            output += inner + '  ' + lines[i] + '\n';
        }
    }
    
    output += outer + '...\n';
    return output;
}

function getNextTest (results) {
    if (!results._only) {
        return results.tests.shift();
    }
    
    do {
        var t = results.tests.shift();
        if (!t) continue;
        if (results._only === t.name) {
            return t;
        }
    } while (results.tests.length !== 0)
}

function invalidYaml (str) {
    return regexpTest(yamlIndicators, str);
}

}).call(this)}).call(this,require('_process'),require("timers").setImmediate)
},{"_process":209,"events":116,"function-bind":197,"has":202,"inherits":204,"object-inspect":222,"resumer":210,"through":223,"timers":224}],221:[function(require,module,exports){
(function (__dirname){(function (){
var deepEqual = require('deep-equal');
var defined = require('defined');
var path = require('path');
var inherits = require('inherits');
var EventEmitter = require('events').EventEmitter;
var has = require('has');
var trim = require('string.prototype.trim');

var nextTick = require('./next_tick');

module.exports = Test;

inherits(Test, EventEmitter);

var getTestArgs = function (name_, opts_, cb_) {
    var name = '(anonymous)';
    var opts = {};
    var cb;

    for (var i = 0; i < arguments.length; i++) {
        var arg = arguments[i];
        var t = typeof arg;
        if (t === 'string') {
            name = arg;
        }
        else if (t === 'object') {
            opts = arg || opts;
        }
        else if (t === 'function') {
            cb = arg;
        }
    }
    return { name: name, opts: opts, cb: cb };
};

function Test (name_, opts_, cb_) {
    if (! (this instanceof Test)) {
        return new Test(name_, opts_, cb_);
    }

    var args = getTestArgs(name_, opts_, cb_);

    this.readable = true;
    this.name = args.name || '(anonymous)';
    this.assertCount = 0;
    this.pendingCount = 0;
    this._skip = args.opts.skip || false;
    this._timeout = args.opts.timeout;
    this._plan = undefined;
    this._cb = args.cb;
    this._progeny = [];
    this._ok = true;

    for (var prop in this) {
        this[prop] = (function bind(self, val) {
            if (typeof val === 'function') {
                return function bound() {
                    return val.apply(self, arguments);
                };
            }
            else return val;
        })(this, this[prop]);
    }
}

Test.prototype.run = function () {
    if (this._skip) {
        this.comment('SKIP ' + this.name);
    }
    if (!this._cb || this._skip) {
        return this._end();
    }
    if (this._timeout != null) {
        this.timeoutAfter(this._timeout);
    }
    this.emit('prerun');
    this._cb(this);
    this.emit('run');
};

Test.prototype.test = function (name, opts, cb) {
    var self = this;
    var t = new Test(name, opts, cb);
    this._progeny.push(t);
    this.pendingCount++;
    this.emit('test', t);
    t.on('prerun', function () {
        self.assertCount++;
    })
    
    if (!self._pendingAsserts()) {
        nextTick(function () {
            self._end();
        });
    }
    
    nextTick(function() {
        if (!self._plan && self.pendingCount == self._progeny.length) {
            self._end();
        }
    });
};

Test.prototype.comment = function (msg) {
    var that = this;
    trim(msg).split('\n').forEach(function (aMsg) {
        that.emit('result', trim(aMsg).replace(/^#\s*/, ''));
    });
};

Test.prototype.plan = function (n) {
    this._plan = n;
    this.emit('plan', n);
};

Test.prototype.timeoutAfter = function(ms) {
    if (!ms) throw new Error('timeoutAfter requires a timespan');
    var self = this;
    var timeout = setTimeout(function() {
        self.fail('test timed out after ' + ms + 'ms');
        self.end();
    }, ms);
    this.once('end', function() {
        clearTimeout(timeout);
    });
}

Test.prototype.end = function (err) { 
    var self = this;
    if (arguments.length >= 1 && !!err) {
        this.ifError(err);
    }
    
    if (this.calledEnd) {
        this.fail('.end() called twice');
    }
    this.calledEnd = true;
    this._end();
};

Test.prototype._end = function (err) {
    var self = this;
    if (this._progeny.length) {
        var t = this._progeny.shift();
        t.on('end', function () { self._end() });
        t.run();
        return;
    }
    
    if (!this.ended) this.emit('end');
    var pendingAsserts = this._pendingAsserts();
    if (!this._planError && this._plan !== undefined && pendingAsserts) {
        this._planError = true;
        this.fail('plan != count', {
            expected : this._plan,
            actual : this.assertCount
        });
    }
    this.ended = true;
};

Test.prototype._exit = function () {
    if (this._plan !== undefined &&
        !this._planError && this.assertCount !== this._plan) {
        this._planError = true;
        this.fail('plan != count', {
            expected : this._plan,
            actual : this.assertCount,
            exiting : true
        });
    }
    else if (!this.ended) {
        this.fail('test exited without ending', {
            exiting: true
        });
    }
};

Test.prototype._pendingAsserts = function () {
    if (this._plan === undefined) {
        return 1;
    }
    else {
        return this._plan - (this._progeny.length + this.assertCount);
    }
};

Test.prototype._assert = function assert (ok, opts) {
    var self = this;
    var extra = opts.extra || {};
    
    var res = {
        id : self.assertCount ++,
        ok : Boolean(ok),
        skip : defined(extra.skip, opts.skip),
        name : defined(extra.message, opts.message, '(unnamed assert)'),
        operator : defined(extra.operator, opts.operator)
    };
    if (has(opts, 'actual') || has(extra, 'actual')) {
        res.actual = defined(extra.actual, opts.actual);
    }
    if (has(opts, 'expected') || has(extra, 'expected')) {
        res.expected = defined(extra.expected, opts.expected);
    }
    this._ok = Boolean(this._ok && ok);
    
    if (!ok) {
        res.error = defined(extra.error, opts.error, new Error(res.name));
    }
    
    if (!ok) {
        var e = new Error('exception');
        var err = (e.stack || '').split('\n');
        var dir = path.dirname(__dirname) + '/';
        
        for (var i = 0; i < err.length; i++) {
            var m = /^[^\s]*\s*\bat\s+(.+)/.exec(err[i]);
            if (!m) {
                continue;
            }
            
            var s = m[1].split(/\s+/);
            var filem = /(\/[^:\s]+:(\d+)(?::(\d+))?)/.exec(s[1]);
            if (!filem) {
                filem = /(\/[^:\s]+:(\d+)(?::(\d+))?)/.exec(s[2]);
                
                if (!filem) {
                    filem = /(\/[^:\s]+:(\d+)(?::(\d+))?)/.exec(s[3]);

                    if (!filem) {
                        continue;
                    }
                }
            }
            
            if (filem[1].slice(0, dir.length) === dir) {
                continue;
            }
            
            res.functionName = s[0];
            res.file = filem[1];
            res.line = Number(filem[2]);
            if (filem[3]) res.column = filem[3];
            
            res.at = m[1];
            break;
        }
    }

    self.emit('result', res);
    
    var pendingAsserts = self._pendingAsserts();
    if (!pendingAsserts) {
        if (extra.exiting) {
            self._end();
        } else {
            nextTick(function () {
                self._end();
            });
        }
    }
    
    if (!self._planError && pendingAsserts < 0) {
        self._planError = true;
        self.fail('plan != count', {
            expected : self._plan,
            actual : self._plan - pendingAsserts
        });
    }
};

Test.prototype.fail = function (msg, extra) {
    this._assert(false, {
        message : msg,
        operator : 'fail',
        extra : extra
    });
};

Test.prototype.pass = function (msg, extra) {
    this._assert(true, {
        message : msg,
        operator : 'pass',
        extra : extra
    });
};

Test.prototype.skip = function (msg, extra) {
    this._assert(true, {
        message : msg,
        operator : 'skip',
        skip : true,
        extra : extra
    });
};

Test.prototype.ok
= Test.prototype['true']
= Test.prototype.assert
= function (value, msg, extra) {
    this._assert(value, {
        message : msg,
        operator : 'ok',
        expected : true,
        actual : value,
        extra : extra
    });
};

Test.prototype.notOk
= Test.prototype['false']
= Test.prototype.notok
= function (value, msg, extra) {
    this._assert(!value, {
        message : msg,
        operator : 'notOk',
        expected : false,
        actual : value,
        extra : extra
    });
};

Test.prototype.error
= Test.prototype.ifError
= Test.prototype.ifErr
= Test.prototype.iferror
= function (err, msg, extra) {
    this._assert(!err, {
        message : defined(msg, String(err)),
        operator : 'error',
        actual : err,
        extra : extra
    });
};

Test.prototype.equal
= Test.prototype.equals
= Test.prototype.isEqual
= Test.prototype.is
= Test.prototype.strictEqual
= Test.prototype.strictEquals
= function (a, b, msg, extra) {
    this._assert(a === b, {
        message : defined(msg, 'should be equal'),
        operator : 'equal',
        actual : a,
        expected : b,
        extra : extra
    });
};

Test.prototype.notEqual
= Test.prototype.notEquals
= Test.prototype.notStrictEqual
= Test.prototype.notStrictEquals
= Test.prototype.isNotEqual
= Test.prototype.isNot
= Test.prototype.not
= Test.prototype.doesNotEqual
= Test.prototype.isInequal
= function (a, b, msg, extra) {
    this._assert(a !== b, {
        message : defined(msg, 'should not be equal'),
        operator : 'notEqual',
        actual : a,
        notExpected : b,
        extra : extra
    });
};

Test.prototype.deepEqual
= Test.prototype.deepEquals
= Test.prototype.isEquivalent
= Test.prototype.same
= function (a, b, msg, extra) {
    this._assert(deepEqual(a, b, { strict: true }), {
        message : defined(msg, 'should be equivalent'),
        operator : 'deepEqual',
        actual : a,
        expected : b,
        extra : extra
    });
};

Test.prototype.deepLooseEqual
= Test.prototype.looseEqual
= Test.prototype.looseEquals
= function (a, b, msg, extra) {
    this._assert(deepEqual(a, b), {
        message : defined(msg, 'should be equivalent'),
        operator : 'deepLooseEqual',
        actual : a,
        expected : b,
        extra : extra
    });
};

Test.prototype.notDeepEqual
= Test.prototype.notEquivalent
= Test.prototype.notDeeply
= Test.prototype.notSame
= Test.prototype.isNotDeepEqual
= Test.prototype.isNotDeeply
= Test.prototype.isNotEquivalent
= Test.prototype.isInequivalent
= function (a, b, msg, extra) {
    this._assert(!deepEqual(a, b, { strict: true }), {
        message : defined(msg, 'should not be equivalent'),
        operator : 'notDeepEqual',
        actual : a,
        notExpected : b,
        extra : extra
    });
};

Test.prototype.notDeepLooseEqual
= Test.prototype.notLooseEqual
= Test.prototype.notLooseEquals
= function (a, b, msg, extra) {
    this._assert(!deepEqual(a, b), {
        message : defined(msg, 'should be equivalent'),
        operator : 'notDeepLooseEqual',
        actual : a,
        expected : b,
        extra : extra
    });
};

Test.prototype['throws'] = function (fn, expected, msg, extra) {
    if (typeof expected === 'string') {
        msg = expected;
        expected = undefined;
    }

    var caught = undefined;

    try {
        fn();
    } catch (err) {
        caught = { error : err };
        var message = err.message;
        delete err.message;
        err.message = message;
    }

    var passed = caught;

    if (expected instanceof RegExp) {
        passed = expected.test(caught && caught.error);
        expected = String(expected);
    }

    if (typeof expected === 'function' && caught) {
        passed = caught.error instanceof expected;
        caught.error = caught.error.constructor;
    }

    this._assert(typeof fn === 'function' && passed, {
        message : defined(msg, 'should throw'),
        operator : 'throws',
        actual : caught && caught.error,
        expected : expected,
        error: !passed && caught && caught.error,
        extra : extra
    });
};

Test.prototype.doesNotThrow = function (fn, expected, msg, extra) {
    if (typeof expected === 'string') {
        msg = expected;
        expected = undefined;
    }
    var caught = undefined;
    try {
        fn();
    }
    catch (err) {
        caught = { error : err };
    }
    this._assert(!caught, {
        message : defined(msg, 'should not throw'),
        operator : 'throws',
        actual : caught && caught.error,
        expected : expected,
        error : caught && caught.error,
        extra : extra
    });
};

Test.skip = function (name_, _opts, _cb) {
    var args = getTestArgs.apply(null, arguments);
    args.opts.skip = true;
    return Test(args.name, args.opts, args.cb);
};

// vim: set softtabstop=4 shiftwidth=4:


}).call(this)}).call(this,"/node_modules/tape/lib")
},{"./next_tick":219,"deep-equal":135,"defined":139,"events":116,"has":202,"inherits":204,"path":117,"string.prototype.trim":213}],222:[function(require,module,exports){
var hasMap = typeof Map === 'function' && Map.prototype;
var mapSizeDescriptor = Object.getOwnPropertyDescriptor && hasMap ? Object.getOwnPropertyDescriptor(Map.prototype, 'size') : null;
var mapSize = hasMap && mapSizeDescriptor && typeof mapSizeDescriptor.get === 'function' ? mapSizeDescriptor.get : null;
var mapForEach = hasMap && Map.prototype.forEach;
var hasSet = typeof Set === 'function' && Set.prototype;
var setSizeDescriptor = Object.getOwnPropertyDescriptor && hasSet ? Object.getOwnPropertyDescriptor(Set.prototype, 'size') : null;
var setSize = hasSet && setSizeDescriptor && typeof setSizeDescriptor.get === 'function' ? setSizeDescriptor.get : null;
var setForEach = hasSet && Set.prototype.forEach;

module.exports = function inspect_ (obj, opts, depth, seen) {
    if (!opts) opts = {};
    
    var maxDepth = opts.depth === undefined ? 5 : opts.depth;
    if (depth === undefined) depth = 0;
    if (depth >= maxDepth && maxDepth > 0
    && obj && typeof obj === 'object') {
        return '[Object]';
    }
    
    if (seen === undefined) seen = [];
    else if (indexOf(seen, obj) >= 0) {
        return '[Circular]';
    }
    
    function inspect (value, from) {
        if (from) {
            seen = seen.slice();
            seen.push(from);
        }
        return inspect_(value, opts, depth + 1, seen);
    }
    
    if (typeof obj === 'string') {
        return inspectString(obj);
    }
    else if (typeof obj === 'function') {
        var name = nameOf(obj);
        return '[Function' + (name ? ': ' + name : '') + ']';
    }
    else if (obj === null) {
        return 'null';
    }
    else if (isSymbol(obj)) {
        var symString = Symbol.prototype.toString.call(obj);
        return typeof obj === 'object' ? 'Object(' + symString + ')' : symString;
    }
    else if (isElement(obj)) {
        var s = '<' + String(obj.nodeName).toLowerCase();
        var attrs = obj.attributes || [];
        for (var i = 0; i < attrs.length; i++) {
            s += ' ' + attrs[i].name + '="' + quote(attrs[i].value) + '"';
        }
        s += '>';
        if (obj.childNodes && obj.childNodes.length) s += '...';
        s += '</' + String(obj.nodeName).toLowerCase() + '>';
        return s;
    }
    else if (isArray(obj)) {
        if (obj.length === 0) return '[]';
        var xs = Array(obj.length);
        for (var i = 0; i < obj.length; i++) {
            xs[i] = has(obj, i) ? inspect(obj[i], obj) : '';
        }
        return '[ ' + xs.join(', ') + ' ]';
    }
    else if (isError(obj)) {
        var parts = [];
        for (var key in obj) {
            if (!has(obj, key)) continue;
            
            if (/[^\w$]/.test(key)) {
                parts.push(inspect(key) + ': ' + inspect(obj[key]));
            }
            else {
                parts.push(key + ': ' + inspect(obj[key]));
            }
        }
        if (parts.length === 0) return '[' + obj + ']';
        return '{ [' + obj + '] ' + parts.join(', ') + ' }';
    }
    else if (typeof obj === 'object' && typeof obj.inspect === 'function') {
        return obj.inspect();
    }
    else if (isMap(obj)) {
        var parts = [];
        mapForEach.call(obj, function (value, key) {
            parts.push(inspect(key, obj) + ' => ' + inspect(value, obj));
        });
        return 'Map (' + mapSize.call(obj) + ') {' + parts.join(', ') + '}';
    }
    else if (isSet(obj)) {
        var parts = [];
        setForEach.call(obj, function (value ) {
            parts.push(inspect(value, obj));
        });
        return 'Set (' + setSize.call(obj) + ') {' + parts.join(', ') + '}';
    }
    else if (typeof obj === 'object' && !isDate(obj) && !isRegExp(obj)) {
        var xs = [], keys = [];
        for (var key in obj) {
            if (has(obj, key)) keys.push(key);
        }
        keys.sort();
        for (var i = 0; i < keys.length; i++) {
            var key = keys[i];
            if (/[^\w$]/.test(key)) {
                xs.push(inspect(key) + ': ' + inspect(obj[key], obj));
            }
            else xs.push(key + ': ' + inspect(obj[key], obj));
        }
        if (xs.length === 0) return '{}';
        return '{ ' + xs.join(', ') + ' }';
    }
    else return String(obj);
};

function quote (s) {
    return String(s).replace(/"/g, '&quot;');
}

function isArray (obj) { return toStr(obj) === '[object Array]' }
function isDate (obj) { return toStr(obj) === '[object Date]' }
function isRegExp (obj) { return toStr(obj) === '[object RegExp]' }
function isError (obj) { return toStr(obj) === '[object Error]' }
function isSymbol (obj) { return toStr(obj) === '[object Symbol]' }

var hasOwn = Object.prototype.hasOwnProperty || function (key) { return key in this; };
function has (obj, key) {
    return hasOwn.call(obj, key);
}

function toStr (obj) {
    return Object.prototype.toString.call(obj);
}

function nameOf (f) {
    if (f.name) return f.name;
    var m = f.toString().match(/^function\s*([\w$]+)/);
    if (m) return m[1];
}

function indexOf (xs, x) {
    if (xs.indexOf) return xs.indexOf(x);
    for (var i = 0, l = xs.length; i < l; i++) {
        if (xs[i] === x) return i;
    }
    return -1;
}

function isMap (x) {
    if (!mapSize) {
        return false;
    }
    try {
        mapSize.call(x);
        return true;
    } catch (e) {}
    return false;
}

function isSet (x) {
    if (!setSize) {
        return false;
    }
    try {
        setSize.call(x);
        return true;
    } catch (e) {}
    return false;
}

function isElement (x) {
    if (!x || typeof x !== 'object') return false;
    if (typeof HTMLElement !== 'undefined' && x instanceof HTMLElement) {
        return true;
    }
    return typeof x.nodeName === 'string'
        && typeof x.getAttribute === 'function'
    ;
}

function inspectString (str) {
    var s = str.replace(/(['\\])/g, '\\$1').replace(/[\x00-\x1f]/g, lowbyte);
    return "'" + s + "'";
    
    function lowbyte (c) {
        var n = c.charCodeAt(0);
        var x = { 8: 'b', 9: 't', 10: 'n', 12: 'f', 13: 'r' }[n];
        if (x) return '\\' + x;
        return '\\x' + (n < 0x10 ? '0' : '') + n.toString(16);
    }
}

},{}],223:[function(require,module,exports){
(function (process){(function (){
var Stream = require('stream')

// through
//
// a stream that does nothing but re-emit the input.
// useful for aggregating a series of changing but not ending streams into one stream)

exports = module.exports = through
through.through = through

//create a readable writable stream.

function through (write, end, opts) {
  write = write || function (data) { this.queue(data) }
  end = end || function () { this.queue(null) }

  var ended = false, destroyed = false, buffer = [], _ended = false
  var stream = new Stream()
  stream.readable = stream.writable = true
  stream.paused = false

//  stream.autoPause   = !(opts && opts.autoPause   === false)
  stream.autoDestroy = !(opts && opts.autoDestroy === false)

  stream.write = function (data) {
    write.call(this, data)
    return !stream.paused
  }

  function drain() {
    while(buffer.length && !stream.paused) {
      var data = buffer.shift()
      if(null === data)
        return stream.emit('end')
      else
        stream.emit('data', data)
    }
  }

  stream.queue = stream.push = function (data) {
//    console.error(ended)
    if(_ended) return stream
    if(data === null) _ended = true
    buffer.push(data)
    drain()
    return stream
  }

  //this will be registered as the first 'end' listener
  //must call destroy next tick, to make sure we're after any
  //stream piped from here.
  //this is only a problem if end is not emitted synchronously.
  //a nicer way to do this is to make sure this is the last listener for 'end'

  stream.on('end', function () {
    stream.readable = false
    if(!stream.writable && stream.autoDestroy)
      process.nextTick(function () {
        stream.destroy()
      })
  })

  function _end () {
    stream.writable = false
    end.call(stream)
    if(!stream.readable && stream.autoDestroy)
      stream.destroy()
  }

  stream.end = function (data) {
    if(ended) return
    ended = true
    if(arguments.length) stream.write(data)
    _end() // will emit or queue
    return stream
  }

  stream.destroy = function () {
    if(destroyed) return
    destroyed = true
    ended = true
    buffer.length = 0
    stream.writable = stream.readable = false
    stream.emit('close')
    return stream
  }

  stream.pause = function () {
    if(stream.paused) return
    stream.paused = true
    return stream
  }

  stream.resume = function () {
    if(stream.paused) {
      stream.paused = false
      stream.emit('resume')
    }
    drain()
    //may have become paused again,
    //as drain emits 'data'.
    if(!stream.paused)
      stream.emit('drain')
    return stream
  }
  return stream
}


}).call(this)}).call(this,require('_process'))
},{"_process":209,"stream":118}],224:[function(require,module,exports){
(function (setImmediate,clearImmediate){(function (){
var nextTick = require('process/browser.js').nextTick;
var apply = Function.prototype.apply;
var slice = Array.prototype.slice;
var immediateIds = {};
var nextImmediateId = 0;

// DOM APIs, for completeness

exports.setTimeout = function() {
  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);
};
exports.setInterval = function() {
  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);
};
exports.clearTimeout =
exports.clearInterval = function(timeout) { timeout.close(); };

function Timeout(id, clearFn) {
  this._id = id;
  this._clearFn = clearFn;
}
Timeout.prototype.unref = Timeout.prototype.ref = function() {};
Timeout.prototype.close = function() {
  this._clearFn.call(window, this._id);
};

// Does not start the time, just sets up the members needed.
exports.enroll = function(item, msecs) {
  clearTimeout(item._idleTimeoutId);
  item._idleTimeout = msecs;
};

exports.unenroll = function(item) {
  clearTimeout(item._idleTimeoutId);
  item._idleTimeout = -1;
};

exports._unrefActive = exports.active = function(item) {
  clearTimeout(item._idleTimeoutId);

  var msecs = item._idleTimeout;
  if (msecs >= 0) {
    item._idleTimeoutId = setTimeout(function onTimeout() {
      if (item._onTimeout)
        item._onTimeout();
    }, msecs);
  }
};

// That's not how node.js implements it but the exposed api is the same.
exports.setImmediate = typeof setImmediate === "function" ? setImmediate : function(fn) {
  var id = nextImmediateId++;
  var args = arguments.length < 2 ? false : slice.call(arguments, 1);

  immediateIds[id] = true;

  nextTick(function onNextTick() {
    if (immediateIds[id]) {
      // fn.call() is faster so we optimize for the common use-case
      // @see http://jsperf.com/call-apply-segu
      if (args) {
        fn.apply(null, args);
      } else {
        fn.call(null);
      }
      // Prevent ids from leaking
      exports.clearImmediate(id);
    }
  });

  return id;
};

exports.clearImmediate = typeof clearImmediate === "function" ? clearImmediate : function(id) {
  delete immediateIds[id];
};
}).call(this)}).call(this,require("timers").setImmediate,require("timers").clearImmediate)
},{"process/browser.js":209,"timers":224}],225:[function(require,module,exports){
(function (global){(function (){

/**
 * Module exports.
 */

module.exports = deprecate;

/**
 * Mark that a method should not be used.
 * Returns a modified function which warns once by default.
 *
 * If `localStorage.noDeprecation = true` is set, then it is a no-op.
 *
 * If `localStorage.throwDeprecation = true` is set, then deprecated functions
 * will throw an Error when invoked.
 *
 * If `localStorage.traceDeprecation = true` is set, then deprecated functions
 * will invoke `console.trace()` instead of `console.error()`.
 *
 * @param {Function} fn - the function to deprecate
 * @param {String} msg - the string to print to the console when `fn` is invoked
 * @returns {Function} a new "deprecated" version of `fn`
 * @api public
 */

function deprecate (fn, msg) {
  if (config('noDeprecation')) {
    return fn;
  }

  var warned = false;
  function deprecated() {
    if (!warned) {
      if (config('throwDeprecation')) {
        throw new Error(msg);
      } else if (config('traceDeprecation')) {
        console.trace(msg);
      } else {
        console.warn(msg);
      }
      warned = true;
    }
    return fn.apply(this, arguments);
  }

  return deprecated;
}

/**
 * Checks `localStorage` for boolean values for the given `name`.
 *
 * @param {String} name
 * @returns {Boolean}
 * @api private
 */

function config (name) {
  // accessing global.localStorage can trigger a DOMException in sandboxed iframes
  try {
    if (!global.localStorage) return false;
  } catch (_) {
    return false;
  }
  var val = global.localStorage[name];
  if (null == val) return false;
  return String(val).toLowerCase() === 'true';
}

}).call(this)}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}]},{},[86]);
