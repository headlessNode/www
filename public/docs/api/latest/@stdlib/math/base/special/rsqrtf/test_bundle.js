// modules are defined as an array
// [ module function, map of requireuires ]
//
// map of requireuires is short require name -> numeric require
//
// anything defined in a previous bundle is accessed via the
// orig method which is the requireuire for previous bundles

(function outer (modules, cache, entry) {
    // Save the require from previous bundle to this closure if any
    var previousRequire = typeof require == "function" && require;

    function findProxyquireifyName() {
        var deps = Object.keys(modules)
            .map(function (k) { return modules[k][1]; });

        for (var i = 0; i < deps.length; i++) {
            var pq = deps[i]['proxyquireify'];
            if (pq) return pq;
        }
    }

    var proxyquireifyName = findProxyquireifyName();

    function newRequire(name, jumped){
        // Find the proxyquireify module, if present
        var pqify = (proxyquireifyName != null) && cache[proxyquireifyName];

        // Proxyquireify provides a separate cache that is used when inside
        // a proxyquire call, and is set to null outside a proxyquire call.
        // This allows the regular caching semantics to work correctly both
        // inside and outside proxyquire calls while keeping the cached
        // modules isolated.
        // When switching from one proxyquire call to another, it clears
        // the cache to prevent contamination between different sets
        // of stubs.
        var currentCache = (pqify && pqify.exports._cache) || cache;

        if(!currentCache[name]) {
            if(!modules[name]) {
                // if we cannot find the the module within our internal map or
                // cache jump to the current global require ie. the last bundle
                // that was added to the page.
                var currentRequire = typeof require == "function" && require;
                if (!jumped && currentRequire) return currentRequire(name, true);

                // If there are other bundles on this page the require from the
                // previous one is saved to 'previousRequire'. Repeat this as
                // many times as there are bundles until the module is found or
                // we exhaust the require chain.
                if (previousRequire) return previousRequire(name, true);
                var err = new Error('Cannot find module \'' + name + '\'');
                err.code = 'MODULE_NOT_FOUND';
                throw err;
            }
            var m = currentCache[name] = {exports:{}};

            // The normal browserify require function
            var req = function(x){
                var id = modules[name][1][x];
                return newRequire(id ? id : x);
            };

            // The require function substituted for proxyquireify
            var moduleRequire = function(x){
                var pqify = (proxyquireifyName != null) && cache[proxyquireifyName];
                // Only try to use the proxyquireify version if it has been `require`d
                if (pqify && pqify.exports._proxy) {
                    return pqify.exports._proxy(req, x);
                } else {
                    return req(x);
                }
            };

            modules[name][0].call(m.exports,moduleRequire,m,m.exports,outer,modules,currentCache,entry);
        }
        return currentCache[name].exports;
    }
    for(var i=0;i<entry.length;i++) newRequire(entry[i]);

    // Override the current require with this new one
    return newRequire;
})
({1:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Typed array constructor which returns a typed array representing an array of single-precision floating-point numbers in the platform byte order.
*
* @module @stdlib/array/float32
*
* @example
* var ctor = require( '@stdlib/array/float32' );
*
* var arr = new ctor( 10 );
* // returns <Float32Array>
*/

// MODULES //

var hasFloat32ArraySupport = require( '@stdlib/assert/has-float32array-support' );
var builtin = require( './main.js' );
var polyfill = require( './polyfill.js' );


// MAIN //

var ctor;
if ( hasFloat32ArraySupport() ) {
	ctor = builtin;
} else {
	ctor = polyfill;
}


// EXPORTS //

module.exports = ctor;

},{"./main.js":2,"./polyfill.js":3,"@stdlib/assert/has-float32array-support":8}],2:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MAIN //

var ctor = ( typeof Float32Array === 'function' ) ? Float32Array : void 0; // eslint-disable-line stdlib/require-globals


// EXPORTS //

module.exports = ctor;

},{}],3:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// TODO: write polyfill

// MAIN //

/**
* Typed array which represents an array of single-precision floating-point numbers in the platform byte order.
*
* @throws {Error} not implemented
*/
function polyfill() {
	throw new Error( 'not implemented' );
}


// EXPORTS //

module.exports = polyfill;

},{}],4:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Typed array constructor which returns a typed array representing an array of 32-bit unsigned integers in the platform byte order.
*
* @module @stdlib/array/uint32
*
* @example
* var ctor = require( '@stdlib/array/uint32' );
*
* var arr = new ctor( 10 );
* // returns <Uint32Array>
*/

// MODULES //

var hasUint32ArraySupport = require( '@stdlib/assert/has-uint32array-support' );
var builtin = require( './main.js' );
var polyfill = require( './polyfill.js' );


// MAIN //

var ctor;
if ( hasUint32ArraySupport() ) {
	ctor = builtin;
} else {
	ctor = polyfill;
}


// EXPORTS //

module.exports = ctor;

},{"./main.js":5,"./polyfill.js":6,"@stdlib/assert/has-uint32array-support":16}],5:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MAIN //

var ctor = ( typeof Uint32Array === 'function' ) ? Uint32Array : void 0; // eslint-disable-line stdlib/require-globals


// EXPORTS //

module.exports = ctor;

},{}],6:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// TODO: write polyfill

// MAIN //

/**
* Typed array which represents an array of 32-bit unsigned integers in the platform byte order.
*
* @throws {Error} not implemented
*/
function polyfill() {
	throw new Error( 'not implemented' );
}


// EXPORTS //

module.exports = polyfill;

},{}],7:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MAIN //

var main = ( typeof Float32Array === 'function' ) ? Float32Array : null; // eslint-disable-line stdlib/require-globals


// EXPORTS //

module.exports = main;

},{}],8:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Test for native `Float32Array` support.
*
* @module @stdlib/assert/has-float32array-support
*
* @example
* var hasFloat32ArraySupport = require( '@stdlib/assert/has-float32array-support' );
*
* var bool = hasFloat32ArraySupport();
* // returns <boolean>
*/

// MODULES //

var hasFloat32ArraySupport = require( './main.js' );


// EXPORTS //

module.exports = hasFloat32ArraySupport;

},{"./main.js":9}],9:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var isFloat32Array = require( '@stdlib/assert/is-float32array' );
var PINF = require( '@stdlib/constants/float64/pinf' );
var GlobalFloat32Array = require( './float32array.js' );


// MAIN //

/**
* Tests for native `Float32Array` support.
*
* @returns {boolean} boolean indicating if an environment has `Float32Array` support
*
* @example
* var bool = hasFloat32ArraySupport();
* // returns <boolean>
*/
function hasFloat32ArraySupport() {
	var bool;
	var arr;

	if ( typeof GlobalFloat32Array !== 'function' ) {
		return false;
	}
	// Test basic support...
	try {
		arr = new GlobalFloat32Array( [ 1.0, 3.14, -3.14, 5.0e40 ] );
		bool = (
			isFloat32Array( arr ) &&
			arr[ 0 ] === 1.0 &&
			arr[ 1 ] === 3.140000104904175 &&
			arr[ 2 ] === -3.140000104904175 &&
			arr[ 3 ] === PINF
		);
	} catch ( err ) { // eslint-disable-line no-unused-vars
		bool = false;
	}
	return bool;
}


// EXPORTS //

module.exports = hasFloat32ArraySupport;

},{"./float32array.js":7,"@stdlib/assert/is-float32array":31,"@stdlib/constants/float64/pinf":46}],10:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Test whether an object has a specified property.
*
* @module @stdlib/assert/has-own-property
*
* @example
* var hasOwnProp = require( '@stdlib/assert/has-own-property' );
*
* var beep = {
*     'boop': true
* };
*
* var bool = hasOwnProp( beep, 'boop' );
* // returns true
*
* bool = hasOwnProp( beep, 'bop' );
* // returns false
*/

// MODULES //

var main = require( './main.js' );


// EXPORTS //

module.exports = main;

},{"./main.js":11}],11:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// FUNCTIONS //

var has = Object.prototype.hasOwnProperty;


// MAIN //

/**
* Tests if an object has a specified property.
*
* @param {*} value - value to test
* @param {*} property - property to test
* @returns {boolean} boolean indicating if an object has a specified property
*
* @example
* var beep = {
*     'boop': true
* };
*
* var bool = hasOwnProp( beep, 'boop' );
* // returns true
*
* @example
* var beep = {
*     'boop': true
* };
*
* var bool = hasOwnProp( beep, 'bap' );
* // returns false
*/
function hasOwnProp( value, property ) {
	if (
		value === void 0 ||
		value === null
	) {
		return false;
	}
	return has.call( value, property );
}


// EXPORTS //

module.exports = hasOwnProp;

},{}],12:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Test for native `Symbol` support.
*
* @module @stdlib/assert/has-symbol-support
*
* @example
* var hasSymbolSupport = require( '@stdlib/assert/has-symbol-support' );
*
* var bool = hasSymbolSupport();
* // returns <boolean>
*/

// MODULES //

var main = require( './main.js' );


// EXPORTS //

module.exports = main;

},{"./main.js":13}],13:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MAIN //

/**
* Tests for native `Symbol` support.
*
* @returns {boolean} boolean indicating if an environment has `Symbol` support
*
* @example
* var bool = hasSymbolSupport();
* // returns <boolean>
*/
function hasSymbolSupport() {
	return (
		typeof Symbol === 'function' &&
		typeof Symbol( 'foo' ) === 'symbol'
	);
}


// EXPORTS //

module.exports = hasSymbolSupport;

},{}],14:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Test for native `toStringTag` support.
*
* @module @stdlib/assert/has-tostringtag-support
*
* @example
* var hasToStringTagSupport = require( '@stdlib/assert/has-tostringtag-support' );
*
* var bool = hasToStringTagSupport();
* // returns <boolean>
*/

// MODULES //

var main = require( './main.js' );


// EXPORTS //

module.exports = main;

},{"./main.js":15}],15:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var hasSymbols = require( '@stdlib/assert/has-symbol-support' );


// VARIABLES //

var FLG = hasSymbols();


// MAIN //

/**
* Tests for native `toStringTag` support.
*
* @returns {boolean} boolean indicating if an environment has `toStringTag` support
*
* @example
* var bool = hasToStringTagSupport();
* // returns <boolean>
*/
function hasToStringTagSupport() {
	return ( FLG && typeof Symbol.toStringTag === 'symbol' );
}


// EXPORTS //

module.exports = hasToStringTagSupport;

},{"@stdlib/assert/has-symbol-support":12}],16:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Test for native `Uint32Array` support.
*
* @module @stdlib/assert/has-uint32array-support
*
* @example
* var hasUint32ArraySupport = require( '@stdlib/assert/has-uint32array-support' );
*
* var bool = hasUint32ArraySupport();
* // returns <boolean>
*/

// MODULES //

var hasUint32ArraySupport = require( './main.js' );


// EXPORTS //

module.exports = hasUint32ArraySupport;

},{"./main.js":17}],17:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var isUint32Array = require( '@stdlib/assert/is-uint32array' );
var UINT32_MAX = require( '@stdlib/constants/uint32/max' );
var GlobalUint32Array = require( './uint32array.js' );


// MAIN //

/**
* Tests for native `Uint32Array` support.
*
* @returns {boolean} boolean indicating if an environment has `Uint32Array` support
*
* @example
* var bool = hasUint32ArraySupport();
* // returns <boolean>
*/
function hasUint32ArraySupport() {
	var bool;
	var arr;

	if ( typeof GlobalUint32Array !== 'function' ) {
		return false;
	}
	// Test basic support...
	try {
		arr = [ 1, 3.14, -3.14, UINT32_MAX+1, UINT32_MAX+2 ];
		arr = new GlobalUint32Array( arr );
		bool = (
			isUint32Array( arr ) &&
			arr[ 0 ] === 1 &&
			arr[ 1 ] === 3 &&            // truncation
			arr[ 2 ] === UINT32_MAX-2 && // truncation and wrap around
			arr[ 3 ] === 0 &&            // wrap around
			arr[ 4 ] === 1               // wrap around
		);
	} catch ( err ) { // eslint-disable-line no-unused-vars
		bool = false;
	}
	return bool;
}


// EXPORTS //

module.exports = hasUint32ArraySupport;

},{"./uint32array.js":18,"@stdlib/assert/is-uint32array":37,"@stdlib/constants/uint32/max":47}],18:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MAIN //

var main = ( typeof Uint32Array === 'function' ) ? Uint32Array : null; // eslint-disable-line stdlib/require-globals


// EXPORTS //

module.exports = main;

},{}],19:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Test if a value is an array.
*
* @module @stdlib/assert/is-array
*
* @example
* var isArray = require( '@stdlib/assert/is-array' );
*
* var bool = isArray( [] );
* // returns true
*
* bool = isArray( {} );
* // returns false
*/

// MODULES //

var main = require( './main.js' );


// EXPORTS //

module.exports = main;

},{"./main.js":20}],20:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var nativeClass = require( '@stdlib/utils/native-class' );


// VARIABLES //

var f;


// FUNCTIONS //

/**
* Tests if a value is an array.
*
* @param {*} value - value to test
* @returns {boolean} boolean indicating whether value is an array
*
* @example
* var bool = isArray( [] );
* // returns true
*
* @example
* var bool = isArray( {} );
* // returns false
*/
function isArray( value ) {
	return ( nativeClass( value ) === '[object Array]' );
}


// MAIN //

if ( Array.isArray ) {
	f = Array.isArray;
} else {
	f = isArray;
}


// EXPORTS //

module.exports = f;

},{"@stdlib/utils/native-class":109}],21:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Test if a value is a boolean.
*
* @module @stdlib/assert/is-boolean
*
* @example
* var Boolean = require( '@stdlib/boolean/ctor' );
* var isBoolean = require( '@stdlib/assert/is-boolean' );
*
* var bool = isBoolean( false );
* // returns true
*
* bool = isBoolean( new Boolean( false ) );
* // returns true
*
* @example
* var Boolean = require( '@stdlib/boolean/ctor' );
* var isBoolean = require( '@stdlib/assert/is-boolean' ).isPrimitive;
*
* var bool = isBoolean( false );
* // returns true
*
* bool = isBoolean( new Boolean( true ) );
* // returns false
*
* @example
* var Boolean = require( '@stdlib/boolean/ctor' );
* var isBoolean = require( '@stdlib/assert/is-boolean' ).isObject;
*
* var bool = isBoolean( true );
* // returns false
*
* bool = isBoolean( new Boolean( false ) );
* // returns true
*/

// MODULES //

var setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );
var main = require( './main.js' );
var isPrimitive = require( './primitive.js' );
var isObject = require( './object.js' );


// MAIN //

setReadOnly( main, 'isPrimitive', isPrimitive );
setReadOnly( main, 'isObject', isObject );


// EXPORTS //

module.exports = main;

},{"./main.js":22,"./object.js":23,"./primitive.js":24,"@stdlib/utils/define-nonenumerable-read-only-property":91}],22:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var isPrimitive = require( './primitive.js' );
var isObject = require( './object.js' );


// MAIN //

/**
* Tests if a value is a boolean.
*
* @param {*} value - value to test
* @returns {boolean} boolean indicating whether value is a boolean
*
* @example
* var bool = isBoolean( false );
* // returns true
*
* @example
* var bool = isBoolean( true );
* // returns true
*
* @example
* var Boolean = require( '@stdlib/boolean/ctor' );
*
* var bool = isBoolean( new Boolean( false ) );
* // returns true
*
* @example
* var Boolean = require( '@stdlib/boolean/ctor' );
*
* var bool = isBoolean( new Boolean( true ) );
* // returns true
*/
function isBoolean( value ) {
	return ( isPrimitive( value ) || isObject( value ) );
}


// EXPORTS //

module.exports = isBoolean;

},{"./object.js":23,"./primitive.js":24}],23:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var hasToStringTag = require( '@stdlib/assert/has-tostringtag-support' );
var nativeClass = require( '@stdlib/utils/native-class' );
var Boolean = require( '@stdlib/boolean/ctor' );
var test = require( './try2serialize.js' );


// VARIABLES //

var FLG = hasToStringTag();


// MAIN //

/**
* Tests if a value is a boolean object.
*
* @param {*} value - value to test
* @returns {boolean} boolean indicating if a value is a boolean object
*
* @example
* var bool = isBoolean( true );
* // returns false
*
* @example
* var Boolean = require( '@stdlib/boolean/ctor' );
*
* var bool = isBoolean( new Boolean( false ) );
* // returns true
*/
function isBoolean( value ) {
	if ( typeof value === 'object' ) {
		if ( value instanceof Boolean ) {
			return true;
		}
		if ( FLG ) {
			return test( value );
		}
		return ( nativeClass( value ) === '[object Boolean]' );
	}
	return false;
}


// EXPORTS //

module.exports = isBoolean;

},{"./try2serialize.js":26,"@stdlib/assert/has-tostringtag-support":14,"@stdlib/boolean/ctor":41,"@stdlib/utils/native-class":109}],24:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Tests if a value is a boolean primitive.
*
* @param {*} value - value to test
* @returns {boolean} boolean indicating if a value is a boolean primitive
*
* @example
* var bool = isBoolean( true );
* // returns true
*
* @example
* var bool = isBoolean( false );
* // returns true
*
* @example
* var Boolean = require( '@stdlib/boolean/ctor' );
*
* var bool = isBoolean( new Boolean( true ) );
* // returns false
*/
function isBoolean( value ) {
	return ( typeof value === 'boolean' );
}


// EXPORTS //

module.exports = isBoolean;

},{}],25:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// eslint-disable-next-line stdlib/no-redeclare
var toString = Boolean.prototype.toString; // non-generic


// EXPORTS //

module.exports = toString;

},{}],26:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var toString = require( './tostring.js' ); // eslint-disable-line stdlib/no-redeclare


// MAIN //

/**
* Attempts to serialize a value to a string.
*
* @private
* @param {*} value - value to test
* @returns {boolean} boolean indicating if a value can be serialized
*/
function test( value ) {
	try {
		toString.call( value );
		return true;
	} catch ( err ) { // eslint-disable-line no-unused-vars
		return false;
	}
}


// EXPORTS //

module.exports = test;

},{"./tostring.js":25}],27:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Test if a value is a Buffer instance.
*
* @module @stdlib/assert/is-buffer
*
* @example
* var isBuffer = require( '@stdlib/assert/is-buffer' );
*
* var v = isBuffer( new Buffer( 'beep' ) );
* // returns true
*
* v = isBuffer( {} );
* // returns false
*/

// MODULES //

var main = require( './main.js' );


// EXPORTS //

module.exports = main;

},{"./main.js":28}],28:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var isObjectLike = require( '@stdlib/assert/is-object-like' );


// MAIN //

/**
* Tests if a value is a Buffer instance.
*
* @param {*} value - value to validate
* @returns {boolean} boolean indicating if a value is a Buffer instance
*
* @example
* var v = isBuffer( new Buffer( 'beep' ) );
* // returns true
*
* @example
* var v = isBuffer( new Buffer( [1,2,3,4] ) );
* // returns true
*
* @example
* var v = isBuffer( {} );
* // returns false
*
* @example
* var v = isBuffer( [] );
* // returns false
*/
function isBuffer( value ) {
	return (
		isObjectLike( value ) &&
		(
			// eslint-disable-next-line no-underscore-dangle
			value._isBuffer || // for envs missing Object.prototype.constructor (e.g., Safari 5-7)
			(
				value.constructor &&

				// WARNING: `typeof` is not a foolproof check, as certain envs consider RegExp and NodeList instances to be functions
				typeof value.constructor.isBuffer === 'function' &&
				value.constructor.isBuffer( value )
			)
		)
	);
}


// EXPORTS //

module.exports = isBuffer;

},{"@stdlib/assert/is-object-like":35}],29:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Test if a value is an `Error` object.
*
* @module @stdlib/assert/is-error
*
* @example
* var isError = require( '@stdlib/assert/is-error' );
*
* var bool = isError( new Error( 'beep' ) );
* // returns true
*
* bool = isError( {} );
* // returns false
*/

// MODULES //

var main = require( './main.js' );


// EXPORTS //

module.exports = main;

},{"./main.js":30}],30:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var getPrototypeOf = require( '@stdlib/utils/get-prototype-of' );
var nativeClass = require( '@stdlib/utils/native-class' );


// MAIN //

/**
* Tests if a value is an `Error` object.
*
* @param {*} value - value to test
* @returns {boolean} boolean indicating whether a value is an `Error` object
*
* @example
* var bool = isError( new Error( 'beep' ) );
* // returns true
*
* @example
* var bool = isError( {} );
* // returns false
*/
function isError( value ) {
	if ( typeof value !== 'object' || value === null ) {
		return false;
	}
	// Check for `Error` objects from the same realm (same Node.js `vm` or same `Window` object)...
	if ( value instanceof Error ) {
		return true;
	}
	// Walk the prototype tree until we find an object having the desired native class...
	while ( value ) {
		if ( nativeClass( value ) === '[object Error]' ) {
			return true;
		}
		value = getPrototypeOf( value );
	}
	return false;
}


// EXPORTS //

module.exports = isError;

},{"@stdlib/utils/get-prototype-of":99,"@stdlib/utils/native-class":109}],31:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Test if a value is a Float32Array.
*
* @module @stdlib/assert/is-float32array
*
* @example
* var isFloat32Array = require( '@stdlib/assert/is-float32array' );
*
* var bool = isFloat32Array( new Float32Array( 10 ) );
* // returns true
*
* bool = isFloat32Array( [] );
* // returns false
*/

// MODULES //

var isFloat32Array = require( './main.js' );


// EXPORTS //

module.exports = isFloat32Array;

},{"./main.js":32}],32:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var nativeClass = require( '@stdlib/utils/native-class' );


// VARIABLES //

var hasFloat32Array = ( typeof Float32Array === 'function' ); // eslint-disable-line stdlib/require-globals


// MAIN //

/**
* Tests if a value is a Float32Array.
*
* @param {*} value - value to test
* @returns {boolean} boolean indicating whether value is a Float32Array
*
* @example
* var bool = isFloat32Array( new Float32Array( 10 ) );
* // returns true
*
* @example
* var bool = isFloat32Array( [] );
* // returns false
*/
function isFloat32Array( value ) {
	return (
		( hasFloat32Array && value instanceof Float32Array ) || // eslint-disable-line stdlib/require-globals
		nativeClass( value ) === '[object Float32Array]'
	);
}


// EXPORTS //

module.exports = isFloat32Array;

},{"@stdlib/utils/native-class":109}],33:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Test if a value is a function.
*
* @module @stdlib/assert/is-function
*
* @example
* var isFunction = require( '@stdlib/assert/is-function' );
*
* function beep() {
*     return 'beep';
* }
*
* var bool = isFunction( beep );
* // returns true
*/

// MODULES //

var main = require( './main.js' );


// EXPORTS //

module.exports = main;

},{"./main.js":34}],34:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var typeOf = require( '@stdlib/utils/type-of' );


// MAIN //

/**
* Tests if a value is a function.
*
* @param {*} value - value to test
* @returns {boolean} boolean indicating whether value is a function
*
* @example
* function beep() {
*     return 'beep';
* }
*
* var bool = isFunction( beep );
* // returns true
*/
function isFunction( value ) {
	// Note: cannot use `typeof` directly, as various browser engines incorrectly return `'function'` when operating on non-function objects, such as regular expressions and NodeLists.
	return ( typeOf( value ) === 'function' );
}


// EXPORTS //

module.exports = isFunction;

},{"@stdlib/utils/type-of":120}],35:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Test if a value is object-like.
*
* @module @stdlib/assert/is-object-like
*
* @example
* var isObjectLike = require( '@stdlib/assert/is-object-like' );
*
* var bool = isObjectLike( {} );
* // returns true
*
* bool = isObjectLike( [] );
* // returns true
*
* bool = isObjectLike( null );
* // returns false
*
* @example
* var isObjectLike = require( '@stdlib/assert/is-object-like' ).isObjectLikeArray;
*
* var bool = isObjectLike( [ {}, [] ] );
* // returns true
*
* bool = isObjectLike( [ {}, '3.0' ] );
* // returns false
*/

// MODULES //

var setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );
var arrayfun = require( '@stdlib/assert/tools/array-function' );
var main = require( './main.js' );


// VARIABLES //

var isObjectLikeArray = arrayfun( main );


// MAIN //

setReadOnly( main, 'isObjectLikeArray', isObjectLikeArray );


// EXPORTS //

module.exports = main;

},{"./main.js":36,"@stdlib/assert/tools/array-function":39,"@stdlib/utils/define-nonenumerable-read-only-property":91}],36:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Tests if a value is object-like.
*
* @param {*} value - value to test
* @returns {boolean} boolean indicating whether a value is object-like
*
* @example
* var bool = isObjectLike( {} );
* // returns true
*
* @example
* var bool = isObjectLike( [] );
* // returns true
*
* @example
* var bool = isObjectLike( null );
* // returns false
*/
function isObjectLike( value ) {
	return (
		value !== null &&
		typeof value === 'object'
	);
}


// EXPORTS //

module.exports = isObjectLike;

},{}],37:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Test if a value is a Uint32Array.
*
* @module @stdlib/assert/is-uint32array
*
* @example
* var isUint32Array = require( '@stdlib/assert/is-uint32array' );
*
* var bool = isUint32Array( new Uint32Array( 10 ) );
* // returns true
*
* bool = isUint32Array( [] );
* // returns false
*/

// MODULES //

var isUint32Array = require( './main.js' );


// EXPORTS //

module.exports = isUint32Array;

},{"./main.js":38}],38:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var nativeClass = require( '@stdlib/utils/native-class' );


// VARIABLES //

var hasUint32Array = ( typeof Uint32Array === 'function' ); // eslint-disable-line stdlib/require-globals


// MAIN //

/**
* Tests if a value is a Uint32Array.
*
* @param {*} value - value to test
* @returns {boolean} boolean indicating whether value is a Uint32Array
*
* @example
* var bool = isUint32Array( new Uint32Array( 10 ) );
* // returns true
*
* @example
* var bool = isUint32Array( [] );
* // returns false
*/
function isUint32Array( value ) {
	return (
		( hasUint32Array && value instanceof Uint32Array ) || // eslint-disable-line stdlib/require-globals
		nativeClass( value ) === '[object Uint32Array]'
	);
}


// EXPORTS //

module.exports = isUint32Array;

},{"@stdlib/utils/native-class":109}],39:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Return a function which tests if every element in an array passes a test condition.
*
* @module @stdlib/assert/tools/array-function
*
* @example
* var isOdd = require( '@stdlib/assert/is-odd' );
* var arrayfcn = require( '@stdlib/assert/tools/array-function' );
*
* var arr1 = [ 1, 3, 5, 7 ];
* var arr2 = [ 3, 5, 8 ];
*
* var validate = arrayfcn( isOdd );
*
* var bool = validate( arr1 );
* // returns true
*
* bool = validate( arr2 );
* // returns false
*/

// MODULES //

var main = require( './main.js' );


// EXPORTS //

module.exports = main;

},{"./main.js":40}],40:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var isArray = require( '@stdlib/assert/is-array' );
var format = require( '@stdlib/string/format' );


// MAIN //

/**
* Returns a function which tests if every element in an array passes a test condition.
*
* @param {Function} predicate - function to apply
* @throws {TypeError} must provide a function
* @returns {Function} an array function
*
* @example
* var isOdd = require( '@stdlib/assert/is-odd' );
*
* var arr1 = [ 1, 3, 5, 7 ];
* var arr2 = [ 3, 5, 8 ];
*
* var validate = arrayfcn( isOdd );
*
* var bool = validate( arr1 );
* // returns true
*
* bool = validate( arr2 );
* // returns false
*/
function arrayfcn( predicate ) {
	if ( typeof predicate !== 'function' ) {
		throw new TypeError( format( 'invalid argument. Must provide a function. Value: `%s`.', predicate ) );
	}
	return every;

	/**
	* Tests if every element in an array passes a test condition.
	*
	* @private
	* @param {*} value - value to test
	* @returns {boolean} boolean indicating whether a value is an array for which all elements pass a test condition
	*/
	function every( value ) {
		var len;
		var i;
		if ( !isArray( value ) ) {
			return false;
		}
		len = value.length;
		if ( len === 0 ) {
			return false;
		}
		for ( i = 0; i < len; i++ ) {
			if ( predicate( value[ i ] ) === false ) {
				return false;
			}
		}
		return true;
	}
}


// EXPORTS //

module.exports = arrayfcn;

},{"@stdlib/assert/is-array":19,"@stdlib/string/format":84}],41:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2022 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Boolean constructor.
*
* @module @stdlib/boolean/ctor
*
* @example
* var Boolean = require( '@stdlib/boolean/ctor' );
*
* var b = Boolean( null );
* // returns false
*
* b = Boolean( [] );
* // returns true
*
* b = Boolean( {} );
* // returns true
*
* @example
* var Boolean = require( '@stdlib/boolean/ctor' );
*
* var b = new Boolean( false );
* // returns <Boolean>
*/

// MODULES //

var main = require( './main.js' );


// EXPORTS //

module.exports = main;

},{"./main.js":42}],42:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2022 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MAIN //

/**
* Returns a boolean.
*
* @name Boolean
* @constructor
* @type {Function}
* @param {*} value - input value
* @returns {(boolean|Boolean)} boolean
*
* @example
* var b = Boolean( null );
* // returns false
*
* b = Boolean( [] );
* // returns true
*
* b = Boolean( {} );
* // returns true
*
* @example
* var b = new Boolean( false );
* // returns <Boolean>
*/
var Bool = Boolean; // eslint-disable-line stdlib/require-globals


// EXPORTS //

module.exports = Bool;

},{}],43:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Difference between one and the smallest value greater than one that can be represented as a single-precision floating-point number.
*
* @module @stdlib/constants/float32/eps
* @type {number}
*
* @example
* var FLOAT32_EPSILON = require( '@stdlib/constants/float32/eps' );
* // returns 1.1920928955078125e-7
*/

// MODULES //

var float64ToFloat32 = require( '@stdlib/number/float64/base/to-float32' );


// MAIN //

/**
* Difference between one and the smallest value greater than one that can be represented as a single-precision floating-point number.
*
* ## Notes
*
* The difference is equal to
*
* ```tex
* \frac{1}{2^{23}}
* ```
*
* @constant
* @type {number}
* @default 1.1920928955078125e-7
* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}
* @see [Machine Epsilon]{@link https://en.wikipedia.org/wiki/Machine_epsilon}
*/
var FLOAT32_EPSILON = float64ToFloat32( 1.1920928955078125e-7 );


// EXPORTS //

module.exports = FLOAT32_EPSILON;

},{"@stdlib/number/float64/base/to-float32":66}],44:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Single-precision floating-point negative infinity.
*
* @module @stdlib/constants/float32/ninf
* @type {number}
*
* @example
* var FLOAT32_NINF = require( '@stdlib/constants/float32/ninf' );
* // returns -infinity
*/

// MODULES //

var Float32Array = require( '@stdlib/array/float32' );
var Uint32Array = require( '@stdlib/array/uint32' );


// VARIABLES //

var FLOAT32_VIEW = new Float32Array( 1 );
var UINT32_VIEW = new Uint32Array( FLOAT32_VIEW.buffer );
var v;


// MAIN //

/**
* Single-precision floating-point negative infinity.
*
* ## Notes
*
* Single-precision floating-point negative infinity has the bit sequence
*
* ```binarystring
* 1 11111111 00000000000000000000000
* ```
*
* This bit sequence corresponds to the unsigned 32-bit integer `4286578688` and to the HEX value `0xff800000`.
*
* @constant
* @type {number}
* @default 0xff800000
* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}
*/
var FLOAT32_NINF = 0xff800000;

// Set the ArrayBuffer bit sequence:
UINT32_VIEW[ 0 ] = FLOAT32_NINF;

v = FLOAT32_VIEW[ 0 ];


// EXPORTS //

module.exports = v;

},{"@stdlib/array/float32":1,"@stdlib/array/uint32":4}],45:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Single-precision floating-point positive infinity.
*
* @module @stdlib/constants/float32/pinf
* @type {number}
*
* @example
* var FLOAT32_PINF = require( '@stdlib/constants/float32/pinf' );
* // returns +infinity
*/

// MODULES //

var Float32Array = require( '@stdlib/array/float32' );
var Uint32Array = require( '@stdlib/array/uint32' );


// VARIABLES //

var FLOAT32_VIEW = new Float32Array( 1 );
var UINT32_VIEW = new Uint32Array( FLOAT32_VIEW.buffer );
var v;


// MAIN //

/**
* Single-precision floating-point positive infinity.
*
* ## Notes
*
* Single-precision floating-point positive infinity has the bit sequence
*
* ```binarystring
* 0 11111111 00000000000000000000000
* ```
*
* This bit sequence corresponds to the unsigned 32-bit integer `2139095040` and to the HEX value `0x7f800000`.
*
* @constant
* @type {number}
* @default 0x7f800000
* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}
*/
var FLOAT32_PINF = 0x7f800000;

// Set the ArrayBuffer bit sequence:
UINT32_VIEW[ 0 ] = FLOAT32_PINF;

v = FLOAT32_VIEW[ 0 ];


// EXPORTS //

module.exports = v;

},{"@stdlib/array/float32":1,"@stdlib/array/uint32":4}],46:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Double-precision floating-point positive infinity.
*
* @module @stdlib/constants/float64/pinf
* @type {number}
*
* @example
* var FLOAT64_PINF = require( '@stdlib/constants/float64/pinf' );
* // returns Infinity
*/


// MAIN //

/**
* Double-precision floating-point positive infinity.
*
* ## Notes
*
* Double-precision floating-point positive infinity has the bit sequence
*
* ```binarystring
* 0 11111111111 00000000000000000000 00000000000000000000000000000000
* ```
*
* @constant
* @type {number}
* @default Number.POSITIVE_INFINITY
* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}
*/
var FLOAT64_PINF = Number.POSITIVE_INFINITY; // eslint-disable-line stdlib/require-globals


// EXPORTS //

module.exports = FLOAT64_PINF;

},{}],47:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Maximum unsigned 32-bit integer.
*
* @module @stdlib/constants/uint32/max
* @type {uinteger32}
*
* @example
* var UINT32_MAX = require( '@stdlib/constants/uint32/max' );
* // returns 4294967295
*/


// MAIN //

/**
* Maximum unsigned 32-bit integer.
*
* ## Notes
*
* The number has the value
*
* ```tex
* 2^{32} - 1
* ```
*
* which corresponds to the bit sequence
*
* ```binarystring
* 11111111111111111111111111111111
* ```
*
* @constant
* @type {uinteger32}
* @default 4294967295
*/
var UINT32_MAX = 4294967295;


// EXPORTS //

module.exports = UINT32_MAX;

},{}],48:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2020 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Test if a single-precision floating-point numeric value is `NaN`.
*
* @module @stdlib/math/base/assert/is-nanf
*
* @example
* var isnanf = require( '@stdlib/math/base/assert/is-nanf' );
*
* var bool = isnanf( NaN );
* // returns true
*
* bool = isnanf( 7.0 );
* // returns false
*/

// MODULES //

var main = require( './main.js' );


// EXPORTS //

module.exports = main;

},{"./main.js":49}],49:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2020 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MAIN //

/**
* Tests if a single-precision floating-point numeric value is `NaN`.
*
* @param {number} x - value to test
* @returns {boolean} boolean indicating whether the value is `NaN`
*
* @example
* var bool = isnanf( NaN );
* // returns true
*
* @example
* var bool = isnanf( 7.0 );
* // returns false
*/
function isnanf( x ) {
	return ( x !== x );
}


// EXPORTS //

module.exports = isnanf;

},{}],50:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Compute an absolute value of a double-precision floating-point number.
*
* @module @stdlib/math/base/special/abs
*
* @example
* var abs = require( '@stdlib/math/base/special/abs' );
*
* var v = abs( -1.0 );
* // returns 1.0
*
* v = abs( 2.0 );
* // returns 2.0
*
* v = abs( 0.0 );
* // returns 0.0
*
* v = abs( -0.0 );
* // returns 0.0
*
* v = abs( NaN );
* // returns NaN
*/

// MODULES //

var main = require( './main.js' );


// EXPORTS //

module.exports = main;

},{"./main.js":51}],51:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2021 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MAIN //

/**
* Computes the absolute value of a double-precision floating-point number `x`.
*
* @param {number} x - input value
* @returns {number} absolute value
*
* @example
* var v = abs( -1.0 );
* // returns 1.0
*
* @example
* var v = abs( 2.0 );
* // returns 2.0
*
* @example
* var v = abs( 0.0 );
* // returns 0.0
*
* @example
* var v = abs( -0.0 );
* // returns 0.0
*
* @example
* var v = abs( NaN );
* // returns NaN
*/
function abs( x ) {
	return Math.abs( x ); // eslint-disable-line stdlib/no-builtin-math
}


// EXPORTS //

module.exports = abs;

},{}],52:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2020 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Compute the reciprocal square root of a single-precision floating-point number.
*
* @module @stdlib/math/base/special/rsqrtf
*
* @example
* var rsqrtf = require( '@stdlib/math/base/special/rsqrtf' );
*
* var v = rsqrtf( 4.0 );
* // returns 0.5
*
* v = rsqrtf( 0.0 );
* // returns 0.0
*
* v = rsqrtf( Infinity );
* // returns 0.0
*
* v = rsqrtf( -4.0 );
* // returns NaN
*
* v = rsqrtf( NaN );
* // returns NaN
*/

// MODULES //

var main = require( './main.js' );


// EXPORTS //

module.exports = main;

},{"./main.js":53}],53:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2020 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var float64ToFloat32 = require( '@stdlib/number/float64/base/to-float32' );
var sqrt = require( '@stdlib/math/base/special/sqrt' );


// MAIN //

/**
* Compute the reciprocal square root of a single-precision floating-point number.
*
* @param {number} x - input value
* @returns {number} reciprocal square root
*
* @example
* var v = rsqrtf( 4.0 );
* // returns 0.5
*
* @example
* var v = rsqrtf( 0.0 );
* // returns Infinity
*
* @example
* var v = rsqrtf( Infinity );
* // returns 0.0
*
* @example
* var v = rsqrtf( -4.0 );
* // returns NaN
*
* @example
* var v = rsqrtf( NaN );
* // returns NaN
*/
function rsqrtf( x ) {
	return float64ToFloat32( 1.0 / sqrt( float64ToFloat32( x ) ) );
}


// EXPORTS //

module.exports = rsqrtf;

},{"@stdlib/math/base/special/sqrt":64,"@stdlib/number/float64/base/to-float32":66}],54:[function(require,module,exports){
module.exports={"expected":[1.0000000036274937e-15,7.072304901822231e-18,5.000937528100124e-18,4.0832654244853265e-18,3.53621862536012e-18,3.1628942305317684e-18,2.8873165279178896e-18,2.673137340246525e-18,2.5004921319023666e-18,2.357487493242974e-18,2.23650943352495e-18,2.1324286057698526e-18,2.0416453267470047e-18,1.9615498416238013e-18,1.890196828394671e-18,1.8261039794019183e-18,1.7681175844861854e-18,1.7153261940100152e-18,1.6669977531312982e-18,1.6225364850138433e-18,1.5814531123253252e-18,1.5433403520116382e-18,1.5078564750822213e-18,1.4747126921057168e-18,1.4436628134523138e-18,1.4144949774876221e-18,1.387026480693844e-18,1.3610985043933694e-18,1.3365721856408658e-18,1.3133258254887115e-18,1.2912514768669683e-18,1.2702542208003456e-18,1.2502489610833272e-18,1.231160114087441e-18,1.212919747604881e-18,1.195466753667895e-18,1.1787461247657481e-18,1.1627081266641106e-18,1.147307264429292e-18,1.1325027994161243e-18,1.1182567847140063e-18,1.1045354093154001e-18,1.0913070335618755e-18,1.0785428095295698e-18,1.0662161640413045e-18,1.0543026952690096e-18,1.0427799659385693e-18,1.0316269863419403e-18,1.0208243177347274e-18,1.0103540723361844e-18,1.0001994997389068e-18,9.903450903064095e-19,9.80776264980396e-19,9.714796854734891e-19,9.624424270886176e-19,9.536528058996291e-19,9.450997583658308e-19,9.367727379344126e-19,9.286619218356005e-19,9.207583144802329e-19,9.130531270743014e-19,9.055381912092572e-19,8.982057520668574e-19,8.910485718167423e-19,8.84059929616435e-19,8.772331046234582e-19,8.705619963807946e-19,8.640408663229446e-19,8.576641309807733e-19,8.514264653790875e-19,8.453229581330001e-19,8.39348852953989e-19,8.3349975544505e-19,8.27771116112814e-19,8.221590058493714e-19,8.166595989443891e-19,8.112690696875342e-19,8.059837991636266e-19,8.008006337465811e-19,7.957161613163708e-19,7.907272799456986e-19,7.8583109450242065e-19,7.81024709854393e-19,7.763055410622014e-19,7.716707963912785e-19,7.671181493961515e-19,7.626451185349827e-19,7.582494290610876e-19,7.539289096253583e-19,7.496813888786868e-19,7.4550485056833e-19,7.413973818391214e-19,7.373569664383178e-19,7.333820017034825e-19,7.294706264782373e-19,7.256211347025686e-19,7.218320271116163e-19,7.181015459465787e-19,7.144283987377487e-19,7.108109311239012e-19,7.072480057316939e-19,7.037380715974783e-19,7.002798879503355e-19,6.968722140193467e-19,6.935137056360166e-19,6.902034322221559e-19,6.869399979104811e-19,6.837224721228029e-19,6.805497691845675e-19,6.774207517224326e-19,6.743345408569972e-19,6.712901026124958e-19,6.6828660980831575e-19,6.653229767699031e-19,6.623984797142219e-19,6.595121880630829e-19,6.56663326334662e-19,6.538510156495583e-19,6.510745839235241e-19,6.483332039759468e-19,6.456261520237904e-19,6.429527559828073e-19,6.403122920699615e-19,6.377040882010052e-19,6.351274722916908e-19,6.325818756553472e-19,6.300666779065148e-19,6.275811552621578e-19,6.251248424331816e-19,6.22697170732915e-19,6.20297571474687e-19,6.179254759718263e-19,6.155804189352385e-19,6.1326188337704065e-19,6.109692489117734e-19,6.087022053467069e-19,6.064601839951702e-19,6.04242771266857e-19,6.020495535714609e-19,5.998800139210992e-19,5.977336870266772e-19,5.956103143942536e-19,5.935093790359455e-19,5.914305707590232e-19,5.893733725756038e-19,5.873375776905342e-19,5.853226691159316e-19,5.833283883578545e-19,5.813543218259967e-19,5.794002110264168e-19,5.774655906700201e-19,5.755503056604418e-19,5.736539424073757e-19,5.717761907180921e-19,5.699167920986494e-19,5.680753329587416e-19,5.6625165820200355e-19,5.644454059369174e-19,5.626563693683301e-19,5.608841866047235e-19,5.591287025497329e-19,5.573895553118401e-19,5.556665897946804e-19,5.539594441067359e-19,5.522679631516415e-19,5.505918884354559e-19,5.489309614642377e-19,5.472849754428338e-19,5.456537235760909e-19,5.44036999068856e-19,5.424344917283994e-19,5.408461498559327e-19,5.39271611559938e-19,5.377107217440505e-19,5.361633770106934e-19,5.346292671671373e-19,5.331082888158054e-19,5.316002351615447e-19,5.3010484771041365e-19,5.286220747636241e-19,5.271516061284462e-19,5.256933384073035e-19,5.242471682026194e-19,5.228128370204524e-19,5.213901897644378e-19,5.199791747357872e-19,5.185794817417709e-19,5.1719100738481235e-19,5.158136999661233e-19,5.144473009917622e-19,5.130917070641527e-19,5.117467630869297e-19,5.104123656625169e-19,5.090883079957609e-19,5.077745383878735e-19,5.0647090174249e-19,5.051772429632453e-19,5.038934069537747e-19,5.026193420152899e-19,5.013548930514261e-19,5.000999049658183e-19,4.988543777584665e-19,4.976180529354295e-19,4.963908270991305e-19,4.951727519483579e-19,4.939635172903819e-19,4.927631231252026e-19,4.915714143564551e-19,4.903883392853512e-19,4.892137428155259e-19,4.880475732481909e-19,4.868896754869816e-19,4.857399978331094e-19,4.84598436888998e-19,4.834648375582823e-19,4.823391998409625e-19,4.8122136864067365e-19,4.801112922586275e-19,4.790088672972474e-19,4.779139903589569e-19,4.768265580461794e-19,4.757465703589149e-19,4.746738722007984e-19,4.736083601742536e-19,4.725500342792803e-19,4.714987394195136e-19,4.7045442389616545e-19,4.694170877092357e-19,4.683865240635712e-19,4.673627329591719e-19,4.663456109984614e-19,4.653351064826513e-19,4.643311677129534e-19,4.633336395930027e-19,4.623425221227993e-19,4.613578153023432e-19,4.603793123364813e-19,4.594070132252135e-19,4.5844086626975155e-19,4.574807680725189e-19,4.565266669347273e-19,4.555785628563767e-19,4.546363007411022e-19,4.536998805889039e-19,4.527691990022051e-19,4.51844255981006e-19,4.509249481277299e-19,4.500112237435885e-19,4.491030311297936e-19,4.482003185875568e-19,4.473029827193016e-19,4.464110752238163e-19,4.45524441004736e-19,4.446430800620608e-19,4.437669406970023e-19,4.428959712107722e-19,4.42030068205794e-19,4.4116928338085605e-19,4.403134616395934e-19,4.39462602982006e-19,4.386166557093057e-19,4.377755681227041e-19,4.369393919209896e-19,4.361078686102206e-19,4.352811015879739e-19,4.34459039155461e-19,4.3364168131268207e-19,4.32828847113878e-19,4.3202053655904885e-19,4.3121677549758873e-19,4.3041751223070937e-19,4.296226433608342e-19,4.288321688879632e-19,4.2804606296270226e-19,4.272642221874748e-19,4.264866465622808e-19,4.257133360871203e-19,4.2494421321381084e-19,4.241792520929583e-19,4.2341834932698607e-19,4.226615824640766e-19,4.219088739560475e-19,4.211601462547163e-19,4.20415399360083e-19,4.1967458157335935e-19,4.1893766704515117e-19,4.1820457822727605e-19,4.1747536681852227e-19,4.167499552707074e-19,4.160283177344373e-19,4.153104025109237e-19,4.145962096001666e-19,4.1388566145398355e-19,4.131787839217687e-19,4.124755253047338e-19,4.117757822053022e-19,4.110796321716564e-19,4.103869718062198e-19,4.096978528077807e-19,4.0901212007997425e-19,4.08329877020377e-19,4.0765107193020067e-19,4.069756014118687e-19,4.0630343961598694e-19,4.0563463824134367e-19,4.0496909389036233e-19,4.0430683241243707e-19,4.0364785380756787e-19,4.0299202882878403e-19,4.0233943502426797e-19,4.01689943147049e-19,4.0104365659470366e-19,4.0040039442147297e-19,3.9976028587432763e-19,3.9912320170629695e-19,3.984891936161692e-19,3.978581582063678e-19,3.972301213262869e-19,3.966050571265324e-19,3.959829397577101e-19,3.953637175210317e-19,3.9474741626589143e-19,3.9413398429350094e-19,3.9352336990507195e-19,3.929156506487869e-19,3.923106714282809e-19,3.917085356411306e-19,3.9110911404036522e-19,3.9051245832477307e-19,3.8991851679556585e-19,3.893272894527436e-19,3.8873872459751795e-19,3.8815284807928313e-19,3.875696081992508e-19,3.869889791080269e-19,3.86410909106823e-19,3.858355015932158e-19,3.8526260147084042e-19,3.8469228628787925e-19,3.841244784961499e-19,3.8355915224625818e-19,3.8299633338759827e-19,3.8243597022138188e-19,3.8187808859700314e-19,3.813226368156738e-19,3.807696148773938e-19,3.802189710833749e-19,3.796707054336171e-19,3.7912479207872625e-19,3.785812568680965e-19,3.780400481029395e-19,3.775011399338612e-19,3.769645323608616e-19,3.7643019953454648e-19,3.7589816730431003e-19,3.753683581219698e-19,3.7484077198752583e-19,3.7431538305158395e-19,3.737922688623266e-19,3.732712743233889e-19,3.7275250283234743e-19,3.722358768410198e-19,3.717213705000118e-19,3.712089838093235e-19,3.7069874261834897e-19,3.701905952283e-19,3.696845157897824e-19,3.691805301521903e-19,3.686785866167355e-19,3.681786851834179e-19,3.676808000028434e-19,3.67184931075012e-19,3.666910783999237e-19,3.661991902787902e-19,3.657092925610057e-19,3.6522135939717596e-19,3.647353649379069e-19,3.642513350325927e-19,3.6376919213305084e-19,3.6328898793806966e-19,3.6281064489946673e-19,3.623341888666362e-19,3.6185964568897217e-19,3.613869119688981e-19,3.6091606525459645e-19,3.6044702799788474e-19,3.5997982604815713e-19,3.595144335560195e-19,3.5905087637086594e-19,3.5858905109511993e-19,3.5812900942756973e-19,3.576707772176095e-19,3.5721425106766266e-19,3.567594826765175e-19,3.56306472044174e-19,3.558551674718439e-19,3.554055948089213e-19,3.549576506578297e-19,3.545114642655398e-19,3.540669580838691e-19,3.536240804140294e-19,3.5318285710541476e-19,3.5274333985681354e-19,3.52305399421255e-19,3.518690874975274e-19,3.514344557844191e-19,3.5100134918556515e-19,3.505698969479363e-19,3.5013999567395602e-19,3.4971169706241255e-19,3.4928497526391176e-19,3.4885977857966536e-19,3.4843615870846164e-19,3.480140639515123e-19,3.475934943088174e-19,3.4717444978037685e-19,3.467569303661907e-19,3.463409102168648e-19,3.459263893323992e-19,3.455133160140055e-19,3.451017419604721e-19,3.4469166717179894e-19,3.442830140998036e-19,3.4387580859388023e-19,3.4347005065402883e-19,3.430657402802494e-19,3.426628516231478e-19,3.4226135883332986e-19,3.4186128776018976e-19,3.414626384037275e-19,3.410653332157606e-19,3.4066944974447156e-19,3.4027493629107205e-19,3.3988176700616794e-19,3.394899935885475e-19,3.3909953849002834e-19,3.387104534093987e-19,3.383226607984762e-19,3.379362382054432e-19,3.3755110808211735e-19,3.371673221272869e-19,3.3678482864216354e-19,3.364036276267473e-19,3.3602374493043233e-19,3.356451030050362e-19,3.352677793987413e-19,3.3489169656336523e-19,3.3451688034830214e-19,3.34143330753552e-19,3.3377104777911487e-19,3.333999797262024e-19,3.330301524442088e-19,3.32661565933134e-19,3.3229416849418972e-19,3.319280118261643e-19,3.315630442302694e-19,3.311992915558992e-19,3.3083672795365957e-19,3.3047535342355047e-19,3.301151679655719e-19,3.297561715797239e-19,3.2939831256721814e-19,3.290416167774488e-19,3.2868608421041584e-19,3.283317148661193e-19,3.2797850874455916e-19,3.27626388297553e-19,3.272754052238891e-19,3.269255853729616e-19,3.2657685119658805e-19,3.262292543935568e-19,3.2588276911447363e-19,3.255373436605503e-19,3.2519305557996926e-19,3.248498531739422e-19,3.2450771059307494e-19,3.2416665368676167e-19,3.2382668245500237e-19,3.234877710484029e-19,3.231499194669633e-19,3.228131277106835e-19,3.2247739577956353e-19,3.2214269782420926e-19,3.2180905969401483e-19,3.2147642969019194e-19,3.2114483366213475e-19,3.208142974592374e-19,3.204847176839233e-19,3.20156197733769e-19,3.1982866006059217e-19,3.1950213051378686e-19,3.1917663494274724e-19,3.1885206994989675e-19,3.1852853893281195e-19,3.1820599019270455e-19,3.178843978801804e-19,3.175637878446337e-19,3.1724413423667023e-19,3.169254629056842e-19,3.166077480022814e-19,3.16291015375856e-19,3.1597516162883146e-19,3.156602901587843e-19,3.1534637511632045e-19,3.1503336480265155e-19,3.147213109165659e-19,3.1441013590988113e-19,3.140999173307796e-19,3.137906293298672e-19,3.1348222020835563e-19,3.131747416650332e-19,3.128681678505057e-19,3.125624729153791e-19,3.1225768270904744e-19,3.1195377138211663e-19,3.1165079063337494e-19,3.113486370652458e-19,3.1104738822591165e-19,3.107469924165842e-19,3.1044747548665757e-19,3.101488374361318e-19,3.098510524156127e-19,3.095541204251003e-19,3.092580414645946e-19,3.0896278968470145e-19,3.0866841678420914e-19,3.083748710643294e-19,3.080821525250622e-19,3.077902353170134e-19,3.0749919698836544e-19,3.0720898584033004e-19,3.069195501741189e-19,3.0663096753791447e-19,3.0634318623292844e-19,3.0605620625916082e-19,3.0577005346600576e-19,3.0548467615467497e-19,3.052001001745626e-19,3.0491635137506275e-19,3.0463335220799305e-19,3.0435115437214175e-19,3.0406973201811473e-19,3.0378908514591197e-19,3.0350923960492763e-19,3.032301436963734e-19,3.0295182326964345e-19,3.0267427832473777e-19,3.023974830122622e-19,3.021214373322168e-19,3.018461671339956e-19,3.0157162071881044e-19,3.012978239360554e-19,3.010248026351246e-19,3.007525051172298e-19,3.0048095723176513e-19,3.002101072799423e-19,2.9994003280994374e-19,2.99670656273587e-19,2.994020035202663e-19,2.9913410039937567e-19,2.988668952121269e-19,2.986004138079141e-19,2.9833463033734317e-19,2.9806954480041406e-19,2.978052088959151e-19,2.975415450756638e-19,2.9727855333966023e-19,2.9701628538669264e-19,2.9675474121676102e-19,2.964938691310771e-19,2.9623364328024676e-19,2.959741412124524e-19,2.957153112289057e-19,2.9545715332960675e-19,2.9519966751455547e-19,2.9494287963314604e-19,2.9468673798659017e-19,2.94431268424282e-19,2.941764450968274e-19,2.939223197030146e-19,2.9366881469466124e-19,2.934159817705556e-19,2.931637950813035e-19,2.9291225462690493e-19,2.926613862567541e-19,2.924111124226685e-19,2.9216151067283063e-19,2.919125551578463e-19,2.916642200283214e-19,2.914165052842559e-19,2.9116946262443813e-19,2.9092304035007975e-19,2.9067721261178665e-19,2.904320311083471e-19,2.901874182915787e-19,2.8994347755905797e-19,2.8970015721199667e-19,2.894574055516065e-19,2.8921527427667574e-19,2.889737633872044e-19,2.8873284703379833e-19,2.884925510658517e-19,2.8825282378457615e-19,2.8801371688876004e-19,2.877752045290092e-19,2.875372608559295e-19,2.872999375683092e-19,2.870631571179659e-19,2.86826997053082e-19,2.8659140567486925e-19,2.8635640883272177e-19,2.861219806772454e-19,2.858881212084402e-19,2.8565485627570023e-19,2.8542213418023727e-19,2.8518998077144543e-19,2.8495842189871887e-19,2.8472738001387515e-19,2.844969326650967e-19,2.8426702815359525e-19,2.840376923287649e-19,2.838088993412116e-19,2.8358067504032937e-19,2.8335299357672415e-19,2.831258549503959e-19,2.8289925916134467e-19,2.826732062095704e-19,2.824477219444673e-19,2.82222754667247e-19,2.819983302273037e-19,2.8177442277524327e-19,2.815510581604598e-19,2.813282105335592e-19,2.8110590574393557e-19,2.8088414379158893e-19,2.80662872977731e-19,2.8044214500115005e-19,2.802219081630578e-19,2.800022400116367e-19,2.797830629987043e-19,2.7956437712426057e-19,2.7934623408709385e-19,2.7912858218841584e-19,2.7891144727762067e-19,2.7869482935470834e-19,2.784787025702847e-19,2.782630669243498e-19,2.7804794826629773e-19,2.7783332074673437e-19,2.776191843656597e-19,2.774055649724679e-19,2.771924108683706e-19,2.769797737521562e-19,2.7676760192503636e-19,2.765559212364052e-19,2.7634473168626277e-19,2.7613403327460902e-19,2.7592380015204984e-19,2.7571405816797937e-19,2.7550478147300345e-19,2.752959700671221e-19,2.7508764979972944e-19,2.748798206708255e-19,2.7467243098162197e-19,2.74465506581513e-19,2.7425907331989273e-19,2.740530794979729e-19,2.738476026639359e-19,2.7364253942020516e-19,2.73437941465569e-19,2.732338088000274e-19,2.7303014142358036e-19,2.7282691348683374e-19,2.7262412498978753e-19,2.724218017818359e-19,2.722199438629788e-19,2.7201852538382215e-19,2.718175463443659e-19,2.716170325940042e-19,2.714169324339488e-19,2.7121729756298797e-19,2.7101810213172754e-19,2.708193202907734e-19,2.7062097788951966e-19,2.7042307492796635e-19,2.702256372555076e-19,2.7002861317335513e-19,2.6983200268150893e-19,2.6963583162936315e-19,2.694401000169178e-19,2.692447819947787e-19,2.690498775629459e-19,2.688554125708135e-19,2.686613611689874e-19,2.6846772335746756e-19,2.6827452498564815e-19,2.6808171435474087e-19,2.67889343163534e-19,2.676973855626334e-19,2.6750581570264496e-19,2.6731468528235693e-19,2.6712396845237517e-19,2.669336135139114e-19,2.6674369801514806e-19,2.66554196106691e-19,2.6636508193914605e-19,2.6617635551251325e-19,2.6598804267618673e-19,2.658001434301665e-19,2.656126060756642e-19,2.654255081608624e-19,2.6523877213757854e-19,2.6505244970460097e-19,2.6486651501253553e-19,2.6468096806138223e-19,2.6449580885114106e-19,2.6431103738181203e-19,2.6412667950278927e-19,2.6394265766589037e-19,2.6375904941929774e-19,2.6357582891361724e-19,2.6339297029945474e-19,2.6321049942620437e-19,2.6302841629386613e-19,2.6284672090244003e-19,2.6266538740253192e-19,2.624844157941418e-19,2.6230383192666382e-19,2.6212360995070383e-19,2.61943775715656e-19,2.6176427752273197e-19,2.615851670707201e-19,2.6140644435962036e-19,2.6122805769064447e-19,2.610500587625807e-19,2.6087242172603495e-19,2.606951465810072e-19,2.6051820747810326e-19,2.6034165611611147e-19,2.6016544079624354e-19,2.599895873678936e-19,2.5981409583106164e-19,2.596389661857477e-19,2.594641984319517e-19,2.5928974087088545e-19,2.5911569690012546e-19,2.589419631220952e-19,2.587685912355829e-19,2.5859555539119446e-19,2.5842285558892987e-19,2.582505176781833e-19,2.5807851580956053e-19,2.579068758324558e-19,2.5773554604808073e-19,2.575646040046178e-19,2.5739394630449048e-19,2.5722367634527526e-19,2.5705371657878976e-19,2.568840928544281e-19,2.567148051721903e-19,2.565458793814705e-19,2.563772637834804e-19,2.5620895837822e-19,2.5604101486447757e-19,2.55873407392859e-19,2.5570611011397016e-19,2.5553914887720516e-19,2.5537249783316987e-19,2.5520620868065257e-19,2.5504020387147084e-19,2.5487453510441295e-19,2.547092023794789e-19,2.545441798472746e-19,2.543794933571941e-19,2.5421511705984333e-19,2.5405102510582813e-19,2.538872950433309e-19,2.537238751735634e-19,2.535607654965256e-19,2.533979660122175e-19,2.5323547672063912e-19,2.5307329762179045e-19,2.529114287156715e-19,2.527498700022822e-19,2.525886473310168e-19,2.524276831536928e-19,2.5226705501849267e-19,2.5210673707602223e-19,2.5194670347688737e-19,2.517870317692705e-19,2.516275927062009e-19,2.514685155346493e-19,2.513096968570391e-19,2.5115118837215863e-19,2.5099299008000787e-19,2.5083507613119267e-19,2.5067747237510717e-19,2.5052015296235724e-19,2.503631178929429e-19,2.5020641886565236e-19,2.5004997833230327e-19,2.498938479916839e-19,2.4973800199440007e-19,2.4958246618984596e-19,2.494272147286274e-19,2.492722217613503e-19,2.4911753898680287e-19,2.48963140555591e-19,2.488090523171089e-19,2.48655196723174e-19,2.48501677171363e-19,2.483484161134934e-19,2.4819546524835353e-19,2.4804277287715507e-19,2.4789033899989803e-19,2.477382153153707e-19,2.4758637597417893e-19,2.4743482097632273e-19,2.4728352447240796e-19,2.4713251231182874e-19,2.469817844945851e-19,2.4683131517128287e-19,2.466811301913162e-19,2.46531203705291e-19,2.4638158741199545e-19,2.462322037632472e-19,2.460831044578345e-19,2.459342894957574e-19,2.457857330276217e-19,2.4563746090282157e-19,2.454894214225687e-19,2.4534166628565144e-19,2.451941954920697e-19,2.450469573430353e-19,2.4490002938673055e-19,2.4475330822557896e-19,2.4460689725715707e-19,2.444607447826766e-19,2.4431482495274342e-19,2.441691894661458e-19,2.440238124734896e-19,2.4387869397477484e-19,2.4373380812060735e-19,2.435892066097754e-19,2.434448635928849e-19,2.4330077906993584e-19,2.4315692719153404e-19,2.4301333380707366e-19,2.4287002476594885e-19,2.427269483693713e-19,2.425841304667352e-19,2.424415452086464e-19,2.422992442938931e-19,2.42157150174293e-19,2.4201534039802843e-19,2.418737891157053e-19,2.417324446285353e-19,2.4159138448470087e-19,2.4145053113601957e-19,2.4130996213067384e-19,2.411696257698754e-19,2.4102954790301836e-19,2.4088967683131448e-19,2.4075009010294615e-19,2.4061071016973097e-19,2.404715887304572e-19,2.4033272578512486e-19,2.4019406963494566e-19,2.400556719787079e-19,2.399175069670174e-19,2.3977957459987417e-19,2.3964190072667238e-19,2.3950445949801786e-19,2.3936725091391063e-19,2.3923024912495653e-19,2.3909350582994386e-19,2.389570210288726e-19,2.388207430229545e-19,2.3868469766158367e-19,2.385488849447601e-19,2.3841330487248385e-19,2.3827795744475486e-19,2.3814284266157315e-19,2.380079605229387e-19,2.3787331102885158e-19,2.3773886832991757e-19,2.3760465827553084e-19,2.374706808656914e-19,2.373369361003992e-19,2.3720342397965433e-19,2.370701186540626e-19,2.369370459730181e-19,2.3680420593652093e-19,2.366715726951769e-19,2.365391720983801e-19,2.364070041461306e-19,2.3627501713964013e-19,2.3614328862709106e-19,2.3601176690969513e-19,2.358804778368465e-19,2.3574939555915097e-19,2.356185200766086e-19,2.354878772386135e-19,2.353574670451657e-19,2.3522723779747687e-19,2.3509724119433533e-19,2.3496747723574107e-19,2.348378942229058e-19,2.3470854385461783e-19,2.34579400281483e-19,2.344504635035013e-19,2.3432175937006687e-19,2.3419328788117972e-19,2.3406497148865744e-19,2.3393691359007657e-19,2.338090366372547e-19,2.3368136647958597e-19,2.335539289664645e-19,2.3342667239910206e-19,2.332996484762869e-19,2.331728054992307e-19,2.330461951667218e-19,2.3291979162936605e-19,2.327935690377693e-19,2.326675790907198e-19,2.325417700894293e-19,2.3241616788329197e-19,2.3229077247230776e-19,2.321655838564767e-19,2.3204060203579875e-19,2.319158011608798e-19,2.3179123293050816e-19,2.316668456458955e-19,2.3154266515643597e-19,2.3141866561273545e-19,2.312948987135822e-19,2.311712869107938e-19,2.310479077525527e-19,2.309247095400706e-19,2.308017181227416e-19,2.306789076511716e-19,2.305563298241489e-19,2.3043390709349107e-19,2.3031169115798636e-19,2.301896820176348e-19,2.300678538230422e-19,2.2994620657420863e-19,2.298247661205282e-19,2.297035324620009e-19,2.295824797492326e-19,2.2946160798222327e-19,2.293409430103671e-19,2.292204589842699e-19,2.2910015590393174e-19,2.2898003376935255e-19,2.2886014427932065e-19,2.287404098856536e-19,2.286208822871397e-19,2.2850150978499063e-19,2.283823440779947e-19,2.282633593167578e-19,2.28144581350674e-19,2.2802595848095506e-19,2.2790754240638927e-19,2.2778928142818833e-19,2.2767125309453467e-19,2.2755337985724586e-19,2.2743568756571605e-19,2.2731817621994523e-19,2.272008458199334e-19,2.270836963656806e-19,2.2696672785718677e-19,2.2684994029445194e-19,2.2673335952687024e-19,2.266169338556534e-19,2.2650068913019556e-19,2.263846253504967e-19,2.2626874251655687e-19,2.26153040628376e-19,2.2603749383656e-19,2.25922127990503e-19,2.2580696893959914e-19,2.2569196498506012e-19,2.255771419762801e-19,2.2546247406386494e-19,2.253480129466029e-19,2.2523370692570575e-19,2.2511955600117343e-19,2.2500561187179425e-19,2.2489184868817407e-19,2.2477824060091874e-19,2.2466478761002826e-19,2.245515155648968e-19,2.244384244655243e-19,2.2432548846251667e-19,2.2421273340526803e-19,2.241001592937784e-19,2.239877402786536e-19,2.238755022092878e-19,2.237634192362869e-19,2.2365151720904494e-19,2.2353977027816786e-19,2.2342820429304977e-19,2.2331679340429653e-19,2.2320553761190815e-19,2.2309446276527876e-19,2.2298356886440837e-19,2.228728042105087e-19,2.22762220502368e-19,2.2265181773998633e-19,2.225415700739695e-19,2.224314775043175e-19,2.2232156588042453e-19,2.2221178350350226e-19,2.221022079217331e-19,2.219927615869347e-19,2.2188349619789527e-19,2.2177436005582656e-19,2.2166540485951684e-19,2.215566306089661e-19,2.214479856053861e-19,2.213395215475651e-19,2.2123121258610893e-19,2.211230587210176e-19,2.2101505995229116e-19,2.2090721627992956e-19,2.207995277039328e-19,2.2069202007369506e-19,2.2058464169042802e-19,2.2047741840352584e-19,2.2037037606238265e-19,2.2026346296821017e-19,2.2015675666919083e-19,2.2005015376774806e-19,2.1994370596267014e-19,2.198374391033512e-19,2.1973132734039715e-19,2.196253448244138e-19,2.195195174047953e-19,2.194138709309358e-19,2.19308353704047e-19,2.1920299157352305e-19,2.1909778453936396e-19,2.189927326015697e-19,2.188878099107462e-19,2.1878306816568167e-19,2.1867845566758786e-19,2.185739982658589e-19,2.184696959604948e-19,2.1836554875149553e-19,2.18261530789467e-19,2.181576679238033e-19,2.1805396015450446e-19,2.1795038163217634e-19,2.178469840556072e-19,2.1774368987661465e-19,2.176405766433811e-19,2.1753759265711824e-19,2.1743476376722024e-19,2.173320899736871e-19,2.1722954542712466e-19,2.171271559769271e-19,2.1702492162309435e-19,2.169227906668382e-19,2.1682084065634104e-19,2.1671900696811752e-19,2.16617354225653e-19,2.165158178054621e-19,2.16414423556939e-19,2.1631317148008369e-19,2.1621207449959322e-19,2.1611111969077054e-19,2.1601029412891857e-19,2.159095978140373e-19,2.158090565955209e-19,2.1570865754867228e-19,2.156084135981885e-19,2.1550829889467545e-19,2.154083134381331e-19,2.1530845722856147e-19,2.1520875611535468e-19,2.1510919717381568e-19,2.1500978040394447e-19,2.149104799563469e-19,2.1481134752981124e-19,2.1471233142554923e-19,2.14613457492955e-19,2.145146998826344e-19,2.1441611029337575e-19,2.1431763702639072e-19,2.142192930063764e-19,2.1412110408272695e-19,2.1402303148135113e-19,2.1392511397634017e-19,2.1382731279360284e-19,2.137296537825333e-19,2.136321110937374e-19,2.1353472350130635e-19,2.1343746515584602e-19,2.133403360573564e-19,2.1324334913053455e-19,2.1314649145068342e-19,2.1304975009310593e-19,2.1295315090719622e-19,2.128566938929543e-19,2.1276034027628894e-19,2.126641546806855e-19,2.1256807248265864e-19,2.1247213245629956e-19,2.1237629582751705e-19,2.1228062721979646e-19,2.1218507493434952e-19,2.1208965189587328e-19,2.1199433225497362e-19,2.1189915478574174e-19,2.1180411948817764e-19,2.1170920051288718e-19,2.1161443663396157e-19,2.1151973737852132e-19,2.1142523199353714e-19,2.1133081708143245e-19,2.1123653141629848e-19,2.1114237499813521e-19,2.1104834782694266e-19,2.1095443697802375e-19,2.108606812254697e-19,2.107670288704922e-19,2.1067347991309129e-19,2.1058007312735815e-19,2.1048679558859573e-19,2.10393647296804e-19,2.1030060240258887e-19,2.102076996800415e-19,2.1011491327976778e-19,2.100222432017677e-19,2.0992970237073833e-19,2.0983729078667967e-19,2.0974499552489466e-19,2.0965281658538328e-19,2.0956077981753968e-19,2.0946883352257558e-19,2.093770164745822e-19,2.0928532867355952e-19,2.0919377011950756e-19,2.0910231496303217e-19,2.0901098905352748e-19,2.0891976654159937e-19,2.0882867327664197e-19,2.0873770925865528e-19,2.0864683571354808e-19,2.0855613018950282e-19,2.084654892889429e-19,2.0837500348474785e-19,2.0828459522873521e-19,2.0819434206908744e-19,2.0810419230701623e-19,2.0801415886721866e-19,2.079242546743918e-19,2.0783445387914151e-19,2.0774478233086194e-19,2.0765520125546186e-19,2.0756577527642663e-19,2.0747642684557383e-19,2.0738722058638882e-19,2.072981048000833e-19,2.072091182607485e-19,2.0712023511899026e-19,2.0703148122420273e-19,2.0694283072699178e-19,2.068543224014486e-19,2.0676589162408786e-19,2.066776030183949e-19,2.065894178102785e-19,2.065013230750416e-19,2.064133575867754e-19,2.0632550842078287e-19,2.062377626523669e-19,2.0615013320622455e-19,2.0606260715765879e-19,2.0597519743136666e-19,2.0588790402734817e-19,2.0580071402090625e-19,2.0571365326143505e-19,2.0562667005014627e-19,2.055398160858282e-19,2.0545309136848084e-19,2.0536645712401299e-19,2.0527993920181877e-19,2.0519351175250405e-19,2.0510721355016004e-19,2.0502100582069553e-19,2.0493491441350466e-19,2.0484892640389036e-19,2.0476306764124677e-19,2.046772864267856e-19,2.0459163445929515e-19,2.0450608588938127e-19,2.0442064071704395e-19,2.0433532479167735e-19,2.0425008641449318e-19,2.0416496435958264e-19,2.0407994570224868e-19,2.0399503044249128e-19,2.0391023150500752e-19,2.0382553596510034e-19,2.0374094382276972e-19,2.0365645507801567e-19,2.0357208265553526e-19,2.0348780070593435e-19,2.0340362215391e-19,2.0331954699946223e-19,2.032355881672881e-19,2.0315171980799347e-19,2.0306798069566955e-19,2.0298431913152805e-19,2.029007738896602e-19,2.028173320453689e-19,2.0273396774926005e-19,2.0265074562481897e-19,2.0256760104856032e-19,2.024845727945753e-19,2.0240162208877273e-19,2.0231878770524378e-19,2.022360567192914e-19,2.0215344205561268e-19,2.0207091786481344e-19,2.0198847122219663e-19,2.019061667512476e-19,2.0182392690378393e-19,2.017418033785939e-19,2.0165978325098044e-19,2.0157785359624648e-19,2.0149601441439201e-19,2.014142915548112e-19,2.0133267209280693e-19,2.0125115602837925e-19,2.0116971751213399e-19,2.010883823934653e-19,2.0100716359707025e-19,2.0092600942416055e-19,2.0084498449822157e-19,2.0076405004516208e-19,2.006832060649821e-19,2.0060247840707575e-19,2.0052182829735183e-19,2.0044128158520448e-19,2.0036082534593662e-19,2.0028045957954827e-19,2.0020022306013063e-19,2.0012005116419834e-19,2.0003998266584262e-19,1.9996003048976054e-19,1.9988015586186089e-19,1.9980037170684073e-19,1.9972069094939715e-19,1.9964110066483306e-19,1.9956162670254262e-19,1.9948221736373753e-19,1.99402911422509e-19,1.9932372180355412e-19,1.992445968080846e-19,1.9916557521019164e-19,1.9908666993457232e-19,1.990078163577413e-19,1.9892910495257804e-19,1.9885044524620308e-19,1.9877188893740468e-19,1.9869344895087993e-19,1.986150865125376e-19,1.985368016223777e-19,1.9845862012979437e-19,1.9838052911009053e-19,1.9830254148796327e-19,1.982246443387155e-19,1.9814682473765016e-19,1.980691085341614e-19,1.9799146987885505e-19,1.9791393462112527e-19,1.97836489836275e-19,1.9775914844900128e-19,1.9768185876051586e-19,1.9760469831900115e-19,1.9752762835036593e-19,1.9745062300521608e-19,1.9737373398233986e-19,1.9729689665825192e-19,1.972201885811347e-19,1.9714353220280576e-19,1.9706700507144754e-19,1.9699054256357467e-19,1.9691418345327837e-19,1.9683788896646742e-19,1.9676171080193012e-19,1.9668561018557524e-19,1.9660958711740279e-19,1.965336674468069e-19,1.9645782532439345e-19,1.963820736748595e-19,1.9630641249820503e-19,1.9623084179443007e-19,1.9615534863883753e-19,1.960799459561245e-19,1.9600463374629096e-19,1.9592941200933692e-19,1.9585428074526237e-19,1.9577921410467319e-19,1.9570425086166057e-19,1.9562936516683038e-19,1.9555456994487968e-19,1.954798651958085e-19,1.9540523799491972e-19,1.9533070126691045e-19,1.952562420870836e-19,1.951818604554392e-19,1.9510758222137134e-19,1.9503338153548592e-19,1.9495925839778293e-19,1.948852386576565e-19,1.9481128354101543e-19,1.9473743182195093e-19,1.9466365765106886e-19,1.9458996102836921e-19,1.94516341953852e-19,1.9444281335221427e-19,1.9436936229875898e-19,1.9429601464288025e-19,1.9422274453518395e-19,1.94149539050973e-19,1.9407643696433864e-19,1.9400339950118962e-19,1.9393046543561717e-19,1.93857583068833e-19,1.937848040996254e-19,1.9371210267860024e-19,1.9363949173045457e-19,1.9356694540579426e-19,1.9349448955401344e-19,1.9342212417511212e-19,1.9334983634439323e-19,1.932776131371597e-19,1.9320548040280565e-19,1.9313343814133111e-19,1.9306146050334193e-19,1.9298957333823224e-19,1.929177507966079e-19,1.9284601872786308e-19,1.9277436420730067e-19,1.9270280015961776e-19,1.9263131366011728e-19,1.9255990470879923e-19,1.9248858623036067e-19,1.924173194507104e-19,1.9234614314393963e-19,1.9227504438535128e-19,1.9220403609964243e-19,1.92133105362116e-19,1.9206223924807494e-19,1.919914506822163e-19,1.9192075258923716e-19,1.9185013204444045e-19,1.9177960197252323e-19,1.917091235993943e-19,1.9163873569914486e-19,1.9156841242238079e-19,1.9149816669379913e-19,1.9142801143809698e-19,1.9135793373057725e-19,1.9128794649593702e-19,1.9121801096008508e-19,1.9114816589711263e-19,1.9107838545762554e-19,1.9100868256632088e-19,1.9093907014789571e-19,1.908695223529559e-19,1.9080005210619852e-19,1.907306464829265e-19,1.9066133133253396e-19,1.9059209373032386e-19,1.9052292075159911e-19,1.904538253210568e-19,1.903848074386969e-19,1.9031586710451943e-19,1.9024699139382732e-19,1.9017821908071178e-19,1.9010948554168745e-19,1.9004084247554262e-19,1.8997226403288315e-19,1.8990378898780024e-19,1.8983535271680855e-19,1.8976700691869636e-19,1.8969872574406952e-19,1.8963053504232218e-19,1.8956242188875727e-19,1.8949434750928357e-19,1.894263894520835e-19,1.8935847016897466e-19,1.8929064135874531e-19,1.8922286424730425e-19,1.8915517760874268e-19,1.8908755559366647e-19,1.8902002405146976e-19,1.889525571327584e-19,1.888851548375324e-19,1.8881783009048883e-19,1.887505699669306e-19,1.8868338739155482e-19,1.8861628236436146e-19,1.8854924196065345e-19,1.884822661804308e-19,1.8841538087308764e-19,1.883485343398357e-19,1.8828179120416033e-19,1.8821509976727324e-19,1.8814849880326565e-19,1.8808196246274341e-19,1.8801547782100946e-19,1.8794908365215501e-19,1.8788274118208885e-19,1.8781648918490218e-19,1.877502888865038e-19,1.876841790609849e-19,1.876181209342543e-19,1.875521532804032e-19,1.8748623732534038e-19,1.8742039891845999e-19,1.8735463805976202e-19,1.872889030504582e-19,1.8722328436342802e-19,1.8715771737518612e-19,1.8709222793512665e-19,1.8702679019385546e-19,1.869614300007667e-19,1.868961344311633e-19,1.8683091640974232e-19,1.867657630118067e-19,1.8670067423735643e-19,1.8663566301108859e-19,1.8657070348360903e-19,1.865058215043119e-19,1.8644099122380306e-19,1.8637625141617372e-19,1.8631157623202973e-19,1.862469656713711e-19,1.8618241973419781e-19,1.861179384205099e-19,1.860535346550044e-19,1.8598918258828718e-19,1.859249080697524e-19,1.858606852500059e-19,1.8579656582783597e-19,1.8573247225506018e-19,1.8566845623046682e-19,1.8560451775405588e-19,1.855406439011303e-19,1.8547680882229594e-19,1.8541307714103814e-19,1.8534938423387156e-19,1.8528575595019033e-19,1.852222181393886e-19,1.8515873202737516e-19,1.8509531053884707e-19,1.8503195367380433e-19,1.8496866143224696e-19,1.8490543381417493e-19,1.8484227081958827e-19,1.8477917244848696e-19,1.84716138700871e-19,1.846531695767404e-19,1.8459026507609516e-19,1.8452743812363234e-19,1.844646628699578e-19,1.8440195223976863e-19,1.8433929330836774e-19,1.8427671192514928e-19,1.8421419516541617e-19,1.8415174302916841e-19,1.8408934259170895e-19,1.8402703262712897e-19,1.8396474851194315e-19,1.8390255486963681e-19,1.838404000014217e-19,1.8377833560608608e-19,1.8371632290953874e-19,1.836543619117797e-19,1.8359249138690014e-19,1.835306596361118e-19,1.8346887958411175e-19,1.834071900049912e-19,1.8334555212465892e-19,1.8328396594311493e-19,1.8322247023445044e-19,1.8316101329987717e-19,1.8309962098878925e-19,1.8303828037648961e-19,1.829770173123724e-19,1.8291580594704348e-19,1.8285467212989698e-19,1.8279359001153877e-19,1.8273254666727177e-19,1.8267160672058134e-19,1.8261067969858798e-19,1.825498560741712e-19,1.8248907122384562e-19,1.8242836392170247e-19,1.8236769539365053e-19,1.8230710441378102e-19,1.8224657805739687e-19,1.8218607755040686e-19,1.8212566751629634e-19,1.8206530918097411e-19,1.8200501546913724e-19,1.8194477345608865e-19,1.818846089912225e-19,1.8182449622514461e-19,1.8176443515785502e-19,1.8170443871405078e-19,1.8164449396903483e-19,1.8158461384750424e-19,1.81524798349459e-19,1.8146503455020204e-19,1.8140533537443044e-19,1.8134568789744712e-19,1.8128610504394916e-19,1.8122657388923949e-19,1.8116712028271224e-19,1.8110769252557913e-19,1.8104835524132552e-19,1.8098905673116313e-19,1.8092982284448609e-19,1.808706535812944e-19,1.80811536016891e-19,1.8075245722657882e-19,1.8069345598444906e-19,1.8063451936580466e-19,1.805756473706456e-19,1.8051681414957777e-19,1.8045803262729822e-19,1.803993286532011e-19,1.8034067637789226e-19,1.8028206287667464e-19,1.8022352692363944e-19,1.8016502974469546e-19,1.801066101139339e-19,1.8004824218196063e-19,1.7998991302407857e-19,1.7993166141437893e-19,1.7987346150346759e-19,1.7981531329134452e-19,1.7975721677800974e-19,1.7969918488816032e-19,1.7964123054649332e-19,1.7958330205422047e-19,1.7952543818543297e-19,1.7946762601543376e-19,1.794098784689199e-19,1.7935216969649725e-19,1.7929452554755996e-19,1.7923694602210803e-19,1.791794052707473e-19,1.7912194206756902e-19,1.7906450471378487e-19,1.7900715783288021e-19,1.7894984972606677e-19,1.7889259331804162e-19,1.7883538860880475e-19,1.7877823559835616e-19,1.7872114721139293e-19,1.7866412344791506e-19,1.786071384585284e-19,1.785502180926271e-19,1.78493336500817e-19,1.7843651953249227e-19,1.7837975426295581e-19,1.7832304069220765e-19,1.7826639174494484e-19,1.7820978157177324e-19,1.7815324894678407e-19,1.780967550958861e-19,1.7804031294377644e-19,1.7798392249045505e-19,1.7792759666061902e-19,1.778713096048742e-19,1.7781507424791766e-19,1.7775891643914355e-19,1.7770279740446066e-19,1.7764673006856605e-19,1.7759071443145972e-19,1.7753475049314168e-19,1.77478851178309e-19,1.7742299063756753e-19,1.773671947203114e-19,1.773114375771465e-19,1.7725574505746696e-19,1.7720009131187863e-19,1.7714450218977565e-19,1.7708895184176389e-19,1.7703347904193455e-19,1.7697803209149935e-19,1.7692264976454951e-19,1.7686733206108503e-19,1.768120402070147e-19,1.767568129764297e-19,1.76701637444633e-19,1.7664651361162458e-19,1.7659145440210152e-19,1.765364210419726e-19,1.7648145230532904e-19,1.7642654819217084e-19,1.7637166992840677e-19,1.7631685628812806e-19,1.7626208142194057e-19,1.7620737117923843e-19,1.761526997106275e-19,1.7609809286550193e-19,1.7604353771916464e-19,1.7598902134691857e-19,1.7593456959815785e-19,1.7588014369879128e-19,1.7582579534760713e-19,1.7577147284581712e-19,1.7571722789220954e-19,1.756630087879961e-19,1.7560885430726803e-19,1.7555473860063116e-19,1.7550070044217672e-19,1.7544667520841935e-19,1.753927275228444e-19,1.7533881861136067e-19,1.7528494847396816e-19,1.7523115588475807e-19,1.7517738914494212e-19,1.7512367410391446e-19,1.7506999783697801e-19,1.75016399118224e-19,1.7496283917356118e-19,1.7490931800298959e-19,1.7485587438060042e-19,1.748024566076054e-19,1.7474907760870158e-19,1.7469576323328312e-19,1.7464248763195588e-19,1.74589276654114e-19,1.7453610445036332e-19,1.7448298394540093e-19,1.7442990221452975e-19,1.743768592577498e-19,1.7432390677384932e-19,1.74270980139343e-19,1.7421807935423082e-19,1.7416525611730107e-19,1.7411245872976546e-19,1.740597259657152e-19,1.7400704490045323e-19,1.739543896845854e-19,1.7390179909220293e-19,1.7384924727391167e-19,1.7379676007910576e-19,1.73744298733694e-19,1.7369191493646467e-19,1.736395440639324e-19,1.735872378148855e-19,1.735349703399298e-19,1.7348276748845946e-19,1.7343060341108034e-19,1.7337847810779243e-19,1.733264045032928e-19,1.7327438259758146e-19,1.7322238654126426e-19,1.731704551084324e-19,1.7311857537438885e-19,1.730667344144365e-19,1.7301494515327244e-19,1.729631946661996e-19,1.7291149587791503e-19,1.7285983586372168e-19,1.7280824047301368e-19,1.7275667093169983e-19,1.7270515308917426e-19,1.7265368694543698e-19,1.7260227250048798e-19,1.725508968296302e-19,1.7249955993286362e-19,1.7244827473488533e-19,1.7239704123569533e-19,1.7234584651059654e-19,1.722946776348919e-19,1.7224358630736967e-19,1.721925208292416e-19,1.721415070499018e-19,1.7209053204465322e-19,1.7203962166289e-19,1.7198876297991506e-19,1.7193791722163719e-19,1.7188713608684467e-19,1.7183639372614337e-19,1.7178569013953329e-19,1.7173503825171149e-19,1.7168443806267797e-19,1.716338637230386e-19,1.7158335400688457e-19,1.7153288306482177e-19,1.7148245089685018e-19,1.7143207042766687e-19,1.7138172873257477e-19,1.7133143873627096e-19,1.7128118751405837e-19,1.7123097506593698e-19,1.7118081431660389e-19,1.71130692341362e-19,1.7108060914021133e-19,1.7103057763784894e-19,1.7098059783427484e-19,1.7093065680479195e-19,1.7088075454940027e-19,1.7083089106809981e-19,1.707810922102847e-19,1.7073131920186374e-19,1.7068159789223106e-19,1.706319153566896e-19,1.7058227159523934e-19,1.7053267953257737e-19,1.704831391687037e-19,1.7043361172952708e-19,1.703841618385329e-19,1.7033472487223578e-19,1.7028533960472695e-19,1.7023601896070347e-19,1.7018672416607414e-19,1.7013746814553602e-19,1.700882638237862e-19,1.7003909827612757e-19,1.6998997150256016e-19,1.6994089642778104e-19,1.6989184720239606e-19,1.6984286260049643e-19,1.6979390384799095e-19,1.6974499679427375e-19,1.6969612851464777e-19,1.69647299009113e-19,1.6959852120236651e-19,1.6954976924501417e-19,1.695010689864501e-19,1.6945240750197726e-19,1.694037977162927e-19,1.6935522670469935e-19,1.6930668154250015e-19,1.692582010037863e-19,1.692097463144666e-19,1.6916134332393517e-19,1.6911296618279789e-19,1.6906465366514596e-19,1.6901636699688818e-19,1.6896813202741868e-19,1.6891992290734332e-19,1.6887176548605625e-19,1.688236468388604e-19,1.6877557989045282e-19,1.6872752586674232e-19,1.6867953646651717e-19,1.6863158584038324e-19,1.6858366106364345e-19,1.68535800910389e-19,1.6848796660652872e-19,1.684401840014567e-19,1.6839241432108177e-19,1.6834472218888926e-19,1.6829704298139382e-19,1.6824941547268667e-19,1.6820182673807073e-19,1.68154276777546e-19,1.6810676559111248e-19,1.6805930610346725e-19,1.6801188538991324e-19,1.6796449052575336e-19,1.679171344356847e-19,1.678698429691014e-19,1.6782256442721516e-19,1.6777533758411721e-19,1.6772816243980755e-19,1.6768100022019495e-19,1.6763390262406772e-19,1.6758683087733462e-19,1.6753979790469274e-19,1.6749281663083914e-19,1.6744584828168261e-19,1.6739894455601144e-19,1.6735207960443149e-19,1.6730525342694274e-19,1.6725845309884814e-19,1.6721170446954182e-19,1.6716498168962965e-19,1.6711831060850576e-19,1.6707167830147308e-19,1.6702508476853162e-19,1.6697853000968137e-19,1.6693200110022526e-19,1.668855368142545e-19,1.6683907252828375e-19,1.6679267286579836e-19,1.6674632490210125e-19,1.6670000278779828e-19,1.6665370652288945e-19,1.666074619567689e-19,1.665612432400425e-19,1.665150762221044e-19,1.664689479782575e-19,1.6642284558380473e-19,1.6637679488814025e-19,1.66330782966567e-19,1.6628479689438787e-19,1.6623886252099703e-19,1.6619295399700034e-19,1.6614709717179193e-19,1.6610126619597767e-19,1.6605547399425461e-19,1.6600972056662278e-19,1.6596400591308215e-19,1.6591833003363274e-19,1.658727058529716e-19,1.6582709459700755e-19,1.657815221151347e-19,1.6573600133205015e-19,1.656905193230568e-19,1.656450631634576e-19,1.655996457779496e-19,1.655542800912299e-19,1.6550894025390434e-19,1.6546363919067e-19,1.6541837690152686e-19,1.6537315338647494e-19,1.6532795572081716e-19,1.652827968292506e-19,1.6523767671177524e-19,1.6519262121778524e-19,1.6514756572379524e-19,1.6510256192859353e-19,1.6505758398278596e-19,1.650126448110696e-19,1.649677702628386e-19,1.649228957146076e-19,1.6487808578986195e-19,1.6483328878981337e-19,1.6478854348855308e-19,1.64743836961384e-19,1.6469915628360907e-19,1.6465452730462242e-19,1.6460991125033284e-19,1.6456535981952862e-19,1.6452082131342147e-19,1.6447632158140553e-19,1.644318606234808e-19,1.643874384396473e-19,1.6434304210520792e-19,1.642987103942539e-19,1.6425439160799697e-19,1.6421011159583124e-19,1.6416585743305965e-19,1.6412165496907635e-19,1.6407747835448719e-19,1.6403334051398924e-19,1.6398925437227958e-19,1.6394516823056992e-19,1.639011467123456e-19,1.6385715104351545e-19,1.638131941487765e-19,1.6376927602812876e-19,1.6372538375687516e-19,1.6368153025971278e-19,1.6363770261194454e-19,1.6359393958766166e-19,1.6355017656337877e-19,1.6350647816258125e-19,1.634627926864808e-19,1.6341915890916862e-19,1.6337553805655352e-19,1.633319689027267e-19,1.632884385229911e-19,1.6324492106795256e-19,1.632014682363994e-19,1.6315802832954328e-19,1.631146271967784e-19,1.6307126483810471e-19,1.6302794125352225e-19,1.6298464351833393e-19,1.6294138455723682e-19,1.6289815144553385e-19,1.628549571079221e-19,1.6281180154440156e-19,1.6276868475497223e-19,1.6272560673963412e-19,1.6268254164899307e-19,1.6263952825714032e-19,1.625965407146817e-19,1.6255357902161723e-19,1.6251065610264397e-19,1.6246777195776192e-19,1.624249265869711e-19,1.623821070655744e-19,1.6233932631826892e-19,1.6229658434505466e-19,1.6225385529653747e-19,1.6221117794680856e-19,1.621685264464738e-19,1.6212591372023024e-19,1.620833397680779e-19,1.620407916653197e-19,1.6199828233665273e-19,1.6195579885737988e-19,1.6191334122750119e-19,1.618709223717137e-19,1.618285552147145e-19,1.6178621390710944e-19,1.6174388552420146e-19,1.6170162176477882e-19,1.6165937093005326e-19,1.6161714594472185e-19,1.6157497265817871e-19,1.6153281229633265e-19,1.6149071655797194e-19,1.614486337443083e-19,1.6140656385534175e-19,1.6136455858986054e-19,1.613225662490764e-19,1.6128062560708055e-19,1.6123871081447884e-19,1.6119682187127127e-19,1.6115497170215491e-19,1.611131473824327e-19,1.610713618368017e-19,1.6102960214056485e-19,1.609878812184192e-19,1.609461861456677e-19,1.6090452984700741e-19,1.6086289939774127e-19,1.6082130772256634e-19,1.6077975482148262e-19,1.6073821484509597e-19,1.606967265674976e-19,1.6065525121459632e-19,1.606138275604833e-19,1.6057242975576444e-19,1.605310707251368e-19,1.604897246192062e-19,1.6044841728736685e-19,1.604071487296187e-19,1.6036590602126468e-19,1.6032470208700188e-19,1.6028352400213323e-19,1.6024237176665871e-19,1.6020124538057834e-19,1.6016017069328626e-19,1.6011912185538831e-19,1.600780988668845e-19,1.6003711465247192e-19,1.5999615628745348e-19,1.5995522377182917e-19,1.5991434295499315e-19,1.598734750628542e-19,1.5983264594480647e-19,1.5979185560084995e-19,1.597510781815905e-19,1.5971035246111934e-19,1.5966963966534524e-19,1.5962896564366236e-19,1.5958831747137362e-19,1.595477080731761e-19,1.5950712452437271e-19,1.5946656682496347e-19,1.5942604789964545e-19,1.5938556774841863e-19,1.593451005218889e-19,1.5930467206945036e-19,1.5926428239110304e-19,1.592239056374528e-19,1.5918358058259084e-19,1.5914326845242595e-19,1.5910299509635227e-19,1.5906276051436981e-19,1.590225517817815e-19,1.5898236889858732e-19,1.589421989400902e-19,1.5890209360507846e-19,1.5886200119476378e-19,1.5882193463384324e-19,1.5878189392231685e-19,1.5874190490957874e-19,1.5870194174623477e-19,1.5866199150758787e-19,1.5862208004303219e-19,1.5858220735256772e-19,1.5854234758680032e-19,1.585025395198212e-19,1.5846274437753916e-19,1.5842298800934833e-19,1.5838325749055164e-19,1.583435528211491e-19,1.5830388692583777e-19,1.5826424687992058e-19,1.5822463268339753e-19,1.581850572609657e-19,1.58145507687928e-19,1.5810598396428445e-19,1.5806648609003505e-19,1.5802702698987685e-19,1.579875937391128e-19,1.5794819926243996e-19,1.579088177104642e-19,1.5786947493257964e-19,1.5783015800408923e-19,1.5779087984969003e-19,1.577516146199879e-19,1.57712388164377e-19,1.576732004828573e-19,1.5763402572603467e-19,1.5759487681860618e-19,1.575557666852689e-19,1.5751669532602285e-19,1.5747763689147386e-19,1.5743861723101608e-19,1.5739961049525538e-19,1.5736065545828296e-19,1.5732171334600761e-19,1.5728281000782348e-19,1.5724394544373056e-19,1.5720508087963764e-19,1.57166268014333e-19,1.5712746807372544e-19,1.5708870690720908e-19,1.5704997159008687e-19,1.5701127504705588e-19,1.5697259142872195e-19,1.5693393365978217e-19,1.568953146649336e-19,1.5685673444417624e-19,1.5681816714811596e-19,1.5677962570144982e-19,1.5674112302887489e-19,1.567026462056941e-19,1.5666419523190746e-19,1.5662577010751495e-19,1.565873708325166e-19,1.5654901033160945e-19,1.5651067568009644e-19,1.5647236687797758e-19,1.5643408392525286e-19,1.5639582682192228e-19,1.5635760849268292e-19,1.563194160128377e-19,1.5628123645768955e-19,1.5624310860132968e-19,1.5620498074496981e-19,1.561669175120953e-19,1.5612884135452372e-19,1.5609081689574042e-19,1.5605281828635127e-19,1.5601484552635626e-19,1.5597689861575539e-19,1.5593897755454866e-19,1.5590109526743314e-19,1.5586323882971177e-19,1.5582539531668747e-19,1.5578759057775438e-19,1.5574981168821544e-19,1.5571204572337356e-19,1.556743185326229e-19,1.5563663011596346e-19,1.5559895462400108e-19,1.5556131790612992e-19,1.5552369411295583e-19,1.5548610909387295e-19,1.554485499241842e-19,1.5541101660388962e-19,1.553734962082921e-19,1.5533602751148286e-19,1.552985717393707e-19,1.5526114181665267e-19,1.5522373774332878e-19,1.5518638536879319e-19,1.551490329942576e-19,1.5511170646911613e-19,1.5507443164276296e-19,1.550371568164098e-19,1.549999336888449e-19,1.5496269763658295e-19,1.5492552620780635e-19,1.5488838062842389e-19,1.548512479737385e-19,1.5481412824375018e-19,1.5477706021255015e-19,1.5474000510604719e-19,1.5470298877363544e-19,1.5466598536592076e-19,1.546290207322973e-19,1.545920690233709e-19,1.5455515608853573e-19,1.545182690030947e-19,1.5448139484235073e-19,1.5444455945569797e-19,1.5440774991843936e-19,1.543709662305749e-19,1.5433420839210457e-19,1.5429746347833132e-19,1.5426077026334635e-19,1.5422408997305845e-19,1.541874355321647e-19,1.54150794015968e-19,1.541142041985596e-19,1.5407762730584828e-19,1.540410762625311e-19,1.5400453814391098e-19,1.5396805172407915e-19,1.5393159115364146e-19,1.5389513058320377e-19,1.538587087868573e-19,1.5382232576460203e-19,1.5378594274234677e-19,1.5374959849418272e-19,1.5371329302010988e-19,1.5367698754603705e-19,1.536407337707525e-19,1.5360449292016502e-19,1.5356827791897168e-19,1.5353208876717249e-19,1.5349591254007036e-19,1.5345978801175652e-19,1.5342367640813976e-19,1.5338759065391713e-19,1.5335153074908865e-19,1.533154966936543e-19,1.5327947556291703e-19,1.532434802815739e-19,1.5320753669901906e-19,1.5317159311646422e-19,1.5313567538330352e-19,1.530998093489311e-19,1.5306394331455869e-19,1.5302810312958041e-19,1.5299230171869335e-19,1.5295652615720043e-19,1.5292076352040459e-19,1.5288502673300288e-19,1.5284931579499532e-19,1.528136307063819e-19,1.5277797146716262e-19,1.5274233807733748e-19,1.5270674346160356e-19,1.5267114884586964e-19,1.5263559300422693e-19,1.526000500872813e-19,1.5256455886912394e-19,1.5252906765096659e-19,1.5249360228220337e-19,1.5245817568753138e-19,1.5242277494225352e-19,1.5238737419697567e-19,1.5235201222578902e-19,1.5231667610399652e-19,1.5228136583159817e-19,1.5224608140859395e-19,1.522108099102868e-19,1.5217557718607088e-19,1.5214035738655202e-19,1.5210517636112437e-19,1.520700082603938e-19,1.5203487893375444e-19,1.5199974960711507e-19,1.51964671979264e-19,1.5192959435141292e-19,1.5189455549765306e-19,1.5185952956859026e-19,1.5182452948892161e-19,1.5178956818334418e-19,1.5175463272716088e-19,1.517196972709776e-19,1.516848005888855e-19,1.5164992975618757e-19,1.516150718481867e-19,1.5158025271427705e-19,1.5154545942976154e-19,1.5151066614524603e-19,1.5147591163482173e-19,1.5144118297379157e-19,1.5140649308685263e-19,1.5137180319991369e-19,1.5133713916236889e-19,1.5130250097421823e-19,1.5126790156015878e-19,1.5123330214609934e-19,1.511987415061311e-19,1.5116420671555702e-19,1.5112968484968e-19,1.5109518883319713e-19,1.510607186661084e-19,1.5102628727311087e-19,1.5099185588011335e-19,1.5095746326120705e-19,1.509230835669978e-19,1.508887426468798e-19,1.5085440172676177e-19,1.5082008665603789e-19,1.507858232841023e-19,1.507515599121667e-19,1.5071732238962525e-19,1.5068311071647793e-19,1.5064892489272477e-19,1.5061476491836574e-19,1.5058063079340086e-19,1.5054649666843597e-19,1.505124013175623e-19,1.5047834474077985e-19,1.504442881639974e-19,1.5041027036130615e-19,1.503762525586149e-19,1.5034227353001487e-19,1.5030832035080899e-19,1.5027439302099724e-19,1.5024047861588257e-19,1.5020659006016204e-19,1.5017272735383565e-19,1.501388904969034e-19,1.5010506656466822e-19,1.500712684818272e-19,1.500374962483803e-19,1.5000374986432755e-19,1.4997001640497187e-19,1.4993630879501033e-19,1.4990263995914e-19,1.498689711232697e-19,1.498353281367935e-19,1.4980172392440854e-19,1.4976813263672065e-19,1.497345671984269e-19,1.4970100176013314e-19,1.4966748802062767e-19,1.4963398720581927e-19,1.4960049931570795e-19,1.4956705019968783e-19,1.4953362693306186e-19,1.4950021659113296e-19,1.4946681917390113e-19,1.4943344760606345e-19,1.4940011481231698e-19,1.493667820185705e-19,1.4933348799891524e-19,1.4930020690395705e-19,1.4926696458309008e-19,1.492337222622231e-19,1.4920050579075027e-19,1.4916731516867158e-19,1.4913415039598703e-19,1.4910101147269663e-19,1.490678854741033e-19,1.490347853249041e-19,1.4900169810040198e-19,1.4896864964999107e-19,1.4893561412427724e-19,1.4890260444795754e-19,1.4886960769633492e-19,1.4883663679410644e-19,1.4880370466596917e-19,1.487707725378319e-19,1.4873786625908878e-19,1.487049858297398e-19,1.4867213124978496e-19,1.4863928959452719e-19,1.4860647378866356e-19,1.4857368383219407e-19,1.4854091972511873e-19,1.485081556180434e-19,1.4847543028505926e-19,1.4844273080146927e-19,1.4841003131787929e-19,1.4837737060838051e-19,1.483447228235788e-19,1.4831210088817125e-19,1.482795177268549e-19,1.4824693456553856e-19,1.4821437725361635e-19,1.4818183286639122e-19,1.481493272532573e-19,1.4811682164012338e-19,1.4808436772577774e-19,1.480519138114321e-19,1.4801948574648062e-19,1.479870706062262e-19,1.4795468131536592e-19,1.4792231787389978e-19,1.4788998028182778e-19,1.4785766853914993e-19,1.4782535679647208e-19,1.4779308382788544e-19,1.477608108592988e-19,1.4772858958950044e-19,1.476963683197021e-19,1.4766417289929788e-19,1.4763199040359074e-19,1.475998466819748e-19,1.4756771588505595e-19,1.4753559801283417e-19,1.4750350599000652e-19,1.4747143981657302e-19,1.474393865678366e-19,1.474073591684943e-19,1.4737535761854616e-19,1.4734336899329509e-19,1.4731140621743815e-19,1.472794563662783e-19,1.4724754528920965e-19,1.4721564713683807e-19,1.471837489844665e-19,1.4715188960618613e-19,1.471200560772999e-19,1.4708823547311076e-19,1.4705642779361868e-19,1.4702465888821782e-19,1.4699288998281695e-19,1.469611598515073e-19,1.4692944264489472e-19,1.4689775128767628e-19,1.4686607285515492e-19,1.4683440734733062e-19,1.4680278061359754e-19,1.4677116680456153e-19,1.467395659202226e-19,1.467079908852778e-19,1.4667644169972714e-19,1.4664490543887355e-19,1.466133950274141e-19,1.4658189754065174e-19,1.4655043882798058e-19,1.4651898011530942e-19,1.4648753432733534e-19,1.4645614023814954e-19,1.4642474614896373e-19,1.46393364984475e-19,1.4636202259407749e-19,1.4633069312837704e-19,1.4629938951207074e-19,1.4626808589576443e-19,1.4623680812885227e-19,1.4620556913603132e-19,1.4617434306790745e-19,1.4614312992448064e-19,1.4611194263044798e-19,1.4608076826111239e-19,1.4604961974117094e-19,1.4601847122122949e-19,1.4598737440007632e-19,1.4595629050362023e-19,1.4592520660716413e-19,1.4589416148479925e-19,1.4586312928713144e-19,1.4583212293885778e-19,1.458011165905841e-19,1.4577016194109872e-19,1.4573920729161334e-19,1.4570826556682503e-19,1.4567736261612793e-19,1.456464725901279e-19,1.4561558256412788e-19,1.4558473131221906e-19,1.4555389298500732e-19,1.455230934318868e-19,1.4549229387876626e-19,1.4546152017503988e-19,1.4543075939601056e-19,1.4540002446637539e-19,1.4536930246143728e-19,1.4533860630589332e-19,1.453079359997435e-19,1.452772656935937e-19,1.4524662123683801e-19,1.4521601555417355e-19,1.451854098715091e-19,1.4515483003823877e-19,1.4512426312966552e-19,1.4509372207048642e-19,1.4506320686070145e-19,1.4503269165091649e-19,1.4500220229052567e-19,1.4497175170422606e-19,1.4494130111792645e-19,1.449108634563239e-19,1.4488046456881259e-19,1.4485007860599834e-19,1.4481970556788115e-19,1.4478934545446104e-19,1.4475902411513215e-19,1.4472871570050032e-19,1.446984072858685e-19,1.4466813764532788e-19,1.4463788092948434e-19,1.4460765006303494e-19,1.4457741919658554e-19,1.4454722710422736e-19,1.4451704793656624e-19,1.4448689461829927e-19,1.4445675422472937e-19,1.4442662675585654e-19,1.4439652513637785e-19,1.4436642351689917e-19,1.443363606715117e-19,1.4430632367551836e-19,1.4427628667952503e-19,1.4424627553292584e-19,1.4421627731102372e-19,1.4418631786321282e-19,1.441563584154019e-19,1.4412641189228808e-19,1.4409650414326546e-19,1.440666093189399e-19,1.4403672741931143e-19,1.4400685844438002e-19,1.4397701531884276e-19,1.4394718511800256e-19,1.439173807665565e-19,1.438876022645046e-19,1.4385783668714977e-19,1.43828084034492e-19,1.437983443065313e-19,1.4376863042796475e-19,1.4373894239879234e-19,1.43709267294317e-19,1.4367960511453873e-19,1.436499687841546e-19,1.4362034537846755e-19,1.4359073489747756e-19,1.4356115026588172e-19,1.4353159148368002e-19,1.435020456261754e-19,1.4347251269336784e-19,1.4344300560995442e-19,1.4341351145123808e-19,1.433840302172188e-19,1.433545619078966e-19,1.4332514529736269e-19,1.432957157621317e-19,1.4326631207629485e-19,1.4323692131515508e-19,1.4320756932810652e-19,1.4317821734105795e-19,1.4314887827870646e-19,1.4311957799044619e-19,1.4309026477748884e-19,1.4306100326331978e-19,1.4303174174915071e-19,1.430025060843758e-19,1.4297328334429794e-19,1.429440606042201e-19,1.4291487663823346e-19,1.428857055969439e-19,1.4285656040504847e-19,1.4282742813785012e-19,1.427983217200459e-19,1.427692153022417e-19,1.4274012180913456e-19,1.4271106709011863e-19,1.4268202529579978e-19,1.42652996426178e-19,1.4262399340595036e-19,1.4259499038572271e-19,1.4256602613958629e-19,1.4253707481814693e-19,1.4250812349670758e-19,1.4247921094935943e-19,1.4245031132670836e-19,1.424214117040573e-19,1.4239253793080036e-19,1.4236370293163465e-19,1.4233486793246893e-19,1.4230605878269736e-19,1.4227724963292578e-19,1.4224847925724542e-19,1.4221970888156506e-19,1.4219096435527885e-19,1.421622327536897e-19,1.4213351407679762e-19,1.4210483417399676e-19,1.4207614134649883e-19,1.4204750021778918e-19,1.4201885908907953e-19,1.4199023088506695e-19,1.4196161560575145e-19,1.4193303910052715e-19,1.4190446259530286e-19,1.4187589901477564e-19,1.4184736128364256e-19,1.4181884940190362e-19,1.4179033752016469e-19,1.417618514878199e-19,1.4173339130486924e-19,1.4170493112191859e-19,1.4167649678836208e-19,1.4164807537950264e-19,1.4161967982003734e-19,1.4159129718526911e-19,1.4156292747519796e-19,1.4153458361452095e-19,1.41506252678541e-19,1.4147793466725814e-19,1.4144962958067234e-19,1.4142136326817775e-19,1.413930840309861e-19,1.4136484356788565e-19,1.413366031047852e-19,1.4130840141577598e-19,1.4128019972676675e-19,1.4125202388715166e-19,1.4122386097223364e-19,1.411957109820127e-19,1.411675868411859e-19,1.4113947562505616e-19,1.411113773336235e-19,1.4108330489158499e-19,1.4105523244954647e-19,1.410271858569021e-19,1.4099916511365186e-19,1.409711572950987e-19,1.4094314947654553e-19,1.409151675073865e-19,1.4088721138762163e-19,1.4085926819255383e-19,1.408313379221831e-19,1.408034335012065e-19,1.407755290802299e-19,1.4074765050864745e-19,1.4071978486176207e-19,1.4069194506427083e-19,1.4066411819147667e-19,1.406362913186825e-19,1.4060849029528248e-19,1.405807151212766e-19,1.4055295287196778e-19,1.4052521647205311e-19,1.4049748007213845e-19,1.4046976952161792e-19,1.4044207189579446e-19,1.4041438719466808e-19,1.4038672834293584e-19,1.403590694912036e-19,1.403314364888655e-19,1.4030382933592154e-19,1.4027622218297758e-19,1.4024864087942777e-19,1.4022107250057502e-19,1.4019352997111642e-19,1.4016598744165782e-19,1.401384578368963e-19,1.401109540815289e-19,1.4008348910025273e-19,1.4005601119427948e-19,1.4002855913770038e-19,1.4000112000581834e-19,1.3997369379863338e-19,1.3994629344084256e-19,1.3991890600774882e-19,1.3989153149935214e-19,1.3986416991565253e-19,1.3983683418134707e-19,1.398094984470416e-19,1.3978220148682736e-19,1.397549045266131e-19,1.3972762049109593e-19,1.397003623049729e-19,1.3967311704354693e-19,1.396458976315151e-19,1.3961867821948328e-19,1.395914846568456e-19,1.39564304018905e-19,1.3953712338096438e-19,1.3950998151711498e-19,1.3948285257796266e-19,1.3945572363881033e-19,1.3942862054905215e-19,1.3940153038399104e-19,1.3937446606832407e-19,1.3934741467735417e-19,1.3932037621108135e-19,1.392933506695056e-19,1.392663380526269e-19,1.3923935128514236e-19,1.392123774423549e-19,1.391854165242645e-19,1.3915846853087116e-19,1.391315334621749e-19,1.3910462424287279e-19,1.3907772794826774e-19,1.3905084457835977e-19,1.3902397413314887e-19,1.389971295373321e-19,1.3897029786621242e-19,1.3894346619509273e-19,1.3891666037336718e-19,1.388898674763387e-19,1.3886310042870437e-19,1.3883633338107004e-19,1.3880959218282985e-19,1.387828768339838e-19,1.3875616148513775e-19,1.3872945906098878e-19,1.3870278248623394e-19,1.3867611883617618e-19,1.3864945518611841e-19,1.386228173854548e-19,1.3859621835888238e-19,1.385696064076129e-19,1.385430073810405e-19,1.3851643420386223e-19,1.384898868760781e-19,1.3846333954829398e-19,1.38436818069904e-19,1.3841029659151402e-19,1.3838380096251818e-19,1.383573182582194e-19,1.3833084847861771e-19,1.3830440454841016e-19,1.382779606182026e-19,1.3825152961269212e-19,1.3822513738127285e-19,1.3819874514985358e-19,1.3817236584313138e-19,1.3814599946110626e-19,1.3811965892847527e-19,1.3809333132054136e-19,1.3806701663730451e-19,1.3804070195406767e-19,1.3801442604492204e-19,1.379881501357764e-19,1.3796190007602492e-19,1.3793565001627343e-19,1.379094258059161e-19,1.3788322744495289e-19,1.3785702908398968e-19,1.3783084364772355e-19,1.3780468406085156e-19,1.3777852447397957e-19,1.3775239073650173e-19,1.3772626992372095e-19,1.3770016203563724e-19,1.376740670722506e-19,1.3764798503356105e-19,1.3762192884426563e-19,1.3759588557966728e-19,1.37569855239766e-19,1.375438378245618e-19,1.3751782040935759e-19,1.374918417682446e-19,1.374658631271316e-19,1.3743991033541275e-19,1.374139575436939e-19,1.373880306013692e-19,1.3736211658374155e-19,1.3733621549081098e-19,1.3731034024727456e-19,1.3728445207904106e-19,1.3725861560959585e-19,1.3723276621545357e-19,1.3720694267070543e-19,1.371811191259573e-19,1.371553214306033e-19,1.3712954958464344e-19,1.371037648139865e-19,1.370780188174208e-19,1.3705228574555216e-19,1.3702655267368351e-19,1.3700083252651194e-19,1.3697515115343159e-19,1.3694946978035123e-19,1.3692380133196794e-19,1.3689814580828173e-19,1.3687251613398966e-19,1.3684688645969758e-19,1.3682126971010258e-19,1.3679566588520465e-19,1.3677008790970086e-19,1.3674453578359122e-19,1.367189707327845e-19,1.3669343153137193e-19,1.366679181793535e-19,1.3664240482733506e-19,1.366169044000137e-19,1.3659142982208648e-19,1.3656595524415926e-19,1.3654050651562618e-19,1.3651507071179018e-19,1.3648964783265124e-19,1.3646423787820938e-19,1.3643882792376752e-19,1.3641345674341687e-19,1.3638808556306622e-19,1.3636272730741264e-19,1.363373949011532e-19,1.3631206249489377e-19,1.3628675593802847e-19,1.3626146230586025e-19,1.3623616867369203e-19,1.3621091381561502e-19,1.3618564603284094e-19,1.3616041702415807e-19,1.361351880154752e-19,1.361099719314894e-19,1.3608478169689775e-19,1.360595914623061e-19,1.3603442707710859e-19,1.3600926269191107e-19,1.359841241561077e-19,1.359589985450014e-19,1.359338729338951e-19,1.3590878609688002e-19,1.3588369925986494e-19,1.3585862534754692e-19,1.358335514352289e-19,1.358085162970021e-19,1.357834811587753e-19,1.3575847186994265e-19,1.3573346258111e-19,1.357084662169744e-19,1.356834827775359e-19,1.356585381121886e-19,1.3563358052214422e-19,1.3560864878149399e-19,1.3558372996554083e-19,1.3555882407428474e-19,1.3553391818302865e-19,1.3550905106586377e-19,1.354841839486989e-19,1.354593297562311e-19,1.3543448848846036e-19,1.354096601453867e-19,1.353848447270101e-19,1.3536005515802766e-19,1.353352655890452e-19,1.353105018694569e-19,1.352857381498686e-19,1.3526100027967443e-19,1.3523626240948027e-19,1.3521155038868025e-19,1.351868512925773e-19,1.3516216512117142e-19,1.3513747894976554e-19,1.3511283155245087e-19,1.3508817123043913e-19,1.3506353675782154e-19,1.3503892813459809e-19,1.3501430658667756e-19,1.3498971088815118e-19,1.3496512811432187e-19,1.349405711898867e-19,1.3491600134075446e-19,1.3489147026571344e-19,1.3486692626597534e-19,1.3484242104032846e-19,1.3481791581468158e-19,1.3479343643842883e-19,1.3476896998687316e-19,1.347445035353175e-19,1.347200500084589e-19,1.3469562233099444e-19,1.3467119465352998e-19,1.3464679282545967e-19,1.3462239099738935e-19,1.3459801501871318e-19,1.34573639040037e-19,1.3454928891075498e-19,1.3452493878147295e-19,1.3450061450158506e-19,1.3447630314639425e-19,1.344520047159005e-19,1.3442770628540676e-19,1.3440343370430715e-19,1.3437917404790462e-19,1.3435492731619916e-19,1.343306805844937e-19,1.3430645970218238e-19,1.3428225174456813e-19,1.3425804378695389e-19,1.3423387460343085e-19,1.3420969249521075e-19,1.3418553623638479e-19,1.341613929022559e-19,1.3413726249282407e-19,1.3411314500808932e-19,1.3408904044805165e-19,1.3406494881271104e-19,1.340408701020675e-19,1.3401680431612104e-19,1.3399273853017457e-19,1.3396869859362225e-19,1.3394468450646407e-19,1.3392065749460882e-19,1.338966563321477e-19,1.3387266809438367e-19,1.338486927813167e-19,1.3382471746824974e-19,1.3380076800457692e-19,1.3377684439029823e-19,1.3375292077601955e-19,1.3372901008643794e-19,1.337051123215534e-19,1.3368121455666886e-19,1.3365734264117846e-19,1.3363348365038514e-19,1.3360963758428888e-19,1.335858044428897e-19,1.3356198422618759e-19,1.3353816400948547e-19,1.335143696421775e-19,1.334905881995666e-19,1.334668067569557e-19,1.3344305116373895e-19,1.3341930849521926e-19,1.3339557875139664e-19,1.3337184900757403e-19,1.3334814511314556e-19,1.3332444121871708e-19,1.3330076317368275e-19,1.332770980533455e-19,1.332534458577053e-19,1.3322979366206512e-19,1.3320616731581907e-19,1.3318254096957303e-19,1.3315894047272112e-19,1.3313533997586922e-19,1.3311175240371439e-19,1.3308817775625663e-19,1.33064628958193e-19,1.3304108016012939e-19,1.3301754428676284e-19,1.3299403426279043e-19,1.3297052423881803e-19,1.329470271395427e-19,1.3292354296496443e-19,1.3290007171508324e-19,1.3287661338989912e-19,1.3285316798941207e-19,1.328297355136221e-19,1.3280631596252918e-19,1.3278290933613334e-19,1.327595027097375e-19,1.3273613485743289e-19,1.327127540804312e-19,1.3268939915282364e-19,1.3266605714991316e-19,1.3264271514700268e-19,1.3261938606878927e-19,1.3259608283997e-19,1.325727925358478e-19,1.325495022317256e-19,1.3252622485230048e-19,1.325029733222695e-19,1.3247972179223852e-19,1.324564831869046e-19,1.3243325750626777e-19,1.3241005767502507e-19,1.3238685784378237e-19,1.3236367093723674e-19,1.3234048403069112e-19,1.323173358982367e-19,1.3229417484108522e-19,1.3227103963332787e-19,1.3224790442557053e-19,1.3222479506720733e-19,1.322016986335412e-19,1.3217860219987507e-19,1.3215553161560309e-19,1.321324610313311e-19,1.3210941629645326e-19,1.3208635863687834e-19,1.3206333975139464e-19,1.3204032086591094e-19,1.320173149051243e-19,1.3199432186903474e-19,1.3197134175764226e-19,1.3194837457094684e-19,1.3192540738425142e-19,1.3190246604695014e-19,1.3187953763434594e-19,1.3185660922174174e-19,1.318336937338346e-19,1.3181080409532161e-19,1.3178791445680862e-19,1.317650377429927e-19,1.3174217395387385e-19,1.3171933601414915e-19,1.3169649807442444e-19,1.3167366013469973e-19,1.3165084804436917e-19,1.3162804887873568e-19,1.3160524971310218e-19,1.315824893215599e-19,1.3155971600532056e-19,1.3153696853847535e-19,1.3151420814693307e-19,1.31491486529482e-19,1.3146876491203094e-19,1.3144605621927694e-19,1.3142336045122002e-19,1.3140067760786016e-19,1.3137800768919738e-19,1.313553377705346e-19,1.3133269370126596e-19,1.313100625566944e-19,1.3128743141212283e-19,1.3126481319224833e-19,1.312422078970709e-19,1.3121962845128762e-19,1.3119704900550434e-19,1.3117446955972105e-19,1.3115191596333191e-19,1.3112937529163984e-19,1.3110683461994777e-19,1.3108431979764984e-19,1.3106180497535192e-19,1.3103930307775106e-19,1.3101682702954435e-19,1.3099433805664056e-19,1.30971887857828e-19,1.3094943765901542e-19,1.3092698746020284e-19,1.3090456311078441e-19,1.3088215168606306e-19,1.308597402613417e-19,1.3083735468601448e-19,1.3081496911068727e-19,1.3079259646005712e-19,1.3077023673412405e-19,1.3074788993288804e-19,1.3072554313165204e-19,1.3070323510450725e-19,1.306809141526654e-19,1.3065861905021767e-19,1.3063632394776995e-19,1.306140417700193e-19,1.3059177251696573e-19,1.3056951618860923e-19,1.305472727849498e-19,1.3052502938129036e-19,1.3050281182702507e-19,1.3048060719745685e-19,1.3045840256788863e-19,1.3043621086301748e-19,1.304140320828434e-19,1.303918662273664e-19,1.3036971329658646e-19,1.303475732905036e-19,1.3032543328442073e-19,1.30303319127732e-19,1.3028120497104328e-19,1.3025910373905163e-19,1.3023702835645412e-19,1.3021495297385661e-19,1.301928775912591e-19,1.3017082805805574e-19,1.3014879144954944e-19,1.3012675484104315e-19,1.3010473115723392e-19,1.3008272039812177e-19,1.3006072256370669e-19,1.3003873765398868e-19,1.3001676566896774e-19,1.299947936839468e-19,1.2997284754832e-19,1.2995091433739027e-19,1.2992896820176347e-19,1.299070608402279e-19,1.298851534786923e-19,1.2986324611715672e-19,1.2984136460501528e-19,1.2981948309287384e-19,1.2979762743012654e-19,1.2977577176737924e-19,1.29753929029329e-19,1.2973209921597585e-19,1.297102694026227e-19,1.2968847836336075e-19,1.2966667439940174e-19,1.296448833601398e-19,1.2962310524557492e-19,1.2960134005570712e-19,1.295795877905364e-19,1.2955784845006273e-19,1.2953610910958907e-19,1.2951439561850955e-19,1.2949268212743004e-19,1.294709815610476e-19,1.2944929391936222e-19,1.2942761920237391e-19,1.294059444853856e-19,1.2938429561779145e-19,1.2936264675019729e-19,1.293410108073002e-19,1.2931938778910018e-19,1.2929777769559723e-19,1.2927616760209428e-19,1.2925458335798548e-19,1.2923299911387667e-19,1.2921142779446494e-19,1.2918986939975027e-19,1.2916832392973268e-19,1.2914679138441216e-19,1.2912525883909164e-19,1.291037392184682e-19,1.2908224544723888e-19,1.2906075167600957e-19,1.2903927082947734e-19,1.290177899829451e-19,1.28996334985807e-19,1.2897487998866891e-19,1.289534379162279e-19,1.2893200876848394e-19,1.2891059254543706e-19,1.2888917632239018e-19,1.2886778594873744e-19,1.288463955750847e-19,1.2882501812612903e-19,1.2880365360187044e-19,1.287823020023089e-19,1.2876095040274739e-19,1.2873962465258e-19,1.2871829890241262e-19,1.286969860769423e-19,1.2867568617616907e-19,1.286543992000929e-19,1.2863311222401673e-19,1.2861183817263763e-19,1.285905770459556e-19,1.2856932884397065e-19,1.2854809356668276e-19,1.2852685828939488e-19,1.2850564886150114e-19,1.284844394336074e-19,1.2846324293041072e-19,1.2844204642721405e-19,1.2842087577341152e-19,1.28399705119609e-19,1.283785603152006e-19,1.2835740258609515e-19,1.283362836310809e-19,1.2831516467606666e-19,1.2829404572105242e-19,1.2827295261543231e-19,1.2825184658511514e-19,1.282307664041921e-19,1.2820969914796615e-19,1.281886318917402e-19,1.281675775602113e-19,1.2814653615337948e-19,1.2812550767124474e-19,1.2810449211380706e-19,1.2808348948106646e-19,1.2806248684832585e-19,1.2804149714028232e-19,1.2802052035693586e-19,1.279995435735894e-19,1.2797859263963708e-19,1.2795764170568476e-19,1.279367036964295e-19,1.2791577861187133e-19,1.2789486645201022e-19,1.2787395429214912e-19,1.2785305505698508e-19,1.2783216874651812e-19,1.278113082854453e-19,1.277904348996754e-19,1.2776957443860258e-19,1.2774872690222683e-19,1.2772790521524522e-19,1.2770707060356654e-19,1.2768624891658494e-19,1.2766545307899747e-19,1.2764465724141e-19,1.276238743285196e-19,1.2760310434032629e-19,1.2758233435213296e-19,1.275615772886367e-19,1.275408460745346e-19,1.2752010193573542e-19,1.2749938364633038e-19,1.274786782816224e-19,1.2745797291691444e-19,1.2743726755220647e-19,1.2741660096158972e-19,1.273959214462759e-19,1.2737525485565914e-19,1.2735460118973946e-19,1.2733397337321392e-19,1.273133326319913e-19,1.2729270481546576e-19,1.2727210284833436e-19,1.2725150088120296e-19,1.2723089891407157e-19,1.272103227963343e-19,1.2718974667859705e-19,1.2716918348555687e-19,1.2714863321721375e-19,1.271280958735677e-19,1.2710755852992167e-19,1.270870341109727e-19,1.270665226167208e-19,1.2704602404716596e-19,1.2702552547761113e-19,1.2700503983275338e-19,1.2698456711259269e-19,1.2696410731712907e-19,1.2694364752166546e-19,1.269232006508989e-19,1.269027796295265e-19,1.2688234568345703e-19,1.268619375867817e-19,1.2684152949010637e-19,1.268211343181281e-19,1.2680075207084692e-19,1.267803827482628e-19,1.2676001342567868e-19,1.2673965702779164e-19,1.2671931355460166e-19,1.2669898300610875e-19,1.2667866538231292e-19,1.2665833483382002e-19,1.2663803013472125e-19,1.2661773836031956e-19,1.2659744658591787e-19,1.2657716773621325e-19,1.265569018112057e-19,1.2653664881089522e-19,1.2651639581058475e-19,1.264961686596684e-19,1.26475928584055e-19,1.2645571435783574e-19,1.2643551305631354e-19,1.2641531175479135e-19,1.2639511045326916e-19,1.2637494792583818e-19,1.2635477247371013e-19,1.2633460994627915e-19,1.2631446034354524e-19,1.262943236655084e-19,1.2627418698747156e-19,1.262540632341318e-19,1.262339524054891e-19,1.2621385450154348e-19,1.2619375659759785e-19,1.261736716183493e-19,1.2615359956379782e-19,1.261335404339434e-19,1.26113481304089e-19,1.2609343509893165e-19,1.2607340181847139e-19,1.2605336853801112e-19,1.26033361106945e-19,1.2601335367587886e-19,1.259933591695098e-19,1.2597336466314075e-19,1.2595339600616584e-19,1.2593342734919093e-19,1.2591345869221601e-19,1.2589351588463524e-19,1.2587357307705447e-19,1.2585364319417077e-19,1.2583371331128707e-19,1.2581379635310045e-19,1.2579390524430796e-19,1.2577401413551547e-19,1.25754123026723e-19,1.2573425776732464e-19,1.257143925079263e-19,1.2569452724852796e-19,1.2567468783852376e-19,1.2565484842851955e-19,1.2563502194321242e-19,1.2561520838260236e-19,1.255953948219923e-19,1.2557559418607932e-19,1.255558064748634e-19,1.2553603168834455e-19,1.255162569018257e-19,1.2549649504000393e-19,1.2547674610287923e-19,1.2545699716575453e-19,1.2543727407802396e-19,1.2541753806559633e-19,1.2539782790256284e-19,1.2537811773952935e-19,1.2535843342589e-19,1.2533873618755359e-19,1.2531905187391424e-19,1.2529939340966903e-19,1.2527973494542383e-19,1.2526007648117862e-19,1.2524044386632756e-19,1.252208112514765e-19,1.2520117863662543e-19,1.251815718711685e-19,1.251619651057116e-19,1.251423841896488e-19,1.2512279034888896e-19,1.2510320943282618e-19,1.2508364144146047e-19,1.2506408637479184e-19,1.2504454423282027e-19,1.2502498916615164e-19,1.2500545994887714e-19,1.249859565809968e-19,1.249664273637223e-19,1.2494692399584194e-19,1.2492743355265866e-19,1.2490795603417245e-19,1.2488847851568624e-19,1.2486900099720003e-19,1.2484954932810797e-19,1.248300976590159e-19,1.2481067183931798e-19,1.2479123309492298e-19,1.2477182019992213e-19,1.247523943802242e-19,1.2473299440992042e-19,1.247136073643137e-19,1.24694220318707e-19,1.2467484619779735e-19,1.2465547207688771e-19,1.2463612380537222e-19,1.2461676260915965e-19,1.2459742726234122e-19,1.245780919155228e-19,1.245587824180985e-19,1.2453945999597715e-19,1.2452015049855287e-19,1.2450085392582565e-19,1.244815702777955e-19,1.2446229955446244e-19,1.2444302883112937e-19,1.2442378395719044e-19,1.2440452615855444e-19,1.243852812846155e-19,1.2436604933537365e-19,1.2434683031082887e-19,1.2432761128628408e-19,1.2430840518643636e-19,1.2428919908658865e-19,1.2427001883613507e-19,1.242508385856815e-19,1.24231671259925e-19,1.2421251685886557e-19,1.2419334953310907e-19,1.241742080567467e-19,1.2415507950508142e-19,1.241359638781132e-19,1.241168353264479e-19,1.2409773262417676e-19,1.2407862992190562e-19,1.2405954014433154e-19,1.2404045036675747e-19,1.2402138643857753e-19,1.240023225103976e-19,1.2398327150691474e-19,1.2396422050343188e-19,1.2394516949994901e-19,1.239261443458603e-19,1.2390713211646865e-19,1.23888119887077e-19,1.2386910765768535e-19,1.2385012127768784e-19,1.2383113489769034e-19,1.238121614423899e-19,1.2379320091178654e-19,1.2377424038118317e-19,1.237552798505798e-19,1.237363451693706e-19,1.2371741048816137e-19,1.2369848873164922e-19,1.2367956697513707e-19,1.2366065814332199e-19,1.2364177516090105e-19,1.2362286632908597e-19,1.236039962713621e-19,1.2358512621363824e-19,1.2356625615591437e-19,1.2354739902288758e-19,1.2352855481455785e-19,1.235097235309252e-19,1.2349089224729255e-19,1.2347207388835697e-19,1.2345325552942139e-19,1.2343446301987995e-19,1.2341565758564144e-19,1.233968650761e-19,1.233780984159527e-19,1.233593317558054e-19,1.233405650956581e-19,1.2332181136020788e-19,1.2330307054945473e-19,1.2328434266339864e-19,1.232656018526455e-19,1.2324688689128648e-19,1.2322818485462454e-19,1.232094828179626e-19,1.2319079370599772e-19,1.2317210459403285e-19,1.2315342840676506e-19,1.2313476514419433e-19,1.231161018816236e-19,1.2309746446844701e-19,1.2307881413057336e-19,1.2306017671739677e-19,1.2304155222891726e-19,1.2302294066513482e-19,1.2300432910135237e-19,1.22985730462267e-19,1.229671447478787e-19,1.229485590334904e-19,1.2292998624379917e-19,1.22911426378805e-19,1.2289286651381085e-19,1.2287431957351376e-19,1.2285578555791375e-19,1.2283725154231373e-19,1.2281873045141079e-19,1.2280020936050784e-19,1.2278170119430197e-19,1.2276320595279316e-19,1.2274471071128436e-19,1.2272622839447263e-19,1.2270775900235797e-19,1.226892896102433e-19,1.2267083314282572e-19,1.226523896001052e-19,1.2263394605738468e-19,1.226155283640583e-19,1.2259709774603486e-19,1.2257868005270848e-19,1.2256027528407918e-19,1.2254187051544987e-19,1.2252347867151764e-19,1.2250509975228248e-19,1.2248673375774439e-19,1.224683677632063e-19,1.2245001469336527e-19,1.2243166162352425e-19,1.224133214783803e-19,1.2239499425793343e-19,1.2237665411278948e-19,1.2235835274173674e-19,1.2234003844598694e-19,1.2232174999963127e-19,1.2230344862857854e-19,1.2228516018222287e-19,1.2226689758526135e-19,1.2224862206360275e-19,1.222303723913383e-19,1.2221212271907385e-19,1.221938730468094e-19,1.2217563629924202e-19,1.2215741247637171e-19,1.2213920157819847e-19,1.2212099068002524e-19,1.2210279270654907e-19,1.220845947330729e-19,1.220664096842938e-19,1.2204823756021178e-19,1.2203006543612976e-19,1.220119062367448e-19,1.2199374703735985e-19,1.2197560076267197e-19,1.2195748033737823e-19,1.2193934698738742e-19,1.2192122656209368e-19,1.2190310613679994e-19,1.2188501156090034e-19,1.2186690406030367e-19,1.2184882240910115e-19,1.2183074075789862e-19,1.2181267203139317e-19,1.217946033048877e-19,1.2177654750307933e-19,1.2175850462596801e-19,1.217404617488567e-19,1.2172243179644246e-19,1.2170440184402822e-19,1.2168639774100812e-19,1.2166838071329095e-19,1.2165038953496792e-19,1.2163238543194782e-19,1.2161440717832186e-19,1.215964289246959e-19,1.2157846359576702e-19,1.215605111915352e-19,1.215425587873034e-19,1.2152461930776865e-19,1.2150666690353683e-19,1.2148874034869916e-19,1.2147082671855856e-19,1.2145291308841796e-19,1.2143501238297443e-19,1.214171116775309e-19,1.2139922389678444e-19,1.2138134904073505e-19,1.2136347418468566e-19,1.2134561225333334e-19,1.2132775032198103e-19,1.2130990131532578e-19,1.212920652333676e-19,1.2127422915140943e-19,1.2125640599414833e-19,1.2123858283688722e-19,1.212207726043232e-19,1.2120297529645623e-19,1.2118517798858927e-19,1.2116739360541938e-19,1.2114962214694656e-19,1.2113185068847374e-19,1.2111407923000092e-19,1.2109633362092224e-19,1.2107858801184357e-19,1.210608424027649e-19,1.2104310971838329e-19,1.2102538995869875e-19,1.2100767019901422e-19,1.2098996336402675e-19,1.2097226945373636e-19,1.2095457554344597e-19,1.2093689455785265e-19,1.2091921357225933e-19,1.2090154551136308e-19,1.2088387745046683e-19,1.2086622231426765e-19,1.2084858010276554e-19,1.208309508159605e-19,1.208133086044584e-19,1.2079569224235043e-19,1.2077807588024247e-19,1.207604595181345e-19,1.2074286900542068e-19,1.2072526556800979e-19,1.207077009046901e-19,1.2069011039197628e-19,1.206725457286566e-19,1.2065498106533692e-19,1.206374293267143e-19,1.206198775880917e-19,1.2060233877416616e-19,1.205848128849377e-19,1.2056728699570923e-19,1.2054977403117783e-19,1.2053226106664644e-19,1.2051477395150918e-19,1.2049727391167486e-19,1.204797867965376e-19,1.2046231260609742e-19,1.204448513403543e-19,1.204273900746112e-19,1.2040992880886809e-19,1.2039248046782205e-19,1.2037504505147308e-19,1.203576096351241e-19,1.203401871434722e-19,1.2032277757651738e-19,1.2030536800956255e-19,1.2028795844260773e-19,1.2027056180034997e-19,1.2025317808278929e-19,1.202357943652286e-19,1.20218423572365e-19,1.2020106570419845e-19,1.201837078360319e-19,1.2016636289256243e-19,1.2014901794909296e-19,1.2013168593032056e-19,1.2011435391154816e-19,1.2009703481747283e-19,1.2007972864809457e-19,1.2006242247871632e-19,1.2004512923403513e-19,1.2002783598935394e-19,1.2001055566936983e-19,1.1999328827408278e-19,1.1997602087879574e-19,1.199587534835087e-19,1.199415119376158e-19,1.1992425746702582e-19,1.1990701592113292e-19,1.1988978729993708e-19,1.1987257160343832e-19,1.1985535590693957e-19,1.1983815313513788e-19,1.1982095036333619e-19,1.1980376051623157e-19,1.1978657066912695e-19,1.197693937467194e-19,1.1975222974900893e-19,1.1973506575129846e-19,1.1971791467828505e-19,1.1970076360527165e-19,1.1968362545695531e-19,1.1966648730863898e-19,1.1964936208501972e-19,1.1963224978609753e-19,1.1961513748717534e-19,1.1959802518825315e-19,1.1958092581402803e-19,1.1956385228919705e-19,1.19546765839669e-19,1.1952969231483802e-19,1.1951261879000705e-19,1.1949555818987314e-19,1.194785105144363e-19,1.1946146283899947e-19,1.194444280882597e-19,1.1942739333751994e-19,1.1941037151147725e-19,1.1939334968543456e-19,1.19376353708786e-19,1.1935934480744038e-19,1.1934234883079183e-19,1.1932536577884035e-19,1.1930838272688888e-19,1.1929141259963447e-19,1.1927444247238006e-19,1.1925748526982272e-19,1.1924054099196246e-19,1.192235967141022e-19,1.1920665243624192e-19,1.191897340077758e-19,1.191728026546126e-19,1.1915589715084355e-19,1.1913897872237743e-19,1.1912208614330545e-19,1.1910519356423347e-19,1.1908830098516149e-19,1.1907142133078658e-19,1.1905455460110874e-19,1.190376878714309e-19,1.1902083406645013e-19,1.1900398026146936e-19,1.1898713938118566e-19,1.1897029850090197e-19,1.1895347054531534e-19,1.1893665551442579e-19,1.1891984048353623e-19,1.1890303837734375e-19,1.1888623627115127e-19,1.1886944708965585e-19,1.1885264498346337e-19,1.1883586872666503e-19,1.1881910539456376e-19,1.188023420624625e-19,1.1878557873036122e-19,1.1876882832295702e-19,1.187520908402499e-19,1.1873535335754277e-19,1.187186287995327e-19,1.1870190424152265e-19,1.186851796835126e-19,1.186684680501996e-19,1.1865178226628077e-19,1.1863508355766485e-19,1.18618397773746e-19,1.1860171198982717e-19,1.185850391306054e-19,1.185683791960807e-19,1.18551719261556e-19,1.185350593270313e-19,1.1851842524190073e-19,1.1850179115677018e-19,1.1848515707163962e-19,1.1846852298650906e-19,1.1845191475077264e-19,1.1843530651503623e-19,1.184186982792998e-19,1.1840210296826046e-19,1.183855205819182e-19,1.1836893819557592e-19,1.1835235580923364e-19,1.1833578634758844e-19,1.183192298106403e-19,1.1830267327369218e-19,1.1828612966144112e-19,1.1826958604919006e-19,1.1825305536163607e-19,1.1823652467408208e-19,1.1822000691122516e-19,1.182035020730653e-19,1.1818699723490546e-19,1.1817049239674562e-19,1.1815400048328284e-19,1.1813752149451714e-19,1.1812104250575143e-19,1.1810456351698573e-19,1.1808811037761416e-19,1.1807164431354553e-19,1.1805519117417397e-19,1.1803875095949948e-19,1.1802232366952206e-19,1.1800589637954464e-19,1.1798946908956722e-19,1.1797305472428687e-19,1.1795664035900652e-19,1.1794023891842324e-19,1.1792383747783996e-19,1.1790744896195375e-19,1.1789107337076462e-19,1.1787469777957548e-19,1.1785833511308342e-19,1.1784197244659135e-19,1.1782562270479636e-19,1.178092600383043e-19,1.1779293614590344e-19,1.1777659932880552e-19,1.177602625117076e-19,1.1774393861930675e-19,1.1772762765160297e-19,1.177113166838992e-19,1.1769501864089248e-19,1.1767873352258284e-19,1.176624484042732e-19,1.1764616328596357e-19,1.17629891092351e-19,1.176136318234355e-19,1.1759735962982294e-19,1.1758111328560451e-19,1.175648669413861e-19,1.1754862059716766e-19,1.1753240010234338e-19,1.1751616668282203e-19,1.1749994618799775e-19,1.1748373861787054e-19,1.1746753104774333e-19,1.1745132347761611e-19,1.1743514175688305e-19,1.1741896003614998e-19,1.174027783154169e-19,1.1738659659468384e-19,1.1737044072334491e-19,1.1735427192730892e-19,1.1733811605597e-19,1.1732197310932814e-19,1.1730584308738335e-19,1.172897001407415e-19,1.1727358304349378e-19,1.1725746594624607e-19,1.1724134884899836e-19,1.1722524467644772e-19,1.1720915342859414e-19,1.1719306218074057e-19,1.17176970932887e-19,1.1716087968503343e-19,1.17144814286574e-19,1.1712874888811458e-19,1.1711269641435222e-19,1.1709664394058986e-19,1.170805914668275e-19,1.1706455191776222e-19,1.17048525293394e-19,1.1703248574432872e-19,1.1701647204465757e-19,1.1700045834498643e-19,1.1698445757001236e-19,1.1696845679503829e-19,1.1695246894476128e-19,1.169364681697872e-19,1.1692049324420728e-19,1.1690451831862735e-19,1.168885563177445e-19,1.1687258139216456e-19,1.1685663231597877e-19,1.1684068323979298e-19,1.1682474708830427e-19,1.1680881093681555e-19,1.167928877100239e-19,1.1677696448323226e-19,1.1676104125644061e-19,1.1674513095434604e-19,1.1672923357694854e-19,1.167133491242481e-19,1.166974517468506e-19,1.1668156729415017e-19,1.166656957661468e-19,1.1664982423814344e-19,1.1663396563483715e-19,1.1661810703153086e-19,1.1660226135292165e-19,1.1658641567431243e-19,1.165705699957032e-19,1.1655475016648813e-19,1.1653891741257598e-19,1.165230975833609e-19,1.165072906788429e-19,1.164914837743249e-19,1.1647568979450396e-19,1.1645989581468303e-19,1.164441018348621e-19,1.164283337044353e-19,1.1641255264931144e-19,1.1639678451888464e-19,1.1638102931315492e-19,1.163652741074252e-19,1.1634953182639255e-19,1.163337895453599e-19,1.1631806018902432e-19,1.1630231790799167e-19,1.1628660147635317e-19,1.1627088504471466e-19,1.1625518153777322e-19,1.1623946510613472e-19,1.1622377452389035e-19,1.1620808394164599e-19,1.161924062840987e-19,1.161767286265514e-19,1.161610509690041e-19,1.1614538623615388e-19,1.1612973442800073e-19,1.1611408261984758e-19,1.1609843081169442e-19,1.1608279192823834e-19,1.1606716596947933e-19,1.1605152708602325e-19,1.1603591405196132e-19,1.1602030101789938e-19,1.1600468798383744e-19,1.1598908787447257e-19,1.1597350068980478e-19,1.1595791350513698e-19,1.1594232632046918e-19,1.1592673913580139e-19,1.1591117780052773e-19,1.1589561646525408e-19,1.1588005512998043e-19,1.1586450671940384e-19,1.1584895830882726e-19,1.1583342282294775e-19,1.1581788733706824e-19,1.158023647758858e-19,1.1578684221470336e-19,1.1577133257821799e-19,1.1575582294173262e-19,1.1574032622994432e-19,1.1572482951815602e-19,1.1570933280636772e-19,1.1569386194397357e-19,1.1567837815688234e-19,1.1566290729448818e-19,1.156474493567911e-19,1.1563199141909402e-19,1.1561653348139693e-19,1.1560108846839692e-19,1.155856434553969e-19,1.1557022429179103e-19,1.155547922034881e-19,1.1553937303988222e-19,1.1552395387627635e-19,1.1550854763736755e-19,1.1549314139845875e-19,1.1547774808424702e-19,1.154623547700353e-19,1.1544697438052063e-19,1.1543160691570304e-19,1.1541622652618839e-19,1.154008590613708e-19,1.1538550452125028e-19,1.1537014998112977e-19,1.1535480836570632e-19,1.1533946675028288e-19,1.1532412513485944e-19,1.1530879644413306e-19,1.1529348067810376e-19,1.1527816491207446e-19,1.1526284914604516e-19,1.1524754630471292e-19,1.152322434633807e-19,1.1521695354674553e-19,1.1520166363011037e-19,1.1518638663817228e-19,1.1517112257093127e-19,1.1515585850369025e-19,1.1514059443644923e-19,1.1512533036920821e-19,1.1511007922666427e-19,1.150948410088174e-19,1.1507960279097052e-19,1.1506437749782071e-19,1.150491522046709e-19,1.150339269115211e-19,1.1501871454306837e-19,1.1500350217461564e-19,1.1498830273085998e-19,1.1497310328710432e-19,1.1495791676804572e-19,1.149427431736842e-19,1.1492755665462561e-19,1.149123830602641e-19,1.1489723531529672e-19,1.148820617209352e-19,1.1486691397596782e-19,1.1485176623100044e-19,1.1483663141073014e-19,1.1482148366576276e-19,1.1480636177018952e-19,1.147912398746163e-19,1.1477611797904305e-19,1.147610090081669e-19,1.147459129619878e-19,1.1473080399111163e-19,1.1471572086962961e-19,1.1470062482345052e-19,1.146855417019685e-19,1.1467047150518355e-19,1.146554013083986e-19,1.1464033111161365e-19,1.1462528676422284e-19,1.1461022949213496e-19,1.1459518514474415e-19,1.1458014079735334e-19,1.145651093746596e-19,1.1455007795196587e-19,1.145350594539692e-19,1.1452004095597254e-19,1.1450503538267294e-19,1.1449002980937335e-19,1.1447502423607375e-19,1.1446003158747123e-19,1.1444505186356578e-19,1.1443007213966032e-19,1.1441509241575487e-19,1.144001256165465e-19,1.1438517174203518e-19,1.143702049428268e-19,1.1435526399301256e-19,1.1434031011850125e-19,1.14325369168687e-19,1.1431044114356984e-19,1.1429551311845267e-19,1.142805850933355e-19,1.142656699929154e-19,1.1425075489249531e-19,1.1423585271677229e-19,1.1422095054104926e-19,1.142060612900233e-19,1.1419117203899735e-19,1.1417629571266847e-19,1.1416141938633959e-19,1.141465430600107e-19,1.1413169258307596e-19,1.1411682918144415e-19,1.141019787045094e-19,1.1408712822757467e-19,1.14072290675337e-19,1.1405745312309933e-19,1.1404262849555873e-19,1.1402780386801813e-19,1.140129921651746e-19,1.13998167537634e-19,1.1398336875948755e-19,1.139685699813411e-19,1.1395377120319463e-19,1.1393898534974525e-19,1.1392419949629586e-19,1.1390942656754355e-19,1.1389465363879123e-19,1.1387988071003892e-19,1.1386513363068075e-19,1.138503736266255e-19,1.1383562654726733e-19,1.1382087946790916e-19,1.1380614531324806e-19,1.1379141115858696e-19,1.1377668992862293e-19,1.137619686986589e-19,1.1374724746869487e-19,1.137325391634279e-19,1.1371784378285802e-19,1.1370314840228814e-19,1.1368845302171825e-19,1.1367377056584543e-19,1.1365908810997262e-19,1.1364441857879687e-19,1.1362974904762113e-19,1.1361507951644538e-19,1.136004229099667e-19,1.135857792281851e-19,1.135711355464035e-19,1.135564918646219e-19,1.1354186110753737e-19,1.1352723035045284e-19,1.135125995933683e-19,1.1349798176098084e-19,1.1348337685329045e-19,1.13468759020903e-19,1.1345416703790968e-19,1.1343956213021929e-19,1.1342498307192304e-19,1.134104040136268e-19,1.1339582495533055e-19,1.133812458970343e-19,1.1336667976343512e-19,1.1335211362983595e-19,1.1333756042093384e-19,1.133230201367288e-19,1.133084669278267e-19,1.1329392664362167e-19,1.132793992841137e-19,1.1326487192460574e-19,1.1325034456509778e-19,1.132358301302869e-19,1.13221315695476e-19,1.1320681418536218e-19,1.1319231267524836e-19,1.131778240898316e-19,1.1316333550441486e-19,1.131488469189981e-19,1.1313437125827843e-19,1.1311989559755875e-19,1.1310543286153615e-19,1.1309097012551354e-19,1.13076520314188e-19,1.1306207050286247e-19,1.1304762069153693e-19,1.1303318380490847e-19,1.1301874691828e-19,1.130043229563486e-19,1.1298989899441722e-19,1.1297547503248582e-19,1.129610639952515e-19,1.1294666588271425e-19,1.12932267770177e-19,1.1291786965763975e-19,1.1290348446979957e-19,1.128890992819594e-19,1.1287472701881628e-19,1.128603418309761e-19,1.1284598249253006e-19,1.1283162315408402e-19,1.1281726381563799e-19,1.1280291740188902e-19,1.1278857098814005e-19,1.1277423749908816e-19,1.127598910853392e-19,1.1274557052098437e-19,1.1273123703193247e-19,1.1271691646757765e-19,1.127026088279199e-19,1.1268830118826214e-19,1.1267400647330146e-19,1.1265971175834078e-19,1.126454170433801e-19,1.1263113525311648e-19,1.1261685346285287e-19,1.1260258459728633e-19,1.1258830280702272e-19,1.1257404686615325e-19,1.1255979092528379e-19,1.1254553498441432e-19,1.1253129196824192e-19,1.1251704895206952e-19,1.1250280593589712e-19,1.124885758444218e-19,1.1247435867764354e-19,1.124601415108653e-19,1.1244592434408703e-19,1.1243170717730878e-19,1.1241751585992467e-19,1.124032986931464e-19,1.1238912030045937e-19,1.1237492898307526e-19,1.1236073766569114e-19,1.123465592730041e-19,1.1233239380501413e-19,1.1231822833702416e-19,1.123040628690342e-19,1.122899103257413e-19,1.122757577824484e-19,1.1226161816385256e-19,1.1224747854525673e-19,1.122333389266609e-19,1.1221921223276215e-19,1.1220509846356046e-19,1.121909717696617e-19,1.1217685800046002e-19,1.121627571559554e-19,1.1214864338675372e-19,1.1213455546694617e-19,1.1212045462244156e-19,1.1210637962733109e-19,1.1209229170752354e-19,1.1207821671241307e-19,1.1206415464199967e-19,1.120500796468892e-19,1.120360175764758e-19,1.1202196843075946e-19,1.1200791928504313e-19,1.119938701393268e-19,1.1197983391830754e-19,1.1196579769728829e-19,1.119517744009661e-19,1.119377511046439e-19,1.1192372780832172e-19,1.1190973036139368e-19,1.1189571998976856e-19,1.1188170961814344e-19,1.118677121712154e-19,1.1185372764898442e-19,1.1183974312675345e-19,1.1182575860452247e-19,1.1181178700698857e-19,1.1179781540945466e-19,1.1178384381192076e-19,1.1176988513908393e-19,1.117559264662471e-19,1.1174198071810734e-19,1.1172803496996757e-19,1.1171410214652488e-19,1.117001693230822e-19,1.116862364996395e-19,1.1167231660089389e-19,1.1165839670214827e-19,1.1164448972809972e-19,1.116305698293541e-19,1.1161667578000262e-19,1.1160276880595408e-19,1.1158888768129967e-19,1.115749936319482e-19,1.1156111250729379e-19,1.1154723138263938e-19,1.1153336318268205e-19,1.1151949498272471e-19,1.1150563970746445e-19,1.1149178443220419e-19,1.1147792915694392e-19,1.1146408680638073e-19,1.1145024445581754e-19,1.1143640210525435e-19,1.1142257267938823e-19,1.1140875617821918e-19,1.1139493967705013e-19,1.1138112317588108e-19,1.1136730667471203e-19,1.1135350309824005e-19,1.1133971244646514e-19,1.1132590886999316e-19,1.1131213114291533e-19,1.1129834049114042e-19,1.1128456276406258e-19,1.1127078503698475e-19,1.1125702023460398e-19,1.1124325543222322e-19,1.1122950355453952e-19,1.1121573875215876e-19,1.1120199979917213e-19,1.1118824792148844e-19,1.1117452189319889e-19,1.1116078294021226e-19,1.1114705691192271e-19,1.1113333088363316e-19,1.1111961778004068e-19,1.1110589175175113e-19,1.1109219157285572e-19,1.110784913939603e-19,1.110647912150649e-19,1.1105110396086656e-19,1.1103741670666822e-19,1.1102372945246988e-19,1.1101005512296862e-19,1.1099638079346735e-19,1.1098271938866315e-19,1.1096905798385896e-19,1.1095539657905476e-19,1.1094174809894764e-19,1.109280996188405e-19,1.1091445113873339e-19,1.1090081558332333e-19,1.1088718002791328e-19,1.108735573972003e-19,1.1085993476648731e-19,1.108463250604714e-19,1.108327153544555e-19,1.1081910564843958e-19,1.1080549594242367e-19,1.107919120858019e-19,1.1077831530448306e-19,1.107647314478613e-19,1.1075114759123952e-19,1.1073757665931482e-19,1.1072400572739012e-19,1.1071043479546543e-19,1.106968767882378e-19,1.1068331878101017e-19,1.1066976077378254e-19,1.10656215691252e-19,1.106426835334185e-19,1.1062913845088795e-19,1.1061560629305446e-19,1.1060207413522098e-19,1.1058855490208457e-19,1.1057503566894815e-19,1.105615293605088e-19,1.1054802305206947e-19,1.1053451674363012e-19,1.1052102335988785e-19,1.1050752997614558e-19,1.1049404951710038e-19,1.104805561333581e-19,1.104670756743129e-19,1.1045360813996478e-19,1.1044014060561665e-19,1.104266859959656e-19,1.1041321846161747e-19,1.1039977677666348e-19,1.1038632216701242e-19,1.1037288048205843e-19,1.1035943879710445e-19,1.1034601003684753e-19,1.1033258127659062e-19,1.103191525163337e-19,1.1030573668077386e-19,1.1029232084521401e-19,1.1027891793435124e-19,1.1026551502348847e-19,1.102521121126257e-19,1.1023872212646e-19,1.102253321402943e-19,1.1021194215412859e-19,1.1019856509265995e-19,1.1018518803119132e-19,1.1017182389441976e-19,1.101584597576482e-19,1.1014509562087664e-19,1.1013174440880216e-19,1.1011839319672767e-19,1.1010505490935025e-19,1.1009171662197283e-19,1.1007837833459541e-19,1.10065040047218e-19,1.1005171468453765e-19,1.1003840224655437e-19,1.1002507688387403e-19,1.1001176444589075e-19,1.0999846493260455e-19,1.0998515249462127e-19,1.0997185298133507e-19,1.0995856639274594e-19,1.099452798041568e-19,1.0993200614026474e-19,1.099187195516756e-19,1.0990544588778355e-19,1.0989218514858856e-19,1.098789114846965e-19,1.0986566367019857e-19,1.0985240293100358e-19,1.0983915511650566e-19,1.0982592022670482e-19,1.098126724122069e-19,1.0979943752240605e-19,1.0978621555730227e-19,1.0977298066750142e-19,1.0975975870239764e-19,1.0974654966199094e-19,1.0973334062158423e-19,1.0972013158117753e-19,1.097069354654679e-19,1.0969373934975826e-19,1.0968054323404862e-19,1.0966736004303606e-19,1.096541768520235e-19,1.0964099366101093e-19,1.0962782339469544e-19,1.0961466605307702e-19,1.0960149578676152e-19,1.095883384451431e-19,1.0957518110352468e-19,1.0956203668660333e-19,1.0954889226968198e-19,1.095357607774577e-19,1.0952261636053635e-19,1.0950948486831207e-19,1.0949636630078486e-19,1.0948324773325765e-19,1.0947012916573044e-19,1.0945701059820324e-19,1.094439049553731e-19,1.0943081223724003e-19,1.0941771951910697e-19,1.0940461387627683e-19,1.0939153408284084e-19,1.0937845428940484e-19,1.0936537449596885e-19,1.0935229470253285e-19,1.0933922783379393e-19,1.09326160965055e-19,1.0931310702101315e-19,1.093000530769713e-19,1.0928699913292945e-19,1.0927395811358467e-19,1.0926091709423988e-19,1.092478760748951e-19,1.092348479802474e-19,1.0922181988559968e-19,1.0920880471564904e-19,1.0919577662100133e-19,1.0918277437574777e-19,1.0916975920579713e-19,1.0915675696054356e-19,1.0914375471529e-19,1.091307653947335e-19,1.09117776074177e-19,1.091047867536205e-19,1.0909181035776108e-19,1.0907883396190165e-19,1.0906585756604222e-19,1.0905289409487987e-19,1.0903994354841459e-19,1.0902698007725223e-19,1.0901402953078695e-19,1.0900107898432166e-19,1.0898812843785638e-19,1.0897520374078524e-19,1.0896226611901703e-19,1.0894932849724882e-19,1.0893640380017767e-19,1.089234920278036e-19,1.0891056733073246e-19,1.088976555583584e-19,1.088847567106814e-19,1.0887184493830733e-19,1.088589590153274e-19,1.088460601676504e-19,1.0883317424467047e-19,1.0882028832169054e-19,1.0880741532340769e-19,1.0879454232512483e-19,1.0878166932684197e-19,1.0876879632855912e-19,1.087559491796704e-19,1.0874308910608462e-19,1.0873022903249883e-19,1.0871738188361012e-19,1.0870454765941848e-19,1.0869170051052976e-19,1.086788792110352e-19,1.0866604498684355e-19,1.0865322368734897e-19,1.086404023878544e-19,1.086275940130569e-19,1.0861477271356233e-19,1.086019772634619e-19,1.085891688886644e-19,1.0857637343856397e-19,1.0856357798846354e-19,1.0855079546306018e-19,1.0853800001295975e-19,1.0852523041225346e-19,1.0851246081154718e-19,1.084996912108409e-19,1.084869216101346e-19,1.0847416493412539e-19,1.0846140825811617e-19,1.0844865158210695e-19,1.084359078307948e-19,1.0842316407948266e-19,1.0841042032817052e-19,1.0839769596390398e-19,1.0838495867494037e-19,1.0837223431067383e-19,1.0835951640875583e-19,1.0834679204448929e-19,1.083340935296169e-19,1.0832136916535036e-19,1.083086771128265e-19,1.0829598506030264e-19,1.0828328654543024e-19,1.0827060095525491e-19,1.0825790890273105e-19,1.0824522977490426e-19,1.0823255064707748e-19,1.0821987798159922e-19,1.082072117784695e-19,1.0819455850003686e-19,1.0818189229690714e-19,1.0816924548082303e-19,1.0815658574004184e-19,1.0814394538630627e-19,1.0813130503257069e-19,1.0811867114118365e-19,1.0810603724979661e-19,1.0809340982075811e-19,1.0808079531641667e-19,1.0806816788737817e-19,1.0805555984538527e-19,1.0804294534104384e-19,1.0803034376139947e-19,1.0801774218175511e-19,1.0800514706445928e-19,1.0799255194716346e-19,1.0797997621691324e-19,1.0796738756196595e-19,1.0795479890701865e-19,1.079422361014655e-19,1.0792966683356382e-19,1.0791710402801067e-19,1.0790452829776045e-19,1.0789198487925291e-19,1.078794285360483e-19,1.0786687865519222e-19,1.0785432877433614e-19,1.0784179828052567e-19,1.0782925486201813e-19,1.0781673083055619e-19,1.0780420679909425e-19,1.0779168276763232e-19,1.0777916519851892e-19,1.0776664762940552e-19,1.0775414944733772e-19,1.0774163834057286e-19,1.077291466208536e-19,1.0771664197643727e-19,1.0770415671906655e-19,1.0769167146169583e-19,1.0767918620432511e-19,1.0766670740930292e-19,1.0765422861428073e-19,1.0764176920630415e-19,1.076292968736305e-19,1.0761684392800246e-19,1.0760439098237441e-19,1.0759193157439783e-19,1.0757948509111832e-19,1.0756703860783882e-19,1.0755459858690784e-19,1.0754217149067394e-19,1.075297379320915e-19,1.0751730437350906e-19,1.0750489020197223e-19,1.0749246310573833e-19,1.0748005539655004e-19,1.0746766061205881e-19,1.0745523997817345e-19,1.0744285165603076e-19,1.07430450409191e-19,1.0741805562469977e-19,1.0740567376490562e-19,1.0739329836746e-19,1.0738091004531731e-19,1.073685346478717e-19,1.0735616571277461e-19,1.0734379677767753e-19,1.0733143430492899e-19,1.0731907183218044e-19,1.073067287464775e-19,1.0729437273607749e-19,1.0728203611272308e-19,1.0726969948936868e-19,1.0725736286601428e-19,1.0724501978031134e-19,1.0723268961930547e-19,1.0722036592064813e-19,1.0720805514668787e-19,1.0719573144803054e-19,1.0718341421172174e-19,1.0717111636245855e-19,1.0715881851319536e-19,1.0714652066393217e-19,1.0713422927701751e-19,1.0712193789010286e-19,1.071096465031882e-19,1.0709736157862209e-19,1.0708509604110157e-19,1.0707281757888399e-19,1.0706055204136348e-19,1.0704828004149443e-19,1.0703602096632245e-19,1.0702378127819608e-19,1.0701151574067557e-19,1.069992760525492e-19,1.0698702990207429e-19,1.0697478375159938e-19,1.0696255698817008e-19,1.0695031730004371e-19,1.0693809699896295e-19,1.0692587669788219e-19,1.0691365639680142e-19,1.0690144255806919e-19,1.0688922871933697e-19,1.0687702134295327e-19,1.0686482689126665e-19,1.0685263890192856e-19,1.0684043798789341e-19,1.0682824999855532e-19,1.068160555468687e-19,1.0680388694457622e-19,1.067917118799352e-19,1.0677953681529419e-19,1.0676736175065318e-19,1.0675520607305777e-19,1.0674304393311382e-19,1.0673089471786695e-19,1.0671874550262008e-19,1.0670658336267614e-19,1.0669444707212633e-19,1.06682304319228e-19,1.066701680286782e-19,1.0665804466282546e-19,1.066459148346242e-19,1.0663379793112e-19,1.0662167456526727e-19,1.0660956412411161e-19,1.0659745368295596e-19,1.0658534970414883e-19,1.0657324572534171e-19,1.0656114820888312e-19,1.0654905069242453e-19,1.0653696610066302e-19,1.0652487504655296e-19,1.0651280337948852e-19,1.0650071232537846e-19,1.0648864712066255e-19,1.0647657545359811e-19,1.064645102488822e-19,1.064524644312119e-19,1.0644039922649599e-19,1.0642834694647715e-19,1.0641628820410977e-19,1.06404248848788e-19,1.0639221595581477e-19,1.0638017013814447e-19,1.0636815016986831e-19,1.0635612373924361e-19,1.0634409730861891e-19,1.0633207734034275e-19,1.0632006383441513e-19,1.063080503284875e-19,1.0629603682255988e-19,1.0628403624132932e-19,1.0627203566009877e-19,1.0626004154121675e-19,1.0624805388468326e-19,1.0623606622814978e-19,1.062240785716163e-19,1.0621209737743135e-19,1.0620012910794347e-19,1.061881608384556e-19,1.0617618610661918e-19,1.0616422429947984e-19,1.0615226895468904e-19,1.0614031360989823e-19,1.0612836472745596e-19,1.0611641584501369e-19,1.0610446696257142e-19,1.0609253746717476e-19,1.0608059504708102e-19,1.0606866555168436e-19,1.0605674251863623e-19,1.0604482594793664e-19,1.0603290291488851e-19,1.0602097988184039e-19,1.0600907623583787e-19,1.0599716612748681e-19,1.0598526248148429e-19,1.059733652978303e-19,1.0596147457652485e-19,1.0594957739287087e-19,1.0593769313391395e-19,1.0592581533730558e-19,1.0591393107834866e-19,1.0590205974408882e-19,1.0589018194748044e-19,1.0587832353791767e-19,1.0586647159070343e-19,1.0585460025644359e-19,1.0584275477157789e-19,1.0583090282436365e-19,1.0581904441480088e-19,1.0580721831698078e-19,1.0579537283211508e-19,1.0578354027194645e-19,1.0577170124942929e-19,1.0575986868926066e-19,1.0574805551613764e-19,1.0573624234301461e-19,1.0572441624519452e-19,1.0571261599676857e-19,1.0570080928599408e-19,1.0568899611287106e-19,1.0567720878914218e-19,1.0566540854071622e-19,1.0565360829229027e-19,1.0564182743090993e-19,1.0563004010718105e-19,1.0561826570814924e-19,1.0560649130911743e-19,1.0559471691008562e-19,1.0558294897340235e-19,1.0557119396141614e-19,1.055594324870814e-19,1.0554767101274667e-19,1.0553592892545753e-19,1.0552417391347133e-19,1.055124318261822e-19,1.0550068327654453e-19,1.0548896057630101e-19,1.0547723141370895e-19,1.0546549578876835e-19,1.0545377308852483e-19,1.0544205685062984e-19,1.0543034061273485e-19,1.0541861791249132e-19,1.054069145992934e-19,1.0539521128609549e-19,1.053835144352461e-19,1.0537180465969965e-19,1.0536012073354734e-19,1.0534843034504649e-19,1.0533673995654564e-19,1.053250689550904e-19,1.0531338502893809e-19,1.0530171402748285e-19,1.0529003656367908e-19,1.0527838494926944e-19,1.052667139478142e-19,1.0525505587105603e-19,1.0524339779429786e-19,1.0523175264223676e-19,1.0522010749017567e-19,1.0520845587576603e-19,1.05196823648402e-19,1.0518519142103798e-19,1.0517355273132542e-19,1.0516192696630993e-19,1.051503141259915e-19,1.0513868189862748e-19,1.0512707552065759e-19,1.0511546268033917e-19,1.0510384984002075e-19,1.050922499243994e-19,1.0508064354642952e-19,1.050690500931567e-19,1.0505745663988389e-19,1.0504586964895961e-19,1.0503428265803534e-19,1.0502270212945959e-19,1.0501112160088385e-19,1.0499955399700518e-19,1.0498797993077797e-19,1.0497641878924784e-19,1.0496486411006624e-19,1.0495329650618757e-19,1.0494174182700597e-19,1.0493018714782437e-19,1.0491864539333984e-19,1.0490711010120384e-19,1.0489556834671931e-19,1.0488402659223479e-19,1.0487249776244733e-19,1.0486096247031133e-19,1.0484944656522095e-19,1.0483792419778203e-19,1.0482640829269164e-19,1.0481489884994979e-19,1.0480338940720794e-19,1.0479187996446609e-19,1.0478038990876984e-19,1.0476888692837653e-19,1.0475739687268028e-19,1.0474591327933257e-19,1.0473441676128779e-19,1.0472293316794008e-19,1.0471145603694091e-19,1.0469997890594174e-19,1.046885082372911e-19,1.0467705049333753e-19,1.046655798246869e-19,1.0465412854308186e-19,1.0464266433677976e-19,1.0463121305517473e-19,1.0461976823591824e-19,1.0460831049196467e-19,1.0459688505975378e-19,1.0458544670284582e-19,1.0457400834593786e-19,1.0456257645137844e-19,1.0455115748151608e-19,1.045397320493052e-19,1.0452831307944284e-19,1.0451690057192902e-19,1.0450549452676374e-19,1.0449408848159846e-19,1.0448266951173611e-19,1.0447128285361643e-19,1.0445988327079969e-19,1.0444848368798294e-19,1.044371034922118e-19,1.0442572329644066e-19,1.0441433663832098e-19,1.0440296290489838e-19,1.0439158917147578e-19,1.0438022190040171e-19,1.0436885462932764e-19,1.0435748735825357e-19,1.0434612654952804e-19,1.0433477866549958e-19,1.0432341785677404e-19,1.0431207643509412e-19,1.0430073501341419e-19,1.0428938712938573e-19,1.0427806509475141e-19,1.0426673013542002e-19,1.0425540163843716e-19,1.0424407314145431e-19,1.0423274464447145e-19,1.042214355345342e-19,1.0421011349989988e-19,1.0419880438996264e-19,1.0418750174237392e-19,1.0417619909478521e-19,1.0416488998484796e-19,1.0415359379960778e-19,1.0414231053906468e-19,1.0413102081617304e-19,1.041197310932814e-19,1.0410844137038975e-19,1.0409717103454372e-19,1.0408590069869768e-19,1.0407463682520018e-19,1.0406336648935415e-19,1.0405210907820518e-19,1.0404084520470769e-19,1.0402958779355872e-19,1.0401833038240976e-19,1.0400707943360933e-19,1.0399584140950597e-19,1.0398459692305408e-19,1.0397335889895072e-19,1.039621273371959e-19,1.0395090223778961e-19,1.0393967713838333e-19,1.0392845203897704e-19,1.0391722693957076e-19,1.0390602122721008e-19,1.0389480259015233e-19,1.0388359041544311e-19,1.0387239116543097e-19,1.0386119191541882e-19,1.0384999912775522e-19,1.0383880634009161e-19,1.0382760062773093e-19,1.0381642722711293e-19,1.0380524090179786e-19,1.0379405457648278e-19,1.0378288763821332e-19,1.0377170777524678e-19,1.0376054729932585e-19,1.0374938682340492e-19,1.0373821342278692e-19,1.0372705940921452e-19,1.0371591185799066e-19,1.0370475138206973e-19,1.0369361029319441e-19,1.0368246274197055e-19,1.0367132165309523e-19,1.0366018702656844e-19,1.0364905886239019e-19,1.036379242358634e-19,1.0362680253403368e-19,1.0361568083220396e-19,1.0360455913037425e-19,1.0359345681559014e-19,1.0358234157610896e-19,1.0357123279897631e-19,1.035601304841922e-19,1.0354902816940809e-19,1.0353793231697252e-19,1.0352684292688548e-19,1.0351574061210137e-19,1.0350465768436286e-19,1.0349357475662436e-19,1.0348249182888586e-19,1.0347142828819296e-19,1.0346035182280299e-19,1.034492882821101e-19,1.0343821827906866e-19,1.034271612007243e-19,1.0341610412237994e-19,1.0340505350638411e-19,1.0339398996569122e-19,1.03382958736741e-19,1.0337190165839664e-19,1.0336087042944642e-19,1.0334982627579913e-19,1.0333880150919745e-19,1.0332776381789869e-19,1.0331674551364554e-19,1.0330572074704386e-19,1.0329470890513925e-19,1.032836906008861e-19,1.0327267875898149e-19,1.0326166691707688e-19,1.032506615375208e-19,1.0323965615796472e-19,1.0322866370310572e-19,1.0321766478589818e-19,1.032066787933877e-19,1.0319569280087724e-19,1.031847132707153e-19,1.0317373374055337e-19,1.0316275421039143e-19,1.0315178114257803e-19,1.0314080807476464e-19,1.0312983500695124e-19,1.0311888132618344e-19,1.0310792764541565e-19,1.0309696103995079e-19,1.0308601382153153e-19,1.0307506660311228e-19,1.0306411938469302e-19,1.030531786286223e-19,1.0304223787255158e-19,1.0303130357882939e-19,1.0302037574745574e-19,1.0300944791608209e-19,1.0299852654705698e-19,1.0298759871568333e-19,1.0297668380900675e-19,1.0296576890233017e-19,1.0295486045800213e-19,1.0294395201367409e-19,1.0293305003169458e-19,1.0292216097441214e-19,1.0291125899243263e-19,1.0290035701045313e-19,1.0288947441551923e-19,1.0287857889588825e-19,1.0286770276330289e-19,1.0285682663071752e-19,1.0284595049813216e-19,1.0283507436554679e-19,1.0282420469530996e-19,1.0281333502507313e-19,1.0280248474188191e-19,1.0279162153399362e-19,1.027807712508024e-19,1.027699080429141e-19,1.0275906422207141e-19,1.0274822040122873e-19,1.0273738304273457e-19,1.0272654568424042e-19,1.0271570832574627e-19,1.0270487742960065e-19,1.0269405299580357e-19,1.0268322856200649e-19,1.0267239766586088e-19,1.0266158615676087e-19,1.0265077464766086e-19,1.0263996960090938e-19,1.0262916455415791e-19,1.0261834658270937e-19,1.0260755446065496e-19,1.0259675587625202e-19,1.0258595729184909e-19,1.0257517809449175e-19,1.0256438597243735e-19,1.0255360677508002e-19,1.0254282757772269e-19,1.0253204191801682e-19,1.0252126918300802e-19,1.0251050291034776e-19,1.024997366376875e-19,1.0248897036502724e-19,1.0247821701706405e-19,1.0246745720675233e-19,1.0245671032113767e-19,1.0244595697317449e-19,1.0243521008755983e-19,1.0242447612664225e-19,1.0241372277867906e-19,1.0240298881776148e-19,1.0239226778154097e-19,1.0238153382062338e-19,1.0237080632205434e-19,1.0236009174818236e-19,1.0234937071196185e-19,1.023386432133928e-19,1.0232793510186936e-19,1.0231723345269446e-19,1.0230652534117102e-19,1.0229581722964758e-19,1.0228512850516974e-19,1.0227443331834337e-19,1.02263738131517e-19,1.0225304294469063e-19,1.0224236714490987e-19,1.0223167842043204e-19,1.0222100262065128e-19,1.0221032682087051e-19,1.0219965102108975e-19,1.021889946083546e-19,1.021783123462253e-19,1.0216766239583868e-19,1.0215699952075498e-19,1.0214634310801983e-19,1.0213568669528467e-19,1.0212504320724659e-19,1.0211439325685997e-19,1.0210375623117042e-19,1.0209311920548087e-19,1.0208248217979132e-19,1.0207185161645031e-19,1.020612210531093e-19,1.0205059695211682e-19,1.0203997931347287e-19,1.0202936167482893e-19,1.0201873757383645e-19,1.0200813285988958e-19,1.0199751522124564e-19,1.0198691050729877e-19,1.0197631225570043e-19,1.019657140041021e-19,1.0195511575250376e-19,1.0194452396325396e-19,1.0193393217400416e-19,1.0192335330945143e-19,1.0191276798255017e-19,1.0190219558034597e-19,1.0189162317814178e-19,1.0188103785124052e-19,1.0187047191138486e-19,1.018599059715292e-19,1.0184934649402208e-19,1.0183878701651496e-19,1.0182822753900783e-19,1.0181767452384925e-19,1.018071279710392e-19,1.0179657495588061e-19,1.0178604132776763e-19,1.0177550123730611e-19,1.017649611468446e-19,1.0175442751873162e-19,1.0174390035296717e-19,1.0173337318720273e-19,1.0172285894613536e-19,1.0171233178037091e-19,1.01701811076955e-19,1.0169130329823617e-19,1.0168078905716879e-19,1.0167028774079849e-19,1.0165978642442819e-19,1.0164927864570935e-19,1.0163877732933905e-19,1.0162828893766582e-19,1.0161779408364405e-19,1.0160731861666789e-19,1.0159683022499466e-19,1.0158634183332143e-19,1.015758728286938e-19,1.0156539089936911e-19,1.0155492189474149e-19,1.015444593524624e-19,1.0153399034783477e-19,1.0152353426790422e-19,1.0151307172562513e-19,1.0150261564569458e-19,1.0149215956576402e-19,1.0148170994818201e-19,1.0147126679294853e-19,1.0146083010006358e-19,1.014503869448301e-19,1.0143995671429369e-19,1.0142952648375727e-19,1.0141908332852379e-19,1.0140866602268445e-19,1.0139824225449658e-19,1.0138782494865724e-19,1.0137740118046936e-19,1.0136698387463002e-19,1.0135657949348775e-19,1.0134618157469402e-19,1.0133577073120322e-19,1.0132537281240948e-19,1.0131497489361575e-19,1.0130458343717055e-19,1.0129419198072536e-19,1.0128380052428016e-19,1.012734155301835e-19,1.0126303699843537e-19,1.0125265846668725e-19,1.0124228639728765e-19,1.0123190786553953e-19,1.0122154225848847e-19,1.0121118311378595e-19,1.012008175067349e-19,1.0119045836203238e-19,1.011801056796784e-19,1.0116974653497588e-19,1.0115939385262189e-19,1.0114906055731351e-19,1.0113870787495953e-19,1.0112837457965115e-19,1.011180283596457e-19,1.0110770152668586e-19,1.0109737469372602e-19,1.0108704786076618e-19,1.0107672102780634e-19,1.0106640065719503e-19,1.0105608028658373e-19,1.0104575991597242e-19,1.0103545893240672e-19,1.0102514502414395e-19,1.0101484404057825e-19,1.0100454305701255e-19,1.0099423561109832e-19,1.0098394108988115e-19,1.0097365949336106e-19,1.0096335850979536e-19,1.009530833756238e-19,1.0094279531675517e-19,1.0093251372023508e-19,1.0092224504841206e-19,1.0091196345189197e-19,1.0090169478006895e-19,1.0089143257059446e-19,1.008811574364229e-19,1.0087090168929695e-19,1.0086063947982247e-19,1.0085038373269652e-19,1.0084014091026764e-19,1.0082989162549022e-19,1.0081964234071281e-19,1.0080940598063246e-19,1.0079916315820358e-19,1.0078892679812324e-19,1.0077869690039143e-19,1.0076846054031109e-19,1.0075823064257928e-19,1.0074802013189308e-19,1.0073779023416127e-19,1.0072757972347507e-19,1.0071736275044033e-19,1.007071457774056e-19,1.0069694172906793e-19,1.0068673121838173e-19,1.006765336323926e-19,1.0066633604640347e-19,1.0065614492276287e-19,1.0064595379912228e-19,1.0063576267548168e-19,1.0062557801418962e-19,1.0061538689054903e-19,1.0060521515395404e-19,1.0059503695501052e-19,1.0058485875606699e-19,1.00574687019472e-19,1.0056452174522555e-19,1.0055436293332764e-19,1.0054419119673265e-19,1.0053403238483473e-19,1.0052388003528535e-19,1.0051372122338743e-19,1.0050358179853512e-19,1.0049342944898574e-19,1.004832835617849e-19,1.0047315059928112e-19,1.0046300471208028e-19,1.004528717495765e-19,1.0044274524942126e-19,1.0043261874926602e-19,1.0042249224911078e-19,1.0041237221130408e-19,1.0040225217349738e-19,1.0039214506038774e-19,1.0038202502258104e-19,1.0037191144712287e-19,1.0036181079636178e-19,1.0035170368325214e-19,1.0034160303249105e-19,1.0033150884407849e-19,1.0032141465566593e-19,1.003113269296019e-19,1.0030123920353787e-19,1.0029115147747385e-19,1.0028106375140982e-19,1.002709954123914e-19,1.0026091414867591e-19,1.002508458096575e-19,1.00240764545942e-19,1.0023070266927212e-19,1.0022064079260224e-19,1.0021057891593236e-19,1.0020052350161101e-19,1.0019046808728966e-19,1.0018041267296831e-19,1.001703637209955e-19,1.0016032123137122e-19,1.0015027874174695e-19,1.001402427144712e-19,1.0013020022484693e-19,1.0012016419757119e-19,1.0011014109499252e-19,1.0010011153006531e-19,1.0009008842748664e-19,1.0008006532490797e-19,1.000700422223293e-19,1.0006002558209917e-19,1.000500218665661e-19,1.0004000522633597e-19,1.0003000151080291e-19,1.0001999133292131e-19,1.0000999407973678e-19,1.0000000328890079e-19],"x":[1.0e30,1.999300299880048e34,3.998500599760096e34,5.9977008996401435e34,7.9969011995201915e34,9.99610149940024e34,1.1995301799280288e35,1.3994502099160336e35,1.5993702399040384e35,1.799290269892043e35,1.999210299880048e35,2.1991303298680528e35,2.3990503598560576e35,2.5989703898440624e35,2.798890419832067e35,2.998810449820072e35,3.1987304798080768e35,3.398650509796081e35,3.598570539784086e35,3.798490569772091e35,3.998410599760096e35,4.1983306297481004e35,4.3982506597361056e35,4.59817068972411e35,4.798090719712115e35,4.9980107497001196e35,5.197930779688125e35,5.397850809676129e35,5.5977708396641344e35,5.797690869652139e35,5.997610899640144e35,6.1975309296281484e35,6.3974509596161536e35,6.597370989604158e35,6.797291019592162e35,6.997211049580168e35,7.197131079568173e35,7.397051109556177e35,7.596971139544182e35,7.796891169532188e35,7.996811199520192e35,8.196731229508196e35,8.396651259496201e35,8.596571289484207e35,8.796491319472211e35,8.996411349460216e35,9.19633137944822e35,9.396251409436226e35,9.59617143942423e35,9.796091469412235e35,9.996011499400239e35,1.0195931529388245e36,1.039585155937625e36,1.0595771589364254e36,1.0795691619352258e36,1.0995611649340264e36,1.1195531679328269e36,1.1395451709316273e36,1.1595371739304278e36,1.1795291769292282e36,1.1995211799280288e36,1.2195131829268292e36,1.2395051859256297e36,1.2594971889244301e36,1.2794891919232307e36,1.2994811949220312e36,1.3194731979208316e36,1.339465200919632e36,1.3594572039184325e36,1.379449206917233e36,1.3994412099160337e36,1.419433212914834e36,1.4394252159136346e36,1.459417218912435e36,1.4794092219112354e36,1.499401224910036e36,1.5193932279088363e36,1.5393852309076368e36,1.5593772339064375e36,1.579369236905238e36,1.5993612399040384e36,1.6193532429028388e36,1.6393452459016393e36,1.6593372489004397e36,1.6793292518992402e36,1.6993212548980406e36,1.7193132578968414e36,1.7393052608956418e36,1.7592972638944422e36,1.7792892668932427e36,1.799281269892043e36,1.8192732728908436e36,1.839265275889644e36,1.8592572788884445e36,1.8792492818872452e36,1.8992412848860456e36,1.919233287884846e36,1.9392252908836465e36,1.959217293882447e36,1.9792092968812474e36,1.999201299880048e36,2.0191933028788483e36,2.039185305877649e36,2.0591773088764495e36,2.07916931187525e36,2.0991613148740504e36,2.1191533178728508e36,2.1391453208716513e36,2.1591373238704517e36,2.179129326869252e36,2.1991213298680526e36,2.2191133328668533e36,2.2391053358656538e36,2.2590973388644542e36,2.2790893418632547e36,2.299081344862055e36,2.3190733478608555e36,2.339065350859656e36,2.3590573538584564e36,2.3790493568572572e36,2.3990413598560576e36,2.419033362854858e36,2.4390253658536585e36,2.459017368852459e36,2.4790093718512594e36,2.4990013748500598e36,2.5189933778488603e36,2.538985380847661e36,2.5589773838464614e36,2.578969386845262e36,2.5989613898440623e36,2.6189533928428628e36,2.6389453958416632e36,2.6589373988404637e36,2.6789294018392644e36,2.6989214048380645e36,2.718913407836865e36,2.7389054108356654e36,2.758897413834466e36,2.778889416833267e36,2.798881419832067e36,2.818873422830868e36,2.838865425829668e36,2.8588574288284687e36,2.878849431827269e36,2.8988414348260696e36,2.91883343782487e36,2.9388254408236705e36,2.958817443822471e36,2.9788094468212713e36,2.998801449820072e36,3.018793452818872e36,3.038785455817673e36,3.058777458816473e36,3.078769461815274e36,3.0987614648140746e36,3.118753467812875e36,3.1387454708116755e36,3.1587374738104756e36,3.1787294768092764e36,3.1987214798080765e36,3.218713482806877e36,3.2387054858056774e36,3.258697488804478e36,3.278689491803279e36,3.298681494802079e36,3.31867349780088e36,3.33866550079968e36,3.3586575037984806e36,3.378649506797281e36,3.3986415097960815e36,3.4186335127948817e36,3.4386255157936824e36,3.458617518792483e36,3.4786095217912833e36,3.498601524790084e36,3.518593527788884e36,3.538585530787685e36,3.558577533786485e36,3.578569536785286e36,3.5985615397840866e36,3.618553542782887e36,3.6385455457816874e36,3.6585375487804876e36,3.6785295517792883e36,3.6985215547780885e36,3.718513557776889e36,3.7385055607756894e36,3.75849756377449e36,3.778489566773291e36,3.798481569772091e36,3.818473572770892e36,3.838465575769692e36,3.8584575787684926e36,3.878449581767293e36,3.8984415847660935e36,3.918433587764894e36,3.9384255907636944e36,3.958417593762495e36,3.978409596761295e36,3.998401599760096e36,4.018393602758896e36,4.038385605757697e36,4.058377608756497e36,4.078369611755298e36,4.0983616147540985e36,4.1183536177528987e36,4.1383456207516994e36,4.1583376237504996e36,4.1783296267493e36,4.1983216297481004e36,4.218313632746901e36,4.2383056357457013e36,4.258297638744502e36,4.278289641743303e36,4.298281644742103e36,4.3182736477409037e36,4.338265650739704e36,4.3582576537385046e36,4.378249656737305e36,4.3982416597361055e36,4.418233662734906e36,4.4382256657337064e36,4.458217668732507e36,4.478209671731307e36,4.498201674730108e36,4.518193677728908e36,4.538185680727709e36,4.558177683726509e36,4.57816968672531e36,4.5981616897241105e36,4.6181536927229106e36,4.6381456957217114e36,4.6581376987205115e36,4.678129701719312e36,4.6981217047181124e36,4.718113707716913e36,4.738105710715714e36,4.758097713714514e36,4.778089716713315e36,4.798081719712115e36,4.8180737227109157e36,4.838065725709716e36,4.8580577287085165e36,4.8780497317073167e36,4.8980417347061174e36,4.918033737704918e36,4.9380257407037183e36,4.958017743702519e36,4.978009746701319e36,4.99800174970012e36,5.01799375269892e36,5.037985755697721e36,5.0579777586965216e36,5.077969761695322e36,5.0979617646941225e36,5.1179537676929226e36,5.1379457706917233e36,5.1579377736905235e36,5.177929776689324e36,5.1979217796881244e36,5.217913782686925e36,5.237905785685726e36,5.257897788684526e36,5.277889791683327e36,5.297881794682127e36,5.317873797680928e36,5.337865800679728e36,5.357857803678528e36,5.377849806677329e36,5.397841809676129e36,5.41783381267493e36,5.437825815673731e36,5.45781781867253e36,5.477809821671331e36,5.497801824670132e36,5.517793827668933e36,5.537785830667732e36,5.557777833666533e36,5.577769836665334e36,5.597761839664134e36,5.617753842662935e36,5.637745845661735e36,5.657737848660535e36,5.677729851659336e36,5.697721854658137e36,5.717713857656938e36,5.737705860655737e36,5.757697863654538e36,5.777689866653339e36,5.79768186965214e36,5.817673872650939e36,5.83766587564974e36,5.85765787864854e36,5.877649881647341e36,5.897641884646142e36,5.917633887644942e36,5.937625890643742e36,5.957617893642543e36,5.977609896641344e36,5.997601899640143e36,6.017593902638944e36,6.037585905637745e36,6.057577908636545e36,6.077569911635346e36,6.097561914634146e36,6.117553917632947e36,6.137545920631747e36,6.157537923630548e36,6.177529926629348e36,6.197521929628148e36,6.217513932626949e36,6.23750593562575e36,6.25749793862455e36,6.27748994162335e36,6.297481944622151e36,6.317473947620952e36,6.337465950619752e36,6.357457953618552e36,6.377449956617353e36,6.397441959616153e36,6.417433962614954e36,6.437425965613755e36,6.457417968612554e36,6.477409971611355e36,6.497401974610156e36,6.517393977608957e36,6.537385980607757e36,6.557377983606557e36,6.577369986605358e36,6.597361989604158e36,6.617353992602959e36,6.637345995601759e36,6.657337998600559e36,6.67733000159936e36,6.697322004598161e36,6.717314007596962e36,6.737306010595761e36,6.757298013594562e36,6.777290016593363e36,6.797282019592163e36,6.817274022590963e36,6.837266025589764e36,6.857258028588564e36,6.877250031587365e36,6.897242034586166e36,6.917234037584965e36,6.937226040583766e36,6.957218043582567e36,6.977210046581368e36,6.997202049580167e36,7.017194052578968e36,7.037186055577769e36,7.05717805857657e36,7.07717006157537e36,7.09716206457417e36,7.11715406757297e36,7.137146070571771e36,7.157138073570572e36,7.177130076569373e36,7.197122079568172e36,7.217114082566973e36,7.237106085565774e36,7.257098088564574e36,7.277090091563374e36,7.297082094562175e36,7.317074097560975e36,7.337066100559776e36,7.357058103558577e36,7.377050106557377e36,7.397042109556177e36,7.417034112554978e36,7.437026115553779e36,7.457018118552578e36,7.477010121551379e36,7.49700212455018e36,7.51699412754898e36,7.536986130547781e36,7.556978133546581e36,7.576970136545382e36,7.596962139544182e36,7.616954142542983e36,7.636946145541783e36,7.656938148540583e36,7.676930151539384e36,7.696922154538185e36,7.716914157536986e36,7.736906160535785e36,7.756898163534586e36,7.776890166533387e36,7.796882169532187e36,7.816874172530987e36,7.836866175529788e36,7.856858178528588e36,7.876850181527389e36,7.89684218452619e36,7.916834187524989e36,7.93682619052379e36,7.956818193522591e36,7.976810196521392e36,7.996802199520192e36,8.016794202518992e36,8.036786205517793e36,8.056778208516593e36,8.076770211515394e36,8.096762214514194e36,8.116754217512994e36,8.136746220511795e36,8.156738223510596e36,8.176730226509397e36,8.196722229508196e36,8.216714232506997e36,8.236706235505798e36,8.256698238504598e36,8.276690241503398e36,8.296682244502199e36,8.316674247501e36,8.3366662504998e36,8.356658253498601e36,8.3766502564974e36,8.396642259496201e36,8.416634262495002e36,8.436626265493803e36,8.456618268492602e36,8.476610271491403e36,8.496602274490204e36,8.516594277489004e36,8.536586280487805e36,8.556578283486605e36,8.576570286485405e36,8.596562289484206e36,8.616554292483007e36,8.636546295481807e36,8.656538298480607e36,8.676530301479408e36,8.696522304478209e36,8.71651430747701e36,8.736506310475809e36,8.75649831347461e36,8.77649031647341e36,8.796482319472211e36,8.816474322471012e36,8.836466325469812e36,8.856458328468612e36,8.876450331467413e36,8.896442334466214e36,8.916434337465013e36,8.936426340463814e36,8.956418343462615e36,8.976410346461416e36,8.996402349460216e36,9.016394352459016e36,9.036386355457817e36,9.056378358456617e36,9.076370361455418e36,9.096362364454218e36,9.116354367453018e36,9.136346370451819e36,9.15633837345062e36,9.17633037644942e36,9.19632237944822e36,9.216314382447021e36,9.236306385445822e36,9.256298388444622e36,9.276290391443422e36,9.296282394442223e36,9.316274397441023e36,9.336266400439824e36,9.356258403438625e36,9.376250406437424e36,9.396242409436225e36,9.416234412435026e36,9.436226415433827e36,9.456218418432626e36,9.476210421431427e36,9.496202424430228e36,9.516194427429028e36,9.536186430427829e36,9.556178433426629e36,9.576170436425429e36,9.59616243942423e36,9.616154442423031e36,9.636146445421832e36,9.656138448420631e36,9.676130451419432e36,9.696122454418233e36,9.716114457417033e36,9.736106460415833e36,9.756098463414634e36,9.776090466413434e36,9.796082469412235e36,9.816074472411036e36,9.836066475409835e36,9.856058478408636e36,9.876050481407437e36,9.896042484406238e36,9.916034487405037e36,9.936026490403838e36,9.956018493402639e36,9.97601049640144e36,9.99600249940024e36,1.001599450239904e37,1.003598650539784e37,1.0055978508396641e37,1.0075970511395442e37,1.0095962514394242e37,1.0115954517393042e37,1.0135946520391843e37,1.0155938523390644e37,1.0175930526389444e37,1.0195922529388244e37,1.0215914532387045e37,1.0235906535385846e37,1.0255898538384646e37,1.0275890541383447e37,1.0295882544382247e37,1.0315874547381047e37,1.0335866550379848e37,1.0355858553378649e37,1.0375850556377448e37,1.0395842559376249e37,1.041583456237505e37,1.043582656537385e37,1.0455818568372651e37,1.0475810571371451e37,1.0495802574370252e37,1.0515794577369052e37,1.0535786580367853e37,1.0555778583366653e37,1.0575770586365453e37,1.0595762589364254e37,1.0615754592363055e37,1.0635746595361854e37,1.0655738598360656e37,1.0675730601359456e37,1.0695722604358255e37,1.0715714607357057e37,1.0735706610355857e37,1.0755698613354659e37,1.0775690616353458e37,1.0795682619352258e37,1.081567462235106e37,1.083566662534986e37,1.0855658628348661e37,1.087565063134746e37,1.089564263434626e37,1.0915634637345062e37,1.0935626640343862e37,1.0955618643342664e37,1.0975610646341463e37,1.0995602649340263e37,1.1015594652339065e37,1.1035586655337864e37,1.1055578658336664e37,1.1075570661335466e37,1.1095562664334265e37,1.1115554667333067e37,1.1135546670331867e37,1.1155538673330666e37,1.1175530676329468e37,1.1195522679328268e37,1.121551468232707e37,1.123550668532587e37,1.125549868832467e37,1.127549069132347e37,1.129548269432227e37,1.1315474697321072e37,1.1335466700319872e37,1.1355458703318672e37,1.1375450706317473e37,1.1395442709316273e37,1.1415434712315073e37,1.1435426715313874e37,1.1455418718312674e37,1.1475410721311476e37,1.1495402724310275e37,1.1515394727309075e37,1.1535386730307877e37,1.1555378733306677e37,1.1575370736305478e37,1.1595362739304278e37,1.1615354742303078e37,1.163534674530188e37,1.165533874830068e37,1.167533075129948e37,1.169532275429828e37,1.171531475729708e37,1.1735306760295882e37,1.1755298763294682e37,1.1775290766293483e37,1.1795282769292283e37,1.1815274772291083e37,1.1835266775289884e37,1.1855258778288684e37,1.1875250781287484e37,1.1895242784286286e37,1.1915234787285085e37,1.1935226790283887e37,1.1955218793282687e37,1.1975210796281486e37,1.1995202799280288e37,1.2015194802279088e37,1.203518680527789e37,1.205517880827669e37,1.2075170811275489e37,1.209516281427429e37,1.211515481727309e37,1.2135146820271892e37,1.2155138823270692e37,1.217513082626949e37,1.2195122829268293e37,1.2215114832267093e37,1.2235106835265895e37,1.2255098838264694e37,1.2275090841263494e37,1.2295082844262296e37,1.2315074847261095e37,1.2335066850259895e37,1.2355058853258697e37,1.2375050856257496e37,1.2395042859256298e37,1.2415034862255098e37,1.2435026865253897e37,1.24550188682527e37,1.2475010871251499e37,1.24950028742503e37,1.25149948772491e37,1.25349868802479e37,1.2554978883246702e37,1.2574970886245501e37,1.2594962889244303e37,1.2614954892243103e37,1.2634946895241902e37,1.2654938898240704e37,1.2674930901239504e37,1.2694922904238303e37,1.2714914907237105e37,1.2734906910235905e37,1.2754898913234707e37,1.2774890916233506e37,1.2794882919232306e37,1.2814874922231108e37,1.2834866925229907e37,1.285485892822871e37,1.2874850931227509e37,1.2894842934226308e37,1.291483493722511e37,1.293482694022391e37,1.2954818943222712e37,1.2974810946221511e37,1.299480294922031e37,1.3014794952219113e37,1.3034786955217912e37,1.3054778958216714e37,1.3074770961215514e37,1.3094762964214313e37,1.3114754967213115e37,1.3134746970211915e37,1.3154738973210714e37,1.3174730976209516e37,1.3194722979208316e37,1.3214714982207118e37,1.3234706985205917e37,1.3254698988204717e37,1.3274690991203519e37,1.3294682994202318e37,1.331467499720112e37,1.333466700019992e37,1.335465900319872e37,1.3374651006197521e37,1.339464300919632e37,1.3414635012195123e37,1.3434627015193922e37,1.3454619018192722e37,1.3474611021191524e37,1.3494603024190323e37,1.3514595027189123e37,1.3534587030187925e37,1.3554579033186724e37,1.3574571036185526e37,1.3594563039184326e37,1.3614555042183125e37,1.3634547045181927e37,1.3654539048180727e37,1.3674531051179529e37,1.3694523054178328e37,1.3714515057177128e37,1.373450706017593e37,1.375449906317473e37,1.3774491066173531e37,1.379448306917233e37,1.381447507217113e37,1.3834467075169932e37,1.3854459078168732e37,1.3874451081167534e37,1.3894443084166333e37,1.3914435087165133e37,1.3934427090163935e37,1.3954419093162734e37,1.3974411096161534e37,1.3994403099160336e37,1.4014395102159135e37,1.4034387105157937e37,1.4054379108156737e37,1.4074371111155536e37,1.4094363114154338e37,1.4114355117153138e37,1.413434712015194e37,1.415433912315074e37,1.417433112614954e37,1.419432312914834e37,1.421431513214714e37,1.4234307135145942e37,1.4254299138144742e37,1.4274291141143542e37,1.4294283144142343e37,1.4314275147141143e37,1.4334267150139943e37,1.4354259153138744e37,1.4374251156137544e37,1.4394243159136346e37,1.4414235162135146e37,1.4434227165133945e37,1.4454219168132747e37,1.4474211171131547e37,1.4494203174130348e37,1.4514195177129148e37,1.4534187180127948e37,1.455417918312675e37,1.457417118612555e37,1.459416318912435e37,1.461415519212315e37,1.463414719512195e37,1.4654139198120752e37,1.4674131201119552e37,1.4694123204118353e37,1.4714115207117153e37,1.4734107210115953e37,1.4754099213114755e37,1.4774091216113554e37,1.4794083219112354e37,1.4814075222111156e37,1.4834067225109955e37,1.4854059228108757e37,1.4874051231107557e37,1.4894043234106356e37,1.4914035237105158e37,1.4934027240103958e37,1.495401924310276e37,1.497401124610156e37,1.4994003249100359e37,1.501399525209916e37,1.503398725509796e37,1.5053979258096762e37,1.5073971261095562e37,1.509396326409436e37,1.5113955267093163e37,1.5133947270091963e37,1.5153939273090762e37,1.5173931276089564e37,1.5193923279088364e37,1.5213915282087166e37,1.5233907285085965e37,1.5253899288084765e37,1.5273891291083567e37,1.5293883294082366e37,1.5313875297081168e37,1.5333867300079968e37,1.5353859303078767e37,1.537385130607757e37,1.5393843309076369e37,1.541383531207517e37,1.543382731507397e37,1.545381931807277e37,1.5473811321071572e37,1.5493803324070371e37,1.5513795327069173e37,1.5533787330067973e37,1.5553779333066772e37,1.5573771336065574e37,1.5593763339064374e37,1.5613755342063173e37,1.5633747345061975e37,1.5653739348060775e37,1.5673731351059577e37,1.5693723354058376e37,1.5713715357057176e37,1.5733707360055978e37,1.5753699363054777e37,1.577369136605358e37,1.5793683369052379e37,1.5813675372051178e37,1.583366737504998e37,1.585365937804878e37,1.5873651381047582e37,1.5893643384046381e37,1.591363538704518e37,1.5933627390043983e37,1.5953619393042782e37,1.5973611396041582e37,1.5993603399040384e37,1.6013595402039183e37,1.6033587405037985e37,1.6053579408036785e37,1.6073571411035584e37,1.6093563414034386e37,1.6113555417033186e37,1.6133547420031988e37,1.6153539423030787e37,1.6173531426029587e37,1.6193523429028389e37,1.6213515432027188e37,1.623350743502599e37,1.625349943802479e37,1.627349144102359e37,1.6293483444022391e37,1.631347544702119e37,1.6333467450019993e37,1.6353459453018792e37,1.6373451456017592e37,1.6393443459016394e37,1.6413435462015193e37,1.6433427465013993e37,1.6453419468012795e37,1.6473411471011594e37,1.6493403474010396e37,1.6513395477009196e37,1.6533387480007995e37,1.6553379483006797e37,1.6573371486005597e37,1.65933634890044e37,1.6613355492003198e37,1.6633347495001998e37,1.66533394980008e37,1.66733315009996e37,1.6693323503998401e37,1.67133155069972e37,1.6733307509996e37,1.6753299512994802e37,1.6773291515993602e37,1.6793283518992401e37,1.6813275521991203e37,1.6833267524990003e37,1.6853259527988805e37,1.6873251530987604e37,1.6893243533986404e37,1.6913235536985206e37,1.6933227539984005e37,1.6953219542982807e37,1.6973211545981607e37,1.6993203548980407e37,1.7013195551979208e37,1.7033187554978008e37,1.705317955797681e37,1.707317156097561e37,1.709316356397441e37,1.711315556697321e37,1.713314756997201e37,1.7153139572970812e37,1.7173131575969612e37,1.7193123578968412e37,1.7213115581967213e37,1.7233107584966013e37,1.7253099587964813e37,1.7273091590963614e37,1.7293083593962414e37,1.7313075596961216e37,1.7333067599960016e37,1.7353059602958815e37,1.7373051605957617e37,1.7393043608956417e37,1.7413035611955218e37,1.7433027614954018e37,1.7453019617952818e37,1.747301162095162e37,1.749300362395042e37,1.751299562694922e37,1.753298762994802e37,1.755297963294682e37,1.7572971635945622e37,1.7592963638944422e37,1.761295564194322e37,1.7632947644942023e37,1.7652939647940823e37,1.7672931650939625e37,1.7692923653938424e37,1.7712915656937224e37,1.7732907659936026e37,1.7752899662934825e37,1.7772891665933627e37,1.7792883668932427e37,1.7812875671931226e37,1.7832867674930028e37,1.7852859677928828e37,1.787285168092763e37,1.789284368392643e37,1.7912835686925229e37,1.793282768992403e37,1.795281969292283e37,1.7972811695921632e37,1.7992803698920432e37,1.8012795701919231e37,1.8032787704918033e37,1.8052779707916833e37,1.8072771710915632e37,1.8092763713914434e37,1.8112755716913234e37,1.8132747719912036e37,1.8152739722910835e37,1.8172731725909635e37,1.8192723728908437e37,1.8212715731907236e37,1.8232707734906038e37,1.8252699737904838e37,1.8272691740903637e37,1.829268374390244e37,1.8312675746901239e37,1.833266774990004e37,1.835265975289884e37,1.837265175589764e37,1.8392643758896442e37,1.8412635761895241e37,1.8432627764894043e37,1.8452619767892843e37,1.8472611770891642e37,1.8492603773890444e37,1.8512595776889244e37,1.8532587779888043e37,1.8552579782886845e37,1.8572571785885645e37,1.8592563788884447e37,1.8612555791883246e37,1.8632547794882046e37,1.8652539797880848e37,1.8672531800879647e37,1.869252380387845e37,1.8712515806877249e37,1.8732507809876048e37,1.875249981287485e37,1.877249181587365e37,1.8792483818872452e37,1.8812475821871251e37,1.883246782487005e37,1.8852459827868853e37,1.8872451830867652e37,1.8892443833866452e37,1.8912435836865254e37,1.8932427839864053e37,1.8952419842862855e37,1.8972411845861655e37,1.8992403848860454e37,1.9012395851859256e37,1.9032387854858056e37,1.9052379857856858e37,1.9072371860855657e37,1.9092363863854457e37,1.9112355866853259e37,1.9132347869852058e37,1.915233987285086e37,1.917233187584966e37,1.919232387884846e37,1.9212315881847261e37,1.923230788484606e37,1.9252299887844863e37,1.9272291890843662e37,1.9292283893842462e37,1.9312275896841264e37,1.9332267899840063e37,1.9352259902838863e37,1.9372251905837665e37,1.9392243908836464e37,1.9412235911835266e37,1.9432227914834066e37,1.9452219917832865e37,1.9472211920831667e37,1.9492203923830467e37,1.951219592682927e37,1.9532187929828068e37,1.9552179932826868e37,1.957217193582567e37,1.959216393882447e37,1.9612155941823271e37,1.963214794482207e37,1.965213994782087e37,1.9672131950819672e37,1.9692123953818472e37,1.9712115956817272e37,1.9732107959816073e37,1.9752099962814873e37,1.9772091965813675e37,1.9792083968812474e37,1.9812075971811274e37,1.9832067974810076e37,1.9852059977808875e37,1.9872051980807677e37,1.9892043983806477e37,1.9912035986805277e37,1.9932027989804078e37,1.9952019992802878e37,1.997201199580168e37,1.999200399880048e37,2.001199600179928e37,2.003198800479808e37,2.005198000779688e37,2.0071972010795682e37,2.0091964013794482e37,2.0111956016793282e37,2.0131948019792083e37,2.0151940022790883e37,2.0171932025789683e37,2.0191924028788485e37,2.0211916031787284e37,2.0231908034786086e37,2.0251900037784886e37,2.0271892040783685e37,2.0291884043782487e37,2.0311876046781287e37,2.0331868049780088e37,2.0351860052778888e37,2.0371852055777688e37,2.039184405877649e37,2.041183606177529e37,2.043182806477409e37,2.045182006777289e37,2.047181207077169e37,2.0491804073770492e37,2.0511796076769292e37,2.053178807976809e37,2.0551780082766893e37,2.0571772085765693e37,2.0591764088764495e37,2.0611756091763294e37,2.0631748094762094e37,2.0651740097760896e37,2.0671732100759695e37,2.0691724103758497e37,2.0711716106757297e37,2.0731708109756096e37,2.0751700112754898e37,2.0771692115753698e37,2.07916841187525e37,2.08116761217513e37,2.0831668124750099e37,2.08516601277489e37,2.08716521307477e37,2.0891644133746502e37,2.0911636136745302e37,2.0931628139744101e37,2.0951620142742903e37,2.0971612145741703e37,2.0991604148740502e37,2.1011596151739304e37,2.1031588154738104e37,2.1051580157736906e37,2.1071572160735705e37,2.1091564163734505e37,2.1111556166733307e37,2.1131548169732106e37,2.1151540172730908e37,2.1171532175729708e37,2.1191524178728507e37,2.121151618172731e37,2.1231508184726109e37,2.125150018772491e37,2.127149219072371e37,2.129148419372251e37,2.131147619672131e37,2.1331468199720114e37,2.135146020271891e37,2.1371452205717713e37,2.1391444208716515e37,2.141143621171531e37,2.1431428214714114e37,2.1451420217712916e37,2.1471412220711713e37,2.1491404223710515e37,2.1511396226709317e37,2.153138822970812e37,2.1551380232706916e37,2.157137223570572e37,2.159136423870452e37,2.1611356241703317e37,2.163134824470212e37,2.165134024770092e37,2.167133225069972e37,2.169132425369852e37,2.171131625669732e37,2.173130825969612e37,2.175130026269492e37,2.1771292265693723e37,2.1791284268692525e37,2.181127627169132e37,2.1831268274690124e37,2.1851260277688926e37,2.1871252280687723e37,2.1891244283686525e37,2.1911236286685327e37,2.1931228289684124e37,2.1951220292682926e37,2.197121229568173e37,2.1991204298680525e37,2.2011196301679327e37,2.203118830467813e37,2.205118030767693e37,2.207117231067573e37,2.209116431367453e37,2.211115631667333e37,2.213114831967213e37,2.215114032267093e37,2.2171132325669733e37,2.219112432866853e37,2.221111633166733e37,2.2231108334666134e37,2.2251100337664936e37,2.2271092340663733e37,2.2291084343662535e37,2.2311076346661337e37,2.2331068349660134e37,2.2351060352658936e37,2.237105235565774e37,2.2391044358656535e37,2.2411036361655337e37,2.243102836465414e37,2.2451020367652936e37,2.247101237065174e37,2.249100437365054e37,2.251099637664934e37,2.253098837964814e37,2.255098038264694e37,2.2570972385645743e37,2.259096438864454e37,2.261095639164334e37,2.2630948394642144e37,2.265094039764094e37,2.2670932400639743e37,2.2690924403638545e37,2.2710916406637347e37,2.2730908409636144e37,2.2750900412634946e37,2.277089241563375e37,2.2790884418632545e37,2.2810876421631347e37,2.283086842463015e37,2.2850860427628946e37,2.287085243062775e37,2.289084443362655e37,2.2910836436625347e37,2.293082843962415e37,2.295082044262295e37,2.2970812445621753e37,2.299080444862055e37,2.301079645161935e37,2.3030788454618154e37,2.305078045761695e37,2.3070772460615753e37,2.3090764463614555e37,2.311075646661335e37,2.3130748469612154e37,2.3150740472610956e37,2.317073247560976e37,2.3190724478608555e37,2.3210716481607357e37,2.323070848460616e37,2.3250700487604956e37,2.327069249060376e37,2.329068449360256e37,2.3310676496601357e37,2.333066849960016e37,2.335066050259896e37,2.337065250559776e37,2.339064450859656e37,2.341063651159536e37,2.3430628514594164e37,2.345062051759296e37,2.3470612520591763e37,2.3490604523590565e37,2.351059652658936e37,2.3530588529588164e37,2.3550580532586966e37,2.3570572535585763e37,2.3590564538584565e37,2.3610556541583367e37,2.3630548544582164e37,2.3650540547580966e37,2.367053255057977e37,2.369052455357857e37,2.3710516556577367e37,2.373050855957617e37,2.375050056257497e37,2.377049256557377e37,2.379048456857257e37,2.381047657157137e37,2.383046857457017e37,2.385046057756897e37,2.3870452580567773e37,2.3890444583566575e37,2.391043658656537e37,2.3930428589564174e37,2.3950420592562976e37,2.3970412595561773e37,2.3990404598560575e37,2.4010396601559377e37,2.4030388604558174e37,2.4050380607556976e37,2.407037261055578e37,2.4090364613554575e37,2.4110356616553377e37,2.413034861955218e37,2.415034062255098e37,2.417033262554978e37,2.419032462854858e37,2.421031663154738e37,2.423030863454618e37,2.425030063754498e37,2.4270292640543783e37,2.429028464354258e37,2.431027664654138e37,2.4330268649540184e37,2.4350260652538986e37,2.4370252655537783e37,2.4390244658536585e37,2.4410236661535387e37,2.4430228664534184e37,2.4450220667532986e37,2.447021267053179e37,2.4490204673530585e37,2.4510196676529387e37,2.453018867952819e37,2.4550180682526986e37,2.457017268552579e37,2.459016468852459e37,2.461015669152339e37,2.463014869452219e37,2.465014069752099e37,2.4670132700519793e37,2.469012470351859e37,2.471011670651739e37,2.4730108709516194e37,2.475010071251499e37,2.4770092715513793e37,2.4790084718512595e37,2.4810076721511397e37,2.4830068724510194e37,2.4850060727508996e37,2.48700527305078e37,2.4890044733506595e37,2.4910036736505397e37,2.49300287395042e37,2.4950020742502996e37,2.49700127455018e37,2.49900047485006e37,2.5009996751499398e37,2.50299887544982e37,2.5049980757497e37,2.5069972760495803e37,2.50899647634946e37,2.5109956766493402e37,2.5129948769492204e37,2.5149940772491e37,2.5169932775489803e37,2.5189924778488605e37,2.5209916781487403e37,2.5229908784486204e37,2.5249900787485006e37,2.5269892790483804e37,2.5289884793482605e37,2.5309876796481407e37,2.532986879948021e37,2.5349860802479007e37,2.536985280547781e37,2.538984480847661e37,2.5409836811475408e37,2.542982881447421e37,2.544982081747301e37,2.546981282047181e37,2.548980482347061e37,2.5509796826469412e37,2.5529788829468214e37,2.554978083246701e37,2.5569772835465813e37,2.5589764838464615e37,2.5609756841463413e37,2.5629748844462215e37,2.5649740847461016e37,2.5669732850459814e37,2.5689724853458616e37,2.5709716856457417e37,2.5729708859456215e37,2.5749700862455017e37,2.576969286545382e37,2.578968486845262e37,2.5809676871451418e37,2.582966887445022e37,2.584966087744902e37,2.586965288044782e37,2.588964488344662e37,2.5909636886445422e37,2.592962888944422e37,2.594962089244302e37,2.5969612895441824e37,2.5989604898440625e37,2.6009596901439423e37,2.6029588904438225e37,2.6049580907437026e37,2.6069572910435824e37,2.6089564913434626e37,2.6109556916433427e37,2.6129548919432225e37,2.6149540922431027e37,2.616953292542983e37,2.6189524928428626e37,2.620951693142743e37,2.622950893442623e37,2.624950093742503e37,2.626949294042383e37,2.628948494342263e37,2.6309476946421433e37,2.632946894942023e37,2.634946095241903e37,2.6369452955417834e37,2.638944495841663e37,2.6409436961415433e37,2.6429428964414235e37,2.6449420967413037e37,2.6469412970411834e37,2.6489404973410636e37,2.6509396976409438e37,2.6529388979408235e37,2.6549380982407037e37,2.656937298540584e37,2.6589364988404636e37,2.660935699140344e37,2.662934899440224e37,2.6649340997401037e37,2.666933300039984e37,2.668932500339864e37,2.6709317006397443e37,2.672930900939624e37,2.674930101239504e37,2.6769293015393844e37,2.678928501839264e37,2.6809277021391443e37,2.6829269024390245e37,2.684926102738904e37,2.6869253030387844e37,2.6889245033386646e37,2.6909237036385443e37,2.6929229039384245e37,2.6949221042383047e37,2.696921304538185e37,2.6989205048380646e37,2.700919705137945e37,2.702918905437825e37,2.7049181057377047e37,2.706917306037585e37,2.708916506337465e37,2.710915706637345e37,2.712914906937225e37,2.714914107237105e37,2.7169133075369854e37,2.718912507836865e37,2.7209117081367453e37,2.7229109084366255e37,2.724910108736505e37,2.7269093090363854e37,2.7289085093362656e37,2.7309077096361453e37,2.7329069099360255e37,2.7349061102359057e37,2.7369053105357854e37,2.7389045108356656e37,2.740903711135546e37,2.742902911435426e37,2.7449021117353057e37,2.746901312035186e37,2.748900512335066e37,2.750899712634946e37,2.752898912934826e37,2.754898113234706e37,2.756897313534586e37,2.758896513834466e37,2.7608957141343463e37,2.7628949144342265e37,2.764894114734106e37,2.7668933150339864e37,2.7688925153338666e37,2.7708917156337463e37,2.7728909159336265e37,2.7748901162335067e37,2.7768893165333864e37,2.7788885168332666e37,2.780887717133147e37,2.7828869174330265e37,2.7848861177329067e37,2.786885318032787e37,2.788884518332667e37,2.790883718632547e37,2.792882918932427e37,2.794882119232307e37,2.796881319532187e37,2.798880519832067e37,2.8008797201319473e37,2.802878920431827e37,2.804878120731707e37,2.8068773210315874e37,2.8088765213314676e37,2.8108757216313473e37,2.8128749219312275e37,2.8148741222311077e37,2.8168733225309874e37,2.8188725228308676e37,2.820871723130748e37,2.8228709234306275e37,2.8248701237305077e37,2.826869324030388e37,2.8288685243302676e37,2.830867724630148e37,2.832866924930028e37,2.834866125229908e37,2.836865325529788e37,2.838864525829668e37,2.8408637261295483e37,2.842862926429428e37,2.844862126729308e37,2.8468613270291884e37,2.848860527329068e37,2.8508597276289483e37,2.8528589279288285e37,2.8548581282287087e37,2.8568573285285884e37,2.8588565288284686e37,2.860855729128349e37,2.8628549294282285e37,2.8648541297281087e37,2.866853330027989e37,2.8688525303278686e37,2.870851730627749e37,2.872850930927629e37,2.8748501312275087e37,2.876849331527389e37,2.878848531827269e37,2.8808477321271493e37,2.882846932427029e37,2.884846132726909e37,2.8868453330267894e37,2.888844533326669e37,2.8908437336265493e37,2.8928429339264295e37,2.894842134226309e37,2.8968413345261894e37,2.8988405348260696e37,2.9008397351259493e37,2.9028389354258295e37,2.9048381357257097e37,2.90683733602559e37,2.9088365363254696e37,2.91083573662535e37,2.91283493692523e37,2.9148341372251097e37,2.91683333752499e37,2.91883253782487e37,2.92083173812475e37,2.92283093842463e37,2.92483013872451e37,2.9268293390243904e37,2.92882853932427e37,2.9308277396241503e37,2.9328269399240305e37,2.93482614022391e37,2.9368253405237904e37,2.9388245408236706e37,2.9408237411235503e37,2.9428229414234305e37,2.9448221417233107e37,2.9468213420231904e37,2.9488205423230706e37,2.950819742622951e37,2.952818942922831e37,2.9548181432227107e37,2.956817343522591e37,2.958816543822471e37,2.960815744122351e37,2.962814944422231e37,2.964814144722111e37,2.966813345021991e37,2.968812545321871e37,2.9708117456217513e37,2.9728109459216315e37,2.974810146221511e37,2.9768093465213914e37,2.9788085468212716e37,2.9808077471211513e37,2.9828069474210315e37,2.9848061477209117e37,2.9868053480207914e37,2.9888045483206716e37,2.990803748620552e37,2.9928029489204315e37,2.9948021492203117e37,2.996801349520192e37,2.998800549820072e37,3.000799750119952e37,3.002798950419832e37,3.004798150719712e37,3.006797351019592e37,3.008796551319472e37,3.0107957516193523e37,3.012794951919232e37,3.014794152219112e37,3.0167933525189924e37,3.0187925528188726e37,3.0207917531187523e37,3.0227909534186325e37,3.0247901537185127e37,3.0267893540183924e37,3.0287885543182726e37,3.030787754618153e37,3.0327869549180325e37,3.0347861552179127e37,3.036785355517793e37,3.0387845558176726e37,3.040783756117553e37,3.042782956417433e37,3.044782156717313e37,3.046781357017193e37,3.048780557317073e37,3.0507797576169533e37,3.052778957916833e37,3.0547781582167132e37,3.0567773585165934e37,3.058776558816473e37,3.0607757591163533e37,3.0627749594162335e37,3.0647741597161133e37,3.0667733600159934e37,3.0687725603158736e37,3.070771760615754e37,3.0727709609156335e37,3.0747701612155137e37,3.076769361515394e37,3.0787685618152737e37,3.080767762115154e37,3.082766962415034e37,3.0847661627149138e37,3.086765363014794e37,3.088764563314674e37,3.0907637636145543e37,3.092762963914434e37,3.0947621642143142e37,3.0967613645141944e37,3.098760564814074e37,3.1007597651139543e37,3.1027589654138345e37,3.1047581657137143e37,3.1067573660135944e37,3.1087565663134746e37,3.1107557666133544e37,3.1127549669132346e37,3.1147541672131147e37,3.116753367512995e37,3.1187525678128747e37,3.120751768112755e37,3.122750968412635e37,3.1247501687125148e37,3.126749369012395e37,3.128748569312275e37,3.130747769612155e37,3.132746969912035e37,3.1347461702119152e37,3.1367453705117954e37,3.138744570811675e37,3.1407437711115554e37,3.1427429714114355e37,3.1447421717113153e37,3.1467413720111955e37,3.1487405723110756e37,3.1507397726109554e37,3.1527389729108356e37,3.1547381732107157e37,3.1567373735105955e37,3.1587365738104757e37,3.160735774110356e37,3.162734974410236e37,3.164734174710116e37,3.166733375009996e37,3.168732575309876e37,3.170731775609756e37,3.172730975909636e37,3.1747301762095163e37,3.176729376509396e37,3.178728576809276e37,3.1807277771091564e37,3.1827269774090365e37,3.1847261777089163e37,3.1867253780087965e37,3.1887245783086767e37,3.1907237786085564e37,3.1927229789084366e37,3.1947221792083168e37,3.1967213795081965e37,3.1987205798080767e37,3.200719780107957e37,3.2027189804078366e37,3.204718180707717e37,3.206717381007597e37,3.208716581307477e37,3.210715781607357e37,3.212714981907237e37,3.2147141822071173e37,3.216713382506997e37,3.218712582806877e37,3.2207117831067574e37,3.222710983406637e37,3.2247101837065173e37,3.2267093840063975e37,3.228708584306277e37,3.2307077846061574e37,3.2327069849060376e37,3.2347061852059178e37,3.2367053855057975e37,3.2387045858056777e37,3.240703786105558e37,3.2427029864054376e37,3.244702186705318e37,3.246701387005198e37,3.2487005873050777e37,3.250699787604958e37,3.252698987904838e37,3.2546981882047183e37,3.256697388504598e37,3.258696588804478e37,3.2606957891043584e37,3.262694989404238e37,3.2646941897041183e37,3.2666933900039985e37,3.268692590303878e37,3.2706917906037584e37,3.2726909909036386e37,3.2746901912035183e37,3.2766893915033985e37,3.2786885918032787e37,3.280687792103159e37,3.2826869924030386e37,3.284686192702919e37,3.286685393002799e37,3.2886845933026787e37,3.290683793602559e37,3.292682993902439e37,3.294682194202319e37,3.296681394502199e37,3.298680594802079e37,3.3006797951019594e37,3.302678995401839e37,3.3046781957017193e37,3.3066773960015995e37,3.308676596301479e37,3.3106757966013594e37,3.3126749969012396e37,3.3146741972011193e37,3.3166733975009995e37,3.3186725978008797e37,3.3206717981007594e37,3.3226709984006396e37,3.32467019870052e37,3.3266693990004e37,3.3286685993002797e37,3.33066779960016e37,3.33266699990004e37,3.33466620019992e37,3.3366654004998e37,3.33866460079968e37,3.34066380109956e37,3.34266300139944e37,3.3446622016993203e37,3.3466614019992005e37,3.34866060229908e37,3.3506598025989604e37,3.3526590028988406e37,3.3546582031987203e37,3.3566574034986005e37,3.3586566037984807e37,3.3606558040983604e37,3.3626550043982406e37,3.364654204698121e37,3.3666534049980005e37,3.3686526052978807e37,3.370651805597761e37,3.372651005897641e37,3.374650206197521e37,3.376649406497401e37,3.378648606797281e37,3.380647807097161e37,3.382647007397041e37,3.3846462076969213e37,3.386645407996801e37,3.388644608296681e37,3.3906438085965614e37,3.392643008896441e37,3.3946422091963213e37,3.3966414094962015e37,3.3986406097960817e37,3.4006398100959614e37,3.4026390103958416e37,3.404638210695722e37,3.4066374109956015e37,3.4086366112954817e37,3.410635811595362e37,3.4126350118952416e37,3.414634212195122e37,3.416633412495002e37,3.418632612794882e37,3.420631813094762e37,3.422631013394642e37,3.4246302136945223e37,3.426629413994402e37,3.428628614294282e37,3.4306278145941624e37,3.432627014894042e37,3.4346262151939223e37,3.4366254154938025e37,3.438624615793682e37,3.4406238160935624e37,3.4426230163934426e37,3.444622216693323e37,3.4466214169932025e37,3.4486206172930827e37,3.450619817592963e37,3.4526190178928426e37,3.454618218192723e37,3.456617418492603e37,3.4586166187924827e37,3.460615819092363e37,3.462615019392243e37,3.4646142196921233e37,3.466613419992003e37,3.468612620291883e37,3.4706118205917634e37,3.472611020891643e37,3.4746102211915233e37,3.4766094214914035e37,3.478608621791283e37,3.4806078220911634e37,3.4826070223910436e37,3.4846062226909233e37,3.4866054229908035e37,3.4886046232906837e37,3.490603823590564e37,3.4926030238904436e37,3.494602224190324e37,3.496601424490204e37,3.4986006247900837e37,3.500599825089964e37,3.502599025389844e37,3.504598225689724e37,3.506597425989604e37,3.508596626289484e37,3.5105958265893644e37,3.512595026889244e37,3.5145942271891243e37,3.5165934274890045e37,3.518592627788884e37,3.5205918280887644e37,3.5225910283886446e37,3.5245902286885243e37,3.5265894289884045e37,3.5285886292882847e37,3.5305878295881644e37,3.5325870298880446e37,3.534586230187925e37,3.536585430487805e37,3.5385846307876847e37,3.540583831087565e37,3.542583031387445e37,3.544582231687325e37,3.546581431987205e37,3.548580632287085e37,3.550579832586965e37,3.552579032886845e37,3.5545782331867253e37,3.5565774334866055e37,3.558576633786485e37,3.5605758340863654e37,3.5625750343862456e37,3.5645742346861253e37,3.5665734349860055e37,3.5685726352858857e37,3.5705718355857654e37,3.5725710358856456e37,3.574570236185526e37,3.5765694364854055e37,3.5785686367852857e37,3.580567837085166e37,3.582567037385046e37,3.584566237684926e37,3.586565437984806e37,3.588564638284686e37,3.590563838584566e37,3.592563038884446e37,3.5945622391843263e37,3.596561439484206e37,3.5985606397840862e37,3.6005598400839664e37,3.602559040383846e37,3.6045582406837263e37,3.6065574409836065e37,3.6085566412834867e37,3.6105558415833664e37,3.6125550418832466e37,3.614554242183127e37,3.6165534424830065e37,3.6185526427828867e37,3.620551843082767e37,3.6225510433826467e37,3.624550243682527e37,3.626549443982407e37,3.628548644282287e37,3.630547844582167e37,3.632547044882047e37,3.6345462451819273e37,3.636545445481807e37,3.6385446457816872e37,3.6405438460815674e37,3.642543046381447e37,3.6445422466813273e37,3.6465414469812075e37,3.6485406472810873e37,3.6505398475809674e37,3.6525390478808476e37,3.654538248180728e37,3.6565374484806076e37,3.6585366487804877e37,3.660535849080368e37,3.6625350493802477e37,3.664534249680128e37,3.666533449980008e37,3.6685326502798878e37,3.670531850579768e37,3.672531050879648e37,3.6745302511795283e37,3.676529451479408e37,3.6785286517792882e37,3.6805278520791684e37,3.682527052379048e37,3.6845262526789283e37,3.6865254529788085e37,3.6885246532786883e37,3.6905238535785685e37,3.6925230538784486e37,3.6945222541783284e37,3.6965214544782086e37,3.6985206547780887e37,3.700519855077969e37,3.7025190553778487e37,3.704518255677729e37,3.706517455977609e37,3.7085166562774888e37,3.710515856577369e37,3.712515056877249e37,3.714514257177129e37,3.716513457477009e37,3.7185126577768893e37,3.7205118580767694e37,3.722511058376649e37,3.7245102586765294e37,3.7265094589764095e37,3.7285086592762893e37,3.7305078595761695e37,3.7325070598760496e37,3.7345062601759294e37,3.7365054604758096e37,3.7385046607756898e37,3.7405038610755695e37,3.7425030613754497e37,3.74450226167533e37,3.74650146197521e37,3.74850066227509e37,3.75049986257497e37,3.75249906287485e37,3.75449826317473e37,3.75649746347461e37,3.7584966637744903e37,3.76049586407437e37,3.76249506437425e37,3.7644942646741304e37,3.76649346497401e37,3.7684926652738903e37,3.7704918655737705e37,3.7724910658736507e37,3.7744902661735304e37,3.7764894664734106e37,3.7784886667732908e37,3.7804878670731705e37,3.7824870673730507e37,3.784486267672931e37,3.7864854679728106e37,3.788484668272691e37,3.790483868572571e37,3.792483068872451e37,3.794482269172331e37,3.796481469472211e37,3.7984806697720913e37,3.800479870071971e37,3.802479070371851e37,3.8044782706717314e37,3.806477470971611e37,3.8084766712714913e37,3.8104758715713715e37,3.812475071871251e37,3.8144742721711314e37,3.8164734724710116e37,3.8184726727708918e37,3.8204718730707715e37,3.8224710733706517e37,3.824470273670532e37,3.8264694739704116e37,3.828468674270292e37,3.830467874570172e37,3.8324670748700517e37,3.834466275169932e37,3.836465475469812e37,3.8384646757696923e37,3.840463876069572e37,3.842463076369452e37,3.8444622766693324e37,3.846461476969212e37,3.8484606772690923e37,3.8504598775689725e37,3.852459077868852e37,3.8544582781687324e37,3.8564574784686126e37,3.8584566787684923e37,3.8604558790683725e37,3.8624550793682527e37,3.864454279668133e37,3.8664534799680126e37,3.868452680267893e37,3.870451880567773e37,3.8724510808676527e37,3.874450281167533e37,3.876449481467413e37,3.878448681767293e37,3.880447882067173e37,3.882447082367053e37,3.8844462826669334e37,3.886445482966813e37,3.8884446832666933e37,3.8904438835665735e37,3.892443083866453e37,3.8944422841663334e37,3.8964414844662136e37,3.8984406847660933e37,3.9004398850659735e37,3.9024390853658537e37,3.9044382856657334e37,3.9064374859656136e37,3.908436686265494e37,3.910435886565374e37,3.9124350868652537e37,3.914434287165134e37,3.916433487465014e37,3.918432687764894e37,3.920431888064774e37,3.922431088364654e37,3.924430288664534e37,3.926429488964414e37,3.9284286892642943e37,3.930427889564174e37,3.932427089864054e37,3.9344262901639344e37,3.9364254904638146e37,3.9384246907636943e37,3.9404238910635745e37,3.9424230913634547e37,3.9444222916633344e37,3.9464214919632146e37,3.948420692263095e37,3.9504198925629745e37,3.9524190928628547e37,3.954418293162735e37,3.956417493462615e37,3.958416693762495e37,3.960415894062375e37,3.962415094362255e37,3.964414294662135e37,3.966413494962015e37,3.9684126952618953e37,3.970411895561775e37,3.972411095861655e37,3.9744102961615354e37,3.976409496461415e37,3.9784086967612953e37,3.9804078970611755e37,3.9824070973610557e37,3.9844062976609354e37,3.9864054979608156e37,3.988404698260696e37,3.9904038985605755e37,3.9924030988604557e37,3.994402299160336e37,3.9964014994602156e37,3.998400699760096e37,4.000399900059976e37,4.002399100359856e37,4.004398300659736e37,4.006397500959616e37,4.0083967012594963e37,4.010395901559376e37,4.012395101859256e37,4.0143943021591364e37,4.016393502459016e37,4.0183927027588963e37,4.0203919030587765e37,4.022391103358656e37,4.0243903036585364e37,4.0263895039584166e37,4.028388704258297e37,4.0303879045581765e37,4.0323871048580567e37,4.034386305157937e37,4.0363855054578166e37,4.038384705757697e37,4.040383906057577e37,4.0423831063574567e37,4.044382306657337e37,4.046381506957217e37,4.0483807072570973e37,4.050379907556977e37,4.052379107856857e37,4.0543783081567374e37,4.056377508456617e37,4.0583767087564973e37,4.0603759090563775e37,4.062375109356257e37,4.0643743096561374e37,4.0663735099560176e37,4.0683727102558973e37,4.0703719105557775e37,4.0723711108556577e37,4.074370311155538e37,4.0763695114554176e37,4.078368711755298e37,4.080367912055178e37,4.0823671123550577e37,4.084366312654938e37,4.086365512954818e37,4.088364713254698e37,4.090363913554578e37,4.092363113854458e37,4.094362314154338e37,4.096361514454218e37,4.0983607147540983e37,4.1003599150539785e37,4.102359115353858e37,4.1043583156537384e37,4.1063575159536186e37,4.1083567162534983e37,4.1103559165533785e37,4.1123551168532587e37,4.1143543171531384e37,4.1163535174530186e37,4.118352717752899e37,4.120351918052779e37,4.1223511183526587e37,4.124350318652539e37,4.126349518952419e37,4.128348719252299e37,4.130347919552179e37,4.132347119852059e37,4.134346320151939e37,4.136345520451819e37,4.1383447207516993e37,4.140343921051579e37,4.1423431213514592e37,4.1443423216513394e37,4.1463415219512196e37,4.1483407222510993e37,4.1503399225509795e37,4.1523391228508597e37,4.1543383231507394e37,4.1563375234506196e37,4.1583367237505e37,4.1603359240503795e37,4.1623351243502597e37,4.16433432465014e37,4.16633352495002e37,4.1683327252499e37,4.17033192554978e37,4.17233112584966e37,4.17433032614954e37,4.17632952644942e37,4.1783287267493003e37,4.18032792704918e37,4.1823271273490602e37,4.1843263276489404e37,4.18632552794882e37,4.1883247282487003e37,4.1903239285485805e37,4.1923231288484607e37,4.1943223291483404e37,4.1963215294482206e37,4.198320729748101e37,4.2003199300479806e37,4.2023191303478607e37,4.204318330647741e37,4.2063175309476207e37,4.208316731247501e37,4.210315931547381e37,4.212315131847261e37,4.214314332147141e37,4.216313532447021e37,4.2183127327469013e37,4.220311933046781e37,4.2223111333466612e37,4.2243103336465414e37,4.226309533946421e37,4.2283087342463013e37,4.2303079345461815e37,4.2323071348460613e37,4.2343063351459415e37,4.2363055354458216e37,4.238304735745702e37,4.2403039360455816e37,4.2423031363454617e37,4.244302336645342e37,4.2463015369452217e37,4.248300737245102e37,4.250299937544982e37,4.2522991378448618e37,4.254298338144742e37,4.256297538444622e37,4.258296738744502e37,4.260295939044383e37,4.262295139344262e37,4.264294339644142e37,4.266293539944022e37,4.268292740243902e37,4.270291940543783e37,4.272291140843663e37,4.274290341143543e37,4.276289541443422e37,4.278288741743302e37,4.280287942043183e37,4.282287142343063e37,4.284286342642943e37,4.286285542942823e37,4.288284743242702e37,4.290283943542583e37,4.292283143842463e37,4.294282344142343e37,4.296281544442223e37,4.298280744742103e37,4.300279945041984e37,4.302279145341863e37,4.304278345641743e37,4.306277545941623e37,4.308276746241503e37,4.310275946541384e37,4.312275146841264e37,4.314274347141143e37,4.316273547441023e37,4.318272747740903e37,4.320271948040784e37,4.322271148340664e37,4.324270348640544e37,4.326269548940424e37,4.328268749240303e37,4.330267949540184e37,4.332267149840064e37,4.334266350139944e37,4.336265550439824e37,4.338264750739704e37,4.340263951039585e37,4.342263151339464e37,4.344262351639344e37,4.346261551939224e37,4.348260752239104e37,4.350259952538985e37,4.352259152838865e37,4.354258353138744e37,4.356257553438624e37,4.358256753738504e37,4.360255954038385e37,4.362255154338265e37,4.364254354638145e37,4.366253554938025e37,4.368252755237904e37,4.370251955537785e37,4.372251155837665e37,4.374250356137545e37,4.376249556437425e37,4.378248756737305e37,4.380247957037185e37,4.382247157337065e37,4.384246357636945e37,4.386245557936825e37,4.388244758236705e37,4.390243958536586e37,4.392243158836466e37,4.394242359136345e37,4.396241559436225e37,4.398240759736105e37,4.400239960035986e37,4.402239160335866e37,4.404238360635746e37,4.406237560935625e37,4.408236761235505e37,4.410235961535386e37,4.412235161835266e37,4.414234362135146e37,4.416233562435026e37,4.418232762734906e37,4.420231963034786e37,4.422231163334666e37,4.424230363634546e37,4.426229563934426e37,4.428228764234306e37,4.430227964534187e37,4.432227164834066e37,4.434226365133946e37,4.436225565433826e37,4.438224765733706e37,4.440223966033587e37,4.442223166333467e37,4.444222366633347e37,4.446221566933226e37,4.448220767233106e37,4.450219967532987e37,4.452219167832867e37,4.454218368132747e37,4.456217568432627e37,4.458216768732507e37,4.460215969032387e37,4.462215169332267e37,4.464214369632147e37,4.466213569932027e37,4.468212770231907e37,4.470211970531788e37,4.472211170831667e37,4.474210371131547e37,4.476209571431427e37,4.478208771731307e37,4.480207972031188e37,4.482207172331068e37,4.484206372630948e37,4.486205572930827e37,4.488204773230707e37,4.490203973530588e37,4.492203173830468e37,4.494202374130348e37,4.496201574430228e37,4.498200774730107e37,4.500199975029988e37,4.502199175329868e37,4.504198375629748e37,4.506197575929628e37,4.508196776229508e37,4.510195976529389e37,4.512195176829268e37,4.514194377129148e37,4.516193577429028e37,4.518192777728908e37,4.520191978028789e37,4.522191178328669e37,4.524190378628548e37,4.526189578928428e37,4.528188779228308e37,4.530187979528189e37,4.532187179828069e37,4.534186380127949e37,4.536185580427829e37,4.538184780727708e37,4.540183981027589e37,4.542183181327469e37,4.544182381627349e37,4.546181581927229e37,4.548180782227109e37,4.550179982526989e37,4.552179182826869e37,4.554178383126749e37,4.556177583426629e37,4.558176783726509e37,4.56017598402639e37,4.56217518432627e37,4.564174384626149e37,4.566173584926029e37,4.568172785225909e37,4.57017198552579e37,4.57217118582567e37,4.57417038612555e37,4.57616958642543e37,4.578168786725309e37,4.58016798702519e37,4.58216718732507e37,4.58416638762495e37,4.58616558792483e37,4.58816478822471e37,4.59016398852459e37,4.59216318882447e37,4.59416238912435e37,4.59616158942423e37,4.59816078972411e37,4.600159990023991e37,4.602159190323871e37,4.60415839062375e37,4.60615759092363e37,4.60815679122351e37,4.610155991523391e37,4.612155191823271e37,4.614154392123151e37,4.61615359242303e37,4.61815279272291e37,4.620151993022791e37,4.622151193322671e37,4.624150393622551e37,4.626149593922431e37,4.628148794222311e37,4.630147994522191e37,4.632147194822071e37,4.634146395121951e37,4.636145595421831e37,4.638144795721711e37,4.640143996021592e37,4.642143196321471e37,4.644142396621351e37,4.646141596921231e37,4.648140797221111e37,4.650139997520992e37,4.652139197820872e37,4.654138398120752e37,4.656137598420631e37,4.658136798720511e37,4.660135999020392e37,4.662135199320272e37,4.664134399620152e37,4.666133599920032e37,4.668132800219912e37,4.670132000519792e37,4.672131200819672e37,4.674130401119552e37,4.676129601419432e37,4.678128801719312e37,4.680128002019193e37,4.682127202319072e37,4.684126402618952e37,4.686125602918832e37,4.688124803218712e37,4.690124003518593e37,4.692123203818473e37,4.694122404118353e37,4.696121604418232e37,4.698120804718112e37,4.700120005017993e37,4.702119205317873e37,4.704118405617753e37,4.706117605917633e37,4.708116806217512e37,4.710116006517393e37,4.712115206817273e37,4.714114407117153e37,4.716113607417033e37,4.718112807716913e37,4.720112008016794e37,4.722111208316673e37,4.724110408616553e37,4.726109608916433e37,4.728108809216313e37,4.730108009516194e37,4.732107209816074e37,4.734106410115953e37,4.736105610415833e37,4.738104810715713e37,4.740104011015594e37,4.742103211315474e37,4.744102411615354e37,4.746101611915234e37,4.748100812215113e37,4.750100012514994e37,4.752099212814874e37,4.754098413114754e37,4.756097613414634e37,4.758096813714514e37,4.760096014014394e37,4.762095214314274e37,4.764094414614154e37,4.766093614914034e37,4.768092815213914e37,4.770092015513795e37,4.772091215813675e37,4.774090416113554e37,4.776089616413434e37,4.778088816713314e37,4.780088017013195e37,4.782087217313075e37,4.784086417612955e37,4.786085617912835e37,4.788084818212714e37,4.790084018512595e37,4.792083218812475e37,4.794082419112355e37,4.796081619412235e37,4.798080819712115e37,4.800080020011995e37,4.802079220311875e37,4.804078420611755e37,4.806077620911635e37,4.808076821211515e37,4.810076021511396e37,4.812075221811276e37,4.814074422111155e37,4.816073622411035e37,4.818072822710915e37,4.820072023010796e37,4.822071223310676e37,4.824070423610556e37,4.826069623910435e37,4.828068824210315e37,4.830068024510196e37,4.832067224810076e37,4.834066425109956e37,4.836065625409836e37,4.838064825709716e37,4.840064026009596e37,4.842063226309476e37,4.844062426609356e37,4.846061626909236e37,4.848060827209116e37,4.850060027508997e37,4.852059227808876e37,4.854058428108756e37,4.856057628408636e37,4.858056828708516e37,4.860056029008397e37,4.862055229308277e37,4.864054429608157e37,4.866053629908036e37,4.8680528302079165e37,4.870052030507797e37,4.872051230807677e37,4.874050431107557e37,4.876049631407437e37,4.878048831707317e37,4.880048032007197e37,4.882047232307077e37,4.884046432606957e37,4.886045632906837e37,4.888044833206717e37,4.890044033506598e37,4.892043233806477e37,4.894042434106357e37,4.896041634406237e37,4.898040834706117e37,4.900040035005998e37,4.902039235305878e37,4.904038435605758e37,4.906037635905637e37,4.9080368362055175e37,4.910036036505398e37,4.912035236805278e37,4.914034437105158e37,4.916033637405038e37,4.9180328377049175e37,4.920032038004798e37,4.922031238304678e37,4.924030438604558e37,4.926029638904438e37,4.928028839204318e37,4.930028039504199e37,4.932027239804078e37,4.934026440103958e37,4.936025640403838e37,4.938024840703718e37,4.940024041003599e37,4.942023241303479e37,4.944022441603358e37,4.946021641903238e37,4.9480208422031185e37,4.950020042502999e37,4.952019242802879e37,4.954018443102759e37,4.956017643402639e37,4.9580168437025185e37,4.960016044002399e37,4.962015244302279e37,4.964014444602159e37,4.966013644902039e37,4.968012845201919e37,4.970012045501799e37,4.972011245801679e37,4.974010446101559e37,4.976009646401439e37,4.9780088467013195e37,4.9800080470012e37,4.98200724730108e37,4.984006447600959e37,4.986005647900839e37,4.9880048482007195e37,4.9900040485006e37,4.99200324880048e37,4.99400244910036e37,4.99600164940024e37,4.9980008497001195e37,5.00000005e37,5.00199925029988e37,5.00399845059976e37,5.00599765089964e37,5.00799685119952e37,5.0099960514994e37,5.01199525179928e37,5.01399445209916e37,5.01599365239904e37,5.0179928526989205e37,5.019992052998801e37,5.021991253298681e37,5.02399045359856e37,5.02598965389844e37,5.0279888541983205e37,5.029988054498201e37,5.031987254798081e37,5.033986455097961e37,5.03598565539784e37,5.0379848556977205e37,5.039984055997601e37,5.041983256297481e37,5.043982456597361e37,5.045981656897241e37,5.047980857197121e37,5.049980057497001e37,5.051979257796881e37,5.053978458096761e37,5.055977658396641e37,5.0579768586965215e37,5.059976058996402e37,5.061975259296281e37,5.063974459596161e37,5.065973659896041e37,5.0679728601959215e37,5.069972060495802e37,5.071971260795682e37,5.073970461095562e37,5.075969661395441e37,5.0779688616953215e37,5.079968061995202e37,5.081967262295082e37,5.083966462594962e37,5.085965662894842e37,5.0879648631947215e37,5.089964063494602e37,5.091963263794482e37,5.093962464094362e37,5.095961664394242e37,5.0979608646941225e37,5.099960064994003e37,5.101959265293882e37,5.103958465593762e37,5.105957665893642e37,5.1079568661935225e37,5.109956066493403e37,5.111955266793283e37,5.113954467093163e37,5.115953667393042e37,5.1179528676929225e37,5.119952067992803e37,5.121951268292683e37,5.123950468592563e37,5.125949668892443e37,5.127948869192323e37,5.129948069492203e37,5.131947269792083e37,5.133946470091963e37,5.135945670391843e37,5.1379448706917235e37,5.139944070991604e37,5.141943271291483e37,5.143942471591363e37,5.145941671891243e37,5.1479408721911235e37,5.149940072491004e37,5.151939272790884e37,5.153938473090763e37,5.155937673390643e37,5.1579368736905235e37,5.159936073990404e37,5.161935274290284e37,5.163934474590164e37,5.165933674890044e37,5.167932875189924e37,5.169932075489804e37,5.171931275789684e37,5.173930476089564e37,5.175929676389444e37,5.1779288766893245e37,5.179928076989204e37,5.181927277289084e37,5.183926477588964e37,5.185925677888844e37,5.1879248781887245e37,5.189924078488605e37,5.191923278788485e37,5.193922479088364e37,5.195921679388244e37,5.1979208796881245e37,5.199920079988005e37,5.201919280287885e37,5.203918480587765e37,5.205917680887645e37,5.207916881187525e37,5.209916081487405e37,5.211915281787285e37,5.213914482087165e37,5.215913682387045e37,5.2179128826869255e37,5.219912082986805e37,5.221911283286685e37,5.223910483586565e37,5.225909683886445e37,5.2279088841863255e37,5.229908084486206e37,5.231907284786086e37,5.233906485085965e37,5.235905685385845e37,5.237904885685726e37,5.239904085985606e37,5.241903286285486e37,5.243902486585366e37,5.245901686885245e37,5.247900887185126e37,5.249900087485006e37,5.251899287784886e37,5.253898488084766e37,5.255897688384646e37,5.2578968886845265e37,5.259896088984406e37,5.261895289284286e37,5.263894489584166e37,5.265893689884046e37,5.2678928901839265e37,5.269892090483807e37,5.271891290783686e37,5.273890491083566e37,5.275889691383446e37,5.277888891683327e37,5.279888091983207e37,5.281887292283087e37,5.283886492582967e37,5.285885692882846e37,5.287884893182727e37,5.289884093482607e37,5.291883293782487e37,5.293882494082367e37,5.295881694382247e37,5.297880894682127e37,5.299880094982007e37,5.301879295281887e37,5.303878495581767e37,5.305877695881647e37,5.3078768961815275e37,5.309876096481408e37,5.311875296781287e37,5.313874497081167e37,5.315873697381047e37,5.317872897680928e37,5.319872097980808e37,5.321871298280688e37,5.323870498580568e37,5.325869698880447e37,5.327868899180328e37,5.329868099480208e37,5.331867299780088e37,5.333866500079968e37,5.335865700379848e37,5.337864900679728e37,5.339864100979608e37,5.341863301279488e37,5.343862501579368e37,5.345861701879248e37,5.347860902179129e37,5.349860102479009e37,5.351859302778888e37,5.353858503078768e37,5.355857703378648e37,5.357856903678529e37,5.359856103978409e37,5.361855304278289e37,5.363854504578168e37,5.365853704878048e37,5.367852905177929e37,5.369852105477809e37,5.371851305777689e37,5.373850506077569e37,5.375849706377449e37,5.377848906677329e37,5.379848106977209e37,5.381847307277089e37,5.383846507576969e37,5.385845707876849e37,5.38784490817673e37,5.389844108476609e37,5.391843308776489e37,5.393842509076369e37,5.395841709376249e37,5.39784090967613e37,5.39984010997601e37,5.40183931027589e37,5.403838510575769e37,5.405837710875649e37,5.40783691117553e37,5.40983611147541e37,5.41183531177529e37,5.41383451207517e37,5.415833712375049e37,5.41783291267493e37,5.41983211297481e37,5.42183131327469e37,5.42383051357457e37,5.42582971387445e37,5.427828914174331e37,5.42982811447421e37,5.43182731477409e37,5.43382651507397e37,5.43582571537385e37,5.437824915673731e37,5.439824115973611e37,5.441823316273491e37,5.44382251657337e37,5.44582171687325e37,5.447820917173131e37,5.449820117473011e37,5.451819317772891e37,5.453818518072771e37,5.45581771837265e37,5.457816918672531e37,5.459816118972411e37,5.461815319272291e37,5.463814519572171e37,5.465813719872051e37,5.467812920171932e37,5.469812120471811e37,5.471811320771691e37,5.473810521071571e37,5.475809721371451e37,5.477808921671332e37,5.479808121971212e37,5.481807322271091e37,5.483806522570971e37,5.485805722870851e37,5.487804923170732e37,5.489804123470612e37,5.491803323770492e37,5.493802524070372e37,5.495801724370251e37,5.497800924670132e37,5.499800124970012e37,5.501799325269892e37,5.503798525569772e37,5.505797725869652e37,5.507796926169532e37,5.509796126469412e37,5.511795326769292e37,5.513794527069172e37,5.515793727369052e37,5.517792927668933e37,5.519792127968813e37,5.521791328268692e37,5.523790528568572e37,5.525789728868452e37,5.527788929168333e37,5.529788129468213e37,5.531787329768093e37,5.533786530067973e37,5.535785730367852e37,5.537784930667733e37,5.539784130967613e37,5.541783331267493e37,5.543782531567373e37,5.545781731867253e37,5.547780932167133e37,5.549780132467013e37,5.551779332766893e37,5.553778533066773e37,5.555777733366653e37,5.557776933666534e37,5.559776133966414e37,5.561775334266293e37,5.563774534566173e37,5.565773734866053e37,5.567772935165934e37,5.569772135465814e37,5.571771335765694e37,5.573770536065573e37,5.575769736365453e37,5.577768936665334e37,5.579768136965214e37,5.581767337265094e37,5.583766537564974e37,5.585765737864854e37,5.587764938164734e37,5.589764138464614e37,5.591763338764494e37,5.593762539064374e37,5.595761739364254e37,5.597760939664135e37,5.599760139964014e37,5.601759340263894e37,5.603758540563774e37,5.605757740863654e37,5.607756941163535e37,5.609756141463415e37,5.611755341763295e37,5.613754542063174e37,5.615753742363054e37,5.617752942662935e37,5.619752142962815e37,5.621751343262695e37,5.623750543562575e37,5.625749743862454e37,5.627748944162335e37,5.629748144462215e37,5.631747344762095e37,5.633746545061975e37,5.635745745361855e37,5.637744945661736e37,5.639744145961615e37,5.641743346261495e37,5.643742546561375e37,5.645741746861255e37,5.647740947161136e37,5.649740147461016e37,5.651739347760896e37,5.653738548060775e37,5.655737748360655e37,5.657736948660536e37,5.659736148960416e37,5.661735349260296e37,5.663734549560176e37,5.665733749860055e37,5.667732950159936e37,5.669732150459816e37,5.671731350759696e37,5.673730551059576e37,5.675729751359456e37,5.677728951659337e37,5.679728151959216e37,5.681727352259096e37,5.683726552558976e37,5.685725752858856e37,5.687724953158737e37,5.689724153458617e37,5.691723353758496e37,5.693722554058376e37,5.695721754358256e37,5.697720954658137e37,5.699720154958017e37,5.701719355257897e37,5.703718555557777e37,5.705717755857656e37,5.707716956157537e37,5.709716156457417e37,5.711715356757297e37,5.713714557057177e37,5.715713757357057e37,5.717712957656937e37,5.719712157956817e37,5.721711358256697e37,5.723710558556577e37,5.725709758856457e37,5.727708959156338e37,5.729708159456218e37,5.731707359756097e37,5.733706560055977e37,5.735705760355857e37,5.737704960655738e37,5.739704160955618e37,5.741703361255498e37,5.743702561555378e37,5.745701761855257e37,5.747700962155138e37,5.749700162455018e37,5.751699362754898e37,5.753698563054778e37,5.755697763354658e37,5.757696963654538e37,5.759696163954418e37,5.761695364254298e37,5.763694564554178e37,5.765693764854058e37,5.767692965153939e37,5.769692165453819e37,5.771691365753698e37,5.773690566053578e37,5.775689766353458e37,5.777688966653339e37,5.779688166953219e37,5.781687367253099e37,5.783686567552978e37,5.785685767852858e37,5.787684968152739e37,5.789684168452619e37,5.791683368752499e37,5.793682569052379e37,5.795681769352259e37,5.797680969652139e37,5.799680169952019e37,5.801679370251899e37,5.803678570551779e37,5.805677770851659e37,5.80767697115154e37,5.809676171451419e37,5.811675371751299e37,5.813674572051179e37,5.815673772351059e37,5.81767297265094e37,5.81967217295082e37,5.8216713732507e37,5.823670573550579e37,5.825669773850459e37,5.82766897415034e37,5.82966817445022e37,5.8316673747501e37,5.83366657504998e37,5.835665775349859e37,5.83766497564974e37,5.83966417594962e37,5.8416633762495e37,5.84366257654938e37,5.84566177684926e37,5.847660977149141e37,5.84966017744902e37,5.8516593777489e37,5.85365857804878e37,5.85565777834866e37,5.857656978648541e37,5.859656178948421e37,5.861655379248301e37,5.86365457954818e37,5.86565377984806e37,5.867652980147941e37,5.869652180447821e37,5.871651380747701e37,5.873650581047581e37,5.87564978134746e37,5.877648981647341e37,5.879648181947221e37,5.881647382247101e37,5.883646582546981e37,5.885645782846861e37,5.887644983146742e37,5.889644183446621e37,5.891643383746501e37,5.893642584046381e37,5.895641784346261e37,5.897640984646142e37,5.899640184946022e37,5.901639385245901e37,5.903638585545781e37,5.905637785845661e37,5.907636986145542e37,5.909636186445422e37,5.911635386745302e37,5.913634587045182e37,5.915633787345061e37,5.917632987644942e37,5.919632187944822e37,5.921631388244702e37,5.923630588544582e37,5.925629788844462e37,5.927628989144342e37,5.929628189444222e37,5.931627389744102e37,5.933626590043982e37,5.935625790343862e37,5.937624990643743e37,5.939624190943623e37,5.941623391243502e37,5.943622591543382e37,5.945621791843262e37,5.947620992143143e37,5.949620192443023e37,5.951619392742903e37,5.953618593042782e37,5.9556177933426625e37,5.957616993642543e37,5.959616193942423e37,5.961615394242303e37,5.963614594542183e37,5.965613794842063e37,5.967612995141943e37,5.969612195441823e37,5.971611395741703e37,5.973610596041583e37,5.975609796341463e37,5.977608996641344e37,5.979608196941224e37,5.981607397241103e37,5.983606597540983e37,5.985605797840863e37,5.987604998140744e37,5.989604198440624e37,5.991603398740504e37,5.993602599040383e37,5.9956017993402635e37,5.997600999640144e37,5.999600199940024e37,6.001599400239904e37,6.003598600539784e37,6.005597800839664e37,6.007597001139544e37,6.009596201439424e37,6.011595401739304e37,6.013594602039184e37,6.015593802339064e37,6.017593002638945e37,6.019592202938824e37,6.021591403238704e37,6.023590603538584e37,6.025589803838464e37,6.027589004138345e37,6.029588204438225e37,6.031587404738105e37,6.033586605037984e37,6.0355858053378645e37,6.037585005637745e37,6.039584205937625e37,6.041583406237505e37,6.043582606537385e37,6.0455818068372645e37,6.047581007137145e37,6.049580207437025e37,6.051579407736905e37,6.053578608036785e37,6.055577808336665e37,6.057577008636546e37,6.059576208936425e37,6.061575409236305e37,6.063574609536185e37,6.065573809836065e37,6.067573010135946e37,6.069572210435826e37,6.071571410735706e37,6.073570611035585e37,6.0755698113354655e37,6.077569011635346e37,6.079568211935226e37,6.081567412235106e37,6.083566612534986e37,6.0855658128348655e37,6.087565013134746e37,6.089564213434626e37,6.091563413734506e37,6.093562614034386e37,6.095561814334266e37,6.097561014634147e37,6.099560214934026e37,6.101559415233906e37,6.103558615533786e37,6.1055578158336665e37,6.107557016133547e37,6.109556216433427e37,6.111555416733306e37,6.113554617033186e37,6.1155538173330665e37,6.117553017632947e37,6.119552217932827e37,6.121551418232707e37,6.123550618532587e37,6.1255498188324665e37,6.127549019132347e37,6.129548219432227e37,6.131547419732107e37,6.133546620031987e37,6.135545820331867e37,6.137545020631747e37,6.139544220931627e37,6.141543421231507e37,6.143542621531387e37,6.1455418218312675e37,6.147541022131148e37,6.149540222431028e37,6.151539422730907e37,6.153538623030787e37,6.1555378233306675e37,6.157537023630548e37,6.159536223930428e37,6.161535424230308e37,6.163534624530187e37,6.1655338248300675e37,6.167533025129948e37,6.169532225429828e37,6.171531425729708e37,6.173530626029588e37,6.175529826329468e37,6.177529026629348e37,6.179528226929228e37,6.181527427229108e37,6.183526627528988e37,6.1855258278288685e37,6.187525028128749e37,6.189524228428629e37,6.191523428728508e37,6.193522629028388e37,6.1955218293282685e37,6.197521029628149e37,6.199520229928029e37,6.201519430227909e37,6.203518630527788e37,6.2055178308276685e37,6.207517031127549e37,6.209516231427429e37,6.211515431727309e37,6.213514632027189e37,6.2155138323270695e37,6.217513032626949e37,6.219512232926829e37,6.221511433226709e37,6.223510633526589e37,6.2255098338264695e37,6.22750903412635e37,6.229508234426229e37,6.231507434726109e37,6.233506635025989e37,6.2355058353258695e37,6.23750503562575e37,6.23950423592563e37,6.24150343622551e37,6.243502636525389e37,6.2455018368252695e37,6.24750103712515e37,6.24950023742503e37,6.25149943772491e37,6.25349863802479e37,6.25549783832467e37,6.25749703862455e37,6.25949623892443e37,6.26149543922431e37,6.26349463952419e37,6.2654938398240705e37,6.267493040123951e37,6.26949224042383e37,6.27149144072371e37,6.27349064102359e37,6.2754898413234705e37,6.277489041623351e37,6.279488241923231e37,6.281487442223111e37,6.28348664252299e37,6.2854858428228705e37,6.287485043122751e37,6.289484243422631e37,6.291483443722511e37,6.293482644022391e37,6.295481844322271e37,6.297481044622151e37,6.299480244922031e37,6.301479445221911e37,6.303478645521791e37,6.3054778458216715e37,6.307477046121552e37,6.309476246421431e37,6.311475446721311e37,6.313474647021191e37,6.3154738473210715e37,6.317473047620952e37,6.319472247920832e37,6.321471448220711e37,6.323470648520591e37,6.325469848820472e37,6.327469049120352e37,6.329468249420232e37,6.331467449720112e37,6.333466650019992e37,6.335465850319872e37,6.337465050619752e37,6.339464250919632e37,6.341463451219512e37,6.343462651519392e37,6.3454618518192725e37,6.347461052119152e37,6.349460252419032e37,6.351459452718912e37,6.353458653018792e37,6.3554578533186725e37,6.357457053618553e37,6.359456253918433e37,6.361455454218312e37,6.363454654518192e37,6.365453854818073e37,6.367453055117953e37,6.369452255417833e37,6.371451455717713e37,6.373450656017592e37,6.375449856317473e37,6.377449056617353e37,6.379448256917233e37,6.381447457217113e37,6.383446657516993e37,6.3854458578168735e37,6.387445058116753e37,6.389444258416633e37,6.391443458716513e37,6.393442659016393e37,6.3954418593162735e37,6.397441059616154e37,6.399440259916034e37,6.401439460215913e37,6.403438660515793e37,6.405437860815674e37,6.407437061115554e37,6.409436261415434e37,6.411435461715314e37,6.413434662015193e37,6.415433862315074e37,6.417433062614954e37,6.419432262914834e37,6.421431463214714e37,6.423430663514594e37,6.4254298638144745e37,6.427429064114354e37,6.429428264414234e37,6.431427464714114e37,6.433426665013994e37,6.4354258653138745e37,6.437425065613755e37,6.439424265913634e37,6.441423466213514e37,6.443422666513394e37,6.445421866813275e37,6.447421067113155e37,6.449420267413035e37,6.451419467712915e37,6.453418668012794e37,6.455417868312675e37,6.457417068612555e37,6.459416268912435e37,6.461415469212315e37,6.463414669512195e37,6.465413869812075e37,6.467413070111955e37,6.469412270411835e37,6.471411470711715e37,6.473410671011595e37,6.475409871311476e37,6.477409071611356e37,6.479408271911235e37,6.481407472211115e37,6.483406672510995e37,6.485405872810876e37,6.487405073110756e37,6.489404273410636e37,6.491403473710515e37,6.493402674010395e37,6.495401874310276e37,6.497401074610156e37,6.499400274910036e37,6.501399475209916e37,6.503398675509796e37,6.505397875809676e37,6.507397076109556e37,6.509396276409436e37,6.511395476709316e37,6.513394677009196e37,6.515393877309077e37,6.517393077608957e37,6.519392277908836e37,6.521391478208716e37,6.523390678508596e37,6.525389878808477e37,6.527389079108357e37,6.529388279408237e37,6.531387479708116e37,6.533386680007996e37,6.535385880307877e37,6.537385080607757e37,6.539384280907637e37,6.541383481207517e37,6.543382681507397e37,6.545381881807277e37,6.547381082107157e37,6.549380282407037e37,6.551379482706917e37,6.553378683006797e37,6.555377883306678e37,6.557377083606557e37,6.559376283906437e37,6.561375484206317e37,6.563374684506197e37,6.565373884806078e37,6.567373085105958e37,6.569372285405838e37,6.571371485705717e37,6.573370686005597e37,6.575369886305478e37,6.577369086605358e37,6.579368286905238e37,6.581367487205118e37,6.583366687504997e37,6.585365887804878e37,6.587365088104758e37,6.589364288404638e37,6.591363488704518e37,6.593362689004398e37,6.595361889304279e37,6.597361089604158e37,6.599360289904038e37,6.601359490203918e37,6.603358690503798e37,6.605357890803679e37,6.607357091103559e37,6.609356291403439e37,6.611355491703318e37,6.613354692003198e37,6.615353892303079e37,6.617353092602959e37,6.619352292902839e37,6.621351493202719e37,6.623350693502598e37,6.625349893802479e37,6.627349094102359e37,6.629348294402239e37,6.631347494702119e37,6.633346695001999e37,6.63534589530188e37,6.637345095601759e37,6.639344295901639e37,6.641343496201519e37,6.643342696501399e37,6.64534189680128e37,6.64734109710116e37,6.649340297401039e37,6.651339497700919e37,6.653338698000799e37,6.65533789830068e37,6.65733709860056e37,6.65933629890044e37,6.66133549920032e37,6.663334699500199e37,6.66533389980008e37,6.66733310009996e37,6.66933230039984e37,6.67133150069972e37,6.6733307009996e37,6.67532990129948e37,6.67732910159936e37,6.67932830189924e37,6.68132750219912e37,6.683326702499e37,6.685325902798881e37,6.687325103098761e37,6.68932430339864e37,6.69132350369852e37,6.6933227039984e37,6.695321904298281e37,6.697321104598161e37,6.699320304898041e37,6.70131950519792e37,6.7033187054978e37,6.705317905797681e37,6.707317106097561e37,6.709316306397441e37,6.711315506697321e37,6.713314706997201e37,6.715313907297081e37,6.717313107596961e37,6.719312307896841e37,6.721311508196721e37,6.723310708496601e37,6.725309908796482e37,6.727309109096362e37,6.729308309396241e37,6.731307509696121e37,6.733306709996001e37,6.735305910295882e37,6.737305110595762e37,6.739304310895642e37,6.741303511195521e37,6.743302711495401e37,6.745301911795282e37,6.747301112095162e37,6.749300312395042e37,6.751299512694922e37,6.753298712994802e37,6.755297913294682e37,6.757297113594562e37,6.759296313894442e37,6.761295514194322e37,6.763294714494202e37,6.765293914794083e37,6.767293115093962e37,6.769292315393842e37,6.771291515693722e37,6.773290715993602e37,6.775289916293483e37,6.777289116593363e37,6.779288316893243e37,6.781287517193122e37,6.783286717493002e37,6.785285917792883e37,6.787285118092763e37,6.789284318392643e37,6.791283518692523e37,6.793282718992402e37,6.795281919292283e37,6.797281119592163e37,6.799280319892043e37,6.801279520191923e37,6.803278720491803e37,6.805277920791684e37,6.807277121091563e37,6.809276321391443e37,6.811275521691323e37,6.813274721991203e37,6.815273922291084e37,6.817273122590964e37,6.819272322890844e37,6.821271523190723e37,6.823270723490603e37,6.825269923790484e37,6.827269124090364e37,6.829268324390244e37,6.831267524690124e37,6.833266724990003e37,6.835265925289884e37,6.837265125589764e37,6.839264325889644e37,6.841263526189524e37,6.843262726489404e37,6.845261926789285e37,6.847261127089164e37,6.849260327389044e37,6.851259527688924e37,6.853258727988804e37,6.855257928288685e37,6.857257128588565e37,6.859256328888444e37,6.861255529188324e37,6.863254729488204e37,6.865253929788085e37,6.867253130087965e37,6.869252330387845e37,6.871251530687725e37,6.873250730987604e37,6.875249931287485e37,6.877249131587365e37,6.879248331887245e37,6.881247532187125e37,6.883246732487005e37,6.885245932786885e37,6.887245133086765e37,6.889244333386645e37,6.891243533686525e37,6.893242733986405e37,6.895241934286286e37,6.897241134586166e37,6.899240334886045e37,6.901239535185925e37,6.903238735485805e37,6.905237935785686e37,6.907237136085566e37,6.909236336385446e37,6.911235536685325e37,6.913234736985205e37,6.915233937285086e37,6.917233137584966e37,6.919232337884846e37,6.921231538184726e37,6.923230738484606e37,6.925229938784486e37,6.927229139084366e37,6.929228339384246e37,6.931227539684126e37,6.933226739984006e37,6.935225940283887e37,6.937225140583767e37,6.939224340883646e37,6.941223541183526e37,6.943222741483406e37,6.945221941783287e37,6.947221142083167e37,6.949220342383047e37,6.951219542682926e37,6.953218742982806e37,6.955217943282687e37,6.957217143582567e37,6.959216343882447e37,6.961215544182327e37,6.963214744482207e37,6.965213944782087e37,6.967213145081967e37,6.969212345381847e37,6.971211545681727e37,6.973210745981607e37,6.975209946281488e37,6.977209146581367e37,6.979208346881247e37,6.981207547181127e37,6.983206747481007e37,6.985205947780888e37,6.987205148080768e37,6.989204348380648e37,6.991203548680527e37,6.993202748980407e37,6.995201949280288e37,6.997201149580168e37,6.999200349880048e37,7.001199550179928e37,7.003198750479807e37,7.005197950779688e37,7.007197151079568e37,7.009196351379448e37,7.011195551679328e37,7.013194751979208e37,7.015193952279089e37,7.017193152578968e37,7.019192352878848e37,7.021191553178728e37,7.023190753478608e37,7.025189953778489e37,7.027189154078369e37,7.029188354378248e37,7.031187554678128e37,7.033186754978008e37,7.035185955277889e37,7.037185155577769e37,7.039184355877649e37,7.041183556177529e37,7.043182756477408e37,7.045181956777289e37,7.047181157077169e37,7.049180357377049e37,7.051179557676929e37,7.053178757976809e37,7.05517795827669e37,7.057177158576569e37,7.059176358876449e37,7.061175559176329e37,7.063174759476209e37,7.06517395977609e37,7.06717316007597e37,7.069172360375849e37,7.071171560675729e37,7.073170760975609e37,7.07516996127549e37,7.07716916157537e37,7.07916836187525e37,7.08116756217513e37,7.0831667624750095e37,7.08516596277489e37,7.08716516307477e37,7.08916436337465e37,7.09116356367453e37,7.09316276397441e37,7.09516196427429e37,7.09716116457417e37,7.09916036487405e37,7.10115956517393e37,7.10315876547381e37,7.105157965773691e37,7.107157166073571e37,7.10915636637345e37,7.11115556667333e37,7.11315476697321e37,7.115153967273091e37,7.117153167572971e37,7.119152367872851e37,7.12115156817273e37,7.1231507684726105e37,7.125149968772491e37,7.127149169072371e37,7.129148369372251e37,7.131147569672131e37,7.133146769972011e37,7.135145970271891e37,7.137145170571771e37,7.139144370871651e37,7.141143571171531e37,7.143142771471411e37,7.145141971771292e37,7.147141172071172e37,7.149140372371051e37,7.151139572670931e37,7.153138772970811e37,7.155137973270692e37,7.157137173570572e37,7.159136373870452e37,7.161135574170331e37,7.1631347744702115e37,7.165133974770092e37,7.167133175069972e37,7.169132375369852e37,7.171131575669732e37,7.173130775969612e37,7.175129976269492e37,7.177129176569372e37,7.179128376869252e37,7.181127577169132e37,7.183126777469012e37,7.185125977768893e37,7.187125178068772e37,7.189124378368652e37,7.191123578668532e37,7.1931227789684125e37,7.195121979268293e37,7.197121179568173e37,7.199120379868053e37,7.201119580167932e37,7.2031187804678125e37,7.205117980767693e37,7.207117181067573e37,7.209116381367453e37,7.211115581667333e37,7.2131147819672125e37,7.215113982267093e37,7.217113182566973e37,7.219112382866853e37,7.221111583166733e37,7.223110783466613e37,7.225109983766494e37,7.227109184066373e37,7.229108384366253e37,7.231107584666133e37,7.2331067849660135e37,7.235105985265894e37,7.237105185565774e37,7.239104385865653e37,7.241103586165533e37,7.2431027864654135e37,7.245101986765294e37,7.247101187065174e37,7.249100387365054e37,7.251099587664934e37,7.2530987879648135e37,7.255097988264694e37,7.257097188564574e37,7.259096388864454e37,7.261095589164334e37,7.263094789464214e37,7.265093989764095e37,7.267093190063974e37,7.269092390363854e37,7.271091590663734e37,7.2730907909636145e37,7.275089991263495e37,7.277089191563375e37,7.279088391863254e37,7.281087592163134e37,7.2830867924630145e37,7.285085992762895e37,7.287085193062775e37,7.289084393362655e37,7.291083593662535e37,7.2930827939624145e37,7.295081994262295e37,7.297081194562175e37,7.299080394862055e37,7.301079595161935e37,7.3030787954618155e37,7.305077995761695e37,7.307077196061575e37,7.309076396361455e37,7.311075596661335e37,7.3130747969612155e37,7.315073997261096e37,7.317073197560976e37,7.319072397860855e37,7.321071598160735e37,7.3230707984606155e37,7.325069998760496e37,7.327069199060376e37,7.329068399360256e37,7.331067599660135e37,7.3330667999600155e37,7.335066000259896e37,7.337065200559776e37,7.339064400859656e37,7.341063601159536e37,7.3430628014594165e37,7.345062001759296e37,7.347061202059176e37,7.349060402359056e37,7.351059602658936e37,7.3530588029588165e37,7.355058003258697e37,7.357057203558576e37,7.359056403858456e37,7.361055604158336e37,7.3630548044582165e37,7.365054004758097e37,7.367053205057977e37,7.369052405357857e37,7.371051605657736e37,7.3730508059576165e37,7.375050006257497e37,7.377049206557377e37,7.379048406857257e37,7.381047607157137e37,7.3830468074570175e37,7.385046007756897e37,7.387045208056777e37,7.389044408356657e37,7.391043608656537e37,7.3930428089564175e37,7.395042009256298e37,7.397041209556177e37,7.399040409856057e37,7.401039610155937e37,7.4030388104558175e37,7.405038010755698e37,7.407037211055578e37,7.409036411355458e37,7.411035611655337e37,7.4130348119552175e37,7.415034012255098e37,7.417033212554978e37,7.419032412854858e37,7.421031613154738e37,7.423030813454618e37,7.425030013754498e37,7.427029214054378e37,7.429028414354258e37,7.431027614654138e37,7.4330268149540185e37,7.435026015253899e37,7.437025215553778e37,7.439024415853658e37,7.441023616153538e37,7.4430228164534185e37,7.445022016753299e37,7.447021217053179e37,7.449020417353058e37,7.451019617652938e37,7.453018817952819e37,7.455018018252699e37,7.457017218552579e37,7.459016418852459e37,7.461015619152339e37,7.463014819452219e37,7.465014019752099e37,7.467013220051979e37,7.469012420351859e37,7.471011620651739e37,7.4730108209516195e37,7.4750100212515e37,7.477009221551379e37,7.479008421851259e37,7.481007622151139e37,7.4830068224510195e37,7.4850060227509e37,7.48700522305078e37,7.489004423350659e37,7.491003623650539e37,7.49300282395042e37,7.4950020242503e37,7.49700122455018e37,7.49900042485006e37,7.50099962514994e37,7.50299882544982e37,7.5049980257497e37,7.50699722604958e37,7.50899642634946e37,7.51099562664934e37,7.5129948269492205e37,7.5149940272491e37,7.51699322754898e37,7.51899242784886e37,7.52099162814874e37,7.5229908284486205e37,7.524990028748501e37,7.526989229048381e37,7.52898842934826e37,7.53098762964814e37,7.532986829948021e37,7.534986030247901e37,7.536985230547781e37,7.538984430847661e37,7.54098363114754e37,7.542982831447421e37,7.544982031747301e37,7.546981232047181e37,7.548980432347061e37,7.550979632646941e37,7.5529788329468215e37,7.554978033246701e37,7.556977233546581e37,7.558976433846461e37,7.560975634146341e37,7.562974834446222e37,7.564974034746102e37,7.566973235045981e37,7.568972435345861e37,7.570971635645741e37,7.572970835945622e37,7.574970036245502e37,7.576969236545382e37,7.578968436845262e37,7.580967637145141e37,7.582966837445022e37,7.584966037744902e37,7.586965238044782e37,7.588964438344662e37,7.590963638644542e37,7.5929628389444225e37,7.594962039244302e37,7.596961239544182e37,7.598960439844062e37,7.600959640143942e37,7.602958840443823e37,7.604958040743703e37,7.606957241043582e37,7.608956441343462e37,7.610955641643342e37,7.612954841943223e37,7.614954042243103e37,7.616953242542983e37,7.618952442842863e37,7.620951643142742e37,7.622950843442623e37,7.624950043742503e37,7.626949244042383e37,7.628948444342263e37,7.630947644642143e37,7.632946844942023e37,7.634946045241903e37,7.636945245541783e37,7.638944445841663e37,7.640943646141543e37,7.642942846441424e37,7.644942046741304e37,7.646941247041183e37,7.648940447341063e37,7.650939647640943e37,7.652938847940824e37,7.654938048240704e37,7.656937248540584e37,7.658936448840463e37,7.660935649140343e37,7.662934849440224e37,7.664934049740104e37,7.666933250039984e37,7.668932450339864e37,7.670931650639744e37,7.672930850939624e37,7.674930051239504e37,7.676929251539384e37,7.678928451839264e37,7.680927652139144e37,7.682926852439025e37,7.684926052738905e37,7.686925253038784e37,7.688924453338664e37,7.690923653638544e37,7.692922853938425e37,7.694922054238305e37,7.696921254538185e37,7.698920454838064e37,7.700919655137944e37,7.702918855437825e37,7.704918055737705e37,7.706917256037585e37,7.708916456337465e37,7.710915656637345e37,7.712914856937225e37,7.714914057237105e37,7.716913257536985e37,7.718912457836865e37,7.720911658136745e37,7.722910858436626e37,7.724910058736505e37,7.726909259036385e37,7.728908459336265e37,7.730907659636145e37,7.732906859936026e37,7.734906060235906e37,7.736905260535786e37,7.738904460835665e37,7.740903661135545e37,7.742902861435426e37,7.744902061735306e37,7.746901262035186e37,7.748900462335066e37,7.750899662634945e37,7.752898862934826e37,7.754898063234706e37,7.756897263534586e37,7.758896463834466e37,7.760895664134346e37,7.762894864434227e37,7.764894064734106e37,7.766893265033986e37,7.768892465333866e37,7.770891665633746e37,7.772890865933627e37,7.774890066233507e37,7.776889266533386e37,7.778888466833266e37,7.780887667133146e37,7.782886867433027e37,7.784886067732907e37,7.786885268032787e37,7.788884468332667e37,7.790883668632546e37,7.792882868932427e37,7.794882069232307e37,7.796881269532187e37,7.798880469832067e37,7.800879670131947e37,7.802878870431828e37,7.804878070731707e37,7.806877271031587e37,7.808876471331467e37,7.810875671631347e37,7.812874871931228e37,7.814874072231108e37,7.816873272530987e37,7.818872472830867e37,7.820871673130747e37,7.822870873430628e37,7.824870073730508e37,7.826869274030388e37,7.828868474330268e37,7.830867674630147e37,7.832866874930028e37,7.834866075229908e37,7.836865275529788e37,7.838864475829668e37,7.840863676129548e37,7.842862876429428e37,7.844862076729308e37,7.846861277029188e37,7.848860477329068e37,7.850859677628948e37,7.852858877928829e37,7.854858078228709e37,7.856857278528588e37,7.858856478828468e37,7.860855679128348e37,7.862854879428229e37,7.864854079728109e37,7.866853280027989e37,7.868852480327868e37,7.870851680627748e37,7.872850880927629e37,7.874850081227509e37,7.876849281527389e37,7.878848481827269e37,7.880847682127149e37,7.882846882427029e37,7.884846082726909e37,7.886845283026789e37,7.888844483326669e37,7.890843683626549e37,7.89284288392643e37,7.894842084226309e37,7.896841284526189e37,7.898840484826069e37,7.900839685125949e37,7.90283888542583e37,7.90483808572571e37,7.90683728602559e37,7.908836486325469e37,7.910835686625349e37,7.91283488692523e37,7.91483408722511e37,7.91683328752499e37,7.91883248782487e37,7.92083168812475e37,7.92283088842463e37,7.92483008872451e37,7.92682928902439e37,7.92882848932427e37,7.93082768962415e37,7.932826889924031e37,7.93482609022391e37,7.93682529052379e37,7.93882449082367e37,7.94082369112355e37,7.942822891423431e37,7.944822091723311e37,7.946821292023191e37,7.94882049232307e37,7.95081969262295e37,7.952818892922831e37,7.954818093222711e37,7.956817293522591e37,7.958816493822471e37,7.96081569412235e37,7.962814894422231e37,7.964814094722111e37,7.966813295021991e37,7.968812495321871e37,7.970811695621751e37,7.972810895921632e37,7.974810096221511e37,7.976809296521391e37,7.978808496821271e37,7.980807697121151e37,7.982806897421032e37,7.984806097720912e37,7.986805298020791e37,7.988804498320671e37,7.990803698620551e37,7.992802898920432e37,7.994802099220312e37,7.996801299520192e37,7.998800499820072e37,8.000799700119951e37,8.002798900419832e37,8.004798100719712e37,8.006797301019592e37,8.008796501319472e37,8.010795701619352e37,8.012794901919233e37,8.014794102219112e37,8.016793302518992e37,8.018792502818872e37,8.020791703118752e37,8.022790903418633e37,8.024790103718513e37,8.026789304018392e37,8.028788504318272e37,8.030787704618152e37,8.032786904918033e37,8.034786105217913e37,8.036785305517793e37,8.038784505817673e37,8.040783706117552e37,8.042782906417433e37,8.044782106717313e37,8.046781307017193e37,8.048780507317073e37,8.050779707616953e37,8.052778907916833e37,8.054778108216713e37,8.056777308516593e37,8.058776508816473e37,8.060775709116353e37,8.062774909416234e37,8.064774109716114e37,8.066773310015993e37,8.068772510315873e37,8.070771710615753e37,8.072770910915634e37,8.074770111215514e37,8.076769311515394e37,8.078768511815273e37,8.080767712115153e37,8.082766912415034e37,8.084766112714914e37,8.086765313014794e37,8.088764513314674e37,8.090763713614554e37,8.092762913914434e37,8.094762114214314e37,8.096761314514194e37,8.098760514814074e37,8.100759715113954e37,8.102758915413835e37,8.104758115713714e37,8.106757316013594e37,8.108756516313474e37,8.110755716613354e37,8.112754916913235e37,8.114754117213115e37,8.116753317512995e37,8.118752517812874e37,8.120751718112754e37,8.122750918412635e37,8.124750118712515e37,8.126749319012395e37,8.128748519312275e37,8.130747719612155e37,8.132746919912035e37,8.134746120211915e37,8.136745320511795e37,8.138744520811675e37,8.140743721111555e37,8.142742921411436e37,8.144742121711315e37,8.146741322011195e37,8.148740522311075e37,8.150739722610955e37,8.152738922910836e37,8.154738123210716e37,8.156737323510596e37,8.158736523810475e37,8.160735724110355e37,8.162734924410236e37,8.164734124710116e37,8.166733325009996e37,8.168732525309876e37,8.1707317256097555e37,8.172730925909636e37,8.174730126209516e37,8.176729326509396e37,8.178728526809276e37,8.180727727109156e37,8.182726927409037e37,8.184726127708916e37,8.186725328008796e37,8.188724528308676e37,8.190723728608556e37,8.192722928908437e37,8.194722129208317e37,8.196721329508196e37,8.198720529808076e37,8.200719730107956e37,8.202718930407837e37,8.204718130707717e37,8.206717331007597e37,8.208716531307477e37,8.2107157316073565e37,8.212714931907237e37,8.214714132207117e37,8.216713332506997e37,8.218712532806877e37,8.220711733106757e37,8.222710933406638e37,8.224710133706517e37,8.226709334006397e37,8.228708534306277e37,8.230707734606157e37,8.232706934906038e37,8.234706135205918e37,8.236705335505797e37,8.238704535805677e37,8.240703736105557e37,8.242702936405438e37,8.244702136705318e37,8.246701337005198e37,8.248700537305078e37,8.2506997376049575e37,8.252698937904838e37,8.254698138204718e37,8.256697338504598e37,8.258696538804478e37,8.260695739104358e37,8.262694939404238e37,8.264694139704118e37,8.266693340003998e37,8.268692540303878e37,8.270691740603758e37,8.272690940903639e37,8.274690141203519e37,8.276689341503398e37,8.278688541803278e37,8.2806877421031585e37,8.282686942403039e37,8.284686142702919e37,8.286685343002799e37,8.288684543302678e37,8.2906837436025585e37,8.292682943902439e37,8.294682144202319e37,8.296681344502199e37,8.298680544802079e37,8.300679745101959e37,8.302678945401839e37,8.304678145701719e37,8.306677346001599e37,8.308676546301479e37,8.310675746601359e37,8.31267494690124e37,8.314674147201119e37,8.316673347500999e37,8.318672547800879e37,8.3206717481007595e37,8.32267094840064e37,8.32467014870052e37,8.3266693490004e37,8.328668549300279e37,8.3306677496001595e37,8.33266694990004e37,8.33466615019992e37,8.3366653504998e37,8.33866455079968e37,8.34066375109956e37,8.34266295139944e37,8.34466215169932e37,8.3466613519992e37,8.34866055229908e37,8.35065975259896e37,8.352658952898841e37,8.35465815319872e37,8.3566573534986e37,8.35865655379848e37,8.3606557540983605e37,8.362654954398241e37,8.364654154698121e37,8.366653354998001e37,8.36865255529788e37,8.3706517555977605e37,8.372650955897641e37,8.374650156197521e37,8.376649356497401e37,8.378648556797281e37,8.3806477570971605e37,8.382646957397041e37,8.384646157696921e37,8.386645357996801e37,8.388644558296681e37,8.390643758596561e37,8.392642958896442e37,8.394642159196321e37,8.396641359496201e37,8.398640559796081e37,8.4006397600959615e37,8.402638960395842e37,8.404638160695722e37,8.406637360995601e37,8.408636561295481e37,8.4106357615953615e37,8.412634961895242e37,8.414634162195122e37,8.416633362495002e37,8.418632562794882e37,8.4206317630947615e37,8.422630963394642e37,8.424630163694522e37,8.426629363994402e37,8.428628564294282e37,8.4306277645941625e37,8.432626964894042e37,8.434626165193922e37,8.436625365493802e37,8.438624565793682e37,8.4406237660935625e37,8.442622966393443e37,8.444622166693323e37,8.446621366993202e37,8.448620567293082e37,8.4506197675929625e37,8.452618967892843e37,8.454618168192723e37,8.456617368492603e37,8.458616568792483e37,8.4606157690923625e37,8.462614969392243e37,8.464614169692123e37,8.466613369992003e37,8.468612570291883e37,8.4706117705917635e37,8.472610970891643e37,8.474610171191523e37,8.476609371491403e37,8.478608571791283e37,8.4806077720911635e37,8.482606972391044e37,8.484606172690924e37,8.486605372990803e37,8.488604573290683e37,8.4906037735905635e37,8.492602973890444e37,8.494602174190324e37,8.496601374490204e37,8.498600574790083e37,8.5005997750899635e37,8.502598975389844e37,8.504598175689724e37,8.506597375989604e37,8.508596576289484e37,8.510595776589364e37,8.512594976889245e37,8.514594177189124e37,8.516593377489005e37,8.518592577788884e37,8.520591778088764e37,8.522590978388645e37,8.524590178688524e37,8.526589378988405e37,8.528588579288284e37,8.530587779588165e37,8.532586979888045e37,8.534586180187924e37,8.536585380487805e37,8.538584580787684e37,8.540583781087565e37,8.542582981387445e37,8.544582181687324e37,8.546581381987205e37,8.548580582287084e37,8.550579782586965e37,8.552578982886845e37,8.554578183186726e37,8.556577383486605e37,8.558576583786484e37,8.560575784086366e37,8.562574984386245e37,8.564574184686126e37,8.566573384986005e37,8.568572585285886e37,8.570571785585766e37,8.572570985885645e37,8.574570186185526e37,8.576569386485405e37,8.578568586785286e37,8.580567787085166e37,8.582566987385047e37,8.584566187684926e37,8.586565387984805e37,8.588564588284686e37,8.590563788584566e37,8.592562988884447e37,8.594562189184326e37,8.596561389484205e37,8.598560589784086e37,8.600559790083966e37,8.602558990383847e37,8.604558190683726e37,8.606557390983607e37,8.608556591283486e37,8.610555791583366e37,8.612554991883247e37,8.614554192183126e37,8.616553392483007e37,8.618552592782886e37,8.620551793082767e37,8.622550993382647e37,8.624550193682526e37,8.626549393982407e37,8.628548594282286e37,8.630547794582167e37,8.632546994882047e37,8.634546195181928e37,8.636545395481807e37,8.638544595781686e37,8.640543796081568e37,8.642542996381447e37,8.644542196681328e37,8.646541396981207e37,8.648540597281088e37,8.650539797580968e37,8.652538997880847e37,8.654538198180728e37,8.656537398480607e37,8.658536598780488e37,8.660535799080368e37,8.662534999380247e37,8.664534199680128e37,8.666533399980007e37,8.668532600279888e37,8.670531800579768e37,8.672531000879649e37,8.674530201179528e37,8.676529401479407e37,8.678528601779288e37,8.680527802079168e37,8.682527002379049e37,8.684526202678928e37,8.68652540297881e37,8.688524603278688e37,8.690523803578568e37,8.692523003878449e37,8.694522204178328e37,8.69652140447821e37,8.698520604778088e37,8.70051980507797e37,8.702519005377849e37,8.704518205677728e37,8.70651740597761e37,8.708516606277488e37,8.71051580657737e37,8.712515006877249e37,8.71451420717713e37,8.71651340747701e37,8.718512607776888e37,8.72051180807677e37,8.722511008376649e37,8.72451020867653e37,8.72650940897641e37,8.728508609276288e37,8.73050780957617e37,8.732507009876049e37,8.73450621017593e37,8.73650541047581e37,8.73850461077569e37,8.74050381107557e37,8.742503011375449e37,8.74450221167533e37,8.74650141197521e37,8.74850061227509e37,8.75049981257497e37,8.75249901287485e37,8.75449821317473e37,8.75649741347461e37,8.75849661377449e37,8.76049581407437e37,8.76249501437425e37,8.76449421467413e37,8.766493414974011e37,8.76849261527389e37,8.77049181557377e37,8.77249101587365e37,8.77449021617353e37,8.776489416473411e37,8.77848861677329e37,8.78048781707317e37,8.78248701737305e37,8.78448621767293e37,8.786485417972811e37,8.78848461827269e37,8.790483818572572e37,8.79248301887245e37,8.79448221917233e37,8.796481419472211e37,8.79848061977209e37,8.800479820071972e37,8.80247902037185e37,8.804478220671732e37,8.806477420971611e37,8.80847662127149e37,8.810475821571372e37,8.81247502187125e37,8.814474222171132e37,8.816473422471011e37,8.818472622770892e37,8.820471823070772e37,8.82247102337065e37,8.824470223670532e37,8.826469423970411e37,8.828468624270292e37,8.830467824570172e37,8.832467024870053e37,8.834466225169932e37,8.836465425469811e37,8.838464625769692e37,8.840463826069572e37,8.842463026369453e37,8.844462226669332e37,8.846461426969211e37,8.848460627269092e37,8.850459827568972e37,8.852459027868853e37,8.854458228168732e37,8.856457428468613e37,8.858456628768492e37,8.860455829068372e37,8.862455029368253e37,8.864454229668132e37,8.866453429968013e37,8.868452630267892e37,8.870451830567774e37,8.872451030867653e37,8.874450231167532e37,8.876449431467413e37,8.878448631767292e37,8.880447832067174e37,8.882447032367053e37,8.884446232666934e37,8.886445432966813e37,8.888444633266692e37,8.890443833566574e37,8.892443033866453e37,8.894442234166334e37,8.896441434466213e37,8.898440634766092e37,8.900439835065974e37,8.902439035365853e37,8.904438235665734e37,8.906437435965613e37,8.908436636265494e37,8.910435836565374e37,8.912435036865253e37,8.914434237165134e37,8.916433437465013e37,8.918432637764894e37,8.920431838064774e37,8.922431038364655e37,8.924430238664534e37,8.926429438964413e37,8.928428639264294e37,8.930427839564174e37,8.932427039864055e37,8.934426240163934e37,8.936425440463815e37,8.938424640763694e37,8.940423841063574e37,8.942423041363455e37,8.944422241663334e37,8.946421441963215e37,8.948420642263094e37,8.950419842562976e37,8.952419042862855e37,8.954418243162734e37,8.956417443462615e37,8.958416643762494e37,8.960415844062376e37,8.962415044362255e37,8.964414244662134e37,8.966413444962015e37,8.968412645261894e37,8.970411845561776e37,8.972411045861655e37,8.974410246161536e37,8.976409446461415e37,8.978408646761294e37,8.980407847061176e37,8.982407047361055e37,8.984406247660936e37,8.986405447960815e37,8.988404648260696e37,8.990403848560576e37,8.992403048860455e37,8.994402249160336e37,8.996401449460215e37,8.998400649760096e37,9.000399850059976e37,9.002399050359857e37,9.004398250659736e37,9.006397450959615e37,9.008396651259496e37,9.010395851559376e37,9.012395051859257e37,9.014394252159136e37,9.016393452459015e37,9.018392652758896e37,9.020391853058776e37,9.022391053358657e37,9.024390253658536e37,9.026389453958417e37,9.028388654258296e37,9.030387854558176e37,9.032387054858057e37,9.034386255157936e37,9.036385455457817e37,9.038384655757696e37,9.040383856057578e37,9.042383056357457e37,9.044382256657336e37,9.046381456957217e37,9.048380657257096e37,9.050379857556978e37,9.052379057856857e37,9.054378258156738e37,9.056377458456617e37,9.058376658756496e37,9.060375859056378e37,9.062375059356257e37,9.064374259656138e37,9.066373459956017e37,9.068372660255898e37,9.070371860555778e37,9.072371060855657e37,9.074370261155538e37,9.076369461455417e37,9.078368661755298e37,9.080367862055178e37,9.082367062355057e37,9.084366262654938e37,9.086365462954817e37,9.088364663254698e37,9.090363863554578e37,9.092363063854459e37,9.094362264154338e37,9.096361464454217e37,9.098360664754098e37,9.100359865053978e37,9.102359065353859e37,9.104358265653738e37,9.10635746595362e37,9.108356666253498e37,9.110355866553378e37,9.112355066853259e37,9.114354267153138e37,9.11635346745302e37,9.118352667752898e37,9.12035186805278e37,9.122351068352659e37,9.124350268652538e37,9.12634946895242e37,9.128348669252298e37,9.13034786955218e37,9.132347069852059e37,9.134346270151938e37,9.13634547045182e37,9.138344670751698e37,9.14034387105158e37,9.142343071351459e37,9.14434227165134e37,9.14634147195122e37,9.148340672251098e37,9.15033987255098e37,9.152339072850859e37,9.15433827315074e37,9.15633747345062e37,9.1583366737505e37,9.16033587405038e37,9.162335074350259e37,9.16433427465014e37,9.16633347495002e37,9.1683326752499e37,9.17033187554978e37,9.17233107584966e37,9.17433027614954e37,9.17632947644942e37,9.1783286767493e37,9.18032787704918e37,9.18232707734906e37,9.18432627764894e37,9.186325477948821e37,9.1883246782487e37,9.19032387854858e37,9.19232307884846e37,9.19432227914834e37,9.196321479448221e37,9.1983206797481e37,9.20031988004798e37,9.20231908034786e37,9.20431828064774e37,9.206317480947621e37,9.2083166812475e37,9.210315881547382e37,9.21231508184726e37,9.21431428214714e37,9.216313482447021e37,9.2183126827469e37,9.220311883046782e37,9.22231108334666e37,9.224310283646542e37,9.226309483946421e37,9.2283086842463e37,9.230307884546182e37,9.23230708484606e37,9.234306285145942e37,9.236305485445821e37,9.238304685745702e37,9.240303886045582e37,9.24230308634546e37,9.244302286645342e37,9.246301486945221e37,9.248300687245102e37,9.250299887544982e37,9.252299087844863e37,9.254298288144742e37,9.256297488444621e37,9.258296688744502e37,9.260295889044382e37,9.262295089344263e37,9.264294289644142e37,9.266293489944021e37,9.268292690243902e37,9.270291890543782e37,9.272291090843663e37,9.274290291143542e37,9.276289491443423e37,9.278288691743302e37,9.280287892043182e37,9.282287092343063e37,9.284286292642942e37,9.286285492942823e37,9.288284693242702e37,9.290283893542584e37,9.292283093842463e37,9.294282294142342e37,9.296281494442223e37,9.298280694742102e37,9.300279895041984e37,9.302279095341863e37,9.304278295641744e37,9.306277495941623e37,9.308276696241502e37,9.310275896541384e37,9.312275096841263e37,9.314274297141144e37,9.316273497441023e37,9.318272697740903e37,9.320271898040784e37,9.322271098340663e37,9.324270298640544e37,9.326269498940423e37,9.328268699240304e37,9.330267899540184e37,9.332267099840063e37,9.334266300139944e37,9.336265500439823e37,9.338264700739704e37,9.340263901039584e37,9.342263101339465e37,9.344262301639344e37,9.346261501939223e37,9.348260702239104e37,9.350259902538984e37,9.352259102838865e37,9.354258303138744e37,9.356257503438625e37,9.358256703738504e37,9.360255904038384e37,9.362255104338265e37,9.364254304638144e37,9.366253504938025e37,9.368252705237904e37,9.370251905537786e37,9.372251105837665e37,9.374250306137544e37,9.376249506437425e37,9.378248706737304e37,9.380247907037186e37,9.382247107337065e37,9.384246307636944e37,9.386245507936825e37,9.388244708236705e37,9.390243908536586e37,9.392243108836465e37,9.394242309136346e37,9.396241509436225e37,9.398240709736105e37,9.400239910035986e37,9.402239110335865e37,9.404238310635746e37,9.406237510935625e37,9.408236711235506e37,9.410235911535386e37,9.412235111835265e37,9.414234312135146e37,9.416233512435025e37,9.418232712734906e37,9.420231913034786e37,9.422231113334667e37,9.424230313634546e37,9.426229513934425e37,9.428228714234306e37,9.430227914534186e37,9.432227114834067e37,9.434226315133946e37,9.436225515433825e37,9.438224715733706e37,9.440223916033586e37,9.442223116333467e37,9.444222316633346e37,9.446221516933227e37,9.448220717233106e37,9.450219917532986e37,9.452219117832867e37,9.454218318132746e37,9.456217518432627e37,9.458216718732506e37,9.460215919032388e37,9.462215119332267e37,9.464214319632146e37,9.466213519932027e37,9.468212720231907e37,9.470211920531788e37,9.472211120831667e37,9.474210321131548e37,9.476209521431427e37,9.478208721731307e37,9.480207922031188e37,9.482207122331067e37,9.484206322630948e37,9.486205522930827e37,9.488204723230708e37,9.490203923530588e37,9.492203123830467e37,9.494202324130348e37,9.496201524430227e37,9.498200724730108e37,9.500199925029988e37,9.502199125329867e37,9.504198325629748e37,9.506197525929627e37,9.508196726229508e37,9.510195926529388e37,9.512195126829269e37,9.514194327129148e37,9.516193527429027e37,9.518192727728908e37,9.520191928028788e37,9.522191128328669e37,9.524190328628548e37,9.52618952892843e37,9.528188729228308e37,9.530187929528188e37,9.532187129828069e37,9.534186330127948e37,9.53618553042783e37,9.538184730727709e37,9.54018393102759e37,9.542183131327469e37,9.544182331627348e37,9.54618153192723e37,9.548180732227109e37,9.55017993252699e37,9.552179132826869e37,9.554178333126748e37,9.55617753342663e37,9.558176733726509e37,9.56017593402639e37,9.562175134326269e37,9.56417433462615e37,9.56617353492603e37,9.568172735225909e37,9.57017193552579e37,9.572171135825669e37,9.57417033612555e37,9.57616953642543e37,9.57816873672531e37,9.58016793702519e37,9.582167137325069e37,9.58416633762495e37,9.58616553792483e37,9.58816473822471e37,9.59016393852459e37,9.59216313882447e37,9.59416233912435e37,9.59616153942423e37,9.59816073972411e37,9.60015994002399e37,9.60215914032387e37,9.60415834062375e37,9.606157540923631e37,9.60815674122351e37,9.61015594152339e37,9.61215514182327e37,9.61415434212315e37,9.616153542423031e37,9.61815274272291e37,9.62015194302279e37,9.62215114332267e37,9.62415034362255e37,9.626149543922431e37,9.62814874422231e37,9.630147944522192e37,9.63214714482207e37,9.63414634512195e37,9.636145545421831e37,9.63814474572171e37,9.640143946021592e37,9.64214314632147e37,9.644142346621352e37,9.646141546921231e37,9.64814074722111e37,9.650139947520992e37,9.65213914782087e37,9.654138348120752e37,9.656137548420631e37,9.658136748720512e37,9.660135949020392e37,9.662135149320271e37,9.664134349620152e37,9.666133549920031e37,9.668132750219912e37,9.670131950519792e37,9.672131150819671e37,9.674130351119552e37,9.676129551419431e37,9.678128751719312e37,9.680127952019192e37,9.682127152319073e37,9.684126352618952e37,9.686125552918831e37,9.688124753218713e37,9.690123953518592e37,9.692123153818473e37,9.694122354118352e37,9.696121554418233e37,9.698120754718113e37,9.700119955017992e37,9.702119155317873e37,9.704118355617752e37,9.706117555917633e37,9.708116756217513e37,9.710115956517394e37,9.712115156817273e37,9.714114357117152e37,9.716113557417033e37,9.718112757716913e37,9.720111958016794e37,9.722111158316673e37,9.724110358616554e37,9.726109558916433e37,9.728108759216313e37,9.730107959516194e37,9.732107159816073e37,9.734106360115954e37,9.736105560415833e37,9.738104760715713e37,9.740103961015594e37,9.742103161315473e37,9.744102361615354e37,9.746101561915233e37,9.748100762215114e37,9.750099962514994e37,9.752099162814873e37,9.754098363114754e37,9.756097563414633e37,9.758096763714515e37,9.760095964014394e37,9.762095164314275e37,9.764094364614154e37,9.766093564914033e37,9.768092765213915e37,9.770091965513794e37,9.772091165813675e37,9.774090366113554e37,9.776089566413435e37,9.778088766713315e37,9.780087967013194e37,9.782087167313075e37,9.784086367612954e37,9.786085567912835e37,9.788084768212715e37,9.790083968512596e37,9.792083168812475e37,9.794082369112354e37,9.796081569412235e37,9.798080769712115e37,9.800079970011996e37,9.802079170311875e37,9.804078370611754e37,9.806077570911635e37,9.808076771211515e37,9.810075971511396e37,9.812075171811275e37,9.814074372111156e37,9.816073572411035e37,9.818072772710915e37,9.820071973010796e37,9.822071173310675e37,9.824070373610556e37,9.826069573910435e37,9.828068774210316e37,9.830067974510196e37,9.832067174810075e37,9.834066375109956e37,9.836065575409835e37,9.838064775709717e37,9.840063976009596e37,9.842063176309477e37,9.844062376609356e37,9.846061576909235e37,9.848060777209117e37,9.850059977508996e37,9.852059177808877e37,9.854058378108756e37,9.856057578408635e37,9.858056778708517e37,9.860055979008396e37,9.862055179308277e37,9.864054379608156e37,9.866053579908037e37,9.868052780207917e37,9.870051980507796e37,9.872051180807677e37,9.874050381107556e37,9.876049581407437e37,9.878048781707317e37,9.880047982007198e37,9.882047182307077e37,9.884046382606956e37,9.886045582906837e37,9.888044783206717e37,9.890043983506598e37,9.892043183806477e37,9.894042384106358e37,9.896041584406237e37,9.898040784706117e37,9.900039985005998e37,9.902039185305877e37,9.904038385605758e37,9.906037585905637e37,9.908036786205519e37,9.910035986505398e37,9.912035186805277e37,9.914034387105158e37,9.916033587405037e37,9.918032787704919e37,9.920031988004798e37,9.922031188304677e37,9.924030388604558e37,9.926029588904437e37,9.928028789204319e37,9.930027989504198e37,9.932027189804079e37,9.934026390103958e37,9.936025590403837e37,9.938024790703719e37,9.940023991003598e37,9.942023191303479e37,9.944022391603358e37,9.94602159190324e37,9.948020792203119e37,9.950019992502998e37,9.952019192802879e37,9.954018393102758e37,9.95601759340264e37,9.958016793702519e37,9.9600159940024e37,9.962015194302279e37,9.964014394602158e37,9.96601359490204e37,9.968012795201919e37,9.9700119955018e37,9.972011195801679e37,9.974010396101558e37,9.97600959640144e37,9.978008796701319e37,9.9800079970012e37,9.982007197301079e37,9.98400639760096e37,9.98600559790084e37,9.988004798200719e37,9.9900039985006e37,9.992003198800479e37,9.99400239910036e37,9.99600159940024e37,9.99800079970012e37,1.0e38]}

},{}],55:[function(require,module,exports){
module.exports={"expected":[0.22360679507255554,0.22357328236103058,0.22353976964950562,0.22350630164146423,0.22347281873226166,0.22343936562538147,0.2234058976173401,0.22337248921394348,0.22333906590938568,0.22330567240715027,0.22327226400375366,0.22323890030384064,0.2232055366039276,0.22317221760749817,0.22313888370990753,0.22310557961463928,0.22307227551937103,0.22303898632526398,0.2230057418346405,0.22297246754169464,0.22293923795223236,0.22290602326393127,0.22287283837795258,0.2228396236896515,0.22280645370483398,0.22277328372001648,0.22274015843868256,0.22270701825618744,0.2226739078760147,0.2226407825946808,0.22260770201683044,0.2225746214389801,0.22254158556461334,0.2225085347890854,0.22247549891471863,0.22244249284267426,0.22240948677062988,0.2223765254020691,0.2223435342311859,0.22231058776378632,0.22227764129638672,0.22224470973014832,0.2222117930650711,0.22217890620231628,0.22214601933956146,0.22211316227912903,0.2220803052186966,0.22204747796058655,0.2220146358013153,0.22198182344436646,0.2219490259885788,0.22191627323627472,0.22188349068164825,0.22185075283050537,0.2218180149793625,0.2217852920293808,0.2217525690793991,0.2217198610305786,0.2216871976852417,0.22165453433990479,0.22162188589572906,0.22158926725387573,0.2215566188097,0.22152402997016907,0.22149144113063812,0.22145885229110718,0.22142627835273743,0.22139374911785126,0.2213612198829651,0.22132869064807892,0.22129617631435394,0.22126367688179016,0.22123120725154877,0.22119875252246857,0.22116631269454956,0.22113387286663055,0.22110143303871155,0.22106903791427612,0.2210366576910019,0.22100427746772766,0.22097191214561462,0.2209395468235016,0.22090722620487213,0.22087490558624268,0.22084259986877441,0.22081029415130615,0.22077803313732147,0.2207457572221756,0.2207135111093521,0.22068126499652863,0.22064904868602753,0.22061684727668762,0.22058464586734772,0.220552459359169,0.22052030265331268,0.22048814594745636,0.22045601904392242,0.22042390704154968,0.22039179503917694,0.220359668135643,0.22032761573791504,0.22029554843902588,0.22026348114013672,0.22023144364356995,0.22019942104816437,0.2201673984527588,0.2201354205608368,0.2201034426689148,0.2200714498758316,0.2200395166873932,0.22000756859779358,0.21997563540935516,0.21994373202323914,0.2199118286371231,0.21987994015216827,0.21984806656837463,0.219816192984581,0.21978434920310974,0.21975253522396088,0.21972070634365082,0.21968892216682434,0.21965712308883667,0.2196253538131714,0.2195935994386673,0.2195618450641632,0.2195301055908203,0.2194983959197998,0.2194666713476181,0.21943499147891998,0.21940329670906067,0.21937166154384613,0.2193399965763092,0.21930836141109467,0.21927671134471893,0.21924512088298798,0.21921353042125702,0.21918192505836487,0.2191503643989563,0.21911881864070892,0.21908727288246155,0.21905574202537537,0.21902424097061157,0.2189927101135254,0.21896123886108398,0.21892975270748138,0.21889831125736237,0.21886685490608215,0.21883542835712433,0.2188039869070053,0.21877260506153107,0.21874120831489563,0.2187098115682602,0.21867845952510834,0.21864710748195648,0.21861577033996582,0.21858443319797516,0.21855314075946808,0.2185218334197998,0.21849054098129272,0.21845927834510803,0.21842801570892334,0.21839678287506104,0.21836553514003754,0.21833431720733643,0.2183031141757965,0.2182719111442566,0.21824075281620026,0.21820957958698273,0.2181784212589264,0.21814729273319244,0.2181161642074585,0.21808506548404694,0.21805395185947418,0.21802286803722382,0.21799179911613464,0.21796074509620667,0.2179296910762787,0.2178986668586731,0.2178676575422287,0.2178366482257843,0.2178056538105011,0.2177746742963791,0.21774369478225708,0.21771274507045746,0.21768181025981903,0.2176508754491806,0.21761998534202576,0.21758908033370972,0.21755819022655487,0.2175273299217224,0.21749646961688995,0.2174656093120575,0.21743479371070862,0.21740394830703735,0.21737314760684967,0.217342346906662,0.2173115611076355,0.2172808051109314,0.2172500640153885,0.2172193080186844,0.21718856692314148,0.21715785562992096,0.21712715923786163,0.2170964777469635,0.21706578135490417,0.21703511476516724,0.2170044630765915,0.21697384119033813,0.21694320440292358,0.21691259741783142,0.21688200533390045,0.21685141324996948,0.2168208360671997,0.21679027378559113,0.21675974130630493,0.21672920882701874,0.21669867634773254,0.21666817367076874,0.21663765609264374,0.21660718321800232,0.2165767252445221,0.21654626727104187,0.21651583909988403,0.216485396027565,0.21645498275756836,0.21642455458641052,0.21639415621757507,0.21636377274990082,0.21633341908454895,0.2163030505180359,0.21627271175384521,0.21624238789081573,0.21621206402778625,0.21618178486824036,0.21615147590637207,0.21612121164798737,0.21609094738960266,0.21606068313121796,0.21603043377399445,0.21600022912025452,0.2159700095653534,0.21593981981277466,0.21590960025787354,0.2158794403076172,0.21584926545619965,0.2158191204071045,0.21578899025917053,0.21575886011123657,0.2157287448644638,0.21569862961769104,0.21566855907440186,0.21563848853111267,0.2156084179878235,0.2155783772468567,0.2155483216047287,0.2155183106660843,0.2154882848262787,0.21545828878879547,0.21542829275131226,0.21539831161499023,0.2153683602809906,0.21533842384815216,0.21530848741531372,0.2152785360813141,0.21524864435195923,0.21521873772144318,0.21518884599208832,0.21515895426273346,0.21512912213802338,0.2150992602109909,0.21506941318511963,0.21503959596157074,0.21500977873802185,0.21497997641563416,0.21495018899440765,0.21492041647434235,0.21489064395427704,0.21486090123653412,0.21483114361763,0.21480144560337067,0.21477171778678894,0.2147420048713684,0.21471232175827026,0.2146826535463333,0.21465297043323517,0.2146233320236206,0.21459369361400604,0.21456407010555267,0.2145344316959381,0.21450483798980713,0.21447524428367615,0.21444565057754517,0.21441610157489777,0.21438655257225037,0.21435701847076416,0.21432746946811676,0.21429796516895294,0.21426844596862793,0.2142389565706253,0.21420946717262268,0.21417999267578125,0.214150533080101,0.21412110328674316,0.21409165859222412,0.21406224370002747,0.214032843708992,0.21400344371795654,0.21397405862808228,0.213944673538208,0.21391531825065613,0.21388597786426544,0.21385663747787476,0.21382731199264526,0.21379801630973816,0.21376870572566986,0.21373942494392395,0.21371012926101685,0.21368087828159332,0.2136516273021698,0.21362237632274628,0.21359315514564514,0.2135639488697052,0.21353474259376526,0.21350553631782532,0.21347637474536896,0.2134471982717514,0.21341805160045624,0.21338887512683868,0.2133597731590271,0.21333064138889313,0.21330153942108154,0.21327243745326996,0.21324335038661957,0.21321427822113037,0.21318522095680237,0.21315616369247437,0.21312713623046875,0.21309810876846313,0.2130690962076187,0.21304009854793549,0.21301110088825226,0.21298213303089142,0.21295315027236938,0.21292419731616974,0.2128952592611313,0.21286632120609283,0.21283741295337677,0.2128085047006607,0.21277961134910583,0.21275073289871216,0.21272185444831848,0.212692990899086,0.2126641571521759,0.2126353234052658,0.2126065045595169,0.2125776708126068,0.2125488817691803,0.2125200778245926,0.21249131858348846,0.21246252954006195,0.21243378520011902,0.2124050408601761,0.21237631142139435,0.2123475819826126,0.21231888234615326,0.21229016780853271,0.21226151287555695,0.2122328281402588,0.21220415830612183,0.21217550337314606,0.21214686334133148,0.2121182680130005,0.2120896279811859,0.2120610475540161,0.21203243732452393,0.21200387179851532,0.2119753062725067,0.2119467407464981,0.2119181901216507,0.21188965439796448,0.21186114847660065,0.21183261275291443,0.2118041217327118,0.21177563071250916,0.21174713969230652,0.21171869337558746,0.21169023215770721,0.21166178584098816,0.21163338422775269,0.21160493791103363,0.21157655119895935,0.21154813468456268,0.2115197628736496,0.2114913910627365,0.21146301925182343,0.21143467724323273,0.21140635013580322,0.21137800812721252,0.2113496959209442,0.2113213837146759,0.21129310131072998,0.21126480400562286,0.21123655140399933,0.2112082690000534,0.21118003129959106,0.21115179359912872,0.21112355589866638,0.21109536290168762,0.21106715500354767,0.2110389620065689,0.21101076900959015,0.21098262071609497,0.2109544575214386,0.21092629432678223,0.21089817583560944,0.21087005734443665,0.21084192395210266,0.21081383526325226,0.21078573167324066,0.21075764298439026,0.21072958409786224,0.21070154011249542,0.2106734961271286,0.21064545214176178,0.21061743795871735,0.2105894237756729,0.21056142449378967,0.21053341031074524,0.21050545573234558,0.21047748625278473,0.21044951677322388,0.2104215919971466,0.21039365231990814,0.21036571264266968,0.2103378176689148,0.21030990779399872,0.21028201282024384,0.21025414764881134,0.21022628247737885,0.21019843220710754,0.21017058193683624,0.21014273166656494,0.21011492609977722,0.2100871205329895,0.2100593000650406,0.21003150939941406,0.21000371873378754,0.2099759727716446,0.20994819700717926,0.2099204659461975,0.20989271998405457,0.209865003824234,0.20983728766441345,0.2098095864057541,0.20978191494941711,0.20975421369075775,0.20972654223442078,0.209698885679245,0.2096712589263916,0.20964360237121582,0.20961599051952362,0.20958837866783142,0.20956078171730042,0.2095331847667694,0.2095055878162384,0.20947803556919098,0.20945045351982117,0.20942290127277374,0.2093953639268875,0.20936784148216248,0.20934033393859863,0.20931284129619598,0.20928533375263214,0.2092578411102295,0.20923037827014923,0.20920293033123016,0.2091754674911499,0.20914803445339203,0.20912058651447296,0.20909316837787628,0.2090657651424408,0.2090383768081665,0.20901097357273102,0.2089836150407791,0.20895622670650482,0.20892886817455292,0.2089015245437622,0.20887421071529388,0.20884689688682556,0.20881956815719604,0.20879226922988892,0.20876498520374298,0.20873770117759705,0.2087104320526123,0.20868317782878876,0.2086559236049652,0.20862869918346405,0.2086014598608017,0.20857425034046173,0.20854704082012177,0.2085198611021042,0.20849266648292542,0.20846548676490784,0.20843832194805145,0.20841117203235626,0.20838403701782227,0.20835690200328827,0.20832978188991547,0.20830267667770386,0.20827557146549225,0.20824848115444183,0.2082214206457138,0.20819434523582458,0.20816728472709656,0.20814023911952972,0.20811320841312408,0.20808617770671844,0.2080591768026352,0.20803216099739075,0.2080051749944687,0.20797818899154663,0.20795121788978577,0.2079242616891861,0.20789730548858643,0.20787036418914795,0.20784343779087067,0.20781652629375458,0.2077896147966385,0.2077627032995224,0.2077358067035675,0.207708939909935,0.2076820731163025,0.20765522122383118,0.20762836933135986,0.20760153234004974,0.20757471024990082,0.20754790306091309,0.20752108097076416,0.20749428868293762,0.20746751129627228,0.20744073390960693,0.20741398632526398,0.20738720893859863,0.20736047625541687,0.2073337435722351,0.20730701088905334,0.20728029310703278,0.2072536051273346,0.2072269171476364,0.20720024406909943,0.20717355608940125,0.20714691281318665,0.20712025463581085,0.20709362626075745,0.20706698298454285,0.20704036951065063,0.20701375603675842,0.2069871574640274,0.20696057379245758,0.20693399012088776,0.20690742135047913,0.2068808674812317,0.20685432851314545,0.206827774643898,0.20680125057697296,0.2067747414112091,0.20674823224544525,0.2067217230796814,0.20669524371623993,0.20666876435279846,0.2066422998905182,0.2066158652305603,0.20658940076828003,0.20656296610832214,0.20653654634952545,0.20651012659072876,0.20648370683193207,0.20645731687545776,0.20643094182014465,0.20640456676483154,0.20637820661067963,0.2063518464565277,0.206325501203537,0.20629917085170746,0.20627284049987793,0.2062465250492096,0.20622022449970245,0.2061939239501953,0.20616765320301056,0.2061413675546646,0.20611511170864105,0.2060888558626175,0.20606261491775513,0.20603637397289276,0.2060101479291916,0.2059839516878128,0.20595772564411163,0.20593154430389404,0.20590534806251526,0.20587918162345886,0.20585303008556366,0.20582686364650726,0.20580072700977325,0.20577457547187805,0.20574846863746643,0.2057223618030548,0.205696240067482,0.20567016303539276,0.20564407110214233,0.2056179940700531,0.20559193193912506,0.20556586980819702,0.20553982257843018,0.20551380515098572,0.20548775792121887,0.2054617553949356,0.20543575286865234,0.20540975034236908,0.205383762717247,0.20535778999328613,0.20533181726932526,0.20530585944652557,0.20527991652488708,0.2052539885044098,0.2052280753850937,0.2052021473646164,0.2051762491464615,0.20515033602714539,0.20512445271015167,0.20509856939315796,0.20507271587848663,0.2050468623638153,0.20502102375030518,0.20499517023563385,0.2049693465232849,0.20494352281093597,0.20491771399974823,0.20489190518856049,0.20486612617969513,0.20484034717082977,0.2048145830631256,0.20478881895542145,0.20476306974887848,0.2047373205423355,0.20471160113811493,0.20468588173389435,0.20466016232967377,0.20463445782661438,0.204608753323555,0.2045830935239792,0.204557403922081,0.20453175902366638,0.20450608432292938,0.20448045432567596,0.20445480942726135,0.20442919433116913,0.2044035941362381,0.20437796413898468,0.20435237884521484,0.204326793551445,0.20430122315883636,0.20427565276622772,0.20425008237361908,0.20422454178333282,0.20419901609420776,0.20417346060276031,0.20414796471595764,0.20412245392799377,0.2040969431400299,0.20407146215438843,0.20404596626758575,0.20402050018310547,0.20399503409862518,0.20396959781646729,0.2039441466331482,0.2039187103509903,0.2038932889699936,0.20386788249015808,0.20384247601032257,0.20381708443164825,0.20379169285297394,0.203766331076622,0.2037409394979477,0.20371559262275696,0.20369024574756622,0.2036648988723755,0.20363956689834595,0.2036142647266388,0.20358894765377045,0.2035636454820633,0.20353835821151733,0.20351307094097137,0.2034877985715866,0.20346252620220184,0.20343728363513947,0.2034120261669159,0.2033867985010147,0.20336157083511353,0.20333637297153473,0.20331116020679474,0.20328596234321594,0.20326077938079834,0.20323559641838074,0.20321041345596313,0.2031852751970291,0.2031601220369339,0.20313496887683868,0.20310984551906586,0.20308472216129303,0.2030596137046814,0.20303450524806976,0.20300941169261932,0.20298431813716888,0.20295925438404083,0.2029341757297516,0.20290912687778473,0.20288407802581787,0.202859029173851,0.20283401012420654,0.20280899107456207,0.2027839869260788,0.20275898277759552,0.20273399353027344,0.20270900428295135,0.20268402993679047,0.20265905559062958,0.20263411104679108,0.20260915160179138,0.20258423686027527,0.20255929231643677,0.20253437757492065,0.20250946283340454,0.20248457789421082,0.2024596780538559,0.20243479311466217,0.20240992307662964,0.2023850530385971,0.20236019790172577,0.20233535766601562,0.20231053233146667,0.20228569209575653,0.20226088166236877,0.20223607122898102,0.20221127569675446,0.2021864801645279,0.20216168463230133,0.20213691890239716,0.20211216807365417,0.2020874172449112,0.2020626664161682,0.20203791558742523,0.20201320946216583,0.20198847353458405,0.20196376740932465,0.20193907618522644,0.20191438496112823,0.20188970863819122,0.2018650323152542,0.2018403708934784,0.20181570947170258,0.20179106295108795,0.20176643133163452,0.2017417997121811,0.20171719789505005,0.2016925811767578,0.20166797935962677,0.20164339244365692,0.20161879062652588,0.20159423351287842,0.20156966149806976,0.2015451043844223,0.20152056217193604,0.20149603486061096,0.2014715075492859,0.201446995139122,0.20142248272895813,0.20139797031879425,0.20137348771095276,0.20134899020195007,0.20132452249526978,0.20130005478858948,0.20127558708190918,0.20125113427639008,0.20122671127319336,0.20120227336883545,0.20117785036563873,0.2011534422636032,0.2011290341615677,0.20110464096069336,0.20108027756214142,0.2010558843612671,0.20103152096271515,0.2010071724653244,0.20098279416561127,0.2009584754705429,0.20093414187431335,0.2009098082780838,0.20088550448417664,0.20086120069026947,0.2008368819952011,0.20081259310245514,0.20078831911087036,0.20076406002044678,0.200739786028862,0.2007155418395996,0.20069129765033722,0.20066706836223602,0.20064283907413483,0.20061860978603363,0.20059441030025482,0.20057019591331482,0.2005460113286972,0.20052184164524078,0.20049765706062317,0.20047348737716675,0.20044933259487152,0.2004251778125763,0.20040103793144226,0.20037691295146942,0.20035278797149658,0.20032867789268494,0.2003045678138733,0.20028047263622284,0.20025639235973358,0.20023231208324432,0.20020823180675507,0.2001841962337494,0.20016013085842133,0.20013608038425446,0.20011204481124878,0.2000880241394043,0.200064018368721,0.20003999769687653,0.20001599192619324,0.19999201595783234,0.19996802508831024,0.19994404911994934,0.19992007315158844,0.19989612698554993,0.1998721808195114,0.1998482346534729,0.19982430338859558,0.19980038702487946,0.19977645576000214,0.1997525542974472,0.19972866773605347,0.19970478117465973,0.199680894613266,0.19965702295303345,0.1996331661939621,0.19960929453372955,0.1995854526758194,0.19956162571907043,0.19953779876232147,0.1995139718055725,0.19949015974998474,0.19946636259555817,0.1994425654411316,0.1994187831878662,0.19939500093460083,0.19937124848365784,0.19934748113155365,0.19932371377944946,0.19929996132850647,0.19927623867988586,0.19925251603126526,0.19922879338264465,0.19920508563518524,0.19918139278888702,0.1991576850414276,0.19913402199745178,0.19911032915115356,0.19908666610717773,0.1990630030632019,0.19903934001922607,0.19901572167873383,0.1989920735359192,0.19896845519542694,0.1989448219537735,0.19892123341560364,0.1988976150751114,0.19887404143810272,0.19885045289993286,0.1988268792629242,0.19880330562591553,0.19877974689006805,0.19875620305538177,0.1987326592206955,0.19870911538600922,0.19868560135364532,0.19866210222244263,0.19863857328891754,0.19861507415771484,0.19859158992767334,0.19856810569763184,0.19854462146759033,0.19852116703987122,0.1984976977109909,0.19847425818443298,0.19845081865787506,0.19842737913131714,0.1984039545059204,0.19838054478168488,0.19835713505744934,0.198333740234375,0.19831033051013947,0.19828695058822632,0.19826360046863556,0.1982402205467224,0.19821685552597046,0.1981935054063797,0.19817017018795013,0.19814683496952057,0.1981235146522522,0.19810019433498383,0.19807687401771545,0.19805356860160828,0.1980302780866623,0.1980070024728775,0.1979837268590927,0.19796045124530792,0.19793720543384552,0.19791394472122192,0.19789069890975952,0.1978674679994583,0.1978442370891571,0.19782103598117828,0.19779780507087708,0.19777461886405945,0.19775141775608063,0.1977282166481018,0.19770506024360657,0.19768188893795013,0.1976587176322937,0.19763556122779846,0.19761240482330322,0.19758927822113037,0.19756615161895752,0.19754303991794586,0.197519913315773,0.19749680161476135,0.19747371971607208,0.1974506378173828,0.19742754101753235,0.19740445911884308,0.1973814070224762,0.19735835492610931,0.19733530282974243,0.19731226563453674,0.19728922843933105,0.19726620614528656,0.19724319875240326,0.19722017645835876,0.19719718396663666,0.19717419147491455,0.19715121388435364,0.19712822139263153,0.197105273604393,0.1970822960138321,0.19705936312675476,0.19703641533851624,0.1970134675502777,0.19699054956436157,0.19696763157844543,0.1969447135925293,0.19692179560661316,0.1968989074230194,0.19687603414058685,0.1968531459569931,0.19683027267456055,0.19680741429328918,0.19678454101085663,0.19676171243190765,0.19673886895179749,0.1967160403728485,0.19669322669506073,0.19667041301727295,0.19664759933948517,0.1966247856616974,0.196602001786232,0.1965792030096054,0.1965564340353012,0.196533665060997,0.196510910987854,0.1964881420135498,0.1964654177427292,0.19644266366958618,0.19641993939876556,0.19639723002910614,0.19637452065944672,0.1963518112897873,0.19632910192012787,0.19630640745162964,0.1962837427854538,0.19626107811927795,0.19623839855194092,0.19621573388576508,0.19619308412075043,0.19617044925689697,0.19614781439304352,0.19612517952919006,0.1961025595664978,0.19607995450496674,0.19605734944343567,0.1960347592830658,0.19601216912269592,0.19598957896232605,0.19596701860427856,0.19594445824623108,0.1959219127893448,0.1958993375301361,0.1958768218755722,0.1958542764186859,0.19583174586296082,0.19580921530723572,0.195786714553833,0.1957642138004303,0.19574172794818878,0.19571924209594727,0.19569675624370575,0.19567428529262543,0.1956518292427063,0.19562935829162598,0.19560691714286804,0.1955844759941101,0.19556204974651337,0.19553963840007782,0.19551721215248108,0.19549478590488434,0.19547240436077118,0.19545000791549683,0.19542761147022247,0.1954052448272705,0.19538286328315735,0.19536049664020538,0.19533812999725342,0.19531579315662384,0.19529345631599426,0.19527113437652588,0.1952488124370575,0.1952264904975891,0.19520416855812073,0.19518187642097473,0.19515956938266754,0.19513729214668274,0.19511501491069794,0.19509275257587433,0.19507047533988953,0.19504821300506592,0.1950259804725647,0.19500373303890228,0.19498150050640106,0.19495928287506104,0.194937065243721,0.19491484761238098,0.19489264488220215,0.19487044215202332,0.19484825432300568,0.19482608139514923,0.19480390846729279,0.19478175044059753,0.19475959241390228,0.19473743438720703,0.19471529126167297,0.1946931630373001,0.19467101991176605,0.19464890658855438,0.1946267932653427,0.19460469484329224,0.19458259642124176,0.19456051290035248,0.194538414478302,0.1945163607597351,0.19449429214000702,0.19447223842144012,0.19445018470287323,0.19442813098430634,0.19440609216690063,0.19438406825065613,0.19436204433441162,0.19434002041816711,0.194318026304245,0.19429601728916168,0.19427402317523956,0.19425204396247864,0.1942300647497177,0.1942080855369568,0.19418613612651825,0.1941641867160797,0.19414223730564117,0.19412028789520264,0.1940983533859253,0.19407644867897034,0.194054514169693,0.19403260946273804,0.19401070475578308,0.19398881494998932,0.19396692514419556,0.193945050239563,0.19392316043376923,0.19390130043029785,0.19387944042682648,0.1938575953245163,0.19383575022220612,0.19381390511989594,0.19379207491874695,0.19377027451992035,0.19374844431877136,0.19372664391994476,0.19370485842227936,0.19368304312229156,0.19366125762462616,0.19363948702812195,0.19361773133277893,0.19359596073627472,0.1935742050409317,0.19355244934558868,0.19353070855140686,0.19350898265838623,0.1934872567653656,0.19346553087234497,0.19344381988048553,0.1934221088886261,0.19340042769908905,0.1933787316083908,0.19335705041885376,0.1933353841304779,0.19331371784210205,0.1932920515537262,0.19327040016651154,0.19324874877929688,0.1932271122932434,0.19320547580718994,0.19318385422229767,0.1931622326374054,0.19314062595367432,0.19311903417110443,0.19309742748737335,0.19307585060596466,0.19305427372455597,0.19303269684314728,0.19301113486289978,0.19298957288265228,0.19296802580356598,0.19294647872447968,0.19292494654655457,0.19290339946746826,0.19288189709186554,0.19286036491394043,0.1928388625383377,0.19281736016273499,0.19279585778713226,0.19277438521385193,0.1927529126405716,0.19273142516613007,0.19270996749401093,0.1926884949207306,0.19266705214977264,0.1926456093788147,0.19262418150901794,0.1926027536392212,0.19258131086826324,0.19255989789962769,0.19253849983215332,0.19251710176467896,0.1924957036972046,0.19247432053089142,0.19245293736457825,0.19243156909942627,0.1924101859331131,0.1923888474702835,0.19236749410629272,0.19234615564346313,0.19232480227947235,0.19230347871780396,0.19228217005729675,0.19226083159446716,0.19223955273628235,0.19221822917461395,0.19219695031642914,0.19217565655708313,0.19215437769889832,0.1921330988407135,0.19211183488368988,0.19209058582782745,0.19206933677196503,0.1920480877161026,0.19202683866024017,0.19200561940670013,0.1919843852519989,0.19196318089962006,0.19194196164608002,0.19192077219486237,0.19189956784248352,0.19187837839126587,0.19185718894004822,0.19183602929115295,0.1918148398399353,0.19179369509220123,0.19177253544330597,0.1917513906955719,0.19173024594783783,0.19170913100242615,0.19168800115585327,0.1916668862104416,0.1916457712650299,0.19162465631961823,0.19160357117652893,0.19158247113227844,0.19156138598918915,0.19154031574726105,0.19151924550533295,0.19149819016456604,0.19147713482379913,0.19145607948303223,0.19143502414226532,0.1914139986038208,0.19139297306537628,0.19137194752693176,0.19135093688964844,0.1913299262523651,0.19130893051624298,0.19128793478012085,0.1912669539451599,0.19124595820903778,0.19122500717639923,0.1912040263414383,0.19118307530879974,0.1911621242761612,0.19114117324352264,0.19112025201320648,0.19109930098056793,0.19107839465141296,0.1910574585199356,0.19103656709194183,0.19101564586162567,0.1909947544336319,0.19097386300563812,0.19095298647880554,0.19093209505081177,0.19091124832630157,0.190890371799469,0.1908695250749588,0.19084866344928741,0.19082783162593842,0.19080698490142822,0.19078615307807922,0.19076533615589142,0.1907445341348648,0.190723717212677,0.1907029151916504,0.19068212807178497,0.19066132605075836,0.19064053893089294,0.19061976671218872,0.1905990093946457,0.19057825207710266,0.19055749475955963,0.1905367374420166,0.19051600992679596,0.19049526751041412,0.19047453999519348,0.19045384228229523,0.19043312966823578,0.19041240215301514,0.19039171934127808,0.19037100672721863,0.19035032391548157,0.1903296560049057,0.19030897319316864,0.19028832018375397,0.1902676522731781,0.19024699926376343,0.19022636115550995,0.19020572304725647,0.1901850700378418,0.1901644617319107,0.19014385342597961,0.19012323021888733,0.19010262191295624,0.19008202850818634,0.19006143510341644,0.19004084169864655,0.19002026319503784,0.18999968469142914,0.18997912108898163,0.1899585723876953,0.189938023686409,0.18991747498512268,0.18989692628383636,0.18987640738487244,0.18985587358474731,0.1898353546857834,0.18981483578681946,0.18979434669017792,0.18977384269237518,0.18975335359573364,0.1897328644990921,0.18971237540245056,0.1896919161081314,0.18967145681381226,0.1896509975194931,0.18963053822517395,0.1896100789308548,0.18958964943885803,0.18956921994686127,0.1895488053560257,0.18952837586402893,0.18950796127319336,0.18948756158351898,0.1894671618938446,0.18944676220417023,0.18942637741565704,0.18940600752830505,0.18938562273979187,0.18936526775360107,0.1893448829650879,0.1893245428800583,0.1893041878938675,0.18928386270999908,0.18926352262496948,0.18924319744110107,0.18922287225723267,0.18920256197452545,0.18918225169181824,0.18916195631027222,0.1891416609287262,0.18912138044834137,0.18910109996795654,0.18908080458641052,0.1890605390071869,0.18904027342796326,0.189020037651062,0.18899978697299957,0.18897953629493713,0.1889593005180359,0.18893907964229584,0.1889188438653946,0.18889862298965454,0.18887841701507568,0.18885822594165802,0.18883801996707916,0.1888178288936615,0.18879765272140503,0.18877747654914856,0.1887573003768921,0.18873713910579681,0.18871697783470154,0.18869683146476746,0.18867667019367218,0.1886565387248993,0.1886364221572876,0.18861627578735352,0.18859615921974182,0.18857605755329132,0.18855594098567963,0.18853583931922913,0.18851575255393982,0.1884956657886505,0.1884755790233612,0.1884555071592331,0.18843543529510498,0.18841539323329926,0.18839533627033234,0.18837527930736542,0.1883552223443985,0.18833519518375397,0.18831515312194824,0.1882951408624649,0.18827512860298157,0.18825511634349823,0.1882351040840149,0.18821512162685394,0.1881951242685318,0.18817512691020966,0.1881551593542099,0.18813519179821014,0.1881152242422104,0.18809527158737183,0.18807530403137207,0.1880553662776947,0.18803542852401733,0.18801549077033997,0.1879955679178238,0.18797563016414642,0.18795572221279144,0.18793581426143646,0.18791592121124268,0.1878960132598877,0.1878761202096939,0.18785624206066132,0.18783636391162872,0.18781648576259613,0.18779662251472473,0.18777677416801453,0.18775691092014313,0.18773707747459412,0.1877172291278839,0.1876973956823349,0.18767757713794708,0.18765775859355927,0.18763794004917145,0.18761813640594482,0.1875983327627182,0.18757852911949158,0.18755874037742615,0.1875389665365219,0.18751917779445648,0.18749940395355225,0.1874796450138092,0.18745988607406616,0.1874401569366455,0.18742039799690247,0.18740065395832062,0.18738092482089996,0.1873611956834793,0.18734148144721985,0.1873217672109604,0.18730205297470093,0.18728235363960266,0.1872626543045044,0.18724296987056732,0.18722328543663025,0.18720361590385437,0.1871839314699173,0.18716426193714142,0.18714460730552673,0.18712496757507324,0.18710531294345856,0.18708567321300507,0.18706604838371277,0.18704640865325928,0.18702679872512817,0.18700717389583588,0.18698756396770477,0.18696796894073486,0.18694835901260376,0.18692876398563385,0.18690919876098633,0.18688960373401642,0.1868700385093689,0.18685047328472137,0.18683092296123505,0.18681135773658752,0.1867918074131012,0.18677228689193726,0.18675273656845093,0.186733216047287,0.18671368062496185,0.1866941601037979,0.18667465448379517,0.18665514886379242,0.18663564324378967,0.18661616742610931,0.18659667670726776,0.1865772008895874,0.18655771017074585,0.18653824925422668,0.18651878833770752,0.18649932742118835,0.18647988140583038,0.1864604502916336,0.18644100427627563,0.18642158806324005,0.18640215694904327,0.1863827258348465,0.1863633245229721,0.18634390830993652,0.18632452189922333,0.18630512058734894,0.18628573417663574,0.18626633286476135,0.18624696135520935,0.18622760474681854,0.18620823323726654,0.18618887662887573,0.18616952002048492,0.18615016341209412,0.1861308366060257,0.18611149489879608,0.18609216809272766,0.18607285618782043,0.18605352938175201,0.1860342174768448,0.18601490557193756,0.18599562346935272,0.1859763264656067,0.18595704436302185,0.185937762260437,0.18591849505901337,0.18589921295642853,0.18587996065616608,0.18586069345474243,0.18584145605564117,0.18582220375537872,0.18580296635627747,0.1857837289571762,0.18576450645923615,0.18574528396129608,0.18572606146335602,0.18570686876773834,0.18568766117095947,0.1856684535741806,0.18564926087856293,0.18563008308410645,0.18561089038848877,0.18559172749519348,0.1855725646018982,0.1855534017086029,0.18553423881530762,0.18551510572433472,0.18549595773220062,0.18547680974006653,0.18545769155025482,0.18543855845928192,0.1854194551706314,0.1854003369808197,0.185381218791008,0.18536211550235748,0.18534301221370697,0.18532393872737885,0.18530485033988953,0.1852857768535614,0.18526670336723328,0.18524762988090515,0.18522857129573822,0.1852095127105713,0.18519046902656555,0.18517142534255981,0.18515238165855408,0.18513335287570953,0.18511433899402618,0.18509532511234283,0.1850762963294983,0.18505729734897614,0.18503828346729279,0.18501928448677063,0.18500030040740967,0.1849813163280487,0.18496233224868774,0.18494336307048798,0.1849243938922882,0.18490543961524963,0.18488648533821106,0.18486753106117249,0.1848485916852951,0.18482963740825653,0.18481071293354034,0.18479178845882416,0.18477287888526917,0.18475395441055298,0.18473504483699799,0.184716135263443,0.1846972554922104,0.1846783608198166,0.18465948104858398,0.18464058637619019,0.18462170660495758,0.18460284173488617,0.18458397686481476,0.18456514179706573,0.18454627692699432,0.1845274418592453,0.18450859189033508,0.18448977172374725,0.18447093665599823,0.1844521164894104,0.18443328142166138,0.18441449105739594,0.1843956857919693,0.18437688052654266,0.18435809016227722,0.18433931469917297,0.18432050943374634,0.1843017339706421,0.18428297340869904,0.1842641979455948,0.18424543738365173,0.18422670662403107,0.1842079609632492,0.18418921530246735,0.18417048454284668,0.18415173888206482,0.18413302302360535,0.18411429226398468,0.1840955913066864,0.18407687544822693,0.18405817449092865,0.18403948843479156,0.18402080237865448,0.1840021014213562,0.1839834302663803,0.18396475911140442,0.18394608795642853,0.18392741680145264,0.18390877544879913,0.18389013409614563,0.18387147784233093,0.18385283648967743,0.18383419513702393,0.1838155835866928,0.1837969422340393,0.18377834558486938,0.18375973403453827,0.18374110758304596,0.18372252583503723,0.1837039291858673,0.1836853325366974,0.18366675078868866,0.18364818394184113,0.1836296021938324,0.18361103534698486,0.18359248340129852,0.18357393145561218,0.18355537950992584,0.1835368424654007,0.18351829051971436,0.1834997683763504,0.18348123133182526,0.1834627091884613,0.18344421684741974,0.1834256947040558,0.18340718746185303,0.18338869512081146,0.1833702027797699,0.18335171043872833,0.18333323299884796,0.1833147555589676,0.18329627811908722,0.18327781558036804,0.18325936794281006,0.18324090540409088,0.1832224577665329,0.1832040250301361,0.18318559229373932,0.18316715955734253,0.18314872682094574,0.18313030898571014,0.18311189115047455,0.18309348821640015,0.18307508528232574,0.18305666744709015,0.18303827941417694,0.18301990628242493,0.18300151824951172,0.1829831451177597,0.1829647570848465,0.18294641375541687,0.18292804062366486,0.18290969729423523,0.1828913539648056,0.18287301063537598,0.18285466730594635,0.18283633887767792,0.18281801044940948,0.18279968202114105,0.182781383395195,0.18276305496692657,0.18274475634098053,0.18272645771503448,0.18270815908908844,0.18268989026546478,0.18267160654067993,0.18265332281589508,0.18263505399227142,0.18261678516864777,0.1825985312461853,0.18258026242256165,0.18256202340126038,0.1825437843799591,0.18252554535865784,0.18250730633735657,0.1824890673160553,0.18247085809707642,0.18245263397693634,0.18243442475795746,0.18241623044013977,0.1823980212211609,0.1823798418045044,0.1823616474866867,0.18234345316886902,0.18232527375221252,0.18230709433555603,0.18228892982006073,0.18227078020572662,0.18225263059139252,0.18223446607589722,0.1822163164615631,0.182198166847229,0.18218004703521729,0.18216191232204437,0.18214380741119385,0.18212567269802094,0.1821075677871704,0.1820894479751587,0.18207134306430817,0.18205326795578003,0.1820351630449295,0.18201707303524017,0.18199899792671204,0.1819809228181839,0.18196284770965576,0.18194478750228882,0.18192672729492188,0.18190868198871613,0.18189062178134918,0.18187257647514343,0.18185454607009888,0.18183651566505432,0.18181848526000977,0.1818004697561264,0.18178243935108185,0.1817644238471985,0.18174642324447632,0.18172842264175415,0.18171043694019318,0.1816924512386322,0.18167445063591003,0.18165647983551025,0.18163849413394928,0.1816205382347107,0.1816025823354721,0.18158462643623352,0.18156667053699493,0.18154871463775635,0.18153077363967896,0.18151284754276276,0.18149490654468536,0.18147698044776917,0.18145906925201416,0.18144115805625916,0.18142324686050415,0.18140533566474915,0.18138743937015533,0.18136954307556152,0.1813516616821289,0.1813337653875351,0.18131588399410248,0.18129801750183105,0.18128013610839844,0.1812622994184494,0.18124443292617798,0.18122658133506775,0.18120872974395752,0.18119089305400848,0.18117305636405945,0.1811552196741104,0.18113739788532257,0.18111959099769592,0.18110176920890808,0.18108396232128143,0.18106615543365479,0.18104834854602814,0.18103055655956268,0.18101276457309723,0.18099498748779297,0.1809772104024887,0.18095944821834564,0.18094167113304138,0.18092390894889832,0.18090614676475525,0.18088838458061218,0.1808706521987915,0.18085290491580963,0.18083517253398895,0.18081744015216827,0.1807997226715088,0.1807820051908493,0.18076428771018982,0.18074657022953033,0.18072886765003204,0.18071116507053375,0.18069347739219666,0.18067577481269836,0.18065810203552246,0.18064041435718536,0.18062274158000946,0.18060506880283356,0.18058741092681885,0.18056973814964294,0.18055209517478943,0.1805344521999359,0.1805168092250824,0.18049916625022888,0.18048153817653656,0.18046391010284424,0.18044628202915192,0.18042868375778198,0.18041107058525085,0.18039345741271973,0.1803758591413498,0.18035826086997986,0.18034066259860992,0.18032307922840118,0.18030549585819244,0.1802879273891449,0.18027034401893616,0.1802527904510498,0.18023523688316345,0.1802176684141159,0.18020012974739075,0.1801825761795044,0.18016503751277924,0.18014749884605408,0.1801299899816513,0.18011245131492615,0.18009492754936218,0.1800774186849594,0.18005990982055664,0.18004241585731506,0.1800249218940735,0.18000741302967072,0.17998991906642914,0.17997245490550995,0.17995496094226837,0.179937481880188,0.1799200177192688,0.1799025535583496,0.1798851042985916,0.17986765503883362,0.17985019087791443,0.17983275651931763,0.17981530725955963,0.17979788780212402,0.17978045344352722,0.1797630339860916,0.179745614528656,0.1797282099723816,0.17971079051494598,0.17969340085983276,0.17967599630355835,0.17965860664844513,0.1796412318944931,0.17962384223937988,0.17960645258426666,0.17958909273147583,0.1795717179775238,0.17955435812473297,0.17953699827194214,0.1795196533203125,0.17950230836868286,0.17948496341705322,0.17946761846542358,0.17945030331611633,0.1794329583644867,0.17941564321517944,0.1793983280658722,0.17938102781772614,0.1793636977672577,0.17934641242027283,0.17932911217212677,0.1793118268251419,0.17929452657699585,0.17927725613117218,0.17925997078418732,0.17924270033836365,0.17922544479370117,0.1792081743478775,0.17919091880321503,0.17917366325855255,0.17915642261505127,0.1791391670703888,0.1791219413280487,0.17910470068454742,0.17908747494220734,0.17907026410102844,0.17905305325984955,0.17903582751750946,0.17901863157749176,0.17900142073631287,0.17898423969745636,0.17896702885627747,0.17894984781742096,0.17893266677856445,0.17891548573970795,0.17889831960201263,0.17888115346431732,0.178863987326622,0.1788468211889267,0.17882966995239258,0.17881253361701965,0.17879538238048553,0.1787782460451126,0.17876112461090088,0.17874397337436676,0.17872685194015503,0.1787097454071045,0.17869263887405396,0.17867553234100342,0.1786584109067917,0.17864133417606354,0.178624227643013,0.17860713601112366,0.1785900592803955,0.17857296764850616,0.1785559058189392,0.17853884398937225,0.1785217672586441,0.17850472033023834,0.1784876585006714,0.17847059667110443,0.17845356464385986,0.1784365326166153,0.17841948568820953,0.17840246856212616,0.1783854365348816,0.17836841940879822,0.17835138738155365,0.17833438515663147,0.1783173829317093,0.1783003807067871,0.17828337848186493,0.17826639115810394,0.17824940383434296,0.17823241651058197,0.17821545898914337,0.17819848656654358,0.1781815141439438,0.1781645566225052,0.1781475841999054,0.178130641579628,0.17811369895935059,0.17809675633907318,0.17807981371879578,0.17806288599967957,0.17804595828056335,0.17802903056144714,0.17801211774349213,0.17799519002437592,0.1779782921075821,0.17796139419078827,0.17794449627399445,0.17792759835720062,0.1779107004404068,0.17789381742477417,0.17787693440914154,0.1778600662946701,0.17784319818019867,0.17782633006572723,0.1778094619512558,0.17779260873794556,0.17777575552463531,0.17775891721248627,0.17774206399917603,0.17772524058818817,0.17770840227603912,0.17769157886505127,0.17767475545406342,0.17765794694423676,0.1776411235332489,0.17762431502342224,0.17760750651359558,0.17759071290493011,0.17757393419742584,0.17755714058876038,0.1775403469800949,0.17752356827259064,0.17750678956508636,0.1774900257587433,0.1774732619524002,0.17745649814605713,0.17743974924087524,0.17742298543453217,0.17740623652935028,0.1773895025253296,0.1773727685213089,0.1773560345172882,0.17733930051326752,0.17732258141040802,0.17730586230754852,0.17728915810585022,0.17727243900299072,0.17725573480129242,0.17723903059959412,0.1772223562002182,0.1772056519985199,0.17718897759914398,0.17717230319976807,0.17715562880039215,0.17713893949985504,0.1771222949028015,0.1771056205034256,0.17708896100521088,0.17707231640815735,0.17705567181110382,0.1770390123128891,0.17702238261699677,0.17700575292110443,0.1769891381263733,0.17697250843048096,0.17695589363574982,0.17693926393985748,0.17692264914512634,0.1769060641527176,0.17688944935798645,0.1768728643655777,0.17685626447200775,0.176839679479599,0.17682309448719025,0.1768065243959427,0.17678993940353394,0.17677338421344757,0.1767568290233612,0.17674025893211365,0.17672370374202728,0.1767071634531021,0.17669060826301575,0.17667406797409058,0.1766575425863266,0.17664100229740143,0.17662447690963745,0.17660795152187347,0.1765914410352707,0.1765749454498291,0.17655843496322632,0.17654190957546234,0.17652541399002075,0.17650893330574036,0.17649245262145996,0.17647595703601837,0.17645949125289917,0.17644301056861877,0.17642654478549957,0.17641007900238037,0.17639359831809998,0.17637714743614197,0.17636069655418396,0.17634426057338715,0.17632780969142914,0.17631137371063232,0.1762949526309967,0.1762785017490387,0.17626208066940308,0.17624567449092865,0.17622925341129303,0.1762128323316574,0.17619644105434418,0.17618003487586975,0.17616364359855652,0.1761472374200821,0.17613084614276886,0.17611448466777802,0.17609809339046478,0.17608171701431274,0.1760653406381607,0.17604897916316986,0.17603261768817902,0.17601627111434937,0.17599992454051971,0.17598356306552887,0.1759672313928604,0.17595089972019196,0.1759345680475235,0.17591823637485504,0.17590190470218658,0.17588558793067932,0.17586928606033325,0.175852969288826,0.17583666741847992,0.17582035064697266,0.17580407857894897,0.1757877767086029,0.17577147483825684,0.17575520277023315,0.17573893070220947,0.1757226586341858,0.17570637166500092,0.17569011449813843,0.17567385733127594,0.17565760016441345,0.17564134299755096,0.17562510073184967,0.17560885846614838,0.17559261620044708,0.17557638883590698,0.17556016147136688,0.17554393410682678,0.17552772164344788,0.17551149427890778,0.17549528181552887,0.17547908425331116,0.17546288669109344,0.17544668912887573,0.17543049156665802,0.1754143089056015,0.17539812624454498,0.17538194358348846,0.17536576092243195,0.17534959316253662,0.1753334403038025,0.17531727254390717,0.17530110478401184,0.1752849519252777,0.17526881396770477,0.17525267601013184,0.1752365231513977,0.17522038519382477,0.17520424723625183,0.17518813908100128,0.17517201602458954,0.1751558929681778,0.17513978481292725,0.1751236915588379,0.17510756850242615,0.1750914752483368,0.17507538199424744,0.17505928874015808,0.17504319548606873,0.17502711713314056,0.1750110387802124,0.17499497532844543,0.17497891187667847,0.1749628335237503,0.17494678497314453,0.17493073642253876,0.17491468787193298,0.1748986393213272,0.17488257586956024,0.17486655712127686,0.17485050857067108,0.1748344898223877,0.17481845617294312,0.17480245232582092,0.17478643357753754,0.17477042973041534,0.17475441098213196,0.17473840713500977,0.17472240328788757,0.17470642924308777,0.17469042539596558,0.17467443645000458,0.17465846240520477,0.17464250326156616,0.17462652921676636,0.17461055517196655,0.17459459602832794,0.17457863688468933,0.17456269264221191,0.1745467185974121,0.1745307892560959,0.17451484501361847,0.17449891567230225,0.17448297142982483,0.1744670420885086,0.17445112764835358,0.17443521320819855,0.17441929876804352,0.1744033843278885,0.17438746988773346,0.17437158524990082,0.1743556708097458,0.17433977127075195,0.1743238866329193,0.17430801689624786,0.17429213225841522,0.17427626252174377,0.17426039278507233,0.17424452304840088,0.17422865331172943,0.17421279847621918,0.17419694364070892,0.17418110370635986,0.1741652488708496,0.17414940893650055,0.17413358390331268,0.17411774396896362,0.17410191893577576,0.1740860939025879,0.17407026886940002,0.17405445873737335,0.17403864860534668,0.1740228533744812,0.17400704324245453,0.17399124801158905,0.17397545278072357,0.1739596724510193,0.17394386231899261,0.17392809689044952,0.17391231656074524,0.17389655113220215,0.17388077080249786,0.17386502027511597,0.17384926974773407,0.17383351922035217,0.17381776869297028,0.17380200326442719,0.17378626763820648,0.17377051711082458,0.17375479638576508,0.17373907566070557,0.17372334003448486,0.17370761930942535,0.17369191348552704,0.17367619276046753,0.1736604869365692,0.1736447811126709,0.17362909018993378,0.17361338436603546,0.17359769344329834,0.17358200252056122,0.1735663264989853,0.17355066537857056,0.17353497445583344,0.1735193133354187,0.17350365221500397,0.17348799109458923,0.1734723150730133,0.17345666885375977,0.17344103753566742,0.17342537641525269,0.17340974509716034,0.173394113779068,0.17337846755981445,0.1733628511428833,0.17334723472595215,0.173331618309021,0.17331600189208984,0.1733003854751587,0.17328478395938873,0.17326916754245758,0.17325358092784882,0.17323797941207886,0.1732224076986313,0.17320680618286133,0.17319123446941376,0.1731756627559662,0.17316009104251862,0.17314451932907104,0.17312894761562347,0.1731133908033371,0.17309783399105072,0.17308227717876434,0.17306673526763916,0.17305119335651398,0.1730356514453888,0.1730201244354248,0.17300459742546082,0.17298907041549683,0.17297354340553284,0.17295803129673004,0.17294250428676605,0.17292700707912445,0.17291150987148285,0.17289599776268005,0.17288050055503845,0.17286501824855804,0.17284952104091644,0.17283403873443604,0.17281854152679443,0.17280307412147522,0.172787606716156,0.1727721393108368,0.17275667190551758,0.17274120450019836,0.17272575199604034,0.17271029949188232,0.1726948618888855,0.17267942428588867,0.17266397178173065,0.17264854907989502,0.1726331263780594,0.17261768877506256,0.17260226607322693,0.1725868433713913,0.17257143557071686,0.17255601286888123,0.17254061996936798,0.17252521216869354,0.1725098192691803,0.17249444127082825,0.1724790334701538,0.17246365547180176,0.1724482625722885,0.17243289947509766,0.1724175214767456,0.17240214347839355,0.1723867952823639,0.17237143218517303,0.17235606908798218,0.17234072089195251,0.17232537269592285,0.17231003940105438,0.17229469120502472,0.17227934300899506,0.17226402461528778,0.1722486913204193,0.17223337292671204,0.17221803963184357,0.17220273613929749,0.1721874326467514,0.17217212915420532,0.17215681076049805,0.17214150726795197,0.17212621867656708,0.17211094498634338,0.1720956414937973,0.1720803678035736,0.17206509411334991,0.17204982042312622,0.17203453183174133,0.17201927304267883,0.17200401425361633,0.17198874056339264,0.17197349667549133,0.17195823788642883,0.17194300889968872,0.17192776501178741,0.1719125360250473,0.1718972772359848,0.1718820482492447,0.17186681926250458,0.17185162007808685,0.17183637619018555,0.17182117700576782,0.1718059778213501,0.17179076373577118,0.17177556455135345,0.17176035046577454,0.171745166182518,0.17172998189926147,0.17171479761600494,0.17169959843158722,0.17168442904949188,0.17166925966739655,0.1716540902853012,0.17163892090320587,0.17162376642227173,0.17160861194133759,0.17159345746040344,0.1715783029794693,0.17156316339969635,0.1715480089187622,0.17153288424015045,0.1715177297592163,0.17150261998176575,0.171487495303154,0.17147237062454224,0.17145726084709167,0.17144213616847992,0.17142702639102936,0.17141193151474,0.17139683663845062,0.17138172686100006,0.1713666319847107,0.17135153710842133,0.17133647203445435,0.17132137715816498,0.171306312084198,0.17129123210906982,0.17127616703510284,0.17126110196113586,0.17124603688716888,0.1712309718132019,0.17121592164039612,0.17120087146759033,0.17118582129478455,0.17117078602313995,0.17115575075149536,0.17114071547985077,0.17112568020820618,0.17111064493656158,0.17109562456607819,0.17108063399791718,0.17106559872627258,0.17105059325695038,0.17103558778762817,0.17102059721946716,0.17100559175014496,0.17099058628082275,0.17097559571266174,0.17096062004566193,0.17094562947750092,0.1709306538105011,0.17091567814350128,0.17090070247650146,0.17088575661182404,0.17087078094482422,0.1708558201789856,0.17084087431430817,0.17082592844963074,0.17081096768379211,0.17079602181911469,0.17078109085559845,0.17076615989208221,0.17075122892856598,0.17073629796504974,0.1707213819026947,0.17070645093917847,0.17069154977798462,0.17067661881446838,0.17066171765327454,0.1706468164920807,0.17063193023204803,0.170617014169693,0.17060212790966034,0.17058724164962769,0.17057235538959503,0.17055746912956238,0.17054258286952972,0.17052772641181946,0.170512855052948,0.17049799859523773,0.17048312723636627,0.170468270778656,0.17045341432094574,0.17043857276439667,0.1704237163066864,0.17040887475013733,0.17039404809474945,0.17037922143936157,0.1703643798828125,0.17034955322742462,0.17033472657203674,0.17031991481781006,0.17030510306358337,0.1702902913093567,0.17027547955513,0.17026068270206451,0.17024588584899902,0.17023108899593353,0.17021629214286804,0.17020151019096375,0.17018672823905945,0.17017193138599396,0.17015716433525085,0.17014239728450775,0.17012763023376465,0.17011286318302155,0.17009809613227844,0.17008334398269653,0.17006859183311462,0.17005383968353271,0.1700390875339508,0.1700243502855301,0.17000962793827057,0.16999489068984985,0.16998015344142914,0.16996543109416962,0.1699507087469101,0.16993598639965057,0.16992126405239105,0.16990657150745392,0.1698918491601944,0.16987715661525726,0.16986244916915894,0.1698477566242218,0.16983306407928467,0.16981837153434753,0.1698036938905716,0.16978901624679565,0.16977433860301971,0.16975966095924377,0.16974499821662903,0.16973033547401428,0.16971567273139954,0.1697010099887848,0.16968636214733124,0.16967171430587769,0.16965706646442413,0.16964241862297058,0.16962778568267822,0.16961313784122467,0.1695985198020935,0.16958388686180115,0.16956926882266998,0.16955463588237762,0.16954003274440765,0.1695254147052765,0.16951081156730652,0.16949620842933655,0.16948160529136658,0.1694670021533966,0.16945242881774902,0.16943782567977905,0.16942323744297028,0.1694086641073227,0.1693940907716751,0.16937951743602753,0.16936492919921875,0.16935037076473236,0.16933581233024597,0.1693212389945984,0.1693066954612732,0.169292151927948,0.1692775934934616,0.1692630499601364,0.16924850642681122,0.16923397779464722,0.16921943426132202,0.16920490562915802,0.1691903918981552,0.1691758632659912,0.1691613346338272,0.1691468358039856,0.1691323220729828,0.16911780834197998,0.16910330951213837,0.16908881068229675,0.16907431185245514,0.16905981302261353,0.1690453290939331,0.16903084516525269,0.16901637613773346,0.16900189220905304,0.1689874231815338,0.1689729541540146,0.16895848512649536,0.16894401609897614,0.1689295619726181,0.16891510784626007,0.16890065371990204,0.1688862144947052,0.16887176036834717,0.16885733604431152,0.16884289681911469,0.16882845759391785,0.1688140332698822,0.16879960894584656,0.1687851846218109,0.16877077519893646,0.168756365776062,0.16874194145202637,0.16872753202915192,0.16871313750743866,0.1686987280845642,0.16868433356285095,0.1686699390411377,0.16865555942058563,0.16864117980003357,0.1686267852783203,0.16861242055892944,0.16859804093837738,0.1685836762189865,0.16856929659843445,0.16855494678020477,0.1685405820608139,0.16852623224258423,0.16851188242435455,0.16849751770496368,0.1684831827878952,0.16846884787082672,0.16845451295375824,0.16844016313552856,0.16842584311962128,0.168411523103714,0.1683972030878067,0.16838288307189941,0.16836856305599213,0.16835425794124603,0.16833995282649994,0.16832564771175385,0.16831134259700775,0.16829703748226166,0.16828276216983795,0.16826847195625305,0.16825418174266815,0.16823989152908325,0.16822561621665955,0.16821135580539703,0.16819706559181213,0.16818280518054962,0.1681685447692871,0.1681542843580246,0.16814002394676208,0.16812577843666077,0.16811151802539825,0.16809727251529694,0.16808302700519562,0.1680687963962555,0.16805456578731537,0.16804032027721405,0.16802610456943512,0.168011873960495,0.16799765825271606,0.16798344254493713,0.1679692417383194,0.16795501112937927,0.16794081032276154,0.1679266095161438,0.16791240870952606,0.16789822280406952,0.16788402199745178,0.16786983609199524,0.1678556650876999,0.16784147918224335,0.1678272932767868,0.16781312227249146,0.1677989512681961,0.16778479516506195,0.1677706092596054,0.16775645315647125,0.1677422970533371,0.16772815585136414,0.16771399974822998,0.16769985854625702,0.16768571734428406,0.1676715910434723,0.16765743494033813,0.16764330863952637,0.1676291972398758,0.16761507093906403,0.16760094463825226,0.1675868183374405,0.1675727218389511,0.16755861043930054,0.16754449903964996,0.1675303876399994,0.1675163060426712,0.16750220954418182,0.16748811304569244,0.16747403144836426,0.16745994985103607,0.16744586825370789,0.1674317866563797,0.1674177050590515,0.16740363836288452,0.16738957166671753,0.16737551987171173,0.16736143827438354,0.16734738647937775,0.16733334958553314,0.16731929779052734,0.16730526089668274,0.16729120910167694,0.16727717220783234,0.16726313531398773,0.16724911332130432,0.16723506152629852,0.1672210544347763,0.1672070324420929,0.16719301044940948,0.16717898845672607,0.16716499626636505,0.16715098917484283,0.16713698208332062,0.1671229749917984,0.16710898280143738,0.16709499061107635,0.16708101332187653,0.1670670211315155,0.16705302894115448,0.16703905165195465,0.16702508926391602,0.1670111119747162,0.16699714958667755,0.16698318719863892,0.16696922481060028,0.16695526242256165,0.166941300034523,0.16692736744880676,0.16691340506076813,0.16689947247505188,0.16688551008701324,0.1668715924024582,0.16685765981674194,0.1668437272310257,0.16682980954647064,0.1668158769607544,0.16680195927619934,0.1667880415916443,0.16677413880825043,0.16676022112369537,0.1667463183403015,0.16673241555690765,0.166718527674675,0.16670462489128113,0.16669073700904846,0.1666768491268158,0.16666297614574432,0.16664908826351166,0.166635200381279,0.16662132740020752,0.16660746932029724,0.16659359633922577,0.1665797233581543,0.1665658801794052,0.16655200719833374,0.16653816401958466,0.16652430593967438,0.1665104627609253,0.1664966195821762,0.16648279130458832,0.16646894812583923,0.16645511984825134,0.16644129157066345,0.16642746329307556,0.16641364991664886,0.16639982163906097,0.16638600826263428,0.16637219488620758,0.16635839641094208,0.16634458303451538,0.16633078455924988,0.16631698608398438,0.16630320250988007,0.16628938913345337,0.16627560555934906,0.16626182198524475,0.16624805331230164,0.16623426973819733,0.1662205010652542,0.1662067323923111,0.1661929488182068,0.16617919504642487,0.16616542637348175,0.16615167260169983,0.1661379188299179,0.16612417995929718,0.16611042618751526,0.16609668731689453,0.1660829484462738,0.16606920957565308,0.16605548560619354,0.16604174673557281,0.16602802276611328,0.16601429879665375,0.1660005748271942,0.16598686575889587,0.16597315669059753,0.1659594476222992,0.16594573855400085,0.16593202948570251,0.16591833531856537,0.16590464115142822,0.16589096188545227,0.16587725281715393,0.16586357355117798,0.16584989428520203,0.16583621501922607,0.16582253575325012,0.16580885648727417,0.1657951921224594,0.16578152775764465,0.1657678633928299,0.16575421392917633,0.16574054956436157,0.165726900100708,0.16571326553821564,0.16569961607456207,0.1656859815120697,0.16567233204841614,0.16565869748592377,0.1656450629234314,0.16563142836093903,0.16561782360076904,0.16560420393943787,0.1655905842781067,0.1655769646167755,0.16556334495544434,0.16554974019527435,0.16553613543510437,0.1655225306749344,0.1655089408159256,0.16549533605575562,0.16548176109790802,0.16546817123889923,0.16545458137989044,0.16544100642204285,0.16542743146419525,0.16541384160518646,0.16540028154850006,0.16538672149181366,0.16537314653396606,0.16535957157611847,0.16534602642059326,0.16533248126506805,0.16531892120838165,0.16530536115169525,0.16529183089733124,0.16527830064296722,0.16526475548744202,0.165251225233078,0.165237694978714,0.16522416472434998,0.16521063446998596,0.16519711911678314,0.16518358886241913,0.1651700884103775,0.16515657305717468,0.16514307260513306,0.16512955725193024,0.1651160567998886,0.16510255634784698,0.16508907079696655,0.16507557034492493,0.1650620847940445,0.16504861414432526,0.16503512859344482,0.1650216430425644,0.16500817239284515,0.16499468684196472,0.16498123109340668,0.16496777534484863,0.1649543046951294,0.16494083404541016,0.1649273931980133,0.16491393744945526,0.1649004966020584,0.16488704085350037,0.16487360000610352,0.16486015915870667,0.16484671831130981,0.16483330726623535,0.1648198664188385,0.16480645537376404,0.16479302942752838,0.16477960348129272,0.16476619243621826,0.1647527813911438,0.16473937034606934,0.16472595930099487,0.1647125631570816,0.16469916701316833,0.16468577086925507,0.1646723747253418,0.16465897858142853,0.16464559733867645,0.16463221609592438,0.1646188199520111,0.16460545361042023,0.16459208726882935,0.16457872092723846,0.16456535458564758,0.1645519882440567,0.16453862190246582,0.16452527046203613,0.16451191902160645,0.16449855268001556,0.16448521614074707,0.16447187960147858,0.16445854306221008,0.1644451916217804,0.1644318699836731,0.1644185334444046,0.1644052118062973,0.1643918752670288,0.1643785536289215,0.1643652319908142,0.1643519252538681,0.1643386334180832,0.1643253117799759,0.16431200504302979,0.16429869830608368,0.16428540647029877,0.16427209973335266,0.16425882279872894,0.16424553096294403,0.16423223912715912,0.1642189621925354,0.16420568525791168,0.16419240832328796,0.16417913138866425,0.16416585445404053,0.164152592420578,0.16413933038711548,0.16412608325481415,0.16411282122135162,0.1640995591878891,0.16408632695674896,0.16407307982444763,0.1640598326921463,0.16404658555984497,0.16403333842754364,0.1640201210975647,0.16400688886642456,0.16399365663528442,0.16398043930530548,0.16396722197532654,0.1639540046453476,0.16394077241420746,0.16392755508422852,0.16391435265541077,0.16390115022659302,0.16388794779777527,0.16387474536895752,0.16386155784130096,0.16384835541248322,0.16383516788482666,0.1638219803571701,0.16380879282951355,0.1637956202030182,0.16378244757652283,0.16376927495002747,0.1637561023235321,0.16374294459819794,0.16372977197170258,0.1637166142463684,0.16370344161987305,0.16369029879570007,0.1636771559715271,0.16366401314735413,0.16365085542201996,0.16363771259784698,0.1636245846748352,0.16361144185066223,0.16359831392765045,0.16358517110347748,0.1635720580816269,0.1635589301586151,0.16354580223560333,0.16353270411491394,0.16351957619190216,0.16350647807121277,0.163493350148201,0.1634802520275116,0.1634671688079834,0.163454070687294,0.16344097256660461,0.16342787444591522,0.16341479122638702,0.16340170800685883,0.16338862478733063,0.16337554156780243,0.16336247324943542,0.16334940493106842,0.16333633661270142,0.16332325339317322,0.1633101999759674,0.1632971316576004,0.1632840782403946,0.16327102482318878,0.16325797140598297,0.16324493288993835,0.16323187947273254,0.16321885585784912,0.1632058024406433,0.1631927788257599,0.16317974030971527,0.16316671669483185,0.16315367817878723,0.1631406545639038,0.16312764585018158,0.16311463713645935,0.16310162842273712,0.1630886048078537,0.16307561099529266,0.16306260228157043,0.1630495935678482,0.16303659975528717,0.16302360594272614,0.1630106270313263,0.16299763321876526,0.16298463940620422,0.16297166049480438,0.16295868158340454,0.1629457026720047,0.16293273866176605,0.1629197597503662,0.16290679574012756,0.1628938466310501,0.16288086771965027,0.16286791861057281,0.16285496950149536,0.1628420203924179,0.16282905638217926,0.162816122174263,0.16280317306518555,0.1627902388572693,0.16277730464935303,0.16276437044143677,0.1627514511346817,0.16273851692676544,0.16272559762001038,0.16271266341209412,0.16269975900650024,0.16268683969974518,0.1626739352941513,0.16266103088855743,0.16264812648296356,0.1626352220773697,0.162622332572937,0.16260942816734314,0.16259652376174927,0.16258364915847778,0.1625707596540451,0.16255787014961243,0.16254498064517975,0.16253210604190826,0.16251924633979797,0.1625063717365265,0.162493497133255,0.16248063743114471,0.16246777772903442,0.16245491802692413,0.16244205832481384,0.16242921352386475,0.16241635382175446,0.16240350902080536,0.16239067912101746,0.16237781941890717,0.16236498951911926,0.16235215961933136,0.16233932971954346,0.16232649981975555,0.16231366991996765,0.16230085492134094,0.16228802502155304,0.16227521002292633,0.16226240992546082,0.1622495949268341,0.1622367799282074,0.16222397983074188,0.16221117973327637,0.16219839453697205,0.16218559443950653,0.16217279434204102,0.1621600091457367,0.16214722394943237,0.16213443875312805,0.16212166845798492,0.1621088832616806,0.16209611296653748,0.16208332777023315,0.16207057237625122,0.1620578020811081,0.16204504668712616,0.16203229129314423,0.1620195358991623,0.16200678050518036,0.16199402511119843,0.16198128461837769,0.16196854412555695,0.161955788731575,0.16194304823875427,0.16193032264709473,0.16191759705543518,0.16190487146377563,0.1618921309709549,0.16187940537929535,0.161866694688797,0.16185398399829865,0.1618412584066391,0.16182856261730194,0.1618158519268036,0.16180315613746643,0.16179044544696808,0.16177773475646973,0.16176505386829376,0.1617523580789566,0.16173967719078064,0.1617269665002823,0.16171428561210632,0.16170161962509155,0.1616889387369156,0.16167627274990082,0.16166359186172485,0.1616509109735489,0.1616382598876953,0.16162559390068054,0.16161294281482697,0.1616002768278122,0.16158762574195862,0.16157497465610504,0.16156232357025146,0.1615496724843979,0.1615370362997055,0.16152441501617432,0.16151176393032074,0.16149912774562836,0.16148649156093597,0.16147388517856598,0.1614612489938736,0.1614486277103424,0.1614360213279724,0.16142338514328003,0.16141077876091003,0.16139817237854004,0.16138556599617004,0.16137295961380005,0.16136035323143005,0.16134776175022125,0.16133517026901245,0.16132257878780365,0.16130998730659485,0.16129739582538605,0.16128481924533844,0.16127224266529083,0.16125966608524323,0.16124708950519562,0.161234512925148,0.1612219512462616,0.16120938956737518,0.16119682788848877,0.16118426620960236,0.16117170453071594,0.16115915775299072,0.1611465960741043,0.1611340492963791,0.16112151741981506,0.16110897064208984,0.16109643876552582,0.1610838919878006,0.16107136011123657,0.16105882823467255,0.16104631125926971,0.1610337793827057,0.16102126240730286,0.16100873053073883,0.1609962284564972,0.16098371148109436,0.16097120940685272,0.16095870733261108,0.16094620525836945,0.1609336882829666,0.16092118620872498,0.16090869903564453,0.1608961969614029,0.16088372468948364,0.1608712375164032,0.16085875034332275,0.1608462780714035,0.16083379089832306,0.16082130372524261,0.16080884635448456,0.1607963740825653,0.16078391671180725,0.160771444439888,0.16075897216796875,0.1607465296983719,0.16073407232761383,0.16072162985801697,0.1607091724872589,0.16069671511650085,0.16068428754806519,0.16067184507846832,0.16065940260887146,0.1606469750404358,0.16063454747200012,0.16062210500240326,0.16060969233512878,0.16059726476669312,0.16058485209941864,0.16057242453098297,0.1605600118637085,0.16054761409759521,0.16053520143032074,0.16052280366420746,0.16051039099693298,0.1604979932308197,0.16048558056354523,0.16047319769859314,0.16046081483364105,0.16044841706752777,0.16043603420257568,0.1604236513376236,0.1604112684726715,0.16039888560771942,0.16038653254508972,0.16037414968013763,0.16036179661750793,0.16034941375255585,0.16033704578876495,0.16032469272613525,0.16031233966350555,0.16029998660087585,0.16028763353824615,0.16027529537677765,0.16026294231414795,0.16025060415267944,0.16023825109004974,0.16022592782974243,0.16021358966827393,0.1602012664079666,0.1601889282464981,0.1601766049861908,0.16016428172588348,0.16015195846557617,0.16013965010643005,0.16012734174728394,0.16011501848697662,0.1601027101278305,0.1600904017686844,0.16007810831069946,0.16006581485271454,0.16005350649356842,0.1600412279367447,0.16002891957759857,0.16001664102077484,0.16000434756278992,0.1599920690059662,0.15997979044914246,0.15996751189231873,0.159955233335495,0.15994296967983246,0.15993069112300873,0.1599184274673462,0.15990616381168365,0.15989390015602112,0.15988163650035858,0.15986938774585724,0.1598571538925171,0.15984490513801575,0.1598326563835144,0.15982040762901306,0.15980815887451172,0.15979592502117157,0.15978369116783142,0.15977145731449127,0.15975923836231232,0.15974700450897217,0.1597347855567932,0.15972256660461426,0.1597103327512741,0.15969812870025635,0.1596859246492386,0.15967370569705963,0.15966150164604187,0.1596492975950241,0.15963709354400635,0.15962490439414978,0.15961270034313202,0.15960051119327545,0.15958832204341888,0.15957613289356232,0.15956394374370575,0.15955175459384918,0.1595395803451538,0.15952740609645844,0.15951523184776306,0.1595030575990677,0.1594908982515335,0.15947873890399933,0.15946656465530396,0.15945442020893097,0.1594422608613968,0.1594301015138626,0.15941795706748962,0.15940579771995544,0.15939366817474365,0.15938150882720947,0.15936937928199768,0.1593572497367859,0.1593451052904129,0.1593329757452011,0.15932084619998932,0.15930871665477753,0.15929660201072693,0.15928447246551514,0.15927237272262573,0.15926022827625275,0.15924812853336334,0.15923602879047394,0.15922391414642334,0.15921181440353394,0.15919971466064453,0.15918761491775513,0.15917553007602692,0.1591634303331375,0.1591513305902481,0.1591392457485199,0.1591271609067917,0.15911507606506348,0.15910299122333527,0.15909092128276825,0.15907885134220123,0.15906678140163422,0.1590547114610672,0.15904264152050018,0.15903058648109436,0.15901851654052734,0.15900647640228271,0.1589944064617157,0.15898235142230988,0.15897031128406525,0.15895827114582062,0.1589462161064148,0.15893419086933136,0.15892213582992554,0.1589101105928421,0.15889807045459747,0.15888604521751404,0.1588740199804306,0.15886199474334717,0.15884996950626373,0.1588379591703415,0.15882593393325806,0.15881392359733582,0.15880192816257477,0.15878990292549133,0.15877790749073029,0.15876589715480804,0.1587539166212082,0.15874190628528595,0.1587299108505249,0.15871793031692505,0.158705934882164,0.15869393944740295,0.1586819589138031,0.15866999328136444,0.1586580127477646,0.15864603221416473,0.15863405168056488,0.15862208604812622,0.15861012041568756,0.1585981547832489,0.15858618915081024,0.15857423841953278,0.15856227278709412,0.15855032205581665,0.15853837132453918,0.15852642059326172,0.15851448476314545,0.15850253403186798,0.1584905982017517,0.15847864747047424,0.15846672654151917,0.1584547907114029,0.15844286978244781,0.15843093395233154,0.15841901302337646,0.1584070920944214,0.1583951711654663,0.15838325023651123,0.15837134420871735,0.15835942327976227,0.15834753215312958,0.1583356112241745,0.1583237200975418,0.15831181406974792,0.15829992294311523,0.15828801691532135,0.15827614068984985,0.15826423466205597,0.15825235843658447,0.15824048221111298,0.15822859108448029,0.1582167148590088,0.1582048386335373,0.1581929624080658,0.1581811010837555,0.158169224858284,0.1581573635339737,0.1581455022096634,0.1581336408853531,0.15812177956104279,0.15810993313789368,0.15809808671474457,0.15808622539043427,0.15807437896728516,0.15806254744529724,0.15805070102214813,0.15803886950016022,0.1580270230770111,0.1580151915550232,0.15800337493419647,0.15799154341220856,0.15797971189022064,0.15796789526939392,0.1579560786485672,0.15794424712657928,0.15793244540691376,0.15792062878608704,0.1579088270664215,0.1578970104455948,0.15788519382476807,0.15787340700626373,0.1578616052865982,0.15784980356693268,0.15783801674842834,0.157826229929924,0.15781442821025848,0.15780265629291534,0.1577908843755722,0.15777908265590668,0.15776731073856354,0.1577555388212204,0.15774376690387726,0.15773199498653412,0.15772023797035217,0.15770846605300903,0.1576967090368271,0.15768493711948395,0.1576731950044632,0.15766143798828125,0.1576496809720993,0.15763793885707855,0.1576261967420578,0.15761445462703705,0.1576027125120163,0.15759097039699554,0.1575792282819748,0.15756750106811523,0.15755577385425568,0.15754404664039612,0.15753231942653656,0.157520592212677,0.15750887989997864,0.15749715268611908,0.15748544037342072,0.15747372806072235,0.15746203064918518,0.15745031833648682,0.15743862092494965,0.15742690861225128,0.1574152261018753,0.15740352869033813,0.15739183127880096,0.1573801338672638,0.15736845135688782,0.15735676884651184,0.15734507143497467,0.1573333889245987,0.1573217213153839,0.15731005370616913,0.15729837119579315,0.15728670358657837,0.1572750359773636,0.1572633683681488,0.15725170075893402,0.15724006295204163,0.15722838044166565,0.15721674263477325,0.15720508992671967,0.15719343721866608,0.1571817845106125,0.1571701467037201,0.1571585088968277,0.1571468710899353,0.1571352183818817,0.1571235954761505,0.15711195766925812,0.15710033476352692,0.15708871185779572,0.15707708895206451,0.1570654660463333,0.1570538431406021,0.1570422351360321,0.1570306122303009,0.1570190042257309,0.15700741112232208,0.15699578821659088,0.15698419511318207,0.15697258710861206,0.15696099400520325,0.15694940090179443,0.15693780779838562,0.1569262146949768,0.156914621591568,0.15690304338932037,0.15689146518707275,0.15687987208366394,0.15686830878257751,0.1568567305803299,0.15684515237808228,0.15683358907699585,0.15682202577590942,0.156810462474823,0.15679889917373657,0.15678733587265015,0.15677578747272491,0.1567642241716385,0.15675267577171326,0.15674112737178802,0.1567295640707016,0.15671803057193756,0.15670649707317352,0.1566949486732483,0.15668341517448425,0.15667188167572021,0.15666034817695618,0.15664882957935333,0.1566372960805893,0.15662576258182526,0.1566142588853836,0.15660274028778076,0.15659122169017792,0.15657970309257507,0.15656818449497223,0.15655669569969177,0.15654517710208893,0.15653367340564728,0.15652216970920563,0.15651068091392517,0.15649917721748352,0.15648768842220306,0.1564761996269226,0.15646471083164215,0.1564532369375229,0.15644173324108124,0.15643025934696198,0.1564187854528427,0.15640731155872345,0.1563958376646042,0.15638436377048492,0.15637290477752686,0.1563614457845688,0.15634997189044952,0.15633851289749146,0.1563270539045334,0.15631559491157532,0.15630413591861725,0.15629269182682037,0.1562812477350235,0.15626980364322662,0.15625835955142975,0.15624691545963287,0.1562354862689972,0.1562240570783615,0.15621261298656464,0.15620118379592896,0.15618975460529327,0.1561783254146576,0.1561669111251831,0.15615549683570862,0.15614406764507294,0.15613265335559845,0.15612123906612396,0.15610982477664948,0.15609842538833618,0.1560870260000229,0.1560756117105484,0.1560642272233963,0.15605281293392181,0.15604142844676971,0.15603004395961761,0.15601864457130432,0.15600726008415222,0.15599587559700012,0.15598449110984802,0.15597310662269592,0.15596172213554382,0.15595035254955292,0.155938982963562,0.1559276133775711,0.1559162437915802,0.1559048742055893,0.15589351952075958,0.15588214993476868,0.15587079524993896,0.15585944056510925,0.15584808588027954,0.15583674609661102,0.1558254063129425,0.1558140367269516,0.15580271184444427,0.15579137206077576,0.15578003227710724,0.15576869249343872,0.1557573676109314,0.15574602782726288,0.15573470294475555,0.15572336316108704,0.1557120531797409,0.15570072829723358,0.15568941831588745,0.15567810833454132,0.155666783452034,0.15565547347068787,0.15564416348934174,0.1556328535079956,0.15562155842781067,0.15561026334762573,0.1555989533662796,0.15558767318725586,0.15557636320590973,0.155565083026886,0.15555378794670105,0.1555424928665161,0.15553121268749237,0.15551993250846863,0.15550866723060608,0.15549738705158234,0.1554861068725586,0.15547484159469604,0.1554635763168335,0.15545231103897095,0.1554410457611084,0.15542978048324585,0.1554185152053833,0.15540726482868195,0.1553960144519806,0.15538474917411804,0.1553734987974167,0.15536226332187653,0.15535101294517517,0.155339777469635,0.15532852709293365,0.1553172916173935,0.15530607104301453,0.15529483556747437,0.1552836000919342,0.15527237951755524,0.15526115894317627,0.1552499234676361,0.15523870289325714,0.15522748231887817,0.1552162617444992,0.15520505607128143,0.15519385039806366,0.1551826447248459,0.1551714390516281,0.15516023337841034,0.15514902770519257,0.155137836933136,0.1551266312599182,0.15511544048786163,0.15510426461696625,0.15509305894374847,0.1550818830728531,0.1550706923007965,0.15505951642990112,0.15504834055900574,0.15503716468811035,0.15502598881721497,0.15501481294631958,0.1550036370754242,0.15499247610569,0.1549813151359558,0.15497015416622162,0.15495899319648743,0.15494783222675323,0.15493668615818024,0.15492552518844604,0.15491437911987305,0.15490323305130005,0.15489208698272705,0.15488094091415405,0.15486980974674225,0.15485866367816925,0.15484753251075745,0.15483640134334564,0.15482527017593384,0.15481412410736084,0.15480300784111023,0.15479189157485962,0.15478076040744781,0.1547696590423584,0.1547585278749466,0.15474741160869598,0.15473631024360657,0.15472519397735596,0.15471409261226654,0.15470299124717712,0.1546918898820877,0.1546807885169983,0.15466968715190887,0.15465860068798065,0.15464749932289124,0.154636412858963,0.1546253263950348,0.15461423993110657,0.15460316836833954,0.15459206700325012,0.1545809954404831,0.15456992387771606,0.15455885231494904,0.154547780752182,0.15453670918941498,0.15452563762664795,0.15451458096504211,0.15450352430343628,0.15449245274066925,0.15448139607906342,0.15447035431861877,0.15445929765701294,0.1544482558965683,0.15443719923496246,0.15442615747451782,0.15441511571407318,0.15440407395362854,0.1543930470943451,0.15438199043273926,0.1543709635734558,0.15435993671417236,0.15434890985488892,0.15433786809444427,0.15432685613632202,0.15431584417819977,0.15430481731891632,0.15429379045963287,0.15428277850151062,0.15427178144454956,0.1542607694864273,0.15424975752830505,0.154238760471344,0.15422774851322174,0.15421675145626068,0.15420575439929962,0.15419475734233856,0.1541837751865387,0.15417277812957764,0.15416179597377777,0.1541507989168167,0.15413983166217804,0.15412883460521698,0.1541178673505783,0.15410688519477844,0.15409591794013977,0.1540849357843399,0.15407396852970123,0.15406300127506256,0.1540520340204239,0.15404106676578522,0.15403011441230774,0.15401916205883026,0.1540081948041916,0.1539972573518753,0.15398629009723663,0.15397535264492035,0.15396440029144287,0.1539534628391266,0.1539425253868103,0.15393158793449402,0.15392065048217773,0.15390971302986145,0.15389877557754517,0.15388783812522888,0.1538769155740738,0.1538659930229187,0.1538550704717636,0.15384416282176971,0.15383322536945343,0.15382231771945953,0.15381139516830444,0.15380048751831055,0.15378957986831665,0.15377868711948395,0.15376777946949005,0.15375687181949615,0.15374597907066345,0.15373507142066956,0.15372417867183685,0.15371328592300415,0.15370240807533264,0.15369151532649994,0.15368062257766724,0.15366974472999573,0.15365886688232422,0.1536479890346527,0.1536371111869812,0.1536262333393097,0.15361535549163818,0.15360449254512787,0.15359362959861755,0.15358276665210724,0.15357188880443573,0.1535610407590866,0.1535501778125763,0.15353932976722717,0.15352846682071686,0.15351761877536774,0.15350677073001862,0.1534959226846695,0.15348507463932037,0.15347424149513245,0.15346340835094452,0.1534525603055954,0.15344172716140747,0.15343089401721954,0.1534200757741928,0.15340924263000488,0.15339840948581696,0.15338757634162903,0.1533767729997635,0.15336593985557556,0.15335513651371002,0.1533443182706833,0.15333350002765656,0.15332268178462982,0.15331187844276428,0.15330107510089874,0.1532902717590332,0.15327948331832886,0.15326867997646332,0.15325787663459778,0.15324708819389343,0.1532362997531891,0.15322551131248474,0.1532147228717804,0.15320393443107605,0.1531931608915329,0.15318237245082855,0.1531715989112854,0.15316082537174225,0.1531500518321991,0.15313927829265594,0.1531285047531128,0.15311774611473083,0.15310698747634888,0.15309622883796692,0.15308545529842377,0.1530746966600418,0.15306395292282104,0.1530531942844391,0.15304243564605713,0.15303169190883636,0.1530209481716156,0.15301021933555603,0.15299946069717407,0.1529887318611145,0.15297798812389374,0.15296725928783417,0.1529565155506134,0.15294578671455383,0.15293505787849426,0.1529243290424347,0.15291361510753632,0.15290288627147675,0.15289217233657837,0.15288145840168,0.15287074446678162,0.15286003053188324,0.15284931659698486,0.15283861756324768,0.1528279185295105,0.15281720459461212,0.15280650556087494,0.15279580652713776,0.15278510749340057,0.1527744084596634,0.1527637243270874,0.15275302529335022,0.15274235606193542,0.15273165702819824,0.15272097289562225,0.15271028876304626,0.15269961953163147,0.15268895030021667,0.15267826616764069,0.1526675969362259,0.1526569277048111,0.1526462584733963,0.1526355892419815,0.1526249349117279,0.1526142656803131,0.1526036113500595,0.1525929570198059,0.1525823026895523,0.1525716483592987,0.1525609940290451,0.1525503545999527,0.1525397002696991,0.1525290608406067,0.15251842141151428,0.15250779688358307,0.15249715745449066,0.15248651802539825,0.15247589349746704,0.15246525406837463,0.15245462954044342,0.1524440050125122,0.152433380484581,0.15242275595664978,0.15241213142871857,0.15240152180194855,0.15239091217517853,0.1523803025484085,0.1523696929216385,0.15235908329486847,0.15234848856925964,0.15233787894248962,0.1523272842168808,0.15231667459011078,0.15230607986450195,0.15229548513889313,0.1522848904132843,0.15227429568767548,0.15226371586322784,0.1522531360387802,0.15224255621433258,0.15223196148872375,0.15222139656543732,0.15221081674098969,0.15220025181770325,0.15218967199325562,0.15217909216880798,0.15216852724552155,0.1521579772233963,0.15214741230010986,0.15213684737682343,0.152126282453537,0.15211573243141174,0.1521051824092865,0.15209461748600006,0.152084082365036,0.15207351744174957,0.15206298232078552,0.15205243229866028,0.15204189717769623,0.15203136205673218,0.15202082693576813,0.15201029181480408,0.15199975669384003,0.15198922157287598,0.15197870135307312,0.15196818113327026,0.1519576460123062,0.15194712579250336,0.1519366055727005,0.15192610025405884,0.15191558003425598,0.15190507471561432,0.15189455449581146,0.1518840491771698,0.15187354385852814,0.15186303853988647,0.1518525332212448,0.15184204280376434,0.15183153748512268,0.1518210470676422,0.15181054174900055,0.15180006623268127,0.1517895758152008,0.15177907049655914,0.15176859498023987,0.1517581194639206,0.15174764394760132,0.15173715353012085,0.15172669291496277,0.1517162173986435,0.15170574188232422,0.15169528126716614,0.15168479084968567,0.15167434513568878,0.1516638845205307,0.15165340900421143,0.15164294838905334,0.15163250267505646,0.15162204205989838,0.1516115963459015,0.1516011506319046,0.15159070491790771,0.15158024430274963,0.15156981348991394,0.15155936777591705,0.15154893696308136,0.15153849124908447,0.15152806043624878,0.15151762962341309,0.1515071988105774,0.1514967679977417,0.1514863520860672,0.1514759212732315,0.1514654904603958,0.1514550745487213,0.15144465863704681,0.15143424272537231,0.15142382681369781,0.15141341090202332,0.15140300989151,0.1513926088809967,0.1513822078704834,0.1513718068599701,0.1513614058494568,0.15135100483894348,0.15134061872959137,0.15133020281791687,0.15131981670856476,0.15130943059921265,0.15129904448986053,0.15128865838050842,0.1512782722711563,0.1512679010629654,0.15125752985477448,0.15124714374542236,0.15123677253723145,0.15122640132904053,0.1512160301208496,0.1512056589126587,0.15119528770446777,0.15118493139743805,0.15117457509040833,0.1511642038822174,0.15115384757518768,0.15114349126815796,0.15113313496112823,0.1511227935552597,0.15111243724822998,0.15110209584236145,0.15109175443649292,0.1510814130306244,0.15107105672359467,0.15106073021888733,0.1510503888130188,0.15104006230831146,0.15102972090244293,0.1510193943977356,0.15100906789302826,0.15099874138832092,0.1509884148836136,0.15097808837890625,0.1509677767753601,0.15095746517181396,0.15094713866710663,0.15093684196472168,0.15092653036117554,0.1509162187576294,0.15090590715408325,0.1508955955505371,0.15088529884815216,0.1508750021457672,0.15086470544338226,0.15085440874099731,0.15084411203861237,0.1508338302373886,0.15082353353500366,0.1508132517337799,0.15080295503139496,0.1507926732301712,0.15078239142894745,0.1507721245288849,0.15076182782649994,0.15075156092643738,0.15074129402637482,0.15073101222515106,0.1507207453250885,0.15071047842502594,0.15070022642612457,0.150689959526062,0.15067969262599945,0.15066944062709808,0.15065918862819672,0.15064893662929535,0.15063868463039398,0.15062843263149261,0.15061818063259125,0.15060794353485107,0.1505976915359497,0.15058743953704834,0.15057720243930817,0.150566965341568,0.150556743144989,0.15054649114608765,0.15053626894950867,0.1505260467529297,0.1505158245563507,0.15050558745861053,0.15049536526203156,0.15048514306545258,0.1504749357700348,0.1504647135734558,0.15045449137687683,0.15044428408145905,0.15043407678604126,0.15042386949062347,0.1504136621952057,0.1504034548997879,0.1503932625055313,0.15038307011127472,0.15037286281585693,0.15036267042160034,0.15035247802734375,0.15034228563308716,0.15033209323883057,0.15032190084457397,0.15031172335147858,0.15030154585838318,0.15029136836528778,0.1502811759710312,0.1502709984779358,0.1502608209848404,0.150250643491745,0.1502404808998108,0.1502303034067154,0.15022015571594238,0.15020997822284698,0.15019981563091278,0.15018966794013977,0.15017949044704437,0.15016934275627136,0.15015918016433716,0.15014903247356415,0.15013888478279114,0.15012873709201813,0.1501186043024063,0.1501084417104721,0.1500983089208603,0.15008817613124847,0.15007802844047546,0.15006789565086365,0.15005776286125183,0.15004763007164001,0.1500374972820282,0.15002736449241638,0.15001724660396576,0.15000712871551514,0.14999699592590332,0.1499868780374527,0.14997677505016327,0.14996664226055145,0.14995653927326202,0.1499464362859726,0.14993631839752197,0.14992620050907135,0.14991611242294312,0.1499060094356537,0.14989589154720306,0.14988580346107483,0.1498757004737854,0.14986561238765717,0.14985552430152893,0.1498454213142395,0.14983533322811127,0.14982524514198303,0.1498151570558548,0.14980508387088776,0.14979499578475952,0.14978493750095367,0.14977484941482544,0.1497647613286972,0.14975470304489136,0.14974462985992432,0.14973457157611847,0.14972448348999023,0.1497144252061844,0.14970438182353973,0.1496943086385727,0.14968425035476685,0.149674192070961,0.14966413378715515,0.1496540904045105,0.14964403212070465,0.14963398873806,0.14962394535541534,0.1496139019727707,0.14960385859012604,0.14959381520748138,0.14958377182483673,0.14957374334335327,0.1495637148618698,0.14955367147922516,0.1495436429977417,0.14953362941741943,0.14952360093593597,0.14951357245445251,0.14950354397296906,0.1494935303926468,0.14948351681232452,0.14947348833084106,0.1494634747505188,0.14945347607135773,0.14944346249103546,0.1494334638118744,0.14942345023155212,0.14941343665122986,0.14940345287322998,0.14939343929290771,0.14938344061374664,0.14937345683574677,0.1493634581565857,0.14935347437858582,0.14934347569942474,0.14933349192142487,0.149323508143425,0.1493135243654251,0.14930352568626404,0.14929355680942535,0.14928357303142548,0.1492736041545868,0.1492636352777481,0.14925366640090942,0.14924368262290955,0.14923372864723206,0.14922375977039337,0.1492137908935547,0.149203822016716,0.1491938680410385,0.14918391406536102,0.14917394518852234,0.14916400611400604,0.14915405213832855,0.14914411306381226,0.14913414418697357,0.14912420511245728,0.14911426603794098,0.14910432696342468,0.1490943878889084,0.1490844488143921,0.1490745097398758,0.1490645855665207,0.1490546464920044,0.1490447223186493,0.1490347981452942,0.1490248590707779,0.1490149348974228,0.1490050107240677,0.14899510145187378,0.14898517727851868,0.14897525310516357,0.14896534383296967,0.14895543456077576,0.14894552528858185,0.14893561601638794,0.14892572164535522,0.14891581237316132,0.1489059031009674,0.1488960087299347,0.14888611435890198,0.14887620508670807,0.14886631071567535,0.14885643124580383,0.14884653687477112,0.1488366425037384,0.14882676303386688,0.14881688356399536,0.14880698919296265,0.14879710972309113,0.1487872302532196,0.14877736568450928,0.14876748621463776,0.14875762164592743,0.1487477421760559,0.1487378627061844,0.14872799813747406,0.14871814846992493,0.1487082690000534,0.14869841933250427,0.14868855476379395,0.1486787050962448,0.14866884052753448,0.14865899085998535,0.14864914119243622,0.14863929152488708,0.14862944185733795,0.14861960709095,0.14860975742340088,0.14859992265701294,0.148590087890625,0.14858023822307587,0.14857040345668793,0.1485605686903,0.14855073392391205,0.1485409140586853,0.14853107929229736,0.14852125942707062,0.14851143956184387,0.14850160479545593,0.14849179983139038,0.14848197996616364,0.1484721601009369,0.14846235513687134,0.1484525352716446,0.14844271540641785,0.1484329253435135,0.14842312037944794,0.1484133005142212,0.14840351045131683,0.14839370548725128,0.14838390052318573,0.14837411046028137,0.14836432039737701,0.14835453033447266,0.1483447253704071,0.14833493530750275,0.14832516014575958,0.14831537008285522,0.14830559492111206,0.1482958048582077,0.14828602969646454,0.14827625453472137,0.1482664793729782,0.14825670421123505,0.14824692904949188,0.14823715388774872,0.14822739362716675,0.14821763336658478,0.1482078731060028,0.14819811284542084,0.14818835258483887,0.1481785923242569,0.14816883206367493,0.14815907180309296,0.14814932644367218,0.1481395810842514,0.14812983572483063,0.14812009036540985,0.14811033010482788,0.1481005996465683,0.14809085428714752,0.14808110892772675,0.14807137846946716,0.14806164801120758,0.148051917552948,0.14804217219352722,0.14803244173526764,0.14802272617816925,0.14801301062107086,0.14800328016281128,0.1479935497045517,0.1479838490486145,0.14797411859035492,0.14796441793441772,0.14795468747615814,0.14794497191905975,0.14793527126312256,0.14792557060718536,0.14791585505008698,0.14790615439414978,0.14789645373821259,0.1478867530822754,0.1478770524263382,0.147867351770401,0.147857666015625,0.1478479653596878,0.1478382796049118,0.1478285938501358,0.1478189080953598,0.1478092223405838,0.1477995365858078,0.1477898508310318,0.147780179977417,0.147770494222641,0.14776082336902618,0.14775115251541138,0.14774148166179657,0.14773181080818176,0.14772213995456696,0.14771246910095215,0.14770281314849854,0.14769314229488373,0.14768348634243011,0.1476738303899765,0.1476641744375229,0.14765451848506927,0.14764486253261566,0.14763520658016205,0.14762556552886963,0.14761590957641602,0.1476062685251236,0.14759662747383118,0.14758698642253876,0.14757734537124634,0.14756770431995392,0.1475580781698227,0.14754843711853027,0.14753881096839905,0.14752918481826782,0.1475195586681366,0.14750993251800537,0.14750029146671295,0.14749068021774292,0.1474810689687729,0.14747144281864166,0.14746181666851044,0.1474522054195404,0.14744259417057037,0.14743298292160034,0.1474233716726303,0.14741376042366028,0.14740416407585144,0.1473945677280426,0.14738495647907257,0.14737536013126373,0.1473657637834549,0.14735616743564606,0.14734657108783722,0.14733697474002838,0.14732737839221954,0.1473177969455719,0.14730821549892426,0.1472986340522766,0.14728905260562897,0.14727945625782013,0.14726988971233368,0.14726030826568604,0.1472507268190384,0.14724116027355194,0.1472315937280655,0.14722201228141785,0.1472124457359314,0.14720287919044495,0.1471933275461197,0.14718376100063324,0.1471741944551468,0.14716464281082153,0.14715507626533508,0.14714552462100983,0.14713595807552338,0.14712642133235931,0.14711686968803406,0.1471073180437088,0.14709778130054474,0.14708822965621948,0.14707869291305542,0.14706915616989136,0.1470596194267273,0.14705006778240204,0.14704053103923798,0.1470310091972351,0.14702147245407104,0.14701195061206818,0.1470024287700653,0.14699290692806244,0.14698337018489838,0.1469738483428955,0.14696432650089264,0.14695480465888977,0.1469452977180481,0.14693579077720642,0.14692626893520355,0.14691676199436188,0.1469072550535202,0.14689774811267853,0.14688824117183685,0.14687873423099518,0.1468692421913147,0.14685973525047302,0.14685024321079254,0.14684073626995087,0.14683124423027039,0.1468217670917511,0.14681226015090942,0.14680278301239014,0.14679329097270966,0.14678381383419037,0.1467743217945099,0.1467648446559906,0.1467553675174713,0.14674589037895203,0.14673639833927155,0.14672693610191345,0.14671745896339417,0.14670799672603607,0.14669853448867798,0.1466890573501587,0.1466795951128006,0.1466701328754425,0.1466606706380844,0.14665120840072632,0.14664174616336823,0.14663229882717133,0.14662285149097443,0.14661338925361633,0.14660394191741943,0.14659449458122253,0.14658504724502563,0.14657559990882874,0.14656615257263184,0.14655672013759613,0.14654728770256042,0.14653784036636353,0.14652840793132782,0.1465189903974533,0.1465095430612564,0.1465001255273819,0.146490678191185,0.14648126065731049,0.14647184312343597,0.14646241068840027,0.14645299315452576,0.14644357562065125,0.14643415808677673,0.14642474055290222,0.1464153230190277,0.1464059203863144,0.14639651775360107,0.14638710021972656,0.14637769758701324,0.14636829495429993,0.14635887742042542,0.1463494896888733,0.14634008705615997,0.14633068442344666,0.14632129669189453,0.1463119089603424,0.1463025063276291,0.14629311859607697,0.14628373086452484,0.14627434313297272,0.1462649554014206,0.14625558257102966,0.14624619483947754,0.1462368220090866,0.14622743427753448,0.14621806144714355,0.14620868861675262,0.1461993157863617,0.14618995785713196,0.14618058502674103,0.1461712121963501,0.14616185426712036,0.14615248143672943,0.1461431235074997,0.14613376557826996,0.14612440764904022,0.14611504971981049,0.14610570669174194,0.1460963487625122,0.14608699083328247,0.14607764780521393,0.14606830477714539,0.14605894684791565,0.1460496187210083,0.14604027569293976,0.14603093266487122,0.14602160453796387,0.14601226150989532,0.14600291848182678,0.14599359035491943,0.14598426222801208,0.14597493410110474,0.1459656059741974,0.14595627784729004,0.14594696462154388,0.14593763649463654,0.1459283083677292,0.14591901004314423,0.14590968191623688,0.14590036869049072,0.14589105546474457,0.1458817571401596,0.14587242901325226,0.1458631306886673,0.14585381746292114,0.14584451913833618,0.14583522081375122,0.14582592248916626,0.1458166241645813,0.14580732583999634,0.14579802751541138,0.14578872919082642,0.14577944576740265,0.1457701474428177,0.14576086401939392,0.14575158059597015,0.1457422971725464,0.14573301374912262,0.14572373032569885,0.14571444690227509,0.1457051783800125,0.14569589495658875,0.14568662643432617,0.1456773579120636,0.14566808938980103,0.14565882086753845,0.14564955234527588,0.1456402838230133,0.14563103020191193,0.14562176167964935,0.14561249315738678,0.1456032544374466,0.14559398591518402,0.14558473229408264,0.14557547867298126,0.14556622505187988,0.1455569863319397,0.1455477476119995,0.14553849399089813,0.14552925527095795,0.14552000164985657,0.14551076292991638,0.1455015242099762,0.145492285490036,0.14548306167125702,0.14547382295131683,0.14546459913253784,0.14545536041259766,0.14544613659381866,0.14543691277503967,0.14542768895626068,0.1454184651374817,0.1454092413187027,0.1454000324010849,0.1453908085823059,0.14538158476352692,0.14537237584590912,0.14536316692829132,0.14535395801067352,0.14534474909305573,0.14533554017543793,0.14532633125782013,0.14531712234020233,0.14530792832374573,0.14529871940612793,0.14528954029083252,0.14528033137321472,0.1452711522579193,0.1452619433403015,0.1452527493238449,0.1452435702085495,0.1452343910932541,0.14522519707679749,0.14521601796150208,0.14520683884620667,0.14519765973091125,0.14518846571445465,0.14517928659915924,0.14517010748386383,0.14516094326972961,0.1451517641544342,0.1451425999403,0.14513343572616577,0.14512427151203156,0.14511510729789734,0.14510594308376312,0.1450967788696289,0.1450876146554947,0.14507846534252167,0.14506930112838745,0.14506015181541443,0.1450510025024414,0.14504185318946838,0.14503268897533417,0.14502353966236115,0.14501440525054932,0.1450052559375763,0.14499610662460327,0.14498697221279144,0.14497783780097961,0.14496870338916779,0.14495956897735596,0.14495043456554413,0.1449413001537323,0.14493216574192047,0.14492303133010864,0.144913911819458,0.14490477740764618,0.14489565789699554,0.1448865383863449,0.14487741887569427,0.14486831426620483,0.1448591947555542,0.14485007524490356,0.14484095573425293,0.1448318511247635,0.14482273161411285,0.1448136270046234,0.14480452239513397,0.14479541778564453,0.1447863131761551,0.14477722346782684,0.1447681188583374,0.14475901424884796,0.14474992454051971,0.14474081993103027,0.14473173022270203,0.14472264051437378,0.14471356570720673,0.14470447599887848,0.14469538629055023,0.14468629658222198,0.14467722177505493,0.14466813206672668,0.14465905725955963,0.14464998245239258,0.14464090764522552,0.14463183283805847,0.14462275803089142,0.14461369812488556,0.1446046233177185,0.14459554851055145,0.1445864886045456,0.14457742869853973,0.14456835389137268,0.14455930888652802,0.14455024898052216,0.1445412039756775,0.14453212916851044,0.14452308416366577,0.1445140391588211,0.14450497925281525,0.14449593424797058,0.14448688924312592,0.14447784423828125,0.14446879923343658,0.1444597691297531,0.14445072412490845,0.14444167912006378,0.1444326490163803,0.14442360401153564,0.14441457390785217,0.1444055438041687,0.14439651370048523,0.14438749849796295,0.1443784534931183,0.144369438290596,0.14436042308807373,0.14435139298439026,0.14434237778186798,0.1443333625793457,0.14432433247566223,0.14431533217430115,0.14430631697177887,0.1442973017692566,0.14428828656673431,0.14427928626537323,0.14427028596401215,0.14426127076148987,0.14425227046012878,0.1442432701587677,0.1442342847585678,0.14422528445720673,0.14421628415584564,0.14420729875564575,0.14419829845428467,0.14418931305408478,0.1441803127527237,0.144171342253685,0.1441623419523239,0.14415337145328522,0.14414438605308533,0.14413540065288544,0.14412641525268555,0.14411744475364685,0.14410845935344696,0.14409948885440826,0.14409051835536957,0.14408156275749207,0.14407257735729218,0.14406360685825348,0.14405465126037598,0.14404569566249847,0.14403672516345978,0.14402776956558228,0.14401879906654358,0.14400985836982727,0.14400090277194977,0.14399193227291107,0.14398299157619476,0.14397403597831726,0.14396509528160095,0.14395613968372345,0.14394719898700714,0.14393825829029083,0.14392931759357452,0.14392036199569702,0.1439114212989807,0.1439024955034256,0.14389356970787048,0.14388462901115417,0.14387570321559906,0.14386676251888275,0.14385783672332764,0.14384891092777252,0.1438399851322174,0.1438310593366623,0.14382213354110718,0.14381322264671326,0.14380429685115814,0.14379537105560303,0.1437864601612091,0.14377754926681519,0.14376863837242126,0.14375972747802734,0.14375081658363342,0.1437419205904007,0.14373300969600677,0.14372409880161285,0.14371520280838013,0.1437062919139862,0.14369741082191467,0.14368849992752075,0.14367960393428802,0.1436707228422165,0.14366182684898376,0.14365293085575104,0.1436440348625183,0.14363515377044678,0.14362627267837524,0.14361737668514252,0.14360849559307098,0.14359962940216064,0.1435907483100891,0.14358186721801758,0.14357298612594604,0.1435641199350357,0.14355523884296417,0.14354637265205383,0.1435375064611435,0.14352864027023315,0.14351977407932281,0.14351090788841248,0.14350204169750214,0.1434931755065918,0.14348432421684265,0.1434754580259323,0.14346660673618317,0.14345775544643402,0.14344890415668488,0.14344005286693573,0.14343120157718658,0.14342235028743744,0.1434134989976883,0.14340466260910034,0.1433958262205124,0.14338697493076324,0.1433781385421753,0.14336930215358734,0.1433604657649994,0.14335162937641144,0.1433427929878235,0.14333397150039673,0.14332513511180878,0.14331629872322083,0.14330747723579407,0.1432986557483673,0.14328983426094055,0.1432810127735138,0.14327219128608704,0.14326336979866028,0.14325454831123352,0.14324574172496796,0.1432369202375412,0.14322811365127563,0.14321930706501007,0.1432105004787445,0.14320167899131775,0.14319288730621338,0.14318408071994781,0.14317527413368225,0.1431664675474167,0.14315767586231232,0.14314888417720795,0.14314009249210358,0.1431313008069992,0.14312249422073364,0.14311370253562927,0.1431049108505249,0.14309613406658173,0.14308734238147736,0.14307856559753418,0.1430697739124298,0.14306099712848663,0.14305220544338226,0.14304344356060028,0.1430346518754959,0.14302588999271393,0.14301711320877075,0.14300833642482758,0.1429995745420456,0.14299079775810242,0.14298203587532043,0.14297327399253845,0.14296451210975647,0.1429557502269745,0.1429469883441925,0.14293822646141052,0.14292947947978973,0.14292071759700775,0.14291195571422577,0.14290320873260498,0.1428944617509842,0.1428857147693634,0.14287696778774261,0.14286822080612183,0.14285947382450104,0.14285072684288025,0.14284199476242065,0.14283326268196106,0.14282451570034027,0.14281578361988068,0.1428070366382599,0.1427983045578003,0.1427895873785019,0.1427808552980423,0.1427721232175827,0.1427633911371231,0.1427546739578247,0.1427459418773651,0.1427372246980667,0.1427285075187683,0.1427197903394699,0.1427110731601715,0.1427023559808731,0.1426936388015747,0.1426849365234375,0.1426762193441391,0.1426675021648407,0.1426587998867035,0.14265009760856628,0.14264139533042908,0.14263269305229187,0.14262399077415466,0.14261528849601746,0.14260658621788025,0.14259789884090424,0.14258919656276703,0.14258050918579102,0.142571821808815,0.1425631195306778,0.14255443215370178,0.14254575967788696,0.14253707230091095,0.14252838492393494,0.14251969754695892,0.1425110250711441,0.1425023376941681,0.14249366521835327,0.14248499274253845,0.14247632026672363,0.1424676477909088,0.142458975315094,0.14245030283927917,0.14244164526462555,0.14243297278881073,0.1424243152141571,0.14241564273834229,0.14240698516368866,0.14239832758903503,0.1423896700143814,0.1423809975385666,0.14237235486507416,0.14236369729042053,0.1423550546169281,0.14234639704227448,0.14233775436878204,0.14232909679412842,0.142320454120636,0.14231181144714355,0.14230316877365112,0.1422945261001587,0.14228588342666626,0.14227725565433502,0.1422686129808426,0.14225998520851135,0.14225134253501892,0.14224271476268768,0.14223408699035645,0.1422254592180252,0.14221683144569397,0.14220820367336273,0.1421995759010315,0.14219096302986145,0.1421823352575302,0.14217372238636017,0.14216510951519012,0.14215649664402008,0.14214788377285004,0.14213927090168,0.14213065803050995,0.1421220451593399,0.14211343228816986,0.142104834318161,0.14209622144699097,0.14208762347698212,0.14207902550697327,0.14207042753696442,0.14206182956695557,0.14205321669578552,0.14204463362693787,0.14203603565692902,0.14202745258808136,0.1420188546180725,0.14201025664806366,0.142001673579216,0.14199309051036835,0.1419845074415207,0.14197592437267303,0.14196734130382538,0.14195875823497772,0.14195019006729126,0.1419416069984436,0.14193303883075714,0.14192445576190948,0.14191588759422302,0.14190731942653656,0.1418987512588501,0.14189018309116364,0.14188161492347717,0.1418730467557907,0.14186449348926544,0.14185592532157898,0.1418473720550537,0.14183881878852844,0.14183025062084198,0.1418216973543167,0.14181314408779144,0.14180459082126617,0.1417960375547409,0.14178749918937683,0.14177894592285156,0.1417704075574875,0.14176185429096222,0.14175331592559814,0.14174476265907288,0.14173623919487,0.14172768592834473,0.14171916246414185,0.14171062409877777,0.1417020857334137,0.14169356226921082,0.14168503880500793,0.14167650043964386,0.14166797697544098,0.1416594535112381,0.14165093004703522,0.14164240658283234,0.14163388311862946,0.14162535965442657,0.1416168361902237,0.141608327627182,0.14159981906414032,0.14159131050109863,0.14158278703689575,0.14157427847385406,0.14156576991081238,0.1415572613477707,0.141548752784729,0.1415402591228485,0.14153175055980682,0.14152325689792633,0.14151474833488464,0.14150623977184296,0.14149776101112366,0.14148926734924316,0.14148077368736267,0.14147226512432098,0.14146378636360168,0.1414552927017212,0.1414468139410019,0.1414383202791214,0.1414298415184021,0.1414213627576828],"x":[20.0,20.005997600959617,20.011995201919234,20.017992802878847,20.023990403838464,20.02998800479808,20.0359856057577,20.041983206717312,20.04798080767693,20.053978408636546,20.059976009596163,20.065973610555776,20.071971211515393,20.07796881247501,20.083966413434627,20.08996401439424,20.095961615353858,20.101959216313475,20.10795681727309,20.11395441823271,20.119952019192322,20.12594962015194,20.131947221111556,20.137944822071173,20.143942423030786,20.149940023990403,20.15593762495002,20.161935225909637,20.16793282686925,20.173930427828868,20.179928028788485,20.185925629748102,20.191923230707715,20.197920831667332,20.20391843262695,20.209916033586566,20.215913634546183,20.221911235505797,20.227908836465414,20.23390643742503,20.239904038384648,20.24590163934426,20.251899240303878,20.257896841263495,20.263894442223112,20.269892043182725,20.275889644142342,20.28188724510196,20.287884846061576,20.29388244702119,20.299880047980807,20.305877648940424,20.31187524990004,20.317872850859658,20.32387045181927,20.329868052778888,20.335865653738505,20.341863254698122,20.347860855657736,20.353858456617353,20.35985605757697,20.365853658536587,20.3718512594962,20.377848860455817,20.383846461415434,20.38984406237505,20.395841663334664,20.40183926429428,20.4078368652539,20.413834466213515,20.419832067173132,20.425829668132746,20.431827269092363,20.43782487005198,20.443822471011597,20.44982007197121,20.455817672930827,20.461815273890444,20.46781287485006,20.473810475809675,20.47980807676929,20.48580567772891,20.491803278688526,20.49780087964814,20.503798480607756,20.509796081567373,20.51579368252699,20.521791283486607,20.52778888444622,20.533786485405837,20.539784086365454,20.54578168732507,20.551779288284685,20.557776889244302,20.56377449020392,20.569772091163536,20.57576969212315,20.581767293082766,20.587764894042383,20.593762495002,20.599760095961614,20.60575769692123,20.611755297880848,20.617752898840465,20.62375049980008,20.629748100759695,20.635745701719312,20.64174330267893,20.647740903638546,20.65373850459816,20.659736105557776,20.665733706517393,20.67173130747701,20.677728908436624,20.68372650939624,20.689724110355858,20.695721711315475,20.701719312275088,20.707716913234705,20.713714514194322,20.71971211515394,20.725709716113556,20.73170731707317,20.737704918032787,20.743702518992404,20.74970011995202,20.755697720911634,20.76169532187125,20.767692922830868,20.773690523790485,20.7796881247501,20.785685725709715,20.791683326669332,20.79768092762895,20.803678528588563,20.80967612954818,20.815673730507797,20.821671331467414,20.82766893242703,20.833666533386644,20.83966413434626,20.845661735305878,20.851659336265495,20.85765693722511,20.863654538184726,20.869652139144343,20.87564974010396,20.881647341063573,20.88764494202319,20.893642542982807,20.899640143942424,20.905637744902037,20.911635345861654,20.91763294682127,20.92363054778089,20.929628148740505,20.93562574970012,20.941623350659736,20.947620951619353,20.95361855257897,20.959616153538583,20.9656137544982,20.971611355457817,20.977608956417434,20.983606557377048,20.989604158336665,20.99560175929628,21.0015993602559,21.007596961215516,21.01359456217513,21.019592163134746,21.025589764094363,21.03158736505398,21.037584966013593,21.04358256697321,21.049580167932827,21.055577768892444,21.061575369852058,21.067572970811675,21.073570571771292,21.07956817273091,21.085565773690522,21.09156337465014,21.097560975609756,21.103558576569373,21.10955617752899,21.115553778488604,21.12155137944822,21.127548980407838,21.133546581367455,21.139544182327068,21.145541783286685,21.151539384246302,21.15753698520592,21.163534586165532,21.16953218712515,21.175529788084766,21.181527389044383,21.187524990003997,21.193522590963614,21.19952019192323,21.205517792882848,21.211515393842465,21.217512994802078,21.223510595761695,21.229508196721312,21.23550579768093,21.241503398640543,21.24750099960016,21.253498600559777,21.259496201519394,21.265493802479007,21.271491403438624,21.27748900439824,21.283486605357858,21.28948420631747,21.29548180727709,21.301479408236705,21.307477009196322,21.31347461015594,21.319472211115553,21.32546981207517,21.331467413034787,21.337465013994404,21.343462614954017,21.349460215913634,21.35545781687325,21.361455417832868,21.36745301879248,21.3734506197521,21.379448220711716,21.385445821671333,21.391443422630946,21.397441023590563,21.40343862455018,21.409436225509797,21.415433826469414,21.421431427429027,21.427429028388644,21.43342662934826,21.43942423030788,21.445421831267492,21.45141943222711,21.457417033186726,21.463414634146343,21.469412235105956,21.475409836065573,21.48140743702519,21.487405037984807,21.49340263894442,21.499400239904038,21.505397840863655,21.51139544182327,21.51739304278289,21.523390643742502,21.52938824470212,21.535385845661736,21.541383446621353,21.547381047580966,21.553378648540583,21.5593762495002,21.565373850459817,21.57137145141943,21.577369052379048,21.583366653338665,21.58936425429828,21.595361855257895,21.601359456217512,21.60735705717713,21.613354658136746,21.619352259096363,21.625349860055977,21.631347461015594,21.63734506197521,21.643342662934828,21.64934026389444,21.655337864854058,21.661335465813675,21.667333066773292,21.673330667732905,21.679328268692522,21.68532586965214,21.691323470611756,21.69732107157137,21.703318672530987,21.709316273490604,21.71531387445022,21.721311475409838,21.72730907636945,21.733306677329068,21.739304278288685,21.745301879248302,21.751299480207916,21.757297081167533,21.76329468212715,21.769292283086767,21.77528988404638,21.781287485005997,21.787285085965614,21.79328268692523,21.799280287884844,21.80527788884446,21.81127548980408,21.817273090763695,21.823270691723312,21.829268292682926,21.835265893642543,21.84126349460216,21.847261095561777,21.85325869652139,21.859256297481007,21.865253898440624,21.87125149940024,21.877249100359855,21.88324670131947,21.88924430227909,21.895241903238706,21.90123950419832,21.907237105157936,21.913234706117553,21.91923230707717,21.925229908036787,21.9312275089964,21.937225109956017,21.943222710915634,21.94922031187525,21.955217912834865,21.961215513794482,21.9672131147541,21.973210715713716,21.97920831667333,21.985205917632946,21.991203518592563,21.99720111955218,22.003198720511794,22.00919632147141,22.015193922431028,22.021191523390645,22.02718912435026,22.033186725309875,22.039184326269492,22.04518192722911,22.051179528188726,22.05717712914834,22.063174730107956,22.069172331067573,22.07516993202719,22.081167532986804,22.08716513394642,22.093162734906038,22.099160335865655,22.105157936825268,22.111155537784885,22.117153138744502,22.12315073970412,22.129148340663736,22.13514594162335,22.141143542582967,22.147141143542584,22.1531387445022,22.159136345461814,22.16513394642143,22.171131547381048,22.177129148340665,22.18312674930028,22.189124350259895,22.195121951219512,22.20111955217913,22.207117153138743,22.21311475409836,22.219112355057977,22.225109956017594,22.23110755697721,22.237105157936824,22.24310275889644,22.249100359856058,22.255097960815675,22.26109556177529,22.267093162734906,22.273090763694523,22.27908836465414,22.285085965613753,22.29108356657337,22.297081167532987,22.303078768492604,22.309076369452217,22.315073970411834,22.32107157137145,22.32706917233107,22.333066773290685,22.3390643742503,22.345061975209916,22.351059576169533,22.35705717712915,22.363054778088763,22.36905237904838,22.375049980007997,22.381047580967614,22.387045181927228,22.393042782886845,22.39904038384646,22.40503798480608,22.411035585765692,22.41703318672531,22.423030787684926,22.429028388644543,22.43502598960416,22.441023590563773,22.44702119152339,22.453018792483007,22.459016393442624,22.465013994402238,22.471011595361855,22.47700919632147,22.48300679728109,22.489004398240702,22.49500199920032,22.500999600159936,22.506997201119553,22.512994802079167,22.518992403038784,22.5249900039984,22.530987604958018,22.536985205917635,22.542982806877248,22.548980407836865,22.554978008796482,22.5609756097561,22.566973210715712,22.57297081167533,22.578968412634946,22.584966013594563,22.590963614554177,22.596961215513794,22.60295881647341,22.608956417433028,22.61495401839264,22.620951619352258,22.626949220311875,22.632946821271492,22.63894442223111,22.644942023190723,22.65093962415034,22.656937225109957,22.662934826069574,22.668932427029187,22.674930027988804,22.68092762894842,22.686925229908038,22.69292283086765,22.69892043182727,22.704918032786885,22.710915633746502,22.716913234706116,22.722910835665733,22.72890843662535,22.734906037584967,22.740903638544584,22.746901239504197,22.752898840463814,22.75889644142343,22.764894042383048,22.77089164334266,22.77688924430228,22.782886845261896,22.788884446221513,22.794882047181126,22.800879648140743,22.80687724910036,22.812874850059977,22.818872451019594,22.824870051979207,22.830867652938824,22.83686525389844,22.84286285485806,22.848860455817672,22.85485805677729,22.860855657736906,22.866853258696523,22.872850859656136,22.878848460615753,22.88484606157537,22.890843662534987,22.8968412634946,22.902838864454218,22.908836465413835,22.91483406637345,22.92083166733307,22.926829268292682,22.9328268692523,22.938824470211916,22.944822071171533,22.950819672131146,22.956817273090763,22.96281487405038,22.968812475009997,22.97481007596961,22.980807676929228,22.986805277888845,22.99280287884846,22.998800479808075,23.004798080767692,23.01079568172731,23.016793282686926,23.022790883646543,23.028788484606157,23.034786085565774,23.04078368652539,23.046781287485008,23.05277888844462,23.058776489404238,23.064774090363855,23.070771691323472,23.076769292283085,23.082766893242702,23.08876449420232,23.094762095161936,23.10075969612155,23.106757297081167,23.112754898040784,23.1187524990004,23.124750099960018,23.13074770091963,23.136745301879248,23.142742902838865,23.148740503798482,23.154738104758096,23.160735705717713,23.16673330667733,23.172730907636947,23.17872850859656,23.184726109556177,23.190723710515794,23.19672131147541,23.202718912435024,23.20871651339464,23.21471411435426,23.220711715313875,23.226709316273492,23.232706917233106,23.238704518192723,23.24470211915234,23.250699720111957,23.25669732107157,23.262694922031187,23.268692522990804,23.27469012395042,23.280687724910035,23.28668532586965,23.29268292682927,23.298680527788886,23.3046781287485,23.310675729708116,23.316673330667733,23.32267093162735,23.328668532586967,23.33466613354658,23.340663734506197,23.346661335465814,23.35265893642543,23.358656537385045,23.36465413834466,23.37065173930428,23.376649340263896,23.38264694122351,23.388644542183126,23.394642143142743,23.40063974410236,23.406637345061974,23.41263494602159,23.418632546981208,23.424630147940825,23.43062774890044,23.436625349860055,23.442622950819672,23.44862055177929,23.454618152738906,23.46061575369852,23.466613354658136,23.472610955617753,23.47860855657737,23.484606157536984,23.4906037584966,23.496601359456218,23.502598960415835,23.508596561375448,23.514594162335065,23.520591763294682,23.5265893642543,23.532586965213916,23.53858456617353,23.544582167133147,23.550579768092764,23.55657736905238,23.562574970011994,23.56857257097161,23.574570171931228,23.580567772890845,23.58656537385046,23.592562974810075,23.598560575769692,23.60455817672931,23.610555777688923,23.61655337864854,23.622550979608157,23.628548580567774,23.63454618152739,23.640543782487004,23.64654138344662,23.652538984406238,23.658536585365855,23.66453418632547,23.670531787285086,23.676529388244703,23.68252698920432,23.688524590163933,23.69452219112355,23.700519792083167,23.706517393042784,23.712514994002397,23.718512594962014,23.72451019592163,23.73050779688125,23.736505397840865,23.74250299880048,23.748500599760096,23.754498200719713,23.76049580167933,23.766493402638943,23.77249100359856,23.778488604558177,23.784486205517794,23.790483806477408,23.796481407437025,23.80247900839664,23.80847660935626,23.814474210315872,23.82047181127549,23.826469412235106,23.832467013194723,23.83846461415434,23.844462215113953,23.85045981607357,23.856457417033187,23.862455017992804,23.868452618952418,23.874450219912035,23.88044782087165,23.88644542183127,23.892443022790882,23.8984406237505,23.904438224710116,23.910435825669733,23.916433426629347,23.922431027588964,23.92842862854858,23.934426229508198,23.940423830467815,23.946421431427428,23.952419032387045,23.958416633346662,23.96441423430628,23.970411835265892,23.97640943622551,23.982407037185126,23.988404638144743,23.994402239104357,24.000399840063974,24.00639744102359,24.012395041983208,24.01839264294282,24.024390243902438,24.030387844862055,24.036385445821672,24.04238304678129,24.048380647740903,24.05437824870052,24.060375849660137,24.066373450619754,24.072371051579367,24.078368652538984,24.0843662534986,24.090363854458218,24.09636145541783,24.10235905637745,24.108356657337065,24.114354258296682,24.120351859256296,24.126349460215913,24.13234706117553,24.138344662135147,24.144342263094764,24.150339864054377,24.156337465013994,24.16233506597361,24.168332666933228,24.17433026789284,24.18032786885246,24.186325469812076,24.192323070771693,24.198320671731306,24.204318272690923,24.21031587365054,24.216313474610157,24.22231107556977,24.228308676529387,24.234306277489004,24.24030387844862,24.24630147940824,24.25229908036785,24.25829668132747,24.264294282287086,24.270291883246703,24.276289484206316,24.282287085165933,24.28828468612555,24.294282287085167,24.30027988804478,24.306277489004398,24.312275089964015,24.31827269092363,24.324270291883245,24.330267892842862,24.33626549380248,24.342263094762096,24.348260695721713,24.354258296681326,24.360255897640943,24.36625349860056,24.372251099560177,24.37824870051979,24.384246301479408,24.390243902439025,24.39624150339864,24.402239104358255,24.408236705317872,24.41423430627749,24.420231907237106,24.42622950819672,24.432227109156337,24.438224710115954,24.44422231107557,24.450219912035188,24.4562175129948,24.462215113954418,24.468212714914035,24.474210315873652,24.480207916833265,24.486205517792882,24.4922031187525,24.498200719712116,24.50419832067173,24.510195921631347,24.516193522590964,24.52219112355058,24.528188724510194,24.53418632546981,24.540183926429428,24.546181527389045,24.552179128348662,24.558176729308276,24.564174330267893,24.57017193122751,24.576169532187127,24.58216713314674,24.588164734106357,24.594162335065974,24.60015993602559,24.606157536985204,24.61215513794482,24.61815273890444,24.624150339864055,24.63014794082367,24.636145541783286,24.642143142742903,24.64814074370252,24.654138344662137,24.66013594562175,24.666133546581367,24.672131147540984,24.6781287485006,24.684126349460215,24.69012395041983,24.69612155137945,24.702119152339066,24.70811675329868,24.714114354258296,24.720111955217913,24.72610955617753,24.732107157137147,24.73810475809676,24.744102359056377,24.750099960015994,24.75609756097561,24.762095161935225,24.76809276289484,24.77409036385446,24.780087964814076,24.78608556577369,24.792083166733306,24.798080767692923,24.80407836865254,24.810075969612154,24.81607357057177,24.822071171531388,24.828068772491005,24.83406637345062,24.840063974410235,24.846061575369852,24.85205917632947,24.858056777289086,24.8640543782487,24.870051979208316,24.876049580167933,24.88204718112755,24.888044782087164,24.89404238304678,24.900039984006398,24.906037584966015,24.912035185925628,24.918032786885245,24.924030387844862,24.93002798880448,24.936025589764096,24.94202319072371,24.948020791683327,24.954018392642944,24.96001599360256,24.966013594562174,24.97201119552179,24.978008796481408,24.984006397441025,24.99000399840064,24.996001599360255,25.001999200319872,25.00799680127949,25.013994402239103,25.01999200319872,25.025989604158337,25.031987205117954,25.03798480607757,25.043982407037184,25.0499800079968,25.055977608956418,25.061975209916035,25.06797281087565,25.073970411835266,25.079968012794883,25.0859656137545,25.091963214714113,25.09796081567373,25.103958416633347,25.109956017592964,25.115953618552577,25.121951219512194,25.12794882047181,25.13394642143143,25.139944022391045,25.14594162335066,25.151939224310276,25.157936825269893,25.16393442622951,25.169932027189123,25.17592962814874,25.181927229108357,25.187924830067974,25.193922431027588,25.199920031987205,25.20591763294682,25.21191523390644,25.217912834866052,25.22391043582567,25.229908036785286,25.235905637744903,25.24190323870452,25.247900839664133,25.25389844062375,25.259896041583367,25.265893642542984,25.271891243502598,25.277888844462215,25.28388644542183,25.28988404638145,25.295881647341062,25.30187924830068,25.307876849260296,25.313874450219913,25.319872051179527,25.325869652139144,25.33186725309876,25.337864854058378,25.343862455017995,25.349860055977608,25.355857656937225,25.361855257896842,25.36785285885646,25.373850459816072,25.37984806077569,25.385845661735306,25.391843262694923,25.397840863654537,25.403838464614154,25.40983606557377,25.415833666533388,25.421831267493,25.427828868452618,25.433826469412235,25.439824070371852,25.44582167133147,25.451819272291083,25.4578168732507,25.463814474210317,25.469812075169934,25.475809676129547,25.481807277089164,25.48780487804878,25.493802479008398,25.49980007996801,25.50579768092763,25.511795281887245,25.517792882846862,25.523790483806476,25.529788084766093,25.53578568572571,25.541783286685327,25.547780887644944,25.553778488604557,25.559776089564174,25.56577369052379,25.571771291483408,25.57776889244302,25.58376649340264,25.589764094362256,25.595761695321873,25.601759296281486,25.607756897241103,25.61375449820072,25.619752099160337,25.62574970011995,25.631747301079567,25.637744902039184,25.6437425029988,25.64974010395842,25.65573770491803,25.66173530587765,25.667732906837266,25.673730507796883,25.679728108756496,25.685725709716113,25.69172331067573,25.697720911635347,25.70371851259496,25.709716113554578,25.715713714514195,25.72171131547381,25.727708916433425,25.733706517393042,25.73970411835266,25.745701719312276,25.751699320271893,25.757696921231506,25.763694522191123,25.76969212315074,25.775689724110357,25.78168732506997,25.787684926029588,25.793682526989205,25.79968012794882,25.805677728908435,25.811675329868052,25.81767293082767,25.823670531787286,25.8296681327469,25.835665733706517,25.841663334666134,25.84766093562575,25.853658536585368,25.85965613754498,25.865653738504598,25.871651339464215,25.877648940423832,25.883646541383445,25.889644142343062,25.89564174330268,25.901639344262296,25.90763694522191,25.913634546181527,25.919632147141144,25.92562974810076,25.931627349060374,25.93762495001999,25.943622550979608,25.949620151939225,25.955617752898842,25.961615353858456,25.967612954818073,25.97361055577769,25.979608156737307,25.98560575769692,25.991603358656537,25.997600959616154,26.00359856057577,26.009596161535384,26.015593762495,26.02159136345462,26.027588964414235,26.03358656537385,26.039584166333466,26.045581767293083,26.0515793682527,26.057576969212317,26.06357457017193,26.069572171131547,26.075569772091164,26.08156737305078,26.087564974010395,26.09356257497001,26.09956017592963,26.105557776889246,26.11155537784886,26.117552978808476,26.123550579768093,26.12954818072771,26.135545781687323,26.14154338264694,26.147540983606557,26.153538584566174,26.15953618552579,26.165533786485405,26.17153138744502,26.17752898840464,26.183526589364256,26.18952419032387,26.195521791283486,26.201519392243103,26.20751699320272,26.213514594162334,26.21951219512195,26.225509796081568,26.231507397041185,26.237504998000798,26.243502598960415,26.249500199920032,26.25549780087965,26.261495401839266,26.26749300279888,26.273490603758496,26.279488204718113,26.28548580567773,26.291483406637344,26.29748100759696,26.303478608556578,26.309476209516195,26.315473810475808,26.321471411435425,26.327469012395042,26.33346661335466,26.339464214314273,26.34546181527389,26.351459416233507,26.357457017193124,26.36345461815274,26.369452219112354,26.37544982007197,26.381447421031588,26.387445021991205,26.39344262295082,26.399440223910435,26.405437824870052,26.41143542582967,26.417433026789283,26.4234306277489,26.429428228708517,26.435425829668134,26.441423430627747,26.447421031587364,26.45341863254698,26.459416233506598,26.465413834466215,26.47141143542583,26.477409036385446,26.483406637345063,26.48940423830468,26.495401839264293,26.50139944022391,26.507397041183527,26.513394642143144,26.519392243102757,26.525389844062374,26.53138744502199,26.53738504598161,26.54338264694122,26.54938024790084,26.555377848860456,26.561375449820073,26.56737305077969,26.573370651739303,26.57936825269892,26.585365853658537,26.591363454618154,26.597361055577768,26.603358656537385,26.609356257497,26.61535385845662,26.621351459416232,26.62734906037585,26.633346661335466,26.639344262295083,26.6453418632547,26.651339464214313,26.65733706517393,26.663334666133547,26.669332267093164,26.675329868052778,26.681327469012395,26.68732506997201,26.69332267093163,26.699320271891242,26.70531787285086,26.711315473810476,26.717313074770093,26.723310675729707,26.729308276689324,26.73530587764894,26.741303478608557,26.747301079568174,26.753298680527788,26.759296281487405,26.765293882447022,26.77129148340664,26.777289084366252,26.78328668532587,26.789284286285486,26.795281887245103,26.801279488204717,26.807277089164334,26.81327469012395,26.819272291083568,26.82526989204318,26.831267493002798,26.837265093962415,26.843262694922032,26.84926029588165,26.855257896841263,26.86125549780088,26.867253098760496,26.873250699720113,26.879248300679727,26.885245901639344,26.89124350259896,26.897241103558578,26.90323870451819,26.90923630547781,26.915233906437425,26.921231507397042,26.927229108356656,26.933226709316273,26.93922431027589,26.945221911235507,26.951219512195124,26.957217113154737,26.963214714114354,26.96921231507397,26.975209916033588,26.9812075169932,26.98720511795282,26.993202718912436,26.999200319872052,27.005197920831666,27.011195521791283,27.0171931227509,27.023190723710517,27.02918832467013,27.035185925629747,27.041183526589364,27.04718112754898,27.0531787285086,27.05917632946821,27.06517393042783,27.071171531387446,27.077169132347063,27.083166733306676,27.089164334266293,27.09516193522591,27.101159536185527,27.10715713714514,27.113154738104758,27.119152339064375,27.12514994002399,27.131147540983605,27.137145141943222,27.14314274290284,27.149140343862456,27.155137944822073,27.161135545781686,27.167133146741303,27.17313074770092,27.179128348660537,27.18512594962015,27.191123550579768,27.197121151539385,27.203118752499,27.209116353458615,27.215113954418232,27.22111155537785,27.227109156337466,27.23310675729708,27.239104358256697,27.245101959216314,27.25109956017593,27.257097161135547,27.26309476209516,27.269092363054778,27.275089964014395,27.281087564974012,27.287085165933625,27.293082766893242,27.29908036785286,27.305077968812476,27.31107556977209,27.317073170731707,27.323070771691324,27.32906837265094,27.335065973610554,27.34106357457017,27.347061175529788,27.353058776489405,27.359056377449022,27.365053978408636,27.371051579368253,27.37704918032787,27.383046781287486,27.3890443822471,27.395041983206717,27.401039584166334,27.40703718512595,27.413034786085564,27.41903238704518,27.4250299880048,27.431027588964415,27.43702518992403,27.443022790883646,27.449020391843263,27.45501799280288,27.461015593762497,27.46701319472211,27.473010795681727,27.479008396641344,27.48500599760096,27.491003598560575,27.49700119952019,27.50299880047981,27.508996401439425,27.51499400239904,27.520991603358656,27.526989204318273,27.53298680527789,27.538984406237503,27.54498200719712,27.550979608156737,27.556977209116354,27.56297481007597,27.568972411035585,27.5749700119952,27.58096761295482,27.586965213914436,27.59296281487405,27.598960415833666,27.604958016793283,27.6109556177529,27.616953218712514,27.62295081967213,27.628948420631747,27.634946021591364,27.640943622550978,27.646941223510595,27.652938824470212,27.65893642542983,27.664934026389446,27.67093162734906,27.676929228308676,27.682926829268293,27.68892443022791,27.694922031187524,27.70091963214714,27.706917233106758,27.712914834066375,27.718912435025988,27.724910035985605,27.730907636945222,27.73690523790484,27.742902838864453,27.74890043982407,27.754898040783686,27.760895641743303,27.76689324270292,27.772890843662534,27.77888844462215,27.784886045581768,27.790883646541385,27.796881247501,27.802878848460615,27.808876449420232,27.81487405037985,27.820871651339463,27.82686925229908,27.832866853258697,27.838864454218314,27.844862055177927,27.850859656137544,27.85685725709716,27.862854858056778,27.868852459016395,27.87485005997601,27.880847660935625,27.886845261895242,27.89284286285486,27.898840463814473,27.90483806477409,27.910835665733707,27.916833266693324,27.922830867652937,27.928828468612554,27.93482606957217,27.94082367053179,27.9468212714914,27.95281887245102,27.958816473410636,27.964814074370253,27.97081167532987,27.976809276289483,27.9828068772491,27.988804478208717,27.994802079168334,28.000799680127948,28.006797281087564,28.01279488204718,28.0187924830068,28.024790083966412,28.03078768492603,28.036785285885646,28.042782886845263,28.048780487804876,28.054778088764493,28.06077568972411,28.066773290683727,28.072770891643344,28.078768492602958,28.084766093562575,28.09076369452219,28.09676129548181,28.102758896441422,28.10875649740104,28.114754098360656,28.120751699320273,28.126749300279887,28.132746901239504,28.13874450219912,28.144742103158737,28.15073970411835,28.156737305077968,28.162734906037585,28.168732506997202,28.17473010795682,28.180727708916432,28.18672530987605,28.192722910835666,28.198720511795283,28.204718112754897,28.210715713714514,28.21671331467413,28.222710915633748,28.22870851659336,28.234706117552978,28.240703718512595,28.246701319472212,28.252698920431826,28.258696521391443,28.26469412235106,28.270691723310676,28.276689324270293,28.282686925229907,28.288684526189524,28.29468212714914,28.300679728108758,28.30667732906837,28.31267493002799,28.318672530987605,28.324670131947222,28.330667732906836,28.336665333866453,28.34266293482607,28.348660535785687,28.3546581367453,28.360655737704917,28.366653338664534,28.37265093962415,28.378648540583768,28.38464614154338,28.390643742503,28.396641343462615,28.402638944422232,28.408636545381846,28.414634146341463,28.42063174730108,28.426629348260697,28.43262694922031,28.438624550179927,28.444622151139544,28.45061975209916,28.45661735305878,28.46261495401839,28.46861255497801,28.474610155937626,28.480607756897243,28.486605357856856,28.492602958816473,28.49860055977609,28.504598160735707,28.51059576169532,28.516593362654937,28.522590963614554,28.52858856457417,28.534586165533785,28.540583766493402,28.54658136745302,28.552578968412636,28.558576569372253,28.564574170331866,28.570571771291483,28.5765693722511,28.582566973210717,28.58856457417033,28.594562175129948,28.600559776089565,28.60655737704918,28.612554978008795,28.618552578968412,28.62455017992803,28.630547780887646,28.63654538184726,28.642542982806876,28.648540583766493,28.65453818472611,28.660535785685727,28.66653338664534,28.672530987604958,28.678528588564575,28.684526189524192,28.690523790483805,28.696521391443422,28.70251899240304,28.708516593362656,28.71451419432227,28.720511795281887,28.726509396241504,28.73250699720112,28.738504598160734,28.74450219912035,28.750499800079968,28.756497401039585,28.762495001999202,28.768492602958815,28.774490203918432,28.78048780487805,28.786485405837666,28.79248300679728,28.798480607756897,28.804478208716514,28.81047580967613,28.816473410635744,28.82247101159536,28.82846861255498,28.834466213514595,28.84046381447421,28.846461415433826,28.852459016393443,28.85845661735306,28.864454218312677,28.87045181927229,28.876449420231907,28.882447021191524,28.88844462215114,28.894442223110754,28.90043982407037,28.90643742502999,28.912435025989605,28.91843262694922,28.924430227908836,28.930427828868453,28.93642542982807,28.942423030787683,28.9484206317473,28.954418232706917,28.960415833666534,28.96641343462615,28.972411035585765,28.97840863654538,28.984406237505,28.990403838464616,28.99640143942423,29.002399040383846,29.008396641343463,29.01439424230308,29.020391843262693,29.02638944422231,29.032387045181927,29.038384646141544,29.044382247101158,29.050379848060775,29.056377449020392,29.06237504998001,29.068372650939626,29.07437025189924,29.080367852858856,29.086365453818473,29.09236305477809,29.098360655737704,29.10435825669732,29.110355857656938,29.116353458616555,29.122351059576168,29.128348660535785,29.134346261495402,29.14034386245502,29.146341463414632,29.15233906437425,29.158336665333866,29.164334266293483,29.1703318672531,29.176329468212714,29.18232706917233,29.188324670131948,29.194322271091565,29.20031987205118,29.206317473010795,29.212315073970412,29.21831267493003,29.224310275889643,29.23030787684926,29.236305477808877,29.242303078768494,29.248300679728107,29.254298280687724,29.26029588164734,29.266293482606958,29.272291083566575,29.27828868452619,29.284286285485805,29.290283886445422,29.29628148740504,29.302279088364653,29.30827668932427,29.314274290283887,29.320271891243504,29.326269492203117,29.332267093162734,29.33826469412235,29.34426229508197,29.35025989604158,29.3562574970012,29.362255097960816,29.368252698920433,29.37425029988005,29.380247900839663,29.38624550179928,29.392243102758897,29.398240703718514,29.404238304678127,29.410235905637744,29.41623350659736,29.42223110755698,29.428228708516592,29.43422630947621,29.440223910435826,29.446221511395443,29.452219112355056,29.458216713314673,29.46421431427429,29.470211915233907,29.476209516193524,29.482207117153138,29.488204718112755,29.49420231907237,29.50019992003199,29.506197520991602,29.51219512195122,29.518192722910836,29.524190323870453,29.530187924830066,29.536185525789683,29.5421831267493,29.548180727708917,29.55417832866853,29.560175929628148,29.566173530587765,29.572171131547382,29.578168732507,29.584166333466612,29.59016393442623,29.596161535385846,29.602159136345463,29.608156737305077,29.614154338264694,29.62015193922431,29.626149540183928,29.63214714114354,29.638144742103158,29.644142343062775,29.650139944022392,29.656137544982005,29.662135145941622,29.66813274690124,29.674130347860856,29.680127948820473,29.686125549780087,29.692123150739704,29.69812075169932,29.704118352658938,29.71011595361855,29.71611355457817,29.722111155537785,29.728108756497402,29.734106357457016,29.740103958416633,29.74610155937625,29.752099160335867,29.75809676129548,29.764094362255097,29.770091963214714,29.77608956417433,29.782087165133948,29.78808476609356,29.79408236705318,29.800079968012795,29.806077568972412,29.812075169932026,29.818072770891643,29.82407037185126,29.830067972810877,29.83606557377049,29.842063174730107,29.848060775689724,29.85405837664934,29.860055977608955,29.86605357856857,29.87205117952819,29.878048780487806,29.884046381447423,29.890043982407036,29.896041583366653,29.90203918432627,29.908036785285887,29.9140343862455,29.920031987205117,29.926029588164734,29.93202718912435,29.938024790083965,29.944022391043582,29.9500199920032,29.956017592962816,29.96201519392243,29.968012794882046,29.974010395841663,29.98000799680128,29.986005597760897,29.99200319872051,29.998000799680128,30.003998400639745,30.00999600159936,30.015993602558975,30.021991203518592,30.02798880447821,30.033986405437826,30.03998400639744,30.045981607357056,30.051979208316673,30.05797680927629,30.063974410235904,30.06997201119552,30.075969612155138,30.081967213114755,30.087964814074372,30.093962415033985,30.099960015993602,30.10595761695322,30.111955217912836,30.11795281887245,30.123950419832067,30.129948020791684,30.1359456217513,30.141943222710914,30.14794082367053,30.153938424630148,30.159936025589765,30.16593362654938,30.171931227508995,30.177928828468612,30.18392642942823,30.189924030387846,30.19592163134746,30.201919232307077,30.207916833266694,30.21391443422631,30.219912035185924,30.22590963614554,30.23190723710516,30.237904838064775,30.24390243902439,30.249900039984006,30.255897640943623,30.26189524190324,30.267892842862853,30.27389044382247,30.279888044782087,30.285885645741704,30.29188324670132,30.297880847660934,30.30387844862055,30.30987604958017,30.315873650539785,30.3218712514994,30.327868852459016,30.333866453418633,30.33986405437825,30.345861655337863,30.35185925629748,30.357856857257097,30.363854458216714,30.36985205917633,30.375849660135945,30.38184726109556,30.38784486205518,30.393842463014796,30.39984006397441,30.405837664934026,30.411835265893643,30.41783286685326,30.423830467812873,30.42982806877249,30.435825669732107,30.441823270691724,30.447820871651338,30.453818472610955,30.459816073570572,30.46581367453019,30.471811275489806,30.47780887644942,30.483806477409036,30.489804078368653,30.49580167932827,30.501799280287884,30.5077968812475,30.513794482207118,30.519792083166735,30.525789684126348,30.531787285085965,30.537784886045582,30.5437824870052,30.549780087964812,30.55577768892443,30.561775289884046,30.567772890843663,30.57377049180328,30.579768092762894,30.58576569372251,30.591763294682128,30.597760895641745,30.60375849660136,30.609756097560975,30.615753698520592,30.62175129948021,30.627748900439823,30.63374650139944,30.639744102359057,30.645741703318674,30.651739304278287,30.657736905237904,30.66373450619752,30.669732107157138,30.675729708116755,30.68172730907637,30.687724910035985,30.693722510995602,30.69972011195522,30.705717712914833,30.71171531387445,30.717712914834067,30.723710515793684,30.729708116753297,30.735705717712914,30.74170331867253,30.74770091963215,30.75369852059176,30.75969612155138,30.765693722510996,30.771691323470613,30.77768892443023,30.783686525389843,30.78968412634946,30.795681727309077,30.801679328268694,30.807676929228307,30.813674530187924,30.81967213114754,30.82566973210716,30.831667333066772,30.83766493402639,30.843662534986006,30.849660135945623,30.855657736905236,30.861655337864853,30.86765293882447,30.873650539784087,30.879648140743704,30.885645741703318,30.891643342662935,30.89764094362255,30.90363854458217,30.909636145541782,30.9156337465014,30.921631347461016,30.927628948420633,30.933626549380246,30.939624150339863,30.94562175129948,30.951619352259097,30.95761695321871,30.963614554178328,30.969612155137945,30.975609756097562,30.98160735705718,30.987604958016792,30.99360255897641,30.999600159936026,31.005597760895643,31.011595361855257,31.017592962814874,31.02359056377449,31.029588164734108,31.03558576569372,31.041583366653338,31.047580967612955,31.053578568572572,31.059576169532185,31.065573770491802,31.07157137145142,31.077568972411036,31.083566573370653,31.089564174330267,31.095561775289884,31.1015593762495,31.107556977209118,31.11355457816873,31.11955217912835,31.125549780087965,31.131547381047582,31.137544982007196,31.143542582966813,31.14954018392643,31.155537784886047,31.16153538584566,31.167532986805277,31.173530587764894,31.17952818872451,31.185525789684128,31.19152339064374,31.19752099160336,31.203518592562975,31.209516193522592,31.215513794482206,31.221511395441823,31.22750899640144,31.233506597361057,31.23950419832067,31.245501799280287,31.251499400239904,31.25749700119952,31.263494602159135,31.26949220311875,31.27548980407837,31.281487405037986,31.287485005997603,31.293482606957216,31.299480207916833,31.30547780887645,31.311475409836067,31.31747301079568,31.323470611755297,31.329468212714914,31.33546581367453,31.341463414634145,31.347461015593762,31.35345861655338,31.359456217512996,31.36545381847261,31.371451419432226,31.377449020391843,31.38344662135146,31.389444222311077,31.39544182327069,31.401439424230308,31.407437025189925,31.41343462614954,31.419432227109155,31.425429828068772,31.43142742902839,31.437425029988006,31.44342263094762,31.449420231907236,31.455417832866853,31.46141543382647,31.467413034786084,31.4734106357457,31.479408236705318,31.485405837664935,31.491403438624552,31.497401039584165,31.503398640543782,31.5093962415034,31.515393842463016,31.52139144342263,31.527389044382247,31.533386645341864,31.53938424630148,31.545381847261094,31.55137944822071,31.557377049180328,31.563374650139945,31.56937225109956,31.575369852059175,31.581367453018792,31.58736505397841,31.593362654938026,31.59936025589764,31.605357856857257,31.611355457816874,31.61735305877649,31.623350659736104,31.62934826069572,31.63534586165534,31.641343462614955,31.64734106357457,31.653338664534186,31.659336265493803,31.66533386645342,31.671331467413033,31.67732906837265,31.683326669332267,31.689324270291884,31.6953218712515,31.701319472211114,31.70731707317073,31.71331467413035,31.719312275089965,31.72530987604958,31.731307477009196,31.737305077968813,31.74330267892843,31.749300279888043,31.75529788084766,31.761295481807277,31.767293082766894,31.773290683726508,31.779288284686125,31.78528588564574,31.79128348660536,31.797281087564976,31.80327868852459,31.809276289484206,31.815273890443823,31.82127149140344,31.827269092363053,31.83326669332267,31.839264294282287,31.845261895241904,31.851259496201518,31.857257097161135,31.863254698120752,31.86925229908037,31.875249900039982,31.8812475009996,31.887245101959216,31.893242702918833,31.89924030387845,31.905237904838064,31.91123550579768,31.917233106757298,31.923230707716915,31.929228308676528,31.935225909636145,31.941223510595762,31.94722111155538,31.953218712514992,31.95921631347461,31.965213914434226,31.971211515393843,31.977209116353457,31.983206717313074,31.98920431827269,31.995201919232308,32.001199520191925,32.00719712115154,32.01319472211116,32.01919232307077,32.025189924030386,32.03118752499,32.03718512594962,32.04318272690924,32.049180327868854,32.05517792882847,32.06117552978809,32.0671731307477,32.073170731707314,32.07916833266693,32.08516593362655,32.091163534586165,32.09716113554578,32.1031587365054,32.109156337465016,32.11515393842463,32.12115153938424,32.12714914034386,32.13314674130348,32.139144342263094,32.14514194322271,32.15113954418233,32.157137145141945,32.16313474610156,32.16913234706117,32.17512994802079,32.181127548980406,32.18712514994002,32.19312275089964,32.19912035185926,32.205117952818874,32.21111555377849,32.21711315473811,32.22311075569772,32.229108356657335,32.23510595761695,32.24110355857657,32.247101159536186,32.2530987604958,32.25909636145542,32.26509396241504,32.27109156337465,32.277089164334264,32.28308676529388,32.2890843662535,32.295081967213115,32.30107956817273,32.30707716913235,32.313074770091966,32.31907237105158,32.32506997201119,32.33106757297081,32.33706517393043,32.34306277489004,32.34906037584966,32.35505797680928,32.361055577768894,32.36705317872851,32.37305077968812,32.37904838064774,32.385045981607355,32.39104358256697,32.39704118352659,32.403038784486206,32.40903638544582,32.41503398640544,32.42103158736506,32.42702918832467,32.433026789284284,32.4390243902439,32.44502199120352,32.451019592163135,32.45701719312275,32.46301479408237,32.469012395041986,32.475009996001596,32.48100759696121,32.48700519792083,32.49300279888045,32.499000399840064,32.50499800079968,32.5109956017593,32.516993202718915,32.52299080367853,32.52898840463814,32.53498600559776,32.540983606557376,32.54698120751699,32.55297880847661,32.55897640943623,32.564974010395844,32.57097161135546,32.57696921231507,32.58296681327469,32.588964414234304,32.59496201519392,32.60095961615354,32.606957217113155,32.61295481807277,32.61895241903239,32.624950019992006,32.630947620951616,32.63694522191123,32.64294282287085,32.64894042383047,32.654938024790084,32.6609356257497,32.66693322670932,32.672930827668935,32.678928428628545,32.68492602958816,32.69092363054778,32.696921231507396,32.70291883246701,32.70891643342663,32.71491403438625,32.720911635345864,32.72690923630548,32.73290683726509,32.73890443822471,32.744902039184325,32.75089964014394,32.75689724110356,32.762894842063176,32.76889244302279,32.77489004398241,32.78088764494202,32.78688524590164,32.792882846861254,32.79888044782087,32.80487804878049,32.810875649740105,32.81687325069972,32.82287085165934,32.828868452618956,32.834866053578565,32.84086365453818,32.8468612554978,32.852858856457416,32.85885645741703,32.86485405837665,32.87085165933627,32.876849260295884,32.882846861255494,32.88884446221511,32.89484206317473,32.900839664134345,32.90683726509396,32.91283486605358,32.918832467013196,32.92483006797281,32.93082766893243,32.93682526989204,32.94282287085166,32.948820471811274,32.95481807277089,32.96081567373051,32.966813274690125,32.97281087564974,32.97880847660936,32.98480607756897,32.990803678528586,32.9968012794882,33.00279888044782,33.00879648140744,33.014794082367054,33.02079168332667,33.02678928428629,33.032786885245905,33.038784486205515,33.04478208716513,33.05077968812475,33.056777289084366,33.06277489004398,33.0687724910036,33.07477009196322,33.080767692922834,33.08676529388244,33.09276289484206,33.09876049580168,33.104758096761294,33.11075569772091,33.11675329868053,33.122750899640145,33.12874850059976,33.13474610155938,33.14074370251899,33.146741303478606,33.15273890443822,33.15873650539784,33.16473410635746,33.170731707317074,33.17672930827669,33.18272690923631,33.188724510195925,33.194722111155535,33.20071971211515,33.20671731307477,33.212714914034386,33.218712514994,33.22471011595362,33.23070771691324,33.236705317872854,33.242702918832464,33.24870051979208,33.2546981207517,33.260695721711315,33.26669332267093,33.27269092363055,33.278688524590166,33.28468612554978,33.2906837265094,33.29668132746901,33.30267892842863,33.308676529388244,33.31467413034786,33.32067173130748,33.326669332267095,33.33266693322671,33.33866453418633,33.34466213514594,33.350659736105555,33.35665733706517,33.36265493802479,33.368652538984406,33.37465013994402,33.38064774090364,33.38664534186326,33.392642942822874,33.398640543782484,33.4046381447421,33.41063574570172,33.416633346661335,33.42263094762095,33.42862854858057,33.434626149540186,33.4406237504998,33.44662135145941,33.45261895241903,33.45861655337865,33.464614154338264,33.47061175529788,33.4766093562575,33.482606957217115,33.48860455817673,33.49460215913635,33.50059976009596,33.506597361055576,33.51259496201519,33.51859256297481,33.52459016393443,33.530587764894044,33.53658536585366,33.54258296681328,33.54858056777289,33.554578168732505,33.56057576969212,33.56657337065174,33.572570971611356,33.57856857257097,33.58456617353059,33.59056377449021,33.596561375449824,33.60255897640943,33.60855657736905,33.61455417832867,33.620551779288284,33.6265493802479,33.63254698120752,33.638544582167135,33.64454218312675,33.65053978408636,33.65653738504598,33.662534986005596,33.66853258696521,33.67453018792483,33.68052778888445,33.686525389844064,33.69252299080368,33.6985205917633,33.70451819272291,33.710515793682525,33.71651339464214,33.72251099560176,33.728508596561376,33.73450619752099,33.74050379848061,33.74650139944023,33.75249900039984,33.758496601359454,33.76449420231907,33.77049180327869,33.776489404238305,33.78248700519792,33.78848460615754,33.794482207117156,33.80047980807677,33.80647740903638,33.812475009996,33.81847261095562,33.824470211915234,33.83046781287485,33.83646541383447,33.842463014794085,33.8484606157537,33.85445821671331,33.86045581767293,33.866453418632545,33.87245101959216,33.87844862055178,33.884446221511396,33.89044382247101,33.89644142343063,33.90243902439025,33.90843662534986,33.914434226309474,33.92043182726909,33.92642942822871,33.932427029188325,33.93842463014794,33.94442223110756,33.950419832067176,33.956417433026786,33.9624150339864,33.96841263494602,33.97441023590564,33.980407836865254,33.98640543782487,33.99240303878449,33.998400639744105,34.00439824070372,34.01039584166333,34.01639344262295,34.022391043582566,34.02838864454218,34.0343862455018,34.04038384646142,34.046381447421034,34.05237904838065,34.05837664934026,34.06437425029988,34.070371851259495,34.07636945221911,34.08236705317873,34.088364654138346,34.09436225509796,34.10035985605758,34.1063574570172,34.11235505797681,34.11835265893642,34.12435025989604,34.13034786085566,34.136345461815274,34.14234306277489,34.14834066373451,34.154338264694125,34.160335865653735,34.16633346661335,34.17233106757297,34.178328668532586,34.1843262694922,34.19032387045182,34.19632147141144,34.202319072371054,34.20831667333067,34.21431427429028,34.2203118752499,34.226309476209515,34.23230707716913,34.23830467812875,34.244302279088366,34.25029988004798,34.2562974810076,34.26229508196721,34.26829268292683,34.274290283886444,34.28028788484606,34.28628548580568,34.292283086765295,34.29828068772491,34.30427828868453,34.310275889644146,34.316273490603756,34.32227109156337,34.32826869252299,34.33426629348261,34.340263894442224,34.34626149540184,34.35225909636146,34.358256697321075,34.364254298280684,34.3702518992403,34.37624950019992,34.382247101159535,34.38824470211915,34.39424230307877,34.400239904038386,34.406237504998,34.41223510595762,34.41823270691723,34.42423030787685,34.430227908836464,34.43622550979608,34.4422231107557,34.448220711715315,34.45421831267493,34.46021591363455,34.46621351459416,34.472211115553776,34.47820871651339,34.48420631747301,34.49020391843263,34.496201519392244,34.50219912035186,34.50819672131148,34.514194322271095,34.520191923230705,34.52618952419032,34.53218712514994,34.538184726109556,34.54418232706917,34.55017992802879,34.55617752898841,34.562175129948024,34.568172730907634,34.57417033186725,34.58016793282687,34.586165533786485,34.5921631347461,34.59816073570572,34.604158336665336,34.61015593762495,34.61615353858457,34.62215113954418,34.628148740503796,34.63414634146341,34.64014394242303,34.64614154338265,34.652139144342264,34.65813674530188,34.6641343462615,34.67013194722111,34.676129548180725,34.68212714914034,34.68812475009996,34.694122351059576,34.70011995201919,34.70611755297881,34.71211515393843,34.718112754898044,34.724110355857654,34.73010795681727,34.73610555777689,34.742103158736505,34.74810075969612,34.75409836065574,34.760095961615356,34.76609356257497,34.77209116353458,34.7780887644942,34.78408636545382,34.790083966413434,34.79608156737305,34.80207916833267,34.808076769292285,34.8140743702519,34.82007197121152,34.82606957217113,34.832067173130746,34.83806477409036,34.84406237504998,34.8500599760096,34.856057576969214,34.86205517792883,34.86805277888845,34.87405037984806,34.880047980807674,34.88604558176729,34.89204318272691,34.898040783686525,34.90403838464614,34.91003598560576,34.916033586565376,34.92203118752499,34.9280287884846,34.93402638944422,34.94002399040384,34.946021591363454,34.95201919232307,34.95801679328269,34.964014394242305,34.97001199520192,34.97600959616153,34.98200719712115,34.988004798080766,34.99400239904038,35.0,35.00599760095962,35.011995201919234,35.01799280287885,35.02399040383847,35.02998800479808,35.035985605757695,35.04198320671731,35.04798080767693,35.053978408636546,35.05997600959616,35.06597361055578,35.0719712115154,35.07796881247501,35.083966413434624,35.08996401439424,35.09596161535386,35.101959216313475,35.10795681727309,35.11395441823271,35.119952019192326,35.12594962015194,35.13194722111155,35.13794482207117,35.143942423030786,35.1499400239904,35.15593762495002,35.16193522590964,35.167932826869254,35.17393042782887,35.17992802878848,35.1859256297481,35.191923230707715,35.19792083166733,35.20391843262695,35.209916033586566,35.21591363454618,35.2219112355058,35.22790883646542,35.23390643742503,35.239904038384644,35.24590163934426,35.25189924030388,35.257896841263495,35.26389444222311,35.26989204318273,35.275889644142346,35.281887245101956,35.28788484606157,35.29388244702119,35.29988004798081,35.305877648940424,35.31187524990004,35.31787285085966,35.323870451819275,35.32986805277889,35.3358656537385,35.34186325469812,35.347860855657736,35.35385845661735,35.35985605757697,35.36585365853659,35.371851259496204,35.37784886045582,35.38384646141543,35.38984406237505,35.395841663334664,35.40183926429428,35.4078368652539,35.413834466213515,35.41983206717313,35.42582966813275,35.431827269092366,35.437824870051976,35.44382247101159,35.44982007197121,35.45581767293083,35.461815273890444,35.46781287485006,35.47381047580968,35.479808076769295,35.485805677728905,35.49180327868852,35.49780087964814,35.503798480607756,35.50979608156737,35.51579368252699,35.52179128348661,35.527788884446224,35.53378648540584,35.53978408636545,35.54578168732507,35.551779288284685,35.5577768892443,35.56377449020392,35.569772091163536,35.57576969212315,35.58176729308277,35.58776489404238,35.593762495002,35.599760095961614,35.60575769692123,35.61175529788085,35.617752898840465,35.62375049980008,35.6297481007597,35.635745701719316,35.641743302678925,35.64774090363854,35.65373850459816,35.659736105557776,35.66573370651739,35.67173130747701,35.67772890843663,35.683726509396244,35.689724110355854,35.69572171131547,35.70171931227509,35.707716913234705,35.71371451419432,35.71971211515394,35.725709716113556,35.73170731707317,35.73770491803279,35.7437025189924,35.74970011995202,35.755697720911634,35.76169532187125,35.76769292283087,35.773690523790485,35.7796881247501,35.78568572570972,35.79168332666933,35.797680927628946,35.80367852858856,35.80967612954818,35.8156737305078,35.821671331467414,35.82766893242703,35.83366653338665,35.839664134346265,35.845661735305875,35.85165933626549,35.85765693722511,35.863654538184726,35.86965213914434,35.87564974010396,35.88164734106358,35.88764494202319,35.8936425429828,35.89964014394242,35.90563774490204,35.911635345861654,35.91763294682127,35.92363054778089,35.929628148740505,35.93562574970012,35.94162335065974,35.94762095161935,35.953618552578966,35.95961615353858,35.9656137544982,35.97161135545782,35.977608956417434,35.98360655737705,35.98960415833667,35.99560175929628,36.001599360255895,36.00759696121551,36.01359456217513,36.019592163134746,36.02558976409436,36.03158736505398,36.0375849660136,36.043582566973214,36.049580167932824,36.05557776889244,36.06157536985206,36.067572970811675,36.07357057177129,36.07956817273091,36.085565773690526,36.09156337465014,36.09756097560975,36.10355857656937,36.10955617752899,36.115553778488604,36.12155137944822,36.12754898040784,36.133546581367455,36.13954418232707,36.14554178328669,36.1515393842463,36.157536985205915,36.16353458616553,36.16953218712515,36.175529788084766,36.18152738904438,36.187524990004,36.19352259096362,36.19952019192323,36.205517792882844,36.21151539384246,36.21751299480208,36.223510595761695,36.22950819672131,36.23550579768093,36.241503398640546,36.24750099960016,36.25349860055977,36.25949620151939,36.26549380247901,36.271491403438624,36.27748900439824,36.28348660535786,36.289484206317475,36.29548180727709,36.3014794082367,36.30747700919632,36.313474610155936,36.31947221111555,36.32546981207517,36.33146741303479,36.337465013994404,36.34346261495402,36.34946021591364,36.35545781687325,36.361455417832865,36.36745301879248,36.3734506197521,36.379448220711716,36.38544582167133,36.39144342263095,36.39744102359057,36.403438624550176,36.40943622550979,36.41543382646941,36.42143142742903,36.427429028388644,36.43342662934826,36.43942423030788,36.445421831267495,36.45141943222711,36.45741703318672,36.46341463414634,36.469412235105956,36.47540983606557,36.48140743702519,36.48740503798481,36.493402638944424,36.49940023990404,36.50539784086365,36.51139544182327,36.517393042782885,36.5233906437425,36.52938824470212,36.535385845661736,36.54138344662135,36.54738104758097,36.55337864854059,36.5593762495002,36.565373850459814,36.57137145141943,36.57736905237905,36.583366653338665,36.58936425429828,36.5953618552579,36.601359456217516,36.607357057177126,36.61335465813674,36.61935225909636,36.62534986005598,36.631347461015594,36.63734506197521,36.64334266293483,36.649340263894445,36.65533786485406,36.66133546581367,36.66733306677329,36.673330667732905,36.67932826869252,36.68532586965214,36.691323470611756,36.69732107157137,36.70331867253099,36.7093162734906,36.71531387445022,36.721311475409834,36.72730907636945,36.73330667732907,36.739304278288685,36.7453018792483,36.75129948020792,36.757297081167536,36.763294682127146,36.76929228308676,36.77528988404638,36.781287485006,36.787285085965614,36.79328268692523,36.79928028788485,36.805277888844465,36.811275489804075,36.81727309076369,36.82327069172331,36.829268292682926,36.83526589364254,36.84126349460216,36.84726109556178,36.853258696521394,36.85925629748101,36.86525389844062,36.87125149940024,36.877249100359855,36.88324670131947,36.88924430227909,36.895241903238706,36.90123950419832,36.90723710515794,36.91323470611756,36.919232307077166,36.92522990803678,36.9312275089964,36.93722510995602,36.943222710915634,36.94922031187525,36.95521791283487,36.961215513794485,36.967213114754095,36.97321071571371,36.97920831667333,36.985205917632946,36.99120351859256,36.99720111955218,37.0031987205118,37.009196321471414,37.01519392243103,37.02119152339064,37.02718912435026,37.033186725309875,37.03918432626949,37.04518192722911,37.051179528188726,37.05717712914834,37.06317473010796,37.06917233106757,37.07516993202719,37.081167532986804,37.08716513394642,37.09316273490604,37.099160335865655,37.10515793682527,37.11115553778489,37.117153138744506,37.123150739704116,37.12914834066373,37.13514594162335,37.14114354258297,37.147141143542584,37.1531387445022,37.15913634546182,37.165133946421435,37.171131547381044,37.17712914834066,37.18312674930028,37.189124350259895,37.19512195121951,37.20111955217913,37.207117153138746,37.21311475409836,37.21911235505798,37.22510995601759,37.23110755697721,37.237105157936824,37.24310275889644,37.24910035985606,37.255097960815675,37.26109556177529,37.26709316273491,37.27309076369452,37.279088364654136,37.28508596561375,37.29108356657337,37.29708116753299,37.303078768492604,37.30907636945222,37.31507397041184,37.321071571371455,37.327069172331065,37.33306677329068,37.3390643742503,37.345061975209916,37.35105957616953,37.35705717712915,37.36305477808877,37.369052379048384,37.375049980007994,37.38104758096761,37.38704518192723,37.393042782886845,37.39904038384646,37.40503798480608,37.411035585765696,37.41703318672531,37.42303078768493,37.42902838864454,37.435025989604156,37.44102359056377,37.44702119152339,37.45301879248301,37.459016393442624,37.46501399440224,37.47101159536186,37.47700919632147,37.483006797281085,37.4890043982407,37.49500199920032,37.500999600159936,37.50699720111955,37.51299480207917,37.51899240303879,37.524990003998404,37.530987604958014,37.53698520591763,37.54298280687725,37.548980407836865,37.55497800879648,37.5609756097561,37.566973210715716,37.57297081167533,37.57896841263494,37.58496601359456,37.59096361455418,37.596961215513794,37.60295881647341,37.60895641743303,37.614954018392645,37.62095161935226,37.62694922031188,37.63294682127149,37.638944422231106,37.64494202319072,37.65093962415034,37.65693722510996,37.66293482606957,37.66893242702919,37.67493002798881,37.68092762894842,37.686925229908034,37.69292283086765,37.69892043182727,37.704918032786885,37.7109156337465,37.71691323470612,37.722910835665736,37.72890843662535,37.73490603758496,37.74090363854458,37.7469012395042,37.752898840463814,37.75889644142343,37.76489404238305,37.770891643342665,37.77688924430228,37.78288684526189,37.78888444622151,37.794882047181126,37.80087964814074,37.80687724910036,37.81287485005998,37.818872451019594,37.82487005197921,37.83086765293883,37.83686525389844,37.842862854858055,37.84886045581767,37.85485805677729,37.860855657736906,37.86685325869652,37.87285085965614,37.87884846061576,37.88484606157537,37.890843662534984,37.8968412634946,37.90283886445422,37.908836465413835,37.91483406637345,37.92083166733307,37.926829268292686,37.9328268692523,37.93882447021191,37.94482207117153,37.950819672131146,37.95681727309076,37.96281487405038,37.96881247501,37.974810075969614,37.98080767692923,37.98680527788884,37.99280287884846,37.998800479808075,38.00479808076769,38.01079568172731,38.016793282686926,38.02279088364654,38.02878848460616,38.03478608556578,38.04078368652539,38.046781287485004,38.05277888844462,38.05877648940424,38.064774090363855,38.07077169132347,38.07676929228309,38.082766893242706,38.088764494202316,38.09476209516193,38.10075969612155,38.10675729708117,38.112754898040784,38.1187524990004,38.12475009996002,38.130747700919635,38.13674530187925,38.14274290283886,38.14874050379848,38.154738104758096,38.16073570571771,38.16673330667733,38.17273090763695,38.17872850859656,38.18472610955618,38.19072371051579,38.19672131147541,38.202718912435024,38.20871651339464,38.21471411435426,38.220711715313875,38.22670931627349,38.23270691723311,38.238704518192726,38.244702119152336,38.25069972011195,38.25669732107157,38.26269492203119,38.268692522990804,38.27469012395042,38.28068772491004,38.286685325869655,38.292682926829265,38.29868052778888,38.3046781287485,38.310675729708116,38.31667333066773,38.32267093162735,38.32866853258697,38.334666133546584,38.3406637345062,38.34666133546581,38.35265893642543,38.358656537385045,38.36465413834466,38.37065173930428,38.376649340263896,38.38264694122351,38.38864454218313,38.39464214314274,38.40063974410236,38.406637345061974,38.41263494602159,38.41863254698121,38.424630147940825,38.43062774890044,38.43662534986006,38.442622950819676,38.448620551779285,38.4546181527389,38.46061575369852,38.466613354658136,38.47261095561775,38.47860855657737,38.48460615753699,38.490603758496604,38.496601359456214,38.50259896041583,38.50859656137545,38.514594162335065,38.52059176329468,38.5265893642543,38.532586965213916,38.53858456617353,38.54458216713315,38.55057976809276,38.55657736905238,38.562574970011994,38.56857257097161,38.57457017193123,38.580567772890845,38.58656537385046,38.59256297481008,38.59856057576969,38.604558176729306,38.61055577768892,38.61655337864854,38.62255097960816,38.628548580567774,38.63454618152739,38.64054378248701,38.646541383446625,38.652538984406235,38.65853658536585,38.66453418632547,38.670531787285086,38.6765293882447,38.68252698920432,38.68852459016394,38.69452219112355,38.70051979208316,38.70651739304278,38.7125149940024,38.718512594962014,38.72451019592163,38.73050779688125,38.736505397840865,38.74250299880048,38.7485005997601,38.75449820071971,38.760495801679326,38.76649340263894,38.77249100359856,38.77848860455818,38.784486205517794,38.79048380647741,38.79648140743703,38.80247900839664,38.808476609356255,38.81447421031587,38.82047181127549,38.826469412235106,38.83246701319472,38.83846461415434,38.84446221511396,38.850459816073574,38.856457417033184,38.8624550179928,38.86845261895242,38.874450219912035,38.88044782087165,38.88644542183127,38.892443022790886,38.8984406237505,38.90443822471011,38.91043582566973,38.91643342662935,38.922431027588964,38.92842862854858,38.9344262295082,38.940423830467815,38.94642143142743,38.95241903238705,38.95841663334666,38.964414234306275,38.97041183526589,38.97640943622551,38.982407037185126,38.98840463814474,38.99440223910436,39.00039984006398,39.00639744102359,39.012395041983204,39.01839264294282,39.02439024390244,39.030387844862055,39.03638544582167,39.04238304678129,39.048380647740906,39.05437824870052,39.06037584966013,39.06637345061975,39.07237105157937,39.078368652538984,39.0843662534986,39.09036385445822,39.096361455417835,39.10235905637745,39.10835665733706,39.11435425829668,39.120351859256296,39.12634946021591,39.13234706117553,39.13834466213515,39.144342263094764,39.15033986405438,39.156337465014,39.16233506597361,39.168332666933225,39.17433026789284,39.18032786885246,39.186325469812076,39.19232307077169,39.19832067173131,39.20431827269093,39.210315873650536,39.21631347461015,39.22231107556977,39.22830867652939,39.234306277489004,39.24030387844862,39.24630147940824,39.252299080367855,39.25829668132747,39.26429428228708,39.2702918832467,39.276289484206316,39.28228708516593,39.28828468612555,39.29428228708517,39.300279888044784,39.3062774890044,39.31227508996401,39.31827269092363,39.324270291883245,39.33026789284286,39.33626549380248,39.342263094762096,39.34826069572171,39.35425829668133,39.36025589764095,39.36625349860056,39.372251099560174,39.37824870051979,39.38424630147941,39.390243902439025,39.39624150339864,39.40223910435826,39.408236705317876,39.414234306277486,39.4202319072371,39.42622950819672,39.43222710915634,39.43822471011595,39.44422231107557,39.45021991203519,39.456217512994805,39.46221511395442,39.46821271491403,39.47421031587365,39.480207916833265,39.48620551779288,39.4922031187525,39.498200719712116,39.50419832067173,39.51019592163135,39.51619352259096,39.52219112355058,39.528188724510194,39.53418632546981,39.54018392642943,39.546181527389045,39.55217912834866,39.55817672930828,39.564174330267896,39.570171931227506,39.57616953218712,39.58216713314674,39.58816473410636,39.594162335065974,39.60015993602559,39.60615753698521,39.612155137944825,39.618152738904435,39.62415033986405,39.63014794082367,39.636145541783286,39.6421431427429,39.64814074370252,39.65413834466214,39.660135945621754,39.66613354658137,39.67213114754098,39.6781287485006,39.684126349460215,39.69012395041983,39.69612155137945,39.702119152339066,39.70811675329868,39.7141143542583,39.72011195521791,39.726109556177526,39.73210715713714,39.73810475809676,39.74410235905638,39.750099960015994,39.75609756097561,39.76209516193523,39.768092762894845,39.774090363854455,39.78008796481407,39.78608556577369,39.792083166733306,39.79808076769292,39.80407836865254,39.81007596961216,39.816073570571774,39.822071171531384,39.828068772491,39.83406637345062,39.840063974410235,39.84606157536985,39.85205917632947,39.858056777289086,39.8640543782487,39.87005197920832,39.87604958016793,39.88204718112755,39.888044782087164,39.89404238304678,39.9000399840064,39.906037584966015,39.91203518592563,39.91803278688525,39.92403038784486,39.930027988804476,39.93602558976409,39.94202319072371,39.94802079168333,39.95401839264294,39.96001599360256,39.96601359456218,39.972011195521794,39.978008796481404,39.98400639744102,39.99000399840064,39.996001599360255,40.00199920031987,40.00799680127949,40.013994402239106,40.01999200319872,40.02598960415833,40.03198720511795,40.03798480607757,40.043982407037184,40.0499800079968,40.05597760895642,40.061975209916035,40.06797281087565,40.07397041183527,40.07996801279488,40.085965613754496,40.09196321471411,40.09796081567373,40.10395841663335,40.109956017592964,40.11595361855258,40.1219512195122,40.12794882047181,40.133946421431425,40.13994402239104,40.14594162335066,40.151939224310276,40.15793682526989,40.16393442622951,40.16993202718913,40.175929628148744,40.181927229108354,40.18792483006797,40.19392243102759,40.199920031987205,40.20591763294682,40.21191523390644,40.217912834866056,40.22391043582567,40.22990803678528,40.2359056377449,40.241903238704516,40.24790083966413,40.25389844062375,40.25989604158337,40.265893642542984,40.2718912435026,40.27788884446222,40.28388644542183,40.289884046381445,40.29588164734106,40.30187924830068,40.307876849260296,40.31387445021991,40.31987205117953,40.32586965213915,40.33186725309876,40.337864854058374,40.34386245501799,40.34986005597761,40.355857656937225,40.36185525789684,40.36785285885646,40.373850459816076,40.37984806077569,40.3858456617353,40.39184326269492,40.39784086365454,40.403838464614154,40.40983606557377,40.41583366653339,40.421831267493005,40.42782886845262,40.43382646941223,40.43982407037185,40.445821671331466,40.45181927229108,40.4578168732507,40.46381447421032,40.46981207516993,40.47580967612955,40.48180727708917,40.48780487804878,40.493802479008394,40.49980007996801,40.50579768092763,40.511795281887245,40.51779288284686,40.52379048380648,40.529788084766096,40.535785685725706,40.54178328668532,40.54778088764494,40.55377848860456,40.559776089564174,40.56577369052379,40.57177129148341,40.577768892443025,40.58376649340264,40.58976409436225,40.59576169532187,40.601759296281486,40.6077568972411,40.61375449820072,40.61975209916034,40.625749700119954,40.63174730107957,40.63774490203919,40.6437425029988,40.649740103958415,40.65573770491803,40.66173530587765,40.667732906837266,40.67373050779688,40.6797281087565,40.68572570971612,40.69172331067573,40.697720911635344,40.70371851259496,40.70971611355458,40.715713714514195,40.72171131547381,40.72770891643343,40.733706517393045,40.73970411835266,40.74570171931227,40.75169932027189,40.757696921231506,40.76369452219112,40.76969212315074,40.77568972411036,40.781687325069974,40.78768492602959,40.7936825269892,40.79968012794882,40.805677728908435,40.81167532986805,40.81767293082767,40.823670531787286,40.8296681327469,40.83566573370652,40.84166333466614,40.84766093562575,40.853658536585364,40.85965613754498,40.8656537385046,40.871651339464215,40.87764894042383,40.88364654138345,40.889644142343066,40.895641743302676,40.90163934426229,40.90763694522191,40.91363454618153,40.919632147141144,40.92562974810076,40.93162734906038,40.937624950019995,40.94362255097961,40.94962015193922,40.95561775289884,40.961615353858456,40.96761295481807,40.97361055577769,40.97960815673731,40.98560575769692,40.99160335865654,40.99760095961615,41.00359856057577,41.009596161535384,41.015593762495,41.02159136345462,41.027588964414235,41.03358656537385,41.03958416633347,41.045581767293086,41.051579368252696,41.05757696921231,41.06357457017193,41.06957217113155,41.075569772091164,41.08156737305078,41.0875649740104,41.093562574970015,41.099560175929625,41.10555777688924,41.11155537784886,41.117552978808476,41.12355057976809,41.12954818072771,41.13554578168733,41.141543382646944,41.14754098360656,41.15353858456617,41.15953618552579,41.165533786485405,41.17153138744502,41.17752898840464,41.183526589364256,41.18952419032387,41.19552179128349,41.2015193922431,41.20751699320272,41.21351459416233,41.21951219512195,41.22550979608157,41.231507397041185,41.2375049980008,41.24350259896042,41.249500199920035,41.255497800879645,41.26149540183926,41.26749300279888,41.273490603758496,41.27948820471811,41.28548580567773,41.29148340663735,41.297481007596964,41.303478608556574,41.30947620951619,41.31547381047581,41.321471411435425,41.32746901239504,41.33346661335466,41.339464214314276,41.34546181527389,41.35145941623351,41.35745701719312,41.36345461815274,41.369452219112354,41.37544982007197,41.38144742103159,41.387445021991205,41.39344262295082,41.39944022391044,41.40543782487005,41.411435425829666,41.41743302678928,41.4234306277489,41.42942822870852,41.435425829668134,41.44142343062775,41.44742103158737,41.453418632546985,41.459416233506595,41.46541383446621,41.47141143542583,41.477409036385446,41.48340663734506,41.48940423830468,41.4954018392643,41.50139944022391,41.50739704118352,41.51339464214314,41.51939224310276,41.525389844062374,41.53138744502199,41.53738504598161,41.543382646941225,41.54938024790084,41.55537784886046,41.56137544982007,41.567373050779686,41.5733706517393,41.57936825269892,41.58536585365854,41.591363454618154,41.59736105557777,41.60335865653739,41.609356257497,41.615353858456615,41.62135145941623,41.62734906037585,41.633346661335466,41.63934426229508,41.6453418632547,41.65133946421432,41.657337065173934,41.663334666133544,41.66933226709316,41.67532986805278,41.681327469012395,41.68732506997201,41.69332267093163,41.699320271891246,41.70531787285086,41.71131547381047,41.71731307477009,41.72331067572971,41.72930827668932,41.73530587764894,41.74130347860856,41.747301079568174,41.75329868052779,41.75929628148741,41.76529388244702,41.771291483406635,41.77728908436625,41.78328668532587,41.789284286285486,41.7952818872451,41.80127948820472,41.80727708916434,41.81327469012395,41.819272291083564,41.82526989204318,41.8312674930028,41.837265093962415,41.84326269492203,41.84926029588165,41.855257896841266,41.86125549780088,41.86725309876049,41.87325069972011,41.87924830067973,41.885245901639344,41.89124350259896,41.89724110355858,41.903238704518195,41.90923630547781,41.91523390643742,41.92123150739704,41.927229108356656,41.93322670931627,41.93922431027589,41.94522191123551,41.951219512195124,41.95721711315474,41.96321471411436,41.96921231507397,41.975209916033585,41.9812075169932,41.98720511795282,41.993202718912436,41.99920031987205,42.00519792083167,42.01119552179129,42.017193122750896,42.02319072371051,42.02918832467013,42.03518592562975,42.041183526589364,42.04718112754898,42.0531787285086,42.059176329468215,42.06517393042783,42.07117153138744,42.07716913234706,42.083166733306676,42.08916433426629,42.09516193522591,42.10115953618553,42.107157137145144,42.11315473810476,42.11915233906437,42.12514994002399,42.131147540983605,42.13714514194322,42.14314274290284,42.149140343862456,42.15513794482207,42.16113554578169,42.16713314674131,42.17313074770092,42.179128348660534,42.18512594962015,42.19112355057977,42.197121151539385,42.203118752499,42.20911635345862,42.215113954418236,42.221111555377846,42.22710915633746,42.23310675729708,42.2391043582567,42.24510195921631,42.25109956017593,42.25709716113555,42.263094762095164,42.26909236305478,42.27508996401439,42.28108756497401,42.287085165933625,42.29308276689324,42.29908036785286,42.305077968812476,42.31107556977209,42.31707317073171,42.32307077169132,42.32906837265094,42.335065973610554,42.34106357457017,42.34706117552979,42.353058776489405,42.35905637744902,42.36505397840864,42.371051579368256,42.377049180327866,42.38304678128748,42.3890443822471,42.39504198320672,42.401039584166334,42.40703718512595,42.41303478608557,42.419032387045185,42.425029988004795,42.43102758896441,42.43702518992403,42.443022790883646,42.44902039184326,42.45501799280288,42.4610155937625,42.467013194722114,42.47301079568173,42.47900839664134,42.48500599760096,42.491003598560575,42.49700119952019,42.50299880047981,42.508996401439425,42.51499400239904,42.52099160335866,42.52698920431827,42.532986805277886,42.5389844062375,42.54498200719712,42.55097960815674,42.556977209116354,42.56297481007597,42.56897241103559,42.574970011995205,42.580967612954815,42.58696521391443,42.59296281487405,42.598960415833666,42.60495801679328,42.6109556177529,42.61695321871252,42.622950819672134,42.628948420631744,42.63494602159136,42.64094362255098,42.646941223510595,42.65293882447021,42.65893642542983,42.664934026389446,42.67093162734906,42.67692922830868,42.68292682926829,42.68892443022791,42.694922031187524,42.70091963214714,42.70691723310676,42.712914834066375,42.71891243502599,42.72491003598561,42.73090763694522,42.736905237904836,42.74290283886445,42.74890043982407,42.75489804078369,42.7608956417433,42.76689324270292,42.77289084366254,42.778888444622154,42.784886045581764,42.79088364654138,42.796881247501,42.802878848460615,42.80887644942023,42.81487405037985,42.820871651339466,42.82686925229908,42.83286685325869,42.83886445421831,42.84486205517793,42.850859656137544,42.85685725709716,42.86285485805678,42.868852459016395,42.87485005997601,42.88084766093563,42.88684526189524,42.892842862854856,42.89884046381447,42.90483806477409,42.91083566573371,42.916833266693324,42.92283086765294,42.92882846861256,42.93482606957217,42.940823670531785,42.9468212714914,42.95281887245102,42.958816473410636,42.96481407437025,42.97081167532987,42.97680927628949,42.982806877249104,42.98880447820871,42.99480207916833,43.00079968012795,43.006797281087564,43.01279488204718,43.0187924830068,43.024790083966415,43.03078768492603,43.03678528588564,43.04278288684526,43.048780487804876,43.05477808876449,43.06077568972411,43.06677329068373,43.072770891643344,43.07876849260296,43.08476609356258,43.09076369452219,43.096761295481805,43.10275889644142,43.10875649740104,43.114754098360656,43.12075169932027,43.12674930027989,43.13274690123951,43.13874450219912,43.144742103158734,43.15073970411835,43.15673730507797,43.162734906037585,43.1687325069972,43.17473010795682,43.180727708916436,43.18672530987605,43.19272291083566,43.19872051179528,43.2047181127549,43.210715713714514,43.21671331467413,43.22271091563375,43.228708516593365,43.23470611755298,43.24070371851259,43.24670131947221,43.252698920431826,43.25869652139144,43.26469412235106,43.27069172331068,43.27668932427029,43.28268692522991,43.28868452618953,43.29468212714914,43.300679728108754,43.30667732906837,43.31267493002799,43.318672530987605,43.32467013194722,43.33066773290684,43.336665333866456,43.342662934826066,43.34866053578568,43.3546581367453,43.36065573770492,43.366653338664534,43.37265093962415,43.37864854058377,43.384646141543385,43.390643742503,43.39664134346261,43.40263894442223,43.408636545381846,43.41463414634146,43.42063174730108,43.4266293482607,43.432626949220314,43.43862455017993,43.44462215113954,43.45061975209916,43.456617353058775,43.46261495401839,43.46861255497801,43.474610155937626,43.48060775689724,43.48660535785686,43.49260295881648,43.49860055977609,43.5045981607357,43.51059576169532,43.51659336265494,43.522590963614554,43.52858856457417,43.53458616553379,43.540583766493405,43.546581367453015,43.55257896841263,43.55857656937225,43.564574170331866,43.57057177129148,43.5765693722511,43.58256697321072,43.588564574170334,43.59456217512995,43.60055977608956,43.60655737704918,43.612554978008795,43.61855257896841,43.62455017992803,43.630547780887646,43.63654538184726,43.64254298280688,43.64854058376649,43.65453818472611,43.660535785685724,43.66653338664534,43.67253098760496,43.678528588564575,43.68452618952419,43.69052379048381,43.696521391443426,43.702518992403036,43.70851659336265,43.71451419432227,43.72051179528189,43.726509396241504,43.73250699720112,43.73850459816074,43.744502199120355,43.750499800079965,43.75649740103958,43.7624950019992,43.768492602958815,43.77449020391843,43.78048780487805,43.78648540583767,43.79248300679728,43.7984806077569,43.80447820871651,43.81047580967613,43.816473410635744,43.82247101159536,43.82846861255498,43.834466213514595,43.84046381447421,43.84646141543383,43.85245901639344,43.858456617353056,43.86445421831267,43.87045181927229,43.87644942023191,43.882447021191524,43.88844462215114,43.89444222311076,43.900439824070375,43.906437425029985,43.9124350259896,43.91843262694922,43.924430227908836,43.93042782886845,43.93642542982807,43.94242303078769,43.948420631747304,43.954418232706914,43.96041583366653,43.96641343462615,43.972411035585765,43.97840863654538,43.984406237505,43.990403838464616,43.99640143942423,44.00239904038385,44.00839664134346,44.01439424230308,44.02039184326269,44.02638944422231,44.03238704518193,44.038384646141544,44.04438224710116,44.05037984806078,44.05637744902039,44.062375049980005,44.06837265093962,44.07437025189924,44.080367852858856,44.08636545381847,44.09236305477809,44.09836065573771,44.104358256697324,44.110355857656934,44.11635345861655,44.12235105957617,44.128348660535785,44.1343462614954,44.14034386245502,44.146341463414636,44.15233906437425,44.15833666533386,44.16433426629348,44.1703318672531,44.176329468212714,44.18232706917233,44.18832467013195,44.194322271091565,44.20031987205118,44.2063174730108,44.21231507397041,44.218312674930026,44.22431027588964,44.23030787684926,44.23630547780888,44.242303078768494,44.24830067972811,44.25429828068773,44.26029588164734,44.266293482606955,44.27229108356657,44.27828868452619,44.284286285485805,44.29028388644542,44.29628148740504,44.302279088364656,44.30827668932427,44.31427429028388,44.3202718912435,44.32626949220312,44.332267093162734,44.33826469412235,44.34426229508197,44.350259896041585,44.3562574970012,44.36225509796081,44.36825269892043,44.374250299880046,44.38024790083966,44.38624550179928,44.3922431027589,44.398240703718514,44.40423830467813,44.41023590563775,44.41623350659736,44.422231107556975,44.42822870851659,44.43422630947621,44.440223910435826,44.44622151139544,44.45221911235506,44.45821671331468,44.464214314274294,44.470211915233904,44.47620951619352,44.48220711715314,44.488204718112755,44.49420231907237,44.50019992003199,44.506197520991606,44.51219512195122,44.51819272291083,44.52419032387045,44.53018792483007,44.53618552578968,44.5421831267493,44.54818072770892,44.554178328668534,44.56017592962815,44.56617353058777,44.57217113154738,44.578168732506995,44.58416633346661,44.59016393442623,44.596161535385846,44.60215913634546,44.60815673730508,44.6141543382647,44.62015193922431,44.626149540183924,44.63214714114354,44.63814474210316,44.644142343062775,44.65013994402239,44.65613754498201,44.662135145941626,44.66813274690124,44.67413034786085,44.68012794882047,44.68612554978009,44.692123150739704,44.69812075169932,44.70411835265894,44.710115953618555,44.71611355457817,44.72211115553778,44.7281087564974,44.734106357457016,44.74010395841663,44.74610155937625,44.75209916033587,44.758096761295484,44.7640943622551,44.77009196321472,44.77608956417433,44.782087165133944,44.78808476609356,44.79408236705318,44.800079968012795,44.80607756897241,44.81207516993203,44.818072770891646,44.824070371851256,44.83006797281087,44.83606557377049,44.84206317473011,44.848060775689724,44.85405837664934,44.86005597760896,44.866053578568575,44.87205117952819,44.8780487804878,44.88404638144742,44.890043982407036,44.89604158336665,44.90203918432627,44.90803678528589,44.914034386245504,44.92003198720512,44.92602958816473,44.93202718912435,44.938024790083965,44.94402239104358,44.9500199920032,44.956017592962816,44.96201519392243,44.96801279488205,44.97401039584167,44.98000799680128,44.986005597760894,44.99200319872051,44.99800079968013,45.003998400639745,45.00999600159936,45.01599360255898,45.021991203518596,45.027988804478206,45.03398640543782,45.03998400639744,45.04598160735706,45.05197920831667,45.05797680927629,45.06397441023591,45.069972011195524,45.07596961215514,45.08196721311475,45.08796481407437,45.093962415033985,45.0999600159936,45.10595761695322,45.111955217912836,45.11795281887245,45.12395041983207,45.12994802079168,45.1359456217513,45.141943222710914,45.14794082367053,45.15393842463015,45.159936025589765,45.16593362654938,45.171931227509,45.177928828468616,45.183926429428226,45.18992403038784,45.19592163134746,45.20191923230708,45.207916833266694,45.21391443422631,45.21991203518593,45.225909636145545,45.231907237105155,45.23790483806477,45.24390243902439,45.249900039984006,45.25589764094362,45.26189524190324,45.26789284286286,45.273890443822474,45.27988804478209,45.2858856457417,45.29188324670132,45.297880847660934,45.30387844862055,45.30987604958017,45.315873650539785,45.3218712514994,45.32786885245902,45.33386645341863,45.339864054378246,45.34586165533786,45.35185925629748,45.3578568572571,45.363854458216714,45.36985205917633,45.37584966013595,45.381847261095565,45.387844862055175,45.39384246301479,45.39984006397441,45.405837664934026,45.41183526589364,45.41783286685326,45.42383046781288,45.429828068772494,45.435825669732104,45.44182327069172,45.44782087165134,45.453818472610955,45.45981607357057,45.46581367453019,45.471811275489806,45.47780887644942,45.48380647740904,45.48980407836865,45.49580167932827,45.501799280287884,45.5077968812475,45.51379448220712,45.519792083166735,45.52578968412635,45.53178728508597,45.53778488604558,45.543782487005195,45.54978008796481,45.55577768892443,45.56177528988405,45.56777289084366,45.57377049180328,45.5797680927629,45.585765693722514,45.591763294682124,45.59776089564174,45.60375849660136,45.609756097560975,45.61575369852059,45.62175129948021,45.627748900439826,45.63374650139944,45.63974410235905,45.64574170331867,45.65173930427829,45.657736905237904,45.66373450619752,45.66973210715714,45.675729708116755,45.68172730907637,45.68772491003599,45.6937225109956,45.699720111955216,45.70571771291483,45.71171531387445,45.71771291483407,45.723710515793684,45.7297081167533,45.73570571771292,45.74170331867253,45.747700919632145,45.75369852059176,45.75969612155138,45.765693722510996,45.77169132347061,45.77768892443023,45.78368652538985,45.789684126349464,45.79568172730907,45.80167932826869,45.80767692922831,45.813674530187924,45.81967213114754,45.82566973210716,45.831667333066775,45.83766493402639,45.843662534986,45.84966013594562,45.855657736905236,45.86165533786485,45.86765293882447,45.87365053978409,45.879648140743704,45.88564574170332,45.89164334266294,45.89764094362255,45.903638544582165,45.90963614554178,45.9156337465014,45.921631347461016,45.92762894842063,45.93362654938025,45.93962415033987,45.94562175129948,45.951619352259094,45.95761695321871,45.96361455417833,45.969612155137945,45.97560975609756,45.98160735705718,45.987604958016796,45.99360255897641,45.99960015993602,46.00559776089564,46.01159536185526,46.017592962814874,46.02359056377449,46.02958816473411,46.035585765693725,46.04158336665334,46.04758096761295,46.05357856857257,46.059576169532185,46.0655737704918,46.07157137145142,46.077568972411036,46.08356657337065,46.08956417433027,46.09556177528989,46.1015593762495,46.107556977209114,46.11355457816873,46.11955217912835,46.125549780087965,46.13154738104758,46.1375449820072,46.143542582966816,46.149540183926426,46.15553778488604,46.16153538584566,46.16753298680528,46.173530587764894,46.17952818872451,46.18552578968413,46.191523390643745,46.19752099160336,46.20351859256297,46.20951619352259,46.215513794482206,46.22151139544182,46.22750899640144,46.23350659736106,46.239504198320674,46.24550179928029,46.2514994002399,46.25749700119952,46.263494602159135,46.26949220311875,46.27548980407837,46.281487405037986,46.2874850059976,46.29348260695722,46.29948020791684,46.30547780887645,46.31147540983606,46.31747301079568,46.3234706117553,46.329468212714914,46.33546581367453,46.34146341463415,46.347461015593765,46.353458616553375,46.35945621751299,46.36545381847261,46.371451419432226,46.37744902039184,46.38344662135146,46.38944422231108,46.395441823270694,46.40143942423031,46.40743702518992,46.41343462614954,46.419432227109155,46.42542982806877,46.43142742902839,46.437425029988006,46.44342263094762,46.44942023190724,46.45541783286685,46.46141543382647,46.467413034786084,46.4734106357457,46.47940823670532,46.485405837664935,46.49140343862455,46.49740103958417,46.503398640543786,46.509396241503396,46.51539384246301,46.52139144342263,46.52738904438225,46.533386645341864,46.53938424630148,46.5453818472611,46.551379448220715,46.557377049180324,46.56337465013994,46.56937225109956,46.575369852059175,46.58136745301879,46.58736505397841,46.593362654938026,46.59936025589764,46.60535785685726,46.61135545781687,46.61735305877649,46.623350659736104,46.62934826069572,46.63534586165534,46.641343462614955,46.64734106357457,46.65333866453419,46.6593362654938,46.665333866453416,46.67133146741303,46.67732906837265,46.68332666933227,46.689324270291884,46.6953218712515,46.70131947221112,46.707317073170735,46.713314674130345,46.71931227508996,46.72530987604958,46.731307477009196,46.73730507796881,46.74330267892843,46.74930027988805,46.755297880847664,46.761295481807274,46.76729308276689,46.77329068372651,46.779288284686125,46.78528588564574,46.79128348660536,46.797281087564976,46.80327868852459,46.80927628948421,46.81527389044382,46.82127149140344,46.82726909236305,46.83326669332267,46.83926429428229,46.845261895241904,46.85125949620152,46.85725709716114,46.86325469812075,46.869252299080365,46.87524990003998,46.8812475009996,46.887245101959216,46.89324270291883,46.89924030387845,46.90523790483807,46.911235505797684,46.917233106757294,46.92323070771691,46.92922830867653,46.935225909636145,46.94122351059576,46.94722111155538,46.953218712514996,46.95921631347461,46.96521391443422,46.97121151539384,46.97720911635346,46.983206717313074,46.98920431827269,46.99520191923231,47.001199520191925,47.00719712115154,47.01319472211116,47.01919232307077,47.025189924030386,47.03118752499,47.03718512594962,47.04318272690924,47.049180327868854,47.05517792882847,47.06117552978809,47.0671731307477,47.073170731707314,47.07916833266693,47.08516593362655,47.091163534586165,47.09716113554578,47.1031587365054,47.109156337465016,47.11515393842463,47.12115153938424,47.12714914034386,47.13314674130348,47.139144342263094,47.14514194322271,47.15113954418233,47.157137145141945,47.16313474610156,47.16913234706117,47.17512994802079,47.181127548980406,47.18712514994002,47.19312275089964,47.19912035185926,47.205117952818874,47.21111555377849,47.21711315473811,47.22311075569772,47.229108356657335,47.23510595761695,47.24110355857657,47.247101159536186,47.2530987604958,47.25909636145542,47.26509396241504,47.27109156337465,47.277089164334264,47.28308676529388,47.2890843662535,47.295081967213115,47.30107956817273,47.30707716913235,47.313074770091966,47.31907237105158,47.32506997201119,47.33106757297081,47.33706517393043,47.34306277489004,47.34906037584966,47.35505797680928,47.361055577768894,47.36705317872851,47.37305077968812,47.37904838064774,47.385045981607355,47.39104358256697,47.39704118352659,47.403038784486206,47.40903638544582,47.41503398640544,47.42103158736506,47.42702918832467,47.433026789284284,47.4390243902439,47.44502199120352,47.451019592163135,47.45701719312275,47.46301479408237,47.469012395041986,47.475009996001596,47.48100759696121,47.48700519792083,47.49300279888045,47.499000399840064,47.50499800079968,47.5109956017593,47.516993202718915,47.52299080367853,47.52898840463814,47.53498600559776,47.540983606557376,47.54698120751699,47.55297880847661,47.55897640943623,47.564974010395844,47.57097161135546,47.57696921231507,47.58296681327469,47.588964414234304,47.59496201519392,47.60095961615354,47.606957217113155,47.61295481807277,47.61895241903239,47.624950019992006,47.630947620951616,47.63694522191123,47.64294282287085,47.64894042383047,47.654938024790084,47.6609356257497,47.66693322670932,47.672930827668935,47.678928428628545,47.68492602958816,47.69092363054778,47.696921231507396,47.70291883246701,47.70891643342663,47.71491403438625,47.720911635345864,47.72690923630548,47.73290683726509,47.73890443822471,47.744902039184325,47.75089964014394,47.75689724110356,47.762894842063176,47.76889244302279,47.77489004398241,47.78088764494202,47.78688524590164,47.792882846861254,47.79888044782087,47.80487804878049,47.810875649740105,47.81687325069972,47.82287085165934,47.828868452618956,47.834866053578565,47.84086365453818,47.8468612554978,47.852858856457416,47.85885645741703,47.86485405837665,47.87085165933627,47.876849260295884,47.882846861255494,47.88884446221511,47.89484206317473,47.900839664134345,47.90683726509396,47.91283486605358,47.918832467013196,47.92483006797281,47.93082766893243,47.93682526989204,47.94282287085166,47.948820471811274,47.95481807277089,47.96081567373051,47.966813274690125,47.97281087564974,47.97880847660936,47.98480607756897,47.990803678528586,47.9968012794882,48.00279888044782,48.00879648140744,48.014794082367054,48.02079168332667,48.02678928428629,48.032786885245905,48.038784486205515,48.04478208716513,48.05077968812475,48.056777289084366,48.06277489004398,48.0687724910036,48.07477009196322,48.080767692922834,48.08676529388244,48.09276289484206,48.09876049580168,48.104758096761294,48.11075569772091,48.11675329868053,48.122750899640145,48.12874850059976,48.13474610155938,48.14074370251899,48.146741303478606,48.15273890443822,48.15873650539784,48.16473410635746,48.170731707317074,48.17672930827669,48.18272690923631,48.188724510195925,48.194722111155535,48.20071971211515,48.20671731307477,48.212714914034386,48.218712514994,48.22471011595362,48.23070771691324,48.236705317872854,48.242702918832464,48.24870051979208,48.2546981207517,48.260695721711315,48.26669332267093,48.27269092363055,48.278688524590166,48.28468612554978,48.2906837265094,48.29668132746901,48.30267892842863,48.308676529388244,48.31467413034786,48.32067173130748,48.326669332267095,48.33266693322671,48.33866453418633,48.34466213514594,48.350659736105555,48.35665733706517,48.36265493802479,48.368652538984406,48.37465013994402,48.38064774090364,48.38664534186326,48.392642942822874,48.398640543782484,48.4046381447421,48.41063574570172,48.416633346661335,48.42263094762095,48.42862854858057,48.434626149540186,48.4406237504998,48.44662135145941,48.45261895241903,48.45861655337865,48.464614154338264,48.47061175529788,48.4766093562575,48.482606957217115,48.48860455817673,48.49460215913635,48.50059976009596,48.506597361055576,48.51259496201519,48.51859256297481,48.52459016393443,48.530587764894044,48.53658536585366,48.54258296681328,48.54858056777289,48.554578168732505,48.56057576969212,48.56657337065174,48.572570971611356,48.57856857257097,48.58456617353059,48.59056377449021,48.596561375449824,48.60255897640943,48.60855657736905,48.61455417832867,48.620551779288284,48.6265493802479,48.63254698120752,48.638544582167135,48.64454218312675,48.65053978408636,48.65653738504598,48.662534986005596,48.66853258696521,48.67453018792483,48.68052778888445,48.686525389844064,48.69252299080368,48.6985205917633,48.70451819272291,48.710515793682525,48.71651339464214,48.72251099560176,48.728508596561376,48.73450619752099,48.74050379848061,48.74650139944023,48.75249900039984,48.758496601359454,48.76449420231907,48.77049180327869,48.776489404238305,48.78248700519792,48.78848460615754,48.794482207117156,48.80047980807677,48.80647740903638,48.812475009996,48.81847261095562,48.824470211915234,48.83046781287485,48.83646541383447,48.842463014794085,48.8484606157537,48.85445821671331,48.86045581767293,48.866453418632545,48.87245101959216,48.87844862055178,48.884446221511396,48.89044382247101,48.89644142343063,48.90243902439025,48.90843662534986,48.914434226309474,48.92043182726909,48.92642942822871,48.932427029188325,48.93842463014794,48.94442223110756,48.950419832067176,48.956417433026786,48.9624150339864,48.96841263494602,48.97441023590564,48.980407836865254,48.98640543782487,48.99240303878449,48.998400639744105,49.00439824070372,49.01039584166333,49.01639344262295,49.022391043582566,49.02838864454218,49.0343862455018,49.04038384646142,49.046381447421034,49.05237904838065,49.05837664934026,49.06437425029988,49.070371851259495,49.07636945221911,49.08236705317873,49.088364654138346,49.09436225509796,49.10035985605758,49.1063574570172,49.11235505797681,49.11835265893642,49.12435025989604,49.13034786085566,49.136345461815274,49.14234306277489,49.14834066373451,49.154338264694125,49.160335865653735,49.16633346661335,49.17233106757297,49.178328668532586,49.1843262694922,49.19032387045182,49.19632147141144,49.202319072371054,49.20831667333067,49.21431427429028,49.2203118752499,49.226309476209515,49.23230707716913,49.23830467812875,49.244302279088366,49.25029988004798,49.2562974810076,49.26229508196721,49.26829268292683,49.274290283886444,49.28028788484606,49.28628548580568,49.292283086765295,49.29828068772491,49.30427828868453,49.310275889644146,49.316273490603756,49.32227109156337,49.32826869252299,49.33426629348261,49.340263894442224,49.34626149540184,49.35225909636146,49.358256697321075,49.364254298280684,49.3702518992403,49.37624950019992,49.382247101159535,49.38824470211915,49.39424230307877,49.400239904038386,49.406237504998,49.41223510595762,49.41823270691723,49.42423030787685,49.430227908836464,49.43622550979608,49.4422231107557,49.448220711715315,49.45421831267493,49.46021591363455,49.46621351459416,49.472211115553776,49.47820871651339,49.48420631747301,49.49020391843263,49.496201519392244,49.50219912035186,49.50819672131148,49.514194322271095,49.520191923230705,49.52618952419032,49.53218712514994,49.538184726109556,49.54418232706917,49.55017992802879,49.55617752898841,49.562175129948024,49.568172730907634,49.57417033186725,49.58016793282687,49.586165533786485,49.5921631347461,49.59816073570572,49.604158336665336,49.61015593762495,49.61615353858457,49.62215113954418,49.628148740503796,49.63414634146341,49.64014394242303,49.64614154338265,49.652139144342264,49.65813674530188,49.6641343462615,49.67013194722111,49.676129548180725,49.68212714914034,49.68812475009996,49.694122351059576,49.70011995201919,49.70611755297881,49.71211515393843,49.718112754898044,49.724110355857654,49.73010795681727,49.73610555777689,49.742103158736505,49.74810075969612,49.75409836065574,49.760095961615356,49.76609356257497,49.77209116353458,49.7780887644942,49.78408636545382,49.790083966413434,49.79608156737305,49.80207916833267,49.808076769292285,49.8140743702519,49.82007197121152,49.82606957217113,49.832067173130746,49.83806477409036,49.84406237504998,49.8500599760096,49.856057576969214,49.86205517792883,49.86805277888845,49.87405037984806,49.880047980807674,49.88604558176729,49.89204318272691,49.898040783686525,49.90403838464614,49.91003598560576,49.916033586565376,49.92203118752499,49.9280287884846,49.93402638944422,49.94002399040384,49.946021591363454,49.95201919232307,49.95801679328269,49.964014394242305,49.97001199520192,49.97600959616153,49.98200719712115,49.988004798080766,49.99400239904038,50.0]}

},{}],56:[function(require,module,exports){
module.exports={"expected":[0.5773502588272095,0.5770235061645508,0.5766972899436951,0.5763716697692871,0.5760465264320374,0.5757219791412354,0.5753980278968811,0.5750745534896851,0.5747516751289368,0.5744292736053467,0.5741074681282043,0.5737861394882202,0.5734654068946838,0.5731452107429504,0.57282555103302,0.5725063681602478,0.5721877813339233,0.5718697309494019,0.5715521574020386,0.5712351202964783,0.5709186792373657,0.5706027150154114,0.57028728723526,0.5699723362922668,0.5696579217910767,0.5693441033363342,0.5690307021141052,0.568717896938324,0.5684055685997009,0.5680937170982361,0.567782461643219,0.5674716234207153,0.5671613812446594,0.5668516159057617,0.5665423274040222,0.5662335753440857,0.5659253001213074,0.5656176209449768,0.5653103590011597,0.5650036334991455,0.5646973252296448,0.5643916130065918,0.5640863180160522,0.5637815594673157,0.5634772777557373,0.5631735324859619,0.5628702044487,0.5625674724578857,0.562265157699585,0.5619633197784424,0.561661958694458,0.5613611340522766,0.5610607862472534,0.5607608556747437,0.5604614615440369,0.5601625442504883,0.5598641037940979,0.5595661401748657,0.559268593788147,0.5589715838432312,0.5586750507354736,0.5583789348602295,0.5580833554267883,0.5577881932258606,0.5574935078620911,0.5571992993354797,0.5569056272506714,0.5566123127937317,0.556319534778595,0.5560271739959717,0.5557352900505066,0.5554438233375549,0.5551528930664062,0.5548623204231262,0.5545722842216492,0.5542826652526855,0.5539935231208801,0.5537047982215881,0.5534165501594543,0.5531287789344788,0.5528413653373718,0.5525544881820679,0.5522680878639221,0.551982045173645,0.5516964793205261,0.5514113306999207,0.5511266589164734,0.5508424043655396,0.5505585670471191,0.5502752065658569,0.5499923229217529,0.5497097969055176,0.5494277477264404,0.5491461157798767,0.5488649606704712,0.5485841631889343,0.5483038425445557,0.5480239391326904,0.5477444529533386,0.547465443611145,0.5471867918968201,0.5469085574150085,0.5466307997703552,0.5463534593582153,0.5460765361785889,0.5458000302314758,0.5455239415168762,0.54524827003479,0.5449730157852173,0.544698178768158,0.5444237589836121,0.5441497564315796,0.5438761711120605,0.5436030030250549,0.5433302521705627,0.5430578589439392,0.5427859425544739,0.5425143837928772,0.542243242263794,0.5419725179672241,0.5417022109031677,0.54143226146698,0.5411627888679504,0.5408936142921448,0.5406249165534973,0.5403566360473633,0.5400887131690979,0.539821207523346,0.5395540595054626,0.5392873883247375,0.5390210151672363,0.5387551188468933,0.538489580154419,0.5382243990898132,0.5379596948623657,0.5376952886581421,0.5374312996864319,0.5371677279472351,0.536904513835907,0.5366417169570923,0.5363792777061462,0.5361172556877136,0.5358555912971497,0.5355943441390991,0.5353334546089172,0.535072922706604,0.5348128080368042,0.534553050994873,0.5342936515808105,0.5340346097946167,0.5337759852409363,0.5335177779197693,0.5332598686218262,0.5330023765563965,0.5327452421188354,0.5324885249137878,0.5322321057319641,0.5319761037826538,0.5317204594612122,0.5314652323722839,0.5312102437019348,0.5309557318687439,0.5307015776634216,0.530447781085968,0.5301942825317383,0.529941201210022,0.5296884775161743,0.5294361114501953,0.529184103012085,0.528932511806488,0.528681218624115,0.5284302830696106,0.5281797051429749,0.5279294848442078,0.5276796221733093,0.5274301171302795,0.5271809697151184,0.5269321799278259,0.5266837477684021,0.5264356136322021,0.5261878967285156,0.525940477848053,0.525693416595459,0.5254467129707336,0.5252004265785217,0.5249543786048889,0.5247086882591248,0.524463415145874,0.5242184400558472,0.523973822593689,0.5237295031547546,0.523485541343689,0.5232419967651367,0.5229986906051636,0.5227557420730591,0.522513210773468,0.522270917892456,0.5220290422439575,0.5217874646186829,0.5215461850166321,0.52130526304245,0.5210646986961365,0.5208244919776917,0.5205845832824707,0.5203449726104736,0.5201057195663452,0.5198668241500854,0.5196282267570496,0.5193899869918823,0.519152045249939,0.5189144015312195,0.5186771154403687,0.5184401869773865,0.5182035565376282,0.5179672241210938,0.517731249332428,0.5174956321716309,0.5172602534294128,0.5170252323150635,0.516790509223938,0.5165561437606812,0.5163220763206482,0.5160883665084839,0.5158548951148987,0.5156217813491821,0.5153890252113342,0.5151565074920654,0.5149243474006653,0.5146925449371338,0.5144609808921814,0.5142297148704529,0.513998806476593,0.513768196105957,0.5135379433631897,0.5133079290390015,0.5130782723426819,0.5128489136695862,0.5126198530197144,0.5123910903930664,0.5121626257896423,0.5119344592094421,0.5117066502571106,0.5114791393280029,0.5112518668174744,0.5110249519348145,0.5107983350753784,0.5105720162391663,0.5103459358215332,0.5101202130317688,0.5098947882652283,0.5096696615219116,0.5094448328018188,0.50922030210495,0.5089960694313049,0.5087721347808838,0.5085484981536865,0.5083251595497131,0.5081021189689636,0.5078793168067932,0.5076568722724915,0.5074347257614136,0.5072128176689148,0.5069912075996399,0.5067698955535889,0.5065488815307617,0.5063281655311584,0.506107747554779,0.5058875679969788,0.5056676864624023,0.5054481029510498,0.5052288174629211,0.5050098299980164,0.5047910809516907,0.5045726895332336,0.5043545365333557,0.5041366219520569,0.5039190649986267,0.5037017464637756,0.5034847259521484,0.5032680034637451,0.5030515193939209,0.5028353333473206,0.5026193857192993,0.502403736114502,0.5021883845329285,0.5019733309745789,0.5017585158348083,0.5015439987182617,0.501329779624939,0.5011157989501953,0.5009020566940308,0.5006886124610901,0.5004755258560181,0.5002626180648804,0.5000500082969666,0.49983763694763184,0.4996255338191986,0.49941375851631165,0.4992022216320038,0.4989909529685974,0.49877995252609253,0.4985692501068115,0.49835875630378723,0.4981485903263092,0.4979386329650879,0.49772900342941284,0.4975195825099945,0.49731045961380005,0.4971015751361847,0.49689292907714844,0.49668464064598083,0.49647650122642517,0.49626871943473816,0.4960611164569855,0.49585381150245667,0.49564680457115173,0.4954400062561035,0.4952334463596344,0.49502718448638916,0.494821161031723,0.49461546540260315,0.4944099485874176,0.49420469999313354,0.493999719619751,0.4937949776649475,0.49359050393104553,0.49338629841804504,0.49318230152130127,0.492978572845459,0.4927751421928406,0.4925719201564789,0.4923689663410187,0.4921662211418152,0.49196377396583557,0.49176153540611267,0.49155959486961365,0.49135786294937134,0.4911564290523529,0.4909552037715912,0.49075421690940857,0.49055349826812744,0.490352988243103,0.4901527762413025,0.48995277285575867,0.4897530674934387,0.4895535707473755,0.48935434222221375,0.48915529251098633,0.4889565408229828,0.4887579679489136,0.48855969309806824,0.4883616864681244,0.48816385865211487,0.48796629905700684,0.4877689778804779,0.4875718951225281,0.48737502098083496,0.4871784448623657,0.4869820773601532,0.4867859482765198,0.48659005761146545,0.48639434576034546,0.48619893193244934,0.4860037863254547,0.485808789730072,0.4856140613555908,0.4854196012020111,0.4852253496646881,0.4850313365459442,0.4848375618457794,0.48464399576187134,0.48445066809654236,0.4842575788497925,0.4840646982192993,0.48387208580970764,0.4836796522140503,0.4834875166416168,0.4832955300807953,0.48310381174087524,0.4829123616218567,0.48272112011909485,0.4825300872325897,0.4823392629623413,0.482148677110672,0.4819583296775818,0.4817682206630707,0.4815782606601715,0.4813886284828186,0.48119914531707764,0.48100990056991577,0.480820894241333,0.48063212633132935,0.4804435670375824,0.48025524616241455,0.48006710410118103,0.4798792004585266,0.4796915650367737,0.4795040488243103,0.4793168306350708,0.479129821062088,0.47894299030303955,0.4787563979625702,0.4785700738430023,0.4783838987350464,0.47819796204566956,0.47801223397254944,0.4778267443180084,0.4776414632797241,0.4774564504623413,0.47727155685424805,0.4770869314670563,0.4769025444984436,0.47671830654144287,0.47653430700302124,0.4763505160808563,0.4761669933795929,0.475983589887619,0.47580042481422424,0.47561752796173096,0.4754347503185272,0.475252240896225,0.47506996989250183,0.4748878479003906,0.4747059643268585,0.47452428936958313,0.47434285283088684,0.4741615951061249,0.47398054599761963,0.4737996757030487,0.4736190438270569,0.4734386205673218,0.473258376121521,0.4730783998966217,0.47289854288101196,0.4727189242839813,0.472539484500885,0.4723603129386902,0.4721813201904297,0.4720025062561035,0.47182396054267883,0.4716455638408661,0.47146737575531006,0.47128939628601074,0.47111156582832336,0.4709340035915375,0.4707566201686859,0.4705794155597687,0.47040244936943054,0.4702256917953491,0.47004908323287964,0.46987268328666687,0.4696965217590332,0.46952053904533386,0.46934473514556885,0.46916916966438293,0.46899375319480896,0.4688185453414917,0.46864354610443115,0.4684687852859497,0.4682941436767578,0.46811971068382263,0.46794548630714417,0.4677715003490448,0.467597633600235,0.4674240052700043,0.4672505557537079,0.4670772850513458,0.46690425276756287,0.46673139929771423,0.46655869483947754,0.46638619899749756,0.4662138819694519,0.46604180335998535,0.4658699035644531,0.46569815278053284,0.46552667021751404,0.4653552770614624,0.46518415212631226,0.46501317620277405,0.46484237909317017,0.4646717607975006,0.46450138092041016,0.46433117985725403,0.4641611576080322,0.46399134397506714,0.4638216495513916,0.46365219354629517,0.46348291635513306,0.4633138179779053,0.4631448984146118,0.4629761874675751,0.4628075957298279,0.46263930201530457,0.462471067905426,0.462303102016449,0.4621352553367615,0.4619676470756531,0.4618001878261566,0.46163293719291687,0.46146589517593384,0.46129894256591797,0.4611322581768036,0.46096572279930115,0.46079936623573303,0.46063315868377686,0.4604671895503998,0.46030133962631226,0.46013569831848145,0.45997023582458496,0.4598049521446228,0.4596398174762726,0.45947492122650146,0.4593102037906647,0.4591456353664398,0.4589812159538269,0.4588170051574707,0.45865294337272644,0.4584890902042389,0.45832541584968567,0.4581618309020996,0.45799851417541504,0.45783531665802,0.4576723575592041,0.45750951766967773,0.4573468863964081,0.45718440413475037,0.457022100687027,0.4568599760532379,0.45669806003570557,0.45653626322746277,0.4563746452331543,0.45621323585510254,0.45605191588401794,0.45589086413383484,0.4557299315929413,0.45556914806365967,0.4554085433483124,0.4552481472492218,0.45508790016174316,0.45492783188819885,0.4547679126262665,0.45460817217826843,0.4544486105442047,0.45428919792175293,0.4541299641132355,0.45397090911865234,0.45381200313568115,0.4536532163619995,0.45349469780921936,0.45333626866340637,0.4531780779361725,0.45301997661590576,0.45286208391189575,0.4527043104171753,0.45254671573638916,0.45238929986953735,0.45223209261894226,0.4520750045776367,0.4519180655479431,0.4517613351345062,0.4516046941280365,0.4514482915401459,0.4512920081615448,0.45113590359687805,0.45097997784614563,0.45082417130470276,0.4506685733795166,0.45051309466362,0.4503578245639801,0.4502026438713074,0.45004767179489136,0.44989287853240967,0.44973820447921753,0.4495837092399597,0.44942936301231384,0.4492751657962799,0.4491211771965027,0.4489672780036926,0.4488135874271393,0.4486600160598755,0.448506623506546,0.4483534097671509,0.4482003450393677,0.448047399520874,0.4478946328163147,0.4477420151233673,0.44758954644203186,0.4474372863769531,0.44728511571884155,0.4471331536769867,0.4469813108444214,0.4468296468257904,0.44667813181877136,0.44652676582336426,0.4463755488395691,0.44622448086738586,0.4460735619068146,0.4459228217601776,0.4457722008228302,0.4456217288970947,0.44547146558761597,0.44532129168510437,0.4451713263988495,0.44502145051956177,0.44487178325653076,0.4447222352027893,0.4445728659629822,0.4444235861301422,0.4442744851112366,0.44412556290626526,0.4439767599105835,0.44382810592651367,0.44367966055870056,0.4435313045978546,0.4433830976486206,0.4432350993156433,0.4430871903896332,0.4429394006729126,0.44279181957244873,0.4426443576812744,0.4424970746040344,0.442349910736084,0.4422028660774231,0.4420560300350189,0.4419093132019043,0.4417627453804016,0.4416162669658661,0.4414699971675873,0.441323846578598,0.4411778748035431,0.4410320520401001,0.44088631868362427,0.44074079394340515,0.4405953586101532,0.44045010209083557,0.4403049349784851,0.44016000628471375,0.44001513719558716,0.4398704171180725,0.4397258460521698,0.4395814836025238,0.4394371807575226,0.4392930865287781,0.43914908170700073,0.4390052556991577,0.43886151909828186,0.4387179911136627,0.43857452273368835,0.4384312629699707,0.438288152217865,0.43814510107040405,0.43800225853919983,0.43785950541496277,0.43771693110466003,0.43757450580596924,0.4374321699142456,0.4372900128364563,0.43714800477027893,0.4370060861110687,0.43686434626579285,0.4367227554321289,0.4365812838077545,0.43643996119499207,0.4362986981868744,0.4361576437950134,0.4360167384147644,0.43587595224380493,0.4357353150844574,0.4355947971343994,0.4354543685913086,0.4353141486644745,0.43517404794692993,0.4350340664386749,0.43489423394203186,0.43475449085235596,0.4346149265766144,0.43447551131248474,0.43433621525764465,0.43419700860977173,0.43405798077583313,0.43391910195350647,0.43378034234046936,0.4336416721343994,0.4335031807422638,0.4333648085594177,0.4332265853881836,0.4330884516239166,0.432950496673584,0.4328126609325409,0.43267491459846497,0.43253737688064575,0.4323999285697937,0.4322625994682312,0.43212541937828064,0.43198835849761963,0.43185144662857056,0.43171462416648865,0.43157798051834106,0.43144142627716064,0.4313049912452698,0.4311687648296356,0.43103259801864624,0.4308966100215912,0.4307607114315033,0.43062493205070496,0.43048927187919617,0.4303537607192993,0.4302184283733368,0.43008318543434143,0.4299480617046356,0.42981305718421936,0.42967817187309265,0.4295434355735779,0.42940881848335266,0.4292742908000946,0.4291399419307709,0.4290057122707367,0.42887163162231445,0.4287376403808594,0.42860376834869385,0.42847004532814026,0.4283364713191986,0.42820295691490173,0.4280695617198944,0.4279363751411438,0.42780324816703796,0.42767027020454407,0.4275374114513397,0.4274046719074249,0.4272720515727997,0.427139550447464,0.42700716853141785,0.42687493562698364,0.4267428517341614,0.4266108274459839,0.42647895216941833,0.42634719610214233,0.42621558904647827,0.426084041595459,0.425952672958374,0.4258213937282562,0.42569026350975037,0.42555922269821167,0.4254283010959625,0.42529749870300293,0.42516687512397766,0.42503634095191956,0.4249058961868286,0.4247756004333496,0.42464542388916016,0.42451536655426025,0.4243853986263275,0.4242555797100067,0.42412590980529785,0.42399629950523376,0.42386680841445923,0.42373746633529663,0.4236082434654236,0.4234791100025177,0.42335012555122375,0.42322129011154175,0.4230925142765045,0.42296382784843445,0.4228353202342987,0.4227069318294525,0.4225786626338959,0.422450453042984,0.42232242226600647,0.4221944510936737,0.4220666289329529,0.4219389259815216,0.4218113422393799,0.4216838479042053,0.4215564727783203,0.42142924666404724,0.42130210995674133,0.42117512226104736,0.42104819416999817,0.4209214150905609,0.4207947552204132,0.42066818475723267,0.4205417335033417,0.4204154312610626,0.42028918862342834,0.420163094997406,0.42003709077835083,0.4199112355709076,0.41978543996810913,0.419659823179245,0.41953426599502563,0.4194088280200958,0.41928356885910034,0.41915830969810486,0.4190332293510437,0.4189082682132721,0.41878342628479004,0.41865864396095276,0.4185340404510498,0.41840946674346924,0.4182850420475006,0.41816073656082153,0.4180365800857544,0.41791245341300964,0.4177885055541992,0.41766464710235596,0.41754084825515747,0.4174172282218933,0.4172936975955963,0.41717028617858887,0.4170469343662262,0.41692376136779785,0.4168006479740143,0.41667765378952026,0.4165547490119934,0.4164319932460785,0.41630932688713074,0.4161868095397949,0.4160643219947815,0.4159420132637024,0.41581976413726807,0.4156976342201233,0.41557565331459045,0.4154537320137024,0.41533195972442627,0.41521021723747253,0.4150886535644531,0.4149671494960785,0.4148457646369934,0.41472452878952026,0.4146033525466919,0.4144822955131531,0.4143613576889038,0.4142405092716217,0.41411978006362915,0.41399914026260376,0.41387858986854553,0.41375818848609924,0.41363784670829773,0.41351768374443054,0.41339755058288574,0.4132775664329529,0.4131576418876648,0.41303786635398865,0.4129181504249573,0.41279858350753784,0.41267910599708557,0.41255971789360046,0.4124404489994049,0.4123212695121765,0.41220223903656006,0.412083238363266,0.41196441650390625,0.4118455946445465,0.4117269814014435,0.41160839796066284,0.41148996353149414,0.4113716185092926,0.4112533628940582,0.4111352264881134,0.41101717948913574,0.41089922189712524,0.4107813835144043,0.4106636345386505,0.41054603457450867,0.4104284644126892,0.4103110432624817,0.41019371151924133,0.41007646918296814,0.4099593460559845,0.409842312335968,0.4097253978252411,0.40960851311683655,0.4094918370246887,0.4093751609325409,0.409258633852005,0.4091421961784363,0.4090258777141571,0.4089096188545227,0.40879350900650024,0.40867748856544495,0.4085615277290344,0.40844565629959106,0.40832990407943726,0.4082143008708954,0.4080987274646759,0.40798327326774597,0.407867968082428,0.4077526926994324,0.4076375365257263,0.4075224697589874,0.4074075222015381,0.4072926640510559,0.4071778953075409,0.40706321597099304,0.40694868564605713,0.4068341553211212,0.40671980381011963,0.40660548210144043,0.40649133920669556,0.40637722611427307,0.40626323223114014,0.40614935755729675,0.40603554248809814,0.4059218466281891,0.4058082401752472,0.40569472312927246,0.4055812954902649,0.4054679870605469,0.40535473823547363,0.40524160861968994,0.405128538608551,0.40501561760902405,0.40490278601646423,0.4047899842262268,0.4046773314476013,0.4045647978782654,0.40445226430892944,0.40433990955352783,0.404227614402771,0.4041154384613037,0.4040033221244812,0.40389132499694824,0.40377941727638245,0.4036675989627838,0.40355584025382996,0.40344420075416565,0.4033326804637909,0.4032212197780609,0.4031098484992981,0.40299856662750244,0.4028874337673187,0.4027763307094574,0.4026653468608856,0.4025544226169586,0.40244364738464355,0.4023329019546509,0.40222227573394775,0.4021117687225342,0.4020013213157654,0.40189099311828613,0.4017806947231293,0.40167054533958435,0.4015604853630066,0.4014504849910736,0.4013405740261078,0.4012307822704315,0.40112102031707764,0.4010114371776581,0.4009018838405609,0.4007924199104309,0.40068307518959045,0.4005737900733948,0.40046462416648865,0.4003555476665497,0.4002465307712555,0.40013760328292847,0.400028795003891,0.3999200463294983,0.39981141686439514,0.3997028172016144,0.39959436655044556,0.3994859755039215,0.3993777334690094,0.3992694914340973,0.3991613984107971,0.39905333518981934,0.3989453911781311,0.3988375663757324,0.39872977137565613,0.3986221253871918,0.3985145390033722,0.3984070122241974,0.39829957485198975,0.39819225668907166,0.39808499813079834,0.3979778289794922,0.3978707790374756,0.39776381850242615,0.3976568877696991,0.3975500762462616,0.39744335412979126,0.3973367214202881,0.3972301483154297,0.39712369441986084,0.39701730012893677,0.39691102504730225,0.3968047797679901,0.39669865369796753,0.3965926170349121,0.39648666977882385,0.39638078212738037,0.39627498388290405,0.3961692750453949,0.3960636854171753,0.39595815539360046,0.3958527147769928,0.3957473337650299,0.39564207196235657,0.3955368399620056,0.3954317271709442,0.39532670378685,0.3952217698097229,0.3951168954372406,0.3950120806694031,0.3949074149131775,0.3948028087615967,0.39469826221466064,0.39459383487701416,0.39448943734169006,0.3943851590156555,0.3942809998989105,0.3941768705844879,0.39407283067703247,0.3939688503742218,0.39386501908302307,0.39376121759414673,0.39365753531455994,0.39355388283729553,0.3934503197669983,0.3933468759059906,0.3932434916496277,0.39314019680023193,0.39303699135780334,0.39293384552001953,0.39283081889152527,0.3927278220653534,0.3926249146461487,0.3925221562385559,0.39241939783096313,0.3923167586326599,0.39221417903900146,0.3921116888523102,0.39200925827026367,0.3919069766998291,0.39180469512939453,0.3917025327682495,0.39160045981407166,0.3914984464645386,0.39139652252197266,0.3912946581840515,0.39119288325309753,0.3910911977291107,0.3909895718097687,0.3908880650997162,0.3907865881919861,0.39068523049354553,0.39058393239974976,0.39048269391059875,0.3903816044330597,0.39028051495552063,0.3901795446872711,0.3900786340236664,0.3899778425693512,0.389877051115036,0.38977640867233276,0.3896757960319519,0.3895753026008606,0.38947486877441406,0.3893744945526123,0.3892742097377777,0.3891740143299103,0.38907390832901,0.3889738619327545,0.3888739049434662,0.38877397775650024,0.38867416977882385,0.3885744512081146,0.38847479224205017,0.3883752226829529,0.38827571272850037,0.3881762623786926,0.38807690143585205,0.38797762989997864,0.38787841796875,0.38777926564216614,0.3876802325248718,0.3875812590122223,0.3874823749065399,0.3873835504055023,0.3872847855091095,0.38718611001968384,0.38708749413490295,0.3869889974594116,0.3868905305862427,0.3867921829223633,0.3866938650608063,0.38659563660621643,0.38649749755859375,0.38639941811561584,0.3863014280796051,0.38620349764823914,0.38610565662384033,0.3860078752040863,0.38591015338897705,0.38581255078315735,0.3857150077819824,0.38561752438545227,0.3855201303958893,0.3854227662086487,0.38532555103302,0.38522836565971375,0.38513123989105225,0.3850342035293579,0.38493722677230835,0.38484033942222595,0.3847435414791107,0.38464680314064026,0.3845500946044922,0.38445350527763367,0.3843569755554199,0.38426053524017334,0.38416412472724915,0.3840678632259369,0.383971631526947,0.38387542963027954,0.383779376745224,0.38368335366249084,0.38358739018440247,0.38349148631095886,0.3833957314491272,0.38329997658729553,0.3832043409347534,0.3831087350845337,0.3830132484436035,0.38291776180267334,0.3828223943710327,0.38272708654403687,0.3826318383216858,0.38253670930862427,0.38244161009788513,0.38234660029411316,0.38225165009498596,0.3821567893028259,0.3820619583129883,0.3819672465324402,0.3818725347518921,0.38177797198295593,0.38168343901634216,0.38158899545669556,0.38149458169937134,0.38140028715133667,0.3813060522079468,0.3812118470668793,0.3811177611351013,0.38102373480796814,0.38092976808547974,0.3808358609676361,0.38074201345443726,0.38064828515052795,0.38055458664894104,0.3804609775543213,0.3803674280643463,0.3802739381790161,0.3801805377006531,0.3800871670246124,0.37999391555786133,0.3799006938934326,0.37980756163597107,0.3797144889831543,0.3796215057373047,0.37952855229377747,0.3794356882572174,0.3793429136276245,0.379250168800354,0.37915751338005066,0.3790649175643921,0.3789724111557007,0.37887993454933167,0.3787875473499298,0.37869521975517273,0.3786029815673828,0.37851080298423767,0.3784186840057373,0.3783266246318817,0.3782346248626709,0.37814271450042725,0.378050833940506,0.37795907258987427,0.37786737084388733,0.37777572870254517,0.3776841163635254,0.37759262323379517,0.37750115990638733,0.37740978598594666,0.37731844186782837,0.37722718715667725,0.3771360218524933,0.3770448863506317,0.3769538402557373,0.3768628239631653,0.3767719268798828,0.3766810894012451,0.3765902817249298,0.37649956345558167,0.3764089047908783,0.3763183057308197,0.37622779607772827,0.37613728642463684,0.37604692578315735,0.37595659494400024,0.3758663237094879,0.37577611207962036,0.37568598985671997,0.37559592723846436,0.37550589442253113,0.37541595101356506,0.3753260672092438,0.37523627281188965,0.3751465082168579,0.37505683302879333,0.37496718764305115,0.3748776614665985,0.3747881352901459,0.3746987283229828,0.3746093511581421,0.37452006340026855,0.3744308054447174,0.3743416666984558,0.3742525279521942,0.37416350841522217,0.3740744888782501,0.3739855885505676,0.3738967180252075,0.3738079369068146,0.3737192451953888,0.373630553483963,0.373541921377182,0.37345340847969055,0.3733649253845215,0.3732765018939972,0.37318816781044006,0.3730998635292053,0.37301164865493774,0.37292349338531494,0.3728353679180145,0.3727473318576813,0.3726593852043152,0.3725714683532715,0.37248361110687256,0.3723958134651184,0.37230807542800903,0.3722204267978668,0.372132807970047,0.37204527854919434,0.37195780873298645,0.37187036871910095,0.3717830181121826,0.37169572710990906,0.3716084957122803,0.37152132391929626,0.37143421173095703,0.3713471591472626,0.3712601661682129,0.371173232793808,0.37108638882637024,0.3709995746612549,0.3709128201007843,0.3708261549472809,0.37073951959609985,0.3706529438495636,0.3705664575099945,0.3704800307750702,0.3703936040401459,0.3703073263168335,0.3702210485935211,0.3701348304748535,0.3700487017631531,0.3699626326560974,0.3698766231536865,0.3697906732559204,0.3697047531604767,0.3696189224720001,0.36953312158584595,0.36944741010665894,0.3693617582321167,0.36927616596221924,0.36919060349464417,0.36910513043403625,0.3690197169780731,0.3689343333244324,0.3688490390777588,0.36876380443573,0.36867862939834595,0.3685934841632843,0.36850839853286743,0.3684234023094177,0.3683384358882904,0.36825352907180786,0.3681687116622925,0.3680839538574219,0.36799922585487366,0.3679145872592926,0.36782994866371155,0.36774542927742004,0.3676609396934509,0.367576539516449,0.367492139339447,0.3674078583717346,0.3673236072063446,0.36723941564559937,0.3671552836894989,0.3670712113380432,0.3669871985912323,0.3669032156467438,0.3668193221092224,0.36673545837402344,0.3666516840457916,0.3665679395198822,0.36648428440093994,0.36640065908432007,0.36631709337234497,0.36623358726501465,0.3661501705646515,0.36606675386428833,0.36598342657089233,0.3659001588821411,0.3658169209957123,0.3657337725162506,0.3656506836414337,0.3655676245689392,0.36548465490341187,0.3654017150402069,0.36531883478164673,0.3652360141277313,0.3651532232761383,0.36507052183151245,0.364987850189209,0.3649052679538727,0.36482274532318115,0.364740252494812,0.36465781927108765,0.36457547545433044,0.36449316143989563,0.3644108772277832,0.36432868242263794,0.36424651741981506,0.36416444182395935,0.36408236622810364,0.3640004098415375,0.3639184534549713,0.3638366162776947,0.3637547791004181,0.36367303133010864,0.3635913133621216,0.3635096848011017,0.3634280562400818,0.36334651708602905,0.3632650375366211,0.3631836175918579,0.3631021976470947,0.3630208969116211,0.36293965578079224,0.3628584146499634,0.3627772629261017,0.3626961410045624,0.36261510848999023,0.3625340759754181,0.3624531626701355,0.3623722791671753,0.3622914254665375,0.36221063137054443,0.36212992668151855,0.36204925179481506,0.36196863651275635,0.3618880808353424,0.36180755496025085,0.36172711849212646,0.36164671182632446,0.36156636476516724,0.3614860773086548,0.3614058196544647,0.36132562160491943,0.3612454831600189,0.3611654043197632,0.3610853850841522,0.36100539565086365,0.36092546582221985,0.3608455955982208,0.36076581478118896,0.3606860339641571,0.36060631275177,0.3605266511440277,0.3604470491409302,0.3603675067424774,0.36028799414634705,0.36020854115486145,0.36012914776802063,0.360049843788147,0.3599705100059509,0.35989129543304443,0.35981208086013794,0.3597329556941986,0.35965389013290405,0.3595748543739319,0.3594958782196045,0.3594169616699219,0.35933807492256165,0.3592592477798462,0.3591804802417755,0.3591017723083496,0.3590231239795685,0.35894447565078735,0.3588659167289734,0.3587874174118042,0.3587089776992798,0.35863056778907776,0.3585521876811981,0.35847389698028564,0.35839563608169556,0.35831743478775024,0.3582392930984497,0.35816121101379395,0.3580831289291382,0.3580051362514496,0.35792720317840576,0.3578492999076843,0.35777145624160767,0.3576936423778534,0.3576159179210663,0.35753822326660156,0.35746055841445923,0.35738298296928406,0.3573054373264313,0.35722795128822327,0.35715049505233765,0.3570731282234192,0.35699576139450073,0.35691848397254944,0.3568412661552429,0.3567640483379364,0.35668691992759705,0.3566098213195801,0.3565327823162079,0.3564557731151581,0.35637885332107544,0.3563019633293152,0.3562251329421997,0.3561483323574066,0.3560715913772583,0.35599491000175476,0.3559182584285736,0.35584166646003723,0.35576513409614563,0.3556886613368988,0.355612188577652,0.3555357754230499,0.35545942187309265,0.35538315773010254,0.3553069233894348,0.3552306890487671,0.3551545739173889,0.35507845878601074,0.35500240325927734,0.3549264073371887,0.3548504412174225,0.354774534702301,0.35469868779182434,0.35462287068367004,0.3545471131801605,0.3544713854789734,0.3543957471847534,0.35432013869285583,0.354244589805603,0.3541690409183502,0.3540935814380646,0.3540181815624237,0.35394278168678284,0.35386747121810913,0.3537921905517578,0.35371696949005127,0.3536417782306671,0.35356664657592773,0.35349157452583313,0.3534165024757385,0.35334154963493347,0.3532665967941284,0.35319170355796814,0.35311686992645264,0.3530420660972595,0.3529672920703888,0.35289260745048523,0.35281795263290405,0.35274335741996765,0.35266876220703125,0.352594256401062,0.35251981019973755,0.3524453639984131,0.3523710072040558,0.3522966802120209,0.35222238302230835,0.352148175239563,0.3520739674568176,0.35199984908103943,0.3519257605075836,0.3518517315387726,0.35177770256996155,0.3517037630081177,0.3516298532485962,0.3515560030937195,0.35148218274116516,0.3514084219932556,0.35133472084999084,0.3512610197067261,0.3511873781681061,0.35111382603645325,0.3510403037071228,0.35096681118011475,0.35089337825775146,0.35081997513771057,0.35074663162231445,0.3506733179092407,0.35060006380081177,0.3505268394947052,0.3504536747932434,0.350380539894104,0.35030752420425415,0.3502344787120819,0.35016149282455444,0.35008853673934937,0.35001567006111145,0.34994280338287354,0.3498700261116028,0.3497972786426544,0.34972456097602844,0.34965187311172485,0.34957924485206604,0.3495067059993744,0.34943416714668274,0.34936168789863586,0.3492892384529114,0.34921684861183167,0.34914451837539673,0.3490722179412842,0.348999947309494,0.34892773628234863,0.34885555505752563,0.3487834334373474,0.3487113416194916,0.3486393392086029,0.34856733679771423,0.34849539399147034,0.3484235107898712,0.3483516573905945,0.34827983379364014,0.3482080399990082,0.3481363356113434,0.348064661026001,0.34799301624298096,0.3479214012622833,0.34784987568855286,0.3477783799171448,0.3477069139480591,0.34763553738594055,0.34756413102149963,0.3474928140640259,0.3474215269088745,0.3473502993583679,0.3472791016101837,0.3472079634666443,0.34713682532310486,0.347065806388855,0.3469947576522827,0.3469237685203552,0.3468528389930725,0.34678196907043457,0.34671109914779663,0.34664031863212585,0.34656956791877747,0.34649884700775146,0.34642818570137024,0.3463575541973114,0.34628698229789734,0.34621644020080566,0.346145898103714,0.3460754454135895,0.34600505232810974,0.3459346890449524,0.34586432576179504,0.34579405188560486,0.34572380781173706,0.34565362334251404,0.3455834686756134,0.34551334381103516,0.3454432785511017,0.3453732430934906,0.3453032672405243,0.34523332118988037,0.34516340494155884,0.3450935482978821,0.3450237512588501,0.3449539840221405,0.3448842465877533,0.34481456875801086,0.34474489092826843,0.34467533230781555,0.3446057438850403,0.3445362150669098,0.3444667458534241,0.34439730644226074,0.3443278968334198,0.34425854682922363,0.34418925642967224,0.34411999583244324,0.34405073523521423,0.3439815640449524,0.34391242265701294,0.3438433110713959,0.3437742590904236,0.3437052369117737,0.34363627433776855,0.3435673415660858,0.34349843859672546,0.3434295952320099,0.3433607816696167,0.3432919979095459,0.3432232737541199,0.3431546092033386,0.3430859446525574,0.3430173397064209,0.3429487645626068,0.3428802490234375,0.3428117632865906,0.3427433371543884,0.3426749110221863,0.3426066040992737,0.3425382673740387,0.3424699604511261,0.34240174293518066,0.3423335552215576,0.34226539731025696,0.3421972692012787,0.3421292006969452,0.34206119179725647,0.34199318289756775,0.3419252336025238,0.34185734391212463,0.34178945422172546,0.3417215943336487,0.34165382385253906,0.34158608317375183,0.341518372297287,0.3414507210254669,0.34138309955596924,0.34131550788879395,0.34124794602394104,0.3411804437637329,0.34111297130584717,0.3410455584526062,0.34097814559936523,0.34091079235076904,0.34084346890449524,0.3407762050628662,0.34070897102355957,0.3406418263912201,0.3405746519565582,0.3405075669288635,0.3404404819011688,0.3403734564781189,0.34030646085739136,0.3402394950389862,0.34017255902290344,0.34010574221611023,0.34003889560699463,0.3399720788002014,0.339905321598053,0.3398386240005493,0.33977195620536804,0.33970528841018677,0.33963873982429504,0.33957216143608093,0.3395056426525116,0.33943915367126465,0.3393727242946625,0.3393063247203827,0.3392399549484253,0.3391736149787903,0.33910736441612244,0.3390411138534546,0.33897489309310913,0.33890870213508606,0.33884260058403015,0.33877649903297424,0.3387104570865631,0.33864447474479675,0.338578462600708,0.3385125398635864,0.33844661712646484,0.3383807837963104,0.338314950466156,0.33824917674064636,0.3381834328174591,0.33811771869659424,0.33805203437805176,0.33798640966415405,0.33792081475257874,0.3378552794456482,0.33778974413871765,0.3377242982387543,0.3376588523387909,0.3375934660434723,0.3375280797481537,0.33746275305747986,0.3373974561691284,0.33733221888542175,0.3372670114040375,0.3372018039226532,0.33713671565055847,0.33707159757614136,0.33700650930404663,0.3369414806365967,0.3368765413761139,0.3368116021156311,0.3367466628551483,0.3366818130016327,0.33661696314811707,0.3365521728992462,0.33648741245269775,0.33642271161079407,0.3363580107688904,0.3362933397293091,0.33622875809669495,0.3361641764640808,0.33609962463378906,0.3360351324081421,0.3359706401824951,0.3359062373638153,0.3358418345451355,0.33577752113342285,0.3357132077217102,0.33564889430999756,0.3355846703052521,0.3355204463005066,0.33545631170272827,0.33539217710494995,0.335328072309494,0.33526402711868286,0.3352000117301941,0.3351360261440277,0.3350720703601837,0.3350081741809845,0.33494430780410767,0.33488044142723083,0.3348166346549988,0.3347529172897339,0.3346891701221466,0.3346254527568817,0.3345617949962616,0.33449822664260864,0.3344346284866333,0.33437108993530273,0.33430758118629456,0.33424410223960876,0.33418065309524536,0.33411726355552673,0.3340538740158081,0.33399057388305664,0.3339272737503052,0.3338640332221985,0.3338008224964142,0.3337376117706299,0.33367446064949036,0.3336113393306732,0.33354827761650085,0.3334852159023285,0.3334222137928009,0.3333592414855957,0.3332963287830353,0.33323341608047485,0.3331705331802368,0.33310773968696594,0.33304494619369507,0.3329821825027466,0.3329194486141205,0.33285677433013916,0.3327941298484802,0.3327315151691437,0.3326689302921295,0.33260640501976013,0.33254387974739075,0.33248138427734375,0.33241894841194153,0.3323565721511841,0.33229419589042664,0.3322318494319916,0.3321695625782013,0.3321073055267334,0.3320450782775879,0.3319828510284424,0.3319207429885864,0.3318586051464081,0.3317964971065521,0.33173444867134094,0.33167243003845215,0.33161044120788574,0.3315485119819641,0.3314865827560425,0.3314247131347656,0.33136284351348877,0.3313010334968567,0.3312392830848694,0.3311775326728821,0.33111581206321716,0.331054151058197,0.33099251985549927,0.3309309184551239,0.33086931705474854,0.33080777525901794,0.33074629306793213,0.3306848406791687,0.3306233882904053,0.3305619955062866,0.33050063252449036,0.3304392993450165,0.330377995967865,0.3303167521953583,0.33025553822517395,0.3301943242549896,0.3301331698894501,0.3300720453262329,0.33001095056533813,0.32994991540908813,0.32988885045051575,0.3298278748989105,0.3297669291496277,0.32970598340034485,0.3296450972557068,0.3295842409133911,0.3295234143733978,0.3294626474380493,0.3294019103050232,0.32934117317199707,0.3292804956436157,0.3292198181152344,0.3291592001914978,0.3290986120700836,0.3290380835533142,0.3289775550365448,0.32891708612442017,0.32885661721229553,0.3287961781024933,0.3287357985973358,0.3286754786968231,0.32861512899398804,0.3285548686981201,0.3284946084022522,0.32843437790870667,0.3283742070198059,0.32831403613090515,0.32825392484664917,0.3281938135623932,0.328133761882782,0.32807374000549316,0.3280137777328491,0.3279538154602051,0.3278938829898834,0.32783398032188416,0.32777413725852966,0.32771429419517517,0.32765454053878784,0.3275947868824005,0.3275350332260132,0.32747533917427063,0.32741567492485046,0.3273560702800751,0.3272964358329773,0.3272368907928467,0.32717734575271606,0.3271178603172302,0.3270584046840668,0.3269989788532257,0.32693955302238464,0.32688018679618835,0.32682088017463684,0.32676154375076294,0.3267022967338562,0.32664304971694946,0.3265838325023651,0.32652467489242554,0.32646551728248596,0.3264063894748688,0.32634732127189636,0.32628828287124634,0.3262292742729187,0.32617029547691345,0.3261113166809082,0.3260524272918701,0.32599350810050964,0.32593467831611633,0.325875848531723,0.3258170783519745,0.32575830817222595,0.3256995677947998,0.32564085721969604,0.32558220624923706,0.32552358508110046,0.32546496391296387,0.32540640234947205,0.3253478705883026,0.3252893388271332,0.3252308964729309,0.32517242431640625,0.32511404156684875,0.32505565881729126,0.32499730587005615,0.32493898272514343,0.3248806893825531,0.32482245564460754,0.3247641921043396,0.3247060179710388,0.3246478736400604,0.32458972930908203,0.3245316445827484,0.3244735598564148,0.32441553473472595,0.3243575096130371,0.32429954409599304,0.32424160838127136,0.32418370246887207,0.3241257965564728,0.32406798005104065,0.3240101635456085,0.3239523768424988,0.3238946199417114,0.32383689284324646,0.3237791955471039,0.3237215280532837,0.3236638903617859,0.32360631227493286,0.32354870438575745,0.3234911561012268,0.32343366742134094,0.3233761787414551,0.3233187198638916,0.3232613205909729,0.3232039213180542,0.3231465816497803,0.32308924198150635,0.3230319619178772,0.32297468185424805,0.32291746139526367,0.3228602409362793,0.3228030502796173,0.3227459192276001,0.3226888179779053,0.32263171672821045,0.3225746750831604,0.32251766324043274,0.3224606513977051,0.3224036991596222,0.3223467767238617,0.3222898542881012,0.3222329914569855,0.32217615842819214,0.3221193253993988,0.32206255197525024,0.3220058083534241,0.3219490945339203,0.3218924105167389,0.3218357264995575,0.3217790722846985,0.32172250747680664,0.3216659128665924,0.32160937786102295,0.3215528726577759,0.3214963972568512,0.3214399218559265,0.3213835060596466,0.3213271200656891,0.32127073407173157,0.3212144076824188,0.32115811109542847,0.3211018145084381,0.3210456073284149,0.32098937034606934,0.32093319296836853,0.3208770453929901,0.3208208978176117,0.32076478004455566,0.3207087218761444,0.32065269351005554,0.32059669494628906,0.3205406963825226,0.3204847276210785,0.3204288184642792,0.32037293910980225,0.3203170597553253,0.3202612102031708,0.320205420255661,0.32014966011047363,0.32009389996528625,0.32003819942474365,0.31998249888420105,0.3199268579483032,0.319871187210083,0.31981560587882996,0.3197600543498993,0.31970450282096863,0.31964898109436035,0.31959348917007446,0.31953802704811096,0.31948259472846985,0.3194271922111511,0.3193718492984772,0.3193165063858032,0.31926119327545166,0.3192059099674225,0.3191506564617157,0.3190954029560089,0.3190402090549469,0.3189850449562073,0.31892991065979004,0.3188748061656952,0.31881970167160034,0.31876465678215027,0.3187096118927002,0.3186546266078949,0.318599671125412,0.31854474544525146,0.31848978996276855,0.3184349238872528,0.31838005781173706,0.3183252513408661,0.3182704448699951,0.31821566820144653,0.31816092133522034,0.3181062340736389,0.3180515170097351,0.3179968595504761,0.3179422616958618,0.31788763403892517,0.3178330659866333,0.31777849793434143,0.31772398948669434,0.31766951084136963,0.3176150321960449,0.317560613155365,0.31750619411468506,0.3174518346786499,0.31739747524261475,0.31734317541122437,0.317288875579834,0.317234605550766,0.317180335521698,0.31712615489959717,0.31707197427749634,0.3170177936553955,0.31696367263793945,0.3169095814228058,0.3168555200099945,0.3168014585971832,0.3167474567890167,0.3166934549808502,0.3166395127773285,0.31658557057380676,0.3165316581726074,0.31647777557373047,0.3164239227771759,0.3163700997829437,0.31631630659103394,0.31626254320144653,0.3162088096141815,0.3161550760269165,0.31610140204429626,0.316047728061676,0.31599411368370056,0.3159405291080475,0.315886914730072,0.3158333897590637,0.3157798647880554,0.3157263696193695,0.3156728744506836,0.31561943888664246,0.3155660331249237,0.31551265716552734,0.315459281206131,0.3154059648513794,0.3153526484966278,0.3152993619441986,0.3152461349964142,0.31519290804862976,0.3151397109031677,0.3150865435600281,0.3150333762168884,0.31498026847839355,0.3149271607398987,0.3148741126060486,0.3148210942745209,0.31476807594299316,0.31471508741378784,0.3146621286869049,0.31460919976234436,0.3145563006401062,0.31450340151786804,0.31445056200027466,0.3143977224826813,0.31434494256973267,0.31429219245910645,0.3142394423484802,0.3141867220401764,0.31413403153419495,0.3140813708305359,0.3140287399291992,0.31397610902786255,0.31392353773117065,0.31387096643447876,0.31381845474243164,0.31376591324806213,0.3137134611606598,0.31366100907325745,0.3136085867881775,0.3135561943054199,0.31350380182266235,0.31345146894454956,0.31339913606643677,0.31334686279296875,0.31329455971717834,0.3132423162460327,0.3131901025772095,0.3131379187107086,0.31308576464653015,0.3130336105823517,0.312981516122818,0.3129294216632843,0.312877357006073,0.3128253221511841,0.31277331709861755,0.3127213418483734,0.3126693665981293,0.3126174509525299,0.31256556510925293,0.31251364946365356,0.31246182322502136,0.31240999698638916,0.31235820055007935,0.31230640411376953,0.3122546374797821,0.31220296025276184,0.3121512234210968,0.3120995759963989,0.31204789876937866,0.31199631094932556,0.3119446933269501,0.31189313530921936,0.31184157729148865,0.3117900788784027,0.3117385804653168,0.31168708205223083,0.3116356432437897,0.3115842342376709,0.3115328550338745,0.3114814758300781,0.3114301562309265,0.3113788366317749,0.3113275468349457,0.31127628684043884,0.3112250566482544,0.31117379665374756,0.3111226260662079,0.3110714554786682,0.3110203444957733,0.3109692335128784,0.3109181225299835,0.310867041349411,0.3108160197734833,0.31076499819755554,0.3107140064239502,0.3106630742549896,0.31061214208602905,0.3105612099170685,0.3105103373527527,0.3104594647884369,0.3104086220264435,0.31035780906677246,0.31030702590942383,0.3102562725543976,0.31020551919937134,0.3101547956466675,0.3101041316986084,0.3100534677505493,0.31000280380249023,0.3099521994590759,0.309901624917984,0.3098510503768921,0.30980050563812256,0.3097499907016754,0.30969953536987305,0.3096490502357483,0.3095985949039459,0.30954819917678833,0.30949780344963074,0.30944743752479553,0.3093971014022827,0.3093467652797699,0.30929648876190186,0.3092462122440338,0.30919596552848816,0.3091457784175873,0.309095561504364,0.30904537439346313,0.30899521708488464,0.3089451193809509,0.3088950216770172,0.3088449537754059,0.30879488587379456,0.308744877576828,0.30869486927986145,0.3086448907852173,0.3085949420928955,0.3085450232028961,0.3084951341152191,0.3084452450275421,0.3083953857421875,0.3083455562591553,0.30829572677612305,0.3082459568977356,0.30819621682167053,0.30814647674560547,0.3080967664718628,0.3080470860004425,0.3079974353313446,0.3079477846622467,0.3078981637954712,0.30784857273101807,0.30779901146888733,0.307749480009079,0.30769994854927063,0.30765047669410706,0.3076009750366211,0.3075515329837799,0.3075021207332611,0.3074527382850647,0.3074033260345459,0.3073539733886719,0.3073046803474426,0.307255357503891,0.30720609426498413,0.3071568012237549,0.3071075975894928,0.3070583939552307,0.30700919032096863,0.30696001648902893,0.306910902261734,0.3068617880344391,0.30681267380714417,0.306763619184494,0.30671459436416626,0.3066655695438385,0.30661657452583313,0.30656760931015015,0.30651864409446716,0.30646970868110657,0.30642080307006836,0.30637192726135254,0.3063230812549591,0.30627426505088806,0.306225448846817,0.30617666244506836,0.3061279058456421,0.3060791492462158,0.30603042244911194,0.30598175525665283,0.3059330880641937,0.3058844208717346,0.3058357834815979,0.30578720569610596,0.305738627910614,0.30569007992744446,0.3056415617465973,0.3055930435657501,0.30554452538490295,0.30549609661102295,0.30544766783714294,0.30539923906326294,0.3053508400917053,0.3053024709224701,0.30525413155555725,0.3052058219909668,0.30515748262405396,0.3051092028617859,0.3050609827041626,0.3050127327442169,0.30496451258659363,0.3049163520336151,0.3048681914806366,0.3048200309276581,0.30477190017700195,0.3047238290309906,0.30467575788497925,0.3046277165412903,0.3045796751976013,0.30453169345855713,0.30448368191719055,0.30443572998046875,0.30438780784606934,0.3043398857116699,0.3042919933795929,0.30424413084983826,0.304196298122406,0.30414846539497375,0.3041006624698639,0.3040528893470764,0.30400511622428894,0.30395740270614624,0.30390968918800354,0.3038620054721832,0.3038143515586853,0.3037666976451874,0.30371907353401184,0.3036714792251587,0.30362391471862793,0.30357635021209717,0.3035288155078888,0.3034813106060028,0.3034338057041168,0.3033863604068756,0.3033389151096344,0.3032914996147156,0.30324408411979675,0.3031967282295227,0.30314937233924866,0.303102046251297,0.30305472016334534,0.30300742387771606,0.30296018719673157,0.30291295051574707,0.3028657138347626,0.30281850695610046,0.30277135968208313,0.3027242124080658,0.30267706513404846,0.3026299476623535,0.30258285999298096,0.3025358021259308,0.3024887442588806,0.30244171619415283,0.30239471793174744,0.30234774947166443,0.3023007810115814,0.3022538423538208,0.30220696330070496,0.3021600544452667,0.3021131753921509,0.3020663261413574,0.30201950669288635,0.30197271704673767,0.301925927400589,0.3018791675567627,0.3018324375152588,0.3017857074737549,0.30173900723457336,0.30169233679771423,0.3016456961631775,0.30159905552864075,0.3015524446964264,0.3015058636665344,0.30145931243896484,0.30141276121139526,0.30136623978614807,0.3013197183609009,0.30127325654029846,0.30122679471969604,0.301180362701416,0.301133930683136,0.30108755826950073,0.3010411858558655,0.3009948432445526,0.30094850063323975,0.30090218782424927,0.3008559048175812,0.3008096516132355,0.30076339840888977,0.30071717500686646,0.3006709814071655,0.3006247878074646,0.30057862401008606,0.3005324900150299,0.30048638582229614,0.30044031143188477,0.300394207239151,0.300348162651062,0.3003021478652954,0.3002561330795288,0.3002101480960846,0.3001641631126404,0.30011820793151855,0.3000722825527191,0.30002638697624207,0.2999805212020874,0.29993462562561035,0.29988881945610046,0.2998429834842682,0.2997972071170807,0.2997514009475708,0.2997056543827057,0.2996599078178406,0.29961419105529785,0.2995685040950775,0.2995228171348572,0.2994771897792816,0.29943156242370605,0.2993859350681305,0.2993403375148773,0.2992947995662689,0.29924923181533813,0.29920369386672974,0.2991581857204437,0.2991127073764801,0.29906725883483887,0.29902181029319763,0.2989763617515564,0.29893097281455994,0.2988855838775635,0.2988402247428894,0.29879486560821533,0.29874956607818604,0.29870426654815674,0.29865896701812744,0.2986137270927429,0.2985684871673584,0.29852327704429626,0.29847806692123413,0.2984328866004944,0.298387736082077,0.29834258556365967,0.2982974946498871,0.2982524037361145,0.2982073426246643,0.2981622517108917,0.2981172502040863,0.2980722188949585,0.2980272173881531,0.29798224568367004,0.2979373037815094,0.29789236187934875,0.2978474497795105,0.29780256748199463,0.29775771498680115,0.29771286249160767,0.2976680099964142,0.2976231873035431,0.2975784242153168,0.29753366112709045,0.29748889803886414,0.2974441647529602,0.29739946126937866,0.2973547875881195,0.29731008410453796,0.2972654700279236,0.2972208261489868,0.29717621207237244,0.29713162779808044,0.29708707332611084,0.29704251885414124,0.296997994184494,0.2969534695148468,0.29690900444984436,0.2968645393848419,0.2968200743198395,0.2967756688594818,0.29673123359680176,0.2966868281364441,0.2966424822807312,0.2965981364250183,0.2965537905693054,0.2965094745159149,0.2964651882648468,0.29642096161842346,0.29637670516967773,0.2963324785232544,0.29628825187683105,0.2962440550327301,0.29619988799095154,0.29615575075149536,0.2961116135120392,0.2960675060749054,0.296023428440094,0.2959793508052826,0.2959353029727936,0.29589125514030457,0.29584723711013794,0.2958032488822937,0.29575929045677185,0.29571533203125,0.29567137360572815,0.2956274747848511,0.2955836057662964,0.2955397069454193,0.2954958379268646,0.2954520285129547,0.2954081892967224,0.2953643798828125,0.295320600271225,0.2952768802642822,0.2952331304550171,0.29518941044807434,0.2951456904411316,0.2951020300388336,0.29505836963653564,0.29501473903656006,0.2949710786342621,0.2949275076389313,0.2948839068412781,0.29484033584594727,0.29479679465293884,0.2947532832622528,0.2947097718715668,0.2946662902832031,0.2946228086948395,0.2945793569087982,0.29453593492507935,0.2944925129413605,0.2944491505622864,0.2944057583808899,0.2943623960018158,0.2943190634250641,0.29427576065063477,0.29423245787620544,0.2941891849040985,0.29414594173431396,0.2941026985645294,0.2940594553947449,0.2940162718296051,0.29397308826446533,0.29392993450164795,0.29388678073883057,0.29384365677833557,0.29380056262016296,0.29375746846199036,0.29371440410614014,0.2936713397502899,0.2936283349990845,0.29358533024787903,0.2935423254966736,0.2934993505477905,0.29345640540122986,0.2934134602546692,0.2933705449104309,0.293327659368515,0.2932847738265991,0.2932419180870056,0.2931990623474121,0.293156236410141,0.29311344027519226,0.2930706739425659,0.2930279076099396,0.29298514127731323,0.29294243454933167,0.2928997278213501,0.29285702109336853,0.29281434416770935,0.29277169704437256,0.29272904992103577,0.29268646240234375,0.29264384508132935,0.29260125756263733,0.2925586998462677,0.29251617193222046,0.2924736440181732,0.292431116104126,0.2923886477947235,0.29234617948532104,0.29230374097824097,0.2922613024711609,0.2922188937664032,0.2921764850616455,0.2921341359615326,0.2920917570590973,0.2920494079589844,0.29200711846351624,0.2919647991657257,0.29192250967025757,0.2918802499771118,0.29183802008628845,0.2917957901954651,0.2917535603046417,0.29171136021614075,0.29166918992996216,0.29162704944610596,0.29158490896224976,0.29154279828071594,0.29150068759918213,0.2914586067199707,0.2914165258407593,0.29137447476387024,0.291332483291626,0.2912904620170593,0.29124847054481506,0.2912065088748932,0.2911645472049713,0.29112258553504944,0.29108068346977234,0.29103878140449524,0.29099687933921814,0.2909550368785858,0.2909131944179535,0.29087135195732117,0.29082953929901123,0.2907877564430237,0.2907460033893585,0.29070422053337097,0.2906624674797058,0.2906207740306854,0.29057908058166504,0.29053738713264465,0.29049572348594666,0.29045405983924866,0.29041242599487305,0.2903708219528198,0.290329247713089,0.29028764367103577,0.29024606943130493,0.29020455479621887,0.2901630401611328,0.29012152552604675,0.2900800406932831,0.2900385558605194,0.2899971306324005,0.28995567560195923,0.28991425037384033,0.2898728549480438,0.2898314595222473,0.2897900938987732,0.28974875807762146,0.2897074222564697,0.2896661162376404,0.2896248400211334,0.28958356380462646,0.2895422875881195,0.28950104117393494,0.28945982456207275,0.28941863775253296,0.28937745094299316,0.28933626413345337,0.28929513692855835,0.28925397992134094,0.2892128825187683,0.2891717553138733,0.28913068771362305,0.2890896201133728,0.28904858231544495,0.2890075743198395,0.2889665365219116,0.28892555832862854,0.28888455033302307,0.2888436019420624,0.2888026833534241,0.28876176476478577,0.28872084617614746,0.28867995738983154,0.2886390686035156,0.2885982096195221,0.28855738043785095,0.2885165512561798,0.28847575187683105,0.2884349822998047,0.2883942127227783,0.28835344314575195,0.28831273317337036,0.2882719933986664,0.2882312834262848,0.2881906032562256,0.28814995288848877,0.28810930252075195,0.2880686819553375,0.2880280613899231,0.28798744082450867,0.287946879863739,0.28790631890296936,0.2878657877445221,0.28782525658607483,0.28778472542762756,0.2877442538738251,0.2877037525177002,0.2876633107662201,0.28762286901474,0.2875824272632599,0.28754204511642456,0.28750163316726685,0.2874612808227539,0.2874208986759186,0.287380576133728,0.2873402237892151,0.2872999310493469,0.28725963830947876,0.287219375371933,0.2871791422367096,0.2871388792991638,0.2870986759662628,0.28705844283103943,0.2870182693004608,0.2869780957698822,0.286937952041626,0.28689780831336975,0.2868576943874359,0.2868175804615021,0.2867774963378906,0.2867374122142792,0.2866973578929901,0.28665733337402344,0.28661730885505676,0.2865773141384125,0.2865373194217682,0.2864973545074463,0.2864574193954468,0.2864174544811249,0.28637754917144775,0.28633764386177063,0.2862977683544159,0.28625789284706116,0.2862180471420288,0.28617820143699646,0.2861383855342865,0.28609856963157654,0.28605881333351135,0.2860190272331238,0.2859792709350586,0.2859395444393158,0.285899817943573,0.2858601212501526,0.2858204245567322,0.28578075766563416,0.2857411205768585,0.2857014536857605,0.28566184639930725,0.285622239112854,0.28558266162872314,0.2855430841445923,0.2855035364627838,0.28546398878097534,0.28542447090148926,0.2853849530220032,0.2853454649448395,0.28530600666999817,0.28526654839515686,0.28522709012031555,0.28518766164779663,0.2851482629776001,0.28510886430740356,0.2850694954395294,0.28503015637397766,0.2849908173084259,0.28495147824287415,0.2849121689796448,0.2848728895187378,0.2848335802555084,0.28479433059692383,0.28475508093833923,0.284715861082077,0.2846766412258148,0.284637451171875,0.28459829092025757,0.28455910086631775,0.2845199704170227,0.28448083996772766,0.284441739320755,0.28440263867378235,0.2843635380268097,0.2843244671821594,0.28428542613983154,0.28424638509750366,0.2842073440551758,0.2841683626174927,0.28412938117980957,0.28409039974212646,0.28405144810676575,0.2840125262737274,0.2839736044406891,0.28393468260765076,0.2838957905769348,0.28385692834854126,0.2838180661201477,0.28377923369407654,0.283740371465683,0.2837015688419342,0.2836627960205078,0.2836240231990814,0.28358525037765503,0.283546507358551,0.283507764339447,0.2834690511226654,0.2834303677082062,0.28339168429374695,0.2833530008792877,0.2833143472671509,0.2832757234573364,0.283237099647522,0.2831985056400299,0.28315991163253784,0.2831213176250458,0.2830827534198761,0.2830442190170288,0.2830056846141815,0.282967209815979,0.2829287052154541,0.2828902006149292,0.28285178542137146,0.28281331062316895,0.2827748954296112,0.2827364504337311,0.2826980650424957,0.2826596796512604,0.2826213240623474,0.28258296847343445,0.2825446128845215,0.2825062870979309,0.2824679911136627,0.28242969512939453,0.28239142894744873,0.28235316276550293,0.2823149263858795,0.2822766900062561,0.2822384834289551,0.28220030665397644,0.2821621000766754,0.28212395310401917,0.2820857763290405,0.2820476293563843,0.2820095121860504,0.28197142481803894,0.28193333745002747,0.281895250082016,0.2818571925163269,0.2818191647529602,0.2817811369895935,0.2817431390285492,0.2817051410675049,0.28166714310646057,0.28162917494773865,0.2815912067890167,0.2815532982349396,0.28151535987854004,0.2814774513244629,0.28143957257270813,0.28140169382095337,0.281363844871521,0.2813259959220886,0.28128817677497864,0.28125035762786865,0.28121256828308105,0.28117477893829346,0.28113701939582825,0.28109925985336304,0.2810615003108978,0.2810238003730774,0.28098610043525696,0.2809484004974365,0.2809107005596161,0.28087306022644043,0.28083541989326477,0.2807977795600891,0.28076016902923584,0.28072255849838257,0.2806849777698517,0.2806474268436432,0.2806098461151123,0.2805723249912262,0.2805348038673401,0.280497282743454,0.28045976161956787,0.28042230010032654,0.2803848385810852,0.28034740686416626,0.2803099453449249,0.28027254343032837,0.2802351415157318,0.28019773960113525,0.2801603674888611,0.2801230251789093,0.28008565306663513,0.28004834055900574,0.28001099824905396,0.27997371554374695,0.27993643283843994,0.27989915013313293,0.2798618972301483,0.2798246741294861,0.27978742122650146,0.2797502279281616,0.2797130346298218,0.27967584133148193,0.2796386778354645,0.2796015441417694,0.27956438064575195,0.2795272767543793,0.2794901430606842,0.2794530689716339,0.2794159948825836,0.2793789207935333,0.2793418765068054,0.2793048620223999,0.279267817735672,0.2792308032512665,0.27919381856918335,0.2791568636894226,0.27911990880966187,0.2790829539299011,0.27904602885246277,0.2790091037750244,0.27897220849990845,0.2789353132247925,0.2788984477519989,0.2788615822792053,0.27882474660873413,0.27878791093826294,0.27875110507011414,0.27871429920196533,0.2786775231361389,0.2786407470703125,0.27860400080680847,0.27856725454330444,0.2785305380821228,0.27849382162094116,0.2784571051597595,0.27842044830322266,0.2783837616443634,0.27834710478782654,0.27831047773361206,0.2782738506793976,0.2782372236251831,0.2782006561756134,0.2781640589237213,0.2781274914741516,0.2780909240245819,0.2780543863773346,0.27801787853240967,0.27798137068748474,0.2779448628425598,0.2779083847999573,0.27787190675735474,0.2778354585170746,0.2777990400791168,0.27776262164115906,0.2777262032032013,0.2776898145675659,0.27765342593193054,0.27761706709861755,0.27758070826530457,0.27754437923431396,0.27750805020332336,0.27747172117233276,0.27743545174598694,0.2773991823196411,0.2773629128932953,0.27732664346694946,0.277290403842926,0.277254194021225,0.2772179841995239,0.2771817743778229,0.2771455943584442,0.27710944414138794,0.27707329392433167,0.2770371437072754,0.2770009934902191,0.2769649028778076,0.27692878246307373,0.2768927216529846,0.2768566608428955,0.2768206000328064,0.2767845392227173,0.27674850821495056,0.2767125070095062,0.2766765356063843,0.27664053440093994,0.276604562997818,0.27656862139701843,0.27653267979621887,0.2764967381954193,0.27646082639694214,0.27642494440078735,0.2763890326023102,0.2763531506061554,0.2763173282146454,0.276281476020813,0.2762456238269806,0.27620983123779297,0.27617400884628296,0.2761382460594177,0.2761024534702301,0.27606669068336487,0.276030957698822,0.2759952247142792,0.27595949172973633,0.27592378854751587,0.2758881151676178,0.2758524417877197,0.27581676840782166,0.27578112483024597,0.2757454812526703,0.275709867477417,0.2756742537021637,0.2756386697292328,0.2756030857563019,0.27556750178337097,0.27553194761276245,0.2754964232444763,0.2754608988761902,0.27542537450790405,0.2753898799419403,0.27535441517829895,0.2753189206123352,0.27528345584869385,0.2752480208873749,0.2752126157283783,0.2751771807670593,0.27514177560806274,0.27510640025138855,0.27507102489471436,0.27503564953804016,0.27500030398368835,0.27496498823165894,0.27492964267730713,0.2748943269252777,0.2748590409755707,0.27482378482818604,0.274788498878479,0.27475324273109436,0.2747180163860321,0.27468279004096985,0.27464759349823,0.2746123671531677,0.27457720041275024,0.27454203367233276,0.2745068669319153,0.2744717299938202,0.2744365930557251,0.2744014859199524,0.2743663787841797,0.27433130145072937,0.27429622411727905,0.27426114678382874,0.2742260992527008,0.2741910517215729,0.27415603399276733,0.2741210460662842,0.27408602833747864,0.27405107021331787,0.2740160822868347,0.27398112416267395,0.27394619584083557,0.2739112675189972,0.2738763391971588,0.2738414406776428,0.27380654215812683,0.2737716734409332,0.2737368047237396,0.2737019658088684,0.2736671268939972,0.273632287979126,0.27359747886657715,0.2735626995563507,0.27352792024612427,0.2734931409358978,0.2734583914279938,0.2734236419200897,0.27338892221450806,0.2733542025089264,0.2733194828033447,0.27328482270240784,0.27325013279914856,0.27321547269821167,0.2731808125972748,0.2731461822986603,0.2731115520000458,0.27307695150375366,0.27304232120513916,0.27300775051116943,0.2729731798171997,0.27293860912323,0.27290406823158264,0.2728695571422577,0.27283504605293274,0.2728005349636078,0.27276602387428284,0.27273157238960266,0.2726970911026001,0.2726626396179199,0.27262818813323975,0.27259376645088196,0.27255934476852417,0.27252495288848877,0.27249056100845337,0.27245619893074036,0.27242183685302734,0.27238747477531433,0.2723531424999237,0.2723188102245331,0.27228450775146484,0.2722502052783966,0.27221593260765076,0.2721816599369049,0.27214738726615906,0.2721131443977356,0.27207890152931213,0.27204468846321106,0.27201047539711,0.2719762921333313,0.2719421088695526,0.2719079554080963,0.2718737721443176,0.2718396484851837,0.2718055248260498,0.2717714011669159,0.27173730731010437,0.27170318365097046,0.2716691195964813,0.2716350555419922,0.27160102128982544,0.2715669572353363,0.27153295278549194,0.2714989185333252,0.2714649438858032,0.27143093943595886,0.2713969647884369,0.2713629901409149,0.27132904529571533,0.27129510045051575,0.27126118540763855,0.27122727036476135,0.27119335532188416,0.27115947008132935,0.2711256146430969,0.2710917592048645,0.2710579037666321,0.27102407813072205,0.270990252494812,0.270956426858902,0.27092263102531433,0.2708888649940491,0.2708550691604614,0.27082133293151855,0.2707875669002533,0.2707538306713104,0.27072009444236755,0.27068641781806946,0.2706526815891266,0.2706190049648285,0.2705853581428528,0.2705516815185547,0.270518034696579,0.27048441767692566,0.27045077085494995,0.270417183637619,0.2703835666179657,0.27034997940063477,0.2703164219856262,0.2702828645706177,0.27024930715560913,0.270215779542923,0.2701822519302368,0.27014875411987305,0.2701152563095093,0.2700817584991455,0.2700482904911041,0.27001482248306274,0.26998138427734375,0.26994794607162476,0.26991453766822815,0.26988112926483154,0.26984772086143494,0.2698143422603607,0.2697809636592865,0.26974761486053467,0.26971426606178284,0.269680917263031,0.26964759826660156,0.2696142792701721,0.26958099007606506,0.269547700881958,0.26951444149017334,0.2694811522960663,0.269447922706604,0.2694146931171417,0.26938146352767944,0.26934823393821716,0.26931506395339966,0.26928186416625977,0.26924869418144226,0.26921552419662476,0.26918238401412964,0.2691492438316345,0.2691161036491394,0.2690829932689667,0.26904988288879395,0.2690168023109436,0.26898372173309326,0.2689506411552429,0.26891759037971497,0.2688845694065094,0.26885151863098145,0.26881852746009827,0.2687855362892151,0.2687525153160095,0.26871955394744873,0.26868656277656555,0.26865360140800476,0.26862066984176636,0.26858773827552795,0.26855483651161194,0.26852190494537354,0.2684890031814575,0.2684561312198639,0.26842325925827026,0.26839038729667664,0.2683575451374054,0.26832473278045654,0.2682919204235077,0.26825907826423645,0.26822629570961,0.2681935131549835,0.26816073060035706,0.2681279480457306,0.2680952250957489,0.2680624723434448,0.26802974939346313,0.26799702644348145,0.26796433329582214,0.26793164014816284,0.26789894700050354,0.2678662836551666,0.2678336501121521,0.2678009867668152,0.26776835322380066,0.2677357494831085,0.2677031457424164,0.26767054200172424,0.2676379680633545,0.26760539412498474,0.2675728499889374,0.2675402760505676,0.26750776171684265,0.2674752473831177,0.2674427032470703,0.2674102187156677,0.26737770438194275,0.26734524965286255,0.26731276512145996,0.26728034019470215,0.26724788546562195,0.26721546053886414,0.2671830356121063,0.2671506404876709,0.2671182453632355,0.26708585023880005,0.267053484916687,0.267021119594574,0.2669887840747833,0.2669564485549927,0.266924113035202,0.26689180731773376,0.2668595016002655,0.26682722568511963,0.26679494976997375,0.2667626738548279,0.2667304277420044,0.2666981816291809,0.2666659653186798,0.2666337490081787,0.2666015326976776,0.2665693461894989,0.2665371596813202,0.2665049731731415,0.26647281646728516,0.26644065976142883,0.2664085328578949,0.26637643575668335,0.2663443088531494,0.26631221175193787,0.2662801146507263,0.26624801754951477,0.2662159502506256,0.26618391275405884,0.26615187525749207,0.2661198377609253,0.2660878002643585,0.26605579257011414,0.26602381467819214,0.26599180698394775,0.26595982909202576,0.26592788100242615,0.26589593291282654,0.26586398482322693,0.2658320665359497,0.2658001482486725,0.26576825976371765,0.26573634147644043,0.2657044529914856,0.26567259430885315,0.2656407356262207,0.26560887694358826,0.2655770480632782,0.26554521918296814,0.26551342010498047,0.2654815912246704,0.2654498219490051,0.26541805267333984,0.26538628339767456,0.2653545141220093,0.2653227746486664,0.2652910351753235,0.2652592957019806,0.26522761583328247,0.26519590616226196,0.26516422629356384,0.2651325464248657,0.2651008665561676,0.26506921648979187,0.26503756642341614,0.2650059461593628,0.26497432589530945,0.2649427354335785,0.26491111516952515,0.2648795247077942,0.2648479640483856,0.26481640338897705,0.2647848427295685,0.2647532820701599,0.2647217810153961,0.26469025015830994,0.26465874910354614,0.26462724804878235,0.26459574699401855,0.26456427574157715,0.26453283429145813,0.2645013928413391,0.2644699215888977,0.2644385099411011,0.26440709829330444,0.2643756866455078,0.2643442749977112,0.26431289315223694,0.2642815113067627,0.26425015926361084,0.264218807220459,0.2641874849796295,0.26415613293647766,0.2641248404979706,0.2640935182571411,0.26406222581863403,0.26403093338012695,0.26399970054626465,0.26396840810775757,0.2639371454715729,0.26390594244003296,0.26387470960617065,0.26384347677230835,0.26381227374076843,0.2637811005115509,0.263749897480011,0.26371872425079346,0.2636875510215759,0.2636564075946808,0.26362526416778564,0.2635941505432129,0.26356303691864014,0.2635319232940674,0.26350080966949463,0.26346972584724426,0.2634386718273163,0.2634075880050659,0.2633765637874603,0.26334550976753235,0.26331448554992676,0.26328346133232117,0.26325246691703796,0.26322147250175476,0.26319047808647156,0.26315951347351074,0.26312851905822754,0.2630975842475891,0.2630666494369507,0.26303571462631226,0.26300477981567383,0.2629738748073578,0.26294299960136414,0.2629120945930481,0.26288121938705444,0.2628503441810608,0.2628194987773895,0.26278865337371826,0.262757807970047,0.2627269923686981,0.26269617676734924,0.26266536116600037,0.26263460516929626,0.2626038193702698,0.2625730335712433,0.2625423073768616,0.26251155138015747,0.26248082518577576,0.26245006918907166,0.26241937279701233,0.2623886466026306,0.2623579800128937,0.26232728362083435,0.2622966170310974,0.2622659504413605,0.2622353136539459,0.26220467686653137,0.2621740400791168,0.26214343309402466,0.2621127963066101,0.26208221912384033,0.26205164194107056,0.2620210647583008,0.261990487575531,0.2619599401950836,0.26192939281463623,0.26189887523651123,0.26186835765838623,0.26183784008026123,0.2618073523044586,0.2617768347263336,0.2617463767528534,0.26171591877937317,0.26168543100357056,0.2616550028324127,0.2616245746612549,0.26159414649009705,0.2615637183189392,0.26153331995010376,0.2615029215812683,0.26147255301475525,0.2614421844482422,0.2614118158817291,0.26138147711753845,0.2613511383533478,0.2613207995891571,0.26129046082496643,0.26126015186309814,0.26122987270355225,0.26119956374168396,0.26116931438446045,0.26113903522491455,0.26110875606536865,0.26107853651046753,0.261048287153244,0.2610180675983429,0.2609878480434418,0.26095765829086304,0.2609274685382843,0.26089727878570557,0.2608671188354492,0.2608369290828705,0.2608067989349365,0.2607766389846802,0.2607465088367462,0.26071640849113464,0.2606862783432007,0.2606561779975891,0.2606261074542999,0.26059600710868835,0.26056593656539917,0.2605358958244324,0.2605058550834656,0.2604758143424988,0.260445773601532,0.2604157626628876,0.26038575172424316,0.26035577058792114,0.2603257894515991,0.2602958083152771,0.2602658271789551,0.26023587584495544,0.2602059543132782,0.26017600297927856,0.2601460814476013,0.26011618971824646,0.2600862681865692,0.26005637645721436,0.2600265145301819,0.2599966526031494,0.25996679067611694,0.2599369287490845,0.259907066822052,0.2598772644996643,0.2598474323749542,0.25981760025024414,0.25978782773017883,0.25975802540779114,0.25972825288772583,0.2596984803676605,0.2596687376499176,0.2596389651298523,0.25960925221443176,0.25957950949668884,0.2595497965812683,0.2595200836658478,0.25949040055274963,0.2594607174396515,0.25943103432655334,0.2594013512134552,0.25937169790267944,0.2593420743942261,0.2593124210834503,0.25928279757499695,0.2592531740665436,0.2592235803604126,0.2591939866542816,0.25916439294815063,0.25913482904434204,0.25910526514053345,0.25907570123672485,0.25904613733291626,0.25901660323143005,0.25898709893226624,0.25895756483078003,0.2589280605316162,0.2588985860347748,0.25886908173561096,0.25883960723876953,0.2588101625442505,0.25878071784973145,0.25875124335289,0.25872182846069336,0.2586924135684967,0.25866299867630005,0.2586335837841034,0.2586041986942291,0.25857481360435486,0.2585454285144806,0.2585160732269287,0.25848671793937683,0.25845739245414734,0.25842803716659546,0.25839871168136597,0.2583693861961365,0.25834009051322937,0.25831079483032227,0.25828149914741516,0.25825226306915283,0.2582229673862457,0.2581937313079834,0.2581644654273987,0.25813525915145874,0.2581060230731964,0.25807681679725647,0.25804761052131653,0.2580184042453766,0.25798922777175903,0.2579600512981415,0.2579309046268463,0.25790172815322876,0.2578725814819336,0.2578434348106384,0.25781431794166565,0.25778520107269287,0.2577561140060425,0.2577269971370697,0.2576979100704193,0.2576688528060913,0.2576397657394409,0.2576107382774353,0.2575816810131073,0.2575526535511017,0.2575235962867737,0.25749459862709045,0.2574656009674072,0.257436603307724,0.25740760564804077,0.25737863779067993,0.2573496699333191,0.25732070207595825,0.2572917640209198,0.25726282596588135,0.2572338879108429,0.25720497965812683,0.2571760416030884,0.2571471631526947,0.257118284702301,0.25708937644958496,0.25706052780151367,0.25703164935112,0.2570028007030487,0.2569739520549774,0.2569451332092285,0.2569163143634796,0.2568874955177307,0.2568587064743042,0.2568298876285553,0.25680112838745117,0.25677233934402466,0.25674358010292053,0.2567148208618164,0.25668609142303467,0.25665733218193054,0.2566286325454712,0.25659990310668945,0.2565712034702301,0.25654250383377075,0.2565138339996338,0.25648513436317444,0.2564564645290375,0.2564277946949005,0.25639915466308594,0.25637054443359375,0.2563419044017792,0.2563132643699646,0.2562846839427948,0.2562560737133026,0.2562274932861328,0.256198912858963,0.2561703324317932,0.2561417520046234,0.256113201379776,0.256084680557251,0.25605612993240356,0.25602760910987854,0.2559990882873535,0.2559705972671509,0.25594210624694824,0.2559136152267456,0.25588512420654297,0.2558566629886627,0.25582820177078247,0.2557997703552246,0.25577133893966675,0.2557429075241089,0.255714476108551,0.25568607449531555,0.2556576728820801,0.2556292712688446,0.2556008994579315,0.25557252764701843,0.25554415583610535,0.25551581382751465,0.25548747181892395,0.25545912981033325,0.25543081760406494,0.25540250539779663,0.2553741931915283,0.25534588098526,0.2553175985813141,0.25528931617736816,0.25526103377342224,0.2552328109741211,0.25520452857017517,0.255176305770874,0.2551480829715729,0.25511986017227173,0.2550916373729706,0.2550634443759918,0.25503525137901306,0.2550070583820343,0.25497889518737793,0.25495073199272156,0.2549225687980652,0.2548944056034088,0.25486627221107483,0.25483816862106323,0.25481003522872925,0.25478193163871765,0.25475382804870605,0.25472572445869446,0.25469765067100525,0.25466957688331604,0.25464150309562683,0.25461345911026,0.2545854151248932,0.25455737113952637,0.25452935695648193,0.2545013427734375,0.25447332859039307,0.25444531440734863,0.254417359828949,0.25438937544822693,0.2543613910675049,0.2543334364891052,0.25430548191070557,0.2542775571346283,0.25424960255622864,0.25422167778015137,0.2541937530040741,0.2541658580303192,0.25413796305656433,0.25411006808280945,0.25408220291137695,0.25405433773994446,0.25402647256851196,0.25399860739707947,0.25397077202796936,0.25394293665885925,0.25391513109207153,0.2538872957229614,0.2538594901561737,0.2538317143917084,0.25380390882492065,0.2537761330604553,0.25374835729599,0.25372061133384705,0.2536928653717041,0.25366511940956116,0.2536373734474182,0.25360965728759766,0.2535819411277771,0.25355425477027893,0.2535265386104584,0.2534988522529602,0.2534711956977844,0.25344350934028625,0.2534158527851105,0.2533881962299347,0.2533605694770813,0.2533329129219055,0.2533053159713745,0.2532776892185211,0.2532500922679901,0.2532224953174591,0.2531948983669281,0.2531673312187195,0.25313976407051086,0.25311219692230225,0.253084659576416,0.2530570924282074,0.25302958488464355,0.2530020475387573,0.2529745399951935,0.25294703245162964,0.2529195249080658,0.25289204716682434,0.2528645396232605,0.25283709168434143,0.2528096139431,0.2527821660041809,0.25275471806526184,0.25272729992866516,0.2526998519897461,0.2526724338531494,0.2526450455188751,0.25261765718460083,0.25259023904800415,0.25256288051605225,0.25253549218177795,0.25250813364982605,0.25248077511787415,0.25245344638824463,0.2524260878562927,0.2523987591266632,0.2523714601993561,0.25234413146972656,0.25231683254241943,0.2522895336151123,0.25226226449012756,0.25223496556282043,0.2522077262401581,0.25218045711517334,0.252153217792511,0.25212597846984863,0.2520987391471863,0.2520715296268463,0.25204429030418396,0.2520171105861664,0.2519899010658264,0.25196272134780884,0.25193554162979126,0.25190839171409607,0.2518812119960785,0.2518540620803833,0.2518269121646881,0.2517997920513153,0.2517726719379425,0.2517455518245697,0.2517184317111969,0.2516913414001465,0.25166425108909607,0.25163716077804565,0.2516101002693176,0.2515830397605896,0.2515559792518616,0.25152891874313354,0.2515018880367279,0.25147485733032227,0.251447856426239,0.2514208257198334,0.2513938248157501,0.25136682391166687,0.251339852809906,0.25131288170814514,0.2512859106063843,0.2512589395046234,0.25123199820518494,0.25120505690574646,0.251178115606308,0.2511512041091919,0.2511242628097534,0.2510973811149597,0.25107046961784363,0.2510435879230499,0.2510167062282562,0.2509898245334625,0.2509629726409912,0.2509361207485199,0.2509092688560486,0.25088241696357727,0.25085559487342834,0.2508287727832794,0.2508019804954529,0.25077515840530396,0.2507483661174774,0.2507215738296509,0.25069481134414673,0.2506680190563202,0.25064125657081604,0.2506145238876343,0.2505877614021301,0.25056102871894836,0.2505342960357666,0.2505075931549072,0.25048086047172546,0.2504541873931885,0.2504274845123291,0.2504008114337921,0.2503741383552551,0.25034746527671814,0.25032079219818115,0.25029414892196655,0.25026750564575195,0.25024086236953735,0.25021424889564514,0.25018763542175293,0.2501610219478607,0.2501344084739685,0.25010785460472107,0.25008124113082886,0.2500546872615814,0.250028133392334,0.25000157952308655,0.2499750256538391,0.24994848668575287,0.24992194771766663,0.24989540874958038,0.24986891448497772,0.24984242022037506,0.24981589615345,0.24978941679000854,0.24976293742656708,0.2497364729642868,0.24971000850200653,0.24968354403972626,0.24965709447860718,0.24963067471981049,0.2496042251586914,0.2495778203010559,0.24955138564109802,0.24952499568462372,0.24949857592582703,0.24947218596935272,0.249445840716362,0.2494194656610489,0.24939309060573578,0.24936673045158386,0.24934037029743195,0.2493140548467636,0.2492877095937729,0.24926139414310455,0.2492350935935974,0.24920879304409027,0.24918249249458313,0.24915620684623718,0.24912992119789124,0.2491036355495453,0.24907736480236053,0.24905113875865936,0.2490248680114746,0.24899864196777344,0.24897240102291107,0.2489461749792099,0.24891996383666992,0.24889376759529114,0.24886757135391235,0.24884137511253357,0.24881522357463837,0.24878904223442078,0.24876286089420319,0.24873672425746918,0.24871055781841278,0.24868442118167877,0.24865829944610596,0.24863217771053314,0.24860607087612152,0.2485799491405487,0.24855385720729828,0.24852775037288666,0.24850165843963623,0.24847561120986938,0.24844954907894135,0.2484234720468521,0.24839743971824646,0.2483714073896408,0.24834537506103516,0.2483193427324295,0.24829332530498505,0.24826732277870178,0.2482413351535797,0.24821533262729645,0.24818933010101318,0.2481633722782135,0.24813738465309143,0.24811144173145294,0.24808549880981445,0.24805955588817596,0.24803361296653748,0.24800768494606018,0.24798175692558289,0.24795587360858917,0.24792996048927307,0.24790404736995697,0.24787817895412445,0.24785231053829193,0.2478264421224594,0.2478005588054657,0.24777470529079437,0.24774886667728424,0.2477230280637741,0.24769721925258636,0.24767138063907623,0.24764558672904968,0.24761976301670074,0.2475939840078354,0.24756817519664764,0.2475423961877823,0.24751663208007812,0.24749086797237396,0.247465118765831,0.24743935465812683,0.24741360545158386,0.24738790094852448,0.2473621666431427,0.24733643233776093,0.24731072783470154,0.24728503823280334,0.24725936353206635,0.24723367393016815,0.24720799922943115,0.24718232452869415,0.24715666472911835,0.24713100492954254,0.24710538983345032,0.2470797300338745,0.2470540851354599,0.24702848494052887,0.24700288474559784,0.24697725474834442,0.2469516545534134,0.24692606925964355,0.24690048396587372,0.24687494337558746,0.24684937298297882,0.24682380259037018,0.24679824709892273,0.24677270650863647,0.2467471957206726,0.24672167003154755,0.2466961294412613,0.24667063355445862,0.24664512276649475,0.24661962687969208,0.2465941458940506,0.24656866490840912,0.24654321372509003,0.24651773273944855,0.24649229645729065,0.24646683037281036,0.24644139409065247,0.24641597270965576,0.24639055132865906,0.24636514484882355,0.24633973836898804,0.24631433188915253,0.2462889403104782,0.2462635636329651,0.24623818695545197,0.24621279537677765,0.24618744850158691,0.24616211652755737,0.24613676965236664,0.2461114376783371,0.24608607590198517,0.24606075882911682,0.24603547155857086,0.24601015448570251,0.24598485231399536,0.2459595799446106,0.24593429267406464,0.24590902030467987,0.2458837330341339,0.24585849046707153,0.24583324790000916,0.24580800533294678,0.2457827627658844,0.24575753509998322,0.24573233723640442,0.24570710957050323,0.24568189680576324,0.24565671384334564,0.24563151597976685,0.24560634791851044,0.24558117985725403,0.24555601179599762,0.2455308586359024,0.2455057054758072,0.24548056721687317,0.24545542895793915,0.24543029069900513,0.2454051822423935,0.24538005888462067,0.24535496532917023,0.2453298568725586,0.24530477821826935,0.2452796995639801,0.24525463581085205,0.245229572057724,0.24520450830459595,0.2451794445514679,0.24515442550182343,0.24512939155101776,0.2451043426990509,0.24507933855056763,0.24505430459976196,0.24502934515476227,0.2450043261051178,0.24497933685779572,0.24495436251163483,0.24492938816547394,0.24490441381931305,0.24487945437431335,0.24485450983047485,0.24482959508895874,0.24480463564395905,0.24477972090244293,0.24475479125976562,0.2447298765182495,0.2447049766778946,0.24468007683753967,0.24465519189834595,0.24463030695915222,0.24460545182228088,0.24458058178424835,0.24455571174621582,0.24453087151050568,0.24450600147247314,0.2444811761379242,0.24445636570453644,0.2444315403699875,0.24440672993659973,0.24438191950321198,0.2443571239709854,0.24433232843875885,0.2443075329065323,0.2442827820777893,0.24425800144672394,0.24423325061798096,0.2442084699869156,0.2441837340593338,0.24415899813175201,0.24413427710533142,0.24410955607891083,0.24408483505249023,0.24406011402606964,0.24403543770313263,0.24401073157787323,0.24398604035377502,0.2439613789319992,0.243936687707901,0.24391202628612518,0.24388737976551056,0.24386273324489594,0.2438381016254425,0.24381347000598907,0.24378883838653564,0.24376420676708221,0.24373961985111237,0.24371500313282013,0.24369041621685028,0.24366581439971924,0.24364124238491058,0.24361667037010193,0.24359208345413208,0.24356752634048462,0.24354301393032074,0.24351845681667328,0.243493914604187,0.24346938729286194,0.24344487488269806,0.24342034757137299,0.2433958351612091,0.2433713674545288,0.24334685504436493,0.24332237243652344,0.24329790472984314,0.24327343702316284,0.24324896931648254,0.24322450160980225,0.24320004880428314,0.24317562580108643,0.24315118789672852,0.243126779794693,0.24310234189033508,0.24307793378829956,0.24305351078510284,0.24302911758422852,0.24300476908683777,0.24298037588596344,0.2429559975862503,0.24293163418769836,0.24290725588798523,0.24288290739059448,0.24285857379436493,0.242834210395813,0.24280989170074463,0.24278558790683746,0.2427612692117691,0.24273696541786194,0.24271266162395477,0.2426883727312088,0.24266408383846283,0.24263979494571686,0.24261553585529327,0.2425912618637085,0.24256698787212372,0.24254275858402252,0.24251852929592133,0.24249427020549774,0.24247004091739655,0.24244582653045654,0.24242161214351654,0.24239739775657654,0.24237322807312012,0.2423490285873413,0.2423248291015625,0.24230065941810608,0.24227650463581085,0.24225233495235443,0.2422281801700592,0.24220401048660278,0.24217987060546875,0.2421557456254959,0.24213160574436188,0.24210748076438904,0.24208340048789978,0.24205927550792694,0.24203519523143768,0.24201110005378723,0.24198701977729797,0.24196292459964752,0.24193887412548065,0.2419148087501526,0.24189075827598572,0.24186670780181885,0.24184267222881317,0.2418186366558075,0.24179460108280182,0.24177056550979614,0.24174657464027405,0.24172258377075195,0.24169856309890747,0.24167458713054657,0.24165061116218567,0.24162660539150238,0.24160264432430267,0.24157868325710297,0.24155475199222565,0.24153079092502594,0.24150684475898743,0.2414829283952713,0.24145899713039398,0.24143506586551666,0.24141116440296173,0.2413872629404068,0.24136336147785187,0.24133947491645813,0.24131560325622559,0.24129171669483185,0.2412678450345993,0.24124397337436676,0.2412201166152954,0.24119628965854645,0.2411724328994751,0.24114860594272614,0.24112476408481598,0.2411009520292282,0.24107713997364044,0.24105334281921387,0.2410295456647873,0.24100574851036072,0.24098195135593414,0.24095816910266876,0.24093441665172577,0.24091064929962158,0.2408868819475174,0.2408631443977356,0.2408394068479538,0.2408156841993332,0.2407919466495514,0.2407682090997696,0.240744486451149,0.24072077870368958,0.24069707095623016,0.24067340791225433,0.24064971506595612,0.24062605202198029,0.24060235917568207,0.24057871103286743,0.2405550330877304,0.24053138494491577,0.24050773680210114,0.2404841035604477,0.24046047031879425,0.240436851978302,0.24041323363780975,0.2403896450996399,0.24036602675914764,0.2403424233198166,0.24031884968280792,0.24029527604579926,0.2402716726064682,0.24024811387062073,0.24022455513477325,0.24020101130008698,0.2401774525642395,0.24015392363071442,0.24013037979602814,0.24010686576366425,0.24008333683013916,0.24005982279777527,0.24003632366657257,0.24001280963420868,0.23998932540416718,0.23996584117412567,0.23994237184524536,0.23991890251636505,0.23989543318748474,0.23987197875976562,0.2398485243320465,0.2398250699043274,0.23980164527893066,0.23977820575237274,0.2397547960281372,0.23973137140274048,0.23970796167850494,0.2396845668554306,0.23966117203235626,0.23963779211044312,0.23961441218852997,0.23959103226661682,0.23956765234470367,0.23954428732395172,0.23952095210552216,0.2394975870847702,0.23947425186634064,0.23945090174674988,0.2394275963306427,0.23940427601337433,0.23938097059726715,0.23935766518115997,0.2393343597650528,0.2393110692501068,0.23928776383399963,0.23926448822021484,0.23924122750759125,0.23921795189380646,0.23919470608234406,0.23917143046855927,0.23914819955825806,0.23912496864795685,0.23910170793533325,0.23907850682735443,0.23905529081821442,0.2390320748090744,0.23900887370109558,0.23898565769195557,0.23896245658397675,0.2389392852783203,0.23891612887382507,0.23889294266700745,0.2388697862625122,0.23884662985801697,0.23882345855236053,0.2388003170490265,0.23877717554569244,0.2387540489435196,0.23873093724250793,0.23870781064033508,0.23868469893932343,0.23866160213947296,0.2386384904384613,0.23861542344093323,0.23859231173992157,0.2385692447423935,0.23854617774486542,0.23852311074733734,0.23850005865097046,0.23847700655460358,0.2384539544582367,0.238430917263031,0.2384078949689865,0.23838487267494202,0.23836186528205872,0.23833884298801422,0.23831583559513092,0.23829285800457,0.2382698357105255,0.2382468581199646,0.23822391033172607,0.23820093274116516,0.23817797005176544,0.23815500736236572,0.238132044672966,0.23810911178588867,0.23808616399765015,0.238063246011734,0.23804032802581787,0.23801739513874054,0.2379944920539856,0.23797158896923065,0.2379486858844757,0.23792579770088196,0.2379029095172882,0.23788003623485565,0.2378571778535843,0.23783430457115173,0.23781143128871918,0.237788587808609,0.23776572942733765,0.23774290084838867,0.2377200722694397,0.23769725859165192,0.23767443001270294,0.23765161633491516,0.23762881755828857,0.237606018781662,0.2375832051038742,0.23756043612957,0.23753765225410461,0.2375148981809616,0.23749211430549622,0.2374693602323532,0.2374466210603714,0.2374238669872284,0.2374011129140854,0.23737837374210358,0.23735566437244415,0.23733294010162354,0.2373102307319641,0.2372875064611435,0.23726482689380646,0.23724211752414703,0.23721943795681,0.23719677329063416,0.23717407882213593,0.23715141415596008,0.23712874948978424,0.2371060997247696,0.23708344995975494,0.2370608001947403,0.23703816533088684,0.23701554536819458,0.23699292540550232,0.23697032034397125,0.236947700381279,0.23692509531974792,0.23690249025821686,0.23687990009784698,0.2368573248386383,0.23683474957942963,0.23681217432022095,0.23678959906101227,0.23676703870296478,0.2367444783449173,0.2367219626903534,0.2366994023323059,0.236676886677742,0.2366543710231781,0.236631840467453,0.2366093248128891,0.2365868240594864,0.23656430840492249,0.23654180765151978,0.23651935160160065,0.23649686574935913,0.23647437989711761,0.2364519089460373,0.23642945289611816,0.23640699684619904,0.2363845556974411,0.23636209964752197,0.23633967339992523,0.2363172471523285,0.23629482090473175,0.2362724095582962,0.23624999821186066,0.2362275868654251,0.23620519042015076,0.2361828088760376,0.23616042733192444,0.23613803088665009,0.23611566424369812,0.23609328269958496,0.23607094585895538,0.23604856431484222,0.23602622747421265,0.23600389063358307,0.2359815537929535,0.2359592169523239,0.23593689501285553,0.23591460287570953,0.23589228093624115,0.23586997389793396,0.23584769666194916,0.23582541942596436,0.23580311238765717,0.23578085005283356,0.23575855791568756,0.23573629558086395,0.23571403324604034,0.23569178581237793,0.2356695532798767,0.2356473207473755,0.23562507331371307,0.23560284078121185,0.23558063805103302,0.2355584055185318,0.23553618788719177,0.23551401495933533,0.2354917973279953,0.23546962440013885,0.23544743657112122,0.23542526364326477,0.23540309071540833,0.23538091778755188,0.23535875976085663,0.23533663153648376,0.2353144735097885,0.23529231548309326,0.2352702021598816,0.23524805903434753,0.23522594571113586,0.2352038472890854,0.23518173396587372,0.23515963554382324,0.23513753712177277,0.23511545360088348,0.2350933700799942,0.23507128655910492,0.23504920303821564,0.23502713441848755,0.23500508069992065,0.23498304188251495,0.23496098816394806,0.23493894934654236,0.23491692543029785,0.23489487171173096,0.23487284779548645,0.23485086858272552,0.2348288595676422,0.2348068505525589,0.23478484153747559,0.23476284742355347,0.23474088311195374,0.23471888899803162,0.23469692468643188,0.23467497527599335,0.23465299606323242,0.23463104665279388,0.23460909724235535,0.234587162733078,0.23456522822380066,0.23454329371452332,0.23452137410640717,0.2344994693994522,0.23447754979133606,0.2344556450843811,0.23443375527858734,0.23441185057163239,0.23438997566699982,0.23436807096004486,0.23434622585773468,0.2343243658542633,0.23430247604846954,0.23428063094615936,0.234258770942688,0.2342369556427002,0.23421511054039001,0.23419329524040222,0.23417146503925323,0.23414961993694305,0.23412781953811646,0.23410603404045105,0.23408420383930206,0.23406241834163666,0.23404063284397125,0.23401884734630585,0.23399707674980164,0.23397530615329742,0.2339535355567932,0.2339317947626114,0.23391003906726837,0.23388828337192535,0.23386655747890472,0.2338448315858841,0.23382309079170227,0.23380136489868164,0.2337796539068222,0.23375795781612396,0.23373624682426453,0.23371455073356628,0.23369285464286804,0.233671173453331,0.23364950716495514,0.2336278259754181,0.23360614478588104,0.23358449339866638,0.23356282711029053,0.23354119062423706,0.2335195541381836,0.23349791765213013,0.23347629606723785,0.23345467448234558,0.2334330528974533,0.23341143131256104,0.23338982462882996,0.23336823284626007,0.233346626162529,0.2333250343799591,0.23330345749855042,0.23328186571598053,0.23326030373573303,0.23323875665664673,0.23321719467639923,0.23319564759731293,0.23317410051822662,0.23315255343914032,0.2331310212612152,0.2331094890832901,0.233087956905365,0.23306645452976227,0.23304493725299835,0.23302343487739563,0.2330019176006317,0.23298044502735138,0.23295895755290985,0.23293745517730713,0.2329159826040268,0.23289453983306885,0.2328730821609497,0.23285160958766937,0.23283015191555023,0.23280870914459229,0.23278725147247314,0.23276583850383759,0.23274442553520203,0.23272298276424408,0.23270158469676971,0.23268017172813416,0.2326587438583374,0.23263736069202423,0.23261596262454987,0.2325945794582367,0.23257321119308472,0.23255184292793274,0.23253045976161957,0.2325090914964676,0.232487753033638,0.23246638476848602,0.23244504630565643,0.23242372274398804,0.23240236937999725,0.23238104581832886,0.23235972225666046,0.23233841359615326,0.23231710493564606,0.23229579627513885,0.23227448761463165,0.23225320875644684,0.23223191499710083,0.23221062123775482,0.2321893721818924,0.2321680784225464,0.23214682936668396,0.23212558031082153,0.2321043312549591,0.23208309710025787,0.23206184804439545,0.2320406138896942,0.23201937973499298,0.23199816048145294,0.2319769412279129,0.23195572197437286,0.2319345325231552,0.23191331326961517,0.23189213871955872,0.23187093436717987,0.2318497598171234,0.23182858526706696,0.2318074256181717,0.23178625106811523,0.23176510632038116,0.2317439466714859,0.23172278702259064,0.23170164227485657,0.23168052732944489,0.231659397482872,0.23163825273513794,0.23161715269088745,0.23159605264663696,0.2315749228000641,0.2315538227558136,0.2315327376127243,0.231511652469635,0.23149056732654572,0.23146948218345642,0.23144841194152832,0.23142734169960022,0.2314063012599945,0.2313852310180664,0.2313641756772995,0.23134315013885498,0.23132209479808807,0.23130106925964355,0.23128005862236023,0.2312590330839157,0.23123802244663239,0.23121699690818787,0.23119598627090454,0.2311750203371048,0.23115402460098267,0.23113302886486053,0.2311120629310608,0.23109108209609985,0.23107010126113892,0.23104915022850037,0.23102816939353943,0.23100723326206207,0.23098628222942352,0.23096534609794617,0.23094442486763,0.23092348873615265,0.2309025675058365,0.23088164627552032,0.23086072504520416,0.2308398336172104,0.23081892728805542,0.23079805076122284,0.23077714443206787,0.2307562679052353,0.23073537647724152,0.23071451485157013,0.23069365322589874,0.23067279160022736,0.23065194487571716,0.23063108325004578,0.23061023652553558,0.23058940470218658,0.2305685579776764,0.2305477410554886,0.23052693903446198,0.23050610721111298,0.23048529028892517,0.23046448826789856,0.23044370114803314,0.23042288422584534,0.2304021120071411,0.2303813248872757,0.23036058247089386,0.23033981025218964,0.2303190380334854,0.2302982658147812,0.23027750849723816,0.23025675117969513,0.2302360236644745,0.23021529614925385,0.230194553732872,0.23017382621765137,0.23015311360359192,0.23013238608837128,0.23011167347431183,0.23009097576141357,0.23007027804851532,0.23004961013793945,0.2300289124250412,0.23000822961330414,0.22998754680156708,0.2299668937921524,0.22994621098041534,0.22992555797100067,0.2299049198627472,0.22988425195217133,0.22986361384391785,0.22984299063682556,0.22982235252857208,0.2298017293214798,0.2297811061143875,0.22976049780845642,0.22973987460136414,0.22971929609775543,0.22969868779182434,0.22967807948589325,0.22965751588344574,0.22963690757751465,0.22961634397506714,0.22959578037261963,0.2295752316713333,0.2295546680688858,0.2295341193675995,0.22951357066631317,0.22949302196502686,0.22947248816490173,0.22945193946361542,0.22943143546581268,0.22941090166568756,0.22939039766788483,0.2293698787689209,0.22934938967227936,0.22932887077331543,0.2293083816766739,0.22928790748119354,0.229267418384552,0.22924694418907166,0.2292264699935913,0.22920601069927216,0.2291855365037918,0.22916507720947266,0.2291446477174759,0.22912421822547913,0.22910377383232117,0.2290833294391632,0.22906289994716644,0.22904248535633087,0.2290220558643341,0.22900165617465973,0.22898127138614655,0.22896084189414978,0.2289404720067978,0.2289200872182846,0.22889970242977142,0.22887931764125824,0.22885893285274506,0.22883857786655426,0.22881822288036346,0.22879785299301147,0.22877751290798187,0.22875715792179108,0.22873681783676147,0.22871649265289307,0.22869615256786346,0.22867582738399506,0.22865551710128784,0.22863519191741943,0.2286149114370346,0.2285946011543274,0.22857429087162018,0.22855401039123535,0.22853371500968933,0.2285134494304657,0.22849318385124207,0.22847288846969604,0.2284526377916336,0.22843237221240997,0.22841212153434753,0.2283918708562851,0.22837163507938385,0.2283513844013214,0.22833117842674255,0.2283109426498413,0.22829070687294006,0.2282705157995224,0.22825028002262115,0.2282300889492035,0.22820989787578583,0.22818969190120697,0.2281695008277893,0.22814932465553284,0.22812914848327637,0.2281089723110199,0.22808879613876343,0.22806866466999054,0.22804850339889526,0.2280283421278,0.2280081808567047,0.22798804938793182,0.22796790301799774,0.22794778645038605,0.22792766988277435,0.22790755331516266,0.22788742184638977,0.22786732017993927,0.22784721851348877,0.22782711684703827,0.22780701518058777,0.22778692841529846,0.22776685655117035,0.22774678468704224,0.22772672772407532,0.227706640958786,0.22768659889698029,0.22766652703285217,0.22764648497104645,0.22762641310691833,0.227606400847435,0.22758637368679047,0.22756631672382355,0.22754628956317902,0.22752630710601807,0.22750627994537354,0.2274862676858902,0.22746628522872925,0.2274462729692459,0.22742627561092377,0.22740629315376282,0.22738629579544067,0.22736632823944092,0.22734636068344116,0.2273263782262802,0.22730644047260284,0.22728648781776428,0.22726653516292572,0.22724659740924835,0.2272266447544098,0.22720670700073242,0.22718676924705505,0.22716686129570007,0.2271469533443451,0.22712703049182892,0.22710713744163513,0.22708721458911896,0.22706732153892517,0.22704742848873138,0.2270275503396988,0.2270076721906662,0.2269877940416336,0.226967915892601,0.22694805264472961,0.22692817449569702,0.22690831124782562,0.2268884778022766,0.2268686443567276,0.2268487960100174,0.22682896256446838,0.22680912911891937,0.22678931057453156,0.22676949203014374,0.22674967348575592,0.2267298698425293,0.22671006619930267,0.22669026255607605,0.22667047381401062,0.226650670170784,0.22663091123104095,0.22661112248897552,0.2265913337469101,0.22657157480716705,0.2265518307685852,0.22653205692768097,0.22651231288909912,0.22649256885051727,0.22647282481193542,0.22645306587219238,0.22643336653709412,0.22641363739967346,0.2263939082622528,0.22637419402599335,0.2263544648885727,0.22633478045463562,0.22631506621837616,0.2262953668832779,0.22627568244934082,0.22625601291656494,0.22623632848262787,0.2262166440486908,0.22619697451591492,0.22617730498313904,0.22615765035152435,0.22613799571990967,0.22611837089061737,0.22609871625900269,0.2260790765285492,0.2260594367980957,0.2260398119688034,0.2260201871395111,0.22600057721138,0.2259809672832489,0.2259613424539566,0.2259417474269867,0.22592215240001678,0.22590255737304688,0.22588294744491577,0.22586336731910706,0.22584381699562073,0.225824236869812,0.2258046567440033,0.22578512132167816,0.22576555609703064,0.22574599087238312,0.22572645545005798,0.22570689022541046,0.22568736970424652,0.2256678342819214,0.22564831376075745,0.2256287932395935,0.22560928761959076,0.22558975219726562,0.22557026147842407,0.22555075585842133,0.22553125023841858,0.22551175951957703,0.22549228370189667,0.22547279298305511,0.22545333206653595,0.2254338413476944,0.22541439533233643,0.22539493441581726,0.2253754884004593,0.22535601258277893,0.22533656656742096,0.225317120552063,0.2252976894378662,0.22527825832366943,0.22525884211063385,0.22523942589759827,0.2252199947834015,0.2252006083726883,0.22518117725849152,0.22516179084777832,0.22514238953590393,0.22512300312519073,0.22510361671447754,0.22508424520492554,0.22506487369537354,0.22504547238349915,0.22502611577510834,0.22500674426555634,0.22498741745948792,0.2249680608510971,0.2249487042427063,0.22492937743663788,0.22491003572940826,0.22489070892333984,0.22487136721611023,0.224852055311203,0.22483272850513458,0.22481344640254974,0.22479411959648132,0.2247748225927353,0.22475552558898926,0.22473622858524323,0.2247169464826584,0.22469766438007355,0.2246783971786499,0.22465911507606506,0.2246398627758026,0.22462059557437897,0.2246013581752777,0.22458209097385406,0.2245628535747528,0.22454358637332916,0.2245243787765503,0.22450512647628784,0.22448590397834778,0.22446668148040771,0.22444745898246765,0.22442825138568878,0.2244090586900711,0.22438985109329224,0.22437065839767456,0.22435146570205688,0.22433225810527802,0.22431309521198273,0.22429391741752625,0.22427473962306976,0.22425557672977448,0.2242364138364792,0.2242172509431839,0.2241981029510498,0.2241789549589157,0.22415980696678162,0.22414067387580872,0.22412152588367462,0.2241024225950241,0.2240832895040512,0.2240641862154007,0.2240450531244278,0.22402594983577728,0.22400683164596558,0.22398774325847626,0.22396865487098694,0.22394956648349762,0.2239304929971695,0.22391140460968018,0.22389233112335205,0.22387325763702393,0.2238541841506958,0.22383512556552887,0.22381608188152313,0.2237970232963562,0.22377799451351166,0.22375893592834473,0.22373990714550018,0.22372089326381683,0.2237018495798111,0.22368282079696655,0.2236638218164444,0.22364480793476105,0.2236257940530777,0.22360679507255554],"x":[3.0,3.0033986405437827,3.006797281087565,3.0101959216313476,3.01359456217513,3.0169932027189126,3.020391843262695,3.0237904838064775,3.0271891243502598,3.0305877648940425,3.0339864054378247,3.0373850459816074,3.0407836865253897,3.0441823270691724,3.0475809676129546,3.0509796081567373,3.05437824870052,3.0577768892443022,3.061175529788085,3.064574170331867,3.06797281087565,3.071371451419432,3.074770091963215,3.078168732506997,3.0815673730507798,3.084966013594562,3.0883646541383447,3.091763294682127,3.0951619352259097,3.098560575769692,3.1019592163134746,3.1053578568572573,3.1087564974010395,3.1121551379448222,3.1155537784886045,3.118952419032387,3.1223510595761694,3.125749700119952,3.1291483406637344,3.132546981207517,3.1359456217512993,3.139344262295082,3.1427429028388643,3.146141543382647,3.1495401839264296,3.152938824470212,3.1563374650139946,3.159736105557777,3.1631347461015595,3.166533386645342,3.1699320271891245,3.1733306677329067,3.1767293082766894,3.1801279488204717,3.1835265893642544,3.1869252299080366,3.1903238704518193,3.1937225109956016,3.1971211515393843,3.200519792083167,3.203918432626949,3.207317073170732,3.210715713714514,3.214114354258297,3.217512994802079,3.220911635345862,3.224310275889644,3.2277089164334267,3.231107556977209,3.2345061975209917,3.237904838064774,3.2413034786085566,3.244702119152339,3.2481007596961216,3.2514994002399042,3.2548980407836865,3.258296681327469,3.2616953218712514,3.265093962415034,3.2684926029588164,3.271891243502599,3.2752898840463813,3.278688524590164,3.2820871651339463,3.285485805677729,3.288884446221511,3.292283086765294,3.295681727309076,3.299080367852859,3.3024790083966415,3.305877648940424,3.3092762894842065,3.3126749300279887,3.3160735705717714,3.3194722111155537,3.3228708516593364,3.3262694922031186,3.3296681327469013,3.3330667732906836,3.3364654138344663,3.3398640543782485,3.343262694922031,3.3466613354658135,3.350059976009596,3.353458616553379,3.356857257097161,3.360255897640944,3.363654538184726,3.3670531787285087,3.370451819272291,3.3738504598160737,3.377249100359856,3.3806477409036386,3.384046381447421,3.3874450219912036,3.390843662534986,3.3942423030787685,3.3976409436225508,3.4010395841663335,3.404438224710116,3.4078368652538984,3.411235505797681,3.4146341463414633,3.418032786885246,3.4214314274290283,3.424830067972811,3.4282287085165932,3.431627349060376,3.435025989604158,3.438424630147941,3.441823270691723,3.445221911235506,3.4486205517792885,3.4520191923230708,3.4554178328668534,3.4588164734106357,3.4622151139544184,3.4656137544982006,3.4690123950419833,3.4724110355857656,3.4758096761295483,3.4792083166733305,3.482606957217113,3.4860055977608955,3.489404238304678,3.4928028788484604,3.496201519392243,3.499600159936026,3.502998800479808,3.5063974410235907,3.509796081567373,3.5131947221111557,3.516593362654938,3.5199920031987206,3.523390643742503,3.5267892842862856,3.530187924830068,3.5335865653738505,3.5369852059176328,3.5403838464614155,3.5437824870051977,3.5471811275489804,3.550579768092763,3.5539784086365453,3.557377049180328,3.5607756897241103,3.564174330267893,3.5675729708116752,3.570971611355458,3.57437025189924,3.577768892443023,3.581167532986805,3.584566173530588,3.58796481407437,3.5913634546181528,3.594762095161935,3.5981607357057177,3.6015593762495004,3.6049580167932826,3.6083566573370653,3.6117552978808476,3.6151539384246303,3.6185525789684125,3.6219512195121952,3.6253498600559775,3.62874850059976,3.6321471411435424,3.635545781687325,3.6389444222311074,3.64234306277489,3.6457417033186723,3.649140343862455,3.6525389844062377,3.65593762495002,3.6593362654938026,3.662734906037585,3.6661335465813676,3.66953218712515,3.6729308276689325,3.676329468212715,3.6797281087564975,3.6831267493002797,3.6865253898440624,3.6899240303878447,3.6933226709316274,3.69672131147541,3.7001199520191923,3.703518592562975,3.7069172331067572,3.71031587365054,3.713714514194322,3.717113154738105,3.720511795281887,3.72391043582567,3.727309076369452,3.7307077169132348,3.734106357457017,3.7375049980007997,3.740903638544582,3.7443022790883647,3.7477009196321474,3.7510995601759296,3.7544982007197123,3.7578968412634945,3.7612954818072772,3.7646941223510595,3.768092762894842,3.7714914034386244,3.774890043982407,3.7782886845261894,3.781687325069972,3.7850859656137543,3.788484606157537,3.7918832467013193,3.795281887245102,3.7986805277888847,3.802079168332667,3.8054778088764496,3.808876449420232,3.8122750899640145,3.815673730507797,3.8190723710515795,3.8224710115953617,3.8258696521391444,3.8292682926829267,3.8326669332267094,3.8360655737704916,3.8394642143142743,3.8428628548580566,3.8462614954018393,3.849660135945622,3.853058776489404,3.856457417033187,3.859856057576969,3.863254698120752,3.866653338664534,3.870051979208317,3.873450619752099,3.8768492602958817,3.880247900839664,3.8836465413834467,3.887045181927229,3.8904438224710116,3.893842463014794,3.8972411035585766,3.9006397441023593,3.9040383846461415,3.907437025189924,3.9108356657337064,3.914234306277489,3.9176329468212714,3.921031587365054,3.9244302279088363,3.927828868452619,3.9312275089964013,3.934626149540184,3.938024790083966,3.941423430627749,3.9448220711715316,3.948220711715314,3.9516193522590966,3.955017992802879,3.9584166333466615,3.9618152738904437,3.9652139144342264,3.9686125549780087,3.9720111955217914,3.9754098360655736,3.9788084766093563,3.9822071171531386,3.9856057576969213,3.9890043982407035,3.992403038784486,3.995801679328269,3.999200319872051,4.002598960415834,4.005997600959616,4.009396241503398,4.0127948820471815,4.016193522590964,4.019592163134746,4.022990803678528,4.026389444222311,4.029788084766094,4.033186725309876,4.036585365853658,4.039984006397441,4.0433826469412235,4.046781287485006,4.050179928028789,4.053578568572571,4.056977209116353,4.060375849660136,4.063774490203919,4.067173130747701,4.070571771291483,4.0739704118352655,4.077369052379049,4.080767692922831,4.084166333466613,4.087564974010395,4.090963614554179,4.094362255097961,4.097760895641743,4.101159536185526,4.1045581767293084,4.107956817273091,4.111355457816873,4.114754098360656,4.118152738904438,4.121551379448221,4.124950019992003,4.128348660535786,4.131747301079568,4.1351459416233505,4.138544582167133,4.141943222710916,4.145341863254698,4.14874050379848,4.1521391443422635,4.155537784886046,4.158936425429828,4.16233506597361,4.165733706517393,4.169132347061176,4.172530987604958,4.17592962814874,4.179328268692523,4.1827269092363055,4.186125549780088,4.18952419032387,4.192922830867653,4.196321471411435,4.199720111955218,4.203118752499001,4.206517393042783,4.209916033586565,4.2133146741303475,4.216713314674131,4.220111955217913,4.223510595761695,4.226909236305477,4.230307876849261,4.233706517393043,4.237105157936825,4.240503798480607,4.2439024390243905,4.247301079568173,4.250699720111955,4.254098360655738,4.25749700119952,4.260895641743303,4.264294282287085,4.267692922830868,4.27109156337465,4.2744902039184325,4.277888844462215,4.281287485005998,4.28468612554978,4.288084766093562,4.291483406637345,4.294882047181128,4.29828068772491,4.301679328268692,4.305077968812475,4.308476609356258,4.31187524990004,4.315273890443822,4.318672530987605,4.3220711715313875,4.32546981207517,4.328868452618952,4.332267093162735,4.335665733706517,4.3390643742503,4.342463014794083,4.345861655337865,4.349260295881647,4.35265893642543,4.356057576969213,4.359456217512995,4.362854858056777,4.3662534986005594,4.369652139144343,4.373050779688125,4.376449420231907,4.379848060775689,4.3832467013194725,4.386645341863255,4.390043982407037,4.39344262295082,4.396841263494602,4.400239904038385,4.403638544582167,4.40703718512595,4.410435825669732,4.4138344662135145,4.417233106757297,4.42063174730108,4.424030387844862,4.427429028388644,4.430827668932427,4.43422630947621,4.437624950019992,4.441023590563774,4.444422231107557,4.44782087165134,4.451219512195122,4.454618152738904,4.458016793282687,4.4614154338264695,4.464814074370252,4.468212714914034,4.471611355457817,4.475009996001599,4.478408636545382,4.481807277089164,4.485205917632947,4.488604558176729,4.492003198720512,4.495401839264295,4.498800479808077,4.502199120351859,4.5055977608956415,4.508996401439425,4.512395041983207,4.515793682526989,4.519192323070771,4.5225909636145545,4.525989604158337,4.529388244702119,4.532786885245901,4.536185525789684,4.539584166333467,4.542982806877249,4.546381447421032,4.549780087964814,4.5531787285085965,4.556577369052379,4.559976009596162,4.563374650139944,4.566773290683726,4.570171931227509,4.573570571771292,4.576969212315074,4.580367852858856,4.5837664934026385,4.587165133946422,4.590563774490204,4.593962415033986,4.597361055577769,4.600759696121552,4.604158336665334,4.607556977209116,4.610955617752899,4.614354258296681,4.617752898840464,4.621151539384246,4.624550179928029,4.627948820471811,4.631347461015594,4.634746101559376,4.638144742103159,4.641543382646941,4.6449420231907235,4.648340663734507,4.651739304278289,4.655137944822071,4.658536585365853,4.6619352259096365,4.665333866453419,4.668732506997201,4.672131147540983,4.675529788084766,4.678928428628549,4.682327069172331,4.685725709716113,4.689124350259896,4.6925229908036785,4.695921631347461,4.699320271891244,4.702718912435026,4.706117552978808,4.709516193522591,4.712914834066374,4.716313474610156,4.719712115153938,4.7231107556977205,4.726509396241504,4.729908036785286,4.733306677329068,4.73670531787285,4.740103958416634,4.743502598960416,4.746901239504198,4.750299880047981,4.7536985205917635,4.757097161135546,4.760495801679328,4.763894442223111,4.767293082766893,4.770691723310676,4.774090363854458,4.777489004398241,4.780887644942023,4.7842862854858055,4.787684926029588,4.791083566573371,4.794482207117153,4.797880847660935,4.8012794882047185,4.804678128748501,4.808076769292283,4.811475409836065,4.814874050379848,4.818272690923631,4.821671331467413,4.825069972011195,4.828468612554978,4.8318672530987605,4.835265893642543,4.838664534186325,4.842063174730108,4.84546181527389,4.848860455817673,4.852259096361456,4.855657736905238,4.85905637744902,4.8624550179928026,4.865853658536586,4.869252299080368,4.87265093962415,4.876049580167932,4.879448220711716,4.882846861255498,4.88624550179928,4.889644142343063,4.8930427828868455,4.896441423430628,4.89984006397441,4.903238704518193,4.906637345061975,4.910035985605758,4.91343462614954,4.916833266693323,4.920231907237105,4.9236305477808875,4.92702918832467,4.930427828868453,4.933826469412235,4.937225109956017,4.9406237504998005,4.944022391043583,4.947421031587365,4.950819672131147,4.95421831267493,4.957616953218713,4.961015593762495,4.964414234306277,4.96781287485006,4.9712115153938425,4.974610155937625,4.978008796481407,4.98140743702519,4.984806077568972,4.988204718112755,4.991603358656538,4.99500199920032,4.998400639744102,5.001799280287885,5.005197920831668,5.00859656137545,5.011995201919232,5.0153938424630145,5.018792483006798,5.02219112355058,5.025589764094362,5.028988404638144,5.0323870451819275,5.03578568572571,5.039184326269492,5.042582966813275,5.045981607357057,5.04938024790084,5.052778888444622,5.056177528988405,5.059576169532187,5.0629748100759695,5.066373450619752,5.069772091163535,5.073170731707317,5.076569372251099,5.079968012794882,5.083366653338665,5.086765293882447,5.090163934426229,5.093562574970012,5.096961215513795,5.100359856057577,5.103758496601359,5.107157137145142,5.1105557776889246,5.113954418232707,5.117353058776489,5.120751699320272,5.124150339864054,5.127548980407837,5.130947620951619,5.134346261495402,5.137744902039184,5.141143542582967,5.14454218312675,5.147940823670532,5.151339464214314,5.1547381047580965,5.15813674530188,5.161535385845662,5.164934026389444,5.168332666933226,5.1717313074770095,5.175129948020792,5.178528588564574,5.181927229108356,5.185325869652139,5.188724510195922,5.192123150739704,5.195521791283487,5.198920431827269,5.2023190723710515,5.205717712914834,5.209116353458617,5.212514994002399,5.215913634546181,5.219312275089964,5.222710915633747,5.226109556177529,5.229508196721311,5.2329068372650935,5.236305477808877,5.239704118352659,5.243102758896441,5.246501399440224,5.249900039984007,5.253298680527789,5.256697321071571,5.260095961615354,5.2634946021591364,5.266893242702919,5.270291883246701,5.273690523790484,5.277089164334266,5.280487804878049,5.283886445421831,5.287285085965614,5.290683726509396,5.2940823670531785,5.297481007596962,5.300879648140744,5.304278288684526,5.307676929228308,5.3110755697720915,5.314474210315874,5.317872850859656,5.321271491403438,5.324670131947221,5.328068772491004,5.331467413034786,5.334866053578568,5.338264694122351,5.3416633346661335,5.345061975209916,5.348460615753699,5.351859256297481,5.355257896841263,5.358656537385046,5.362055177928829,5.365453818472611,5.368852459016393,5.3722510995601755,5.375649740103959,5.379048380647741,5.382447021191523,5.385845661735305,5.389244302279089,5.392642942822871,5.396041583366653,5.399440223910436,5.4028388644542185,5.406237504998001,5.409636145541783,5.413034786085566,5.416433426629348,5.419832067173131,5.423230707716913,5.426629348260696,5.430027988804478,5.4334266293482605,5.436825269892044,5.440223910435826,5.443622550979608,5.44702119152339,5.4504198320671735,5.453818472610956,5.457217113154738,5.46061575369852,5.464014394242303,5.467413034786086,5.470811675329868,5.47421031587365,5.477608956417433,5.4810075969612155,5.484406237504998,5.487804878048781,5.491203518592563,5.494602159136345,5.498000799680128,5.501399440223911,5.504798080767693,5.508196721311475,5.511595361855258,5.514994002399041,5.518392642942823,5.521791283486605,5.5251899240303874,5.528588564574171,5.531987205117953,5.535385845661735,5.538784486205518,5.5421831267493005,5.545581767293083,5.548980407836865,5.552379048380648,5.55577768892443,5.559176329468213,5.562574970011995,5.565973610555778,5.56937225109956,5.5727708916433425,5.576169532187125,5.579568172730908,5.58296681327469,5.586365453818472,5.5897640943622555,5.593162734906038,5.59656137544982,5.599960015993602,5.603358656537385,5.606757297081168,5.61015593762495,5.613554578168732,5.616953218712515,5.6203518592562975,5.62375049980008,5.627149140343862,5.630547780887645,5.633946421431427,5.63734506197521,5.640743702518993,5.644142343062775,5.647540983606557,5.65093962415034,5.654338264694123,5.657736905237905,5.661135545781687,5.6645341863254695,5.667932826869253,5.671331467413035,5.674730107956817,5.678128748500599,5.6815273890443825,5.684926029588165,5.688324670131947,5.69172331067573,5.695121951219512,5.698520591763295,5.701919232307077,5.70531787285086,5.708716513394642,5.7121151539384245,5.715513794482207,5.71891243502599,5.722311075569772,5.725709716113554,5.729108356657337,5.73250699720112,5.735905637744902,5.739304278288684,5.742702918832467,5.74610155937625,5.749500199920032,5.752898840463814,5.756297481007597,5.7596961215513796,5.763094762095162,5.766493402638944,5.769892043182727,5.773290683726509,5.776689324270292,5.780087964814074,5.783486605357857,5.786885245901639,5.790283886445422,5.793682526989205,5.797081167532987,5.800479808076769,5.8038784486205515,5.807277089164335,5.810675729708117,5.814074370251899,5.817473010795681,5.8208716513394645,5.824270291883247,5.827668932427029,5.831067572970811,5.834466213514594,5.837864854058377,5.841263494602159,5.844662135145942,5.848060775689724,5.8514594162335065,5.854858056777289,5.858256697321072,5.861655337864854,5.865053978408636,5.868452618952419,5.871851259496202,5.875249900039984,5.878648540583766,5.8820471811275485,5.885445821671332,5.888844462215114,5.892243102758896,5.895641743302679,5.899040383846462,5.902439024390244,5.905837664934026,5.909236305477809,5.9126349460215915,5.916033586565374,5.919432227109156,5.922830867652939,5.926229508196721,5.929628148740504,5.933026789284287,5.936425429828069,5.939824070371851,5.9432227109156335,5.946621351459417,5.950019992003199,5.953418632546981,5.956817273090763,5.9602159136345465,5.963614554178329,5.967013194722111,5.970411835265893,5.973810475809676,5.977209116353459,5.980607756897241,5.984006397441024,5.987405037984806,5.9908036785285885,5.994202319072371,5.997600959616154,6.000999600159936,6.004398240703718,6.007796881247501,6.011195521791284,6.014594162335066,6.017992802878848,6.0213914434226306,6.024790083966414,6.028188724510196,6.031587365053978,6.034986005597761,6.038384646141544,6.041783286685326,6.045181927229108,6.048580567772891,6.0519792083166735,6.055377848860456,6.058776489404238,6.062175129948021,6.065573770491803,6.068972411035586,6.072371051579368,6.075769692123151,6.079168332666933,6.0825669732107155,6.085965613754499,6.089364254298281,6.092762894842063,6.096161535385845,6.0995601759296285,6.102958816473411,6.106357457017193,6.109756097560975,6.113154738104758,6.116553378648541,6.119952019192323,6.123350659736105,6.126749300279888,6.1301479408236705,6.133546581367453,6.136945221911236,6.140343862455018,6.1437425029988,6.147141143542583,6.150539784086366,6.153938424630148,6.15733706517393,6.160735705717713,6.164134346261496,6.167532986805278,6.17093162734906,6.1743302678928424,6.177728908436626,6.181127548980408,6.18452618952419,6.187924830067973,6.1913234706117555,6.194722111155538,6.19812075169932,6.201519392243103,6.204918032786885,6.208316673330668,6.21171531387445,6.215113954418233,6.218512594962015,6.2219112355057975,6.22530987604958,6.228708516593363,6.232107157137145,6.235505797680927,6.2389044382247105,6.242303078768493,6.245701719312275,6.249100359856057,6.25249900039984,6.255897640943623,6.259296281487405,6.262694922031187,6.26609356257497,6.2694922031187525,6.272890843662535,6.276289484206317,6.2796881247501,6.283086765293882,6.286485405837665,6.289884046381448,6.29328268692523,6.296681327469012,6.300079968012795,6.303478608556578,6.30687724910036,6.310275889644142,6.3136745301879245,6.317073170731708,6.32047181127549,6.323870451819272,6.327269092363054,6.3306677329068375,6.33406637345062,6.337465013994402,6.340863654538185,6.344262295081967,6.34766093562575,6.351059576169532,6.354458216713315,6.357856857257097,6.3612554978008795,6.364654138344662,6.368052778888445,6.371451419432227,6.374850059976009,6.378248700519792,6.381647341063575,6.385045981607357,6.388444622151139,6.391843262694922,6.395241903238705,6.398640543782487,6.402039184326269,6.405437824870052,6.408836465413835,6.412235105957617,6.415633746501399,6.419032387045182,6.4224310275889644,6.425829668132747,6.429228308676529,6.432626949220312,6.436025589764094,6.439424230307877,6.44282287085166,6.446221511395442,6.449620151939224,6.4530187924830065,6.45641743302679,6.459816073570572,6.463214714114354,6.466613354658136,6.4700119952019195,6.473410635745702,6.476809276289484,6.480207916833267,6.483606557377049,6.487005197920832,6.490403838464614,6.493802479008397,6.497201119552179,6.5005997600959615,6.503998400639744,6.507397041183527,6.510795681727309,6.514194322271091,6.517592962814874,6.520991603358657,6.524390243902439,6.527788884446221,6.531187524990004,6.534586165533787,6.537984806077569,6.541383446621351,6.544782087165134,6.548180727708917,6.551579368252699,6.554978008796481,6.558376649340264,6.5617752898840465,6.565173930427829,6.568572570971611,6.571971211515394,6.575369852059176,6.578768492602959,6.582167133146742,6.585565773690524,6.588964414234306,6.5923630547780885,6.595761695321872,6.599160335865654,6.602558976409436,6.605957616953218,6.6093562574970015,6.612754898040784,6.616153538584566,6.619552179128348,6.622950819672131,6.626349460215914,6.629748100759696,6.633146741303479,6.636545381847261,6.6399440223910435,6.643342662934826,6.646741303478609,6.650139944022391,6.653538584566173,6.656937225109956,6.660335865653739,6.663734506197521,6.667133146741303,6.670531787285086,6.673930427828869,6.677329068372651,6.680727708916433,6.684126349460216,6.687524990003999,6.690923630547781,6.694322271091563,6.697720911635346,6.7011195521791285,6.704518192722911,6.707916833266693,6.711315473810476,6.714714114354258,6.718112754898041,6.721511395441823,6.724910035985606,6.728308676529388,6.7317073170731705,6.735105957616954,6.738504598160736,6.741903238704518,6.7453018792483,6.7487005197920835,6.752099160335866,6.755497800879648,6.75889644142343,6.762295081967213,6.765693722510996,6.769092363054778,6.77249100359856,6.775889644142343,6.7792882846861255,6.782686925229908,6.786085565773691,6.789484206317473,6.792882846861255,6.796281487405038,6.799680127948821,6.803078768492603,6.806477409036385,6.809876049580168,6.813274690123951,6.816673330667733,6.820071971211515,6.8234706117552975,6.826869252299081,6.830267892842863,6.833666533386645,6.837065173930428,6.8404638144742105,6.843862455017993,6.847261095561775,6.850659736105558,6.85405837664934,6.857457017193123,6.860855657736905,6.864254298280688,6.86765293882447,6.8710515793682525,6.874450219912035,6.877848860455818,6.8812475009996,6.884646141543382,6.8880447820871655,6.891443422630948,6.89484206317473,6.898240703718512,6.901639344262295,6.905037984806078,6.90843662534986,6.911835265893642,6.915233906437425,6.9186325469812076,6.92203118752499,6.925429828068772,6.928828468612555,6.932227109156337,6.93562574970012,6.939024390243903,6.942423030787685,6.945821671331467,6.94922031187525,6.952618952419033,6.956017592962815,6.959416233506597,6.9628148740503795,6.966213514594163,6.969612155137945,6.973010795681727,6.976409436225509,6.9798080767692925,6.983206717313075,6.986605357856857,6.99000399840064,6.993402638944422,6.996801279488205,7.000199920031987,7.00359856057577,7.006997201119552,7.0103958416633345,7.013794482207117,7.0171931227509,7.020591763294682,7.023990403838464,7.0273890443822475,7.03078768492603,7.034186325469812,7.037584966013594,7.040983606557377,7.04438224710116,7.047780887644942,7.051179528188724,7.054578168732507,7.05797680927629,7.061375449820072,7.064774090363854,7.068172730907637,7.0715713714514195,7.074970011995202,7.078368652538985,7.081767293082767,7.085165933626549,7.088564574170332,7.091963214714115,7.095361855257897,7.098760495801679,7.1021591363454615,7.105557776889245,7.108956417433027,7.112355057976809,7.115753698520591,7.1191523390643745,7.122550979608157,7.125949620151939,7.129348260695722,7.132746901239504,7.136145541783287,7.139544182327069,7.142942822870852,7.146341463414634,7.1497401039584165,7.153138744502199,7.156537385045982,7.159936025589764,7.163334666133546,7.166733306677329,7.170131947221112,7.173530587764894,7.176929228308676,7.180327868852459,7.183726509396242,7.187125149940024,7.190523790483806,7.193922431027589,7.197321071571372,7.200719712115154,7.204118352658936,7.207516993202719,7.2109156337465015,7.214314274290284,7.217712914834066,7.221111555377849,7.224510195921631,7.227908836465414,7.231307477009197,7.234706117552979,7.238104758096761,7.2415033986405435,7.244902039184327,7.248300679728109,7.251699320271891,7.255097960815673,7.2584966013594565,7.261895241903239,7.265293882447021,7.268692522990803,7.272091163534586,7.275489804078369,7.278888444622151,7.282287085165934,7.285685725709716,7.2890843662534985,7.292483006797281,7.295881647341064,7.299280287884846,7.302678928428628,7.306077568972411,7.309476209516194,7.312874850059976,7.316273490603758,7.319672131147541,7.323070771691324,7.326469412235106,7.329868052778888,7.333266693322671,7.336665333866454,7.340063974410236,7.343462614954018,7.346861255497801,7.3502598960415835,7.353658536585366,7.357057177129148,7.360455817672931,7.363854458216713,7.367253098760496,7.370651739304278,7.374050379848061,7.377449020391843,7.3808476609356255,7.384246301479409,7.387644942023191,7.391043582566973,7.394442223110755,7.3978408636545385,7.401239504198321,7.404638144742103,7.408036785285885,7.411435425829668,7.414834066373451,7.418232706917233,7.421631347461015,7.425029988004798,7.4284286285485805,7.431827269092363,7.435225909636146,7.438624550179928,7.44202319072371,7.445421831267493,7.448820471811276,7.452219112355058,7.45561775289884,7.459016393442623,7.462415033986406,7.465813674530188,7.46921231507397,7.4726109556177525,7.476009596161536,7.479408236705318,7.4828068772491,7.486205517792883,7.4896041583366655,7.493002798880448,7.49640143942423,7.499800079968013,7.503198720511795,7.506597361055578,7.50999600159936,7.513394642143143,7.516793282686925,7.5201919232307075,7.523590563774491,7.526989204318273,7.530387844862055,7.533786485405837,7.5371851259496205,7.540583766493403,7.543982407037185,7.547381047580967,7.55077968812475,7.554178328668533,7.557576969212315,7.560975609756097,7.56437425029988,7.567772890843663,7.571171531387445,7.574570171931228,7.57796881247501,7.5813674530187924,7.584766093562575,7.588164734106358,7.59156337465014,7.594962015193922,7.598360655737705,7.601759296281488,7.60515793682527,7.608556577369052,7.6119552179128345,7.615353858456618,7.6187524990004,7.622151139544182,7.625549780087965,7.6289484206317475,7.63234706117553,7.635745701719312,7.639144342263095,7.642542982806877,7.64594162335066,7.649340263894442,7.652738904438225,7.656137544982007,7.6595361855257895,7.662934826069572,7.666333466613355,7.669732107157137,7.673130747700919,7.6765293882447025,7.679928028788485,7.683326669332267,7.686725309876049,7.690123950419832,7.693522590963615,7.696921231507397,7.700319872051179,7.703718512594962,7.707117153138745,7.710515793682527,7.713914434226309,7.717313074770092,7.7207117153138745,7.724110355857657,7.72750899640144,7.730907636945222,7.734306277489004,7.737704918032787,7.74110355857657,7.744502199120352,7.747900839664134,7.7512994802079165,7.7546981207517,7.758096761295482,7.761495401839264,7.764894042383046,7.7682926829268295,7.771691323470612,7.775089964014394,7.778488604558177,7.781887245101959,7.785285885645742,7.788684526189524,7.792083166733307,7.795481807277089,7.7988804478208715,7.802279088364654,7.805677728908437,7.809076369452219,7.812475009996001,7.815873650539784,7.819272291083567,7.822670931627349,7.826069572171131,7.829468212714914,7.832866853258697,7.836265493802479,7.839664134346261,7.843062774890044,7.846461415433827,7.849860055977609,7.853258696521391,7.856657337065174,7.8600559776089565,7.863454618152739,7.866853258696521,7.870251899240304,7.873650539784086,7.877049180327869,7.880447820871652,7.883846461415434,7.887245101959216,7.8906437425029985,7.894042383046782,7.897441023590564,7.900839664134346,7.904238304678128,7.9076369452219115,7.911035585765694,7.914434226309476,7.917832866853258,7.921231507397041,7.924630147940824,7.928028788484606,7.931427429028389,7.934826069572171,7.9382247101159535,7.941623350659736,7.945021991203519,7.948420631747301,7.951819272291083,7.955217912834866,7.958616553378649,7.962015193922431,7.965413834466213,7.968812475009996,7.972211115553779,7.975609756097561,7.979008396641343,7.982407037185126,7.985805677728909,7.989204318272691,7.992602958816473,7.996001599360256,7.9994002399040385,8.002798880447822,8.006197520991604,8.009596161535386,8.012994802079168,8.01639344262295,8.019792083166733,8.023190723710515,8.0265893642543,8.029988004798081,8.033386645341864,8.036785285885646,8.040183926429428,8.04358256697321,8.046981207516993,8.050379848060775,8.053778488604559,8.057177129148341,8.060575769692123,8.063974410235906,8.067373050779688,8.07077169132347,8.074170331867252,8.077568972411036,8.080967612954819,8.084366253498601,8.087764894042383,8.091163534586165,8.094562175129948,8.09796081567373,8.101359456217512,8.104758096761296,8.108156737305078,8.11155537784886,8.114954018392643,8.118352658936425,8.121751299480207,8.12514994002399,8.128548580567774,8.131947221111556,8.135345861655338,8.13874450219912,8.142143142742903,8.145541783286685,8.148940423830467,8.15233906437425,8.155737704918034,8.159136345461816,8.162534986005598,8.16593362654938,8.169332267093163,8.172730907636945,8.176129548180727,8.179528188724511,8.182926829268293,8.186325469812076,8.189724110355858,8.19312275089964,8.196521391443422,8.199920031987205,8.203318672530987,8.20671731307477,8.210115953618553,8.213514594162335,8.216913234706118,8.2203118752499,8.223710515793682,8.227109156337464,8.230507796881248,8.23390643742503,8.237305077968813,8.240703718512595,8.244102359056377,8.24750099960016,8.250899640143942,8.254298280687724,8.257696921231508,8.26109556177529,8.264494202319073,8.267892842862855,8.271291483406637,8.27469012395042,8.278088764494202,8.281487405037986,8.284886045581768,8.28828468612555,8.291683326669332,8.295081967213115,8.298480607756897,8.30187924830068,8.305277888844461,8.308676529388245,8.312075169932028,8.31547381047581,8.318872451019592,8.322271091563374,8.325669732107157,8.329068372650939,8.332467013194723,8.335865653738505,8.339264294282287,8.34266293482607,8.346061575369852,8.349460215913634,8.352858856457416,8.356257497001199,8.359656137544983,8.363054778088765,8.366453418632547,8.36985205917633,8.373250699720112,8.376649340263894,8.380047980807676,8.38344662135146,8.386845261895242,8.390243902439025,8.393642542982807,8.39704118352659,8.400439824070371,8.403838464614154,8.407237105157936,8.41063574570172,8.414034386245502,8.417433026789285,8.420831667333067,8.424230307876849,8.427628948420631,8.431027588964414,8.434426229508198,8.43782487005198,8.441223510595762,8.444622151139544,8.448020791683327,8.451419432227109,8.454818072770891,8.458216713314673,8.461615353858457,8.46501399440224,8.468412634946022,8.471811275489804,8.475209916033586,8.478608556577369,8.48200719712115,8.485405837664935,8.488804478208717,8.4922031187525,8.495601759296282,8.499000399840064,8.502399040383846,8.505797680927628,8.50919632147141,8.512594962015195,8.515993602558977,8.519392243102759,8.522790883646541,8.526189524190324,8.529588164734106,8.532986805277888,8.536385445821672,8.539784086365454,8.543182726909237,8.546581367453019,8.549980007996801,8.553378648540583,8.556777289084366,8.560175929628148,8.563574570171932,8.566973210715714,8.570371851259496,8.573770491803279,8.577169132347061,8.580567772890843,8.583966413434625,8.58736505397841,8.590763694522192,8.594162335065974,8.597560975609756,8.600959616153538,8.60435825669732,8.607756897241103,8.611155537784885,8.61455417832867,8.617952818872451,8.621351459416234,8.624750099960016,8.628148740503798,8.63154738104758,8.634946021591363,8.638344662135147,8.641743302678929,8.645141943222711,8.648540583766493,8.651939224310276,8.655337864854058,8.65873650539784,8.662135145941622,8.665533786485407,8.668932427029189,8.672331067572971,8.675729708116753,8.679128348660536,8.682526989204318,8.6859256297481,8.689324270291884,8.692722910835666,8.696121551379449,8.69952019192323,8.702918832467013,8.706317473010795,8.709716113554578,8.71311475409836,8.716513394642144,8.719912035185926,8.723310675729708,8.72670931627349,8.730107956817273,8.733506597361055,8.736905237904837,8.740303878448621,8.743702518992404,8.747101159536186,8.750499800079968,8.75389844062375,8.757297081167533,8.760695721711315,8.764094362255097,8.767493002798881,8.770891643342663,8.774290283886446,8.777688924430228,8.78108756497401,8.784486205517792,8.787884846061575,8.791283486605359,8.79468212714914,8.798080767692923,8.801479408236705,8.804878048780488,8.80827668932427,8.811675329868052,8.815073970411834,8.818472610955618,8.8218712514994,8.825269892043183,8.828668532586965,8.832067173130747,8.83546581367453,8.838864454218312,8.842263094762096,8.845661735305878,8.84906037584966,8.852459016393443,8.855857656937225,8.859256297481007,8.86265493802479,8.866053578568573,8.869452219112356,8.872850859656138,8.87624950019992,8.879648140743702,8.883046781287485,8.886445421831267,8.88984406237505,8.893242702918833,8.896641343462615,8.900039984006398,8.90343862455018,8.906837265093962,8.910235905637744,8.913634546181527,8.91703318672531,8.920431827269093,8.923830467812875,8.927229108356658,8.93062774890044,8.934026389444222,8.937425029988004,8.940823670531787,8.94422231107557,8.947620951619353,8.951019592163135,8.954418232706917,8.9578168732507,8.961215513794482,8.964614154338264,8.968012794882048,8.97141143542583,8.974810075969613,8.978208716513395,8.981607357057177,8.98500599760096,8.988404638144742,8.991803278688524,8.995201919232308,8.99860055977609,9.001999200319872,9.005397840863655,9.008796481407437,9.012195121951219,9.015593762495001,9.018992403038785,9.022391043582568,9.02578968412635,9.029188324670132,9.032586965213914,9.035985605757697,9.039384246301479,9.042782886845261,9.046181527389045,9.049580167932827,9.05297880847661,9.056377449020392,9.059776089564174,9.063174730107956,9.066573370651739,9.069972011195523,9.073370651739305,9.076769292283087,9.08016793282687,9.083566573370652,9.086965213914434,9.090363854458216,9.093762495001998,9.097161135545782,9.100559776089565,9.103958416633347,9.10735705717713,9.110755697720911,9.114154338264694,9.117552978808476,9.12095161935226,9.124350259896042,9.127748900439824,9.131147540983607,9.134546181527389,9.137944822071171,9.141343462614953,9.144742103158736,9.14814074370252,9.151539384246302,9.154938024790084,9.158336665333866,9.161735305877649,9.165133946421431,9.168532586965213,9.171931227508997,9.17532986805278,9.178728508596562,9.182127149140344,9.185525789684126,9.188924430227909,9.19232307077169,9.195721711315473,9.199120351859257,9.20251899240304,9.205917632946822,9.209316273490604,9.212714914034386,9.216113554578168,9.21951219512195,9.222910835665735,9.226309476209517,9.229708116753299,9.233106757297081,9.236505397840864,9.239904038384646,9.243302678928428,9.24670131947221,9.250099960015994,9.253498600559777,9.256897241103559,9.260295881647341,9.263694522191123,9.267093162734906,9.270491803278688,9.273890443822472,9.277289084366254,9.280687724910036,9.284086365453819,9.2874850059976,9.290883646541383,9.294282287085165,9.297680927628948,9.301079568172732,9.304478208716514,9.307876849260296,9.311275489804078,9.31467413034786,9.318072770891643,9.321471411435425,9.32487005197921,9.328268692522991,9.331667333066774,9.335065973610556,9.338464614154338,9.34186325469812,9.345261895241903,9.348660535785685,9.352059176329469,9.355457816873251,9.358856457417033,9.362255097960816,9.365653738504598,9.36905237904838,9.372451019592162,9.375849660135946,9.379248300679729,9.382646941223511,9.386045581767293,9.389444222311075,9.392842862854858,9.39624150339864,9.399640143942422,9.403038784486206,9.406437425029988,9.40983606557377,9.413234706117553,9.416633346661335,9.420031987205117,9.4234306277489,9.426829268292684,9.430227908836466,9.433626549380248,9.43702518992403,9.440423830467813,9.443822471011595,9.447221111555377,9.45061975209916,9.454018392642944,9.457417033186726,9.460815673730508,9.46421431427429,9.467612954818073,9.471011595361855,9.474410235905637,9.477808876449421,9.481207516993203,9.484606157536986,9.488004798080768,9.49140343862455,9.494802079168332,9.498200719712115,9.501599360255897,9.50499800079968,9.508396641343463,9.511795281887245,9.515193922431028,9.51859256297481,9.521991203518592,9.525389844062374,9.528788484606158,9.53218712514994,9.535585765693723,9.538984406237505,9.542383046781287,9.54578168732507,9.549180327868852,9.552578968412634,9.555977608956418,9.5593762495002,9.562774890043983,9.566173530587765,9.569572171131547,9.57297081167533,9.576369452219112,9.579768092762896,9.583166733306678,9.58656537385046,9.589964014394242,9.593362654938025,9.596761295481807,9.60015993602559,9.603558576569371,9.606957217113155,9.610355857656938,9.61375449820072,9.617153138744502,9.620551779288284,9.623950419832067,9.627349060375849,9.630747700919633,9.634146341463415,9.637544982007197,9.64094362255098,9.644342263094762,9.647740903638544,9.651139544182326,9.654538184726109,9.657936825269893,9.661335465813675,9.664734106357457,9.66813274690124,9.671531387445022,9.674930027988804,9.678328668532586,9.68172730907637,9.685125949620152,9.688524590163935,9.691923230707717,9.6953218712515,9.698720511795281,9.702119152339064,9.705517792882846,9.70891643342663,9.712315073970412,9.715713714514195,9.719112355057977,9.722510995601759,9.725909636145541,9.729308276689324,9.732706917233108,9.73610555777689,9.739504198320672,9.742902838864454,9.746301479408237,9.749700119952019,9.753098760495801,9.756497401039583,9.759896041583367,9.76329468212715,9.766693322670932,9.770091963214714,9.773490603758496,9.776889244302279,9.78028788484606,9.783686525389845,9.787085165933627,9.79048380647741,9.793882447021192,9.797281087564974,9.800679728108756,9.804078368652538,9.80747700919632,9.810875649740105,9.814274290283887,9.81767293082767,9.821071571371451,9.824470211915234,9.827868852459016,9.831267493002798,9.834666133546582,9.838064774090364,9.841463414634147,9.844862055177929,9.848260695721711,9.851659336265493,9.855057976809276,9.858456617353058,9.861855257896842,9.865253898440624,9.868652538984406,9.872051179528189,9.875449820071971,9.878848460615753,9.882247101159535,9.88564574170332,9.889044382247102,9.892443022790884,9.895841663334666,9.899240303878448,9.90263894442223,9.906037584966013,9.909436225509797,9.91283486605358,9.916233506597361,9.919632147141144,9.923030787684926,9.926429428228708,9.92982806877249,9.933226709316273,9.936625349860057,9.940023990403839,9.943422630947621,9.946821271491403,9.950219912035186,9.953618552578968,9.95701719312275,9.960415833666534,9.963814474210317,9.967213114754099,9.970611755297881,9.974010395841663,9.977409036385446,9.980807676929228,9.98420631747301,9.987604958016794,9.991003598560576,9.994402239104359,9.99780087964814,10.001199520191923,10.004598160735705,10.007996801279488,10.011395441823272,10.014794082367054,10.018192722910836,10.021591363454618,10.0249900039984,10.028388644542183,10.031787285085965,10.035185925629747,10.038584566173531,10.041983206717314,10.045381847261096,10.048780487804878,10.05217912834866,10.055577768892443,10.058976409436225,10.062375049980009,10.065773690523791,10.069172331067573,10.072570971611356,10.075969612155138,10.07936825269892,10.082766893242702,10.086165533786485,10.089564174330269,10.092962814874051,10.096361455417833,10.099760095961615,10.103158736505398,10.10655737704918,10.109956017592962,10.113354658136746,10.116753298680528,10.12015193922431,10.123550579768093,10.126949220311875,10.130347860855657,10.13374650139944,10.137145141943222,10.140543782487006,10.143942423030788,10.14734106357457,10.150739704118353,10.154138344662135,10.157536985205917,10.1609356257497,10.164334266293483,10.167732906837266,10.171131547381048,10.17453018792483,10.177928828468612,10.181327469012395,10.184726109556177,10.18812475009996,10.191523390643743,10.194922031187525,10.198320671731308,10.20171931227509,10.205117952818872,10.208516593362654,10.211915233906437,10.21531387445022,10.218712514994003,10.222111155537785,10.225509796081568,10.22890843662535,10.232307077169132,10.235705717712914,10.239104358256697,10.24250299880048,10.245901639344263,10.249300279888045,10.252698920431827,10.25609756097561,10.259496201519392,10.262894842063174,10.266293482606958,10.26969212315074,10.273090763694523,10.276489404238305,10.279888044782087,10.28328668532587,10.286685325869652,10.290083966413434,10.293482606957218,10.296881247501,10.300279888044782,10.303678528588565,10.307077169132347,10.310475809676129,10.313874450219911,10.317273090763695,10.320671731307478,10.32407037185126,10.327469012395042,10.330867652938824,10.334266293482607,10.337664934026389,10.341063574570171,10.344462215113955,10.347860855657737,10.35125949620152,10.354658136745302,10.358056777289084,10.361455417832866,10.364854058376649,10.368252698920433,10.371651339464215,10.375049980007997,10.37844862055178,10.381847261095562,10.385245901639344,10.388644542183126,10.392043182726908,10.395441823270692,10.398840463814475,10.402239104358257,10.40563774490204,10.409036385445821,10.412435025989604,10.415833666533386,10.41923230707717,10.422630947620952,10.426029588164734,10.429428228708517,10.432826869252299,10.436225509796081,10.439624150339863,10.443022790883646,10.44642143142743,10.449820071971212,10.453218712514994,10.456617353058776,10.460015993602559,10.463414634146341,10.466813274690123,10.470211915233907,10.47361055577769,10.477009196321472,10.480407836865254,10.483806477409036,10.487205117952819,10.4906037584966,10.494002399040383,10.497401039584167,10.50079968012795,10.504198320671732,10.507596961215514,10.510995601759296,10.514394242303078,10.51779288284686,10.521191523390645,10.524590163934427,10.527988804478209,10.531387445021991,10.534786085565774,10.538184726109556,10.541583366653338,10.54498200719712,10.548380647740904,10.551779288284687,10.555177928828469,10.558576569372251,10.561975209916033,10.565373850459816,10.568772491003598,10.572171131547382,10.575569772091164,10.578968412634946,10.582367053178729,10.58576569372251,10.589164334266293,10.592562974810075,10.595961615353858,10.599360255897642,10.602758896441424,10.606157536985206,10.609556177528988,10.61295481807277,10.616353458616553,10.619752099160335,10.62315073970412,10.626549380247901,10.629948020791684,10.633346661335466,10.636745301879248,10.64014394242303,10.643542582966813,10.646941223510595,10.650339864054379,10.653738504598161,10.657137145141943,10.660535785685726,10.663934426229508,10.66733306677329,10.670731707317072,10.674130347860856,10.677528988404639,10.680927628948421,10.684326269492203,10.687724910035985,10.691123550579768,10.69452219112355,10.697920831667332,10.701319472211116,10.704718112754898,10.70811675329868,10.711515393842463,10.714914034386245,10.718312674930027,10.72171131547381,10.725109956017594,10.728508596561376,10.731907237105158,10.73530587764894,10.738704518192723,10.742103158736505,10.745501799280287,10.74890043982407,10.752299080367854,10.755697720911636,10.759096361455418,10.7624950019992,10.765893642542983,10.769292283086765,10.772690923630547,10.776089564174331,10.779488204718113,10.782886845261896,10.786285485805678,10.78968412634946,10.793082766893242,10.796481407437025,10.799880047980807,10.80327868852459,10.806677329068373,10.810075969612155,10.813474610155938,10.81687325069972,10.820271891243502,10.823670531787284,10.827069172331068,10.83046781287485,10.833866453418633,10.837265093962415,10.840663734506197,10.84406237504998,10.847461015593762,10.850859656137544,10.854258296681328,10.85765693722511,10.861055577768893,10.864454218312675,10.867852858856457,10.87125149940024,10.874650139944022,10.878048780487806,10.881447421031588,10.88484606157537,10.888244702119152,10.891643342662935,10.895041983206717,10.8984406237505,10.901839264294281,10.905237904838065,10.908636545381848,10.91203518592563,10.915433826469412,10.918832467013194,10.922231107556977,10.925629748100759,10.929028388644543,10.932427029188325,10.935825669732107,10.93922431027589,10.942622950819672,10.946021591363454,10.949420231907236,10.952818872451019,10.956217512994803,10.959616153538585,10.963014794082367,10.96641343462615,10.969812075169932,10.973210715713714,10.976609356257496,10.98000799680128,10.983406637345063,10.986805277888845,10.990203918432627,10.99360255897641,10.997001199520192,11.000399840063974,11.003798480607758,11.00719712115154,11.010595761695322,11.013994402239105,11.017393042782887,11.020791683326669,11.024190323870451,11.027588964414234,11.030987604958018,11.0343862455018,11.037784886045582,11.041183526589364,11.044582167133147,11.047980807676929,11.051379448220711,11.054778088764495,11.058176729308277,11.06157536985206,11.064974010395842,11.068372650939624,11.071771291483406,11.075169932027189,11.07856857257097,11.081967213114755,11.085365853658537,11.08876449420232,11.092163134746102,11.095561775289884,11.098960415833666,11.102359056377448,11.105757696921232,11.109156337465015,11.112554978008797,11.11595361855258,11.119352259096361,11.122750899640144,11.126149540183926,11.129548180727708,11.132946821271492,11.136345461815274,11.139744102359057,11.143142742902839,11.146541383446621,11.149940023990403,11.153338664534186,11.15673730507797,11.160135945621752,11.163534586165534,11.166933226709316,11.170331867253099,11.173730507796881,11.177129148340663,11.180527788884445,11.18392642942823,11.187325069972012,11.190723710515794,11.194122351059576,11.197520991603358,11.20091963214714,11.204318272690923,11.207716913234707,11.21111555377849,11.214514194322271,11.217912834866054,11.221311475409836,11.224710115953618,11.2281087564974,11.231507397041183,11.234906037584967,11.238304678128749,11.241703318672531,11.245101959216314,11.248500599760096,11.251899240303878,11.25529788084766,11.258696521391444,11.262095161935227,11.265493802479009,11.268892443022791,11.272291083566573,11.275689724110356,11.279088364654138,11.28248700519792,11.285885645741704,11.289284286285486,11.292682926829269,11.29608156737305,11.299480207916833,11.302878848460615,11.306277489004398,11.309676129548182,11.313074770091964,11.316473410635746,11.319872051179528,11.32327069172331,11.326669332267093,11.330067972810875,11.333466613354657,11.336865253898441,11.340263894442224,11.343662534986006,11.347061175529788,11.35045981607357,11.353858456617353,11.357257097161135,11.360655737704919,11.364054378248701,11.367453018792483,11.370851659336266,11.374250299880048,11.37764894042383,11.381047580967612,11.384446221511395,11.387844862055179,11.391243502598961,11.394642143142743,11.398040783686525,11.401439424230308,11.40483806477409,11.408236705317872,11.411635345861656,11.415033986405438,11.41843262694922,11.421831267493003,11.425229908036785,11.428628548580567,11.43202718912435,11.435425829668132,11.438824470211916,11.442223110755698,11.44562175129948,11.449020391843263,11.452419032387045,11.455817672930827,11.45921631347461,11.462614954018393,11.466013594562176,11.469412235105958,11.47281087564974,11.476209516193522,11.479608156737305,11.483006797281087,11.48640543782487,11.489804078368653,11.493202718912436,11.496601359456218,11.5,11.503398640543782,11.506797281087564,11.510195921631347,11.51359456217513,11.516993202718913,11.520391843262695,11.523790483806478,11.52718912435026,11.530587764894042,11.533986405437824,11.537385045981607,11.54078368652539,11.544182327069173,11.547580967612955,11.550979608156737,11.55437824870052,11.557776889244302,11.561175529788084,11.564574170331868,11.56797281087565,11.571371451419433,11.574770091963215,11.578168732506997,11.58156737305078,11.584966013594562,11.588364654138344,11.591763294682128,11.59516193522591,11.598560575769692,11.601959216313475,11.605357856857257,11.608756497401039,11.612155137944821,11.615553778488605,11.618952419032388,11.62235105957617,11.625749700119952,11.629148340663734,11.632546981207517,11.635945621751299,11.639344262295081,11.642742902838865,11.646141543382647,11.64954018392643,11.652938824470212,11.656337465013994,11.659736105557776,11.663134746101559,11.666533386645343,11.669932027189125,11.673330667732907,11.67672930827669,11.680127948820472,11.683526589364254,11.686925229908036,11.690323870451818,11.693722510995602,11.697121151539385,11.700519792083167,11.70391843262695,11.707317073170731,11.710715713714514,11.714114354258296,11.71751299480208,11.720911635345862,11.724310275889644,11.727708916433427,11.731107556977209,11.734506197520991,11.737904838064773,11.741303478608556,11.74470211915234,11.748100759696122,11.751499400239904,11.754898040783686,11.758296681327469,11.761695321871251,11.765093962415033,11.768492602958817,11.7718912435026,11.775289884046382,11.778688524590164,11.782087165133946,11.785485805677729,11.78888444622151,11.792283086765293,11.795681727309077,11.79908036785286,11.802479008396642,11.805877648940424,11.809276289484206,11.812674930027988,11.81607357057177,11.819472211115555,11.822870851659337,11.826269492203119,11.829668132746901,11.833066773290684,11.836465413834466,11.839864054378248,11.84326269492203,11.846661335465814,11.850059976009597,11.853458616553379,11.856857257097161,11.860255897640943,11.863654538184726,11.867053178728508,11.870451819272292,11.873850459816074,11.877249100359856,11.880647740903639,11.88404638144742,11.887445021991203,11.890843662534985,11.894242303078768,11.897640943622552,11.901039584166334,11.904438224710116,11.907836865253898,11.91123550579768,11.914634146341463,11.918032786885245,11.92143142742903,11.924830067972811,11.928228708516594,11.931627349060376,11.935025989604158,11.93842463014794,11.941823270691723,11.945221911235505,11.948620551779289,11.952019192323071,11.955417832866853,11.958816473410636,11.962215113954418,11.9656137544982,11.969012395041982,11.972411035585766,11.975809676129549,11.979208316673331,11.982606957217113,11.986005597760895,11.989404238304678,11.99280287884846,11.996201519392242,11.999600159936026,12.002998800479808,12.00639744102359,12.009796081567373,12.013194722111155,12.016593362654937,12.01999200319872,12.023390643742504,12.026789284286286,12.030187924830068,12.03358656537385,12.036985205917633,12.040383846461415,12.043782487005197,12.047181127548981,12.050579768092764,12.053978408636546,12.057377049180328,12.06077568972411,12.064174330267893,12.067572970811675,12.070971611355457,12.074370251899241,12.077768892443023,12.081167532986806,12.084566173530588,12.08796481407437,12.091363454618152,12.094762095161935,12.098160735705719,12.1015593762495,12.104958016793283,12.108356657337065,12.111755297880848,12.11515393842463,12.118552578968412,12.121951219512194,12.125349860055978,12.12874850059976,12.132147141143543,12.135545781687325,12.138944422231107,12.14234306277489,12.145741703318672,12.149140343862456,12.152538984406238,12.15593762495002,12.159336265493803,12.162734906037585,12.166133546581367,12.16953218712515,12.172930827668932,12.176329468212716,12.179728108756498,12.18312674930028,12.186525389844062,12.189924030387845,12.193322670931627,12.19672131147541,12.200119952019193,12.203518592562975,12.206917233106758,12.21031587365054,12.213714514194322,12.217113154738104,12.220511795281887,12.223910435825669,12.227309076369453,12.230707716913235,12.234106357457017,12.2375049980008,12.240903638544582,12.244302279088364,12.247700919632146,12.25109956017593,12.254498200719713,12.257896841263495,12.261295481807277,12.26469412235106,12.268092762894842,12.271491403438624,12.274890043982406,12.27828868452619,12.281687325069973,12.285085965613755,12.288484606157537,12.29188324670132,12.295281887245102,12.298680527788884,12.302079168332668,12.30547780887645,12.308876449420232,12.312275089964015,12.315673730507797,12.319072371051579,12.322471011595361,12.325869652139144,12.329268292682928,12.33266693322671,12.336065573770492,12.339464214314274,12.342862854858057,12.346261495401839,12.349660135945621,12.353058776489405,12.356457417033187,12.35985605757697,12.363254698120752,12.366653338664534,12.370051979208316,12.373450619752099,12.37684926029588,12.380247900839665,12.383646541383447,12.38704518192723,12.390443822471012,12.393842463014794,12.397241103558576,12.400639744102358,12.404038384646142,12.407437025189925,12.410835665733707,12.41423430627749,12.417632946821271,12.421031587365054,12.424430227908836,12.427828868452618,12.431227508996402,12.434626149540184,12.438024790083967,12.441423430627749,12.444822071171531,12.448220711715313,12.451619352259096,12.45501799280288,12.458416633346662,12.461815273890444,12.465213914434226,12.468612554978009,12.472011195521791,12.475409836065573,12.478808476609355,12.48220711715314,12.485605757696922,12.489004398240704,12.492403038784486,12.495801679328268,12.49920031987205,12.502598960415833,12.505997600959617,12.5093962415034,12.512794882047181,12.516193522590964,12.519592163134746,12.522990803678528,12.52638944422231,12.529788084766093,12.533186725309877,12.536585365853659,12.539984006397441,12.543382646941224,12.546781287485006,12.550179928028788,12.55357856857257,12.556977209116354,12.560375849660137,12.563774490203919,12.567173130747701,12.570571771291483,12.573970411835266,12.577369052379048,12.58076769292283,12.584166333466614,12.587564974010396,12.590963614554179,12.59436225509796,12.597760895641743,12.601159536185525,12.604558176729308,12.607956817273092,12.611355457816874,12.614754098360656,12.618152738904438,12.62155137944822,12.624950019992003,12.628348660535785,12.631747301079567,12.635145941623351,12.638544582167134,12.641943222710916,12.645341863254698,12.64874050379848,12.652139144342263,12.655537784886045,12.658936425429829,12.662335065973611,12.665733706517393,12.669132347061176,12.672530987604958,12.67592962814874,12.679328268692522,12.682726909236305,12.686125549780089,12.689524190323871,12.692922830867653,12.696321471411435,12.699720111955218,12.703118752499,12.706517393042782,12.709916033586566,12.713314674130348,12.71671331467413,12.720111955217913,12.723510595761695,12.726909236305477,12.73030787684926,12.733706517393042,12.737105157936826,12.740503798480608,12.74390243902439,12.747301079568173,12.750699720111955,12.754098360655737,12.75749700119952,12.760895641743303,12.764294282287086,12.767692922830868,12.77109156337465,12.774490203918432,12.777888844462215,12.781287485005997,12.78468612554978,12.788084766093563,12.791483406637346,12.794882047181128,12.79828068772491,12.801679328268692,12.805077968812475,12.808476609356257,12.81187524990004,12.815273890443823,12.818672530987605,12.822071171531388,12.82546981207517,12.828868452618952,12.832267093162734,12.835665733706517,12.8390643742503,12.842463014794083,12.845861655337865,12.849260295881647,12.85265893642543,12.856057576969212,12.859456217512994,12.862854858056778,12.86625349860056,12.869652139144343,12.873050779688125,12.876449420231907,12.87984806077569,12.883246701319472,12.886645341863254,12.890043982407038,12.89344262295082,12.896841263494602,12.900239904038385,12.903638544582167,12.907037185125949,12.910435825669731,12.913834466213515,12.917233106757298,12.92063174730108,12.924030387844862,12.927429028388644,12.930827668932427,12.934226309476209,12.937624950019991,12.941023590563775,12.944422231107557,12.94782087165134,12.951219512195122,12.954618152738904,12.958016793282686,12.961415433826469,12.964814074370253,12.968212714914035,12.971611355457817,12.9750099960016,12.978408636545382,12.981807277089164,12.985205917632946,12.988604558176728,12.992003198720512,12.995401839264295,12.998800479808077,13.00219912035186,13.005597760895641,13.008996401439424,13.012395041983206,13.01579368252699,13.019192323070772,13.022590963614554,13.025989604158337,13.029388244702119,13.032786885245901,13.036185525789683,13.039584166333466,13.04298280687725,13.046381447421032,13.049780087964814,13.053178728508597,13.056577369052379,13.059976009596161,13.063374650139943,13.066773290683727,13.07017193122751,13.073570571771292,13.076969212315074,13.080367852858856,13.083766493402639,13.08716513394642,13.090563774490203,13.093962415033987,13.09736105557777,13.100759696121552,13.104158336665334,13.107556977209116,13.110955617752898,13.11435425829668,13.117752898840465,13.121151539384247,13.124550179928029,13.127948820471811,13.131347461015594,13.134746101559376,13.138144742103158,13.141543382646942,13.144942023190724,13.148340663734507,13.151739304278289,13.155137944822071,13.158536585365853,13.161935225909636,13.165333866453418,13.168732506997202,13.172131147540984,13.175529788084766,13.178928428628549,13.18232706917233,13.185725709716113,13.189124350259895,13.19252299080368,13.195921631347462,13.199320271891244,13.202718912435026,13.206117552978808,13.20951619352259,13.212914834066373,13.216313474610155,13.21971211515394,13.223110755697721,13.226509396241504,13.229908036785286,13.233306677329068,13.23670531787285,13.240103958416633,13.243502598960417,13.246901239504199,13.250299880047981,13.253698520591763,13.257097161135546,13.260495801679328,13.26389444222311,13.267293082766892,13.270691723310676,13.274090363854459,13.277489004398241,13.280887644942023,13.284286285485805,13.287684926029588,13.29108356657337,13.294482207117154,13.297880847660936,13.301279488204719,13.3046781287485,13.308076769292283,13.311475409836065,13.314874050379848,13.31827269092363,13.321671331467414,13.325069972011196,13.328468612554978,13.33186725309876,13.335265893642543,13.338664534186325,13.342063174730107,13.345461815273891,13.348860455817674,13.352259096361456,13.355657736905238,13.35905637744902,13.362455017992803,13.365853658536585,13.369252299080367,13.372650939624151,13.376049580167933,13.379448220711716,13.382846861255498,13.38624550179928,13.389644142343062,13.393042782886845,13.396441423430629,13.39984006397441,13.403238704518193,13.406637345061975,13.410035985605758,13.41343462614954,13.416833266693322,13.420231907237104,13.423630547780888,13.42702918832467,13.430427828868453,13.433826469412235,13.437225109956017,13.4406237504998,13.444022391043582,13.447421031587366,13.450819672131148,13.45421831267493,13.457616953218713,13.461015593762495,13.464414234306277,13.46781287485006,13.471211515393842,13.474610155937626,13.478008796481408,13.48140743702519,13.484806077568972,13.488204718112755,13.491603358656537,13.49500199920032,13.498400639744103,13.501799280287885,13.505197920831668,13.50859656137545,13.511995201919232,13.515393842463014,13.518792483006797,13.522191123550579,13.525589764094363,13.528988404638145,13.532387045181927,13.53578568572571,13.539184326269492,13.542582966813274,13.545981607357056,13.54938024790084,13.552778888444623,13.556177528988405,13.559576169532187,13.56297481007597,13.566373450619752,13.569772091163534,13.573170731707316,13.5765693722511,13.579968012794883,13.583366653338665,13.586765293882447,13.59016393442623,13.593562574970012,13.596961215513794,13.600359856057578,13.60375849660136,13.607157137145142,13.610555777688925,13.613954418232707,13.617353058776489,13.620751699320271,13.624150339864054,13.627548980407838,13.63094762095162,13.634346261495402,13.637744902039184,13.641143542582967,13.644542183126749,13.647940823670531,13.651339464214315,13.654738104758097,13.65813674530188,13.661535385845662,13.664934026389444,13.668332666933226,13.671731307477009,13.67512994802079,13.678528588564575,13.681927229108357,13.68532586965214,13.688724510195922,13.692123150739704,13.695521791283486,13.698920431827268,13.702319072371052,13.705717712914835,13.709116353458617,13.7125149940024,13.715913634546181,13.719312275089964,13.722710915633746,13.726109556177528,13.729508196721312,13.732906837265094,13.736305477808877,13.739704118352659,13.743102758896441,13.746501399440223,13.749900039984006,13.75329868052779,13.756697321071572,13.760095961615354,13.763494602159136,13.766893242702919,13.770291883246701,13.773690523790483,13.777089164334265,13.78048780487805,13.783886445421832,13.787285085965614,13.790683726509396,13.794082367053178,13.79748100759696,13.800879648140743,13.804278288684527,13.80767692922831,13.811075569772091,13.814474210315874,13.817872850859656,13.821271491403438,13.82467013194722,13.828068772491003,13.831467413034787,13.834866053578569,13.838264694122351,13.841663334666134,13.845061975209916,13.848460615753698,13.85185925629748,13.855257896841264,13.858656537385047,13.862055177928829,13.865453818472611,13.868852459016393,13.872251099560176,13.875649740103958,13.87904838064774,13.882447021191524,13.885845661735306,13.889244302279089,13.89264294282287,13.896041583366653,13.899440223910435,13.902838864454218,13.906237504998002,13.909636145541784,13.913034786085566,13.916433426629348,13.91983206717313,13.923230707716913,13.926629348260695,13.930027988804477,13.933426629348261,13.936825269892044,13.940223910435826,13.943622550979608,13.94702119152339,13.950419832067173,13.953818472610955,13.957217113154739,13.960615753698521,13.964014394242303,13.967413034786086,13.970811675329868,13.97421031587365,13.977608956417432,13.981007596961215,13.984406237504999,13.987804878048781,13.991203518592563,13.994602159136345,13.998000799680128,14.00139944022391,14.004798080767692,14.008196721311476,14.011595361855258,14.01499400239904,14.018392642942823,14.021791283486605,14.025189924030387,14.02858856457417,14.031987205117952,14.035385845661736,14.038784486205518,14.0421831267493,14.045581767293083,14.048980407836865,14.052379048380647,14.05577768892443,14.059176329468213,14.062574970011996,14.065973610555778,14.06937225109956,14.072770891643342,14.076169532187125,14.079568172730907,14.08296681327469,14.086365453818473,14.089764094362256,14.093162734906038,14.09656137544982,14.099960015993602,14.103358656537385,14.106757297081167,14.11015593762495,14.113554578168733,14.116953218712515,14.120351859256298,14.12375049980008,14.127149140343862,14.130547780887644,14.133946421431427,14.13734506197521,14.140743702518993,14.144142343062775,14.147540983606557,14.15093962415034,14.154338264694122,14.157736905237904,14.161135545781688,14.16453418632547,14.167932826869253,14.171331467413035,14.174730107956817,14.1781287485006,14.181527389044382,14.184926029588166,14.188324670131948,14.19172331067573,14.195121951219512,14.198520591763295,14.201919232307077,14.20531787285086,14.208716513394641,14.212115153938425,14.215513794482208,14.21891243502599,14.222311075569772,14.225709716113554,14.229108356657337,14.232506997201119,14.235905637744903,14.239304278288685,14.242702918832467,14.24610155937625,14.249500199920032,14.252898840463814,14.256297481007596,14.259696121551379,14.263094762095163,14.266493402638945,14.269892043182727,14.27329068372651,14.276689324270292,14.280087964814074,14.283486605357856,14.28688524590164,14.290283886445422,14.293682526989205,14.297081167532987,14.30047980807677,14.303878448620551,14.307277089164334,14.310675729708116,14.3140743702519,14.317473010795682,14.320871651339464,14.324270291883247,14.327668932427029,14.331067572970811,14.334466213514593,14.337864854058378,14.34126349460216,14.344662135145942,14.348060775689724,14.351459416233507,14.354858056777289,14.358256697321071,14.361655337864853,14.365053978408637,14.36845261895242,14.371851259496202,14.375249900039984,14.378648540583766,14.382047181127549,14.38544582167133,14.388844462215115,14.392243102758897,14.39564174330268,14.399040383846462,14.402439024390244,14.405837664934026,14.409236305477808,14.41263494602159,14.416033586565375,14.419432227109157,14.422830867652939,14.426229508196721,14.429628148740504,14.433026789284286,14.436425429828068,14.439824070371852,14.443222710915634,14.446621351459417,14.450019992003199,14.453418632546981,14.456817273090763,14.460215913634546,14.463614554178328,14.467013194722112,14.470411835265894,14.473810475809676,14.477209116353459,14.480607756897241,14.484006397441023,14.487405037984805,14.49080367852859,14.494202319072372,14.497600959616154,14.500999600159936,14.504398240703718,14.5077968812475,14.511195521791283,14.514594162335065,14.51799280287885,14.521391443422631,14.524790083966414,14.528188724510196,14.531587365053978,14.53498600559776,14.538384646141543,14.541783286685327,14.545181927229109,14.548580567772891,14.551979208316673,14.555377848860456,14.558776489404238,14.56217512994802,14.565573770491802,14.568972411035586,14.572371051579369,14.575769692123151,14.579168332666933,14.582566973210715,14.585965613754498,14.58936425429828,14.592762894842064,14.596161535385846,14.599560175929629,14.60295881647341,14.606357457017193,14.609756097560975,14.613154738104758,14.61655337864854,14.619952019192324,14.623350659736106,14.626749300279888,14.63014794082367,14.633546581367453,14.636945221911235,14.640343862455017,14.643742502998801,14.647141143542584,14.650539784086366,14.653938424630148,14.65733706517393,14.660735705717713,14.664134346261495,14.667532986805277,14.670931627349061,14.674330267892843,14.677728908436626,14.681127548980408,14.68452618952419,14.687924830067972,14.691323470611755,14.694722111155539,14.69812075169932,14.701519392243103,14.704918032786885,14.708316673330668,14.71171531387445,14.715113954418232,14.718512594962014,14.721911235505798,14.72530987604958,14.728708516593363,14.732107157137145,14.735505797680927,14.73890443822471,14.742303078768492,14.745701719312276,14.749100359856058,14.75249900039984,14.755897640943623,14.759296281487405,14.762694922031187,14.76609356257497,14.769492203118752,14.772890843662536,14.776289484206318,14.7796881247501,14.783086765293882,14.786485405837665,14.789884046381447,14.79328268692523,14.796681327469013,14.800079968012795,14.803478608556578,14.80687724910036,14.810275889644142,14.813674530187924,14.817073170731707,14.820471811275489,14.823870451819273,14.827269092363055,14.830667732906837,14.83406637345062,14.837465013994402,14.840863654538184,14.844262295081966,14.84766093562575,14.851059576169533,14.854458216713315,14.857856857257097,14.86125549780088,14.864654138344662,14.868052778888444,14.871451419432226,14.87485005997601,14.878248700519793,14.881647341063575,14.885045981607357,14.88844462215114,14.891843262694922,14.895241903238704,14.898640543782488,14.90203918432627,14.905437824870052,14.908836465413835,14.912235105957617,14.915633746501399,14.919032387045181,14.922431027588964,14.925829668132748,14.92922830867653,14.932626949220312,14.936025589764094,14.939424230307877,14.942822870851659,14.946221511395441,14.949620151939225,14.953018792483007,14.95641743302679,14.959816073570572,14.963214714114354,14.966613354658136,14.970011995201919,14.9734106357457,14.976809276289485,14.980207916833267,14.98360655737705,14.987005197920832,14.990403838464614,14.993802479008396,14.997201119552178,15.000599760095962,15.003998400639745,15.007397041183527,15.01079568172731,15.014194322271091,15.017592962814874,15.020991603358656,15.024390243902438,15.027788884446222,15.031187524990004,15.034586165533787,15.037984806077569,15.041383446621351,15.044782087165133,15.048180727708916,15.0515793682527,15.054978008796482,15.058376649340264,15.061775289884046,15.065173930427829,15.068572570971611,15.071971211515393,15.075369852059175,15.07876849260296,15.082167133146742,15.085565773690524,15.088964414234306,15.092363054778088,15.09576169532187,15.099160335865653,15.102558976409437,15.10595761695322,15.109356257497002,15.112754898040784,15.116153538584566,15.119552179128348,15.12295081967213,15.126349460215913,15.129748100759697,15.133146741303479,15.136545381847261,15.139944022391044,15.143342662934826,15.146741303478608,15.15013994402239,15.153538584566174,15.156937225109957,15.160335865653739,15.163734506197521,15.167133146741303,15.170531787285086,15.173930427828868,15.17732906837265,15.180727708916434,15.184126349460216,15.187524990003999,15.19092363054778,15.194322271091563,15.197720911635345,15.201119552179128,15.204518192722912,15.207916833266694,15.211315473810476,15.214714114354258,15.21811275489804,15.221511395441823,15.224910035985605,15.22830867652939,15.231707317073171,15.235105957616954,15.238504598160736,15.241903238704518,15.2453018792483,15.248700519792083,15.252099160335865,15.255497800879649,15.258896441423431,15.262295081967213,15.265693722510996,15.269092363054778,15.27249100359856,15.275889644142342,15.279288284686126,15.282686925229909,15.286085565773691,15.289484206317473,15.292882846861255,15.296281487405038,15.29968012794882,15.303078768492602,15.306477409036386,15.309876049580168,15.31327469012395,15.316673330667733,15.320071971211515,15.323470611755297,15.32686925229908,15.330267892842864,15.333666533386646,15.337065173930428,15.34046381447421,15.343862455017993,15.347261095561775,15.350659736105557,15.35405837664934,15.357457017193124,15.360855657736906,15.364254298280688,15.36765293882447,15.371051579368253,15.374450219912035,15.377848860455817,15.381247500999601,15.384646141543383,15.388044782087166,15.391443422630948,15.39484206317473,15.398240703718512,15.401639344262295,15.405037984806077,15.40843662534986,15.411835265893643,15.415233906437425,15.418632546981208,15.42203118752499,15.425429828068772,15.428828468612554,15.432227109156338,15.43562574970012,15.439024390243903,15.442423030787685,15.445821671331467,15.44922031187525,15.452618952419032,15.456017592962814,15.459416233506598,15.46281487405038,15.466213514594163,15.469612155137945,15.473010795681727,15.47640943622551,15.479808076769292,15.483206717313076,15.486605357856858,15.49000399840064,15.493402638944422,15.496801279488205,15.500199920031987,15.50359856057577,15.506997201119551,15.510395841663335,15.513794482207118,15.5171931227509,15.520591763294682,15.523990403838464,15.527389044382247,15.530787684926029,15.534186325469813,15.537584966013595,15.540983606557377,15.54438224710116,15.547780887644942,15.551179528188724,15.554578168732506,15.557976809276289,15.561375449820073,15.564774090363855,15.568172730907637,15.57157137145142,15.574970011995202,15.578368652538984,15.581767293082766,15.58516593362655,15.588564574170332,15.591963214714115,15.595361855257897,15.59876049580168,15.602159136345461,15.605557776889244,15.608956417433026,15.61235505797681,15.615753698520592,15.619152339064375,15.622550979608157,15.625949620151939,15.629348260695721,15.632746901239504,15.636145541783288,15.63954418232707,15.642942822870852,15.646341463414634,15.649740103958417,15.653138744502199,15.656537385045981,15.659936025589763,15.663334666133547,15.66673330667733,15.670131947221112,15.673530587764894,15.676929228308676,15.680327868852459,15.68372650939624,15.687125149940025,15.690523790483807,15.69392243102759,15.697321071571372,15.700719712115154,15.704118352658936,15.707516993202718,15.7109156337465,15.714314274290285,15.717712914834067,15.721111555377849,15.724510195921631,15.727908836465414,15.731307477009196,15.734706117552978,15.738104758096762,15.741503398640544,15.744902039184327,15.748300679728109,15.751699320271891,15.755097960815673,15.758496601359456,15.761895241903238,15.765293882447022,15.768692522990804,15.772091163534586,15.775489804078369,15.778888444622151,15.782287085165933,15.785685725709715,15.7890843662535,15.792483006797282,15.795881647341064,15.799280287884846,15.802678928428628,15.80607756897241,15.809476209516193,15.812874850059975,15.81627349060376,15.819672131147541,15.823070771691324,15.826469412235106,15.829868052778888,15.83326669332267,15.836665333866453,15.840063974410237,15.843462614954019,15.846861255497801,15.850259896041583,15.853658536585366,15.857057177129148,15.86045581767293,15.863854458216712,15.867253098760496,15.870651739304279,15.874050379848061,15.877449020391843,15.880847660935625,15.884246301479408,15.88764494202319,15.891043582566974,15.894442223110756,15.897840863654539,15.90123950419832,15.904638144742103,15.908036785285885,15.911435425829668,15.91483406637345,15.918232706917234,15.921631347461016,15.925029988004798,15.92842862854858,15.931827269092363,15.935225909636145,15.938624550179927,15.942023190723711,15.945421831267494,15.948820471811276,15.952219112355058,15.95561775289884,15.959016393442623,15.962415033986405,15.965813674530187,15.969212315073971,15.972610955617753,15.976009596161536,15.979408236705318,15.9828068772491,15.986205517792882,15.989604158336665,15.993002798880449,15.99640143942423,15.999800079968013,16.003198720511794,16.00659736105558,16.00999600159936,16.013394642143144,16.016793282686926,16.02019192323071,16.02359056377449,16.026989204318273,16.030387844862055,16.033786485405837,16.03718512594962,16.040583766493402,16.043982407037184,16.047381047580966,16.05077968812475,16.05417832866853,16.057576969212317,16.0609756097561,16.06437425029988,16.067772890843663,16.071171531387446,16.074570171931228,16.07796881247501,16.081367453018792,16.084766093562575,16.088164734106357,16.09156337465014,16.09496201519392,16.098360655737704,16.101759296281486,16.105157936825268,16.108556577369054,16.111955217912836,16.11535385845662,16.1187524990004,16.122151139544183,16.125549780087965,16.128948420631747,16.13234706117553,16.135745701719312,16.139144342263094,16.142542982806876,16.14594162335066,16.14934026389444,16.152738904438223,16.156137544982005,16.15953618552579,16.162934826069574,16.166333466613356,16.169732107157138,16.17313074770092,16.176529388244703,16.179928028788485,16.183326669332267,16.18672530987605,16.19012395041983,16.193522590963614,16.196921231507396,16.20031987205118,16.20371851259496,16.207117153138743,16.21051579368253,16.21391443422631,16.217313074770093,16.220711715313875,16.224110355857658,16.22750899640144,16.230907636945222,16.234306277489004,16.237704918032787,16.24110355857657,16.24450219912035,16.247900839664133,16.251299480207916,16.254698120751698,16.25809676129548,16.261495401839266,16.264894042383048,16.26829268292683,16.271691323470613,16.275089964014395,16.278488604558177,16.28188724510196,16.28528588564574,16.288684526189524,16.292083166733306,16.29548180727709,16.29888044782087,16.302279088364653,16.305677728908435,16.309076369452217,16.312475009996003,16.315873650539785,16.319272291083568,16.32267093162735,16.326069572171132,16.329468212714914,16.332866853258697,16.33626549380248,16.33966413434626,16.343062774890043,16.346461415433826,16.349860055977608,16.35325869652139,16.356657337065172,16.360055977608955,16.36345461815274,16.366853258696523,16.370251899240305,16.373650539784087,16.37704918032787,16.38044782087165,16.383846461415434,16.387245101959216,16.390643742503,16.39404238304678,16.397441023590563,16.400839664134345,16.404238304678127,16.40763694522191,16.411035585765692,16.414434226309478,16.41783286685326,16.421231507397042,16.424630147940825,16.428028788484607,16.43142742902839,16.43482606957217,16.438224710115954,16.441623350659736,16.445021991203518,16.4484206317473,16.451819272291083,16.455217912834865,16.458616553378647,16.46201519392243,16.465413834466215,16.468812475009997,16.47221111555378,16.475609756097562,16.479008396641344,16.482407037185126,16.48580567772891,16.48920431827269,16.492602958816473,16.496001599360255,16.499400239904038,16.50279888044782,16.506197520991602,16.509596161535384,16.512994802079167,16.516393442622952,16.519792083166735,16.523190723710517,16.5265893642543,16.52998800479808,16.533386645341864,16.536785285885646,16.540183926429428,16.54358256697321,16.546981207516993,16.550379848060775,16.553778488604557,16.55717712914834,16.56057576969212,16.563974410235904,16.56737305077969,16.570771691323472,16.574170331867254,16.577568972411036,16.58096761295482,16.5843662534986,16.587764894042383,16.591163534586165,16.594562175129948,16.59796081567373,16.601359456217512,16.604758096761294,16.608156737305077,16.61155537784886,16.61495401839264,16.618352658936427,16.62175129948021,16.62514994002399,16.628548580567774,16.631947221111556,16.63534586165534,16.63874450219912,16.642143142742903,16.645541783286685,16.648940423830467,16.65233906437425,16.65573770491803,16.659136345461814,16.662534986005596,16.66593362654938,16.669332267093164,16.672730907636947,16.67612954818073,16.67952818872451,16.682926829268293,16.686325469812076,16.689724110355858,16.69312275089964,16.696521391443422,16.699920031987205,16.703318672530987,16.70671731307477,16.71011595361855,16.713514594162334,16.716913234706116,16.7203118752499,16.723710515793684,16.727109156337466,16.73050779688125,16.73390643742503,16.737305077968813,16.740703718512595,16.744102359056377,16.74750099960016,16.750899640143942,16.754298280687724,16.757696921231506,16.76109556177529,16.76449420231907,16.767892842862853,16.77129148340664,16.77469012395042,16.778088764494203,16.781487405037986,16.784886045581768,16.78828468612555,16.791683326669332,16.795081967213115,16.798480607756897,16.80187924830068,16.80527788884446,16.808676529388244,16.812075169932026,16.815473810475808,16.818872451019594,16.822271091563376,16.82566973210716,16.82906837265094,16.832467013194723,16.835865653738505,16.839264294282287,16.84266293482607,16.846061575369852,16.849460215913634,16.852858856457416,16.8562574970012,16.85965613754498,16.863054778088763,16.866453418632545,16.86985205917633,16.873250699720113,16.876649340263896,16.880047980807678,16.88344662135146,16.886845261895242,16.890243902439025,16.893642542982807,16.89704118352659,16.90043982407037,16.903838464614154,16.907237105157936,16.91063574570172,16.9140343862455,16.917433026789283,16.92083166733307,16.92423030787685,16.927628948420633,16.931027588964415,16.934426229508198,16.93782487005198,16.941223510595762,16.944622151139544,16.948020791683327,16.95141943222711,16.95481807277089,16.958216713314673,16.961615353858456,16.965013994402238,16.96841263494602,16.971811275489806,16.975209916033588,16.97860855657737,16.982007197121153,16.985405837664935,16.988804478208717,16.9922031187525,16.99560175929628,16.999000399840064,17.002399040383846,17.00579768092763,17.00919632147141,17.012594962015193,17.015993602558975,17.019392243102757,17.022790883646543,17.026189524190325,17.029588164734108,17.03298680527789,17.036385445821672,17.039784086365454,17.043182726909237,17.04658136745302,17.0499800079968,17.053378648540583,17.056777289084366,17.060175929628148,17.06357457017193,17.066973210715712,17.070371851259495,17.07377049180328,17.077169132347063,17.080567772890845,17.083966413434627,17.08736505397841,17.09076369452219,17.094162335065974,17.097560975609756,17.10095961615354,17.10435825669732,17.107756897241103,17.111155537784885,17.114554178328667,17.11795281887245,17.121351459416232,17.124750099960018,17.1281487405038,17.131547381047582,17.134946021591364,17.138344662135147,17.14174330267893,17.14514194322271,17.148540583766493,17.151939224310276,17.155337864854058,17.15873650539784,17.162135145941622,17.165533786485405,17.168932427029187,17.17233106757297,17.175729708116755,17.179128348660537,17.18252698920432,17.185925629748102,17.189324270291884,17.192722910835666,17.19612155137945,17.19952019192323,17.202918832467013,17.206317473010795,17.209716113554578,17.21311475409836,17.216513394642142,17.219912035185924,17.223310675729707,17.226709316273492,17.230107956817275,17.233506597361057,17.23690523790484,17.24030387844862,17.243702518992404,17.247101159536186,17.250499800079968,17.25389844062375,17.257297081167533,17.260695721711315,17.264094362255097,17.26749300279888,17.27089164334266,17.274290283886444,17.27768892443023,17.281087564974012,17.284486205517794,17.287884846061576,17.29128348660536,17.29468212714914,17.298080767692923,17.301479408236705,17.304878048780488,17.30827668932427,17.311675329868052,17.315073970411834,17.318472610955617,17.3218712514994,17.32526989204318,17.328668532586967,17.33206717313075,17.33546581367453,17.338864454218314,17.342263094762096,17.345661735305878,17.34906037584966,17.352459016393443,17.355857656937225,17.359256297481007,17.36265493802479,17.36605357856857,17.369452219112354,17.372850859656136,17.37624950019992,17.379648140743704,17.383046781287486,17.38644542183127,17.38984406237505,17.393242702918833,17.396641343462615,17.400039984006398,17.40343862455018,17.406837265093962,17.410235905637744,17.413634546181527,17.41703318672531,17.42043182726909,17.423830467812873,17.427229108356656,17.43062774890044,17.434026389444224,17.437425029988006,17.44082367053179,17.44422231107557,17.447620951619353,17.451019592163135,17.454418232706917,17.4578168732507,17.461215513794482,17.464614154338264,17.468012794882046,17.47141143542583,17.47481007596961,17.478208716513393,17.48160735705718,17.48500599760096,17.488404638144743,17.491803278688526,17.495201919232308,17.49860055977609,17.501999200319872,17.505397840863655,17.508796481407437,17.51219512195122,17.515593762495,17.518992403038784,17.522391043582566,17.525789684126348,17.52918832467013,17.532586965213916,17.5359856057577,17.53938424630148,17.542782886845263,17.546181527389045,17.549580167932827,17.55297880847661,17.556377449020392,17.559776089564174,17.563174730107956,17.56657337065174,17.56997201119552,17.573370651739303,17.576769292283085,17.580167932826868,17.583566573370653,17.586965213914436,17.590363854458218,17.593762495002,17.597161135545782,17.600559776089565,17.603958416633347,17.60735705717713,17.61075569772091,17.614154338264694,17.617552978808476,17.620951619352258,17.62435025989604,17.627748900439823,17.631147540983605,17.63454618152739,17.637944822071173,17.641343462614955,17.644742103158737,17.64814074370252,17.651539384246302,17.654938024790084,17.658336665333866,17.66173530587765,17.66513394642143,17.668532586965213,17.671931227508995,17.675329868052778,17.67872850859656,17.682127149140342,17.685525789684128,17.68892443022791,17.692323070771693,17.695721711315475,17.699120351859257,17.70251899240304,17.70591763294682,17.709316273490604,17.712714914034386,17.71611355457817,17.71951219512195,17.722910835665733,17.726309476209515,17.729708116753297,17.73310675729708,17.736505397840865,17.739904038384648,17.74330267892843,17.746701319472212,17.750099960015994,17.753498600559777,17.75689724110356,17.76029588164734,17.763694522191123,17.767093162734906,17.770491803278688,17.77389044382247,17.777289084366252,17.780687724910035,17.784086365453817,17.787485005997603,17.790883646541385,17.794282287085167,17.79768092762895,17.80107956817273,17.804478208716514,17.807876849260296,17.81127548980408,17.81467413034786,17.818072770891643,17.821471411435425,17.824870051979207,17.82826869252299,17.831667333066772,17.835065973610554,17.83846461415434,17.841863254698122,17.845261895241904,17.848660535785687,17.85205917632947,17.85545781687325,17.858856457417033,17.862255097960816,17.865653738504598,17.86905237904838,17.872451019592162,17.875849660135945,17.879248300679727,17.88264694122351,17.88604558176729,17.889444222311077,17.89284286285486,17.89624150339864,17.899640143942424,17.903038784486206,17.90643742502999,17.90983606557377,17.913234706117553,17.916633346661335,17.920031987205117,17.9234306277489,17.926829268292682,17.930227908836464,17.933626549380246,17.93702518992403,17.940423830467815,17.943822471011597,17.94722111155538,17.95061975209916,17.954018392642944,17.957417033186726,17.960815673730508,17.96421431427429,17.967612954818073,17.971011595361855,17.974410235905637,17.97780887644942,17.9812075169932,17.984606157536984,17.988004798080766,17.991403438624552,17.994802079168334,17.998200719712116,18.0015993602559,18.00499800079968,18.008396641343463,18.011795281887245,18.015193922431028,18.01859256297481,18.021991203518592,18.025389844062374,18.028788484606157,18.03218712514994,18.03558576569372,18.038984406237503,18.04238304678129,18.04578168732507,18.049180327868854,18.052578968412636,18.055977608956418,18.0593762495002,18.062774890043983,18.066173530587765,18.069572171131547,18.07297081167533,18.07636945221911,18.079768092762894,18.083166733306676,18.08656537385046,18.08996401439424,18.093362654938026,18.09676129548181,18.10015993602559,18.103558576569373,18.106957217113155,18.110355857656938,18.11375449820072,18.117153138744502,18.120551779288284,18.123950419832067,18.12734906037585,18.13074770091963,18.134146341463413,18.137544982007196,18.140943622550978,18.144342263094764,18.147740903638546,18.151139544182328,18.15453818472611,18.157936825269893,18.161335465813675,18.164734106357457,18.16813274690124,18.17153138744502,18.174930027988804,18.178328668532586,18.18172730907637,18.18512594962015,18.188524590163933,18.191923230707715,18.1953218712515,18.198720511795283,18.202119152339066,18.205517792882848,18.20891643342663,18.212315073970412,18.215713714514195,18.219112355057977,18.22251099560176,18.22590963614554,18.229308276689324,18.232706917233106,18.236105557776888,18.23950419832067,18.242902838864453,18.24630147940824,18.24970011995202,18.253098760495803,18.256497401039585,18.259896041583367,18.26329468212715,18.266693322670932,18.270091963214714,18.273490603758496,18.27688924430228,18.28028788484606,18.283686525389843,18.287085165933625,18.290483806477408,18.29388244702119,18.297281087564976,18.300679728108758,18.30407836865254,18.307477009196322,18.310875649740105,18.314274290283887,18.31767293082767,18.32107157137145,18.324470211915234,18.327868852459016,18.331267493002798,18.33466613354658,18.338064774090363,18.341463414634145,18.344862055177927,18.348260695721713,18.351659336265495,18.355057976809277,18.35845661735306,18.361855257896842,18.365253898440624,18.368652538984406,18.37205117952819,18.37544982007197,18.378848460615753,18.382247101159535,18.385645741703318,18.3890443822471,18.392443022790882,18.395841663334664,18.39924030387845,18.402638944422232,18.406037584966015,18.409436225509797,18.41283486605358,18.41623350659736,18.419632147141144,18.423030787684926,18.426429428228708,18.42982806877249,18.433226709316273,18.436625349860055,18.440023990403837,18.44342263094762,18.4468212714914,18.450219912035188,18.45361855257897,18.457017193122752,18.460415833666534,18.463814474210317,18.4672131147541,18.47061175529788,18.474010395841663,18.477409036385446,18.480807676929228,18.48420631747301,18.487604958016792,18.491003598560575,18.494402239104357,18.49780087964814,18.501199520191925,18.504598160735707,18.50799680127949,18.51139544182327,18.514794082367054,18.518192722910836,18.52159136345462,18.5249900039984,18.528388644542183,18.531787285085965,18.535185925629747,18.53858456617353,18.541983206717312,18.545381847261094,18.548780487804876,18.552179128348662,18.555577768892444,18.558976409436227,18.56237504998001,18.56577369052379,18.569172331067573,18.572570971611356,18.575969612155138,18.57936825269892,18.582766893242702,18.586165533786485,18.589564174330267,18.59296281487405,18.59636145541783,18.599760095961614,18.6031587365054,18.60655737704918,18.609956017592964,18.613354658136746,18.61675329868053,18.62015193922431,18.623550579768093,18.626949220311875,18.630347860855657,18.63374650139944,18.637145141943222,18.640543782487004,18.643942423030786,18.64734106357457,18.65073970411835,18.654138344662137,18.65753698520592,18.6609356257497,18.664334266293483,18.667732906837266,18.671131547381048,18.67453018792483,18.677928828468612,18.681327469012395,18.684726109556177,18.68812475009996,18.69152339064374,18.694922031187524,18.698320671731306,18.701719312275088,18.705117952818874,18.708516593362656,18.71191523390644,18.71531387445022,18.718712514994003,18.722111155537785,18.725509796081568,18.72890843662535,18.732307077169132,18.735705717712914,18.739104358256697,18.74250299880048,18.74590163934426,18.749300279888043,18.752698920431826,18.75609756097561,18.759496201519394,18.762894842063176,18.766293482606958,18.76969212315074,18.773090763694523,18.776489404238305,18.779888044782087,18.78328668532587,18.78668532586965,18.790083966413434,18.793482606957216,18.796881247501,18.80027988804478,18.803678528588563,18.80707716913235,18.81047580967613,18.813874450219913,18.817273090763695,18.820671731307478,18.82407037185126,18.827469012395042,18.830867652938824,18.834266293482607,18.83766493402639,18.84106357457017,18.844462215113953,18.847860855657736,18.851259496201518,18.8546581367453,18.858056777289086,18.861455417832868,18.86485405837665,18.868252698920433,18.871651339464215,18.875049980007997,18.87844862055178,18.88184726109556,18.885245901639344,18.888644542183126,18.89204318272691,18.89544182327069,18.898840463814473,18.902239104358255,18.905637744902037,18.909036385445823,18.912435025989605,18.915833666533388,18.91923230707717,18.922630947620952,18.926029588164734,18.929428228708517,18.9328268692523,18.93622550979608,18.939624150339863,18.943022790883646,18.946421431427428,18.94982007197121,18.953218712514992,18.95661735305878,18.96001599360256,18.963414634146343,18.966813274690125,18.970211915233907,18.97361055577769,18.97700919632147,18.980407836865254,18.983806477409036,18.98720511795282,18.9906037584966,18.994002399040383,18.997401039584165,19.000799680127948,19.00419832067173,19.007596961215516,19.010995601759298,19.01439424230308,19.017792882846862,19.021191523390645,19.024590163934427,19.02798880447821,19.03138744502199,19.034786085565774,19.038184726109556,19.041583366653338,19.04498200719712,19.048380647740903,19.051779288284685,19.055177928828467,19.058576569372253,19.061975209916035,19.065373850459817,19.0687724910036,19.072171131547382,19.075569772091164,19.078968412634946,19.08236705317873,19.08576569372251,19.089164334266293,19.092562974810075,19.095961615353858,19.09936025589764,19.102758896441422,19.106157536985204,19.10955617752899,19.112954818072772,19.116353458616555,19.119752099160337,19.12315073970412,19.1265493802479,19.129948020791684,19.133346661335466,19.136745301879248,19.14014394242303,19.143542582966813,19.146941223510595,19.150339864054377,19.15373850459816,19.15713714514194,19.160535785685727,19.16393442622951,19.167333066773292,19.170731707317074,19.174130347860856,19.17752898840464,19.18092762894842,19.184326269492203,19.187724910035985,19.191123550579768,19.19452219112355,19.197920831667332,19.201319472211114,19.204718112754897,19.20811675329868,19.211515393842465,19.214914034386247,19.21831267493003,19.22171131547381,19.225109956017594,19.228508596561376,19.23190723710516,19.23530587764894,19.238704518192723,19.242103158736505,19.245501799280287,19.24890043982407,19.25229908036785,19.255697720911634,19.259096361455416,19.262495001999202,19.265893642542984,19.269292283086767,19.27269092363055,19.27608956417433,19.279488204718113,19.282886845261896,19.286285485805678,19.28968412634946,19.293082766893242,19.296481407437025,19.299880047980807,19.30327868852459,19.30667732906837,19.310075969612154,19.31347461015594,19.31687325069972,19.320271891243504,19.323670531787286,19.32706917233107,19.33046781287485,19.333866453418633,19.337265093962415,19.340663734506197,19.34406237504998,19.347461015593762,19.350859656137544,19.354258296681326,19.35765693722511,19.36105557776889,19.364454218312677,19.36785285885646,19.37125149940024,19.374650139944023,19.378048780487806,19.381447421031588,19.38484606157537,19.388244702119152,19.391643342662935,19.395041983206717,19.3984406237505,19.40183926429428,19.405237904838064,19.408636545381846,19.412035185925628,19.415433826469414,19.418832467013196,19.42223110755698,19.42562974810076,19.429028388644543,19.432427029188325,19.435825669732107,19.43922431027589,19.442622950819672,19.446021591363454,19.449420231907236,19.45281887245102,19.4562175129948,19.459616153538583,19.463014794082365,19.46641343462615,19.469812075169934,19.473210715713716,19.476609356257498,19.48000799680128,19.483406637345063,19.486805277888845,19.490203918432627,19.49360255897641,19.49700119952019,19.500399840063974,19.503798480607756,19.50719712115154,19.51059576169532,19.513994402239103,19.51739304278289,19.52079168332667,19.524190323870453,19.527588964414235,19.530987604958018,19.5343862455018,19.537784886045582,19.541183526589364,19.544582167133147,19.54798080767693,19.55137944822071,19.554778088764493,19.558176729308276,19.561575369852058,19.56497401039584,19.568372650939626,19.571771291483408,19.57516993202719,19.578568572570973,19.581967213114755,19.585365853658537,19.58876449420232,19.5921631347461,19.595561775289884,19.598960415833666,19.60235905637745,19.60575769692123,19.609156337465013,19.612554978008795,19.615953618552577,19.619352259096363,19.622750899640145,19.626149540183928,19.62954818072771,19.632946821271492,19.636345461815274,19.639744102359057,19.64314274290284,19.64654138344662,19.649940023990403,19.653338664534186,19.656737305077968,19.66013594562175,19.663534586165532,19.666933226709315,19.6703318672531,19.673730507796883,19.677129148340665,19.680527788884447,19.68392642942823,19.68732506997201,19.690723710515794,19.694122351059576,19.69752099160336,19.70091963214714,19.704318272690923,19.707716913234705,19.711115553778487,19.71451419432227,19.717912834866052,19.721311475409838,19.72471011595362,19.728108756497402,19.731507397041185,19.734906037584967,19.73830467812875,19.74170331867253,19.745101959216314,19.748500599760096,19.751899240303878,19.75529788084766,19.758696521391443,19.762095161935225,19.765493802479007,19.76889244302279,19.772291083566575,19.775689724110357,19.77908836465414,19.782487005197922,19.785885645741704,19.789284286285486,19.79268292682927,19.79608156737305,19.799480207916833,19.802878848460615,19.806277489004398,19.80967612954818,19.813074770091962,19.816473410635744,19.819872051179527,19.823270691723312,19.826669332267095,19.830067972810877,19.83346661335466,19.83686525389844,19.840263894442224,19.843662534986006,19.847061175529788,19.85045981607357,19.853858456617353,19.857257097161135,19.860655737704917,19.8640543782487,19.86745301879248,19.870851659336264,19.87425029988005,19.877648940423832,19.881047580967614,19.884446221511396,19.88784486205518,19.89124350259896,19.894642143142743,19.898040783686525,19.901439424230308,19.90483806477409,19.908236705317872,19.911635345861654,19.915033986405437,19.91843262694922,19.921831267493,19.925229908036787,19.92862854858057,19.93202718912435,19.935425829668134,19.938824470211916,19.942223110755698,19.94562175129948,19.949020391843263,19.952419032387045,19.955817672930827,19.95921631347461,19.96261495401839,19.966013594562174,19.969412235105956,19.97281087564974,19.976209516193524,19.979608156737307,19.98300679728109,19.98640543782487,19.989804078368653,19.993202718912436,19.996601359456218,20.0]}

},{}],57:[function(require,module,exports){
module.exports={"expected":[1.1180340051651,1.1177268028259277,1.1174198389053345,1.1171131134033203,1.1168066263198853,1.1165004968643188,1.116194486618042,1.1158888339996338,1.1155834197998047,1.1152782440185547,1.1149731874465942,1.1146684885025024,1.1143640279769897,1.1140599250793457,1.1137559413909912,1.1134523153305054,1.113148808479309,1.1128456592559814,1.1125426292419434,1.112239956855774,1.1119375228881836,1.1116353273391724,1.1113333702087402,1.1110316514968872,1.1107300519943237,1.1104289293289185,1.1101279258728027,1.1098271608352661,1.1095266342163086,1.1092264652252197,1.1089264154434204,1.1086266040802002,1.1083271503448486,1.1080278158187866,1.1077288389205933,1.1074299812316895,1.1071313619613647,1.1068331003189087,1.1065350770950317,1.1062372922897339,1.1059396266937256,1.105642318725586,1.1053451299667358,1.1050482988357544,1.104751706123352,1.1044553518295288,1.1041591167449951,1.10386323928833,1.1035674810409546,1.1032720804214478,1.10297691822052,1.1026818752288818,1.1023871898651123,1.1020927429199219,1.101798415184021,1.1015044450759888,1.101210594177246,1.100917100906372,1.1006237268447876,1.1003307104110718,1.1000378131866455,1.099745273590088,1.0994528532028198,1.0991606712341309,1.098868727684021,1.0985771417617798,1.0982856750488281,1.0979944467544556,1.097703456878662,1.0974127054214478,1.0971221923828125,1.0968319177627563,1.0965417623519897,1.0962519645690918,1.0959622859954834,1.0956729650497437,1.0953837633132935,1.095094919204712,1.09480619430542,1.094517707824707,1.0942294597625732,1.0939414501190186,1.093653678894043,1.0933661460876465,1.0930787324905396,1.0927916765213013,1.092504858970642,1.0922181606292725,1.0919318199157715,1.09164559841156,1.0913596153259277,1.0910738706588745,1.0907883644104004,1.0905030965805054,1.0902179479599,1.089933156967163,1.0896484851837158,1.0893640518188477,1.0890798568725586,1.0887959003448486,1.0885121822357178,1.088228702545166,1.0879454612731934,1.0876623392105103,1.0873794555664062,1.0870968103408813,1.0868144035339355,1.0865322351455688,1.0862503051757812,1.0859684944152832,1.0856869220733643,1.0854055881500244,1.0851246118545532,1.084843635559082,1.0845630168914795,1.084282636642456,1.0840023756027222,1.0837223529815674,1.0834425687789917,1.0831629037857056,1.082883596420288,1.0826044082641602,1.0823255777359009,1.0820468664169312,1.081768274307251,1.0814900398254395,1.0812119245529175,1.0809340476989746,1.0806565284729004,1.0803790092468262,1.0801018476486206,1.0798248052597046,1.0795481204986572,1.0792714357376099,1.0789951086044312,1.0787190198898315,1.0784430503845215,1.0781673192977905,1.0778918266296387,1.077616572380066,1.0773414373397827,1.0770665407180786,1.0767918825149536,1.0765174627304077,1.0762431621551514,1.0759692192077637,1.075695276260376,1.075421690940857,1.075148344039917,1.0748751163482666,1.0746020078659058,1.0743292570114136,1.0740567445755005,1.073784351348877,1.0735121965408325,1.0732401609420776,1.0729684829711914,1.0726969242095947,1.0724254846572876,1.0721544027328491,1.0718835592269897,1.0716127157211304,1.0713422298431396,1.071071982383728,1.070801854133606,1.0705318450927734,1.0702621936798096,1.0699926614761353,1.0697234869003296,1.069454312324524,1.0691853761672974,1.0689167976379395,1.068648338317871,1.0683799982070923,1.0681118965148926,1.067844033241272,1.0675764083862305,1.0673089027404785,1.0670416355133057,1.0667744874954224,1.0665076971054077,1.0662410259246826,1.065974473953247,1.0657082796096802,1.0654422044754028,1.065176248550415,1.064910650253296,1.0646451711654663,1.0643799304962158,1.0641148090362549,1.063849925994873,1.0635852813720703,1.0633207559585571,1.063056468963623,1.062792420387268,1.0625284910202026,1.0622648000717163,1.062001347541809,1.0617380142211914,1.0614748001098633,1.0612119436264038,1.0609492063522339,1.060686707496643,1.0604243278503418,1.0601621866226196,1.0599002838134766,1.059638500213623,1.0593769550323486,1.0591156482696533,1.0588544607162476,1.058593511581421,1.0583326816558838,1.0580720901489258,1.0578117370605469,1.0575515031814575,1.0572915077209473,1.0570316314697266,1.0567721128463745,1.0565125942230225,1.056253433227539,1.0559942722320557,1.0557353496551514,1.0554767847061157,1.05521821975708,1.054960012435913,1.054701805114746,1.0544439554214478,1.054186224937439,1.0539287328720093,1.0536713600158691,1.053414225578308,1.0531572103500366,1.0529004335403442,1.0526437759399414,1.0523874759674072,1.052131175994873,1.051875114440918,1.051619291305542,1.0513635873794556,1.0511082410812378,1.05085289478302,1.0505977869033813,1.0503429174423218,1.0500881671905518,1.0498335361480713,1.04957914352417,1.0493249893188477,1.0490710735321045,1.0488172769546509,1.0485635995864868,1.0483101606369019,1.0480568408966064,1.0478038787841797,1.047550916671753,1.0472981929779053,1.0470457077026367,1.0467933416366577,1.0465412139892578,1.0462892055511475,1.0460374355316162,1.0457857847213745,1.045534372329712,1.0452831983566284,1.0450321435928345,1.04478120803833,1.0445305109024048,1.044279932975769,1.0440295934677124,1.0437794923782349,1.0435293912887573,1.0432796478271484,1.043030023574829,1.0427805185317993,1.0425312519073486,1.042282223701477,1.042033314704895,1.0417845249176025,1.0415359735488892,1.0412876605987549,1.0410393476486206,1.040791392326355,1.040543556213379,1.0402958393096924,1.040048360824585,1.039801001548767,1.0395538806915283,1.0393069982528687,1.039060115814209,1.038813591003418,1.038567066192627,1.038320779800415,1.0380747318267822,1.037828803062439,1.0375831127166748,1.0373375415802002,1.0370920896530151,1.0368468761444092,1.0366019010543823,1.036357045173645,1.0361123085021973,1.0358678102493286,1.0356234312057495,1.0353792905807495,1.035135269165039,1.0348914861679077,1.034647822380066,1.0344042778015137,1.0341609716415405,1.0339179039001465,1.0336748361587524,1.033432126045227,1.0331895351409912,1.0329469442367554,1.0327047109603882,1.0324625968933105,1.0322206020355225,1.0319788455963135,1.0317373275756836,1.0314958095550537,1.0312546491622925,1.0310134887695312,1.0307725667953491,1.0305317640304565,1.030291199684143,1.0300507545471191,1.0298105478286743,1.029570460319519,1.0293304920196533,1.0290907621383667,1.0288511514663696,1.0286117792129517,1.0283724069595337,1.0281333923339844,1.0278944969177246,1.0276557207107544,1.0274171829223633,1.0271787643432617,1.0269404649734497,1.0267024040222168,1.0264644622802734,1.0262267589569092,1.0259891748428345,1.0257517099380493,1.0255144834518433,1.0252773761749268,1.0250403881072998,1.024803638458252,1.0245670080184937,1.0243306159973145,1.0240943431854248,1.0238581895828247,1.0236222743988037,1.0233864784240723,1.02315092086792,1.0229153633117676,1.0226801633834839,1.0224449634552002,1.0222100019454956,1.0219751596450806,1.0217405557632446,1.0215060710906982,1.0212717056274414,1.0210375785827637,1.0208035707473755,1.0205696821212769,1.0203360319137573,1.0201025009155273,1.0198692083358765,1.0196360349655151,1.0194028615951538,1.0191700458526611,1.018937349319458,1.0187047719955444,1.0184723138809204,1.0182400941848755,1.0180079936981201,1.0177760124206543,1.0175442695617676,1.0173126459121704,1.0170812606811523,1.0168498754501343,1.0166187286376953,1.0163878202438354,1.0161570310592651,1.0159263610839844,1.0156958103179932,1.015465497970581,1.0152353048324585,1.0150052309036255,1.0147753953933716,1.0145455598831177,1.0143160820007324,1.0140866041183472,1.013857364654541,1.0136282444000244,1.013399362564087,1.013170599937439,1.0129419565200806,1.0127134323120117,1.0124850273132324,1.0122568607330322,1.0120289325714111,1.01180100440979,1.011573314666748,1.0113457441329956,1.0111184120178223,1.010891079902649,1.0106639862060547,1.01043701171875,1.0102102756500244,1.0099836587905884,1.009757161140442,1.009530782699585,1.0093046426773071,1.0090786218643188,1.0088527202606201,1.008626937866211,1.0084013938903809,1.0081759691238403,1.0079506635665894,1.0077255964279175,1.0075005292892456,1.0072757005691528,1.0070511102676392,1.0068265199661255,1.006602168083191,1.006377935409546,1.00615394115448,1.005929946899414,1.0057061910629272,1.00548255443573,1.0052591562271118,1.0050357580184937,1.0048125982284546,1.004589557647705,1.0043667554855347,1.0041439533233643,1.003921389579773,1.0036989450454712,1.0034767389297485,1.0032545328140259,1.0030325651168823,1.0028107166290283,1.0025889873504639,1.002367377281189,1.0021460056304932,1.001924753189087,1.0017036199569702,1.0014827251434326,1.001261830329895,1.001041293144226,1.0008207559585571,1.0006003379821777,1.000380039215088,1.0001599788665771,0.999940037727356,0.9997201561927795,0.9995006322860718,0.999281108379364,0.9990617632865906,0.9988425374031067,0.9986233711242676,0.9984044432640076,0.9981856942176819,0.9979669451713562,0.9977485537528992,0.9975301623344421,0.9973119497299194,0.997093915939331,0.9968760013580322,0.996658205986023,0.996440589427948,0.996222972869873,0.9960057139396667,0.9957885146141052,0.9955714344978333,0.995354413986206,0.9951377511024475,0.9949210286140442,0.9947044253349304,0.9944881796836853,0.9942718744277954,0.9940557479858398,0.9938399195671082,0.9936240911483765,0.9934084415435791,0.9931929707527161,0.9929774403572083,0.9927622675895691,0.9925470948219299,0.9923322200775146,0.9921173453330994,0.991902768611908,0.9916881918907166,0.9914737939834595,0.9912595152854919,0.9910452961921692,0.9908313155174255,0.990617573261261,0.9904037714004517,0.9901902675628662,0.9899768233299255,0.9897634983062744,0.9895502924919128,0.9893373250961304,0.9891244173049927,0.9889117479324341,0.9886990189552307,0.988486647605896,0.9882742166519165,0.9880621433258057,0.98785001039505,0.9876381158828735,0.9874262809753418,0.9872146844863892,0.9870031476020813,0.986791729927063,0.986580491065979,0.9863693714141846,0.9861584305763245,0.9859476089477539,0.9857368469238281,0.9855263233184814,0.9853158593177795,0.9851055145263672,0.9848953485488892,0.9846854209899902,0.9844755530357361,0.9842656850814819,0.9840561151504517,0.9838466644287109,0.983637273311615,0.9834280610084534,0.9832189679145813,0.9830099940299988,0.9828011989593506,0.9825924634933472,0.9823839664459229,0.9821754097938538,0.9819672107696533,0.9817589521408081,0.9815510511398315,0.9813430905342102,0.9811353087425232,0.9809276461601257,0.9807202219963074,0.9805128574371338,0.980305552482605,0.9800984859466553,0.9798914790153503,0.9796847105026245,0.9794780015945435,0.9792713522911072,0.97906494140625,0.9788586497306824,0.9786524176597595,0.978446364402771,0.9782403707504272,0.9780346155166626,0.9778289794921875,0.9776234030723572,0.9774180054664612,0.9772127270698547,0.9770075082778931,0.9768025279045105,0.9765976071357727,0.9763928651809692,0.9761882424354553,0.9759836792945862,0.9757793545722961,0.9755750894546509,0.9753708839416504,0.975166916847229,0.9749630093574524,0.9747592806816101,0.9745556712150574,0.9743523001670837,0.9741488099098206,0.973945677280426,0.9737425446510315,0.9735395908355713,0.9733366966247559,0.9731340408325195,0.972931444644928,0.9727289080619812,0.9725266098976135,0.9723243713378906,0.9721222519874573,0.9719203114509583,0.971718430519104,0.9715167284011841,0.9713151454925537,0.9711138010025024,0.9709123373031616,0.9707111120223999,0.9705101251602173,0.9703091382980347,0.9701083302497864,0.9699076414108276,0.9697069525718689,0.969506561756134,0.9693061709403992,0.9691060185432434,0.9689059257507324,0.968705952167511,0.9685060977935791,0.968306303024292,0.968106746673584,0.9679072499275208,0.9677079319953918,0.9675086736679077,0.9673095345497131,0.9671105742454529,0.9669117331504822,0.9667129516601562,0.9665144681930542,0.9663158059120178,0.9661175012588501,0.9659192562103271,0.9657212495803833,0.9655231237411499,0.9653252363204956,0.9651274681091309,0.9649298787117004,0.9647323489189148,0.9645349979400635,0.9643377065658569,0.9641405344009399,0.9639434814453125,0.9637466669082642,0.9635498523712158,0.9633532166481018,0.963156521320343,0.9629601836204529,0.9627639055252075,0.9625676870346069,0.9623715877532959,0.9621756076812744,0.9619798064231873,0.9617841243743896,0.9615885615348816,0.9613930583000183,0.9611977338790894,0.9610024690628052,0.9608073234558105,0.9606123566627502,0.9604174494743347,0.9602227807044983,0.9600280523300171,0.9598335027694702,0.9596391320228577,0.9594447612762451,0.9592506885528564,0.959056556224823,0.9588627815246582,0.9586688876152039,0.9584752321243286,0.9582815766334534,0.9580881595611572,0.9578947424888611,0.9577016234397888,0.9575084447860718,0.9573155045509338,0.9571225643157959,0.9569298624992371,0.9567371010780334,0.9565446972846985,0.9563522338867188,0.9561598896980286,0.9559677243232727,0.9557756781578064,0.9555837512016296,0.9553919434547424,0.9552001953125,0.9550086855888367,0.9548171162605286,0.9546257853507996,0.9544345140457153,0.9542433023452759,0.9540523290634155,0.9538613557815552,0.9536706209182739,0.9534799456596375,0.9532893896102905,0.9530989527702332,0.9529085159301758,0.9527183771133423,0.952528178691864,0.9523382782936096,0.9521483778953552,0.9519585967063904,0.9517688751220703,0.9515793919563293,0.9513899683952332,0.951200544834137,0.9510113596916199,0.9508222937583923,0.9506333470344543,0.9504444003105164,0.9502556324005127,0.9500669836997986,0.9498785138130188,0.9496901035308838,0.9495017528533936,0.9493136405944824,0.9491255283355713,0.9489375352859497,0.9487497210502625,0.9485619068145752,0.948374330997467,0.9481867551803589,0.9479994177818298,0.9478120803833008,0.947624921798706,0.9474377036094666,0.9472508430480957,0.9470639824867249,0.9468772411346436,0.946690559387207,0.9465040564537048,0.9463176131248474,0.9461313486099243,0.9459450840950012,0.945759117603302,0.945573091506958,0.9453872442245483,0.9452014565467834,0.9450157284736633,0.9448302388191223,0.9446448683738708,0.9444594979286194,0.9442743062973022,0.9440891742706299,0.9439042210578918,0.943719208240509,0.9435344338417053,0.9433498382568359,0.9431652426719666,0.9429807662963867,0.9427964687347412,0.9426122307777405,0.9424281120300293,0.9422441124916077,0.9420601725578308,0.9418763518333435,0.9416927099227905,0.9415091276168823,0.9413256049156189,0.9411422610282898,0.9409589767456055,0.9407758116722107,0.9405927658081055,0.9404098391532898,0.9402269721031189,0.9400442242622375,0.9398615956306458,0.9396790862083435,0.9394966959953308,0.9393143653869629,0.9391321539878845,0.9389500617980957,0.9387680888175964,0.9385861158370972,0.938404381275177,0.9382227063179016,0.938041090965271,0.9378596544265747,0.937678337097168,0.9374971389770508,0.9373158812522888,0.937134861946106,0.9369539618492126,0.9367731809616089,0.9365923404693604,0.9364117980003357,0.9362313151359558,0.9360508918762207,0.9358705282211304,0.9356902241706848,0.9355102181434631,0.9353302121162415,0.9351503252983093,0.9349705576896667,0.9347907900810242,0.9346112608909607,0.934431791305542,0.9342523813247681,0.9340730905532837,0.9338939189910889,0.9337148070335388,0.9335359334945679,0.9333570599555969,0.9331782460212708,0.9329996109008789,0.9328210949897766,0.9326426982879639,0.9324642419815063,0.9322860240936279,0.9321078658103943,0.9319298267364502,0.9317519068717957,0.9315741062164307,0.9313963055610657,0.931218683719635,0.9310411214828491,0.9308637380599976,0.9306864142417908,0.9305091500282288,0.9303320646286011,0.9301550388336182,0.92997807264328,0.929801344871521,0.9296244978904724,0.9294479489326477,0.929271399974823,0.9290949702262878,0.9289186000823975,0.9287424683570862,0.9285663366317749,0.9283903241157532,0.9282143115997314,0.9280385375022888,0.9278627634048462,0.9276872277259827,0.9275116920471191,0.9273362755775452,0.927160918712616,0.9269857406616211,0.9268105626106262,0.9266355037689209,0.9264606237411499,0.9262858033180237,0.926111102104187,0.9259364008903503,0.9257619976997375,0.92558753490448,0.925413191318512,0.9252389073371887,0.9250648021697998,0.9248906970024109,0.9247168898582458,0.924543023109436,0.924369215965271,0.9241955876350403,0.9240220785140991,0.923848569393158,0.9236752390861511,0.9235019683837891,0.9233288764953613,0.9231557250022888,0.9229828119277954,0.922809898853302,0.9226371645927429,0.9224644899368286,0.9222919940948486,0.9221194386482239,0.9219471216201782,0.9217748045921326,0.9216026663780212,0.9214304685592651,0.9212585091590881,0.9210865497589111,0.920914888381958,0.9207431077957153,0.9205714464187622,0.9203999638557434,0.9202284812927246,0.9200572371482849,0.9198859930038452,0.9197148680686951,0.9195438623428345,0.9193729758262634,0.9192019701004028,0.9190313220024109,0.918860673904419,0.9186900854110718,0.9185196161270142,0.9183492660522461,0.9181789755821228,0.9180088639259338,0.9178386926651001,0.9176687002182007,0.917498767375946,0.9173290133476257,0.9171593189239502,0.9169896841049194,0.916820228099823,0.9166508316993713,0.9164814352989197,0.9163121581077576,0.9161430597305298,0.9159740209579468,0.9158049821853638,0.9156361818313599,0.915467381477356,0.9152987599372864,0.9151301383972168,0.9149616360664368,0.9147931933403015,0.9146249294281006,0.9144567251205444,0.9142885804176331,0.914120614528656,0.9139527082443237,0.9137848615646362,0.9136170744895935,0.9134494066238403,0.9132818579673767,0.9131143689155579,0.9129469990730286,0.912779688835144,0.9126124978065491,0.9124454259872437,0.9122782945632935,0.9121114611625671,0.911944568157196,0.9117778539657593,0.9116111993789673,0.9114447236061096,0.9112781882286072,0.9111118912696838,0.9109455347061157,0.9107794165611267,0.9106132984161377,0.9104472398757935,0.9102813005447388,0.9101155400276184,0.9099498391151428,0.9097841382026672,0.9096185564994812,0.9094530940055847,0.9092877507209778,0.9091225266456604,0.9089572429656982,0.9087921977043152,0.9086270928382874,0.9084622859954834,0.9082974195480347,0.9081326127052307,0.9079679846763611,0.9078033566474915,0.9076389670372009,0.9074745774269104,0.9073103070259094,0.9071460366249084,0.9069819450378418,0.9068179130554199,0.9066539406776428,0.9064900279045105,0.9063262939453125,0.9061625599861145,0.9059990644454956,0.9058355689048767,0.9056721329689026,0.9055087566375732,0.9053455591201782,0.905182421207428,0.9050194621086121,0.9048563838005066,0.9046935439109802,0.9045307040214539,0.9043680429458618,0.9042053818702698,0.9040428996086121,0.9038804173469543,0.903718113899231,0.9035558700561523,0.9033936262130737,0.9032315611839294,0.9030696153640747,0.90290766954422,0.90274578332901,0.9025840163230896,0.9024223685264587,0.9022608399391174,0.9020993113517761,0.9019379019737244,0.9017766714096069,0.9016153812408447,0.9014542698860168,0.9012932181358337,0.9011322855949402,0.9009713530540466,0.9008105993270874,0.900649905204773,0.9004892706871033,0.9003287553787231,0.9001682996749878,0.9000079035758972,0.899847686290741,0.8996874094009399,0.899527370929718,0.8993673324584961,0.8992072939872742,0.8990475535392761,0.8988876938819885,0.8987281322479248,0.8985685110092163,0.8984089493751526,0.8982495665550232,0.8980901837348938,0.897930920124054,0.8977717757225037,0.8976126909255981,0.897453784942627,0.897294819355011,0.8971359729766846,0.8969771862030029,0.8968185782432556,0.8966599702835083,0.8965014219284058,0.8963429927825928,0.8961847424507141,0.8960264921188354,0.8958683013916016,0.895710289478302,0.8955522775650024,0.8953943848609924,0.8952365517616272,0.8950788378715515,0.8949211835861206,0.8947635889053345,0.8946060538291931,0.8944486379623413,0.8942912817001343,0.8941341042518616,0.8939769864082336,0.8938198089599609,0.8936628699302673,0.8935059309005737,0.8933491110801697,0.8931923508644104,0.8930357694625854,0.892879068851471,0.8927226066589355,0.8925662636756897,0.8924098610877991,0.8922536373138428,0.8920974135398865,0.8919413685798645,0.8917853236198425,0.8916293978691101,0.8914735317230225,0.8913177847862244,0.891162097454071,0.8910065293312073,0.8908510208129883,0.8906956315040588,0.8905401825904846,0.8903849720954895,0.8902297019958496,0.890074610710144,0.8899195790290833,0.889764666557312,0.8896098136901855,0.8894550204277039,0.8893002867698669,0.8891457319259644,0.888991117477417,0.888836681842804,0.8886823058128357,0.8885279893875122,0.8883737921714783,0.8882195949554443,0.8880655765533447,0.8879116177558899,0.8877577185630798,0.8876038193702698,0.887450098991394,0.8872964382171631,0.8871428370475769,0.8869893550872803,0.8868359923362732,0.8866826295852661,0.8865293264389038,0.886376142501831,0.8862230181694031,0.8860700130462646,0.885917067527771,0.8857641220092773,0.8856114149093628,0.8854587078094482,0.8853060603141785,0.8851535320281982,0.8850010633468628,0.8848485946655273,0.884696364402771,0.8845440745353699,0.8843919634819031,0.8842397928237915,0.8840879201889038,0.8839359879493713,0.8837840557098389,0.8836323022842407,0.8834806084632874,0.8833289742469788,0.8831775188446045,0.8830260634422302,0.8828746676445007,0.882723331451416,0.8825721144676208,0.8824209570884705,0.8822699785232544,0.8821189403533936,0.8819680213928223,0.8818172216415405,0.8816664814949036,0.8815157413482666,0.881365180015564,0.8812146186828613,0.881064236164093,0.8809138536453247,0.880763590335846,0.8806133270263672,0.8804632425308228,0.8803131580352783,0.8801631331443787,0.8800132274627686,0.8798633813858032,0.8797136545181274,0.8795639276504517,0.8794143795967102,0.879264771938324,0.8791154026985168,0.8789659738540649,0.8788167238235474,0.8786675333976746,0.8785183429718018,0.8783692121505737,0.87822026014328,0.8780713677406311,0.877922534942627,0.8777737617492676,0.877625048160553,0.8774764537811279,0.8773279190063477,0.8771794438362122,0.8770310282707214,0.8768826723098755,0.8767344951629639,0.876586377620697,0.8764382600784302,0.8762902021408081,0.8761423230171204,0.8759943842887878,0.8758466839790344,0.8756989240646362,0.8755512833595276,0.8754037618637085,0.8752562403678894,0.8751087784767151,0.8749614357948303,0.8748141527175903,0.8746670484542847,0.8745198845863342,0.8743728399276733,0.8742258548736572,0.8740789890289307,0.8739321231842041,0.8737853765487671,0.8736386895179749,0.8734921216964722,0.8733456134796143,0.8731991052627563,0.8730527758598328,0.8729064464569092,0.8727601766586304,0.8726140260696411,0.8724679946899414,0.8723219633102417,0.8721759915351868,0.8720301389694214,0.8718844056129456,0.8717386722564697,0.8715930581092834,0.8714474439620972,0.8713020086288452,0.8711565136909485,0.8710111379623413,0.8708658814430237,0.870720624923706,0.8705755472183228,0.8704304695129395,0.8702855110168457,0.870140552520752,0.8699957132339478,0.8698509931564331,0.8697062134742737,0.8695616126060486,0.8694170713424683,0.8692725896835327,0.8691281080245972,0.8689837455749512,0.8688395023345947,0.8686953783035278,0.8685511946678162,0.868407130241394,0.8682631254196167,0.8681192994117737,0.8679754137992859,0.8678317070007324,0.8676878809928894,0.8675443530082703,0.8674008250236511,0.8672572374343872,0.8671138882637024,0.8669704794883728,0.8668272495269775,0.8666840195655823,0.8665409684181213,0.8663978576660156,0.8662549257278442,0.8661119937896729,0.865969181060791,0.8658263683319092,0.8656836748123169,0.8655410408973694,0.8653985261917114,0.8652559518814087,0.8651135563850403,0.8649711608886719,0.8648289442062378,0.8646867275238037,0.8645446300506592,0.8644025325775146,0.8642605543136597,0.8641185760498047,0.8639767169952393,0.8638348579406738,0.8636931777000427,0.8635515570640564,0.8634099364280701,0.8632684350013733,0.8631269931793213,0.8629856705665588,0.8628443479537964,0.8627030849456787,0.8625619411468506,0.8624208569526672,0.8622797727584839,0.8621388673782349,0.8619979619979858,0.8618571162223816,0.8617164492607117,0.861575722694397,0.8614351153373718,0.8612945675849915,0.8611540794372559,0.861013650894165,0.8608733415603638,0.8607330322265625,0.8605928421020508,0.8604527711868286,0.8603127002716064,0.860172688961029,0.8600327372550964,0.8598929047584534,0.8597530722618103,0.8596134185791016,0.859473705291748,0.8593341708183289,0.8591945767402649,0.85905522108078,0.8589158058166504,0.8587765097618103,0.8586372137069702,0.8584980964660645,0.8583589196205139,0.8582199215888977,0.8580809831619263,0.8579420447349548,0.8578031659126282,0.8576644062995911,0.8575257062911987,0.8573870658874512,0.8572485446929932,0.8571099638938904,0.8569715023040771,0.8568332195281982,0.8566948771476746,0.8565566539764404,0.8564184904098511,0.8562803864479065,0.8561422824859619,0.8560043573379517,0.8558664321899414,0.8557286858558655,0.8555908799171448,0.8554531931877136,0.8553155064582825,0.8551779389381409,0.8550404906272888,0.854902982711792,0.8547655940055847,0.854628324508667,0.8544910550117493,0.8543539047241211,0.8542168140411377,0.8540797233581543,0.8539428114891052,0.8538058996200562,0.8536690473556519,0.8535322546958923,0.8533955812454224,0.8532588481903076,0.853122353553772,0.8529857993125916,0.8528494238853455,0.8527129292488098,0.852576732635498,0.8524404168128967,0.852304220199585,0.852168083190918,0.8520320057868958,0.8518961071968079,0.8517600893974304,0.8516242504119873,0.851488471031189,0.8513526916503906,0.8512170910835266,0.8510814905166626,0.8509459495544434,0.8508104085922241,0.8506750464439392,0.8505397439002991,0.8504044413566589,0.8502691984176636,0.8501340746879578,0.8499990105628967,0.8498640060424805,0.8497290015220642,0.8495941758155823,0.8494592308998108,0.8493244647979736,0.849189817905426,0.8490551710128784,0.8489205837249756,0.8487860560417175,0.8486517071723938,0.8485172390937805,0.8483829498291016,0.8482487201690674,0.8481144905090332,0.8479803800582886,0.8478463888168335,0.8477123379707336,0.8475784063339233,0.8474445939064026,0.8473107814788818,0.8471769690513611,0.8470433354377747,0.8469096422195435,0.8467761278152466,0.8466426134109497,0.8465091586112976,0.8463758826255798,0.8462425470352173,0.8461093306541443,0.8459761142730713,0.8458429574966431,0.8457099795341492,0.8455769419670105,0.8454440832138062,0.8453112244606018,0.8451784253120422,0.8450456857681274,0.8449130058288574,0.8447803258895874,0.8446478247642517,0.844515323638916,0.8443828821182251,0.8442505598068237,0.8441182374954224,0.8439859747886658,0.8438538908958435,0.8437217473983765,0.8435896039009094,0.8434576392173767,0.843325674533844,0.8431938886642456,0.8430620431900024,0.8429303169250488,0.8427985906600952,0.8426670432090759,0.8425354361534119,0.8424039483070374,0.8422725200653076,0.8421412110328674,0.8420098423957825,0.8418785929679871,0.8417474031448364,0.8416163325309753,0.8414852023124695,0.841354250907898,0.8412232995033264,0.8410924077033997,0.8409616351127625,0.8408308625221252,0.840700089931488,0.8405694961547852,0.8404389023780823,0.840308427810669,0.8401779532432556,0.8400475382804871,0.8399171829223633,0.839786946773529,0.8396567106246948,0.8395265340805054,0.8393964767456055,0.8392664194107056,0.8391364812850952,0.8390065431594849,0.8388767242431641,0.8387469053268433,0.838617205619812,0.8384875059127808,0.8383578658103943,0.8382283449172974,0.8380988836288452,0.8379694223403931,0.8378400802612305,0.8377106785774231,0.83758145570755,0.8374522924423218,0.8373232483863831,0.8371940851211548,0.8370651006698608,0.8369361162185669,0.8368072509765625,0.8366783857345581,0.8365496397018433,0.8364209532737732,0.8362922668457031,0.8361636996269226,0.8360351920127869,0.8359066843986511,0.8357782959938049,0.8356499075889587,0.8355216383934021,0.8353933095932007,0.8352652192115784,0.8351370692253113,0.835008978843689,0.8348810076713562,0.8347530364990234,0.8346251845359802,0.8344973921775818,0.8343695402145386,0.8342418670654297,0.8341141939163208,0.8339866399765015,0.8338590860366821,0.8337315917015076,0.8336041569709778,0.8334769010543823,0.8333495259284973,0.8332223296165466,0.833095133304596,0.83296799659729,0.8328409194946289,0.8327139019966125,0.832586944103241,0.8324599862098694,0.8323332071304321,0.8322063684463501,0.8320797681808472,0.8319529891014099,0.8318264484405518,0.8316998481750488,0.8315733671188354,0.8314469456672668,0.8313206434249878,0.831194281578064,0.8310680389404297,0.8309418559074402,0.8308156728744507,0.8306896090507507,0.8305636644363403,0.8304376006126404,0.8303117156028748,0.8301858305931091,0.8300600647926331,0.829934298992157,0.8298086524009705,0.8296830058097839,0.829557478427887,0.8294318914413452,0.829306423664093,0.8291810154914856,0.8290557265281677,0.8289304375648499,0.8288052082061768,0.8286800384521484,0.8285549283027649,0.8284298777580261,0.8283048868179321,0.8281799554824829,0.8280550241470337,0.827930212020874,0.8278054594993591,0.8276806473731995,0.8275560736656189,0.8274313807487488,0.827306866645813,0.827182412147522,0.827057957649231,0.8269335031509399,0.8268092274665833,0.8266849517822266,0.8265607357025146,0.8264365792274475,0.8263124823570251,0.8261884450912476,0.82606440782547,0.8259405493736267,0.8258166313171387,0.8256928324699402,0.8255690336227417,0.8254453539848328,0.8253216743469238,0.8251980543136597,0.8250745534896851,0.8249510526657104,0.8248276114463806,0.8247042298316956,0.8245808482170105,0.824457585811615,0.8243343830108643,0.8242112398147583,0.8240882158279419,0.8239651322364807,0.8238420486450195,0.8237192034721375,0.8235962390899658,0.8234734535217285,0.8233506679534912,0.8232280015945435,0.8231053352355957,0.8229827284812927,0.8228601217269897,0.8227376937866211,0.8226152062416077,0.8224928379058838,0.8223704695701599,0.8222482800483704,0.822126030921936,0.8220037817955017,0.8218817114830017,0.8217596411705017,0.8216376304626465,0.8215156197547913,0.8213937878608704,0.8212719559669495,0.8211501240730286,0.8210284113883972,0.8209067583084106,0.8207850456237793,0.820663571357727,0.8205419778823853,0.8204205632209778,0.8202991485595703,0.8201777935028076,0.8200564980506897,0.8199352025985718,0.8198139667510986,0.819692850112915,0.8195717930793762,0.8194507956504822,0.8193297982215881,0.8192088603973389,0.8190879225730896,0.8189671635627747,0.8188464045524597,0.8187256455421448,0.8186050057411194,0.818484365940094,0.8183637857437134,0.8182433843612671,0.8181228637695312,0.818002462387085,0.8178821206092834,0.8177618980407715,0.8176416158676147,0.8175214529037476,0.8174012899398804,0.8172812461853027,0.8171612620353699,0.8170412182807922,0.8169212937355042,0.8168014287948608,0.8166816234588623,0.8165618777275085,0.8164421916007996,0.8163225650787354,0.8162029385566711,0.8160833716392517,0.815963864326477,0.8158444166183472,0.8157250285148621,0.8156057000160217,0.8154864311218262,0.8153671622276306,0.8152479529380798,0.8151288032531738,0.8150097727775574,0.8148906826972961,0.814771831035614,0.8146528005599976,0.8145340085029602,0.8144151568412781,0.8142964243888855,0.8141776919364929,0.8140590190887451,0.8139404058456421,0.8138218522071838,0.8137033581733704,0.8135849237442017,0.813466489315033,0.8133481740951538,0.8132297992706299,0.8131116032600403,0.8129934072494507,0.8128752708435059,0.812757134437561,0.8126391172409058,0.8125211596488953,0.8124032020568848,0.8122852444648743,0.8121674656867981,0.8120496869087219,0.8119319677352905,0.8118142485618591,0.8116966485977173,0.8115791082382202,0.8114615082740784,0.8113440871238708,0.8112266063690186,0.8111092448234558,0.8109918832778931,0.8108747005462646,0.8107574582099915,0.8106402158737183,0.8105231523513794,0.8104060888290405,0.8102890253067017,0.8101720213890076,0.810055136680603,0.8099383115768433,0.8098214268684387,0.8097047209739685,0.8095879554748535,0.8094713091850281,0.8093546628952026,0.8092381358146667,0.8091216087341309,0.8090051412582397,0.8088887333869934,0.8087723851203918,0.8086560368537903,0.8085397481918335,0.8084235787391663,0.808307409286499,0.8081912994384766,0.8080752491950989,0.8079591989517212,0.8078432679176331,0.8077273368835449,0.8076114654541016,0.807495653629303,0.8073799014091492,0.8072641491889954,0.8071485161781311,0.8070328831672668,0.8069173693656921,0.8068017959594727,0.8066863417625427,0.8065709471702576,0.8064555525779724,0.806340217590332,0.8062250018119812,0.8061097860336304,0.8059945702552795,0.8058794736862183,0.805764377117157,0.8056493401527405,0.8055343627929688,0.8054194450378418,0.8053045868873596,0.8051897883415222,0.8050750494003296,0.804960310459137,0.8048456311225891,0.8047309517860413,0.804616391658783,0.8045018911361694,0.8043873310089111,0.8042729496955872,0.8041585683822632,0.804044246673584,0.80392986536026,0.8038157224655151,0.8037015199661255,0.8035873174667358,0.8034732937812805,0.8033592104911804,0.8032452464103699,0.8031312823295593,0.8030173778533936,0.8029035925865173,0.8027897477149963,0.8026760220527649,0.8025622963905334,0.8024486303329468,0.8023349642753601,0.8022214770317078,0.8021079897880554,0.8019945025444031,0.8018810749053955,0.8017676472663879,0.8016543984413147,0.8015411496162415,0.8014278411865234,0.8013147115707397,0.801201581954956,0.8010885119438171,0.8009754419326782,0.8008624315261841,0.8007495403289795,0.8006366491317749,0.8005238175392151,0.8004110455513,0.800298273563385,0.8001855611801147,0.800072968006134,0.7999603152275085,0.7998478412628174,0.7997352480888367,0.7996228337287903,0.7995104193687439,0.7993980646133423,0.7992857098579407,0.7991734743118286,0.7990612387657166,0.7989490628242493,0.798836886882782,0.798724889755249,0.7986127734184265,0.7985008358955383,0.7983888983726501,0.7982770204544067,0.7981651425361633,0.7980533838272095,0.7979415655136108,0.7978299260139465,0.7977182269096375,0.7976066470146179,0.7974950671195984,0.7973835468292236,0.7972720861434937,0.7971606254577637,0.7970492839813232,0.7969379425048828,0.7968266606330872,0.7967154383659363,0.7966042160987854,0.7964931130409241,0.7963820099830627,0.7962709069252014,0.7961599826812744,0.7960489392280579,0.7959380745887756,0.7958271503448486,0.795716404914856,0.7956056594848633,0.7954948544502258,0.7953842282295227,0.7952736020088196,0.7951629161834717,0.7950524687767029,0.7949419021606445,0.7948315143585205,0.7947211265563965,0.7946107387542725,0.7945004105567932,0.7943901419639587,0.794279932975769,0.7941697835922241,0.7940596342086792,0.793949544429779,0.7938395142555237,0.7937294840812683,0.7936195731163025,0.7935096621513367,0.7933998107910156,0.7932900190353394,0.7931802868843079,0.7930705547332764,0.7929608821868896,0.7928512692451477,0.7927416563034058,0.7926321029663086,0.7925226092338562,0.7924131751060486,0.792303740978241,0.7921944260597229,0.7920851111412048,0.7919758558273315,0.791866660118103,0.7917574644088745,0.7916483283042908,0.7915392518043518,0.7914302349090576,0.7913212180137634,0.791212260723114,0.7911033630371094,0.7909945845603943,0.7908856868743896,0.7907769680023193,0.790668249130249,0.7905595302581787,0.7904508709907532,0.7903423309326172,0.7902337908744812,0.7901252508163452,0.7900168299674988,0.7899084091186523,0.7897999882698059,0.7896917462348938,0.7895834445953369,0.7894752621650696,0.7893670201301575,0.7892588973045349,0.7891507744789124,0.7890427708625793,0.7889347076416016,0.7888267636299133,0.7887188792228699,0.7886109948158264,0.788503110408783,0.7883954048156738,0.7882875800132751,0.788179874420166,0.7880722284317017,0.7879646420478821,0.7878570556640625,0.7877495884895325,0.7876420617103577,0.7875346541404724,0.7874272465705872,0.7873198390007019,0.7872125506401062,0.7871053218841553,0.7869980931282043,0.7868909239768982,0.7867838144302368,0.7866767048835754,0.7865697145462036,0.786462664604187,0.78635573387146,0.7862488031387329,0.7861419916152954,0.7860351800918579,0.7859283685684204,0.7858216166496277,0.7857149839401245,0.7856082916259766,0.7855016589164734,0.785395085811615,0.7852885723114014,0.7851821184158325,0.7850756645202637,0.7849692702293396,0.7848629355430603,0.784756600856781,0.7846503853797913,0.7845441699028015,0.7844379544258118,0.7843318581581116,0.7842258214950562,0.784119725227356,0.7840138077735901,0.7839077711105347,0.7838018536567688,0.7836959958076477,0.7835901975631714,0.7834843397140503,0.7833786606788635,0.783272922039032,0.7831672430038452,0.783061683177948,0.782956063747406,0.7828505635261536,0.7827451229095459,0.7826396226882935,0.7825342416763306,0.7824289202690125,0.7823235392570496,0.7822182774543762,0.7821130156517029,0.7820078730583191,0.7819027304649353,0.7817976474761963,0.7816925644874573,0.781587541103363,0.7814825773239136,0.7813776731491089,0.7812727093696594,0.7811678647994995,0.7810630798339844,0.7809582948684692,0.7808536291122437,0.7807489037513733,0.7806442379951477,0.7805396318435669,0.7804350852966309,0.7803305983543396,0.7802261114120483,0.7801216840744019,0.7800173163414001,0.7799129486083984,0.7798086404800415,0.7797043919563293,0.779600203037262,0.7794960141181946,0.779391884803772,0.7792877554893494,0.7791837453842163,0.7790796756744385,0.7789757251739502,0.7788717746734619,0.7787678837776184,0.7786640524864197,0.7785602807998657,0.778456449508667,0.7783527374267578,0.7782491445541382,0.778145432472229,0.7780418992042542,0.7779383659362793,0.7778347730636597,0.7777313590049744,0.7776278853416443,0.7775245308876038,0.7774211168289185,0.7773178219795227,0.777214527130127,0.7771113514900208,0.7770081758499146,0.7769050598144531,0.7768019437789917,0.776698887348175,0.7765958309173584,0.7764928936958313,0.7763898968696594,0.7762870192527771,0.7761841416358948,0.776081383228302,0.7759786248207092,0.7758758664131165,0.7757731676101685,0.7756704688072205,0.775567889213562,0.7754653692245483,0.7753627896308899,0.775260329246521,0.7751578688621521,0.775055468082428,0.7749530673027039,0.7748507857322693,0.7747485041618347,0.7746462821960449,0.7745440602302551,0.7744418978691101,0.7743397355079651,0.7742376327514648,0.7741356492042542,0.7740336060523987,0.773931622505188,0.7738296985626221,0.7737278342247009,0.7736259698867798,0.7735242247581482,0.773422360420227,0.773320734500885,0.7732189893722534,0.7731173634529114,0.7730157971382141,0.7729142308235168,0.7728126645088196,0.7727112174034119,0.7726097702980042,0.7725083827972412,0.7724069952964783,0.7723057270050049,0.7722043991088867,0.7721031308174133,0.7720019817352295,0.7719007730484009,0.7717996835708618,0.7716986536979675,0.7715975642204285,0.771496593952179,0.7713956236839294,0.7712947130203247,0.77119380235672,0.7710928916931152,0.7709921598434448,0.7708913683891296,0.7707906365394592,0.7706899642944336,0.770589292049408,0.7704887390136719,0.7703880667686462,0.7702876329421997,0.7701871395111084,0.7700866460800171,0.7699862122535706,0.7698858976364136,0.7697855830192566,0.7696852684020996,0.7695850133895874,0.7694847583770752,0.7693846225738525,0.7692844867706299,0.769184410572052,0.7690843343734741,0.7689842581748962,0.7688843011856079,0.7687843441963196,0.768684446811676,0.7685845494270325,0.7684847116470337,0.7683849930763245,0.7682852149009705,0.7681854963302612,0.7680858373641968,0.7679862380027771,0.7678866386413574,0.7677870392799377,0.7676875591278076,0.7675880789756775,0.7674886584281921,0.7673892378807068,0.767289936542511,0.7671906352043152,0.7670912742614746,0.7669920325279236,0.7668927907943726,0.7667936682701111,0.7666945457458496,0.7665954828262329,0.7664964199066162,0.7663974165916443,0.7662984132766724,0.7661994695663452,0.7661005258560181,0.7660017013549805,0.7659028768539429,0.76580411195755,0.765705406665802,0.7656066417694092,0.7655079960823059,0.7654093503952026,0.7653107643127441,0.7652121782302856,0.7651137113571167,0.765015184879303,0.7649167776107788,0.7648183703422546,0.7647200226783752,0.7646216750144958,0.7645233869552612,0.7644251585006714,0.7643269300460815,0.7642287611961365,0.7641305923461914,0.7640325427055359,0.7639344930648804,0.7638363838195801,0.7637383937835693,0.7636404633522034,0.7635425925254822,0.7634446620941162,0.7633468508720398,0.7632490992546082,0.7631512880325317,0.7630535364151001,0.762955904006958,0.7628582119941711,0.7627606391906738,0.7626630663871765,0.762565553188324,0.7624680399894714,0.7623705863952637,0.7622731328010559,0.7621757984161377,0.7620784044265747,0.7619810700416565,0.7618838548660278,0.7617865800857544,0.7616894245147705,0.7615922689437866,0.7614951133728027,0.7613980174064636,0.7613009810447693,0.761203944683075,0.7611069679260254,0.7610099911689758,0.7609131336212158,0.7608162760734558,0.7607194781303406,0.7606226205825806,0.7605258822441101,0.7604291439056396,0.7603325247764587,0.7602358460426331,0.7601392865180969,0.7600426077842712,0.7599461674690247,0.7598496675491333,0.7597531676292419,0.7596567273139954,0.7595603466033936,0.7594640254974365,0.7593677043914795,0.7592713832855225,0.759175181388855,0.7590789198875427,0.75898277759552,0.7588866949081421,0.7587905526161194,0.7586945295333862,0.7585985064506531,0.7585025429725647,0.7584065794944763,0.7583106756210327,0.7582147717475891,0.7581189274787903,0.7580231428146362,0.7579273581504822,0.7578316926956177,0.7577359080314636,0.7576403021812439,0.7575446963310242,0.7574490904808044,0.7573536038398743,0.7572579979896545,0.7571625709533691,0.7570671439170837,0.7569716572761536,0.7568763494491577,0.7567810416221619,0.756685733795166,0.7565904259681702,0.7564951777458191,0.7564000487327576,0.756304919719696,0.7562097907066345,0.7561147212982178,0.756019651889801,0.7559245824813843,0.7558296322822571,0.7557347416877747,0.7556398510932922,0.7555449604988098,0.7554501295089722,0.7553552985191345,0.7552605271339417,0.7551658153533936,0.7550711631774902,0.7549765110015869,0.7548819184303284,0.7547873258590698,0.754692792892456,0.7545982003211975,0.7545037865638733,0.7544093728065491,0.7543148994445801,0.7542206048965454,0.754126250743866,0.7540318965911865,0.7539377212524414,0.7538434863090515,0.7537492513656616,0.7536551356315613,0.7535610198974609,0.7534668445587158,0.7533727884292603,0.7532788515090942,0.7531847953796387,0.7530909180641174,0.7529969811439514,0.7529031038284302,0.7528092861175537,0.7527154684066772,0.7526217103004456,0.7525280117988586,0.752434253692627,0.75234055519104,0.7522469162940979,0.7521533966064453,0.752059817314148,0.7519662976264954,0.7518727779388428,0.751779317855835,0.7516859173774719,0.7515925765037537,0.7514991760253906,0.7514058947563171,0.7513126134872437,0.7512193322181702,0.7511261105537415,0.7510329484939575,0.7509397864341736,0.7508466839790344,0.75075364112854,0.7506605982780457,0.750567615032196,0.7504746317863464,0.7503817081451416,0.7502888441085815,0.7501959800720215,0.7501031160354614,0.7500103116035461,0.7499175667762756,0.7498248219490051,0.7497321367263794,0.7496394515037537,0.7495468258857727,0.7494542598724365,0.7493616938591003,0.7492691874504089,0.7491766810417175,0.7490842342376709,0.748991847038269,0.7488994002342224,0.7488070726394653,0.748714804649353,0.748622477054596,0.7485302686691284,0.7484380602836609,0.7483458518981934,0.7482537031173706,0.7481616139411926,0.7480694651603699,0.7479774951934814,0.7478854656219482,0.747793436050415,0.7477015256881714,0.7476096749305725,0.7475177049636841,0.74742591381073,0.7473341226577759,0.7472423315048218,0.7471505999565125,0.7470589280128479,0.7469671964645386,0.7468755841255188,0.746783971786499,0.746692419052124,0.746600866317749,0.7465093731880188,0.7464179396629333,0.7463264465332031,0.7462350726127625,0.7461436986923218,0.7460523247718811,0.74596107006073,0.7458697557449341,0.7457785606384277,0.7456873059272766,0.745596170425415,0.7455050945281982,0.7454138994216919,0.7453228831291199,0.7452318072319031,0.7451408505439758,0.7450498342514038,0.7449589371681213,0.7448680400848389,0.7447772026062012,0.7446863651275635,0.7445955276489258,0.7445048093795776,0.7444140315055847,0.7443233132362366,0.7442326545715332,0.7441419959068298,0.744051456451416,0.7439608573913574,0.7438703179359436,0.7437798380851746,0.7436893582344055,0.7435989379882812,0.743508517742157,0.7434181571006775,0.743327796459198,0.7432374954223633,0.7431472539901733,0.7430569529533386,0.7429668307304382,0.7428765892982483,0.7427864670753479,0.7426963448524475,0.7426063418388367,0.742516279220581,0.7424262166023254,0.7423362135887146,0.7422463297843933,0.7421563863754272,0.742066502571106,0.7419766783714294,0.7418869137763977,0.7417970895767212,0.7417073249816895,0.7416176199913025,0.7415279150009155,0.7414383292198181,0.7413486838340759,0.7412590980529785,0.7411695122718811,0.7410800457000732,0.7409905195236206,0.7409010529518127,0.7408116459846497,0.7407222986221313,0.7406328916549683,0.74054354429245,0.7404542565345764,0.7403650283813477,0.7402757406234741,0.7401865720748901,0.7400974035263062,0.7400082945823669,0.7399191856384277,0.7398300766944885,0.7397410273551941,0.7396520972251892,0.7395631074905396,0.7394742369651794,0.7393852472305298,0.7392964363098145,0.7392075657844543,0.7391186952590942,0.7390299439430237,0.7389412522315979,0.7388524413108826,0.7387638688087463,0.7386751770973206,0.7385865449905396,0.7384979724884033,0.7384093999862671,0.7383208274841309,0.738232433795929,0.7381439208984375,0.7380554676055908,0.7379671335220337,0.737878680229187,0.7377904057502747,0.7377020716667175,0.7376137971878052,0.7375255823135376,0.73743736743927,0.7373492121696472,0.7372610569000244,0.7371729612350464,0.7370848655700684,0.7369967699050903,0.7369087934494019,0.7368207573890686,0.7367328405380249,0.7366449236869812,0.7365570664405823,0.7364692091941833,0.7363813519477844,0.7362935543060303,0.7362058162689209,0.7361180782318115,0.7360303401947021,0.7359426617622375,0.7358550429344177,0.7357674241065979,0.7356798648834229,0.7355923056602478,0.7355048060417175,0.7354173064231873,0.7353298664093018,0.7352424263954163,0.7351550459861755,0.7350677251815796,0.7349803447723389,0.7348930835723877,0.7348058223724365,0.7347185611724854,0.734631359577179,0.7345442175865173,0.7344570755958557,0.7343699336051941,0.7342828512191772,0.7341958284378052,0.7341087460517883,0.734021782875061,0.7339348196983337,0.7338479161262512,0.7337610125541687,0.733674168586731,0.7335872650146484,0.7335004806518555,0.7334137558937073,0.7333270311355591,0.7332403063774109,0.7331536412239075,0.733066976070404,0.7329803705215454,0.7328937649726868,0.7328072786331177,0.7327207326889038,0.7326341867446899,0.7325477600097656,0.7324612736701965,0.732374906539917,0.7322885394096375,0.7322021722793579,0.7321158647537231,0.7320295572280884,0.7319433689117432,0.7318571209907532,0.731770932674408,0.7316848039627075,0.7315986156463623,0.7315125465393066,0.731426477432251,0.7313404679298401,0.7312544584274292,0.7311684489250183,0.731082558631897,0.7309966087341309,0.7309107780456543,0.730824887752533,0.7307390570640564,0.7306532263755798,0.730567455291748,0.7304818034172058,0.730396032333374,0.7303103804588318,0.7302246689796448,0.7301391363143921,0.7300535440444946,0.7299679517745972,0.7298824191093445,0.7297969460487366,0.7297114729881287,0.7296260595321655,0.7295406460762024,0.729455292224884,0.7293698787689209,0.7292846441268921,0.7291993498802185,0.7291141152381897,0.7290288805961609,0.7289436459541321,0.728858470916748,0.7287734150886536,0.7286882400512695,0.7286032438278198,0.7285181283950806,0.7284331917762756,0.7283481955528259,0.7282631993293762,0.7281782627105713,0.7280933856964111,0.7280085682868958,0.7279236912727356,0.7278388738632202,0.7277540564537048,0.727669358253479,0.7275846600532532,0.7274999022483826,0.7274153232574463,0.7273306846618652,0.7272460460662842,0.7271614670753479,0.7270769476890564,0.7269924283027649,0.7269079685211182,0.7268235087394714,0.7267390489578247,0.7266547083854675,0.7265703082084656,0.7264859676361084,0.726401686668396,0.7263174057006836,0.7262331247329712,0.7261489033699036,0.7260647416114807,0.7259806394577026,0.725896418094635,0.7258123159408569,0.7257282733917236,0.7256442308425903,0.7255602478981018,0.7254762649536133,0.7253922820091248,0.7253084182739258,0.7252244353294373,0.7251406311988831,0.7250567674636841,0.7249729633331299,0.7248891592025757,0.7248054146766663,0.7247216701507568,0.7246379852294922,0.7245543599128723,0.7244707345962524,0.7243871092796326,0.7243035435676575,0.7242199778556824,0.7241365313529968,0.7240530252456665,0.7239695191383362,0.7238861322402954,0.7238026857376099,0.7237192988395691,0.7236359715461731,0.7235526442527771,0.7234693765640259,0.7233861088752747,0.7233028411865234,0.723219633102417,0.7231364846229553,0.7230533361434937,0.722970187664032,0.7228871583938599,0.722804069519043,0.7227210402488708,0.7226380705833435,0.7225551009178162,0.7224721312522888,0.7223892211914062,0.7223063707351685,0.7222234606742859,0.7221406102180481,0.7220578193664551,0.7219750881195068,0.7218922972679138,0.7218096256256104,0.7217268943786621,0.7216442823410034,0.7215616703033447,0.721479058265686,0.7213964462280273,0.7213138937950134,0.7212314009666443,0.7211489081382751,0.7210664749145508,0.7209840416908264,0.720901608467102,0.7208192348480225,0.7207368612289429,0.7206545472145081,0.7205722332000732,0.7204899787902832,0.7204077839851379,0.7203255295753479,0.7202433943748474,0.7201612591743469,0.7200791239738464,0.719996988773346,0.7199149131774902,0.7198328971862793,0.7197508811950684,0.7196688652038574,0.719586968421936,0.7195050716400146,0.7194231152534485,0.7193412184715271,0.7192593812942505,0.7191776037216187,0.7190958261489868,0.719014048576355,0.7189323306083679,0.7188506126403809,0.7187689542770386,0.7186872959136963,0.718605637550354,0.7185240983963013,0.7184424996376038,0.718360960483551,0.7182794809341431,0.7181980013847351,0.7181165218353271,0.718035101890564,0.7179537415504456,0.7178723812103271,0.7177910208702087,0.7177096605300903,0.7176284193992615,0.7175471782684326,0.7174659371376038,0.7173846960067749,0.7173035144805908,0.7172223925590515,0.7171412706375122,0.7170601487159729,0.7169790863990784,0.7168980836868286,0.7168170213699341,0.7167360782623291,0.7166551351547241,0.7165741920471191,0.7164932489395142,0.7164124250411987,0.7163315415382385,0.7162507176399231,0.7161699533462524,0.7160891890525818,0.7160084247589111,0.7159277200698853,0.7158470749855042,0.7157663702964783,0.7156857848167419,0.7156051993370056,0.7155246138572693,0.715444028377533,0.7153635025024414,0.7152829766273499,0.7152025699615479,0.7151221632957458,0.7150417566299438,0.7149612903594971,0.7148810029029846,0.7148006558418274,0.7147203683853149,0.7146400809288025,0.7145598530769348,0.7144796252250671,0.7143993973731995,0.7143192291259766,0.7142390608787537,0.7141590118408203,0.7140788435935974,0.7139988541603088,0.7139188051223755,0.7138388156890869,0.7137588262557983,0.7136788964271545,0.713598906993866,0.7135190367698669,0.7134391665458679,0.7133593559265137,0.7132795453071594,0.7131997346878052,0.7131199240684509,0.7130402326583862,0.7129605412483215,0.7128807902336121,0.7128011584281921,0.7127214670181274,0.7126419544219971,0.7125623226165771,0.7124828100204468,0.7124032378196716,0.7123237252235413,0.7122442722320557,0.7121648192405701,0.7120854258537292,0.7120060324668884,0.7119266986846924,0.7118473052978516,0.7117680907249451,0.7116886973381042,0.7116094827651978,0.7115302681922913,0.7114510536193848,0.7113718390464783,0.7112927436828613,0.7112135887145996,0.7111344933509827,0.7110553979873657,0.7109763622283936,0.7108973860740662,0.7108184099197388,0.7107393741607666,0.710660457611084,0.7105814814567566,0.7105026841163635,0.7104237675666809,0.7103449702262878,0.71026611328125,0.7101873755455017,0.7101085782051086,0.7100298404693604,0.7099511623382568,0.7098724842071533,0.7097938060760498,0.7097151875495911,0.7096366286277771,0.7095580101013184,0.7094795107841492,0.7094009518623352,0.709322452545166,0.7092439532279968,0.7091655731201172,0.709087073802948,0.7090086936950684,0.7089303135871887,0.7088519930839539,0.708773672580719,0.7086954116821289,0.708617091178894,0.7085388898849487,0.7084606885910034,0.7083824872970581,0.7083043456077576,0.708226203918457,0.7081481218338013,0.7080699801445007,0.7079919576644897,0.7079139351844788,0.7078359127044678,0.7077579498291016,0.7076799869537354,0.7076020836830139,0.7075241804122925,0.707446277141571,0.7073684334754944,0.7072906494140625,0.7072128653526306,0.707135021686554,0.7070572972297668,0.7069795727729797,0.7069019079208374,0.7068241834640503,0.706746518611908,0.7066689729690552,0.7065914273262024,0.7065138220787048,0.706436276435852,0.7063587307929993,0.706281304359436,0.706203818321228,0.70612633228302,0.7060489058494568,0.7059715390205383,0.7058941721916199,0.7058168649673462,0.7057394981384277,0.705662190914154,0.7055849432945251,0.7055076956748962,0.7054305076599121,0.705353319644928,0.7052761912345886,0.7051990628242493,0.7051219344139099,0.7050448656082153,0.7049677968025208,0.7048907279968262,0.7048137784004211,0.7047367095947266,0.7046598196029663,0.7045828700065613,0.7045059204101562,0.704429030418396,0.7043522000312805,0.704275369644165,0.7041985988616943,0.7041217684745789,0.7040450572967529,0.7039682865142822,0.7038915753364563,0.7038149237632751,0.703738272190094,0.7036616206169128,0.7035850286483765,0.7035083770751953,0.7034319043159485,0.7033553719520569,0.7032788395881653,0.7032023072242737,0.7031259536743164,0.7030494809150696,0.7029730677604675,0.7028966546058655,0.7028203010559082,0.7027440071105957,0.7026676535606384,0.7025913596153259,0.7025151252746582,0.7024388909339905,0.7023627161979675,0.7022864818572998,0.7022103071212769,0.7021341919898987,0.7020581364631653,0.7019820213317871,0.7019059658050537,0.7018299102783203,0.7017539143562317,0.7016779184341431,0.7016019225120544,0.7015260457992554,0.7014501094818115,0.7013741731643677,0.7012983560562134,0.7012225389480591,0.7011467218399048,0.7010709047317505,0.700995147228241,0.7009194493293762,0.7008436918258667,0.700767993927002,0.700692355632782,0.700616717338562,0.7005411386489868,0.7004655003547668,0.7003899216651917,0.7003144025802612,0.7002388834953308,0.7001633644104004,0.7000879049301147,0.7000125050544739,0.6999370455741882,0.6998616456985474,0.6997862458229065,0.6997109651565552,0.6996356248855591,0.699560284614563,0.6994850039482117,0.6994097828865051,0.6993345618247986,0.699259340763092,0.6991841793060303,0.6991089582443237,0.6990339159965515,0.6989587545394897,0.6988837122917175,0.6988086104393005,0.6987336277961731,0.6986585855484009,0.6985836029052734,0.698508620262146,0.6984336972236633,0.6983587741851807,0.6982839107513428,0.6982090473175049,0.698134183883667,0.6980593800544739,0.6979846358299255,0.6979098320007324,0.6978350877761841,0.6977603435516357,0.6976856589317322,0.6976109743118286,0.6975363492965698,0.697461724281311,0.6973870992660522,0.6973124742507935,0.697238028049469,0.697163462638855,0.6970889568328857,0.6970144510269165,0.6969400644302368,0.6968655586242676,0.6967911720275879,0.6967167854309082,0.6966424584388733,0.6965680718421936,0.6964938044548035,0.6964194774627686,0.6963452100753784,0.6962710022926331,0.6961967945098877,0.6961225271224976,0.696048378944397,0.6959742307662964,0.6959000825881958,0.6958260536193848,0.6957519054412842,0.6956778764724731,0.6956038475036621,0.6955298185348511,0.6954558491706848,0.6953819394111633,0.6953079700469971,0.6952340602874756,0.6951601505279541,0.6950863003730774,0.6950124502182007,0.6949386596679688,0.6948648691177368,0.6947911381721497,0.6947173476219177,0.6946436166763306,0.6945698857307434,0.6944962739944458,0.6944225430488586,0.694348931312561,0.6942753195762634,0.6942017674446106,0.6941282153129578,0.6940546631813049,0.6939811110496521,0.6939077377319336,0.6938342452049255,0.6937607526779175,0.693687379360199,0.6936139464378357,0.6935405731201172,0.6934671998023987,0.693393886089325,0.693320631980896,0.6932473182678223,0.6931740641593933,0.6931008100509644,0.6930276155471802,0.6929544806480408,0.6928812265396118,0.6928080916404724,0.6927350163459778,0.6926619410514832,0.6925888657569885,0.6925157904624939,0.6924427151679993,0.692369818687439,0.6922968029975891,0.692223846912384,0.692150890827179,0.6920780539512634,0.6920051574707031,0.6919322609901428,0.6918594241142273,0.6917866468429565,0.691713809967041,0.6916409730911255,0.6915682554244995,0.6914955377578735,0.6914228796958923,0.6913501620292664,0.6912775039672852,0.6912049055099487,0.6911323070526123,0.6910596489906311,0.6909871101379395,0.6909145712852478,0.6908420920372009,0.6907695531845093,0.6906970739364624,0.6906246542930603,0.6905522346496582,0.6904798150062561,0.690407395362854,0.6903350949287415,0.6902627348899841,0.6901904344558716,0.690118134021759,0.6900458335876465,0.6899735927581787,0.6899013519287109,0.6898291707038879,0.6897569894790649,0.6896848678588867,0.6896127462387085,0.6895405650138855,0.689468502998352,0.6893965005874634,0.6893244385719299,0.6892523765563965,0.6891803741455078,0.6891084313392639,0.68903648853302,0.6889644861221313,0.6888926029205322,0.6888207793235779,0.6887488961219788,0.6886770725250244,0.6886051893234253,0.6885334253311157,0.6884616613388062,0.6883898973464966,0.6883181929588318,0.688246488571167,0.6881747841835022,0.6881031394004822,0.6880314946174622,0.6879599094390869,0.6878883242607117,0.6878167390823364,0.6877451539039612,0.6876736879348755,0.687602162361145,0.6875306367874146,0.6874591708183289,0.6873877644538879,0.687316358089447,0.6872449517250061,0.6871735453605652,0.6871022582054138,0.6870309710502625,0.6869596242904663,0.6868883371353149,0.6868170499801636,0.686745822429657,0.6866745948791504,0.6866034269332886,0.686532199382782,0.6864611506462097,0.6863899827003479,0.6863188743591309,0.6862478256225586,0.6861767172813416,0.6861056685447693,0.6860346794128418,0.6859636902809143,0.6858927011489868,0.6858217716217041,0.6857508420944214,0.6856799125671387,0.6856090426445007,0.6855381727218628,0.6854673027992249,0.6853965520858765,0.6853257417678833,0.6852549314498901,0.6851841807365417,0.6851134896278381,0.6850427985191345,0.6849721074104309,0.6849014163017273,0.6848307847976685,0.6847601532936096,0.6846895813941956,0.6846189498901367,0.6845483779907227,0.6844779253005981,0.6844073534011841,0.6843369007110596,0.6842663884162903,0.6841959953308105,0.684125542640686,0.6840551495552063,0.6839847564697266,0.6839143633842468,0.6838440895080566,0.6837737560272217,0.6837034821510315,0.6836331486701965,0.6835629343986511,0.6834927201271057,0.6834225058555603,0.6833522915840149,0.6832821369171143,0.6832119822502136,0.6831418871879578,0.6830717921257019,0.683001697063446,0.682931661605835,0.6828616261482239,0.6827915906906128,0.6827216148376465,0.6826516389846802,0.6825816631317139,0.6825117468833923,0.6824418306350708,0.682371973991394,0.6823021173477173,0.6822322607040405,0.6821624636650085,0.6820926666259766,0.6820228695869446,0.6819531321525574,0.6818833947181702,0.681813657283783,0.6817439794540405,0.6816743016242981,0.6816046833992004,0.6815350651741028,0.6814654469490051,0.6813958287239075,0.6813263297080994,0.6812567710876465,0.6811872124671936,0.6811177134513855,0.6810482144355774,0.6809787750244141,0.6809093952178955,0.6808398962020874,0.6807705163955688,0.6807011961936951,0.6806318163871765,0.6805624961853027,0.680493175983429,0.6804239153862,0.680354654788971,0.6802853941917419,0.6802161335945129,0.6801469326019287,0.6800777912139893,0.680008590221405,0.6799394488334656,0.6798703670501709,0.6798012256622314,0.6797321438789368,0.6796631217002869,0.679594099521637,0.6795250773429871,0.6794560551643372,0.679387092590332,0.6793181896209717,0.6792492270469666,0.6791803240776062,0.6791114211082458,0.679042637348175,0.6789737343788147,0.6789048910140991,0.6788361072540283,0.6787673234939575,0.6786985993385315,0.6786298155784607,0.6785610914230347,0.6784924268722534,0.6784237027168274,0.6783550977706909,0.6782863736152649,0.6782178282737732,0.6781492233276367,0.6780806183815002,0.6780120730400085,0.6779435276985168,0.6778750419616699,0.677806556224823,0.6777380704879761,0.6776696443557739,0.6776012182235718,0.6775327920913696,0.6774643659591675,0.6773959994316101,0.6773276925086975,0.6772593855857849,0.6771910786628723,0.6771227717399597,0.6770545244216919,0.6769862771034241,0.6769180297851562,0.6768498420715332,0.6767816543579102,0.6767135262489319,0.6766453385353088,0.6765772700309753,0.6765091419219971,0.6764410734176636,0.6763730049133301,0.6763049364089966,0.6762369871139526,0.6761689782142639,0.6761009693145752,0.6760330200195312,0.6759651303291321,0.6758971810340881,0.675829291343689,0.6757614612579346,0.6756936311721802,0.675625741481781,0.6755579113960266,0.675490140914917,0.6754224300384521,0.6753546595573425,0.6752869486808777,0.6752191781997681,0.6751514673233032,0.6750838160514832,0.6750162243843079,0.674948513507843,0.6748809218406677,0.6748133897781372,0.6747457981109619,0.6746782660484314,0.6746106743812561,0.6745432019233704,0.6744757294654846,0.6744082570075989,0.6743407845497131,0.6742734313011169,0.674206018447876,0.674138605594635,0.674071192741394,0.6740038990974426,0.6739366054534912,0.673869252204895,0.6738019585609436,0.673734724521637,0.6736674904823303,0.6736002564430237,0.673533022403717,0.6734658479690552,0.6733987331390381,0.6733315587043762,0.6732644438743591,0.6731973886489868,0.6731302738189697,0.6730632185935974,0.6729961037635803,0.6729291081428528,0.67286217212677,0.6727951169013977,0.6727281808853149,0.6726612448692322,0.6725943088531494,0.6725274324417114,0.6724604964256287,0.6723936200141907,0.6723268628120422,0.6722599864006042,0.672193169593811,0.6721264123916626,0.6720596551895142,0.6719928979873657,0.6719262003898621,0.6718594431877136,0.6717928051948547,0.6717261075973511,0.6716594696044922,0.6715928912162781,0.6715262532234192,0.6714596748352051,0.671393096446991,0.6713265776634216,0.6712600588798523,0.671193540096283,0.6711270213127136,0.6710605621337891,0.6709941625595093,0.6709277033805847,0.6708613038063049,0.6707949042320251,0.6707285642623901,0.6706622242927551,0.6705958843231201,0.6705295443534851,0.6704632639884949,0.6703969836235046,0.6703307628631592,0.6702645421028137,0.6701983213424683,0.6701321005821228,0.6700659394264221,0.6699998378753662,0.6699336767196655,0.6698675751686096,0.6698014140129089,0.6697353720664978,0.6696693897247314,0.6696032881736755,0.6695373058319092,0.6694713234901428,0.6694053411483765,0.6693393588066101,0.6692734360694885,0.6692075133323669,0.6691415905952454,0.6690757274627686,0.6690098643302917,0.6689440608024597,0.6688781976699829,0.6688124537467957,0.6687466502189636,0.6686808466911316,0.6686151623725891,0.6685494184494019,0.6684836745262146,0.6684179902076721,0.6683523654937744,0.6682867407798767,0.668221116065979,0.6681554913520813,0.6680898666381836,0.6680243611335754,0.6679587960243225,0.6678932905197144,0.6678277254104614,0.667762279510498,0.6676967740058899,0.6676313281059265,0.6675658822059631,0.6675004959106445,0.6674351096153259,0.6673697233200073,0.6673043370246887,0.6672390699386597,0.6671737432479858,0.667108416557312,0.6670430898666382,0.6669778823852539,0.6669126749038696,0.6668474078178406,0.6667822003364563,0.666716992855072,0.6666519045829773,0.666586697101593,0.6665216088294983,0.6664564609527588,0.6663913726806641,0.6663263440132141,0.6662612557411194,0.6661962270736694,0.6661312580108643,0.6660662293434143,0.6660012602806091,0.665936291217804,0.6658713817596436,0.6658064723014832,0.6657415628433228,0.6656767129898071,0.6656118035316467,0.6655469536781311,0.6654821634292603,0.6654173731803894,0.6653525829315186,0.6652877926826477,0.6652230620384216,0.6651582717895508,0.6650936603546143,0.6650289297103882,0.6649642586708069,0.6648995876312256,0.6648349761962891,0.6647704243659973,0.664705753326416,0.6646412014961243,0.6645766496658325,0.6645120978355408,0.664447546005249,0.664383053779602,0.6643186211585999,0.6642541289329529,0.6641896963119507,0.6641252636909485,0.6640608310699463,0.6639964580535889,0.6639320850372314,0.663867712020874,0.6638033986091614,0.6637390851974487,0.6636748313903809,0.6636105179786682,0.6635462641716003,0.6634820699691772,0.6634178161621094,0.6633536219596863,0.6632894277572632,0.6632252931594849,0.6631610989570618,0.6630970239639282,0.6630328297615051,0.6629688143730164,0.6629047393798828,0.6628406643867493,0.6627766489982605,0.6627126336097717,0.662648618221283,0.6625846028327942,0.6625206470489502,0.662456750869751,0.662392795085907,0.6623288989067078,0.6622650027275085,0.6622011661529541,0.6621372699737549,0.6620734930038452,0.6620096564292908,0.6619458794593811,0.6618820428848267,0.6618183255195618,0.6617545485496521,0.661690890789032,0.6616271734237671,0.661563515663147,0.6614997982978821,0.661436140537262,0.6613725423812866,0.6613089442253113,0.6612453460693359,0.6611817479133606,0.66111820936203,0.6610546708106995,0.6609911918640137,0.6609276533126831,0.6608641743659973,0.6608006954193115,0.6607372760772705,0.6606738567352295,0.6606104373931885,0.6605470776557922,0.6604836583137512,0.660420298576355,0.6603569984436035,0.660293698310852,0.6602303981781006,0.6601670980453491,0.6601037979125977,0.660040557384491,0.659977376461029,0.6599141359329224,0.6598509550094604,0.6597877740859985,0.6597246527671814,0.6596614718437195,0.6595984101295471,0.65953528881073,0.6594721674919128,0.6594091057777405,0.6593461036682129,0.6592830419540405,0.6592200398445129,0.6591570377349854,0.6590941548347473,0.6590311527252197,0.6589682102203369,0.6589052677154541,0.6588423848152161,0.658779501914978,0.65871661901474,0.6586537957191467,0.6585909724235535,0.6585281491279602,0.6584653258323669,0.6584025621414185,0.65833979845047,0.6582770943641663,0.6582143306732178,0.6581516265869141,0.6580889821052551,0.6580262780189514,0.6579636335372925,0.6579010486602783,0.6578384041786194,0.6577758193016052,0.6577132344245911,0.6576507091522217,0.6575880646705627,0.6575255990028381,0.6574631333351135,0.6574006080627441,0.6573381423950195,0.6572756767272949,0.6572132110595703,0.6571508646011353,0.6570883989334106,0.6570260524749756,0.6569637060165405,0.6569013595581055,0.6568390130996704,0.6567767262458801,0.6567144393920898,0.6566520929336548,0.6565898656845093,0.6565276384353638,0.6564654111862183,0.6564032435417175,0.656341016292572,0.6562789082527161,0.6562167406082153,0.6561545729637146,0.6560924649238586,0.6560303568840027,0.6559682488441467,0.6559062004089355,0.6558441519737244,0.6557821035385132,0.6557201147079468,0.6556581258773804,0.6555961966514587,0.6555341482162476,0.6554722785949707,0.6554103493690491,0.6553484201431274,0.6552865505218506,0.6552246809005737,0.6551628112792969,0.6551010012626648,0.6550391316413879,0.6549773812294006,0.6549155712127686,0.6548538208007812,0.654792070388794,0.6547303199768066,0.6546686291694641,0.6546069383621216,0.654545247554779,0.6544836163520813,0.6544219851493835,0.654360294342041,0.654298722743988,0.6542371511459351,0.6541755795478821,0.6541140079498291,0.6540524363517761,0.6539909839630127,0.6539294123649597,0.6538679599761963,0.6538064479827881,0.6537450551986694,0.653683602809906,0.6536222100257874,0.6535607576370239,0.65349942445755,0.6534380316734314,0.6533766984939575,0.6533153057098389,0.6532540321350098,0.6531926989555359,0.6531314253807068,0.6530701518058777,0.6530089378356934,0.652947723865509,0.6528865098953247,0.6528252959251404,0.6527641415596008,0.6527029871940613,0.6526418328285217,0.652580738067627,0.6525195837020874,0.6524585485458374,0.6523974537849426,0.6523363590240479,0.6522753238677979,0.6522143483161926,0.6521533131599426,0.6520923376083374,0.6520313620567322,0.651970386505127,0.6519095301628113,0.651848554611206,0.6517876386642456,0.6517267823219299,0.6516659259796143,0.6516050696372986,0.6515442132949829,0.651483416557312,0.6514226198196411,0.6513618230819702,0.6513010859489441,0.651240348815918,0.6511795520782471,0.6511188745498657,0.6510581970214844,0.650997519493103,0.6509368419647217,0.6508761644363403,0.6508155465126038,0.6507549285888672,0.6506943702697754,0.6506337523460388,0.650573194026947,0.6505126357078552,0.6504521369934082,0.6503916382789612,0.6503311395645142,0.6502706408500671,0.6502102017402649,0.6501497626304626,0.6500893235206604,0.6500288844108582,0.6499685049057007,0.6499081254005432,0.6498477458953857,0.649787425994873,0.6497271060943604,0.6496668457984924,0.6496065258979797,0.649546205997467,0.6494860053062439,0.649425745010376,0.6493654847145081,0.6493052840232849,0.6492451429367065,0.6491849422454834,0.649124801158905,0.6490646600723267,0.6490045189857483,0.6489444375038147,0.6488843560218811,0.6488242149353027,0.6487641930580139,0.6487041711807251,0.6486440896987915,0.6485841274261475,0.6485241651535034,0.6484641432762146,0.6484041810035706,0.6483442783355713,0.6482843160629272,0.648224413394928,0.6481645107269287,0.6481046080589294,0.648044764995575,0.6479849815368652,0.6479251384735107,0.6478652954101562,0.6478055119514465,0.6477457284927368,0.6476860046386719,0.6476262211799622,0.6475664973258972,0.647506833076477,0.6474471092224121,0.6473874449729919,0.6473277807235718,0.6472681164741516,0.6472085118293762,0.6471489071846008,0.6470893025398254,0.6470297574996948,0.6469701528549194,0.6469106674194336,0.6468510627746582,0.6467915773391724,0.6467320919036865,0.6466726064682007,0.6466131210327148,0.6465537548065186,0.6464942693710327,0.6464348435401917,0.6463754177093506,0.6463161110877991,0.6462567448616028,0.6461973786354065,0.646138072013855,0.6460787057876587,0.6460193991661072,0.6459600925445557,0.6459009051322937,0.645841658115387,0.6457824110984802,0.6457231640815735,0.6456639170646667,0.6456047892570496,0.6455456614494324,0.6454864740371704,0.6454273462295532,0.6453681588172913,0.6453090906143188,0.6452500224113464,0.645190954208374,0.6451318860054016,0.645072877407074,0.6450138092041016,0.6449548006057739,0.6448957920074463,0.6448368430137634,0.6447779536247253,0.6447189450263977,0.6446600556373596,0.6446011662483215,0.6445422768592834,0.6444833874702454,0.6444244980812073,0.644365668296814,0.6443068385124207,0.6442480087280273,0.644189178943634,0.6441304683685303,0.6440716981887817,0.6440129280090332,0.6439542174339294,0.6438955068588257,0.6438367962837219,0.6437780857086182,0.6437194347381592,0.6436607837677002,0.6436021327972412,0.643543541431427,0.6434849500656128,0.6434263586997986,0.6433677673339844,0.6433092355728149,0.6432506442070007,0.6431921720504761,0.6431336402893066,0.643075168132782,0.6430166363716125,0.6429581642150879,0.6428998112678528,0.6428413391113281,0.6427829265594482,0.6427245140075684,0.6426661610603333,0.6426078081130981,0.6425493955612183,0.6424911022186279,0.6424328088760376,0.6423745155334473,0.6423162221908569,0.6422579288482666,0.642199695110321,0.6421414613723755,0.6420832276344299,0.6420249938964844,0.6419668793678284,0.6419086456298828,0.641850471496582,0.641792356967926,0.64173424243927,0.641676127910614,0.6416180729866028,0.6415599584579468,0.6415019035339355,0.6414438486099243,0.6413857936859131,0.6413277983665466,0.6412698030471802,0.6412118077278137,0.6411538124084473,0.6410958766937256,0.6410379409790039,0.6409800052642822,0.6409221291542053,0.6408641934394836,0.6408063769340515,0.6407485008239746,0.6406906247138977,0.6406328082084656,0.6405749917030334,0.6405172348022461,0.640459418296814,0.6404016613960266,0.6403439044952393,0.6402862071990967,0.6402284502983093,0.6401707530021667,0.6401130557060242,0.6400554180145264,0.6399977803230286,0.639940083026886,0.639882504940033,0.6398249268531799,0.6397672891616821,0.6397097110748291,0.6396521329879761,0.6395946145057678,0.6395370364189148,0.6394795179367065,0.6394220590591431,0.6393646001815796,0.6393070816993713,0.6392496228218079,0.6391921639442444,0.6391347646713257,0.639077365398407,0.6390199661254883,0.6389625668525696,0.6389052271842957,0.6388478875160217,0.6387905478477478,0.6387332081794739,0.6386759877204895,0.6386186480522156,0.6385613679885864,0.638504147529602,0.6384469270706177,0.6383897066116333,0.6383324861526489,0.6382752656936646,0.638218104839325,0.6381609439849854,0.6381038427352905,0.6380466818809509,0.6379895210266113,0.6379324793815613,0.6378753781318665,0.6378182768821716,0.6377612352371216,0.6377041935920715,0.6376472115516663,0.6375901699066162,0.6375331878662109,0.6374762058258057,0.6374192237854004,0.6373623013496399,0.6373053789138794,0.6372484564781189,0.6371915936470032,0.6371346712112427,0.637077808380127,0.6370209455490112,0.6369641423225403,0.6369072794914246,0.6368504762649536,0.6367936730384827,0.6367368698120117,0.6366801261901855,0.6366233825683594,0.6365666389465332,0.6365099549293518,0.6364532113075256,0.6363965272903442,0.6363399028778076,0.6362832188606262,0.6362265944480896,0.6361699104309082,0.6361133456230164,0.6360567212104797,0.6360001564025879,0.635943591594696,0.6358870267868042,0.6358305215835571,0.6357740163803101,0.6357174515724182,0.6356609463691711,0.6356045007705688,0.6355480551719666,0.6354916095733643,0.635435163974762,0.6353787779808044,0.6353223323822021,0.6352659463882446,0.6352095603942871,0.6351532340049744,0.6350969076156616,0.6350405216217041,0.6349842548370361,0.6349279880523682,0.6348717212677002,0.6348153948783875,0.6347591280937195,0.6347029209136963,0.6346467137336731,0.6345905065536499,0.6345342993736267,0.6344781517982483,0.6344220042228699,0.6343657970428467,0.634309709072113,0.6342535614967346,0.634197473526001,0.6341413855552673,0.6340852975845337,0.6340292692184448,0.6339731812477112,0.6339171528816223,0.6338611841201782,0.6338051557540894,0.6337491869926453,0.6336932182312012,0.6336372494697571,0.6335813403129578,0.6335253715515137,0.6334694623947144,0.6334136128425598,0.6333577632904053,0.633301854133606,0.6332460045814514,0.6331901550292969,0.6331343054771423,0.6330785751342773,0.6330227255821228,0.632966935634613,0.632911205291748,0.6328554749488831,0.6327997446060181,0.6327440142631531,0.6326882839202881,0.6326326131820679,0.6325769424438477,0.6325212717056274,0.632465660572052,0.6324100494384766,0.6323543787002563,0.6322987675666809,0.6322432160377502,0.6321876645088196,0.6321321129798889,0.6320765614509583,0.6320210099220276,0.6319655179977417,0.6319100260734558,0.6318545341491699,0.6317991018295288,0.6317436695098877,0.6316881775856018,0.6316327452659607,0.6315773129463196,0.6315219402313232,0.6314665675163269,0.6314111948013306,0.6313558220863342,0.6313005685806274,0.6312451958656311,0.6311898827552795,0.631134569644928,0.6310793161392212,0.6310240626335144,0.6309688091278076,0.6309135556221008,0.630858302116394,0.630803108215332,0.63074791431427,0.6306927800178528,0.6306375861167908,0.6305824518203735,0.6305273175239563,0.6304721832275391,0.6304170489311218,0.6303620338439941,0.6303068995475769,0.6302518248558044,0.6301968097686768,0.6301417946815491,0.6300867795944214,0.6300317645072937,0.629976749420166,0.6299217939376831,0.6298668384552002,0.6298118829727173,0.6297569274902344,0.6297020316123962,0.6296471357345581,0.62959223985672,0.6295373439788818,0.6294825077056885,0.6294276714324951,0.6293728351593018,0.6293180584907532,0.6292632222175598,0.6292084455490112,0.6291536092758179,0.6290988922119141,0.6290441751480103,0.6289893984794617,0.6289347410202026,0.628879964351654,0.6288253664970398,0.628770649433136,0.628715991973877,0.6286613345146179,0.6286066770553589,0.6285520792007446,0.6284974813461304,0.6284428834915161,0.6283882856369019,0.6283337473869324,0.6282792091369629,0.6282246708869934,0.6281701326370239,0.6281156539916992,0.6280611753463745,0.6280066967010498,0.6279522180557251,0.6278977990150452,0.6278433203697205,0.6277889609336853,0.6277345418930054,0.6276801228523254,0.6276257634162903,0.6275714039802551,0.62751704454422,0.6274626851081848,0.6274084448814392,0.627354085445404,0.6272997856140137,0.6272455453872681,0.6271912455558777,0.6271370053291321,0.6270827651023865,0.6270285248756409,0.62697434425354,0.6269201636314392,0.6268659830093384,0.6268118023872375,0.6267576813697815,0.6267035603523254,0.6266493797302246,0.6265953183174133,0.6265411972999573,0.626487135887146,0.6264330148696899,0.6263790130615234,0.6263250112533569,0.6262709498405457,0.6262169480323792,0.6261628866195679,0.6261089444160461,0.6260550022125244,0.6260010600090027,0.625947117805481,0.6258931756019592,0.6258392333984375,0.6257853507995605,0.6257314682006836,0.6256775856018066,0.6256237030029297,0.6255698800086975,0.6255160570144653,0.6254622936248779,0.6254084706306458,0.6253546476364136,0.6253008842468262,0.6252471208572388,0.6251934170722961,0.6251396536827087,0.6250858902931213,0.6250321865081787,0.6249785423278809,0.6249248385429382,0.6248711943626404,0.6248175501823425,0.6247639060020447,0.6247103214263916,0.6246566772460938,0.6246030926704407,0.6245495080947876,0.6244959235191345,0.6244423389434814,0.6243888735771179,0.6243352890014648,0.6242817640304565,0.624228298664093,0.6241748332977295,0.624121367931366,0.6240678429603577,0.6240144371986389,0.6239610314369202,0.6239076256752014,0.6238542199134827,0.6238008141517639,0.6237474083900452,0.6236940622329712,0.623640775680542,0.6235873699188232,0.623534083366394,0.6234807968139648,0.6234275102615356,0.6233741641044617,0.6233209371566772,0.6232677102088928,0.6232144236564636,0.6231611967086792,0.6231080293655396,0.6230548620223999,0.6230016350746155,0.6229484677314758,0.6228953003883362,0.6228421926498413,0.6227890849113464,0.6227359175682068,0.6226828098297119,0.6226297616958618,0.6225766539573669,0.6225236058235168,0.6224705576896667,0.6224175095558167,0.6223645210266113,0.622311532497406,0.6222584843635559,0.6222055554389954,0.62215256690979,0.6220995783805847,0.6220466494560242,0.6219937801361084,0.6219408512115479,0.6218879222869873,0.6218350529670715,0.6217821836471558,0.6217293739318848,0.621676504611969,0.6216236352920532,0.6215708255767822,0.621518075466156,0.621465265750885,0.621412456035614,0.6213597059249878,0.6213069558143616,0.6212542057037354,0.6212015151977539,0.6211487650871277,0.6210960745811462,0.6210433840751648,0.6209907531738281,0.6209380626678467,0.62088543176651,0.6208328008651733,0.6207801699638367,0.6207275986671448,0.6206749677658081,0.6206223964691162,0.6205698251724243,0.6205172538757324,0.6204647421836853,0.6204122304916382,0.6203597187995911,0.620307207107544,0.6202548146247864,0.6202023029327393,0.6201498508453369,0.6200973987579346,0.6200449466705322,0.6199925541877747,0.6199401617050171,0.6198877692222595,0.619835376739502,0.6197829842567444,0.6197306513786316,0.6196783185005188,0.6196260452270508,0.619573712348938,0.61952143907547,0.6194691061973572,0.6194168329238892,0.6193646192550659,0.6193123459815979,0.6192600727081299,0.6192078590393066,0.6191557049751282,0.6191034913063049,0.6190513372421265,0.618999183177948,0.6189470291137695,0.6188948750495911,0.6188427209854126,0.6187906265258789,0.6187385320663452,0.6186864376068115,0.6186344027519226,0.6185823082923889,0.6185302734375,0.6184782385826111,0.6184262037277222,0.618374228477478,0.6183221936225891,0.6182702779769897,0.6182182431221008,0.6181662678718567,0.6181144118309021,0.618062436580658,0.6180105209350586,0.6179586052894592,0.6179067492485046,0.6178548336029053,0.6178029775619507,0.6177511811256409,0.6176993250846863,0.6176475286483765,0.6175956726074219,0.6175438761711121,0.6174920797348022,0.6174403429031372,0.6173886060714722,0.6173368096351624,0.6172851324081421,0.617233395576477,0.617181658744812,0.6171299815177917,0.6170783042907715,0.6170266270637512,0.6169750094413757,0.6169233322143555,0.61687171459198,0.6168200969696045,0.616768479347229,0.6167169213294983,0.6166653037071228,0.6166137456893921,0.6165621876716614,0.6165106892585754,0.6164591312408447,0.6164076328277588,0.6163561344146729,0.6163046360015869,0.616253137588501,0.6162016987800598,0.6161502599716187,0.6160988211631775,0.6160474419593811,0.6159960031509399,0.6159446239471436,0.6158932447433472,0.6158418655395508,0.6157904863357544,0.6157391667366028,0.6156878471374512,0.6156364679336548,0.615585207939148,0.6155338883399963,0.6154826283454895,0.6154313683509827,0.6153801083564758,0.615328848361969,0.6152776479721069,0.6152264475822449,0.615175187587738,0.6151240468025208,0.6150728464126587,0.6150217056274414,0.6149705052375793,0.6149193644523621,0.6148682236671448,0.6148171424865723,0.6147660613059998,0.6147149801254272,0.6146638989448547,0.6146128177642822,0.6145617365837097,0.614510715007782,0.6144596934318542,0.6144086718559265,0.6143576502799988,0.6143066883087158,0.6142557263374329,0.6142047643661499,0.6141538023948669,0.6141029000282288,0.6140519380569458,0.6140010356903076,0.6139501333236694,0.6138992309570312,0.6138483881950378,0.6137975454330444,0.613746702671051,0.6136958599090576,0.6136450171470642,0.6135942339897156,0.6135433912277222,0.6134926080703735,0.6134418845176697,0.613391101360321,0.6133403182029724,0.6132896542549133,0.6132389307022095,0.6131881475448608,0.6131374835968018,0.6130868196487427,0.6130361557006836,0.6129854917526245,0.6129348278045654,0.6128842234611511,0.6128336191177368,0.6127829551696777,0.6127323508262634,0.6126818060874939,0.6126312017440796,0.6125806570053101,0.6125301122665405,0.612479567527771,0.6124290823936462,0.6123785376548767,0.612328052520752,0.6122775673866272,0.6122271418571472,0.6121766567230225,0.6121261715888977,0.6120757460594177,0.6120253801345825,0.6119749546051025,0.6119245290756226,0.6118741631507874,0.6118237972259521,0.6117734313011169,0.6117230653762817,0.6116727590560913,0.6116224527359009,0.6115720868110657,0.61152184009552,0.6114715337753296,0.6114212870597839,0.6113709807395935,0.6113207340240479,0.611270546913147,0.6112203001976013,0.6111701130867004,0.6111198663711548,0.6110697388648987,0.6110195517539978,0.6109694242477417,0.6109192371368408,0.6108690500259399,0.6108189821243286,0.6107688546180725,0.6107187271118164,0.6106687188148499,0.6106185913085938,0.6105685234069824,0.6105185151100159,0.6104684472084045,0.610418438911438,0.6103684306144714,0.6103184223175049,0.6102684140205383,0.6102184057235718,0.6101685166358948,0.6101185083389282,0.6100686192512512,0.6100186705589294,0.6099687218666077,0.6099188327789307,0.6098689436912537,0.6098191142082214,0.6097692251205444,0.6097193360328674,0.6096695065498352,0.6096197366714478,0.6095698475837708,0.6095200777053833,0.6094702482223511,0.6094204783439636,0.609370768070221,0.6093209981918335,0.609271228313446,0.6092215180397034,0.6091718077659607,0.609122097492218,0.6090723872184753,0.6090226769447327,0.6089730262756348,0.6089234352111816,0.608873724937439,0.6088240742683411,0.6087744832038879,0.6087248921394348,0.6086753010749817,0.6086256504058838,0.6085761189460754,0.6085265874862671,0.608476996421814,0.6084274649620056,0.6083779335021973,0.6083284020423889,0.6082789301872253,0.6082294583320618,0.6081799864768982,0.6081305146217346,0.608081042766571,0.6080315709114075,0.6079821586608887,0.6079328060150146,0.6078833341598511,0.607833981513977,0.6077845692634583,0.6077352166175842,0.6076858639717102,0.6076365113258362,0.6075871586799622,0.6075378656387329,0.6074885725975037,0.6074392795562744,0.6073899269104004,0.6073406934738159,0.6072914600372314,0.6072421669960022,0.6071929335594177,0.607143759727478,0.6070945262908936,0.6070452928543091,0.6069961190223694,0.6069469451904297,0.60689777135849,0.6068486571311951,0.6067994832992554,0.6067503690719604,0.6067012548446655,0.6066521406173706,0.6066030263900757,0.6065540313720703,0.6065049171447754,0.6064558625221252,0.6064068078994751,0.606357753276825,0.6063087582588196,0.6062597632408142,0.6062107682228088,0.6061617136001587,0.6061128377914429,0.6060638427734375,0.6060148477554321,0.6059659123420715,0.6059170365333557,0.6058681011199951,0.6058191657066345,0.6057702898979187,0.6057214736938477,0.6056725382804871,0.605623722076416,0.6055748462677002,0.6055260300636292,0.6054772138595581,0.6054283976554871,0.6053796410560608,0.6053308248519897,0.6052820086479187,0.6052333116531372,0.6051845550537109,0.6051357984542847,0.6050871014595032,0.6050383448600769,0.6049896478652954,0.6049410104751587,0.6048923134803772,0.6048436760902405,0.604794979095459,0.6047463417053223,0.6046977043151855,0.6046490669250488,0.6046004891395569,0.6045519113540649,0.6045032739639282,0.6044546961784363,0.6044061779975891,0.6043576002120972,0.60430908203125,0.6042605638504028,0.6042120456695557,0.6041635274887085,0.6041150689125061,0.6040666103363037,0.6040180921554565,0.6039696335792542,0.6039211750030518,0.6038727760314941,0.6038243174552917,0.6037759184837341,0.6037275195121765,0.6036791801452637,0.603630781173706,0.6035823822021484,0.6035340428352356,0.6034857630729675,0.6034373641014099,0.6033890843391418,0.603340744972229,0.6032924652099609,0.6032441854476929,0.6031959056854248,0.6031476855278015,0.6030994057655334,0.6030511856079102,0.6030029654502869,0.6029547452926636,0.6029065847396851,0.6028583645820618,0.6028101444244385,0.6027620434761047,0.6027138829231262,0.6026657223701477,0.6026175618171692,0.6025695204734802,0.6025213599205017,0.602473258972168,0.6024251580238342,0.6023771166801453,0.6023290753364563,0.6022809743881226,0.6022329330444336,0.6021848917007446,0.6021369099617004,0.6020889282226562,0.6020408868789673,0.6019929051399231,0.6019449830055237,0.6018970012664795,0.6018490195274353,0.6018010973930359,0.6017531752586365,0.6017052531242371,0.6016573905944824,0.601609468460083,0.6015616655349731,0.6015137434005737,0.6014658808708191,0.6014180183410645,0.6013702154159546,0.6013224124908447,0.6012746095657349,0.6012267470359802,0.6011790037155151,0.6011312007904053,0.6010834574699402,0.6010356545448303,0.60098797082901,0.6009402275085449,0.6008925437927246,0.6008448004722595,0.6007971167564392,0.6007494330406189,0.6007017493247986,0.6006540656089783,0.6006064414978027,0.6005588173866272,0.6005111932754517,0.6004635691642761,0.6004159450531006,0.6003683805465698,0.6003207564353943,0.6002731919288635,0.6002256274223328,0.600178062915802,0.600130558013916,0.60008305311203,0.6000354886054993,0.5999879837036133,0.5999404788017273,0.5998930335044861,0.5998455882072449,0.5997981429100037,0.5997506380081177,0.5997032523155212,0.5996557474136353,0.5996084213256836,0.5995609760284424,0.599513590335846,0.5994662046432495,0.5994188785552979,0.5993714928627014,0.599324107170105,0.5992767810821533,0.5992294549942017,0.5991821885108948,0.5991348624229431,0.5990875363349915,0.5990402698516846,0.5989930033683777,0.5989457368850708,0.5988985300064087,0.5988513231277466,0.5988040566444397,0.5987568497657776,0.5987096428871155,0.5986624360084534,0.598615288734436,0.5985681414604187,0.5985209345817566,0.598473846912384,0.5984266400337219,0.5983795523643494,0.598332405090332,0.5982853770256042,0.5982382297515869,0.5981912016868591,0.5981441140174866,0.598097026348114,0.598050057888031,0.5980029702186584,0.5979559421539307,0.5979089140892029,0.5978619456291199,0.5978149175643921,0.5977679491043091,0.5977210402488708,0.5976740717887878,0.5976271033287048,0.5975801348686218,0.5975332260131836,0.5974863767623901,0.5974394679069519,0.5973925590515137,0.5973456501960754,0.597298800945282,0.5972519516944885,0.5972051024436951,0.5971582531929016,0.5971114635467529,0.5970646142959595,0.5970178246498108,0.5969710350036621,0.5969243049621582,0.5968774557113647,0.5968307256698608,0.5967839956283569,0.596737265586853,0.5966905355453491,0.5966438055038452,0.5965970754623413,0.5965504050254822,0.596503734588623,0.5964570641517639,0.5964103937149048,0.5963637828826904,0.5963171124458313,0.5962705016136169,0.5962238907814026,0.5961772799491882,0.5961306691169739,0.5960841178894043,0.5960375070571899,0.5959909558296204,0.5959444046020508,0.5958978533744812,0.5958513617515564,0.5958048105239868,0.595758318901062,0.5957118272781372,0.5956653356552124,0.5956188440322876,0.5955724120140076,0.5955259799957275,0.5954794883728027,0.5954330563545227,0.5953866839408875,0.5953402519226074,0.5952938795089722,0.5952474474906921,0.5952011346817017,0.5951547622680664,0.5951083898544312,0.5950620174407959,0.5950157046318054,0.5949693918228149,0.5949230790138245,0.594876766204834,0.5948305130004883,0.5947842001914978,0.5947379469871521,0.5946916937828064,0.5946454405784607,0.594599187374115,0.5945529937744141,0.5945067405700684,0.5944606065750122,0.5944143533706665,0.5943681597709656,0.5943220257759094,0.5942758321762085,0.5942297577857971,0.5941835641860962,0.59413743019104,0.5940912961959839,0.5940452218055725,0.5939990878105164,0.5939530730247498,0.5939069390296936,0.593860924243927,0.5938148498535156,0.5937687754631042,0.5937227606773376,0.593676745891571,0.5936307311058044,0.5935847759246826,0.593538761138916,0.5934928059577942,0.5934467911720276,0.5934008359909058,0.5933548808097839,0.5933089852333069,0.5932630896568298,0.593217134475708,0.593171238899231,0.5931253433227539,0.5930794477462769,0.5930336117744446,0.5929877161979675,0.5929418802261353,0.592896044254303,0.5928502082824707,0.5928043723106384,0.5927585959434509,0.5927128195762634,0.5926669836044312,0.5926212072372437,0.5925754904747009,0.5925297141075134,0.5924839973449707,0.5924382209777832,0.5923925042152405,0.5923467874526978,0.592301070690155,0.5922554135322571,0.5922096967697144,0.5921640396118164,0.5921184420585632,0.5920727252960205,0.5920271277427673,0.5919814705848694,0.5919358730316162,0.591890275478363,0.5918446779251099,0.5917991399765015,0.5917535424232483,0.5917079448699951,0.5916623473167419,0.5916168689727783,0.5915713310241699,0.5915257930755615,0.5914802551269531,0.5914347767829895,0.5913892984390259,0.5913438200950623,0.5912983417510986,0.5912529230117798,0.5912074446678162,0.5911619663238525,0.5911165475845337,0.5910711884498596,0.5910257697105408,0.5909803509712219,0.5909349918365479,0.5908896327018738,0.5908442139625549,0.5907988548278809,0.5907535552978516,0.5907081961631775,0.5906628966331482,0.5906175374984741,0.5905722379684448,0.5905269384384155,0.590481698513031,0.5904363989830017,0.5903911590576172,0.5903459191322327,0.5903006792068481,0.5902554392814636,0.5902101993560791,0.5901649594306946,0.5901198387145996,0.5900745987892151,0.5900294780731201,0.5899842381477356,0.5899391174316406,0.5898939967155457,0.5898488759994507,0.5898036956787109,0.5897586345672607,0.5897135138511658,0.5896683931350708,0.5896233320236206,0.5895782709121704,0.5895332098007202,0.5894880890846252,0.5894430875778198,0.5893980860710144,0.5893530249595642,0.5893080234527588,0.5892630219459534,0.589218020439148,0.5891730189323425,0.5891280770301819,0.5890830755233765,0.5890381932258606,0.5889931917190552,0.5889483094215393,0.5889033675193787,0.5888584852218628,0.5888136029243469,0.588768720626831,0.5887237787246704,0.5886789560317993,0.5886340737342834,0.5885892510414124,0.5885443687438965,0.5884995460510254,0.5884547829627991,0.588409960269928,0.5883651375770569,0.5883203744888306,0.5882755517959595,0.5882308483123779,0.5881860852241516,0.5881412625312805,0.5880966186523438,0.5880518555641174,0.5880071520805359,0.5879624485969543,0.5879177451133728,0.5878730416297913,0.5878283977508545,0.587783694267273,0.587739109992981,0.5876944065093994,0.5876498222351074,0.5876051783561707,0.5875605344772339,0.5875159502029419,0.5874713659286499,0.5874267816543579,0.5873821973800659,0.5873376727104187,0.5872930884361267,0.5872485637664795,0.5872040390968323,0.5871595144271851,0.5871149897575378,0.5870704650878906,0.5870260000228882,0.5869815349578857,0.5869370102882385,0.5868926048278809,0.5868481397628784,0.5868037343025208,0.5867592692375183,0.5867148041725159,0.586670458316803,0.5866260528564453,0.5865816473960876,0.5865373015403748,0.5864928960800171,0.5864485502243042,0.5864042043685913,0.5863598585128784,0.5863155126571655,0.5862711668014526,0.5862268805503845,0.5861825942993164,0.5861383080482483,0.5860940217971802,0.5860497951507568,0.586005449295044,0.5859612226486206,0.5859169960021973,0.5858727693557739,0.5858285427093506,0.5857843160629272,0.5857401490211487,0.5856959223747253,0.5856518149375916,0.5856075882911682,0.5855634808540344,0.5855193138122559,0.5854751467704773,0.5854310393333435,0.5853869318962097,0.5853428244590759,0.5852987170219421,0.5852546095848083,0.5852105617523193,0.5851665139198303,0.5851224064826965,0.5850783586502075,0.5850343704223633,0.5849902629852295,0.5849462747573853,0.584902286529541,0.584858238697052,0.5848142504692078,0.5847702622413635,0.5847263336181641,0.5846823453903198,0.5846384167671204,0.5845944881439209,0.5845505595207214,0.584506630897522,0.5844627022743225,0.5844188332557678,0.5843749046325684,0.5843310356140137,0.584287166595459,0.5842432975769043,0.5841994285583496,0.5841556191444397,0.584111750125885,0.5840680003166199,0.5840241312980652,0.5839803814888,0.5839365720748901,0.583892822265625,0.5838490128517151,0.5838052034378052,0.5837615132331848,0.5837177634239197,0.5836740136146545,0.5836302638053894,0.583586573600769,0.5835428833961487,0.5834991335868835,0.583455502986908,0.5834118127822876,0.583368182182312,0.5833244919776917,0.5832808613777161,0.5832372307777405,0.5831936001777649,0.5831499695777893,0.5831063985824585,0.5830628275871277,0.5830191969871521,0.5829756259918213,0.5829320549964905,0.5828885436058044,0.5828449726104736,0.5828014016151428,0.5827578902244568,0.5827143788337708,0.5826708674430847,0.5826273560523987,0.5825838446617126,0.5825403928756714,0.5824969410896301,0.5824534893035889,0.5824099779129028,0.5823665857315063,0.5823231339454651,0.5822797417640686,0.5822362899780273,0.5821928977966309,0.5821495652198792,0.5821061730384827,0.5820627808570862,0.5820193886756897,0.5819761157035828,0.5819327235221863,0.5818893909454346,0.5818460583686829,0.5818027853965759,0.5817594528198242,0.5817161202430725,0.5816728472709656,0.5816295742988586,0.5815863013267517,0.5815430879592896,0.5814998149871826,0.5814566016197205,0.5814133286476135,0.5813701748847961,0.5813269019126892,0.5812837481498718,0.5812405943870544,0.5811973810195923,0.5811541676521301,0.5811110138893127,0.5810678601264954,0.5810247659683228,0.5809816122055054,0.5809385180473328,0.5808953642845154,0.5808523297309875,0.5808091759681702,0.5807660818099976,0.5807230472564697,0.5806799530982971,0.5806369185447693,0.5805938839912415,0.5805508494377136,0.5805078148841858,0.580464780330658,0.5804218053817749,0.5803788304328918,0.580335795879364,0.580292820930481,0.5802498459815979,0.5802069306373596,0.5801639556884766,0.5801210403442383,0.580078125,0.5800352096557617,0.5799922943115234,0.5799493789672852,0.5799064636230469,0.5798636078834534,0.5798207521438599,0.5797778367996216,0.5797349810600281,0.5796921253204346,0.5796493291854858,0.5796065330505371,0.5795636773109436,0.5795208811759949,0.5794780850410461,0.5794352889060974,0.5793924927711487,0.5793497562408447,0.5793070197105408,0.579264223575592,0.5792214870452881,0.5791787505149841,0.579136073589325,0.579093337059021,0.579050600528717,0.5790079236030579,0.5789652466773987,0.5789225697517395,0.5788798928260803,0.5788372755050659,0.5787946581840515,0.5787519812583923,0.5787093639373779,0.5786667466163635,0.5786241292953491,0.5785815715789795,0.5785389542579651,0.5784963369369507,0.578453779220581,0.5784112215042114,0.5783686637878418,0.5783261656761169,0.5782836079597473,0.5782411098480225,0.5781986117362976,0.578156054019928,0.5781136155128479,0.5780710577964783,0.5780286192893982,0.5779861211776733,0.577943742275238,0.5779012441635132,0.5778588056564331,0.577816367149353,0.5777739882469177,0.5777315497398376,0.5776891708374023,0.5776467323303223,0.5776044130325317,0.5775619745254517,0.5775196552276611,0.5774772763252258,0.5774349570274353,0.577392578125,0.5773502588272095],"x":[0.8,0.8004398240703718,0.8008796481407437,0.8013194722111155,0.8017592962814875,0.8021991203518593,0.8026389444222312,0.803078768492603,0.8035185925629749,0.8039584166333467,0.8043982407037185,0.8048380647740904,0.8052778888444622,0.8057177129148341,0.8061575369852059,0.8065973610555778,0.8070371851259496,0.8074770091963215,0.8079168332666933,0.8083566573370652,0.808796481407437,0.8092363054778089,0.8096761295481807,0.8101159536185526,0.8105557776889244,0.8109956017592963,0.8114354258296681,0.81187524990004,0.8123150739704118,0.8127548980407837,0.8131947221111555,0.8136345461815274,0.8140743702518992,0.8145141943222711,0.8149540183926429,0.8153938424630148,0.8158336665333866,0.8162734906037585,0.8167133146741303,0.8171531387445022,0.817592962814874,0.8180327868852459,0.8184726109556177,0.8189124350259896,0.8193522590963614,0.8197920831667334,0.8202319072371052,0.8206717313074771,0.8211115553778489,0.8215513794482208,0.8219912035185926,0.8224310275889645,0.8228708516593363,0.8233106757297081,0.82375049980008,0.8241903238704518,0.8246301479408237,0.8250699720111955,0.8255097960815674,0.8259496201519392,0.8263894442223111,0.8268292682926829,0.8272690923630548,0.8277089164334266,0.8281487405037985,0.8285885645741703,0.8290283886445422,0.829468212714914,0.8299080367852859,0.8303478608556577,0.8307876849260296,0.8312275089964014,0.8316673330667733,0.8321071571371451,0.832546981207517,0.8329868052778888,0.8334266293482607,0.8338664534186325,0.8343062774890044,0.8347461015593762,0.8351859256297481,0.8356257497001199,0.8360655737704918,0.8365053978408636,0.8369452219112355,0.8373850459816073,0.8378248700519793,0.838264694122351,0.838704518192723,0.8391443422630948,0.8395841663334667,0.8400239904038385,0.8404638144742104,0.8409036385445822,0.841343462614954,0.8417832866853259,0.8422231107556977,0.8426629348260696,0.8431027588964414,0.8435425829668133,0.8439824070371851,0.844422231107557,0.8448620551779288,0.8453018792483007,0.8457417033186725,0.8461815273890444,0.8466213514594162,0.8470611755297881,0.8475009996001599,0.8479408236705318,0.8483806477409036,0.8488204718112755,0.8492602958816473,0.8497001199520192,0.850139944022391,0.8505797680927629,0.8510195921631347,0.8514594162335066,0.8518992403038784,0.8523390643742503,0.8527788884446221,0.853218712514994,0.8536585365853658,0.8540983606557377,0.8545381847261095,0.8549780087964814,0.8554178328668532,0.8558576569372252,0.856297481007597,0.8567373050779689,0.8571771291483407,0.8576169532187126,0.8580567772890844,0.8584966013594563,0.8589364254298281,0.8593762495002,0.8598160735705718,0.8602558976409436,0.8606957217113155,0.8611355457816873,0.8615753698520592,0.862015193922431,0.8624550179928029,0.8628948420631747,0.8633346661335466,0.8637744902039184,0.8642143142742903,0.8646541383446621,0.865093962415034,0.8655337864854058,0.8659736105557777,0.8664134346261495,0.8668532586965214,0.8672930827668932,0.8677329068372651,0.8681727309076369,0.8686125549780088,0.8690523790483806,0.8694922031187525,0.8699320271891243,0.8703718512594962,0.870811675329868,0.8712514994002399,0.8716913234706117,0.8721311475409836,0.8725709716113554,0.8730107956817273,0.8734506197520991,0.873890443822471,0.8743302678928428,0.8747700919632148,0.8752099160335866,0.8756497401039585,0.8760895641743303,0.8765293882447022,0.876969212315074,0.8774090363854459,0.8778488604558177,0.8782886845261896,0.8787285085965614,0.8791683326669332,0.8796081567373051,0.8800479808076769,0.8804878048780488,0.8809276289484206,0.8813674530187925,0.8818072770891643,0.8822471011595362,0.882686925229908,0.8831267493002799,0.8835665733706517,0.8840063974410236,0.8844462215113954,0.8848860455817673,0.8853258696521391,0.885765693722511,0.8862055177928828,0.8866453418632547,0.8870851659336265,0.8875249900039984,0.8879648140743702,0.8884046381447421,0.8888444622151139,0.8892842862854858,0.8897241103558576,0.8901639344262295,0.8906037584966013,0.8910435825669732,0.891483406637345,0.891923230707717,0.8923630547780887,0.8928028788484607,0.8932427029188325,0.8936825269892044,0.8941223510595762,0.8945621751299481,0.8950019992003199,0.8954418232706918,0.8958816473410636,0.8963214714114355,0.8967612954818073,0.8972011195521792,0.897640943622551,0.8980807676929228,0.8985205917632947,0.8989604158336665,0.8994002399040384,0.8998400639744102,0.9002798880447821,0.9007197121151539,0.9011595361855258,0.9015993602558976,0.9020391843262695,0.9024790083966413,0.9029188324670132,0.903358656537385,0.9037984806077569,0.9042383046781287,0.9046781287485006,0.9051179528188724,0.9055577768892443,0.9059976009596161,0.906437425029988,0.9068772491003598,0.9073170731707317,0.9077568972411035,0.9081967213114754,0.9086365453818472,0.9090763694522191,0.9095161935225909,0.9099560175929629,0.9103958416633346,0.9108356657337066,0.9112754898040784,0.9117153138744503,0.9121551379448221,0.912594962015194,0.9130347860855658,0.9134746101559377,0.9139144342263095,0.9143542582966814,0.9147940823670532,0.9152339064374251,0.9156737305077969,0.9161135545781688,0.9165533786485406,0.9169932027189124,0.9174330267892843,0.9178728508596561,0.918312674930028,0.9187524990003998,0.9191923230707717,0.9196321471411435,0.9200719712115154,0.9205117952818872,0.9209516193522591,0.9213914434226309,0.9218312674930028,0.9222710915633746,0.9227109156337465,0.9231507397041183,0.9235905637744902,0.924030387844862,0.9244702119152339,0.9249100359856057,0.9253498600559776,0.9257896841263494,0.9262295081967213,0.9266693322670931,0.927109156337465,0.9275489804078368,0.9279888044782088,0.9284286285485805,0.9288684526189525,0.9293082766893243,0.9297481007596962,0.930187924830068,0.9306277489004399,0.9310675729708117,0.9315073970411836,0.9319472211115554,0.9323870451819273,0.9328268692522991,0.933266693322671,0.9337065173930428,0.9341463414634147,0.9345861655337865,0.9350259896041584,0.9354658136745302,0.935905637744902,0.9363454618152739,0.9367852858856457,0.9372251099560176,0.9376649340263894,0.9381047580967613,0.9385445821671331,0.938984406237505,0.9394242303078768,0.9398640543782487,0.9403038784486205,0.9407437025189924,0.9411835265893642,0.9416233506597361,0.9420631747301079,0.9425029988004798,0.9429428228708516,0.9433826469412235,0.9438224710115953,0.9442622950819672,0.944702119152339,0.945141943222711,0.9455817672930827,0.9460215913634547,0.9464614154338264,0.9469012395041984,0.9473410635745702,0.9477808876449421,0.9482207117153139,0.9486605357856858,0.9491003598560576,0.9495401839264295,0.9499800079968013,0.9504198320671732,0.950859656137545,0.9512994802079169,0.9517393042782887,0.9521791283486606,0.9526189524190324,0.9530587764894043,0.9534986005597761,0.9539384246301479,0.9543782487005198,0.9548180727708916,0.9552578968412635,0.9556977209116353,0.9561375449820072,0.956577369052379,0.9570171931227509,0.9574570171931227,0.9578968412634946,0.9583366653338664,0.9587764894042383,0.9592163134746101,0.959656137544982,0.9600959616153538,0.9605357856857257,0.9609756097560975,0.9614154338264694,0.9618552578968412,0.9622950819672131,0.9627349060375849,0.9631747301079568,0.9636145541783286,0.9640543782487005,0.9644942023190723,0.9649340263894443,0.965373850459816,0.965813674530188,0.9662534986005598,0.9666933226709317,0.9671331467413035,0.9675729708116754,0.9680127948820472,0.9684526189524191,0.9688924430227909,0.9693322670931628,0.9697720911635346,0.9702119152339065,0.9706517393042783,0.9710915633746502,0.971531387445022,0.9719712115153939,0.9724110355857657,0.9728508596561375,0.9732906837265094,0.9737305077968812,0.9741703318672531,0.9746101559376249,0.9750499800079968,0.9754898040783686,0.9759296281487405,0.9763694522191123,0.9768092762894842,0.977249100359856,0.9776889244302279,0.9781287485005997,0.9785685725709716,0.9790083966413434,0.9794482207117153,0.9798880447820871,0.980327868852459,0.9807676929228308,0.9812075169932027,0.9816473410635745,0.9820871651339464,0.9825269892043182,0.9829668132746902,0.983406637345062,0.9838464614154339,0.9842862854858057,0.9847261095561776,0.9851659336265494,0.9856057576969213,0.9860455817672931,0.986485405837665,0.9869252299080368,0.9873650539784087,0.9878048780487805,0.9882447021191524,0.9886845261895242,0.9891243502598961,0.9895641743302679,0.9900039984006398,0.9904438224710116,0.9908836465413835,0.9913234706117553,0.9917632946821271,0.992203118752499,0.9926429428228708,0.9930827668932427,0.9935225909636145,0.9939624150339864,0.9944022391043582,0.9948420631747301,0.9952818872451019,0.9957217113154738,0.9961615353858456,0.9966013594562175,0.9970411835265893,0.9974810075969612,0.997920831667333,0.9983606557377049,0.9988004798080767,0.9992403038784486,0.9996801279488204,1.0001199520191923,1.0005597760895641,1.000999600159936,1.001439424230308,1.0018792483006798,1.0023190723710516,1.0027588964414234,1.0031987205117954,1.0036385445821672,1.004078368652539,1.0045181927229108,1.0049580167932828,1.0053978408636546,1.0058376649340264,1.0062774890043982,1.0067173130747702,1.007157137145142,1.0075969612155138,1.0080367852858856,1.0084766093562576,1.0089164334266294,1.0093562574970012,1.009796081567373,1.010235905637745,1.0106757297081168,1.0111155537784886,1.0115553778488604,1.0119952019192322,1.0124350259896042,1.012874850059976,1.0133146741303478,1.0137544982007196,1.0141943222710916,1.0146341463414634,1.0150739704118352,1.015513794482207,1.015953618552579,1.0163934426229508,1.0168332666933226,1.0172730907636944,1.0177129148340665,1.0181527389044382,1.01859256297481,1.0190323870451818,1.0194722111155539,1.0199120351859257,1.0203518592562975,1.0207916833266693,1.0212315073970413,1.021671331467413,1.0221111555377849,1.0225509796081567,1.0229908036785287,1.0234306277489005,1.0238704518192723,1.024310275889644,1.024750099960016,1.025189924030388,1.0256297481007597,1.0260695721711315,1.0265093962415035,1.0269492203118753,1.027389044382247,1.027828868452619,1.028268692522991,1.0287085165933627,1.0291483406637345,1.0295881647341063,1.030027988804478,1.0304678128748501,1.030907636945222,1.0313474610155937,1.0317872850859655,1.0322271091563375,1.0326669332267093,1.0331067572970811,1.033546581367453,1.033986405437825,1.0344262295081967,1.0348660535785685,1.0353058776489403,1.0357457017193124,1.0361855257896841,1.036625349860056,1.0370651739304277,1.0375049980007998,1.0379448220711716,1.0383846461415434,1.0388244702119152,1.0392642942822872,1.039704118352659,1.0401439424230308,1.0405837664934026,1.0410235905637746,1.0414634146341464,1.0419032387045182,1.04234306277489,1.042782886845262,1.0432227109156338,1.0436625349860056,1.0441023590563774,1.0445421831267494,1.0449820071971212,1.045421831267493,1.0458616553378648,1.0463014794082368,1.0467413034786086,1.0471811275489804,1.0476209516193522,1.048060775689724,1.048500599760096,1.0489404238304678,1.0493802479008396,1.0498200719712114,1.0502598960415834,1.0506997201119552,1.051139544182327,1.0515793682526988,1.0520191923230708,1.0524590163934426,1.0528988404638144,1.0533386645341862,1.0537784886045582,1.05421831267493,1.0546581367453018,1.0550979608156736,1.0555377848860457,1.0559776089564175,1.0564174330267893,1.056857257097161,1.057297081167533,1.0577369052379049,1.0581767293082767,1.0586165533786485,1.0590563774490205,1.0594962015193923,1.059936025589764,1.0603758496601359,1.060815673730508,1.0612554978008797,1.0616953218712515,1.0621351459416233,1.0625749700119953,1.063014794082367,1.063454618152739,1.0638944422231107,1.0643342662934827,1.0647740903638545,1.0652139144342263,1.065653738504598,1.0660935625749701,1.066533386645342,1.0669732107157137,1.0674130347860855,1.0678528588564573,1.0682926829268293,1.0687325069972011,1.069172331067573,1.0696121551379447,1.0700519792083167,1.0704918032786885,1.0709316273490603,1.0713714514194321,1.0718112754898041,1.072251099560176,1.0726909236305477,1.0731307477009195,1.0735705717712916,1.0740103958416634,1.0744502199120352,1.074890043982407,1.075329868052779,1.0757696921231508,1.0762095161935226,1.0766493402638944,1.0770891643342664,1.0775289884046382,1.07796881247501,1.0784086365453818,1.0788484606157538,1.0792882846861256,1.0797281087564974,1.0801679328268692,1.0806077568972412,1.081047580967613,1.0814874050379848,1.0819272291083566,1.0823670531787286,1.0828068772491004,1.0832467013194722,1.083686525389844,1.084126349460216,1.0845661735305878,1.0850059976009596,1.0854458216713314,1.0858856457417032,1.0863254698120752,1.086765293882447,1.0872051179528188,1.0876449420231906,1.0880847660935626,1.0885245901639344,1.0889644142343062,1.089404238304678,1.08984406237505,1.0902838864454218,1.0907237105157936,1.0911635345861654,1.0916033586565375,1.0920431827269093,1.092483006797281,1.0929228308676529,1.0933626549380249,1.0938024790083967,1.0942423030787685,1.0946821271491403,1.0951219512195123,1.095561775289884,1.0960015993602559,1.0964414234306277,1.0968812475009997,1.0973210715713715,1.0977608956417433,1.098200719712115,1.098640543782487,1.099080367852859,1.0995201919232307,1.0999600159936025,1.1003998400639745,1.1008396641343463,1.101279488204718,1.10171931227509,1.102159136345462,1.1025989604158337,1.1030387844862055,1.1034786085565773,1.1039184326269493,1.1043582566973211,1.104798080767693,1.1052379048380647,1.1056777289084365,1.1061175529788085,1.1065573770491803,1.1069972011195521,1.107437025189924,1.107876849260296,1.1083166733306677,1.1087564974010395,1.1091963214714113,1.1096361455417834,1.1100759696121552,1.110515793682527,1.1109556177528987,1.1113954418232708,1.1118352658936426,1.1122750899640144,1.1127149140343862,1.1131547381047582,1.11359456217513,1.1140343862455018,1.1144742103158736,1.1149140343862456,1.1153538584566174,1.1157936825269892,1.116233506597361,1.116673330667733,1.1171131547381048,1.1175529788084766,1.1179928028788484,1.1184326269492204,1.1188724510195922,1.119312275089964,1.1197520991603358,1.1201919232307078,1.1206317473010796,1.1210715713714514,1.1215113954418232,1.1219512195121952,1.122391043582567,1.1228308676529388,1.1232706917233106,1.1237105157936824,1.1241503398640544,1.1245901639344262,1.125029988004798,1.1254698120751698,1.1259096361455418,1.1263494602159136,1.1267892842862854,1.1272291083566572,1.1276689324270293,1.128108756497401,1.1285485805677729,1.1289884046381446,1.1294282287085167,1.1298680527788885,1.1303078768492603,1.130747700919632,1.131187524990004,1.1316273490603759,1.1320671731307477,1.1325069972011195,1.1329468212714915,1.1333866453418633,1.133826469412235,1.1342662934826069,1.134706117552979,1.1351459416233507,1.1355857656937225,1.1360255897640943,1.1364654138344663,1.136905237904838,1.13734506197521,1.1377848860455817,1.1382247101159537,1.1386645341863255,1.1391043582566973,1.139544182327069,1.1399840063974411,1.140423830467813,1.1408636545381847,1.1413034786085565,1.1417433026789283,1.1421831267493003,1.1426229508196721,1.143062774890044,1.1435025989604157,1.1439424230307877,1.1443822471011595,1.1448220711715313,1.1452618952419031,1.1457017193122752,1.146141543382647,1.1465813674530188,1.1470211915233905,1.1474610155937626,1.1479008396641344,1.1483406637345062,1.148780487804878,1.14922031187525,1.1496601359456218,1.1500999600159936,1.1505397840863654,1.1509796081567374,1.1514194322271092,1.151859256297481,1.1522990803678528,1.1527389044382248,1.1531787285085966,1.1536185525789684,1.1540583766493402,1.1544982007197122,1.154938024790084,1.1553778488604558,1.1558176729308276,1.1562574970011996,1.1566973210715714,1.1571371451419432,1.157576969212315,1.158016793282687,1.1584566173530588,1.1588964414234306,1.1593362654938024,1.1597760895641744,1.1602159136345462,1.160655737704918,1.1610955617752898,1.1615353858456616,1.1619752099160336,1.1624150339864054,1.1628548580567772,1.163294682127149,1.163734506197521,1.1641743302678929,1.1646141543382647,1.1650539784086364,1.1654938024790085,1.1659336265493803,1.166373450619752,1.1668132746901239,1.1672530987604959,1.1676929228308677,1.1681327469012395,1.1685725709716113,1.1690123950419833,1.169452219112355,1.1698920431827269,1.1703318672530987,1.1707716913234707,1.1712115153938425,1.1716513394642143,1.172091163534586,1.172530987604958,1.17297081167533,1.1734106357457017,1.1738504598160735,1.1742902838864455,1.1747301079568173,1.1751699320271891,1.175609756097561,1.176049580167933,1.1764894042383047,1.1769292283086765,1.1773690523790483,1.1778088764494203,1.1782487005197921,1.178688524590164,1.1791283486605357,1.1795681727309075,1.1800079968012795,1.1804478208716513,1.1808876449420231,1.181327469012395,1.181767293082767,1.1822071171531388,1.1826469412235106,1.1830867652938823,1.1835265893642544,1.1839664134346262,1.184406237504998,1.1848460615753698,1.1852858856457418,1.1857257097161136,1.1861655337864854,1.1866053578568572,1.1870451819272292,1.187485005997601,1.1879248300679728,1.1883646541383446,1.1888044782087166,1.1892443022790884,1.1896841263494602,1.190123950419832,1.190563774490204,1.1910035985605758,1.1914434226309476,1.1918832467013194,1.1923230707716914,1.1927628948420632,1.193202718912435,1.1936425429828068,1.1940823670531788,1.1945221911235506,1.1949620151939224,1.1954018392642942,1.1958416633346662,1.196281487405038,1.1967213114754098,1.1971611355457816,1.1976009596161536,1.1980407836865254,1.1984806077568972,1.198920431827269,1.1993602558976408,1.1998000799680129,1.2002399040383847,1.2006797281087564,1.2011195521791282,1.2015593762495003,1.201999200319872,1.2024390243902439,1.2028788484606157,1.2033186725309877,1.2037584966013595,1.2041983206717313,1.204638144742103,1.205077968812475,1.2055177928828469,1.2059576169532187,1.2063974410235905,1.2068372650939625,1.2072770891643343,1.207716913234706,1.2081567373050779,1.20859656137545,1.2090363854458217,1.2094762095161935,1.2099160335865653,1.2103558576569373,1.2107956817273091,1.211235505797681,1.2116753298680527,1.2121151539384247,1.2125549780087965,1.2129948020791683,1.2134346261495401,1.2138744502199121,1.214314274290284,1.2147540983606557,1.2151939224310275,1.2156337465013995,1.2160735705717713,1.2165133946421431,1.216953218712515,1.2173930427828867,1.2178328668532588,1.2182726909236306,1.2187125149940023,1.2191523390643741,1.2195921631347462,1.220031987205118,1.2204718112754898,1.2209116353458616,1.2213514594162336,1.2217912834866054,1.2222311075569772,1.222670931627349,1.223110755697721,1.2235505797680928,1.2239904038384646,1.2244302279088364,1.2248700519792084,1.2253098760495802,1.225749700119952,1.2261895241903238,1.2266293482606958,1.2270691723310676,1.2275089964014394,1.2279488204718112,1.2283886445421832,1.228828468612555,1.2292682926829268,1.2297081167532986,1.2301479408236706,1.2305877648940424,1.2310275889644142,1.231467413034786,1.231907237105158,1.2323470611755298,1.2327868852459016,1.2332267093162734,1.2336665333866454,1.2341063574570172,1.234546181527389,1.2349860055977608,1.2354258296681329,1.2358656537385047,1.2363054778088765,1.2367453018792482,1.23718512594962,1.237624950019992,1.2380647740903639,1.2385045981607357,1.2389444222311075,1.2393842463014795,1.2398240703718513,1.240263894442223,1.2407037185125949,1.2411435425829669,1.2415833666533387,1.2420231907237105,1.2424630147940823,1.2429028388644543,1.243342662934826,1.243782487005198,1.2442223110755697,1.2446621351459417,1.2451019592163135,1.2455417832866853,1.245981607357057,1.2464214314274291,1.246861255497801,1.2473010795681727,1.2477409036385445,1.2481807277089165,1.2486205517792883,1.2490603758496601,1.249500199920032,1.249940023990404,1.2503798480607757,1.2508196721311475,1.2512594962015193,1.2516993202718913,1.2521391443422631,1.252578968412635,1.2530187924830067,1.2534586165533788,1.2538984406237506,1.2543382646941224,1.2547780887644941,1.255217912834866,1.255657736905238,1.2560975609756098,1.2565373850459816,1.2569772091163534,1.2574170331867254,1.2578568572570972,1.258296681327469,1.2587365053978408,1.2591763294682128,1.2596161535385846,1.2600559776089564,1.2604958016793282,1.2609356257497002,1.261375449820072,1.2618152738904438,1.2622550979608156,1.2626949220311876,1.2631347461015594,1.2635745701719312,1.264014394242303,1.264454218312675,1.2648940423830468,1.2653338664534186,1.2657736905237904,1.2662135145941624,1.2666533386645342,1.267093162734906,1.2675329868052778,1.2679728108756498,1.2684126349460216,1.2688524590163934,1.2692922830867652,1.2697321071571372,1.270171931227509,1.2706117552978808,1.2710515793682526,1.2714914034386247,1.2719312275089965,1.2723710515793683,1.27281087564974,1.2732506997201118,1.2736905237904839,1.2741303478608557,1.2745701719312275,1.2750099960015993,1.2754498200719713,1.275889644142343,1.2763294682127149,1.2767692922830867,1.2772091163534587,1.2776489404238305,1.2780887644942023,1.278528588564574,1.278968412634946,1.279408236705318,1.2798480607756897,1.2802878848460615,1.2807277089164335,1.2811675329868053,1.281607357057177,1.282047181127549,1.282487005197921,1.2829268292682927,1.2833666533386645,1.2838064774090363,1.2842463014794083,1.2846861255497801,1.285125949620152,1.2855657736905237,1.2860055977608957,1.2864454218312675,1.2868852459016393,1.2873250699720111,1.2877648940423831,1.288204718112755,1.2886445421831267,1.2890843662534985,1.2895241903238706,1.2899640143942424,1.2904038384646142,1.290843662534986,1.291283486605358,1.2917233106757298,1.2921631347461016,1.2926029588164734,1.2930427828868452,1.2934826069572172,1.293922431027589,1.2943622550979608,1.2948020791683326,1.2952419032387046,1.2956817273090764,1.2961215513794482,1.29656137544982,1.297001199520192,1.2974410235905638,1.2978808476609356,1.2983206717313074,1.2987604958016794,1.2992003198720512,1.299640143942423,1.3000799680127948,1.3005197920831668,1.3009596161535386,1.3013994402239104,1.3018392642942822,1.3022790883646542,1.302718912435026,1.3031587365053978,1.3035985605757696,1.3040383846461416,1.3044782087165134,1.3049180327868852,1.305357856857257,1.305797680927629,1.3062375049980008,1.3066773290683726,1.3071171531387444,1.3075569772091165,1.3079968012794883,1.30843662534986,1.3088764494202318,1.3093162734906039,1.3097560975609757,1.3101959216313475,1.3106357457017193,1.311075569772091,1.311515393842463,1.3119552179128349,1.3123950419832067,1.3128348660535785,1.3132746901239505,1.3137145141943223,1.314154338264694,1.3145941623350659,1.315033986405438,1.3154738104758097,1.3159136345461815,1.3163534586165533,1.3167932826869253,1.317233106757297,1.317672930827669,1.3181127548980407,1.3185525789684127,1.3189924030387845,1.3194322271091563,1.319872051179528,1.3203118752499001,1.320751699320272,1.3211915233906437,1.3216313474610155,1.3220711715313875,1.3225109956017593,1.3229508196721311,1.323390643742503,1.323830467812875,1.3242702918832467,1.3247101159536185,1.3251499400239903,1.3255897640943624,1.3260295881647342,1.326469412235106,1.3269092363054777,1.3273490603758498,1.3277888844462216,1.3282287085165934,1.3286685325869652,1.3291083566573372,1.329548180727709,1.3299880047980808,1.3304278288684526,1.3308676529388244,1.3313074770091964,1.3317473010795682,1.33218712514994,1.3326269492203118,1.3330667732906838,1.3335065973610556,1.3339464214314274,1.3343862455017992,1.3348260695721712,1.335265893642543,1.3357057177129148,1.3361455417832866,1.3365853658536586,1.3370251899240304,1.3374650139944022,1.337904838064774,1.338344662135146,1.3387844862055178,1.3392243102758896,1.3396641343462614,1.3401039584166334,1.3405437824870052,1.340983606557377,1.3414234306277488,1.3418632546981208,1.3423030787684926,1.3427429028388644,1.3431827269092362,1.3436225509796083,1.34406237504998,1.3445021991203518,1.3449420231907236,1.3453818472610957,1.3458216713314675,1.3462614954018393,1.346701319472211,1.347141143542583,1.3475809676129549,1.3480207916833267,1.3484606157536985,1.3489004398240703,1.3493402638944423,1.349780087964814,1.3502199120351859,1.3506597361055577,1.3510995601759297,1.3515393842463015,1.3519792083166733,1.352419032387045,1.352858856457417,1.353298680527789,1.3537385045981607,1.3541783286685325,1.3546181527389045,1.3550579768092763,1.355497800879648,1.35593762495002,1.356377449020392,1.3568172730907637,1.3572570971611355,1.3576969212315073,1.3581367453018793,1.3585765693722511,1.359016393442623,1.3594562175129947,1.3598960415833667,1.3603358656537385,1.3607756897241103,1.3612155137944821,1.3616553378648542,1.362095161935226,1.3625349860055977,1.3629748100759695,1.3634146341463416,1.3638544582167134,1.3642942822870852,1.364734106357457,1.365173930427829,1.3656137544982008,1.3660535785685726,1.3664934026389444,1.3669332267093162,1.3673730507796882,1.36781287485006,1.3682526989204318,1.3686925229908036,1.3691323470611756,1.3695721711315474,1.3700119952019192,1.370451819272291,1.370891643342663,1.3713314674130348,1.3717712914834066,1.3722111155537784,1.3726509396241504,1.3730907636945222,1.373530587764894,1.3739704118352658,1.3744102359056378,1.3748500599760096,1.3752898840463814,1.3757297081167532,1.3761695321871252,1.376609356257497,1.3770491803278688,1.3774890043982406,1.3779288284686126,1.3783686525389844,1.3788084766093562,1.379248300679728,1.3796881247501,1.3801279488204719,1.3805677728908436,1.3810075969612154,1.3814474210315875,1.3818872451019593,1.382327069172331,1.3827668932427029,1.3832067173130749,1.3836465413834467,1.3840863654538185,1.3845261895241903,1.3849660135945623,1.385405837664934,1.3858456617353059,1.3862854858056777,1.3867253098760495,1.3871651339464215,1.3876049580167933,1.388044782087165,1.3884846061575369,1.388924430227909,1.3893642542982807,1.3898040783686525,1.3902439024390243,1.3906837265093963,1.391123550579768,1.39156337465014,1.3920031987205117,1.3924430227908837,1.3928828468612555,1.3933226709316273,1.3937624950019991,1.3942023190723711,1.394642143142743,1.3950819672131147,1.3955217912834865,1.3959616153538585,1.3964014394242303,1.3968412634946021,1.397281087564974,1.397720911635346,1.3981607357057177,1.3986005597760895,1.3990403838464613,1.3994802079168334,1.3999200319872052,1.400359856057577,1.4007996801279488,1.4012395041983208,1.4016793282686926,1.4021191523390644,1.4025589764094362,1.4029988004798082,1.40343862455018,1.4038784486205518,1.4043182726909236,1.4047580967612954,1.4051979208316674,1.4056377449020392,1.406077568972411,1.4065173930427828,1.4069572171131548,1.4073970411835266,1.4078368652538984,1.4082766893242702,1.4087165133946422,1.409156337465014,1.4095961615353858,1.4100359856057576,1.4104758096761296,1.4109156337465014,1.4113554578168732,1.411795281887245,1.412235105957617,1.4126749300279888,1.4131147540983606,1.4135545781687324,1.4139944022391044,1.4144342263094762,1.414874050379848,1.4153138744502198,1.4157536985205919,1.4161935225909636,1.4166333466613354,1.4170731707317072,1.4175129948020793,1.417952818872451,1.4183926429428229,1.4188324670131947,1.4192722910835667,1.4197121151539385,1.4201519392243103,1.420591763294682,1.421031587365054,1.4214714114354259,1.4219112355057977,1.4223510595761695,1.4227908836465415,1.4232307077169133,1.423670531787285,1.4241103558576569,1.4245501799280287,1.4249900039984007,1.4254298280687725,1.4258696521391443,1.426309476209516,1.426749300279888,1.42718912435026,1.4276289484206317,1.4280687724910035,1.4285085965613755,1.4289484206317473,1.4293882447021191,1.429828068772491,1.430267892842863,1.4307077169132347,1.4311475409836065,1.4315873650539783,1.4320271891243503,1.4324670131947221,1.432906837265094,1.4333466613354657,1.4337864854058378,1.4342263094762095,1.4346661335465813,1.4351059576169531,1.4355457816873252,1.435985605757697,1.4364254298280688,1.4368652538984406,1.4373050779688126,1.4377449020391844,1.4381847261095562,1.438624550179928,1.4390643742503,1.4395041983206718,1.4399440223910436,1.4403838464614154,1.4408236705317874,1.4412634946021592,1.441703318672531,1.4421431427429028,1.4425829668132746,1.4430227908836466,1.4434626149540184,1.4439024390243902,1.444342263094762,1.444782087165134,1.4452219112355058,1.4456617353058776,1.4461015593762494,1.4465413834466214,1.4469812075169932,1.447421031587365,1.4478608556577368,1.4483006797281088,1.4487405037984806,1.4491803278688524,1.4496201519392242,1.4500599760095962,1.450499800079968,1.4509396241503398,1.4513794482207116,1.4518192722910837,1.4522590963614554,1.4526989204318272,1.453138744502199,1.453578568572571,1.4540183926429429,1.4544582167133147,1.4548980407836865,1.4553378648540585,1.4557776889244303,1.456217512994802,1.4566573370651739,1.4570971611355459,1.4575369852059177,1.4579768092762895,1.4584166333466613,1.4588564574170333,1.459296281487405,1.4597361055577769,1.4601759296281487,1.4606157536985207,1.4610555777688925,1.4614954018392643,1.461935225909636,1.462375049980008,1.46281487405038,1.4632546981207517,1.4636945221911235,1.4641343462614953,1.4645741703318673,1.4650139944022391,1.465453818472611,1.4658936425429827,1.4663334666133547,1.4667732906837265,1.4672131147540983,1.4676529388244701,1.4680927628948421,1.468532586965214,1.4689724110355857,1.4694122351059575,1.4698520591763296,1.4702918832467013,1.4707317073170731,1.471171531387445,1.471611355457817,1.4720511795281888,1.4724910035985606,1.4729308276689324,1.4733706517393044,1.4738104758096762,1.474250299880048,1.4746901239504198,1.4751299480207918,1.4755697720911636,1.4760095961615354,1.4764494202319072,1.4768892443022792,1.477329068372651,1.4777688924430228,1.4782087165133946,1.4786485405837666,1.4790883646541384,1.4795281887245102,1.479968012794882,1.4804078368652538,1.4808476609356258,1.4812874850059976,1.4817273090763694,1.4821671331467412,1.4826069572171132,1.483046781287485,1.4834866053578568,1.4839264294282286,1.4843662534986006,1.4848060775689724,1.4852459016393442,1.485685725709716,1.486125549780088,1.4865653738504598,1.4870051979208316,1.4874450219912034,1.4878848460615755,1.4883246701319472,1.488764494202319,1.4892043182726908,1.4896441423430629,1.4900839664134347,1.4905237904838065,1.4909636145541783,1.4914034386245503,1.491843262694922,1.4922830867652939,1.4927229108356657,1.4931627349060377,1.4936025589764095,1.4940423830467813,1.494482207117153,1.494922031187525,1.4953618552578969,1.4958016793282687,1.4962415033986405,1.4966813274690125,1.4971211515393843,1.497560975609756,1.498000799680128,1.4984406237504997,1.4988804478208717,1.4993202718912435,1.4997600959616153,1.500199920031987,1.5006397441023591,1.501079568172731,1.5015193922431027,1.5019592163134745,1.5023990403838465,1.5028388644542183,1.5032786885245901,1.503718512594962,1.504158336665334,1.5045981607357057,1.5050379848060775,1.5054778088764493,1.5059176329468213,1.5063574570171931,1.506797281087565,1.5072371051579367,1.5076769292283088,1.5081167532986806,1.5085565773690524,1.5089964014394242,1.5094362255097962,1.509876049580168,1.5103158736505398,1.5107556977209116,1.5111955217912836,1.5116353458616554,1.5120751699320272,1.512514994002399,1.512954818072771,1.5133946421431428,1.5138344662135146,1.5142742902838864,1.5147141143542584,1.5151539384246302,1.515593762495002,1.5160335865653738,1.5164734106357458,1.5169132347061176,1.5173530587764894,1.5177928828468612,1.518232706917233,1.518672530987605,1.5191123550579768,1.5195521791283486,1.5199920031987204,1.5204318272690924,1.5208716513394642,1.521311475409836,1.5217512994802078,1.5221911235505798,1.5226309476209516,1.5230707716913234,1.5235105957616952,1.5239504198320672,1.524390243902439,1.5248300679728108,1.5252698920431826,1.5257097161135547,1.5261495401839265,1.5265893642542983,1.52702918832467,1.527469012395042,1.5279088364654139,1.5283486605357857,1.5287884846061575,1.5292283086765295,1.5296681327469013,1.530107956817273,1.5305477808876449,1.530987604958017,1.5314274290283887,1.5318672530987605,1.5323070771691323,1.5327469012395043,1.533186725309876,1.533626549380248,1.5340663734506197,1.5345061975209917,1.5349460215913635,1.5353858456617353,1.535825669732107,1.536265493802479,1.536705317872851,1.5371451419432227,1.5375849660135945,1.5380247900839663,1.5384646141543383,1.5389044382247101,1.539344262295082,1.5397840863654537,1.5402239104358257,1.5406637345061975,1.5411035585765693,1.5415433826469411,1.5419832067173131,1.542423030787685,1.5428628548580567,1.5433026789284285,1.5437425029988006,1.5441823270691724,1.5446221511395442,1.545061975209916,1.545501799280288,1.5459416233506598,1.5463814474210316,1.5468212714914034,1.5472610955617754,1.5477009196321472,1.548140743702519,1.5485805677728908,1.5490203918432628,1.5494602159136346,1.5499000399840064,1.5503398640543782,1.5507796881247502,1.551219512195122,1.5516593362654938,1.5520991603358656,1.5525389844062376,1.5529788084766094,1.5534186325469812,1.553858456617353,1.554298280687725,1.5547381047580968,1.5551779288284686,1.5556177528988404,1.5560575769692122,1.5564974010395842,1.556937225109956,1.5573770491803278,1.5578168732506996,1.5582566973210716,1.5586965213914434,1.5591363454618152,1.559576169532187,1.560015993602559,1.5604558176729308,1.5608956417433026,1.5613354658136744,1.5617752898840465,1.5622151139544183,1.56265493802479,1.5630947620951618,1.5635345861655339,1.5639744102359057,1.5644142343062775,1.5648540583766493,1.5652938824470213,1.565733706517393,1.5661735305877649,1.5666133546581367,1.5670531787285087,1.5674930027988805,1.5679328268692523,1.568372650939624,1.568812475009996,1.569252299080368,1.5696921231507397,1.5701319472211115,1.5705717712914835,1.5710115953618553,1.571451419432227,1.571891243502599,1.572331067572971,1.5727708916433427,1.5732107157137145,1.5736505397840863,1.574090363854458,1.5745301879248301,1.574970011995202,1.5754098360655737,1.5758496601359455,1.5762894842063175,1.5767293082766893,1.5771691323470611,1.577608956417433,1.578048780487805,1.5784886045581767,1.5789284286285485,1.5793682526989203,1.5798080767692924,1.5802479008396642,1.580687724910036,1.5811275489804077,1.5815673730507798,1.5820071971211516,1.5824470211915234,1.5828868452618952,1.5833266693322672,1.583766493402639,1.5842063174730108,1.5846461415433826,1.5850859656137546,1.5855257896841264,1.5859656137544982,1.58640543782487,1.586845261895242,1.5872850859656138,1.5877249100359856,1.5881647341063574,1.5886045581767294,1.5890443822471012,1.589484206317473,1.5899240303878448,1.5903638544582168,1.5908036785285886,1.5912435025989604,1.5916833266693322,1.5921231507397042,1.592562974810076,1.5930027988804478,1.5934426229508196,1.5938824470211914,1.5943222710915634,1.5947620951619352,1.595201919232307,1.5956417433026788,1.5960815673730508,1.5965213914434226,1.5969612155137944,1.5974010395841662,1.5978408636545383,1.59828068772491,1.5987205117952819,1.5991603358656536,1.5996001599360257,1.6000399840063975,1.6004798080767693,1.600919632147141,1.601359456217513,1.6017992802878849,1.6022391043582567,1.6026789284286285,1.6031187524990005,1.6035585765693723,1.603998400639744,1.6044382247101159,1.604878048780488,1.6053178728508597,1.6057576969212315,1.6061975209916033,1.6066373450619753,1.607077169132347,1.607516993202719,1.6079568172730907,1.6083966413434627,1.6088364654138345,1.6092762894842063,1.609716113554578,1.6101559376249501,1.610595761695322,1.6110355857656937,1.6114754098360655,1.6119152339064373,1.6123550579768093,1.6127948820471811,1.613234706117553,1.6136745301879247,1.6141143542582967,1.6145541783286685,1.6149940023990403,1.6154338264694121,1.6158736505397842,1.616313474610156,1.6167532986805278,1.6171931227508995,1.6176329468212716,1.6180727708916434,1.6185125949620152,1.618952419032387,1.619392243102759,1.6198320671731308,1.6202718912435026,1.6207117153138744,1.6211515393842464,1.6215913634546182,1.62203118752499,1.6224710115953618,1.6229108356657338,1.6233506597361056,1.6237904838064774,1.6242303078768492,1.6246701319472212,1.625109956017593,1.6255497800879648,1.6259896041583366,1.6264294282287086,1.6268692522990804,1.6273090763694522,1.627748900439824,1.628188724510196,1.6286285485805678,1.6290683726509396,1.6295081967213114,1.6299480207916832,1.6303878448620552,1.630827668932427,1.6312674930027988,1.6317073170731706,1.6321471411435426,1.6325869652139144,1.6330267892842862,1.633466613354658,1.63390643742503,1.6343462614954019,1.6347860855657737,1.6352259096361454,1.6356657337065175,1.6361055577768893,1.636545381847261,1.6369852059176329,1.6374250299880049,1.6378648540583767,1.6383046781287485,1.6387445021991203,1.6391843262694923,1.639624150339864,1.6400639744102359,1.6405037984806077,1.6409436225509797,1.6413834466213515,1.6418232706917233,1.642263094762095,1.642702918832467,1.643142742902839,1.6435825669732107,1.6440223910435825,1.6444622151139545,1.6449020391843263,1.6453418632546981,1.64578168732507,1.646221511395442,1.6466613354658137,1.6471011595361855,1.6475409836065573,1.6479808076769293,1.6484206317473011,1.648860455817673,1.6493002798880447,1.6497401039584165,1.6501799280287885,1.6506197520991603,1.6510595761695321,1.651499400239904,1.651939224310276,1.6523790483806478,1.6528188724510195,1.6532586965213913,1.6536985205917634,1.6541383446621352,1.654578168732507,1.6550179928028788,1.6554578168732508,1.6558976409436226,1.6563374650139944,1.6567772890843662,1.6572171131547382,1.65765693722511,1.6580967612954818,1.6585365853658536,1.6589764094362256,1.6594162335065974,1.6598560575769692,1.660295881647341,1.660735705717713,1.6611755297880848,1.6616153538584566,1.6620551779288284,1.6624950019992004,1.6629348260695722,1.663374650139944,1.6638144742103158,1.6642542982806878,1.6646941223510596,1.6651339464214314,1.6655737704918032,1.6660135945621752,1.666453418632547,1.6668932427029188,1.6673330667732906,1.6677728908436624,1.6682127149140344,1.6686525389844062,1.669092363054778,1.6695321871251498,1.6699720111955219,1.6704118352658937,1.6708516593362654,1.6712914834066372,1.6717313074770093,1.672171131547381,1.6726109556177529,1.6730507796881247,1.6734906037584967,1.6739304278288685,1.6743702518992403,1.674810075969612,1.675249900039984,1.6756897241103559,1.6761295481807277,1.6765693722510995,1.6770091963214715,1.6774490203918433,1.677888844462215,1.6783286685325869,1.678768492602959,1.6792083166733307,1.6796481407437025,1.6800879648140743,1.6805277888844463,1.6809676129548181,1.68140743702519,1.6818472610955617,1.6822870851659337,1.6827269092363055,1.6831667333066773,1.6836065573770491,1.6840463814474211,1.684486205517793,1.6849260295881647,1.6853658536585365,1.6858056777289085,1.6862455017992803,1.6866853258696521,1.687125149940024,1.6875649740103957,1.6880047980807678,1.6884446221511396,1.6888844462215113,1.6893242702918831,1.6897640943622552,1.690203918432627,1.6906437425029988,1.6910835665733706,1.6915233906437426,1.6919632147141144,1.6924030387844862,1.692842862854858,1.69328268692523,1.6937225109956018,1.6941623350659736,1.6946021591363454,1.6950419832067174,1.6954818072770892,1.695921631347461,1.6963614554178328,1.6968012794882048,1.6972411035585766,1.6976809276289484,1.6981207516993202,1.6985605757696922,1.699000399840064,1.6994402239104358,1.6998800479808076,1.7003198720511796,1.7007596961215514,1.7011995201919232,1.701639344262295,1.702079168332667,1.7025189924030388,1.7029588164734106,1.7033986405437824,1.7038384646141544,1.7042782886845262,1.704718112754898,1.7051579368252698,1.7055977608956416,1.7060375849660137,1.7064774090363855,1.7069172331067572,1.707357057177129,1.707796881247501,1.7082367053178729,1.7086765293882447,1.7091163534586165,1.7095561775289885,1.7099960015993603,1.710435825669732,1.7108756497401039,1.7113154738104759,1.7117552978808477,1.7121951219512195,1.7126349460215913,1.7130747700919633,1.713514594162335,1.7139544182327069,1.7143942423030787,1.7148340663734507,1.7152738904438225,1.7157137145141943,1.716153538584566,1.7165933626549381,1.71703318672531,1.7174730107956817,1.7179128348660535,1.7183526589364255,1.7187924830067973,1.7192323070771691,1.719672131147541,1.720111955217913,1.7205517792882847,1.7209916033586565,1.7214314274290283,1.7218712514994003,1.7223110755697721,1.722750899640144,1.7231907237105157,1.7236305477808875,1.7240703718512596,1.7245101959216314,1.7249500199920031,1.725389844062375,1.725829668132747,1.7262694922031188,1.7267093162734906,1.7271491403438624,1.7275889644142344,1.7280287884846062,1.728468612554978,1.7289084366253498,1.7293482606957218,1.7297880847660936,1.7302279088364654,1.7306677329068372,1.7311075569772092,1.731547381047581,1.7319872051179528,1.7324270291883246,1.7328668532586966,1.7333066773290684,1.7337465013994402,1.734186325469812,1.734626149540184,1.7350659736105558,1.7355057976809276,1.7359456217512994,1.7363854458216714,1.7368252698920432,1.737265093962415,1.7377049180327868,1.7381447421031588,1.7385845661735306,1.7390243902439024,1.7394642143142742,1.7399040383846462,1.740343862455018,1.7407836865253898,1.7412235105957616,1.7416633346661337,1.7421031587365055,1.7425429828068772,1.742982806877249,1.7434226309476208,1.7438624550179929,1.7443022790883647,1.7447421031587365,1.7451819272291083,1.7456217512994803,1.746061575369852,1.7465013994402239,1.7469412235105957,1.7473810475809677,1.7478208716513395,1.7482606957217113,1.748700519792083,1.749140343862455,1.749580167932827,1.7500199920031987,1.7504598160735705,1.7508996401439425,1.7513394642143143,1.751779288284686,1.752219112355058,1.75265893642543,1.7530987604958017,1.7535385845661735,1.7539784086365453,1.7544182327069173,1.7548580567772891,1.755297880847661,1.7557377049180327,1.7561775289884047,1.7566173530587765,1.7570571771291483,1.7574970011995201,1.7579368252698921,1.758376649340264,1.7588164734106357,1.7592562974810075,1.7596961215513796,1.7601359456217514,1.7605757696921231,1.761015593762495,1.7614554178328667,1.7618952419032388,1.7623350659736106,1.7627748900439824,1.7632147141143542,1.7636545381847262,1.764094362255098,1.7645341863254698,1.7649740103958416,1.7654138344662136,1.7658536585365854,1.7662934826069572,1.766733306677329,1.767173130747701,1.7676129548180728,1.7680527788884446,1.7684926029588164,1.7689324270291884,1.7693722510995602,1.769812075169932,1.7702518992403038,1.7706917233106758,1.7711315473810476,1.7715713714514194,1.7720111955217912,1.7724510195921632,1.772890843662535,1.7733306677329068,1.7737704918032786,1.7742103158736506,1.7746501399440224,1.7750899640143942,1.775529788084766,1.775969612155138,1.7764094362255098,1.7768492602958816,1.7772890843662534,1.7777289084366255,1.7781687325069973,1.778608556577369,1.7790483806477408,1.7794882047181129,1.7799280287884847,1.7803678528588565,1.7808076769292283,1.7812475009996,1.781687325069972,1.7821271491403439,1.7825669732107157,1.7830067972810875,1.7834466213514595,1.7838864454218313,1.784326269492203,1.7847660935625749,1.785205917632947,1.7856457417033187,1.7860855657736905,1.7865253898440623,1.7869652139144343,1.787405037984806,1.787844862055178,1.7882846861255497,1.7887245101959217,1.7891643342662935,1.7896041583366653,1.790043982407037,1.7904838064774091,1.790923630547781,1.7913634546181527,1.7918032786885245,1.7922431027588965,1.7926829268292683,1.7931227508996401,1.793562574970012,1.794002399040384,1.7944422231107557,1.7948820471811275,1.7953218712514993,1.7957616953218714,1.7962015193922432,1.796641343462615,1.7970811675329867,1.7975209916033588,1.7979608156737306,1.7984006397441024,1.7988404638144742,1.799280287884846,1.799720111955218,1.8001599360255898,1.8005997600959616,1.8010395841663334,1.8014794082367054,1.8019192323070772,1.802359056377449,1.8027988804478208,1.8032387045181928,1.8036785285885646,1.8041183526589364,1.8045581767293082,1.8049980007996802,1.805437824870052,1.8058776489404238,1.8063174730107956,1.8067572970811676,1.8071971211515394,1.8076369452219112,1.808076769292283,1.808516593362655,1.8089564174330268,1.8093962415033986,1.8098360655737704,1.8102758896441424,1.8107157137145142,1.811155537784886,1.8115953618552578,1.8120351859256298,1.8124750099960016,1.8129148340663734,1.8133546581367452,1.8137944822071173,1.814234306277489,1.8146741303478608,1.8151139544182326,1.8155537784886047,1.8159936025589765,1.8164334266293483,1.81687325069972,1.817313074770092,1.8177528988404639,1.8181927229108357,1.8186325469812075,1.8190723710515793,1.8195121951219513,1.819952019192323,1.8203918432626949,1.8208316673330667,1.8212714914034387,1.8217113154738105,1.8221511395441823,1.822590963614554,1.823030787684926,1.823470611755298,1.8239104358256697,1.8243502598960415,1.8247900839664135,1.8252299080367853,1.825669732107157,1.826109556177529,1.826549380247901,1.8269892043182727,1.8274290283886445,1.8278688524590163,1.8283086765293883,1.8287485005997601,1.829188324670132,1.8296281487405037,1.8300679728108757,1.8305077968812475,1.8309476209516193,1.8313874450219911,1.8318272690923632,1.832267093162735,1.8327069172331067,1.8331467413034785,1.8335865653738506,1.8340263894442224,1.8344662135145942,1.834906037584966,1.835345861655338,1.8357856857257098,1.8362255097960816,1.8366653338664534,1.8371051579368252,1.8375449820071972,1.837984806077569,1.8384246301479408,1.8388644542183126,1.8393042782886846,1.8397441023590564,1.8401839264294282,1.8406237504998,1.841063574570172,1.8415033986405438,1.8419432227109156,1.8423830467812874,1.8428228708516594,1.8432626949220312,1.843702518992403,1.8441423430627748,1.8445821671331468,1.8450219912035186,1.8454618152738904,1.8459016393442622,1.8463414634146342,1.846781287485006,1.8472211115553778,1.8476609356257496,1.8481007596961216,1.8485405837664934,1.8489804078368652,1.849420231907237,1.849860055977609,1.8502998800479808,1.8507397041183526,1.8511795281887244,1.8516193522590965,1.8520591763294683,1.85249900039984,1.8529388244702119,1.8533786485405839,1.8538184726109557,1.8542582966813275,1.8546981207516993,1.855137944822071,1.855577768892443,1.8560175929628149,1.8564574170331867,1.8568972411035585,1.8573370651739305,1.8577768892443023,1.858216713314674,1.8586565373850459,1.859096361455418,1.8595361855257897,1.8599760095961615,1.8604158336665333,1.8608556577369053,1.861295481807277,1.861735305877649,1.8621751299480207,1.8626149540183927,1.8630547780887645,1.8634946021591363,1.8639344262295081,1.8643742502998801,1.864814074370252,1.8652538984406237,1.8656937225109955,1.8661335465813675,1.8665733706517393,1.8670131947221111,1.867453018792483,1.867892842862855,1.8683326669332267,1.8687724910035985,1.8692123150739703,1.8696521391443424,1.8700919632147142,1.870531787285086,1.8709716113554578,1.8714114354258298,1.8718512594962016,1.8722910835665734,1.8727309076369452,1.8731707317073172,1.873610555777689,1.8740503798480608,1.8744902039184326,1.8749300279888044,1.8753698520591764,1.8758096761295482,1.87624950019992,1.8766893242702918,1.8771291483406638,1.8775689724110356,1.8780087964814074,1.8784486205517792,1.8788884446221512,1.879328268692523,1.8797680927628948,1.8802079168332666,1.8806477409036386,1.8810875649740104,1.8815273890443822,1.881967213114754,1.882407037185126,1.8828468612554978,1.8832866853258696,1.8837265093962414,1.8841663334666134,1.8846061575369852,1.885045981607357,1.8854858056777288,1.8859256297481009,1.8863654538184726,1.8868052778888444,1.8872451019592162,1.8876849260295883,1.88812475009996,1.8885645741703319,1.8890043982407037,1.8894442223110757,1.8898840463814475,1.8903238704518193,1.890763694522191,1.891203518592563,1.8916433426629349,1.8920831667333067,1.8925229908036785,1.8929628148740503,1.8934026389444223,1.893842463014794,1.8942822870851659,1.8947221111555377,1.8951619352259097,1.8956017592962815,1.8960415833666533,1.896481407437025,1.896921231507397,1.897361055577769,1.8978008796481407,1.8982407037185125,1.8986805277888845,1.8991203518592563,1.8995601759296281,1.9,1.900439824070372,1.9008796481407437,1.9013194722111155,1.9017592962814873,1.9021991203518593,1.9026389444222311,1.903078768492603,1.9035185925629747,1.9039584166333468,1.9043982407037185,1.9048380647740903,1.9052778888444621,1.9057177129148342,1.906157536985206,1.9065973610555778,1.9070371851259496,1.9074770091963216,1.9079168332666934,1.9083566573370652,1.908796481407437,1.909236305477809,1.9096761295481808,1.9101159536185526,1.9105557776889244,1.9109956017592964,1.9114354258296682,1.91187524990004,1.9123150739704118,1.9127548980407836,1.9131947221111556,1.9136345461815274,1.9140743702518992,1.914514194322271,1.914954018392643,1.9153938424630148,1.9158336665333866,1.9162734906037584,1.9167133146741304,1.9171531387445022,1.917592962814874,1.9180327868852458,1.9184726109556178,1.9189124350259896,1.9193522590963614,1.9197920831667332,1.9202319072371052,1.920671731307477,1.9211115553778488,1.9215513794482206,1.9219912035185927,1.9224310275889644,1.9228708516593362,1.923310675729708,1.92375049980008,1.9241903238704519,1.9246301479408237,1.9250699720111955,1.9255097960815675,1.9259496201519393,1.926389444222311,1.9268292682926829,1.9272690923630549,1.9277089164334267,1.9281487405037985,1.9285885645741703,1.9290283886445423,1.929468212714914,1.9299080367852859,1.9303478608556577,1.9307876849260295,1.9312275089964015,1.9316673330667733,1.932107157137145,1.932546981207517,1.932986805277889,1.9334266293482607,1.9338664534186325,1.9343062774890043,1.9347461015593763,1.9351859256297481,1.93562574970012,1.9360655737704917,1.9365053978408637,1.9369452219112355,1.9373850459816073,1.9378248700519791,1.9382646941223511,1.938704518192723,1.9391443422630947,1.9395841663334665,1.9400239904038385,1.9404638144742103,1.9409036385445821,1.941343462614954,1.941783286685326,1.9422231107556978,1.9426629348260696,1.9431027588964414,1.9435425829668134,1.9439824070371852,1.944422231107557,1.9448620551779288,1.9453018792483008,1.9457417033186726,1.9461815273890444,1.9466213514594162,1.9470611755297882,1.94750099960016,1.9479408236705318,1.9483806477409036,1.9488204718112754,1.9492602958816474,1.9497001199520192,1.950139944022391,1.9505797680927628,1.9510195921631348,1.9514594162335066,1.9518992403038784,1.9523390643742502,1.9527788884446222,1.953218712514994,1.9536585365853658,1.9540983606557376,1.9545381847261096,1.9549780087964814,1.9554178328668532,1.955857656937225,1.956297481007597,1.9567373050779688,1.9571771291483406,1.9576169532187124,1.9580567772890844,1.9584966013594562,1.958936425429828,1.9593762495001998,1.9598160735705719,1.9602558976409437,1.9606957217113155,1.9611355457816873,1.9615753698520593,1.962015193922431,1.9624550179928029,1.9628948420631747,1.9633346661335467,1.9637744902039185,1.9642143142742903,1.964654138344662,1.965093962415034,1.9655337864854059,1.9659736105557777,1.9664134346261495,1.9668532586965215,1.9672930827668933,1.967732906837265,1.968172730907637,1.9686125549780087,1.9690523790483807,1.9694922031187525,1.9699320271891243,1.970371851259496,1.9708116753298681,1.97125149940024,1.9716913234706117,1.9721311475409835,1.9725709716113555,1.9730107956817273,1.9734506197520991,1.973890443822471,1.974330267892843,1.9747700919632147,1.9752099160335865,1.9756497401039583,1.9760895641743303,1.9765293882447021,1.976969212315074,1.9774090363854457,1.9778488604558178,1.9782886845261896,1.9787285085965614,1.9791683326669331,1.9796081567373052,1.980047980807677,1.9804878048780488,1.9809276289484206,1.9813674530187926,1.9818072770891644,1.9822471011595362,1.982686925229908,1.98312674930028,1.9835665733706518,1.9840063974410236,1.9844462215113954,1.9848860455817674,1.9853258696521392,1.985765693722511,1.9862055177928828,1.9866453418632546,1.9870851659336266,1.9875249900039984,1.9879648140743702,1.988404638144742,1.988844462215114,1.9892842862854858,1.9897241103558576,1.9901639344262294,1.9906037584966014,1.9910435825669732,1.991483406637345,1.9919232307077168,1.9923630547780888,1.9928028788484606,1.9932427029188324,1.9936825269892042,1.9941223510595762,1.994562175129948,1.9950019992003198,1.9954418232706916,1.9958816473410637,1.9963214714114355,1.9967612954818073,1.997201119552179,1.997640943622551,1.9980807676929229,1.9985205917632947,1.9989604158336665,1.9994002399040385,1.9998400639744103,2.000279888044782,2.000719712115154,2.0011595361855257,2.0015993602558977,2.0020391843262697,2.0024790083966413,2.0029188324670133,2.003358656537385,2.003798480607757,2.004238304678129,2.0046781287485005,2.0051179528188725,2.005557776889244,2.005997600959616,2.006437425029988,2.0068772491003597,2.0073170731707317,2.0077568972411037,2.0081967213114753,2.0086365453818473,2.009076369452219,2.009516193522591,2.009956017592963,2.0103958416633345,2.0108356657337065,2.0112754898040786,2.01171531387445,2.012155137944822,2.0125949620151937,2.0130347860855657,2.0134746101559378,2.0139144342263093,2.0143542582966814,2.0147940823670534,2.015233906437425,2.015673730507797,2.0161135545781685,2.0165533786485406,2.0169932027189126,2.017433026789284,2.017872850859656,2.018312674930028,2.0187524990003998,2.019192323070772,2.0196321471411434,2.0200719712115154,2.0205117952818874,2.020951619352259,2.021391443422631,2.021831267493003,2.0222710915633746,2.0227109156337466,2.023150739704118,2.02359056377449,2.0240303878448622,2.024470211915234,2.024910035985606,2.0253498600559774,2.0257896841263494,2.0262295081967214,2.026669332267093,2.027109156337465,2.027548980407837,2.0279888044782086,2.0284286285485806,2.028868452618952,2.0293082766893242,2.0297481007596962,2.030187924830068,2.03062774890044,2.031067572970812,2.0315073970411834,2.0319472211115555,2.032387045181927,2.032826869252299,2.033266693322671,2.0337065173930426,2.0341463414634147,2.0345861655337867,2.0350259896041583,2.0354658136745303,2.035905637744902,2.036345461815274,2.036785285885646,2.0372251099560175,2.0376649340263895,2.0381047580967615,2.038544582167133,2.038984406237505,2.0394242303078767,2.0398640543782487,2.0403038784486207,2.0407437025189923,2.0411835265893643,2.0416233506597363,2.042063174730108,2.04250299880048,2.0429428228708515,2.0433826469412235,2.0438224710115955,2.044262295081967,2.044702119152339,2.0451419432227107,2.0455817672930827,2.0460215913634547,2.0464614154338263,2.0469012395041983,2.0473410635745704,2.047780887644942,2.048220711715314,2.0486605357856855,2.0491003598560575,2.0495401839264296,2.049980007996801,2.050419832067173,2.050859656137545,2.0512994802079167,2.0517393042782888,2.0521791283486603,2.0526189524190324,2.0530587764894044,2.053498600559776,2.053938424630148,2.05437824870052,2.0548180727708916,2.0552578968412636,2.055697720911635,2.056137544982007,2.056577369052379,2.0570171931227508,2.057457017193123,2.057896841263495,2.0583366653338664,2.0587764894042384,2.05921631347461,2.059656137544982,2.060095961615354,2.0605357856857256,2.0609756097560976,2.0614154338264696,2.061855257896841,2.0622950819672132,2.062734906037585,2.063174730107957,2.063614554178329,2.0640543782487004,2.0644942023190724,2.064934026389444,2.065373850459816,2.065813674530188,2.0662534986005596,2.0666933226709316,2.0671331467413037,2.0675729708116752,2.0680127948820473,2.068452618952419,2.068892443022791,2.069332267093163,2.0697720911635344,2.0702119152339065,2.0706517393042785,2.07109156337465,2.071531387445022,2.0719712115153937,2.0724110355857657,2.0728508596561377,2.0732906837265093,2.0737305077968813,2.0741703318672533,2.074610155937625,2.075049980007997,2.0754898040783685,2.0759296281487405,2.0763694522191125,2.076809276289484,2.077249100359856,2.077688924430228,2.0781287485005997,2.0785685725709717,2.0790083966413433,2.0794482207117153,2.0798880447820873,2.080327868852459,2.080767692922831,2.0812075169932025,2.0816473410635745,2.0820871651339465,2.082526989204318,2.08296681327469,2.083406637345062,2.0838464614154337,2.0842862854858057,2.0847261095561773,2.0851659336265493,2.0856057576969214,2.086045581767293,2.086485405837665,2.086925229908037,2.0873650539784085,2.0878048780487806,2.088244702119152,2.088684526189524,2.089124350259896,2.0895641743302678,2.0900039984006398,2.090443822471012,2.0908836465413834,2.0913234706117554,2.091763294682127,2.092203118752499,2.092642942822871,2.0930827668932426,2.0935225909636146,2.0939624150339866,2.094402239104358,2.09484206317473,2.095281887245102,2.095721711315474,2.096161535385846,2.0966013594562174,2.0970411835265894,2.0974810075969614,2.097920831667333,2.098360655737705,2.0988004798080766,2.0992403038784486,2.0996801279488206,2.100119952019192,2.1005597760895642,2.100999600159936,2.101439424230308,2.10187924830068,2.1023190723710514,2.1027588964414234,2.1031987205117955,2.103638544582167,2.104078368652539,2.1045181927229106,2.1049580167932826,2.1053978408636547,2.1058376649340262,2.1062774890043983,2.1067173130747703,2.107157137145142,2.107596961215514,2.1080367852858855,2.1084766093562575,2.1089164334266295,2.109356257497001,2.109796081567373,2.110235905637745,2.1106757297081167,2.1111155537784887,2.1115553778488603,2.1119952019192323,2.1124350259896043,2.112874850059976,2.113314674130348,2.11375449820072,2.1141943222710915,2.1146341463414635,2.115073970411835,2.115513794482207,2.115953618552579,2.1163934426229507,2.1168332666933227,2.1172730907636947,2.1177129148340663,2.1181527389044383,2.11859256297481,2.119032387045182,2.119472211115554,2.1199120351859255,2.1203518592562975,2.120791683326669,2.121231507397041,2.121671331467413,2.1221111555377847,2.1225509796081568,2.1229908036785288,2.1234306277489003,2.1238704518192724,2.124310275889644,2.124750099960016,2.125189924030388,2.1256297481007596,2.1260695721711316,2.1265093962415036,2.126949220311875,2.127389044382247,2.1278288684526188,2.128268692522991,2.128708516593363,2.1291483406637344,2.1295881647341064,2.1300279888044784,2.13046781287485,2.130907636945222,2.1313474610155936,2.1317872850859656,2.1322271091563376,2.132666933226709,2.133106757297081,2.1335465813674532,2.133986405437825,2.134426229508197,2.1348660535785684,2.1353058776489404,2.1357457017193124,2.136185525789684,2.136625349860056,2.1370651739304276,2.1375049980007996,2.1379448220711716,2.138384646141543,2.1388244702119152,2.1392642942822873,2.139704118352659,2.140143942423031,2.1405837664934024,2.1410235905637744,2.1414634146341465,2.141903238704518,2.14234306277489,2.142782886845262,2.1432227109156337,2.1436625349860057,2.1441023590563772,2.1445421831267493,2.1449820071971213,2.145421831267493,2.145861655337865,2.146301479408237,2.1467413034786085,2.1471811275489805,2.147620951619352,2.148060775689724,2.148500599760096,2.1489404238304677,2.1493802479008397,2.1498200719712117,2.1502598960415833,2.1506997201119553,2.151139544182327,2.151579368252699,2.152019192323071,2.1524590163934425,2.1528988404638145,2.1533386645341865,2.153778488604558,2.15421831267493,2.1546581367453017,2.1550979608156737,2.1555377848860457,2.1559776089564173,2.1564174330267893,2.156857257097161,2.157297081167533,2.157736905237905,2.1581767293082765,2.1586165533786486,2.1590563774490206,2.159496201519392,2.159936025589764,2.1603758496601357,2.1608156737305078,2.1612554978008798,2.1616953218712514,2.1621351459416234,2.1625749700119954,2.163014794082367,2.163454618152739,2.1638944422231106,2.1643342662934826,2.1647740903638546,2.165213914434226,2.165653738504598,2.16609356257497,2.166533386645342,2.166973210715714,2.1674130347860854,2.1678528588564574,2.1682926829268294,2.168732506997201,2.169172331067573,2.169612155137945,2.1700519792083166,2.1704918032786886,2.17093162734906,2.171371451419432,2.1718112754898042,2.172251099560176,2.172690923630548,2.17313074770092,2.1735705717712914,2.1740103958416634,2.174450219912035,2.174890043982407,2.175329868052779,2.1757696921231506,2.1762095161935227,2.1766493402638942,2.1770891643342662,2.1775289884046383,2.17796881247501,2.178408636545382,2.178848460615754,2.1792882846861255,2.1797281087564975,2.180167932826869,2.180607756897241,2.181047580967613,2.1814874050379847,2.1819272291083567,2.1823670531787287,2.1828068772491003,2.1832467013194723,2.183686525389844,2.184126349460216,2.184566173530588,2.1850059976009595,2.1854458216713315,2.1858856457417035,2.186325469812075,2.186765293882447,2.1872051179528187,2.1876449420231907,2.1880847660935627,2.1885245901639343,2.1889644142343063,2.1894042383046783,2.18984406237505,2.190283886445422,2.1907237105157935,2.1911635345861655,2.1916033586565375,2.192043182726909,2.192483006797281,2.1929228308676527,2.1933626549380247,2.1938024790083968,2.1942423030787683,2.1946821271491403,2.1951219512195124,2.195561775289884,2.196001599360256,2.1964414234306275,2.1968812475009996,2.1973210715713716,2.197760895641743,2.198200719712115,2.198640543782487,2.1990803678528588,2.199520191923231,2.1999600159936024,2.2003998400639744,2.2008396641343464,2.201279488204718,2.20171931227509,2.202159136345462,2.2025989604158336,2.2030387844862056,2.203478608556577,2.203918432626949,2.204358256697321,2.204798080767693,2.205237904838065,2.205677728908437,2.2061175529788084,2.2065573770491804,2.206997201119552,2.207437025189924,2.207876849260296,2.2083166733306676,2.2087564974010396,2.2091963214714117,2.2096361455417832,2.2100759696121552,2.210515793682527,2.210955617752899,2.211395441823271,2.2118352658936424,2.2122750899640145,2.212714914034386,2.213154738104758,2.21359456217513,2.2140343862455016,2.2144742103158737,2.2149140343862457,2.2153538584566173,2.2157936825269893,2.216233506597361,2.216673330667733,2.217113154738105,2.2175529788084765,2.2179928028788485,2.2184326269492205,2.218872451019592,2.219312275089964,2.2197520991603357,2.2201919232307077,2.2206317473010797,2.2210715713714513,2.2215113954418233,2.2219512195121953,2.222391043582567,2.222830867652939,2.2232706917233105,2.2237105157936825,2.2241503398640545,2.224590163934426,2.225029988004798,2.22546981207517,2.2259096361455417,2.2263494602159137,2.2267892842862853,2.2272291083566573,2.2276689324270293,2.228108756497401,2.228548580567773,2.228988404638145,2.2294282287085165,2.2298680527788886,2.23030787684926,2.230747700919632,2.231187524990004,2.2316273490603757,2.2320671731307478,2.2325069972011193,2.2329468212714914,2.2333866453418634,2.233826469412235,2.234266293482607,2.234706117552979,2.2351459416233506,2.2355857656937226,2.236025589764094,2.236465413834466,2.236905237904838,2.2373450619752098,2.237784886045582,2.238224710115954,2.2386645341863254,2.2391043582566974,2.239544182327069,2.239984006397441,2.240423830467813,2.2408636545381846,2.2413034786085566,2.2417433026789286,2.2421831267493,2.2426229508196722,2.243062774890044,2.243502598960416,2.243942423030788,2.2443822471011594,2.2448220711715314,2.2452618952419034,2.245701719312275,2.246141543382647,2.2465813674530186,2.2470211915233906,2.2474610155937627,2.2479008396641342,2.2483406637345063,2.2487804878048783,2.24922031187525,2.249660135945622,2.2500999600159934,2.2505397840863655,2.2509796081567375,2.251419432227109,2.251859256297481,2.2522990803678526,2.2527389044382247,2.2531787285085967,2.2536185525789683,2.2540583766493403,2.2544982007197123,2.254938024790084,2.255377848860456,2.2558176729308275,2.2562574970011995,2.2566973210715715,2.257137145141943,2.257576969212315,2.258016793282687,2.2584566173530587,2.2588964414234307,2.2593362654938023,2.2597760895641743,2.2602159136345463,2.260655737704918,2.26109556177529,2.261535385845662,2.2619752099160335,2.2624150339864055,2.262854858056777,2.263294682127149,2.263734506197521,2.2641743302678927,2.2646141543382647,2.2650539784086368,2.2654938024790083,2.2659336265493804,2.266373450619752,2.266813274690124,2.267253098760496,2.2676929228308675,2.2681327469012396,2.268572570971611,2.269012395041983,2.269452219112355,2.2698920431827267,2.2703318672530988,2.270771691323471,2.2712115153938424,2.2716513394642144,2.272091163534586,2.272530987604958,2.27297081167533,2.2734106357457016,2.2738504598160736,2.2742902838864456,2.274730107956817,2.275169932027189,2.2756097560975608,2.276049580167933,2.276489404238305,2.2769292283086764,2.2773690523790484,2.2778088764494204,2.278248700519792,2.278688524590164,2.2791283486605356,2.2795681727309076,2.2800079968012796,2.280447820871651,2.2808876449420232,2.2813274690123952,2.281767293082767,2.282207117153139,2.2826469412235104,2.2830867652938824,2.2835265893642545,2.283966413434626,2.284406237504998,2.28484606157537,2.2852858856457416,2.2857257097161137,2.2861655337864852,2.2866053578568573,2.2870451819272293,2.287485005997601,2.287924830067973,2.2883646541383444,2.2888044782087165,2.2892443022790885,2.28968412634946,2.290123950419832,2.290563774490204,2.2910035985605757,2.2914434226309477,2.2918832467013193,2.2923230707716913,2.2927628948420633,2.293202718912435,2.293642542982807,2.294082367053179,2.2945221911235505,2.2949620151939225,2.295401839264294,2.295841663334666,2.296281487405038,2.2967213114754097,2.2971611355457817,2.2976009596161537,2.2980407836865253,2.2984806077568973,2.298920431827269,2.299360255897641,2.299800079968013,2.3002399040383845,2.3006797281087565,2.3011195521791286,2.3015593762495,2.301999200319872,2.3024390243902437,2.3028788484606157,2.3033186725309878,2.3037584966013593,2.3041983206717314,2.3046381447421034,2.305077968812475,2.305517792882847,2.3059576169532185,2.3063974410235906,2.3068372650939626,2.307277089164334,2.307716913234706,2.3081567373050778,2.3085965613754498,2.309036385445822,2.3094762095161934,2.3099160335865654,2.3103558576569374,2.310795681727309,2.311235505797681,2.3116753298680526,2.3121151539384246,2.3125549780087966,2.312994802079168,2.31343462614954,2.3138744502199122,2.314314274290284,2.314754098360656,2.3151939224310274,2.3156337465013994,2.3160735705717714,2.316513394642143,2.316953218712515,2.317393042782887,2.3178328668532586,2.3182726909236306,2.318712514994002,2.3191523390643742,2.3195921631347463,2.320031987205118,2.32047181127549,2.320911635345862,2.3213514594162334,2.3217912834866055,2.322231107556977,2.322670931627349,2.323110755697721,2.3235505797680926,2.3239904038384647,2.3244302279088362,2.3248700519792083,2.3253098760495803,2.325749700119952,2.326189524190324,2.326629348260696,2.3270691723310675,2.3275089964014395,2.327948820471811,2.328388644542183,2.328828468612555,2.3292682926829267,2.3297081167532987,2.3301479408236707,2.3305877648940423,2.3310275889644143,2.331467413034786,2.331907237105158,2.33234706117553,2.3327868852459015,2.3332267093162735,2.3336665333866455,2.334106357457017,2.334546181527389,2.3349860055977607,2.3354258296681327,2.3358656537385047,2.3363054778088763,2.3367453018792483,2.3371851259496204,2.337624950019992,2.338064774090364,2.3385045981607355,2.3389444222311075,2.3393842463014796,2.339824070371851,2.340263894442223,2.340703718512595,2.3411435425829668,2.3415833666533388,2.3420231907237103,2.3424630147940824,2.3429028388644544,2.343342662934826,2.343782487005198,2.3442223110755696,2.3446621351459416,2.3451019592163136,2.345541783286685,2.345981607357057,2.346421431427429,2.346861255497801,2.347301079568173,2.3477409036385444,2.3481807277089164,2.3486205517792884,2.34906037584966,2.349500199920032,2.349940023990404,2.3503798480607756,2.3508196721311476,2.351259496201519,2.351699320271891,2.3521391443422632,2.352578968412635,2.353018792483007,2.353458616553379,2.3538984406237504,2.3543382646941224,2.354778088764494,2.355217912834866,2.355657736905238,2.3560975609756096,2.3565373850459816,2.3569772091163537,2.3574170331867252,2.3578568572570973,2.358296681327469,2.358736505397841,2.359176329468213,2.3596161535385844,2.3600559776089565,2.3604958016793285,2.3609356257497,2.361375449820072,2.3618152738904437,2.3622550979608157,2.3626949220311877,2.3631347461015593,2.3635745701719313,2.364014394242303,2.364454218312675,2.364894042383047,2.3653338664534185,2.3657736905237905,2.3662135145941625,2.366653338664534,2.367093162734906,2.3675329868052777,2.3679728108756497,2.3684126349460217,2.3688524590163933,2.3692922830867653,2.3697321071571373,2.370171931227509,2.370611755297881,2.3710515793682525,2.3714914034386245,2.3719312275089965,2.372371051579368,2.37281087564974,2.373250699720112,2.3736905237904837,2.3741303478608557,2.3745701719312273,2.3750099960015993,2.3754498200719714,2.375889644142343,2.376329468212715,2.376769292283087,2.3772091163534586,2.3776489404238306,2.378088764494202,2.378528588564574,2.378968412634946,2.3794082367053178,2.3798480607756898,2.380287884846062,2.3807277089164334,2.3811675329868054,2.381607357057177,2.382047181127549,2.382487005197921,2.3829268292682926,2.3833666533386646,2.383806477409036,2.384246301479408,2.38468612554978,2.385125949620152,2.385565773690524,2.386005597760896,2.3864454218312674,2.3868852459016394,2.387325069972011,2.387764894042383,2.388204718112755,2.3886445421831266,2.3890843662534986,2.3895241903238706,2.389964014394242,2.3904038384646142,2.390843662534986,2.391283486605358,2.39172331067573,2.3921631347461014,2.3926029588164734,2.3930427828868455,2.393482606957217,2.393922431027589,2.3943622550979606,2.3948020791683327,2.3952419032387047,2.3956817273090762,2.3961215513794483,2.3965613754498203,2.397001199520192,2.397441023590564,2.3978808476609355,2.3983206717313075,2.3987604958016795,2.399200319872051,2.399640143942423,2.4000799680127947,2.4005197920831667,2.4009596161535387,2.4013994402239103,2.4018392642942823,2.4022790883646543,2.402718912435026,2.403158736505398,2.4035985605757695,2.4040383846461415,2.4044782087165135,2.404918032786885,2.405357856857257,2.405797680927629,2.4062375049980007,2.4066773290683727,2.4071171531387443,2.4075569772091163,2.4079968012794883,2.40843662534986,2.408876449420232,2.409316273490604,2.4097560975609755,2.4101959216313475,2.410635745701719,2.411075569772091,2.411515393842463,2.4119552179128347,2.4123950419832068,2.4128348660535788,2.4132746901239504,2.4137145141943224,2.414154338264694,2.414594162335066,2.415033986405438,2.4154738104758096,2.4159136345461816,2.4163534586165536,2.416793282686925,2.417233106757297,2.4176729308276688,2.418112754898041,2.418552578968413,2.4189924030387844,2.4194322271091564,2.419872051179528,2.4203118752499,2.420751699320272,2.4211915233906436,2.4216313474610156,2.4220711715313876,2.422510995601759,2.422950819672131,2.423390643742503,2.423830467812875,2.424270291883247,2.4247101159536184,2.4251499400239904,2.4255897640943624,2.426029588164734,2.426469412235106,2.4269092363054776,2.4273490603758496,2.4277888844462217,2.4282287085165932,2.4286685325869652,2.4291083566573373,2.429548180727709,2.429988004798081,2.4304278288684524,2.4308676529388245,2.4313074770091965,2.431747301079568,2.43218712514994,2.432626949220312,2.4330667732906837,2.4335065973610557,2.4339464214314273,2.4343862455017993,2.4348260695721713,2.435265893642543,2.435705717712915,2.436145541783287,2.4365853658536585,2.4370251899240305,2.437465013994402,2.437904838064774,2.438344662135146,2.4387844862055177,2.4392243102758897,2.4396641343462613,2.4401039584166333,2.4405437824870053,2.440983606557377,2.441423430627749,2.441863254698121,2.4423030787684925,2.4427429028388645,2.443182726909236,2.443622550979608,2.44406237504998,2.4445021991203517,2.4449420231907237,2.4453818472610958,2.4458216713314673,2.4462614954018393,2.446701319472211,2.447141143542583,2.447580967612955,2.4480207916833265,2.4484606157536986,2.4489004398240706,2.449340263894442,2.449780087964814,2.4502199120351857,2.4506597361055578,2.45109956017593,2.4515393842463014,2.4519792083166734,2.4524190323870454,2.452858856457417,2.453298680527789,2.4537385045981606,2.4541783286685326,2.4546181527389046,2.455057976809276,2.455497800879648,2.4559376249500198,2.456377449020392,2.456817273090764,2.4572570971611354,2.4576969212315074,2.4581367453018794,2.458576569372251,2.459016393442623,2.4594562175129946,2.4598960415833666,2.4603358656537386,2.46077568972411,2.4612155137944822,2.4616553378648542,2.462095161935226,2.462534986005598,2.4629748100759694,2.4634146341463414,2.4638544582167135,2.464294282287085,2.464734106357457,2.465173930427829,2.4656137544982006,2.4660535785685727,2.4664934026389442,2.4669332267093163,2.4673730507796883,2.46781287485006,2.468252698920432,2.468692522990804,2.4691323470611755,2.4695721711315475,2.470011995201919,2.470451819272291,2.470891643342663,2.4713314674130347,2.4717712914834067,2.4722111155537787,2.4726509396241503,2.4730907636945223,2.473530587764894,2.473970411835266,2.474410235905638,2.4748500599760095,2.4752898840463815,2.475729708116753,2.476169532187125,2.476609356257497,2.4770491803278687,2.4774890043982407,2.4779288284686127,2.4783686525389843,2.4788084766093563,2.479248300679728,2.4796881247501,2.480127948820472,2.4805677728908435,2.4810075969612155,2.4814474210315876,2.481887245101959,2.482327069172331,2.4827668932427027,2.4832067173130747,2.4836465413834468,2.4840863654538183,2.4845261895241904,2.4849660135945624,2.485405837664934,2.485845661735306,2.4862854858056775,2.4867253098760496,2.4871651339464216,2.487604958016793,2.488044782087165,2.488484606157537,2.4889244302279088,2.489364254298281,2.4898040783686524,2.4902439024390244,2.4906837265093964,2.491123550579768,2.49156337465014,2.492003198720512,2.4924430227908836,2.4928828468612556,2.493322670931627,2.493762495001999,2.494202319072371,2.494642143142743,2.495081967213115,2.4955217912834864,2.4959616153538584,2.4964014394242304,2.496841263494602,2.497281087564974,2.497720911635346,2.4981607357057176,2.4986005597760896,2.499040383846461,2.4994802079168332,2.4999200319872052,2.500359856057577,2.500799680127949,2.501239504198321,2.5016793282686924,2.5021191523390645,2.502558976409436,2.502998800479808,2.50343862455018,2.5038784486205516,2.5043182726909237,2.5047580967612957,2.5051979208316673,2.5056377449020393,2.506077568972411,2.506517393042783,2.506957217113155,2.5073970411835265,2.5078368652538985,2.5082766893242705,2.508716513394642,2.509156337465014,2.5095961615353857,2.5100359856057577,2.5104758096761297,2.5109156337465013,2.5113554578168733,2.5117952818872453,2.512235105957617,2.512674930027989,2.5131147540983605,2.5135545781687325,2.5139944022391045,2.514434226309476,2.514874050379848,2.5153138744502197,2.5157536985205917,2.5161935225909637,2.5166333466613353,2.5170731707317073,2.5175129948020794,2.517952818872451,2.518392642942823,2.5188324670131945,2.5192722910835665,2.5197121151539386,2.52015193922431,2.520591763294682,2.521031587365054,2.5214714114354257,2.5219112355057978,2.5223510595761693,2.5227908836465414,2.5232307077169134,2.523670531787285,2.524110355857657,2.524550179928029,2.5249900039984006,2.5254298280687726,2.525869652139144,2.526309476209516,2.526749300279888,2.5271891243502598,2.527628948420632,2.528068772491004,2.5285085965613754,2.5289484206317474,2.529388244702119,2.529828068772491,2.530267892842863,2.5307077169132346,2.5311475409836066,2.531587365053978,2.53202718912435,2.5324670131947222,2.532906837265094,2.533346661335466,2.533786485405838,2.5342263094762094,2.5346661335465814,2.535105957616953,2.535545781687325,2.535985605757697,2.5364254298280686,2.5368652538984406,2.5373050779688127,2.5377449020391842,2.5381847261095563,2.538624550179928,2.5390643742503,2.539504198320672,2.5399440223910434,2.5403838464614155,2.5408236705317875,2.541263494602159,2.541703318672531,2.5421431427429027,2.5425829668132747,2.5430227908836467,2.5434626149540183,2.5439024390243903,2.5443422630947623,2.544782087165134,2.545221911235506,2.5456617353058775,2.5461015593762495,2.5465413834466215,2.546981207516993,2.547421031587365,2.547860855657737,2.5483006797281087,2.5487405037984807,2.5491803278688523,2.5496201519392243,2.5500599760095963,2.550499800079968,2.55093962415034,2.5513794482207115,2.5518192722910835,2.5522590963614555,2.552698920431827,2.553138744502199,2.553578568572571,2.5540183926429427,2.5544582167133147,2.5548980407836863,2.5553378648540583,2.5557776889244304,2.556217512994802,2.556657337065174,2.557097161135546,2.5575369852059175,2.5579768092762896,2.558416633346661,2.558856457417033,2.559296281487405,2.5597361055577768,2.5601759296281488,2.560615753698521,2.5610555777688924,2.5614954018392644,2.561935225909636,2.562375049980008,2.56281487405038,2.5632546981207516,2.5636945221911236,2.5641343462614956,2.564574170331867,2.565013994402239,2.565453818472611,2.565893642542983,2.566333466613355,2.5667732906837264,2.5672131147540984,2.5676529388244704,2.568092762894842,2.568532586965214,2.5689724110355856,2.5694122351059576,2.5698520591763296,2.570291883246701,2.5707317073170732,2.571171531387445,2.571611355457817,2.572051179528189,2.5724910035985604,2.5729308276689324,2.5733706517393045,2.573810475809676,2.574250299880048,2.5746901239504196,2.5751299480207916,2.5755697720911637,2.5760095961615352,2.5764494202319073,2.5768892443022793,2.577329068372651,2.577768892443023,2.5782087165133944,2.5786485405837665,2.5790883646541385,2.57952818872451,2.579968012794882,2.580407836865254,2.5808476609356257,2.5812874850059977,2.5817273090763693,2.5821671331467413,2.5826069572171133,2.583046781287485,2.583486605357857,2.583926429428229,2.5843662534986005,2.5848060775689725,2.585245901639344,2.585685725709716,2.586125549780088,2.5865653738504597,2.5870051979208317,2.5874450219912033,2.5878848460615753,2.5883246701319473,2.588764494202319,2.589204318272691,2.589644142343063,2.5900839664134345,2.5905237904838065,2.590963614554178,2.59140343862455,2.591843262694922,2.5922830867652937,2.5927229108356658,2.5931627349060378,2.5936025589764093,2.5940423830467814,2.594482207117153,2.594922031187525,2.595361855257897,2.5958016793282686,2.5962415033986406,2.5966813274690126,2.597121151539384,2.597560975609756,2.5980007996801278,2.5984406237505,2.598880447820872,2.5993202718912434,2.5997600959616154,2.6001999200319874,2.600639744102359,2.601079568172731,2.6015193922431026,2.6019592163134746,2.6023990403838466,2.602838864454218,2.60327868852459,2.6037185125949622,2.604158336665334,2.604598160735706,2.6050379848060774,2.6054778088764494,2.6059176329468214,2.606357457017193,2.606797281087565,2.6072371051579366,2.6076769292283086,2.6081167532986806,2.608556577369052,2.6089964014394242,2.6094362255097963,2.609876049580168,2.61031587365054,2.6107556977209114,2.6111955217912834,2.6116353458616555,2.612075169932027,2.612514994002399,2.612954818072771,2.6133946421431427,2.6138344662135147,2.6142742902838862,2.6147141143542583,2.6151539384246303,2.615593762495002,2.616033586565374,2.616473410635746,2.6169132347061175,2.6173530587764895,2.617792882846861,2.618232706917233,2.618672530987605,2.6191123550579767,2.6195521791283487,2.6199920031987207,2.6204318272690923,2.6208716513394643,2.621311475409836,2.621751299480208,2.62219112355058,2.6226309476209515,2.6230707716913235,2.6235105957616955,2.623950419832067,2.624390243902439,2.6248300679728107,2.6252698920431827,2.6257097161135547,2.6261495401839263,2.6265893642542983,2.62702918832467,2.627469012395042,2.627908836465414,2.6283486605357855,2.6287884846061575,2.6292283086765296,2.629668132746901,2.630107956817273,2.6305477808876447,2.6309876049580168,2.6314274290283888,2.6318672530987604,2.6323070771691324,2.6327469012395044,2.633186725309876,2.633626549380248,2.6340663734506196,2.6345061975209916,2.6349460215913636,2.635385845661735,2.635825669732107,2.636265493802479,2.636705317872851,2.637145141943223,2.6375849660135944,2.6380247900839664,2.6384646141543384,2.63890443822471,2.639344262295082,2.639784086365454,2.6402239104358256,2.6406637345061976,2.641103558576569,2.641543382646941,2.6419832067173132,2.642423030787685,2.642862854858057,2.643302678928429,2.6437425029988004,2.6441823270691724,2.644622151139544,2.645061975209916,2.645501799280288,2.6459416233506596,2.6463814474210317,2.6468212714914032,2.6472610955617752,2.6477009196321473,2.648140743702519,2.648580567772891,2.649020391843263,2.6494602159136345,2.6499000399840065,2.650339864054378,2.65077968812475,2.651219512195122,2.6516593362654937,2.6520991603358657,2.6525389844062377,2.6529788084766093,2.6534186325469813,2.653858456617353,2.654298280687725,2.654738104758097,2.6551779288284685,2.6556177528988405,2.6560575769692125,2.656497401039584,2.656937225109956,2.6573770491803277,2.6578168732506997,2.6582566973210717,2.6586965213914433,2.6591363454618153,2.6595761695321873,2.660015993602559,2.660455817672931,2.6608956417433025,2.6613354658136745,2.6617752898840465,2.662215113954418,2.66265493802479,2.6630947620951617,2.6635345861655337,2.6639744102359058,2.6644142343062773,2.6648540583766493,2.6652938824470214,2.665733706517393,2.666173530587765,2.6666133546581365,2.6670531787285086,2.6674930027988806,2.667932826869252,2.668372650939624,2.668812475009996,2.6692522990803678,2.66969212315074,2.6701319472211114,2.6705717712914834,2.6710115953618554,2.671451419432227,2.671891243502599,2.672331067572971,2.6727708916433426,2.6732107157137146,2.673650539784086,2.674090363854458,2.67453018792483,2.674970011995202,2.675409836065574,2.675849660135946,2.6762894842063174,2.6767293082766894,2.677169132347061,2.677608956417433,2.678048780487805,2.6784886045581766,2.6789284286285486,2.6793682526989206,2.6798080767692922,2.6802479008396642,2.680687724910036,2.681127548980408,2.68156737305078,2.6820071971211514,2.6824470211915235,2.682886845261895,2.683326669332267,2.683766493402639,2.6842063174730106,2.6846461415433827,2.6850859656137547,2.6855257896841263,2.6859656137544983,2.68640543782487,2.686845261895242,2.687285085965614,2.6877249100359855,2.6881647341063575,2.6886045581767295,2.689044382247101,2.689484206317473,2.6899240303878447,2.6903638544582167,2.6908036785285887,2.6912435025989603,2.6916833266693323,2.6921231507397043,2.692562974810076,2.693002798880448,2.6934426229508195,2.6938824470211915,2.6943222710915635,2.694762095161935,2.695201919232307,2.695641743302679,2.6960815673730507,2.6965213914434227,2.6969612155137943,2.6974010395841663,2.6978408636545383,2.69828068772491,2.698720511795282,2.699160335865654,2.6996001599360255,2.7000399840063976,2.700479808076769,2.700919632147141,2.701359456217513,2.7017992802878847,2.7022391043582568,2.7026789284286283,2.7031187524990004,2.7035585765693724,2.703998400639744,2.704438224710116,2.704878048780488,2.7053178728508596,2.7057576969212316,2.706197520991603,2.706637345061975,2.707077169132347,2.7075169932027188,2.707956817273091,2.708396641343463,2.7088364654138344,2.7092762894842064,2.709716113554578,2.71015593762495,2.710595761695322,2.7110355857656936,2.7114754098360656,2.7119152339064376,2.712355057976809,2.712794882047181,2.713234706117553,2.713674530187925,2.714114354258297,2.7145541783286684,2.7149940023990404,2.7154338264694124,2.715873650539784,2.716313474610156,2.7167532986805276,2.7171931227508996,2.7176329468212717,2.7180727708916432,2.7185125949620152,2.718952419032387,2.719392243102759,2.719832067173131,2.7202718912435024,2.7207117153138745,2.7211515393842465,2.721591363454618,2.72203118752499,2.7224710115953616,2.7229108356657337,2.7233506597361057,2.7237904838064773,2.7242303078768493,2.7246701319472213,2.725109956017593,2.725549780087965,2.7259896041583365,2.7264294282287085,2.7268692522990805,2.727309076369452,2.727748900439824,2.728188724510196,2.7286285485805677,2.7290683726509397,2.7295081967213113,2.7299480207916833,2.7303878448620553,2.730827668932427,2.731267493002799,2.731707317073171,2.7321471411435425,2.7325869652139145,2.733026789284286,2.733466613354658,2.73390643742503,2.7343462614954017,2.7347860855657737,2.7352259096361458,2.7356657337065173,2.7361055577768894,2.736545381847261,2.736985205917633,2.737425029988005,2.7378648540583765,2.7383046781287486,2.73874450219912,2.739184326269492,2.739624150339864,2.7400639744102357,2.7405037984806078,2.74094362255098,2.7413834466213514,2.7418232706917234,2.742263094762095,2.742702918832467,2.743142742902839,2.7435825669732106,2.7440223910435826,2.7444622151139546,2.744902039184326,2.745341863254698,2.7457816873250698,2.746221511395442,2.746661335465814,2.7471011595361854,2.7475409836065574,2.7479808076769294,2.748420631747301,2.748860455817673,2.7493002798880446,2.7497401039584166,2.7501799280287886,2.75061975209916,2.7510595761695322,2.7514994002399042,2.751939224310276,2.752379048380648,2.7528188724510194,2.7532586965213914,2.7536985205917635,2.754138344662135,2.754578168732507,2.755017992802879,2.7554578168732506,2.7558976409436227,2.7563374650139942,2.7567772890843663,2.7572171131547383,2.75765693722511,2.758096761295482,2.7585365853658534,2.7589764094362255,2.7594162335065975,2.759856057576969,2.760295881647341,2.760735705717713,2.7611755297880847,2.7616153538584567,2.7620551779288283,2.7624950019992003,2.7629348260695723,2.763374650139944,2.763814474210316,2.764254298280688,2.7646941223510595,2.7651339464214315,2.765573770491803,2.766013594562175,2.766453418632547,2.7668932427029187,2.7673330667732907,2.7677728908436627,2.7682127149140343,2.7686525389844063,2.769092363054778,2.76953218712515,2.769972011195522,2.7704118352658935,2.7708516593362655,2.7712914834066376,2.771731307477009,2.772171131547381,2.7726109556177527,2.7730507796881247,2.7734906037584968,2.7739304278288683,2.7743702518992404,2.774810075969612,2.775249900039984,2.775689724110356,2.7761295481807275,2.7765693722510996,2.7770091963214716,2.777449020391843,2.777888844462215,2.7783286685325868,2.7787684926029588,2.779208316673331,2.7796481407437024,2.7800879648140744,2.7805277888844464,2.780967612954818,2.78140743702519,2.7818472610955616,2.7822870851659336,2.7827269092363056,2.783166733306677,2.783606557377049,2.7840463814474212,2.784486205517793,2.784926029588165,2.7853658536585364,2.7858056777289084,2.7862455017992804,2.786685325869652,2.787125149940024,2.787564974010396,2.7880047980807676,2.7884446221511396,2.788884446221511,2.7893242702918832,2.7897640943622553,2.790203918432627,2.790643742502999,2.791083566573371,2.7915233906437424,2.7919632147141145,2.792403038784486,2.792842862854858,2.79328268692523,2.7937225109956016,2.7941623350659737,2.7946021591363452,2.7950419832067173,2.7954818072770893,2.795921631347461,2.796361455417833,2.796801279488205,2.7972411035585765,2.7976809276289485,2.79812075169932,2.798560575769692,2.799000399840064,2.7994402239104357,2.7998800479808077,2.8003198720511797,2.8007596961215513,2.8011995201919233,2.801639344262295,2.802079168332667,2.802518992403039,2.8029588164734105,2.8033986405437825,2.8038384646141545,2.804278288684526,2.804718112754898,2.8051579368252697,2.8055977608956417,2.8060375849660137,2.8064774090363853,2.8069172331067573,2.8073570571771294,2.807796881247501,2.808236705317873,2.8086765293882445,2.8091163534586165,2.8095561775289886,2.80999600159936,2.810435825669732,2.810875649740104,2.8113154738104758,2.8117552978808478,2.8121951219512193,2.8126349460215914,2.8130747700919634,2.813514594162335,2.813954418232707,2.8143942423030786,2.8148340663734506,2.8152738904438226,2.815713714514194,2.816153538584566,2.816593362654938,2.81703318672531,2.817473010795682,2.8179128348660534,2.8183526589364254,2.8187924830067974,2.819232307077169,2.819672131147541,2.820111955217913,2.8205517792882846,2.8209916033586566,2.821431427429028,2.8218712514994,2.8223110755697722,2.822750899640144,2.823190723710516,2.823630547780888,2.8240703718512594,2.8245101959216314,2.824950019992003,2.825389844062375,2.825829668132747,2.8262694922031186,2.8267093162734906,2.8271491403438627,2.8275889644142342,2.8280287884846063,2.828468612554978,2.82890843662535,2.829348260695722,2.8297880847660934,2.8302279088364655,2.8306677329068375,2.831107556977209,2.831547381047581,2.8319872051179527,2.8324270291883247,2.8328668532586967,2.8333066773290683,2.8337465013994403,2.834186325469812,2.834626149540184,2.835065973610556,2.8355057976809275,2.8359456217512995,2.8363854458216715,2.836825269892043,2.837265093962415,2.8377049180327867,2.8381447421031587,2.8385845661735307,2.8390243902439023,2.8394642143142743,2.8399040383846463,2.840343862455018,2.84078368652539,2.8412235105957615,2.8416633346661335,2.8421031587365055,2.842542982806877,2.842982806877249,2.843422630947621,2.8438624550179927,2.8443022790883647,2.8447421031587363,2.8451819272291083,2.8456217512994804,2.846061575369852,2.846501399440224,2.846941223510596,2.8473810475809676,2.8478208716513396,2.848260695721711,2.848700519792083,2.849140343862455,2.8495801679328268,2.8500199920031988,2.8504598160735704,2.8508996401439424,2.8513394642143144,2.851779288284686,2.852219112355058,2.85265893642543,2.8530987604958016,2.8535385845661736,2.853978408636545,2.854418232706917,2.854858056777289,2.855297880847661,2.855737704918033,2.856177528988405,2.8566173530587764,2.8570571771291484,2.85749700119952,2.857936825269892,2.858376649340264,2.8588164734106356,2.8592562974810076,2.8596961215513796,2.860135945621751,2.8605757696921232,2.861015593762495,2.861455417832867,2.861895241903239,2.8623350659736104,2.8627748900439824,2.8632147141143545,2.863654538184726,2.864094362255098,2.8645341863254696,2.8649740103958417,2.8654138344662137,2.8658536585365852,2.8662934826069573,2.8667333066773293,2.867173130747701,2.867612954818073,2.8680527788884445,2.8684926029588165,2.8689324270291885,2.86937225109956,2.869812075169932,2.8702518992403037,2.8706917233106757,2.8711315473810477,2.8715713714514193,2.8720111955217913,2.8724510195921633,2.872890843662535,2.873330667732907,2.8737704918032785,2.8742103158736505,2.8746501399440225,2.875089964014394,2.875529788084766,2.875969612155138,2.8764094362255097,2.8768492602958817,2.8772890843662533,2.8777289084366253,2.8781687325069973,2.878608556577369,2.879048380647741,2.879488204718113,2.8799280287884845,2.8803678528588565,2.880807676929228,2.8812475009996,2.881687325069972,2.8821271491403437,2.8825669732107158,2.8830067972810878,2.8834466213514593,2.8838864454218314,2.884326269492203,2.884766093562575,2.885205917632947,2.8856457417033186,2.8860855657736906,2.8865253898440626,2.886965213914434,2.887405037984806,2.8878448620551778,2.88828468612555,2.888724510195922,2.8891643342662934,2.8896041583366654,2.890043982407037,2.890483806477409,2.890923630547781,2.8913634546181526,2.8918032786885246,2.8922431027588966,2.892682926829268,2.89312275089964,2.893562574970012,2.894002399040384,2.894442223110756,2.8948820471811274,2.8953218712514994,2.8957616953218714,2.896201519392243,2.896641343462615,2.8970811675329866,2.8975209916033586,2.8979608156737307,2.8984006397441022,2.8988404638144742,2.8992802878848463,2.899720111955218,2.90015993602559,2.9005997600959614,2.9010395841663335,2.9014794082367055,2.901919232307077,2.902359056377449,2.902798880447821,2.9032387045181927,2.9036785285885647,2.9041183526589363,2.9045581767293083,2.9049980007996803,2.905437824870052,2.905877648940424,2.9063174730107955,2.9067572970811675,2.9071971211515395,2.907636945221911,2.908076769292283,2.908516593362655,2.9089564174330267,2.9093962415033987,2.9098360655737703,2.9102758896441423,2.9107157137145143,2.911155537784886,2.911595361855258,2.91203518592563,2.9124750099960015,2.9129148340663735,2.913354658136745,2.913794482207117,2.914234306277489,2.9146741303478607,2.9151139544182327,2.9155537784886048,2.9159936025589763,2.9164334266293483,2.91687325069972,2.917313074770092,2.917752898840464,2.9181927229108355,2.9186325469812076,2.9190723710515796,2.919512195121951,2.919952019192323,2.9203918432626947,2.9208316673330668,2.921271491403439,2.9217113154738104,2.9221511395441824,2.9225909636145544,2.923030787684926,2.923470611755298,2.9239104358256696,2.9243502598960416,2.9247900839664136,2.925229908036785,2.925669732107157,2.9261095561775288,2.926549380247901,2.926989204318273,2.9274290283886444,2.9278688524590164,2.9283086765293884,2.92874850059976,2.929188324670132,2.9296281487405036,2.9300679728108756,2.9305077968812476,2.930947620951619,2.9313874450219912,2.9318272690923632,2.932267093162735,2.932706917233107,2.9331467413034784,2.9335865653738504,2.9340263894442224,2.934466213514594,2.934906037584966,2.935345861655338,2.9357856857257096,2.9362255097960817,2.9366653338664532,2.9371051579368253,2.9375449820071973,2.937984806077569,2.938424630147941,2.938864454218313,2.9393042782886845,2.9397441023590565,2.940183926429428,2.9406237504998,2.941063574570172,2.9415033986405437,2.9419432227109157,2.9423830467812877,2.9428228708516593,2.9432626949220313,2.943702518992403,2.944142343062775,2.944582167133147,2.9450219912035185,2.9454618152738905,2.945901639344262,2.946341463414634,2.946781287485006,2.9472211115553777,2.9476609356257497,2.9481007596961217,2.9485405837664933,2.9489804078368653,2.949420231907237,2.949860055977609,2.950299880047981,2.9507397041183525,2.9511795281887245,2.9516193522590966,2.952059176329468,2.95249900039984,2.9529388244702117,2.9533786485405837,2.9538184726109558,2.9542582966813273,2.9546981207516994,2.9551379448220714,2.955577768892443,2.956017592962815,2.9564574170331865,2.9568972411035586,2.9573370651739306,2.957776889244302,2.958216713314674,2.958656537385046,2.9590963614554178,2.95953618552579,2.9599760095961614,2.9604158336665334,2.9608556577369054,2.961295481807277,2.961735305877649,2.962175129948021,2.9626149540183926,2.9630547780887646,2.963494602159136,2.963934426229508,2.96437425029988,2.964814074370252,2.965253898440624,2.9656937225109954,2.9661335465813674,2.9665733706517394,2.967013194722111,2.967453018792483,2.967892842862855,2.9683326669332266,2.9687724910035986,2.96921231507397,2.9696521391443422,2.9700919632147142,2.970531787285086,2.970971611355458,2.97141143542583,2.9718512594962014,2.9722910835665735,2.972730907636945,2.973170731707317,2.973610555777689,2.9740503798480606,2.9744902039184327,2.9749300279888047,2.9753698520591763,2.9758096761295483,2.97624950019992,2.976689324270292,2.977129148340664,2.9775689724110355,2.9780087964814075,2.9784486205517795,2.978888444622151,2.979328268692523,2.9797680927628947,2.9802079168332667,2.9806477409036387,2.9810875649740103,2.9815273890443823,2.981967213114754,2.982407037185126,2.982846861255498,2.9832866853258695,2.9837265093962415,2.9841663334666135,2.984606157536985,2.985045981607357,2.9854858056777287,2.9859256297481007,2.9863654538184727,2.9868052778888443,2.9872451019592163,2.9876849260295884,2.98812475009996,2.988564574170332,2.9890043982407035,2.9894442223110755,2.9898840463814476,2.990323870451819,2.990763694522191,2.991203518592563,2.9916433426629347,2.9920831667333068,2.9925229908036783,2.9929628148740504,2.9934026389444224,2.993842463014794,2.994282287085166,2.994722111155538,2.9951619352259096,2.9956017592962816,2.996041583366653,2.996481407437025,2.996921231507397,2.9973610555777688,2.997800879648141,2.998240703718513,2.9986805277888844,2.9991203518592564,2.999560175929628,3.0]}

},{}],58:[function(require,module,exports){
module.exports={"expected":[10.0,9.921955108642578,9.845708847045898,9.771194458007812,9.698346138000488,9.627103805541992,9.557408332824707,9.489204406738281,9.422441482543945,9.357067108154297,9.293034553527832,9.230299949645996,9.168818473815918,9.108549118041992,9.049453735351562,8.99149227142334,8.934632301330566,8.878835678100586,8.82407283782959,8.770310401916504,8.71751880645752,8.665669441223145,8.614734649658203,8.564687728881836,8.515501976013184,8.467154502868652,8.419621467590332,8.372879981994629,8.326908111572266,8.281685829162598,8.237192153930664,8.193408012390137,8.150314331054688,8.107893943786621,8.066128730773926,8.025002479553223,7.984499454498291,7.944602966308594,7.905298709869385,7.866572380065918,7.8284101486206055,7.790796756744385,7.753720760345459,7.717169761657715,7.681130886077881,7.6455912590026855,7.610540390014648,7.5759687423706055,7.541862487792969,7.508213520050049,7.475010395050049,7.442244529724121,7.409904956817627,7.377983570098877,7.346472263336182,7.3153605461120605,7.284640789031982,7.254304885864258,7.224344253540039,7.194752216339111,7.165521621704102,7.136643409729004,7.10811185836792,7.079920291900635,7.052061080932617,7.024527549743652,6.997314453125,6.970416069030762,6.94382381439209,6.917534828186035,6.891541957855225,6.865839958190918,6.840423583984375,6.815287113189697,6.790426254272461,6.765834331512451,6.741508483886719,6.717443466186523,6.693633556365967,6.670075416564941,6.646764278411865,6.623695373535156,6.600865840911865,6.578270435333252,6.555905342102051,6.533766269683838,6.511850833892822,6.490154266357422,6.468673229217529,6.447404384613037,6.4263434410095215,6.405487537384033,6.384833335876465,6.364377975463867,6.344117641448975,6.324049949645996,6.304171085357666,6.284478187561035,6.264969825744629,6.245641231536865,6.226490497589111,6.207514762878418,6.188712120056152,6.170078277587891,6.151612758636475,6.1333112716674805,6.115172386169434,6.097193717956543,6.079372882843018,6.06170654296875,6.044194221496582,6.026832580566406,6.009619235992432,5.992553234100342,5.975631237030029,5.9588518142700195,5.94221305847168,5.925713062286377,5.9093499183654785,5.893120765686035,5.877025127410889,5.861061096191406,5.845225811004639,5.829518795013428,5.813937187194824,5.798480033874512,5.783145427703857,5.767931938171387,5.752838134765625,5.737861633300781,5.723001956939697,5.708256721496582,5.693624973297119,5.679105281829834,5.664696216583252,5.650396823883057,5.636204242706299,5.62211799621582,5.608137607574463,5.5942606925964355,5.580485820770264,5.566812992095947,5.553239822387695,5.539765357971191,5.526388645172119,5.513107776641846,5.499922752380371,5.4868316650390625,5.47383451461792,5.460928440093994,5.448112964630127,5.43538761138916,5.422751426696777,5.410202503204346,5.397740364074707,5.385364055633545,5.373072624206543,5.360864639282227,5.3487396240234375,5.336696147918701,5.324734210968018,5.312852382659912,5.301049709320068,5.289324760437012,5.277677536010742,5.266107082366943,5.254611968994141,5.24319314956665,5.231846809387207,5.220574855804443,5.209374904632568,5.198246955871582,5.187190055847168,5.17620325088501,5.165286064147949,5.15443754196167,5.143657207489014,5.132944583892822,5.122297763824463,5.111717224121094,5.101202487945557,5.090752124786377,5.0803656578063965,5.070042133331299,5.059782028198242,5.0495829582214355,5.039446830749512,5.029370307922363,5.019353866577148,5.009397983551025,4.999500274658203,4.98966121673584,4.979879856109619,4.970156669616699,4.960489273071289,4.950878143310547,4.9413228034973145,4.931822776794434,4.922377586364746,4.912985801696777,4.903648376464844,4.894362926483154,4.885130882263184,4.875950813293457,4.866821765899658,4.857744216918945,4.848717212677002,4.83974027633667,4.830812931060791,4.821934700012207,4.813105583190918,4.804324626922607,4.795591831207275,4.7869062423706055,4.778267860412598,4.7696757316589355,4.761129856109619,4.75262975692749,4.744175434112549,4.7357659339904785,4.727400779724121,4.719079494476318,4.71080207824707,4.702568531036377,4.694377899169922,4.686229705810547,4.678123950958252,4.670060157775879,4.6620378494262695,4.654056549072266,4.646116256713867,4.638216495513916,4.630357265472412,4.622537136077881,4.6147565841674805,4.607015609741211,4.599313259124756,4.591649532318115,4.584023952484131,4.5764360427856445,4.568885803222656,4.561372756958008,4.553896903991699,4.546457767486572,4.5390543937683105,4.5316877365112305,4.524355888366699,4.517060279846191,4.509799957275391,4.5025739669799805,4.495383262634277,4.488225936889648,4.481103420257568,4.474014759063721,4.466959476470947,4.45993709564209,4.452948093414307,4.4459919929504395,4.43906831741333,4.43217658996582,4.425317287445068,4.418489456176758,4.411693096160889,4.404928207397461,4.398194313049316,4.391490936279297,4.384818077087402,4.378175735473633,4.37156343460083,4.364981174468994,4.358428478240967,4.351905345916748,4.3454108238220215,4.3389458656311035,4.332509517669678,4.326101779937744,4.319722652435303,4.313371181488037,4.3070478439331055,4.30075216293335,4.294483661651611,4.288243293762207,4.282029628753662,4.275843143463135,4.269682884216309,4.263549327850342,4.257442474365234,4.25136137008667,4.245306491851807,4.239277362823486,4.233273983001709,4.227295875549316,4.221343040466309,4.215415000915527,4.209512233734131,4.203634262084961,4.197780609130859,4.191951751708984,4.1861467361450195,4.180365562438965,4.17460823059082,4.168875217437744,4.16316556930542,4.157479286193848,4.151816368103027,4.146175861358643,4.14055871963501,4.134964466094971,4.129392623901367,4.123843669891357,4.118316650390625,4.11281156539917,4.10732889175415,4.101868152618408,4.096428871154785,4.0910115242004395,4.085615158081055,4.080240249633789,4.074886798858643,4.069553852081299,4.064241886138916,4.058950901031494,4.053680419921875,4.048430442810059,4.043200969696045,4.037991523742676,4.032802104949951,4.027632713317871,4.0224833488464355,4.017353534698486,4.012243270874023,4.007152080535889,4.002080917358398,3.9970285892486572,3.991995096206665,3.98698091506958,3.981985569000244,3.9770090579986572,3.972050905227661,3.967111587524414,3.9621899127960205,3.957287311553955,3.9524025917053223,3.9475362300872803,3.9426870346069336,3.937856435775757,3.9330432415008545,3.9282472133636475,3.923469305038452,3.918708562850952,3.9139652252197266,3.909238815307617,3.9045298099517822,3.8998374938964844,3.8951618671417236,3.890503406524658,3.885861873626709,3.8812365531921387,3.8766279220581055,3.872035503387451,3.867459297180176,3.8628990650177,3.8583550453186035,3.853827476501465,3.8493154048919678,3.8448190689086914,3.8403384685516357,3.83587384223938,3.8314244747161865,3.826990842819214,3.8225722312927246,3.818169116973877,3.8137810230255127,3.809408187866211,3.8050501346588135,3.8007071018218994,3.7963788509368896,3.792065382003784,3.787766695022583,3.783482551574707,3.779212713241577,3.7749576568603516,3.770717144012451,3.7664904594421387,3.762277841567993,3.7580792903900146,3.7538950443267822,3.749724864959717,3.745568037033081,3.7414255142211914,3.7372965812683105,3.7331809997558594,3.729079484939575,3.7249910831451416,3.720916509628296,3.7168545722961426,3.712806463241577,3.708771228790283,3.70474910736084,3.700740337371826,3.696744441986084,3.6927614212036133,3.688791036605835,3.6848337650299072,3.680889368057251,3.676957130432129,3.6730380058288574,3.669131278991699,3.665236711502075,3.6613545417785645,3.657484531402588,3.6536269187927246,3.6497817039489746,3.6459484100341797,3.64212703704834,3.638317584991455,3.6345205307006836,3.630734920501709,3.6269614696502686,3.623199462890625,3.6194493770599365,3.615710735321045,3.6119840145111084,3.6082684993743896,3.6045639514923096,3.6008713245391846,3.5971901416778564,3.593519926071167,3.5898611545562744,3.5862131118774414,3.5825767517089844,3.578951120376587,3.575336456298828,3.571732759475708,3.5681400299072266,3.5645580291748047,3.5609869956970215,3.5574264526367188,3.5538763999938965,3.550337076187134,3.5468084812164307,3.543290376663208,3.5397822856903076,3.536284923553467,3.5327980518341064,3.5293211936950684,3.525855302810669,3.5223989486694336,3.5189528465270996,3.515516519546509,3.5120904445648193,3.5086748600006104,3.5052685737609863,3.5018723011016846,3.498486042022705,3.4951095581054688,3.4917426109313965,3.4883859157562256,3.4850385189056396,3.481700897216797,3.478372812271118,3.4750537872314453,3.471745014190674,3.468445062637329,3.4651548862457275,3.461873769760132,3.4586021900177,3.4553394317626953,3.4520864486694336,3.4488422870635986,3.4456074237823486,3.4423818588256836,3.439164876937866,3.435957193374634,3.432758092880249,3.4295685291290283,3.426387310028076,3.423215389251709,3.4200518131256104,3.4168970584869385,3.4137511253356934,3.410614013671875,3.4074854850769043,3.404365301132202,3.4012539386749268,3.39815092086792,3.3950564861297607,3.39197039604187,3.388892650604248,3.3858234882354736,3.3827624320983887,3.3797099590301514,3.3766651153564453,3.373629093170166,3.370601177215576,3.367581367492676,3.3645691871643066,3.3615660667419434,3.358570098876953,3.3555824756622314,3.352602481842041,3.349630832672119,3.3466668128967285,3.3437108993530273,3.3407626152038574,3.337822198867798,3.3348891735076904,3.3319642543792725,3.3290469646453857,3.3261373043060303,3.323235511779785,3.320340871810913,3.3174540996551514,3.3145744800567627,3.3117024898529053,3.308838129043579,3.305981159210205,3.303131580352783,3.3002891540527344,3.2974541187286377,3.294626474380493,3.2918059825897217,3.2889931201934814,3.286186695098877,3.2833878993988037,3.2805964946746826,3.2778117656707764,3.275034189224243,3.272264003753662,3.269500494003296,3.2667438983917236,3.2639944553375244,3.261251926422119,3.258516311645508,3.2557873725891113,3.253065586090088,3.2503504753112793,3.2476422786712646,3.244940757751465,3.242245674133301,3.2395577430725098,3.2368760108947754,3.234201431274414,3.2315332889556885,3.2288713455200195,3.2262165546417236,3.2235679626464844,3.22092604637146,3.2182905673980713,3.2156615257263184,3.2130391597747803,3.2104225158691406,3.207813024520874,3.205209493637085,3.2026124000549316,3.200021266937256,3.197437047958374,3.1948587894439697,3.192286491394043,3.189720630645752,3.1871607303619385,3.18460750579834,3.1820600032806396,3.179518938064575,3.17698335647583,3.1744542121887207,3.171931028366089,3.1694140434265137,3.166903018951416,3.164397716522217,3.161898374557495,3.159404993057251,3.1569175720214844,3.154435873031616,3.1519601345062256,3.1494903564453125,3.147026300430298,3.1445679664611816,3.142115354537964,3.1396682262420654,3.1372270584106445,3.134791851043701,3.132361650466919,3.1299376487731934,3.127518892288208,3.1251060962677,3.1226987838745117,3.1202969551086426,3.1179006099700928,3.1155099868774414,3.1131248474121094,3.1107449531555176,3.108370304107666,3.106001377105713,3.103637933731079,3.1012797355651855,3.0989270210266113,3.0965793132781982,3.0942373275756836,3.0919008255004883,3.089569091796875,3.08724308013916,3.0849218368530273,3.082606077194214,3.0802955627441406,3.0779900550842285,3.0756897926330566,3.073394775390625,3.0711050033569336,3.068819999694824,3.066540479660034,3.064265727996826,3.0619962215423584,3.0597314834594727,3.057471990585327,3.0552172660827637,3.0529680252075195,3.0507233142852783,3.048483371734619,3.0462489128112793,3.0440189838409424,3.0417940616607666,3.039573907852173,3.0373587608337402,3.0351481437683105,3.032942771911621,3.0307421684265137,3.028546094894409,3.026355028152466,3.0241684913635254,3.021986722946167,3.0198097229003906,3.0176374912261963,3.015469789505005,3.0133066177368164,3.011148452758789,3.0089948177337646,3.006845474243164,3.0047011375427246,3.002561092376709,3.0004258155822754,2.998295307159424,2.996169090270996,2.994047164916992,2.9919300079345703,2.9898171424865723,2.987708806991577,2.985605001449585,2.9835057258605957,2.9814107418060303,2.9793200492858887,2.977234125137329,2.975152015686035,2.9730749130249023,2.9710018634796143,2.968932867050171,2.9668686389923096,2.964808464050293,2.9627525806427,2.9607009887695312,2.958653688430786,2.956610679626465,2.9545717239379883,2.9525370597839355,2.9505064487457275,2.9484803676605225,2.946458339691162,2.9444403648376465,2.9424264430999756,2.9404168128967285,2.938411235809326,2.9364099502563477,2.9344124794006348,2.9324190616607666,2.930429697036743,2.9284446239471436,2.9264633655548096,2.9244863986968994,2.922513246536255,2.920544147491455,2.918578863143921,2.9166176319122314,2.9146602153778076,2.9127068519592285,2.910757541656494,2.9088120460510254,2.9068703651428223,2.9049324989318848,2.902998685836792,2.901068925857544,2.8991425037384033,2.8972203731536865,2.895301580429077,2.8933868408203125,2.8914761543273926,2.889569044113159,2.8876655101776123,2.88576602935791,2.8838701248168945,2.8819780349731445,2.880089521408081,2.878204584121704,2.876323938369751,2.8744466304779053,2.872572898864746,2.8707029819488525,2.8688364028930664,2.866973638534546,2.865114688873291,2.8632590770721436,2.8614072799682617,2.8595588207244873,2.8577141761779785,2.8558731079101562,2.8540353775024414,2.852201461791992,2.8503708839416504,2.848543882369995,2.8467202186584473,2.844900369644165,2.8430838584899902,2.841270923614502,2.839461088180542,2.8376550674438477,2.8358523845672607,2.8340530395507812,2.8322572708129883,2.830465078353882,2.8286759853363037,2.826890468597412,2.825108051300049,2.823329210281372,2.8215537071228027,2.819781541824341,2.8180127143859863,2.81624698638916,2.8144848346710205,2.8127260208129883,2.8109703063964844,2.809217929840088,2.807469129562378,2.805723190307617,2.803980588912964,2.802241325378418,2.8005051612854004,2.7987723350524902,2.7970428466796875,2.795316457748413,2.793593168258667,2.7918732166290283,2.790156126022339,2.788442373275757,2.7867319583892822,2.785024404525757,2.783320188522339,2.781619071960449,2.779921054840088,2.778226137161255,2.776534080505371,2.774845600128174,2.7731597423553467,2.771477222442627,2.7697978019714355,2.7681212425231934,2.7664477825164795,2.764777183532715,2.7631099224090576,2.7614455223083496,2.759783983230591,2.7581255435943604,2.756470203399658,2.7548177242279053,2.7531685829162598,2.7515220642089844,2.749878406524658,2.7482378482818604,2.7466001510620117,2.7449653148651123,2.743333578109741,2.7417047023773193,2.7400784492492676,2.7384555339813232,2.736835241317749,2.735217809677124,2.7336032390594482,2.7319915294647217,2.7303826808929443,2.728776693344116,2.7271735668182373,2.7255733013153076,2.723975658416748,2.7223808765411377,2.7207891941070557,2.7191998958587646,2.717613697052002,2.7160298824310303,2.714449405670166,2.7128713130950928,2.7112958431243896,2.709723472595215,2.708153486251831,2.7065863609313965,2.7050223350524902,2.703460454940796,2.70190167427063,2.700345039367676,2.69879150390625,2.6972405910491943,2.695692539215088,2.6941468715667725,2.692603826522827,2.691063642501831,2.689526081085205,2.687991142272949,2.6864585876464844,2.6849288940429688,2.683401584625244,2.6818771362304688,2.6803553104400635,2.67883563041687,2.677319049835205,2.675804853439331,2.674293279647827,2.6727840900421143,2.6712777614593506,2.669773817062378,2.6682722568511963,2.6667733192443848,2.6652770042419434,2.663783073425293,2.6622915267944336,2.6608028411865234,2.659316301345825,2.657832622528076,2.656351089477539,2.654872417449951,2.653395891189575,2.6519217491149902,2.6504502296447754,2.6489810943603516,2.647514581680298,2.646050214767456,2.6445884704589844,2.6431288719177246,2.641672134399414,2.6402175426483154,2.638765335083008,2.637315511703491,2.6358680725097656,2.63442325592041,2.6329805850982666,2.631540298461914,2.6301023960113525,2.628666877746582,2.6272337436676025,2.625802993774414,2.6243743896484375,2.622948169708252,2.6215243339538574,2.620102643966675,2.618683338165283,2.6172664165496826,2.615851879119873,2.6144397258758545,2.6130294799804688,2.611621618270874,2.6102163791656494,2.6088130474090576,2.6074118614196777,2.606013298034668,2.60461688041687,2.603222608566284,2.60183048248291,2.600440740585327,2.599053144454956,2.597667932510376,2.596284866333008,2.5949039459228516,2.5935251712799072,2.592148780822754,2.5907742977142334,2.589402198791504,2.5880322456359863,2.5866644382476807,2.585299015045166,2.583935499191284,2.5825741291046143,2.5812149047851562,2.57985782623291,2.578503131866455,2.577150344848633,2.5757997035980225,2.574451208114624,2.5731048583984375,2.571760654449463,2.570418357849121,2.5690784454345703,2.5677404403686523,2.566404342651367,2.565070629119873,2.563739061355591,2.5624094009399414,2.561081886291504,2.559756278991699,2.5584328174591064,2.5571115016937256,2.5557920932769775,2.5544745922088623,2.553159236907959,2.5518462657928467,2.550534963607788,2.5492255687713623,2.5479183197021484,2.5466132164001465,2.5453100204467773,2.54400897026062,2.5427095890045166,2.541412591934204,2.5401172637939453,2.5388238430023193,2.5375328063964844,2.536243438720703,2.5349559783935547,2.533670663833618,2.5323872566223145,2.5311057567596436,2.5298264026641846,2.5285487174987793,2.527272939682007,2.5259993076324463,2.5247273445129395,2.5234575271606445,2.5221893787384033,2.520923376083374,2.5196590423583984,2.518397092819214,2.517136573791504,2.5158779621124268,2.5146214962005615,2.51336669921875,2.5121140480041504,2.5108630657196045,2.5096137523651123,2.508366584777832,2.5071210861206055,2.505877733230591,2.504635810852051,2.5033960342407227,2.5021581649780273,2.5009219646453857,2.499687671661377,2.498455286026001,2.4972245693206787,2.4959957599639893,2.4947686195373535,2.4935433864593506,2.4923198223114014,2.491098403930664,2.4898784160614014,2.4886603355407715,2.4874441623687744,2.486229419708252,2.4850168228149414,2.4838058948516846,2.4825966358184814,2.481389284133911,2.4801836013793945,2.4789798259735107,2.4777777194976807,2.4765772819519043,2.4753785133361816,2.474181652069092,2.4729864597320557,2.4717929363250732,2.4706013202667236,2.4694113731384277,2.4682228565216064,2.467036485671997,2.4658517837524414,2.4646685123443604,2.463486909866333,2.4623072147369385,2.4611291885375977,2.4599528312683105,2.458778142929077,2.4576051235198975,2.4564337730407715,2.455264091491699,2.4540960788726807,2.452929735183716,2.451765298843384,2.4506022930145264,2.4494409561157227,2.4482810497283936,2.4471230506896973,2.4459664821624756,2.4448118209838867,2.4436585903167725,2.442507028579712,2.441357374191284,2.440208911895752,2.4390623569488525,2.437917470932007,2.4367740154266357,2.4356319904327393,2.4344918727874756,2.4333534240722656,2.4322164058685303,2.4310808181762695,2.4299471378326416,2.4288148880004883,2.4276843070983887,2.4265549182891846,2.4254276752471924,2.4243016242980957,2.4231772422790527,2.4220542907714844,2.420933246612549,2.419813394546509,2.4186952114105225,2.41757869720459,2.416463613510132,2.4153499603271484,2.414238214492798,2.4131276607513428,2.4120190143585205,2.4109115600585938,2.4098055362701416,2.4087014198303223,2.4075984954833984,2.4064972400665283,2.405397415161133,2.404299020767212,2.4032022953033447,2.402107000350952,2.4010133743286133,2.39992094039917,2.3988301753997803,2.3977408409118652,2.396652936935425,2.395566463470459,2.394481658935547,2.3933982849121094,2.3923163414001465,2.391235828399658,2.3901567459106445,2.3890793323516846,2.38800311088562,2.3869285583496094,2.3858554363250732,2.3847835063934326,2.3837132453918457,2.3826444149017334,2.3815770149230957,2.3805110454559326,2.379446506500244,2.3783833980560303,2.377321481704712,2.3762614727020264,2.3752024173736572,2.374145030975342,2.373089075088501,2.3720343112945557,2.370980978012085,2.369929313659668,2.3688788414001465,2.3678297996520996,2.3667819499969482,2.3657357692718506,2.3646910190582275,2.3636474609375,2.362605333328247,2.3615646362304688,2.360525131225586,2.3594870567321777,2.3584506511688232,2.3574154376983643,2.356381416320801,2.355348825454712,2.3543179035186768,2.353287935256958,2.352259635925293,2.3512322902679443,2.3502066135406494,2.34918212890625,2.348159074783325,2.347137212753296,2.346116781234741,2.345097780227661,2.3440799713134766,2.3430635929107666,2.342048168182373,2.3410346508026123,2.340022087097168,2.3390109539031982,2.338000774383545,2.3369925022125244,2.3359851837158203,2.3349790573120117,2.3339743614196777,2.3329710960388184,2.3319690227508545,2.330968141555786,2.3299686908721924,2.328970432281494,2.3279736042022705,2.3269779682159424,2.3259835243225098,2.3249905109405518,2.3239986896514893,2.3230080604553223,2.32201886177063,2.321030855178833,2.3200440406799316,2.319058418273926,2.3180742263793945,2.317091226577759,2.3161094188690186,2.315128803253174,2.3141496181488037,2.313171625137329,2.31219482421875,2.3112192153930664,2.3102450370788574,2.309271812438965,2.308300018310547,2.3073291778564453,2.3063600063323975,2.305391788482666,2.304424524307251,2.3034589290618896,2.302494525909424,2.3015310764312744,2.3005690574645996,2.299607992172241,2.2986483573913574,2.297689914703369,2.2967324256896973,2.2957763671875,2.2948215007781982,2.293867826461792,2.2929153442382812,2.291963815689087,2.291013479232788,2.290064573287964,2.289116859436035,2.288170099258423,2.287224769592285,2.286280393600464,2.285337209701538,2.284395217895508,2.283454418182373,2.282514810562134,2.28157639503479,2.2806389331817627,2.279702663421631,2.2787678241729736,2.277834177017212,2.2769012451171875,2.2759697437286377,2.2750391960144043,2.2741100788116455,2.273181915283203,2.272254705429077,2.271328926086426,2.270404100418091,2.2694804668426514,2.2685580253601074,2.26763653755188,2.266716241836548,2.2657971382141113,2.2648792266845703,2.2639622688293457,2.2630465030670166,2.262131929397583,2.261218309402466,2.260305643081665,2.259394407272339,2.258484125137329,2.257575035095215,2.256666898727417,2.2557599544525146,2.254854202270508,2.2539491653442383,2.2530455589294434,2.252142906188965,2.251241445541382,2.2503409385681152,2.249441623687744,2.2485432624816895,2.2476460933685303,2.2467498779296875,2.2458548545837402,2.2449610233306885,2.244067907333374,2.243175983428955,2.2422852516174316,2.2413954734802246,2.240506649017334,2.239619255065918,2.2387325763702393,2.237847089767456,2.2369625568389893,2.236079216003418,2.235196828842163,2.2343153953552246,2.2334351539611816,2.232555866241455,2.231677770614624,2.2308006286621094,2.229924440383911,2.2290492057800293,2.228175163269043,2.227302074432373,2.2264301776885986,2.2255589962005615,2.22468900680542,2.2238199710845947,2.222952127456665,2.2220852375030518,2.221219062805176,2.2203543186187744,2.2194902896881104,2.218627452850342,2.2177655696868896,2.216904640197754,2.2160446643829346,2.2151858806610107,2.2143280506134033,2.2134711742401123,2.2126152515411377,2.2117602825164795,2.2109062671661377,2.2100534439086914,2.2092015743255615,2.208350658416748,2.207500696182251,2.206651449203491,2.205803632736206,2.204956531524658,2.2041103839874268,2.203265428543091,2.202421188354492,2.201578140258789,2.2007360458374023,2.199894666671753,2.199054479598999,2.1982152462005615,2.1973767280578613,2.1965394020080566,2.1957030296325684,2.1948676109313965,2.194033145904541,2.193199396133423,2.1923668384552,2.191535234451294,2.190704584121704,2.1898746490478516,2.1890459060668945,2.188218116760254,2.1873912811279297,2.1865651607513428,2.1857399940490723,2.184915781021118,2.1840927600860596,2.1832704544067383,2.1824491024017334,2.181628704071045,2.1808090209960938,2.179990530014038,2.1791727542877197,2.178356170654297,2.1775403022766113,2.176725387573242,2.1759114265441895,2.175098180770874,2.174286127090454,2.1734747886657715,2.1726644039154053,2.1718549728393555,2.171046495437622,2.170238971710205,2.1694321632385254,2.168626308441162,2.1678214073181152,2.1670172214508057,2.1662142276763916,2.165411949157715,2.1646106243133545,2.1638100147247314,2.163010358810425,2.1622116565704346,2.1614139080047607,2.1606171131134033,2.159821033477783,2.1590256690979004,2.158231496810913,2.157438039779663,2.1566455364227295,2.155853748321533,2.1550629138946533,2.15427303314209,2.1534838676452637,2.152695655822754,2.1519083976745605,2.1511218547821045,2.150336265563965,2.1495513916015625,2.1487674713134766,2.147984504699707,2.147202491760254,2.146421194076538,2.1456406116485596,2.1448609828948975,2.1440823078155518,2.1433043479919434,2.1425273418426514,2.1417508125305176,2.1409754753112793,2.1402008533477783,2.1394271850585938,2.1386542320251465,2.1378824710845947,2.137111186981201,2.136340856552124,2.135571241378784,2.1348025798797607,2.1340346336364746,2.133267641067505,2.1325013637542725,2.1317360401153564,2.1309714317321777,2.1302075386047363,2.1294445991516113,2.1286826133728027,2.1279213428497314,2.1271610260009766,2.12640118598938,2.1256422996520996,2.1248843669891357,2.124127149581909,2.12337064743042,2.122615098953247,2.1218602657318115,2.1211061477661133,2.1203529834747314,2.119600534439087,2.118849039077759,2.118098258972168,2.1173481941223145,2.1165990829467773,2.1158504486083984,2.115103006362915,2.11435604095459,2.11361026763916,2.1128647327423096,2.1121203899383545,2.1113767623901367,2.1106338500976562,2.109891891479492,2.1091504096984863,2.108409881591797,2.107670307159424,2.106931209564209,2.1061930656433105,2.1054556369781494,2.1047189235687256,2.103982925415039,2.103247880935669,2.102513551712036,2.1017799377441406,2.1010472774505615,2.1003150939941406,2.099583864212036,2.098853349685669,2.098123550415039,2.0973947048187256,2.0966663360595703,2.0959389209747314,2.09521222114563,2.0944862365722656,2.0937609672546387,2.093036651611328,2.092312812805176,2.09158992767334,2.090867757797241,2.09014630317688,2.089425563812256,2.0887057781219482,2.087986469268799,2.087268114089966,2.086550235748291,2.0858333110809326,2.0851168632507324,2.0844013690948486,2.083686590194702,2.082972526550293,2.082259178161621,2.0815467834472656,2.0808348655700684,2.0801236629486084,2.079413414001465,2.0787036418914795,2.0779948234558105,2.0772864818573,2.0765790939331055,2.0758721828460693,2.0751662254333496,2.074460983276367,2.073756217956543,2.073052406311035,2.0723493099212646,2.0716466903686523,2.0709450244903564,2.070244073867798,2.0695436000823975,2.0688440799713135,2.0681450366973877,2.0674469470977783,2.0667495727539062,2.0660526752471924,2.065356492996216,2.0646612644195557,2.0639665126800537,2.063272476196289,2.062579393386841,2.061886787414551,2.061194896697998,2.0605037212371826,2.0598130226135254,2.0591232776641846,2.058434247970581,2.057745933532715,2.057058095932007,2.056370973587036,2.055684804916382,2.0549991130828857,2.054314136505127,2.0536298751831055,2.0529463291168213,2.0522632598876953,2.0515811443328857,2.0508995056152344,2.0502185821533203,2.0495386123657227,2.048858880996704,2.048180103302002,2.047502040863037,2.0468244552612305,2.046147584915161,2.045471429824829,2.0447959899902344,2.044121026992798,2.0434470176696777,2.042773485183716,2.042100667953491,2.041428565979004,2.040756940841675,2.040086269378662,2.0394160747528076,2.0387465953826904,2.0380775928497314,2.037409543991089,2.0367419719696045,2.0360751152038574,2.0354089736938477,2.034743309020996,2.034078359603882,2.033414125442505,2.032750368118286,2.032087564468384,2.0314249992370605,2.030763626098633,2.030102491378784,2.029442071914673,2.028782367706299,2.028123140335083,2.0274646282196045,2.0268070697784424,2.0261497497558594,2.0254931449890137,2.0248372554779053,2.024182081222534,2.0235273838043213,2.0228734016418457,2.0222201347351074,2.0215673446655273,2.0209152698516846,2.020263671875,2.019613027572632,2.018962860107422,2.01831316947937,2.0176644325256348,2.0170161724090576,2.0163683891296387,2.015721321105957,2.0150747299194336,2.0144288539886475,2.0137836933135986,2.013139247894287,2.0124950408935547,2.0118517875671387,2.01120924949646,2.0105669498443604,2.009925603866577,2.009284496307373,2.0086443424224854,2.008004665374756,2.0073654651641846,2.0067272186279297,2.006089210510254,2.0054519176483154,2.0048153400421143,2.0041794776916504,2.0035440921783447,2.0029091835021973,2.002274990081787,2.0016415119171143,2.0010085105895996,2.000375986099243,1.999744176864624,1.9991129636764526,1.9984822273254395,1.9978522062301636,1.997222900390625,1.9965940713882446,1.9959657192230225,1.9953380823135376,1.99471116065979,1.9940847158432007,1.9934589862823486,1.9928336143493652,1.9922089576721191,1.9915847778320312,1.9909613132476807,1.9903382062911987,1.9897160530090332,1.9890942573547363,1.9884730577468872,1.9878524541854858,1.9872324466705322,1.9866129159927368,1.9859942197799683,1.9853758811950684,1.9847581386566162,1.9841409921646118,1.9835245609283447,1.9829084873199463,1.9822932481765747,1.9816783666610718,1.9810640811920166,1.9804502725601196,1.9798372983932495,1.9792248010635376,1.9786127805709839,1.978001356124878,1.9773904085159302,1.9767801761627197,1.976170301437378,1.9755613803863525,1.9749528169631958,1.9743448495864868,1.973737120628357,1.9731303453445435,1.9725240468978882,1.9719182252883911,1.9713129997253418,1.9707083702087402,1.9701042175292969,1.9695005416870117,1.9688975811004639,1.9682950973510742,1.9676933288574219,1.9670917987823486,1.9664909839630127,1.965890884399414,1.9652910232543945,1.9646919965744019,1.9640934467315674,1.9634953737258911,1.9628978967666626,1.9623010158538818,1.9617043733596802,1.961108684539795,1.9605132341384888,1.95991849899292,1.9593243598937988,1.9587304592132568,1.9581375122070312,1.9575445652008057,1.956952691078186,1.9563610553741455,1.9557701349258423,1.9551795721054077,1.954589605331421,1.9539999961853027,1.9534112215042114,1.9528228044509888,1.9522351026535034,1.9516476392745972,1.9510608911514282,1.9504748582839966,1.949889063835144,1.9493038654327393,1.9487192630767822,1.948135256767273,1.9475516080856323,1.94696843624115,1.9463858604431152,1.9458039999008179,1.9452223777770996,1.944641351699829,1.9440608024597168,1.9434809684753418,1.942901372909546,1.9423226118087769,1.9417442083358765,1.9411664009094238,1.9405889511108398,1.9400122165679932,1.9394358396530151,1.9388600587844849,1.9382846355438232,1.937709927558899,1.9371356964111328,1.9365618228912354,1.935988426208496,1.9354158639907837,1.9348435401916504,1.9342718124389648,1.933700680732727,1.9331297874450684,1.9325597286224365,1.9319900274276733,1.9314206838607788,1.9308520555496216,1.930283784866333,1.9297161102294922,1.9291489124298096,1.9285820722579956,1.9280160665512085,1.927450180053711,1.9268850088119507,1.9263203144073486,1.9257560968399048,1.9251923561096191,1.9246292114257812,1.9240663051605225,1.9235042333602905,1.9229422807693481,1.9223811626434326,1.9218202829360962,1.921260118484497,1.9207004308700562,1.9201411008834839,1.9195822477340698,1.919023871421814,1.9184660911560059,1.917908787727356,1.9173518419265747,1.9167954921722412,1.916239619255066,1.9156842231750488,1.91512930393219,1.9145747423171997,1.9140208959579468,1.913467288017273,1.9129143953323364,1.9123618602752686,1.9118099212646484,1.9112582206726074,1.9107071161270142,1.910156488418579,1.9096064567565918,1.9090566635131836,1.9085074663162231,1.907958745956421,1.9074106216430664,1.9068628549575806,1.906315565109253,1.9057687520980835,1.9052222967147827,1.9046765565872192,1.9041309356689453,1.9035860300064087,1.9030414819717407,1.9024975299835205,1.901953935623169,1.9014110565185547,1.90086829662323,1.900326132774353,1.8997843265533447,1.8992432355880737,1.8987025022506714,1.8981622457504272,1.8976222276687622,1.897083044052124,1.8965438604354858,1.8960055112838745,1.8954674005508423,1.8949300050735474,1.894392728805542,1.8938562870025635,1.8933199644088745,1.8927842378616333,1.8922491073608398,1.8917142152786255,1.8911800384521484,1.890645980834961,1.8901126384735107,1.8895795345306396,1.8890470266342163,1.888514757156372,1.8879833221435547,1.8874520063400269,1.8869214057922363,1.8863909244537354,1.8858610391616821,1.885331630706787,1.8848025798797607,1.8842740058898926,1.8837461471557617,1.8832184076309204,1.8826913833618164,1.8821643590927124,1.8816380500793457,1.8811120986938477,1.880586862564087,1.8800617456436157,1.8795373439788818,1.879013180732727,1.8784894943237305,1.877966284751892,1.8774434328079224,1.8769210577011108,1.876399278640747,1.8758777379989624,1.875356674194336,1.8748360872268677,1.8743157386779785,1.8737962245941162,1.873276710510254,1.872757911682129,1.8722394704818726,1.8717213869094849,1.8712036609649658,1.870686650276184,1.870169758796692,1.8696534633636475,1.8691375255584717,1.868622064590454,1.8681070804595947,1.867592453956604,1.8670783042907715,1.8665645122528076,1.8660510778427124,1.8655383586883545,1.8650259971618652,1.864513874053955,1.8640021085739136,1.8634909391403198,1.8629800081253052,1.8624696731567383,1.86195969581604,1.8614500761032104,1.8609411716461182,1.8604322671890259,1.859924077987671,1.859416127204895,1.8589086532592773,1.8584015369415283,1.857895016670227,1.8573886156082153,1.856882929801941,1.8563774824142456,1.8558725118637085,1.8553681373596191,1.8548638820648193,1.8543601036071777,1.8538566827774048,1.85335373878479,1.8528512716293335,1.8523492813110352,1.851847529411316,1.8513462543487549,1.850845456123352,1.8503448963165283,1.8498448133468628,1.849345088005066,1.8488457202911377,1.8483469486236572,1.8478485345840454,1.8473504781723022,1.8468528985977173,1.8463555574417114,1.8458586931228638,1.8453621864318848,1.8448662757873535,1.8443706035614014,1.8438751697540283,1.8433804512023926,1.842885971069336,1.8423919677734375,1.8418983221054077,1.8414050340652466,1.8409122228622437,1.8404196500778198,1.8399275541305542,1.8394359350204468,1.8389447927474976,1.838453769683838,1.837963342666626,1.8374731540679932,1.8369834423065186,1.8364942073822021,1.8360052108764648,1.8355168104171753,1.8350285291671753,1.8345407247543335,1.83405339717865,1.8335665464401245,1.8330799341201782,1.832593560218811,1.8321077823638916,1.8316223621368408,1.8311374187469482,1.8306527137756348,1.83016836643219,1.8296843767166138,1.8292009830474854,1.8287177085876465,1.8282350301742554,1.827752709388733,1.827270746231079,1.8267890214920044,1.826307773590088,1.8258270025253296,1.8253464698791504,1.8248666524887085,1.8243868350982666,1.8239073753356934,1.8234285116195679,1.822950005531311,1.8224717378616333,1.8219940662384033,1.821516513824463,1.8210394382476807,1.8205626010894775,1.8200863599777222,1.8196104764938354,1.8191349506378174,1.8186595439910889,1.8181849718093872,1.8177103996276855,1.817236304283142,1.8167625665664673,1.8162891864776611,1.8158162832260132,1.8153437376022339,1.8148714303970337,1.8143996000289917,1.8139280080795288,1.8134568929672241,1.812986135482788,1.8125156164169312,1.812045693397522,1.811576008796692,1.8111066818237305,1.8106378316879272,1.8101691007614136,1.8097009658813477,1.8092330694198608,1.8087655305862427,1.8082984685897827,1.8078317642211914,1.8073654174804688,1.8068993091583252,1.8064335584640503,1.8059682846069336,1.8055033683776855,1.8050386905670166,1.8045744895935059,1.8041105270385742,1.8036471605300903,1.803183913230896,1.8027212619781494,1.8022587299346924,1.801796555519104,1.8013347387313843,1.8008733987808228,1.8004125356674194,1.7999516725540161,1.7994914054870605,1.799031376838684,1.7985718250274658,1.798112392425537,1.7976536750793457,1.7971949577331543,1.796736717224121,1.7962788343429565,1.7958214282989502,1.795364260673523,1.794907569885254,1.7944509983062744,1.7939949035644531,1.793539047241211,1.7930835485458374,1.792628526687622,1.7921737432479858,1.7917194366455078,1.7912654876708984,1.7908117771148682,1.7903581857681274,1.789905309677124,1.7894526720046997,1.7890002727508545,1.788548231124878,1.7880966663360596,1.7876453399658203,1.7871943712234497,1.7867438793182373,1.786293625831604,1.7858434915542603,1.7853940725326538,1.7849448919296265,1.7844958305358887,1.784047245979309,1.7835990190505981,1.7831511497497559,1.7827036380767822,1.7822562456130981,1.7818093299865723,1.7813628911972046,1.780916690826416,1.780470848083496,1.7800253629684448,1.7795801162719727,1.7791351079940796,1.7786905765533447,1.7782464027404785,1.777802586555481,1.777358889579773,1.7769157886505127,1.7764729261398315,1.776030421257019,1.7755881547927856,1.775146245956421,1.7747045755386353,1.7742633819580078,1.773822546005249,1.7733819484710693,1.7729417085647583,1.7725017070770264,1.772062063217163,1.771622896194458,1.771183967590332,1.7707453966140747,1.7703070640563965,1.769869089126587,1.7694313526153564,1.7689940929412842,1.7685571908950806,1.768120527267456,1.7676842212677002,1.7672480344772339,1.7668124437332153,1.7663769721984863,1.765942096710205,1.7655072212219238,1.7650729417800903,1.7646386623382568,1.7642050981521606,1.763771414756775,1.763338327407837,1.7629055976867676,1.7624731063842773,1.7620408535003662,1.7616090774536133,1.76117742061615,1.7607462406158447,1.7603154182434082,1.7598848342895508,1.759454369544983,1.7590246200561523,1.7585947513580322,1.7581655979156494,1.7577365636825562,1.757307767868042,1.7568795680999756,1.7564513683319092,1.7560235261917114,1.7555961608886719,1.755169153213501,1.75474214553833,1.754315733909607,1.753889560699463,1.7534637451171875,1.7530380487442017,1.7526127099990845,1.7521878480911255,1.7517632246017456,1.7513387203216553,1.7509146928787231,1.7504909038543701,1.7500675916671753,1.74964439868927,1.749221682548523,1.7487990856170654,1.7483769655227661,1.7479549646377563,1.7475334405899048,1.7471121549606323,1.7466912269592285,1.7462705373764038,1.7458500862121582,1.7454301118850708,1.745010256767273,1.7445908784866333,1.7441717386245728,1.7437528371810913,1.7433342933654785,1.7429161071777344,1.7424980401992798,1.7420804500579834,1.7416630983352661,1.7412461042404175,1.7408292293548584,1.7404128313064575,1.7399965524673462,1.7395808696746826,1.7391653060913086,1.7387499809265137,1.738335132598877,1.7379204034805298,1.7375060319900513,1.7370918989181519,1.736678123474121,1.7362645864486694,1.7358514070510864,1.7354387044906616,1.7350260019302368,1.7346136569976807,1.7342017889022827,1.7337899208068848,1.7333786487579346,1.7329673767089844,1.732556700706482,1.7321460247039795,1.7317358255386353,1.7313258647918701,1.730916142463684,1.7305067777633667,1.730097770690918,1.7296888828277588,1.7292804718017578,1.7288721799850464,1.7284642457962036,1.72805655002594,1.7276493310928345,1.727242112159729,1.7268353700637817,1.7264288663864136,1.7260226011276245,1.7256168127059937,1.7252111434936523,1.7248058319091797,1.7244007587432861,1.7239959239959717,1.7235913276672363,1.7231872081756592,1.7227832078933716,1.7223796844482422,1.721976399421692,1.7215733528137207,1.721170425415039,1.7207679748535156,1.7203656435012817,1.719963788986206,1.7195621728897095,1.719160795211792,1.718759536743164,1.7183588743209839,1.7179582118988037,1.7175581455230713,1.7171580791473389,1.7167582511901855,1.7163589000701904,1.715959906578064,1.7155609130859375,1.7151623964309692,1.71476411819458,1.7143659591674805,1.713968276977539,1.7135707139968872,1.7131736278533936,1.7127766609191895,1.712380051612854,1.7119836807250977,1.7115875482559204,1.7111916542053223,1.7107962369918823,1.7104008197784424,1.7100059986114502,1.709611177444458,1.709216833114624,1.70882248878479,1.7084287405014038,1.7080349922180176,1.7076417207717896,1.7072484493255615,1.7068557739257812,1.7064632177352905,1.706070899963379,1.7056788206100464,1.705287218093872,1.7048956155776978,1.7045044898986816,1.7041136026382446,1.7037229537963867,1.703332543373108,1.7029423713684082,1.7025524377822876,1.7021629810333252,1.7017736434936523,1.7013846635818481,1.7009958028793335,1.700607180595398,1.7002190351486206,1.6998310089111328,1.6994433403015137,1.699055790901184,1.6986687183380127,1.6982816457748413,1.6978949308395386,1.6975085735321045,1.697122573852539,1.6967365741729736,1.6963510513305664,1.6959656476974487,1.6955806016921997,1.6951956748962402,1.694811224937439,1.6944270133972168,1.6940428018569946,1.6936590671539307,1.6932755708694458,1.69289231300354,1.692509412765503,1.6921266317367554,1.691744089126587,1.691361904144287,1.6909798383712769,1.6905982494354248,1.6902166604995728,1.6898356676101685,1.6894546747207642,1.6890740394592285,1.6886935234069824,1.688313364982605,1.6879335641860962,1.6875540018081665,1.6871745586395264,1.6867953538894653,1.6864163875579834,1.6860380172729492,1.6856595277786255,1.6852813959121704,1.684903621673584,1.6845258474349976,1.6841486692428589,1.6837716102600098,1.6833947896957397,1.6830180883407593,1.682641863822937,1.6822657585144043,1.6818897724151611,1.6815142631530762,1.6811389923095703,1.6807639598846436,1.6803890466690063,1.6800144910812378,1.679640293121338,1.6792659759521484,1.6788922548294067,1.6785187721252441,1.6781452894210815,1.6777722835540771,1.6773995161056519,1.6770267486572266,1.676654577255249,1.676282525062561,1.6759105920791626,1.6755390167236328,1.6751676797866821,1.6747965812683105,1.6744258403778076,1.6740552186965942,1.67368483543396,1.6733148097991943,1.6729447841644287,1.6725752353668213,1.6722058057785034,1.6718367338180542,1.6714677810668945,1.6710991859436035,1.670730710029602,1.6703625917434692,1.6699947118759155,1.669627070426941,1.6692596673965454,1.668892502784729,1.6685255765914917,1.6681588888168335,1.6677924394607544,1.6674261093139648,1.667060136795044,1.6666944026947021,1.6663289070129395,1.6659637689590454,1.665598750114441,1.665233850479126,1.6648694276809692,1.664505124092102,1.664141058921814,1.6637771129608154,1.6634135246276855,1.6630502939224243,1.6626873016357422,1.66232430934906,1.6619616746902466,1.6615992784500122,1.661237120628357,1.6608752012252808,1.6605135202407837,1.6601520776748657,1.6597908735275269,1.659429907798767,1.6590691804885864,1.6587086915969849,1.6583484411239624,1.657988429069519,1.6576286554336548,1.6572691202163696,1.656909704208374,1.6565507650375366,1.6561918258666992,1.655833125114441,1.6554746627807617,1.6551166772842407,1.6547586917877197,1.6544009447097778,1.654043436050415,1.653686285018921,1.6533292531967163,1.6529724597930908,1.6526159048080444,1.6522595882415771,1.651903510093689,1.6515476703643799,1.65119206905365,1.650836706161499,1.6504815816879272,1.650126576423645,1.649771809577942,1.6494174003601074,1.649063229560852,1.6487090587615967,1.6483553647994995,1.6480019092559814,1.647648572921753,1.647295355796814,1.6469424962997437,1.6465898752212524,1.6462374925613403,1.6458852291107178,1.6455333232879639,1.64518141746521,1.6448299884796143,1.644478678703308,1.644127607345581,1.643776774406433,1.6434260606765747,1.643075704574585,1.6427254676818848,1.6423755884170532,1.6420259475708008,1.6416763067245483,1.641327142715454,1.6409779787063599,1.6406290531158447,1.6402806043624878,1.6399321556091309,1.639583945274353,1.6392360925674438,1.6388883590698242,1.6385408639907837,1.6381934881210327,1.6378464698791504,1.6374996900558472,1.637152910232544,1.6368067264556885,1.6364604234695435,1.6361143589019775,1.6357687711715698,1.635423183441162,1.6350778341293335,1.634732723236084,1.6343879699707031,1.6340433359146118,1.63369882106781,1.633354663848877,1.6330106258392334,1.632666826248169,1.6323232650756836,1.6319798231124878,1.631636619567871,1.6312938928604126,1.630951166152954,1.6306085586547852,1.6302663087844849,1.6299244165420532,1.6295826435089111,1.629240870475769,1.6288994550704956,1.6285581588745117,1.628217339515686,1.6278765201568604,1.6275360584259033,1.6271955966949463,1.626855492591858,1.6265156269073486,1.626175880432129,1.6258364915847778,1.6254971027374268,1.6251581907272339,1.624819278717041,1.6244806051254272,1.6241421699523926,1.623803973197937,1.6234660148620605,1.6231281757354736,1.6227905750274658,1.622453212738037,1.6221160888671875,1.6217790842056274,1.6214423179626465,1.6211059093475342,1.6207695007324219,1.6204334497451782,1.6200975179672241,1.6197618246078491,1.6194262504577637,1.6190910339355469,1.6187559366226196,1.618421196937561,1.618086576461792,1.6177520751953125,1.617417812347412,1.6170839071273804,1.616749882698059,1.6164164543151855,1.6160829067230225,1.615749716758728,1.6154167652130127,1.615083932876587,1.6147513389587402,1.6144189834594727,1.6140867471694946,1.6137547492980957,1.6134229898452759,1.6130914688110352,1.612760066986084,1.6124290227890015,1.6120980978012085,1.611767292022705,1.6114367246627808,1.6111063957214355,1.6107763051986694,1.6104463338851929,1.610116720199585,1.609787106513977,1.6094577312469482,1.6091285943984985,1.608799695968628,1.6084709167480469,1.608142375946045,1.6078141927719116,1.6074860095977783,1.6071580648422241,1.6068304777145386,1.606502890586853,1.6061756610870361,1.6058484315872192,1.605521559715271,1.6051949262619019,1.6048682928085327,1.6045420169830322,1.6042159795761108,1.603890061378479,1.6035642623901367,1.603238821029663,1.602913498878479,1.6025882959365845,1.602263331413269,1.6019387245178223,1.601613998413086,1.6012897491455078,1.6009654998779297,1.6006417274475098,1.6003179550170898,1.5999943017959595,1.5996708869934082,1.5993478298187256,1.5990248918533325,1.598702073097229,1.5983794927597046,1.5980571508407593,1.597735047340393,1.5974130630493164,1.5970911979675293,1.5967696905136108,1.5964481830596924,1.596126914024353,1.5958060026168823,1.5954852104187012,1.5951646566390991,1.594844102859497,1.5945239067077637,1.5942038297653198,1.593883991241455,1.5935643911361694,1.5932449102401733,1.5929255485534668,1.592606544494629,1.592287540435791,1.5919688940048218,1.591650366783142,1.591331958770752,1.5910139083862305,1.590696096420288,1.5903781652450562,1.5900605916976929,1.5897432565689087,1.5894261598587036,1.5891090631484985,1.588792324066162,1.5884755849838257,1.5881593227386475,1.5878431797027588,1.5875270366668701,1.58721125125885,1.58689546585083,1.5865800380706787,1.586264729499817,1.5859496593475342,1.585634708404541,1.585319995880127,1.5850054025650024,1.584691047668457,1.5843769311904907,1.584062933921814,1.5837491750717163,1.5834356546401978,1.5831221342086792,1.5828089714050293,1.5824958086013794,1.5821830034255981,1.581870198249817,1.5815578699111938,1.5812455415725708,1.5809333324432373,1.5806214809417725,1.5803097486495972,1.5799981355667114,1.5796867609024048,1.5793756246566772,1.5790644884109497,1.5787538290023804,1.5784430503845215,1.5781326293945312,1.577822208404541,1.5775121450424194,1.5772022008895874,1.576892614364624,1.5765830278396606,1.5762736797332764,1.5759644508361816,1.575655460357666,1.57534658908844,1.575037956237793,1.574729561805725,1.5744212865829468,1.574113130569458,1.573805332183838,1.5734975337982178,1.5731898546218872,1.5728825330734253,1.5725754499435425,1.5722682476043701,1.5719616413116455,1.5716549158096313,1.5713484287261963,1.5710421800613403,1.5707359313964844,1.5704301595687866,1.5701242685317993,1.5698187351226807,1.569513201713562,1.569208025932312,1.5689029693603516,1.5685981512069702,1.5682934522628784,1.5679889917373657,1.567684531211853,1.5673805475234985,1.5670764446258545,1.5667725801467896,1.5664689540863037,1.566165566444397,1.5658622980117798,1.5655591487884521,1.5652562379837036,1.5649535655975342,1.5646508932113647,1.564348578453064,1.5640463829040527,1.563744306564331,1.563442349433899,1.5631407499313354,1.562839150428772,1.5625379085540771,1.5622366666793823,1.5619356632232666,1.5616347789764404,1.5613341331481934,1.5610337257385254,1.560733437538147,1.5604331493377686,1.5601332187652588,1.5598334074020386,1.5595338344573975,1.559234380722046,1.5589351654052734,1.5586360692977905,1.5583370923995972,1.558038353919983,1.5577398538589478,1.5574414730072021,1.5571430921554565,1.5568450689315796,1.5565471649169922,1.5562494993209839,1.5559520721435547,1.555654525756836,1.5553573369979858,1.5550602674484253,1.5547634363174438,1.554466724395752,1.5541702508926392,1.5538737773895264,1.5535776615142822,1.553281545639038,1.5529857873916626,1.552690029144287,1.5523946285247803,1.5520992279052734,1.5518040657043457,1.5515090227127075,1.5512142181396484,1.550919532775879,1.550624966621399,1.550330638885498,1.5500364303588867,1.5497424602508545,1.5494486093521118,1.5491548776626587,1.5488613843917847,1.5485681295394897,1.5482749938964844,1.5479819774627686,1.5476890802383423,1.5473964214324951,1.547104001045227,1.546811580657959,1.54651939868927,1.5462273359298706,1.5459355115890503,1.5456438064575195,1.5453523397445679,1.5450609922409058,1.5447697639465332,1.5444787740707397,1.5441879034042358,1.5438971519470215,1.5436067581176758,1.54331636428833,1.543026089668274,1.5427361726760864,1.542446255683899,1.542156457901001,1.5418668985366821,1.5415775775909424,1.5412884950637817,1.540999412536621,1.5407105684280396,1.5404216051101685,1.5401332378387451,1.5398446321487427,1.5395565032958984,1.5392683744430542,1.538980484008789,1.5386927127838135,1.538405179977417,1.53811776638031,1.5378303527832031,1.5375432968139648,1.5372563600540161,1.5369694232940674,1.5366828441619873,1.5363965034484863,1.5361100435256958,1.535823941230774,1.5355379581451416,1.5352520942687988,1.5349664688110352,1.5346808433532715,1.5343955755233765,1.534110426902771,1.5338252782821655,1.5335406064987183,1.5332558155059814,1.5329712629318237,1.5326868295669556,1.5324026346206665,1.5321184396743774,1.531834602355957,1.5315507650375366,1.5312671661376953,1.5309836864471436,1.530700445175171,1.5304172039031982,1.5301343202590942,1.5298513174057007,1.5295687913894653,1.5292861461639404,1.5290039777755737,1.5287216901779175,1.5284396409988403,1.5281577110290527,1.5278760194778442,1.5275944471359253,1.527312994003296,1.5270317792892456,1.5267506837844849,1.5264697074890137,1.526188850402832,1.5259082317352295,1.525627851486206,1.5253474712371826,1.5250672101974487,1.5247873067855835,1.5245074033737183,1.5242276191711426,1.523948073387146,1.523668646812439,1.5233893394470215,1.5231103897094727,1.5228313207626343,1.522552490234375,1.5222738981246948,1.5219954252243042,1.5217169523239136,1.5214389562606812,1.5211608409881592,1.5208829641342163,1.520605206489563,1.5203276872634888,1.5200501680374146,1.519773006439209,1.5194958448410034,1.519218921661377,1.5189419984817505,1.5186654329299927,1.5183888673782349,1.5181124210357666,1.517836332321167,1.5175602436065674,1.5172842741012573,1.5170085430145264,1.516732931137085,1.516457438468933,1.5161820650100708,1.5159070491790771,1.5156320333480835,1.5153571367263794,1.5150823593139648,1.5148078203201294,1.514533519744873,1.5142590999603271,1.51398503780365,1.5137109756469727,1.513437271118164,1.5131635665893555,1.512890100479126,1.512616753578186,1.5123435258865356,1.5120704174041748,1.5117974281311035,1.5115246772766113,1.5112520456314087,1.5109795331954956,1.510707139968872,1.5104349851608276,1.5101629495620728,1.5098910331726074,1.5096193552017212,1.509347677230835,1.5090762376785278,1.5088050365447998,1.5085338354110718,1.5082627534866333,1.5079917907714844,1.507721185684204,1.5074505805969238,1.507180094718933,1.506909728050232,1.5066395998001099,1.5063695907592773,1.506099820137024,1.5058300495147705,1.5055606365203857,1.5052911043167114,1.5050218105316162,1.5047526359558105,1.504483699798584,1.504214882850647,1.5039461851119995,1.5036777257919312,1.5034092664718628,1.503140926361084,1.5028728246688843,1.5026048421859741,1.5023369789123535,1.502069354057312,1.5018017292022705,1.5015344619750977,1.5012670755386353,1.5010000467300415,1.5007330179214478,1.5004661083221436,1.5001994371414185,1.499932885169983,1.499666452407837,1.4994001388549805,1.4991340637207031,1.4988681077957153,1.4986023902893066,1.4983365535736084,1.4980709552764893,1.4978055953979492,1.4975403547286987,1.4972751140594482,1.4970101118087769,1.4967453479766846,1.4964805841445923,1.4962159395217896,1.495951533317566,1.4956873655319214,1.4954230785369873,1.4951590299606323,1.494895339012146,1.4946315288543701,1.4943678379058838,1.4941043853759766,1.4938411712646484,1.4935779571533203,1.4933148622512817,1.4930520057678223,1.4927891492843628,1.492526650428772,1.4922640323638916,1.4920018911361694,1.4917395114898682,1.4914774894714355,1.4912155866622925,1.490953803062439,1.4906920194625854,1.4904307126998901,1.4901691675186157,1.48990797996521,1.4896467924118042,1.489385962486267,1.48912513256073,1.4888644218444824,1.4886038303375244,1.4883434772491455,1.4880831241607666,1.4878230094909668,1.487562894821167,1.4873031377792358,1.4870432615280151,1.486783742904663,1.486524224281311,1.486264944076538,1.4860057830810547,1.4857466220855713,1.485487699508667,1.4852288961410522,1.4849703311920166,1.484711766242981,1.4844534397125244,1.4841951131820679,1.4839370250701904,1.4836790561676025,1.4834212064743042,1.4831634759902954,1.4829058647155762,1.482648491859436,1.4823912382125854,1.4821339845657349,1.4818768501281738,1.481619954109192,1.481363296508789,1.4811066389083862,1.480850100517273,1.4805936813354492,1.4803375005722046,1.4800814390182495,1.4798253774642944,1.4795695543289185,1.479313850402832,1.4790583848953247,1.4788028001785278,1.47854745388031,1.478292465209961,1.4780372381210327,1.4777823686599731,1.4775277376174927,1.4772729873657227,1.4770184755325317,1.4767639636993408,1.4765098094940186,1.4762556552886963,1.4760016202926636,1.47574782371521,1.4754940271377563,1.4752404689788818,1.4749870300292969,1.4747337102890015,1.474480390548706,1.4742273092269897,1.4739744663238525,1.4737215042114258,1.4734688997268677,1.4732162952423096,1.472963809967041,1.4727115631103516,1.4724594354629517,1.4722074270248413,1.471955418586731,1.4717036485671997,1.471451997756958,1.4712004661560059,1.4709490537643433,1.4706978797912598,1.4704467058181763,1.4701956510543823,1.469944715499878,1.4696940183639526,1.469443440437317,1.4691929817199707,1.4689425230026245,1.4686923027038574,1.4684423208236694,1.468192219734192,1.4679423570632935,1.4676927328109741,1.4674429893493652,1.467193603515625,1.4669442176818848,1.466694951057434,1.4664459228515625,1.4661970138549805,1.4659481048583984,1.4656994342803955,1.4654508829116821,1.4652023315429688,1.4649540185928345,1.4647058248519897,1.4644577503204346,1.464209794998169,1.4639619588851929,1.4637142419815063,1.463466763496399,1.463219165802002,1.4629719257354736,1.4627246856689453,1.462477684020996,1.4622306823730469,1.4619837999343872,1.461737036705017,1.461490511894226,1.4612441062927246,1.4609978199005127,1.4607515335083008,1.460505485534668,1.4602594375610352,1.460013747215271,1.4597680568695068,1.4595223665237427,1.4592770338058472,1.459031581878662,1.4587864875793457,1.4585413932800293,1.4582964181900024,1.4580515623092651,1.457806944847107,1.4575622081756592,1.4573177099227905,1.457073450088501,1.4568291902542114,1.4565850496292114,1.4563411474227905,1.4560972452163696,1.4558535814285278,1.455609917640686,1.4553664922714233,1.455122947692871,1.454879879951477,1.4546366930007935,1.4543936252593994,1.4541507959365845,1.4539079666137695,1.4536653757095337,1.4534229040145874,1.4531805515289307,1.452938199043274,1.4526960849761963,1.4524540901184082,1.4522122144699097,1.4519704580307007,1.4517287015914917,1.4514871835708618,1.451245665550232,1.4510043859481812,1.45076322555542,1.4505220651626587,1.4502812623977661,1.450040340423584,1.4497997760772705,1.4495590925216675,1.4493186473846436,1.4490782022476196,1.4488381147384644,1.4485979080200195,1.4483580589294434,1.4481180906295776,1.447878360748291,1.4476386308670044,1.4473991394042969,1.447159767150879,1.4469205141067505,1.4466813802719116,1.4464423656463623,1.4462034702301025,1.4459645748138428,1.445725917816162,1.445487380027771,1.4452489614486694,1.4450105428695679,1.4447723627090454,1.4445343017578125,1.4442963600158691,1.4440585374832153,1.4438207149505615,1.4435831308364868,1.4433456659317017,1.443108320236206,1.4428709745407104,1.4426337480545044,1.4423967599868774,1.4421597719192505,1.4419230222702026,1.4416863918304443,1.441449761390686,1.4412132501602173,1.4409769773483276,1.4407408237457275,1.4405046701431274,1.440268635749817,1.4400328397750854,1.439797043800354,1.439561367034912,1.4393259286880493,1.4390904903411865,1.4388551712036133,1.4386199712753296,1.438385009765625,1.4381499290466309,1.4379152059555054,1.4376804828643799,1.437445878982544,1.437211275100708,1.4369769096374512,1.4367426633834839,1.4365085363388062,1.436274528503418,1.4360406398773193,1.4358068704605103,1.4355731010437012,1.4353395700454712,1.4351061582565308,1.4348728656768799,1.434639573097229,1.4344063997268677,1.4341734647750854,1.4339405298233032,1.4337077140808105,1.433475136756897,1.4332425594329834,1.4330101013183594,1.432777762413025,1.43254554271698,1.4323134422302246,1.4320815801620483,1.4318495988845825,1.4316178560256958,1.4313862323760986,1.431154727935791,1.4309232234954834,1.4306919574737549,1.4304606914520264,1.430229663848877,1.4299986362457275,1.4297678470611572,1.4295369386672974,1.4293063879013062,1.429075837135315,1.4288454055786133,1.4286150932312012,1.4283850193023682,1.4281548261642456,1.4279248714447021,1.4276950359344482,1.4274652004241943,1.4272356033325195,1.4270060062408447,1.426776647567749,1.4265474081039429,1.4263181686401367,1.4260890483856201,1.425860047340393,1.4256311655044556,1.4254025220870972,1.4251737594604492,1.4249452352523804,1.4247169494628906,1.4244885444641113,1.4242603778839111,1.424032211303711,1.4238042831420898,1.4235764741897583,1.4233486652374268,1.4231209754943848,1.4228935241699219,1.422666072845459,1.422438621520996,1.4222115278244019,1.4219844341278076,1.4217573404312134,1.4215304851531982,1.421303629875183,1.4210768938064575,1.420850396156311,1.420624017715454,1.4203975200653076,1.4201713800430298,1.4199451208114624,1.4197192192077637,1.4194931983947754,1.4192674160003662,1.4190417528152466,1.4188162088394165,1.4185906648635864,1.418365240097046,1.4181400537490845,1.4179147481918335,1.4176898002624512,1.4174648523330688,1.417240023612976,1.4170151948928833,1.4167906045913696,1.416566014289856,1.4163416624069214,1.4161173105239868,1.4158930778503418,1.4156690835952759,1.4154449701309204,1.415221095085144,1.4149973392486572,1.41477370262146,1.4145501852035522,1.414326548576355,1.4141032695770264,1.4138799905776978,1.4136568307876587,1.4134339094161987,1.4132108688354492,1.4129880666732788,1.412765383720398,1.4125428199768066,1.4123202562332153,1.4120978116989136,1.4118754863739014,1.4116532802581787,1.4114311933517456,1.411209225654602,1.410987377166748,1.4107656478881836,1.4105439186096191,1.4103223085403442,1.4101009368896484,1.4098795652389526,1.4096583127975464,1.4094370603561401,1.409216046333313,1.4089951515197754,1.4087743759155273,1.4085534811019897,1.4083329439163208,1.4081124067306519,1.4078919887542725,1.407671570777893,1.4074513912200928,1.407231330871582,1.4070112705230713,1.40679132938385,1.406571626663208,1.4063518047332764,1.4061322212219238,1.4059128761291504,1.4056934118270874,1.405474066734314,1.4052549600601196,1.4050358533859253,1.4048168659210205,1.4045979976654053,1.40437912940979,1.404160499572754,1.4039419889450073,1.4037234783172607,1.4035050868988037,1.4032868146896362,1.4030686616897583,1.4028505086898804,1.4026325941085815,1.4024147987365723,1.4021968841552734,1.4019793272018433,1.4017616510391235,1.4015443325042725,1.4013270139694214,1.4011095762252808,1.4008924961090088,1.4006755352020264,1.400458574295044,1.4002416133880615,1.4000250101089478,1.3998082876205444,1.3995916843414307,1.3993752002716064,1.3991589546203613,1.3989427089691162,1.3987265825271606,1.398510456085205,1.3982945680618286,1.3980786800384521,1.3978629112243652,1.3976472616195679,1.39743173122406,1.3972163200378418,1.3970009088516235,1.3967857360839844,1.3965705633163452,1.396355390548706,1.396140456199646,1.3959256410598755,1.3957109451293945,1.3954962491989136,1.3952816724777222,1.3950673341751099,1.3948529958724976,1.3946386575698853,1.3944244384765625,1.3942104578018188,1.3939964771270752,1.393782615661621,1.393568754196167,1.3933552503585815,1.3931416273117065,1.392928123474121,1.3927146196365356,1.3925014734268188,1.392288327217102,1.3920751810073853,1.391862154006958,1.3916493654251099,1.3914365768432617,1.3912237882614136,1.3910112380981445,1.390798807144165,1.3905863761901855,1.3903740644454956,1.3901618719100952,1.3899497985839844,1.3897377252578735,1.3895258903503418,1.38931405544281,1.3891023397445679,1.3888906240463257,1.3886791467666626,1.388467788696289,1.3882564306259155,1.3880451917648315,1.387834072113037,1.3876230716705322,1.387412190437317,1.387201189994812,1.3869904279708862,1.3867799043655396,1.3865692615509033,1.3863587379455566,1.3861483335494995,1.3859381675720215,1.385727882385254,1.3855178356170654,1.3853079080581665,1.3850979804992676,1.3848881721496582,1.3846784830093384,1.3844687938690186,1.3842594623565674,1.3840500116348267,1.3838406801223755,1.3836314678192139,1.3834222555160522,1.3832132816314697,1.3830043077468872,1.3827955722808838,1.3825867176055908,1.382378101348877,1.382169485092163,1.3819611072540283,1.381752610206604,1.3815444707870483,1.3813362121582031,1.381128191947937,1.380920171737671,1.3807121515274048,1.3805043697357178,1.3802968263626099,1.3800890445709229,1.379881501197815,1.3796740770339966,1.3794667720794678,1.379259467124939,1.3790524005889893,1.3788453340530396,1.3786383867263794,1.3784314393997192,1.3782247304916382,1.3780180215835571,1.3778114318847656,1.3776048421859741,1.3773984909057617,1.3771922588348389,1.3769859075546265,1.3767797946929932,1.3765738010406494,1.3763679265975952,1.3761619329452515,1.3759561777114868,1.3757505416870117,1.3755450248718262,1.3753395080566406,1.3751341104507446,1.3749287128448486,1.3747235536575317,1.3745185136795044,1.374313473701477,1.3741084337234497,1.3739036321640015,1.3736989498138428,1.373494267463684,1.373289704322815,1.3730852603912354,1.3728808164596558,1.3726764917373657,1.3724724054336548,1.3722683191299438,1.372064232826233,1.3718602657318115,1.3716565370559692,1.3714526891708374,1.3712489604949951,1.371045470237732,1.3708419799804688,1.3706386089324951,1.370435357093811,1.370232105255127,1.3700289726257324,1.3698259592056274,1.3696229457855225,1.3694201707839966,1.3692175149917603,1.3690147399902344,1.3688122034072876,1.3686097860336304,1.3684073686599731,1.3682050704956055,1.3680027723312378,1.3678007125854492,1.3675986528396606,1.3673967123031616,1.3671948909759521,1.3669930696487427,1.3667914867401123,1.3665897846221924,1.366388201713562,1.3661869764328003,1.365985631942749,1.3657844066619873,1.3655831813812256,1.365382194519043,1.3651812076568604,1.3649803400039673,1.3647794723510742,1.3645788431167603,1.3643782138824463,1.3641777038574219,1.3639771938323975,1.3637769222259521,1.3635766506195068,1.363376498222351,1.3631764650344849,1.3629764318466187,1.362776517868042,1.3625767230987549,1.3623769283294678,1.3621772527694702,1.3619778156280518,1.3617782592773438,1.3615789413452148,1.3613797426223755,1.3611804246902466,1.3609812259674072,1.3607823848724365,1.3605833053588867,1.360384464263916,1.3601857423782349,1.3599871397018433,1.3597885370254517,1.35958993434906,1.3593915700912476,1.359193205833435,1.358994960784912,1.3587968349456787,1.3585987091064453,1.3584007024765015,1.3582029342651367,1.3580050468444824,1.3578073978424072,1.357609748840332,1.3574120998382568,1.3572146892547607,1.3570172786712646,1.356819987297058,1.3566228151321411,1.3564256429672241,1.3562287092208862,1.3560316562652588,1.355834722518921,1.355638027191162,1.3554413318634033,1.355244755744934,1.3550481796264648,1.3548517227172852,1.354655385017395,1.3544591665267944,1.3542629480361938,1.3540668487548828,1.3538708686828613,1.3536750078201294,1.353479027748108,1.3532832860946655,1.3530876636505127,1.3528920412063599,1.3526965379714966,1.3525011539459229,1.3523058891296387,1.352110505104065,1.3519153594970703,1.3517203330993652,1.3515254259109497,1.3513303995132446,1.3511356115341187,1.3509409427642822,1.3507461547851562,1.350551724433899,1.3503570556640625,1.3501627445220947,1.349968433380127,1.3497741222381592,1.3495800495147705,1.3493859767913818,1.3491920232772827,1.3489980697631836,1.348804235458374,1.3486106395721436,1.3484169244766235,1.3482232093811035,1.3480298519134521,1.3478364944458008,1.3476431369781494,1.3474498987197876,1.3472567796707153,1.347063660621643,1.3468706607818604,1.3466777801513672,1.346484899520874,1.3462921380996704,1.346099615097046,1.3459069728851318,1.3457145690917969,1.345522165298462,1.345329761505127,1.3451374769210815,1.3449454307556152,1.3447532653808594,1.344561219215393,1.3443694114685059,1.344177484512329,1.3439857959747314,1.3437941074371338,1.3436025381088257,1.3434110879898071,1.3432196378707886,1.3430283069610596,1.3428370952606201,1.3426458835601807,1.3424547910690308,1.3422636985778809,1.34207284450531,1.3418819904327393,1.3416911363601685,1.3415005207061768,1.341309905052185,1.341119408607483,1.3409289121627808,1.3407386541366577,1.3405483961105347,1.3403581380844116,1.3401679992675781,1.3399778604507446,1.3397880792617798,1.3395981788635254,1.3394083976745605,1.3392186164855957,1.3390289545059204,1.3388394117355347,1.3386499881744385,1.3384605646133423,1.3382712602615356,1.338081955909729,1.337892770767212,1.337703824043274,1.3375147581100464,1.337325930595398,1.33713698387146,1.336948275566101,1.3367596864700317,1.3365710973739624,1.336382508277893,1.3361941576004028,1.3360058069229126,1.3358174562454224,1.3356292247772217,1.3354412317276,1.3352532386779785,1.335065245628357,1.334877371788025,1.3346896171569824,1.3345017433166504,1.3343141078948975,1.334126591682434,1.3339391946792603,1.3337516784667969,1.3335644006729126,1.3333772420883179,1.3331899642944336,1.3330029249191284,1.3328158855438232,1.3326290845870972,1.3324421644210815,1.3322553634643555,1.332068681716919,1.3318819999694824,1.331695556640625,1.331508994102478,1.3313226699829102,1.3311364650726318,1.3309502601623535,1.3307640552520752,1.3305779695510864,1.3303920030593872,1.330206036567688,1.3300203084945679,1.3298344612121582,1.3296488523483276,1.329463243484497,1.3292776346206665,1.329092264175415,1.3289068937301636,1.328721523284912,1.3285363912582397,1.3283512592315674,1.3281662464141846,1.3279812335968018,1.3277963399887085,1.3276115655899048,1.327426791191101,1.327242136001587,1.3270574808120728,1.3268730640411377,1.326688528060913,1.326504111289978,1.326319932937622,1.3261357545852661,1.3259515762329102,1.3257675170898438,1.325583577156067,1.32539963722229,1.3252158164978027,1.3250319957733154,1.3248484134674072,1.324664831161499,1.3244812488555908,1.3242977857589722,1.324114441871643,1.3239312171936035,1.323747992515564,1.3235647678375244,1.323381781578064,1.3231987953186035,1.3230159282684326,1.3228330612182617,1.3226503133773804,1.322467565536499,1.3222849369049072,1.322102427482605,1.3219199180603027,1.3217376470565796,1.321555256843567,1.3213731050491333,1.3211909532546997,1.3210088014602661,1.320826768875122,1.3206448554992676,1.3204630613327026,1.3202812671661377,1.3200994729995728,1.319917917251587,1.319736361503601,1.3195549249649048,1.3193734884262085,1.3191921710968018,1.319010853767395,1.3188297748565674,1.3186485767364502,1.318467617034912,1.318286657333374,1.318105697631836,1.317924976348877,1.317744255065918,1.3175636529922485,1.3173829317092896,1.3172024488449097,1.3170220851898193,1.316841721534729,1.3166613578796387,1.316481113433838,1.3163009881973267,1.316120982170105,1.3159409761428833,1.3157609701156616,1.3155813217163086,1.3154014348983765,1.3152217864990234,1.3150420188903809,1.314862608909607,1.3146830797195435,1.3145036697387695,1.3143243789672852,1.3141450881958008,1.313965916633606,1.3137867450714111,1.3136078119277954,1.3134288787841797,1.313249945640564,1.3130711317062378,1.3128924369812012,1.3127137422561646,1.312535047531128,1.3123565912246704,1.312178134918213,1.3119996786117554,1.311821460723877,1.311643123626709,1.3114650249481201,1.3112869262695312,1.311108946800232,1.3109309673309326,1.3107532262802124,1.3105753660202026,1.3103976249694824,1.3102200031280518,1.310042381286621,1.30986487865448,1.3096873760223389,1.3095101118087769,1.3093328475952148,1.3091555833816528,1.3089783191680908,1.3088014125823975,1.3086243867874146,1.3084473609924316,1.3082704544067383,1.308093786239624,1.3079169988632202,1.3077404499053955,1.3075637817382812,1.3073872327804565,1.3072108030319214,1.3070344924926758,1.3068581819534302,1.3066819906234741,1.306505799293518,1.3063297271728516,1.3061537742614746,1.3059778213500977,1.3058018684387207,1.3056261539459229,1.305450439453125,1.3052748441696167,1.3050992488861084,1.3049236536026,1.304748296737671,1.3045729398727417,1.304397702217102,1.3042223453521729,1.3040472269058228,1.3038721084594727,1.303697109222412,1.3035222291946411,1.3033473491668701,1.3031724691390991,1.3029978275299072,1.3028230667114258,1.3026485443115234,1.302474021911621,1.3022994995117188,1.3021252155303955,1.3019508123397827,1.301776647567749,1.3016024827957153,1.3014283180236816,1.301254391670227,1.3010804653167725,1.3009065389633179,1.3007327318191528,1.3005589246749878,1.3003852367401123,1.3002115488052368,1.3000380992889404,1.299864649772644,1.2996912002563477,1.2995178699493408,1.2993446588516235,1.2991713285446167,1.298998236656189,1.2988251447677612,1.2986522912979126,1.2984793186187744,1.2983064651489258,1.2981337308883667,1.2979609966278076,1.297788381576538,1.297615647315979,1.297443151473999,1.2972708940505981,1.2970983982086182,1.2969260215759277,1.296754002571106,1.296581745147705,1.2964096069335938,1.296237587928772,1.2960656881332397,1.2958937883377075,1.2957218885421753,1.2955501079559326,1.295378565788269,1.295206904411316,1.2950352430343628,1.2948638200759888,1.2946925163269043,1.2945210933685303,1.2943497896194458,1.2941786050796509,1.2940075397491455,1.2938364744186401,1.2936652898788452,1.2934943437576294,1.2933236360549927,1.2931528091430664,1.2929819822311401,1.2928112745285034,1.2926408052444458,1.2924703359603882,1.292299747467041,1.2921295166015625,1.2919591665267944,1.2917888164520264,1.2916185855865479,1.2914485931396484,1.2912784814834595,1.29110848903656,1.2909384965896606,1.2907687425613403,1.2905988693237305,1.2904291152954102,1.2902594804763794,1.2900899648666382,1.289920449256897,1.2897509336471558,1.289581537246704,1.289412260055542,1.2892429828643799,1.2890737056732178,1.2889045476913452,1.2887356281280518,1.2885665893554688,1.2883976697921753,1.2882288694381714,1.2880600690841675,1.2878912687301636,1.2877227067947388,1.287554144859314,1.2873855829238892,1.287217140197754,1.2870486974716187,1.2868804931640625,1.2867121696472168,1.2865439653396606,1.2863757610321045,1.2862077951431274,1.2860397100448608,1.2858717441558838,1.2857038974761963,1.2855361700057983,1.2853684425354004,1.2852007150650024,1.285033106803894,1.2848656177520752,1.2846981287002563,1.284530758857727,1.2843633890151978,1.284196138381958,1.2840288877487183,1.283861756324768,1.2836947441101074,1.2835276126861572,1.2833606004714966,1.283193826675415,1.2830270528793335,1.282860279083252,1.2826935052871704,1.2825268507003784,1.2823604345321655,1.282193899154663,1.2820274829864502,1.2818609476089478,1.281694769859314,1.2815285921096802,1.2813624143600464,1.2811962366104126,1.2810301780700684,1.2808642387390137,1.280698299407959,1.2805324792861938,1.2803666591644287,1.2802009582519531,1.280035376548767,1.279869794845581,1.279704213142395,1.2795387506484985,1.2793734073638916,1.2792080640792847,1.2790428400039673,1.2788774967193604,1.2787123918533325,1.2785474061965942,1.2783823013305664,1.2782173156738281,1.2780524492263794,1.2778877019882202,1.277722954750061,1.2775582075119019,1.2773934602737427,1.2772290706634521,1.2770644426345825,1.276900053024292,1.2767356634140015,1.2765713930130005,1.2764071226119995,1.2762428522109985,1.276078701019287,1.2759147882461548,1.275750756263733,1.2755868434906006,1.2754229307174683,1.2752591371536255,1.2750954627990723,1.2749316692352295,1.2747681140899658,1.2746045589447021,1.2744410037994385,1.274277687072754,1.2741142511367798,1.2739509344100952,1.2737877368927002,1.2736245393753052,1.2734614610671997,1.2732983827590942,1.2731353044509888,1.2729723453521729,1.272809624671936,1.2726467847824097,1.2724840641021729,1.272321343421936,1.2721587419509888,1.2719961404800415,1.2718336582183838,1.2716712951660156,1.2715089321136475,1.2713465690612793,1.2711843252182007,1.2710222005844116,1.2708600759506226,1.2706979513168335,1.2705360651016235,1.270374059677124,1.2702122926712036,1.2700504064559937,1.2698886394500732,1.2697269916534424,1.2695653438568115,1.2694038152694702,1.269242286682129,1.2690808773040771,1.2689194679260254,1.2687581777572632,1.268596887588501,1.2684357166290283,1.2682746648788452,1.268113613128662,1.2679524421691895,1.2677916288375854,1.267630696296692,1.267469882965088,1.2673090696334839,1.2671483755111694,1.266987681388855,1.2668272256851196,1.2666667699813843,1.266506314277649,1.2663458585739136,1.2661855220794678,1.2660253047943115,1.2658649682998657,1.265704870223999,1.2655446529388428,1.2653846740722656,1.265224814414978,1.2650648355484009,1.2649049758911133,1.2647452354431152,1.2645854949951172,1.2644258737564087,1.2642662525177002,1.2641066312789917,1.2639471292495728,1.2637877464294434,1.263628363609314,1.2634690999984741,1.2633098363876343,1.263150691986084,1.2629914283752441,1.262832522392273,1.2626734972000122,1.262514591217041,1.2623556852340698,1.2621967792510986,1.2620381116867065,1.261879324913025,1.2617206573486328,1.2615621089935303,1.2614035606384277,1.2612451314926147,1.2610868215560913,1.2609283924102783,1.2607700824737549,1.260611891746521,1.260453701019287,1.2602956295013428,1.2601374387741089,1.259979486465454,1.2598216533660889,1.2596638202667236,1.2595059871673584,1.2593481540679932,1.2591904401779175,1.2590328454971313,1.2588752508163452,1.2587178945541382,1.258560299873352,1.2584028244018555,1.258245587348938,1.2580883502960205,1.257931113243103,1.2577738761901855,1.2576168775558472,1.2574597597122192,1.2573027610778809,1.257145881652832,1.2569890022277832,1.256832242012024,1.2566754817962646,1.256518840789795,1.2563620805740356,1.2562055587768555,1.2560490369796753,1.2558925151824951,1.2557361125946045,1.2555798292160034,1.2554235458374023,1.2552672624588013,1.2551110982894897,1.2549550533294678,1.2547990083694458,1.2546430826187134,1.254487156867981,1.2543312311172485,1.2541754245758057,1.2540196180343628,1.253864049911499,1.2537082433700562,1.2535526752471924,1.2533971071243286,1.253241777420044,1.2530863285064697,1.252930998802185,1.2527756690979004,1.2526204586029053,1.2524652481079102,1.2523101568222046,1.252155065536499,1.252000093460083,1.251845121383667,1.251690149307251,1.251535415649414,1.2513806819915771,1.2512259483337402,1.2510712146759033,1.250916600227356,1.2507621049880981,1.2506076097488403,1.2504531145095825,1.2502988576889038,1.2501444816589355,1.2499902248382568,1.2498359680175781,1.2496819496154785,1.2495278120040894,1.2493737936019897,1.2492197751998901,1.24906587600708,1.24891197681427,1.2487581968307495,1.248604416847229,1.248450756072998,1.248297095298767,1.2481435537338257,1.2479900121688843,1.2478365898132324,1.2476831674575806,1.2475297451019287,1.2473764419555664,1.2472232580184937,1.247070074081421,1.2469170093536377,1.2467639446258545,1.2466108798980713,1.2464579343795776,1.246304988861084,1.2461521625518799,1.2459993362426758,1.2458467483520508,1.2456940412521362,1.2455414533615112,1.2453888654708862,1.2452362775802612,1.2450838088989258,1.2449314594268799,1.2447792291641235,1.244626760482788,1.2444745302200317,1.244322419166565,1.2441703081130981,1.244018316268921,1.2438663244247437,1.2437143325805664,1.2435624599456787,1.243410587310791,1.2432588338851929,1.2431070804595947,1.2429554462432861,1.2428038120269775,1.2426522970199585,1.2425007820129395,1.2423492670059204,1.242197871208191,1.242046594619751,1.241895318031311,1.241744041442871,1.2415928840637207,1.2414418458938599,1.2412906885147095,1.2411396503448486,1.2409887313842773,1.240837812423706,1.2406870126724243,1.2405362129211426,1.2403855323791504,1.2402348518371582,1.240084171295166,1.2399336099624634,1.2397830486297607,1.2396327257156372,1.2394822835922241,1.239331841468811,1.2391815185546875,1.239031434059143,1.238881230354309,1.238731026649475,1.2385810613632202,1.2384309768676758,1.238281011581421,1.238131046295166,1.2379812002182007,1.237831473350525,1.2376817464828491,1.2375320196151733,1.237382411956787,1.2372328042984009,1.2370831966400146,1.236933708190918,1.2367843389511108,1.2366350889205933,1.2364856004714966,1.236336350440979,1.236187219619751,1.236038088798523,1.235888957977295,1.2357399463653564,1.235590934753418,1.235442042350769,1.2352931499481201,1.2351443767547607,1.2349954843521118,1.2348467111587524,1.2346980571746826,1.2345495223999023,1.234400987625122,1.2342524528503418,1.2341039180755615,1.2339556217193604,1.2338072061538696,1.2336589097976685,1.2335107326507568,1.2333625555038452,1.2332143783569336,1.2330663204193115,1.2329182624816895,1.232770323753357,1.2326223850250244,1.2324745655059814,1.2323267459869385,1.232179045677185,1.232031226158142,1.2318836450576782,1.2317359447479248,1.2315884828567505,1.2314410209655762,1.2312934398651123,1.231146216392517,1.2309987545013428,1.2308515310287476,1.2307043075561523,1.2305572032928467,1.2304099798202515,1.2302628755569458,1.2301158905029297,1.2299690246582031,1.229822039604187,1.2296751737594604,1.2295284271240234,1.2293815612792969,1.2292349338531494,1.229088306427002,1.228941559791565,1.2287951707839966,1.2286486625671387,1.2285021543502808,1.2283557653427124,1.2282094955444336,1.2280632257461548,1.227916955947876,1.2277708053588867,1.2276246547698975,1.2274785041809082,1.227332592010498,1.227186679840088,1.2270407676696777,1.2268948554992676,1.2267489433288574,1.2266032695770264,1.2264574766159058,1.2263119220733643,1.2261662483215332,1.2260206937789917,1.2258751392364502,1.2257297039031982,1.2255842685699463,1.2254390716552734,1.2252936363220215,1.2251484394073486,1.2250032424926758,1.2248581647872925,1.2247130870819092,1.2245680093765259,1.2244229316711426,1.2242780923843384,1.2241332530975342,1.22398841381073,1.2238436937332153,1.2236988544464111,1.2235541343688965,1.2234095335006714,1.2232649326324463,1.2231204509735107,1.2229759693145752,1.2228316068649292,1.2226872444152832,1.2225428819656372,1.2223986387252808,1.2222543954849243,1.2221102714538574,1.2219661474227905,1.2218220233917236,1.2216780185699463,1.2215341329574585,1.2213902473449707,1.221246361732483,1.2211024761199951,1.2209587097167969,1.2208150625228882,1.2206714153289795,1.2205277681350708,1.2203842401504517,1.2202407121658325,1.220097303390503,1.2199538946151733,1.2198104858398438,1.2196671962738037,1.2195239067077637,1.2193807363510132,1.2192375659942627,1.2190945148468018,1.2189514636993408,1.2188084125518799,1.2186654806137085,1.218522548675537,1.2183797359466553,1.2182369232177734,1.2180942296981812,1.2179515361785889,1.2178088426589966,1.2176662683486938,1.2175236940383911,1.217381238937378,1.2172387838363647,1.2170963287353516,1.216953992843628,1.2168116569519043,1.2166694402694702,1.2165272235870361,1.2163851261138916,1.216243028640747,1.2161009311676025,1.2159589529037476,1.2158169746398926,1.2156751155853271,1.2155332565307617,1.2153913974761963,1.2152496576309204,1.215108036994934,1.2149664163589478,1.2148247957229614,1.214683175086975,1.2145416736602783,1.2144001722335815,1.2142587900161743,1.2141175270080566,1.2139761447906494,1.2138348817825317,1.2136937379837036,1.2135525941848755,1.2134114503860474,1.2132704257965088,1.2131294012069702,1.2129883766174316,1.2128475904464722,1.2127066850662231,1.2125657796859741,1.2124251127243042,1.2122844457626343,1.2121437788009644,1.2120031118392944,1.211862564086914,1.2117220163345337,1.2115814685821533,1.2114410400390625,1.2113007307052612,1.21116042137146,1.2110201120376587,1.2108798027038574,1.2107396125793457,1.210599660873413,1.2104594707489014,1.2103195190429688,1.2101794481277466,1.2100396156311035,1.209899663925171,1.2097598314285278,1.2096199989318848,1.2094802856445312,1.2093405723571777,1.2092009782791138,1.2090613842010498,1.2089217901229858,1.2087823152542114,1.208642840385437,1.2085034847259521,1.2083641290664673,1.2082247734069824,1.208085536956787,1.2079463005065918,1.207807183265686,1.2076680660247803,1.2075289487838745,1.2073899507522583,1.2072510719299316,1.2071120738983154,1.2069731950759888,1.2068344354629517,1.206695556640625,1.206556797027588,1.2064181566238403,1.2062795162200928,1.2061409950256348,1.2060024738311768,1.2058639526367188,1.2057255506515503,1.2055870294570923,1.2054487466812134,1.2053104639053345,1.2051721811294556,1.2050340175628662,1.2048957347869873,1.2047576904296875,1.2046196460723877,1.204481601715088,1.2043436765670776,1.2042057514190674,1.2040679454803467,1.2039300203323364,1.2037922143936157,1.2036545276641846,1.2035168409347534,1.2033792734146118,1.2032415866851807,1.2031041383743286,1.202966570854187,1.202829122543335,1.202691674232483,1.2025543451309204,1.202417016029358,1.202279806137085,1.2021427154541016,1.2020055055618286,1.2018682956695557,1.2017312049865723,1.2015942335128784,1.2014572620391846,1.2013202905654907,1.2011834383010864,1.2010465860366821,1.2009098529815674,1.200773000717163,1.2006362676620483,1.2004996538162231,1.2003631591796875,1.2002265453338623,1.200089931488037,1.199953556060791,1.199817180633545,1.1996806859970093,1.1995444297790527,1.1994081735610962,1.1992719173431396,1.1991357803344727,1.1989995241165161,1.1988635063171387,1.1987274885177612,1.1985914707183838,1.198455572128296,1.1983195543289185,1.1981837749481201,1.1980478763580322,1.1979120969772339,1.197776436805725,1.1976407766342163,1.1975051164627075,1.1973695755004883,1.197234034538269,1.1970984935760498,1.1969630718231201,1.1968276500701904,1.1966923475265503,1.1965569257736206,1.19642174243927,1.1962865591049194,1.1961513757705688,1.1960161924362183,1.1958811283111572,1.1957460641860962,1.1956111192703247,1.1954761743545532,1.1953412294387817,1.1952065229415894,1.1950715780258179,1.1949368715286255,1.194802165031433,1.1946674585342407,1.194532871246338,1.1943981647491455,1.1942638158798218,1.194129228591919,1.1939947605133057,1.193860411643982,1.1937260627746582,1.1935917139053345,1.1934574842453003,1.1933232545852661,1.1931891441345215,1.1930549144744873,1.1929209232330322,1.1927868127822876,1.1926528215408325,1.192518949508667,1.192384958267212,1.1922510862350464,1.1921173334121704,1.1919835805892944,1.191849946975708,1.191716194152832,1.1915825605392456,1.1914489269256592,1.1913155317306519,1.191182017326355,1.191048502922058,1.1909151077270508,1.1907817125320435,1.1906484365463257,1.190515160560608,1.1903820037841797,1.190248727798462,1.1901156902313232,1.1899826526641846,1.1898494958877563,1.1897164583206177,1.1895835399627686,1.1894506216049194,1.1893178224563599,1.1891849040985107,1.1890522241592407,1.1889194250106812,1.1887867450714111,1.1886540651321411,1.1885215044021606,1.1883889436721802,1.1882563829421997,1.1881239414215088,1.1879916191101074,1.1878591775894165,1.1877268552780151,1.1875945329666138,1.1874622106552124,1.1873300075531006,1.1871979236602783,1.187065839767456,1.1869337558746338,1.1868016719818115,1.1866697072982788,1.186537742614746,1.186405897140503,1.1862740516662598,1.1861422061920166,1.186010479927063,1.1858787536621094,1.1857470273971558,1.1856154203414917,1.1854839324951172,1.1853523254394531,1.185220718383789,1.1850894689559937,1.1849579811096191,1.1848266124725342,1.1846952438354492,1.1845639944076538,1.1844327449798584,1.184301495552063,1.1841703653335571,1.1840393543243408,1.183908224105835,1.1837772130966187,1.1836462020874023,1.1835153102874756,1.1833844184875488,1.183253526687622,1.1831227540969849,1.1829919815063477,1.182861328125,1.1827306747436523,1.1826000213623047,1.1824694871902466,1.182338833808899,1.1822082996368408,1.1820778846740723,1.1819474697113037,1.1818170547485352,1.1816867589950562,1.1815565824508667,1.1814262866973877,1.1812961101531982,1.1811659336090088,1.1810357570648193,1.180905818939209,1.180775761604309,1.1806457042694092,1.1805158853530884,1.180385947227478,1.1802560091018677,1.1801261901855469,1.1799964904785156,1.1798667907714844,1.1797369718551636,1.1796073913574219,1.1794778108596802,1.1793482303619385,1.1792187690734863,1.1790891885757446,1.178959846496582,1.1788305044174194,1.1787011623382568,1.1785718202590942,1.1784425973892212,1.1783133745193481,1.1781842708587646,1.1780550479888916,1.177925944328308,1.1777969598770142,1.1776678562164307,1.1775389909744263,1.1774100065231323,1.177281141281128,1.177152395248413,1.1770236492156982,1.1768947839736938,1.1767661571502686,1.1766375303268433,1.1765087842941284,1.1763802766799927,1.176251769065857,1.1761231422424316,1.175994873046875,1.1758663654327393,1.175737977027893,1.1756097078323364,1.1754814386367798,1.1753531694412231,1.1752249002456665,1.175096869468689,1.1749687194824219,1.1748405694961548,1.1747125387191772,1.1745846271514893,1.1744565963745117,1.1743286848068237,1.1742007732391357,1.1740729808807373,1.1739453077316284,1.17381751537323,1.173689842224121,1.1735621690750122,1.1734346151351929,1.173306941986084,1.1731793880462646,1.1730519533157349,1.172924518585205,1.1727970838546753,1.172669768333435,1.1725423336029053,1.1724151372909546,1.172287940979004,1.1721606254577637,1.1720335483551025,1.1719063520431519,1.1717792749404907,1.1716523170471191,1.1715253591537476,1.171398401260376,1.1712714433670044,1.1711446046829224,1.1710177659988403,1.1708909273147583,1.1707642078399658,1.1706374883651733,1.1705107688903809,1.1703842878341675,1.1702576875686646,1.1701310873031616,1.1700046062469482,1.1698781251907349,1.169751763343811,1.1696254014968872,1.1694990396499634,1.1693726778030396,1.1692464351654053,1.1691203117370605,1.1689940690994263,1.1688679456710815,1.1687418222427368,1.1686158180236816,1.1684898138046265,1.1683638095855713,1.1682379245758057,1.16811203956604,1.1679861545562744,1.1678603887557983,1.1677346229553223,1.1676088571548462,1.1674832105636597,1.1673575639724731,1.1672320365905762,1.1671065092086792,1.1669808626174927,1.1668553352355957,1.1667300462722778,1.1666046380996704,1.166479229927063,1.1663539409637451,1.1662286520004272,1.1661033630371094,1.165978193283081,1.1658530235290527,1.165727972984314,1.1656028032302856,1.1654777526855469,1.1653528213500977,1.1652278900146484,1.1651028394699097,1.16497802734375,1.1648532152175903,1.1647284030914307,1.164603590965271,1.1644788980484009,1.1643543243408203,1.1642296314239502,1.1641050577163696,1.163980484008789,1.163856029510498,1.163731575012207,1.163607120513916,1.163482666015625,1.1633583307266235,1.163233995437622,1.1631097793579102,1.1629854440689087,1.1628612279891968,1.1627371311187744,1.162613034248352,1.1624889373779297,1.1623649597167969,1.1622408628463745,1.1621168851852417,1.1619930267333984,1.1618691682815552,1.161745309829712,1.1616215705871582,1.161497712135315,1.1613739728927612,1.161250352859497,1.161126732826233,1.1610031127929688,1.1608796119689941,1.16075599193573,1.1606324911117554,1.1605091094970703,1.1603857278823853,1.1602623462677002,1.1601390838623047,1.1600157022476196,1.1598924398422241,1.1597692966461182,1.1596461534500122,1.1595230102539062,1.1593998670578003,1.1592768430709839,1.1591538190841675,1.159030795097351,1.1589078903198242,1.1587849855422974,1.15866219997406,1.1585392951965332,1.158416509628296,1.1582938432693481,1.1581711769104004,1.1580485105514526,1.1579258441925049,1.1578031778335571,1.1576807498931885,1.1575582027435303,1.1574357748031616,1.157313346862793,1.1571909189224243,1.1570686101913452,1.1569463014602661,1.156823992729187,1.1567018032073975,1.156579613685608,1.1564574241638184,1.1563353538513184,1.1562132835388184,1.1560912132263184,1.155969262123108,1.1558473110198975,1.155725359916687,1.1556034088134766,1.1554815769195557,1.1553598642349243,1.1552380323410034,1.155116319656372,1.1549946069717407,1.154873013496399,1.1547513008117676,1.1546297073364258,1.1545082330703735,1.1543867588043213,1.154265284538269,1.1541438102722168,1.154022455215454,1.1539011001586914,1.1537798643112183,1.1536585092544556,1.1535372734069824,1.1534161567687988,1.1532949209213257,1.153173804283142,1.1530526876449585,1.1529316902160645,1.1528106927871704,1.1526896953582764,1.1525688171386719,1.1524479389190674,1.152327060699463,1.1522061824798584,1.1520854234695435,1.151964783668518,1.1518440246582031,1.1517233848571777,1.1516027450561523,1.151482105255127,1.1513617038726807,1.1512410640716553,1.151120662689209,1.1510001420974731,1.1508797407150269,1.1507594585418701,1.1506391763687134,1.1505188941955566,1.1503986120224,1.1502783298492432,1.1501582860946655,1.1500381231307983,1.1499179601669312,1.1497979164123535,1.1496779918670654,1.1495579481124878,1.1494379043579102,1.1493180990219116,1.1491981744766235,1.149078369140625,1.1489585638046265,1.1488388776779175,1.148719072341919,1.14859938621521,1.1484798192977905,1.148360252380371,1.1482406854629517,1.1481211185455322,1.1480016708374023,1.147882103919983,1.147762656211853,1.1476433277130127,1.1475239992141724,1.147404670715332,1.1472854614257812,1.147166132926941,1.1470469236373901,1.146927833557129,1.1468087434768677,1.1466896533966064,1.1465705633163452,1.1464515924453735,1.1463326215744019,1.1462136507034302,1.146094799041748,1.145975947380066,1.1458570957183838,1.1457382440567017,1.1456196308135986,1.1455007791519165,1.1453821659088135,1.145263433456421,1.1451449394226074,1.1450263261795044,1.1449077129364014,1.144789218902588,1.144670844078064,1.14455246925354,1.1444339752197266,1.1443157196044922,1.1441973447799683,1.1440790891647339,1.1439608335494995,1.1438426971435547,1.1437245607376099,1.1436063051223755,1.1434882879257202,1.143370270729065,1.1432522535324097,1.1431342363357544,1.1430163383483887,1.142898440361023,1.1427804231643677,1.1426626443862915,1.1425448656082153,1.1424270868301392,1.1423094272613525,1.1421916484832764,1.1420739889144897,1.1419564485549927,1.141838788986206,1.141721248626709,1.1416038274765015,1.141486406326294,1.1413688659667969,1.1412514448165894,1.1411341428756714,1.1410168409347534,1.1408995389938354,1.1407822370529175,1.140665054321289,1.1405478715896606,1.1404306888580322,1.1403136253356934,1.1401965618133545,1.1400794982910156,1.1399624347686768,1.1398454904556274,1.1397285461425781,1.1396117210388184,1.139494776725769,1.1393780708312988,1.139261245727539,1.1391444206237793,1.139027714729309,1.1389111280441284,1.1387944221496582,1.1386778354644775,1.1385612487792969,1.1384446620941162,1.138328194618225,1.138211727142334,1.1380952596664429,1.1379789113998413,1.1378625631332397,1.1377463340759277,1.1376299858093262,1.1375137567520142,1.1373975276947021,1.1372812986373901,1.1371651887893677,1.1370490789413452,1.1369330883026123,1.1368169784545898,1.136700987815857,1.136584997177124,1.1364691257476807,1.1363531351089478,1.136237382888794,1.1361215114593506,1.1360056400299072,1.1358898878097534,1.1357742547988892,1.135658621788025,1.135542869567871,1.1354273557662964,1.1353117227554321,1.1351962089538574,1.1350806951522827,1.134965181350708,1.1348497867584229,1.1347343921661377,1.1346189975738525,1.1345036029815674,1.1343884468078613,1.1342731714248657,1.1341578960418701,1.134042739868164,1.133927583694458,1.133812427520752,1.1336973905563354,1.133582353591919,1.1334673166275024,1.1333523988723755,1.133237361907959,1.133122444152832,1.1330076456069946,1.1328928470611572,1.1327780485153198,1.1326632499694824,1.1325485706329346,1.1324337720870972,1.1323190927505493,1.1322044134140015,1.1320899724960327,1.1319752931594849,1.1318608522415161,1.1317462921142578,1.1316319704055786,1.1315174102783203,1.1314030885696411,1.131288766860962,1.1311744451522827,1.1310601234436035,1.1309458017349243,1.1308315992355347,1.1307175159454346,1.130603313446045,1.1304892301559448,1.1303751468658447,1.1302610635757446,1.130147099494934,1.1300331354141235,1.1299192905426025,1.129805326461792,1.129691481590271,1.12957763671875,1.129463791847229,1.129349946975708,1.1292363405227661,1.1291226148605347,1.1290088891983032,1.1288954019546509,1.1287816762924194,1.128668189048767,1.1285545825958252,1.1284410953521729,1.12832772731781,1.1282143592834473,1.128100872039795,1.1279875040054321,1.1278742551803589,1.1277610063552856,1.1276477575302124,1.1275345087051392,1.127421259880066,1.1273082494735718,1.1271950006484985,1.1270818710327148,1.1269688606262207,1.1268559694290161,1.126742959022522,1.1266299486160278,1.1265170574188232,1.1264041662216187,1.1262913942337036,1.126178503036499,1.126065731048584,1.1259530782699585,1.1258403062820435,1.125727653503418,1.1256150007247925,1.125502347946167,1.125389814376831,1.1252772808074951,1.1251647472381592,1.1250523328781128,1.1249399185180664,1.12482750415802,1.1247150897979736,1.1246027946472168,1.12449049949646,1.1243782043457031,1.1242660284042358,1.124153733253479,1.1240416765213013,1.1239293813705444,1.1238174438476562,1.123705267906189,1.1235932111740112,1.123481273651123,1.1233693361282349,1.1232573986053467,1.1231454610824585,1.1230336427688599,1.1229218244552612,1.1228100061416626,1.122698187828064,1.1225864887237549,1.1224747896194458,1.1223630905151367,1.1222515106201172,1.1221399307250977,1.1220283508300781,1.1219167709350586,1.1218053102493286,1.1216938495635986,1.1215823888778687,1.1214709281921387,1.1213595867156982,1.1212483644485474,1.121137022972107,1.1210256814956665,1.1209144592285156,1.1208032369613647,1.1206921339035034,1.1205809116363525,1.1204699277877808,1.1203588247299194,1.120247721672058,1.1201367378234863,1.1200257539749146,1.1199148893356323,1.11980402469635,1.1196930408477783,1.1195822954177856,1.119471549987793,1.1193606853485107,1.119249939918518,1.119139313697815,1.1190285682678223,1.1189179420471191,1.118807315826416,1.1186968088150024,1.1185861825942993,1.1184756755828857,1.1183651685714722,1.1182547807693481,1.1181443929672241,1.1180340051651],"x":[0.01,0.010157936825269892,0.010315873650539785,0.010473810475809676,0.010631747301079568,0.01078968412634946,0.010947620951619353,0.011105557776889244,0.011263494602159136,0.011421431427429029,0.01157936825269892,0.011737305077968812,0.011895241903238705,0.012053178728508597,0.012211115553778488,0.012369052379048381,0.012526989204318273,0.012684926029588164,0.012842862854858058,0.01300079968012795,0.01315873650539784,0.013316673330667732,0.013474610155937625,0.013632546981207517,0.013790483806477408,0.013948420631747302,0.014106357457017193,0.014264294282287085,0.014422231107556978,0.01458016793282687,0.01473810475809676,0.014896041583366654,0.015053978408636546,0.015211915233906437,0.01536985205917633,0.015527788884446222,0.015685725709716113,0.015843662534986005,0.016001599360255896,0.01615953618552579,0.016317473010795683,0.016475409836065574,0.016633346661335466,0.016791283486605357,0.01694922031187525,0.01710715713714514,0.017265093962415035,0.017423030787684927,0.01758096761295482,0.01773890443822471,0.0178968412634946,0.018054778088764493,0.018212714914034388,0.01837065173930428,0.01852858856457417,0.018686525389844062,0.018844462215113954,0.019002399040383845,0.01916033586565374,0.01931827269092363,0.019476209516193523,0.019634146341463415,0.019792083166733306,0.019950019992003198,0.02010795681727309,0.020265893642542984,0.020423830467812876,0.020581767293082767,0.02073970411835266,0.02089764094362255,0.02105557776889244,0.021213514594162337,0.021371451419432228,0.02152938824470212,0.02168732506997201,0.021845261895241903,0.022003198720511794,0.022161135545781686,0.02231907237105158,0.022477009196321472,0.022634946021591364,0.022792882846861255,0.022950819672131147,0.023108756497401038,0.023266693322670933,0.023424630147940825,0.023582566973210716,0.023740503798480608,0.0238984406237505,0.02405637744902039,0.024214314274290286,0.024372251099560177,0.02453018792483007,0.02468812475009996,0.02484606157536985,0.025003998400639743,0.025161935225909635,0.02531987205117953,0.02547780887644942,0.025635745701719313,0.025793682526989204,0.025951619352259096,0.026109556177528987,0.026267493002798882,0.026425429828068774,0.026583366653338665,0.026741303478608557,0.026899240303878448,0.02705717712914834,0.02721511395441823,0.027373050779688126,0.027530987604958018,0.02768892443022791,0.0278468612554978,0.028004798080767692,0.028162734906037584,0.02832067173130748,0.02847860855657737,0.02863654538184726,0.028794482207117153,0.028952419032387045,0.029110355857656936,0.02926829268292683,0.029426229508196722,0.029584166333466614,0.029742103158736505,0.029900039984006397,0.03005797680927629,0.03021591363454618,0.030373850459816075,0.030531787285085966,0.030689724110355858,0.03084766093562575,0.03100559776089564,0.031163534586165532,0.031321471411435424,0.031479408236705315,0.03163734506197521,0.031795281887245105,0.031953218712515,0.03211115553778489,0.03226909236305478,0.03242702918832467,0.03258496601359456,0.032742902838864454,0.032900839664134346,0.03305877648940424,0.03321671331467413,0.03337465013994402,0.03353258696521391,0.0336905237904838,0.0338484606157537,0.03400639744102359,0.034164334266293485,0.034322271091563376,0.03448020791683327,0.03463814474210316,0.03479608156737305,0.03495401839264294,0.035111955217912834,0.035269892043182725,0.03542782886845262,0.03558576569372251,0.0357437025189924,0.0359016393442623,0.03605957616953219,0.03621751299480208,0.03637544982007197,0.036533386645341864,0.036691323470611756,0.03684926029588165,0.03700719712115154,0.03716513394642143,0.03732307077169132,0.03748100759696121,0.037638944422231105,0.037796881247500996,0.037954818072770895,0.038112754898040786,0.03827069172331068,0.03842862854858057,0.03858656537385046,0.03874450219912035,0.038902439024390244,0.039060375849660135,0.03921831267493003,0.03937624950019992,0.03953418632546981,0.0396921231507397,0.03985005997600959,0.04000799680127949,0.04016593362654938,0.040323870451819274,0.040481807277089166,0.04063974410235906,0.04079768092762895,0.04095561775289884,0.04111355457816873,0.04127149140343862,0.041429428228708515,0.041587365053978406,0.0417453018792483,0.041903238704518196,0.04206117552978809,0.04221911235505798,0.04237704918032787,0.04253498600559776,0.042692922830867654,0.042850859656137545,0.04300879648140744,0.04316673330667733,0.04332467013194722,0.04348260695721711,0.043640543782487,0.043798480607756894,0.04395641743302679,0.044114354258296684,0.044272291083566576,0.04443022790883647,0.04458816473410636,0.04474610155937625,0.04490403838464614,0.04506197520991603,0.045219912035185925,0.045377848860455816,0.04553578568572571,0.0456937225109956,0.04585165933626549,0.04600959616153539,0.04616753298680528,0.04632546981207517,0.046483406637345064,0.046641343462614955,0.04679928028788485,0.04695721711315474,0.04711515393842463,0.04727309076369452,0.04743102758896441,0.047588964414234304,0.047746901239504196,0.04790483806477409,0.048062774890043986,0.04822071171531388,0.04837864854058377,0.04853658536585366,0.04869452219112355,0.04885245901639344,0.049010395841663335,0.049168332666933226,0.04932626949220312,0.04948420631747301,0.0496421431427429,0.04980007996801279,0.049958016793282684,0.05011595361855258,0.05027389044382247,0.050431827269092365,0.050589764094362256,0.05074770091963215,0.05090563774490204,0.05106357457017193,0.05122151139544182,0.051379448220711714,0.051537385045981605,0.0516953218712515,0.05185325869652139,0.05201119552179129,0.05216913234706118,0.05232706917233107,0.05248500599760096,0.05264294282287085,0.052800879648140744,0.052958816473410636,0.05311675329868053,0.05327469012395042,0.05343262694922031,0.0535905637744902,0.05374850059976009,0.053906437425029985,0.05406437425029988,0.054222311075569775,0.054380247900839666,0.05453818472610956,0.05469612155137945,0.05485405837664934,0.05501199520191923,0.055169932027189124,0.055327868852459015,0.05548580567772891,0.0556437425029988,0.05580167932826869,0.05595961615353858,0.05611755297880848,0.05627548980407837,0.05643342662934826,0.056591363454618154,0.056749300279888046,0.05690723710515794,0.05706517393042783,0.05722311075569772,0.05738104758096761,0.0575389844062375,0.057696921231507395,0.057854858056777286,0.05801279488204718,0.058170731707317076,0.05832866853258697,0.05848660535785686,0.05864454218312675,0.05880247900839664,0.058960415833666534,0.059118352658936425,0.05927628948420632,0.05943422630947621,0.0595921631347461,0.05975009996001599,0.05990803678528588,0.060065973610555774,0.06022391043582567,0.060381847261095564,0.060539784086365456,0.06069772091163535,0.06085565773690524,0.06101359456217513,0.06117153138744502,0.06132946821271491,0.061487405037984805,0.061645341863254696,0.06180327868852459,0.06196121551379448,0.06211915233906438,0.06227708916433427,0.06243502598960416,0.06259296281487405,0.06275089964014394,0.06290883646541383,0.06306677329068372,0.06322471011595363,0.06338264694122352,0.06354058376649341,0.0636985205917633,0.06385645741703319,0.06401439424230308,0.06417233106757297,0.06433026789284287,0.06448820471811276,0.06464614154338265,0.06480407836865254,0.06496201519392243,0.06511995201919232,0.06527788884446221,0.0654358256697321,0.065593762495002,0.06575169932027189,0.06590963614554178,0.06606757297081167,0.06622550979608156,0.06638344662135146,0.06654138344662135,0.06669932027189124,0.06685725709716113,0.06701519392243102,0.06717313074770093,0.06733106757297082,0.06748900439824071,0.0676469412235106,0.06780487804878049,0.06796281487405038,0.06812075169932028,0.06827868852459017,0.06843662534986006,0.06859456217512995,0.06875249900039984,0.06891043582566973,0.06906837265093962,0.06922630947620952,0.06938424630147941,0.0695421831267493,0.06970011995201919,0.06985805677728908,0.07001599360255897,0.07017393042782887,0.07033186725309876,0.07048980407836865,0.07064774090363854,0.07080567772890843,0.07096361455417832,0.07112155137944821,0.07127948820471812,0.07143742502998801,0.0715953618552579,0.0717532986805278,0.07191123550579769,0.07206917233106758,0.07222710915633747,0.07238504598160736,0.07254298280687725,0.07270091963214714,0.07285885645741703,0.07301679328268693,0.07317473010795682,0.07333266693322671,0.0734906037584966,0.07364854058376649,0.07380647740903638,0.07396441423430627,0.07412235105957617,0.07428028788484606,0.07443822471011595,0.07459616153538584,0.07475409836065573,0.07491203518592562,0.07506997201119552,0.0752279088364654,0.07538584566173531,0.0755437824870052,0.0757017193122751,0.07585965613754499,0.07601759296281488,0.07617552978808477,0.07633346661335466,0.07649140343862455,0.07664934026389444,0.07680727708916434,0.07696521391443423,0.07712315073970412,0.07728108756497401,0.0774390243902439,0.0775969612155138,0.07775489804078368,0.07791283486605358,0.07807077169132347,0.07822870851659336,0.07838664534186325,0.07854458216713314,0.07870251899240303,0.07886045581767293,0.07901839264294282,0.07917632946821271,0.07933426629348261,0.0794922031187525,0.0796501399440224,0.07980807676929229,0.07996601359456218,0.08012395041983207,0.08028188724510196,0.08043982407037185,0.08059776089564175,0.08075569772091164,0.08091363454618153,0.08107157137145142,0.08122950819672131,0.0813874450219912,0.0815453818472611,0.08170331867253099,0.08186125549780088,0.08201919232307077,0.08217712914834066,0.08233506597361055,0.08249300279888044,0.08265093962415034,0.08280887644942023,0.08296681327469012,0.08312475009996001,0.0832826869252299,0.0834406237504998,0.0835985605757697,0.08375649740103959,0.08391443422630948,0.08407237105157937,0.08423030787684926,0.08438824470211916,0.08454618152738905,0.08470411835265894,0.08486205517792883,0.08501999200319872,0.08517792882846861,0.0853358656537385,0.0854938024790084,0.08565173930427829,0.08580967612954818,0.08596761295481807,0.08612554978008796,0.08628348660535785,0.08644142343062775,0.08659936025589764,0.08675729708116753,0.08691523390643742,0.08707317073170731,0.0872311075569772,0.08738904438224711,0.087546981207517,0.08770491803278689,0.08786285485805678,0.08802079168332667,0.08817872850859657,0.08833666533386646,0.08849460215913635,0.08865253898440624,0.08881047580967613,0.08896841263494602,0.08912634946021591,0.0892842862854858,0.0894422231107557,0.08960015993602559,0.08975809676129548,0.08991603358656537,0.09007397041183526,0.09023190723710516,0.09038984406237505,0.09054778088764494,0.09070571771291483,0.09086365453818472,0.09102159136345461,0.0911795281887245,0.0913374650139944,0.0914954018392643,0.09165333866453419,0.09181127548980408,0.09196921231507398,0.09212714914034387,0.09228508596561376,0.09244302279088365,0.09260095961615354,0.09275889644142343,0.09291683326669332,0.09307477009196322,0.09323270691723311,0.093390643742503,0.09354858056777289,0.09370651739304278,0.09386445421831267,0.09402239104358256,0.09418032786885246,0.09433826469412235,0.09449620151939224,0.09465413834466213,0.09481207516993202,0.09497001199520191,0.0951279488204718,0.0952858856457417,0.09544382247101159,0.0956017592962815,0.09575969612155139,0.09591763294682128,0.09607556977209117,0.09623350659736106,0.09639144342263095,0.09654938024790084,0.09670731707317073,0.09686525389844063,0.09702319072371052,0.09718112754898041,0.0973390643742503,0.09749700119952019,0.09765493802479008,0.09781287485005997,0.09797081167532987,0.09812874850059976,0.09828668532586965,0.09844462215113954,0.09860255897640943,0.09876049580167932,0.09891843262694922,0.0990763694522191,0.099234306277489,0.09939224310275889,0.0995501799280288,0.09970811675329869,0.09986605357856858,0.10002399040383847,0.10018192722910836,0.10033986405437825,0.10049780087964814,0.10065573770491804,0.10081367453018793,0.10097161135545782,0.10112954818072771,0.1012874850059976,0.1014454218312675,0.10160335865653738,0.10176129548180728,0.10191923230707717,0.10207716913234706,0.10223510595761695,0.10239304278288684,0.10255097960815673,0.10270891643342663,0.10286685325869652,0.10302479008396641,0.1031827269092363,0.10334066373450619,0.10349860055977608,0.10365653738504599,0.10381447421031588,0.10397241103558577,0.10413034786085566,0.10428828468612555,0.10444622151139545,0.10460415833666534,0.10476209516193523,0.10492003198720512,0.10507796881247501,0.1052359056377449,0.1053938424630148,0.10555177928828469,0.10570971611355458,0.10586765293882447,0.10602558976409436,0.10618352658936425,0.10634146341463414,0.10649940023990404,0.10665733706517393,0.10681527389044382,0.10697321071571371,0.1071311475409836,0.10728908436625349,0.10744702119152338,0.10760495801679329,0.10776289484206318,0.10792083166733307,0.10807876849260296,0.10823670531787286,0.10839464214314275,0.10855257896841264,0.10871051579368253,0.10886845261895242,0.10902638944422231,0.1091843262694922,0.1093422630947621,0.10950019992003199,0.10965813674530188,0.10981607357057177,0.10997401039584166,0.11013194722111155,0.11028988404638145,0.11044782087165134,0.11060575769692123,0.11076369452219112,0.11092163134746101,0.1110795681727309,0.1112375049980008,0.11139544182327069,0.11155337864854058,0.11171131547381048,0.11186925229908037,0.11202718912435027,0.11218512594962016,0.11234306277489005,0.11250099960015994,0.11265893642542983,0.11281687325069972,0.11297481007596961,0.1131327469012395,0.1132906837265094,0.11344862055177929,0.11360655737704918,0.11376449420231907,0.11392243102758896,0.11408036785285885,0.11423830467812875,0.11439624150339864,0.11455417832866853,0.11471211515393842,0.11487005197920831,0.1150279888044782,0.1151859256297481,0.11534386245501799,0.11550179928028788,0.11565973610555777,0.11581767293082768,0.11597560975609757,0.11613354658136746,0.11629148340663735,0.11644942023190724,0.11660735705717713,0.11676529388244702,0.11692323070771692,0.11708116753298681,0.1172391043582567,0.11739704118352659,0.11755497800879648,0.11771291483406637,0.11787085165933626,0.11802878848460616,0.11818672530987605,0.11834466213514594,0.11850259896041583,0.11866053578568572,0.11881847261095561,0.1189764094362255,0.1191343462614954,0.11929228308676529,0.11945021991203518,0.11960815673730507,0.11976609356257498,0.11992403038784487,0.12008196721311476,0.12023990403838465,0.12039784086365454,0.12055577768892443,0.12071371451419433,0.12087165133946422,0.12102958816473411,0.121187524990004,0.12134546181527389,0.12150339864054378,0.12166133546581367,0.12181927229108357,0.12197720911635346,0.12213514594162335,0.12229308276689324,0.12245101959216313,0.12260895641743302,0.12276689324270292,0.1229248300679728,0.1230827668932427,0.12324070371851259,0.12339864054378248,0.12355657736905237,0.12371451419432226,0.12387245101959217,0.12403038784486206,0.12418832467013195,0.12434626149540184,0.12450419832067174,0.12466213514594163,0.12482007197121152,0.12497800879648141,0.1251359456217513,0.1252938824470212,0.12545181927229107,0.12560975609756098,0.12576769292283088,0.12592562974810076,0.12608356657337066,0.12624150339864054,0.12639944022391045,0.12655737704918033,0.12671531387445023,0.1268732506997201,0.12703118752499,0.1271891243502599,0.1273470611755298,0.12750499800079967,0.12766293482606958,0.12782087165133946,0.12797880847660936,0.12813674530187924,0.12829468212714915,0.12845261895241902,0.12861055577768893,0.1287684926029588,0.1289264294282287,0.1290843662534986,0.1292423030787685,0.12940023990403837,0.12955817672930828,0.12971611355457816,0.12987405037984806,0.13003198720511797,0.13018992403038784,0.13034786085565775,0.13050579768092763,0.13066373450619753,0.1308216713314674,0.13097960815673731,0.1311375449820072,0.1312954818072771,0.13145341863254698,0.13161135545781688,0.13176929228308676,0.13192722910835666,0.13208516593362654,0.13224310275889645,0.13240103958416632,0.13255897640943623,0.1327169132347061,0.132874850059976,0.1330327868852459,0.1331907237105158,0.13334866053578567,0.13350659736105558,0.13366453418632546,0.13382247101159536,0.13398040783686527,0.13413834466213514,0.13429628148740505,0.13445421831267493,0.13461215513794483,0.1347700919632147,0.13492802878848462,0.1350859656137545,0.1352439024390244,0.13540183926429428,0.13555977608956418,0.13571771291483406,0.13587564974010397,0.13603358656537384,0.13619152339064375,0.13634946021591363,0.13650739704118353,0.1366653338664534,0.13682327069172331,0.1369812075169932,0.1371391443422631,0.13729708116753297,0.13745501799280288,0.13761295481807276,0.13777089164334266,0.13792882846861257,0.13808676529388245,0.13824470211915235,0.13840263894442223,0.13856057576969213,0.138718512594962,0.13887644942023192,0.1390343862455018,0.1391923230707717,0.13935025989604158,0.13950819672131148,0.13966613354658136,0.13982407037185127,0.13998200719712114,0.14013994402239105,0.14029788084766093,0.14045581767293083,0.1406137544982007,0.14077169132347062,0.1409296281487405,0.1410875649740104,0.14124550179928028,0.14140343862455018,0.14156137544982006,0.14171931227508996,0.14187724910035984,0.14203518592562975,0.14219312275089965,0.14235105957616953,0.14250899640143944,0.1426669332267093,0.14282487005197922,0.1429828068772491,0.143140743702519,0.14329868052778888,0.14345661735305879,0.14361455417832866,0.14377249100359857,0.14393042782886845,0.14408836465413835,0.14424630147940823,0.14440423830467813,0.144562175129948,0.14472011195521792,0.1448780487804878,0.1450359856057577,0.14519392243102758,0.14535185925629748,0.14550979608156736,0.14566773290683727,0.14582566973210714,0.14598360655737705,0.14614154338264695,0.14629948020791683,0.14645741703318674,0.14661535385845662,0.14677329068372652,0.1469312275089964,0.1470891643342663,0.14724710115953618,0.1474050379848061,0.14756297481007596,0.14772091163534587,0.14787884846061575,0.14803678528588565,0.14819472211115553,0.14835265893642544,0.1485105957616953,0.14866853258696522,0.1488264694122351,0.148984406237505,0.14914234306277488,0.14930027988804478,0.14945821671331466,0.14961615353858457,0.14977409036385445,0.14993202718912435,0.15008996401439426,0.15024790083966413,0.15040583766493404,0.15056377449020392,0.15072171131547382,0.1508796481407437,0.1510375849660136,0.15119552179128348,0.1513534586165534,0.15151139544182327,0.15166933226709317,0.15182726909236305,0.15198520591763295,0.15214314274290283,0.15230107956817274,0.15245901639344261,0.15261695321871252,0.1527748900439824,0.1529328268692523,0.15309076369452218,0.15324870051979209,0.15340663734506196,0.15356457417033187,0.15372251099560175,0.15388044782087165,0.15403838464614153,0.15419632147141143,0.15435425829668134,0.15451219512195122,0.15467013194722112,0.154828068772491,0.1549860055977609,0.15514394242303078,0.1553018792483007,0.15545981607357057,0.15561775289884047,0.15577568972411035,0.15593362654938026,0.15609156337465013,0.15624950019992004,0.15640743702518992,0.15656537385045982,0.1567233106757297,0.1568812475009996,0.15703918432626948,0.1571971211515394,0.15735505797680926,0.15751299480207917,0.15767093162734905,0.15782886845261895,0.15798680527788883,0.15814474210315874,0.15830267892842864,0.15846061575369852,0.15861855257896842,0.1587764894042383,0.1589344262295082,0.15909236305477809,0.159250299880048,0.15940823670531787,0.15956617353058777,0.15972411035585765,0.15988204718112756,0.16003998400639743,0.16019792083166734,0.16035585765693722,0.16051379448220712,0.160671731307477,0.1608296681327469,0.16098760495801678,0.1611455417832867,0.16130347860855657,0.16146141543382647,0.16161935225909635,0.16177728908436625,0.16193522590963613,0.16209316273490604,0.16225109956017594,0.16240903638544582,0.16256697321071573,0.1627249100359856,0.1628828468612555,0.1630407836865254,0.1631987205117953,0.16335665733706517,0.16351459416233508,0.16367253098760495,0.16383046781287486,0.16398840463814474,0.16414634146341464,0.16430427828868452,0.16446221511395442,0.1646201519392243,0.1647780887644942,0.16493602558976408,0.165093962415034,0.16525189924030387,0.16540983606557377,0.16556777289084365,0.16572570971611356,0.16588364654138343,0.16604158336665334,0.16619952019192324,0.16635745701719312,0.16651539384246303,0.1666733306677329,0.1668312674930028,0.1669892043182727,0.1671471411435426,0.16730507796881247,0.16746301479408238,0.16762095161935225,0.16777888844462216,0.16793682526989204,0.16809476209516194,0.16825269892043182,0.16841063574570173,0.1685685725709716,0.1687265093962415,0.1688844462215114,0.1690423830467813,0.16920031987205117,0.16935825669732107,0.16951619352259095,0.16967413034786086,0.16983206717313074,0.16999000399840064,0.17014794082367052,0.17030587764894042,0.17046381447421033,0.1706217512994802,0.1707796881247501,0.17093762495002,0.1710955617752899,0.17125349860055977,0.17141143542582968,0.17156937225109956,0.17172730907636946,0.17188524590163934,0.17204318272690924,0.17220111955217912,0.17235905637744903,0.1725169932027189,0.1726749300279888,0.1728328668532587,0.1729908036785286,0.17314874050379847,0.17330667732906838,0.17346461415433825,0.17362255097960816,0.17378048780487804,0.17393842463014794,0.17409636145541782,0.17425429828068772,0.17441223510595763,0.1745701719312275,0.1747281087564974,0.1748860455817673,0.1750439824070372,0.17520191923230707,0.17535985605757698,0.17551779288284686,0.17567572970811676,0.17583366653338664,0.17599160335865655,0.17614954018392642,0.17630747700919633,0.1764654138344662,0.1766233506597361,0.176781287485006,0.1769392243102759,0.17709716113554577,0.17725509796081568,0.17741303478608555,0.17757097161135546,0.17772890843662534,0.17788684526189524,0.17804478208716512,0.17820271891243503,0.17836065573770493,0.1785185925629748,0.17867652938824471,0.1788344662135146,0.1789924030387845,0.17915033986405438,0.17930827668932428,0.17946621351459416,0.17962415033986406,0.17978208716513394,0.17994002399040385,0.18009796081567372,0.18025589764094363,0.1804138344662135,0.1805717712914834,0.1807297081167533,0.1808876449420232,0.18104558176729307,0.18120351859256298,0.18136145541783286,0.18151939224310276,0.18167732906837264,0.18183526589364254,0.18199320271891242,0.18215113954418233,0.1823090763694522,0.1824670131947221,0.18262495001999202,0.1827828868452619,0.1829408236705318,0.18309876049580168,0.18325669732107158,0.18341463414634146,0.18357257097161137,0.18373050779688124,0.18388844462215115,0.18404638144742103,0.18420431827269093,0.1843622550979608,0.18452019192323071,0.1846781287485006,0.1848360655737705,0.18499400239904037,0.18515193922431028,0.18530987604958016,0.18546781287485006,0.18562574970011994,0.18578368652538985,0.18594162335065972,0.18609956017592963,0.1862574970011995,0.1864154338264694,0.18657337065173932,0.1867313074770092,0.1868892443022791,0.18704718112754898,0.18720511795281888,0.18736305477808876,0.18752099160335867,0.18767892842862854,0.18783686525389845,0.18799480207916833,0.18815273890443823,0.1883106757297081,0.18846861255497802,0.1886265493802479,0.1887844862055178,0.18894242303078768,0.18910035985605758,0.18925829668132746,0.18941623350659736,0.18957417033186724,0.18973210715713715,0.18989004398240703,0.19004798080767693,0.1902059176329468,0.1903638544582167,0.19052179128348662,0.1906797281087565,0.1908376649340264,0.19099560175929628,0.19115353858456618,0.19131147540983606,0.19146941223510597,0.19162734906037585,0.19178528588564575,0.19194322271091563,0.19210115953618553,0.1922590963614554,0.19241703318672532,0.1925749700119952,0.1927329068372651,0.19289084366253498,0.19304878048780488,0.19320671731307476,0.19336465413834467,0.19352259096361454,0.19368052778888445,0.19383846461415433,0.19399640143942423,0.1941543382646941,0.19431227508996401,0.1944702119152339,0.1946281487405038,0.1947860855657737,0.19494402239104358,0.1951019592163135,0.19525989604158336,0.19541783286685327,0.19557576969212315,0.19573370651739305,0.19589164334266293,0.19604958016793284,0.1962075169932027,0.19636545381847262,0.1965233906437425,0.1966813274690124,0.19683926429428228,0.19699720111955218,0.19715513794482206,0.19731307477009197,0.19747101159536185,0.19762894842063175,0.19778688524590163,0.19794482207117153,0.1981027588964414,0.19826069572171132,0.1984186325469812,0.1985765693722511,0.198734506197521,0.19889244302279088,0.1990503798480608,0.19920831667333067,0.19936625349860057,0.19952419032387045,0.19968212714914035,0.19984006397441023,0.19999800079968014,0.20015593762495001,0.20031387445021992,0.2004718112754898,0.2006297481007597,0.20078768492602958,0.20094562175129949,0.20110355857656936,0.20126149540183927,0.20141943222710915,0.20157736905237905,0.20173530587764893,0.20189324270291883,0.2020511795281887,0.20220911635345862,0.2023670531787285,0.2025249900039984,0.2026829268292683,0.20284086365453818,0.2029988004798081,0.20315673730507797,0.20331467413034787,0.20347261095561775,0.20363054778088766,0.20378848460615753,0.20394642143142744,0.20410435825669732,0.20426229508196722,0.2044202319072371,0.204578168732507,0.20473610555777688,0.2048940423830468,0.20505197920831666,0.20520991603358657,0.20536785285885645,0.20552578968412635,0.20568372650939623,0.20584166333466614,0.205999600159936,0.20615753698520592,0.2063154738104758,0.2064734106357457,0.2066313474610156,0.20678928428628549,0.2069472211115554,0.20710515793682527,0.20726309476209517,0.20742103158736505,0.20757896841263496,0.20773690523790483,0.20789484206317474,0.20805277888844462,0.20821071571371452,0.2083686525389844,0.2085265893642543,0.20868452618952418,0.2088424630147941,0.20900039984006397,0.20915833666533387,0.20931627349060375,0.20947421031587365,0.20963214714114353,0.20979008396641344,0.20994802079168332,0.21010595761695322,0.2102638944422231,0.210421831267493,0.21057976809276288,0.2107377049180328,0.2108956417433027,0.21105357856857257,0.21121151539384247,0.21136945221911235,0.21152738904438226,0.21168532586965214,0.21184326269492204,0.21200119952019192,0.21215913634546182,0.2123170731707317,0.2124750099960016,0.21263294682127148,0.2127908836465414,0.21294882047181127,0.21310675729708117,0.21326469412235105,0.21342263094762096,0.21358056777289083,0.21373850459816074,0.21389644142343062,0.21405437824870052,0.2142123150739704,0.2143702518992403,0.21452818872451018,0.2146861255497801,0.21484406237505,0.21500199920031987,0.21515993602558978,0.21531787285085965,0.21547580967612956,0.21563374650139944,0.21579168332666934,0.21594962015193922,0.21610755697720913,0.216265493802479,0.2164234306277489,0.21658136745301879,0.2167393042782887,0.21689724110355857,0.21705517792882847,0.21721311475409835,0.21737105157936826,0.21752898840463814,0.21768692522990804,0.21784486205517792,0.21800279888044782,0.2181607357057177,0.2183186725309876,0.21847660935625748,0.2186345461815274,0.2187924830067973,0.21895041983206717,0.21910835665733708,0.21926629348260696,0.21942423030787686,0.21958216713314674,0.21974010395841664,0.21989804078368652,0.22005597760895643,0.2202139144342263,0.2203718512594962,0.2205297880847661,0.220687724910036,0.22084566173530587,0.22100359856057578,0.22116153538584565,0.22131947221111556,0.22147740903638544,0.22163534586165534,0.22179328268692522,0.22195121951219512,0.222109156337465,0.2222670931627349,0.22242502998800479,0.2225829668132747,0.22274090363854457,0.22289884046381447,0.22305677728908438,0.22321471411435426,0.22337265093962416,0.22353058776489404,0.22368852459016395,0.22384646141543382,0.22400439824070373,0.2241623350659736,0.2243202718912435,0.2244782087165134,0.2246361455417833,0.22479408236705317,0.22495201919232308,0.22510995601759295,0.22526789284286286,0.22542582966813274,0.22558376649340264,0.22574170331867252,0.22589964014394243,0.2260575769692123,0.2262155137944822,0.2263734506197521,0.226531387445022,0.22668932427029187,0.22684726109556178,0.22700519792083168,0.22716313474610156,0.22732107157137146,0.22747900839664134,0.22763694522191125,0.22779488204718112,0.22795281887245103,0.2281107556977209,0.2282686925229908,0.2284266293482607,0.2285845661735306,0.22874250299880047,0.22890043982407038,0.22905837664934026,0.22921631347461016,0.22937425029988004,0.22953218712514994,0.22969012395041982,0.22984806077568973,0.2300059976009596,0.2301639344262295,0.2303218712514994,0.2304798080767693,0.23063774490203917,0.23079568172730908,0.23095361855257898,0.23111155537784886,0.23126949220311876,0.23142742902838864,0.23158536585365855,0.23174330267892843,0.23190123950419833,0.2320591763294682,0.23221711315473811,0.232375049980008,0.2325329868052779,0.23269092363054777,0.23284886045581768,0.23300679728108756,0.23316473410635746,0.23332267093162734,0.23348060775689725,0.23363854458216712,0.23379648140743703,0.2339544182327069,0.2341123550579768,0.2342702918832467,0.2344282287085166,0.23458616553378647,0.23474410235905638,0.23490203918432626,0.23505997600959616,0.23521791283486607,0.23537584966013594,0.23553378648540585,0.23569172331067573,0.23584966013594563,0.2360075969612155,0.23616553378648542,0.2363234706117553,0.2364814074370252,0.23663934426229508,0.23679728108756498,0.23695521791283486,0.23711315473810476,0.23727109156337464,0.23742902838864455,0.23758696521391443,0.23774490203918433,0.2379028388644542,0.2380607756897241,0.238218712514994,0.2383766493402639,0.23853458616553377,0.23869252299080368,0.23885045981607356,0.23900839664134346,0.23916633346661337,0.23932427029188325,0.23948220711715315,0.23964014394242303,0.23979808076769293,0.2399560175929628,0.24011395441823272,0.2402718912435026,0.2404298280687725,0.24058776489404238,0.24074570171931228,0.24090363854458216,0.24106157536985207,0.24121951219512194,0.24137744902039185,0.24153538584566173,0.24169332267093163,0.2418512594962015,0.24200919632147141,0.2421671331467413,0.2423250699720112,0.24248300679728108,0.24264094362255098,0.24279888044782086,0.24295681727309076,0.24311475409836067,0.24327269092363055,0.24343062774890045,0.24358856457417033,0.24374650139944024,0.2439044382247101,0.24406237504998002,0.2442203118752499,0.2443782487005198,0.24453618552578968,0.24469412235105958,0.24485205917632946,0.24500999600159937,0.24516793282686924,0.24532586965213915,0.24548380647740903,0.24564174330267893,0.2457996801279488,0.24595761695321872,0.2461155537784886,0.2462734906037585,0.24643142742902838,0.24658936425429828,0.24674730107956816,0.24690523790483807,0.24706317473010797,0.24722111155537785,0.24737904838064775,0.24753698520591763,0.24769492203118754,0.24785285885645741,0.24801079568172732,0.2481687325069972,0.2483266693322671,0.24848460615753698,0.24864254298280689,0.24880047980807676,0.24895841663334667,0.24911635345861655,0.24927429028388645,0.24943222710915633,0.24959016393442623,0.2497481007596961,0.24990603758496602,0.2500639744102359,0.2502219112355058,0.2503798480607757,0.25053778488604556,0.2506957217113155,0.25085365853658537,0.25101159536185524,0.2511695321871252,0.25132746901239505,0.25148540583766493,0.2516433426629348,0.25180127948820474,0.2519592163134746,0.2521171531387445,0.2522750899640144,0.2524330267892843,0.2525909636145542,0.25274890043982406,0.25290683726509394,0.2530647740903639,0.25322271091563375,0.25338064774090363,0.2535385845661735,0.25369652139144344,0.2538544582167133,0.2540123950419832,0.2541703318672531,0.254328268692523,0.2544862055177929,0.25464414234306276,0.25480207916833264,0.2549600159936026,0.25511795281887245,0.25527588964414233,0.25543382646941226,0.25559176329468214,0.255749700119952,0.2559076369452219,0.25606557377049183,0.2562235105957617,0.2563814474210316,0.25653938424630146,0.2566973210715714,0.25685525789684127,0.25701319472211115,0.257171131547381,0.25732906837265096,0.25748700519792084,0.2576449420231907,0.2578028788484606,0.2579608156737305,0.2581187524990004,0.2582766893242703,0.25843462614954016,0.2585925629748101,0.25875049980007997,0.25890843662534985,0.2590663734506197,0.25922431027588966,0.25938224710115954,0.2595401839264294,0.25969812075169935,0.2598560575769692,0.2600139944022391,0.260171931227509,0.2603298680527789,0.2604878048780488,0.26064574170331867,0.26080367852858855,0.2609616153538585,0.26111955217912836,0.26127748900439823,0.2614354258296681,0.26159336265493804,0.2617512994802079,0.2619092363054778,0.2620671731307477,0.2622251099560176,0.2623830467812875,0.26254098360655737,0.26269892043182724,0.2628568572570972,0.26301479408236705,0.26317273090763693,0.26333066773290686,0.26348860455817674,0.2636465413834466,0.2638044782087165,0.26396241503398643,0.2641203518592563,0.2642782886845262,0.26443622550979606,0.264594162335066,0.2647520991603359,0.26491003598560575,0.26506797281087563,0.26522590963614556,0.26538384646141544,0.2655417832866853,0.2656997201119552,0.26585765693722513,0.266015593762495,0.2661735305877649,0.26633146741303476,0.2664894042383047,0.26664734106357457,0.26680527788884445,0.2669632147141143,0.26712115153938426,0.26727908836465414,0.267437025189924,0.26759496201519395,0.2677528988404638,0.2679108356657337,0.2680687724910036,0.2682267093162735,0.2683846461415434,0.26854258296681327,0.26870051979208315,0.2688584566173531,0.26901639344262296,0.26917433026789284,0.2693322670931627,0.26949020391843265,0.2696481407437025,0.2698060775689724,0.2699640143942423,0.2701219512195122,0.2702798880447821,0.27043782487005197,0.27059576169532185,0.2707536985205918,0.27091163534586166,0.27106957217113153,0.2712275089964014,0.27138544582167135,0.2715433826469412,0.2717013194722111,0.27185925629748103,0.2720171931227509,0.2721751299480208,0.27233306677329067,0.2724910035985606,0.2726489404238305,0.27280687724910035,0.27296481407437023,0.27312275089964017,0.27328068772491004,0.2734386245501799,0.2735965613754498,0.27375449820071973,0.2739124350259896,0.2740703718512595,0.27422830867652936,0.2743862455017993,0.2745441823270692,0.27470211915233905,0.27486005597760893,0.27501799280287886,0.27517592962814874,0.2753338664534186,0.27549180327868855,0.27564974010395843,0.2758076769292283,0.2759656137544982,0.2761235505797681,0.276281487405038,0.2764394242303079,0.27659736105557775,0.2767552978808477,0.27691323470611756,0.27707117153138744,0.2772291083566573,0.27738704518192725,0.2775449820071971,0.277702918832467,0.2778608556577369,0.2780187924830068,0.2781767293082767,0.27833466613354657,0.27849260295881645,0.2786505397840864,0.27880847660935626,0.27896641343462614,0.279124350259896,0.27928228708516595,0.2794402239104358,0.2795981607357057,0.27975609756097564,0.2799140343862455,0.2800719712115154,0.28022990803678527,0.2803878448620552,0.2805457816873251,0.28070371851259496,0.28086165533786484,0.28101959216313477,0.28117752898840465,0.2813354658136745,0.2814934026389444,0.28165133946421433,0.2818092762894842,0.2819672131147541,0.28212514994002397,0.2822830867652939,0.2824410235905638,0.28259896041583366,0.28275689724110353,0.28291483406637347,0.28307277089164334,0.2832307077169132,0.2833886445421831,0.28354658136745303,0.2837045181927229,0.2838624550179928,0.2840203918432627,0.2841783286685326,0.2843362654938025,0.28449420231907235,0.2846521391443423,0.28481007596961216,0.28496801279488204,0.2851259496201519,0.28528388644542185,0.28544182327069173,0.2855997600959616,0.2857576969212315,0.2859156337465014,0.2860735705717713,0.2862315073970412,0.28638944422231105,0.286547381047581,0.28670531787285086,0.28686325469812074,0.2870211915233906,0.28717912834866055,0.28733706517393043,0.2874950019992003,0.28765293882447024,0.2878108756497401,0.28796881247501,0.28812674930027987,0.2882846861255498,0.2884426229508197,0.28860055977608956,0.28875849660135944,0.28891643342662937,0.28907437025189925,0.2892323070771691,0.289390243902439,0.28954818072770894,0.2897061175529788,0.2898640543782487,0.29002199120351857,0.2901799280287885,0.2903378648540584,0.29049580167932826,0.29065373850459814,0.29081167532986807,0.29096961215513795,0.2911275489804078,0.2912854858056777,0.29144342263094764,0.2916013594562175,0.2917592962814874,0.2919172331067573,0.2920751699320272,0.2922331067572971,0.29239104358256696,0.2925489804078369,0.29270691723310677,0.29286485405837664,0.2930227908836465,0.29318072770891646,0.29333866453418633,0.2934966013594562,0.2936545381847261,0.293812475009996,0.2939704118352659,0.2941283486605358,0.29428628548580565,0.2944442223110756,0.29460215913634547,0.29476009596161534,0.2949180327868852,0.29507596961215515,0.29523390643742503,0.2953918432626949,0.29554978008796484,0.2957077169132347,0.2958656537385046,0.2960235905637745,0.2961815273890444,0.2963394642143143,0.29649740103958416,0.29665533786485404,0.296813274690124,0.29697121151539385,0.29712914834066373,0.2972870851659336,0.29744502199120354,0.2976029588164734,0.2977608956417433,0.2979188324670132,0.2980767692922831,0.298234706117553,0.29839264294282286,0.29855057976809274,0.29870851659336267,0.29886645341863255,0.2990243902439024,0.2991823270691723,0.29934026389444224,0.2994982007197121,0.299656137544982,0.2998140743702519,0.2999720111955218,0.3001299480207917,0.30028788484606156,0.3004458216713315,0.30060375849660137,0.30076169532187125,0.3009196321471411,0.30107756897241106,0.30123550579768094,0.3013934426229508,0.3015513794482207,0.3017093162734906,0.3018672530987605,0.3020251899240304,0.30218312674930026,0.3023410635745702,0.30249900039984007,0.30265693722510995,0.3028148740503798,0.30297281087564976,0.30313074770091963,0.3032886845261895,0.3034466213514594,0.3036045581767293,0.3037624950019992,0.3039204318272691,0.304078368652539,0.3042363054778089,0.30439424230307877,0.30455217912834864,0.3047101159536186,0.30486805277888845,0.30502598960415833,0.3051839264294282,0.30534186325469814,0.305499800079968,0.3056577369052379,0.3058156737305078,0.3059736105557777,0.3061315473810476,0.30628948420631746,0.30644742103158734,0.3066053578568573,0.30676329468212715,0.30692123150739703,0.3070791683326669,0.30723710515793684,0.3073950419832067,0.3075529788084766,0.30771091563374653,0.3078688524590164,0.3080267892842863,0.30818472610955616,0.3083426629348261,0.308500599760096,0.30865853658536585,0.30881647341063573,0.30897441023590566,0.30913234706117554,0.3092902838864454,0.3094482207117153,0.3096061575369852,0.3097640943622551,0.309922031187525,0.31007996801279486,0.3102379048380648,0.31039584166333467,0.31055377848860455,0.3107117153138744,0.31086965213914436,0.31102758896441424,0.3111855257896841,0.311343462614954,0.3115013994402239,0.3116593362654938,0.3118172730907637,0.3119752099160336,0.3121331467413035,0.31229108356657337,0.31244902039184325,0.3126069572171132,0.31276489404238306,0.31292283086765293,0.3130807676929228,0.31323870451819275,0.3133966413434626,0.3135545781687325,0.3137125149940024,0.3138704518192723,0.3140283886445422,0.31418632546981207,0.31434426229508194,0.3145021991203519,0.31466013594562176,0.31481807277089163,0.3149760095961615,0.31513394642143144,0.3152918832467013,0.3154498200719712,0.3156077568972411,0.315765693722511,0.3159236305477809,0.31608156737305076,0.3162395041983207,0.3163974410235906,0.31655537784886045,0.31671331467413033,0.31687125149940026,0.31702918832467014,0.31718712514994,0.3173450619752099,0.31750299880047983,0.3176609356257497,0.3178188724510196,0.31797680927628946,0.3181347461015594,0.3182926829268293,0.31845061975209915,0.31860855657736903,0.31876649340263896,0.31892443022790884,0.3190823670531787,0.3192403038784486,0.31939824070371853,0.3195561775289884,0.3197141143542583,0.3198720511795282,0.3200299880047981,0.32018792483006797,0.32034586165533785,0.3205037984806078,0.32066173530587766,0.32081967213114754,0.3209776089564174,0.32113554578168735,0.3212934826069572,0.3214514194322271,0.321609356257497,0.3217672930827669,0.3219252299080368,0.32208316673330667,0.32224110355857655,0.3223990403838465,0.32255697720911636,0.32271491403438624,0.3228728508596561,0.32303078768492605,0.3231887245101959,0.3233466613354658,0.3235045981607357,0.3236625349860056,0.3238204718112755,0.32397840863654537,0.3241363454618153,0.3242942822870852,0.32445221911235506,0.32461015593762493,0.32476809276289487,0.32492602958816474,0.3250839664134346,0.3252419032387045,0.32539984006397443,0.3255577768892443,0.3257157137145142,0.32587365053978407,0.326031587365054,0.3261895241903239,0.32634746101559375,0.32650539784086363,0.32666333466613356,0.32682127149140344,0.3269792083166733,0.3271371451419432,0.32729508196721313,0.327453018792483,0.3276109556177529,0.32776889244302276,0.3279268292682927,0.3280847660935626,0.32824270291883245,0.3284006397441024,0.32855857656937226,0.32871651339464214,0.328874450219912,0.32903238704518195,0.32919032387045183,0.3293482606957217,0.3295061975209916,0.3296641343462615,0.3298220711715314,0.3299800079968013,0.33013794482207115,0.3302958816473411,0.33045381847261096,0.33061175529788084,0.3307696921231507,0.33092762894842065,0.3310855657736905,0.3312435025989604,0.3314014394242303,0.3315593762495002,0.3317173130747701,0.33187524990003997,0.3320331867253099,0.3321911235505798,0.33234906037584966,0.33250699720111954,0.33266493402638947,0.33282287085165935,0.3329808076769292,0.3331387445021991,0.33329668132746904,0.3334546181527389,0.3336125549780088,0.33377049180327867,0.3339284286285486,0.3340863654538185,0.33424430227908836,0.33440223910435823,0.33456017592962817,0.33471811275489805,0.3348760495801679,0.3350339864054378,0.33519192323070773,0.3353498600559776,0.3355077968812475,0.33566573370651737,0.3358236705317873,0.3359816073570572,0.33613954418232705,0.336297481007597,0.33645541783286687,0.33661335465813674,0.3367712914834066,0.33692922830867655,0.33708716513394643,0.3372451019592163,0.3374030387844862,0.3375609756097561,0.337718912435026,0.3378768492602959,0.33803478608556575,0.3381927229108357,0.33835065973610556,0.33850859656137544,0.3386665333866453,0.33882447021191525,0.33898240703718513,0.339140343862455,0.3392982806877249,0.3394562175129948,0.3396141543382647,0.3397720911635346,0.33993002798880445,0.3400879648140744,0.34024590163934426,0.34040383846461414,0.34056177528988407,0.34071971211515395,0.3408776489404238,0.3410355857656937,0.34119352259096364,0.3413514594162335,0.3415093962415034,0.34166733306677327,0.3418252698920432,0.3419832067173131,0.34214114354258296,0.34229908036785284,0.34245701719312277,0.34261495401839265,0.3427728908436625,0.3429308276689324,0.34308876449420234,0.3432467013194722,0.3434046381447421,0.34356257497001197,0.3437205117952819,0.3438784486205518,0.34403638544582166,0.3441943222710916,0.34435225909636147,0.34451019592163135,0.3446681327469012,0.34482606957217116,0.34498400639744103,0.3451419432227109,0.3452998800479808,0.3454578168732507,0.3456157536985206,0.3457736905237905,0.34593162734906036,0.3460895641743303,0.34624750099960017,0.34640543782487004,0.3465633746501399,0.34672131147540985,0.34687924830067973,0.3470371851259496,0.3471951219512195,0.3473530587764894,0.3475109956017593,0.3476689324270292,0.34782686925229905,0.347984806077569,0.34814274290283886,0.34830067972810874,0.3484586165533787,0.34861655337864855,0.34877449020391843,0.3489324270291883,0.34909036385445824,0.3492483006797281,0.349406237504998,0.3495641743302679,0.3497221111555378,0.3498800479808077,0.35003798480607756,0.35019592163134744,0.3503538584566174,0.35051179528188725,0.35066973210715713,0.350827668932427,0.35098560575769694,0.3511435425829668,0.3513014794082367,0.35145941623350657,0.3516173530587765,0.3517752898840464,0.35193322670931626,0.35209116353458614,0.35224910035985607,0.35240703718512595,0.3525649740103958,0.35272291083566576,0.35288084766093564,0.3530387844862055,0.3531967213114754,0.3533546581367453,0.3535125949620152,0.3536705317872851,0.35382846861255496,0.3539864054378249,0.35414434226309477,0.35430227908836465,0.3544602159136345,0.35461815273890446,0.35477608956417434,0.3549340263894442,0.3550919632147141,0.355249900039984,0.3554078368652539,0.3555657736905238,0.35572371051579366,0.3558816473410636,0.35603958416633347,0.35619752099160334,0.3563554578168733,0.35651339464214316,0.35667133146741303,0.3568292682926829,0.35698720511795284,0.3571451419432227,0.3573030787684926,0.3574610155937625,0.3576189524190324,0.3577768892443023,0.35793482606957217,0.35809276289484204,0.358250699720112,0.35840863654538185,0.35856657337065173,0.3587245101959216,0.35888244702119154,0.3590403838464614,0.3591983206717313,0.3593562574970012,0.3595141943222711,0.359672131147541,0.35983006797281086,0.35998800479808074,0.3601459416233507,0.36030387844862055,0.36046181527389043,0.36061975209916036,0.36077768892443024,0.3609356257497001,0.36109356257497,0.36125149940023993,0.3614094362255098,0.3615673730507797,0.36172530987604956,0.3618832467013195,0.36204118352658937,0.36219912035185925,0.3623570571771291,0.36251499400239906,0.36267293082766894,0.3628308676529388,0.3629888044782087,0.3631467413034786,0.3633046781287485,0.3634626149540184,0.36362055177928826,0.3637784886045582,0.36393642542982807,0.36409436225509795,0.3642522990803678,0.36441023590563776,0.36456817273090764,0.3647261095561775,0.36488404638144745,0.3650419832067173,0.3651999200319872,0.3653578568572571,0.365515793682527,0.3656737305077969,0.36583166733306677,0.36598960415833665,0.3661475409836066,0.36630547780887646,0.36646341463414633,0.3666213514594162,0.36677928828468614,0.366937225109956,0.3670951619352259,0.3672530987604958,0.3674110355857657,0.3675689724110356,0.36772690923630547,0.36788484606157534,0.3680427828868453,0.36820071971211515,0.36835865653738503,0.36851659336265497,0.36867453018792484,0.3688324670131947,0.3689904038384646,0.36914834066373453,0.3693062774890044,0.3694642143142743,0.36962215113954416,0.3697800879648141,0.369938024790084,0.37009596161535385,0.37025389844062373,0.37041183526589366,0.37056977209116354,0.3707277089164334,0.3708856457417033,0.37104358256697323,0.3712015193922431,0.371359456217513,0.37151739304278286,0.3716753298680528,0.3718332666933227,0.37199120351859255,0.37214914034386243,0.37230707716913236,0.37246501399440224,0.3726229508196721,0.37278088764494205,0.3729388244702119,0.3730967612954818,0.3732546981207517,0.3734126349460216,0.3735705717712915,0.37372850859656137,0.37388644542183125,0.3740443822471012,0.37420231907237106,0.37436025589764094,0.3745181927229108,0.37467612954818075,0.3748340663734506,0.3749920031987205,0.3751499400239904,0.3753078768492603,0.3754658136745302,0.37562375049980007,0.37578168732506995,0.3759396241503399,0.37609756097560976,0.37625549780087963,0.37641343462614957,0.37657137145141945,0.3767293082766893,0.3768872451019592,0.37704518192722913,0.377203118752499,0.3773610555777689,0.37751899240303877,0.3776769292283087,0.3778348660535786,0.37799280287884846,0.37815073970411833,0.37830867652938827,0.37846661335465814,0.378624550179928,0.3787824870051979,0.37894042383046783,0.3790983606557377,0.3792562974810076,0.37941423430627746,0.3795721711315474,0.3797301079568173,0.37988804478208715,0.38004598160735703,0.38020391843262696,0.38036185525789684,0.3805197920831667,0.38067772890843665,0.38083566573370653,0.3809936025589764,0.3811515393842463,0.3813094762095162,0.3814674130347861,0.381625349860056,0.38178328668532585,0.3819412235105958,0.38209916033586566,0.38225709716113554,0.3824150339864054,0.38257297081167535,0.38273090763694523,0.3828888444622151,0.383046781287485,0.3832047181127549,0.3833626549380248,0.38352059176329467,0.38367852858856455,0.3838364654138345,0.38399440223910436,0.38415233906437424,0.3843102758896441,0.38446821271491405,0.3846261495401839,0.3847840863654538,0.38494202319072374,0.3850999600159936,0.3852578968412635,0.38541583366653337,0.3855737704918033,0.3857317073170732,0.38588964414234306,0.38604758096761294,0.38620551779288287,0.38636345461815275,0.3865213914434226,0.3866793282686925,0.38683726509396243,0.3869952019192323,0.3871531387445022,0.38731107556977207,0.387469012395042,0.3876269492203119,0.38778488604558176,0.38794282287085163,0.38810075969612157,0.38825869652139144,0.3884166333466613,0.38857457017193126,0.38873250699720113,0.388890443822471,0.3890483806477409,0.3892063174730108,0.3893642542982807,0.3895221911235506,0.38968012794882045,0.3898380647740904,0.38999600159936026,0.39015393842463014,0.3903118752499,0.39046981207516995,0.39062774890043983,0.3907856857257097,0.3909436225509796,0.3911015593762495,0.3912594962015194,0.3914174330267893,0.39157536985205915,0.3917333066773291,0.39189124350259896,0.39204918032786884,0.3922071171531387,0.39236505397840865,0.39252299080367853,0.3926809276289484,0.39283886445421834,0.3929968012794882,0.3931547381047581,0.393312674930028,0.3934706117552979,0.3936285485805678,0.39378648540583766,0.39394442223110754,0.39410235905637747,0.39426029588164735,0.3944182327069172,0.3945761695321871,0.39473410635745704,0.3948920431827269,0.3950499800079968,0.39520791683326667,0.3953658536585366,0.3955237904838065,0.39568172730907636,0.39583966413434624,0.39599760095961617,0.39615553778488605,0.3963134746101559,0.3964714114354258,0.39662934826069574,0.3967872850859656,0.3969452219112355,0.3971031587365054,0.3972610955617753,0.3974190323870452,0.39757696921231506,0.397734906037585,0.39789284286285487,0.39805077968812475,0.3982087165133946,0.39836665333866456,0.39852459016393443,0.3986825269892043,0.3988404638144742,0.3989984006397441,0.399156337465014,0.3993142742902839,0.39947221111555375,0.3996301479408237,0.39978808476609357,0.39994602159136344,0.4001039584166333,0.40026189524190325,0.40041983206717313,0.400577768892443,0.40073570571771294,0.4008936425429828,0.4010515793682527,0.4012095161935226,0.4013674530187925,0.4015253898440624,0.40168332666933226,0.40184126349460214,0.4019992003198721,0.40215713714514195,0.40231507397041183,0.4024730107956817,0.40263094762095164,0.4027888844462215,0.4029468212714914,0.4031047580967613,0.4032626949220312,0.4034206317473011,0.40357856857257096,0.40373650539784084,0.4038944422231108,0.40405237904838065,0.4042103158736505,0.4043682526989204,0.40452618952419034,0.4046841263494602,0.4048420631747301,0.405,0.4051579368252699,0.4053158736505398,0.40547381047580966,0.4056317473010796,0.40578968412634947,0.40594762095161935,0.4061055577768892,0.40626349460215916,0.40642143142742904,0.4065793682526989,0.4067373050779688,0.4068952419032387,0.4070531787285086,0.4072111155537785,0.40736905237904836,0.4075269892043183,0.40768492602958817,0.40784286285485805,0.4080007996801279,0.40815873650539786,0.40831667333066773,0.4084746101559376,0.4086325469812075,0.4087904838064774,0.4089484206317473,0.4091063574570172,0.4092642942822871,0.409422231107557,0.40958016793282687,0.40973810475809674,0.4098960415833667,0.41005397840863655,0.41021191523390643,0.4103698520591763,0.41052778888444624,0.4106857257097161,0.410843662534986,0.4110015993602559,0.4111595361855258,0.4113174730107957,0.41147540983606556,0.41163334666133544,0.4117912834866054,0.41194922031187525,0.41210715713714513,0.412265093962415,0.41242303078768494,0.4125809676129548,0.4127389044382247,0.41289684126349463,0.4130547780887645,0.4132127149140344,0.41337065173930426,0.4135285885645742,0.4136865253898441,0.41384446221511395,0.41400239904038383,0.41416033586565376,0.41431827269092364,0.4144762095161935,0.4146341463414634,0.4147920831667333,0.4149500199920032,0.4151079568172731,0.41526589364254296,0.4154238304678129,0.41558176729308277,0.41573970411835265,0.4158976409436225,0.41605557776889246,0.41621351459416234,0.4163714514194322,0.4165293882447021,0.416687325069972,0.4168452618952419,0.4170031987205118,0.4171611355457817,0.4173190723710516,0.41747700919632147,0.41763494602159135,0.4177928828468613,0.41795081967213116,0.41810875649740104,0.4182666933226709,0.41842463014794085,0.4185825669732107,0.4187405037984806,0.4188984406237505,0.4190563774490204,0.4192143142742903,0.41937225109956017,0.41953018792483004,0.4196881247501,0.41984606157536986,0.42000399840063973,0.4201619352259096,0.42031987205117954,0.4204778088764494,0.4206357457017193,0.4207936825269892,0.4209516193522591,0.421109556177529,0.42126749300279887,0.4214254298280688,0.4215833666533387,0.42174130347860855,0.42189924030387843,0.42205717712914836,0.42221511395441824,0.4223730507796881,0.422530987604958,0.42268892443022793,0.4228468612554978,0.4230047980807677,0.42316273490603756,0.4233206717313075,0.4234786085565774,0.42363654538184725,0.42379448220711713,0.42395241903238706,0.42411035585765694,0.4242682926829268,0.4244262295081967,0.42458416633346663,0.4247421031587365,0.4249000399840064,0.4250579768092763,0.4252159136345462,0.42537385045981607,0.42553178728508595,0.4256897241103559,0.42584766093562576,0.42600559776089564,0.4261635345861655,0.42632147141143545,0.4264794082367053,0.4266373450619752,0.4267952818872451,0.426953218712515,0.4271111555377849,0.42726909236305477,0.42742702918832465,0.4275849660135946,0.42774290283886446,0.42790083966413434,0.4280587764894042,0.42821671331467415,0.428374650139944,0.4285325869652139,0.4286905237904838,0.4288484606157537,0.4290063974410236,0.42916433426629347,0.4293222710915634,0.4294802079168333,0.42963814474210316,0.42979608156737303,0.42995401839264297,0.43011195521791284,0.4302698920431827,0.4304278288684526,0.43058576569372253,0.4307437025189924,0.4309016393442623,0.43105957616953217,0.4312175129948021,0.431375449820072,0.43153338664534185,0.43169132347061173,0.43184926029588167,0.43200719712115154,0.4321651339464214,0.4323230707716913,0.43248100759696123,0.4326389444222311,0.432796881247501,0.43295481807277086,0.4331127548980408,0.4332706917233107,0.43342862854858055,0.4335865653738505,0.43374450219912036,0.43390243902439024,0.4340603758496601,0.43421831267493005,0.43437624950019993,0.4345341863254698,0.4346921231507397,0.4348500599760096,0.4350079968012795,0.4351659336265494,0.43532387045181925,0.4354818072770892,0.43563974410235906,0.43579768092762894,0.4359556177528988,0.43611355457816875,0.4362714914034386,0.4364294282287085,0.4365873650539784,0.4367453018792483,0.4369032387045182,0.43706117552978807,0.437219112355058,0.4373770491803279,0.43753498600559776,0.43769292283086764,0.43785085965613757,0.43800879648140745,0.4381667333066773,0.4383246701319472,0.43848260695721714,0.438640543782487,0.4387984806077569,0.43895641743302677,0.4391143542582967,0.4392722910835666,0.43943022790883646,0.43958816473410633,0.43974610155937627,0.43990403838464615,0.440061975209916,0.4402199120351859,0.44037784886045583,0.4405357856857257,0.4406937225109956,0.44085165933626547,0.4410095961615354,0.4411675329868053,0.44132546981207516,0.4414834066373451,0.44164134346261497,0.44179928028788484,0.4419572171131547,0.44211515393842465,0.44227309076369453,0.4424310275889644,0.4425889644142343,0.4427469012395042,0.4429048380647741,0.443062774890044,0.44322071171531385,0.4433786485405838,0.44353658536585366,0.44369452219112354,0.4438524590163934,0.44401039584166335,0.44416833266693323,0.4443262694922031,0.444484206317473,0.4446421431427429,0.4448000799680128,0.4449580167932827,0.4451159536185526,0.4452738904438225,0.44543182726909236,0.44558976409436224,0.4457477009196322,0.44590563774490205,0.44606357457017193,0.4462215113954418,0.44637944822071174,0.4465373850459816,0.4466953218712515,0.44685325869652137,0.4470111955217913,0.4471691323470612,0.44732706917233106,0.44748500599760094,0.44764294282287087,0.44780087964814075,0.4479588164734106,0.4481167532986805,0.44827469012395044,0.4484326269492203,0.4485905637744902,0.44874850059976007,0.44890643742503,0.4490643742502999,0.44922231107556976,0.4493802479008397,0.44953818472610957,0.44969612155137945,0.4498540583766493,0.45001199520191926,0.45016993202718913,0.450327868852459,0.4504858056777289,0.4506437425029988,0.4508016793282687,0.4509596161535386,0.45111755297880846,0.4512754898040784,0.45143342662934827,0.45159136345461814,0.451749300279888,0.45190723710515796,0.45206517393042783,0.4522231107556977,0.4523810475809676,0.4525389844062375,0.4526969212315074,0.4528548580567773,0.45301279488204715,0.4531707317073171,0.45332866853258696,0.45348660535785684,0.4536445421831268,0.45380247900839665,0.45396041583366653,0.4541183526589364,0.45427628948420634,0.4544342263094762,0.4545921631347461,0.454750099960016,0.4549080367852859,0.4550659736105558,0.45522391043582566,0.45538184726109554,0.4555397840863655,0.45569772091163535,0.45585565773690523,0.4560135945621751,0.45617153138744504,0.4563294682127149,0.4564874050379848,0.4566453418632547,0.4568032786885246,0.4569612155137945,0.45711915233906436,0.4572770891643343,0.45743502598960417,0.45759296281487405,0.4577508996401439,0.45790883646541386,0.45806677329068374,0.4582247101159536,0.4583826469412235,0.4585405837664934,0.4586985205917633,0.4588564574170332,0.45901439424230306,0.459172331067573,0.45933026789284287,0.45948820471811275,0.4596461415433826,0.45980407836865256,0.45996201519392244,0.4601199520191923,0.4602778888444622,0.4604358256697321,0.460593762495002,0.4607516993202719,0.46090963614554176,0.4610675729708117,0.46122550979608157,0.46138344662135145,0.4615413834466214,0.46169932027189126,0.46185725709716113,0.462015193922431,0.46217313074770094,0.4623310675729708,0.4624890043982407,0.4626469412235106,0.4628048780487805,0.4629628148740504,0.46312075169932027,0.46327868852459014,0.4634366253498601,0.46359456217512995,0.46375249900039983,0.4639104358256697,0.46406837265093964,0.4642263094762095,0.4643842463014794,0.4645421831267493,0.4647001199520192,0.4648580567772891,0.46501599360255896,0.46517393042782884,0.4653318672530988,0.46548980407836865,0.46564774090363853,0.46580567772890846,0.46596361455417834,0.4661215513794482,0.4662794882047181,0.46643742502998803,0.4665953618552579,0.4667532986805278,0.46691123550579766,0.4670691723310676,0.4672271091563375,0.46738504598160735,0.4675429828068772,0.46770091963214716,0.46785885645741704,0.4680167932826869,0.4681747301079568,0.4683326669332267,0.4684906037584966,0.4686485405837665,0.46880647740903636,0.4689644142343063,0.46912235105957617,0.46928028788484605,0.469438224710116,0.46959616153538586,0.46975409836065574,0.4699120351859256,0.47006997201119555,0.4702279088364654,0.4703858456617353,0.4705437824870052,0.4707017193122751,0.470859656137545,0.47101759296281487,0.47117552978808475,0.4713334666133547,0.47149140343862456,0.47164934026389443,0.4718072770891643,0.47196521391443425,0.4721231507397041,0.472281087564974,0.4724390243902439,0.4725969612155138,0.4727548980407837,0.47291283486605357,0.47307077169132344,0.4732287085165934,0.47338664534186325,0.47354458216713313,0.47370251899240307,0.47386045581767294,0.4740183926429428,0.4741763294682127,0.47433426629348263,0.4744922031187525,0.4746501399440224,0.47480807676929226,0.4749660135945622,0.4751239504198321,0.47528188724510195,0.47543982407037183,0.47559776089564176,0.47575569772091164,0.4759136345461815,0.4760715713714514,0.47622950819672133,0.4763874450219912,0.4765453818472611,0.47670331867253096,0.4768612554978009,0.4770191923230708,0.47717712914834065,0.47733506597361053,0.47749300279888046,0.47765093962415034,0.4778088764494202,0.47796681327469015,0.47812475009996,0.4782826869252299,0.4784406237504998,0.4785985605757697,0.4787564974010396,0.47891443422630947,0.47907237105157935,0.4792303078768493,0.47938824470211916,0.47954618152738904,0.4797041183526589,0.47986205517792885,0.4800199920031987,0.4801779288284686,0.4803358656537385,0.4804938024790084,0.4806517393042783,0.48080967612954817,0.48096761295481805,0.481125549780088,0.48128348660535786,0.48144142343062774,0.48159936025589767,0.48175729708116755,0.4819152339064374,0.4820731707317073,0.48223110755697723,0.4823890443822471,0.482546981207517,0.48270491803278687,0.4828628548580568,0.4830207916833267,0.48317872850859656,0.48333666533386643,0.48349460215913637,0.48365253898440624,0.4838104758096761,0.483968412634946,0.48412634946021593,0.4842842862854858,0.4844422231107557,0.48460015993602557,0.4847580967612955,0.4849160335865654,0.48507397041183525,0.48523190723710513,0.48538984406237506,0.48554778088764494,0.4857057177129148,0.48586365453818475,0.48602159136345463,0.4861795281887245,0.4863374650139944,0.4864954018392643,0.4866533386645342,0.4868112754898041,0.48696921231507395,0.4871271491403439,0.48728508596561376,0.48744302279088364,0.4876009596161535,0.48775889644142345,0.48791683326669333,0.4880747700919632,0.4882327069172331,0.488390643742503,0.4885485805677729,0.48870651739304277,0.48886445421831265,0.4890223910435826,0.48918032786885246,0.48933826469412234,0.4894962015193922,0.48965413834466215,0.489812075169932,0.4899700119952019,0.49012794882047184,0.4902858856457417,0.4904438224710116,0.49060175929628147,0.4907596961215514,0.4909176329468213,0.49107556977209116,0.49123350659736104,0.49139144342263097,0.49154938024790085,0.4917073170731707,0.4918652538984406,0.49202319072371054,0.4921811275489804,0.4923390643742503,0.49249700119952017,0.4926549380247901,0.49281287485006,0.49297081167532986,0.49312874850059973,0.49328668532586967,0.49344462215113954,0.4936025589764094,0.49376049580167936,0.49391843262694923,0.4940763694522191,0.494234306277489,0.4943922431027589,0.4945501799280288,0.4947081167532987,0.49486605357856855,0.4950239904038385,0.49518192722910837,0.49533986405437824,0.4954978008796481,0.49565573770491805,0.49581367453018793,0.4959716113554578,0.4961295481807277,0.4962874850059976,0.4964454218312675,0.4966033586565374,0.49676129548180725,0.4969192323070772,0.49707716913234706,0.49723510595761694,0.4973930427828868,0.49755097960815675,0.49770891643342663,0.4978668532586965,0.49802479008396644,0.4981827269092363,0.4983406637345062,0.4984986005597761,0.498656537385046,0.4988144742103159,0.49897241103558576,0.49913034786085564,0.49928828468612557,0.49944622151139545,0.4996041583366653,0.4997620951619352,0.49992003198720514,0.500077968812475,0.5002359056377449,0.5003938424630148,0.5005517792882846,0.5007097161135545,0.5008676529388245,0.5010255897640944,0.5011835265893643,0.5013414634146341,0.501499400239904,0.5016573370651739,0.5018152738904438,0.5019732107157138,0.5021311475409836,0.5022890843662535,0.5024470211915234,0.5026049580167933,0.5027628948420632,0.502920831667333,0.5030787684926029,0.5032367053178729,0.5033946421431428,0.5035525789684127,0.5037105157936825,0.5038684526189524,0.5040263894442223,0.5041843262694922,0.504342263094762,0.504500199920032,0.5046581367453019,0.5048160735705718,0.5049740103958417,0.5051319472211115,0.5052898840463814,0.5054478208716513,0.5056057576969212,0.5057636945221912,0.505921631347461,0.5060795681727309,0.5062375049980008,0.5063954418232707,0.5065533786485406,0.5067113154738104,0.5068692522990804,0.5070271891243503,0.5071851259496202,0.50734306277489,0.5075009996001599,0.5076589364254298,0.5078168732506997,0.5079748100759696,0.5081327469012396,0.5082906837265094,0.5084486205517793,0.5086065573770492,0.5087644942023191,0.5089224310275889,0.5090803678528588,0.5092383046781287,0.5093962415033987,0.5095541783286686,0.5097121151539384,0.5098700519792083,0.5100279888044782,0.5101859256297481,0.510343862455018,0.5105017992802879,0.5106597361055578,0.5108176729308277,0.5109756097560976,0.5111335465813674,0.5112914834066373,0.5114494202319072,0.5116073570571771,0.5117652938824471,0.511923230707717,0.5120811675329868,0.5122391043582567,0.5123970411835266,0.5125549780087965,0.5127129148340663,0.5128708516593362,0.5130287884846062,0.5131867253098761,0.513344662135146,0.5135025989604158,0.5136605357856857,0.5138184726109556,0.5139764094362255,0.5141343462614955,0.5142922830867653,0.5144502199120352,0.5146081567373051,0.514766093562575,0.5149240303878448,0.5150819672131147,0.5152399040383846,0.5153978408636546,0.5155557776889245,0.5157137145141943,0.5158716513394642,0.5160295881647341,0.516187524990004,0.5163454618152739,0.5165033986405437,0.5166613354658137,0.5168192722910836,0.5169772091163535,0.5171351459416234,0.5172930827668932,0.5174510195921631,0.517608956417433,0.5177668932427029,0.5179248300679729,0.5180827668932427,0.5182407037185126,0.5183986405437825,0.5185565773690524,0.5187145141943222,0.5188724510195921,0.5190303878448621,0.519188324670132,0.5193462614954019,0.5195041983206717,0.5196621351459416,0.5198200719712115,0.5199780087964814,0.5201359456217513,0.5202938824470212,0.5204518192722911,0.520609756097561,0.5207676929228309,0.5209256297481007,0.5210835665733706,0.5212415033986405,0.5213994402239104,0.5215573770491804,0.5217153138744502,0.5218732506997201,0.52203118752499,0.5221891243502599,0.5223470611755298,0.5225049980007996,0.5226629348260696,0.5228208716513395,0.5229788084766094,0.5231367453018793,0.5232946821271491,0.523452618952419,0.5236105557776889,0.5237684926029588,0.5239264294282288,0.5240843662534986,0.5242423030787685,0.5244002399040384,0.5245581767293083,0.5247161135545781,0.524874050379848,0.5250319872051179,0.5251899240303879,0.5253478608556578,0.5255057976809276,0.5256637345061975,0.5258216713314674,0.5259796081567373,0.5261375449820072,0.5262954818072771,0.526453418632547,0.5266113554578169,0.5267692922830868,0.5269272291083567,0.5270851659336265,0.5272431027588964,0.5274010395841663,0.5275589764094363,0.5277169132347062,0.527874850059976,0.5280327868852459,0.5281907237105158,0.5283486605357857,0.5285065973610555,0.5286645341863254,0.5288224710115954,0.5289804078368653,0.5291383446621352,0.529296281487405,0.5294542183126749,0.5296121551379448,0.5297700919632147,0.5299280287884846,0.5300859656137545,0.5302439024390244,0.5304018392642943,0.5305597760895642,0.530717712914834,0.5308756497401039,0.5310335865653738,0.5311915233906438,0.5313494602159137,0.5315073970411835,0.5316653338664534,0.5318232706917233,0.5319812075169932,0.5321391443422631,0.5322970811675329,0.5324550179928029,0.5326129548180728,0.5327708916433427,0.5329288284686126,0.5330867652938824,0.5332447021191523,0.5334026389444222,0.5335605757696921,0.5337185125949621,0.5338764494202319,0.5340343862455018,0.5341923230707717,0.5343502598960416,0.5345081967213114,0.5346661335465813,0.5348240703718513,0.5349820071971212,0.5351399440223911,0.535297880847661,0.5354558176729308,0.5356137544982007,0.5357716913234706,0.5359296281487405,0.5360875649740104,0.5362455017992803,0.5364034386245502,0.5365613754498201,0.53671931227509,0.5368772491003598,0.5370351859256297,0.5371931227508996,0.5373510595761696,0.5375089964014395,0.5376669332267093,0.5378248700519792,0.5379828068772491,0.538140743702519,0.5382986805277888,0.5384566173530588,0.5386145541783287,0.5387724910035986,0.5389304278288685,0.5390883646541383,0.5392463014794082,0.5394042383046781,0.539562175129948,0.539720111955218,0.5398780487804878,0.5400359856057577,0.5401939224310276,0.5403518592562975,0.5405097960815674,0.5406677329068372,0.5408256697321071,0.5409836065573771,0.541141543382647,0.5412994802079168,0.5414574170331867,0.5416153538584566,0.5417732906837265,0.5419312275089964,0.5420891643342662,0.5422471011595362,0.5424050379848061,0.542562974810076,0.5427209116353459,0.5428788484606157,0.5430367852858856,0.5431947221111555,0.5433526589364255,0.5435105957616954,0.5436685325869652,0.5438264694122351,0.543984406237505,0.5441423430627749,0.5443002798880447,0.5444582167133146,0.5446161535385846,0.5447740903638545,0.5449320271891244,0.5450899640143942,0.5452479008396641,0.545405837664934,0.5455637744902039,0.5457217113154738,0.5458796481407437,0.5460375849660136,0.5461955217912835,0.5463534586165534,0.5465113954418233,0.5466693322670931,0.546827269092363,0.546985205917633,0.5471431427429029,0.5473010795681728,0.5474590163934426,0.5476169532187125,0.5477748900439824,0.5479328268692523,0.5480907636945221,0.5482487005197921,0.548406637345062,0.5485645741703319,0.5487225109956018,0.5488804478208716,0.5490383846461415,0.5491963214714114,0.5493542582966813,0.5495121951219513,0.5496701319472211,0.549828068772491,0.5499860055977609,0.5501439424230308,0.5503018792483007,0.5504598160735705,0.5506177528988405,0.5507756897241104,0.5509336265493803,0.5510915633746502,0.55124950019992,0.5514074370251899,0.5515653738504598,0.5517233106757297,0.5518812475009996,0.5520391843262695,0.5521971211515394,0.5523550579768093,0.5525129948020792,0.552670931627349,0.5528288684526189,0.5529868052778888,0.5531447421031588,0.5533026789284287,0.5534606157536985,0.5536185525789684,0.5537764894042383,0.5539344262295082,0.554092363054778,0.554250299880048,0.5544082367053179,0.5545661735305878,0.5547241103558577,0.5548820471811275,0.5550399840063974,0.5551979208316673,0.5553558576569372,0.5555137944822072,0.555671731307477,0.5558296681327469,0.5559876049580168,0.5561455417832867,0.5563034786085566,0.5564614154338264,0.5566193522590963,0.5567772890843663,0.5569352259096362,0.5570931627349061,0.5572510995601759,0.5574090363854458,0.5575669732107157,0.5577249100359856,0.5578828468612554,0.5580407836865254,0.5581987205117953,0.5583566573370652,0.5585145941623351,0.5586725309876049,0.5588304678128748,0.5589884046381447,0.5591463414634147,0.5593042782886846,0.5594622151139544,0.5596201519392243,0.5597780887644942,0.5599360255897641,0.560093962415034,0.5602518992403038,0.5604098360655738,0.5605677728908437,0.5607257097161136,0.5608836465413835,0.5610415833666533,0.5611995201919232,0.5613574570171931,0.561515393842463,0.561673330667733,0.5618312674930028,0.5619892043182727,0.5621471411435426,0.5623050779688125,0.5624630147940823,0.5626209516193522,0.5627788884446222,0.5629368252698921,0.563094762095162,0.5632526989204318,0.5634106357457017,0.5635685725709716,0.5637265093962415,0.5638844462215113,0.5640423830467813,0.5642003198720512,0.5643582566973211,0.564516193522591,0.5646741303478608,0.5648320671731307,0.5649900039984006,0.5651479408236705,0.5653058776489405,0.5654638144742103,0.5656217512994802,0.5657796881247501,0.56593762495002,0.5660955617752899,0.5662534986005597,0.5664114354258297,0.5665693722510996,0.5667273090763695,0.5668852459016394,0.5670431827269092,0.5672011195521791,0.567359056377449,0.5675169932027189,0.5676749300279889,0.5678328668532587,0.5679908036785286,0.5681487405037985,0.5683066773290684,0.5684646141543382,0.5686225509796081,0.568780487804878,0.568938424630148,0.5690963614554179,0.5692542982806877,0.5694122351059576,0.5695701719312275,0.5697281087564974,0.5698860455817673,0.5700439824070371,0.5702019192323071,0.570359856057577,0.5705177928828469,0.5706757297081168,0.5708336665333866,0.5709916033586565,0.5711495401839264,0.5713074770091964,0.5714654138344663,0.5716233506597361,0.571781287485006,0.5719392243102759,0.5720971611355458,0.5722550979608156,0.5724130347860855,0.5725709716113555,0.5727289084366254,0.5728868452618953,0.5730447820871651,0.573202718912435,0.5733606557377049,0.5735185925629748,0.5736765293882446,0.5738344662135146,0.5739924030387845,0.5741503398640544,0.5743082766893243,0.5744662135145941,0.574624150339864,0.5747820871651339,0.5749400239904039,0.5750979608156738,0.5752558976409436,0.5754138344662135,0.5755717712914834,0.5757297081167533,0.5758876449420232,0.576045581767293,0.576203518592563,0.5763614554178329,0.5765193922431028,0.5766773290683727,0.5768352658936425,0.5769932027189124,0.5771511395441823,0.5773090763694522,0.5774670131947222,0.577624950019992,0.5777828868452619,0.5779408236705318,0.5780987604958017,0.5782566973210715,0.5784146341463414,0.5785725709716114,0.5787305077968813,0.5788884446221512,0.579046381447421,0.5792043182726909,0.5793622550979608,0.5795201919232307,0.5796781287485006,0.5798360655737705,0.5799940023990404,0.5801519392243103,0.5803098760495802,0.58046781287485,0.5806257497001199,0.5807836865253898,0.5809416233506597,0.5810995601759297,0.5812574970011996,0.5814154338264694,0.5815733706517393,0.5817313074770092,0.5818892443022791,0.5820471811275489,0.5822051179528188,0.5823630547780888,0.5825209916033587,0.5826789284286286,0.5828368652538984,0.5829948020791683,0.5831527389044382,0.5833106757297081,0.5834686125549781,0.5836265493802479,0.5837844862055178,0.5839424230307877,0.5841003598560576,0.5842582966813274,0.5844162335065973,0.5845741703318672,0.5847321071571372,0.5848900439824071,0.585047980807677,0.5852059176329468,0.5853638544582167,0.5855217912834866,0.5856797281087565,0.5858376649340263,0.5859956017592963,0.5861535385845662,0.5863114754098361,0.586469412235106,0.5866273490603758,0.5867852858856457,0.5869432227109156,0.5871011595361856,0.5872590963614555,0.5874170331867253,0.5875749700119952,0.5877329068372651,0.587890843662535,0.5880487804878048,0.5882067173130747,0.5883646541383447,0.5885225909636146,0.5886805277888845,0.5888384646141543,0.5889964014394242,0.5891543382646941,0.589312275089964,0.5894702119152339,0.5896281487405038,0.5897860855657737,0.5899440223910436,0.5901019592163135,0.5902598960415834,0.5904178328668532,0.5905757696921231,0.5907337065173931,0.590891643342663,0.5910495801679329,0.5912075169932027,0.5913654538184726,0.5915233906437425,0.5916813274690124,0.5918392642942822,0.5919972011195522,0.5921551379448221,0.592313074770092,0.5924710115953619,0.5926289484206317,0.5927868852459016,0.5929448220711715,0.5931027588964414,0.5932606957217114,0.5934186325469812,0.5935765693722511,0.593734506197521,0.5938924430227909,0.5940503798480608,0.5942083166733306,0.5943662534986005,0.5945241903238705,0.5946821271491404,0.5948400639744102,0.5949980007996801,0.59515593762495,0.5953138744502199,0.5954718112754898,0.5956297481007597,0.5957876849260296,0.5959456217512995,0.5961035585765694,0.5962614954018393,0.5964194322271091,0.596577369052379,0.5967353058776489,0.5968932427029189,0.5970511795281888,0.5972091163534586,0.5973670531787285,0.5975249900039984,0.5976829268292683,0.5978408636545381,0.597998800479808,0.598156737305078,0.5983146741303479,0.5984726109556178,0.5986305477808876,0.5987884846061575,0.5989464214314274,0.5991043582566973,0.5992622950819673,0.5994202319072371,0.599578168732507,0.5997361055577769,0.5998940423830468,0.6000519792083167,0.6002099160335865,0.6003678528588564,0.6005257896841264,0.6006837265093963,0.6008416633346662,0.600999600159936,0.6011575369852059,0.6013154738104758,0.6014734106357457,0.6016313474610155,0.6017892842862855,0.6019472211115554,0.6021051579368253,0.6022630947620952,0.602421031587365,0.6025789684126349,0.6027369052379048,0.6028948420631748,0.6030527788884447,0.6032107157137145,0.6033686525389844,0.6035265893642543,0.6036845261895242,0.603842463014794,0.6040003998400639,0.6041583366653339,0.6043162734906038,0.6044742103158737,0.6046321471411435,0.6047900839664134,0.6049480207916833,0.6051059576169532,0.6052638944422231,0.605421831267493,0.6055797680927629,0.6057377049180328,0.6058956417433027,0.6060535785685726,0.6062115153938424,0.6063694522191123,0.6065273890443822,0.6066853258696522,0.6068432626949221,0.6070011995201919,0.6071591363454618,0.6073170731707317,0.6074750099960016,0.6076329468212714,0.6077908836465414,0.6079488204718113,0.6081067572970812,0.6082646941223511,0.608422630947621,0.6085805677728908,0.6087385045981607,0.6088964414234306,0.6090543782487006,0.6092123150739704,0.6093702518992403,0.6095281887245102,0.6096861255497801,0.60984406237505,0.6100019992003198,0.6101599360255897,0.6103178728508597,0.6104758096761296,0.6106337465013995,0.6107916833266693,0.6109496201519392,0.6111075569772091,0.611265493802479,0.611423430627749,0.6115813674530188,0.6117393042782887,0.6118972411035586,0.6120551779288285,0.6122131147540983,0.6123710515793682,0.6125289884046381,0.6126869252299081,0.612844862055178,0.6130027988804478,0.6131607357057177,0.6133186725309876,0.6134766093562575,0.6136345461815274,0.6137924830067972,0.6139504198320672,0.6141083566573371,0.614266293482607,0.6144242303078769,0.6145821671331467,0.6147401039584166,0.6148980407836865,0.6150559776089565,0.6152139144342263,0.6153718512594962,0.6155297880847661,0.615687724910036,0.6158456617353059,0.6160035985605757,0.6161615353858456,0.6163194722111156,0.6164774090363855,0.6166353458616554,0.6167932826869252,0.6169512195121951,0.617109156337465,0.6172670931627349,0.6174250299880047,0.6175829668132747,0.6177409036385446,0.6178988404638145,0.6180567772890844,0.6182147141143542,0.6183726509396241,0.618530587764894,0.6186885245901639,0.6188464614154339,0.6190043982407037,0.6191623350659736,0.6193202718912435,0.6194782087165134,0.6196361455417833,0.6197940823670531,0.6199520191923231,0.620109956017593,0.6202678928428629,0.6204258296681328,0.6205837664934026,0.6207417033186725,0.6208996401439424,0.6210575769692123,0.6212155137944823,0.6213734506197521,0.621531387445022,0.6216893242702919,0.6218472610955618,0.6220051979208316,0.6221631347461015,0.6223210715713714,0.6224790083966414,0.6226369452219113,0.6227948820471811,0.622952818872451,0.6231107556977209,0.6232686925229908,0.6234266293482607,0.6235845661735306,0.6237425029988005,0.6239004398240704,0.6240583766493403,0.6242163134746102,0.62437425029988,0.6245321871251499,0.6246901239504198,0.6248480607756898,0.6250059976009597,0.6251639344262295,0.6253218712514994,0.6254798080767693,0.6256377449020392,0.625795681727309,0.6259536185525789,0.6261115553778489,0.6262694922031188,0.6264274290283887,0.6265853658536585,0.6267433026789284,0.6269012395041983,0.6270591763294682,0.6272171131547382,0.627375049980008,0.6275329868052779,0.6276909236305478,0.6278488604558177,0.6280067972810875,0.6281647341063574,0.6283226709316273,0.6284806077568973,0.6286385445821672,0.628796481407437,0.6289544182327069,0.6291123550579768,0.6292702918832467,0.6294282287085166,0.6295861655337864,0.6297441023590564,0.6299020391843263,0.6300599760095962,0.6302179128348661,0.6303758496601359,0.6305337864854058,0.6306917233106757,0.6308496601359456,0.6310075969612156,0.6311655337864854,0.6313234706117553,0.6314814074370252,0.6316393442622951,0.6317972810875649,0.6319552179128348,0.6321131547381048,0.6322710915633747,0.6324290283886446,0.6325869652139144,0.6327449020391843,0.6329028388644542,0.6330607756897241,0.633218712514994,0.6333766493402639,0.6335345861655338,0.6336925229908037,0.6338504598160736,0.6340083966413435,0.6341663334666133,0.6343242702918832,0.6344822071171531,0.6346401439424231,0.634798080767693,0.6349560175929628,0.6351139544182327,0.6352718912435026,0.6354298280687725,0.6355877648940423,0.6357457017193123,0.6359036385445822,0.6360615753698521,0.636219512195122,0.6363774490203918,0.6365353858456617,0.6366933226709316,0.6368512594962015,0.6370091963214715,0.6371671331467413,0.6373250699720112,0.6374830067972811,0.637640943622551,0.6377988804478208,0.6379568172730907,0.6381147540983606,0.6382726909236306,0.6384306277489005,0.6385885645741703,0.6387465013994402,0.6389044382247101,0.63906237504998,0.6392203118752499,0.6393782487005198,0.6395361855257897,0.6396941223510596,0.6398520591763295,0.6400099960015994,0.6401679328268692,0.6403258696521391,0.640483806477409,0.640641743302679,0.6407996801279489,0.6409576169532187,0.6411155537784886,0.6412734906037585,0.6414314274290284,0.6415893642542982,0.6417473010795681,0.6419052379048381,0.642063174730108,0.6422211115553779,0.6423790483806477,0.6425369852059176,0.6426949220311875,0.6428528588564574,0.6430107956817273,0.6431687325069972,0.6433266693322671,0.643484606157537,0.6436425429828069,0.6438004798080768,0.6439584166333466,0.6441163534586165,0.6442742902838865,0.6444322271091564,0.6445901639344263,0.6447481007596961,0.644906037584966,0.6450639744102359,0.6452219112355058,0.6453798480607756,0.6455377848860456,0.6456957217113155,0.6458536585365854,0.6460115953618553,0.6461695321871251,0.646327469012395,0.6464854058376649,0.6466433426629348,0.6468012794882048,0.6469592163134746,0.6471171531387445,0.6472750899640144,0.6474330267892843,0.6475909636145541,0.647748900439824,0.647906837265094,0.6480647740903639,0.6482227109156338,0.6483806477409036,0.6485385845661735,0.6486965213914434,0.6488544582167133,0.6490123950419832,0.6491703318672531,0.649328268692523,0.6494862055177929,0.6496441423430628,0.6498020791683327,0.6499600159936025,0.6501179528188724,0.6502758896441423,0.6504338264694123,0.6505917632946822,0.650749700119952,0.6509076369452219,0.6510655737704918,0.6512235105957617,0.6513814474210315,0.6515393842463015,0.6516973210715714,0.6518552578968413,0.6520131947221112,0.652171131547381,0.6523290683726509,0.6524870051979208,0.6526449420231907,0.6528028788484607,0.6529608156737305,0.6531187524990004,0.6532766893242703,0.6534346261495402,0.65359256297481,0.6537504998000799,0.6539084366253498,0.6540663734506198,0.6542243102758897,0.6543822471011596,0.6545401839264294,0.6546981207516993,0.6548560575769692,0.6550139944022391,0.6551719312275089,0.6553298680527789,0.6554878048780488,0.6556457417033187,0.6558036785285886,0.6559616153538584,0.6561195521791283,0.6562774890043982,0.6564354258296682,0.6565933626549381,0.6567512994802079,0.6569092363054778,0.6570671731307477,0.6572251099560176,0.6573830467812875,0.6575409836065573,0.6576989204318273,0.6578568572570972,0.6580147940823671,0.658172730907637,0.6583306677329068,0.6584886045581767,0.6586465413834466,0.6588044782087165,0.6589624150339864,0.6591203518592563,0.6592782886845262,0.6594362255097961,0.659594162335066,0.6597520991603358,0.6599100359856057,0.6600679728108757,0.6602259096361456,0.6603838464614155,0.6605417832866853,0.6606997201119552,0.6608576569372251,0.661015593762495,0.6611735305877648,0.6613314674130348,0.6614894042383047,0.6616473410635746,0.6618052778888445,0.6619632147141143,0.6621211515393842,0.6622790883646541,0.662437025189924,0.662594962015194,0.6627528988404638,0.6629108356657337,0.6630687724910036,0.6632267093162735,0.6633846461415434,0.6635425829668132,0.6637005197920832,0.6638584566173531,0.664016393442623,0.6641743302678929,0.6643322670931627,0.6644902039184326,0.6646481407437025,0.6648060775689724,0.6649640143942424,0.6651219512195122,0.6652798880447821,0.665437824870052,0.6655957616953219,0.6657536985205917,0.6659116353458616,0.6660695721711315,0.6662275089964015,0.6663854458216714,0.6665433826469412,0.6667013194722111,0.666859256297481,0.6670171931227509,0.6671751299480208,0.6673330667732906,0.6674910035985606,0.6676489404238305,0.6678068772491004,0.6679648140743703,0.6681227508996401,0.66828068772491,0.6684386245501799,0.6685965613754499,0.6687544982007197,0.6689124350259896,0.6690703718512595,0.6692283086765294,0.6693862455017993,0.6695441823270691,0.669702119152339,0.669860055977609,0.6700179928028789,0.6701759296281488,0.6703338664534186,0.6704918032786885,0.6706497401039584,0.6708076769292283,0.6709656137544981,0.6711235505797681,0.671281487405038,0.6714394242303079,0.6715973610555778,0.6717552978808476,0.6719132347061175,0.6720711715313874,0.6722291083566574,0.6723870451819273,0.6725449820071971,0.672702918832467,0.6728608556577369,0.6730187924830068,0.6731767293082767,0.6733346661335465,0.6734926029588165,0.6736505397840864,0.6738084766093563,0.6739664134346262,0.674124350259896,0.6742822870851659,0.6744402239104358,0.6745981607357057,0.6747560975609757,0.6749140343862455,0.6750719712115154,0.6752299080367853,0.6753878448620552,0.675545781687325,0.6757037185125949,0.6758616553378649,0.6760195921631348,0.6761775289884047,0.6763354658136745,0.6764934026389444,0.6766513394642143,0.6768092762894842,0.676967213114754,0.677125149940024,0.6772830867652939,0.6774410235905638,0.6775989604158337,0.6777568972411036,0.6779148340663734,0.6780727708916433,0.6782307077169132,0.6783886445421832,0.678546581367453,0.6787045181927229,0.6788624550179928,0.6790203918432627,0.6791783286685326,0.6793362654938024,0.6794942023190723,0.6796521391443423,0.6798100759696122,0.6799680127948821,0.6801259496201519,0.6802838864454218,0.6804418232706917,0.6805997600959616,0.6807576969212316,0.6809156337465014,0.6810735705717713,0.6812315073970412,0.6813894442223111,0.681547381047581,0.6817053178728508,0.6818632546981207,0.6820211915233907,0.6821791283486606,0.6823370651739304,0.6824950019992003,0.6826529388244702,0.6828108756497401,0.68296881247501,0.6831267493002798,0.6832846861255498,0.6834426229508197,0.6836005597760896,0.6837584966013595,0.6839164334266293,0.6840743702518992,0.6842323070771691,0.6843902439024391,0.684548180727709,0.6847061175529788,0.6848640543782487,0.6850219912035186,0.6851799280287885,0.6853378648540583,0.6854958016793282,0.6856537385045982,0.6858116753298681,0.685969612155138,0.6861275489804078,0.6862854858056777,0.6864434226309476,0.6866013594562175,0.6867592962814874,0.6869172331067573,0.6870751699320272,0.6872331067572971,0.687391043582567,0.6875489804078369,0.6877069172331067,0.6878648540583766,0.6880227908836466,0.6881807277089165,0.6883386645341864,0.6884966013594562,0.6886545381847261,0.688812475009996,0.6889704118352659,0.6891283486605357,0.6892862854858057,0.6894442223110756,0.6896021591363455,0.6897600959616154,0.6899180327868852,0.6900759696121551,0.690233906437425,0.6903918432626949,0.6905497800879649,0.6907077169132347,0.6908656537385046,0.6910235905637745,0.6911815273890444,0.6913394642143142,0.6914974010395841,0.691655337864854,0.691813274690124,0.6919712115153939,0.6921291483406637,0.6922870851659336,0.6924450219912035,0.6926029588164734,0.6927608956417433,0.6929188324670132,0.6930767692922831,0.693234706117553,0.6933926429428229,0.6935505797680928,0.6937085165933626,0.6938664534186325,0.6940243902439024,0.6941823270691724,0.6943402638944423,0.6944982007197121,0.694656137544982,0.6948140743702519,0.6949720111955218,0.6951299480207916,0.6952878848460615,0.6954458216713315,0.6956037584966014,0.6957616953218713,0.6959196321471411,0.696077568972411,0.6962355057976809,0.6963934426229508,0.6965513794482208,0.6967093162734906,0.6968672530987605,0.6970251899240304,0.6971831267493003,0.6973410635745702,0.69749900039984,0.6976569372251099,0.6978148740503799,0.6979728108756498,0.6981307477009197,0.6982886845261895,0.6984466213514594,0.6986045581767293,0.6987624950019992,0.698920431827269,0.699078368652539,0.6992363054778089,0.6993942423030788,0.6995521791283487,0.6997101159536185,0.6998680527788884,0.7000259896041583,0.7001839264294283,0.7003418632546982,0.700499800079968,0.7006577369052379,0.7008156737305078,0.7009736105557777,0.7011315473810475,0.7012894842063174,0.7014474210315874,0.7016053578568573,0.7017632946821272,0.701921231507397,0.7020791683326669,0.7022371051579368,0.7023950419832067,0.7025529788084766,0.7027109156337465,0.7028688524590164,0.7030267892842863,0.7031847261095562,0.7033426629348261,0.7035005997600959,0.7036585365853658,0.7038164734106358,0.7039744102359057,0.7041323470611756,0.7042902838864454,0.7044482207117153,0.7046061575369852,0.7047640943622551,0.704922031187525,0.7050799680127949,0.7052379048380648,0.7053958416633347,0.7055537784886046,0.7057117153138744,0.7058696521391443,0.7060275889644142,0.7061855257896841,0.7063434626149541,0.7065013994402239,0.7066593362654938,0.7068172730907637,0.7069752099160336,0.7071331467413035,0.7072910835665733,0.7074490203918432,0.7076069572171132,0.7077648940423831,0.707922830867653,0.7080807676929228,0.7082387045181927,0.7083966413434626,0.7085545781687325,0.7087125149940025,0.7088704518192723,0.7090283886445422,0.7091863254698121,0.709344262295082,0.7095021991203518,0.7096601359456217,0.7098180727708916,0.7099760095961616,0.7101339464214315,0.7102918832467013,0.7104498200719712,0.7106077568972411,0.710765693722511,0.7109236305477808,0.7110815673730507,0.7112395041983207,0.7113974410235906,0.7115553778488605,0.7117133146741303,0.7118712514994002,0.7120291883246701,0.71218712514994,0.71234506197521,0.7125029988004798,0.7126609356257497,0.7128188724510196,0.7129768092762895,0.7131347461015594,0.7132926829268292,0.7134506197520991,0.7136085565773691,0.713766493402639,0.7139244302279089,0.7140823670531787,0.7142403038784486,0.7143982407037185,0.7145561775289884,0.7147141143542582,0.7148720511795282,0.7150299880047981,0.715187924830068,0.7153458616553379,0.7155037984806077,0.7156617353058776,0.7158196721311475,0.7159776089564175,0.7161355457816874,0.7162934826069572,0.7164514194322271,0.716609356257497,0.7167672930827669,0.7169252299080368,0.7170831667333066,0.7172411035585766,0.7173990403838465,0.7175569772091164,0.7177149140343863,0.7178728508596561,0.718030787684926,0.7181887245101959,0.7183466613354658,0.7185045981607358,0.7186625349860056,0.7188204718112755,0.7189784086365454,0.7191363454618153,0.7192942822870851,0.719452219112355,0.7196101559376249,0.7197680927628949,0.7199260295881648,0.7200839664134346,0.7202419032387045,0.7203998400639744,0.7205577768892443,0.7207157137145142,0.7208736505397841,0.721031587365054,0.7211895241903239,0.7213474610155938,0.7215053978408636,0.7216633346661335,0.7218212714914034,0.7219792083166733,0.7221371451419433,0.7222950819672131,0.722453018792483,0.7226109556177529,0.7227688924430228,0.7229268292682927,0.7230847660935625,0.7232427029188324,0.7234006397441024,0.7235585765693723,0.7237165133946422,0.723874450219912,0.7240323870451819,0.7241903238704518,0.7243482606957217,0.7245061975209917,0.7246641343462615,0.7248220711715314,0.7249800079968013,0.7251379448220712,0.725295881647341,0.7254538184726109,0.7256117552978808,0.7257696921231508,0.7259276289484207,0.7260855657736905,0.7262435025989604,0.7264014394242303,0.7265593762495002,0.72671731307477,0.7268752499000399,0.7270331867253099,0.7271911235505798,0.7273490603758497,0.7275069972011196,0.7276649340263894,0.7278228708516593,0.7279808076769292,0.7281387445021992,0.728296681327469,0.7284546181527389,0.7286125549780088,0.7287704918032787,0.7289284286285486,0.7290863654538184,0.7292443022790883,0.7294022391043583,0.7295601759296282,0.7297181127548981,0.7298760495801679,0.7300339864054378,0.7301919232307077,0.7303498600559776,0.7305077968812475,0.7306657337065174,0.7308236705317873,0.7309816073570572,0.7311395441823271,0.731297481007597,0.7314554178328668,0.7316133546581367,0.7317712914834066,0.7319292283086766,0.7320871651339464,0.7322451019592163,0.7324030387844862,0.7325609756097561,0.732718912435026,0.7328768492602958,0.7330347860855658,0.7331927229108357,0.7333506597361056,0.7335085965613755,0.7336665333866453,0.7338244702119152,0.7339824070371851,0.734140343862455,0.734298280687725,0.7344562175129948,0.7346141543382647,0.7347720911635346,0.7349300279888045,0.7350879648140743,0.7352459016393442,0.7354038384646141,0.7355617752898841,0.735719712115154,0.7358776489404238,0.7360355857656937,0.7361935225909636,0.7363514594162335,0.7365093962415034,0.7366673330667733,0.7368252698920432,0.7369832067173131,0.737141143542583,0.7372990803678529,0.7374570171931227,0.7376149540183926,0.7377728908436625,0.7379308276689325,0.7380887644942024,0.7382467013194722,0.7384046381447421,0.738562574970012,0.7387205117952819,0.7388784486205517,0.7390363854458216,0.7391943222710916,0.7393522590963615,0.7395101959216314,0.7396681327469012,0.7398260695721711,0.739984006397441,0.7401419432227109,0.7402998800479809,0.7404578168732507,0.7406157536985206,0.7407736905237905,0.7409316273490604,0.7410895641743303,0.7412475009996001,0.74140543782487,0.74156337465014,0.7417213114754099,0.7418792483006798,0.7420371851259496,0.7421951219512195,0.7423530587764894,0.7425109956017593,0.7426689324270291,0.7428268692522991,0.742984806077569,0.7431427429028389,0.7433006797281088,0.7434586165533786,0.7436165533786485,0.7437744902039184,0.7439324270291883,0.7440903638544583,0.7442483006797281,0.744406237504998,0.7445641743302679,0.7447221111555378,0.7448800479808076,0.7450379848060775,0.7451959216313475,0.7453538584566174,0.7455117952818873,0.7456697321071571,0.745827668932427,0.7459856057576969,0.7461435425829668,0.7463014794082367,0.7464594162335066,0.7466173530587765,0.7467752898840464,0.7469332267093163,0.7470911635345862,0.747249100359856,0.7474070371851259,0.7475649740103958,0.7477229108356658,0.7478808476609357,0.7480387844862055,0.7481967213114754,0.7483546581367453,0.7485125949620152,0.748670531787285,0.748828468612555,0.7489864054378249,0.7491443422630948,0.7493022790883647,0.7494602159136345,0.7496181527389044,0.7497760895641743,0.7499340263894442,0.7500919632147142,0.750249900039984,0.7504078368652539,0.7505657736905238,0.7507237105157937,0.7508816473410636,0.7510395841663334,0.7511975209916033,0.7513554578168733,0.7515133946421432,0.751671331467413,0.7518292682926829,0.7519872051179528,0.7521451419432227,0.7523030787684926,0.7524610155937625,0.7526189524190324,0.7527768892443023,0.7529348260695722,0.7530927628948421,0.7532506997201119,0.7534086365453818,0.7535665733706517,0.7537245101959217,0.7538824470211916,0.7540403838464614,0.7541983206717313,0.7543562574970012,0.7545141943222711,0.754672131147541,0.7548300679728108,0.7549880047980808,0.7551459416233507,0.7553038784486206,0.7554618152738904,0.7556197520991603,0.7557776889244302,0.7559356257497001,0.75609356257497,0.75625149940024,0.7564094362255098,0.7565673730507797,0.7567253098760496,0.7568832467013195,0.7570411835265893,0.7571991203518592,0.7573570571771292,0.7575149940023991,0.757672930827669,0.7578308676529388,0.7579888044782087,0.7581467413034786,0.7583046781287485,0.7584626149540183,0.7586205517792883,0.7587784886045582,0.7589364254298281,0.759094362255098,0.7592522990803678,0.7594102359056377,0.7595681727309076,0.7597261095561775,0.7598840463814475,0.7600419832067173,0.7601999200319872,0.7603578568572571,0.760515793682527,0.7606737305077969,0.7608316673330667,0.7609896041583367,0.7611475409836066,0.7613054778088765,0.7614634146341464,0.7616213514594162,0.7617792882846861,0.761937225109956,0.7620951619352259,0.7622530987604959,0.7624110355857657,0.7625689724110356,0.7627269092363055,0.7628848460615754,0.7630427828868452,0.7632007197121151,0.763358656537385,0.763516593362655,0.7636745301879249,0.7638324670131947,0.7639904038384646,0.7641483406637345,0.7643062774890044,0.7644642143142742,0.7646221511395442,0.7647800879648141,0.764938024790084,0.7650959616153539,0.7652538984406237,0.7654118352658936,0.7655697720911635,0.7657277089164334,0.7658856457417034,0.7660435825669732,0.7662015193922431,0.766359456217513,0.7665173930427829,0.7666753298680528,0.7668332666933226,0.7669912035185925,0.7671491403438625,0.7673070771691324,0.7674650139944023,0.7676229508196721,0.767780887644942,0.7679388244702119,0.7680967612954818,0.7682546981207516,0.7684126349460216,0.7685705717712915,0.7687285085965614,0.7688864454218313,0.7690443822471011,0.769202319072371,0.7693602558976409,0.7695181927229109,0.7696761295481808,0.7698340663734506,0.7699920031987205,0.7701499400239904,0.7703078768492603,0.7704658136745302,0.7706237504998,0.77078168732507,0.7709396241503399,0.7710975609756098,0.7712554978008797,0.7714134346261495,0.7715713714514194,0.7717293082766893,0.7718872451019592,0.7720451819272292,0.772203118752499,0.7723610555777689,0.7725189924030388,0.7726769292283087,0.7728348660535785,0.7729928028788484,0.7731507397041184,0.7733086765293883,0.7734666133546582,0.773624550179928,0.7737824870051979,0.7739404238304678,0.7740983606557377,0.7742562974810075,0.7744142343062775,0.7745721711315474,0.7747301079568173,0.7748880447820872,0.775045981607357,0.7752039184326269,0.7753618552578968,0.7755197920831667,0.7756777289084367,0.7758356657337065,0.7759936025589764,0.7761515393842463,0.7763094762095162,0.7764674130347861,0.7766253498600559,0.7767832866853259,0.7769412235105958,0.7770991603358657,0.7772570971611356,0.7774150339864054,0.7775729708116753,0.7777309076369452,0.7778888444622151,0.7780467812874851,0.7782047181127549,0.7783626549380248,0.7785205917632947,0.7786785285885646,0.7788364654138344,0.7789944022391043,0.7791523390643742,0.7793102758896442,0.7794682127149141,0.7796261495401839,0.7797840863654538,0.7799420231907237,0.7800999600159936,0.7802578968412635,0.7804158336665333,0.7805737704918033,0.7807317073170732,0.7808896441423431,0.781047580967613,0.7812055177928828,0.7813634546181527,0.7815213914434226,0.7816793282686926,0.7818372650939625,0.7819952019192323,0.7821531387445022,0.7823110755697721,0.782469012395042,0.7826269492203118,0.7827848860455817,0.7829428228708517,0.7831007596961216,0.7832586965213915,0.7834166333466613,0.7835745701719312,0.7837325069972011,0.783890443822471,0.7840483806477409,0.7842063174730108,0.7843642542982807,0.7845221911235506,0.7846801279488205,0.7848380647740903,0.7849960015993602,0.7851539384246301,0.7853118752499001,0.78546981207517,0.7856277489004398,0.7857856857257097,0.7859436225509796,0.7861015593762495,0.7862594962015194,0.7864174330267892,0.7865753698520592,0.7867333066773291,0.786891243502599,0.7870491803278689,0.7872071171531387,0.7873650539784086,0.7875229908036785,0.7876809276289484,0.7878388644542184,0.7879968012794882,0.7881547381047581,0.788312674930028,0.7884706117552979,0.7886285485805677,0.7887864854058376,0.7889444222311076,0.7891023590563775,0.7892602958816474,0.7894182327069172,0.7895761695321871,0.789734106357457,0.7898920431827269,0.7900499800079968,0.7902079168332667,0.7903658536585366,0.7905237904838065,0.7906817273090764,0.7908396641343463,0.7909976009596161,0.791155537784886,0.7913134746101559,0.7914714114354259,0.7916293482606958,0.7917872850859656,0.7919452219112355,0.7921031587365054,0.7922610955617753,0.7924190323870451,0.792576969212315,0.792734906037585,0.7928928428628549,0.7930507796881248,0.7932087165133946,0.7933666533386645,0.7935245901639344,0.7936825269892043,0.7938404638144743,0.7939984006397441,0.794156337465014,0.7943142742902839,0.7944722111155538,0.7946301479408237,0.7947880847660935,0.7949460215913634,0.7951039584166334,0.7952618952419033,0.7954198320671731,0.795577768892443,0.7957357057177129,0.7958936425429828,0.7960515793682527,0.7962095161935225,0.7963674530187925,0.7965253898440624,0.7966833266693323,0.7968412634946022,0.796999200319872,0.7971571371451419,0.7973150739704118,0.7974730107956818,0.7976309476209517,0.7977888844462215,0.7979468212714914,0.7981047580967613,0.7982626949220312,0.798420631747301,0.7985785685725709,0.7987365053978409,0.7988944422231108,0.7990523790483807,0.7992103158736505,0.7993682526989204,0.7995261895241903,0.7996841263494602,0.7998420631747301,0.8]}

},{}],59:[function(require,module,exports){
module.exports={"expected":[9.999999980506448e18,1.0000999436576096e19,1.0001999992157372e19,1.0003000547738649e19,1.0004001103319925e19,1.00050016589012e19,1.0006003313994105e19,1.0007004969087009e19,1.0008006624179913e19,1.0009008279272817e19,1.0010011033877348e19,1.001101378848188e19,1.001201764259804e19,1.0013020397202571e19,1.001402425131873e19,1.001502810543489e19,1.001603195955105e19,1.0017036913178837e19,1.0018041866806624e19,1.0019045720922784e19,1.0020052873573827e19,1.0021057827201614e19,1.0022063880341029e19,1.0023069933480444e19,1.0024077086131487e19,1.002508423878253e19,1.0026091391433572e19,1.0027099643596243e19,1.0028106796247286e19,1.0029115048409956e19,1.0030124400084255e19,1.0031132652246925e19,1.0032142003921224e19,1.0033151355595522e19,1.003416070726982e19,1.0035171158455747e19,1.0036180510130045e19,1.0037192060827599e19,1.0038202512013525e19,1.0039214062711079e19,1.0040225613408633e19,1.0041237164106187e19,1.004224871480374e19,1.004326246452455e19,1.0044274015222104e19,1.0045287764942914e19,1.0046301514663723e19,1.0047315264384532e19,1.0048329014105342e19,1.004934386333778e19,1.0050357613058589e19,1.0051372462291026e19,1.005238841103509e19,1.0053403260267528e19,1.0054419209011593e19,1.0055435157755658e19,1.0056452206011351e19,1.0057469254267044e19,1.0058486302522737e19,1.005950335077843e19,1.006052149854575e19,1.0061538546801443e19,1.0062557794080391e19,1.0063575941847712e19,1.006459518912666e19,1.0065614436405608e19,1.0066633683684557e19,1.0067654030475133e19,1.006867437726571e19,1.0069694724056285e19,1.0070715070846861e19,1.0071736517149065e19,1.007275796345127e19,1.0073779409753473e19,1.0074801955567305e19,1.0075823401869509e19,1.0076847047194968e19,1.00778695930088e19,1.0078892138822631e19,1.0079916883659719e19,1.0080940528985178e19,1.0081964174310638e19,1.0082988919147725e19,1.0084013663984812e19,1.00850384088219e19,1.0086064253170614e19,1.008709009751933e19,1.0088115941868044e19,1.0089142885728387e19,1.009016982958873e19,1.0091195673937445e19,1.0092223717309415e19,1.0093251760681386e19,1.0094279804053357e19,1.0095307847425327e19,1.0096336990308925e19,1.0097366133192524e19,1.0098394176564494e19,1.009942441895972e19,1.0100454661354947e19,1.0101483804238545e19,1.0102515146145399e19,1.0103546488052253e19,1.0104576730447479e19,1.0105608072354333e19,1.0106640513772814e19,1.0107671855679668e19,1.010870429709815e19,1.010973783802826e19,1.011077027944674e19,1.011180382037685e19,1.011283736130696e19,1.011387090223707e19,1.0114905542678807e19,1.0115940183120544e19,1.011697482356228e19,1.0118009464004018e19,1.011904630346901e19,1.0120082043422376e19,1.012111778337574e19,1.0122154622840734e19,1.0123190362794099e19,1.012422830177072e19,1.012526624074734e19,1.0126303080212333e19,1.0127341019188953e19,1.0128380057677201e19,1.012941909616545e19,1.0130458134653698e19,1.0131497173141946e19,1.0132537311141822e19,1.013357634963007e19,1.0134617587141575e19,1.0135658824653079e19,1.0136698962652955e19,1.0137740200164458e19,1.013878253718759e19,1.0139823774699094e19,1.0140866111722226e19,1.0141909548256985e19,1.0142951885280117e19,1.0143995321814876e19,1.0145038758349636e19,1.0146082194884395e19,1.0147126730930782e19,1.014817126697717e19,1.0149215803023557e19,1.0150261438581572e19,1.0151307074139587e19,1.0152352709697602e19,1.0153398345255617e19,1.015444508032526e19,1.0155491815394902e19,1.0156539649976173e19,1.0157586385045815e19,1.0158634219627086e19,1.0159682054208356e19,1.0160730988301255e19,1.0161778822882525e19,1.0162828856487051e19,1.016387779057995e19,1.0164928923696103e19,1.0165977857789002e19,1.0167027891393528e19,1.0168079024509682e19,1.0169129058114208e19,1.017018129074199e19,1.017123352336977e19,1.0172284656485925e19,1.0173336889113706e19,1.0174390221253116e19,1.0175442453880898e19,1.0176496885531935e19,1.0177550217671344e19,1.0178603549810754e19,1.017965798146179e19,1.0180713512624456e19,1.0181767944275493e19,1.0182823475438158e19,1.0183879006600823e19,1.0184934537763488e19,1.018599116843778e19,1.0187047799112073e19,1.0188104429786366e19,1.0189161060460659e19,1.019021879064658e19,1.01912765208325e19,1.0192335350530048e19,1.0193394180227596e19,1.0194451910413517e19,1.0195511839622693e19,1.0196571768831869e19,1.0197630598529417e19,1.0198691627250221e19,1.0199752655971025e19,1.0200813684691829e19,1.0201873613901005e19,1.0202935742133436e19,1.0203997870365868e19,1.02050599985983e19,1.0206122126830731e19,1.020718535457479e19,1.020824858231885e19,1.020931181006291e19,1.0210376137318597e19,1.0211439365062656e19,1.021250479182997e19,1.0213569119085658e19,1.0214634545852973e19,1.0215699972620288e19,1.021676649889923e19,1.0217831925666546e19,1.0218898451945488e19,1.0219966077736059e19,1.0221032604015002e19,1.0222100229805572e19,1.0223167855596143e19,1.022423658089834e19,1.022530530620054e19,1.0226374031502737e19,1.0227442756804936e19,1.0228512581618762e19,1.0229582406432588e19,1.0230652231246414e19,1.023172205606024e19,1.0232794079897321e19,1.0233866103734403e19,1.023493592854823e19,1.0236009051896938e19,1.023708107573402e19,1.0238153099571102e19,1.0239226222919811e19,1.0240300445780148e19,1.024137246961723e19,1.0242446692477567e19,1.0243520915337904e19,1.0244595138198241e19,1.0245670460570206e19,1.0246745782942171e19,1.0247821105314136e19,1.0248897527197729e19,1.0249973949081321e19,1.0251050370964914e19,1.0252127892360135e19,1.0253204314243727e19,1.0254281835638948e19,1.0255360456545796e19,1.0256439077452644e19,1.0257516598847865e19,1.025859631926634e19,1.0259676039684817e19,1.0260754660591665e19,1.0261835480521769e19,1.0262915200940245e19,1.0263996020870349e19,1.0265076840800453e19,1.0266158760242184e19,1.0267240679683916e19,1.0268322599125647e19,1.0269404518567379e19,1.0270487537520738e19,1.0271570556474098e19,1.0272653575427457e19,1.0273738793404072e19,1.0274821812357431e19,1.0275907030334046e19,1.0276992248310661e19,1.0278076366775648e19,1.0279161584752263e19,1.0280249001752134e19,1.0281334219728749e19,1.0282420537216991e19,1.0283507954216862e19,1.0284594271705104e19,1.0285682788216603e19,1.02867713047281e19,1.0287858721727971e19,1.028894723823947e19,1.0290036854262596e19,1.0291125370774094e19,1.029221498679722e19,1.0293304602820346e19,1.02943953183551e19,1.0295486033889853e19,1.0296577848936235e19,1.0297668564470989e19,1.029876037951737e19,1.0299852194563752e19,1.0300944009610134e19,1.0302036924168143e19,1.030313093823778e19,1.030422385279579e19,1.0305317866865426e19,1.0306411880935064e19,1.0307506994516328e19,1.0308601008585966e19,1.030969612216723e19,1.0310792335260123e19,1.0311887448841388e19,1.0312984761445908e19,1.0314080974538801e19,1.0315177187631694e19,1.0316274500236214e19,1.0317372912352362e19,1.0318470224956883e19,1.0319568637073031e19,1.0320668148700807e19,1.0321766560816955e19,1.0322866072444731e19,1.0323966683584135e19,1.0325066195211911e19,1.0326166806351315e19,1.0327267417490719e19,1.0328368028630122e19,1.0329469739281154e19,1.0330571449932186e19,1.0331674260094845e19,1.0332777070257504e19,1.0333879880420164e19,1.0334982690582823e19,1.033608660025711e19,1.0337190509931397e19,1.0338294419605684e19,1.03393994287916e19,1.0340505537489142e19,1.0341610546675057e19,1.0342715555860972e19,1.0343822764070142e19,1.0344928872767685e19,1.0346034981465227e19,1.0347142189674398e19,1.0348250497395196e19,1.0349357705604366e19,1.0350466013325165e19,1.035157542055759e19,1.0352683728278389e19,1.0353793135510815e19,1.035490254274324e19,1.0356011949975667e19,1.0357123556231348e19,1.0358234062975402e19,1.0359344569719456e19,1.0360456175975137e19,1.0361568881742447e19,1.0362680487998128e19,1.0363793193765437e19,1.0364905899532747e19,1.0366018605300056e19,1.0367132410578993e19,1.036824621585793e19,1.0369360021136867e19,1.037047602543906e19,1.0371590930229625e19,1.037270583502019e19,1.0373821839322382e19,1.0374937843624575e19,1.0376054947438395e19,1.0377170951740588e19,1.0378289155066036e19,1.0379406258879857e19,1.0380523362693677e19,1.0381642665530753e19,1.0382760868856201e19,1.038387907218165e19,1.0384999474530353e19,1.0386119876879057e19,1.0387238080204505e19,1.0388359582064837e19,1.0389481083925168e19,1.0390601486273872e19,1.0391722988134203e19,1.0392845589506163e19,1.0393967091366494e19,1.0395089692738454e19,1.039621339362204e19,1.0397335994994e19,1.0398459695877587e19,1.0399584496272802e19,1.0400708197156389e19,1.0401834097063231e19,1.0402958897458446e19,1.0404083697853661e19,1.0405209597760504e19,1.0406336597178974e19,1.0407462497085817e19,1.0408589496504287e19,1.0409717595434385e19,1.0410844594852856e19,1.0411972693782954e19,1.041310189222468e19,1.0414231090666406e19,1.0415359189596504e19,1.0416489487549858e19,1.0417619785503212e19,1.0418748983944937e19,1.041988038140992e19,1.04210117788749e19,1.0422143176339882e19,1.0423274573804863e19,1.0424407070781473e19,1.0425539567758082e19,1.0426672064734691e19,1.0427805661222928e19,1.0428939257711165e19,1.0430072854199402e19,1.0431207550199267e19,1.0432342246199132e19,1.0433478041710625e19,1.043461273771049e19,1.0435748533221982e19,1.0436884328733475e19,1.0438022323268223e19,1.0439158118779716e19,1.0440296113314464e19,1.0441434107849212e19,1.0442571002872332e19,1.0443710096918708e19,1.0444849190965084e19,1.0445987185499832e19,1.0447128478569464e19,1.044826757261584e19,1.0449408865685471e19,1.0450547959731847e19,1.0451690352313106e19,1.0452831645382738e19,1.045397293845237e19,1.0455115331033629e19,1.0456258823126516e19,1.0457400116196147e19,1.0458543608289034e19,1.045968819989355e19,1.0460831691986436e19,1.046197628359095e19,1.0463121974707094e19,1.0464266566311608e19,1.046541225742775e19,1.0466557948543894e19,1.0467704739171664e19,1.0468851529799434e19,1.0469998320427205e19,1.0471145111054975e19,1.0472293001194373e19,1.04734419908454e19,1.0474589880984797e19,1.0475738870635823e19,1.0476888959798477e19,1.0478037949449503e19,1.0479188038612156e19,1.0480339227286438e19,1.0481489316449092e19,1.0482641604635e19,1.0483792793309282e19,1.0484945081495192e19,1.04860973696811e19,1.048724965786701e19,1.0488403045564547e19,1.0489556433262084e19,1.0490710920471249e19,1.0491865407680414e19,1.049301879537795e19,1.0494174382098743e19,1.0495329968819536e19,1.0496485555540328e19,1.0497642241772749e19,1.049879892800517e19,1.049995561423759e19,1.050111230047001e19,1.0502271185725686e19,1.0503427871958106e19,1.0504586757213782e19,1.0505745642469458e19,1.0506905627236762e19,1.0508064512492438e19,1.0509224497259741e19,1.0510384482027045e19,1.0511545566305976e19,1.0512707750096536e19,1.0513868834375467e19,1.0515031018166026e19,1.0516193201956585e19,1.0517355385747145e19,1.0518518669049332e19,1.0519681952351519e19,1.0520846335165334e19,1.0522010717979148e19,1.0523175100792963e19,1.0524339483606778e19,1.052550496593222e19,1.052667154776929e19,1.0527838129606361e19,1.0529003611931804e19,1.0530171293280502e19,1.05313389746292e19,1.053250555646627e19,1.0533674337326596e19,1.0534843118186922e19,1.0536011899047248e19,1.0537180679907574e19,1.0538351659791155e19,1.0539520440651481e19,1.0540691420535063e19,1.0541862400418644e19,1.0543033380302225e19,1.0544205459697435e19,1.0545377539092644e19,1.0546549618487853e19,1.054772279739469e19,1.0548895976301527e19,1.0550069155208364e19,1.0551243433626829e19,1.0552417712045294e19,1.0553591990463758e19,1.055476736839385e19,1.0555942746323943e19,1.0557118124254036e19,1.0558295701207384e19,1.0559472178649104e19,1.0560648656090825e19,1.0561826233044173e19,1.0563004909509149e19,1.0564183585974125e19,1.0565361162927473e19,1.0566540938904076e19,1.056772071488068e19,1.0568899391345656e19,1.0570080266833887e19,1.0571261142322119e19,1.057244201781035e19,1.057362399281021e19,1.0574805967810068e19,1.05759868432983e19,1.0577171017321415e19,1.0578354091832902e19,1.0579537166344389e19,1.0580721340367503e19,1.0581905514390618e19,1.0583089688413733e19,1.0584274961948475e19,1.0585460235483218e19,1.058664550901796e19,1.058783188206433e19,1.0589019354622329e19,1.05902057276687e19,1.0591393200226697e19,1.0592581772296323e19,1.0593769244854321e19,1.0594958916435575e19,1.05961474885052e19,1.0597336060574826e19,1.0598526831667708e19,1.059971760276059e19,1.0600907274341843e19,1.0602098045434724e19,1.0603289916039234e19,1.060448288615537e19,1.0605673657248252e19,1.0606866627364389e19,1.0608060696992154e19,1.060925366710829e19,1.0610446637224428e19,1.061164180636382e19,1.0612835875991585e19,1.0614031045130977e19,1.0615227313781998e19,1.061642248292139e19,1.061761875157241e19,1.0618816119735058e19,1.0620012388386079e19,1.0621209756548727e19,1.0622408224223003e19,1.062360559238565e19,1.0624805159571554e19,1.0626004726757458e19,1.0627203194431734e19,1.0628402761617637e19,1.0629604527826797e19,1.06308040950127e19,1.063200586122186e19,1.0633207627431018e19,1.063440829412855e19,1.0635612259360965e19,1.0636814025570124e19,1.063801689129091e19,1.0639220856523325e19,1.0640425921267368e19,1.0641629886499783e19,1.0642834951243825e19,1.0644040015987868e19,1.064524508073191e19,1.064645124498758e19,1.064765740924325e19,1.0648865772522177e19,1.0650071936777847e19,1.0651279200545145e19,1.065248756382407e19,1.0653695927102996e19,1.065490538989355e19,1.0656114852684104e19,1.0657324315474657e19,1.0658534877776839e19,1.065974544007902e19,1.0660956002381201e19,1.066216766419501e19,1.066337932600882e19,1.0664590987822629e19,1.0665803749148066e19,1.066701760998513e19,1.0668230371310567e19,1.0669444232147632e19,1.0670659192496325e19,1.067187305333339e19,1.067308911319371e19,1.067430517305403e19,1.0675520133402722e19,1.067673729277467e19,1.067795335263499e19,1.0679170512006939e19,1.0680387671378887e19,1.0681605930262462e19,1.0682825288657666e19,1.0684043547541242e19,1.0685262905936445e19,1.0686483363843277e19,1.068770272223848e19,1.0688923180145312e19,1.069014473756377e19,1.0691365195470602e19,1.069258785240069e19,1.0693810509330776e19,1.0695032066749235e19,1.069625582319095e19,1.0697479579632665e19,1.0698702236562751e19,1.0699927092516094e19,1.0701151948469436e19,1.0702376804422779e19,1.070360275988775e19,1.070482871535272e19,1.070605467081769e19,1.0707281725794288e19,1.0708509880282513e19,1.0709735835747484e19,1.0710965089747337e19,1.071219434374719e19,1.0713422498235417e19,1.071465175223527e19,1.0715881006235124e19,1.0717111359746605e19,1.0718341713258086e19,1.0719574265792823e19,1.0720805718815932e19,1.0722037171839042e19,1.0723269724373778e19,1.0724502276908515e19,1.0725734829443252e19,1.0726969581001245e19,1.072820323304761e19,1.0729436885093974e19,1.0730671636651966e19,1.0731908587233214e19,1.0733143338791207e19,1.0734380289372455e19,1.0735617239953703e19,1.0736853091023323e19,1.0738091141116199e19,1.0739329191209075e19,1.074056724130195e19,1.0741805291394826e19,1.074304444099933e19,1.0744283590603833e19,1.0745524939231592e19,1.0746765188347724e19,1.0748005437463855e19,1.0749246786091614e19,1.0750489234231001e19,1.075173058285876e19,1.0752973030998147e19,1.0754216578649162e19,1.0755460126300176e19,1.0756704773462819e19,1.0757948321113833e19,1.0759192968276476e19,1.0760438714950746e19,1.0761684461625016e19,1.0762930208299287e19,1.0764175954973557e19,1.0765423900671082e19,1.076667074685698e19,1.0767918692554506e19,1.0769166638252032e19,1.0770415683461186e19,1.077166472867034e19,1.0772913773879493e19,1.0774165018111902e19,1.0775414063321055e19,1.0776665307553464e19,1.0777917651297501e19,1.0779167796018282e19,1.0780421239273947e19,1.0781673583017984e19,1.078292592676202e19,1.0784179370017686e19,1.0785433912784978e19,1.0786687356040643e19,1.0787941898807935e19,1.0789198640598483e19,1.0790453183365775e19,1.0791709925156323e19,1.0792966666946871e19,1.079422340873742e19,1.0795480150527967e19,1.0796737991830143e19,1.0797996932643946e19,1.0799254773946122e19,1.0800514814271554e19,1.0801774854596985e19,1.0803034894922416e19,1.0804294935247847e19,1.0805556075084906e19,1.0806816115410338e19,1.0808078354759025e19,1.080934169361934e19,1.0810603932968026e19,1.081186727182834e19,1.0813131710200283e19,1.081439394954897e19,1.081565948743254e19,1.0816923925804483e19,1.0818189463688053e19,1.0819455001571623e19,1.082072163896682e19,1.0821988276362019e19,1.0823254913757217e19,1.082452375017567e19,1.0825790387570868e19,1.0827059223989322e19,1.0828329159919403e19,1.0829597996337857e19,1.083086683275631e19,1.083213786819802e19,1.08334078041281e19,1.083467883956981e19,1.0835952074034774e19,1.0837223109476483e19,1.083849524442982e19,1.0839769578406412e19,1.084104171335975e19,1.0842316047336342e19,1.0843590381312934e19,1.0844865814801154e19,1.0846140148777746e19,1.0847415582265967e19,1.0848692115265815e19,1.0849967548754035e19,1.085124518126551e19,1.0852522813776986e19,1.0853800446288462e19,1.0855079178311565e19,1.0856357910334669e19,1.0857636642357772e19,1.0858916473892504e19,1.0860197404938863e19,1.0861477236473594e19,1.0862758167519953e19,1.086404019807794e19,1.0865322228635927e19,1.0866604259193913e19,1.0867887389263528e19,1.0869170519333143e19,1.0870454748914385e19,1.0871738978495627e19,1.087302320807687e19,1.087430853716974e19,1.0875594965774238e19,1.087687919535548e19,1.0878166723471606e19,1.0879454251587731e19,1.088074068019223e19,1.0882029307819983e19,1.0883317935447736e19,1.088460656307549e19,1.0885895190703243e19,1.0887184917842625e19,1.0888475744493634e19,1.0889765471633015e19,1.0891057397795652e19,1.0892349323958288e19,1.0893640150609297e19,1.0894933176283562e19,1.0896227301469454e19,1.0897519227632091e19,1.0898813352817983e19,1.0900108577515504e19,1.0901402702701396e19,1.0902697927398916e19,1.0903994251608064e19,1.0905289476305584e19,1.0906585800514732e19,1.0907883224235508e19,1.0909180647956283e19,1.0910479171188687e19,1.091177769442109e19,1.0913076217653494e19,1.0914375840397525e19,1.0915675463141556e19,1.0916975085885587e19,1.0918276907652874e19,1.091957872942016e19,1.092087945167582e19,1.0922182372954735e19,1.092348529423365e19,1.0924787116000936e19,1.0926091136791478e19,1.092739515758202e19,1.092870027788419e19,1.0930004298674733e19,1.093131051848853e19,1.0932616738302329e19,1.0933922958116127e19,1.0935230277441552e19,1.0936537596766978e19,1.0937843816580776e19,1.0939153334929457e19,1.094046175376651e19,1.0941771272115192e19,1.0943080790463873e19,1.0944391408324182e19,1.0945700926672863e19,1.09470126440448e19,1.0948324361416737e19,1.0949634979277046e19,1.0950948895672238e19,1.0952261712555803e19,1.0953574529439367e19,1.095488844583456e19,1.095620346174138e19,1.0957517378136572e19,1.095883349355502e19,1.0960149608973468e19,1.0961465724391916e19,1.0962782939321991e19,1.0964100154252067e19,1.0965417369182142e19,1.0966735683623846e19,1.0968055097577177e19,1.096937341201888e19,1.0970692825972212e19,1.097201333943717e19,1.097333385290213e19,1.0974655465878716e19,1.0975977078855303e19,1.097729869183189e19,1.0978620304808477e19,1.097994411680832e19,1.0981267928808161e19,1.0982591740808004e19,1.0983915552807846e19,1.0985240464319316e19,1.0986565375830786e19,1.0987892486365512e19,1.098921849738861e19,1.0990544508411707e19,1.0991871618946433e19,1.0993199828992786e19,1.099452803903914e19,1.099585734859712e19,1.0997185558643474e19,1.0998515967713083e19,1.0999845277271065e19,1.1001176785852301e19,1.100250719492191e19,1.1003839803014775e19,1.1005171311596012e19,1.1006503919688876e19,1.1007837627293368e19,1.100917133489786e19,1.1010503942990725e19,1.1011838750106845e19,1.1013174656734593e19,1.101451056336234e19,1.101584537047846e19,1.1017182376617837e19,1.1018519382757212e19,1.1019856388896588e19,1.1021194494547591e19,1.1022533699710222e19,1.1023871805361226e19,1.1025212110035485e19,1.1026551315198116e19,1.1027890520360747e19,1.1029233024058262e19,1.103057332873252e19,1.1031915832430035e19,1.103325833612755e19,1.1034600839825064e19,1.1035943343522578e19,1.103728694673172e19,1.1038632748964119e19,1.103997635217326e19,1.1041322154405659e19,1.1042667956638056e19,1.1044013758870454e19,1.104536066061448e19,1.1046708661870133e19,1.1048055563614159e19,1.1049403564869812e19,1.1050753765148721e19,1.1052101766404375e19,1.1053450867171656e19,1.1054802166962192e19,1.1056152367241101e19,1.1057503667031638e19,1.1058854966822175e19,1.106020736612434e19,1.1061560864938131e19,1.1062913264240296e19,1.1064267862565716e19,1.1065621361379508e19,1.1066975959704928e19,1.1068331657541976e19,1.1069686255867396e19,1.1071043053216072e19,1.1072399850564747e19,1.1073756647913423e19,1.1075114544773726e19,1.1076473541145657e19,1.107783143800596e19,1.1079190434377892e19,1.108055053026145e19,1.1081909526633382e19,1.1083270722028569e19,1.1084633016935383e19,1.1085993112818942e19,1.1087356507237384e19,1.1088718802144199e19,1.109008219656264e19,1.1091445590981083e19,1.1092810084911153e19,1.1094174578841223e19,1.1095539072771293e19,1.1096905765724619e19,1.1098271359166317e19,1.1099638052119642e19,1.1101005844584595e19,1.1102373637049549e19,1.1103741429514502e19,1.1105110321491083e19,1.1106479213467664e19,1.1107848105444246e19,1.1109219196444082e19,1.1110590287443919e19,1.1111961378443756e19,1.111333356895522e19,1.1114705759466684e19,1.1116077949978149e19,1.1117451240001241e19,1.1118825629535961e19,1.1120198919559053e19,1.1121574408605401e19,1.1122949897651749e19,1.1124324287186469e19,1.1125701975256072e19,1.1127078563814048e19,1.1128456251883651e19,1.1129833939953254e19,1.1131211628022858e19,1.1132591515115717e19,1.1133970302696948e19,1.1135351289301434e19,1.1136730076882665e19,1.113811216299878e19,1.1139493149603267e19,1.114087523571938e19,1.1142257321835495e19,1.1143640507463238e19,1.114502369309098e19,1.114640797823035e19,1.1147793362881348e19,1.1149178747532345e19,1.1150564132183343e19,1.115194951683434e19,1.1153337100508594e19,1.115472358467122e19,1.1156111168345473e19,1.1157499851531354e19,1.1158887435205607e19,1.1160277217903116e19,1.1161668100112253e19,1.1163056783298134e19,1.1164448765018898e19,1.1165839647228035e19,1.1167230529437172e19,1.1168623610669564e19,1.1170016691901956e19,1.117140867362272e19,1.1172803953878368e19,1.1174199234134016e19,1.1175592315366408e19,1.1176987595622056e19,1.117838507490096e19,1.1179780355156607e19,1.118117783443551e19,1.1182575313714414e19,1.1183972792993317e19,1.1185371371783848e19,1.1186771050086007e19,1.1188170728388166e19,1.1189571506201952e19,1.1190972284015739e19,1.1192374161341153e19,1.119377493915494e19,1.1195176816480354e19,1.1196579793317396e19,1.1197983869666066e19,1.1199386846503109e19,1.1200792022363406e19,1.1202196098712076e19,1.1203602374084002e19,1.1205008649455927e19,1.1206413825316225e19,1.1207821200199778e19,1.120922967459496e19,1.1210637049478513e19,1.1212046623385321e19,1.121345619729213e19,1.1214864671687311e19,1.1216275345105748e19,1.1217686018524185e19,1.1219096691942621e19,1.1220508464872686e19,1.1221921337314378e19,1.122333420975607e19,1.1224747082197762e19,1.122616215366271e19,1.122757612561603e19,1.1228991197080977e19,1.1230406268545925e19,1.12318224395225e19,1.1233238610499076e19,1.1234656980498907e19,1.123607425098711e19,1.1237492620986941e19,1.12389120904984e19,1.124033156000986e19,1.1241751029521318e19,1.1243170499032777e19,1.1244592167567491e19,1.1246012736590578e19,1.124743550463692e19,1.1248858272683262e19,1.1250281040729604e19,1.1251704908287574e19,1.1253129875357172e19,1.1254552643403514e19,1.125597870998474e19,1.1257404776565965e19,1.125883084314719e19,1.1260258009240044e19,1.1261685175332897e19,1.1263113440937378e19,1.1264541706541859e19,1.1265971071657968e19,1.1267400436774076e19,1.1268829801890185e19,1.127026136602955e19,1.1271692930168914e19,1.1273124494308278e19,1.127455715795927e19,1.1275988722098635e19,1.1277422485261255e19,1.1278857347935502e19,1.1280291111098122e19,1.128172597377237e19,1.1283161935958245e19,1.128459789814412e19,1.1286034959841624e19,1.1287472021539127e19,1.1288910182748258e19,1.129034834395739e19,1.1291787604678148e19,1.1293226865398907e19,1.1294666126119666e19,1.129610758586368e19,1.1297549045607694e19,1.1298990505351709e19,1.1300431965095723e19,1.1301875623862993e19,1.1303318183118635e19,1.1304762941397533e19,1.1306206600164803e19,1.13076513584437e19,1.1309096116722598e19,1.1310543074024751e19,1.1311988931815277e19,1.1313436988629058e19,1.1314885045442839e19,1.1316332002744992e19,1.13177811590704e19,1.1319231414907437e19,1.1320680571232846e19,1.132213192658151e19,1.1323583281930174e19,1.1325034637278839e19,1.132648709213913e19,1.1327939546999423e19,1.1329392001859715e19,1.1330846655743263e19,1.133230130962681e19,1.1333757063021986e19,1.1335211716905533e19,1.1336668569812337e19,1.133812542271914e19,1.1339581176114315e19,1.1341039128532746e19,1.1342498180462805e19,1.1343957232392864e19,1.1345416284322922e19,1.1346877535276237e19,1.1348336587206296e19,1.1349798937671238e19,1.1351260188624552e19,1.1352721439577866e19,1.1354185989066064e19,1.1355648339531006e19,1.1357111789507576e19,1.1358577438507401e19,1.1360043087507227e19,1.1361507636995424e19,1.1362974385506877e19,1.136444113401833e19,1.1365908982041412e19,1.1367376830064493e19,1.1368845777599201e19,1.1370313625622282e19,1.1371783672668619e19,1.1373254819226583e19,1.137472486627292e19,1.1376196012830884e19,1.1377668258900476e19,1.1379141604481696e19,1.1380613850551288e19,1.1382088295644135e19,1.1383562740736983e19,1.138503718582983e19,1.1386512730434306e19,1.1387988275038781e19,1.1389464919154885e19,1.1390941563270988e19,1.1392420406410346e19,1.139389705052645e19,1.1395376993177436e19,1.1396856935828423e19,1.139833687847941e19,1.1399816821130396e19,1.1401298962804638e19,1.1402780004967252e19,1.1404262146641494e19,1.1405745387827364e19,1.1407227529501606e19,1.1408712969710731e19,1.1410198409919857e19,1.1411682750617354e19,1.141316819082648e19,1.1414654730547233e19,1.1416141270267986e19,1.1417630009011995e19,1.1419117648244376e19,1.1420605287476756e19,1.1422095125732393e19,1.142358496398803e19,1.1425074802243666e19,1.1426566839522558e19,1.142805887680145e19,1.1429550914080342e19,1.1431044050870862e19,1.1432537187661382e19,1.143403142396353e19,1.143552456075405e19,1.1437019896567824e19,1.1438516331893228e19,1.144001276721863e19,1.1441509202544034e19,1.1443006737381065e19,1.1444504272218096e19,1.1446004006078382e19,1.144750264042704e19,1.1449002374287327e19,1.1450502108147614e19,1.1452004041031156e19,1.1453505973914698e19,1.145500790679824e19,1.145651093919341e19,1.145801397158858e19,1.1459518103495377e19,1.1461023334913802e19,1.14625274668206e19,1.1464032698239025e19,1.1465540128680706e19,1.146704645961076e19,1.146855389005244e19,1.1470063519517377e19,1.1471570949959057e19,1.1473080579423994e19,1.147459020888893e19,1.1476099838353867e19,1.1477611666842059e19,1.147912349533025e19,1.148063642333007e19,1.1482148251818263e19,1.148366227932971e19,1.1485177406352785e19,1.1486690334352605e19,1.1488206560887308e19,1.1489722787422011e19,1.1491239013956714e19,1.1492756340003045e19,1.1494273666049376e19,1.1495792091607335e19,1.1497310517165294e19,1.1498831141746508e19,1.1500350666816094e19,1.1501871291397308e19,1.150339301549015e19,1.1504913640071365e19,1.1506436463675834e19,1.1507960386791932e19,1.1509483210396402e19,1.1511008233024127e19,1.1512533255651852e19,1.1514058278279578e19,1.1515585499930558e19,1.1517111622069912e19,1.1518638843720892e19,1.1520166065371873e19,1.152169548604611e19,1.1523223807208718e19,1.1524754327394583e19,1.1526284847580447e19,1.1527816467277939e19,1.1529346987463803e19,1.1530879706672923e19,1.1532412425882042e19,1.1533945145091162e19,1.1535480063323537e19,1.1537014981555913e19,1.1538549899788288e19,1.1540085917532291e19,1.1541623034787922e19,1.1543159052531925e19,1.1544697269299184e19,1.1546235486066442e19,1.15477737028337e19,1.1549314118624215e19,1.155085453441473e19,1.1552394950205243e19,1.1553937565019013e19,1.1555479080321155e19,1.1557021695134925e19,1.1558564309948695e19,1.156010912378572e19,1.1561652838111117e19,1.156319875145977e19,1.1564744664808423e19,1.1566290578157076e19,1.1567837591017357e19,1.1569385703389266e19,1.1570932716249547e19,1.157248302764471e19,1.1574032239528247e19,1.1575581451411784e19,1.1577132862318576e19,1.1578684273225368e19,1.1580236783643787e19,1.158178819455058e19,1.1583341804480627e19,1.1584896513922302e19,1.158645012385235e19,1.1588005932805652e19,1.1589561741758956e19,1.1591117550712259e19,1.1592675558688817e19,1.1594232467153748e19,1.1595790475130307e19,1.1597349582618493e19,1.1598909789618307e19,1.1600468897106493e19,1.1602030203617935e19,1.1603591510129377e19,1.160515281664082e19,1.1606716322175517e19,1.1608279827710214e19,1.1609843333244912e19,1.1611407938291237e19,1.1612972543337562e19,1.1614538247895515e19,1.1616105051965096e19,1.1617671856034677e19,1.1619239759615885e19,1.1620808762708722e19,1.1622377765801558e19,1.1623946768894394e19,1.1625516871498858e19,1.1627089173126578e19,1.162866037524267e19,1.1630231577358762e19,1.163180497849811e19,1.1633378379637457e19,1.1634952880288432e19,1.1636527380939407e19,1.163810298110201e19,1.1639678581264613e19,1.1641255280938844e19,1.1642833080124703e19,1.1644409779798934e19,1.164598867849642e19,1.1647568676705534e19,1.164914757540302e19,1.1650728673123762e19,1.1652309770844504e19,1.1653891968076874e19,1.1655474165309243e19,1.165705746205324e19,1.1658640758797238e19,1.1660225155052863e19,1.1661810650820116e19,1.166339614658737e19,1.1664981642354622e19,1.166656933714513e19,1.1668155932424012e19,1.1669745826237776e19,1.1671334620539912e19,1.1672923414842049e19,1.1674513308655813e19,1.1676104301981204e19,1.1677696394818224e19,1.1679287388143616e19,1.1680880580492263e19,1.1682474872352539e19,1.1684068064701186e19,1.168566345607309e19,1.1687258847444992e19,1.1688854238816895e19,1.1690451829212054e19,1.1692049419607212e19,1.169364701000237e19,1.1695246799420785e19,1.169684548932757e19,1.1698445278745985e19,1.1700046167676027e19,1.1701647056606069e19,1.170324794553611e19,1.1704852133001036e19,1.1706455220954333e19,1.170805830890763e19,1.1709663595884184e19,1.1711269982372364e19,1.171287416983729e19,1.1714481655837098e19,1.1716089141836906e19,1.1717696627836715e19,1.1719305213348151e19,1.1720914898371215e19,1.1722523483882652e19,1.1724134268417343e19,1.1725746152463663e19,1.1727356936998355e19,1.172897102006793e19,1.1730584003625878e19,1.1732198086695453e19,1.1733812169765028e19,1.173542735234623e19,1.1737043634439062e19,1.1738658817020264e19,1.174027729813635e19,1.1741895779252437e19,1.1743513160856895e19,1.174513274148461e19,1.1746753421623951e19,1.1748373002251665e19,1.1749994781902635e19,1.1751616561553605e19,1.1753238341204574e19,1.17548623198788e19,1.1756487398064652e19,1.175811027722725e19,1.175973645492473e19,1.1761362632622211e19,1.1762988810319692e19,1.17646160875288e19,1.1766244464249537e19,1.1767871741458645e19,1.1769502317202637e19,1.1771131793435e19,1.1772762369178993e19,1.1774394044434612e19,1.177602681920186e19,1.177765849445748e19,1.1779292368736354e19,1.178092624301523e19,1.1782561216805732e19,1.1784196190596235e19,1.1785833363409994e19,1.1787470536223752e19,1.1789106609525883e19,1.179074488185127e19,1.179238535319991e19,1.1794023625525297e19,1.1795664096873939e19,1.1797305667734209e19,1.179894613908285e19,1.1800588809454748e19,1.1802231479826645e19,1.1803874150198542e19,1.1805520119105323e19,1.1807164988500476e19,1.1808809857895629e19,1.1810456926314037e19,1.1812103994732446e19,1.1813751063150854e19,1.1815400330592518e19,1.1817049598034182e19,1.1818698865475846e19,1.1820350331940766e19,1.1822001798405685e19,1.1823652165358977e19,1.1825305830847152e19,1.1826959496335327e19,1.1828612062311875e19,1.1830266827311677e19,1.1831922691823108e19,1.1833578556334539e19,1.1835235520357597e19,1.1836893583892283e19,1.183855164742697e19,1.1840209710961656e19,1.1841869973519598e19,1.1843531335589167e19,1.1845190498635481e19,1.1846852960216678e19,1.1848515421797876e19,1.1850177883379073e19,1.1851841444471898e19,1.1853507204587979e19,1.1855171865192432e19,1.1856837625308512e19,1.185850448493622e19,1.1860170245052301e19,1.1861839303703265e19,1.186350836235423e19,1.1865177421005193e19,1.1866847579167785e19,1.1868518836842004e19,1.1870188995004596e19,1.1871862451702071e19,1.1873535908399546e19,1.1875207166073766e19,1.1876882821794497e19,1.18785573780036e19,1.188023303372433e19,1.1881909788956688e19,1.1883587643700675e19,1.1885264398933033e19,1.1886943353188647e19,1.188862230744426e19,1.1890302361211503e19,1.1891983514490372e19,1.1893664667769242e19,1.1895348020071367e19,1.1897030272861864e19,1.1898714724675617e19,1.190039917648937e19,1.1902082528791495e19,1.1903769179628503e19,1.1905455830465511e19,1.190714248130252e19,1.1908830231651156e19,1.191051908151142e19,1.1912207931371684e19,1.1913898980255203e19,1.1915588929627095e19,1.1917279978510615e19,1.1918972126905762e19,1.1920665374812537e19,1.1922358622719312e19,1.1924052970137715e19,1.1925748417067745e19,1.1927443863997776e19,1.1929141509951062e19,1.193083805639272e19,1.1932535702346007e19,1.193423444781092e19,1.1935934292787462e19,1.1937634137764004e19,1.1939335082252173e19,1.194103712625197e19,1.194273807074014e19,1.1944442313763193e19,1.1946146556786246e19,1.1947851899320926e19,1.194955614234398e19,1.1951262584390287e19,1.1952969026436596e19,1.1954675468482904e19,1.1956384109552468e19,1.195809385013366e19,1.1959802491203224e19,1.1961513331296043e19,1.1963224171388862e19,1.196493611099331e19,1.1966649150109385e19,1.1968363288737087e19,1.1970075228341535e19,1.1971790466480865e19,1.1973506804131824e19,1.1975222042271154e19,1.197693947943374e19,1.1978658016107954e19,1.198037545327054e19,1.1982095089456382e19,1.1983815825153851e19,1.1985535461339693e19,1.198725729654879e19,1.1988980231269515e19,1.1990702066478612e19,1.1992426100710965e19,1.1994150134943318e19,1.1995875268687299e19,1.1997601501942907e19,1.1999327735198515e19,1.2001055067965751e19,1.2002783500244615e19,1.2004513032035107e19,1.2006242563825598e19,1.2007973195127718e19,1.2009703826429837e19,1.2011436656755212e19,1.201316838756896e19,1.2014902317405962e19,1.2016636247242965e19,1.2018370177079968e19,1.2020106305940226e19,1.2021842434800484e19,1.202357966317237e19,1.2025316891544257e19,1.2027056318939398e19,1.202879574633454e19,1.203053627324131e19,1.2032276800148079e19,1.2034018426566476e19,1.20357611524965e19,1.2037504977938153e19,1.2039247703868178e19,1.2040992628821459e19,1.2042738653286367e19,1.2044483578239648e19,1.2046231801727812e19,1.2047978925704348e19,1.2049727149192511e19,1.2051476472192303e19,1.2053226894703722e19,1.2054977317215142e19,1.205672883923819e19,1.2058481460772864e19,1.2060234082307539e19,1.2061987803353842e19,1.20637437234234e19,1.206549854398133e19,1.2067254464050889e19,1.2069011483632075e19,1.2070769602724889e19,1.2072527721817702e19,1.2074286940422144e19,1.2076047258538213e19,1.2077806477142655e19,1.207956899428198e19,1.2081331511421305e19,1.208309402856063e19,1.2084857645211582e19,1.2086622361374163e19,1.2088387077536743e19,1.209015399272258e19,1.2091920907908415e19,1.209368892260588e19,1.2095456937303343e19,1.2097226051512435e19,1.2098996265233154e19,1.2100767578465501e19,1.2102538891697848e19,1.2104310204930195e19,1.2106083717185798e19,1.2107858328953029e19,1.210963294072026e19,1.211140755248749e19,1.2113184363277976e19,1.2114961174068462e19,1.2116739084370575e19,1.2118518094184317e19,1.2120297103998058e19,1.2122078312835056e19,1.2123858422160425e19,1.212564073050905e19,1.2127423038857675e19,1.2129206446717927e19,1.2130990954089808e19,1.2132775461461688e19,1.2134561068345197e19,1.2136347774740333e19,1.2138134481135469e19,1.2139922287042232e19,1.2141711192460624e19,1.2143501197390643e19,1.2145291202320663e19,1.2147083406273937e19,1.2148874510715585e19,1.2150667814180487e19,1.215246111764539e19,1.215425552062192e19,1.2156051023110078e19,1.2157846525598237e19,1.2159642028086395e19,1.2161440829109436e19,1.2163239630132478e19,1.2165037331643892e19,1.2166838331690189e19,1.2168639331736486e19,1.2170440331782783e19,1.2172242431340708e19,1.2174046729921888e19,1.217584992899144e19,1.2177654227572621e19,1.2179460725177057e19,1.2181267222781493e19,1.218307372038593e19,1.218488241701362e19,1.218669221315294e19,1.2188499810269004e19,1.219031070591995e19,1.2192122701082526e19,1.2193933596733473e19,1.2195746691407675e19,1.2197560885593506e19,1.2199375079779336e19,1.2201189273965167e19,1.220300676668588e19,1.2204823159894966e19,1.220664065261568e19,1.2208459244848022e19,1.2210277837080363e19,1.221209862833596e19,1.2213920519103185e19,1.2215740210847154e19,1.2217563201126007e19,1.2219388390428115e19,1.2221211380706968e19,1.2223036570009076e19,1.2224862858822812e19,1.222668804812492e19,1.2228516535961911e19,1.2230345023798903e19,1.2232173511635894e19,1.2234004198496141e19,1.2235834885356388e19,1.2237666671728263e19,1.2239498458100138e19,1.224133134398364e19,1.2243166428890399e19,1.224500041428553e19,1.2246836598703915e19,1.2248673882633929e19,1.2250510067052315e19,1.2252348450493956e19,1.2254187933447225e19,1.2256027416400495e19,1.2257867998865392e19,1.2259709680841916e19,1.2261551362818441e19,1.2263394144306594e19,1.2265239124818002e19,1.2267083005817782e19,1.2268929085840818e19,1.2270776265375482e19,1.2272622345398518e19,1.2274471723956437e19,1.2276320003002728e19,1.2278169381560648e19,1.2280020959141822e19,1.2281872536722997e19,1.2283724114304172e19,1.2285577890908602e19,1.228743276702466e19,1.2289285444117463e19,1.2291142519256777e19,1.229299959439609e19,1.2294855570023776e19,1.2296714844186345e19,1.2298573018837287e19,1.2300433392511484e19,1.230229376618568e19,1.2304156338883133e19,1.2306017812068958e19,1.230788038476641e19,1.2309746255998747e19,1.2311611027719455e19,1.2313475799440163e19,1.2315342770184126e19,1.2317210840439718e19,1.2319077811183682e19,1.2320948080462529e19,1.2322819449253003e19,1.2324688619020222e19,1.2326561087322325e19,1.2328433555624428e19,1.233030602392653e19,1.2332180691251888e19,1.2334056458088874e19,1.2335931125414232e19,1.2337809091274473e19,1.2339687057134715e19,1.2341565022994956e19,1.2343445187878453e19,1.234532535276195e19,1.2347205517645447e19,1.2349088981063827e19,1.235097134497058e19,1.235285480838896e19,1.2354739371318968e19,1.2356626133272232e19,1.2358512895225496e19,1.2360398557667131e19,1.236228751864365e19,1.236417647962017e19,1.2366065440596689e19,1.2367956600596464e19,1.2369848860107866e19,1.2371741119619269e19,1.2373634478642299e19,1.237552783766533e19,1.2377423395711615e19,1.23793189537579e19,1.2381215611315814e19,1.2383113368385356e19,1.2385012224966525e19,1.2386912181059322e19,1.238881103764049e19,1.2390712093244916e19,1.2392615347872596e19,1.2394517502988648e19,1.2396420757616329e19,1.2398326211267265e19,1.2400230565406573e19,1.2402138218080764e19,1.2404045870754955e19,1.2405953523429147e19,1.2407862275614966e19,1.2409772127312413e19,1.2411683078521487e19,1.2413594029730562e19,1.2415507179962892e19,1.2417420330195223e19,1.241933457993918e19,1.2421251028706394e19,1.2423167477473608e19,1.2425083926240821e19,1.2427001474519663e19,1.242892122182176e19,1.2430839869612229e19,1.2432760716425953e19,1.2434682662751306e19,1.243660350956503e19,1.2438527654913638e19,1.2440451800262246e19,1.2442377045122482e19,1.2444303389494346e19,1.244622973386621e19,1.24481571777497e19,1.245008572114482e19,1.2452015364051567e19,1.2453946106469941e19,1.2455877948399944e19,1.2457809790329946e19,1.2459741632259949e19,1.2461676772724834e19,1.246361191318972e19,1.2465545954142978e19,1.246748329363112e19,1.2469421732630888e19,1.247135907211903e19,1.2473299710142054e19,1.247524034816508e19,1.2477180986188104e19,1.2479122723722756e19,1.2481066660280664e19,1.2483010596838572e19,1.248495453339648e19,1.2486900668977644e19,1.2488847904070435e19,1.2490794039651598e19,1.2492743473767645e19,1.2494692907883692e19,1.2496643441511367e19,1.2498593975139041e19,1.2500546707789971e19,1.2502499440440902e19,1.2504454372115087e19,1.2506408204277645e19,1.2508363135951831e19,1.2510320266649272e19,1.2512278496858341e19,1.251423672706741e19,1.2516196056788107e19,1.251815758553206e19,1.2520118014764384e19,1.2522079543508337e19,1.2524044370787172e19,1.2526006999042753e19,1.2527972925833216e19,1.252993885262368e19,1.2531904779414143e19,1.2533872905227862e19,1.2535843230064837e19,1.2537811355878556e19,1.253978168071553e19,1.254175420457576e19,1.2543725628924363e19,1.254569925229622e19,1.2547673975179706e19,1.254964979757482e19,1.2551624520458306e19,1.2553602541876675e19,1.2555581662806671e19,1.2557558584713413e19,1.2559538805155037e19,1.256152012510829e19,1.2563501445061542e19,1.256548496403805e19,1.2567469582526185e19,1.2569452001991066e19,1.2571438819502457e19,1.2573425637013848e19,1.2575411355013612e19,1.2577400371548258e19,1.2579390487594533e19,1.258137950412918e19,1.258337181919871e19,1.258536413426824e19,1.258735644933777e19,1.2589350963430556e19,1.2591345477523341e19,1.2593341091127755e19,1.2595338903755424e19,1.2597336716383093e19,1.2599334529010762e19,1.2601335640173314e19,1.2603335651824239e19,1.260533676298679e19,1.2607340073172599e19,1.2609343383358407e19,1.2611347793055842e19,1.2613353302264906e19,1.2615359910985597e19,1.2617367619217916e19,1.2619375327450235e19,1.2621384135194182e19,1.2623395141961384e19,1.2625406148728586e19,1.2627418255007416e19,1.2629431460797874e19,1.263144576609996e19,1.2633460071402045e19,1.2635476575727387e19,1.2637493080052728e19,1.2639511783401325e19,1.264153158626155e19,1.2643550289610146e19,1.2645571191981998e19,1.2647594293377106e19,1.2649615195748958e19,1.2651639396655694e19,1.2653664697074057e19,1.2655688897980793e19,1.265771749693404e19,1.2659744996375658e19,1.2661773595328905e19,1.266380329379378e19,1.2665834091770282e19,1.2667864889746784e19,1.2669897886746542e19,1.26719308837463e19,1.2673964980257686e19,1.2676000176280699e19,1.2678038670838596e19,1.2680074966373237e19,1.2682113460931133e19,1.2684153055000658e19,1.268619374858181e19,1.2688234442162962e19,1.269027733476737e19,1.2692321326883406e19,1.2694365318999441e19,1.2696410410627105e19,1.2698456601766396e19,1.2700503892417315e19,1.2702552282579862e19,1.2704601772254036e19,1.270665126192821e19,1.270870295062564e19,1.2710755738834698e19,1.2712807427532128e19,1.2714862414764442e19,1.2716918501508383e19,1.2718973488740696e19,1.2721031774507893e19,1.272309006027509e19,1.2725148346042286e19,1.2727209930344366e19,1.2729271514646446e19,1.2731331999436898e19,1.2733395782762234e19,1.2735460665599197e19,1.2737524448924533e19,1.2739591530784752e19,1.274165861264497e19,1.274372569450519e19,1.2745796074900292e19,1.2747866455295394e19,1.2749939034713752e19,1.2752010514620482e19,1.2754084193550467e19,1.275615897199208e19,1.2758232650922066e19,1.2760309628386935e19,1.276238880487506e19,1.2764465782339928e19,1.2766544958828052e19,1.2768626334339432e19,1.2770706610339185e19,1.2772789085362192e19,1.2774873759408456e19,1.2776957333943091e19,1.2779043107500982e19,1.2781129980570501e19,1.278321685364002e19,1.2785304826221167e19,1.2787396097337197e19,1.278948516942997e19,1.2791577540057629e19,1.2793671010196914e19,1.2795763380824572e19,1.2797859049987113e19,1.2799954719149654e19,1.2802050388312195e19,1.280414935600962e19,1.2806248323707044e19,1.2808347291404468e19,1.2810448458125148e19,1.2812550724357456e19,1.281465518961302e19,1.2816757455845327e19,1.2818863020612518e19,1.2820969684891337e19,1.2823075249658528e19,1.2825184112960602e19,1.2827295175285932e19,1.2829404038588006e19,1.2831515100913336e19,1.2833628362261922e19,1.283574052409888e19,1.283785598447072e19,1.2839971444842562e19,1.2842086905214403e19,1.2844205664121127e19,1.2846324423027851e19,1.2848442082422948e19,1.2850564139864556e19,1.2852686197306163e19,1.285480825474777e19,1.2856932511212634e19,1.2859057867189125e19,1.2861183223165616e19,1.2863310778165363e19,1.2865439432676737e19,1.2867566987676484e19,1.2869697841211113e19,1.2871828694745743e19,1.2873961747303629e19,1.2876094799861514e19,1.2878230051442655e19,1.2880364203512168e19,1.2882501654116565e19,1.2884639104720962e19,1.2886778754348614e19,1.2888918403976266e19,1.2891059153115546e19,1.2893201001766453e19,1.289534285041736e19,1.2897486898091524e19,1.2899633144788943e19,1.2901778291974734e19,1.2903926737695408e19,1.2906074083904455e19,1.2908223629136757e19,1.2910374273880687e19,1.2912527117647872e19,1.2914677762391802e19,1.2916832805182243e19,1.2918986748461056e19,1.2921142890763125e19,1.2923300132576821e19,1.2925458473902146e19,1.2927615715715842e19,1.2929776256064422e19,1.2931938995436257e19,1.2934100635296465e19,1.2936264474179928e19,1.2938428313063391e19,1.2940593251458482e19,1.2942760388876829e19,1.2944928625806803e19,1.2947096862736777e19,1.2949267298690007e19,1.2951438834154865e19,1.295361146913135e19,1.2955783004596208e19,1.2957958938107576e19,1.2960134871618945e19,1.2962310805130314e19,1.296448783815331e19,1.2966667070199562e19,1.2968846302245814e19,1.2971027733315322e19,1.2973210263896457e19,1.2975392794477593e19,1.2977576424570356e19,1.2979762253686374e19,1.2981948082802393e19,1.2984136110941667e19,1.298632523859257e19,1.2988514366243471e19,1.2990705692917629e19,1.2992898119103414e19,1.29950905452892e19,1.2997284070986613e19,1.2999479795707281e19,1.300167552042795e19,1.3003873444171874e19,1.3006072467427426e19,1.3008271490682978e19,1.3010472712961786e19,1.3012675034752221e19,1.3014877356542657e19,1.3017081877356347e19,1.3019287497681666e19,1.3021493118006985e19,1.3023702036867187e19,1.3025910955727389e19,1.3028120974099218e19,1.3030330992471048e19,1.3032543209866134e19,1.3034757626284474e19,1.3036970943191187e19,1.3039186459121156e19,1.304140417407438e19,1.3043619690004349e19,1.3045839603980829e19,1.3048060617468936e19,1.3050279431933788e19,1.305250374395678e19,1.3054726956468142e19,1.3056950168979505e19,1.3059176680025752e19,1.3061404290583626e19,1.3063630801629872e19,1.3065860611211002e19,1.3068090420792132e19,1.307032132988489e19,1.3072554438000902e19,1.3074788645628543e19,1.3077022853256184e19,1.307925925990708e19,1.3081496766069604e19,1.30837331727205e19,1.3085973977417908e19,1.3088214782115316e19,1.3090455586812723e19,1.3092698590533386e19,1.3094943793277305e19,1.3097188996021223e19,1.3099434198765142e19,1.3101682700043944e19,1.3103931201322746e19,1.3106179702601548e19,1.3108431502415233e19,1.3110684401740546e19,1.3112936201554231e19,1.31151912999028e19,1.3117447497762996e19,1.3119703695623193e19,1.3121962092506644e19,1.3124220489390096e19,1.3126481085296804e19,1.312874278071514e19,1.3131005575645102e19,1.3133268370575065e19,1.3135533364528284e19,1.3137800557504758e19,1.3140066650969604e19,1.3142334943457706e19,1.3144605434969063e19,1.3146874826968793e19,1.3149147517503406e19,1.3151421307549647e19,1.3153695097595888e19,1.3155971086665384e19,1.315824707573488e19,1.3160525263827632e19,1.3162804551432012e19,1.316508493854802e19,1.3167365325664027e19,1.3169649011314917e19,1.3171933796477436e19,1.3174218581639954e19,1.31765044663141e19,1.3178791450499875e19,1.3181080633708904e19,1.3183369816917934e19,1.318566119915022e19,1.3187953680894132e19,1.3190246162638045e19,1.3192540843405214e19,1.319483662368401e19,1.3197132403962806e19,1.3199431482776486e19,1.3201731661101793e19,1.3204030739915473e19,1.3206333117264036e19,1.3208636594124227e19,1.3210940070984417e19,1.3213245746867864e19,1.3215552522262938e19,1.321786039716964e19,1.322016937158797e19,1.3222479445517926e19,1.3224790618959512e19,1.3227102891912724e19,1.322941846340082e19,1.3231731835865661e19,1.3234048506865385e19,1.3236366277376737e19,1.323868404788809e19,1.3241004017422696e19,1.324332618598056e19,1.3245648354538422e19,1.3247971622607913e19,1.325029708970066e19,1.3252623656305033e19,1.325494912339778e19,1.325727788902541e19,1.3259608853676294e19,1.3261938718815551e19,1.3264271882489692e19,1.3266605046163833e19,1.3268939309349601e19,1.3271275771558625e19,1.3273613333279277e19,1.3275949795488301e19,1.3278290655743836e19,1.3280631515999371e19,1.3282973475766534e19,1.3285316535045325e19,1.328766179334737e19,1.329000595213779e19,1.3292353409463091e19,1.329470196630002e19,1.3297051622648578e19,1.3299402378508763e19,1.3301754233880576e19,1.3304107188764017e19,1.3306461243159085e19,1.330881749657741e19,1.3311173749995733e19,1.331353330194894e19,1.3315892853902148e19,1.3318253505366983e19,1.3320615256343446e19,1.3322978106831536e19,1.332534425585451e19,1.3327708205854228e19,1.333007545438883e19,1.3332444901946687e19,1.3334813249992917e19,1.333718489657403e19,1.333955764266677e19,1.3341930388759511e19,1.334430423436388e19,1.3346681378503131e19,1.3349057423130755e19,1.3351436766293262e19,1.335381610945577e19,1.3356196552129905e19,1.3358580293338923e19,1.3360962935036314e19,1.3363346676245332e19,1.3365733715989234e19,1.3368121855244763e19,1.3370508894988665e19,1.3372900332779078e19,1.337529177056949e19,1.3377683208359903e19,1.3380076845173572e19,1.3382472681010495e19,1.338486851684742e19,1.3387266551707599e19,1.3389665686079406e19,1.3392064820451213e19,1.3394467253357904e19,1.3396869686264594e19,1.3399275417706168e19,1.3401678950124487e19,1.3404085781077688e19,1.3406494811054146e19,1.3408902741518975e19,1.3411313970518688e19,1.3413726299030028e19,1.3416138627541369e19,1.3418553155075965e19,1.3420969881633817e19,1.3423386608191668e19,1.3425805533772775e19,1.342822555886551e19,1.3430644484446618e19,1.3433067808074236e19,1.3435492231213482e19,1.34379155548411e19,1.3440342177003602e19,1.344277099818936e19,1.3445198719863489e19,1.3447629740072501e19,1.3450061859793142e19,1.3452492880002154e19,1.3454928298257678e19,1.345736481602483e19,1.3459800234280354e19,1.3462237851559133e19,1.3464678767372796e19,1.3467117484163203e19,1.3469560599000121e19,1.3472004813348667e19,1.3474447928185586e19,1.3476895441069015e19,1.3479342953952444e19,1.348179266585913e19,1.3484242377765814e19,1.3486693189184127e19,1.3489147299137323e19,1.3491599210067263e19,1.3494055519043715e19,1.3496512927531794e19,1.3498970336019874e19,1.3501429943531209e19,1.35038917500658e19,1.350635355660039e19,1.3508816462646608e19,1.351128266722771e19,1.3513747772297183e19,1.351621617590154e19,1.3518684579505897e19,1.3521154082621882e19,1.3523625784761123e19,1.3526099685923619e19,1.3528572487574487e19,1.3531049687271866e19,1.3533526886969246e19,1.3536004086666625e19,1.3538484584898888e19,1.3540966182642778e19,1.3543447780386669e19,1.3545931577153815e19,1.3548417572944216e19,1.3550903568734618e19,1.3553391763548275e19,1.3555882157385187e19,1.3558371451710472e19,1.356086404457064e19,1.3563357736942436e19,1.3565853628337488e19,1.356834951973254e19,1.3570846510639219e19,1.3573346800080781e19,1.3575844890499088e19,1.3578347378963907e19,1.358085206645198e19,1.3583354554916798e19,1.3585861441428128e19,1.3588369427451085e19,1.3590877413474042e19,1.3593387598520254e19,1.3595899982589723e19,1.3598411267147563e19,1.3600925850240287e19,1.3603442632356266e19,1.3605958314960617e19,1.3608477296099852e19,1.3610997376750715e19,1.3613518556913205e19,1.3616040836587323e19,1.3618565315284697e19,1.362108979398207e19,1.36236164717027e19,1.3626145348446585e19,1.362867422519047e19,1.3631206400469238e19,1.3633739675259634e19,1.3636271850538402e19,1.363880842386368e19,1.364134499718896e19,1.3643883769537495e19,1.364642254188603e19,1.364896351325782e19,1.3651506683652866e19,1.3654049854047912e19,1.3656596322977841e19,1.365914279190777e19,1.3661690360349327e19,1.366424012781414e19,1.366679099479058e19,1.366934186176702e19,1.3671897126789972e19,1.3674453491324551e19,1.3677007656835875e19,1.367956622039371e19,1.36821269829748e19,1.3684686646044262e19,1.3687249607648608e19,1.368981476827621e19,1.3692377729880556e19,1.3694945089531412e19,1.3697514648205525e19,1.370008310736801e19,1.3702654865065378e19,1.3705227722274374e19,1.370780057948337e19,1.3710376735227249e19,1.3712953990482756e19,1.3715531245738263e19,1.3718111799528653e19,1.372069345283067e19,1.3723275106132689e19,1.372586005796959e19,1.3728445009806492e19,1.3731034359689904e19,1.3733621510550061e19,1.3736211959945101e19,1.373880350885177e19,1.3741395057758437e19,1.3743991004711617e19,1.3746585852153168e19,1.3749182898617975e19,1.3751782144106037e19,1.3754383588617355e19,1.3756983933617046e19,1.375958757715162e19,1.376219232019782e19,1.3764797063244022e19,1.3767406204336734e19,1.3770015345429447e19,1.3772625586033787e19,1.377523912517301e19,1.3777852664312234e19,1.3780466203451458e19,1.3783084140637192e19,1.3785702077822927e19,1.378832111452029e19,1.3790942350240907e19,1.379356578498478e19,1.3796188120217027e19,1.3798814853495783e19,1.3801442686286168e19,1.3804069419564925e19,1.3806700550890193e19,1.3809332781727089e19,1.3811966112075612e19,1.3814599442424136e19,1.3817236071307543e19,1.3819874899214205e19,1.382251262760924e19,1.3825154754050785e19,1.382779688049233e19,1.3830439006933877e19,1.3833085531421934e19,1.383573205590999e19,1.3838378580398047e19,1.3841029502932615e19,1.3843680425467183e19,1.3846332447513379e19,1.3848987768094458e19,1.3851644188187165e19,1.3854300608279871e19,1.3856960326907462e19,1.385962114504668e19,1.3862281963185897e19,1.3864946079859999e19,1.3867611296045728e19,1.3870276512231457e19,1.387294502695207e19,1.3875615740695937e19,1.3878285354928177e19,1.3880959367206928e19,1.3883634478997307e19,1.3886308491276059e19,1.388898690160132e19,1.3891666411438211e19,1.3894344821763473e19,1.3897027630135247e19,1.3899711538018648e19,1.3902397644925305e19,1.3905082652320334e19,1.3907772057761874e19,1.3910462562715042e19,1.391315306766821e19,1.391584687115626e19,1.391854177415594e19,1.3921236677155619e19,1.3923934878690181e19,1.3926634179736371e19,1.392933458029419e19,1.3932037179875262e19,1.3934741978479591e19,1.3937444578060665e19,1.3940153774711505e19,1.3942862971362345e19,1.3945572168013185e19,1.3948284663198908e19,1.395099825789626e19,1.395371185259361e19,1.3956428745825845e19,1.3959147838081335e19,1.3961865830825198e19,1.396458822161557e19,1.3967311711917572e19,1.3970035202219573e19,1.397276089154483e19,1.397548987940497e19,1.3978217767753482e19,1.3980948954636878e19,1.3983682340543529e19,1.3986416825961808e19,1.3989152410891715e19,1.399188909533325e19,1.3994629078309667e19,1.3997369061286085e19,1.4000111243285758e19,1.4002855624308687e19,1.4005600005331616e19,1.40083465853778e19,1.4011096463958868e19,1.4013845243028308e19,1.401659842014426e19,1.4019352696771838e19,1.402210587388779e19,1.4024863449050251e19,1.4027622123724341e19,1.4030380798398431e19,1.4033143871119032e19,1.4035906943839633e19,1.4038671116071862e19,1.4041438586838974e19,1.4044206057606087e19,1.4046975727396454e19,1.404974649669845e19,1.4052520564535329e19,1.405529353286058e19,1.4058070899232342e19,1.4060849365115732e19,1.4063627830999122e19,1.4066409595417395e19,1.4069193558858924e19,1.4071976422788825e19,1.4074764784276865e19,1.4077553145764905e19,1.4080342606764573e19,1.4083133167275868e19,1.408592592681042e19,1.4088721984879854e19,1.4091515843926032e19,1.4094314101018722e19,1.4097114557134668e19,1.4099915013250613e19,1.4102718767901442e19,1.4105523622063899e19,1.4108328476226355e19,1.4111137728435323e19,1.411394698064429e19,1.4116757332364886e19,1.4119570982620365e19,1.41223868318991e19,1.4125200482154578e19,1.4128019629968196e19,1.413083987729344e19,1.4133660124618686e19,1.4136483670478815e19,1.4139308315850572e19,1.4142134060733956e19,1.4144963104152224e19,1.414779324708212e19,1.4150623390012015e19,1.4153456831476793e19,1.4156292471964828e19,1.4159128112452862e19,1.416196705147578e19,1.4164807090010325e19,1.4167650427079754e19,1.4170492664637555e19,1.417333820073024e19,1.4176185935846179e19,1.417903257145049e19,1.4181883605101314e19,1.4184736837775393e19,1.4187588970937844e19,1.4190445502146806e19,1.4193303132867396e19,1.4196161863099613e19,1.4199021692843459e19,1.4201884821122187e19,1.4204747949400916e19,1.4207614376214528e19,1.4210481902539768e19,1.4213351627888263e19,1.4216222452748386e19,1.4219096576143393e19,1.4221969600026771e19,1.4224847021956661e19,1.4227725543398179e19,1.4230604064839696e19,1.4233485884816097e19,1.4236369903815754e19,1.4239252823303782e19,1.424214124034995e19,1.4245029657396118e19,1.4247919173953913e19,1.4250811989046591e19,1.4253707003162526e19,1.4256599818255204e19,1.4259498130906022e19,1.4262398642580095e19,1.4265300253765796e19,1.4268200765439869e19,1.427110677467208e19,1.4274012783904293e19,1.4276919892648133e19,1.4279831399438483e19,1.4282742906228834e19,1.4285655512530813e19,1.4288570317856047e19,1.4291488421716165e19,1.4294405426064654e19,1.4297325728948027e19,1.4300250429877912e19,1.430317293178454e19,1.4306098732226052e19,1.4309027831202447e19,1.4311954731155587e19,1.4314888228178493e19,1.43178217252014e19,1.4320754122712678e19,1.4323690918270468e19,1.4326631012363141e19,1.4329570006944186e19,1.4332512300060115e19,1.4335457891710927e19,1.4338401284338483e19,1.4341350174524178e19,1.4344300164221501e19,1.4347250153918824e19,1.435020344215103e19,1.4353157829894865e19,1.4356115516173582e19,1.43590732024523e19,1.43620341872659e19,1.4364997371102757e19,1.4367959455427985e19,1.4370925937799725e19,1.437389461919472e19,1.4376863300589715e19,1.4379834181007966e19,1.43828083599611e19,1.4385781439402607e19,1.4388760016402252e19,1.4391738593401897e19,1.439471826991317e19,1.4397701244959326e19,1.4400686419028738e19,1.440367159309815e19,1.4406658966190817e19,1.4409649637818368e19,1.4412640309445919e19,1.441563537911998e19,1.4418630448794042e19,1.442162771749136e19,1.4424627185211933e19,1.4427628851955761e19,1.443063051869959e19,1.4433635483978301e19,1.4436642648280269e19,1.4439649812582236e19,1.4442661374930715e19,1.444567403679082e19,1.4448686698650927e19,1.4451703758557544e19,1.4454723017487417e19,1.445774227641729e19,1.4460763734370419e19,1.4463787391346803e19,1.4466813247346442e19,1.4469839103346082e19,1.4472869357392232e19,1.4475902909973266e19,1.4478934263531045e19,1.4481968915623707e19,1.4485006866251252e19,1.4488044816878797e19,1.4491087165552853e19,1.449412951422691e19,1.4497172962412593e19,1.450021970913316e19,1.4503269754388611e19,1.4506317600620806e19,1.450937094441114e19,1.451242648722473e19,1.4515480930526691e19,1.4518539771875164e19,1.452160191175852e19,1.452466185261862e19,1.4527725092013605e19,1.45307927294551e19,1.4533859267384967e19,1.4536929103849718e19,1.4540001139337724e19,1.454307317482573e19,1.4546150707871875e19,1.454922824091802e19,1.4552306873475793e19,1.455538880456845e19,1.455847293468436e19,1.4561559263823528e19,1.4564644493451067e19,1.4567735220636746e19,1.4570827047334052e19,1.4573918874031358e19,1.4577015098775175e19,1.4580113522542248e19,1.4583210846797693e19,1.4586311469588021e19,1.4589415390913233e19,1.4592519312238445e19,1.4595627631610167e19,1.4598738150005146e19,1.4601847568888496e19,1.460496028630673e19,1.4608076302259847e19,1.4611192318212964e19,1.4614312732212593e19,1.461743314621222e19,1.4620554659723477e19,1.4623681670792872e19,1.4626808681862267e19,1.462993679244329e19,1.4633068201559196e19,1.4636201809698357e19,1.4639335417837519e19,1.4642473424023192e19,1.464561362923212e19,1.464875273492942e19,1.4651896238673232e19,1.46550419414403e19,1.465819094274225e19,1.4661337745020944e19,1.4664490044857778e19,1.4667644543717868e19,1.467079794306633e19,1.467395683997293e19,1.467711573687953e19,1.4680276832809386e19,1.4683440127762498e19,1.4686606721250492e19,1.468977221522686e19,1.4692943206761366e19,1.4696116397319127e19,1.4699287388853633e19,1.4702464977457906e19,1.4705643665573806e19,1.4708821254178079e19,1.471200434034049e19,1.4715189625526157e19,1.4718373811200197e19,1.4721562394920747e19,1.4724753177664553e19,1.4727943960408359e19,1.4731139141198676e19,1.4734336521012249e19,1.4737533900825821e19,1.4740735678685905e19,1.4743938556057616e19,1.4747142532940956e19,1.4750350907870806e19,1.4753559282800656e19,1.4756768757242135e19,1.4759983729241752e19,1.4763198701241369e19,1.4766418071287497e19,1.476963524231037e19,1.477285791089138e19,1.477608167898402e19,1.4779306546588287e19,1.4782535812239065e19,1.478576617740147e19,1.4788996542563877e19,1.4792232405284422e19,1.4795469367516594e19,1.4798706329748767e19,1.480194769002745e19,1.4805190149817762e19,1.4808434808631329e19,1.481168276597978e19,1.4814932922351485e19,1.481818307872319e19,1.4821435434118152e19,1.4824693287071252e19,1.4827948941001097e19,1.4831208992977453e19,1.4834472343488692e19,1.4837735693999931e19,1.4841002343046054e19,1.4844271191115432e19,1.4847542238208066e19,1.4850814384812327e19,1.48540909294631e19,1.4857366374602244e19,1.4860647317299528e19,1.4863928259996811e19,1.4867213600740606e19,1.4870497841972773e19,1.487378648125145e19,1.4877077319553384e19,1.4880369257366946e19,1.4883663394203763e19,1.4886960829575463e19,1.489025936445879e19,1.4893561197877002e19,1.4896866329830097e19,1.4900169262759936e19,1.4903478792759542e19,1.4906789422270775e19,1.4910100051782009e19,1.4913415079339753e19,1.4916731206409126e19,1.4920049532501754e19,1.4923371157129265e19,1.4926694980780032e19,1.4930018804430799e19,1.4933348125639705e19,1.493667744684861e19,1.4940008967080772e19,1.4943344885359444e19,1.4946681903149744e19,1.4950018920940044e19,1.4953360336776856e19,1.495670505114855e19,1.4960049765520245e19,1.4963396678915195e19,1.4966749089868284e19,1.4970099301798117e19,1.4973453911774462e19,1.497681182028569e19,1.4980173027331801e19,1.4983532035354657e19,1.4986896540935651e19,1.4990263245539901e19,1.4993629950144152e19,1.4997001052794913e19,1.5000375453980557e19,1.5003747656142946e19,1.5007126455375102e19,1.5010506354118885e19,1.5013887352374297e19,1.5017271649164591e19,1.5020659244489769e19,1.502404574030332e19,1.5027437733675008e19,1.5030831926069953e19,1.5034226118464897e19,1.503762580841798e19,1.5041026597882692e19,1.5044426287835775e19,1.5047832574858625e19,1.505124106090473e19,1.5054648447439208e19,1.5058060232020197e19,1.506147531513607e19,1.5064890398251942e19,1.5068309879414325e19,1.5071732659111592e19,1.507515433929723e19,1.5078581517041009e19,1.5082009794296414e19,1.5085441370086703e19,1.5088871846365364e19,1.5092307820202164e19,1.509574599306222e19,1.5099184165922275e19,1.510262783634047e19,1.510607370578192e19,1.5109517376200114e19,1.5112967643688075e19,1.5116420110199292e19,1.5119872576710509e19,1.5123330540779864e19,1.5126789604360847e19,1.513024866794183e19,1.5133713229080953e19,1.513717998924333e19,1.514064564989408e19,1.5144117907614597e19,1.5147591264846742e19,1.5151065721590514e19,1.5154544576380797e19,1.5158025630194336e19,1.5161506684007875e19,1.5164992135867924e19,1.516847978675123e19,1.5171968537146163e19,1.517546058607598e19,1.517895593354068e19,1.518245128100538e19,1.5185953225539846e19,1.5189454070562685e19,1.519295711460878e19,1.5196465656213012e19,1.5199974197817246e19,1.520348713746799e19,1.5207000077118734e19,1.5210516315304362e19,1.52140369515365e19,1.5217556488257012e19,1.5221081522535662e19,1.522460765632594e19,1.5228134889627845e19,1.5231667620487889e19,1.523520145085956e19,1.5238735281231233e19,1.5242275708672672e19,1.5245818335137366e19,1.5249358762578805e19,1.5252906886601638e19,1.5256455010624471e19,1.5260004234158932e19,1.5263558955251532e19,1.5267115875367387e19,1.5270670596459987e19,1.5274233014133981e19,1.527779763083123e19,1.5281361148016853e19,1.5284931262272242e19,1.5288502476039258e19,1.5292074789317902e19,1.529565040113143e19,1.5299230410991469e19,1.5302808221828252e19,1.5306392629734801e19,1.5309980336176234e19,1.5313570241640923e19,1.5317157948082356e19,1.5320752251593556e19,1.5324348754128011e19,1.5327946356174094e19,1.533154725675506e19,1.5335152555382538e19,1.5338756754498388e19,1.5342366451172377e19,1.534597834686962e19,1.5349590242566865e19,1.5353207635822248e19,1.5356827228100887e19,1.5360447919891153e19,1.5364071910216303e19,1.5367700298587963e19,1.5371327587447996e19,1.537495927435454e19,1.5378594259795968e19,1.5382229245237395e19,1.5385869728236962e19,1.5389512410259784e19,1.5393156191794233e19,1.5396804371375194e19,1.540045474997941e19,1.5404105128583627e19,1.5407761004745982e19,1.541142017944322e19,1.5415078254628831e19,1.541874182737258e19,1.5422407599139586e19,1.542607447041822e19,1.542974683925499e19,1.543342030760339e19,1.5437095974975046e19,1.5440773841369956e19,1.544445500629975e19,1.5448140569276056e19,1.5451825032740733e19,1.545551499376355e19,1.545920715380962e19,1.546290041336732e19,1.5466598070971531e19,1.5470299027110625e19,1.547399998324972e19,1.5477705337435324e19,1.5481413990155813e19,1.5485122642876301e19,1.5488836793154929e19,1.5492553142456812e19,1.5496269491758694e19,1.5499991338618716e19,1.5503715384501993e19,1.5507440529896899e19,1.5511170073338315e19,1.5514902915314614e19,1.5518635757290914e19,1.5522372997313724e19,1.5526113535871418e19,1.552985517394074e19,1.5533601210056573e19,1.553735054470729e19,1.5541098779846377e19,1.5544853612055233e19,1.5548610643287343e19,1.555236987354271e19,1.5556130203309703e19,1.5559894931123208e19,1.5563664056983224e19,1.5567430983819985e19,1.5571204507726512e19,1.5574980230656295e19,1.5578757053097705e19,1.5582538273585627e19,1.5586322792608432e19,1.5590107311631237e19,1.559389732821218e19,1.5597690643328008e19,1.560148175942058e19,1.5605281671606174e19,1.5609081583791768e19,1.5612883695000617e19,1.5616690204255977e19,1.5620498912534594e19,1.562430762081321e19,1.5628122926161592e19,1.563194043053323e19,1.5635759034416497e19,1.5639583135857902e19,1.5643409436322562e19,1.5647235736787223e19,1.5651066435298394e19,1.5654901531856077e19,1.5658735528902132e19,1.5662576123017953e19,1.5666420015668658e19,1.5670261709296108e19,1.5674111099504951e19,1.5677961589225423e19,1.5681816476992406e19,1.5685671364759388e19,1.568953175008451e19,1.5693394334432887e19,1.5697256918781264e19,1.570112500068778e19,1.5704997480640807e19,1.5708868861082206e19,1.5712746838593372e19,1.5716625915616166e19,1.5720506092150587e19,1.5724392865754776e19,1.5728280738870591e19,1.5732169711498035e19,1.5736064181683618e19,1.5739961950404084e19,1.574385971912455e19,1.5747761885891527e19,1.5751668450705015e19,1.575557611503013e19,1.5759485978378502e19,1.5763401339285012e19,1.5767315600679895e19,1.5771237558656172e19,1.5775161715655705e19,1.577908477314361e19,1.5783013328189653e19,1.5786947380793836e19,1.5790879234374762e19,1.5794817685025456e19,1.5798758334699405e19,1.5802700083884982e19,1.5806647330628698e19,1.581059677639567e19,1.5814550620209152e19,1.5818503364511007e19,1.5822463805394256e19,1.5826425345789133e19,1.583038688618401e19,1.5834355023648653e19,1.583832645964818e19,1.584229679613608e19,1.5846273729693745e19,1.5850252862274666e19,1.5854234193878843e19,1.5858218824017904e19,1.5862207852203475e19,1.5866197979900674e19,1.5870192505644384e19,1.587418923041135e19,1.5878188154201571e19,1.5882192575549932e19,1.5886199195921547e19,1.589020691580479e19,1.5894220133246173e19,1.5898235549710811e19,1.5902252065687077e19,1.5906274079221481e19,1.591029939129077e19,1.5914324703360057e19,1.5918356612499112e19,1.5922390720661422e19,1.592642592833536e19,1.593046553405581e19,1.593450953782277e19,1.5938556840124613e19,1.5942604142426456e19,1.594665584277481e19,1.5950713040681304e19,1.5954768039564542e19,1.5958830735029174e19,1.596289672902869e19,1.5966962723028206e19,1.5971033115074232e19,1.5975109004678398e19,1.5979182695259308e19,1.5983262982909985e19,1.59873487681188e19,1.599143235430436e19,1.5995522537559687e19,1.599961491983827e19,1.6003709501140107e19,1.6007809580000084e19,1.6011912957394944e19,1.6016014135766548e19,1.6020125209742803e19,1.6024237383230685e19,1.602834845720694e19,1.6032467227764589e19,1.603658929685712e19,1.604071246546128e19,1.6044840032111952e19,1.6048971996809134e19,1.6053102861994689e19,1.605724032425001e19,1.6061382184551842e19,1.6065522945342046e19,1.6069670303202017e19,1.60738220591085e19,1.607797491452661e19,1.6082128869456347e19,1.608629052096748e19,1.609045327199024e19,1.6094617122524627e19,1.6098786470617154e19,1.6102960216756191e19,1.6107133962895229e19,1.6111314306104033e19,1.611549794784772e19,1.611968049007978e19,1.6123869629381607e19,1.6128063166729945e19,1.6132256704078283e19,1.6136454639473132e19,1.614065807242612e19,1.6144861505379107e19,1.6149070435890233e19,1.6153282664936243e19,1.6157494893982253e19,1.616171372009803e19,1.616593584474869e19,1.6170159068910977e19,1.6174387790631404e19,1.6178620910398341e19,1.6182851831142023e19,1.6187091547978727e19,1.6191333463838687e19,1.6195577578721903e19,1.619982609165163e19,1.6204079002627867e19,1.620833411262736e19,1.6212589222626853e19,1.6216853128719368e19,1.6221118134323511e19,1.6225383139927654e19,1.622965694162482e19,1.6233931842833613e19,1.623821004257729e19,1.6242491540855849e19,1.6246778536692548e19,1.6251064433017618e19,1.6255355826900828e19,1.6259653817853805e19,1.6263949609783525e19,1.6268251998783013e19,1.627255988534064e19,1.627686557287501e19,1.6281180056502403e19,1.6285496739153052e19,1.62898134218037e19,1.6294137801035743e19,1.6298463279779414e19,1.630279095754634e19,1.6307125232383033e19,1.631146280575461e19,1.6315800379126186e19,1.6320144549567529e19,1.6324492018543755e19,1.6328839487519982e19,1.633319575258923e19,1.6337553117170106e19,1.6341912680774238e19,1.6346276642424881e19,1.635064720114529e19,1.6355018859377328e19,1.6359391617120993e19,1.6363769872422797e19,1.6368152525771112e19,1.6372536278631055e19,1.6376926628560765e19,1.6381320277025358e19,1.638571392548995e19,1.639011417102431e19,1.6394517715093553e19,1.6398921259162796e19,1.6403333599325061e19,1.6407748138510582e19,1.6412162677696102e19,1.6416586012974645e19,1.6421010447764816e19,1.6425435982066614e19,1.6429869212949807e19,1.6434304642856255e19,1.6438741172274332e19,1.6443185398273802e19,1.64476307237849e19,1.6452079347830882e19,1.6456532369923375e19,1.6460991989085635e19,1.6465449409224638e19,1.6469914525945037e19,1.647438184168869e19,1.6478852455967228e19,1.6483328567803904e19,1.6487806878663836e19,1.6492291786593534e19,1.6496775595011604e19,1.6501264900987814e19,1.6505759704522162e19,1.651025450805651e19,1.6514755908660625e19,1.6519260607799624e19,1.6523765306938622e19,1.6528278802170642e19,1.6532795595937546e19,1.653731238970445e19,1.654183578054112e19,1.6546363569424302e19,1.6550891358307484e19,1.6555425744260432e19,1.6559964528259891e19,1.6564504411770978e19,1.6569050892351832e19,1.657360067146757e19,1.6578151550094934e19,1.6582707926280438e19,1.658726980002408e19,1.6591831673767723e19,1.6596399045069505e19,1.6600971913929425e19,1.6605544782789345e19,1.661012534823066e19,1.6614709212206858e19,1.6619293076183056e19,1.6623883537229021e19,1.6628479495833125e19,1.6633075454437229e19,1.6637678010111099e19,1.6642283864319853e19,1.6646894116575117e19,1.665150546834201e19,1.6656124516690297e19,1.666074576406184e19,1.6665369210456637e19,1.6669998154409574e19,1.667463259592065e19,1.6679265937920098e19,1.668390697650094e19,1.6688553512639922e19,1.6693197849755648e19,1.6697850982964396e19,1.6702507414708027e19,1.6707166045474914e19,1.671183017379994e19,1.6716498700171477e19,1.6721168326054642e19,1.6725843449495945e19,1.6730524070495388e19,1.673520469149483e19,1.6739894108587295e19,1.6744584625191387e19,1.6749277340818735e19,1.6753977753027478e19,1.675868256328273e19,1.6763386274026357e19,1.6768098780863005e19,1.6772815685746164e19,1.6777530391606067e19,1.6782253893558993e19,1.6786982893070057e19,1.6791715191116005e19,1.6796446389650326e19,1.6801186384277668e19,1.6805930776951521e19,1.6810675169625375e19,1.6815427258880623e19,1.6820182646670754e19,1.682494023348414e19,1.6829703317855666e19,1.6834470800273703e19,1.6839239382203367e19,1.6844015660714426e19,1.6848797436783624e19,1.6853578113341194e19,1.6858366486480159e19,1.6863157058642379e19,1.686795202885111e19,1.6872751397106352e19,1.687755736243136e19,1.688236332775637e19,1.6887174790639518e19,1.6891991751080804e19,1.6896809811033719e19,1.6901635567568028e19,1.690646462263722e19,1.691129477721804e19,1.6916132628380254e19,1.692097487758898e19,1.6925817126797705e19,1.6930667072587825e19,1.6935521416424456e19,1.6940377959284343e19,1.6945239999702368e19,1.6950106438166905e19,1.695497837418958e19,1.6959850310212256e19,1.6964728843304698e19,1.6969612873955279e19,1.697449690460586e19,1.6979389731349463e19,1.698428585662795e19,1.6989183081418064e19,1.6994088002789573e19,1.6998997322207592e19,1.7003906641625612e19,1.7008823657625027e19,1.701374617118258e19,1.7018668684740133e19,1.7023601093902336e19,1.7028534602576167e19,1.7033470310273253e19,1.7038414814063362e19,1.7043361516876726e19,1.7048310418713346e19,1.705326701713136e19,1.705822581457263e19,1.7063187910548783e19,1.7068156603594703e19,1.707313189371039e19,1.7078107183826076e19,1.70830879714999e19,1.7088075356243493e19,1.7093062740987085e19,1.7098057822312071e19,1.7103058401195196e19,1.7108057880566694e19,1.7113066156031214e19,1.71180810285655e19,1.7123097000611414e19,1.7128115171680584e19,1.7133141039331148e19,1.7138173504051479e19,1.7143204869260182e19,1.7148242831538651e19,1.7153288490398515e19,1.7158331950235124e19,1.7163385305676382e19,1.7168443059164152e19,1.717350191216355e19,1.7178567362232713e19,1.7183639409371644e19,1.7188711456510575e19,1.7193789001207644e19,1.7198874242486108e19,1.7203958384252944e19,1.7209053521136058e19,1.72141497575308e19,1.7219249292460425e19,1.7224357623483073e19,1.7229468153528975e19,1.7234579783086506e19,1.7239701308248687e19,1.7244827231457378e19,1.7249952055154442e19,1.7255087873967784e19,1.7260226991316009e19,1.7265366108664234e19,1.7270512922593853e19,1.7275667433104867e19,1.7280824142639137e19,1.7285981951685034e19,1.7291149656335581e19,1.7296319560009384e19,1.730149276221807e19,1.7306672561496523e19,1.7311857858333114e19,1.7317043155169706e19,1.7322239447122575e19,1.7327436838587073e19,1.7332636429074825e19,1.73378448156556e19,1.7343058699794514e19,1.7348273683445055e19,1.735349746318862e19,1.7358723441955439e19,1.7363951619745513e19,1.736918859362861e19,1.7374431065069847e19,1.7379672436999455e19,1.7384922605022085e19,1.739018046962611e19,1.7395437234718507e19,1.7400701696392298e19,1.7405972755135857e19,1.7411242714367787e19,1.7416523668715995e19,1.7421807921599087e19,1.7427094373505434e19,1.7432387422481547e19,1.7437687068527428e19,1.7442986714573308e19,1.744829515671221e19,1.7453607996897624e19,1.7458927434152804e19,1.7464246871407985e19,1.7469575104756187e19,1.7474906636639273e19,1.7480241467057242e19,1.7485583994056606e19,1.7490932018614108e19,1.7496282242194866e19,1.750163906284539e19,1.7507000281542427e19,1.7512363699262718e19,1.751773701258766e19,1.7523114723959112e19,1.7528491335818936e19,1.7533880042306666e19,1.753927204732928e19,1.7544665151863521e19,1.7550067052490785e19,1.7555474450676187e19,1.756088184886159e19,1.756630024216327e19,1.7571721933999833e19,1.7577144725348024e19,1.7582577412300866e19,1.7588015596811846e19,1.7593452681811198e19,1.7598900761926828e19,1.7604352140577341e19,1.760980571825111e19,1.7615268092017902e19,1.7620735963342832e19,1.7626208232714273e19,1.763168270110897e19,1.763716486608506e19,1.764265252861929e19,1.7648143489688404e19,1.7653639948315656e19,1.7659144103524303e19,1.7664649358244577e19,1.7670162309546246e19,1.767568295742931e19,1.7681202505800745e19,1.768673194977683e19,1.7692265791799427e19,1.7697800733333651e19,1.7703345570472526e19,1.7708894805657911e19,1.7714448438889808e19,1.7720008669191471e19,1.7725574397051273e19,1.7731141224422703e19,1.7736715748375527e19,1.7742297968909746e19,1.774788238846722e19,1.7753473405094461e19,1.7759069919279841e19,1.7764668632488477e19,1.7770277241301762e19,1.7775890248161559e19,1.778150545404461e19,1.7787128356509057e19,1.7792756756531642e19,1.7798389554600739e19,1.7804028949739602e19,1.7809673842436604e19,1.7815325332203373e19,1.7820977921481769e19,1.7826637107829932e19,1.7832305090271117e19,1.7837973072712303e19,1.784364985124651e19,1.7849334326362112e19,1.7855018801477714e19,1.786071097317471e19,1.7866410841453101e19,1.7872112908754747e19,1.7877823772149416e19,1.7883539033590596e19,1.7889255394543403e19,1.789498165110086e19,1.7900715604239712e19,1.7906449557378564e19,1.791219120709881e19,1.7917940553400451e19,1.792369099921372e19,1.792945024112001e19,1.7935217179607695e19,1.7940983018583753e19,1.7946759852676088e19,1.7952541084814934e19,1.7958324515977036e19,1.7964118942255415e19,1.7969917766580306e19,1.7975718789928452e19,1.798152860936962e19,1.7987345025880556e19,1.7993165840438002e19,1.7998989953530331e19,1.8004822862715683e19,1.8010661269459173e19,1.801650187522592e19,1.8022351277085688e19,1.8028207276015223e19,1.8034063274944758e19,1.8039931368502198e19,1.8045802760594522e19,1.8051678550733357e19,1.8057562037453586e19,1.806345322075521e19,1.8069344404056834e19,1.8075245482963108e19,1.8081153158939148e19,1.8087061934426817e19,1.8092979506007507e19,1.8098904774169592e19,1.8104832241354932e19,1.8110767405121667e19,1.8116710265469796e19,1.8122653125817926e19,1.8128609180305588e19,1.8134568533328134e19,1.8140528985862308e19,1.814650043351276e19,1.8152478478232977e19,1.8158457622464823e19,1.816444666230132e19,1.8170442299207582e19,1.81764401351371e19,1.8182445667648012e19,1.8188459996251947e19,1.8194477623390765e19,1.8200499648576094e19,1.8206530469854446e19,1.8212566788690936e19,1.821860640606231e19,1.8224654819526705e19,1.8230709830060868e19,1.8236767039618286e19,1.8242834144780354e19,1.8248907847012188e19,1.825498264875565e19,1.826106844561539e19,1.8267158640521642e19,1.8273252133962777e19,1.8279356622520189e19,1.8285465509124112e19,1.829157769426292e19,1.8297698675494748e19,1.83038284528196e19,1.8309957130632823e19,1.8316097903073952e19,1.8322245272584847e19,1.832839374160737e19,1.8334552106234544e19,1.8340717067931484e19,1.834688422865168e19,1.8353062384488153e19,1.8359246037882765e19,1.8365431890300633e19,1.8371628737834779e19,1.837783218243869e19,1.838404222411237e19,1.8390253365297676e19,1.8396473302576005e19,1.8402702035947356e19,1.8408932968341963e19,1.8415171597317964e19,1.8421420121898615e19,1.8427667546967638e19,1.8433928166176195e19,1.8440195382454518e19,1.844646259873284e19,1.845274081012744e19,1.8459027817615065e19,1.8465312626079433e19,1.847161282770659e19,1.8477917427380257e19,1.848422422607718e19,1.849054201989038e19,1.849686641077335e19,1.8503190801656316e19,1.8509528386678817e19,1.8515872568771084e19,1.852221675086335e19,1.8528574127095153e19,1.853493810039672e19,1.8541302073698288e19,1.854767924113939e19,1.8554063005650256e19,1.8560446770161123e19,1.8566843728811524e19,1.8573245085508436e19,1.857965084025186e19,1.8586065391088304e19,1.859248873801777e19,1.8598918682017006e19,1.8605350825039495e19,1.8611793963178263e19,1.861824149936354e19,1.862469343359533e19,1.8631156362943398e19,1.863762588936123e19,1.864409761480232e19,1.865058033535969e19,1.8657069652986823e19,1.8663561169637212e19,1.8670065880427135e19,1.867657498926357e19,1.8683088496146514e19,1.8689612998145737e19,1.869614189819147e19,1.8702675196283716e19,1.870921948949224e19,1.8715770379770528e19,1.8722323469072073e19,1.872888975251315e19,1.873546043400074e19,1.874203551353484e19,1.874862158818522e19,1.8755214259905364e19,1.8761809130648764e19,1.8768414996508443e19,1.8775029658461143e19,1.8781644320413843e19,1.8788272176506077e19,1.8794906629668078e19,1.8801547679899845e19,1.8808193128178123e19,1.881484957157268e19,1.8821510413013746e19,1.8828175652501324e19,1.8834854086128435e19,1.8841536917802058e19,1.884822414752219e19,1.8854922372358603e19,1.886162719426478e19,1.886833641421747e19,1.887505443026318e19,1.888178344142517e19,1.888851245258716e19,1.8895252458865426e19,1.8902001261236716e19,1.890875226263126e19,1.891551645816534e19,1.8922287250769183e19,1.8929060242396283e19,1.893584422913966e19,1.894263701197606e19,1.8949431993835717e19,1.895623797081165e19,1.8963052743880606e19,1.8969869715972817e19,1.8976697683181306e19,1.8983534446482817e19,1.8990373408807584e19,1.8997225565271884e19,1.9004082119782695e19,1.9010943072340017e19,1.9017817219036873e19,1.9024697962803495e19,1.903158750266314e19,1.903847924154604e19,1.9045381975545217e19,1.905229130661416e19,1.9059205035729617e19,1.9066131958984606e19,1.907306547930936e19,1.9080001198657372e19,1.908694791312166e19,1.9093905622702227e19,1.910086553130605e19,1.910783643502615e19,1.911481613483927e19,1.912179803367565e19,1.9128790927628304e19,1.9135794816697238e19,1.914279870576617e19,1.9149815788974637e19,1.9156841668276126e19,1.916386974660087e19,1.9170911019065147e19,1.917795888859919e19,1.918500895715649e19,1.919207441887658e19,1.919914427864318e19,1.9206220735479546e19,1.9213305988408934e19,1.92204022364546e19,1.9227500683523523e19,1.9234610125708722e19,1.92417305630102e19,1.9248853199334932e19,1.9255986830775943e19,1.9263129258309976e19,1.927028048193703e19,1.927743390458734e19,1.9284600521377186e19,1.929177593426005e19,1.9298953546166174e19,1.930614435221183e19,1.931334175532725e19,1.9320543556489183e19,1.932775855179065e19,1.9334982343185138e19,1.934220833360288e19,1.934944751816016e19,1.9356693299787203e19,1.9363943479460758e19,1.9371206853273846e19,1.937848122220321e19,1.9385755591132578e19,1.9393043154201477e19,1.94003395133634e19,1.9407638071548576e19,1.941495202289654e19,1.9422272571314274e19,1.942959751777852e19,1.9436935658382295e19,1.944428039605584e19,1.9451629531775894e19,1.9458994060658737e19,1.946636298758809e19,1.9473738511587213e19,1.948112722972587e19,1.948852254493429e19,1.9495926656235733e19,1.9503335165583688e19,1.9510756869071176e19,1.9518187368651686e19,1.952562006725545e19,1.9533068159022006e19,1.9540522847858328e19,1.954798193474116e19,1.9555454215763526e19,1.956293749190217e19,1.9570420768040813e19,1.9577919437342245e19,1.95854269027367e19,1.959293656715441e19,1.960046162473491e19,1.9607993279385174e19,1.961552933208195e19,1.9623080777941516e19,1.9630641019894104e19,1.9638203460869947e19,1.964578129500858e19,1.965336572621698e19,1.966095455547189e19,1.966855657886633e19,1.9676169597377053e19,1.968378481491103e19,1.969141322658454e19,1.9699052633374327e19,1.970669423918737e19,1.97143512381632e19,1.9722017033232056e19,1.9729685027324166e19,1.9737368414579065e19,1.9745060597926986e19,1.975276157736793e19,1.9760466954855383e19,1.976818552648237e19,1.9775915093225636e19,1.9783646858992157e19,1.979139181889821e19,1.9799147773920543e19,1.980690592796613e19,1.9814679475174506e19,1.982246401749916e19,1.983025075884707e19,1.9838050694334513e19,1.9845861624938234e19,1.985367475456521e19,1.986150547637823e19,1.986934279526102e19,1.9877184512190317e19,1.9885041622282404e19,1.9892907528467513e19,1.9900777832699134e19,1.9908663530093543e19,1.991655582455772e19,1.9924454716091662e19,1.993236680176514e19,1.9940289882554892e19,1.9948217361391157e19,1.9956158034366956e19,1.996410970245903e19,1.9972063569574363e19,1.9980032829852484e19,1.998801308524688e19,1.9996002136734302e19,2.0003995586268234e19,2.00120022299417e19,2.0020022067754697e19,2.002804410459095e19,2.0036079335566737e19,2.0044127760682058e19,2.0052178384820634e19,2.0060244402122e19,2.006832141453964e19,2.007640062598054e19,2.0084495230584226e19,2.009260083030419e19,2.0100710828070666e19,2.010883621899993e19,2.0116970406022218e19,2.012511119011427e19,2.0133262969322602e19,2.0141427942670467e19,2.0149597314064843e19,2.0157782078622007e19,2.016597783829545e19,2.017417359796889e19,2.0182389148851634e19,2.01906134958274e19,2.0198842240849674e19,2.0207088578057994e19,2.0215343711359336e19,2.0223601043683934e19,2.0231875968194576e19,2.024015968879824e19,2.024845000647167e19,2.025675571730789e19,2.026507242326039e19,2.027339792530591e19,2.028172782539794e19,2.0290075317676016e19,2.0298431606047113e19,2.030679229246472e19,2.0315170571068375e19,2.032355764576505e19,2.0331951317531492e19,2.0340360382460723e19,2.0348778243482976e19,2.0357202701574996e19,2.0365642552829805e19,2.037409339920089e19,2.038254864361849e19,2.0391019281198875e19,2.0399503112918794e19,2.0407991342685225e19,2.041649276659119e19,2.0425007384636686e19,2.0433526400728695e19,2.0442063009006748e19,2.0450606214354567e19,2.045915821579541e19,2.046772561039904e19,2.0476304000118948e19,2.0484886787885367e19,2.049348716783783e19,2.0502098542906573e19,2.0510714316021826e19,2.0519345482299867e19,2.052798984271744e19,2.0536645198251295e19,2.054530495183166e19,2.055398009857481e19,2.0562668439457497e19,2.0571361178386694e19,2.058006931047868e19,2.05887906367102e19,2.059751636098823e19,2.0606259677452304e19,2.06150117900094e19,2.0623770499636265e19,2.0632546801449173e19,2.064133409837836e19,2.065012799237731e19,2.0658937279539053e19,2.066775756181707e19,2.0676584441164857e19,2.0685428912698687e19,2.069428218032554e19,2.0703144244045414e19,2.0712021700928078e19,2.072091015292702e19,2.0729805201995727e19,2.073871784325048e19,2.074764147962151e19,2.075656951403905e19,2.076551733966589e19,2.077447616040901e19,2.078343937919864e19,2.079242238919757e19,2.0801414195289522e19,2.0810414797474497e19,2.081943079282226e19,2.0828459982309556e19,2.0837497967889875e19,2.0846544749563216e19,2.08556091234226e19,2.0864684492398264e19,2.0873766458443694e19,2.0882863817651913e19,2.0891974370999665e19,2.090109372044044e19,2.0910228463044e19,2.09193763997871e19,2.0928528734576706e19,2.0937698661552357e19,2.0946881782667543e19,2.0956071500852494e19,2.096527881122349e19,2.0974497116710765e19,2.098372421829106e19,2.09929689120574e19,2.100222460094002e19,2.1011486886892405e19,2.1020766765030834e19,2.1030059837308797e19,2.1039359506656526e19,2.10486767681903e19,2.1058007223863607e19,2.1067342077583426e19,2.1076696722512544e19,2.1086064561581195e19,2.1095438997719613e19,2.1104831026044076e19,2.111423624850807e19,2.1123652466088346e19,2.113307747976164e19,2.114252008562098e19,2.11519736865966e19,2.116143608366524e19,2.117091827194318e19,2.11804114553374e19,2.1189911235801383e19,2.1199430807474668e19,2.1208963573287485e19,2.1218500737146814e19,2.1228057692215443e19,2.123763004044686e19,2.124720678672479e19,2.125680332421202e19,2.126641305583878e19,2.127602938453531e19,2.128566550444114e19,2.12953148184865e19,2.130497072960163e19,2.1314644232902803e19,2.1324333129366766e19,2.1334028622900494e19,2.1343743907643523e19,2.1353472386526085e19,2.136320526345516e19,2.1372962329640042e19,2.1382730390941204e19,2.1392502850288878e19,2.140229949889236e19,2.1412107142612124e19,2.1421923582424908e19,2.1431757614423736e19,2.1441607039585354e19,2.1451469658886504e19,2.146133887525742e19,2.1471230081860895e19,2.14811344826039e19,2.149104328139342e19,2.150097407041549e19,2.1510920252600353e19,2.152087303185498e19,2.1530843403295654e19,2.1540829167899116e19,2.15508237285956e19,2.1560838080501383e19,2.15708656265467e19,2.158090196868504e19,2.159095810203268e19,2.160102742951985e19,2.1611105553100046e19,2.162120346788954e19,2.1631316775841825e19,2.1641436680863875e19,2.165157857611848e19,2.166173366551262e19,2.1671895351976526e19,2.1682079028672987e19,2.1692278098532237e19,2.1702483765461254e19,2.1712711422622826e19,2.1722952273923932e19,2.173320192131806e19,2.1743473558944743e19,2.175375839071096e19,2.1764058615639966e19,2.1774365437638738e19,2.1784694249870066e19,2.1795038455264182e19,2.1805389257728066e19,2.181576424944776e19,2.1826152435306988e19,2.183654721823598e19,2.1846966190420787e19,2.1857398356745126e19,2.1867839319162487e19,2.1878302271812403e19,2.188878061762511e19,2.189926556050758e19,2.1909774692645863e19,2.192029701892368e19,2.193082814129452e19,2.1941381253897912e19,2.1951949759664095e19,2.1962529260546556e19,2.197312635361506e19,2.198374103886961e19,2.1994366719240438e19,2.200500999179731e19,2.201567305556348e19,2.2026340517376164e19,2.2037032168444658e19,2.2047741411699196e19,2.20584572520235e19,2.206919508258036e19,2.2079950505323266e19,2.2090714724159193e19,2.2101500933227676e19,2.2112302535458947e19,2.2123121729876263e19,2.2133947521363345e19,2.214479750210624e19,2.215566287601192e19,2.2166537046010626e19,2.217743540526514e19,2.2188349157682446e19,2.2199271706192773e19,2.2210216244935655e19,2.2221178375864582e19,2.223214930288653e19,2.224314441916429e19,2.2254157127628095e19,2.2265176433161667e19,2.227621992795105e19,2.2287281014926475e19,2.229834869897167e19,2.230944277129593e19,2.2320554435806233e19,2.2331670498363048e19,2.2342815148222185e19,2.235397519124411e19,2.236514403035906e19,2.237633705872982e19,2.2387547679286624e19,2.239876709593645e19,2.2410010701842088e19,2.242127189993377e19,2.2432541894118474e19,2.2443838276582244e19,2.245514785318555e19,2.2466470623928386e19,2.2477817583927034e19,2.248917993708847e19,2.250056208145921e19,2.251195082289971e19,2.252336815164254e19,2.2534800873548153e19,2.254624239154679e19,2.2557710297824494e19,2.256919579628824e19,2.258069009084501e19,2.259221077368085e19,2.260374904870273e19,2.2615296119817634e19,2.2626869579211604e19,2.263846063079162e19,2.265006267748791e19,2.2661688913440014e19,2.2673334940601418e19,2.2684987564832588e19,2.269666877636608e19,2.2708367580085617e19,2.272007737892143e19,2.2731811367013057e19,2.274356514631398e19,2.275532772170793e19,2.27671188844042e19,2.2778927639286514e19,2.279074519026185e19,2.280259132853951e19,2.281445505900321e19,2.2826327585559937e19,2.2838228699418984e19,2.2850147405464076e19,2.2862088101741724e19,2.2874035395089138e19,2.2886011275738874e19,2.2898004748574654e19,2.2910009216526713e19,2.2922040072757838e19,2.293409291922152e19,2.294615456177822e19,2.295824259261399e19,2.297035041465906e19,2.2982471430843662e19,2.2994616636284076e19,2.3006783831957045e19,2.3018959823723037e19,2.303116440279135e19,2.3043388773068964e19,2.3055624138462855e19,2.306788809115907e19,2.3080171835064582e19,2.3092464375063118e19,2.3104785502363976e19,2.311712861989739e19,2.3129480533523825e19,2.314186323347584e19,2.3154263525613896e19,2.316667481286823e19,2.3179116886448144e19,2.3191578751237358e19,2.320405161114285e19,2.321655305835066e19,2.3229074296767775e19,2.3241606530301166e19,2.3254169550160134e19,2.326675456025166e19,2.3279357162529227e19,2.3291970759923073e19,2.3304615143642497e19,2.3317281517594477e19,2.3329958886662734e19,2.3342664843033313e19,2.335539278963645e19,2.3368129532332605e19,2.3380899260377596e19,2.3393688779631886e19,2.340649149302571e19,2.3419322793721856e19,2.3432176084650557e19,2.3445040370695537e19,2.3457935443066094e19,2.347085470469246e19,2.348378276241185e19,2.349674160645682e19,2.3509722440734343e19,2.35227164691514e19,2.3535741283894034e19,2.354878588984597e19,2.3561843689937437e19,2.3574934475377738e19,2.358804505202734e19,2.3601166623793218e19,2.361432118090793e19,2.3627499927278453e19,2.3640689668765254e19,2.3653912395600888e19,2.366715491364582e19,2.368041942192331e19,2.369369932336359e19,2.370700781210619e19,2.3720340490104603e19,2.3733688561265803e19,2.3747065219729326e19,2.376046606744866e19,2.3773880109307527e19,2.3787327136515228e19,2.380079395493223e19,2.3814276166512017e19,2.382779136344064e19,2.384132855060182e19,2.3854881130925785e19,2.386846449757533e19,2.3882072053480686e19,2.3895692803525575e19,2.3909346538919297e19,2.392302446356883e19,2.393671338333464e19,2.3950439686495797e19,2.396418797988951e19,2.3977949467422753e19,2.399174394030483e19,2.4005564801465975e19,2.4019396657743397e19,2.4033265897416163e19,2.4047157127321485e19,2.406106155136634e19,2.4075001159783285e19,2.408896495745604e19,2.410294194926833e19,2.411695632447596e19,2.4130990490892894e19,2.4145055443635405e19,2.4159131391494193e19,2.417324252372507e19,2.418737784521176e19,2.420152636083798e19,2.4215712259859546e19,2.4229922348136923e19,2.424414782957709e19,2.4258408495389344e19,2.427269335045741e19,2.4286993598688264e19,2.4301329031291208e19,2.4315690852173218e19,2.4330068066218017e19,2.4344480464634905e19,2.435891925133086e19,2.4373371232166347e19,2.438786059639718e19,2.4402378547930333e19,2.441690969360302e19,2.4431476023647797e19,2.4446070940994896e19,2.4460679052481528e19,2.4475324547363504e19,2.4489998629547803e19,2.450468810489489e19,2.4519412764614066e19,2.453416381261231e19,2.454893025377334e19,2.4563736277352972e19,2.457856868921167e19,2.459342968837269e19,2.4608303881673245e19,2.46232176573924e19,2.4638155622367363e19,2.4653113378551628e19,2.4668108518131237e19,2.4683130045989913e19,2.4698169166034633e19,2.4713245669474697e19,2.4728350760217084e19,2.4743473443145515e19,2.475863350946929e19,2.477382216309539e19,2.4789026209884275e19,2.480426983909176e19,2.481954205560157e19,2.483483406332068e19,2.4850161255411876e19,2.486551923382865e19,2.488089480443147e19,2.4896307758429635e19,2.4911751498753376e19,2.4927212831263162e19,2.4942711547168293e19,2.4958243248422257e19,2.497379034283901e19,2.4989379218697617e19,2.5004996681858548e19,2.5020631737205522e19,2.5036306374971097e19,2.505201179906225e19,2.5067734815339446e19,2.50834996130585e19,2.5099292998079873e19,2.5115117169426825e19,2.5130961131983077e19,2.514684467695793e19,2.516275900825836e19,2.517869313076809e19,2.5194669034719674e19,2.521067352597358e19,2.522669780843679e19,2.5242766071365108e19,2.5258860722572493e19,2.527497956303569e19,2.529113578689423e19,2.530732719512486e19,2.5323536195541533e19,2.5339789176423318e19,2.535607294363068e19,2.5372376502047343e19,2.5388724040929116e19,2.540510016711321e19,2.542150048255312e19,2.5437940380411625e19,2.545441546264222e19,2.5470910336082117e19,2.5487449189987123e19,2.5504018830217708e19,2.552060826165759e19,2.5537243872585843e19,2.5553912468862927e19,2.557060085634931e19,2.5587333224300806e19,2.5604098577601135e19,2.5620896916250296e19,2.5637717245132014e19,2.5654583753502097e19,2.567148104819776e19,2.5688400333125976e19,2.5705367996565815e19,2.5722366446331232e19,2.5739386886329205e19,2.5756453505815544e19,2.577355530967397e19,2.57906769047417e19,2.580784687832105e19,2.5825049837249233e19,2.584227478640997e19,2.5859548114082333e19,2.5876854427103527e19,2.5894184929380532e19,2.591155941212265e19,2.5928973477283365e19,2.594640733365338e19,2.5963891767558275e19,2.5981406987788747e19,2.5998948596298285e19,2.601653638429619e19,2.6034159356666184e19,2.6051808717315244e19,2.606950425745267e19,2.6087237180985442e19,2.6104994293774025e19,2.612279978507423e19,2.6140640460746523e19,2.6158505325674627e19,2.6176418569114354e19,2.619437139497268e19,2.6212359405203096e19,2.6230373803712578e19,2.6248434381710426e19,2.626653674115013e19,2.628466109082239e19,2.6302836018029527e19,2.6321050527655264e19,2.6339289226536813e19,2.635757850295324e19,2.6375902963741753e19,2.639425601183259e19,2.6412659637458305e19,2.643110284550262e19,2.6449572441826e19,2.6468090416661004e19,2.6486650172937863e19,2.6505234118470533e19,2.6523870840561336e19,2.654254714507074e19,2.656124983785921e19,2.6580005307205812e19,2.659880255799427e19,2.6617621799015285e19,2.6636498214640943e19,2.66554142126852e19,2.6674356599008526e19,2.669335396091324e19,2.67123887062133e19,2.6731454237838934e19,2.6750572546022703e19,2.6769732635648328e19,2.6788934506715808e19,2.6808162766062354e19,2.682744600099029e19,2.6846773216383336e19,2.686612682005545e19,2.688553539930895e19,2.690498576000431e19,2.6924466907025244e19,2.694400302962757e19,2.6963580933671748e19,2.6983189624041505e19,2.7002855489015906e19,2.7022560936408908e19,2.7042297170127487e19,2.7062092777473966e19,2.70819301662623e19,2.7101796142352957e19,2.7121721492071514e19,2.7141688623231926e19,2.716168873974117e19,2.718174603085506e19,2.7201849501457318e19,2.7221981559361896e19,2.7242172990894375e19,2.7262408402891964e19,2.728267460121513e19,2.730300457121271e19,2.732337412362889e19,2.7343778860417155e19,2.736424297083332e19,2.7384753260737855e19,2.7405294336967967e19,2.7425896985849233e19,2.7446545814218867e19,2.7467243021100122e19,2.74879688152837e19,2.750875838114169e19,2.7529594126488044e19,2.7550465056206488e19,2.757139535955283e19,2.7592376240434053e19,2.7613387907640852e19,2.763446554554532e19,2.765558936293815e19,2.7676746165679817e19,2.7697966740095894e19,2.771923789204685e19,2.7740542029346636e19,2.776191213734409e19,2.7783330623853167e19,2.7804782095711076e19,2.7826299538266653e19,2.7847867558357107e19,2.7869468563796394e19,2.7891135539933348e19,2.7912855292628435e19,2.7934608030672355e19,2.7956428938437198e19,2.797830042373692e19,2.8000207093408727e19,2.802218193280146e19,2.8044209548752323e19,2.8066272349075276e19,2.808840331911915e19,2.8110584866697904e19,2.8132803797672e19,2.8155093097390277e19,2.817743297464343e19,2.8199830026501226e19,2.8222262262731112e19,2.8244764867705176e19,2.8267320249237373e19,2.8289913014164914e19,2.831257834685989e19,2.833529865513625e19,2.8358054147784704e19,2.838088220820059e19,2.840376744322112e19,2.8426690061636993e19,2.84496852478203e19,2.847273760860825e19,2.8495825153768292e19,2.851898746571902e19,2.854220915129765e19,2.856547041929488e19,2.858880425505954e19,2.8612193066405593e19,2.86356236591935e19,2.865913121779535e19,2.868269375197859e19,2.870630026662694e19,2.872998154806598e19,2.8753720004109664e19,2.877750244061846e19,2.8801359643917943e19,2.8825276220845326e19,2.884923677823782e19,2.8873272102421004e19,2.8897368999255343e19,2.8921527468740837e19,2.8945727719668187e19,2.897000493640948e19,2.8994345924825186e19,2.9018728694682747e19,2.9043192828400763e19,2.9067718534769934e19,2.9092288221604217e19,2.91169370732757e19,2.9141649696621593e19,2.9166406300432597e19,2.9191246467127312e19,2.921615040549644e19,2.9241098324330676e19,2.9266125408002114e19,2.9291220661394473e19,2.93163620942752e19,2.934158928906289e19,2.936687805650174e19,2.9392213003428954e19,2.9417633712263135e19,2.9443120391794983e19,2.9468655449838453e19,2.949427626978889e19,2.951996306043699e19,2.9545698229596717e19,2.9571516961640153e19,2.9597408261451022e19,2.9623347939773514e19,2.9649371180979716e19,2.967546698995335e19,2.9701613376461865e19,2.972784332585409e19,2.9754145843013747e19,2.978051872891758e19,2.9806942192356295e19,2.9833455815748485e19,2.9860037608861598e19,2.98866743775561e19,2.991340130620408e19,2.9940198603596235e19,2.996705087656978e19,2.9993993309496803e19,3.002100831019126e19,3.0048078286467105e19,3.0075238422696428e19,3.010247772376295e19,3.012976760236435e19,3.0157154237988995e19,3.018460904333456e19,3.0212125421331284e19,3.0239736357327995e19,3.026741986109214e19,3.029516493750744e19,3.0323000173876216e19,3.0350918973128704e19,3.0378890548939325e19,3.040695888177319e19,3.0435108578467512e19,3.0463315449766478e19,3.0491621277111943e19,3.0520004070271353e19,3.054844843608192e19,3.0576989558915727e19,3.0605614244633248e19,3.0634315896164712e19,3.0663079120347333e19,3.069194789764622e19,3.0720895839782306e19,3.0749903155546292e19,3.0779016024426545e19,3.0808210257167254e19,3.0837468261582373e19,3.0866829620090503e19,3.08962767405056e19,3.0925785433571852e19,3.0955401878777627e19,3.0985099687843856e19,3.1014863467607753e19,3.1044737198534427e19,3.107469449234481e19,3.1104717756852863e19,3.1134853171546948e19,3.1165069950101488e19,3.119535929642346e19,3.12257541958617e19,3.1256241454276674e19,3.1286794683389313e19,3.131746226171124e19,3.1348215601940136e19,3.137903931091321e19,3.1409979568118825e19,3.1441007786254664e19,3.1472108572157936e19,3.150332150824724e19,3.1534629002336535e19,3.1566006865170006e19,3.159750127623602e19,3.1629090245302026e19,3.166077377236802e19,3.1692529867201446e19,3.1724404709290672e19,3.1756376308403143e19,3.1788420475283046e19,3.182058778746526e19,3.185285185667072e19,3.1885188493643612e19,3.1917652673965326e19,3.195021141228703e19,3.198284931544593e19,3.2015605965860635e19,3.2048468169391604e19,3.2081407338736517e19,3.2114471852406997e19,3.2147637521147232e19,3.2180884553747923e19,3.221425693067418e19,3.224773266169345e19,3.2281291955596427e19,3.231497879284823e19,3.234876898419304e19,3.238264493744482e19,3.2416650633068675e19,3.2450764080832053e19,3.2484958892455887e19,3.2519285645475054e19,3.2553724548680253e19,3.2588251412815675e19,3.2622908019323175e19,3.2657676776016708e19,3.2692553284849762e19,3.2727524351682806e19,3.2762627359911182e19,3.2797842518325592e19,3.2833150035716735e19,3.2868598290596233e19,3.2904158695661765e19,3.293981145970403e19,3.2975602762211394e19,3.3011512811974558e19,3.30475130216912e19,3.3083660565965963e19,3.3119922459450016e19,3.3156281109957313e19,3.3192784895999476e19,3.322941182734395e19,3.3266133316688413e19,3.330299994156774e19,3.3339991910772638e19,3.3377080637000778e19,3.341431669778704e19,3.3451680301922124e19,3.3489145061126963e19,3.352675935391318e19,3.356450119004822e19,3.360234638027627e19,3.3640343303108952e19,3.3678474366360224e19,3.371670218663474e19,3.3755092734630167e19,3.379361302499767e19,3.383223886848144e19,3.3871020842616357e19,3.390994135521637e19,3.394899380921172e19,3.3988156214369845e19,3.402748134724888e19,3.4066940620546507e19,3.4106512044030165e19,3.414624839425799e19,3.418612548197417e19,3.4226112520853127e19,3.4266271083546018e19,3.430656818470401e19,3.4346979635071287e19,3.438756700729901e19,3.4428297316038345e19,3.4469141973986968e19,3.451016035477278e19,3.4551326070116712e19,3.4592610532716446e19,3.4634070917176623e19,3.4675687432287945e19,3.47174160975853e19,3.475932948083612e19,3.4801398994738086e19,3.4843585056872595e19,3.488595583696057e19,3.4928487145746203e19,3.497113940081089e19,3.5013980771875553e19,3.505697827359136e19,3.510010331865599e19,3.5143419678743855e19,3.5186896567529374e19,3.5230536184035803e19,3.527430994096082e19,3.5318272813885817e19,3.536240501160149e19,3.540666695168924e19,3.54511312019165e19,3.549576477693444e19,3.5540530293347713e19,3.5585502517947007e19,3.5630641868313723e19,3.567591975714554e19,3.5721410951233143e19,3.576706927108817e19,3.5812874925501317e19,3.5858887288100487e19,3.5905077771583357e19,3.5951413390601093e19,3.5997964513897873e19,3.6044693758078353e19,3.6091574734863466e19,3.6138671215927624e19,3.6185954613968503e19,3.623338754559076e19,3.628104037953857e19,3.6328884528509616e19,3.6376884808131805e19,3.6425111587149316e19,3.647352528314355e19,3.6522101706858693e19,3.657090462996916e19,3.6619905465172623e19,3.6669071227120255e19,3.6718465687486464e19,3.6768066856038695e19,3.6817865936683926e19,3.6867829944073322e19,3.6918038043044086e19,3.696844845215436e19,3.701903038507857e19,3.7069858608607396e19,3.712089354032225e19,3.717210439389754e19,3.722357033417048e19,3.727524298262944e19,3.732709595099536e19,3.737920400605892e19,3.743153196344803e19,3.7484044638790615e19,3.753681240083084e19,3.758980446324313e19,3.76429856416554e19,3.769643070285834e19,3.775010006443334e19,3.780396733810134e19,3.785809849456001e19,3.791246714553028e19,3.7967029310547034e19,3.802186855249399e19,3.8076945288952545e19,3.813222433555061e19,3.818778045907888e19,3.8243582873211765e19,3.8299591995530674e19,3.8355886990872805e19,3.841242827681956e19,3.8469220251417444e19,3.8526227730294374e19,3.858352987828755e19,3.864108711297837e19,3.869886424999474e19,3.875694045417387e19,3.881527614309715e19,3.887384053043901e19,3.893270838299014e19,3.899184451637844e19,3.9051209348185326e19,3.911089083934101e19,3.9170840611333865e19,3.9231032275884835e19,3.92915405997846e19,3.935233039866108e19,3.941335769204916e19,3.9474714838925574e19,3.953635785882521e19,3.9598251567375974e19,3.9660479527461585e19,3.972299775861693e19,3.9785771076469916e19,3.984888744195077e19,3.991230727264089e19,3.997598219002865e19,4.0040008951137305e19,4.010434357550173e19,4.016894648070334e19,4.023390562767235e19,4.029918143399015e19,4.036473431723816e19,4.043064784030007e19,4.049689121685032e19,4.056345565079588e19,4.063030595776466e19,4.06975344967334e19,4.076509728723698e19,4.083295034881029e19,4.090119483652309e19,4.0969773575770735e19,4.1038655780227645e19,4.110793820691707e19,4.1177568079280865e19,4.124750581490044e19,4.131784817079904e19,4.138855556455806e19,4.1459575219619365e19,4.153100829105272e19,4.160281959448602e19,4.167494755726813e19,4.174750652860832e19,4.182044373194847e19,4.189371518682346e19,4.1967422048303055e19,4.2041520335922135e19,4.211596167116908e19,4.219085160716016e19,4.226614176538375e19,4.234178376732823e19,4.241788756415637e19,4.249440037931005e19,4.2571278232324145e19,4.264862667631493e19,4.272639733277078e19,4.280454622122659e19,4.288317449675211e19,4.2962238178882224e19,4.304174606370996e19,4.312163657858417e19,4.320202847076064e19,4.328287336172775e19,4.336411407688086e19,4.34458781595688e19,4.352809963909389e19,4.361073453499102e19,4.3693901594516e19,4.377754364306417e19,4.3861612302123926e19,4.3946226318951055e19,4.403132851894092e19,4.411687052358189e19,4.420297108012977e19,4.428957741202643e19,4.437663674271374e19,4.4464267819447484e19,4.455242226371605e19,4.46410429009148e19,4.473025287634603e19,4.482000381149813e19,4.491023413371994e19,4.5001075784406794e19,4.5092467190907535e19,4.518435557666403e19,4.5276872883071615e19,4.536995753747913e19,4.546355676332845e19,4.555780250201489e19,4.565263757893383e19,4.5748070790178275e19,4.584403176700405e19,4.594067004299254e19,4.603791964744607e19,4.613572340576e19,4.623422205542269e19,4.633334962573646e19,4.643305334014319e19,4.653347393613123e19,4.663454544300291e19,4.673620628810708e19,4.683861040307162e19,4.694168741915237e19,4.704538016174467e19,4.7149829368336876e19,4.725498226237086e19,4.7360764077055934e19,4.746733754011301e19,4.75746322827979e19,4.768258233441295e19,4.779134602463255e19,4.790085738275904e19,4.801105043809475e19,4.812208352031408e19,4.823389505676588e19,4.834640588261294e19,4.845978312362269e19,4.857396960519048e19,4.868888176443261e19,4.880469552320951e19,4.892134051277701e19,4.903874196634442e19,4.9157075805772186e19,4.927627166231613e19,4.9396338332069265e19,4.9517201048240914e19,4.963904452878454e19,4.976178960886294e19,4.988536152168543e19,5.0009949383251984e19,5.013546963067889e19,5.026185629326849e19,5.038929408897424e19,5.051769945491243e19,5.06470064203854e19,5.077739970334661e19,5.090880893505189e19,5.104114615457101e19,5.117461807008999e19,5.130914111872513e19,5.144463613563922e19,5.158130982901829e19,5.17190698398856e19,5.1857845799496974e19,5.199784881408495e19,5.213898652467279e19,5.228117976642329e19,5.24246440436155e19,5.256929579336571e19,5.271505145279021e19,5.286213092421455e19,5.3010441848662e19,5.315990506129536e19,5.331074486248669e19,5.346287768935229e19,5.361632553212471e19,5.37709916337807e19,5.392710909078536e19,5.408459434025497e19,5.424335502321281e19,5.440364182830999e19,5.456534920243026e19,5.472840237878293e19,5.489303445383309e19,5.505916186469702e19,5.522668785435148e19,5.539587630558714e19,5.5566626063334244e19,5.5738844768616055e19,5.591279630422324e19,5.608838831117907e19,5.626551523636727e19,5.644446295281107e19,5.662512150934769e19,5.6807402945046905e19,5.699158873488543e19,5.717756892770048e19,5.736525996060836e19,5.755493451249274e19,5.774651341851643e19,5.793987793142363e19,5.81353315164236e19,5.833278181453962e19,5.853211447656238e19,5.873365055988721e19,5.893728011335133e19,5.914289318579195e19,5.9350824028743926e19,5.9560962691044475e19,5.97733487551122e19,5.998787666783083e19,6.02048762826887e19,6.042425084266257e19,6.064589039658965e19,6.087013359405131e19,6.109689687216384e19,6.1326039493438865e19,6.155794848596938e19,6.179250950054609e19,6.2029603789913194e19,6.226961838216367e19,6.251244332613475e19,6.2757951078477595e19,6.300655505556426e19,6.325813211209243e19,6.351257229689933e19,6.377029342440351e19,6.403116795125616e19,6.429508592629449e19,6.456249155221612e19,6.483325288762573e19,6.510725998136053e19,6.538496143416466e19,6.566625169292185e19,6.595100321428328e19,6.623969538531865e19,6.653220945877218e19,6.682842668738806e19,6.712884844846855e19,6.743335599475786e19,6.774204168523271e19,6.805479556873034e19,6.837213661473905e19,6.8693959270142575e19,6.902014478768511e19,6.935125611732009e19,6.968717011374519e19,7.002778122384415e19,7.037367438780295e19,7.072474405250531e19,7.108087147069545e19,7.144268996107095e19,7.181008957246905e19,7.218295155763393e19,7.25619444196353e19,7.294698019754292e19,7.333793134800798e19,7.373551915065829e19,7.413964684847061e19,7.455019569418915e19,7.496793974399985e19,7.539278224087948e19,7.582462642780478e19,7.626429034142682e19,7.671169481690841e19,7.71667430972263e19,7.763030599558968e19,7.810233073544043e19,7.858273815194134e19,7.907246063095277e19,7.957145419200961e19,8.00796572624607e19,8.059809018909662e19,8.11267265836383e19,8.166590069762058e19,8.221557734667138e19,8.27769088189766e19,8.334989511453626e19,8.393453623335033e19,8.453207242453497e19,8.514255646464829e19,8.576601474196937e19,8.64038282431027e19,8.70560937250715e19,8.772287276052696e19,8.840569586965493e19,8.91047213821298e19,8.982009003543993e19,9.055348188335256e19,9.130515201256535e19,9.207529393712477e19,9.286582520530967e19,9.367708006865489e19,9.450936639041621e19,9.536486560166314e19,9.624400871095376e19,9.714728829949732e19,9.807715847724702e19,9.90342349707144e19,1.000191950790622e20,1.010348623481505e20,1.0208210759118855e20,1.0316184560185062e20,1.0427737491502006e20,1.0542990059544091e20,1.0662148972497338e20,1.0785355847459406e20,1.091302498041164e20,1.1045337570870297e20,1.1182485373663261e20,1.1324974164139311e20,1.1473051992121672e20,1.1626983620010312e20,1.1787397968456319e20,1.1954639844306164e20,1.2129083961122593e20,1.2311524606105512e20,1.250245348085486e20,1.2702407147044995e20,1.2912422664043233e20,1.3133211635775072e20,1.3365559553347394e20,1.3610871152815846e20,1.3870202844952396e20,1.414475001879876e20,1.4436485638019822e20,1.4747047535136316e20,1.507831719444569e20,1.5433220196487135e20,1.581442351666498e20,1.6225046249564904e20,1.6669734491521234e20,1.7153114987463652e20,1.7680752145838008e20,1.8260708465508457e20,1.8901755410436745e20,1.9614900411430863e20,2.041597467671218e20,2.132395841580402e20,2.2364970747326523e20,2.35741080824383e20,2.5004361603942344e20,2.6731119106694788e20,2.8871704638644447e20,3.1627738725609164e20,3.5361504291676016e20,4.082837110278293e20,5.000433923512242e20,7.07168161338644e20,2.671373844909537e22],"x":[1.0e-38,9.998000799880047e-39,9.996001599760096e-39,9.994002399640143e-39,9.992003199520192e-39,9.990003999400239e-39,9.988004799280288e-39,9.986005599160335e-39,9.984006399040384e-39,9.982007198920431e-39,9.98000799880048e-39,9.978008798680527e-39,9.976009598560576e-39,9.974010398440623e-39,9.972011198320672e-39,9.970011998200719e-39,9.968012798080768e-39,9.966013597960815e-39,9.964014397840864e-39,9.962015197720911e-39,9.96001599760096e-39,9.958016797481007e-39,9.956017597361055e-39,9.954018397241103e-39,9.952019197121151e-39,9.950019997001199e-39,9.948020796881247e-39,9.946021596761295e-39,9.944022396641343e-39,9.942023196521391e-39,9.94002399640144e-39,9.938024796281487e-39,9.936025596161535e-39,9.934026396041583e-39,9.932027195921631e-39,9.930027995801679e-39,9.928028795681727e-39,9.926029595561775e-39,9.924030395441823e-39,9.922031195321871e-39,9.92003199520192e-39,9.918032795081967e-39,9.916033594962015e-39,9.914034394842063e-39,9.912035194722111e-39,9.910035994602159e-39,9.908036794482207e-39,9.906037594362255e-39,9.904038394242303e-39,9.90203919412235e-39,9.900039994002399e-39,9.898040793882447e-39,9.896041593762494e-39,9.894042393642543e-39,9.89204319352259e-39,9.890043993402639e-39,9.888044793282686e-39,9.886045593162735e-39,9.884046393042782e-39,9.88204719292283e-39,9.880047992802878e-39,9.878048792682927e-39,9.876049592562974e-39,9.874050392443023e-39,9.87205119232307e-39,9.870051992203119e-39,9.868052792083166e-39,9.866053591963215e-39,9.864054391843262e-39,9.86205519172331e-39,9.860055991603358e-39,9.858056791483407e-39,9.856057591363454e-39,9.854058391243502e-39,9.85205919112355e-39,9.850059991003598e-39,9.848060790883646e-39,9.846061590763694e-39,9.844062390643742e-39,9.84206319052379e-39,9.840063990403838e-39,9.838064790283886e-39,9.836065590163934e-39,9.834066390043982e-39,9.83206718992403e-39,9.830067989804078e-39,9.828068789684126e-39,9.826069589564174e-39,9.824070389444222e-39,9.82207118932427e-39,9.820071989204318e-39,9.818072789084366e-39,9.816073588964414e-39,9.814074388844462e-39,9.81207518872451e-39,9.810075988604558e-39,9.808076788484606e-39,9.806077588364654e-39,9.804078388244702e-39,9.80207918812475e-39,9.800079988004798e-39,9.798080787884846e-39,9.796081587764894e-39,9.794082387644941e-39,9.79208318752499e-39,9.790083987405037e-39,9.788084787285086e-39,9.786085587165133e-39,9.784086387045182e-39,9.782087186925229e-39,9.780087986805278e-39,9.778088786685325e-39,9.776089586565374e-39,9.774090386445421e-39,9.77209118632547e-39,9.770091986205517e-39,9.768092786085566e-39,9.766093585965613e-39,9.764094385845662e-39,9.762095185725709e-39,9.760095985605758e-39,9.758096785485805e-39,9.756097585365854e-39,9.754098385245901e-39,9.75209918512595e-39,9.750099985005997e-39,9.748100784886046e-39,9.746101584766093e-39,9.744102384646141e-39,9.742103184526189e-39,9.740103984406237e-39,9.738104784286285e-39,9.736105584166333e-39,9.734106384046381e-39,9.73210718392643e-39,9.730107983806477e-39,9.728108783686525e-39,9.726109583566573e-39,9.724110383446621e-39,9.722111183326669e-39,9.720111983206717e-39,9.718112783086765e-39,9.716113582966813e-39,9.714114382846861e-39,9.71211518272691e-39,9.710115982606957e-39,9.708116782487005e-39,9.706117582367053e-39,9.704118382247101e-39,9.702119182127149e-39,9.700119982007197e-39,9.698120781887245e-39,9.696121581767293e-39,9.694122381647341e-39,9.692123181527389e-39,9.690123981407437e-39,9.688124781287484e-39,9.686125581167533e-39,9.68412638104758e-39,9.682127180927629e-39,9.680127980807676e-39,9.678128780687725e-39,9.676129580567772e-39,9.67413038044782e-39,9.672131180327868e-39,9.670131980207917e-39,9.668132780087964e-39,9.666133579968013e-39,9.66413437984806e-39,9.662135179728109e-39,9.660135979608156e-39,9.658136779488205e-39,9.656137579368252e-39,9.6541383792483e-39,9.652139179128348e-39,9.650139979008397e-39,9.648140778888444e-39,9.646141578768493e-39,9.64414237864854e-39,9.642143178528589e-39,9.640143978408636e-39,9.638144778288684e-39,9.636145578168732e-39,9.63414637804878e-39,9.632147177928828e-39,9.630147977808876e-39,9.628148777688924e-39,9.626149577568972e-39,9.62415037744902e-39,9.622151177329068e-39,9.620151977209116e-39,9.618152777089164e-39,9.616153576969212e-39,9.61415437684926e-39,9.612155176729308e-39,9.610155976609356e-39,9.608156776489404e-39,9.606157576369452e-39,9.6041583762495e-39,9.602159176129548e-39,9.600159976009596e-39,9.598160775889644e-39,9.596161575769692e-39,9.59416237564974e-39,9.592163175529788e-39,9.590163975409836e-39,9.588164775289884e-39,9.586165575169931e-39,9.58416637504998e-39,9.582167174930027e-39,9.580167974810076e-39,9.578168774690123e-39,9.576169574570172e-39,9.574170374450219e-39,9.572171174330268e-39,9.570171974210315e-39,9.568172774090364e-39,9.566173573970411e-39,9.56417437385046e-39,9.562175173730507e-39,9.560175973610556e-39,9.558176773490603e-39,9.556177573370652e-39,9.554178373250699e-39,9.552179173130748e-39,9.550179973010795e-39,9.548180772890844e-39,9.546181572770891e-39,9.54418237265094e-39,9.542183172530987e-39,9.540183972411036e-39,9.538184772291083e-39,9.536185572171132e-39,9.534186372051179e-39,9.532187171931228e-39,9.530187971811275e-39,9.528188771691323e-39,9.526189571571371e-39,9.52419037145142e-39,9.522191171331467e-39,9.520191971211515e-39,9.518192771091563e-39,9.516193570971611e-39,9.514194370851659e-39,9.512195170731707e-39,9.510195970611755e-39,9.508196770491803e-39,9.506197570371851e-39,9.5041983702519e-39,9.502199170131947e-39,9.500199970011995e-39,9.498200769892043e-39,9.496201569772091e-39,9.494202369652139e-39,9.492203169532187e-39,9.490203969412235e-39,9.488204769292283e-39,9.486205569172331e-39,9.484206369052378e-39,9.482207168932427e-39,9.480207968812474e-39,9.478208768692523e-39,9.47620956857257e-39,9.474210368452619e-39,9.472211168332666e-39,9.470211968212715e-39,9.468212768092762e-39,9.46621356797281e-39,9.464214367852858e-39,9.462215167732907e-39,9.460215967612954e-39,9.458216767493003e-39,9.45621756737305e-39,9.454218367253099e-39,9.452219167133146e-39,9.450219967013195e-39,9.448220766893242e-39,9.44622156677329e-39,9.444222366653338e-39,9.442223166533387e-39,9.440223966413434e-39,9.438224766293483e-39,9.43622556617353e-39,9.434226366053579e-39,9.432227165933626e-39,9.430227965813675e-39,9.428228765693722e-39,9.42622956557377e-39,9.424230365453818e-39,9.422231165333866e-39,9.420231965213914e-39,9.418232765093962e-39,9.41623356497401e-39,9.414234364854058e-39,9.412235164734106e-39,9.410235964614154e-39,9.408236764494202e-39,9.40623756437425e-39,9.404238364254298e-39,9.402239164134346e-39,9.400239964014394e-39,9.398240763894442e-39,9.39624156377449e-39,9.394242363654538e-39,9.392243163534586e-39,9.390243963414634e-39,9.388244763294682e-39,9.38624556317473e-39,9.384246363054778e-39,9.382247162934825e-39,9.380247962814874e-39,9.378248762694921e-39,9.37624956257497e-39,9.374250362455017e-39,9.372251162335066e-39,9.370251962215113e-39,9.368252762095162e-39,9.366253561975209e-39,9.364254361855258e-39,9.362255161735305e-39,9.360255961615354e-39,9.358256761495401e-39,9.35625756137545e-39,9.354258361255497e-39,9.352259161135546e-39,9.350259961015593e-39,9.348260760895642e-39,9.346261560775689e-39,9.344262360655738e-39,9.342263160535785e-39,9.340263960415834e-39,9.338264760295881e-39,9.33626556017593e-39,9.334266360055977e-39,9.332267159936026e-39,9.330267959816073e-39,9.328268759696122e-39,9.326269559576169e-39,9.324270359456218e-39,9.322271159336265e-39,9.320271959216314e-39,9.318272759096361e-39,9.31627355897641e-39,9.314274358856457e-39,9.312275158736505e-39,9.310275958616553e-39,9.308276758496601e-39,9.306277558376649e-39,9.304278358256697e-39,9.302279158136745e-39,9.300279958016793e-39,9.298280757896841e-39,9.29628155777689e-39,9.294282357656937e-39,9.292283157536985e-39,9.290283957417033e-39,9.288284757297081e-39,9.286285557177129e-39,9.284286357057177e-39,9.282287156937225e-39,9.280287956817273e-39,9.278288756697321e-39,9.276289556577368e-39,9.274290356457417e-39,9.272291156337464e-39,9.270291956217513e-39,9.26829275609756e-39,9.266293555977609e-39,9.264294355857656e-39,9.262295155737705e-39,9.260295955617752e-39,9.258296755497801e-39,9.256297555377848e-39,9.254298355257897e-39,9.252299155137944e-39,9.250299955017993e-39,9.24830075489804e-39,9.246301554778089e-39,9.244302354658136e-39,9.242303154538185e-39,9.240303954418232e-39,9.23830475429828e-39,9.236305554178328e-39,9.234306354058377e-39,9.232307153938424e-39,9.230307953818473e-39,9.22830875369852e-39,9.226309553578569e-39,9.224310353458616e-39,9.222311153338665e-39,9.220311953218712e-39,9.21831275309876e-39,9.216313552978808e-39,9.214314352858857e-39,9.212315152738904e-39,9.210315952618953e-39,9.208316752499e-39,9.206317552379048e-39,9.204318352259096e-39,9.202319152139144e-39,9.200319952019192e-39,9.19832075189924e-39,9.196321551779288e-39,9.194322351659336e-39,9.192323151539384e-39,9.190323951419432e-39,9.18832475129948e-39,9.186325551179528e-39,9.184326351059576e-39,9.182327150939624e-39,9.180327950819672e-39,9.17832875069972e-39,9.176329550579768e-39,9.174330350459815e-39,9.172331150339864e-39,9.170331950219911e-39,9.16833275009996e-39,9.166333549980007e-39,9.164334349860056e-39,9.162335149740103e-39,9.160335949620152e-39,9.158336749500199e-39,9.156337549380248e-39,9.154338349260295e-39,9.152339149140344e-39,9.150339949020391e-39,9.14834074890044e-39,9.146341548780487e-39,9.144342348660536e-39,9.142343148540583e-39,9.140343948420632e-39,9.138344748300679e-39,9.136345548180728e-39,9.134346348060775e-39,9.132347147940824e-39,9.130347947820871e-39,9.12834874770092e-39,9.126349547580967e-39,9.124350347461016e-39,9.122351147341063e-39,9.120351947221112e-39,9.118352747101159e-39,9.116353546981208e-39,9.114354346861255e-39,9.112355146741304e-39,9.110355946621351e-39,9.1083567465014e-39,9.106357546381447e-39,9.104358346261496e-39,9.102359146141543e-39,9.100359946021591e-39,9.098360745901639e-39,9.096361545781687e-39,9.094362345661735e-39,9.092363145541783e-39,9.090363945421831e-39,9.08836474530188e-39,9.086365545181927e-39,9.084366345061975e-39,9.082367144942023e-39,9.080367944822071e-39,9.078368744702119e-39,9.076369544582167e-39,9.074370344462215e-39,9.072371144342262e-39,9.070371944222311e-39,9.068372744102358e-39,9.066373543982407e-39,9.064374343862454e-39,9.062375143742503e-39,9.06037594362255e-39,9.058376743502599e-39,9.056377543382646e-39,9.054378343262695e-39,9.052379143142742e-39,9.050379943022791e-39,9.048380742902838e-39,9.046381542782887e-39,9.044382342662934e-39,9.042383142542983e-39,9.04038394242303e-39,9.038384742303079e-39,9.036385542183126e-39,9.034386342063175e-39,9.032387141943222e-39,9.03038794182327e-39,9.028388741703318e-39,9.026389541583367e-39,9.024390341463414e-39,9.022391141343463e-39,9.02039194122351e-39,9.018392741103559e-39,9.016393540983606e-39,9.014394340863655e-39,9.012395140743702e-39,9.01039594062375e-39,9.008396740503798e-39,9.006397540383847e-39,9.004398340263894e-39,9.002399140143943e-39,9.00039994002399e-39,8.998400739904039e-39,8.996401539784086e-39,8.994402339664135e-39,8.992403139544182e-39,8.99040393942423e-39,8.988404739304278e-39,8.986405539184326e-39,8.984406339064374e-39,8.982407138944422e-39,8.98040793882447e-39,8.978408738704518e-39,8.976409538584566e-39,8.974410338464614e-39,8.972411138344662e-39,8.970411938224709e-39,8.968412738104758e-39,8.966413537984805e-39,8.964414337864854e-39,8.962415137744901e-39,8.96041593762495e-39,8.958416737504997e-39,8.956417537385046e-39,8.954418337265093e-39,8.952419137145142e-39,8.950419937025189e-39,8.948420736905238e-39,8.946421536785285e-39,8.944422336665334e-39,8.942423136545381e-39,8.94042393642543e-39,8.938424736305477e-39,8.936425536185526e-39,8.934426336065573e-39,8.932427135945622e-39,8.930427935825669e-39,8.928428735705718e-39,8.926429535585765e-39,8.924430335465814e-39,8.922431135345861e-39,8.92043193522591e-39,8.918432735105957e-39,8.916433534986006e-39,8.914434334866053e-39,8.912435134746102e-39,8.910435934626149e-39,8.908436734506198e-39,8.906437534386245e-39,8.904438334266294e-39,8.902439134146341e-39,8.90043993402639e-39,8.898440733906437e-39,8.896441533786486e-39,8.894442333666533e-39,8.892443133546582e-39,8.890443933426629e-39,8.888444733306678e-39,8.886445533186725e-39,8.884446333066773e-39,8.882447132946821e-39,8.88044793282687e-39,8.878448732706917e-39,8.876449532586965e-39,8.874450332467013e-39,8.872451132347061e-39,8.870451932227109e-39,8.868452732107157e-39,8.866453531987205e-39,8.864454331867252e-39,8.862455131747301e-39,8.860455931627348e-39,8.858456731507397e-39,8.856457531387444e-39,8.854458331267493e-39,8.85245913114754e-39,8.850459931027589e-39,8.848460730907636e-39,8.846461530787685e-39,8.844462330667732e-39,8.842463130547781e-39,8.840463930427828e-39,8.838464730307877e-39,8.836465530187924e-39,8.834466330067973e-39,8.83246712994802e-39,8.830467929828069e-39,8.828468729708116e-39,8.826469529588165e-39,8.824470329468212e-39,8.82247112934826e-39,8.820471929228308e-39,8.818472729108357e-39,8.816473528988404e-39,8.814474328868453e-39,8.8124751287485e-39,8.810475928628549e-39,8.808476728508596e-39,8.806477528388645e-39,8.804478328268692e-39,8.80247912814874e-39,8.800479928028788e-39,8.798480727908837e-39,8.796481527788884e-39,8.794482327668933e-39,8.79248312754898e-39,8.790483927429029e-39,8.788484727309076e-39,8.786485527189125e-39,8.784486327069172e-39,8.78248712694922e-39,8.780487926829268e-39,8.778488726709317e-39,8.776489526589364e-39,8.774490326469412e-39,8.77249112634946e-39,8.770491926229508e-39,8.768492726109556e-39,8.766493525989604e-39,8.764494325869652e-39,8.762495125749699e-39,8.760495925629748e-39,8.758496725509795e-39,8.756497525389844e-39,8.754498325269891e-39,8.75249912514994e-39,8.750499925029987e-39,8.748500724910036e-39,8.746501524790083e-39,8.744502324670132e-39,8.742503124550179e-39,8.740503924430228e-39,8.738504724310275e-39,8.736505524190324e-39,8.734506324070371e-39,8.73250712395042e-39,8.730507923830467e-39,8.728508723710516e-39,8.726509523590563e-39,8.724510323470612e-39,8.722511123350659e-39,8.720511923230708e-39,8.718512723110755e-39,8.716513522990804e-39,8.714514322870851e-39,8.7125151227509e-39,8.710515922630947e-39,8.708516722510996e-39,8.706517522391043e-39,8.704518322271092e-39,8.702519122151139e-39,8.700519922031188e-39,8.698520721911235e-39,8.696521521791284e-39,8.694522321671331e-39,8.69252312155138e-39,8.690523921431427e-39,8.688524721311476e-39,8.686525521191523e-39,8.684526321071572e-39,8.682527120951619e-39,8.680527920831668e-39,8.678528720711715e-39,8.676529520591764e-39,8.674530320471811e-39,8.67253112035186e-39,8.670531920231907e-39,8.668532720111955e-39,8.666533519992003e-39,8.664534319872051e-39,8.662535119752099e-39,8.660535919632146e-39,8.658536719512195e-39,8.656537519392242e-39,8.654538319272291e-39,8.652539119152338e-39,8.650539919032387e-39,8.648540718912434e-39,8.646541518792483e-39,8.64454231867253e-39,8.642543118552579e-39,8.640543918432626e-39,8.638544718312675e-39,8.636545518192722e-39,8.634546318072771e-39,8.632547117952818e-39,8.630547917832867e-39,8.628548717712914e-39,8.626549517592963e-39,8.62455031747301e-39,8.622551117353059e-39,8.620551917233106e-39,8.618552717113155e-39,8.616553516993202e-39,8.614554316873251e-39,8.612555116753298e-39,8.610555916633347e-39,8.608556716513394e-39,8.606557516393443e-39,8.60455831627349e-39,8.602559116153539e-39,8.600559916033586e-39,8.598560715913635e-39,8.596561515793682e-39,8.59456231567373e-39,8.592563115553778e-39,8.590563915433827e-39,8.588564715313874e-39,8.586565515193923e-39,8.58456631507397e-39,8.582567114954019e-39,8.580567914834066e-39,8.578568714714115e-39,8.576569514594162e-39,8.57457031447421e-39,8.572571114354258e-39,8.570571914234307e-39,8.568572714114354e-39,8.566573513994403e-39,8.56457431387445e-39,8.562575113754499e-39,8.560575913634546e-39,8.558576713514593e-39,8.556577513394642e-39,8.554578313274689e-39,8.552579113154738e-39,8.550579913034785e-39,8.548580712914834e-39,8.546581512794881e-39,8.54458231267493e-39,8.542583112554977e-39,8.540583912435026e-39,8.538584712315073e-39,8.536585512195122e-39,8.534586312075169e-39,8.532587111955218e-39,8.530587911835265e-39,8.528588711715314e-39,8.526589511595361e-39,8.52459031147541e-39,8.522591111355457e-39,8.520591911235506e-39,8.518592711115553e-39,8.516593510995602e-39,8.514594310875649e-39,8.512595110755698e-39,8.510595910635745e-39,8.508596710515794e-39,8.506597510395841e-39,8.50459831027589e-39,8.502599110155937e-39,8.500599910035986e-39,8.498600709916033e-39,8.496601509796082e-39,8.494602309676129e-39,8.492603109556178e-39,8.490603909436225e-39,8.488604709316274e-39,8.486605509196321e-39,8.48460630907637e-39,8.482607108956417e-39,8.480607908836466e-39,8.478608708716513e-39,8.476609508596562e-39,8.474610308476609e-39,8.472611108356658e-39,8.470611908236705e-39,8.468612708116754e-39,8.466613507996801e-39,8.46461430787685e-39,8.462615107756897e-39,8.460615907636946e-39,8.458616707516993e-39,8.456617507397042e-39,8.454618307277089e-39,8.452619107157136e-39,8.450619907037185e-39,8.448620706917232e-39,8.446621506797281e-39,8.444622306677328e-39,8.442623106557377e-39,8.440623906437424e-39,8.438624706317473e-39,8.43662550619752e-39,8.434626306077569e-39,8.432627105957616e-39,8.430627905837665e-39,8.428628705717712e-39,8.426629505597761e-39,8.424630305477808e-39,8.422631105357857e-39,8.420631905237904e-39,8.418632705117953e-39,8.416633504998e-39,8.414634304878049e-39,8.412635104758096e-39,8.410635904638145e-39,8.408636704518192e-39,8.406637504398241e-39,8.404638304278288e-39,8.402639104158337e-39,8.400639904038384e-39,8.398640703918433e-39,8.39664150379848e-39,8.394642303678529e-39,8.392643103558576e-39,8.390643903438625e-39,8.388644703318672e-39,8.38664550319872e-39,8.384646303078768e-39,8.382647102958817e-39,8.380647902838864e-39,8.378648702718913e-39,8.37664950259896e-39,8.374650302479009e-39,8.372651102359056e-39,8.370651902239105e-39,8.368652702119152e-39,8.3666535019992e-39,8.364654301879248e-39,8.362655101759297e-39,8.360655901639344e-39,8.358656701519393e-39,8.35665750139944e-39,8.354658301279489e-39,8.352659101159536e-39,8.350659901039583e-39,8.348660700919632e-39,8.346661500799679e-39,8.344662300679728e-39,8.342663100559775e-39,8.340663900439824e-39,8.338664700319871e-39,8.33666550019992e-39,8.334666300079967e-39,8.332667099960016e-39,8.330667899840063e-39,8.328668699720112e-39,8.326669499600159e-39,8.324670299480208e-39,8.322671099360255e-39,8.320671899240304e-39,8.318672699120351e-39,8.3166734990004e-39,8.314674298880447e-39,8.312675098760496e-39,8.310675898640543e-39,8.308676698520592e-39,8.306677498400639e-39,8.304678298280688e-39,8.302679098160735e-39,8.300679898040784e-39,8.298680697920831e-39,8.29668149780088e-39,8.294682297680927e-39,8.292683097560976e-39,8.290683897441023e-39,8.288684697321072e-39,8.286685497201119e-39,8.284686297081168e-39,8.282687096961215e-39,8.280687896841264e-39,8.278688696721311e-39,8.27668949660136e-39,8.274690296481407e-39,8.272691096361456e-39,8.270691896241503e-39,8.268692696121552e-39,8.266693496001599e-39,8.264694295881648e-39,8.262695095761695e-39,8.260695895641744e-39,8.258696695521791e-39,8.25669749540184e-39,8.254698295281887e-39,8.252699095161936e-39,8.250699895041983e-39,8.24870069492203e-39,8.246701494802079e-39,8.244702294682126e-39,8.242703094562175e-39,8.240703894442222e-39,8.238704694322271e-39,8.236705494202318e-39,8.234706294082367e-39,8.232707093962414e-39,8.230707893842463e-39,8.22870869372251e-39,8.226709493602559e-39,8.224710293482606e-39,8.222711093362655e-39,8.220711893242702e-39,8.218712693122751e-39,8.216713493002798e-39,8.214714292882847e-39,8.212715092762894e-39,8.210715892642943e-39,8.20871669252299e-39,8.206717492403039e-39,8.204718292283086e-39,8.202719092163135e-39,8.200719892043182e-39,8.198720691923231e-39,8.196721491803278e-39,8.194722291683327e-39,8.192723091563374e-39,8.190723891443423e-39,8.18872469132347e-39,8.186725491203519e-39,8.184726291083566e-39,8.182727090963615e-39,8.180727890843662e-39,8.178728690723711e-39,8.176729490603758e-39,8.174730290483807e-39,8.172731090363854e-39,8.170731890243903e-39,8.16873269012395e-39,8.166733490003999e-39,8.164734289884046e-39,8.162735089764095e-39,8.160735889644142e-39,8.15873668952419e-39,8.156737489404238e-39,8.154738289284287e-39,8.152739089164334e-39,8.150739889044383e-39,8.14874068892443e-39,8.146741488804477e-39,8.144742288684526e-39,8.142743088564573e-39,8.140743888444622e-39,8.138744688324669e-39,8.136745488204718e-39,8.134746288084765e-39,8.132747087964814e-39,8.130747887844861e-39,8.12874868772491e-39,8.126749487604957e-39,8.124750287485006e-39,8.122751087365053e-39,8.120751887245102e-39,8.118752687125149e-39,8.116753487005198e-39,8.114754286885245e-39,8.112755086765294e-39,8.110755886645341e-39,8.10875668652539e-39,8.106757486405437e-39,8.104758286285486e-39,8.102759086165533e-39,8.100759886045582e-39,8.098760685925629e-39,8.096761485805678e-39,8.094762285685725e-39,8.092763085565774e-39,8.090763885445821e-39,8.08876468532587e-39,8.086765485205917e-39,8.084766285085966e-39,8.082767084966013e-39,8.080767884846062e-39,8.078768684726109e-39,8.076769484606158e-39,8.074770284486205e-39,8.072771084366254e-39,8.070771884246301e-39,8.06877268412635e-39,8.066773484006397e-39,8.064774283886446e-39,8.062775083766493e-39,8.060775883646542e-39,8.058776683526589e-39,8.056777483406638e-39,8.054778283286685e-39,8.052779083166734e-39,8.050779883046781e-39,8.04878068292683e-39,8.046781482806877e-39,8.044782282686926e-39,8.042783082566973e-39,8.04078388244702e-39,8.038784682327069e-39,8.036785482207116e-39,8.034786282087165e-39,8.032787081967212e-39,8.030787881847261e-39,8.028788681727308e-39,8.026789481607357e-39,8.024790281487404e-39,8.022791081367453e-39,8.0207918812475e-39,8.018792681127549e-39,8.016793481007596e-39,8.014794280887645e-39,8.012795080767692e-39,8.010795880647741e-39,8.008796680527788e-39,8.006797480407837e-39,8.004798280287884e-39,8.002799080167933e-39,8.00079988004798e-39,7.998800679928029e-39,7.996801479808076e-39,7.994802279688125e-39,7.992803079568172e-39,7.990803879448221e-39,7.988804679328268e-39,7.986805479208317e-39,7.984806279088364e-39,7.982807078968413e-39,7.98080787884846e-39,7.978808678728509e-39,7.976809478608556e-39,7.974810278488605e-39,7.972811078368652e-39,7.970811878248701e-39,7.968812678128748e-39,7.966813478008797e-39,7.964814277888844e-39,7.962815077768893e-39,7.96081587764894e-39,7.958816677528989e-39,7.956817477409036e-39,7.954818277289085e-39,7.952819077169132e-39,7.95081987704918e-39,7.948820676929228e-39,7.946821476809277e-39,7.944822276689324e-39,7.942823076569373e-39,7.94082387644942e-39,7.938824676329467e-39,7.936825476209516e-39,7.934826276089563e-39,7.932827075969612e-39,7.930827875849659e-39,7.928828675729708e-39,7.926829475609755e-39,7.924830275489804e-39,7.922831075369851e-39,7.9208318752499e-39,7.918832675129947e-39,7.916833475009996e-39,7.914834274890043e-39,7.912835074770092e-39,7.910835874650139e-39,7.908836674530188e-39,7.906837474410235e-39,7.904838274290284e-39,7.902839074170331e-39,7.90083987405038e-39,7.898840673930427e-39,7.896841473810476e-39,7.894842273690523e-39,7.892843073570572e-39,7.890843873450619e-39,7.888844673330668e-39,7.886845473210715e-39,7.884846273090764e-39,7.882847072970811e-39,7.88084787285086e-39,7.878848672730907e-39,7.876849472610956e-39,7.874850272491003e-39,7.872851072371052e-39,7.870851872251099e-39,7.868852672131148e-39,7.866853472011195e-39,7.864854271891244e-39,7.862855071771291e-39,7.86085587165134e-39,7.858856671531387e-39,7.856857471411436e-39,7.854858271291483e-39,7.852859071171532e-39,7.850859871051579e-39,7.848860670931628e-39,7.846861470811675e-39,7.844862270691724e-39,7.842863070571771e-39,7.84086387045182e-39,7.838864670331867e-39,7.836865470211914e-39,7.834866270091963e-39,7.83286706997201e-39,7.830867869852059e-39,7.828868669732106e-39,7.826869469612155e-39,7.824870269492202e-39,7.822871069372251e-39,7.820871869252298e-39,7.818872669132347e-39,7.816873469012394e-39,7.814874268892443e-39,7.81287506877249e-39,7.810875868652539e-39,7.808876668532586e-39,7.806877468412635e-39,7.804878268292682e-39,7.802879068172731e-39,7.800879868052778e-39,7.798880667932827e-39,7.796881467812874e-39,7.794882267692923e-39,7.79288306757297e-39,7.790883867453019e-39,7.788884667333066e-39,7.786885467213115e-39,7.784886267093162e-39,7.782887066973211e-39,7.780887866853258e-39,7.778888666733307e-39,7.776889466613354e-39,7.774890266493403e-39,7.77289106637345e-39,7.770891866253499e-39,7.768892666133546e-39,7.766893466013595e-39,7.764894265893642e-39,7.762895065773691e-39,7.760895865653738e-39,7.758896665533787e-39,7.756897465413834e-39,7.754898265293883e-39,7.75289906517393e-39,7.750899865053979e-39,7.748900664934026e-39,7.746901464814075e-39,7.744902264694122e-39,7.74290306457417e-39,7.740903864454218e-39,7.738904664334267e-39,7.736905464214314e-39,7.734906264094361e-39,7.73290706397441e-39,7.730907863854457e-39,7.728908663734506e-39,7.726909463614553e-39,7.724910263494602e-39,7.722911063374649e-39,7.720911863254698e-39,7.718912663134745e-39,7.716913463014794e-39,7.714914262894841e-39,7.71291506277489e-39,7.710915862654937e-39,7.708916662534986e-39,7.706917462415033e-39,7.704918262295082e-39,7.702919062175129e-39,7.700919862055178e-39,7.698920661935225e-39,7.696921461815274e-39,7.694922261695321e-39,7.69292306157537e-39,7.690923861455417e-39,7.688924661335466e-39,7.686925461215513e-39,7.684926261095562e-39,7.682927060975609e-39,7.680927860855658e-39,7.678928660735705e-39,7.676929460615754e-39,7.674930260495801e-39,7.67293106037585e-39,7.670931860255897e-39,7.668932660135946e-39,7.666933460015993e-39,7.664934259896042e-39,7.662935059776089e-39,7.660935859656138e-39,7.658936659536185e-39,7.656937459416234e-39,7.654938259296281e-39,7.65293905917633e-39,7.650939859056377e-39,7.648940658936426e-39,7.646941458816473e-39,7.644942258696522e-39,7.642943058576569e-39,7.640943858456618e-39,7.638944658336665e-39,7.636945458216714e-39,7.634946258096761e-39,7.63294705797681e-39,7.630947857856857e-39,7.628948657736904e-39,7.626949457616953e-39,7.624950257497e-39,7.622951057377049e-39,7.620951857257096e-39,7.618952657137145e-39,7.616953457017192e-39,7.614954256897241e-39,7.612955056777288e-39,7.610955856657337e-39,7.608956656537384e-39,7.606957456417433e-39,7.60495825629748e-39,7.602959056177529e-39,7.600959856057576e-39,7.598960655937625e-39,7.596961455817672e-39,7.594962255697721e-39,7.592963055577768e-39,7.590963855457817e-39,7.588964655337864e-39,7.586965455217913e-39,7.58496625509796e-39,7.582967054978009e-39,7.580967854858056e-39,7.578968654738105e-39,7.576969454618152e-39,7.574970254498201e-39,7.572971054378248e-39,7.570971854258297e-39,7.568972654138344e-39,7.566973454018393e-39,7.56497425389844e-39,7.562975053778489e-39,7.560975853658536e-39,7.558976653538585e-39,7.556977453418632e-39,7.554978253298681e-39,7.552979053178728e-39,7.550979853058777e-39,7.548980652938824e-39,7.546981452818873e-39,7.54498225269892e-39,7.542983052578969e-39,7.540983852459016e-39,7.538984652339065e-39,7.536985452219112e-39,7.534986252099161e-39,7.532987051979208e-39,7.530987851859257e-39,7.528988651739304e-39,7.526989451619351e-39,7.5249902514994e-39,7.522991051379447e-39,7.520991851259496e-39,7.518992651139543e-39,7.516993451019592e-39,7.514994250899639e-39,7.512995050779688e-39,7.510995850659735e-39,7.508996650539784e-39,7.506997450419831e-39,7.50499825029988e-39,7.502999050179927e-39,7.500999850059976e-39,7.499000649940023e-39,7.497001449820072e-39,7.495002249700119e-39,7.493003049580168e-39,7.491003849460215e-39,7.489004649340264e-39,7.487005449220311e-39,7.48500624910036e-39,7.483007048980407e-39,7.481007848860456e-39,7.479008648740503e-39,7.477009448620552e-39,7.475010248500599e-39,7.473011048380648e-39,7.471011848260695e-39,7.469012648140744e-39,7.467013448020791e-39,7.46501424790084e-39,7.463015047780887e-39,7.461015847660936e-39,7.459016647540983e-39,7.457017447421032e-39,7.455018247301079e-39,7.453019047181128e-39,7.451019847061175e-39,7.449020646941224e-39,7.447021446821271e-39,7.44502224670132e-39,7.443023046581367e-39,7.441023846461416e-39,7.439024646341463e-39,7.437025446221512e-39,7.435026246101559e-39,7.433027045981608e-39,7.431027845861655e-39,7.429028645741704e-39,7.427029445621751e-39,7.425030245501798e-39,7.423031045381847e-39,7.421031845261894e-39,7.419032645141943e-39,7.41703344502199e-39,7.415034244902039e-39,7.413035044782086e-39,7.411035844662135e-39,7.409036644542182e-39,7.407037444422231e-39,7.405038244302278e-39,7.403039044182327e-39,7.401039844062374e-39,7.399040643942423e-39,7.39704144382247e-39,7.395042243702519e-39,7.393043043582566e-39,7.391043843462615e-39,7.389044643342662e-39,7.387045443222711e-39,7.385046243102758e-39,7.383047042982807e-39,7.381047842862854e-39,7.379048642742903e-39,7.37704944262295e-39,7.375050242502999e-39,7.373051042383046e-39,7.371051842263095e-39,7.369052642143142e-39,7.367053442023191e-39,7.365054241903238e-39,7.363055041783287e-39,7.361055841663334e-39,7.359056641543383e-39,7.35705744142343e-39,7.355058241303479e-39,7.353059041183526e-39,7.351059841063575e-39,7.349060640943622e-39,7.347061440823671e-39,7.345062240703718e-39,7.343063040583767e-39,7.341063840463814e-39,7.339064640343863e-39,7.33706544022391e-39,7.335066240103959e-39,7.333067039984006e-39,7.331067839864055e-39,7.329068639744102e-39,7.327069439624151e-39,7.325070239504198e-39,7.323071039384245e-39,7.321071839264294e-39,7.319072639144341e-39,7.31707343902439e-39,7.315074238904437e-39,7.313075038784486e-39,7.311075838664533e-39,7.309076638544582e-39,7.307077438424629e-39,7.305078238304678e-39,7.303079038184725e-39,7.301079838064774e-39,7.299080637944821e-39,7.29708143782487e-39,7.295082237704917e-39,7.293083037584966e-39,7.291083837465013e-39,7.289084637345062e-39,7.287085437225109e-39,7.285086237105158e-39,7.283087036985205e-39,7.281087836865254e-39,7.279088636745301e-39,7.27708943662535e-39,7.275090236505397e-39,7.273091036385446e-39,7.271091836265493e-39,7.269092636145542e-39,7.267093436025589e-39,7.265094235905638e-39,7.263095035785685e-39,7.261095835665734e-39,7.259096635545781e-39,7.25709743542583e-39,7.255098235305877e-39,7.253099035185926e-39,7.251099835065973e-39,7.249100634946022e-39,7.247101434826069e-39,7.245102234706118e-39,7.243103034586165e-39,7.241103834466214e-39,7.239104634346261e-39,7.23710543422631e-39,7.235106234106357e-39,7.233107033986406e-39,7.231107833866453e-39,7.229108633746502e-39,7.227109433626549e-39,7.225110233506598e-39,7.223111033386645e-39,7.221111833266694e-39,7.219112633146741e-39,7.217113433026788e-39,7.215114232906837e-39,7.213115032786884e-39,7.211115832666933e-39,7.20911663254698e-39,7.207117432427029e-39,7.205118232307076e-39,7.203119032187125e-39,7.201119832067172e-39,7.199120631947221e-39,7.197121431827268e-39,7.195122231707317e-39,7.193123031587364e-39,7.191123831467413e-39,7.18912463134746e-39,7.187125431227509e-39,7.185126231107556e-39,7.183127030987605e-39,7.181127830867652e-39,7.179128630747701e-39,7.177129430627748e-39,7.175130230507797e-39,7.173131030387844e-39,7.171131830267893e-39,7.16913263014794e-39,7.167133430027989e-39,7.165134229908036e-39,7.163135029788085e-39,7.161135829668132e-39,7.159136629548181e-39,7.157137429428228e-39,7.155138229308277e-39,7.153139029188324e-39,7.151139829068373e-39,7.14914062894842e-39,7.147141428828469e-39,7.145142228708516e-39,7.143143028588565e-39,7.141143828468612e-39,7.139144628348661e-39,7.137145428228708e-39,7.135146228108757e-39,7.133147027988804e-39,7.131147827868853e-39,7.1291486277489e-39,7.127149427628949e-39,7.125150227508996e-39,7.123151027389045e-39,7.121151827269092e-39,7.119152627149141e-39,7.117153427029188e-39,7.115154226909235e-39,7.113155026789284e-39,7.111155826669331e-39,7.10915662654938e-39,7.107157426429427e-39,7.105158226309476e-39,7.103159026189523e-39,7.101159826069572e-39,7.099160625949619e-39,7.097161425829668e-39,7.095162225709715e-39,7.093163025589764e-39,7.091163825469811e-39,7.08916462534986e-39,7.087165425229907e-39,7.085166225109956e-39,7.083167024990003e-39,7.081167824870052e-39,7.079168624750099e-39,7.077169424630148e-39,7.075170224510195e-39,7.073171024390244e-39,7.071171824270291e-39,7.06917262415034e-39,7.067173424030387e-39,7.065174223910436e-39,7.063175023790483e-39,7.061175823670532e-39,7.059176623550579e-39,7.057177423430628e-39,7.055178223310675e-39,7.053179023190724e-39,7.051179823070771e-39,7.04918062295082e-39,7.047181422830867e-39,7.045182222710916e-39,7.043183022590963e-39,7.041183822471012e-39,7.039184622351059e-39,7.037185422231108e-39,7.035186222111155e-39,7.033187021991204e-39,7.031187821871251e-39,7.0291886217513e-39,7.027189421631347e-39,7.025190221511396e-39,7.023191021391443e-39,7.021191821271492e-39,7.019192621151539e-39,7.017193421031588e-39,7.015194220911635e-39,7.013195020791682e-39,7.011195820671731e-39,7.009196620551778e-39,7.007197420431827e-39,7.005198220311874e-39,7.003199020191923e-39,7.00119982007197e-39,6.999200619952019e-39,6.997201419832066e-39,6.995202219712115e-39,6.993203019592162e-39,6.991203819472211e-39,6.989204619352258e-39,6.987205419232307e-39,6.985206219112354e-39,6.983207018992403e-39,6.98120781887245e-39,6.979208618752499e-39,6.977209418632546e-39,6.975210218512595e-39,6.973211018392642e-39,6.971211818272691e-39,6.969212618152738e-39,6.967213418032787e-39,6.965214217912834e-39,6.963215017792883e-39,6.96121581767293e-39,6.959216617552979e-39,6.957217417433026e-39,6.955218217313075e-39,6.953219017193122e-39,6.951219817073171e-39,6.949220616953218e-39,6.947221416833267e-39,6.945222216713314e-39,6.943223016593363e-39,6.94122381647341e-39,6.939224616353459e-39,6.937225416233506e-39,6.935226216113555e-39,6.933227015993602e-39,6.931227815873651e-39,6.929228615753698e-39,6.927229415633747e-39,6.925230215513794e-39,6.923231015393843e-39,6.92123181527389e-39,6.919232615153939e-39,6.917233415033986e-39,6.915234214914035e-39,6.913235014794082e-39,6.91123581467413e-39,6.909236614554178e-39,6.907237414434225e-39,6.905238214314274e-39,6.903239014194321e-39,6.90123981407437e-39,6.899240613954417e-39,6.897241413834466e-39,6.895242213714513e-39,6.893243013594562e-39,6.89124381347461e-39,6.889244613354658e-39,6.887245413234705e-39,6.885246213114754e-39,6.883247012994801e-39,6.88124781287485e-39,6.879248612754897e-39,6.877249412634946e-39,6.875250212514993e-39,6.873251012395042e-39,6.871251812275089e-39,6.869252612155138e-39,6.867253412035185e-39,6.865254211915234e-39,6.863255011795281e-39,6.86125581167533e-39,6.859256611555377e-39,6.857257411435426e-39,6.855258211315473e-39,6.853259011195522e-39,6.851259811075569e-39,6.849260610955618e-39,6.847261410835665e-39,6.845262210715714e-39,6.843263010595761e-39,6.84126381047581e-39,6.839264610355857e-39,6.837265410235906e-39,6.835266210115953e-39,6.833267009996002e-39,6.831267809876049e-39,6.829268609756098e-39,6.827269409636145e-39,6.825270209516194e-39,6.823271009396241e-39,6.82127180927629e-39,6.819272609156337e-39,6.817273409036386e-39,6.815274208916433e-39,6.813275008796482e-39,6.811275808676529e-39,6.809276608556578e-39,6.807277408436625e-39,6.805278208316672e-39,6.803279008196721e-39,6.801279808076768e-39,6.799280607956817e-39,6.797281407836864e-39,6.795282207716913e-39,6.79328300759696e-39,6.791283807477009e-39,6.789284607357056e-39,6.787285407237105e-39,6.785286207117152e-39,6.783287006997201e-39,6.781287806877248e-39,6.779288606757297e-39,6.777289406637344e-39,6.775290206517393e-39,6.77329100639744e-39,6.771291806277489e-39,6.769292606157536e-39,6.767293406037585e-39,6.765294205917632e-39,6.763295005797681e-39,6.761295805677728e-39,6.759296605557777e-39,6.757297405437824e-39,6.755298205317873e-39,6.75329900519792e-39,6.751299805077969e-39,6.749300604958016e-39,6.747301404838065e-39,6.745302204718112e-39,6.743303004598161e-39,6.741303804478208e-39,6.739304604358257e-39,6.737305404238304e-39,6.735306204118353e-39,6.7333070039984e-39,6.731307803878449e-39,6.729308603758496e-39,6.727309403638545e-39,6.725310203518592e-39,6.723311003398641e-39,6.721311803278688e-39,6.719312603158737e-39,6.717313403038784e-39,6.715314202918833e-39,6.71331500279888e-39,6.711315802678929e-39,6.709316602558976e-39,6.707317402439025e-39,6.705318202319072e-39,6.70331900219912e-39,6.701319802079168e-39,6.699320601959215e-39,6.697321401839264e-39,6.695322201719311e-39,6.69332300159936e-39,6.691323801479407e-39,6.689324601359456e-39,6.687325401239503e-39,6.685326201119552e-39,6.6833270009996e-39,6.681327800879648e-39,6.679328600759695e-39,6.677329400639744e-39,6.675330200519791e-39,6.67333100039984e-39,6.671331800279887e-39,6.669332600159936e-39,6.667333400039983e-39,6.665334199920032e-39,6.663334999800079e-39,6.661335799680128e-39,6.659336599560175e-39,6.657337399440224e-39,6.655338199320271e-39,6.65333899920032e-39,6.651339799080367e-39,6.649340598960416e-39,6.647341398840463e-39,6.645342198720512e-39,6.643342998600559e-39,6.641343798480608e-39,6.639344598360655e-39,6.637345398240704e-39,6.635346198120751e-39,6.6333469980008e-39,6.631347797880847e-39,6.629348597760896e-39,6.627349397640943e-39,6.625350197520992e-39,6.623350997401039e-39,6.621351797281088e-39,6.619352597161135e-39,6.617353397041184e-39,6.615354196921231e-39,6.61335499680128e-39,6.611355796681327e-39,6.609356596561376e-39,6.607357396441423e-39,6.605358196321472e-39,6.603358996201519e-39,6.601359796081566e-39,6.599360595961615e-39,6.597361395841662e-39,6.595362195721711e-39,6.593362995601758e-39,6.591363795481807e-39,6.589364595361854e-39,6.587365395241903e-39,6.58536619512195e-39,6.583366995001999e-39,6.581367794882046e-39,6.579368594762095e-39,6.577369394642142e-39,6.575370194522191e-39,6.573370994402238e-39,6.571371794282287e-39,6.569372594162334e-39,6.567373394042383e-39,6.56537419392243e-39,6.563374993802479e-39,6.561375793682526e-39,6.559376593562575e-39,6.557377393442622e-39,6.555378193322671e-39,6.553378993202718e-39,6.551379793082767e-39,6.549380592962814e-39,6.547381392842863e-39,6.54538219272291e-39,6.543382992602959e-39,6.541383792483006e-39,6.539384592363055e-39,6.537385392243102e-39,6.535386192123151e-39,6.533386992003198e-39,6.531387791883247e-39,6.529388591763294e-39,6.527389391643343e-39,6.52539019152339e-39,6.523390991403439e-39,6.521391791283486e-39,6.519392591163535e-39,6.517393391043582e-39,6.515394190923631e-39,6.513394990803678e-39,6.511395790683727e-39,6.509396590563774e-39,6.507397390443823e-39,6.50539819032387e-39,6.503398990203919e-39,6.501399790083966e-39,6.499400589964013e-39,6.497401389844062e-39,6.49540218972411e-39,6.493402989604158e-39,6.491403789484205e-39,6.489404589364254e-39,6.487405389244301e-39,6.48540618912435e-39,6.483406989004397e-39,6.481407788884446e-39,6.479408588764493e-39,6.477409388644542e-39,6.47541018852459e-39,6.473410988404638e-39,6.471411788284685e-39,6.469412588164734e-39,6.467413388044781e-39,6.46541418792483e-39,6.463414987804877e-39,6.461415787684926e-39,6.459416587564973e-39,6.457417387445022e-39,6.45541818732507e-39,6.453418987205118e-39,6.451419787085165e-39,6.449420586965214e-39,6.447421386845261e-39,6.44542218672531e-39,6.443422986605357e-39,6.441423786485406e-39,6.439424586365453e-39,6.437425386245502e-39,6.435426186125549e-39,6.433426986005598e-39,6.431427785885645e-39,6.429428585765694e-39,6.427429385645741e-39,6.42543018552579e-39,6.423430985405837e-39,6.421431785285886e-39,6.419432585165933e-39,6.417433385045982e-39,6.415434184926029e-39,6.413434984806078e-39,6.411435784686125e-39,6.409436584566174e-39,6.407437384446221e-39,6.40543818432627e-39,6.403438984206317e-39,6.401439784086366e-39,6.399440583966413e-39,6.397441383846462e-39,6.395442183726509e-39,6.393442983606557e-39,6.391443783486605e-39,6.389444583366652e-39,6.387445383246701e-39,6.385446183126748e-39,6.383446983006797e-39,6.381447782886844e-39,6.379448582766893e-39,6.37744938264694e-39,6.375450182526989e-39,6.373450982407036e-39,6.371451782287085e-39,6.369452582167132e-39,6.367453382047181e-39,6.365454181927228e-39,6.363454981807277e-39,6.361455781687324e-39,6.359456581567373e-39,6.35745738144742e-39,6.355458181327469e-39,6.353458981207516e-39,6.351459781087565e-39,6.349460580967612e-39,6.347461380847661e-39,6.345462180727708e-39,6.343462980607757e-39,6.341463780487804e-39,6.339464580367853e-39,6.3374653802479e-39,6.335466180127949e-39,6.333466980007996e-39,6.331467779888045e-39,6.329468579768092e-39,6.327469379648141e-39,6.325470179528188e-39,6.323470979408237e-39,6.321471779288284e-39,6.319472579168333e-39,6.31747337904838e-39,6.315474178928429e-39,6.313474978808476e-39,6.311475778688525e-39,6.309476578568572e-39,6.307477378448621e-39,6.305478178328668e-39,6.303478978208717e-39,6.301479778088764e-39,6.299480577968813e-39,6.29748137784886e-39,6.295482177728909e-39,6.293482977608956e-39,6.291483777489004e-39,6.289484577369052e-39,6.2874853772491e-39,6.285486177129148e-39,6.283486977009195e-39,6.281487776889244e-39,6.279488576769291e-39,6.27748937664934e-39,6.275490176529387e-39,6.273490976409436e-39,6.271491776289483e-39,6.269492576169532e-39,6.26749337604958e-39,6.265494175929628e-39,6.263494975809675e-39,6.261495775689724e-39,6.259496575569771e-39,6.25749737544982e-39,6.255498175329867e-39,6.253498975209916e-39,6.251499775089963e-39,6.249500574970012e-39,6.24750137485006e-39,6.245502174730108e-39,6.243502974610155e-39,6.241503774490204e-39,6.239504574370251e-39,6.2375053742503e-39,6.235506174130347e-39,6.233506974010396e-39,6.231507773890443e-39,6.229508573770492e-39,6.227509373650539e-39,6.225510173530588e-39,6.223510973410635e-39,6.221511773290684e-39,6.219512573170731e-39,6.21751337305078e-39,6.215514172930827e-39,6.213514972810876e-39,6.211515772690923e-39,6.209516572570972e-39,6.207517372451019e-39,6.205518172331068e-39,6.203518972211115e-39,6.201519772091164e-39,6.199520571971211e-39,6.19752137185126e-39,6.195522171731307e-39,6.193522971611356e-39,6.191523771491403e-39,6.18952457137145e-39,6.187525371251499e-39,6.185526171131547e-39,6.183526971011595e-39,6.181527770891643e-39,6.179528570771691e-39,6.177529370651739e-39,6.175530170531787e-39,6.173530970411834e-39,6.171531770291883e-39,6.16953257017193e-39,6.167533370051979e-39,6.165534169932026e-39,6.163534969812075e-39,6.161535769692122e-39,6.159536569572171e-39,6.157537369452218e-39,6.155538169332267e-39,6.153538969212314e-39,6.151539769092363e-39,6.14954056897241e-39,6.147541368852459e-39,6.145542168732506e-39,6.143542968612555e-39,6.141543768492602e-39,6.139544568372651e-39,6.137545368252698e-39,6.135546168132747e-39,6.133546968012794e-39,6.131547767892843e-39,6.12954856777289e-39,6.127549367652939e-39,6.125550167532986e-39,6.123550967413035e-39,6.121551767293082e-39,6.119552567173131e-39,6.117553367053178e-39,6.115554166933227e-39,6.113554966813274e-39,6.111555766693323e-39,6.10955656657337e-39,6.107557366453419e-39,6.105558166333466e-39,6.103558966213515e-39,6.101559766093562e-39,6.099560565973611e-39,6.097561365853658e-39,6.095562165733707e-39,6.093562965613754e-39,6.091563765493803e-39,6.08956456537385e-39,6.087565365253898e-39,6.085566165133946e-39,6.083566965013994e-39,6.081567764894042e-39,6.07956856477409e-39,6.077569364654138e-39,6.075570164534186e-39,6.073570964414234e-39,6.071571764294282e-39,6.06957256417433e-39,6.067573364054377e-39,6.065574163934426e-39,6.063574963814473e-39,6.061575763694522e-39,6.05957656357457e-39,6.057577363454618e-39,6.055578163334665e-39,6.053578963214714e-39,6.051579763094761e-39,6.04958056297481e-39,6.047581362854857e-39,6.045582162734906e-39,6.043582962614953e-39,6.041583762495002e-39,6.03958456237505e-39,6.037585362255098e-39,6.035586162135145e-39,6.033586962015194e-39,6.031587761895241e-39,6.02958856177529e-39,6.027589361655337e-39,6.025590161535386e-39,6.023590961415433e-39,6.021591761295482e-39,6.019592561175529e-39,6.017593361055578e-39,6.015594160935625e-39,6.013594960815674e-39,6.011595760695721e-39,6.00959656057577e-39,6.007597360455817e-39,6.005598160335866e-39,6.003598960215913e-39,6.001599760095962e-39,5.999600559976009e-39,5.997601359856058e-39,5.995602159736105e-39,5.993602959616154e-39,5.991603759496201e-39,5.98960455937625e-39,5.987605359256297e-39,5.985606159136346e-39,5.983606959016393e-39,5.98160775889644e-39,5.979608558776489e-39,5.977609358656537e-39,5.975610158536585e-39,5.973610958416633e-39,5.971611758296681e-39,5.969612558176729e-39,5.967613358056777e-39,5.965614157936825e-39,5.963614957816873e-39,5.96161575769692e-39,5.959616557576969e-39,5.957617357457016e-39,5.955618157337065e-39,5.953618957217112e-39,5.951619757097161e-39,5.949620556977208e-39,5.947621356857257e-39,5.945622156737304e-39,5.943622956617353e-39,5.9416237564974e-39,5.939624556377449e-39,5.937625356257496e-39,5.935626156137545e-39,5.933626956017592e-39,5.931627755897641e-39,5.929628555777688e-39,5.927629355657737e-39,5.925630155537784e-39,5.923630955417833e-39,5.92163175529788e-39,5.919632555177929e-39,5.917633355057976e-39,5.915634154938025e-39,5.913634954818072e-39,5.911635754698121e-39,5.909636554578168e-39,5.907637354458217e-39,5.905638154338264e-39,5.903638954218313e-39,5.90163975409836e-39,5.899640553978409e-39,5.897641353858456e-39,5.895642153738505e-39,5.893642953618552e-39,5.891643753498601e-39,5.889644553378648e-39,5.887645353258697e-39,5.885646153138744e-39,5.883646953018793e-39,5.88164775289884e-39,5.879648552778888e-39,5.877649352658936e-39,5.875650152538984e-39,5.873650952419032e-39,5.87165175229908e-39,5.869652552179128e-39,5.867653352059176e-39,5.865654151939224e-39,5.863654951819272e-39,5.86165575169932e-39,5.859656551579368e-39,5.857657351459416e-39,5.855658151339464e-39,5.853658951219512e-39,5.85165975109956e-39,5.849660550979608e-39,5.847661350859656e-39,5.845662150739704e-39,5.843662950619752e-39,5.8416637504998e-39,5.839664550379848e-39,5.837665350259896e-39,5.835666150139944e-39,5.833666950019992e-39,5.83166774990004e-39,5.8296685497800874e-39,5.8276693496601354e-39,5.8256701495401834e-39,5.8236709494202314e-39,5.8216717493002794e-39,5.8196725491803274e-39,5.8176733490603754e-39,5.8156741489404234e-39,5.8136749488204714e-39,5.8116757487005194e-39,5.8096765485805674e-39,5.8076773484606154e-39,5.8056781483406633e-39,5.8036789482207113e-39,5.8016797481007593e-39,5.799680547980807e-39,5.797681347860855e-39,5.795682147740903e-39,5.793682947620951e-39,5.791683747500999e-39,5.789684547381047e-39,5.787685347261095e-39,5.785686147141143e-39,5.783686947021191e-39,5.781687746901239e-39,5.779688546781287e-39,5.777689346661335e-39,5.775690146541383e-39,5.773690946421431e-39,5.771691746301479e-39,5.769692546181527e-39,5.767693346061575e-39,5.765694145941623e-39,5.763694945821671e-39,5.761695745701719e-39,5.759696545581767e-39,5.757697345461815e-39,5.755698145341863e-39,5.753698945221911e-39,5.751699745101959e-39,5.749700544982007e-39,5.747701344862055e-39,5.745702144742103e-39,5.743702944622151e-39,5.741703744502199e-39,5.739704544382247e-39,5.737705344262295e-39,5.735706144142343e-39,5.733706944022391e-39,5.731707743902439e-39,5.729708543782487e-39,5.727709343662535e-39,5.7257101435425824e-39,5.7237109434226304e-39,5.7217117433026784e-39,5.7197125431827264e-39,5.7177133430627744e-39,5.7157141429428224e-39,5.7137149428228704e-39,5.7117157427029184e-39,5.7097165425829664e-39,5.7077173424630144e-39,5.7057181423430624e-39,5.7037189422231104e-39,5.7017197421031584e-39,5.6997205419832064e-39,5.6977213418632543e-39,5.6957221417433023e-39,5.6937229416233503e-39,5.691723741503398e-39,5.689724541383446e-39,5.687725341263494e-39,5.685726141143542e-39,5.68372694102359e-39,5.681727740903638e-39,5.679728540783686e-39,5.677729340663734e-39,5.675730140543782e-39,5.67373094042383e-39,5.671731740303878e-39,5.669732540183926e-39,5.667733340063974e-39,5.665734139944022e-39,5.66373493982407e-39,5.661735739704118e-39,5.659736539584166e-39,5.657737339464214e-39,5.655738139344262e-39,5.65373893922431e-39,5.651739739104358e-39,5.649740538984406e-39,5.647741338864454e-39,5.645742138744502e-39,5.64374293862455e-39,5.641743738504598e-39,5.639744538384646e-39,5.637745338264694e-39,5.635746138144742e-39,5.63374693802479e-39,5.631747737904838e-39,5.629748537784886e-39,5.627749337664934e-39,5.625750137544982e-39,5.6237509374250295e-39,5.6217517373050774e-39,5.6197525371851254e-39,5.6177533370651734e-39,5.6157541369452214e-39,5.6137549368252694e-39,5.6117557367053174e-39,5.6097565365853654e-39,5.6077573364654134e-39,5.6057581363454614e-39,5.6037589362255094e-39,5.6017597361055574e-39,5.5997605359856054e-39,5.5977613358656534e-39,5.5957621357457014e-39,5.5937629356257494e-39,5.5917637355057973e-39,5.5897645353858453e-39,5.5877653352658933e-39,5.5857661351459413e-39,5.583766935025989e-39,5.581767734906037e-39,5.579768534786085e-39,5.577769334666133e-39,5.575770134546181e-39,5.573770934426229e-39,5.571771734306277e-39,5.569772534186325e-39,5.567773334066373e-39,5.565774133946421e-39,5.563774933826469e-39,5.561775733706517e-39,5.559776533586565e-39,5.557777333466613e-39,5.555778133346661e-39,5.553778933226709e-39,5.551779733106757e-39,5.549780532986805e-39,5.547781332866853e-39,5.545782132746901e-39,5.543782932626949e-39,5.541783732506997e-39,5.539784532387045e-39,5.537785332267093e-39,5.535786132147141e-39,5.533786932027189e-39,5.531787731907237e-39,5.529788531787285e-39,5.527789331667333e-39,5.525790131547381e-39,5.523790931427429e-39,5.521791731307477e-39,5.5197925311875245e-39,5.5177933310675725e-39,5.5157941309476205e-39,5.5137949308276684e-39,5.5117957307077164e-39,5.5097965305877644e-39,5.5077973304678124e-39,5.5057981303478604e-39,5.5037989302279084e-39,5.5017997301079564e-39,5.4998005299880044e-39,5.4978013298680524e-39,5.4958021297481004e-39,5.4938029296281484e-39,5.4918037295081964e-39,5.4898045293882444e-39,5.4878053292682924e-39,5.4858061291483404e-39,5.4838069290283883e-39,5.4818077289084363e-39,5.4798085287884843e-39,5.4778093286685323e-39,5.47581012854858e-39,5.473810928428628e-39,5.471811728308676e-39,5.469812528188724e-39,5.467813328068772e-39,5.46581412794882e-39,5.463814927828868e-39,5.461815727708916e-39,5.459816527588964e-39,5.457817327469012e-39,5.45581812734906e-39,5.453818927229108e-39,5.451819727109156e-39,5.449820526989204e-39,5.447821326869252e-39,5.4458221267493e-39,5.443822926629348e-39,5.441823726509396e-39,5.439824526389444e-39,5.437825326269492e-39,5.43582612614954e-39,5.433826926029588e-39,5.431827725909636e-39,5.429828525789684e-39,5.427829325669732e-39,5.42583012554978e-39,5.423830925429828e-39,5.421831725309876e-39,5.419832525189924e-39,5.4178333250699715e-39,5.4158341249500195e-39,5.4138349248300675e-39,5.4118357247101155e-39,5.4098365245901635e-39,5.4078373244702115e-39,5.4058381243502594e-39,5.4038389242303074e-39,5.4018397241103554e-39,5.3998405239904034e-39,5.3978413238704514e-39,5.3958421237504994e-39,5.3938429236305474e-39,5.3918437235105954e-39,5.3898445233906434e-39,5.3878453232706914e-39,5.3858461231507394e-39,5.3838469230307874e-39,5.3818477229108354e-39,5.3798485227908834e-39,5.3778493226709314e-39,5.3758501225509793e-39,5.3738509224310273e-39,5.3718517223110753e-39,5.3698525221911233e-39,5.367853322071171e-39,5.365854121951219e-39,5.363854921831267e-39,5.361855721711315e-39,5.359856521591363e-39,5.357857321471411e-39,5.355858121351459e-39,5.353858921231507e-39,5.351859721111555e-39,5.349860520991603e-39,5.347861320871651e-39,5.345862120751699e-39,5.343862920631747e-39,5.341863720511795e-39,5.339864520391843e-39,5.337865320271891e-39,5.335866120151939e-39,5.333866920031987e-39,5.331867719912035e-39,5.329868519792083e-39,5.327869319672131e-39,5.325870119552179e-39,5.323870919432227e-39,5.321871719312275e-39,5.319872519192323e-39,5.317873319072371e-39,5.315874118952419e-39,5.3138749188324665e-39,5.3118757187125145e-39,5.3098765185925625e-39,5.3078773184726105e-39,5.3058781183526585e-39,5.3038789182327065e-39,5.3018797181127545e-39,5.2998805179928025e-39,5.2978813178728504e-39,5.2958821177528984e-39,5.2938829176329464e-39,5.2918837175129944e-39,5.2898845173930424e-39,5.2878853172730904e-39,5.2858861171531384e-39,5.2838869170331864e-39,5.2818877169132344e-39,5.2798885167932824e-39,5.2778893166733304e-39,5.2758901165533784e-39,5.2738909164334264e-39,5.2718917163134744e-39,5.2698925161935224e-39,5.2678933160735703e-39,5.2658941159536183e-39,5.2638949158336663e-39,5.2618957157137143e-39,5.259896515593762e-39,5.25789731547381e-39,5.255898115353858e-39,5.253898915233906e-39,5.251899715113954e-39,5.249900514994002e-39,5.24790131487405e-39,5.245902114754098e-39,5.243902914634146e-39,5.241903714514194e-39,5.239904514394242e-39,5.23790531427429e-39,5.235906114154338e-39,5.233906914034386e-39,5.231907713914434e-39,5.229908513794482e-39,5.22790931367453e-39,5.225910113554578e-39,5.223910913434626e-39,5.221911713314674e-39,5.219912513194722e-39,5.21791331307477e-39,5.215914112954818e-39,5.213914912834866e-39,5.2119157127149135e-39,5.2099165125949615e-39,5.2079173124750095e-39,5.2059181123550575e-39,5.2039189122351055e-39,5.2019197121151535e-39,5.1999205119952015e-39,5.1979213118752495e-39,5.1959221117552975e-39,5.1939229116353455e-39,5.1919237115153935e-39,5.1899245113954414e-39,5.1879253112754894e-39,5.1859261111555374e-39,5.1839269110355854e-39,5.1819277109156334e-39,5.1799285107956814e-39,5.1779293106757294e-39,5.1759301105557774e-39,5.1739309104358254e-39,5.1719317103158734e-39,5.1699325101959214e-39,5.1679333100759694e-39,5.1659341099560174e-39,5.1639349098360654e-39,5.1619357097161134e-39,5.1599365095961613e-39,5.1579373094762093e-39,5.1559381093562573e-39,5.1539389092363053e-39,5.151939709116353e-39,5.149940508996401e-39,5.147941308876449e-39,5.145942108756497e-39,5.143942908636545e-39,5.141943708516593e-39,5.139944508396641e-39,5.137945308276689e-39,5.135946108156737e-39,5.133946908036785e-39,5.131947707916833e-39,5.129948507796881e-39,5.127949307676929e-39,5.125950107556977e-39,5.123950907437025e-39,5.121951707317073e-39,5.119952507197121e-39,5.117953307077169e-39,5.115954106957217e-39,5.113954906837265e-39,5.111955706717313e-39,5.109956506597361e-39,5.1079573064774085e-39,5.1059581063574565e-39,5.1039589062375045e-39,5.1019597061175525e-39,5.0999605059976005e-39,5.0979613058776485e-39,5.0959621057576965e-39,5.0939629056377445e-39,5.0919637055177925e-39,5.0899645053978405e-39,5.0879653052778885e-39,5.0859661051579365e-39,5.0839669050379845e-39,5.0819677049180324e-39,5.0799685047980804e-39,5.0779693046781284e-39,5.0759701045581764e-39,5.0739709044382244e-39,5.0719717043182724e-39,5.0699725041983204e-39,5.0679733040783684e-39,5.0659741039584164e-39,5.0639749038384644e-39,5.0619757037185124e-39,5.0599765035985604e-39,5.0579773034786084e-39,5.0559781033586564e-39,5.0539789032387044e-39,5.0519797031187523e-39,5.0499805029988003e-39,5.0479813028788483e-39,5.0459821027588963e-39,5.043982902638944e-39,5.041983702518992e-39,5.03998450239904e-39,5.037985302279088e-39,5.035986102159136e-39,5.033986902039184e-39,5.031987701919232e-39,5.02998850179928e-39,5.027989301679328e-39,5.025990101559376e-39,5.023990901439424e-39,5.021991701319472e-39,5.01999250119952e-39,5.017993301079568e-39,5.015994100959616e-39,5.013994900839664e-39,5.011995700719712e-39,5.00999650059976e-39,5.007997300479808e-39,5.0059981003598555e-39,5.0039989002399035e-39,5.0019997001199515e-39,5.0000004999999995e-39,4.9980012998800475e-39,4.9960020997600955e-39,4.9940028996401435e-39,4.9920036995201915e-39,4.9900044994002395e-39,4.9880052992802875e-39,4.9860060991603355e-39,4.9840068990403835e-39,4.9820076989204315e-39,4.9800084988004795e-39,4.9780092986805275e-39,4.9760100985605754e-39,4.9740108984406234e-39,4.9720116983206714e-39,4.9700124982007194e-39,4.9680132980807674e-39,4.9660140979608154e-39,4.9640148978408634e-39,4.9620156977209114e-39,4.9600164976009594e-39,4.9580172974810074e-39,4.9560180973610554e-39,4.9540188972411034e-39,4.9520196971211514e-39,4.9500204970011994e-39,4.9480212968812474e-39,4.9460220967612954e-39,4.9440228966413433e-39,4.9420236965213913e-39,4.9400244964014393e-39,4.9380252962814873e-39,4.936026096161535e-39,4.934026896041583e-39,4.932027695921631e-39,4.930028495801679e-39,4.928029295681727e-39,4.926030095561775e-39,4.924030895441823e-39,4.922031695321871e-39,4.920032495201919e-39,4.918033295081967e-39,4.916034094962015e-39,4.914034894842063e-39,4.912035694722111e-39,4.910036494602159e-39,4.908037294482207e-39,4.906038094362255e-39,4.904038894242303e-39,4.9020396941223506e-39,4.9000404940023986e-39,4.8980412938824465e-39,4.8960420937624945e-39,4.8940428936425425e-39,4.8920436935225905e-39,4.8900444934026385e-39,4.8880452932826865e-39,4.8860460931627345e-39,4.8840468930427825e-39,4.8820476929228305e-39,4.8800484928028785e-39,4.8780492926829265e-39,4.8760500925629745e-39,4.8740508924430225e-39,4.8720516923230705e-39,4.8700524922031185e-39,4.8680532920831664e-39,4.8660540919632144e-39,4.8640548918432624e-39,4.8620556917233104e-39,4.8600564916033584e-39,4.8580572914834064e-39,4.8560580913634544e-39,4.8540588912435024e-39,4.8520596911235504e-39,4.8500604910035984e-39,4.8480612908836464e-39,4.8460620907636944e-39,4.8440628906437424e-39,4.8420636905237904e-39,4.8400644904038384e-39,4.8380652902838864e-39,4.8360660901639343e-39,4.8340668900439823e-39,4.8320676899240303e-39,4.8300684898040783e-39,4.828069289684126e-39,4.826070089564174e-39,4.824070889444222e-39,4.82207168932427e-39,4.820072489204318e-39,4.818073289084366e-39,4.816074088964414e-39,4.814074888844462e-39,4.81207568872451e-39,4.810076488604558e-39,4.808077288484606e-39,4.806078088364654e-39,4.804078888244702e-39,4.80207968812475e-39,4.8000804880047976e-39,4.7980812878848456e-39,4.7960820877648936e-39,4.7940828876449416e-39,4.7920836875249896e-39,4.7900844874050375e-39,4.7880852872850855e-39,4.7860860871651335e-39,4.7840868870451815e-39,4.7820876869252295e-39,4.7800884868052775e-39,4.7780892866853255e-39,4.7760900865653735e-39,4.7740908864454215e-39,4.7720916863254695e-39,4.7700924862055175e-39,4.7680932860855655e-39,4.7660940859656135e-39,4.7640948858456615e-39,4.7620956857257095e-39,4.7600964856057574e-39,4.7580972854858054e-39,4.7560980853658534e-39,4.7540988852459014e-39,4.7520996851259494e-39,4.7501004850059974e-39,4.7481012848860454e-39,4.7461020847660934e-39,4.7441028846461414e-39,4.7421036845261894e-39,4.7401044844062374e-39,4.7381052842862854e-39,4.7361060841663334e-39,4.7341068840463814e-39,4.7321076839264294e-39,4.7301084838064774e-39,4.7281092836865253e-39,4.7261100835665733e-39,4.7241108834466213e-39,4.722111683326669e-39,4.720112483206717e-39,4.718113283086765e-39,4.716114082966813e-39,4.714114882846861e-39,4.712115682726909e-39,4.710116482606957e-39,4.708117282487005e-39,4.706118082367053e-39,4.704118882247101e-39,4.702119682127149e-39,4.700120482007197e-39,4.698121281887245e-39,4.6961220817672926e-39,4.6941228816473406e-39,4.6921236815273886e-39,4.6901244814074366e-39,4.6881252812874846e-39,4.6861260811675326e-39,4.6841268810475806e-39,4.6821276809276285e-39,4.6801284808076765e-39,4.6781292806877245e-39,4.6761300805677725e-39,4.6741308804478205e-39,4.6721316803278685e-39,4.6701324802079165e-39,4.6681332800879645e-39,4.6661340799680125e-39,4.6641348798480605e-39,4.6621356797281085e-39,4.6601364796081565e-39,4.6581372794882045e-39,4.6561380793682525e-39,4.6541388792483005e-39,4.6521396791283484e-39,4.6501404790083964e-39,4.6481412788884444e-39,4.6461420787684924e-39,4.6441428786485404e-39,4.6421436785285884e-39,4.6401444784086364e-39,4.6381452782886844e-39,4.6361460781687324e-39,4.6341468780487804e-39,4.6321476779288284e-39,4.6301484778088764e-39,4.6281492776889244e-39,4.6261500775689724e-39,4.6241508774490204e-39,4.6221516773290684e-39,4.6201524772091163e-39,4.6181532770891643e-39,4.6161540769692123e-39,4.61415487684926e-39,4.612155676729308e-39,4.610156476609356e-39,4.608157276489404e-39,4.606158076369452e-39,4.6041588762495e-39,4.602159676129548e-39,4.600160476009596e-39,4.598161275889644e-39,4.596162075769692e-39,4.5941628756497396e-39,4.5921636755297876e-39,4.5901644754098356e-39,4.5881652752898836e-39,4.5861660751699316e-39,4.5841668750499796e-39,4.5821676749300276e-39,4.5801684748100756e-39,4.5781692746901236e-39,4.5761700745701716e-39,4.5741708744502195e-39,4.5721716743302675e-39,4.5701724742103155e-39,4.5681732740903635e-39,4.5661740739704115e-39,4.5641748738504595e-39,4.5621756737305075e-39,4.5601764736105555e-39,4.5581772734906035e-39,4.5561780733706515e-39,4.5541788732506995e-39,4.5521796731307475e-39,4.5501804730107955e-39,4.5481812728908435e-39,4.5461820727708915e-39,4.5441828726509394e-39,4.5421836725309874e-39,4.5401844724110354e-39,4.5381852722910834e-39,4.5361860721711314e-39,4.5341868720511794e-39,4.5321876719312274e-39,4.5301884718112754e-39,4.5281892716913234e-39,4.5261900715713714e-39,4.5241908714514194e-39,4.5221916713314674e-39,4.5201924712115154e-39,4.5181932710915634e-39,4.5161940709716114e-39,4.5141948708516594e-39,4.5121956707317073e-39,4.5101964706117553e-39,4.5081972704918033e-39,4.506198070371851e-39,4.504198870251899e-39,4.502199670131947e-39,4.500200470011995e-39,4.498201269892043e-39,4.496202069772091e-39,4.494202869652139e-39,4.492203669532187e-39,4.4902044694122346e-39,4.4882052692922826e-39,4.4862060691723306e-39,4.4842068690523786e-39,4.4822076689324266e-39,4.4802084688124746e-39,4.4782092686925226e-39,4.4762100685725706e-39,4.4742108684526186e-39,4.4722116683326666e-39,4.4702124682127146e-39,4.4682132680927626e-39,4.4662140679728105e-39,4.4642148678528585e-39,4.4622156677329065e-39,4.4602164676129545e-39,4.4582172674930025e-39,4.4562180673730505e-39,4.4542188672530985e-39,4.4522196671331465e-39,4.4502204670131945e-39,4.4482212668932425e-39,4.4462220667732905e-39,4.4442228666533385e-39,4.4422236665333865e-39,4.4402244664134345e-39,4.4382252662934825e-39,4.4362260661735304e-39,4.4342268660535784e-39,4.4322276659336264e-39,4.4302284658136744e-39,4.4282292656937224e-39,4.4262300655737704e-39,4.4242308654538184e-39,4.4222316653338664e-39,4.4202324652139144e-39,4.4182332650939624e-39,4.4162340649740104e-39,4.4142348648540584e-39,4.4122356647341064e-39,4.4102364646141544e-39,4.4082372644942024e-39,4.4062380643742504e-39,4.4042388642542983e-39,4.4022396641343463e-39,4.4002404640143943e-39,4.398241263894442e-39,4.39624206377449e-39,4.394242863654538e-39,4.392243663534586e-39,4.390244463414634e-39,4.3882452632946816e-39,4.3862460631747296e-39,4.3842468630547776e-39,4.3822476629348256e-39,4.3802484628148736e-39,4.3782492626949216e-39,4.3762500625749696e-39,4.3742508624550176e-39,4.3722516623350656e-39,4.3702524622151136e-39,4.3682532620951616e-39,4.3662540619752096e-39,4.3642548618552576e-39,4.3622556617353056e-39,4.3602564616153535e-39,4.3582572614954015e-39,4.3562580613754495e-39,4.3542588612554975e-39,4.3522596611355455e-39,4.3502604610155935e-39,4.3482612608956415e-39,4.3462620607756895e-39,4.3442628606557375e-39,4.3422636605357855e-39,4.3402644604158335e-39,4.3382652602958815e-39,4.3362660601759295e-39,4.3342668600559775e-39,4.3322676599360255e-39,4.3302684598160735e-39,4.3282692596961214e-39,4.3262700595761694e-39,4.3242708594562174e-39,4.3222716593362654e-39,4.3202724592163134e-39,4.3182732590963614e-39,4.3162740589764094e-39,4.3142748588564574e-39,4.3122756587365054e-39,4.3102764586165534e-39,4.3082772584966014e-39,4.3062780583766494e-39,4.3042788582566974e-39,4.3022796581367454e-39,4.3002804580167934e-39,4.2982812578968413e-39,4.2962820577768893e-39,4.2942828576569373e-39,4.2922836575369853e-39,4.290284457417033e-39,4.288285257297081e-39,4.286286057177129e-39,4.2842868570571767e-39,4.2822876569372246e-39,4.2802884568172726e-39,4.2782892566973206e-39,4.2762900565773686e-39,4.2742908564574166e-39,4.2722916563374646e-39,4.2702924562175126e-39,4.2682932560975606e-39,4.2662940559776086e-39,4.2642948558576566e-39,4.2622956557377046e-39,4.2602964556177526e-39,4.2582972554978006e-39,4.2562980553778486e-39,4.2542988552578966e-39,4.2522996551379445e-39,4.2503004550179925e-39,4.2483012548980405e-39,4.2463020547780885e-39,4.2443028546581365e-39,4.2423036545381845e-39,4.2403044544182325e-39,4.2383052542982805e-39,4.2363060541783285e-39,4.2343068540583765e-39,4.2323076539384245e-39,4.2303084538184725e-39,4.2283092536985205e-39,4.2263100535785685e-39,4.2243108534586165e-39,4.2223116533386645e-39,4.2203124532187124e-39,4.2183132530987604e-39,4.2163140529788084e-39,4.2143148528588564e-39,4.2123156527389044e-39,4.2103164526189524e-39,4.2083172524990004e-39,4.2063180523790484e-39,4.2043188522590964e-39,4.2023196521391444e-39,4.2003204520191924e-39,4.1983212518992404e-39,4.1963220517792884e-39,4.1943228516593364e-39,4.1923236515393844e-39,4.1903244514194323e-39,4.1883252512994803e-39,4.1863260511795283e-39,4.1843268510595763e-39,4.1823276509396237e-39,4.1803284508196717e-39,4.1783292506997197e-39,4.1763300505797677e-39,4.1743308504598156e-39,4.1723316503398636e-39,4.1703324502199116e-39,4.1683332500999596e-39,4.1663340499800076e-39,4.1643348498600556e-39,4.1623356497401036e-39,4.1603364496201516e-39,4.1583372495001996e-39,4.1563380493802476e-39,4.1543388492602956e-39,4.1523396491403436e-39,4.1503404490203916e-39,4.1483412489004396e-39,4.1463420487804876e-39,4.1443428486605355e-39,4.1423436485405835e-39,4.1403444484206315e-39,4.1383452483006795e-39,4.1363460481807275e-39,4.1343468480607755e-39,4.1323476479408235e-39,4.1303484478208715e-39,4.1283492477009195e-39,4.1263500475809675e-39,4.1243508474610155e-39,4.1223516473410635e-39,4.1203524472211115e-39,4.1183532471011595e-39,4.1163540469812075e-39,4.1143548468612555e-39,4.1123556467413034e-39,4.1103564466213514e-39,4.1083572465013994e-39,4.1063580463814474e-39,4.1043588462614954e-39,4.1023596461415434e-39,4.1003604460215914e-39,4.0983612459016394e-39,4.0963620457816874e-39,4.0943628456617354e-39,4.0923636455417834e-39,4.0903644454218314e-39,4.0883652453018794e-39,4.0863660451819274e-39,4.0843668450619754e-39,4.0823676449420233e-39,4.0803684448220713e-39,4.078369244702119e-39,4.076370044582167e-39,4.0743708444622147e-39,4.0723716443422627e-39,4.0703724442223107e-39,4.0683732441023587e-39,4.0663740439824066e-39,4.0643748438624546e-39,4.0623756437425026e-39,4.0603764436225506e-39,4.0583772435025986e-39,4.0563780433826466e-39,4.0543788432626946e-39,4.0523796431427426e-39,4.0503804430227906e-39,4.0483812429028386e-39,4.0463820427828866e-39,4.0443828426629346e-39,4.0423836425429826e-39,4.0403844424230306e-39,4.0383852423030786e-39,4.0363860421831265e-39,4.0343868420631745e-39,4.0323876419432225e-39,4.0303884418232705e-39,4.0283892417033185e-39,4.0263900415833665e-39,4.0243908414634145e-39,4.0223916413434625e-39,4.0203924412235105e-39,4.0183932411035585e-39,4.0163940409836065e-39,4.0143948408636545e-39,4.0123956407437025e-39,4.0103964406237505e-39,4.0083972405037985e-39,4.0063980403838465e-39,4.0043988402638944e-39,4.0023996401439424e-39,4.0004004400239904e-39,3.9984012399040384e-39,3.9964020397840864e-39,3.9944028396641344e-39,3.9924036395441824e-39,3.9904044394242304e-39,3.9884052393042784e-39,3.9864060391843264e-39,3.9844068390643744e-39,3.9824076389444224e-39,3.9804084388244704e-39,3.9784092387045184e-39,3.976410038584566e-39,3.974410838464614e-39,3.972411638344662e-39,3.97041243822471e-39,3.968413238104758e-39,3.9664140379848057e-39,3.9644148378648537e-39,3.9624156377449017e-39,3.9604164376249497e-39,3.9584172375049976e-39,3.9564180373850456e-39,3.9544188372650936e-39,3.9524196371451416e-39,3.9504204370251896e-39,3.9484212369052376e-39,3.9464220367852856e-39,3.9444228366653336e-39,3.9424236365453816e-39,3.9404244364254296e-39,3.9384252363054776e-39,3.9364260361855256e-39,3.9344268360655736e-39,3.9324276359456216e-39,3.9304284358256696e-39,3.9284292357057175e-39,3.9264300355857655e-39,3.9244308354658135e-39,3.9224316353458615e-39,3.9204324352259095e-39,3.9184332351059575e-39,3.9164340349860055e-39,3.9144348348660535e-39,3.9124356347461015e-39,3.9104364346261495e-39,3.9084372345061975e-39,3.9064380343862455e-39,3.9044388342662935e-39,3.9024396341463415e-39,3.9004404340263895e-39,3.8984412339064375e-39,3.8964420337864854e-39,3.8944428336665334e-39,3.8924436335465814e-39,3.8904444334266294e-39,3.8884452333066774e-39,3.8864460331867254e-39,3.8844468330667734e-39,3.8824476329468214e-39,3.8804484328268694e-39,3.8784492327069174e-39,3.8764500325869654e-39,3.8744508324670134e-39,3.872451632347061e-39,3.870452432227109e-39,3.868453232107157e-39,3.866454031987205e-39,3.864454831867253e-39,3.862455631747301e-39,3.860456431627349e-39,3.8584572315073967e-39,3.8564580313874447e-39,3.8544588312674927e-39,3.8524596311475407e-39,3.8504604310275886e-39,3.8484612309076366e-39,3.8464620307876846e-39,3.8444628306677326e-39,3.8424636305477806e-39,3.8404644304278286e-39,3.8384652303078766e-39,3.8364660301879246e-39,3.8344668300679726e-39,3.8324676299480206e-39,3.8304684298280686e-39,3.8284692297081166e-39,3.8264700295881646e-39,3.8244708294682126e-39,3.8224716293482606e-39,3.8204724292283085e-39,3.8184732291083565e-39,3.8164740289884045e-39,3.8144748288684525e-39,3.8124756287485005e-39,3.8104764286285485e-39,3.8084772285085965e-39,3.8064780283886445e-39,3.8044788282686925e-39,3.8024796281487405e-39,3.8004804280287885e-39,3.7984812279088365e-39,3.7964820277888845e-39,3.7944828276689325e-39,3.7924836275489805e-39,3.7904844274290285e-39,3.7884852273090764e-39,3.7864860271891244e-39,3.7844868270691724e-39,3.7824876269492204e-39,3.7804884268292684e-39,3.7784892267093164e-39,3.7764900265893644e-39,3.7744908264694124e-39,3.7724916263494604e-39,3.770492426229508e-39,3.768493226109556e-39,3.766494025989604e-39,3.764494825869652e-39,3.7624956257497e-39,3.760496425629748e-39,3.758497225509796e-39,3.756498025389844e-39,3.754498825269892e-39,3.75249962514994e-39,3.7505004250299877e-39,3.7485012249100357e-39,3.7465020247900837e-39,3.7445028246701316e-39,3.7425036245501796e-39,3.7405044244302276e-39,3.7385052243102756e-39,3.7365060241903236e-39,3.7345068240703716e-39,3.7325076239504196e-39,3.7305084238304676e-39,3.7285092237105156e-39,3.7265100235905636e-39,3.7245108234706116e-39,3.7225116233506596e-39,3.7205124232307076e-39,3.7185132231107556e-39,3.7165140229908036e-39,3.7145148228708516e-39,3.7125156227508995e-39,3.7105164226309475e-39,3.7085172225109955e-39,3.7065180223910435e-39,3.7045188222710915e-39,3.7025196221511395e-39,3.7005204220311875e-39,3.6985212219112355e-39,3.6965220217912835e-39,3.6945228216713315e-39,3.6925236215513795e-39,3.6905244214314275e-39,3.6885252213114755e-39,3.6865260211915235e-39,3.6845268210715715e-39,3.6825276209516194e-39,3.6805284208316674e-39,3.6785292207117154e-39,3.6765300205917634e-39,3.6745308204718114e-39,3.6725316203518594e-39,3.6705324202319074e-39,3.668533220111955e-39,3.666534019992003e-39,3.664534819872051e-39,3.662535619752099e-39,3.660536419632147e-39,3.658537219512195e-39,3.656538019392243e-39,3.654538819272291e-39,3.652539619152339e-39,3.650540419032387e-39,3.648541218912435e-39,3.646542018792483e-39,3.644542818672531e-39,3.6425436185525787e-39,3.6405444184326267e-39,3.6385452183126747e-39,3.6365460181927226e-39,3.6345468180727706e-39,3.6325476179528186e-39,3.6305484178328666e-39,3.6285492177129146e-39,3.6265500175929626e-39,3.6245508174730106e-39,3.6225516173530586e-39,3.6205524172331066e-39,3.6185532171131546e-39,3.6165540169932026e-39,3.6145548168732506e-39,3.6125556167532986e-39,3.6105564166333466e-39,3.6085572165133946e-39,3.6065580163934426e-39,3.6045588162734905e-39,3.6025596161535385e-39,3.6005604160335865e-39,3.5985612159136345e-39,3.5965620157936825e-39,3.5945628156737305e-39,3.5925636155537785e-39,3.5905644154338265e-39,3.5885652153138745e-39,3.5865660151939225e-39,3.5845668150739705e-39,3.5825676149540185e-39,3.5805684148340665e-39,3.5785692147141145e-39,3.5765700145941625e-39,3.5745708144742104e-39,3.5725716143542584e-39,3.5705724142343064e-39,3.5685732141143544e-39,3.5665740139944024e-39,3.56457481387445e-39,3.562575613754498e-39,3.560576413634546e-39,3.558577213514594e-39,3.556578013394642e-39,3.55457881327469e-39,3.552579613154738e-39,3.550580413034786e-39,3.548581212914834e-39,3.546582012794882e-39,3.54458281267493e-39,3.542583612554978e-39,3.540584412435026e-39,3.538585212315074e-39,3.536586012195122e-39,3.5345868120751697e-39,3.5325876119552177e-39,3.5305884118352657e-39,3.5285892117153136e-39,3.5265900115953616e-39,3.5245908114754096e-39,3.5225916113554576e-39,3.5205924112355056e-39,3.5185932111155536e-39,3.5165940109956016e-39,3.5145948108756496e-39,3.5125956107556976e-39,3.5105964106357456e-39,3.5085972105157936e-39,3.5065980103958416e-39,3.5045988102758896e-39,3.5025996101559376e-39,3.5006004100359856e-39,3.4986012099160336e-39,3.4966020097960815e-39,3.4946028096761295e-39,3.4926036095561775e-39,3.4906044094362255e-39,3.4886052093162735e-39,3.4866060091963215e-39,3.4846068090763695e-39,3.4826076089564175e-39,3.4806084088364655e-39,3.4786092087165135e-39,3.4766100085965615e-39,3.4746108084766095e-39,3.4726116083566575e-39,3.4706124082367055e-39,3.4686132081167535e-39,3.4666140079968014e-39,3.4646148078768494e-39,3.462615607756897e-39,3.460616407636945e-39,3.458617207516993e-39,3.456618007397041e-39,3.454618807277089e-39,3.452619607157137e-39,3.450620407037185e-39,3.448621206917233e-39,3.446622006797281e-39,3.444622806677329e-39,3.442623606557377e-39,3.440624406437425e-39,3.438625206317473e-39,3.436626006197521e-39,3.434626806077569e-39,3.432627605957617e-39,3.430628405837665e-39,3.4286292057177127e-39,3.4266300055977607e-39,3.4246308054778087e-39,3.4226316053578567e-39,3.4206324052379046e-39,3.4186332051179526e-39,3.4166340049980006e-39,3.4146348048780486e-39,3.4126356047580966e-39,3.4106364046381446e-39,3.4086372045181926e-39,3.4066380043982406e-39,3.4046388042782886e-39,3.4026396041583366e-39,3.4006404040383846e-39,3.3986412039184326e-39,3.3966420037984806e-39,3.3946428036785286e-39,3.3926436035585766e-39,3.3906444034386246e-39,3.3886452033186725e-39,3.3866460031987205e-39,3.3846468030787685e-39,3.3826476029588165e-39,3.3806484028388645e-39,3.3786492027189125e-39,3.3766500025989605e-39,3.3746508024790085e-39,3.3726516023590565e-39,3.3706524022391045e-39,3.3686532021191525e-39,3.3666540019992005e-39,3.3646548018792485e-39,3.3626556017592965e-39,3.3606564016393445e-39,3.358657201519392e-39,3.35665800139944e-39,3.354658801279488e-39,3.352659601159536e-39,3.350660401039584e-39,3.348661200919632e-39,3.34666200079968e-39,3.344662800679728e-39,3.342663600559776e-39,3.340664400439824e-39,3.338665200319872e-39,3.33666600019992e-39,3.334666800079968e-39,3.332667599960016e-39,3.330668399840064e-39,3.328669199720112e-39,3.32666999960016e-39,3.324670799480208e-39,3.322671599360256e-39,3.3206723992403037e-39,3.3186731991203517e-39,3.3166739990003997e-39,3.3146747988804477e-39,3.3126755987604956e-39,3.3106763986405436e-39,3.3086771985205916e-39,3.3066779984006396e-39,3.3046787982806876e-39,3.3026795981607356e-39,3.3006803980407836e-39,3.2986811979208316e-39,3.2966819978008796e-39,3.2946827976809276e-39,3.2926835975609756e-39,3.2906843974410236e-39,3.2886851973210716e-39,3.2866859972011196e-39,3.2846867970811676e-39,3.2826875969612156e-39,3.2806883968412635e-39,3.2786891967213115e-39,3.2766899966013595e-39,3.2746907964814075e-39,3.2726915963614555e-39,3.2706923962415035e-39,3.2686931961215515e-39,3.2666939960015995e-39,3.2646947958816475e-39,3.2626955957616955e-39,3.2606963956417435e-39,3.2586971955217915e-39,3.256697995401839e-39,3.254698795281887e-39,3.252699595161935e-39,3.250700395041983e-39,3.248701194922031e-39,3.246701994802079e-39,3.244702794682127e-39,3.242703594562175e-39,3.240704394442223e-39,3.238705194322271e-39,3.236705994202319e-39,3.234706794082367e-39,3.232707593962415e-39,3.230708393842463e-39,3.228709193722511e-39,3.226709993602559e-39,3.224710793482607e-39,3.222711593362655e-39,3.220712393242703e-39,3.218713193122751e-39,3.216713993002799e-39,3.214714792882847e-39,3.2127155927628947e-39,3.2107163926429427e-39,3.2087171925229907e-39,3.2067179924030387e-39,3.2047187922830866e-39,3.2027195921631346e-39,3.2007203920431826e-39,3.1987211919232306e-39,3.1967219918032786e-39,3.1947227916833266e-39,3.1927235915633746e-39,3.1907243914434226e-39,3.1887251913234706e-39,3.1867259912035186e-39,3.1847267910835666e-39,3.1827275909636146e-39,3.1807283908436626e-39,3.1787291907237106e-39,3.1767299906037586e-39,3.1747307904838066e-39,3.1727315903638545e-39,3.1707323902439025e-39,3.1687331901239505e-39,3.1667339900039985e-39,3.1647347898840465e-39,3.1627355897640945e-39,3.1607363896441425e-39,3.1587371895241905e-39,3.1567379894042385e-39,3.1547387892842865e-39,3.152739589164334e-39,3.150740389044382e-39,3.14874118892443e-39,3.146741988804478e-39,3.144742788684526e-39,3.142743588564574e-39,3.140744388444622e-39,3.13874518832467e-39,3.136745988204718e-39,3.134746788084766e-39,3.132747587964814e-39,3.130748387844862e-39,3.12874918772491e-39,3.126749987604958e-39,3.124750787485006e-39,3.122751587365054e-39,3.120752387245102e-39,3.11875318712515e-39,3.116753987005198e-39,3.114754786885246e-39,3.112755586765294e-39,3.110756386645342e-39,3.10875718652539e-39,3.106757986405438e-39,3.1047587862854857e-39,3.1027595861655337e-39,3.1007603860455817e-39,3.0987611859256297e-39,3.0967619858056776e-39,3.0947627856857256e-39,3.0927635855657736e-39,3.0907643854458216e-39,3.0887651853258696e-39,3.0867659852059176e-39,3.0847667850859656e-39,3.0827675849660136e-39,3.0807683848460616e-39,3.0787691847261096e-39,3.0767699846061576e-39,3.0747707844862056e-39,3.0727715843662536e-39,3.0707723842463016e-39,3.0687731841263496e-39,3.0667739840063975e-39,3.0647747838864455e-39,3.0627755837664935e-39,3.0607763836465415e-39,3.0587771835265895e-39,3.0567779834066375e-39,3.0547787832866855e-39,3.0527795831667335e-39,3.050780383046781e-39,3.048781182926829e-39,3.046781982806877e-39,3.044782782686925e-39,3.042783582566973e-39,3.040784382447021e-39,3.038785182327069e-39,3.036785982207117e-39,3.034786782087165e-39,3.032787581967213e-39,3.030788381847261e-39,3.028789181727309e-39,3.026789981607357e-39,3.024790781487405e-39,3.022791581367453e-39,3.020792381247501e-39,3.018793181127549e-39,3.016793981007597e-39,3.014794780887645e-39,3.012795580767693e-39,3.010796380647741e-39,3.008797180527789e-39,3.006797980407837e-39,3.004798780287885e-39,3.002799580167933e-39,3.000800380047981e-39,2.998801179928029e-39,2.9968019798080767e-39,2.9948027796881247e-39,2.9928035795681727e-39,2.9908043794482207e-39,2.9888051793282686e-39,2.9868059792083166e-39,2.9848067790883646e-39,2.9828075789684126e-39,2.9808083788484606e-39,2.9788091787285086e-39,2.9768099786085566e-39,2.9748107784886046e-39,2.9728115783686526e-39,2.9708123782487006e-39,2.9688131781287486e-39,2.9668139780087966e-39,2.9648147778888446e-39,2.9628155777688926e-39,2.9608163776489406e-39,2.9588171775289885e-39,2.9568179774090365e-39,2.9548187772890845e-39,2.9528195771691325e-39,2.9508203770491805e-39,2.9488211769292285e-39,2.946821976809276e-39,2.944822776689324e-39,2.942823576569372e-39,2.94082437644942e-39,2.938825176329468e-39,2.936825976209516e-39,2.934826776089564e-39,2.932827575969612e-39,2.93082837584966e-39,2.928829175729708e-39,2.926829975609756e-39,2.924830775489804e-39,2.922831575369852e-39,2.9208323752498998e-39,2.9188331751299478e-39,2.9168339750099958e-39,2.9148347748900438e-39,2.9128355747700917e-39,2.9108363746501397e-39,2.9088371745301877e-39,2.9068379744102357e-39,2.9048387742902837e-39,2.9028395741703317e-39,2.9008403740503797e-39,2.8988411739304277e-39,2.8968419738104757e-39,2.8948427736905237e-39,2.8928435735705717e-39,2.8908443734506197e-39,2.8888451733306677e-39,2.8868459732107157e-39,2.8848467730907637e-39,2.8828475729708117e-39,2.8808483728508596e-39,2.8788491727309076e-39,2.8768499726109556e-39,2.8748507724910036e-39,2.8728515723710516e-39,2.8708523722510996e-39,2.8688531721311473e-39,2.8668539720111953e-39,2.8648547718912433e-39,2.8628555717712913e-39,2.8608563716513393e-39,2.8588571715313872e-39,2.8568579714114352e-39,2.8548587712914832e-39,2.8528595711715312e-39,2.8508603710515792e-39,2.8488611709316272e-39,2.8468619708116752e-39,2.8448627706917232e-39,2.8428635705717712e-39,2.8408643704518192e-39,2.8388651703318672e-39,2.8368659702119152e-39,2.8348667700919632e-39,2.8328675699720112e-39,2.830868369852059e-39,2.828869169732107e-39,2.826869969612155e-39,2.824870769492203e-39,2.822871569372251e-39,2.820872369252299e-39,2.8188731691323468e-39,2.8168739690123948e-39,2.8148747688924428e-39,2.8128755687724908e-39,2.8108763686525388e-39,2.8088771685325868e-39,2.8068779684126348e-39,2.8048787682926827e-39,2.8028795681727307e-39,2.8008803680527787e-39,2.7988811679328267e-39,2.7968819678128747e-39,2.7948827676929227e-39,2.7928835675729707e-39,2.7908843674530187e-39,2.7888851673330667e-39,2.7868859672131147e-39,2.7848867670931627e-39,2.7828875669732107e-39,2.7808883668532587e-39,2.7788891667333067e-39,2.7768899666133547e-39,2.7748907664934027e-39,2.7728915663734506e-39,2.7708923662534986e-39,2.7688931661335466e-39,2.7668939660135943e-39,2.7648947658936423e-39,2.7628955657736903e-39,2.7608963656537383e-39,2.7588971655337863e-39,2.7568979654138343e-39,2.7548987652938823e-39,2.7528995651739303e-39,2.7509003650539782e-39,2.7489011649340262e-39,2.7469019648140742e-39,2.7449027646941222e-39,2.7429035645741702e-39,2.7409043644542182e-39,2.7389051643342662e-39,2.7369059642143142e-39,2.7349067640943622e-39,2.7329075639744102e-39,2.7309083638544582e-39,2.7289091637345062e-39,2.7269099636145542e-39,2.7249107634946022e-39,2.72291156337465e-39,2.720912363254698e-39,2.718913163134746e-39,2.716913963014794e-39,2.7149147628948418e-39,2.7129155627748898e-39,2.7109163626549378e-39,2.7089171625349858e-39,2.7069179624150338e-39,2.7049187622950818e-39,2.7029195621751298e-39,2.7009203620551778e-39,2.6989211619352258e-39,2.6969219618152737e-39,2.6949227616953217e-39,2.6929235615753697e-39,2.6909243614554177e-39,2.6889251613354657e-39,2.6869259612155137e-39,2.6849267610955617e-39,2.6829275609756097e-39,2.6809283608556577e-39,2.6789291607357057e-39,2.6769299606157537e-39,2.6749307604958017e-39,2.6729315603758497e-39,2.6709323602558977e-39,2.6689331601359457e-39,2.6669339600159937e-39,2.6649347598960416e-39,2.6629355597760893e-39,2.6609363596561373e-39,2.6589371595361853e-39,2.6569379594162333e-39,2.6549387592962813e-39,2.6529395591763293e-39,2.6509403590563773e-39,2.6489411589364253e-39,2.6469419588164733e-39,2.6449427586965213e-39,2.6429435585765692e-39,2.6409443584566172e-39,2.6389451583366652e-39,2.6369459582167132e-39,2.6349467580967612e-39,2.6329475579768092e-39,2.6309483578568572e-39,2.6289491577369052e-39,2.6269499576169532e-39,2.6249507574970012e-39,2.6229515573770492e-39,2.6209523572570972e-39,2.6189531571371452e-39,2.616953957017193e-39,2.614954756897241e-39,2.6129555567772888e-39,2.6109563566573368e-39,2.6089571565373848e-39,2.6069579564174328e-39,2.6049587562974808e-39,2.6029595561775288e-39,2.6009603560575768e-39,2.5989611559376248e-39,2.5969619558176728e-39,2.5949627556977208e-39,2.5929635555777688e-39,2.5909643554578168e-39,2.5889651553378647e-39,2.5869659552179127e-39,2.5849667550979607e-39,2.5829675549780087e-39,2.5809683548580567e-39,2.5789691547381047e-39,2.5769699546181527e-39,2.5749707544982007e-39,2.5729715543782487e-39,2.5709723542582967e-39,2.5689731541383447e-39,2.5669739540183927e-39,2.5649747538984407e-39,2.5629755537784887e-39,2.5609763536585363e-39,2.5589771535385843e-39,2.5569779534186323e-39,2.5549787532986803e-39,2.5529795531787283e-39,2.5509803530587763e-39,2.5489811529388243e-39,2.5469819528188723e-39,2.5449827526989203e-39,2.5429835525789683e-39,2.5409843524590163e-39,2.5389851523390643e-39,2.5369859522191123e-39,2.5349867520991602e-39,2.5329875519792082e-39,2.5309883518592562e-39,2.5289891517393042e-39,2.5269899516193522e-39,2.5249907514994002e-39,2.5229915513794482e-39,2.5209923512594962e-39,2.5189931511395442e-39,2.5169939510195922e-39,2.5149947508996402e-39,2.5129955507796882e-39,2.5109963506597362e-39,2.5089971505397838e-39,2.5069979504198318e-39,2.5049987502998798e-39,2.5029995501799278e-39,2.5010003500599758e-39,2.4990011499400238e-39,2.4970019498200718e-39,2.4950027497001198e-39,2.4930035495801678e-39,2.4910043494602158e-39,2.4890051493402638e-39,2.4870059492203118e-39,2.4850067491003598e-39,2.4830075489804078e-39,2.4810083488604557e-39,2.4790091487405037e-39,2.4770099486205517e-39,2.4750107485005997e-39,2.4730115483806477e-39,2.4710123482606957e-39,2.4690131481407437e-39,2.4670139480207917e-39,2.4650147479008397e-39,2.4630155477808877e-39,2.4610163476609357e-39,2.4590171475409837e-39,2.4570179474210313e-39,2.4550187473010793e-39,2.4530195471811273e-39,2.4510203470611753e-39,2.4490211469412233e-39,2.4470219468212713e-39,2.4450227467013193e-39,2.4430235465813673e-39,2.4410243464614153e-39,2.4390251463414633e-39,2.4370259462215113e-39,2.4350267461015593e-39,2.4330275459816073e-39,2.4310283458616553e-39,2.4290291457417033e-39,2.4270299456217512e-39,2.4250307455017992e-39,2.4230315453818472e-39,2.4210323452618952e-39,2.4190331451419432e-39,2.4170339450219912e-39,2.4150347449020392e-39,2.4130355447820872e-39,2.4110363446621352e-39,2.4090371445421832e-39,2.407037944422231e-39,2.405038744302279e-39,2.403039544182327e-39,2.4010403440623748e-39,2.3990411439424228e-39,2.3970419438224708e-39,2.3950427437025188e-39,2.3930435435825668e-39,2.3910443434626148e-39,2.3890451433426628e-39,2.3870459432227108e-39,2.3850467431027588e-39,2.3830475429828068e-39,2.3810483428628548e-39,2.3790491427429028e-39,2.3770499426229508e-39,2.3750507425029988e-39,2.3730515423830467e-39,2.3710523422630947e-39,2.3690531421431427e-39,2.3670539420231907e-39,2.3650547419032387e-39,2.3630555417832867e-39,2.3610563416633347e-39,2.3590571415433827e-39,2.3570579414234307e-39,2.3550587413034784e-39,2.3530595411835264e-39,2.3510603410635743e-39,2.3490611409436223e-39,2.3470619408236703e-39,2.3450627407037183e-39,2.3430635405837663e-39,2.3410643404638143e-39,2.3390651403438623e-39,2.3370659402239103e-39,2.3350667401039583e-39,2.3330675399840063e-39,2.3310683398640543e-39,2.3290691397441023e-39,2.3270699396241503e-39,2.3250707395041983e-39,2.3230715393842463e-39,2.3210723392642943e-39,2.3190731391443422e-39,2.3170739390243902e-39,2.3150747389044382e-39,2.3130755387844862e-39,2.3110763386645342e-39,2.3090771385445822e-39,2.3070779384246302e-39,2.3050787383046782e-39,2.303079538184726e-39,2.301080338064774e-39,2.299081137944822e-39,2.29708193782487e-39,2.295082737704918e-39,2.2930835375849658e-39,2.2910843374650138e-39,2.2890851373450618e-39,2.2870859372251098e-39,2.2850867371051578e-39,2.2830875369852058e-39,2.2810883368652538e-39,2.2790891367453018e-39,2.2770899366253498e-39,2.2750907365053978e-39,2.2730915363854458e-39,2.2710923362654938e-39,2.2690931361455418e-39,2.2670939360255898e-39,2.2650947359056377e-39,2.2630955357856857e-39,2.2610963356657337e-39,2.2590971355457817e-39,2.2570979354258297e-39,2.2550987353058777e-39,2.2530995351859257e-39,2.2511003350659734e-39,2.2491011349460214e-39,2.2471019348260694e-39,2.2451027347061174e-39,2.2431035345861653e-39,2.2411043344662133e-39,2.2391051343462613e-39,2.2371059342263093e-39,2.2351067341063573e-39,2.2331075339864053e-39,2.2311083338664533e-39,2.2291091337465013e-39,2.2271099336265493e-39,2.2251107335065973e-39,2.2231115333866453e-39,2.2211123332666933e-39,2.2191131331467413e-39,2.2171139330267893e-39,2.2151147329068373e-39,2.2131155327868853e-39,2.2111163326669332e-39,2.2091171325469812e-39,2.2071179324270292e-39,2.2051187323070772e-39,2.2031195321871252e-39,2.201120332067173e-39,2.199121131947221e-39,2.197121931827269e-39,2.195122731707317e-39,2.193123531587365e-39,2.191124331467413e-39,2.189125131347461e-39,2.187125931227509e-39,2.1851267311075568e-39,2.1831275309876048e-39,2.1811283308676528e-39,2.1791291307477008e-39,2.1771299306277488e-39,2.1751307305077968e-39,2.1731315303878448e-39,2.1711323302678928e-39,2.1691331301479408e-39,2.1671339300279888e-39,2.1651347299080368e-39,2.1631355297880848e-39,2.1611363296681328e-39,2.1591371295481808e-39,2.1571379294282287e-39,2.1551387293082767e-39,2.1531395291883247e-39,2.1511403290683727e-39,2.1491411289484204e-39,2.1471419288284684e-39,2.1451427287085164e-39,2.1431435285885644e-39,2.1411443284686124e-39,2.1391451283486604e-39,2.1371459282287084e-39,2.1351467281087563e-39,2.1331475279888043e-39,2.1311483278688523e-39,2.1291491277489003e-39,2.1271499276289483e-39,2.1251507275089963e-39,2.1231515273890443e-39,2.1211523272690923e-39,2.1191531271491403e-39,2.1171539270291883e-39,2.1151547269092363e-39,2.1131555267892843e-39,2.1111563266693323e-39,2.1091571265493803e-39,2.1071579264294283e-39,2.1051587263094763e-39,2.1031595261895242e-39,2.1011603260695722e-39,2.0991611259496202e-39,2.097161925829668e-39,2.095162725709716e-39,2.093163525589764e-39,2.091164325469812e-39,2.08916512534986e-39,2.087165925229908e-39,2.085166725109956e-39,2.083167524990004e-39,2.081168324870052e-39,2.0791691247501e-39,2.0771699246301478e-39,2.0751707245101958e-39,2.0731715243902438e-39,2.0711723242702918e-39,2.0691731241503398e-39,2.0671739240303878e-39,2.0651747239104358e-39,2.0631755237904838e-39,2.0611763236705318e-39,2.0591771235505798e-39,2.0571779234306278e-39,2.0551787233106758e-39,2.0531795231907238e-39,2.0511803230707718e-39,2.0491811229508197e-39,2.0471819228308677e-39,2.0451827227109154e-39,2.0431835225909634e-39,2.0411843224710114e-39,2.0391851223510594e-39,2.0371859222311074e-39,2.0351867221111554e-39,2.0331875219912034e-39,2.0311883218712514e-39,2.0291891217512994e-39,2.0271899216313473e-39,2.0251907215113953e-39,2.0231915213914433e-39,2.0211923212714913e-39,2.0191931211515393e-39,2.0171939210315873e-39,2.0151947209116353e-39,2.0131955207916833e-39,2.0111963206717313e-39,2.0091971205517793e-39,2.0071979204318273e-39,2.0051987203118753e-39,2.0031995201919233e-39,2.0012003200719713e-39,1.9992011199520193e-39,1.9972019198320673e-39,1.995202719712115e-39,1.993203519592163e-39,1.991204319472211e-39,1.989205119352259e-39,1.987205919232307e-39,1.985206719112355e-39,1.983207518992403e-39,1.981208318872451e-39,1.979209118752499e-39,1.977209918632547e-39,1.975210718512595e-39,1.973211518392643e-39,1.971212318272691e-39,1.9692131181527388e-39,1.9672139180327868e-39,1.9652147179128348e-39,1.9632155177928828e-39,1.9612163176729308e-39,1.9592171175529788e-39,1.9572179174330268e-39,1.9552187173130748e-39,1.9532195171931228e-39,1.9512203170731708e-39,1.9492211169532188e-39,1.9472219168332668e-39,1.9452227167133148e-39,1.9432235165933624e-39,1.9412243164734104e-39,1.9392251163534584e-39,1.9372259162335064e-39,1.9352267161135544e-39,1.9332275159936024e-39,1.9312283158736504e-39,1.9292291157536984e-39,1.9272299156337464e-39,1.9252307155137944e-39,1.9232315153938424e-39,1.9212323152738904e-39,1.9192331151539383e-39,1.9172339150339863e-39,1.9152347149140343e-39,1.9132355147940823e-39,1.9112363146741303e-39,1.9092371145541783e-39,1.9072379144342263e-39,1.9052387143142743e-39,1.9032395141943223e-39,1.9012403140743703e-39,1.8992411139544183e-39,1.8972419138344663e-39,1.8952427137145143e-39,1.8932435135945623e-39,1.89124431347461e-39,1.889245113354658e-39,1.887245913234706e-39,1.885246713114754e-39,1.883247512994802e-39,1.88124831287485e-39,1.879249112754898e-39,1.877249912634946e-39,1.875250712514994e-39,1.873251512395042e-39,1.87125231227509e-39,1.869253112155138e-39,1.867253912035186e-39,1.865254711915234e-39,1.863255511795282e-39,1.8612563116753298e-39,1.8592571115553778e-39,1.8572579114354258e-39,1.8552587113154738e-39,1.8532595111955218e-39,1.8512603110755698e-39,1.8492611109556178e-39,1.8472619108356658e-39,1.8452627107157138e-39,1.8432635105957618e-39,1.8412643104758098e-39,1.8392651103558574e-39,1.8372659102359054e-39,1.8352667101159534e-39,1.8332675099960014e-39,1.8312683098760494e-39,1.8292691097560974e-39,1.8272699096361454e-39,1.8252707095161934e-39,1.8232715093962414e-39,1.8212723092762894e-39,1.8192731091563374e-39,1.8172739090363854e-39,1.8152747089164334e-39,1.8132755087964814e-39,1.8112763086765293e-39,1.8092771085565773e-39,1.8072779084366253e-39,1.8052787083166733e-39,1.8032795081967213e-39,1.8012803080767693e-39,1.7992811079568173e-39,1.7972819078368653e-39,1.7952827077169133e-39,1.7932835075969613e-39,1.7912843074770093e-39,1.789285107357057e-39,1.787285907237105e-39,1.785286707117153e-39,1.783287506997201e-39,1.781288306877249e-39,1.779289106757297e-39,1.777289906637345e-39,1.775290706517393e-39,1.773291506397441e-39,1.771292306277489e-39,1.769293106157537e-39,1.767293906037585e-39,1.765294705917633e-39,1.763295505797681e-39,1.761296305677729e-39,1.759297105557777e-39,1.757297905437825e-39,1.755298705317873e-39,1.7532995051979208e-39,1.7513003050779688e-39,1.7493011049580168e-39,1.7473019048380648e-39,1.7453027047181128e-39,1.7433035045981608e-39,1.7413043044782088e-39,1.7393051043582568e-39,1.7373059042383045e-39,1.7353067041183524e-39,1.7333075039984004e-39,1.7313083038784484e-39,1.7293091037584964e-39,1.7273099036385444e-39,1.7253107035185924e-39,1.7233115033986404e-39,1.7213123032786884e-39,1.7193131031587364e-39,1.7173139030387844e-39,1.7153147029188324e-39,1.7133155027988804e-39,1.7113163026789284e-39,1.7093171025589764e-39,1.7073179024390244e-39,1.7053187023190724e-39,1.7033195021991203e-39,1.7013203020791683e-39,1.6993211019592163e-39,1.6973219018392643e-39,1.6953227017193123e-39,1.6933235015993603e-39,1.6913243014794083e-39,1.6893251013594563e-39,1.6873259012395043e-39,1.685326701119552e-39,1.6833275009996e-39,1.681328300879648e-39,1.679329100759696e-39,1.677329900639744e-39,1.675330700519792e-39,1.67333150039984e-39,1.671332300279888e-39,1.669333100159936e-39,1.667333900039984e-39,1.665334699920032e-39,1.66333549980008e-39,1.661336299680128e-39,1.659337099560176e-39,1.657337899440224e-39,1.655338699320272e-39,1.65333949920032e-39,1.651340299080368e-39,1.649341098960416e-39,1.647341898840464e-39,1.6453426987205118e-39,1.6433434986005598e-39,1.6413442984806078e-39,1.6393450983606558e-39,1.6373458982407038e-39,1.6353466981207518e-39,1.6333474980007995e-39,1.6313482978808475e-39,1.6293490977608955e-39,1.6273498976409434e-39,1.6253506975209914e-39,1.6233514974010394e-39,1.6213522972810874e-39,1.6193530971611354e-39,1.6173538970411834e-39,1.6153546969212314e-39,1.6133554968012794e-39,1.6113562966813274e-39,1.6093570965613754e-39,1.6073578964414234e-39,1.6053586963214714e-39,1.6033594962015194e-39,1.6013602960815674e-39,1.5993610959616154e-39,1.5973618958416634e-39,1.5953626957217113e-39,1.5933634956017593e-39,1.5913642954818073e-39,1.5893650953618553e-39,1.5873658952419033e-39,1.5853666951219513e-39,1.583367495001999e-39,1.581368294882047e-39,1.579369094762095e-39,1.577369894642143e-39,1.575370694522191e-39,1.573371494402239e-39,1.571372294282287e-39,1.569373094162335e-39,1.567373894042383e-39,1.565374693922431e-39,1.563375493802479e-39,1.561376293682527e-39,1.559377093562575e-39,1.557377893442623e-39,1.555378693322671e-39,1.553379493202719e-39,1.551380293082767e-39,1.549381092962815e-39,1.547381892842863e-39,1.545382692722911e-39,1.543383492602959e-39,1.541384292483007e-39,1.539385092363055e-39,1.5373858922431028e-39,1.5353866921231508e-39,1.5333874920031988e-39,1.5313882918832465e-39,1.5293890917632945e-39,1.5273898916433425e-39,1.5253906915233905e-39,1.5233914914034385e-39,1.5213922912834865e-39,1.5193930911635344e-39,1.5173938910435824e-39,1.5153946909236304e-39,1.5133954908036784e-39,1.5113962906837264e-39,1.5093970905637744e-39,1.5073978904438224e-39,1.5053986903238704e-39,1.5033994902039184e-39,1.5014002900839664e-39,1.4994010899640144e-39,1.4974018898440624e-39,1.4954026897241104e-39,1.4934034896041584e-39,1.4914042894842064e-39,1.4894050893642544e-39,1.4874058892443023e-39,1.4854066891243503e-39,1.4834074890043983e-39,1.4814082888844463e-39,1.479409088764494e-39,1.477409888644542e-39,1.47541068852459e-39,1.473411488404638e-39,1.471412288284686e-39,1.469413088164734e-39,1.467413888044782e-39,1.46541468792483e-39,1.463415487804878e-39,1.461416287684926e-39,1.459417087564974e-39,1.457417887445022e-39,1.4554186873250699e-39,1.4534194872051179e-39,1.4514202870851659e-39,1.4494210869652139e-39,1.4474218868452619e-39,1.4454226867253099e-39,1.4434234866053579e-39,1.4414242864854057e-39,1.4394250863654537e-39,1.4374258862455017e-39,1.4354266861255497e-39,1.4334274860055977e-39,1.4314282858856457e-39,1.4294290857656937e-39,1.4274298856457417e-39,1.4254306855257897e-39,1.4234314854058376e-39,1.4214322852858856e-39,1.4194330851659336e-39,1.4174338850459816e-39,1.4154346849260295e-39,1.4134354848060775e-39,1.4114362846861254e-39,1.4094370845661734e-39,1.4074378844462214e-39,1.4054386843262694e-39,1.4034394842063174e-39,1.4014402840863654e-39,1.3994410839664134e-39,1.3974418838464614e-39,1.3954426837265094e-39,1.3934434836065574e-39,1.3914442834866054e-39,1.3894450833666532e-39,1.3874458832467012e-39,1.3854466831267492e-39,1.3834474830067972e-39,1.3814482828868452e-39,1.3794490827668932e-39,1.3774498826469412e-39,1.3754506825269892e-39,1.3734514824070372e-39,1.3714522822870852e-39,1.3694530821671331e-39,1.3674538820471811e-39,1.3654546819272291e-39,1.363455481807277e-39,1.361456281687325e-39,1.359457081567373e-39,1.357457881447421e-39,1.355458681327469e-39,1.353459481207517e-39,1.351460281087565e-39,1.349461080967613e-39,1.3474618808476609e-39,1.3454626807277089e-39,1.3434634806077569e-39,1.3414642804878049e-39,1.3394650803678529e-39,1.3374658802479007e-39,1.3354666801279487e-39,1.3334674800079967e-39,1.3314682798880447e-39,1.3294690797680927e-39,1.3274698796481407e-39,1.3254706795281887e-39,1.3234714794082367e-39,1.3214722792882847e-39,1.3194730791683327e-39,1.3174738790483807e-39,1.3154746789284286e-39,1.3134754788084765e-39,1.3114762786885245e-39,1.3094770785685725e-39,1.3074778784486205e-39,1.3054786783286685e-39,1.3034794782087164e-39,1.3014802780887644e-39,1.2994810779688124e-39,1.2974818778488604e-39,1.2954826777289084e-39,1.2934834776089564e-39,1.2914842774890044e-39,1.2894850773690524e-39,1.2874858772491002e-39,1.2854866771291482e-39,1.2834874770091962e-39,1.2814882768892442e-39,1.2794890767692922e-39,1.2774898766493402e-39,1.2754906765293882e-39,1.2734914764094362e-39,1.2714922762894842e-39,1.2694930761695322e-39,1.2674938760495802e-39,1.2654946759296282e-39,1.2634954758096762e-39,1.261496275689724e-39,1.259497075569772e-39,1.25749787544982e-39,1.255498675329868e-39,1.253499475209916e-39,1.251500275089964e-39,1.249501074970012e-39,1.24750187485006e-39,1.245502674730108e-39,1.243503474610156e-39,1.241504274490204e-39,1.2395050743702519e-39,1.2375058742502999e-39,1.2355066741303477e-39,1.2335074740103957e-39,1.2315082738904437e-39,1.2295090737704917e-39,1.2275098736505397e-39,1.2255106735305877e-39,1.2235114734106357e-39,1.2215122732906837e-39,1.2195130731707317e-39,1.2175138730507797e-39,1.2155146729308277e-39,1.2135154728108757e-39,1.2115162726909237e-39,1.2095170725709715e-39,1.2075178724510195e-39,1.2055186723310675e-39,1.2035194722111155e-39,1.2015202720911635e-39,1.1995210719712115e-39,1.1975218718512595e-39,1.1955226717313074e-39,1.1935234716113554e-39,1.1915242714914034e-39,1.1895250713714514e-39,1.1875258712514994e-39,1.1855266711315474e-39,1.1835274710115952e-39,1.1815282708916432e-39,1.1795290707716912e-39,1.1775298706517392e-39,1.1755306705317872e-39,1.1735314704118352e-39,1.1715322702918832e-39,1.1695330701719312e-39,1.1675338700519792e-39,1.1655346699320272e-39,1.1635354698120752e-39,1.1615362696921232e-39,1.1595370695721712e-39,1.157537869452219e-39,1.155538669332267e-39,1.153539469212315e-39,1.151540269092363e-39,1.149541068972411e-39,1.147541868852459e-39,1.145542668732507e-39,1.143543468612555e-39,1.141544268492603e-39,1.139545068372651e-39,1.137545868252699e-39,1.135546668132747e-39,1.133547468012795e-39,1.1315482678928427e-39,1.1295490677728907e-39,1.1275498676529387e-39,1.1255506675329867e-39,1.1235514674130347e-39,1.1215522672930827e-39,1.1195530671731307e-39,1.1175538670531787e-39,1.1155546669332267e-39,1.1135554668132747e-39,1.1115562666933227e-39,1.1095570665733707e-39,1.1075578664534185e-39,1.1055586663334665e-39,1.1035594662135145e-39,1.1015602660935625e-39,1.0995610659736105e-39,1.0975618658536585e-39,1.0955626657337065e-39,1.0935634656137545e-39,1.0915642654938025e-39,1.0895650653738505e-39,1.0875658652538984e-39,1.0855666651339464e-39,1.0835674650139944e-39,1.0815682648940423e-39,1.0795690647740903e-39,1.0775698646541382e-39,1.0755706645341862e-39,1.0735714644142342e-39,1.0715722642942822e-39,1.0695730641743302e-39,1.0675738640543782e-39,1.0655746639344262e-39,1.0635754638144742e-39,1.0615762636945222e-39,1.0595770635745702e-39,1.0575778634546182e-39,1.055578663334666e-39,1.053579463214714e-39,1.051580263094762e-39,1.04958106297481e-39,1.047581862854858e-39,1.045582662734906e-39,1.043583462614954e-39,1.041584262495002e-39,1.03958506237505e-39,1.037585862255098e-39,1.035586662135146e-39,1.033587462015194e-39,1.031588261895242e-39,1.0295890617752898e-39,1.0275898616553378e-39,1.0255906615353858e-39,1.0235914614154337e-39,1.0215922612954817e-39,1.0195930611755297e-39,1.0175938610555777e-39,1.0155946609356257e-39,1.0135954608156737e-39,1.0115962606957217e-39,1.0095970605757697e-39,1.0075978604558177e-39,1.0055986603358657e-39,1.0035994602159135e-39,1.0016002600959615e-39,9.996010599760095e-40,9.976018598560575e-40,9.956026597361055e-40,9.936034596161535e-40,9.916042594962015e-40,9.896050593762495e-40,9.876058592562975e-40,9.856066591363455e-40,9.836074590163935e-40,9.816082588964415e-40,9.796090587764894e-40,9.776098586565373e-40,9.756106585365853e-40,9.736114584166333e-40,9.716122582966813e-40,9.696130581767292e-40,9.676138580567772e-40,9.656146579368252e-40,9.636154578168732e-40,9.616162576969212e-40,9.596170575769692e-40,9.576178574570172e-40,9.556186573370652e-40,9.536194572171132e-40,9.51620257097161e-40,9.49621056977209e-40,9.47621856857257e-40,9.45622656737305e-40,9.43623456617353e-40,9.41624256497401e-40,9.39625056377449e-40,9.37625856257497e-40,9.35626656137545e-40,9.33627456017593e-40,9.31628255897641e-40,9.29629055777689e-40,9.27629855657737e-40,9.256306555377848e-40,9.236314554178328e-40,9.216322552978808e-40,9.196330551779288e-40,9.176338550579768e-40,9.156346549380247e-40,9.136354548180727e-40,9.116362546981207e-40,9.096370545781687e-40,9.076378544582167e-40,9.056386543382647e-40,9.036394542183127e-40,9.016402540983605e-40,8.996410539784085e-40,8.976418538584565e-40,8.956426537385045e-40,8.936434536185525e-40,8.916442534986005e-40,8.896450533786485e-40,8.876458532586965e-40,8.856466531387445e-40,8.836474530187925e-40,8.816482528988405e-40,8.796490527788885e-40,8.776498526589365e-40,8.756506525389843e-40,8.736514524190323e-40,8.716522522990803e-40,8.696530521791283e-40,8.676538520591763e-40,8.656546519392243e-40,8.636554518192723e-40,8.616562516993202e-40,8.596570515793682e-40,8.576578514594162e-40,8.556586513394642e-40,8.536594512195122e-40,8.516602510995602e-40,8.49661050979608e-40,8.47661850859656e-40,8.45662650739704e-40,8.43663450619752e-40,8.416642504998e-40,8.39665050379848e-40,8.37665850259896e-40,8.35666650139944e-40,8.33667450019992e-40,8.3166824990004e-40,8.29669049780088e-40,8.27669849660136e-40,8.25670649540184e-40,8.236714494202318e-40,8.216722493002798e-40,8.196730491803278e-40,8.176738490603758e-40,8.156746489404238e-40,8.136754488204718e-40,8.116762487005198e-40,8.096770485805678e-40,8.076778484606157e-40,8.056786483406637e-40,8.036794482207117e-40,8.016802481007597e-40,7.996810479808077e-40,7.976818478608556e-40,7.956826477409035e-40,7.936834476209515e-40,7.916842475009995e-40,7.896850473810475e-40,7.876858472610955e-40,7.856866471411435e-40,7.836874470211915e-40,7.816882469012395e-40,7.796890467812875e-40,7.776898466613355e-40,7.756906465413835e-40,7.736914464214315e-40,7.716922463014793e-40,7.696930461815273e-40,7.676938460615753e-40,7.656946459416233e-40,7.636954458216713e-40,7.616962457017193e-40,7.596970455817673e-40,7.576978454618153e-40,7.556986453418633e-40,7.536994452219112e-40,7.517002451019592e-40,7.497010449820072e-40,7.477018448620552e-40,7.45702644742103e-40,7.43703444622151e-40,7.41704244502199e-40,7.39705044382247e-40,7.37705844262295e-40,7.35706644142343e-40,7.33707444022391e-40,7.31708243902439e-40,7.29709043782487e-40,7.277098436625349e-40,7.257106435425829e-40,7.237114434226309e-40,7.217122433026789e-40,7.197130431827269e-40,7.177138430627749e-40,7.157146429428229e-40,7.137154428228708e-40,7.117162427029188e-40,7.097170425829668e-40,7.077178424630148e-40,7.057186423430628e-40,7.037194422231108e-40,7.017202421031587e-40,6.997210419832067e-40,6.977218418632547e-40,6.9572264174330265e-40,6.9372344162335065e-40,6.917242415033986e-40,6.897250413834466e-40,6.8772584126349455e-40,6.857266411435425e-40,6.837274410235905e-40,6.817282409036385e-40,6.797290407836865e-40,6.777298406637345e-40,6.757306405437824e-40,6.737314404238304e-40,6.717322403038784e-40,6.697330401839264e-40,6.677338400639744e-40,6.657346399440224e-40,6.637354398240704e-40,6.617362397041183e-40,6.597370395841663e-40,6.577378394642143e-40,6.557386393442623e-40,6.537394392243103e-40,6.517402391043583e-40,6.497410389844062e-40,6.477418388644542e-40,6.457426387445022e-40,6.437434386245502e-40,6.4174423850459815e-40,6.3974503838464615e-40,6.3774583826469406e-40,6.3574663814474205e-40,6.3374743802479005e-40,6.31748237904838e-40,6.29749037784886e-40,6.27749837664934e-40,6.25750637544982e-40,6.237514374250299e-40,6.217522373050779e-40,6.197530371851259e-40,6.177538370651739e-40,6.157546369452219e-40,6.137554368252699e-40,6.117562367053178e-40,6.097570365853658e-40,6.077578364654138e-40,6.057586363454618e-40,6.037594362255098e-40,6.017602361055578e-40,5.997610359856058e-40,5.977618358656537e-40,5.957626357457017e-40,5.937634356257497e-40,5.917642355057977e-40,5.8976503538584566e-40,5.8776583526589365e-40,5.857666351459416e-40,5.8376743502598956e-40,5.8176823490603755e-40,5.7976903478608555e-40,5.777698346661335e-40,5.757706345461815e-40,5.737714344262295e-40,5.717722343062774e-40,5.697730341863254e-40,5.677738340663734e-40,5.657746339464214e-40,5.637754338264694e-40,5.617762337065174e-40,5.597770335865653e-40,5.577778334666133e-40,5.557786333466613e-40,5.537794332267093e-40,5.517802331067573e-40,5.497810329868053e-40,5.477818328668532e-40,5.457826327469012e-40,5.437834326269492e-40,5.417842325069972e-40,5.397850323870452e-40,5.377858322670932e-40,5.3578663214714116e-40,5.337874320271891e-40,5.317882319072371e-40,5.2978903178728506e-40,5.2778983166733305e-40,5.2579063154738105e-40,5.23791431427429e-40,5.2179223130747695e-40,5.1979303118752494e-40,5.177938310675729e-40,5.157946309476209e-40,5.137954308276689e-40,5.117962307077169e-40,5.097970305877649e-40,5.077978304678128e-40,5.057986303478608e-40,5.037994302279088e-40,5.018002301079568e-40,4.998010299880048e-40,4.978018298680528e-40,4.958026297481007e-40,4.938034296281487e-40,4.918042295081967e-40,4.898050293882447e-40,4.878058292682927e-40,4.858066291483407e-40,4.838074290283887e-40,4.818082289084366e-40,4.798090287884846e-40,4.778098286685326e-40,4.7581062854858056e-40,4.7381142842862855e-40,4.7181222830867654e-40,4.6981302818872446e-40,4.6781382806877245e-40,4.6581462794882044e-40,4.638154278288684e-40,4.618162277089164e-40,4.598170275889644e-40,4.578178274690124e-40,4.558186273490603e-40,4.538194272291083e-40,4.518202271091563e-40,4.498210269892043e-40,4.478218268692523e-40,4.458226267493003e-40,4.438234266293482e-40,4.418242265093962e-40,4.398250263894442e-40,4.378258262694922e-40,4.358266261495402e-40,4.338274260295882e-40,4.318282259096361e-40,4.298290257896841e-40,4.278298256697321e-40,4.258306255497801e-40,4.238314254298281e-40,4.2183222530987606e-40,4.1983302518992405e-40,4.17833825069972e-40,4.1583462495001996e-40,4.1383542483006795e-40,4.1183622471011594e-40,4.098370245901639e-40,4.078378244702119e-40,4.0583862435025984e-40,4.038394242303078e-40,4.018402241103558e-40,3.998410239904038e-40,3.978418238704518e-40,3.958426237504998e-40,3.938434236305478e-40,3.918442235105957e-40,3.898450233906437e-40,3.878458232706917e-40,3.858466231507397e-40,3.838474230307877e-40,3.818482229108357e-40,3.798490227908836e-40,3.778498226709316e-40,3.758506225509796e-40,3.738514224310276e-40,3.718522223110756e-40,3.698530221911236e-40,3.6785382207117156e-40,3.658546219512195e-40,3.6385542183126746e-40,3.6185622171131546e-40,3.5985702159136345e-40,3.578578214714114e-40,3.558586213514594e-40,3.538594212315074e-40,3.518602211115554e-40,3.4986102099160334e-40,3.4786182087165133e-40,3.4586262075169932e-40,3.4386342063174728e-40,3.4186422051179527e-40,3.3986502039184326e-40,3.378658202718912e-40,3.358666201519392e-40,3.338674200319872e-40,3.3186821991203516e-40,3.2986901979208315e-40,3.2786981967213114e-40,3.258706195521791e-40,3.238714194322271e-40,3.218722193122751e-40,3.1987301919232308e-40,3.1787381907237103e-40,3.1587461895241902e-40,3.13875418832467e-40,3.1187621871251497e-40,3.0987701859256296e-40,3.0787781847261096e-40,3.058786183526589e-40,3.038794182327069e-40,3.018802181127549e-40,2.9988101799280285e-40,2.9788181787285084e-40,2.9588261775289884e-40,2.9388341763294683e-40,2.918842175129948e-40,2.8988501739304278e-40,2.8788581727309077e-40,2.8588661715313872e-40,2.838874170331867e-40,2.818882169132347e-40,2.7988901679328266e-40,2.7788981667333066e-40,2.7589061655337865e-40,2.738914164334266e-40,2.718922163134746e-40,2.698930161935226e-40,2.6789381607357054e-40,2.6589461595361854e-40,2.6389541583366653e-40,2.6189621571371452e-40,2.5989701559376248e-40,2.5789781547381047e-40,2.5589861535385846e-40,2.538994152339064e-40,2.519002151139544e-40,2.499010149940024e-40,2.4790181487405035e-40,2.4590261475409835e-40,2.4390341463414634e-40,2.419042145141943e-40,2.399050143942423e-40,2.379058142742903e-40,2.3590661415433828e-40,2.3390741403438623e-40,2.3190821391443422e-40,2.299090137944822e-40,2.2790981367453017e-40,2.2591061355457816e-40,2.2391141343462616e-40,2.219122133146741e-40,2.199130131947221e-40,2.179138130747701e-40,2.1591461295481805e-40,2.1391541283486604e-40,2.1191621271491403e-40,2.09917012594962e-40,2.0791781247501e-40,2.0591861235505797e-40,2.0391941223510597e-40,2.0192021211515392e-40,1.999210119952019e-40,1.979218118752499e-40,1.9592261175529786e-40,1.9392341163534585e-40,1.9192421151539385e-40,1.899250113954418e-40,1.879258112754898e-40,1.859266111555378e-40,1.8392741103558574e-40,1.8192821091563373e-40,1.7992901079568173e-40,1.779298106757297e-40,1.7593061055577767e-40,1.7393141043582567e-40,1.7193221031587364e-40,1.6993301019592163e-40,1.679338100759696e-40,1.6593460995601758e-40,1.6393540983606557e-40,1.6193620971611355e-40,1.5993700959616152e-40,1.5793780947620951e-40,1.5593860935625749e-40,1.5393940923630548e-40,1.5194020911635345e-40,1.4994100899640143e-40,1.4794180887644942e-40,1.459426087564974e-40,1.4394340863654537e-40,1.4194420851659336e-40,1.3994500839664133e-40,1.3794580827668933e-40,1.359466081567373e-40,1.3394740803678527e-40,1.3194820791683327e-40,1.2994900779688124e-40,1.2794980767692921e-40,1.259506075569772e-40,1.2395140743702518e-40,1.2195220731707317e-40,1.1995300719712115e-40,1.1795380707716912e-40,1.1595460695721711e-40,1.1395540683726509e-40,1.1195620671731308e-40,1.0995700659736105e-40,1.0795780647740903e-40,1.0595860635745702e-40,1.03959406237505e-40,1.0196020611755297e-40,9.996100599760096e-41,9.796180587764893e-41,9.596260575769693e-41,9.39634056377449e-41,9.196420551779287e-41,8.996500539784086e-41,8.796580527788884e-41,8.596660515793682e-41,8.396740503798481e-41,8.196820491803278e-41,7.996900479808076e-41,7.796980467812875e-41,7.597060455817673e-41,7.39714044382247e-41,7.197220431827269e-41,6.997300419832067e-41,6.797380407836865e-41,6.597460395841663e-41,6.397540383846461e-41,6.197620371851259e-41,5.997700359856058e-41,5.797780347860855e-41,5.597860335865653e-41,5.397940323870452e-41,5.19802031187525e-41,4.998100299880047e-41,4.798180287884846e-41,4.598260275889644e-41,4.3983402638944423e-41,4.19842025189924e-41,3.9985002399040385e-41,3.7985802279088363e-41,3.5986602159136346e-41,3.3987402039184325e-41,3.198820191923231e-41,2.9989001799280286e-41,2.798980167932827e-41,2.599060155937625e-41,2.399140143942423e-41,2.199220131947221e-41,1.999300119952019e-41,1.799380107956817e-41,1.5994600959616152e-41,1.3995400839664133e-41,1.1996200719712113e-41,9.997000599760096e-42,7.997800479808076e-42,5.998600359856057e-42,3.999400239904038e-42,2.000200119952019e-42,1.0e-45]}

},{}],60:[function(require,module,exports){
module.exports={"expected":[9.99999986991104e14,1.000099979198464e15,1.00019990429696e15,1.000300030722048e15,1.000400090038272e15,1.00050021646336e15,1.000600342888448e15,1.000700469313536e15,1.000800662847488e15,1.00090085638144e15,1.001001117024256e15,1.001101377667072e15,1.001201705418752e15,1.001301966061568e15,1.001402428030976e15,1.001502755782656e15,1.001603217752064e15,1.001703746830336e15,1.00180414169088e15,1.001904670769152e15,1.002005199847424e15,1.00210579603456e15,1.002206392221696e15,1.002306988408832e15,1.00240778592256e15,1.002508382109696e15,1.002609179623424e15,1.002709910028288e15,1.002810707542016e15,1.002911572164608e15,1.003012302569472e15,1.003113167192064e15,1.00321409892352e15,1.00331509776384e15,1.00341609660416e15,1.003517028335616e15,1.0036180942848e15,1.00371909312512e15,1.003820226183168e15,1.00392142635008e15,1.004022559408128e15,1.00412375957504e15,1.004224892633088e15,1.004326227017728e15,1.004427494293504e15,1.00452876156928e15,1.004630163062784e15,1.00473143033856e15,1.004832898940928e15,1.004934367543296e15,1.0050357690368e15,1.005137237639168e15,1.0052387733504e15,1.005340309061632e15,1.005441911881728e15,1.005543581810688e15,1.005645184630784e15,1.005746921668608e15,1.005848591597568e15,1.005950328635392e15,1.00605213278208e15,1.006153936928768e15,1.00625580818432e15,1.006357679439872e15,1.006459550695424e15,1.006561421950976e15,1.006663360315392e15,1.006765365788672e15,1.006867371261952e15,1.006969443844096e15,1.007071583535104e15,1.007173589008384e15,1.007275728699392e15,1.0073778683904e15,1.007480209408e15,1.007582416207872e15,1.007684623007744e15,1.00778689691648e15,1.007889305042944e15,1.00799157895168e15,1.008093987078144e15,1.008196462313472e15,1.0082989375488e15,1.008401412784128e15,1.008503888019456e15,1.008606430363648e15,1.00870897270784e15,1.00881164926976e15,1.008914258722816e15,1.009016868175872e15,1.009119611846656e15,1.00922235551744e15,1.009325166297088e15,1.009427977076736e15,1.009530787856384e15,1.009633665744896e15,1.009736476524544e15,1.009839488630784e15,1.00994243362816e15,1.0100454457344e15,1.010148390731776e15,1.01025146994688e15,1.010354549161984e15,1.010457695485952e15,1.01056084180992e15,1.010663988133888e15,1.01076720156672e15,1.010870414999552e15,1.010973762650112e15,1.011076976082944e15,1.011180390842368e15,1.011283738492928e15,1.011387086143488e15,1.011490500902912e15,1.0115939827712e15,1.011697464639488e15,1.011800946507776e15,1.011904562593792e15,1.012008111570944e15,1.012111794765824e15,1.01221541085184e15,1.01231909404672e15,1.012422844350464e15,1.012526661763072e15,1.012630277849088e15,1.012734095261696e15,1.012838046892032e15,1.01294186430464e15,1.013045748826112e15,1.013149767565312e15,1.013253652086784e15,1.013357737934848e15,1.013461756674048e15,1.013565842522112e15,1.013669928370176e15,1.013773947109376e15,1.013878234284032e15,1.01398238724096e15,1.014086607306752e15,1.014190894481408e15,1.0142951145472e15,1.014399535939584e15,1.014503890223104e15,1.014608311615488e15,1.014712733007872e15,1.014817154400256e15,1.014921642901504e15,1.015026131402752e15,1.015130687012864e15,1.01523530973184e15,1.015339865341952e15,1.015444555169792e15,1.015549244997632e15,1.015653867716608e15,1.015758624653312e15,1.015863515807744e15,1.015968339853312e15,1.016073096790016e15,1.016177987944448e15,1.016282811990016e15,1.016387837362176e15,1.016492862734336e15,1.016597753888768e15,1.016702846369792e15,1.016807871741952e15,1.016912964222976e15,1.017018123812864e15,1.017123350511616e15,1.017228510101504e15,1.017333736800256e15,1.017438896390144e15,1.017544257306624e15,1.017649618223104e15,1.017755046248448e15,1.017860407164928e15,1.017965835190272e15,1.01807133032448e15,1.018176758349824e15,1.018282253484032e15,1.018387882835968e15,1.01849344507904e15,1.018599074430976e15,1.018704703782912e15,1.018810400243712e15,1.018916096704512e15,1.019021860274176e15,1.019127690952704e15,1.019233588740096e15,1.019339419418624e15,1.019445250097152e15,1.019551214993408e15,1.019657179889664e15,1.01976314478592e15,1.01986917679104e15,1.01997520879616e15,1.020081307910144e15,1.020187407024128e15,1.020293573246976e15,1.020399739469824e15,1.020505972801536e15,1.020612206133248e15,1.020718506573824e15,1.020824874123264e15,1.020931241672704e15,1.021037609222144e15,1.021143976771584e15,1.021250411429888e15,1.02135698030592e15,1.021463414964224e15,1.021569983840256e15,1.021676619825152e15,1.021783255810048e15,1.02188982468608e15,1.02199652777984e15,1.022103297982464e15,1.022210001076224e15,1.022316771278848e15,1.022423608590336e15,1.02253037879296e15,1.022637350322176e15,1.022744187633664e15,1.022851226271744e15,1.022958264909824e15,1.023065303547904e15,1.023172342185984e15,1.023279447932928e15,1.023386553679872e15,1.023493659426816e15,1.023600899391488e15,1.023708072247296e15,1.023815312211968e15,1.023922619285504e15,1.024029993467904e15,1.024137233432576e15,1.02424467472384e15,1.02435204890624e15,1.024459624415232e15,1.024567065706496e15,1.024674574106624e15,1.02478221672448e15,1.024889725124608e15,1.024997367742464e15,1.02510501036032e15,1.02521272008704e15,1.02532042981376e15,1.025428206649344e15,1.025536050593792e15,1.02564389453824e15,1.025751738482688e15,1.025859649536e15,1.025967560589312e15,1.026075538751488e15,1.0261834498048e15,1.02629149507584e15,1.026399607455744e15,1.026507652726784e15,1.026615899324416e15,1.026724078813184e15,1.026832191193088e15,1.026940504899584e15,1.027048751497216e15,1.027157065203712e15,1.027265446019072e15,1.027373826834432e15,1.027482274758656e15,1.027590655574016e15,1.027699170607104e15,1.027807618531328e15,1.027916267782144e15,1.028024782815232e15,1.028133432066048e15,1.028242148425728e15,1.02835073056768e15,1.02845944692736e15,1.028568230395904e15,1.028677013864448e15,1.028785797332992e15,1.028894715019264e15,1.029003565596672e15,1.029112550391808e15,1.02922146807808e15,1.029330452873216e15,1.029439504777216e15,1.02954862379008e15,1.02965767569408e15,1.029766794706944e15,1.029876047937536e15,1.029985234059264e15,1.030094420180992e15,1.030203740520448e15,1.03031299375104e15,1.03042238119936e15,1.03053176864768e15,1.030641156096e15,1.030750610653184e15,1.030860065210368e15,1.030969721094144e15,1.031079175651328e15,1.031188831535104e15,1.031298420310016e15,1.031408076193792e15,1.031517732077568e15,1.031627455070208e15,1.031737245171712e15,1.03184710238208e15,1.031956959592448e15,1.032066749693952e15,1.032176741122048e15,1.032286598332416e15,1.032396656869376e15,1.032506581188608e15,1.032616639725568e15,1.032726698262528e15,1.032836823908352e15,1.032946949554176e15,1.033057209417728e15,1.033167402172416e15,1.033277729144832e15,1.033387989008384e15,1.0334983159808e15,1.03360871006208e15,1.03371910414336e15,1.033829431115776e15,1.03393989230592e15,1.034050487713792e15,1.0341610160128e15,1.034271544311808e15,1.034382206828544e15,1.034492802236416e15,1.034603531862016e15,1.034714261487616e15,1.034824991113216e15,1.03493578784768e15,1.035046584582144e15,1.035157448425472e15,1.0352683122688e15,1.035379310329856e15,1.035490308390912e15,1.035601239343104e15,1.035712304513024e15,1.035823369682944e15,1.035934501961728e15,1.036045634240512e15,1.03615683362816e15,1.036268100124672e15,1.03637929951232e15,1.036490566008832e15,1.036601899614208e15,1.03671316611072e15,1.036824633933824e15,1.036936034648064e15,1.037047502471168e15,1.037159104512e15,1.037270639443968e15,1.037382174375936e15,1.037493843525632e15,1.037605445566464e15,1.037717047607296e15,1.037828783865856e15,1.03794058723328e15,1.038052390600704e15,1.038164193968128e15,1.038276064444416e15,1.038388002029568e15,1.03849993961472e15,1.038611944308736e15,1.038723881893888e15,1.038835953696768e15,1.038948092608512e15,1.039060164411392e15,1.039172370432e15,1.039284509343744e15,1.039396715364352e15,1.03950892138496e15,1.03962132873216e15,1.039733601861632e15,1.039846009208832e15,1.039958416556032e15,1.040070891012096e15,1.04018336546816e15,1.040295907033088e15,1.040408448598016e15,1.040520990162944e15,1.0406336659456e15,1.040746274619392e15,1.040859017510912e15,1.040971827511296e15,1.041084503293952e15,1.041197313294336e15,1.041310257512448e15,1.041423134621696e15,1.041536011730944e15,1.041648955949056e15,1.041761900167168e15,1.041874978603008e15,1.041988057038848e15,1.042101202583552e15,1.042214348128256e15,1.04232749367296e15,1.042440706326528e15,1.04255398608896e15,1.042667198742528e15,1.042780612722688e15,1.04289389248512e15,1.043007373574144e15,1.04312072044544e15,1.043234201534464e15,1.043347682623488e15,1.043461230821376e15,1.043574913236992e15,1.043688528543744e15,1.043802143850496e15,1.043915893374976e15,1.044029642899456e15,1.044143325315072e15,1.04425720905728e15,1.044371025690624e15,1.044484909432832e15,1.04459879317504e15,1.044712744026112e15,1.044826829094912e15,1.044940779945984e15,1.045054932123648e15,1.045169084301312e15,1.045283102261248e15,1.045397321547776e15,1.045511540834304e15,1.045625760120832e15,1.045740046516224e15,1.045854467129344e15,1.045968753524736e15,1.04608324124672e15,1.046197594750976e15,1.04631208247296e15,1.046426637303808e15,1.046541192134656e15,1.046655814074368e15,1.046770503122944e15,1.046885125062656e15,1.046999814111232e15,1.047114503159808e15,1.047229326426112e15,1.047344149692416e15,1.047459040067584e15,1.047573930442752e15,1.047688887926784e15,1.047803845410816e15,1.047918802894848e15,1.048033961705472e15,1.048148986298368e15,1.048264145108992e15,1.048379236810752e15,1.048494395621376e15,1.048609688649728e15,1.048724914569216e15,1.048840274706432e15,1.048955701952512e15,1.049070994980864e15,1.049186489335808e15,1.049301916581888e15,1.049417478045696e15,1.049533039509504e15,1.049648466755584e15,1.049764095328256e15,1.049879858118656e15,1.049995553800192e15,1.050111249481728e15,1.050227079380992e15,1.050342842171392e15,1.050458672070656e15,1.050574636187648e15,1.050690533195776e15,1.050806497312768e15,1.050922528538624e15,1.051038492655616e15,1.051154523881472e15,1.05127075643392e15,1.05138685476864e15,1.051503087321088e15,1.051619319873536e15,1.051735619534848e15,1.05185191919616e15,1.051968218857472e15,1.052084585627648e15,1.052201086615552e15,1.052317520494592e15,1.052433954373632e15,1.0525505224704e15,1.052667157676032e15,1.052783792881664e15,1.052900428087296e15,1.053017130401792e15,1.053133832716288e15,1.053250602139648e15,1.053367505780736e15,1.053484275204096e15,1.053601178845184e15,1.053718015377408e15,1.053835053236224e15,1.053952023986176e15,1.054069061844992e15,1.054186233921536e15,1.054303338889216e15,1.054420443856896e15,1.054537750151168e15,1.054654989336576e15,1.054772295630848e15,1.054889534816256e15,1.055006908219392e15,1.055124281622528e15,1.055241722134528e15,1.055359229755392e15,1.055476737376256e15,1.055594312105984e15,1.055711886835712e15,1.055829528674304e15,1.05594723762176e15,1.056064946569216e15,1.056182655516672e15,1.056300431572992e15,1.05641834184704e15,1.056536185012224e15,1.056654028177408e15,1.05677200556032e15,1.056890050052096e15,1.057008094543872e15,1.057126139035648e15,1.057244250636288e15,1.057362362236928e15,1.057480540946432e15,1.057598853873664e15,1.057717032583168e15,1.0578353455104e15,1.057953658437632e15,1.058072038473728e15,1.058190485618688e15,1.058308932763648e15,1.058427514126336e15,1.05854602838016e15,1.058664676851712e15,1.0587832582144e15,1.058901973794816e15,1.059020689375232e15,1.059139472064512e15,1.059258120536064e15,1.059376903225344e15,1.059495753023488e15,1.05961473703936e15,1.059733653946368e15,1.059852705071104e15,1.05997175619584e15,1.060090740211712e15,1.060209858445312e15,1.060328976678912e15,1.060448296239104e15,1.060567481581568e15,1.060686666924032e15,1.06080591937536e15,1.06092537315328e15,1.061044625604608e15,1.061164079382528e15,1.061283600269312e15,1.061403054047232e15,1.06152264204288e15,1.061642297147392e15,1.06176188514304e15,1.061881607356416e15,1.062001262460928e15,1.06212091756544e15,1.062240773996544e15,1.062360563318784e15,1.062480419749888e15,1.062600477507584e15,1.062720401047552e15,1.06284032458752e15,1.06296044945408e15,1.063080440102912e15,1.063200564969472e15,1.063320756944896e15,1.063440881811456e15,1.063561208004608e15,1.063681467088896e15,1.063801726173184e15,1.063922186584064e15,1.064042512777216e15,1.06416304029696e15,1.064283433598976e15,1.06440396111872e15,1.064524488638464e15,1.064645083267072e15,1.064765879222272e15,1.064886540959744e15,1.065007202697216e15,1.065127998652416e15,1.065248727498752e15,1.06536965767168e15,1.065490520735744e15,1.065611450908672e15,1.065732448190464e15,1.065853445472256e15,1.065974576971776e15,1.066095641362432e15,1.066216839970816e15,1.066337904361472e15,1.06645917007872e15,1.066580435795968e15,1.06670176862208e15,1.066823101448192e15,1.066944434274304e15,1.067065968427008e15,1.067187368361984e15,1.067308902514688e15,1.067430503776256e15,1.06755203792896e15,1.067673639190528e15,1.06779530756096e15,1.067917043040256e15,1.06803891273728e15,1.068160648216576e15,1.068282450804736e15,1.068404387610624e15,1.068526324416512e15,1.068648328331264e15,1.068770332246016e15,1.068892336160768e15,1.069014474293248e15,1.069136545316864e15,1.069258817667072e15,1.069380955799552e15,1.06950322814976e15,1.069625567608832e15,1.069747974176768e15,1.06987031363584e15,1.06999278731264e15,1.070115193880576e15,1.070237667557376e15,1.070360275451904e15,1.070482950455296e15,1.07060549124096e15,1.070728233353216e15,1.070850975465472e15,1.070973717577728e15,1.071096526798848e15,1.071219336019968e15,1.071342279458816e15,1.0714651557888e15,1.071588166336512e15,1.071711243993088e15,1.071834321649664e15,1.071957332197376e15,1.072080476962816e15,1.072203621728256e15,1.072326967820288e15,1.072450179694592e15,1.072573525786624e15,1.07269693898752e15,1.072820285079552e15,1.072943698280448e15,1.073067178590208e15,1.07319086022656e15,1.073314407645184e15,1.073437955063808e15,1.073561569591296e15,1.073685318336512e15,1.073809067081728e15,1.073932882935808e15,1.074056765898752e15,1.074180581752832e15,1.07430453182464e15,1.074428414787584e15,1.07455249907712e15,1.074676449148928e15,1.074800600547328e15,1.074924617728e15,1.075048836235264e15,1.075173054742528e15,1.07529740746752e15,1.075421693083648e15,1.075545978699776e15,1.075670465642496e15,1.075794818367488e15,1.075919305310208e15,1.076043859361792e15,1.076168413413376e15,1.076293034573824e15,1.076417655734272e15,1.076542344003584e15,1.076667166490624e15,1.076791854759936e15,1.07691674435584e15,1.077041633951744e15,1.077166523547648e15,1.077291480252416e15,1.077416436957184e15,1.077541460770816e15,1.077666618802176e15,1.077791709724672e15,1.077916800647168e15,1.078042092896256e15,1.07816731803648e15,1.078292677394432e15,1.07841796964352e15,1.078543329001472e15,1.078668889686016e15,1.078794316152832e15,1.078919876837376e15,1.079045370413056e15,1.079170998206464e15,1.079296693108736e15,1.079422388011008e15,1.07954808291328e15,1.079673844924416e15,1.07979974115328e15,1.07992557027328e15,1.080051533611008e15,1.080177362731008e15,1.0803033931776e15,1.080429490733056e15,1.080555655397376e15,1.080681685843968e15,1.080807917617152e15,1.080934082281472e15,1.081060448272384e15,1.081186612936704e15,1.08131304603648e15,1.081439412027392e15,1.081565912236032e15,1.081692479553536e15,1.081818979762176e15,1.081945479970816e15,1.082072181506048e15,1.082198815932416e15,1.082325517467648e15,1.082452286111744e15,1.082579121864704e15,1.082705957617664e15,1.082832793370624e15,1.082959830450176e15,1.083086733312e15,1.083213837500416e15,1.083340941688832e15,1.08346791165952e15,1.0835950829568e15,1.083722321362944e15,1.083849492660224e15,1.083976865284096e15,1.084104170799104e15,1.08423161053184e15,1.08435911737344e15,1.084486489997312e15,1.084613996838912e15,1.084741570789376e15,1.084869278957568e15,1.084996852908032e15,1.085124561076224e15,1.085252202135552e15,1.085380044521472e15,1.085507886907392e15,1.085635796402176e15,1.08576370589696e15,1.085891682500608e15,1.086019659104256e15,1.086147837034496e15,1.086275880747008e15,1.086404058677248e15,1.086532303716352e15,1.086660414537728e15,1.086788726685696e15,1.086917038833664e15,1.08704548519936e15,1.087173864456192e15,1.087302310821888e15,1.087430891405312e15,1.087559471988736e15,1.087688119681024e15,1.087816767373312e15,1.087945482174464e15,1.088074196975616e15,1.088202911776768e15,1.088331693686784e15,1.088460609814528e15,1.088589593051136e15,1.08871850917888e15,1.088847492415488e15,1.08897654276096e15,1.089105794433024e15,1.08923491188736e15,1.089364029341696e15,1.089493348122624e15,1.089622666903552e15,1.089751918575616e15,1.089881371574272e15,1.090010757464064e15,1.09014021046272e15,1.09026973057024e15,1.090399384895488e15,1.090528905003008e15,1.09065862643712e15,1.090788347871232e15,1.090918136414208e15,1.091047924957184e15,1.091177780609024e15,1.091307636260864e15,1.091437559021568e15,1.091567616e15,1.091697538760704e15,1.091827662848e15,1.091957786935296e15,1.092087978131456e15,1.092218169327616e15,1.09234842763264e15,1.092478820155392e15,1.09260914556928e15,1.092739470983168e15,1.092869930614784e15,1.093000457355264e15,1.093131051204608e15,1.093261577945088e15,1.093392238903296e15,1.093522966970368e15,1.09365369503744e15,1.093784490213376e15,1.093915352498176e15,1.09404628189184e15,1.094177211285504e15,1.09430800646144e15,1.094439002963968e15,1.094570200793088e15,1.094701197295616e15,1.0948324622336e15,1.09496366006272e15,1.09509485789184e15,1.095226122829824e15,1.0953575890944e15,1.095488988250112e15,1.095620387405824e15,1.095751786561536e15,1.09588338704384e15,1.09601492041728e15,1.096146520899584e15,1.096278255599616e15,1.096409923190784e15,1.096541859217408e15,1.09667359391744e15,1.096805395726336e15,1.096937398861824e15,1.097069401997312e15,1.0972014051328e15,1.097333341159424e15,1.09746547851264e15,1.097597615865856e15,1.0977298874368e15,1.09786209189888e15,1.097994430578688e15,1.098126702149632e15,1.098259107938304e15,1.09839158083584e15,1.098524053733376e15,1.09865666084864e15,1.098789267963904e15,1.098921807970304e15,1.099054415085568e15,1.099187223527424e15,1.099319964860416e15,1.099452840411136e15,1.099585715961856e15,1.099718591512576e15,1.099851668389888e15,1.099984611049472e15,1.100117755035648e15,1.100250764804096e15,1.100383975899136e15,1.100517186994176e15,1.100650398089216e15,1.10078367629312e15,1.100917021605888e15,1.101050501136384e15,1.101183846449152e15,1.101317393088512e15,1.101451006836736e15,1.10158462058496e15,1.101718234333184e15,1.101851915190272e15,1.10198559604736e15,1.10211947823104e15,1.102253226196992e15,1.102387175489536e15,1.10252112478208e15,1.102655141183488e15,1.102789157584896e15,1.102923241095168e15,1.103057458823168e15,1.10319154233344e15,1.103325827170304e15,1.103460179116032e15,1.103594396844032e15,1.10372874878976e15,1.103863167844352e15,1.103997654007808e15,1.104132274388992e15,1.104266760552448e15,1.104401448042496e15,1.104536135532544e15,1.104670890131456e15,1.104805711839232e15,1.104940466438144e15,1.105075221037056e15,1.10521017696256e15,1.105345132888064e15,1.105480155922432e15,1.105615313174528e15,1.10575040331776e15,1.105885560569856e15,1.106020784930816e15,1.106156009291776e15,1.106291434979328e15,1.106426726449152e15,1.106562219245568e15,1.106697577824256e15,1.106833070620672e15,1.106968630525952e15,1.107104257540096e15,1.107240018771968e15,1.107375645786112e15,1.107511474126848e15,1.10764723535872e15,1.10778313080832e15,1.10791902625792e15,1.108054988816384e15,1.10819115270144e15,1.10832704815104e15,1.108463212036096e15,1.108599308812288e15,1.108735606915072e15,1.108871837908992e15,1.10900820312064e15,1.109144568332288e15,1.109280933543936e15,1.109417500082176e15,1.109553932402688e15,1.109690566049792e15,1.109827132588032e15,1.109963766235136e15,1.110100534099968e15,1.1102373019648e15,1.11037420404736e15,1.110511039021056e15,1.110647873994752e15,1.11078491029504e15,1.110921946595328e15,1.11105905000448e15,1.111196153413632e15,1.111333323931648e15,1.111470494449664e15,1.111607732076544e15,1.111745103921152e15,1.111882542874624e15,1.112019914719232e15,1.112157353672704e15,1.112294926843904e15,1.112432567123968e15,1.112570207404032e15,1.112707981901824e15,1.112845622181888e15,1.112983463788544e15,1.113121171177472e15,1.113259079892992e15,1.113396988608512e15,1.113535098650624e15,1.113673074475008e15,1.113811251625984e15,1.113949294559232e15,1.114087538819072e15,1.114225850187776e15,1.114364094447616e15,1.114502472925184e15,1.114640851402752e15,1.11477922988032e15,1.11491780968448e15,1.11505638948864e15,1.115194902183936e15,1.115333616205824e15,1.11547246444544e15,1.115611178467328e15,1.11574995959808e15,1.11588887494656e15,1.116027723186176e15,1.116166772752384e15,1.116305688100864e15,1.116444737667072e15,1.116583854342144e15,1.116723172343808e15,1.116862356127744e15,1.117001674129408e15,1.117140925022208e15,1.1172803772416e15,1.117419829460992e15,1.117559348789248e15,1.117698868117504e15,1.117838521663488e15,1.117978108100608e15,1.118117761646592e15,1.118257549410304e15,1.11839740428288e15,1.118537259155456e15,1.118677181136896e15,1.118817103118336e15,1.11895709220864e15,1.119097215516672e15,1.119237405933568e15,1.119377462132736e15,1.119517719658496e15,1.11965804429312e15,1.11979830181888e15,1.119938693562368e15,1.120079219523584e15,1.120219611267072e15,1.120360204337152e15,1.120500864516096e15,1.12064152469504e15,1.120782184873984e15,1.120922912161792e15,1.121063840776192e15,1.121204635172864e15,1.1213454966784e15,1.121486492401664e15,1.121627555233792e15,1.12176861806592e15,1.121909680898048e15,1.122050877947904e15,1.122192209215488e15,1.122333406265344e15,1.122474804641792e15,1.12261620301824e15,1.122757668503552e15,1.12289906688e15,1.12304066658304e15,1.12318226628608e15,1.123324000206848e15,1.123465667018752e15,1.123607468048384e15,1.123749269078016e15,1.123891137216512e15,1.124033072463872e15,1.124175007711232e15,1.124317144285184e15,1.124459213750272e15,1.124601350324224e15,1.124743486898176e15,1.124885757689856e15,1.125028162699264e15,1.125170500599808e15,1.125312905609216e15,1.125455444836352e15,1.12559784984576e15,1.12574045618176e15,1.125883129626624e15,1.126025803071488e15,1.126168476516352e15,1.126311418396672e15,1.126454226059264e15,1.126597033721856e15,1.126740109819904e15,1.126883051700224e15,1.127026127798272e15,1.127169338114048e15,1.127312414212096e15,1.127455624527872e15,1.127598969061376e15,1.12774231359488e15,1.127885792346112e15,1.128029136879616e15,1.128172749848576e15,1.128316228599808e15,1.128459841568768e15,1.128603454537728e15,1.128747201724416e15,1.128891083128832e15,1.12903483031552e15,1.129178711719936e15,1.12932272734208e15,1.129466608746496e15,1.129610758586368e15,1.12975490842624e15,1.129899058266112e15,1.130043208105984e15,1.130187492163584e15,1.130331776221184e15,1.130476194496512e15,1.13062061277184e15,1.130765165264896e15,1.130909717757952e15,1.131054404468736e15,1.131198956961792e15,1.131343777890304e15,1.131488464601088e15,1.1316332855296e15,1.131778106458112e15,1.13192319582208e15,1.13206815096832e15,1.132213240332288e15,1.132358329696256e15,1.132503419060224e15,1.13264864264192e15,1.132794000441344e15,1.13293922402304e15,1.133084716040192e15,1.133230073839616e15,1.133375565856768e15,1.133521192091648e15,1.133666818326528e15,1.133812444561408e15,1.133958205014016e15,1.134103965466624e15,1.134249725919232e15,1.134395754807296e15,1.134541649477632e15,1.134687678365696e15,1.13483370725376e15,1.134979870359552e15,1.135126033465344e15,1.135272196571136e15,1.135418628112384e15,1.135564925435904e15,1.135711356977152e15,1.135857654300672e15,1.136004220059648e15,1.136150785818624e15,1.136297485795328e15,1.136444185772032e15,1.136590885748736e15,1.136737719943168e15,1.1368845541376e15,1.137031388332032e15,1.137178356744192e15,1.13732545937408e15,1.137472562003968e15,1.137619664633856e15,1.137766901481472e15,1.137914138329088e15,1.138061375176704e15,1.138208880459776e15,1.13835625152512e15,1.138503756808192e15,1.138651262091264e15,1.138798901592064e15,1.138946541092864e15,1.139094180593664e15,1.13924208852992e15,1.13938972803072e15,1.139537770184704e15,1.13968567812096e15,1.139833720274944e15,1.139981762428928e15,1.140129804582912e15,1.140277980954624e15,1.140426291544064e15,1.140574602133504e15,1.140722912722944e15,1.140871357530112e15,1.141019668119552e15,1.141168247144448e15,1.141316826169344e15,1.14146540519424e15,1.141614252654592e15,1.141762965897216e15,1.14191167913984e15,1.14206066081792e15,1.142209508278272e15,1.142358489956352e15,1.14250760585216e15,1.142656721747968e15,1.142805837643776e15,1.142955087757312e15,1.143104337870848e15,1.143253722202112e15,1.143403106533376e15,1.14355249086464e15,1.143702009413632e15,1.143851662180352e15,1.144001180729344e15,1.144150967713792e15,1.14430075469824e15,1.144450541682688e15,1.144600328667136e15,1.144750249869312e15,1.144900305289216e15,1.14505036070912e15,1.145200416129024e15,1.145350605766656e15,1.145500795404288e15,1.145651119259648e15,1.145801443115008e15,1.145951766970368e15,1.146102225043456e15,1.146252817334272e15,1.146403409625088e15,1.146554001915904e15,1.146704728424448e15,1.146855454932992e15,1.147006315659264e15,1.147157042167808e15,1.147308037111808e15,1.147459032055808e15,1.147610161217536e15,1.147761156161536e15,1.147912419540992e15,1.14806354870272e15,1.148214946299904e15,1.14836620967936e15,1.148517741494272e15,1.148669139091456e15,1.148820670906368e15,1.14897220272128e15,1.14912386875392e15,1.14927553478656e15,1.149427469254656e15,1.149579269505024e15,1.149731069755392e15,1.149883004223488e15,1.150035072909312e15,1.150187141595136e15,1.150339344498688e15,1.150491413184512e15,1.150643750305792e15,1.150795953209344e15,1.150948424548352e15,1.15110089588736e15,1.15125323300864e15,1.151405838565376e15,1.15155857833984e15,1.151711183896576e15,1.15186392367104e15,1.152016663445504e15,1.152169537437696e15,1.152322545647616e15,1.152475419639808e15,1.152628427849728e15,1.152781570277376e15,1.152934712705024e15,1.1530879893504e15,1.153241265995776e15,1.153394542641152e15,1.153547953504256e15,1.153701498585088e15,1.15385504366592e15,1.154008588746752e15,1.154162268045312e15,1.154315947343872e15,1.15446976086016e15,1.154623574376448e15,1.154777522110464e15,1.15493146984448e15,1.155085417578496e15,1.15523949953024e15,1.155393715699712e15,1.155547931869184e15,1.155702148038656e15,1.155856498425856e15,1.156010983030784e15,1.156165333417984e15,1.15631995224064e15,1.156474436845568e15,1.156629055668224e15,1.156783808708608e15,1.156938561748992e15,1.157093314789376e15,1.157248202047488e15,1.157403223523328e15,1.157558244999168e15,1.157713266475008e15,1.157868422168576e15,1.158023577862144e15,1.15817886777344e15,1.158334291902464e15,1.15848958181376e15,1.158645005942784e15,1.158800564289536e15,1.158956122636288e15,1.159111815200768e15,1.159267507765248e15,1.159423200329728e15,1.159579161329664e15,1.159734988111872e15,1.159890949111808e15,1.160046910111744e15,1.160203005329408e15,1.160359100547072e15,1.160515329982464e15,1.160671559417856e15,1.160827923070976e15,1.160984286724096e15,1.161140784594944e15,1.161297282465792e15,1.161453914554368e15,1.161610546642944e15,1.161767312949248e15,1.161923945037824e15,1.162080845561856e15,1.162237746085888e15,1.162394780827648e15,1.16255168135168e15,1.162708850311168e15,1.162866019270656e15,1.163023188230144e15,1.16318049140736e15,1.163337928802304e15,1.16349523197952e15,1.163652803592192e15,1.163810240987136e15,1.163967946817536e15,1.164125518430208e15,1.164283224260608e15,1.164441064308736e15,1.164598904356864e15,1.16475687862272e15,1.164914852888576e15,1.16507296137216e15,1.165230935638016e15,1.165389178339328e15,1.16554742104064e15,1.16570579795968e15,1.16586417487872e15,1.16602255179776e15,1.166181062934528e15,1.166339574071296e15,1.166498219425792e15,1.166656864780288e15,1.166815644352512e15,1.166974558142464e15,1.167133471932416e15,1.167292385722368e15,1.167451433730048e15,1.167610481737728e15,1.167769663963136e15,1.167928846188544e15,1.16808816263168e15,1.168247479074816e15,1.16840692973568e15,1.168566380396544e15,1.168725965275136e15,1.168885550153728e15,1.16904513503232e15,1.169204988346368e15,1.169364707442688e15,1.169524694974464e15,1.169684548288512e15,1.169844535820288e15,1.170004657569792e15,1.170164779319296e15,1.1703249010688e15,1.170485157036032e15,1.170645547220992e15,1.170805937405952e15,1.170966327590912e15,1.171126986211328e15,1.171287510614016e15,1.171448169234432e15,1.171608962072576e15,1.171769620692992e15,1.171930547748864e15,1.172091474804736e15,1.172252401860608e15,1.172413463134208e15,1.172574658625536e15,1.172735854116864e15,1.172897049608192e15,1.173058379317248e15,1.173219709026304e15,1.173381307170816e15,1.1735427710976e15,1.173704369242112e15,1.173865967386624e15,1.174027699748864e15,1.174189566328832e15,1.1743514329088e15,1.174513299488768e15,1.174675300286464e15,1.17483730108416e15,1.174999570317312e15,1.175161705332736e15,1.175323974565888e15,1.17548624379904e15,1.17564864724992e15,1.175811184918528e15,1.175973588369408e15,1.176136260255744e15,1.17629893214208e15,1.176461604028416e15,1.17662441013248e15,1.176787350454272e15,1.176950156558336e15,1.177113231097856e15,1.177276305637376e15,1.177439380176896e15,1.177602588934144e15,1.17776593190912e15,1.177929274884096e15,1.178092617859072e15,1.178256229269504e15,1.178419706462208e15,1.17858331787264e15,1.178746929283072e15,1.178910674911232e15,1.17907455475712e15,1.179238434603008e15,1.179402314448896e15,1.17956646273024e15,1.179730476793856e15,1.1798946250752e15,1.180058907574272e15,1.180223190073344e15,1.180387606790144e15,1.180552023506944e15,1.180716440223744e15,1.180881125376e15,1.181045676310528e15,1.181210361462784e15,1.181375180832768e15,1.181540000202752e15,1.181704953790464e15,1.181869907378176e15,1.182034995183616e15,1.182200082989056e15,1.182365305012224e15,1.182530527035392e15,1.182695883276288e15,1.182861373734912e15,1.183026864193536e15,1.183192220434432e15,1.183357845110784e15,1.183523604004864e15,1.183689362898944e15,1.183855121793024e15,1.184021014904832e15,1.18418690801664e15,1.184353069563904e15,1.18451909689344e15,1.184685258440704e15,1.184851554205696e15,1.185017849970688e15,1.18518414573568e15,1.185350709936128e15,1.185517139918848e15,1.185683704119296e15,1.185850402537472e15,1.186017100955648e15,1.186183933591552e15,1.186350900445184e15,1.186517733081088e15,1.18668469993472e15,1.18685180100608e15,1.187019036295168e15,1.187186271584256e15,1.187353506873344e15,1.18752087638016e15,1.187688245886976e15,1.18785574961152e15,1.188023387553792e15,1.188191025496064e15,1.188358797656064e15,1.188526569816064e15,1.188694476193792e15,1.188862248353792e15,1.189030288949248e15,1.189198329544704e15,1.189366504357888e15,1.1895348133888e15,1.189702988201984e15,1.189871431450624e15,1.190039740481536e15,1.190208317947904e15,1.190376895414272e15,1.190545607098368e15,1.190714318782464e15,1.19088303046656e15,1.191051876368384e15,1.191220856487936e15,1.191389836607488e15,1.191558950944768e15,1.191728065282048e15,1.191897313837056e15,1.192066562392064e15,1.1922359451648e15,1.192405327937536e15,1.192574844928e15,1.192744496136192e15,1.192914147344384e15,1.193083798552576e15,1.193253583978496e15,1.193423503622144e15,1.193593423265792e15,1.193763477127168e15,1.193933530988544e15,1.194103719067648e15,1.194273907146752e15,1.194444229443584e15,1.194614685958144e15,1.194785008254976e15,1.194955598987264e15,1.195126189719552e15,1.195296914669568e15,1.195467639619584e15,1.1956383645696e15,1.195809357955072e15,1.195980351340544e15,1.196151344726016e15,1.196322472329216e15,1.196493599932416e15,1.196664861753344e15,1.196836257792e15,1.197007653830656e15,1.19717918408704e15,1.197350580125696e15,1.197522244599808e15,1.197694043291648e15,1.19786570776576e15,1.198037640675328e15,1.198209439367168e15,1.198381506494464e15,1.19855357362176e15,1.198725774966784e15,1.198897976311808e15,1.19907031187456e15,1.199242647437312e15,1.199415117217792e15,1.199587586998272e15,1.19976019099648e15,1.199932794994688e15,1.200105533210624e15,1.200278405644288e15,1.200451278077952e15,1.200624284729344e15,1.200797291380736e15,1.200970298032128e15,1.201143573118976e15,1.201316848205824e15,1.2014902575104e15,1.201663666814976e15,1.201837076119552e15,1.202010619641856e15,1.202184297381888e15,1.20235797512192e15,1.20253178707968e15,1.20270559903744e15,1.202879679430656e15,1.203053625606144e15,1.20322770599936e15,1.203401920610304e15,1.203576135221248e15,1.20375048404992e15,1.203924832878592e15,1.204099315924992e15,1.204273798971392e15,1.20444841623552e15,1.204623167717376e15,1.204797919199232e15,1.204972804898816e15,1.2051476905984e15,1.205322710515712e15,1.205497730433024e15,1.205672884568064e15,1.205848172920832e15,1.2060234612736e15,1.206198883844096e15,1.206374306414592e15,1.206549863202816e15,1.20672541999104e15,1.206901110996992e15,1.207076802002944e15,1.207252761444352e15,1.20742872088576e15,1.207604680327168e15,1.207780773986304e15,1.20795686764544e15,1.208133095522304e15,1.208309457616896e15,1.208485819711488e15,1.208662316023808e15,1.208838812336128e15,1.209015442866176e15,1.209192073396224e15,1.209368838144e15,1.209545737109504e15,1.209722636075008e15,1.20989966925824e15,1.210076702441472e15,1.210253869842432e15,1.210431037243392e15,1.210608473079808e15,1.210785774698496e15,1.21096334475264e15,1.211140914806784e15,1.211318484860928e15,1.2114961891328e15,1.211673893404672e15,1.211851731894272e15,1.212029838819328e15,1.212207811526656e15,1.212385784233984e15,1.212564025376768e15,1.212742266519552e15,1.212920641880064e15,1.213099017240576e15,1.213277526818816e15,1.213456170614784e15,1.213634680193024e15,1.21381345820672e15,1.213992236220416e15,1.21417114845184e15,1.214350060683264e15,1.214529107132416e15,1.214708287799296e15,1.214887468466176e15,1.215066783350784e15,1.215246098235392e15,1.215425547337728e15,1.215605130657792e15,1.215784579760128e15,1.21596429729792e15,1.21614414905344e15,1.21632400080896e15,1.21650385256448e15,1.216683838537728e15,1.216863958728704e15,1.21704407891968e15,1.217224333328384e15,1.217404587737088e15,1.217585110581248e15,1.21776549920768e15,1.217946156269568e15,1.218126813331456e15,1.218307470393344e15,1.21848826167296e15,1.218669052952576e15,1.21884997844992e15,1.219031038164992e15,1.219212232097792e15,1.219393426030592e15,1.21957475418112e15,1.219756082331648e15,1.219937544699904e15,1.22011900706816e15,1.220300603654144e15,1.220482334457856e15,1.220664065261568e15,1.220845930283008e15,1.221027929522176e15,1.221209928761344e15,1.221391928000512e15,1.221574195675136e15,1.22175646334976e15,1.221938731024384e15,1.222121267134464e15,1.222303669026816e15,1.222486339354624e15,1.222668875464704e15,1.22285168001024e15,1.223034484555776e15,1.22321742331904e15,1.223400362082304e15,1.223583569281024e15,1.223766642262016e15,1.223949849460736e15,1.224133190877184e15,1.22431666651136e15,1.224500142145536e15,1.224683617779712e15,1.224867361849344e15,1.225050971701248e15,1.225234849988608e15,1.225418728275968e15,1.225602740781056e15,1.225786887503872e15,1.22597090000896e15,1.226155180949504e15,1.226339461890048e15,1.226524011266048e15,1.22670842642432e15,1.22689297580032e15,1.227077659394048e15,1.227262342987776e15,1.227447160799232e15,1.227631978610688e15,1.2278170648576e15,1.228002151104512e15,1.228187237351424e15,1.228372457816064e15,1.228557812498432e15,1.2287431671808e15,1.228928656080896e15,1.22911427919872e15,1.229299902316544e15,1.229485659652096e15,1.229671416987648e15,1.229857442758656e15,1.230043334311936e15,1.230229494300672e15,1.23041552007168e15,1.230601814278144e15,1.230788108484608e15,1.2309745369088e15,1.23116109955072e15,1.23134766219264e15,1.23153422483456e15,1.231721055911936e15,1.231907886989312e15,1.232094852284416e15,1.23228181757952e15,1.232468917092352e15,1.232656150822912e15,1.232843384553472e15,1.23303075250176e15,1.233218120450048e15,1.233405622616064e15,1.233593258999808e15,1.233780895383552e15,1.233968665985024e15,1.234156570804224e15,1.234344609841152e15,1.23453264887808e15,1.234720687915008e15,1.234908861169664e15,1.235097168642048e15,1.23528561033216e15,1.235474052022272e15,1.235662627930112e15,1.235851203837952e15,1.23603991396352e15,1.236228758306816e15,1.236417602650112e15,1.236606715428864e15,1.236795693989888e15,1.23698480676864e15,1.23717405376512e15,1.237363434979328e15,1.237552816193536e15,1.237742331625472e15,1.237931981275136e15,1.2381216309248e15,1.238311414792192e15,1.238501198659584e15,1.238691250962432e15,1.238881169047552e15,1.239071355568128e15,1.239261542088704e15,1.23945172860928e15,1.239642183565312e15,1.239832638521344e15,1.240023227695104e15,1.240213816868864e15,1.240404540260352e15,1.240595397869568e15,1.240786255478784e15,1.240977247305728e15,1.2411683733504e15,1.241359499395072e15,1.241550759657472e15,1.2417421541376e15,1.241933548617728e15,1.242125077315584e15,1.242316740231168e15,1.242508403146752e15,1.242700200280064e15,1.242891997413376e15,1.243084062982144e15,1.243276128550912e15,1.243468328337408e15,1.243660393906176e15,1.243852862128128e15,1.244045196132352e15,1.244237664354304e15,1.244430401011712e15,1.244623003451392e15,1.2448157401088e15,1.245008610983936e15,1.2452016160768e15,1.245394621169664e15,1.245587760480256e15,1.245781034008576e15,1.245974307536896e15,1.246167715282944e15,1.246361123028992e15,1.246554799210496e15,1.246748475392e15,1.246942151573504e15,1.247135961972736e15,1.247329906589696e15,1.247523985424384e15,1.2477181984768e15,1.247912411529216e15,1.248106624581632e15,1.248300971851776e15,1.248495453339648e15,1.248690069045248e15,1.248884818968576e15,1.249079568891904e15,1.249274318815232e15,1.249469337174016e15,1.2496643555328e15,1.249859508109312e15,1.250054660685824e15,1.250249947480064e15,1.250445368492032e15,1.250640923721728e15,1.250836344733696e15,1.25103203418112e15,1.251227857846272e15,1.251423815729152e15,1.251619639394304e15,1.251815731494912e15,1.25201182359552e15,1.252208049913856e15,1.25240441044992e15,1.252600770985984e15,1.252797265739776e15,1.252993894711296e15,1.253190657900544e15,1.253387286872064e15,1.25358418427904e15,1.253781215903744e15,1.253978247528448e15,1.25417541337088e15,1.254372579213312e15,1.2545700134912e15,1.254767447769088e15,1.254964882046976e15,1.25516258476032e15,1.255360287473664e15,1.255558124404736e15,1.255755961335808e15,1.255953932484608e15,1.256152037851136e15,1.256350277435392e15,1.256548517019648e15,1.256746890821632e15,1.256945264623616e15,1.257143906861056e15,1.257342414880768e15,1.257541325553664e15,1.257740102008832e15,1.257939012681728e15,1.258138057572352e15,1.258337236680704e15,1.258536415789056e15,1.258735594897408e15,1.258935042441216e15,1.259134624202752e15,1.259334205964288e15,1.259533921943552e15,1.259733637922816e15,1.259933622337536e15,1.260133472534528e15,1.260333591166976e15,1.260533844017152e15,1.260734096867328e15,1.260934349717504e15,1.261134736785408e15,1.261335392288768e15,1.261536047792128e15,1.261736703295488e15,1.261937493016576e15,1.262138416955392e15,1.262339609329664e15,1.262540667486208e15,1.26274185986048e15,1.26294318645248e15,1.263144647262208e15,1.263346108071936e15,1.263547703099392e15,1.263749432344576e15,1.26395116158976e15,1.264153025052672e15,1.264355022733312e15,1.26455715463168e15,1.264759420747776e15,1.264961686863872e15,1.265164087197696e15,1.26536648753152e15,1.265569022083072e15,1.265771690852352e15,1.26597449383936e15,1.266177431044096e15,1.266380368248832e15,1.266583305453568e15,1.26678651109376e15,1.26698985095168e15,1.2671931908096e15,1.267396664885248e15,1.267600138960896e15,1.267803881472e15,1.268007489765376e15,1.268211366494208e15,1.268415377440768e15,1.268619388387328e15,1.268823533551616e15,1.269027678715904e15,1.269232092315648e15,1.269436505915392e15,1.269641053732864e15,1.269845601550336e15,1.270050417803264e15,1.270255234056192e15,1.270460184526848e15,1.270665134997504e15,1.270870353903616e15,1.271075572809728e15,1.271280925933568e15,1.271486279057408e15,1.271691766398976e15,1.271897522176e15,1.272103277953024e15,1.272309033730048e15,1.2725149237248e15,1.27272094793728e15,1.272927106367488e15,1.273133264797696e15,1.273339557445632e15,1.273546118529024e15,1.273752679612416e15,1.273959240695808e15,1.274165935996928e15,1.274372765515776e15,1.274579729252352e15,1.274786692988928e15,1.27499392516096e15,1.275201157332992e15,1.275408389505024e15,1.275615890112512e15,1.27582339072e15,1.276031025545216e15,1.27623879458816e15,1.276446563631104e15,1.276654466891776e15,1.276862638587904e15,1.277070676066304e15,1.27727898198016e15,1.277487287894016e15,1.2776957280256e15,1.277904302374912e15,1.278113010941952e15,1.27832185372672e15,1.278530696511488e15,1.278739539296256e15,1.27894865051648e15,1.279157761736704e15,1.279367141392384e15,1.279576521048064e15,1.279785900703744e15,1.27999554879488e15,1.280205196886016e15,1.28041497919488e15,1.280624761503744e15,1.280834946465792e15,1.281044862992384e15,1.281255047954432e15,1.281465367134208e15,1.281675820531712e15,1.281886408146944e15,1.282096995762176e15,1.282307717595136e15,1.282518439428096e15,1.282729429696512e15,1.282940419964928e15,1.283151544451072e15,1.283362803154944e15,1.283574196076544e15,1.283785588998144e15,1.283997116137472e15,1.284208777494528e15,1.284420573069312e15,1.284632368644096e15,1.284844432654336e15,1.285056362446848e15,1.285268694892544e15,1.285480893120512e15,1.285693225566208e15,1.28590582644736e15,1.286118293110784e15,1.286331028209664e15,1.286543897526272e15,1.286756901060608e15,1.286969904594944e15,1.287183042347008e15,1.287396180099072e15,1.287609452068864e15,1.287822992474112e15,1.28803653287936e15,1.288250207502336e15,1.28846401634304e15,1.288677825183744e15,1.288891768242176e15,1.289105845518336e15,1.289320057012224e15,1.28953440272384e15,1.289748748435456e15,1.2899632283648e15,1.290177842511872e15,1.2903927250944e15,1.2906074734592e15,1.290822490259456e15,1.291037507059712e15,1.291252658077696e15,1.29146780909568e15,1.29168322854912e15,1.29189864800256e15,1.292114335891456e15,1.292329889562624e15,1.292545845886976e15,1.2927616679936e15,1.29297775853568e15,1.29319384907776e15,1.293410073837568e15,1.293626432815104e15,1.293842926010368e15,1.294059419205632e15,1.294276180836352e15,1.294492942467072e15,1.29470983831552e15,1.294926734163968e15,1.295143898447872e15,1.295361062731776e15,1.295578361233408e15,1.295795928170496e15,1.296013495107584e15,1.296231062044672e15,1.296448897417216e15,1.29666673278976e15,1.296884702380032e15,1.297102806188032e15,1.29732104421376e15,1.297539282239488e15,1.297757788700672e15,1.297976160944128e15,1.29819480162304e15,1.298413710737408e15,1.298632485634048e15,1.298851528966144e15,1.29907057229824e15,1.299289749848064e15,1.299509061615616e15,1.299728507600896e15,1.299948087803904e15,1.300167668006912e15,1.300387382427648e15,1.300607231066112e15,1.300827213922304e15,1.301047330996224e15,1.301267448070144e15,1.30148783357952e15,1.301708219088896e15,1.301928738816e15,1.30214952697856e15,1.302370180923392e15,1.30259110330368e15,1.302812025683968e15,1.303033216499712e15,1.303254407315456e15,1.303475732348928e15,1.303697191600128e15,1.303918650851328e15,1.304140378537984e15,1.30436210622464e15,1.304583968129024e15,1.304806098468864e15,1.305028228808704e15,1.305250224930816e15,1.305472623706112e15,1.305695156699136e15,1.30591768969216e15,1.306140356902912e15,1.306363158331392e15,1.3065860939776e15,1.306809163841536e15,1.307032233705472e15,1.307255572004864e15,1.307478910304256e15,1.307702382821376e15,1.307925989556224e15,1.308149596291072e15,1.308373471461376e15,1.308597480849408e15,1.30882149023744e15,1.3090456338432e15,1.309269911666688e15,1.309494323707904e15,1.309718869966848e15,1.309943416225792e15,1.310168230920192e15,1.310393045614592e15,1.31061799452672e15,1.310843077656576e15,1.311068429221888e15,1.3112937807872e15,1.311519132352512e15,1.31174475235328e15,1.311970372354048e15,1.312196260790272e15,1.312422149226496e15,1.312648171880448e15,1.312874328752128e15,1.313100485623808e15,1.313326910930944e15,1.313553470455808e15,1.313780029980672e15,1.314006723723264e15,1.314233685901312e15,1.314460513861632e15,1.314687610257408e15,1.314914840870912e15,1.315142205702144e15,1.315369570533376e15,1.315597069582336e15,1.315824837066752e15,1.316052604551168e15,1.316280506253312e15,1.316508542173184e15,1.316736712310784e15,1.316964882448384e15,1.31719332102144e15,1.317421893812224e15,1.317650466603008e15,1.31787917361152e15,1.31810801483776e15,1.318336990281728e15,1.318566099943424e15,1.318795343822848e15,1.31902472192e15,1.319254100017152e15,1.31948374654976e15,1.31971325886464e15,1.319943173832704e15,1.320173088800768e15,1.32040313798656e15,1.320633455607808e15,1.320863773229056e15,1.321094090850304e15,1.32132454268928e15,1.321555262963712e15,1.321785983238144e15,1.322016971948032e15,1.32224796065792e15,1.322479083585536e15,1.32271034073088e15,1.32294186631168e15,1.323173257674752e15,1.32340491747328e15,1.323636711489536e15,1.323868505505792e15,1.324100567957504e15,1.324332630409216e15,1.324564827078656e15,1.324797157965824e15,1.325029757288448e15,1.325262356611072e15,1.325495090151424e15,1.325727957909504e15,1.325960825667584e15,1.32619396186112e15,1.326427098054656e15,1.326660502683648e15,1.32689390731264e15,1.327127580377088e15,1.327361253441536e15,1.32759519494144e15,1.327829002223616e15,1.328063212158976e15,1.328297422094336e15,1.328531632029696e15,1.328766110400512e15,1.329000722989056e15,1.3292353355776e15,1.3294702166016e15,1.329705231843328e15,1.329940247085056e15,1.33017553076224e15,1.330410814439424e15,1.330646232334336e15,1.330881784446976e15,1.331117604995072e15,1.33135329132544e15,1.331589380308992e15,1.331825335074816e15,1.332061558276096e15,1.332297915695104e15,1.33253440733184e15,1.332771033186304e15,1.333007659040768e15,1.333244553330688e15,1.333481447620608e15,1.333718476128256e15,1.33395577307136e15,1.334193070014464e15,1.334430501175296e15,1.334668066553856e15,1.334905766150144e15,1.335143734181888e15,1.335381567995904e15,1.335619804463104e15,1.335858040930304e15,1.336096277397504e15,1.33633478230016e15,1.336573421420544e15,1.336812194758656e15,1.337051102314496e15,1.337290144088064e15,1.337529051643904e15,1.337768361852928e15,1.33800780627968e15,1.338247250706432e15,1.33848696356864e15,1.338726676430848e15,1.338966657728512e15,1.339206639026176e15,1.339446754541568e15,1.339687138492416e15,1.339927522443264e15,1.34016804061184e15,1.340408558780416e15,1.340649345384448e15,1.340890400423936e15,1.341131455463424e15,1.34137264472064e15,1.341613968195584e15,1.341855425888256e15,1.342097017798656e15,1.342338743926784e15,1.342580470054912e15,1.342822598836224e15,1.343064593399808e15,1.343306856398848e15,1.343549253615616e15,1.343791650832384e15,1.344034316484608e15,1.34427711635456e15,1.344519916224512e15,1.34476298452992e15,1.345006187053056e15,1.34524952379392e15,1.345492860534784e15,1.345736465711104e15,1.345980070887424e15,1.346223810281472e15,1.346467818110976e15,1.346711960158208e15,1.346956236423168e15,1.347200512688128e15,1.347444923170816e15,1.34768960208896e15,1.347934281007104e15,1.348179228360704e15,1.348424309932032e15,1.34866939150336e15,1.348914607292416e15,1.349160091516928e15,1.34940557574144e15,1.349651328401408e15,1.349897215279104e15,1.3501431021568e15,1.350389123252224e15,1.350635278565376e15,1.350881702313984e15,1.35112826028032e15,1.351374818246656e15,1.351621644648448e15,1.35186847105024e15,1.352115565887488e15,1.352362660724736e15,1.35261002399744e15,1.352857521487872e15,1.353105018978304e15,1.353352650686464e15,1.35360055083008e15,1.353848585191424e15,1.354096619552768e15,1.354344922349568e15,1.354593225146368e15,1.354841796378624e15,1.35509036761088e15,1.355339207278592e15,1.355588181164032e15,1.3558372892672e15,1.356086531588096e15,1.35633590812672e15,1.356585284665344e15,1.356834929639424e15,1.357084708831232e15,1.357334622240768e15,1.357584535650304e15,1.357834851713024e15,1.358085167775744e15,1.358335618056192e15,1.358586202554368e15,1.358836921270272e15,1.359087774203904e15,1.359338761355264e15,1.35959001694208e15,1.359841272528896e15,1.36009266233344e15,1.36034432057344e15,1.360595844595712e15,1.360847771271168e15,1.361099697946624e15,1.361351893057536e15,1.361604222386176e15,1.361856551714816e15,1.362109149478912e15,1.362361747243008e15,1.36261461344256e15,1.36286761385984e15,1.363120748494848e15,1.363374017347584e15,1.36362728620032e15,1.363880823488512e15,1.364134494994432e15,1.364388434935808e15,1.364642374877184e15,1.364896449036288e15,1.36515065741312e15,1.365405134225408e15,1.365659611037696e15,1.365914222067712e15,1.366169101533184e15,1.366423980998656e15,1.366679128899584e15,1.366934276800512e15,1.367189827354624e15,1.367445243691008e15,1.367700928462848e15,1.367956747452416e15,1.368212700659712e15,1.368468788084736e15,1.368725009727488e15,1.368981499805696e15,1.369237989883904e15,1.36949461417984e15,1.369751506911232e15,1.370008399642624e15,1.370265560809472e15,1.37052272197632e15,1.370780151578624e15,1.371037715398656e15,1.371295413436416e15,1.371553245691904e15,1.37181121216512e15,1.372069447073792e15,1.372327547764736e15,1.372586051108864e15,1.372844554452992e15,1.373103326232576e15,1.373362232229888e15,1.3736211382272e15,1.373880312659968e15,1.374139621310464e15,1.374399064178688e15,1.37465864126464e15,1.37491835256832e15,1.375178332307456e15,1.375438312046592e15,1.375698560221184e15,1.375958808395776e15,1.376219325005824e15,1.3764799758336e15,1.376740626661376e15,1.377001680142336e15,1.377262599405568e15,1.377523921321984e15,1.3777852432384e15,1.378046833590272e15,1.378308423942144e15,1.378570282729472e15,1.3788321415168e15,1.379094268739584e15,1.379356530180096e15,1.379618925838336e15,1.379881589932032e15,1.380144254025728e15,1.380407052337152e15,1.380670119084032e15,1.38093332004864e15,1.381196655230976e15,1.381459990413312e15,1.381723594031104e15,1.381987466084352e15,1.3822513381376e15,1.382515478626304e15,1.382779619115008e15,1.38304389382144e15,1.383308436963328e15,1.383573248540672e15,1.383837925900288e15,1.384103005913088e15,1.384368085925888e15,1.384633300156416e15,1.3848987828224e15,1.385164399706112e15,1.385430150807552e15,1.38569603612672e15,1.385962055663616e15,1.38622820941824e15,1.38649463160832e15,1.386761188016128e15,1.387027878641664e15,1.3872945692672e15,1.38756166254592e15,1.38782875582464e15,1.388095983321088e15,1.388363479252992e15,1.388630975184896e15,1.388898739552256e15,1.389166638137344e15,1.38943467094016e15,1.389702972178432e15,1.389971273416704e15,1.390239843090432e15,1.39050841276416e15,1.390777250873344e15,1.391046223200256e15,1.391315329744896e15,1.391584704724992e15,1.391854079705088e15,1.39212372312064e15,1.39239350075392e15,1.392663412604928e15,1.392933592891392e15,1.393203773177856e15,1.393474087682048e15,1.393744804839424e15,1.394015387779072e15,1.394286239154176e15,1.394557358964736e15,1.394828478775296e15,1.395099867021312e15,1.395371389485056e15,1.3956429119488e15,1.395914837065728e15,1.396186762182656e15,1.39645895573504e15,1.396731283505152e15,1.397003611275264e15,1.397276207480832e15,1.397549072121856e15,1.39782193676288e15,1.39809506983936e15,1.398368337133568e15,1.398641738645504e15,1.398915274375168e15,1.399189078540288e15,1.399462882705408e15,1.399736955305984e15,1.400011162124288e15,1.400285637378048e15,1.400560112631808e15,1.400834856321024e15,1.40110960001024e15,1.40138474635264e15,1.40165989269504e15,1.401935173255168e15,1.402210722250752e15,1.402486405464064e15,1.402762222895104e15,1.4030383087616e15,1.403314528845824e15,1.403590748930048e15,1.403867237449728e15,1.404143860187136e15,1.40442075136e15,1.404697642532864e15,1.404974802141184e15,1.405252095967232e15,1.405529524011008e15,1.40580722049024e15,1.4060850511872e15,1.406363016101888e15,1.406641115234304e15,1.406919348584448e15,1.407197850370048e15,1.407476486373376e15,1.407755256594432e15,1.408034295250944e15,1.408313468125184e15,1.408592640999424e15,1.40887208230912e15,1.409151657836544e15,1.409431501799424e15,1.409711479980032e15,1.40999145816064e15,1.410271838994432e15,1.410552219828224e15,1.4108330033152e15,1.411113652584448e15,1.41139470450688e15,1.411675756429312e15,1.4119570767872e15,1.412238531362816e15,1.412520254373888e15,1.412802111602688e15,1.413084103049216e15,1.413366094495744e15,1.413648488595456e15,1.413930882695168e15,1.414213545230336e15,1.414496341983232e15,1.414779272953856e15,1.415062472359936e15,1.415345805983744e15,1.415629408043008e15,1.415913010102272e15,1.416196880596992e15,1.41648088530944e15,1.416765024239616e15,1.41704929738752e15,1.41733383897088e15,1.417618648989696e15,1.417903459008512e15,1.418188537462784e15,1.418473615917056e15,1.418759097024512e15,1.419044578131968e15,1.41933032767488e15,1.41961621143552e15,1.419902363631616e15,1.420188515827712e15,1.420474936459264e15,1.420761491308544e15,1.42104831459328e15,1.421335272095744e15,1.421622363815936e15,1.421909589753856e15,1.422197084127232e15,1.422484712718336e15,1.422772475527168e15,1.423060506771456e15,1.423348672233472e15,1.423636971913216e15,1.423925405810688e15,1.424214242361344e15,1.424503078912e15,1.424792049680384e15,1.425081288884224e15,1.425370662305792e15,1.425660169945088e15,1.42594994601984e15,1.42623985631232e15,1.426530035040256e15,1.426820213768192e15,1.427110660931584e15,1.427401376530432e15,1.42769209212928e15,1.427983076163584e15,1.428274328633344e15,1.428565581103104e15,1.42885710200832e15,1.429148891348992e15,1.429440680689664e15,1.429732738465792e15,1.430024930459648e15,1.43031739088896e15,1.430609985536e15,1.430902714400768e15,1.431195711700992e15,1.431488843218944e15,1.431781974736896e15,1.432075508908032e15,1.432369311514624e15,1.432663114121216e15,1.432957185163264e15,1.43325139042304e15,1.433545729900544e15,1.433840203595776e15,1.434135079944192e15,1.434429956292608e15,1.43472510107648e15,1.435020514295808e15,1.435315927515136e15,1.43561160916992e15,1.435907425042432e15,1.436203375132672e15,1.436499727876096e15,1.43679608061952e15,1.437092567580672e15,1.437389457195008e15,1.437686346809344e15,1.437983504859136e15,1.438280797126656e15,1.438578357829632e15,1.438875918532608e15,1.439173881888768e15,1.439471979462656e15,1.439770211254272e15,1.440068711481344e15,1.440367211708416e15,1.440666114588672e15,1.440965017468928e15,1.44126418878464e15,1.44156349431808e15,1.441863202504704e15,1.4421627764736e15,1.44246275309568e15,1.442762863935488e15,1.443063108993024e15,1.443363622486016e15,1.443664404414464e15,1.443965186342912e15,1.444266102489088e15,1.444567421288448e15,1.444868874305536e15,1.445170461540352e15,1.445472317210624e15,1.445774307098624e15,1.446076431204352e15,1.446378823745536e15,1.446681350504448e15,1.446984145698816e15,1.447287075110912e15,1.447590138740736e15,1.447893470806016e15,1.448196937089024e15,1.448500671807488e15,1.448804674961408e15,1.449108812333056e15,1.449412949704704e15,1.449717489729536e15,1.450022163972096e15,1.450326972432384e15,1.450632049328128e15,1.4509372604416e15,1.4512426057728e15,1.451548219539456e15,1.451854101741568e15,1.452160118161408e15,1.452466403016704e15,1.452772822089728e15,1.453079241162752e15,1.45338606288896e15,1.453693018832896e15,1.454000243212288e15,1.454307601809408e15,1.454615094624256e15,1.45492285587456e15,1.45523088556032e15,1.455539049463808e15,1.455847481802752e15,1.456155914141696e15,1.456464614916096e15,1.456773584125952e15,1.457082687553536e15,1.457391925198848e15,1.457701565497344e15,1.45801120579584e15,1.458321114529792e15,1.4586312916992e15,1.458941603086336e15,1.459252182908928e15,1.459562896949248e15,1.459873745207296e15,1.460184727683072e15,1.460496112812032e15,1.46080763215872e15,1.461119419940864e15,1.461431341940736e15,1.461743398158336e15,1.462055588593664e15,1.462368181682176e15,1.462680908988416e15,1.462993770512384e15,1.463306900471808e15,1.463620298866688e15,1.463933697261568e15,1.464247498309632e15,1.464561433575424e15,1.464875503058944e15,1.46518984097792e15,1.465504178896896e15,1.465819053686784e15,1.466133928476672e15,1.466449071702016e15,1.466764483362816e15,1.467080029241344e15,1.4673957093376e15,1.467711657869312e15,1.468027740618752e15,1.468344091803648e15,1.468660711424e15,1.46897746526208e15,1.469294353317888e15,1.46961164402688e15,1.469928934735872e15,1.47024649388032e15,1.470564321460224e15,1.470882417475584e15,1.471200513490944e15,1.47151887794176e15,1.471837510828032e15,1.472156277932032e15,1.472475447689216e15,1.4727946174464e15,1.47311405563904e15,1.473433762267136e15,1.473753468895232e15,1.47407371239424e15,1.474393955893248e15,1.474714467827712e15,1.475035113979904e15,1.475356028567552e15,1.475677211590656e15,1.47599839461376e15,1.476319980290048e15,1.476641700184064e15,1.476963688513536e15,1.477285811060736e15,1.477608202043392e15,1.477930727243776e15,1.478253655097344e15,1.478576582950912e15,1.478899779239936e15,1.479223243964416e15,1.479546977124352e15,1.479870844502016e15,1.480194846097408e15,1.480519116128256e15,1.480843520376832e15,1.481168327278592e15,1.48149326839808e15,1.481818477953024e15,1.482143821725696e15,1.482469299716096e15,1.482795046141952e15,1.483121061003264e15,1.483447344300032e15,1.483773761814528e15,1.48410044776448e15,1.48442726793216e15,1.484754356535296e15,1.48508157935616e15,1.48540907061248e15,1.485736830304256e15,1.48606472421376e15,1.48639288655872e15,1.486721317339136e15,1.48704988233728e15,1.48737871577088e15,1.487707817639936e15,1.48803705372672e15,1.488366424031232e15,1.4886960627712e15,1.489026104164352e15,1.489356145557504e15,1.489686455386112e15,1.490017033650176e15,1.490347880349696e15,1.490678861266944e15,1.491010110619648e15,1.49134149419008e15,1.491673280413696e15,1.492005066637312e15,1.492337255514112e15,1.49266957860864e15,1.493002170138624e15,1.493334895886336e15,1.493667890069504e15,1.4940010184704e15,1.49433454952448e15,1.494668214796288e15,1.495002014285824e15,1.495336216428544e15,1.49567068700672e15,1.496005157584896e15,1.496339896598528e15,1.496674904047616e15,1.49701017993216e15,1.497345590034432e15,1.497681402789888e15,1.498017081327616e15,1.498353296736256e15,1.498689780580352e15,1.499026264424448e15,1.499363150921728e15,1.499700305854464e15,1.5000374607872e15,1.50037501837312e15,1.500712710176768e15,1.501050670415872e15,1.501388899090432e15,1.50172726198272e15,1.502065893310464e15,1.502404793073664e15,1.50274396127232e15,1.503083263688704e15,1.503422834540544e15,1.50376267382784e15,1.504102513115136e15,1.504442889273344e15,1.50478339964928e15,1.505124178460672e15,1.505465091489792e15,1.505806272954368e15,1.506147588636672e15,1.50648930697216e15,1.506831159525376e15,1.507173280514048e15,1.507515535720448e15,1.507858193580032e15,1.508200985657344e15,1.508544046170112e15,1.508887240900608e15,1.509230838284288e15,1.509574569885696e15,1.50991856992256e15,1.51026283839488e15,1.510607241084928e15,1.510951912210432e15,1.511296851771392e15,1.511642059767808e15,1.511987401981952e15,1.512333012631552e15,1.512678891716608e15,1.51302503923712e15,1.513371455193088e15,1.513718005366784e15,1.514064823975936e15,1.514411911020544e15,1.51475913228288e15,1.5151067561984e15,1.515454514331648e15,1.515802540900352e15,1.516150701686784e15,1.5164992651264e15,1.516847962783744e15,1.517197063094272e15,1.517546297622528e15,1.517895666368512e15,1.51824543776768e15,1.518595343384576e15,1.518945517436928e15,1.519295959924736e15,1.519646670848e15,1.519997515988992e15,1.52034862956544e15,1.520700145795072e15,1.521051796242432e15,1.521403715125248e15,1.52175590244352e15,1.52210822397952e15,1.522460813950976e15,1.522813672357888e15,1.523166799200256e15,1.52352019447808e15,1.52387385819136e15,1.52422752190464e15,1.524581588271104e15,1.524936057290752e15,1.525290660528128e15,1.52564553220096e15,1.52600053809152e15,1.526355812417536e15,1.526711489396736e15,1.527067300593664e15,1.527423514443776e15,1.527779728293888e15,1.528136344797184e15,1.528493229735936e15,1.528850248892416e15,1.529207536484352e15,1.529565226729472e15,1.52992305119232e15,1.530281009872896e15,1.530639371206656e15,1.530998000975872e15,1.531356899180544e15,1.531715931602944e15,1.532075366678528e15,1.532434801754112e15,1.53279463948288e15,1.533154879864832e15,1.533515254464512e15,1.53387576328192e15,1.534236674752512e15,1.53459785465856e15,1.534959168782336e15,1.535320885559296e15,1.535682736553984e15,1.536044855984128e15,1.536407378067456e15,1.536769900150784e15,1.537132824887296e15,1.537496018059264e15,1.537859479666688e15,1.538223209709568e15,1.538587208187904e15,1.538951340883968e15,1.539315742015488e15,1.539680545800192e15,1.540045618020352e15,1.54041082445824e15,1.540776165113856e15,1.541142042640384e15,1.541507920166912e15,1.541874334564352e15,1.54224088317952e15,1.542607700230144e15,1.542974651498496e15,1.543342005420032e15,1.543709627777024e15,1.544077518569472e15,1.544445677797376e15,1.544814105460736e15,1.545182533124096e15,1.545551631876096e15,1.545920730628096e15,1.54629023203328e15,1.546659867656192e15,1.547029905932288e15,1.547400078426112e15,1.54777065357312e15,1.548141362937856e15,1.548512474955776e15,1.548883721191424e15,1.549255370080256e15,1.549627018969088e15,1.549999070511104e15,1.550371658924032e15,1.55074424733696e15,1.551117104185344e15,1.551490363686912e15,1.551863757406208e15,1.55223741956096e15,1.552611484368896e15,1.552985817612288e15,1.553360285073408e15,1.553735020969984e15,1.554110159519744e15,1.55448556650496e15,1.554861107707904e15,1.555237051564032e15,1.555613263855616e15,1.555989610364928e15,1.556366225309696e15,1.556743242907648e15,1.557120528941056e15,1.55749808340992e15,1.55787590631424e15,1.558253997654016e15,1.55863222321152e15,1.559010985639936e15,1.55938988228608e15,1.55976904736768e15,1.560148615102464e15,1.560528182837248e15,1.560908153225216e15,1.561288526266368e15,1.561669033525248e15,1.562049943437312e15,1.562431121784832e15,1.56281243435008e15,1.563194149568512e15,1.5635761332224e15,1.563958385311744e15,1.564340905836544e15,1.564723829014528e15,1.565106752192512e15,1.565490212241408e15,1.565873806508032e15,1.566257669210112e15,1.566641934565376e15,1.567026468356096e15,1.567411136364544e15,1.567796207026176e15,1.568181680340992e15,1.568567287873536e15,1.568953298059264e15,1.569339308244992e15,1.569725855301632e15,1.570112670793728e15,1.570499620503552e15,1.570887107084288e15,1.571274727882752e15,1.571662617116672e15,1.572050909003776e15,1.572439335108608e15,1.572828163866624e15,1.573217126842368e15,1.573606492471296e15,1.57399612653568e15,1.574386163253248e15,1.574776334188544e15,1.575166907777024e15,1.57555774980096e15,1.575948860260352e15,1.5763402391552e15,1.576731886485504e15,1.577123802251264e15,1.577516120670208e15,1.577908707524608e15,1.578301697032192e15,1.578694686539776e15,1.579088078700544e15,1.579481873514496e15,1.579875936763904e15,1.580270268448768e15,1.580664868569088e15,1.581059737124864e15,1.581455008333824e15,1.58185054797824e15,1.582246356058112e15,1.58264243257344e15,1.583038777524224e15,1.583435525128192e15,1.583832541167616e15,1.584229825642496e15,1.58462751277056e15,1.58502546833408e15,1.5854234238976e15,1.585821916332032e15,1.586220811419648e15,1.58661997494272e15,1.58701927268352e15,1.587419107295232e15,1.587818941906944e15,1.588219313389568e15,1.588619953307648e15,1.589020861661184e15,1.589422038450176e15,1.589823617892352e15,1.590225465769984e15,1.590627582083072e15,1.591030101049344e15,1.591432754233344e15,1.591835810070528e15,1.592239134343168e15,1.592642861268992e15,1.593046722412544e15,1.59345098620928e15,1.5938556526592e15,1.594260453326848e15,1.59466565664768e15,1.595071262621696e15,1.595477137031168e15,1.595883279876096e15,1.59628969115648e15,1.59669637087232e15,1.597103453241344e15,1.597510804045824e15,1.597918557503488e15,1.598326579396608e15,1.598734869725184e15,1.599143428489216e15,1.599552389906432e15,1.599961619759104e15,1.600371118047232e15,1.600781018988544e15,1.601191188365312e15,1.601601760395264e15,1.602012466642944e15,1.602423709761536e15,1.602835221315584e15,1.603247001305088e15,1.603659049730048e15,1.604071500808192e15,1.604484220321792e15,1.604897208270848e15,1.605310598873088e15,1.605724257910784e15,1.606138185383936e15,1.606552515510272e15,1.606967248289792e15,1.607382249504768e15,1.6077975191552e15,1.608213191458816e15,1.60862899798016e15,1.609045341372416e15,1.609461953200128e15,1.609878833463296e15,1.61029598216192e15,1.610713667731456e15,1.61113148751872e15,1.611549709959168e15,1.611968200835072e15,1.61238709436416e15,1.612806256328704e15,1.613225820946432e15,1.613645519781888e15,1.614065755488256e15,1.614486393847808e15,1.61490703220736e15,1.615328207437824e15,1.615749785321472e15,1.616171631640576e15,1.616593746395136e15,1.61701626380288e15,1.617438915428352e15,1.617862103924736e15,1.618285560856576e15,1.6187094204416e15,1.61913354846208e15,1.619557944918016e15,1.619982744027136e15,1.62040794578944e15,1.6208334159872e15,1.621259154620416e15,1.621685430124544e15,1.6221118398464e15,1.622538518003712e15,1.622965733031936e15,1.623393216495616e15,1.62382110261248e15,1.6242492571648e15,1.624677680152576e15,1.625106640011264e15,1.625535868305408e15,1.62596523081728e15,1.626395130200064e15,1.626825298018304e15,1.627255868489728e15,1.627686707396608e15,1.6281180831744e15,1.62854959316992e15,1.628981505818624e15,1.629413821120512e15,1.629846270640128e15,1.630279257030656e15,1.630712646074368e15,1.631146303553536e15,1.631580363685888e15,1.632014558035968e15,1.63244928925696e15,1.632884423131136e15,1.633319825440768e15,1.633755496185856e15,1.6341914353664e15,1.634627911417856e15,1.635064655904768e15,1.635501803044864e15,1.635939218620416e15,1.63637717106688e15,1.6368153919488e15,1.637253881266176e15,1.637692773236736e15,1.63813206786048e15,1.638571496701952e15,1.639011462414336e15,1.639451830779904e15,1.6398923333632e15,1.640333372817408e15,1.6407748149248e15,1.641216659685376e15,1.64165863866368e15,1.642101020295168e15,1.64254380457984e15,1.642986991517696e15,1.643430581108736e15,1.643874304917504e15,1.644318699814912e15,1.644763228930048e15,1.645208160698368e15,1.645653495119872e15,1.64609923219456e15,1.646545237704704e15,1.646991645868032e15,1.647438322466816e15,1.647885535936512e15,1.648333017841664e15,1.6487809024e15,1.649229055393792e15,1.649677611040768e15,1.650126569340928e15,1.650575930294272e15,1.651025559683072e15,1.651475591725056e15,1.651926026420224e15,1.652376997986304e15,1.652828103770112e15,1.653279477989376e15,1.653731389079552e15,1.654183702822912e15,1.654636419219456e15,1.655089404051456e15,1.655542657318912e15,1.655996581675008e15,1.656450640248832e15,1.65690510147584e15,1.657359965356032e15,1.657815366107136e15,1.658271035293696e15,1.658726972915712e15,1.659183313190912e15,1.659640056119296e15,1.660097201700864e15,1.660554749935616e15,1.661012700823552e15,1.661470920146944e15,1.661929676341248e15,1.66238856675328e15,1.662847994036224e15,1.66330795819008e15,1.663767922343936e15,1.664228423368704e15,1.664689461264384e15,1.66515076759552e15,1.665612610797568e15,1.666074588217344e15,1.666537102508032e15,1.666999885234176e15,1.66746333904896e15,1.667926792863744e15,1.66839078354944e15,1.668855311106048e15,1.669319972880384e15,1.66978530574336e15,1.670250772824064e15,1.67071677677568e15,1.67118318338048e15,1.671649858420736e15,1.672116936114176e15,1.672584550678528e15,1.673052433678336e15,1.673520853549056e15,1.673989407637504e15,1.674458632814592e15,1.674928126427136e15,1.675398022692864e15,1.675868321611776e15,1.676339023183872e15,1.676809993191424e15,1.677281500069888e15,1.677753409601536e15,1.678225721786368e15,1.678698302406656e15,1.679171419897856e15,1.679644805824512e15,1.68011872862208e15,1.680593054072832e15,1.681067782176768e15,1.68154277871616e15,1.682018312126464e15,1.682494113972224e15,1.682970318471168e15,1.683447194058752e15,1.683924203864064e15,1.684401750540288e15,1.684879699869696e15,1.68535791763456e15,1.685836672270336e15,1.686315829559296e15,1.686795255283712e15,1.687275352096768e15,1.68775571734528e15,1.688236351029248e15,1.688717655801856e15,1.68919922900992e15,1.689681339088896e15,1.690163717603328e15,1.690646632988672e15,1.691129682591744e15,1.691613403283456e15,1.69209766084608e15,1.692582052626432e15,1.693066847059968e15,1.693552312582144e15,1.694038046539776e15,1.694524183150592e15,1.695010722414592e15,1.695497798549504e15,1.695985143119872e15,1.696473024561152e15,1.696961174437888e15,1.697449995403264e15,1.697939084804096e15,1.698428576858112e15,1.698918471565312e15,1.699408903143424e15,1.69989973737472e15,1.7003909742592e15,1.700882748014592e15,1.701374655987712e15,1.701867100831744e15,1.702360216764416e15,1.702853466914816e15,1.703347253936128e15,1.703841443610624e15,1.704336170156032e15,1.704831299354624e15,1.705326696988672e15,1.70582276571136e15,1.706319102869504e15,1.706815842680832e15,1.7073132535808e15,1.707810932916224e15,1.708309014904832e15,1.708807499546624e15,1.709306521059328e15,1.709805945225216e15,1.710305772044288e15,1.710806135734272e15,1.71130690207744e15,1.71180820529152e15,1.712309642723328e15,1.712811751243776e15,1.713314396635136e15,1.713817310461952e15,1.714320626941952e15,1.714824480292864e15,1.715328870514688e15,1.715833529171968e15,1.71633872470016e15,1.716844322881536e15,1.717350323716096e15,1.717856995639296e15,1.718363935997952e15,1.718871279009792e15,1.719379158892544e15,1.71988744142848e15,1.720396260835328e15,1.72090548289536e15,1.721415241826304e15,1.721925134974976e15,1.722435833430016e15,1.722946800320512e15,1.723458438299648e15,1.72397034471424e15,1.724482653782016e15,1.724995633938432e15,1.725509016748032e15,1.726022667993088e15,1.726536990326784e15,1.727051581095936e15,1.727566708736e15,1.728082373246976e15,1.728598574628864e15,1.729115044446208e15,1.729631916916736e15,1.730149460475904e15,1.730667406688256e15,1.731185755553792e15,1.73170464129024e15,1.732223929679872e15,1.732743754940416e15,1.733263982854144e15,1.733784613421056e15,1.734306049294336e15,1.734827619385344e15,1.735349726347264e15,1.735872370180096e15,1.73639555088384e15,1.736919134240768e15,1.73744312025088e15,1.737967643131904e15,1.738492568666112e15,1.739018031071232e15,1.739543896129536e15,1.740070298058752e15,1.74059723685888e15,1.741124578312192e15,1.741652456636416e15,1.742180871831552e15,1.742709555462144e15,1.743239044399104e15,1.74376880177152e15,1.74429896179712e15,1.74482979291136e15,1.745361026678784e15,1.745892663099392e15,1.746424836390912e15,1.746957546553344e15,1.74749065936896e15,1.748024309055488e15,1.748558629830656e15,1.749093353259008e15,1.749628345122816e15,1.750164008075264e15,1.750700073680896e15,1.75123667615744e15,1.751773949722624e15,1.752311357505536e15,1.752849570594816e15,1.75338818633728e15,1.753927204732928e15,1.754466894217216e15,1.755006986354688e15,1.755547481145344e15,1.756088512806912e15,1.75663021555712e15,1.757172186742784e15,1.757714829017088e15,1.758257873944576e15,1.758801455742976e15,1.759345574412288e15,1.75989036417024e15,1.76043528814592e15,1.760981017427968e15,1.761527015145472e15,1.762073818169344e15,1.762620755410944e15,1.763168497958912e15,1.763716643160064e15,1.764265459449856e15,1.764814544175104e15,1.765364165771264e15,1.765914458456064e15,1.766465153794048e15,1.767016386002944e15,1.767568155082752e15,1.768120461033472e15,1.768673303855104e15,1.76922654932992e15,1.769780331675648e15,1.770334650892288e15,1.770889641197568e15,1.771445034156032e15,1.772000963985408e15,1.772557430685696e15,1.773114300039168e15,1.773671974699008e15,1.774229917794304e15,1.77478853197824e15,1.775347414597632e15,1.775907102523392e15,1.776467193102336e15,1.77702795476992e15,1.777589119090688e15,1.778150954500096e15,1.778713192562688e15,1.779275967496192e15,1.779839279300608e15,1.780403127975936e15,1.780967647739904e15,1.781532435939328e15,1.782097895227392e15,1.78266375716864e15,1.783230424416256e15,1.783797628534784e15,1.784365101088768e15,1.78493337894912e15,1.785502059462656e15,1.786071411064832e15,1.786641165320192e15,1.787211590664192e15,1.787782418661376e15,1.788353783529472e15,1.788925953703936e15,1.789498392313856e15,1.790071502012416e15,1.790645148581888e15,1.791219332022272e15,1.791794052333568e15,1.792369443733504e15,1.792945372004352e15,1.793521702928384e15,1.794098704941056e15,1.79467624382464e15,1.795254185361408e15,1.795833066422272e15,1.796412081700864e15,1.796992036503552e15,1.797572259741696e15,1.79815315406848e15,1.798734719483904e15,1.799316687552512e15,1.79989932670976e15,1.800482368520192e15,1.801066081419264e15,1.801650331189248e15,1.802235252047872e15,1.80282057555968e15,1.803406704377856e15,1.803993235849216e15,1.804580304191488e15,1.8051680436224e15,1.805756454141952e15,1.80634513309696e15,1.806934751576064e15,1.807524638490624e15,1.808115330711552e15,1.808706425585664e15,1.809298191548416e15,1.809890628599808e15,1.810483468304384e15,1.8110769790976e15,1.811671026761728e15,1.812265879732224e15,1.812861001138176e15,1.813456927850496e15,1.814053257216e15,1.814650257670144e15,1.815247929212928e15,1.815846137626624e15,1.81644501712896e15,1.81704429928448e15,1.81764425252864e15,1.81824487686144e15,1.818846038065152e15,1.819447870357504e15,1.820050239520768e15,1.820653145554944e15,1.82125672267776e15,1.821860970889216e15,1.822465621753856e15,1.823071077924864e15,1.823677070966784e15,1.824283600879616e15,1.824890801881088e15,1.825498539753472e15,1.826106948714496e15,1.82671602876416e15,1.827325511467008e15,1.827935799476224e15,1.828546624356352e15,1.829157986107392e15,1.8297701531648e15,1.830382991310848e15,1.830996097892352e15,1.831610009780224e15,1.832224592756736e15,1.83283971260416e15,1.833455369322496e15,1.8340718313472e15,1.834688830242816e15,1.835306500227072e15,1.835924841299968e15,1.836543585026048e15,1.837163268276224e15,1.837783488397312e15,1.838404111171584e15,1.839025539252224e15,1.839647504203776e15,1.840270140243968e15,1.840893581590528e15,1.841517425590272e15,1.842141940678656e15,1.842767261073408e15,1.843392984121344e15,1.844019512475648e15,1.844646711918592e15,1.84527431401472e15,1.845902721417216e15,1.846531799908352e15,1.8471614152704e15,1.847791835938816e15,1.848422659260416e15,1.849054287888384e15,1.849686587604992e15,1.85031955841024e15,1.8509530660864e15,1.8515872448512e15,1.852222228922368e15,1.852857749864448e15,1.853493941895168e15,1.8541306707968e15,1.8547682050048e15,1.855406276083712e15,1.85604528668672e15,1.856684431507456e15,1.857324650070016e15,1.857965539721216e15,1.8586068320256e15,1.859248929636352e15,1.8598919667712e15,1.860535272341504e15,1.861179517435904e15,1.861824299401216e15,1.862469752455168e15,1.863115742380032e15,1.863762671828992e15,1.864410003931136e15,1.865058141339648e15,1.865707218272256e15,1.86635656364032e15,1.86700684853248e15,1.867657670295552e15,1.868309028929536e15,1.868961461305344e15,1.869614430552064e15,1.870267802451968e15,1.870922113875968e15,1.871577096388608e15,1.872232749989888e15,1.872889208897536e15,1.873546204676096e15,1.874203871543296e15,1.874862477934592e15,1.875521486979072e15,1.87618130132992e15,1.876841920987136e15,1.877503077515264e15,1.87816503934976e15,1.878827538055168e15,1.879490842066944e15,1.88015481716736e15,1.880819597574144e15,1.881485049069568e15,1.882151037435904e15,1.882817965326336e15,1.88348543008768e15,1.884153700155392e15,1.884822775529472e15,1.885492387774464e15,1.886162805325824e15,1.886833893965824e15,1.887505653694464e15,1.8881783529472e15,1.888851589070848e15,1.889525496283136e15,1.89020034301952e15,1.890875726626816e15,1.891551781322752e15,1.892228641325056e15,1.892906306633728e15,1.893584777248768e15,1.89426378473472e15,1.894943463309312e15,1.895624081408e15,1.896305370595328e15,1.896987330871296e15,1.89767023067136e15,1.898353533124608e15,1.899037640884224e15,1.899722822385664e15,1.900408540758016e15,1.90109479600128e15,1.901782124986368e15,1.902470125060096e15,1.903158662004736e15,1.903848004255744e15,1.904538286030848e15,1.905229238894592e15,1.905920862846976e15,1.906613292105728e15,1.907306526670848e15,1.908000432324608e15,1.908695143284736e15,1.909390659551232e15,1.910086846906368e15,1.910783839567872e15,1.911481637535744e15,1.912180106592256e15,1.912879380955136e15,1.913579326406656e15,1.914280211382272e15,1.914981901664256e15,1.915684128817152e15,1.916387295494144e15,1.917091267477504e15,1.917795776331776e15,1.918501358927872e15,1.919207746830336e15,1.919914671603712e15,1.920622401683456e15,1.921331071287296e15,1.922040277762048e15,1.922750423760896e15,1.923461375066112e15,1.924173265895424e15,1.924885693595648e15,1.925599060819968e15,1.926313233350656e15,1.927028076969984e15,1.92774372589568e15,1.928460314345472e15,1.929177708101632e15,1.929895638728704e15,1.9306146430976e15,1.931334318555136e15,1.93205479931904e15,1.93277621960704e15,1.93349831098368e15,1.93422107344896e15,1.934944909656064e15,1.935669551169536e15,1.936394863771648e15,1.937121115897856e15,1.937848173330432e15,1.938575901851648e15,1.93930456989696e15,1.94003404324864e15,1.94076418768896e15,1.941495540088832e15,1.942227563577344e15,1.942960123936768e15,1.943693892255744e15,1.94442833166336e15,1.945163576377344e15,1.945899626397696e15,1.946636481724416e15,1.947374276575232e15,1.948112876732416e15,1.948852416413696e15,1.949592761401344e15,1.95033391169536e15,1.951075867295744e15,1.951818762420224e15,1.952562462851072e15,1.95330683437056e15,1.954052279631872e15,1.95479866441728e15,1.9555455860736e15,1.956293581471744e15,1.957042516393984e15,1.957792122404864e15,1.95854266793984e15,1.959294018781184e15,1.960046309146624e15,1.96079953903616e15,1.961553440014336e15,1.962308280516608e15,1.963064194760704e15,1.96382078009344e15,1.964578304950272e15,1.965336635113472e15,1.966096039018496e15,1.966855979794432e15,1.967616994312192e15,1.968378948354048e15,1.969141707702272e15,1.969905406574592e15,1.970670044971008e15,1.971435354456064e15,1.972201871900672e15,1.97296906043392e15,1.973737188491264e15,1.974506256072704e15,1.975275994742784e15,1.976046941372416e15,1.976818693308416e15,1.977591384768512e15,1.978364881534976e15,1.979139317825536e15,1.97991482785792e15,1.980691008978944e15,1.981468263841792e15,1.982246324011008e15,1.983025457922048e15,1.983805397139456e15,1.984586141663232e15,1.985367959928832e15,1.986150851936256e15,1.98693441503232e15,1.98771891765248e15,1.988504494014464e15,1.989290741465088e15,1.990078196875264e15,1.990866591809536e15,1.991655926267904e15,1.992445931814912e15,1.993237145321472e15,1.9940291641344e15,1.994822122471424e15,1.995616288768e15,1.996410991935488e15,1.997207037280256e15,1.998003887931392e15,1.998801543888896e15,1.999600273588224e15,2.00039980859392e15,2.001200551559168e15,2.002002234048512e15,2.002804856061952e15,2.00360828338176e15,2.004412784443392e15,2.00521822502912e15,2.006024605138944e15,2.00683219320832e15,2.007640452366336e15,2.008449785266176e15,2.009260326125568e15,2.0100715380736e15,2.010883823763456e15,2.011697183195136e15,2.012511347933184e15,2.013326720630784e15,2.014143167070208e15,2.014960150380544e15,2.015778610085888e15,2.0165978750976e15,2.01741794541568e15,2.018239223693312e15,2.019061575712768e15,2.01988486725632e15,2.020709098323968e15,2.02153440313344e15,2.022360781684736e15,2.0231879655424e15,2.024016223141888e15,2.0248455544832e15,2.025676093784064e15,2.026507304173568e15,2.027339722522624e15,2.028173214613504e15,2.029007780446208e15,2.029843285803008e15,2.030679730683904e15,2.031517249306624e15,2.032355975888896e15,2.033195507777536e15,2.034036247625728e15,2.034877792780288e15,2.035720814329856e15,2.036564506968064e15,2.037409407565824e15,2.038255381905408e15,2.03910216155136e15,2.03995041759232e15,2.040799478939648e15,2.041649479811072e15,2.042500822859776e15,2.043353239650304e15,2.044206595964928e15,2.04506075758592e15,2.045916529819648e15,2.046772838924288e15,2.047630624423936e15,2.04848934944768e15,2.049349148213248e15,2.05021002072064e15,2.051072101187584e15,2.051935121178624e15,2.052799214911488e15,2.053664382386176e15,2.054530892038144e15,2.055398341214208e15,2.056266864132096e15,2.057136460791808e15,2.058007131193344e15,2.058879009554432e15,2.059751961657344e15,2.06062598750208e15,2.061501221306368e15,2.06237752885248e15,2.063254910140416e15,2.064133499387904e15,2.065013162377216e15,2.065893899108352e15,2.066775978016768e15,2.067658862231552e15,2.068543088623616e15,2.069428522975232e15,2.070314896850944e15,2.071202478686208e15,2.072091268481024e15,2.072981132017664e15,2.073872069296128e15,2.074764348751872e15,2.075657567731712e15,2.076552128888832e15,2.077447763787776e15,2.078344740864e15,2.07924265746432e15,2.080141513588736e15,2.081041980325888e15,2.081943655022592e15,2.082846000807936e15,2.083749957206016e15,2.08465498734592e15,2.08556095700992e15,2.086468403068928e15,2.087377057087488e15,2.088286650630144e15,2.08919758635008e15,2.090109864247296e15,2.091023081668608e15,2.091937507049472e15,2.092853274607616e15,2.093770115907584e15,2.094688299384832e15,2.095607690821632e15,2.096528290217984e15,2.097449829138432e15,2.098372978671616e15,2.099296933511168e15,2.100222498963456e15,2.10114900393984e15,2.102076985311232e15,2.103006174642176e15,2.103936303497216e15,2.104867908747264e15,2.105800856174592e15,2.106734743126016e15,2.107670106472448e15,2.108606677778432e15,2.109544457043968e15,2.110483444269056e15,2.111423773671424e15,2.112365311033344e15,2.113308056354816e15,2.114252278071296e15,2.115197439311872e15,2.116144076947456e15,2.11709205676032e15,2.118041110315008e15,2.118991506046976e15,2.11994351239168e15,2.120896324042752e15,2.12185074630656e15,2.122806108094464e15,2.123762946277376e15,2.124721126637568e15,2.12568064917504e15,2.126641513889792e15,2.127603452346368e15,2.128566867197952e15,2.129531490009088e15,2.130497454997504e15,2.131464896380928e15,2.132433411506176e15,2.13340353724416e15,2.134374736723968e15,2.135347278381056e15,2.136321296433152e15,2.137296388227072e15,2.138273090633728e15,2.139251135217664e15,2.140230387761152e15,2.14121098248192e15,2.142193053597696e15,2.143176198455296e15,2.144160953925632e15,2.145147051573248e15,2.146134357180416e15,2.147123139182592e15,2.148113531797504e15,2.149104729718784e15,2.150097672470528e15,2.151091957399552e15,2.152087718723584e15,2.153084688007168e15,2.154083267903488e15,2.155082921541632e15,2.156084185792512e15,2.157086658002944e15,2.158090740826112e15,2.15909616582656e15,2.160103067222016e15,2.161111042359296e15,2.162120896544768e15,2.163131824472064e15,2.16414409457664e15,2.165158243729408e15,2.166173466624e15,2.1671901659136e15,2.168208341598208e15,2.169227993677824e15,2.170249122152448e15,2.171271592804352e15,2.172295405633536e15,2.173320829075456e15,2.174347728912384e15,2.175375970926592e15,2.176405823553536e15,2.17743701835776e15,2.178469555339264e15,2.179503837151232e15,2.18053946114048e15,2.181576561524736e15,2.182615272521728e15,2.183655325696e15,2.18469685526528e15,2.185739861229568e15,2.186784477806592e15,2.187830436560896e15,2.188878005927936e15,2.18992732012544e15,2.190977708064768e15,2.19202984083456e15,2.193083718434816e15,2.194138535559168e15,2.195195231731712e15,2.196253404299264e15,2.197313187479552e15,2.198374447054848e15,2.199437183025152e15,2.200501529608192e15,2.20156735258624e15,2.202634786177024e15,2.203703830380544e15,2.204774350979072e15,2.205846482190336e15,2.206920089796608e15,2.207995308015616e15,2.209072271065088e15,2.210150442074112e15,2.211230626349056e15,2.212312018583552e15,2.213395155648512e15,2.214480037543936e15,2.21556626161664e15,2.21665409630208e15,2.217743675817984e15,2.218834731728896e15,2.219927532470272e15,2.221022078042112e15,2.222117831573504e15,2.223215464153088e15,2.224314707345408e15,2.225415695368192e15,2.226518159785984e15,2.227622503251968e15,2.228727920459776e15,2.22983561936896e15,2.23094492889088e15,2.232055446372352e15,2.233167708684288e15,2.234281850044416e15,2.235397736235008e15,2.236515098820608e15,2.237634206236672e15,2.238754924265472e15,2.239877387124736e15,2.241001729032192e15,2.242127413116928e15,2.243255110467584e15,2.244384418430976e15,2.245515068571648e15,2.246648000413696e15,2.247782274433024e15,2.248918427500544e15,2.250056325398528e15,2.25119569969152e15,2.252336953032704e15,2.253480219639808e15,2.254624828424192e15,2.255771316256768e15,2.256919683137536e15,2.25806966063104e15,2.259221517172736e15,2.260374984327168e15,2.261530330529792e15,2.262687287345152e15,2.263846123208704e15,2.265006838120448e15,2.266169163644928e15,2.2673333682176e15,2.268499451838464e15,2.26966741450752e15,2.270836987789312e15,2.272008440119296e15,2.273181771497472e15,2.274356713488384e15,2.275533802962944e15,2.27671250305024e15,2.277892813750272e15,2.279075540369408e15,2.280259609165824e15,2.281445825445888e15,2.282633652338688e15,2.28382335827968e15,2.28501521170432e15,2.286208675741696e15,2.287404018827264e15,2.28860150939648e15,2.289800342142976e15,2.291001590808576e15,2.292204450086912e15,2.29340918841344e15,2.294616074223616e15,2.295824570646528e15,2.297035214553088e15,2.29824773750784e15,2.299462139510784e15,2.30067842056192e15,2.301896849096704e15,2.303116888244224e15,2.304339074875392e15,2.305563140554752e15,2.306789085282304e15,2.308017177493504e15,2.309247148752896e15,2.31047899906048e15,2.311712996851712e15,2.312948873691136e15,2.314186629578752e15,2.315426532950016e15,2.316668583804928e15,2.317912245272576e15,2.319158054223872e15,2.320406010658816e15,2.321655846141952e15,2.322907829108736e15,2.324161691123712e15,2.325417700622336e15,2.326675857604608e15,2.327935625199616e15,2.329197808713728e15,2.330461871276032e15,2.331728081321984e15,2.332996438851584e15,2.334266943864832e15,2.335539059490816e15,2.33681385947136e15,2.33809027006464e15,2.339369096577024e15,2.3406498021376e15,2.341932655181824e15,2.343217924145152e15,2.344504803721216e15,2.345794099216384e15,2.3470855421952e15,2.348379132657664e15,2.34967460216832e15,2.35097248759808e15,2.352272520511488e15,2.353574700908544e15,2.354878760353792e15,2.356185235718144e15,2.357493858566144e15,2.358804628897792e15,2.360117546713088e15,2.361432880447488e15,2.362750361665536e15,2.364069990367232e15,2.365391766552576e15,2.366715690221568e15,2.368042029809664e15,2.369370516881408e15,2.370701419872256e15,2.372034201911296e15,2.37336939986944e15,2.374707013746688e15,2.376046775107584e15,2.377388683952128e15,2.378733008715776e15,2.380079480963072e15,2.381428637564928e15,2.382779673214976e15,2.384133124784128e15,2.385488723836928e15,2.386847007244288e15,2.388207438135296e15,2.389570016509952e15,2.390935010803712e15,2.392302689452032e15,2.393672515584e15,2.395044489199616e15,2.396418878734336e15,2.397795952623616e15,2.399175173996544e15,2.400556811288576e15,2.401940596064256e15,2.403327065194496e15,2.404715681808384e15,2.406107251212288e15,2.407500699664384e15,2.40889683247104e15,2.4102953811968e15,2.411696345841664e15,2.413099457970176e15,2.414505522888704e15,2.41591373529088e15,2.41732436361216e15,2.418737676288e15,2.420153404882944e15,2.421571549396992e15,2.4229923782656e15,2.424415354617856e15,2.425841283760128e15,2.427269360386048e15,2.428700121366528e15,2.430133298266112e15,2.431569159520256e15,2.43300770512896e15,2.434448666656768e15,2.43589204410368e15,2.437338105905152e15,2.438786852061184e15,2.44023801413632e15,2.441691860566016e15,2.443148391350272e15,2.444607338053632e15,2.446068969111552e15,2.447533284524032e15,2.449000015855616e15,2.450469699977216e15,2.45194180001792e15,2.453416584413184e15,2.454894321598464e15,2.456374474702848e15,2.457857312161792e15,2.459342833975296e15,2.46083104014336e15,2.462321930665984e15,2.463815505543168e15,2.465312301645824e15,2.466811245232128e15,2.468313141608448e15,2.469817722339328e15,2.471324987424768e15,2.472835205300224e15,2.47434810753024e15,2.475863962550272e15,2.477382233489408e15,2.47890345721856e15,2.480427633737728e15,2.481954494611456e15,2.483484039839744e15,2.485016806293504e15,2.486551988666368e15,2.488090392264704e15,2.4896314802176e15,2.491175520960512e15,2.492722246057984e15,2.494271923945472e15,2.495824554622976e15,2.497380138090496e15,2.498938674348032e15,2.500499894960128e15,2.50206406836224e15,2.503631462989824e15,2.505201541971968e15,2.506774573744128e15,2.50835082674176e15,2.509929764093952e15,2.511511922671616e15,2.513097034039296e15,2.514684829761536e15,2.516276115144704e15,2.517870084882432e15,2.519467275845632e15,2.521067419598848e15,2.52267051614208e15,2.524276833910784e15,2.52588637290496e15,2.527498596253696e15,2.52911430926336e15,2.53073297506304e15,2.532354593652736e15,2.53397970190336e15,2.535607494508544e15,2.5372385083392e15,2.538873011830784e15,2.540510468112384e15,2.542151145619456e15,2.543794775916544e15,2.54544189587456e15,2.547091968622592e15,2.548745531031552e15,2.550402314665984e15,2.552062051090432e15,2.553725008740352e15,2.5553914560512e15,2.55706112458752e15,2.558734014349312e15,2.560410393772032e15,2.562089725984768e15,2.563772547858432e15,2.565458859393024e15,2.567148392153088e15,2.568840877703168e15,2.570537389785088e15,2.572236586221568e15,2.573939540754432e15,2.575645716512768e15,2.577355650367488e15,2.57906880544768e15,2.580785181753344e15,2.582505316155392e15,2.584228403347456e15,2.58595551707136e15,2.587685852020736e15,2.589419408195584e15,2.591156722466816e15,2.592897794834432e15,2.594641819992064e15,2.59638960324608e15,2.59814114459648e15,2.599895907172352e15,2.601654427844608e15,2.603416438177792e15,2.60518220660736e15,2.6069511962624e15,2.60872421244928e15,2.610500449861632e15,2.612280713805824e15,2.614064467410944e15,2.615851979112448e15,2.61764298047488e15,2.619437739933696e15,2.62123598905344e15,2.623038264705024e15,2.624844030017536e15,2.626653821861888e15,2.628467103367168e15,2.630284142968832e15,2.632105209102336e15,2.633929764896768e15,2.63575834722304e15,2.63759041921024e15,2.63942651772928e15,2.64126664278016e15,2.643110525927424e15,2.644958167171072e15,2.64680983494656e15,2.648665260818432e15,2.650524713222144e15,2.65238792372224e15,2.65425489231872e15,2.656126424317952e15,2.658001445978112e15,2.659880494170112e15,2.661763568893952e15,2.663650670149632e15,2.665541797937152e15,2.667436952256512e15,2.669336133107712e15,2.671239608926208e15,2.673146842841088e15,2.675058103287808e15,2.67697392713728e15,2.678893509083136e15,2.680817117560832e15,2.682745021005824e15,2.684677219418112e15,2.686613712797696e15,2.68855423270912e15,2.690498779152384e15,2.692447620562944e15,2.694401025376256e15,2.696358188285952e15,2.698320183033856e15,2.700285935878144e15,2.702256252125184e15,2.704231131774976e15,2.706210037956608e15,2.708193239105536e15,2.71018073522176e15,2.712173063176192e15,2.714169149227008e15,2.716170335551488e15,2.718175548407808e15,2.72018532466688e15,2.722199395893248e15,2.724218298957824e15,2.72624122855424e15,2.728268989988864e15,2.73030131482624e15,2.732337934630912e15,2.734379386273792e15,2.736425401319424e15,2.738475979767808e15,2.740530853183488e15,2.742590826872832e15,2.744655095529472e15,2.74672419602432e15,2.74879785992192e15,2.750876624093184e15,2.752959683231744e15,2.755047574208512e15,2.757140565458944e15,2.759237851676672e15,2.761339969732608e15,2.763447188062208e15,2.765559238230016e15,2.767675851800576e15,2.7697975656448e15,2.771924111327232e15,2.774055488847872e15,2.776191966642176e15,2.778333007839232e15,2.780479417745408e15,2.782630659489792e15,2.78478700150784e15,2.786948175364096e15,2.789114449494016e15,2.7912858238976e15,2.793462298574848e15,2.79564387352576e15,2.797830548750336e15,2.800022324248576e15,2.80221920002048e15,2.804421444501504e15,2.806628789256192e15,2.808841234284544e15,2.811059048022016e15,2.813281962033152e15,2.815510244753408e15,2.81774416461824e15,2.81998291632128e15,2.822227305168896e15,2.824477062725632e15,2.826732188991488e15,2.828992683966464e15,2.83125854765056e15,2.833530048479232e15,2.835806649581568e15,2.83808888782848e15,2.840377031655424e15,2.842670275756032e15,2.844969425436672e15,2.847273943826432e15,2.849584099360768e15,2.85189989203968e15,2.854221321863168e15,2.856548388831232e15,2.858881361379328e15,2.861219971072e15,2.863563949473792e15,2.865914101891072e15,2.868270159888384e15,2.870631855030272e15,2.872999187316736e15,2.875372693618688e15,2.877751837065216e15,2.880137154527232e15,2.88252837756928e15,2.88492550619136e15,2.887328540393472e15,2.889737480175616e15,2.892152862408704e15,2.894573881786368e15,2.897001343614976e15,2.899434979459072e15,2.9018745208832e15,2.904320236322816e15,2.90677212577792e15,2.909230189248512e15,2.911694695170048e15,2.914165106671616e15,2.916642229059584e15,2.91912552546304e15,2.921614995881984e15,2.924111177187328e15,2.926613800943616e15,2.929122598715392e15,2.931638107373568e15,2.934159790047232e15,2.93668791517184e15,2.93922328805376e15,2.941764566515712e15,2.944312555864064e15,2.946867524534272e15,2.949428667219968e15,2.95199678922752e15,2.954571622121472e15,2.957153165901824e15,2.959741420568576e15,2.962336386121728e15,2.964938599432192e15,2.967547523629056e15,2.970162890276864e15,2.97278577311744e15,2.975415366844416e15,2.978051939893248e15,2.980695760699392e15,2.983346292391936e15,2.986004071841792e15,2.98866909904896e15,2.991341105577984e15,2.994020091428864e15,2.996706593472512e15,2.999400343273472e15,3.002101340831744e15,3.004809586147328e15,3.00752534765568e15,3.010248088485888e15,3.012978345508864e15,3.015716387160064e15,3.018461676568576e15,3.0212142137344e15,3.023974803963904e15,3.026742910386176e15,3.02951826456576e15,3.032301403373568e15,3.0350923268096e15,3.037891034873856e15,3.04069725913088e15,3.043511536451584e15,3.046333598400512e15,3.049163176542208e15,3.05200107618304e15,3.054846760452096e15,3.057700497784832e15,3.060562019745792e15,3.063431863205888e15,3.066309491294208e15,3.06919570931712e15,3.072089711968256e15,3.074991767683072e15,3.077902681767936e15,3.080821380481024e15,3.083748400693248e15,3.086684010840064e15,3.089627942486016e15,3.092580195631104e15,3.09554130714624e15,3.098510471725056e15,3.101488226238464e15,3.10447483912192e15,3.107470041939968e15,3.110473834692608e15,3.113486485815296e15,3.116507995308032e15,3.119537826299904e15,3.12257678409728e15,3.12562486870016e15,3.128681811673088e15,3.131747344580608e15,3.134822272729088e15,3.137906327683072e15,3.140999241007104e15,3.144101818007552e15,3.147212984942592e15,3.150333547118592e15,3.153463772971008e15,3.156603125628928e15,3.159751605092352e15,3.162910016667648e15,3.166077555048448e15,3.169254757105664e15,3.172441622839296e15,3.175637883813888e15,3.178844076900352e15,3.182059933663232e15,3.185285454102528e15,3.188520906653696e15,3.191766291316736e15,3.195021608091648e15,3.198286856978432e15,3.201562037977088e15,3.204847151087616e15,3.208142733180928e15,3.211448515821568e15,3.21476423057408e15,3.218090682744832e15,3.221427067027456e15,3.22477418872832e15,3.228131510976512e15,3.231499302207488e15,3.234877830856704e15,3.238266828488704e15,3.241666563538944e15,3.245077036007424e15,3.2484985143296e15,3.25193046163456e15,3.255373414793216e15,3.258827373805568e15,3.262292338671616e15,3.265768846262272e15,3.269255822835712e15,3.272754073698304e15,3.276263867285504e15,3.2797846667264e15,3.28331727732736e15,3.286860893782016e15,3.29041605296128e15,3.293983023300608e15,3.297561536364544e15,3.301151860588544e15,3.304753727537152e15,3.308367405645824e15,3.31199289491456e15,3.31563019534336e15,3.319279843803136e15,3.322941571858432e15,3.326615379509248e15,3.330301266755584e15,3.333999770468352e15,3.33771035377664e15,3.34143355355136e15,3.3451688329216e15,3.348916997193728e15,3.352677777932288e15,3.35645117513728e15,3.36023745724416e15,3.364036355817472e15,3.367848139292672e15,3.371673344540672e15,3.37551143469056e15,3.379362409742336e15,3.383226538131456e15,3.387104356728832e15,3.390995328663552e15,3.394899990806528e15,3.398817537851392e15,3.402749311975424e15,3.406694507872256e15,3.410653393977344e15,3.414626238726144e15,3.418613042118656e15,3.422613535719424e15,3.426628524834816e15,3.43065747259392e15,3.434700647432192e15,3.438758317785088e15,3.442829946781696e15,3.44691660816384e15,3.451017496625152e15,3.455133417472e15,3.459263833833472e15,3.463409014145024e15,3.467569226842112e15,3.471744740360192e15,3.475935017828352e15,3.480140596117504e15,3.484361475227648e15,3.488597655158784e15,3.492849672781824e15,3.497116991225856e15,3.501400147361792e15,3.505698872754176e15,3.510013435838464e15,3.514344373485568e15,3.518691148824576e15,3.523053761855488e15,3.527433017884672e15,3.531828648476672e15,3.536240653631488e15,3.540669301784576e15,3.545114592935936e15,3.549576527085568e15,3.554055641104384e15,3.558551666556928e15,3.5630646034432e15,3.567594988634112e15,3.572142553694208e15,3.576707567058944e15,3.58129002872832e15,3.585890207137792e15,3.590508370722816e15,3.595144519483392e15,3.599798116548608e15,3.604470235660288e15,3.609160608382976e15,3.613868966281216e15,3.618596383096832e15,3.623342053523456e15,3.628106514432e15,3.632889765822464e15,3.637691807694848e15,3.64251344535552e15,3.647353605062656e15,3.652213628993536e15,3.657093248712704e15,3.661992195784704e15,3.666910738644992e15,3.67184941416448e15,3.676808222343168e15,3.6817868947456e15,3.686785699807232e15,3.691805442834432e15,3.696845318520832e15,3.7019061321728e15,3.706987346919424e15,3.712090036502528e15,3.7172136640512e15,3.722358498000896e15,3.727525075222528e15,3.732712858845184e15,3.737922922610688e15,3.743154192777216e15,3.748407743086592e15,3.75368330510336e15,3.758981415698432e15,3.764302074871808e15,3.769645282623488e15,3.775011307388928e15,3.780400417603584e15,3.785812344832e15,3.791247894380544e15,3.796707066249216e15,3.80218959200256e15,3.807696008511488e15,3.813226047340544e15,3.818780782231552e15,3.824359944749056e15,3.829963534893056e15,3.835591552663552e15,3.841244534931456e15,3.846922750132224e15,3.8526259298304e15,3.858354879332352e15,3.864109061767168e15,3.869889819312128e15,3.875696078225408e15,3.88152837537792e15,3.887387247640576e15,3.893272695013376e15,3.899185254367232e15,3.905124388831232e15,3.9110911721472e15,3.91708533587968e15,3.923106611593216e15,3.929156341465088e15,3.935233988624384e15,3.94133982150656e15,3.947474376982528e15,3.953637386616832e15,3.959829118844928e15,3.96605064740864e15,3.9723011670016e15,3.978581482930176e15,3.984891863629824e15,3.991232040665088e15,3.99760255090688e15,4.004004199661568e15,4.01043645005824e15,4.016899570532352e15,4.02339382951936e15,4.029920300761088e15,4.036478447386624e15,4.043068269395968e15,4.0496911089664e15,4.056346429227008e15,4.063034498613248e15,4.069755585560576e15,4.076510763810816e15,4.083298959622144e15,4.09012151517184e15,4.096978162024448e15,4.103869705486336e15,4.110796145557504e15,4.117757750673408e15,4.12475505770496e15,4.131787798216704e15,4.138856509079552e15,4.145962264035328e15,4.153104257777664e15,4.160283027177472e15,4.167499914412032e15,4.174753577304064e15,4.182045626466304e15,4.189376330334208e15,4.196745688907776e15,4.204153702187008e15,4.211601443913728e15,4.219088914087936e15,4.226616112709632e15,4.234183576649728e15,4.241792648085504e15,4.249442253275136e15,4.257133734395904e15,4.264866823012352e15,4.272642055995392e15,4.280460238651392e15,4.288321907851264e15,4.296226526724096e15,4.304174900576256e15,4.312168371585024e15,4.32020559757312e15,4.32828818915328e15,4.336416683196416e15,4.344590811267072e15,4.35281111023616e15,4.36107892228096e15,4.369393173659648e15,4.377756011855872e15,4.38616689999872e15,4.394626374959104e15,4.40313470517248e15,4.41169242750976e15,4.420300884148224e15,4.42895953821696e15,4.437669463457792e15,4.446430928306176e15,4.455244469633024e15,4.464110355873792e15,4.473029660770304e15,4.482002921193472e15,4.491030137143296e15,4.500112113926144e15,4.509249119977472e15,4.51844249747456e15,4.527692246417408e15,4.536998903676928e15,4.546363006124032e15,4.555785627500544e15,4.565267304677376e15,4.574808037654528e15,4.584408363302912e15,4.594070429106176e15,4.603793161322496e15,4.613578170564608e15,4.623425993703424e15,4.633336630738944e15,4.643311692283904e15,4.653350641467392e15,4.663456162643968e15,4.673627182071808e15,4.683865310363648e15,4.694170547519488e15,4.704544504152064e15,4.714987717132288e15,4.72550018646016e15,4.736083522748416e15,4.74673879973888e15,4.75746548056064e15,4.768265712697344e15,4.779139496148992e15,4.790088978399232e15,4.80111308570624e15,4.812213965553664e15,4.823392154812416e15,4.83464872722432e15,4.845984219660288e15,4.857399705862144e15,4.868896796442624e15,4.880475491401728e15,4.892137401352192e15,4.903883063164928e15,4.915714087452672e15,4.927631011086336e15,4.939634907807744e15,4.95172685135872e15,4.963908989222912e15,4.976180247658496e15,4.988543311020032e15,5.000999253049344e15,5.013549147488256e15,5.02619353120768e15,5.038934014820352e15,5.051772208939008e15,5.06470865043456e15,5.077745486790656e15,5.090883254878208e15,5.104123565309952e15,5.117467491827712e15,5.130917181915136e15,5.144472635572224e15,5.158137074024448e15,5.171909960400896e15,5.18579451592704e15,5.199791277473792e15,5.2139023925248e15,5.228128397950976e15,5.24247197810688e15,5.256933669863424e15,5.271516157575168e15,5.286220514983936e15,5.301048352702464e15,5.316002355085312e15,5.331083059003392e15,5.346293148811264e15,5.361633698250752e15,5.377107391676416e15,5.392716376571904e15,5.408461189808128e15,5.42434505261056e15,5.440369575591936e15,5.456537443106816e15,5.472849728897024e15,5.489309654188032e15,5.505918829592576e15,5.522679939465216e15,5.539594594418688e15,5.556666015678464e15,5.57389581385728e15,5.591287210180608e15,5.608842352132096e15,5.626563924066304e15,5.644454610337792e15,5.662516558430208e15,5.680752989569024e15,5.699167661850624e15,5.717762185887744e15,5.736539246034944e15,5.75550313725952e15,5.77465600704512e15,5.79400215035904e15,5.813543714684928e15,5.833283384377344e15,5.853226528145408e15,5.87337583034368e15,5.89373397532672e15,5.914305258061824e15,5.935093973516288e15,5.956103342915584e15,5.977337124356096e15,5.99879961280512e15,6.020495640100864e15,6.0424284274688e15,6.064602269876224e15,6.087021999161344e15,6.10969298403328e15,6.132618445717504e15,6.155804289794048e15,6.179254811230208e15,6.202975915606016e15,6.226971897888768e15,6.251248126787584e15,6.27581158162432e15,6.300666557366272e15,6.325818959593472e15,6.351274693885952e15,6.377040739565568e15,6.403123002212352e15,6.429527924277248e15,6.4562619482112e15,6.483332590206976e15,6.510745755844608e15,6.5385105719296e15,6.566633480912896e15,6.595121998987264e15,6.623985252958208e15,6.653229685276672e15,6.682866033360896e15,6.712901276532736e15,6.74334561533952e15,6.77420763971584e15,6.805497550209024e15,6.837225010495488e15,6.86940022112256e15,6.90203391950848e15,6.9351373799424e15,6.968721876713472e15,7.00279922098176e15,7.037380687036416e15,7.072480233521152e15,7.108109671596032e15,7.14428349677568e15,7.181015667703808e15,7.218319606153216e15,7.256211418251264e15,7.294706136383488e15,7.33382040354816e15,7.373569789001728e15,7.413973620097024e15,7.45504853983232e15,7.49681441243136e15,7.53928895463424e15,7.582494178148352e15,7.626451020939264e15,7.671181494714368e15,7.716708148051968e15,7.763055140143104e15,7.810247167049728e15,7.85831107231744e15,7.907272625750016e15,7.957161355247616e15,8.008006251839488e15,8.059837917167616e15,8.112690710970368e15,8.166596308631552e15,8.221590680502272e15,8.277711407546368e15,8.334997144469504e15,8.39348815659008e15,8.453230077935616e15,8.514264247566336e15,8.576640594477056e15,8.640407973920768e15,8.705620609859584e15,8.772330578771968e15,8.8405996208128e15,8.910485718040576e15,8.98205705306112e15,9.055381271609344e15,9.13053138812928e15,9.20758310141952e15,9.286619089600512e15,9.367727399501824e15,9.450997151694848e15,9.536528204169216e15,9.624424709881856e15,9.714796190498816e15,9.807762905104384e15,9.903450481491968e15,1.0001994211131392e16,1.010354012291072e16,1.0208242835652608e16,1.03162698530816e16,1.0427800490082304e16,1.054302802018304e16,1.0662160749297664e16,1.0785427384434688e16,1.0913070591246336e16,1.1045354510221312e16,1.1182569051652096e16,1.1325027748151296e16,1.1473073123360768e16,1.1627080986918912e16,1.1787461508202496e16,1.1954667806261248e16,1.212919702355968e16,1.2311602137137152e16,1.2502490884866048e16,1.2702541871579136e16,1.2912515306487808e16,1.3133257298149376e16,1.3365722403045376e16,1.3610984362999808e16,1.387026402246656e16,1.4144949729624064e16,1.4436628474888192e16,1.4747128840585216e16,1.5078566098108416e16,1.5433402337460224e16,1.5814530219114496e16,1.6225364242071552e16,1.6669977109069824e16,1.715326186160128e16,1.7681176693047296e16,1.826103915393843e16,1.890196853358592e16,1.9615497892921344e16,2.0416453459050496e16,2.132428713885696e16,2.236509515363123e16,2.3574875771764736e16,2.500492164018995e16,2.673137393913037e16,2.887316675546317e16,3.1628940179144704e16,3.5362188029853696e16,4.083265351503053e16,5.000937512894464e16,7.072304891481293e16,9.999999980506448e18],"x":[1.0e-30,9.998000799700121e-31,9.99600159940024e-31,9.99400239910036e-31,9.992003198800481e-31,9.9900039985006e-31,9.98800479820072e-31,9.986005597900841e-31,9.98400639760096e-31,9.98200719730108e-31,9.980007997001201e-31,9.97800879670132e-31,9.97600959640144e-31,9.974010396101561e-31,9.97201119580168e-31,9.9700119955018e-31,9.96801279520192e-31,9.96601359490204e-31,9.96401439460216e-31,9.96201519430228e-31,9.9600159940024e-31,9.95801679370252e-31,9.956017593402639e-31,9.95401839310276e-31,9.95201919280288e-31,9.950019992502999e-31,9.94802079220312e-31,9.94602159190324e-31,9.944022391603359e-31,9.94202319130348e-31,9.9400239910036e-31,9.938024790703719e-31,9.93602559040384e-31,9.93402639010396e-31,9.932027189804079e-31,9.9300279895042e-31,9.92802878920432e-31,9.926029588904439e-31,9.92403038860456e-31,9.92203118830468e-31,9.920031988004799e-31,9.918032787704919e-31,9.91603358740504e-31,9.914034387105158e-31,9.912035186805279e-31,9.910035986505398e-31,9.908036786205518e-31,9.906037585905639e-31,9.904038385605758e-31,9.902039185305878e-31,9.900039985005999e-31,9.898040784706118e-31,9.896041584406238e-31,9.894042384106359e-31,9.892043183806478e-31,9.890043983506598e-31,9.888044783206719e-31,9.886045582906837e-31,9.884046382606958e-31,9.882047182307079e-31,9.880047982007197e-31,9.878048781707318e-31,9.876049581407439e-31,9.874050381107557e-31,9.872051180807678e-31,9.870051980507798e-31,9.868052780207917e-31,9.866053579908038e-31,9.864054379608158e-31,9.862055179308277e-31,9.860055979008398e-31,9.858056778708518e-31,9.856057578408637e-31,9.854058378108758e-31,9.852059177808876e-31,9.850059977508997e-31,9.848060777209118e-31,9.846061576909236e-31,9.844062376609357e-31,9.842063176309477e-31,9.840063976009596e-31,9.838064775709717e-31,9.836065575409837e-31,9.834066375109956e-31,9.832067174810077e-31,9.830067974510197e-31,9.828068774210316e-31,9.826069573910437e-31,9.824070373610557e-31,9.822071173310676e-31,9.820071973010797e-31,9.818072772710917e-31,9.816073572411036e-31,9.814074372111156e-31,9.812075171811277e-31,9.810075971511396e-31,9.808076771211516e-31,9.806077570911637e-31,9.804078370611756e-31,9.802079170311876e-31,9.800079970011997e-31,9.798080769712116e-31,9.796081569412236e-31,9.794082369112355e-31,9.792083168812476e-31,9.790083968512596e-31,9.788084768212715e-31,9.786085567912835e-31,9.784086367612956e-31,9.782087167313075e-31,9.780087967013195e-31,9.778088766713316e-31,9.776089566413435e-31,9.774090366113555e-31,9.772091165813676e-31,9.770091965513795e-31,9.768092765213915e-31,9.766093564914036e-31,9.764094364614155e-31,9.762095164314275e-31,9.760095964014396e-31,9.758096763714515e-31,9.756097563414635e-31,9.754098363114756e-31,9.752099162814874e-31,9.750099962514995e-31,9.748100762215116e-31,9.746101561915234e-31,9.744102361615355e-31,9.742103161315475e-31,9.740103961015594e-31,9.738104760715715e-31,9.736105560415834e-31,9.734106360115954e-31,9.732107159816075e-31,9.730107959516194e-31,9.728108759216314e-31,9.726109558916435e-31,9.724110358616553e-31,9.722111158316674e-31,9.720111958016795e-31,9.718112757716913e-31,9.716113557417034e-31,9.714114357117154e-31,9.712115156817273e-31,9.710115956517394e-31,9.708116756217514e-31,9.706117555917633e-31,9.704118355617754e-31,9.702119155317874e-31,9.700119955017993e-31,9.698120754718114e-31,9.696121554418234e-31,9.694122354118353e-31,9.692123153818474e-31,9.690123953518594e-31,9.688124753218713e-31,9.686125552918833e-31,9.684126352618954e-31,9.682127152319073e-31,9.680127952019193e-31,9.678128751719314e-31,9.676129551419433e-31,9.674130351119553e-31,9.672131150819672e-31,9.670131950519793e-31,9.668132750219913e-31,9.666133549920032e-31,9.664134349620153e-31,9.662135149320273e-31,9.660135949020392e-31,9.658136748720513e-31,9.656137548420633e-31,9.654138348120752e-31,9.652139147820872e-31,9.650139947520993e-31,9.648140747221112e-31,9.646141546921232e-31,9.644142346621353e-31,9.642143146321472e-31,9.640143946021592e-31,9.638144745721713e-31,9.636145545421832e-31,9.634146345121952e-31,9.632147144822073e-31,9.630147944522192e-31,9.628148744222312e-31,9.626149543922433e-31,9.624150343622551e-31,9.622151143322672e-31,9.620151943022793e-31,9.618152742722911e-31,9.616153542423032e-31,9.61415434212315e-31,9.612155141823271e-31,9.610155941523392e-31,9.60815674122351e-31,9.606157540923631e-31,9.604158340623752e-31,9.60215914032387e-31,9.600159940023991e-31,9.598160739724112e-31,9.59616153942423e-31,9.594162339124351e-31,9.592163138824472e-31,9.59016393852459e-31,9.588164738224711e-31,9.586165537924831e-31,9.58416633762495e-31,9.58216713732507e-31,9.580167937025191e-31,9.57816873672531e-31,9.57616953642543e-31,9.574170336125551e-31,9.57217113582567e-31,9.57017193552579e-31,9.568172735225911e-31,9.56617353492603e-31,9.56417433462615e-31,9.562175134326271e-31,9.56017593402639e-31,9.55817673372651e-31,9.55617753342663e-31,9.55417833312675e-31,9.55217913282687e-31,9.55017993252699e-31,9.54818073222711e-31,9.54618153192723e-31,9.54418233162735e-31,9.54218313132747e-31,9.54018393102759e-31,9.538184730727709e-31,9.53618553042783e-31,9.53418633012795e-31,9.532187129828069e-31,9.53018792952819e-31,9.52818872922831e-31,9.526189528928429e-31,9.52419032862855e-31,9.52219112832867e-31,9.520191928028789e-31,9.51819272772891e-31,9.51619352742903e-31,9.514194327129149e-31,9.51219512682927e-31,9.51019592652939e-31,9.508196726229509e-31,9.50619752592963e-31,9.50419832562975e-31,9.502199125329869e-31,9.500199925029989e-31,9.498200724730108e-31,9.496201524430228e-31,9.494202324130349e-31,9.492203123830468e-31,9.490203923530588e-31,9.488204723230709e-31,9.486205522930828e-31,9.484206322630948e-31,9.482207122331069e-31,9.480207922031188e-31,9.478208721731308e-31,9.476209521431429e-31,9.474210321131548e-31,9.472211120831668e-31,9.470211920531789e-31,9.468212720231907e-31,9.466213519932028e-31,9.464214319632149e-31,9.462215119332267e-31,9.460215919032388e-31,9.458216718732509e-31,9.456217518432627e-31,9.454218318132748e-31,9.452219117832868e-31,9.450219917532987e-31,9.448220717233108e-31,9.446221516933228e-31,9.444222316633347e-31,9.442223116333468e-31,9.440223916033587e-31,9.438224715733707e-31,9.436225515433828e-31,9.434226315133946e-31,9.432227114834067e-31,9.430227914534188e-31,9.428228714234306e-31,9.426229513934427e-31,9.424230313634547e-31,9.422231113334666e-31,9.420231913034787e-31,9.418232712734907e-31,9.416233512435026e-31,9.414234312135147e-31,9.412235111835267e-31,9.410235911535386e-31,9.408236711235507e-31,9.406237510935627e-31,9.404238310635746e-31,9.402239110335867e-31,9.400239910035987e-31,9.398240709736106e-31,9.396241509436226e-31,9.394242309136347e-31,9.392243108836466e-31,9.390243908536586e-31,9.388244708236707e-31,9.386245507936826e-31,9.384246307636946e-31,9.382247107337065e-31,9.380247907037186e-31,9.378248706737306e-31,9.376249506437425e-31,9.374250306137546e-31,9.372251105837666e-31,9.370251905537785e-31,9.368252705237905e-31,9.366253504938026e-31,9.364254304638145e-31,9.362255104338265e-31,9.360255904038386e-31,9.358256703738505e-31,9.356257503438625e-31,9.354258303138746e-31,9.352259102838865e-31,9.350259902538985e-31,9.348260702239106e-31,9.346261501939225e-31,9.344262301639345e-31,9.342263101339466e-31,9.340263901039585e-31,9.338264700739705e-31,9.336265500439826e-31,9.334266300139944e-31,9.332267099840065e-31,9.330267899540186e-31,9.328268699240304e-31,9.326269498940425e-31,9.324270298640544e-31,9.322271098340664e-31,9.320271898040785e-31,9.318272697740904e-31,9.316273497441024e-31,9.314274297141145e-31,9.312275096841264e-31,9.310275896541384e-31,9.308276696241505e-31,9.306277495941623e-31,9.304278295641744e-31,9.302279095341865e-31,9.300279895041983e-31,9.298280694742104e-31,9.296281494442224e-31,9.294282294142343e-31,9.292283093842464e-31,9.290283893542584e-31,9.288284693242703e-31,9.286285492942824e-31,9.284286292642944e-31,9.282287092343063e-31,9.280287892043184e-31,9.278288691743304e-31,9.276289491443423e-31,9.274290291143544e-31,9.272291090843664e-31,9.270291890543783e-31,9.268292690243904e-31,9.266293489944022e-31,9.264294289644143e-31,9.262295089344263e-31,9.260295889044382e-31,9.258296688744503e-31,9.256297488444623e-31,9.254298288144742e-31,9.252299087844863e-31,9.250299887544983e-31,9.248300687245102e-31,9.246301486945223e-31,9.244302286645343e-31,9.242303086345462e-31,9.240303886045583e-31,9.238304685745703e-31,9.236305485445822e-31,9.234306285145942e-31,9.232307084846063e-31,9.230307884546182e-31,9.228308684246302e-31,9.226309483946423e-31,9.224310283646542e-31,9.222311083346662e-31,9.220311883046783e-31,9.218312682746902e-31,9.216313482447022e-31,9.214314282147143e-31,9.212315081847262e-31,9.210315881547382e-31,9.208316681247501e-31,9.206317480947621e-31,9.204318280647742e-31,9.20231908034786e-31,9.200319880047981e-31,9.198320679748102e-31,9.19632147944822e-31,9.194322279148341e-31,9.192323078848462e-31,9.19032387854858e-31,9.188324678248701e-31,9.186325477948822e-31,9.18432627764894e-31,9.182327077349061e-31,9.180327877049182e-31,9.1783286767493e-31,9.176329476449421e-31,9.174330276149542e-31,9.17233107584966e-31,9.170331875549781e-31,9.168332675249902e-31,9.16633347495002e-31,9.16433427465014e-31,9.162335074350261e-31,9.16033587405038e-31,9.1583366737505e-31,9.156337473450621e-31,9.15433827315074e-31,9.15233907285086e-31,9.15033987255098e-31,9.1483406722511e-31,9.14634147195122e-31,9.14434227165134e-31,9.14234307135146e-31,9.14034387105158e-31,9.1383446707517e-31,9.13634547045182e-31,9.13434627015194e-31,9.13234706985206e-31,9.13034786955218e-31,9.1283486692523e-31,9.12634946895242e-31,9.12435026865254e-31,9.12235106835266e-31,9.120351868052779e-31,9.1183526677529e-31,9.11635346745302e-31,9.114354267153139e-31,9.11235506685326e-31,9.11035586655338e-31,9.108356666253499e-31,9.10635746595362e-31,9.10435826565374e-31,9.102359065353859e-31,9.10035986505398e-31,9.0983606647541e-31,9.096361464454219e-31,9.09436226415434e-31,9.092363063854458e-31,9.090363863554579e-31,9.0883646632547e-31,9.086365462954818e-31,9.084366262654939e-31,9.08236706235506e-31,9.080367862055178e-31,9.078368661755298e-31,9.076369461455419e-31,9.074370261155538e-31,9.072371060855658e-31,9.070371860555779e-31,9.068372660255898e-31,9.066373459956018e-31,9.064374259656139e-31,9.062375059356258e-31,9.060375859056378e-31,9.058376658756499e-31,9.056377458456618e-31,9.054378258156738e-31,9.052379057856859e-31,9.050379857556978e-31,9.048380657257098e-31,9.046381456957219e-31,9.044382256657337e-31,9.042383056357458e-31,9.040383856057579e-31,9.038384655757697e-31,9.036385455457818e-31,9.034386255157938e-31,9.032387054858057e-31,9.030387854558178e-31,9.028388654258297e-31,9.026389453958417e-31,9.024390253658538e-31,9.022391053358657e-31,9.020391853058777e-31,9.018392652758898e-31,9.016393452459016e-31,9.014394252159137e-31,9.012395051859258e-31,9.010395851559376e-31,9.008396651259497e-31,9.006397450959617e-31,9.004398250659736e-31,9.002399050359857e-31,9.000399850059977e-31,8.998400649760096e-31,8.996401449460217e-31,8.994402249160337e-31,8.992403048860456e-31,8.990403848560577e-31,8.988404648260697e-31,8.986405447960816e-31,8.984406247660937e-31,8.982407047361057e-31,8.980407847061176e-31,8.978408646761296e-31,8.976409446461417e-31,8.974410246161536e-31,8.972411045861656e-31,8.970411845561775e-31,8.968412645261896e-31,8.966413444962016e-31,8.964414244662135e-31,8.962415044362256e-31,8.960415844062376e-31,8.958416643762495e-31,8.956417443462616e-31,8.954418243162736e-31,8.952419042862855e-31,8.950419842562976e-31,8.948420642263096e-31,8.946421441963215e-31,8.944422241663335e-31,8.942423041363456e-31,8.940423841063575e-31,8.938424640763695e-31,8.936425440463816e-31,8.934426240163935e-31,8.932427039864055e-31,8.930427839564176e-31,8.928428639264295e-31,8.926429438964415e-31,8.924430238664536e-31,8.922431038364655e-31,8.920431838064775e-31,8.918432637764896e-31,8.916433437465014e-31,8.914434237165135e-31,8.912435036865254e-31,8.910435836565374e-31,8.908436636265495e-31,8.906437435965614e-31,8.904438235665734e-31,8.902439035365855e-31,8.900439835065974e-31,8.898440634766094e-31,8.896441434466215e-31,8.894442234166334e-31,8.892443033866454e-31,8.890443833566575e-31,8.888444633266693e-31,8.886445432966814e-31,8.884446232666935e-31,8.882447032367053e-31,8.880447832067174e-31,8.878448631767295e-31,8.876449431467413e-31,8.874450231167534e-31,8.872451030867654e-31,8.870451830567773e-31,8.868452630267894e-31,8.866453429968014e-31,8.864454229668133e-31,8.862455029368254e-31,8.860455829068374e-31,8.858456628768493e-31,8.856457428468614e-31,8.854458228168732e-31,8.852459027868853e-31,8.850459827568974e-31,8.848460627269092e-31,8.846461426969213e-31,8.844462226669333e-31,8.842463026369452e-31,8.840463826069573e-31,8.838464625769693e-31,8.836465425469812e-31,8.834466225169933e-31,8.832467024870053e-31,8.830467824570172e-31,8.828468624270293e-31,8.826469423970413e-31,8.824470223670532e-31,8.822471023370653e-31,8.820471823070773e-31,8.818472622770892e-31,8.816473422471012e-31,8.814474222171133e-31,8.812475021871252e-31,8.810475821571372e-31,8.808476621271493e-31,8.806477420971612e-31,8.804478220671732e-31,8.802479020371853e-31,8.800479820071972e-31,8.798480619772092e-31,8.796481419472211e-31,8.794482219172332e-31,8.792483018872452e-31,8.790483818572571e-31,8.788484618272691e-31,8.786485417972812e-31,8.78448621767293e-31,8.782487017373051e-31,8.780487817073172e-31,8.77848861677329e-31,8.776489416473411e-31,8.774490216173532e-31,8.77249101587365e-31,8.770491815573771e-31,8.768492615273892e-31,8.76649341497401e-31,8.764494214674131e-31,8.762495014374252e-31,8.76049581407437e-31,8.758496613774491e-31,8.756497413474612e-31,8.75449821317473e-31,8.752499012874851e-31,8.750499812574972e-31,8.74850061227509e-31,8.746501411975211e-31,8.744502211675331e-31,8.74250301137545e-31,8.74050381107557e-31,8.73850461077569e-31,8.73650541047581e-31,8.73450621017593e-31,8.73250700987605e-31,8.73050780957617e-31,8.72850860927629e-31,8.72650940897641e-31,8.72451020867653e-31,8.72251100837665e-31,8.72051180807677e-31,8.71851260777689e-31,8.71651340747701e-31,8.71451420717713e-31,8.71251500687725e-31,8.71051580657737e-31,8.70851660627749e-31,8.70651740597761e-31,8.70451820567773e-31,8.702519005377849e-31,8.70051980507797e-31,8.69852060477809e-31,8.696521404478209e-31,8.69452220417833e-31,8.69252300387845e-31,8.690523803578569e-31,8.68852460327869e-31,8.68652540297881e-31,8.684526202678929e-31,8.68252700237905e-31,8.680527802079168e-31,8.678528601779289e-31,8.67652940147941e-31,8.674530201179528e-31,8.672531000879649e-31,8.67053180057977e-31,8.668532600279888e-31,8.666533399980009e-31,8.66453419968013e-31,8.662534999380248e-31,8.660535799080369e-31,8.658536598780489e-31,8.656537398480608e-31,8.654538198180728e-31,8.652538997880849e-31,8.650539797580968e-31,8.648540597281088e-31,8.646541396981209e-31,8.644542196681328e-31,8.642542996381448e-31,8.640543796081569e-31,8.638544595781688e-31,8.636545395481808e-31,8.634546195181929e-31,8.632546994882048e-31,8.630547794582168e-31,8.628548594282289e-31,8.626549393982407e-31,8.624550193682528e-31,8.622550993382647e-31,8.620551793082767e-31,8.618552592782888e-31,8.616553392483007e-31,8.614554192183127e-31,8.612554991883248e-31,8.610555791583367e-31,8.608556591283487e-31,8.606557390983608e-31,8.604558190683727e-31,8.602558990383847e-31,8.600559790083968e-31,8.598560589784086e-31,8.596561389484207e-31,8.594562189184328e-31,8.592562988884446e-31,8.590563788584567e-31,8.588564588284687e-31,8.586565387984806e-31,8.584566187684927e-31,8.582566987385047e-31,8.580567787085166e-31,8.578568586785287e-31,8.576569386485407e-31,8.574570186185526e-31,8.572570985885647e-31,8.570571785585767e-31,8.568572585285886e-31,8.566573384986007e-31,8.564574184686125e-31,8.562574984386246e-31,8.560575784086367e-31,8.558576583786485e-31,8.556577383486606e-31,8.554578183186726e-31,8.552578982886845e-31,8.550579782586966e-31,8.548580582287086e-31,8.546581381987205e-31,8.544582181687326e-31,8.542582981387446e-31,8.540583781087565e-31,8.538584580787686e-31,8.536585380487806e-31,8.534586180187925e-31,8.532586979888046e-31,8.530587779588166e-31,8.528588579288285e-31,8.526589378988405e-31,8.524590178688526e-31,8.522590978388645e-31,8.520591778088765e-31,8.518592577788886e-31,8.516593377489005e-31,8.514594177189125e-31,8.512594976889246e-31,8.510595776589365e-31,8.508596576289485e-31,8.506597375989604e-31,8.504598175689725e-31,8.502598975389845e-31,8.500599775089964e-31,8.498600574790084e-31,8.496601374490205e-31,8.494602174190324e-31,8.492602973890444e-31,8.490603773590565e-31,8.488604573290684e-31,8.486605372990804e-31,8.484606172690925e-31,8.482606972391044e-31,8.480607772091164e-31,8.478608571791285e-31,8.476609371491404e-31,8.474610171191524e-31,8.472610970891645e-31,8.470611770591763e-31,8.468612570291884e-31,8.466613369992005e-31,8.464614169692123e-31,8.462614969392244e-31,8.460615769092365e-31,8.458616568792483e-31,8.456617368492604e-31,8.454618168192724e-31,8.452618967892843e-31,8.450619767592964e-31,8.448620567293083e-31,8.446621366993203e-31,8.444622166693324e-31,8.442622966393443e-31,8.440623766093563e-31,8.438624565793684e-31,8.436625365493802e-31,8.434626165193923e-31,8.432626964894044e-31,8.430627764594162e-31,8.428628564294283e-31,8.426629363994403e-31,8.424630163694522e-31,8.422630963394643e-31,8.420631763094763e-31,8.418632562794882e-31,8.416633362495003e-31,8.414634162195123e-31,8.412634961895242e-31,8.410635761595363e-31,8.408636561295483e-31,8.406637360995602e-31,8.404638160695723e-31,8.402638960395843e-31,8.400639760095962e-31,8.398640559796082e-31,8.396641359496203e-31,8.394642159196322e-31,8.392642958896442e-31,8.390643758596563e-31,8.388644558296682e-31,8.386645357996802e-31,8.384646157696921e-31,8.382646957397042e-31,8.380647757097162e-31,8.378648556797281e-31,8.376649356497402e-31,8.374650156197522e-31,8.372650955897641e-31,8.370651755597762e-31,8.368652555297882e-31,8.366653354998e-31,8.364654154698121e-31,8.362654954398242e-31,8.36065575409836e-31,8.358656553798481e-31,8.356657353498602e-31,8.35465815319872e-31,8.352658952898841e-31,8.350659752598962e-31,8.34866055229908e-31,8.346661351999201e-31,8.344662151699322e-31,8.34266295139944e-31,8.340663751099561e-31,8.338664550799682e-31,8.3366653504998e-31,8.334666150199921e-31,8.332666949900042e-31,8.33066774960016e-31,8.328668549300281e-31,8.3266693490004e-31,8.32467014870052e-31,8.32267094840064e-31,8.32067174810076e-31,8.31867254780088e-31,8.316673347501e-31,8.31467414720112e-31,8.31267494690124e-31,8.31067574660136e-31,8.30867654630148e-31,8.3066773460016e-31,8.30467814570172e-31,8.30267894540184e-31,8.30067974510196e-31,8.29868054480208e-31,8.2966813445022e-31,8.29468214420232e-31,8.29268294390244e-31,8.29068374360256e-31,8.28868454330268e-31,8.2866853430028e-31,8.284686142702919e-31,8.28268694240304e-31,8.28068774210316e-31,8.278688541803279e-31,8.2766893415034e-31,8.27469014120352e-31,8.272690940903639e-31,8.27069174060376e-31,8.268692540303878e-31,8.266693340003999e-31,8.26469413970412e-31,8.262694939404238e-31,8.260695739104359e-31,8.25869653880448e-31,8.256697338504598e-31,8.254698138204719e-31,8.25269893790484e-31,8.250699737604958e-31,8.248700537305079e-31,8.2467013370052e-31,8.244702136705318e-31,8.242702936405439e-31,8.240703736105559e-31,8.238704535805678e-31,8.236705335505798e-31,8.234706135205919e-31,8.232706934906038e-31,8.230707734606158e-31,8.228708534306279e-31,8.226709334006398e-31,8.224710133706518e-31,8.222710933406639e-31,8.220711733106758e-31,8.218712532806878e-31,8.216713332506999e-31,8.214714132207118e-31,8.212714931907238e-31,8.210715731607357e-31,8.208716531307477e-31,8.206717331007598e-31,8.204718130707717e-31,8.202718930407837e-31,8.200719730107958e-31,8.198720529808077e-31,8.196721329508197e-31,8.194722129208318e-31,8.192722928908437e-31,8.190723728608557e-31,8.188724528308678e-31,8.186725328008797e-31,8.184726127708917e-31,8.182726927409038e-31,8.180727727109156e-31,8.178728526809277e-31,8.176729326509398e-31,8.174730126209516e-31,8.172730925909637e-31,8.170731725609758e-31,8.168732525309876e-31,8.166733325009997e-31,8.164734124710117e-31,8.162734924410236e-31,8.160735724110357e-31,8.158736523810477e-31,8.156737323510596e-31,8.154738123210717e-31,8.152738922910836e-31,8.150739722610956e-31,8.148740522311077e-31,8.146741322011195e-31,8.144742121711316e-31,8.142742921411437e-31,8.140743721111555e-31,8.138744520811676e-31,8.136745320511796e-31,8.134746120211915e-31,8.132746919912036e-31,8.130747719612156e-31,8.128748519312275e-31,8.126749319012396e-31,8.124750118712516e-31,8.122750918412635e-31,8.120751718112756e-31,8.118752517812876e-31,8.116753317512995e-31,8.114754117213116e-31,8.112754916913236e-31,8.110755716613355e-31,8.108756516313475e-31,8.106757316013596e-31,8.104758115713715e-31,8.102758915413835e-31,8.100759715113956e-31,8.098760514814075e-31,8.096761314514195e-31,8.094762114214314e-31,8.092762913914435e-31,8.090763713614555e-31,8.088764513314674e-31,8.086765313014795e-31,8.084766112714915e-31,8.082766912415034e-31,8.080767712115154e-31,8.078768511815275e-31,8.076769311515394e-31,8.074770111215514e-31,8.072770910915635e-31,8.070771710615754e-31,8.068772510315874e-31,8.066773310015995e-31,8.064774109716114e-31,8.062774909416234e-31,8.060775709116355e-31,8.058776508816474e-31,8.056777308516594e-31,8.054778108216715e-31,8.052778907916834e-31,8.050779707616954e-31,8.048780507317075e-31,8.046781307017193e-31,8.044782106717314e-31,8.042782906417435e-31,8.040783706117553e-31,8.038784505817674e-31,8.036785305517793e-31,8.034786105217913e-31,8.032786904918034e-31,8.030787704618153e-31,8.028788504318273e-31,8.026789304018394e-31,8.024790103718513e-31,8.022790903418633e-31,8.020791703118754e-31,8.018792502818872e-31,8.016793302518993e-31,8.014794102219114e-31,8.012794901919232e-31,8.010795701619353e-31,8.008796501319473e-31,8.006797301019592e-31,8.004798100719713e-31,8.002798900419833e-31,8.000799700119952e-31,7.998800499820073e-31,7.996801299520193e-31,7.994802099220312e-31,7.992802898920433e-31,7.990803698620553e-31,7.988804498320672e-31,7.986805298020793e-31,7.984806097720913e-31,7.982806897421032e-31,7.980807697121152e-31,7.978808496821271e-31,7.976809296521392e-31,7.974810096221512e-31,7.972810895921631e-31,7.970811695621752e-31,7.968812495321872e-31,7.966813295021991e-31,7.964814094722112e-31,7.962814894422232e-31,7.960815694122351e-31,7.958816493822472e-31,7.956817293522592e-31,7.954818093222711e-31,7.952818892922832e-31,7.950819692622952e-31,7.948820492323071e-31,7.946821292023191e-31,7.944822091723312e-31,7.94282289142343e-31,7.940823691123551e-31,7.938824490823672e-31,7.93682529052379e-31,7.934826090223911e-31,7.932826889924032e-31,7.93082768962415e-31,7.928828489324271e-31,7.926829289024392e-31,7.92483008872451e-31,7.922830888424631e-31,7.92083168812475e-31,7.91883248782487e-31,7.916833287524991e-31,7.91483408722511e-31,7.91283488692523e-31,7.910835686625351e-31,7.90883648632547e-31,7.90683728602559e-31,7.90483808572571e-31,7.90283888542583e-31,7.90083968512595e-31,7.89884048482607e-31,7.89684128452619e-31,7.89484208422631e-31,7.89284288392643e-31,7.89084368362655e-31,7.88884448332667e-31,7.88684528302679e-31,7.88484608272691e-31,7.88284688242703e-31,7.88084768212715e-31,7.87884848182727e-31,7.87684928152739e-31,7.8748500812275095e-31,7.872850880927629e-31,7.87085168062775e-31,7.8688524803278695e-31,7.866853280027989e-31,7.86485407972811e-31,7.862854879428229e-31,7.860855679128349e-31,7.85885647882847e-31,7.856857278528589e-31,7.854858078228709e-31,7.8528588779288295e-31,7.850859677628949e-31,7.848860477329069e-31,7.846861277029189e-31,7.844862076729309e-31,7.842862876429429e-31,7.8408636761295485e-31,7.838864475829669e-31,7.836865275529789e-31,7.834866075229908e-31,7.832866874930029e-31,7.830867674630149e-31,7.828868474330268e-31,7.826869274030389e-31,7.8248700737305085e-31,7.822870873430628e-31,7.820871673130749e-31,7.8188724728308685e-31,7.816873272530988e-31,7.814874072231108e-31,7.812874871931228e-31,7.810875671631348e-31,7.808876471331468e-31,7.806877271031588e-31,7.804878070731708e-31,7.802878870431828e-31,7.800879670131948e-31,7.798880469832068e-31,7.796881269532188e-31,7.794882069232308e-31,7.792882868932428e-31,7.7908836686325475e-31,7.788884468332667e-31,7.786885268032788e-31,7.784886067732907e-31,7.782886867433027e-31,7.780887667133148e-31,7.778888466833267e-31,7.776889266533387e-31,7.7748900662335075e-31,7.772890865933627e-31,7.770891665633747e-31,7.7688924653338675e-31,7.766893265033987e-31,7.764894064734107e-31,7.762894864434227e-31,7.760895664134347e-31,7.758896463834467e-31,7.756897263534586e-31,7.754898063234707e-31,7.752898862934827e-31,7.750899662634946e-31,7.748900462335067e-31,7.746901262035187e-31,7.744902061735306e-31,7.742902861435427e-31,7.7409036611355465e-31,7.738904460835666e-31,7.736905260535787e-31,7.734906060235906e-31,7.732906859936026e-31,7.730907659636146e-31,7.728908459336266e-31,7.726909259036386e-31,7.724910058736506e-31,7.722910858436626e-31,7.720911658136746e-31,7.718912457836866e-31,7.716913257536986e-31,7.714914057237106e-31,7.7129148569372255e-31,7.710915656637346e-31,7.708916456337466e-31,7.706917256037585e-31,7.704918055737706e-31,7.702918855437826e-31,7.700919655137945e-31,7.698920454838065e-31,7.696921254538186e-31,7.694922054238305e-31,7.692922853938425e-31,7.6909236536385455e-31,7.688924453338665e-31,7.686925253038785e-31,7.684926052738905e-31,7.682926852439025e-31,7.680927652139145e-31,7.678928451839265e-31,7.676929251539385e-31,7.674930051239505e-31,7.672930850939624e-31,7.670931650639745e-31,7.668932450339865e-31,7.666933250039984e-31,7.664934049740105e-31,7.6629348494402245e-31,7.660935649140344e-31,7.658936448840465e-31,7.656937248540584e-31,7.654938048240704e-31,7.652938847940825e-31,7.650939647640944e-31,7.648940447341064e-31,7.646941247041185e-31,7.644942046741304e-31,7.642942846441424e-31,7.640943646141544e-31,7.638944445841664e-31,7.636945245541784e-31,7.6349460452419035e-31,7.632946844942024e-31,7.630947644642144e-31,7.6289484443422634e-31,7.626949244042384e-31,7.624950043742504e-31,7.622950843442623e-31,7.620951643142744e-31,7.618952442842864e-31,7.616953242542983e-31,7.614954042243103e-31,7.6129548419432235e-31,7.610955641643343e-31,7.608956441343463e-31,7.606957241043583e-31,7.604958040743703e-31,7.602958840443823e-31,7.600959640143943e-31,7.598960439844063e-31,7.596961239544183e-31,7.594962039244303e-31,7.592962838944423e-31,7.590963638644543e-31,7.588964438344663e-31,7.586965238044783e-31,7.5849660377449025e-31,7.582966837445022e-31,7.580967637145143e-31,7.5789684368452625e-31,7.576969236545382e-31,7.574970036245503e-31,7.572970835945622e-31,7.570971635645742e-31,7.568972435345863e-31,7.566973235045982e-31,7.564974034746102e-31,7.5629748344462225e-31,7.560975634146342e-31,7.558976433846462e-31,7.556977233546582e-31,7.554978033246702e-31,7.552978832946822e-31,7.5509796326469415e-31,7.548980432347062e-31,7.546981232047182e-31,7.544982031747301e-31,7.542982831447422e-31,7.540983631147542e-31,7.538984430847661e-31,7.536985230547782e-31,7.5349860302479015e-31,7.532986829948021e-31,7.530987629648142e-31,7.5289884293482615e-31,7.526989229048381e-31,7.524990028748501e-31,7.522990828448621e-31,7.520991628148741e-31,7.518992427848861e-31,7.516993227548981e-31,7.514994027249101e-31,7.512994826949221e-31,7.510995626649341e-31,7.508996426349461e-31,7.5069972260495806e-31,7.504998025749701e-31,7.502998825449821e-31,7.5009996251499405e-31,7.499000424850061e-31,7.497001224550181e-31,7.4950020242503e-31,7.49300282395042e-31,7.491003623650541e-31,7.48900442335066e-31,7.48700522305078e-31,7.4850060227509005e-31,7.48300682245102e-31,7.48100762215114e-31,7.4790084218512605e-31,7.47700922155138e-31,7.4750100212515e-31,7.47301082095162e-31,7.47101162065174e-31,7.46901242035186e-31,7.467013220051979e-31,7.4650140197521e-31,7.46301481945222e-31,7.461015619152339e-31,7.45901641885246e-31,7.45701721855258e-31,7.455018018252699e-31,7.45301881795282e-31,7.4510196176529395e-31,7.449020417353059e-31,7.44702121705318e-31,7.445022016753299e-31,7.443022816453419e-31,7.44102361615354e-31,7.439024415853659e-31,7.437025215553779e-31,7.435026015253899e-31,7.433026814954019e-31,7.431027614654139e-31,7.429028414354259e-31,7.427029214054379e-31,7.425030013754499e-31,7.4230308134546185e-31,7.421031613154739e-31,7.419032412854859e-31,7.417033212554978e-31,7.415034012255099e-31,7.413034811955219e-31,7.411035611655338e-31,7.409036411355458e-31,7.407037211055579e-31,7.405038010755698e-31,7.403038810455818e-31,7.4010396101559385e-31,7.399040409856058e-31,7.397041209556178e-31,7.395042009256298e-31,7.393042808956418e-31,7.391043608656538e-31,7.389044408356658e-31,7.387045208056778e-31,7.385046007756898e-31,7.383046807457018e-31,7.381047607157138e-31,7.379048406857258e-31,7.377049206557377e-31,7.375050006257498e-31,7.3730508059576175e-31,7.371051605657737e-31,7.369052405357858e-31,7.367053205057977e-31,7.365054004758097e-31,7.363054804458218e-31,7.361055604158337e-31,7.359056403858457e-31,7.357057203558578e-31,7.355058003258697e-31,7.353058802958817e-31,7.351059602658937e-31,7.349060402359057e-31,7.347061202059177e-31,7.3450620017592965e-31,7.343062801459417e-31,7.341063601159537e-31,7.3390644008596564e-31,7.337065200559777e-31,7.335066000259897e-31,7.333066799960016e-31,7.331067599660137e-31,7.329068399360257e-31,7.327069199060376e-31,7.325069998760497e-31,7.3230707984606165e-31,7.321071598160736e-31,7.319072397860856e-31,7.317073197560976e-31,7.315073997261096e-31,7.313074796961216e-31,7.311075596661336e-31,7.309076396361456e-31,7.307077196061576e-31,7.305077995761696e-31,7.303078795461816e-31,7.301079595161936e-31,7.299080394862056e-31,7.297081194562176e-31,7.2950819942622955e-31,7.293082793962415e-31,7.291083593662536e-31,7.2890843933626554e-31,7.287085193062775e-31,7.285085992762896e-31,7.283086792463015e-31,7.281087592163135e-31,7.279088391863256e-31,7.277089191563375e-31,7.275089991263495e-31,7.2730907909636155e-31,7.271091590663735e-31,7.269092390363855e-31,7.267093190063975e-31,7.265093989764095e-31,7.263094789464215e-31,7.2610955891643345e-31,7.259096388864455e-31,7.257097188564575e-31,7.255097988264694e-31,7.253098787964815e-31,7.251099587664935e-31,7.249100387365054e-31,7.247101187065175e-31,7.2451019867652945e-31,7.243102786465414e-31,7.241103586165535e-31,7.2391043858656544e-31,7.237105185565774e-31,7.235105985265895e-31,7.233106784966014e-31,7.231107584666134e-31,7.229108384366254e-31,7.227109184066374e-31,7.225109983766494e-31,7.223110783466614e-31,7.221111583166734e-31,7.219112382866854e-31,7.2171131825669736e-31,7.215113982267094e-31,7.213114781967214e-31,7.2111155816673335e-31,7.209116381367454e-31,7.207117181067574e-31,7.205117980767693e-31,7.203118780467813e-31,7.201119580167934e-31,7.199120379868053e-31,7.197121179568173e-31,7.1951219792682935e-31,7.193122778968413e-31,7.191123578668533e-31,7.1891243783686534e-31,7.187125178068773e-31,7.185125977768893e-31,7.183126777469013e-31,7.181127577169133e-31,7.179128376869253e-31,7.177129176569373e-31,7.175129976269493e-31,7.173130775969613e-31,7.171131575669732e-31,7.169132375369853e-31,7.1671331750699726e-31,7.165133974770092e-31,7.163134774470213e-31,7.1611355741703325e-31,7.159136373870452e-31,7.157137173570573e-31,7.155137973270692e-31,7.153138772970812e-31,7.151139572670933e-31,7.149140372371052e-31,7.147141172071172e-31,7.145141971771292e-31,7.143142771471412e-31,7.141143571171532e-31,7.139144370871652e-31,7.137145170571772e-31,7.135145970271892e-31,7.1331467699720115e-31,7.131147569672132e-31,7.129148369372252e-31,7.127149169072371e-31,7.125149968772492e-31,7.123150768472612e-31,7.121151568172731e-31,7.119152367872852e-31,7.1171531675729716e-31,7.115153967273091e-31,7.113154766973211e-31,7.1111555666733315e-31,7.109156366373451e-31,7.107157166073571e-31,7.105157965773691e-31,7.103158765473811e-31,7.101159565173931e-31,7.099160364874051e-31,7.097161164574171e-31,7.095161964274291e-31,7.093162763974411e-31,7.091163563674531e-31,7.089164363374651e-31,7.08716516307477e-31,7.085165962774891e-31,7.0831667624750105e-31,7.08116756217513e-31,7.079168361875251e-31,7.07716916157537e-31,7.07516996127549e-31,7.073170760975611e-31,7.07117156067573e-31,7.06917236037585e-31,7.0671731600759706e-31,7.06517395977609e-31,7.06317475947621e-31,7.0611755591763305e-31,7.05917635887645e-31,7.05717715857657e-31,7.0551779582766895e-31,7.05317875797681e-31,7.05117955767693e-31,7.049180357377049e-31,7.04718115707717e-31,7.04518195677729e-31,7.043182756477409e-31,7.04118355617753e-31,7.03918435587765e-31,7.037185155577769e-31,7.03518595527789e-31,7.0331867549780095e-31,7.031187554678129e-31,7.029188354378249e-31,7.027189154078369e-31,7.025189953778489e-31,7.023190753478609e-31,7.021191553178729e-31,7.019192352878849e-31,7.017193152578969e-31,7.015193952279089e-31,7.013194751979209e-31,7.011195551679329e-31,7.009196351379449e-31,7.007197151079569e-31,7.0051979507796885e-31,7.003198750479809e-31,7.001199550179929e-31,6.999200349880048e-31,6.997201149580168e-31,6.995201949280289e-31,6.993202748980408e-31,6.991203548680528e-31,6.989204348380649e-31,6.987205148080768e-31,6.985205947780888e-31,6.9832067474810085e-31,6.981207547181128e-31,6.979208346881248e-31,6.977209146581368e-31,6.975209946281488e-31,6.973210745981608e-31,6.9712115456817275e-31,6.969212345381848e-31,6.967213145081968e-31,6.965213944782087e-31,6.963214744482208e-31,6.961215544182328e-31,6.959216343882447e-31,6.957217143582568e-31,6.9552179432826875e-31,6.953218742982807e-31,6.951219542682928e-31,6.949220342383047e-31,6.947221142083167e-31,6.945221941783288e-31,6.943222741483407e-31,6.941223541183527e-31,6.939224340883647e-31,6.937225140583767e-31,6.935225940283887e-31,6.933226739984007e-31,6.931227539684127e-31,6.929228339384247e-31,6.9272291390843665e-31,6.925229938784487e-31,6.923230738484607e-31,6.9212315381847265e-31,6.919232337884847e-31,6.917233137584967e-31,6.915233937285086e-31,6.913234736985207e-31,6.911235536685327e-31,6.909236336385446e-31,6.907237136085566e-31,6.9052379357856865e-31,6.903238735485806e-31,6.901239535185926e-31,6.8992403348860464e-31,6.897241134586166e-31,6.895241934286286e-31,6.893242733986406e-31,6.891243533686526e-31,6.889244333386646e-31,6.887245133086766e-31,6.885245932786886e-31,6.883246732487006e-31,6.881247532187125e-31,6.879248331887246e-31,6.8772491315873655e-31,6.875249931287485e-31,6.873250730987606e-31,6.8712515306877255e-31,6.869252330387845e-31,6.867253130087966e-31,6.865253929788085e-31,6.863254729488205e-31,6.861255529188326e-31,6.859256328888445e-31,6.857257128588565e-31,6.8552579282886855e-31,6.853258727988805e-31,6.851259527688925e-31,6.849260327389045e-31,6.847261127089165e-31,6.845261926789285e-31,6.8432627264894045e-31,6.841263526189525e-31,6.839264325889645e-31,6.837265125589764e-31,6.835265925289885e-31,6.833266724990005e-31,6.831267524690124e-31,6.829268324390245e-31,6.8272691240903645e-31,6.825269923790484e-31,6.823270723490604e-31,6.8212715231907245e-31,6.819272322890844e-31,6.817273122590964e-31,6.815273922291084e-31,6.813274721991204e-31,6.811275521691324e-31,6.809276321391444e-31,6.807277121091564e-31,6.805277920791684e-31,6.803278720491804e-31,6.801279520191924e-31,6.799280319892044e-31,6.797281119592164e-31,6.795281919292284e-31,6.7932827189924035e-31,6.791283518692523e-31,6.789284318392644e-31,6.787285118092763e-31,6.785285917792883e-31,6.783286717493004e-31,6.781287517193123e-31,6.779288316893243e-31,6.7772891165933636e-31,6.775289916293483e-31,6.773290715993603e-31,6.7712915156937235e-31,6.769292315393843e-31,6.767293115093963e-31,6.7652939147940825e-31,6.763294714494203e-31,6.761295514194323e-31,6.759296313894442e-31,6.757297113594563e-31,6.755297913294683e-31,6.753298712994802e-31,6.751299512694923e-31,6.749300312395043e-31,6.747301112095162e-31,6.745301911795283e-31,6.7433027114954025e-31,6.741303511195522e-31,6.739304310895643e-31,6.737305110595762e-31,6.735305910295882e-31,6.733306709996002e-31,6.731307509696122e-31,6.729308309396242e-31,6.727309109096362e-31,6.725309908796482e-31,6.723310708496602e-31,6.721311508196722e-31,6.719312307896842e-31,6.717313107596962e-31,6.7153139072970815e-31,6.713314706997202e-31,6.711315506697322e-31,6.709316306397441e-31,6.707317106097561e-31,6.705317905797682e-31,6.703318705497801e-31,6.701319505197921e-31,6.699320304898042e-31,6.697321104598161e-31,6.695321904298281e-31,6.6933227039984015e-31,6.691323503698521e-31,6.689324303398641e-31,6.687325103098761e-31,6.685325902798881e-31,6.683326702499001e-31,6.681327502199121e-31,6.679328301899241e-31,6.677329101599361e-31,6.67532990129948e-31,6.673330700999601e-31,6.671331500699721e-31,6.66933230039984e-31,6.667333100099961e-31,6.6653338998000805e-31,6.6633346995002e-31,6.661335499200321e-31,6.65933629890044e-31,6.65733709860056e-31,6.655337898300681e-31,6.6533386980008e-31,6.65133949770092e-31,6.64934029740104e-31,6.64734109710116e-31,6.64534189680128e-31,6.6433426965014e-31,6.64134349620152e-31,6.63934429590164e-31,6.6373450956017595e-31,6.63534589530188e-31,6.633346695002e-31,6.6313474947021194e-31,6.62934829440224e-31,6.62734909410236e-31,6.625349893802479e-31,6.6233506935026e-31,6.62135149320272e-31,6.619352292902839e-31,6.617353092602959e-31,6.6153538923030795e-31,6.613354692003199e-31,6.611355491703319e-31,6.609356291403439e-31,6.607357091103559e-31,6.605357890803679e-31,6.603358690503799e-31,6.601359490203919e-31,6.599360289904039e-31,6.597361089604159e-31,6.595361889304279e-31,6.593362689004399e-31,6.591363488704519e-31,6.589364288404639e-31,6.5873650881047585e-31,6.585365887804878e-31,6.583366687504999e-31,6.5813674872051185e-31,6.579368286905238e-31,6.577369086605359e-31,6.575369886305478e-31,6.573370686005598e-31,6.571371485705719e-31,6.569372285405838e-31,6.567373085105958e-31,6.5653738848060785e-31,6.563374684506198e-31,6.561375484206318e-31,6.5593762839064376e-31,6.557377083606558e-31,6.555377883306678e-31,6.5533786830067975e-31,6.551379482706918e-31,6.549380282407038e-31,6.547381082107157e-31,6.545381881807278e-31,6.543382681507398e-31,6.541383481207517e-31,6.539384280907638e-31,6.5373850806077575e-31,6.535385880307877e-31,6.533386680007998e-31,6.5313874797081175e-31,6.529388279408237e-31,6.527389079108357e-31,6.525389878808477e-31,6.523390678508597e-31,6.521391478208717e-31,6.519392277908837e-31,6.517393077608957e-31,6.515393877309077e-31,6.513394677009197e-31,6.511395476709317e-31,6.5093962764094366e-31,6.507397076109557e-31,6.505397875809677e-31,6.5033986755097965e-31,6.501399475209916e-31,6.499400274910037e-31,6.497401074610156e-31,6.495401874310276e-31,6.493402674010397e-31,6.491403473710516e-31,6.489404273410636e-31,6.4874050731107565e-31,6.485405872810876e-31,6.483406672510996e-31,6.4814074722111165e-31,6.479408271911236e-31,6.477409071611356e-31,6.475409871311476e-31,6.473410671011596e-31,6.471411470711716e-31,6.469412270411835e-31,6.467413070111956e-31,6.465413869812076e-31,6.463414669512195e-31,6.461415469212316e-31,6.459416268912436e-31,6.457417068612555e-31,6.455417868312676e-31,6.4534186680127955e-31,6.451419467712915e-31,6.449420267413036e-31,6.447421067113155e-31,6.445421866813275e-31,6.443422666513395e-31,6.441423466213515e-31,6.439424265913635e-31,6.437425065613755e-31,6.435425865313875e-31,6.433426665013995e-31,6.431427464714115e-31,6.429428264414235e-31,6.427429064114355e-31,6.4254298638144745e-31,6.423430663514595e-31,6.421431463214715e-31,6.419432262914834e-31,6.417433062614955e-31,6.415433862315075e-31,6.413434662015194e-31,6.411435461715314e-31,6.409436261415435e-31,6.407437061115554e-31,6.405437860815674e-31,6.4034386605157945e-31,6.401439460215914e-31,6.399440259916034e-31,6.397441059616154e-31,6.395441859316274e-31,6.393442659016394e-31,6.391443458716514e-31,6.389444258416634e-31,6.387445058116754e-31,6.385445857816873e-31,6.383446657516994e-31,6.381447457217114e-31,6.379448256917233e-31,6.377449056617354e-31,6.3754498563174735e-31,6.373450656017593e-31,6.371451455717714e-31,6.369452255417833e-31,6.367453055117953e-31,6.365453854818074e-31,6.363454654518193e-31,6.361455454218313e-31,6.359456253918434e-31,6.357457053618553e-31,6.355457853318673e-31,6.353458653018793e-31,6.351459452718913e-31,6.349460252419033e-31,6.3474610521191525e-31,6.345461851819273e-31,6.343462651519393e-31,6.3414634512195124e-31,6.339464250919633e-31,6.337465050619753e-31,6.335465850319872e-31,6.333466650019993e-31,6.331467449720113e-31,6.329468249420232e-31,6.327469049120352e-31,6.3254698488204725e-31,6.323470648520592e-31,6.321471448220712e-31,6.319472247920832e-31,6.317473047620952e-31,6.315473847321072e-31,6.313474647021192e-31,6.311475446721312e-31,6.309476246421432e-31,6.307477046121552e-31,6.305477845821672e-31,6.303478645521792e-31,6.301479445221912e-31,6.299480244922032e-31,6.2974810446221515e-31,6.295481844322271e-31,6.293482644022392e-31,6.2914834437225114e-31,6.289484243422631e-31,6.287485043122752e-31,6.285485842822871e-31,6.283486642522991e-31,6.281487442223112e-31,6.279488241923231e-31,6.277489041623351e-31,6.2754898413234715e-31,6.273490641023591e-31,6.271491440723711e-31,6.269492240423831e-31,6.267493040123951e-31,6.265493839824071e-31,6.2634946395241905e-31,6.261495439224311e-31,6.259496238924431e-31,6.25749703862455e-31,6.255497838324671e-31,6.253498638024791e-31,6.25149943772491e-31,6.249500237425031e-31,6.2475010371251505e-31,6.24550183682527e-31,6.243502636525391e-31,6.2415034362255104e-31,6.23950423592563e-31,6.23750503562575e-31,6.23550583532587e-31,6.23350663502599e-31,6.23150743472611e-31,6.22950823442623e-31,6.22750903412635e-31,6.22550983382647e-31,6.22351063352659e-31,6.22151143322671e-31,6.2195122329268296e-31,6.21751303262695e-31,6.21551383232707e-31,6.2135146320271895e-31,6.21151543172731e-31,6.20951623142743e-31,6.207517031127549e-31,6.205517830827669e-31,6.20351863052779e-31,6.201519430227909e-31,6.199520229928029e-31,6.1975210296281495e-31,6.195521829328269e-31,6.193522629028389e-31,6.1915234287285094e-31,6.189524228428629e-31,6.187525028128749e-31,6.185525827828869e-31,6.183526627528989e-31,6.181527427229109e-31,6.179528226929228e-31,6.177529026629349e-31,6.175529826329469e-31,6.173530626029588e-31,6.171531425729709e-31,6.1695322254298286e-31,6.167533025129948e-31,6.165533824830069e-31,6.1635346245301885e-31,6.161535424230308e-31,6.159536223930429e-31,6.157537023630548e-31,6.155537823330668e-31,6.153538623030789e-31,6.151539422730908e-31,6.149540222431028e-31,6.147541022131148e-31,6.145541821831268e-31,6.143542621531388e-31,6.141543421231508e-31,6.139544220931628e-31,6.137545020631748e-31,6.1355458203318675e-31,6.133546620031988e-31,6.131547419732108e-31,6.129548219432227e-31,6.127549019132348e-31,6.125549818832468e-31,6.123550618532587e-31,6.121551418232707e-31,6.1195522179328276e-31,6.117553017632947e-31,6.115553817333067e-31,6.1135546170331875e-31,6.111555416733307e-31,6.109556216433427e-31,6.107557016133547e-31,6.105557815833667e-31,6.103558615533787e-31,6.101559415233907e-31,6.099560214934027e-31,6.097561014634147e-31,6.095561814334267e-31,6.093562614034387e-31,6.091563413734507e-31,6.089564213434626e-31,6.087565013134747e-31,6.0855658128348665e-31,6.083566612534986e-31,6.081567412235107e-31,6.079568211935226e-31,6.077569011635346e-31,6.075569811335467e-31,6.073570611035586e-31,6.071571410735706e-31,6.0695722104358266e-31,6.067573010135946e-31,6.065573809836066e-31,6.063574609536186e-31,6.061575409236306e-31,6.059576208936426e-31,6.0575770086365455e-31,6.055577808336666e-31,6.053578608036786e-31,6.051579407736905e-31,6.049580207437026e-31,6.047581007137146e-31,6.045581806837265e-31,6.043582606537386e-31,6.041583406237506e-31,6.039584205937625e-31,6.037585005637746e-31,6.0355858053378655e-31,6.033586605037985e-31,6.031587404738105e-31,6.029588204438225e-31,6.027589004138345e-31,6.025589803838465e-31,6.023590603538585e-31,6.021591403238705e-31,6.019592202938825e-31,6.017593002638945e-31,6.015593802339065e-31,6.013594602039185e-31,6.011595401739305e-31,6.009596201439425e-31,6.0075970011395445e-31,6.005597800839664e-31,6.003598600539785e-31,6.001599400239904e-31,5.999600199940024e-31,5.997600999640145e-31,5.995601799340264e-31,5.993602599040384e-31,5.991603398740505e-31,5.989604198440624e-31,5.987604998140744e-31,5.9856057978408645e-31,5.983606597540984e-31,5.981607397241104e-31,5.979608196941224e-31,5.977608996641344e-31,5.975609796341464e-31,5.9736105960415835e-31,5.971611395741704e-31,5.969612195441824e-31,5.967612995141943e-31,5.965613794842064e-31,5.963614594542184e-31,5.961615394242303e-31,5.959616193942424e-31,5.9576169936425435e-31,5.955617793342663e-31,5.953618593042784e-31,5.9516193927429034e-31,5.949620192443023e-31,5.947620992143144e-31,5.945621791843263e-31,5.943622591543383e-31,5.941623391243503e-31,5.939624190943623e-31,5.937624990643743e-31,5.935625790343863e-31,5.933626590043983e-31,5.931627389744103e-31,5.9296281894442225e-31,5.927628989144343e-31,5.925629788844463e-31,5.9236305885445825e-31,5.921631388244703e-31,5.919632187944823e-31,5.917632987644942e-31,5.915633787345062e-31,5.913634587045183e-31,5.911635386745302e-31,5.909636186445422e-31,5.9076369861455425e-31,5.905637785845662e-31,5.903638585545782e-31,5.9016393852459024e-31,5.899640184946022e-31,5.897640984646142e-31,5.895641784346262e-31,5.893642584046382e-31,5.891643383746502e-31,5.889644183446622e-31,5.887644983146742e-31,5.885645782846862e-31,5.883646582546981e-31,5.881647382247102e-31,5.8796481819472215e-31,5.877648981647341e-31,5.875649781347462e-31,5.8736505810475815e-31,5.871651380747701e-31,5.869652180447822e-31,5.867652980147941e-31,5.865653779848061e-31,5.863654579548182e-31,5.861655379248301e-31,5.859656178948421e-31,5.857656978648541e-31,5.855657778348661e-31,5.853658578048781e-31,5.851659377748901e-31,5.849660177449021e-31,5.847660977149141e-31,5.8456617768492605e-31,5.843662576549381e-31,5.841663376249501e-31,5.83966417594962e-31,5.837664975649741e-31,5.835665775349861e-31,5.83366657504998e-31,5.831667374750101e-31,5.8296681744502206e-31,5.82766897415034e-31,5.82566977385046e-31,5.8236705735505805e-31,5.8216713732507e-31,5.81967217295082e-31,5.81767297265094e-31,5.81567377235106e-31,5.81367457205118e-31,5.8116753717513e-31,5.80967617145142e-31,5.80767697115154e-31,5.80567777085166e-31,5.80367857055178e-31,5.8016793702519e-31,5.799680169952019e-31,5.79768096965214e-31,5.7956817693522595e-31,5.793682569052379e-31,5.7916833687525e-31,5.789684168452619e-31,5.787684968152739e-31,5.78568576785286e-31,5.783686567552979e-31,5.781687367253099e-31,5.7796881669532196e-31,5.777688966653339e-31,5.775689766353459e-31,5.7736905660535795e-31,5.771691365753699e-31,5.769692165453819e-31,5.7676929651539385e-31,5.765693764854059e-31,5.763694564554179e-31,5.761695364254298e-31,5.759696163954419e-31,5.757696963654539e-31,5.755697763354658e-31,5.753698563054779e-31,5.751699362754899e-31,5.749700162455018e-31,5.747700962155139e-31,5.7457017618552585e-31,5.743702561555378e-31,5.741703361255498e-31,5.739704160955618e-31,5.737704960655738e-31,5.735705760355858e-31,5.733706560055978e-31,5.731707359756098e-31,5.729708159456218e-31,5.727708959156338e-31,5.725709758856458e-31,5.723710558556578e-31,5.721711358256698e-31,5.719712157956818e-31,5.7177129576569375e-31,5.715713757357058e-31,5.713714557057178e-31,5.711715356757297e-31,5.709716156457417e-31,5.707716956157538e-31,5.705717755857657e-31,5.703718555557777e-31,5.701719355257898e-31,5.699720154958017e-31,5.697720954658137e-31,5.6957217543582575e-31,5.693722554058377e-31,5.691723353758497e-31,5.689724153458617e-31,5.687724953158737e-31,5.685725752858857e-31,5.6837265525589764e-31,5.681727352259097e-31,5.679728151959217e-31,5.677728951659336e-31,5.675729751359457e-31,5.673730551059577e-31,5.671731350759696e-31,5.669732150459817e-31,5.6677329501599365e-31,5.665733749860056e-31,5.663734549560177e-31,5.661735349260296e-31,5.659736148960416e-31,5.657736948660537e-31,5.655737748360656e-31,5.653738548060776e-31,5.651739347760896e-31,5.649740147461016e-31,5.647740947161136e-31,5.645741746861256e-31,5.643742546561376e-31,5.641743346261496e-31,5.6397441459616155e-31,5.637744945661736e-31,5.635745745361856e-31,5.6337465450619755e-31,5.631747344762096e-31,5.629748144462216e-31,5.627748944162335e-31,5.625749743862456e-31,5.623750543562576e-31,5.621751343262695e-31,5.619752142962815e-31,5.6177529426629355e-31,5.615753742363055e-31,5.613754542063175e-31,5.611755341763295e-31,5.609756141463415e-31,5.607756941163535e-31,5.605757740863655e-31,5.603758540563775e-31,5.601759340263895e-31,5.599760139964015e-31,5.597760939664135e-31,5.595761739364255e-31,5.593762539064374e-31,5.591763338764495e-31,5.5897641384646145e-31,5.587764938164734e-31,5.585765737864855e-31,5.5837665375649745e-31,5.581767337265094e-31,5.579768136965215e-31,5.577768936665334e-31,5.575769736365454e-31,5.573770536065575e-31,5.571771335765694e-31,5.569772135465814e-31,5.5677729351659345e-31,5.565773734866054e-31,5.563774534566174e-31,5.5617753342662936e-31,5.559776133966414e-31,5.557776933666534e-31,5.5557777333666535e-31,5.553778533066774e-31,5.551779332766894e-31,5.549780132467013e-31,5.547780932167134e-31,5.545781731867254e-31,5.543782531567373e-31,5.541783331267494e-31,5.5397841309676135e-31,5.537784930667733e-31,5.535785730367853e-31,5.5337865300679735e-31,5.531787329768093e-31,5.529788129468213e-31,5.527788929168333e-31,5.525789728868453e-31,5.523790528568573e-31,5.521791328268693e-31,5.519792127968813e-31,5.517792927668933e-31,5.515793727369053e-31,5.513794527069173e-31,5.511795326769293e-31,5.509796126469413e-31,5.507796926169533e-31,5.5057977258696525e-31,5.503798525569772e-31,5.501799325269893e-31,5.499800124970012e-31,5.497800924670132e-31,5.495801724370253e-31,5.493802524070372e-31,5.491803323770492e-31,5.4898041234706125e-31,5.487804923170732e-31,5.485805722870852e-31,5.4838065225709725e-31,5.481807322271092e-31,5.479808121971212e-31,5.4778089216713315e-31,5.475809721371452e-31,5.473810521071572e-31,5.471811320771691e-31,5.469812120471812e-31,5.467812920171932e-31,5.465813719872051e-31,5.463814519572172e-31,5.461815319272292e-31,5.459816118972411e-31,5.457816918672532e-31,5.4558177183726515e-31,5.453818518072771e-31,5.451819317772892e-31,5.449820117473011e-31,5.447820917173131e-31,5.445821716873251e-31,5.443822516573371e-31,5.441823316273491e-31,5.439824115973611e-31,5.437824915673731e-31,5.435825715373851e-31,5.433826515073971e-31,5.431827314774091e-31,5.429828114474211e-31,5.4278289141743305e-31,5.425829713874451e-31,5.423830513574571e-31,5.42183131327469e-31,5.41983211297481e-31,5.417832912674931e-31,5.41583371237505e-31,5.41383451207517e-31,5.411835311775291e-31,5.40983611147541e-31,5.40783691117553e-31,5.4058377108756505e-31,5.40383851057577e-31,5.40183931027589e-31,5.39984010997601e-31,5.39784090967613e-31,5.39584170937625e-31,5.39384250907637e-31,5.39184330877649e-31,5.38984410847661e-31,5.387844908176729e-31,5.38584570787685e-31,5.38384650757697e-31,5.381847307277089e-31,5.37984810697721e-31,5.3778489066773295e-31,5.375849706377449e-31,5.37385050607757e-31,5.371851305777689e-31,5.369852105477809e-31,5.36785290517793e-31,5.365853704878049e-31,5.363854504578169e-31,5.361855304278289e-31,5.359856103978409e-31,5.357856903678529e-31,5.355857703378649e-31,5.353858503078769e-31,5.351859302778889e-31,5.3498601024790085e-31,5.347860902179129e-31,5.345861701879249e-31,5.3438625015793684e-31,5.341863301279489e-31,5.339864100979609e-31,5.337864900679728e-31,5.335865700379849e-31,5.333866500079969e-31,5.331867299780088e-31,5.329868099480208e-31,5.3278688991803285e-31,5.325869698880448e-31,5.323870498580568e-31,5.321871298280688e-31,5.319872097980808e-31,5.317872897680928e-31,5.315873697381048e-31,5.313874497081168e-31,5.311875296781288e-31,5.309876096481408e-31,5.307876896181528e-31,5.305877695881648e-31,5.303878495581768e-31,5.301879295281888e-31,5.2998800949820075e-31,5.297880894682127e-31,5.295881694382248e-31,5.2938824940823674e-31,5.291883293782487e-31,5.289884093482608e-31,5.287884893182727e-31,5.285885692882847e-31,5.283886492582968e-31,5.281887292283087e-31,5.279888091983207e-31,5.2778888916833275e-31,5.275889691383447e-31,5.273890491083567e-31,5.2718912907836866e-31,5.269892090483807e-31,5.267892890183927e-31,5.2658936898840465e-31,5.263894489584167e-31,5.261895289284287e-31,5.259896088984406e-31,5.257896888684527e-31,5.255897688384647e-31,5.253898488084766e-31,5.251899287784887e-31,5.2499000874850065e-31,5.247900887185126e-31,5.245901686885247e-31,5.2439024865853664e-31,5.241903286285486e-31,5.239904085985606e-31,5.237904885685726e-31,5.235905685385846e-31,5.233906485085966e-31,5.231907284786086e-31,5.229908084486206e-31,5.227908884186326e-31,5.225909683886446e-31,5.223910483586566e-31,5.2219112832866856e-31,5.219912082986806e-31,5.217912882686926e-31,5.2159136823870455e-31,5.213914482087165e-31,5.211915281787286e-31,5.209916081487405e-31,5.207916881187525e-31,5.205917680887646e-31,5.203918480587765e-31,5.201919280287885e-31,5.1999200799880055e-31,5.197920879688125e-31,5.195921679388245e-31,5.1939224790883655e-31,5.191923278788485e-31,5.189924078488605e-31,5.187924878188725e-31,5.185925677888845e-31,5.183926477588965e-31,5.181927277289084e-31,5.179928076989205e-31,5.177928876689325e-31,5.175929676389444e-31,5.173930476089565e-31,5.1719312757896846e-31,5.169932075489804e-31,5.167932875189925e-31,5.1659336748900445e-31,5.163934474590164e-31,5.161935274290285e-31,5.159936073990404e-31,5.157936873690524e-31,5.155937673390644e-31,5.153938473090764e-31,5.151939272790884e-31,5.149940072491004e-31,5.147940872191124e-31,5.145941671891244e-31,5.143942471591364e-31,5.141943271291484e-31,5.139944070991604e-31,5.1379448706917235e-31,5.135945670391844e-31,5.133946470091964e-31,5.131947269792083e-31,5.129948069492204e-31,5.127948869192324e-31,5.125949668892443e-31,5.123950468592563e-31,5.1219512682926836e-31,5.119952067992803e-31,5.117952867692923e-31,5.1159536673930435e-31,5.113954467093163e-31,5.111955266793283e-31,5.109956066493403e-31,5.107956866193523e-31,5.105957665893643e-31,5.103958465593763e-31,5.101959265293883e-31,5.099960064994003e-31,5.097960864694122e-31,5.095961664394243e-31,5.093962464094363e-31,5.091963263794482e-31,5.089964063494603e-31,5.0879648631947225e-31,5.085965662894842e-31,5.083966462594963e-31,5.081967262295082e-31,5.079968061995202e-31,5.077968861695323e-31,5.075969661395442e-31,5.073970461095562e-31,5.071971260795683e-31,5.069972060495802e-31,5.067972860195922e-31,5.065973659896042e-31,5.063974459596162e-31,5.061975259296282e-31,5.0599760589964015e-31,5.057976858696522e-31,5.055977658396642e-31,5.053978458096761e-31,5.051979257796882e-31,5.049980057497002e-31,5.047980857197121e-31,5.045981656897242e-31,5.043982456597362e-31,5.041983256297481e-31,5.039984055997601e-31,5.0379848556977215e-31,5.035985655397841e-31,5.033986455097961e-31,5.031987254798081e-31,5.029988054498201e-31,5.027988854198321e-31,5.025989653898441e-31,5.023990453598561e-31,5.021991253298681e-31,5.019992052998801e-31,5.017992852698921e-31,5.015993652399041e-31,5.013994452099161e-31,5.011995251799281e-31,5.0099960514994005e-31,5.00799685119952e-31,5.005997650899641e-31,5.00399845059976e-31,5.00199925029988e-31,5.000000050000001e-31,4.99800084970012e-31,4.99600164940024e-31,4.994002449100361e-31,4.99200324880048e-31,4.9900040485006e-31,4.9880048482007205e-31,4.98600564790084e-31,4.98400644760096e-31,4.98200724730108e-31,4.9800080470012e-31,4.97800884670132e-31,4.9760096464014395e-31,4.97401044610156e-31,4.97201124580168e-31,4.970012045501799e-31,4.96801284520192e-31,4.96601364490204e-31,4.964014444602159e-31,4.96201524430228e-31,4.9600160440023995e-31,4.958016843702519e-31,4.95601764340264e-31,4.9540184431027594e-31,4.952019242802879e-31,4.950020042502999e-31,4.948020842203119e-31,4.946021641903239e-31,4.944022441603359e-31,4.942023241303479e-31,4.940024041003599e-31,4.938024840703719e-31,4.936025640403839e-31,4.934026440103959e-31,4.9320272398040785e-31,4.930028039504199e-31,4.928028839204319e-31,4.9260296389044385e-31,4.924030438604559e-31,4.922031238304679e-31,4.920032038004798e-31,4.918032837704918e-31,4.916033637405039e-31,4.914034437105158e-31,4.912035236805278e-31,4.9100360365053985e-31,4.908036836205518e-31,4.906037635905638e-31,4.9040384356057584e-31,4.902039235305878e-31,4.900040035005998e-31,4.898040834706118e-31,4.896041634406238e-31,4.894042434106358e-31,4.892043233806477e-31,4.890044033506598e-31,4.888044833206718e-31,4.886045632906837e-31,4.884046432606958e-31,4.8820472323070775e-31,4.880048032007197e-31,4.878048831707318e-31,4.8760496314074375e-31,4.874050431107557e-31,4.872051230807678e-31,4.870052030507797e-31,4.868052830207917e-31,4.866053629908038e-31,4.864054429608157e-31,4.862055229308277e-31,4.860056029008397e-31,4.858056828708517e-31,4.856057628408637e-31,4.854058428108757e-31,4.852059227808877e-31,4.850060027508997e-31,4.8480608272091165e-31,4.846061626909237e-31,4.844062426609357e-31,4.842063226309476e-31,4.840064026009597e-31,4.838064825709717e-31,4.836065625409836e-31,4.834066425109956e-31,4.8320672248100766e-31,4.830068024510196e-31,4.828068824210316e-31,4.8260696239104365e-31,4.824070423610556e-31,4.822071223310676e-31,4.820072023010796e-31,4.818072822710916e-31,4.816073622411036e-31,4.814074422111156e-31,4.812075221811276e-31,4.810076021511396e-31,4.808076821211516e-31,4.806077620911636e-31,4.804078420611756e-31,4.802079220311875e-31,4.800080020011996e-31,4.7980808197121155e-31,4.796081619412235e-31,4.794082419112356e-31,4.792083218812475e-31,4.790084018512595e-31,4.788084818212716e-31,4.786085617912835e-31,4.784086417612955e-31,4.7820872173130756e-31,4.780088017013195e-31,4.778088816713315e-31,4.776089616413435e-31,4.774090416113555e-31,4.772091215813675e-31,4.7700920155137945e-31,4.768092815213915e-31,4.766093614914035e-31,4.764094414614154e-31,4.762095214314275e-31,4.760096014014395e-31,4.758096813714514e-31,4.756097613414635e-31,4.754098413114755e-31,4.752099212814874e-31,4.750100012514995e-31,4.7481008122151145e-31,4.746101611915234e-31,4.744102411615354e-31,4.742103211315474e-31,4.740104011015594e-31,4.738104810715714e-31,4.736105610415834e-31,4.734106410115954e-31,4.732107209816074e-31,4.730108009516194e-31,4.728108809216314e-31,4.726109608916434e-31,4.724110408616554e-31,4.722111208316674e-31,4.7201120080167935e-31,4.718112807716913e-31,4.716113607417034e-31,4.714114407117153e-31,4.712115206817273e-31,4.710116006517394e-31,4.708116806217513e-31,4.706117605917633e-31,4.704118405617754e-31,4.702119205317873e-31,4.700120005017993e-31,4.6981208047181135e-31,4.696121604418233e-31,4.694122404118353e-31,4.692123203818473e-31,4.690124003518593e-31,4.688124803218713e-31,4.6861256029188324e-31,4.684126402618953e-31,4.682127202319073e-31,4.680128002019192e-31,4.678128801719313e-31,4.676129601419433e-31,4.674130401119552e-31,4.672131200819673e-31,4.6701320005197925e-31,4.668132800219912e-31,4.666133599920033e-31,4.664134399620152e-31,4.662135199320272e-31,4.660135999020393e-31,4.658136798720512e-31,4.656137598420632e-31,4.654138398120752e-31,4.652139197820872e-31,4.650139997520992e-31,4.648140797221112e-31,4.646141596921232e-31,4.644142396621352e-31,4.6421431963214715e-31,4.640143996021592e-31,4.638144795721712e-31,4.6361455954218315e-31,4.634146395121952e-31,4.632147194822072e-31,4.630147994522191e-31,4.628148794222311e-31,4.626149593922432e-31,4.624150393622551e-31,4.622151193322671e-31,4.6201519930227915e-31,4.618152792722911e-31,4.616153592423031e-31,4.614154392123151e-31,4.612155191823271e-31,4.610155991523391e-31,4.608156791223511e-31,4.606157590923631e-31,4.604158390623751e-31,4.602159190323871e-31,4.600159990023991e-31,4.598160789724111e-31,4.59616158942423e-31,4.594162389124351e-31,4.5921631888244705e-31,4.59016398852459e-31,4.588164788224711e-31,4.5861655879248305e-31,4.58416638762495e-31,4.582167187325071e-31,4.58016798702519e-31,4.57816878672531e-31,4.576169586425431e-31,4.57417038612555e-31,4.57217118582567e-31,4.57017198552579e-31,4.56817278522591e-31,4.56617358492603e-31,4.5641743846261496e-31,4.56217518432627e-31,4.56017598402639e-31,4.5581767837265095e-31,4.55617758342663e-31,4.55417838312675e-31,4.552179182826869e-31,4.55017998252699e-31,4.54818078222711e-31,4.546181581927229e-31,4.54418238162735e-31,4.5421831813274695e-31,4.540183981027589e-31,4.538184780727709e-31,4.5361855804278295e-31,4.534186380127949e-31,4.532187179828069e-31,4.530187979528189e-31,4.528188779228309e-31,4.526189578928429e-31,4.524190378628549e-31,4.522191178328669e-31,4.520191978028789e-31,4.518192777728909e-31,4.516193577429029e-31,4.514194377129149e-31,4.512195176829268e-31,4.510195976529389e-31,4.5081967762295085e-31,4.506197575929628e-31,4.504198375629749e-31,4.502199175329868e-31,4.500199975029988e-31,4.498200774730109e-31,4.496201574430228e-31,4.494202374130348e-31,4.4922031738304685e-31,4.490203973530588e-31,4.488204773230708e-31,4.4862055729308285e-31,4.484206372630948e-31,4.482207172331068e-31,4.4802079720311875e-31,4.478208771731308e-31,4.476209571431428e-31,4.474210371131547e-31,4.472211170831668e-31,4.470211970531788e-31,4.468212770231907e-31,4.466213569932028e-31,4.464214369632148e-31,4.462215169332267e-31,4.460215969032388e-31,4.4582167687325075e-31,4.456217568432627e-31,4.454218368132747e-31,4.452219167832867e-31,4.450219967532987e-31,4.448220767233107e-31,4.446221566933227e-31,4.444222366633347e-31,4.442223166333467e-31,4.440223966033587e-31,4.438224765733707e-31,4.436225565433827e-31,4.434226365133947e-31,4.432227164834067e-31,4.4302279645341865e-31,4.428228764234307e-31,4.426229563934427e-31,4.424230363634546e-31,4.422231163334666e-31,4.420231963034787e-31,4.418232762734906e-31,4.416233562435026e-31,4.414234362135147e-31,4.412235161835266e-31,4.410235961535386e-31,4.4082367612355065e-31,4.406237560935626e-31,4.404238360635746e-31,4.402239160335866e-31,4.400239960035986e-31,4.398240759736106e-31,4.3962415594362254e-31,4.394242359136346e-31,4.392243158836466e-31,4.390243958536585e-31,4.388244758236706e-31,4.386245557936826e-31,4.384246357636945e-31,4.382247157337066e-31,4.3802479570371855e-31,4.378248756737305e-31,4.376249556437426e-31,4.374250356137545e-31,4.372251155837665e-31,4.370251955537786e-31,4.368252755237905e-31,4.366253554938025e-31,4.364254354638145e-31,4.362255154338265e-31,4.360255954038385e-31,4.358256753738505e-31,4.356257553438625e-31,4.354258353138745e-31,4.3522591528388645e-31,4.350259952538985e-31,4.348260752239105e-31,4.3462615519392244e-31,4.344262351639345e-31,4.342263151339465e-31,4.340263951039584e-31,4.338264750739705e-31,4.336265550439825e-31,4.334266350139944e-31,4.332267149840064e-31,4.3302679495401845e-31,4.328268749240304e-31,4.326269548940424e-31,4.324270348640544e-31,4.322271148340664e-31,4.320271948040784e-31,4.318272747740904e-31,4.316273547441024e-31,4.314274347141144e-31,4.312275146841264e-31,4.310275946541384e-31,4.308276746241504e-31,4.306277545941623e-31,4.304278345641744e-31,4.3022791453418635e-31,4.300279945041983e-31,4.298280744742104e-31,4.2962815444422234e-31,4.294282344142343e-31,4.292283143842464e-31,4.290283943542583e-31,4.288284743242703e-31,4.286285542942824e-31,4.284286342642943e-31,4.282287142343063e-31,4.2802879420431835e-31,4.278288741743303e-31,4.276289541443423e-31,4.2742903411435426e-31,4.272291140843663e-31,4.270291940543783e-31,4.2682927402439025e-31,4.266293539944023e-31,4.264294339644143e-31,4.262295139344262e-31,4.260295939044383e-31,4.258296738744503e-31,4.256297538444622e-31,4.254298338144743e-31,4.2522991378448625e-31,4.250299937544982e-31,4.248300737245102e-31,4.2463015369452224e-31,4.244302336645342e-31,4.242303136345462e-31,4.240303936045582e-31,4.238304735745702e-31,4.236305535445822e-31,4.234306335145942e-31,4.232307134846062e-31,4.230307934546182e-31,4.228308734246302e-31,4.226309533946422e-31,4.2243103336465416e-31,4.222311133346662e-31,4.220311933046782e-31,4.2183127327469015e-31,4.216313532447021e-31,4.214314332147142e-31,4.212315131847261e-31,4.210315931547381e-31,4.208316731247502e-31,4.206317530947621e-31,4.204318330647741e-31,4.2023191303478615e-31,4.200319930047981e-31,4.198320729748101e-31,4.1963215294482215e-31,4.194322329148341e-31,4.192323128848461e-31,4.1903239285485805e-31,4.188324728248701e-31,4.186325527948821e-31,4.18432632764894e-31,4.182327127349061e-31,4.180327927049181e-31,4.1783287267493e-31,4.176329526449421e-31,4.1743303261495406e-31,4.17233112584966e-31,4.170331925549781e-31,4.1683327252499005e-31,4.16633352495002e-31,4.164334324650141e-31,4.16233512435026e-31,4.16033592405038e-31,4.1583367237505e-31,4.15633752345062e-31,4.15433832315074e-31,4.15233912285086e-31,4.15033992255098e-31,4.1483407222511e-31,4.14634152195122e-31,4.14434232165134e-31,4.14234312135146e-31,4.1403439210515795e-31,4.1383447207517e-31,4.13634552045182e-31,4.134346320151939e-31,4.132347119852059e-31,4.13034791955218e-31,4.128348719252299e-31,4.126349518952419e-31,4.1243503186525396e-31,4.122351118352659e-31,4.120351918052779e-31,4.1183527177528995e-31,4.116353517453019e-31,4.114354317153139e-31,4.112355116853259e-31,4.110355916553379e-31,4.108356716253499e-31,4.106357515953619e-31,4.104358315653739e-31,4.102359115353859e-31,4.100359915053978e-31,4.098360714754099e-31,4.096361514454219e-31,4.094362314154338e-31,4.092363113854459e-31,4.0903639135545785e-31,4.088364713254698e-31,4.086365512954819e-31,4.084366312654938e-31,4.082367112355058e-31,4.080367912055179e-31,4.078368711755298e-31,4.076369511455418e-31,4.074370311155538e-31,4.072371110855658e-31,4.070371910555778e-31,4.068372710255898e-31,4.066373509956018e-31,4.064374309656138e-31,4.0623751093562575e-31,4.060375909056378e-31,4.058376708756498e-31,4.056377508456617e-31,4.054378308156738e-31,4.052379107856858e-31,4.050379907556977e-31,4.048380707257098e-31,4.046381506957218e-31,4.044382306657337e-31,4.042383106357457e-31,4.0403839060575775e-31,4.038384705757697e-31,4.036385505457817e-31,4.034386305157937e-31,4.032387104858057e-31,4.030387904558177e-31,4.028388704258297e-31,4.026389503958417e-31,4.024390303658537e-31,4.022391103358657e-31,4.020391903058777e-31,4.018392702758897e-31,4.016393502459017e-31,4.014394302159137e-31,4.0123951018592565e-31,4.010395901559376e-31,4.008396701259497e-31,4.0063975009596164e-31,4.004398300659736e-31,4.002399100359857e-31,4.000399900059976e-31,3.998400699760096e-31,3.996401499460217e-31,3.994402299160336e-31,3.992403098860456e-31,3.9904038985605765e-31,3.988404698260696e-31,3.986405497960816e-31,3.9844062976609355e-31,3.982407097361056e-31,3.980407897061176e-31,3.9784086967612955e-31,3.976409496461416e-31,3.974410296161536e-31,3.972411095861655e-31,3.970411895561776e-31,3.968412695261896e-31,3.966413494962015e-31,3.964414294662136e-31,3.9624150943622555e-31,3.960415894062375e-31,3.958416693762496e-31,3.9564174934626154e-31,3.954418293162735e-31,3.952419092862855e-31,3.950419892562975e-31,3.948420692263095e-31,3.946421491963215e-31,3.944422291663335e-31,3.942423091363455e-31,3.940423891063575e-31,3.9384246907636947e-31,3.936425490463815e-31,3.9344262901639345e-31,3.9324270898640547e-31,3.930427889564175e-31,3.9284286892642945e-31,3.9264294889644146e-31,3.9244302886645347e-31,3.9224310883646544e-31,3.9204318880647745e-31,3.918432687764894e-31,3.9164334874650143e-31,3.9144342871651344e-31,3.912435086865254e-31,3.910435886565374e-31,3.9084366862654943e-31,3.906437485965614e-31,3.904438285665734e-31,3.902439085365854e-31,3.900439885065974e-31,3.898440684766094e-31,3.8964414844662137e-31,3.894442284166334e-31,3.892443083866454e-31,3.8904438835665736e-31,3.8884446832666938e-31,3.8864454829668134e-31,3.8844462826669336e-31,3.8824470823670537e-31,3.8804478820671733e-31,3.8784486817672935e-31,3.876449481467413e-31,3.8744502811675333e-31,3.8724510808676534e-31,3.870451880567773e-31,3.868452680267893e-31,3.8664534799680133e-31,3.864454279668133e-31,3.862455079368253e-31,3.8604558790683728e-31,3.858456678768493e-31,3.856457478468613e-31,3.8544582781687327e-31,3.852459077868853e-31,3.850459877568973e-31,3.8484606772690926e-31,3.8464614769692127e-31,3.8444622766693324e-31,3.8424630763694525e-31,3.8404638760695726e-31,3.8384646757696923e-31,3.8364654754698124e-31,3.8344662751699326e-31,3.8324670748700522e-31,3.8304678745701724e-31,3.828468674270292e-31,3.826469473970412e-31,3.8244702736705323e-31,3.822471073370652e-31,3.820471873070772e-31,3.8184726727708917e-31,3.816473472471012e-31,3.814474272171132e-31,3.8124750718712517e-31,3.8104758715713718e-31,3.808476671271492e-31,3.8064774709716116e-31,3.8044782706717317e-31,3.8024790703718514e-31,3.8004798700719715e-31,3.7984806697720916e-31,3.7964814694722113e-31,3.7944822691723314e-31,3.7924830688724515e-31,3.790483868572571e-31,3.7884846682726913e-31,3.786485467972811e-31,3.784486267672931e-31,3.7824870673730512e-31,3.780487867073171e-31,3.778488666773291e-31,3.776489466473411e-31,3.774490266173531e-31,3.772491065873651e-31,3.7704918655737706e-31,3.7684926652738907e-31,3.766493464974011e-31,3.7644942646741305e-31,3.7624950643742507e-31,3.7604958640743708e-31,3.7584966637744905e-31,3.7564974634746106e-31,3.7544982631747303e-31,3.7524990628748504e-31,3.7504998625749705e-31,3.74850066227509e-31,3.7465014619752103e-31,3.74450226167533e-31,3.74250306137545e-31,3.74050386107557e-31,3.73850466077569e-31,3.73650546047581e-31,3.73450626017593e-31,3.73250705987605e-31,3.73050785957617e-31,3.7285086592762896e-31,3.7265094589764097e-31,3.72451025867653e-31,3.7225110583766495e-31,3.7205118580767696e-31,3.7185126577768897e-31,3.7165134574770094e-31,3.7145142571771295e-31,3.7125150568772492e-31,3.7105158565773693e-31,3.7085166562774895e-31,3.706517455977609e-31,3.7045182556777293e-31,3.7025190553778494e-31,3.700519855077969e-31,3.698520654778089e-31,3.696521454478209e-31,3.694522254178329e-31,3.692523053878449e-31,3.6905238535785688e-31,3.688524653278689e-31,3.6865254529788086e-31,3.6845262526789287e-31,3.682527052379049e-31,3.6805278520791685e-31,3.6785286517792886e-31,3.6765294514794087e-31,3.6745302511795284e-31,3.6725310508796485e-31,3.670531850579768e-31,3.6685326502798883e-31,3.6665334499800084e-31,3.664534249680128e-31,3.6625350493802482e-31,3.6605358490803683e-31,3.658536648780488e-31,3.656537448480608e-31,3.654538248180728e-31,3.652539047880848e-31,3.650539847580968e-31,3.6485406472810877e-31,3.646541446981208e-31,3.644542246681328e-31,3.6425430463814477e-31,3.6405438460815678e-31,3.6385446457816875e-31,3.6365454454818076e-31,3.6345462451819277e-31,3.6325470448820474e-31,3.6305478445821675e-31,3.6285486442822876e-31,3.6265494439824073e-31,3.6245502436825274e-31,3.622551043382647e-31,3.620551843082767e-31,3.6185526427828873e-31,3.616553442483007e-31,3.614554242183127e-31,3.612555041883247e-31,3.610555841583367e-31,3.608556641283487e-31,3.6065574409836067e-31,3.604558240683727e-31,3.602559040383847e-31,3.6005598400839666e-31,3.5985606397840867e-31,3.5965614394842064e-31,3.5945622391843265e-31,3.5925630388844467e-31,3.5905638385845663e-31,3.5885646382846865e-31,3.5865654379848066e-31,3.5845662376849263e-31,3.5825670373850464e-31,3.580567837085166e-31,3.578568636785286e-31,3.5765694364854063e-31,3.574570236185526e-31,3.572571035885646e-31,3.570571835585766e-31,3.568572635285886e-31,3.566573434986006e-31,3.5645742346861257e-31,3.562575034386246e-31,3.560575834086366e-31,3.5585766337864856e-31,3.5565774334866057e-31,3.5545782331867254e-31,3.5525790328868455e-31,3.5505798325869656e-31,3.5485806322870853e-31,3.5465814319872054e-31,3.5445822316873255e-31,3.5425830313874452e-31,3.5405838310875653e-31,3.538584630787685e-31,3.536585430487805e-31,3.5345862301879253e-31,3.532587029888045e-31,3.530587829588165e-31,3.528588629288285e-31,3.526589428988405e-31,3.524590228688525e-31,3.5225910283886447e-31,3.5205918280887648e-31,3.518592627788885e-31,3.5165934274890046e-31,3.5145942271891247e-31,3.512595026889245e-31,3.5105958265893645e-31,3.5085966262894846e-31,3.5065974259896043e-31,3.5045982256897244e-31,3.5025990253898445e-31,3.500599825089964e-31,3.4986006247900843e-31,3.496601424490204e-31,3.494602224190324e-31,3.4926030238904442e-31,3.490603823590564e-31,3.488604623290684e-31,3.486605422990804e-31,3.484606222690924e-31,3.482607022391044e-31,3.4806078220911636e-31,3.4786086217912837e-31,3.476609421491404e-31,3.4746102211915235e-31,3.4726110208916437e-31,3.4706118205917638e-31,3.4686126202918835e-31,3.4666134199920036e-31,3.4646142196921232e-31,3.4626150193922434e-31,3.4606158190923635e-31,3.458616618792483e-31,3.4566174184926033e-31,3.4546182181927234e-31,3.452619017892843e-31,3.450619817592963e-31,3.448620617293083e-31,3.446621416993203e-31,3.444622216693323e-31,3.442623016393443e-31,3.440623816093563e-31,3.438624615793683e-31,3.4366254154938027e-31,3.434626215193923e-31,3.4326270148940425e-31,3.4306278145941626e-31,3.4286286142942827e-31,3.4266294139944024e-31,3.4246302136945225e-31,3.422631013394642e-31,3.4206318130947623e-31,3.4186326127948825e-31,3.416633412495002e-31,3.4146342121951223e-31,3.4126350118952424e-31,3.410635811595362e-31,3.408636611295482e-31,3.406637410995602e-31,3.404638210695722e-31,3.402639010395842e-31,3.4006398100959618e-31,3.398640609796082e-31,3.396641409496202e-31,3.3946422091963217e-31,3.392643008896442e-31,3.3906438085965615e-31,3.3886446082966816e-31,3.3866454079968017e-31,3.3846462076969214e-31,3.3826470073970415e-31,3.3806478070971616e-31,3.3786486067972813e-31,3.3766494064974014e-31,3.374650206197521e-31,3.3726510058976412e-31,3.3706518055977613e-31,3.368652605297881e-31,3.366653404998001e-31,3.364654204698121e-31,3.362655004398241e-31,3.360655804098361e-31,3.3586566037984807e-31,3.356657403498601e-31,3.354658203198721e-31,3.3526590028988406e-31,3.3506598025989608e-31,3.3486606022990804e-31,3.3466614019992006e-31,3.3446622016993207e-31,3.3426630013994404e-31,3.3406638010995605e-31,3.3386646007996806e-31,3.3366654004998003e-31,3.3346662001999204e-31,3.33266699990004e-31,3.33066779960016e-31,3.3286685993002803e-31,3.3266693990004e-31,3.32467019870052e-31,3.3226709984006402e-31,3.32067179810076e-31,3.31867259780088e-31,3.3166733975009997e-31,3.31467419720112e-31,3.31267499690124e-31,3.3106757966013596e-31,3.3086765963014797e-31,3.3066773960016e-31,3.3046781957017195e-31,3.3026789954018397e-31,3.3006797951019593e-31,3.2986805948020794e-31,3.2966813945021996e-31,3.2946821942023192e-31,3.2926829939024394e-31,3.290683793602559e-31,3.288684593302679e-31,3.2866853930027993e-31,3.284686192702919e-31,3.282686992403039e-31,3.280687792103159e-31,3.278688591803279e-31,3.276689391503399e-31,3.2746901912035187e-31,3.272690990903639e-31,3.270691790603759e-31,3.2686925903038786e-31,3.2666933900039987e-31,3.264694189704119e-31,3.2626949894042385e-31,3.2606957891043586e-31,3.2586965888044783e-31,3.2566973885045984e-31,3.2546981882047185e-31,3.252698987904838e-31,3.2506997876049583e-31,3.2487005873050785e-31,3.246701387005198e-31,3.2447021867053182e-31,3.242702986405438e-31,3.240703786105558e-31,3.238704585805678e-31,3.236705385505798e-31,3.234706185205918e-31,3.2327069849060376e-31,3.2307077846061578e-31,3.228708584306278e-31,3.2267093840063976e-31,3.2247101837065177e-31,3.222710983406638e-31,3.2207117831067575e-31,3.2187125828068776e-31,3.2167133825069973e-31,3.2147141822071174e-31,3.2127149819072375e-31,3.210715781607357e-31,3.2087165813074773e-31,3.2067173810075974e-31,3.204718180707717e-31,3.2027189804078372e-31,3.200719780107957e-31,3.198720579808077e-31,3.196721379508197e-31,3.194722179208317e-31,3.192722978908437e-31,3.190723778608557e-31,3.1887245783086767e-31,3.186725378008797e-31,3.1847261777089165e-31,3.1827269774090366e-31,3.1807277771091568e-31,3.1787285768092764e-31,3.1767293765093966e-31,3.1747301762095162e-31,3.1727309759096364e-31,3.1707317756097565e-31,3.168732575309876e-31,3.1667333750099963e-31,3.1647341747101164e-31,3.162734974410236e-31,3.160735774110356e-31,3.158736573810476e-31,3.156737373510596e-31,3.154738173210716e-31,3.152738972910836e-31,3.150739772610956e-31,3.148740572311076e-31,3.1467413720111957e-31,3.144742171711316e-31,3.1427429714114355e-31,3.1407437711115556e-31,3.1387445708116757e-31,3.1367453705117954e-31,3.1347461702119155e-31,3.1327469699120356e-31,3.1307477696121553e-31,3.1287485693122754e-31,3.126749369012395e-31,3.1247501687125152e-31,3.1227509684126354e-31,3.120751768112755e-31,3.118752567812875e-31,3.1167533675129953e-31,3.114754167213115e-31,3.112754966913235e-31,3.1107557666133548e-31,3.108756566313475e-31,3.106757366013595e-31,3.1047581657137147e-31,3.102758965413835e-31,3.1007597651139545e-31,3.0987605648140746e-31,3.0967613645141947e-31,3.0947621642143144e-31,3.0927629639144345e-31,3.0907637636145546e-31,3.0887645633146743e-31,3.0867653630147944e-31,3.084766162714914e-31,3.082766962415034e-31,3.0807677621151543e-31,3.078768561815274e-31,3.076769361515394e-31,3.0747701612155142e-31,3.072770960915634e-31,3.070771760615754e-31,3.0687725603158737e-31,3.066773360015994e-31,3.064774159716114e-31,3.0627749594162336e-31,3.0607757591163538e-31,3.058776558816474e-31,3.0567773585165936e-31,3.0547781582167137e-31,3.0527789579168334e-31,3.0507797576169535e-31,3.0487805573170736e-31,3.0467813570171933e-31,3.0447821567173134e-31,3.042782956417433e-31,3.040783756117553e-31,3.0387845558176733e-31,3.036785355517793e-31,3.034786155217913e-31,3.032786954918033e-31,3.030787754618153e-31,3.028788554318273e-31,3.0267893540183927e-31,3.024790153718513e-31,3.022790953418633e-31,3.0207917531187526e-31,3.0187925528188727e-31,3.016793352518993e-31,3.0147941522191125e-31,3.0127949519192326e-31,3.0107957516193523e-31,3.0087965513194724e-31,3.0067973510195926e-31,3.0047981507197122e-31,3.0027989504198324e-31,3.0007997501199525e-31,2.998800549820072e-31,2.9968013495201923e-31,2.994802149220312e-31,2.992802948920432e-31,2.990803748620552e-31,2.988804548320672e-31,2.986805348020792e-31,2.984806147720912e-31,2.982806947421032e-31,2.980807747121152e-31,2.9788085468212716e-31,2.9768093465213917e-31,2.974810146221512e-31,2.9728109459216315e-31,2.9708117456217516e-31,2.9688125453218713e-31,2.9668133450219914e-31,2.9648141447221115e-31,2.962814944422231e-31,2.9608157441223513e-31,2.9588165438224714e-31,2.956817343522591e-31,2.9548181432227112e-31,2.952818942922831e-31,2.950819742622951e-31,2.948820542323071e-31,2.946821342023191e-31,2.944822141723311e-31,2.942822941423431e-31,2.9408237411235508e-31,2.938824540823671e-31,2.9368253405237905e-31,2.9348261402239107e-31,2.932826939924031e-31,2.9308277396241505e-31,2.9288285393242706e-31,2.9268293390243907e-31,2.9248301387245104e-31,2.9228309384246305e-31,2.92083173812475e-31,2.9188325378248703e-31,2.9168333375249904e-31,2.91483413722511e-31,2.91283493692523e-31,2.91083573662535e-31,2.90883653632547e-31,2.90683733602559e-31,2.90483813572571e-31,2.90283893542583e-31,2.90083973512595e-31,2.8988405348260697e-31,2.89684133452619e-31,2.8948421342263095e-31,2.8928429339264296e-31,2.8908437336265498e-31,2.8888445333266694e-31,2.8868453330267896e-31,2.8848461327269097e-31,2.8828469324270293e-31,2.8808477321271495e-31,2.878848531827269e-31,2.8768493315273893e-31,2.8748501312275094e-31,2.872850930927629e-31,2.870851730627749e-31,2.8688525303278693e-31,2.866853330027989e-31,2.864854129728109e-31,2.8628549294282288e-31,2.860855729128349e-31,2.858856528828469e-31,2.8568573285285887e-31,2.854858128228709e-31,2.8528589279288285e-31,2.8508597276289486e-31,2.8488605273290687e-31,2.8468613270291884e-31,2.8448621267293085e-31,2.8428629264294286e-31,2.8408637261295483e-31,2.8388645258296684e-31,2.836865325529788e-31,2.8348661252299082e-31,2.8328669249300284e-31,2.830867724630148e-31,2.828868524330268e-31,2.8268693240303883e-31,2.824870123730508e-31,2.822870923430628e-31,2.8208717231307477e-31,2.818872522830868e-31,2.816873322530988e-31,2.8148741222311077e-31,2.8128749219312278e-31,2.810875721631348e-31,2.8088765213314676e-31,2.8068773210315877e-31,2.8048781207317074e-31,2.8028789204318275e-31,2.8008797201319476e-31,2.7988805198320673e-31,2.7968813195321874e-31,2.7948821192323075e-31,2.792882918932427e-31,2.7908837186325473e-31,2.788884518332667e-31,2.786885318032787e-31,2.7848861177329072e-31,2.782886917433027e-31,2.780887717133147e-31,2.7788885168332667e-31,2.776889316533387e-31,2.774890116233507e-31,2.7728909159336266e-31,2.7708917156337467e-31,2.768892515333867e-31,2.7668933150339865e-31,2.7648941147341067e-31,2.7628949144342263e-31,2.7608957141343465e-31,2.7588965138344666e-31,2.7568973135345863e-31,2.7548981132347064e-31,2.7528989129348265e-31,2.750899712634946e-31,2.7489005123350663e-31,2.746901312035186e-31,2.744902111735306e-31,2.742902911435426e-31,2.740903711135546e-31,2.738904510835666e-31,2.736905310535786e-31,2.734906110235906e-31,2.732906909936026e-31,2.7309077096361456e-31,2.7289085093362657e-31,2.726909309036386e-31,2.7249101087365055e-31,2.7229109084366256e-31,2.7209117081367453e-31,2.7189125078368654e-31,2.7169133075369855e-31,2.7149141072371052e-31,2.7129149069372253e-31,2.7109157066373455e-31,2.708916506337465e-31,2.7069173060375853e-31,2.704918105737705e-31,2.702918905437825e-31,2.700919705137945e-31,2.698920504838065e-31,2.696921304538185e-31,2.694922104238305e-31,2.6929229039384248e-31,2.690923703638545e-31,2.6889245033386646e-31,2.6869253030387847e-31,2.684926102738905e-31,2.6829269024390245e-31,2.6809277021391446e-31,2.6789285018392647e-31,2.6769293015393844e-31,2.6749301012395045e-31,2.672930900939624e-31,2.6709317006397443e-31,2.6689325003398644e-31,2.666933300039984e-31,2.6649340997401042e-31,2.6629348994402243e-31,2.660935699140344e-31,2.658936498840464e-31,2.656937298540584e-31,2.654938098240704e-31,2.652938897940824e-31,2.6509396976409437e-31,2.648940497341064e-31,2.6469412970411835e-31,2.6449420967413037e-31,2.6429428964414238e-31,2.6409436961415435e-31,2.6389444958416636e-31,2.6369452955417837e-31,2.6349460952419034e-31,2.6329468949420235e-31,2.630947694642143e-31,2.6289484943422633e-31,2.6269492940423834e-31,2.624950093742503e-31,2.622950893442623e-31,2.6209516931427433e-31,2.618952492842863e-31,2.616953292542983e-31,2.614954092243103e-31,2.612954891943223e-31,2.610955691643343e-31,2.6089564913434627e-31,2.606957291043583e-31,2.604958090743703e-31,2.6029588904438226e-31,2.6009596901439427e-31,2.5989604898440624e-31,2.5969612895441825e-31,2.5949620892443027e-31,2.5929628889444223e-31,2.5909636886445425e-31,2.588964488344662e-31,2.5869652880447823e-31,2.5849660877449024e-31,2.582966887445022e-31,2.580967687145142e-31,2.5789684868452623e-31,2.576969286545382e-31,2.574970086245502e-31,2.5729708859456218e-31,2.570971685645742e-31,2.568972485345862e-31,2.5669732850459817e-31,2.564974084746102e-31,2.562974884446222e-31,2.5609756841463416e-31,2.5589764838464617e-31,2.5569772835465814e-31,2.5549780832467015e-31,2.5529788829468216e-31,2.5509796826469413e-31,2.5489804823470614e-31,2.5469812820471815e-31,2.5449820817473012e-31,2.5429828814474213e-31,2.540983681147541e-31,2.538984480847661e-31,2.5369852805477813e-31,2.534986080247901e-31,2.532986879948021e-31,2.5309876796481407e-31,2.528988479348261e-31,2.526989279048381e-31,2.5249900787485007e-31,2.5229908784486208e-31,2.520991678148741e-31,2.5189924778488606e-31,2.5169932775489807e-31,2.5149940772491004e-31,2.5129948769492205e-31,2.5109956766493406e-31,2.5089964763494603e-31,2.5069972760495804e-31,2.5049980757497005e-31,2.50299887544982e-31,2.5009996751499403e-31,2.49900047485006e-31,2.49700127455018e-31,2.4950020742503002e-31,2.49300287395042e-31,2.49100367365054e-31,2.48900447335066e-31,2.48700527305078e-31,2.4850060727509e-31,2.4830068724510196e-31,2.4810076721511397e-31,2.47900847185126e-31,2.4770092715513795e-31,2.4750100712514997e-31,2.4730108709516198e-31,2.4710116706517395e-31,2.4690124703518596e-31,2.4670132700519793e-31,2.4650140697520994e-31,2.4630148694522195e-31,2.461015669152339e-31,2.4590164688524593e-31,2.457017268552579e-31,2.455018068252699e-31,2.453018867952819e-31,2.451019667652939e-31,2.449020467353059e-31,2.447021267053179e-31,2.445022066753299e-31,2.443022866453419e-31,2.4410236661535386e-31,2.4390244658536587e-31,2.437025265553779e-31,2.4350260652538985e-31,2.4330268649540186e-31,2.4310276646541387e-31,2.4290284643542584e-31,2.4270292640543785e-31,2.4250300637544982e-31,2.4230308634546183e-31,2.4210316631547385e-31,2.419032462854858e-31,2.4170332625549783e-31,2.4150340622550984e-31,2.413034861955218e-31,2.411035661655338e-31,2.409036461355458e-31,2.407037261055578e-31,2.405038060755698e-31,2.4030388604558178e-31,2.401039660155938e-31,2.3990404598560576e-31,2.3970412595561777e-31,2.395042059256298e-31,2.3930428589564175e-31,2.3910436586565376e-31,2.3890444583566577e-31,2.3870452580567774e-31,2.3850460577568975e-31,2.383046857457017e-31,2.3810476571571373e-31,2.3790484568572574e-31,2.377049256557377e-31,2.3750500562574972e-31,2.3730508559576173e-31,2.371051655657737e-31,2.369052455357857e-31,2.367053255057977e-31,2.365054054758097e-31,2.363054854458217e-31,2.3610556541583367e-31,2.359056453858457e-31,2.357057253558577e-31,2.3550580532586966e-31,2.3530588529588168e-31,2.3510596526589364e-31,2.3490604523590566e-31,2.3470612520591767e-31,2.3450620517592964e-31,2.3430628514594165e-31,2.3410636511595366e-31,2.3390644508596563e-31,2.3370652505597764e-31,2.335066050259896e-31,2.333066849960016e-31,2.3310676496601363e-31,2.329068449360256e-31,2.327069249060376e-31,2.325070048760496e-31,2.323070848460616e-31,2.321071648160736e-31,2.3190724478608557e-31,2.317073247560976e-31,2.315074047261096e-31,2.3130748469612156e-31,2.3110756466613357e-31,2.3090764463614554e-31,2.3070772460615755e-31,2.3050780457616957e-31,2.3030788454618153e-31,2.3010796451619355e-31,2.2990804448620556e-31,2.2970812445621752e-31,2.2950820442622954e-31,2.293082843962415e-31,2.291083643662535e-31,2.2890844433626553e-31,2.287085243062775e-31,2.285086042762895e-31,2.283086842463015e-31,2.281087642163135e-31,2.279088441863255e-31,2.2770892415633747e-31,2.275090041263495e-31,2.273090840963615e-31,2.2710916406637346e-31,2.2690924403638547e-31,2.2670932400639744e-31,2.2650940397640945e-31,2.2630948394642146e-31,2.2610956391643343e-31,2.2590964388644544e-31,2.2570972385645745e-31,2.255098038264694e-31,2.2530988379648143e-31,2.251099637664934e-31,2.249100437365054e-31,2.2471012370651743e-31,2.245102036765294e-31,2.243102836465414e-31,2.241103636165534e-31,2.239104435865654e-31,2.237105235565774e-31,2.2351060352658936e-31,2.2331068349660138e-31,2.231107634666134e-31,2.2291084343662536e-31,2.2271092340663737e-31,2.225110033766494e-31,2.2231108334666135e-31,2.2211116331667336e-31,2.2191124328668533e-31,2.2171132325669734e-31,2.2151140322670935e-31,2.213114831967213e-31,2.2111156316673333e-31,2.209116431367453e-31,2.207117231067573e-31,2.2051180307676932e-31,2.203118830467813e-31,2.201119630167933e-31,2.199120429868053e-31,2.197121229568173e-31,2.195122029268293e-31,2.1931228289684126e-31,2.1911236286685327e-31,2.189124428368653e-31,2.1871252280687725e-31,2.1851260277688926e-31,2.1831268274690128e-31,2.1811276271691324e-31,2.1791284268692526e-31,2.1771292265693722e-31,2.1751300262694924e-31,2.1731308259696125e-31,2.171131625669732e-31,2.1691324253698523e-31,2.1671332250699724e-31,2.165134024770092e-31,2.163134824470212e-31,2.161135624170332e-31,2.159136423870452e-31,2.157137223570572e-31,2.155138023270692e-31,2.153138822970812e-31,2.151139622670932e-31,2.1491404223710517e-31,2.147141222071172e-31,2.1451420217712915e-31,2.1431428214714116e-31,2.1411436211715317e-31,2.1391444208716514e-31,2.1371452205717715e-31,2.135146020271891e-31,2.1331468199720113e-31,2.1311476196721314e-31,2.129148419372251e-31,2.1271492190723712e-31,2.1251500187724914e-31,2.123150818472611e-31,2.121151618172731e-31,2.119152417872851e-31,2.117153217572971e-31,2.115154017273091e-31,2.1131548169732108e-31,2.111155616673331e-31,2.109156416373451e-31,2.1071572160735707e-31,2.105158015773691e-31,2.1031588154738105e-31,2.1011596151739306e-31,2.0991604148740507e-31,2.0971612145741704e-31,2.0951620142742905e-31,2.0931628139744106e-31,2.0911636136745303e-31,2.0891644133746504e-31,2.08716521307477e-31,2.08516601277489e-31,2.0831668124750103e-31,2.08116761217513e-31,2.07916841187525e-31,2.07716921157537e-31,2.07517001127549e-31,2.07317081097561e-31,2.0711716106757297e-31,2.06917241037585e-31,2.06717321007597e-31,2.0651740097760896e-31,2.0631748094762098e-31,2.0611756091763294e-31,2.0591764088764496e-31,2.0571772085765697e-31,2.0551780082766894e-31,2.0531788079768095e-31,2.0511796076769296e-31,2.0491804073770493e-31,2.0471812070771694e-31,2.045182006777289e-31,2.043182806477409e-31,2.0411836061775293e-31,2.039184405877649e-31,2.037185205577769e-31,2.035186005277889e-31,2.033186804978009e-31,2.031187604678129e-31,2.0291884043782487e-31,2.027189204078369e-31,2.025190003778489e-31,2.0231908034786086e-31,2.0211916031787287e-31,2.019192402878849e-31,2.0171932025789685e-31,2.0151940022790886e-31,2.0131948019792083e-31,2.0111956016793284e-31,2.0091964013794486e-31,2.0071972010795682e-31,2.0051980007796884e-31,2.003198800479808e-31,2.001199600179928e-31,1.9992003998800483e-31,1.997201199580168e-31,1.995201999280288e-31,1.993202798980408e-31,1.991203598680528e-31,1.989204398380648e-31,1.9872051980807677e-31,1.985205997780888e-31,1.983206797481008e-31,1.9812075971811276e-31,1.9792083968812477e-31,1.977209196581368e-31,1.9752099962814875e-31,1.9732107959816076e-31,1.9712115956817275e-31,1.9692123953818474e-31,1.9672131950819673e-31,1.9652139947820874e-31,1.9632147944822073e-31,1.9612155941823272e-31,1.9592163938824471e-31,1.9572171935825672e-31,1.9552179932826871e-31,1.953218792982807e-31,1.951219592682927e-31,1.9492203923830468e-31,1.947221192083167e-31,1.9452219917832869e-31,1.9432227914834068e-31,1.9412235911835267e-31,1.9392243908836468e-31,1.9372251905837667e-31,1.9352259902838866e-31,1.9332267899840065e-31,1.9312275896841266e-31,1.9292283893842465e-31,1.9272291890843664e-31,1.9252299887844863e-31,1.9232307884846064e-31,1.9212315881847263e-31,1.9192323878848462e-31,1.917233187584966e-31,1.9152339872850862e-31,1.9132347869852061e-31,1.911235586685326e-31,1.909236386385446e-31,1.907237186085566e-31,1.905237985785686e-31,1.9032387854858058e-31,1.9012395851859257e-31,1.8992403848860458e-31,1.8972411845861657e-31,1.8952419842862856e-31,1.8932427839864055e-31,1.8912435836865257e-31,1.8892443833866456e-31,1.8872451830867655e-31,1.8852459827868854e-31,1.8832467824870052e-31,1.8812475821871254e-31,1.8792483818872453e-31,1.8772491815873652e-31,1.875249981287485e-31,1.8732507809876052e-31,1.871251580687725e-31,1.869252380387845e-31,1.8672531800879649e-31,1.865253979788085e-31,1.863254779488205e-31,1.8612555791883248e-31,1.8592563788884447e-31,1.8572571785885648e-31,1.8552579782886847e-31,1.8532587779888046e-31,1.8512595776889245e-31,1.8492603773890446e-31,1.8472611770891645e-31,1.8452619767892844e-31,1.8432627764894043e-31,1.8412635761895244e-31,1.8392643758896443e-31,1.8372651755897642e-31,1.8352659752898841e-31,1.8332667749900043e-31,1.8312675746901242e-31,1.829268374390244e-31,1.827269174090364e-31,1.825269973790484e-31,1.823270773490604e-31,1.8212715731907239e-31,1.8192723728908438e-31,1.8172731725909637e-31,1.8152739722910838e-31,1.8132747719912037e-31,1.8112755716913236e-31,1.8092763713914435e-31,1.8072771710915636e-31,1.8052779707916835e-31,1.8032787704918034e-31,1.8012795701919233e-31,1.7992803698920434e-31,1.7972811695921633e-31,1.7952819692922832e-31,1.793282768992403e-31,1.7912835686925232e-31,1.7892843683926431e-31,1.787285168092763e-31,1.785285967792883e-31,1.783286767493003e-31,1.781287567193123e-31,1.7792883668932428e-31,1.7772891665933627e-31,1.7752899662934829e-31,1.7732907659936028e-31,1.7712915656937226e-31,1.7692923653938425e-31,1.7672931650939627e-31,1.7652939647940826e-31,1.7632947644942025e-31,1.7612955641943224e-31,1.7592963638944423e-31,1.7572971635945624e-31,1.7552979632946823e-31,1.7532987629948022e-31,1.751299562694922e-31,1.7493003623950422e-31,1.747301162095162e-31,1.745301961795282e-31,1.7433027614954019e-31,1.741303561195522e-31,1.739304360895642e-31,1.7373051605957618e-31,1.7353059602958817e-31,1.7333067599960018e-31,1.7313075596961217e-31,1.7293083593962416e-31,1.7273091590963615e-31,1.7253099587964816e-31,1.7233107584966015e-31,1.7213115581967214e-31,1.7193123578968413e-31,1.7173131575969614e-31,1.7153139572970813e-31,1.7133147569972012e-31,1.7113155566973211e-31,1.7093163563974413e-31,1.7073171560975612e-31,1.705317955797681e-31,1.703318755497801e-31,1.701319555197921e-31,1.699320354898041e-31,1.6973211545981609e-31,1.6953219542982808e-31,1.6933227539984007e-31,1.6913235536985208e-31,1.6893243533986407e-31,1.6873251530987606e-31,1.6853259527988805e-31,1.6833267524990006e-31,1.6813275521991205e-31,1.6793283518992404e-31,1.6773291515993603e-31,1.6753299512994804e-31,1.6733307509996003e-31,1.6713315506997202e-31,1.6693323503998401e-31,1.6673331500999602e-31,1.6653339498000801e-31,1.6633347495002e-31,1.66133554920032e-31,1.65933634890044e-31,1.65733714860056e-31,1.6553379483006798e-31,1.6533387480007997e-31,1.6513395477009199e-31,1.6493403474010398e-31,1.6473411471011597e-31,1.6453419468012796e-31,1.6433427465013997e-31,1.6413435462015196e-31,1.6393443459016395e-31,1.6373451456017594e-31,1.6353459453018795e-31,1.6333467450019994e-31,1.6313475447021193e-31,1.6293483444022392e-31,1.627349144102359e-31,1.6253499438024792e-31,1.623350743502599e-31,1.621351543202719e-31,1.619352342902839e-31,1.617353142602959e-31,1.615353942303079e-31,1.6133547420031988e-31,1.6113555417033187e-31,1.6093563414034388e-31,1.6073571411035587e-31,1.6053579408036786e-31,1.6033587405037985e-31,1.6013595402039186e-31,1.5993603399040385e-31,1.5973611396041584e-31,1.5953619393042783e-31,1.5933627390043985e-31,1.5913635387045184e-31,1.5893643384046383e-31,1.5873651381047582e-31,1.5853659378048783e-31,1.5833667375049982e-31,1.581367537205118e-31,1.579368336905238e-31,1.577369136605358e-31,1.575369936305478e-31,1.5733707360055979e-31,1.5713715357057178e-31,1.569372335405838e-31,1.5673731351059578e-31,1.5653739348060777e-31,1.5633747345061976e-31,1.5613755342063175e-31,1.5593763339064376e-31,1.5573771336065575e-31,1.5553779333066774e-31,1.5533787330067973e-31,1.5513795327069174e-31,1.5493803324070373e-31,1.5473811321071572e-31,1.5453819318072771e-31,1.5433827315073972e-31,1.5413835312075171e-31,1.539384330907637e-31,1.537385130607757e-31,1.535385930307877e-31,1.533386730007997e-31,1.5313875297081169e-31,1.5293883294082368e-31,1.5273891291083569e-31,1.5253899288084768e-31,1.5233907285085967e-31,1.5213915282087166e-31,1.5193923279088367e-31,1.5173931276089566e-31,1.5153939273090765e-31,1.5133947270091964e-31,1.5113955267093165e-31,1.5093963264094364e-31,1.5073971261095563e-31,1.5053979258096762e-31,1.5033987255097963e-31,1.5013995252099162e-31,1.4994003249100361e-31,1.497401124610156e-31,1.495401924310276e-31,1.493402724010396e-31,1.491403523710516e-31,1.4894043234106358e-31,1.4874051231107557e-31,1.4854059228108758e-31,1.4834067225109957e-31,1.4814075222111156e-31,1.4794083219112355e-31,1.4774091216113557e-31,1.4754099213114756e-31,1.4734107210115955e-31,1.4714115207117154e-31,1.4694123204118355e-31,1.4674131201119554e-31,1.4654139198120753e-31,1.4634147195121952e-31,1.4614155192123153e-31,1.4594163189124352e-31,1.457417118612555e-31,1.455417918312675e-31,1.453418718012795e-31,1.451419517712915e-31,1.449420317413035e-31,1.4474211171131548e-31,1.445421916813275e-31,1.4434227165133948e-31,1.4414235162135147e-31,1.4394243159136346e-31,1.4374251156137545e-31,1.4354259153138746e-31,1.4334267150139945e-31,1.4314275147141144e-31,1.4294283144142343e-31,1.4274291141143544e-31,1.4254299138144743e-31,1.4234307135145942e-31,1.4214315132147141e-31,1.4194323129148343e-31,1.4174331126149542e-31,1.415433912315074e-31,1.413434712015194e-31,1.411435511715314e-31,1.409436311415434e-31,1.4074371111155539e-31,1.4054379108156738e-31,1.4034387105157939e-31,1.4014395102159138e-31,1.3994403099160337e-31,1.3974411096161536e-31,1.3954419093162737e-31,1.3934427090163936e-31,1.3914435087165135e-31,1.3894443084166334e-31,1.3874451081167535e-31,1.3854459078168734e-31,1.3834467075169933e-31,1.3814475072171132e-31,1.3794483069172333e-31,1.3774491066173532e-31,1.3754499063174731e-31,1.373450706017593e-31,1.371451505717713e-31,1.369452305417833e-31,1.367453105117953e-31,1.3654539048180728e-31,1.3634547045181927e-31,1.3614555042183129e-31,1.3594563039184328e-31,1.3574571036185527e-31,1.3554579033186725e-31,1.3534587030187927e-31,1.3514595027189126e-31,1.3494603024190325e-31,1.3474611021191524e-31,1.3454619018192725e-31,1.3434627015193924e-31,1.3414635012195123e-31,1.3394643009196322e-31,1.3374651006197523e-31,1.3354659003198722e-31,1.333466700019992e-31,1.331467499720112e-31,1.3294682994202321e-31,1.327469099120352e-31,1.325469898820472e-31,1.3234706985205918e-31,1.321471498220712e-31,1.3194722979208318e-31,1.3174730976209517e-31,1.3154738973210716e-31,1.3134746970211917e-31,1.3114754967213116e-31,1.3094762964214315e-31,1.3074770961215514e-31,1.3054778958216713e-31,1.3034786955217915e-31,1.3014794952219114e-31,1.2994802949220312e-31,1.2974810946221511e-31,1.2954818943222713e-31,1.2934826940223912e-31,1.291483493722511e-31,1.289484293422631e-31,1.287485093122751e-31,1.285485892822871e-31,1.2834866925229909e-31,1.2814874922231108e-31,1.279488291923231e-31,1.2774890916233508e-31,1.2754898913234707e-31,1.2734906910235906e-31,1.2714914907237107e-31,1.2694922904238306e-31,1.2674930901239505e-31,1.2654938898240704e-31,1.2634946895241905e-31,1.2614954892243104e-31,1.2594962889244303e-31,1.2574970886245502e-31,1.2554978883246703e-31,1.2534986880247902e-31,1.2514994877249101e-31,1.24950028742503e-31,1.2475010871251502e-31,1.24550188682527e-31,1.24350268652539e-31,1.2415034862255098e-31,1.2395042859256297e-31,1.2375050856257499e-31,1.2355058853258698e-31,1.2335066850259897e-31,1.2315074847261096e-31,1.2295082844262297e-31,1.2275090841263496e-31,1.2255098838264695e-31,1.2235106835265894e-31,1.2215114832267095e-31,1.2195122829268294e-31,1.2175130826269493e-31,1.2155138823270692e-31,1.2135146820271893e-31,1.2115154817273092e-31,1.209516281427429e-31,1.207517081127549e-31,1.2055178808276691e-31,1.203518680527789e-31,1.201519480227909e-31,1.1995202799280288e-31,1.197521079628149e-31,1.1955218793282688e-31,1.1935226790283887e-31,1.1915234787285086e-31,1.1895242784286287e-31,1.1875250781287486e-31,1.1855258778288685e-31,1.1835266775289884e-31,1.1815274772291086e-31,1.1795282769292285e-31,1.1775290766293484e-31,1.1755298763294683e-31,1.1735306760295882e-31,1.1715314757297083e-31,1.1695322754298282e-31,1.167533075129948e-31,1.165533874830068e-31,1.163534674530188e-31,1.161535474230308e-31,1.1595362739304279e-31,1.1575370736305478e-31,1.155537873330668e-31,1.1535386730307878e-31,1.1515394727309077e-31,1.1495402724310276e-31,1.1475410721311477e-31,1.1455418718312676e-31,1.1435426715313875e-31,1.1415434712315074e-31,1.1395442709316275e-31,1.1375450706317474e-31,1.1355458703318673e-31,1.1335466700319872e-31,1.1315474697321073e-31,1.1295482694322272e-31,1.1275490691323471e-31,1.125549868832467e-31,1.1235506685325872e-31,1.121551468232707e-31,1.119552267932827e-31,1.1175530676329469e-31,1.1155538673330668e-31,1.1135546670331869e-31,1.1115554667333068e-31,1.1095562664334267e-31,1.1075570661335466e-31,1.1055578658336667e-31,1.1035586655337866e-31,1.1015594652339065e-31,1.0995602649340264e-31,1.0975610646341465e-31,1.0955618643342664e-31,1.0935626640343863e-31,1.0915634637345062e-31,1.0895642634346263e-31,1.0875650631347462e-31,1.0855658628348661e-31,1.083566662534986e-31,1.0815674622351061e-31,1.079568261935226e-31,1.077569061635346e-31,1.0755698613354658e-31,1.073570661035586e-31,1.0715714607357058e-31,1.0695722604358257e-31,1.0675730601359456e-31,1.0655738598360658e-31,1.0635746595361857e-31,1.0615754592363056e-31,1.0595762589364255e-31,1.0575770586365456e-31,1.0555778583366655e-31,1.0535786580367854e-31,1.0515794577369053e-31,1.0495802574370252e-31,1.0475810571371453e-31,1.0455818568372652e-31,1.043582656537385e-31,1.041583456237505e-31,1.039584255937625e-31,1.037585055637745e-31,1.035585855337865e-31,1.0335866550379848e-31,1.031587454738105e-31,1.0295882544382248e-31,1.0275890541383447e-31,1.0255898538384646e-31,1.0235906535385847e-31,1.0215914532387046e-31,1.0195922529388245e-31,1.0175930526389444e-31,1.0155938523390645e-31,1.0135946520391844e-31,1.0115954517393043e-31,1.0095962514394242e-31,1.0075970511395444e-31,1.0055978508396643e-31,1.0035986505397842e-31,1.001599450239904e-31,9.996002499400242e-32,9.97601049640144e-32,9.95601849340264e-32,9.936026490403839e-32,9.91603448740504e-32,9.896042484406239e-32,9.876050481407438e-32,9.856058478408637e-32,9.836066475409837e-32,9.816074472411036e-32,9.796082469412236e-32,9.776090466413435e-32,9.756098463414635e-32,9.736106460415834e-32,9.716114457417034e-32,9.696122454418233e-32,9.676130451419433e-32,9.656138448420632e-32,9.636146445421832e-32,9.616154442423031e-32,9.596162439424231e-32,9.57617043642543e-32,9.55617843342663e-32,9.536186430427829e-32,9.51619442742903e-32,9.496202424430228e-32,9.476210421431429e-32,9.456218418432628e-32,9.436226415433828e-32,9.416234412435027e-32,9.396242409436227e-32,9.376250406437426e-32,9.356258403438626e-32,9.336266400439825e-32,9.316274397441025e-32,9.296282394442224e-32,9.276290391443424e-32,9.256298388444623e-32,9.236306385445823e-32,9.216314382447022e-32,9.196322379448221e-32,9.176330376449421e-32,9.15633837345062e-32,9.13634637045182e-32,9.116354367453019e-32,9.096362364454219e-32,9.076370361455418e-32,9.056378358456618e-32,9.036386355457817e-32,9.016394352459017e-32,8.996402349460216e-32,8.976410346461416e-32,8.956418343462615e-32,8.936426340463815e-32,8.916434337465014e-32,8.896442334466215e-32,8.876450331467414e-32,8.856458328468614e-32,8.836466325469813e-32,8.816474322471013e-32,8.796482319472212e-32,8.776490316473412e-32,8.756498313474611e-32,8.736506310475811e-32,8.71651430747701e-32,8.69652230447821e-32,8.676530301479409e-32,8.656538298480609e-32,8.636546295481808e-32,8.616554292483008e-32,8.596562289484207e-32,8.576570286485406e-32,8.556578283486606e-32,8.536586280487805e-32,8.516594277489005e-32,8.496602274490204e-32,8.476610271491404e-32,8.456618268492603e-32,8.436626265493803e-32,8.416634262495002e-32,8.396642259496202e-32,8.376650256497401e-32,8.356658253498601e-32,8.3366662504998e-32,8.316674247501e-32,8.2966822445022e-32,8.2766902415034e-32,8.256698238504599e-32,8.236706235505799e-32,8.216714232506998e-32,8.196722229508198e-32,8.176730226509397e-32,8.156738223510597e-32,8.136746220511796e-32,8.116754217512996e-32,8.096762214514195e-32,8.076770211515395e-32,8.056778208516594e-32,8.036786205517794e-32,8.016794202518993e-32,7.996802199520193e-32,7.976810196521392e-32,7.956818193522592e-32,7.936826190523791e-32,7.91683418752499e-32,7.89684218452619e-32,7.876850181527389e-32,7.856858178528589e-32,7.836866175529788e-32,7.816874172530988e-32,7.796882169532187e-32,7.776890166533387e-32,7.756898163534586e-32,7.736906160535787e-32,7.716914157536985e-32,7.696922154538186e-32,7.676930151539385e-32,7.656938148540585e-32,7.636946145541784e-32,7.616954142542984e-32,7.596962139544183e-32,7.576970136545383e-32,7.556978133546582e-32,7.536986130547782e-32,7.516994127548981e-32,7.497002124550181e-32,7.47701012155138e-32,7.45701811855258e-32,7.437026115553779e-32,7.417034112554979e-32,7.397042109556178e-32,7.377050106557378e-32,7.357058103558577e-32,7.337066100559777e-32,7.317074097560976e-32,7.297082094562175e-32,7.277090091563375e-32,7.257098088564574e-32,7.237106085565774e-32,7.217114082566973e-32,7.197122079568173e-32,7.177130076569372e-32,7.157138073570572e-32,7.137146070571771e-32,7.117154067572972e-32,7.09716206457417e-32,7.077170061575371e-32,7.05717805857657e-32,7.03718605557777e-32,7.017194052578969e-32,6.997202049580169e-32,6.977210046581368e-32,6.957218043582568e-32,6.937226040583767e-32,6.917234037584967e-32,6.897242034586166e-32,6.877250031587366e-32,6.857258028588565e-32,6.837266025589765e-32,6.817274022590964e-32,6.797282019592164e-32,6.777290016593363e-32,6.757298013594563e-32,6.737306010595762e-32,6.717314007596962e-32,6.697322004598161e-32,6.677330001599361e-32,6.65733799860056e-32,6.637345995601759e-32,6.617353992602959e-32,6.597361989604158e-32,6.577369986605358e-32,6.557377983606557e-32,6.537385980607758e-32,6.517393977608957e-32,6.497401974610157e-32,6.477409971611356e-32,6.457417968612556e-32,6.437425965613755e-32,6.417433962614955e-32,6.397441959616154e-32,6.377449956617354e-32,6.357457953618553e-32,6.337465950619753e-32,6.317473947620952e-32,6.297481944622152e-32,6.277489941623351e-32,6.257497938624551e-32,6.23750593562575e-32,6.21751393262695e-32,6.197521929628149e-32,6.177529926629349e-32,6.157537923630548e-32,6.137545920631748e-32,6.117553917632947e-32,6.097561914634147e-32,6.077569911635346e-32,6.057577908636546e-32,6.037585905637745e-32,6.017593902638945e-32,5.997601899640144e-32,5.977609896641343e-32,5.957617893642544e-32,5.937625890643743e-32,5.917633887644943e-32,5.897641884646142e-32,5.877649881647342e-32,5.857657878648541e-32,5.837665875649741e-32,5.81767387265094e-32,5.79768186965214e-32,5.777689866653339e-32,5.757697863654539e-32,5.737705860655738e-32,5.717713857656938e-32,5.697721854658137e-32,5.677729851659337e-32,5.657737848660536e-32,5.637745845661736e-32,5.617753842662935e-32,5.597761839664135e-32,5.577769836665334e-32,5.557777833666534e-32,5.537785830667733e-32,5.517793827668933e-32,5.497801824670132e-32,5.477809821671332e-32,5.457817818672531e-32,5.437825815673731e-32,5.41783381267493e-32,5.39784180967613e-32,5.37784980667733e-32,5.357857803678528e-32,5.337865800679729e-32,5.317873797680928e-32,5.297881794682128e-32,5.277889791683327e-32,5.257897788684527e-32,5.237905785685726e-32,5.217913782686926e-32,5.197921779688125e-32,5.177929776689325e-32,5.157937773690524e-32,5.137945770691724e-32,5.117953767692923e-32,5.097961764694123e-32,5.077969761695322e-32,5.057977758696522e-32,5.037985755697721e-32,5.017993752698921e-32,4.99800174970012e-32,4.97800974670132e-32,4.958017743702519e-32,4.938025740703719e-32,4.9180337377049183e-32,4.898041734706118e-32,4.8780497317073173e-32,4.858057728708517e-32,4.8380657257097164e-32,4.818073722710916e-32,4.7980817197121155e-32,4.778089716713315e-32,4.7580977137145146e-32,4.738105710715714e-32,4.7181137077169136e-32,4.698121704718113e-32,4.6781297017193127e-32,4.658137698720512e-32,4.638145695721712e-32,4.6181536927229113e-32,4.598161689724111e-32,4.5781696867253104e-32,4.55817768372651e-32,4.5381856807277095e-32,4.518193677728909e-32,4.4982016747301085e-32,4.478209671731308e-32,4.4582176687325076e-32,4.438225665733707e-32,4.4182336627349067e-32,4.3982416597361057e-32,4.378249656737305e-32,4.3582576537385047e-32,4.338265650739704e-32,4.318273647740904e-32,4.2982816447421033e-32,4.278289641743303e-32,4.2582976387445024e-32,4.238305635745702e-32,4.2183136327469015e-32,4.198321629748101e-32,4.1783296267493005e-32,4.1583376237505e-32,4.1383456207516996e-32,4.118353617752899e-32,4.0983616147540987e-32,4.078369611755298e-32,4.058377608756498e-32,4.0383856057576973e-32,4.018393602758897e-32,3.9984015997600964e-32,3.978409596761296e-32,3.9584175937624954e-32,3.938425590763695e-32,3.9184335877648945e-32,3.898441584766094e-32,3.8784495817672936e-32,3.858457578768493e-32,3.8384655757696926e-32,3.818473572770892e-32,3.7984815697720917e-32,3.778489566773291e-32,3.758497563774491e-32,3.73850556077569e-32,3.7185135577768893e-32,3.698521554778089e-32,3.6785295517792884e-32,3.658537548780488e-32,3.6385455457816875e-32,3.618553542782887e-32,3.5985615397840865e-32,3.578569536785286e-32,3.5585775337864856e-32,3.538585530787685e-32,3.5185935277888847e-32,3.498601524790084e-32,3.478609521791284e-32,3.4586175187924833e-32,3.438625515793683e-32,3.4186335127948823e-32,3.398641509796082e-32,3.3786495067972814e-32,3.358657503798481e-32,3.3386655007996805e-32,3.31867349780088e-32,3.2986814948020796e-32,3.278689491803279e-32,3.2586974888044786e-32,3.238705485805678e-32,3.2187134828068777e-32,3.198721479808077e-32,3.178729476809277e-32,3.1587374738104763e-32,3.138745470811676e-32,3.1187534678128754e-32,3.0987614648140744e-32,3.078769461815274e-32,3.0587774588164734e-32,3.038785455817673e-32,3.0187934528188725e-32,2.998801449820072e-32,2.9788094468212716e-32,2.958817443822471e-32,2.9388254408236707e-32,2.91883343782487e-32,2.8988414348260697e-32,2.878849431827269e-32,2.858857428828469e-32,2.8388654258296683e-32,2.818873422830868e-32,2.7988814198320674e-32,2.778889416833267e-32,2.7588974138344665e-32,2.738905410835666e-32,2.7189134078368655e-32,2.698921404838065e-32,2.6789294018392646e-32,2.658937398840464e-32,2.6389453958416637e-32,2.618953392842863e-32,2.598961389844063e-32,2.5789693868452623e-32,2.558977383846462e-32,2.5389853808476614e-32,2.518993377848861e-32,2.4990013748500604e-32,2.47900937185126e-32,2.4590173688524592e-32,2.4390253658536588e-32,2.4190333628548583e-32,2.3990413598560578e-32,2.3790493568572574e-32,2.359057353858457e-32,2.3390653508596564e-32,2.319073347860856e-32,2.2990813448620552e-32,2.2790893418632548e-32,2.2590973388644543e-32,2.2391053358656538e-32,2.2191133328668534e-32,2.199121329868053e-32,2.1791293268692525e-32,2.159137323870452e-32,2.1391453208716515e-32,2.119153317872851e-32,2.0991613148740506e-32,2.07916931187525e-32,2.0591773088764497e-32,2.0391853058776492e-32,2.0191933028788487e-32,1.9992012998800483e-32,1.9792092968812475e-32,1.959217293882447e-32,1.9392252908836466e-32,1.9192332878848461e-32,1.8992412848860457e-32,1.8792492818872452e-32,1.8592572788884447e-32,1.8392652758896443e-32,1.8192732728908438e-32,1.7992812698920434e-32,1.779289266893243e-32,1.7592972638944424e-32,1.739305260895642e-32,1.7193132578968415e-32,1.699321254898041e-32,1.6793292518992406e-32,1.6593372489004398e-32,1.6393452459016394e-32,1.619353242902839e-32,1.5993612399040384e-32,1.579369236905238e-32,1.5593772339064375e-32,1.539385230907637e-32,1.5193932279088366e-32,1.499401224910036e-32,1.4794092219112357e-32,1.4594172189124352e-32,1.4394252159136347e-32,1.4194332129148343e-32,1.3994412099160338e-32,1.3794492069172333e-32,1.359457203918433e-32,1.339465200919632e-32,1.3194731979208317e-32,1.2994811949220312e-32,1.2794891919232307e-32,1.2594971889244303e-32,1.2395051859256298e-32,1.2195131829268293e-32,1.1995211799280289e-32,1.1795291769292284e-32,1.159537173930428e-32,1.1395451709316275e-32,1.119553167932827e-32,1.0995611649340264e-32,1.079569161935226e-32,1.0595771589364255e-32,1.039585155937625e-32,1.0195931529388246e-32,9.996011499400241e-33,9.796091469412236e-33,9.596171439424232e-33,9.396251409436226e-33,9.196331379448221e-33,8.996411349460216e-33,8.796491319472212e-33,8.596571289484207e-33,8.396651259496202e-33,8.196731229508198e-33,7.996811199520193e-33,7.796891169532187e-33,7.596971139544182e-33,7.397051109556178e-33,7.197131079568173e-33,6.997211049580169e-33,6.797291019592164e-33,6.597370989604159e-33,6.397450959616155e-33,6.19753092962815e-33,5.9976108996401446e-33,5.79769086965214e-33,5.5977708396641346e-33,5.39785080967613e-33,5.197930779688125e-33,4.998010749700121e-33,4.7980907197121154e-33,4.598170689724111e-33,4.398250659736106e-33,4.1983306297481014e-33,3.998410599760096e-33,3.7984905697720915e-33,3.598570539784087e-33,3.398650509796082e-33,3.198730479808077e-33,2.9988104498200722e-33,2.7988904198320676e-33,2.5989703898440626e-33,2.399050359856058e-33,2.199130329868053e-33,1.9992102998800483e-33,1.7992902698920433e-33,1.5993702399040387e-33,1.3994502099160337e-33,1.1995301799280289e-33,9.99610149940024e-34,7.996901199520192e-34,5.997700899640144e-34,3.998500599760096e-34,1.999300299880048e-34,1.0e-38]}

},{}],61:[function(require,module,exports){
module.exports={"expected":[0.1414213627576828,0.14129430055618286,0.14116758108139038,0.14104120433330536,0.1409151703119278,0.1407894790172577,0.14066411554813385,0.14053907990455627,0.14041438698768616,0.1402900218963623,0.14016598463058472,0.1400422751903534,0.13991890847682953,0.13979583978652954,0.1396731287240982,0.13955071568489075,0.13942863047122955,0.13930685818195343,0.13918541371822357,0.13906428217887878,0.13894346356391907,0.13882297277450562,0.13870278000831604,0.13858291506767273,0.1384633332490921,0.13834407925605774,0.13822513818740845,0.13810649514198303,0.1379881501197815,0.13787013292312622,0.13775238394737244,0.13763496279716492,0.13751782476902008,0.13740099966526031,0.13728447258472443,0.13716822862625122,0.1370522826910019,0.13693663477897644,0.13682126998901367,0.13670620322227478,0.13659143447875977,0.13647693395614624,0.1363627314567566,0.13624881207942963,0.13613519072532654,0.13602183759212494,0.13590878248214722,0.13579599559307098,0.13568350672721863,0.13557127118110657,0.13545933365821838,0.1353476643562317,0.13523627817630768,0.13512514531612396,0.13501431047916412,0.13490374386310577,0.13479343056678772,0.13468340039253235,0.13457363843917847,0.13446415960788727,0.13435491919517517,0.13424596190452576,0.13413725793361664,0.1340288370847702,0.13392065465450287,0.13381275534629822,0.13370510935783386,0.1335977166891098,0.13349057734012604,0.13338372111320496,0.13327708840370178,0.1331707388162613,0.1330646276473999,0.1329587697982788,0.132853165268898,0.1327478289604187,0.1326427161693573,0.1325378715991974,0.13243326544761658,0.13232891261577606,0.13222479820251465,0.13212093710899353,0.1320173144340515,0.1319139450788498,0.13181081414222717,0.13170790672302246,0.13160526752471924,0.13150285184383392,0.1314006745815277,0.1312987357378006,0.1311970353126526,0.13109558820724487,0.13099434971809387,0.13089334964752197,0.13079258799552917,0.13069206476211548,0.13059177994728088,0.130491703748703,0.13039186596870422,0.13029225170612335,0.13019287586212158,0.13009372353553772,0.12999479472637177,0.1298961043357849,0.12979762256145477,0.12969937920570374,0.1296013444662094,0.129503533244133,0.1294059455394745,0.1293085813522339,0.12921142578125,0.12911450862884521,0.12901780009269714,0.1289213001728058,0.12882502377033234,0.1287289559841156,0.12863311171531677,0.12853747606277466,0.12844204902648926,0.12834684550762177,0.128251850605011,0.12815706431865692,0.12806248664855957,0.12796811759471893,0.127873957157135,0.1277800053358078,0.1276862621307373,0.12759272754192352,0.12749938666820526,0.1274062544107437,0.12731333076953888,0.12722061574459076,0.12712809443473816,0.12703576683998108,0.1269436478614807,0.12685173749923706,0.12676000595092773,0.12666849792003632,0.12657716870307922,0.12648604810237885,0.126395121216774,0.12630438804626465,0.12621384859085083,0.12612351775169373,0.12603336572647095,0.1259434074163437,0.12585364282131195,0.12576407194137573,0.12567469477653503,0.12558549642562866,0.1254964917898178,0.12540768086910248,0.12531906366348267,0.12523062527179718,0.12514236569404602,0.12505431473255157,0.12496643513441086,0.12487873435020447,0.1247912272810936,0.12470391392707825,0.12461677193641663,0.12452980875968933,0.12444303184747696,0.12435644119977951,0.12427002191543579,0.124183788895607,0.12409771978855133,0.12401185184717178,0.12392615526914597,0.12384063750505447,0.12375527620315552,0.12367010861635208,0.12358511984348297,0.12350030243396759,0.12341566383838654,0.12333118170499802,0.12324690073728561,0.12316276133060455,0.12307881563901901,0.1229950413107872,0.12291143089532852,0.12282798439264297,0.12274470925331116,0.12266161292791367,0.1225786879658699,0.12249591946601868,0.12241332232952118,0.12233088910579681,0.12224862724542618,0.12216653674840927,0.1220845878124237,0.12200282514095306,0.12192121893167496,0.12183979153633118,0.12175850570201874,0.12167739123106003,0.12159643322229385,0.12151564657688141,0.1214350089430809,0.12135453522205353,0.12127422541379929,0.12119407951831818,0.1211140900850296,0.12103424966335297,0.12095457315444946,0.1208750531077385,0.12079568207263947,0.12071648985147476,0.1206374317407608,0.12055853009223938,0.12047979235649109,0.12040120363235474,0.12032277137041092,0.12024448066949844,0.1201663613319397,0.12008838355541229,0.12001055479049683,0.1199328750371933,0.1198553666472435,0.11977798491716385,0.11970075964927673,0.11962368339300156,0.11954676359891891,0.11946998536586761,0.11939335614442825,0.11931686848402023,0.11924053728580475,0.1191643550992012,0.1190883070230484,0.11901240050792694,0.11893665790557861,0.11886104941368103,0.11878557503223419,0.11871025711297989,0.11863508075475693,0.11856004595756531,0.11848516017198563,0.11841040849685669,0.1183357834815979,0.11826132982969284,0.11818698793649673,0.11811280995607376,0.11803875118494034,0.11796484887599945,0.11789107322692871,0.11781743913888931,0.11774394661188126,0.11767058819532394,0.11759737133979797,0.11752428859472275,0.11745133250951767,0.11737851798534393,0.11730583757162094,0.11723329871892929,0.11716088652610779,0.11708861589431763,0.11701647937297821,0.11694446206092834,0.11687259376049042,0.11680085211992264,0.1167292445898056,0.11665776371955872,0.11658641695976257,0.11651518940925598,0.11644410341978073,0.11637315154075623,0.11630231887102127,0.11623162031173706,0.1161610558629036,0.11609061807394028,0.1160203069448471,0.11595012247562408,0.11588004976511002,0.11581013351678848,0.1157403290271759,0.11567064374685287,0.11560109257698059,0.11553166061639786,0.11546235531568527,0.11539318412542343,0.11532413214445114,0.1152551993727684,0.11518638581037521,0.11511770635843277,0.11504914611577988,0.11498070508241653,0.11491239070892334,0.1148441955447197,0.114776112139225,0.11470816284418106,0.11464034020900726,0.11457262188196182,0.11450502276420593,0.11443755775690079,0.1143702045083046,0.11430297046899796,0.11423584818840027,0.11416886001825333,0.11410198360681534,0.1140352115035057,0.11396856606006622,0.11390203982591629,0.11383562535047531,0.11376933753490448,0.11370314657688141,0.11363707482814789,0.11357112973928452,0.1135052964091301,0.11343957483768463,0.11337395757436752,0.11330845952033997,0.11324309557676315,0.1131778210401535,0.1131126657128334,0.11304761469364166,0.11298269033432007,0.11291787028312683,0.11285316944122314,0.11278856545686722,0.11272408068180084,0.11265971511602402,0.11259543895721436,0.11253128945827484,0.11246724426746368,0.11240331083536148,0.11233947426080704,0.11227575689554214,0.1122121512889862,0.11214864999055862,0.11208526045084,0.11202196776866913,0.11195878684520721,0.11189571768045425,0.11183274537324905,0.11176988482475281,0.11170713603496552,0.11164447665214539,0.1115819439291954,0.11151949316263199,0.11145716905593872,0.11139493435621262,0.11133280396461487,0.11127079278230667,0.11120887100696564,0.11114705353975296,0.11108534783124924,0.11102373898029327,0.11096221953630447,0.11090081930160522,0.11083952337503433,0.11077830940485,0.11071722209453583,0.11065621674060822,0.11059531569480896,0.11053451895713806,0.11047382652759552,0.11041321605443954,0.11035272479057312,0.11029232293367386,0.11023202538490295,0.11017182469367981,0.11011171340942383,0.1100517213344574,0.10999181121587753,0.10993199795484543,0.10987228900194168,0.1098126769065857,0.10975316166877747,0.1096937358379364,0.1096344143152237,0.10957518219947815,0.10951605439186096,0.10945701599121094,0.10939806699752808,0.10933922976255417,0.10928047448396683,0.10922182351350784,0.10916326195001602,0.10910478979349136,0.10904642194509506,0.10898812860250473,0.10892994701862335,0.10887184739112854,0.10881385207176208,0.10875594615936279,0.10869812220335007,0.1086404025554657,0.10858277231454849,0.10852523148059845,0.10846778005361557,0.10841041803359985,0.1083531603217125,0.1082959771156311,0.10823889821767807,0.10818188637495041,0.1081249862909317,0.10806817561388016,0.10801144689321518,0.10795480012893677,0.10789825767278671,0.10784179717302322,0.1077854260802269,0.10772914439439774,0.10767294466495514,0.1076168417930603,0.10756082087755203,0.10750488936901093,0.10744904726743698,0.1073932871222496,0.10733761638402939,0.10728203505277634,0.10722653567790985,0.10717112571001053,0.10711579024791718,0.10706055164337158,0.10700538754463196,0.1069503203034401,0.1068953350186348,0.10684043914079666,0.10678562521934509,0.1067308858036995,0.10667623579502106,0.10662167519330978,0.10656719654798508,0.10651279985904694,0.10645849257707596,0.10640425235033035,0.10635010898113251,0.10629604011774063,0.10624206066131592,0.10618815571069717,0.106134332716465,0.10608059167861938,0.10602694004774094,0.10597337037324905,0.10591986775398254,0.1058664619922638,0.10581312328577042,0.1057598814368248,0.10570670664310455,0.10565361380577087,0.10560060292482376,0.10554768145084381,0.10549481958150864,0.10544205456972122,0.10538934916257858,0.1053367480635643,0.10528421401977539,0.10523175448179245,0.10517937690019608,0.10512707382440567,0.10507485270500183,0.10502270609140396,0.10497063398361206,0.10491864383220673,0.10486673563718796,0.10481490194797516,0.10476313531398773,0.10471145063638687,0.10465985536575317,0.10460831969976425,0.1045568659901619,0.10450548678636551,0.10445418953895569,0.10440295934677124,0.10435180366039276,0.10430072993040085,0.1042497307062149,0.10419880598783493,0.10414795577526093,0.10409717261791229,0.10404647141695023,0.10399583727121353,0.1039452850818634,0.10389480739831924,0.10384438931941986,0.10379406064748764,0.10374379903078079,0.10369360446929932,0.1036434918642044,0.10359344631433487,0.1035434752702713,0.1034935787320137,0.10344374924898148,0.10339399427175522,0.10334430634975433,0.10329470038414001,0.10324516147375107,0.10319569706916809,0.10314629226922989,0.10309696197509766,0.10304771363735199,0.1029985174536705,0.10294941067695618,0.10290036350488663,0.10285138338804245,0.10280247777700424,0.102753646671772,0.10270487517118454,0.10265617817640305,0.10260754823684692,0.10255899280309677,0.10251051187515259,0.10246207565069199,0.10241372883319855,0.10236544907093048,0.10231722891330719,0.10226907581090927,0.10222100466489792,0.10217298567295074,0.10212504118680954,0.1020771712064743,0.10202935338020325,0.10198161751031876,0.10193394124507904,0.1018863320350647,0.10183878242969513,0.10179130733013153,0.1017438992857933,0.10169655829668045,0.10164927691221237,0.10160207003355026,0.10155492275953293,0.10150784254074097,0.10146082192659378,0.10141387581825256,0.10136699676513672,0.10132017731666565,0.10127342492341995,0.10122673213481903,0.10118009895086288,0.10113354027271271,0.1010870411992073,0.10104060918092728,0.10099423676729202,0.10094793885946274,0.10090170055627823,0.1008555144071579,0.10080939531326294,0.10076335072517395,0.10071735829114914,0.1006714403629303,0.10062556713819504,0.10057976841926575,0.10053403675556183,0.10048835724592209,0.10044275224208832,0.10039719194173813,0.10035170614719391,0.10030627995729446,0.10026092082262039,0.1002156063914299,0.10017036646604538,0.10012518614530563,0.10008006542921066,0.10003500431776047,0.09999000281095505,0.099945068359375,0.09990019351243973,0.09985537827014923,0.09981061518192291,0.09976591914892197,0.0997212827205658,0.0996767058968544,0.09963218867778778,0.09958772361278534,0.09954333305358887,0.09949899464845657,0.09945471584796906,0.09941048920154572,0.09936632961034775,0.09932222217321396,0.09927818924188614,0.0992341935634613,0.09919027239084244,0.09914640337228775,0.09910259395837784,0.0990588366985321,0.09901513904333115,0.09897150844335556,0.09892792999744415,0.09888441115617752,0.09884094446897507,0.09879752993583679,0.09875417500734329,0.09871087968349457,0.09866765141487122,0.09862447530031204,0.09858135133981705,0.09853827953338623,0.09849527478218079,0.09845232218503952,0.09840942174196243,0.09836657345294952,0.09832379966974258,0.09828106313943863,0.09823838621377945,0.09819577634334564,0.09815320372581482,0.09811070561408997,0.0980682447552681,0.098025843501091,0.09798350930213928,0.09794121980667114,0.09789898991584778,0.097856804728508,0.09781467914581299,0.09777261316776276,0.0977305993437767,0.09768863022327423,0.09764672815799713,0.09760487824678421,0.09756307303905487,0.0975213348865509,0.09747964143753052,0.09743800014257431,0.09739641100168228,0.09735488146543503,0.09731339663267136,0.09727197140455246,0.09723059833049774,0.0971892774105072,0.09714800864458084,0.09710679203271866,0.09706562757492065,0.09702452272176743,0.09698346257209778,0.09694245457649231,0.09690149873495102,0.09686059504747391,0.09681974351406097,0.09677895158529282,0.09673819690942764,0.09669750183820724,0.09665685892105103,0.09661626070737839,0.09657572209835052,0.09653522819280624,0.09649478644132614,0.09645439684391022,0.09641405194997787,0.09637376666069031,0.09633352607488632,0.09629333764314651,0.09625320136547089,0.09621310979127884,0.09617307782173157,0.09613309055566788,0.09609314799308777,0.09605326503515244,0.09601341933012009,0.09597362577915192,0.09593389928340912,0.09589420258998871,0.09585456550121307,0.09581496566534042,0.09577542543411255,0.09573593735694885,0.09569648653268814,0.09565708786249161,0.09561774134635925,0.09557844698429108,0.09553919732570648,0.09549998492002487,0.09546083956956863,0.09542172402143478,0.09538266807794571,0.09534365683794022,0.0953046977519989,0.09526578336954117,0.09522692114114761,0.09518809616565704,0.09514932334423065,0.09511060267686844,0.09507192671298981,0.09503328800201416,0.09499470889568329,0.0949561670422554,0.0949176773428917,0.09487923979759216,0.09484083950519562,0.09480249136686325,0.09476418793201447,0.09472592920064926,0.09468772262334824,0.09464956074953079,0.09461143612861633,0.09457337111234665,0.09453534334897995,0.09449736028909683,0.0944594219326973,0.09442153573036194,0.09438369423151016,0.09434588998556137,0.09430813789367676,0.09427043795585632,0.09423276782035828,0.09419514983892441,0.09415757656097412,0.09412005543708801,0.09408257901668549,0.09404513984918594,0.09400774538516998,0.0939703956246376,0.0939330980181694,0.09389583766460419,0.09385861456394196,0.0938214510679245,0.09378431737422943,0.09374724328517914,0.09371019899845123,0.09367319941520691,0.09363625198602676,0.0935993492603302,0.09356248378753662,0.09352565556764603,0.09348888695240021,0.09345214813947678,0.09341546148061752,0.09337881207466125,0.09334220737218857,0.09330565482378006,0.09326912462711334,0.0932326540350914,0.09319622069597244,0.09315983951091766,0.09312348067760468,0.09308718144893646,0.09305091947317123,0.09301470220088959,0.09297852218151093,0.09294238686561584,0.09290628880262375,0.09287024289369583,0.0928342267870903,0.09279826283454895,0.09276233613491058,0.0927264466881752,0.092690609395504,0.09265480935573578,0.09261904656887054,0.09258332848548889,0.09254766255617142,0.09251201897859573,0.09247642010450363,0.09244086593389511,0.09240535646677017,0.09236988425254822,0.09233445674180984,0.09229906648397446,0.09226372092962265,0.09222841262817383,0.09219314157962799,0.09215790778398514,0.09212271869182587,0.09208757430315018,0.09205247461795807,0.09201739728450775,0.09198237955570221,0.09194739162921906,0.09191244095563889,0.0918775349855423,0.0918426662683487,0.09180784225463867,0.09177305549383163,0.09173830598592758,0.09170359373092651,0.09166892617940903,0.09163429588079453,0.09159970283508301,0.09156515449285507,0.09153063595294952,0.09149616956710815,0.09146173298358917,0.09142733365297318,0.09139297157526016,0.09135865420103073,0.09132437407970428,0.09129013121128082,0.09125593304634094,0.09122177213430405,0.09118764102458954,0.09115354716777802,0.09111950546503067,0.09108549356460571,0.09105151146650314,0.09101758152246475,0.09098368138074875,0.09094982594251633,0.09091600030660629,0.09088221192359924,0.09084846824407578,0.09081476181745529,0.09078109264373779,0.09074745327234268,0.09071385860443115,0.09068030118942261,0.09064678102731705,0.09061329066753387,0.09057984501123428,0.09054642915725708,0.09051305800676346,0.09047972410917282,0.09044642001390457,0.0904131531715393,0.09037993103265762,0.09034673869609833,0.09031358361244202,0.09028046578168869,0.09024737775325775,0.09021434187889099,0.09018132835626602,0.09014835208654404,0.09011542052030563,0.09008251875638962,0.09004965424537659,0.09001683443784714,0.08998402953147888,0.0899512767791748,0.08991856127977371,0.08988587558269501,0.08985322713851929,0.08982061594724655,0.0897880345582962,0.08975548297166824,0.08972298353910446,0.08969051390886307,0.08965807408094406,0.08962567150592804,0.0895932987332344,0.08956097066402435,0.08952867239713669,0.08949641138315201,0.08946418762207031,0.089431993663311,0.08939982950687408,0.08936771005392075,0.08933562785387039,0.08930356800556183,0.08927155286073685,0.08923956751823425,0.08920761197805405,0.08917569369077682,0.08914382010698318,0.08911196887493134,0.08908016234636307,0.08904837816953659,0.0890166312456131,0.088984914124012,0.08895324170589447,0.08892159909009933,0.08888997882604599,0.08885841071605682,0.08882686495780945,0.08879535645246506,0.08876388520002365,0.08873243629932404,0.0887010246515274,0.08866965025663376,0.0886383131146431,0.08860700577497482,0.08857572823762894,0.08854448050260544,0.08851327002048492,0.0884820967912674,0.08845094591379166,0.0884198397397995,0.08838875591754913,0.08835771679878235,0.08832670003175735,0.08829572051763535,0.08826477825641632,0.08823385834693909,0.08820297569036484,0.08817213028669357,0.0881413072347641,0.08811052143573761,0.0880797728896141,0.08804904669523239,0.08801835775375366,0.08798769861459732,0.08795707672834396,0.087926484644413,0.08789592981338501,0.08786538988351822,0.08783489465713501,0.08780442923307419,0.08777400106191635,0.08774358779191971,0.08771321922540665,0.08768288046121597,0.08765257149934769,0.08762229979038239,0.08759205043315887,0.08756184577941895,0.08753165602684021,0.08750150352716446,0.0874713882803917,0.08744128793478012,0.08741123229265213,0.08738120645284653,0.08735121041536331,0.08732125163078308,0.08729131519794464,0.08726140856742859,0.08723153173923492,0.08720169216394424,0.08717188239097595,0.08714210242033005,0.08711235225200653,0.0870826244354248,0.08705294132232666,0.08702327311038971,0.08699364960193634,0.08696404844522476,0.08693447709083557,0.08690493553876877,0.08687543869018555,0.08684595674276352,0.08681650459766388,0.08678708970546722,0.08675769716501236,0.08672833442687988,0.0866990014910698,0.08666971325874329,0.08664043247699738,0.08661120384931564,0.0865819901227951,0.08655280619859695,0.08652365207672119,0.08649453520774841,0.08646544069051743,0.08643637597560883,0.08640734106302261,0.08637833595275879,0.08634936809539795,0.0863204225897789,0.08629149943590164,0.08626260608434677,0.08623374998569489,0.08620491623878479,0.08617611974477768,0.08614734560251236,0.08611860126256943,0.08608988672494888,0.08606119453907013,0.08603254705667496,0.08600390702486038,0.08597530424594879,0.08594673871994019,0.08591818809509277,0.08588968217372894,0.0858611986041069,0.08583272993564606,0.08580430597066879,0.08577590435743332,0.08574752509593964,0.08571918308734894,0.08569086343050003,0.08566258102655411,0.08563431352376938,0.08560607582330704,0.08557787537574768,0.08554968982934952,0.08552154898643494,0.08549342304468155,0.08546532690525055,0.08543726056814194,0.08540922403335571,0.08538121730089188,0.08535322546958923,0.08532527089118958,0.08529733866453171,0.08526943624019623,0.08524156361818314,0.08521371334791183,0.08518590033054352,0.0851581022143364,0.08513034135103226,0.08510260283946991,0.08507488667964935,0.08504720777273178,0.0850195437669754,0.08499191701412201,0.0849643126130104,0.08493673801422119,0.08490918576717377,0.08488167077302933,0.08485417068004608,0.08482670038938522,0.08479925990104675,0.08477184176445007,0.08474445343017578,0.08471709489822388,0.08468975871801376,0.08466244488954544,0.0846351608633995,0.08460789918899536,0.0845806673169136,0.08455346524715424,0.08452628552913666,0.08449913561344147,0.08447200804948807,0.08444491028785706,0.08441783487796783,0.084390789270401,0.08436376601457596,0.0843367725610733,0.08430980145931244,0.08428286015987396,0.08425594121217728,0.08422904461622238,0.08420218527317047,0.08417534083127975,0.08414851874113083,0.08412173390388489,0.08409496396780014,0.08406822383403778,0.08404151350259781,0.08401483297348022,0.08398816734552383,0.08396153151988983,0.08393491804599762,0.0839083343744278,0.08388177305459976,0.08385523408651352,0.08382871747016907,0.0838022381067276,0.08377578109502792,0.08374933898448944,0.08372293412685394,0.08369654417037964,0.08367018401622772,0.0836438462138176,0.08361753076314926,0.08359125256538391,0.08356498926877975,0.08353875577449799,0.08351254463195801,0.08348635584115982,0.08346018940210342,0.08343405276536942,0.0834079384803772,0.08338184654712677,0.08335579186677933,0.08332975208759308,0.08330373466014862,0.08327773958444595,0.08325177431106567,0.08322582393884659,0.08319991081953049,0.08317402005195618,0.08314815163612366,0.08312230557203293,0.0830964744091034,0.08307068794965744,0.08304490894079208,0.08301915228366852,0.08299343287944794,0.08296772837638855,0.08294204622507095,0.08291639387607574,0.08289076387882233,0.0828651636838913,0.08283957839012146,0.08281401544809341,0.08278848230838776,0.08276296406984329,0.08273747563362122,0.08271201699972153,0.08268657326698303,0.08266115188598633,0.08263576030731201,0.08261039108037949,0.08258504420518875,0.08255971223115921,0.08253441751003265,0.08250913769006729,0.08248388767242432,0.08245865255594254,0.08243344724178314,0.08240825682878494,0.08238309621810913,0.08235795050859451,0.08233283460140228,0.08230774104595184,0.08228267729282379,0.08225762844085693,0.08223260939121246,0.08220759779214859,0.0821826159954071,0.082157664000988,0.0821327269077301,0.08210781961679459,0.08208292722702026,0.08205807209014893,0.08203322440385818,0.08200839906930923,0.08198361098766327,0.0819588303565979,0.08193407952785492,0.08190934360027313,0.08188463747501373,0.08185995370149612,0.08183528482913971,0.08181064575910568,0.08178602904081345,0.0817614272236824,0.08173685520887375,0.08171230554580688,0.08168777078390121,0.08166326582431793,0.08163878321647644,0.08161431550979614,0.08158987015485764,0.08156545460224152,0.08154105395078659,0.08151667565107346,0.08149231970310211,0.08146798610687256,0.0814436823129654,0.08141939342021942,0.08139511942863464,0.08137087523937225,0.08134665340185165,0.08132244646549225,0.08129826188087463,0.0812741070985794,0.08124997466802597,0.08122585713863373,0.08120175451040268,0.08117768168449402,0.08115363121032715,0.08112960308790207,0.08110558986663818,0.08108160644769669,0.08105763792991638,0.08103369176387787,0.08100976794958115,0.08098585903644562,0.08096197992563248,0.08093811571598053,0.08091428130865097,0.0808904618024826,0.08086666464805603,0.08084288984537125,0.08081912994384766,0.08079539984464645,0.08077167719602585,0.08074798434972763,0.0807243138551712,0.08070066571235657,0.08067703247070312,0.08065342158079147,0.08062983304262161,0.08060625940561295,0.08058271557092667,0.08055918663740158,0.08053568005561829,0.08051219582557678,0.08048872649669647,0.08046527951955795,0.08044186234474182,0.08041845262050629,0.08039506524801254,0.08037170767784119,0.08034835755825043,0.08032503724098206,0.08030173927545547,0.08027845621109009,0.08025519549846649,0.08023194968700409,0.08020873367786407,0.08018553256988525,0.08016234636306763,0.08013918995857239,0.08011604100465775,0.08009292185306549,0.08006982505321503,0.08004674315452576,0.08002368360757828,0.08000063896179199,0.0799776166677475,0.0799546167254448,0.07993163168430328,0.07990867644548416,0.07988572865724564,0.0798628106713295,0.07983990758657455,0.0798170268535614,0.07979416102170944,0.07977131754159927,0.0797484889626503,0.07972569018602371,0.07970289885997772,0.07968013733625412,0.07965739071369171,0.0796346664428711,0.07961195707321167,0.07958927005529404,0.0795665979385376,0.07954395562410355,0.07952132076025009,0.07949870824813843,0.07947611808776855,0.07945355027914047,0.07943099737167358,0.07940846681594849,0.07938595116138458,0.07936345785856247,0.07934097945690155,0.07931852340698242,0.07929608970880508,0.07927367091178894,0.07925126701593399,0.07922888547182083,0.07920652627944946,0.07918418198823929,0.0791618600487709,0.07913955301046371,0.07911726832389832,0.07909500598907471,0.0790727511048317,0.07905051857233047,0.07902830839157104,0.0790061205625534,0.07898394763469696,0.07896178960800171,0.07893965393304825,0.07891753315925598,0.0788954421877861,0.07887335866689682,0.07885129004716873,0.07882924377918243,0.07880722731351852,0.07878521829843521,0.07876322418451309,0.07874125987291336,0.07871931046247482,0.07869737595319748,0.07867546379566193,0.07865356653928757,0.0786316841840744,0.07860982418060303,0.07858797907829285,0.07856615632772446,0.07854435592889786,0.07852257043123245,0.07850079983472824,0.07847905158996582,0.078457310795784,0.07843559980392456,0.07841390371322632,0.07839222252368927,0.07837056368589401,0.07834891974925995,0.07832729071378708,0.078305684030056,0.07828409224748611,0.07826252281665802,0.07824096828699112,0.07821943610906601,0.0781979188323021,0.07817641645669937,0.07815493643283844,0.0781334713101387,0.07811202853918076,0.0780905932188034,0.07806918025016785,0.07804778963327408,0.07802640646696091,0.07800504565238953,0.07798371464014053,0.07796238362789154,0.07794107496738434,0.07791979610919952,0.07789851725101471,0.07787726074457169,0.07785602658987045,0.07783480733633041,0.07781360298395157,0.07779242098331451,0.07777124643325806,0.07775010168552399,0.07772897183895111,0.07770784944295883,0.07768674939870834,0.07766567170619965,0.07764460146427155,0.07762356102466583,0.07760252803564072,0.07758151739835739,0.07756052166223526,0.07753954082727432,0.07751858234405518,0.07749763131141663,0.07747670263051987,0.0774557963013649,0.07743490487337112,0.07741402834653854,0.07739316672086716,0.07737231999635696,0.07735149562358856,0.07733068615198135,0.07730989158153534,0.07728911191225052,0.07726835459470749,0.07724761217832565,0.07722688466310501,0.07720617949962616,0.0771854817867279,0.07716480642557144,0.07714414596557617,0.0771235004067421,0.07710287719964981,0.07708226889371872,0.07706167548894882,0.07704109698534012,0.07702053338289261,0.07699999213218689,0.07697946578264236,0.07695895433425903,0.0769384577870369,0.07691798359155655,0.0768975242972374,0.07687707245349884,0.07685664296150208,0.0768362358212471,0.07681583613157272,0.07679545134305954,0.07677508890628815,0.07675474137067795,0.07673440873622894,0.07671409100294113,0.07669378817081451,0.07667350769042969,0.07665324211120605,0.07663299143314362,0.07661275565624237,0.07659253478050232,0.07657232880592346,0.0765521451830864,0.07653197646141052,0.07651181519031525,0.07649167627096176,0.07647155225276947,0.07645144313573837,0.07643134891986847,0.07641127705574036,0.07639121264219284,0.07637117803096771,0.07635114341974258,0.07633113116025925,0.0763111338019371,0.07629115134477615,0.0762711837887764,0.07625123113393784,0.07623130083084106,0.07621137797832489,0.0761914774775505,0.07617159187793732,0.07615171372890472,0.07613185793161392,0.07611201703548431,0.0760921910405159,0.07607238739728928,0.07605259120464325,0.07603280991315842,0.07601304352283478,0.07599329203367233,0.07597356289625168,0.07595384120941162,0.07593414187431335,0.07591445744037628,0.0758947879076004,0.07587512582540512,0.07585549354553223,0.07583586126565933,0.07581625133752823,0.07579665631055832,0.075777068734169,0.07575750350952148,0.07573796063661575,0.07571842521429062,0.07569890469312668,0.07567939907312393,0.07565990835428238,0.07564043998718262,0.07562097162008286,0.07560153305530548,0.0755821019411087,0.07556268572807312,0.07554329186677933,0.07552390545606613,0.07550453394651413,0.07548517733812332,0.07546583563089371,0.07544650882482529,0.07542720437049866,0.07540790736675262,0.07538863271474838,0.07536935806274414,0.07535011321306229,0.07533087581396103,0.07531165331602097,0.0752924382686615,0.07527324557304382,0.07525407522916794,0.07523491233587265,0.07521576434373856,0.07519663125276566,0.07517751306295395,0.07515840232372284,0.07513931393623352,0.0751202404499054,0.07510117441415787,0.07508213818073273,0.07506310194730759,0.07504408806562424,0.07502508163452148,0.07500609010457993,0.07498712092638016,0.07496815919876099,0.07494921237230301,0.07493028044700623,0.07491137087345123,0.07489246875047684,0.07487357407808304,0.07485470175743103,0.07483583688735962,0.07481699436903,0.07479816675186157,0.07477934658527374,0.0747605413198471,0.07474175840616226,0.07472298294305801,0.07470422238111496,0.0746854767203331,0.07466674596071243,0.07464802265167236,0.07462932169437408,0.074610635638237,0.07459195703268051,0.07457329332828522,0.07455464452505112,0.07453601062297821,0.0745173990726471,0.07449878752231598,0.07448019832372665,0.07446161657571793,0.07444305717945099,0.07442450523376465,0.0744059681892395,0.07438744604587555,0.0743689313530922,0.07435043901205063,0.07433196157217026,0.07431349158287048,0.0742950439453125,0.07427660375833511,0.07425817847251892,0.07423976063728333,0.07422135770320892,0.07420297712087631,0.0741846039891243,0.07416624575853348,0.07414790242910385,0.07412957400083542,0.07411125302314758,0.07409295439720154,0.07407466322183609,0.07405638694763184,0.07403811812400818,0.07401987910270691,0.07400164008140564,0.07398341596126556,0.07396520674228668,0.073947012424469,0.0739288330078125,0.0739106610417366,0.0738925114274025,0.07387436926364899,0.07385623455047607,0.07383812218904495,0.07382002472877502,0.0738019347190857,0.07378385215997696,0.07376579940319061,0.07374774664640427,0.07372970879077911,0.07371168583631516,0.07369367778301239,0.07367568463087082,0.07365769892930984,0.07363972812891006,0.07362177222967148,0.07360383123159409,0.07358590513467789,0.07356797903776169,0.07355008274316788,0.07353219389915466,0.07351431250572205,0.07349645346403122,0.0734785944223404,0.07346075773239136,0.07344292849302292,0.07342512160539627,0.07340732216835022,0.07338953018188477,0.0733717605471611,0.07335399836301804,0.07333625108003616,0.07331851124763489,0.0733007863163948,0.07328307628631592,0.07326538115739822,0.07324770092964172,0.07323003560304642,0.07321237027645111,0.0731947273015976,0.07317709177732468,0.07315947115421295,0.07314186543226242,0.07312426716089249,0.07310668379068375,0.0730891227722168,0.07307156175374985,0.07305402308702469,0.07303649187088013,0.07301896810531616,0.07300145924091339,0.07298396527767181,0.07296648621559143,0.07294902205467224,0.07293156534433365,0.07291412353515625,0.07289669662714005,0.07287927716970444,0.07286186516284943,0.0728444755077362,0.07282709330320358,0.07280972599983215,0.07279236614704132,0.07277502864599228,0.07275769114494324,0.07274037599563599,0.07272306829690933,0.07270576804876328,0.07268849015235901,0.07267121970653534,0.07265396416187286,0.07263672351837158,0.0726194828748703,0.07260226458311081,0.07258505374193192,0.07256786525249481,0.07255067676305771,0.0725335031747818,0.07251634448766708,0.07249920070171356,0.07248206436634064,0.0724649429321289,0.07244782894849777,0.07243072986602783,0.07241364568471909,0.07239656895399094,0.07237950712442398,0.07236246019601822,0.07234542071819305,0.07232839614152908,0.07231137901544571,0.07229437679052353,0.07227738946676254,0.07226040959358215,0.07224344462156296,0.07222648710012436,0.07220954447984695,0.07219261676073074,0.07217569649219513,0.07215879112482071,0.07214190065860748,0.07212501019239426,0.07210814207792282,0.07209128141403198,0.07207443565130234,0.07205759733915329,0.07204078137874603,0.07202396541833878,0.07200716435909271,0.07199037075042725,0.07197359949350357,0.07195683568716049,0.07194007933139801,0.07192333787679672,0.07190661132335663,0.07188989222049713,0.07187318801879883,0.07185649126768112,0.07183980196714401,0.0718231350183487,0.07180647552013397,0.07178982347249985,0.07177318632602692,0.07175656408071518,0.07173994928598404,0.0717233419418335,0.07170674949884415,0.07169017940759659,0.07167360931634903,0.07165704667568207,0.0716405063867569,0.07162397354841232,0.07160745561122894,0.07159093767404556,0.07157444208860397,0.07155795395374298,0.07154147326946259,0.07152500748634338,0.07150855660438538,0.07149211317300797,0.07147568464279175,0.07145926356315613,0.0714428573846817,0.07142645865678787,0.07141007483005524,0.0713936984539032,0.07137733697891235,0.0713609829545021,0.07134464383125305,0.0713283121585846,0.07131199538707733,0.07129568606615067,0.07127939164638519,0.07126310467720032,0.07124683260917664,0.07123057544231415,0.07121431827545166,0.07119808346033096,0.07118184864521027,0.07116563618183136,0.07114942371845245,0.07113322615623474,0.07111704349517822,0.0711008682847023,0.07108470797538757,0.07106855511665344,0.0710524171590805,0.07103628665208817,0.07102017104625702,0.07100405544042587,0.07098796218633652,0.07097187638282776,0.0709558054804802,0.07093973457813263,0.07092368602752686,0.07090764492750168,0.0708916112780571,0.07087559252977371,0.07085958123207092,0.07084357738494873,0.07082758843898773,0.07081161439418793,0.07079565525054932,0.0707796961069107,0.07076375186443329,0.07074781507253647,0.07073189318180084,0.07071597874164581,0.07070007175207138,0.07068418711423874,0.0706683099269867,0.07065244019031525,0.0706365779042244,0.07062073051929474,0.07060489058494568,0.07058906555175781,0.07057324796915054,0.07055743783712387,0.07054165005683899,0.07052586227655411,0.07051008939743042,0.07049433141946793,0.07047857344150543,0.07046283036470413,0.07044710218906403,0.07043137401342392,0.0704156681895256,0.07039996981620789,0.07038427889347076,0.07036859542131424,0.0703529343008995,0.07033727318048477,0.07032162696123123,0.07030598819255829,0.07029036432504654,0.07027474790811539,0.07025913894176483,0.07024354487657547,0.0702279582619667,0.07021237909793854,0.07019682228565216,0.07018126547336578,0.07016571611166,0.07015018910169601,0.07013466209173203,0.07011914998292923,0.07010364532470703,0.07008815556764603,0.07007267326116562,0.0700572058558464,0.07004173845052719,0.07002629339694977,0.07001084834337234,0.06999541819095612,0.06997999548912048,0.06996458768844604,0.0699491873383522,0.06993379443883896,0.06991841644048691,0.06990304589271545,0.0698876902461052,0.06987234205007553,0.06985699385404587,0.069841668009758,0.06982634961605072,0.06981103867292404,0.06979573518037796,0.06978044658899307,0.06976517289876938,0.06974989920854568,0.06973464787006378,0.06971939653158188,0.06970415264368057,0.06968892365694046,0.06967370957136154,0.06965849548578262,0.0696432963013649,0.06962811201810837,0.06961292773485184,0.0695977583527565,0.06958260387182236,0.06956744939088821,0.06955230981111526,0.06953718513250351,0.06952206045389175,0.06950695067644119,0.06949185580015182,0.06947676092386246,0.06946168094873428,0.0694466158747673,0.06943155080080032,0.06941650062799454,0.06940145790576935,0.06938642263412476,0.06937140971422195,0.06935638934373856,0.06934139132499695,0.06932640075683594,0.06931141763925552,0.0692964419722557,0.06928148120641708,0.06926652044057846,0.06925158202648163,0.0692366436123848,0.06922172009944916,0.06920680403709412,0.06919190287590027,0.06917700916528702,0.06916211545467377,0.06914724409580231,0.06913237273693085,0.06911751627922058,0.06910266727209091,0.06908783316612244,0.06907300651073456,0.06905817985534668,0.06904337555170059,0.0690285712480545,0.06901378184556961,0.06899900734424591,0.06898423284292221,0.06896946579217911,0.0689547136425972,0.06893996894359589,0.06892523914575577,0.06891051679849625,0.06889580190181732,0.068881094455719,0.06886640191078186,0.06885171681642532,0.06883703917264938,0.06882236897945404,0.0688077062368393,0.06879305839538574,0.06877841800451279,0.06876379251480103,0.06874916702508926,0.0687345564365387,0.06871995329856873,0.06870535761117935,0.06869077682495117,0.06867620348930359,0.0686616376042366,0.06864707916975021,0.06863253563642502,0.06861799955368042,0.06860346347093582,0.06858894973993301,0.0685744360089302,0.06855993717908859,0.06854544579982758,0.06853096932172775,0.06851648539304733,0.0685020312666893,0.06848757714033127,0.06847313046455383,0.068458691239357,0.06844426691532135,0.0684298500418663,0.06841543316841125,0.0684010311961174,0.06838664412498474,0.06837226450443268,0.06835789233446121,0.06834352761507034,0.06832917034626007,0.06831482797861099,0.06830048561096191,0.06828615814447403,0.06827183812856674,0.06825753301382065,0.06824323534965515,0.06822893768548965,0.06821465492248535,0.06820038706064224,0.06818611919879913,0.06817186623811722,0.0681576207280159,0.06814338266849518,0.06812915205955505,0.06811493635177612,0.06810072064399719,0.06808651983737946,0.06807232648134232,0.06805814057588577,0.06804396212100983,0.06802979856729507,0.06801564246416092,0.06800149381160736,0.0679873526096344,0.06797321885824203,0.06795909255743027,0.0679449811577797,0.06793087720870972,0.06791678071022034,0.06790269166231155,0.06788861751556396,0.06787454336881638,0.06786048412322998,0.06784643232822418,0.06783238798379898,0.06781835108995438,0.06780432909727097,0.06779030710458755,0.06777630001306534,0.06776229292154312,0.0677483081817627,0.06773432344198227,0.06772034615278244,0.0677063837647438,0.06769242882728577,0.06767847388982773,0.06766454130411148,0.06765060871839523,0.06763668358325958,0.06762277334928513,0.06760886311531067,0.0675949677824974,0.06758107990026474,0.06756719946861267,0.0675533264875412,0.06753946840763092,0.06752561032772064,0.06751176714897156,0.06749793142080307,0.06748410314321518,0.06747028231620789,0.06745646893978119,0.06744266301393509,0.06742887198925018,0.06741508841514587,0.06740131229162216,0.06738754361867905,0.06737377494573593,0.0673600286245346,0.06734628230333328,0.06733254343271255,0.06731881946325302,0.06730510294437408,0.06729138642549515,0.067277692258358,0.06726399809122086,0.06725030392408371,0.06723663210868835,0.067222960293293,0.06720930337905884,0.06719565391540527,0.0671820119023323,0.06716836988925934,0.06715474277734756,0.06714112311601639,0.06712751090526581,0.06711391359567642,0.06710031628608704,0.06708673387765884,0.06707315891981125,0.06705959141254425,0.06704602390527725,0.06703247129917145,0.06701892614364624,0.06700538843870163,0.06699186563491821,0.0669783428311348,0.06696483492851257,0.06695132702589035,0.06693783402442932,0.06692434847354889,0.06691087037324905,0.06689739227294922,0.06688392907381058,0.06687048077583313,0.06685703247785568,0.06684359163045883,0.06683016568422318,0.06681673973798752,0.06680332869291306,0.06678992509841919,0.06677652150392532,0.06676313281059265,0.06674975156784058,0.0667363777756691,0.06672301143407822,0.06670965999364853,0.06669630110263824,0.06668296456336975,0.06666962802410126,0.06665629893541336,0.06664298474788666,0.06662967801094055,0.06661637872457504,0.06660307943820953,0.06658979505300522,0.0665765181183815,0.06656324863433838,0.06654998660087585,0.06653673201799393,0.0665234848856926,0.06651024520397186,0.06649701297283173,0.06648379564285278,0.06647057831287384,0.0664573684334755,0.06644417345523834,0.06643097847700119,0.06641779839992523,0.06640462577342987,0.06639145314693451,0.06637829542160034,0.06636513769626617,0.0663519948720932,0.06633885949850082,0.06632573157548904,0.06631261110305786,0.06629949808120728,0.06628639250993729,0.06627330183982849,0.0662602111697197,0.0662471279501915,0.0662340521812439,0.06622098386287689,0.06620793044567108,0.06619487702846527,0.06618183851242065,0.06616879999637604,0.06615576893091202,0.0661427453160286,0.06612973660230637,0.06611673533916473,0.0661037340760231,0.06609074771404266,0.06607776880264282,0.06606478989124298,0.06605182588100433,0.06603886187076569,0.06602591276168823,0.06601297110319138,0.06600003689527512,0.06598710268735886,0.06597418338060379,0.06596127152442932,0.06594836711883545,0.06593547016382217,0.0659225806593895,0.06590969860553741,0.06589681655168533,0.06588394939899445,0.06587108969688416,0.06585823744535446,0.06584539264440536,0.06583255529403687,0.06581972539424896,0.06580690294504166,0.06579408794641495,0.06578128039836884,0.06576848030090332,0.0657556876540184,0.06574290245771408,0.06573012471199036,0.06571735441684723,0.0657045915722847,0.06569183617830276,0.06567908823490143,0.06566634029150009,0.06565360724925995,0.065640889108181,0.06562817096710205,0.0656154528260231,0.06560275703668594,0.06559006124734879,0.06557736545801163,0.06556468456983566,0.0655520111322403,0.06553934514522552,0.06552668660879135,0.06551403552293777,0.0655013918876648,0.06548874825239182,0.06547611951828003,0.06546349823474884,0.06545088440179825,0.06543827056884766,0.06542567163705826,0.06541308015584946,0.06540049612522125,0.06538791209459305,0.06537534296512604,0.06536277383565903,0.06535021960735321,0.0653376653790474,0.06532512605190277,0.06531258672475815,0.06530006229877472,0.06528753787279129,0.06527502834796906,0.06526251882314682,0.06525001674890518,0.06523752957582474,0.0652250424027443,0.06521256268024445,0.0652000904083252,0.06518762558698654,0.06517516821622849,0.06516271829605103,0.06515027582645416,0.0651378408074379,0.06512541323900223,0.06511299312114716,0.06510058045387268,0.0650881677865982,0.06507577002048492,0.06506337225437164,0.06505098938941956,0.06503861397504807,0.06502623856067657,0.06501387059688568,0.06500151753425598,0.06498917192220688,0.06497682631015778,0.06496448814868927,0.06495215743780136,0.06493983417749405,0.06492751836776733,0.06491521000862122,0.0649029091000557,0.06489061564207077,0.06487832963466644,0.06486604362726212,0.06485377252101898,0.06484150886535645,0.06482924520969391,0.06481699645519257,0.06480474770069122,0.06479251384735107,0.06478027999401093,0.06476805359125137,0.06475583463907242,0.06474363058805466,0.0647314190864563,0.06471922248601913,0.06470703333616257,0.0646948516368866,0.06468267738819122,0.06467050313949585,0.06465834379196167,0.06464618444442749,0.06463403254747391,0.06462189555168152,0.06460975855588913,0.06459762901067734,0.06458551436662674,0.06457339972257614,0.06456128507852554,0.06454918533563614,0.06453709304332733,0.06452500075101852,0.06451292335987091,0.0645008459687233,0.06448878347873688,0.06447672098875046,0.06446466594934464,0.06445261836051941,0.06444057822227478,0.06442854553461075,0.06441652029752731,0.06440449506044388,0.06439248472452164,0.06438048183917999,0.06436847895383835,0.0643564835190773,0.06434449553489685,0.0643325224518776,0.06432054191827774,0.06430857628583908,0.06429661810398102,0.06428466737270355,0.06427271664142609,0.06426078081130981,0.06424884498119354,0.06423692405223846,0.06422499567270279,0.0642130896449089,0.06420117616653442,0.06418927758932114,0.06417738646268845,0.06416550278663635,0.06415361911058426,0.06414175033569336,0.06412988156080246,0.06411802023649216,0.06410616636276245,0.06409431248903275,0.06408248096704483,0.06407064199447632,0.064058817923069,0.06404699385166168,0.06403517723083496,0.06402337551116943,0.06401156634092331,0.06399977207183838,0.06398798525333405,0.06397620588541031,0.06396442651748657,0.06395266205072403,0.06394089758396149,0.06392914056777954,0.06391739100217819,0.06390564888715744,0.06389391422271729,0.06388218700885773,0.06387045979499817,0.06385874003171921,0.06384702771902084,0.06383533030748367,0.0638236254453659,0.06381193548440933,0.06380025297403336,0.06378857791423798,0.0637769028544426,0.06376524269580841,0.06375357508659363,0.06374192237854004,0.06373027712106705,0.06371863931417465,0.06370700150728226,0.06369537115097046,0.06368375569581985,0.06367214024066925,0.06366053223609924,0.06364893168210983,0.06363733857870102,0.0636257454752922,0.06361416727304459,0.06360258162021637,0.06359101831912994,0.06357945501804352,0.06356789171695709,0.06355634331703186,0.06354480236768723,0.06353326141834259,0.06352172791957855,0.06351020187139511,0.06349868327379227,0.06348717212677002,0.06347566097974777,0.06346415728330612,0.06345266103744507,0.06344117969274521,0.06342969089746475,0.06341821700334549,0.06340674310922623,0.06339528411626816,0.06338382512331009,0.06337237358093262,0.06336092948913574,0.06334948539733887,0.06333805620670319,0.0633266270160675,0.06331521272659302,0.06330379843711853,0.06329238414764404,0.06328098475933075,0.06326959282159805,0.06325820088386536,0.06324681639671326,0.06323543936014175,0.06322406977415085,0.06321270763874054,0.06320134550333023,0.06318999081850052,0.0631786435842514,0.06316730380058289,0.06315597146749496,0.06314463913440704,0.06313332170248032,0.06312200427055359,0.06311069428920746,0.06309939175844193,0.06308808922767639,0.06307680159807205,0.06306551396846771,0.06305423378944397,0.06304296106100082,0.06303168833255768,0.06302043050527573,0.06300918012857437,0.06299792975187302,0.06298668682575226,0.0629754438996315,0.06296421587467194,0.06295298784971237,0.0629417672753334,0.06293055415153503,0.06291934847831726,0.06290815025568008,0.06289695203304291,0.06288576126098633,0.06287457793951035,0.06286340206861496,0.06285222619771957,0.06284106522798538,0.06282990425825119,0.0628187507390976,0.0628076046705246,0.0627964586019516,0.0627853274345398,0.06277419626712799,0.06276306509971619,0.06275194883346558,0.06274084001779556,0.06272973120212555,0.06271862983703613,0.06270753592252731,0.06269644945859909,0.06268537044525146,0.06267429143190384,0.06266321986913681,0.06265215575695038,0.06264109164476395,0.06263004243373871,0.06261899322271347,0.06260795146226883,0.06259691715240479,0.06258588284254074,0.06257486343383789,0.06256384402513504,0.06255282461643219,0.06254182010889053,0.06253082305192947,0.06251982599496841,0.06250883638858795,0.062497854232788086,0.06248687580227852,0.06247590482234955,0.06246493384242058,0.0624539740383625,0.06244301795959473,0.062432073056697845,0.06242113187909126,0.06241019442677498,0.06239926069974899,0.062388330698013306,0.062377411872148514,0.06236649677157402,0.062355585396289825,0.062344685196876526,0.062333788722753525,0.06232289597392082,0.062312014400959015,0.06230112910270691,0.062290258705616,0.062279388308525085,0.06226852163672447,0.062257666140794754,0.062246814370155334,0.06223597005009651,0.06222512573003769,0.06221429258584976,0.06220346316695213,0.0621926411986351,0.06218181923031807,0.06217100843787193,0.06216020509600639,0.062149401754140854,0.06213860213756561,0.062127821147441864,0.06211703270673752,0.062106259167194366,0.062095481902360916,0.06208471953868866,0.0620739571750164,0.062063198536634445,0.062052447348833084,0.06204170361161232,0.062030963599681854,0.06202022731304169,0.06200949847698212,0.06199877709150314,0.06198805943131447,0.06197734549641609,0.06196664273738861,0.06195593625307083,0.06194525212049484,0.06193456053733826,0.061923880130052567,0.06191319599747658,0.061902523040771484,0.06189185380935669,0.06188119575381279,0.06187054142355919,0.061859890818595886,0.06184924393892288,0.061838600784540176,0.061827968806028366,0.061817340552806854,0.06180671602487564,0.061796098947525024,0.06178548187017441,0.06177487596869469,0.06176427751779556,0.061753686517477036,0.06174309179186821,0.06173250451683998,0.061721932142972946,0.061711352318525314,0.061700787395238876,0.06169022247195244,0.0616796649992466,0.061669107526540756,0.06165856122970581,0.06164802238345146,0.06163748353719711,0.06162695586681366,0.06161642447113991,0.06160590425133705,0.06159539520740509,0.06158488988876343,0.06157438084483147,0.0615638829767704,0.061553388833999634,0.06154290586709976,0.06153242290019989,0.061521947383880615,0.06151147186756134,0.06150100380182266,0.06149054318666458,0.0614800900220871,0.06146963685750961,0.06145918741822243,0.061448752880096436,0.061438318341970444,0.06142788752913475,0.06141746789216995,0.06140705198049545,0.06139663979411125,0.06138623133301735,0.06137582287192345,0.06136542931199074,0.06135503947734833,0.06134464964270592,0.061334267258644104,0.06132389232516289,0.06131352111697197,0.06130315363407135,0.06129279360175133,0.0612824410200119,0.06127208471298218,0.06126174330711365,0.06125140190124512,0.061241064220666885,0.061230745166540146,0.06122041866183281,0.06121009960770607,0.06119978800415993,0.061189472675323486,0.06117917224764824,0.06116887927055359,0.06115858256816864,0.06114829704165459,0.06113801524043083,0.06112773343920708,0.061117466539144516,0.061107195913791656,0.061096932739019394,0.061086684465408325,0.06107642874121666,0.06106618419289589,0.06105594336986542,0.061045706272125244,0.061035480350255966,0.06102525070309639,0.06101502850651741,0.061004821211099625,0.06099460646510124,0.06098440662026405,0.06097419932484627,0.060964010655879974,0.06095381826162338,0.06094362959265709,0.06093345209956169,0.06092327833175659,0.06091311201453209,0.06090294569730759,0.06089278683066368,0.06088263541460037,0.06087249144911766,0.06086234375834465,0.060852207243442535,0.06084207072854042,0.0608319416642189,0.06082182377576828,0.06081169843673706,0.060801584273576736,0.06079147756099701,0.06078137829899788,0.06077127903699875,0.06076117977499962,0.06075109913945198,0.060741014778614044,0.06073093041777611,0.060720864683389664,0.06071079522371292,0.060700733214616776,0.06069067493081093,0.06068062409758568,0.060670576989650726,0.060660529881715775,0.06065049022436142,0.06064045801758766,0.0606304295361042,0.06062040477991104,0.060610391199588776,0.06060037389397621,0.060590364038944244,0.060580361634492874,0.0605703666806221,0.06056036800146103,0.06055038794875145,0.06054040417075157,0.060530420392751694,0.06052045151591301,0.060510482639074326,0.06050051748752594,0.06049055978655815,0.06048060208559036,0.06047065183520317,0.060460709035396576,0.06045076623558998,0.06044083833694458,0.06043091043829918,0.06042097881436348,0.06041106581687927,0.06040114909410477,0.06039123982191086,0.06038133427500725,0.060371436178684235,0.06036153808236122,0.0603516511619091,0.060341764241456985,0.060331884771585464,0.060322005301713943,0.06031213328242302,0.06030226871371269,0.060292407870292664,0.06028255075216293,0.0602727010846138,0.06026285141706467,0.06025300920009613,0.06024317070841789,0.06023334339261055,0.06022351235151291,0.060213688760995865,0.060203876346349716,0.06019406393170357,0.06018425151705742,0.060174450278282166,0.06016464903950691,0.060154855251312256,0.060145068913698196,0.06013527885079384,0.060125499963760376,0.06011572480201721,0.06010596081614494,0.06009618937969208,0.060086432844400406,0.060076676309108734,0.06006692349910736,0.060057178139686584,0.060047440230846405,0.060037702322006226,0.060027968138456345,0.06001824513077736,0.060008518397808075,0.05999879911541939,0.0599890872836113,0.05997937545180321,0.05996967479586601,0.059959977865219116,0.05995028093457222,0.05994059145450592,0.05993090942502022,0.05992122367024422,0.05991154909133911,0.059901878237724304,0.059892214834690094,0.05988255515694618,0.05987289920449257,0.059863246977329254,0.05985359847545624,0.05984395742416382,0.0598343126475811,0.05982467904686928,0.05981505662202835,0.059805430471897125,0.0597958117723465,0.059786196798086166,0.059776585549116135,0.0597669780254364,0.059757377952337265,0.05974777787923813,0.05973818525671959,0.059728603810071945,0.0597190223634243,0.05970944091677666,0.05969986692070961,0.05969029664993286,0.05968073755502701,0.059671174734830856,0.0596616193652153,0.059652067720890045,0.05964251980185509,0.059632983058691025,0.05962345004081726,0.0596139170229435,0.05960438773036003,0.059594862163066864,0.059585344046354294,0.05957583338022232,0.05956632271409035,0.05955682322382927,0.05954732000827789,0.059537824243307114,0.05952833220362663,0.05951884388923645,0.059509359300136566,0.05949988588690758,0.05949041247367859,0.0594809427857399,0.05947147682309151,0.05946202203631401,0.059452567249536514,0.059443116188049316,0.05943366885185242,0.059424225240945816,0.05941479280591011,0.059405360370874405,0.059395931661129,0.05938651040196419,0.05937708914279938,0.059367675334215164,0.05935826525092125,0.05934885889291763,0.05933946371078491,0.059330061078071594,0.05932066962122917,0.05931128188967705,0.05930190160870552,0.059292521327733994,0.05928314849734306,0.05927377566695213,0.0592644102871418,0.05925504490733147,0.059245698153972626,0.05923634022474289,0.05922699347138405,0.059217654168605804,0.05920831114053726,0.059198979288339615,0.05918964743614197,0.05918032303452492,0.059171006083488464,0.05916168540716171,0.05915237218141556,0.0591430626809597,0.059133756905794144,0.05912446230649948,0.05911516770720482,0.05910588055849075,0.05909659340977669,0.05908731371164322,0.05907803401350975,0.05906876176595688,0.059059493243694305,0.05905022472143173,0.05904097110033035,0.059031710028648376,0.059022460132837296,0.059013210237026215,0.05900397151708603,0.058994729071855545,0.058985497802495956,0.058976270258426666,0.058967042714357376,0.05895782634615898,0.05894860252737999,0.05893939360976219,0.05893019214272499,0.05892098695039749,0.05891178920865059,0.05890258774161339,0.05889339745044708,0.058884210884571075,0.058875031769275665,0.058865852653980255,0.05885668098926544,0.05884750932455063,0.05883834883570671,0.058829184621572495,0.058820031583309174,0.05881087854504585,0.05880173295736313,0.058792587369680405,0.05878344923257828,0.05877431482076645,0.05876518413424492,0.05875605717301369,0.058746933937072754,0.05873781815171242,0.05872870609164238,0.05871959403157234,0.0587104856967926,0.05870138853788376,0.058692287653684616,0.05868319794535637,0.05867410823702812,0.05866502597928047,0.05865594372153282,0.05864686891436577,0.058637797832489014,0.05862873047590256,0.0586196705698967,0.05861061438918114,0.05860155448317528,0.05859250947833061,0.05858346074819565,0.05857441574335098,0.05856538191437721,0.05855634808540344,0.05854731798171997,0.0585382878780365,0.05852926895022392,0.058520253747701645,0.058511242270469666,0.058502234518527985,0.058493226766586304,0.05848422646522522,0.05847523361444473,0.058466240763664246,0.05845725163817406,0.058448269963264465,0.058439288288354874,0.05843031033873558,0.058421339839696884,0.058412376791238785,0.05840341001749039,0.058394454419612885,0.05838549882173538,0.05837654694914818,0.05836759880185127,0.058358658105134964,0.058349721133708954,0.05834078788757324,0.05833185464143753,0.05832292512059212,0.0583140067756176,0.05830508843064308,0.05829617753624916,0.05828726291656494,0.058278363198041916,0.05826946347951889,0.058260560035705566,0.05825166404247284,0.05824277922511101,0.05823389068245888,0.05822501331567764,0.05821613594889641,0.05820726230740547,0.058198392391204834,0.05818952992558479,0.05818066745996475,0.05817181244492531,0.058162957429885864,0.058154113590717316,0.05814526602625847,0.05813642591238022,0.05812758952379227,0.058118753135204315,0.05810992792248726,0.058101098984479904,0.058092281222343445,0.058083463460206985,0.05807465687394142,0.05806584283709526,0.058057039976119995,0.05804824084043503,0.05803944543004036,0.05803065001964569,0.05802186578512192,0.058013081550598145,0.05800430104136467,0.057995524257421494,0.05798674747347832,0.057977981865406036,0.05796921253204346,0.05796045437455177,0.05795169994235039,0.057942945510149,0.057934194803237915,0.057925451546907425,0.057916708290576935,0.05790797248482704,0.05789924040436745,0.05789050832390785,0.057881783694028854,0.05787307024002075,0.05786435306072235,0.05785563588142395,0.057846929877996445,0.05783822387456894,0.05782952159643173,0.057820823043584824,0.05781213194131851,0.0578034371137619,0.05779475346207619,0.05778606981039047,0.05777739733457565,0.057768721133470535,0.057760052382946014,0.05775138735771179,0.05774272605776787,0.057734064757823944,0.05772541090846062,0.05771676450967789,0.05770811811089516,0.057699475437402725,0.057690832763910294,0.05768219381570816,0.05767356604337692,0.057664938271045685,0.057656314224004745,0.0576476976275444,0.05763907730579376,0.05763046815991402,0.05762185901403427,0.05761325731873512,0.057604651898145676,0.057596057653427124,0.05758746713399887,0.057578880339860916,0.05757029354572296,0.0575617179274559,0.057553134858608246,0.057544562965631485,0.05753599479794502,0.05752742663025856,0.057518862187862396,0.05751030892133713,0.05750175565481186,0.05749320238828659,0.05748465657234192,0.05747611075639725,0.05746757239103317,0.057459041476249695,0.05745051056146622,0.05744197964668274,0.05743345990777016,0.057424936443567276,0.05741642042994499,0.05740790814161301,0.05739939957857132,0.05739089846611023,0.05738239362835884,0.05737389624118805,0.057365402579307556,0.05735691264271736,0.057348430156707764,0.05733994394540787,0.05733146518468857,0.05732299014925957,0.057314518839120865,0.05730605497956276,0.057297587394714355,0.05728913098573685,0.05728067457675934,0.05727222561836243,0.057263776659965515,0.0572553314268589,0.05724688619375229,0.05723844841122627,0.05723002180457115,0.057221587747335434,0.05721316486597061,0.05720473825931549,0.05719631910324097,0.05718790739774704,0.05717949569225311,0.057171083986759186,0.057162683457136154,0.05715428292751312,0.05714588984847069,0.05713749676942825,0.05712910741567612,0.05712072551250458,0.05711234360933304,0.0571039654314518,0.05709558725357056,0.05708722025156021,0.05707884952425957,0.05707048624753952,0.05706212297081947,0.05705377459526062,0.05704541876912117,0.05703707039356232,0.05702872574329376,0.057020384818315506,0.05701204389333725,0.05700371414422989,0.05699538439512253,0.056987058371305466,0.0569787360727787,0.056970417499542236,0.05696209892630577,0.0569537915289402,0.05694548040628433,0.05693717673420906,0.05692887306213379,0.05692058056592941,0.05691228061914444,0.05690399184823036,0.056895703077316284,0.056887418031692505,0.05687914416193962,0.05687087029218674,0.05686260014772415,0.056854330003261566,0.05684606358408928,0.05683780461549759,0.0568295419216156,0.05682129040360451,0.056813038885593414,0.05680479109287262,0.05679655075073242,0.056788306683301926,0.056780073791742325,0.056771840900182724,0.05676360800862312,0.05675538629293442,0.056747160851955414,0.056738946586847305,0.0567307323217392,0.056722525507211685,0.056714314967393875,0.05670611560344696,0.05669790878891945,0.05668971315026283,0.056681517511606216,0.056673333048820496,0.05666514113545418,0.056656960397958755,0.05664878338575363,0.05664060637354851,0.05663243308663368,0.056624267250299454,0.05661609768867493,0.056607939302921295,0.056599780917167664,0.05659162253141403,0.056583475321531296,0.05657533183693886,0.05656718835234642,0.05655904859304428,0.05655090883374214,0.0565427727997303,0.05653464421629906,0.05652651935815811,0.056518398225307465,0.05651027709245682,0.05650215968489647,0.05649404972791672,0.056485943496227264,0.05647783726453781,0.05646973475813866,0.0564616359770298,0.05645354092121124,0.05644545331597328,0.056437358260154724,0.05642928183078766,0.056421197950839996,0.05641311779618263,0.056405045092105865,0.0563969761133194,0.05638890713453293,0.05638084188103676,0.05637278035283089,0.05636472627520561,0.056356675922870636,0.05634862557053566,0.056340575218200684,0.056332532316446304,0.056324493139982224,0.05631646141409874,0.056308429688215256,0.05630039796233177,0.056292369961738586,0.056284349411726,0.05627633258700371,0.05626831203699112,0.056260306388139725,0.05625229701399803,0.05624428763985634,0.05623628944158554,0.05622829124331474,0.056220296770334244,0.056212302297353745,0.05620431527495384,0.05619633197784424,0.05618835240602493,0.05618037283420563,0.05617239698767662,0.05616442486643791,0.0561564601957798,0.05614849925041199,0.056140538305044174,0.05613257735967636,0.056124623864889145,0.05611667037010193,0.05610872432589531,0.05610078200697899,0.05609283968806267,0.056084901094436646,0.05607696622610092,0.056069038808345795,0.05606111139059067,0.05605318769812584,0.05604526773095131,0.056037355214357376,0.056029435247182846,0.05602152645587921,0.056013621389865875,0.05600571632385254,0.0559978149831295,0.055989913642406464,0.05598202347755432,0.05597413331270218,0.055966246873140335,0.05595836415886879,0.055950481444597244,0.055942606180906296,0.055934734642505646,0.055926863104104996,0.055918995290994644,0.05591113492846489,0.055903270840644836,0.05589541792869568,0.05588756501674652,0.05587971210479736,0.055871862918138504,0.05586401745676994,0.05585617944598198,0.055848345160484314,0.05584051087498665,0.05583267658948898,0.055824849754571915,0.055817026644945145,0.055809203535318375,0.0558013841509819,0.05579357221722603,0.055785756558179855,0.05577795207500458,0.0557701513171196,0.05576235055923462,0.05575455352663994,0.05574675649404526,0.055738963186740875,0.05573117733001709,0.0557233951985836,0.05571560934185982,0.05570783466100693,0.05570005998015404,0.05569228529930115,0.055684518069028854,0.05567675456404686,0.055668991059064865,0.05566123127937317,0.05565347522497177,0.05564572289586067,0.05563797801733017,0.05563022941350937,0.055622488260269165,0.05561474710702896,0.055607013404369354,0.055599283427000046,0.05559154599905014,0.05558381974697113,0.05557610094547272,0.055568378418684006,0.05556066706776619,0.055552948266267776,0.05554523691534996,0.05553752928972244,0.05552982911467552,0.0555221252143383,0.05551443248987198,0.055506736040115356,0.05549904704093933,0.055491358041763306,0.05548367649316788,0.05547599121928215,0.05546831339597702,0.05546063929796219,0.05545296519994736,0.055445294827222824,0.05543763190507889,0.05542996525764465,0.055422309786081314,0.055414650589227676,0.055406998842954636,0.05539935082197189,0.05539170280098915,0.055384065955877304,0.05537642166018486,0.05536878854036331,0.055361151695251465,0.055353518575429916,0.055345892906188965,0.05533827096223831,0.05533064901828766,0.055323030799627304,0.05531541258096695,0.05530780181288719,0.05530019477009773,0.055292584002017975,0.055284980684518814,0.05527738854289055,0.055269788950681686,0.05526219680905342,0.055254608392715454,0.055247023701667786,0.05523943901062012,0.05523185431957245,0.055224280804395676,0.0552167072892189,0.05520913004875183,0.055201563984155655,0.05519400164484978,0.0551864393055439,0.05517888069152832,0.05517132207751274,0.05516377091407776,0.055156219750642776,0.05514867603778839,0.055141132324934006,0.05513359233736992,0.05512605607509613,0.05511852353811264,0.05511099100112915,0.05510346591472626,0.055095940828323364,0.05508841946721077,0.055080901831388474,0.05507338419556618,0.05506587028503418,0.05505836009979248,0.05505085736513138,0.055043354630470276,0.05503585562109947,0.05502835661172867,0.05502086132764816,0.055013373494148254,0.055005885660648346,0.054998401552438736,0.054990921169519424,0.05498344078660011,0.0549759641289711,0.054968491196632385,0.05496101826429367,0.05495355278253555,0.054946087300777435,0.05493863299489021,0.05493117496371269,0.05492372065782547,0.05491626635193825,0.054908815771341324,0.054901372641325,0.05489393323659897,0.05488649010658264,0.05487905815243721,0.05487162619829178,0.05486419424414635,0.054856766015291214,0.05484934523701668,0.05484192073345184,0.054834503680467606,0.054827090352773666,0.05481967702507973,0.054812267422676086,0.054804857820272446,0.0547974593937397,0.054790060967206955,0.05478266254067421,0.05477526783943176,0.054767876863479614,0.054760485887527466,0.054753102362155914,0.05474572256207466,0.05473834276199341,0.054730966687202454,0.0547235943377018,0.05471622198820114,0.05470885708928108,0.05470149219036102,0.05469413101673126,0.0546867735683918,0.05467941612005234,0.05467206612229347,0.05466471239924431,0.05465736612677574,0.05465002357959747,0.0546426884829998,0.05463534593582153,0.05462801456451416,0.05462068319320679,0.05461335554718971,0.054606031626462936,0.05459870398044586,0.054591383785009384,0.054584067314863205,0.054576754570007324,0.05456944555044174,0.05456213653087616,0.05455482751131058,0.05454752966761589,0.054540228098630905,0.05453293025493622,0.05452563613653183,0.05451834574341774,0.05451105535030365,0.054503776133060455,0.05449649691581726,0.054489217698574066,0.05448194220662117,0.054474666714668274,0.054467394948005676,0.054460130631923676,0.054452866315841675,0.05444560572504997,0.05443834885954857,0.054431091994047165,0.05442383512854576,0.05441658943891525,0.05440933629870415,0.05440209433436394,0.05439485237002373,0.054387617856264114,0.0543803796172142,0.05437315255403519,0.05436592176556587,0.054358698427677155,0.05435147136449814,0.05434425175189972,0.0543370358645916,0.05432981625199318,0.05432260408997536,0.05431539565324783,0.05430819094181061,0.054300982505083084,0.054293785244226456,0.05428658425807953,0.0542793907225132,0.05427219718694687,0.05426500737667084,0.0542578250169754,0.05425063893198967,0.054243460297584534,0.054236285388469696,0.05422911047935486,0.05422193557024002,0.05421476438641548,0.05420760065317154,0.0542004331946373,0.054193273186683655,0.05418611690402031,0.054178960621356964,0.054171811789274216,0.05416465923190117,0.05415751412510872,0.05415036901831627,0.05414322763681412,0.054136089980602264,0.05412895977497101,0.054121822118759155,0.0541146956384182,0.05410756915807724,0.05410044267773628,0.05409332364797592,0.05408620089292526,0.0540790893137455,0.05407197028398514,0.05406486243009567,0.05405775457620621,0.05405065044760704,0.05404355004429817,0.054036449640989304,0.054029352962970734,0.05402226373553276,0.05401517078280449,0.054008081555366516,0.05400099977850914,0.053993918001651764,0.053986839950084686,0.05397976189851761,0.05397268757224083,0.05396561697125435,0.05395854637026787,0.053951483219861984,0.0539444237947464,0.053937364369630814,0.05393030494451523,0.05392324924468994,0.05391619727015495,0.05390914902091026,0.05390210449695587,0.05389506369829178,0.053888022899627686,0.05388098582625389,0.053873948752880096,0.0538669191300869,0.0538598857820034,0.053852859884500504,0.053845833986997604,0.053838811814785004,0.053831797093153,0.0538247786462307,0.05381776764988899,0.05381075665354729,0.05380374938249588,0.05379674211144447,0.053789738565683365,0.05378274247050285,0.05377574637532234,0.05376875400543213,0.053761765360832214,0.053754772990942,0.053747788071632385,0.05374080687761307,0.05373382195830345,0.05372684448957443,0.05371987074613571,0.05371289700269699,0.05370593070983887,0.05369896441698074,0.05369200184941292,0.05368503928184509,0.053678080439567566,0.05367112532258034,0.053664177656173706,0.05365722253918648,0.053650278598070145,0.053643327206373215,0.05363638699054718,0.053629446774721146,0.05362251400947571,0.05361557379364967,0.053608644753694534,0.053601719439029694,0.053594790399074554,0.05358786880970001,0.05358094722032547,0.05357402563095093,0.05356711149215698,0.053560201078653336,0.05355329066514969,0.05354638397693634,0.05353947728872299,0.05353257805109024,0.05352567508816719,0.05351877957582474,0.053511884063482285,0.05350499227643013,0.053498104214668274,0.053491219878196716,0.05348433554172516,0.0534774549305439,0.05347057804465294,0.05346370115876198,0.053456827998161316,0.053449954837560654,0.05344309285283089,0.05343622714281082,0.053429365158081055,0.053422506898641586,0.05341564863920212,0.05340879410505295,0.05340194329619408,0.053395092487335205,0.05338824540376663,0.05338140204548836,0.05337455868721008,0.053367726504802704,0.05336088687181473,0.05335405468940735,0.05334721878170967,0.05334039404988289,0.053333573043346405,0.05332674831151962,0.05331992357969284,0.053313110023736954,0.05330629646778107,0.05329948291182518,0.05329267308115959,0.0532858669757843,0.05327906459569931,0.05327225849032402,0.053265463560819626,0.05325866490602493,0.05325186997652054,0.05324507877230644,0.053238287568092346,0.05323150381445885,0.05322471633553505,0.05321793630719185,0.05321116000413895,0.053204379975795746,0.05319761112332344,0.053190842270851135,0.05318407341837883,0.05317730829119682,0.053170546889305115,0.053163785487413406,0.0531570240855217,0.053150273859500885,0.053143516182899475,0.05313676595687866,0.05313001945614815,0.05312327668070793,0.05311653017997742,0.0531097948551178,0.05310305580496788,0.05309632048010826,0.05308958888053894,0.05308286100625992,0.053076133131980896,0.05306941270828247,0.05306268855929375,0.05305596813559532,0.05304925516247749,0.053042538464069366,0.05303582549095154,0.05302911624312401,0.05302240699529648,0.053015705198049545,0.05300900340080261,0.05300230532884598,0.05299561098217964,0.05298891291022301,0.05298222228884697,0.05297553539276123,0.05296884849667549,0.05296216532588005,0.05295548588037491,0.052948806434869766,0.052942126989364624,0.05293545499444008,0.05292878672480583,0.05292211472988129,0.05291544646024704,0.05290878191590309,0.05290212482213974,0.05289546400308609,0.05288881063461304,0.052882157266139984,0.05287550389766693,0.05286885425448418,0.05286221206188202,0.05285557359457016,0.052848927676677704,0.052842289209365845,0.052835654467344284,0.05282902345061302,0.05282238870859146,0.0528157614171505,0.05280913785099983,0.05280251055955887,0.0527958907186985,0.052789270877838135,0.052782654762268066,0.052776038646698,0.052769433706998825,0.052762821316719055,0.05275621637701988,0.05274961143732071,0.052743010222911835,0.05273641273379326,0.05272981896996498,0.052723221480846405,0.052716631442308426,0.052710045129060745,0.052703458815813065,0.052696872502565384,0.052690289914608,0.052683714777231216,0.05267713591456413,0.052670564502477646,0.05266399309039116,0.05265742167830467,0.052650853991508484,0.052644290030002594,0.052637729793787,0.05263117328286171,0.05262461677193642,0.052618060261011124,0.05261150747537613,0.05260495841503143,0.052598413079977036,0.05259186774492264,0.05258532613515854,0.05257878452539444,0.05257225036621094,0.05256571248173714,0.05255918204784393,0.05255265161395073,0.052546124905347824,0.05253960192203522,0.05253307893872261,0.052526555955410004,0.052520036697387695,0.052513524889945984,0.052507009357213974,0.05250050127506256,0.05249399319291115,0.052487485110759735,0.05248098075389862,0.0524744838476181,0.05246798321604729,0.05246149003505707,0.05245499685406685,0.05244850367307663,0.05244201421737671,0.05243552848696709,0.05242904648184776,0.05242256075143814,0.052416082471609116,0.05240960791707039,0.05240313336253166,0.052396658807992935,0.052390195429325104,0.052383724600076675,0.052377261221408844,0.05237079784274101,0.05236433818936348,0.052357882261276245,0.05235142633318901,0.052344974130392075,0.05233852192759514,0.0523320734500885,0.05232562869787216,0.05231918767094612,0.05231274291872978,0.05230630934238434,0.052299872040748596,0.05229343846440315,0.05228700861334801,0.05228057876229286,0.052274152636528015,0.05226772651076317,0.05226130411028862,0.05225488543510437,0.05224846303462982,0.05224205181002617,0.05223563686013222,0.052229225635528564,0.05222282186150551,0.052216414362192154,0.052210014313459396,0.05220361426472664,0.05219721794128418,0.05219082161784172,0.05218442529439926,0.0521780364215374,0.05217164754867554,0.05216526240110397,0.05215887725353241,0.052152492105960846,0.05214611440896988,0.05213973671197891,0.052133359014987946,0.052126988768577576,0.052120622247457504,0.052114248275756836,0.052107881754636765,0.05210152268409729,0.05209515988826752,0.05208880454301834,0.05208244547247887,0.05207609385251999,0.05206974223256111,0.05206339433789253,0.05205704644322395,0.05205070227384567,0.05204435810446739,0.05203802138566971,0.052031684666872025,0.05202534794807434,0.052019014954566956,0.05201268196105957,0.052006352692842484,0.052000027149915695,0.051993705332279205,0.051987387239933014,0.051981065422296524,0.05197474732995033,0.05196843296289444,0.051962122321128845,0.05195581167936325,0.051949504762887955,0.05194319784641266,0.05193689465522766,0.05193059518933296,0.05192429944872856,0.05191799998283386,0.05191170796751976,0.05190541595220566,0.051899127662181854,0.05189283937215805,0.051886554807424545,0.05188027024269104,0.05187399312853813,0.05186771601438522,0.051861442625522614,0.051855169236660004,0.051848895847797394,0.05184262618422508,0.05183635652065277,0.051830094307661057,0.05182383581995964,0.051817573606967926,0.05181131884455681,0.05180506035685539,0.051798805594444275,0.051792558282613754,0.051786307245492935,0.05178006365895271,0.05177382007241249,0.05176757648587227,0.051761336624622345,0.05175510421395302,0.05174886807799339,0.051742635667324066,0.05173640698194504,0.05173017829656601,0.05172395333647728,0.05171772837638855,0.05171150341629982,0.051705289632081985,0.051699068397283554,0.05169285461306572,0.051686640828847885,0.05168043076992035,0.05167422071099281,0.051668018102645874,0.05166181921958923,0.051655612885951996,0.051649414002895355,0.05164321884512901,0.05163702368736267,0.051630835980176926,0.05162464454770088,0.05161845684051514,0.05161226913332939,0.051606085151433945,0.051599904894828796,0.05159372463822365,0.0515875518321991,0.05158137530088425,0.051575206220149994,0.051569029688835144,0.05156286805868149,0.051556702703237534,0.05155053734779358,0.05154437571763992,0.051538217812776566,0.05153205990791321,0.05152590572834015,0.05151975527405739,0.05151360481977463,0.05150745436549187,0.051501307636499405,0.05149516835808754,0.05148902162909508,0.05148288607597351,0.051476746797561646,0.05147061124444008,0.05146447941660881,0.05145835131406784,0.05145222321152687,0.0514460988342762,0.05143997445702553,0.051433853805065155,0.05142773315310478,0.05142161622643471,0.05141549929976463,0.05140938609838486,0.05140327289700508,0.0513971671462059,0.05139106139540672,0.051384955644607544,0.05137885361909866,0.05137275531888008,0.0513666570186615,0.051360562443733215,0.05135446786880493,0.051348377019166946,0.05134228989481926,0.05133620277047157,0.051330119371414185,0.051324035972356796,0.051317956298589706,0.051311880350112915,0.051305804401636124,0.05129972845315933,0.05129365622997284,0.051287584006786346,0.05128151923418045,0.051275450736284256,0.05126938968896866,0.05126332864165306,0.05125726759433746,0.05125121772289276,0.05124516040086746,0.05123911052942276,0.05123305693268776,0.051227010786533356,0.05122096464037895,0.05121491849422455,0.05120887607336044,0.051202841103076935,0.05119679868221283,0.05119076743721962,0.05118473619222641,0.0511787049472332,0.05117267370223999,0.05116664618253708,0.05116061866283417,0.05115459859371185,0.05114858224987984,0.05114256590604782,0.05113654211163521,0.05113053321838379,0.05112452059984207,0.05111851170659065,0.05111250653862953,0.05110649764537811,0.05110049247741699,0.05109449103474617,0.051088493317365646,0.05108249559998512,0.051076505333185196,0.05107050761580467,0.051064521074295044,0.05105852708220482,0.05105254054069519,0.05104656144976616,0.05104057863354683,0.0510345958173275,0.051028620451688766,0.051022641360759735,0.0510166697204113,0.051010698080062866,0.05100472643971443,0.050998758524656296,0.05099279806017876,0.05098683014512062,0.05098087340593338,0.05097490921616554,0.0509689524769783,0.05096299573779106,0.05095704272389412,0.050951097160577774,0.05094515159726143,0.05093919858336449,0.05093325674533844,0.05092731490731239,0.050921373069286346,0.0509154349565506,0.05090949684381485,0.0509035661816597,0.05089763179421425,0.0508917011320591,0.050885774195194244,0.05087985098361969,0.05087392404675484,0.05086800083518028,0.05086208134889603,0.05085616558790207,0.05085024982690811,0.05084433779120445,0.05083842575550079,0.05083251744508743,0.05082660913467407,0.05082070082426071,0.05081479996442795,0.050808899104595184,0.05080299824476242,0.050797101110219955,0.05079120397567749,0.05078531429171562,0.050779424607753754,0.05077353119850159,0.05076764523983002,0.050761763006448746,0.050755880773067474,0.0507499985396862,0.05074412003159523,0.050738248974084854,0.05073237046599388,0.050726499408483505,0.05072063207626343,0.05071475729346275,0.050708889961242676,0.050703030079603195,0.050697166472673416,0.050691306591033936,0.05068545043468475,0.05067959427833557,0.05067373439669609,0.05066788196563721,0.05066203325986862,0.050656188279390335,0.05065034329891205,0.05064449831843376,0.05063865706324577,0.050632819533348083,0.050626982003450394,0.050621144473552704,0.05061531066894531,0.05060947686433792,0.05060364678502083,0.050597816705703735,0.05059199035167694,0.050586167722940445,0.05058034509420395,0.05057452619075775,0.05056871101260185,0.050562892109155655,0.050557080656290054,0.050551269203424454,0.05054546147584915,0.05053965374827385,0.05053384602069855,0.050528042018413544,0.05052223801612854,0.050516437739133835,0.05051064491271973,0.05050484463572502,0.050499048084020615,0.0504932627081871,0.050487469881772995,0.050481680780649185,0.05047589913010597,0.05047011002898216,0.05046432837843895,0.050458550453186035,0.05045277252793312,0.050446998327970505,0.05044122412800789,0.05043544992804527,0.050429683178663254,0.050423916429281235,0.050418149679899216,0.050412386655807495,0.050406623631715775,0.050400860607624054,0.05039510130882263,0.05038934573531151,0.05038359388709068,0.05037784203886986,0.050372086465358734,0.050366342067718506,0.05036059767007828,0.05035485327243805,0.05034910887479782,0.05034337192773819,0.05033762753009796,0.05033189430832863,0.050326157361269,0.05032042786478996,0.05031469836831093,0.050308965146541595,0.05030324310064316,0.05029751732945442,0.050291791558265686,0.05028606951236725,0.05028035491704941,0.05027463659644127,0.05026892200112343,0.050263211131095886,0.050257500261068344,0.0502517931163311,0.05024608597159386,0.05024037882685661,0.05023467540740967,0.05022897198796272,0.050223276019096375,0.05021757632493973,0.05021188035607338,0.05020618811249733,0.05020049586892128,0.05019480362534523,0.05018911510705948,0.050183434039354324,0.05017774552106857,0.05017206445336342,0.05016638711094856,0.05016070976853371,0.05015503242611885,0.050149355083703995,0.050143685191869736,0.05013801530003548,0.050132349133491516,0.05012667551636696,0.050121013075113297,0.050115350633859634,0.05010969191789627,0.05010403320193291,0.05009837448596954,0.05009271949529648,0.05008706450462341,0.050081413239240646,0.05007576569914818,0.05007011815905571,0.05006447434425354,0.05005883052945137,0.0500531904399395,0.05004754662513733,0.050041910260915756,0.05003627389669418,0.05003064125776291,0.050025008618831635,0.05001937597990036,0.05001375079154968,0.05000812187790871,0.05000250041484833,0.04999687522649765,0.04999125748872757,0.04998563602566719,0.04998001828789711,0.04997440055012703,0.049968790262937546,0.04996318370103836,0.04995757341384888,0.04995196312665939,0.04994635656476021,0.04994075745344162,0.04993515461683273,0.049929551780223846,0.04992395639419556,0.04991835728287697,0.04991276189684868,0.04990717023611069,0.049901578575372696,0.049895990639925,0.04989040642976761,0.049884818494319916,0.04987923800945282,0.049873657524585724,0.049868080765008926,0.04986250028014183,0.04985692724585533,0.049851350486278534,0.049845777451992035,0.049840208142995834,0.04983464255928993,0.04982907325029373,0.04982350766658783,0.049817945808172226,0.04981238394975662,0.049806829541921616,0.04980127140879631,0.049795717000961304,0.049790158867836,0.04978461563587189,0.04977906122803688,0.04977351799607277,0.04976797103881836,0.04976242408156395,0.04975688457489014,0.049751341342926025,0.04974580556154251,0.049740269780159,0.04973473399877548,0.049729201942682266,0.04972366988658905,0.04971814155578613,0.049712613224983215,0.049707088619470596,0.04970156028866768,0.04969603940844536,0.049690525978803635,0.049685005098581314,0.04967948794364929,0.04967397451400757,0.049668461084365845,0.04966295138001442,0.049657441675662994,0.04965193569660187,0.04964642971754074,0.04964092746376991,0.049635421484708786,0.049629926681518555,0.049624424427747726,0.049618929624557495,0.049613434821367264,0.04960794374346733,0.0496024526655674,0.049596965312957764,0.04959147796034813,0.049585990607738495,0.04958051070570946,0.04957502707839012,0.04956955090165138,0.049564070999622345,0.049558594822883606,0.04955311864614487,0.049547649919986725,0.049542173743247986,0.04953670874238014,0.0495312437415123,0.049525778740644455,0.04952031373977661,0.049514852464199066,0.04950939118862152,0.049503933638334274,0.04949847608804703,0.04949302226305008,0.04948757216334343,0.04948211833834648,0.04947667196393013,0.04947122186422348,0.04946577921509743,0.049460332840681076,0.04945489391684532,0.04944945126771927,0.049444012343883514,0.04943857714533806,0.0494331419467926,0.04942770674824715,0.04942227900028229,0.04941684752702713,0.04941142350435257,0.04940599948167801,0.04940057545900345,0.04939515143632889,0.049389731138944626,0.049384310841560364,0.0493788979947567,0.049373481422662735,0.04936806857585907,0.0493626594543457,0.049357250332832336,0.04935184121131897,0.0493464358150959,0.04934103041887283,0.049335625022649765,0.049330227077007294,0.04932482913136482,0.04931943118572235,0.04931403696537018,0.049308642745018005,0.04930324852466583,0.04929785802960396,0.04929247125983238,0.049287084490060806,0.04928170144557953,0.04927631840109825,0.049270935356616974,0.049265556037425995,0.049260176718235016,0.049254801124334335,0.04924942925572395,0.04924405366182327,0.04923868551850319,0.049233317375183105,0.04922794923186302,0.04922258481383324,0.04921722039580345,0.049211859703063965,0.04920649901032448,0.04920114204287529,0.0491957813501358,0.04919042810797691,0.049185074865818024,0.049179721623659134,0.04917437210679054,0.04916902631521225,0.04916367679834366,0.049158334732055664,0.04915298894047737,0.049147650599479675,0.04914230853319168,0.04913697764277458,0.049131639301776886,0.04912630468606949,0.04912097379565239,0.04911563917994499,0.04911031201481819,0.04910498484969139,0.04909966140985489,0.04909433797001839,0.049089014530181885,0.04908369854092598,0.04907837510108948,0.04907306283712387,0.04906774312257767,0.04906243085861206,0.049057118594646454,0.049051810055971146,0.049046505242586136,0.04904119670391083,0.04903589189052582,0.04903058707714081,0.049025289714336395,0.049019988626241684,0.04901469126343727,0.04900939390063286,0.049004100263118744,0.04899881035089493,0.048993516713380814,0.048988230526447296,0.04898293688893318,0.04897765442728996,0.048972368240356445,0.048967085778713226,0.04896180331707001,0.048956528306007385,0.04895125329494476,0.04894597455859184,0.04894070327281952,0.048935431987047195,0.04893016070127487,0.04892489314079285,0.04891962558031082,0.048914358019828796,0.04890909418463707,0.04890383780002594,0.04889857396483421,0.048893313854932785,0.048888057470321655,0.048882801085710526,0.048877548426389694,0.04887229949235916,0.04886705055832863,0.048861801624298096,0.04885655641555786,0.04885131120681763,0.04884606972336769,0.04884082451462746,0.04883558675646782,0.04883034527301788,0.048825111240148544,0.04881987348198891,0.048814643174409866,0.048809412866830826,0.048804182559251785,0.048798952251672745,0.048793725669384,0.04878849908709526,0.048783279955387115,0.04877806082367897,0.04877283796668053,0.04876761883497238,0.048762403428554535,0.04875718802213669,0.04875197634100914,0.04874676838517189,0.04874155670404434,0.048736345022916794,0.04873114079236984,0.04872593656182289,0.04872073233127594,0.04871553182601929,0.048710331320762634,0.04870513081550598,0.048699937760829926,0.04869474470615387,0.048689547926187515,0.04868435859680176,0.048679169267416,0.04867398366332054,0.048668794333934784,0.048663608729839325,0.048658426851034164,0.048653244972229004,0.04864806681871414,0.04864288866519928,0.04863771051168442,0.048632536083459854,0.04862736538052559,0.048622194677591324,0.04861702024936676,0.04861185699701309,0.048606690019369125,0.04860152304172516,0.04859635978937149,0.04859119653701782,0.04858603700995445,0.04858087748289108,0.04857572540640831,0.04857056960463524,0.048565417528152466,0.048560261726379395,0.04855511337518692,0.048549965023994446,0.04854481667280197,0.048539672046899796,0.04853453114628792,0.04852938652038574,0.04852424934506416,0.048519112169742584,0.048513974994421005,0.04850883409380913,0.04850370064377785,0.048498570919036865,0.04849344119429588,0.0484883114695549,0.04848318547010422,0.048478055745363235,0.04847293347120285,0.048467811197042465,0.04846269264817238,0.04845757037401199,0.04845245182514191,0.04844734072685242,0.04844222217798233,0.04843711107969284,0.04843200370669365,0.04842689260840416,0.04842178523540497,0.04841667786240578,0.048411574214696884,0.04840647056698799,0.0484013706445694,0.048396266996860504,0.04839117079973221,0.04838607460260391,0.048380982130765915,0.04837588593363762,0.04837079346179962,0.04836570471525192,0.048360615968704224,0.048355527222156525,0.04835044592618942,0.04834536090493202,0.04834027960896492,0.04833519831299782,0.048330120742321014,0.04832504317164421,0.048319969326257706,0.0483148917555809,0.048309821635484695,0.04830474779009819,0.04829968139529228,0.048294611275196075,0.04828954488039017,0.04828447848558426,0.04827941954135895,0.04827435687184334,0.04826929792761803,0.048264238983392715,0.048259187489748,0.04825413227081299,0.048249077051877975,0.04824402555823326,0.04823897406458855,0.04823392629623413,0.048228878527879715,0.0482238344848156,0.04821879044175148,0.04821374639868736,0.048208706080913544,0.048203665763139725,0.048198629170656204,0.04819359630346298,0.04818855971097946,0.04818352684378624,0.048178497701883316,0.04817346855998039,0.04816843941807747,0.048163414001464844,0.04815838858485222,0.048153363168239594,0.048148345202207565,0.04814332351088524,0.04813830554485321,0.04813328757882118,0.048128269612789154,0.048123255372047424,0.04811824858188629,0.04811323434114456,0.04810822382569313,0.048103220760822296,0.048098210245370865,0.04809320718050003,0.048088204115629196,0.04808320477604866,0.048078201711177826,0.04807320609688759,0.04806821048259735,0.048063214868307114,0.048058222979307175,0.04805322736501694,0.0480482392013073,0.04804324731230736,0.048038262873888016,0.048033274710178375,0.04802829027175903,0.04802330955862999,0.04801832512021065,0.0480133481323719,0.04800837114453316,0.04800339415669441,0.047998420894145966,0.04799344763159752,0.04798847436904907,0.047983501106500626,0.047978535294532776,0.04797356575727463,0.047968603670597076,0.04796363785862923,0.04795867204666138,0.047953709959983826,0.04794875532388687,0.04794379696249962,0.047938838601112366,0.04793388769030571,0.04792892932891846,0.0479239784181118,0.047919031232595444,0.04791408032178879,0.04790913313627243,0.04790418595075607,0.04789924621582031,0.047894302755594254,0.047889359295368195,0.047884419560432434,0.04787948355078697,0.04787454754114151,0.04786961153149605,0.047864679247140884,0.04785974323749542,0.04785481467843056,0.04784988611936569,0.04784495756030083,0.04784003272652626,0.047835107892751694,0.047830186784267426,0.04782526567578316,0.04782034456729889,0.04781542718410492,0.04781050980091095,0.04780559241771698,0.04780068248510361,0.047795768827199936,0.04779085889458656,0.04778594896197319,0.047781042754650116,0.04777613654732704,0.04777123034000397,0.04776632785797119,0.047761425375938416,0.04775652661919594,0.04775162786245346,0.04774673283100128,0.0477418377995491,0.047736942768096924,0.047732047736644745,0.047727156430482864,0.04772226884961128,0.0477173812687397,0.04771248996257782,0.047707606106996536,0.04770272597670555,0.04769784212112427,0.04769296199083328,0.0476880818605423,0.04768320545554161,0.047678325325250626,0.04767345264554024,0.04766858369112015,0.04766371101140976,0.04765884205698967,0.04765397310256958,0.04764910414814949,0.0476442389190197,0.04763937368988991,0.047634512186050415,0.04762965068221092,0.04762479290366173,0.047619935125112534,0.04761507734656334,0.04761022329330444,0.04760536551475525,0.04760051518678665,0.047595664858818054,0.047590818256139755,0.04758596792817116,0.04758112132549286,0.04757627844810486,0.04757143184542656,0.04756658896803856,0.04756174981594086,0.04755691438913345,0.04755207151174545,0.04754723981022835,0.047542400658130646,0.04753756895661354,0.047532737255096436,0.04752790927886963,0.047523077577352524,0.047518253326416016,0.04751342535018921,0.047508604824543,0.04750378429889679,0.04749896004796028,0.04749413952231407,0.04748932272195816,0.04748450592160225,0.04747968912124634,0.047474876046180725,0.04747006297111511,0.0474652536213398,0.047460440546274185,0.04745563492178917,0.04745082929730415,0.04744602367281914,0.04744121804833412,0.047436416149139404,0.04743161424994469,0.04742681607604027,0.04742202162742615,0.04741722345352173,0.04741242900490761,0.04740763455629349,0.047402843832969666,0.047398053109645844,0.04739326238632202,0.0473884753882885,0.047383688390254974,0.04737890511751175,0.047374118119478226,0.0473693385720253,0.04736455902457237,0.047359779477119446,0.04735499992966652,0.04735022410750389,0.04734545201063156,0.04734067991375923,0.0473359078168869,0.04733113572001457,0.04732636734843254,0.04732160270214081,0.04731683433055878,0.047312069684267044,0.04730730503797531,0.04730254411697388,0.04729778319597244,0.04729302227497101,0.04728826880455017,0.047283511608839035,0.0472787581384182,0.04727400466799736,0.04726925119757652,0.04726450517773628,0.04725975543260574,0.0472550094127655,0.047250259667634964,0.04724551737308502,0.04724077507853508,0.04723603278398514,0.047231294214725494,0.04722655564546585,0.04722181707620621,0.047217078506946564,0.04721234738826752,0.04720761254429817,0.04720287770032883,0.04719815030694008,0.04719342291355133,0.04718869552016258,0.04718397185206413,0.047179244458675385,0.047174520790576935,0.047169800847768784,0.047165077179670334,0.04716036096215248,0.04715564474463463,0.047150928527116776,0.04714621230959892,0.04714149981737137,0.047136787325143814,0.04713207855820656,0.047127366065979004,0.047122661024332047,0.04711795225739479,0.04711324721574783,0.04710854962468147,0.047103848308324814,0.047099146991968155,0.047094445675611496,0.04708974435925484,0.047085050493478775,0.04708035662770271,0.04707566276192665,0.04707096889615059,0.047066278755664825,0.04706158861517906,0.0470569021999836,0.04705221578478813,0.047047533094882965,0.0470428466796875,0.04703816398978233,0.047033485025167465,0.0470288060605526,0.04702412709593773,0.04701945185661316,0.04701477661728859,0.04701010137796402,0.04700542986392975,0.04700075834989548,0.046996090561151505,0.04699141904711723,0.04698675125837326,0.046982087194919586,0.04697742313146591,0.04697275906801224,0.04696810245513916,0.046963438391685486,0.04695877805352211,0.04695412144064903,0.046949468553066254,0.046944815665483475,0.046940162777900696,0.04693550989031792,0.046930860728025436,0.04692620784044266,0.04692155867815018,0.04691691696643829,0.04691226780414581,0.04690762609243393,0.046902984380722046,0.04689834639430046,0.04689370468258858,0.04688906669616699,0.04688442870974541,0.04687979444861412,0.04687516391277313,0.046870529651641846,0.046865902841091156,0.04686126857995987,0.04685664176940918,0.04685201495885849,0.0468473881483078,0.04684276133775711,0.04683814197778702,0.04683351889252663,0.04682890325784683,0.04682428017258644,0.04681966453790665,0.04681504890322685,0.04681043326854706,0.04680582135915756,0.04680120572447777,0.04679659754037857,0.04679198935627937,0.046787384897470474,0.04678277298808098,0.04677816852927208,0.04677356779575348,0.04676896333694458,0.04676436260342598,0.04675976186990738,0.04675516486167908,0.046750567853450775,0.04674597084522247,0.04674137756228447,0.046736788004636765,0.04673219099640846,0.04672760143876076,0.04672301188111305,0.046718426048755646,0.04671384394168854,0.04670925438404083,0.04670467600226402,0.046700090169906616,0.046695511788129807,0.046690933406353,0.04668635502457619,0.04668177664279938,0.046677201986312866,0.046672627329826355,0.04666805639863014,0.04666348546743393,0.04665891081094742,0.046654343605041504,0.04664978012442589,0.046645212918519974,0.04664064943790436,0.04663608595728874,0.046631522476673126,0.04662696644663811,0.04662240296602249,0.04661784693598747,0.046613287180662155,0.046608734875917435,0.046604182571172714,0.046599630266427994,0.04659507796168327,0.04659052565693855,0.04658597707748413,0.04658143222332001,0.046576883643865585,0.04657234251499176,0.04656779766082764,0.04656325653195381,0.04655871540307999,0.04655417427420616,0.04654964059591293,0.04654510319232941,0.04654056578874588,0.04653603583574295,0.046531498432159424,0.046526968479156494,0.046522438526153564,0.046517908573150635,0.046513382345438004,0.04650885611772537,0.04650433361530304,0.04649981111288071,0.046495284885168076,0.04649076610803604,0.04648624733090401,0.04648172855377197,0.04647721350193024,0.0464726947247982,0.046468183398246765,0.04646366834640503,0.04645916074514389,0.04645464941859245,0.046450141817331314,0.04644563049077988,0.046441126614809036,0.046436622738838196,0.04643211513757706,0.046427614986896515,0.04642311483621597,0.04641861468553543,0.04641411453485489,0.046409621834754944,0.0464051216840744,0.04640062898397446,0.04639613628387451,0.046391647309064865,0.04638715460896492,0.04638266563415527,0.04637817665934563,0.04637369140982628,0.04636920243501663,0.04636472091078758,0.04636023938655853,0.046355754137039185,0.04635127633810043,0.04634679853916168,0.04634232074022293,0.04633784294128418,0.046333372592926025,0.046328894793987274,0.04632442072033882,0.046319954097270966,0.04631548374891281,0.04631101340055466,0.0463065467774868,0.046302080154418945,0.04629761725664139,0.04629315063357353,0.04628869146108627,0.046284232288599014,0.046279773116111755,0.046275313943624496,0.046270858496427536,0.046266403049230576,0.04626194387674332,0.04625749588012695,0.04625304415822029,0.04624859243631363,0.046244144439697266,0.0462396964430809,0.04623525217175484,0.046230804175138474,0.04622635990381241,0.04622191935777664,0.04621747508645058,0.04621303454041481,0.04620859771966934,0.046204157173633575,0.046199724078178406,0.04619528725743294,0.04619085416197777,0.0461864173412323,0.04618198797106743,0.04617755860090256,0.046173129230737686,0.04616870358586311,0.04616427794098854,0.04615985229611397,0.046155426651239395,0.04615100845694542,0.046146586537361145,0.04614216461777687,0.046137746423482895,0.04613333195447922,0.04612891376018524,0.046124499291181564,0.046120088547468185,0.04611567407846451,0.04611126333475113,0.04610685259103775,0.04610244557261467,0.04609804227948189,0.04609363526105881,0.046089231967926025,0.04608482867479324,0.04608042538166046,0.04607602208852768,0.046071626245975494,0.04606722667813301,0.046062830835580826,0.04605843126773834,0.04605403542518616,0.04604964330792427,0.046045251190662384,0.0460408590734005,0.04603647068142891,0.04603208601474762,0.04602770134806633,0.04602331295609474,0.04601892828941345,0.04601454362273216,0.04601016268134117,0.04600578173995018,0.04600140079855919,0.045997023582458496,0.0459926500916481,0.04598827287554741,0.045983899384737015,0.04597952216863632,0.045975152403116226,0.04597078263759613,0.045966409146785736,0.04596204310655594,0.04595767706632614,0.045953311026096344,0.04594894498586655,0.045944586396217346,0.04594022035598755,0.04593586176633835,0.04593150317668915,0.04592714086174965,0.04592278599739075,0.045918431133031845,0.04591407626867294,0.04590972512960434,0.04590537026524544,0.045901019126176834,0.04589667171239853,0.045892320573329926,0.04588797315955162,0.045883629471063614,0.04587928578257561,0.0458749420940876,0.045870598405599594,0.045866258442401886,0.04586191847920418,0.04585757851600647,0.04585324227809906,0.04584890976548195,0.04584456980228424,0.04584023728966713,0.04583590477705002,0.04583157226443291,0.045827243477106094,0.04582291841506958,0.04581858962774277,0.04581426456570625,0.04580993577837944,0.045805614441633224,0.04580129310488701,0.04579697176814079,0.045792654156684875,0.04578833281993866,0.04578401520848274,0.045779697597026825,0.045775383710861206,0.04577106982469559,0.04576675593852997,0.04576244205236435,0.04575813189148903,0.04575382545590401,0.045749515295028687,0.045745208859443665,0.04574090614914894,0.04573660343885422,0.045732297003269196,0.04572799801826477,0.045723699033260345,0.04571939632296562,0.0457150973379612,0.04571080207824707,0.045706506818532944,0.04570221155881882,0.04569791629910469,0.04569362848997116,0.04568933695554733,0.0456850491464138,0.045680757611989975,0.045676469802856445,0.045672185719013214,0.04566790163516998,0.04566361755132675,0.04565933346748352,0.04565505310893059,0.045650772750377655,0.04564649239182472,0.04564221575856209,0.045637939125299454,0.04563366621732712,0.045629389584064484,0.04562511667609215,0.04562084749341011,0.045616574585437775,0.04561230540275574,0.0456080362200737,0.04560377076268196,0.04559950530529022,0.04559523984789848,0.04559097811579704,0.0455867163836956,0.04558245465159416,0.04557819664478302,0.04557393863797188,0.045569680631160736,0.04556542634963989,0.04556116834282875,0.045556917786598206,0.04555266350507736,0.04554841294884682,0.04554416239261627,0.04553991183638573,0.04553566500544548,0.045531418174505234,0.04552717134356499,0.04552293196320534,0.04551868513226509,0.04551444575190544,0.04551020264625549,0.045505963265895844,0.04550172761082649,0.04549748823046684,0.04549325257539749,0.04548901692032814,0.04548478499054909,0.045480553060770035,0.04547632113099098,0.04547209292650223,0.045467860996723175,0.04546363651752472,0.045459408313035965,0.04545518383383751,0.04545095935463905,0.0454467348754406,0.04544251784682274,0.04543829709291458,0.045434072613716125,0.045429859310388565,0.045425642281770706,0.04542142525315285,0.04541720822453499,0.04541299492120743,0.045408785343170166,0.045404572039842606,0.045400362461805344,0.04539615660905838,0.04539194703102112,0.045387741178274155,0.04538353160023689,0.04537932947278023,0.04537512734532356,0.0453709252178669,0.04536672681570053,0.045362524688243866,0.0453583262860775,0.04535413160920143,0.045349933207035065,0.045345742255449295,0.04534154385328293,0.04533735290169716,0.04533316195011139,0.04532897099852562,0.04532478377223015,0.04532059654593468,0.045316409319639206,0.045312222093343735,0.04530803859233856,0.04530385881662369,0.04529967159032822,0.04529549181461334,0.045291315764188766,0.04528713598847389,0.045282959938049316,0.04527878388762474,0.045274607837200165,0.04527043178677559,0.04526625946164131,0.045262087136507034,0.045257918536663055,0.04525374621152878,0.0452495776116848,0.04524541273713112,0.04524124786257744,0.045237086713314056,0.045232921838760376,0.045228756964206696,0.045224595814943314,0.04522043466567993,0.04521627351641655,0.045212119817733765,0.04520796239376068,0.045203808695077896,0.04519965499639511,0.045195501297712326,0.04519134759902954,0.045187193900346756,0.04518304765224457,0.04517889767885208,0.04517475143074989,0.04517060145735741,0.04516645893454552,0.04516231641173363,0.04515817016363144,0.04515403136610985,0.04514988884329796,0.04514574632048607,0.045141611248254776,0.045137472450733185,0.04513333737850189,0.0451292023062706,0.04512506723403931,0.04512093588709831,0.04511680454015732,0.045112673193216324,0.04510854557156563,0.045104414224624634,0.04510028660297394,0.04509616270661354,0.04509204253554344,0.045087914913892746,0.04508379474282265,0.04507967457175255,0.04507555440068245,0.04507143422961235,0.04506731405854225,0.04506319761276245,0.04505908116698265,0.04505496844649315,0.04505085200071335,0.045046743005514145,0.04504263028502464,0.04503851756453514,0.045034412294626236,0.04503030329942703,0.04502619802951813,0.045022089034318924,0.04501798748970032,0.04501388221979141,0.045009780675172806,0.0450056791305542,0.04500158131122589,0.044997479766607285,0.044993381947278976,0.04498928785324097,0.04498519003391266,0.04498109593987465,0.04497700557112694,0.04497291147708893,0.04496881738305092,0.044964730739593506,0.04496064409613609,0.04495655372738838,0.04495246708393097,0.044948384165763855,0.04494429752230644,0.04494021460413933,0.044936131685972214,0.0449320524930954,0.04492797330021858,0.04492389038205147,0.04491981491446495,0.04491573944687843,0.04491166025400162,0.0449075885117054,0.04490351304411888,0.04489944130182266,0.044895369559526443,0.04489130154252052,0.0448872335255146,0.04488316923379898,0.04487909749150276,0.04487503319978714,0.044870972633361816,0.044866904616355896,0.04486284404993057,0.04485878348350525,0.044854722917079926,0.0448506660759449,0.04484660550951958,0.04484254866838455,0.044838495552539825,0.0448344387114048,0.044830385595560074,0.044826336205005646,0.04482228308916092,0.04481823369860649,0.04481418430805206,0.044810134917497635,0.044806089252233505,0.044802043586969376,0.044797997921705246,0.044793955981731415,0.044789910316467285,0.04478587210178375,0.04478183016180992,0.04477779194712639,0.044773753732442856,0.04476971924304962,0.04476568102836609,0.044761646538972855,0.04475761204957962,0.044753581285476685,0.04474955052137375,0.04474551975727081,0.044741492718458176,0.04473746195435524,0.044733431190252304,0.044729411602020264,0.044725384563207626,0.04472136124968529],"x":[50.0,50.08996401439424,50.17992802878848,50.26989204318273,50.35985605757697,50.44982007197121,50.53978408636545,50.6297481007597,50.71971211515394,50.80967612954818,50.89964014394242,50.98960415833667,51.07956817273091,51.16953218712515,51.25949620151939,51.34946021591364,51.43942423030788,51.52938824470212,51.61935225909636,51.7093162734906,51.79928028788485,51.88924430227909,51.97920831667333,52.06917233106757,52.15913634546182,52.24910035985606,52.3390643742503,52.42902838864454,52.51899240303879,52.60895641743303,52.69892043182727,52.78888444622151,52.87884846061576,52.96881247501,53.05877648940424,53.14874050379848,53.238704518192726,53.32866853258697,53.41863254698121,53.50859656137545,53.59856057576969,53.68852459016394,53.77848860455818,53.86845261895242,53.95841663334666,54.048380647740906,54.13834466213515,54.22830867652939,54.31827269092363,54.408236705317876,54.498200719712116,54.58816473410636,54.6781287485006,54.768092762894845,54.858056777289086,54.94802079168333,55.03798480607757,55.12794882047181,55.217912834866056,55.307876849260296,55.39784086365454,55.48780487804878,55.577768892443025,55.667732906837266,55.757696921231506,55.84766093562575,55.937624950019995,56.027588964414235,56.117552978808476,56.20751699320272,56.297481007596964,56.387445021991205,56.477409036385446,56.567373050779686,56.657337065173934,56.747301079568174,56.837265093962415,56.927229108356656,57.017193122750896,57.107157137145144,57.197121151539385,57.287085165933625,57.377049180327866,57.467013194722114,57.556977209116354,57.646941223510595,57.736905237904836,57.82686925229908,57.916833266693324,58.006797281087564,58.096761295481805,58.18672530987605,58.27668932427029,58.366653338664534,58.456617353058775,58.546581367453015,58.63654538184726,58.726509396241504,58.816473410635744,58.906437425029985,58.99640143942423,59.08636545381847,59.176329468212714,59.266293482606955,59.3562574970012,59.44622151139544,59.53618552578968,59.626149540183924,59.71611355457817,59.80607756897241,59.89604158336665,59.986005597760894,60.07596961215514,60.16593362654938,60.25589764094362,60.34586165533786,60.435825669732104,60.52578968412635,60.61575369852059,60.70571771291483,60.79568172730907,60.88564574170332,60.97560975609756,61.0655737704918,61.15553778488604,61.24550179928029,61.33546581367453,61.42542982806877,61.51539384246301,61.60535785685726,61.6953218712515,61.78528588564574,61.87524990003998,61.96521391443422,62.05517792882847,62.14514194322271,62.23510595761695,62.32506997201119,62.41503398640544,62.50499800079968,62.59496201519392,62.68492602958816,62.77489004398241,62.86485405837665,62.95481807277089,63.04478208716513,63.13474610155938,63.22471011595362,63.31467413034786,63.4046381447421,63.49460215913635,63.58456617353059,63.67453018792483,63.76449420231907,63.85445821671331,63.94442223110756,64.03438624550179,64.12435025989605,64.21431427429029,64.30427828868453,64.39424230307877,64.48420631747301,64.57417033186725,64.66413434626149,64.75409836065573,64.84406237504999,64.93402638944423,65.02399040383847,65.11395441823271,65.20391843262695,65.29388244702119,65.38384646141543,65.47381047580967,65.56377449020391,65.65373850459817,65.74370251899241,65.83366653338665,65.92363054778089,66.01359456217513,66.10355857656937,66.19352259096361,66.28348660535785,66.3734506197521,66.46341463414635,66.55337864854059,66.64334266293483,66.73330667732907,66.82327069172331,66.91323470611755,67.00319872051179,67.09316273490603,67.18312674930029,67.27309076369453,67.36305477808877,67.45301879248301,67.54298280687725,67.63294682127149,67.72291083566573,67.81287485005997,67.90283886445422,67.99280287884847,68.0827668932427,68.17273090763695,68.26269492203119,68.35265893642543,68.44262295081967,68.53258696521391,68.62255097960815,68.7125149940024,68.80247900839665,68.89244302279089,68.98240703718513,69.07237105157937,69.16233506597361,69.25229908036785,69.34226309476209,69.43222710915634,69.52219112355058,69.61215513794482,69.70211915233907,69.7920831667333,69.88204718112755,69.97201119552179,70.06197520991603,70.15193922431028,70.24190323870452,70.33186725309876,70.421831267493,70.51179528188725,70.60175929628149,70.69172331067573,70.78168732506997,70.87165133946421,70.96161535385846,71.0515793682527,71.14154338264694,71.23150739704118,71.32147141143543,71.41143542582967,71.5013994402239,71.59136345461815,71.6813274690124,71.77129148340664,71.86125549780088,71.95121951219512,72.04118352658936,72.1311475409836,72.22111155537785,72.31107556977209,72.40103958416633,72.49100359856058,72.58096761295482,72.67093162734906,72.7608956417433,72.85085965613754,72.94082367053178,73.03078768492603,73.12075169932027,73.21071571371452,73.30067972810876,73.390643742503,73.48060775689724,73.57057177129148,73.66053578568572,73.75049980007996,73.8404638144742,73.93042782886845,74.0203918432627,74.11035585765694,74.20031987205118,74.29028388644542,74.38024790083966,74.4702119152339,74.56017592962814,74.65013994402238,74.74010395841664,74.83006797281088,74.92003198720512,75.00999600159936,75.0999600159936,75.18992403038784,75.27988804478208,75.36985205917632,75.45981607357056,75.54978008796482,75.63974410235906,75.7297081167533,75.81967213114754,75.90963614554178,75.99960015993602,76.08956417433026,76.1795281887245,76.26949220311876,76.359456217513,76.44942023190724,76.53938424630148,76.62934826069572,76.71931227508996,76.8092762894842,76.89924030387844,76.9892043182727,77.07916833266694,77.16913234706118,77.25909636145542,77.34906037584966,77.4390243902439,77.52898840463814,77.61895241903238,77.70891643342662,77.79888044782088,77.88884446221512,77.97880847660936,78.0687724910036,78.15873650539784,78.24870051979208,78.33866453418632,78.42862854858056,78.51859256297482,78.60855657736906,78.6985205917633,78.78848460615754,78.87844862055178,78.96841263494602,79.05837664934026,79.1483406637345,79.23830467812874,79.328268692523,79.41823270691724,79.50819672131148,79.59816073570572,79.68812475009996,79.7780887644942,79.86805277888844,79.95801679328268,80.04798080767694,80.13794482207118,80.22790883646542,80.31787285085966,80.4078368652539,80.49780087964814,80.58776489404238,80.67772890843662,80.76769292283086,80.85765693722512,80.94762095161936,81.0375849660136,81.12754898040784,81.21751299480208,81.30747700919632,81.39744102359056,81.4874050379848,81.57736905237905,81.6673330667733,81.75729708116754,81.84726109556178,81.93722510995602,82.02718912435026,82.1171531387445,82.20711715313874,82.29708116753298,82.38704518192723,82.47700919632148,82.56697321071572,82.65693722510996,82.7469012395042,82.83686525389844,82.92682926829268,83.01679328268692,83.10675729708117,83.19672131147541,83.28668532586966,83.3766493402639,83.46661335465814,83.55657736905238,83.64654138344662,83.73650539784086,83.82646941223511,83.91643342662935,84.0063974410236,84.09636145541783,84.18632546981208,84.27628948420632,84.36625349860056,84.4562175129948,84.54618152738904,84.63614554178329,84.72610955617753,84.81607357057177,84.90603758496601,84.99600159936026,85.0859656137545,85.17592962814874,85.26589364254298,85.35585765693723,85.44582167133147,85.53578568572571,85.62574970011995,85.7157137145142,85.80567772890844,85.89564174330268,85.98560575769692,86.07556977209116,86.16553378648541,86.25549780087965,86.3454618152739,86.43542582966813,86.52538984406237,86.61535385845661,86.70531787285086,86.7952818872451,86.88524590163935,86.97520991603359,87.06517393042783,87.15513794482207,87.24510195921631,87.33506597361055,87.4250299880048,87.51499400239904,87.60495801679328,87.69492203118753,87.78488604558177,87.87485005997601,87.96481407437025,88.0547780887645,88.14474210315873,88.23470611755297,88.32467013194722,88.41463414634147,88.50459816073571,88.59456217512995,88.68452618952419,88.77449020391843,88.86445421831267,88.95441823270691,89.04438224710115,89.1343462614954,89.22431027588965,89.31427429028389,89.40423830467813,89.49420231907237,89.58416633346661,89.67413034786085,89.7640943622551,89.85405837664933,89.94402239104359,90.03398640543783,90.12395041983207,90.21391443422631,90.30387844862055,90.39384246301479,90.48380647740903,90.57377049180327,90.66373450619751,90.75369852059177,90.84366253498601,90.93362654938025,91.02359056377449,91.11355457816873,91.20351859256297,91.29348260695721,91.38344662135145,91.47341063574571,91.56337465013995,91.65333866453419,91.74330267892843,91.83326669332267,91.92323070771691,92.01319472211115,92.10315873650539,92.19312275089965,92.28308676529389,92.37305077968813,92.46301479408237,92.55297880847661,92.64294282287085,92.73290683726509,92.82287085165933,92.91283486605357,93.00279888044783,93.09276289484207,93.18272690923631,93.27269092363055,93.36265493802479,93.45261895241903,93.54258296681327,93.63254698120751,93.72251099560177,93.812475009996,93.90243902439025,93.99240303878449,94.08236705317873,94.17233106757297,94.26229508196721,94.35225909636145,94.44222311075569,94.53218712514995,94.62215113954419,94.71211515393843,94.80207916833267,94.89204318272691,94.98200719712115,95.07197121151539,95.16193522590963,95.25189924030389,95.34186325469813,95.43182726909237,95.5217912834866,95.61175529788085,95.70171931227509,95.79168332666933,95.88164734106357,95.97161135545781,96.06157536985206,96.1515393842463,96.24150339864055,96.33146741303479,96.42143142742903,96.51139544182327,96.60135945621751,96.69132347061175,96.781287485006,96.87125149940024,96.96121551379449,97.05117952818873,97.14114354258297,97.23110755697721,97.32107157137145,97.41103558576569,97.50099960015993,97.59096361455418,97.68092762894842,97.77089164334267,97.8608556577369,97.95081967213115,98.04078368652539,98.13074770091963,98.22071171531387,98.31067572970812,98.40063974410236,98.4906037584966,98.58056777289084,98.67053178728509,98.76049580167933,98.85045981607357,98.94042383046781,99.03038784486206,99.1203518592563,99.21031587365054,99.30027988804478,99.39024390243902,99.48020791683327,99.5701719312275,99.66013594562175,99.75009996001599,99.84006397441024,99.93002798880448,100.01999200319872,100.10995601759296,100.1999200319872,100.28988404638145,100.37984806077569,100.46981207516993,100.55977608956418,100.64974010395842,100.73970411835266,100.8296681327469,100.91963214714114,101.00959616153538,101.09956017592962,101.18952419032387,101.2794882047181,101.36945221911236,101.4594162335066,101.54938024790084,101.63934426229508,101.72930827668932,101.81927229108356,101.9092363054778,101.99920031987205,102.0891643342663,102.17912834866054,102.26909236305478,102.35905637744902,102.44902039184326,102.5389844062375,102.62894842063174,102.71891243502598,102.80887644942023,102.89884046381448,102.98880447820872,103.07876849260296,103.1687325069972,103.25869652139144,103.34866053578568,103.43862455017992,103.52858856457416,103.61855257896842,103.70851659336266,103.7984806077569,103.88844462215114,103.97840863654538,104.06837265093962,104.15833666533386,104.2483006797281,104.33826469412234,104.4282287085166,104.51819272291084,104.60815673730508,104.69812075169932,104.78808476609356,104.8780487804878,104.96801279488204,105.05797680927628,105.14794082367054,105.23790483806478,105.32786885245902,105.41783286685326,105.5077968812475,105.59776089564174,105.68772491003598,105.77768892443022,105.86765293882446,105.95761695321872,106.04758096761296,106.1375449820072,106.22750899640144,106.31747301079568,106.40743702518992,106.49740103958416,106.5873650539784,106.67732906837266,106.7672930827669,106.85725709716114,106.94722111155538,107.03718512594962,107.12714914034386,107.2171131547381,107.30707716913234,107.3970411835266,107.48700519792084,107.57696921231508,107.66693322670932,107.75689724110356,107.8468612554978,107.93682526989204,108.02678928428628,108.11675329868052,108.20671731307478,108.29668132746902,108.38664534186326,108.4766093562575,108.56657337065174,108.65653738504598,108.74650139944022,108.83646541383446,108.92642942822872,109.01639344262296,109.1063574570172,109.19632147141144,109.28628548580568,109.37624950019992,109.46621351459416,109.5561775289884,109.64614154338264,109.7361055577769,109.82606957217114,109.91603358656538,110.00599760095962,110.09596161535386,110.1859256297481,110.27588964414234,110.36585365853658,110.45581767293083,110.54578168732507,110.63574570171932,110.72570971611356,110.8156737305078,110.90563774490204,110.99560175929628,111.08556577369052,111.17552978808476,111.26549380247901,111.35545781687325,111.4454218312675,111.53538584566174,111.62534986005598,111.71531387445022,111.80527788884446,111.8952419032387,111.98520591763295,112.0751699320272,112.16513394642143,112.25509796081568,112.34506197520992,112.43502598960416,112.5249900039984,112.61495401839264,112.70491803278688,112.79488204718113,112.88484606157537,112.97481007596961,113.06477409036385,113.1547381047581,113.24470211915234,113.33466613354658,113.42463014794082,113.51459416233507,113.60455817672931,113.69452219112355,113.7844862055178,113.87445021991203,113.96441423430628,114.05437824870052,114.14434226309476,114.23430627748901,114.32427029188325,114.41423430627749,114.50419832067173,114.59416233506597,114.68412634946021,114.77409036385446,114.8640543782487,114.95401839264294,115.04398240703719,115.13394642143143,115.22391043582567,115.31387445021991,115.40383846461415,115.4938024790084,115.58376649340263,115.67373050779688,115.76369452219113,115.85365853658537,115.94362255097961,116.03358656537385,116.1235505797681,116.21351459416233,116.30347860855657,116.39344262295081,116.48340663734506,116.57337065173931,116.66333466613355,116.75329868052779,116.84326269492203,116.93322670931627,117.02319072371051,117.11315473810475,117.203118752499,117.29308276689325,117.38304678128749,117.47301079568173,117.56297481007597,117.65293882447021,117.74290283886445,117.8328668532587,117.92283086765293,118.01279488204717,118.10275889644143,118.19272291083567,118.28268692522991,118.37265093962415,118.46261495401839,118.55257896841263,118.64254298280687,118.73250699720111,118.82247101159537,118.91243502598961,119.00239904038385,119.09236305477809,119.18232706917233,119.27229108356657,119.36225509796081,119.45221911235505,119.5421831267493,119.63214714114355,119.72211115553779,119.81207516993203,119.90203918432627,119.99200319872051,120.08196721311475,120.17193122750899,120.26189524190323,120.35185925629749,120.44182327069173,120.53178728508597,120.62175129948021,120.71171531387445,120.80167932826869,120.89164334266293,120.98160735705717,121.07157137145141,121.16153538584567,121.25149940023991,121.34146341463415,121.43142742902839,121.52139144342263,121.61135545781687,121.70131947221111,121.79128348660535,121.8812475009996,121.97121151539385,122.06117552978809,122.15113954418233,122.24110355857657,122.33106757297081,122.42103158736505,122.51099560175929,122.60095961615355,122.69092363054779,122.78088764494203,122.87085165933627,122.96081567373051,123.05077968812475,123.14074370251899,123.23070771691323,123.32067173130747,123.41063574570173,123.50059976009597,123.5905637744902,123.68052778888445,123.77049180327869,123.86045581767293,123.95041983206717,124.04038384646141,124.13034786085566,124.2203118752499,124.31027588964415,124.40023990403839,124.49020391843263,124.58016793282687,124.67013194722111,124.76009596161535,124.85005997600959,124.94002399040384,125.02998800479808,125.11995201919233,125.20991603358657,125.2998800479808,125.38984406237505,125.47980807676929,125.56977209116353,125.65973610555778,125.74970011995202,125.83966413434626,125.9296281487405,126.01959216313475,126.10955617752899,126.19952019192323,126.28948420631747,126.37944822071171,126.46941223510596,126.5593762495002,126.64934026389444,126.73930427828869,126.82926829268293,126.91923230707717,127.0091963214714,127.09916033586565,127.1891243502599,127.27908836465414,127.36905237904838,127.45901639344262,127.54898040783686,127.6389444222311,127.72890843662535,127.81887245101959,127.90883646541383,127.99880047980808,128.0887644942023,128.17872850859655,128.2686925229908,128.35865653738506,128.4486205517793,128.53858456617354,128.62854858056778,128.71851259496202,128.80847660935626,128.8984406237505,128.98840463814474,129.07836865253898,129.16833266693322,129.25829668132747,129.3482606957217,129.43822471011595,129.5281887245102,129.61815273890443,129.70811675329867,129.7980807676929,129.88804478208718,129.97800879648142,130.06797281087566,130.1579368252699,130.24790083966414,130.33786485405838,130.42782886845262,130.51779288284686,130.6077568972411,130.69772091163534,130.78768492602958,130.87764894042382,130.96761295481807,131.0575769692123,131.14754098360655,131.2375049980008,131.32746901239503,131.4174330267893,131.50739704118354,131.59736105557778,131.68732506997202,131.77728908436626,131.8672530987605,131.95721711315474,132.04718112754898,132.13714514194322,132.22710915633746,132.3170731707317,132.40703718512594,132.49700119952018,132.58696521391443,132.67692922830867,132.7668932427029,132.85685725709718,132.94682127149142,133.03678528588566,133.1267493002799,133.21671331467414,133.30667732906838,133.39664134346262,133.48660535785686,133.5765693722511,133.66653338664534,133.75649740103958,133.84646141543382,133.93642542982806,134.0263894442223,134.11635345861654,134.20631747301078,134.29628148740503,134.3862455017993,134.47620951619353,134.56617353058778,134.65613754498202,134.74610155937626,134.8360655737705,134.92602958816474,135.01599360255898,135.10595761695322,135.19592163134746,135.2858856457417,135.37584966013594,135.46581367453018,135.55577768892442,135.64574170331866,135.7357057177129,135.82566973210714,135.9156337465014,136.00559776089565,136.0955617752899,136.18552578968414,136.27548980407838,136.36545381847262,136.45541783286686,136.5453818472611,136.63534586165534,136.72530987604958,136.81527389044382,136.90523790483806,136.9952019192323,137.08516593362654,137.17512994802078,137.26509396241502,137.35505797680926,137.44502199120353,137.53498600559777,137.624950019992,137.71491403438625,137.8048780487805,137.89484206317474,137.98480607756898,138.07477009196322,138.16473410635746,138.2546981207517,138.34466213514594,138.43462614954018,138.52459016393442,138.61455417832866,138.7045181927229,138.79448220711714,138.88444622151138,138.97441023590565,139.0643742502999,139.15433826469413,139.24430227908837,139.3342662934826,139.42423030787685,139.5141943222711,139.60415833666534,139.69412235105958,139.78408636545382,139.87405037984806,139.9640143942423,140.05397840863654,140.14394242303078,140.23390643742502,140.32387045181926,140.4138344662135,140.50379848060777,140.593762495002,140.68372650939625,140.7736905237905,140.86365453818473,140.95361855257897,141.0435825669732,141.13354658136745,141.2235105957617,141.31347461015594,141.40343862455018,141.49340263894442,141.58336665333866,141.6733306677329,141.76329468212714,141.85325869652138,141.94322271091562,142.0331867253099,142.12315073970413,142.21311475409837,142.3030787684926,142.39304278288685,142.4830067972811,142.57297081167533,142.66293482606957,142.7528988404638,142.84286285485805,142.9328268692523,143.02279088364654,143.11275489804078,143.20271891243502,143.29268292682926,143.3826469412235,143.47261095561774,143.562574970012,143.65253898440625,143.7425029988005,143.83246701319473,143.92243102758897,144.0123950419832,144.10235905637745,144.1923230707717,144.28228708516593,144.37225109956017,144.46221511395441,144.55217912834866,144.6421431427429,144.73210715713714,144.82207117153138,144.91203518592562,145.00199920031986,145.09196321471413,145.18192722910837,145.2718912435026,145.36185525789685,145.4518192722911,145.54178328668533,145.63174730107957,145.7217113154738,145.81167532986805,145.9016393442623,145.99160335865653,146.08156737305077,146.17153138744501,146.26149540183926,146.3514594162335,146.44142343062774,146.53138744502198,146.62135145941625,146.7113154738105,146.80127948820473,146.89124350259897,146.9812075169932,147.07117153138745,147.1611355457817,147.25109956017593,147.34106357457017,147.4310275889644,147.52099160335865,147.6109556177529,147.70091963214713,147.79088364654137,147.88084766093561,147.97081167532986,148.06077568972412,148.15073970411837,148.2407037185126,148.33066773290685,148.4206317473011,148.51059576169533,148.60055977608957,148.6905237904838,148.78048780487805,148.8704518192723,148.96041583366653,149.05037984806077,149.140343862455,149.23030787684925,149.3202718912435,149.41023590563773,149.50019992003197,149.59016393442624,149.68012794882048,149.77009196321472,149.86005597760897,149.9500199920032,150.03998400639745,150.1299480207917,150.21991203518593,150.30987604958017,150.3998400639744,150.48980407836865,150.5797680927629,150.66973210715713,150.75969612155137,150.8496601359456,150.93962415033985,151.0295881647341,151.11955217912836,151.2095161935226,151.29948020791684,151.38944422231108,151.47940823670532,151.56937225109957,151.6593362654938,151.74930027988805,151.8392642942823,151.92922830867653,152.01919232307077,152.109156337465,152.19912035185925,152.2890843662535,152.37904838064773,152.46901239504197,152.5589764094362,152.64894042383048,152.73890443822472,152.82886845261896,152.9188324670132,153.00879648140744,153.09876049580168,153.18872451019593,153.27868852459017,153.3686525389844,153.45861655337865,153.5485805677729,153.63854458216713,153.72850859656137,153.8184726109556,153.90843662534985,153.9984006397441,154.08836465413833,154.1783286685326,154.26829268292684,154.35825669732108,154.44822071171532,154.53818472610956,154.6281487405038,154.71811275489804,154.80807676929228,154.89804078368653,154.98800479808077,155.077968812475,155.16793282686925,155.2578968412635,155.34786085565773,155.43782487005197,155.5277888844462,155.61775289884045,155.70771691323472,155.79768092762896,155.8876449420232,155.97760895641744,156.06757297081168,156.15753698520592,156.24750099960016,156.3374650139944,156.42742902838864,156.51739304278289,156.60735705717713,156.69732107157137,156.7872850859656,156.87724910035985,156.9672131147541,157.05717712914833,157.14714114354257,157.23710515793684,157.32706917233108,157.41703318672532,157.50699720111956,157.5969612155138,157.68692522990804,157.77688924430228,157.86685325869652,157.95681727309076,158.046781287485,158.13674530187924,158.22670931627349,158.31667333066773,158.40663734506197,158.4966013594562,158.58656537385045,158.6765293882447,158.76649340263896,158.8564574170332,158.94642143142744,159.03638544582168,159.12634946021592,159.21631347461016,159.3062774890044,159.39624150339864,159.48620551779288,159.57616953218712,159.66613354658136,159.7560975609756,159.84606157536984,159.93602558976409,160.02598960415833,160.11595361855257,160.2059176329468,160.29588164734108,160.38584566173532,160.47580967612956,160.5657736905238,160.65573770491804,160.74570171931228,160.83566573370652,160.92562974810076,161.015593762495,161.10555777688924,161.19552179128348,161.28548580567772,161.37544982007196,161.4654138344662,161.55537784886045,161.64534186325469,161.73530587764893,161.8252698920432,161.91523390643744,162.00519792083168,162.09516193522592,162.18512594962016,162.2750899640144,162.36505397840864,162.45501799280288,162.54498200719712,162.63494602159136,162.7249100359856,162.81487405037984,162.90483806477408,162.99480207916832,163.08476609356256,163.1747301079568,163.26469412235107,163.35465813674531,163.44462215113955,163.5345861655338,163.62455017992804,163.71451419432228,163.80447820871652,163.89444222311076,163.984406237505,164.07437025189924,164.16433426629348,164.25429828068772,164.34426229508196,164.4342263094762,164.52419032387044,164.61415433826468,164.70411835265892,164.7940823670532,164.88404638144743,164.97401039584167,165.06397441023591,165.15393842463016,165.2439024390244,165.33386645341864,165.42383046781288,165.51379448220712,165.60375849660136,165.6937225109956,165.78368652538984,165.87365053978408,165.96361455417832,166.05357856857256,166.1435425829668,166.23350659736104,166.3234706117553,166.41343462614955,166.5033986405438,166.59336265493803,166.68332666933227,166.77329068372651,166.86325469812076,166.953218712515,167.04318272690924,167.13314674130348,167.22311075569772,167.31307477009196,167.4030387844862,167.49300279888044,167.58296681327468,167.67293082766892,167.76289484206316,167.85285885645743,167.94282287085167,168.0327868852459,168.12275089964015,168.2127149140344,168.30267892842863,168.39264294282287,168.48260695721711,168.57257097161136,168.6625349860056,168.75249900039984,168.84246301479408,168.93242702918832,169.02239104358256,169.1123550579768,169.20231907237104,169.29228308676528,169.38224710115955,169.4722111155538,169.56217512994803,169.65213914434227,169.7421031587365,169.83206717313075,169.922031187525,170.01199520191923,170.10195921631347,170.19192323070772,170.28188724510196,170.3718512594962,170.46181527389044,170.55177928828468,170.64174330267892,170.73170731707316,170.8216713314674,170.91163534586167,171.0015993602559,171.09156337465015,171.1815273890444,171.27149140343863,171.36145541783287,171.4514194322271,171.54138344662135,171.6313474610156,171.72131147540983,171.81127548980407,171.90123950419832,171.99120351859256,172.0811675329868,172.17113154738104,172.26109556177528,172.35105957616952,172.4410235905638,172.53098760495803,172.62095161935227,172.7109156337465,172.80087964814075,172.890843662535,172.98080767692923,173.07077169132347,173.1607357057177,173.25069972011195,173.3406637345062,173.43062774890043,173.52059176329468,173.61055577768892,173.70051979208316,173.7904838064774,173.88044782087164,173.9704118352659,174.06037584966015,174.1503398640544,174.24030387844863,174.33026789284287,174.4202319072371,174.51019592163135,174.6001599360256,174.69012395041983,174.78008796481407,174.8700519792083,174.96001599360255,175.0499800079968,175.13994402239103,175.22990803678528,175.31987205117952,175.40983606557376,175.49980007996803,175.58976409436227,175.6797281087565,175.76969212315075,175.859656137545,175.94962015193923,176.03958416633347,176.1295481807277,176.21951219512195,176.3094762095162,176.39944022391043,176.48940423830467,176.5793682526989,176.66933226709315,176.7592962814874,176.84926029588163,176.93922431027588,177.02918832467014,177.11915233906439,177.20911635345863,177.29908036785287,177.3890443822471,177.47900839664135,177.5689724110356,177.65893642542983,177.74890043982407,177.8388644542183,177.92882846861255,178.0187924830068,178.10875649740103,178.19872051179527,178.2886845261895,178.37864854058375,178.46861255497802,178.55857656937226,178.6485405837665,178.73850459816074,178.82846861255499,178.91843262694923,179.00839664134347,179.0983606557377,179.18832467013195,179.2782886845262,179.36825269892043,179.45821671331467,179.5481807277089,179.63814474210315,179.7281087564974,179.81807277089163,179.90803678528587,179.99800079968014,180.08796481407438,180.17792882846862,180.26789284286286,180.3578568572571,180.44782087165134,180.53778488604559,180.62774890043983,180.71771291483407,180.8076769292283,180.89764094362255,180.9876049580168,181.07756897241103,181.16753298680527,181.2574970011995,181.34746101559375,181.437425029988,181.52738904438226,181.6173530587765,181.70731707317074,181.79728108756498,181.88724510195922,181.97720911635346,182.0671731307477,182.15713714514195,182.2471011595362,182.33706517393043,182.42702918832467,182.5169932027189,182.60695721711315,182.6969212315074,182.78688524590163,182.87684926029587,182.9668132746901,183.05677728908438,183.14674130347862,183.23670531787286,183.3266693322671,183.41663334666134,183.50659736105558,183.59656137544982,183.68652538984406,183.7764894042383,183.86645341863255,183.9564174330268,184.04638144742103,184.13634546181527,184.2263094762095,184.31627349060375,184.406237504998,184.49620151939223,184.5861655337865,184.67612954818074,184.76609356257498,184.85605757696922,184.94602159136346,185.0359856057577,185.12594962015194,185.21591363454618,185.30587764894042,185.39584166333466,185.4858056777289,185.57576969212315,185.6657337065174,185.75569772091163,185.84566173530587,185.9356257497001,186.02558976409435,186.11555377848862,186.20551779288286,186.2954818072771,186.38544582167134,186.47540983606558,186.56537385045982,186.65533786485406,186.7453018792483,186.83526589364254,186.92522990803678,187.01519392243102,187.10515793682526,187.1951219512195,187.28508596561375,187.375049980008,187.46501399440223,187.55497800879647,187.64494202319074,187.73490603758498,187.82487005197922,187.91483406637346,188.0047980807677,188.09476209516194,188.18472610955618,188.27469012395042,188.36465413834466,188.4546181527389,188.54458216713314,188.63454618152738,188.72451019592162,188.81447421031586,188.9044382247101,188.99440223910435,189.0843662534986,189.17433026789286,189.2642942822871,189.35425829668134,189.44422231107558,189.53418632546982,189.62415033986406,189.7141143542583,189.80407836865254,189.89404238304678,189.98400639744102,190.07397041183526,190.1639344262295,190.25389844062374,190.34386245501798,190.43382646941222,190.52379048380647,190.6137544982007,190.70371851259497,190.79368252698922,190.88364654138346,190.9736105557777,191.06357457017194,191.15353858456618,191.24350259896042,191.33346661335466,191.4234306277489,191.51339464214314,191.60335865653738,191.69332267093162,191.78328668532586,191.8732506997201,191.96321471411434,192.05317872850858,192.14314274290282,192.2331067572971,192.32307077169133,192.41303478608557,192.50299880047982,192.59296281487406,192.6829268292683,192.77289084366254,192.86285485805678,192.95281887245102,193.04278288684526,193.1327469012395,193.22271091563374,193.31267493002798,193.40263894442222,193.49260295881646,193.5825669732107,193.67253098760497,193.7624950019992,193.85245901639345,193.9424230307877,194.03238704518193,194.12235105957618,194.21231507397042,194.30227908836466,194.3922431027589,194.48220711715314,194.57217113154738,194.66213514594162,194.75209916033586,194.8420631747301,194.93202718912434,195.02199120351858,195.11195521791282,195.2019192323071,195.29188324670133,195.38184726109557,195.4718112754898,195.56177528988405,195.6517393042783,195.74170331867253,195.83166733306678,195.92163134746102,196.01159536185526,196.1015593762495,196.19152339064374,196.28148740503798,196.37145141943222,196.46141543382646,196.5513794482207,196.64134346261494,196.7313074770092,196.82127149140345,196.9112355057977,197.00119952019193,197.09116353458617,197.1811275489804,197.27109156337465,197.3610555777689,197.45101959216314,197.54098360655738,197.63094762095162,197.72091163534586,197.8108756497401,197.90083966413434,197.99080367852858,198.08076769292282,198.17073170731706,198.26069572171133,198.35065973610557,198.4406237504998,198.53058776489405,198.6205517792883,198.71051579368253,198.80047980807677,198.890443822471,198.98040783686525,199.0703718512595,199.16033586565374,199.25029988004798,199.34026389444222,199.43022790883646,199.5201919232307,199.61015593762494,199.70011995201918,199.79008396641345,199.8800479808077,199.97001199520193,200.05997600959617,200.1499400239904,200.23990403838465,200.3298680527789,200.41983206717313,200.50979608156737,200.5997600959616,200.68972411035585,200.7796881247501,200.86965213914434,200.95961615353858,201.04958016793282,201.13954418232706,201.2295081967213,201.31947221111557,201.4094362255098,201.49940023990405,201.5893642542983,201.67932826869253,201.76929228308677,201.859256297481,201.94922031187525,202.0391843262695,202.12914834066373,202.21911235505797,202.3090763694522,202.39904038384645,202.4890043982407,202.57896841263494,202.66893242702918,202.75889644142342,202.8488604558177,202.93882447021193,203.02878848460617,203.1187524990004,203.20871651339465,203.2986805277889,203.38864454218313,203.47860855657737,203.5685725709716,203.65853658536585,203.7485005997601,203.83846461415433,203.92842862854857,204.0183926429428,204.10835665733705,204.1983206717313,204.28828468612554,204.3782487005198,204.46821271491405,204.5581767293083,204.64814074370253,204.73810475809677,204.828068772491,204.91803278688525,205.0079968012795,205.09796081567373,205.18792483006797,205.2778888444622,205.36785285885645,205.4578168732507,205.54778088764493,205.63774490203917,205.72770891643341,205.81767293082765,205.90763694522192,205.99760095961616,206.0875649740104,206.17752898840465,206.2674930027989,206.35745701719313,206.44742103158737,206.5373850459816,206.62734906037585,206.7173130747701,206.80727708916433,206.89724110355857,206.9872051179528,207.07716913234705,207.1671331467413,207.25709716113553,207.34706117552977,207.43702518992404,207.52698920431828,207.61695321871252,207.70691723310676,207.796881247501,207.88684526189525,207.9768092762895,208.06677329068373,208.15673730507797,208.2467013194722,208.33666533386645,208.4266293482607,208.51659336265493,208.60655737704917,208.6965213914434,208.78648540583765,208.87644942023192,208.96641343462616,209.0563774490204,209.14634146341464,209.23630547780888,209.32626949220312,209.41623350659737,209.5061975209916,209.59616153538585,209.6861255497801,209.77608956417433,209.86605357856857,209.9560175929628,210.04598160735705,210.1359456217513,210.22590963614553,210.31587365053977,210.40583766493404,210.49580167932828,210.58576569372252,210.67572970811676,210.765693722511,210.85565773690524,210.94562175129948,211.03558576569372,211.12554978008797,211.2155137944822,211.30547780887645,211.3954418232707,211.48540583766493,211.57536985205917,211.6653338664534,211.75529788084765,211.8452618952419,211.93522590963616,212.0251899240304,212.11515393842464,212.20511795281888,212.29508196721312,212.38504598160736,212.4750099960016,212.56497401039584,212.65493802479008,212.74490203918432,212.83486605357857,212.9248300679728,213.01479408236705,213.1047580967613,213.19472211115553,213.28468612554977,213.374650139944,213.46461415433828,213.55457816873252,213.64454218312676,213.734506197521,213.82447021191524,213.91443422630948,214.00439824070372,214.09436225509796,214.1843262694922,214.27429028388644,214.36425429828068,214.45421831267493,214.54418232706917,214.6341463414634,214.72411035585765,214.8140743702519,214.90403838464613,214.9940023990404,215.08396641343464,215.17393042782888,215.26389444222312,215.35385845661736,215.4438224710116,215.53378648540584,215.62375049980008,215.71371451419432,215.80367852858856,215.8936425429828,215.98360655737704,216.07357057177128,216.16353458616553,216.25349860055977,216.343462614954,216.43342662934825,216.52339064374252,216.61335465813676,216.703318672531,216.79328268692524,216.88324670131948,216.97321071571372,217.06317473010796,217.1531387445022,217.24310275889644,217.33306677329068,217.42303078768492,217.51299480207916,217.6029588164734,217.69292283086764,217.78288684526188,217.87285085965613,217.96281487405037,218.05277888844464,218.14274290283888,218.23270691723312,218.32267093162736,218.4126349460216,218.50259896041584,218.59256297481008,218.68252698920432,218.77249100359856,218.8624550179928,218.95241903238704,219.04238304678128,219.13234706117552,219.22231107556976,219.312275089964,219.40223910435824,219.49220311875249,219.58216713314675,219.672131147541,219.76209516193524,219.85205917632948,219.94202319072372,220.03198720511796,220.1219512195122,220.21191523390644,220.30187924830068,220.39184326269492,220.48180727708916,220.5717712914834,220.66173530587764,220.75169932027188,220.84166333466612,220.93162734906036,221.0215913634546,221.11155537784887,221.2015193922431,221.29148340663735,221.3814474210316,221.47141143542584,221.56137544982008,221.65133946421432,221.74130347860856,221.8312674930028,221.92123150739704,222.01119552179128,222.10115953618552,222.19112355057976,222.281087564974,222.37105157936824,222.46101559376248,222.55097960815675,222.640943622551,222.73090763694523,222.82087165133947,222.9108356657337,223.00079968012795,223.0907636945222,223.18072770891644,223.27069172331068,223.36065573770492,223.45061975209916,223.5405837664934,223.63054778088764,223.72051179528188,223.81047580967612,223.90043982407036,223.9904038384646,224.08036785285887,224.1703318672531,224.26029588164735,224.3502598960416,224.44022391043583,224.53018792483007,224.62015193922431,224.71011595361855,224.8000799680128,224.89004398240704,224.98000799680128,225.06997201119552,225.15993602558976,225.249900039984,225.33986405437824,225.42982806877248,225.51979208316672,225.609756097561,225.69972011195523,225.78968412634947,225.8796481407437,225.96961215513795,226.0595761695322,226.14954018392643,226.23950419832067,226.32946821271491,226.41943222710916,226.5093962415034,226.59936025589764,226.68932427029188,226.77928828468612,226.86925229908036,226.9592163134746,227.04918032786884,227.1391443422631,227.22910835665735,227.3190723710516,227.40903638544583,227.49900039984007,227.5889644142343,227.67892842862855,227.7688924430228,227.85885645741703,227.94882047181127,228.03878448620551,228.12874850059976,228.218712514994,228.30867652938824,228.39864054378248,228.48860455817672,228.57856857257096,228.66853258696523,228.75849660135947,228.8484606157537,228.93842463014795,229.0283886445422,229.11835265893643,229.20831667333067,229.2982806877249,229.38824470211915,229.4782087165134,229.56817273090763,229.65813674530187,229.74810075969611,229.83806477409036,229.9280287884846,230.01799280287884,230.10795681727308,230.19792083166735,230.2878848460616,230.37784886045583,230.46781287485007,230.5577768892443,230.64774090363855,230.7377049180328,230.82766893242703,230.91763294682127,231.0075969612155,231.09756097560975,231.187524990004,231.27748900439823,231.36745301879247,231.45741703318672,231.54738104758096,231.6373450619752,231.72730907636947,231.8172730907637,231.90723710515795,231.9972011195522,232.08716513394643,232.17712914834067,232.2670931627349,232.35705717712915,232.4470211915234,232.53698520591763,232.62694922031187,232.7169132347061,232.80687724910035,232.8968412634946,232.98680527788883,233.07676929228307,233.16673330667732,233.25669732107158,233.34666133546583,233.43662534986007,233.5265893642543,233.61655337864855,233.7065173930428,233.79648140743703,233.88644542183127,233.9764094362255,234.06637345061975,234.156337465014,234.24630147940823,234.33626549380247,234.4262295081967,234.51619352259095,234.6061575369852,234.69612155137943,234.7860855657737,234.87604958016794,234.96601359456218,235.05597760895643,235.14594162335067,235.2359056377449,235.32586965213915,235.4158336665334,235.50579768092763,235.59576169532187,235.6857257097161,235.77568972411035,235.8656537385046,235.95561775289883,236.04558176729307,236.1355457816873,236.22550979608155,236.31547381047582,236.40543782487006,236.4954018392643,236.58536585365854,236.67532986805278,236.76529388244703,236.85525789684127,236.9452219112355,237.03518592562975,237.125149940024,237.21511395441823,237.30507796881247,237.3950419832067,237.48500599760095,237.5749700119952,237.66493402638943,237.7548980407837,237.84486205517794,237.93482606957218,238.02479008396642,238.11475409836066,238.2047181127549,238.29468212714914,238.38464614154339,238.47461015593763,238.56457417033187,238.6545381847261,238.74450219912035,238.8344662135146,238.92443022790883,239.01439424230307,239.1043582566973,239.19432227109155,239.28428628548582,239.37425029988006,239.4642143142743,239.55417832866854,239.64414234306278,239.73410635745702,239.82407037185126,239.9140343862455,240.00399840063974,240.09396241503399,240.18392642942823,240.27389044382247,240.3638544582167,240.45381847261095,240.5437824870052,240.63374650139943,240.72371051579367,240.81367453018794,240.90363854458218,240.99360255897642,241.08356657337066,241.1735305877649,241.26349460215914,241.35345861655338,241.44342263094762,241.53338664534186,241.6233506597361,241.71331467413034,241.80327868852459,241.89324270291883,241.98320671731307,242.0731707317073,242.16313474610155,242.2530987604958,242.34306277489006,242.4330267892843,242.52299080367854,242.61295481807278,242.70291883246702,242.79288284686126,242.8828468612555,242.97281087564974,243.06277489004398,243.15273890443822,243.24270291883246,243.3326669332267,243.42263094762095,243.51259496201519,243.60255897640943,243.69252299080367,243.7824870051979,243.87245101959218,243.96241503398642,244.05237904838066,244.1423430627749,244.23230707716914,244.32227109156338,244.41223510595762,244.50219912035186,244.5921631347461,244.68212714914034,244.77209116353458,244.86205517792882,244.95201919232306,245.0419832067173,245.13194722111155,245.2219112355058,245.31187524990003,245.4018392642943,245.49180327868854,245.58176729308278,245.67173130747702,245.76169532187126,245.8516593362655,245.94162335065974,246.03158736505398,246.12155137944822,246.21151539384246,246.3014794082367,246.39144342263094,246.48140743702518,246.57137145141942,246.66133546581366,246.7512994802079,246.84126349460215,246.93122750899641,247.02119152339066,247.1111555377849,247.20111955217914,247.29108356657338,247.38104758096762,247.47101159536186,247.5609756097561,247.65093962415034,247.74090363854458,247.83086765293882,247.92083166733306,248.0107956817273,248.10075969612154,248.19072371051578,248.28068772491002,248.37065173930426,248.46061575369853,248.55057976809277,248.64054378248701,248.73050779688126,248.8204718112755,248.91043582566974,249.00039984006398,249.09036385445822,249.18032786885246,249.2702918832467,249.36025589764094,249.45021991203518,249.54018392642942,249.63014794082366,249.7201119552179,249.81007596961214,249.90003998400638,249.99000399840065,250.0799680127949,250.16993202718913,250.25989604158337,250.34986005597762,250.43982407037186,250.5297880847661,250.61975209916034,250.70971611355458,250.79968012794882,250.88964414234306,250.9796081567373,251.06957217113154,251.15953618552578,251.24950019992002,251.33946421431426,251.4294282287085,251.51939224310277,251.609356257497,251.69932027189125,251.7892842862855,251.87924830067973,251.96921231507397,252.05917632946822,252.14914034386246,252.2391043582567,252.32906837265094,252.41903238704518,252.50899640143942,252.59896041583366,252.6889244302279,252.77888844462214,252.86885245901638,252.95881647341065,253.0487804878049,253.13874450219913,253.22870851659337,253.3186725309876,253.40863654538185,253.4986005597761,253.58856457417033,253.67852858856457,253.76849260295882,253.85845661735306,253.9484206317473,254.03838464614154,254.12834866053578,254.21831267493002,254.30827668932426,254.3982407037185,254.48820471811277,254.578168732507,254.66813274690125,254.7580967612955,254.84806077568973,254.93802479008397,255.0279888044782,255.11795281887245,255.2079168332667,255.29788084766093,255.38784486205518,255.47780887644942,255.56777289084366,255.6577369052379,255.74770091963214,255.83766493402638,255.92762894842062,256.0175929628149,256.10755697720913,256.19752099160337,256.2874850059976,256.37744902039185,256.4674130347861,256.55737704918033,256.6473410635746,256.7373050779688,256.82726909236305,256.9172331067573,257.00719712115153,257.0971611355458,257.18712514994,257.27708916433426,257.3670531787285,257.45701719312274,257.546981207517,257.6369452219112,257.72690923630546,257.8168732506997,257.90683726509394,257.9968012794882,258.0867652938824,258.17672930827666,258.2666933226709,258.3566573370652,258.44662135145944,258.5365853658537,258.6265493802479,258.71651339464216,258.8064774090364,258.89644142343064,258.9864054378249,259.0763694522191,259.16633346661337,259.2562974810076,259.34626149540185,259.4362255097961,259.52618952419033,259.61615353858457,259.7061175529788,259.79608156737305,259.8860455817673,259.97600959616153,260.0659736105558,260.15593762495,260.24590163934425,260.3358656537385,260.42582966813274,260.515793682527,260.6057576969212,260.69572171131546,260.7856857257097,260.87564974010394,260.9656137544982,261.0555777688924,261.14554178328666,261.2355057976809,261.3254698120752,261.41543382646944,261.5053978408637,261.5953618552579,261.68532586965216,261.7752898840464,261.86525389844064,261.9552179128349,262.0451819272291,262.13514594162336,262.2251099560176,262.31507397041185,262.4050379848061,262.4950019992003,262.58496601359457,262.6749300279888,262.76489404238305,262.8548580567773,262.94482207117153,263.03478608556577,263.12475009996,263.21471411435425,263.3046781287485,263.39464214314273,263.484606157537,263.5745701719312,263.66453418632545,263.7544982007197,263.84446221511394,263.9344262295082,264.0243902439024,264.11435425829666,264.2043182726909,264.29428228708514,264.38424630147944,264.4742103158737,264.5641743302679,264.65413834466216,264.7441023590564,264.83406637345064,264.9240303878449,265.0139944022391,265.10395841663336,265.1939224310276,265.28388644542184,265.3738504598161,265.4638144742103,265.55377848860456,265.6437425029988,265.73370651739305,265.8236705317873,265.9136345461815,266.00359856057577,266.09356257497,266.18352658936425,266.2734906037585,266.36345461815273,266.45341863254697,266.5433826469412,266.63334666133545,266.7233106757297,266.81327469012393,266.9032387045182,266.9932027189124,267.08316673330665,267.1731307477009,267.26309476209514,267.3530587764894,267.4430227908837,267.5329868052779,267.62295081967216,267.7129148340664,267.80287884846064,267.8928428628549,267.9828068772491,268.07277089164336,268.1627349060376,268.25269892043184,268.3426629348261,268.4326269492203,268.52259096361456,268.6125549780088,268.70251899240304,268.7924830067973,268.8824470211915,268.97241103558576,269.06237504998,269.15233906437425,269.2423030787685,269.3322670931627,269.42223110755697,269.5121951219512,269.60215913634545,269.6921231507397,269.78208716513393,269.87205117952817,269.9620151939224,270.05197920831665,270.1419432227109,270.23190723710513,270.3218712514994,270.4118352658936,270.5017992802879,270.59176329468215,270.6817273090764,270.77169132347063,270.8616553378649,270.9516193522591,271.04158336665336,271.1315473810476,271.22151139544184,271.3114754098361,271.4014394242303,271.49140343862456,271.5813674530188,271.67133146741304,271.7612954818073,271.8512594962015,271.94122351059576,272.03118752499,272.12115153938424,272.2111155537785,272.3010795681727,272.39104358256697,272.4810075969612,272.57097161135545,272.6609356257497,272.7508996401439,272.84086365453817,272.9308276689324,273.02079168332665,273.1107556977209,273.20071971211513,273.29068372650937,273.3806477409036,273.47061175529785,273.56057576969215,273.6505397840864,273.74050379848063,273.8304678128749,273.9204318272691,274.01039584166335,274.1003598560576,274.19032387045183,274.2802878848461,274.3702518992403,274.46021591363456,274.5501799280288,274.64014394242304,274.7301079568173,274.8200719712115,274.91003598560576,275.0,275.08996401439424,275.1799280287885,275.2698920431827,275.35985605757696,275.4498200719712,275.53978408636544,275.6297481007597,275.7197121151539,275.80967612954817,275.8996401439424,275.98960415833665,276.0795681727309,276.1695321871251,276.25949620151937,276.3494602159136,276.43942423030785,276.52938824470215,276.6193522590964,276.70931627349063,276.79928028788487,276.8892443022791,276.97920831667335,277.0691723310676,277.15913634546183,277.2491003598561,277.3390643742503,277.42902838864455,277.5189924030388,277.60895641743303,277.6989204318273,277.7888844462215,277.87884846061576,277.96881247501,278.05877648940424,278.1487405037985,278.2387045181927,278.32866853258696,278.4186325469812,278.50859656137544,278.5985605757697,278.6885245901639,278.77848860455816,278.8684526189524,278.95841663334664,279.0483806477409,279.1383446621351,279.22830867652937,279.3182726909236,279.40823670531785,279.4982007197121,279.5881647341064,279.6781287485006,279.76809276289487,279.8580567772891,279.94802079168335,280.0379848060776,280.12794882047183,280.21791283486607,280.3078768492603,280.39784086365455,280.4878048780488,280.57776889244303,280.6677329068373,280.7576969212315,280.84766093562575,280.93762495002,281.02758896441424,281.1175529788085,281.2075169932027,281.29748100759696,281.3874450219912,281.47740903638544,281.5673730507797,281.6573370651739,281.74730107956816,281.8372650939624,281.92722910835664,282.0171931227509,282.1071571371451,282.19712115153936,282.2870851659336,282.37704918032784,282.4670131947221,282.5569772091163,282.6469412235106,282.73690523790486,282.8268692522991,282.91683326669335,283.0067972810876,283.0967612954818,283.18672530987607,283.2766893242703,283.36665333866455,283.4566173530588,283.54658136745303,283.63654538184727,283.7265093962415,283.81647341063575,283.90643742503,283.99640143942423,284.0863654538185,284.1763294682127,284.26629348260695,284.3562574970012,284.44622151139544,284.5361855257897,284.6261495401839,284.71611355457816,284.8060775689724,284.89604158336664,284.9860055977609,285.0759696121551,285.16593362654936,285.2558976409436,285.34586165533784,285.4358256697321,285.5257896841263,285.61575369852056,285.70571771291486,285.7956817273091,285.88564574170334,285.9756097560976,286.0655737704918,286.15553778488606,286.2455017992803,286.33546581367455,286.4254298280688,286.515393842463,286.60535785685727,286.6953218712515,286.78528588564575,286.87524990004,286.96521391443423,287.05517792882847,287.1451419432227,287.23510595761695,287.3250699720112,287.41503398640543,287.5049980007997,287.5949620151939,287.68492602958815,287.7748900439824,287.86485405837664,287.9548180727709,288.0447820871651,288.13474610155936,288.2247101159536,288.31467413034784,288.4046381447421,288.4946021591363,288.58456617353056,288.6745301879248,288.7644942023191,288.85445821671334,288.9444222311076,289.0343862455018,289.12435025989606,289.2143142742903,289.30427828868454,289.3942423030788,289.484206317473,289.57417033186726,289.6641343462615,289.75409836065575,289.84406237505,289.9340263894442,290.02399040383847,290.1139544182327,290.20391843262695,290.2938824470212,290.38384646141543,290.47381047580967,290.5637744902039,290.65373850459815,290.7437025189924,290.83366653338663,290.9236305477809,291.0135945621751,291.10355857656936,291.1935225909636,291.28348660535784,291.3734506197521,291.4634146341463,291.55337864854056,291.6433426629348,291.7333066773291,291.82327069172334,291.9132347061176,292.0031987205118,292.09316273490606,292.1831267493003,292.27309076369454,292.3630547780888,292.453018792483,292.54298280687726,292.6329468212715,292.72291083566574,292.81287485006,292.9028388644542,292.99280287884847,293.0827668932427,293.17273090763695,293.2626949220312,293.3526589364254,293.44262295081967,293.5325869652139,293.62255097960815,293.7125149940024,293.80247900839663,293.89244302279087,293.9824070371851,294.07237105157935,294.1623350659736,294.25229908036783,294.3422630947621,294.4322271091563,294.52219112355056,294.6121551379448,294.70211915233904,294.79208316673333,294.8820471811276,294.9720111955218,295.06197520991606,295.1519392243103,295.24190323870454,295.3318672530988,295.421831267493,295.51179528188726,295.6017592962815,295.69172331067574,295.78168732507,295.8716513394642,295.96161535385846,296.0515793682527,296.14154338264694,296.2315073970412,296.3214714114354,296.41143542582967,296.5013994402239,296.59136345461815,296.6813274690124,296.7712914834066,296.86125549780087,296.9512195121951,297.04118352658935,297.1311475409836,297.22111155537783,297.3110755697721,297.4010395841663,297.49100359856055,297.5809676129548,297.67093162734903,297.7608956417433,297.8508596561376,297.9408236705318,298.03078768492605,298.1207516993203,298.21071571371454,298.3006797281088,298.390643742503,298.48060775689726,298.5705717712915,298.66053578568574,298.75049980008,298.8404638144742,298.93042782886846,299.0203918432627,299.11035585765694,299.2003198720512,299.2902838864454,299.38024790083966,299.4702119152339,299.56017592962814,299.6501399440224,299.7401039584166,299.83006797281087,299.9200319872051,300.00999600159935,300.0999600159936,300.18992403038783,300.27988804478207,300.3698520591763,300.45981607357055,300.5497800879648,300.63974410235903,300.7297081167533,300.8196721311475,300.9096361455418,300.99960015993605,301.0895641743303,301.17952818872453,301.2694922031188,301.359456217513,301.44942023190725,301.5393842463015,301.62934826069574,301.71931227509,301.8092762894842,301.89924030387846,301.9892043182727,302.07916833266694,302.1691323470612,302.2590963614554,302.34906037584966,302.4390243902439,302.52898840463814,302.6189524190324,302.7089164334266,302.79888044782086,302.8888444622151,302.97880847660934,303.0687724910036,303.1587365053978,303.24870051979207,303.3386645341863,303.42862854858055,303.5185925629748,303.60855657736903,303.69852059176327,303.7884846061575,303.87844862055175,303.96841263494605,304.0583766493403,304.14834066373453,304.23830467812877,304.328268692523,304.41823270691725,304.5081967213115,304.59816073570573,304.6881247501,304.7780887644942,304.86805277888845,304.9580167932827,305.04798080767694,305.1379448220712,305.2279088364654,305.31787285085966,305.4078368652539,305.49780087964814,305.5877648940424,305.6777289084366,305.76769292283086,305.8576569372251,305.94762095161934,306.0375849660136,306.1275489804078,306.21751299480206,306.3074770091963,306.39744102359055,306.4874050379848,306.577369052379,306.66733306677327,306.7572970811675,306.84726109556175,306.93722510995605,307.0271891243503,307.1171531387445,307.20711715313877,307.297081167533,307.38704518192725,307.4770091963215,307.56697321071573,307.65693722510997,307.7469012395042,307.83686525389845,307.9268292682927,308.01679328268693,308.1067572970812,308.1967213114754,308.28668532586966,308.3766493402639,308.46661335465814,308.5565773690524,308.6465413834466,308.73650539784086,308.8264694122351,308.91643342662934,309.0063974410236,309.0963614554178,309.18632546981206,309.2762894842063,309.36625349860054,309.4562175129948,309.546181527389,309.63614554178326,309.7261095561775,309.81607357057175,309.906037584966,309.9960015993603,310.0859656137545,310.17592962814877,310.265893642543,310.35585765693725,310.4458216713315,310.5357856857257,310.62574970011997,310.7157137145142,310.80567772890845,310.8956417433027,310.98560575769693,311.07556977209117,311.1655337864854,311.25549780087965,311.3454618152739,311.43542582966813,311.5253898440624,311.6153538584566,311.70531787285086,311.7952818872451,311.88524590163934,311.9752099160336,312.0651739304278,312.15513794482206,312.2451019592163,312.33506597361054,312.4250299880048,312.514994002399,312.60495801679326,312.6949220311875,312.78488604558174,312.874850059976,312.9648140743702,313.0547780887645,313.14474210315876,313.234706117553,313.32467013194724,313.4146341463415,313.5045981607357,313.59456217512997,313.6845261895242,313.77449020391845,313.8644542183127,313.9544182327069,314.04438224710117,314.1343462614954,314.22431027588965,314.3142742902839,314.40423830467813,314.4942023190724,314.5841663334666,314.67413034786085,314.7640943622551,314.85405837664933,314.9440223910436,315.0339864054378,315.12395041983206,315.2139144342263,315.30387844862054,315.3938424630148,315.483806477409,315.57377049180326,315.6637345061975,315.75369852059174,315.843662534986,315.9336265493802,316.02359056377446,316.11355457816876,316.203518592563,316.29348260695724,316.3834466213515,316.4734106357457,316.56337465013996,316.6533386645342,316.74330267892844,316.8332666933227,316.9232307077169,317.01319472211117,317.1031587365054,317.19312275089965,317.2830867652939,317.3730507796881,317.46301479408237,317.5529788084766,317.64294282287085,317.7329068372651,317.82287085165933,317.9128348660536,318.0027988804478,318.09276289484205,318.1827269092363,318.27269092363053,318.3626549380248,318.452618952419,318.54258296681326,318.6325469812075,318.72251099560174,318.812475009996,318.9024390243902,318.99240303878446,319.0823670531787,319.172331067573,319.26229508196724,319.3522590963615,319.4422231107557,319.53218712514996,319.6221511395442,319.71211515393844,319.8020791683327,319.8920431827269,319.98200719712116,320.0719712115154,320.16193522590964,320.2518992403039,320.3418632546981,320.43182726909237,320.5217912834866,320.61175529788085,320.7017193122751,320.79168332666933,320.88164734106357,320.9716113554578,321.06157536985205,321.1515393842463,321.24150339864053,321.3314674130348,321.421431427429,321.51139544182325,321.6013594562175,321.69132347061174,321.781287485006,321.8712514994002,321.96121551379446,322.0511795281887,322.141143542583,322.23110755697724,322.3210715713715,322.4110355857657,322.50099960015996,322.5909636145542,322.68092762894844,322.7708916433427,322.8608556577369,322.95081967213116,323.0407836865254,323.13074770091964,323.2207117153139,323.3106757297081,323.40063974410236,323.4906037584966,323.58056777289084,323.6705317872851,323.7604958016793,323.85045981607357,323.9404238304678,324.03038784486205,324.1203518592563,324.21031587365053,324.30027988804477,324.390243902439,324.48020791683325,324.5701719312275,324.66013594562173,324.750099960016,324.8400639744102,324.93002798880445,325.0199920031987,325.10995601759294,325.19992003198723,325.2898840463815,325.3798480607757,325.46981207516995,325.5597760895642,325.64974010395844,325.7397041183527,325.8296681327469,325.91963214714116,326.0095961615354,326.09956017592964,326.1895241903239,326.2794882047181,326.36945221911236,326.4594162335066,326.54938024790084,326.6393442622951,326.7293082766893,326.81927229108356,326.9092363054778,326.99920031987205,327.0891643342663,327.1791283486605,327.26909236305477,327.359056377449,327.44902039184325,327.5389844062375,327.62894842063173,327.71891243502597,327.8088764494202,327.89884046381445,327.9888044782087,328.07876849260293,328.1687325069972,328.25869652139147,328.3486605357857,328.43862455017995,328.5285885645742,328.61855257896843,328.7085165933627,328.7984806077569,328.88844462215116,328.9784086365454,329.06837265093964,329.1583366653339,329.2483006797281,329.33826469412236,329.4282287085166,329.51819272291084,329.6081567373051,329.6981207516993,329.78808476609356,329.8780487804878,329.96801279488204,330.0579768092763,330.1479408236705,330.23790483806476,330.327868852459,330.41783286685325,330.5077968812475,330.5977608956417,330.68772491003597,330.7776889244302,330.86765293882445,330.9576169532187,331.04758096761293,331.13754498200717,331.2275089964014,331.3174730107957,331.40743702518995,331.4974010395842,331.58736505397843,331.67732906837267,331.7672930827669,331.85725709716115,331.9472211115554,332.03718512594963,332.1271491403439,332.2171131547381,332.30707716913236,332.3970411835266,332.48700519792084,332.5769692123151,332.6669332267093,332.75689724110356,332.8468612554978,332.93682526989204,333.0267892842863,333.1167532986805,333.20671731307476,333.296681327469,333.38664534186324,333.4766093562575,333.5665733706517,333.65653738504597,333.7465013994402,333.83646541383445,333.9264294282287,334.0163934426229,334.10635745701717,334.1963214714114,334.28628548580565,334.37624950019995,334.4662135145942,334.5561775289884,334.64614154338267,334.7361055577769,334.82606957217115,334.9160335865654,335.00599760095963,335.0959616153539,335.1859256297481,335.27588964414235,335.3658536585366,335.45581767293083,335.5457816873251,335.6357457017193,335.72570971611356,335.8156737305078,335.90563774490204,335.9956017592963,336.0855657736905,336.17552978808476,336.265493802479,336.35545781687324,336.4454218312675,336.5353858456617,336.62534986005596,336.7153138744502,336.80527788884444,336.8952419032387,336.9852059176329,337.07516993202717,337.1651339464214,337.25509796081565,337.34506197520994,337.4350259896042,337.5249900039984,337.61495401839267,337.7049180327869,337.79488204718115,337.8848460615754,337.97481007596963,338.06477409036387,338.1547381047581,338.24470211915235,338.3346661335466,338.42463014794083,338.5145941623351,338.6045581767293,338.69452219112355,338.7844862055178,338.87445021991203,338.9644142343063,339.0543782487005,339.14434226309476,339.234306277489,339.32427029188324,339.4142343062775,339.5041983206717,339.59416233506596,339.6841263494602,339.77409036385444,339.8640543782487,339.9540183926429,340.04398240703716,340.1339464214314,340.22391043582564,340.3138744502199,340.4038384646142,340.4938024790084,340.58376649340266,340.6737305077969,340.76369452219114,340.8536585365854,340.9436225509796,341.03358656537387,341.1235505797681,341.21351459416235,341.3034786085566,341.39344262295083,341.48340663734507,341.5733706517393,341.66333466613355,341.7532986805278,341.84326269492203,341.9332267093163,342.0231907237105,342.11315473810475,342.203118752499,342.29308276689324,342.3830467812875,342.4730107956817,342.56297481007596,342.6529388244702,342.74290283886444,342.8328668532587,342.9228308676529,343.01279488204716,343.1027588964414,343.19272291083564,343.2826869252299,343.3726509396241,343.4626149540184,343.55257896841266,343.6425429828069,343.73250699720114,343.8224710115954,343.9124350259896,344.00239904038386,344.0923630547781,344.18232706917235,344.2722910835666,344.3622550979608,344.45221911235507,344.5421831267493,344.63214714114355,344.7221111555378,344.81207516993203,344.90203918432627,344.9920031987205,345.08196721311475,345.171931227509,345.26189524190323,345.3518592562975,345.4418232706917,345.53178728508595,345.6217512994802,345.71171531387444,345.8016793282687,345.8916433426629,345.98160735705716,346.0715713714514,346.16153538584564,346.2514994002399,346.3414634146341,346.43142742902836,346.52139144342266,346.6113554578169,346.70131947221114,346.7912834866054,346.8812475009996,346.97121151539386,347.0611755297881,347.15113954418234,347.2411035585766,347.3310675729708,347.42103158736506,347.5109956017593,347.60095961615355,347.6909236305478,347.780887644942,347.87085165933627,347.9608156737305,348.05077968812475,348.140743702519,348.23070771691323,348.32067173130747,348.4106357457017,348.50059976009595,348.5905637744902,348.68052778888443,348.7704918032787,348.8604558176729,348.95041983206715,349.0403838464614,349.13034786085564,349.2203118752499,349.3102758896441,349.40023990403836,349.4902039184326,349.5801679328269,349.67013194722114,349.7600959616154,349.8500599760096,349.94002399040386,350.0299880047981,350.11995201919234,350.2099160335866,350.2998800479808,350.38984406237506,350.4798080767693,350.56977209116354,350.6597361055578,350.749700119952,350.83966413434626,350.9296281487405,351.01959216313475,351.109556177529,351.1995201919232,351.28948420631747,351.3794482207117,351.46941223510595,351.5593762495002,351.64934026389443,351.73930427828867,351.8292682926829,351.91923230707715,352.0091963214714,352.09916033586563,352.1891243502599,352.2790883646541,352.36905237904836,352.4590163934426,352.5489804078369,352.63894442223113,352.7289084366254,352.8188724510196,352.90883646541386,352.9988004798081,353.08876449420234,353.1787285085966,353.2686925229908,353.35865653738506,353.4486205517793,353.53858456617354,353.6285485805678,353.718512594962,353.80847660935626,353.8984406237505,353.98840463814474,354.078368652539,354.1683326669332,354.25829668132747,354.3482606957217,354.43822471011595,354.5281887245102,354.6181527389044,354.70811675329867,354.7980807676929,354.88804478208715,354.9780087964814,355.06797281087563,355.15793682526987,355.2479008396641,355.33786485405835,355.4278288684526,355.51779288284683,355.60775689724113,355.6977209116354,355.7876849260296,355.87764894042385,355.9676129548181,356.05757696921233,356.1475409836066,356.2375049980008,356.32746901239506,356.4174330267893,356.50739704118354,356.5973610555778,356.687325069972,356.77728908436626,356.8672530987605,356.95721711315474,357.047181127549,357.1371451419432,357.22710915633746,357.3170731707317,357.40703718512594,357.4970011995202,357.5869652139144,357.67692922830867,357.7668932427029,357.85685725709715,357.9468212714914,358.0367852858856,358.12674930027987,358.2167133146741,358.30667732906835,358.3966413434626,358.48660535785683,358.5765693722511,358.66653338664537,358.7564974010396,358.84646141543385,358.9364254298281,359.02638944422233,359.1163534586166,359.2063174730108,359.29628148740505,359.3862455017993,359.47620951619353,359.5661735305878,359.656137544982,359.74610155937626,359.8360655737705,359.92602958816474,360.015993602559,360.1059576169532,360.19592163134746,360.2858856457417,360.37584966013594,360.4658136745302,360.5557776889244,360.64574170331866,360.7357057177129,360.82566973210714,360.9156337465014,361.0055977608956,361.09556177528987,361.1855257896841,361.27548980407835,361.3654538184726,361.45541783286683,361.54538184726107,361.6353458616553,361.7253098760496,361.81527389044385,361.9052379048381,361.99520191923233,362.08516593362657,362.1751299480208,362.26509396241505,362.3550579768093,362.44502199120353,362.5349860055978,362.624950019992,362.71491403438625,362.8048780487805,362.89484206317474,362.984806077569,363.0747700919632,363.16473410635746,363.2546981207517,363.34466213514594,363.4346261495402,363.5245901639344,363.61455417832866,363.7045181927229,363.79448220711714,363.8844462215114,363.9744102359056,364.06437425029986,364.1543382646941,364.24430227908834,364.3342662934826,364.4242303078768,364.51419432227107,364.6041583366653,364.69412235105955,364.78408636545385,364.8740503798481,364.9640143942423,365.05397840863657,365.1439424230308,365.23390643742505,365.3238704518193,365.41383446621353,365.50379848060777,365.593762495002,365.68372650939625,365.7736905237905,365.86365453818473,365.953618552579,366.0435825669732,366.13354658136745,366.2235105957617,366.31347461015594,366.4034386245502,366.4934026389444,366.58336665333866,366.6733306677329,366.76329468212714,366.8532586965214,366.9432227109156,367.03318672530986,367.1231507397041,367.21311475409834,367.3030787684926,367.3930427828868,367.48300679728106,367.5729708116753,367.66293482606955,367.75289884046384,367.8428628548581,367.9328268692523,368.02279088364656,368.1127548980408,368.20271891243505,368.2926829268293,368.3826469412235,368.47261095561777,368.562574970012,368.65253898440625,368.7425029988005,368.83246701319473,368.92243102758897,369.0123950419832,369.10235905637745,369.1923230707717,369.28228708516593,369.3722510995602,369.4622151139544,369.55217912834866,369.6421431427429,369.73210715713714,369.8220711715314,369.9120351859256,370.00199920031986,370.0919632147141,370.18192722910834,370.2718912435026,370.3618552578968,370.45181927229106,370.5417832866853,370.63174730107954,370.7217113154738,370.8116753298681,370.9016393442623,370.99160335865656,371.0815673730508,371.17153138744504,371.2614954018393,371.3514594162335,371.44142343062776,371.531387445022,371.62135145941625,371.7113154738105,371.8012794882047,371.89124350259897,371.9812075169932,372.07117153138745,372.1611355457817,372.25109956017593,372.34106357457017,372.4310275889644,372.52099160335865,372.6109556177529,372.70091963214713,372.7908836465414,372.8808476609356,372.97081167532986,373.0607756897241,373.15073970411834,373.2407037185126,373.3306677329068,373.42063174730106,373.5105957616953,373.60055977608954,373.6905237904838,373.780487804878,373.8704518192723,373.96041583366656,374.0503798480608,374.14034386245504,374.2303078768493,374.3202718912435,374.41023590563776,374.500199920032,374.59016393442624,374.6801279488205,374.7700919632147,374.86005597760897,374.9500199920032,375.03998400639745,375.1299480207917,375.2199120351859,375.30987604958017,375.3998400639744,375.48980407836865,375.5797680927629,375.66973210715713,375.75969612155137,375.8496601359456,375.93962415033985,376.0295881647341,376.11955217912833,376.2095161935226,376.2994802079168,376.38944422231106,376.4794082367053,376.56937225109954,376.6593362654938,376.749300279888,376.83926429428226,376.92922830867656,377.0191923230708,377.10915633746504,377.1991203518593,377.2890843662535,377.37904838064776,377.469012395042,377.55897640943624,377.6489404238305,377.7389044382247,377.82886845261896,377.9188324670132,378.00879648140744,378.0987604958017,378.1887245101959,378.27868852459017,378.3686525389844,378.45861655337865,378.5485805677729,378.6385445821671,378.72850859656137,378.8184726109556,378.90843662534985,378.9984006397441,379.08836465413833,379.1783286685326,379.2682926829268,379.35825669732105,379.4482207117153,379.53818472610953,379.6281487405038,379.718112754898,379.80807676929226,379.8980407836865,379.9880047980808,380.07796881247504,380.1679328268693,380.2578968412635,380.34786085565776,380.437824870052,380.52778888444624,380.6177528988405,380.7077169132347,380.79768092762896,380.8876449420232,380.97760895641744,381.0675729708117,381.1575369852059,381.24750099960016,381.3374650139944,381.42742902838864,381.5173930427829,381.6073570571771,381.69732107157137,381.7872850859656,381.87724910035985,381.9672131147541,382.05717712914833,382.14714114354257,382.2371051579368,382.32706917233105,382.4170331867253,382.50699720111953,382.5969612155138,382.686925229908,382.77688924430225,382.8668532586965,382.9568172730908,383.04678128748503,383.1367453018793,383.2267093162735,383.31667333066775,383.406637345062,383.49660135945624,383.5865653738505,383.6765293882447,383.76649340263896,383.8564574170332,383.94642143142744,384.0363854458217,384.1263494602159,384.21631347461016,384.3062774890044,384.39624150339864,384.4862055177929,384.5761695321871,384.66613354658136,384.7560975609756,384.84606157536984,384.9360255897641,385.0259896041583,385.11595361855257,385.2059176329468,385.29588164734105,385.3858456617353,385.47580967612953,385.56577369052377,385.655737704918,385.74570171931225,385.8356657337065,385.92562974810073,386.01559376249503,386.10555777688927,386.1955217912835,386.28548580567775,386.375449820072,386.46541383446623,386.5553778488605,386.6453418632547,386.73530587764895,386.8252698920432,386.91523390643744,387.0051979208317,387.0951619352259,387.18512594962016,387.2750899640144,387.36505397840864,387.4550179928029,387.5449820071971,387.63494602159136,387.7249100359856,387.81487405037984,387.9048380647741,387.9948020791683,388.08476609356256,388.1747301079568,388.26469412235105,388.3546581367453,388.4446221511395,388.53458616553377,388.624550179928,388.71451419432225,388.8044782087165,388.89444222311073,388.98440623750497,389.07437025189927,389.1643342662935,389.25429828068775,389.344262295082,389.43422630947623,389.52419032387047,389.6141543382647,389.70411835265895,389.7940823670532,389.88404638144743,389.9740103958417,390.0639744102359,390.15393842463016,390.2439024390244,390.33386645341864,390.4238304678129,390.5137944822071,390.60375849660136,390.6937225109956,390.78368652538984,390.8736505397841,390.9636145541783,391.05357856857256,391.1435425829668,391.23350659736104,391.3234706117553,391.4134346261495,391.50339864054376,391.593362654938,391.68332666933225,391.7732906837265,391.8632546981207,391.95321871251497,392.0431827269092,392.1331467413035,392.22311075569775,392.313074770092,392.4030387844862,392.49300279888047,392.5829668132747,392.67293082766895,392.7628948420632,392.85285885645743,392.94282287085167,393.0327868852459,393.12275089964015,393.2127149140344,393.30267892842863,393.3926429428229,393.4826069572171,393.57257097161136,393.6625349860056,393.75249900039984,393.8424630147941,393.9324270291883,394.02239104358256,394.1123550579768,394.20231907237104,394.2922830867653,394.3822471011595,394.47221111555376,394.562175129948,394.65213914434224,394.7421031587365,394.8320671731307,394.92203118752496,395.0119952019192,395.1019592163135,395.19192323070774,395.281887245102,395.3718512594962,395.46181527389047,395.5517792882847,395.64174330267895,395.7317073170732,395.8216713314674,395.91163534586167,396.0015993602559,396.09156337465015,396.1815273890444,396.27149140343863,396.3614554178329,396.4514194322271,396.54138344662135,396.6313474610156,396.72131147540983,396.8112754898041,396.9012395041983,396.99120351859256,397.0811675329868,397.17113154738104,397.2610955617753,397.3510595761695,397.44102359056376,397.530987604958,397.62095161935224,397.7109156337465,397.8008796481407,397.89084366253496,397.9808076769292,398.07077169132344,398.16073570571774,398.250699720112,398.3406637345062,398.43062774890046,398.5205917632947,398.61055577768894,398.7005197920832,398.7904838064774,398.88044782087167,398.9704118352659,399.06037584966015,399.1503398640544,399.24030387844863,399.33026789284287,399.4202319072371,399.51019592163135,399.6001599360256,399.69012395041983,399.7800879648141,399.8700519792083,399.96001599360255,400.0499800079968,400.13994402239103,400.2299080367853,400.3198720511795,400.40983606557376,400.499800079968,400.58976409436224,400.6797281087565,400.7696921231507,400.85965613754496,400.9496201519392,401.03958416633344,401.1295481807277,401.219512195122,401.3094762095162,401.39944022391046,401.4894042383047,401.57936825269894,401.6693322670932,401.7592962814874,401.84926029588166,401.9392243102759,402.02918832467014,402.1191523390644,402.2091163534586,402.29908036785287,402.3890443822471,402.47900839664135,402.5689724110356,402.65893642542983,402.74890043982407,402.8388644542183,402.92882846861255,403.0187924830068,403.10875649740103,403.1987205117953,403.2886845261895,403.37864854058375,403.468612554978,403.55857656937224,403.6485405837665,403.7385045981607,403.82846861255496,403.9184326269492,404.00839664134344,404.0983606557377,404.1883246701319,404.2782886845262,404.36825269892046,404.4582167133147,404.54818072770894,404.6381447421032,404.7281087564974,404.81807277089166,404.9080367852859,404.99800079968014,405.0879648140744,405.1779288284686,405.26789284286286,405.3578568572571,405.44782087165134,405.5377848860456,405.6277489004398,405.71771291483407,405.8076769292283,405.89764094362255,405.9876049580168,406.07756897241103,406.16753298680527,406.2574970011995,406.34746101559375,406.437425029988,406.52738904438223,406.6173530587765,406.7073170731707,406.79728108756495,406.8872451019592,406.97720911635344,407.0671731307477,407.1571371451419,407.24710115953616,407.33706517393045,407.4270291883247,407.51699320271894,407.6069572171132,407.6969212315074,407.78688524590166,407.8768492602959,407.96681327469014,408.0567772890844,408.1467413034786,408.23670531787286,408.3266693322671,408.41663334666134,408.5065973610556,408.5965613754498,408.68652538984406,408.7764894042383,408.86645341863255,408.9564174330268,409.046381447421,409.13634546181527,409.2263094762095,409.31627349060375,409.406237504998,409.49620151939223,409.58616553378647,409.6761295481807,409.76609356257495,409.8560575769692,409.94602159136343,410.0359856057577,410.1259496201519,410.21591363454615,410.30587764894045,410.3958416633347,410.48580567772893,410.5757696921232,410.6657337065174,410.75569772091166,410.8456617353059,410.93562574970014,411.0255897640944,411.1155537784886,411.20551779288286,411.2954818072771,411.38544582167134,411.4754098360656,411.5653738504598,411.65533786485406,411.7453018792483,411.83526589364254,411.9252299080368,412.015193922431,412.10515793682526,412.1951219512195,412.28508596561375,412.375049980008,412.4650139944022,412.55497800879647,412.6449420231907,412.73490603758495,412.8248700519792,412.91483406637343,413.00479808076767,413.0947620951619,413.18472610955615,413.2746901239504,413.3646541383447,413.45461815273893,413.54458216713317,413.6345461815274,413.72451019592165,413.8144742103159,413.90443822471013,413.9944022391044,414.0843662534986,414.17433026789286,414.2642942822871,414.35425829668134,414.4442223110756,414.5341863254698,414.62415033986406,414.7141143542583,414.80407836865254,414.8940423830468,414.984006397441,415.07397041183526,415.1639344262295,415.25389844062374,415.343862455018,415.4338264694122,415.52379048380647,415.6137544982007,415.70371851259495,415.7936825269892,415.8836465413834,415.97361055577767,416.0635745701719,416.15353858456615,416.2435025989604,416.33346661335463,416.4234306277489,416.51339464214317,416.6033586565374,416.69332267093165,416.7832866853259,416.87325069972013,416.9632147141144,417.0531787285086,417.14314274290285,417.2331067572971,417.32307077169133,417.4130347860856,417.5029988004798,417.59296281487406,417.6829268292683,417.77289084366254,417.8628548580568,417.952818872451,418.04278288684526,418.1327469012395,418.22271091563374,418.312674930028,418.4026389444222,418.49260295881646,418.5825669732107,418.67253098760494,418.7624950019992,418.8524590163934,418.94242303078767,419.0323870451819,419.12235105957615,419.2123150739704,419.3022790883646,419.39224310275887,419.48220711715317,419.5721711315474,419.66213514594165,419.7520991603359,419.84206317473013,419.93202718912437,420.0219912035186,420.11195521791285,420.2019192323071,420.29188324670133,420.3818472610956,420.4718112754898,420.56177528988405,420.6517393042783,420.74170331867253,420.8316673330668,420.921631347461,421.01159536185526,421.1015593762495,421.19152339064374,421.281487405038,421.3714514194322,421.46141543382646,421.5513794482207,421.64134346261494,421.7313074770092,421.8212714914034,421.91123550579766,422.0011995201919,422.09116353458614,422.1811275489804,422.2710915633746,422.36105557776887,422.4510195921631,422.5409836065574,422.63094762095164,422.7209116353459,422.8108756497401,422.90083966413437,422.9908036785286,423.08076769292285,423.1707317073171,423.26069572171133,423.35065973610557,423.4406237504998,423.53058776489405,423.6205517792883,423.71051579368253,423.8004798080768,423.890443822471,423.98040783686525,424.0703718512595,424.16033586565374,424.250299880048,424.3402638944422,424.43022790883646,424.5201919232307,424.61015593762494,424.7001199520192,424.7900839664134,424.88004798080766,424.9700119952019,425.05997600959614,425.1499400239904,425.2399040383846,425.32986805277886,425.4198320671731,425.5097960815674,425.59976009596164,425.6897241103559,425.7796881247501,425.86965213914436,425.9596161535386,426.04958016793285,426.1395441823271,426.2295081967213,426.31947221111557,426.4094362255098,426.49940023990405,426.5893642542983,426.67932826869253,426.76929228308677,426.859256297481,426.94922031187525,427.0391843262695,427.12914834066373,427.219112355058,427.3090763694522,427.39904038384645,427.4890043982407,427.57896841263494,427.6689324270292,427.7588964414234,427.84886045581766,427.9388244702119,428.02878848460614,428.1187524990004,428.2087165133946,428.29868052778886,428.3886445421831,428.47860855657734,428.56857257097164,428.6585365853659,428.7485005997601,428.83846461415436,428.9284286285486,429.01839264294284,429.1083566573371,429.1983206717313,429.28828468612556,429.3782487005198,429.46821271491405,429.5581767293083,429.6481407437025,429.73810475809677,429.828068772491,429.91803278688525,430.0079968012795,430.09796081567373,430.18792483006797,430.2778888444622,430.36785285885645,430.4578168732507,430.54778088764493,430.6377449020392,430.7277089164334,430.81767293082765,430.9076369452219,430.99760095961614,431.0875649740104,431.1775289884046,431.26749300279886,431.3574570171931,431.44742103158734,431.5373850459816,431.6273490603759,431.7173130747701,431.80727708916436,431.8972411035586,431.98720511795284,432.0771691323471,432.1671331467413,432.25709716113556,432.3470611755298,432.43702518992404,432.5269892043183,432.6169532187125,432.70691723310676,432.796881247501,432.88684526189525,432.9768092762895,433.0667732906837,433.15673730507797,433.2467013194722,433.33666533386645,433.4266293482607,433.51659336265493,433.60655737704917,433.6965213914434,433.78648540583765,433.8764494202319,433.96641343462613,434.0563774490204,434.1463414634146,434.23630547780886,434.3262694922031,434.41623350659734,434.5061975209916,434.5961615353858,434.6861255497801,434.77608956417436,434.8660535785686,434.95601759296284,435.0459816073571,435.1359456217513,435.22590963614556,435.3158736505398,435.40583766493404,435.4958016793283,435.5857656937225,435.67572970811676,435.765693722511,435.85565773690524,435.9456217512995,436.0355857656937,436.12554978008797,436.2155137944822,436.30547780887645,436.3954418232707,436.4854058376649,436.57536985205917,436.6653338664534,436.75529788084765,436.8452618952419,436.93522590963613,437.02518992403037,437.1151539384246,437.20511795281885,437.2950819672131,437.38504598160733,437.4750099960016,437.5649740103958,437.65493802479006,437.74490203918435,437.8348660535786,437.92483006797283,438.0147940823671,438.1047580967613,438.19472211115556,438.2846861255498,438.37465013994404,438.4646141543383,438.5545781687325,438.64454218312676,438.734506197521,438.82447021191524,438.9144342263095,439.0043982407037,439.09436225509796,439.1843262694922,439.27429028388644,439.3642542982807,439.4542183126749,439.54418232706917,439.6341463414634,439.72411035585765,439.8140743702519,439.9040383846461,439.99400239904037,440.0839664134346,440.17393042782885,440.2638944422231,440.35385845661733,440.4438224710116,440.5337864854058,440.62375049980005,440.71371451419435,440.8036785285886,440.89364254298283,440.9836065573771,441.0735705717713,441.16353458616555,441.2534986005598,441.34346261495403,441.4334266293483,441.5233906437425,441.61335465813676,441.703318672531,441.79328268692524,441.8832467013195,441.9732107157137,442.06317473010796,442.1531387445022,442.24310275889644,442.3330667732907,442.4230307876849,442.51299480207916,442.6029588164734,442.69292283086764,442.7828868452619,442.8728508596561,442.96281487405037,443.0527788884446,443.14274290283885,443.2327069172331,443.32267093162733,443.41263494602157,443.5025989604158,443.59256297481005,443.6825269892043,443.7724910035986,443.86245501799283,443.95241903238707,444.0423830467813,444.13234706117555,444.2223110755698,444.31227508996403,444.4022391043583,444.4922031187525,444.58216713314675,444.672131147541,444.76209516193524,444.8520591763295,444.9420231907237,445.03198720511796,445.1219512195122,445.21191523390644,445.3018792483007,445.3918432626949,445.48180727708916,445.5717712914834,445.66173530587764,445.7516993202719,445.8416633346661,445.93162734906036,446.0215913634546,446.11155537784884,446.2015193922431,446.2914834066373,446.38144742103157,446.4714114354258,446.56137544982005,446.6513394642143,446.74130347860853,446.8312674930028,446.92123150739707,447.0111955217913,447.10115953618555,447.1911235505798,447.28108756497403,447.37105157936827,447.4610155937625,447.55097960815675,447.640943622551,447.73090763694523,447.8208716513395,447.9108356657337,448.00079968012795,448.0907636945222,448.18072770891644,448.2706917233107,448.3606557377049,448.45061975209916,448.5405837664934,448.63054778088764,448.7205117952819,448.8104758096761,448.90043982407036,448.9904038384646,449.08036785285884,449.1703318672531,449.2602958816473,449.35025989604156,449.4402239104358,449.53018792483005,449.6201519392243,449.7101159536185,449.80007996801277,449.89004398240706,449.9800079968013,450.06997201119555,450.1599360255898,450.249900039984,450.33986405437827,450.4298280687725,450.51979208316675,450.609756097561,450.69972011195523,450.78968412634947,450.8796481407437,450.96961215513795,451.0595761695322,451.14954018392643,451.2395041983207,451.3294682127149,451.41943222710916,451.5093962415034,451.59936025589764,451.6893242702919,451.7792882846861,451.86925229908036,451.9592163134746,452.04918032786884,452.1391443422631,452.2291083566573,452.31907237105156,452.4090363854458,452.49900039984004,452.5889644142343,452.6789284286285,452.76889244302276,452.858856457417,452.9488204718113,453.03878448620554,453.1287485005998,453.218712514994,453.30867652938826,453.3986405437825,453.48860455817675,453.578568572571,453.6685325869652,453.75849660135947,453.8484606157537,453.93842463014795,454.0283886445422,454.11835265893643,454.20831667333067,454.2982806877249,454.38824470211915,454.4782087165134,454.56817273090763,454.6581367453019,454.7481007596961,454.83806477409036,454.9280287884846,455.01799280287884,455.1079568172731,455.1979208316673,455.28788484606156,455.3778488604558,455.46781287485004,455.5577768892443,455.6477409036385,455.73770491803276,455.827668932427,455.9176329468213,456.00759696121554,456.0975609756098,456.187524990004,456.27748900439826,456.3674530187925,456.45741703318674,456.547381047581,456.6373450619752,456.72730907636947,456.8172730907637,456.90723710515795,456.9972011195522,457.0871651339464,457.17712914834067,457.2670931627349,457.35705717712915,457.4470211915234,457.53698520591763,457.6269492203119,457.7169132347061,457.80687724910035,457.8968412634946,457.98680527788883,458.0767692922831,458.1667333066773,458.25669732107156,458.3466613354658,458.43662534986004,458.5265893642543,458.6165533786485,458.70651739304276,458.796481407437,458.88644542183124,458.97640943622554,459.0663734506198,459.156337465014,459.24630147940826,459.3362654938025,459.42622950819674,459.516193522591,459.6061575369852,459.69612155137946,459.7860855657737,459.87604958016794,459.9660135945622,460.0559776089564,460.14594162335067,460.2359056377449,460.32586965213915,460.4158336665334,460.5057976809276,460.59576169532187,460.6857257097161,460.77568972411035,460.8656537385046,460.95561775289883,461.0455817672931,461.1355457816873,461.22550979608155,461.3154738104758,461.40543782487003,461.4954018392643,461.5853658536585,461.67532986805276,461.765293882447,461.85525789684124,461.9452219112355,462.0351859256298,462.125149940024,462.21511395441826,462.3050779688125,462.39504198320674,462.485005997601,462.5749700119952,462.66493402638946,462.7548980407837,462.84486205517794,462.9348260695722,463.0247900839664,463.11475409836066,463.2047181127549,463.29468212714914,463.3846461415434,463.4746101559376,463.56457417033187,463.6545381847261,463.74450219912035,463.8344662135146,463.92443022790883,464.01439424230307,464.1043582566973,464.19432227109155,464.2842862854858,464.37425029988003,464.4642143142743,464.5541783286685,464.64414234306275,464.734106357457,464.82407037185123,464.9140343862455,465.0039984006397,465.093962415034,465.18392642942825,465.2738904438225,465.36385445821674,465.453818472611,465.5437824870052,465.63374650139946,465.7237105157937,465.81367453018794,465.9036385445822,465.9936025589764,466.08356657337066,466.1735305877649,466.26349460215914,466.3534586165534,466.4434226309476,466.53338664534186,466.6233506597361,466.71331467413034,466.8032786885246,466.8932427029188,466.98320671731307,467.0731707317073,467.16313474610155,467.2530987604958,467.34306277489003,467.43302678928427,467.5229908036785,467.61295481807275,467.702918832467,467.79288284686123,467.8828468612555,467.9728108756497,468.06277489004395,468.15273890443825,468.2427029188325,468.33266693322673,468.422630947621,468.5125949620152,468.60255897640945,468.6925229908037,468.78248700519794,468.8724510195922,468.9624150339864,469.05237904838066,469.1423430627749,469.23230707716914,469.3222710915634,469.4122351059576,469.50219912035186,469.5921631347461,469.68212714914034,469.7720911635346,469.8620551779288,469.95201919232306,470.0419832067173,470.13194722111155,470.2219112355058,470.3118752499,470.40183926429427,470.4918032786885,470.58176729308275,470.671731307477,470.76169532187123,470.85165933626547,470.9416233506597,471.03158736505395,471.12155137944825,471.2115153938425,471.30147940823673,471.39144342263097,471.4814074370252,471.57137145141945,471.6613354658137,471.75129948020793,471.8412634946022,471.9312275089964,472.02119152339066,472.1111555377849,472.20111955217914,472.2910835665734,472.3810475809676,472.47101159536186,472.5609756097561,472.65093962415034,472.7409036385446,472.8308676529388,472.92083166733306,473.0107956817273,473.10075969612154,473.1907237105158,473.28068772491,473.37065173930426,473.4606157536985,473.55057976809275,473.640543782487,473.7305077968812,473.82047181127547,473.9104358256697,474.00039984006395,474.0903638544582,474.1803278688525,474.2702918832467,474.36025589764097,474.4502199120352,474.54018392642945,474.6301479408237,474.72011195521793,474.81007596961217,474.9000399840064,474.99000399840065,475.0799680127949,475.16993202718913,475.2598960415834,475.3498600559776,475.43982407037186,475.5297880847661,475.61975209916034,475.7097161135546,475.7996801279488,475.88964414234306,475.9796081567373,476.06957217113154,476.1595361855258,476.24950019992,476.33946421431426,476.4294282287085,476.51939224310274,476.609356257497,476.6993202718912,476.78928428628546,476.8792483006797,476.96921231507395,477.0591763294682,477.1491403438624,477.2391043582567,477.32906837265097,477.4190323870452,477.50899640143945,477.5989604158337,477.6889244302279,477.77888844462217,477.8688524590164,477.95881647341065,478.0487804878049,478.13874450219913,478.2287085165934,478.3186725309876,478.40863654538185,478.4986005597761,478.58856457417033,478.6785285885646,478.7684926029588,478.85845661735306,478.9484206317473,479.03838464614154,479.1283486605358,479.21831267493,479.30827668932426,479.3982407037185,479.48820471811274,479.578168732507,479.6681327469012,479.75809676129546,479.8480607756897,479.93802479008394,480.0279888044782,480.1179528188724,480.20791683326667,480.29788084766096,480.3878448620552,480.47780887644944,480.5677728908437,480.6577369052379,480.74770091963217,480.8376649340264,480.92762894842065,481.0175929628149,481.10755697720913,481.19752099160337,481.2874850059976,481.37744902039185,481.4674130347861,481.55737704918033,481.6473410635746,481.7373050779688,481.82726909236305,481.9172331067573,482.00719712115153,482.0971611355458,482.18712514994,482.27708916433426,482.3670531787285,482.45701719312274,482.546981207517,482.6369452219112,482.72690923630546,482.8168732506997,482.90683726509394,482.9968012794882,483.0867652938824,483.17672930827666,483.2666933226709,483.3566573370652,483.44662135145944,483.5365853658537,483.6265493802479,483.71651339464216,483.8064774090364,483.89644142343064,483.9864054378249,484.0763694522191,484.16633346661337,484.2562974810076,484.34626149540185,484.4362255097961,484.52618952419033,484.61615353858457,484.7061175529788,484.79608156737305,484.8860455817673,484.97600959616153,485.0659736105558,485.15593762495,485.24590163934425,485.3358656537385,485.42582966813274,485.515793682527,485.6057576969212,485.69572171131546,485.7856857257097,485.87564974010394,485.9656137544982,486.0555777688924,486.14554178328666,486.2355057976809,486.3254698120752,486.41543382646944,486.5053978408637,486.5953618552579,486.68532586965216,486.7752898840464,486.86525389844064,486.9552179128349,487.0451819272291,487.13514594162336,487.2251099560176,487.31507397041185,487.4050379848061,487.4950019992003,487.58496601359457,487.6749300279888,487.76489404238305,487.8548580567773,487.94482207117153,488.03478608556577,488.12475009996,488.21471411435425,488.3046781287485,488.39464214314273,488.484606157537,488.5745701719312,488.66453418632545,488.7544982007197,488.84446221511394,488.9344262295082,489.0243902439024,489.11435425829666,489.2043182726909,489.29428228708514,489.38424630147944,489.4742103158737,489.5641743302679,489.65413834466216,489.7441023590564,489.83406637345064,489.9240303878449,490.0139944022391,490.10395841663336,490.1939224310276,490.28388644542184,490.3738504598161,490.4638144742103,490.55377848860456,490.6437425029988,490.73370651739305,490.8236705317873,490.9136345461815,491.00359856057577,491.09356257497,491.18352658936425,491.2734906037585,491.36345461815273,491.45341863254697,491.5433826469412,491.63334666133545,491.7233106757297,491.81327469012393,491.9032387045182,491.9932027189124,492.08316673330665,492.1731307477009,492.26309476209514,492.3530587764894,492.4430227908837,492.5329868052779,492.62295081967216,492.7129148340664,492.80287884846064,492.8928428628549,492.9828068772491,493.07277089164336,493.1627349060376,493.25269892043184,493.3426629348261,493.4326269492203,493.52259096361456,493.6125549780088,493.70251899240304,493.7924830067973,493.8824470211915,493.97241103558576,494.06237504998,494.15233906437425,494.2423030787685,494.3322670931627,494.42223110755697,494.5121951219512,494.60215913634545,494.6921231507397,494.78208716513393,494.87205117952817,494.9620151939224,495.05197920831665,495.1419432227109,495.23190723710513,495.3218712514994,495.4118352658936,495.5017992802879,495.59176329468215,495.6817273090764,495.77169132347063,495.8616553378649,495.9516193522591,496.04158336665336,496.1315473810476,496.22151139544184,496.3114754098361,496.4014394242303,496.49140343862456,496.5813674530188,496.67133146741304,496.7612954818073,496.8512594962015,496.94122351059576,497.03118752499,497.12115153938424,497.2111155537785,497.3010795681727,497.39104358256697,497.4810075969612,497.57097161135545,497.6609356257497,497.7508996401439,497.84086365453817,497.9308276689324,498.02079168332665,498.1107556977209,498.20071971211513,498.29068372650937,498.3806477409036,498.47061175529785,498.56057576969215,498.6505397840864,498.74050379848063,498.8304678128749,498.9204318272691,499.01039584166335,499.1003598560576,499.19032387045183,499.2802878848461,499.3702518992403,499.46021591363456,499.5501799280288,499.64014394242304,499.7301079568173,499.8200719712115,499.91003598560576,500.0]}

},{}],62:[function(require,module,exports){
(function (__filename){(function (){
/**
* @license Apache-2.0
*
* Copyright (c) 2020 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var tape = require( 'tape' );
var isnanf = require( '@stdlib/math/base/assert/is-nanf' );
var PINF = require( '@stdlib/constants/float32/pinf' );
var NINF = require( '@stdlib/constants/float32/ninf' );
var EPS = require( '@stdlib/constants/float32/eps' );
var abs = require( '@stdlib/math/base/special/abs' );
var rsqrtf = require( './../lib' );


// FIXTURES //

var hugePositive = require( './fixtures/julia/huge_positive.json' );
var veryLargePositive = require( './fixtures/julia/very_large_positive.json' );
var largePositive = require( './fixtures/julia/large_positive.json' );
var mediumPositive = require( './fixtures/julia/medium_positive.json' );
var smallPositive = require( './fixtures/julia/small_positive.json' );
var smaller = require( './fixtures/julia/smaller.json' );
var tinyPositive = require( './fixtures/julia/tiny_positive.json' );
var subnormal = require( './fixtures/julia/subnormal.json' );


// TESTS //

tape( 'main export is a function', function test( t ) {
	t.ok( true, __filename );
	t.strictEqual( typeof rsqrtf, 'function', 'main export is a function' );
	t.end();
});

tape( 'the function evaluates the reciprocal square root of `x` on the interval `[50,500]`', function test( t ) {
	var expected;
	var delta;
	var tol;
	var x;
	var y;
	var i;

	expected = veryLargePositive.expected;
	x = veryLargePositive.x;
	for ( i = 0; i < x.length; i++ ) {
		y = rsqrtf( x[i] );
		if ( y === expected[i] ) {
			t.equal( y, expected[i], 'x: '+x[i]+', y: '+y+', expected: '+expected[i] );
		} else {
			delta = abs( y - expected[i] );
			tol = EPS * abs( expected[i] );
			t.equal( delta <= tol, true, 'within tolerance. x: '+x[i]+'. y: '+y+'. E: '+expected[i]+'. Δ: '+delta+'. Tolerance: '+tol+'.' );
		}
	}
	t.end();
});

tape( 'the function evaluates the reciprocal square root of `x` on the interval `[20,50]`', function test( t ) {
	var expected;
	var delta;
	var tol;
	var x;
	var y;
	var i;

	expected = largePositive.expected;
	x = largePositive.x;
	for ( i = 0; i < x.length; i++ ) {
		y = rsqrtf( x[i] );
		if ( y === expected[i] ) {
			t.equal( y, expected[i], 'x: '+x[i]+', y: '+y+', expected: '+expected[i] );
		} else {
			delta = abs( y - expected[i] );
			tol = EPS * abs( expected[i] );
			t.equal( delta <= tol, true, 'within tolerance. x: '+x[i]+'. y: '+y+'. E: '+expected[i]+'. Δ: '+delta+'. Tolerance: '+tol+'.' );
		}
	}
	t.end();
});

tape( 'the function evaluates the reciprocal square root of `x` on the interval `[3,20]`', function test( t ) {
	var expected;
	var delta;
	var tol;
	var x;
	var y;
	var i;

	expected = mediumPositive.expected;
	x = mediumPositive.x;
	for ( i = 0; i < x.length; i++ ) {
		y = rsqrtf( x[i] );
		if ( y === expected[i] ) {
			t.equal( y, expected[i], 'x: '+x[i]+', y: '+y+', expected: '+expected[i] );
		} else {
			delta = abs( y - expected[i] );
			tol = EPS * abs( expected[i] );
			t.equal( delta <= tol, true, 'within tolerance. x: '+x[i]+'. y: '+y+'. E: '+expected[i]+'. Δ: '+delta+'. Tolerance: '+tol+'.' );
		}
	}
	t.end();
});

tape( 'the function evaluates the reciprocal square root of `x` on the interval `[0.8,3]`', function test( t ) {
	var expected;
	var delta;
	var tol;
	var x;
	var y;
	var i;

	expected = smallPositive.expected;
	x = smallPositive.x;
	for ( i = 0; i < x.length; i++ ) {
		y = rsqrtf( x[i] );
		if ( y === expected[i] ) {
			t.equal( y, expected[i], 'x: '+x[i]+', y: '+y+', expected: '+expected[i] );
		} else {
			delta = abs( y - expected[i] );
			tol = EPS * abs( expected[i] );
			t.equal( delta <= tol, true, 'within tolerance. x: '+x[i]+'. y: '+y+'. E: '+expected[i]+'. Δ: '+delta+'. Tolerance: '+tol+'.' );
		}
	}
	t.end();
});

tape( 'the function evaluates the reciprocal square root of `x` on the interval `[0.0,0.8]`', function test( t ) {
	var expected;
	var delta;
	var tol;
	var x;
	var y;
	var i;

	expected = smaller.expected;
	x = smaller.x;
	for ( i = 0; i < x.length; i++ ) {
		y = rsqrtf( x[i] );
		if ( y === expected[i] ) {
			t.equal( y, expected[i], 'x: '+x[i]+', y: '+y+', expected: '+expected[i] );
		} else {
			delta = abs( y - expected[i] );
			tol = EPS * abs( expected[i] );
			t.equal( delta <= tol, true, 'within tolerance. x: '+x[i]+'. y: '+y+'. E: '+expected[i]+'. Δ: '+delta+'. Tolerance: '+tol+'.' );
		}
	}
	t.end();
});

tape( 'the function evaluates the reciprocal square root of `x` on the interval `[1e-300,1e-308]`', function test( t ) {
	var expected;
	var delta;
	var tol;
	var x;
	var y;
	var i;

	expected = tinyPositive.expected;
	x = tinyPositive.x;
	for ( i = 0; i < x.length; i++ ) {
		y = rsqrtf( x[i] );
		if ( y === expected[i] ) {
			t.equal( y, expected[i], 'x: '+x[i]+', y: '+y+', expected: '+expected[i] );
		} else {
			delta = abs( y - expected[i] );
			tol = EPS * abs( expected[i] );
			t.equal( delta <= tol, true, 'within tolerance. x: '+x[i]+'. y: '+y+'. E: '+expected[i]+'. Δ: '+delta+'. Tolerance: '+tol+'.' );
		}
	}
	t.end();
});

tape( 'the function evaluates the reciprocal square root of subnormal `x`', function test( t ) {
	var expected;
	var delta;
	var tol;
	var x;
	var y;
	var i;

	expected = subnormal.expected;
	x = subnormal.x;
	for ( i = 0; i < x.length; i++ ) {
		y = rsqrtf( x[i] );
		if ( y === expected[i] ) {
			t.equal( y, expected[i], 'x: '+x[i]+', y: '+y+', expected: '+expected[i] );
		} else {
			delta = abs( y - expected[i] );
			tol = EPS * abs( expected[i] );
			t.equal( delta <= tol, true, 'within tolerance. x: '+x[i]+'. y: '+y+'. E: '+expected[i]+'. Δ: '+delta+'. Tolerance: '+tol+'.' );
		}
	}
	t.end();
});

tape( 'the function evaluates the reciprocal square root of `x` (huge positive)', function test( t ) {
	var expected;
	var delta;
	var tol;
	var x;
	var y;
	var i;

	expected = hugePositive.expected;
	x = hugePositive.x;
	for ( i = 0; i < x.length; i++ ) {
		y = rsqrtf( x[i] );
		if ( y === expected[i] ) {
			t.equal( y, expected[i], 'x: '+x[i]+', y: '+y+', expected: '+expected[i] );
		} else {
			delta = abs( y - expected[i] );
			tol = EPS * abs( expected[i] );
			t.equal( delta <= tol, true, 'within tolerance. x: '+x[i]+'. y: '+y+'. E: '+expected[i]+'. Δ: '+delta+'. Tolerance: '+tol+'.' );
		}
	}
	t.end();
});

tape( 'the function returns `NaN` if provided `NaN`', function test( t ) {
	var v = rsqrtf( NaN );
	t.equal( isnanf( v ), true, 'returns NaN' );
	t.end();
});

tape( 'the function returns `0.0` if provided `+infinity`', function test( t ) {
	var v = rsqrtf( PINF );
	t.equal( v, 0.0, 'returns 0.0' );
	t.end();
});

tape( 'the function returns `+infinity` if provided `+0`', function test( t ) {
	var v = rsqrtf( +0.0 );
	t.equal( v, PINF, 'returns +infinity' );
	t.end();
});

tape( 'the function returns `-infinity` if provided `-0`', function test( t ) {
	var v = rsqrtf( -0.0 );
	t.equal( v, NINF, 'returns -infinity' );
	t.end();
});

tape( 'the function returns `NaN` if provided a negative number', function test( t ) {
	var v = rsqrtf( -4.0 );
	t.equal( isnanf( v ), true, 'returns NaN' );
	t.end();
});

tape( 'the function returns `NaN` if provided `-infinity`', function test( t ) {
	var v = rsqrtf( NINF );
	t.equal( isnanf( v ), true, 'returns NaN' );
	t.end();
});

}).call(this)}).call(this,"/lib/node_modules/@stdlib/math/base/special/rsqrtf/test/test.js")
},{"./../lib":52,"./fixtures/julia/huge_positive.json":54,"./fixtures/julia/large_positive.json":55,"./fixtures/julia/medium_positive.json":56,"./fixtures/julia/small_positive.json":57,"./fixtures/julia/smaller.json":58,"./fixtures/julia/subnormal.json":59,"./fixtures/julia/tiny_positive.json":60,"./fixtures/julia/very_large_positive.json":61,"@stdlib/constants/float32/eps":43,"@stdlib/constants/float32/ninf":44,"@stdlib/constants/float32/pinf":45,"@stdlib/math/base/assert/is-nanf":48,"@stdlib/math/base/special/abs":50,"tape":246}],63:[function(require,module,exports){
(function (__filename,__dirname){(function (){
/**
* @license Apache-2.0
*
* Copyright (c) 2020 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var resolve = require( 'path' ).resolve;
var tape = require( 'tape' );
var isnanf = require( '@stdlib/math/base/assert/is-nanf' );
var PINF = require( '@stdlib/constants/float32/pinf' );
var NINF = require( '@stdlib/constants/float32/ninf' );
var EPS = require( '@stdlib/constants/float32/eps' );
var abs = require( '@stdlib/math/base/special/abs' );
var tryRequire = require( '@stdlib/utils/try-require' );


// FIXTURES //

var hugePositive = require( './fixtures/julia/huge_positive.json' );
var veryLargePositive = require( './fixtures/julia/very_large_positive.json' );
var largePositive = require( './fixtures/julia/large_positive.json' );
var mediumPositive = require( './fixtures/julia/medium_positive.json' );
var smallPositive = require( './fixtures/julia/small_positive.json' );
var smaller = require( './fixtures/julia/smaller.json' );
var tinyPositive = require( './fixtures/julia/tiny_positive.json' );
var subnormal = require( './fixtures/julia/subnormal.json' );


// VARIABLES //

var rsqrtf = tryRequire( resolve( __dirname, './../lib/native.js' ) );
var opts = {
	'skip': ( rsqrtf instanceof Error )
};


// TESTS //

tape( 'main export is a function', opts, function test( t ) {
	t.ok( true, __filename );
	t.strictEqual( typeof rsqrtf, 'function', 'main export is a function' );
	t.end();
});

tape( 'the function evaluates the reciprocal square root of `x` on the interval `[50,500]`', opts, function test( t ) {
	var expected;
	var delta;
	var tol;
	var x;
	var y;
	var i;

	expected = veryLargePositive.expected;
	x = veryLargePositive.x;
	for ( i = 0; i < x.length; i++ ) {
		y = rsqrtf( x[i] );
		if ( y === expected[i] ) {
			t.equal( y, expected[i], 'x: '+x[i]+', y: '+y+', expected: '+expected[i] );
		} else {
			delta = abs( y - expected[i] );
			tol = EPS * abs( expected[i] );
			t.equal( delta <= tol, true, 'within tolerance. x: '+x[i]+'. y: '+y+'. E: '+expected[i]+'. Δ: '+delta+'. Tolerance: '+tol+'.' );
		}
	}
	t.end();
});

tape( 'the function evaluates the reciprocal square root of `x` on the interval `[20,50]`', opts, function test( t ) {
	var expected;
	var delta;
	var tol;
	var x;
	var y;
	var i;

	expected = largePositive.expected;
	x = largePositive.x;
	for ( i = 0; i < x.length; i++ ) {
		y = rsqrtf( x[i] );
		if ( y === expected[i] ) {
			t.equal( y, expected[i], 'x: '+x[i]+', y: '+y+', expected: '+expected[i] );
		} else {
			delta = abs( y - expected[i] );
			tol = EPS * abs( expected[i] );
			t.equal( delta <= tol, true, 'within tolerance. x: '+x[i]+'. y: '+y+'. E: '+expected[i]+'. Δ: '+delta+'. Tolerance: '+tol+'.' );
		}
	}
	t.end();
});

tape( 'the function evaluates the reciprocal square root of `x` on the interval `[3,20]`', opts, function test( t ) {
	var expected;
	var delta;
	var tol;
	var x;
	var y;
	var i;

	expected = mediumPositive.expected;
	x = mediumPositive.x;
	for ( i = 0; i < x.length; i++ ) {
		y = rsqrtf( x[i] );
		if ( y === expected[i] ) {
			t.equal( y, expected[i], 'x: '+x[i]+', y: '+y+', expected: '+expected[i] );
		} else {
			delta = abs( y - expected[i] );
			tol = EPS * abs( expected[i] );
			t.equal( delta <= tol, true, 'within tolerance. x: '+x[i]+'. y: '+y+'. E: '+expected[i]+'. Δ: '+delta+'. Tolerance: '+tol+'.' );
		}
	}
	t.end();
});

tape( 'the function evaluates the reciprocal square root of `x` on the interval `[0.8,3]`', opts, function test( t ) {
	var expected;
	var delta;
	var tol;
	var x;
	var y;
	var i;

	expected = smallPositive.expected;
	x = smallPositive.x;
	for ( i = 0; i < x.length; i++ ) {
		y = rsqrtf( x[i] );
		if ( y === expected[i] ) {
			t.equal( y, expected[i], 'x: '+x[i]+', y: '+y+', expected: '+expected[i] );
		} else {
			delta = abs( y - expected[i] );
			tol = EPS * abs( expected[i] );
			t.equal( delta <= tol, true, 'within tolerance. x: '+x[i]+'. y: '+y+'. E: '+expected[i]+'. Δ: '+delta+'. Tolerance: '+tol+'.' );
		}
	}
	t.end();
});

tape( 'the function evaluates the reciprocal square root of `x` on the interval `[0.0,0.8]`', opts, function test( t ) {
	var expected;
	var delta;
	var tol;
	var x;
	var y;
	var i;

	expected = smaller.expected;
	x = smaller.x;
	for ( i = 0; i < x.length; i++ ) {
		y = rsqrtf( x[i] );
		if ( y === expected[i] ) {
			t.equal( y, expected[i], 'x: '+x[i]+', y: '+y+', expected: '+expected[i] );
		} else {
			delta = abs( y - expected[i] );
			tol = EPS * abs( expected[i] );
			t.equal( delta <= tol, true, 'within tolerance. x: '+x[i]+'. y: '+y+'. E: '+expected[i]+'. Δ: '+delta+'. Tolerance: '+tol+'.' );
		}
	}
	t.end();
});

tape( 'the function evaluates the reciprocal square root of `x` on the interval `[1e-300,1e-308]`', opts, function test( t ) {
	var expected;
	var delta;
	var tol;
	var x;
	var y;
	var i;

	expected = tinyPositive.expected;
	x = tinyPositive.x;
	for ( i = 0; i < x.length; i++ ) {
		y = rsqrtf( x[i] );
		if ( y === expected[i] ) {
			t.equal( y, expected[i], 'x: '+x[i]+', y: '+y+', expected: '+expected[i] );
		} else {
			delta = abs( y - expected[i] );
			tol = EPS * abs( expected[i] );
			t.equal( delta <= tol, true, 'within tolerance. x: '+x[i]+'. y: '+y+'. E: '+expected[i]+'. Δ: '+delta+'. Tolerance: '+tol+'.' );
		}
	}
	t.end();
});

tape( 'the function evaluates the reciprocal square root of subnormal `x`', opts, function test( t ) {
	var expected;
	var delta;
	var tol;
	var x;
	var y;
	var i;

	expected = subnormal.expected;
	x = subnormal.x;
	for ( i = 0; i < x.length; i++ ) {
		y = rsqrtf( x[i] );
		if ( y === expected[i] ) {
			t.equal( y, expected[i], 'x: '+x[i]+', y: '+y+', expected: '+expected[i] );
		} else {
			delta = abs( y - expected[i] );
			tol = EPS * abs( expected[i] );
			t.equal( delta <= tol, true, 'within tolerance. x: '+x[i]+'. y: '+y+'. E: '+expected[i]+'. Δ: '+delta+'. Tolerance: '+tol+'.' );
		}
	}
	t.end();
});

tape( 'the function evaluates the reciprocal square root of `x` (huge positive)', opts, function test( t ) {
	var expected;
	var delta;
	var tol;
	var x;
	var y;
	var i;

	expected = hugePositive.expected;
	x = hugePositive.x;
	for ( i = 0; i < x.length; i++ ) {
		y = rsqrtf( x[i] );
		if ( y === expected[i] ) {
			t.equal( y, expected[i], 'x: '+x[i]+', y: '+y+', expected: '+expected[i] );
		} else {
			delta = abs( y - expected[i] );
			tol = EPS * abs( expected[i] );
			t.equal( delta <= tol, true, 'within tolerance. x: '+x[i]+'. y: '+y+'. E: '+expected[i]+'. Δ: '+delta+'. Tolerance: '+tol+'.' );
		}
	}
	t.end();
});

tape( 'the function returns `NaN` if provided `NaN`', opts, function test( t ) {
	var v = rsqrtf( NaN );
	t.equal( isnanf( v ), true, 'returns NaN' );
	t.end();
});

tape( 'the function returns `0.0` if provided `+infinity`', opts, function test( t ) {
	var v = rsqrtf( PINF );
	t.equal( v, 0.0, 'returns 0.0' );
	t.end();
});

tape( 'the function returns `+infinity` if provided `+0`', opts, function test( t ) {
	var v = rsqrtf( +0.0 );
	t.equal( v, PINF, 'returns +infinity' );
	t.end();
});

tape( 'the function returns `-infinity` if provided `-0`', opts, function test( t ) {
	var v = rsqrtf( -0.0 );
	t.equal( v, NINF, 'returns -infinity' );
	t.end();
});

tape( 'the function returns `NaN` if provided a negative number', opts, function test( t ) {
	var v = rsqrtf( -4.0 );
	t.equal( isnanf( v ), true, 'returns NaN' );
	t.end();
});

tape( 'the function returns `NaN` if provided `-infinity`', opts, function test( t ) {
	var v = rsqrtf( NINF );
	t.equal( isnanf( v ), true, 'returns NaN' );
	t.end();
});

}).call(this)}).call(this,"/lib/node_modules/@stdlib/math/base/special/rsqrtf/test/test.native.js","/lib/node_modules/@stdlib/math/base/special/rsqrtf/test")
},{"./fixtures/julia/huge_positive.json":54,"./fixtures/julia/large_positive.json":55,"./fixtures/julia/medium_positive.json":56,"./fixtures/julia/small_positive.json":57,"./fixtures/julia/smaller.json":58,"./fixtures/julia/subnormal.json":59,"./fixtures/julia/tiny_positive.json":60,"./fixtures/julia/very_large_positive.json":61,"@stdlib/constants/float32/eps":43,"@stdlib/constants/float32/ninf":44,"@stdlib/constants/float32/pinf":45,"@stdlib/math/base/assert/is-nanf":48,"@stdlib/math/base/special/abs":50,"@stdlib/utils/try-require":114,"path":128,"tape":246}],64:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Compute the principal square root of a double-precision floating-point number.
*
* @module @stdlib/math/base/special/sqrt
*
* @example
* var sqrt = require( '@stdlib/math/base/special/sqrt' );
*
* var v = sqrt( 4.0 );
* // returns 2.0
*
* v = sqrt( 9.0 );
* // returns 3.0
*
* v = sqrt( 0.0 );
* // returns 0.0
*
* v = sqrt( -4.0 );
* // returns NaN
*
* v = sqrt( NaN );
* // returns NaN
*/

// MODULES //

var main = require( './main.js' );


// EXPORTS //

module.exports = main;

},{"./main.js":65}],65:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MAIN //

/**
* Compute the principal square root of a double-precision floating-point number.
*
* @type {Function}
* @param {number} x - input value
* @returns {number} principal square root
*
* @example
* var v = sqrt( 4.0 );
* // returns 2.0
*
* v = sqrt( 9.0 );
* // returns 3.0
*
* v = sqrt( 0.0 );
* // returns 0.0
*
* v = sqrt( -4.0 );
* // returns NaN
*
* v = sqrt( NaN );
* // returns NaN
*/
var sqrt = Math.sqrt; // eslint-disable-line stdlib/no-builtin-math


// EXPORTS //

module.exports = sqrt;

},{}],66:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Convert a double-precision floating-point number to the nearest single-precision floating-point number.
*
* @module @stdlib/number/float64/base/to-float32
*
* @example
* var float64ToFloat32 = require( '@stdlib/number/float64/base/to-float32' );
*
* var y = float64ToFloat32( 1.337 );
* // returns 1.3370000123977661
*/

// MODULES //

var builtin = require( './main.js' );
var polyfill = require( './polyfill.js' );


// MAIN //

var float64ToFloat32;
if ( typeof builtin === 'function' ) {
	float64ToFloat32 = builtin;
} else {
	float64ToFloat32 = polyfill;
}


// EXPORTS //

module.exports = float64ToFloat32;

},{"./main.js":67,"./polyfill.js":68}],67:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MAIN //

var fround = ( typeof Math.fround === 'function' ) ? Math.fround : null; // eslint-disable-line stdlib/no-builtin-math


// EXPORTS //

module.exports = fround;

},{}],68:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var Float32Array = require( '@stdlib/array/float32' );


// VARIABLES //

var FLOAT32_VIEW = new Float32Array( 1 );


// MAIN //

/**
* Converts a double-precision floating-point number to the nearest single-precision floating-point number.
*
* @param {number} x - double-precision floating-point number
* @returns {number} nearest single-precision floating-point number
*
* @example
* var y = float64ToFloat32( 1.337 );
* // returns 1.3370000123977661
*/
function float64ToFloat32( x ) {
	FLOAT32_VIEW[ 0 ] = x;
	return FLOAT32_VIEW[ 0 ];
}


// EXPORTS //

module.exports = float64ToFloat32;

},{"@stdlib/array/float32":1}],69:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2022 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Object constructor.
*
* @module @stdlib/object/ctor
*
* @example
* var Object = require( '@stdlib/object/ctor' );
*
* var o = new Object( null );
* // returns {}
*
* o = new Object( 5.0 );
* // returns <Number>
*
* o = new Object( 'beep' );
* // returns <String>
*
* var o1 = {};
*
* var o2 = new Object( o1 );
* // returns {}
*
* var bool = ( o1 === o2 );
* // returns true
*/

// MODULES //

var main = require( './main.js' );


// EXPORTS //

module.exports = main;

},{"./main.js":70}],70:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2022 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MAIN //

/**
* Returns an object.
*
* @name Object
* @constructor
* @type {Function}
* @param {*} value - input value
* @returns {Object} object
*
* @example
* var o = new Object( null );
* // returns {}
*
* @example
* var o = new Object( 5.0 );
* // returns <Number>
*
* @example
* var o = new Object( 'beep' );
* // returns <String>
*
* @example
* var o1 = {};
*
* var o2 = new Object( o1 );
* // returns {}
*
* var bool = ( o1 === o2 );
* // returns true
*/
var Obj = Object; // eslint-disable-line stdlib/require-globals


// EXPORTS //

module.exports = Obj;

},{}],71:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2021 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Regular expression to capture everything that is not a space immediately after the `function` keyword and before the first left parenthesis.
*
* @module @stdlib/regexp/function-name
*
* @example
* var reFunctionName = require( '@stdlib/regexp/function-name' );
* var RE_FUNCTION_NAME = reFunctionName();
*
* function fname( fcn ) {
*     return RE_FUNCTION_NAME.exec( fcn.toString() )[ 1 ];
* }
*
* var fn = fname( Math.sqrt );
* // returns 'sqrt'
*
* fn = fname( Int8Array );
* // returns 'Int8Array'
*
* fn = fname( Object.prototype.toString );
* // returns 'toString'
*
* fn = fname( function(){} );
* // returns ''
*/

// MODULES //

var setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );
var main = require( './main.js' );
var REGEXP = require( './regexp.js' );


// MAIN //

setReadOnly( main, 'REGEXP', REGEXP );


// EXPORTS //

module.exports = main;

},{"./main.js":72,"./regexp.js":73,"@stdlib/utils/define-nonenumerable-read-only-property":91}],72:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2021 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MAIN //

/**
* Returns a regular expression to capture everything that is not a space immediately after the `function` keyword and before the first left parenthesis.
*
* @returns {RegExp} regular expression
*
* @example
* var RE_FUNCTION_NAME = reFunctionName();
*
* function fname( fcn ) {
*     return RE_FUNCTION_NAME.exec( fcn.toString() )[ 1 ];
* }
*
* var fn = fname( Math.sqrt );
* // returns 'sqrt'
*
* fn = fname( Int8Array );
* // returns 'Int8Array'
*
* fn = fname( Object.prototype.toString );
* // returns 'toString'
*
* fn = fname( function(){} );
* // returns ''
*/
function reFunctionName() {
	return /^\s*function\s*([^(]*)/i;
}


// EXPORTS //

module.exports = reFunctionName;

},{}],73:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var reFunctionName = require( './main.js' );


// MAIN //

/**
* Captures everything that is not a space immediately after the `function` keyword and before the first left parenthesis.
*
* Regular expression: `/^\s*function\s*([^(]*)/i`
*
* -   `/^\s*`
*     -   Match zero or more spaces at beginning
*
* -   `function`
*     -   Match the word `function`
*
* -   `\s*`
*     -   Match zero or more spaces after the word `function`
*
* -   `()`
*     -   Capture
*
* -   `[^(]*`
*     -   Match anything except a left parenthesis `(` zero or more times
*
* -   `/i`
*     -   ignore case
*
* @constant
* @type {RegExp}
* @default /^\s*function\s*([^(]*)/i
*/
var RE_FUNCTION_NAME = reFunctionName();


// EXPORTS //

module.exports = RE_FUNCTION_NAME;

},{"./main.js":72}],74:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2022 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var isNumber = require( './is_number.js' );

// NOTE: for the following, we explicitly avoid using stdlib packages in this particular package in order to avoid circular dependencies.
var abs = Math.abs; // eslint-disable-line stdlib/no-builtin-math
var lowercase = String.prototype.toLowerCase;
var uppercase = String.prototype.toUpperCase;
var replace = String.prototype.replace;


// VARIABLES //

var RE_EXP_POS_DIGITS = /e\+(\d)$/;
var RE_EXP_NEG_DIGITS = /e-(\d)$/;
var RE_ONLY_DIGITS = /^(\d+)$/;
var RE_DIGITS_BEFORE_EXP = /^(\d+)e/;
var RE_TRAILING_PERIOD_ZERO = /\.0$/;
var RE_PERIOD_ZERO_EXP = /\.0*e/;
var RE_ZERO_BEFORE_EXP = /(\..*[^0])0*e/;


// MAIN //

/**
* Formats a token object argument as a floating-point number.
*
* @private
* @param {Object} token - token object
* @throws {Error} must provide a valid floating-point number
* @returns {string} formatted token argument
*/
function formatDouble( token ) {
	var digits;
	var out;
	var f = parseFloat( token.arg );
	if ( !isFinite( f ) ) { // NOTE: We use the global `isFinite` function here instead of `@stdlib/math/base/assert/is-finite` in order to avoid circular dependencies.
		if ( !isNumber( token.arg ) ) {
			throw new Error( 'invalid floating-point number. Value: ' + out );
		}
		// Case: NaN, Infinity, or -Infinity
		f = token.arg;
	}
	switch ( token.specifier ) {
	case 'e':
	case 'E':
		out = f.toExponential( token.precision );
		break;
	case 'f':
	case 'F':
		out = f.toFixed( token.precision );
		break;
	case 'g':
	case 'G':
		if ( abs( f ) < 0.0001 ) {
			digits = token.precision;
			if ( digits > 0 ) {
				digits -= 1;
			}
			out = f.toExponential( digits );
		} else {
			out = f.toPrecision( token.precision );
		}
		if ( !token.alternate ) {
			out = replace.call( out, RE_ZERO_BEFORE_EXP, '$1e' );
			out = replace.call( out, RE_PERIOD_ZERO_EXP, 'e' );
			out = replace.call( out, RE_TRAILING_PERIOD_ZERO, '' );
		}
		break;
	default:
		throw new Error( 'invalid double notation. Value: ' + token.specifier );
	}
	out = replace.call( out, RE_EXP_POS_DIGITS, 'e+0$1' );
	out = replace.call( out, RE_EXP_NEG_DIGITS, 'e-0$1' );
	if ( token.alternate ) {
		out = replace.call( out, RE_ONLY_DIGITS, '$1.' );
		out = replace.call( out, RE_DIGITS_BEFORE_EXP, '$1.e' );
	}
	if ( f >= 0 && token.sign ) {
		out = token.sign + out;
	}
	out = ( token.specifier === uppercase.call( token.specifier ) ) ?
		uppercase.call( out ) :
		lowercase.call( out );
	return out;
}


// EXPORTS //

module.exports = formatDouble;

},{"./is_number.js":77}],75:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2022 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var isNumber = require( './is_number.js' );
var zeroPad = require( './zero_pad.js' );

// NOTE: for the following, we explicitly avoid using stdlib packages in this particular package in order to avoid circular dependencies.
var lowercase = String.prototype.toLowerCase;
var uppercase = String.prototype.toUpperCase;


// MAIN //

/**
* Formats a token object argument as an integer.
*
* @private
* @param {Object} token - token object
* @throws {Error} must provide a valid integer
* @returns {string} formatted token argument
*/
function formatInteger( token ) {
	var base;
	var out;
	var i;

	switch ( token.specifier ) {
	case 'b':
		// Case: %b (binary)
		base = 2;
		break;
	case 'o':
		// Case: %o (octal)
		base = 8;
		break;
	case 'x':
	case 'X':
		// Case: %x, %X (hexadecimal)
		base = 16;
		break;
	case 'd':
	case 'i':
	case 'u':
	default:
		// Case: %d, %i, %u (decimal)
		base = 10;
		break;
	}
	out = token.arg;
	i = parseInt( out, 10 );
	if ( !isFinite( i ) ) { // NOTE: We use the global `isFinite` function here instead of `@stdlib/math/base/assert/is-finite` in order to avoid circular dependencies.
		if ( !isNumber( out ) ) {
			throw new Error( 'invalid integer. Value: ' + out );
		}
		i = 0;
	}
	if ( i < 0 && ( token.specifier === 'u' || base !== 10 ) ) {
		i = 0xffffffff + i + 1;
	}
	if ( i < 0 ) {
		out = ( -i ).toString( base );
		if ( token.precision ) {
			out = zeroPad( out, token.precision, token.padRight );
		}
		out = '-' + out;
	} else {
		out = i.toString( base );
		if ( !i && !token.precision ) {
			out = '';
		} else if ( token.precision ) {
			out = zeroPad( out, token.precision, token.padRight );
		}
		if ( token.sign ) {
			out = token.sign + out;
		}
	}
	if ( base === 16 ) {
		if ( token.alternate ) {
			out = '0x' + out;
		}
		out = ( token.specifier === uppercase.call( token.specifier ) ) ?
			uppercase.call( out ) :
			lowercase.call( out );
	}
	if ( base === 8 ) {
		if ( token.alternate && out.charAt( 0 ) !== '0' ) {
			out = '0' + out;
		}
	}
	return out;
}


// EXPORTS //

module.exports = formatInteger;

},{"./is_number.js":77,"./zero_pad.js":81}],76:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2022 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Generate string from a token array by interpolating values.
*
* @module @stdlib/string/base/format-interpolate
*
* @example
* var formatInterpolate = require( '@stdlib/string/base/format-interpolate' );
*
* var tokens = ['Hello ', { 'specifier': 's' }, '!' ];
* var out = formatInterpolate( tokens, 'World' );
* // returns 'Hello World!'
*/

// MODULES //

var main = require( './main.js' );


// EXPORTS //

module.exports = main;

},{"./main.js":79}],77:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2022 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Tests if a value is a number primitive.
*
* @param {*} value - value to test
* @returns {boolean} boolean indicating if a value is a number primitive
*
* @example
* var bool = isNumber( 3.14 );
* // returns true
*
* @example
* var bool = isNumber( NaN );
* // returns true
*
* @example
* var bool = isNumber( new Number( 3.14 ) );
* // returns false
*/
function isNumber( value ) {
	return ( typeof value === 'number' );  // NOTE: we inline the `isNumber.isPrimitive` function from `@stdlib/assert/is-number` in order to avoid circular dependencies.
}


// EXPORTS //

module.exports = isNumber;

},{}],78:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2022 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Tests if a value is a string primitive.
*
* @param {*} value - value to test
* @returns {boolean} boolean indicating if a value is a string primitive
*
* @example
* var bool = isString( 'beep' );
* // returns true
*
* @example
* var bool = isString( new String( 'beep' ) );
* // returns false
*/
function isString( value ) {
	return ( typeof value === 'string' ); // NOTE: we inline the `isString.isPrimitive` function from `@stdlib/assert/is-string` in order to avoid circular dependencies.
}


// EXPORTS //

module.exports = isString;

},{}],79:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2022 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var formatInteger = require( './format_integer.js' );
var isString = require( './is_string.js' );
var formatDouble = require( './format_double.js' );
var spacePad = require( './space_pad.js' );
var zeroPad = require( './zero_pad.js' );


// VARIABLES //

var fromCharCode = String.fromCharCode;
var isArray = Array.isArray; // NOTE: We use the global `Array.isArray` function here instead of `@stdlib/assert/is-array` to avoid circular dependencies.


// FUNCTIONS //

/**
* Returns a boolean indicating whether a value is `NaN`.
*
* @private
* @param {*} value - input value
* @returns {boolean} boolean indicating whether a value is `NaN`
*
* @example
* var bool = isnan( NaN );
* // returns true
*
* @example
* var bool = isnan( 4 );
* // returns false
*/
function isnan( value ) { // explicitly define a function here instead of `@stdlib/math/base/assert/is-nan` in order to avoid circular dependencies
	return ( value !== value );
}

/**
* Initializes token object with properties of supplied format identifier object or default values if not present.
*
* @private
* @param {Object} token - format identifier object
* @returns {Object} token object
*/
function initialize( token ) {
	var out = {};
	out.specifier = token.specifier;
	out.precision = ( token.precision === void 0 ) ? 1 : token.precision;
	out.width = token.width;
	out.flags = token.flags || '';
	out.mapping = token.mapping;
	return out;
}


// MAIN //

/**
* Generates string from a token array by interpolating values.
*
* @param {Array} tokens - string parts and format identifier objects
* @param {Array} ...args - variable values
* @throws {TypeError} first argument must be an array
* @throws {Error} invalid flags
* @returns {string} formatted string
*
* @example
* var tokens = [ 'beep ', { 'specifier': 's' } ];
* var out = formatInterpolate( tokens, 'boop' );
* // returns 'beep boop'
*/
function formatInterpolate( tokens ) {
	var hasPeriod;
	var flags;
	var token;
	var flag;
	var num;
	var out;
	var pos;
	var i;
	var j;

	if ( !isArray( tokens ) ) {
		throw new TypeError( 'invalid argument. First argument must be an array. Value: `' + tokens + '`.' );
	}
	out = '';
	pos = 1;
	for ( i = 0; i < tokens.length; i++ ) {
		token = tokens[ i ];
		if ( isString( token ) ) {
			out += token;
		} else {
			hasPeriod = token.precision !== void 0;
			token = initialize( token );
			if ( !token.specifier ) {
				throw new TypeError( 'invalid argument. Token is missing `specifier` property. Index: `'+ i +'`. Value: `' + token + '`.' );
			}
			if ( token.mapping ) {
				pos = token.mapping;
			}
			flags = token.flags;
			for ( j = 0; j < flags.length; j++ ) {
				flag = flags.charAt( j );
				switch ( flag ) {
				case ' ':
					token.sign = ' ';
					break;
				case '+':
					token.sign = '+';
					break;
				case '-':
					token.padRight = true;
					token.padZeros = false;
					break;
				case '0':
					token.padZeros = flags.indexOf( '-' ) < 0; // NOTE: We use built-in `Array.prototype.indexOf` here instead of `@stdlib/assert/contains` in order to avoid circular dependencies.
					break;
				case '#':
					token.alternate = true;
					break;
				default:
					throw new Error( 'invalid flag: ' + flag );
				}
			}
			if ( token.width === '*' ) {
				token.width = parseInt( arguments[ pos ], 10 );
				pos += 1;
				if ( isnan( token.width ) ) {
					throw new TypeError( 'the argument for * width at position ' + pos + ' is not a number. Value: `' + token.width + '`.' );
				}
				if ( token.width < 0 ) {
					token.padRight = true;
					token.width = -token.width;
				}
			}
			if ( hasPeriod ) {
				if ( token.precision === '*' ) {
					token.precision = parseInt( arguments[ pos ], 10 );
					pos += 1;
					if ( isnan( token.precision ) ) {
						throw new TypeError( 'the argument for * precision at position ' + pos + ' is not a number. Value: `' + token.precision + '`.' );
					}
					if ( token.precision < 0 ) {
						token.precision = 1;
						hasPeriod = false;
					}
				}
			}
			token.arg = arguments[ pos ];
			switch ( token.specifier ) {
			case 'b':
			case 'o':
			case 'x':
			case 'X':
			case 'd':
			case 'i':
			case 'u':
				// Case: %b (binary), %o (octal), %x, %X (hexadecimal), %d, %i (decimal), %u (unsigned decimal)
				if ( hasPeriod ) {
					token.padZeros = false;
				}
				token.arg = formatInteger( token );
				break;
			case 's':
				// Case: %s (string)
				token.maxWidth = ( hasPeriod ) ? token.precision : -1;
				token.arg = String( token.arg );
				break;
			case 'c':
				// Case: %c (character)
				if ( !isnan( token.arg ) ) {
					num = parseInt( token.arg, 10 );
					if ( num < 0 || num > 127 ) {
						throw new Error( 'invalid character code. Value: ' + token.arg );
					}
					token.arg = ( isnan( num ) ) ? String( token.arg ) : fromCharCode( num ); // eslint-disable-line max-len
				}
				break;
			case 'e':
			case 'E':
			case 'f':
			case 'F':
			case 'g':
			case 'G':
				// Case: %e, %E (scientific notation), %f, %F (decimal floating point), %g, %G (uses the shorter of %e/E or %f/F)
				if ( !hasPeriod ) {
					token.precision = 6;
				}
				token.arg = formatDouble( token );
				break;
			default:
				throw new Error( 'invalid specifier: ' + token.specifier );
			}
			// Fit argument into field width...
			if ( token.maxWidth >= 0 && token.arg.length > token.maxWidth ) {
				token.arg = token.arg.substring( 0, token.maxWidth );
			}
			if ( token.padZeros ) {
				token.arg = zeroPad( token.arg, token.width || token.precision, token.padRight ); // eslint-disable-line max-len
			} else if ( token.width ) {
				token.arg = spacePad( token.arg, token.width, token.padRight );
			}
			out += token.arg || '';
			pos += 1;
		}
	}
	return out;
}


// EXPORTS //

module.exports = formatInterpolate;

},{"./format_double.js":74,"./format_integer.js":75,"./is_string.js":78,"./space_pad.js":80,"./zero_pad.js":81}],80:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2022 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// FUNCTIONS //

/**
* Returns `n` spaces.
*
* @private
* @param {number} n - number of spaces
* @returns {string} string of spaces
*/
function spaces( n ) {
	var out = '';
	var i;
	for ( i = 0; i < n; i++ ) {
		out += ' ';
	}
	return out;
}


// MAIN //

/**
* Pads a token with spaces to the specified width.
*
* @private
* @param {string} str - token argument
* @param {number} width - token width
* @param {boolean} [right=false] - boolean indicating whether to pad to the right
* @returns {string} padded token argument
*/
function spacePad( str, width, right ) {
	var pad = width - str.length;
	if ( pad < 0 ) {
		return str;
	}
	str = ( right ) ?
		str + spaces( pad ) :
		spaces( pad ) + str;
	return str;
}


// EXPORTS //

module.exports = spacePad;

},{}],81:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2022 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// FUNCTIONS //

/**
* Tests if a string starts with a minus sign (`-`).
*
* @private
* @param {string} str - input string
* @returns {boolean} boolean indicating if a string starts with a minus sign (`-`)
*/
function startsWithMinus( str ) {
	return str[ 0 ] === '-';
}

/**
* Returns a string of `n` zeros.
*
* @private
* @param {number} n - number of zeros
* @returns {string} string of zeros
*/
function zeros( n ) {
	var out = '';
	var i;
	for ( i = 0; i < n; i++ ) {
		out += '0';
	}
	return out;
}


// MAIN //

/**
* Pads a token with zeros to the specified width.
*
* @private
* @param {string} str - token argument
* @param {number} width - token width
* @param {boolean} [right=false] - boolean indicating whether to pad to the right
* @returns {string} padded token argument
*/
function zeroPad( str, width, right ) {
	var negative = false;
	var pad = width - str.length;
	if ( pad < 0 ) {
		return str;
	}
	if ( startsWithMinus( str ) ) {
		negative = true;
		str = str.substr( 1 );
	}
	str = ( right ) ?
		str + zeros( pad ) :
		zeros( pad ) + str;
	if ( negative ) {
		str = '-' + str;
	}
	return str;
}


// EXPORTS //

module.exports = zeroPad;

},{}],82:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2022 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Tokenize a string into an array of string parts and format identifier objects.
*
* @module @stdlib/string/base/format-tokenize
*
* @example
* var formatTokenize = require( '@stdlib/string/base/format-tokenize' );
*
* var str = 'Hello %s!';
* var tokens = formatTokenize( str );
* // returns [ 'Hello ', {...}, '!' ]
*/

// MODULES //

var main = require( './main.js' );


// EXPORTS //

module.exports = main;

},{"./main.js":83}],83:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2022 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// VARIABLES //

var RE = /%(?:([1-9]\d*)\$)?([0 +\-#]*)(\*|\d+)?(?:(\.)(\*|\d+)?)?[hlL]?([%A-Za-z])/g;


// FUNCTIONS //

/**
* Parses a delimiter.
*
* @private
* @param {Array} match - regular expression match
* @returns {Object} delimiter token object
*/
function parse( match ) {
	var token = {
		'mapping': ( match[ 1 ] ) ? parseInt( match[ 1 ], 10 ) : void 0,
		'flags': match[ 2 ],
		'width': match[ 3 ],
		'precision': match[ 5 ],
		'specifier': match[ 6 ]
	};
	if ( match[ 4 ] === '.' && match[ 5 ] === void 0 ) {
		token.precision = '1';
	}
	return token;
}


// MAIN //

/**
* Tokenizes a string into an array of string parts and format identifier objects.
*
* @param {string} str - input string
* @returns {Array} tokens
*
* @example
* var tokens = formatTokenize( 'Hello %s!' );
* // returns [ 'Hello ', {...}, '!' ]
*/
function formatTokenize( str ) {
	var content;
	var tokens;
	var match;
	var prev;

	tokens = [];
	prev = 0;
	match = RE.exec( str );
	while ( match ) {
		content = str.slice( prev, RE.lastIndex - match[ 0 ].length );
		if ( content.length ) {
			tokens.push( content );
		}
		tokens.push( parse( match ) );
		prev = RE.lastIndex;
		match = RE.exec( str );
	}
	content = str.slice( prev );
	if ( content.length ) {
		tokens.push( content );
	}
	return tokens;
}


// EXPORTS //

module.exports = formatTokenize;

},{}],84:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2022 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Insert supplied variable values into a format string.
*
* @module @stdlib/string/format
*
* @example
* var format = require( '@stdlib/string/format' );
*
* var out = format( '%s %s!', 'Hello', 'World' );
* // returns 'Hello World!'
*
* out = format( 'Pi: ~%.2f', 3.141592653589793 );
* // returns 'Pi: ~3.14'
*/

// MODULES //

var main = require( './main.js' );


// EXPORTS //

module.exports = main;

},{"./main.js":86}],85:[function(require,module,exports){
arguments[4][78][0].apply(exports,arguments)
},{"dup":78}],86:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2022 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var interpolate = require( '@stdlib/string/base/format-interpolate' );
var tokenize = require( '@stdlib/string/base/format-tokenize' );
var isString = require( './is_string.js' );


// MAIN //

/**
* Inserts supplied variable values into a format string.
*
* @param {string} str - input string
* @param {Array} ...args - variable values
* @throws {TypeError} first argument must be a string
* @throws {Error} invalid flags
* @returns {string} formatted string
*
* @example
* var str = format( 'Hello %s!', 'world' );
* // returns 'Hello world!'
*
* @example
* var str = format( 'Pi: ~%.2f', 3.141592653589793 );
* // returns 'Pi: ~3.14'
*/
function format( str ) {
	var args;
	var i;

	if ( !isString( str ) ) {
		throw new TypeError( format( 'invalid argument. First argument must be a string. Value: `%s`.', str ) );
	}
	args = [ tokenize( str ) ];
	for ( i = 1; i < arguments.length; i++ ) {
		args.push( arguments[ i ] );
	}
	return interpolate.apply( null, args );
}


// EXPORTS //

module.exports = format;

},{"./is_string.js":85,"@stdlib/string/base/format-interpolate":76,"@stdlib/string/base/format-tokenize":82}],87:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Symbol factory.
*
* @module @stdlib/symbol/ctor
*
* @example
* var Symbol = require( '@stdlib/symbol/ctor' );
*
* var s = Symbol( 'beep' );
* // returns <symbol>
*/

// MODULES //

var main = require( './main.js' );


// EXPORTS //

module.exports = main;

},{"./main.js":88}],88:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MAIN //

var Sym = ( typeof Symbol === 'function' ) ? Symbol : void 0; // eslint-disable-line stdlib/require-globals


// EXPORTS //

module.exports = Sym;

},{}],89:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Determine the name of a value's constructor.
*
* @module @stdlib/utils/constructor-name
*
* @example
* var constructorName = require( '@stdlib/utils/constructor-name' );
*
* var v = constructorName( 'a' );
* // returns 'String'
*
* v = constructorName( {} );
* // returns 'Object'
*
* v = constructorName( true );
* // returns 'Boolean'
*/

// MODULES //

var main = require( './main.js' );


// EXPORTS //

module.exports = main;

},{"./main.js":90}],90:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var nativeClass = require( '@stdlib/utils/native-class' );
var RE = require( '@stdlib/regexp/function-name' ).REGEXP;
var isBuffer = require( '@stdlib/assert/is-buffer' );


// MAIN //

/**
* Determines the name of a value's constructor.
*
* @param {*} v - input value
* @returns {string} name of a value's constructor
*
* @example
* var v = constructorName( 'a' );
* // returns 'String'
*
* @example
* var v = constructorName( 5 );
* // returns 'Number'
*
* @example
* var v = constructorName( null );
* // returns 'Null'
*
* @example
* var v = constructorName( undefined );
* // returns 'Undefined'
*
* @example
* var v = constructorName( function noop() {} );
* // returns 'Function'
*/
function constructorName( v ) {
	var match;
	var name;
	var ctor;
	name = nativeClass( v ).slice( 8, -1 );
	if ( (name === 'Object' || name === 'Error') && v.constructor ) {
		ctor = v.constructor;
		if ( typeof ctor.name === 'string' ) {
			return ctor.name;
		}
		match = RE.exec( ctor.toString() );
		if ( match ) {
			return match[ 1 ];
		}
	}
	if ( isBuffer( v ) ) {
		return 'Buffer';
	}
	return name;
}


// EXPORTS //

module.exports = constructorName;

},{"@stdlib/assert/is-buffer":27,"@stdlib/regexp/function-name":71,"@stdlib/utils/native-class":109}],91:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Define a non-enumerable read-only property.
*
* @module @stdlib/utils/define-nonenumerable-read-only-property
*
* @example
* var setNonEnumerableReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );
*
* var obj = {};
*
* setNonEnumerableReadOnly( obj, 'foo', 'bar' );
*
* try {
*     obj.foo = 'boop';
* } catch ( err ) {
*     console.error( err.message );
* }
*/

// MODULES //

var main = require( './main.js' );


// EXPORTS //

module.exports = main;

},{"./main.js":92}],92:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var defineProperty = require( '@stdlib/utils/define-property' );


// MAIN //

/**
* Defines a non-enumerable read-only property.
*
* @param {Object} obj - object on which to define the property
* @param {(string|symbol)} prop - property name
* @param {*} value - value to set
*
* @example
* var obj = {};
*
* setNonEnumerableReadOnly( obj, 'foo', 'bar' );
*
* try {
*     obj.foo = 'boop';
* } catch ( err ) {
*     console.error( err.message );
* }
*/
function setNonEnumerableReadOnly( obj, prop, value ) {
	defineProperty( obj, prop, {
		'configurable': false,
		'enumerable': false,
		'writable': false,
		'value': value
	});
}


// EXPORTS //

module.exports = setNonEnumerableReadOnly;

},{"@stdlib/utils/define-property":96}],93:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MAIN //

/**
* Defines (or modifies) an object property.
*
* ## Notes
*
* -   Property descriptors come in two flavors: **data descriptors** and **accessor descriptors**. A data descriptor is a property that has a value, which may or may not be writable. An accessor descriptor is a property described by a getter-setter function pair. A descriptor must be one of these two flavors and cannot be both.
*
* @name defineProperty
* @type {Function}
* @param {Object} obj - object on which to define the property
* @param {(string|symbol)} prop - property name
* @param {Object} descriptor - property descriptor
* @param {boolean} [descriptor.configurable=false] - boolean indicating if property descriptor can be changed and if the property can be deleted from the provided object
* @param {boolean} [descriptor.enumerable=false] - boolean indicating if the property shows up when enumerating object properties
* @param {boolean} [descriptor.writable=false] - boolean indicating if the value associated with the property can be changed with an assignment operator
* @param {*} [descriptor.value] - property value
* @param {(Function|void)} [descriptor.get=undefined] - function which serves as a getter for the property, or, if no getter, undefined. When the property is accessed, a getter function is called without arguments and with the `this` context set to the object through which the property is accessed (which may not be the object on which the property is defined due to inheritance). The return value will be used as the property value.
* @param {(Function|void)} [descriptor.set=undefined] - function which serves as a setter for the property, or, if no setter, undefined. When assigning a property value, a setter function is called with one argument (the value being assigned to the property) and with the `this` context set to the object through which the property is assigned.
* @throws {TypeError} first argument must be an object
* @throws {TypeError} third argument must be an object
* @throws {Error} property descriptor cannot have both a value and a setter and/or getter
* @returns {Object} object with added property
*
* @example
* var obj = {};
*
* defineProperty( obj, 'foo', {
*     'value': 'bar'
* });
*
* var str = obj.foo;
* // returns 'bar'
*/
var defineProperty = Object.defineProperty;


// EXPORTS //

module.exports = defineProperty;

},{}],94:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2021 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MAIN //

var main = ( typeof Object.defineProperty === 'function' ) ? Object.defineProperty : null;


// EXPORTS //

module.exports = main;

},{}],95:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2021 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var defineProperty = require( './define_property.js' );


// MAIN //

/**
* Tests for `Object.defineProperty` support.
*
* @private
* @returns {boolean} boolean indicating if an environment has `Object.defineProperty` support
*
* @example
* var bool = hasDefinePropertySupport();
* // returns <boolean>
*/
function hasDefinePropertySupport() {
	// Test basic support...
	try {
		defineProperty( {}, 'x', {} );
		return true;
	} catch ( err ) { // eslint-disable-line no-unused-vars
		return false;
	}
}


// EXPORTS //

module.exports = hasDefinePropertySupport;

},{"./define_property.js":94}],96:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Define (or modify) an object property.
*
* @module @stdlib/utils/define-property
*
* @example
* var defineProperty = require( '@stdlib/utils/define-property' );
*
* var obj = {};
* defineProperty( obj, 'foo', {
*     'value': 'bar',
*     'writable': false,
*     'configurable': false,
*     'enumerable': false
* });
* obj.foo = 'boop'; // => throws
*/

// MODULES //

var hasDefinePropertySupport = require( './has_define_property_support.js' );
var builtin = require( './builtin.js' );
var polyfill = require( './polyfill.js' );


// MAIN //

var defineProperty;
if ( hasDefinePropertySupport() ) {
	defineProperty = builtin;
} else {
	defineProperty = polyfill;
}


// EXPORTS //

module.exports = defineProperty;

},{"./builtin.js":93,"./has_define_property_support.js":95,"./polyfill.js":97}],97:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

/* eslint-disable no-underscore-dangle, no-proto */

'use strict';

// MODULES //

var format = require( '@stdlib/string/format' );


// VARIABLES //

var objectProtoype = Object.prototype;
var toStr = objectProtoype.toString;
var defineGetter = objectProtoype.__defineGetter__;
var defineSetter = objectProtoype.__defineSetter__;
var lookupGetter = objectProtoype.__lookupGetter__;
var lookupSetter = objectProtoype.__lookupSetter__;


// MAIN //

/**
* Defines (or modifies) an object property.
*
* ## Notes
*
* -   Property descriptors come in two flavors: **data descriptors** and **accessor descriptors**. A data descriptor is a property that has a value, which may or may not be writable. An accessor descriptor is a property described by a getter-setter function pair. A descriptor must be one of these two flavors and cannot be both.
*
* @param {Object} obj - object on which to define the property
* @param {string} prop - property name
* @param {Object} descriptor - property descriptor
* @param {boolean} [descriptor.configurable=false] - boolean indicating if property descriptor can be changed and if the property can be deleted from the provided object
* @param {boolean} [descriptor.enumerable=false] - boolean indicating if the property shows up when enumerating object properties
* @param {boolean} [descriptor.writable=false] - boolean indicating if the value associated with the property can be changed with an assignment operator
* @param {*} [descriptor.value] - property value
* @param {(Function|void)} [descriptor.get=undefined] - function which serves as a getter for the property, or, if no getter, undefined. When the property is accessed, a getter function is called without arguments and with the `this` context set to the object through which the property is accessed (which may not be the object on which the property is defined due to inheritance). The return value will be used as the property value.
* @param {(Function|void)} [descriptor.set=undefined] - function which serves as a setter for the property, or, if no setter, undefined. When assigning a property value, a setter function is called with one argument (the value being assigned to the property) and with the `this` context set to the object through which the property is assigned.
* @throws {TypeError} first argument must be an object
* @throws {TypeError} third argument must be an object
* @throws {Error} property descriptor cannot have both a value and a setter and/or getter
* @returns {Object} object with added property
*
* @example
* var obj = {};
*
* defineProperty( obj, 'foo', {
*     'value': 'bar'
* });
*
* var str = obj.foo;
* // returns 'bar'
*/
function defineProperty( obj, prop, descriptor ) {
	var prototype;
	var hasValue;
	var hasGet;
	var hasSet;

	if ( typeof obj !== 'object' || obj === null || toStr.call( obj ) === '[object Array]' ) {
		throw new TypeError( format( 'invalid argument. First argument must be an object. Value: `%s`.', obj ) );
	}
	if ( typeof descriptor !== 'object' || descriptor === null || toStr.call( descriptor ) === '[object Array]' ) {
		throw new TypeError( format( 'invalid argument. Property descriptor must be an object. Value: `%s`.', descriptor ) );
	}
	hasValue = ( 'value' in descriptor );
	if ( hasValue ) {
		if (
			lookupGetter.call( obj, prop ) ||
			lookupSetter.call( obj, prop )
		) {
			// Override `__proto__` to avoid touching inherited accessors:
			prototype = obj.__proto__;
			obj.__proto__ = objectProtoype;

			// Delete property as existing getters/setters prevent assigning value to specified property:
			delete obj[ prop ];
			obj[ prop ] = descriptor.value;

			// Restore original prototype:
			obj.__proto__ = prototype;
		} else {
			obj[ prop ] = descriptor.value;
		}
	}
	hasGet = ( 'get' in descriptor );
	hasSet = ( 'set' in descriptor );

	if ( hasValue && ( hasGet || hasSet ) ) {
		throw new Error( 'invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.' );
	}

	if ( hasGet && defineGetter ) {
		defineGetter.call( obj, prop, descriptor.get );
	}
	if ( hasSet && defineSetter ) {
		defineSetter.call( obj, prop, descriptor.set );
	}
	return obj;
}


// EXPORTS //

module.exports = defineProperty;

},{"@stdlib/string/format":84}],98:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var isFunction = require( '@stdlib/assert/is-function' );
var builtin = require( './native.js' );
var polyfill = require( './polyfill.js' );


// MAIN //

var getProto;
if ( isFunction( Object.getPrototypeOf ) ) {
	getProto = builtin;
} else {
	getProto = polyfill;
}


// EXPORTS //

module.exports = getProto;

},{"./native.js":101,"./polyfill.js":102,"@stdlib/assert/is-function":33}],99:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Return the prototype of a provided object.
*
* @module @stdlib/utils/get-prototype-of
*
* @example
* var getPrototype = require( '@stdlib/utils/get-prototype-of' );
*
* var proto = getPrototype( {} );
* // returns {}
*/

// MODULES //

var main = require( './main.js' );


// EXPORTS //

module.exports = main;

},{"./main.js":100}],100:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var Object = require( '@stdlib/object/ctor' );
var getProto = require( './detect.js' );


// MAIN //

/**
* Returns the prototype of a provided object.
*
* @param {*} value - input value
* @returns {(Object|null)} prototype
*
* @example
* var proto = getPrototypeOf( {} );
* // returns {}
*/
function getPrototypeOf( value ) {
	if (
		value === null ||
		value === void 0
	) {
		return null;
	}
	// In order to ensure consistent ES5/ES6 behavior, cast input value to an object (strings, numbers, booleans); ES5 `Object.getPrototypeOf` throws when provided primitives and ES6 `Object.getPrototypeOf` casts:
	value = Object( value );

	return getProto( value );
}


// EXPORTS //

module.exports = getPrototypeOf;

},{"./detect.js":98,"@stdlib/object/ctor":69}],101:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MAIN //

var getProto = Object.getPrototypeOf;


// EXPORTS //

module.exports = getProto;

},{}],102:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var nativeClass = require( '@stdlib/utils/native-class' );
var getProto = require( './proto.js' );


// MAIN //

/**
* Returns the prototype of a provided object.
*
* @private
* @param {Object} obj - input object
* @returns {(Object|null)} prototype
*/
function getPrototypeOf( obj ) {
	var proto = getProto( obj );
	if ( proto || proto === null ) {
		return proto;
	}
	if ( nativeClass( obj.constructor ) === '[object Function]' ) {
		// May break if the constructor has been tampered with...
		return obj.constructor.prototype;
	}
	if ( obj instanceof Object ) {
		return Object.prototype;
	}
	// Return `null` for objects created via `Object.create( null )`. Also return `null` for cross-realm objects on browsers that lack `__proto__` support, such as IE < 11.
	return null;
}


// EXPORTS //

module.exports = getPrototypeOf;

},{"./proto.js":103,"@stdlib/utils/native-class":109}],103:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Returns the value of the `__proto__` property.
*
* @private
* @param {Object} obj - input object
* @returns {*} value of `__proto__` property
*/
function getProto( obj ) {
	// eslint-disable-next-line no-proto
	return obj.__proto__;
}


// EXPORTS //

module.exports = getProto;

},{}],104:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2022 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var isBoolean = require( '@stdlib/assert/is-boolean' ).isPrimitive;
var format = require( '@stdlib/string/format' );
var getThis = require( './codegen.js' );
var Self = require( './self.js' );
var Win = require( './window.js' );
var GlobalThis = require( './global_this.js' );


// MAIN //

/**
* Returns the global object.
*
* ## Notes
*
* -   Using code generation is the **most** reliable way to resolve the global object; however, doing so is likely to violate content security policies (CSPs) in, e.g., Chrome Apps and elsewhere.
*
* @private
* @param {boolean} [codegen=false] - boolean indicating whether to use code generation to resolve the global object
* @throws {TypeError} must provide a boolean
* @throws {Error} unable to resolve global object
* @returns {Object} global object
*
* @example
* var g = getGlobal();
* // returns {...}
*/
function getGlobal( codegen ) {
	if ( arguments.length ) {
		if ( !isBoolean( codegen ) ) {
			throw new TypeError( format( 'invalid argument. Must provide a boolean. Value: `%s`.', codegen ) );
		}
		if ( codegen ) {
			return getThis();
		}
		// Fall through...
	}
	// Case: 2020 revision of ECMAScript standard
	if ( GlobalThis ) {
		return GlobalThis;
	}
	// Case: browsers and web workers
	if ( Self ) {
		return Self;
	}
	// Case: browsers
	if ( Win ) {
		return Win;
	}
	// Case: unknown
	throw new Error( 'unexpected error. Unable to resolve global object.' );
}


// EXPORTS //

module.exports = getGlobal;

},{"./codegen.js":105,"./global_this.js":106,"./self.js":107,"./window.js":108,"@stdlib/assert/is-boolean":21,"@stdlib/string/format":84}],105:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MAIN //

/**
* Returns the global object using code generation.
*
* @private
* @returns {Object} global object
*/
function getGlobal() {
	return new Function( 'return this;' )(); // eslint-disable-line no-new-func, stdlib/require-globals
}


// EXPORTS //

module.exports = getGlobal;

},{}],106:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2022 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MAIN //

var obj = ( typeof globalThis === 'object' ) ? globalThis : null; // eslint-disable-line no-undef


// EXPORTS //

module.exports = obj;

},{}],107:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MAIN //

var obj = ( typeof self === 'object' ) ? self : null;


// EXPORTS //

module.exports = obj;

},{}],108:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MAIN //

var obj = ( typeof window === 'object' ) ? window : null;


// EXPORTS //

module.exports = obj;

},{}],109:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Return a string value indicating a specification defined classification of an object.
*
* @module @stdlib/utils/native-class
*
* @example
* var nativeClass = require( '@stdlib/utils/native-class' );
*
* var str = nativeClass( 'a' );
* // returns '[object String]'
*
* str = nativeClass( 5 );
* // returns '[object Number]'
*
* function Beep() {
*     return this;
* }
* str = nativeClass( new Beep() );
* // returns '[object Object]'
*/

// MODULES //

var hasToStringTag = require( '@stdlib/assert/has-tostringtag-support' );
var builtin = require( './main.js' );
var polyfill = require( './polyfill.js' );


// MAIN //

var main;
if ( hasToStringTag() ) {
	main = polyfill;
} else {
	main = builtin;
}


// EXPORTS //

module.exports = main;

},{"./main.js":110,"./polyfill.js":111,"@stdlib/assert/has-tostringtag-support":14}],110:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var toStr = require( './tostring.js' );


// MAIN //

/**
* Returns a string value indicating a specification defined classification (via the internal property `[[Class]]`) of an object.
*
* @param {*} v - input value
* @returns {string} string value indicating a specification defined classification of the input value
*
* @example
* var str = nativeClass( 'a' );
* // returns '[object String]'
*
* @example
* var str = nativeClass( 5 );
* // returns '[object Number]'
*
* @example
* function Beep() {
*     return this;
* }
* var str = nativeClass( new Beep() );
* // returns '[object Object]'
*/
function nativeClass( v ) {
	return toStr.call( v );
}


// EXPORTS //

module.exports = nativeClass;

},{"./tostring.js":112}],111:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var hasOwnProp = require( '@stdlib/assert/has-own-property' );
var toStringTag = require( './tostringtag.js' );
var toStr = require( './tostring.js' );


// MAIN //

/**
* Returns a string value indicating a specification defined classification of an object in environments supporting `Symbol.toStringTag`.
*
* @param {*} v - input value
* @returns {string} string value indicating a specification defined classification of the input value
*
* @example
* var str = nativeClass( 'a' );
* // returns '[object String]'
*
* @example
* var str = nativeClass( 5 );
* // returns '[object Number]'
*
* @example
* function Beep() {
*     return this;
* }
* var str = nativeClass( new Beep() );
* // returns '[object Object]'
*/
function nativeClass( v ) {
	var isOwn;
	var tag;
	var out;

	if ( v === null || v === void 0 ) {
		return toStr.call( v );
	}
	tag = v[ toStringTag ];
	isOwn = hasOwnProp( v, toStringTag );

	// Attempt to override the `toStringTag` property. For built-ins having a `Symbol.toStringTag` property (e.g., `JSON`, `Math`, etc), the `Symbol.toStringTag` property is read-only (e.g., , so we need to wrap in a `try/catch`.
	try {
		v[ toStringTag ] = void 0;
	} catch ( err ) { // eslint-disable-line no-unused-vars
		return toStr.call( v );
	}
	out = toStr.call( v );

	if ( isOwn ) {
		v[ toStringTag ] = tag;
	} else {
		delete v[ toStringTag ];
	}
	return out;
}


// EXPORTS //

module.exports = nativeClass;

},{"./tostring.js":112,"./tostringtag.js":113,"@stdlib/assert/has-own-property":10}],112:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MAIN //

var toStr = Object.prototype.toString;


// EXPORTS //

module.exports = toStr;

},{}],113:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var Symbol = require( '@stdlib/symbol/ctor' );


// MAIN //

var toStrTag = ( typeof Symbol === 'function' ) ? Symbol.toStringTag : '';


// EXPORTS //

module.exports = toStrTag;

},{"@stdlib/symbol/ctor":87}],114:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Wrap `require` in a try/catch block.
*
* @module @stdlib/utils/try-require
*
* @example
* var tryRequire = require( '@stdlib/utils/try-require' );
*
* var out = tryRequire( 'beepboop' );
*
* if ( out instanceof Error ) {
*     console.log( out.message );
* }
*/

// MODULES //

var main = require( './main.js' );


// EXPORTS //

module.exports = main;

},{"./main.js":115}],115:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var isError = require( '@stdlib/assert/is-error' );


// MAIN //

/**
* Wraps `require` in a try/catch block.
*
* @param {string} id - module id
* @returns {*|Error} `module.exports` of the resolved module or an error
*
* @example
* var out = tryRequire( 'beepboop' );
*
* if ( out instanceof Error ) {
*     console.error( out.message );
* }
*/
function tryRequire( id ) {
	try {
		return require( id ); // eslint-disable-line stdlib/no-dynamic-require
	} catch ( error ) {
		if ( isError( error ) ) {
			return error;
		}
		// Handle case where a literal is thrown...
		if ( typeof error === 'object' ) {
			return new Error( JSON.stringify( error ) );
		}
		return new Error( error.toString() );
	}
}


// EXPORTS //

module.exports = tryRequire;

},{"@stdlib/assert/is-error":29}],116:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var RE = require( './fixtures/re.js' );
var nodeList = require( './fixtures/nodelist.js' );
var typedarray = require( './fixtures/typedarray.js' );


// MAIN //

/**
* Checks whether a polyfill is needed when using the `typeof` operator.
*
* @private
* @returns {boolean} boolean indicating whether a polyfill is needed
*/
function check() {
	if (
		// Chrome 1-12 returns 'function' for regular expression instances (see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/typeof):
		typeof RE === 'function' ||

		// Safari 8 returns 'object' for typed array and weak map constructors (underscore #1929):
		typeof typedarray === 'object' ||

		// PhantomJS 1.9 returns 'function' for `NodeList` instances (underscore #2236):
		typeof nodeList === 'function'
	) {
		return true;
	}
	return false;
}


// EXPORTS //

module.exports = check;

},{"./fixtures/nodelist.js":117,"./fixtures/re.js":118,"./fixtures/typedarray.js":119}],117:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var getGlobal = require( '@stdlib/utils/global' );


// MAIN //

var root = getGlobal();
var nodeList = root.document && root.document.childNodes;


// EXPORTS //

module.exports = nodeList;

},{"@stdlib/utils/global":104}],118:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

var RE = /./;


// EXPORTS //

module.exports = RE;

},{}],119:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

var typedarray = Int8Array; // eslint-disable-line stdlib/require-globals


// EXPORTS //

module.exports = typedarray;

},{}],120:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Determine a value's type.
*
* @module @stdlib/utils/type-of
*
* @example
* var typeOf = require( '@stdlib/utils/type-of' );
*
* var str = typeOf( 'a' );
* // returns 'string'
*
* str = typeOf( 5 );
* // returns 'number'
*/

// MODULES //

var usePolyfill = require( './check.js' );
var builtin = require( './main.js' );
var polyfill = require( './polyfill.js' );


// MAIN //

var main = ( usePolyfill() ) ? polyfill : builtin;


// EXPORTS //

module.exports = main;

},{"./check.js":116,"./main.js":121,"./polyfill.js":122}],121:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var ctorName = require( '@stdlib/utils/constructor-name' );


// NOTES //

/*
* Built-in `typeof` operator behavior:
*
* ```text
* typeof null => 'object'
* typeof undefined => 'undefined'
* typeof 'a' => 'string'
* typeof 5 => 'number'
* typeof NaN => 'number'
* typeof true => 'boolean'
* typeof false => 'boolean'
* typeof {} => 'object'
* typeof [] => 'object'
* typeof function foo(){} => 'function'
* typeof function* foo(){} => 'object'
* typeof Symbol() => 'symbol'
* ```
*
*/


// MAIN //

/**
* Determines a value's type.
*
* @param {*} v - input value
* @returns {string} string indicating the value's type
*/
function typeOf( v ) {
	var type;

	// Address `typeof null` => `object` (see http://wiki.ecmascript.org/doku.php?id=harmony:typeof_null):
	if ( v === null ) {
		return 'null';
	}
	type = typeof v;

	// If the `typeof` operator returned something other than `object`, we are done. Otherwise, we need to check for an internal class name or search for a constructor.
	if ( type === 'object' ) {
		return ctorName( v ).toLowerCase();
	}
	return type;
}


// EXPORTS //

module.exports = typeOf;

},{"@stdlib/utils/constructor-name":89}],122:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var ctorName = require( '@stdlib/utils/constructor-name' );


// MAIN //

/**
* Determines a value's type.
*
* @param {*} v - input value
* @returns {string} string indicating the value's type
*/
function typeOf( v ) {
	return ctorName( v ).toLowerCase();
}


// EXPORTS //

module.exports = typeOf;

},{"@stdlib/utils/constructor-name":89}],123:[function(require,module,exports){
'use strict'

exports.byteLength = byteLength
exports.toByteArray = toByteArray
exports.fromByteArray = fromByteArray

var lookup = []
var revLookup = []
var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array

var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
for (var i = 0, len = code.length; i < len; ++i) {
  lookup[i] = code[i]
  revLookup[code.charCodeAt(i)] = i
}

// Support decoding URL-safe base64 strings, as Node.js does.
// See: https://en.wikipedia.org/wiki/Base64#URL_applications
revLookup['-'.charCodeAt(0)] = 62
revLookup['_'.charCodeAt(0)] = 63

function getLens (b64) {
  var len = b64.length

  if (len % 4 > 0) {
    throw new Error('Invalid string. Length must be a multiple of 4')
  }

  // Trim off extra bytes after placeholder bytes are found
  // See: https://github.com/beatgammit/base64-js/issues/42
  var validLen = b64.indexOf('=')
  if (validLen === -1) validLen = len

  var placeHoldersLen = validLen === len
    ? 0
    : 4 - (validLen % 4)

  return [validLen, placeHoldersLen]
}

// base64 is 4/3 + up to two characters of the original data
function byteLength (b64) {
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function _byteLength (b64, validLen, placeHoldersLen) {
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function toByteArray (b64) {
  var tmp
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]

  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))

  var curByte = 0

  // if there are placeholders, only get up to the last complete 4 chars
  var len = placeHoldersLen > 0
    ? validLen - 4
    : validLen

  var i
  for (i = 0; i < len; i += 4) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 18) |
      (revLookup[b64.charCodeAt(i + 1)] << 12) |
      (revLookup[b64.charCodeAt(i + 2)] << 6) |
      revLookup[b64.charCodeAt(i + 3)]
    arr[curByte++] = (tmp >> 16) & 0xFF
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 2) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 2) |
      (revLookup[b64.charCodeAt(i + 1)] >> 4)
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 1) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 10) |
      (revLookup[b64.charCodeAt(i + 1)] << 4) |
      (revLookup[b64.charCodeAt(i + 2)] >> 2)
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  return arr
}

function tripletToBase64 (num) {
  return lookup[num >> 18 & 0x3F] +
    lookup[num >> 12 & 0x3F] +
    lookup[num >> 6 & 0x3F] +
    lookup[num & 0x3F]
}

function encodeChunk (uint8, start, end) {
  var tmp
  var output = []
  for (var i = start; i < end; i += 3) {
    tmp =
      ((uint8[i] << 16) & 0xFF0000) +
      ((uint8[i + 1] << 8) & 0xFF00) +
      (uint8[i + 2] & 0xFF)
    output.push(tripletToBase64(tmp))
  }
  return output.join('')
}

function fromByteArray (uint8) {
  var tmp
  var len = uint8.length
  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes
  var parts = []
  var maxChunkLength = 16383 // must be multiple of 3

  // go through the array every three bytes, we'll deal with trailing stuff later
  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))
  }

  // pad the end with zeros, but make sure to not forget the extra bytes
  if (extraBytes === 1) {
    tmp = uint8[len - 1]
    parts.push(
      lookup[tmp >> 2] +
      lookup[(tmp << 4) & 0x3F] +
      '=='
    )
  } else if (extraBytes === 2) {
    tmp = (uint8[len - 2] << 8) + uint8[len - 1]
    parts.push(
      lookup[tmp >> 10] +
      lookup[(tmp >> 4) & 0x3F] +
      lookup[(tmp << 2) & 0x3F] +
      '='
    )
  }

  return parts.join('')
}

},{}],124:[function(require,module,exports){

},{}],125:[function(require,module,exports){
arguments[4][124][0].apply(exports,arguments)
},{"dup":124}],126:[function(require,module,exports){
(function (Buffer){(function (){
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
/* eslint-disable no-proto */

'use strict'

var base64 = require('base64-js')
var ieee754 = require('ieee754')

exports.Buffer = Buffer
exports.SlowBuffer = SlowBuffer
exports.INSPECT_MAX_BYTES = 50

var K_MAX_LENGTH = 0x7fffffff
exports.kMaxLength = K_MAX_LENGTH

/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Print warning and recommend using `buffer` v4.x which has an Object
 *               implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * We report that the browser does not support typed arrays if the are not subclassable
 * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`
 * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support
 * for __proto__ and has a buggy typed array implementation.
 */
Buffer.TYPED_ARRAY_SUPPORT = typedArraySupport()

if (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&
    typeof console.error === 'function') {
  console.error(
    'This browser lacks typed array (Uint8Array) support which is required by ' +
    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'
  )
}

function typedArraySupport () {
  // Can typed array instances can be augmented?
  try {
    var arr = new Uint8Array(1)
    arr.__proto__ = { __proto__: Uint8Array.prototype, foo: function () { return 42 } }
    return arr.foo() === 42
  } catch (e) {
    return false
  }
}

Object.defineProperty(Buffer.prototype, 'parent', {
  enumerable: true,
  get: function () {
    if (!Buffer.isBuffer(this)) return undefined
    return this.buffer
  }
})

Object.defineProperty(Buffer.prototype, 'offset', {
  enumerable: true,
  get: function () {
    if (!Buffer.isBuffer(this)) return undefined
    return this.byteOffset
  }
})

function createBuffer (length) {
  if (length > K_MAX_LENGTH) {
    throw new RangeError('The value "' + length + '" is invalid for option "size"')
  }
  // Return an augmented `Uint8Array` instance
  var buf = new Uint8Array(length)
  buf.__proto__ = Buffer.prototype
  return buf
}

/**
 * The Buffer constructor returns instances of `Uint8Array` that have their
 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
 * returns a single octet.
 *
 * The `Uint8Array` prototype remains unmodified.
 */

function Buffer (arg, encodingOrOffset, length) {
  // Common case.
  if (typeof arg === 'number') {
    if (typeof encodingOrOffset === 'string') {
      throw new TypeError(
        'The "string" argument must be of type string. Received type number'
      )
    }
    return allocUnsafe(arg)
  }
  return from(arg, encodingOrOffset, length)
}

// Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
if (typeof Symbol !== 'undefined' && Symbol.species != null &&
    Buffer[Symbol.species] === Buffer) {
  Object.defineProperty(Buffer, Symbol.species, {
    value: null,
    configurable: true,
    enumerable: false,
    writable: false
  })
}

Buffer.poolSize = 8192 // not used by this implementation

function from (value, encodingOrOffset, length) {
  if (typeof value === 'string') {
    return fromString(value, encodingOrOffset)
  }

  if (ArrayBuffer.isView(value)) {
    return fromArrayLike(value)
  }

  if (value == null) {
    throw TypeError(
      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +
      'or Array-like Object. Received type ' + (typeof value)
    )
  }

  if (isInstance(value, ArrayBuffer) ||
      (value && isInstance(value.buffer, ArrayBuffer))) {
    return fromArrayBuffer(value, encodingOrOffset, length)
  }

  if (typeof value === 'number') {
    throw new TypeError(
      'The "value" argument must not be of type number. Received type number'
    )
  }

  var valueOf = value.valueOf && value.valueOf()
  if (valueOf != null && valueOf !== value) {
    return Buffer.from(valueOf, encodingOrOffset, length)
  }

  var b = fromObject(value)
  if (b) return b

  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&
      typeof value[Symbol.toPrimitive] === 'function') {
    return Buffer.from(
      value[Symbol.toPrimitive]('string'), encodingOrOffset, length
    )
  }

  throw new TypeError(
    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +
    'or Array-like Object. Received type ' + (typeof value)
  )
}

/**
 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
 * if value is a number.
 * Buffer.from(str[, encoding])
 * Buffer.from(array)
 * Buffer.from(buffer)
 * Buffer.from(arrayBuffer[, byteOffset[, length]])
 **/
Buffer.from = function (value, encodingOrOffset, length) {
  return from(value, encodingOrOffset, length)
}

// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:
// https://github.com/feross/buffer/pull/148
Buffer.prototype.__proto__ = Uint8Array.prototype
Buffer.__proto__ = Uint8Array

function assertSize (size) {
  if (typeof size !== 'number') {
    throw new TypeError('"size" argument must be of type number')
  } else if (size < 0) {
    throw new RangeError('The value "' + size + '" is invalid for option "size"')
  }
}

function alloc (size, fill, encoding) {
  assertSize(size)
  if (size <= 0) {
    return createBuffer(size)
  }
  if (fill !== undefined) {
    // Only pay attention to encoding if it's a string. This
    // prevents accidentally sending in a number that would
    // be interpretted as a start offset.
    return typeof encoding === 'string'
      ? createBuffer(size).fill(fill, encoding)
      : createBuffer(size).fill(fill)
  }
  return createBuffer(size)
}

/**
 * Creates a new filled Buffer instance.
 * alloc(size[, fill[, encoding]])
 **/
Buffer.alloc = function (size, fill, encoding) {
  return alloc(size, fill, encoding)
}

function allocUnsafe (size) {
  assertSize(size)
  return createBuffer(size < 0 ? 0 : checked(size) | 0)
}

/**
 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
 * */
Buffer.allocUnsafe = function (size) {
  return allocUnsafe(size)
}
/**
 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
 */
Buffer.allocUnsafeSlow = function (size) {
  return allocUnsafe(size)
}

function fromString (string, encoding) {
  if (typeof encoding !== 'string' || encoding === '') {
    encoding = 'utf8'
  }

  if (!Buffer.isEncoding(encoding)) {
    throw new TypeError('Unknown encoding: ' + encoding)
  }

  var length = byteLength(string, encoding) | 0
  var buf = createBuffer(length)

  var actual = buf.write(string, encoding)

  if (actual !== length) {
    // Writing a hex string, for example, that contains invalid characters will
    // cause everything after the first invalid character to be ignored. (e.g.
    // 'abxxcd' will be treated as 'ab')
    buf = buf.slice(0, actual)
  }

  return buf
}

function fromArrayLike (array) {
  var length = array.length < 0 ? 0 : checked(array.length) | 0
  var buf = createBuffer(length)
  for (var i = 0; i < length; i += 1) {
    buf[i] = array[i] & 255
  }
  return buf
}

function fromArrayBuffer (array, byteOffset, length) {
  if (byteOffset < 0 || array.byteLength < byteOffset) {
    throw new RangeError('"offset" is outside of buffer bounds')
  }

  if (array.byteLength < byteOffset + (length || 0)) {
    throw new RangeError('"length" is outside of buffer bounds')
  }

  var buf
  if (byteOffset === undefined && length === undefined) {
    buf = new Uint8Array(array)
  } else if (length === undefined) {
    buf = new Uint8Array(array, byteOffset)
  } else {
    buf = new Uint8Array(array, byteOffset, length)
  }

  // Return an augmented `Uint8Array` instance
  buf.__proto__ = Buffer.prototype
  return buf
}

function fromObject (obj) {
  if (Buffer.isBuffer(obj)) {
    var len = checked(obj.length) | 0
    var buf = createBuffer(len)

    if (buf.length === 0) {
      return buf
    }

    obj.copy(buf, 0, 0, len)
    return buf
  }

  if (obj.length !== undefined) {
    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {
      return createBuffer(0)
    }
    return fromArrayLike(obj)
  }

  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {
    return fromArrayLike(obj.data)
  }
}

function checked (length) {
  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when
  // length is NaN (which is otherwise coerced to zero.)
  if (length >= K_MAX_LENGTH) {
    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')
  }
  return length | 0
}

function SlowBuffer (length) {
  if (+length != length) { // eslint-disable-line eqeqeq
    length = 0
  }
  return Buffer.alloc(+length)
}

Buffer.isBuffer = function isBuffer (b) {
  return b != null && b._isBuffer === true &&
    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false
}

Buffer.compare = function compare (a, b) {
  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)
  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)
  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
    throw new TypeError(
      'The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array'
    )
  }

  if (a === b) return 0

  var x = a.length
  var y = b.length

  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
    if (a[i] !== b[i]) {
      x = a[i]
      y = b[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

Buffer.isEncoding = function isEncoding (encoding) {
  switch (String(encoding).toLowerCase()) {
    case 'hex':
    case 'utf8':
    case 'utf-8':
    case 'ascii':
    case 'latin1':
    case 'binary':
    case 'base64':
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      return true
    default:
      return false
  }
}

Buffer.concat = function concat (list, length) {
  if (!Array.isArray(list)) {
    throw new TypeError('"list" argument must be an Array of Buffers')
  }

  if (list.length === 0) {
    return Buffer.alloc(0)
  }

  var i
  if (length === undefined) {
    length = 0
    for (i = 0; i < list.length; ++i) {
      length += list[i].length
    }
  }

  var buffer = Buffer.allocUnsafe(length)
  var pos = 0
  for (i = 0; i < list.length; ++i) {
    var buf = list[i]
    if (isInstance(buf, Uint8Array)) {
      buf = Buffer.from(buf)
    }
    if (!Buffer.isBuffer(buf)) {
      throw new TypeError('"list" argument must be an Array of Buffers')
    }
    buf.copy(buffer, pos)
    pos += buf.length
  }
  return buffer
}

function byteLength (string, encoding) {
  if (Buffer.isBuffer(string)) {
    return string.length
  }
  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {
    return string.byteLength
  }
  if (typeof string !== 'string') {
    throw new TypeError(
      'The "string" argument must be one of type string, Buffer, or ArrayBuffer. ' +
      'Received type ' + typeof string
    )
  }

  var len = string.length
  var mustMatch = (arguments.length > 2 && arguments[2] === true)
  if (!mustMatch && len === 0) return 0

  // Use a for loop to avoid recursion
  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'ascii':
      case 'latin1':
      case 'binary':
        return len
      case 'utf8':
      case 'utf-8':
        return utf8ToBytes(string).length
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return len * 2
      case 'hex':
        return len >>> 1
      case 'base64':
        return base64ToBytes(string).length
      default:
        if (loweredCase) {
          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8
        }
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}
Buffer.byteLength = byteLength

function slowToString (encoding, start, end) {
  var loweredCase = false

  // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
  // property of a typed array.

  // This behaves neither like String nor Uint8Array in that we set start/end
  // to their upper/lower bounds if the value passed is out of range.
  // undefined is handled specially as per ECMA-262 6th Edition,
  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
  if (start === undefined || start < 0) {
    start = 0
  }
  // Return early if start > this.length. Done here to prevent potential uint32
  // coercion fail below.
  if (start > this.length) {
    return ''
  }

  if (end === undefined || end > this.length) {
    end = this.length
  }

  if (end <= 0) {
    return ''
  }

  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
  end >>>= 0
  start >>>= 0

  if (end <= start) {
    return ''
  }

  if (!encoding) encoding = 'utf8'

  while (true) {
    switch (encoding) {
      case 'hex':
        return hexSlice(this, start, end)

      case 'utf8':
      case 'utf-8':
        return utf8Slice(this, start, end)

      case 'ascii':
        return asciiSlice(this, start, end)

      case 'latin1':
      case 'binary':
        return latin1Slice(this, start, end)

      case 'base64':
        return base64Slice(this, start, end)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return utf16leSlice(this, start, end)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = (encoding + '').toLowerCase()
        loweredCase = true
    }
  }
}

// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)
// to detect a Buffer instance. It's not possible to use `instanceof Buffer`
// reliably in a browserify context because there could be multiple different
// copies of the 'buffer' package in use. This method works even for Buffer
// instances that were created from another copy of the `buffer` package.
// See: https://github.com/feross/buffer/issues/154
Buffer.prototype._isBuffer = true

function swap (b, n, m) {
  var i = b[n]
  b[n] = b[m]
  b[m] = i
}

Buffer.prototype.swap16 = function swap16 () {
  var len = this.length
  if (len % 2 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 16-bits')
  }
  for (var i = 0; i < len; i += 2) {
    swap(this, i, i + 1)
  }
  return this
}

Buffer.prototype.swap32 = function swap32 () {
  var len = this.length
  if (len % 4 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 32-bits')
  }
  for (var i = 0; i < len; i += 4) {
    swap(this, i, i + 3)
    swap(this, i + 1, i + 2)
  }
  return this
}

Buffer.prototype.swap64 = function swap64 () {
  var len = this.length
  if (len % 8 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 64-bits')
  }
  for (var i = 0; i < len; i += 8) {
    swap(this, i, i + 7)
    swap(this, i + 1, i + 6)
    swap(this, i + 2, i + 5)
    swap(this, i + 3, i + 4)
  }
  return this
}

Buffer.prototype.toString = function toString () {
  var length = this.length
  if (length === 0) return ''
  if (arguments.length === 0) return utf8Slice(this, 0, length)
  return slowToString.apply(this, arguments)
}

Buffer.prototype.toLocaleString = Buffer.prototype.toString

Buffer.prototype.equals = function equals (b) {
  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
  if (this === b) return true
  return Buffer.compare(this, b) === 0
}

Buffer.prototype.inspect = function inspect () {
  var str = ''
  var max = exports.INSPECT_MAX_BYTES
  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()
  if (this.length > max) str += ' ... '
  return '<Buffer ' + str + '>'
}

Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {
  if (isInstance(target, Uint8Array)) {
    target = Buffer.from(target, target.offset, target.byteLength)
  }
  if (!Buffer.isBuffer(target)) {
    throw new TypeError(
      'The "target" argument must be one of type Buffer or Uint8Array. ' +
      'Received type ' + (typeof target)
    )
  }

  if (start === undefined) {
    start = 0
  }
  if (end === undefined) {
    end = target ? target.length : 0
  }
  if (thisStart === undefined) {
    thisStart = 0
  }
  if (thisEnd === undefined) {
    thisEnd = this.length
  }

  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
    throw new RangeError('out of range index')
  }

  if (thisStart >= thisEnd && start >= end) {
    return 0
  }
  if (thisStart >= thisEnd) {
    return -1
  }
  if (start >= end) {
    return 1
  }

  start >>>= 0
  end >>>= 0
  thisStart >>>= 0
  thisEnd >>>= 0

  if (this === target) return 0

  var x = thisEnd - thisStart
  var y = end - start
  var len = Math.min(x, y)

  var thisCopy = this.slice(thisStart, thisEnd)
  var targetCopy = target.slice(start, end)

  for (var i = 0; i < len; ++i) {
    if (thisCopy[i] !== targetCopy[i]) {
      x = thisCopy[i]
      y = targetCopy[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
//
// Arguments:
// - buffer - a Buffer to search
// - val - a string, Buffer, or number
// - byteOffset - an index into `buffer`; will be clamped to an int32
// - encoding - an optional encoding, relevant is val is a string
// - dir - true for indexOf, false for lastIndexOf
function bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {
  // Empty buffer means no match
  if (buffer.length === 0) return -1

  // Normalize byteOffset
  if (typeof byteOffset === 'string') {
    encoding = byteOffset
    byteOffset = 0
  } else if (byteOffset > 0x7fffffff) {
    byteOffset = 0x7fffffff
  } else if (byteOffset < -0x80000000) {
    byteOffset = -0x80000000
  }
  byteOffset = +byteOffset // Coerce to Number.
  if (numberIsNaN(byteOffset)) {
    // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
    byteOffset = dir ? 0 : (buffer.length - 1)
  }

  // Normalize byteOffset: negative offsets start from the end of the buffer
  if (byteOffset < 0) byteOffset = buffer.length + byteOffset
  if (byteOffset >= buffer.length) {
    if (dir) return -1
    else byteOffset = buffer.length - 1
  } else if (byteOffset < 0) {
    if (dir) byteOffset = 0
    else return -1
  }

  // Normalize val
  if (typeof val === 'string') {
    val = Buffer.from(val, encoding)
  }

  // Finally, search either indexOf (if dir is true) or lastIndexOf
  if (Buffer.isBuffer(val)) {
    // Special case: looking for empty string/buffer always fails
    if (val.length === 0) {
      return -1
    }
    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)
  } else if (typeof val === 'number') {
    val = val & 0xFF // Search for a byte value [0-255]
    if (typeof Uint8Array.prototype.indexOf === 'function') {
      if (dir) {
        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)
      } else {
        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)
      }
    }
    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)
  }

  throw new TypeError('val must be string, number or Buffer')
}

function arrayIndexOf (arr, val, byteOffset, encoding, dir) {
  var indexSize = 1
  var arrLength = arr.length
  var valLength = val.length

  if (encoding !== undefined) {
    encoding = String(encoding).toLowerCase()
    if (encoding === 'ucs2' || encoding === 'ucs-2' ||
        encoding === 'utf16le' || encoding === 'utf-16le') {
      if (arr.length < 2 || val.length < 2) {
        return -1
      }
      indexSize = 2
      arrLength /= 2
      valLength /= 2
      byteOffset /= 2
    }
  }

  function read (buf, i) {
    if (indexSize === 1) {
      return buf[i]
    } else {
      return buf.readUInt16BE(i * indexSize)
    }
  }

  var i
  if (dir) {
    var foundIndex = -1
    for (i = byteOffset; i < arrLength; i++) {
      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
        if (foundIndex === -1) foundIndex = i
        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize
      } else {
        if (foundIndex !== -1) i -= i - foundIndex
        foundIndex = -1
      }
    }
  } else {
    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength
    for (i = byteOffset; i >= 0; i--) {
      var found = true
      for (var j = 0; j < valLength; j++) {
        if (read(arr, i + j) !== read(val, j)) {
          found = false
          break
        }
      }
      if (found) return i
    }
  }

  return -1
}

Buffer.prototype.includes = function includes (val, byteOffset, encoding) {
  return this.indexOf(val, byteOffset, encoding) !== -1
}

Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)
}

Buffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)
}

function hexWrite (buf, string, offset, length) {
  offset = Number(offset) || 0
  var remaining = buf.length - offset
  if (!length) {
    length = remaining
  } else {
    length = Number(length)
    if (length > remaining) {
      length = remaining
    }
  }

  var strLen = string.length

  if (length > strLen / 2) {
    length = strLen / 2
  }
  for (var i = 0; i < length; ++i) {
    var parsed = parseInt(string.substr(i * 2, 2), 16)
    if (numberIsNaN(parsed)) return i
    buf[offset + i] = parsed
  }
  return i
}

function utf8Write (buf, string, offset, length) {
  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
}

function asciiWrite (buf, string, offset, length) {
  return blitBuffer(asciiToBytes(string), buf, offset, length)
}

function latin1Write (buf, string, offset, length) {
  return asciiWrite(buf, string, offset, length)
}

function base64Write (buf, string, offset, length) {
  return blitBuffer(base64ToBytes(string), buf, offset, length)
}

function ucs2Write (buf, string, offset, length) {
  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
}

Buffer.prototype.write = function write (string, offset, length, encoding) {
  // Buffer#write(string)
  if (offset === undefined) {
    encoding = 'utf8'
    length = this.length
    offset = 0
  // Buffer#write(string, encoding)
  } else if (length === undefined && typeof offset === 'string') {
    encoding = offset
    length = this.length
    offset = 0
  // Buffer#write(string, offset[, length][, encoding])
  } else if (isFinite(offset)) {
    offset = offset >>> 0
    if (isFinite(length)) {
      length = length >>> 0
      if (encoding === undefined) encoding = 'utf8'
    } else {
      encoding = length
      length = undefined
    }
  } else {
    throw new Error(
      'Buffer.write(string, encoding, offset[, length]) is no longer supported'
    )
  }

  var remaining = this.length - offset
  if (length === undefined || length > remaining) length = remaining

  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
    throw new RangeError('Attempt to write outside buffer bounds')
  }

  if (!encoding) encoding = 'utf8'

  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'hex':
        return hexWrite(this, string, offset, length)

      case 'utf8':
      case 'utf-8':
        return utf8Write(this, string, offset, length)

      case 'ascii':
        return asciiWrite(this, string, offset, length)

      case 'latin1':
      case 'binary':
        return latin1Write(this, string, offset, length)

      case 'base64':
        // Warning: maxLength not taken into account in base64Write
        return base64Write(this, string, offset, length)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return ucs2Write(this, string, offset, length)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}

Buffer.prototype.toJSON = function toJSON () {
  return {
    type: 'Buffer',
    data: Array.prototype.slice.call(this._arr || this, 0)
  }
}

function base64Slice (buf, start, end) {
  if (start === 0 && end === buf.length) {
    return base64.fromByteArray(buf)
  } else {
    return base64.fromByteArray(buf.slice(start, end))
  }
}

function utf8Slice (buf, start, end) {
  end = Math.min(buf.length, end)
  var res = []

  var i = start
  while (i < end) {
    var firstByte = buf[i]
    var codePoint = null
    var bytesPerSequence = (firstByte > 0xEF) ? 4
      : (firstByte > 0xDF) ? 3
        : (firstByte > 0xBF) ? 2
          : 1

    if (i + bytesPerSequence <= end) {
      var secondByte, thirdByte, fourthByte, tempCodePoint

      switch (bytesPerSequence) {
        case 1:
          if (firstByte < 0x80) {
            codePoint = firstByte
          }
          break
        case 2:
          secondByte = buf[i + 1]
          if ((secondByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
            if (tempCodePoint > 0x7F) {
              codePoint = tempCodePoint
            }
          }
          break
        case 3:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
              codePoint = tempCodePoint
            }
          }
          break
        case 4:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          fourthByte = buf[i + 3]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
              codePoint = tempCodePoint
            }
          }
      }
    }

    if (codePoint === null) {
      // we did not generate a valid codePoint so insert a
      // replacement char (U+FFFD) and advance only 1 byte
      codePoint = 0xFFFD
      bytesPerSequence = 1
    } else if (codePoint > 0xFFFF) {
      // encode to utf16 (surrogate pair dance)
      codePoint -= 0x10000
      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
      codePoint = 0xDC00 | codePoint & 0x3FF
    }

    res.push(codePoint)
    i += bytesPerSequence
  }

  return decodeCodePointsArray(res)
}

// Based on http://stackoverflow.com/a/22747272/680742, the browser with
// the lowest limit is Chrome, with 0x10000 args.
// We go 1 magnitude less, for safety
var MAX_ARGUMENTS_LENGTH = 0x1000

function decodeCodePointsArray (codePoints) {
  var len = codePoints.length
  if (len <= MAX_ARGUMENTS_LENGTH) {
    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
  }

  // Decode in chunks to avoid "call stack size exceeded".
  var res = ''
  var i = 0
  while (i < len) {
    res += String.fromCharCode.apply(
      String,
      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
    )
  }
  return res
}

function asciiSlice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i] & 0x7F)
  }
  return ret
}

function latin1Slice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i])
  }
  return ret
}

function hexSlice (buf, start, end) {
  var len = buf.length

  if (!start || start < 0) start = 0
  if (!end || end < 0 || end > len) end = len

  var out = ''
  for (var i = start; i < end; ++i) {
    out += toHex(buf[i])
  }
  return out
}

function utf16leSlice (buf, start, end) {
  var bytes = buf.slice(start, end)
  var res = ''
  for (var i = 0; i < bytes.length; i += 2) {
    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))
  }
  return res
}

Buffer.prototype.slice = function slice (start, end) {
  var len = this.length
  start = ~~start
  end = end === undefined ? len : ~~end

  if (start < 0) {
    start += len
    if (start < 0) start = 0
  } else if (start > len) {
    start = len
  }

  if (end < 0) {
    end += len
    if (end < 0) end = 0
  } else if (end > len) {
    end = len
  }

  if (end < start) end = start

  var newBuf = this.subarray(start, end)
  // Return an augmented `Uint8Array` instance
  newBuf.__proto__ = Buffer.prototype
  return newBuf
}

/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */
function checkOffset (offset, ext, length) {
  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
}

Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }

  return val
}

Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    checkOffset(offset, byteLength, this.length)
  }

  var val = this[offset + --byteLength]
  var mul = 1
  while (byteLength > 0 && (mul *= 0x100)) {
    val += this[offset + --byteLength] * mul
  }

  return val
}

Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 1, this.length)
  return this[offset]
}

Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  return this[offset] | (this[offset + 1] << 8)
}

Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  return (this[offset] << 8) | this[offset + 1]
}

Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return ((this[offset]) |
      (this[offset + 1] << 8) |
      (this[offset + 2] << 16)) +
      (this[offset + 3] * 0x1000000)
}

Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] * 0x1000000) +
    ((this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    this[offset + 3])
}

Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var i = byteLength
  var mul = 1
  var val = this[offset + --i]
  while (i > 0 && (mul *= 0x100)) {
    val += this[offset + --i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 1, this.length)
  if (!(this[offset] & 0x80)) return (this[offset])
  return ((0xff - this[offset] + 1) * -1)
}

Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset] | (this[offset + 1] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset + 1] | (this[offset] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset]) |
    (this[offset + 1] << 8) |
    (this[offset + 2] << 16) |
    (this[offset + 3] << 24)
}

Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] << 24) |
    (this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    (this[offset + 3])
}

Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, true, 23, 4)
}

Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, false, 23, 4)
}

Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, true, 52, 8)
}

Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, false, 52, 8)
}

function checkInt (buf, value, offset, ext, max, min) {
  if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance')
  if (value > max || value < min) throw new RangeError('"value" argument is out of bounds')
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
}

Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var mul = 1
  var i = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var i = byteLength - 1
  var mul = 1
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  return offset + 2
}

Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  this[offset] = (value >>> 8)
  this[offset + 1] = (value & 0xff)
  return offset + 2
}

Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  this[offset + 3] = (value >>> 24)
  this[offset + 2] = (value >>> 16)
  this[offset + 1] = (value >>> 8)
  this[offset] = (value & 0xff)
  return offset + 4
}

Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  this[offset] = (value >>> 24)
  this[offset + 1] = (value >>> 16)
  this[offset + 2] = (value >>> 8)
  this[offset + 3] = (value & 0xff)
  return offset + 4
}

Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    var limit = Math.pow(2, (8 * byteLength) - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = 0
  var mul = 1
  var sub = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    var limit = Math.pow(2, (8 * byteLength) - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = byteLength - 1
  var mul = 1
  var sub = 0
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
  if (value < 0) value = 0xff + value + 1
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  return offset + 2
}

Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  this[offset] = (value >>> 8)
  this[offset + 1] = (value & 0xff)
  return offset + 2
}

Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  this[offset + 2] = (value >>> 16)
  this[offset + 3] = (value >>> 24)
  return offset + 4
}

Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (value < 0) value = 0xffffffff + value + 1
  this[offset] = (value >>> 24)
  this[offset + 1] = (value >>> 16)
  this[offset + 2] = (value >>> 8)
  this[offset + 3] = (value & 0xff)
  return offset + 4
}

function checkIEEE754 (buf, value, offset, ext, max, min) {
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
  if (offset < 0) throw new RangeError('Index out of range')
}

function writeFloat (buf, value, offset, littleEndian, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
  }
  ieee754.write(buf, value, offset, littleEndian, 23, 4)
  return offset + 4
}

Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
  return writeFloat(this, value, offset, true, noAssert)
}

Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
  return writeFloat(this, value, offset, false, noAssert)
}

function writeDouble (buf, value, offset, littleEndian, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
  }
  ieee754.write(buf, value, offset, littleEndian, 52, 8)
  return offset + 8
}

Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
  return writeDouble(this, value, offset, true, noAssert)
}

Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
  return writeDouble(this, value, offset, false, noAssert)
}

// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Buffer.prototype.copy = function copy (target, targetStart, start, end) {
  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')
  if (!start) start = 0
  if (!end && end !== 0) end = this.length
  if (targetStart >= target.length) targetStart = target.length
  if (!targetStart) targetStart = 0
  if (end > 0 && end < start) end = start

  // Copy 0 bytes; we're done
  if (end === start) return 0
  if (target.length === 0 || this.length === 0) return 0

  // Fatal error conditions
  if (targetStart < 0) {
    throw new RangeError('targetStart out of bounds')
  }
  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')
  if (end < 0) throw new RangeError('sourceEnd out of bounds')

  // Are we oob?
  if (end > this.length) end = this.length
  if (target.length - targetStart < end - start) {
    end = target.length - targetStart + start
  }

  var len = end - start

  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {
    // Use built-in when available, missing from IE11
    this.copyWithin(targetStart, start, end)
  } else if (this === target && start < targetStart && targetStart < end) {
    // descending copy from end
    for (var i = len - 1; i >= 0; --i) {
      target[i + targetStart] = this[i + start]
    }
  } else {
    Uint8Array.prototype.set.call(
      target,
      this.subarray(start, end),
      targetStart
    )
  }

  return len
}

// Usage:
//    buffer.fill(number[, offset[, end]])
//    buffer.fill(buffer[, offset[, end]])
//    buffer.fill(string[, offset[, end]][, encoding])
Buffer.prototype.fill = function fill (val, start, end, encoding) {
  // Handle string cases:
  if (typeof val === 'string') {
    if (typeof start === 'string') {
      encoding = start
      start = 0
      end = this.length
    } else if (typeof end === 'string') {
      encoding = end
      end = this.length
    }
    if (encoding !== undefined && typeof encoding !== 'string') {
      throw new TypeError('encoding must be a string')
    }
    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
      throw new TypeError('Unknown encoding: ' + encoding)
    }
    if (val.length === 1) {
      var code = val.charCodeAt(0)
      if ((encoding === 'utf8' && code < 128) ||
          encoding === 'latin1') {
        // Fast path: If `val` fits into a single byte, use that numeric value.
        val = code
      }
    }
  } else if (typeof val === 'number') {
    val = val & 255
  }

  // Invalid ranges are not set to a default, so can range check early.
  if (start < 0 || this.length < start || this.length < end) {
    throw new RangeError('Out of range index')
  }

  if (end <= start) {
    return this
  }

  start = start >>> 0
  end = end === undefined ? this.length : end >>> 0

  if (!val) val = 0

  var i
  if (typeof val === 'number') {
    for (i = start; i < end; ++i) {
      this[i] = val
    }
  } else {
    var bytes = Buffer.isBuffer(val)
      ? val
      : Buffer.from(val, encoding)
    var len = bytes.length
    if (len === 0) {
      throw new TypeError('The value "' + val +
        '" is invalid for argument "value"')
    }
    for (i = 0; i < end - start; ++i) {
      this[i + start] = bytes[i % len]
    }
  }

  return this
}

// HELPER FUNCTIONS
// ================

var INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g

function base64clean (str) {
  // Node takes equal signs as end of the Base64 encoding
  str = str.split('=')[0]
  // Node strips out invalid characters like \n and \t from the string, base64-js does not
  str = str.trim().replace(INVALID_BASE64_RE, '')
  // Node converts strings with length < 2 to ''
  if (str.length < 2) return ''
  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
  while (str.length % 4 !== 0) {
    str = str + '='
  }
  return str
}

function toHex (n) {
  if (n < 16) return '0' + n.toString(16)
  return n.toString(16)
}

function utf8ToBytes (string, units) {
  units = units || Infinity
  var codePoint
  var length = string.length
  var leadSurrogate = null
  var bytes = []

  for (var i = 0; i < length; ++i) {
    codePoint = string.charCodeAt(i)

    // is surrogate component
    if (codePoint > 0xD7FF && codePoint < 0xE000) {
      // last char was a lead
      if (!leadSurrogate) {
        // no lead yet
        if (codePoint > 0xDBFF) {
          // unexpected trail
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        } else if (i + 1 === length) {
          // unpaired lead
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        }

        // valid lead
        leadSurrogate = codePoint

        continue
      }

      // 2 leads in a row
      if (codePoint < 0xDC00) {
        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
        leadSurrogate = codePoint
        continue
      }

      // valid surrogate pair
      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
    } else if (leadSurrogate) {
      // valid bmp char, but last char was a lead
      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
    }

    leadSurrogate = null

    // encode utf8
    if (codePoint < 0x80) {
      if ((units -= 1) < 0) break
      bytes.push(codePoint)
    } else if (codePoint < 0x800) {
      if ((units -= 2) < 0) break
      bytes.push(
        codePoint >> 0x6 | 0xC0,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x10000) {
      if ((units -= 3) < 0) break
      bytes.push(
        codePoint >> 0xC | 0xE0,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x110000) {
      if ((units -= 4) < 0) break
      bytes.push(
        codePoint >> 0x12 | 0xF0,
        codePoint >> 0xC & 0x3F | 0x80,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else {
      throw new Error('Invalid code point')
    }
  }

  return bytes
}

function asciiToBytes (str) {
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    // Node's code seems to be doing this and not & 0x7F..
    byteArray.push(str.charCodeAt(i) & 0xFF)
  }
  return byteArray
}

function utf16leToBytes (str, units) {
  var c, hi, lo
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    if ((units -= 2) < 0) break

    c = str.charCodeAt(i)
    hi = c >> 8
    lo = c % 256
    byteArray.push(lo)
    byteArray.push(hi)
  }

  return byteArray
}

function base64ToBytes (str) {
  return base64.toByteArray(base64clean(str))
}

function blitBuffer (src, dst, offset, length) {
  for (var i = 0; i < length; ++i) {
    if ((i + offset >= dst.length) || (i >= src.length)) break
    dst[i + offset] = src[i]
  }
  return i
}

// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass
// the `instanceof` check but they should be treated as of that type.
// See: https://github.com/feross/buffer/issues/166
function isInstance (obj, type) {
  return obj instanceof type ||
    (obj != null && obj.constructor != null && obj.constructor.name != null &&
      obj.constructor.name === type.name)
}
function numberIsNaN (obj) {
  // For IE11 support
  return obj !== obj // eslint-disable-line no-self-compare
}

}).call(this)}).call(this,require("buffer").Buffer)
},{"base64-js":123,"buffer":126,"ieee754":229}],127:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

'use strict';

var R = typeof Reflect === 'object' ? Reflect : null
var ReflectApply = R && typeof R.apply === 'function'
  ? R.apply
  : function ReflectApply(target, receiver, args) {
    return Function.prototype.apply.call(target, receiver, args);
  }

var ReflectOwnKeys
if (R && typeof R.ownKeys === 'function') {
  ReflectOwnKeys = R.ownKeys
} else if (Object.getOwnPropertySymbols) {
  ReflectOwnKeys = function ReflectOwnKeys(target) {
    return Object.getOwnPropertyNames(target)
      .concat(Object.getOwnPropertySymbols(target));
  };
} else {
  ReflectOwnKeys = function ReflectOwnKeys(target) {
    return Object.getOwnPropertyNames(target);
  };
}

function ProcessEmitWarning(warning) {
  if (console && console.warn) console.warn(warning);
}

var NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {
  return value !== value;
}

function EventEmitter() {
  EventEmitter.init.call(this);
}
module.exports = EventEmitter;
module.exports.once = once;

// Backwards-compat with node 0.10.x
EventEmitter.EventEmitter = EventEmitter;

EventEmitter.prototype._events = undefined;
EventEmitter.prototype._eventsCount = 0;
EventEmitter.prototype._maxListeners = undefined;

// By default EventEmitters will print a warning if more than 10 listeners are
// added to it. This is a useful default which helps finding memory leaks.
var defaultMaxListeners = 10;

function checkListener(listener) {
  if (typeof listener !== 'function') {
    throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof listener);
  }
}

Object.defineProperty(EventEmitter, 'defaultMaxListeners', {
  enumerable: true,
  get: function() {
    return defaultMaxListeners;
  },
  set: function(arg) {
    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {
      throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + arg + '.');
    }
    defaultMaxListeners = arg;
  }
});

EventEmitter.init = function() {

  if (this._events === undefined ||
      this._events === Object.getPrototypeOf(this)._events) {
    this._events = Object.create(null);
    this._eventsCount = 0;
  }

  this._maxListeners = this._maxListeners || undefined;
};

// Obviously not all Emitters should be limited to 10. This function allows
// that to be increased. Set to zero for unlimited.
EventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {
  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {
    throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + n + '.');
  }
  this._maxListeners = n;
  return this;
};

function _getMaxListeners(that) {
  if (that._maxListeners === undefined)
    return EventEmitter.defaultMaxListeners;
  return that._maxListeners;
}

EventEmitter.prototype.getMaxListeners = function getMaxListeners() {
  return _getMaxListeners(this);
};

EventEmitter.prototype.emit = function emit(type) {
  var args = [];
  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);
  var doError = (type === 'error');

  var events = this._events;
  if (events !== undefined)
    doError = (doError && events.error === undefined);
  else if (!doError)
    return false;

  // If there is no 'error' event listener then throw.
  if (doError) {
    var er;
    if (args.length > 0)
      er = args[0];
    if (er instanceof Error) {
      // Note: The comments on the `throw` lines are intentional, they show
      // up in Node's output if this results in an unhandled exception.
      throw er; // Unhandled 'error' event
    }
    // At least give some kind of context to the user
    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));
    err.context = er;
    throw err; // Unhandled 'error' event
  }

  var handler = events[type];

  if (handler === undefined)
    return false;

  if (typeof handler === 'function') {
    ReflectApply(handler, this, args);
  } else {
    var len = handler.length;
    var listeners = arrayClone(handler, len);
    for (var i = 0; i < len; ++i)
      ReflectApply(listeners[i], this, args);
  }

  return true;
};

function _addListener(target, type, listener, prepend) {
  var m;
  var events;
  var existing;

  checkListener(listener);

  events = target._events;
  if (events === undefined) {
    events = target._events = Object.create(null);
    target._eventsCount = 0;
  } else {
    // To avoid recursion in the case that type === "newListener"! Before
    // adding it to the listeners, first emit "newListener".
    if (events.newListener !== undefined) {
      target.emit('newListener', type,
                  listener.listener ? listener.listener : listener);

      // Re-assign `events` because a newListener handler could have caused the
      // this._events to be assigned to a new object
      events = target._events;
    }
    existing = events[type];
  }

  if (existing === undefined) {
    // Optimize the case of one listener. Don't need the extra array object.
    existing = events[type] = listener;
    ++target._eventsCount;
  } else {
    if (typeof existing === 'function') {
      // Adding the second element, need to change to array.
      existing = events[type] =
        prepend ? [listener, existing] : [existing, listener];
      // If we've already got an array, just append.
    } else if (prepend) {
      existing.unshift(listener);
    } else {
      existing.push(listener);
    }

    // Check for listener leak
    m = _getMaxListeners(target);
    if (m > 0 && existing.length > m && !existing.warned) {
      existing.warned = true;
      // No error code for this since it is a Warning
      // eslint-disable-next-line no-restricted-syntax
      var w = new Error('Possible EventEmitter memory leak detected. ' +
                          existing.length + ' ' + String(type) + ' listeners ' +
                          'added. Use emitter.setMaxListeners() to ' +
                          'increase limit');
      w.name = 'MaxListenersExceededWarning';
      w.emitter = target;
      w.type = type;
      w.count = existing.length;
      ProcessEmitWarning(w);
    }
  }

  return target;
}

EventEmitter.prototype.addListener = function addListener(type, listener) {
  return _addListener(this, type, listener, false);
};

EventEmitter.prototype.on = EventEmitter.prototype.addListener;

EventEmitter.prototype.prependListener =
    function prependListener(type, listener) {
      return _addListener(this, type, listener, true);
    };

function onceWrapper() {
  if (!this.fired) {
    this.target.removeListener(this.type, this.wrapFn);
    this.fired = true;
    if (arguments.length === 0)
      return this.listener.call(this.target);
    return this.listener.apply(this.target, arguments);
  }
}

function _onceWrap(target, type, listener) {
  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };
  var wrapped = onceWrapper.bind(state);
  wrapped.listener = listener;
  state.wrapFn = wrapped;
  return wrapped;
}

EventEmitter.prototype.once = function once(type, listener) {
  checkListener(listener);
  this.on(type, _onceWrap(this, type, listener));
  return this;
};

EventEmitter.prototype.prependOnceListener =
    function prependOnceListener(type, listener) {
      checkListener(listener);
      this.prependListener(type, _onceWrap(this, type, listener));
      return this;
    };

// Emits a 'removeListener' event if and only if the listener was removed.
EventEmitter.prototype.removeListener =
    function removeListener(type, listener) {
      var list, events, position, i, originalListener;

      checkListener(listener);

      events = this._events;
      if (events === undefined)
        return this;

      list = events[type];
      if (list === undefined)
        return this;

      if (list === listener || list.listener === listener) {
        if (--this._eventsCount === 0)
          this._events = Object.create(null);
        else {
          delete events[type];
          if (events.removeListener)
            this.emit('removeListener', type, list.listener || listener);
        }
      } else if (typeof list !== 'function') {
        position = -1;

        for (i = list.length - 1; i >= 0; i--) {
          if (list[i] === listener || list[i].listener === listener) {
            originalListener = list[i].listener;
            position = i;
            break;
          }
        }

        if (position < 0)
          return this;

        if (position === 0)
          list.shift();
        else {
          spliceOne(list, position);
        }

        if (list.length === 1)
          events[type] = list[0];

        if (events.removeListener !== undefined)
          this.emit('removeListener', type, originalListener || listener);
      }

      return this;
    };

EventEmitter.prototype.off = EventEmitter.prototype.removeListener;

EventEmitter.prototype.removeAllListeners =
    function removeAllListeners(type) {
      var listeners, events, i;

      events = this._events;
      if (events === undefined)
        return this;

      // not listening for removeListener, no need to emit
      if (events.removeListener === undefined) {
        if (arguments.length === 0) {
          this._events = Object.create(null);
          this._eventsCount = 0;
        } else if (events[type] !== undefined) {
          if (--this._eventsCount === 0)
            this._events = Object.create(null);
          else
            delete events[type];
        }
        return this;
      }

      // emit removeListener for all listeners on all events
      if (arguments.length === 0) {
        var keys = Object.keys(events);
        var key;
        for (i = 0; i < keys.length; ++i) {
          key = keys[i];
          if (key === 'removeListener') continue;
          this.removeAllListeners(key);
        }
        this.removeAllListeners('removeListener');
        this._events = Object.create(null);
        this._eventsCount = 0;
        return this;
      }

      listeners = events[type];

      if (typeof listeners === 'function') {
        this.removeListener(type, listeners);
      } else if (listeners !== undefined) {
        // LIFO order
        for (i = listeners.length - 1; i >= 0; i--) {
          this.removeListener(type, listeners[i]);
        }
      }

      return this;
    };

function _listeners(target, type, unwrap) {
  var events = target._events;

  if (events === undefined)
    return [];

  var evlistener = events[type];
  if (evlistener === undefined)
    return [];

  if (typeof evlistener === 'function')
    return unwrap ? [evlistener.listener || evlistener] : [evlistener];

  return unwrap ?
    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);
}

EventEmitter.prototype.listeners = function listeners(type) {
  return _listeners(this, type, true);
};

EventEmitter.prototype.rawListeners = function rawListeners(type) {
  return _listeners(this, type, false);
};

EventEmitter.listenerCount = function(emitter, type) {
  if (typeof emitter.listenerCount === 'function') {
    return emitter.listenerCount(type);
  } else {
    return listenerCount.call(emitter, type);
  }
};

EventEmitter.prototype.listenerCount = listenerCount;
function listenerCount(type) {
  var events = this._events;

  if (events !== undefined) {
    var evlistener = events[type];

    if (typeof evlistener === 'function') {
      return 1;
    } else if (evlistener !== undefined) {
      return evlistener.length;
    }
  }

  return 0;
}

EventEmitter.prototype.eventNames = function eventNames() {
  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];
};

function arrayClone(arr, n) {
  var copy = new Array(n);
  for (var i = 0; i < n; ++i)
    copy[i] = arr[i];
  return copy;
}

function spliceOne(list, index) {
  for (; index + 1 < list.length; index++)
    list[index] = list[index + 1];
  list.pop();
}

function unwrapListeners(arr) {
  var ret = new Array(arr.length);
  for (var i = 0; i < ret.length; ++i) {
    ret[i] = arr[i].listener || arr[i];
  }
  return ret;
}

function once(emitter, name) {
  return new Promise(function (resolve, reject) {
    function errorListener(err) {
      emitter.removeListener(name, resolver);
      reject(err);
    }

    function resolver() {
      if (typeof emitter.removeListener === 'function') {
        emitter.removeListener('error', errorListener);
      }
      resolve([].slice.call(arguments));
    };

    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });
    if (name !== 'error') {
      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });
    }
  });
}

function addErrorHandlerIfEventEmitter(emitter, handler, flags) {
  if (typeof emitter.on === 'function') {
    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);
  }
}

function eventTargetAgnosticAddListener(emitter, name, listener, flags) {
  if (typeof emitter.on === 'function') {
    if (flags.once) {
      emitter.once(name, listener);
    } else {
      emitter.on(name, listener);
    }
  } else if (typeof emitter.addEventListener === 'function') {
    // EventTarget does not have `error` event semantics like Node
    // EventEmitters, we do not listen for `error` events here.
    emitter.addEventListener(name, function wrapListener(arg) {
      // IE does not have builtin `{ once: true }` support so we
      // have to do it manually.
      if (flags.once) {
        emitter.removeEventListener(name, wrapListener);
      }
      listener(arg);
    });
  } else {
    throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type ' + typeof emitter);
  }
}

},{}],128:[function(require,module,exports){
(function (process){(function (){
// 'path' module extracted from Node.js v8.11.1 (only the posix part)
// transplited with Babel

// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

'use strict';

function assertPath(path) {
  if (typeof path !== 'string') {
    throw new TypeError('Path must be a string. Received ' + JSON.stringify(path));
  }
}

// Resolves . and .. elements in a path with directory names
function normalizeStringPosix(path, allowAboveRoot) {
  var res = '';
  var lastSegmentLength = 0;
  var lastSlash = -1;
  var dots = 0;
  var code;
  for (var i = 0; i <= path.length; ++i) {
    if (i < path.length)
      code = path.charCodeAt(i);
    else if (code === 47 /*/*/)
      break;
    else
      code = 47 /*/*/;
    if (code === 47 /*/*/) {
      if (lastSlash === i - 1 || dots === 1) {
        // NOOP
      } else if (lastSlash !== i - 1 && dots === 2) {
        if (res.length < 2 || lastSegmentLength !== 2 || res.charCodeAt(res.length - 1) !== 46 /*.*/ || res.charCodeAt(res.length - 2) !== 46 /*.*/) {
          if (res.length > 2) {
            var lastSlashIndex = res.lastIndexOf('/');
            if (lastSlashIndex !== res.length - 1) {
              if (lastSlashIndex === -1) {
                res = '';
                lastSegmentLength = 0;
              } else {
                res = res.slice(0, lastSlashIndex);
                lastSegmentLength = res.length - 1 - res.lastIndexOf('/');
              }
              lastSlash = i;
              dots = 0;
              continue;
            }
          } else if (res.length === 2 || res.length === 1) {
            res = '';
            lastSegmentLength = 0;
            lastSlash = i;
            dots = 0;
            continue;
          }
        }
        if (allowAboveRoot) {
          if (res.length > 0)
            res += '/..';
          else
            res = '..';
          lastSegmentLength = 2;
        }
      } else {
        if (res.length > 0)
          res += '/' + path.slice(lastSlash + 1, i);
        else
          res = path.slice(lastSlash + 1, i);
        lastSegmentLength = i - lastSlash - 1;
      }
      lastSlash = i;
      dots = 0;
    } else if (code === 46 /*.*/ && dots !== -1) {
      ++dots;
    } else {
      dots = -1;
    }
  }
  return res;
}

function _format(sep, pathObject) {
  var dir = pathObject.dir || pathObject.root;
  var base = pathObject.base || (pathObject.name || '') + (pathObject.ext || '');
  if (!dir) {
    return base;
  }
  if (dir === pathObject.root) {
    return dir + base;
  }
  return dir + sep + base;
}

var posix = {
  // path.resolve([from ...], to)
  resolve: function resolve() {
    var resolvedPath = '';
    var resolvedAbsolute = false;
    var cwd;

    for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
      var path;
      if (i >= 0)
        path = arguments[i];
      else {
        if (cwd === undefined)
          cwd = process.cwd();
        path = cwd;
      }

      assertPath(path);

      // Skip empty entries
      if (path.length === 0) {
        continue;
      }

      resolvedPath = path + '/' + resolvedPath;
      resolvedAbsolute = path.charCodeAt(0) === 47 /*/*/;
    }

    // At this point the path should be resolved to a full absolute path, but
    // handle relative paths to be safe (might happen when process.cwd() fails)

    // Normalize the path
    resolvedPath = normalizeStringPosix(resolvedPath, !resolvedAbsolute);

    if (resolvedAbsolute) {
      if (resolvedPath.length > 0)
        return '/' + resolvedPath;
      else
        return '/';
    } else if (resolvedPath.length > 0) {
      return resolvedPath;
    } else {
      return '.';
    }
  },

  normalize: function normalize(path) {
    assertPath(path);

    if (path.length === 0) return '.';

    var isAbsolute = path.charCodeAt(0) === 47 /*/*/;
    var trailingSeparator = path.charCodeAt(path.length - 1) === 47 /*/*/;

    // Normalize the path
    path = normalizeStringPosix(path, !isAbsolute);

    if (path.length === 0 && !isAbsolute) path = '.';
    if (path.length > 0 && trailingSeparator) path += '/';

    if (isAbsolute) return '/' + path;
    return path;
  },

  isAbsolute: function isAbsolute(path) {
    assertPath(path);
    return path.length > 0 && path.charCodeAt(0) === 47 /*/*/;
  },

  join: function join() {
    if (arguments.length === 0)
      return '.';
    var joined;
    for (var i = 0; i < arguments.length; ++i) {
      var arg = arguments[i];
      assertPath(arg);
      if (arg.length > 0) {
        if (joined === undefined)
          joined = arg;
        else
          joined += '/' + arg;
      }
    }
    if (joined === undefined)
      return '.';
    return posix.normalize(joined);
  },

  relative: function relative(from, to) {
    assertPath(from);
    assertPath(to);

    if (from === to) return '';

    from = posix.resolve(from);
    to = posix.resolve(to);

    if (from === to) return '';

    // Trim any leading backslashes
    var fromStart = 1;
    for (; fromStart < from.length; ++fromStart) {
      if (from.charCodeAt(fromStart) !== 47 /*/*/)
        break;
    }
    var fromEnd = from.length;
    var fromLen = fromEnd - fromStart;

    // Trim any leading backslashes
    var toStart = 1;
    for (; toStart < to.length; ++toStart) {
      if (to.charCodeAt(toStart) !== 47 /*/*/)
        break;
    }
    var toEnd = to.length;
    var toLen = toEnd - toStart;

    // Compare paths to find the longest common path from root
    var length = fromLen < toLen ? fromLen : toLen;
    var lastCommonSep = -1;
    var i = 0;
    for (; i <= length; ++i) {
      if (i === length) {
        if (toLen > length) {
          if (to.charCodeAt(toStart + i) === 47 /*/*/) {
            // We get here if `from` is the exact base path for `to`.
            // For example: from='/foo/bar'; to='/foo/bar/baz'
            return to.slice(toStart + i + 1);
          } else if (i === 0) {
            // We get here if `from` is the root
            // For example: from='/'; to='/foo'
            return to.slice(toStart + i);
          }
        } else if (fromLen > length) {
          if (from.charCodeAt(fromStart + i) === 47 /*/*/) {
            // We get here if `to` is the exact base path for `from`.
            // For example: from='/foo/bar/baz'; to='/foo/bar'
            lastCommonSep = i;
          } else if (i === 0) {
            // We get here if `to` is the root.
            // For example: from='/foo'; to='/'
            lastCommonSep = 0;
          }
        }
        break;
      }
      var fromCode = from.charCodeAt(fromStart + i);
      var toCode = to.charCodeAt(toStart + i);
      if (fromCode !== toCode)
        break;
      else if (fromCode === 47 /*/*/)
        lastCommonSep = i;
    }

    var out = '';
    // Generate the relative path based on the path difference between `to`
    // and `from`
    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {
      if (i === fromEnd || from.charCodeAt(i) === 47 /*/*/) {
        if (out.length === 0)
          out += '..';
        else
          out += '/..';
      }
    }

    // Lastly, append the rest of the destination (`to`) path that comes after
    // the common path parts
    if (out.length > 0)
      return out + to.slice(toStart + lastCommonSep);
    else {
      toStart += lastCommonSep;
      if (to.charCodeAt(toStart) === 47 /*/*/)
        ++toStart;
      return to.slice(toStart);
    }
  },

  _makeLong: function _makeLong(path) {
    return path;
  },

  dirname: function dirname(path) {
    assertPath(path);
    if (path.length === 0) return '.';
    var code = path.charCodeAt(0);
    var hasRoot = code === 47 /*/*/;
    var end = -1;
    var matchedSlash = true;
    for (var i = path.length - 1; i >= 1; --i) {
      code = path.charCodeAt(i);
      if (code === 47 /*/*/) {
          if (!matchedSlash) {
            end = i;
            break;
          }
        } else {
        // We saw the first non-path separator
        matchedSlash = false;
      }
    }

    if (end === -1) return hasRoot ? '/' : '.';
    if (hasRoot && end === 1) return '//';
    return path.slice(0, end);
  },

  basename: function basename(path, ext) {
    if (ext !== undefined && typeof ext !== 'string') throw new TypeError('"ext" argument must be a string');
    assertPath(path);

    var start = 0;
    var end = -1;
    var matchedSlash = true;
    var i;

    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {
      if (ext.length === path.length && ext === path) return '';
      var extIdx = ext.length - 1;
      var firstNonSlashEnd = -1;
      for (i = path.length - 1; i >= 0; --i) {
        var code = path.charCodeAt(i);
        if (code === 47 /*/*/) {
            // If we reached a path separator that was not part of a set of path
            // separators at the end of the string, stop now
            if (!matchedSlash) {
              start = i + 1;
              break;
            }
          } else {
          if (firstNonSlashEnd === -1) {
            // We saw the first non-path separator, remember this index in case
            // we need it if the extension ends up not matching
            matchedSlash = false;
            firstNonSlashEnd = i + 1;
          }
          if (extIdx >= 0) {
            // Try to match the explicit extension
            if (code === ext.charCodeAt(extIdx)) {
              if (--extIdx === -1) {
                // We matched the extension, so mark this as the end of our path
                // component
                end = i;
              }
            } else {
              // Extension does not match, so our result is the entire path
              // component
              extIdx = -1;
              end = firstNonSlashEnd;
            }
          }
        }
      }

      if (start === end) end = firstNonSlashEnd;else if (end === -1) end = path.length;
      return path.slice(start, end);
    } else {
      for (i = path.length - 1; i >= 0; --i) {
        if (path.charCodeAt(i) === 47 /*/*/) {
            // If we reached a path separator that was not part of a set of path
            // separators at the end of the string, stop now
            if (!matchedSlash) {
              start = i + 1;
              break;
            }
          } else if (end === -1) {
          // We saw the first non-path separator, mark this as the end of our
          // path component
          matchedSlash = false;
          end = i + 1;
        }
      }

      if (end === -1) return '';
      return path.slice(start, end);
    }
  },

  extname: function extname(path) {
    assertPath(path);
    var startDot = -1;
    var startPart = 0;
    var end = -1;
    var matchedSlash = true;
    // Track the state of characters (if any) we see before our first dot and
    // after any path separator we find
    var preDotState = 0;
    for (var i = path.length - 1; i >= 0; --i) {
      var code = path.charCodeAt(i);
      if (code === 47 /*/*/) {
          // If we reached a path separator that was not part of a set of path
          // separators at the end of the string, stop now
          if (!matchedSlash) {
            startPart = i + 1;
            break;
          }
          continue;
        }
      if (end === -1) {
        // We saw the first non-path separator, mark this as the end of our
        // extension
        matchedSlash = false;
        end = i + 1;
      }
      if (code === 46 /*.*/) {
          // If this is our first dot, mark it as the start of our extension
          if (startDot === -1)
            startDot = i;
          else if (preDotState !== 1)
            preDotState = 1;
      } else if (startDot !== -1) {
        // We saw a non-dot and non-path separator before our dot, so we should
        // have a good chance at having a non-empty extension
        preDotState = -1;
      }
    }

    if (startDot === -1 || end === -1 ||
        // We saw a non-dot character immediately before the dot
        preDotState === 0 ||
        // The (right-most) trimmed path component is exactly '..'
        preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {
      return '';
    }
    return path.slice(startDot, end);
  },

  format: function format(pathObject) {
    if (pathObject === null || typeof pathObject !== 'object') {
      throw new TypeError('The "pathObject" argument must be of type Object. Received type ' + typeof pathObject);
    }
    return _format('/', pathObject);
  },

  parse: function parse(path) {
    assertPath(path);

    var ret = { root: '', dir: '', base: '', ext: '', name: '' };
    if (path.length === 0) return ret;
    var code = path.charCodeAt(0);
    var isAbsolute = code === 47 /*/*/;
    var start;
    if (isAbsolute) {
      ret.root = '/';
      start = 1;
    } else {
      start = 0;
    }
    var startDot = -1;
    var startPart = 0;
    var end = -1;
    var matchedSlash = true;
    var i = path.length - 1;

    // Track the state of characters (if any) we see before our first dot and
    // after any path separator we find
    var preDotState = 0;

    // Get non-dir info
    for (; i >= start; --i) {
      code = path.charCodeAt(i);
      if (code === 47 /*/*/) {
          // If we reached a path separator that was not part of a set of path
          // separators at the end of the string, stop now
          if (!matchedSlash) {
            startPart = i + 1;
            break;
          }
          continue;
        }
      if (end === -1) {
        // We saw the first non-path separator, mark this as the end of our
        // extension
        matchedSlash = false;
        end = i + 1;
      }
      if (code === 46 /*.*/) {
          // If this is our first dot, mark it as the start of our extension
          if (startDot === -1) startDot = i;else if (preDotState !== 1) preDotState = 1;
        } else if (startDot !== -1) {
        // We saw a non-dot and non-path separator before our dot, so we should
        // have a good chance at having a non-empty extension
        preDotState = -1;
      }
    }

    if (startDot === -1 || end === -1 ||
    // We saw a non-dot character immediately before the dot
    preDotState === 0 ||
    // The (right-most) trimmed path component is exactly '..'
    preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {
      if (end !== -1) {
        if (startPart === 0 && isAbsolute) ret.base = ret.name = path.slice(1, end);else ret.base = ret.name = path.slice(startPart, end);
      }
    } else {
      if (startPart === 0 && isAbsolute) {
        ret.name = path.slice(1, startDot);
        ret.base = path.slice(1, end);
      } else {
        ret.name = path.slice(startPart, startDot);
        ret.base = path.slice(startPart, end);
      }
      ret.ext = path.slice(startDot, end);
    }

    if (startPart > 0) ret.dir = path.slice(0, startPart - 1);else if (isAbsolute) ret.dir = '/';

    return ret;
  },

  sep: '/',
  delimiter: ':',
  win32: null,
  posix: null
};

posix.posix = posix;

module.exports = posix;

}).call(this)}).call(this,require('_process'))
},{"_process":236}],129:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

module.exports = Stream;

var EE = require('events').EventEmitter;
var inherits = require('inherits');

inherits(Stream, EE);
Stream.Readable = require('readable-stream/lib/_stream_readable.js');
Stream.Writable = require('readable-stream/lib/_stream_writable.js');
Stream.Duplex = require('readable-stream/lib/_stream_duplex.js');
Stream.Transform = require('readable-stream/lib/_stream_transform.js');
Stream.PassThrough = require('readable-stream/lib/_stream_passthrough.js');
Stream.finished = require('readable-stream/lib/internal/streams/end-of-stream.js')
Stream.pipeline = require('readable-stream/lib/internal/streams/pipeline.js')

// Backwards-compat with node 0.4.x
Stream.Stream = Stream;



// old-style streams.  Note that the pipe method (the only relevant
// part of this class) is overridden in the Readable class.

function Stream() {
  EE.call(this);
}

Stream.prototype.pipe = function(dest, options) {
  var source = this;

  function ondata(chunk) {
    if (dest.writable) {
      if (false === dest.write(chunk) && source.pause) {
        source.pause();
      }
    }
  }

  source.on('data', ondata);

  function ondrain() {
    if (source.readable && source.resume) {
      source.resume();
    }
  }

  dest.on('drain', ondrain);

  // If the 'end' option is not supplied, dest.end() will be called when
  // source gets the 'end' or 'close' events.  Only dest.end() once.
  if (!dest._isStdio && (!options || options.end !== false)) {
    source.on('end', onend);
    source.on('close', onclose);
  }

  var didOnEnd = false;
  function onend() {
    if (didOnEnd) return;
    didOnEnd = true;

    dest.end();
  }


  function onclose() {
    if (didOnEnd) return;
    didOnEnd = true;

    if (typeof dest.destroy === 'function') dest.destroy();
  }

  // don't leave dangling pipes when there are errors.
  function onerror(er) {
    cleanup();
    if (EE.listenerCount(this, 'error') === 0) {
      throw er; // Unhandled stream error in pipe.
    }
  }

  source.on('error', onerror);
  dest.on('error', onerror);

  // remove all the event listeners that were added.
  function cleanup() {
    source.removeListener('data', ondata);
    dest.removeListener('drain', ondrain);

    source.removeListener('end', onend);
    source.removeListener('close', onclose);

    source.removeListener('error', onerror);
    dest.removeListener('error', onerror);

    source.removeListener('end', cleanup);
    source.removeListener('close', cleanup);

    dest.removeListener('close', cleanup);
  }

  source.on('end', cleanup);
  source.on('close', cleanup);

  dest.on('close', cleanup);

  dest.emit('pipe', source);

  // Allow for unix-like usage: A.pipe(B).pipe(C)
  return dest;
};

},{"events":127,"inherits":230,"readable-stream/lib/_stream_duplex.js":131,"readable-stream/lib/_stream_passthrough.js":132,"readable-stream/lib/_stream_readable.js":133,"readable-stream/lib/_stream_transform.js":134,"readable-stream/lib/_stream_writable.js":135,"readable-stream/lib/internal/streams/end-of-stream.js":139,"readable-stream/lib/internal/streams/pipeline.js":141}],130:[function(require,module,exports){
'use strict';

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

var codes = {};

function createErrorType(code, message, Base) {
  if (!Base) {
    Base = Error;
  }

  function getMessage(arg1, arg2, arg3) {
    if (typeof message === 'string') {
      return message;
    } else {
      return message(arg1, arg2, arg3);
    }
  }

  var NodeError =
  /*#__PURE__*/
  function (_Base) {
    _inheritsLoose(NodeError, _Base);

    function NodeError(arg1, arg2, arg3) {
      return _Base.call(this, getMessage(arg1, arg2, arg3)) || this;
    }

    return NodeError;
  }(Base);

  NodeError.prototype.name = Base.name;
  NodeError.prototype.code = code;
  codes[code] = NodeError;
} // https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js


function oneOf(expected, thing) {
  if (Array.isArray(expected)) {
    var len = expected.length;
    expected = expected.map(function (i) {
      return String(i);
    });

    if (len > 2) {
      return "one of ".concat(thing, " ").concat(expected.slice(0, len - 1).join(', '), ", or ") + expected[len - 1];
    } else if (len === 2) {
      return "one of ".concat(thing, " ").concat(expected[0], " or ").concat(expected[1]);
    } else {
      return "of ".concat(thing, " ").concat(expected[0]);
    }
  } else {
    return "of ".concat(thing, " ").concat(String(expected));
  }
} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith


function startsWith(str, search, pos) {
  return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;
} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith


function endsWith(str, search, this_len) {
  if (this_len === undefined || this_len > str.length) {
    this_len = str.length;
  }

  return str.substring(this_len - search.length, this_len) === search;
} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes


function includes(str, search, start) {
  if (typeof start !== 'number') {
    start = 0;
  }

  if (start + search.length > str.length) {
    return false;
  } else {
    return str.indexOf(search, start) !== -1;
  }
}

createErrorType('ERR_INVALID_OPT_VALUE', function (name, value) {
  return 'The value "' + value + '" is invalid for option "' + name + '"';
}, TypeError);
createErrorType('ERR_INVALID_ARG_TYPE', function (name, expected, actual) {
  // determiner: 'must be' or 'must not be'
  var determiner;

  if (typeof expected === 'string' && startsWith(expected, 'not ')) {
    determiner = 'must not be';
    expected = expected.replace(/^not /, '');
  } else {
    determiner = 'must be';
  }

  var msg;

  if (endsWith(name, ' argument')) {
    // For cases like 'first argument'
    msg = "The ".concat(name, " ").concat(determiner, " ").concat(oneOf(expected, 'type'));
  } else {
    var type = includes(name, '.') ? 'property' : 'argument';
    msg = "The \"".concat(name, "\" ").concat(type, " ").concat(determiner, " ").concat(oneOf(expected, 'type'));
  }

  msg += ". Received type ".concat(typeof actual);
  return msg;
}, TypeError);
createErrorType('ERR_STREAM_PUSH_AFTER_EOF', 'stream.push() after EOF');
createErrorType('ERR_METHOD_NOT_IMPLEMENTED', function (name) {
  return 'The ' + name + ' method is not implemented';
});
createErrorType('ERR_STREAM_PREMATURE_CLOSE', 'Premature close');
createErrorType('ERR_STREAM_DESTROYED', function (name) {
  return 'Cannot call ' + name + ' after a stream was destroyed';
});
createErrorType('ERR_MULTIPLE_CALLBACK', 'Callback called multiple times');
createErrorType('ERR_STREAM_CANNOT_PIPE', 'Cannot pipe, not readable');
createErrorType('ERR_STREAM_WRITE_AFTER_END', 'write after end');
createErrorType('ERR_STREAM_NULL_VALUES', 'May not write null values to stream', TypeError);
createErrorType('ERR_UNKNOWN_ENCODING', function (arg) {
  return 'Unknown encoding: ' + arg;
}, TypeError);
createErrorType('ERR_STREAM_UNSHIFT_AFTER_END_EVENT', 'stream.unshift() after end event');
module.exports.codes = codes;

},{}],131:[function(require,module,exports){
(function (process){(function (){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
// a duplex stream is just a stream that is both readable and writable.
// Since JS doesn't have multiple prototypal inheritance, this class
// prototypally inherits from Readable, and then parasitically from
// Writable.
'use strict';
/*<replacement>*/

var objectKeys = Object.keys || function (obj) {
  var keys = [];

  for (var key in obj) {
    keys.push(key);
  }

  return keys;
};
/*</replacement>*/


module.exports = Duplex;

var Readable = require('./_stream_readable');

var Writable = require('./_stream_writable');

require('inherits')(Duplex, Readable);

{
  // Allow the keys array to be GC'ed.
  var keys = objectKeys(Writable.prototype);

  for (var v = 0; v < keys.length; v++) {
    var method = keys[v];
    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];
  }
}

function Duplex(options) {
  if (!(this instanceof Duplex)) return new Duplex(options);
  Readable.call(this, options);
  Writable.call(this, options);
  this.allowHalfOpen = true;

  if (options) {
    if (options.readable === false) this.readable = false;
    if (options.writable === false) this.writable = false;

    if (options.allowHalfOpen === false) {
      this.allowHalfOpen = false;
      this.once('end', onend);
    }
  }
}

Object.defineProperty(Duplex.prototype, 'writableHighWaterMark', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._writableState.highWaterMark;
  }
});
Object.defineProperty(Duplex.prototype, 'writableBuffer', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._writableState && this._writableState.getBuffer();
  }
});
Object.defineProperty(Duplex.prototype, 'writableLength', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._writableState.length;
  }
}); // the no-half-open enforcer

function onend() {
  // If the writable side ended, then we're ok.
  if (this._writableState.ended) return; // no more data can be written.
  // But allow more writes to happen in this tick.

  process.nextTick(onEndNT, this);
}

function onEndNT(self) {
  self.end();
}

Object.defineProperty(Duplex.prototype, 'destroyed', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    if (this._readableState === undefined || this._writableState === undefined) {
      return false;
    }

    return this._readableState.destroyed && this._writableState.destroyed;
  },
  set: function set(value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (this._readableState === undefined || this._writableState === undefined) {
      return;
    } // backward compatibility, the user is explicitly
    // managing destroyed


    this._readableState.destroyed = value;
    this._writableState.destroyed = value;
  }
});
}).call(this)}).call(this,require('_process'))
},{"./_stream_readable":133,"./_stream_writable":135,"_process":236,"inherits":230}],132:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
// a passthrough stream.
// basically just the most minimal sort of Transform stream.
// Every written chunk gets output as-is.
'use strict';

module.exports = PassThrough;

var Transform = require('./_stream_transform');

require('inherits')(PassThrough, Transform);

function PassThrough(options) {
  if (!(this instanceof PassThrough)) return new PassThrough(options);
  Transform.call(this, options);
}

PassThrough.prototype._transform = function (chunk, encoding, cb) {
  cb(null, chunk);
};
},{"./_stream_transform":134,"inherits":230}],133:[function(require,module,exports){
(function (process,global){(function (){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
'use strict';

module.exports = Readable;
/*<replacement>*/

var Duplex;
/*</replacement>*/

Readable.ReadableState = ReadableState;
/*<replacement>*/

var EE = require('events').EventEmitter;

var EElistenerCount = function EElistenerCount(emitter, type) {
  return emitter.listeners(type).length;
};
/*</replacement>*/

/*<replacement>*/


var Stream = require('./internal/streams/stream');
/*</replacement>*/


var Buffer = require('buffer').Buffer;

var OurUint8Array = global.Uint8Array || function () {};

function _uint8ArrayToBuffer(chunk) {
  return Buffer.from(chunk);
}

function _isUint8Array(obj) {
  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;
}
/*<replacement>*/


var debugUtil = require('util');

var debug;

if (debugUtil && debugUtil.debuglog) {
  debug = debugUtil.debuglog('stream');
} else {
  debug = function debug() {};
}
/*</replacement>*/


var BufferList = require('./internal/streams/buffer_list');

var destroyImpl = require('./internal/streams/destroy');

var _require = require('./internal/streams/state'),
    getHighWaterMark = _require.getHighWaterMark;

var _require$codes = require('../errors').codes,
    ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,
    ERR_STREAM_PUSH_AFTER_EOF = _require$codes.ERR_STREAM_PUSH_AFTER_EOF,
    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,
    ERR_STREAM_UNSHIFT_AFTER_END_EVENT = _require$codes.ERR_STREAM_UNSHIFT_AFTER_END_EVENT; // Lazy loaded to improve the startup performance.


var StringDecoder;
var createReadableStreamAsyncIterator;
var from;

require('inherits')(Readable, Stream);

var errorOrDestroy = destroyImpl.errorOrDestroy;
var kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];

function prependListener(emitter, event, fn) {
  // Sadly this is not cacheable as some libraries bundle their own
  // event emitter implementation with them.
  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn); // This is a hack to make sure that our error handler is attached before any
  // userland ones.  NEVER DO THIS. This is here only because this code needs
  // to continue to work with older versions of Node.js that do not include
  // the prependListener() method. The goal is to eventually remove this hack.

  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (Array.isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];
}

function ReadableState(options, stream, isDuplex) {
  Duplex = Duplex || require('./_stream_duplex');
  options = options || {}; // Duplex streams are both readable and writable, but share
  // the same options object.
  // However, some cases require setting options to different
  // values for the readable and the writable sides of the duplex stream.
  // These options can be provided separately as readableXXX and writableXXX.

  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex; // object stream flag. Used to make read(n) ignore n and to
  // make all the buffer merging and length checks go away

  this.objectMode = !!options.objectMode;
  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode; // the point at which it stops calling _read() to fill the buffer
  // Note: 0 is a valid value, means "don't call _read preemptively ever"

  this.highWaterMark = getHighWaterMark(this, options, 'readableHighWaterMark', isDuplex); // A linked list is used to store data chunks instead of an array because the
  // linked list can remove elements from the beginning faster than
  // array.shift()

  this.buffer = new BufferList();
  this.length = 0;
  this.pipes = null;
  this.pipesCount = 0;
  this.flowing = null;
  this.ended = false;
  this.endEmitted = false;
  this.reading = false; // a flag to be able to tell if the event 'readable'/'data' is emitted
  // immediately, or on a later tick.  We set this to true at first, because
  // any actions that shouldn't happen until "later" should generally also
  // not happen before the first read call.

  this.sync = true; // whenever we return null, then we set a flag to say
  // that we're awaiting a 'readable' event emission.

  this.needReadable = false;
  this.emittedReadable = false;
  this.readableListening = false;
  this.resumeScheduled = false;
  this.paused = true; // Should close be emitted on destroy. Defaults to true.

  this.emitClose = options.emitClose !== false; // Should .destroy() be called after 'end' (and potentially 'finish')

  this.autoDestroy = !!options.autoDestroy; // has it been destroyed

  this.destroyed = false; // Crypto is kind of old and crusty.  Historically, its default string
  // encoding is 'binary' so we have to make this configurable.
  // Everything else in the universe uses 'utf8', though.

  this.defaultEncoding = options.defaultEncoding || 'utf8'; // the number of writers that are awaiting a drain event in .pipe()s

  this.awaitDrain = 0; // if true, a maybeReadMore has been scheduled

  this.readingMore = false;
  this.decoder = null;
  this.encoding = null;

  if (options.encoding) {
    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;
    this.decoder = new StringDecoder(options.encoding);
    this.encoding = options.encoding;
  }
}

function Readable(options) {
  Duplex = Duplex || require('./_stream_duplex');
  if (!(this instanceof Readable)) return new Readable(options); // Checking for a Stream.Duplex instance is faster here instead of inside
  // the ReadableState constructor, at least with V8 6.5

  var isDuplex = this instanceof Duplex;
  this._readableState = new ReadableState(options, this, isDuplex); // legacy

  this.readable = true;

  if (options) {
    if (typeof options.read === 'function') this._read = options.read;
    if (typeof options.destroy === 'function') this._destroy = options.destroy;
  }

  Stream.call(this);
}

Object.defineProperty(Readable.prototype, 'destroyed', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    if (this._readableState === undefined) {
      return false;
    }

    return this._readableState.destroyed;
  },
  set: function set(value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (!this._readableState) {
      return;
    } // backward compatibility, the user is explicitly
    // managing destroyed


    this._readableState.destroyed = value;
  }
});
Readable.prototype.destroy = destroyImpl.destroy;
Readable.prototype._undestroy = destroyImpl.undestroy;

Readable.prototype._destroy = function (err, cb) {
  cb(err);
}; // Manually shove something into the read() buffer.
// This returns true if the highWaterMark has not been hit yet,
// similar to how Writable.write() returns true if you should
// write() some more.


Readable.prototype.push = function (chunk, encoding) {
  var state = this._readableState;
  var skipChunkCheck;

  if (!state.objectMode) {
    if (typeof chunk === 'string') {
      encoding = encoding || state.defaultEncoding;

      if (encoding !== state.encoding) {
        chunk = Buffer.from(chunk, encoding);
        encoding = '';
      }

      skipChunkCheck = true;
    }
  } else {
    skipChunkCheck = true;
  }

  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);
}; // Unshift should *always* be something directly out of read()


Readable.prototype.unshift = function (chunk) {
  return readableAddChunk(this, chunk, null, true, false);
};

function readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {
  debug('readableAddChunk', chunk);
  var state = stream._readableState;

  if (chunk === null) {
    state.reading = false;
    onEofChunk(stream, state);
  } else {
    var er;
    if (!skipChunkCheck) er = chunkInvalid(state, chunk);

    if (er) {
      errorOrDestroy(stream, er);
    } else if (state.objectMode || chunk && chunk.length > 0) {
      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {
        chunk = _uint8ArrayToBuffer(chunk);
      }

      if (addToFront) {
        if (state.endEmitted) errorOrDestroy(stream, new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());else addChunk(stream, state, chunk, true);
      } else if (state.ended) {
        errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF());
      } else if (state.destroyed) {
        return false;
      } else {
        state.reading = false;

        if (state.decoder && !encoding) {
          chunk = state.decoder.write(chunk);
          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);
        } else {
          addChunk(stream, state, chunk, false);
        }
      }
    } else if (!addToFront) {
      state.reading = false;
      maybeReadMore(stream, state);
    }
  } // We can push more data if we are below the highWaterMark.
  // Also, if we have no data yet, we can stand some more bytes.
  // This is to work around cases where hwm=0, such as the repl.


  return !state.ended && (state.length < state.highWaterMark || state.length === 0);
}

function addChunk(stream, state, chunk, addToFront) {
  if (state.flowing && state.length === 0 && !state.sync) {
    state.awaitDrain = 0;
    stream.emit('data', chunk);
  } else {
    // update the buffer info.
    state.length += state.objectMode ? 1 : chunk.length;
    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);
    if (state.needReadable) emitReadable(stream);
  }

  maybeReadMore(stream, state);
}

function chunkInvalid(state, chunk) {
  var er;

  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {
    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer', 'Uint8Array'], chunk);
  }

  return er;
}

Readable.prototype.isPaused = function () {
  return this._readableState.flowing === false;
}; // backwards compatibility.


Readable.prototype.setEncoding = function (enc) {
  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;
  var decoder = new StringDecoder(enc);
  this._readableState.decoder = decoder; // If setEncoding(null), decoder.encoding equals utf8

  this._readableState.encoding = this._readableState.decoder.encoding; // Iterate over current buffer to convert already stored Buffers:

  var p = this._readableState.buffer.head;
  var content = '';

  while (p !== null) {
    content += decoder.write(p.data);
    p = p.next;
  }

  this._readableState.buffer.clear();

  if (content !== '') this._readableState.buffer.push(content);
  this._readableState.length = content.length;
  return this;
}; // Don't raise the hwm > 1GB


var MAX_HWM = 0x40000000;

function computeNewHighWaterMark(n) {
  if (n >= MAX_HWM) {
    // TODO(ronag): Throw ERR_VALUE_OUT_OF_RANGE.
    n = MAX_HWM;
  } else {
    // Get the next highest power of 2 to prevent increasing hwm excessively in
    // tiny amounts
    n--;
    n |= n >>> 1;
    n |= n >>> 2;
    n |= n >>> 4;
    n |= n >>> 8;
    n |= n >>> 16;
    n++;
  }

  return n;
} // This function is designed to be inlinable, so please take care when making
// changes to the function body.


function howMuchToRead(n, state) {
  if (n <= 0 || state.length === 0 && state.ended) return 0;
  if (state.objectMode) return 1;

  if (n !== n) {
    // Only flow one buffer at a time
    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;
  } // If we're asking for more than the current hwm, then raise the hwm.


  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);
  if (n <= state.length) return n; // Don't have enough

  if (!state.ended) {
    state.needReadable = true;
    return 0;
  }

  return state.length;
} // you can override either this method, or the async _read(n) below.


Readable.prototype.read = function (n) {
  debug('read', n);
  n = parseInt(n, 10);
  var state = this._readableState;
  var nOrig = n;
  if (n !== 0) state.emittedReadable = false; // if we're doing read(0) to trigger a readable event, but we
  // already have a bunch of data in the buffer, then just trigger
  // the 'readable' event and move on.

  if (n === 0 && state.needReadable && ((state.highWaterMark !== 0 ? state.length >= state.highWaterMark : state.length > 0) || state.ended)) {
    debug('read: emitReadable', state.length, state.ended);
    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);
    return null;
  }

  n = howMuchToRead(n, state); // if we've ended, and we're now clear, then finish it up.

  if (n === 0 && state.ended) {
    if (state.length === 0) endReadable(this);
    return null;
  } // All the actual chunk generation logic needs to be
  // *below* the call to _read.  The reason is that in certain
  // synthetic stream cases, such as passthrough streams, _read
  // may be a completely synchronous operation which may change
  // the state of the read buffer, providing enough data when
  // before there was *not* enough.
  //
  // So, the steps are:
  // 1. Figure out what the state of things will be after we do
  // a read from the buffer.
  //
  // 2. If that resulting state will trigger a _read, then call _read.
  // Note that this may be asynchronous, or synchronous.  Yes, it is
  // deeply ugly to write APIs this way, but that still doesn't mean
  // that the Readable class should behave improperly, as streams are
  // designed to be sync/async agnostic.
  // Take note if the _read call is sync or async (ie, if the read call
  // has returned yet), so that we know whether or not it's safe to emit
  // 'readable' etc.
  //
  // 3. Actually pull the requested chunks out of the buffer and return.
  // if we need a readable event, then we need to do some reading.


  var doRead = state.needReadable;
  debug('need readable', doRead); // if we currently have less than the highWaterMark, then also read some

  if (state.length === 0 || state.length - n < state.highWaterMark) {
    doRead = true;
    debug('length less than watermark', doRead);
  } // however, if we've ended, then there's no point, and if we're already
  // reading, then it's unnecessary.


  if (state.ended || state.reading) {
    doRead = false;
    debug('reading or ended', doRead);
  } else if (doRead) {
    debug('do read');
    state.reading = true;
    state.sync = true; // if the length is currently zero, then we *need* a readable event.

    if (state.length === 0) state.needReadable = true; // call internal read method

    this._read(state.highWaterMark);

    state.sync = false; // If _read pushed data synchronously, then `reading` will be false,
    // and we need to re-evaluate how much data we can return to the user.

    if (!state.reading) n = howMuchToRead(nOrig, state);
  }

  var ret;
  if (n > 0) ret = fromList(n, state);else ret = null;

  if (ret === null) {
    state.needReadable = state.length <= state.highWaterMark;
    n = 0;
  } else {
    state.length -= n;
    state.awaitDrain = 0;
  }

  if (state.length === 0) {
    // If we have nothing in the buffer, then we want to know
    // as soon as we *do* get something into the buffer.
    if (!state.ended) state.needReadable = true; // If we tried to read() past the EOF, then emit end on the next tick.

    if (nOrig !== n && state.ended) endReadable(this);
  }

  if (ret !== null) this.emit('data', ret);
  return ret;
};

function onEofChunk(stream, state) {
  debug('onEofChunk');
  if (state.ended) return;

  if (state.decoder) {
    var chunk = state.decoder.end();

    if (chunk && chunk.length) {
      state.buffer.push(chunk);
      state.length += state.objectMode ? 1 : chunk.length;
    }
  }

  state.ended = true;

  if (state.sync) {
    // if we are sync, wait until next tick to emit the data.
    // Otherwise we risk emitting data in the flow()
    // the readable code triggers during a read() call
    emitReadable(stream);
  } else {
    // emit 'readable' now to make sure it gets picked up.
    state.needReadable = false;

    if (!state.emittedReadable) {
      state.emittedReadable = true;
      emitReadable_(stream);
    }
  }
} // Don't emit readable right away in sync mode, because this can trigger
// another read() call => stack overflow.  This way, it might trigger
// a nextTick recursion warning, but that's not so bad.


function emitReadable(stream) {
  var state = stream._readableState;
  debug('emitReadable', state.needReadable, state.emittedReadable);
  state.needReadable = false;

  if (!state.emittedReadable) {
    debug('emitReadable', state.flowing);
    state.emittedReadable = true;
    process.nextTick(emitReadable_, stream);
  }
}

function emitReadable_(stream) {
  var state = stream._readableState;
  debug('emitReadable_', state.destroyed, state.length, state.ended);

  if (!state.destroyed && (state.length || state.ended)) {
    stream.emit('readable');
    state.emittedReadable = false;
  } // The stream needs another readable event if
  // 1. It is not flowing, as the flow mechanism will take
  //    care of it.
  // 2. It is not ended.
  // 3. It is below the highWaterMark, so we can schedule
  //    another readable later.


  state.needReadable = !state.flowing && !state.ended && state.length <= state.highWaterMark;
  flow(stream);
} // at this point, the user has presumably seen the 'readable' event,
// and called read() to consume some data.  that may have triggered
// in turn another _read(n) call, in which case reading = true if
// it's in progress.
// However, if we're not ended, or reading, and the length < hwm,
// then go ahead and try to read some more preemptively.


function maybeReadMore(stream, state) {
  if (!state.readingMore) {
    state.readingMore = true;
    process.nextTick(maybeReadMore_, stream, state);
  }
}

function maybeReadMore_(stream, state) {
  // Attempt to read more data if we should.
  //
  // The conditions for reading more data are (one of):
  // - Not enough data buffered (state.length < state.highWaterMark). The loop
  //   is responsible for filling the buffer with enough data if such data
  //   is available. If highWaterMark is 0 and we are not in the flowing mode
  //   we should _not_ attempt to buffer any extra data. We'll get more data
  //   when the stream consumer calls read() instead.
  // - No data in the buffer, and the stream is in flowing mode. In this mode
  //   the loop below is responsible for ensuring read() is called. Failing to
  //   call read here would abort the flow and there's no other mechanism for
  //   continuing the flow if the stream consumer has just subscribed to the
  //   'data' event.
  //
  // In addition to the above conditions to keep reading data, the following
  // conditions prevent the data from being read:
  // - The stream has ended (state.ended).
  // - There is already a pending 'read' operation (state.reading). This is a
  //   case where the the stream has called the implementation defined _read()
  //   method, but they are processing the call asynchronously and have _not_
  //   called push() with new data. In this case we skip performing more
  //   read()s. The execution ends in this method again after the _read() ends
  //   up calling push() with more data.
  while (!state.reading && !state.ended && (state.length < state.highWaterMark || state.flowing && state.length === 0)) {
    var len = state.length;
    debug('maybeReadMore read 0');
    stream.read(0);
    if (len === state.length) // didn't get any data, stop spinning.
      break;
  }

  state.readingMore = false;
} // abstract method.  to be overridden in specific implementation classes.
// call cb(er, data) where data is <= n in length.
// for virtual (non-string, non-buffer) streams, "length" is somewhat
// arbitrary, and perhaps not very meaningful.


Readable.prototype._read = function (n) {
  errorOrDestroy(this, new ERR_METHOD_NOT_IMPLEMENTED('_read()'));
};

Readable.prototype.pipe = function (dest, pipeOpts) {
  var src = this;
  var state = this._readableState;

  switch (state.pipesCount) {
    case 0:
      state.pipes = dest;
      break;

    case 1:
      state.pipes = [state.pipes, dest];
      break;

    default:
      state.pipes.push(dest);
      break;
  }

  state.pipesCount += 1;
  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);
  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;
  var endFn = doEnd ? onend : unpipe;
  if (state.endEmitted) process.nextTick(endFn);else src.once('end', endFn);
  dest.on('unpipe', onunpipe);

  function onunpipe(readable, unpipeInfo) {
    debug('onunpipe');

    if (readable === src) {
      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {
        unpipeInfo.hasUnpiped = true;
        cleanup();
      }
    }
  }

  function onend() {
    debug('onend');
    dest.end();
  } // when the dest drains, it reduces the awaitDrain counter
  // on the source.  This would be more elegant with a .once()
  // handler in flow(), but adding and removing repeatedly is
  // too slow.


  var ondrain = pipeOnDrain(src);
  dest.on('drain', ondrain);
  var cleanedUp = false;

  function cleanup() {
    debug('cleanup'); // cleanup event handlers once the pipe is broken

    dest.removeListener('close', onclose);
    dest.removeListener('finish', onfinish);
    dest.removeListener('drain', ondrain);
    dest.removeListener('error', onerror);
    dest.removeListener('unpipe', onunpipe);
    src.removeListener('end', onend);
    src.removeListener('end', unpipe);
    src.removeListener('data', ondata);
    cleanedUp = true; // if the reader is waiting for a drain event from this
    // specific writer, then it would cause it to never start
    // flowing again.
    // So, if this is awaiting a drain, then we just call it now.
    // If we don't know, then assume that we are waiting for one.

    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();
  }

  src.on('data', ondata);

  function ondata(chunk) {
    debug('ondata');
    var ret = dest.write(chunk);
    debug('dest.write', ret);

    if (ret === false) {
      // If the user unpiped during `dest.write()`, it is possible
      // to get stuck in a permanently paused state if that write
      // also returned false.
      // => Check whether `dest` is still a piping destination.
      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {
        debug('false write response, pause', state.awaitDrain);
        state.awaitDrain++;
      }

      src.pause();
    }
  } // if the dest has an error, then stop piping into it.
  // however, don't suppress the throwing behavior for this.


  function onerror(er) {
    debug('onerror', er);
    unpipe();
    dest.removeListener('error', onerror);
    if (EElistenerCount(dest, 'error') === 0) errorOrDestroy(dest, er);
  } // Make sure our error handler is attached before userland ones.


  prependListener(dest, 'error', onerror); // Both close and finish should trigger unpipe, but only once.

  function onclose() {
    dest.removeListener('finish', onfinish);
    unpipe();
  }

  dest.once('close', onclose);

  function onfinish() {
    debug('onfinish');
    dest.removeListener('close', onclose);
    unpipe();
  }

  dest.once('finish', onfinish);

  function unpipe() {
    debug('unpipe');
    src.unpipe(dest);
  } // tell the dest that it's being piped to


  dest.emit('pipe', src); // start the flow if it hasn't been started already.

  if (!state.flowing) {
    debug('pipe resume');
    src.resume();
  }

  return dest;
};

function pipeOnDrain(src) {
  return function pipeOnDrainFunctionResult() {
    var state = src._readableState;
    debug('pipeOnDrain', state.awaitDrain);
    if (state.awaitDrain) state.awaitDrain--;

    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {
      state.flowing = true;
      flow(src);
    }
  };
}

Readable.prototype.unpipe = function (dest) {
  var state = this._readableState;
  var unpipeInfo = {
    hasUnpiped: false
  }; // if we're not piping anywhere, then do nothing.

  if (state.pipesCount === 0) return this; // just one destination.  most common case.

  if (state.pipesCount === 1) {
    // passed in one, but it's not the right one.
    if (dest && dest !== state.pipes) return this;
    if (!dest) dest = state.pipes; // got a match.

    state.pipes = null;
    state.pipesCount = 0;
    state.flowing = false;
    if (dest) dest.emit('unpipe', this, unpipeInfo);
    return this;
  } // slow case. multiple pipe destinations.


  if (!dest) {
    // remove all.
    var dests = state.pipes;
    var len = state.pipesCount;
    state.pipes = null;
    state.pipesCount = 0;
    state.flowing = false;

    for (var i = 0; i < len; i++) {
      dests[i].emit('unpipe', this, {
        hasUnpiped: false
      });
    }

    return this;
  } // try to find the right one.


  var index = indexOf(state.pipes, dest);
  if (index === -1) return this;
  state.pipes.splice(index, 1);
  state.pipesCount -= 1;
  if (state.pipesCount === 1) state.pipes = state.pipes[0];
  dest.emit('unpipe', this, unpipeInfo);
  return this;
}; // set up data events if they are asked for
// Ensure readable listeners eventually get something


Readable.prototype.on = function (ev, fn) {
  var res = Stream.prototype.on.call(this, ev, fn);
  var state = this._readableState;

  if (ev === 'data') {
    // update readableListening so that resume() may be a no-op
    // a few lines down. This is needed to support once('readable').
    state.readableListening = this.listenerCount('readable') > 0; // Try start flowing on next tick if stream isn't explicitly paused

    if (state.flowing !== false) this.resume();
  } else if (ev === 'readable') {
    if (!state.endEmitted && !state.readableListening) {
      state.readableListening = state.needReadable = true;
      state.flowing = false;
      state.emittedReadable = false;
      debug('on readable', state.length, state.reading);

      if (state.length) {
        emitReadable(this);
      } else if (!state.reading) {
        process.nextTick(nReadingNextTick, this);
      }
    }
  }

  return res;
};

Readable.prototype.addListener = Readable.prototype.on;

Readable.prototype.removeListener = function (ev, fn) {
  var res = Stream.prototype.removeListener.call(this, ev, fn);

  if (ev === 'readable') {
    // We need to check if there is someone still listening to
    // readable and reset the state. However this needs to happen
    // after readable has been emitted but before I/O (nextTick) to
    // support once('readable', fn) cycles. This means that calling
    // resume within the same tick will have no
    // effect.
    process.nextTick(updateReadableListening, this);
  }

  return res;
};

Readable.prototype.removeAllListeners = function (ev) {
  var res = Stream.prototype.removeAllListeners.apply(this, arguments);

  if (ev === 'readable' || ev === undefined) {
    // We need to check if there is someone still listening to
    // readable and reset the state. However this needs to happen
    // after readable has been emitted but before I/O (nextTick) to
    // support once('readable', fn) cycles. This means that calling
    // resume within the same tick will have no
    // effect.
    process.nextTick(updateReadableListening, this);
  }

  return res;
};

function updateReadableListening(self) {
  var state = self._readableState;
  state.readableListening = self.listenerCount('readable') > 0;

  if (state.resumeScheduled && !state.paused) {
    // flowing needs to be set to true now, otherwise
    // the upcoming resume will not flow.
    state.flowing = true; // crude way to check if we should resume
  } else if (self.listenerCount('data') > 0) {
    self.resume();
  }
}

function nReadingNextTick(self) {
  debug('readable nexttick read 0');
  self.read(0);
} // pause() and resume() are remnants of the legacy readable stream API
// If the user uses them, then switch into old mode.


Readable.prototype.resume = function () {
  var state = this._readableState;

  if (!state.flowing) {
    debug('resume'); // we flow only if there is no one listening
    // for readable, but we still have to call
    // resume()

    state.flowing = !state.readableListening;
    resume(this, state);
  }

  state.paused = false;
  return this;
};

function resume(stream, state) {
  if (!state.resumeScheduled) {
    state.resumeScheduled = true;
    process.nextTick(resume_, stream, state);
  }
}

function resume_(stream, state) {
  debug('resume', state.reading);

  if (!state.reading) {
    stream.read(0);
  }

  state.resumeScheduled = false;
  stream.emit('resume');
  flow(stream);
  if (state.flowing && !state.reading) stream.read(0);
}

Readable.prototype.pause = function () {
  debug('call pause flowing=%j', this._readableState.flowing);

  if (this._readableState.flowing !== false) {
    debug('pause');
    this._readableState.flowing = false;
    this.emit('pause');
  }

  this._readableState.paused = true;
  return this;
};

function flow(stream) {
  var state = stream._readableState;
  debug('flow', state.flowing);

  while (state.flowing && stream.read() !== null) {
    ;
  }
} // wrap an old-style stream as the async data source.
// This is *not* part of the readable stream interface.
// It is an ugly unfortunate mess of history.


Readable.prototype.wrap = function (stream) {
  var _this = this;

  var state = this._readableState;
  var paused = false;
  stream.on('end', function () {
    debug('wrapped end');

    if (state.decoder && !state.ended) {
      var chunk = state.decoder.end();
      if (chunk && chunk.length) _this.push(chunk);
    }

    _this.push(null);
  });
  stream.on('data', function (chunk) {
    debug('wrapped data');
    if (state.decoder) chunk = state.decoder.write(chunk); // don't skip over falsy values in objectMode

    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;

    var ret = _this.push(chunk);

    if (!ret) {
      paused = true;
      stream.pause();
    }
  }); // proxy all the other methods.
  // important when wrapping filters and duplexes.

  for (var i in stream) {
    if (this[i] === undefined && typeof stream[i] === 'function') {
      this[i] = function methodWrap(method) {
        return function methodWrapReturnFunction() {
          return stream[method].apply(stream, arguments);
        };
      }(i);
    }
  } // proxy certain important events.


  for (var n = 0; n < kProxyEvents.length; n++) {
    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));
  } // when we try to consume some more bytes, simply unpause the
  // underlying stream.


  this._read = function (n) {
    debug('wrapped _read', n);

    if (paused) {
      paused = false;
      stream.resume();
    }
  };

  return this;
};

if (typeof Symbol === 'function') {
  Readable.prototype[Symbol.asyncIterator] = function () {
    if (createReadableStreamAsyncIterator === undefined) {
      createReadableStreamAsyncIterator = require('./internal/streams/async_iterator');
    }

    return createReadableStreamAsyncIterator(this);
  };
}

Object.defineProperty(Readable.prototype, 'readableHighWaterMark', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._readableState.highWaterMark;
  }
});
Object.defineProperty(Readable.prototype, 'readableBuffer', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._readableState && this._readableState.buffer;
  }
});
Object.defineProperty(Readable.prototype, 'readableFlowing', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._readableState.flowing;
  },
  set: function set(state) {
    if (this._readableState) {
      this._readableState.flowing = state;
    }
  }
}); // exposed for testing purposes only.

Readable._fromList = fromList;
Object.defineProperty(Readable.prototype, 'readableLength', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._readableState.length;
  }
}); // Pluck off n bytes from an array of buffers.
// Length is the combined lengths of all the buffers in the list.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.

function fromList(n, state) {
  // nothing buffered
  if (state.length === 0) return null;
  var ret;
  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {
    // read it all, truncate the list
    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.first();else ret = state.buffer.concat(state.length);
    state.buffer.clear();
  } else {
    // read part of list
    ret = state.buffer.consume(n, state.decoder);
  }
  return ret;
}

function endReadable(stream) {
  var state = stream._readableState;
  debug('endReadable', state.endEmitted);

  if (!state.endEmitted) {
    state.ended = true;
    process.nextTick(endReadableNT, state, stream);
  }
}

function endReadableNT(state, stream) {
  debug('endReadableNT', state.endEmitted, state.length); // Check that we didn't get one last unshift.

  if (!state.endEmitted && state.length === 0) {
    state.endEmitted = true;
    stream.readable = false;
    stream.emit('end');

    if (state.autoDestroy) {
      // In case of duplex streams we need a way to detect
      // if the writable side is ready for autoDestroy as well
      var wState = stream._writableState;

      if (!wState || wState.autoDestroy && wState.finished) {
        stream.destroy();
      }
    }
  }
}

if (typeof Symbol === 'function') {
  Readable.from = function (iterable, opts) {
    if (from === undefined) {
      from = require('./internal/streams/from');
    }

    return from(Readable, iterable, opts);
  };
}

function indexOf(xs, x) {
  for (var i = 0, l = xs.length; i < l; i++) {
    if (xs[i] === x) return i;
  }

  return -1;
}
}).call(this)}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"../errors":130,"./_stream_duplex":131,"./internal/streams/async_iterator":136,"./internal/streams/buffer_list":137,"./internal/streams/destroy":138,"./internal/streams/from":140,"./internal/streams/state":142,"./internal/streams/stream":143,"_process":236,"buffer":126,"events":127,"inherits":230,"string_decoder/":245,"util":124}],134:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
// a transform stream is a readable/writable stream where you do
// something with the data.  Sometimes it's called a "filter",
// but that's not a great name for it, since that implies a thing where
// some bits pass through, and others are simply ignored.  (That would
// be a valid example of a transform, of course.)
//
// While the output is causally related to the input, it's not a
// necessarily symmetric or synchronous transformation.  For example,
// a zlib stream might take multiple plain-text writes(), and then
// emit a single compressed chunk some time in the future.
//
// Here's how this works:
//
// The Transform stream has all the aspects of the readable and writable
// stream classes.  When you write(chunk), that calls _write(chunk,cb)
// internally, and returns false if there's a lot of pending writes
// buffered up.  When you call read(), that calls _read(n) until
// there's enough pending readable data buffered up.
//
// In a transform stream, the written data is placed in a buffer.  When
// _read(n) is called, it transforms the queued up data, calling the
// buffered _write cb's as it consumes chunks.  If consuming a single
// written chunk would result in multiple output chunks, then the first
// outputted bit calls the readcb, and subsequent chunks just go into
// the read buffer, and will cause it to emit 'readable' if necessary.
//
// This way, back-pressure is actually determined by the reading side,
// since _read has to be called to start processing a new chunk.  However,
// a pathological inflate type of transform can cause excessive buffering
// here.  For example, imagine a stream where every byte of input is
// interpreted as an integer from 0-255, and then results in that many
// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in
// 1kb of data being output.  In this case, you could write a very small
// amount of input, and end up with a very large amount of output.  In
// such a pathological inflating mechanism, there'd be no way to tell
// the system to stop doing the transform.  A single 4MB write could
// cause the system to run out of memory.
//
// However, even in such a pathological case, only a single written chunk
// would be consumed, and then the rest would wait (un-transformed) until
// the results of the previous transformed chunk were consumed.
'use strict';

module.exports = Transform;

var _require$codes = require('../errors').codes,
    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,
    ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,
    ERR_TRANSFORM_ALREADY_TRANSFORMING = _require$codes.ERR_TRANSFORM_ALREADY_TRANSFORMING,
    ERR_TRANSFORM_WITH_LENGTH_0 = _require$codes.ERR_TRANSFORM_WITH_LENGTH_0;

var Duplex = require('./_stream_duplex');

require('inherits')(Transform, Duplex);

function afterTransform(er, data) {
  var ts = this._transformState;
  ts.transforming = false;
  var cb = ts.writecb;

  if (cb === null) {
    return this.emit('error', new ERR_MULTIPLE_CALLBACK());
  }

  ts.writechunk = null;
  ts.writecb = null;
  if (data != null) // single equals check for both `null` and `undefined`
    this.push(data);
  cb(er);
  var rs = this._readableState;
  rs.reading = false;

  if (rs.needReadable || rs.length < rs.highWaterMark) {
    this._read(rs.highWaterMark);
  }
}

function Transform(options) {
  if (!(this instanceof Transform)) return new Transform(options);
  Duplex.call(this, options);
  this._transformState = {
    afterTransform: afterTransform.bind(this),
    needTransform: false,
    transforming: false,
    writecb: null,
    writechunk: null,
    writeencoding: null
  }; // start out asking for a readable event once data is transformed.

  this._readableState.needReadable = true; // we have implemented the _read method, and done the other things
  // that Readable wants before the first _read call, so unset the
  // sync guard flag.

  this._readableState.sync = false;

  if (options) {
    if (typeof options.transform === 'function') this._transform = options.transform;
    if (typeof options.flush === 'function') this._flush = options.flush;
  } // When the writable side finishes, then flush out anything remaining.


  this.on('prefinish', prefinish);
}

function prefinish() {
  var _this = this;

  if (typeof this._flush === 'function' && !this._readableState.destroyed) {
    this._flush(function (er, data) {
      done(_this, er, data);
    });
  } else {
    done(this, null, null);
  }
}

Transform.prototype.push = function (chunk, encoding) {
  this._transformState.needTransform = false;
  return Duplex.prototype.push.call(this, chunk, encoding);
}; // This is the part where you do stuff!
// override this function in implementation classes.
// 'chunk' is an input chunk.
//
// Call `push(newChunk)` to pass along transformed output
// to the readable side.  You may call 'push' zero or more times.
//
// Call `cb(err)` when you are done with this chunk.  If you pass
// an error, then that'll put the hurt on the whole operation.  If you
// never call cb(), then you'll never get another chunk.


Transform.prototype._transform = function (chunk, encoding, cb) {
  cb(new ERR_METHOD_NOT_IMPLEMENTED('_transform()'));
};

Transform.prototype._write = function (chunk, encoding, cb) {
  var ts = this._transformState;
  ts.writecb = cb;
  ts.writechunk = chunk;
  ts.writeencoding = encoding;

  if (!ts.transforming) {
    var rs = this._readableState;
    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);
  }
}; // Doesn't matter what the args are here.
// _transform does all the work.
// That we got here means that the readable side wants more data.


Transform.prototype._read = function (n) {
  var ts = this._transformState;

  if (ts.writechunk !== null && !ts.transforming) {
    ts.transforming = true;

    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);
  } else {
    // mark that we need a transform, so that any data that comes in
    // will get processed, now that we've asked for it.
    ts.needTransform = true;
  }
};

Transform.prototype._destroy = function (err, cb) {
  Duplex.prototype._destroy.call(this, err, function (err2) {
    cb(err2);
  });
};

function done(stream, er, data) {
  if (er) return stream.emit('error', er);
  if (data != null) // single equals check for both `null` and `undefined`
    stream.push(data); // TODO(BridgeAR): Write a test for these two error cases
  // if there's nothing in the write buffer, then that means
  // that nothing more will ever be provided

  if (stream._writableState.length) throw new ERR_TRANSFORM_WITH_LENGTH_0();
  if (stream._transformState.transforming) throw new ERR_TRANSFORM_ALREADY_TRANSFORMING();
  return stream.push(null);
}
},{"../errors":130,"./_stream_duplex":131,"inherits":230}],135:[function(require,module,exports){
(function (process,global){(function (){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
// A bit simpler than readable streams.
// Implement an async ._write(chunk, encoding, cb), and it'll handle all
// the drain event emission and buffering.
'use strict';

module.exports = Writable;
/* <replacement> */

function WriteReq(chunk, encoding, cb) {
  this.chunk = chunk;
  this.encoding = encoding;
  this.callback = cb;
  this.next = null;
} // It seems a linked list but it is not
// there will be only 2 of these for each stream


function CorkedRequest(state) {
  var _this = this;

  this.next = null;
  this.entry = null;

  this.finish = function () {
    onCorkedFinish(_this, state);
  };
}
/* </replacement> */

/*<replacement>*/


var Duplex;
/*</replacement>*/

Writable.WritableState = WritableState;
/*<replacement>*/

var internalUtil = {
  deprecate: require('util-deprecate')
};
/*</replacement>*/

/*<replacement>*/

var Stream = require('./internal/streams/stream');
/*</replacement>*/


var Buffer = require('buffer').Buffer;

var OurUint8Array = global.Uint8Array || function () {};

function _uint8ArrayToBuffer(chunk) {
  return Buffer.from(chunk);
}

function _isUint8Array(obj) {
  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;
}

var destroyImpl = require('./internal/streams/destroy');

var _require = require('./internal/streams/state'),
    getHighWaterMark = _require.getHighWaterMark;

var _require$codes = require('../errors').codes,
    ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,
    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,
    ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,
    ERR_STREAM_CANNOT_PIPE = _require$codes.ERR_STREAM_CANNOT_PIPE,
    ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED,
    ERR_STREAM_NULL_VALUES = _require$codes.ERR_STREAM_NULL_VALUES,
    ERR_STREAM_WRITE_AFTER_END = _require$codes.ERR_STREAM_WRITE_AFTER_END,
    ERR_UNKNOWN_ENCODING = _require$codes.ERR_UNKNOWN_ENCODING;

var errorOrDestroy = destroyImpl.errorOrDestroy;

require('inherits')(Writable, Stream);

function nop() {}

function WritableState(options, stream, isDuplex) {
  Duplex = Duplex || require('./_stream_duplex');
  options = options || {}; // Duplex streams are both readable and writable, but share
  // the same options object.
  // However, some cases require setting options to different
  // values for the readable and the writable sides of the duplex stream,
  // e.g. options.readableObjectMode vs. options.writableObjectMode, etc.

  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex; // object stream flag to indicate whether or not this stream
  // contains buffers or objects.

  this.objectMode = !!options.objectMode;
  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode; // the point at which write() starts returning false
  // Note: 0 is a valid value, means that we always return false if
  // the entire buffer is not flushed immediately on write()

  this.highWaterMark = getHighWaterMark(this, options, 'writableHighWaterMark', isDuplex); // if _final has been called

  this.finalCalled = false; // drain event flag.

  this.needDrain = false; // at the start of calling end()

  this.ending = false; // when end() has been called, and returned

  this.ended = false; // when 'finish' is emitted

  this.finished = false; // has it been destroyed

  this.destroyed = false; // should we decode strings into buffers before passing to _write?
  // this is here so that some node-core streams can optimize string
  // handling at a lower level.

  var noDecode = options.decodeStrings === false;
  this.decodeStrings = !noDecode; // Crypto is kind of old and crusty.  Historically, its default string
  // encoding is 'binary' so we have to make this configurable.
  // Everything else in the universe uses 'utf8', though.

  this.defaultEncoding = options.defaultEncoding || 'utf8'; // not an actual buffer we keep track of, but a measurement
  // of how much we're waiting to get pushed to some underlying
  // socket or file.

  this.length = 0; // a flag to see when we're in the middle of a write.

  this.writing = false; // when true all writes will be buffered until .uncork() call

  this.corked = 0; // a flag to be able to tell if the onwrite cb is called immediately,
  // or on a later tick.  We set this to true at first, because any
  // actions that shouldn't happen until "later" should generally also
  // not happen before the first write call.

  this.sync = true; // a flag to know if we're processing previously buffered items, which
  // may call the _write() callback in the same tick, so that we don't
  // end up in an overlapped onwrite situation.

  this.bufferProcessing = false; // the callback that's passed to _write(chunk,cb)

  this.onwrite = function (er) {
    onwrite(stream, er);
  }; // the callback that the user supplies to write(chunk,encoding,cb)


  this.writecb = null; // the amount that is being written when _write is called.

  this.writelen = 0;
  this.bufferedRequest = null;
  this.lastBufferedRequest = null; // number of pending user-supplied write callbacks
  // this must be 0 before 'finish' can be emitted

  this.pendingcb = 0; // emit prefinish if the only thing we're waiting for is _write cbs
  // This is relevant for synchronous Transform streams

  this.prefinished = false; // True if the error was already emitted and should not be thrown again

  this.errorEmitted = false; // Should close be emitted on destroy. Defaults to true.

  this.emitClose = options.emitClose !== false; // Should .destroy() be called after 'finish' (and potentially 'end')

  this.autoDestroy = !!options.autoDestroy; // count buffered requests

  this.bufferedRequestCount = 0; // allocate the first CorkedRequest, there is always
  // one allocated and free to use, and we maintain at most two

  this.corkedRequestsFree = new CorkedRequest(this);
}

WritableState.prototype.getBuffer = function getBuffer() {
  var current = this.bufferedRequest;
  var out = [];

  while (current) {
    out.push(current);
    current = current.next;
  }

  return out;
};

(function () {
  try {
    Object.defineProperty(WritableState.prototype, 'buffer', {
      get: internalUtil.deprecate(function writableStateBufferGetter() {
        return this.getBuffer();
      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')
    });
  } catch (_) {}
})(); // Test _writableState for inheritance to account for Duplex streams,
// whose prototype chain only points to Readable.


var realHasInstance;

if (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {
  realHasInstance = Function.prototype[Symbol.hasInstance];
  Object.defineProperty(Writable, Symbol.hasInstance, {
    value: function value(object) {
      if (realHasInstance.call(this, object)) return true;
      if (this !== Writable) return false;
      return object && object._writableState instanceof WritableState;
    }
  });
} else {
  realHasInstance = function realHasInstance(object) {
    return object instanceof this;
  };
}

function Writable(options) {
  Duplex = Duplex || require('./_stream_duplex'); // Writable ctor is applied to Duplexes, too.
  // `realHasInstance` is necessary because using plain `instanceof`
  // would return false, as no `_writableState` property is attached.
  // Trying to use the custom `instanceof` for Writable here will also break the
  // Node.js LazyTransform implementation, which has a non-trivial getter for
  // `_writableState` that would lead to infinite recursion.
  // Checking for a Stream.Duplex instance is faster here instead of inside
  // the WritableState constructor, at least with V8 6.5

  var isDuplex = this instanceof Duplex;
  if (!isDuplex && !realHasInstance.call(Writable, this)) return new Writable(options);
  this._writableState = new WritableState(options, this, isDuplex); // legacy.

  this.writable = true;

  if (options) {
    if (typeof options.write === 'function') this._write = options.write;
    if (typeof options.writev === 'function') this._writev = options.writev;
    if (typeof options.destroy === 'function') this._destroy = options.destroy;
    if (typeof options.final === 'function') this._final = options.final;
  }

  Stream.call(this);
} // Otherwise people can pipe Writable streams, which is just wrong.


Writable.prototype.pipe = function () {
  errorOrDestroy(this, new ERR_STREAM_CANNOT_PIPE());
};

function writeAfterEnd(stream, cb) {
  var er = new ERR_STREAM_WRITE_AFTER_END(); // TODO: defer error events consistently everywhere, not just the cb

  errorOrDestroy(stream, er);
  process.nextTick(cb, er);
} // Checks that a user-supplied chunk is valid, especially for the particular
// mode the stream is in. Currently this means that `null` is never accepted
// and undefined/non-string values are only allowed in object mode.


function validChunk(stream, state, chunk, cb) {
  var er;

  if (chunk === null) {
    er = new ERR_STREAM_NULL_VALUES();
  } else if (typeof chunk !== 'string' && !state.objectMode) {
    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer'], chunk);
  }

  if (er) {
    errorOrDestroy(stream, er);
    process.nextTick(cb, er);
    return false;
  }

  return true;
}

Writable.prototype.write = function (chunk, encoding, cb) {
  var state = this._writableState;
  var ret = false;

  var isBuf = !state.objectMode && _isUint8Array(chunk);

  if (isBuf && !Buffer.isBuffer(chunk)) {
    chunk = _uint8ArrayToBuffer(chunk);
  }

  if (typeof encoding === 'function') {
    cb = encoding;
    encoding = null;
  }

  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;
  if (typeof cb !== 'function') cb = nop;
  if (state.ending) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {
    state.pendingcb++;
    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);
  }
  return ret;
};

Writable.prototype.cork = function () {
  this._writableState.corked++;
};

Writable.prototype.uncork = function () {
  var state = this._writableState;

  if (state.corked) {
    state.corked--;
    if (!state.writing && !state.corked && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);
  }
};

Writable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {
  // node::ParseEncoding() requires lower case.
  if (typeof encoding === 'string') encoding = encoding.toLowerCase();
  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new ERR_UNKNOWN_ENCODING(encoding);
  this._writableState.defaultEncoding = encoding;
  return this;
};

Object.defineProperty(Writable.prototype, 'writableBuffer', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._writableState && this._writableState.getBuffer();
  }
});

function decodeChunk(state, chunk, encoding) {
  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {
    chunk = Buffer.from(chunk, encoding);
  }

  return chunk;
}

Object.defineProperty(Writable.prototype, 'writableHighWaterMark', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._writableState.highWaterMark;
  }
}); // if we're already writing something, then just put this
// in the queue, and wait our turn.  Otherwise, call _write
// If we return false, then we need a drain event, so set that flag.

function writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {
  if (!isBuf) {
    var newChunk = decodeChunk(state, chunk, encoding);

    if (chunk !== newChunk) {
      isBuf = true;
      encoding = 'buffer';
      chunk = newChunk;
    }
  }

  var len = state.objectMode ? 1 : chunk.length;
  state.length += len;
  var ret = state.length < state.highWaterMark; // we must ensure that previous needDrain will not be reset to false.

  if (!ret) state.needDrain = true;

  if (state.writing || state.corked) {
    var last = state.lastBufferedRequest;
    state.lastBufferedRequest = {
      chunk: chunk,
      encoding: encoding,
      isBuf: isBuf,
      callback: cb,
      next: null
    };

    if (last) {
      last.next = state.lastBufferedRequest;
    } else {
      state.bufferedRequest = state.lastBufferedRequest;
    }

    state.bufferedRequestCount += 1;
  } else {
    doWrite(stream, state, false, len, chunk, encoding, cb);
  }

  return ret;
}

function doWrite(stream, state, writev, len, chunk, encoding, cb) {
  state.writelen = len;
  state.writecb = cb;
  state.writing = true;
  state.sync = true;
  if (state.destroyed) state.onwrite(new ERR_STREAM_DESTROYED('write'));else if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);
  state.sync = false;
}

function onwriteError(stream, state, sync, er, cb) {
  --state.pendingcb;

  if (sync) {
    // defer the callback if we are being called synchronously
    // to avoid piling up things on the stack
    process.nextTick(cb, er); // this can emit finish, and it will always happen
    // after error

    process.nextTick(finishMaybe, stream, state);
    stream._writableState.errorEmitted = true;
    errorOrDestroy(stream, er);
  } else {
    // the caller expect this to happen before if
    // it is async
    cb(er);
    stream._writableState.errorEmitted = true;
    errorOrDestroy(stream, er); // this can emit finish, but finish must
    // always follow error

    finishMaybe(stream, state);
  }
}

function onwriteStateUpdate(state) {
  state.writing = false;
  state.writecb = null;
  state.length -= state.writelen;
  state.writelen = 0;
}

function onwrite(stream, er) {
  var state = stream._writableState;
  var sync = state.sync;
  var cb = state.writecb;
  if (typeof cb !== 'function') throw new ERR_MULTIPLE_CALLBACK();
  onwriteStateUpdate(state);
  if (er) onwriteError(stream, state, sync, er, cb);else {
    // Check if we're actually ready to finish, but don't emit yet
    var finished = needFinish(state) || stream.destroyed;

    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {
      clearBuffer(stream, state);
    }

    if (sync) {
      process.nextTick(afterWrite, stream, state, finished, cb);
    } else {
      afterWrite(stream, state, finished, cb);
    }
  }
}

function afterWrite(stream, state, finished, cb) {
  if (!finished) onwriteDrain(stream, state);
  state.pendingcb--;
  cb();
  finishMaybe(stream, state);
} // Must force callback to be called on nextTick, so that we don't
// emit 'drain' before the write() consumer gets the 'false' return
// value, and has a chance to attach a 'drain' listener.


function onwriteDrain(stream, state) {
  if (state.length === 0 && state.needDrain) {
    state.needDrain = false;
    stream.emit('drain');
  }
} // if there's something in the buffer waiting, then process it


function clearBuffer(stream, state) {
  state.bufferProcessing = true;
  var entry = state.bufferedRequest;

  if (stream._writev && entry && entry.next) {
    // Fast case, write everything using _writev()
    var l = state.bufferedRequestCount;
    var buffer = new Array(l);
    var holder = state.corkedRequestsFree;
    holder.entry = entry;
    var count = 0;
    var allBuffers = true;

    while (entry) {
      buffer[count] = entry;
      if (!entry.isBuf) allBuffers = false;
      entry = entry.next;
      count += 1;
    }

    buffer.allBuffers = allBuffers;
    doWrite(stream, state, true, state.length, buffer, '', holder.finish); // doWrite is almost always async, defer these to save a bit of time
    // as the hot path ends with doWrite

    state.pendingcb++;
    state.lastBufferedRequest = null;

    if (holder.next) {
      state.corkedRequestsFree = holder.next;
      holder.next = null;
    } else {
      state.corkedRequestsFree = new CorkedRequest(state);
    }

    state.bufferedRequestCount = 0;
  } else {
    // Slow case, write chunks one-by-one
    while (entry) {
      var chunk = entry.chunk;
      var encoding = entry.encoding;
      var cb = entry.callback;
      var len = state.objectMode ? 1 : chunk.length;
      doWrite(stream, state, false, len, chunk, encoding, cb);
      entry = entry.next;
      state.bufferedRequestCount--; // if we didn't call the onwrite immediately, then
      // it means that we need to wait until it does.
      // also, that means that the chunk and cb are currently
      // being processed, so move the buffer counter past them.

      if (state.writing) {
        break;
      }
    }

    if (entry === null) state.lastBufferedRequest = null;
  }

  state.bufferedRequest = entry;
  state.bufferProcessing = false;
}

Writable.prototype._write = function (chunk, encoding, cb) {
  cb(new ERR_METHOD_NOT_IMPLEMENTED('_write()'));
};

Writable.prototype._writev = null;

Writable.prototype.end = function (chunk, encoding, cb) {
  var state = this._writableState;

  if (typeof chunk === 'function') {
    cb = chunk;
    chunk = null;
    encoding = null;
  } else if (typeof encoding === 'function') {
    cb = encoding;
    encoding = null;
  }

  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding); // .end() fully uncorks

  if (state.corked) {
    state.corked = 1;
    this.uncork();
  } // ignore unnecessary end() calls.


  if (!state.ending) endWritable(this, state, cb);
  return this;
};

Object.defineProperty(Writable.prototype, 'writableLength', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._writableState.length;
  }
});

function needFinish(state) {
  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;
}

function callFinal(stream, state) {
  stream._final(function (err) {
    state.pendingcb--;

    if (err) {
      errorOrDestroy(stream, err);
    }

    state.prefinished = true;
    stream.emit('prefinish');
    finishMaybe(stream, state);
  });
}

function prefinish(stream, state) {
  if (!state.prefinished && !state.finalCalled) {
    if (typeof stream._final === 'function' && !state.destroyed) {
      state.pendingcb++;
      state.finalCalled = true;
      process.nextTick(callFinal, stream, state);
    } else {
      state.prefinished = true;
      stream.emit('prefinish');
    }
  }
}

function finishMaybe(stream, state) {
  var need = needFinish(state);

  if (need) {
    prefinish(stream, state);

    if (state.pendingcb === 0) {
      state.finished = true;
      stream.emit('finish');

      if (state.autoDestroy) {
        // In case of duplex streams we need a way to detect
        // if the readable side is ready for autoDestroy as well
        var rState = stream._readableState;

        if (!rState || rState.autoDestroy && rState.endEmitted) {
          stream.destroy();
        }
      }
    }
  }

  return need;
}

function endWritable(stream, state, cb) {
  state.ending = true;
  finishMaybe(stream, state);

  if (cb) {
    if (state.finished) process.nextTick(cb);else stream.once('finish', cb);
  }

  state.ended = true;
  stream.writable = false;
}

function onCorkedFinish(corkReq, state, err) {
  var entry = corkReq.entry;
  corkReq.entry = null;

  while (entry) {
    var cb = entry.callback;
    state.pendingcb--;
    cb(err);
    entry = entry.next;
  } // reuse the free corkReq.


  state.corkedRequestsFree.next = corkReq;
}

Object.defineProperty(Writable.prototype, 'destroyed', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    if (this._writableState === undefined) {
      return false;
    }

    return this._writableState.destroyed;
  },
  set: function set(value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (!this._writableState) {
      return;
    } // backward compatibility, the user is explicitly
    // managing destroyed


    this._writableState.destroyed = value;
  }
});
Writable.prototype.destroy = destroyImpl.destroy;
Writable.prototype._undestroy = destroyImpl.undestroy;

Writable.prototype._destroy = function (err, cb) {
  cb(err);
};
}).call(this)}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"../errors":130,"./_stream_duplex":131,"./internal/streams/destroy":138,"./internal/streams/state":142,"./internal/streams/stream":143,"_process":236,"buffer":126,"inherits":230,"util-deprecate":254}],136:[function(require,module,exports){
(function (process){(function (){
'use strict';

var _Object$setPrototypeO;

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var finished = require('./end-of-stream');

var kLastResolve = Symbol('lastResolve');
var kLastReject = Symbol('lastReject');
var kError = Symbol('error');
var kEnded = Symbol('ended');
var kLastPromise = Symbol('lastPromise');
var kHandlePromise = Symbol('handlePromise');
var kStream = Symbol('stream');

function createIterResult(value, done) {
  return {
    value: value,
    done: done
  };
}

function readAndResolve(iter) {
  var resolve = iter[kLastResolve];

  if (resolve !== null) {
    var data = iter[kStream].read(); // we defer if data is null
    // we can be expecting either 'end' or
    // 'error'

    if (data !== null) {
      iter[kLastPromise] = null;
      iter[kLastResolve] = null;
      iter[kLastReject] = null;
      resolve(createIterResult(data, false));
    }
  }
}

function onReadable(iter) {
  // we wait for the next tick, because it might
  // emit an error with process.nextTick
  process.nextTick(readAndResolve, iter);
}

function wrapForNext(lastPromise, iter) {
  return function (resolve, reject) {
    lastPromise.then(function () {
      if (iter[kEnded]) {
        resolve(createIterResult(undefined, true));
        return;
      }

      iter[kHandlePromise](resolve, reject);
    }, reject);
  };
}

var AsyncIteratorPrototype = Object.getPrototypeOf(function () {});
var ReadableStreamAsyncIteratorPrototype = Object.setPrototypeOf((_Object$setPrototypeO = {
  get stream() {
    return this[kStream];
  },

  next: function next() {
    var _this = this;

    // if we have detected an error in the meanwhile
    // reject straight away
    var error = this[kError];

    if (error !== null) {
      return Promise.reject(error);
    }

    if (this[kEnded]) {
      return Promise.resolve(createIterResult(undefined, true));
    }

    if (this[kStream].destroyed) {
      // We need to defer via nextTick because if .destroy(err) is
      // called, the error will be emitted via nextTick, and
      // we cannot guarantee that there is no error lingering around
      // waiting to be emitted.
      return new Promise(function (resolve, reject) {
        process.nextTick(function () {
          if (_this[kError]) {
            reject(_this[kError]);
          } else {
            resolve(createIterResult(undefined, true));
          }
        });
      });
    } // if we have multiple next() calls
    // we will wait for the previous Promise to finish
    // this logic is optimized to support for await loops,
    // where next() is only called once at a time


    var lastPromise = this[kLastPromise];
    var promise;

    if (lastPromise) {
      promise = new Promise(wrapForNext(lastPromise, this));
    } else {
      // fast path needed to support multiple this.push()
      // without triggering the next() queue
      var data = this[kStream].read();

      if (data !== null) {
        return Promise.resolve(createIterResult(data, false));
      }

      promise = new Promise(this[kHandlePromise]);
    }

    this[kLastPromise] = promise;
    return promise;
  }
}, _defineProperty(_Object$setPrototypeO, Symbol.asyncIterator, function () {
  return this;
}), _defineProperty(_Object$setPrototypeO, "return", function _return() {
  var _this2 = this;

  // destroy(err, cb) is a private API
  // we can guarantee we have that here, because we control the
  // Readable class this is attached to
  return new Promise(function (resolve, reject) {
    _this2[kStream].destroy(null, function (err) {
      if (err) {
        reject(err);
        return;
      }

      resolve(createIterResult(undefined, true));
    });
  });
}), _Object$setPrototypeO), AsyncIteratorPrototype);

var createReadableStreamAsyncIterator = function createReadableStreamAsyncIterator(stream) {
  var _Object$create;

  var iterator = Object.create(ReadableStreamAsyncIteratorPrototype, (_Object$create = {}, _defineProperty(_Object$create, kStream, {
    value: stream,
    writable: true
  }), _defineProperty(_Object$create, kLastResolve, {
    value: null,
    writable: true
  }), _defineProperty(_Object$create, kLastReject, {
    value: null,
    writable: true
  }), _defineProperty(_Object$create, kError, {
    value: null,
    writable: true
  }), _defineProperty(_Object$create, kEnded, {
    value: stream._readableState.endEmitted,
    writable: true
  }), _defineProperty(_Object$create, kHandlePromise, {
    value: function value(resolve, reject) {
      var data = iterator[kStream].read();

      if (data) {
        iterator[kLastPromise] = null;
        iterator[kLastResolve] = null;
        iterator[kLastReject] = null;
        resolve(createIterResult(data, false));
      } else {
        iterator[kLastResolve] = resolve;
        iterator[kLastReject] = reject;
      }
    },
    writable: true
  }), _Object$create));
  iterator[kLastPromise] = null;
  finished(stream, function (err) {
    if (err && err.code !== 'ERR_STREAM_PREMATURE_CLOSE') {
      var reject = iterator[kLastReject]; // reject if we are waiting for data in the Promise
      // returned by next() and store the error

      if (reject !== null) {
        iterator[kLastPromise] = null;
        iterator[kLastResolve] = null;
        iterator[kLastReject] = null;
        reject(err);
      }

      iterator[kError] = err;
      return;
    }

    var resolve = iterator[kLastResolve];

    if (resolve !== null) {
      iterator[kLastPromise] = null;
      iterator[kLastResolve] = null;
      iterator[kLastReject] = null;
      resolve(createIterResult(undefined, true));
    }

    iterator[kEnded] = true;
  });
  stream.on('readable', onReadable.bind(null, iterator));
  return iterator;
};

module.exports = createReadableStreamAsyncIterator;
}).call(this)}).call(this,require('_process'))
},{"./end-of-stream":139,"_process":236}],137:[function(require,module,exports){
'use strict';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var _require = require('buffer'),
    Buffer = _require.Buffer;

var _require2 = require('util'),
    inspect = _require2.inspect;

var custom = inspect && inspect.custom || 'inspect';

function copyBuffer(src, target, offset) {
  Buffer.prototype.copy.call(src, target, offset);
}

module.exports =
/*#__PURE__*/
function () {
  function BufferList() {
    _classCallCheck(this, BufferList);

    this.head = null;
    this.tail = null;
    this.length = 0;
  }

  _createClass(BufferList, [{
    key: "push",
    value: function push(v) {
      var entry = {
        data: v,
        next: null
      };
      if (this.length > 0) this.tail.next = entry;else this.head = entry;
      this.tail = entry;
      ++this.length;
    }
  }, {
    key: "unshift",
    value: function unshift(v) {
      var entry = {
        data: v,
        next: this.head
      };
      if (this.length === 0) this.tail = entry;
      this.head = entry;
      ++this.length;
    }
  }, {
    key: "shift",
    value: function shift() {
      if (this.length === 0) return;
      var ret = this.head.data;
      if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;
      --this.length;
      return ret;
    }
  }, {
    key: "clear",
    value: function clear() {
      this.head = this.tail = null;
      this.length = 0;
    }
  }, {
    key: "join",
    value: function join(s) {
      if (this.length === 0) return '';
      var p = this.head;
      var ret = '' + p.data;

      while (p = p.next) {
        ret += s + p.data;
      }

      return ret;
    }
  }, {
    key: "concat",
    value: function concat(n) {
      if (this.length === 0) return Buffer.alloc(0);
      var ret = Buffer.allocUnsafe(n >>> 0);
      var p = this.head;
      var i = 0;

      while (p) {
        copyBuffer(p.data, ret, i);
        i += p.data.length;
        p = p.next;
      }

      return ret;
    } // Consumes a specified amount of bytes or characters from the buffered data.

  }, {
    key: "consume",
    value: function consume(n, hasStrings) {
      var ret;

      if (n < this.head.data.length) {
        // `slice` is the same for buffers and strings.
        ret = this.head.data.slice(0, n);
        this.head.data = this.head.data.slice(n);
      } else if (n === this.head.data.length) {
        // First chunk is a perfect match.
        ret = this.shift();
      } else {
        // Result spans more than one buffer.
        ret = hasStrings ? this._getString(n) : this._getBuffer(n);
      }

      return ret;
    }
  }, {
    key: "first",
    value: function first() {
      return this.head.data;
    } // Consumes a specified amount of characters from the buffered data.

  }, {
    key: "_getString",
    value: function _getString(n) {
      var p = this.head;
      var c = 1;
      var ret = p.data;
      n -= ret.length;

      while (p = p.next) {
        var str = p.data;
        var nb = n > str.length ? str.length : n;
        if (nb === str.length) ret += str;else ret += str.slice(0, n);
        n -= nb;

        if (n === 0) {
          if (nb === str.length) {
            ++c;
            if (p.next) this.head = p.next;else this.head = this.tail = null;
          } else {
            this.head = p;
            p.data = str.slice(nb);
          }

          break;
        }

        ++c;
      }

      this.length -= c;
      return ret;
    } // Consumes a specified amount of bytes from the buffered data.

  }, {
    key: "_getBuffer",
    value: function _getBuffer(n) {
      var ret = Buffer.allocUnsafe(n);
      var p = this.head;
      var c = 1;
      p.data.copy(ret);
      n -= p.data.length;

      while (p = p.next) {
        var buf = p.data;
        var nb = n > buf.length ? buf.length : n;
        buf.copy(ret, ret.length - n, 0, nb);
        n -= nb;

        if (n === 0) {
          if (nb === buf.length) {
            ++c;
            if (p.next) this.head = p.next;else this.head = this.tail = null;
          } else {
            this.head = p;
            p.data = buf.slice(nb);
          }

          break;
        }

        ++c;
      }

      this.length -= c;
      return ret;
    } // Make sure the linked list only shows the minimal necessary information.

  }, {
    key: custom,
    value: function value(_, options) {
      return inspect(this, _objectSpread({}, options, {
        // Only inspect one level.
        depth: 0,
        // It should not recurse.
        customInspect: false
      }));
    }
  }]);

  return BufferList;
}();
},{"buffer":126,"util":124}],138:[function(require,module,exports){
(function (process){(function (){
'use strict'; // undocumented cb() API, needed for core, not for public API

function destroy(err, cb) {
  var _this = this;

  var readableDestroyed = this._readableState && this._readableState.destroyed;
  var writableDestroyed = this._writableState && this._writableState.destroyed;

  if (readableDestroyed || writableDestroyed) {
    if (cb) {
      cb(err);
    } else if (err) {
      if (!this._writableState) {
        process.nextTick(emitErrorNT, this, err);
      } else if (!this._writableState.errorEmitted) {
        this._writableState.errorEmitted = true;
        process.nextTick(emitErrorNT, this, err);
      }
    }

    return this;
  } // we set destroyed to true before firing error callbacks in order
  // to make it re-entrance safe in case destroy() is called within callbacks


  if (this._readableState) {
    this._readableState.destroyed = true;
  } // if this is a duplex stream mark the writable part as destroyed as well


  if (this._writableState) {
    this._writableState.destroyed = true;
  }

  this._destroy(err || null, function (err) {
    if (!cb && err) {
      if (!_this._writableState) {
        process.nextTick(emitErrorAndCloseNT, _this, err);
      } else if (!_this._writableState.errorEmitted) {
        _this._writableState.errorEmitted = true;
        process.nextTick(emitErrorAndCloseNT, _this, err);
      } else {
        process.nextTick(emitCloseNT, _this);
      }
    } else if (cb) {
      process.nextTick(emitCloseNT, _this);
      cb(err);
    } else {
      process.nextTick(emitCloseNT, _this);
    }
  });

  return this;
}

function emitErrorAndCloseNT(self, err) {
  emitErrorNT(self, err);
  emitCloseNT(self);
}

function emitCloseNT(self) {
  if (self._writableState && !self._writableState.emitClose) return;
  if (self._readableState && !self._readableState.emitClose) return;
  self.emit('close');
}

function undestroy() {
  if (this._readableState) {
    this._readableState.destroyed = false;
    this._readableState.reading = false;
    this._readableState.ended = false;
    this._readableState.endEmitted = false;
  }

  if (this._writableState) {
    this._writableState.destroyed = false;
    this._writableState.ended = false;
    this._writableState.ending = false;
    this._writableState.finalCalled = false;
    this._writableState.prefinished = false;
    this._writableState.finished = false;
    this._writableState.errorEmitted = false;
  }
}

function emitErrorNT(self, err) {
  self.emit('error', err);
}

function errorOrDestroy(stream, err) {
  // We have tests that rely on errors being emitted
  // in the same tick, so changing this is semver major.
  // For now when you opt-in to autoDestroy we allow
  // the error to be emitted nextTick. In a future
  // semver major update we should change the default to this.
  var rState = stream._readableState;
  var wState = stream._writableState;
  if (rState && rState.autoDestroy || wState && wState.autoDestroy) stream.destroy(err);else stream.emit('error', err);
}

module.exports = {
  destroy: destroy,
  undestroy: undestroy,
  errorOrDestroy: errorOrDestroy
};
}).call(this)}).call(this,require('_process'))
},{"_process":236}],139:[function(require,module,exports){
// Ported from https://github.com/mafintosh/end-of-stream with
// permission from the author, Mathias Buus (@mafintosh).
'use strict';

var ERR_STREAM_PREMATURE_CLOSE = require('../../../errors').codes.ERR_STREAM_PREMATURE_CLOSE;

function once(callback) {
  var called = false;
  return function () {
    if (called) return;
    called = true;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    callback.apply(this, args);
  };
}

function noop() {}

function isRequest(stream) {
  return stream.setHeader && typeof stream.abort === 'function';
}

function eos(stream, opts, callback) {
  if (typeof opts === 'function') return eos(stream, null, opts);
  if (!opts) opts = {};
  callback = once(callback || noop);
  var readable = opts.readable || opts.readable !== false && stream.readable;
  var writable = opts.writable || opts.writable !== false && stream.writable;

  var onlegacyfinish = function onlegacyfinish() {
    if (!stream.writable) onfinish();
  };

  var writableEnded = stream._writableState && stream._writableState.finished;

  var onfinish = function onfinish() {
    writable = false;
    writableEnded = true;
    if (!readable) callback.call(stream);
  };

  var readableEnded = stream._readableState && stream._readableState.endEmitted;

  var onend = function onend() {
    readable = false;
    readableEnded = true;
    if (!writable) callback.call(stream);
  };

  var onerror = function onerror(err) {
    callback.call(stream, err);
  };

  var onclose = function onclose() {
    var err;

    if (readable && !readableEnded) {
      if (!stream._readableState || !stream._readableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();
      return callback.call(stream, err);
    }

    if (writable && !writableEnded) {
      if (!stream._writableState || !stream._writableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();
      return callback.call(stream, err);
    }
  };

  var onrequest = function onrequest() {
    stream.req.on('finish', onfinish);
  };

  if (isRequest(stream)) {
    stream.on('complete', onfinish);
    stream.on('abort', onclose);
    if (stream.req) onrequest();else stream.on('request', onrequest);
  } else if (writable && !stream._writableState) {
    // legacy streams
    stream.on('end', onlegacyfinish);
    stream.on('close', onlegacyfinish);
  }

  stream.on('end', onend);
  stream.on('finish', onfinish);
  if (opts.error !== false) stream.on('error', onerror);
  stream.on('close', onclose);
  return function () {
    stream.removeListener('complete', onfinish);
    stream.removeListener('abort', onclose);
    stream.removeListener('request', onrequest);
    if (stream.req) stream.req.removeListener('finish', onfinish);
    stream.removeListener('end', onlegacyfinish);
    stream.removeListener('close', onlegacyfinish);
    stream.removeListener('finish', onfinish);
    stream.removeListener('end', onend);
    stream.removeListener('error', onerror);
    stream.removeListener('close', onclose);
  };
}

module.exports = eos;
},{"../../../errors":130}],140:[function(require,module,exports){
module.exports = function () {
  throw new Error('Readable.from is not available in the browser')
};

},{}],141:[function(require,module,exports){
// Ported from https://github.com/mafintosh/pump with
// permission from the author, Mathias Buus (@mafintosh).
'use strict';

var eos;

function once(callback) {
  var called = false;
  return function () {
    if (called) return;
    called = true;
    callback.apply(void 0, arguments);
  };
}

var _require$codes = require('../../../errors').codes,
    ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS,
    ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED;

function noop(err) {
  // Rethrow the error if it exists to avoid swallowing it
  if (err) throw err;
}

function isRequest(stream) {
  return stream.setHeader && typeof stream.abort === 'function';
}

function destroyer(stream, reading, writing, callback) {
  callback = once(callback);
  var closed = false;
  stream.on('close', function () {
    closed = true;
  });
  if (eos === undefined) eos = require('./end-of-stream');
  eos(stream, {
    readable: reading,
    writable: writing
  }, function (err) {
    if (err) return callback(err);
    closed = true;
    callback();
  });
  var destroyed = false;
  return function (err) {
    if (closed) return;
    if (destroyed) return;
    destroyed = true; // request.destroy just do .end - .abort is what we want

    if (isRequest(stream)) return stream.abort();
    if (typeof stream.destroy === 'function') return stream.destroy();
    callback(err || new ERR_STREAM_DESTROYED('pipe'));
  };
}

function call(fn) {
  fn();
}

function pipe(from, to) {
  return from.pipe(to);
}

function popCallback(streams) {
  if (!streams.length) return noop;
  if (typeof streams[streams.length - 1] !== 'function') return noop;
  return streams.pop();
}

function pipeline() {
  for (var _len = arguments.length, streams = new Array(_len), _key = 0; _key < _len; _key++) {
    streams[_key] = arguments[_key];
  }

  var callback = popCallback(streams);
  if (Array.isArray(streams[0])) streams = streams[0];

  if (streams.length < 2) {
    throw new ERR_MISSING_ARGS('streams');
  }

  var error;
  var destroys = streams.map(function (stream, i) {
    var reading = i < streams.length - 1;
    var writing = i > 0;
    return destroyer(stream, reading, writing, function (err) {
      if (!error) error = err;
      if (err) destroys.forEach(call);
      if (reading) return;
      destroys.forEach(call);
      callback(error);
    });
  });
  return streams.reduce(pipe);
}

module.exports = pipeline;
},{"../../../errors":130,"./end-of-stream":139}],142:[function(require,module,exports){
'use strict';

var ERR_INVALID_OPT_VALUE = require('../../../errors').codes.ERR_INVALID_OPT_VALUE;

function highWaterMarkFrom(options, isDuplex, duplexKey) {
  return options.highWaterMark != null ? options.highWaterMark : isDuplex ? options[duplexKey] : null;
}

function getHighWaterMark(state, options, duplexKey, isDuplex) {
  var hwm = highWaterMarkFrom(options, isDuplex, duplexKey);

  if (hwm != null) {
    if (!(isFinite(hwm) && Math.floor(hwm) === hwm) || hwm < 0) {
      var name = isDuplex ? duplexKey : 'highWaterMark';
      throw new ERR_INVALID_OPT_VALUE(name, hwm);
    }

    return Math.floor(hwm);
  } // Default value


  return state.objectMode ? 16 : 16 * 1024;
}

module.exports = {
  getHighWaterMark: getHighWaterMark
};
},{"../../../errors":130}],143:[function(require,module,exports){
module.exports = require('events').EventEmitter;

},{"events":127}],144:[function(require,module,exports){
'use strict';

var GetIntrinsic = require('get-intrinsic');

var callBind = require('./');

var $indexOf = callBind(GetIntrinsic('String.prototype.indexOf'));

module.exports = function callBoundIntrinsic(name, allowMissing) {
	var intrinsic = GetIntrinsic(name, !!allowMissing);
	if (typeof intrinsic === 'function' && $indexOf(name, '.prototype.') > -1) {
		return callBind(intrinsic);
	}
	return intrinsic;
};

},{"./":145,"get-intrinsic":220}],145:[function(require,module,exports){
'use strict';

var bind = require('function-bind');
var GetIntrinsic = require('get-intrinsic');
var setFunctionLength = require('set-function-length');

var $TypeError = require('es-errors/type');
var $apply = GetIntrinsic('%Function.prototype.apply%');
var $call = GetIntrinsic('%Function.prototype.call%');
var $reflectApply = GetIntrinsic('%Reflect.apply%', true) || bind.call($call, $apply);

var $defineProperty = require('es-define-property');
var $max = GetIntrinsic('%Math.max%');

module.exports = function callBind(originalFunction) {
	if (typeof originalFunction !== 'function') {
		throw new $TypeError('a function is required');
	}
	var func = $reflectApply(bind, $call, arguments);
	return setFunctionLength(
		func,
		1 + $max(0, originalFunction.length - (arguments.length - 1)),
		true
	);
};

var applyBind = function applyBind() {
	return $reflectApply(bind, $apply, arguments);
};

if ($defineProperty) {
	$defineProperty(module.exports, 'apply', { value: applyBind });
} else {
	module.exports.apply = applyBind;
}

},{"es-define-property":205,"es-errors/type":211,"function-bind":219,"get-intrinsic":220,"set-function-length":240}],146:[function(require,module,exports){
var pSlice = Array.prototype.slice;
var objectKeys = require('./lib/keys.js');
var isArguments = require('./lib/is_arguments.js');

var deepEqual = module.exports = function (actual, expected, opts) {
  if (!opts) opts = {};
  // 7.1. All identical values are equivalent, as determined by ===.
  if (actual === expected) {
    return true;

  } else if (actual instanceof Date && expected instanceof Date) {
    return actual.getTime() === expected.getTime();

  // 7.3. Other pairs that do not both pass typeof value == 'object',
  // equivalence is determined by ==.
  } else if (!actual || !expected || typeof actual != 'object' && typeof expected != 'object') {
    return opts.strict ? actual === expected : actual == expected;

  // 7.4. For all other Object pairs, including Array objects, equivalence is
  // determined by having the same number of owned properties (as verified
  // with Object.prototype.hasOwnProperty.call), the same set of keys
  // (although not necessarily the same order), equivalent values for every
  // corresponding key, and an identical 'prototype' property. Note: this
  // accounts for both named and indexed properties on Arrays.
  } else {
    return objEquiv(actual, expected, opts);
  }
}

function isUndefinedOrNull(value) {
  return value === null || value === undefined;
}

function isBuffer (x) {
  if (!x || typeof x !== 'object' || typeof x.length !== 'number') return false;
  if (typeof x.copy !== 'function' || typeof x.slice !== 'function') {
    return false;
  }
  if (x.length > 0 && typeof x[0] !== 'number') return false;
  return true;
}

function objEquiv(a, b, opts) {
  var i, key;
  if (isUndefinedOrNull(a) || isUndefinedOrNull(b))
    return false;
  // an identical 'prototype' property.
  if (a.prototype !== b.prototype) return false;
  //~~~I've managed to break Object.keys through screwy arguments passing.
  //   Converting to array solves the problem.
  if (isArguments(a)) {
    if (!isArguments(b)) {
      return false;
    }
    a = pSlice.call(a);
    b = pSlice.call(b);
    return deepEqual(a, b, opts);
  }
  if (isBuffer(a)) {
    if (!isBuffer(b)) {
      return false;
    }
    if (a.length !== b.length) return false;
    for (i = 0; i < a.length; i++) {
      if (a[i] !== b[i]) return false;
    }
    return true;
  }
  try {
    var ka = objectKeys(a),
        kb = objectKeys(b);
  } catch (e) {//happens when one is a string literal and the other isn't
    return false;
  }
  // having the same number of owned properties (keys incorporates
  // hasOwnProperty)
  if (ka.length != kb.length)
    return false;
  //the same set of keys (although not necessarily the same order),
  ka.sort();
  kb.sort();
  //~~~cheap key test
  for (i = ka.length - 1; i >= 0; i--) {
    if (ka[i] != kb[i])
      return false;
  }
  //equivalent values for every corresponding key, and
  //~~~possibly expensive deep test
  for (i = ka.length - 1; i >= 0; i--) {
    key = ka[i];
    if (!deepEqual(a[key], b[key], opts)) return false;
  }
  return typeof a === typeof b;
}

},{"./lib/is_arguments.js":147,"./lib/keys.js":148}],147:[function(require,module,exports){
var supportsArgumentsClass = (function(){
  return Object.prototype.toString.call(arguments)
})() == '[object Arguments]';

exports = module.exports = supportsArgumentsClass ? supported : unsupported;

exports.supported = supported;
function supported(object) {
  return Object.prototype.toString.call(object) == '[object Arguments]';
};

exports.unsupported = unsupported;
function unsupported(object){
  return object &&
    typeof object == 'object' &&
    typeof object.length == 'number' &&
    Object.prototype.hasOwnProperty.call(object, 'callee') &&
    !Object.prototype.propertyIsEnumerable.call(object, 'callee') ||
    false;
};

},{}],148:[function(require,module,exports){
exports = module.exports = typeof Object.keys === 'function'
  ? Object.keys : shim;

exports.shim = shim;
function shim (obj) {
  var keys = [];
  for (var key in obj) keys.push(key);
  return keys;
}

},{}],149:[function(require,module,exports){
'use strict';

var $defineProperty = require('es-define-property');

var $SyntaxError = require('es-errors/syntax');
var $TypeError = require('es-errors/type');

var gopd = require('gopd');

/** @type {import('.')} */
module.exports = function defineDataProperty(
	obj,
	property,
	value
) {
	if (!obj || (typeof obj !== 'object' && typeof obj !== 'function')) {
		throw new $TypeError('`obj` must be an object or a function`');
	}
	if (typeof property !== 'string' && typeof property !== 'symbol') {
		throw new $TypeError('`property` must be a string or a symbol`');
	}
	if (arguments.length > 3 && typeof arguments[3] !== 'boolean' && arguments[3] !== null) {
		throw new $TypeError('`nonEnumerable`, if provided, must be a boolean or null');
	}
	if (arguments.length > 4 && typeof arguments[4] !== 'boolean' && arguments[4] !== null) {
		throw new $TypeError('`nonWritable`, if provided, must be a boolean or null');
	}
	if (arguments.length > 5 && typeof arguments[5] !== 'boolean' && arguments[5] !== null) {
		throw new $TypeError('`nonConfigurable`, if provided, must be a boolean or null');
	}
	if (arguments.length > 6 && typeof arguments[6] !== 'boolean') {
		throw new $TypeError('`loose`, if provided, must be a boolean');
	}

	var nonEnumerable = arguments.length > 3 ? arguments[3] : null;
	var nonWritable = arguments.length > 4 ? arguments[4] : null;
	var nonConfigurable = arguments.length > 5 ? arguments[5] : null;
	var loose = arguments.length > 6 ? arguments[6] : false;

	/* @type {false | TypedPropertyDescriptor<unknown>} */
	var desc = !!gopd && gopd(obj, property);

	if ($defineProperty) {
		$defineProperty(obj, property, {
			configurable: nonConfigurable === null && desc ? desc.configurable : !nonConfigurable,
			enumerable: nonEnumerable === null && desc ? desc.enumerable : !nonEnumerable,
			value: value,
			writable: nonWritable === null && desc ? desc.writable : !nonWritable
		});
	} else if (loose || (!nonEnumerable && !nonWritable && !nonConfigurable)) {
		// must fall back to [[Set]], and was not explicitly asked to make non-enumerable, non-writable, or non-configurable
		obj[property] = value; // eslint-disable-line no-param-reassign
	} else {
		throw new $SyntaxError('This environment does not support defining a property as non-configurable, non-writable, or non-enumerable.');
	}
};

},{"es-define-property":205,"es-errors/syntax":210,"es-errors/type":211,"gopd":221}],150:[function(require,module,exports){
'use strict';

var keys = require('object-keys');
var hasSymbols = typeof Symbol === 'function' && typeof Symbol('foo') === 'symbol';

var toStr = Object.prototype.toString;
var concat = Array.prototype.concat;
var defineDataProperty = require('define-data-property');

var isFunction = function (fn) {
	return typeof fn === 'function' && toStr.call(fn) === '[object Function]';
};

var supportsDescriptors = require('has-property-descriptors')();

var defineProperty = function (object, name, value, predicate) {
	if (name in object) {
		if (predicate === true) {
			if (object[name] === value) {
				return;
			}
		} else if (!isFunction(predicate) || !predicate()) {
			return;
		}
	}

	if (supportsDescriptors) {
		defineDataProperty(object, name, value, true);
	} else {
		defineDataProperty(object, name, value);
	}
};

var defineProperties = function (object, map) {
	var predicates = arguments.length > 2 ? arguments[2] : {};
	var props = keys(map);
	if (hasSymbols) {
		props = concat.call(props, Object.getOwnPropertySymbols(map));
	}
	for (var i = 0; i < props.length; i += 1) {
		defineProperty(object, props[i], map[props[i]], predicates[props[i]]);
	}
};

defineProperties.supportsDescriptors = !!supportsDescriptors;

module.exports = defineProperties;

},{"define-data-property":149,"has-property-descriptors":222,"object-keys":234}],151:[function(require,module,exports){
module.exports = function () {
    for (var i = 0; i < arguments.length; i++) {
        if (arguments[i] !== undefined) return arguments[i];
    }
};

},{}],152:[function(require,module,exports){
'use strict';

var ToNumber = require('./ToNumber');
var ToPrimitive = require('./ToPrimitive');
var Type = require('./Type');

// https://262.ecma-international.org/5.1/#sec-11.9.3

module.exports = function AbstractEqualityComparison(x, y) {
	var xType = Type(x);
	var yType = Type(y);
	if (xType === yType) {
		return x === y; // ES6+ specified this shortcut anyways.
	}
	if (x == null && y == null) {
		return true;
	}
	if (xType === 'Number' && yType === 'String') {
		return AbstractEqualityComparison(x, ToNumber(y));
	}
	if (xType === 'String' && yType === 'Number') {
		return AbstractEqualityComparison(ToNumber(x), y);
	}
	if (xType === 'Boolean') {
		return AbstractEqualityComparison(ToNumber(x), y);
	}
	if (yType === 'Boolean') {
		return AbstractEqualityComparison(x, ToNumber(y));
	}
	if ((xType === 'String' || xType === 'Number') && yType === 'Object') {
		return AbstractEqualityComparison(x, ToPrimitive(y));
	}
	if (xType === 'Object' && (yType === 'String' || yType === 'Number')) {
		return AbstractEqualityComparison(ToPrimitive(x), y);
	}
	return false;
};

},{"./ToNumber":183,"./ToPrimitive":185,"./Type":190}],153:[function(require,module,exports){
'use strict';

var GetIntrinsic = require('get-intrinsic');

var $Number = GetIntrinsic('%Number%');
var $TypeError = require('es-errors/type');

var $isNaN = require('../helpers/isNaN');
var $isFinite = require('../helpers/isFinite');
var isPrefixOf = require('../helpers/isPrefixOf');

var ToNumber = require('./ToNumber');
var ToPrimitive = require('./ToPrimitive');

// https://262.ecma-international.org/5.1/#sec-11.8.5

// eslint-disable-next-line max-statements
module.exports = function AbstractRelationalComparison(x, y, LeftFirst) {
	if (typeof LeftFirst !== 'boolean') {
		throw new $TypeError('Assertion failed: LeftFirst argument must be a Boolean');
	}
	var px;
	var py;
	if (LeftFirst) {
		px = ToPrimitive(x, $Number);
		py = ToPrimitive(y, $Number);
	} else {
		py = ToPrimitive(y, $Number);
		px = ToPrimitive(x, $Number);
	}
	var bothStrings = typeof px === 'string' && typeof py === 'string';
	if (!bothStrings) {
		var nx = ToNumber(px);
		var ny = ToNumber(py);
		if ($isNaN(nx) || $isNaN(ny)) {
			return undefined;
		}
		if ($isFinite(nx) && $isFinite(ny) && nx === ny) {
			return false;
		}
		if (nx === Infinity) {
			return false;
		}
		if (ny === Infinity) {
			return true;
		}
		if (ny === -Infinity) {
			return false;
		}
		if (nx === -Infinity) {
			return true;
		}
		return nx < ny; // by now, these are both nonzero, finite, and not equal
	}
	if (isPrefixOf(py, px)) {
		return false;
	}
	if (isPrefixOf(px, py)) {
		return true;
	}
	return px < py; // both strings, neither a prefix of the other. shortcut for steps c-f
};

},{"../helpers/isFinite":198,"../helpers/isNaN":199,"../helpers/isPrefixOf":200,"./ToNumber":183,"./ToPrimitive":185,"es-errors/type":211,"get-intrinsic":220}],154:[function(require,module,exports){
'use strict';

var $TypeError = require('es-errors/type');

var callBound = require('call-bind/callBound');

var $charCodeAt = callBound('String.prototype.charCodeAt');
var $toUpperCase = callBound('String.prototype.toUpperCase');

// https://262.ecma-international.org/5.1/#sec-15.10.2.8

module.exports = function Canonicalize(ch, IgnoreCase) {
	if (typeof ch !== 'string' || ch.length !== 1) {
		throw new $TypeError('Assertion failed: `ch` must be a character');
	}

	if (typeof IgnoreCase !== 'boolean') {
		throw new $TypeError('Assertion failed: `IgnoreCase` must be a Boolean');
	}

	if (!IgnoreCase) {
		return ch; // step 1
	}

	var u = $toUpperCase(ch); // step 2

	if (u.length !== 1) {
		return ch; // step 3
	}

	var cu = u; // step 4

	if ($charCodeAt(ch, 0) >= 128 && $charCodeAt(cu, 0) < 128) {
		return ch; // step 5
	}

	return cu;
};

},{"call-bind/callBound":144,"es-errors/type":211}],155:[function(require,module,exports){
'use strict';

var RequireObjectCoercible = require('es-object-atoms/RequireObjectCoercible');

// http://262.ecma-international.org/5.1/#sec-9.10

module.exports = function CheckObjectCoercible(value) {
	return RequireObjectCoercible(value, arguments.length > 1 ? arguments[1] : void undefined);
};

},{"es-object-atoms/RequireObjectCoercible":213}],156:[function(require,module,exports){
'use strict';

var $EvalError = require('es-errors/eval');

var DayWithinYear = require('./DayWithinYear');
var InLeapYear = require('./InLeapYear');
var MonthFromTime = require('./MonthFromTime');

// https://262.ecma-international.org/5.1/#sec-15.9.1.5

module.exports = function DateFromTime(t) {
	var m = MonthFromTime(t);
	var d = DayWithinYear(t);
	if (m === 0) {
		return d + 1;
	}
	if (m === 1) {
		return d - 30;
	}
	var leap = InLeapYear(t);
	if (m === 2) {
		return d - 58 - leap;
	}
	if (m === 3) {
		return d - 89 - leap;
	}
	if (m === 4) {
		return d - 119 - leap;
	}
	if (m === 5) {
		return d - 150 - leap;
	}
	if (m === 6) {
		return d - 180 - leap;
	}
	if (m === 7) {
		return d - 211 - leap;
	}
	if (m === 8) {
		return d - 242 - leap;
	}
	if (m === 9) {
		return d - 272 - leap;
	}
	if (m === 10) {
		return d - 303 - leap;
	}
	if (m === 11) {
		return d - 333 - leap;
	}
	throw new $EvalError('Assertion failed: MonthFromTime returned an impossible value: ' + m);
};

},{"./DayWithinYear":159,"./InLeapYear":163,"./MonthFromTime":173,"es-errors/eval":206}],157:[function(require,module,exports){
'use strict';

var floor = require('./floor');

var msPerDay = require('../helpers/timeConstants').msPerDay;

// https://262.ecma-international.org/5.1/#sec-15.9.1.2

module.exports = function Day(t) {
	return floor(t / msPerDay);
};

},{"../helpers/timeConstants":204,"./floor":194}],158:[function(require,module,exports){
'use strict';

var floor = require('./floor');

// https://262.ecma-international.org/5.1/#sec-15.9.1.3

module.exports = function DayFromYear(y) {
	return (365 * (y - 1970)) + floor((y - 1969) / 4) - floor((y - 1901) / 100) + floor((y - 1601) / 400);
};


},{"./floor":194}],159:[function(require,module,exports){
'use strict';

var Day = require('./Day');
var DayFromYear = require('./DayFromYear');
var YearFromTime = require('./YearFromTime');

// https://262.ecma-international.org/5.1/#sec-15.9.1.4

module.exports = function DayWithinYear(t) {
	return Day(t) - DayFromYear(YearFromTime(t));
};

},{"./Day":157,"./DayFromYear":158,"./YearFromTime":192}],160:[function(require,module,exports){
'use strict';

var modulo = require('./modulo');

// https://262.ecma-international.org/5.1/#sec-15.9.1.3

module.exports = function DaysInYear(y) {
	if (modulo(y, 4) !== 0) {
		return 365;
	}
	if (modulo(y, 100) !== 0) {
		return 366;
	}
	if (modulo(y, 400) !== 0) {
		return 365;
	}
	return 366;
};

},{"./modulo":195}],161:[function(require,module,exports){
'use strict';

var $TypeError = require('es-errors/type');

var IsDataDescriptor = require('./IsDataDescriptor');
var IsAccessorDescriptor = require('./IsAccessorDescriptor');

var isPropertyDescriptor = require('../helpers/records/property-descriptor');

// https://262.ecma-international.org/5.1/#sec-8.10.4

module.exports = function FromPropertyDescriptor(Desc) {
	if (typeof Desc === 'undefined') {
		return Desc;
	}

	if (!isPropertyDescriptor(Desc)) {
		throw new $TypeError('Assertion failed: `Desc` must be a Property Descriptor');
	}

	if (IsDataDescriptor(Desc)) {
		return {
			value: Desc['[[Value]]'],
			writable: !!Desc['[[Writable]]'],
			enumerable: !!Desc['[[Enumerable]]'],
			configurable: !!Desc['[[Configurable]]']
		};
	} else if (IsAccessorDescriptor(Desc)) {
		return {
			get: Desc['[[Get]]'],
			set: Desc['[[Set]]'],
			enumerable: !!Desc['[[Enumerable]]'],
			configurable: !!Desc['[[Configurable]]']
		};
	}
	throw new $TypeError('FromPropertyDescriptor must be called with a fully populated Property Descriptor');

};

},{"../helpers/records/property-descriptor":202,"./IsAccessorDescriptor":164,"./IsDataDescriptor":166,"es-errors/type":211}],162:[function(require,module,exports){
'use strict';

var floor = require('./floor');
var modulo = require('./modulo');

var timeConstants = require('../helpers/timeConstants');
var msPerHour = timeConstants.msPerHour;
var HoursPerDay = timeConstants.HoursPerDay;

// https://262.ecma-international.org/5.1/#sec-15.9.1.10

module.exports = function HourFromTime(t) {
	return modulo(floor(t / msPerHour), HoursPerDay);
};

},{"../helpers/timeConstants":204,"./floor":194,"./modulo":195}],163:[function(require,module,exports){
'use strict';

var $EvalError = require('es-errors/eval');

var DaysInYear = require('./DaysInYear');
var YearFromTime = require('./YearFromTime');

// https://262.ecma-international.org/5.1/#sec-15.9.1.3

module.exports = function InLeapYear(t) {
	var days = DaysInYear(YearFromTime(t));
	if (days === 365) {
		return 0;
	}
	if (days === 366) {
		return 1;
	}
	throw new $EvalError('Assertion failed: there are not 365 or 366 days in a year, got: ' + days);
};

},{"./DaysInYear":160,"./YearFromTime":192,"es-errors/eval":206}],164:[function(require,module,exports){
'use strict';

var $TypeError = require('es-errors/type');

var hasOwn = require('hasown');

var isPropertyDescriptor = require('../helpers/records/property-descriptor');

// https://262.ecma-international.org/5.1/#sec-8.10.1

module.exports = function IsAccessorDescriptor(Desc) {
	if (typeof Desc === 'undefined') {
		return false;
	}

	if (!isPropertyDescriptor(Desc)) {
		throw new $TypeError('Assertion failed: `Desc` must be a Property Descriptor');
	}

	if (!hasOwn(Desc, '[[Get]]') && !hasOwn(Desc, '[[Set]]')) {
		return false;
	}

	return true;
};

},{"../helpers/records/property-descriptor":202,"es-errors/type":211,"hasown":228}],165:[function(require,module,exports){
'use strict';

// http://262.ecma-international.org/5.1/#sec-9.11

module.exports = require('is-callable');

},{"is-callable":231}],166:[function(require,module,exports){
'use strict';

var $TypeError = require('es-errors/type');

var hasOwn = require('hasown');

var isPropertyDescriptor = require('../helpers/records/property-descriptor');

// https://262.ecma-international.org/5.1/#sec-8.10.2

module.exports = function IsDataDescriptor(Desc) {
	if (typeof Desc === 'undefined') {
		return false;
	}

	if (!isPropertyDescriptor(Desc)) {
		throw new $TypeError('Assertion failed: `Desc` must be a Property Descriptor');
	}

	if (!hasOwn(Desc, '[[Value]]') && !hasOwn(Desc, '[[Writable]]')) {
		return false;
	}

	return true;
};

},{"../helpers/records/property-descriptor":202,"es-errors/type":211,"hasown":228}],167:[function(require,module,exports){
'use strict';

var $TypeError = require('es-errors/type');

var IsAccessorDescriptor = require('./IsAccessorDescriptor');
var IsDataDescriptor = require('./IsDataDescriptor');

var isPropertyDescriptor = require('./IsPropertyDescriptor');

// https://262.ecma-international.org/5.1/#sec-8.10.3

module.exports = function IsGenericDescriptor(Desc) {
	if (typeof Desc === 'undefined') {
		return false;
	}

	if (!isPropertyDescriptor(Desc)) {
		throw new $TypeError('Assertion failed: `Desc` must be a Property Descriptor');
	}

	if (!IsAccessorDescriptor(Desc) && !IsDataDescriptor(Desc)) {
		return true;
	}

	return false;
};

},{"./IsAccessorDescriptor":164,"./IsDataDescriptor":166,"./IsPropertyDescriptor":168,"es-errors/type":211}],168:[function(require,module,exports){
'use strict';

// TODO, semver-major: delete this

var isPropertyDescriptor = require('../helpers/records/property-descriptor');

// https://262.ecma-international.org/6.0/#sec-property-descriptor-specification-type

module.exports = function IsPropertyDescriptor(Desc) {
	return isPropertyDescriptor(Desc);
};

},{"../helpers/records/property-descriptor":202}],169:[function(require,module,exports){
'use strict';

var $isFinite = require('../helpers/isFinite');
var msPerDay = require('../helpers/timeConstants').msPerDay;

// https://262.ecma-international.org/5.1/#sec-15.9.1.13

module.exports = function MakeDate(day, time) {
	if (!$isFinite(day) || !$isFinite(time)) {
		return NaN;
	}
	return (day * msPerDay) + time;
};

},{"../helpers/isFinite":198,"../helpers/timeConstants":204}],170:[function(require,module,exports){
'use strict';

var GetIntrinsic = require('get-intrinsic');

var $DateUTC = GetIntrinsic('%Date.UTC%');

var $isFinite = require('../helpers/isFinite');

var DateFromTime = require('./DateFromTime');
var Day = require('./Day');
var floor = require('./floor');
var modulo = require('./modulo');
var MonthFromTime = require('./MonthFromTime');
var ToInteger = require('./ToInteger');
var YearFromTime = require('./YearFromTime');

// https://262.ecma-international.org/5.1/#sec-15.9.1.12

module.exports = function MakeDay(year, month, date) {
	if (!$isFinite(year) || !$isFinite(month) || !$isFinite(date)) {
		return NaN;
	}
	var y = ToInteger(year);
	var m = ToInteger(month);
	var dt = ToInteger(date);
	var ym = y + floor(m / 12);
	var mn = modulo(m, 12);
	var t = $DateUTC(ym, mn, 1);
	if (YearFromTime(t) !== ym || MonthFromTime(t) !== mn || DateFromTime(t) !== 1) {
		return NaN;
	}
	return Day(t) + dt - 1;
};

},{"../helpers/isFinite":198,"./DateFromTime":156,"./Day":157,"./MonthFromTime":173,"./ToInteger":182,"./YearFromTime":192,"./floor":194,"./modulo":195,"get-intrinsic":220}],171:[function(require,module,exports){
'use strict';

var $isFinite = require('../helpers/isFinite');
var timeConstants = require('../helpers/timeConstants');
var msPerSecond = timeConstants.msPerSecond;
var msPerMinute = timeConstants.msPerMinute;
var msPerHour = timeConstants.msPerHour;

var ToInteger = require('./ToInteger');

// https://262.ecma-international.org/5.1/#sec-15.9.1.11

module.exports = function MakeTime(hour, min, sec, ms) {
	if (!$isFinite(hour) || !$isFinite(min) || !$isFinite(sec) || !$isFinite(ms)) {
		return NaN;
	}
	var h = ToInteger(hour);
	var m = ToInteger(min);
	var s = ToInteger(sec);
	var milli = ToInteger(ms);
	var t = (h * msPerHour) + (m * msPerMinute) + (s * msPerSecond) + milli;
	return t;
};

},{"../helpers/isFinite":198,"../helpers/timeConstants":204,"./ToInteger":182}],172:[function(require,module,exports){
'use strict';

var floor = require('./floor');
var modulo = require('./modulo');

var timeConstants = require('../helpers/timeConstants');
var msPerMinute = timeConstants.msPerMinute;
var MinutesPerHour = timeConstants.MinutesPerHour;

// https://262.ecma-international.org/5.1/#sec-15.9.1.10

module.exports = function MinFromTime(t) {
	return modulo(floor(t / msPerMinute), MinutesPerHour);
};

},{"../helpers/timeConstants":204,"./floor":194,"./modulo":195}],173:[function(require,module,exports){
'use strict';

var DayWithinYear = require('./DayWithinYear');
var InLeapYear = require('./InLeapYear');

// https://262.ecma-international.org/5.1/#sec-15.9.1.4

module.exports = function MonthFromTime(t) {
	var day = DayWithinYear(t);
	if (0 <= day && day < 31) {
		return 0;
	}
	var leap = InLeapYear(t);
	if (31 <= day && day < (59 + leap)) {
		return 1;
	}
	if ((59 + leap) <= day && day < (90 + leap)) {
		return 2;
	}
	if ((90 + leap) <= day && day < (120 + leap)) {
		return 3;
	}
	if ((120 + leap) <= day && day < (151 + leap)) {
		return 4;
	}
	if ((151 + leap) <= day && day < (181 + leap)) {
		return 5;
	}
	if ((181 + leap) <= day && day < (212 + leap)) {
		return 6;
	}
	if ((212 + leap) <= day && day < (243 + leap)) {
		return 7;
	}
	if ((243 + leap) <= day && day < (273 + leap)) {
		return 8;
	}
	if ((273 + leap) <= day && day < (304 + leap)) {
		return 9;
	}
	if ((304 + leap) <= day && day < (334 + leap)) {
		return 10;
	}
	if ((334 + leap) <= day && day < (365 + leap)) {
		return 11;
	}
};

},{"./DayWithinYear":159,"./InLeapYear":163}],174:[function(require,module,exports){
'use strict';

var $isNaN = require('../helpers/isNaN');

// http://262.ecma-international.org/5.1/#sec-9.12

module.exports = function SameValue(x, y) {
	if (x === y) { // 0 === -0, but they are not identical.
		if (x === 0) { return 1 / x === 1 / y; }
		return true;
	}
	return $isNaN(x) && $isNaN(y);
};

},{"../helpers/isNaN":199}],175:[function(require,module,exports){
'use strict';

var floor = require('./floor');
var modulo = require('./modulo');

var timeConstants = require('../helpers/timeConstants');
var msPerSecond = timeConstants.msPerSecond;
var SecondsPerMinute = timeConstants.SecondsPerMinute;

// https://262.ecma-international.org/5.1/#sec-15.9.1.10

module.exports = function SecFromTime(t) {
	return modulo(floor(t / msPerSecond), SecondsPerMinute);
};

},{"../helpers/timeConstants":204,"./floor":194,"./modulo":195}],176:[function(require,module,exports){
'use strict';

var Type = require('./Type');

// https://262.ecma-international.org/5.1/#sec-11.9.6

module.exports = function StrictEqualityComparison(x, y) {
	var xType = Type(x);
	var yType = Type(y);
	if (xType !== yType) {
		return false;
	}
	if (xType === 'Undefined' || xType === 'Null') {
		return true;
	}
	return x === y; // shortcut for steps 4-7
};

},{"./Type":190}],177:[function(require,module,exports){
'use strict';

var GetIntrinsic = require('get-intrinsic');

var $Date = GetIntrinsic('%Date%');
var $Number = GetIntrinsic('%Number%');

var $isFinite = require('../helpers/isFinite');

var abs = require('./abs');
var ToNumber = require('./ToNumber');

// https://262.ecma-international.org/5.1/#sec-15.9.1.14

module.exports = function TimeClip(time) {
	if (!$isFinite(time) || abs(time) > 8.64e15) {
		return NaN;
	}
	return $Number(new $Date(ToNumber(time)));
};


},{"../helpers/isFinite":198,"./ToNumber":183,"./abs":193,"get-intrinsic":220}],178:[function(require,module,exports){
'use strict';

var msPerDay = require('../helpers/timeConstants').msPerDay;

var DayFromYear = require('./DayFromYear');

// https://262.ecma-international.org/5.1/#sec-15.9.1.3

module.exports = function TimeFromYear(y) {
	return msPerDay * DayFromYear(y);
};

},{"../helpers/timeConstants":204,"./DayFromYear":158}],179:[function(require,module,exports){
'use strict';

var modulo = require('./modulo');

var msPerDay = require('../helpers/timeConstants').msPerDay;

// https://262.ecma-international.org/5.1/#sec-15.9.1.2

module.exports = function TimeWithinDay(t) {
	return modulo(t, msPerDay);
};


},{"../helpers/timeConstants":204,"./modulo":195}],180:[function(require,module,exports){
'use strict';

// http://262.ecma-international.org/5.1/#sec-9.2

module.exports = function ToBoolean(value) { return !!value; };

},{}],181:[function(require,module,exports){
'use strict';

var ToNumber = require('./ToNumber');

// http://262.ecma-international.org/5.1/#sec-9.5

module.exports = function ToInt32(x) {
	return ToNumber(x) >> 0;
};

},{"./ToNumber":183}],182:[function(require,module,exports){
'use strict';

var abs = require('./abs');
var floor = require('./floor');
var ToNumber = require('./ToNumber');

var $isNaN = require('../helpers/isNaN');
var $isFinite = require('../helpers/isFinite');
var $sign = require('../helpers/sign');

// http://262.ecma-international.org/5.1/#sec-9.4

module.exports = function ToInteger(value) {
	var number = ToNumber(value);
	if ($isNaN(number)) { return 0; }
	if (number === 0 || !$isFinite(number)) { return number; }
	return $sign(number) * floor(abs(number));
};

},{"../helpers/isFinite":198,"../helpers/isNaN":199,"../helpers/sign":203,"./ToNumber":183,"./abs":193,"./floor":194}],183:[function(require,module,exports){
'use strict';

var ToPrimitive = require('./ToPrimitive');

var callBound = require('call-bind/callBound');

var $replace = callBound('String.prototype.replace');

var safeRegexTester = require('safe-regex-test');

var isNonDecimal = safeRegexTester(/^0[ob]|^[+-]0x/);

// http://262.ecma-international.org/5.1/#sec-9.3

module.exports = function ToNumber(value) {
	var prim = ToPrimitive(value, Number);
	if (typeof prim !== 'string') {
		return +prim; // eslint-disable-line no-implicit-coercion
	}

	var trimmed = $replace(
		prim,
		// eslint-disable-next-line no-control-regex
		/^[ \t\x0b\f\xa0\ufeff\n\r\u2028\u2029\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u0085]+|[ \t\x0b\f\xa0\ufeff\n\r\u2028\u2029\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u0085]+$/g,
		''
	);
	if (isNonDecimal(trimmed)) {
		return NaN;
	}

	return +trimmed; // eslint-disable-line no-implicit-coercion
};

},{"./ToPrimitive":185,"call-bind/callBound":144,"safe-regex-test":239}],184:[function(require,module,exports){
'use strict';

// http://262.ecma-international.org/5.1/#sec-9.9

module.exports = require('es-object-atoms/ToObject');

},{"es-object-atoms/ToObject":214}],185:[function(require,module,exports){
'use strict';

// http://262.ecma-international.org/5.1/#sec-9.1

module.exports = require('es-to-primitive/es5');

},{"es-to-primitive/es5":216}],186:[function(require,module,exports){
'use strict';

var hasOwn = require('hasown');

var $TypeError = require('es-errors/type');

var Type = require('./Type');
var ToBoolean = require('./ToBoolean');
var IsCallable = require('./IsCallable');

// https://262.ecma-international.org/5.1/#sec-8.10.5

module.exports = function ToPropertyDescriptor(Obj) {
	if (Type(Obj) !== 'Object') {
		throw new $TypeError('ToPropertyDescriptor requires an object');
	}

	var desc = {};
	if (hasOwn(Obj, 'enumerable')) {
		desc['[[Enumerable]]'] = ToBoolean(Obj.enumerable);
	}
	if (hasOwn(Obj, 'configurable')) {
		desc['[[Configurable]]'] = ToBoolean(Obj.configurable);
	}
	if (hasOwn(Obj, 'value')) {
		desc['[[Value]]'] = Obj.value;
	}
	if (hasOwn(Obj, 'writable')) {
		desc['[[Writable]]'] = ToBoolean(Obj.writable);
	}
	if (hasOwn(Obj, 'get')) {
		var getter = Obj.get;
		if (typeof getter !== 'undefined' && !IsCallable(getter)) {
			throw new $TypeError('getter must be a function');
		}
		desc['[[Get]]'] = getter;
	}
	if (hasOwn(Obj, 'set')) {
		var setter = Obj.set;
		if (typeof setter !== 'undefined' && !IsCallable(setter)) {
			throw new $TypeError('setter must be a function');
		}
		desc['[[Set]]'] = setter;
	}

	if ((hasOwn(desc, '[[Get]]') || hasOwn(desc, '[[Set]]')) && (hasOwn(desc, '[[Value]]') || hasOwn(desc, '[[Writable]]'))) {
		throw new $TypeError('Invalid property descriptor. Cannot both specify accessors and a value or writable attribute');
	}
	return desc;
};

},{"./IsCallable":165,"./ToBoolean":180,"./Type":190,"es-errors/type":211,"hasown":228}],187:[function(require,module,exports){
'use strict';

var GetIntrinsic = require('get-intrinsic');

var $String = GetIntrinsic('%String%');

// http://262.ecma-international.org/5.1/#sec-9.8

module.exports = function ToString(value) {
	return $String(value);
};


},{"get-intrinsic":220}],188:[function(require,module,exports){
'use strict';

var abs = require('./abs');
var floor = require('./floor');
var modulo = require('./modulo');
var ToNumber = require('./ToNumber');

var $isNaN = require('../helpers/isNaN');
var $isFinite = require('../helpers/isFinite');
var $sign = require('../helpers/sign');

// http://262.ecma-international.org/5.1/#sec-9.7

module.exports = function ToUint16(value) {
	var number = ToNumber(value);
	if ($isNaN(number) || number === 0 || !$isFinite(number)) { return 0; }
	var posInt = $sign(number) * floor(abs(number));
	return modulo(posInt, 0x10000);
};

},{"../helpers/isFinite":198,"../helpers/isNaN":199,"../helpers/sign":203,"./ToNumber":183,"./abs":193,"./floor":194,"./modulo":195}],189:[function(require,module,exports){
'use strict';

var ToNumber = require('./ToNumber');

// http://262.ecma-international.org/5.1/#sec-9.6

module.exports = function ToUint32(x) {
	return ToNumber(x) >>> 0;
};

},{"./ToNumber":183}],190:[function(require,module,exports){
'use strict';

// https://262.ecma-international.org/5.1/#sec-8

module.exports = function Type(x) {
	if (x === null) {
		return 'Null';
	}
	if (typeof x === 'undefined') {
		return 'Undefined';
	}
	if (typeof x === 'function' || typeof x === 'object') {
		return 'Object';
	}
	if (typeof x === 'number') {
		return 'Number';
	}
	if (typeof x === 'boolean') {
		return 'Boolean';
	}
	if (typeof x === 'string') {
		return 'String';
	}
};

},{}],191:[function(require,module,exports){
'use strict';

var Day = require('./Day');
var modulo = require('./modulo');

// https://262.ecma-international.org/5.1/#sec-15.9.1.6

module.exports = function WeekDay(t) {
	return modulo(Day(t) + 4, 7);
};

},{"./Day":157,"./modulo":195}],192:[function(require,module,exports){
'use strict';

var GetIntrinsic = require('get-intrinsic');

var $Date = GetIntrinsic('%Date%');

var callBound = require('call-bind/callBound');

var $getUTCFullYear = callBound('Date.prototype.getUTCFullYear');

// https://262.ecma-international.org/5.1/#sec-15.9.1.3

module.exports = function YearFromTime(t) {
	// largest y such that this.TimeFromYear(y) <= t
	return $getUTCFullYear(new $Date(t));
};

},{"call-bind/callBound":144,"get-intrinsic":220}],193:[function(require,module,exports){
'use strict';

var GetIntrinsic = require('get-intrinsic');

var $abs = GetIntrinsic('%Math.abs%');

// http://262.ecma-international.org/5.1/#sec-5.2

module.exports = function abs(x) {
	return $abs(x);
};

},{"get-intrinsic":220}],194:[function(require,module,exports){
'use strict';

// var modulo = require('./modulo');
var $floor = Math.floor;

// http://262.ecma-international.org/5.1/#sec-5.2

module.exports = function floor(x) {
	// return x - modulo(x, 1);
	return $floor(x);
};

},{}],195:[function(require,module,exports){
'use strict';

var mod = require('../helpers/mod');

// https://262.ecma-international.org/5.1/#sec-5.2

module.exports = function modulo(x, y) {
	return mod(x, y);
};

},{"../helpers/mod":201}],196:[function(require,module,exports){
'use strict';

var modulo = require('./modulo');

var msPerSecond = require('../helpers/timeConstants').msPerSecond;

// https://262.ecma-international.org/5.1/#sec-15.9.1.10

module.exports = function msFromTime(t) {
	return modulo(t, msPerSecond);
};

},{"../helpers/timeConstants":204,"./modulo":195}],197:[function(require,module,exports){
'use strict';

/* eslint global-require: 0 */

// https://es5.github.io/#x9
module.exports = {
	'Abstract Equality Comparison': require('./5/AbstractEqualityComparison'),
	'Abstract Relational Comparison': require('./5/AbstractRelationalComparison'),
	'Strict Equality Comparison': require('./5/StrictEqualityComparison'),
	abs: require('./5/abs'),
	Canonicalize: require('./5/Canonicalize'),
	CheckObjectCoercible: require('./5/CheckObjectCoercible'),
	DateFromTime: require('./5/DateFromTime'),
	Day: require('./5/Day'),
	DayFromYear: require('./5/DayFromYear'),
	DaysInYear: require('./5/DaysInYear'),
	DayWithinYear: require('./5/DayWithinYear'),
	floor: require('./5/floor'),
	FromPropertyDescriptor: require('./5/FromPropertyDescriptor'),
	HourFromTime: require('./5/HourFromTime'),
	InLeapYear: require('./5/InLeapYear'),
	IsAccessorDescriptor: require('./5/IsAccessorDescriptor'),
	IsCallable: require('./5/IsCallable'),
	IsDataDescriptor: require('./5/IsDataDescriptor'),
	IsGenericDescriptor: require('./5/IsGenericDescriptor'),
	IsPropertyDescriptor: require('./5/IsPropertyDescriptor'),
	MakeDate: require('./5/MakeDate'),
	MakeDay: require('./5/MakeDay'),
	MakeTime: require('./5/MakeTime'),
	MinFromTime: require('./5/MinFromTime'),
	modulo: require('./5/modulo'),
	MonthFromTime: require('./5/MonthFromTime'),
	msFromTime: require('./5/msFromTime'),
	SameValue: require('./5/SameValue'),
	SecFromTime: require('./5/SecFromTime'),
	TimeClip: require('./5/TimeClip'),
	TimeFromYear: require('./5/TimeFromYear'),
	TimeWithinDay: require('./5/TimeWithinDay'),
	ToBoolean: require('./5/ToBoolean'),
	ToInt32: require('./5/ToInt32'),
	ToInteger: require('./5/ToInteger'),
	ToNumber: require('./5/ToNumber'),
	ToObject: require('./5/ToObject'),
	ToPrimitive: require('./5/ToPrimitive'),
	ToPropertyDescriptor: require('./5/ToPropertyDescriptor'),
	ToString: require('./5/ToString'),
	ToUint16: require('./5/ToUint16'),
	ToUint32: require('./5/ToUint32'),
	Type: require('./5/Type'),
	WeekDay: require('./5/WeekDay'),
	YearFromTime: require('./5/YearFromTime')
};

},{"./5/AbstractEqualityComparison":152,"./5/AbstractRelationalComparison":153,"./5/Canonicalize":154,"./5/CheckObjectCoercible":155,"./5/DateFromTime":156,"./5/Day":157,"./5/DayFromYear":158,"./5/DayWithinYear":159,"./5/DaysInYear":160,"./5/FromPropertyDescriptor":161,"./5/HourFromTime":162,"./5/InLeapYear":163,"./5/IsAccessorDescriptor":164,"./5/IsCallable":165,"./5/IsDataDescriptor":166,"./5/IsGenericDescriptor":167,"./5/IsPropertyDescriptor":168,"./5/MakeDate":169,"./5/MakeDay":170,"./5/MakeTime":171,"./5/MinFromTime":172,"./5/MonthFromTime":173,"./5/SameValue":174,"./5/SecFromTime":175,"./5/StrictEqualityComparison":176,"./5/TimeClip":177,"./5/TimeFromYear":178,"./5/TimeWithinDay":179,"./5/ToBoolean":180,"./5/ToInt32":181,"./5/ToInteger":182,"./5/ToNumber":183,"./5/ToObject":184,"./5/ToPrimitive":185,"./5/ToPropertyDescriptor":186,"./5/ToString":187,"./5/ToUint16":188,"./5/ToUint32":189,"./5/Type":190,"./5/WeekDay":191,"./5/YearFromTime":192,"./5/abs":193,"./5/floor":194,"./5/modulo":195,"./5/msFromTime":196}],198:[function(require,module,exports){
'use strict';

var $isNaN = require('./isNaN');

module.exports = function (x) { return (typeof x === 'number' || typeof x === 'bigint') && !$isNaN(x) && x !== Infinity && x !== -Infinity; };

},{"./isNaN":199}],199:[function(require,module,exports){
'use strict';

module.exports = Number.isNaN || function isNaN(a) {
	return a !== a;
};

},{}],200:[function(require,module,exports){
'use strict';

var $strSlice = require('call-bind/callBound')('String.prototype.slice');

module.exports = function isPrefixOf(prefix, string) {
	if (prefix === string) {
		return true;
	}
	if (prefix.length > string.length) {
		return false;
	}
	return $strSlice(string, 0, prefix.length) === prefix;
};

},{"call-bind/callBound":144}],201:[function(require,module,exports){
'use strict';

var $floor = Math.floor;

module.exports = function mod(number, modulo) {
	var remain = number % modulo;
	return $floor(remain >= 0 ? remain : remain + modulo);
};

},{}],202:[function(require,module,exports){
'use strict';

var $TypeError = require('es-errors/type');

var hasOwn = require('hasown');

var allowed = {
	__proto__: null,
	'[[Configurable]]': true,
	'[[Enumerable]]': true,
	'[[Get]]': true,
	'[[Set]]': true,
	'[[Value]]': true,
	'[[Writable]]': true
};

// https://262.ecma-international.org/6.0/#sec-property-descriptor-specification-type

module.exports = function isPropertyDescriptor(Desc) {
	if (!Desc || typeof Desc !== 'object') {
		return false;
	}

	for (var key in Desc) { // eslint-disable-line
		if (hasOwn(Desc, key) && !allowed[key]) {
			return false;
		}
	}

	var isData = hasOwn(Desc, '[[Value]]') || hasOwn(Desc, '[[Writable]]');
	var IsAccessor = hasOwn(Desc, '[[Get]]') || hasOwn(Desc, '[[Set]]');
	if (isData && IsAccessor) {
		throw new $TypeError('Property Descriptors may not be both accessor and data descriptors');
	}
	return true;
};

},{"es-errors/type":211,"hasown":228}],203:[function(require,module,exports){
'use strict';

module.exports = function sign(number) {
	return number >= 0 ? 1 : -1;
};

},{}],204:[function(require,module,exports){
'use strict';

var HoursPerDay = 24;
var MinutesPerHour = 60;
var SecondsPerMinute = 60;
var msPerSecond = 1e3;
var msPerMinute = msPerSecond * SecondsPerMinute;
var msPerHour = msPerMinute * MinutesPerHour;
var msPerDay = 86400000;

module.exports = {
	HoursPerDay: HoursPerDay,
	MinutesPerHour: MinutesPerHour,
	SecondsPerMinute: SecondsPerMinute,
	msPerSecond: msPerSecond,
	msPerMinute: msPerMinute,
	msPerHour: msPerHour,
	msPerDay: msPerDay
};

},{}],205:[function(require,module,exports){
'use strict';

var GetIntrinsic = require('get-intrinsic');

/** @type {import('.')} */
var $defineProperty = GetIntrinsic('%Object.defineProperty%', true) || false;
if ($defineProperty) {
	try {
		$defineProperty({}, 'a', { value: 1 });
	} catch (e) {
		// IE 8 has a broken defineProperty
		$defineProperty = false;
	}
}

module.exports = $defineProperty;

},{"get-intrinsic":220}],206:[function(require,module,exports){
'use strict';

/** @type {import('./eval')} */
module.exports = EvalError;

},{}],207:[function(require,module,exports){
'use strict';

/** @type {import('.')} */
module.exports = Error;

},{}],208:[function(require,module,exports){
'use strict';

/** @type {import('./range')} */
module.exports = RangeError;

},{}],209:[function(require,module,exports){
'use strict';

/** @type {import('./ref')} */
module.exports = ReferenceError;

},{}],210:[function(require,module,exports){
'use strict';

/** @type {import('./syntax')} */
module.exports = SyntaxError;

},{}],211:[function(require,module,exports){
'use strict';

/** @type {import('./type')} */
module.exports = TypeError;

},{}],212:[function(require,module,exports){
'use strict';

/** @type {import('./uri')} */
module.exports = URIError;

},{}],213:[function(require,module,exports){
'use strict';

var $TypeError = require('es-errors/type');

/** @type {import('./RequireObjectCoercible')} */
module.exports = function RequireObjectCoercible(value) {
	if (value == null) {
		throw new $TypeError((arguments.length > 0 && arguments[1]) || ('Cannot call method on ' + value));
	}
	return value;
};

},{"es-errors/type":211}],214:[function(require,module,exports){
'use strict';

var $Object = require('./');
var RequireObjectCoercible = require('./RequireObjectCoercible');

/** @type {import('./ToObject')} */
module.exports = function ToObject(value) {
	RequireObjectCoercible(value);
	return $Object(value);
};

},{"./":215,"./RequireObjectCoercible":213}],215:[function(require,module,exports){
'use strict';

/** @type {import('.')} */
module.exports = Object;

},{}],216:[function(require,module,exports){
'use strict';

var toStr = Object.prototype.toString;

var isPrimitive = require('./helpers/isPrimitive');

var isCallable = require('is-callable');

// http://ecma-international.org/ecma-262/5.1/#sec-8.12.8
var ES5internalSlots = {
	'[[DefaultValue]]': function (O) {
		var actualHint;
		if (arguments.length > 1) {
			actualHint = arguments[1];
		} else {
			actualHint = toStr.call(O) === '[object Date]' ? String : Number;
		}

		if (actualHint === String || actualHint === Number) {
			var methods = actualHint === String ? ['toString', 'valueOf'] : ['valueOf', 'toString'];
			var value, i;
			for (i = 0; i < methods.length; ++i) {
				if (isCallable(O[methods[i]])) {
					value = O[methods[i]]();
					if (isPrimitive(value)) {
						return value;
					}
				}
			}
			throw new TypeError('No default value');
		}
		throw new TypeError('invalid [[DefaultValue]] hint supplied');
	}
};

// http://ecma-international.org/ecma-262/5.1/#sec-9.1
module.exports = function ToPrimitive(input) {
	if (isPrimitive(input)) {
		return input;
	}
	if (arguments.length > 1) {
		return ES5internalSlots['[[DefaultValue]]'](input, arguments[1]);
	}
	return ES5internalSlots['[[DefaultValue]]'](input);
};

},{"./helpers/isPrimitive":217,"is-callable":231}],217:[function(require,module,exports){
'use strict';

module.exports = function isPrimitive(value) {
	return value === null || (typeof value !== 'function' && typeof value !== 'object');
};

},{}],218:[function(require,module,exports){
'use strict';

/* eslint no-invalid-this: 1 */

var ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';
var toStr = Object.prototype.toString;
var max = Math.max;
var funcType = '[object Function]';

var concatty = function concatty(a, b) {
    var arr = [];

    for (var i = 0; i < a.length; i += 1) {
        arr[i] = a[i];
    }
    for (var j = 0; j < b.length; j += 1) {
        arr[j + a.length] = b[j];
    }

    return arr;
};

var slicy = function slicy(arrLike, offset) {
    var arr = [];
    for (var i = offset || 0, j = 0; i < arrLike.length; i += 1, j += 1) {
        arr[j] = arrLike[i];
    }
    return arr;
};

var joiny = function (arr, joiner) {
    var str = '';
    for (var i = 0; i < arr.length; i += 1) {
        str += arr[i];
        if (i + 1 < arr.length) {
            str += joiner;
        }
    }
    return str;
};

module.exports = function bind(that) {
    var target = this;
    if (typeof target !== 'function' || toStr.apply(target) !== funcType) {
        throw new TypeError(ERROR_MESSAGE + target);
    }
    var args = slicy(arguments, 1);

    var bound;
    var binder = function () {
        if (this instanceof bound) {
            var result = target.apply(
                this,
                concatty(args, arguments)
            );
            if (Object(result) === result) {
                return result;
            }
            return this;
        }
        return target.apply(
            that,
            concatty(args, arguments)
        );

    };

    var boundLength = max(0, target.length - args.length);
    var boundArgs = [];
    for (var i = 0; i < boundLength; i++) {
        boundArgs[i] = '$' + i;
    }

    bound = Function('binder', 'return function (' + joiny(boundArgs, ',') + '){ return binder.apply(this,arguments); }')(binder);

    if (target.prototype) {
        var Empty = function Empty() {};
        Empty.prototype = target.prototype;
        bound.prototype = new Empty();
        Empty.prototype = null;
    }

    return bound;
};

},{}],219:[function(require,module,exports){
'use strict';

var implementation = require('./implementation');

module.exports = Function.prototype.bind || implementation;

},{"./implementation":218}],220:[function(require,module,exports){
'use strict';

var undefined;

var $Error = require('es-errors');
var $EvalError = require('es-errors/eval');
var $RangeError = require('es-errors/range');
var $ReferenceError = require('es-errors/ref');
var $SyntaxError = require('es-errors/syntax');
var $TypeError = require('es-errors/type');
var $URIError = require('es-errors/uri');

var $Function = Function;

// eslint-disable-next-line consistent-return
var getEvalledConstructor = function (expressionSyntax) {
	try {
		return $Function('"use strict"; return (' + expressionSyntax + ').constructor;')();
	} catch (e) {}
};

var $gOPD = Object.getOwnPropertyDescriptor;
if ($gOPD) {
	try {
		$gOPD({}, '');
	} catch (e) {
		$gOPD = null; // this is IE 8, which has a broken gOPD
	}
}

var throwTypeError = function () {
	throw new $TypeError();
};
var ThrowTypeError = $gOPD
	? (function () {
		try {
			// eslint-disable-next-line no-unused-expressions, no-caller, no-restricted-properties
			arguments.callee; // IE 8 does not throw here
			return throwTypeError;
		} catch (calleeThrows) {
			try {
				// IE 8 throws on Object.getOwnPropertyDescriptor(arguments, '')
				return $gOPD(arguments, 'callee').get;
			} catch (gOPDthrows) {
				return throwTypeError;
			}
		}
	}())
	: throwTypeError;

var hasSymbols = require('has-symbols')();
var hasProto = require('has-proto')();

var getProto = Object.getPrototypeOf || (
	hasProto
		? function (x) { return x.__proto__; } // eslint-disable-line no-proto
		: null
);

var needsEval = {};

var TypedArray = typeof Uint8Array === 'undefined' || !getProto ? undefined : getProto(Uint8Array);

var INTRINSICS = {
	__proto__: null,
	'%AggregateError%': typeof AggregateError === 'undefined' ? undefined : AggregateError,
	'%Array%': Array,
	'%ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,
	'%ArrayIteratorPrototype%': hasSymbols && getProto ? getProto([][Symbol.iterator]()) : undefined,
	'%AsyncFromSyncIteratorPrototype%': undefined,
	'%AsyncFunction%': needsEval,
	'%AsyncGenerator%': needsEval,
	'%AsyncGeneratorFunction%': needsEval,
	'%AsyncIteratorPrototype%': needsEval,
	'%Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,
	'%BigInt%': typeof BigInt === 'undefined' ? undefined : BigInt,
	'%BigInt64Array%': typeof BigInt64Array === 'undefined' ? undefined : BigInt64Array,
	'%BigUint64Array%': typeof BigUint64Array === 'undefined' ? undefined : BigUint64Array,
	'%Boolean%': Boolean,
	'%DataView%': typeof DataView === 'undefined' ? undefined : DataView,
	'%Date%': Date,
	'%decodeURI%': decodeURI,
	'%decodeURIComponent%': decodeURIComponent,
	'%encodeURI%': encodeURI,
	'%encodeURIComponent%': encodeURIComponent,
	'%Error%': $Error,
	'%eval%': eval, // eslint-disable-line no-eval
	'%EvalError%': $EvalError,
	'%Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,
	'%Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,
	'%FinalizationRegistry%': typeof FinalizationRegistry === 'undefined' ? undefined : FinalizationRegistry,
	'%Function%': $Function,
	'%GeneratorFunction%': needsEval,
	'%Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,
	'%Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,
	'%Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,
	'%isFinite%': isFinite,
	'%isNaN%': isNaN,
	'%IteratorPrototype%': hasSymbols && getProto ? getProto(getProto([][Symbol.iterator]())) : undefined,
	'%JSON%': typeof JSON === 'object' ? JSON : undefined,
	'%Map%': typeof Map === 'undefined' ? undefined : Map,
	'%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols || !getProto ? undefined : getProto(new Map()[Symbol.iterator]()),
	'%Math%': Math,
	'%Number%': Number,
	'%Object%': Object,
	'%parseFloat%': parseFloat,
	'%parseInt%': parseInt,
	'%Promise%': typeof Promise === 'undefined' ? undefined : Promise,
	'%Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,
	'%RangeError%': $RangeError,
	'%ReferenceError%': $ReferenceError,
	'%Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,
	'%RegExp%': RegExp,
	'%Set%': typeof Set === 'undefined' ? undefined : Set,
	'%SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols || !getProto ? undefined : getProto(new Set()[Symbol.iterator]()),
	'%SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,
	'%String%': String,
	'%StringIteratorPrototype%': hasSymbols && getProto ? getProto(''[Symbol.iterator]()) : undefined,
	'%Symbol%': hasSymbols ? Symbol : undefined,
	'%SyntaxError%': $SyntaxError,
	'%ThrowTypeError%': ThrowTypeError,
	'%TypedArray%': TypedArray,
	'%TypeError%': $TypeError,
	'%Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,
	'%Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,
	'%Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,
	'%Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,
	'%URIError%': $URIError,
	'%WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,
	'%WeakRef%': typeof WeakRef === 'undefined' ? undefined : WeakRef,
	'%WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet
};

if (getProto) {
	try {
		null.error; // eslint-disable-line no-unused-expressions
	} catch (e) {
		// https://github.com/tc39/proposal-shadowrealm/pull/384#issuecomment-1364264229
		var errorProto = getProto(getProto(e));
		INTRINSICS['%Error.prototype%'] = errorProto;
	}
}

var doEval = function doEval(name) {
	var value;
	if (name === '%AsyncFunction%') {
		value = getEvalledConstructor('async function () {}');
	} else if (name === '%GeneratorFunction%') {
		value = getEvalledConstructor('function* () {}');
	} else if (name === '%AsyncGeneratorFunction%') {
		value = getEvalledConstructor('async function* () {}');
	} else if (name === '%AsyncGenerator%') {
		var fn = doEval('%AsyncGeneratorFunction%');
		if (fn) {
			value = fn.prototype;
		}
	} else if (name === '%AsyncIteratorPrototype%') {
		var gen = doEval('%AsyncGenerator%');
		if (gen && getProto) {
			value = getProto(gen.prototype);
		}
	}

	INTRINSICS[name] = value;

	return value;
};

var LEGACY_ALIASES = {
	__proto__: null,
	'%ArrayBufferPrototype%': ['ArrayBuffer', 'prototype'],
	'%ArrayPrototype%': ['Array', 'prototype'],
	'%ArrayProto_entries%': ['Array', 'prototype', 'entries'],
	'%ArrayProto_forEach%': ['Array', 'prototype', 'forEach'],
	'%ArrayProto_keys%': ['Array', 'prototype', 'keys'],
	'%ArrayProto_values%': ['Array', 'prototype', 'values'],
	'%AsyncFunctionPrototype%': ['AsyncFunction', 'prototype'],
	'%AsyncGenerator%': ['AsyncGeneratorFunction', 'prototype'],
	'%AsyncGeneratorPrototype%': ['AsyncGeneratorFunction', 'prototype', 'prototype'],
	'%BooleanPrototype%': ['Boolean', 'prototype'],
	'%DataViewPrototype%': ['DataView', 'prototype'],
	'%DatePrototype%': ['Date', 'prototype'],
	'%ErrorPrototype%': ['Error', 'prototype'],
	'%EvalErrorPrototype%': ['EvalError', 'prototype'],
	'%Float32ArrayPrototype%': ['Float32Array', 'prototype'],
	'%Float64ArrayPrototype%': ['Float64Array', 'prototype'],
	'%FunctionPrototype%': ['Function', 'prototype'],
	'%Generator%': ['GeneratorFunction', 'prototype'],
	'%GeneratorPrototype%': ['GeneratorFunction', 'prototype', 'prototype'],
	'%Int8ArrayPrototype%': ['Int8Array', 'prototype'],
	'%Int16ArrayPrototype%': ['Int16Array', 'prototype'],
	'%Int32ArrayPrototype%': ['Int32Array', 'prototype'],
	'%JSONParse%': ['JSON', 'parse'],
	'%JSONStringify%': ['JSON', 'stringify'],
	'%MapPrototype%': ['Map', 'prototype'],
	'%NumberPrototype%': ['Number', 'prototype'],
	'%ObjectPrototype%': ['Object', 'prototype'],
	'%ObjProto_toString%': ['Object', 'prototype', 'toString'],
	'%ObjProto_valueOf%': ['Object', 'prototype', 'valueOf'],
	'%PromisePrototype%': ['Promise', 'prototype'],
	'%PromiseProto_then%': ['Promise', 'prototype', 'then'],
	'%Promise_all%': ['Promise', 'all'],
	'%Promise_reject%': ['Promise', 'reject'],
	'%Promise_resolve%': ['Promise', 'resolve'],
	'%RangeErrorPrototype%': ['RangeError', 'prototype'],
	'%ReferenceErrorPrototype%': ['ReferenceError', 'prototype'],
	'%RegExpPrototype%': ['RegExp', 'prototype'],
	'%SetPrototype%': ['Set', 'prototype'],
	'%SharedArrayBufferPrototype%': ['SharedArrayBuffer', 'prototype'],
	'%StringPrototype%': ['String', 'prototype'],
	'%SymbolPrototype%': ['Symbol', 'prototype'],
	'%SyntaxErrorPrototype%': ['SyntaxError', 'prototype'],
	'%TypedArrayPrototype%': ['TypedArray', 'prototype'],
	'%TypeErrorPrototype%': ['TypeError', 'prototype'],
	'%Uint8ArrayPrototype%': ['Uint8Array', 'prototype'],
	'%Uint8ClampedArrayPrototype%': ['Uint8ClampedArray', 'prototype'],
	'%Uint16ArrayPrototype%': ['Uint16Array', 'prototype'],
	'%Uint32ArrayPrototype%': ['Uint32Array', 'prototype'],
	'%URIErrorPrototype%': ['URIError', 'prototype'],
	'%WeakMapPrototype%': ['WeakMap', 'prototype'],
	'%WeakSetPrototype%': ['WeakSet', 'prototype']
};

var bind = require('function-bind');
var hasOwn = require('hasown');
var $concat = bind.call(Function.call, Array.prototype.concat);
var $spliceApply = bind.call(Function.apply, Array.prototype.splice);
var $replace = bind.call(Function.call, String.prototype.replace);
var $strSlice = bind.call(Function.call, String.prototype.slice);
var $exec = bind.call(Function.call, RegExp.prototype.exec);

/* adapted from https://github.com/lodash/lodash/blob/4.17.15/dist/lodash.js#L6735-L6744 */
var rePropName = /[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g;
var reEscapeChar = /\\(\\)?/g; /** Used to match backslashes in property paths. */
var stringToPath = function stringToPath(string) {
	var first = $strSlice(string, 0, 1);
	var last = $strSlice(string, -1);
	if (first === '%' && last !== '%') {
		throw new $SyntaxError('invalid intrinsic syntax, expected closing `%`');
	} else if (last === '%' && first !== '%') {
		throw new $SyntaxError('invalid intrinsic syntax, expected opening `%`');
	}
	var result = [];
	$replace(string, rePropName, function (match, number, quote, subString) {
		result[result.length] = quote ? $replace(subString, reEscapeChar, '$1') : number || match;
	});
	return result;
};
/* end adaptation */

var getBaseIntrinsic = function getBaseIntrinsic(name, allowMissing) {
	var intrinsicName = name;
	var alias;
	if (hasOwn(LEGACY_ALIASES, intrinsicName)) {
		alias = LEGACY_ALIASES[intrinsicName];
		intrinsicName = '%' + alias[0] + '%';
	}

	if (hasOwn(INTRINSICS, intrinsicName)) {
		var value = INTRINSICS[intrinsicName];
		if (value === needsEval) {
			value = doEval(intrinsicName);
		}
		if (typeof value === 'undefined' && !allowMissing) {
			throw new $TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');
		}

		return {
			alias: alias,
			name: intrinsicName,
			value: value
		};
	}

	throw new $SyntaxError('intrinsic ' + name + ' does not exist!');
};

module.exports = function GetIntrinsic(name, allowMissing) {
	if (typeof name !== 'string' || name.length === 0) {
		throw new $TypeError('intrinsic name must be a non-empty string');
	}
	if (arguments.length > 1 && typeof allowMissing !== 'boolean') {
		throw new $TypeError('"allowMissing" argument must be a boolean');
	}

	if ($exec(/^%?[^%]*%?$/, name) === null) {
		throw new $SyntaxError('`%` may not be present anywhere but at the beginning and end of the intrinsic name');
	}
	var parts = stringToPath(name);
	var intrinsicBaseName = parts.length > 0 ? parts[0] : '';

	var intrinsic = getBaseIntrinsic('%' + intrinsicBaseName + '%', allowMissing);
	var intrinsicRealName = intrinsic.name;
	var value = intrinsic.value;
	var skipFurtherCaching = false;

	var alias = intrinsic.alias;
	if (alias) {
		intrinsicBaseName = alias[0];
		$spliceApply(parts, $concat([0, 1], alias));
	}

	for (var i = 1, isOwn = true; i < parts.length; i += 1) {
		var part = parts[i];
		var first = $strSlice(part, 0, 1);
		var last = $strSlice(part, -1);
		if (
			(
				(first === '"' || first === "'" || first === '`')
				|| (last === '"' || last === "'" || last === '`')
			)
			&& first !== last
		) {
			throw new $SyntaxError('property names with quotes must have matching quotes');
		}
		if (part === 'constructor' || !isOwn) {
			skipFurtherCaching = true;
		}

		intrinsicBaseName += '.' + part;
		intrinsicRealName = '%' + intrinsicBaseName + '%';

		if (hasOwn(INTRINSICS, intrinsicRealName)) {
			value = INTRINSICS[intrinsicRealName];
		} else if (value != null) {
			if (!(part in value)) {
				if (!allowMissing) {
					throw new $TypeError('base intrinsic for ' + name + ' exists, but the property is not available.');
				}
				return void undefined;
			}
			if ($gOPD && (i + 1) >= parts.length) {
				var desc = $gOPD(value, part);
				isOwn = !!desc;

				// By convention, when a data property is converted to an accessor
				// property to emulate a data property that does not suffer from
				// the override mistake, that accessor's getter is marked with
				// an `originalValue` property. Here, when we detect this, we
				// uphold the illusion by pretending to see that original data
				// property, i.e., returning the value rather than the getter
				// itself.
				if (isOwn && 'get' in desc && !('originalValue' in desc.get)) {
					value = desc.get;
				} else {
					value = value[part];
				}
			} else {
				isOwn = hasOwn(value, part);
				value = value[part];
			}

			if (isOwn && !skipFurtherCaching) {
				INTRINSICS[intrinsicRealName] = value;
			}
		}
	}
	return value;
};

},{"es-errors":207,"es-errors/eval":206,"es-errors/range":208,"es-errors/ref":209,"es-errors/syntax":210,"es-errors/type":211,"es-errors/uri":212,"function-bind":219,"has-proto":223,"has-symbols":224,"hasown":228}],221:[function(require,module,exports){
'use strict';

var GetIntrinsic = require('get-intrinsic');

var $gOPD = GetIntrinsic('%Object.getOwnPropertyDescriptor%', true);

if ($gOPD) {
	try {
		$gOPD([], 'length');
	} catch (e) {
		// IE 8 has a broken gOPD
		$gOPD = null;
	}
}

module.exports = $gOPD;

},{"get-intrinsic":220}],222:[function(require,module,exports){
'use strict';

var $defineProperty = require('es-define-property');

var hasPropertyDescriptors = function hasPropertyDescriptors() {
	return !!$defineProperty;
};

hasPropertyDescriptors.hasArrayLengthDefineBug = function hasArrayLengthDefineBug() {
	// node v0.6 has a bug where array lengths can be Set but not Defined
	if (!$defineProperty) {
		return null;
	}
	try {
		return $defineProperty([], 'length', { value: 1 }).length !== 1;
	} catch (e) {
		// In Firefox 4-22, defining length on an array throws an exception.
		return true;
	}
};

module.exports = hasPropertyDescriptors;

},{"es-define-property":205}],223:[function(require,module,exports){
'use strict';

var test = {
	__proto__: null,
	foo: {}
};

var $Object = Object;

/** @type {import('.')} */
module.exports = function hasProto() {
	// @ts-expect-error: TS errors on an inherited property for some reason
	return { __proto__: test }.foo === test.foo
		&& !(test instanceof $Object);
};

},{}],224:[function(require,module,exports){
'use strict';

var origSymbol = typeof Symbol !== 'undefined' && Symbol;
var hasSymbolSham = require('./shams');

module.exports = function hasNativeSymbols() {
	if (typeof origSymbol !== 'function') { return false; }
	if (typeof Symbol !== 'function') { return false; }
	if (typeof origSymbol('foo') !== 'symbol') { return false; }
	if (typeof Symbol('bar') !== 'symbol') { return false; }

	return hasSymbolSham();
};

},{"./shams":225}],225:[function(require,module,exports){
'use strict';

/* eslint complexity: [2, 18], max-statements: [2, 33] */
module.exports = function hasSymbols() {
	if (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') { return false; }
	if (typeof Symbol.iterator === 'symbol') { return true; }

	var obj = {};
	var sym = Symbol('test');
	var symObj = Object(sym);
	if (typeof sym === 'string') { return false; }

	if (Object.prototype.toString.call(sym) !== '[object Symbol]') { return false; }
	if (Object.prototype.toString.call(symObj) !== '[object Symbol]') { return false; }

	// temp disabled per https://github.com/ljharb/object.assign/issues/17
	// if (sym instanceof Symbol) { return false; }
	// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4
	// if (!(symObj instanceof Symbol)) { return false; }

	// if (typeof Symbol.prototype.toString !== 'function') { return false; }
	// if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }

	var symVal = 42;
	obj[sym] = symVal;
	for (sym in obj) { return false; } // eslint-disable-line no-restricted-syntax, no-unreachable-loop
	if (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) { return false; }

	if (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) { return false; }

	var syms = Object.getOwnPropertySymbols(obj);
	if (syms.length !== 1 || syms[0] !== sym) { return false; }

	if (!Object.prototype.propertyIsEnumerable.call(obj, sym)) { return false; }

	if (typeof Object.getOwnPropertyDescriptor === 'function') {
		var descriptor = Object.getOwnPropertyDescriptor(obj, sym);
		if (descriptor.value !== symVal || descriptor.enumerable !== true) { return false; }
	}

	return true;
};

},{}],226:[function(require,module,exports){
'use strict';

var hasSymbols = require('has-symbols/shams');

/** @type {import('.')} */
module.exports = function hasToStringTagShams() {
	return hasSymbols() && !!Symbol.toStringTag;
};

},{"has-symbols/shams":225}],227:[function(require,module,exports){
'use strict';

var bind = require('function-bind');

module.exports = bind.call(Function.call, Object.prototype.hasOwnProperty);

},{"function-bind":219}],228:[function(require,module,exports){
'use strict';

var call = Function.prototype.call;
var $hasOwn = Object.prototype.hasOwnProperty;
var bind = require('function-bind');

/** @type {import('.')} */
module.exports = bind.call(call, $hasOwn);

},{"function-bind":219}],229:[function(require,module,exports){
/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */
exports.read = function (buffer, offset, isLE, mLen, nBytes) {
  var e, m
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var nBits = -7
  var i = isLE ? (nBytes - 1) : 0
  var d = isLE ? -1 : 1
  var s = buffer[offset + i]

  i += d

  e = s & ((1 << (-nBits)) - 1)
  s >>= (-nBits)
  nBits += eLen
  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  m = e & ((1 << (-nBits)) - 1)
  e >>= (-nBits)
  nBits += mLen
  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  if (e === 0) {
    e = 1 - eBias
  } else if (e === eMax) {
    return m ? NaN : ((s ? -1 : 1) * Infinity)
  } else {
    m = m + Math.pow(2, mLen)
    e = e - eBias
  }
  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
}

exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
  var e, m, c
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
  var i = isLE ? 0 : (nBytes - 1)
  var d = isLE ? 1 : -1
  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0

  value = Math.abs(value)

  if (isNaN(value) || value === Infinity) {
    m = isNaN(value) ? 1 : 0
    e = eMax
  } else {
    e = Math.floor(Math.log(value) / Math.LN2)
    if (value * (c = Math.pow(2, -e)) < 1) {
      e--
      c *= 2
    }
    if (e + eBias >= 1) {
      value += rt / c
    } else {
      value += rt * Math.pow(2, 1 - eBias)
    }
    if (value * c >= 2) {
      e++
      c /= 2
    }

    if (e + eBias >= eMax) {
      m = 0
      e = eMax
    } else if (e + eBias >= 1) {
      m = ((value * c) - 1) * Math.pow(2, mLen)
      e = e + eBias
    } else {
      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
      e = 0
    }
  }

  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

  e = (e << mLen) | m
  eLen += mLen
  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

  buffer[offset + i - d] |= s * 128
}

},{}],230:[function(require,module,exports){
if (typeof Object.create === 'function') {
  // implementation from standard node.js 'util' module
  module.exports = function inherits(ctor, superCtor) {
    if (superCtor) {
      ctor.super_ = superCtor
      ctor.prototype = Object.create(superCtor.prototype, {
        constructor: {
          value: ctor,
          enumerable: false,
          writable: true,
          configurable: true
        }
      })
    }
  };
} else {
  // old school shim for old browsers
  module.exports = function inherits(ctor, superCtor) {
    if (superCtor) {
      ctor.super_ = superCtor
      var TempCtor = function () {}
      TempCtor.prototype = superCtor.prototype
      ctor.prototype = new TempCtor()
      ctor.prototype.constructor = ctor
    }
  }
}

},{}],231:[function(require,module,exports){
'use strict';

var fnToStr = Function.prototype.toString;
var reflectApply = typeof Reflect === 'object' && Reflect !== null && Reflect.apply;
var badArrayLike;
var isCallableMarker;
if (typeof reflectApply === 'function' && typeof Object.defineProperty === 'function') {
	try {
		badArrayLike = Object.defineProperty({}, 'length', {
			get: function () {
				throw isCallableMarker;
			}
		});
		isCallableMarker = {};
		// eslint-disable-next-line no-throw-literal
		reflectApply(function () { throw 42; }, null, badArrayLike);
	} catch (_) {
		if (_ !== isCallableMarker) {
			reflectApply = null;
		}
	}
} else {
	reflectApply = null;
}

var constructorRegex = /^\s*class\b/;
var isES6ClassFn = function isES6ClassFunction(value) {
	try {
		var fnStr = fnToStr.call(value);
		return constructorRegex.test(fnStr);
	} catch (e) {
		return false; // not a function
	}
};

var tryFunctionObject = function tryFunctionToStr(value) {
	try {
		if (isES6ClassFn(value)) { return false; }
		fnToStr.call(value);
		return true;
	} catch (e) {
		return false;
	}
};
var toStr = Object.prototype.toString;
var objectClass = '[object Object]';
var fnClass = '[object Function]';
var genClass = '[object GeneratorFunction]';
var ddaClass = '[object HTMLAllCollection]'; // IE 11
var ddaClass2 = '[object HTML document.all class]';
var ddaClass3 = '[object HTMLCollection]'; // IE 9-10
var hasToStringTag = typeof Symbol === 'function' && !!Symbol.toStringTag; // better: use `has-tostringtag`

var isIE68 = !(0 in [,]); // eslint-disable-line no-sparse-arrays, comma-spacing

var isDDA = function isDocumentDotAll() { return false; };
if (typeof document === 'object') {
	// Firefox 3 canonicalizes DDA to undefined when it's not accessed directly
	var all = document.all;
	if (toStr.call(all) === toStr.call(document.all)) {
		isDDA = function isDocumentDotAll(value) {
			/* globals document: false */
			// in IE 6-8, typeof document.all is "object" and it's truthy
			if ((isIE68 || !value) && (typeof value === 'undefined' || typeof value === 'object')) {
				try {
					var str = toStr.call(value);
					return (
						str === ddaClass
						|| str === ddaClass2
						|| str === ddaClass3 // opera 12.16
						|| str === objectClass // IE 6-8
					) && value('') == null; // eslint-disable-line eqeqeq
				} catch (e) { /**/ }
			}
			return false;
		};
	}
}

module.exports = reflectApply
	? function isCallable(value) {
		if (isDDA(value)) { return true; }
		if (!value) { return false; }
		if (typeof value !== 'function' && typeof value !== 'object') { return false; }
		try {
			reflectApply(value, null, badArrayLike);
		} catch (e) {
			if (e !== isCallableMarker) { return false; }
		}
		return !isES6ClassFn(value) && tryFunctionObject(value);
	}
	: function isCallable(value) {
		if (isDDA(value)) { return true; }
		if (!value) { return false; }
		if (typeof value !== 'function' && typeof value !== 'object') { return false; }
		if (hasToStringTag) { return tryFunctionObject(value); }
		if (isES6ClassFn(value)) { return false; }
		var strClass = toStr.call(value);
		if (strClass !== fnClass && strClass !== genClass && !(/^\[object HTML/).test(strClass)) { return false; }
		return tryFunctionObject(value);
	};

},{}],232:[function(require,module,exports){
'use strict';

var callBound = require('call-bind/callBound');
var hasToStringTag = require('has-tostringtag/shams')();
var has;
var $exec;
var isRegexMarker;
var badStringifier;

if (hasToStringTag) {
	has = callBound('Object.prototype.hasOwnProperty');
	$exec = callBound('RegExp.prototype.exec');
	isRegexMarker = {};

	var throwRegexMarker = function () {
		throw isRegexMarker;
	};
	badStringifier = {
		toString: throwRegexMarker,
		valueOf: throwRegexMarker
	};

	if (typeof Symbol.toPrimitive === 'symbol') {
		badStringifier[Symbol.toPrimitive] = throwRegexMarker;
	}
}

var $toString = callBound('Object.prototype.toString');
var gOPD = Object.getOwnPropertyDescriptor;
var regexClass = '[object RegExp]';

module.exports = hasToStringTag
	// eslint-disable-next-line consistent-return
	? function isRegex(value) {
		if (!value || typeof value !== 'object') {
			return false;
		}

		var descriptor = gOPD(value, 'lastIndex');
		var hasLastIndexDataProperty = descriptor && has(descriptor, 'value');
		if (!hasLastIndexDataProperty) {
			return false;
		}

		try {
			$exec(value, badStringifier);
		} catch (e) {
			return e === isRegexMarker;
		}
	}
	: function isRegex(value) {
		// In older browsers, typeof regex incorrectly returns 'function'
		if (!value || (typeof value !== 'object' && typeof value !== 'function')) {
			return false;
		}

		return $toString(value) === regexClass;
	};

},{"call-bind/callBound":144,"has-tostringtag/shams":226}],233:[function(require,module,exports){
'use strict';

var keysShim;
if (!Object.keys) {
	// modified from https://github.com/es-shims/es5-shim
	var has = Object.prototype.hasOwnProperty;
	var toStr = Object.prototype.toString;
	var isArgs = require('./isArguments'); // eslint-disable-line global-require
	var isEnumerable = Object.prototype.propertyIsEnumerable;
	var hasDontEnumBug = !isEnumerable.call({ toString: null }, 'toString');
	var hasProtoEnumBug = isEnumerable.call(function () {}, 'prototype');
	var dontEnums = [
		'toString',
		'toLocaleString',
		'valueOf',
		'hasOwnProperty',
		'isPrototypeOf',
		'propertyIsEnumerable',
		'constructor'
	];
	var equalsConstructorPrototype = function (o) {
		var ctor = o.constructor;
		return ctor && ctor.prototype === o;
	};
	var excludedKeys = {
		$applicationCache: true,
		$console: true,
		$external: true,
		$frame: true,
		$frameElement: true,
		$frames: true,
		$innerHeight: true,
		$innerWidth: true,
		$onmozfullscreenchange: true,
		$onmozfullscreenerror: true,
		$outerHeight: true,
		$outerWidth: true,
		$pageXOffset: true,
		$pageYOffset: true,
		$parent: true,
		$scrollLeft: true,
		$scrollTop: true,
		$scrollX: true,
		$scrollY: true,
		$self: true,
		$webkitIndexedDB: true,
		$webkitStorageInfo: true,
		$window: true
	};
	var hasAutomationEqualityBug = (function () {
		/* global window */
		if (typeof window === 'undefined') { return false; }
		for (var k in window) {
			try {
				if (!excludedKeys['$' + k] && has.call(window, k) && window[k] !== null && typeof window[k] === 'object') {
					try {
						equalsConstructorPrototype(window[k]);
					} catch (e) {
						return true;
					}
				}
			} catch (e) {
				return true;
			}
		}
		return false;
	}());
	var equalsConstructorPrototypeIfNotBuggy = function (o) {
		/* global window */
		if (typeof window === 'undefined' || !hasAutomationEqualityBug) {
			return equalsConstructorPrototype(o);
		}
		try {
			return equalsConstructorPrototype(o);
		} catch (e) {
			return false;
		}
	};

	keysShim = function keys(object) {
		var isObject = object !== null && typeof object === 'object';
		var isFunction = toStr.call(object) === '[object Function]';
		var isArguments = isArgs(object);
		var isString = isObject && toStr.call(object) === '[object String]';
		var theKeys = [];

		if (!isObject && !isFunction && !isArguments) {
			throw new TypeError('Object.keys called on a non-object');
		}

		var skipProto = hasProtoEnumBug && isFunction;
		if (isString && object.length > 0 && !has.call(object, 0)) {
			for (var i = 0; i < object.length; ++i) {
				theKeys.push(String(i));
			}
		}

		if (isArguments && object.length > 0) {
			for (var j = 0; j < object.length; ++j) {
				theKeys.push(String(j));
			}
		} else {
			for (var name in object) {
				if (!(skipProto && name === 'prototype') && has.call(object, name)) {
					theKeys.push(String(name));
				}
			}
		}

		if (hasDontEnumBug) {
			var skipConstructor = equalsConstructorPrototypeIfNotBuggy(object);

			for (var k = 0; k < dontEnums.length; ++k) {
				if (!(skipConstructor && dontEnums[k] === 'constructor') && has.call(object, dontEnums[k])) {
					theKeys.push(dontEnums[k]);
				}
			}
		}
		return theKeys;
	};
}
module.exports = keysShim;

},{"./isArguments":235}],234:[function(require,module,exports){
'use strict';

var slice = Array.prototype.slice;
var isArgs = require('./isArguments');

var origKeys = Object.keys;
var keysShim = origKeys ? function keys(o) { return origKeys(o); } : require('./implementation');

var originalKeys = Object.keys;

keysShim.shim = function shimObjectKeys() {
	if (Object.keys) {
		var keysWorksWithArguments = (function () {
			// Safari 5.0 bug
			var args = Object.keys(arguments);
			return args && args.length === arguments.length;
		}(1, 2));
		if (!keysWorksWithArguments) {
			Object.keys = function keys(object) { // eslint-disable-line func-name-matching
				if (isArgs(object)) {
					return originalKeys(slice.call(object));
				}
				return originalKeys(object);
			};
		}
	} else {
		Object.keys = keysShim;
	}
	return Object.keys || keysShim;
};

module.exports = keysShim;

},{"./implementation":233,"./isArguments":235}],235:[function(require,module,exports){
'use strict';

var toStr = Object.prototype.toString;

module.exports = function isArguments(value) {
	var str = toStr.call(value);
	var isArgs = str === '[object Arguments]';
	if (!isArgs) {
		isArgs = str !== '[object Array]' &&
			value !== null &&
			typeof value === 'object' &&
			typeof value.length === 'number' &&
			value.length >= 0 &&
			toStr.call(value.callee) === '[object Function]';
	}
	return isArgs;
};

},{}],236:[function(require,module,exports){
// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };

},{}],237:[function(require,module,exports){
(function (process,setImmediate){(function (){
var through = require('through');
var nextTick = typeof setImmediate !== 'undefined'
    ? setImmediate
    : process.nextTick
;

module.exports = function (write, end) {
    var tr = through(write, end);
    tr.pause();
    var resume = tr.resume;
    var pause = tr.pause;
    var paused = false;
    
    tr.pause = function () {
        paused = true;
        return pause.apply(this, arguments);
    };
    
    tr.resume = function () {
        paused = false;
        return resume.apply(this, arguments);
    };
    
    nextTick(function () {
        if (!paused) tr.resume();
    });
    
    return tr;
};

}).call(this)}).call(this,require('_process'),require("timers").setImmediate)
},{"_process":236,"through":252,"timers":253}],238:[function(require,module,exports){
/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */
/* eslint-disable node/no-deprecated-api */
var buffer = require('buffer')
var Buffer = buffer.Buffer

// alternative to using Object.keys for old browsers
function copyProps (src, dst) {
  for (var key in src) {
    dst[key] = src[key]
  }
}
if (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {
  module.exports = buffer
} else {
  // Copy properties from require('buffer')
  copyProps(buffer, exports)
  exports.Buffer = SafeBuffer
}

function SafeBuffer (arg, encodingOrOffset, length) {
  return Buffer(arg, encodingOrOffset, length)
}

SafeBuffer.prototype = Object.create(Buffer.prototype)

// Copy static methods from Buffer
copyProps(Buffer, SafeBuffer)

SafeBuffer.from = function (arg, encodingOrOffset, length) {
  if (typeof arg === 'number') {
    throw new TypeError('Argument must not be a number')
  }
  return Buffer(arg, encodingOrOffset, length)
}

SafeBuffer.alloc = function (size, fill, encoding) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  var buf = Buffer(size)
  if (fill !== undefined) {
    if (typeof encoding === 'string') {
      buf.fill(fill, encoding)
    } else {
      buf.fill(fill)
    }
  } else {
    buf.fill(0)
  }
  return buf
}

SafeBuffer.allocUnsafe = function (size) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  return Buffer(size)
}

SafeBuffer.allocUnsafeSlow = function (size) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  return buffer.SlowBuffer(size)
}

},{"buffer":126}],239:[function(require,module,exports){
'use strict';

var callBound = require('call-bind/callBound');
var isRegex = require('is-regex');

var $exec = callBound('RegExp.prototype.exec');
var $TypeError = require('es-errors/type');

module.exports = function regexTester(regex) {
	if (!isRegex(regex)) {
		throw new $TypeError('`regex` must be a RegExp');
	}
	return function test(s) {
		return $exec(regex, s) !== null;
	};
};

},{"call-bind/callBound":144,"es-errors/type":211,"is-regex":232}],240:[function(require,module,exports){
'use strict';

var GetIntrinsic = require('get-intrinsic');
var define = require('define-data-property');
var hasDescriptors = require('has-property-descriptors')();
var gOPD = require('gopd');

var $TypeError = require('es-errors/type');
var $floor = GetIntrinsic('%Math.floor%');

/** @type {import('.')} */
module.exports = function setFunctionLength(fn, length) {
	if (typeof fn !== 'function') {
		throw new $TypeError('`fn` is not a function');
	}
	if (typeof length !== 'number' || length < 0 || length > 0xFFFFFFFF || $floor(length) !== length) {
		throw new $TypeError('`length` must be a positive 32-bit integer');
	}

	var loose = arguments.length > 2 && !!arguments[2];

	var functionLengthIsConfigurable = true;
	var functionLengthIsWritable = true;
	if ('length' in fn && gOPD) {
		var desc = gOPD(fn, 'length');
		if (desc && !desc.configurable) {
			functionLengthIsConfigurable = false;
		}
		if (desc && !desc.writable) {
			functionLengthIsWritable = false;
		}
	}

	if (functionLengthIsConfigurable || functionLengthIsWritable || !loose) {
		if (hasDescriptors) {
			define(/** @type {Parameters<define>[0]} */ (fn), 'length', length, true, true);
		} else {
			define(/** @type {Parameters<define>[0]} */ (fn), 'length', length);
		}
	}
	return fn;
};

},{"define-data-property":149,"es-errors/type":211,"get-intrinsic":220,"gopd":221,"has-property-descriptors":222}],241:[function(require,module,exports){
'use strict';

var bind = require('function-bind');
var ES = require('es-abstract/es5');
var replace = bind.call(Function.call, String.prototype.replace);

var leftWhitespace = /^[\x09\x0A\x0B\x0C\x0D\x20\xA0\u1680\u180E\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF]+/;
var rightWhitespace = /[\x09\x0A\x0B\x0C\x0D\x20\xA0\u1680\u180E\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF]+$/;

module.exports = function trim() {
	var S = ES.ToString(ES.CheckObjectCoercible(this));
	return replace(replace(S, leftWhitespace, ''), rightWhitespace, '');
};

},{"es-abstract/es5":197,"function-bind":219}],242:[function(require,module,exports){
'use strict';

var bind = require('function-bind');
var define = require('define-properties');

var implementation = require('./implementation');
var getPolyfill = require('./polyfill');
var shim = require('./shim');

var boundTrim = bind.call(Function.call, getPolyfill());

define(boundTrim, {
	getPolyfill: getPolyfill,
	implementation: implementation,
	shim: shim
});

module.exports = boundTrim;

},{"./implementation":241,"./polyfill":243,"./shim":244,"define-properties":150,"function-bind":219}],243:[function(require,module,exports){
'use strict';

var implementation = require('./implementation');

var zeroWidthSpace = '\u200b';

module.exports = function getPolyfill() {
	if (String.prototype.trim && zeroWidthSpace.trim() === zeroWidthSpace) {
		return String.prototype.trim;
	}
	return implementation;
};

},{"./implementation":241}],244:[function(require,module,exports){
'use strict';

var define = require('define-properties');
var getPolyfill = require('./polyfill');

module.exports = function shimStringTrim() {
	var polyfill = getPolyfill();
	define(String.prototype, { trim: polyfill }, { trim: function () { return String.prototype.trim !== polyfill; } });
	return polyfill;
};

},{"./polyfill":243,"define-properties":150}],245:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

'use strict';

/*<replacement>*/

var Buffer = require('safe-buffer').Buffer;
/*</replacement>*/

var isEncoding = Buffer.isEncoding || function (encoding) {
  encoding = '' + encoding;
  switch (encoding && encoding.toLowerCase()) {
    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':
      return true;
    default:
      return false;
  }
};

function _normalizeEncoding(enc) {
  if (!enc) return 'utf8';
  var retried;
  while (true) {
    switch (enc) {
      case 'utf8':
      case 'utf-8':
        return 'utf8';
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return 'utf16le';
      case 'latin1':
      case 'binary':
        return 'latin1';
      case 'base64':
      case 'ascii':
      case 'hex':
        return enc;
      default:
        if (retried) return; // undefined
        enc = ('' + enc).toLowerCase();
        retried = true;
    }
  }
};

// Do not cache `Buffer.isEncoding` when checking encoding names as some
// modules monkey-patch it to support additional encodings
function normalizeEncoding(enc) {
  var nenc = _normalizeEncoding(enc);
  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);
  return nenc || enc;
}

// StringDecoder provides an interface for efficiently splitting a series of
// buffers into a series of JS strings without breaking apart multi-byte
// characters.
exports.StringDecoder = StringDecoder;
function StringDecoder(encoding) {
  this.encoding = normalizeEncoding(encoding);
  var nb;
  switch (this.encoding) {
    case 'utf16le':
      this.text = utf16Text;
      this.end = utf16End;
      nb = 4;
      break;
    case 'utf8':
      this.fillLast = utf8FillLast;
      nb = 4;
      break;
    case 'base64':
      this.text = base64Text;
      this.end = base64End;
      nb = 3;
      break;
    default:
      this.write = simpleWrite;
      this.end = simpleEnd;
      return;
  }
  this.lastNeed = 0;
  this.lastTotal = 0;
  this.lastChar = Buffer.allocUnsafe(nb);
}

StringDecoder.prototype.write = function (buf) {
  if (buf.length === 0) return '';
  var r;
  var i;
  if (this.lastNeed) {
    r = this.fillLast(buf);
    if (r === undefined) return '';
    i = this.lastNeed;
    this.lastNeed = 0;
  } else {
    i = 0;
  }
  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);
  return r || '';
};

StringDecoder.prototype.end = utf8End;

// Returns only complete characters in a Buffer
StringDecoder.prototype.text = utf8Text;

// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer
StringDecoder.prototype.fillLast = function (buf) {
  if (this.lastNeed <= buf.length) {
    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);
    return this.lastChar.toString(this.encoding, 0, this.lastTotal);
  }
  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);
  this.lastNeed -= buf.length;
};

// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a
// continuation byte. If an invalid byte is detected, -2 is returned.
function utf8CheckByte(byte) {
  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;
  return byte >> 6 === 0x02 ? -1 : -2;
}

// Checks at most 3 bytes at the end of a Buffer in order to detect an
// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)
// needed to complete the UTF-8 character (if applicable) are returned.
function utf8CheckIncomplete(self, buf, i) {
  var j = buf.length - 1;
  if (j < i) return 0;
  var nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) self.lastNeed = nb - 1;
    return nb;
  }
  if (--j < i || nb === -2) return 0;
  nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) self.lastNeed = nb - 2;
    return nb;
  }
  if (--j < i || nb === -2) return 0;
  nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) {
      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;
    }
    return nb;
  }
  return 0;
}

// Validates as many continuation bytes for a multi-byte UTF-8 character as
// needed or are available. If we see a non-continuation byte where we expect
// one, we "replace" the validated continuation bytes we've seen so far with
// a single UTF-8 replacement character ('\ufffd'), to match v8's UTF-8 decoding
// behavior. The continuation byte check is included three times in the case
// where all of the continuation bytes for a character exist in the same buffer.
// It is also done this way as a slight performance increase instead of using a
// loop.
function utf8CheckExtraBytes(self, buf, p) {
  if ((buf[0] & 0xC0) !== 0x80) {
    self.lastNeed = 0;
    return '\ufffd';
  }
  if (self.lastNeed > 1 && buf.length > 1) {
    if ((buf[1] & 0xC0) !== 0x80) {
      self.lastNeed = 1;
      return '\ufffd';
    }
    if (self.lastNeed > 2 && buf.length > 2) {
      if ((buf[2] & 0xC0) !== 0x80) {
        self.lastNeed = 2;
        return '\ufffd';
      }
    }
  }
}

// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.
function utf8FillLast(buf) {
  var p = this.lastTotal - this.lastNeed;
  var r = utf8CheckExtraBytes(this, buf, p);
  if (r !== undefined) return r;
  if (this.lastNeed <= buf.length) {
    buf.copy(this.lastChar, p, 0, this.lastNeed);
    return this.lastChar.toString(this.encoding, 0, this.lastTotal);
  }
  buf.copy(this.lastChar, p, 0, buf.length);
  this.lastNeed -= buf.length;
}

// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a
// partial character, the character's bytes are buffered until the required
// number of bytes are available.
function utf8Text(buf, i) {
  var total = utf8CheckIncomplete(this, buf, i);
  if (!this.lastNeed) return buf.toString('utf8', i);
  this.lastTotal = total;
  var end = buf.length - (total - this.lastNeed);
  buf.copy(this.lastChar, 0, end);
  return buf.toString('utf8', i, end);
}

// For UTF-8, a replacement character is added when ending on a partial
// character.
function utf8End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) return r + '\ufffd';
  return r;
}

// UTF-16LE typically needs two bytes per character, but even if we have an even
// number of bytes available, we need to check if we end on a leading/high
// surrogate. In that case, we need to wait for the next two bytes in order to
// decode the last character properly.
function utf16Text(buf, i) {
  if ((buf.length - i) % 2 === 0) {
    var r = buf.toString('utf16le', i);
    if (r) {
      var c = r.charCodeAt(r.length - 1);
      if (c >= 0xD800 && c <= 0xDBFF) {
        this.lastNeed = 2;
        this.lastTotal = 4;
        this.lastChar[0] = buf[buf.length - 2];
        this.lastChar[1] = buf[buf.length - 1];
        return r.slice(0, -1);
      }
    }
    return r;
  }
  this.lastNeed = 1;
  this.lastTotal = 2;
  this.lastChar[0] = buf[buf.length - 1];
  return buf.toString('utf16le', i, buf.length - 1);
}

// For UTF-16LE we do not explicitly append special replacement characters if we
// end on a partial character, we simply let v8 handle that.
function utf16End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) {
    var end = this.lastTotal - this.lastNeed;
    return r + this.lastChar.toString('utf16le', 0, end);
  }
  return r;
}

function base64Text(buf, i) {
  var n = (buf.length - i) % 3;
  if (n === 0) return buf.toString('base64', i);
  this.lastNeed = 3 - n;
  this.lastTotal = 3;
  if (n === 1) {
    this.lastChar[0] = buf[buf.length - 1];
  } else {
    this.lastChar[0] = buf[buf.length - 2];
    this.lastChar[1] = buf[buf.length - 1];
  }
  return buf.toString('base64', i, buf.length - n);
}

function base64End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);
  return r;
}

// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)
function simpleWrite(buf) {
  return buf.toString(this.encoding);
}

function simpleEnd(buf) {
  return buf && buf.length ? this.write(buf) : '';
}
},{"safe-buffer":238}],246:[function(require,module,exports){
(function (process,setImmediate){(function (){
var defined = require('defined');
var createDefaultStream = require('./lib/default_stream');
var Test = require('./lib/test');
var createResult = require('./lib/results');
var through = require('through');

var canEmitExit = typeof process !== 'undefined' && process
    && typeof process.on === 'function' && process.browser !== true
;
var canExit = typeof process !== 'undefined' && process
    && typeof process.exit === 'function'
;

var nextTick = typeof setImmediate !== 'undefined'
    ? setImmediate
    : process.nextTick
;

exports = module.exports = (function () {
    var harness;
    var lazyLoad = function () {
        return getHarness().apply(this, arguments);
    };
    
    lazyLoad.only = function () {
        return getHarness().only.apply(this, arguments);
    };
    
    lazyLoad.createStream = function (opts) {
        if (!opts) opts = {};
        if (!harness) {
            var output = through();
            getHarness({ stream: output, objectMode: opts.objectMode });
            return output;
        }
        return harness.createStream(opts);
    };
    
    lazyLoad.onFinish = function () {
        return getHarness().onFinish.apply(this, arguments);
    };

    lazyLoad.getHarness = getHarness

    return lazyLoad

    function getHarness (opts) {
        if (!opts) opts = {};
        opts.autoclose = !canEmitExit;
        if (!harness) harness = createExitHarness(opts);
        return harness;
    }
})();

function createExitHarness (conf) {
    if (!conf) conf = {};
    var harness = createHarness({
        autoclose: defined(conf.autoclose, false)
    });
    
    var stream = harness.createStream({ objectMode: conf.objectMode });
    var es = stream.pipe(conf.stream || createDefaultStream());
    if (canEmitExit) {
        es.on('error', function (err) { harness._exitCode = 1 });
    }
    
    var ended = false;
    stream.on('end', function () { ended = true });
    
    if (conf.exit === false) return harness;
    if (!canEmitExit || !canExit) return harness;

    var inErrorState = false;

    process.on('exit', function (code) {
        // let the process exit cleanly.
        if (code !== 0) {
            return
        }

        if (!ended) {
            var only = harness._results._only;
            for (var i = 0; i < harness._tests.length; i++) {
                var t = harness._tests[i];
                if (only && t.name !== only) continue;
                t._exit();
            }
        }
        harness.close();
        process.exit(code || harness._exitCode);
    });
    
    return harness;
}

exports.createHarness = createHarness;
exports.Test = Test;
exports.test = exports; // tap compat
exports.test.skip = Test.skip;

var exitInterval;

function createHarness (conf_) {
    if (!conf_) conf_ = {};
    var results = createResult();
    if (conf_.autoclose !== false) {
        results.once('done', function () { results.close() });
    }
    
    var test = function (name, conf, cb) {
        var t = new Test(name, conf, cb);
        test._tests.push(t);
        
        (function inspectCode (st) {
            st.on('test', function sub (st_) {
                inspectCode(st_);
            });
            st.on('result', function (r) {
                if (!r.ok && typeof r !== 'string') test._exitCode = 1
            });
        })(t);
        
        results.push(t);
        return t;
    };
    test._results = results;
    
    test._tests = [];
    
    test.createStream = function (opts) {
        return results.createStream(opts);
    };

    test.onFinish = function (cb) {
        results.on('done', cb);
    };
    
    var only = false;
    test.only = function (name) {
        if (only) throw new Error('there can only be one only test');
        results.only(name);
        only = true;
        return test.apply(null, arguments);
    };
    test._exitCode = 0;
    
    test.close = function () { results.close() };
    
    return test;
}

}).call(this)}).call(this,require('_process'),require("timers").setImmediate)
},{"./lib/default_stream":247,"./lib/results":249,"./lib/test":250,"_process":236,"defined":151,"through":252,"timers":253}],247:[function(require,module,exports){
(function (process){(function (){
var through = require('through');
var fs = require('fs');

module.exports = function () {
    var line = '';
    var stream = through(write, flush);
    return stream;
    
    function write (buf) {
        for (var i = 0; i < buf.length; i++) {
            var c = typeof buf === 'string'
                ? buf.charAt(i)
                : String.fromCharCode(buf[i])
            ;
            if (c === '\n') flush();
            else line += c;
        }
    }
    
    function flush () {
        if (fs.writeSync && /^win/.test(process.platform)) {
            try { fs.writeSync(1, line + '\n'); }
            catch (e) { stream.emit('error', e) }
        }
        else {
            try { console.log(line) }
            catch (e) { stream.emit('error', e) }
        }
        line = '';
    }
};

}).call(this)}).call(this,require('_process'))
},{"_process":236,"fs":125,"through":252}],248:[function(require,module,exports){
(function (process,setImmediate){(function (){
module.exports = typeof setImmediate !== 'undefined'
    ? setImmediate
    : process.nextTick
;

}).call(this)}).call(this,require('_process'),require("timers").setImmediate)
},{"_process":236,"timers":253}],249:[function(require,module,exports){
(function (process,setImmediate){(function (){
var EventEmitter = require('events').EventEmitter;
var inherits = require('inherits');
var through = require('through');
var resumer = require('resumer');
var inspect = require('object-inspect');
var bind = require('function-bind');
var has = require('has');
var regexpTest = bind.call(Function.call, RegExp.prototype.test);
var yamlIndicators = /\:|\-|\?/;
var nextTick = typeof setImmediate !== 'undefined'
    ? setImmediate
    : process.nextTick
;

module.exports = Results;
inherits(Results, EventEmitter);

function Results () {
    if (!(this instanceof Results)) return new Results;
    this.count = 0;
    this.fail = 0;
    this.pass = 0;
    this._stream = through();
    this.tests = [];
}

Results.prototype.createStream = function (opts) {
    if (!opts) opts = {};
    var self = this;
    var output, testId = 0;
    if (opts.objectMode) {
        output = through();
        self.on('_push', function ontest (t, extra) {
            if (!extra) extra = {};
            var id = testId++;
            t.once('prerun', function () {
                var row = {
                    type: 'test',
                    name: t.name,
                    id: id
                };
                if (has(extra, 'parent')) {
                    row.parent = extra.parent;
                }
                output.queue(row);
            });
            t.on('test', function (st) {
                ontest(st, { parent: id });
            });
            t.on('result', function (res) {
                res.test = id;
                res.type = 'assert';
                output.queue(res);
            });
            t.on('end', function () {
                output.queue({ type: 'end', test: id });
            });
        });
        self.on('done', function () { output.queue(null) });
    }
    else {
        output = resumer();
        output.queue('TAP version 13\n');
        self._stream.pipe(output);
    }
    
    nextTick(function next() {
        var t;
        while (t = getNextTest(self)) {
            t.run();
            if (!t.ended) return t.once('end', function(){ nextTick(next); });
        }
        self.emit('done');
    });
    
    return output;
};

Results.prototype.push = function (t) {
    var self = this;
    self.tests.push(t);
    self._watch(t);
    self.emit('_push', t);
};

Results.prototype.only = function (name) {
    this._only = name;
};

Results.prototype._watch = function (t) {
    var self = this;
    var write = function (s) { self._stream.queue(s) };
    t.once('prerun', function () {
        write('# ' + t.name + '\n');
    });
    
    t.on('result', function (res) {
        if (typeof res === 'string') {
            write('# ' + res + '\n');
            return;
        }
        write(encodeResult(res, self.count + 1));
        self.count ++;

        if (res.ok) self.pass ++
        else self.fail ++
    });
    
    t.on('test', function (st) { self._watch(st) });
};

Results.prototype.close = function () {
    var self = this;
    if (self.closed) self._stream.emit('error', new Error('ALREADY CLOSED'));
    self.closed = true;
    var write = function (s) { self._stream.queue(s) };
    
    write('\n1..' + self.count + '\n');
    write('# tests ' + self.count + '\n');
    write('# pass  ' + self.pass + '\n');
    if (self.fail) write('# fail  ' + self.fail + '\n')
    else write('\n# ok\n')

    self._stream.queue(null);
};

function encodeResult (res, count) {
    var output = '';
    output += (res.ok ? 'ok ' : 'not ok ') + count;
    output += res.name ? ' ' + res.name.toString().replace(/\s+/g, ' ') : '';
    
    if (res.skip) output += ' # SKIP';
    else if (res.todo) output += ' # TODO';
    
    output += '\n';
    if (res.ok) return output;
    
    var outer = '  ';
    var inner = outer + '  ';
    output += outer + '---\n';
    output += inner + 'operator: ' + res.operator + '\n';
    
    if (has(res, 'expected') || has(res, 'actual')) {
        var ex = inspect(res.expected);
        var ac = inspect(res.actual);
        
        if (Math.max(ex.length, ac.length) > 65 || invalidYaml(ex) || invalidYaml(ac)) {
            output += inner + 'expected: |-\n' + inner + '  ' + ex + '\n';
            output += inner + 'actual: |-\n' + inner + '  ' + ac + '\n';
        }
        else {
            output += inner + 'expected: ' + ex + '\n';
            output += inner + 'actual:   ' + ac + '\n';
        }
    }
    if (res.at) {
        output += inner + 'at: ' + res.at + '\n';
    }
    if (res.operator === 'error' && res.actual && res.actual.stack) {
        var lines = String(res.actual.stack).split('\n');
        output += inner + 'stack: |-\n';
        for (var i = 0; i < lines.length; i++) {
            output += inner + '  ' + lines[i] + '\n';
        }
    }
    
    output += outer + '...\n';
    return output;
}

function getNextTest (results) {
    if (!results._only) {
        return results.tests.shift();
    }
    
    do {
        var t = results.tests.shift();
        if (!t) continue;
        if (results._only === t.name) {
            return t;
        }
    } while (results.tests.length !== 0)
}

function invalidYaml (str) {
    return regexpTest(yamlIndicators, str);
}

}).call(this)}).call(this,require('_process'),require("timers").setImmediate)
},{"_process":236,"events":127,"function-bind":219,"has":227,"inherits":230,"object-inspect":251,"resumer":237,"through":252,"timers":253}],250:[function(require,module,exports){
(function (__dirname){(function (){
var deepEqual = require('deep-equal');
var defined = require('defined');
var path = require('path');
var inherits = require('inherits');
var EventEmitter = require('events').EventEmitter;
var has = require('has');
var trim = require('string.prototype.trim');

var nextTick = require('./next_tick');

module.exports = Test;

inherits(Test, EventEmitter);

var getTestArgs = function (name_, opts_, cb_) {
    var name = '(anonymous)';
    var opts = {};
    var cb;

    for (var i = 0; i < arguments.length; i++) {
        var arg = arguments[i];
        var t = typeof arg;
        if (t === 'string') {
            name = arg;
        }
        else if (t === 'object') {
            opts = arg || opts;
        }
        else if (t === 'function') {
            cb = arg;
        }
    }
    return { name: name, opts: opts, cb: cb };
};

function Test (name_, opts_, cb_) {
    if (! (this instanceof Test)) {
        return new Test(name_, opts_, cb_);
    }

    var args = getTestArgs(name_, opts_, cb_);

    this.readable = true;
    this.name = args.name || '(anonymous)';
    this.assertCount = 0;
    this.pendingCount = 0;
    this._skip = args.opts.skip || false;
    this._timeout = args.opts.timeout;
    this._plan = undefined;
    this._cb = args.cb;
    this._progeny = [];
    this._ok = true;

    for (var prop in this) {
        this[prop] = (function bind(self, val) {
            if (typeof val === 'function') {
                return function bound() {
                    return val.apply(self, arguments);
                };
            }
            else return val;
        })(this, this[prop]);
    }
}

Test.prototype.run = function () {
    if (this._skip) {
        this.comment('SKIP ' + this.name);
    }
    if (!this._cb || this._skip) {
        return this._end();
    }
    if (this._timeout != null) {
        this.timeoutAfter(this._timeout);
    }
    this.emit('prerun');
    this._cb(this);
    this.emit('run');
};

Test.prototype.test = function (name, opts, cb) {
    var self = this;
    var t = new Test(name, opts, cb);
    this._progeny.push(t);
    this.pendingCount++;
    this.emit('test', t);
    t.on('prerun', function () {
        self.assertCount++;
    })
    
    if (!self._pendingAsserts()) {
        nextTick(function () {
            self._end();
        });
    }
    
    nextTick(function() {
        if (!self._plan && self.pendingCount == self._progeny.length) {
            self._end();
        }
    });
};

Test.prototype.comment = function (msg) {
    var that = this;
    trim(msg).split('\n').forEach(function (aMsg) {
        that.emit('result', trim(aMsg).replace(/^#\s*/, ''));
    });
};

Test.prototype.plan = function (n) {
    this._plan = n;
    this.emit('plan', n);
};

Test.prototype.timeoutAfter = function(ms) {
    if (!ms) throw new Error('timeoutAfter requires a timespan');
    var self = this;
    var timeout = setTimeout(function() {
        self.fail('test timed out after ' + ms + 'ms');
        self.end();
    }, ms);
    this.once('end', function() {
        clearTimeout(timeout);
    });
}

Test.prototype.end = function (err) { 
    var self = this;
    if (arguments.length >= 1 && !!err) {
        this.ifError(err);
    }
    
    if (this.calledEnd) {
        this.fail('.end() called twice');
    }
    this.calledEnd = true;
    this._end();
};

Test.prototype._end = function (err) {
    var self = this;
    if (this._progeny.length) {
        var t = this._progeny.shift();
        t.on('end', function () { self._end() });
        t.run();
        return;
    }
    
    if (!this.ended) this.emit('end');
    var pendingAsserts = this._pendingAsserts();
    if (!this._planError && this._plan !== undefined && pendingAsserts) {
        this._planError = true;
        this.fail('plan != count', {
            expected : this._plan,
            actual : this.assertCount
        });
    }
    this.ended = true;
};

Test.prototype._exit = function () {
    if (this._plan !== undefined &&
        !this._planError && this.assertCount !== this._plan) {
        this._planError = true;
        this.fail('plan != count', {
            expected : this._plan,
            actual : this.assertCount,
            exiting : true
        });
    }
    else if (!this.ended) {
        this.fail('test exited without ending', {
            exiting: true
        });
    }
};

Test.prototype._pendingAsserts = function () {
    if (this._plan === undefined) {
        return 1;
    }
    else {
        return this._plan - (this._progeny.length + this.assertCount);
    }
};

Test.prototype._assert = function assert (ok, opts) {
    var self = this;
    var extra = opts.extra || {};
    
    var res = {
        id : self.assertCount ++,
        ok : Boolean(ok),
        skip : defined(extra.skip, opts.skip),
        name : defined(extra.message, opts.message, '(unnamed assert)'),
        operator : defined(extra.operator, opts.operator)
    };
    if (has(opts, 'actual') || has(extra, 'actual')) {
        res.actual = defined(extra.actual, opts.actual);
    }
    if (has(opts, 'expected') || has(extra, 'expected')) {
        res.expected = defined(extra.expected, opts.expected);
    }
    this._ok = Boolean(this._ok && ok);
    
    if (!ok) {
        res.error = defined(extra.error, opts.error, new Error(res.name));
    }
    
    if (!ok) {
        var e = new Error('exception');
        var err = (e.stack || '').split('\n');
        var dir = path.dirname(__dirname) + '/';
        
        for (var i = 0; i < err.length; i++) {
            var m = /^[^\s]*\s*\bat\s+(.+)/.exec(err[i]);
            if (!m) {
                continue;
            }
            
            var s = m[1].split(/\s+/);
            var filem = /(\/[^:\s]+:(\d+)(?::(\d+))?)/.exec(s[1]);
            if (!filem) {
                filem = /(\/[^:\s]+:(\d+)(?::(\d+))?)/.exec(s[2]);
                
                if (!filem) {
                    filem = /(\/[^:\s]+:(\d+)(?::(\d+))?)/.exec(s[3]);

                    if (!filem) {
                        continue;
                    }
                }
            }
            
            if (filem[1].slice(0, dir.length) === dir) {
                continue;
            }
            
            res.functionName = s[0];
            res.file = filem[1];
            res.line = Number(filem[2]);
            if (filem[3]) res.column = filem[3];
            
            res.at = m[1];
            break;
        }
    }

    self.emit('result', res);
    
    var pendingAsserts = self._pendingAsserts();
    if (!pendingAsserts) {
        if (extra.exiting) {
            self._end();
        } else {
            nextTick(function () {
                self._end();
            });
        }
    }
    
    if (!self._planError && pendingAsserts < 0) {
        self._planError = true;
        self.fail('plan != count', {
            expected : self._plan,
            actual : self._plan - pendingAsserts
        });
    }
};

Test.prototype.fail = function (msg, extra) {
    this._assert(false, {
        message : msg,
        operator : 'fail',
        extra : extra
    });
};

Test.prototype.pass = function (msg, extra) {
    this._assert(true, {
        message : msg,
        operator : 'pass',
        extra : extra
    });
};

Test.prototype.skip = function (msg, extra) {
    this._assert(true, {
        message : msg,
        operator : 'skip',
        skip : true,
        extra : extra
    });
};

Test.prototype.ok
= Test.prototype['true']
= Test.prototype.assert
= function (value, msg, extra) {
    this._assert(value, {
        message : msg,
        operator : 'ok',
        expected : true,
        actual : value,
        extra : extra
    });
};

Test.prototype.notOk
= Test.prototype['false']
= Test.prototype.notok
= function (value, msg, extra) {
    this._assert(!value, {
        message : msg,
        operator : 'notOk',
        expected : false,
        actual : value,
        extra : extra
    });
};

Test.prototype.error
= Test.prototype.ifError
= Test.prototype.ifErr
= Test.prototype.iferror
= function (err, msg, extra) {
    this._assert(!err, {
        message : defined(msg, String(err)),
        operator : 'error',
        actual : err,
        extra : extra
    });
};

Test.prototype.equal
= Test.prototype.equals
= Test.prototype.isEqual
= Test.prototype.is
= Test.prototype.strictEqual
= Test.prototype.strictEquals
= function (a, b, msg, extra) {
    this._assert(a === b, {
        message : defined(msg, 'should be equal'),
        operator : 'equal',
        actual : a,
        expected : b,
        extra : extra
    });
};

Test.prototype.notEqual
= Test.prototype.notEquals
= Test.prototype.notStrictEqual
= Test.prototype.notStrictEquals
= Test.prototype.isNotEqual
= Test.prototype.isNot
= Test.prototype.not
= Test.prototype.doesNotEqual
= Test.prototype.isInequal
= function (a, b, msg, extra) {
    this._assert(a !== b, {
        message : defined(msg, 'should not be equal'),
        operator : 'notEqual',
        actual : a,
        notExpected : b,
        extra : extra
    });
};

Test.prototype.deepEqual
= Test.prototype.deepEquals
= Test.prototype.isEquivalent
= Test.prototype.same
= function (a, b, msg, extra) {
    this._assert(deepEqual(a, b, { strict: true }), {
        message : defined(msg, 'should be equivalent'),
        operator : 'deepEqual',
        actual : a,
        expected : b,
        extra : extra
    });
};

Test.prototype.deepLooseEqual
= Test.prototype.looseEqual
= Test.prototype.looseEquals
= function (a, b, msg, extra) {
    this._assert(deepEqual(a, b), {
        message : defined(msg, 'should be equivalent'),
        operator : 'deepLooseEqual',
        actual : a,
        expected : b,
        extra : extra
    });
};

Test.prototype.notDeepEqual
= Test.prototype.notEquivalent
= Test.prototype.notDeeply
= Test.prototype.notSame
= Test.prototype.isNotDeepEqual
= Test.prototype.isNotDeeply
= Test.prototype.isNotEquivalent
= Test.prototype.isInequivalent
= function (a, b, msg, extra) {
    this._assert(!deepEqual(a, b, { strict: true }), {
        message : defined(msg, 'should not be equivalent'),
        operator : 'notDeepEqual',
        actual : a,
        notExpected : b,
        extra : extra
    });
};

Test.prototype.notDeepLooseEqual
= Test.prototype.notLooseEqual
= Test.prototype.notLooseEquals
= function (a, b, msg, extra) {
    this._assert(!deepEqual(a, b), {
        message : defined(msg, 'should be equivalent'),
        operator : 'notDeepLooseEqual',
        actual : a,
        expected : b,
        extra : extra
    });
};

Test.prototype['throws'] = function (fn, expected, msg, extra) {
    if (typeof expected === 'string') {
        msg = expected;
        expected = undefined;
    }

    var caught = undefined;

    try {
        fn();
    } catch (err) {
        caught = { error : err };
        var message = err.message;
        delete err.message;
        err.message = message;
    }

    var passed = caught;

    if (expected instanceof RegExp) {
        passed = expected.test(caught && caught.error);
        expected = String(expected);
    }

    if (typeof expected === 'function' && caught) {
        passed = caught.error instanceof expected;
        caught.error = caught.error.constructor;
    }

    this._assert(typeof fn === 'function' && passed, {
        message : defined(msg, 'should throw'),
        operator : 'throws',
        actual : caught && caught.error,
        expected : expected,
        error: !passed && caught && caught.error,
        extra : extra
    });
};

Test.prototype.doesNotThrow = function (fn, expected, msg, extra) {
    if (typeof expected === 'string') {
        msg = expected;
        expected = undefined;
    }
    var caught = undefined;
    try {
        fn();
    }
    catch (err) {
        caught = { error : err };
    }
    this._assert(!caught, {
        message : defined(msg, 'should not throw'),
        operator : 'throws',
        actual : caught && caught.error,
        expected : expected,
        error : caught && caught.error,
        extra : extra
    });
};

Test.skip = function (name_, _opts, _cb) {
    var args = getTestArgs.apply(null, arguments);
    args.opts.skip = true;
    return Test(args.name, args.opts, args.cb);
};

// vim: set softtabstop=4 shiftwidth=4:


}).call(this)}).call(this,"/node_modules/tape/lib")
},{"./next_tick":248,"deep-equal":146,"defined":151,"events":127,"has":227,"inherits":230,"path":128,"string.prototype.trim":242}],251:[function(require,module,exports){
var hasMap = typeof Map === 'function' && Map.prototype;
var mapSizeDescriptor = Object.getOwnPropertyDescriptor && hasMap ? Object.getOwnPropertyDescriptor(Map.prototype, 'size') : null;
var mapSize = hasMap && mapSizeDescriptor && typeof mapSizeDescriptor.get === 'function' ? mapSizeDescriptor.get : null;
var mapForEach = hasMap && Map.prototype.forEach;
var hasSet = typeof Set === 'function' && Set.prototype;
var setSizeDescriptor = Object.getOwnPropertyDescriptor && hasSet ? Object.getOwnPropertyDescriptor(Set.prototype, 'size') : null;
var setSize = hasSet && setSizeDescriptor && typeof setSizeDescriptor.get === 'function' ? setSizeDescriptor.get : null;
var setForEach = hasSet && Set.prototype.forEach;

module.exports = function inspect_ (obj, opts, depth, seen) {
    if (!opts) opts = {};
    
    var maxDepth = opts.depth === undefined ? 5 : opts.depth;
    if (depth === undefined) depth = 0;
    if (depth >= maxDepth && maxDepth > 0
    && obj && typeof obj === 'object') {
        return '[Object]';
    }
    
    if (seen === undefined) seen = [];
    else if (indexOf(seen, obj) >= 0) {
        return '[Circular]';
    }
    
    function inspect (value, from) {
        if (from) {
            seen = seen.slice();
            seen.push(from);
        }
        return inspect_(value, opts, depth + 1, seen);
    }
    
    if (typeof obj === 'string') {
        return inspectString(obj);
    }
    else if (typeof obj === 'function') {
        var name = nameOf(obj);
        return '[Function' + (name ? ': ' + name : '') + ']';
    }
    else if (obj === null) {
        return 'null';
    }
    else if (isSymbol(obj)) {
        var symString = Symbol.prototype.toString.call(obj);
        return typeof obj === 'object' ? 'Object(' + symString + ')' : symString;
    }
    else if (isElement(obj)) {
        var s = '<' + String(obj.nodeName).toLowerCase();
        var attrs = obj.attributes || [];
        for (var i = 0; i < attrs.length; i++) {
            s += ' ' + attrs[i].name + '="' + quote(attrs[i].value) + '"';
        }
        s += '>';
        if (obj.childNodes && obj.childNodes.length) s += '...';
        s += '</' + String(obj.nodeName).toLowerCase() + '>';
        return s;
    }
    else if (isArray(obj)) {
        if (obj.length === 0) return '[]';
        var xs = Array(obj.length);
        for (var i = 0; i < obj.length; i++) {
            xs[i] = has(obj, i) ? inspect(obj[i], obj) : '';
        }
        return '[ ' + xs.join(', ') + ' ]';
    }
    else if (isError(obj)) {
        var parts = [];
        for (var key in obj) {
            if (!has(obj, key)) continue;
            
            if (/[^\w$]/.test(key)) {
                parts.push(inspect(key) + ': ' + inspect(obj[key]));
            }
            else {
                parts.push(key + ': ' + inspect(obj[key]));
            }
        }
        if (parts.length === 0) return '[' + obj + ']';
        return '{ [' + obj + '] ' + parts.join(', ') + ' }';
    }
    else if (typeof obj === 'object' && typeof obj.inspect === 'function') {
        return obj.inspect();
    }
    else if (isMap(obj)) {
        var parts = [];
        mapForEach.call(obj, function (value, key) {
            parts.push(inspect(key, obj) + ' => ' + inspect(value, obj));
        });
        return 'Map (' + mapSize.call(obj) + ') {' + parts.join(', ') + '}';
    }
    else if (isSet(obj)) {
        var parts = [];
        setForEach.call(obj, function (value ) {
            parts.push(inspect(value, obj));
        });
        return 'Set (' + setSize.call(obj) + ') {' + parts.join(', ') + '}';
    }
    else if (typeof obj === 'object' && !isDate(obj) && !isRegExp(obj)) {
        var xs = [], keys = [];
        for (var key in obj) {
            if (has(obj, key)) keys.push(key);
        }
        keys.sort();
        for (var i = 0; i < keys.length; i++) {
            var key = keys[i];
            if (/[^\w$]/.test(key)) {
                xs.push(inspect(key) + ': ' + inspect(obj[key], obj));
            }
            else xs.push(key + ': ' + inspect(obj[key], obj));
        }
        if (xs.length === 0) return '{}';
        return '{ ' + xs.join(', ') + ' }';
    }
    else return String(obj);
};

function quote (s) {
    return String(s).replace(/"/g, '&quot;');
}

function isArray (obj) { return toStr(obj) === '[object Array]' }
function isDate (obj) { return toStr(obj) === '[object Date]' }
function isRegExp (obj) { return toStr(obj) === '[object RegExp]' }
function isError (obj) { return toStr(obj) === '[object Error]' }
function isSymbol (obj) { return toStr(obj) === '[object Symbol]' }

var hasOwn = Object.prototype.hasOwnProperty || function (key) { return key in this; };
function has (obj, key) {
    return hasOwn.call(obj, key);
}

function toStr (obj) {
    return Object.prototype.toString.call(obj);
}

function nameOf (f) {
    if (f.name) return f.name;
    var m = f.toString().match(/^function\s*([\w$]+)/);
    if (m) return m[1];
}

function indexOf (xs, x) {
    if (xs.indexOf) return xs.indexOf(x);
    for (var i = 0, l = xs.length; i < l; i++) {
        if (xs[i] === x) return i;
    }
    return -1;
}

function isMap (x) {
    if (!mapSize) {
        return false;
    }
    try {
        mapSize.call(x);
        return true;
    } catch (e) {}
    return false;
}

function isSet (x) {
    if (!setSize) {
        return false;
    }
    try {
        setSize.call(x);
        return true;
    } catch (e) {}
    return false;
}

function isElement (x) {
    if (!x || typeof x !== 'object') return false;
    if (typeof HTMLElement !== 'undefined' && x instanceof HTMLElement) {
        return true;
    }
    return typeof x.nodeName === 'string'
        && typeof x.getAttribute === 'function'
    ;
}

function inspectString (str) {
    var s = str.replace(/(['\\])/g, '\\$1').replace(/[\x00-\x1f]/g, lowbyte);
    return "'" + s + "'";
    
    function lowbyte (c) {
        var n = c.charCodeAt(0);
        var x = { 8: 'b', 9: 't', 10: 'n', 12: 'f', 13: 'r' }[n];
        if (x) return '\\' + x;
        return '\\x' + (n < 0x10 ? '0' : '') + n.toString(16);
    }
}

},{}],252:[function(require,module,exports){
(function (process){(function (){
var Stream = require('stream')

// through
//
// a stream that does nothing but re-emit the input.
// useful for aggregating a series of changing but not ending streams into one stream)

exports = module.exports = through
through.through = through

//create a readable writable stream.

function through (write, end, opts) {
  write = write || function (data) { this.queue(data) }
  end = end || function () { this.queue(null) }

  var ended = false, destroyed = false, buffer = [], _ended = false
  var stream = new Stream()
  stream.readable = stream.writable = true
  stream.paused = false

//  stream.autoPause   = !(opts && opts.autoPause   === false)
  stream.autoDestroy = !(opts && opts.autoDestroy === false)

  stream.write = function (data) {
    write.call(this, data)
    return !stream.paused
  }

  function drain() {
    while(buffer.length && !stream.paused) {
      var data = buffer.shift()
      if(null === data)
        return stream.emit('end')
      else
        stream.emit('data', data)
    }
  }

  stream.queue = stream.push = function (data) {
//    console.error(ended)
    if(_ended) return stream
    if(data === null) _ended = true
    buffer.push(data)
    drain()
    return stream
  }

  //this will be registered as the first 'end' listener
  //must call destroy next tick, to make sure we're after any
  //stream piped from here.
  //this is only a problem if end is not emitted synchronously.
  //a nicer way to do this is to make sure this is the last listener for 'end'

  stream.on('end', function () {
    stream.readable = false
    if(!stream.writable && stream.autoDestroy)
      process.nextTick(function () {
        stream.destroy()
      })
  })

  function _end () {
    stream.writable = false
    end.call(stream)
    if(!stream.readable && stream.autoDestroy)
      stream.destroy()
  }

  stream.end = function (data) {
    if(ended) return
    ended = true
    if(arguments.length) stream.write(data)
    _end() // will emit or queue
    return stream
  }

  stream.destroy = function () {
    if(destroyed) return
    destroyed = true
    ended = true
    buffer.length = 0
    stream.writable = stream.readable = false
    stream.emit('close')
    return stream
  }

  stream.pause = function () {
    if(stream.paused) return
    stream.paused = true
    return stream
  }

  stream.resume = function () {
    if(stream.paused) {
      stream.paused = false
      stream.emit('resume')
    }
    drain()
    //may have become paused again,
    //as drain emits 'data'.
    if(!stream.paused)
      stream.emit('drain')
    return stream
  }
  return stream
}


}).call(this)}).call(this,require('_process'))
},{"_process":236,"stream":129}],253:[function(require,module,exports){
(function (setImmediate,clearImmediate){(function (){
var nextTick = require('process/browser.js').nextTick;
var apply = Function.prototype.apply;
var slice = Array.prototype.slice;
var immediateIds = {};
var nextImmediateId = 0;

// DOM APIs, for completeness

exports.setTimeout = function() {
  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);
};
exports.setInterval = function() {
  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);
};
exports.clearTimeout =
exports.clearInterval = function(timeout) { timeout.close(); };

function Timeout(id, clearFn) {
  this._id = id;
  this._clearFn = clearFn;
}
Timeout.prototype.unref = Timeout.prototype.ref = function() {};
Timeout.prototype.close = function() {
  this._clearFn.call(window, this._id);
};

// Does not start the time, just sets up the members needed.
exports.enroll = function(item, msecs) {
  clearTimeout(item._idleTimeoutId);
  item._idleTimeout = msecs;
};

exports.unenroll = function(item) {
  clearTimeout(item._idleTimeoutId);
  item._idleTimeout = -1;
};

exports._unrefActive = exports.active = function(item) {
  clearTimeout(item._idleTimeoutId);

  var msecs = item._idleTimeout;
  if (msecs >= 0) {
    item._idleTimeoutId = setTimeout(function onTimeout() {
      if (item._onTimeout)
        item._onTimeout();
    }, msecs);
  }
};

// That's not how node.js implements it but the exposed api is the same.
exports.setImmediate = typeof setImmediate === "function" ? setImmediate : function(fn) {
  var id = nextImmediateId++;
  var args = arguments.length < 2 ? false : slice.call(arguments, 1);

  immediateIds[id] = true;

  nextTick(function onNextTick() {
    if (immediateIds[id]) {
      // fn.call() is faster so we optimize for the common use-case
      // @see http://jsperf.com/call-apply-segu
      if (args) {
        fn.apply(null, args);
      } else {
        fn.call(null);
      }
      // Prevent ids from leaking
      exports.clearImmediate(id);
    }
  });

  return id;
};

exports.clearImmediate = typeof clearImmediate === "function" ? clearImmediate : function(id) {
  delete immediateIds[id];
};
}).call(this)}).call(this,require("timers").setImmediate,require("timers").clearImmediate)
},{"process/browser.js":236,"timers":253}],254:[function(require,module,exports){
(function (global){(function (){

/**
 * Module exports.
 */

module.exports = deprecate;

/**
 * Mark that a method should not be used.
 * Returns a modified function which warns once by default.
 *
 * If `localStorage.noDeprecation = true` is set, then it is a no-op.
 *
 * If `localStorage.throwDeprecation = true` is set, then deprecated functions
 * will throw an Error when invoked.
 *
 * If `localStorage.traceDeprecation = true` is set, then deprecated functions
 * will invoke `console.trace()` instead of `console.error()`.
 *
 * @param {Function} fn - the function to deprecate
 * @param {String} msg - the string to print to the console when `fn` is invoked
 * @returns {Function} a new "deprecated" version of `fn`
 * @api public
 */

function deprecate (fn, msg) {
  if (config('noDeprecation')) {
    return fn;
  }

  var warned = false;
  function deprecated() {
    if (!warned) {
      if (config('throwDeprecation')) {
        throw new Error(msg);
      } else if (config('traceDeprecation')) {
        console.trace(msg);
      } else {
        console.warn(msg);
      }
      warned = true;
    }
    return fn.apply(this, arguments);
  }

  return deprecated;
}

/**
 * Checks `localStorage` for boolean values for the given `name`.
 *
 * @param {String} name
 * @returns {Boolean}
 * @api private
 */

function config (name) {
  // accessing global.localStorage can trigger a DOMException in sandboxed iframes
  try {
    if (!global.localStorage) return false;
  } catch (_) {
    return false;
  }
  var val = global.localStorage[name];
  if (null == val) return false;
  return String(val).toLowerCase() === 'true';
}

}).call(this)}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}]},{},[62,63]);
