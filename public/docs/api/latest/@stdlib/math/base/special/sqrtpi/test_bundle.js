// modules are defined as an array
// [ module function, map of requireuires ]
//
// map of requireuires is short require name -> numeric require
//
// anything defined in a previous bundle is accessed via the
// orig method which is the requireuire for previous bundles

(function outer (modules, cache, entry) {
    // Save the require from previous bundle to this closure if any
    var previousRequire = typeof require == "function" && require;

    function findProxyquireifyName() {
        var deps = Object.keys(modules)
            .map(function (k) { return modules[k][1]; });

        for (var i = 0; i < deps.length; i++) {
            var pq = deps[i]['proxyquireify'];
            if (pq) return pq;
        }
    }

    var proxyquireifyName = findProxyquireifyName();

    function newRequire(name, jumped){
        // Find the proxyquireify module, if present
        var pqify = (proxyquireifyName != null) && cache[proxyquireifyName];

        // Proxyquireify provides a separate cache that is used when inside
        // a proxyquire call, and is set to null outside a proxyquire call.
        // This allows the regular caching semantics to work correctly both
        // inside and outside proxyquire calls while keeping the cached
        // modules isolated.
        // When switching from one proxyquire call to another, it clears
        // the cache to prevent contamination between different sets
        // of stubs.
        var currentCache = (pqify && pqify.exports._cache) || cache;

        if(!currentCache[name]) {
            if(!modules[name]) {
                // if we cannot find the the module within our internal map or
                // cache jump to the current global require ie. the last bundle
                // that was added to the page.
                var currentRequire = typeof require == "function" && require;
                if (!jumped && currentRequire) return currentRequire(name, true);

                // If there are other bundles on this page the require from the
                // previous one is saved to 'previousRequire'. Repeat this as
                // many times as there are bundles until the module is found or
                // we exhaust the require chain.
                if (previousRequire) return previousRequire(name, true);
                var err = new Error('Cannot find module \'' + name + '\'');
                err.code = 'MODULE_NOT_FOUND';
                throw err;
            }
            var m = currentCache[name] = {exports:{}};

            // The normal browserify require function
            var req = function(x){
                var id = modules[name][1][x];
                return newRequire(id ? id : x);
            };

            // The require function substituted for proxyquireify
            var moduleRequire = function(x){
                var pqify = (proxyquireifyName != null) && cache[proxyquireifyName];
                // Only try to use the proxyquireify version if it has been `require`d
                if (pqify && pqify.exports._proxy) {
                    return pqify.exports._proxy(req, x);
                } else {
                    return req(x);
                }
            };

            modules[name][0].call(m.exports,moduleRequire,m,m.exports,outer,modules,currentCache,entry);
        }
        return currentCache[name].exports;
    }
    for(var i=0;i<entry.length;i++) newRequire(entry[i]);

    // Override the current require with this new one
    return newRequire;
})
({1:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Test whether an object has a specified property.
*
* @module @stdlib/assert/has-own-property
*
* @example
* var hasOwnProp = require( '@stdlib/assert/has-own-property' );
*
* var beep = {
*     'boop': true
* };
*
* var bool = hasOwnProp( beep, 'boop' );
* // returns true
*
* bool = hasOwnProp( beep, 'bop' );
* // returns false
*/

// MODULES //

var main = require( './main.js' );


// EXPORTS //

module.exports = main;

},{"./main.js":2}],2:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// FUNCTIONS //

var has = Object.prototype.hasOwnProperty;


// MAIN //

/**
* Tests if an object has a specified property.
*
* @param {*} value - value to test
* @param {*} property - property to test
* @returns {boolean} boolean indicating if an object has a specified property
*
* @example
* var beep = {
*     'boop': true
* };
*
* var bool = hasOwnProp( beep, 'boop' );
* // returns true
*
* @example
* var beep = {
*     'boop': true
* };
*
* var bool = hasOwnProp( beep, 'bap' );
* // returns false
*/
function hasOwnProp( value, property ) {
	if (
		value === void 0 ||
		value === null
	) {
		return false;
	}
	return has.call( value, property );
}


// EXPORTS //

module.exports = hasOwnProp;

},{}],3:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Test for native `Symbol` support.
*
* @module @stdlib/assert/has-symbol-support
*
* @example
* var hasSymbolSupport = require( '@stdlib/assert/has-symbol-support' );
*
* var bool = hasSymbolSupport();
* // returns <boolean>
*/

// MODULES //

var main = require( './main.js' );


// EXPORTS //

module.exports = main;

},{"./main.js":4}],4:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MAIN //

/**
* Tests for native `Symbol` support.
*
* @returns {boolean} boolean indicating if an environment has `Symbol` support
*
* @example
* var bool = hasSymbolSupport();
* // returns <boolean>
*/
function hasSymbolSupport() {
	return (
		typeof Symbol === 'function' &&
		typeof Symbol( 'foo' ) === 'symbol'
	);
}


// EXPORTS //

module.exports = hasSymbolSupport;

},{}],5:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Test for native `toStringTag` support.
*
* @module @stdlib/assert/has-tostringtag-support
*
* @example
* var hasToStringTagSupport = require( '@stdlib/assert/has-tostringtag-support' );
*
* var bool = hasToStringTagSupport();
* // returns <boolean>
*/

// MODULES //

var main = require( './main.js' );


// EXPORTS //

module.exports = main;

},{"./main.js":6}],6:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var hasSymbols = require( '@stdlib/assert/has-symbol-support' );


// VARIABLES //

var FLG = hasSymbols();


// MAIN //

/**
* Tests for native `toStringTag` support.
*
* @returns {boolean} boolean indicating if an environment has `toStringTag` support
*
* @example
* var bool = hasToStringTagSupport();
* // returns <boolean>
*/
function hasToStringTagSupport() {
	return ( FLG && typeof Symbol.toStringTag === 'symbol' );
}


// EXPORTS //

module.exports = hasToStringTagSupport;

},{"@stdlib/assert/has-symbol-support":3}],7:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Test if a value is an array.
*
* @module @stdlib/assert/is-array
*
* @example
* var isArray = require( '@stdlib/assert/is-array' );
*
* var bool = isArray( [] );
* // returns true
*
* bool = isArray( {} );
* // returns false
*/

// MODULES //

var main = require( './main.js' );


// EXPORTS //

module.exports = main;

},{"./main.js":8}],8:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var nativeClass = require( '@stdlib/utils/native-class' );


// VARIABLES //

var f;


// FUNCTIONS //

/**
* Tests if a value is an array.
*
* @param {*} value - value to test
* @returns {boolean} boolean indicating whether value is an array
*
* @example
* var bool = isArray( [] );
* // returns true
*
* @example
* var bool = isArray( {} );
* // returns false
*/
function isArray( value ) {
	return ( nativeClass( value ) === '[object Array]' );
}


// MAIN //

if ( Array.isArray ) {
	f = Array.isArray;
} else {
	f = isArray;
}


// EXPORTS //

module.exports = f;

},{"@stdlib/utils/native-class":95}],9:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Test if a value is a boolean.
*
* @module @stdlib/assert/is-boolean
*
* @example
* var Boolean = require( '@stdlib/boolean/ctor' );
* var isBoolean = require( '@stdlib/assert/is-boolean' );
*
* var bool = isBoolean( false );
* // returns true
*
* bool = isBoolean( new Boolean( false ) );
* // returns true
*
* @example
* var Boolean = require( '@stdlib/boolean/ctor' );
* var isBoolean = require( '@stdlib/assert/is-boolean' ).isPrimitive;
*
* var bool = isBoolean( false );
* // returns true
*
* bool = isBoolean( new Boolean( true ) );
* // returns false
*
* @example
* var Boolean = require( '@stdlib/boolean/ctor' );
* var isBoolean = require( '@stdlib/assert/is-boolean' ).isObject;
*
* var bool = isBoolean( true );
* // returns false
*
* bool = isBoolean( new Boolean( false ) );
* // returns true
*/

// MODULES //

var setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );
var main = require( './main.js' );
var isPrimitive = require( './primitive.js' );
var isObject = require( './object.js' );


// MAIN //

setReadOnly( main, 'isPrimitive', isPrimitive );
setReadOnly( main, 'isObject', isObject );


// EXPORTS //

module.exports = main;

},{"./main.js":10,"./object.js":11,"./primitive.js":12,"@stdlib/utils/define-nonenumerable-read-only-property":77}],10:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var isPrimitive = require( './primitive.js' );
var isObject = require( './object.js' );


// MAIN //

/**
* Tests if a value is a boolean.
*
* @param {*} value - value to test
* @returns {boolean} boolean indicating whether value is a boolean
*
* @example
* var bool = isBoolean( false );
* // returns true
*
* @example
* var bool = isBoolean( true );
* // returns true
*
* @example
* var Boolean = require( '@stdlib/boolean/ctor' );
*
* var bool = isBoolean( new Boolean( false ) );
* // returns true
*
* @example
* var Boolean = require( '@stdlib/boolean/ctor' );
*
* var bool = isBoolean( new Boolean( true ) );
* // returns true
*/
function isBoolean( value ) {
	return ( isPrimitive( value ) || isObject( value ) );
}


// EXPORTS //

module.exports = isBoolean;

},{"./object.js":11,"./primitive.js":12}],11:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var hasToStringTag = require( '@stdlib/assert/has-tostringtag-support' );
var nativeClass = require( '@stdlib/utils/native-class' );
var Boolean = require( '@stdlib/boolean/ctor' );
var test = require( './try2serialize.js' );


// VARIABLES //

var FLG = hasToStringTag();


// MAIN //

/**
* Tests if a value is a boolean object.
*
* @param {*} value - value to test
* @returns {boolean} boolean indicating if a value is a boolean object
*
* @example
* var bool = isBoolean( true );
* // returns false
*
* @example
* var Boolean = require( '@stdlib/boolean/ctor' );
*
* var bool = isBoolean( new Boolean( false ) );
* // returns true
*/
function isBoolean( value ) {
	if ( typeof value === 'object' ) {
		if ( value instanceof Boolean ) {
			return true;
		}
		if ( FLG ) {
			return test( value );
		}
		return ( nativeClass( value ) === '[object Boolean]' );
	}
	return false;
}


// EXPORTS //

module.exports = isBoolean;

},{"./try2serialize.js":14,"@stdlib/assert/has-tostringtag-support":5,"@stdlib/boolean/ctor":25,"@stdlib/utils/native-class":95}],12:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Tests if a value is a boolean primitive.
*
* @param {*} value - value to test
* @returns {boolean} boolean indicating if a value is a boolean primitive
*
* @example
* var bool = isBoolean( true );
* // returns true
*
* @example
* var bool = isBoolean( false );
* // returns true
*
* @example
* var Boolean = require( '@stdlib/boolean/ctor' );
*
* var bool = isBoolean( new Boolean( true ) );
* // returns false
*/
function isBoolean( value ) {
	return ( typeof value === 'boolean' );
}


// EXPORTS //

module.exports = isBoolean;

},{}],13:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// eslint-disable-next-line stdlib/no-redeclare
var toString = Boolean.prototype.toString; // non-generic


// EXPORTS //

module.exports = toString;

},{}],14:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var toString = require( './tostring.js' ); // eslint-disable-line stdlib/no-redeclare


// MAIN //

/**
* Attempts to serialize a value to a string.
*
* @private
* @param {*} value - value to test
* @returns {boolean} boolean indicating if a value can be serialized
*/
function test( value ) {
	try {
		toString.call( value );
		return true;
	} catch ( err ) { // eslint-disable-line no-unused-vars
		return false;
	}
}


// EXPORTS //

module.exports = test;

},{"./tostring.js":13}],15:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Test if a value is a Buffer instance.
*
* @module @stdlib/assert/is-buffer
*
* @example
* var isBuffer = require( '@stdlib/assert/is-buffer' );
*
* var v = isBuffer( new Buffer( 'beep' ) );
* // returns true
*
* v = isBuffer( {} );
* // returns false
*/

// MODULES //

var main = require( './main.js' );


// EXPORTS //

module.exports = main;

},{"./main.js":16}],16:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var isObjectLike = require( '@stdlib/assert/is-object-like' );


// MAIN //

/**
* Tests if a value is a Buffer instance.
*
* @param {*} value - value to validate
* @returns {boolean} boolean indicating if a value is a Buffer instance
*
* @example
* var v = isBuffer( new Buffer( 'beep' ) );
* // returns true
*
* @example
* var v = isBuffer( new Buffer( [1,2,3,4] ) );
* // returns true
*
* @example
* var v = isBuffer( {} );
* // returns false
*
* @example
* var v = isBuffer( [] );
* // returns false
*/
function isBuffer( value ) {
	return (
		isObjectLike( value ) &&
		(
			// eslint-disable-next-line no-underscore-dangle
			value._isBuffer || // for envs missing Object.prototype.constructor (e.g., Safari 5-7)
			(
				value.constructor &&

				// WARNING: `typeof` is not a foolproof check, as certain envs consider RegExp and NodeList instances to be functions
				typeof value.constructor.isBuffer === 'function' &&
				value.constructor.isBuffer( value )
			)
		)
	);
}


// EXPORTS //

module.exports = isBuffer;

},{"@stdlib/assert/is-object-like":21}],17:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Test if a value is an `Error` object.
*
* @module @stdlib/assert/is-error
*
* @example
* var isError = require( '@stdlib/assert/is-error' );
*
* var bool = isError( new Error( 'beep' ) );
* // returns true
*
* bool = isError( {} );
* // returns false
*/

// MODULES //

var main = require( './main.js' );


// EXPORTS //

module.exports = main;

},{"./main.js":18}],18:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var getPrototypeOf = require( '@stdlib/utils/get-prototype-of' );
var nativeClass = require( '@stdlib/utils/native-class' );


// MAIN //

/**
* Tests if a value is an `Error` object.
*
* @param {*} value - value to test
* @returns {boolean} boolean indicating whether a value is an `Error` object
*
* @example
* var bool = isError( new Error( 'beep' ) );
* // returns true
*
* @example
* var bool = isError( {} );
* // returns false
*/
function isError( value ) {
	if ( typeof value !== 'object' || value === null ) {
		return false;
	}
	// Check for `Error` objects from the same realm (same Node.js `vm` or same `Window` object)...
	if ( value instanceof Error ) {
		return true;
	}
	// Walk the prototype tree until we find an object having the desired native class...
	while ( value ) {
		if ( nativeClass( value ) === '[object Error]' ) {
			return true;
		}
		value = getPrototypeOf( value );
	}
	return false;
}


// EXPORTS //

module.exports = isError;

},{"@stdlib/utils/get-prototype-of":85,"@stdlib/utils/native-class":95}],19:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Test if a value is a function.
*
* @module @stdlib/assert/is-function
*
* @example
* var isFunction = require( '@stdlib/assert/is-function' );
*
* function beep() {
*     return 'beep';
* }
*
* var bool = isFunction( beep );
* // returns true
*/

// MODULES //

var main = require( './main.js' );


// EXPORTS //

module.exports = main;

},{"./main.js":20}],20:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var typeOf = require( '@stdlib/utils/type-of' );


// MAIN //

/**
* Tests if a value is a function.
*
* @param {*} value - value to test
* @returns {boolean} boolean indicating whether value is a function
*
* @example
* function beep() {
*     return 'beep';
* }
*
* var bool = isFunction( beep );
* // returns true
*/
function isFunction( value ) {
	// Note: cannot use `typeof` directly, as various browser engines incorrectly return `'function'` when operating on non-function objects, such as regular expressions and NodeLists.
	return ( typeOf( value ) === 'function' );
}


// EXPORTS //

module.exports = isFunction;

},{"@stdlib/utils/type-of":106}],21:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Test if a value is object-like.
*
* @module @stdlib/assert/is-object-like
*
* @example
* var isObjectLike = require( '@stdlib/assert/is-object-like' );
*
* var bool = isObjectLike( {} );
* // returns true
*
* bool = isObjectLike( [] );
* // returns true
*
* bool = isObjectLike( null );
* // returns false
*
* @example
* var isObjectLike = require( '@stdlib/assert/is-object-like' ).isObjectLikeArray;
*
* var bool = isObjectLike( [ {}, [] ] );
* // returns true
*
* bool = isObjectLike( [ {}, '3.0' ] );
* // returns false
*/

// MODULES //

var setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );
var arrayfun = require( '@stdlib/assert/tools/array-function' );
var main = require( './main.js' );


// VARIABLES //

var isObjectLikeArray = arrayfun( main );


// MAIN //

setReadOnly( main, 'isObjectLikeArray', isObjectLikeArray );


// EXPORTS //

module.exports = main;

},{"./main.js":22,"@stdlib/assert/tools/array-function":23,"@stdlib/utils/define-nonenumerable-read-only-property":77}],22:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Tests if a value is object-like.
*
* @param {*} value - value to test
* @returns {boolean} boolean indicating whether a value is object-like
*
* @example
* var bool = isObjectLike( {} );
* // returns true
*
* @example
* var bool = isObjectLike( [] );
* // returns true
*
* @example
* var bool = isObjectLike( null );
* // returns false
*/
function isObjectLike( value ) {
	return (
		value !== null &&
		typeof value === 'object'
	);
}


// EXPORTS //

module.exports = isObjectLike;

},{}],23:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Return a function which tests if every element in an array passes a test condition.
*
* @module @stdlib/assert/tools/array-function
*
* @example
* var isOdd = require( '@stdlib/assert/is-odd' );
* var arrayfcn = require( '@stdlib/assert/tools/array-function' );
*
* var arr1 = [ 1, 3, 5, 7 ];
* var arr2 = [ 3, 5, 8 ];
*
* var validate = arrayfcn( isOdd );
*
* var bool = validate( arr1 );
* // returns true
*
* bool = validate( arr2 );
* // returns false
*/

// MODULES //

var main = require( './main.js' );


// EXPORTS //

module.exports = main;

},{"./main.js":24}],24:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var isArray = require( '@stdlib/assert/is-array' );
var format = require( '@stdlib/string/format' );


// MAIN //

/**
* Returns a function which tests if every element in an array passes a test condition.
*
* @param {Function} predicate - function to apply
* @throws {TypeError} must provide a function
* @returns {Function} an array function
*
* @example
* var isOdd = require( '@stdlib/assert/is-odd' );
*
* var arr1 = [ 1, 3, 5, 7 ];
* var arr2 = [ 3, 5, 8 ];
*
* var validate = arrayfcn( isOdd );
*
* var bool = validate( arr1 );
* // returns true
*
* bool = validate( arr2 );
* // returns false
*/
function arrayfcn( predicate ) {
	if ( typeof predicate !== 'function' ) {
		throw new TypeError( format( 'invalid argument. Must provide a function. Value: `%s`.', predicate ) );
	}
	return every;

	/**
	* Tests if every element in an array passes a test condition.
	*
	* @private
	* @param {*} value - value to test
	* @returns {boolean} boolean indicating whether a value is an array for which all elements pass a test condition
	*/
	function every( value ) {
		var len;
		var i;
		if ( !isArray( value ) ) {
			return false;
		}
		len = value.length;
		if ( len === 0 ) {
			return false;
		}
		for ( i = 0; i < len; i++ ) {
			if ( predicate( value[ i ] ) === false ) {
				return false;
			}
		}
		return true;
	}
}


// EXPORTS //

module.exports = arrayfcn;

},{"@stdlib/assert/is-array":7,"@stdlib/string/format":70}],25:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2022 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Boolean constructor.
*
* @module @stdlib/boolean/ctor
*
* @example
* var Boolean = require( '@stdlib/boolean/ctor' );
*
* var b = Boolean( null );
* // returns false
*
* b = Boolean( [] );
* // returns true
*
* b = Boolean( {} );
* // returns true
*
* @example
* var Boolean = require( '@stdlib/boolean/ctor' );
*
* var b = new Boolean( false );
* // returns <Boolean>
*/

// MODULES //

var main = require( './main.js' );


// EXPORTS //

module.exports = main;

},{"./main.js":26}],26:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2022 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MAIN //

/**
* Returns a boolean.
*
* @name Boolean
* @constructor
* @type {Function}
* @param {*} value - input value
* @returns {(boolean|Boolean)} boolean
*
* @example
* var b = Boolean( null );
* // returns false
*
* b = Boolean( [] );
* // returns true
*
* b = Boolean( {} );
* // returns true
*
* @example
* var b = new Boolean( false );
* // returns <Boolean>
*/
var Bool = Boolean; // eslint-disable-line stdlib/require-globals


// EXPORTS //

module.exports = Bool;

},{}],27:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Difference between one and the smallest value greater than one that can be represented as a double-precision floating-point number.
*
* @module @stdlib/constants/float64/eps
* @type {number}
*
* @example
* var FLOAT64_EPSILON = require( '@stdlib/constants/float64/eps' );
* // returns 2.220446049250313e-16
*/


// MAIN //

/**
* Difference between one and the smallest value greater than one that can be represented as a double-precision floating-point number.
*
* ## Notes
*
* The difference is
*
* ```tex
* \frac{1}{2^{52}}
* ```
*
* @constant
* @type {number}
* @default 2.220446049250313e-16
* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}
* @see [Machine Epsilon]{@link https://en.wikipedia.org/wiki/Machine_epsilon}
*/
var FLOAT64_EPSILON = 2.2204460492503130808472633361816E-16;


// EXPORTS //

module.exports = FLOAT64_EPSILON;

},{}],28:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Double-precision floating-point negative infinity.
*
* @module @stdlib/constants/float64/ninf
* @type {number}
*
* @example
* var FLOAT64_NINF = require( '@stdlib/constants/float64/ninf' );
* // returns -Infinity
*/

// MODULES //

var Number = require( '@stdlib/number/ctor' );


// MAIN //

/**
* Double-precision floating-point negative infinity.
*
* ## Notes
*
* Double-precision floating-point negative infinity has the bit sequence
*
* ```binarystring
* 1 11111111111 00000000000000000000 00000000000000000000000000000000
* ```
*
* @constant
* @type {number}
* @default Number.NEGATIVE_INFINITY
* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}
*/
var FLOAT64_NINF = Number.NEGATIVE_INFINITY;


// EXPORTS //

module.exports = FLOAT64_NINF;

},{"@stdlib/number/ctor":53}],29:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* The mathematical constant `π`.
*
* @module @stdlib/constants/float64/pi
* @type {number}
*
* @example
* var PI = require( '@stdlib/constants/float64/pi' );
* // returns 3.141592653589793
*/


// MAIN //

/**
* The mathematical constant `π`.
*
* @constant
* @type {number}
* @default 3.141592653589793
* @see [Wikipedia]{@link https://en.wikipedia.org/wiki/Pi}
*/
var PI = 3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679; // eslint-disable-line max-len


// EXPORTS //

module.exports = PI;

},{}],30:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Double-precision floating-point positive infinity.
*
* @module @stdlib/constants/float64/pinf
* @type {number}
*
* @example
* var FLOAT64_PINF = require( '@stdlib/constants/float64/pinf' );
* // returns Infinity
*/


// MAIN //

/**
* Double-precision floating-point positive infinity.
*
* ## Notes
*
* Double-precision floating-point positive infinity has the bit sequence
*
* ```binarystring
* 0 11111111111 00000000000000000000 00000000000000000000000000000000
* ```
*
* @constant
* @type {number}
* @default Number.POSITIVE_INFINITY
* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}
*/
var FLOAT64_PINF = Number.POSITIVE_INFINITY; // eslint-disable-line stdlib/require-globals


// EXPORTS //

module.exports = FLOAT64_PINF;

},{}],31:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Test if a double-precision floating-point numeric value is `NaN`.
*
* @module @stdlib/math/base/assert/is-nan
*
* @example
* var isnan = require( '@stdlib/math/base/assert/is-nan' );
*
* var bool = isnan( NaN );
* // returns true
*
* bool = isnan( 7.0 );
* // returns false
*/

// MODULES //

var main = require( './main.js' );


// EXPORTS //

module.exports = main;

},{"./main.js":32}],32:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MAIN //

/**
* Tests if a double-precision floating-point numeric value is `NaN`.
*
* @param {number} x - value to test
* @returns {boolean} boolean indicating whether the value is `NaN`
*
* @example
* var bool = isnan( NaN );
* // returns true
*
* @example
* var bool = isnan( 7.0 );
* // returns false
*/
function isnan( x ) {
	return ( x !== x );
}


// EXPORTS //

module.exports = isnan;

},{}],33:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Test if a double-precision floating-point numeric value is negative zero.
*
* @module @stdlib/math/base/assert/is-negative-zero
*
* @example
* var isNegativeZero = require( '@stdlib/math/base/assert/is-negative-zero' );
*
* var bool = isNegativeZero( -0.0 );
* // returns true
*
* bool = isNegativeZero( 0.0 );
* // returns false
*/

// MODULES //

var main = require( './main.js' );


// EXPORTS //

module.exports = main;

},{"./main.js":34}],34:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var NINF = require( '@stdlib/constants/float64/ninf' );


// MAIN //

/**
* Tests if a double-precision floating-point numeric value is negative zero.
*
* @param {number} x - value to test
* @returns {boolean} boolean indicating whether the value is negative zero
*
* @example
* var bool = isNegativeZero( -0.0 );
* // returns true
*
* @example
* var bool = isNegativeZero( 0.0 );
* // returns false
*/
function isNegativeZero( x ) {
	return (x === 0.0 && 1.0/x === NINF);
}


// EXPORTS //

module.exports = isNegativeZero;

},{"@stdlib/constants/float64/ninf":28}],35:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Test if a double-precision floating-point numeric value is positive zero.
*
* @module @stdlib/math/base/assert/is-positive-zero
*
* @example
* var isPositiveZero = require( '@stdlib/math/base/assert/is-positive-zero' );
*
* var bool = isPositiveZero( 0.0 );
* // returns true
*
* bool = isPositiveZero( -0.0 );
* // returns false
*/

// MODULES //

var main = require( './main.js' );


// EXPORTS //

module.exports = main;

},{"./main.js":36}],36:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var PINF = require( '@stdlib/constants/float64/pinf' );


// MAIN //

/**
* Tests if a double-precision floating-point numeric value is positive zero.
*
* @param {number} x - value to test
* @returns {boolean} boolean indicating whether the value is positive zero
*
* @example
* var bool = isPositiveZero( 0.0 );
* // returns true
*
* @example
* var bool = isPositiveZero( -0.0 );
* // returns false
*/
function isPositiveZero( x ) {
	return (x === 0.0 && 1.0/x === PINF);
}


// EXPORTS //

module.exports = isPositiveZero;

},{"@stdlib/constants/float64/pinf":30}],37:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Compute an absolute value of a double-precision floating-point number.
*
* @module @stdlib/math/base/special/abs
*
* @example
* var abs = require( '@stdlib/math/base/special/abs' );
*
* var v = abs( -1.0 );
* // returns 1.0
*
* v = abs( 2.0 );
* // returns 2.0
*
* v = abs( 0.0 );
* // returns 0.0
*
* v = abs( -0.0 );
* // returns 0.0
*
* v = abs( NaN );
* // returns NaN
*/

// MODULES //

var main = require( './main.js' );


// EXPORTS //

module.exports = main;

},{"./main.js":38}],38:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2021 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MAIN //

/**
* Computes the absolute value of a double-precision floating-point number `x`.
*
* @param {number} x - input value
* @returns {number} absolute value
*
* @example
* var v = abs( -1.0 );
* // returns 1.0
*
* @example
* var v = abs( 2.0 );
* // returns 2.0
*
* @example
* var v = abs( 0.0 );
* // returns 0.0
*
* @example
* var v = abs( -0.0 );
* // returns 0.0
*
* @example
* var v = abs( NaN );
* // returns NaN
*/
function abs( x ) {
	return Math.abs( x ); // eslint-disable-line stdlib/no-builtin-math
}


// EXPORTS //

module.exports = abs;

},{}],39:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Compute the principal square root of a double-precision floating-point number.
*
* @module @stdlib/math/base/special/sqrt
*
* @example
* var sqrt = require( '@stdlib/math/base/special/sqrt' );
*
* var v = sqrt( 4.0 );
* // returns 2.0
*
* v = sqrt( 9.0 );
* // returns 3.0
*
* v = sqrt( 0.0 );
* // returns 0.0
*
* v = sqrt( -4.0 );
* // returns NaN
*
* v = sqrt( NaN );
* // returns NaN
*/

// MODULES //

var main = require( './main.js' );


// EXPORTS //

module.exports = main;

},{"./main.js":40}],40:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MAIN //

/**
* Compute the principal square root of a double-precision floating-point number.
*
* @type {Function}
* @param {number} x - input value
* @returns {number} principal square root
*
* @example
* var v = sqrt( 4.0 );
* // returns 2.0
*
* v = sqrt( 9.0 );
* // returns 3.0
*
* v = sqrt( 0.0 );
* // returns 0.0
*
* v = sqrt( -4.0 );
* // returns NaN
*
* v = sqrt( NaN );
* // returns NaN
*/
var sqrt = Math.sqrt; // eslint-disable-line stdlib/no-builtin-math


// EXPORTS //

module.exports = sqrt;

},{}],41:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2022 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Compute the principal square root of the product of π and a positive double-precision floating-point number.
*
* @module @stdlib/math/base/special/sqrtpi
*
* @example
* var sqrtpi = require( '@stdlib/math/base/special/sqrtpi' );
*
* var v = sqrtpi( 4.0 );
* // returns ~3.5449
*
* v = sqrtpi( 10.0 );
* // returns ~5.60499
*
* v = sqrtpi( 0.0 );
* // returns 0.0
*
* v = sqrtpi( -4.0 );
* // returns NaN
*
* v = sqrtpi( NaN );
* // returns NaN
*/

// MODULES //

var main = require( './main.js' );


// EXPORTS //

module.exports = main;

},{"./main.js":42}],42:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2022 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var sqrt = require( '@stdlib/math/base/special/sqrt' );
var PI = require( '@stdlib/constants/float64/pi' );


// MAIN //

/**
* Computes the principal square root of the product of 𝛑 and a positive double-precision floating-point number.
*
* @param {number} x - input value
* @returns {number} result
*
* @example
* var v = sqrtpi( 4.0 );
* // returns ~3.5449
*
* v = sqrtpi( 10.0 );
* // returns ~5.60499
*
* v = sqrtpi( 0.0 );
* // returns 0.0
*
* v = sqrtpi( -4.0 );
* // returns NaN
*
* v = sqrtpi( NaN );
* // returns NaN
*/
function sqrtpi( x ) {
	return sqrt( x * PI );
}


// EXPORTS //

module.exports = sqrtpi;

},{"@stdlib/constants/float64/pi":29,"@stdlib/math/base/special/sqrt":39}],43:[function(require,module,exports){
module.exports={"expected":[1.772453850905516e150,1.8921674683014548e152,2.6758701943351653e152,3.27723433183596e152,3.7842104109836795e152,4.230866578306417e152,4.6346753470187345e152,5.006016294529634e152,5.351652334553244e152,5.676281025351208e152,5.983322642779272e152,6.275359226086433e152,6.554396767457788e152,6.822030530135003e152,7.079553949432623e152,7.328033002911493e152,7.568358557877196e152,7.801284178225145e152,8.027454042114409e152,8.247423959461035e152,8.461677465841209e152,8.67063833317697e152,8.874680426561334e152,9.074135564472454e152,9.269299855504558e152,9.460438857689943e152,9.647791817246202e152,9.831575179886272e152,1.0011985521692925e153,1.0189202012690773e153,1.0363388501076986e153,1.0534695287149394e153,1.0703260641595188e153,1.0869212111774874e153,1.1032667651098105e153,1.1193736599921386e153,1.1352520541150875e153,1.15091140495733e153,1.1663605350616014e153,1.1816076901567267e153,1.196660590612829e153,1.2115264771412032e153,1.226212151506624e153,1.2407240129016742e153,1.2550680905349971e153,1.2692500729042695e153,1.2832753341570246e153,1.2971489578857755e153,1.3108757586562058e153,1.3244603015269324e153,1.3379069197852078e153,1.3512197310939002e153,1.3644026522203048e153,1.3774594124961111e153,1.3903935661396242e153,1.403208503555616e153,1.4159074617146141e153,1.4284935337016583e153,1.4409696775143398e153,1.4533387241810184e153,1.465603385262343e153,1.4777662597923833e153,1.4898298407097031e153,1.5017965208234534e153,1.5136685983549238e153,1.5254482820909037e153,1.5371376961815811e153,1.5487388846124928e153,1.56025381537719e153,1.5716843843747408e153,1.5830324190539301e153,1.5942996818239874e153,1.605487873249872e153,1.6165986350485166e153,1.627633552900977e153,1.6385941590941261e153,1.6494819350043567e153,1.660298313434681e153,1.6710446808156795e153,1.681722379279858e153,1.6923327086182065e153,1.7028769281270347e153,1.713356258352505e153,1.723771882739716e153,1.7341249491926336e153,1.744416571550696e153,1.7546478309874648e153,1.764819777336299e153,1.7749334303476494e153,1.7849897808822336e153,1.7949897920440477e153,1.80493440025688e153,1.81482451628773e153,1.8246610262203013e153,1.834444792381513e153,1.8441766542237712e153,1.8538574291655526e153,1.86348791339269e153,1.8730688826225723e153,1.882601092833344e153,1.8920852809600396e153,1.9015221655594657e153,1.9109124474455365e153,1.9202568102966384e153,1.929555921236529e153,1.9388104313901553e153,1.9480209764157082e153,1.957188177014142e153,1.9663126394173104e153,1.9753949558558156e153,1.9844357050075795e153,1.993435452428109e153,2.002394750963353e153,2.0113141411460115e153,2.0201941515760925e153,2.0290352992864806e153,2.037838090094232e153,2.046603018938269e153,2.055330570204114e153,2.0640212180362627e153,2.0726754266387748e153,2.081293650564609e153,2.089876334994223e153,2.0984239160039175e153,2.10693682082438e153,2.115415468089868e153,2.123860268078436e153,2.1322716229436003e153,2.1406499269378133e153,2.148995566628092e153,2.1573089211041436e153,2.1655903621792962e153,2.1738402545845413e153,2.1820589561559774e153,2.1902468180159155e153,2.1984041847479214e153,2.2065313945660286e153,2.2146287794783652e153,2.222696665445414e153,2.2307353725331232e153,2.238745215061067e153,2.2467265017458514e153,2.2546795358399565e153,2.2626046152661784e153,2.270502032747855e153,2.278372075935024e153,2.2862150275266762e153,2.2940311653892437e153,2.3018207626714685e153,2.3095840879157852e153,2.317321405166344e153,2.325032974073798e153,2.3327190499969727e153,2.340379884101534e153,2.348015723455752e153,2.355626811123479e153,2.3632133862544234e153,2.370775684171834e153,2.378313936457666e153,2.385828371035328e153,2.3933192122500955e153,2.400786680947257e153,2.408230994548089e153,2.415652367123715e153,2.423051009466936e153,2.4304271291620877e153,2.437780930652998e153,2.445112615309104e153,2.4524223814897907e153,2.4597104246070076e153,2.4669769371862227e153,2.4742221089257618e153,2.481446126754594e153,2.4886491748885992e153,2.495831434885384e153,2.502993085697674e153,2.5101343037253394e153,2.5172552628660893e153,2.524356134564882e153,2.531437087862087e153,2.538498289440435e153,2.5455399036707995e153,2.552562092656841e153,2.559565016278548e153,2.5665488322347058e153,2.5735136960843362e153,2.5804597612871223e153,2.5873871792428594e153,2.594296099329961e153,2.6011866689430387e153,2.608059033529592e153,2.614913336625832e153,2.6217497198916548e153,2.6285683231448065e153,2.6353692843942443e153,2.6421527398727275e153,2.6489188240686593e153,2.655667669757197e153,2.662399408030649e153,2.6691141683281888e153,2.6758120784648927e153,2.6824932646601257e153,2.689157851565294e153,2.69580596229098e153,2.7024377184334754e153,2.709053240100729e153,2.7156526459377288e153,2.7222360531513276e153,2.7288035775345296e153,2.7353553334902535e153,2.7418914340545845e153,2.7484119909195266e153,2.7549171144552726e153,2.761406913732001e153,2.7678814965412134e153,2.774340969416621e153,2.7807854376546e153,2.7872150053342163e153,2.793629775336837e153,2.8000298493653374e153,2.8064153279629165e153,2.8127863105315226e153,2.8191428953499084e153,2.8254851795913202e153,2.831813259340828e153,2.8381272296123115e153,2.8444271843651023e153,2.8507132165202995e153,2.8569854179767602e153,2.8632438796267725e153,2.8694886913714264e153,2.8757199421356788e153,2.8819377198831278e153,2.8881421116305014e153,2.8943332034618648e153,2.900511080542557e153,2.9066758271328573e153,2.912827526601397e153,2.9189662614383095e153,2.9250921132681393e153,2.9312051628625043e153,2.937305490152519e153,2.9433931742409915e153,2.949468293414389e153,2.9555309251545853e153,2.9615811461503882e153,2.9676190323088607e153,2.973644658766428e153,2.9796580998997916e153,2.985659429336636e153,2.9916487199661488e153,2.9976260439493496e153,3.003591472729232e153,3.0095450770407287e153,3.015486926920496e153,3.0214170917165254e153,3.0273356400975887e153,3.0332426400625134e153,3.0391381589492994e153,3.045022263444073e153,3.05089501958989e153,3.056756492795382e153,3.0626067478432578e153,3.068445848898655e153,3.0742738595173517e153,3.0800908426538403e153,3.0858968606692567e153,3.0916919753391835e153,3.097476247861319e153,3.1032497388630138e153,3.10901250840869e153,3.114764616007127e153,3.1205061206186332e153,3.126237080662099e153,3.1319575540219273e153,3.1376675980548582e153,3.1433672695966774e153,3.149056624968818e153,3.1547357199848505e153,3.1604046099568743e153,3.1660633497018016e153,3.1717119935475416e153,3.177350595339087e153,3.1829792084445006e153,3.18859788576081e153,3.194206679719808e153,3.199805642293758e153,3.2053948250010167e153,3.2109742789115626e153,3.21654405465244e153,3.22210420241312e153,3.2276547719507766e153,3.2331958125954806e153,3.2387273732553158e153,3.2442495024214165e153,3.249762248172924e153,3.2552656581818736e153,3.2607597797180025e153,3.2662446596534873e153,3.27172034446761e153,3.2771868802513515e153,3.28264431271192e153,3.28809268717721e153,3.2935320486001916e153,3.2989624415632418e153,3.3043839102824048e153,3.3097964986115937e153,3.315200250046729e153,3.3205952077298168e153,3.3259814144529665e153,3.3313589126623516e153,3.336727744462112e153,3.3420879516182014e153,3.347439575562175e153,3.35278265739493e153,3.358117237890383e153,3.363443357499107e153,3.3687610563519036e153,3.374070374263335e153,3.3793713507352e153,3.3846640249599635e153,3.389948435824137e153,3.395224621911611e153,3.400492621506945e153,3.4057524725986036e153,3.411004212882158e153,3.416247879763434e153,3.4214835103616224e153,3.426711141512342e153,3.431930809770668e153,3.437142551414107e153,3.442346402445548e153,3.447542398596156e153,3.452730575328238e153,3.457910967838067e153,3.4630836110586654e153,3.4682485396625565e153,3.473405788064473e153,3.478555390424036e153,3.4836973806483894e153,3.488831792394809e153,3.493958659073273e153,3.499078013848996e153,3.5041898896449324e153,3.509294319144249e153,3.514391334792759e153,3.5194809688013314e153,3.524563253148266e153,3.529638219581635e153,3.5347058996216e153,3.539766324562693e153,3.544819525476072e153,3.549865533211749e153,3.554904378400784e153,3.559936091457457e153,3.5649607025814075e153,3.5699782417597524e153,3.57498873876917e153,3.5799922231779656e153,3.5849887243481034e153,3.5899782714372204e153,3.594960893400609e153,3.599936618993178e153,3.60490547677139e153,3.609867495095172e153,3.614822702129805e153,3.619771125847786e153,3.6247127940306776e153,3.629647734270918e153,3.634575973973627e153,3.639497540358376e153,3.644412460460945e153,3.6493207611350544e153,3.654222469054075e153,3.659117610712723e153,3.664006212428729e153,3.6688883003444856e153,3.673763900428684e153,3.678633038477922e153,3.6834957401182966e153,3.68835203080698e153,3.693201935833769e153,3.698045480322629e153,3.7028826892332084e153,3.7077135873623365e153,3.712538199345512e153,3.717356549658365e153,3.7221686626181085e153,3.726974562384965e153,3.731774272963591e153,3.736567818204464e153,3.7413552218052746e153,3.746136507312291e153,3.750911698121705e153,3.755680817480977e153,3.760443888490149e153,3.765200934103152e153,3.769951977129096e153,3.7746970402335475e153,3.779436145939793e153,3.78416931663008e153,3.7888965745468554e153,3.793617941793984e153,3.7983334403379535e153,3.803043092009067e153,3.807746918502622e153,3.812444941380077e153,3.817137182070206e153,3.821823661870234e153,3.826504401946969e153,3.831179423337918e153,3.835848746952386e153,3.8405123935725715e153,3.845170383854642e153,3.8498227383298026e153,3.8544694774053554e153,3.859110621365737e153,3.8637461903735564e153,3.8683762044706174e153,3.873000683578926e153,3.877619647501694e153,3.882233115924324e153,3.886841108415395e153,3.8914436444276236e153,3.8960407432988276e153,3.900632424252868e153,3.905218706400595e153,3.9097996087407684e153,3.91437515016098e153,3.918945349438561e153,3.9235102252414814e153,3.9280697961292375e153,3.932624080553736e153,3.9371730968601634e153,3.941716863287846e153,3.946255397971108e153,3.95078871894011e153,3.95531684412169e153,3.959839791340187e153,3.96435757831826e153,3.968870222677702e153,3.973377741940236e153,3.9778801535283105e153,3.98237747476589e153,3.9868697228792256e153,3.9913569149976304e153,3.995839068154239e153,4.000316199286759e153,4.004788325238226e153,4.009255462757733e153,4.01371762850117e153,4.0181748390319426e153,4.022627110821697e153,4.02707446025102e153,4.03151690361015e153,4.035954457099671e153,4.040387136831201e153,4.0448149588280746e153,4.04923793902602e153,4.0536560932738265e153,4.058069437334008e153,4.062477986883459e153,4.066881757514104e153,4.071280764733542e153,4.075675023965683e153,4.080064550551376e153,4.084449359749039e153,4.0888294667352736e153,4.093204886605481e153,4.097575634374467e153,4.101941724977044e153,4.106303173268625e153,4.110659994025814e153,4.115012201946993e153,4.119359811652894e153,4.12370283768718e153,4.1280412945170044e153,4.1323751965335815e153,4.136704558052736e153,4.1410293933154614e153,4.1453497164884584e153,4.149665541664687e153,4.153976882863891e153,4.158283754033139e153,4.162586169047347e153,4.166884141709797e153,4.171177685752661e153,4.1754668148375045e153,4.1797515425557996e153,4.184031882429424e153,4.188307847911164e153,4.192579452385199e153,4.196846709167599e153,4.201109631506804e153,4.205368232584105e153,4.2096225255141216e153,4.213872523345269e153,4.218118239060227e153,4.2223596855764055e153,4.226596875746398e153,4.230829822358439e153,4.235058538136855e153,4.239283035742506e153,4.243503327773236e153,4.2477194267643035e153,4.2519313451888184e153,4.2561390954581736e153,4.260342689922473e153,4.264542140870949e153,4.268737460532389e153,4.2729286610755436e153,4.277115754609544e153,4.2812987531843066e153,4.28547766879094e153,4.289652513362144e153,4.293823298772609e153,4.297990036839409e153,4.30215273932239e153,4.306311417924565e153,4.310466084292487e153,4.314616750016638e153,4.3187634266318024e153,4.322906125617441e153,4.3270448583980646e153,4.3311796363435974e153,4.3353104707697446e153,4.3394373729383536e153,4.343560354057768e153,4.34767942528319e153,4.3517945977170276e153,4.3559058824092415e153,4.3600132903576984e153,4.364116832508508e153,4.3682165197563666e153,4.3723123629448926e153,4.376404372866964e153,4.3804925602650455e153,4.384576935831522e153,4.388657510209024e153,4.392734293990749e153,4.3968072977207825e153,4.400876531894421e153,4.404942006958479e153,4.409003733311611e153,4.413061721304615e153,4.417115981240744e153,4.4211665233760095e153,4.425213357919484e153,4.429256495033604e153,4.4332959448344635e153,4.4373317173921125e153,4.4413638227308466e153,4.445392270829504e153,4.4494170716217446e153,4.453438234996344e153,4.4574557707974715e153,4.4614696888249744e153,4.4654799988346535e153,4.4694867105385454e153,4.473489833605191e153,4.47748937765991e153,4.481485352285072e153,4.485477767020363e153,4.489466631363053e153,4.493451954768254e153,4.497433746649191e153,4.501412016377451e153,4.5053867732832485e153,4.509358026655675e153,4.513325785742959e153,4.517290059752708e153,4.521250857852167e153,4.5252081891684595e153,4.529162062788835e153,4.5331124877609146e153,4.537059473092928e153,4.541003027753957e153,4.544943160674172e153,4.548879880745068e153,4.552813196819697e153,4.556743117712905e153,4.560669652201555e153,4.564592809024764e153,4.568512596884123e153,4.572429024443927e153,4.576342100331396e153,4.580251833136897e153,4.5841582314141634e153,4.588061303680516e153,4.591961058417078e153,4.5958575040689874e153,4.599750649045614e153,4.603640501720772e153,4.607527070432925e153,4.6114103634853996e153,4.615290389146589e153,4.619167155650161e153,4.623040671195261e153,4.6269109439467124e153,4.6307779820352205e153,4.6346417935575686e153,4.6385023865768194e153,4.642359769122507e153,4.646213949190837e153,4.650064934744873e153,4.653912733714736e153,4.6577573539977906e153,4.661598803458834e153,4.665437089930284e153,4.669272221212369e153,4.673104205073306e153,4.6769330492494916e153,4.680758761445678e153,4.684581349335158e153,4.6884008205599415e153,4.692217182730938e153,4.69603044342813e153,4.699840610200746e153,4.7036476905674444e153,4.707451692016476e153,4.7112526220058626e153,4.715050487963564e153,4.718845297287651e153,4.722637057346468e153,4.726425775478807e153,4.730211458994065e153,4.733994115172419e153,4.737773751264978e153,4.741550374493954e153,4.745323992052817e153,4.749094611106459e153,4.752862238791352e153,4.756626882215702e153,4.760388548459611e153,4.7641472445752274e153,4.7679029775869035e153,4.771655754491347e153,4.775405582257775e153,4.7791524678280616e153,4.782896418116891e153,4.7866374400119034e153,4.790375540373849e153,4.7941107260367244e153,4.79784300380793e153,4.801572380468405e153,4.805298862772779e153,4.809022457449506e153,4.812743171201016e153,4.816461010703849e153,4.820175982608797e153,4.82388809354104e153,4.8275973501002895e153,4.831303758860921e153,4.835007326372111e153,4.838708059157974e153,4.842405963717691e153,4.846101046525649e153,4.84979331403157e153,4.8534827726606435e153,4.8571694288136555e153,4.860853288867121e153,4.864534359173408e153,4.868212646060869e153,4.871888155833967e153,4.875560894773403e153,4.879230869136237e153,4.8828980851560156e153,4.886562549042897e153,4.890224266983769e153,4.893883245142376e153,4.897539489659435e153,4.9011930066527615e153,4.904843802217382e153,4.908491882425659e153,4.912137253327407e153,4.915779920950006e153,4.919419891298524e153,4.9230571703558256e153,4.926691764082694e153,4.930323678417937e153,4.933952919278507e153,4.9375794925596116e153,4.9412034041348225e153,4.944824659856191e153,4.948443265554352e153,4.9520592270386415e153,4.9556725500972e153,4.959283240497079e153,4.962891303984356e153,4.966496746284233e153,4.9700995731011466e153,4.9736997901188736e153,4.977297403000634e153,4.980892417389196e153,4.984484838906978e153,4.9880746731561514e153,4.991661925718746e153,4.995246602156745e153,4.9988287080121915e153,5.002408248807285e153,5.005985230044481e153,5.009559657206592e153,5.013131535756882e153,5.0167008711391684e153,5.0202676687779124e153,5.023831934078323e153,5.027393672426447e153,5.0309528891892644e153,5.0345095897147856e153,5.038063779332142e153,5.041615463351682e153,5.0451646470650614e153,5.048711335745336e153,5.052255534647054e153,5.0557972490063435e153,5.059336484041009e153,5.062873244950615e153,5.0664075369165776e153,5.069939365102253e153,5.073468734653024e153,5.076995650696393e153,5.08052011834206e153,5.084042142682017e153,5.087561728790628e153,5.091078881724719e153,5.094593606523659e153,5.098105908209447e153,5.101615791786794e153,5.105123262243208e153,5.108628324549072e153,5.112130983657735e153,5.115631244505581e153,5.119129112012125e153,5.122624591080082e153,5.126117686595452e153,5.1296084034275994e153,5.133096746429329e153,5.136582720436974e153,5.140066330270459e153,5.143547580733395e153,5.147026476613142e153,5.150503022680893e153,5.153977223691753e153,5.1574490843848065e153,5.1609186094832e153,5.164385803694214e153,5.167850671709339e153,5.171313218204347e153,5.174773447839366e153,5.178231365258958e153,5.1816869750921835e153,5.18514028195268e153,5.18859129043873e153,5.192040005133336e153,5.19548643060429e153,5.198930571404241e153,5.2023724320707725e153,5.205812017126463e153,5.209249331078963e153,5.21268437842106e153,5.216117163630748e153,5.2195476911712966e153,5.222975965491316e153,5.2264019910248266e153,5.229825772191327e153,5.233247313395855e153,5.236666619029062e153,5.24008369346727e153,5.243498541072546e153,5.246911166192759e153,5.250321573161646e153,5.253729766298883e153,5.2571357499101386e153,5.260539528287148e153,5.263941105707766e153,5.267340486436038e153,5.270737674722255e153,5.274132674803023e153,5.27752549090132e153,5.280916127226558e153,5.284304587974645e153,5.287690877328043e153,5.2910749994558326e153,5.294456958513769e153,5.297836758644343e153,5.30121440397684e153,5.304589898627401e153,5.307963246699075e153,5.311334452281886e153,5.314703519452881e153,5.318070452276199e153,5.3214352548031166e153,5.324797931072112e153,5.328158485108919e153,5.3315169209265855e153,5.334873242525527e153,5.3382274538935824e153,5.34157955900607e153,5.3449295618258446e153,5.348277466303346e153,5.351623276376661e153,5.354966995971572e153,5.3583086290016115e153,5.3616481793681194e153,5.364985650960288e153,5.368321047655228e153,5.371654373318005e153,5.374985631801706e153,5.378314826947481e153,5.381641962584601e153,5.3849670425305085e153,5.3882900705908644e153,5.391611050559603e153,5.394929986218984e153,5.3982468813396345e153,5.40156173968061e153,5.404874564989437e153,5.408185361002161e153,5.411494131443405e153,5.414800880026406e153,5.418105610453074e153,5.4214083264140324e153,5.424709031588674e153,5.428007729645202e153,5.4313044242406804e153,5.434599119021082e153,5.4378918176213335e153,5.441182523665364e153,5.4444712407661505e153,5.4477579725257655e153,5.45104272253542e153,5.454325494375514e153,5.457606291615677e153,5.460885117814818e153,5.464161976521165e153,5.467436871272316e153,5.47070980559528e153,5.47398078300652e153,5.477249807012001e153,5.4805168811072315e153,5.483782008777306e153,5.487045193496952e153,5.4903064387305675e153,5.4935657479322714e153,5.49682312454594e153,5.500078572005251e153,5.503332093733727e153,5.506583693144777e153,5.509833373641739e153,5.5130811386179176e153,5.516326991456631e153,5.519570935531247e153,5.5228129742052304e153,5.5260531108321744e153,5.5292913487558496e153,5.53252769131024e153,5.535762141819584e153,5.538994703598413e153,5.542225379951595e153,5.545454174174368e153,5.5486810895523866e153,5.551906129361752e153,5.5551292968690586e153,5.558350595331429e153,5.561570027996553e153,5.564787598102726e153,5.568003308878887e153,5.571217163544657e153,5.5744291653103724e153,5.577639317377131e153,5.58084762293682e153,5.58405408517216e153,5.5872587072567366e153,5.590461492355041e153,5.593662443622504e153,5.596861564205533e153,5.60005885724155e153,5.6032543258590244e153,5.606447973177509e153,5.6096398023076784e153,5.612829816351361e153,5.616018018401578e153,5.619204411542573e153,5.622388998849852e153,5.625571783390216e153,5.628752768221794e153,5.631931956394078e153,5.635109350947962e153,5.638284954915767e153,5.641458771321281e153,5.644630803179793e153,5.647801053498121e153,5.6509695252746515e153,5.654136221499367e153,5.6573011451538865e153,5.660464299211488e153,5.66362568663715e153,5.66678531038758e153,5.669943173411246e153,5.673099278648411e153,5.6762536290311636e153,5.679406227483449e153,5.682557076921103e153,5.6857061802518815e153,5.688853540375492e153,5.691999160183626e153,5.6951430425599874e153,5.698285190380327e153,5.70142560651247e153,5.704564293816349e153,5.707701255144031e153,5.710836493339753e153,5.713970011239944e153,5.717101811673266e153,5.720231897460632e153,5.723360271415246e153,5.726486936342624e153,5.729611895040628e153,5.732735150299496e153,5.735856704901868e153,5.738976561622816e153,5.7420947232298754e153,5.745211192483067e153,5.748325972134934e153,5.751439064930565e153,5.754550473607621e153,5.75766020089637e153,5.760768249519708e153,5.76387462219319e153,5.766979321625058e153,5.770082350516269e153,5.773183711560518e153,5.776283407444272e153,5.779381440846791e153,5.782477814440161e153,5.785572530889315e153,5.788665592852063e153,5.791757002979118e153,5.794846763914123e153,5.797934878293676e153,5.80102134874736e153,5.804106177897763e153,5.8071893683605065e153,5.810270922744277e153,5.813350843650842e153,5.8164291336750844e153,5.819505795405021e153,5.822580831421832e153,5.825654244299886e153,5.828726036606765e153,5.831796210903288e153,5.834864769743535e153,5.837931715674876e153,5.840997051237993e153,5.844060778966904e153,5.847122901388989e153,5.850183421025012e153,5.853242340389149e153,5.856299661989009e153,5.859355388325657e153,5.8624095218936424e153,5.865462065181017e153,5.868513020669367e153,5.871562390833826e153,5.8746101781431044e153,5.877656385059515e153,5.880701014038991e153,5.883744067531112e153,5.886785547979124e153,5.889825457819969e153,5.892863799484299e153,5.895900575396507e153,5.8989357879747424e153,5.9019694396309376e153,5.90500153277083e153,5.908032069793984e153,5.9110610530938106e153,5.9140884850575954e153,5.917114368066513e153,5.920138704495656e153,5.923161496714051e153,5.9261827470846834e153,5.929202457964519e153,5.932220631704524e153,5.9352372706496876e153,5.938252377139042e153,5.941265953505684e153,5.944278002076799e153,5.947288525173675e153,5.950297525111732e153,5.953305004200535e153,5.956310964743821e153,5.959315409039514e153,5.962318339379752e153,5.9653197580509e153,5.9683196673335774e153,5.971318069502671e153,5.9743149668273635e153,5.977310361571145e153,5.980304255991839e153,5.983296652341619e153,5.986287552867032e153,5.989276959809012e153,5.9922648754029075e153,5.995251301878491e153,5.998236241459991e153,6.001219696366099e153,6.004201668809995e153,6.007182160999371e153,6.0101611751364374e153,6.0131387134179545e153,6.016114778035244e153,6.019089371174213e153,6.022062495015368e153,6.025034151733835e153,6.028004343499379e153,6.030973072476423e153,6.033940340824065e153,6.036906150696097e153,6.039870504241022e153,6.042833403602074e153,6.0457948509172354e153,6.048754848319254e153,6.0517133979356634e153,6.054670501888797e153,6.057626162295811e153,6.060580381268695e153,6.063533160914297e153,6.066484503334338e153,6.0694344106254246e153,6.072382884879075e153,6.075329928181733e153,6.078275542614779e153,6.081219730254558e153,6.084162493172387e153,6.087103833434581e153,6.09004375310246e153,6.092982254232375e153,6.095919338875717e153,6.098855009078941e153,6.101789266883577e153,6.104722114326249e153,6.1076535534386915e153,6.110583586247766e153,6.113512214775476e153,6.116439441038983e153,6.119365267050627e153,6.122289694817939e153,6.1252127263436545e153,6.128134363625734e153,6.1310546086573814e153,6.133973463427051e153,6.13689092991847e153,6.1398070101106524e153,6.142721705977916e153,6.145635019489896e153,6.148546952611559e153,6.1514575073032264e153,6.1543666855205786e153,6.1572744892146794e153,6.160180920331985e153,6.1630859808143635e153,6.16598967259911e153,6.168891997618957e153,6.171792957802095e153,6.174692555072185e153,6.1775907913483716e153,6.1804876685453005e153,6.183383188573133e153,6.1862773533375616e153,6.1891701647398186e153,6.1920616246766995e153,6.1949517350405704e153,6.197840497719387e153,6.200727914596708e153,6.2036139875517044e153,6.2064987184591836e153,6.209382109189595e153,6.212264161609047e153,6.215144877579322e153,6.218024258957889e153,6.2209023075979215e153,6.223779025348303e153,6.22665441405365e153,6.22952847555432e153,6.232401211686428e153,6.23527262428186e153,6.238142715168283e153,6.241011486169165e153,6.243878939103783e153,6.246745075787238e153,6.2496098980304716e153,6.252473407640273e153,6.255335606419299e153,6.2581964961660824e153,6.261056078675047e153,6.263914355736522e153,6.266771329136753e153,6.2696270006579135e153,6.272481372078125e153,6.275334445171461e153,6.2781862217079655e153,6.2810367034536634e153,6.2838858921705765e153,6.28673378961673e153,6.289580397546172e153,6.292425717708981e153,6.295269751851283e153,6.29811250171526e153,6.300953969039162e153,6.3037941555573264e153,6.306633063000181e153,6.30947069309426e153,6.312307047562222e153,6.315142128122852e153,6.317975936491082e153,6.320808474377996e153,6.323639743490849e153,6.326469745533076e153,6.3292984822043014e153,6.332125955200355e153,6.3349521662132805e153,6.33777711693135e153,6.3406008090390765e153,6.34342324421722e153,6.3462444241428054e153,6.349064350489132e153,6.351883024925783e153,6.354700449118639e153,6.357516624729893e153,6.360331553418053e153,6.363145236837961e153,6.365957676640802e153,6.3687688744741155e153,6.371578831981805e153,6.374387550804151e153,6.377195032577824e153,6.3800012789358915e153,6.38280629150783e153,6.38561007191954e153,6.3884126217933514e153,6.3912139427480386e153,6.3940140363988305e153,6.396812904357418e153,6.3996105482319716e153,6.402406969627145e153,6.405202170144092e153,6.407996151380469e153,6.410788914930458e153,6.413580462384764e153,6.416370795330636e153,6.4191599153518695e153,6.4219478240288245e153,6.424734522938429e153,6.427520013654195e153,6.430304297746223e153,6.43308737678122e153,6.435869252322502e153,6.438649925930011e153,6.441429399160318e153,6.4442076735666424e153,6.446984750698851e153,6.4497606321034774e153,6.452535319323729e153,6.455308813899496e153,6.45808111736736e153,6.4608522312606075e153,6.46362215710924e153,6.466390896439979e153,6.46915845077628e153,6.471924821638342e153,6.4746900105431166e153,6.4774540190043146e153,6.480216848532423e153,6.482978500634705e153,6.48573897681522e153,6.4884982785748256e153,6.491256407411188e153,6.494013364818795e153,6.496769152288963e153,6.4995237713098485e153,6.502277223366451e153,6.505029509940631e153,6.507780632511116e153,6.510530592553506e153,6.5132793915402886e153,6.516027030940845e153,6.518773512221459e153,6.521518836845327e153,6.524263006272567e153,6.527006021960229e153,6.529747885362299e153,6.532488597929715e153,6.535228161110374e153,6.537966576349133e153,6.540703845087831e153,6.543439968765287e153,6.5461749488173164e153,6.5489087866767334e153,6.551641483773365e153,6.554373041534055e153,6.557103461382679e153,6.559832744740147e153,6.562560893024413e153,6.565287907650486e153,6.568013790030441e153,6.5707385415734176e153,6.57346216368564e153,6.5761846577704175e153,6.578906025228157e153,6.581626267456371e153,6.584345385849683e153,6.5870633817998395e153,6.589780256695717e153,6.59249601192333e153,6.5952106488658366e153,6.5979241689035545e153,6.600636573413961e153,6.603347863771704e153,6.606058041348611e153,6.608767107513699e153,6.611475063633176e153,6.614181911070457e153,6.616887651186165e153,6.619592285338146e153,6.62229581488147e153,6.6249982411684424e153,6.627699565548614e153,6.6303997893687845e153,6.633098913973012e153,6.635796940702622e153,6.638493870896214e153,6.6411897058896715e153,6.6438844470161636e153,6.646578095606159e153,6.649270652987433e153,6.651962120485072e153,6.654652499421483e153,6.6573417911164e153,6.660029996886894e153,6.662717118047379e153,6.665403155909619e153,6.6680881117827345e153,6.670771986973214e153,6.6734547827849185e153,6.6761365005190856e153,6.678817141474346e153,6.681496706946722e153,6.684175198229638e153,6.6868526166139284e153,6.689528963387846e153,6.6922042398370664e153,6.694878447244695e153,6.697551586891277e153,6.700223660054804e153,6.7028946680107186e153,6.705564612031924e153,6.708233493388792e153,6.710901313349162e153,6.713568073178363e153,6.716233774139206e153,6.718898417492e153,6.721562004494554e153,6.724224536402183e153,6.726886014467725e153,6.729546439941537e153,6.732205814071503e153,6.734864138103046e153,6.73752141327913e153,6.740177640840272e153,6.742832822024544e153,6.745486958067579e153,6.748140050202583e153,6.75079209966034e153,6.753443107669212e153,6.756093075455157e153,6.758742004241724e153,6.761389895250072e153,6.764036749698963e153,6.766682568804778e153,6.769327353781523e153,6.771971105840832e153,6.774613826191971e153,6.777255516041855e153,6.779896176595044e153,6.782535809053751e153,6.785174414617856e153,6.7878119944849e153,6.790448549850106e153,6.793084081906372e153,6.795718591844285e153,6.798352080852123e153,6.800984550115867e153,6.803616000819201e153,6.80624643414352e153,6.80887585126794e153,6.811504253369298e153,6.814131641622164e153,6.816758017198843e153,6.819383381269382e153,6.822007735001578e153,6.824631079560982e153,6.827253416110904e153,6.829874745812426e153,6.832495069824396e153,6.835114389303446e153,6.837732705403988e153,6.840350019278229e153,6.84296633207617e153,6.845581644945617e153,6.848195959032179e153,6.850809275479284e153,6.853421595428179e153,6.856032920017934e153,6.858643250385457e153,6.861252587665484e153,6.863860932990603e153,6.866468287491245e153,6.8690746522957e153,6.871680028530113e153,6.874284417318502e153,6.876887819782746e153,6.879490237042612e153,6.882091670215746e153,6.88469212041768e153,6.887291588761841e153,6.88989007635956e153,6.892487584320067e153,6.895084113750505e153,6.897679665755937e153,6.90027424143934e153,6.902867841901624e153,6.90546046824163e153,6.908052121556137e153,6.910642802939867e153,6.913232513485491e153,6.915821254283632e153,6.918409026422879e153,6.920995830989778e153,6.923581669068852e153,6.926166541742594e153,6.928750450091479e153,6.931333395193973e153,6.933915378126528e153,6.936496399963592e153,6.93907646177762e153,6.941655564639067e153,6.944233709616408e153,6.94681089777613e153,6.949387130182742e153,6.951962407898783e153,6.954536731984825e153,6.957110103499478e153,6.95968252349939e153,6.962253993039264e153,6.96482451317185e153,6.96739408494796e153,6.969962709416469e153,6.972530387624317e153,6.975097120616516e153,6.977662909436163e153,6.980227755124432e153,6.982791658720587e153,6.985354621261982e153,6.987916643784074e153,6.990477727320415e153,6.993037872902671e153,6.99559708156062e153,6.99815535432215e153,7.000712692213281e153,7.00326909625815e153,7.005824567479033e153,7.008379106896338e153,7.010932715528615e153,7.01348539439256e153,7.01603714450302e153,7.018587966872996e153,7.021137862513652e153,7.023686832434309e153,7.026234877642465e153,7.028781999143788e153,7.031328197942126e153,7.03387347503951e153,7.036417831436159e153,7.03896126813048e153,7.041503786119084e153,7.044045386396777e153,7.046586069956576e153,7.049125837789704e153,7.051664690885601e153,7.054202630231927e153,7.056739656814567e153,7.059275771617631e153,7.061810975623465e153,7.06434526981265e153,7.06687865516401e153,7.069411132654615e153,7.071942703259788e153,7.074473367953101e153,7.077003127706389e153,7.079531983489751e153,7.082059936271555e153,7.084586987018439e153,7.087113136695316e153,7.089638386265385e153,7.092162736690127e153,7.094686188929312e153,7.097208743941004e153,7.099730402681568e153,7.102251166105666e153,7.104771035166273e153,7.107290010814669e153,7.109808094000449e153,7.112325285671531e153,7.114841586774154e153,7.117356998252882e153,7.119871521050616e153,7.122385156108588e153,7.124897904366369e153,7.127409766761877e153,7.129920744231378e153,7.132430837709489e153,7.134940048129178e153,7.137448376421782e153,7.139955823516995e153,7.142462390342884e153,7.144968077825885e153,7.14747288689081e153,7.149976818460853e153,7.15247987345759e153,7.154982052800987e153,7.157483357409402e153,7.159983788199587e153,7.162483346086693e153,7.164982031984278e153,7.167479846804307e153,7.169976791457154e153,7.17247286685161e153,7.174968073894885e153,7.177462413492612e153,7.179955886548854e153,7.182448493966098e153,7.184940236645271e153,7.187431115485735e153,7.189921131385299e153,7.192410285240212e153,7.194898577945176e153,7.197386010393345e153,7.199872583476333e153,7.202358298084211e153,7.204843155105518e153,7.207327155427257e153,7.209810299934907e153,7.212292589512424e153,7.214774025042235e153,7.217254607405262e153,7.219734337480903e153,7.222213216147052e153,7.224691244280095e153,7.227168422754917e153,7.229644752444904e153,7.232120234221943e153,7.234594868956435e153,7.23706865751729e153,7.239541600771932e153,7.242013699586308e153,7.244484954824884e153,7.246955367350654e153,7.249424938025137e153,7.251893667708393e153,7.254361557259014e153,7.25682860753413e153,7.25929481938942e153,7.261760193679106e153,7.264224731255962e153,7.266688432971313e153,7.269151299675046e153,7.271613332215604e153,7.274074531440001e153,7.27653489819381e153,7.278994433321179e153,7.281453137664834e153,7.283911012066071e153,7.286368057364774e153,7.288824274399407e153,7.291279664007023e153,7.293734227023268e153,7.296187964282378e153,7.298640876617191e153,7.301092964859145e153,7.303544229838279e153,7.305994672383243e153,7.3084442933213e153,7.31089309347832e153,7.313341073678797e153,7.31578823474584e153,7.318234577501188e153,7.320680102765202e153,7.323124811356874e153,7.325568704093833e153,7.328011781792338e153,7.330454045267294e153,7.332895495332248e153,7.33533613279939e153,7.337775958479561e153,7.340214973182255e153,7.34265317771562e153,7.345090572886466e153,7.34752715950026e153,7.349962938361137e153,7.352397910271902e153,7.354832076034024e153,7.357265436447653e153,7.359697992311615e153,7.362129744423412e153,7.364560693579235e153,7.366990840573959e153,7.369420186201145e153,7.371848731253053e153,7.374276476520635e153,7.376703422793539e153,7.37912957086012e153,7.381554921507431e153,7.383979475521238e153,7.386403233686016e153,7.38882619678495e153,7.391248365599947e153,7.393669740911628e153,7.396090323499339e153,7.398510114141149e153,7.400929113613858e153,7.403347322692996e153,7.405764742152823e153,7.408181372766341e153,7.410597215305292e153,7.413012270540152e153,7.415426539240152e153,7.41784002217327e153,7.420252720106227e153,7.422664633804505e153,7.425075764032344e153,7.42748611155274e153,7.42989567712745e153,7.432304461517e153,7.434712465480681e153,7.437119689776557e153,7.439526135161465e153,7.441931802391018e153,7.444336692219605e153,7.446740805400405e153,7.449144142685373e153,7.451546704825256e153,7.45394849256959e153,7.456349506666704e153,7.458749747863721e153,7.461149216906565e153,7.46354791453996e153,7.465945841507432e153,7.468342998551315e153,7.47073938641275e153,7.473135005831696e153,7.475529857546918e153,7.477923942296001e153,7.480317260815353e153,7.482709813840199e153,7.485101602104594e153,7.487492626341416e153,7.489882887282378e153,7.492272385658022e153,7.494661122197726e153,7.497049097629707e153,7.499436312681023e153,7.501822768077573e153,7.504208464544105e153,7.506593402804212e153,7.50897758358034e153,7.511361007593789e153,7.513743675564712e153,7.516125588212124e153,7.518506746253897e153,7.520887150406772e153,7.523266801386352e153,7.525645699907109e153,7.528023846682388e153,7.530401242424405e153,7.532777887844254e153,7.53515378365191e153,7.537528930556221e153,7.539903329264927e153,7.54227698048465e153,7.544649884920903e153,7.547022043278085e153,7.549393456259494e153,7.551764124567317e153,7.554134048902648e153,7.556503229965475e153,7.55887166845469e153,7.56123936506809e153,7.563606320502385e153,7.56597253545319e153,7.568338010615031e153,7.570702746681355e153,7.573066744344523e153,7.575430004295814e153,7.577792527225432e153,7.580154313822506e153,7.582515364775088e153,7.584875680770161e153,7.58723526249364e153,7.589594110630374e153,7.591952225864148e153,7.594309608877685e153,7.596666260352647e153,7.59902218096964e153,7.601377371408218e153,7.60373183234688e153,7.606085564463074e153,7.608438568433203e153,7.610790844932624e153,7.613142394635645e153,7.615493218215541e153,7.617843316344543e153,7.620192689693848e153,7.622541338933615e153,7.624889264732978e153,7.627236467760033e153,7.629582948681853e153,7.631928708164483e153,7.634273746872949e153,7.63661806547125e153,7.638961664622372e153,7.641304544988278e153,7.643646707229923e153,7.645988152007247e153,7.648328879979175e153,7.650668891803634e153,7.653008188137536e153,7.655346769636794e153,7.657684636956319e153,7.66002179075002e153,7.662358231670814e153,7.664693960370618e153,7.667028977500355e153,7.669363283709964e153,7.671696879648388e153,7.674029765963587e153,7.676361943302535e153,7.678693412311224e153,7.681024173634667e153,7.683354227916897e153,7.68568357580097e153,7.68801221792897e153,7.690340154942007e153,7.69266738748022e153,7.694993916182787e153,7.69731974168791e153,7.699644864632833e153,7.701969285653837e153,7.704293005386246e153,7.706616024464419e153,7.708938343521764e153,7.711259963190737e153,7.713580884102839e153,7.715901106888622e153,7.718220632177692e153,7.720539460598704e153,7.722857592779376e153,7.72517502934648e153,7.727491770925849e153,7.72980781814238e153,7.73212317162003e153,7.734437831981824e153,7.736751799849859e153,7.739065075845297e153,7.741377660588372e153,7.743689554698396e153,7.74600075879375e153,7.748311273491902e153,7.75062109940939e153,7.75293023716184e153,7.75523868736396e153,7.757546450629542e153,7.759853527571467e153,7.762159918801704e153,7.764465624931313e153,7.766770646570448e153,7.769074984328356e153,7.771378638813385e153,7.773681610632977e153,7.775983900393676e153,7.778285508701129e153,7.780586436160085e153,7.782886683374404e153,7.78518625094705e153,7.787485139480094e153,7.789783349574725e153,7.792080881831242e153,7.79437773684906e153,7.796673915226712e153,7.798969417561845e153,7.801264244451234e153,7.80355839649077e153,7.805851874275473e153,7.80814467839949e153,7.810436809456089e153,7.812728268037672e153,7.815019054735775e153,7.817309170141064e153,7.819598614843342e153,7.821887389431546e153,7.824175494493754e153,7.826462930617183e153,7.828749698388194e153,7.83103579839229e153,7.83332123121412e153,7.835605997437481e153,7.83789009764532e153,7.840173532419732e153,7.842456302341966e153,7.844738407992426e153,7.847019849950672e153,7.849300628795422e153,7.85158074510455e153,7.853860199455098e153,7.856138992423261e153,7.85841712458441e153,7.860694596513074e153,7.862971408782953e153,7.865247561966916e153,7.867523056637002e153,7.869797893364427e153,7.872072072719578e153,7.874345595272019e153,7.876618461590491e153,7.87889067224292e153,7.881162227796407e153,7.883433128817238e153,7.885703375870885e153,7.887972969522005e153,7.890241910334443e153,7.892510198871235e153,7.894777835694605e153,7.897044821365973e153,7.89931115644595e153,7.901576841494346e153,7.90384187707017e153,7.906106263731625e153,7.90837000203612e153,7.910633092540262e153,7.912895535799865e153,7.915157332369948e153,7.91741848280474e153,7.91967898765767e153,7.921938847481389e153,7.924198062827751e153,7.926456634247829e153,7.928714562291907e153,7.930971847509489e153,7.933228490449295e153,7.935484491659266e153,7.937739851686565e153,7.939994571077577e153,7.942248650377909e153,7.944502090132399e153,7.946754890885107e153,7.949007053179328e153,7.951258577557584e153,7.953509464561627e153,7.955759714732446e153,7.958009328610267e153,7.960258306734546e153,7.962506649643986e153,7.96475435787652e153,7.96700143196933e153,7.969247872458835e153,7.971493679880704e153,7.973738854769846e153,7.97598339766042e153,7.978227309085834e153,7.980470589578745e153,7.982713239671062e153,7.984955259893945e153,7.987196650777813e153,7.989437412852337e153,7.991677546646448e153,7.993917052688333e153,7.996155931505441e153,7.998394183624482e153,8.000631809571436e153,8.002868809871534e153,8.005105185049285e153,8.007340935628462e153,8.009576062132104e153,8.011810565082523e153,8.014044445001305e153,8.016277702409305e153,8.018510337826655e153,8.020742351772762e153,8.022973744766313e153,8.02520451732527e153,8.02743466996688e153,8.029664203207665e153,8.031893117563437e153,8.03412141354929e153,8.036349091679601e153,8.038576152468041e153,8.040802596427562e153,8.043028424070411e153,8.045253635908123e153,8.047478232451532e153,8.049702214210756e153,8.051925581695218e153,8.054148335413634e153,8.056370475874018e153,8.058592003583683e153,8.060812919049244e153,8.06303322277662e153,8.06525291527103e153,8.067471997037002e153,8.069690468578366e153,8.071908330398261e153,8.074125582999138e153,8.076342226882756e153,8.078558262550183e153,8.080773690501806e153,8.08298851123732e153,8.085202725255739e153,8.087416333055394e153,8.089629335133933e153,8.091841731988325e153,8.094053524114858e153,8.096264712009142e153,8.098475296166112e153,8.100685277080028e153,8.102894655244475e153,8.105103431152363e153,8.107311605295933e153,8.109519178166758e153,8.111726150255738e153,8.113932522053109e153,8.116138294048435e153,8.118343466730623e153,8.120548040587907e153,8.122752016107868e153,8.124955393777419e153,8.127158174082814e153,8.12936035750965e153,8.131561944542865e153,8.133762935666744e153,8.13596333136491e153,8.138163132120339e153,8.140362338415352e153,8.142560950731619e153,8.144758969550157e153,8.146956395351337e153,8.149153228614884e153,8.151349469819873e153,8.153545119444733e153,8.155740177967257e153,8.157934645864584e153,8.160128523613218e153,8.162321811689023e153,8.16451451056722e153,8.166706620722397e153,8.1688981426285e153,8.171089076758843e153,8.173279423586105e153,8.175469183582332e153,8.177658357218935e153,8.179846944966697e153,8.182034947295772e153,8.184222364675686e153,8.186409197575333e153,8.188595446462984e153,8.190781111806288e153,8.192966194072266e153,8.195150693727316e153,8.197334611237218e153,8.19951794706713e153,8.201700701681591e153,8.20388287554452e153,8.206064469119224e153,8.208245482868389e153,8.210425917254088e153,8.212605772737783e153,8.214785049780322e153,8.216963748841942e153,8.219141870382269e153,8.221319414860323e153,8.223496382734512e153,8.225672774462642e153,8.227848590501909e153,8.23002383130891e153,8.232198497339634e153,8.23437258904947e153,8.236546106893203e153,8.238719051325024e153,8.240891422798522e153,8.243063221766686e153,8.245234448681911e153,8.247405103995997e153,8.24957518816015e153,8.251744701624977e153,8.253913644840501e153,8.25608201825615e153,8.258249822320762e153,8.260417057482582e153,8.262583724189277e153,8.264749822887918e153,8.266915354024994e153,8.26908031804641e153,8.271244715397487e153,8.273408546522962e153,8.275571811866991e153,8.277734511873151e153,8.27989664698444e153,8.282058217643276e153,8.284219224291499e153,8.286379667370375e153,8.288539547320595e153,8.290698864582276e153,8.292857619594958e153,8.295015812797616e153,8.297173444628647e153,8.299330515525885e153,8.301487025926589e153,8.303642976267453e153,8.305798366984605e153,8.307953198513606e153,8.310107471289453e153,8.312261185746579e153,8.314414342318854e153,8.316566941439585e153,8.318718983541522e153,8.320870469056855e153,8.323021398417211e153,8.325171772053662e153,8.327321590396725e153,8.329470853876359e153,8.331619562921971e153,8.333767717962411e153,8.33591531942598e153,8.338062367740426e153,8.340208863332945e153,8.342354806630183e153,8.344500198058244e153,8.346645038042675e153,8.348789327008481e153,8.350933065380123e153,8.353076253581514e153,8.355218892036026e153,8.357360981166486e153,8.35950252139518e153,8.361643513143855e153,8.363783956833715e153,8.365923852885428e153,8.368063201719123e153,8.370202003754392e153,8.37234025941029e153,8.374477969105339e153,8.376615133257528e153,8.378751752284308e153,8.380887826602601e153,8.383023356628801e153,8.385158342778765e153,8.387292785467827e153,8.389426685110789e153,8.391560042121925e153,8.393692856914986e153,8.395825129903195e153,8.397956861499249e153,8.400088052115325e153,8.402218702163076e153,8.404348812053632e153,8.406478382197603e153,8.40860741300508e153,8.41073590488563e153,8.412863858248309e153,8.414991273501651e153,8.417118151053678e153,8.419244491311891e153,8.421370294683278e153,8.42349556157432e153,8.425620292390977e153,8.427744487538698e153,8.429868147422429e153,8.431991272446597e153,8.434113863015125e153,8.436235919531427e153,8.438357442398408e153,8.440478432018466e153,8.442598888793499e153,8.444718813124896e153,8.446838205413544e153,8.448957066059824e153,8.451075395463619e153,8.453193194024309e153,8.455310462140773e153,8.457427200211395e153,8.459543408634054e153,8.461659087806138e153,8.463774238124533e153,8.465888859985634e153,8.468002953785337e153,8.470116519919047e153,8.47222955878167e153,8.474342070767629e153,8.476454056270847e153,8.478565515684764e153,8.480676449402322e153,8.48278685781598e153,8.484896741317707e153,8.487006100298985e153,8.489114935150808e153,8.491223246263686e153,8.493331034027648e153,8.495438298832231e153,8.497545041066498e153,8.49965126111902e153,8.501756959377895e153,8.503862136230738e153,8.505966792064682e153,8.508070927266383e153,8.51017454222202e153,8.512277637317296e153,8.514380212937431e153,8.516482269467176e153,8.518583807290806e153,8.52068482679212e153,8.522785328354443e153,8.524885312360635e153,8.526984779193079e153,8.529083729233684e153,8.531182162863895e153,8.533280080464688e153,8.535377482416566e153,8.537474369099569e153,8.539570740893268e153,8.54166659817677e153,8.543761941328718e153,8.545856770727286e153,8.547951086750188e153,8.550044889774676e153,8.552138180177539e153,8.554230958335105e153,8.55632322462324e153,8.558414979417355e153,8.5605062230924e153,8.562596956022865e153,8.564687178582786e153,8.566776891145742e153,8.568866094084855e153,8.570954787772792e153,8.57304297258177e153,8.575130648883549e153,8.57721781704944e153,8.579304477450294e153,8.581390630456524e153,8.58347627643808e153,8.585561415764473e153,8.587646048804758e153,8.58973017592755e153,8.591813797501005e153,8.593896913892846e153,8.595979525470342e153,8.598061632600318e153,8.600143235649159e153,8.602224334982801e153,8.604304930966744e153,8.60638502396604e153,8.608464614345307e153,8.610543702468714e153,8.612622288699996e153,8.614700373402449e153,8.616777956938928e153,8.618855039671855e153,8.620931621963213e153,8.623007704174548e153,8.625083286666972e153,8.627158369801163e153,8.629232953937365e153,8.63130703943539e153,8.633380626654615e153,8.63545371595399e153,8.63752630769203e153,8.63959840222682e153,8.641669999916022e153,8.64374110111686e153,8.645811706186136e153,8.647881815480226e153,8.649951429355074e153,8.652020548166203e153,8.654089172268711e153,8.656157302017268e153,8.658224937766124e153,8.660292079869105e153,8.662358728679612e153,8.66442488455063e153,8.666490547834718e153,8.66855571888402e153,8.670620398050257e153,8.67268458568473e153,8.674748282138326e153,8.676811487761514e153,8.678874202904343e153,8.68093642791645e153,8.682998163147057e153,8.685059408944966e153,8.687120165658572e153,8.689180433635853e153,8.691240213224375e153,8.693299504771294e153,8.695358308623351e153,8.697416625126881e153,8.699474454627808e153,8.701531797471645e153,8.7035886540035e153,8.70564502456807e153,8.707700909509646e153,8.709756309172115e153,8.711811223898952e153,8.713865654033238e153,8.715919599917638e153,8.71797306189442e153,8.720026040305447e153,8.722078535492181e153,8.72413054779568e153,8.726182077556604e153,8.72823312511521e153,8.730283690811356e153,8.732333774984502e153,8.734383377973707e153,8.736432500117638e153,8.73848114175456e153,8.74052930322234e153,8.742576984858453e153,8.74462418699998e153,8.746670909983603e153,8.748717154145613e153,8.750762919821908e153,8.752808207347993e153,8.75485301705898e153,8.75689734928959e153,8.758941204374154e153,8.760984582646615e153,8.763027484440525e153,8.765069910089043e153,8.767111859924948e153,8.769153334280626e153,8.771194333488077e153,8.773234857878916e153,8.77527490778437e153,8.777314483535288e153,8.779353585462124e153,8.781392213894958e153,8.78343036916348e153,8.785468051597005e153,8.787505261524455e153,8.789541999274382e153,8.791578265174953e153,8.793614059553954e153,8.795649382738792e153,8.797684235056497e153,8.79971861683372e153,8.801752528396734e153,8.803785970071434e153,8.80581894218334e153,8.807851445057602e153,8.809883479018982e153,8.81191504439188e153,8.813946141500314e153,8.815976770667933e153,8.818006932218013e153,8.820036626473455e153,8.822065853756793e153,8.824094614390187e153,8.826122908695428e153,8.828150736993936e153,8.830178099606764e153,8.832204996854592e153,8.83423142905774e153,8.836257396536153e153,8.838282899609415e153,8.840307938596741e153,8.84233251381698e153,8.844356625588614e153,8.846380274229768e153,8.848403460058197e153,8.850426183391295e153,8.852448444546092e153,8.854470243839259e153,8.8564915815871e153,8.858512458105567e153,8.86053287371024e153,8.86255282871635e153,8.864572323438763e153,8.866591358191988e153,8.868609933290175e153,8.87062804904712e153,8.872645705776256e153,8.874662903790665e153,8.876679643403073e153,8.878695924925847e153,8.880711748671001e153,8.882727114950199e153,8.884742024074746e153,8.886756476355596e153,8.888770472103353e153,8.890784011628266e153,8.892797095240233e153,8.894809723248804e153,8.896821895963175e153,8.898833613692196e153,8.900844876744367e153,8.902855685427838e153,8.904866040050412e153,8.906875940919546e153,8.908885388342347e153,8.910894382625579e153,8.912902924075659e153,8.914911012998657e153,8.916918649700304e153,8.91892583448598e153,8.920932567660723e153,8.922938849529233e153,8.924944680395864e153,8.926950060564623e153,8.928954990339187e153,8.930959470022882e153,8.932963499918698e153,8.934967080329286e153,8.936970211556957e153,8.938972893903679e153,8.940975127671089e153,8.942976913160481e153,8.944978250672815e153,8.946979140508713e153,8.94897958296846e153,8.950979578352008e153,8.952979126958972e153,8.954978229088632e153,8.956976885039934e153,8.958975095111494e153,8.960972859601592e153,8.962970178808176e153,8.964967053028863e153,8.966963482560935e153,8.96895946770135e153,8.970955008746727e153,8.972950105993363e153,8.974944759737224e153,8.976938970273942e153,8.978932737898826e153,8.980926062906856e153,8.982918945592684e153,8.984911386250635e153,8.986903385174708e153,8.988894942658578e153,8.990886058995592e153,8.992876734478774e153,8.994866969400823e153,8.996856764054115e153,8.998846118730702e153,9.000835033722312e153,9.002823509320354e153,9.004811545815914e153,9.006799143499756e153,9.008786302662321e153,9.010773023593735e153,9.012759306583801e153,9.014745151922003e153,9.016730559897505e153,9.018715530799157e153,9.020700064915485e153,9.022684162534703e153,9.024667823944707e153,9.026651049433075e153,9.028633839287068e153,9.030616193793638e153,9.032598113239413e153,9.034579597910715e153,9.036560648093548e153,9.0385412640736e153,9.040521446136253e153,9.042501194566572e153,9.044480509649308e153,9.046459391668904e153,9.048437840909493e153,9.050415857654895e153,9.052393442188619e153,9.054370594793867e153,9.05634731575353e153,9.058323605350193e153,9.060299463866127e153,9.062274891583303e153,9.064249888783379e153,9.066224455747708e153,9.068198592757337e153,9.070172300093007e153,9.072145578035154e153,9.074118426863909e153,9.076090846859097e153,9.07806283830024e153,9.080034401466556e153,9.082005536636963e153,9.083976244090073e153,9.085946524104195e153,9.087916376957341e153,9.089885802927218e153,9.09185480229123e153,9.093823375326488e153,9.095791522309796e153,9.097759243517665e153,9.099726539226298e153,9.101693409711611e153,9.103659855249212e153,9.105625876114415e153,9.10759147258224e153,9.109556644927407e153,9.111521393424338e153,9.113485718347164e153,9.115449619969717e153,9.117413098565536e153,9.119376154407863e153,9.121338787769646e153,9.123300998923547e153,9.125262788141923e153,9.127224155696848e153,9.129185101860098e153,9.131145626903161e153,9.133105731097229e153,9.135065414713205e153,9.137024678021707e153,9.138983521293056e153,9.140941944797284e153,9.142899948804137e153,9.14485753358307e153,9.146814699403249e153,9.148771446533555e153,9.150727775242579e153,9.152683685798626e153,9.154639178469715e153,9.156594253523577e153,9.158548911227658e153,9.16050315184912e153,9.162456975654838e153,9.164410382911403e153,9.166363373885122e153,9.168315948842022e153,9.17026810804784e153,9.172219851768034e153,9.174171180267783e153,9.176122093811977e153,9.178072592665228e153,9.180022677091867e153,9.181972347355946e153,9.183921603721234e153,9.18587044645122e153,9.187818875809115e153,9.18976689205785e153,9.191714495460079e153,9.193661686278176e153,9.195608464774236e153,9.197554831210082e153,9.199500785847255e153,9.20144632894702e153,9.203391460770366e153,9.205336181578012e153,9.20728049163039e153,9.209224391187669e153,9.211167880509735e153,9.213110959856207e153,9.215053629486422e153,9.216995889659451e153,9.218937740634088e153,9.220879182668857e153,9.222820216022006e153,9.224760840951517e153,9.226701057715096e153,9.228640866570179e153,9.230580267773934e153,9.232519261583257e153,9.234457848254773e153,9.23639602804484e153,9.238333801209547e153,9.240271168004712e153,9.242208128685888e153,9.244144683508357e153,9.246080832727138e153,9.248016576596978e153,9.249951915372362e153,9.251886849307505e153,9.253821378656359e153,9.25575550367261e153,9.257689224609677e153,9.25962254172072e153,9.261555455258625e153,9.263487965476025e153,9.26542007262528e153,9.267351776958495e153,9.269283078727508e153,9.271213978183895e153,9.273144475578971e153,9.275074571163786e153,9.277004265189137e153,9.278933557905551e153,9.2808624495633e153,9.282790940412394e153,9.284719030702586e153,9.286646720683365e153,9.288574010603964e153,9.29050090071336e153,9.292427391260266e153,9.294353482493143e153,9.29627917466019e153,9.29820446800935e153,9.300129362788316e153,9.302053859244512e153,9.303977957625118e153,9.30590165817705e153,9.307824961146977e153,9.309747866781305e153,9.311670375326189e153,9.313592487027532e153,9.315514202130983e153,9.317435520881931e153,9.319356443525523e153,9.321276970306645e153,9.323197101469933e153,9.325116837259772e153,9.327036177920294e153,9.328955123695383e153,9.330873674828668e153,9.332791831563533e153,9.334709594143105e153,9.336626962810266e153,9.338543937807649e153,9.340460519377634e153,9.342376707762358e153,9.344292503203706e153,9.346207905943314e153,9.348122916222574e153,9.350037534282628e153,9.351951760364373e153,9.35386559470846e153,9.355779037555288e153,9.357692089145019e153,9.359604749717565e153,9.361517019512593e153,9.363428898769525e153,9.365340387727539e153,9.367251486625569e153,9.369162195702307e153,9.371072515196198e153,9.372982445345448e153,9.374891986388016e153,9.376801138561624e153,9.37870990210375e153,9.380618277251626e153,9.382526264242248e153,9.384433863312368e153,9.386341074698502e153,9.388247898636921e153,9.390154335363657e153,9.392060385114504e153,9.393966048125018e153,9.395871324630509e153,9.397776214866058e153,9.399680719066501e153,9.40158483746644e153,9.403488570300238e153,9.405391917802018e153,9.407294880205673e153,9.409197457744853e153,9.411099650652974e153,9.413001459163217e153,9.414902883508526e153,9.416803923921614e153,9.418704580634952e153,9.420604853880783e153,9.422504743891112e153,9.424404250897711e153,9.426303375132119e153,9.42820211682564e153,9.43010047620935e153,9.431998453514088e153,9.433896048970461e153,9.435793262808846e153,9.437690095259387e153,9.439586546551997e153,9.44148261691636e153,9.443378306581925e153,9.445273615777918e153,9.447168544733325e153,9.449063093676914e153,9.450957262837212e153,9.452851052442527e153,9.454744462720932e153,9.456637493900272e153,9.45853014620817e153,9.460422419872016e153,9.462314315118972e153,9.464205832175975e153,9.466096971269737e153,9.467987732626738e153,9.46987811647324e153,9.471768123035269e153,9.473657752538637e153,9.47554700520892e153,9.477435881271477e153,9.47932438095144e153,9.481212504473715e153,9.483100252062986e153,9.484987623943711e153,9.48687462034013e153,9.488761241476258e153,9.490647487575881e153,9.49253335886257e153,9.494418855559672e153,9.496303977890312e153,9.498188726077393e153,9.500073100343597e153,9.501957100911387e153,9.503840728003004e153,9.50572398184047e153,9.507606862645582e153,9.509489370639923e153,9.511371506044857e153,9.513253269081524e153,9.515134659970853e153,9.517015678933548e153,9.518896326190097e153,9.52077660196077e153,9.522656506465618e153,9.524536039924482e153,9.526415202556973e153,9.528293994582501e153,9.530172416220248e153,9.532050467689185e153,9.533928149208067e153,9.535805460995432e153,9.537682403269602e153,9.53955897624869e153,9.541435180150587e153,9.543311015192977e153,9.545186481593323e153,9.547061579568882e153,9.548936309336689e153,9.550810671113574e153,9.55268466511615e153,9.55455829156082e153,9.556431550663768e153,9.558304442640977e153,9.560176967708211e153,9.562049126081025e153,9.563920917974763e153,9.565792343604557e153,9.56766340318533e153,9.569534096931795e153,9.571404425058453e153,9.5732743877796e153,9.575143985309318e153,9.577013217861482e153,9.578882085649759e153,9.580750588887607e153,9.582618727788273e153,9.5844865025648e153,9.586353913430026e153,9.588220960596575e153,9.590087644276868e153,9.591953964683118e153,9.593819922027331e153,9.59568551652131e153,9.597550748376649e153,9.599415617804737e153,9.60128012501676e153,9.603144270223692e153,9.605008053636315e153,9.606871475465195e153,9.608734535920699e153,9.610597235212986e153,9.612459573552015e153,9.614321551147544e153,9.616183168209125e153,9.618044424946102e153,9.619905321567625e153,9.62176585828264e153,9.623626035299886e153,9.625485852827903e153,9.627345311075034e153,9.629204410249414e153,9.631063150558983e153,9.632921532211473e153,9.634779555414425e153,9.63663722037517e153,9.63849452730085e153,9.640351476398397e153,9.64220806787455e153,9.64406430193585e153,9.645920178788633e153,9.647775698639044e153,9.649630861693022e153,9.651485668156315e153,9.653340118234468e153,9.655194212132834e153,9.657047950056565e153,9.658901332210617e153,9.66075435879975e153,9.662607030028527e153,9.664459346101314e153,9.666311307222283e153,9.66816291359541e153,9.670014165424476e153,9.671865062913065e153,9.673715606264569e153,9.675565795682184e153,9.677415631368911e153,9.67926511352756e153,9.681114242360742e153,9.682963018070881e153,9.684811440860202e153,9.686659510930742e153,9.688507228484341e153,9.69035459372265e153,9.692201606847124e153,9.694048268059032e153,9.695894577559444e153,9.697740535549245e153,9.699586142229127e153,9.701431397799587e153,9.703276302460935e153,9.705120856413294e153,9.70696505985659e153,9.708808912990561e153,9.710652416014758e153,9.712495569128544e153,9.714338372531088e153,9.716180826421371e153,9.718022930998188e153,9.719864686460143e153,9.721706093005655e153,9.723547150832951e153,9.725387860140074e153,9.727228221124878e153,9.72906823398503e153,9.730907898918009e153,9.732747216121111e153,9.734586185791443e153,9.736424808125922e153,9.738263083321288e153,9.740101011574087e153,9.741938593080686e153,9.743775828037262e153,9.745612716639809e153,9.747449259084136e153,9.74928545556587e153,9.751121306280449e153,9.752956811423131e153,9.754791971188991e153,9.756626785772916e153,9.758461255369613e153,9.760295380173604e153,9.762129160379231e153,9.763962596180654e153,9.765795687771845e153,9.767628435346601e153,9.769460839098533e153,9.771292899221074e153,9.773124615907468e153,9.774955989350788e153,9.776787019743918e153,9.778617707279566e153,9.780448052150261e153,9.782278054548344e153,9.784107714665986e153,9.785937032695172e153,9.78776600882771e153,9.789594643255229e153,9.791422936169176e153,9.793250887760821e153,9.79507849822126e153,9.796905767741403e153,9.798732696511988e153,9.800559284723573e153,9.802385532566538e153,9.804211440231086e153,9.806037007907243e153,9.807862235784859e153,9.809687124053605e153,9.811511672902979e153,9.813335882522301e153,9.815159753100714e153,9.816983284827188e153,9.818806477890515e153,9.820629332479312e153,9.822451848782023e153,9.824274026986917e153,9.826095867282085e153,9.827917369855447e153,9.829738534894747e153,9.831559362587558e153,9.833379853121275e153,9.835200006683122e153,9.837019823460154e153,9.838839303639244e153,9.840658447407099e153,9.842477254950251e153,9.844295726455061e153,9.846113862107715e153,9.847931662094229e153,9.849749126600451e153,9.851566255812051e153,9.853383049914531e153,9.855199509093224e153,9.857015633533289e153,9.858831423419716e153,9.86064687893732e153,9.862462000270756e153,9.864276787604502e153,9.866091241122865e153,9.867905361009987e153,9.869719147449839e153,9.871532600626223e153,9.873345720722771e153,9.875158507922946e153,9.876970962410049e153,9.878783084367205e153,9.880594873977374e153,9.882406331423349e153,9.884217456887755e153,9.886028250553047e153,9.88783871260152e153,9.889648843215294e153,9.891458642576328e153,9.893268110866411e153,9.89507724826717e153,9.896886054960062e153,9.898694531126378e153,9.900502676947246e153,9.902310492603628e153,9.904117978276322e153,9.905925134145955e153,9.907731960392999e153,9.909538457197754e153,9.911344624740357e153,9.913150463200783e153,9.914955972758842e153,9.916761153594178e153,9.918566005886279e153,9.92037052981446e153,9.922174725557877e153,9.923978593295527e153,9.925782133206238e153,9.927585345468682e153,9.929388230261362e153,9.931190787762623e153,9.932993018150647e153,9.934794921603458e153,9.93659649829891e153,9.938397748414705e153,9.94019867212838e153,9.941999269617312e153,9.943799541058713e153,9.945599486629643e153,9.947399106506994e153,9.949198400867504e153,9.950997369887745e153,9.952796013744135e153,9.954594332612931e153,9.956392326670228e153,9.958189996091966e153,9.959987341053927e153,9.961784361731727e153,9.963581058300832e153,9.965377430936545e153,9.967173479814013e153,9.968969205108225e153,9.970764606994011e153,9.972559685646046e153,9.974354441238846e153,9.976148873946771e153,9.977942983944024e153,9.979736771404649e153,9.981530236502539e153,9.983323379411425e153,9.985116200304885e153,9.986908699356344e153,9.988700876739064e153,9.990492732626158e153,9.992284267190581e153,9.994075480605134e153,9.995866373042462e153,9.997656944675056e153,9.999447195675255e153,1.0001237126215238e154,1.0003026736467037e154,1.0004816026602524e154,1.000660499679342e154,1.0008393647211293e154,1.0010181978027558e154,1.0011969989413473e154,1.0013757681540149e154,1.0015545054578542e154,1.0017332108699452e154,1.0019118844073532e154,1.0020905260871279e154,1.002269135926304e154,1.002447713941901e154,1.0026262601509232e154,1.0028047745703597e154,1.0029832572171847e154,1.0031617081083571e154,1.0033401272608208e154,1.0035185146915044e154,1.003696870417322e154,1.0038751944551721e154,1.0040534868219387e154,1.0042317475344904e154,1.0044099766096808e154,1.004588174064349e154,1.0047663399153189e154,1.0049444741793993e154,1.0051225768733846e154,1.0053006480140535e154,1.005478687618171e154,1.0056566957024862e154,1.0058346722837338e154,1.0060126173786337e154,1.0061905310038912e154,1.0063684131761966e154,1.0065462639122253e154,1.0067240832286384e154,1.006901871142082e154,1.0070796276691875e154,1.0072573528265715e154,1.0074350466308366e154,1.0076127090985697e154,1.0077903402463442e154,1.0079679400907181e154,1.0081455086482352e154,1.0083230459354244e154,1.0085005519688006e154,1.0086780267648635e154,1.0088554703400989e154,1.0090328827109776e154,1.0092102638939562e154,1.0093876139054768e154,1.009564932761967e154,1.0097422204798403e154,1.0099194770754953e154,1.0100967025653164e154,1.0102738969656737e154,1.0104510602929228e154,1.0106281925634051e154,1.0108052937934478e154,1.0109823639993635e154,1.0111594031974509e154,1.0113364114039938e154,1.0115133886352625e154,1.0116903349075126e154,1.0118672502369854e154,1.0120441346399086e154,1.012220988132495e154,1.0123978107309438e154,1.0125746024514398e154,1.0127513633101536e154,1.0129280933232417e154,1.013104792506847e154,1.0132814608770972e154,1.0134580984501074e154,1.0136347052419778e154,1.0138112812687943e154,1.0139878265466295e154,1.0141643410915418e154,1.0143408249195752e154,1.0145172780467603e154,1.0146937004891136e154,1.0148700922626374e154,1.0150464533833204e154,1.0152227838671376e154,1.0153990837300496e154,1.0155753529880033e154,1.0157515916569321e154,1.015927799752755e154,1.016103977291378e154,1.0162801242886927e154,1.0164562407605769e154,1.016632326722895e154,1.0168083821914975e154,1.0169844071822211e154,1.0171604017108891e154,1.0173363657933104e154,1.0175122994452812e154,1.0176882026825834e154,1.0178640755209855e154,1.018039917976242e154,1.0182157300640944e154,1.0183915118002703e154,1.0185672632004836e154,1.018742984280435e154,1.0189186750558113e154,1.019094335542286e154,1.0192699657555189e154,1.0194455657111565e154,1.0196211354248319e154,1.0197966749121643e154,1.01997218418876e154,1.0201476632702116e154,1.0203231121720983e154,1.020498530909986e154,1.0206739194994272e154,1.0208492779559608e154,1.0210246062951127e154,1.0211999045323951e154,1.0213751726833075e154,1.0215504107633355e154,1.0217256187879517e154,1.0219007967726154e154,1.0220759447327726e154,1.0222510626838559e154,1.0224261506412852e154,1.0226012086204667e154,1.0227762366367937e154,1.0229512347056462e154,1.023126202842391e154,1.0233011410623817e154,1.0234760493809592e154,1.023650927813451e154,1.0238257763751712e154,1.0240005950814216e154,1.0241753839474902e154,1.0243501429886523e154,1.02452487222017e154,1.0246995716572926e154,1.0248742413152563e154,1.0250488812092843e154,1.0252234913545869e154,1.0253980717663614e154,1.0255726224597922e154,1.0257471434500506e154,1.0259216347522953e154,1.026096096381672e154,1.0262705283533132e154,1.026444930682339e154,1.0266193033838566e154,1.0267936464729602e154,1.0269679599647312e154,1.0271422438742382e154,1.0273164982165372e154,1.027490723006671e154,1.0276649182596704e154,1.0278390839905525e154,1.0280132202143228e154,1.0281873269459729e154,1.0283614042004825e154,1.0285354519928185e154,1.028709470337935e154,1.0288834592507736e154,1.0290574187462629e154,1.0292313488393193e154,1.0294052495448466e154,1.0295791208777358e154,1.0297529628528653e154,1.0299267754851011e154,1.0301005587892966e154,1.0302743127802927e154,1.0304480374729177e154,1.0306217328819875e154,1.0307953990223057e154,1.0309690359086628e154,1.0311426435558376e154,1.0313162219785958e154,1.0314897711916911e154,1.031663291209865e154,1.031836782047846e154,1.0320102437203505e154,1.0321836762420827e154,1.0323570796277342e154,1.0325304538919845e154,1.0327037990495003e154,1.0328771151149366e154,1.0330504021029358e154,1.0332236600281279e154,1.033396888905131e154,1.0335700887485507e154,1.0337432595729804e154,1.0339164013930013e154,1.0340895142231822e154,1.0342625980780801e154,1.0344356529722395e154,1.034608678920193e154,1.0347816759364607e154,1.0349546440355507e154,1.0351275832319592e154,1.0353004935401703e154,1.0354733749746555e154,1.0356462275498746e154,1.0358190512802754e154,1.0359918461802936e154,1.0361646122643528e154,1.0363373495468644e154,1.0365100580422282e154,1.0366827377648315e154,1.0368553887290501e154,1.0370280109492476e154,1.0372006044397758e154,1.0373731692149742e154,1.0375457052891709e154,1.0377182126766814e154,1.0378906913918101e154,1.038063141448849e154,1.0382355628620781e154,1.0384079556457662e154,1.0385803198141695e154,1.0387526553815331e154,1.0389249623620896e154,1.0390972407700603e154,1.0392694906196544e154,1.0394417119250696e154,1.0396139047004915e154,1.0397860689600942e154,1.0399582047180401e154,1.0401303119884798e154,1.040302390785552e154,1.0404744411233843e154,1.0406464630160919e154,1.0408184564777786e154,1.0409904215225367e154,1.041162358164447e154,1.041334266417578e154,1.0415061462959874e154,1.0416779978137208e154,1.0418498209848123e154,1.0420216158232845e154,1.0421933823431483e154,1.0423651205584035e154,1.042536830483038e154,1.0427085121310279e154,1.0428801655163383e154,1.0430517906529227e154,1.043223387554723e154,1.0433949562356697e154,1.0435664967096818e154,1.043738008990667e154,1.0439094930925213e154,1.0440809490291297e154,1.0442523768143654e154,1.0444237764620905e154,1.0445951479861556e154,1.0447664914003996e154,1.044937806718651e154,1.0451090939547258e154,1.0452803531224297e154,1.0454515842355564e154,1.0456227873078885e154,1.0457939623531977e154,1.0459651093852435e154,1.0461362284177753e154,1.0463073194645306e154,1.0464783825392355e154,1.0466494176556053e154,1.046820424827344e154,1.0469914040681443e154,1.047162355391688e154,1.047333278811645e154,1.0475041743416749e154,1.0476750419954259e154,1.0478458817865349e154,1.0480166937286277e154,1.048187477835319e154,1.0483582341202127e154,1.0485289625969013e154,1.0486996632789662e154,1.0488703361799782e154,1.0490409813134965e154,1.0492115986930698e154,1.049382188332235e154,1.0495527502445191e154,1.0497232844434371e154,1.0498937909424935e154,1.0500642697551819e154,1.0502347208949849e154,1.050405144375374e154,1.0505755402098097e154,1.050745908411742e154,1.0509162489946095e154,1.0510865619718404e154,1.0512568473568515e154,1.0514271051630493e154,1.0515973354038291e154,1.0517675380925752e154,1.0519377132426615e154,1.0521078608674509e154,1.0522779809802953e154,1.0524480735945361e154,1.0526181387235036e154,1.0527881763805179e154,1.0529581865788878e154,1.0531281693319114e154,1.0532981246528763e154,1.0534680525550594e154,1.0536379530517269e154,1.0538078261561337e154,1.053977671881525e154,1.0541474902411345e154,1.0543172812481858e154,1.0544870449158915e154,1.0546567812574538e154,1.054826490286064e154,1.0549961720149032e154,1.0551658264571415e154,1.0553354536259387e154,1.0555050535344438e154,1.0556746261957955e154,1.0558441716231215e154,1.0560136898295397e154,1.0561831808281566e154,1.0563526446320687e154,1.0565220812543622e154,1.0566914907081122e154,1.0568608730063837e154,1.0570302281622313e154,1.057199556188699e154,1.0573688570988203e154,1.0575381309056184e154,1.0577073776221058e154,1.0578765972612851e154,1.0580457898361482e154,1.0582149553596763e154,1.058384093844841e154,1.0585532053046027e154,1.0587222897519121e154,1.0588913471997092e154,1.0590603776609237e154,1.0592293811484752e154,1.0593983576752728e154,1.0595673072542152e154,1.0597362298981912e154,1.0599051256200788e154,1.0600739944327462e154,1.0602428363490514e154,1.0604116513818418e154,1.0605804395439546e154,1.0607492008482171e154,1.0609179353074463e154,1.0610866429344486e154,1.0612553237420209e154,1.0614239777429491e154,1.06159260495001e154,1.0617612053759692e154,1.061929779033583e154,1.062098325935597e154,1.062266846094747e154,1.0624353395237588e154,1.0626038062353475e154,1.0627722462422186e154,1.0629406595570678e154,1.0631090461925802e154,1.063277406161431e154,1.0634457394762858e154,1.0636140461497994e154,1.0637823261946172e154,1.0639505796233743e154,1.064118806448696e154,1.0642870066831976e154,1.0644551803394843e154,1.0646233274301514e154,1.0647914479677841e154,1.0649595419649583e154,1.0651276094342392e154,1.0652956503881823e154,1.0654636648393335e154,1.0656316528002286e154,1.0657996142833935e154,1.0659675493013442e154,1.066135457866587e154,1.066303339991618e154,1.0664711956889242e154,1.0666390249709818e154,1.066806827850258e154,1.0669746043392099e154,1.0671423544502845e154,1.0673100781959197e154,1.0674777755885428e154,1.0676454466405722e154,1.0678130913644157e154,1.067980709772472e154,1.06814830187713e154,1.0683158676907685e154,1.0684834072257571e154,1.0686509204944552e154,1.0688184075092128e154,1.0689858682823702e154,1.069153302826258e154,1.0693207111531973e154,1.0694880932754992e154,1.0696554492054654e154,1.0698227789553882e154,1.06999008253755e154,1.0701573599642233e154,1.0703246112476715e154,1.0704918364001486e154,1.0706590354338985e154,1.0708262083611557e154,1.0709933551941452e154,1.0711604759450825e154,1.0713275706261737e154,1.0714946392496149e154,1.0716616818275932e154,1.071828698372286e154,1.0719956888958614e154,1.0721626534104775e154,1.0723295919282835e154,1.072496504461419e154,1.0726633910220138e154,1.0728302516221888e154,1.0729970862740551e154,1.0731638949897146e154,1.0733306777812598e154,1.0734974346607736e154,1.0736641656403297e154,1.0738308707319923e154,1.0739975499478163e154,1.0741642032998471e154,1.0743308308001212e154,1.0744974324606653e154,1.0746640082934968e154,1.0748305583106244e154,1.0749970825240465e154,1.0751635809457532e154,1.0753300535877246e154,1.0754965004619315e154,1.0756629215803364e154,1.0758293169548915e154,1.07599568659754e154,1.0761620305202163e154,1.076328348734845e154,1.076494641253342e154,1.0766609080876135e154,1.076827149249557e154,1.0769933647510606e154,1.0771595546040032e154,1.0773257188202545e154,1.077491857411675e154,1.0776579703901161e154,1.0778240577674205e154,1.077990119555421e154,1.0781561557659421e154,1.0783221664107984e154,1.078488151501796e154,1.0786541110507317e154,1.0788200450693933e154,1.0789859535695592e154,1.0791518365629992e154,1.079317694061474e154,1.0794835260767348e154,1.0796493326205245e154,1.0798151137045764e154,1.0799808693406151e154,1.0801465995403559e154,1.0803123043155054e154,1.0804779836777612e154,1.0806436376388119e154,1.080809266210337e154,1.0809748694040072e154,1.0811404472314843e154,1.081305999704421e154,1.081471526834461e154,1.0816370286332395e154,1.0818025051123827e154,1.0819679562835076e154,1.0821333821582224e154,1.0822987827481268e154,1.082464158064811e154,1.0826295081198569e154,1.0827948329248374e154,1.0829601324913165e154,1.0831254068308495e154,1.0832906559549826e154,1.0834558798752536e154,1.0836210786031911e154,1.0837862521503152e154,1.0839514005281371e154,1.0841165237481592e154,1.0842816218218753e154,1.0844466947607704e154,1.0846117425763206e154,1.0847767652799936e154,1.0849417628832478e154,1.0851067353975336e154,1.085271682834292e154,1.0854366052049559e154,1.0856015025209493e154,1.0857663747936873e154,1.0859312220345768e154,1.0860960442550155e154,1.0862608414663929e154,1.0864256136800896e154,1.0865903609074778e154,1.0867550831599206e154,1.0869197804487732e154,1.0870844527853816e154,1.0872491001810835e154,1.0874137226472079e154,1.0875783201950755e154,1.0877428928359981e154,1.087907440581279e154,1.0880719634422129e154,1.0882364614300862e154,1.0884009345561767e154,1.0885653828317535e154,1.0887298062680775e154,1.0888942048764006e154,1.0890585786679668e154,1.0892229276540111e154,1.0893872518457606e154,1.0895515512544332e154,1.089715825891239e154,1.0898800757673793e154,1.0900443008940472e154,1.0902085012824268e154,1.0903726769436945e154,1.0905368278890181e154,1.0907009541295565e154,1.090865055676461e154,1.0910291325408739e154,1.0911931847339291e154,1.0913572122667529e154,1.0915212151504622e154,1.0916851933961661e154,1.0918491470149657e154,1.092013076017953e154,1.0921769804162119e154,1.0923408602208186e154,1.0925047154428402e154,1.092668546093336e154,1.0928323521833565e154,1.0929961337239447e154,1.0931598907261346e154,1.0933236232009522e154,1.0934873311594154e154,1.0936510146125337e154,1.0938146735713082e154,1.0939783080467322e154,1.0941419180497903e154,1.0943055035914594e154,1.0944690646827076e154,1.0946326013344953e154,1.0947961135577746e154,1.094959601363489e154,1.0951230647625747e154,1.0952865037659587e154,1.0954499183845606e154,1.0956133086292918e154,1.0957766745110553e154,1.0959400160407459e154,1.0961033332292507e154,1.0962666260874483e154,1.0964298946262094e154,1.0965931388563964e154,1.0967563587888638e154,1.0969195544344581e154,1.0970827258040177e154,1.0972458729083728e154,1.0974089957583454e154,1.09757209436475e154,1.0977351687383924e154,1.0978982188900709e154,1.0980612448305757e154,1.0982242465706887e154,1.098387224121184e154,1.0985501774928277e154,1.0987131066963781e154,1.0988760117425851e154,1.0990388926421909e154,1.0992017494059298e154,1.099364582044528e154,1.099527390568704e154,1.0996901749891678e154,1.0998529353166222e154,1.1000156715617614e154,1.1001783837352725e154,1.1003410718478336e154,1.1005037359101162e154,1.1006663759327828e154,1.1008289919264888e154,1.1009915839018811e154,1.101154151869599e154,1.1013166958402744e154,1.1014792158245305e154,1.1016417118329834e154,1.1018041838762409e154,1.1019666319649033e154,1.1021290561095628e154,1.1022914563208041e154,1.1024538326092038e154,1.102616184985331e154,1.1027785134597468e154,1.1029408180430047e154,1.1031030987456503e154,1.1032653555782212e154,1.103427588551248e154,1.1035897976752529e154,1.1037519829607505e154,1.1039141444182477e154,1.1040762820582441e154,1.1042383958912309e154,1.1044004859276919e154,1.1045625521781035e154,1.1047245946529337e154,1.1048866133626436e154,1.1050486083176863e154,1.105210579528507e154,1.1053725270055438e154,1.1055344507592267e154,1.1056963507999782e154,1.1058582271382132e154,1.1060200797843388e154,1.1061819087487547e154,1.106343714041853e154,1.1065054956740183e154,1.106667253655627e154,1.1068289879970489e154,1.1069906987086453e154,1.1071523858007705e154,1.1073140492837709e154,1.1074756891679857e154,1.1076373054637461e154,1.1077988981813763e154,1.1079604673311925e154,1.1081220129235038e154,1.1082835349686113e154,1.1084450334768091e154,1.1086065084583835e154,1.1087679599236133e154,1.1089293878827697e154,1.109090792346117e154,1.1092521733239115e154,1.1094135308264022e154,1.1095748648638303e154,1.1097361754464306e154,1.1098974625844291e154,1.1100587262880453e154,1.1102199665674909e154,1.1103811834329704e154,1.1105423768946808e154,1.1107035469628116e154,1.110864693647545e154,1.1110258169590557e154,1.1111869169075113e154,1.1113479935030718e154,1.1115090467558899e154,1.1116700766761109e154,1.1118310832738729e154,1.1119920665593065e154,1.112153026542535e154,1.1123139632336743e154,1.1124748766428331e154,1.112635766780113e154,1.1127966336556079e154,1.1129574772794047e154,1.1131182976615828e154,1.1132790948122144e154,1.1134398687413644e154,1.1136006194590905e154,1.113761346975443e154,1.1139220513004653e154,1.1140827324441933e154,1.1142433904166554e154,1.1144040252278733e154,1.1145646368878611e154,1.114725225406626e154,1.1148857907941676e154,1.1150463330604785e154,1.1152068522155444e154,1.1153673482693432e154,1.1155278212318462e154,1.115688271113017e154,1.1158486979228125e154,1.1160091016711824e154,1.1161694823680688e154,1.1163298400234073e154,1.1164901746471257e154,1.1166504862491453e154,1.11681077483938e154,1.1169710404277361e154,1.1171312830241137e154,1.1172915026384053e154,1.1174516992804964e154,1.1176118729602653e154,1.1177720236875835e154,1.1179321514723149e154,1.1180922563243171e154,1.1182523382534398e154,1.1184123972695265e154,1.1185724333824128e154,1.118732446601928e154,1.1188924369378938e154,1.1190524044001255e154,1.1192123489984309e154,1.1193722707426109e154,1.1195321696424593e154,1.119692045707763e154,1.1198518989483023e154,1.1200117293738498e154,1.1201715369941718e154,1.1203313218190272e154,1.1204910838581678e154,1.1206508231213392e154,1.1208105396182792e154,1.1209702333587192e154,1.1211299043523837e154,1.1212895526089897e154,1.1214491781382478e154,1.1216087809498618e154,1.121768361053528e154,1.1219279184589363e154,1.1220874531757696e154,1.1222469652137037e154,1.1224064545824081e154,1.1225659212915447e154,1.122725365350769e154,1.1228847867697297e154,1.1230441855580681e154,1.1232035617254194e154,1.1233629152814112e154,1.1235222462356651e154,1.1236815545977951e154,1.1238408403774091e154,1.1240001035841074e154,1.1241593442274844e154,1.1243185623171268e154,1.1244777578626152e154,1.124636930873523e154,1.1247960813594173e154,1.1249552093298579e154,1.1251143147943978e154,1.125273397762584e154,1.1254324582439561e154,1.1255914962480471e154,1.1257505117843832e154,1.125909504862484e154,1.1260684754918625e154,1.1262274236820246e154,1.1263863494424698e154,1.126545252782691e154,1.126704133712174e154,1.1268629922403982e154,1.1270218283768362e154,1.1271806421309542e154,1.1273394335122113e154,1.1274982025300604e154,1.1276569491939471e154,1.1278156735133111e154,1.127974375497585e154,1.1281330551561948e154,1.12829171249856e154,1.1284503475340936e154,1.1286089602722016e154,1.1287675507222838e154,1.1289261188937328e154,1.1290846647959354e154,1.1292431884382714e154,1.1294016898301137e154,1.1295601689808294e154,1.1297186258997782e154,1.1298770605963139e154,1.1300354730797832e154,1.130193863359527e154,1.1303522314448786e154,1.1305105773451656e154,1.1306689010697088e154,1.1308272026278224e154,1.1309854820288144e154,1.1311437392819856e154,1.1313019743966312e154,1.1314601873820393e154,1.1316183782474915e154,1.131776547002263e154,1.131934693655623e154,1.1320928182168335e154,1.1322509206951505e154,1.1324090010998231e154,1.1325670594400945e154,1.132725095725201e154,1.1328831099643727e154,1.1330411021668333e154,1.1331990723417998e154,1.133357020498483e154,1.1335149466460873e154,1.1336728507938106e154,1.1338307329508443e154,1.1339885931263736e154,1.1341464313295773e154,1.1343042475696274e154,1.1344620418556902e154,1.1346198141969253e154,1.1347775646024857e154,1.1349352930815183e154,1.1350929996431638e154,1.1352506842965559e154,1.1354083470508228e154,1.1355659879150859e154,1.1357236068984603e154,1.1358812040100548e154,1.1360387792589719e154,1.1361963326543077e154,1.1363538642051522e154,1.1365113739205889e154,1.1366688618096953e154,1.1368263278815421e154,1.1369837721451942e154,1.1371411946097099e154,1.1372985952841415e154,1.1374559741775347e154,1.1376133312989296e154,1.137770666657359e154,1.1379279802618505e154,1.1380852721214249e154,1.1382425422450969e154,1.1383997906418749e154,1.1385570173207611e154,1.1387142222907515e154,1.1388714055608361e154,1.1390285671399983e154,1.1391857070372156e154,1.1393428252614593e154,1.1394999218216944e154,1.1396569967268796e154,1.1398140499859677e154,1.1399710816079053e154,1.1401280916016326e154,1.1402850799760839e154,1.1404420467401871e154,1.1405989919028644e154,1.1407559154730314e154,1.1409128174595976e154,1.1410696978714667e154,1.1412265567175363e154,1.1413833940066971e154,1.1415402097478347e154,1.141697003949828e154,1.1418537766215501e154,1.142010527771868e154,1.142167257409642e154,1.1423239655437275e154,1.1424806521829725e154,1.14263731733622e154,1.1427939610123064e154,1.1429505832200621e154,1.1431071839683116e154,1.1432637632658734e154,1.1434203211215594e154,1.1435768575441763e154,1.1437333725425241e154,1.1438898661253974e154,1.1440463383015843e154,1.1442027890798669e154,1.1443592184690215e154,1.1445156264778184e154,1.1446720131150218e154,1.1448283783893898e154,1.1449847223096746e154,1.145141044884623e154,1.145297346122975e154,1.1454536260334649e154,1.1456098846248213e154,1.1457661219057663e154,1.145922337885017e154,1.1460785325712832e154,1.1462347059732702e154,1.1463908580996766e154,1.1465469889591947e154,1.146703098560512e154,1.146859186912309e154,1.147015254023261e154,1.1471712999020369e154,1.1473273245573001e154,1.147483327997708e154,1.147639310231912e154,1.1477952712685578e154,1.147951211116285e154,1.1481071297837275e154,1.1482630272795132e154,1.1484189036122643e154,1.1485747587905974e154,1.1487305928231223e154,1.1488864057184442e154,1.1490421974851614e154,1.1491979681318672e154,1.1493537176671485e154,1.1495094460995867e154,1.1496651534377572e154,1.1498208396902297e154,1.1499765048655683e154,1.1501321489723308e154,1.1502877720190696e154,1.1504433740143312e154,1.1505989549666564e154,1.1507545148845799e154,1.1509100537766313e154,1.1510655716513336e154,1.1512210685172049e154,1.1513765443827567e154,1.1515319992564954e154,1.1516874331469215e154,1.1518428460625295e154,1.1519982380118085e154,1.1521536090032417e154,1.1523089590453066e154,1.152464288146475e154,1.152619596315213e154,1.152774883559981e154,1.1529301498892338e154,1.1530853953114203e154,1.1532406198349838e154,1.153395823468362e154,1.1535510062199869e154,1.1537061680982848e154,1.1538613091116761e154,1.154016429268576e154,1.1541715285773938e154,1.1543266070465329e154,1.1544816646843917e154,1.1546367014993622e154,1.1547917174998315e154,1.1549467126941805e154,1.1551016870907848e154,1.1552566406980143e154,1.1554115735242329e154,1.1555664855777996e154,1.1557213768670675e154,1.155876247400384e154,1.1560310971860909e154,1.1561859262325244e154,1.1563407345480154e154,1.1564955221408888e154,1.1566502890194643e154,1.1568050351920558e154,1.156959760666972e154,1.1571144654525153e154,1.1572691495569833e154,1.1574238129886678e154,1.157578455755855e154,1.1577330778668257e154,1.1578876793298547e154,1.1580422601532122e154,1.1581968203451619e154,1.1583513599139626e154,1.1585058788678674e154,1.1586603772151239e154,1.1588148549639741e154,1.1589693121226549e154,1.1591237486993971e154,1.1592781647024264e154,1.1594325601399633e154,1.1595869350202222e154,1.1597412893514124e154,1.1598956231417374e154,1.1600499363993961e154,1.1602042291325807e154,1.1603585013494792e154,1.1605127530582733e154,1.1606669842671394e154,1.1608211949842488e154,1.1609753852177671e154,1.1611295549758546e154,1.161283704266666e154,1.1614378330983508e154,1.161591941479053e154,1.1617460294169113e154,1.161900096920059e154,1.1620541439966236e154,1.1622081706547279e154,1.1623621769024888e154,1.1625161627480176e154,1.1626701281994214e154,1.1628240732648006e154,1.1629779979522508e154,1.1631319022698624e154,1.1632857862257202e154,1.1634396498279038e154,1.1635934930844872e154,1.1637473160035394e154,1.163901118593124e154,1.164054900861299e154,1.1642086628161174e154,1.1643624044656265e154,1.1645161258178689e154,1.1646698268808812e154,1.1648235076626952e154,1.1649771681713373e154,1.1651308084148284e154,1.1652844284011843e154,1.1654380281384155e154,1.1655916076345272e154,1.1657451668975193e154,1.1658987059353862e154,1.1660522247561175e154,1.1662057233676975e154,1.1663592017781049e154,1.1665126599953133e154,1.1666660980272911e154,1.1668195158820013e154,1.1669729135674021e154,1.167126291091446e154,1.1672796484620803e154,1.1674329856872476e154,1.1675863027748846e154,1.1677395997329231e154,1.1678928765692901e154,1.1680461332919065e154,1.1681993699086888e154,1.1683525864275479e154,1.1685057828563897e154,1.1686589592031148e154,1.1688121154756187e154,1.1689652516817914e154,1.1691183678295186e154,1.1692714639266798e154,1.1694245399811498e154,1.1695775960007986e154,1.1697306319934904e154,1.1698836479670848e154,1.1700366439294358e154,1.1701896198883926e154,1.1703425758517989e154,1.170495511827494e154,1.1706484278233112e154,1.1708013238470794e154,1.1709541999066219e154,1.171107056009757e154,1.1712598921642982e154,1.1714127083780536e154,1.1715655046588263e154,1.171718281014414e154,1.1718710374526102e154,1.172023773981202e154,1.1721764906079729e154,1.1723291873407003e154,1.1724818641871567e154,1.1726345211551096e154,1.1727871582523218e154,1.1729397754865507e154,1.1730923728655485e154,1.1732449503970629e154,1.1733975080888358e154,1.173550045948605e154,1.1737025639841026e154,1.1738550622030556e154,1.1740075406131865e154,1.1741599992222125e154,1.1743124380378459e154,1.1744648570677937e154,1.1746172563197581e154,1.1747696358014364e154,1.1749219955205208e154,1.1750743354846987e154,1.175226655701652e154,1.1753789561790583e154,1.1755312369245897e154,1.1756834979459137e154,1.1758357392506926e154,1.1759879608465836e154,1.1761401627412395e154,1.1762923449423075e154,1.1764445074574302e154,1.1765966502942455e154,1.1767487734603857e154,1.1769008769634789e154,1.1770529608111476e154,1.1772050250110098e154,1.1773570695706785e154,1.1775090944977618e154,1.1776610997998626e154,1.1778130854845794e154,1.1779650515595055e154,1.1781169980322294e154,1.1782689249103345e154,1.1784208322013993e154,1.1785727199129979e154,1.178724588052699e154,1.1788764366280668e154,1.1790282656466603e154,1.1791800751160339e154,1.1793318650437367e154,1.1794836354373135e154,1.1796353863043042e154,1.1797871176522433e154,1.179938829488661e154,1.1800905218210825e154,1.180242194657028e154,1.1803938480040132e154,1.1805454818695487e154,1.1806970962611401e154,1.1808486911862888e154,1.1810002666524908e154,1.1811518226672377e154,1.1813033592380161e154,1.1814548763723076e154,1.1816063740775893e154,1.1817578523613334e154,1.1819093112310076e154,1.182060750694074e154,1.1822121707579908e154,1.1823635714302112e154,1.1825149527181834e154,1.182666314629351e154,1.1828176571711526e154,1.1829689803510224e154,1.1831202841763896e154,1.1832715686546787e154,1.1834228337933097e154,1.1835740795996974e154,1.183725306081252e154,1.1838765132453795e154,1.1840277010994804e154,1.1841788696509509e154,1.1843300189071824e154,1.1844811488755616e154,1.1846322595634704e154,1.1847833509782863e154,1.1849344231273816e154,1.185085476018124e154,1.185236509657877e154,1.185387524053999e154,1.1855385192138438e154,1.1856894951447605e154,1.1858404518540933e154,1.1859913893491822e154,1.1861423076373622e154,1.1862932067259637e154,1.1864440866223126e154,1.1865949473337296e154,1.1867457888675316e154,1.1868966112310301e154,1.1870474144315324e154,1.1871981984763412e154,1.1873489633727538e154,1.1874997091280639e154,1.18765043574956e154,1.187801143244526e154,1.1879518316202414e154,1.1881025008839807e154,1.1882531510430145e154,1.1884037821046078e154,1.188554394076022e154,1.1887049869645129e154,1.1888555607773327e154,1.1890061155217282e154,1.1891566512049423e154,1.1893071678342127e154,1.1894576654167728e154,1.1896081439598515e154,1.1897586034706728e154,1.1899090439564568e154,1.1900594654244184e154,1.190209867881768e154,1.1903602513357118e154,1.1905106157934512e154,1.190660961262183e154,1.1908112877490996e154,1.1909615952613889e154,1.191111883806234e154,1.1912621533908139e154,1.1914124040223025e154,1.1915626357078698e154,1.1917128484546807e154,1.191863042269896e154,1.192013217160672e154,1.19216337313416e154,1.1923135101975075e154,1.192463628357857e154,1.1926137276223466e154,1.1927638079981098e154,1.192913869492276e154,1.19306391211197e154,1.1932139358643117e154,1.193363940756417e154,1.193513926795397e154,1.1936638939883587e154,1.1938138423424043e154,1.1939637718646316e154,1.1941136825621343e154,1.1942635744420009e154,1.1944134475113163e154,1.1945633017771604e154,1.194713137246609e154,1.194862953926733e154,1.1950127518245994e154,1.1951625309472702e154,1.1953122913018037e154,1.1954620328952531e154,1.1956117557346675e154,1.1957614598270919e154,1.1959111451795661e154,1.1960608117991262e154,1.1962104596928032e154,1.1963600888676247e154,1.1965096993306133e154,1.1966592910887867e154,1.1968088641491593e154,1.1969584185187404e154,1.1971079542045352e154,1.1972574712135442e154,1.197406969552764e154,1.1975564492291866e154,1.1977059102497993e154,1.197855352621586e154,1.198004776351525e154,1.198154181446591e154,1.1983035679137544e154,1.1984529357599811e154,1.1986022849922323e154,1.1987516156174655e154,1.1989009276426336e154,1.1990502210746847e154,1.1991994959205636e154,1.1993487521872097e154,1.1994979898815589e154,1.1996472090105422e154,1.1997964095810867e154,1.1999455916001151e154,1.2000947550745454e154,1.2002439000112922e154,1.2003930264172647e154,1.2005421342993687e154,1.200691223664505e154,1.2008402945195708e154,1.2009893468714588e154,1.2011383807270569e154,1.2012873960932496e154,1.2014363929769162e154,1.2015853713849326e154,1.2017343313241698e154,1.201883272801495e154,1.202032195823771e154,1.2021811003978558e154,1.2023299865306043e154,1.202478854228866e154,1.2026277034994868e154,1.2027765343493083e154,1.2029253467851679e154,1.2030741408138982e154,1.2032229164423285e154,1.2033716736772833e154,1.203520412525583e154,1.2036691329940436e154,1.2038178350894773e154,1.2039665188186917e154,1.2041151841884905e154,1.204263831205673e154,1.2044124598770345e154,1.2045610702093656e154,1.2047096622094535e154,1.2048582358840807e154,1.2050067912400255e154,1.2051553282840621e154,1.2053038470229607e154,1.2054523474634873e154,1.2056008296124035e154,1.2057492934764668e154,1.2058977390624306e154,1.2060461663770445e154,1.206194575427053e154,1.2063429662191976e154,1.2064913387602147e154,1.2066396930568373e154,1.2067880291157937e154,1.2069363469438084e154,1.2070846465476018e154,1.2072329279338894e154,1.2073811911093842e154,1.2075294360807931e154,1.2076776628548204e154,1.2078258714381659e154,1.2079740618375248e154,1.2081222340595887e154,1.2082703881110448e154,1.2084185239985765e154,1.2085666417288628e154,1.2087147413085788e154,1.2088628227443956e154,1.2090108860429798e154,1.2091589312109945e154,1.2093069582550982e154,1.2094549671819458e154,1.2096029579981873e154,1.2097509307104697e154,1.2098988853254353e154,1.2100468218497226e154,1.2101947402899658e154,1.210342640652795e154,1.2104905229448368e154,1.210638387172713e154,1.2107862333430419e154,1.2109340614624374e154,1.2110818715375097e154,1.211229663574865e154,1.211377437581105e154,1.2115251935628279e154,1.2116729315266272e154,1.2118206514790933e154,1.2119683534268118e154,1.2121160373763646e154,1.2122637033343297e154,1.212411351307281e154,1.2125589813017883e154,1.2127065933244173e154,1.2128541873817302e154,1.2130017634802846e154,1.2131493216266344e154,1.2132968618273299e154,1.2134443840889165e154,1.2135918884179367e154,1.2137393748209279e154,1.2138868433044244e154,1.2140342938749562e154,1.2141817265390493e154,1.214329141303226e154,1.214476538174004e154,1.2146239171578982e154,1.2147712782614182e154,1.2149186214910707e154,1.2150659468533576e154,1.2152132543547778e154,1.2153605440018255e154,1.2155078158009913e154,1.2156550697587617e154,1.2158023058816193e154,1.2159495241760434e154,1.2160967246485082e154,1.2162439073054849e154,1.2163910721534404e154,1.2165382191988378e154,1.2166853484481363e154,1.216832459907791e154,1.2169795535842536e154,1.2171266294839714e154,1.217273687613388e154,1.2174207279789428e154,1.217567750587072e154,1.2177147554442075e154,1.2178617425567769e154,1.2180087119312049e154,1.2181556635739111e154,1.2183025974913125e154,1.2184495136898215e154,1.2185964121758466e154,1.2187432929557926e154,1.2188901560360606e154,1.2190370014230477e154,1.219183829123147e154,1.219330639142748e154,1.219477431488236e154,1.219624206165993e154,1.2197709631823967e154,1.2199177025438213e154,1.2200644242566367e154,1.2202111283272096e154,1.2203578147619022e154,1.2205044835670734e154,1.2206511347490781e154,1.2207977683142672e154,1.220944384268988e154,1.2210909826195842e154,1.2212375633723952e154,1.221384126533757e154,1.2215306721100013e154,1.2216772001074568e154,1.2218237105324475e154,1.2219702033912943e154,1.2221166786903143e154,1.22226313643582e154,1.2224095766341212e154,1.2225559992915231e154,1.2227024044143277e154,1.2228487920088326e154,1.2229951620813325e154,1.2231415146381173e154,1.2232878496854741e154,1.2234341672296857e154,1.223580467277031e154,1.2237267498337859e154,1.2238730149062215e154,1.2240192625006062e154,1.2241654926232036e154,1.2243117052802746e154,1.2244579004780759e154,1.2246040782228601e154,1.2247502385208766e154,1.2248963813783708e154,1.2250425068015847e154,1.2251886147967561e154,1.2253347053701194e154,1.2254807785279051e154,1.2256268342763404e154,1.2257728726216482e154,1.225918893570048e154,1.2260648971277556e154,1.2262108833009831e154,1.2263568520959389e154,1.2265028035188275e154,1.2266487375758502e154,1.2267946542732041e154,1.2269405536170828e154,1.2270864356136763e154,1.2272323002691708e154,1.227378147589749e154,1.2275239775815895e154,1.227669790250868e154,1.2278155856037557e154,1.2279613636464205e154,1.228107124385027e154,1.2282528678257354e154,1.2283985939747028e154,1.2285443028380823e154,1.2286899944220239e154,1.2288356687326733e154,1.228981325776173e154,1.2291269655586616e154,1.229272588086274e154,1.229418193365142e154,1.2295637814013932e154,1.2297093522011517e154,1.2298549057705382e154,1.2300004421156696e154,1.2301459612426593e154,1.2302914631576168e154,1.2304369478666483e154,1.2305824153758562e154,1.2307278656913394e154,1.2308732988191931e154,1.2310187147655092e154,1.2311641135363754e154,1.2313094951378765e154,1.2314548595760934e154,1.2316002068571031e154,1.2317455369869796e154,1.2318908499717927e154,1.2320361458176091e154,1.232181424530492e154,1.2323266861165004e154,1.2324719305816903e154,1.2326171579321141e154,1.2327623681738203e154,1.232907561312854e154,1.2330527373552567e154,1.2331978963070669e154,1.2333430381743186e154,1.2334881629630428e154,1.2336332706792669e154,1.2337783613290146e154,1.2339234349183064e154,1.2340684914531589e154,1.2342135309395852e154,1.234358553383595e154,1.2345035587911949e154,1.2346485471683869e154,1.2347935185211704e154,1.2349384728555408e154,1.2350834101774902e154,1.2352283304930071e154,1.2353732338080766e154,1.2355181201286804e154,1.235662989460796e154,1.2358078418103984e154,1.2359526771834584e154,1.2360974955859435e154,1.2362422970238175e154,1.2363870815030412e154,1.2365318490295717e154,1.2366765996093622e154,1.2368213332483629e154,1.2369660499525203e154,1.2371107497277778e154,1.2372554325800747e154,1.2374000985153472e154,1.2375447475395282e154,1.2376893796585465e154,1.2378339948783282e154,1.2379785932047954e154,1.238123174643867e154,1.2382677392014583e154,1.2384122868834814e154,1.2385568176958445e154,1.2387013316444528e154,1.238845828735208e154,1.2389903089740078e154,1.2391347723667473e154,1.2392792189193175e154,1.2394236486376066e154,1.2395680615274986e154,1.2397124575948746e154,1.2398568368456123e154,1.2400011992855855e154,1.2401455449206653e154,1.2402898737567187e154,1.2404341857996097e154,1.2405784810551986e154,1.2407227595293426e154,1.2408670212278954e154,1.2410112661567071e154,1.2411554943216248e154,1.2412997057284916e154,1.241443900383148e154,1.2415880782914302e154,1.2417322394591718e154,1.2418763838922027e154,1.242020511596349e154,1.2421646225774344e154,1.2423087168412783e154,1.242452794393697e154,1.2425968552405038e154,1.2427408993875084e154,1.2428849268405167e154,1.2430289376053316e154,1.2431729316877532e154,1.2433169090935772e154,1.2434608698285965e154,1.2436048138986005e154,1.2437487413093757e154,1.2438926520667044e154,1.2440365461763664e154,1.2441804236441378e154,1.244324284475791e154,1.2444681286770959e154,1.244611956253818e154,1.2447557672117208e154,1.2448995615565629e154,1.245043339294101e154,1.2451871004300877e154,1.2453308449702724e154,1.2454745729204012e154,1.245618284286217e154,1.2457619790734595e154,1.2459056572878644e154,1.2460493189351653e154,1.246192964021091e154,1.2463365925513683e154,1.2464802045317202e154,1.246623799967866e154,1.2467673788655226e154,1.2469109412304026e154,1.2470544870682164e154,1.2471980163846698e154,1.2473415291854667e154,1.2474850254763069e154,1.2476285052628868e154,1.2477719685509002e154,1.2479154153460369e154,1.248058845653984e154,1.248202259480425e154,1.2483456568310403e154,1.2484890377115072e154,1.2486324021274989e154,1.2487757500846866e154,1.2489190815887372e154,1.249062396645315e154,1.2492056952600807e154,1.2493489774386917e154,1.2494922431868026e154,1.2496354925100644e154,1.249778725414125e154,1.2499219419046287e154,1.2500651419872172e154,1.2502083256675283e154,1.2503514929511974e154,1.2504946438438557e154,1.2506377783511317e154,1.2507808964786509e154,1.2509239982320353e154,1.2510670836169036e154,1.2512101526388713e154,1.251353205303551e154,1.2514962416165517e154,1.2516392615834793e154,1.2517822652099369e154,1.2519252525015237e154,1.2520682234638364e154,1.252211178102468e154,1.2523541164230085e154,1.2524970384310444e154,1.2526399441321598e154,1.252782833531935e154,1.252925706635947e154,1.2530685634497702e154,1.253211403978975e154,1.2533542282291296e154,1.2534970362057984e154,1.2536398279145424e154,1.2537826033609204e154,1.253925362550487e154,1.2540681054887943e154,1.2542108321813908e154,1.2543535426338224e154,1.254496236851631e154,1.2546389148403563e154,1.2547815766055342e154,1.2549242221526976e154,1.2550668514873766e154,1.2552094646150976e154,1.2553520615413843e154,1.2554946422717568e154,1.2556372068117328e154,1.2557797551668259e154,1.2559222873425475e154,1.2560648033444054e154,1.2562073031779042e154,1.2563497868485457e154,1.2564922543618284e154,1.2566347057232477e154,1.2567771409382955e154,1.2569195600124614e154,1.2570619629512314e154,1.2572043497600882e154,1.2573467204445119e154,1.257489075009979e154,1.2576314134619634e154,1.2577737358059355e154,1.2579160420473628e154,1.2580583321917097e154,1.258200606244437e154,1.2583428642110038e154,1.2584851060968642e154,1.258627331907471e154,1.2587695416482726e154,1.2589117353247152e154,1.2590539129422413e154,1.2591960745062908e154,1.2593382200223003e154,1.2594803494957032e154,1.2596224629319304e154,1.2597645603364088e154,1.2599066417145633e154,1.2600487070718148e154,1.2601907564135818e154,1.2603327897452795e154,1.2604748070723198e154,1.2606168084001123e154,1.2607587937340625e154,1.260900763079574e154,1.2610427164420463e154,1.2611846538268764e154,1.2613265752394586e154,1.2614684806851834e154,1.2616103701694389e154,1.2617522436976095e154,1.2618941012750773e154,1.262035942907221e154,1.2621777685994164e154,1.2623195783570359e154,1.2624613721854495e154,1.262603150090024e154,1.2627449120761227e154,1.2628866581491065e154,1.2630283883143329e154,1.2631701025771567e154,1.2633118009429295e154,1.2634534834169998e154,1.2635951500047136e154,1.263736800711413e154,1.2638784355424383e154,1.2640200545031255e154,1.2641616575988089e154,1.2643032448348186e154,1.2644448162164824e154,1.2645863717491255e154,1.2647279114380692e154,1.2648694352886326e154,1.265010943306131e154,1.2651524354958777e154,1.2652939118631821e154,1.2654353724133515e154,1.2655768171516895e154,1.2657182460834971e154,1.2658596592140724e154,1.2660010565487102e154,1.266142438092703e154,1.2662838038513393e154,1.2664251538299058e154,1.2665664880336854e154,1.2667078064679585e154,1.2668491091380025e154,1.2669903960490915e154,1.2671316672064972e154,1.2672729226154879e154,1.2674141622813293e154,1.2675553862092839e154,1.2676965944046115e154,1.267837786872569e154,1.2679789636184098e154,1.2681201246473854e154,1.2682612699647432e154,1.2684023995757288e154,1.268543513485584e154,1.2686846116995482e154,1.2688256942228576e154,1.2689667610607457e154,1.2691078122184432e154,1.2692488477011774e154,1.2693898675141731e154,1.269530871662652e154,1.2696718601518333e154,1.2698128329869327e154,1.2699537901731634e154,1.2700947317157355e154,1.2702356576198565e154,1.270376567890731e154,1.27051746253356e154,1.2706583415535427e154,1.2707992049558745e154,1.2709400527457484e154,1.2710808849283548e154,1.2712217015088802e154,1.2713625024925094e154,1.2715032878844234e154,1.2716440576898013e154,1.2717848119138182e154,1.2719255505616471e154,1.2720662736384581e154,1.272206981149418e154,1.2723476730996915e154,1.2724883494944393e154,1.2726290103388205e154,1.2727696556379904e154,1.2729102853971022e154,1.2730508996213056e154,1.2731914983157477e154,1.2733320814855731e154,1.2734726491359228e154,1.2736132012719359e154,1.2737537378987479e154,1.2738942590214916e154,1.2740347646452975e154,1.2741752547752926e154,1.2743157294166016e154,1.2744561885743457e154,1.2745966322536443e154,1.274737060459613e154,1.2748774731973652e154,1.275017870472011e154,1.275158252288658e154,1.2752986186524113e154,1.2754389695683724e154,1.2755793050416406e154,1.2757196250773122e154,1.2758599296804808e154,1.276000218856237e154,1.2761404926096686e154,1.2762807509458612e154,1.2764209938698966e154,1.2765612213868547e154,1.2767014335018118e154,1.2768416302198424e154,1.2769818115460172e154,1.277121977485405e154,1.2772621280430711e154,1.2774022632240783e154,1.2775423830334871e154,1.2776824874763544e154,1.2778225765577347e154,1.2779626502826798e154,1.2781027086562387e154,1.2782427516834576e154,1.27838277936938e154,1.2785227917190464e154,1.2786627887374948e154,1.2788027704297605e154,1.2789427368008756e154,1.2790826878558702e154,1.2792226235997707e154,1.2793625440376014e154,1.279502449174384e154,1.2796423390151369e154,1.279782213564876e154,1.2799220728286144e154,1.2800619168113629e154,1.2802017455181287e154,1.2803415589539171e154,1.2804813571237304e154,1.2806211400325678e154,1.2807609076854263e154,1.2809006600872998e154,1.2810403972431797e154,1.2811801191580545e154,1.2813198258369103e154,1.2814595172847301e154,1.2815991935064943e154,1.2817388545071808e154,1.2818785002917645e154,1.2820181308652178e154,1.2821577462325101e154,1.2822973463986087e154,1.2824369313684773e154,1.2825765011470775e154,1.2827160557393687e154,1.2828555951503062e154,1.2829951193848438e154,1.2831346284479321e154,1.2832741223445194e154,1.2834136010795505e154,1.2835530646579683e154,1.283692513084713e154,1.2838319463647215e154,1.2839713645029288e154,1.2841107675042664e154,1.2842501553736637e154,1.2843895281160473e154,1.2845288857363411e154,1.2846682282394663e154,1.2848075556303413e154,1.2849468679138822e154,1.2850861650950021e154,1.2852254471786117e154,1.2853647141696187e154,1.2855039660729287e154,1.2856432028934436e154,1.285782424636064e154,1.2859216313056869e154,1.2860608229072069e154,1.286199999445516e154,1.2863391609255037e154,1.2864783073520565e154,1.2866174387300582e154,1.2867565550643908e154,1.2868956563599328e154,1.28703474262156e154,1.2871738138541463e154,1.2873128700625625e154,1.2874519112516767e154,1.2875909374263546e154,1.287729948591459e154,1.2878689447518506e154,1.2880079259123866e154,1.2881468920779228e154,1.288285843253311e154,1.2884247794434018e154,1.2885637006530417e154,1.2887026068870758e154,1.2888414981503459e154,1.2889803744476916e154,1.2891192357839498e154,1.2892580821639544e154,1.2893969135925374e154,1.2895357300745275e154,1.2896745316147513e154,1.2898133182180324e154,1.289952089889192e154,1.2900908466330493e154,1.2902295884544197e154,1.2903683153581169e154,1.2905070273489515e154,1.2906457244317323e154,1.2907844066112645e154,1.2909230738923514e154,1.2910617262797937e154,1.291200363778389e154,1.291338986392933e154,1.2914775941282182e154,1.291616186989035e154,1.2917547649801712e154,1.2918933281064117e154,1.2920318763725391e154,1.2921704097833331e154,1.2923089283435717e154,1.2924474320580291e154,1.2925859209314781e154,1.292724394968688e154,1.2928628541744264e154,1.2930012985534575e154,1.2931397281105434e154,1.2932781428504441e154,1.2934165427779161e154,1.2935549278977141e154,1.2936932982145897e154,1.2938316537332927e154,1.2939699944585695e154,1.2941083203951644e154,1.2942466315478194e154,1.2943849279212734e154,1.2945232095202633e154,1.294661476349523e154,1.2947997284137845e154,1.2949379657177764e154,1.2950761882662256e154,1.2952143960638562e154,1.2953525891153895e154,1.2954907674255447e154,1.2956289309990379e154,1.2957670798405835e154,1.2959052139548927e154,1.2960433333466747e154,1.2961814380206356e154,1.2963195279814796e154,1.2964576032339081e154,1.2965956637826199e154,1.2967337096323116e154,1.2968717407876768e154,1.2970097572534074e154,1.2971477590341919e154,1.297285746134717e154,1.2974237185596664e154,1.2975616763137218e154,1.2976996194015622e154,1.2978375478278638e154,1.2979754615973007e154,1.2981133607145446e154,1.298251245184264e154,1.2983891150111263e154,1.2985269701997949e154,1.2986648107549316e154,1.2988026366811954e154,1.2989404479832434e154,1.2990782446657292e154,1.2992160267333047e154,1.2993537941906195e154,1.29949154704232e154,1.2996292852930506e154,1.2997670089474532e154,1.299904718010167e154,1.3000424124858294e154,1.3001800923790745e154,1.3003177576945345e154,1.3004554084368388e154,1.3005930446106148e154,1.300730666220487e154,1.3008682732710776e154,1.3010058657670067e154,1.3011434437128912e154,1.3012810071133463e154,1.3014185559729844e154,1.3015560902964158e154,1.3016936100882475e154,1.3018311153530854e154,1.3019686060955316e154,1.3021060823201867e154,1.3022435440316486e154,1.3023809912345124e154,1.3025184239333717e154,1.3026558421328166e154,1.3027932458374357e154,1.3029306350518144e154,1.3030680097805364e154,1.3032053700281822e154,1.3033427157993305e154,1.3034800470985575e154,1.3036173639304368e154,1.3037546662995398e154,1.3038919542104352e154,1.3040292276676895e154,1.3041664866758669e154,1.3043037312395291e154,1.3044409613632351e154,1.3045781770515418e154,1.3047153783090041e154,1.3048525651401735e154,1.3049897375496e154,1.305126895541831e154,1.3052640391214112e154,1.305401168292883e154,1.3055382830607867e154,1.3056753834296604e154,1.3058124694040387e154,1.3059495409884554e154,1.3060865981874403e154,1.3062236410055224e154,1.3063606694472269e154,1.3064976835170777e154,1.3066346832195958e154,1.3067716685592998e154,1.3069086395407065e154,1.3070455961683293e154,1.3071825384466803e154,1.3073194663802685e154,1.307456379973601e154,1.3075932792311824e154,1.3077301641575146e154,1.3078670347570976e154,1.308003891034429e154,1.308140732994004e154,1.308277560640315e154,1.3084143739778528e154,1.3085511730111054e154,1.3086879577445583e154,1.3088247281826954e154,1.3089614843299973e154,1.3090982261909428e154,1.3092349537700085e154,1.3093716670716683e154,1.3095083661003937e154,1.3096450508606544e154,1.3097817213569173e154,1.3099183775936471e154,1.3100550195753063e154,1.3101916473063547e154,1.3103282607912502e154,1.3104648600344481e154,1.3106014450404018e154,1.3107380158135615e154,1.3108745723583761e154,1.3110111146792918e154,1.311147642780752e154,1.3112841566671985e154,1.3114206563430702e154,1.3115571418128043e154,1.311693613080835e154,1.311830070151595e154,1.311966513029514e154,1.3121029417190197e154,1.3122393562245376e154,1.3123757565504904e154,1.3125121427012992e154,1.3126485146813821e154,1.3127848724951556e154,1.3129212161470335e154,1.3130575456414272e154,1.3131938609827461e154,1.3133301621753972e154,1.3134664492237853e154,1.3136027221323126e154,1.3137389809053794e154,1.3138752255473837e154,1.3140114560627207e154,1.3141476724557842e154,1.3142838747309648e154,1.3144200628926514e154,1.3145562369452304e154,1.3146923968930863e154,1.3148285427406007e154,1.3149646744921532e154,1.3151007921521218e154,1.3152368957248809e154,1.315372985214804e154,1.315509060626261e154,1.315645121963621e154,1.3157811692312496e154,1.3159172024335109e154,1.3160532215747664e154,1.3161892266593753e154,1.3163252176916949e154,1.3164611946760797e154,1.3165971576168826e154,1.3167331065184538e154,1.3168690413851412e154,1.317004962221291e154,1.3171408690312465e154,1.3172767618193494e154,1.3174126405899383e154,1.3175485053473506e154,1.3176843560959205e154,1.3178201928399807e154,1.3179560155838614e154,1.3180918243318901e154,1.3182276190883932e154,1.3183633998576937e154,1.318499166644113e154,1.3186349194519702e154,1.318770658285582e154,1.318906383149263e154,1.3190420940473255e154,1.31917779098408e154,1.319313473963834e154,1.3194491429908935e154,1.319584798069562e154,1.3197204392041408e154,1.3198560663989287e154,1.3199916796582229e154,1.3201272789863181e154,1.3202628643875065e154,1.3203984358660785e154,1.3205339934263222e154,1.3206695370725235e154,1.3208050668089658e154,1.3209405826399307e154,1.3210760845696977e154,1.3212115726025435e154,1.3213470467427434e154,1.3214825069945697e154,1.3216179533622931e154,1.3217533858501818e154,1.3218888044625021e154,1.3220242092035177e154,1.3221596000774904e154,1.32229497708868e154,1.3224303402413437e154,1.3225656895397368e154,1.3227010249881122e154,1.322836346590721e154,1.3229716543518116e154,1.3231069482756306e154,1.3232422283664228e154,1.3233774946284295e154,1.3235127470658915e154,1.3236479856830462e154,1.3237832104841295e154,1.3239184214733747e154,1.3240536186550133e154,1.3241888020332746e154,1.3243239716123853e154,1.3244591273965708e154,1.3245942693900531e154,1.3247293975970535e154,1.32486451202179e154,1.3249996126684787e154,1.3251346995413342e154,1.3252697726445681e154,1.3254048319823905e154,1.3255398775590087e154,1.3256749093786287e154,1.3258099274454534e154,1.3259449317636845e154,1.3260799223375209e154,1.3262148991711593e154,1.3263498622687952e154,1.3264848116346206e154,1.3266197472728267e154,1.3267546691876014e154,1.3268895773831314e154,1.3270244718636006e154,1.3271593526331912e154,1.3272942196960834e154,1.3274290730564545e154,1.3275639127184805e154,1.327698738686335e154,1.3278335509641892e154,1.3279683495562127e154,1.3281031344665724e154,1.3282379056994338e154,1.3283726632589595e154,1.3285074071493109e154,1.328642137374646e154,1.3287768539391222e154,1.3289115568468935e154,1.3290462461021127e154,1.3291809217089301e154,1.3293155836714937e154,1.32945023199395e154,1.3295848666804428e154,1.3297194877351142e154,1.3298540951621037e154,1.3299886889655493e154,1.3301232691495868e154,1.3302578357183496e154,1.330392388675969e154,1.3305269280265747e154,1.3306614537742939e154,1.3307959659232517e154,1.3309304644775714e154,1.331064949441374e154,1.3311994208187781e154,1.3313338786139011e154,1.3314683228308577e154,1.3316027534737604e154,1.3317371705467199e154,1.3318715740538452e154,1.332005963999242e154,1.3321403403870154e154,1.3322747032212677e154,1.3324090525060988e154,1.3325433882456074e154,1.3326777104438893e154,1.3328120191050387e154,1.3329463142331477e154,1.3330805958323063e154,1.3332148639066022e154,1.3333491184601215e154,1.333483359496948e154,1.3336175870211632e154,1.333751801036847e154,1.333886001548077e154,1.3340201885589287e154,1.3341543620734757e154,1.3342885220957895e154,1.3344226686299396e154,1.3345568016799932e154,1.334690921250016e154,1.3348250273440708e154,1.3349591199662194e154,1.3350931991205206e154,1.3352272648110318e154,1.3353613170418083e154,1.3354953558169028e154,1.3356293811403668e154,1.3357633930162491e154,1.335897391448597e154,1.336031376441455e154,1.3361653479988667e154,1.3362993061248725e154,1.3364332508235116e154,1.3365671820988207e154,1.336701099954835e154,1.336835004395587e154,1.3369688954251076e154,1.3371027730474258e154,1.337236637266568e154,1.3373704880865594e154,1.3375043255114226e154,1.3376381495451783e154,1.3377719601918453e154,1.3379057574554403e154,1.338039541339978e154,1.3381733118494711e154],"x":[1.0e300,1.139644162335066e304,2.279188324670132e304,3.4187324870051975e304,4.558276649340263e304,5.69782081167533e304,6.837364974010395e304,7.976909136345461e304,9.116453298680527e304,1.0255997461015592e305,1.1395541623350658e305,1.2535085785685726e305,1.3674629948020791e305,1.4814174110355857e305,1.5953718272690923e305,1.7093262435025988e305,1.8232806597361054e305,1.937235075969612e305,2.0511894922031185e305,2.165143908436625e305,2.2790983246701317e305,2.3930527409036382e305,2.5070071571371448e305,2.6209615733706514e305,2.7349159896041583e305,2.848870405837665e305,2.9628248220711714e305,3.076779238304678e305,3.1907336545381846e305,3.304688070771691e305,3.4186424870051977e305,3.532596903238704e305,3.646551319472211e305,3.760505735705718e305,3.874460151939224e305,3.988414568172731e305,4.102368984406237e305,4.216323400639744e305,4.33027781687325e305,4.444232233106757e305,4.558186649340263e305,4.67214106557377e305,4.7860954818072765e305,4.9000498980407835e305,5.01400431427429e305,5.1279587305077966e305,5.241913146741303e305,5.35586756297481e305,5.469821979208316e305,5.583776395441823e305,5.69773081167533e305,5.811685227908836e305,5.925639644142343e305,6.039594060375849e305,6.153548476609356e305,6.267502892842862e305,6.381457309076369e305,6.495411725309875e305,6.609366141543382e305,6.7233205577768885e305,6.8372749740103955e305,6.951229390243902e305,7.065183806477408e305,7.179138222710915e305,7.293092638944422e305,7.407047055177929e305,7.521001471411436e305,7.634955887644941e305,7.748910303878448e305,7.862864720111955e305,7.976819136345462e305,8.090773552578967e305,8.204727968812474e305,8.318682385045981e305,8.432636801279488e305,8.546591217512994e305,8.6605456337465e305,8.774500049980007e305,8.888454466213514e305,9.00240888244702e305,9.116363298680527e305,9.230317714914034e305,9.34427213114754e305,9.458226547381048e305,9.572180963614553e305,9.68613537984806e305,9.800089796081567e305,9.914044212315074e305,1.002799862854858e306,1.0141953044782086e306,1.0255907461015593e306,1.03698618772491e306,1.0483816293482606e306,1.0597770709716113e306,1.071172512594962e306,1.0825679542183126e306,1.0939633958416632e306,1.1053588374650139e306,1.1167542790883646e306,1.1281497207117153e306,1.139545162335066e306,1.1509406039584165e306,1.1623360455817672e306,1.1737314872051179e306,1.1851269288284686e306,1.1965223704518191e306,1.2079178120751698e306,1.2193132536985205e306,1.2307086953218712e306,1.2421041369452218e306,1.2534995785685725e306,1.2648950201919231e306,1.2762904618152738e306,1.2876859034386244e306,1.2990813450619751e306,1.3104767866853258e306,1.3218722283086765e306,1.3332676699320272e306,1.3446631115553777e306,1.3560585531787284e306,1.3674539948020791e306,1.3788494364254298e306,1.3902448780487803e306,1.401640319672131e306,1.4130357612954816e306,1.4244312029188323e306,1.435826644542183e306,1.4472220861655337e306,1.4586175277888843e306,1.470012969412235e306,1.4814084110355857e306,1.4928038526589364e306,1.5041992942822868e306,1.5155947359056375e306,1.5269901775289882e306,1.538385619152339e306,1.5497810607756896e306,1.5611765023990403e306,1.572571944022391e306,1.5839673856457417e306,1.5953628272690924e306,1.6067582688924428e306,1.6181537105157935e306,1.6295491521391442e306,1.640944593762495e306,1.6523400353858456e306,1.6637354770091962e306,1.675130918632547e306,1.6865263602558976e306,1.697921801879248e306,1.7093172435025987e306,1.7207126851259494e306,1.7321081267493e306,1.7435035683726508e306,1.7548990099960015e306,1.7662944516193522e306,1.777689893242703e306,1.7890853348660536e306,1.800480776489404e306,1.8118762181127547e306,1.8232716597361054e306,1.834667101359456e306,1.8460625429828068e306,1.8574579846061574e306,1.868853426229508e306,1.8802488678528588e306,1.8916443094762095e306,1.90303975109956e306,1.9144351927229106e306,1.9258306343462613e306,1.937226075969612e306,1.9486215175929627e306,1.9600169592163134e306,1.971412400839664e306,1.9828078424630148e306,1.9942032840863652e306,2.005598725709716e306,2.0169941673330666e306,2.0283896089564173e306,2.039785050579768e306,2.0511804922031186e306,2.0625759338264693e306,2.07397137544982e306,2.0853668170731707e306,2.096762258696521e306,2.1081577003198718e306,2.1195531419432225e306,2.1309485835665732e306,2.142344025189924e306,2.1537394668132746e306,2.1651349084366253e306,2.176530350059976e306,2.1879257916833264e306,2.199321233306677e306,2.2107166749300278e306,2.2221121165533785e306,2.233507558176729e306,2.24490299980008e306,2.2562984414234305e306,2.2676938830467812e306,2.279089324670132e306,2.2904847662934823e306,2.301880207916833e306,2.3132756495401837e306,2.3246710911635344e306,2.336066532786885e306,2.3474619744102358e306,2.3588574160335865e306,2.3702528576569372e306,2.3816482992802876e306,2.3930437409036383e306,2.404439182526989e306,2.4158346241503397e306,2.4272300657736904e306,2.438625507397041e306,2.4500209490203917e306,2.4614163906437424e306,2.472811832267093e306,2.4842072738904435e306,2.4956027155137942e306,2.506998157137145e306,2.5183935987604956e306,2.5297890403838463e306,2.541184482007197e306,2.5525799236305477e306,2.5639753652538984e306,2.5753708068772488e306,2.5867662485005995e306,2.5981616901239502e306,2.609557131747301e306,2.6209525733706516e306,2.6323480149940023e306,2.643743456617353e306,2.6551388982407036e306,2.6665343398640543e306,2.6779297814874047e306,2.6893252231107554e306,2.700720664734106e306,2.7121161063574568e306,2.7235115479808075e306,2.7349069896041582e306,2.746302431227509e306,2.7576978728508596e306,2.76909331447421e306,2.7804887560975607e306,2.7918841977209114e306,2.803279639344262e306,2.8146750809676124e306,2.826070522590963e306,2.837465964214314e306,2.8488614058376645e306,2.860256847461015e306,2.871652289084366e306,2.8830477307077166e306,2.8944431723310673e306,2.905838613954418e306,2.917234055577769e306,2.9286294972011194e306,2.94002493882447e306,2.951420380447821e306,2.9628158220711715e306,2.974211263694522e306,2.985606705317873e306,2.9970021469412236e306,3.0083975885645736e306,3.0197930301879243e306,3.031188471811275e306,3.042583913434626e306,3.0539793550579764e306,3.065374796681327e306,3.076770238304678e306,3.0881656799280285e306,3.099561121551379e306,3.11095656317473e306,3.1223520047980806e306,3.133747446421431e306,3.145142888044782e306,3.1565383296681327e306,3.1679337712914834e306,3.179329212914834e306,3.190724654538185e306,3.202120096161535e306,3.2135155377848855e306,3.224910979408236e306,3.236306421031587e306,3.2477018626549376e306,3.2590973042782883e306,3.270492745901639e306,3.28188818752499e306,3.2932836291483404e306,3.304679070771691e306,3.316074512395042e306,3.3274699540183925e306,3.338865395641743e306,3.350260837265094e306,3.3616562788884446e306,3.373051720511795e306,3.384447162135146e306,3.395842603758496e306,3.407238045381847e306,3.4186334870051974e306,3.430028928628548e306,3.441424370251899e306,3.4528198118752495e306,3.4642152534986e306,3.475610695121951e306,3.4870061367453016e306,3.498401578368652e306,3.509797019992003e306,3.521192461615354e306,3.5325879032387044e306,3.543983344862055e306,3.555378786485406e306,3.5667742281087565e306,3.578169669732107e306,3.589565111355457e306,3.600960552978808e306,3.6123559946021586e306,3.6237514362255093e306,3.63514687784886e306,3.646542319472211e306,3.6579377610955614e306,3.669333202718912e306,3.680728644342263e306,3.6921240859656135e306,3.703519527588964e306,3.714914969212315e306,3.7263104108356656e306,3.737705852459016e306,3.749101294082367e306,3.7604967357057177e306,3.7718921773290684e306,3.7832876189524184e306,3.794683060575769e306,3.80607850219912e306,3.8174739438224705e306,3.828869385445821e306,3.840264827069172e306,3.8516602686925226e306,3.8630557103158733e306,3.874451151939224e306,3.885846593562575e306,3.8972420351859254e306,3.908637476809276e306,3.920032918432627e306,3.9314283600559775e306,3.942823801679328e306,3.954219243302679e306,3.9656146849260296e306,3.9770101265493796e306,3.9884055681727303e306,3.999801009796081e306,4.011196451419432e306,4.0225918930427824e306,4.033987334666133e306,4.045382776289484e306,4.0567782179128345e306,4.068173659536185e306,4.079569101159536e306,4.0909645427828866e306,4.102359984406237e306,4.113755426029588e306,4.125150867652939e306,4.1365463092762894e306,4.14794175089964e306,4.159337192522991e306,4.170732634146341e306,4.1821280757696915e306,4.193523517393042e306,4.204918959016393e306,4.2163144006397436e306,4.2277098422630943e306,4.239105283886445e306,4.250500725509796e306,4.2618961671331464e306,4.273291608756497e306,4.284687050379848e306,4.2960824920031985e306,4.307477933626549e306,4.3188733752499e306,4.3302688168732506e306,4.341664258496601e306,4.353059700119952e306,4.364455141743302e306,4.375850583366653e306,4.3872460249900034e306,4.398641466613354e306,4.410036908236705e306,4.4214323498600555e306,4.432827791483406e306,4.444223233106757e306,4.4556186747301076e306,4.467014116353458e306,4.478409557976809e306,4.48980499960016e306,4.5012004412235104e306,4.512595882846861e306,4.523991324470212e306,4.5353867660935625e306,4.546782207716913e306,4.558177649340263e306,4.569573090963614e306,4.5809685325869646e306,4.5923639742103153e306,4.603759415833666e306,4.615154857457017e306,4.6265502990803674e306,4.637945740703718e306,4.649341182327069e306,4.6607366239504195e306,4.67213206557377e306,4.683527507197121e306,4.6949229488204716e306,4.706318390443822e306,4.717713832067173e306,4.7291092736905237e306,4.7405047153138744e306,4.7519001569372245e306,4.763295598560575e306,4.774691040183926e306,4.7860864818072765e306,4.797481923430627e306,4.808877365053978e306,4.8202728066773286e306,4.8316682483006793e306,4.84306368992403e306,4.854459131547381e306,4.8658545731707314e306,4.877250014794082e306,4.888645456417433e306,4.9000408980407835e306,4.911436339664134e306,4.922831781287485e306,4.9342272229108356e306,4.9456226645341857e306,4.9570181061575363e306,4.968413547780887e306,4.979808989404238e306,4.9912044310275884e306,5.002599872650939e306,5.01399531427429e306,5.0253907558976405e306,5.036786197520991e306,5.048181639144342e306,5.0595770807676926e306,5.070972522391043e306,5.082367964014394e306,5.093763405637745e306,5.1051588472610954e306,5.116554288884446e306,5.127949730507797e306,5.139345172131147e306,5.1507406137544976e306,5.162136055377848e306,5.173531497001199e306,5.1849269386245496e306,5.1963223802479003e306,5.207717821871251e306,5.219113263494602e306,5.2305087051179524e306,5.241904146741303e306,5.253299588364654e306,5.2646950299880045e306,5.276090471611355e306,5.287485913234706e306,5.2988813548580566e306,5.310276796481407e306,5.321672238104758e306,5.333067679728108e306,5.344463121351459e306,5.3558585629748094e306,5.36725400459816e306,5.378649446221511e306,5.3900448878448615e306,5.401440329468212e306,5.412835771091563e306,5.4242312127149136e306,5.4356266543382643e306,5.447022095961615e306,5.458417537584966e306,5.4698129792083164e306,5.481208420831667e306,5.492603862455018e306,5.5039993040783685e306,5.515394745701719e306,5.526790187325069e306,5.53818562894842e306,5.5495810705717706e306,5.5609765121951213e306,5.572371953818472e306,5.583767395441823e306,5.5951628370651734e306,5.606558278688524e306,5.617953720311875e306,5.629349161935225e306,5.640744603558576e306,5.652140045181926e306,5.663535486805278e306,5.674930928428628e306,5.686326370051979e306,5.697721811675329e306,5.70911725329868e306,5.72051269492203e306,5.731908136545382e306,5.743303578168732e306,5.754699019792083e306,5.766094461415433e306,5.777489903038785e306,5.788885344662135e306,5.800280786285486e306,5.811676227908836e306,5.823071669532186e306,5.834467111155537e306,5.845862552778887e306,5.857257994402239e306,5.868653436025589e306,5.88004887764894e306,5.89144431927229e306,5.902839760895642e306,5.914235202518992e306,5.925630644142343e306,5.937026085765693e306,5.948421527389044e306,5.959816969012394e306,5.971212410635746e306,5.982607852259096e306,5.994003293882447e306,6.005398735505797e306,6.016794177129147e306,6.028189618752499e306,6.039585060375849e306,6.0509805019992e306,6.06237594362255e306,6.073771385245901e306,6.085166826869251e306,6.096562268492603e306,6.107957710115953e306,6.119353151739304e306,6.130748593362654e306,6.142144034986006e306,6.153539476609356e306,6.164934918232707e306,6.176330359856057e306,6.187725801479408e306,6.199121243102758e306,6.210516684726108e306,6.22191212634946e306,6.23330756797281e306,6.244703009596161e306,6.256098451219511e306,6.267493892842863e306,6.278889334466213e306,6.290284776089564e306,6.301680217712914e306,6.313075659336265e306,6.324471100959615e306,6.335866542582967e306,6.347261984206317e306,6.358657425829668e306,6.370052867453018e306,6.38144830907637e306,6.39284375069972e306,6.40423919232307e306,6.415634633946421e306,6.427030075569771e306,6.438425517193122e306,6.449820958816472e306,6.461216400439824e306,6.472611842063174e306,6.484007283686525e306,6.495402725309875e306,6.506798166933227e306,6.518193608556577e306,6.529589050179928e306,6.540984491803278e306,6.552379933426629e306,6.56377537504998e306,6.575170816673331e306,6.586566258296681e306,6.597961699920031e306,6.609357141543382e306,6.620752583166732e306,6.632148024790084e306,6.643543466413434e306,6.654938908036785e306,6.666334349660135e306,6.677729791283486e306,6.689125232906836e306,6.700520674530188e306,6.711916116153538e306,6.723311557776889e306,6.734706999400239e306,6.74610244102359e306,6.757497882646941e306,6.768893324270292e306,6.780288765893642e306,6.791684207516992e306,6.803079649140343e306,6.814475090763693e306,6.825870532387045e306,6.837265974010395e306,6.848661415633746e306,6.860056857257096e306,6.871452298880448e306,6.882847740503798e306,6.894243182127149e306,6.905638623750499e306,6.91703406537385e306,6.9284295069972e306,6.939824948620552e306,6.951220390243902e306,6.962615831867253e306,6.974011273490603e306,6.985406715113953e306,6.996802156737305e306,7.008197598360655e306,7.019593039984006e306,7.030988481607356e306,7.042383923230707e306,7.053779364854057e306,7.065174806477409e306,7.076570248100759e306,7.08796568972411e306,7.09936113134746e306,7.110756572970812e306,7.122152014594162e306,7.133547456217513e306,7.144942897840863e306,7.156338339464214e306,7.167733781087564e306,7.179129222710914e306,7.190524664334266e306,7.201920105957616e306,7.213315547580967e306,7.224710989204317e306,7.236106430827669e306,7.247501872451019e306,7.25889731407437e306,7.27029275569772e306,7.281688197321071e306,7.293083638944421e306,7.304479080567773e306,7.315874522191123e306,7.327269963814474e306,7.338665405437824e306,7.350060847061176e306,7.361456288684526e306,7.372851730307876e306,7.384247171931227e306,7.395642613554577e306,7.407038055177928e306,7.418433496801278e306,7.42982893842463e306,7.44122438004798e306,7.452619821671331e306,7.464015263294681e306,7.475410704918033e306,7.486806146541383e306,7.498201588164734e306,7.509597029788084e306,7.520992471411435e306,7.532387913034785e306,7.543783354658137e306,7.555178796281487e306,7.566574237904837e306,7.577969679528188e306,7.589365121151538e306,7.60076056277489e306,7.61215600439824e306,7.623551446021591e306,7.634946887644941e306,7.646342329268292e306,7.657737770891642e306,7.669133212514994e306,7.680528654138344e306,7.691924095761695e306,7.703319537385045e306,7.714714979008397e306,7.726110420631747e306,7.737505862255098e306,7.748901303878448e306,7.760296745501798e306,7.77169218712515e306,7.7830876287485e306,7.794483070371851e306,7.805878511995201e306,7.817273953618552e306,7.828669395241902e306,7.840064836865254e306,7.851460278488604e306,7.862855720111955e306,7.874251161735305e306,7.885646603358656e306,7.897042044982006e306,7.908437486605358e306,7.919832928228708e306,7.931228369852059e306,7.942623811475409e306,7.954019253098759e306,7.96541469472211e306,7.976810136345461e306,7.988205577968812e306,7.999601019592162e306,8.010996461215513e306,8.022391902838863e306,8.033787344462215e306,8.045182786085565e306,8.056578227708916e306,8.067973669332266e306,8.079369110955618e306,8.090764552578968e306,8.102159994202319e306,8.113555435825669e306,8.12495087744902e306,8.13634631907237e306,8.14774176069572e306,8.159137202319072e306,8.170532643942422e306,8.181928085565773e306,8.193323527189123e306,8.204718968812475e306,8.216114410435825e306,8.227509852059176e306,8.238905293682526e306,8.250300735305877e306,8.261696176929227e306,8.273091618552579e306,8.284487060175929e306,8.29588250179928e306,8.30727794342263e306,8.318673385045982e306,8.330068826669332e306,8.341464268292682e306,8.352859709916033e306,8.364255151539383e306,8.375650593162734e306,8.387046034786084e306,8.398441476409436e306,8.409836918032786e306,8.421232359656137e306,8.432627801279487e306,8.444023242902839e306,8.455418684526189e306,8.46681412614954e306,8.47820956777289e306,8.489605009396241e306,8.501000451019591e306,8.512395892642943e306,8.523791334266293e306,8.535186775889643e306,8.546582217512994e306,8.557977659136344e306,8.569373100759696e306,8.580768542383046e306,8.592163984006397e306,8.603559425629747e306,8.614954867253098e306,8.626350308876448e306,8.6377457504998e306,8.64914119212315e306,8.660536633746501e306,8.671932075369851e306,8.683327516993203e306,8.694722958616553e306,8.706118400239904e306,8.717513841863254e306,8.728909283486604e306,8.740304725109955e306,8.751700166733305e306,8.763095608356657e306,8.774491049980007e306,8.785886491603358e306,8.797281933226708e306,8.80867737485006e306,8.82007281647341e306,8.831468258096761e306,8.842863699720111e306,8.854259141343462e306,8.865654582966812e306,8.877050024590164e306,8.888445466213514e306,8.899840907836865e306,8.911236349460215e306,8.922631791083565e306,8.934027232706917e306,8.945422674330267e306,8.956818115953618e306,8.968213557576968e306,8.97960899920032e306,8.99100444082367e306,9.002399882447021e306,9.013795324070371e306,9.025190765693722e306,9.036586207317072e306,9.047981648940424e306,9.059377090563774e306,9.070772532187125e306,9.082167973810475e306,9.093563415433826e306,9.104958857057176e306,9.116354298680527e306,9.127749740303878e306,9.139145181927228e306,9.150540623550579e306,9.161936065173929e306,9.17333150679728e306,9.184726948420631e306,9.196122390043982e306,9.207517831667332e306,9.218913273290683e306,9.230308714914033e306,9.241704156537385e306,9.253099598160735e306,9.264495039784086e306,9.275890481407436e306,9.287285923030788e306,9.298681364654138e306,9.310076806277488e306,9.321472247900839e306,9.332867689524189e306,9.34426313114754e306,9.35565857277089e306,9.367054014394242e306,9.378449456017592e306,9.389844897640943e306,9.401240339264293e306,9.412635780887645e306,9.424031222510995e306,9.435426664134346e306,9.446822105757696e306,9.458217547381047e306,9.469612989004397e306,9.481008430627749e306,9.492403872251099e306,9.503799313874449e306,9.5151947554978e306,9.52659019712115e306,9.537985638744502e306,9.549381080367852e306,9.560776521991203e306,9.572171963614553e306,9.583567405237904e306,9.594962846861254e306,9.606358288484606e306,9.617753730107956e306,9.629149171731307e306,9.640544613354657e306,9.651940054978009e306,9.663335496601359e306,9.67473093822471e306,9.68612637984806e306,9.69752182147141e306,9.708917263094761e306,9.720312704718112e306,9.731708146341463e306,9.743103587964813e306,9.754499029588164e306,9.765894471211514e306,9.777289912834866e306,9.788685354458216e306,9.800080796081567e306,9.811476237704917e306,9.822871679328268e306,9.834267120951618e306,9.84566256257497e306,9.85705800419832e306,9.868453445821671e306,9.879848887445021e306,9.891244329068371e306,9.902639770691723e306,9.914035212315073e306,9.925430653938424e306,9.936826095561774e306,9.948221537185125e306,9.959616978808475e306,9.971012420431827e306,9.982407862055177e306,9.993803303678528e306,1.0005198745301878e307,1.001659418692523e307,1.002798962854858e307,1.0039385070171931e307,1.0050780511795281e307,1.0062175953418632e307,1.0073571395041982e307,1.0084966836665333e307,1.0096362278288684e307,1.0107757719912034e307,1.0119153161535385e307,1.0130548603158735e307,1.0141944044782087e307,1.0153339486405437e307,1.0164734928028788e307,1.0176130369652138e307,1.018752581127549e307,1.019892125289884e307,1.0210316694522191e307,1.0221712136145541e307,1.0233107577768892e307,1.0244503019392242e307,1.0255898461015594e307,1.0267293902638944e307,1.0278689344262294e307,1.0290084785885645e307,1.0301480227508995e307,1.0312875669132346e307,1.0324271110755696e307,1.0335666552379048e307,1.0347061994002398e307,1.0358457435625749e307,1.0369852877249099e307,1.038124831887245e307,1.0392643760495801e307,1.0404039202119152e307,1.0415434643742502e307,1.0426830085365853e307,1.0438225526989203e307,1.0449620968612555e307,1.0461016410235905e307,1.0472411851859255e307,1.0483807293482606e307,1.0495202735105956e307,1.0506598176729308e307,1.0517993618352658e307,1.0529389059976009e307,1.0540784501599359e307,1.055217994322271e307,1.056357538484606e307,1.0574970826469412e307,1.0586366268092762e307,1.0597761709716113e307,1.0609157151339463e307,1.0620552592962815e307,1.0631948034586165e307,1.0643343476209516e307,1.0654738917832866e307,1.0666134359456216e307,1.0677529801079567e307,1.0688925242702918e307,1.0700320684326269e307,1.0711716125949619e307,1.072311156757297e307,1.073450700919632e307,1.0745902450819672e307,1.0757297892443022e307,1.0768693334066373e307,1.0780088775689723e307,1.0791484217313074e307,1.0802879658936424e307,1.0814275100559776e307,1.0825670542183126e307,1.0837065983806477e307,1.0848461425429827e307,1.0859856867053177e307,1.0871252308676529e307,1.0882647750299879e307,1.089404319192323e307,1.090543863354658e307,1.0916834075169931e307,1.0928229516793281e307,1.0939624958416633e307,1.0951020400039983e307,1.0962415841663334e307,1.0973811283286684e307,1.0985206724910036e307,1.0996602166533386e307,1.1007997608156737e307,1.1019393049780087e307,1.1030788491403438e307,1.1042183933026788e307,1.1053579374650139e307,1.106497481627349e307,1.107637025789684e307,1.1087765699520191e307,1.1099161141143541e307,1.1110556582766893e307,1.1121952024390243e307,1.1133347466013594e307,1.1144742907636944e307,1.1156138349260295e307,1.1167533790883645e307,1.1178929232506997e307,1.1190324674130347e307,1.1201720115753698e307,1.1213115557377048e307,1.12245109990004e307,1.123590644062375e307,1.12473018822471e307,1.125869732387045e307,1.12700927654938e307,1.1281488207117152e307,1.1292883648740504e307,1.1304279090363853e307,1.1315674531987204e307,1.1327069973610555e307,1.1338465415233907e307,1.1349860856857255e307,1.1361256298480607e307,1.1372651740103958e307,1.138404718172731e307,1.1395442623350658e307,1.140683806497401e307,1.141823350659736e307,1.1429628948220712e307,1.144102438984406e307,1.1452419831467412e307,1.1463815273090764e307,1.1475210714714112e307,1.1486606156337464e307,1.1498001597960815e307,1.1509397039584166e307,1.1520792481207515e307,1.1532187922830866e307,1.1543583364454218e307,1.155497880607757e307,1.1566374247700918e307,1.157776968932427e307,1.158916513094762e307,1.1600560572570972e307,1.161195601419432e307,1.1623351455817672e307,1.1634746897441023e307,1.1646142339064372e307,1.1657537780687724e307,1.1668933222311075e307,1.1680328663934426e307,1.1691724105557775e307,1.1703119547181126e307,1.1714514988804478e307,1.172591043042783e307,1.1737305872051178e307,1.174870131367453e307,1.176009675529788e307,1.1771492196921232e307,1.178288763854458e307,1.1794283080167932e307,1.1805678521791283e307,1.1817073963414634e307,1.1828469405037983e307,1.1839864846661335e307,1.1851260288284686e307,1.1862655729908035e307,1.1874051171531386e307,1.1885446613154737e307,1.1896842054778089e307,1.1908237496401438e307,1.191963293802479e307,1.193102837964814e307,1.1942423821271492e307,1.195381926289484e307,1.1965214704518192e307,1.1976610146141543e307,1.1988005587764894e307,1.1999401029388243e307,1.2010796471011594e307,1.2022191912634946e307,1.2033587354258295e307,1.2044982795881646e307,1.2056378237504997e307,1.2067773679128349e307,1.2079169120751697e307,1.2090564562375049e307,1.21019600039984e307,1.2113355445621751e307,1.21247508872451e307,1.2136146328868451e307,1.2147541770491803e307,1.2158937212115154e307,1.2170332653738503e307,1.2181728095361854e307,1.2193123536985206e307,1.2204518978608557e307,1.2215914420231906e307,1.2227309861855257e307,1.2238705303478608e307,1.2250100745101957e307,1.2261496186725309e307,1.227289162834866e307,1.228428706997201e307,1.229568251159536e307,1.2307077953218711e307,1.2318473394842063e307,1.2329868836465414e307,1.2341264278088763e307,1.2352659719712114e307,1.2364055161335465e307,1.2375450602958817e307,1.2386846044582166e307,1.2398241486205517e307,1.2409636927828868e307,1.2421032369452217e307,1.2432427811075568e307,1.244382325269892e307,1.245521869432227e307,1.246661413594562e307,1.247800957756897e307,1.2489405019192322e307,1.2500800460815674e307,1.2512195902439023e307,1.2523591344062374e307,1.2534986785685725e307,1.2546382227309077e307,1.2557777668932425e307,1.2569173110555777e307,1.2580568552179128e307,1.259196399380248e307,1.2603359435425828e307,1.261475487704918e307,1.262615031867253e307,1.263754576029588e307,1.264894120191923e307,1.2660336643542582e307,1.2671732085165934e307,1.2683127526789282e307,1.2694522968412634e307,1.2705918410035985e307,1.2717313851659336e307,1.2728709293282685e307,1.2740104734906036e307,1.2751500176529388e307,1.276289561815274e307,1.2774291059776088e307,1.278568650139944e307,1.279708194302279e307,1.280847738464614e307,1.281987282626949e307,1.2831268267892842e307,1.2842663709516193e307,1.2854059151139542e307,1.2865454592762893e307,1.2876850034386245e307,1.2888245476009596e307,1.2899640917632945e307,1.2911036359256296e307,1.2922431800879648e307,1.2933827242503e307,1.2945222684126348e307,1.29566181257497e307,1.296801356737305e307,1.2979409008996402e307,1.299080445061975e307,1.3002199892243102e307,1.3013595333866453e307,1.3024990775489802e307,1.3036386217113153e307,1.3047781658736505e307,1.3059177100359856e307,1.3070572541983205e307,1.3081967983606556e307,1.3093363425229907e307,1.3104758866853259e307,1.3116154308476608e307,1.312754975009996e307,1.313894519172331e307,1.3150340633346662e307,1.316173607497001e307,1.3173131516593362e307,1.3184526958216713e307,1.3195922399840062e307,1.3207317841463413e307,1.3218713283086764e307,1.3230108724710116e307,1.3241504166333465e307,1.3252899607956816e307,1.3264295049580167e307,1.3275690491203519e307,1.3287085932826867e307,1.3298481374450219e307,1.330987681607357e307,1.3321272257696921e307,1.333266769932027e307,1.3344063140943621e307,1.3355458582566973e307,1.3366854024190324e307,1.3378249465813673e307,1.3389644907437024e307,1.3401040349060376e307,1.3412435790683724e307,1.3423831232307076e307,1.3435226673930427e307,1.3446622115553778e307,1.3458017557177127e307,1.3469412998800478e307,1.348080844042383e307,1.349220388204718e307,1.350359932367053e307,1.3514994765293881e307,1.3526390206917233e307,1.3537785648540584e307,1.3549181090163933e307,1.3560576531787284e307,1.3571971973410635e307,1.3583367415033984e307,1.3594762856657336e307,1.3606158298280687e307,1.3617553739904038e307,1.3628949181527387e307,1.3640344623150738e307,1.365174006477409e307,1.366313550639744e307,1.367453094802079e307,1.368592638964414e307,1.3697321831267492e307,1.3708717272890844e307,1.3720112714514193e307,1.3731508156137544e307,1.3742903597760895e307,1.3754299039384247e307,1.3765694481007595e307,1.3777089922630947e307,1.3788485364254298e307,1.3799880805877647e307,1.3811276247500998e307,1.382267168912435e307,1.38340671307477e307,1.384546257237105e307,1.38568580139944e307,1.3868253455617752e307,1.3879648897241104e307,1.3891044338864452e307,1.3902439780487804e307,1.3913835222111155e307,1.3925230663734506e307,1.3936626105357855e307,1.3948021546981206e307,1.3959416988604558e307,1.3970812430227907e307,1.3982207871851258e307,1.399360331347461e307,1.400499875509796e307,1.401639419672131e307,1.402778963834466e307,1.4039185079968012e307,1.4050580521591363e307,1.4061975963214712e307,1.4073371404838063e307,1.4084766846461415e307,1.4096162288084766e307,1.4107557729708115e307,1.4118953171331466e307,1.4130348612954818e307,1.414174405457817e307,1.4153139496201518e307,1.416453493782487e307,1.417593037944822e307,1.418732582107157e307,1.419872126269492e307,1.4210116704318272e307,1.4221512145941623e307,1.4232907587564972e307,1.4244303029188323e307,1.4255698470811675e307,1.4267093912435026e307,1.4278489354058375e307,1.4289884795681726e307,1.4301280237305077e307,1.4312675678928429e307,1.4324071120551778e307,1.433546656217513e307,1.434686200379848e307,1.435825744542183e307,1.436965288704518e307,1.4381048328668532e307,1.4392443770291883e307,1.4403839211915232e307,1.4415234653538583e307,1.4426630095161934e307,1.4438025536785286e307,1.4449420978408635e307,1.4460816420031986e307,1.4472211861655337e307,1.4483607303278689e307,1.4495002744902037e307,1.4506398186525389e307,1.451779362814874e307,1.4529189069772091e307,1.454058451139544e307,1.4551979953018791e307,1.4563375394642143e307,1.4574770836265492e307,1.4586166277888843e307,1.4597561719512194e307,1.4608957161135546e307,1.4620352602758894e307,1.4631748044382246e307,1.4643143486005597e307,1.4654538927628948e307,1.4665934369252297e307,1.4677329810875648e307,1.4688725252499e307,1.470012069412235e307,1.47115161357457e307,1.4722911577369051e307,1.4734307018992403e307,1.4745702460615751e307,1.4757097902239103e307,1.4768493343862454e307,1.4779888785485805e307,1.4791284227109154e307,1.4802679668732506e307,1.4814075110355857e307,1.4825470551979208e307,1.4836865993602557e307,1.4848261435225908e307,1.485965687684926e307,1.487105231847261e307,1.488244776009596e307,1.489384320171931e307,1.4905238643342662e307,1.4916634084966014e307,1.4928029526589363e307,1.4939424968212714e307,1.4950820409836065e307,1.4962215851459414e307,1.4973611293082765e307,1.4985006734706117e307,1.4996402176329468e307,1.5007797617952817e307,1.5019193059576168e307,1.503058850119952e307,1.504198394282287e307,1.505337938444622e307,1.506477482606957e307,1.5076170267692922e307,1.5087565709316274e307,1.5098961150939622e307,1.5110356592562974e307,1.5121752034186325e307,1.5133147475809674e307,1.5144542917433025e307,1.5155938359056376e307,1.5167333800679728e307,1.5178729242303077e307,1.5190124683926428e307,1.520152012554978e307,1.521291556717313e307,1.522431100879648e307,1.523570645041983e307,1.5247101892043182e307,1.5258497333666533e307,1.5269892775289882e307,1.5281288216913233e307,1.5292683658536585e307,1.5304079100159936e307,1.5315474541783285e307,1.5326869983406636e307,1.5338265425029988e307,1.5349660866653336e307,1.5361056308276688e307,1.537245174990004e307,1.538384719152339e307,1.539524263314674e307,1.540663807477009e307,1.5418033516393442e307,1.5429428958016793e307,1.5440824399640142e307,1.5452219841263493e307,1.5463615282886845e307,1.5475010724510196e307,1.5486406166133545e307,1.5497801607756896e307,1.5509197049380247e307,1.5520592491003596e307,1.5531987932626948e307,1.55433833742503e307,1.555477881587365e307,1.5566174257497e307,1.557756969912035e307,1.5588965140743702e307,1.5600360582367053e307,1.5611756023990402e307,1.5623151465613753e307,1.5634546907237104e307,1.5645942348860456e307,1.5657337790483805e307,1.5668733232107156e307,1.5680128673730507e307,1.5691524115353859e307,1.5702919556977207e307,1.5714314998600559e307,1.572571044022391e307,1.573710588184726e307,1.574850132347061e307,1.5759896765093961e307,1.5771292206717313e307,1.5782687648340662e307,1.5794083089964013e307,1.5805478531587364e307,1.5816873973210716e307,1.5828269414834064e307,1.5839664856457416e307,1.5851060298080767e307,1.5862455739704118e307,1.5873851181327467e307,1.5885246622950818e307,1.589664206457417e307,1.5908037506197519e307,1.591943294782087e307,1.5930828389444221e307,1.5942223831067573e307,1.5953619272690921e307,1.5965014714314273e307,1.5976410155937624e307,1.5987805597560975e307,1.5999201039184324e307,1.6010596480807675e307,1.6021991922431027e307,1.6033387364054378e307,1.6044782805677727e307,1.6056178247301078e307,1.606757368892443e307,1.607896913054778e307,1.609036457217113e307,1.610176001379448e307,1.6113155455417832e307,1.612455089704118e307,1.6135946338664533e307,1.6147341780287884e307,1.6158737221911235e307,1.6170132663534584e307,1.6181528105157935e307,1.6192923546781287e307,1.6204318988404638e307,1.6215714430027987e307,1.6227109871651338e307,1.623850531327469e307,1.624990075489804e307,1.626129619652139e307,1.627269163814474e307,1.6284087079768092e307,1.629548252139144e307,1.6306877963014792e307,1.6318273404638144e307,1.6329668846261495e307,1.6341064287884844e307,1.6352459729508195e307,1.6363855171131546e307,1.6375250612754898e307,1.6386646054378247e307,1.6398041496001598e307,1.640943693762495e307,1.64208323792483e307,1.643222782087165e307,1.6443623262495e307,1.6455018704118352e307,1.6466414145741703e307,1.6477809587365052e307,1.6489205028988403e307,1.6500600470611755e307,1.6511995912235104e307,1.6523391353858455e307,1.6534786795481806e307,1.6546182237105158e307,1.6557577678728506e307,1.6568973120351858e307,1.658036856197521e307,1.659176400359856e307,1.660315944522191e307,1.661455488684526e307,1.6625950328468612e307,1.6637345770091963e307,1.6648741211715312e307,1.6660136653338663e307,1.6671532094962015e307,1.6682927536585363e307,1.6694322978208715e307,1.6705718419832066e307,1.6717113861455417e307,1.6728509303078766e307,1.6739904744702118e307,1.675130018632547e307,1.676269562794882e307,1.677409106957217e307,1.678548651119552e307,1.6796881952818872e307,1.6808277394442223e307,1.6819672836065572e307,1.6831068277688923e307,1.6842463719312274e307,1.6853859160935626e307,1.6865254602558975e307,1.6876650044182326e307,1.6888045485805677e307,1.6899440927429026e307,1.6910836369052377e307,1.6922231810675729e307,1.693362725229908e307,1.694502269392243e307,1.695641813554578e307,1.6967813577169131e307,1.6979209018792483e307,1.6990604460415832e307,1.7001999902039183e307,1.7013395343662534e307,1.7024790785285886e307,1.7036186226909234e307,1.7047581668532586e307,1.7058977110155937e307,1.7070372551779286e307,1.7081767993402637e307,1.7093163435025988e307,1.710455887664934e307,1.7115954318272689e307,1.712734975989604e307,1.713874520151939e307,1.7150140643142743e307,1.7161536084766091e307,1.7172931526389443e307,1.7184326968012794e307,1.7195722409636145e307,1.7207117851259494e307,1.7218513292882845e307,1.7229908734506197e307,1.7241304176129548e307,1.7252699617752897e307,1.7264095059376248e307,1.72754905009996e307,1.7286885942622948e307,1.72982813842463e307,1.730967682586965e307,1.7321072267493002e307,1.733246770911635e307,1.7343863150739703e307,1.7355258592363054e307,1.7366654033986405e307,1.7378049475609754e307,1.7389444917233105e307,1.7400840358856457e307,1.7412235800479808e307,1.7423631242103157e307,1.7435026683726508e307,1.744642212534986e307,1.7457817566973208e307,1.746921300859656e307,1.748060845021991e307,1.7492003891843262e307,1.750339933346661e307,1.7514794775089962e307,1.7526190216713314e307,1.7537585658336665e307,1.7548981099960014e307,1.7560376541583365e307,1.7571771983206716e307,1.7583167424830068e307,1.7594562866453417e307,1.7605958308076768e307,1.761735374970012e307,1.762874919132347e307,1.764014463294682e307,1.765154007457017e307,1.7662935516193522e307,1.767433095781687e307,1.7685726399440222e307,1.7697121841063573e307,1.7708517282686925e307,1.7719912724310274e307,1.7731308165933625e307,1.7742703607556976e307,1.7754099049180328e307,1.7765494490803676e307,1.7776889932427028e307,1.778828537405038e307,1.779968081567373e307,1.781107625729708e307,1.782247169892043e307,1.7833867140543782e307,1.784526258216713e307,1.7856658023790482e307,1.7868053465413833e307,1.7879448907037185e307,1.7890844348660533e307,1.7902239790283885e307,1.7913635231907236e307,1.7925030673530587e307,1.7936426115153936e307,1.7947821556777288e307,1.795921699840064e307,1.797061244002399e307,1.798200788164734e307,1.799340332327069e307,1.8004798764894042e307,1.8016194206517393e307,1.8027589648140742e307,1.8038985089764093e307,1.8050380531387444e307,1.8061775973010793e307,1.8073171414634145e307,1.8084566856257496e307,1.8095962297880847e307,1.8107357739504196e307,1.8118753181127547e307,1.8130148622750899e307,1.814154406437425e307,1.81529395059976e307,1.816433494762095e307,1.8175730389244301e307,1.8187125830867653e307,1.8198521272491002e307,1.8209916714114353e307,1.8221312155737704e307,1.8232707597361053e307,1.8244103038984404e307,1.8255498480607756e307,1.8266893922231107e307,1.8278289363854456e307,1.8289684805477807e307,1.8301080247101158e307,1.831247568872451e307,1.8323871130347859e307,1.833526657197121e307,1.834666201359456e307,1.8358057455217913e307,1.8369452896841261e307,1.8380848338464613e307,1.8392243780087964e307,1.8403639221711315e307,1.8415034663334664e307,1.8426430104958015e307,1.8437825546581367e307,1.8449220988204716e307,1.8460616429828067e307,1.8472011871451418e307,1.848340731307477e307,1.8494802754698118e307,1.850619819632147e307,1.851759363794482e307,1.8528989079568172e307,1.854038452119152e307,1.8551779962814872e307,1.8563175404438224e307,1.8574570846061575e307,1.8585966287684924e307,1.8597361729308275e307,1.8608757170931627e307,1.8620152612554975e307,1.8631548054178327e307,1.8642943495801678e307,1.865433893742503e307,1.8665734379048378e307,1.867712982067173e307,1.868852526229508e307,1.8699920703918432e307,1.871131614554178e307,1.8722711587165132e307,1.8734107028788484e307,1.8745502470411835e307,1.8756897912035184e307,1.8768293353658535e307,1.8779688795281886e307,1.8791084236905238e307,1.8802479678528587e307,1.8813875120151938e307,1.882527056177529e307,1.8836666003398638e307,1.884806144502199e307,1.885945688664534e307,1.8870852328268692e307,1.888224776989204e307,1.8893643211515392e307,1.8905038653138743e307,1.8916434094762095e307,1.8927829536385444e307,1.8939224978008795e307,1.8950620419632146e307,1.8962015861255498e307,1.8973411302878846e307,1.8984806744502198e307,1.899620218612555e307,1.9007597627748898e307,1.901899306937225e307,1.90303885109956e307,1.9041783952618952e307,1.90531793942423e307,1.9064574835865652e307,1.9075970277489003e307,1.9087365719112355e307,1.9098761160735703e307,1.9110156602359055e307,1.9121552043982406e307,1.9132947485605757e307,1.9144342927229106e307,1.9155738368852457e307,1.916713381047581e307,1.917852925209916e307,1.918992469372251e307,1.920132013534586e307,1.9212715576969212e307,1.922411101859256e307,1.9235506460215912e307,1.9246901901839263e307,1.9258297343462614e307,1.9269692785085963e307,1.9281088226709315e307,1.9292483668332666e307,1.9303879109956017e307,1.9315274551579366e307,1.9326669993202717e307,1.9338065434826069e307,1.934946087644942e307,1.936085631807277e307,1.937225175969612e307,1.9383647201319471e307,1.939504264294282e307,1.9406438084566172e307,1.9417833526189523e307,1.9429228967812874e307,1.9440624409436223e307,1.9452019851059574e307,1.9463415292682926e307,1.9474810734306277e307,1.9486206175929626e307,1.9497601617552977e307,1.9508997059176328e307,1.952039250079968e307,1.9531787942423029e307,1.954318338404638e307,1.955457882566973e307,1.9565974267293083e307,1.9577369708916431e307,1.9588765150539783e307,1.9600160592163134e307,1.9611556033786483e307,1.9622951475409834e307,1.9634346917033185e307,1.9645742358656537e307,1.9657137800279886e307,1.9668533241903237e307,1.9679928683526588e307,1.969132412514994e307,1.9702719566773288e307,1.971411500839664e307,1.972551045001999e307,1.9736905891643342e307,1.974830133326669e307,1.9759696774890042e307,1.9771092216513394e307,1.9782487658136743e307,1.9793883099760094e307,1.9805278541383445e307,1.9816673983006797e307,1.9828069424630145e307,1.9839464866253497e307,1.9850860307876848e307,1.98622557495002e307,1.9873651191123548e307,1.98850466327469e307,1.989644207437025e307,1.9907837515993602e307,1.991923295761695e307,1.9930628399240302e307,1.9942023840863654e307,1.9953419282487005e307,1.9964814724110354e307,1.9976210165733705e307,1.9987605607357056e307,1.9999001048980405e307,2.0010396490603757e307,2.0021791932227108e307,2.003318737385046e307,2.0044582815473808e307,2.005597825709716e307,2.006737369872051e307,2.0078769140343862e307,2.009016458196721e307,2.0101560023590562e307,2.0112955465213913e307,2.0124350906837265e307,2.0135746348460614e307,2.0147141790083965e307,2.0158537231707316e307,2.0169932673330665e307,2.0181328114954016e307,2.0192723556577368e307,2.020411899820072e307,2.0215514439824068e307,2.022690988144742e307,2.023830532307077e307,2.0249700764694122e307,2.026109620631747e307,2.0272491647940822e307,2.0283887089564173e307,2.0295282531187525e307,2.0306677972810873e307,2.0318073414434225e307,2.0329468856057576e307,2.0340864297680927e307,2.0352259739304276e307,2.0363655180927627e307,2.037505062255098e307,2.0386446064174328e307,2.039784150579768e307,2.040923694742103e307,2.0420632389044382e307,2.043202783066773e307,2.0443423272291082e307,2.0454818713914433e307,2.0466214155537784e307,2.0477609597161133e307,2.0489005038784485e307,2.0500400480407836e307,2.0511795922031187e307,2.0523191363654536e307,2.0534586805277887e307,2.0545982246901239e307,2.0557377688524587e307,2.0568773130147939e307,2.058016857177129e307,2.0591564013394641e307,2.060295945501799e307,2.0614354896641342e307,2.0625750338264693e307,2.0637145779888044e307,2.0648541221511393e307,2.0659936663134744e307,2.0671332104758096e307,2.0682727546381447e307,2.0694122988004796e307,2.0705518429628147e307,2.0716913871251498e307,2.072830931287485e307,2.0739704754498199e307,2.075110019612155e307,2.07624956377449e307,2.077389107936825e307,2.0785286520991601e307,2.0796681962614953e307,2.0808077404238304e307,2.0819472845861653e307,2.0830868287485004e307,2.0842263729108355e307,2.0853659170731707e307,2.0865054612355056e307,2.0876450053978407e307,2.0887845495601758e307,2.089924093722511e307,2.0910636378848458e307,2.092203182047181e307,2.093342726209516e307,2.094482270371851e307,2.095621814534186e307,2.0967613586965212e307,2.0979009028588564e307,2.0990404470211913e307,2.1001799911835264e307,2.1013195353458615e307,2.1024590795081967e307,2.1035986236705315e307,2.1047381678328667e307,2.1058777119952018e307,2.107017256157537e307,2.1081568003198718e307,2.109296344482207e307,2.110435888644542e307,2.1115754328068772e307,2.112714976969212e307,2.1138545211315472e307,2.1149940652938824e307,2.1161336094562172e307,2.1172731536185524e307,2.1184126977808875e307,2.1195522419432226e307,2.1206917861055575e307,2.1218313302678927e307,2.1229708744302278e307,2.124110418592563e307,2.1252499627548978e307,2.126389506917233e307,2.127529051079568e307,2.1286685952419032e307,2.129808139404238e307,2.1309476835665732e307,2.1320872277289083e307,2.1332267718912432e307,2.1343663160535784e307,2.1355058602159135e307,2.1366454043782486e307,2.1377849485405835e307,2.1389244927029186e307,2.1400640368652538e307,2.141203581027589e307,2.1423431251899238e307,2.143482669352259e307,2.144622213514594e307,2.1457617576769292e307,2.146901301839264e307,2.1480408460015992e307,2.1491803901639343e307,2.1503199343262695e307,2.1514594784886043e307,2.1525990226509395e307,2.1537385668132746e307,2.1548781109756095e307,2.1560176551379446e307,2.1571571993002797e307,2.158296743462615e307,2.1594362876249498e307,2.160575831787285e307,2.16171537594962e307,2.1628549201119552e307,2.16399446427429e307,2.1651340084366252e307,2.1662735525989603e307,2.1674130967612954e307,2.1685526409236303e307,2.1696921850859654e307,2.1708317292483006e307,2.1719712734106355e307,2.1731108175729706e307,2.1742503617353057e307,2.1753899058976409e307,2.1765294500599757e307,2.1776689942223109e307,2.178808538384646e307,2.1799480825469811e307,2.181087626709316e307,2.1822271708716512e307,2.1833667150339863e307,2.1845062591963214e307,2.1856458033586563e307,2.1867853475209914e307,2.1879248916833266e307,2.1890644358456617e307,2.1902039800079966e307,2.1913435241703317e307,2.1924830683326668e307,2.1936226124950017e307,2.1947621566573369e307,2.195901700819672e307,2.197041244982007e307,2.198180789144342e307,2.1993203333066771e307,2.2004598774690123e307,2.2015994216313474e307,2.2027389657936823e307,2.2038785099560174e307,2.2050180541183525e307,2.2061575982806877e307,2.2072971424430226e307,2.2084366866053577e307,2.2095762307676928e307,2.2107157749300277e307,2.2118553190923628e307,2.212994863254698e307,2.214134407417033e307,2.215273951579368e307,2.216413495741703e307,2.2175530399040382e307,2.2186925840663734e307,2.2198321282287083e307,2.2209716723910434e307,2.2221112165533785e307,2.2232507607157137e307,2.2243903048780485e307,2.2255298490403837e307,2.2266693932027188e307,2.227808937365054e307,2.2289484815273888e307,2.230088025689724e307,2.231227569852059e307,2.232367114014394e307,2.233506658176729e307,2.2346462023390642e307,2.2357857465013994e307,2.2369252906637342e307,2.2380648348260694e307,2.2392043789884045e307,2.2403439231507396e307,2.2414834673130745e307,2.2426230114754097e307,2.2437625556377448e307,2.24490209980008e307,2.2460416439624148e307,2.24718118812475e307,2.248320732287085e307,2.24946027644942e307,2.2505998206117553e307,2.25173936477409e307,2.252878908936425e307,2.25401845309876e307,2.2551579972610954e307,2.2562975414234305e307,2.2574370855857656e307,2.2585766297481008e307,2.259716173910436e307,2.2608557180727705e307,2.2619952622351056e307,2.263134806397441e307,2.264274350559776e307,2.265413894722111e307,2.266553438884446e307,2.2676929830467813e307,2.268832527209116e307,2.269972071371451e307,2.271111615533786e307,2.2722511596961213e307,2.2733907038584565e307,2.2745302480207916e307,2.2756697921831267e307,2.276809336345462e307,2.2779488805077965e307,2.2790884246701316e307,2.280227968832467e307,2.281367512994802e307,2.282507057157137e307,2.283646601319472e307,2.2847861454818073e307,2.2859256896441424e307,2.287065233806477e307,2.288204777968812e307,2.2893443221311473e307,2.2904838662934824e307,2.2916234104558176e307,2.2927629546181527e307,2.293902498780488e307,2.2950420429428225e307,2.2961815871051576e307,2.2973211312674927e307,2.298460675429828e307,2.299600219592163e307,2.300739763754498e307,2.3018793079168333e307,2.3030188520791684e307,2.304158396241503e307,2.305297940403838e307,2.3064374845661733e307,2.3075770287285084e307,2.3087165728908436e307,2.3098561170531787e307,2.310995661215514e307,2.3121352053778485e307,2.3132747495401836e307,2.3144142937025187e307,2.315553837864854e307,2.316693382027189e307,2.317832926189524e307,2.318972470351859e307,2.3201120145141944e307,2.321251558676529e307,2.322391102838864e307,2.3235306470011993e307,2.3246701911635344e307,2.3258097353258695e307,2.3269492794882047e307,2.32808882365054e307,2.3292283678128744e307,2.3303679119752096e307,2.3315074561375447e307,2.33264700029988e307,2.333786544462215e307,2.33492608862455e307,2.336065632786885e307,2.3372051769492204e307,2.338344721111555e307,2.33948426527389e307,2.3406238094362253e307,2.3417633535985604e307,2.3429028977608955e307,2.3440424419232307e307,2.345181986085566e307,2.3463215302479004e307,2.3474610744102356e307,2.3486006185725707e307,2.349740162734906e307,2.350879706897241e307,2.352019251059576e307,2.353158795221911e307,2.3542983393842463e307,2.355437883546581e307,2.356577427708916e307,2.357716971871251e307,2.3588565160335864e307,2.3599960601959215e307,2.3611356043582566e307,2.362275148520592e307,2.363414692682927e307,2.3645542368452615e307,2.3656937810075967e307,2.366833325169932e307,2.367972869332267e307,2.369112413494602e307,2.370251957656937e307,2.3713915018192723e307,2.372531045981607e307,2.373670590143942e307,2.374810134306277e307,2.3759496784686124e307,2.3770892226309475e307,2.3782287667932826e307,2.3793683109556177e307,2.380507855117953e307,2.3816473992802875e307,2.3827869434426226e307,2.383926487604958e307,2.385066031767293e307,2.386205575929628e307,2.387345120091963e307,2.3884846642542983e307,2.389624208416633e307,2.390763752578968e307,2.391903296741303e307,2.3930428409036383e307,2.3941823850659735e307,2.3953219292283086e307,2.3964614733906437e307,2.397601017552979e307,2.3987405617153135e307,2.3998801058776486e307,2.401019650039984e307,2.402159194202319e307,2.403298738364654e307,2.404438282526989e307,2.4055778266893243e307,2.406717370851659e307,2.407856915013994e307,2.408996459176329e307,2.4101360033386643e307,2.4112755475009994e307,2.4124150916633346e307,2.4135546358256697e307,2.414694179988005e307,2.4158337241503395e307,2.4169732683126746e307,2.4181128124750097e307,2.419252356637345e307,2.42039190079968e307,2.421531444962015e307,2.4226709891243503e307,2.423810533286685e307,2.42495007744902e307,2.426089621611355e307,2.4272291657736903e307,2.4283687099360254e307,2.4295082540983606e307,2.4306477982606957e307,2.431787342423031e307,2.4329268865853655e307,2.4340664307477006e307,2.4352059749100357e307,2.436345519072371e307,2.437485063234706e307,2.438624607397041e307,2.439764151559376e307,2.4409036957217114e307,2.442043239884046e307,2.443182784046381e307,2.4443223282087163e307,2.4454618723710514e307,2.4466014165333865e307,2.4477409606957217e307,2.448880504858057e307,2.4500200490203914e307,2.4511595931827266e307,2.4522991373450617e307,2.453438681507397e307,2.454578225669732e307,2.455717769832067e307,2.456857313994402e307,2.4579968581567374e307,2.459136402319072e307,2.460275946481407e307,2.4614154906437423e307,2.4625550348060774e307,2.4636945789684125e307,2.4648341231307477e307,2.465973667293083e307,2.4671132114554174e307,2.4682527556177526e307,2.4693922997800877e307,2.470531843942423e307,2.471671388104758e307,2.472810932267093e307,2.473950476429428e307,2.4750900205917633e307,2.476229564754098e307,2.477369108916433e307,2.478508653078768e307,2.4796481972411034e307,2.4807877414034385e307,2.4819272855657736e307,2.483066829728109e307,2.4842063738904434e307,2.4853459180527785e307,2.4864854622151137e307,2.487625006377449e307,2.488764550539784e307,2.489904094702119e307,2.491043638864454e307,2.4921831830267893e307,2.493322727189124e307,2.494462271351459e307,2.495601815513794e307,2.4967413596761294e307,2.4978809038384645e307,2.4990204480007996e307,2.5001599921631347e307,2.5012995363254694e307,2.5024390804878045e307,2.5035786246501396e307,2.504718168812475e307,2.50585771297481e307,2.506997257137145e307,2.50813680129948e307,2.5092763454618153e307,2.51041588962415e307,2.511555433786485e307,2.51269497794882e307,2.5138345221111553e307,2.5149740662734905e307,2.5161136104358256e307,2.5172531545981607e307,2.518392698760496e307,2.5195322429228305e307,2.5206717870851656e307,2.521811331247501e307,2.522950875409836e307,2.524090419572171e307,2.525229963734506e307,2.5263695078968413e307,2.527509052059176e307,2.528648596221511e307,2.529788140383846e307,2.5309276845461813e307,2.5320672287085164e307,2.5332067728708516e307,2.5343463170331867e307,2.535485861195522e307,2.5366254053578565e307,2.5377649495201916e307,2.5389044936825267e307,2.540044037844862e307,2.541183582007197e307,2.542323126169532e307,2.5434626703318673e307,2.544602214494202e307,2.545741758656537e307,2.546881302818872e307,2.5480208469812073e307,2.5491603911435424e307,2.5502999353058776e307,2.5514394794682127e307,2.552579023630548e307,2.5537185677928825e307,2.5548581119552176e307,2.5559976561175527e307,2.557137200279888e307,2.558276744442223e307,2.559416288604558e307,2.560555832766893e307,2.561695376929228e307,2.562834921091563e307,2.563974465253898e307,2.5651140094162333e307,2.5662535535785684e307,2.5673930977409035e307,2.5685326419032387e307,2.569672186065574e307,2.5708117302279084e307,2.5719512743902436e307,2.5730908185525787e307,2.574230362714914e307,2.575369906877249e307,2.576509451039584e307,2.577648995201919e307,2.578788539364254e307,2.579928083526589e307,2.581067627688924e307,2.5822071718512593e307,2.5833467160135944e307,2.5844862601759295e307,2.5856258043382647e307,2.5867653485006e307,2.5879048926629344e307,2.5890444368252695e307,2.5901839809876047e307,2.59132352514994e307,2.592463069312275e307,2.59360261347461e307,2.594742157636945e307,2.5958817017992803e307,2.597021245961615e307,2.59816079012395e307,2.599300334286285e307,2.6004398784486204e307,2.6015794226109555e307,2.6027189667732906e307,2.603858510935626e307,2.6049980550979604e307,2.6061375992602955e307,2.6072771434226307e307,2.608416687584966e307,2.609556231747301e307,2.610695775909636e307,2.611835320071971e307,2.6129748642343063e307,2.614114408396641e307,2.615253952558976e307,2.616393496721311e307,2.6175330408836464e307,2.6186725850459815e307,2.6198121292083166e307,2.6209516733706517e307,2.6220912175329864e307,2.6232307616953215e307,2.6243703058576566e307,2.625509850019992e307,2.626649394182327e307,2.627788938344662e307,2.628928482506997e307,2.6300680266693323e307,2.631207570831667e307,2.632347114994002e307,2.633486659156337e307,2.6346262033186723e307,2.6357657474810075e307,2.6369052916433426e307,2.6380448358056777e307,2.6391843799680124e307,2.6403239241303475e307,2.6414634682926826e307,2.642603012455018e307,2.643742556617353e307,2.644882100779688e307,2.646021644942023e307,2.6471611891043583e307,2.648300733266693e307,2.649440277429028e307,2.650579821591363e307,2.6517193657536983e307,2.6528589099160334e307,2.6539984540783686e307,2.6551379982407037e307,2.6562775424030383e307,2.6574170865653735e307,2.6585566307277086e307,2.6596961748900437e307,2.660835719052379e307,2.661975263214714e307,2.663114807377049e307,2.6642543515393843e307,2.665393895701719e307,2.666533439864054e307,2.667672984026389e307,2.6688125281887243e307,2.6699520723510594e307,2.6710916165133946e307,2.6722311606757297e307,2.673370704838065e307,2.6745102490003995e307,2.6756497931627346e307,2.6767893373250697e307,2.677928881487405e307,2.67906842564974e307,2.680207969812075e307,2.68134751397441e307,2.682487058136745e307,2.68362660229908e307,2.684766146461415e307,2.6859056906237503e307,2.6870452347860854e307,2.6881847789484205e307,2.6893243231107557e307,2.690463867273091e307,2.6916034114354254e307,2.6927429555977606e307,2.6938824997600957e307,2.695022043922431e307,2.696161588084766e307,2.697301132247101e307,2.698440676409436e307,2.699580220571771e307,2.700719764734106e307,2.701859308896441e307,2.7029988530587763e307,2.7041383972211114e307,2.7052779413834465e307,2.7064174855457817e307,2.707557029708117e307,2.7086965738704514e307,2.7098361180327865e307,2.7109756621951217e307,2.712115206357457e307,2.713254750519792e307,2.714394294682127e307,2.715533838844462e307,2.716673383006797e307,2.717812927169132e307,2.718952471331467e307,2.720092015493802e307,2.7212315596561374e307,2.7223711038184725e307,2.7235106479808076e307,2.724650192143143e307,2.7257897363054774e307,2.7269292804678125e307,2.7280688246301477e307,2.729208368792483e307,2.730347912954818e307,2.731487457117153e307,2.732627001279488e307,2.733766545441823e307,2.734906089604158e307,2.736045633766493e307,2.737185177928828e307,2.7383247220911633e307,2.7394642662534985e307,2.7406038104158336e307,2.7417433545781687e307,2.7428828987405034e307,2.7440224429028385e307,2.7451619870651736e307,2.746301531227509e307,2.747441075389844e307,2.748580619552179e307,2.749720163714514e307,2.7508597078768493e307,2.751999252039184e307,2.753138796201519e307,2.754278340363854e307,2.7554178845261893e307,2.7565574286885245e307,2.7576969728508596e307,2.7588365170131947e307,2.7599760611755294e307,2.7611156053378645e307,2.7622551495001996e307,2.763394693662535e307,2.76453423782487e307,2.765673781987205e307,2.76681332614954e307,2.7679528703118753e307,2.76909241447421e307,2.770231958636545e307,2.77137150279888e307,2.7725110469612153e307,2.7736505911235504e307,2.7747901352858856e307,2.7759296794482207e307,2.7770692236105553e307,2.7782087677728905e307,2.7793483119352256e307,2.7804878560975607e307,2.781627400259896e307,2.782766944422231e307,2.783906488584566e307,2.7850460327469013e307,2.786185576909236e307,2.787325121071571e307,2.788464665233906e307,2.7896042093962413e307,2.7907437535585764e307,2.7918832977209116e307,2.7930228418832467e307,2.7941623860455813e307,2.7953019302079165e307,2.7964414743702516e307,2.7975810185325867e307,2.798720562694922e307,2.799860106857257e307,2.800999651019592e307,2.802139195181927e307,2.803278739344262e307,2.804418283506597e307,2.805557827668932e307,2.8066973718312673e307,2.8078369159936024e307,2.8089764601559375e307,2.8101160043182727e307,2.811255548480608e307,2.8123950926429424e307,2.8135346368052776e307,2.8146741809676127e307,2.815813725129948e307,2.816953269292283e307,2.818092813454618e307,2.819232357616953e307,2.820371901779288e307,2.821511445941623e307,2.822650990103958e307,2.8237905342662933e307,2.8249300784286284e307,2.8260696225909635e307,2.8272091667532986e307,2.828348710915634e307,2.8294882550779684e307,2.8306277992403035e307,2.8317673434026387e307,2.832906887564974e307,2.834046431727309e307,2.835185975889644e307,2.836325520051979e307,2.837465064214314e307,2.838604608376649e307,2.839744152538984e307,2.840883696701319e307,2.8420232408636544e307,2.8431627850259895e307,2.8443023291883246e307,2.84544187335066e307,2.8465814175129944e307,2.8477209616753295e307,2.8488605058376647e307,2.85000005e307,2.851139594162335e307,2.85227913832467e307,2.853418682487005e307,2.85455822664934e307,2.855697770811675e307,2.85683731497401e307,2.857976859136345e307,2.8591164032986803e307,2.8602559474610155e307,2.8613954916233506e307,2.8625350357856857e307,2.8636745799480204e307,2.8648141241103555e307,2.8659536682726906e307,2.867093212435026e307,2.868232756597361e307,2.869372300759696e307,2.870511844922031e307,2.871651389084366e307,2.872790933246701e307,2.873930477409036e307,2.875070021571371e307,2.8762095657337063e307,2.8773491098960415e307,2.8784886540583766e307,2.8796281982207117e307,2.8807677423830464e307,2.8819072865453815e307,2.8830468307077166e307,2.884186374870052e307,2.885325919032387e307,2.886465463194722e307,2.887605007357057e307,2.8887445515193923e307,2.889884095681727e307,2.891023639844062e307,2.892163184006397e307,2.8933027281687323e307,2.8944422723310674e307,2.8955818164934026e307,2.8967213606557377e307,2.8978609048180723e307,2.8990004489804075e307,2.9001399931427426e307,2.9012795373050777e307,2.902419081467413e307,2.903558625629748e307,2.904698169792083e307,2.9058377139544183e307,2.906977258116753e307,2.908116802279088e307,2.909256346441423e307,2.9103958906037583e307,2.9115354347660934e307,2.9126749789284286e307,2.9138145230907637e307,2.9149540672530983e307,2.9160936114154335e307,2.9172331555777686e307,2.9183726997401037e307,2.919512243902439e307,2.920651788064774e307,2.921791332227109e307,2.922930876389444e307,2.924070420551779e307,2.925209964714114e307,2.926349508876449e307,2.9274890530387843e307,2.9286285972011194e307,2.9297681413634545e307,2.9309076855257897e307,2.9320472296881243e307,2.9331867738504594e307,2.9343263180127946e307,2.9354658621751297e307,2.936605406337465e307,2.9377449504998e307,2.938884494662135e307,2.94002403882447e307,2.941163582986805e307,2.94230312714914e307,2.943442671311475e307,2.9445822154738103e307,2.9457217596361454e307,2.9468613037984805e307,2.9480008479608156e307,2.9491403921231503e307,2.9502799362854854e307,2.9514194804478205e307,2.9525590246101557e307,2.953698568772491e307,2.954838112934826e307,2.955977657097161e307,2.957117201259496e307,2.958256745421831e307,2.959396289584166e307,2.960535833746501e307,2.961675377908836e307,2.9628149220711714e307,2.9639544662335065e307,2.9650940103958416e307,2.966233554558177e307,2.9673730987205114e307,2.9685126428828465e307,2.9696521870451817e307,2.970791731207517e307,2.971931275369852e307,2.973070819532187e307,2.974210363694522e307,2.975349907856857e307,2.976489452019192e307,2.977628996181527e307,2.978768540343862e307,2.9799080845061973e307,2.9810476286685325e307,2.9821871728308676e307,2.9833267169932027e307,2.9844662611555374e307,2.9856058053178725e307,2.9867453494802076e307,2.987884893642543e307,2.989024437804878e307,2.990163981967213e307,2.991303526129548e307,2.992443070291883e307,2.993582614454218e307,2.994722158616553e307,2.995861702778888e307,2.9970012469412233e307,2.9981407911035585e307,2.9992803352658936e307,3.0004198794282287e307,3.0015594235905634e307,3.0026989677528985e307,3.0038385119152336e307,3.004978056077569e307,3.006117600239904e307,3.007257144402239e307,3.008396688564574e307,3.009536232726909e307,3.010675776889244e307,3.011815321051579e307,3.012954865213914e307,3.0140944093762493e307,3.0152339535385844e307,3.0163734977009196e307,3.0175130418632547e307,3.0186525860255893e307,3.0197921301879245e307,3.0209316743502596e307,3.0220712185125947e307,3.02321076267493e307,3.024350306837265e307,3.0254898509996e307,3.026629395161935e307,3.02776893932427e307,3.028908483486605e307,3.03004802764894e307,3.0311875718112753e307,3.0323271159736104e307,3.0334666601359456e307,3.0346062042982807e307,3.0357457484606153e307,3.0368852926229505e307,3.0380248367852856e307,3.0391643809476207e307,3.040303925109956e307,3.041443469272291e307,3.042583013434626e307,3.043722557596961e307,3.044862101759296e307,3.046001645921631e307,3.047141190083966e307,3.0482807342463013e307,3.0494202784086364e307,3.0505598225709715e307,3.0516993667333067e307,3.0528389108956413e307,3.0539784550579764e307,3.0551179992203116e307,3.0562575433826467e307,3.057397087544982e307,3.058536631707317e307,3.059676175869652e307,3.060815720031987e307,3.061955264194322e307,3.063094808356657e307,3.064234352518992e307,3.0653738966813273e307,3.0665134408436624e307,3.0676529850059975e307,3.0687925291683326e307,3.0699320733306673e307,3.0710716174930024e307,3.0722111616553375e307,3.0733507058176727e307,3.074490249980008e307,3.075629794142343e307,3.076769338304678e307,3.077908882467013e307,3.079048426629348e307,3.080187970791683e307,3.081327514954018e307,3.082467059116353e307,3.0836066032786884e307,3.0847461474410235e307,3.0858856916033586e307,3.0870252357656933e307,3.0881647799280284e307,3.0893043240903635e307,3.0904438682526987e307,3.091583412415034e307,3.092722956577369e307,3.093862500739704e307,3.095002044902039e307,3.096141589064374e307,3.097281133226709e307,3.098420677389044e307,3.099560221551379e307,3.1006997657137143e307,3.1018393098760495e307,3.1029788540383846e307,3.104118398200719e307,3.1052579423630544e307,3.1063974865253895e307,3.1075370306877246e307,3.10867657485006e307,3.109816119012395e307,3.11095566317473e307,3.112095207337065e307,3.1132347514994e307,3.114374295661735e307,3.11551383982407e307,3.116653383986405e307,3.1177929281487403e307,3.1189324723110755e307,3.1200720164734106e307,3.1212115606357457e307,3.1223511047980804e307,3.1234906489604155e307,3.1246301931227506e307,3.125769737285086e307,3.126909281447421e307,3.128048825609756e307,3.129188369772091e307,3.130327913934426e307,3.131467458096761e307,3.132607002259096e307,3.133746546421431e307,3.1348860905837663e307,3.1360256347461014e307,3.1371651789084366e307,3.1383047230707717e307,3.1394442672331063e307,3.1405838113954415e307,3.1417233555577766e307,3.1428628997201117e307,3.144002443882447e307,3.145141988044782e307,3.146281532207117e307,3.147421076369452e307,3.148560620531787e307,3.149700164694122e307,3.150839708856457e307,3.1519792530187923e307,3.1531187971811274e307,3.1542583413434626e307,3.1553978855057977e307,3.1565374296681323e307,3.1576769738304674e307,3.1588165179928026e307,3.1599560621551377e307,3.161095606317473e307,3.162235150479808e307,3.163374694642143e307,3.1645142388044777e307,3.165653782966813e307,3.166793327129148e307,3.167932871291483e307,3.1690724154538183e307,3.1702119596161534e307,3.1713515037784885e307,3.1724910479408237e307,3.1736305921031583e307,3.1747701362654934e307,3.1759096804278286e307,3.1770492245901637e307,3.178188768752499e307,3.179328312914834e307,3.180467857077169e307,3.1816074012395037e307,3.182746945401839e307,3.183886489564174e307,3.185026033726509e307,3.1861655778888443e307,3.1873051220511794e307,3.1884446662135145e307,3.1895842103758496e307,3.1907237545381843e307,3.1918632987005194e307,3.1930028428628545e307,3.1941423870251897e307,3.195281931187525e307,3.19642147534986e307,3.197561019512195e307,3.19870056367453e307,3.199840107836865e307,3.2009796519992e307,3.202119196161535e307,3.20325874032387e307,3.2043982844862054e307,3.2055378286485405e307,3.2066773728108756e307,3.2078169169732103e307,3.2089564611355454e307,3.2100960052978805e307,3.2112355494602157e307,3.212375093622551e307,3.213514637784886e307,3.214654181947221e307,3.215793726109556e307,3.216933270271891e307,3.218072814434226e307,3.219212358596561e307,3.220351902758896e307,3.2214914469212313e307,3.2226309910835665e307,3.2237705352459016e307,3.224910079408236e307,3.2260496235705714e307,3.2271891677329065e307,3.2283287118952416e307,3.229468256057577e307,3.230607800219912e307,3.231747344382247e307,3.232886888544582e307,3.234026432706917e307,3.235165976869252e307,3.236305521031587e307,3.237445065193922e307,3.2385846093562573e307,3.2397241535185925e307,3.2408636976809276e307,3.242003241843262e307,3.2431427860055974e307,3.2442823301679325e307,3.2454218743302676e307,3.2465614184926027e307,3.247700962654938e307,3.248840506817273e307,3.249980050979608e307,3.251119595141943e307,3.252259139304278e307,3.253398683466613e307,3.254538227628948e307,3.2556777717912833e307,3.2568173159536184e307,3.2579568601159536e307,3.259096404278288e307,3.2602359484406233e307,3.2613754926029585e307,3.2625150367652936e307,3.2636545809276287e307,3.264794125089964e307,3.265933669252299e307,3.267073213414634e307,3.268212757576969e307,3.269352301739304e307,3.270491845901639e307,3.271631390063974e307,3.2727709342263093e307,3.2739104783886444e307,3.2750500225509796e307,3.2761895667133147e307,3.2773291108756493e307,3.2784686550379844e307,3.2796081992003196e307,3.2807477433626547e307,3.28188728752499e307,3.283026831687325e307,3.28416637584966e307,3.2853059200119947e307,3.28644546417433e307,3.287585008336665e307,3.288724552499e307,3.2898640966613353e307,3.2910036408236704e307,3.2921431849860055e307,3.2932827291483407e307,3.2944222733106753e307,3.2955618174730104e307,3.2967013616353456e307,3.2978409057976807e307,3.298980449960016e307,3.300119994122351e307,3.301259538284686e307,3.3023990824470207e307,3.303538626609356e307,3.304678170771691e307,3.305817714934026e307,3.306957259096361e307,3.3080968032586964e307,3.3092363474210315e307,3.3103758915833666e307,3.3115154357457013e307,3.3126549799080364e307,3.3137945240703715e307,3.3149340682327067e307,3.316073612395042e307,3.317213156557377e307,3.318352700719712e307,3.3194922448820467e307,3.320631789044382e307,3.321771333206717e307,3.322910877369052e307,3.324050421531387e307,3.3251899656937224e307,3.3263295098560575e307,3.3274690540183926e307,3.3286085981807273e307,3.3297481423430624e307,3.3308876865053975e307,3.3320272306677327e307,3.333166774830068e307,3.334306318992403e307,3.335445863154738e307,3.3365854073170727e307,3.337724951479408e307,3.338864495641743e307,3.340004039804078e307,3.341143583966413e307,3.3422831281287483e307,3.3434226722910835e307,3.3445622164534186e307,3.345701760615753e307,3.3468413047780884e307,3.3479808489404235e307,3.3491203931027586e307,3.350259937265094e307,3.351399481427429e307,3.352539025589764e307,3.353678569752099e307,3.354818113914434e307,3.355957658076769e307,3.357097202239104e307,3.358236746401439e307,3.3593762905637743e307,3.3605158347261095e307,3.3616553788884446e307,3.362794923050779e307,3.3639344672131144e307,3.3650740113754495e307,3.3662135555377846e307,3.3673530997001197e307,3.368492643862455e307,3.36963218802479e307,3.370771732187125e307,3.37191127634946e307,3.373050820511795e307,3.37419036467413e307,3.375329908836465e307,3.3764694529988003e307,3.3776089971611354e307,3.3787485413234706e307,3.379888085485805e307,3.3810276296481403e307,3.3821671738104755e307,3.3833067179728106e307,3.3844462621351457e307,3.385585806297481e307,3.386725350459816e307,3.387864894622151e307,3.389004438784486e307,3.390143982946821e307,3.391283527109156e307,3.392423071271491e307,3.3935626154338263e307,3.3947021595961614e307,3.3958417037584965e307,3.396981247920831e307,3.3981207920831663e307,3.3992603362455014e307,3.4003998804078366e307,3.4015394245701717e307,3.402678968732507e307,3.403818512894842e307,3.404958057057177e307,3.4060976012195117e307,3.407237145381847e307,3.408376689544182e307,3.409516233706517e307,3.4106557778688523e307,3.4117953220311874e307,3.4129348661935225e307,3.414074410355857e307,3.4152139545181923e307,3.4163534986805274e307,3.4174930428428626e307,3.4186325870051977e307,3.419772131167533e307,3.420911675329868e307,3.422051219492203e307,3.4231907636545377e307,3.424330307816873e307,3.425469851979208e307,3.426609396141543e307,3.427748940303878e307,3.4288884844662134e307,3.4300280286285485e307,3.4311675727908836e307,3.4323071169532183e307,3.4334466611155534e307,3.4345862052778885e307,3.4357257494402237e307,3.436865293602559e307,3.438004837764894e307,3.439144381927229e307,3.4402839260895637e307,3.441423470251899e307,3.442563014414234e307,3.443702558576569e307,3.444842102738904e307,3.4459816469012394e307,3.4471211910635745e307,3.4482607352259096e307,3.4494002793882443e307,3.4505398235505794e307,3.4516793677129145e307,3.4528189118752497e307,3.453958456037585e307,3.45509800019992e307,3.456237544362255e307,3.4573770885245897e307,3.458516632686925e307,3.45965617684926e307,3.460795721011595e307,3.46193526517393e307,3.4630748093362653e307,3.4642143534986005e307,3.4653538976609356e307,3.46649344182327e307,3.4676329859856054e307,3.4687725301479405e307,3.4699120743102756e307,3.471051618472611e307,3.472191162634946e307,3.473330706797281e307,3.4744702509596157e307,3.475609795121951e307,3.476749339284286e307,3.477888883446621e307,3.479028427608956e307,3.4801679717712913e307,3.4813075159336265e307,3.4824470600959616e307,3.483586604258296e307,3.4847261484206314e307,3.4858656925829665e307,3.4870052367453016e307,3.4881447809076367e307,3.489284325069972e307,3.490423869232307e307,3.4915634133946416e307,3.492702957556977e307,3.493842501719312e307,3.494982045881647e307,3.496121590043982e307,3.4972611342063173e307,3.4984006783686524e307,3.4995402225309876e307,3.500679766693322e307,3.5018193108556573e307,3.5029588550179925e307,3.5040983991803276e307,3.5052379433426627e307,3.506377487504998e307,3.507517031667333e307,3.508656575829668e307,3.509796119992003e307,3.510935664154338e307,3.512075208316673e307,3.513214752479008e307,3.5143542966413433e307,3.5154938408036784e307,3.5166333849660135e307,3.517772929128348e307,3.5189124732906833e307,3.5200520174530184e307,3.5211915616153536e307,3.5223311057776887e307,3.523470649940024e307,3.524610194102359e307,3.525749738264694e307,3.5268892824270287e307,3.528028826589364e307,3.529168370751699e307,3.530307914914034e307,3.5314474590763693e307,3.5325870032387044e307,3.5337265474010395e307,3.534866091563374e307,3.5360056357257093e307,3.5371451798880444e307,3.5382847240503796e307,3.5394242682127147e307,3.54056381237505e307,3.541703356537385e307,3.54284290069972e307,3.5439824448620547e307,3.54512198902439e307,3.546261533186725e307,3.54740107734906e307,3.548540621511395e307,3.5496801656737304e307,3.5508197098360655e307,3.5519592539984e307,3.5530987981607353e307,3.5542383423230704e307,3.5553778864854055e307,3.5565174306477407e307,3.557656974810076e307,3.558796518972411e307,3.559936063134746e307,3.5610756072970807e307,3.562215151459416e307,3.563354695621751e307,3.564494239784086e307,3.565633783946421e307,3.5667733281087564e307,3.5679128722710915e307,3.569052416433426e307,3.5701919605957613e307,3.5713315047580964e307,3.5724710489204315e307,3.5736105930827667e307,3.574750137245102e307,3.575889681407437e307,3.577029225569772e307,3.5781687697321067e307,3.579308313894442e307,3.580447858056777e307,3.581587402219112e307,3.582726946381447e307,3.5838664905437823e307,3.5850060347061175e307,3.5861455788684526e307,3.587285123030787e307,3.5884246671931224e307,3.5895642113554575e307,3.5907037555177926e307,3.591843299680128e307,3.592982843842463e307,3.594122388004798e307,3.5952619321671327e307,3.596401476329468e307,3.597541020491803e307,3.598680564654138e307,3.599820108816473e307,3.6009596529788083e307,3.6020991971411435e307,3.6032387413034786e307,3.604378285465813e307,3.6055178296281484e307,3.6066573737904835e307,3.6077969179528186e307,3.6089364621151537e307,3.610076006277489e307,3.611215550439824e307,3.6123550946021586e307,3.613494638764494e307,3.614634182926829e307,3.615773727089164e307,3.616913271251499e307,3.6180528154138343e307,3.6191923595761694e307,3.6203319037385046e307,3.621471447900839e307,3.6226109920631743e307,3.6237505362255095e307,3.6248900803878446e307,3.6260296245501797e307,3.627169168712515e307,3.62830871287485e307,3.6294482570371846e307,3.63058780119952e307,3.631727345361855e307,3.63286688952419e307,3.634006433686525e307,3.6351459778488603e307,3.6362855220111954e307,3.6374250661735305e307,3.638564610335865e307,3.6397041544982003e307,3.6408436986605354e307,3.6419832428228706e307,3.6431227869852057e307,3.644262331147541e307,3.645401875309876e307,3.6465414194722106e307,3.6476809636345457e307,3.648820507796881e307,3.649960051959216e307,3.651099596121551e307,3.6522391402838863e307,3.6533786844462214e307,3.6545182286085565e307,3.655657772770891e307,3.6567973169332263e307,3.6579368610955614e307,3.6590764052578966e307,3.6602159494202317e307,3.661355493582567e307,3.662495037744902e307,3.663634581907237e307,3.6647741260695717e307,3.665913670231907e307,3.667053214394242e307,3.668192758556577e307,3.669332302718912e307,3.6704718468812474e307,3.6716113910435825e307,3.672750935205917e307,3.6738904793682523e307,3.6750300235305874e307,3.6761695676929225e307,3.6773091118552577e307,3.678448656017593e307,3.679588200179928e307,3.680727744342263e307,3.6818672885045977e307,3.683006832666933e307,3.684146376829268e307,3.685285920991603e307,3.686425465153938e307,3.6875650093162734e307,3.6887045534786085e307,3.689844097640943e307,3.6909836418032783e307,3.6921231859656134e307,3.6932627301279485e307,3.6944022742902837e307,3.695541818452619e307,3.696681362614954e307,3.697820906777289e307,3.6989604509396237e307,3.700099995101959e307,3.701239539264294e307,3.702379083426629e307,3.703518627588964e307,3.7046581717512993e307,3.7057977159136345e307,3.706937260075969e307,3.708076804238304e307,3.7092163484006394e307,3.7103558925629745e307,3.7114954367253096e307,3.712634980887645e307,3.71377452504998e307,3.714914069212315e307,3.7160536133746497e307,3.717193157536985e307,3.71833270169932e307,3.719472245861655e307,3.72061179002399e307,3.7217513341863253e307,3.7228908783486605e307,3.724030422510995e307,3.72516996667333e307,3.7263095108356653e307,3.7274490549980005e307,3.7285885991603356e307,3.7297281433226707e307,3.730867687485006e307,3.732007231647341e307,3.7331467758096756e307,3.734286319972011e307,3.735425864134346e307,3.736565408296681e307,3.737704952459016e307,3.7388444966213513e307,3.7399840407836864e307,3.7411235849460216e307,3.742263129108356e307,3.7434026732706913e307,3.7445422174330265e307,3.7456817615953616e307,3.7468213057576967e307,3.747960849920032e307,3.749100394082367e307,3.7502399382447016e307,3.751379482407037e307,3.752519026569372e307,3.753658570731707e307,3.754798114894042e307,3.7559376590563773e307,3.7570772032187124e307,3.7582167473810475e307,3.759356291543382e307,3.7604958357057173e307,3.7616353798680524e307,3.7627749240303876e307,3.7639144681927227e307,3.765054012355058e307,3.766193556517393e307,3.7673331006797276e307,3.7684726448420627e307,3.769612189004398e307,3.770751733166733e307,3.771891277329068e307,3.7730308214914033e307,3.7741703656537384e307,3.7753099098160735e307,3.776449453978408e307,3.7775889981407433e307,3.7787285423030784e307,3.7798680864654136e307,3.7810076306277487e307,3.782147174790084e307,3.783286718952419e307,3.7844262631147536e307,3.7855658072770887e307,3.786705351439424e307,3.787844895601759e307,3.788984439764094e307,3.790123983926429e307,3.7912635280887644e307,3.7924030722510995e307,3.793542616413434e307,3.7946821605757693e307,3.7958217047381044e307,3.7969612489004395e307,3.7981007930627747e307,3.79924033722511e307,3.800379881387445e307,3.8015194255497796e307,3.8026589697121147e307,3.80379851387445e307,3.804938058036785e307,3.80607760219912e307,3.807217146361455e307,3.8083566905237904e307,3.8094962346861255e307,3.81063577884846e307,3.8117753230107953e307,3.8129148671731304e307,3.8140544113354655e307,3.8151939554978006e307,3.816333499660136e307,3.817473043822471e307,3.818612587984806e307,3.8197521321471407e307,3.820891676309476e307,3.822031220471811e307,3.823170764634146e307,3.824310308796481e307,3.8254498529588163e307,3.8265893971211515e307,3.827728941283486e307,3.828868485445821e307,3.8300080296081564e307,3.8311475737704915e307,3.8322871179328266e307,3.833426662095162e307,3.834566206257497e307,3.835705750419832e307,3.8368452945821667e307,3.837984838744502e307,3.839124382906837e307,3.840263927069172e307,3.841403471231507e307,3.8425430153938423e307,3.8436825595561775e307,3.844822103718512e307,3.845961647880847e307,3.8471011920431823e307,3.8482407362055175e307,3.8493802803678526e307,3.8505198245301877e307,3.851659368692523e307,3.852798912854858e307,3.8539384570171926e307,3.855078001179528e307,3.856217545341863e307,3.857357089504198e307,3.858496633666533e307,3.8596361778288683e307,3.8607757219912034e307,3.861915266153538e307,3.863054810315873e307,3.8641943544782083e307,3.8653338986405435e307,3.8664734428028786e307,3.8676129869652137e307,3.868752531127549e307,3.869892075289884e307,3.8710316194522186e307,3.872171163614554e307,3.873310707776889e307,3.874450251939224e307,3.875589796101559e307,3.8767293402638943e307,3.8778688844262294e307,3.879008428588564e307,3.880147972750899e307,3.8812875169132343e307,3.8824270610755694e307,3.8835666052379046e307,3.8847061494002397e307,3.885845693562575e307,3.88698523772491e307,3.8881247818872446e307,3.8892643260495797e307,3.890403870211915e307,3.89154341437425e307,3.892682958536585e307,3.8938225026989203e307,3.8949620468612554e307,3.8961015910235905e307,3.897241135185925e307,3.8983806793482603e307,3.8995202235105954e307,3.9006597676729306e307,3.9017993118352657e307,3.902938855997601e307,3.904078400159936e307,3.9052179443222706e307,3.9063574884846057e307,3.907497032646941e307,3.908636576809276e307,3.909776120971611e307,3.910915665133946e307,3.9120552092962814e307,3.9131947534586165e307,3.914334297620951e307,3.9154738417832863e307,3.9166133859456214e307,3.9177529301079565e307,3.9188924742702917e307,3.920032018432627e307,3.921171562594962e307,3.9223111067572966e307,3.9234506509196317e307,3.924590195081967e307,3.925729739244302e307,3.926869283406637e307,3.928008827568972e307,3.9291483717313074e307,3.9302879158936425e307,3.931427460055977e307,3.9325670042183123e307,3.9337065483806474e307,3.9348460925429825e307,3.9359856367053176e307,3.937125180867653e307,3.938264725029988e307,3.9394042691923225e307,3.9405438133546577e307,3.941683357516993e307,3.942822901679328e307,3.943962445841663e307,3.945101990003998e307,3.9462415341663333e307,3.9473810783286685e307,3.948520622491003e307,3.949660166653338e307,3.9507997108156734e307,3.9519392549780085e307,3.9530787991403436e307,3.954218343302679e307,3.955357887465014e307,3.9564974316273485e307,3.9576369757896837e307,3.958776519952019e307,3.959916064114354e307,3.961055608276689e307,3.962195152439024e307,3.9633346966013593e307,3.9644742407636944e307,3.965613784926029e307,3.966753329088364e307,3.9678928732506993e307,3.9690324174130345e307,3.9701719615753696e307,3.9713115057377047e307,3.97245104990004e307,3.973590594062375e307,3.9747301382247096e307,3.975869682387045e307,3.97700922654938e307,3.978148770711715e307,3.97928831487405e307,3.9804278590363853e307,3.9815674031987204e307,3.982706947361055e307,3.98384649152339e307,3.9849860356857253e307,3.9861255798480605e307,3.9872651240103956e307,3.9884046681727307e307,3.989544212335066e307,3.990683756497401e307,3.9918233006597356e307,3.992962844822071e307,3.994102388984406e307,3.995241933146741e307,3.996381477309076e307,3.9975210214714113e307,3.9986605656337464e307,3.999800109796081e307,4.000939653958416e307,4.0020791981207513e307,4.0032187422830864e307,4.0043582864454216e307,4.0054978306077567e307,4.006637374770092e307,4.007776918932427e307,4.0089164630947616e307,4.0100560072570967e307,4.011195551419432e307,4.012335095581767e307,4.013474639744102e307,4.0146141839064373e307,4.0157537280687724e307,4.016893272231107e307,4.018032816393442e307,4.0191723605557773e307,4.0203119047181124e307,4.0214514488804476e307,4.0225909930427827e307,4.023730537205118e307,4.024870081367453e307,4.0260096255297876e307,4.0271491696921227e307,4.028288713854458e307,4.029428258016793e307,4.030567802179128e307,4.031707346341463e307,4.0328468905037984e307,4.033986434666133e307,4.035125978828468e307,4.0362655229908033e307,4.0374050671531384e307,4.0385446113154735e307,4.0396841554778087e307,4.040823699640144e307,4.041963243802479e307,4.0431027879648136e307,4.0442423321271487e307,4.045381876289484e307,4.046521420451819e307,4.047660964614154e307,4.048800508776489e307,4.0499400529388244e307,4.0510795971011595e307,4.052219141263494e307,4.0533586854258293e307,4.0544982295881644e307,4.0556377737504995e307,4.0567773179128346e307,4.05791686207517e307,4.059056406237505e307,4.0601959503998395e307,4.0613354945621747e307,4.06247503872451e307,4.063614582886845e307,4.06475412704918e307,4.065893671211515e307,4.0670332153738503e307,4.0681727595361855e307,4.06931230369852e307,4.070451847860855e307,4.0715913920231904e307,4.0727309361855255e307,4.0738704803478606e307,4.075010024510196e307,4.076149568672531e307,4.0772891128348655e307,4.0784286569972007e307,4.079568201159536e307,4.080707745321871e307,4.081847289484206e307,4.082986833646541e307,4.0841263778088763e307,4.0852659219712114e307,4.086405466133546e307,4.087545010295881e307,4.0886845544582163e307,4.0898240986205515e307,4.0909636427828866e307,4.0921031869452217e307,4.093242731107557e307,4.0943822752698915e307,4.0955218194322266e307,4.096661363594562e307,4.097800907756897e307,4.098940451919232e307,4.100079996081567e307,4.1012195402439023e307,4.1023590844062374e307,4.103498628568572e307,4.104638172730907e307,4.1057777168932423e307,4.1069172610555775e307,4.1080568052179126e307,4.1091963493802477e307,4.110335893542583e307,4.1114754377049175e307,4.1126149818672526e307,4.113754526029588e307,4.114894070191923e307,4.116033614354258e307,4.117173158516593e307,4.1183127026789283e307,4.1194522468412634e307,4.120591791003598e307,4.121731335165933e307,4.1228708793282683e307,4.1240104234906034e307,4.1251499676529386e307,4.1262895118152737e307,4.127429055977609e307,4.128568600139944e307,4.1297081443022786e307,4.1308476884646137e307,4.131987232626949e307,4.133126776789284e307,4.134266320951619e307,4.1354058651139543e307,4.1365454092762894e307,4.137684953438624e307,4.138824497600959e307,4.1399640417632943e307,4.1411035859256294e307,4.1422431300879646e307,4.1433826742502997e307,4.144522218412635e307,4.14566176257497e307,4.1468013067373046e307,4.1479408508996397e307,4.149080395061975e307,4.15021993922431e307,4.151359483386645e307,4.15249902754898e307,4.1536385717113154e307,4.15477811587365e307,4.155917660035985e307,4.1570572041983203e307,4.1581967483606554e307,4.1593362925229905e307,4.1604758366853257e307,4.161615380847661e307,4.162754925009996e307,4.1638944691723306e307,4.1650340133346657e307,4.166173557497001e307,4.167313101659336e307,4.168452645821671e307,4.169592189984006e307,4.1707317341463414e307,4.171871278308676e307,4.173010822471011e307,4.1741503666333463e307,4.1752899107956814e307,4.1764294549580165e307,4.1775689991203516e307,4.178708543282687e307,4.179848087445022e307,4.1809876316073565e307,4.1821271757696917e307,4.183266719932027e307,4.184406264094362e307,4.185545808256697e307,4.186685352419032e307,4.1878248965813673e307,4.188964440743702e307,4.190103984906037e307,4.191243529068372e307,4.1923830732307074e307,4.1935226173930425e307,4.1946621615553776e307,4.195801705717713e307,4.196941249880048e307,4.1980807940423825e307,4.1992203382047177e307,4.200359882367053e307,4.201499426529388e307,4.202638970691723e307,4.203778514854058e307,4.2049180590163933e307,4.2060576031787284e307,4.207197147341063e307,4.208336691503398e307,4.2094762356657333e307,4.2106157798280685e307,4.2117553239904036e307,4.2128948681527387e307,4.214034412315074e307,4.2151739564774085e307,4.2163135006397436e307,4.217453044802079e307,4.218592588964414e307,4.219732133126749e307,4.220871677289084e307,4.2220112214514193e307,4.2231507656137544e307,4.224290309776089e307,4.225429853938424e307,4.2265693981007593e307,4.2277089422630945e307,4.2288484864254296e307,4.2299880305877647e307,4.2311275747501e307,4.2322671189124345e307,4.2334066630747696e307,4.2345462072371047e307,4.23568575139944e307,4.236825295561775e307,4.23796483972411e307,4.2391043838864453e307,4.2402439280487804e307,4.241383472211115e307,4.24252301637345e307,4.2436625605357853e307,4.2448021046981204e307,4.2459416488604556e307,4.2470811930227907e307,4.248220737185126e307,4.2493602813474605e307,4.2504998255097956e307,4.2516393696721307e307,4.252778913834466e307,4.253918457996801e307,4.255058002159136e307,4.2561975463214713e307,4.2573370904838064e307,4.258476634646141e307,4.259616178808476e307,4.2607557229708113e307,4.2618952671331464e307,4.2630348112954816e307,4.2641743554578167e307,4.265313899620152e307,4.2664534437824864e307,4.2675929879448216e307,4.2687325321071567e307,4.269872076269492e307,4.271011620431827e307,4.272151164594162e307,4.273290708756497e307,4.2744302529188324e307,4.275569797081167e307,4.276709341243502e307,4.2778488854058373e307,4.2789884295681724e307,4.2801279737305075e307,4.2812675178928427e307,4.282407062055178e307,4.283546606217513e307,4.2846861503798476e307,4.2858256945421827e307,4.286965238704518e307,4.288104782866853e307,4.289244327029188e307,4.290383871191523e307,4.2915234153538584e307,4.292662959516193e307,4.293802503678528e307,4.294942047840863e307,4.2960815920031984e307,4.2972211361655335e307,4.2983606803278686e307,4.299500224490204e307,4.300639768652539e307,4.3017793128148735e307,4.3029188569772087e307,4.304058401139544e307,4.305197945301879e307,4.306337489464214e307,4.307477033626549e307,4.3086165777888843e307,4.309756121951219e307,4.310895666113554e307,4.312035210275889e307,4.3131747544382244e307,4.3143142986005595e307,4.3154538427628946e307,4.31659338692523e307,4.317732931087565e307,4.3188724752498995e307,4.3200120194122347e307,4.32115156357457e307,4.322291107736905e307,4.32343065189924e307,4.324570196061575e307,4.3257097402239103e307,4.326849284386245e307,4.32798882854858e307,4.329128372710915e307,4.3302679168732503e307,4.3314074610355855e307,4.3325470051979206e307,4.3336865493602557e307,4.334826093522591e307,4.3359656376849255e307,4.3371051818472606e307,4.338244726009596e307,4.339384270171931e307,4.340523814334266e307,4.341663358496601e307,4.3428029026589363e307,4.343942446821271e307,4.345081990983606e307,4.346221535145941e307,4.3473610793082763e307,4.3485006234706115e307,4.3496401676329466e307,4.3507797117952817e307,4.351919255957617e307,4.3530588001199515e307,4.3541983442822866e307,4.3553378884446217e307,4.356477432606957e307,4.357616976769292e307,4.358756520931627e307,4.3598960650939623e307,4.3610356092562974e307,4.362175153418632e307,4.363314697580967e307,4.3644542417433023e307,4.3655937859056374e307,4.3667333300679726e307,4.3678728742303077e307,4.369012418392643e307,4.3701519625549775e307,4.3712915067173126e307,4.3724310508796477e307,4.373570595041983e307,4.374710139204318e307,4.375849683366653e307,4.3769892275289883e307,4.3781287716913234e307,4.379268315853658e307,4.380407860015993e307,4.3815474041783283e307,4.3826869483406634e307,4.3838264925029985e307,4.3849660366653337e307,4.386105580827669e307,4.3872451249900034e307,4.3883846691523386e307,4.3895242133146737e307,4.390663757477009e307,4.391803301639344e307,4.392942845801679e307,4.394082389964014e307,4.3952219341263494e307,4.396361478288684e307,4.397501022451019e307,4.3986405666133543e307,4.3997801107756894e307,4.4009196549380245e307,4.4020591991003597e307,4.403198743262695e307,4.4043382874250294e307,4.4054778315873646e307,4.4066173757496997e307,4.407756919912035e307,4.40889646407437e307,4.410036008236705e307,4.41117555239904e307,4.4123150965613754e307,4.41345464072371e307,4.414594184886045e307,4.41573372904838e307,4.4168732732107154e307,4.4180128173730505e307,4.4191523615353856e307,4.420291905697721e307,4.4214314498600554e307,4.4225709940223905e307,4.4237105381847257e307,4.424850082347061e307,4.425989626509396e307,4.427129170671731e307,4.428268714834066e307,4.4294082589964013e307,4.430547803158736e307,4.431687347321071e307,4.432826891483406e307,4.4339664356457414e307,4.4351059798080765e307,4.4362455239704116e307,4.437385068132747e307,4.438524612295082e307,4.4396641564574165e307,4.4408037006197517e307,4.441943244782087e307,4.443082788944422e307,4.444222333106757e307,4.445361877269092e307,4.4465014214314273e307,4.447640965593762e307,4.448780509756097e307,4.449920053918432e307,4.4510595980807673e307,4.4521991422431025e307,4.4533386864054376e307,4.4544782305677727e307,4.455617774730108e307,4.4567573188924425e307,4.4578968630547776e307,4.459036407217113e307,4.460175951379448e307,4.461315495541783e307,4.462455039704118e307,4.4635945838664533e307,4.464734128028788e307,4.465873672191123e307,4.467013216353458e307,4.4681527605157933e307,4.4692923046781285e307,4.4704318488404636e307,4.4715713930027987e307,4.472710937165134e307,4.4738504813274685e307,4.4749900254898036e307,4.4761295696521387e307,4.477269113814474e307,4.478408657976809e307,4.479548202139144e307,4.4806877463014793e307,4.481827290463814e307,4.482966834626149e307,4.484106378788484e307,4.4852459229508193e307,4.4863854671131544e307,4.4875250112754896e307,4.4886645554378247e307,4.48980409960016e307,4.4909436437624945e307,4.4920831879248296e307,4.4932227320871647e307,4.4943622762495e307,4.495501820411834e307,4.49664136457417e307,4.497780908736505e307,4.49892045289884e307,4.500059997061175e307,4.501199541223511e307,4.502339085385845e307,4.50347862954818e307,4.504618173710516e307,4.50575771787285e307,4.506897262035186e307,4.50803680619752e307,4.509176350359856e307,4.510315894522191e307,4.511455438684526e307,4.512594982846861e307,4.513734527009196e307,4.514874071171531e307,4.516013615333866e307,4.5171531594962015e307,4.518292703658536e307,4.519432247820872e307,4.520571791983206e307,4.521711336145541e307,4.522850880307877e307,4.523990424470211e307,4.525129968632547e307,4.526269512794882e307,4.527409056957217e307,4.528548601119552e307,4.529688145281886e307,4.530827689444222e307,4.531967233606557e307,4.533106777768892e307,4.534246321931227e307,4.535385866093563e307,4.536525410255897e307,4.537664954418232e307,4.538804498580568e307,4.539944042742902e307,4.541083586905238e307,4.542223131067572e307,4.543362675229908e307,4.544502219392243e307,4.545641763554578e307,4.546781307716913e307,4.547920851879248e307,4.549060396041583e307,4.550199940203918e307,4.551339484366253e307,4.552479028528588e307,4.553618572690924e307,4.554758116853258e307,4.555897661015593e307,4.557037205177929e307,4.558176749340263e307,4.559316293502599e307,4.560455837664934e307,4.561595381827269e307,4.562734925989604e307,4.563874470151938e307,4.565014014314274e307,4.566153558476609e307,4.567293102638944e307,4.568432646801279e307,4.569572190963615e307,4.570711735125949e307,4.571851279288285e307,4.572990823450619e307,4.574130367612954e307,4.57526991177529e307,4.576409455937624e307,4.57754900009996e307,4.578688544262295e307,4.57982808842463e307,4.580967632586965e307,4.5821071767493e307,4.583246720911635e307,4.58438626507397e307,4.585525809236305e307,4.58666535339864e307,4.587804897560976e307,4.58894444172331e307,4.590083985885645e307,4.591223530047981e307,4.592363074210315e307,4.593502618372651e307,4.594642162534985e307,4.595781706697321e307,4.596921250859656e307,4.59806079502199e307,4.599200339184326e307,4.600339883346661e307,4.601479427508996e307,4.602618971671331e307,4.603758515833667e307,4.604898059996001e307,4.606037604158337e307,4.607177148320671e307,4.608316692483006e307,4.609456236645342e307,4.610595780807676e307,4.611735324970012e307,4.612874869132347e307,4.614014413294682e307,4.615153957457017e307,4.616293501619351e307,4.617433045781687e307,4.618572589944022e307,4.619712134106357e307,4.620851678268692e307,4.621991222431028e307,4.623130766593362e307,4.624270310755697e307,4.625409854918033e307,4.626549399080367e307,4.627688943242703e307,4.628828487405037e307,4.629968031567373e307,4.631107575729708e307,4.632247119892043e307,4.633386664054378e307,4.634526208216713e307,4.635665752379048e307,4.636805296541383e307,4.6379448407037185e307,4.639084384866053e307,4.640223929028389e307,4.641363473190723e307,4.642503017353058e307,4.643642561515394e307,4.644782105677728e307,4.645921649840064e307,4.647061194002399e307,4.648200738164734e307,4.649340282327069e307,4.650479826489403e307,4.651619370651739e307,4.652758914814074e307,4.653898458976409e307,4.655038003138744e307,4.65617754730108e307,4.657317091463414e307,4.658456635625749e307,4.659596179788085e307,4.660735723950419e307,4.661875268112755e307,4.663014812275089e307,4.664154356437425e307,4.66529390059976e307,4.666433444762095e307,4.66757298892443e307,4.668712533086765e307,4.6698520772491e307,4.670991621411435e307,4.67213116557377e307,4.673270709736105e307,4.674410253898441e307,4.675549798060775e307,4.67668934222311e307,4.677828886385446e307,4.67896843054778e307,4.680107974710116e307,4.681247518872451e307,4.682387063034786e307,4.683526607197121e307,4.684666151359455e307,4.685805695521791e307,4.686945239684126e307,4.688084783846461e307,4.689224328008796e307,4.690363872171132e307,4.691503416333466e307,4.692642960495801e307,4.693782504658136e307,4.694922048820471e307,4.696061592982807e307,4.697201137145141e307,4.698340681307477e307,4.699480225469812e307,4.700619769632147e307,4.701759313794482e307,4.702898857956817e307,4.704038402119152e307,4.705177946281487e307,4.706317490443822e307,4.707457034606157e307,4.708596578768493e307,4.709736122930827e307,4.710875667093162e307,4.712015211255498e307,4.713154755417832e307,4.714294299580168e307,4.715433843742502e307,4.716573387904838e307,4.717712932067173e307,4.718852476229507e307,4.719992020391843e307,4.721131564554178e307,4.722271108716513e307,4.723410652878848e307,4.724550197041184e307,4.725689741203518e307,4.726829285365854e307,4.727968829528188e307,4.729108373690523e307,4.730247917852859e307,4.731387462015193e307,4.732527006177529e307,4.733666550339864e307,4.734806094502199e307,4.735945638664534e307,4.737085182826868e307,4.738224726989204e307,4.739364271151539e307,4.740503815313874e307,4.741643359476209e307,4.742782903638545e307,4.743922447800879e307,4.745061991963214e307,4.74620153612555e307,4.747341080287884e307,4.74848062445022e307,4.749620168612554e307,4.75075971277489e307,4.751899256937225e307,4.753038801099559e307,4.754178345261895e307,4.75531788942423e307,4.756457433586565e307,4.7575969777489e307,4.758736521911235e307,4.75987606607357e307,4.761015610235906e307,4.76215515439824e307,4.763294698560575e307,4.764434242722911e307,4.765573786885245e307,4.766713331047581e307,4.767852875209916e307,4.768992419372251e307,4.770131963534586e307,4.77127150769692e307,4.772411051859256e307,4.773550596021591e307,4.774690140183926e307,4.775829684346261e307,4.776969228508597e307,4.778108772670931e307,4.779248316833266e307,4.780387860995602e307,4.781527405157936e307,4.782666949320272e307,4.783806493482606e307,4.784946037644942e307,4.786085581807277e307,4.787225125969612e307,4.788364670131947e307,4.789504214294282e307,4.790643758456617e307,4.791783302618952e307,4.792922846781287e307,4.794062390943622e307,4.795201935105958e307,4.796341479268292e307,4.797481023430627e307,4.798620567592963e307,4.799760111755297e307,4.800899655917633e307,4.802039200079968e307,4.803178744242303e307,4.804318288404638e307,4.805457832566972e307,4.806597376729308e307,4.807736920891643e307,4.808876465053978e307,4.810016009216313e307,4.811155553378649e307,4.812295097540983e307,4.813434641703318e307,4.814574185865653e307,4.815713730027988e307,4.816853274190324e307,4.817992818352658e307,4.819132362514994e307,4.820271906677329e307,4.821411450839664e307,4.822550995001999e307,4.823690539164334e307,4.824830083326669e307,4.825969627489004e307,4.827109171651339e307,4.828248715813674e307,4.82938825997601e307,4.830527804138344e307,4.831667348300679e307,4.832806892463015e307,4.833946436625349e307,4.835085980787685e307,4.836225524950019e307,4.837365069112355e307,4.83850461327469e307,4.839644157437024e307,4.84078370159936e307,4.841923245761695e307,4.84306278992403e307,4.844202334086365e307,4.845341878248701e307,4.846481422411035e307,4.84762096657337e307,4.848760510735705e307,4.84990005489804e307,4.851039599060376e307,4.85217914322271e307,4.853318687385046e307,4.854458231547381e307,4.855597775709716e307,4.856737319872051e307,4.857876864034385e307,4.859016408196721e307,4.860155952359056e307,4.861295496521391e307,4.862435040683726e307,4.863574584846062e307,4.864714129008396e307,4.865853673170731e307,4.866993217333067e307,4.868132761495401e307,4.869272305657737e307,4.870411849820071e307,4.871551393982407e307,4.872690938144742e307,4.873830482307076e307,4.874970026469412e307,4.876109570631747e307,4.877249114794082e307,4.878388658956417e307,4.879528203118752e307,4.880667747281087e307,4.881807291443423e307,4.882946835605757e307,4.884086379768092e307,4.885225923930428e307,4.886365468092762e307,4.887505012255098e307,4.888644556417433e307,4.889784100579768e307,4.890923644742103e307,4.892063188904437e307,4.893202733066773e307,4.894342277229108e307,4.895481821391443e307,4.896621365553778e307,4.897760909716114e307,4.898900453878448e307,4.900039998040783e307,4.901179542203119e307,4.902319086365453e307,4.903458630527789e307,4.904598174690123e307,4.905737718852459e307,4.906877263014794e307,4.908016807177128e307,4.909156351339464e307,4.910295895501799e307,4.911435439664134e307,4.912574983826469e307,4.913714527988804e307,4.914854072151139e307,4.915993616313475e307,4.917133160475809e307,4.918272704638144e307,4.91941224880048e307,4.920551792962814e307,4.92169133712515e307,4.922830881287485e307,4.92397042544982e307,4.925109969612155e307,4.926249513774489e307,4.927389057936825e307,4.92852860209916e307,4.929668146261495e307,4.93080769042383e307,4.931947234586166e307,4.9330867787485e307,4.934226322910835e307,4.93536586707317e307,4.936505411235505e307,4.937644955397841e307,4.938784499560175e307,4.939924043722511e307,4.941063587884846e307,4.942203132047181e307,4.943342676209516e307,4.944482220371851e307,4.945621764534186e307,4.946761308696521e307,4.947900852858856e307,4.949040397021191e307,4.950179941183527e307,4.951319485345861e307,4.952459029508196e307,4.953598573670532e307,4.954738117832866e307,4.955877661995202e307,4.957017206157536e307,4.958156750319872e307,4.959296294482207e307,4.960435838644541e307,4.961575382806877e307,4.962714926969212e307,4.963854471131547e307,4.964994015293882e307,4.966133559456218e307,4.967273103618552e307,4.968412647780887e307,4.969552191943222e307,4.970691736105557e307,4.971831280267893e307,4.972970824430227e307,4.974110368592563e307,4.975249912754898e307,4.976389456917233e307,4.977529001079568e307,4.978668545241902e307,4.979808089404238e307,4.980947633566573e307,4.982087177728908e307,4.983226721891243e307,4.984366266053579e307,4.985505810215913e307,4.986645354378248e307,4.987784898540584e307,4.988924442702918e307,4.990063986865254e307,4.991203531027588e307,4.992343075189924e307,4.993482619352259e307,4.994622163514593e307,4.995761707676929e307,4.996901251839264e307,4.998040796001599e307,4.999180340163934e307,5.000319884326269e307,5.001459428488604e307,5.002598972650939e307,5.003738516813274e307,5.004878060975609e307,5.006017605137945e307,5.007157149300279e307,5.008296693462615e307,5.00943623762495e307,5.010575781787285e307,5.01171532594962e307,5.012854870111954e307,5.01399441427429e307,5.015133958436625e307,5.01627350259896e307,5.017413046761295e307,5.018552590923631e307,5.019692135085965e307,5.0208316792483e307,5.021971223410636e307,5.02311076757297e307,5.024250311735306e307,5.02538985589764e307,5.026529400059976e307,5.027668944222311e307,5.028808488384645e307,5.029948032546981e307,5.031087576709316e307,5.032227120871651e307,5.033366665033986e307,5.034506209196321e307,5.035645753358656e307,5.036785297520992e307,5.037924841683326e307,5.039064385845661e307,5.040203930007997e307,5.041343474170331e307,5.042483018332667e307,5.043622562495002e307,5.044762106657337e307,5.045901650819672e307,5.047041194982006e307,5.048180739144342e307,5.049320283306677e307,5.050459827469012e307,5.051599371631347e307,5.052738915793683e307,5.053878459956017e307,5.055018004118352e307,5.056157548280687e307,5.057297092443022e307,5.058436636605358e307,5.059576180767692e307,5.060715724930028e307,5.061855269092363e307,5.062994813254697e307,5.064134357417033e307,5.065273901579368e307,5.066413445741703e307,5.067552989904038e307,5.068692534066373e307,5.069832078228708e307,5.070971622391044e307,5.072111166553378e307,5.073250710715713e307,5.074390254878049e307,5.075529799040383e307,5.076669343202719e307,5.077808887365053e307,5.078948431527389e307,5.080087975689724e307,5.081227519852058e307,5.082367064014394e307,5.083506608176729e307,5.084646152339064e307,5.085785696501399e307,5.086925240663735e307,5.088064784826069e307,5.089204328988404e307,5.090343873150739e307,5.091483417313074e307,5.09262296147541e307,5.093762505637744e307,5.09490204980008e307,5.096041593962415e307,5.09718113812475e307,5.098320682287085e307,5.099460226449419e307,5.100599770611755e307,5.10173931477409e307,5.102878858936425e307,5.10401840309876e307,5.105157947261096e307,5.10629749142343e307,5.107437035585765e307,5.108576579748101e307,5.109716123910435e307,5.110855668072771e307,5.111995212235105e307,5.113134756397441e307,5.114274300559776e307,5.11541384472211e307,5.116553388884446e307,5.117692933046781e307,5.118832477209116e307,5.119972021371451e307,5.121111565533786e307,5.122251109696121e307,5.123390653858456e307,5.124530198020791e307,5.125669742183126e307,5.126809286345462e307,5.127948830507796e307,5.129088374670132e307,5.130227918832467e307,5.131367462994802e307,5.132507007157137e307,5.133646551319471e307,5.134786095481807e307,5.135925639644142e307,5.137065183806477e307,5.138204727968812e307,5.139344272131148e307,5.140483816293482e307,5.141623360455817e307,5.142762904618153e307,5.143902448780487e307,5.145041992942823e307,5.146181537105157e307,5.147321081267493e307,5.148460625429828e307,5.149600169592162e307,5.150739713754498e307,5.151879257916833e307,5.153018802079168e307,5.154158346241503e307,5.155297890403838e307,5.156437434566173e307,5.157576978728508e307,5.158716522890843e307,5.159856067053178e307,5.160995611215514e307,5.162135155377848e307,5.163274699540184e307,5.164414243702519e307,5.165553787864854e307,5.166693332027189e307,5.167832876189523e307,5.168972420351859e307,5.170111964514194e307,5.171251508676529e307,5.172391052838864e307,5.1735305970012e307,5.174670141163534e307,5.175809685325869e307,5.176949229488204e307,5.178088773650539e307,5.179228317812875e307,5.180367861975209e307,5.181507406137545e307,5.18264695029988e307,5.183786494462214e307,5.18492603862455e307,5.186065582786885e307,5.18720512694922e307,5.188344671111555e307,5.18948421527389e307,5.190623759436225e307,5.191763303598561e307,5.192902847760895e307,5.19404239192323e307,5.195181936085566e307,5.1963214802479e307,5.197461024410236e307,5.19860056857257e307,5.199740112734906e307,5.200879656897241e307,5.202019201059575e307,5.203158745221911e307,5.204298289384246e307,5.205437833546581e307,5.206577377708916e307,5.207716921871252e307,5.208856466033586e307,5.209996010195921e307,5.211135554358256e307,5.212275098520591e307,5.213414642682927e307,5.214554186845261e307,5.215693731007597e307,5.216833275169932e307,5.217972819332266e307,5.219112363494602e307,5.220251907656936e307,5.221391451819272e307,5.222530995981607e307,5.223670540143942e307,5.224810084306277e307,5.225949628468613e307,5.227089172630947e307,5.228228716793282e307,5.229368260955618e307,5.230507805117952e307,5.231647349280288e307,5.232786893442622e307,5.233926437604958e307,5.235065981767293e307,5.236205525929627e307,5.237345070091963e307,5.238484614254298e307,5.239624158416633e307,5.240763702578968e307,5.241903246741303e307,5.243042790903638e307,5.244182335065973e307,5.245321879228308e307,5.246461423390643e307,5.247600967552979e307,5.248740511715313e307,5.249880055877649e307,5.251019600039984e307,5.252159144202319e307,5.253298688364654e307,5.254438232526988e307,5.255577776689324e307,5.256717320851659e307,5.257856865013994e307,5.258996409176329e307,5.260135953338665e307,5.261275497500999e307,5.262415041663334e307,5.26355458582567e307,5.264694129988004e307,5.26583367415034e307,5.266973218312674e307,5.26811276247501e307,5.269252306637345e307,5.270391850799679e307,5.271531394962015e307,5.27267093912435e307,5.273810483286685e307,5.27495002744902e307,5.276089571611355e307,5.27722911577369e307,5.278368659936025e307,5.27950820409836e307,5.280647748260695e307,5.281787292423031e307,5.282926836585365e307,5.284066380747701e307,5.285205924910036e307,5.286345469072371e307,5.287485013234706e307,5.28862455739704e307,5.289764101559376e307,5.290903645721711e307,5.292043189884046e307,5.293182734046381e307,5.294322278208717e307,5.295461822371051e307,5.296601366533386e307,5.297740910695721e307,5.298880454858056e307,5.300019999020392e307,5.301159543182726e307,5.302299087345062e307,5.303438631507397e307,5.304578175669731e307,5.305717719832067e307,5.306857263994402e307,5.307996808156737e307,5.309136352319072e307,5.310275896481407e307,5.311415440643742e307,5.312554984806077e307,5.313694528968412e307,5.314834073130747e307,5.315973617293083e307,5.317113161455417e307,5.318252705617753e307,5.319392249780087e307,5.320531793942423e307,5.321671338104758e307,5.322810882267092e307,5.323950426429428e307,5.325089970591763e307,5.326229514754098e307,5.327369058916433e307,5.328508603078769e307,5.329648147241103e307,5.330787691403438e307,5.331927235565773e307,5.333066779728108e307,5.334206323890444e307,5.335345868052778e307,5.336485412215114e307,5.337624956377449e307,5.338764500539783e307,5.339904044702119e307,5.341043588864453e307,5.342183133026789e307,5.343322677189124e307,5.344462221351459e307,5.345601765513794e307,5.34674130967613e307,5.347880853838464e307,5.349020398000799e307,5.350159942163135e307,5.351299486325469e307,5.352439030487805e307,5.353578574650139e307,5.354718118812475e307,5.35585766297481e307,5.356997207137144e307,5.35813675129948e307,5.359276295461815e307,5.36041583962415e307,5.361555383786485e307,5.36269492794882e307,5.363834472111155e307,5.36497401627349e307,5.366113560435825e307,5.36725310459816e307,5.368392648760496e307,5.36953219292283e307,5.370671737085166e307,5.371811281247501e307,5.372950825409835e307,5.374090369572171e307,5.375229913734505e307,5.376369457896841e307,5.377509002059176e307,5.378648546221511e307,5.379788090383846e307,5.380927634546182e307,5.382067178708516e307,5.383206722870851e307,5.384346267033187e307,5.385485811195521e307,5.386625355357857e307,5.387764899520191e307,5.388904443682527e307,5.390043987844862e307,5.391183532007196e307,5.392323076169532e307,5.393462620331867e307,5.394602164494202e307,5.395741708656537e307,5.396881252818872e307,5.398020796981207e307,5.399160341143542e307,5.400299885305877e307,5.401439429468212e307,5.402578973630548e307,5.403718517792882e307,5.404858061955218e307,5.405997606117553e307,5.407137150279888e307,5.408276694442223e307,5.409416238604557e307,5.410555782766893e307,5.411695326929228e307,5.412834871091563e307,5.413974415253898e307,5.415113959416234e307,5.416253503578568e307,5.417393047740903e307,5.418532591903238e307,5.419672136065573e307,5.420811680227909e307,5.421951224390243e307,5.423090768552579e307,5.424230312714914e307,5.425369856877248e307,5.426509401039584e307,5.427648945201919e307,5.428788489364254e307,5.429928033526589e307,5.431067577688924e307,5.432207121851259e307,5.433346666013594e307,5.434486210175929e307,5.435625754338264e307,5.4367652985006e307,5.437904842662934e307,5.43904438682527e307,5.440183930987604e307,5.44132347514994e307,5.442463019312275e307,5.443602563474609e307,5.444742107636945e307,5.44588165179928e307,5.447021195961615e307,5.44816074012395e307,5.449300284286286e307,5.45043982844862e307,5.451579372610955e307,5.45271891677329e307,5.453858460935625e307,5.454998005097961e307,5.456137549260295e307,5.457277093422631e307,5.458416637584966e307,5.4595561817473e307,5.460695725909636e307,5.46183527007197e307,5.462974814234306e307,5.464114358396641e307,5.465253902558976e307,5.466393446721311e307,5.467532990883646e307,5.468672535045981e307,5.469812079208316e307,5.470951623370652e307,5.472091167532986e307,5.473230711695322e307,5.474370255857656e307,5.475509800019992e307,5.476649344182327e307,5.477788888344661e307,5.478928432506997e307,5.480067976669332e307,5.481207520831667e307,5.482347064994002e307,5.483486609156337e307,5.484626153318672e307,5.485765697481007e307,5.486905241643342e307,5.488044785805677e307,5.489184329968013e307,5.490323874130347e307,5.491463418292683e307,5.492602962455018e307,5.493742506617352e307,5.494882050779688e307,5.496021594942022e307,5.497161139104358e307,5.498300683266693e307,5.499440227429028e307,5.500579771591363e307,5.501719315753699e307,5.502858859916033e307,5.503998404078368e307,5.5051379482407035e307,5.506277492403038e307,5.507417036565374e307,5.508556580727708e307,5.509696124890044e307,5.510835669052379e307,5.511975213214713e307,5.513114757377049e307,5.514254301539384e307,5.515393845701719e307,5.516533389864054e307,5.517672934026389e307,5.518812478188724e307,5.519952022351059e307,5.521091566513394e307,5.522231110675729e307,5.523370654838065e307,5.524510199000399e307,5.525649743162735e307,5.52678928732507e307,5.527928831487404e307,5.52906837564974e307,5.530207919812074e307,5.53134746397441e307,5.532487008136745e307,5.53362655229908e307,5.534766096461415e307,5.535905640623751e307,5.537045184786085e307,5.53818472894842e307,5.539324273110755e307,5.54046381727309e307,5.541603361435426e307,5.54274290559776e307,5.543882449760096e307,5.545021993922431e307,5.546161538084765e307,5.547301082247101e307,5.548440626409436e307,5.549580170571771e307,5.550719714734106e307,5.551859258896441e307,5.552998803058776e307,5.554138347221111e307,5.555277891383446e307,5.556417435545781e307,5.557556979708117e307,5.558696523870451e307,5.559836068032787e307,5.560975612195121e307,5.562115156357457e307,5.563254700519792e307,5.564394244682126e307,5.565533788844462e307,5.566673333006797e307,5.567812877169132e307,5.568952421331467e307,5.570091965493803e307,5.571231509656137e307,5.572371053818472e307,5.573510597980807e307,5.574650142143142e307,5.575789686305478e307,5.576929230467812e307,5.578068774630148e307,5.579208318792483e307,5.580347862954817e307,5.581487407117153e307,5.582626951279487e307,5.583766495441823e307,5.584906039604158e307,5.586045583766493e307,5.587185127928828e307,5.588324672091163e307,5.589464216253498e307,5.590603760415833e307,5.591743304578169e307,5.592882848740503e307,5.594022392902839e307,5.595161937065173e307,5.596301481227509e307,5.597441025389844e307,5.598580569552178e307,5.599720113714514e307,5.600859657876849e307,5.601999202039184e307,5.603138746201519e307,5.604278290363854e307,5.605417834526189e307,5.606557378688524e307,5.607696922850859e307,5.608836467013194e307,5.60997601117553e307,5.611115555337864e307,5.6122550995002e307,5.613394643662535e307,5.614534187824869e307,5.615673731987205e307,5.616813276149539e307,5.617952820311875e307,5.61909236447421e307,5.620231908636545e307,5.62137145279888e307,5.622510996961215e307,5.62365054112355e307,5.624790085285885e307,5.6259296294482205e307,5.627069173610555e307,5.628208717772891e307,5.629348261935225e307,5.630487806097561e307,5.631627350259896e307,5.63276689442223e307,5.633906438584566e307,5.635045982746901e307,5.636185526909236e307,5.637325071071571e307,5.638464615233906e307,5.639604159396241e307,5.640743703558576e307,5.641883247720911e307,5.643022791883246e307,5.644162336045582e307,5.645301880207916e307,5.646441424370252e307,5.647580968532587e307,5.648720512694921e307,5.649860056857257e307,5.650999601019591e307,5.652139145181927e307,5.653278689344262e307,5.654418233506597e307,5.655557777668932e307,5.656697321831268e307,5.657836865993602e307,5.658976410155937e307,5.660115954318272e307,5.661255498480607e307,5.662395042642943e307,5.663534586805277e307,5.664674130967613e307,5.665813675129948e307,5.666953219292282e307,5.668092763454618e307,5.669232307616953e307,5.670371851779288e307,5.671511395941623e307,5.672650940103958e307,5.673790484266293e307,5.674930028428628e307,5.676069572590963e307,5.677209116753298e307,5.678348660915634e307,5.679488205077968e307,5.680627749240304e307,5.681767293402638e307,5.682906837564973e307,5.684046381727309e307,5.685185925889643e307,5.686325470051979e307,5.687465014214314e307,5.688604558376649e307,5.689744102538984e307,5.69088364670132e307,5.692023190863654e307,5.693162735025989e307,5.694302279188324e307,5.695441823350659e307,5.696581367512995e307,5.697720911675329e307,5.698860455837665e307,5.7e307]}

},{}],44:[function(require,module,exports){
module.exports={"expected":[7.926654595212022,7.927843028901982,7.929031284464935,7.930219361980949,7.9314072615300395,7.932594983192154,7.933782527047185,7.934969893174965,7.9361570816552645,7.9373440925677965,7.9385309259922145,7.939717582008108,7.940904060695015,7.942090362132407,7.9432764863997,7.944462433576248,7.94564820374135,7.946833796974242,7.948019213354101,7.949204452960047,7.950389515871139,7.95157440216638,7.952759111924711,7.953943645225015,7.955128002146118,7.956312182766787,7.957496187165727,7.958680015421589,7.959863667612962,7.961047143818378,7.9622304441163125,7.96341356858518,7.964596517303336,7.965779290349083,7.966961887800658,7.968144309736247,7.969326556233972,7.970508627371901,7.971690523228044,7.97287224388035,7.974053789406716,7.9752351598849724,7.976416355392901,7.977597376008222,7.978778221808597,7.9799588928716325,7.981139389274877,7.982319711095819,7.983499858411895,7.984679831300477,7.985859629838889,7.98703925410439,7.988218704174186,7.989397980125425,7.990577082035196,7.991756009980534,7.992934764038418,7.9941133442857675,7.995291750799446,7.996469983656261,7.997648042932963,7.998825928706247,8.000003641052748,8.001181180049052,8.00235854577168,8.003535738297101,8.004712757701729,8.005889604061919,8.007066277453971,8.00824277795413,8.009419105638585,8.010595260583464,8.01177124286485,8.012947052558756,8.014122689741153,8.015298154487944,8.016473446874988,8.017648566978078,8.01882351487296,8.019998290635318,8.021172894340785,8.022347326064935,8.023521585883291,8.024695673871316,8.02586959010442,8.027043334657959,8.028216907607236,8.02939030902749,8.030563538993915,8.031736597581643,8.032909484865758,8.034082200921281,8.035254745823186,8.036427119646387,8.037599322465747,8.03877135435607,8.039943215392109,8.041114905648563,8.042286425200075,8.043457774121233,8.04462895248657,8.045799960370571,8.046970797847658,8.048141464992204,8.049311961878528,8.050482288580891,8.05165244517351,8.052822431730531,8.053992248326065,8.055161895034153,8.056331371928795,8.057500679083931,8.058669816573445,8.059838784471175,8.061007582850898,8.062176211786342,8.06334467135118,8.064512961619032,8.065681082663463,8.066849034557988,8.068016817376067,8.069184431191106,8.07035187607646,8.071519152105427,8.07268625935126,8.073853197887148,8.075019967786234,8.07618656912161,8.077353001966312,8.078519266393322,8.07968536247557,8.080851290285935,8.082017049897244,8.08318264138227,8.084348064813733,8.085513320264301,8.086678407806591,8.087843327513164,8.089008079456537,8.090172663709163,8.091337080343452,8.09250132943176,8.09366541104639,8.094829325259587,8.095993072143559,8.097156651770446,8.098320064212347,8.099483309541304,8.10064638782931,8.101809299148305,8.102972043570176,8.104134621166763,8.105297032009846,8.106459276171163,8.107621353722399,8.108783264735179,8.109945009281086,8.11110658743165,8.112267999258345,8.113429244832599,8.114590324225787,8.115751237509235,8.116911984754212,8.118072566031943,8.119232981413598,8.120393230970299,8.121553314773113,8.12271323289306,8.123872985401109,8.125032572368175,8.126191993865127,8.127351249962782,8.128510340731905,8.129669266243209,8.130828026567361,8.131986621774976,8.133145051936618,8.134303317122798,8.135461417403985,8.13661935285059,8.137777123532976,8.138934729521457,8.140092170886298,8.141249447697714,8.142406560025863,8.143563507940865,8.144720291512778,8.145876910811621,8.147033365907358,8.148189656869903,8.149345783769123,8.15050174667483,8.151657545656795,8.152813180784731,8.153968652128308,8.155123959757143,8.156279103740806,8.157434084148816,8.15858890105064,8.159743554515707,8.160898044613381,8.16205237141299,8.163206534983805,8.164360535395053,8.165514372715908,8.1666680470155,8.167821558362908,8.168974906827156,8.170128092477231,8.171281115382063,8.172433975610536,8.173586673231485,8.174739208313696,8.175891580925907,8.177043791136807,8.17819583901504,8.179347724629196,8.18049944804782,8.18165100933941,8.182802408572414,8.183953645815228,8.18510472113621,8.18625563460366,8.187406386285833,8.18855697625094,8.18970740456714,8.190857671302544,8.192007776525216,8.193157720303175,8.194307502704387,8.195457123796775,8.196606583648212,8.19775588232652,8.198905019899485,8.200053996434832,8.201202812000249,8.202351466663366,8.203499960491776,8.204648293553017,8.205796465914588,8.206944477643932,8.20809232880845,8.209240019475494,8.21038754971237,8.211534919586338,8.212682129164607,8.213829178514342,8.214976067702661,8.216122796796636,8.21726936586329,8.2184157749696,8.219562024182496,8.220708113568865,8.22185404319554,8.222999813129315,8.224145423436932,8.22529087418509,8.22643616544044,8.227581297269587,8.22872626973909,8.22987108291546,8.231015736865166,8.232160231654623,8.233304567350206,8.234448744018245,8.235592761725021,8.236736620536767,8.237880320519675,8.239023861739886,8.240167244263501,8.241310468156568,8.242453533485095,8.243596440315041,8.244739188712321,8.245881778742804,8.247024210472313,8.248166483966626,8.249308599291474,8.250450556512547,8.251592355695479,8.25273399690587,8.253875480209272,8.255016805671188,8.256157973357077,8.257298983332355,8.258439835662388,8.259580530412505,8.260721067647982,8.261861447434052,8.263001669835907,8.26414173491869,8.265281642747498,8.266421393387388,8.267560986903366,8.2687004233604,8.269839702823408,8.270978825357265,8.272117791026803,8.273256599896804,8.274395252032013,8.275533747497125,8.276672086356793,8.277810268675625,8.278948294518182,8.280086163948983,8.281223877032506,8.282361433833179,8.283498834415386,8.284636078843475,8.285773167181736,8.286910099494428,8.288046875845758,8.289183496299895,8.290319960920955,8.29145626977302,8.292592422920123,8.29372842042625,8.294864262355352,8.295999948771328,8.29713547973804,8.298270855319299,8.299406075578878,8.300541140580503,8.301676050387858,8.302810805064588,8.303945404674284,8.305079849280501,8.306214138946752,8.307348273736501,8.308482253713173,8.309616078940147,8.31074974948076,8.311883265398306,8.313016626756037,8.314149833617156,8.315282886044832,8.316415784102185,8.317548527852296,8.318681117358194,8.319813552682875,8.320945833889292,8.322077961040346,8.323209934198905,8.324341753427788,8.325473418789777,8.326604930347603,8.327736288163964,8.328867492301507,8.329998542822844,8.331129439790537,8.332260183267111,8.333390773315047,8.334521209996785,8.335651493374717,8.3367816235112,8.337911600468546,8.339041424309022,8.340171095094856,8.341300612888235,8.342429977751298,8.343559189746149,8.344688248934846,8.345817155379406,8.346945909141803,8.348074510283972,8.349202958867803,8.350331254955146,8.351459398607807,8.352587389887551,8.353715228856109,8.354842915575155,8.355970450106334,8.357097832511243,8.358225062851444,8.35935214118845,8.360479067583736,8.361605842098736,8.36273246479484,8.363858935733402,8.36498525497573,8.366111422583092,8.367237438616712,8.36836330313778,8.369489016207439,8.37061457788679,8.371739988236898,8.372865247318783,8.373990355193428,8.375115311921766,8.3762401175647,8.377364772183089,8.378489275837746,8.379613628589446,8.380737830498928,8.381861881626884,8.382985782033968,8.384109531780794,8.385233130927933,8.386356579535917,8.387479877665236,8.388603025376343,8.389726022729649,8.390848869785518,8.391971566604287,8.393094113246242,8.394216509771631,8.395338756240662,8.396460852713505,8.397582799250287,8.398704595911097,8.399826242755982,8.400947739844948,8.402069087237969,8.403190284994965,8.404311333175828,8.405432231840402,8.4065529810485,8.407673580859887,8.408794031334292,8.409914332531402,8.411034484510868,8.412154487332296,8.413274341055258,8.414394045739282,8.415513601443859,8.416633008228438,8.41775226615243,8.418871375275208,8.419990335656102,8.421109147354406,8.422227810429373,8.423346324940216,8.42446469094611,8.42558290850619,8.426700977679552,8.427818898525253,8.42893667110231,8.430054295469702,8.431171771686369,8.432289099811213,8.43340627990309,8.434523312020826,8.435640196223204,8.436756932568969,8.437873521116826,8.43898996192544,8.440106255053442,8.441222400559418,8.442338398501924,8.443454248939466,8.44456995193052,8.445685507533518,8.44680091580686,8.4479161768089,8.449031290597956,8.450146257232314,8.45126107677021,8.45237574926985,8.453490274789399,8.454604653386983,8.455718885120692,8.456832970048577,8.457946908228646,8.459060699718876,8.460174344577203,8.461287842861523,8.462401194629695,8.463514399939543,8.464627458848845,8.465740371415354,8.466853137696772,8.46796575775077,8.469078231634978,8.470190559406994,8.471302741124369,8.472414776844623,8.473526666625238,8.474638410523657,8.47575000859728,8.47686146090348,8.477972767499587,8.479083928442888,8.480194943790643,8.481305813600066,8.482416537928339,8.483527116832601,8.48463755036996,8.485747838597483,8.486857981572198,8.487967979351103,8.489077831991148,8.490187539549254,8.491297102082303,8.492406519647137,8.493515792300565,8.494624920099357,8.495733903100243,8.496842741359922,8.49795143493505,8.499059983882251,8.500168388258109,8.501276648119173,8.502384763521952,8.503492734522924,8.504600561178522,8.50570824354515,8.506815781679173,8.507923175636915,8.509030425474668,8.510137531248688,8.51124449301519,8.512351310830356,8.513457984750332,8.514564514831223,8.515670901129104,8.516777143700008,8.517883242599934,8.518989197884842,8.520095009610664,8.521200677833285,8.52230620260856,8.523411583992306,8.524516822040303,8.5256219168083,8.526726868352,8.527831676727079,8.528936341989175,8.530040864193886,8.531145243396779,8.53224947965338,8.533353573019182,8.534457523549646,8.535561331300189,8.536664996326197,8.537768518683018,8.53887189842597,8.539975135610327,8.541078230291332,8.542181182524192,8.543283992364078,8.544386659866124,8.545489185085433,8.546591568077066,8.547693808896051,8.548795907597382,8.54989786423602,8.550999678866884,8.552101351544861,8.553202882324804,8.554304271261529,8.555405518409817,8.55650662382441,8.557607587560025,8.558708409671333,8.559809090212976,8.560909629239559,8.56201002680565,8.563110282965786,8.564210397774465,8.565310371286154,8.566410203555282,8.567509894636244,8.5686094445834,8.569708853451075,8.57080812129356,8.571907248165108,8.573006234119944,8.57410507921225,8.57520378349618,8.57630234702585,8.57740076985534,8.578499052038701,8.579597193629942,8.580695194683043,8.581793055251948,8.582890775390565,8.58398835515277,8.585085794592402,8.586183093763266,8.587280252719136,8.588377271513748,8.589474150200802,8.590570888833973,8.59166748746689,8.592763946153152,8.59386026494633,8.594956443899951,8.596052483067513,8.597148382502484,8.598244142258288,8.599339762388322,8.600435242945949,8.601530583984495,8.602625785557253,8.603720847717481,8.604815770518409,8.605910554013224,8.607005198255088,8.608099703297121,8.609194069192418,8.61028829599403,8.611382383754984,8.612476332528269,8.613570142366838,8.614663813323613,8.615757345451486,8.61685073880331,8.617943993431904,8.619037109390058,8.620130086730526,8.621222925506029,8.622315625769252,8.623408187572853,8.624500610969449,8.62559289601163,8.626685042751948,8.627777051242926,8.62886892153705,8.629960653686775,8.63105224774452,8.632143703762678,8.6332350217936,8.634326201889609,8.635417244102994,8.636508148486008,8.637598915090878,8.638689543969791,8.639780035174907,8.640870388758344,8.6419606047722,8.643050683268529,8.644140624299357,8.645230427916676,8.646320094172449,8.6474096231186,8.648499014807022,8.649588269289582,8.650677386618105,8.651766366844386,8.652855210020194,8.653943916197257,8.655032485427274,8.65612091776191,8.657209213252802,8.658297371951548,8.65938539390972,8.66047327917885,8.661561027810446,8.66264863985598,8.663736115366888,8.66482345439458,8.665910656990432,8.666997723205784,8.668084653091945,8.669171446700199,8.670258104081787,8.671344625287926,8.672431010369797,8.67351725937855,8.674603372365302,8.675689349381141,8.67677519047712,8.67786089570426,8.678946465113553,8.680031898755958,8.681117196682397,8.682202358943767,8.683287385590933,8.684372276674724,8.685457032245939,8.686541652355343,8.687626137053677,8.688710486391642,8.689794700419911,8.690878779189127,8.691962722749896,8.693046531152795,8.694130204448376,8.69521374268715,8.696297145919598,8.697380414196175,8.698463547567302,8.699546546083367,8.700629409794725,8.701712138751708,8.702794733004605,8.703877192603684,8.704959517599177,8.706041708041283,8.707123763980174,8.70820568546599,8.709287472548835,8.710369125278788,8.711450643705895,8.71253202788017,8.713613277851596,8.714694393670126,8.71577537538568,8.716856223048154,8.7179369367074,8.71901751641325,8.720097962215505,8.721178274163927,8.722258452308255,8.723338496698192,8.724418407383416,8.725498184413567,8.726577827838263,8.72765733770708,8.728736714069576,8.72981595697527,8.73089506647365,8.73197404261418,8.733052885446288,8.73413159501937,8.735210171382798,8.73628861458591,8.73736692467801,8.73844510170838,8.739523145726263,8.740601056780877,8.741678834921405,8.742756480197007,8.743833992656805,8.744911372349895,8.745988619325344,8.747065733632184,8.74814271531942,8.749219564436025,8.750296281030947,8.751372865153096,8.752449316851356,8.753525636174587,8.754601823171605,8.755677877891207,8.756753800382157,8.757829590693191,8.75890524887301,8.759980774970288,8.76105616903367,8.762131431111772,8.763206561253178,8.76428155950644,8.765356425920084,8.766431160542608,8.767505763422474,8.76858023460812,8.769654574147951,8.770728782090345,8.771802858483646,8.772876803376175,8.773950616816215,8.77502429885203,8.776097849531842,8.777171268903857,8.778244557016238,8.77931771391713,8.780390739654644,8.781463634276857,8.782536397831825,8.783609030367568,8.784681531932081,8.78575390257333,8.786826142339244,8.787898251277735,8.788970229436675,8.790042076863914,8.791113793607266,8.792185379714525,8.793256835233446,8.794328160211764,8.795399354697178,8.796470418737359,8.797541352379953,8.798612155672576,8.799682828662808,8.800753371398212,8.801823783926311,8.802894066294606,8.803964218550565,8.805034240741632,8.806104132915216,8.807173895118703,8.808243527399446,8.809313029804773,8.810382402381977,8.811451645178332,8.812520758241073,8.813589741617413,8.814658595354537,8.815727319499594,8.816795914099712,8.817864379201989,8.818932714853492,8.82000092110126,8.821068997992304,8.82213694557361,8.823204763892129,8.824272452994787,8.825340012928484,8.826407443740088,8.827474745476438,8.82854191818435,8.829608961910607,8.830675876701964,8.83174266260515,8.832809319666863,8.833875847933776,8.83494224745253,8.836008518269743,8.837074660432,8.83814067398586,8.839206558977855,8.840272315454488,8.84133794346223,8.84240344304753,8.843468814256807,8.844534057136453,8.845599171732829,8.846664158092269,8.847729016261082,8.848793746285546,8.849858348211912,8.850922822086405,8.851987167955219,8.853051385864523,8.854115475860457,8.855179437989134,8.856243272296636,8.857306978829024,8.858370557632325,8.85943400875254,8.860497332235646,8.861560528127587,8.862623596474286,8.863686537321628,8.864749350715483,8.865812036701683,8.866874595326042,8.867937026634339,8.868999330672326,8.870061507485731,8.871123557120255,8.872185479621571,8.87324727503532,8.87430894340712,8.875370484782565,8.876431899207216,8.877493186726605,8.878554347386245,8.879615381231615,8.88067628830817,8.881737068661337,8.882797722336514,8.883858249379076,8.884918649834367,8.885978923747707,8.887039071164386,8.888099092129668,8.889158986688793,8.89021875488697,8.891278396769382,8.892337912381187,8.893397301767514,8.894456564973465,8.895515702044118,8.896574713024522,8.897633597959699,8.898692356894644,8.899750989874326,8.900809496943689,8.901867878147645,8.902926133531084,8.903984263138868,8.905042267015835,8.906100145206791,8.907157897756518,8.908215524709773,8.909273026111283,8.910330402005751,8.911387652437856,8.912444777452244,8.913501777093538,8.914558651406336,8.915615400435208,8.916672024224697,8.917728522819319,8.918784896263567,8.919841144601905,8.92089726787877,8.921953266138576,8.923009139425707,8.924064887784523,8.925120511259358,8.926176009894515,8.92723138373428,8.928286632822905,8.929341757204618,8.930396756923622,8.931451632024094,8.932506382550182,8.933561008546011,8.93461551005568,8.935669887123261,8.936724139792798,8.93777826810831,8.938832272113798,8.939886151853221,8.940939907370527,8.94199353870963,8.943047045914422,8.944100429028767,8.945153688096502,8.946206823161443,8.947259834267374,8.94831272145806,8.949365484777234,8.950418124268605,8.95147063997586,8.952523031942656,8.953575300212625,8.954627444829377,8.955679465836493,8.956731363277525,8.95778313719601,8.958834787635448,8.95988631463932,8.96093771825108,8.961988998514155,8.963040155471951,8.964091189167842,8.965142099645183,8.966192886947297,8.967243551117491,8.968294092199034,8.969344510235182,8.970394805269159,8.971444977344161,8.972495026503369,8.973544952789927,8.974594756246962,8.975644436917573,8.976693994844831,8.977743430071788,8.978792742641465,8.979841932596862,8.98089099998095,8.981939944836679,8.98298876720697,8.984037467134725,8.985086044662811,8.98613449983408,8.987182832691355,8.98823104327743,8.989279131635083,8.990327097807057,8.99137494183608,8.992422663764847,8.993470263636032,8.994517741492283,8.995565097376225,8.996612331330457,8.99765944339755,8.998706433620058,8.999753302040501,9.000800048701382,9.001846673645174,9.002893176914329,9.003939558551272,9.004985818598405,9.006031957098102,9.007077974092716,9.008123869624576,9.009169643735984,9.010215296469216,9.011260827866527,9.012306237970147,9.01335152682228,9.014396694465105,9.01544174094078,9.016486666291433,9.017531470559174,9.018576153786084,9.01962071601422,9.020665157285618,9.021709477642286,9.022753677126211,9.02379775577935,9.024841713643644,9.025885550761002,9.026929267173314,9.027972862922441,9.029016338050226,9.030059692598483,9.031102926609003,9.032146040123553,9.033189033183879,9.034231905831696,9.0352746581087,9.036317290056562,9.03735980171693,9.038402193131425,9.039444464341647,9.04048661538917,9.041528646315546,9.042570557162302,9.043612347970939,9.044654018782936,9.04569556963975,9.046737000582812,9.047778311653529,9.048819502893286,9.04986057434344,9.05090152604533,9.051942358040266,9.052983070369537,9.05402366307441,9.055064136196124,9.056104489775896,9.057144723854922,9.058184838474368,9.059224833675385,9.060264709499094,9.061304465986595,9.062344103178962,9.063383621117248,9.064423019842481,9.065462299395668,9.066501459817788,9.0675405011498,9.06857942343264,9.069618226707217,9.070656911014419,9.071695476395112,9.072733922890135,9.073772250540308,9.074810459386423,9.075848549469251,9.076886520829541,9.077924373508015,9.078962107545376,9.079999722982302,9.081037219859446,9.08207459821744,9.083111858096892,9.084148999538385,9.085186022582484,9.086222927269727,9.087259713640627,9.08829638173568,9.08933293159535,9.090369363260088,9.091405676770314,9.092441872166432,9.093477949488815,9.094513908777818,9.095549750073774,9.096585473416988,9.097621078847748,9.098656566406316,9.09969193613293,9.100727188067806,9.101762322251139,9.102797338723098,9.103832237523834,9.10486701869347,9.105901682272108,9.106936228299828,9.107970656816688,9.109004967862719,9.110039161477934,9.111073237702321,9.112107196575849,9.113141038138457,9.114174762430066,9.115208369490576,9.116241859359862,9.117275232077775,9.118308487684146,9.119341626218782,9.12037464772147,9.12140755223197,9.122440339790023,9.123473010435346,9.124505564207634,9.125538001146563,9.126570321291776,9.127602524682906,9.128634611359558,9.129666581361313,9.130698434727732,9.131730171498353,9.132761791712692,9.133793295410245,9.134824682630478,9.135855953412845,9.136887107796769,9.137918145821656,9.13894906752689,9.139979872951827,9.141010562135806,9.142041135118147,9.143071591938137,9.144101932635051,9.145132157248137,9.146162265816622,9.147192258379713,9.14822213497659,9.149251895646417,9.150281540428328,9.151311069361446,9.15234048248486,9.153369779837647,9.154398961458856,9.155428027387517,9.156456977662637,9.157485812323198,9.158514531408168,9.159543134956484,9.160571623007069,9.161599995598817,9.162628252770606,9.16365639456129,9.164684421009701,9.16571233215465,9.166740128034924,9.16776780868929,9.168795374156492,9.169822824475258,9.170850159684285,9.171877379822256,9.172904484927829,9.17393147503964,9.174958350196302,9.175985110436413,9.177011755798542,9.178038286321241,9.179064702043037,9.180091003002438,9.18111718923793,9.18214326078798,9.183169217691026,9.184195059985491,9.185220787709776,9.186246400902258,9.187271899601294,9.188297283845221,9.189322553672353,9.19034770912098,9.191372750229378,9.192397677035792,9.193422489578456,9.194447187895573,9.195471772025334,9.1964962420059,9.197520597875414,9.198544839672001,9.199568967433763,9.200592981198778,9.201616881005103,9.20264066689078,9.203664338893823,9.204687897052228,9.205711341403969,9.206734671986998,9.20775788883925,9.208780991998633,9.20980398150304,9.210826857390336,9.21184961969837,9.212872268464972,9.213894803727943,9.214917225525072,9.21593953389412,9.216961728872834,9.21798381049893,9.219005778810114,9.220027633844063,9.22104937563844,9.22207100423088,9.223092519659001,9.224113921960402,9.22513521117266,9.226156387333326,9.227177450479935,9.228198400650005,9.229219237881024,9.230239962210469,9.231260573675785,9.232281072314409,9.233301458163746,9.23432173126119,9.235341891644108,9.236361939349846,9.237381874415734,9.238401696879079,9.239421406777165,9.24044100414726,9.241460489026608,9.242479861452434,9.243499121461943,9.244518269092318,9.245537304380719,9.246556227364293,9.24757503808016,9.248593736565423,9.249612322857162,9.250630796992438,9.251649159008293,9.252667408941745,9.253685546829795,9.25470357270942,9.255721486617585,9.256739288591222,9.257756978667253,9.258774556882573,9.259792023274064,9.260809377878582,9.261826620732963,9.262843751874026,9.263860771338566,9.26487767916336,9.265894475385167,9.26691116004072,9.267927733166736,9.268944194799914,9.269960544976927,9.270976783734431,9.271992911109063,9.273008927137438,9.274024831856151,9.275040625301779,9.276056307510874,9.277071878519978,9.2780873383656,9.27910268708424,9.280117924712371,9.281133051286451,9.282148066842915,9.283162971418175,9.284177765048632,9.28519244777066,9.286207019620617,9.287221480634836,9.288235830849635,9.28925007030131,9.29026419902614,9.291278217060379,9.292292124440266,9.293305921202016,9.294319607381832,9.295333183015886,9.296346648140341,9.297360002791333,9.29837324700498,9.299386380817383,9.300399404264622,9.301412317382754,9.302425120207822,9.303437812775845,9.304450395122826,9.305462867284744,9.306475229297561,9.30748748119722,9.308499623019646,9.309511654800737,9.310523576576381,9.311535388382442,9.312547090254762,9.31355868222917,9.314570164341466,9.315581536627443,9.316592799122864,9.317603951863479,9.318614994885012,9.319625928223175,9.320636751913659,9.321647465992129,9.32265807049424,9.32366856545562,9.324678950911885,9.325689226898623,9.326699393451413,9.327709450605804,9.328719398397334,9.32972923686152,9.330738966033854,9.331748585949818,9.332758096644866,9.33376749815444,9.33477679051396,9.335785973758824,9.336795047924415,9.337804013046096,9.33881286915921,9.33982161629908,9.340830254501013,9.341838783800293,9.34284720423219,9.34385551583195,9.3448637186348,9.345871812675954,9.346879797990601,9.347887674613913,9.348895442581043,9.349903101927126,9.350910652687276,9.35191809489659,9.352925428590146,9.353932653803001,9.354939770570196,9.355946778926752,9.356953678907669,9.35796047054793,9.358967153882501,9.359973728946327,9.360980195774335,9.361986554401433,9.362992804862508,9.363998947192433,9.365004981426058,9.366010907598216,9.367016725743724,9.368022435897375,9.369028038093944,9.370033532368193,9.37103891875486,9.372044197288664,9.373049368004313,9.374054430936484,9.375059386119846,9.376064233589045,9.377068973378709,9.378073605523445,9.379078130057847,9.380082547016485,9.381086856433916,9.382091058344674,9.383095152783273,9.384099139784215,9.38510301938198,9.386106791611027,9.3871104565058,9.388114014100724,9.389117464430207,9.390120807528634,9.391124043430377,9.392127172169785,9.393130193781193,9.394133108298913,9.395135915757242,9.39613861619046,9.397141209632824,9.398143696118579,9.399146075681942,9.400148348357122,9.401150514178306,9.402152573179663,9.403154525395339,9.404156370859468,9.405158109606164,9.406159741669525,9.407161267083627,9.408162685882525,9.409163998100267,9.410165203770871,9.411166302928345,9.412167295606675,9.41316818183983,9.41416896166176,9.415169635106398,9.41617020220766,9.41717066299944,9.418171017515622,9.41917126579006,9.4201714078566,9.421171443749069,9.42217137350127,9.423171197146994,9.42417091472001,9.425170526254073,9.426170031782917,9.427169431340262,9.428168724959804,9.429167912675224,9.430166994520189,9.431165970528344,9.432164840733316,9.433163605168716,9.434162263868133,9.435160816865148,9.436159264193314,9.43715760588617,9.43815584197724,9.439153972500025,9.44015199748801,9.441149916974668,9.442147730993446,9.443145439577776,9.444143042761077,9.445140540576745,9.446137933058157,9.44713522023868,9.448132402151655,9.449129478830413,9.450126450308261,9.45112331661849,9.452120077794378,9.453116733869178,9.454113284876133,9.455109730848463,9.45610607181937,9.457102307822046,9.458098438889657,9.459094465055355,9.460090386352276,9.461086202813535,9.462081914472234,9.463077521361454,9.464073023514258,9.465068420963696,9.466063713742798,9.467058901884576,9.468053985422024,9.469048964388122,9.470043838815831,9.471038608738091,9.472033274187831,9.47302783519796,9.474022291801369,9.47501664403093,9.476010891919502,9.477005035499925,9.47799907480502,9.478993009867594,9.479986840720436,9.480980567396312,9.481974189927982,9.482967708348177,9.483961122689621,9.484954432985013,9.485947639267042,9.486940741568372,9.487933739921656,9.48892663435953,9.489919424914603,9.490912111619485,9.491904694506752,9.492897173608974,9.493889548958693,9.494881820588448,9.49587398853075,9.496866052818097,9.49785801348297,9.498849870557834,9.499841624075133,9.5008332740673,9.501824820566744,9.502816263605865,9.50380760321704,9.504798839432633,9.505789972284989,9.506781001806432,9.50777192802928,9.508762750985825,9.509753470708345,9.510744087229101,9.511734600580336,9.512725010794282,9.513715317903147,9.514705521939124,9.515695622934393,9.516685620921113,9.517675515931428,9.518665307997463,9.519654997151333,9.520644583425128,9.521634066850927,9.52262344746079,9.523612725286759,9.524601900360866,9.525590972715115,9.526579942381504,9.52756880939201,9.528557573778592,9.529546235573196,9.530534794807748,9.531523251514159,9.532511605724325,9.533499857470122,9.534488006783413,9.53547605369604,9.536463998239835,9.537451840446609,9.538439580348156,9.539427217976256,9.54041475336267,9.541402186539145,9.542389517537412,9.543376746389182,9.544363873126153,9.545350897780006,9.546337820382403,9.547324640964995,9.548311359559408,9.549297976197263,9.550284490910155,9.551270903729666,9.552257214687364,9.553243423814799,9.554229531143502,9.555215536704992,9.55620144053077,9.55718724265232,9.558172943101113,9.559158541908594,9.560144039106207,9.561129434725368,9.562114728797482,9.563099921353935,9.564085012426098,9.565070002045328,9.566054890242963,9.567039677050326,9.568024362498724,9.569008946619446,9.569993429443768,9.570977811002948,9.57196209132823,9.572946270450835,9.57393034840198,9.574914325212855,9.57589820091464,9.576881975538496,9.577865649115571,9.578849221676993,9.579832693253877,9.580816063877322,9.581799333578408,9.582782502388202,9.583765570337757,9.584748537458106,9.585731403780265,9.586714169335242,9.587696834154018,9.588679398267566,9.589661861706844,9.590644224502785,9.59162648668632,9.59260864828835,9.59359070933977,9.594572669871452,9.595554529914262,9.59653628949904,9.597517948656616,9.598499507417802,9.599480965813395,9.600462323874178,9.601443581630914,9.602424739114353,9.603405796355231,9.604386753384265,9.60536761023216,9.606348366929597,9.607329023507253,9.608309579995781,9.609290036425824,9.610270392828003,9.611250649232929,9.612230805671194,9.613210862173377,9.614190818770037,9.615170675491724,9.616150432368967,9.617130089432282,9.618109646712167,9.619089104239109,9.620068462043575,9.62104772015602,9.622026878606878,9.623005937426576,9.623984896645515,9.624963756294093,9.625942516402683,9.626921177001643,9.62789973812132,9.628878199792045,9.629856562044129,9.630834824907874,9.63181298841356,9.632791052591458,9.63376901747182,9.634746883084881,9.635724649460865,9.63670231662998,9.637679884622415,9.638657353468346,9.639634723197934,9.640611993841324,9.641589165428648,9.64256623799002,9.643543211555537,9.644520086155286,9.645496861819336,9.646473538577741,9.647450116460538,9.648426595497753,9.649402975719392,9.650379257155448,9.6513554398359,9.65233152379071,9.65330750904983,9.654283395643185,9.655259183600696,9.656234872952268,9.657210463727782,9.658185955957116,9.659161349670123,9.660136644896648,9.661111841666514,9.662086940009537,9.66306193995551,9.664036841534216,9.665011644775422,9.66598634970888,9.666960956364328,9.667935464771483,9.668909874960057,9.669884186959738,9.670858400800205,9.671832516511119,9.672806534122126,9.673780453662857,9.674754275162933,9.675727998651954,9.676701624159508,9.677675151715166,9.678648581348485,9.67962191308901,9.680595146966267,9.681568283009769,9.682541321249014,9.683514261713487,9.684487104432655,9.685459849435972,9.686432496752877,9.687405046412794,9.688377498445133,9.689349852879287,9.690322109744637,9.691294269070548,9.69226633088637,9.69323829522144,9.694210162105076,9.695181931566587,9.696153603635263,9.697125178340382,9.698096655711206,9.699068035776984,9.700039318566946,9.701010504110311,9.701981592436283,9.702952583574051,9.703923477552792,9.704894274401662,9.705864974149808,9.70683557682636,9.707806082460435,9.708776491081135,9.709746802717547,9.710717017398741,9.711687135153777,9.712657156011701,9.713627080001537,9.714596907152302,9.715566637492996,9.716536271052606,9.7175058078601,9.718475247944435,9.719444591334556,9.720413838059388,9.721382988147845,9.722352041628827,9.723320998531218,9.724289858883887,9.72525862271569,9.726227290055473,9.727195860932055,9.728164335374254,9.729132713410866,9.730100995070677,9.731069180382455,9.732037269374956,9.733005262076922,9.733973158517077,9.734940958724138,9.735908662726798,9.736876270553747,9.737843782233648,9.73881119779516,9.739778517266926,9.740745740677568,9.741712868055703,9.74267989942993,9.74364683482883,9.744613674280975,9.745580417814923,9.746547065459211,9.74751361724237,9.748480073192916,9.749446433339342,9.750412697710141,9.751378866333777,9.752344939238712,9.753310916453387,9.75427679800623,9.75524258392566,9.756208274240073,9.75717386897786,9.75813936816739,9.759104771837023,9.760070080015105,9.761035292729964,9.76200041000992,9.762965431883273,9.763930358378312,9.764895189523312,9.765859925346534,9.766824565876226,9.767789111140617,9.768753561167928,9.769717915986368,9.77068217562412,9.771646340109367,9.77261040947027,9.773574383734978,9.774538262931628,9.775502047088342,9.776465736233224,9.777429330394371,9.778392829599865,9.779356233877767,9.780319543256132,9.781282757762998,9.78224587742639,9.78320890227432,9.784171832334783,9.785134667635765,9.786097408205233,9.787060054071144,9.78802260526144,9.78898506180405,9.78994742372689,9.790909691057855,9.79187186382484,9.792833942055712,9.793795925778335,9.794757815020555,9.7957196098102,9.796681310175094,9.79764291614304,9.79860442774183,9.799565844999242,9.800527167943038,9.80148839660097,9.802449531000779,9.80341057117018,9.804371517136891,9.805332368928605,9.806293126573003,9.807253790097757,9.808214359530522,9.809174834898938,9.810135216230636,9.81109550355323,9.812055696894321,9.813015796281498,9.813975801742334,9.81493571330439,9.815895530995217,9.816855254842345,9.817814884873297,9.818774421115577,9.819733863596683,9.820693212344093,9.821652467385272,9.822611628747678,9.823570696458749,9.824529670545909,9.825488551036575,9.826447337958145,9.827406031338004,9.828364631203529,9.829323137582078,9.830281550500995,9.831239869987618,9.832198096069263,9.83315622877324,9.834114268126838,9.83507221415734,9.83603006689201,9.836987826358103,9.83794549258286,9.838903065593506,9.839860545417258,9.840817932081311,9.841775225612857,9.842732426039065,9.843689533387101,9.84464654768411,9.845603468957226,9.84656029723357,9.847517032540251,9.848473674904362,9.849430224352988,9.850386680913193,9.851343044612035,9.852299315476555,9.853255493533785,9.854211578810736,9.855167571334416,9.856123471131811,9.8570792782299,9.858034992655643,9.858990614435996,9.859946143597893,9.860901580168258,9.861856924174003,9.862812175642027,9.863767334599217,9.864722401072441,9.865677375088561,9.866632256674421,9.86758704585686,9.868541742662691,9.869496347118726,9.870450859251758,9.871405279088568,9.872359606655927,9.873313841980588,9.874267985089292,9.875222036008772,9.876175994765745,9.877129861386912,9.878083635898966,9.879037318328583,9.879990908702432,9.880944407047163,9.881897813389415,9.882851127755815,9.883804350172978,9.884757480667504,9.88571051926598,9.886663465994983,9.887616320881078,9.88856908395081,9.889521755230717,9.890474334747324,9.891426822527144,9.892379218596673,9.893331522982399,9.894283735710792,9.895235856808315,9.896187886301417,9.897139824216529,9.898091670580076,9.899043425418467,9.899995088758098,9.900946660625355,9.901898141046606,9.902849530048215,9.903800827656523,9.904752033897868,9.905703148798565,9.906654172384929,9.90760510468325,9.908555945719815,9.909506695520893,9.91045735411274,9.911407921521603,9.912358397773714,9.913308782895294,9.914259076912549,9.915209279851675,9.916159391738853,9.917109412600253,9.918059342462035,9.919009181350338,9.919958929291301,9.92090858631104,9.921858152435663,9.922807627691263,9.923757012103923,9.924706305699715,9.925655508504695,9.926604620544905,9.927553641846382,9.928502572435145,9.929451412337198,9.930400161578538,9.931348820185148,9.932297388183,9.93324586559805,9.934194252456242,9.93514254878351,9.936090754605777,9.93703886994895,9.937986894838923,9.938934829301584,9.9398826733628,9.94083042704843,9.941778090384323,9.942725663396313,9.943673146110221,9.944620538551858,9.945567840747021,9.946515052721493,9.947462174501048,9.948409206111448,9.94935614757844,9.950302998927762,9.951249760185135,9.952196431376272,9.953143012526871,9.954089503662622,9.955035904809197,9.955982215992261,9.956928437237464,9.95787456857044,9.958820610016822,9.95976656160222,9.96071242335224,9.961658195292465,9.962603877448478,9.96354946984584,9.964494972510108,9.96544038546682,9.966385708741509,9.96733094235969,9.968276086346865,9.969221140728532,9.970166105530167,9.97111098077724,9.97205576649521,9.973000462709518,9.973945069445598,9.97488958672887,9.975834014584741,9.976778353038611,9.977722602115861,9.978666761841865,9.979610832241981,9.980554813341561,9.981498705165937,9.982442507740437,9.98338622109037,9.98432984524104,9.985273380217732,9.986216826045725,9.987160182750282,9.988103450356656,9.989046628890089,9.989989718375806,9.990932718839028,9.991875630304959,9.99281845279879,9.993761186345704,9.99470383097087,9.995646386699445,9.996588853556576,9.997531231567395,9.998473520757024,9.999415721150575,10.000357832773142,10.001299855649817,10.00224178980567,10.003183635265765,10.004125392055155,10.005067060198877,10.00600863972196,10.006950130649418,10.007891533006255,10.008832846817464,10.009774072108026,10.010715208902907,10.011656257227067,10.012597217105448,10.013538088562985,10.014478871624602,10.015419566315204,10.016360172659693,10.017300690682957,10.018241120409867,10.019181461865285,10.020121715074069,10.021061880061055,10.02200195685107,10.022941945468935,10.02388184593945,10.024821658287411,10.0257613825376,10.026701018714789,10.027640566843731,10.028580026949177,10.02951939905586,10.030458683188508,10.031397879371829,10.032336987630524,10.033276007989286,10.034214940472788,10.035153785105697,10.03609254191267,10.037031210918345,10.037969792147358,10.038908285624327,10.03984669137386,10.040785009420556,10.041723239788999,10.042661382503761,10.043599437589407,10.044537405070486,10.04547528497154,10.046413077317093,10.047350782131666,10.048288399439762,10.049225929265875,10.050163371634488,10.05110072657007,10.052037994097082,10.05297517423997,10.053912267023174,10.054849272471117,10.055786190608213,10.056723021458867,10.057659765047465,10.058596421398391,10.059532990536013,10.060469472484687,10.061405867268759,10.062342174912564,10.063278395440424,10.06421452887665,10.065150575245548,10.0660865345714,10.06702240687849,10.06795819219108,10.068893890533426,10.069829501929775,10.070765026404356,10.071700463981394,10.072635814685098,10.073571078539667,10.074506255569288,10.075441345798138,10.076376349250385,10.07731126595018,10.078246095921665,10.079180839188975,10.08011549577623,10.081050065707538,10.081984549006998,10.0829189456987,10.083853255806712,10.084787479355107,10.085721616367934,10.086655666869238,10.087589630883048,10.088523508433388,10.089457299544263,10.090391004239672,10.091324622543603,10.092258154480032,10.09319160007292,10.094124959346226,10.095058232323892,10.095991419029843,10.096924519488008,10.097857533722292,10.098790461756593,10.0997233036148,10.100656059320785,10.10158872889842,10.102521312371556,10.103453809764035,10.104386221099691,10.105318546402344,10.106250785695805,10.107182939003874,10.108115006350337,10.109046987758973,10.109978883253547,10.110910692857816,10.111842416595525,10.112774054490407,10.113705606566182,10.114637072846564,10.115568453355255,10.11649974811594,10.117430957152305,10.118362080488012,10.11929311814672,10.120224070152078,10.121154936527716,10.122085717297264,10.123016412484333,10.123947022112525,10.124877546205433,10.125807984786638,10.126738337879711,10.12766860550821,10.128598787695687,10.129528884465675,10.130458895841704,10.13138882184729,10.132318662505936,10.13324841784114,10.134178087876386,10.135107672635144,10.13603717214088,10.13696658641704,10.137895915487071,10.1388251593744,10.13975431810245,10.14068339169462,10.141612380174319,10.142541283564928,10.143470101889827,10.144398835172378,10.145327483435938,10.146256046703853,10.147184524999453,10.148112918346063,10.149041226766998,10.149969450285555,10.150897588925028,10.151825642708697,10.152753611659831,10.15368149580169,10.154609295157522,10.155537009750564,10.156464639604044,10.15739218474118,10.158319645185177,10.15924702095923,10.160174312086525,10.161101518590234,10.162028640493526,10.162955677819548,10.163882630591443,10.164809498832348,10.165736282565383,10.166662981813657,10.16758959660027,10.168516126948314,10.169442572880866,10.170368934420999,10.171295211591767,10.17222140441622,10.173147512917396,10.17407353711832,10.17499947704201,10.175925332711472,10.1768511041497,10.17777679137968,10.178702394424388,10.179627913306785,10.180553348049827,10.181478698676456,10.182403965209605,10.1833291476722,10.184254246087148,10.185179260477353,10.186104190865706,10.187029037275087,10.187953799728367,10.188878478248407,10.189803072858055,10.190727583580152,10.191652010437526,10.192576353452996,10.193500612649368,10.194424788049444,10.195348879676008,10.196272887551839,10.197196811699705,10.198120652142359,10.199044408902552,10.199968082003016,10.20089167146648,10.201815177315657,10.202738599573253,10.203661938261963,10.204585193404471,10.205508365023451,10.20643145314157,10.207354457781479,10.208277378965823,10.209200216717235,10.210122971058336,10.211045642011744,10.211968229600055,10.212890733845867,10.213813154771762,10.21473549240031,10.215657746754072,10.216579917855602,10.217502005727441,10.21842401039212,10.219345931872159,10.220267770190071,10.221189525368358,10.222111197429507,10.223032786396002,10.223954292290314,10.2248757151349,10.225797054952212,10.226718311764689,10.22763948559476,10.228560576464853,10.229481584397368,10.23040250941471,10.231323351539265,10.232244110793417,10.233164787199533,10.234085380779973,10.235005891557085,10.23592631955321,10.236846664790678,10.237766927291807,10.238687107078906,10.239607204174275,10.240527218600203,10.241447150378969,10.242366999532843,10.243286766084081,10.244206450054936,10.245126051467647,10.246045570344442,10.246965006707539,10.247884360579151,10.248803631981474,10.249722820936697,10.250641927467,10.251560951594557,10.252479893341523,10.253398752730048,10.254317529782272,10.255236224520324,10.256154836966328,10.257073367142388,10.257991815070607,10.258910180773075,10.259828464271873,10.260746665589071,10.26166478474673,10.262582821766898,10.263500776671618,10.264418649482922,10.26533644022283,10.266254148913351,10.26717177557649,10.268089320234235,10.269006782908573,10.269924163621472,10.270841462394893,10.271758679250791,10.272675814211109,10.273592867297777,10.274509838532719,10.275426727937848,10.27634353553507,10.277260261346276,10.27817690539335,10.279093467698166,10.28000994828259,10.280926347168474,10.281842664377663,10.282758899931997,10.283675053853296,10.284591126163376,10.285507116884046,10.2864230260371,10.287338853644327,10.2882545997275,10.289170264308387,10.290085847408749,10.29100134905033,10.29191676925487,10.292832108044097,10.293747365439732,10.29466254146348,10.295577636137041,10.296492649482108,10.297407581520359,10.298322432273466,10.299237201763088,10.300151890010877,10.301066497038477,10.301981022867517,10.30289546751962,10.3038098310164,10.304724113379462,10.305638314630395,10.306552434790786,10.307466473882211,10.308380431926235,10.30929430894441,10.310208104958283,10.311121819989394,10.312035454059265,10.312949007189415,10.313862479401354,10.314775870716579,10.315689181156577,10.316602410742828,10.317515559496803,10.318428627439962,10.319341614593753,10.32025452097962,10.321167346618996,10.3220800915333,10.322992755743945,10.323905339272336,10.324817842139868,10.325730264367923,10.326642605977877,10.327554866991095,10.328467047428934,10.329379147312737,10.330291166663848,10.33120310550359,10.332114963853282,10.333026741734235,10.333938439167746,10.334850056175107,10.335761592777597,10.33667304899649,10.337584424853045,10.338495720368519,10.339406935564151,10.340318070461176,10.341229125080822,10.3421400994443,10.343050993572817,10.34396180748757,10.344872541209748,10.345783194760525,10.346693768161074,10.347604261432553,10.348514674596109,10.349425007672885,10.350335260684012,10.351245433650613,10.3521555265938,10.353065539534677,10.353975472494337,10.354885325493868,10.355795098554342,10.356704791696828,10.357614404942382,10.358523938312052,10.359433391826876,10.360342765507886,10.3612520593761,10.362161273452532,10.36307040775818,10.363979462314038,10.36488843714109,10.36579733226031,10.366706147692664,10.367614883459105,10.368523539580583,10.369432116078032,10.370340612972383,10.371249030284554,10.372157368035458,10.37306562624599,10.373973804937046,10.374881904129506,10.375789923844247,10.376697864102129,10.37760572492401,10.378513506330734,10.379421208343139,10.380328830982055,10.381236374268296,10.382143838222675,10.383051222865989,10.383958528219035,10.384865754302592,10.38577290113743,10.38667996874432,10.387586957144013,10.388493866357255,10.389400696404783,10.390307447307325,10.391214119085602,10.392120711760322,10.393027225352187,10.393933659881885,10.394840015370104,10.395746291837515,10.396652489304783,10.397558607792563,10.398464647321504,10.39937060791224,10.400276489585403,10.401182292361614,10.40208801626148,10.402993661305604,10.40389922751458,10.404804714908991,10.405710123509412,10.406615453336409,10.407520704410539,10.40842587675235,10.409330970382383,10.410235985321165,10.41114092158922,10.412045779207059,10.412950558195185,10.413855258574094,10.41475988036427,10.415664423586191,10.416568888260327,10.417473274407133,10.41837758204706,10.419281811200552,10.42018596188804,10.421090034129945,10.421994027946683,10.422897943358661,10.423801780386277,10.424705539049917,10.42560921936996,10.426512821366778,10.427416345060731,10.428319790472173,10.429223157621449,10.43012644652889,10.431029657214827,10.431932789699575,10.432835844003444,10.433738820146734,10.434641718149734,10.43554453803273,10.436447279815992,10.437349943519788,10.438252529164373,10.439155036769993,10.440057466356889,10.440959817945288,10.441862091555414,10.442764287207478,10.443666404921682,10.444568444718223,10.44547040661729,10.446372290639054,10.447274096803689,10.448175825131354,10.449077475642198,10.449979048356367,10.450880543293993,10.4517819604752,10.452683299920107,10.453584561648823,10.454485745681444,10.455386852038062,10.456287880738762,10.457188831803611,10.458089705252679,10.45899050110602,10.459891219383682,10.460791860105703,10.461692423292114,10.462592908962938,10.463493317138184,10.46439364783786,10.465293901081958,10.466194076890467,10.467094175283368,10.467994196280626,10.468894139902208,10.469794006168062,10.470693795098134,10.47159350671236,10.472493141030668,10.473392698072972,10.474292177859187,10.475191580409211,10.47609090574294,10.476990153880255,10.477889324841035,10.478788418645145,10.479687435312444,10.480586374862783,10.481485237316003,10.482384022691937,10.48328273101041,10.484181362291238,10.48507991655423,10.485978393819185,10.486876794105891,10.487775117434133,10.488673363823684,10.48957153329431,10.490469625865765,10.491367641557801,10.492265580390157,10.493163442382563,10.494061227554745,10.494958935926414,10.49585656751728,10.496754122347035,10.497651600435374,10.498549001801976,10.499446326466513,10.50034357444865,10.501240745768042,10.502137840444338,10.503034858497173,10.503931799946182,10.504828664810985,10.505725453111193,10.506622164866418,10.507518800096253,10.508415358820287,10.5093118410581,10.510208246829265,10.511104576153343,10.512000829049894,10.512897005538461,10.513793105638586,10.514689129369795,10.515585076751613,10.516480947803553,10.517376742545121,10.518272460995814,10.519168103175119,10.520063669102518,10.520959158797481,10.521854572279475,10.522749909567953,10.523645170682366,10.524540355642149,10.525435464466735,10.526330497175545,10.527225453787995,10.52812033432349,10.529015138801427,10.529909867241196,10.53080451966218,10.531699096083752,10.532593596525274,10.533488021006105,10.534382369545591,10.535276642163076,10.536170838877888,10.537064959709353,10.537959004676786,10.538852973799495,10.53974686709678,10.540640684587927,10.541534426292225,10.542428092228946,10.543321682417355,10.544215196876712,10.545108635626269,10.546001998685265,10.546895286072935,10.547788497808504,10.548681633911192,10.549574694400205,10.550467679294746,10.551360588614008,10.552253422377177,10.553146180603429,10.554038863311932,10.554931470521849,10.555824002252331,10.556716458522523,10.55760883935156,10.558501144758573,10.559393374762681,10.560285529382995,10.561177608638621,10.562069612548655,10.562961541132182,10.563853394408287,10.564745172396037,10.565636875114498,10.566528502582726,10.567420054819769,10.568311531844666,10.569202933676447,10.57009426033414,10.570985511836756,10.571876688203306,10.572767789452788,10.573658815604194,10.574549766676508,10.575440642688704,10.576331443659752,10.577222169608609,10.57811282055423,10.579003396515555,10.579893897511521,10.580784323561058,10.581674674683082,10.582564950896508,10.583455152220239,10.584345278673169,10.585235330274188,10.586125307042176,10.587015208996004,10.587905036154536,10.588794788536628,10.589684466161131,10.590574069046884,10.591463597212718,10.592353050677458,10.593242429459922,10.594131733578918,10.595020963053246,10.5959101179017,10.596799198143065,10.59768820379612,10.59857713487963,10.599465991412359,10.600354773413063,10.601243480900482,10.60213211389336,10.603020672410423,10.603909156470394,10.604797566091987,10.605685901293912,10.606574162094862,10.607462348513533,10.608350460568605,10.609238498278753,10.610126461662647,10.611014350738945,10.611902165526296,10.612789906043348,10.613677572308736,10.614565164341089,10.615452682159027,10.616340125781162,10.6172274952261,10.618114790512436,10.619002011658761,10.61988915868366,10.620776231605703,10.621663230443456,10.62255015521548,10.623437005940325,10.624323782636532,10.625210485322636,10.626097114017169,10.626983668738646,10.627870149505581,10.628756556336478,10.629642889249833,10.630529148264138,10.63141533339787,10.632301444669505,10.633187482097508,10.634073445700336,10.634959335496442,10.635845151504267,10.636730893742245,10.637616562228805,10.63850215698237,10.639387678021343,10.640273125364136,10.641158499029144,10.642043799034754,10.64292902539935,10.643814178141303,10.644699257278983,10.645584262830747,10.646469194814943,10.647354053249916,10.648238838154004,10.64912354954553,10.65000818744282,10.650892751864184,10.651777242827926,10.652661660352345,10.653546004455732,10.654430275156367,10.655314472472526,10.656198596422477,10.657082647024477,10.657966624296781,10.658850528257634,10.65973435892527,10.66061811631792,10.661501800453804,10.66238541135114,10.663268949028131,10.664152413502977,10.665035804793872,10.665919122918998,10.666802367896533,10.667685539744644,10.668568638481494,10.669451664125235,10.670334616694017,10.671217496205976,10.672100302679246,10.672983036131948,10.6738656965822,10.674748284048112,10.675630798547784,10.676513240099313,10.677395608720781,10.678277904430269,10.679160127245849,10.680042277185587,10.680924354267535,10.681806358509746,10.682688289930264,10.683570148547116,10.684451934378336,10.685333647441938,10.686215287755939,10.68709685533834,10.687978350207139,10.688859772380326,10.689741121875885,10.690622398711788,10.691503602906005,10.692384734476494,10.69326579344121,10.694146779818096,10.695027693625091,10.695908534880127,10.696789303601125,10.697669999806001,10.698550623512665,10.699431174739017,10.700311653502949,10.70119205982235,10.702072393715097,10.702952655199065,10.703832844292112,10.704712961012103,10.70559300537688,10.70647297740429,10.707352877112166,10.708232704518336,10.709112459640618,10.70999214249683,10.710871753104774,10.71175129148225,10.712630757647046,10.71351015161695,10.714389473409735,10.71526872304317,10.71614790053502,10.717027005903036,10.717906039164967,10.718785000338555,10.719663889441527,10.720542706491615,10.721421451506533,10.722300124503994,10.7231787255017,10.724057254517346,10.724935711568625,10.725814096673217,10.726692409848798,10.727570651113034,10.728448820483584,10.729326917978103,10.730204943614236,10.731082897409623,10.731960779381891,10.732838589548669,10.733716327927572,10.73459399453621,10.735471589392183,10.736349112513091,10.737226563916519,10.738103943620048,10.738981251641253,10.739858487997699,10.740735652706945,10.741612745786547,10.742489767254046,10.743366717126982,10.744243595422885,10.745120402159278,10.74599713735368,10.746873801023595,10.747750393186532,10.748626913859981,10.749503363061432,10.750379740808365,10.751256047118254,10.752132282008565,10.753008445496759,10.753884537600285,10.754760558336592,10.755636507723114,10.756512385777286,10.757388192516531,10.758263927958264,10.759139592119896,10.760015185018828,10.760890706672457,10.76176615709817,10.762641536313351,10.763516844335374,10.764392081181605,10.765267246869403,10.766142341416122,10.76701736483911,10.767892317155702,10.768767198383236,10.76964200853903,10.770516747640405,10.771391415704676,10.77226601274914,10.773140538791099,10.774014993847839,10.774889377936645,10.775763691074793,10.776637933279549,10.77751210456818,10.778386204957934,10.779260234466065,10.780134193109811,10.781008080906405,10.781881897873074,10.78275564402704,10.783629319385513,10.784502923965702,10.785376457784801,10.786249920860008,10.787123313208506,10.78799663484747,10.788869885794075,10.789743066065482,10.79061617567885,10.791489214651326,10.792362183000058,10.793235080742182,10.794107907894825,10.79498066447511,10.795853350500153,10.796725965987063,10.797598510952941,10.798470985414882,10.799343389389975,10.800215722895299,10.80108798594793,10.801960178564936,10.802832300763376,10.803704352560302,10.804576333972763,10.805448245017798,10.80632008571244,10.807191856073713,10.80806355611864,10.808935185864229,10.809806745327489,10.810678234525415,10.811549653475003,10.812421002193235,10.81329228069709,10.814163489003535,10.815034627129542,10.815905695092063,10.81677669290805,10.817647620594448,10.818518478168192,10.819389265646214,10.820259983045435,10.821130630382774,10.82200120767514,10.822871714939435,10.823742152192557,10.824612519451394,10.82548281673283,10.826353044053738,10.82722320143099,10.828093288881448,10.828963306421965,10.82983325406939,10.830703131840568,10.831572939752334,10.832442677821513,10.833312346064929,10.834181944499395,10.835051473141721,10.835920932008708,10.836790321117151,10.837659640483837,10.838528890125549,10.839398070059058,10.840267180301137,10.84113622086854,10.842005191778028,10.842874093046346,10.843742924690233,10.844611686726426,10.845480379171653,10.846349002042631,10.847217555356078,10.848086039128699,10.848954453377194,10.849822798118261,10.850691073368584,10.851559279144842,10.852427415463714,10.853295482341865,10.854163479795954,10.855031407842638,10.855899266498563,10.856767055780367,10.857634775704689,10.858502426288153,10.85937000754738,10.860237519498986,10.861104962159576,10.861972335545753,10.86283963967411,10.863706874561236,10.86457404022371,10.865441136678106,10.866308163940996,10.867175122028936,10.868042010958483,10.868908830746186,10.869775581408582,10.870642262962212,10.871508875423599,10.872375418809268,10.873241893135729,10.874108298419497,10.87497463467707,10.875840901924942,10.876707100179607,10.877573229457541,10.878439289775223,10.87930528114912,10.880171203595696,10.881037057131406,10.881902841772702,10.882768557536023,10.883634204437808,10.884499782494485,10.885365291722477,10.886230732138204,10.887096103758072,10.887961406598485,10.888826640675843,10.889691806006534,10.890556902606944,10.891421930493449,10.89228688968242,10.893151780190223,10.894016602033215,10.894881355227747,10.895746039790167,10.89661065573681,10.89747520308401,10.898339681848093,10.899204092045377,10.900068433692175,10.900932706804793,10.901796911399531,10.902661047492682,10.903525115100534,10.904389114239368,10.905253044925455,10.906116907175067,10.906980701004459,10.90784442642989,10.908708083467607,10.90957167213385,10.910435192444858,10.911298644416858,10.912162028066072,10.913025343408718,10.913888590461003,10.914751769239132,10.9156148797593,10.9164779220377,10.917340896090513,10.91820380193392,10.919066639584091,10.91992940905719,10.920792110369376,10.9216547435368,10.92251730857561,10.923379805501943,10.924242234331933,10.92510459508171,10.925966887767387,10.926829112405082,10.927691269010904,10.928553357600952,10.92941537819132,10.9302773307981,10.931139215437371,10.932001032125207,10.932862780877683,10.933724461710858,10.93458607464079,10.935447619683531,10.93630909685512,10.937170506171602,10.938031847649004,10.93889312130335,10.939754327150663,10.940615465206951,10.941476535488226,10.942337538010483,10.94319847278972,10.944059339841917,10.944920139183063,10.94578087082913,10.946641534796086,10.947502131099892,10.948362659756507,10.949223120781879,10.950083514191952,10.950943840002664,10.951804098229942,10.952664288889716,10.953524411997899,10.954384467570408,10.955244455623149,10.956104376172016,10.95696422923291,10.95782401482171,10.958683732954304,10.959543383646565,10.96040296691436,10.96126248277355,10.962121931239995,10.962981312329543,10.963840626058035,10.964699872441313,10.965559051495207,10.96641816323554,10.967277207678132,10.968136184838794,10.968995094733337,10.969853937377557,10.97071271278725,10.971571420978204,10.9724300619662,10.973288635767014,10.974147142396415,10.975005581870166,10.975863954204023,10.976722259413739,10.977580497515058,10.978438668523719,10.979296772455454,10.980154809325988,10.981012779151044,10.981870681946333,10.982728517727564,10.983586286510441,10.984443988310655,10.985301623143899,10.986159191025855,10.987016691972201,10.987874125998609,10.98873149312074,10.989588793354256,10.990446026714809,10.991303193218046,10.992160292879609,10.99301732571513,10.993874291740239,10.994731190970557,10.9955880234217,10.99644478910928,10.997301488048898,10.998158120256154,10.99901468574664,10.999871184535943,11.00072761663964,11.001583982073308,11.00244028085251,11.003296512992812,11.004152678509765,11.005008777418922,11.005864809735826,11.006720775476014,11.007576674655018,11.008432507288362,11.009288273391565,11.01014397298014,11.010999606069596,11.011855172675432,11.012710672813146,11.013566106498224,11.014421473746152,11.015276774572406,11.016132008992455,11.016987177021766,11.0178422786758,11.018697313970007,11.019552282919832,11.020407185540723,11.021262021848111,11.022116791857425,11.022971495584088,11.023826133043517,11.024680704251125,11.025535209222316,11.026389647972488,11.027244020517037,11.02809832687135,11.028952567050805,11.02980674107078,11.030660848946646,11.031514890693764,11.03236886632749,11.03322277586318,11.034076619316176,11.03493039670182,11.035784108035445,11.036637753332379,11.037491332607944,11.038344845877456,11.039198293156224,11.040051674459551,11.04090498980274,11.04175823920108,11.042611422669859,11.043464540224354,11.044317591879846,11.045170577651596,11.046023497554874,11.046876351604933,11.047729139817024,11.048581862206392,11.04943451878828,11.050287109577917,11.051139634590532,11.051992093841347,11.05284448734558,11.053696815118435,11.054549077175123,11.055401273530835,11.05625340420077,11.057105469200112,11.05795746854404,11.05880940224773,11.059661270326352,11.060513072795068,11.061364809669035,11.062216480963405,11.063068086693324,11.063919626873929,11.064771101520359,11.065622510647739,11.06647385427119,11.06732513240583,11.068176345066771,11.069027492269116,11.069878574027964,11.070729590358411,11.07158054127554,11.072431426794436,11.073282246930175,11.074133001697826,11.07498369111245,11.075834315189113,11.076684873942861,11.077535367388743,11.0783857955418,11.07923615841707,11.08008645602958,11.080936688394354,11.08178685552641,11.082636957440762,11.083486994152414,11.084336965676368,11.08518687202762,11.086036713221159,11.086886489271967,11.087736200195023,11.0885858460053,11.089435426717763,11.090284942347372,11.091134392909085,11.091983778417847,11.092833098888603,11.093682354336293,11.094531544775846,11.09538067022219,11.096229730690245,11.097078726194926,11.097927656751143,11.098776522373797,11.099625323077788,11.100474058878007,11.101322729789342,11.102171335826672,11.10301987700487,11.103868353338811,11.104716764843355,11.105565111533359,11.106413393423676,11.107261610529154,11.108109762864634,11.10895785044495,11.109805873284934,11.110653831399405,11.111501724803187,11.11234955351109,11.113197317537917,11.114045016898476,11.11489265160756,11.11574022167996,11.116587727130458,11.117435167973836,11.118282544224865,11.119129855898313,11.119977103008942,11.120824285571507,11.12167140360076,11.122518457111447,11.123365446118306,11.124212370636071,11.12505923067947,11.125906026263227,11.126752757402057,11.127599424110672,11.128446026403779,11.129292564296076,11.13013903780226,11.13098544693702,11.131831791715037,11.132678072150991,11.133524288259554,11.134370440055392,11.135216527553165,11.136062550767532,11.136908509713141,11.137754404404635,11.138600234856657,11.139446001083837,11.140291703100802,11.141137340922176,11.141982914562576,11.142828424036612,11.143673869358889,11.14451925054401,11.145364567606567,11.14620982056115,11.14705500942234,11.147900134204718,11.148745194922856,11.14959019159132,11.150435124224671,11.151279992837466,11.152124797444255,11.152969538059581,11.153814214697986,11.154658827374002,11.155503376102157,11.156347860896975,11.157192281772973,11.158036638744663,11.158880931826552,11.159725161033139,11.16056932637892,11.161413427878383,11.162257465546016,11.163101439396296,11.163945349443697,11.164789195702687,11.165632978187729,11.166476696913277,11.167320351893785,11.1681639431437,11.16900747067746,11.169850934509503,11.170694334654257,11.171537671126146,11.17238094393959,11.173224153109002,11.17406729864879,11.174910380573358,11.175753398897099,11.176596353634409,11.177439244799672,11.178282072407269,11.179124836471576,11.179967537006963,11.180810174027794,11.181652747548428,11.18249525758322,11.183337704146519,11.184180087252663,11.185022406915994,11.185864663150845,11.18670685597154,11.187548985392402,11.188391051427747,11.189233054091883,11.190074993399117,11.19091686936375,11.191758682000074,11.19260043132238,11.19344211734495,11.194283740082065,11.195125299547996,11.19596679575701,11.196808228723372,11.197649598461334,11.198490904985153,11.199332148309072,11.200173328447331,11.201014445414168,11.201855499223813,11.202696489890487,11.203537417428414,11.204378281851806,11.205219083174873,11.206059821411817,11.206900496576836,11.207741108684122,11.208581657747866,11.209422143782248,11.210262566801443,11.211102926819626,11.21194322385096,11.212783457909609,11.213623629009726,11.214463737165463,11.215303782390963,11.216143764700368,11.216983684107811,11.217823540627421,11.218663334273323,11.219503065059634,11.220342733000468,11.221182338109932,11.222021880402131,11.22286135989116,11.223700776591114,11.224540130516077,11.225379421680131,11.226218650097355,11.227057815781816,11.227896918747582,11.228735959008713,11.229574936579265,11.230413851473289,11.231252703704829,11.232091493287923,11.232930220236605,11.233768884564908,11.234607486286853,11.235446025416458,11.236284501967738,11.2371229159547,11.237961267391348,11.23879955629168,11.239637782669687,11.240475946539357,11.241314047914672,11.242152086809607,11.242990063238139,11.243827977214229,11.24466582875184,11.245503617864928,11.246341344567446,11.247179008873335,11.24801661079654,11.248854150350994,11.249691627550627,11.250529042409363,11.251366394941126,11.252203685159825,11.253040913079372,11.253878078713672,11.254715182076623,11.255552223182118,11.256389202044046,11.257226118676293,11.258062973092732,11.258899765307243,11.259736495333689,11.260573163185935,11.261409768877837,11.26224631242325,11.263082793836018,11.263919213129986,11.264755570318991,11.265591865416864,11.266428098437434,11.26726426939452,11.26810037830194,11.268936425173505,11.269772410023021,11.27060833286429,11.27144419371111,11.272279992577268,11.273115729476553,11.273951404422744,11.274787017429619,11.275622568510945,11.276458057680491,11.277293484952015,11.278128850339272,11.278964153856014,11.279799395515987,11.280634575332929,11.281469693320574,11.282304749492654,11.283139743862893,11.28397467644501,11.284809547252722,11.285644356299736,11.286479103599756,11.287313789166484,11.288148413013614,11.288982975154832,11.289817475603826,11.290651914374273,11.291486291479849,11.29232060693422,11.293154860751052,11.293989052944005,11.29482318352673,11.295657252512878,11.296491259916094,11.297325205750013,11.298159090028273,11.298992912764499,11.299826673972316,11.300660373665345,11.301494011857196,11.302327588561479,11.3031611037918,11.303994557561753,11.304827949884935,11.305661280774935,11.306494550245333,11.30732775830971,11.30816090498164,11.308993990274692,11.309827014202426,11.310659976778405,11.31149287801618,11.312325717929301,11.31315849653131,11.313991213835745,11.314823869856143,11.315656464606029,11.31648899809893,11.317321470348363,11.31815388136784,11.318986231170873,11.319818519770964,11.320650747181611,11.321482913416311,11.32231501848855,11.323147062411813,11.323979045199579,11.324810966865321,11.32564282742251,11.32647462688461,11.327306365265079,11.328138042577368,11.328969658834934,11.329801214051217,11.330632708239655,11.331464141413687,11.332295513586738,11.333126824772235,11.333958074983597,11.334789264234239,11.335620392537573,11.336451459907,11.337282466355925,11.338113411897737,11.338944296545831,11.339775120313591,11.340605883214398,11.341436585261627,11.342267226468648,11.343097806848828,11.343928326415528,11.344758785182103,11.345589183161904,11.346419520368277,11.347249796814564,11.348080012514103,11.348910167480222,11.34974026172625,11.35057029526551,11.351400268111314,11.352230180276981,11.353060031775813,11.353889822621115,11.354719552826182,11.355549222404308,11.356378831368783,11.357208379732887,11.358037867509898,11.35886729471309,11.359696661355732,11.360525967451087,11.361355213012414,11.362184398052968,11.363013522585993,11.363842586624738,11.364671590182443,11.36550053327234,11.366329415907657,11.367158238101624,11.367986999867458,11.368815701218374,11.369644342167582,11.370472922728288,11.371301442913694,11.372129902736997,11.372958302211385,11.373786641350046,11.374614920166161,11.375443138672908,11.37627129688346,11.377099394810978,11.377927432468631,11.378755409869575,11.379583327026962,11.380411183953939,11.381238980663651,11.382066717169236,11.382894393483829,11.383722009620557,11.384549565592543,11.385377061412909,11.38620449709477,11.387031872651233,11.387859188095405,11.388686443440386,11.389513638699272,11.390340773885153,11.391167849011115,11.39199486409024,11.392821819135603,11.39364871416028,11.394475549177333,11.395302324199827,11.396129039240819,11.396955694313363,11.397782289430506,11.398608824605288,11.399435299850753,11.400261715179933,11.40108807060586,11.401914366141552,11.402740601800035,11.403566777594321,11.40439289353742,11.40521894964234,11.406044945922078,11.406870882389635,11.407696759057998,11.40852257594016,11.409348333049095,11.410174030397787,11.410999667999205,11.411825245866318,11.41265076401209,11.413476222449479,11.41430162119144,11.41512696025092,11.415952239640866,11.416777459374218,11.417602619463908,11.418427719922871,11.419252760764028,11.420077742000304,11.420902663644615,11.421727525709873,11.422552328208983,11.42337707115485,11.424201754560372,11.425026378438439,11.425850942801942,11.426675447663767,11.427499893036789,11.428324278933886,11.429148605367926,11.429972872351776,11.430797079898294,11.431621228020342,11.432445316730764,11.43326934604241,11.434093315968125,11.434917226520744,11.435741077713098,11.436564869558019,11.43738860206833,11.438212275256847,11.439035889136388,11.439859443719762,11.440682939019773,11.441506375049222,11.442329751820907,11.443153069347616,11.44397632764214,11.444799526717258,11.445622666585749,11.446445747260386,11.447268768753936,11.448091731079163,11.44891463424883,11.44973747827569,11.45056026317249,11.451382988951977,11.452205655626894,11.453028263209974,11.453850811713954,11.454673301151557,11.455495731535505,11.45631810287852,11.457140415193312,11.457962668492591,11.458784862789063,11.459606998095426,11.460429074424376,11.461251091788602,11.462073050200793,11.46289494967363,11.46371679021979,11.464538571851945,11.465360294582762,11.466181958424906,11.467003563391035,11.467825109493804,11.468646596745863,11.469468025159857,11.470289394748427,11.471110705524211,11.471931957499837,11.472753150687936,11.473574285101128,11.47439536075203,11.475216377653261,11.476037335817425,11.47685823525713,11.477679075984975,11.478499858013555,11.479320581355463,11.480141246023281,11.480961852029598,11.481782399386987,11.48260288810802,11.48342331820527,11.4842436896913,11.485064002578667,11.48588425687993,11.486704452607636,11.487524589774337,11.488344668392568,11.489164688474867,11.48998465003377,11.490804553081807,11.491624397631497,11.492444183695364,11.493263911285917,11.494083580415673,11.494903191097134,11.495722743342803,11.496542237165174,11.497361672576744,11.498181049590002,11.499000368217427,11.499819628471501,11.500638830364698,11.50145797390949,11.502277059118343,11.503096086003715,11.503915054578066,11.504733964853848,11.505552816843512,11.506371610559498,11.507190346014246,11.508009023220191,11.508827642189766,11.509646202935395,11.510464705469499,11.511283149804495,11.5121015359528,11.512919863926818,11.513738133738956,11.51455634540161,11.51537449892718,11.516192594328052,11.517010631616616,11.517828610805253,11.51864653190634,11.51946439493225,11.520282199895355,11.521099946808015,11.521917635682593,11.522735266531443,11.523552839366916,11.524370354201361,11.52518781104712,11.52600520991653,11.526822550821926,11.527639833775638,11.528457058789987,11.529274225877298,11.530091335049887,11.530908386320062,11.531725379700136,11.53254231520241,11.53335919283918,11.534176012622744,11.534992774565394,11.535809478679411,11.536626124977078,11.537442713470673,11.538259244172467,11.53907571709473,11.539892132249728,11.540708489649719,11.541524789306955,11.542341031233692,11.543157215442177,11.543973341944646,11.544789410753344,11.5456054218805,11.54642137533835,11.54723727113911,11.548053109295008,11.548868889818259,11.549684612721071,11.550500278015658,11.55131588571422,11.552131435828956,11.552946928372062,11.55376236335573,11.554577740792142,11.555393060693484,11.556208323071933,11.557023527939663,11.557838675308842,11.558653765191632,11.5594687976002,11.560283772546697,11.561098690043279,11.561913550102089,11.562728352735274,11.563543097954973,11.56435778577332,11.565172416202445,11.565986989254473,11.56680150494153,11.567615963275731,11.568430364269194,11.56924470793402,11.570058994282322,11.570873223326196,11.571687395077738,11.572501509549044,11.5733155667522,11.57412956669929,11.574943509402393,11.575757394873586,11.576571223124937,11.577384994168513,11.57819870801638,11.579012364680594,11.579825964173207,11.580639506506273,11.581452991691833,11.582266419741932,11.58307979066861,11.58389310448389,11.584706361199808,11.585519560828388,11.586332703381649,11.587145788871606,11.587958817310271,11.588771788709655,11.589584703081757,11.59039756043858,11.591210360792115,11.592023104154354,11.592835790537286,11.59364841995289,11.594460992413145,11.595273507930028,11.596085966515504,11.596898368181542,11.597710712940101,11.59852300080314,11.599335231782613,11.600147405890464,11.600959523138641,11.601771583539088,11.602583587103734,11.603395533844516,11.604207423773358,11.605019256902189,11.605831033242925,11.606642752807481,11.60745441560777,11.608266021655698,11.60907757096317,11.60988906354208,11.610700499404327,11.6115118785618,11.612323201026385,11.613134466809965,11.613945675924416,11.614756828381614,11.615567924193428,11.616378963371725,11.617189945928363,11.618000871875202,11.618811741224093,11.619622553986886,11.620433310175427,11.621244009801554,11.622054652877106,11.622865239413915,11.62367576942381,11.624486242918612,11.625296659910145,11.626107020410222,11.626917324430657,11.627727571983257,11.628537763079825,11.62934789773216,11.63015797595206,11.630967997751315,11.63177796314171,11.632587872135032,11.633397724743055,11.634207520977558,11.635017260850312,11.63582694437308,11.636636571557627,11.637446142415714,11.63825565695909,11.639065115199509,11.639874517148716,11.640683862818452,11.641493152220459,11.642302385366467,11.643111562268208,11.643920682937406,11.644729747385785,11.645538755625061,11.64634770766695,11.647156603523158,11.647965443205392,11.648774226725354,11.649582954094742,11.650391625325247,11.65120024042856,11.652008799416366,11.652817302300347,11.653625749092178,11.654434139803534,11.65524247444608,11.656050753031487,11.656858975571414,11.657667142077514,11.658475252561443,11.65928330703485,11.660091305509377,11.660899247996669,11.66170713450836,11.662514965056081,11.663322739651464,11.664130458306133,11.664938121031707,11.665745727839804,11.666553278742034,11.667360773750008,11.668168212875333,11.668975596129602,11.669782923524417,11.67059019507137,11.671397410782047,11.672204570668036,11.673011674740915,11.673818723012259,11.674625715493642,11.675432652196635,11.676239533132799,11.677046358313694,11.67785312775088,11.678659841455907,11.679466499440323,11.680273101715676,11.6810796482935,11.681886139185337,11.682692574402717,11.68349895395717,11.684305277860219,11.685111546123386,11.685917758758187,11.686723915776135,11.687530017188736,11.6883360630075,11.689142053243922,11.689947987909502,11.690753867015733,11.691559690574103,11.692365458596097,11.693171171093196,11.693976828076876,11.694782429558611,11.695587975549868,11.696393466062117,11.697198901106814,11.69800428069542,11.698809604839385,11.69961487355016,11.700420086839193,11.70122524471792,11.702030347197782,11.702835394290211,11.703640386006638,11.704445322358488,11.705250203357183,11.706055029014141,11.706859799340776,11.7076645143485,11.708469174048714,11.709273778452824,11.710078327572226,11.710882821418316,11.711687260002487,11.71249164333612,11.7132959714306,11.714100244297306,11.714904461947613,11.715708624392894,11.71651273164451,11.717316783713828,11.718120780612209,11.718924722351005,11.719728608941569,11.720532440395248,11.721336216723385,11.72213993793732,11.72294360404839,11.723747215067926,11.724550771007255,11.725354271877704,11.726157717690592,11.726961108457234,11.727764444188944,11.72856772489703,11.729370950592797,11.730174121287549,11.730977236992576,11.731780297719176,11.73258330347864,11.733386254282252,11.73418915014129,11.734991991067035,11.73579477707076,11.736597508163737,11.737400184357229,11.738202805662501,11.73900537209081,11.73980788365341,11.740610340361556,11.74141274222649,11.742215089259458,11.743017381471697,11.743819618874443,11.744621801478928,11.745423929296381,11.746226002338025,11.74702802061508,11.747829984138763,11.748631892920283,11.749433746970853,11.750235546301674,11.751037290923952,11.751838980848879,11.75264061608765,11.753442196651456,11.75424372255148,11.755045193798907,11.755846610404912,11.756647972380673,11.757449279737356,11.75825053248613,11.759051730638157,11.759852874204597,11.760653963196605,11.761454997625332,11.762255977501926,11.763056902837533,11.763857773643288,11.76465858993033,11.76545935170979,11.7662600589928,11.767060711790483,11.767861310113961,11.768661853974349,11.769462343382761,11.77026277835031,11.771063158888099,11.771863485007227,11.7726637567188,11.773463974033909,11.774264136963643,11.775064245519092,11.775864299711337,11.77666429955146,11.777464245050536,11.778264136219635,11.779063973069828,11.779863755612178,11.780663483857747,11.781463157817592,11.782262777502764,11.783062342924314,11.783861854093288,11.78466131102073,11.785460713717674,11.786260062195158,11.78705935646421,11.78785859653586,11.788657782421131,11.78945691413104,11.790255991676604,11.791055015068837,11.791853984318745,11.792652899437334,11.793451760435604,11.794250567324552,11.795049320115174,11.795848018818457,11.796646663445388,11.79744525400695,11.798243790514121,11.799042272977875,11.799840701409185,11.800639075819015,11.801437396218335,11.802235662618099,11.803033875029266,11.803832033462788,11.804630137929616,11.805428188440692,11.806226185006958,11.807024127639353,11.807822016348812,11.808619851146263,11.809417632042637,11.810215359048852,11.81101303217583,11.811810651434486,11.812608216835734,11.813405728390478,11.814203186109628,11.81500059000408,11.815797940084733,11.816595236362483,11.81739247884822,11.818189667552826,11.818986802487185,11.819783883662176,11.820580911088678,11.821377884777558,11.822174804739685,11.822971670985924,11.823768483527136,11.824565242374177,11.825361947537901,11.826158599029156,11.82695519685879,11.827751741037646,11.82854823157656,11.829344668486367,11.8301410517779,11.830937381461988,11.831733657549453,11.832529880051114,11.833326048977789,11.834122164340293,11.834918226149435,11.83571423441602,11.83651018915085,11.837306090364724,11.838101938068435,11.83889773227278,11.83969347298854,11.840489160226504,11.841284793997449,11.842080374312156,11.842875901181396,11.843671374615935,11.844466794626545,11.845262161223985,11.846057474419016,11.846852734222388,11.84764794064486,11.848443093697174,11.849238193390079,11.850033239734312,11.85082823274061,11.85162317241971,11.852418058782341,11.853212891839226,11.85400767160109,11.854802398078654,11.85559707128263,11.856391691223735,11.857186257912671,11.857980771360149,11.858775231576864,11.859569638573518,11.860363992360803,11.86115829294941,11.861952540350027,11.862746734573337,11.863540875630019,11.864334963530748,11.865128998286199,11.865922979907038,11.866716908403934,11.867510783787546,11.868304606068536,11.869098375257554,11.869892091365253,11.870685754402283,11.871479364379285,11.8722729213069,11.873066425195766,11.873859876056516,11.87465327389978,11.875446618736182,11.87623991057635,11.877033149430897,11.877826335310443,11.8786194682256,11.879412548186973,11.880205575205169,11.88099854929079,11.881791470454436,11.882584338706698,11.883377154058167,11.884169916519431,11.884962626101075,11.88575528281368,11.886547886667818,11.887340437674064,11.888132935842993,11.888925381185166,11.889717773711146,11.890510113431493,11.891302400356762,11.892094634497507,11.892886815864276,11.893678944467611,11.894471020318056,11.89526304342615,11.896055013802428,11.896846931457418,11.897638796401647,11.898430608645644,11.899222368199926,11.90001407507501,11.90080572928141,11.901597330829636,11.902388879730195,11.90318037599359,11.903971819630321,11.904763210650882,11.905554549065767,11.906345834885466,11.907137068120463,11.907928248781241,11.908719376878278,11.90951045242205,11.910301475423028,11.911092445891681,11.911883363838472,11.912674229273863,11.913465042208314,11.914255802652276,11.9150465106162,11.915837166110537,11.916627769145729,11.917418319732215,11.918208817880432,11.918999263600815,11.919789656903795,11.920579997799795,11.921370286299242,11.922160522412552,11.922950706150145,11.92374083752243,11.92453091653982,11.925320943212721,11.926110917551531,11.926900839566652,11.927690709268479,11.928480526667405,11.929270291773818,11.930060004598102,11.93084966515064,11.931639273441812,11.932428829481992,11.933218333281548,11.934007784850852,11.934797184200267,11.935586531340157,11.936375826280875,11.937165069032778,11.937954259606217,11.938743398011539,11.93953248425909,11.940321518359207,11.941110500322228,11.94189943015849,11.942688307878322,11.943477133492049,11.944265907009997,11.945054628442486,11.945843297799831,11.946631915092349,11.947420480330344,11.948208993524126,11.948997454684,11.949785863820264,11.950574220943214,11.951362526063143,11.952150779190342,11.952938980335094,11.953727129507687,11.954515226718396,11.955303271977497,11.956091265295266,11.95687920668197,11.957667096147874,11.958454933703242,11.959242719358334,11.960030453123403,11.960818135008704,11.961605765024485,11.962393343180992,11.963180869488465,11.963968343957147,11.964755766597268,11.965543137419065,11.966330456432765,11.967117723648592,11.96790493907677,11.968692102727518,11.969479214611049,11.970266274737577,11.97105328311731,11.971840239760454,11.972627144677208,11.973413997877774,11.974200799372344,11.974987549171114,11.975774247284269,11.976560893721993,11.977347488494473,11.978134031611884,11.978920523084401,11.979706962922197,11.980493351135438,11.981279687734292,11.98206597272892,11.982852206129479,11.983638387946126,11.98442451818901,11.985210596868283,11.98599662399409,11.98678259957657,11.987568523625859,11.988354396152099,11.989140217165419,11.989925986675946,11.990711704693807,11.991497371229123,11.992282986292011,11.99306854989259,11.993854062040969,11.994639522747255,11.995424932021558,11.996210289873979,11.996995596314612,11.997780851353557,11.998566055000905,11.999351207266745,12.000136308161162,12.000921357694235,12.001706355876049,12.002491302716676,12.003276198226189,12.004061042414657,12.004845835292144,12.005630576868715,12.006415267154427,12.00719990615934,12.007984493893499,12.00876903036696,12.009553515589765,12.01033794957196,12.011122332323582,12.011906663854669,12.012690944175251,12.01347517329536,12.01425935122502,12.015043477974258,12.01582755355309,12.016611577971535,12.017395551239604,12.01817947336731,12.018963344364655,12.019747164241647,12.020530933008283,12.021314650674563,12.022098317250478,12.022881932746019,12.023665497171175,12.024449010535928,12.02523247285026,12.026015884124146,12.026799244367561,12.027582553590477,12.028365811802862,12.02914901901468,12.02993217523589,12.030715280476452,12.03149833474632,12.032281338055448,12.03306429041378,12.033847191831264,12.034630042317838,12.035412841883446,12.03619559053802,12.036978288291492,12.03776093515379,12.038543531134842,12.039326076244569,12.04010857049289,12.04089101388972,12.041673406444973,12.04245574816856,12.043238039070385,12.044020279160351,12.04480246844836,12.045584606944304,12.046366694658083,12.04714873159958,12.047930717778685,12.048712653205286,12.049494537889258,12.050276371840479,12.051058155068825,12.051839887584165,12.05262156939637,12.053403200515302,12.054184780950822,12.054966310712787,12.055747789811056,12.05652921825548,12.057310596055904,12.058091923222175,12.058873199764138,12.059654425691628,12.060435601014483,12.061216725742533,12.061997799885612,12.062778823453542,12.063559796456149,12.064340718903251,12.065121590804665,12.065902412170207,12.066683183009683,12.067463903332904,12.06824457314967,12.069025192469786,12.069805761303048,12.070586279659251,12.071366747548186,12.07214716497964,12.0729275319634,12.073707848509244,12.074488114626956,12.075268330326308,12.076048495617075,12.076828610509024,12.077608675011922,12.07838868913553,12.07916865288961,12.079948566283917,12.080728429328206,12.081508242032228,12.08228800440573,12.083067716458451,12.083847378200138,12.084626989640526,12.08540655078935,12.086186061656342,12.08696552225123,12.087744932583735,12.088524292663589,12.089303602500502,12.090082862104191,12.090862071484374,12.091641230650753,12.092420339613042,12.093199398380937,12.093978406964142,12.094757365372356,12.095536273615268,12.096315131702573,12.097093939643957,12.097872697449102,12.098651405127693,12.09943006268941,12.100208670143921,12.100987227500903,12.101765734770025,12.102544191960952,12.103322599083347,12.104100956146869,12.104879263161177,12.10565752013592,12.106435727080752,12.107213884005319,12.107991990919263,12.108770047832229,12.109548054753853,12.11032601169377,12.11110391866161,12.111881775667005,12.112659582719576,12.113437339828952,12.114215047004745,12.114992704256576,12.115770311594057,12.1165478690268,12.117325376564407,12.118102834216486,12.118880241992638,12.119657599902459,12.120434907955545,12.121212166161486,12.121989374529871,12.122766533070287,12.123543641792317,12.124320700705537,12.125097709819524,12.125874669143855,12.126651578688096,12.127428438461815,12.128205248474575,12.12898200873594,12.129758719255467,12.13053538004271,12.131311991107221,12.132088552458548,12.132865064106236,12.13364152605983,12.134417938328868,12.135194300922887,12.135970613851418,12.136746877123997,12.137523090750145,12.138299254739392,12.139075369101255,12.139851433845253,12.140627448980903,12.141403414517717,12.1421793304652,12.142955196832864,12.143731013630207,12.144506780866731,12.145282498551934,12.14605816669531,12.146833785306345,12.147609354394532,12.148384873969357,12.149160344040299,12.149935764616835,12.150711135708443,12.151486457324596,12.152261729474763,12.15303695216841,12.153812125415001,12.154587249223999,12.155362323604859,12.156137348567036,12.156912324119983,12.157687250273145,12.158462127035971,12.159236954417905,12.16001173242838,12.160786461076839,12.161561140372713,12.162335770325434,12.163110350944427,12.163884882239117,12.164659364218927,12.165433796893275,12.166208180271578,12.166982514363243,12.167756799177686,12.16853103472431,12.169305221012522,12.170079358051717,12.170853445851296,12.171627484420656,12.172401473769183,12.17317541390627,12.1739493048413,12.174723146583656,12.17549693914272,12.176270682527868,12.177044376748471,12.1778180218139,12.178591617733527,12.179365164516712,12.180138662172821,12.180912110711208,12.181685510141234,12.182458860472247,12.183232161713603,12.184005413874642,12.184778616964712,12.185551770993152,12.186324875969301,12.187097931902498,12.18787093880207,12.188643896677346,12.189416805537656,12.19018966539232,12.19096247625066,12.191735238121993,12.192507951015632,12.193280614940889,12.194053229907075,12.194825795923494,12.195598312999447,12.196370781144235,12.197143200367156,12.197915570677502,12.198687892084564,12.19946016459763,12.200232388225984,12.201004562978913,12.201776688865689,12.20254876589559,12.203320794077893,12.204092773421864,12.204864703936774,12.205636585631886,12.206408418516459,12.207180202599753,12.207951937891027,12.208723624399529,12.20949526213451,12.210266851105217,12.211038391320896,12.211809882790787,12.212581325524125,12.21335271953015,12.21412406481809,12.21489536139718,12.215666609276639,12.216437808465693,12.217208958973567,12.217980060809474,12.21875111398263,12.219522118502248,12.220293074377535,12.221063981617698,12.221834840231942,12.222605650229465,12.223376411619464,12.224147124411134,12.224917788613668,12.225688404236253,12.226458971288077,12.227229489778319,12.227999959716163,12.228770381110785,12.229540753971357,12.23031107830705,12.231081354127037,12.231851581440479,12.23262176025654,12.233391890584382,12.23416197243316,12.234932005812027,12.235701990730137,12.236471927196634,12.237241815220667,12.238011654811377,12.238781445977903,12.239551188729385,12.240320883074952,12.241090529023738,12.241860126584871,12.242629675767475,12.243399176580676,12.244168629033588,12.24493803313533,12.245707388895017,12.246476696321759,12.247245955424665,12.248015166212838,12.248784328695383,12.249553442881396,12.250322508779979,12.25109152640022,12.251860495751213,12.252629416842046,12.253398289681805,12.254167114279568,12.25493589064442,12.255704618785435,12.256473298711686,12.257241930432247,12.258010513956183,12.25877904929256,12.259547536450441,12.260315975438887,12.261084366266953,12.261852708943692,12.262621003478158,12.263389249879397,12.264157448156457,12.264925598318374,12.265693700374197,12.266461754332955,12.267229760203689,12.267997717995424,12.268765627717192,12.269533489378018,12.270301302986924,12.271069068552933,12.271836786085055,12.272604455592312,12.273372077083712,12.274139650568266,12.274907176054977,12.27567465355285,12.276442083070883,12.277209464618075,12.27797679820342,12.278744083835912,12.279511321524538,12.280278511278285,12.281045653106137,12.28181274701707,12.282579793020068,12.283346791124103,12.284113741338148,12.284880643671169,12.285647498132139,12.286414304730016,12.287181063473763,12.287947774372341,12.2887144374347,12.289481052669798,12.29024762008658,12.291014139693994,12.291780611500988,12.2925470355165,12.29331341174947,12.294079740208833,12.294846020903522,12.295612253842469,12.2963784390346,12.29714457648884,12.297910666214108,12.29867670821933,12.299442702513417,12.300208649105285,12.300974548003841,12.301740399218,12.302506202756662,12.30327195862873,12.304037666843104,12.304803327408683,12.30556894033436,12.306334505629026,12.307100023301569,12.307865493360877,12.308630915815831,12.309396290675314,12.310161617948202,12.310926897643366,12.311692129769686,12.312457314336028,12.313222451351256,12.313987540824236,12.31475258276383,12.315517577178895,12.316282524078288,12.317047423470859,12.317812275365458,12.318577079770938,12.319341836696138,12.320106546149901,12.32087120814107,12.321635822678475,12.322400389770953,12.323164909427337,12.32392938165645,12.32469380646712,12.325458183868172,12.326222513868425,12.326986796476692,12.327751031701792,12.328515219552536,12.32927936003773,12.330043453166185,12.3308074989467,12.331571497388078,12.332335448499117,12.333099352288615,12.33386320876536,12.334627017938145,12.335390779815755,12.336154494406976,12.33691816172059,12.337681781765374,12.338445354550107,12.33920888008356,12.339972358374508,12.340735789431713,12.341499173263946,12.34226250987997,12.343025799288538,12.343789041498415,12.344552236518352,12.345315384357102,12.346078485023414,12.346841538526034,12.347604544873708,12.348367504075174,12.349130416139172,12.349893281074435,12.350656098889703,12.351418869593699,12.352181593195153,12.352944269702792,12.353706899125337,12.354469481471508,12.35523201675002,12.355994504969589,12.356756946138923,12.357519340266736,12.358281687361732,12.359043987432614,12.359806240488082,12.360568446536833,12.361330605587568,12.362092717648974,12.362854782729743,12.363616800838562,12.364378771984118,12.36514069617509,12.365902573420158,12.366664403727997,12.367426187107284,12.368187923566692,12.368949613114884,12.369711255760528,12.37047285151229,12.371234400378828,12.371995902368802,12.372757357490864,12.37351876575367,12.374280127165866,12.375041441736105,12.375802709473025,12.376563930385272,12.377325104481487,12.378086231770304,12.378847312260357,12.379608345960277,12.380369332878693,12.381130273024233,12.38189116640552,12.382652013031171,12.383412812909807,12.384173566050045,12.384934272460496,12.38569493214977,12.386455545126474,12.387216111399214,12.387976630976592,12.388737103867207,12.389497530079657,12.390257909622537,12.391018242504437,12.391778528733946,12.392538768319652,12.393298961270135,12.39405910759398,12.394819207299767,12.395579260396067,12.396339266891456,12.397099226794504,12.397859140113779,12.398619006857846,12.399378827035271,12.40013860065461,12.400898327724422,12.40165800825326,12.40241764224968,12.40317722972223,12.403936770679456,12.404696265129905,12.405455713082116,12.40621511454463,12.40697446952598,12.407733778034705,12.408493040079334,12.409252255668395,12.410011424810417,12.41077054751392,12.411529623787427,12.412288653639454,12.41304763707852,12.413806574113137,12.414565464751814,12.41532430900306,12.416083106875382,12.416841858377278,12.417600563517253,12.418359222303803,12.419117834745421,12.419876400850601,12.420634920627833,12.421393394085603,12.422151821232395,12.422910202076697,12.423668536626979,12.424426824891723,12.425185066879404,12.42594326259849,12.426701412057454,12.42745951526476,12.42821757222887,12.42897558295825,12.429733547461357,12.430491465746645,12.43124933782257,12.43200716369758,12.432764943380127,12.433522676878656,12.434280364201607,12.435038005357423,12.435795600354544,12.436553149201403,12.437310651906433,12.438068108478065,12.438825518924727,12.439582883254843,12.440340201476838,12.44109747359913,12.441854699630138,12.442611879578276,12.443369013451958,12.444126101259593,12.444883143009587,12.445640138710345,12.44639708837027,12.447153991997762,12.447910849601218,12.448667661189033,12.449424426769596,12.450181146351301,12.450937819942533,12.451694447551674,12.45245102918711,12.453207564857214,12.45396405457037,12.454720498334948,12.455476896159322,12.456233248051857,12.456989554020925,12.457745814074887,12.458502028222103,12.459258196470934,12.460014318829733,12.460770395306861,12.461526425910664,12.462282410649491,12.46303834953169,12.463794242565603,12.464550089759573,12.465305891121938,12.466061646661032,12.46681735638519,12.467573020302746,12.468328638422026,12.469084210751355,12.469839737299058,12.470595218073454,12.471350653082867,12.472106042335605,12.472861385839986,12.473616683604321,12.47437193563692,12.475127141946084,12.47588230254012,12.476637417427328,12.477392486616006,12.478147510114452,12.478902487930954,12.479657420073806,12.4804123065513,12.481167147371716,12.481921942543341,12.482676692074453,12.483431395973332,12.484186054248255,12.484940666907493,12.485695233959316,12.486449755411995,12.487204231273795,12.487958661552979,12.488713046257807,12.489467385396539,12.490221678977429,12.490975927008732,12.491730129498697,12.492484286455573,12.493238397887607,12.49399246380304,12.494746484210118,12.495500459117075,12.496254388532146,12.497008272463566,12.497762110919565,12.498515903908375,12.499269651438217,12.500023353517319,12.500777010153898,12.501530621356176,12.502284187132368,12.503037707490686,12.503791182439342,12.504544611986542,12.5052979961405,12.506051334909413,12.506804628301483,12.50755787632491,12.508311078987889,12.509064236298617,12.509817348265281,12.510570414896073,12.511323436199175,12.512076412182777,12.512829342855058,12.513582228224196,12.514335068298369,12.515087863085748,12.515840612594511,12.51659331683282,12.517345975808844,12.518098589530751,12.518851158006699,12.519603681244849,12.520356159253357,12.521108592040378,12.521860979614063,12.522613321982563,12.523365619154024,12.52411787113659,12.524870077938406,12.52562223956761,12.52637435603234,12.527126427340729,12.527878453500913,12.528630434521018,12.529382370409174,12.530134261173504,12.530886106822134,12.531637907363182,12.532389662804766,12.533141373155003],"x":[20.0,20.005997600959617,20.011995201919234,20.017992802878847,20.023990403838464,20.02998800479808,20.0359856057577,20.041983206717312,20.04798080767693,20.053978408636546,20.059976009596163,20.065973610555776,20.071971211515393,20.07796881247501,20.083966413434627,20.08996401439424,20.095961615353858,20.101959216313475,20.10795681727309,20.11395441823271,20.119952019192322,20.12594962015194,20.131947221111556,20.137944822071173,20.143942423030786,20.149940023990403,20.15593762495002,20.161935225909637,20.16793282686925,20.173930427828868,20.179928028788485,20.185925629748102,20.191923230707715,20.197920831667332,20.20391843262695,20.209916033586566,20.215913634546183,20.221911235505797,20.227908836465414,20.23390643742503,20.239904038384648,20.24590163934426,20.251899240303878,20.257896841263495,20.263894442223112,20.269892043182725,20.275889644142342,20.28188724510196,20.287884846061576,20.29388244702119,20.299880047980807,20.305877648940424,20.31187524990004,20.317872850859658,20.32387045181927,20.329868052778888,20.335865653738505,20.341863254698122,20.347860855657736,20.353858456617353,20.35985605757697,20.365853658536587,20.3718512594962,20.377848860455817,20.383846461415434,20.38984406237505,20.395841663334664,20.40183926429428,20.4078368652539,20.413834466213515,20.419832067173132,20.425829668132746,20.431827269092363,20.43782487005198,20.443822471011597,20.44982007197121,20.455817672930827,20.461815273890444,20.46781287485006,20.473810475809675,20.47980807676929,20.48580567772891,20.491803278688526,20.49780087964814,20.503798480607756,20.509796081567373,20.51579368252699,20.521791283486607,20.52778888444622,20.533786485405837,20.539784086365454,20.54578168732507,20.551779288284685,20.557776889244302,20.56377449020392,20.569772091163536,20.57576969212315,20.581767293082766,20.587764894042383,20.593762495002,20.599760095961614,20.60575769692123,20.611755297880848,20.617752898840465,20.62375049980008,20.629748100759695,20.635745701719312,20.64174330267893,20.647740903638546,20.65373850459816,20.659736105557776,20.665733706517393,20.67173130747701,20.677728908436624,20.68372650939624,20.689724110355858,20.695721711315475,20.701719312275088,20.707716913234705,20.713714514194322,20.71971211515394,20.725709716113556,20.73170731707317,20.737704918032787,20.743702518992404,20.74970011995202,20.755697720911634,20.76169532187125,20.767692922830868,20.773690523790485,20.7796881247501,20.785685725709715,20.791683326669332,20.79768092762895,20.803678528588563,20.80967612954818,20.815673730507797,20.821671331467414,20.82766893242703,20.833666533386644,20.83966413434626,20.845661735305878,20.851659336265495,20.85765693722511,20.863654538184726,20.869652139144343,20.87564974010396,20.881647341063573,20.88764494202319,20.893642542982807,20.899640143942424,20.905637744902037,20.911635345861654,20.91763294682127,20.92363054778089,20.929628148740505,20.93562574970012,20.941623350659736,20.947620951619353,20.95361855257897,20.959616153538583,20.9656137544982,20.971611355457817,20.977608956417434,20.983606557377048,20.989604158336665,20.99560175929628,21.0015993602559,21.007596961215516,21.01359456217513,21.019592163134746,21.025589764094363,21.03158736505398,21.037584966013593,21.04358256697321,21.049580167932827,21.055577768892444,21.061575369852058,21.067572970811675,21.073570571771292,21.07956817273091,21.085565773690522,21.09156337465014,21.097560975609756,21.103558576569373,21.10955617752899,21.115553778488604,21.12155137944822,21.127548980407838,21.133546581367455,21.139544182327068,21.145541783286685,21.151539384246302,21.15753698520592,21.163534586165532,21.16953218712515,21.175529788084766,21.181527389044383,21.187524990003997,21.193522590963614,21.19952019192323,21.205517792882848,21.211515393842465,21.217512994802078,21.223510595761695,21.229508196721312,21.23550579768093,21.241503398640543,21.24750099960016,21.253498600559777,21.259496201519394,21.265493802479007,21.271491403438624,21.27748900439824,21.283486605357858,21.28948420631747,21.29548180727709,21.301479408236705,21.307477009196322,21.31347461015594,21.319472211115553,21.32546981207517,21.331467413034787,21.337465013994404,21.343462614954017,21.349460215913634,21.35545781687325,21.361455417832868,21.36745301879248,21.3734506197521,21.379448220711716,21.385445821671333,21.391443422630946,21.397441023590563,21.40343862455018,21.409436225509797,21.415433826469414,21.421431427429027,21.427429028388644,21.43342662934826,21.43942423030788,21.445421831267492,21.45141943222711,21.457417033186726,21.463414634146343,21.469412235105956,21.475409836065573,21.48140743702519,21.487405037984807,21.49340263894442,21.499400239904038,21.505397840863655,21.51139544182327,21.51739304278289,21.523390643742502,21.52938824470212,21.535385845661736,21.541383446621353,21.547381047580966,21.553378648540583,21.5593762495002,21.565373850459817,21.57137145141943,21.577369052379048,21.583366653338665,21.58936425429828,21.595361855257895,21.601359456217512,21.60735705717713,21.613354658136746,21.619352259096363,21.625349860055977,21.631347461015594,21.63734506197521,21.643342662934828,21.64934026389444,21.655337864854058,21.661335465813675,21.667333066773292,21.673330667732905,21.679328268692522,21.68532586965214,21.691323470611756,21.69732107157137,21.703318672530987,21.709316273490604,21.71531387445022,21.721311475409838,21.72730907636945,21.733306677329068,21.739304278288685,21.745301879248302,21.751299480207916,21.757297081167533,21.76329468212715,21.769292283086767,21.77528988404638,21.781287485005997,21.787285085965614,21.79328268692523,21.799280287884844,21.80527788884446,21.81127548980408,21.817273090763695,21.823270691723312,21.829268292682926,21.835265893642543,21.84126349460216,21.847261095561777,21.85325869652139,21.859256297481007,21.865253898440624,21.87125149940024,21.877249100359855,21.88324670131947,21.88924430227909,21.895241903238706,21.90123950419832,21.907237105157936,21.913234706117553,21.91923230707717,21.925229908036787,21.9312275089964,21.937225109956017,21.943222710915634,21.94922031187525,21.955217912834865,21.961215513794482,21.9672131147541,21.973210715713716,21.97920831667333,21.985205917632946,21.991203518592563,21.99720111955218,22.003198720511794,22.00919632147141,22.015193922431028,22.021191523390645,22.02718912435026,22.033186725309875,22.039184326269492,22.04518192722911,22.051179528188726,22.05717712914834,22.063174730107956,22.069172331067573,22.07516993202719,22.081167532986804,22.08716513394642,22.093162734906038,22.099160335865655,22.105157936825268,22.111155537784885,22.117153138744502,22.12315073970412,22.129148340663736,22.13514594162335,22.141143542582967,22.147141143542584,22.1531387445022,22.159136345461814,22.16513394642143,22.171131547381048,22.177129148340665,22.18312674930028,22.189124350259895,22.195121951219512,22.20111955217913,22.207117153138743,22.21311475409836,22.219112355057977,22.225109956017594,22.23110755697721,22.237105157936824,22.24310275889644,22.249100359856058,22.255097960815675,22.26109556177529,22.267093162734906,22.273090763694523,22.27908836465414,22.285085965613753,22.29108356657337,22.297081167532987,22.303078768492604,22.309076369452217,22.315073970411834,22.32107157137145,22.32706917233107,22.333066773290685,22.3390643742503,22.345061975209916,22.351059576169533,22.35705717712915,22.363054778088763,22.36905237904838,22.375049980007997,22.381047580967614,22.387045181927228,22.393042782886845,22.39904038384646,22.40503798480608,22.411035585765692,22.41703318672531,22.423030787684926,22.429028388644543,22.43502598960416,22.441023590563773,22.44702119152339,22.453018792483007,22.459016393442624,22.465013994402238,22.471011595361855,22.47700919632147,22.48300679728109,22.489004398240702,22.49500199920032,22.500999600159936,22.506997201119553,22.512994802079167,22.518992403038784,22.5249900039984,22.530987604958018,22.536985205917635,22.542982806877248,22.548980407836865,22.554978008796482,22.5609756097561,22.566973210715712,22.57297081167533,22.578968412634946,22.584966013594563,22.590963614554177,22.596961215513794,22.60295881647341,22.608956417433028,22.61495401839264,22.620951619352258,22.626949220311875,22.632946821271492,22.63894442223111,22.644942023190723,22.65093962415034,22.656937225109957,22.662934826069574,22.668932427029187,22.674930027988804,22.68092762894842,22.686925229908038,22.69292283086765,22.69892043182727,22.704918032786885,22.710915633746502,22.716913234706116,22.722910835665733,22.72890843662535,22.734906037584967,22.740903638544584,22.746901239504197,22.752898840463814,22.75889644142343,22.764894042383048,22.77089164334266,22.77688924430228,22.782886845261896,22.788884446221513,22.794882047181126,22.800879648140743,22.80687724910036,22.812874850059977,22.818872451019594,22.824870051979207,22.830867652938824,22.83686525389844,22.84286285485806,22.848860455817672,22.85485805677729,22.860855657736906,22.866853258696523,22.872850859656136,22.878848460615753,22.88484606157537,22.890843662534987,22.8968412634946,22.902838864454218,22.908836465413835,22.91483406637345,22.92083166733307,22.926829268292682,22.9328268692523,22.938824470211916,22.944822071171533,22.950819672131146,22.956817273090763,22.96281487405038,22.968812475009997,22.97481007596961,22.980807676929228,22.986805277888845,22.99280287884846,22.998800479808075,23.004798080767692,23.01079568172731,23.016793282686926,23.022790883646543,23.028788484606157,23.034786085565774,23.04078368652539,23.046781287485008,23.05277888844462,23.058776489404238,23.064774090363855,23.070771691323472,23.076769292283085,23.082766893242702,23.08876449420232,23.094762095161936,23.10075969612155,23.106757297081167,23.112754898040784,23.1187524990004,23.124750099960018,23.13074770091963,23.136745301879248,23.142742902838865,23.148740503798482,23.154738104758096,23.160735705717713,23.16673330667733,23.172730907636947,23.17872850859656,23.184726109556177,23.190723710515794,23.19672131147541,23.202718912435024,23.20871651339464,23.21471411435426,23.220711715313875,23.226709316273492,23.232706917233106,23.238704518192723,23.24470211915234,23.250699720111957,23.25669732107157,23.262694922031187,23.268692522990804,23.27469012395042,23.280687724910035,23.28668532586965,23.29268292682927,23.298680527788886,23.3046781287485,23.310675729708116,23.316673330667733,23.32267093162735,23.328668532586967,23.33466613354658,23.340663734506197,23.346661335465814,23.35265893642543,23.358656537385045,23.36465413834466,23.37065173930428,23.376649340263896,23.38264694122351,23.388644542183126,23.394642143142743,23.40063974410236,23.406637345061974,23.41263494602159,23.418632546981208,23.424630147940825,23.43062774890044,23.436625349860055,23.442622950819672,23.44862055177929,23.454618152738906,23.46061575369852,23.466613354658136,23.472610955617753,23.47860855657737,23.484606157536984,23.4906037584966,23.496601359456218,23.502598960415835,23.508596561375448,23.514594162335065,23.520591763294682,23.5265893642543,23.532586965213916,23.53858456617353,23.544582167133147,23.550579768092764,23.55657736905238,23.562574970011994,23.56857257097161,23.574570171931228,23.580567772890845,23.58656537385046,23.592562974810075,23.598560575769692,23.60455817672931,23.610555777688923,23.61655337864854,23.622550979608157,23.628548580567774,23.63454618152739,23.640543782487004,23.64654138344662,23.652538984406238,23.658536585365855,23.66453418632547,23.670531787285086,23.676529388244703,23.68252698920432,23.688524590163933,23.69452219112355,23.700519792083167,23.706517393042784,23.712514994002397,23.718512594962014,23.72451019592163,23.73050779688125,23.736505397840865,23.74250299880048,23.748500599760096,23.754498200719713,23.76049580167933,23.766493402638943,23.77249100359856,23.778488604558177,23.784486205517794,23.790483806477408,23.796481407437025,23.80247900839664,23.80847660935626,23.814474210315872,23.82047181127549,23.826469412235106,23.832467013194723,23.83846461415434,23.844462215113953,23.85045981607357,23.856457417033187,23.862455017992804,23.868452618952418,23.874450219912035,23.88044782087165,23.88644542183127,23.892443022790882,23.8984406237505,23.904438224710116,23.910435825669733,23.916433426629347,23.922431027588964,23.92842862854858,23.934426229508198,23.940423830467815,23.946421431427428,23.952419032387045,23.958416633346662,23.96441423430628,23.970411835265892,23.97640943622551,23.982407037185126,23.988404638144743,23.994402239104357,24.000399840063974,24.00639744102359,24.012395041983208,24.01839264294282,24.024390243902438,24.030387844862055,24.036385445821672,24.04238304678129,24.048380647740903,24.05437824870052,24.060375849660137,24.066373450619754,24.072371051579367,24.078368652538984,24.0843662534986,24.090363854458218,24.09636145541783,24.10235905637745,24.108356657337065,24.114354258296682,24.120351859256296,24.126349460215913,24.13234706117553,24.138344662135147,24.144342263094764,24.150339864054377,24.156337465013994,24.16233506597361,24.168332666933228,24.17433026789284,24.18032786885246,24.186325469812076,24.192323070771693,24.198320671731306,24.204318272690923,24.21031587365054,24.216313474610157,24.22231107556977,24.228308676529387,24.234306277489004,24.24030387844862,24.24630147940824,24.25229908036785,24.25829668132747,24.264294282287086,24.270291883246703,24.276289484206316,24.282287085165933,24.28828468612555,24.294282287085167,24.30027988804478,24.306277489004398,24.312275089964015,24.31827269092363,24.324270291883245,24.330267892842862,24.33626549380248,24.342263094762096,24.348260695721713,24.354258296681326,24.360255897640943,24.36625349860056,24.372251099560177,24.37824870051979,24.384246301479408,24.390243902439025,24.39624150339864,24.402239104358255,24.408236705317872,24.41423430627749,24.420231907237106,24.42622950819672,24.432227109156337,24.438224710115954,24.44422231107557,24.450219912035188,24.4562175129948,24.462215113954418,24.468212714914035,24.474210315873652,24.480207916833265,24.486205517792882,24.4922031187525,24.498200719712116,24.50419832067173,24.510195921631347,24.516193522590964,24.52219112355058,24.528188724510194,24.53418632546981,24.540183926429428,24.546181527389045,24.552179128348662,24.558176729308276,24.564174330267893,24.57017193122751,24.576169532187127,24.58216713314674,24.588164734106357,24.594162335065974,24.60015993602559,24.606157536985204,24.61215513794482,24.61815273890444,24.624150339864055,24.63014794082367,24.636145541783286,24.642143142742903,24.64814074370252,24.654138344662137,24.66013594562175,24.666133546581367,24.672131147540984,24.6781287485006,24.684126349460215,24.69012395041983,24.69612155137945,24.702119152339066,24.70811675329868,24.714114354258296,24.720111955217913,24.72610955617753,24.732107157137147,24.73810475809676,24.744102359056377,24.750099960015994,24.75609756097561,24.762095161935225,24.76809276289484,24.77409036385446,24.780087964814076,24.78608556577369,24.792083166733306,24.798080767692923,24.80407836865254,24.810075969612154,24.81607357057177,24.822071171531388,24.828068772491005,24.83406637345062,24.840063974410235,24.846061575369852,24.85205917632947,24.858056777289086,24.8640543782487,24.870051979208316,24.876049580167933,24.88204718112755,24.888044782087164,24.89404238304678,24.900039984006398,24.906037584966015,24.912035185925628,24.918032786885245,24.924030387844862,24.93002798880448,24.936025589764096,24.94202319072371,24.948020791683327,24.954018392642944,24.96001599360256,24.966013594562174,24.97201119552179,24.978008796481408,24.984006397441025,24.99000399840064,24.996001599360255,25.001999200319872,25.00799680127949,25.013994402239103,25.01999200319872,25.025989604158337,25.031987205117954,25.03798480607757,25.043982407037184,25.0499800079968,25.055977608956418,25.061975209916035,25.06797281087565,25.073970411835266,25.079968012794883,25.0859656137545,25.091963214714113,25.09796081567373,25.103958416633347,25.109956017592964,25.115953618552577,25.121951219512194,25.12794882047181,25.13394642143143,25.139944022391045,25.14594162335066,25.151939224310276,25.157936825269893,25.16393442622951,25.169932027189123,25.17592962814874,25.181927229108357,25.187924830067974,25.193922431027588,25.199920031987205,25.20591763294682,25.21191523390644,25.217912834866052,25.22391043582567,25.229908036785286,25.235905637744903,25.24190323870452,25.247900839664133,25.25389844062375,25.259896041583367,25.265893642542984,25.271891243502598,25.277888844462215,25.28388644542183,25.28988404638145,25.295881647341062,25.30187924830068,25.307876849260296,25.313874450219913,25.319872051179527,25.325869652139144,25.33186725309876,25.337864854058378,25.343862455017995,25.349860055977608,25.355857656937225,25.361855257896842,25.36785285885646,25.373850459816072,25.37984806077569,25.385845661735306,25.391843262694923,25.397840863654537,25.403838464614154,25.40983606557377,25.415833666533388,25.421831267493,25.427828868452618,25.433826469412235,25.439824070371852,25.44582167133147,25.451819272291083,25.4578168732507,25.463814474210317,25.469812075169934,25.475809676129547,25.481807277089164,25.48780487804878,25.493802479008398,25.49980007996801,25.50579768092763,25.511795281887245,25.517792882846862,25.523790483806476,25.529788084766093,25.53578568572571,25.541783286685327,25.547780887644944,25.553778488604557,25.559776089564174,25.56577369052379,25.571771291483408,25.57776889244302,25.58376649340264,25.589764094362256,25.595761695321873,25.601759296281486,25.607756897241103,25.61375449820072,25.619752099160337,25.62574970011995,25.631747301079567,25.637744902039184,25.6437425029988,25.64974010395842,25.65573770491803,25.66173530587765,25.667732906837266,25.673730507796883,25.679728108756496,25.685725709716113,25.69172331067573,25.697720911635347,25.70371851259496,25.709716113554578,25.715713714514195,25.72171131547381,25.727708916433425,25.733706517393042,25.73970411835266,25.745701719312276,25.751699320271893,25.757696921231506,25.763694522191123,25.76969212315074,25.775689724110357,25.78168732506997,25.787684926029588,25.793682526989205,25.79968012794882,25.805677728908435,25.811675329868052,25.81767293082767,25.823670531787286,25.8296681327469,25.835665733706517,25.841663334666134,25.84766093562575,25.853658536585368,25.85965613754498,25.865653738504598,25.871651339464215,25.877648940423832,25.883646541383445,25.889644142343062,25.89564174330268,25.901639344262296,25.90763694522191,25.913634546181527,25.919632147141144,25.92562974810076,25.931627349060374,25.93762495001999,25.943622550979608,25.949620151939225,25.955617752898842,25.961615353858456,25.967612954818073,25.97361055577769,25.979608156737307,25.98560575769692,25.991603358656537,25.997600959616154,26.00359856057577,26.009596161535384,26.015593762495,26.02159136345462,26.027588964414235,26.03358656537385,26.039584166333466,26.045581767293083,26.0515793682527,26.057576969212317,26.06357457017193,26.069572171131547,26.075569772091164,26.08156737305078,26.087564974010395,26.09356257497001,26.09956017592963,26.105557776889246,26.11155537784886,26.117552978808476,26.123550579768093,26.12954818072771,26.135545781687323,26.14154338264694,26.147540983606557,26.153538584566174,26.15953618552579,26.165533786485405,26.17153138744502,26.17752898840464,26.183526589364256,26.18952419032387,26.195521791283486,26.201519392243103,26.20751699320272,26.213514594162334,26.21951219512195,26.225509796081568,26.231507397041185,26.237504998000798,26.243502598960415,26.249500199920032,26.25549780087965,26.261495401839266,26.26749300279888,26.273490603758496,26.279488204718113,26.28548580567773,26.291483406637344,26.29748100759696,26.303478608556578,26.309476209516195,26.315473810475808,26.321471411435425,26.327469012395042,26.33346661335466,26.339464214314273,26.34546181527389,26.351459416233507,26.357457017193124,26.36345461815274,26.369452219112354,26.37544982007197,26.381447421031588,26.387445021991205,26.39344262295082,26.399440223910435,26.405437824870052,26.41143542582967,26.417433026789283,26.4234306277489,26.429428228708517,26.435425829668134,26.441423430627747,26.447421031587364,26.45341863254698,26.459416233506598,26.465413834466215,26.47141143542583,26.477409036385446,26.483406637345063,26.48940423830468,26.495401839264293,26.50139944022391,26.507397041183527,26.513394642143144,26.519392243102757,26.525389844062374,26.53138744502199,26.53738504598161,26.54338264694122,26.54938024790084,26.555377848860456,26.561375449820073,26.56737305077969,26.573370651739303,26.57936825269892,26.585365853658537,26.591363454618154,26.597361055577768,26.603358656537385,26.609356257497,26.61535385845662,26.621351459416232,26.62734906037585,26.633346661335466,26.639344262295083,26.6453418632547,26.651339464214313,26.65733706517393,26.663334666133547,26.669332267093164,26.675329868052778,26.681327469012395,26.68732506997201,26.69332267093163,26.699320271891242,26.70531787285086,26.711315473810476,26.717313074770093,26.723310675729707,26.729308276689324,26.73530587764894,26.741303478608557,26.747301079568174,26.753298680527788,26.759296281487405,26.765293882447022,26.77129148340664,26.777289084366252,26.78328668532587,26.789284286285486,26.795281887245103,26.801279488204717,26.807277089164334,26.81327469012395,26.819272291083568,26.82526989204318,26.831267493002798,26.837265093962415,26.843262694922032,26.84926029588165,26.855257896841263,26.86125549780088,26.867253098760496,26.873250699720113,26.879248300679727,26.885245901639344,26.89124350259896,26.897241103558578,26.90323870451819,26.90923630547781,26.915233906437425,26.921231507397042,26.927229108356656,26.933226709316273,26.93922431027589,26.945221911235507,26.951219512195124,26.957217113154737,26.963214714114354,26.96921231507397,26.975209916033588,26.9812075169932,26.98720511795282,26.993202718912436,26.999200319872052,27.005197920831666,27.011195521791283,27.0171931227509,27.023190723710517,27.02918832467013,27.035185925629747,27.041183526589364,27.04718112754898,27.0531787285086,27.05917632946821,27.06517393042783,27.071171531387446,27.077169132347063,27.083166733306676,27.089164334266293,27.09516193522591,27.101159536185527,27.10715713714514,27.113154738104758,27.119152339064375,27.12514994002399,27.131147540983605,27.137145141943222,27.14314274290284,27.149140343862456,27.155137944822073,27.161135545781686,27.167133146741303,27.17313074770092,27.179128348660537,27.18512594962015,27.191123550579768,27.197121151539385,27.203118752499,27.209116353458615,27.215113954418232,27.22111155537785,27.227109156337466,27.23310675729708,27.239104358256697,27.245101959216314,27.25109956017593,27.257097161135547,27.26309476209516,27.269092363054778,27.275089964014395,27.281087564974012,27.287085165933625,27.293082766893242,27.29908036785286,27.305077968812476,27.31107556977209,27.317073170731707,27.323070771691324,27.32906837265094,27.335065973610554,27.34106357457017,27.347061175529788,27.353058776489405,27.359056377449022,27.365053978408636,27.371051579368253,27.37704918032787,27.383046781287486,27.3890443822471,27.395041983206717,27.401039584166334,27.40703718512595,27.413034786085564,27.41903238704518,27.4250299880048,27.431027588964415,27.43702518992403,27.443022790883646,27.449020391843263,27.45501799280288,27.461015593762497,27.46701319472211,27.473010795681727,27.479008396641344,27.48500599760096,27.491003598560575,27.49700119952019,27.50299880047981,27.508996401439425,27.51499400239904,27.520991603358656,27.526989204318273,27.53298680527789,27.538984406237503,27.54498200719712,27.550979608156737,27.556977209116354,27.56297481007597,27.568972411035585,27.5749700119952,27.58096761295482,27.586965213914436,27.59296281487405,27.598960415833666,27.604958016793283,27.6109556177529,27.616953218712514,27.62295081967213,27.628948420631747,27.634946021591364,27.640943622550978,27.646941223510595,27.652938824470212,27.65893642542983,27.664934026389446,27.67093162734906,27.676929228308676,27.682926829268293,27.68892443022791,27.694922031187524,27.70091963214714,27.706917233106758,27.712914834066375,27.718912435025988,27.724910035985605,27.730907636945222,27.73690523790484,27.742902838864453,27.74890043982407,27.754898040783686,27.760895641743303,27.76689324270292,27.772890843662534,27.77888844462215,27.784886045581768,27.790883646541385,27.796881247501,27.802878848460615,27.808876449420232,27.81487405037985,27.820871651339463,27.82686925229908,27.832866853258697,27.838864454218314,27.844862055177927,27.850859656137544,27.85685725709716,27.862854858056778,27.868852459016395,27.87485005997601,27.880847660935625,27.886845261895242,27.89284286285486,27.898840463814473,27.90483806477409,27.910835665733707,27.916833266693324,27.922830867652937,27.928828468612554,27.93482606957217,27.94082367053179,27.9468212714914,27.95281887245102,27.958816473410636,27.964814074370253,27.97081167532987,27.976809276289483,27.9828068772491,27.988804478208717,27.994802079168334,28.000799680127948,28.006797281087564,28.01279488204718,28.0187924830068,28.024790083966412,28.03078768492603,28.036785285885646,28.042782886845263,28.048780487804876,28.054778088764493,28.06077568972411,28.066773290683727,28.072770891643344,28.078768492602958,28.084766093562575,28.09076369452219,28.09676129548181,28.102758896441422,28.10875649740104,28.114754098360656,28.120751699320273,28.126749300279887,28.132746901239504,28.13874450219912,28.144742103158737,28.15073970411835,28.156737305077968,28.162734906037585,28.168732506997202,28.17473010795682,28.180727708916432,28.18672530987605,28.192722910835666,28.198720511795283,28.204718112754897,28.210715713714514,28.21671331467413,28.222710915633748,28.22870851659336,28.234706117552978,28.240703718512595,28.246701319472212,28.252698920431826,28.258696521391443,28.26469412235106,28.270691723310676,28.276689324270293,28.282686925229907,28.288684526189524,28.29468212714914,28.300679728108758,28.30667732906837,28.31267493002799,28.318672530987605,28.324670131947222,28.330667732906836,28.336665333866453,28.34266293482607,28.348660535785687,28.3546581367453,28.360655737704917,28.366653338664534,28.37265093962415,28.378648540583768,28.38464614154338,28.390643742503,28.396641343462615,28.402638944422232,28.408636545381846,28.414634146341463,28.42063174730108,28.426629348260697,28.43262694922031,28.438624550179927,28.444622151139544,28.45061975209916,28.45661735305878,28.46261495401839,28.46861255497801,28.474610155937626,28.480607756897243,28.486605357856856,28.492602958816473,28.49860055977609,28.504598160735707,28.51059576169532,28.516593362654937,28.522590963614554,28.52858856457417,28.534586165533785,28.540583766493402,28.54658136745302,28.552578968412636,28.558576569372253,28.564574170331866,28.570571771291483,28.5765693722511,28.582566973210717,28.58856457417033,28.594562175129948,28.600559776089565,28.60655737704918,28.612554978008795,28.618552578968412,28.62455017992803,28.630547780887646,28.63654538184726,28.642542982806876,28.648540583766493,28.65453818472611,28.660535785685727,28.66653338664534,28.672530987604958,28.678528588564575,28.684526189524192,28.690523790483805,28.696521391443422,28.70251899240304,28.708516593362656,28.71451419432227,28.720511795281887,28.726509396241504,28.73250699720112,28.738504598160734,28.74450219912035,28.750499800079968,28.756497401039585,28.762495001999202,28.768492602958815,28.774490203918432,28.78048780487805,28.786485405837666,28.79248300679728,28.798480607756897,28.804478208716514,28.81047580967613,28.816473410635744,28.82247101159536,28.82846861255498,28.834466213514595,28.84046381447421,28.846461415433826,28.852459016393443,28.85845661735306,28.864454218312677,28.87045181927229,28.876449420231907,28.882447021191524,28.88844462215114,28.894442223110754,28.90043982407037,28.90643742502999,28.912435025989605,28.91843262694922,28.924430227908836,28.930427828868453,28.93642542982807,28.942423030787683,28.9484206317473,28.954418232706917,28.960415833666534,28.96641343462615,28.972411035585765,28.97840863654538,28.984406237505,28.990403838464616,28.99640143942423,29.002399040383846,29.008396641343463,29.01439424230308,29.020391843262693,29.02638944422231,29.032387045181927,29.038384646141544,29.044382247101158,29.050379848060775,29.056377449020392,29.06237504998001,29.068372650939626,29.07437025189924,29.080367852858856,29.086365453818473,29.09236305477809,29.098360655737704,29.10435825669732,29.110355857656938,29.116353458616555,29.122351059576168,29.128348660535785,29.134346261495402,29.14034386245502,29.146341463414632,29.15233906437425,29.158336665333866,29.164334266293483,29.1703318672531,29.176329468212714,29.18232706917233,29.188324670131948,29.194322271091565,29.20031987205118,29.206317473010795,29.212315073970412,29.21831267493003,29.224310275889643,29.23030787684926,29.236305477808877,29.242303078768494,29.248300679728107,29.254298280687724,29.26029588164734,29.266293482606958,29.272291083566575,29.27828868452619,29.284286285485805,29.290283886445422,29.29628148740504,29.302279088364653,29.30827668932427,29.314274290283887,29.320271891243504,29.326269492203117,29.332267093162734,29.33826469412235,29.34426229508197,29.35025989604158,29.3562574970012,29.362255097960816,29.368252698920433,29.37425029988005,29.380247900839663,29.38624550179928,29.392243102758897,29.398240703718514,29.404238304678127,29.410235905637744,29.41623350659736,29.42223110755698,29.428228708516592,29.43422630947621,29.440223910435826,29.446221511395443,29.452219112355056,29.458216713314673,29.46421431427429,29.470211915233907,29.476209516193524,29.482207117153138,29.488204718112755,29.49420231907237,29.50019992003199,29.506197520991602,29.51219512195122,29.518192722910836,29.524190323870453,29.530187924830066,29.536185525789683,29.5421831267493,29.548180727708917,29.55417832866853,29.560175929628148,29.566173530587765,29.572171131547382,29.578168732507,29.584166333466612,29.59016393442623,29.596161535385846,29.602159136345463,29.608156737305077,29.614154338264694,29.62015193922431,29.626149540183928,29.63214714114354,29.638144742103158,29.644142343062775,29.650139944022392,29.656137544982005,29.662135145941622,29.66813274690124,29.674130347860856,29.680127948820473,29.686125549780087,29.692123150739704,29.69812075169932,29.704118352658938,29.71011595361855,29.71611355457817,29.722111155537785,29.728108756497402,29.734106357457016,29.740103958416633,29.74610155937625,29.752099160335867,29.75809676129548,29.764094362255097,29.770091963214714,29.77608956417433,29.782087165133948,29.78808476609356,29.79408236705318,29.800079968012795,29.806077568972412,29.812075169932026,29.818072770891643,29.82407037185126,29.830067972810877,29.83606557377049,29.842063174730107,29.848060775689724,29.85405837664934,29.860055977608955,29.86605357856857,29.87205117952819,29.878048780487806,29.884046381447423,29.890043982407036,29.896041583366653,29.90203918432627,29.908036785285887,29.9140343862455,29.920031987205117,29.926029588164734,29.93202718912435,29.938024790083965,29.944022391043582,29.9500199920032,29.956017592962816,29.96201519392243,29.968012794882046,29.974010395841663,29.98000799680128,29.986005597760897,29.99200319872051,29.998000799680128,30.003998400639745,30.00999600159936,30.015993602558975,30.021991203518592,30.02798880447821,30.033986405437826,30.03998400639744,30.045981607357056,30.051979208316673,30.05797680927629,30.063974410235904,30.06997201119552,30.075969612155138,30.081967213114755,30.087964814074372,30.093962415033985,30.099960015993602,30.10595761695322,30.111955217912836,30.11795281887245,30.123950419832067,30.129948020791684,30.1359456217513,30.141943222710914,30.14794082367053,30.153938424630148,30.159936025589765,30.16593362654938,30.171931227508995,30.177928828468612,30.18392642942823,30.189924030387846,30.19592163134746,30.201919232307077,30.207916833266694,30.21391443422631,30.219912035185924,30.22590963614554,30.23190723710516,30.237904838064775,30.24390243902439,30.249900039984006,30.255897640943623,30.26189524190324,30.267892842862853,30.27389044382247,30.279888044782087,30.285885645741704,30.29188324670132,30.297880847660934,30.30387844862055,30.30987604958017,30.315873650539785,30.3218712514994,30.327868852459016,30.333866453418633,30.33986405437825,30.345861655337863,30.35185925629748,30.357856857257097,30.363854458216714,30.36985205917633,30.375849660135945,30.38184726109556,30.38784486205518,30.393842463014796,30.39984006397441,30.405837664934026,30.411835265893643,30.41783286685326,30.423830467812873,30.42982806877249,30.435825669732107,30.441823270691724,30.447820871651338,30.453818472610955,30.459816073570572,30.46581367453019,30.471811275489806,30.47780887644942,30.483806477409036,30.489804078368653,30.49580167932827,30.501799280287884,30.5077968812475,30.513794482207118,30.519792083166735,30.525789684126348,30.531787285085965,30.537784886045582,30.5437824870052,30.549780087964812,30.55577768892443,30.561775289884046,30.567772890843663,30.57377049180328,30.579768092762894,30.58576569372251,30.591763294682128,30.597760895641745,30.60375849660136,30.609756097560975,30.615753698520592,30.62175129948021,30.627748900439823,30.63374650139944,30.639744102359057,30.645741703318674,30.651739304278287,30.657736905237904,30.66373450619752,30.669732107157138,30.675729708116755,30.68172730907637,30.687724910035985,30.693722510995602,30.69972011195522,30.705717712914833,30.71171531387445,30.717712914834067,30.723710515793684,30.729708116753297,30.735705717712914,30.74170331867253,30.74770091963215,30.75369852059176,30.75969612155138,30.765693722510996,30.771691323470613,30.77768892443023,30.783686525389843,30.78968412634946,30.795681727309077,30.801679328268694,30.807676929228307,30.813674530187924,30.81967213114754,30.82566973210716,30.831667333066772,30.83766493402639,30.843662534986006,30.849660135945623,30.855657736905236,30.861655337864853,30.86765293882447,30.873650539784087,30.879648140743704,30.885645741703318,30.891643342662935,30.89764094362255,30.90363854458217,30.909636145541782,30.9156337465014,30.921631347461016,30.927628948420633,30.933626549380246,30.939624150339863,30.94562175129948,30.951619352259097,30.95761695321871,30.963614554178328,30.969612155137945,30.975609756097562,30.98160735705718,30.987604958016792,30.99360255897641,30.999600159936026,31.005597760895643,31.011595361855257,31.017592962814874,31.02359056377449,31.029588164734108,31.03558576569372,31.041583366653338,31.047580967612955,31.053578568572572,31.059576169532185,31.065573770491802,31.07157137145142,31.077568972411036,31.083566573370653,31.089564174330267,31.095561775289884,31.1015593762495,31.107556977209118,31.11355457816873,31.11955217912835,31.125549780087965,31.131547381047582,31.137544982007196,31.143542582966813,31.14954018392643,31.155537784886047,31.16153538584566,31.167532986805277,31.173530587764894,31.17952818872451,31.185525789684128,31.19152339064374,31.19752099160336,31.203518592562975,31.209516193522592,31.215513794482206,31.221511395441823,31.22750899640144,31.233506597361057,31.23950419832067,31.245501799280287,31.251499400239904,31.25749700119952,31.263494602159135,31.26949220311875,31.27548980407837,31.281487405037986,31.287485005997603,31.293482606957216,31.299480207916833,31.30547780887645,31.311475409836067,31.31747301079568,31.323470611755297,31.329468212714914,31.33546581367453,31.341463414634145,31.347461015593762,31.35345861655338,31.359456217512996,31.36545381847261,31.371451419432226,31.377449020391843,31.38344662135146,31.389444222311077,31.39544182327069,31.401439424230308,31.407437025189925,31.41343462614954,31.419432227109155,31.425429828068772,31.43142742902839,31.437425029988006,31.44342263094762,31.449420231907236,31.455417832866853,31.46141543382647,31.467413034786084,31.4734106357457,31.479408236705318,31.485405837664935,31.491403438624552,31.497401039584165,31.503398640543782,31.5093962415034,31.515393842463016,31.52139144342263,31.527389044382247,31.533386645341864,31.53938424630148,31.545381847261094,31.55137944822071,31.557377049180328,31.563374650139945,31.56937225109956,31.575369852059175,31.581367453018792,31.58736505397841,31.593362654938026,31.59936025589764,31.605357856857257,31.611355457816874,31.61735305877649,31.623350659736104,31.62934826069572,31.63534586165534,31.641343462614955,31.64734106357457,31.653338664534186,31.659336265493803,31.66533386645342,31.671331467413033,31.67732906837265,31.683326669332267,31.689324270291884,31.6953218712515,31.701319472211114,31.70731707317073,31.71331467413035,31.719312275089965,31.72530987604958,31.731307477009196,31.737305077968813,31.74330267892843,31.749300279888043,31.75529788084766,31.761295481807277,31.767293082766894,31.773290683726508,31.779288284686125,31.78528588564574,31.79128348660536,31.797281087564976,31.80327868852459,31.809276289484206,31.815273890443823,31.82127149140344,31.827269092363053,31.83326669332267,31.839264294282287,31.845261895241904,31.851259496201518,31.857257097161135,31.863254698120752,31.86925229908037,31.875249900039982,31.8812475009996,31.887245101959216,31.893242702918833,31.89924030387845,31.905237904838064,31.91123550579768,31.917233106757298,31.923230707716915,31.929228308676528,31.935225909636145,31.941223510595762,31.94722111155538,31.953218712514992,31.95921631347461,31.965213914434226,31.971211515393843,31.977209116353457,31.983206717313074,31.98920431827269,31.995201919232308,32.001199520191925,32.00719712115154,32.01319472211116,32.01919232307077,32.025189924030386,32.03118752499,32.03718512594962,32.04318272690924,32.049180327868854,32.05517792882847,32.06117552978809,32.0671731307477,32.073170731707314,32.07916833266693,32.08516593362655,32.091163534586165,32.09716113554578,32.1031587365054,32.109156337465016,32.11515393842463,32.12115153938424,32.12714914034386,32.13314674130348,32.139144342263094,32.14514194322271,32.15113954418233,32.157137145141945,32.16313474610156,32.16913234706117,32.17512994802079,32.181127548980406,32.18712514994002,32.19312275089964,32.19912035185926,32.205117952818874,32.21111555377849,32.21711315473811,32.22311075569772,32.229108356657335,32.23510595761695,32.24110355857657,32.247101159536186,32.2530987604958,32.25909636145542,32.26509396241504,32.27109156337465,32.277089164334264,32.28308676529388,32.2890843662535,32.295081967213115,32.30107956817273,32.30707716913235,32.313074770091966,32.31907237105158,32.32506997201119,32.33106757297081,32.33706517393043,32.34306277489004,32.34906037584966,32.35505797680928,32.361055577768894,32.36705317872851,32.37305077968812,32.37904838064774,32.385045981607355,32.39104358256697,32.39704118352659,32.403038784486206,32.40903638544582,32.41503398640544,32.42103158736506,32.42702918832467,32.433026789284284,32.4390243902439,32.44502199120352,32.451019592163135,32.45701719312275,32.46301479408237,32.469012395041986,32.475009996001596,32.48100759696121,32.48700519792083,32.49300279888045,32.499000399840064,32.50499800079968,32.5109956017593,32.516993202718915,32.52299080367853,32.52898840463814,32.53498600559776,32.540983606557376,32.54698120751699,32.55297880847661,32.55897640943623,32.564974010395844,32.57097161135546,32.57696921231507,32.58296681327469,32.588964414234304,32.59496201519392,32.60095961615354,32.606957217113155,32.61295481807277,32.61895241903239,32.624950019992006,32.630947620951616,32.63694522191123,32.64294282287085,32.64894042383047,32.654938024790084,32.6609356257497,32.66693322670932,32.672930827668935,32.678928428628545,32.68492602958816,32.69092363054778,32.696921231507396,32.70291883246701,32.70891643342663,32.71491403438625,32.720911635345864,32.72690923630548,32.73290683726509,32.73890443822471,32.744902039184325,32.75089964014394,32.75689724110356,32.762894842063176,32.76889244302279,32.77489004398241,32.78088764494202,32.78688524590164,32.792882846861254,32.79888044782087,32.80487804878049,32.810875649740105,32.81687325069972,32.82287085165934,32.828868452618956,32.834866053578565,32.84086365453818,32.8468612554978,32.852858856457416,32.85885645741703,32.86485405837665,32.87085165933627,32.876849260295884,32.882846861255494,32.88884446221511,32.89484206317473,32.900839664134345,32.90683726509396,32.91283486605358,32.918832467013196,32.92483006797281,32.93082766893243,32.93682526989204,32.94282287085166,32.948820471811274,32.95481807277089,32.96081567373051,32.966813274690125,32.97281087564974,32.97880847660936,32.98480607756897,32.990803678528586,32.9968012794882,33.00279888044782,33.00879648140744,33.014794082367054,33.02079168332667,33.02678928428629,33.032786885245905,33.038784486205515,33.04478208716513,33.05077968812475,33.056777289084366,33.06277489004398,33.0687724910036,33.07477009196322,33.080767692922834,33.08676529388244,33.09276289484206,33.09876049580168,33.104758096761294,33.11075569772091,33.11675329868053,33.122750899640145,33.12874850059976,33.13474610155938,33.14074370251899,33.146741303478606,33.15273890443822,33.15873650539784,33.16473410635746,33.170731707317074,33.17672930827669,33.18272690923631,33.188724510195925,33.194722111155535,33.20071971211515,33.20671731307477,33.212714914034386,33.218712514994,33.22471011595362,33.23070771691324,33.236705317872854,33.242702918832464,33.24870051979208,33.2546981207517,33.260695721711315,33.26669332267093,33.27269092363055,33.278688524590166,33.28468612554978,33.2906837265094,33.29668132746901,33.30267892842863,33.308676529388244,33.31467413034786,33.32067173130748,33.326669332267095,33.33266693322671,33.33866453418633,33.34466213514594,33.350659736105555,33.35665733706517,33.36265493802479,33.368652538984406,33.37465013994402,33.38064774090364,33.38664534186326,33.392642942822874,33.398640543782484,33.4046381447421,33.41063574570172,33.416633346661335,33.42263094762095,33.42862854858057,33.434626149540186,33.4406237504998,33.44662135145941,33.45261895241903,33.45861655337865,33.464614154338264,33.47061175529788,33.4766093562575,33.482606957217115,33.48860455817673,33.49460215913635,33.50059976009596,33.506597361055576,33.51259496201519,33.51859256297481,33.52459016393443,33.530587764894044,33.53658536585366,33.54258296681328,33.54858056777289,33.554578168732505,33.56057576969212,33.56657337065174,33.572570971611356,33.57856857257097,33.58456617353059,33.59056377449021,33.596561375449824,33.60255897640943,33.60855657736905,33.61455417832867,33.620551779288284,33.6265493802479,33.63254698120752,33.638544582167135,33.64454218312675,33.65053978408636,33.65653738504598,33.662534986005596,33.66853258696521,33.67453018792483,33.68052778888445,33.686525389844064,33.69252299080368,33.6985205917633,33.70451819272291,33.710515793682525,33.71651339464214,33.72251099560176,33.728508596561376,33.73450619752099,33.74050379848061,33.74650139944023,33.75249900039984,33.758496601359454,33.76449420231907,33.77049180327869,33.776489404238305,33.78248700519792,33.78848460615754,33.794482207117156,33.80047980807677,33.80647740903638,33.812475009996,33.81847261095562,33.824470211915234,33.83046781287485,33.83646541383447,33.842463014794085,33.8484606157537,33.85445821671331,33.86045581767293,33.866453418632545,33.87245101959216,33.87844862055178,33.884446221511396,33.89044382247101,33.89644142343063,33.90243902439025,33.90843662534986,33.914434226309474,33.92043182726909,33.92642942822871,33.932427029188325,33.93842463014794,33.94442223110756,33.950419832067176,33.956417433026786,33.9624150339864,33.96841263494602,33.97441023590564,33.980407836865254,33.98640543782487,33.99240303878449,33.998400639744105,34.00439824070372,34.01039584166333,34.01639344262295,34.022391043582566,34.02838864454218,34.0343862455018,34.04038384646142,34.046381447421034,34.05237904838065,34.05837664934026,34.06437425029988,34.070371851259495,34.07636945221911,34.08236705317873,34.088364654138346,34.09436225509796,34.10035985605758,34.1063574570172,34.11235505797681,34.11835265893642,34.12435025989604,34.13034786085566,34.136345461815274,34.14234306277489,34.14834066373451,34.154338264694125,34.160335865653735,34.16633346661335,34.17233106757297,34.178328668532586,34.1843262694922,34.19032387045182,34.19632147141144,34.202319072371054,34.20831667333067,34.21431427429028,34.2203118752499,34.226309476209515,34.23230707716913,34.23830467812875,34.244302279088366,34.25029988004798,34.2562974810076,34.26229508196721,34.26829268292683,34.274290283886444,34.28028788484606,34.28628548580568,34.292283086765295,34.29828068772491,34.30427828868453,34.310275889644146,34.316273490603756,34.32227109156337,34.32826869252299,34.33426629348261,34.340263894442224,34.34626149540184,34.35225909636146,34.358256697321075,34.364254298280684,34.3702518992403,34.37624950019992,34.382247101159535,34.38824470211915,34.39424230307877,34.400239904038386,34.406237504998,34.41223510595762,34.41823270691723,34.42423030787685,34.430227908836464,34.43622550979608,34.4422231107557,34.448220711715315,34.45421831267493,34.46021591363455,34.46621351459416,34.472211115553776,34.47820871651339,34.48420631747301,34.49020391843263,34.496201519392244,34.50219912035186,34.50819672131148,34.514194322271095,34.520191923230705,34.52618952419032,34.53218712514994,34.538184726109556,34.54418232706917,34.55017992802879,34.55617752898841,34.562175129948024,34.568172730907634,34.57417033186725,34.58016793282687,34.586165533786485,34.5921631347461,34.59816073570572,34.604158336665336,34.61015593762495,34.61615353858457,34.62215113954418,34.628148740503796,34.63414634146341,34.64014394242303,34.64614154338265,34.652139144342264,34.65813674530188,34.6641343462615,34.67013194722111,34.676129548180725,34.68212714914034,34.68812475009996,34.694122351059576,34.70011995201919,34.70611755297881,34.71211515393843,34.718112754898044,34.724110355857654,34.73010795681727,34.73610555777689,34.742103158736505,34.74810075969612,34.75409836065574,34.760095961615356,34.76609356257497,34.77209116353458,34.7780887644942,34.78408636545382,34.790083966413434,34.79608156737305,34.80207916833267,34.808076769292285,34.8140743702519,34.82007197121152,34.82606957217113,34.832067173130746,34.83806477409036,34.84406237504998,34.8500599760096,34.856057576969214,34.86205517792883,34.86805277888845,34.87405037984806,34.880047980807674,34.88604558176729,34.89204318272691,34.898040783686525,34.90403838464614,34.91003598560576,34.916033586565376,34.92203118752499,34.9280287884846,34.93402638944422,34.94002399040384,34.946021591363454,34.95201919232307,34.95801679328269,34.964014394242305,34.97001199520192,34.97600959616153,34.98200719712115,34.988004798080766,34.99400239904038,35.0,35.00599760095962,35.011995201919234,35.01799280287885,35.02399040383847,35.02998800479808,35.035985605757695,35.04198320671731,35.04798080767693,35.053978408636546,35.05997600959616,35.06597361055578,35.0719712115154,35.07796881247501,35.083966413434624,35.08996401439424,35.09596161535386,35.101959216313475,35.10795681727309,35.11395441823271,35.119952019192326,35.12594962015194,35.13194722111155,35.13794482207117,35.143942423030786,35.1499400239904,35.15593762495002,35.16193522590964,35.167932826869254,35.17393042782887,35.17992802878848,35.1859256297481,35.191923230707715,35.19792083166733,35.20391843262695,35.209916033586566,35.21591363454618,35.2219112355058,35.22790883646542,35.23390643742503,35.239904038384644,35.24590163934426,35.25189924030388,35.257896841263495,35.26389444222311,35.26989204318273,35.275889644142346,35.281887245101956,35.28788484606157,35.29388244702119,35.29988004798081,35.305877648940424,35.31187524990004,35.31787285085966,35.323870451819275,35.32986805277889,35.3358656537385,35.34186325469812,35.347860855657736,35.35385845661735,35.35985605757697,35.36585365853659,35.371851259496204,35.37784886045582,35.38384646141543,35.38984406237505,35.395841663334664,35.40183926429428,35.4078368652539,35.413834466213515,35.41983206717313,35.42582966813275,35.431827269092366,35.437824870051976,35.44382247101159,35.44982007197121,35.45581767293083,35.461815273890444,35.46781287485006,35.47381047580968,35.479808076769295,35.485805677728905,35.49180327868852,35.49780087964814,35.503798480607756,35.50979608156737,35.51579368252699,35.52179128348661,35.527788884446224,35.53378648540584,35.53978408636545,35.54578168732507,35.551779288284685,35.5577768892443,35.56377449020392,35.569772091163536,35.57576969212315,35.58176729308277,35.58776489404238,35.593762495002,35.599760095961614,35.60575769692123,35.61175529788085,35.617752898840465,35.62375049980008,35.6297481007597,35.635745701719316,35.641743302678925,35.64774090363854,35.65373850459816,35.659736105557776,35.66573370651739,35.67173130747701,35.67772890843663,35.683726509396244,35.689724110355854,35.69572171131547,35.70171931227509,35.707716913234705,35.71371451419432,35.71971211515394,35.725709716113556,35.73170731707317,35.73770491803279,35.7437025189924,35.74970011995202,35.755697720911634,35.76169532187125,35.76769292283087,35.773690523790485,35.7796881247501,35.78568572570972,35.79168332666933,35.797680927628946,35.80367852858856,35.80967612954818,35.8156737305078,35.821671331467414,35.82766893242703,35.83366653338665,35.839664134346265,35.845661735305875,35.85165933626549,35.85765693722511,35.863654538184726,35.86965213914434,35.87564974010396,35.88164734106358,35.88764494202319,35.8936425429828,35.89964014394242,35.90563774490204,35.911635345861654,35.91763294682127,35.92363054778089,35.929628148740505,35.93562574970012,35.94162335065974,35.94762095161935,35.953618552578966,35.95961615353858,35.9656137544982,35.97161135545782,35.977608956417434,35.98360655737705,35.98960415833667,35.99560175929628,36.001599360255895,36.00759696121551,36.01359456217513,36.019592163134746,36.02558976409436,36.03158736505398,36.0375849660136,36.043582566973214,36.049580167932824,36.05557776889244,36.06157536985206,36.067572970811675,36.07357057177129,36.07956817273091,36.085565773690526,36.09156337465014,36.09756097560975,36.10355857656937,36.10955617752899,36.115553778488604,36.12155137944822,36.12754898040784,36.133546581367455,36.13954418232707,36.14554178328669,36.1515393842463,36.157536985205915,36.16353458616553,36.16953218712515,36.175529788084766,36.18152738904438,36.187524990004,36.19352259096362,36.19952019192323,36.205517792882844,36.21151539384246,36.21751299480208,36.223510595761695,36.22950819672131,36.23550579768093,36.241503398640546,36.24750099960016,36.25349860055977,36.25949620151939,36.26549380247901,36.271491403438624,36.27748900439824,36.28348660535786,36.289484206317475,36.29548180727709,36.3014794082367,36.30747700919632,36.313474610155936,36.31947221111555,36.32546981207517,36.33146741303479,36.337465013994404,36.34346261495402,36.34946021591364,36.35545781687325,36.361455417832865,36.36745301879248,36.3734506197521,36.379448220711716,36.38544582167133,36.39144342263095,36.39744102359057,36.403438624550176,36.40943622550979,36.41543382646941,36.42143142742903,36.427429028388644,36.43342662934826,36.43942423030788,36.445421831267495,36.45141943222711,36.45741703318672,36.46341463414634,36.469412235105956,36.47540983606557,36.48140743702519,36.48740503798481,36.493402638944424,36.49940023990404,36.50539784086365,36.51139544182327,36.517393042782885,36.5233906437425,36.52938824470212,36.535385845661736,36.54138344662135,36.54738104758097,36.55337864854059,36.5593762495002,36.565373850459814,36.57137145141943,36.57736905237905,36.583366653338665,36.58936425429828,36.5953618552579,36.601359456217516,36.607357057177126,36.61335465813674,36.61935225909636,36.62534986005598,36.631347461015594,36.63734506197521,36.64334266293483,36.649340263894445,36.65533786485406,36.66133546581367,36.66733306677329,36.673330667732905,36.67932826869252,36.68532586965214,36.691323470611756,36.69732107157137,36.70331867253099,36.7093162734906,36.71531387445022,36.721311475409834,36.72730907636945,36.73330667732907,36.739304278288685,36.7453018792483,36.75129948020792,36.757297081167536,36.763294682127146,36.76929228308676,36.77528988404638,36.781287485006,36.787285085965614,36.79328268692523,36.79928028788485,36.805277888844465,36.811275489804075,36.81727309076369,36.82327069172331,36.829268292682926,36.83526589364254,36.84126349460216,36.84726109556178,36.853258696521394,36.85925629748101,36.86525389844062,36.87125149940024,36.877249100359855,36.88324670131947,36.88924430227909,36.895241903238706,36.90123950419832,36.90723710515794,36.91323470611756,36.919232307077166,36.92522990803678,36.9312275089964,36.93722510995602,36.943222710915634,36.94922031187525,36.95521791283487,36.961215513794485,36.967213114754095,36.97321071571371,36.97920831667333,36.985205917632946,36.99120351859256,36.99720111955218,37.0031987205118,37.009196321471414,37.01519392243103,37.02119152339064,37.02718912435026,37.033186725309875,37.03918432626949,37.04518192722911,37.051179528188726,37.05717712914834,37.06317473010796,37.06917233106757,37.07516993202719,37.081167532986804,37.08716513394642,37.09316273490604,37.099160335865655,37.10515793682527,37.11115553778489,37.117153138744506,37.123150739704116,37.12914834066373,37.13514594162335,37.14114354258297,37.147141143542584,37.1531387445022,37.15913634546182,37.165133946421435,37.171131547381044,37.17712914834066,37.18312674930028,37.189124350259895,37.19512195121951,37.20111955217913,37.207117153138746,37.21311475409836,37.21911235505798,37.22510995601759,37.23110755697721,37.237105157936824,37.24310275889644,37.24910035985606,37.255097960815675,37.26109556177529,37.26709316273491,37.27309076369452,37.279088364654136,37.28508596561375,37.29108356657337,37.29708116753299,37.303078768492604,37.30907636945222,37.31507397041184,37.321071571371455,37.327069172331065,37.33306677329068,37.3390643742503,37.345061975209916,37.35105957616953,37.35705717712915,37.36305477808877,37.369052379048384,37.375049980007994,37.38104758096761,37.38704518192723,37.393042782886845,37.39904038384646,37.40503798480608,37.411035585765696,37.41703318672531,37.42303078768493,37.42902838864454,37.435025989604156,37.44102359056377,37.44702119152339,37.45301879248301,37.459016393442624,37.46501399440224,37.47101159536186,37.47700919632147,37.483006797281085,37.4890043982407,37.49500199920032,37.500999600159936,37.50699720111955,37.51299480207917,37.51899240303879,37.524990003998404,37.530987604958014,37.53698520591763,37.54298280687725,37.548980407836865,37.55497800879648,37.5609756097561,37.566973210715716,37.57297081167533,37.57896841263494,37.58496601359456,37.59096361455418,37.596961215513794,37.60295881647341,37.60895641743303,37.614954018392645,37.62095161935226,37.62694922031188,37.63294682127149,37.638944422231106,37.64494202319072,37.65093962415034,37.65693722510996,37.66293482606957,37.66893242702919,37.67493002798881,37.68092762894842,37.686925229908034,37.69292283086765,37.69892043182727,37.704918032786885,37.7109156337465,37.71691323470612,37.722910835665736,37.72890843662535,37.73490603758496,37.74090363854458,37.7469012395042,37.752898840463814,37.75889644142343,37.76489404238305,37.770891643342665,37.77688924430228,37.78288684526189,37.78888444622151,37.794882047181126,37.80087964814074,37.80687724910036,37.81287485005998,37.818872451019594,37.82487005197921,37.83086765293883,37.83686525389844,37.842862854858055,37.84886045581767,37.85485805677729,37.860855657736906,37.86685325869652,37.87285085965614,37.87884846061576,37.88484606157537,37.890843662534984,37.8968412634946,37.90283886445422,37.908836465413835,37.91483406637345,37.92083166733307,37.926829268292686,37.9328268692523,37.93882447021191,37.94482207117153,37.950819672131146,37.95681727309076,37.96281487405038,37.96881247501,37.974810075969614,37.98080767692923,37.98680527788884,37.99280287884846,37.998800479808075,38.00479808076769,38.01079568172731,38.016793282686926,38.02279088364654,38.02878848460616,38.03478608556578,38.04078368652539,38.046781287485004,38.05277888844462,38.05877648940424,38.064774090363855,38.07077169132347,38.07676929228309,38.082766893242706,38.088764494202316,38.09476209516193,38.10075969612155,38.10675729708117,38.112754898040784,38.1187524990004,38.12475009996002,38.130747700919635,38.13674530187925,38.14274290283886,38.14874050379848,38.154738104758096,38.16073570571771,38.16673330667733,38.17273090763695,38.17872850859656,38.18472610955618,38.19072371051579,38.19672131147541,38.202718912435024,38.20871651339464,38.21471411435426,38.220711715313875,38.22670931627349,38.23270691723311,38.238704518192726,38.244702119152336,38.25069972011195,38.25669732107157,38.26269492203119,38.268692522990804,38.27469012395042,38.28068772491004,38.286685325869655,38.292682926829265,38.29868052778888,38.3046781287485,38.310675729708116,38.31667333066773,38.32267093162735,38.32866853258697,38.334666133546584,38.3406637345062,38.34666133546581,38.35265893642543,38.358656537385045,38.36465413834466,38.37065173930428,38.376649340263896,38.38264694122351,38.38864454218313,38.39464214314274,38.40063974410236,38.406637345061974,38.41263494602159,38.41863254698121,38.424630147940825,38.43062774890044,38.43662534986006,38.442622950819676,38.448620551779285,38.4546181527389,38.46061575369852,38.466613354658136,38.47261095561775,38.47860855657737,38.48460615753699,38.490603758496604,38.496601359456214,38.50259896041583,38.50859656137545,38.514594162335065,38.52059176329468,38.5265893642543,38.532586965213916,38.53858456617353,38.54458216713315,38.55057976809276,38.55657736905238,38.562574970011994,38.56857257097161,38.57457017193123,38.580567772890845,38.58656537385046,38.59256297481008,38.59856057576969,38.604558176729306,38.61055577768892,38.61655337864854,38.62255097960816,38.628548580567774,38.63454618152739,38.64054378248701,38.646541383446625,38.652538984406235,38.65853658536585,38.66453418632547,38.670531787285086,38.6765293882447,38.68252698920432,38.68852459016394,38.69452219112355,38.70051979208316,38.70651739304278,38.7125149940024,38.718512594962014,38.72451019592163,38.73050779688125,38.736505397840865,38.74250299880048,38.7485005997601,38.75449820071971,38.760495801679326,38.76649340263894,38.77249100359856,38.77848860455818,38.784486205517794,38.79048380647741,38.79648140743703,38.80247900839664,38.808476609356255,38.81447421031587,38.82047181127549,38.826469412235106,38.83246701319472,38.83846461415434,38.84446221511396,38.850459816073574,38.856457417033184,38.8624550179928,38.86845261895242,38.874450219912035,38.88044782087165,38.88644542183127,38.892443022790886,38.8984406237505,38.90443822471011,38.91043582566973,38.91643342662935,38.922431027588964,38.92842862854858,38.9344262295082,38.940423830467815,38.94642143142743,38.95241903238705,38.95841663334666,38.964414234306275,38.97041183526589,38.97640943622551,38.982407037185126,38.98840463814474,38.99440223910436,39.00039984006398,39.00639744102359,39.012395041983204,39.01839264294282,39.02439024390244,39.030387844862055,39.03638544582167,39.04238304678129,39.048380647740906,39.05437824870052,39.06037584966013,39.06637345061975,39.07237105157937,39.078368652538984,39.0843662534986,39.09036385445822,39.096361455417835,39.10235905637745,39.10835665733706,39.11435425829668,39.120351859256296,39.12634946021591,39.13234706117553,39.13834466213515,39.144342263094764,39.15033986405438,39.156337465014,39.16233506597361,39.168332666933225,39.17433026789284,39.18032786885246,39.186325469812076,39.19232307077169,39.19832067173131,39.20431827269093,39.210315873650536,39.21631347461015,39.22231107556977,39.22830867652939,39.234306277489004,39.24030387844862,39.24630147940824,39.252299080367855,39.25829668132747,39.26429428228708,39.2702918832467,39.276289484206316,39.28228708516593,39.28828468612555,39.29428228708517,39.300279888044784,39.3062774890044,39.31227508996401,39.31827269092363,39.324270291883245,39.33026789284286,39.33626549380248,39.342263094762096,39.34826069572171,39.35425829668133,39.36025589764095,39.36625349860056,39.372251099560174,39.37824870051979,39.38424630147941,39.390243902439025,39.39624150339864,39.40223910435826,39.408236705317876,39.414234306277486,39.4202319072371,39.42622950819672,39.43222710915634,39.43822471011595,39.44422231107557,39.45021991203519,39.456217512994805,39.46221511395442,39.46821271491403,39.47421031587365,39.480207916833265,39.48620551779288,39.4922031187525,39.498200719712116,39.50419832067173,39.51019592163135,39.51619352259096,39.52219112355058,39.528188724510194,39.53418632546981,39.54018392642943,39.546181527389045,39.55217912834866,39.55817672930828,39.564174330267896,39.570171931227506,39.57616953218712,39.58216713314674,39.58816473410636,39.594162335065974,39.60015993602559,39.60615753698521,39.612155137944825,39.618152738904435,39.62415033986405,39.63014794082367,39.636145541783286,39.6421431427429,39.64814074370252,39.65413834466214,39.660135945621754,39.66613354658137,39.67213114754098,39.6781287485006,39.684126349460215,39.69012395041983,39.69612155137945,39.702119152339066,39.70811675329868,39.7141143542583,39.72011195521791,39.726109556177526,39.73210715713714,39.73810475809676,39.74410235905638,39.750099960015994,39.75609756097561,39.76209516193523,39.768092762894845,39.774090363854455,39.78008796481407,39.78608556577369,39.792083166733306,39.79808076769292,39.80407836865254,39.81007596961216,39.816073570571774,39.822071171531384,39.828068772491,39.83406637345062,39.840063974410235,39.84606157536985,39.85205917632947,39.858056777289086,39.8640543782487,39.87005197920832,39.87604958016793,39.88204718112755,39.888044782087164,39.89404238304678,39.9000399840064,39.906037584966015,39.91203518592563,39.91803278688525,39.92403038784486,39.930027988804476,39.93602558976409,39.94202319072371,39.94802079168333,39.95401839264294,39.96001599360256,39.96601359456218,39.972011195521794,39.978008796481404,39.98400639744102,39.99000399840064,39.996001599360255,40.00199920031987,40.00799680127949,40.013994402239106,40.01999200319872,40.02598960415833,40.03198720511795,40.03798480607757,40.043982407037184,40.0499800079968,40.05597760895642,40.061975209916035,40.06797281087565,40.07397041183527,40.07996801279488,40.085965613754496,40.09196321471411,40.09796081567373,40.10395841663335,40.109956017592964,40.11595361855258,40.1219512195122,40.12794882047181,40.133946421431425,40.13994402239104,40.14594162335066,40.151939224310276,40.15793682526989,40.16393442622951,40.16993202718913,40.175929628148744,40.181927229108354,40.18792483006797,40.19392243102759,40.199920031987205,40.20591763294682,40.21191523390644,40.217912834866056,40.22391043582567,40.22990803678528,40.2359056377449,40.241903238704516,40.24790083966413,40.25389844062375,40.25989604158337,40.265893642542984,40.2718912435026,40.27788884446222,40.28388644542183,40.289884046381445,40.29588164734106,40.30187924830068,40.307876849260296,40.31387445021991,40.31987205117953,40.32586965213915,40.33186725309876,40.337864854058374,40.34386245501799,40.34986005597761,40.355857656937225,40.36185525789684,40.36785285885646,40.373850459816076,40.37984806077569,40.3858456617353,40.39184326269492,40.39784086365454,40.403838464614154,40.40983606557377,40.41583366653339,40.421831267493005,40.42782886845262,40.43382646941223,40.43982407037185,40.445821671331466,40.45181927229108,40.4578168732507,40.46381447421032,40.46981207516993,40.47580967612955,40.48180727708917,40.48780487804878,40.493802479008394,40.49980007996801,40.50579768092763,40.511795281887245,40.51779288284686,40.52379048380648,40.529788084766096,40.535785685725706,40.54178328668532,40.54778088764494,40.55377848860456,40.559776089564174,40.56577369052379,40.57177129148341,40.577768892443025,40.58376649340264,40.58976409436225,40.59576169532187,40.601759296281486,40.6077568972411,40.61375449820072,40.61975209916034,40.625749700119954,40.63174730107957,40.63774490203919,40.6437425029988,40.649740103958415,40.65573770491803,40.66173530587765,40.667732906837266,40.67373050779688,40.6797281087565,40.68572570971612,40.69172331067573,40.697720911635344,40.70371851259496,40.70971611355458,40.715713714514195,40.72171131547381,40.72770891643343,40.733706517393045,40.73970411835266,40.74570171931227,40.75169932027189,40.757696921231506,40.76369452219112,40.76969212315074,40.77568972411036,40.781687325069974,40.78768492602959,40.7936825269892,40.79968012794882,40.805677728908435,40.81167532986805,40.81767293082767,40.823670531787286,40.8296681327469,40.83566573370652,40.84166333466614,40.84766093562575,40.853658536585364,40.85965613754498,40.8656537385046,40.871651339464215,40.87764894042383,40.88364654138345,40.889644142343066,40.895641743302676,40.90163934426229,40.90763694522191,40.91363454618153,40.919632147141144,40.92562974810076,40.93162734906038,40.937624950019995,40.94362255097961,40.94962015193922,40.95561775289884,40.961615353858456,40.96761295481807,40.97361055577769,40.97960815673731,40.98560575769692,40.99160335865654,40.99760095961615,41.00359856057577,41.009596161535384,41.015593762495,41.02159136345462,41.027588964414235,41.03358656537385,41.03958416633347,41.045581767293086,41.051579368252696,41.05757696921231,41.06357457017193,41.06957217113155,41.075569772091164,41.08156737305078,41.0875649740104,41.093562574970015,41.099560175929625,41.10555777688924,41.11155537784886,41.117552978808476,41.12355057976809,41.12954818072771,41.13554578168733,41.141543382646944,41.14754098360656,41.15353858456617,41.15953618552579,41.165533786485405,41.17153138744502,41.17752898840464,41.183526589364256,41.18952419032387,41.19552179128349,41.2015193922431,41.20751699320272,41.21351459416233,41.21951219512195,41.22550979608157,41.231507397041185,41.2375049980008,41.24350259896042,41.249500199920035,41.255497800879645,41.26149540183926,41.26749300279888,41.273490603758496,41.27948820471811,41.28548580567773,41.29148340663735,41.297481007596964,41.303478608556574,41.30947620951619,41.31547381047581,41.321471411435425,41.32746901239504,41.33346661335466,41.339464214314276,41.34546181527389,41.35145941623351,41.35745701719312,41.36345461815274,41.369452219112354,41.37544982007197,41.38144742103159,41.387445021991205,41.39344262295082,41.39944022391044,41.40543782487005,41.411435425829666,41.41743302678928,41.4234306277489,41.42942822870852,41.435425829668134,41.44142343062775,41.44742103158737,41.453418632546985,41.459416233506595,41.46541383446621,41.47141143542583,41.477409036385446,41.48340663734506,41.48940423830468,41.4954018392643,41.50139944022391,41.50739704118352,41.51339464214314,41.51939224310276,41.525389844062374,41.53138744502199,41.53738504598161,41.543382646941225,41.54938024790084,41.55537784886046,41.56137544982007,41.567373050779686,41.5733706517393,41.57936825269892,41.58536585365854,41.591363454618154,41.59736105557777,41.60335865653739,41.609356257497,41.615353858456615,41.62135145941623,41.62734906037585,41.633346661335466,41.63934426229508,41.6453418632547,41.65133946421432,41.657337065173934,41.663334666133544,41.66933226709316,41.67532986805278,41.681327469012395,41.68732506997201,41.69332267093163,41.699320271891246,41.70531787285086,41.71131547381047,41.71731307477009,41.72331067572971,41.72930827668932,41.73530587764894,41.74130347860856,41.747301079568174,41.75329868052779,41.75929628148741,41.76529388244702,41.771291483406635,41.77728908436625,41.78328668532587,41.789284286285486,41.7952818872451,41.80127948820472,41.80727708916434,41.81327469012395,41.819272291083564,41.82526989204318,41.8312674930028,41.837265093962415,41.84326269492203,41.84926029588165,41.855257896841266,41.86125549780088,41.86725309876049,41.87325069972011,41.87924830067973,41.885245901639344,41.89124350259896,41.89724110355858,41.903238704518195,41.90923630547781,41.91523390643742,41.92123150739704,41.927229108356656,41.93322670931627,41.93922431027589,41.94522191123551,41.951219512195124,41.95721711315474,41.96321471411436,41.96921231507397,41.975209916033585,41.9812075169932,41.98720511795282,41.993202718912436,41.99920031987205,42.00519792083167,42.01119552179129,42.017193122750896,42.02319072371051,42.02918832467013,42.03518592562975,42.041183526589364,42.04718112754898,42.0531787285086,42.059176329468215,42.06517393042783,42.07117153138744,42.07716913234706,42.083166733306676,42.08916433426629,42.09516193522591,42.10115953618553,42.107157137145144,42.11315473810476,42.11915233906437,42.12514994002399,42.131147540983605,42.13714514194322,42.14314274290284,42.149140343862456,42.15513794482207,42.16113554578169,42.16713314674131,42.17313074770092,42.179128348660534,42.18512594962015,42.19112355057977,42.197121151539385,42.203118752499,42.20911635345862,42.215113954418236,42.221111555377846,42.22710915633746,42.23310675729708,42.2391043582567,42.24510195921631,42.25109956017593,42.25709716113555,42.263094762095164,42.26909236305478,42.27508996401439,42.28108756497401,42.287085165933625,42.29308276689324,42.29908036785286,42.305077968812476,42.31107556977209,42.31707317073171,42.32307077169132,42.32906837265094,42.335065973610554,42.34106357457017,42.34706117552979,42.353058776489405,42.35905637744902,42.36505397840864,42.371051579368256,42.377049180327866,42.38304678128748,42.3890443822471,42.39504198320672,42.401039584166334,42.40703718512595,42.41303478608557,42.419032387045185,42.425029988004795,42.43102758896441,42.43702518992403,42.443022790883646,42.44902039184326,42.45501799280288,42.4610155937625,42.467013194722114,42.47301079568173,42.47900839664134,42.48500599760096,42.491003598560575,42.49700119952019,42.50299880047981,42.508996401439425,42.51499400239904,42.52099160335866,42.52698920431827,42.532986805277886,42.5389844062375,42.54498200719712,42.55097960815674,42.556977209116354,42.56297481007597,42.56897241103559,42.574970011995205,42.580967612954815,42.58696521391443,42.59296281487405,42.598960415833666,42.60495801679328,42.6109556177529,42.61695321871252,42.622950819672134,42.628948420631744,42.63494602159136,42.64094362255098,42.646941223510595,42.65293882447021,42.65893642542983,42.664934026389446,42.67093162734906,42.67692922830868,42.68292682926829,42.68892443022791,42.694922031187524,42.70091963214714,42.70691723310676,42.712914834066375,42.71891243502599,42.72491003598561,42.73090763694522,42.736905237904836,42.74290283886445,42.74890043982407,42.75489804078369,42.7608956417433,42.76689324270292,42.77289084366254,42.778888444622154,42.784886045581764,42.79088364654138,42.796881247501,42.802878848460615,42.80887644942023,42.81487405037985,42.820871651339466,42.82686925229908,42.83286685325869,42.83886445421831,42.84486205517793,42.850859656137544,42.85685725709716,42.86285485805678,42.868852459016395,42.87485005997601,42.88084766093563,42.88684526189524,42.892842862854856,42.89884046381447,42.90483806477409,42.91083566573371,42.916833266693324,42.92283086765294,42.92882846861256,42.93482606957217,42.940823670531785,42.9468212714914,42.95281887245102,42.958816473410636,42.96481407437025,42.97081167532987,42.97680927628949,42.982806877249104,42.98880447820871,42.99480207916833,43.00079968012795,43.006797281087564,43.01279488204718,43.0187924830068,43.024790083966415,43.03078768492603,43.03678528588564,43.04278288684526,43.048780487804876,43.05477808876449,43.06077568972411,43.06677329068373,43.072770891643344,43.07876849260296,43.08476609356258,43.09076369452219,43.096761295481805,43.10275889644142,43.10875649740104,43.114754098360656,43.12075169932027,43.12674930027989,43.13274690123951,43.13874450219912,43.144742103158734,43.15073970411835,43.15673730507797,43.162734906037585,43.1687325069972,43.17473010795682,43.180727708916436,43.18672530987605,43.19272291083566,43.19872051179528,43.2047181127549,43.210715713714514,43.21671331467413,43.22271091563375,43.228708516593365,43.23470611755298,43.24070371851259,43.24670131947221,43.252698920431826,43.25869652139144,43.26469412235106,43.27069172331068,43.27668932427029,43.28268692522991,43.28868452618953,43.29468212714914,43.300679728108754,43.30667732906837,43.31267493002799,43.318672530987605,43.32467013194722,43.33066773290684,43.336665333866456,43.342662934826066,43.34866053578568,43.3546581367453,43.36065573770492,43.366653338664534,43.37265093962415,43.37864854058377,43.384646141543385,43.390643742503,43.39664134346261,43.40263894442223,43.408636545381846,43.41463414634146,43.42063174730108,43.4266293482607,43.432626949220314,43.43862455017993,43.44462215113954,43.45061975209916,43.456617353058775,43.46261495401839,43.46861255497801,43.474610155937626,43.48060775689724,43.48660535785686,43.49260295881648,43.49860055977609,43.5045981607357,43.51059576169532,43.51659336265494,43.522590963614554,43.52858856457417,43.53458616553379,43.540583766493405,43.546581367453015,43.55257896841263,43.55857656937225,43.564574170331866,43.57057177129148,43.5765693722511,43.58256697321072,43.588564574170334,43.59456217512995,43.60055977608956,43.60655737704918,43.612554978008795,43.61855257896841,43.62455017992803,43.630547780887646,43.63654538184726,43.64254298280688,43.64854058376649,43.65453818472611,43.660535785685724,43.66653338664534,43.67253098760496,43.678528588564575,43.68452618952419,43.69052379048381,43.696521391443426,43.702518992403036,43.70851659336265,43.71451419432227,43.72051179528189,43.726509396241504,43.73250699720112,43.73850459816074,43.744502199120355,43.750499800079965,43.75649740103958,43.7624950019992,43.768492602958815,43.77449020391843,43.78048780487805,43.78648540583767,43.79248300679728,43.7984806077569,43.80447820871651,43.81047580967613,43.816473410635744,43.82247101159536,43.82846861255498,43.834466213514595,43.84046381447421,43.84646141543383,43.85245901639344,43.858456617353056,43.86445421831267,43.87045181927229,43.87644942023191,43.882447021191524,43.88844462215114,43.89444222311076,43.900439824070375,43.906437425029985,43.9124350259896,43.91843262694922,43.924430227908836,43.93042782886845,43.93642542982807,43.94242303078769,43.948420631747304,43.954418232706914,43.96041583366653,43.96641343462615,43.972411035585765,43.97840863654538,43.984406237505,43.990403838464616,43.99640143942423,44.00239904038385,44.00839664134346,44.01439424230308,44.02039184326269,44.02638944422231,44.03238704518193,44.038384646141544,44.04438224710116,44.05037984806078,44.05637744902039,44.062375049980005,44.06837265093962,44.07437025189924,44.080367852858856,44.08636545381847,44.09236305477809,44.09836065573771,44.104358256697324,44.110355857656934,44.11635345861655,44.12235105957617,44.128348660535785,44.1343462614954,44.14034386245502,44.146341463414636,44.15233906437425,44.15833666533386,44.16433426629348,44.1703318672531,44.176329468212714,44.18232706917233,44.18832467013195,44.194322271091565,44.20031987205118,44.2063174730108,44.21231507397041,44.218312674930026,44.22431027588964,44.23030787684926,44.23630547780888,44.242303078768494,44.24830067972811,44.25429828068773,44.26029588164734,44.266293482606955,44.27229108356657,44.27828868452619,44.284286285485805,44.29028388644542,44.29628148740504,44.302279088364656,44.30827668932427,44.31427429028388,44.3202718912435,44.32626949220312,44.332267093162734,44.33826469412235,44.34426229508197,44.350259896041585,44.3562574970012,44.36225509796081,44.36825269892043,44.374250299880046,44.38024790083966,44.38624550179928,44.3922431027589,44.398240703718514,44.40423830467813,44.41023590563775,44.41623350659736,44.422231107556975,44.42822870851659,44.43422630947621,44.440223910435826,44.44622151139544,44.45221911235506,44.45821671331468,44.464214314274294,44.470211915233904,44.47620951619352,44.48220711715314,44.488204718112755,44.49420231907237,44.50019992003199,44.506197520991606,44.51219512195122,44.51819272291083,44.52419032387045,44.53018792483007,44.53618552578968,44.5421831267493,44.54818072770892,44.554178328668534,44.56017592962815,44.56617353058777,44.57217113154738,44.578168732506995,44.58416633346661,44.59016393442623,44.596161535385846,44.60215913634546,44.60815673730508,44.6141543382647,44.62015193922431,44.626149540183924,44.63214714114354,44.63814474210316,44.644142343062775,44.65013994402239,44.65613754498201,44.662135145941626,44.66813274690124,44.67413034786085,44.68012794882047,44.68612554978009,44.692123150739704,44.69812075169932,44.70411835265894,44.710115953618555,44.71611355457817,44.72211115553778,44.7281087564974,44.734106357457016,44.74010395841663,44.74610155937625,44.75209916033587,44.758096761295484,44.7640943622551,44.77009196321472,44.77608956417433,44.782087165133944,44.78808476609356,44.79408236705318,44.800079968012795,44.80607756897241,44.81207516993203,44.818072770891646,44.824070371851256,44.83006797281087,44.83606557377049,44.84206317473011,44.848060775689724,44.85405837664934,44.86005597760896,44.866053578568575,44.87205117952819,44.8780487804878,44.88404638144742,44.890043982407036,44.89604158336665,44.90203918432627,44.90803678528589,44.914034386245504,44.92003198720512,44.92602958816473,44.93202718912435,44.938024790083965,44.94402239104358,44.9500199920032,44.956017592962816,44.96201519392243,44.96801279488205,44.97401039584167,44.98000799680128,44.986005597760894,44.99200319872051,44.99800079968013,45.003998400639745,45.00999600159936,45.01599360255898,45.021991203518596,45.027988804478206,45.03398640543782,45.03998400639744,45.04598160735706,45.05197920831667,45.05797680927629,45.06397441023591,45.069972011195524,45.07596961215514,45.08196721311475,45.08796481407437,45.093962415033985,45.0999600159936,45.10595761695322,45.111955217912836,45.11795281887245,45.12395041983207,45.12994802079168,45.1359456217513,45.141943222710914,45.14794082367053,45.15393842463015,45.159936025589765,45.16593362654938,45.171931227509,45.177928828468616,45.183926429428226,45.18992403038784,45.19592163134746,45.20191923230708,45.207916833266694,45.21391443422631,45.21991203518593,45.225909636145545,45.231907237105155,45.23790483806477,45.24390243902439,45.249900039984006,45.25589764094362,45.26189524190324,45.26789284286286,45.273890443822474,45.27988804478209,45.2858856457417,45.29188324670132,45.297880847660934,45.30387844862055,45.30987604958017,45.315873650539785,45.3218712514994,45.32786885245902,45.33386645341863,45.339864054378246,45.34586165533786,45.35185925629748,45.3578568572571,45.363854458216714,45.36985205917633,45.37584966013595,45.381847261095565,45.387844862055175,45.39384246301479,45.39984006397441,45.405837664934026,45.41183526589364,45.41783286685326,45.42383046781288,45.429828068772494,45.435825669732104,45.44182327069172,45.44782087165134,45.453818472610955,45.45981607357057,45.46581367453019,45.471811275489806,45.47780887644942,45.48380647740904,45.48980407836865,45.49580167932827,45.501799280287884,45.5077968812475,45.51379448220712,45.519792083166735,45.52578968412635,45.53178728508597,45.53778488604558,45.543782487005195,45.54978008796481,45.55577768892443,45.56177528988405,45.56777289084366,45.57377049180328,45.5797680927629,45.585765693722514,45.591763294682124,45.59776089564174,45.60375849660136,45.609756097560975,45.61575369852059,45.62175129948021,45.627748900439826,45.63374650139944,45.63974410235905,45.64574170331867,45.65173930427829,45.657736905237904,45.66373450619752,45.66973210715714,45.675729708116755,45.68172730907637,45.68772491003599,45.6937225109956,45.699720111955216,45.70571771291483,45.71171531387445,45.71771291483407,45.723710515793684,45.7297081167533,45.73570571771292,45.74170331867253,45.747700919632145,45.75369852059176,45.75969612155138,45.765693722510996,45.77169132347061,45.77768892443023,45.78368652538985,45.789684126349464,45.79568172730907,45.80167932826869,45.80767692922831,45.813674530187924,45.81967213114754,45.82566973210716,45.831667333066775,45.83766493402639,45.843662534986,45.84966013594562,45.855657736905236,45.86165533786485,45.86765293882447,45.87365053978409,45.879648140743704,45.88564574170332,45.89164334266294,45.89764094362255,45.903638544582165,45.90963614554178,45.9156337465014,45.921631347461016,45.92762894842063,45.93362654938025,45.93962415033987,45.94562175129948,45.951619352259094,45.95761695321871,45.96361455417833,45.969612155137945,45.97560975609756,45.98160735705718,45.987604958016796,45.99360255897641,45.99960015993602,46.00559776089564,46.01159536185526,46.017592962814874,46.02359056377449,46.02958816473411,46.035585765693725,46.04158336665334,46.04758096761295,46.05357856857257,46.059576169532185,46.0655737704918,46.07157137145142,46.077568972411036,46.08356657337065,46.08956417433027,46.09556177528989,46.1015593762495,46.107556977209114,46.11355457816873,46.11955217912835,46.125549780087965,46.13154738104758,46.1375449820072,46.143542582966816,46.149540183926426,46.15553778488604,46.16153538584566,46.16753298680528,46.173530587764894,46.17952818872451,46.18552578968413,46.191523390643745,46.19752099160336,46.20351859256297,46.20951619352259,46.215513794482206,46.22151139544182,46.22750899640144,46.23350659736106,46.239504198320674,46.24550179928029,46.2514994002399,46.25749700119952,46.263494602159135,46.26949220311875,46.27548980407837,46.281487405037986,46.2874850059976,46.29348260695722,46.29948020791684,46.30547780887645,46.31147540983606,46.31747301079568,46.3234706117553,46.329468212714914,46.33546581367453,46.34146341463415,46.347461015593765,46.353458616553375,46.35945621751299,46.36545381847261,46.371451419432226,46.37744902039184,46.38344662135146,46.38944422231108,46.395441823270694,46.40143942423031,46.40743702518992,46.41343462614954,46.419432227109155,46.42542982806877,46.43142742902839,46.437425029988006,46.44342263094762,46.44942023190724,46.45541783286685,46.46141543382647,46.467413034786084,46.4734106357457,46.47940823670532,46.485405837664935,46.49140343862455,46.49740103958417,46.503398640543786,46.509396241503396,46.51539384246301,46.52139144342263,46.52738904438225,46.533386645341864,46.53938424630148,46.5453818472611,46.551379448220715,46.557377049180324,46.56337465013994,46.56937225109956,46.575369852059175,46.58136745301879,46.58736505397841,46.593362654938026,46.59936025589764,46.60535785685726,46.61135545781687,46.61735305877649,46.623350659736104,46.62934826069572,46.63534586165534,46.641343462614955,46.64734106357457,46.65333866453419,46.6593362654938,46.665333866453416,46.67133146741303,46.67732906837265,46.68332666933227,46.689324270291884,46.6953218712515,46.70131947221112,46.707317073170735,46.713314674130345,46.71931227508996,46.72530987604958,46.731307477009196,46.73730507796881,46.74330267892843,46.74930027988805,46.755297880847664,46.761295481807274,46.76729308276689,46.77329068372651,46.779288284686125,46.78528588564574,46.79128348660536,46.797281087564976,46.80327868852459,46.80927628948421,46.81527389044382,46.82127149140344,46.82726909236305,46.83326669332267,46.83926429428229,46.845261895241904,46.85125949620152,46.85725709716114,46.86325469812075,46.869252299080365,46.87524990003998,46.8812475009996,46.887245101959216,46.89324270291883,46.89924030387845,46.90523790483807,46.911235505797684,46.917233106757294,46.92323070771691,46.92922830867653,46.935225909636145,46.94122351059576,46.94722111155538,46.953218712514996,46.95921631347461,46.96521391443422,46.97121151539384,46.97720911635346,46.983206717313074,46.98920431827269,46.99520191923231,47.001199520191925,47.00719712115154,47.01319472211116,47.01919232307077,47.025189924030386,47.03118752499,47.03718512594962,47.04318272690924,47.049180327868854,47.05517792882847,47.06117552978809,47.0671731307477,47.073170731707314,47.07916833266693,47.08516593362655,47.091163534586165,47.09716113554578,47.1031587365054,47.109156337465016,47.11515393842463,47.12115153938424,47.12714914034386,47.13314674130348,47.139144342263094,47.14514194322271,47.15113954418233,47.157137145141945,47.16313474610156,47.16913234706117,47.17512994802079,47.181127548980406,47.18712514994002,47.19312275089964,47.19912035185926,47.205117952818874,47.21111555377849,47.21711315473811,47.22311075569772,47.229108356657335,47.23510595761695,47.24110355857657,47.247101159536186,47.2530987604958,47.25909636145542,47.26509396241504,47.27109156337465,47.277089164334264,47.28308676529388,47.2890843662535,47.295081967213115,47.30107956817273,47.30707716913235,47.313074770091966,47.31907237105158,47.32506997201119,47.33106757297081,47.33706517393043,47.34306277489004,47.34906037584966,47.35505797680928,47.361055577768894,47.36705317872851,47.37305077968812,47.37904838064774,47.385045981607355,47.39104358256697,47.39704118352659,47.403038784486206,47.40903638544582,47.41503398640544,47.42103158736506,47.42702918832467,47.433026789284284,47.4390243902439,47.44502199120352,47.451019592163135,47.45701719312275,47.46301479408237,47.469012395041986,47.475009996001596,47.48100759696121,47.48700519792083,47.49300279888045,47.499000399840064,47.50499800079968,47.5109956017593,47.516993202718915,47.52299080367853,47.52898840463814,47.53498600559776,47.540983606557376,47.54698120751699,47.55297880847661,47.55897640943623,47.564974010395844,47.57097161135546,47.57696921231507,47.58296681327469,47.588964414234304,47.59496201519392,47.60095961615354,47.606957217113155,47.61295481807277,47.61895241903239,47.624950019992006,47.630947620951616,47.63694522191123,47.64294282287085,47.64894042383047,47.654938024790084,47.6609356257497,47.66693322670932,47.672930827668935,47.678928428628545,47.68492602958816,47.69092363054778,47.696921231507396,47.70291883246701,47.70891643342663,47.71491403438625,47.720911635345864,47.72690923630548,47.73290683726509,47.73890443822471,47.744902039184325,47.75089964014394,47.75689724110356,47.762894842063176,47.76889244302279,47.77489004398241,47.78088764494202,47.78688524590164,47.792882846861254,47.79888044782087,47.80487804878049,47.810875649740105,47.81687325069972,47.82287085165934,47.828868452618956,47.834866053578565,47.84086365453818,47.8468612554978,47.852858856457416,47.85885645741703,47.86485405837665,47.87085165933627,47.876849260295884,47.882846861255494,47.88884446221511,47.89484206317473,47.900839664134345,47.90683726509396,47.91283486605358,47.918832467013196,47.92483006797281,47.93082766893243,47.93682526989204,47.94282287085166,47.948820471811274,47.95481807277089,47.96081567373051,47.966813274690125,47.97281087564974,47.97880847660936,47.98480607756897,47.990803678528586,47.9968012794882,48.00279888044782,48.00879648140744,48.014794082367054,48.02079168332667,48.02678928428629,48.032786885245905,48.038784486205515,48.04478208716513,48.05077968812475,48.056777289084366,48.06277489004398,48.0687724910036,48.07477009196322,48.080767692922834,48.08676529388244,48.09276289484206,48.09876049580168,48.104758096761294,48.11075569772091,48.11675329868053,48.122750899640145,48.12874850059976,48.13474610155938,48.14074370251899,48.146741303478606,48.15273890443822,48.15873650539784,48.16473410635746,48.170731707317074,48.17672930827669,48.18272690923631,48.188724510195925,48.194722111155535,48.20071971211515,48.20671731307477,48.212714914034386,48.218712514994,48.22471011595362,48.23070771691324,48.236705317872854,48.242702918832464,48.24870051979208,48.2546981207517,48.260695721711315,48.26669332267093,48.27269092363055,48.278688524590166,48.28468612554978,48.2906837265094,48.29668132746901,48.30267892842863,48.308676529388244,48.31467413034786,48.32067173130748,48.326669332267095,48.33266693322671,48.33866453418633,48.34466213514594,48.350659736105555,48.35665733706517,48.36265493802479,48.368652538984406,48.37465013994402,48.38064774090364,48.38664534186326,48.392642942822874,48.398640543782484,48.4046381447421,48.41063574570172,48.416633346661335,48.42263094762095,48.42862854858057,48.434626149540186,48.4406237504998,48.44662135145941,48.45261895241903,48.45861655337865,48.464614154338264,48.47061175529788,48.4766093562575,48.482606957217115,48.48860455817673,48.49460215913635,48.50059976009596,48.506597361055576,48.51259496201519,48.51859256297481,48.52459016393443,48.530587764894044,48.53658536585366,48.54258296681328,48.54858056777289,48.554578168732505,48.56057576969212,48.56657337065174,48.572570971611356,48.57856857257097,48.58456617353059,48.59056377449021,48.596561375449824,48.60255897640943,48.60855657736905,48.61455417832867,48.620551779288284,48.6265493802479,48.63254698120752,48.638544582167135,48.64454218312675,48.65053978408636,48.65653738504598,48.662534986005596,48.66853258696521,48.67453018792483,48.68052778888445,48.686525389844064,48.69252299080368,48.6985205917633,48.70451819272291,48.710515793682525,48.71651339464214,48.72251099560176,48.728508596561376,48.73450619752099,48.74050379848061,48.74650139944023,48.75249900039984,48.758496601359454,48.76449420231907,48.77049180327869,48.776489404238305,48.78248700519792,48.78848460615754,48.794482207117156,48.80047980807677,48.80647740903638,48.812475009996,48.81847261095562,48.824470211915234,48.83046781287485,48.83646541383447,48.842463014794085,48.8484606157537,48.85445821671331,48.86045581767293,48.866453418632545,48.87245101959216,48.87844862055178,48.884446221511396,48.89044382247101,48.89644142343063,48.90243902439025,48.90843662534986,48.914434226309474,48.92043182726909,48.92642942822871,48.932427029188325,48.93842463014794,48.94442223110756,48.950419832067176,48.956417433026786,48.9624150339864,48.96841263494602,48.97441023590564,48.980407836865254,48.98640543782487,48.99240303878449,48.998400639744105,49.00439824070372,49.01039584166333,49.01639344262295,49.022391043582566,49.02838864454218,49.0343862455018,49.04038384646142,49.046381447421034,49.05237904838065,49.05837664934026,49.06437425029988,49.070371851259495,49.07636945221911,49.08236705317873,49.088364654138346,49.09436225509796,49.10035985605758,49.1063574570172,49.11235505797681,49.11835265893642,49.12435025989604,49.13034786085566,49.136345461815274,49.14234306277489,49.14834066373451,49.154338264694125,49.160335865653735,49.16633346661335,49.17233106757297,49.178328668532586,49.1843262694922,49.19032387045182,49.19632147141144,49.202319072371054,49.20831667333067,49.21431427429028,49.2203118752499,49.226309476209515,49.23230707716913,49.23830467812875,49.244302279088366,49.25029988004798,49.2562974810076,49.26229508196721,49.26829268292683,49.274290283886444,49.28028788484606,49.28628548580568,49.292283086765295,49.29828068772491,49.30427828868453,49.310275889644146,49.316273490603756,49.32227109156337,49.32826869252299,49.33426629348261,49.340263894442224,49.34626149540184,49.35225909636146,49.358256697321075,49.364254298280684,49.3702518992403,49.37624950019992,49.382247101159535,49.38824470211915,49.39424230307877,49.400239904038386,49.406237504998,49.41223510595762,49.41823270691723,49.42423030787685,49.430227908836464,49.43622550979608,49.4422231107557,49.448220711715315,49.45421831267493,49.46021591363455,49.46621351459416,49.472211115553776,49.47820871651339,49.48420631747301,49.49020391843263,49.496201519392244,49.50219912035186,49.50819672131148,49.514194322271095,49.520191923230705,49.52618952419032,49.53218712514994,49.538184726109556,49.54418232706917,49.55017992802879,49.55617752898841,49.562175129948024,49.568172730907634,49.57417033186725,49.58016793282687,49.586165533786485,49.5921631347461,49.59816073570572,49.604158336665336,49.61015593762495,49.61615353858457,49.62215113954418,49.628148740503796,49.63414634146341,49.64014394242303,49.64614154338265,49.652139144342264,49.65813674530188,49.6641343462615,49.67013194722111,49.676129548180725,49.68212714914034,49.68812475009996,49.694122351059576,49.70011995201919,49.70611755297881,49.71211515393843,49.718112754898044,49.724110355857654,49.73010795681727,49.73610555777689,49.742103158736505,49.74810075969612,49.75409836065574,49.760095961615356,49.76609356257497,49.77209116353458,49.7780887644942,49.78408636545382,49.790083966413434,49.79608156737305,49.80207916833267,49.808076769292285,49.8140743702519,49.82007197121152,49.82606957217113,49.832067173130746,49.83806477409036,49.84406237504998,49.8500599760096,49.856057576969214,49.86205517792883,49.86805277888845,49.87405037984806,49.880047980807674,49.88604558176729,49.89204318272691,49.898040783686525,49.90403838464614,49.91003598560576,49.916033586565376,49.92203118752499,49.9280287884846,49.93402638944422,49.94002399040384,49.946021591363454,49.95201919232307,49.95801679328269,49.964014394242305,49.97001199520192,49.97600959616153,49.98200719712115,49.988004798080766,49.99400239904038,50.0]}

},{}],45:[function(require,module,exports){
module.exports={"expected":[3.0699801238394655,3.071718591429547,3.073456075674168,3.075192578240101,3.0769281007894116,3.078662644979485,3.080396212463036,3.082128804888134,3.083860423898218,3.0855910711321153,3.0873207482240606,3.0890494568037132,3.090777198496173,3.092503974922004,3.0942297876972438,3.09595463843343,3.097678528737611,3.0994014602123667,3.101123434455825,3.102844453061679,3.1045645176192056,3.1062836297132796,3.108001790924395,3.109719002828678,3.1114352669979053,3.113150584999522,3.114864958396657,3.1165783887481386,3.118290877608515,3.1200024265280666,3.1217130370528237,3.1234227107245833,3.125131449080925,3.126839253655228,3.1285461259766847,3.1302520675703196,3.1319570799570036,3.1336611646534696,3.1353643231723294,3.1370665570220884,3.138767867707161,3.1404682567278877,3.1421677255805482,3.1438662757573796,3.1455639087465888,3.1472606260323683,3.1489564290949144,3.150651319410438,3.1523452984511824,3.1540383676854367,3.1557305285775517,3.157421782587954,3.159112131173161,3.160801575785796,3.1624901178746017,3.164177758884455,3.165864500256382,3.167550343427572,3.1692352898313922,3.170919340897401,3.1726024980513627,3.174284762715262,3.175966136307317,3.177646620241994,3.1793262159300206,3.181004924778402,3.1826827481904294,3.1843596875657005,3.186035744300127,3.1877109197859523,3.1893852154117637,3.191058632562505,3.1927311726194896,3.194402836960417,3.1960736269593824,3.1977435439868906,3.1994125894098717,3.20108076459169,3.202748070892161,3.2044145096675614,3.2060800822706437,3.2077447900506484,3.209408634353316,3.2110716165209015,3.2127337378921856,3.2143949998024874,3.2160554035836784,3.217714950564191,3.2193736420690366,3.2210314794198136,3.222688463934721,3.2243445969285713,3.2259998797128016,3.2276543135954867,3.229307899881349,3.230960639871775,3.232612534864822,3.234263586155233,3.2359137950344485,3.2375631627906176,3.239211690708609,3.240859380070025,3.2425062321532097,3.2441522482332648,3.2457974295820566,3.2474417774682314,3.249085293157224,3.2507279779112714,3.2523698329894226,3.254010859647549,3.2556510591383594,3.2572904327114065,3.2589289816131006,3.2605667070867206,3.262203610372424,3.2638396927072595,3.265474955325176,3.2671093994570333,3.2687430263306165,3.270375837170642,3.272007833198771,3.27363901563362,3.27526938569077,3.2768989445827796,3.2785276935191923,3.2801556337065496,3.2817827663483996,3.2834090926453094,3.285034613794873,3.286659330991725,3.2882832454275452,3.2899063582910766,3.291528670768127,3.2931501840415858,3.2947708992914317,3.296390817694742,3.298009940425703,3.2996282686556206,3.3012458035529297,3.3028625462832033,3.304478498009165,3.3060936598906943,3.3077080330848405,3.3093216187458308,3.310934418025078,3.312546432071195,3.314157662029998,3.3157681090445217,3.317377774255025,3.318986658799002,3.3205947638111915,3.3222020904235854,3.3238086397654394,3.3254144129632808,3.3270194111409177,3.3286236354194507,3.3302270869172776,3.331829766750108,3.3334316760309664,3.335032815870206,3.336633187375516,3.33823279165193,3.339831629801834,3.3414297029249793,3.3430270121184864,3.344623558476857,3.3462193430919815,3.3478143670531484,3.349408631447052,3.351002137357801,3.35259488586693,3.3541868780534023,3.355778114993625,3.357368597761454,3.3589583274281996,3.360547305062642,3.362135531731035,3.363723008497113,3.3653097364221036,3.366895716564733,3.3684809499812354,3.3700654377253603,3.3716491808483817,3.3732321803991057,3.3748144374238773,3.3763959529665923,3.3779767280687003,3.3795567637692168,3.381136061104729,3.3827146211094044,3.3842924448149985,3.3858695332508635,3.3874458874439544,3.3890215084188386,3.3905963971977022,3.3921705548003596,3.3937439822442586,3.3953166805444903,3.3968886507137968,3.3984598937625754,3.400030410698892,3.4016002025284826,3.403169270254766,3.404737614878846,3.4063052373995246,3.4078721388133055,3.409438320114402,3.4110037822947445,3.41256852634399,3.4141325532495266,3.4156958639964814,3.417258459567729,3.4188203409438978,3.4203815091033762,3.4219419650223215,3.423501709674667,3.425060744032127,3.426619069064206,3.4281766857382054,3.429733595019229,3.4312897978701926,3.4328452952518274,3.4344000881226906,3.43595417743917,3.4375075641554917,3.439060249223727,3.440612233593798,3.4421635182134858,3.4437141040284374,3.4452639919821704,3.446813183016083,3.448361678069457,3.4499094780794666,3.451456583981186,3.453002996707593,3.454548717189578,3.4560937463559487,3.457638085133439,3.4591817344467137,3.4607246952183752,3.4622669683689695,3.4638085548169943,3.4653494554789037,3.466889671269115,3.468429203100016,3.46996805188197,3.4715062185233214,3.4730437039304056,3.4745805090075508,3.4761166346570866,3.4776520817793504,3.4791868512726922,3.4807209440334814,3.482254360956113,3.4837871029330145,3.48531917085465,3.486850565609528,3.4883812880842062,3.489911339163298,3.491440719729479,3.492969430663493,3.494497472844155,3.4960248471483615,3.4975515544510936,3.4990775956254243,3.500602971542523,3.5021276830716612,3.50365173108022,3.505175116433694,3.5066978399956987,3.508219902627975,3.509741305190395,3.5112620485409685,3.5127821335358473,3.5143015610293316,3.5158203318738765,3.5173384469200966,3.51885590701677,3.5203727130108478,3.5218888657474547,3.5234043660699,3.5249192148196777,3.5264334128364756,3.5279469609581793,3.5294598600208773,3.530972110858868,3.5324837143046635,3.5339946711889945,3.5355049823408184,3.537014648587321,3.5385236707539245,3.540032049664292,3.5415397861403317,3.5430468810022044,3.544553335068325,3.546059149155373,3.5475643240782917,3.549068860650298,3.550572759682886,3.552076021985831,3.5535786483671954,3.555080639633335,3.5565819965889025,3.558082720036852,3.5595828107784455,3.561082269613259,3.5625810973391836,3.564079294752433,3.565576862647549,3.5670738018174055,3.568570113053213,3.570065797144523,3.5715608548792357,3.5730552870436023,3.574549094422229,3.5760422777980847,3.5775348379525047,3.579026775665194,3.580518091714233,3.5820087868760835,3.583498861925592,3.5849883176359936,3.5864771547789194,3.587965374124398,3.5894529764408634,3.5909399624951557,3.5924263330525306,3.5939120888766585,3.5953972307296356,3.5968817593719797,3.5983656755626447,3.599848980059017,3.601331673616926,3.6028137569906424,3.6042952309328884,3.6057760961948406,3.607256353526132,3.6087360036748577,3.6102150473875825,3.6116934854093397,3.61317131848364,3.614648547352473,3.616125172756314,3.6176011954341267,3.619076616123367,3.6205514355599893,3.6220256544784495,3.6234992736117086,3.6249722936912385,3.6264447154470254,3.627916539607574,3.629387766899913,3.630858398049596,3.6323284337807085,3.633797874815873,3.63526672187625,3.6367349756815432,3.6382026369500053,3.639669706398441,3.6411361847422095,3.642602072695231,3.6440673709699896,3.6455320802775377,3.6469962013274997,3.648459734828075,3.649922681486046,3.6513850420067766,3.652846817094219,3.6543080074509193,3.6557686137780174,3.6572286367752547,3.658688077140975,3.6601469355721314,3.661605212764288,3.663062909411623,3.664520026206936,3.665976563841649,3.6674325230058105,3.6688879043880998,3.6703427086758316,3.671796936554959,3.673250588710076,3.674703665824424,3.6761561685798934,3.6776080976570276,3.679059453735028,3.6805102374917555,3.6819604496037375,3.6834100907461687,3.6848591615929145,3.6863076628165174,3.687755595088199,3.6892029590778623,3.6906497554540985,3.6920959848841868,3.693541648034103,3.694986745568516,3.6964312781507993,3.697875246443029,3.699318651105989,3.7007614927991743,3.7022037721807957,3.7036454899077813,3.7050866466357832,3.7065272430191754,3.707967279711064,3.709406757363286,3.710845676626414,3.7122840381497597,3.713721842581378,3.71515909056807,3.716595782755384,3.718031919787624,3.7194675023078485,3.7209025309578756,3.722337006378287,3.7237709292084284,3.725204300086418,3.726637119649146,3.7280693885322767,3.7295011073702553,3.7309322767963105,3.7323628974424556,3.733792969939493,3.7352224949170187,3.736651473003424,3.7380799048258986,3.739507791010434,3.740935132181829,3.742361928963688,3.74378818197843,3.7452138918472864,3.746639059190308,3.748063684626367,3.749487768773158,3.7509113122472053,3.7523343156638633,3.753756779637319,3.7551787047805956,3.7566000917055584,3.758020941022915,3.759441253342216,3.7608610292718647,3.762280269419115,3.763698974390076,3.765117144789714,3.766534781221858,3.7679518842891992,3.769368454593298,3.770784492734583,3.772199999312357,3.773614974924798,3.775029420168964,3.776443335640794,3.777856721935111,3.7792695796456286,3.7806819093649473,3.782093711684564,3.783504987194871,3.78491573648516,3.7863259601436248,3.787735658757364,3.789144832912384,3.7905534831936034,3.7919616101848526,3.7933692144688784,3.794776296627349,3.796182857240852,3.7975888968889007,3.7989944161499363,3.8003994156013308,3.8018038958193876,3.8032078573793484,3.8046113008553912,3.806014226820637,3.8074166358471504,3.8088185285059426,3.810219905366974,3.8116207669991584,3.8130211139703634,3.814420946847415,3.815820266196099,3.817219072581165,3.8186173665663268,3.8200151487142673,3.8214124195866415,3.822809179744075,3.824205429746172,3.825601170151516,3.8269964015176687,3.8283911244011795,3.8297853393575814,3.8311790469413984,3.8325722477061466,3.833964942204334,3.835357130987468,3.836748814606054,3.8381399936096003,3.8395306685466184,3.8409208399646273,3.8423105084101574,3.8436996744287475,3.845088338564954,3.846476501362349,3.847864163363525,3.8492513251100946,3.8506379871426963,3.8520241500009957,3.853409814223688,3.8547949803484975,3.8561796489121867,3.8575638204505514,3.8589474954984286,3.8603306745896955,3.8617133582572736,3.863095547033132,3.8644772414482857,3.865858442032803,3.8672391493158047,3.8686193638254682,3.869999086089028,3.871378316632779,3.87275705598208,3.874135304661355,3.8755130631940937,3.8768903321028576,3.8782671119092798,3.879643403134067,3.8810192062970037,3.8823945219169524,3.8837693505118587,3.8851436925987493,3.886517548693738,3.8878909193120275,3.88926380496791,3.8906362061747695,3.8920081234450863,3.893379557290437,3.894750508221499,3.8961209767480476,3.897490963378966,3.8988604686222406,3.900229492984968,3.9015980369733527,3.902966101092713,3.904333685847484,3.9057007917412125,3.9070674192765695,3.9084335689553447,3.9097992412784515,3.911164436745928,3.9125291558569417,3.913893399109788,3.9152571670018963,3.9166204600298267,3.9179832786892788,3.9193456234750887,3.9207074948812326,3.9220688934008296,3.9234298195261434,3.924790273748585,3.9261502565587105,3.927509768446231,3.928868809900008,3.930227381408059,3.9315854834575563,3.932943116534833,3.9343002811253824,3.9356569777138612,3.93701320678409,3.938368968819057,3.93972426430092,3.941079093711006,3.9424334575298166,3.943787356237027,3.9451407903114917,3.946493760231241,3.947846266473488,3.9491983095146286,3.9505498898302425,3.9519010078950965,3.9532516641831466,3.954601859167539,3.9559515933206133,3.957300867113901,3.958649681018134,3.9599980355032396,3.961345931038345,3.962693368091782,3.964040347131085,3.965386868622994,3.966732933033457,3.9680785408276322,3.9694236924698894,3.9707683884238114,3.972112629152196,3.973456415117059,3.9747997467796345,3.976142624600379,3.9774850490389686,3.9788270205543075,3.9801685396045237,3.981509606646975,3.9828502221382474,3.9841903865341606,3.985530100289768,3.986869363859356,3.9882081776964506,3.9895465422538163,3.9908844579834586,3.9922219253366245,3.993558944763806,3.9948955167147413,3.996231641638418,3.9975673199830695,3.9989025521961845,4.000237338724504,4.001571680014021,4.00290557650999,4.0042390286569205,4.005572036898583,4.006904601678008,4.008236723437494,4.0095684026186005,4.010899639662156,4.012230435008258,4.013560789096273,4.0148907023648395,4.016220175251871,4.017549208194557,4.018877801629362,4.02020595599203,4.021533671717586,4.0228609492403375,4.024187788993874,4.025514191411074,4.026840156924098,4.028165685964398,4.0294907789627175,4.030815436349091,4.032139658552844,4.033463446002602,4.034786799126284,4.036109718351109,4.0374322041035935,4.03875425680956,4.040075876894131,4.0413970647817345,4.042717820896106,4.044038145660288,4.045358039496633,4.046677502826805,4.047996536071779,4.049315139651847,4.050633313986617,4.0519510594950106,4.053268376595273,4.054585265704967,4.055901727240979,4.057217761619518,4.0585333692561205,4.059848550565646,4.0611633059622845,4.0624776358595565,4.063791540670312,4.065105020806736,4.066418076680345,4.067730708701992,4.06904291728187,4.070354702829508,4.071666065753776,4.072977006462886,4.074287525364393,4.075597622865198,4.076907299371546,4.078216555289031,4.079525391022597,4.0808338069765355,4.082141803554495,4.083449381159474,4.084756540193825,4.0860632810592605,4.087369604156848,4.088675509887015,4.089980998649552,4.091286070843608,4.092590726867697,4.0938949671197,4.09519879199686,4.0965022018957935,4.097805197212481,4.099107778342278,4.100409945679907,4.10171169961947,4.103013040554439,4.104313968877664,4.1056144849813725,4.106914589257171,4.108214282096046,4.109513563888368,4.110812435023886,4.112110895891738,4.113408946880446,4.114706588377917,4.11600382077145,4.117300644447733,4.118597059792844,4.119893067192253,4.121188667030828,4.122483859692827,4.1237786455619085,4.125073025021127,4.126366998452935,4.127660566239189,4.128953728761146,4.130246486399463,4.131538839534206,4.132830788544843,4.134122333810252,4.135413475708718,4.136704214617938,4.137994550915014,4.139284484976465,4.140574017178225,4.141863147895638,4.143151877503467,4.144440206375892,4.14572813488651,4.14701566340834,4.148302792313823,4.149589521974819,4.150875852762612,4.152161785047914,4.153447319200861,4.154732455591017,4.156017194587373,4.157301536558353,4.158585481871808,4.159869030895025,4.161152183994723,4.1624349415370565,4.163717303887613,4.164999271411422,4.166280844472947,4.167562023436094,4.168842808664209,4.17012320052008,4.171403199365937,4.172682805563456,4.173962019473758,4.175240841457411,4.176519271874431,4.177797311084284,4.179074959445883,4.180352217317597,4.181629085057245,4.1829055630221,4.18418165156889,4.185457351053802,4.186732661832475,4.188007584260013,4.189282118690973,4.190556265479377,4.191830024978709,4.193103397541914,4.194376383521402,4.195648983269051,4.1969211971362,4.198193025473662,4.199464468631714,4.200735526960104,4.202006200808052,4.20327649052425,4.2045463964568635,4.205815918953531,4.207085058361368,4.208353815026966,4.209622189296393,4.210890181515198,4.212157792028409,4.213425021180533,4.214691869315563,4.215958336776972,4.217224423907719,4.218490131050247,4.219755458546487,4.221020406737856,4.22228497596526,4.223549166569094,4.224812978889247,4.226076413265095,4.227339470035511,4.228602149538858,4.229864452112998,4.2311263780952855,4.2323879278225744,4.233649101631217,4.234909899857061,4.23617032283546,4.237430370901264,4.238690044388828,4.239949343632009,4.2412082689641695,4.242466820718175,4.2437249992264015,4.2449828048207285,4.246240237832547,4.247497298592753,4.24875398743176,4.250010304679486,4.251266250665366,4.252521825718347,4.253777030166889,4.255031864338971,4.256286328562085,4.2575404231632445,4.258794148468977,4.260047504805332,4.261300492497879,4.2625531118717115,4.263805363251441,4.265057246961205,4.266308763324665,4.267559912665008,4.268810695304948,4.270061111566725,4.271311161772108,4.272560846242395,4.273810165298415,4.275059119260528,4.276307708448627,4.277555933182136,4.278803793780012,4.280051290560753,4.281298423842387,4.2825451939424815,4.283791601178142,4.285037645866011,4.286283328322273,4.2875286488626525,4.288773607802415,4.290018205456369,4.291262442138866,4.292506318163802,4.29374983384462,4.294992989494307,4.296235785425397,4.297478221949976,4.298720299379672,4.299962018025671,4.301203378198704,4.302444380209055,4.303685024366562,4.304925310980616,4.306165240360162,4.307404812813701,4.308644028649289,4.30988288817454,4.311121391696626,4.312359539522277,4.313597331957786,4.314834769309003,4.316071851881339,4.3173085799797715,4.318544953908838,4.319780973972643,4.321016640474851,4.322251953718699,4.323486914006986,4.32472152164208,4.325955776925919,4.327189680160008,4.328423231645423,4.329656431682812,4.3308892805723955,4.332121778613965,4.333353926106886,4.3345857233500995,4.3358171706421205,4.337048268281042,4.338279016564532,4.339509415789838,4.340739466253786,4.34196916825278,4.343198522082807,4.344427528039433,4.345656186417807,4.346884497512661,4.348112461618309,4.349340079028654,4.350567350037179,4.351794274936955,4.353020854020642,4.354247087580485,4.35547297590832,4.356698519295571,4.357923718033251,4.359148572411967,4.3603730827219165,4.361597249252889,4.362821072294269,4.364044552135033,4.365267689063752,4.366490483368597,4.367712935337334,4.368935045257324,4.370156813415527,4.371378240098504,4.372599325592414,4.373820070183017,4.375040474155674,4.37626053779535,4.37748026138661,4.378699645213625,4.379918689560169,4.38113739470962,4.382355760944968,4.383573788548801,4.3847914778033195,4.386008828990334,4.387225842391261,4.388442518287125,4.389658856958565,4.390874858685832,4.3920905237487835,4.393305852426894,4.394520844999252,4.395735501744557,4.396949822941128,4.3981638088668955,4.399377459799409,4.400590776015834,4.401803757792955,4.4030164054071745,4.404228719134515,4.4054406992506205,4.406652346030753,4.407863659749797,4.409074640682261,4.410285289102276,4.411495605283597,4.412705589499602,4.413915242023296,4.415124563127309,4.4163335530838985,4.417542212164949,4.418750540641973,4.419958538786112,4.421166206868139,4.422373545158453,4.4235805539270885,4.424787233443708,4.4259935839776094,4.427199605797722,4.428405299172609,4.429610664370468,4.430815701659134,4.432020411306074,4.433224793578395,4.434428848742839,4.435632577065787,4.43683597881326,4.438039054250916,4.439241803644053,4.44044422725761,4.441646325356171,4.4428480982039575,4.444049546064834,4.445250669202311,4.446451467879542,4.447651942359325,4.448852092904103,4.450051919775965,4.451251423236649,4.452450603547538,4.453649460969663,4.454847995763707,4.456046208189997,4.457244098508515,4.458441666978893,4.459638913860411,4.460835839412005,4.462032443892261,4.463228727559422,4.464424690671378,4.465620333485681,4.466815656259536,4.468010659249802,4.469205342712995,4.470399706905292,4.471593752082524,4.472787478500181,4.473980886413412,4.475173976077029,4.4763667477455,4.477559201672957,4.478751338113192,4.47994315731966,4.4811346595454795,4.482325845043433,4.483516714065964,4.484707266865185,4.485897503692872,4.487087424800466,4.488277030439077,4.4894663208594805,4.490655296312121,4.491843957047109,4.49303230331423,4.494220335362933,4.495408053442341,4.496595457801246,4.497782548688113,4.498969326351078,4.500155791037952,4.501341942996216,4.502527782473029,4.503713309715221,4.5048985249693,4.506083428481447,4.507268020497522,4.508452301263061,4.509636271023277,4.510819930023063,4.512003278506988,4.513186316719303,4.514369044903938,4.515551463304502,4.516733572164288,4.517915371726268,4.519096862233099,4.520278043927119,4.52145891705035,4.5226394818444975,4.5238197385509515,4.524999687410789,4.526179328664772,4.527358662553346,4.528537689316647,4.529716409194498,4.530894822426409,4.532072929251578,4.533250729908894,4.534428224636934,4.535605413673967,4.536782297257951,4.537958875626538,4.53913514901707,4.5403111176665805,4.541486781811799,4.5426621416891475,4.543837197534741,4.545011949584391,4.546186398073604,4.547360543237581,4.548534385311221,4.54970792452912,4.550881161125569,4.552054095334562,4.553226727389784,4.554399057524629,4.555571085972182,4.556742812965234,4.557914238736272,4.559085363517488,4.560256187540775,4.561426711037728,4.562596934239645,4.5637668573775265,4.564936480682079,4.566105804383712,4.567274828712541,4.568443553898384,4.569611980170772,4.570780107758935,4.571947936891815,4.573115467798059,4.574282700706024,4.575449635843776,4.576616273439087,4.577782613719443,4.578948656912038,4.580114403243776,4.581279852941275,4.582445006230864,4.58360986333858,4.584774424490179,4.585938689911128,4.587102659826607,4.588266334461512,4.589429714040451,4.590592798787751,4.591755588927452,4.592918084683313,4.594080286278808,4.595242193937128,4.596403807881185,4.597565128333604,4.598726155516735,4.599886889652644,4.601047330963116,4.602207479669659,4.603367335993499,4.604526900155588,4.605686172376594,4.606845152876913,4.608003841876658,4.609162239595671,4.6103203462535145,4.611478162069475,4.612635687262566,4.613792922051524,4.614949866654813,4.616106521290623,4.61726288617687,4.618418961531197,4.619574747570975,4.620730244513304,4.621885452575012,4.623040371972654,4.624195002922519,4.625349345640623,4.626503400342712,4.627657167244265,4.628810646560491,4.629963838506333,4.631116743296463,4.632269361145288,4.633421692266948,4.634573736875319,4.635725495184006,4.636876967406352,4.638028153755437,4.639179054444074,4.640329669684811,4.6414799996899365,4.6426300446714714,4.643779804841178,4.644929280410554,4.646078471590837,4.647227378593002,4.648376001627765,4.64952434090558,4.650672396636642,4.651820169030887,4.652967658297991,4.654114864647372,4.655261788288191,4.65640842942935,4.657554788279494,4.658700865047012,4.659846659940038,4.660992173166445,4.6621374049338575,4.663282355449639,4.664427024920904,4.665571413554509,4.666715521557057,4.6678593491349005,4.669002896494137,4.670146163840611,4.671289151379918,4.6724318593174,4.673574287858148,4.674716437207003,4.675858307568555,4.6769998991471455,4.678141212146866,4.679282246771559,4.680423003224819,4.681563481709991,4.682703682430174,4.683843605588219,4.684983251386731,4.686122620028069,4.687261711714343,4.6884005266474205,4.6895390650289235,4.690677327060229,4.691815312942468,4.692953022876531,4.694090457063062,4.695227615702464,4.696364498994896,4.697501107140276,4.69863744033828,4.699773498788341,4.700909282689652,4.702044792241167,4.703180027641598,4.704314989089417,4.705449676782858,4.706584090919915,4.707718231698344,4.708852099315663,4.70998569396915,4.711119015855851,4.712252065172568,4.7133848421158735,4.714517346882098,4.71564957966734,4.71678154066746,4.717913230078086,4.719044648094609,4.720175794912189,4.721306670725749,4.7224372757299795,4.72356761011934,4.724697674088055,4.725827467830117,4.7269569915392875,4.728086245409097,4.729215229632843,4.730343944403596,4.731472389914191,4.732600566357238,4.733728473925114,4.734856112809968,4.735983483203722,4.737110585298068,4.738237419284469,4.739363985354162,4.740490283698156,4.741616314507234,4.742742077971951,4.743867574282638,4.7449928036293985,4.7461177662021115,4.747242462190431,4.7483668917837845,4.749491055171379,4.750614952542195,4.751738584084989,4.752861949988297,4.753985050440431,4.755107885629477,4.756230455743307,4.757352760969562,4.75847480149567,4.759596577508833,4.7607180891960335,4.7618393367440355,4.76296032033938,4.764081040168392,4.765201496417176,4.766321689271616,4.76744161891738,4.768561285539917,4.769680689324459,4.770799830456021,4.771918709119397,4.77303732549917,4.774155679779704,4.775273772145148,4.776391602779434,4.77750917186628,4.778626479589189,4.77974352613145,4.780860311676136,4.78197683640611,4.783093100504017,4.784209104152291,4.785324847533154,4.786440330828615,4.7875555542204715,4.788670517890307,4.789785222019497,4.790899666789204,4.7920138523803795,4.793127778973766,4.794241446749894,4.795354855889088,4.796468006571461,4.797580898976914,4.798693533285146,4.7998059096756425,4.800918028327682,4.8020298894203375,4.803141493132472,4.804252839642745,4.805363929129605,4.806474761771298,4.807585337745862,4.80869565723113,4.809805720404731,4.810915527444086,4.812025078526415,4.813134373828731,4.814243413527844,4.815352197800361,4.816460726822686,4.817569000771017,4.818677019821352,4.819784784149488,4.820892293931018,4.8219995493413315,4.823106550555622,4.8242132977488765,4.825319791095884,4.826426030771233,4.827532016949313,4.828637749804312,4.829743229510218,4.830848456240821,4.831953430169714,4.833058151470289,4.83416262031574,4.835266836879065,4.8363708013330635,4.837474513850338,4.838577974603292,4.839681183764137,4.8407841415048845,4.84188684799735,4.842989303413157,4.84409150792373,4.8451934617003,4.846295164913903,4.847396617735381,4.848497820335382,4.84959877288436,4.850699475552576,4.851799928510096,4.852900131926796,4.854000085972357,4.85509979081627,4.856199246627833,4.857298453576151,4.858397411830141,4.859496121558525,4.8605945829298385,4.861692796112423,4.862790761274431,4.863888478583828,4.8649859482083855,4.866083170315689,4.867180145073133,4.868276872647925,4.869373353207084,4.870469586917441,4.871565573945637,4.87266131445813,4.873756808621185,4.874852056600887,4.87594705856313,4.877041814673622,4.878136325097888,4.879230590001262,4.8803246095488975,4.881418383905761,4.882511913236637,4.883605197706119,4.884698237478622,4.885791032718376,4.886883583589427,4.887975890255636,4.8890679528806835,4.890159771628066,4.891251346661097,4.892342678142909,4.893433766236453,4.8945246111044955,4.895615212909624,4.8967055718142465,4.897795687980587,4.898885561570689,4.899975192746419,4.901064581669461,4.902153728501319,4.903242633403321,4.90433129653661,4.905419718062157,4.906507898140749,4.907595836932997,4.908683534599335,4.909770991300018,4.910858207195124,4.911945182444552,4.913031917208027,4.914118411645096,4.91520466591513,4.9162906801773225,4.917376454590694,4.918461989314086,4.919547284506169,4.920632340325434,4.921717156930201,4.922801734478613,4.92388607312864,4.924970173038078,4.92605403436455,4.927137657265504,4.928221041898216,4.929304188419789,4.930387096987154,4.9314697677570685,4.932552200886119,4.933634396530719,4.9347163548471125,4.935798075991371,4.936879560119393,4.937960807386911,4.939041817949483,4.940122591962498,4.941203129581176,4.9422834309605665,4.94336349625555,4.944443325620836,4.945522919210967,4.946602277180318,4.947681399683093,4.948760286873329,4.949838938904894,4.950917355931491,4.951995538106654,4.953073485583749,4.9541511985159765,4.95522867705637,4.956305921357798,4.957382931572959,4.95845970785439,4.959536250354461,4.960612559225375,4.961688634619172,4.962764476687726,4.963840085582748,4.964915461455782,4.96599060445821,4.9670655147412495,4.968140192455955,4.969214637753217,4.970288850783763,4.971362831698157,4.972436580646802,4.973510097779936,4.97458338324764,4.975656437199827,4.976729259786252,4.977801851156507,4.978874211460026,4.979946340846078,4.981018239463772,4.9820899074620595,4.983161344989729,4.984232552195412,4.9853035292275765,4.9863742762345336,4.987444793364435,4.988515080765272,4.9895851385848795,4.990654966970931,4.991724566070945,4.99279393603228,4.993863077002136,4.994931989127558,4.996000672555431,4.997069127432486,4.9981373539052925,4.999205352120269,5.000273122223674,5.001340664361609,5.002407978680024,5.003475065324709,5.004541924441301,5.0056085561752806,5.006674960671974,5.007741138076554,5.008807088534035,5.009872812189281,5.010938309187001,5.012003579671748,5.013068623787925,5.014133441679778,5.015198033491403,5.016262399366741,5.017326539449582,5.018390453883561,5.0194541428121635,5.020517606378721,5.021580844726417,5.022643857998276,5.02370664633718,5.024769209885852,5.02583154878687,5.026893663182658,5.0279555532154925,5.029017219027495,5.030078660760643,5.03113987855676,5.03220087255752,5.03326164290445,5.034322189738927,5.035382513202178,5.036442613435283,5.037502490579173,5.0385621447746285,5.039621576162286,5.040680784882632,5.041739771076005,5.042798534882596,5.043857076442452,5.044915395895469,5.045973493381399,5.047031369039845,5.0480890230102675,5.049146455431977,5.0502036664441405,5.051260656185778,5.052317424795765,5.0533739724128335,5.054430299175566,5.055486405222403,5.056542290691642,5.057597955721432,5.058653400449783,5.059708625014556,5.060763629553472,5.061818414204106,5.062872979103892,5.063927324390117,5.06498145019993,5.066035356670335,5.067089043938193,5.068142512140223,5.0691957614130025,5.070248791892967,5.071301603716409,5.072354197019483,5.073406571938198,5.074458728608426,5.0755106671658945,5.0765623877461925,5.077613890484768,5.07866517551693,5.079716242977844,5.080767093002541,5.081817725725906,5.082868141282692,5.0839183398075045,5.084968321434819,5.086018086298965,5.087067634534135,5.088116966274385,5.089166081653634,5.090214980805657,5.091263663864098,5.092312130962458,5.093360382234106,5.094408417812268,5.095456237830037,5.096503842420368,5.097551231716079,5.098598405849852,5.099645364954233,5.100692109161632,5.1017386386043215,5.1027849534144405,5.103831053723992,5.104876939664843,5.105922611368726,5.106968068967239,5.1080133125918445,5.109058342373872,5.110103158444513,5.111147760934831,5.112192149975749,5.113236325698061,5.114280288232426,5.115324037709369,5.116367574259284,5.117410898012428,5.1184540090989294,5.119496907648782,5.120539593791848,5.121582067657856,5.122624329376404,5.123666379076959,5.1247082168888545,5.125749842941292,5.126791257363344,5.127832460283951,5.128873451831923,5.129914232135937,5.130954801324543,5.131995159526158,5.133035306869071,5.134075243481439,5.1351149694912905,5.136154485026523,5.137193790214908,5.138232885184084,5.139271770061561,5.140310444974723,5.141348910050822,5.142387165416983,5.143425211200203,5.14446304752735,5.145500674525165,5.14653809232026,5.147575301039122,5.148612300808107,5.149649091753446,5.150685674001242,5.151722047677472,5.152758212907987,5.153794169818508,5.1548299185346345,5.155865459181836,5.156900791885458,5.15793591677072,5.158970833962714,5.1600055435864105,5.16104004576665,5.162074340628151,5.163108428295508,5.164142308893186,5.16517598254553,5.166209449376759,5.167242709510969,5.168275763072129,5.169308610184087,5.170341250970566,5.1713736855551655,5.172405914061362,5.173437936612509,5.174469753331836,5.175501364342451,5.176532769767339,5.17756396972936,5.178594964351257,5.179625753755645,5.180656338065021,5.1816867174017585,5.18271689188811,5.183746861646206,5.184776626798056,5.185806187465548,5.186835543770451,5.18786469583441,5.18889364377895,5.1899223877254785,5.190950927795279,5.191979264109517,5.1930073967892385,5.194035325955368,5.195063051728711,5.196090574229953,5.197117893579662,5.198145009898285,5.199171923306151,5.20019863392347,5.201225141870332,5.202251447266712,5.203277550232463,5.204303450887322,5.205329149350906,5.2063546457427154,5.207379940182135,5.208405032788429,5.209429923680746,5.210454612978115,5.211479100799451,5.212503387263551,5.213527472489095,5.214551356594647,5.2155750396986535,5.216598521919447,5.21762180337524,5.218644884184134,5.219667764464111,5.22069044433304,5.221712923908672,5.222735203308645,5.22375728265048,5.224779162051586,5.225800841629253,5.22682232150066,5.22784360178287,5.228864682592831,5.229885564047378,5.230906246263233,5.231926729357001,5.232947013445176,5.233967098644137,5.234986985070151,5.23600667283937,5.237026162067834,5.23804545287147,5.239064545366093,5.240083439667403,5.241102135890991,5.242120634152331,5.24313893456679,5.244157037249621,5.245174942315963,5.246192649880845,5.2472101600591845,5.24822747296579,5.249244588715353,5.25026150742246,5.251278229201581,5.252294754167081,5.253311082433209,5.254327214114107,5.255343149323806,5.256358888176225,5.257374430785174,5.258389777264355,5.259404927727357,5.260419882287663,5.261434641058643,5.262449204153559,5.263463571685565,5.2644777437677055,5.265491720512914,5.266505502034018,5.267519088443736,5.268532479854676,5.269545676379341,5.270558678130123,5.271571485219307,5.27258409775907,5.273596515861482,5.274608739638506,5.2756207692019945,5.276632604663696,5.277644246135251,5.278655693728193,5.279666947553946,5.280678007723832,5.281688874349064,5.282699547540748,5.283710027409884,5.284720314067368,5.285730407623987,5.286740308190424,5.287750015877256,5.2887595307949535,5.289768853053883,5.290777982764306,5.291786920036376,5.2927956649801455,5.293804217705558,5.294812578322456,5.295820746940575,5.296828723669548,5.297836508618902,5.29884410189806,5.299851503616341,5.300858713882962,5.301865732807035,5.302872560497566,5.303879197063462,5.304885642613523,5.305891897256448,5.306897961100832,5.307903834255168,5.3089095168278435,5.309915008927147,5.310920310661263,5.311925422138272,5.312930343466156,5.3139350747527905,5.314939616105952,5.315943967633315,5.31694812944245,5.317952101640828,5.31895588433582,5.319959477634692,5.32096288164461,5.321966096472643,5.322969122225753,5.323971959010804,5.3249746069345605,5.325977066103685,5.32697933662474,5.327981418604188,5.328983312148391,5.329985017363611,5.330986534356011,5.331987863231654,5.332989004096501,5.333989957056419,5.334990722217169,5.3359912996844185,5.3369916895637335,5.33799189196058,5.338991906980327,5.339991734728245,5.340991375309504,5.341990828829179,5.342990095392241,5.3439891751035695,5.344988068067941,5.345986774390039,5.346985294174442,5.347983627525639,5.348981774548014,5.349979735345861,5.35097751002337,5.351975098684639,5.352972501433665,5.35396971837435,5.354966749610502,5.355963595245827,5.356960255383938,5.35795673012835,5.358953019582484,5.3599491238496615,5.360945043033113,5.361940777235967,5.36293632656126,5.363931691111933,5.36492687099083,5.365921866300701,5.366916677144199,5.3679113036238855,5.368905745842222,5.369900003901577,5.370894077904227,5.37188796795235,5.372881674148033,5.373875196593266,5.374868535389945,5.375861690639873,5.376854662444758,5.377847450906215,5.378840056125764,5.379832478204833,5.380824717244754,5.381816773346769,5.382808646612024,5.383800337141572,5.384791845036375,5.3857831703973,5.3867743133251205,5.387765273920521,5.38875605228409,5.389746648516324,5.390737062717629,5.391727294988316,5.392717345428608,5.39370721413863,5.394696901218421,5.395686406767926,5.396675730886998,5.397664873675399,5.398653835232798,5.399642615658776,5.400631215052818,5.401619633514324,5.402607871142599,5.403595928036856,5.404583804296223,5.405571500019732,5.4065590153063265,5.40754635025486,5.408533504964095,5.409520479532704,5.41050727405927,5.411493888642286,5.412480323380156,5.4134665783711915,5.414452653713617,5.415438549505568,5.416424265845089,5.417409802830136,5.418395160558576,5.419380339128185,5.420365338636656,5.4213501591815865,5.422334800860488,5.423319263770785,5.424303548009811,5.425287653674814,5.4262715808629505,5.427255329671292,5.4282389001968205,5.42922229253643,5.430205506786927,5.431188543045031,5.432171401407373,5.433154081970498,5.434136584830862,5.435118910084835,5.436101057828699,5.437083028158651,5.438064821170798,5.439046436961163,5.440027875625681,5.441009137260201,5.441990221960486,5.442971129822211,5.443951860940967,5.444932415412257,5.4459127933315,5.446892994794026,5.447873019895083,5.448852868729831,5.449832541393346,5.450812037980616,5.451791358586545,5.452770503305954,5.453749472233576,5.45472826546406,5.4557068830919695,5.456685325211784,5.457663591917898,5.458641683304621,5.45961959946618,5.460597340496714,5.461574906490282,5.462552297540855,5.463529513742321,5.464506555188487,5.465483421973072,5.466460114189714,5.4674366319319665,5.468412975293298,5.4693891443670966,5.470365139246665,5.4713409600252225,5.472316606795906,5.47329207965177,5.474267378685785,5.47524250399084,5.4762174556597385,5.477192233785204,5.478166838459878,5.479141269776318,5.480115527826999,5.481089612704313,5.482063524500574,5.4830372633080104,5.48401082921877,5.484984222324917,5.485957442718437,5.486930490491233,5.487903365735123,5.48887606854185,5.4898485990030705,5.490820957210362,5.4917931432552205,5.49276515722906,5.493736999223218,5.494708669328945,5.495680167637415,5.49665149423972,5.497622649226872,5.4985936326898015,5.49956444471936,5.5005350854063195,5.50150555484137,5.502475853115122,5.503445980318107,5.504415936540775,5.5053857218735,5.506355336406573,5.507324780230205,5.508294053434532,5.509263156109605,5.5102320883454,5.511200850231811,5.512169441858657,5.5131378633156745,5.514106114692522,5.51507419607878,5.516042107563949,5.517009849237454,5.517977421188639,5.518944823506769,5.519912056281033,5.52087911960054,5.521846013554323,5.522812738231337,5.523779293720455,5.524745680110478,5.525711897490126,5.526677945948042,5.527643825572792,5.528609536452864,5.529575078676669,5.530540452332541,5.531505657508737,5.532470694293438,5.533435562774744,5.534400263040683,5.5353647951792055,5.536329159278182,5.537293355425411,5.538257383708611,5.539221244215426,5.540184937033422,5.541148462250092,5.542111819952851,5.543075010229037,5.544038033165915,5.54500088885067,5.545963577370416,5.546926098812189,5.5478884532629476,5.5488506408095795,5.549812661538894,5.550774515537625,5.551736202892434,5.552697723689904,5.553659078016545,5.554620265958792,5.555581287603005,5.556542143035468,5.5575028323423945,5.558463355609919,5.559423712924103,5.560383904370934,5.561343930036327,5.562303790006119,5.563263484366076,5.5642230132018895,5.565182376599176,5.5661415746434795,5.56710060742027,5.568059475014942,5.569018177512819,5.569976714999152,5.570935087559115,5.571893295277811,5.5728513382402705,5.573809216531448,5.574766930236227,5.57572447943942,5.576681864225763,5.57763908467992,5.578596140886487,5.579553032929981,5.5805097608948495,5.581466324865467,5.582422724926138,5.583378961161091,5.584335033654485,5.585290942490407,5.586246687752871,5.587202269525819,5.588157687893122,5.589112942938579,5.590068034745917,5.5910229633987925,5.59197772898079,5.5929323315754225,5.593886771266133,5.59484104813629,5.595795162269194,5.596749113748074,5.597702902656088,5.598656529076322,5.599609993091793,5.600563294785446,5.601516434240156,5.602469411538727,5.603422226763893,5.604374879998319,5.605327371324597,5.606279700825249,5.607231868582732,5.608183874679425,5.609135719197644,5.610087402219631,5.611038923827561,5.611990284103536,5.612941483129592,5.613892520987694,5.614843397759737,5.615794113527547,5.616744668372881,5.617695062377427,5.6186452956228035,5.61959536819056,5.620545280162179,5.6214950316190695,5.622444622642576,5.623394053313974,5.624343323714467,5.625292433925194,5.6262413840272245,5.627190174101558,5.628138804229126,5.629087274490794,5.630035584967358,5.6309837357395445,5.6319317268880145,5.632879558493361,5.633827230636106,5.634774743396708,5.635722096855555,5.636669291092969,5.637616326189204,5.638563202224446,5.639509919278813,5.64045647743236,5.64140287676507,5.6423491173568605,5.643295199287584,5.6442411226370215,5.6451868874848925,5.646132493910846,5.647077941994466,5.6480232318152686,5.648968363452704,5.649913336986158,5.650858152494947,5.651802810058322,5.652747309755468,5.653691651665505,5.654635835867484,5.655579862440393,5.656523731463154,5.657467443014619,5.658410997173582,5.659354394018762,5.660297633628819,5.661240716082345,5.662183641457867,5.663126409833849,5.664069021288684,5.665011475900706,5.665953773748179,5.666895914909306,5.667837899462221,5.668779727484996,5.669721399055636,5.670662914252084,5.671604273152215,5.672545475833844,5.673486522374716,5.674427412852515,5.6753681473448605,5.676308725929305,5.67724914868334,5.6781894156843915,5.67912952700982,5.680069482736926,5.681009282942941,5.681948927705036,5.682888417100317,5.683827751205826,5.684766930098544,5.6857059538553845,5.686644822553199,5.687583536268777,5.688522095078843,5.689460499060058,5.690398748289021,5.691336842842269,5.692274782796272,5.69321256822744,5.69415019921212,5.695087675826595,5.696024998147085,5.69696216624975,5.697899180210683,5.6988360401059195,5.699772746011428,5.700709298003118,5.701645696156833,5.702581940548358,5.703518031253414,5.704453968347659,5.705389751906691,5.706325382006045,5.7072608587211935,5.708196182127548,5.709131352300457,5.710066369315211,5.711001233247033,5.711935944171089,5.712870502162482,5.713804907296254,5.714739159647385,5.715673259290793,5.716607206301337,5.717541000753812,5.718474642722956,5.719408132283443,5.720341469509886,5.721274654476838,5.722207687258791,5.723140567930177,5.724073296565365,5.725005873238667,5.725938298024331,5.726870570996546,5.727802692229441,5.728734661797087,5.729666479773488,5.7305981462325954,5.731529661248295,5.732461024894416,5.7333922372447255,5.7343232983729315,5.735254208352683,5.736184967257567,5.737115575161114,5.738046032136792,5.73897633825801,5.739906493598119,5.74083649823041,5.7417663522281135,5.7426960556644016,5.743625608612388,5.744555011145124,5.745484263335606,5.746413365256769,5.747342316981491,5.748271118582587,5.749199770132819,5.750128271704884,5.751056623371425,5.751984825205024,5.752912877278206,5.753840779663437,5.754768532433124,5.755696135659615,5.756623589415202,5.757550893772117,5.758478048802535,5.75940505457857,5.760331911172282,5.761258618655672,5.7621851771006805,5.763111586579193,5.764037847163036,5.764963958923977,5.765889921933731,5.766815736263948,5.7677414019862265,5.768666919172104,5.769592287893063,5.770517508220529,5.771442580225866,5.7723675039803855,5.7732922795553385,5.7742169070219225,5.775141386451275,5.776065717914478,5.7769899014825565,5.777913937226478,5.7788378252171535,5.779761565525438,5.780685158222129,5.7816086033779674,5.78253190106364,5.783455051349773,5.7843780543069405,5.785300910005658,5.786223618516384,5.787146179909522,5.78806859425542,5.788990861624368,5.789912982086603,5.790834955712304,5.7917567825715945,5.792678462734541,5.793599996271157,5.794521383251397,5.7954426237451635,5.796363717822301,5.797284665552598,5.798205467005792,5.7991261222515575,5.800046631359521,5.800966994399249,5.801887211440256,5.802807282552001,5.803727207803885,5.804646987265257,5.805566621005409,5.80648610909358,5.807405451598953,5.808324648590657,5.809243700137766,5.810162606309298,5.811081367174219,5.8119999828014395,5.812918453259814,5.813836778618145,5.814754958945179,5.815672994309609,5.816590884780073,5.817508630425156,5.818426231313388,5.8193436875132445,5.82026099909315,5.821178166121471,5.822095188666522,5.823012066796565,5.823928800579806,5.8248453900844,5.8257618353784455,5.826678136529988,5.827594293607021,5.828510306677482,5.82942617580926,5.830341901070187,5.8312574825280405,5.832172920250549,5.8330882143053815,5.834003364760162,5.834918371682455,5.835833235139774,5.8367479551995824,5.837662531929286,5.838576965396241,5.839491255667751,5.840405402811063,5.841319406893377,5.842233267981837,5.843146986143535,5.84406056144551,5.844973993954751,5.845887283738191,5.846800430862715,5.8477134353951525,5.848626297402281,5.8495390169508275,5.850451594107466,5.85136402893882,5.852276321511457,5.853188471891898,5.8541004801466086,5.855012346342003,5.855924070544446,5.856835652820247,5.857747093235667,5.858658391856914,5.859569548750146,5.860480563981467,5.8613914376169305,5.862302169722541,5.863212760364248,5.864123209607953,5.865033517519506,5.865943684164702,5.866853709609291,5.867763593918968,5.868673337159377,5.869582939396114,5.870492400694721,5.87140172112069,5.872310900739464,5.873219939616435,5.874128837816942,5.875037595406276,5.875946212449676,5.876854689012332,5.877763025159383,5.8786712209559155,5.87957927646697,5.880487191757533,5.881394966892543,5.882302601936888,5.883210096955404,5.88411745201288,5.885024667174054,5.8859317425036135,5.886838678066198,5.887745473926392,5.888652130148737,5.88955864679772,5.890465023937781,5.891371261633311,5.892277359948648,5.893183318948084,5.8940891386958585,5.894994819256166,5.895900360693146,5.896805763070894,5.897711026453453,5.898616150904819,5.8995211364889375,5.900425983269705,5.901330691310969,5.902235260676529,5.903139691430136,5.904043983635489,5.904948137356243,5.905852152655999,5.906756029598315,5.9076597682466945,5.908563368664597,5.909466830915431,5.910370155062557,5.91127334116929,5.912176389298891,5.913079299514578,5.913982071879518,5.91488470645683,5.915787203309585,5.916689562500806,5.917591784093468,5.918493868150499,5.919395814734777,5.920297623909134,5.921199295736352,5.9221008302791684,5.92300222760027,5.923903487762296,5.92480461082784,5.925705596859447,5.926606445919613,5.92750715807079,5.928407733375378,5.929308171895734,5.930208473694164,5.93110863883293,5.932008667374244,5.932908559380271,5.933808314913133,5.934707934034898,5.935607416807593,5.936506763293195,5.937405973553634,5.938305047650796,5.9392039856465155,5.9401027876025845,5.941001453580746,5.941899983642697,5.942798377850087,5.943696636264519,5.944594758947551,5.945492745960695,5.946390597365411,5.947288313223122,5.948185893595194,5.949083338542955,5.949980648127684,5.950877822410613,5.951774861452927,5.9526717653157695,5.953568534060231,5.9544651677473635,5.955361666438166,5.956258030193597,5.957154259074566,5.95805035314194,5.9589463124565345,5.959842137079125,5.960737827070439,5.961633382491157,5.962528803401916,5.963424089863309,5.964319241935878,5.965214259680125,5.966109143156505,5.967003892425426,5.967898507547253,5.968792988582304,5.969687335590852,5.970581548633127,5.971475627769311,5.9723695730595425,5.973263384563915,5.974157062342478,5.975050606455232,5.9759440169621385,5.97683729392311,5.977730437398015,5.978623447446678,5.979516324128879,5.980409067504352,5.981301677632789,5.982194154573834,5.983086498387091,5.9839787091321135,5.984870786868416,5.985762731655466,5.986654543552689,5.9875462226194625,5.988437768915123,5.989329182498961,5.990220463430225,5.991111611768115,5.992002627571795,5.992893510900375,5.993784261812929,5.9946748803684855,5.995565366626024,5.996455720644486,5.997345942482768,5.998236032199722,5.999125989854156,6.000015815504835,6.0009055092104795,6.001795071029769,6.002684501021336,6.003573799243773,6.004462965755626,6.0053520006153995,6.006240903881555,6.00712967561251,6.0080183158666385,6.008906824702272,6.009795202177698,6.010683448351163,6.011571563280866,6.012459547024969,6.013347399641587,6.014235121188793,6.015122711724618,6.016010171307048,6.0168974999940295,6.017784697843463,6.018671764913208,6.019558701261083,6.02044550694486,6.021332182022272,6.022218726551007,6.023105140588712,6.023991424192992,6.024877577421408,6.025763600331479,6.026649492980684,6.027535255426456,6.028420887726189,6.029306389937233,6.030191762116897,6.031077004322448,6.031962116611109,6.0328470990400636,6.033731951666452,6.034616674547372,6.035501267739882,6.036385731300997,6.037270065287688,6.038154269756888,6.039038344765488,6.039922290370334,6.040806106628234,6.041689793595952,6.042573351330214,6.043456779887698,6.044340079325047,6.045223249698861,6.046106291065697,6.046989203482071,6.04787198700446,6.048754641689297,6.049637167592976,6.050519564771847,6.051401833282222,6.052283973180371,6.053165984522522,6.054047867364864,6.054929621763542,6.055811247774664,6.056692745454294,6.057574114858457,6.058455356043135,6.059336469064273,6.0602174539777725,6.061098310839494,6.06197903970526,6.062859640630851,6.063740113672005,6.064620458884424,6.065500676323766,6.06638076604565,6.067260728105654,6.068140562559316,6.069020269462134,6.069899848869565,6.070779300837027,6.071658625419897,6.072537822673514,6.073416892653173,6.074295835414132,6.075174651011607,6.076053339500777,6.076931900936778,6.077810335374708,6.078688642869625,6.079566823476546,6.08044487725045,6.081322804246275,6.0822006045189205,6.083078278123245,6.083955825114068,6.08483324554617,6.085710539474292,6.086587706953135,6.08746474803736,6.088341662781589,6.089218451240408,6.090095113468358,6.090971649519944,6.0918480594496325,6.092724343311848,6.093600501160979,6.094476533051372,6.095352439037337,6.096228219173144,6.097103873513021,6.0979794021111635,6.098854805021723,6.099730082298815,6.100605233996513,6.101480260168854,6.102355160869837,6.1032299361534195,6.104104586073523,6.104979110684028,6.10585351003878,6.106727784191581,6.1076019331962,6.108475957106363,6.10934985597576,6.110223629858042,6.11109727880682,6.11197080287567,6.112844202118127,6.113717476587689,6.114590626337815,6.115463651421928,6.116336551893409,6.117209327805605,6.118081979211821,6.118954506165328,6.119826908719357,6.1206991869271,6.1215713408417125,6.122443370516312,6.123315276003978,6.124187057357752,6.12505871463064,6.125930247875607,6.126801657145581,6.1276729424934535,6.128544103972078,6.1294151416342695,6.130286055532808,6.131156845720433,6.132027512249849,6.132898055173721,6.133768474544678,6.134638770415312,6.135508942838175,6.1363789918657865,6.137248917550624,6.138118719945131,6.13898839910171,6.139857955072733,6.140727387910529,6.141596697667391,6.142465884395577,6.143334948147308,6.144203888974764,6.145072706930095,6.145941402065407,6.146809974432775,6.147678424084232,6.148546751071779,6.1494149554473765,6.150283037262952,6.151150996570393,6.152018833421552,6.1528865478682455,6.153754139962253,6.154621609755314,6.155488957299139,6.1563561826453945,6.157223285845716,6.1580902669516995,6.158957126014906,6.15982386308686,6.160690478219051,6.161556971462928,6.16242334286991,6.163289592491374,6.164155720378666,6.165021726583093,6.165887611155924,6.1667533741483975,6.167619015611712,6.168484535597032,6.169349934155483,6.170215211338159,6.171080367196115,6.1719454017803725,6.172810315141915,6.173675107331691,6.174539778400614,6.175404328399561,6.1762687573793755,6.177133065390863,6.177997252484794,6.1788613187119035,6.179725264122892,6.180589088768422,6.181452792699126,6.182316375965595,6.183179838618387,6.184043180708026,6.184906402285,6.185769503399761,6.186632484102725,6.187495344444277,6.188358084474761,6.189220704244491,6.190083203803743,6.19094558320276,6.191807842491746,6.192669981720876,6.193532000940285,6.194393900200076,6.195255679550316,6.196117339041038,6.196978878722238,6.197840298643881,6.198701598855894,6.19956277940817,6.2004238403505685,6.201284781732913,6.202145603604994,6.203006306016568,6.203866889017353,6.204727352657036,6.205587696985268,6.206447922051668,6.2073080279058175,6.208168014597264,6.2090278821755245,6.209887630690077,6.210747260190368,6.211606770725808,6.212466162345775,6.213325435099612,6.214184589036628,6.215043624206097,6.215902540657262,6.216761338439328,6.217620017601468,6.218478578192822,6.219337020262493,6.220195343859555,6.221053549033044,6.221911635831963,6.222769604305282,6.223627454501937,6.2244851864708295,6.225342800260829,6.226200295920769,6.227057673499452,6.227914933045645,6.2287720746080835,6.229629098235467,6.230486003976461,6.231342791879701,6.232199461993787,6.2330560143672855,6.23391244904873,6.23476876608662,6.235624965529422,6.236481047425571,6.237337011823466,6.238192858771475,6.239048588317931,6.239904200511135,6.240759695399355,6.241615073030824,6.242470333453746,6.243325476716287,6.244180502866585,6.245035411952741,6.245890204022825,6.246744879124872,6.2475994373068895,6.2484538786168455,6.24930820310268,6.250162410812297,6.25101650179357,6.251870476094339,6.252724333762411,6.253578074845563,6.254431699391534,6.255285207448036,6.256138599062744,6.256991874283305,6.257845033157327,6.2586980757323945,6.259551002056051,6.260403812175813,6.261256506139162,6.26210908399355,6.262961545786392,6.263813891565075,6.264666121376952,6.2655182352693455,6.266370233289542,6.2672221154848,6.268073881902343,6.268925532589364,6.269777067593024,6.270628486960452,6.271479790738742,6.272330978974962,6.273182051716142,6.274033009009283,6.274883850901356,6.275734577439295,6.276585188670007,6.2774356846403645,6.27828606539721,6.279136330987353,6.279986481457572,6.280836516854614,6.2816864372251935,6.282536242615993,6.283385933073665,6.284235508644831,6.285084969376078,6.285934315313964,6.286783546505015,6.287632662995725,6.288481664832558,6.289330552061943,6.290179324730284,6.291027982883948,6.291876526569272,6.292724955832565,6.2935732707201,6.294421471278121,6.295269557552843,6.296117529590447,6.296965387437083,6.297813131138871,6.2986607607419,6.299508276292227,6.3003556778358805,6.301202965418853,6.302050139087112,6.3028971988865905,6.303744144863191,6.304590977062786,6.305437695531218,6.306284300314298,6.307130791457802,6.307977169007484,6.308823433009058,6.3096695835082155,6.310515620550612,6.311361544181875,6.312207354447599,6.313053051393351,6.313898635064665,6.314744105507046,6.315589462765967,6.316434706886873,6.317279837915176,6.31812485589626,6.318969760875477,6.319814552898148,6.320659232009565,6.321503798254992,6.322348251679658,6.323192592328765,6.324036820247485,6.324880935480956,6.325724938074291,6.3265688280725705,6.327412605520844,6.3282562704641325,6.329099822947427,6.3299432630156875,6.330786590713845,6.3316298060868,6.332472909179423,6.333315900036556,6.334158778703008,6.335001545223562,6.33584419964297,6.336686742005952,6.3375291723572005,6.338371490741379,6.339213697203118,6.340055791787022,6.340897774537664,6.3417396454995885,6.342581404717308,6.343423052235309,6.344264588098046,6.345106012349944,6.345947325035399,6.34678852619878,6.347629615884422,6.348470594136635,6.349311460999696,6.350152216517856,6.350992860735334,6.351833393696321,6.3526738154449784,6.353514126025439,6.354354325481806,6.355194413858153,6.356034391198525,6.35687425754694,6.3577140129473815,6.358553657443808,6.35939319108015,6.360232613900306,6.361071925948146,6.361911127267512,6.362750217902218,6.363589197896048,6.3644280672927565,6.365266826136069,6.366105474469684,6.366944012337271,6.367782439782468,6.368620756848888,6.369458963580113,6.370297060019696,6.3711350462111636,6.371972922198011,6.372810688023708,6.373648343731692,6.374485889365375,6.37532332496814,6.376160650583341,6.3769978662543005,6.377834972024319,6.378671967936663,6.379508854034573,6.380345630361262,6.3811822969599135,6.3820188538736815,6.382855301145693,6.383691638819047,6.384527866936815,6.385363985542038,6.38619999467773,6.3870358943868775,6.3878716847124375,6.388707365697341,6.389542937384488,6.390378399816753,6.391213753036983,6.392048997087993,6.392884132012573,6.393719157853486,6.394554074653465,6.395388882455215,6.396223581301416,6.397058171234716,6.397892652297738,6.398727024533077,6.399561287983299,6.400395442690944,6.401229488698522,6.402063426048518,6.402897254783387,6.403730974945557,6.404564586577428,6.405398089721375,6.4062314844197426,6.407064770714849,6.407897948648984,6.408731018264412,6.409563979603366,6.410396832708057,6.411229577620663,6.412062214383338,6.412894743038209,6.413727163627374,6.4145594761929035,6.4153916807768425,6.416223777421206,6.4170557661679855,6.417887647059143,6.418719420136611,6.419551085442301,6.4203826430180895,6.421214092905834,6.422045435147359,6.422876669784464,6.423707796858922,6.424538816412478,6.425369728486851,6.4262005331237315,6.4270312303647845,6.427861820251646,6.4286923028259295,6.429522678129215,6.4303529462030635,6.431183107089003,6.432013160828537,6.432843107463142,6.433672947034267,6.4345026795833355,6.435332305151745,6.436161823780863,6.436991235512034,6.437820540386574,6.438649738445773,6.439478829730894,6.440307814283173,6.441136692143821,6.441965463354021,6.4427941279549295,6.443622685987678,6.444451137493371,6.445279482513085,6.446107721087872,6.446935853258757,6.447763879066739,6.448591798552789,6.449419611757854,6.450247318722855,6.451074919488683,6.451902414096207,6.4527298025862665,6.4535570849996775,6.454384261377228,6.455211331759682,6.456038296187775,6.456865154702218,6.457691907343694,6.458518554152862,6.459345095170354,6.460171530436777,6.460997859992711,6.46182408387871,6.462650202135302,6.463476214802991,6.464302121922254,6.465127923533538,6.465953619677273,6.466779210393854,6.467604695723657,6.468430075707029,6.469255350384292,6.470080519795741,6.470905583981647,6.471730542982256,6.472555396837785,6.47338014558843,6.474204789274356,6.475029327935709,6.475853761612603,6.47667809034513,6.477502314173356,6.478326433137321,6.479150447277039,6.479974356632501,6.48079816124367,6.481621861150485,6.482445456392859,6.483268947010679,6.484092333043808,6.484915614532084,6.485738791515318,6.4865618640332965,6.487384832125781,6.488207695832509,6.489030455193189,6.489853110247509,6.490675661035129,6.491498107595684,6.492320449968785,6.493142688194017,6.493964822310941,6.49478685235909,6.495608778377978,6.496430600407087,6.497252318485878,6.498073932653788,6.498895442950225,6.499716849414576,6.500538152086201,6.501359351004436,6.502180446208592,6.503001437737955,6.503822325631785,6.50464310992932,6.505463790669772,6.506284367892327,6.507104841636148,6.507925211940372,6.508745478844113,6.509565642386458,6.510385702606471,6.511205659543192,6.512025513235635,6.51284526372279,6.513664911043622,6.514484455237072,6.515303896342057,6.516123234397469,6.516942469442175,6.5177616015150175,6.518580630654817,6.519399556900366,6.520218380290435,6.52103710086377,6.521855718659093,6.522674233715098,6.523492646070461,6.52431095576383,6.525129162833826,6.525947267319053,6.5267652692580835,6.527583168689472,6.528400965651744,6.529218660183403,6.5300362523229305,6.530853742108779,6.531671129579381,6.532488414773143,6.5333055977284475,6.534122678483654,6.534939657077098,6.53575653354709,6.536573307931918,6.537389980269845,6.538206550599109,6.539023018957927,6.539839385384489,6.540655649916965,6.541471812593497,6.5422878734522065,6.543103832531189,6.543919689868518,6.544735445502241,6.545551099470384,6.546366651810949,6.547182102561913,6.547997451761231,6.548812699446833,6.549627845656626,6.550442890428493,6.551257833800295,6.5520726758098675,6.552887416495022,6.55370205589355,6.554516594043216,6.555331030981764,6.556145366746909,6.5569596013763505,6.557773734907758,6.558587767378781,6.559401698827045,6.560215529290152,6.5610292588056796,6.561842887411184,6.562656415144197,6.5634698420422275,6.564283168142761,6.56509639348326,6.565909518101162,6.566722542033886,6.567535465318823,6.5683482879933415,6.569161010094789,6.569973631660491,6.570786152727744,6.571598573333829,6.572410893515998,6.5732231133114825,6.574035232757491,6.574847251891208,6.575659170749798,6.576470989370398,6.577282707790125,6.578094326046072,6.578905844175312,6.57971726221489,6.580528580201833,6.581339798173142,6.582150916165796,6.582961934216753,6.583772852362945,6.584583670641284,6.585394389088659,6.586205007741934,6.587015526637953,6.5878259458135355,6.58863626530548,6.589446485150561,6.590256605385531,6.59106662604712,6.591876547172035,6.59268636879696,6.593496090958558,6.594305713693468,6.595115237038308,6.595924661029672,6.596733985704133,6.597543211098241,6.598352337248522,6.599161364191481,6.599970291963601,6.600779120601343,6.6015878501411445,6.60239648061942,6.603205012072566,6.6040134445369505,6.604821778048923,6.60563001264481,6.606438148360916,6.6072461852335245,6.608054123298892,6.608861962593259,6.609669703152842,6.610477345013831,6.6112848882124,6.612092332784698,6.612899678766852,6.613706926194967,6.6145140751051255,6.61532112553339,6.616128077515798,6.616934931088368,6.617741686287095,6.618548343147952,6.619354901706891,6.62016136199984,6.620967724062709,6.621773987931381,6.622580153641722,6.6233862212295715,6.624192190730753,6.624998062181062,6.625803835616276,6.626609511072151,6.62741508858442,6.6282205681887945,6.629025949920963,6.629831233816594,6.630636419911335,6.631441508240809,6.632246498840622,6.633051391746352,6.633856186993562,6.634660884617789,6.635465484654549,6.63626998713934,6.637074392107634,6.637878699594883,6.638682909636518,6.63948702226795,6.640291037524566,6.641094955441731,6.641898776054792,6.642702499399073,6.643506125509875,6.64430965442248,6.645113086172146,6.645916420794115,6.6467196583236,6.647522798795799,6.648325842245886,6.649128788709015,6.649931638220316,6.650734390814903,6.6515370465278645,6.6523396053942685,6.653142067449162,6.653944432727572,6.654746701264503,6.65554887309494,6.656350948253845,6.657152926776161,6.6579548086968074,6.658756594050685,6.6595582828726725,6.660359875197628,6.661161371060388,6.661962770495768,6.662764073538562,6.663565280223547,6.664366390585474,6.665167404659075,6.665968322479063,6.666769144080128,6.667569869496938,6.668370498764143,6.669171031916372,6.669971468988233,6.670771810014309,6.671572055029168,6.672372204067355,6.673172257163395,6.67397221435179,6.674772075667024,6.67557184114356,6.676371510815838,6.67717108471828,6.677970562885286,6.678769945351237,6.679569232150492,6.680368423317388,6.681167518886245,6.68196651889136,6.682765423367011,6.683564232347454,6.6843629458669245,6.685161563959639,6.685960086659793,6.686758514001561,6.687556846019098,6.688355082746538,6.689153224217994,6.68995127046756,6.690749221529309,6.691547077437295,6.692344838225548,6.693142503928082,6.693940074578889,6.69473755021194,6.695534930861186,6.696332216560558,6.697129407343969,6.6979265032453075,6.698723504298446,6.699520410537235,6.700317221995503,6.701113938707062,6.701910560705702,6.702707088025193,6.703503520699284,6.704299858761706,6.705096102246169,6.705892251186364,6.706688305615958,6.7074842655686036,6.70828013107793,6.709075902177547,6.709871578901045,6.710667161281995,6.711462649353947,6.712258043150429,6.713053342704955,6.713848548051014,6.714643659222077,6.715438676251596,6.716233599173001,6.717028428019704,6.717823162825098,6.7186178036225535,6.719412350445423,6.72020680332704,6.721001162300715,6.721795427399743,6.722589598657398,6.723383676106933,6.724177659781582,6.724971549714561,6.725765345939062,6.726559048488264,6.72735265739532,6.728146172693368,6.728939594415524,6.729732922594885,6.73052615726453,6.731319298457515,6.732112346206881,6.732905300545646,6.73369816150681,6.7344909291233535,6.735283603428239,6.736076184454405,6.736868672234776,6.737661066802254,6.738453368189723,6.739245576430048,6.740037691556072,6.740829713600622,6.741621642596504,6.7424134785765055,6.743205221573393,6.743996871619916,6.744788428748803,6.745579892992764,6.746371264384493,6.747162542956659,6.747953728741915,6.748744821772894,6.749535822082211,6.750326729702461,6.75111754466622,6.751908267006047,6.752698896754477,6.753489433944032,6.75427987860721,6.755070230776491,6.75586049048434,6.756650657763196,6.757440732645487,6.758230715163616,6.759020605349969,6.759810403236913,6.760600108856797,6.76138972224195,6.762179243424683,6.762968672437286,6.763758009312034,6.7645472540811795,6.765336406776959,6.766125467431587,6.766914436077262,6.767703312746163,6.76849209747045,6.769280790282264,6.770069391213727,6.770857900296945,6.7716463175640005,6.772434643046962,6.773222876777876,6.774011018788773,6.774799069111662,6.775587027778537,6.77637489482137,6.777162670272115,6.7779503541627095,6.778737946525071,6.779525447391099,6.780312856792674,6.781100174761656,6.78188740132989,6.782674536529203,6.7834615803914,6.784248532948268,6.785035394231578,6.785822164273081,6.78660884310451,6.78739543075758,6.788181927263987,6.788968332655409,6.789754646963504,6.790540870219915,6.7913270024562635,6.792113043704155,6.792898993995174,6.793684853360891,6.794470621832854,6.795256299442595,6.796041886221627,6.796827382201445,6.797612787413526,6.798398101889329,6.799183325660294,6.799968458757842,6.80075350121338,6.801538453058292,6.802323314323947,6.8031080850416945,6.803892765242866,6.804677354958774,6.8054618542207175,6.806246263059972,6.807030581507797,6.807814809595433,6.808598947354106,6.809382994815021,6.810166952009364,6.8109508189683075,6.811734595723001,6.81251828230458,6.813301878744158,6.814085385072836,6.814868801321692,6.81565212752179,6.816435363704173,6.817218509899868,6.818001566139885,6.818784532455213,6.819567408876827,6.820350195435681,6.821132892162715,6.8219154990888455,6.822698016244978,6.823480443661995,6.824262781370764,6.825045029402133,6.825827187786936,6.826609256555985,6.827391235740075,6.828173125369987,6.828954925476479,6.829736636090297,6.830518257242166,6.8312997889627916,6.832081231282868,6.832862584233065,6.833643847844041,6.834425022146431,6.835206107170857,6.8359871029479224,6.836768009508211,6.837548826882292,6.8383295551007155,6.8391101941940144,6.8398907441927035,6.8406712051272835,6.841451577028233,6.8422318599260175,6.843012053851081,6.843792158833852,6.844572174904744,6.84535210209415,6.846131940432447,6.8469116899499936,6.847691350677133,6.848470922644189,6.849250405881471,6.850029800419268,6.850809106287853,6.851588323517483,6.852367452138396,6.853146492180814,6.8539254436749415,6.854704306650964,6.855483081139053,6.856261767169363,6.857040364772026,6.857818873977164,6.858597294814878,6.859375627315252,6.860153871508354,6.860932027424233,6.861710095092923,6.862488074544441,6.863265965808786,6.86404376891594,6.864821483895869,6.865599110778522,6.866376649593828,6.867154100371704,6.867931463142046,6.868708737934735,6.869485924779635,6.870263023706594,6.871040034745439,6.871816957925986,6.872593793278028,6.873370540831348,6.874147200615707,6.87492377266085,6.875700256996508,6.876476653652391,6.877252962658195,6.878029184043599,6.878805317838265,6.879581364071838,6.880357322773947,6.881133193974203,6.881908977702201,6.88268467398752,6.883460282859722,6.88423580434835,6.885011238482935,6.885786585292987,6.886561844808002,6.887337017057458,6.888112102070819,6.888887099877527,6.889662010507014,6.890436833988691,6.8912115703519525,6.8919862196261805,6.892760781840735,6.893535257024965,6.894309645208198,6.8950839464197475,6.895858160688912,6.89663228804497,6.897406328517187,6.89818028213481,6.89895414892707,6.8997279289231805,6.900501622152342,6.901275228643735,6.902048748426527,6.9028221815298645,6.9035955279828825,6.904368787814698,6.90514196105441,6.905915047731103,6.906688047873844,6.907460961511687,6.908233788673665,6.9090065293887974,6.909779183686087,6.910551751594522,6.911324233143071,6.912096628360688,6.912868937276312,6.913641159918865,6.914413296317252,6.915185346500364,6.915957310497072,6.916729188336235,6.917500980046694,6.918272685657274,6.919044305196784,6.919815838694017,6.920587286177751,6.921358647676746,6.922129923219746,6.922901112835482,6.9236722165526645,6.924443234399992,6.925214166406145,6.9259850125997895,6.926755773009573,6.927526447664128,6.928297036592075,6.929067539822012,6.929837957382525,6.930608289302184,6.931378535609542,6.932148696333138,6.932918771501492,6.933688761143111,6.934458665286487,6.935228483960091,6.935998217192384,6.936767865011807,6.937537427446788,6.938306904525739,6.939076296277054,6.939845602729114,6.940614823910282,6.941383959848907,6.942153010573322,6.942921976111842,6.943690856492771,6.944459651744393,6.945228361894977,6.94599698697278,6.946765527006038,6.947533982022975,6.948302352051798,6.9490706371207,6.949838837257856,6.950606952491428,6.9513749828495595,6.952142928360381,6.952910789052006,6.953678564952534,6.954446256090047,6.955213862492613,6.9559813841882825,6.956748821205095,6.95751617357107,6.9582834413142125,6.959050624462514,6.9598177230439475,6.960584737086474,6.961351666618037,6.9621185116665645,6.96288527225997,6.963651948426151,6.964418540192992,6.965185047588356,6.965951470640099,6.966717809376055,6.967484063824045,6.968250234011877,6.96901631996734,6.969782321718209,6.970548239292243,6.97131407271719,6.972079822020777,6.972845487230719,6.973611068374717,6.974376565480451,6.975141978575593,6.975907307687795,6.976672552844695,6.977437714073917,6.97820279140307,6.978967784859744,6.97973269447152,6.98049752026596,6.98126226227061,6.982026920513003,6.982791495020657,6.983555985821075,6.9843203929417434,6.985084716410134,6.985848956253705,6.9866131124998985,6.9873771851761415,6.988141174309846,6.9889050799284105,6.989668902059216,6.9904326407296296,6.991196295967004,6.991959867798678,6.992723356251972,6.993486761354195,6.994250083132639,6.995013321614581,6.995776476827286,6.996539548798001,6.997302537553959,6.998065443122379,6.998828265530464,6.999591004805402,7.000353660974368,7.00111623406452,7.001878724103004,7.002641131116948,7.003403455133467,7.004165696179662,7.004927854282617,7.005689929469403,7.006451921767076,7.007213831202677,7.0079756578032315,7.008737401595751,7.009499062607235,7.010260640864664,7.011022136395005,7.011783549225213,7.012544879382225,7.0133061268929655,7.014067291784342,7.014828374083253,7.015589373816574,7.016350291011173,7.017111125693899,7.017871877891591,7.018632547631068,7.019393134939139,7.020153639842597,7.0209140623682185,7.021674402542768,7.022434660392995,7.023194835945634,7.023954929227405,7.024714940265014,7.025474869085152,7.026234715714497,7.02699448017971,7.02775416250744,7.028513762724321,7.029273280856971,7.030032716931997,7.030792070975988,7.031551343015519,7.032310533077155,7.03306964118744,7.0338286673729105,7.034587611660083,7.035346474075463,7.03610525464554,7.036863953396792,7.037622570355679,7.038381105548648,7.039139559002133,7.039897930742553,7.040656220796313,7.041414429189803,7.0421725559494,7.042930601101466,7.043688564672347,7.0444464466883785,7.045204247175881,7.045961966161157,7.0467196036705015,7.047477159730188,7.048234634366482,7.048992027605633,7.049749339473872,7.050506569997424,7.051263719202494,7.052020787115273,7.052777773761942,7.053534679168664,7.054291503361591,7.055048246366858,7.055804908210588,7.056561488918888,7.0573179885178545,7.058074407033566,7.0588307444920915,7.059587000919481,7.0603431763417746,7.061099270784996,7.061855284275155,7.06261121683825,7.063367068500264,7.0641228392871644,7.064878529224907,7.065634138339433,7.06638966665667,7.067145114202532,7.067900481002916,7.06865576708371,7.069410972470785,7.070166097189999,7.070921141267197,7.07167610472821,7.072430987598853,7.0731857899049295,7.073940511672229,7.074695152926528,7.075449713693586,7.076204193999152,7.07695859386896,7.07771291332873,7.07846715240417,7.079221311120972,7.079975389504817,7.080729387581369,7.081483305376279,7.082237142915189,7.082990900223721,7.083744577327487,7.084498174252084,7.085251691023097,7.086005127666095,7.086758484206635,7.087511760670262,7.088264957082503,7.089018073468875,7.08977110985488,7.090524066266007,7.091276942727732,7.0920297392655165,7.092782455904809,7.093535092671043,7.094287649589642,7.095040126686013,7.0957925239855495,7.096544841513633,7.097297079295631,7.098049237356897,7.098801315722772,7.099553314418585,7.100305233469646,7.101057072901257,7.1018088327387074,7.102560513007268,7.1033121137321995,7.104063634938749,7.10481507665215,7.105566438897622,7.106317721700372,7.107068925085594,7.107820049078469,7.108571093704161,7.109322058987827,7.110072944954606,7.110823751629623,7.111574479037995,7.112325127204821,7.113075696155188,7.113826185914171,7.114576596506829,7.115326927958211,7.116077180293352,7.116827353537271,7.117577447714978,7.118327462851466,7.119077398971719,7.119827256100703,7.120577034263376,7.121326733484678,7.122076353789539,7.122825895202874,7.123575357749587,7.1243247414545685,7.125074046342695,7.125823272438827,7.126572419767818,7.127321488354505,7.128070478223711,7.12881938940025,7.129568221908918,7.130316975774501,7.131065651021771,7.131814247675489,7.132562765760399,7.133311205301236,7.13405956632272,7.134807848849558,7.135556052906445,7.136304178518062,7.137052225709077,7.137800194504146,7.138548084927912,7.139295897005005,7.140043630760042,7.140791286217626,7.141538863402349,7.1422863623387896,7.1430337830515125,7.14378112556507,7.144528389904003,7.145275576092836,7.146022684156086,7.1467697141182525,7.147516666003825,7.148263539837278,7.149010335643076,7.149757053445667,7.1505036932694885,7.151250255138967,7.151996739078512,7.152743145112525,7.15348947326539,7.154235723561483,7.154981896025162,7.155727990680778,7.156474007552665,7.157219946665147,7.157965808042532,7.15871159170912,7.159457297689195,7.160202926007028,7.16094847668688,7.161693949752997,7.162439345229614,7.163184663140953,7.163929903511222,7.164675066364618,7.165420151725325,7.166165159617515,7.166910090065346,7.1676549430929635,7.168399718724503,7.169144416984085,7.169889037895818,7.1706335814837985,7.171378047772109,7.1721224367848215,7.172866748545994,7.173610983079674,7.174355140409893,7.175099220560674,7.175843223556026,7.176587149419944,7.177330998176412,7.1780747698494025,7.178818464462873,7.179562082040772,7.180305622607032,7.181049086185577,7.181792472800314,7.182535782475141,7.183279015233944,7.184022171100592,7.184765250098948,7.18550825225286,7.186251177586161,7.186994026122676,7.187736797886214,7.188479492900575,7.189222111189544,7.1899646527768954,7.19070711768639,7.191449505941779,7.1921918175667985,7.192934052585172,7.193676211020613,7.194418292896822,7.195160298237488,7.195902227066284,7.196644079406876,7.197385855282914,7.198127554718041,7.1988691777358795,7.1996107243600465,7.200352194614145,7.201093588521765,7.201834906106486,7.202576147391873,7.203317312401481,7.204058401158852,7.204799413687516,7.205540350010991,7.206281210152783,7.207021994136385,7.2077627019852795,7.208503333722935,7.209243889372811,7.209984368958351,7.2107247725029895,7.211465100030147,7.212205351563235,7.212945527125648,7.213685626740775,7.214425650431987,7.215165598222645,7.215905470136098,7.216645266195687,7.217384986424733,7.218124630846553,7.218864199484447,7.219603692361705,7.220343109501605,7.221082450927412,7.221821716662381,7.222560906729753,7.22330002115276,7.224039059954618,7.224778023158534,7.225516910787704,7.226255722865308,7.226994459414519,7.227733120458495,7.228471706020384,7.22921021612332,7.229948650790427,7.230687010044817,7.23142529390959,7.2321635024078335,7.232901635562624,7.233639693397025,7.234377675934092,7.235115583196863,7.2358534152083696,7.236591171991629,7.237328853569645,7.238066459965414,7.238803991201916,7.239541447302124,7.240278828288996,7.241016134185478,7.241753365014508,7.242490520799008,7.243227601561891,7.243964607326057,7.244701538114397,7.245438393949785,7.246175174855089,7.246911880853163,7.247648511966848,7.248385068218976,7.249121549632365,7.249857956229824,7.250594288034149,7.251330545068123,7.25206672735452,7.252802834916102,7.253538867775617,7.254274825955805,7.255010709479391,7.255746518369092,7.2564822526476105,7.257217912337638,7.257953497461857,7.258689008042937,7.259424444103534,7.260159805666294,7.260895092753852,7.261630305388834,7.262365443593847,7.263100507391495,7.263835496804366,7.264570411855037,7.265305252566075,7.266040018960035,7.266774711059459,7.26750932888688,7.268243872464818,7.268978341815782,7.269712736962269,7.270447057926767,7.271181304731751,7.271915477399683,7.272649575953017,7.273383600414194,7.274117550805643,7.274851427149782,7.275585229469019,7.27631895778575,7.277052612122358,7.277786192501218,7.278519698944692,7.279253131475127,7.279986490114869,7.28071977488624,7.28145298581156,7.282186122913134,7.282919186213257,7.283652175734211,7.284385091498269,7.285117933527691,7.285850701844728,7.286583396471618,7.287316017430587,7.288048564743852,7.288781038433619,7.28951343852208,7.290245765031419,7.290978017983808,7.291710197401405,7.29244230330636,7.2931743357208125,7.293906294666888,7.294638180166703,7.295369992242363,7.29610173091596,7.296833396209578,7.297564988145289,7.298296506745152,7.299027952031217,7.299759324025524,7.300490622750098,7.301221848226955,7.301953000478104,7.3026840795255366,7.303415085391236,7.304146018097175,7.304876877665314,7.305607664117605,7.306338377475986,7.307069017762386,7.3077995849987225,7.308530079206902,7.3092605004088185,7.3099908486263585,7.310721123881396,7.311451326195791,7.312181455591398,7.312911512090056,7.313641495713597,7.314371406483838,7.315101244422588,7.315831009551645,7.3165607018927945,7.317290321467812,7.318019868298463,7.318749342406501,7.3194787438136695,7.3202080725417,7.320937328612314,7.321666512047223,7.322395622868126,7.323124661096712,7.3238536267546595,7.324582519863635,7.325311340445295,7.326040088521287,7.326768764113245,7.327497367242794,7.328225897931546,7.328954356201105,7.329682742073062,7.330411055569,7.3311392967104885,7.331867465519088,7.332595562016348,7.3333235862238055,7.33405153816299,7.334779417855418,7.335507225322595,7.336234960586019,7.336962623667173,7.337690214587532,7.33841773336856,7.339145180031712,7.339872554598427,7.340599857090139,7.341327087528271,7.34205424593423,7.342781332329419,7.343508346735226,7.344235289173031,7.344962159664201,7.345688958230096,7.346415684892062,7.347142339671434,7.347868922589541,7.348595433667696,7.349321872927206,7.3500482403893646,7.3507745360754555,7.351500760006753,7.35222691220452,7.352952992690008,7.35367900148446,7.354404938609107,7.35513080408517,7.35585659793386,7.356582320176377,7.35730797083391,7.358033549927638,7.358759057478731,7.359484493508346,7.360209858037632,7.360935151087726,7.361660372679754,7.362385522834835,7.363110601574073,7.363835608918564,7.364560544889395,7.365285409507639,7.366010202794364,7.36673492477062,7.367459575457455,7.3681841548759,7.368908663046979,7.369633099991706,7.370357465731082,7.371081760286101,7.371805983677743,7.372530135926981,7.373254217054777,7.373978227082081,7.374702166029834,7.375426033918967,7.376149830770401,7.376873556605044,7.377597211443796,7.37832079530755,7.379044308217181,7.37976775019356,7.380491121257545,7.381214421429985,7.381937650731719,7.382660809183574,7.383383896806369,7.384106913620911,7.384829859647999,7.385552734908419,7.3862755394229485,7.386998273212354,7.387720936297394,7.388443528698813,7.3891660504373515,7.389888501533732,7.390610882008672,7.391333191882879,7.392055431177048,7.392777599911864,7.3934996981080054,7.394221725786135,7.394943682966912,7.39566556967098,7.396387385918974,7.397109131731521,7.397830807129235,7.398552412132723,7.3992739467625785,7.399995411039389,7.400716804983728,7.401438128616161,7.402159381957243,7.4028805650275205,7.403601677847527,7.404322720437788,7.40504369281882,7.405764595011128,7.406485427035205,7.407206188911539,7.407926880660604,7.408647502302865,7.4093680538587785,7.410088535348789,7.410808946793333,7.411529288212835,7.4122495596277105,7.412969761058366,7.4136898925251975,7.4144099540485895,7.4151299456489195,7.4158498673465525,7.416569719161846,7.417289501115145,7.418009213226787,7.418728855517099,7.419448428006396,7.420167930714986,7.420887363663166,7.421606726871224,7.422326020359436,7.42304524414807,7.423764398257384,7.424483482707626,7.425202497519034,7.425921442711836,7.4266403183062515,7.427359124322488,7.428077860780745,7.428796527701213,7.42951512510407,7.430233653009485,7.43095211143762,7.4316705004086225,7.432388819942637,7.43310707005979,7.433825250780205,7.434543362123993,7.4352614041112535,7.435979376762082,7.436697280096557,7.437415114134753,7.438132878896734,7.43885057440255,7.439568200672246,7.4402857577258565,7.4410032455834045,7.441720664264905,7.442438013790363,7.443155294179773,7.443872505453121,7.444589647630383,7.445306720731525,7.446023724776503,7.446740659785265,7.447457525777748,7.448174322773881,7.448891050793581,7.449607709856757,7.450324299983309,7.451040821193125,7.451757273506086,7.452473656942062,7.4531899715209144,7.453906217262495,7.454622394186645,7.455338502313196,7.45605454166197,7.456770512252784,7.457486414105437,7.458202247239727,7.458918011675436,7.459633707432342,7.460349334530209,7.461064892988793,7.4617803828278415,7.462495804067092,7.463211156726271,7.463926440825099,7.464641656383283,7.465356803420525,7.466071881956512,7.466786892010926,7.467501833603439,7.468216706753712,7.468931511481398,7.46964624780614,7.4703609157475706,7.471075515325315,7.471790046558988,7.4725045094681946,7.473218904072531,7.473933230391584,7.474647488444931,7.475361678252141,7.4760757998327705,7.476789853206371,7.477503838392481,7.478217755410632,7.478931604280344,7.479645385021131,7.480359097652494,7.481072742193928,7.481786318664915,7.482499827084933,7.483213267473444,7.483926639849908,7.484639944233768,7.485353180644465,7.486066349101426,7.48677944962407,7.487492482231808,7.488205446944039,7.488918343780155,7.48963117275954,7.490343933901566,7.491056627225596,7.491769252750986,7.492481810497081,7.493194300483216,7.493906722728719,7.494619077252907,7.495331364075091,7.4960435832145675,7.49675573469063,7.497467818522557,7.498179834729621,7.498891783331086,7.499603664346203,7.500315477794221,7.501027223694371,7.501738902065881,7.50245051292797,7.503162056299844,7.503873532200702,7.5045849406497345,7.505296281666122,7.506007555269036,7.50671876147764,7.507429900311087,7.508140971788521,7.508851975929078,7.509562912751884,7.510273782276056,7.510984584520703,7.511695319504923,7.512405987247808,7.513116587768438,7.5138271210858845,7.514537587219212,7.5152479861874735,7.515958318009714,7.516668582704971,7.517378780292269,7.518088910790629,7.518798974219059,7.519508970596559,7.520218899942119,7.520928762274723,7.521638557613343,7.522348285976944,7.523057947384481,7.523767541854901,7.5244770694071414,7.52518653006013,7.525895923832787,7.526605250744023,7.52731451081274,7.528023704057831,7.528732830498179,7.52944189015266,7.5301508830401405,7.530859809179477,7.531568668589518,7.5322774612891035,7.532986187297064,7.533694846632222,7.534403439313389,7.535111965359372,7.535820424788963,7.536528817620951,7.537237143874113,7.537945403567217,7.538653596719024,7.539361723348285,7.540069783473742,7.540777777114129,7.54148570428817,7.542193565014583,7.542901359312073,7.543609087199339,7.544316748695072,7.5450243438179525,7.545731872586652,7.546439335019834,7.547146731136155,7.547854060954258,7.548561324492782,7.5492685217703555,7.549975652805598,7.55068271761712,7.5513897162235235,7.552096648643404,7.552803514895344,7.553510314997922,7.554217048969704,7.55492371682925,7.555630318595108,7.5563368542858225,7.557043323919925,7.557749727515938,7.55845606509238,7.559162336667756,7.559868542260563,7.560574681889294,7.561280755572428,7.561986763328436,7.562692705175785,7.563398581132926,7.564104391218309,7.56481013545037,7.565515813847537,7.566221426428235,7.566926973210872,7.567632454213853,7.568337869455574,7.569043218954419,7.569748502728767,7.570453720796987,7.57115887317744,7.5718639598884785,7.572568980948445,7.573273936375675,7.573978826188495,7.574683650405222,7.575388409044168,7.5760931021236315,7.576797729661905,7.577502291677274,7.578206788188013,7.578911219212389,7.579615584768661,7.5803198848750775,7.58102411954988,7.581728288811305,7.582432392677572,7.5831364311669,7.583840404297496,7.5845443120875595,7.585248154555281,7.585951931718841,7.5866556435964165,7.587359290206171,7.588062871566263,7.588766387694839,7.58946983861004,7.590173224329999,7.590876544872838,7.591579800256672,7.5922829904996085,7.592986115619745,7.593689175635171,7.594392170563967,7.595095100424209,7.5957979652339604,7.596500765011276,7.597203499774206,7.5979061695407895,7.5986087743290565,7.599311314157031,7.600013789042729,7.600716199004154,7.601418544059305,7.602120824226172,7.602823039522739,7.603525189966974,7.604227275576846,7.604929296370308,7.605631252365311,7.606333143579794,7.607034970031688,7.6077367317389175,7.6084384287193965,7.609140060991033,7.609841628571725,7.610543131479362,7.611244569731828,7.611945943346995,7.61264725234273,7.61334849673689,7.614049676547324,7.614750791791872,7.615451842488368,7.616152828654636,7.616853750308493,7.6175546074677465,7.618255400150197,7.618956128373635,7.619656792155846,7.620357391514603,7.621057926467676,7.6217583970328215,7.622458803227793,7.62315914507033,7.62385942257817,7.624559635769039,7.625259784660654,7.625959869270725,7.626659889616955,7.627359845717039,7.628059737588661,7.628759565249499,7.629459328717223,7.630159028009495,7.630858663143968,7.631558234138287,7.632257741010089,7.632957183777004,7.633656562456651,7.634355877066646,7.635055127624593,7.6357543141480875,7.636453436654719,7.637152495162068,7.637851489687708,7.638550420249203,7.639249286864111,7.639948089549978,7.640646828324346,7.641345503204749,7.642044114208709,7.642742661353744,7.643441144657363,7.644139564137064,7.644837919810343,7.645536211694683,7.646234439807559,7.646932604166442,7.647630704788791,7.648328741692059,7.649026714893691,7.649724624411124,7.650422470261786,7.651120252463098,7.651817971032474,7.652515625987317,7.6532132173450265,7.653910745122989,7.654608209338587,7.655305610009194,7.6560029471521736,7.656700220784885,7.657397430924677,7.658094577588892,7.658791660794862,7.659488680559915,7.6601856369013674,7.660882529836529,7.661579359382704,7.6622761255571845,7.662972828377258,7.6636694678602035,7.664366044023292,7.665062556883784,7.665759006458938,7.666455392765998,7.6671517158222064,7.667847975644793,7.668544172250981,7.669240305657987,7.669936375883021,7.670632382943279,7.671328326855958,7.67202420763824,7.672720025307304,7.673415779880317,7.674111471374441,7.67480709980683,7.67550266519463,7.676198167554979,7.676893606905006,7.677588983261835,7.6782842966425795,7.678979547064348,7.679674734544238,7.6803698590993426,7.681064920746744,7.68175991950352,7.682454855386738,7.683149728413459,7.683844538600735,7.684539285965612,7.685233970525128,7.685928592296311,7.686623151296186,7.687317647541764,7.688012081050054,7.688706451838055,7.689400759922757,7.690095005321144,7.690789188050193,7.691483308126871,7.69217736556814,7.692871360390953,7.693565292612255,7.694259162248984,7.694952969318069,7.695646713836434,7.696340395820994,7.697034015288655,7.697727572256317,7.698421066740873,7.699114498759206,7.699807868328193,7.700501175464704,7.701194420185601,7.701887602507737,7.7025807224479585,7.703273780023105,7.703966775250007,7.704659708145489,7.705352578726367,7.706045387009449,7.7067381330115365,7.707430816749424,7.7081234382398955,7.708815997499731,7.7095084945457,7.710200929394567,7.710893302063088,7.71158561256801,7.712277860926074,7.712970047154014,7.713662171268556,7.714354233286418,7.71504623322431,7.715738171098936,7.716430046926992,7.717121860725166,7.717813612510138,7.718505302298582,7.719196930107164,7.719888495952542,7.720579999851368,7.721271441820283,7.721962821875926,7.7226541400349245,7.723345396313899,7.7240365907294635,7.7247277232982245,7.7254187940367816,7.726109802961724,7.726800750089638,7.7274916354371,7.728182459020677,7.728873220856933,7.729563920962421,7.730254559353689,7.730945136047276,7.731635651059714,7.732326104407529,7.733016496107237,7.733706826175348,7.734397094628367,7.735087301482787,7.735777446755097,7.736467530461777,7.7371575526193,7.737847513244135,7.738537412352735,7.739227249961556,7.739917026087039,7.740606740745624,7.7412963939537365,7.7419859857278,7.742675516084231,7.743364985039433,7.744054392609809,7.744743738811751,7.745433023661644,7.746122247175867,7.74681140937079,7.7475005102627765,7.748189549868184,7.74887852820336,7.749567445284646,7.7502563011283785,7.750945095750884,7.751633829168481,7.752322501397485,7.753011112454199,7.753699662354922,7.754388151115945,7.7550765787535525,7.755764945284021,7.756453250723618,7.757141495088608,7.757829678395245,7.758517800659777,7.759205861898442,7.759893862127477,7.760581801363106,7.761269679621548,7.761957496919016,7.762645253271712,7.763332948695836,7.764020583207577,7.764708156823118,7.765395669558635,7.766083121430297,7.766770512454265,7.767457842646693,7.7681451120237295,7.768832320601514,7.7695194683961795,7.770206555423851,7.770893581700648,7.771580547242682,7.772267452066058,7.772954296186872,7.773641079621215,7.774327802385169,7.775014464494812,7.775701065966213,7.776387606815431,7.777074087058524,7.777760506711537,7.778446865790513,7.779133164311484,7.779819402290475,7.780505579743509,7.781191696686595,7.78187775313574,7.7825637491069415,7.783249684616191,7.783935559679472,7.784621374312762,7.785307128532031,7.785992822353241,7.78667845579235,7.787364028865305,7.788049541588048,7.788734993976515,7.789420386046634,7.790105717814325,7.790790989295501,7.791476200506071,7.792161351461933,7.7928464421789805,7.7935314726730995,7.794216442960169,7.79490135305606,7.795586202976639,7.796270992737764,7.796955722355285,7.797640391845046,7.798325001222884,7.79900955050463,7.799694039706108,7.800378468843132,7.801062837931513,7.801747146987052,7.802431396025545,7.803115585062781,7.803799714114542,7.804483783196603,7.805167792324729,7.805851741514685,7.806535630782221,7.807219460143087,7.8079032296130215,7.808586939207759,7.809270588943025,7.809954178834539,7.810637708898014,7.8113211791491555,7.812004589603663,7.812687940277228,7.813371231185536,7.814054462344265,7.814737633769086,7.815420745475664,7.8161037974796574,7.8167867897967165,7.817469722442486,7.818152595432602,7.818835408782697,7.819518162508392,7.8202008566253065,7.820883491149047,7.821566066095219,7.822248581479419,7.822931037317236,7.823613433624252,7.824295770416044,7.824978047708181,7.825660265516225,7.826342423855732,7.827024522742251,7.827706562191323,7.828388542218484,7.829070462839262,7.8297523240691795,7.830434125923751,7.831115868418485,7.831797551568882,7.832479175390438,7.8331607398986405,7.83384224510897,7.834523691036903,7.835205077697905,7.835886405107438,7.836567673280957,7.837248882233909,7.837930031981734,7.838611122539867,7.839292153923737,7.839973126148763,7.84065403923036,7.841334893183934,7.842015688024886,7.842696423768611,7.843377100430497,7.8440577180259226,7.844738276570263,7.845418776078886,7.8460992165671515,7.846779598050413,7.847459920544019,7.848140184063309,7.848820388623619,7.849500534240275,7.850180620928597,7.850860648703901,7.8515406175814935,7.852220527576676,7.852900378704741,7.853580170980978,7.854259904420667,7.854939579039082,7.855619194851493,7.856298751873159,7.856978250119336,7.85765768960527,7.858337070346205,7.859016392357374,7.859695655654005,7.860374860251322,7.861054006164538,7.861733093408862,7.862412121999496,7.863091091951635,7.863770003280468,7.864448856001178,7.865127650128939,7.865806385678922,7.866485062666289,7.867163681106196,7.867842241013792,7.868520742404221,7.869199185292618,7.869877569694115,7.870555895623833,7.871234163096892,7.8719123721284,7.872590522733461,7.873268614927174,7.873946648724627,7.874624624140908,7.8753025411910915,7.875980399890252,7.876658200253451,7.87733594229575,7.8780136260322005,7.878691251477846,7.879368818647728,7.880046327556878,7.880723778220321,7.8814011706530795,7.8820785048701625,7.88275578088658,7.883432998717331,7.8841101583774105,7.884787259881804,7.885464303245494,7.886141288483455,7.8868182156106545,7.887495084642055,7.88817189559261,7.88884864847727,7.889525343310977,7.890201980108667,7.8908785588852695,7.891555079655708,7.892231542434899,7.892907947237754,7.893584294079175,7.894260582974062,7.894936813937304,7.895612986983788,7.8962891021283905,7.896965159385985,7.897641158771438,7.898317100299607,7.898992983985347,7.8996688098435035,7.900344577888918,7.901020288136422,7.901695940600847,7.902371535297012,7.903047072239731,7.903722551443814,7.904397972924064,7.905073336695277,7.905748642772242,7.906423891169742,7.907099081902555,7.907774214985451,7.908449290433194,7.9091243082605445,7.909799268482252,7.910474171113064,7.911149016167718,7.9118238036609485,7.912498533607481,7.913173206022036,7.9138478209193295,7.914522378314067,7.915196878220952,7.915871320654678,7.916545705629935,7.917220033161406,7.917894303263769,7.9185685159516925,7.91924267123984,7.919916769142872,7.920590809675438,7.921264792852183,7.921938718687748,7.922612587196766,7.923286398393861,7.923960152293656,7.924633848910765,7.925307488259795,7.925981070355349,7.926654595212022],"x":[3.0,3.0033986405437827,3.006797281087565,3.0101959216313476,3.01359456217513,3.0169932027189126,3.020391843262695,3.0237904838064775,3.0271891243502598,3.0305877648940425,3.0339864054378247,3.0373850459816074,3.0407836865253897,3.0441823270691724,3.0475809676129546,3.0509796081567373,3.05437824870052,3.0577768892443022,3.061175529788085,3.064574170331867,3.06797281087565,3.071371451419432,3.074770091963215,3.078168732506997,3.0815673730507798,3.084966013594562,3.0883646541383447,3.091763294682127,3.0951619352259097,3.098560575769692,3.1019592163134746,3.1053578568572573,3.1087564974010395,3.1121551379448222,3.1155537784886045,3.118952419032387,3.1223510595761694,3.125749700119952,3.1291483406637344,3.132546981207517,3.1359456217512993,3.139344262295082,3.1427429028388643,3.146141543382647,3.1495401839264296,3.152938824470212,3.1563374650139946,3.159736105557777,3.1631347461015595,3.166533386645342,3.1699320271891245,3.1733306677329067,3.1767293082766894,3.1801279488204717,3.1835265893642544,3.1869252299080366,3.1903238704518193,3.1937225109956016,3.1971211515393843,3.200519792083167,3.203918432626949,3.207317073170732,3.210715713714514,3.214114354258297,3.217512994802079,3.220911635345862,3.224310275889644,3.2277089164334267,3.231107556977209,3.2345061975209917,3.237904838064774,3.2413034786085566,3.244702119152339,3.2481007596961216,3.2514994002399042,3.2548980407836865,3.258296681327469,3.2616953218712514,3.265093962415034,3.2684926029588164,3.271891243502599,3.2752898840463813,3.278688524590164,3.2820871651339463,3.285485805677729,3.288884446221511,3.292283086765294,3.295681727309076,3.299080367852859,3.3024790083966415,3.305877648940424,3.3092762894842065,3.3126749300279887,3.3160735705717714,3.3194722111155537,3.3228708516593364,3.3262694922031186,3.3296681327469013,3.3330667732906836,3.3364654138344663,3.3398640543782485,3.343262694922031,3.3466613354658135,3.350059976009596,3.353458616553379,3.356857257097161,3.360255897640944,3.363654538184726,3.3670531787285087,3.370451819272291,3.3738504598160737,3.377249100359856,3.3806477409036386,3.384046381447421,3.3874450219912036,3.390843662534986,3.3942423030787685,3.3976409436225508,3.4010395841663335,3.404438224710116,3.4078368652538984,3.411235505797681,3.4146341463414633,3.418032786885246,3.4214314274290283,3.424830067972811,3.4282287085165932,3.431627349060376,3.435025989604158,3.438424630147941,3.441823270691723,3.445221911235506,3.4486205517792885,3.4520191923230708,3.4554178328668534,3.4588164734106357,3.4622151139544184,3.4656137544982006,3.4690123950419833,3.4724110355857656,3.4758096761295483,3.4792083166733305,3.482606957217113,3.4860055977608955,3.489404238304678,3.4928028788484604,3.496201519392243,3.499600159936026,3.502998800479808,3.5063974410235907,3.509796081567373,3.5131947221111557,3.516593362654938,3.5199920031987206,3.523390643742503,3.5267892842862856,3.530187924830068,3.5335865653738505,3.5369852059176328,3.5403838464614155,3.5437824870051977,3.5471811275489804,3.550579768092763,3.5539784086365453,3.557377049180328,3.5607756897241103,3.564174330267893,3.5675729708116752,3.570971611355458,3.57437025189924,3.577768892443023,3.581167532986805,3.584566173530588,3.58796481407437,3.5913634546181528,3.594762095161935,3.5981607357057177,3.6015593762495004,3.6049580167932826,3.6083566573370653,3.6117552978808476,3.6151539384246303,3.6185525789684125,3.6219512195121952,3.6253498600559775,3.62874850059976,3.6321471411435424,3.635545781687325,3.6389444222311074,3.64234306277489,3.6457417033186723,3.649140343862455,3.6525389844062377,3.65593762495002,3.6593362654938026,3.662734906037585,3.6661335465813676,3.66953218712515,3.6729308276689325,3.676329468212715,3.6797281087564975,3.6831267493002797,3.6865253898440624,3.6899240303878447,3.6933226709316274,3.69672131147541,3.7001199520191923,3.703518592562975,3.7069172331067572,3.71031587365054,3.713714514194322,3.717113154738105,3.720511795281887,3.72391043582567,3.727309076369452,3.7307077169132348,3.734106357457017,3.7375049980007997,3.740903638544582,3.7443022790883647,3.7477009196321474,3.7510995601759296,3.7544982007197123,3.7578968412634945,3.7612954818072772,3.7646941223510595,3.768092762894842,3.7714914034386244,3.774890043982407,3.7782886845261894,3.781687325069972,3.7850859656137543,3.788484606157537,3.7918832467013193,3.795281887245102,3.7986805277888847,3.802079168332667,3.8054778088764496,3.808876449420232,3.8122750899640145,3.815673730507797,3.8190723710515795,3.8224710115953617,3.8258696521391444,3.8292682926829267,3.8326669332267094,3.8360655737704916,3.8394642143142743,3.8428628548580566,3.8462614954018393,3.849660135945622,3.853058776489404,3.856457417033187,3.859856057576969,3.863254698120752,3.866653338664534,3.870051979208317,3.873450619752099,3.8768492602958817,3.880247900839664,3.8836465413834467,3.887045181927229,3.8904438224710116,3.893842463014794,3.8972411035585766,3.9006397441023593,3.9040383846461415,3.907437025189924,3.9108356657337064,3.914234306277489,3.9176329468212714,3.921031587365054,3.9244302279088363,3.927828868452619,3.9312275089964013,3.934626149540184,3.938024790083966,3.941423430627749,3.9448220711715316,3.948220711715314,3.9516193522590966,3.955017992802879,3.9584166333466615,3.9618152738904437,3.9652139144342264,3.9686125549780087,3.9720111955217914,3.9754098360655736,3.9788084766093563,3.9822071171531386,3.9856057576969213,3.9890043982407035,3.992403038784486,3.995801679328269,3.999200319872051,4.002598960415834,4.005997600959616,4.009396241503398,4.0127948820471815,4.016193522590964,4.019592163134746,4.022990803678528,4.026389444222311,4.029788084766094,4.033186725309876,4.036585365853658,4.039984006397441,4.0433826469412235,4.046781287485006,4.050179928028789,4.053578568572571,4.056977209116353,4.060375849660136,4.063774490203919,4.067173130747701,4.070571771291483,4.0739704118352655,4.077369052379049,4.080767692922831,4.084166333466613,4.087564974010395,4.090963614554179,4.094362255097961,4.097760895641743,4.101159536185526,4.1045581767293084,4.107956817273091,4.111355457816873,4.114754098360656,4.118152738904438,4.121551379448221,4.124950019992003,4.128348660535786,4.131747301079568,4.1351459416233505,4.138544582167133,4.141943222710916,4.145341863254698,4.14874050379848,4.1521391443422635,4.155537784886046,4.158936425429828,4.16233506597361,4.165733706517393,4.169132347061176,4.172530987604958,4.17592962814874,4.179328268692523,4.1827269092363055,4.186125549780088,4.18952419032387,4.192922830867653,4.196321471411435,4.199720111955218,4.203118752499001,4.206517393042783,4.209916033586565,4.2133146741303475,4.216713314674131,4.220111955217913,4.223510595761695,4.226909236305477,4.230307876849261,4.233706517393043,4.237105157936825,4.240503798480607,4.2439024390243905,4.247301079568173,4.250699720111955,4.254098360655738,4.25749700119952,4.260895641743303,4.264294282287085,4.267692922830868,4.27109156337465,4.2744902039184325,4.277888844462215,4.281287485005998,4.28468612554978,4.288084766093562,4.291483406637345,4.294882047181128,4.29828068772491,4.301679328268692,4.305077968812475,4.308476609356258,4.31187524990004,4.315273890443822,4.318672530987605,4.3220711715313875,4.32546981207517,4.328868452618952,4.332267093162735,4.335665733706517,4.3390643742503,4.342463014794083,4.345861655337865,4.349260295881647,4.35265893642543,4.356057576969213,4.359456217512995,4.362854858056777,4.3662534986005594,4.369652139144343,4.373050779688125,4.376449420231907,4.379848060775689,4.3832467013194725,4.386645341863255,4.390043982407037,4.39344262295082,4.396841263494602,4.400239904038385,4.403638544582167,4.40703718512595,4.410435825669732,4.4138344662135145,4.417233106757297,4.42063174730108,4.424030387844862,4.427429028388644,4.430827668932427,4.43422630947621,4.437624950019992,4.441023590563774,4.444422231107557,4.44782087165134,4.451219512195122,4.454618152738904,4.458016793282687,4.4614154338264695,4.464814074370252,4.468212714914034,4.471611355457817,4.475009996001599,4.478408636545382,4.481807277089164,4.485205917632947,4.488604558176729,4.492003198720512,4.495401839264295,4.498800479808077,4.502199120351859,4.5055977608956415,4.508996401439425,4.512395041983207,4.515793682526989,4.519192323070771,4.5225909636145545,4.525989604158337,4.529388244702119,4.532786885245901,4.536185525789684,4.539584166333467,4.542982806877249,4.546381447421032,4.549780087964814,4.5531787285085965,4.556577369052379,4.559976009596162,4.563374650139944,4.566773290683726,4.570171931227509,4.573570571771292,4.576969212315074,4.580367852858856,4.5837664934026385,4.587165133946422,4.590563774490204,4.593962415033986,4.597361055577769,4.600759696121552,4.604158336665334,4.607556977209116,4.610955617752899,4.614354258296681,4.617752898840464,4.621151539384246,4.624550179928029,4.627948820471811,4.631347461015594,4.634746101559376,4.638144742103159,4.641543382646941,4.6449420231907235,4.648340663734507,4.651739304278289,4.655137944822071,4.658536585365853,4.6619352259096365,4.665333866453419,4.668732506997201,4.672131147540983,4.675529788084766,4.678928428628549,4.682327069172331,4.685725709716113,4.689124350259896,4.6925229908036785,4.695921631347461,4.699320271891244,4.702718912435026,4.706117552978808,4.709516193522591,4.712914834066374,4.716313474610156,4.719712115153938,4.7231107556977205,4.726509396241504,4.729908036785286,4.733306677329068,4.73670531787285,4.740103958416634,4.743502598960416,4.746901239504198,4.750299880047981,4.7536985205917635,4.757097161135546,4.760495801679328,4.763894442223111,4.767293082766893,4.770691723310676,4.774090363854458,4.777489004398241,4.780887644942023,4.7842862854858055,4.787684926029588,4.791083566573371,4.794482207117153,4.797880847660935,4.8012794882047185,4.804678128748501,4.808076769292283,4.811475409836065,4.814874050379848,4.818272690923631,4.821671331467413,4.825069972011195,4.828468612554978,4.8318672530987605,4.835265893642543,4.838664534186325,4.842063174730108,4.84546181527389,4.848860455817673,4.852259096361456,4.855657736905238,4.85905637744902,4.8624550179928026,4.865853658536586,4.869252299080368,4.87265093962415,4.876049580167932,4.879448220711716,4.882846861255498,4.88624550179928,4.889644142343063,4.8930427828868455,4.896441423430628,4.89984006397441,4.903238704518193,4.906637345061975,4.910035985605758,4.91343462614954,4.916833266693323,4.920231907237105,4.9236305477808875,4.92702918832467,4.930427828868453,4.933826469412235,4.937225109956017,4.9406237504998005,4.944022391043583,4.947421031587365,4.950819672131147,4.95421831267493,4.957616953218713,4.961015593762495,4.964414234306277,4.96781287485006,4.9712115153938425,4.974610155937625,4.978008796481407,4.98140743702519,4.984806077568972,4.988204718112755,4.991603358656538,4.99500199920032,4.998400639744102,5.001799280287885,5.005197920831668,5.00859656137545,5.011995201919232,5.0153938424630145,5.018792483006798,5.02219112355058,5.025589764094362,5.028988404638144,5.0323870451819275,5.03578568572571,5.039184326269492,5.042582966813275,5.045981607357057,5.04938024790084,5.052778888444622,5.056177528988405,5.059576169532187,5.0629748100759695,5.066373450619752,5.069772091163535,5.073170731707317,5.076569372251099,5.079968012794882,5.083366653338665,5.086765293882447,5.090163934426229,5.093562574970012,5.096961215513795,5.100359856057577,5.103758496601359,5.107157137145142,5.1105557776889246,5.113954418232707,5.117353058776489,5.120751699320272,5.124150339864054,5.127548980407837,5.130947620951619,5.134346261495402,5.137744902039184,5.141143542582967,5.14454218312675,5.147940823670532,5.151339464214314,5.1547381047580965,5.15813674530188,5.161535385845662,5.164934026389444,5.168332666933226,5.1717313074770095,5.175129948020792,5.178528588564574,5.181927229108356,5.185325869652139,5.188724510195922,5.192123150739704,5.195521791283487,5.198920431827269,5.2023190723710515,5.205717712914834,5.209116353458617,5.212514994002399,5.215913634546181,5.219312275089964,5.222710915633747,5.226109556177529,5.229508196721311,5.2329068372650935,5.236305477808877,5.239704118352659,5.243102758896441,5.246501399440224,5.249900039984007,5.253298680527789,5.256697321071571,5.260095961615354,5.2634946021591364,5.266893242702919,5.270291883246701,5.273690523790484,5.277089164334266,5.280487804878049,5.283886445421831,5.287285085965614,5.290683726509396,5.2940823670531785,5.297481007596962,5.300879648140744,5.304278288684526,5.307676929228308,5.3110755697720915,5.314474210315874,5.317872850859656,5.321271491403438,5.324670131947221,5.328068772491004,5.331467413034786,5.334866053578568,5.338264694122351,5.3416633346661335,5.345061975209916,5.348460615753699,5.351859256297481,5.355257896841263,5.358656537385046,5.362055177928829,5.365453818472611,5.368852459016393,5.3722510995601755,5.375649740103959,5.379048380647741,5.382447021191523,5.385845661735305,5.389244302279089,5.392642942822871,5.396041583366653,5.399440223910436,5.4028388644542185,5.406237504998001,5.409636145541783,5.413034786085566,5.416433426629348,5.419832067173131,5.423230707716913,5.426629348260696,5.430027988804478,5.4334266293482605,5.436825269892044,5.440223910435826,5.443622550979608,5.44702119152339,5.4504198320671735,5.453818472610956,5.457217113154738,5.46061575369852,5.464014394242303,5.467413034786086,5.470811675329868,5.47421031587365,5.477608956417433,5.4810075969612155,5.484406237504998,5.487804878048781,5.491203518592563,5.494602159136345,5.498000799680128,5.501399440223911,5.504798080767693,5.508196721311475,5.511595361855258,5.514994002399041,5.518392642942823,5.521791283486605,5.5251899240303874,5.528588564574171,5.531987205117953,5.535385845661735,5.538784486205518,5.5421831267493005,5.545581767293083,5.548980407836865,5.552379048380648,5.55577768892443,5.559176329468213,5.562574970011995,5.565973610555778,5.56937225109956,5.5727708916433425,5.576169532187125,5.579568172730908,5.58296681327469,5.586365453818472,5.5897640943622555,5.593162734906038,5.59656137544982,5.599960015993602,5.603358656537385,5.606757297081168,5.61015593762495,5.613554578168732,5.616953218712515,5.6203518592562975,5.62375049980008,5.627149140343862,5.630547780887645,5.633946421431427,5.63734506197521,5.640743702518993,5.644142343062775,5.647540983606557,5.65093962415034,5.654338264694123,5.657736905237905,5.661135545781687,5.6645341863254695,5.667932826869253,5.671331467413035,5.674730107956817,5.678128748500599,5.6815273890443825,5.684926029588165,5.688324670131947,5.69172331067573,5.695121951219512,5.698520591763295,5.701919232307077,5.70531787285086,5.708716513394642,5.7121151539384245,5.715513794482207,5.71891243502599,5.722311075569772,5.725709716113554,5.729108356657337,5.73250699720112,5.735905637744902,5.739304278288684,5.742702918832467,5.74610155937625,5.749500199920032,5.752898840463814,5.756297481007597,5.7596961215513796,5.763094762095162,5.766493402638944,5.769892043182727,5.773290683726509,5.776689324270292,5.780087964814074,5.783486605357857,5.786885245901639,5.790283886445422,5.793682526989205,5.797081167532987,5.800479808076769,5.8038784486205515,5.807277089164335,5.810675729708117,5.814074370251899,5.817473010795681,5.8208716513394645,5.824270291883247,5.827668932427029,5.831067572970811,5.834466213514594,5.837864854058377,5.841263494602159,5.844662135145942,5.848060775689724,5.8514594162335065,5.854858056777289,5.858256697321072,5.861655337864854,5.865053978408636,5.868452618952419,5.871851259496202,5.875249900039984,5.878648540583766,5.8820471811275485,5.885445821671332,5.888844462215114,5.892243102758896,5.895641743302679,5.899040383846462,5.902439024390244,5.905837664934026,5.909236305477809,5.9126349460215915,5.916033586565374,5.919432227109156,5.922830867652939,5.926229508196721,5.929628148740504,5.933026789284287,5.936425429828069,5.939824070371851,5.9432227109156335,5.946621351459417,5.950019992003199,5.953418632546981,5.956817273090763,5.9602159136345465,5.963614554178329,5.967013194722111,5.970411835265893,5.973810475809676,5.977209116353459,5.980607756897241,5.984006397441024,5.987405037984806,5.9908036785285885,5.994202319072371,5.997600959616154,6.000999600159936,6.004398240703718,6.007796881247501,6.011195521791284,6.014594162335066,6.017992802878848,6.0213914434226306,6.024790083966414,6.028188724510196,6.031587365053978,6.034986005597761,6.038384646141544,6.041783286685326,6.045181927229108,6.048580567772891,6.0519792083166735,6.055377848860456,6.058776489404238,6.062175129948021,6.065573770491803,6.068972411035586,6.072371051579368,6.075769692123151,6.079168332666933,6.0825669732107155,6.085965613754499,6.089364254298281,6.092762894842063,6.096161535385845,6.0995601759296285,6.102958816473411,6.106357457017193,6.109756097560975,6.113154738104758,6.116553378648541,6.119952019192323,6.123350659736105,6.126749300279888,6.1301479408236705,6.133546581367453,6.136945221911236,6.140343862455018,6.1437425029988,6.147141143542583,6.150539784086366,6.153938424630148,6.15733706517393,6.160735705717713,6.164134346261496,6.167532986805278,6.17093162734906,6.1743302678928424,6.177728908436626,6.181127548980408,6.18452618952419,6.187924830067973,6.1913234706117555,6.194722111155538,6.19812075169932,6.201519392243103,6.204918032786885,6.208316673330668,6.21171531387445,6.215113954418233,6.218512594962015,6.2219112355057975,6.22530987604958,6.228708516593363,6.232107157137145,6.235505797680927,6.2389044382247105,6.242303078768493,6.245701719312275,6.249100359856057,6.25249900039984,6.255897640943623,6.259296281487405,6.262694922031187,6.26609356257497,6.2694922031187525,6.272890843662535,6.276289484206317,6.2796881247501,6.283086765293882,6.286485405837665,6.289884046381448,6.29328268692523,6.296681327469012,6.300079968012795,6.303478608556578,6.30687724910036,6.310275889644142,6.3136745301879245,6.317073170731708,6.32047181127549,6.323870451819272,6.327269092363054,6.3306677329068375,6.33406637345062,6.337465013994402,6.340863654538185,6.344262295081967,6.34766093562575,6.351059576169532,6.354458216713315,6.357856857257097,6.3612554978008795,6.364654138344662,6.368052778888445,6.371451419432227,6.374850059976009,6.378248700519792,6.381647341063575,6.385045981607357,6.388444622151139,6.391843262694922,6.395241903238705,6.398640543782487,6.402039184326269,6.405437824870052,6.408836465413835,6.412235105957617,6.415633746501399,6.419032387045182,6.4224310275889644,6.425829668132747,6.429228308676529,6.432626949220312,6.436025589764094,6.439424230307877,6.44282287085166,6.446221511395442,6.449620151939224,6.4530187924830065,6.45641743302679,6.459816073570572,6.463214714114354,6.466613354658136,6.4700119952019195,6.473410635745702,6.476809276289484,6.480207916833267,6.483606557377049,6.487005197920832,6.490403838464614,6.493802479008397,6.497201119552179,6.5005997600959615,6.503998400639744,6.507397041183527,6.510795681727309,6.514194322271091,6.517592962814874,6.520991603358657,6.524390243902439,6.527788884446221,6.531187524990004,6.534586165533787,6.537984806077569,6.541383446621351,6.544782087165134,6.548180727708917,6.551579368252699,6.554978008796481,6.558376649340264,6.5617752898840465,6.565173930427829,6.568572570971611,6.571971211515394,6.575369852059176,6.578768492602959,6.582167133146742,6.585565773690524,6.588964414234306,6.5923630547780885,6.595761695321872,6.599160335865654,6.602558976409436,6.605957616953218,6.6093562574970015,6.612754898040784,6.616153538584566,6.619552179128348,6.622950819672131,6.626349460215914,6.629748100759696,6.633146741303479,6.636545381847261,6.6399440223910435,6.643342662934826,6.646741303478609,6.650139944022391,6.653538584566173,6.656937225109956,6.660335865653739,6.663734506197521,6.667133146741303,6.670531787285086,6.673930427828869,6.677329068372651,6.680727708916433,6.684126349460216,6.687524990003999,6.690923630547781,6.694322271091563,6.697720911635346,6.7011195521791285,6.704518192722911,6.707916833266693,6.711315473810476,6.714714114354258,6.718112754898041,6.721511395441823,6.724910035985606,6.728308676529388,6.7317073170731705,6.735105957616954,6.738504598160736,6.741903238704518,6.7453018792483,6.7487005197920835,6.752099160335866,6.755497800879648,6.75889644142343,6.762295081967213,6.765693722510996,6.769092363054778,6.77249100359856,6.775889644142343,6.7792882846861255,6.782686925229908,6.786085565773691,6.789484206317473,6.792882846861255,6.796281487405038,6.799680127948821,6.803078768492603,6.806477409036385,6.809876049580168,6.813274690123951,6.816673330667733,6.820071971211515,6.8234706117552975,6.826869252299081,6.830267892842863,6.833666533386645,6.837065173930428,6.8404638144742105,6.843862455017993,6.847261095561775,6.850659736105558,6.85405837664934,6.857457017193123,6.860855657736905,6.864254298280688,6.86765293882447,6.8710515793682525,6.874450219912035,6.877848860455818,6.8812475009996,6.884646141543382,6.8880447820871655,6.891443422630948,6.89484206317473,6.898240703718512,6.901639344262295,6.905037984806078,6.90843662534986,6.911835265893642,6.915233906437425,6.9186325469812076,6.92203118752499,6.925429828068772,6.928828468612555,6.932227109156337,6.93562574970012,6.939024390243903,6.942423030787685,6.945821671331467,6.94922031187525,6.952618952419033,6.956017592962815,6.959416233506597,6.9628148740503795,6.966213514594163,6.969612155137945,6.973010795681727,6.976409436225509,6.9798080767692925,6.983206717313075,6.986605357856857,6.99000399840064,6.993402638944422,6.996801279488205,7.000199920031987,7.00359856057577,7.006997201119552,7.0103958416633345,7.013794482207117,7.0171931227509,7.020591763294682,7.023990403838464,7.0273890443822475,7.03078768492603,7.034186325469812,7.037584966013594,7.040983606557377,7.04438224710116,7.047780887644942,7.051179528188724,7.054578168732507,7.05797680927629,7.061375449820072,7.064774090363854,7.068172730907637,7.0715713714514195,7.074970011995202,7.078368652538985,7.081767293082767,7.085165933626549,7.088564574170332,7.091963214714115,7.095361855257897,7.098760495801679,7.1021591363454615,7.105557776889245,7.108956417433027,7.112355057976809,7.115753698520591,7.1191523390643745,7.122550979608157,7.125949620151939,7.129348260695722,7.132746901239504,7.136145541783287,7.139544182327069,7.142942822870852,7.146341463414634,7.1497401039584165,7.153138744502199,7.156537385045982,7.159936025589764,7.163334666133546,7.166733306677329,7.170131947221112,7.173530587764894,7.176929228308676,7.180327868852459,7.183726509396242,7.187125149940024,7.190523790483806,7.193922431027589,7.197321071571372,7.200719712115154,7.204118352658936,7.207516993202719,7.2109156337465015,7.214314274290284,7.217712914834066,7.221111555377849,7.224510195921631,7.227908836465414,7.231307477009197,7.234706117552979,7.238104758096761,7.2415033986405435,7.244902039184327,7.248300679728109,7.251699320271891,7.255097960815673,7.2584966013594565,7.261895241903239,7.265293882447021,7.268692522990803,7.272091163534586,7.275489804078369,7.278888444622151,7.282287085165934,7.285685725709716,7.2890843662534985,7.292483006797281,7.295881647341064,7.299280287884846,7.302678928428628,7.306077568972411,7.309476209516194,7.312874850059976,7.316273490603758,7.319672131147541,7.323070771691324,7.326469412235106,7.329868052778888,7.333266693322671,7.336665333866454,7.340063974410236,7.343462614954018,7.346861255497801,7.3502598960415835,7.353658536585366,7.357057177129148,7.360455817672931,7.363854458216713,7.367253098760496,7.370651739304278,7.374050379848061,7.377449020391843,7.3808476609356255,7.384246301479409,7.387644942023191,7.391043582566973,7.394442223110755,7.3978408636545385,7.401239504198321,7.404638144742103,7.408036785285885,7.411435425829668,7.414834066373451,7.418232706917233,7.421631347461015,7.425029988004798,7.4284286285485805,7.431827269092363,7.435225909636146,7.438624550179928,7.44202319072371,7.445421831267493,7.448820471811276,7.452219112355058,7.45561775289884,7.459016393442623,7.462415033986406,7.465813674530188,7.46921231507397,7.4726109556177525,7.476009596161536,7.479408236705318,7.4828068772491,7.486205517792883,7.4896041583366655,7.493002798880448,7.49640143942423,7.499800079968013,7.503198720511795,7.506597361055578,7.50999600159936,7.513394642143143,7.516793282686925,7.5201919232307075,7.523590563774491,7.526989204318273,7.530387844862055,7.533786485405837,7.5371851259496205,7.540583766493403,7.543982407037185,7.547381047580967,7.55077968812475,7.554178328668533,7.557576969212315,7.560975609756097,7.56437425029988,7.567772890843663,7.571171531387445,7.574570171931228,7.57796881247501,7.5813674530187924,7.584766093562575,7.588164734106358,7.59156337465014,7.594962015193922,7.598360655737705,7.601759296281488,7.60515793682527,7.608556577369052,7.6119552179128345,7.615353858456618,7.6187524990004,7.622151139544182,7.625549780087965,7.6289484206317475,7.63234706117553,7.635745701719312,7.639144342263095,7.642542982806877,7.64594162335066,7.649340263894442,7.652738904438225,7.656137544982007,7.6595361855257895,7.662934826069572,7.666333466613355,7.669732107157137,7.673130747700919,7.6765293882447025,7.679928028788485,7.683326669332267,7.686725309876049,7.690123950419832,7.693522590963615,7.696921231507397,7.700319872051179,7.703718512594962,7.707117153138745,7.710515793682527,7.713914434226309,7.717313074770092,7.7207117153138745,7.724110355857657,7.72750899640144,7.730907636945222,7.734306277489004,7.737704918032787,7.74110355857657,7.744502199120352,7.747900839664134,7.7512994802079165,7.7546981207517,7.758096761295482,7.761495401839264,7.764894042383046,7.7682926829268295,7.771691323470612,7.775089964014394,7.778488604558177,7.781887245101959,7.785285885645742,7.788684526189524,7.792083166733307,7.795481807277089,7.7988804478208715,7.802279088364654,7.805677728908437,7.809076369452219,7.812475009996001,7.815873650539784,7.819272291083567,7.822670931627349,7.826069572171131,7.829468212714914,7.832866853258697,7.836265493802479,7.839664134346261,7.843062774890044,7.846461415433827,7.849860055977609,7.853258696521391,7.856657337065174,7.8600559776089565,7.863454618152739,7.866853258696521,7.870251899240304,7.873650539784086,7.877049180327869,7.880447820871652,7.883846461415434,7.887245101959216,7.8906437425029985,7.894042383046782,7.897441023590564,7.900839664134346,7.904238304678128,7.9076369452219115,7.911035585765694,7.914434226309476,7.917832866853258,7.921231507397041,7.924630147940824,7.928028788484606,7.931427429028389,7.934826069572171,7.9382247101159535,7.941623350659736,7.945021991203519,7.948420631747301,7.951819272291083,7.955217912834866,7.958616553378649,7.962015193922431,7.965413834466213,7.968812475009996,7.972211115553779,7.975609756097561,7.979008396641343,7.982407037185126,7.985805677728909,7.989204318272691,7.992602958816473,7.996001599360256,7.9994002399040385,8.002798880447822,8.006197520991604,8.009596161535386,8.012994802079168,8.01639344262295,8.019792083166733,8.023190723710515,8.0265893642543,8.029988004798081,8.033386645341864,8.036785285885646,8.040183926429428,8.04358256697321,8.046981207516993,8.050379848060775,8.053778488604559,8.057177129148341,8.060575769692123,8.063974410235906,8.067373050779688,8.07077169132347,8.074170331867252,8.077568972411036,8.080967612954819,8.084366253498601,8.087764894042383,8.091163534586165,8.094562175129948,8.09796081567373,8.101359456217512,8.104758096761296,8.108156737305078,8.11155537784886,8.114954018392643,8.118352658936425,8.121751299480207,8.12514994002399,8.128548580567774,8.131947221111556,8.135345861655338,8.13874450219912,8.142143142742903,8.145541783286685,8.148940423830467,8.15233906437425,8.155737704918034,8.159136345461816,8.162534986005598,8.16593362654938,8.169332267093163,8.172730907636945,8.176129548180727,8.179528188724511,8.182926829268293,8.186325469812076,8.189724110355858,8.19312275089964,8.196521391443422,8.199920031987205,8.203318672530987,8.20671731307477,8.210115953618553,8.213514594162335,8.216913234706118,8.2203118752499,8.223710515793682,8.227109156337464,8.230507796881248,8.23390643742503,8.237305077968813,8.240703718512595,8.244102359056377,8.24750099960016,8.250899640143942,8.254298280687724,8.257696921231508,8.26109556177529,8.264494202319073,8.267892842862855,8.271291483406637,8.27469012395042,8.278088764494202,8.281487405037986,8.284886045581768,8.28828468612555,8.291683326669332,8.295081967213115,8.298480607756897,8.30187924830068,8.305277888844461,8.308676529388245,8.312075169932028,8.31547381047581,8.318872451019592,8.322271091563374,8.325669732107157,8.329068372650939,8.332467013194723,8.335865653738505,8.339264294282287,8.34266293482607,8.346061575369852,8.349460215913634,8.352858856457416,8.356257497001199,8.359656137544983,8.363054778088765,8.366453418632547,8.36985205917633,8.373250699720112,8.376649340263894,8.380047980807676,8.38344662135146,8.386845261895242,8.390243902439025,8.393642542982807,8.39704118352659,8.400439824070371,8.403838464614154,8.407237105157936,8.41063574570172,8.414034386245502,8.417433026789285,8.420831667333067,8.424230307876849,8.427628948420631,8.431027588964414,8.434426229508198,8.43782487005198,8.441223510595762,8.444622151139544,8.448020791683327,8.451419432227109,8.454818072770891,8.458216713314673,8.461615353858457,8.46501399440224,8.468412634946022,8.471811275489804,8.475209916033586,8.478608556577369,8.48200719712115,8.485405837664935,8.488804478208717,8.4922031187525,8.495601759296282,8.499000399840064,8.502399040383846,8.505797680927628,8.50919632147141,8.512594962015195,8.515993602558977,8.519392243102759,8.522790883646541,8.526189524190324,8.529588164734106,8.532986805277888,8.536385445821672,8.539784086365454,8.543182726909237,8.546581367453019,8.549980007996801,8.553378648540583,8.556777289084366,8.560175929628148,8.563574570171932,8.566973210715714,8.570371851259496,8.573770491803279,8.577169132347061,8.580567772890843,8.583966413434625,8.58736505397841,8.590763694522192,8.594162335065974,8.597560975609756,8.600959616153538,8.60435825669732,8.607756897241103,8.611155537784885,8.61455417832867,8.617952818872451,8.621351459416234,8.624750099960016,8.628148740503798,8.63154738104758,8.634946021591363,8.638344662135147,8.641743302678929,8.645141943222711,8.648540583766493,8.651939224310276,8.655337864854058,8.65873650539784,8.662135145941622,8.665533786485407,8.668932427029189,8.672331067572971,8.675729708116753,8.679128348660536,8.682526989204318,8.6859256297481,8.689324270291884,8.692722910835666,8.696121551379449,8.69952019192323,8.702918832467013,8.706317473010795,8.709716113554578,8.71311475409836,8.716513394642144,8.719912035185926,8.723310675729708,8.72670931627349,8.730107956817273,8.733506597361055,8.736905237904837,8.740303878448621,8.743702518992404,8.747101159536186,8.750499800079968,8.75389844062375,8.757297081167533,8.760695721711315,8.764094362255097,8.767493002798881,8.770891643342663,8.774290283886446,8.777688924430228,8.78108756497401,8.784486205517792,8.787884846061575,8.791283486605359,8.79468212714914,8.798080767692923,8.801479408236705,8.804878048780488,8.80827668932427,8.811675329868052,8.815073970411834,8.818472610955618,8.8218712514994,8.825269892043183,8.828668532586965,8.832067173130747,8.83546581367453,8.838864454218312,8.842263094762096,8.845661735305878,8.84906037584966,8.852459016393443,8.855857656937225,8.859256297481007,8.86265493802479,8.866053578568573,8.869452219112356,8.872850859656138,8.87624950019992,8.879648140743702,8.883046781287485,8.886445421831267,8.88984406237505,8.893242702918833,8.896641343462615,8.900039984006398,8.90343862455018,8.906837265093962,8.910235905637744,8.913634546181527,8.91703318672531,8.920431827269093,8.923830467812875,8.927229108356658,8.93062774890044,8.934026389444222,8.937425029988004,8.940823670531787,8.94422231107557,8.947620951619353,8.951019592163135,8.954418232706917,8.9578168732507,8.961215513794482,8.964614154338264,8.968012794882048,8.97141143542583,8.974810075969613,8.978208716513395,8.981607357057177,8.98500599760096,8.988404638144742,8.991803278688524,8.995201919232308,8.99860055977609,9.001999200319872,9.005397840863655,9.008796481407437,9.012195121951219,9.015593762495001,9.018992403038785,9.022391043582568,9.02578968412635,9.029188324670132,9.032586965213914,9.035985605757697,9.039384246301479,9.042782886845261,9.046181527389045,9.049580167932827,9.05297880847661,9.056377449020392,9.059776089564174,9.063174730107956,9.066573370651739,9.069972011195523,9.073370651739305,9.076769292283087,9.08016793282687,9.083566573370652,9.086965213914434,9.090363854458216,9.093762495001998,9.097161135545782,9.100559776089565,9.103958416633347,9.10735705717713,9.110755697720911,9.114154338264694,9.117552978808476,9.12095161935226,9.124350259896042,9.127748900439824,9.131147540983607,9.134546181527389,9.137944822071171,9.141343462614953,9.144742103158736,9.14814074370252,9.151539384246302,9.154938024790084,9.158336665333866,9.161735305877649,9.165133946421431,9.168532586965213,9.171931227508997,9.17532986805278,9.178728508596562,9.182127149140344,9.185525789684126,9.188924430227909,9.19232307077169,9.195721711315473,9.199120351859257,9.20251899240304,9.205917632946822,9.209316273490604,9.212714914034386,9.216113554578168,9.21951219512195,9.222910835665735,9.226309476209517,9.229708116753299,9.233106757297081,9.236505397840864,9.239904038384646,9.243302678928428,9.24670131947221,9.250099960015994,9.253498600559777,9.256897241103559,9.260295881647341,9.263694522191123,9.267093162734906,9.270491803278688,9.273890443822472,9.277289084366254,9.280687724910036,9.284086365453819,9.2874850059976,9.290883646541383,9.294282287085165,9.297680927628948,9.301079568172732,9.304478208716514,9.307876849260296,9.311275489804078,9.31467413034786,9.318072770891643,9.321471411435425,9.32487005197921,9.328268692522991,9.331667333066774,9.335065973610556,9.338464614154338,9.34186325469812,9.345261895241903,9.348660535785685,9.352059176329469,9.355457816873251,9.358856457417033,9.362255097960816,9.365653738504598,9.36905237904838,9.372451019592162,9.375849660135946,9.379248300679729,9.382646941223511,9.386045581767293,9.389444222311075,9.392842862854858,9.39624150339864,9.399640143942422,9.403038784486206,9.406437425029988,9.40983606557377,9.413234706117553,9.416633346661335,9.420031987205117,9.4234306277489,9.426829268292684,9.430227908836466,9.433626549380248,9.43702518992403,9.440423830467813,9.443822471011595,9.447221111555377,9.45061975209916,9.454018392642944,9.457417033186726,9.460815673730508,9.46421431427429,9.467612954818073,9.471011595361855,9.474410235905637,9.477808876449421,9.481207516993203,9.484606157536986,9.488004798080768,9.49140343862455,9.494802079168332,9.498200719712115,9.501599360255897,9.50499800079968,9.508396641343463,9.511795281887245,9.515193922431028,9.51859256297481,9.521991203518592,9.525389844062374,9.528788484606158,9.53218712514994,9.535585765693723,9.538984406237505,9.542383046781287,9.54578168732507,9.549180327868852,9.552578968412634,9.555977608956418,9.5593762495002,9.562774890043983,9.566173530587765,9.569572171131547,9.57297081167533,9.576369452219112,9.579768092762896,9.583166733306678,9.58656537385046,9.589964014394242,9.593362654938025,9.596761295481807,9.60015993602559,9.603558576569371,9.606957217113155,9.610355857656938,9.61375449820072,9.617153138744502,9.620551779288284,9.623950419832067,9.627349060375849,9.630747700919633,9.634146341463415,9.637544982007197,9.64094362255098,9.644342263094762,9.647740903638544,9.651139544182326,9.654538184726109,9.657936825269893,9.661335465813675,9.664734106357457,9.66813274690124,9.671531387445022,9.674930027988804,9.678328668532586,9.68172730907637,9.685125949620152,9.688524590163935,9.691923230707717,9.6953218712515,9.698720511795281,9.702119152339064,9.705517792882846,9.70891643342663,9.712315073970412,9.715713714514195,9.719112355057977,9.722510995601759,9.725909636145541,9.729308276689324,9.732706917233108,9.73610555777689,9.739504198320672,9.742902838864454,9.746301479408237,9.749700119952019,9.753098760495801,9.756497401039583,9.759896041583367,9.76329468212715,9.766693322670932,9.770091963214714,9.773490603758496,9.776889244302279,9.78028788484606,9.783686525389845,9.787085165933627,9.79048380647741,9.793882447021192,9.797281087564974,9.800679728108756,9.804078368652538,9.80747700919632,9.810875649740105,9.814274290283887,9.81767293082767,9.821071571371451,9.824470211915234,9.827868852459016,9.831267493002798,9.834666133546582,9.838064774090364,9.841463414634147,9.844862055177929,9.848260695721711,9.851659336265493,9.855057976809276,9.858456617353058,9.861855257896842,9.865253898440624,9.868652538984406,9.872051179528189,9.875449820071971,9.878848460615753,9.882247101159535,9.88564574170332,9.889044382247102,9.892443022790884,9.895841663334666,9.899240303878448,9.90263894442223,9.906037584966013,9.909436225509797,9.91283486605358,9.916233506597361,9.919632147141144,9.923030787684926,9.926429428228708,9.92982806877249,9.933226709316273,9.936625349860057,9.940023990403839,9.943422630947621,9.946821271491403,9.950219912035186,9.953618552578968,9.95701719312275,9.960415833666534,9.963814474210317,9.967213114754099,9.970611755297881,9.974010395841663,9.977409036385446,9.980807676929228,9.98420631747301,9.987604958016794,9.991003598560576,9.994402239104359,9.99780087964814,10.001199520191923,10.004598160735705,10.007996801279488,10.011395441823272,10.014794082367054,10.018192722910836,10.021591363454618,10.0249900039984,10.028388644542183,10.031787285085965,10.035185925629747,10.038584566173531,10.041983206717314,10.045381847261096,10.048780487804878,10.05217912834866,10.055577768892443,10.058976409436225,10.062375049980009,10.065773690523791,10.069172331067573,10.072570971611356,10.075969612155138,10.07936825269892,10.082766893242702,10.086165533786485,10.089564174330269,10.092962814874051,10.096361455417833,10.099760095961615,10.103158736505398,10.10655737704918,10.109956017592962,10.113354658136746,10.116753298680528,10.12015193922431,10.123550579768093,10.126949220311875,10.130347860855657,10.13374650139944,10.137145141943222,10.140543782487006,10.143942423030788,10.14734106357457,10.150739704118353,10.154138344662135,10.157536985205917,10.1609356257497,10.164334266293483,10.167732906837266,10.171131547381048,10.17453018792483,10.177928828468612,10.181327469012395,10.184726109556177,10.18812475009996,10.191523390643743,10.194922031187525,10.198320671731308,10.20171931227509,10.205117952818872,10.208516593362654,10.211915233906437,10.21531387445022,10.218712514994003,10.222111155537785,10.225509796081568,10.22890843662535,10.232307077169132,10.235705717712914,10.239104358256697,10.24250299880048,10.245901639344263,10.249300279888045,10.252698920431827,10.25609756097561,10.259496201519392,10.262894842063174,10.266293482606958,10.26969212315074,10.273090763694523,10.276489404238305,10.279888044782087,10.28328668532587,10.286685325869652,10.290083966413434,10.293482606957218,10.296881247501,10.300279888044782,10.303678528588565,10.307077169132347,10.310475809676129,10.313874450219911,10.317273090763695,10.320671731307478,10.32407037185126,10.327469012395042,10.330867652938824,10.334266293482607,10.337664934026389,10.341063574570171,10.344462215113955,10.347860855657737,10.35125949620152,10.354658136745302,10.358056777289084,10.361455417832866,10.364854058376649,10.368252698920433,10.371651339464215,10.375049980007997,10.37844862055178,10.381847261095562,10.385245901639344,10.388644542183126,10.392043182726908,10.395441823270692,10.398840463814475,10.402239104358257,10.40563774490204,10.409036385445821,10.412435025989604,10.415833666533386,10.41923230707717,10.422630947620952,10.426029588164734,10.429428228708517,10.432826869252299,10.436225509796081,10.439624150339863,10.443022790883646,10.44642143142743,10.449820071971212,10.453218712514994,10.456617353058776,10.460015993602559,10.463414634146341,10.466813274690123,10.470211915233907,10.47361055577769,10.477009196321472,10.480407836865254,10.483806477409036,10.487205117952819,10.4906037584966,10.494002399040383,10.497401039584167,10.50079968012795,10.504198320671732,10.507596961215514,10.510995601759296,10.514394242303078,10.51779288284686,10.521191523390645,10.524590163934427,10.527988804478209,10.531387445021991,10.534786085565774,10.538184726109556,10.541583366653338,10.54498200719712,10.548380647740904,10.551779288284687,10.555177928828469,10.558576569372251,10.561975209916033,10.565373850459816,10.568772491003598,10.572171131547382,10.575569772091164,10.578968412634946,10.582367053178729,10.58576569372251,10.589164334266293,10.592562974810075,10.595961615353858,10.599360255897642,10.602758896441424,10.606157536985206,10.609556177528988,10.61295481807277,10.616353458616553,10.619752099160335,10.62315073970412,10.626549380247901,10.629948020791684,10.633346661335466,10.636745301879248,10.64014394242303,10.643542582966813,10.646941223510595,10.650339864054379,10.653738504598161,10.657137145141943,10.660535785685726,10.663934426229508,10.66733306677329,10.670731707317072,10.674130347860856,10.677528988404639,10.680927628948421,10.684326269492203,10.687724910035985,10.691123550579768,10.69452219112355,10.697920831667332,10.701319472211116,10.704718112754898,10.70811675329868,10.711515393842463,10.714914034386245,10.718312674930027,10.72171131547381,10.725109956017594,10.728508596561376,10.731907237105158,10.73530587764894,10.738704518192723,10.742103158736505,10.745501799280287,10.74890043982407,10.752299080367854,10.755697720911636,10.759096361455418,10.7624950019992,10.765893642542983,10.769292283086765,10.772690923630547,10.776089564174331,10.779488204718113,10.782886845261896,10.786285485805678,10.78968412634946,10.793082766893242,10.796481407437025,10.799880047980807,10.80327868852459,10.806677329068373,10.810075969612155,10.813474610155938,10.81687325069972,10.820271891243502,10.823670531787284,10.827069172331068,10.83046781287485,10.833866453418633,10.837265093962415,10.840663734506197,10.84406237504998,10.847461015593762,10.850859656137544,10.854258296681328,10.85765693722511,10.861055577768893,10.864454218312675,10.867852858856457,10.87125149940024,10.874650139944022,10.878048780487806,10.881447421031588,10.88484606157537,10.888244702119152,10.891643342662935,10.895041983206717,10.8984406237505,10.901839264294281,10.905237904838065,10.908636545381848,10.91203518592563,10.915433826469412,10.918832467013194,10.922231107556977,10.925629748100759,10.929028388644543,10.932427029188325,10.935825669732107,10.93922431027589,10.942622950819672,10.946021591363454,10.949420231907236,10.952818872451019,10.956217512994803,10.959616153538585,10.963014794082367,10.96641343462615,10.969812075169932,10.973210715713714,10.976609356257496,10.98000799680128,10.983406637345063,10.986805277888845,10.990203918432627,10.99360255897641,10.997001199520192,11.000399840063974,11.003798480607758,11.00719712115154,11.010595761695322,11.013994402239105,11.017393042782887,11.020791683326669,11.024190323870451,11.027588964414234,11.030987604958018,11.0343862455018,11.037784886045582,11.041183526589364,11.044582167133147,11.047980807676929,11.051379448220711,11.054778088764495,11.058176729308277,11.06157536985206,11.064974010395842,11.068372650939624,11.071771291483406,11.075169932027189,11.07856857257097,11.081967213114755,11.085365853658537,11.08876449420232,11.092163134746102,11.095561775289884,11.098960415833666,11.102359056377448,11.105757696921232,11.109156337465015,11.112554978008797,11.11595361855258,11.119352259096361,11.122750899640144,11.126149540183926,11.129548180727708,11.132946821271492,11.136345461815274,11.139744102359057,11.143142742902839,11.146541383446621,11.149940023990403,11.153338664534186,11.15673730507797,11.160135945621752,11.163534586165534,11.166933226709316,11.170331867253099,11.173730507796881,11.177129148340663,11.180527788884445,11.18392642942823,11.187325069972012,11.190723710515794,11.194122351059576,11.197520991603358,11.20091963214714,11.204318272690923,11.207716913234707,11.21111555377849,11.214514194322271,11.217912834866054,11.221311475409836,11.224710115953618,11.2281087564974,11.231507397041183,11.234906037584967,11.238304678128749,11.241703318672531,11.245101959216314,11.248500599760096,11.251899240303878,11.25529788084766,11.258696521391444,11.262095161935227,11.265493802479009,11.268892443022791,11.272291083566573,11.275689724110356,11.279088364654138,11.28248700519792,11.285885645741704,11.289284286285486,11.292682926829269,11.29608156737305,11.299480207916833,11.302878848460615,11.306277489004398,11.309676129548182,11.313074770091964,11.316473410635746,11.319872051179528,11.32327069172331,11.326669332267093,11.330067972810875,11.333466613354657,11.336865253898441,11.340263894442224,11.343662534986006,11.347061175529788,11.35045981607357,11.353858456617353,11.357257097161135,11.360655737704919,11.364054378248701,11.367453018792483,11.370851659336266,11.374250299880048,11.37764894042383,11.381047580967612,11.384446221511395,11.387844862055179,11.391243502598961,11.394642143142743,11.398040783686525,11.401439424230308,11.40483806477409,11.408236705317872,11.411635345861656,11.415033986405438,11.41843262694922,11.421831267493003,11.425229908036785,11.428628548580567,11.43202718912435,11.435425829668132,11.438824470211916,11.442223110755698,11.44562175129948,11.449020391843263,11.452419032387045,11.455817672930827,11.45921631347461,11.462614954018393,11.466013594562176,11.469412235105958,11.47281087564974,11.476209516193522,11.479608156737305,11.483006797281087,11.48640543782487,11.489804078368653,11.493202718912436,11.496601359456218,11.5,11.503398640543782,11.506797281087564,11.510195921631347,11.51359456217513,11.516993202718913,11.520391843262695,11.523790483806478,11.52718912435026,11.530587764894042,11.533986405437824,11.537385045981607,11.54078368652539,11.544182327069173,11.547580967612955,11.550979608156737,11.55437824870052,11.557776889244302,11.561175529788084,11.564574170331868,11.56797281087565,11.571371451419433,11.574770091963215,11.578168732506997,11.58156737305078,11.584966013594562,11.588364654138344,11.591763294682128,11.59516193522591,11.598560575769692,11.601959216313475,11.605357856857257,11.608756497401039,11.612155137944821,11.615553778488605,11.618952419032388,11.62235105957617,11.625749700119952,11.629148340663734,11.632546981207517,11.635945621751299,11.639344262295081,11.642742902838865,11.646141543382647,11.64954018392643,11.652938824470212,11.656337465013994,11.659736105557776,11.663134746101559,11.666533386645343,11.669932027189125,11.673330667732907,11.67672930827669,11.680127948820472,11.683526589364254,11.686925229908036,11.690323870451818,11.693722510995602,11.697121151539385,11.700519792083167,11.70391843262695,11.707317073170731,11.710715713714514,11.714114354258296,11.71751299480208,11.720911635345862,11.724310275889644,11.727708916433427,11.731107556977209,11.734506197520991,11.737904838064773,11.741303478608556,11.74470211915234,11.748100759696122,11.751499400239904,11.754898040783686,11.758296681327469,11.761695321871251,11.765093962415033,11.768492602958817,11.7718912435026,11.775289884046382,11.778688524590164,11.782087165133946,11.785485805677729,11.78888444622151,11.792283086765293,11.795681727309077,11.79908036785286,11.802479008396642,11.805877648940424,11.809276289484206,11.812674930027988,11.81607357057177,11.819472211115555,11.822870851659337,11.826269492203119,11.829668132746901,11.833066773290684,11.836465413834466,11.839864054378248,11.84326269492203,11.846661335465814,11.850059976009597,11.853458616553379,11.856857257097161,11.860255897640943,11.863654538184726,11.867053178728508,11.870451819272292,11.873850459816074,11.877249100359856,11.880647740903639,11.88404638144742,11.887445021991203,11.890843662534985,11.894242303078768,11.897640943622552,11.901039584166334,11.904438224710116,11.907836865253898,11.91123550579768,11.914634146341463,11.918032786885245,11.92143142742903,11.924830067972811,11.928228708516594,11.931627349060376,11.935025989604158,11.93842463014794,11.941823270691723,11.945221911235505,11.948620551779289,11.952019192323071,11.955417832866853,11.958816473410636,11.962215113954418,11.9656137544982,11.969012395041982,11.972411035585766,11.975809676129549,11.979208316673331,11.982606957217113,11.986005597760895,11.989404238304678,11.99280287884846,11.996201519392242,11.999600159936026,12.002998800479808,12.00639744102359,12.009796081567373,12.013194722111155,12.016593362654937,12.01999200319872,12.023390643742504,12.026789284286286,12.030187924830068,12.03358656537385,12.036985205917633,12.040383846461415,12.043782487005197,12.047181127548981,12.050579768092764,12.053978408636546,12.057377049180328,12.06077568972411,12.064174330267893,12.067572970811675,12.070971611355457,12.074370251899241,12.077768892443023,12.081167532986806,12.084566173530588,12.08796481407437,12.091363454618152,12.094762095161935,12.098160735705719,12.1015593762495,12.104958016793283,12.108356657337065,12.111755297880848,12.11515393842463,12.118552578968412,12.121951219512194,12.125349860055978,12.12874850059976,12.132147141143543,12.135545781687325,12.138944422231107,12.14234306277489,12.145741703318672,12.149140343862456,12.152538984406238,12.15593762495002,12.159336265493803,12.162734906037585,12.166133546581367,12.16953218712515,12.172930827668932,12.176329468212716,12.179728108756498,12.18312674930028,12.186525389844062,12.189924030387845,12.193322670931627,12.19672131147541,12.200119952019193,12.203518592562975,12.206917233106758,12.21031587365054,12.213714514194322,12.217113154738104,12.220511795281887,12.223910435825669,12.227309076369453,12.230707716913235,12.234106357457017,12.2375049980008,12.240903638544582,12.244302279088364,12.247700919632146,12.25109956017593,12.254498200719713,12.257896841263495,12.261295481807277,12.26469412235106,12.268092762894842,12.271491403438624,12.274890043982406,12.27828868452619,12.281687325069973,12.285085965613755,12.288484606157537,12.29188324670132,12.295281887245102,12.298680527788884,12.302079168332668,12.30547780887645,12.308876449420232,12.312275089964015,12.315673730507797,12.319072371051579,12.322471011595361,12.325869652139144,12.329268292682928,12.33266693322671,12.336065573770492,12.339464214314274,12.342862854858057,12.346261495401839,12.349660135945621,12.353058776489405,12.356457417033187,12.35985605757697,12.363254698120752,12.366653338664534,12.370051979208316,12.373450619752099,12.37684926029588,12.380247900839665,12.383646541383447,12.38704518192723,12.390443822471012,12.393842463014794,12.397241103558576,12.400639744102358,12.404038384646142,12.407437025189925,12.410835665733707,12.41423430627749,12.417632946821271,12.421031587365054,12.424430227908836,12.427828868452618,12.431227508996402,12.434626149540184,12.438024790083967,12.441423430627749,12.444822071171531,12.448220711715313,12.451619352259096,12.45501799280288,12.458416633346662,12.461815273890444,12.465213914434226,12.468612554978009,12.472011195521791,12.475409836065573,12.478808476609355,12.48220711715314,12.485605757696922,12.489004398240704,12.492403038784486,12.495801679328268,12.49920031987205,12.502598960415833,12.505997600959617,12.5093962415034,12.512794882047181,12.516193522590964,12.519592163134746,12.522990803678528,12.52638944422231,12.529788084766093,12.533186725309877,12.536585365853659,12.539984006397441,12.543382646941224,12.546781287485006,12.550179928028788,12.55357856857257,12.556977209116354,12.560375849660137,12.563774490203919,12.567173130747701,12.570571771291483,12.573970411835266,12.577369052379048,12.58076769292283,12.584166333466614,12.587564974010396,12.590963614554179,12.59436225509796,12.597760895641743,12.601159536185525,12.604558176729308,12.607956817273092,12.611355457816874,12.614754098360656,12.618152738904438,12.62155137944822,12.624950019992003,12.628348660535785,12.631747301079567,12.635145941623351,12.638544582167134,12.641943222710916,12.645341863254698,12.64874050379848,12.652139144342263,12.655537784886045,12.658936425429829,12.662335065973611,12.665733706517393,12.669132347061176,12.672530987604958,12.67592962814874,12.679328268692522,12.682726909236305,12.686125549780089,12.689524190323871,12.692922830867653,12.696321471411435,12.699720111955218,12.703118752499,12.706517393042782,12.709916033586566,12.713314674130348,12.71671331467413,12.720111955217913,12.723510595761695,12.726909236305477,12.73030787684926,12.733706517393042,12.737105157936826,12.740503798480608,12.74390243902439,12.747301079568173,12.750699720111955,12.754098360655737,12.75749700119952,12.760895641743303,12.764294282287086,12.767692922830868,12.77109156337465,12.774490203918432,12.777888844462215,12.781287485005997,12.78468612554978,12.788084766093563,12.791483406637346,12.794882047181128,12.79828068772491,12.801679328268692,12.805077968812475,12.808476609356257,12.81187524990004,12.815273890443823,12.818672530987605,12.822071171531388,12.82546981207517,12.828868452618952,12.832267093162734,12.835665733706517,12.8390643742503,12.842463014794083,12.845861655337865,12.849260295881647,12.85265893642543,12.856057576969212,12.859456217512994,12.862854858056778,12.86625349860056,12.869652139144343,12.873050779688125,12.876449420231907,12.87984806077569,12.883246701319472,12.886645341863254,12.890043982407038,12.89344262295082,12.896841263494602,12.900239904038385,12.903638544582167,12.907037185125949,12.910435825669731,12.913834466213515,12.917233106757298,12.92063174730108,12.924030387844862,12.927429028388644,12.930827668932427,12.934226309476209,12.937624950019991,12.941023590563775,12.944422231107557,12.94782087165134,12.951219512195122,12.954618152738904,12.958016793282686,12.961415433826469,12.964814074370253,12.968212714914035,12.971611355457817,12.9750099960016,12.978408636545382,12.981807277089164,12.985205917632946,12.988604558176728,12.992003198720512,12.995401839264295,12.998800479808077,13.00219912035186,13.005597760895641,13.008996401439424,13.012395041983206,13.01579368252699,13.019192323070772,13.022590963614554,13.025989604158337,13.029388244702119,13.032786885245901,13.036185525789683,13.039584166333466,13.04298280687725,13.046381447421032,13.049780087964814,13.053178728508597,13.056577369052379,13.059976009596161,13.063374650139943,13.066773290683727,13.07017193122751,13.073570571771292,13.076969212315074,13.080367852858856,13.083766493402639,13.08716513394642,13.090563774490203,13.093962415033987,13.09736105557777,13.100759696121552,13.104158336665334,13.107556977209116,13.110955617752898,13.11435425829668,13.117752898840465,13.121151539384247,13.124550179928029,13.127948820471811,13.131347461015594,13.134746101559376,13.138144742103158,13.141543382646942,13.144942023190724,13.148340663734507,13.151739304278289,13.155137944822071,13.158536585365853,13.161935225909636,13.165333866453418,13.168732506997202,13.172131147540984,13.175529788084766,13.178928428628549,13.18232706917233,13.185725709716113,13.189124350259895,13.19252299080368,13.195921631347462,13.199320271891244,13.202718912435026,13.206117552978808,13.20951619352259,13.212914834066373,13.216313474610155,13.21971211515394,13.223110755697721,13.226509396241504,13.229908036785286,13.233306677329068,13.23670531787285,13.240103958416633,13.243502598960417,13.246901239504199,13.250299880047981,13.253698520591763,13.257097161135546,13.260495801679328,13.26389444222311,13.267293082766892,13.270691723310676,13.274090363854459,13.277489004398241,13.280887644942023,13.284286285485805,13.287684926029588,13.29108356657337,13.294482207117154,13.297880847660936,13.301279488204719,13.3046781287485,13.308076769292283,13.311475409836065,13.314874050379848,13.31827269092363,13.321671331467414,13.325069972011196,13.328468612554978,13.33186725309876,13.335265893642543,13.338664534186325,13.342063174730107,13.345461815273891,13.348860455817674,13.352259096361456,13.355657736905238,13.35905637744902,13.362455017992803,13.365853658536585,13.369252299080367,13.372650939624151,13.376049580167933,13.379448220711716,13.382846861255498,13.38624550179928,13.389644142343062,13.393042782886845,13.396441423430629,13.39984006397441,13.403238704518193,13.406637345061975,13.410035985605758,13.41343462614954,13.416833266693322,13.420231907237104,13.423630547780888,13.42702918832467,13.430427828868453,13.433826469412235,13.437225109956017,13.4406237504998,13.444022391043582,13.447421031587366,13.450819672131148,13.45421831267493,13.457616953218713,13.461015593762495,13.464414234306277,13.46781287485006,13.471211515393842,13.474610155937626,13.478008796481408,13.48140743702519,13.484806077568972,13.488204718112755,13.491603358656537,13.49500199920032,13.498400639744103,13.501799280287885,13.505197920831668,13.50859656137545,13.511995201919232,13.515393842463014,13.518792483006797,13.522191123550579,13.525589764094363,13.528988404638145,13.532387045181927,13.53578568572571,13.539184326269492,13.542582966813274,13.545981607357056,13.54938024790084,13.552778888444623,13.556177528988405,13.559576169532187,13.56297481007597,13.566373450619752,13.569772091163534,13.573170731707316,13.5765693722511,13.579968012794883,13.583366653338665,13.586765293882447,13.59016393442623,13.593562574970012,13.596961215513794,13.600359856057578,13.60375849660136,13.607157137145142,13.610555777688925,13.613954418232707,13.617353058776489,13.620751699320271,13.624150339864054,13.627548980407838,13.63094762095162,13.634346261495402,13.637744902039184,13.641143542582967,13.644542183126749,13.647940823670531,13.651339464214315,13.654738104758097,13.65813674530188,13.661535385845662,13.664934026389444,13.668332666933226,13.671731307477009,13.67512994802079,13.678528588564575,13.681927229108357,13.68532586965214,13.688724510195922,13.692123150739704,13.695521791283486,13.698920431827268,13.702319072371052,13.705717712914835,13.709116353458617,13.7125149940024,13.715913634546181,13.719312275089964,13.722710915633746,13.726109556177528,13.729508196721312,13.732906837265094,13.736305477808877,13.739704118352659,13.743102758896441,13.746501399440223,13.749900039984006,13.75329868052779,13.756697321071572,13.760095961615354,13.763494602159136,13.766893242702919,13.770291883246701,13.773690523790483,13.777089164334265,13.78048780487805,13.783886445421832,13.787285085965614,13.790683726509396,13.794082367053178,13.79748100759696,13.800879648140743,13.804278288684527,13.80767692922831,13.811075569772091,13.814474210315874,13.817872850859656,13.821271491403438,13.82467013194722,13.828068772491003,13.831467413034787,13.834866053578569,13.838264694122351,13.841663334666134,13.845061975209916,13.848460615753698,13.85185925629748,13.855257896841264,13.858656537385047,13.862055177928829,13.865453818472611,13.868852459016393,13.872251099560176,13.875649740103958,13.87904838064774,13.882447021191524,13.885845661735306,13.889244302279089,13.89264294282287,13.896041583366653,13.899440223910435,13.902838864454218,13.906237504998002,13.909636145541784,13.913034786085566,13.916433426629348,13.91983206717313,13.923230707716913,13.926629348260695,13.930027988804477,13.933426629348261,13.936825269892044,13.940223910435826,13.943622550979608,13.94702119152339,13.950419832067173,13.953818472610955,13.957217113154739,13.960615753698521,13.964014394242303,13.967413034786086,13.970811675329868,13.97421031587365,13.977608956417432,13.981007596961215,13.984406237504999,13.987804878048781,13.991203518592563,13.994602159136345,13.998000799680128,14.00139944022391,14.004798080767692,14.008196721311476,14.011595361855258,14.01499400239904,14.018392642942823,14.021791283486605,14.025189924030387,14.02858856457417,14.031987205117952,14.035385845661736,14.038784486205518,14.0421831267493,14.045581767293083,14.048980407836865,14.052379048380647,14.05577768892443,14.059176329468213,14.062574970011996,14.065973610555778,14.06937225109956,14.072770891643342,14.076169532187125,14.079568172730907,14.08296681327469,14.086365453818473,14.089764094362256,14.093162734906038,14.09656137544982,14.099960015993602,14.103358656537385,14.106757297081167,14.11015593762495,14.113554578168733,14.116953218712515,14.120351859256298,14.12375049980008,14.127149140343862,14.130547780887644,14.133946421431427,14.13734506197521,14.140743702518993,14.144142343062775,14.147540983606557,14.15093962415034,14.154338264694122,14.157736905237904,14.161135545781688,14.16453418632547,14.167932826869253,14.171331467413035,14.174730107956817,14.1781287485006,14.181527389044382,14.184926029588166,14.188324670131948,14.19172331067573,14.195121951219512,14.198520591763295,14.201919232307077,14.20531787285086,14.208716513394641,14.212115153938425,14.215513794482208,14.21891243502599,14.222311075569772,14.225709716113554,14.229108356657337,14.232506997201119,14.235905637744903,14.239304278288685,14.242702918832467,14.24610155937625,14.249500199920032,14.252898840463814,14.256297481007596,14.259696121551379,14.263094762095163,14.266493402638945,14.269892043182727,14.27329068372651,14.276689324270292,14.280087964814074,14.283486605357856,14.28688524590164,14.290283886445422,14.293682526989205,14.297081167532987,14.30047980807677,14.303878448620551,14.307277089164334,14.310675729708116,14.3140743702519,14.317473010795682,14.320871651339464,14.324270291883247,14.327668932427029,14.331067572970811,14.334466213514593,14.337864854058378,14.34126349460216,14.344662135145942,14.348060775689724,14.351459416233507,14.354858056777289,14.358256697321071,14.361655337864853,14.365053978408637,14.36845261895242,14.371851259496202,14.375249900039984,14.378648540583766,14.382047181127549,14.38544582167133,14.388844462215115,14.392243102758897,14.39564174330268,14.399040383846462,14.402439024390244,14.405837664934026,14.409236305477808,14.41263494602159,14.416033586565375,14.419432227109157,14.422830867652939,14.426229508196721,14.429628148740504,14.433026789284286,14.436425429828068,14.439824070371852,14.443222710915634,14.446621351459417,14.450019992003199,14.453418632546981,14.456817273090763,14.460215913634546,14.463614554178328,14.467013194722112,14.470411835265894,14.473810475809676,14.477209116353459,14.480607756897241,14.484006397441023,14.487405037984805,14.49080367852859,14.494202319072372,14.497600959616154,14.500999600159936,14.504398240703718,14.5077968812475,14.511195521791283,14.514594162335065,14.51799280287885,14.521391443422631,14.524790083966414,14.528188724510196,14.531587365053978,14.53498600559776,14.538384646141543,14.541783286685327,14.545181927229109,14.548580567772891,14.551979208316673,14.555377848860456,14.558776489404238,14.56217512994802,14.565573770491802,14.568972411035586,14.572371051579369,14.575769692123151,14.579168332666933,14.582566973210715,14.585965613754498,14.58936425429828,14.592762894842064,14.596161535385846,14.599560175929629,14.60295881647341,14.606357457017193,14.609756097560975,14.613154738104758,14.61655337864854,14.619952019192324,14.623350659736106,14.626749300279888,14.63014794082367,14.633546581367453,14.636945221911235,14.640343862455017,14.643742502998801,14.647141143542584,14.650539784086366,14.653938424630148,14.65733706517393,14.660735705717713,14.664134346261495,14.667532986805277,14.670931627349061,14.674330267892843,14.677728908436626,14.681127548980408,14.68452618952419,14.687924830067972,14.691323470611755,14.694722111155539,14.69812075169932,14.701519392243103,14.704918032786885,14.708316673330668,14.71171531387445,14.715113954418232,14.718512594962014,14.721911235505798,14.72530987604958,14.728708516593363,14.732107157137145,14.735505797680927,14.73890443822471,14.742303078768492,14.745701719312276,14.749100359856058,14.75249900039984,14.755897640943623,14.759296281487405,14.762694922031187,14.76609356257497,14.769492203118752,14.772890843662536,14.776289484206318,14.7796881247501,14.783086765293882,14.786485405837665,14.789884046381447,14.79328268692523,14.796681327469013,14.800079968012795,14.803478608556578,14.80687724910036,14.810275889644142,14.813674530187924,14.817073170731707,14.820471811275489,14.823870451819273,14.827269092363055,14.830667732906837,14.83406637345062,14.837465013994402,14.840863654538184,14.844262295081966,14.84766093562575,14.851059576169533,14.854458216713315,14.857856857257097,14.86125549780088,14.864654138344662,14.868052778888444,14.871451419432226,14.87485005997601,14.878248700519793,14.881647341063575,14.885045981607357,14.88844462215114,14.891843262694922,14.895241903238704,14.898640543782488,14.90203918432627,14.905437824870052,14.908836465413835,14.912235105957617,14.915633746501399,14.919032387045181,14.922431027588964,14.925829668132748,14.92922830867653,14.932626949220312,14.936025589764094,14.939424230307877,14.942822870851659,14.946221511395441,14.949620151939225,14.953018792483007,14.95641743302679,14.959816073570572,14.963214714114354,14.966613354658136,14.970011995201919,14.9734106357457,14.976809276289485,14.980207916833267,14.98360655737705,14.987005197920832,14.990403838464614,14.993802479008396,14.997201119552178,15.000599760095962,15.003998400639745,15.007397041183527,15.01079568172731,15.014194322271091,15.017592962814874,15.020991603358656,15.024390243902438,15.027788884446222,15.031187524990004,15.034586165533787,15.037984806077569,15.041383446621351,15.044782087165133,15.048180727708916,15.0515793682527,15.054978008796482,15.058376649340264,15.061775289884046,15.065173930427829,15.068572570971611,15.071971211515393,15.075369852059175,15.07876849260296,15.082167133146742,15.085565773690524,15.088964414234306,15.092363054778088,15.09576169532187,15.099160335865653,15.102558976409437,15.10595761695322,15.109356257497002,15.112754898040784,15.116153538584566,15.119552179128348,15.12295081967213,15.126349460215913,15.129748100759697,15.133146741303479,15.136545381847261,15.139944022391044,15.143342662934826,15.146741303478608,15.15013994402239,15.153538584566174,15.156937225109957,15.160335865653739,15.163734506197521,15.167133146741303,15.170531787285086,15.173930427828868,15.17732906837265,15.180727708916434,15.184126349460216,15.187524990003999,15.19092363054778,15.194322271091563,15.197720911635345,15.201119552179128,15.204518192722912,15.207916833266694,15.211315473810476,15.214714114354258,15.21811275489804,15.221511395441823,15.224910035985605,15.22830867652939,15.231707317073171,15.235105957616954,15.238504598160736,15.241903238704518,15.2453018792483,15.248700519792083,15.252099160335865,15.255497800879649,15.258896441423431,15.262295081967213,15.265693722510996,15.269092363054778,15.27249100359856,15.275889644142342,15.279288284686126,15.282686925229909,15.286085565773691,15.289484206317473,15.292882846861255,15.296281487405038,15.29968012794882,15.303078768492602,15.306477409036386,15.309876049580168,15.31327469012395,15.316673330667733,15.320071971211515,15.323470611755297,15.32686925229908,15.330267892842864,15.333666533386646,15.337065173930428,15.34046381447421,15.343862455017993,15.347261095561775,15.350659736105557,15.35405837664934,15.357457017193124,15.360855657736906,15.364254298280688,15.36765293882447,15.371051579368253,15.374450219912035,15.377848860455817,15.381247500999601,15.384646141543383,15.388044782087166,15.391443422630948,15.39484206317473,15.398240703718512,15.401639344262295,15.405037984806077,15.40843662534986,15.411835265893643,15.415233906437425,15.418632546981208,15.42203118752499,15.425429828068772,15.428828468612554,15.432227109156338,15.43562574970012,15.439024390243903,15.442423030787685,15.445821671331467,15.44922031187525,15.452618952419032,15.456017592962814,15.459416233506598,15.46281487405038,15.466213514594163,15.469612155137945,15.473010795681727,15.47640943622551,15.479808076769292,15.483206717313076,15.486605357856858,15.49000399840064,15.493402638944422,15.496801279488205,15.500199920031987,15.50359856057577,15.506997201119551,15.510395841663335,15.513794482207118,15.5171931227509,15.520591763294682,15.523990403838464,15.527389044382247,15.530787684926029,15.534186325469813,15.537584966013595,15.540983606557377,15.54438224710116,15.547780887644942,15.551179528188724,15.554578168732506,15.557976809276289,15.561375449820073,15.564774090363855,15.568172730907637,15.57157137145142,15.574970011995202,15.578368652538984,15.581767293082766,15.58516593362655,15.588564574170332,15.591963214714115,15.595361855257897,15.59876049580168,15.602159136345461,15.605557776889244,15.608956417433026,15.61235505797681,15.615753698520592,15.619152339064375,15.622550979608157,15.625949620151939,15.629348260695721,15.632746901239504,15.636145541783288,15.63954418232707,15.642942822870852,15.646341463414634,15.649740103958417,15.653138744502199,15.656537385045981,15.659936025589763,15.663334666133547,15.66673330667733,15.670131947221112,15.673530587764894,15.676929228308676,15.680327868852459,15.68372650939624,15.687125149940025,15.690523790483807,15.69392243102759,15.697321071571372,15.700719712115154,15.704118352658936,15.707516993202718,15.7109156337465,15.714314274290285,15.717712914834067,15.721111555377849,15.724510195921631,15.727908836465414,15.731307477009196,15.734706117552978,15.738104758096762,15.741503398640544,15.744902039184327,15.748300679728109,15.751699320271891,15.755097960815673,15.758496601359456,15.761895241903238,15.765293882447022,15.768692522990804,15.772091163534586,15.775489804078369,15.778888444622151,15.782287085165933,15.785685725709715,15.7890843662535,15.792483006797282,15.795881647341064,15.799280287884846,15.802678928428628,15.80607756897241,15.809476209516193,15.812874850059975,15.81627349060376,15.819672131147541,15.823070771691324,15.826469412235106,15.829868052778888,15.83326669332267,15.836665333866453,15.840063974410237,15.843462614954019,15.846861255497801,15.850259896041583,15.853658536585366,15.857057177129148,15.86045581767293,15.863854458216712,15.867253098760496,15.870651739304279,15.874050379848061,15.877449020391843,15.880847660935625,15.884246301479408,15.88764494202319,15.891043582566974,15.894442223110756,15.897840863654539,15.90123950419832,15.904638144742103,15.908036785285885,15.911435425829668,15.91483406637345,15.918232706917234,15.921631347461016,15.925029988004798,15.92842862854858,15.931827269092363,15.935225909636145,15.938624550179927,15.942023190723711,15.945421831267494,15.948820471811276,15.952219112355058,15.95561775289884,15.959016393442623,15.962415033986405,15.965813674530187,15.969212315073971,15.972610955617753,15.976009596161536,15.979408236705318,15.9828068772491,15.986205517792882,15.989604158336665,15.993002798880449,15.99640143942423,15.999800079968013,16.003198720511794,16.00659736105558,16.00999600159936,16.013394642143144,16.016793282686926,16.02019192323071,16.02359056377449,16.026989204318273,16.030387844862055,16.033786485405837,16.03718512594962,16.040583766493402,16.043982407037184,16.047381047580966,16.05077968812475,16.05417832866853,16.057576969212317,16.0609756097561,16.06437425029988,16.067772890843663,16.071171531387446,16.074570171931228,16.07796881247501,16.081367453018792,16.084766093562575,16.088164734106357,16.09156337465014,16.09496201519392,16.098360655737704,16.101759296281486,16.105157936825268,16.108556577369054,16.111955217912836,16.11535385845662,16.1187524990004,16.122151139544183,16.125549780087965,16.128948420631747,16.13234706117553,16.135745701719312,16.139144342263094,16.142542982806876,16.14594162335066,16.14934026389444,16.152738904438223,16.156137544982005,16.15953618552579,16.162934826069574,16.166333466613356,16.169732107157138,16.17313074770092,16.176529388244703,16.179928028788485,16.183326669332267,16.18672530987605,16.19012395041983,16.193522590963614,16.196921231507396,16.20031987205118,16.20371851259496,16.207117153138743,16.21051579368253,16.21391443422631,16.217313074770093,16.220711715313875,16.224110355857658,16.22750899640144,16.230907636945222,16.234306277489004,16.237704918032787,16.24110355857657,16.24450219912035,16.247900839664133,16.251299480207916,16.254698120751698,16.25809676129548,16.261495401839266,16.264894042383048,16.26829268292683,16.271691323470613,16.275089964014395,16.278488604558177,16.28188724510196,16.28528588564574,16.288684526189524,16.292083166733306,16.29548180727709,16.29888044782087,16.302279088364653,16.305677728908435,16.309076369452217,16.312475009996003,16.315873650539785,16.319272291083568,16.32267093162735,16.326069572171132,16.329468212714914,16.332866853258697,16.33626549380248,16.33966413434626,16.343062774890043,16.346461415433826,16.349860055977608,16.35325869652139,16.356657337065172,16.360055977608955,16.36345461815274,16.366853258696523,16.370251899240305,16.373650539784087,16.37704918032787,16.38044782087165,16.383846461415434,16.387245101959216,16.390643742503,16.39404238304678,16.397441023590563,16.400839664134345,16.404238304678127,16.40763694522191,16.411035585765692,16.414434226309478,16.41783286685326,16.421231507397042,16.424630147940825,16.428028788484607,16.43142742902839,16.43482606957217,16.438224710115954,16.441623350659736,16.445021991203518,16.4484206317473,16.451819272291083,16.455217912834865,16.458616553378647,16.46201519392243,16.465413834466215,16.468812475009997,16.47221111555378,16.475609756097562,16.479008396641344,16.482407037185126,16.48580567772891,16.48920431827269,16.492602958816473,16.496001599360255,16.499400239904038,16.50279888044782,16.506197520991602,16.509596161535384,16.512994802079167,16.516393442622952,16.519792083166735,16.523190723710517,16.5265893642543,16.52998800479808,16.533386645341864,16.536785285885646,16.540183926429428,16.54358256697321,16.546981207516993,16.550379848060775,16.553778488604557,16.55717712914834,16.56057576969212,16.563974410235904,16.56737305077969,16.570771691323472,16.574170331867254,16.577568972411036,16.58096761295482,16.5843662534986,16.587764894042383,16.591163534586165,16.594562175129948,16.59796081567373,16.601359456217512,16.604758096761294,16.608156737305077,16.61155537784886,16.61495401839264,16.618352658936427,16.62175129948021,16.62514994002399,16.628548580567774,16.631947221111556,16.63534586165534,16.63874450219912,16.642143142742903,16.645541783286685,16.648940423830467,16.65233906437425,16.65573770491803,16.659136345461814,16.662534986005596,16.66593362654938,16.669332267093164,16.672730907636947,16.67612954818073,16.67952818872451,16.682926829268293,16.686325469812076,16.689724110355858,16.69312275089964,16.696521391443422,16.699920031987205,16.703318672530987,16.70671731307477,16.71011595361855,16.713514594162334,16.716913234706116,16.7203118752499,16.723710515793684,16.727109156337466,16.73050779688125,16.73390643742503,16.737305077968813,16.740703718512595,16.744102359056377,16.74750099960016,16.750899640143942,16.754298280687724,16.757696921231506,16.76109556177529,16.76449420231907,16.767892842862853,16.77129148340664,16.77469012395042,16.778088764494203,16.781487405037986,16.784886045581768,16.78828468612555,16.791683326669332,16.795081967213115,16.798480607756897,16.80187924830068,16.80527788884446,16.808676529388244,16.812075169932026,16.815473810475808,16.818872451019594,16.822271091563376,16.82566973210716,16.82906837265094,16.832467013194723,16.835865653738505,16.839264294282287,16.84266293482607,16.846061575369852,16.849460215913634,16.852858856457416,16.8562574970012,16.85965613754498,16.863054778088763,16.866453418632545,16.86985205917633,16.873250699720113,16.876649340263896,16.880047980807678,16.88344662135146,16.886845261895242,16.890243902439025,16.893642542982807,16.89704118352659,16.90043982407037,16.903838464614154,16.907237105157936,16.91063574570172,16.9140343862455,16.917433026789283,16.92083166733307,16.92423030787685,16.927628948420633,16.931027588964415,16.934426229508198,16.93782487005198,16.941223510595762,16.944622151139544,16.948020791683327,16.95141943222711,16.95481807277089,16.958216713314673,16.961615353858456,16.965013994402238,16.96841263494602,16.971811275489806,16.975209916033588,16.97860855657737,16.982007197121153,16.985405837664935,16.988804478208717,16.9922031187525,16.99560175929628,16.999000399840064,17.002399040383846,17.00579768092763,17.00919632147141,17.012594962015193,17.015993602558975,17.019392243102757,17.022790883646543,17.026189524190325,17.029588164734108,17.03298680527789,17.036385445821672,17.039784086365454,17.043182726909237,17.04658136745302,17.0499800079968,17.053378648540583,17.056777289084366,17.060175929628148,17.06357457017193,17.066973210715712,17.070371851259495,17.07377049180328,17.077169132347063,17.080567772890845,17.083966413434627,17.08736505397841,17.09076369452219,17.094162335065974,17.097560975609756,17.10095961615354,17.10435825669732,17.107756897241103,17.111155537784885,17.114554178328667,17.11795281887245,17.121351459416232,17.124750099960018,17.1281487405038,17.131547381047582,17.134946021591364,17.138344662135147,17.14174330267893,17.14514194322271,17.148540583766493,17.151939224310276,17.155337864854058,17.15873650539784,17.162135145941622,17.165533786485405,17.168932427029187,17.17233106757297,17.175729708116755,17.179128348660537,17.18252698920432,17.185925629748102,17.189324270291884,17.192722910835666,17.19612155137945,17.19952019192323,17.202918832467013,17.206317473010795,17.209716113554578,17.21311475409836,17.216513394642142,17.219912035185924,17.223310675729707,17.226709316273492,17.230107956817275,17.233506597361057,17.23690523790484,17.24030387844862,17.243702518992404,17.247101159536186,17.250499800079968,17.25389844062375,17.257297081167533,17.260695721711315,17.264094362255097,17.26749300279888,17.27089164334266,17.274290283886444,17.27768892443023,17.281087564974012,17.284486205517794,17.287884846061576,17.29128348660536,17.29468212714914,17.298080767692923,17.301479408236705,17.304878048780488,17.30827668932427,17.311675329868052,17.315073970411834,17.318472610955617,17.3218712514994,17.32526989204318,17.328668532586967,17.33206717313075,17.33546581367453,17.338864454218314,17.342263094762096,17.345661735305878,17.34906037584966,17.352459016393443,17.355857656937225,17.359256297481007,17.36265493802479,17.36605357856857,17.369452219112354,17.372850859656136,17.37624950019992,17.379648140743704,17.383046781287486,17.38644542183127,17.38984406237505,17.393242702918833,17.396641343462615,17.400039984006398,17.40343862455018,17.406837265093962,17.410235905637744,17.413634546181527,17.41703318672531,17.42043182726909,17.423830467812873,17.427229108356656,17.43062774890044,17.434026389444224,17.437425029988006,17.44082367053179,17.44422231107557,17.447620951619353,17.451019592163135,17.454418232706917,17.4578168732507,17.461215513794482,17.464614154338264,17.468012794882046,17.47141143542583,17.47481007596961,17.478208716513393,17.48160735705718,17.48500599760096,17.488404638144743,17.491803278688526,17.495201919232308,17.49860055977609,17.501999200319872,17.505397840863655,17.508796481407437,17.51219512195122,17.515593762495,17.518992403038784,17.522391043582566,17.525789684126348,17.52918832467013,17.532586965213916,17.5359856057577,17.53938424630148,17.542782886845263,17.546181527389045,17.549580167932827,17.55297880847661,17.556377449020392,17.559776089564174,17.563174730107956,17.56657337065174,17.56997201119552,17.573370651739303,17.576769292283085,17.580167932826868,17.583566573370653,17.586965213914436,17.590363854458218,17.593762495002,17.597161135545782,17.600559776089565,17.603958416633347,17.60735705717713,17.61075569772091,17.614154338264694,17.617552978808476,17.620951619352258,17.62435025989604,17.627748900439823,17.631147540983605,17.63454618152739,17.637944822071173,17.641343462614955,17.644742103158737,17.64814074370252,17.651539384246302,17.654938024790084,17.658336665333866,17.66173530587765,17.66513394642143,17.668532586965213,17.671931227508995,17.675329868052778,17.67872850859656,17.682127149140342,17.685525789684128,17.68892443022791,17.692323070771693,17.695721711315475,17.699120351859257,17.70251899240304,17.70591763294682,17.709316273490604,17.712714914034386,17.71611355457817,17.71951219512195,17.722910835665733,17.726309476209515,17.729708116753297,17.73310675729708,17.736505397840865,17.739904038384648,17.74330267892843,17.746701319472212,17.750099960015994,17.753498600559777,17.75689724110356,17.76029588164734,17.763694522191123,17.767093162734906,17.770491803278688,17.77389044382247,17.777289084366252,17.780687724910035,17.784086365453817,17.787485005997603,17.790883646541385,17.794282287085167,17.79768092762895,17.80107956817273,17.804478208716514,17.807876849260296,17.81127548980408,17.81467413034786,17.818072770891643,17.821471411435425,17.824870051979207,17.82826869252299,17.831667333066772,17.835065973610554,17.83846461415434,17.841863254698122,17.845261895241904,17.848660535785687,17.85205917632947,17.85545781687325,17.858856457417033,17.862255097960816,17.865653738504598,17.86905237904838,17.872451019592162,17.875849660135945,17.879248300679727,17.88264694122351,17.88604558176729,17.889444222311077,17.89284286285486,17.89624150339864,17.899640143942424,17.903038784486206,17.90643742502999,17.90983606557377,17.913234706117553,17.916633346661335,17.920031987205117,17.9234306277489,17.926829268292682,17.930227908836464,17.933626549380246,17.93702518992403,17.940423830467815,17.943822471011597,17.94722111155538,17.95061975209916,17.954018392642944,17.957417033186726,17.960815673730508,17.96421431427429,17.967612954818073,17.971011595361855,17.974410235905637,17.97780887644942,17.9812075169932,17.984606157536984,17.988004798080766,17.991403438624552,17.994802079168334,17.998200719712116,18.0015993602559,18.00499800079968,18.008396641343463,18.011795281887245,18.015193922431028,18.01859256297481,18.021991203518592,18.025389844062374,18.028788484606157,18.03218712514994,18.03558576569372,18.038984406237503,18.04238304678129,18.04578168732507,18.049180327868854,18.052578968412636,18.055977608956418,18.0593762495002,18.062774890043983,18.066173530587765,18.069572171131547,18.07297081167533,18.07636945221911,18.079768092762894,18.083166733306676,18.08656537385046,18.08996401439424,18.093362654938026,18.09676129548181,18.10015993602559,18.103558576569373,18.106957217113155,18.110355857656938,18.11375449820072,18.117153138744502,18.120551779288284,18.123950419832067,18.12734906037585,18.13074770091963,18.134146341463413,18.137544982007196,18.140943622550978,18.144342263094764,18.147740903638546,18.151139544182328,18.15453818472611,18.157936825269893,18.161335465813675,18.164734106357457,18.16813274690124,18.17153138744502,18.174930027988804,18.178328668532586,18.18172730907637,18.18512594962015,18.188524590163933,18.191923230707715,18.1953218712515,18.198720511795283,18.202119152339066,18.205517792882848,18.20891643342663,18.212315073970412,18.215713714514195,18.219112355057977,18.22251099560176,18.22590963614554,18.229308276689324,18.232706917233106,18.236105557776888,18.23950419832067,18.242902838864453,18.24630147940824,18.24970011995202,18.253098760495803,18.256497401039585,18.259896041583367,18.26329468212715,18.266693322670932,18.270091963214714,18.273490603758496,18.27688924430228,18.28028788484606,18.283686525389843,18.287085165933625,18.290483806477408,18.29388244702119,18.297281087564976,18.300679728108758,18.30407836865254,18.307477009196322,18.310875649740105,18.314274290283887,18.31767293082767,18.32107157137145,18.324470211915234,18.327868852459016,18.331267493002798,18.33466613354658,18.338064774090363,18.341463414634145,18.344862055177927,18.348260695721713,18.351659336265495,18.355057976809277,18.35845661735306,18.361855257896842,18.365253898440624,18.368652538984406,18.37205117952819,18.37544982007197,18.378848460615753,18.382247101159535,18.385645741703318,18.3890443822471,18.392443022790882,18.395841663334664,18.39924030387845,18.402638944422232,18.406037584966015,18.409436225509797,18.41283486605358,18.41623350659736,18.419632147141144,18.423030787684926,18.426429428228708,18.42982806877249,18.433226709316273,18.436625349860055,18.440023990403837,18.44342263094762,18.4468212714914,18.450219912035188,18.45361855257897,18.457017193122752,18.460415833666534,18.463814474210317,18.4672131147541,18.47061175529788,18.474010395841663,18.477409036385446,18.480807676929228,18.48420631747301,18.487604958016792,18.491003598560575,18.494402239104357,18.49780087964814,18.501199520191925,18.504598160735707,18.50799680127949,18.51139544182327,18.514794082367054,18.518192722910836,18.52159136345462,18.5249900039984,18.528388644542183,18.531787285085965,18.535185925629747,18.53858456617353,18.541983206717312,18.545381847261094,18.548780487804876,18.552179128348662,18.555577768892444,18.558976409436227,18.56237504998001,18.56577369052379,18.569172331067573,18.572570971611356,18.575969612155138,18.57936825269892,18.582766893242702,18.586165533786485,18.589564174330267,18.59296281487405,18.59636145541783,18.599760095961614,18.6031587365054,18.60655737704918,18.609956017592964,18.613354658136746,18.61675329868053,18.62015193922431,18.623550579768093,18.626949220311875,18.630347860855657,18.63374650139944,18.637145141943222,18.640543782487004,18.643942423030786,18.64734106357457,18.65073970411835,18.654138344662137,18.65753698520592,18.6609356257497,18.664334266293483,18.667732906837266,18.671131547381048,18.67453018792483,18.677928828468612,18.681327469012395,18.684726109556177,18.68812475009996,18.69152339064374,18.694922031187524,18.698320671731306,18.701719312275088,18.705117952818874,18.708516593362656,18.71191523390644,18.71531387445022,18.718712514994003,18.722111155537785,18.725509796081568,18.72890843662535,18.732307077169132,18.735705717712914,18.739104358256697,18.74250299880048,18.74590163934426,18.749300279888043,18.752698920431826,18.75609756097561,18.759496201519394,18.762894842063176,18.766293482606958,18.76969212315074,18.773090763694523,18.776489404238305,18.779888044782087,18.78328668532587,18.78668532586965,18.790083966413434,18.793482606957216,18.796881247501,18.80027988804478,18.803678528588563,18.80707716913235,18.81047580967613,18.813874450219913,18.817273090763695,18.820671731307478,18.82407037185126,18.827469012395042,18.830867652938824,18.834266293482607,18.83766493402639,18.84106357457017,18.844462215113953,18.847860855657736,18.851259496201518,18.8546581367453,18.858056777289086,18.861455417832868,18.86485405837665,18.868252698920433,18.871651339464215,18.875049980007997,18.87844862055178,18.88184726109556,18.885245901639344,18.888644542183126,18.89204318272691,18.89544182327069,18.898840463814473,18.902239104358255,18.905637744902037,18.909036385445823,18.912435025989605,18.915833666533388,18.91923230707717,18.922630947620952,18.926029588164734,18.929428228708517,18.9328268692523,18.93622550979608,18.939624150339863,18.943022790883646,18.946421431427428,18.94982007197121,18.953218712514992,18.95661735305878,18.96001599360256,18.963414634146343,18.966813274690125,18.970211915233907,18.97361055577769,18.97700919632147,18.980407836865254,18.983806477409036,18.98720511795282,18.9906037584966,18.994002399040383,18.997401039584165,19.000799680127948,19.00419832067173,19.007596961215516,19.010995601759298,19.01439424230308,19.017792882846862,19.021191523390645,19.024590163934427,19.02798880447821,19.03138744502199,19.034786085565774,19.038184726109556,19.041583366653338,19.04498200719712,19.048380647740903,19.051779288284685,19.055177928828467,19.058576569372253,19.061975209916035,19.065373850459817,19.0687724910036,19.072171131547382,19.075569772091164,19.078968412634946,19.08236705317873,19.08576569372251,19.089164334266293,19.092562974810075,19.095961615353858,19.09936025589764,19.102758896441422,19.106157536985204,19.10955617752899,19.112954818072772,19.116353458616555,19.119752099160337,19.12315073970412,19.1265493802479,19.129948020791684,19.133346661335466,19.136745301879248,19.14014394242303,19.143542582966813,19.146941223510595,19.150339864054377,19.15373850459816,19.15713714514194,19.160535785685727,19.16393442622951,19.167333066773292,19.170731707317074,19.174130347860856,19.17752898840464,19.18092762894842,19.184326269492203,19.187724910035985,19.191123550579768,19.19452219112355,19.197920831667332,19.201319472211114,19.204718112754897,19.20811675329868,19.211515393842465,19.214914034386247,19.21831267493003,19.22171131547381,19.225109956017594,19.228508596561376,19.23190723710516,19.23530587764894,19.238704518192723,19.242103158736505,19.245501799280287,19.24890043982407,19.25229908036785,19.255697720911634,19.259096361455416,19.262495001999202,19.265893642542984,19.269292283086767,19.27269092363055,19.27608956417433,19.279488204718113,19.282886845261896,19.286285485805678,19.28968412634946,19.293082766893242,19.296481407437025,19.299880047980807,19.30327868852459,19.30667732906837,19.310075969612154,19.31347461015594,19.31687325069972,19.320271891243504,19.323670531787286,19.32706917233107,19.33046781287485,19.333866453418633,19.337265093962415,19.340663734506197,19.34406237504998,19.347461015593762,19.350859656137544,19.354258296681326,19.35765693722511,19.36105557776889,19.364454218312677,19.36785285885646,19.37125149940024,19.374650139944023,19.378048780487806,19.381447421031588,19.38484606157537,19.388244702119152,19.391643342662935,19.395041983206717,19.3984406237505,19.40183926429428,19.405237904838064,19.408636545381846,19.412035185925628,19.415433826469414,19.418832467013196,19.42223110755698,19.42562974810076,19.429028388644543,19.432427029188325,19.435825669732107,19.43922431027589,19.442622950819672,19.446021591363454,19.449420231907236,19.45281887245102,19.4562175129948,19.459616153538583,19.463014794082365,19.46641343462615,19.469812075169934,19.473210715713716,19.476609356257498,19.48000799680128,19.483406637345063,19.486805277888845,19.490203918432627,19.49360255897641,19.49700119952019,19.500399840063974,19.503798480607756,19.50719712115154,19.51059576169532,19.513994402239103,19.51739304278289,19.52079168332667,19.524190323870453,19.527588964414235,19.530987604958018,19.5343862455018,19.537784886045582,19.541183526589364,19.544582167133147,19.54798080767693,19.55137944822071,19.554778088764493,19.558176729308276,19.561575369852058,19.56497401039584,19.568372650939626,19.571771291483408,19.57516993202719,19.578568572570973,19.581967213114755,19.585365853658537,19.58876449420232,19.5921631347461,19.595561775289884,19.598960415833666,19.60235905637745,19.60575769692123,19.609156337465013,19.612554978008795,19.615953618552577,19.619352259096363,19.622750899640145,19.626149540183928,19.62954818072771,19.632946821271492,19.636345461815274,19.639744102359057,19.64314274290284,19.64654138344662,19.649940023990403,19.653338664534186,19.656737305077968,19.66013594562175,19.663534586165532,19.666933226709315,19.6703318672531,19.673730507796883,19.677129148340665,19.680527788884447,19.68392642942823,19.68732506997201,19.690723710515794,19.694122351059576,19.69752099160336,19.70091963214714,19.704318272690923,19.707716913234705,19.711115553778487,19.71451419432227,19.717912834866052,19.721311475409838,19.72471011595362,19.728108756497402,19.731507397041185,19.734906037584967,19.73830467812875,19.74170331867253,19.745101959216314,19.748500599760096,19.751899240303878,19.75529788084766,19.758696521391443,19.762095161935225,19.765493802479007,19.76889244302279,19.772291083566575,19.775689724110357,19.77908836465414,19.782487005197922,19.785885645741704,19.789284286285486,19.79268292682927,19.79608156737305,19.799480207916833,19.802878848460615,19.806277489004398,19.80967612954818,19.813074770091962,19.816473410635744,19.819872051179527,19.823270691723312,19.826669332267095,19.830067972810877,19.83346661335466,19.83686525389844,19.840263894442224,19.843662534986006,19.847061175529788,19.85045981607357,19.853858456617353,19.857257097161135,19.860655737704917,19.8640543782487,19.86745301879248,19.870851659336264,19.87425029988005,19.877648940423832,19.881047580967614,19.884446221511396,19.88784486205518,19.89124350259896,19.894642143142743,19.898040783686525,19.901439424230308,19.90483806477409,19.908236705317872,19.911635345861654,19.915033986405437,19.91843262694922,19.921831267493,19.925229908036787,19.92862854858057,19.93202718912435,19.935425829668134,19.938824470211916,19.942223110755698,19.94562175129948,19.949020391843263,19.952419032387045,19.955817672930827,19.95921631347461,19.96261495401839,19.966013594562174,19.969412235105956,19.97281087564974,19.976209516193524,19.979608156737307,19.98300679728109,19.98640543782487,19.989804078368653,19.993202718912436,19.996601359456218,20.0]}

},{}],46:[function(require,module,exports){
module.exports={"expected":[1.5853309190424043,1.5857666508475283,1.5862022629565686,1.5866377554681128,1.5870731284806139,1.5875083820923892,1.5879435164016218,1.5883785315063597,1.5888134275045172,1.5892482044938745,1.5896828625720778,1.5901174018366406,1.5905518223849422,1.5909861243142294,1.5914203077216167,1.5918543727040855,1.5922883193584851,1.5927221477815336,1.5931558580698164,1.5935894503197885,1.5940229246277726,1.5944562810899614,1.5948895198024164,1.5953226408610686,1.5957556443617193,1.5961885304000398,1.596621299071571,1.597053950471725,1.5974864846957846,1.5979189018389035,1.5983512019961068,1.598783385262291,1.5992154517322248,1.5996474015005482,1.6000792346617738,1.600510951310287,1.6009425515403457,1.6013740354460806,1.6018054031214957,1.6022366546604683,1.60266779015675,1.6030988097039662,1.6035297133956157,1.6039605013250724,1.6043911735855847,1.6048217302702759,1.6052521714721442,1.6056824972840635,1.606112707798783,1.6065428031089277,1.6069727833069989,1.607402648485374,1.607832398736307,1.6082620341519287,1.6086915548242464,1.6091209608451453,1.6095502523063876,1.609979429299613,1.61040849191634,1.6108374402479637,1.6112662743857593,1.611694994420879,1.6121236004443547,1.6125520925470969,1.6129804708198958,1.613408735353421,1.6138368862382213,1.6142649235647257,1.6146928474232436,1.615120657903964,1.615548355096958,1.6159759390921755,1.6164034099794489,1.6168307678484914,1.6172580127888978,1.6176851448901441,1.6181121642415892,1.6185390709324725,1.6189658650519176,1.6193925466889292,1.6198191159323956,1.6202455728710878,1.6206719175936604,1.6210981501886506,1.6215242707444797,1.6219502793494531,1.6223761760917599,1.6228019610594735,1.623227634340552,1.6236531960228382,1.6240786461940597,1.6245039849418288,1.624929212353644,1.6253543285168888,1.6257793335188322,1.62620422744663,1.6266290103873233,1.62705368242784,1.6274782436549948,1.6279026941554888,1.6283270340159102,1.6287512633227346,1.6291753821623243,1.6295993906209305,1.6300232887846908,1.6304470767396322,1.6308707545716687,1.6312943223666037,1.6317177802101284,1.6321411281878233,1.6325643663851581,1.6329874948874916,1.6334105137800714,1.633833423148036,1.6342562230764126,1.6346789136501192,1.6351014949539633,1.6355239670726438,1.635946330090749,1.6363685840927595,1.6367907291630455,1.6372127653858697,1.637634692845385,1.6380565116256371,1.6384782218105627,1.6388998234839907,1.639321316729642,1.6397427016311308,1.6401639782719628,1.6405851467355372,1.6410062071051457,1.6414271594639736,1.6418480038950989,1.6422687404814942,1.6426893693060247,1.6431098904514503,1.643530304000425,1.6439506100354966,1.644370808639108,1.644790899893596,1.6452108838811936,1.6456307606840272,1.64605053038412,1.6464701930633894,1.6468897488036491,1.6473091976866088,1.6477285397938737,1.648147775206945,1.6485669040072215,1.648985926275997,1.649404842094463,1.6498236515437072,1.6502423547047154,1.6506609516583701,1.6510794424854511,1.6514978272666363,1.651916106082501,1.6523342790135187,1.6527523461400615,1.6531703075423987,1.6535881633006997,1.6540059134950313,1.6544235582053606,1.654841097511552,1.6552585314933708,1.6556758602304806,1.6560930838024457,1.6565102022887292,1.6569272157686947,1.6573441243216058,1.6577609280266268,1.658177626962822,1.6585942212091562,1.6590107108444958,1.659427095947608,1.6598433765971607,1.6602595528717237,1.6606756248497683,1.6610915926096672,1.6615074562296952,1.6619232157880293,1.6623388713627487,1.6627544230318345,1.6631698708731713,1.6635852149645456,1.6640004553836472,1.6644155922080692,1.6648306255153074,1.6652455553827616,1.6656603818877347,1.6660751051074338,1.6664897251189696,1.666904241999357,1.6673186558255153,1.667732966674268,1.6681471746223435,1.6685612797463747,1.6689752821228994,1.6693891818283608,1.6698029789391071,1.6702166735313917,1.6706302656813745,1.67104375546512,1.6714571429585996,1.67187042823769,1.6722836113781745,1.6726966924557427,1.6731096715459908,1.6735225487244219,1.673935324066446,1.6743479976473796,1.6747605695424472,1.67517303982678,1.675585408575417,1.6759976758633046,1.6764098417652977,1.6768219063561587,1.6772338697105587,1.6776457319030758,1.6780574930081984,1.6784691531003217,1.6788807122537515,1.679292170542701,1.6797035280412933,1.6801147848235607,1.680525940963445,1.6809369965347971,1.6813479516113778,1.6817588062668585,1.6821695605748195,1.6825802146087518,1.6829907684420569,1.6834012221480468,1.6838115757999437,1.684221829470881,1.6846319832339032,1.6850420371619654,1.685451991327934,1.6858618458045875,1.686271600664615,1.686681255980618,1.6870908118251093,1.6875002682705147,1.687909625389171,1.6883188832533278,1.688728041935147,1.6891371015067036,1.6895460620399847,1.6899549236068907,1.690363686279235,1.6907723501287442,1.6911809152270578,1.6915893816457295,1.6919977494562257,1.6924060187299281,1.6928141895381306,1.693222261952042,1.6936302360427855,1.6940381118813985,1.6944458895388326,1.6948535690859545,1.695261150593545,1.6956686341323008,1.6960760197728328,1.6964833075856676,1.696890497641247,1.6972975900099283,1.697704584761985,1.6981114819676049,1.6985182816968936,1.6989249840198712,1.6993315890064753,1.6997380967265587,1.7001445072498915,1.70055082064616,1.7009570369849676,1.7013631563358345,1.7017691787681974,1.702175104351411,1.7025809331547472,1.7029866652473946,1.7033923006984604,1.7037978395769686,1.7042032819518622,1.704608627892001,1.7050138774661638,1.7054190307430472,1.7058240877912667,1.7062290486793554,1.7066339134757669,1.7070386822488712,1.7074433550669597,1.7078479319982407,1.7082524131108434,1.7086567984728156,1.7090610881521244,1.7094652822166574,1.709869380734221,1.710273383772542,1.7106772913992672,1.711081103681963,1.7114848206881175,1.7118884424851373,1.712291969140351,1.7126954007210078,1.713098737294277,1.7135019789272488,1.7139051256869355,1.7143081776402695,1.7147111348541055,1.7151139973952187,1.7155167653303067,1.7159194387259884,1.7163220176488043,1.716724502165218,1.7171268923416136,1.7175291882442987,1.7179313899395028,1.7183334974933777,1.7187355109719984,1.7191374304413618,1.7195392559673885,1.7199409876159217,1.7203426254527279,1.7207441695434964,1.7211456199538402,1.7215469767492961,1.7219482399953239,1.7223494097573075,1.7227504861005547,1.7231514690902974,1.723552358791691,1.723953155269816,1.7243538585896767,1.724754468816202,1.7251549860142452,1.725555410248585,1.7259557415839246,1.7263559800848918,1.72675612581604,1.7271561788418475,1.727556139226718,1.7279560070349813,1.7283557823308915,1.7287554651786297,1.7291550556423019,1.7295545537859407,1.7299539596735043,1.7303532733688776,1.7307524949358708,1.7311516244382215,1.731550661939594,1.7319496075035778,1.7323484611936912,1.7327472230733776,1.7331458932060089,1.7335444716548827,1.7339429584832249,1.7343413537541883,1.7347396575308536,1.7351378698762283,1.7355359908532486,1.7359340205247777,1.7363319589536073,1.736729806202457,1.7371275623339744,1.7375252274107356,1.7379228014952448,1.7383202846499355,1.7387176769371686,1.739114978419235,1.739512189158354,1.7399093092166733,1.7403063386562705,1.7407032775391518,1.7411001259272534,1.7414968838824403,1.7418935514665073,1.742290128741179,1.7426866157681093,1.7430830126088828,1.743479319325013,1.7438755359779443,1.7442716626290513,1.7446676993396384,1.745063646170941,1.7454595031841247,1.7458552704402859,1.7462509480004516,1.7466465359255798,1.7470420342765598,1.7474374431142112,1.7478327624992855,1.7482279924924655,1.7486231331543651,1.7490181845455297,1.7494131467264367,1.7498080197574948,1.750202803699045,1.7505974986113597,1.7509921045546442,1.751386621589035,1.7517810497746018,1.752175389171346,1.752569639839202,1.7529638018380365,1.7533578752276486,1.753751860067771,1.754145756418069,1.7545395643381403,1.7549332838875167,1.7553269151256627,1.7557204581119763,1.7561139129057886,1.756507279566365,1.7569005581529036,1.757293748724537,1.7576868513403314,1.7580798660592871,1.758472792940338,1.7588656320423528,1.759258383424134,1.759651047144419,1.7600436232618786,1.7604361118351195,1.7608285129226826,1.7612208265830434,1.761613052874612,1.7620051918557342,1.7623972435846904,1.7627892081196965,1.7631810855189036,1.7635728758403977,1.7639645791422012,1.7643561954822715,1.7647477249185017,1.7651391675087207,1.7655305233106937,1.7659217923821213,1.7663129747806408,1.7667040705638248,1.7670950797891833,1.767486002514162,1.7678768387961434,1.768267588692446,1.7686582522603256,1.7690488295569744,1.7694393206395223,1.7698297255650346,1.7702200443905154,1.7706102771729046,1.7710004239690804,1.7713904848358575,1.7717804598299889,1.7721703490081644,1.7725601524270118,1.7729498701430966,1.7733395022129224,1.7737290486929305,1.7741185096394998,1.7745078851089482,1.774897175157531,1.775286379841443,1.775675499216816,1.776064533339721,1.7764534822661673,1.7768423460521041,1.7772311247534174,1.7776198184259335,1.7780084271254175,1.7783969509075734,1.778785389828044,1.7791737439424116,1.7795620133061982,1.7799501979748653,1.7803382980038132,1.7807263134483824,1.7811142443638528,1.7815020908054449,1.7818898528283176,1.782277530487571,1.7826651238382454,1.7830526329353205,1.783440057833717,1.783827398588295,1.7842146552538558,1.7846018278851414,1.784988916536834,1.7853759212635563,1.7857628421198724,1.786149679160287,1.786536432439246,1.7869231020111362,1.7873096879302852,1.7876961902509625,1.7880826090273787,1.7884689443136859,1.7888551961639774,1.7892413646322884,1.7896274497725964,1.790013451638819,1.7903993702848173,1.7907852057643938,1.7911709581312933,1.7915566274392019,1.7919422137417487,1.7923277170925052,1.792713137544985,1.7930984751526438,1.7934837299688804,1.7938689020470364,1.7942539914403959,1.7946389982021858,1.7950239223855755,1.7954087640436782,1.7957935232295503,1.79617819999619,1.7965627943965403,1.7969473064834867,1.7973317363098582,1.7977160839284279,1.7981003493919114,1.7984845327529693,1.7988686340642048,1.799252653378166,1.799636590747344,1.800020446224174,1.8004042198610364,1.8007879117102545,1.8011715218240965,1.8015550502547746,1.8019384970544459,1.802321862275212,1.8027051459691183,1.8030883481881559,1.80347146898426,1.803854508409311,1.8042374665151337,1.804620343353499,1.8050031389761219,1.8053858534346627,1.8057684867807273,1.8061510390658666,1.8065335103415772,1.8069159006593014,1.807298210070426,1.807680438626285,1.808062586378157,1.808444653377267,1.8088266396747852,1.8092085453218285,1.8095903703694598,1.809972114868688,1.810353778870468,1.8107353624257012,1.8111168655852354,1.811498288399865,1.8118796309203302,1.812260893197319,1.8126420752814651,1.8130231772233494,1.8134041990734997,1.8137851408823904,1.8141660027004434,1.814546784578027,1.8149274865654577,1.815308108712998,1.8156886510708585,1.816069113689197,1.816449496618119,1.8168297999076772,1.8172100236078719,1.8175901677686515,1.8179702324399118,1.8183502176714965,1.8187301235131976,1.8191099500147547,1.8194896972258556,1.8198693651961362,1.8202489539751807,1.8206284636125218,1.8210078941576406,1.8213872456599658,1.8217665181688758,1.8221457117336968,1.8225248264037044,1.8229038622281222,1.8232828192561232,1.8236616975368292,1.8240404971193107,1.8244192180525873,1.824797860385628,1.825176424167351,1.8255549094466237,1.8259333162722626,1.8263116446930339,1.8266898947576533,1.8270680665147863,1.8274461600130472,1.8278241753010007,1.8282021124271615,1.8285799714399935,1.8289577523879113,1.8293354553192784,1.8297130802824098,1.8300906273255695,1.8304680964969722,1.8308454878447828,1.8312228014171166,1.8316000372620396,1.8319771954275679,1.8323542759616682,1.832731278912258,1.8331082043272058,1.833485052254331,1.8338618227414023,1.8342385158361412,1.8346151315862196,1.8349916700392606,1.8353681312428378,1.8357445152444767,1.8361208220916538,1.8364970518317973,1.8368732045122862,1.8372492801804516,1.8376252788835756,1.8380012006688928,1.8383770455835886,1.8387528136748006,1.8391285049896182,1.839504119575083,1.8398796574781875,1.8402551187458778,1.840630503425051,1.8410058115625572,1.8413810432051976,1.8417561983997266,1.8421312771928513,1.8425062796312306,1.8428812057614756,1.843256055630151,1.8436308292837735,1.8440055267688127,1.844380148131691,1.8447546934187837,1.8451291626764188,1.8455035559508781,1.845877873288395,1.8462521147351572,1.846626280337305,1.847000370140933,1.847374384192088,1.8477483225367701,1.848122185220934,1.8484959722904868,1.8488696837912901,1.849243319769158,1.8496168802698598,1.8499903653391172,1.8503637750226072,1.850737109365959,1.851110368414757,1.8514835522145394,1.851856660810799,1.852229694248981,1.8526026525744872,1.852975535832672,1.8533483440688452,1.8537210773282702,1.8540937356561655,1.854466319097704,1.854838827698013,1.855211261502175,1.8555836205552267,1.85595590490216,1.8563281145879218,1.8567002496574132,1.8570723101554911,1.857444296126967,1.8578162076166083,1.8581880446691366,1.8585598073292289,1.8589314956415184,1.8593031096505932,1.8596746494009961,1.8600461149372265,1.8604175063037387,1.8607888235449432,1.8611600667052057,1.861531235828848,1.8619023309601475,1.8622733521433374,1.8626442994226071,1.863015172842102,1.8633859724459232,1.8637566982781286,1.8641273503827316,1.8644979288037022,1.8648684335849668,1.8652388647704077,1.8656092224038647,1.8659795065291325,1.8663497171899635,1.8667198544300665,1.8670899182931069,1.8674599088227068,1.8678298260624453,1.868199670055858,1.868569440846438,1.8689391384776344,1.869308762992854,1.8696783144354607,1.870047792848776,1.870417198276077,1.8707865307606002,1.8711557903455378,1.8715249770740403,1.871894090989215,1.872263132134127,1.872632100551799,1.8730009962852117,1.8733698193773027,1.8737385698709679,1.8741072478090606,1.8744758532343928,1.874844386189733,1.8752128467178089,1.8755812348613057,1.8759495506628672,1.8763177941650944,1.876685965410547,1.8770540644417435,1.8774220913011601,1.8777900460312313,1.8781579286743504,1.8785257392728687,1.8788934778690967,1.8792611445053033,1.8796287392237156,1.8799962620665198,1.8803637130758608,1.880731092293843,1.881098399762528,1.8814656355239379,1.8818327996200532,1.8821998920928138,1.882566912984118,1.882933862335824,1.8833007401897488,1.883667546587669,1.8840342815713202,1.8844009451823973,1.8847675374625552,1.885134058453408,1.885500508196529,1.8858668867334516,1.8862331941056687,1.8865994303546332,1.8869655955217568,1.887331689648412,1.8876977127759311,1.8880636649456062,1.888429546198689,1.8887953565763917,1.8891610961198864,1.8895267648703058,1.8898923628687416,1.8902578901562472,1.8906233467738358,1.8909887327624806,1.8913540481631153,1.8917192930166347,1.8920844673638935,1.8924495712457072,1.8928146047028518,1.893179567776064,1.8935444605060419,1.8939092829334432,1.8942740350988876,1.8946387170429546,1.8950033288061858,1.895367870429083,1.8957323419521097,1.8960967434156892,1.8964610748602078,1.8968253363260115,1.8971895278534083,1.8975536494826677,1.8979177012540198,1.8982816832076568,1.8986455953837325,1.899009437822361,1.8993732105636194,1.899736913647546,1.9001005471141406,1.9004641110033644,1.9008276053551412,1.901191030209356,1.901554385605856,1.9019176715844504,1.9022808881849098,1.9026440354469674,1.9030071134103186,1.9033701221146206,1.9037330615994925,1.9040959319045165,1.9044587330692369,1.904821465133159,1.9051841281357522,1.9055467221164477,1.9059092471146393,1.9062717031696828,1.9066340903208971,1.906996408607564,1.9073586580689275,1.9077208387441942,1.908082950672534,1.9084449938930794,1.9088069684449258,1.9091688743671316,1.909530711698718,1.9098924804786694,1.9102541807459332,1.9106158125394204,1.910977375898004,1.9113388708605215,1.9117002974657729,1.9120616557525225,1.9124229457594963,1.9127841675253854,1.9131453210888434,1.913506406488488,1.9138674237628996,1.914228372950623,1.914589254090167,1.9149500672200033,1.9153108123785672,1.9156714896042586,1.916032098935441,1.9163926404104417,1.9167531140675513,1.917113519945026,1.9174738580810846,1.9178341285139109,1.918194331281652,1.91855446642242,1.9189145339742906,1.9192745339753041,1.9196344664634652,1.919994331476743,1.9203541290530706,1.920713859230346,1.9210735220464317,1.9214331175391544,1.9217926457463057,1.9221521067056422,1.9225115004548843,1.9228708270317179,1.9232300864737932,1.9235892788187263,1.9239484041040964,1.924307462367449,1.9246664536462943,1.9250253779781075,1.9253842354003285,1.9257430259503627,1.9261017496655808,1.9264604065833182,1.9268189967408762,1.9271775201755206,1.9275359769244829,1.9278943670249604,1.9282526905141155,1.9286109474290758,1.9289691378069347,1.9293272616847514,1.9296853190995504,1.9300433100883219,1.9304012346880215,1.9307590929355714,1.9311168848678586,1.9314746105217366,1.9318322699340247,1.9321898631415078,1.9325473901809371,1.9329048510890294,1.9332622459024682,1.9336195746579024,1.9339768373919477,1.9343340341411852,1.934691164942163,1.9350482298313951,1.9354052288453623,1.9357621620205103,1.936119029393253,1.9364758309999701,1.9368325668770074,1.9371892370606774,1.9375458415872593,1.9379023804929993,1.9382588538141097,1.9386152615867693,1.9389716038471245,1.9393278806312877,1.9396840919753389,1.9400402379153239,1.9403963184872566,1.9407523337271169,1.9411082836708524,1.9414641683543776,1.9418199878135738,1.9421757420842893,1.94253143120234,1.9428870552035093,1.9432426141235468,1.9435981079981706,1.9439535368630652,1.944308900753883,1.9446641997062437,1.9450194337557343,1.9453746029379095,1.9457297072882918,1.9460847468423705,1.9464397216356035,1.9467946317034155,1.9471494770812,1.9475042578043167,1.9478589739080945,1.9482136254278293,1.9485682123987855,1.948922734856195,1.949277192835258,1.9496315863711418,1.9499859154989831,1.9503401802538858,1.950694380670922,1.9510485167851321,1.951402588631525,1.951756596245077,1.9521105396607334,1.9524644189134082,1.9528182340379827,1.953171985069307,1.9535256720422,1.9538792949914487,1.9542328539518092,1.9545863489580053,1.9549397800447301,1.9552931472466448,1.95564645059838,1.9559996901345345,1.9563528658896754,1.9567059778983398,1.957059026195033,1.957412010814229,1.9577649317903707,1.9581177891578707,1.9584705829511095,1.958823313204438,1.9591759799521746,1.959528583228608,1.9598811230679956,1.9602335995045643,1.9605860125725094,1.9609383623059966,1.9612906487391604,1.9616428719061045,1.9619950318409018,1.9623471285775953,1.962699162150197,1.9630511325926887,1.9634030399390212,1.9637548842231154,1.964106665478862,1.9644583837401206,1.9648100390407208,1.9651616314144622,1.9655131608951142,1.9658646275164156,1.9662160313120751,1.9665673723157717,1.966918650561154,1.9672698660818408,1.9676210189114203,1.9679721090834514,1.9683231366314629,1.9686741015889533,1.9690250039893917,1.9693758438662177,1.96972662125284,1.9700773361826387,1.9704279886889633,1.9707785788051344,1.9711291065644425,1.9714795720001488,1.9718299751454844,1.9721803160336515,1.9725305946978227,1.9728808111711407,1.9732309654867195,1.9735810576776427,1.9739310877769656,1.9742810558177137,1.9746309618328837,1.9749808058554421,1.975330587918327,1.9756803080544472,1.9760299662966825,1.976379562677883,1.9767290972308704,1.9770785699884372,1.977427980983347,1.9777773302483344,1.9781266178161045,1.9784758437193346,1.9788250079906726,1.9791741106627374,1.9795231517681193,1.9798721313393806,1.9802210494090537,1.9805699060096429,1.9809187011736242,1.9812674349334443,1.9816161073215224,1.9819647183702476,1.982313268111982,1.9826617565790587,1.9830101838037826,1.9833585498184294,1.9837068546552477,1.9840550983464567,1.984403280924248,1.9847514024207848,1.985099462868202,1.9854474622986065,1.9857954007440766,1.9861432782366635,1.9864910948083891,1.9868388504912482,1.9871865453172073,1.9875341793182046,1.987881752526151,1.988229264972929,1.9885767166903934,1.9889241077103716,1.9892714380646626,1.9896187077850374,1.9899659169032404,1.9903130654509875,1.9906601534599668,1.9910071809618395,1.9913541479882384,1.9917010545707696,1.9920479007410108,1.9923946865305127,1.9927414119707985,1.993088077093364,1.993434681929678,1.9937812265111807,1.9941277108692863,1.9944741350353814,1.9948204990408247,1.9951668029169483,1.995513046695057,1.9958592304064287,1.9962053540823133,1.9965514177539343,1.9968974214524886,1.997243365209145,1.997589249055046,1.9979350730213068,1.998280837139016,1.9986265414392352,1.998972185952999,1.9993177707113152,1.999663295745165,2.0000087610855024,2.000354166763256,2.0006995128093252,2.0010447992545854,2.0013900261298834,2.001735193466041,2.002080301293852,2.002425349644084,2.0027703385474793,2.0031152680347524,2.003460138136591,2.0038049488836585,2.0041497003065896,2.004494392435994,2.004839025302455,2.005183598936529,2.005528113368746,2.005872568629611,2.006216964749602,2.006561301759171,2.0069055796887434,2.007249798568719,2.0075939584294717,2.007938059301349,2.0082821012146725,2.008626084199738,2.0089700082868145,2.0093138735061467,2.0096576798879524,2.0100014274624236,2.0103451162597263,2.0106887463100014,2.011032317643363,2.011375830289901,2.0117192842796783,2.0120626796427326,2.012406016409076,2.0127492946086947,2.0130925142715497,2.013435675427577,2.013778778106685,2.01412182233876,2.014464808153659,2.014807735581217,2.015150604651241,2.015493415393515,2.015836167837795,2.0161788620138146,2.0165214979512793,2.0168640756798717,2.0172065952292484,2.0175490566290395,2.0178914599088524,2.0182338050982676,2.018576092226841,2.0189183213241035,2.019260492419561,2.0196026055426946,2.0199446607229596,2.0202866579897876,2.020628597372584,2.020970478900731,2.021312302603584,2.0216540685104745,2.0219957766507095,2.022337427053571,2.0226790197483164,2.023020554764178,2.023362032130364,2.0237034518760564,2.0240448140304155,2.0243861186225742,2.0247273656816427,2.0250685552367047,2.0254096873168224,2.02575076195103,2.0260917791683406,2.0264327389977406,2.0267736414681923,2.027114486608635,2.027455274447982,2.027796005015123,2.0281366783389245,2.0284772944482268,2.028817853371847,2.0291583551385783,2.0294987997771896,2.0298391873164254,2.030179517785006,2.0305197912116273,2.0308600076249625,2.03120016705366,2.031540269526343,2.0318803150716134,2.032220303718047,2.0325602354941967,2.0329001104285904,2.033239928549734,2.0335796898861083,2.03391939446617,2.0342590423183533,2.0345986334710675,2.034938167952699,2.0352776457916106,2.0356170670161404,2.0359564316546033,2.036295739735291,2.0366349912864723,2.0369741863363906,2.0373133249132676,2.0376524070453,2.0379914327606627,2.0383304020875053,2.038669315053955,2.039008171688116,2.039346972018069,2.0396857160718707,2.0400244038775543,2.0403630354631312,2.0407016108565887,2.0410401300858902,2.041378593178977,2.041717000163767,2.0420553510681545,2.0423936459200114,2.0427318847471856,2.0430700675775024,2.043408194438765,2.0437462653587515,2.0440842803652193,2.0444222394859017,2.0447601427485083,2.0450979901807282,2.045435781810225,2.0457735176646406,2.0461111977715944,2.046448822158683,2.04678639085348,2.047123903883535,2.047461361276378,2.0477987630595127,2.048136109260423,2.0484733999065683,2.0488106350253865,2.0491478146442925,2.0494849387906786,2.049822007491915,2.0501590207753484,2.050495978668305,2.0508328811980854,2.051169728391971,2.0515065202772194,2.051843256881065,2.0521799382307218,2.0525165643533794,2.052853135276207,2.0531896510263503,2.0535261116309327,2.053862517117056,2.0541988675118,2.054535162842222,2.0548714031353557,2.0552075884182157,2.055543718717792,2.0558797940610543,2.0562158144749483,2.0565517799863993,2.0568876906223097,2.057223546409561,2.057559347375012,2.0578950935454983,2.0582307849478365,2.0585664216088193,2.0589020035552186,2.0592375308137827,2.0595730034112405,2.059908421374297,2.0602437847296375,2.060579093503924,2.0609143477237972,2.0612495474158767,2.0615846926067602,2.061919783323023,2.0622548195912196,2.062589801437883,2.0629247288895245,2.0632596019726335,2.0635944207136787,2.063929185139106,2.064263895275342,2.064598551148789,2.064933152785831,2.065267700212828,2.06560219345612,2.0659366325420265,2.066271017496843,2.066605348346847,2.066939625118292,2.0672738478374115,2.067608016530418,2.0679421312235022,2.0682761919428345,2.0686101987145635,2.0689441515648164,2.0692780505196997,2.0696118956053,2.06994568684768,2.0702794242728846,2.070613107906935,2.0709467377758344,2.0712803139055618,2.0716138363220775,2.07194730505132,2.072280720119207,2.072614081551636,2.072947389374483,2.073280643613603,2.073613844294831,2.073946991443981,2.074280085086846,2.074613125249198,2.0749461119567894,2.0752790452353507,2.075611925110593,2.0759447516082052,2.0762775247538574,2.076610244573198,2.076942911091855,2.077275524335436,2.0776080843295284,2.077940591099699,2.078273044671493,2.0786054450704374,2.0789377923220362,2.0792700864517757,2.07960232748512,2.0799345154475124,2.0802666503643783,2.080598732261121,2.0809307611631236,2.0812627370957486,2.0815946600843405,2.0819265301542207,2.0822583473306917,2.082590111639037,2.0829218231045177,2.083253481752377,2.083585087607836,2.083916640696097,2.0842481410423415,2.0845795886717324,2.084910983609411,2.085242325880499,2.085573615510099,2.0859048525232926,2.0862360369451416,2.086567168800689,2.0868982481149567,2.087229274912947,2.087560249219643,2.087891171060008,2.088222040458984,2.0885528574414955,2.088883622032445,2.0892143342567175,2.089544994139177,2.089875601704667,2.0902061569780135,2.0905366599840214,2.0908671107474768,2.0911975092931447,2.091527855645773,2.0918581498300877,2.0921883918707964,2.0925185817925875,2.092848719620129,2.0931788053780704,2.093508839091041,2.093838820783651,2.0941687504804913,2.0944986282061335,2.094828453985129,2.0951582278420116,2.0954879498012944,2.095817619887471,2.096147238125017,2.096476804538387,2.0968063191520194,2.0971357819903296,2.097465193077717,2.0977945524385593,2.0981238600972176,2.0984531160780318,2.098782320405323,2.099111473103395,2.0994405741965303,2.099769623708994,2.1000986216650306,2.1004275680888673,2.1007564630047115,2.1010853064367514,2.101414098409157,2.1017428389460786,2.102071528071648,2.102400165809979,2.1027287521851643,2.1030572872212803,2.1033857709423827,2.1037142033725105,2.104042584535681,2.104370914455895,2.104699193157134,2.1050274206633612,2.1053555969985203,2.1056837221865368,2.1060117962513174,2.10633981921675,2.1066677911067053,2.106995711945033,2.1073235817555664,2.1076514005621187,2.107979168388486,2.108306885258445,2.1086345511957534,2.1089621662241527,2.1092897303673626,2.1096172436490876,2.1099447060930117,2.110272117722802,2.110599478562105,2.110926788634552,2.1112540479637536,2.1115812565733023,2.111908414486774,2.112235521727724,2.1125625783196917,2.1128895842861963,2.11321653965074,2.1135434444368064,2.113870298667861,2.1141971023673514,2.1145238555587063,2.114850558265337,2.1151772105106375,2.1155038123179812,2.1158303637107267,2.1161568647122113,2.1164833153457576,2.1168097156346675,2.1171360656022262,2.117462365271701,2.1177886146663405,2.1181148138093766,2.1184409627240224,2.118767061433473,2.1190931099609065,2.1194191083294824,2.1197450565623432,2.1200709546826126,2.1203968027133966,2.120722600677785,2.121048348598848,2.1213740464996387,2.1216996944031936,2.122025292332529,2.122350840310647,2.1226763383605287,2.123001786505139,2.1233271847674264,2.12365253317032,2.123977831736732,2.124303080489557,2.1246282794516724,2.1249534286459375,2.125278528095195,2.125603577822269,2.125928577849967,2.1262535282010786,2.1265784288983762,2.1269032799646155,2.127228081422533,2.12755283329485,2.1278775356042687,2.128202188373475,2.128526791625137,2.1288513453819062,2.129175849666416,2.1295003045012826,2.1298247099091063,2.130149065912468,2.1304733725339338,2.1307976297960503,2.1311218377213486,2.1314459963323418,2.1317701056515266,2.1320941657013823,2.1324181765043706,2.132742138082937,2.1330660504595094,2.1333899136564987,2.1337137276962985,2.1340374926012866,2.134361208393823,2.1346848750962497,2.135008492730894,2.135332061320064,2.135655580886054,2.135979051451137,2.1363024730375733,2.136625845667604,2.136949169363454,2.1372724441473316,2.137595670041428,2.137918847067917,2.138241975248958,2.1385650546066906,2.1388880851632397,2.1392110669407125,2.1395339999612006,2.139856884246777,2.140179719819501,2.1405025067014125,2.140825244914536,2.141147934480879,2.1414705754224332,2.141793167761173,2.1421157115190557,2.1424382067180243,2.1427606533800025,2.1430830515268995,2.143405401180607,2.1437277023630013,2.1440499550959404,2.144372159401268,2.1446943153008093,2.1450164228163757,2.14533848196976,2.1456604927827385,2.1459824552770734,2.146304369474509,2.146626235396773,2.1469480530655773,2.147269822502618,2.147591543729575,2.14791321676811,2.148234841639871,2.1485564183664887,2.1488779469695776,2.149199427470736,2.149520859891546,2.149842244253574,2.15016358057837,2.1504848688874674,2.1508061092023842,2.151127301544623,2.1514484459356686,2.151769542396991,2.152090590950044,2.1524115916162643,2.152732544417075,2.15305344937388,2.1533743065080713,2.153695115841021,2.154015877394088,2.154336591188613,2.1546572572459235,2.154977875587329,2.155298446234124,2.1556189692075876,2.1559394445289817,2.156259872219554,2.1565802523005346,2.1569005847931404,2.1572208697185697,2.1575411070980075,2.1578612969526207,2.158181439303563,2.158501534171971,2.158821581578965,2.159141581545651,2.1594615340931194,2.1597814392424435,2.1601012970146822,2.160421107430879,2.1607408705120608,2.161060586279239,2.161380254753411,2.1616998759555575,2.162019449906644,2.162338976627619,2.1626584561394178,2.1629778884629594,2.163297273619147,2.1636166116288686,2.1639359025129967,2.164255146292389,2.164574342987887,2.164893492620317,2.1652125952104906,2.1655316507792026,2.165850659347235,2.166169620935351,2.1664885355643024,2.166807403254823,2.1671262240276317,2.167444997903433,2.167763724902916,2.168082405046754,2.1684010383556056,2.1687196248501146,2.169038164550908,2.1693566574786005,2.1696751036537885,2.1699935030970554,2.1703118558289685,2.170630161870081,2.17094842124093,2.171266633962038,2.171584800053912,2.1719029195370454,2.172220992431915,2.1725390187589837,2.172856998538698,2.173174931791491,2.1734928185377798,2.173810658797968,2.1741284525924423,2.174446199941576,2.1747639008657265,2.1750815553852374,2.175399163520437,2.175716725291638,2.1760342407191393,2.1763517098232246,2.1766691326241627,2.1769865091422083,2.1773038393976,2.177621123410563,2.177938361201307,2.178255552790027,2.178572698196904,2.1788897974421033,2.1792068505457767,2.1795238575280598,2.179840818409075,2.18015773320893,2.1804746019477164,2.1807914246455122,2.181108201322382,2.1814249319983734,2.1817416166935213,2.182058255427845,2.1823748482213507,2.1826913950940288,2.1830078960658543,2.1833243511567906,2.1836407603867842,2.183957123775768,2.1842734413436604,2.1845897131103658,2.184905939095773,2.1852221193197576,2.185538253802181,2.1858543425628887,2.1861703856217134,2.1864863829984724,2.1868023347129695,2.187118240784994,2.1874341012343206,2.1877499160807092,2.1880656853439073,2.1883814090436466,2.1886970871996443,2.1890127198316045,2.1893283069592173,2.1896438486021568,2.1899593447800845,2.1902747955126474,2.190590200819478,2.190905560720195,2.1912208752344036,2.191536144381693,2.1918513681816405,2.192166546653808,2.1924816798177433,2.192796767692981,2.1931118102990412,2.1934268076554297,2.193741759781639,2.1940566666971466,2.194371528421417,2.1946863449739005,2.195001116374033,2.1953158426412367,2.1956305237949203,2.1959451598544777,2.19625975083929,2.1965742967687234,2.196888797662131,2.1972032535388517,2.197517664418211,2.1978320303195193,2.198146351262075,2.198460627265161,2.1987748583480475,2.199089044529991,2.1994031858302336,2.1997172822680042,2.200031333862517,2.200345340632974,2.200659302598562,2.2009732197784557,2.2012870921918144,2.201600919857785,2.201914702795501,2.20222844102408,2.2025421345626293,2.20285578343024,2.2031693876459904,2.2034829472289457,2.2037964621981567,2.2041099325726616,2.2044233583714847,2.2047367396136366,2.205050076318114,2.205363368503901,2.2056766161899675,2.20598981939527,2.2063029781387526,2.206616092439344,2.2069291623159617,2.207242187787508,2.2075551688728727,2.207868105590932,2.208180997960548,2.208493846000571,2.2088066497298366,2.2091194091671684,2.2094321243313746,2.209744795241252,2.2100574219155833,2.2103700043731385,2.210682542632673,2.21099503671293,2.21130748663264,2.211619892410519,2.2119322540652706,2.2122445716155843,2.2125568450801376,2.2128690744775943,2.2131812598266047,2.213493401145806,2.2138054984538234,2.214117551769267,2.2144295611107356,2.2147415264968138,2.2150534479460737,2.215365325477074,2.21567715910836,2.215988948858465,2.216300694745909,2.2166123967891975,2.2169240550068245,2.217235669417271,2.217547240039005,2.2178587668904797,2.2181702499901377,2.218481689356408,2.2187930850077064,2.2191044369624358,2.2194157452389853,2.219727009855733,2.2200382308310425,2.220349408183265,2.2206605419307404,2.2209716320917923,2.2212826786847355,2.2215936817278683,2.2219046412394787,2.222215557237841,2.222526429741217,2.2228372587678553,2.223148044335992,2.2234587864638504,2.223769485169641,2.224080140471562,2.224390752387798,2.2247013209365223,2.2250118461358936,2.2253223280040606,2.225632766559156,2.225943161819303,2.22625351380261,2.226563822527174,2.2268740880110784,2.227184310272395,2.2274944893291826,2.2278046251994876,2.228114717901343,2.22842476745277,2.228734773871778,2.229044737176362,2.229354657384506,2.2296645345141815,2.229974368583346,2.2302841596099467,2.230593907611916,2.230903612607176,2.2312132746136353,2.23152289364919,2.231832469731724,2.2321420028791086,2.2324514931092034,2.2327609404398547,2.2330703448888967,2.2333797064741514,2.233689025213429,2.233998301124527,2.234307534225229,2.2346167245333093,2.2349258720665275,2.235234976842632,2.235544038879358,2.23585305819443,2.2361620348055586,2.2364709687304436,2.236779859986772,2.237088708592217,2.2373975145644427,2.2377062779210988,2.2380149986798235,2.2383236768582426,2.2386323124739698,2.2389409055446072,2.2392494560877445,2.239557964120958,2.2398664296618143,2.2401748527278658,2.2404832333366542,2.240791571505708,2.241099867252544,2.2414081205946683,2.2417163315495734,2.2420245001347396,2.242332626367636,2.2426407102657198,2.242948751846436,2.243256751127217,2.243564708125484,2.2438726228586465,2.244180495344101,2.2444883255992325,2.2447961136414145,2.245103859488008,2.245411563156363,2.2457192246638167,2.246026844027695,2.2463344212653107,2.246641956393967,2.246949449430953,2.247256900393548,2.2475643092990167,2.247871676164616,2.248179001007587,2.2484862838451614,2.2487935246945585,2.249100723572986,2.249407880497639,2.249714995485702,2.2500220685543475,2.2503290997207355,2.2506360890020156,2.2509430364153244,2.251249941977788,2.2515568057065196,2.2518636276186217,2.2521704077311844,2.2524771460612873,2.2527838426259974,2.25309049744237,2.2533971105274495,2.2537036818982683,2.2540102115718468,2.2543166995651953,2.2546231458953105,2.2549295505791793,2.2552359136337756,2.255542235076063,2.255848514922994,2.2561547531915065,2.2564609498985306,2.2567671050609834,2.2570732186957705,2.2573792908197854,2.257685321449911,2.2579913106030194,2.2582972582959697,2.2586031645456104,2.2589090293687786,2.2592148527823004,2.259520634802989,2.259826375447648,2.2601320747330687,2.2604377326760314,2.260743349293305,2.2610489246016465,2.2613544586178027,2.261659951358508,2.2619654028404854,2.262270813080448,2.2625761820950965,2.2628815099011206,2.263186796515199,2.2634920419539983,2.2637972462341747,2.2641024093723727,2.2644075313852268,2.264712612289358,2.2650176521013785,2.2653226508378874,2.265627608515474,2.265932525150715,2.2662374007601787,2.266542235360418,2.2668470289679794,2.267151781599394,2.267456493271185,2.2677611639998623,2.2680657938019264,2.268370382693866,2.268674930692158,2.268979437813269,2.2692839040736557,2.269588329489761,2.269892714078019,2.2701970578548525,2.2705013608366724,2.2708056230398785,2.2711098444808617,2.2714140251759996,2.27171816514166,2.2720222643941983,2.2723263229499615,2.2726303408252835,2.2729343180364885,2.273238254599889,2.2735421505317865,2.273846005848473,2.274149820566228,2.2744535947013205,2.274757328270009,2.2750610212885416,2.2753646737731548,2.275668285740074,2.2759718572055148,2.2762753881856805,2.276578878696766,2.2768823287549527,2.2771857383764127,2.277489107577307,2.2777924363737867,2.278095724781991,2.278398972818048,2.2787021804980765,2.2790053478381838,2.2793084748544663,2.27961156156301,2.27991460797989,2.2802176141211716,2.2805205800029085,2.280823505641143,2.2811263910519086,2.281429236251227,2.28173204125511,2.282034806079557,2.2823375307405596,2.282640215254096,2.2829428596361363,2.2832454639026376,2.2835480280695486,2.2838505521528054,2.2841530361683358,2.2844554801320553,2.2847578840598692,2.285060247967673,2.2853625718713513,2.285664855786777,2.2859670997298145,2.286269303716317,2.2865714677621263,2.286873591883075,2.2871756760949844,2.2874777204136656,2.28777972485492,2.288081689434537,2.288383614168297,2.2886854990719696,2.2889873441613133,2.289289149452077,2.2895909149599993,2.2898926407008076,2.29019432669022,2.2904959729439436,2.290797579477675,2.291099146307101,2.2914006734478978,2.2917021609157313,2.2920036087262567,2.29230501689512,2.2926063854379555,2.2929077143703886,2.293209003708034,2.293510253466495,2.2938114636613656,2.2941126343082305,2.2944137654226626,2.2947148570202254,2.2950159091164717,2.295316921726945,2.2956178948671773,2.2959188285526912,2.2962197227989996,2.296520577621604,2.296821393035997,2.29712216905766,2.297422905702066,2.2977236029846746,2.298024260920939,2.2983248795262994,2.298625458816188,2.298925998806026,2.299226499511224,2.2995269609471833,2.2998273831292946,2.30012776607294,2.300428109793489,2.3007284143063034,2.3010286796267336,2.3013289057701205,2.3016290927517957,2.3019292405870786,2.3022293492912813,2.3025294188797045,2.3028294493676387,2.303129440770365,2.3034293931031544,2.303729306381268,2.304029180619957,2.3043290158344627,2.304628812040016,2.3049285692518384,2.305228287485142,2.3055279667551276,2.3058276070769868,2.3061272084659024,2.306426770937046,2.3067262945055793,2.307025779186655,2.3073252249954153,2.3076246319469935,2.3079240000565115,2.308223329339083,2.308522619809811,2.3088218714837887,2.3091210843761005,2.3094202585018193,2.30971939387601,2.310018490513726,2.3103175484300134,2.3106165676399057,2.3109155481584285,2.3112144900005975,2.3115133931814182,2.311812257715887,2.3121110836189898,2.3124098709057033,2.3127086195909947,2.313007329689821,2.31330600121713,2.3136046341878598,2.3139032286169385,2.3142017845192853,2.314500301909809,2.3147987808034087,2.3150972212149754,2.3153956231593886,2.315693986651519,2.315992311706228,2.316290598338367,2.316588846562778,2.316887056394293,2.3171852278477365,2.31748336093792,2.3177814556796488,2.318079512087716,2.3183775301769067,2.318675509961997,2.318973451457752,2.319271354678928,2.3195692196402726,2.3198670463565225,2.3201648348424055,2.320462585112641,2.3207602971819368,2.3210579710649935,2.321355606776501,2.3216532043311395,2.3219507637435814,2.322248285028488,2.322545768200512,2.322843213274296,2.323140620264475,2.3234379891856727,2.323735320052504,2.3240326128795754,2.3243298676814823,2.324627084472813,2.324924263268144,2.3252214040820447,2.325518506929073,2.3258155718237803,2.3261125987807065,2.326409587814382,2.3267065389393298,2.327003452170062,2.327300327521083,2.327597165006886,2.3278939646419556,2.328190726440769,2.328487450417792,2.3287841365874815,2.3290807849642854,2.3293773955626436,2.3296739683969854,2.3299705034817304,2.330267000831291,2.3305634604600693,2.330859882382458,2.3311562666128407,2.3314526131655926,2.3317489220550787,2.3320451932956563,2.332341426901672,2.332637622887464,2.3329337812673616,2.3332299020556855,2.3335259852667454,2.333822030914844,2.3341180390142737,2.334414009579319,2.334709942624253,2.335005838163343,2.3353016962108444,2.335597516781006,2.3358932998880646,2.3361890455462513,2.3364847537697857,2.33678042457288,2.3370760579697363,2.337371653974548,2.3376672126014997,2.3379627338647677,2.3382582177785176,2.338553664356908,2.3388490736140874,2.3391444455641954,2.3394397802213627,2.339735077599712,2.340030337713356,2.3403255605763986,2.340620746202936,2.340915894607053,2.3412110058028284,2.3415060798043306,2.341801116625619,2.3420961162807448,2.34239107878375,2.3426860041486677,2.342980892389523,2.3432757435203304,2.3435705575550974,2.343865334507821,2.3441600743924917,2.3444547772230893,2.344749443013585,2.345044071777942,2.3453386635301143,2.3456332182840467,2.345927736053676,2.3462222168529303,2.346516660695728,2.3468110675959797,2.347105437567587,2.3473997706244427,2.347694066780431,2.3479883260494274,2.3482825484452983,2.3485767339819015,2.3488708826730873,2.349164994532696,2.349459069574559,2.3497531078125005,2.350047109260335,2.3503410739318684,2.3506350018408986,2.350928893001214,2.351222747426595,2.351516565130813,2.3518103461276314,2.3521040904308044,2.352397798054078,2.352691469011189,2.3529851033158664,2.3532787009818303,2.353572262022792,2.353865786452455,2.3541592742845134,2.3544527255326533,2.3547461402105516,2.355039518331878,2.355332859910292,2.355626164959446,2.3559194334929834,2.356212665524539,2.3565058610677387,2.356799020136201,2.357092142743535,2.357385228903342,2.357678278629214,2.3579712919347355,2.358264268833482,2.358557209339021,2.3588501134649107,2.359142981224702,2.3594358126319364,2.359728607700148,2.3600213664428615,2.3603140888735936,2.360606775005853,2.36089942485314,2.3611920384289458,2.361484615746753,2.3617771568200383,2.3620696616622667,2.3623621302868973,2.36265456270738,2.362946958937156,2.3632393189896583,2.363531642878313,2.363823930616536,2.3641161822177352,2.3644083976953123,2.3647005770626572,2.3649927203331553,2.3652848275201803,2.3655768986371,2.3658689336972736,2.3661609327140507,2.3664528957007738,2.3667448226707775,2.3670367136373875,2.3673285686139205,2.3676203876136874,2.367912170649988,2.3682039177361167,2.3684956288853574,2.3687873041109864,2.369078943426273,2.3693705468444777,2.369662114378852,2.36995364604264,2.370245141849078,2.3705366018113936,2.3708280259428056,2.3711194142565266,2.371410766765759,2.3717020834836986,2.3719933644235325,2.37228460959844,2.372575819021591,2.3728669927061494,2.37315813066527,2.373449232912099,2.373740299459775,2.3740313303214293,2.374322325510184,2.3746132850391533,2.3749042089214445,2.375195097170155,2.3754859497983767,2.375776766819191,2.376067548245672,2.3763582940908874,2.3766490043678945,2.376939679089744,2.3772303182694787,2.377520921920133,2.3778114900547336,2.3781020226862988,2.378392519827839,2.378682981492357,2.378973407692848,2.3792637984422984,2.379554153753687,2.379844473639985,2.3801347581141554,2.3804250071891535,2.3807152208779265,2.3810053991934135,2.381295542148546,2.381585649756248,2.3818757220294353,2.382165758981015,2.3824557606238876,2.3827457269709456,2.3830356580350727,2.3833255538291453,2.3836154143660333,2.383905239658596,2.384195029719687,2.3844847845621517,2.3847745041988277,2.385064188642544,2.3853538379061225,2.3856434520023777,2.3859330309441154,2.386222574744134,2.386512083415225,2.38680155697017,2.387090995421746,2.387380398782719,2.3876697670658493,2.3879591002838882,2.3882483984495813,2.3885376615756644,2.388826889674866,2.389116082759908,2.3894052408435034,2.3896943639383577,2.3899834520571694,2.3902725052126286,2.3905615234174182,2.3908505066842136,2.3911394550256815,2.3914283684544815,2.3917172469832666,2.392006090624681,2.3922948993913606,2.3925836732959356,2.392872412351027,2.3931611165692495,2.3934497859632087,2.3937384205455037,2.394027020328725,2.394315585325457,2.3946041155482756,2.3948926110097486,2.395181071722437,2.395469497698895,2.3957578889516666,2.3960462454932916,2.3963345673362997,2.3966228544932147,2.3969111069765514,2.3971993247988177,2.397487507972515,2.397775656510136,2.3980637704241654,2.3983518497270824,2.3986398944313563,2.3989279045494514,2.399215880093822,2.399503821076917,2.3997917275111766,2.4000795994090343,2.4003674367829153,2.400655239645238,2.400943008008413,2.401230741884844,2.401518441286927,2.40180610622705,2.4020937367175943,2.4023813327709336,2.402668894399434,2.4029564216154546,2.403243914431347,2.403531372859455,2.4038187969121148,2.404106186601657,2.404393541940402,2.4046808629406655,2.4049681496147546,2.405255401974969,2.405542620033601,2.4058298038029355,2.406116953295252,2.406404068522819,2.4066911494979015,2.4069781962327537,2.407265208739626,2.407552187030758,2.4078391311183847,2.4081260410147327,2.408412916732021,2.408699758282463,2.4089865656782616,2.4092733389316163,2.4095600780547164,2.4098467830597454,2.410133453958879,2.4104200907642856,2.4107066934881276,2.410993262142558,2.411279796739724,2.4115662972917655,2.411852763810815,2.4121391963089986,2.412425594798433,2.41271195929123,2.412998289799493,2.4132845863353185,2.4135708489107963,2.413857077538008,2.4141432722290292,2.4144294329959277,2.414715559850764,2.415001652805592,2.415287711872458,2.4155737370634016,2.4158597283904544,2.4161456858656414,2.4164316095009815,2.4167174993084846,2.417003355300155,2.4172891774879894,2.417574965883977,2.4178607205001006,2.418146441348335,2.4184321284406494,2.418717781789004,2.419003401405354,2.419288987301646,2.4195745394898203,2.41986005798181,2.420145542789541,2.4204309939249318,2.420716411399895,2.4210017952263354,2.4212871454161506,2.4215724619812313,2.421857744933462,2.4221429942847195,2.4224282100468733,2.4227133922317865,2.4229985408513155,2.423283655917308,2.4235687374416073,2.423853785436048,2.4241387999124577,2.424423780882658,2.424708728358463,2.42499364235168,2.425278522874109,2.4255633699375436,2.4258481835537697,2.4261329637345677,2.4264177104917093,2.4267024238369608,2.4269871037820807,2.4272717503388215,2.4275563635189275,2.4278409433341364,2.4281254897961806,2.428410002916784,2.4286944827076637,2.428978929180531,2.429263342347089,2.4295477222190356,2.4298320688080595,2.430116382125845,2.4304006621840686,2.430684908994399,2.4309691225685004,2.431253302918027,2.431537450054629,2.4318215639899488,2.4321056447356213,2.4323896923032757,2.432673706704534,2.432957687951011,2.433241636054315,2.4335255510260487,2.4338094328778053,2.4340932816211747,2.4343770972677365,2.434660879829066,2.4349446293167314,2.4352283457422934,2.4355120291173065,2.4357956794533178,2.436079296761869,2.436362881054494,2.4366464323427204,2.4369299506380684,2.437213435952053,2.437496888296181,2.4377803076819524,2.4380636941208627,2.4383470476243985,2.43863036820404,2.438913655871262,2.439196910637531,2.4394801325143085,2.439763321513048,2.4400464776451973,2.440329600922196,2.4406126913554798,2.4408957489564744,2.441178773736602,2.441461765707277,2.4417447248799053,2.4420276512658896,2.442310544876624,2.4425934057234953,2.442876233817885,2.4431590291711687,2.4434417917947133,2.4437245216998806,2.444007218898026,2.444289883400497,2.444572515218636,2.4448551143637776,2.445137680847251,2.4454202146803774,2.4457027158744737,2.445985184440848,2.4462676203908025,2.446550023735634,2.446832394486632,2.447114732655079,2.4473970382522507,2.4476793112894186,2.447961551777845,2.4482437597287867,2.448525935153495,2.4488080780632133,2.44909018846918,2.4493722663826247,2.4496543118147724,2.4499363247768415,2.450218305280044,2.4505002533355844,2.4507821689546616,2.451064052148468,2.451345902928189,2.4516277213050053,2.4519095072900883,2.452191260894606,2.4524729821297173,2.4527546710065766,2.453036327536332,2.4533179517301225,2.453599543599085,2.453881103154346,2.4541626304070276,2.454444125368246,2.4547255880491092,2.4550070184607207,2.4552884166141764,2.4555697825205667,2.455851116190974,2.456132417636477,2.4564136868681463,2.4566949238970457,2.456976128734234,2.457257301390763,2.4575384418776784,2.457819550206019,2.458100626386819,2.4583816704311037,2.4586626823498943,2.458943662154204,2.4592246098550414,2.4595055254634075,2.459786408990298,2.460067260446701,2.4603480798436,2.460628867191971,2.4609096225027836,2.461190345787003,2.4614710370555852,2.4617516963194825,2.46203232358964,2.4623129188769965,2.4625934821924846,2.4628740135470304,2.463154512951555,2.463434980416971,2.4637154159541876,2.463995819574105,2.4642761912876203,2.4645565311056212,2.4648368390389908,2.4651171150986064,2.4653973592953387,2.465677571640051,2.4659577521436034,2.4662379008168465,2.4665180176706265,2.4667981027157833,2.4670781559631507,2.4673581774235562,2.467638167107821,2.4679181250267597,2.4681980511911825,2.468477945611891,2.468757808299683,2.469037639265349,2.469317438519673,2.4695972060734337,2.4698769419374043,2.4701566461223496,2.470436318639031,2.4707159594982016,2.4709955687106104,2.471275146286998,2.4715546922381013,2.4718342065746497,2.472113689307367,2.4723931404469703,2.4726725600041717,2.4729519479896767,2.4732313044141847,2.473510629288389,2.4737899226229767,2.4740691844286298,2.4743484147160233,2.4746276134958265,2.474906780778703,2.475185916575309,2.4754650208962974,2.4757440937523123,2.4760231351539934,2.4763021451119736,2.4765811236368807,2.4768600707393356,2.477138986429954,2.4774178707193446,2.4776967236181116,2.4779755451368515,2.4782543352861564,2.4785330940766115,2.478811821518796,2.4790905176232845,2.4793691824006436,2.4796478158614357,2.479926418016216,2.480204988875535,2.4804835284499362,2.480762036749957,2.481040513786131,2.4813189595689833,2.4815973741090342,2.4818757574167982,2.4821541095027837,2.482432430377494,2.4827107200514247,2.482988978535067,2.4832672058389056,2.4835454019734207,2.4838235669490842,2.484101700776364,2.484379803465721,2.484657875027612,2.4849359154724855,2.485213924810786,2.485491903052952,2.4857698502094148,2.4860477662906013,2.4863256513069323,2.486603505268822,2.48688132818668,2.487159120070909,2.4874368809319063,2.4877146107800634,2.487992309625766,2.4882699774793946,2.4885476143513223,2.4888252202519183,2.489102795191545,2.489380339180559,2.4896578522293114,2.489935334348147,2.490212785547406,2.4904902058374216,2.4907675952285224,2.4910449537310297,2.4913222813552607,2.4915995781115257,2.4918768440101298,2.4921540790613723,2.492431283275547,2.492708456662941,2.492985599233837,2.4932627109985113,2.493539791967234,2.493816842150271,2.494093861557881,2.4943708502003172,2.4946478080878283,2.4949247352306556,2.4952016316390364,2.495478497323201,2.495755332293375,2.4960321365597773,2.496308910132622,2.496585653022117,2.4968623652384654,2.4971390467918635,2.497415697692502,2.497692317950568,2.4979689075762397,2.498245466579692,2.498521994971094,2.4987984927606086,2.499074959958392,2.499351396574598,2.499627802619371,2.499904178102852,2.500180523035177,2.5004568374264733,2.5007331212868666,2.5010093746264737,2.501285597455408,2.5015617897837763,2.5018379516216798,2.5021140829792143,2.50239018386647,2.502666254293532,2.5029422942704795,2.5032183038073854,2.503494282914318,2.50377023160134,2.504046149878508,2.5043220377558737,2.504597895243483,2.5048737223513755,2.505149519089587,2.505425285468146,2.5057010214970767,2.505976727186397,2.5062524025461195,2.506528047586252,2.506803662316796,2.5070792467477476,2.507354800889097,2.507630324750831,2.5079058183429277,2.508181281675362,2.508456714758103,2.5087321176011135,2.5090074902143513,2.5092828326077696,2.5095581447913142,2.5098334267749274,2.5101086785685447,2.5103839001820973,2.5106590916255103,2.510934252908702,2.5112093840415888,2.511484485034078,2.5117595558960732,2.512034596637473,2.512309607268169,2.51258458779805,2.512859538236996,2.5131344585948843,2.513409348881585,2.5136842091069647,2.5139590392808824,2.514233839413194,2.5145086095137477,2.514783349592389,2.515058059658955,2.5153327397232794,2.5156073897951905,2.5158820098845105,2.516156600001056,2.51643116015464,2.5167056903550677,2.5169801906121414,2.517254660935656,2.517529101335402,2.5178035118211644,2.518077892402723,2.518352243089853,2.518626563892322,2.518900854819895,2.5191751158823297,2.5194493470893797,2.5197235484507923,2.519997719976311,2.5202718616756723,2.5205459735586078,2.520820055634845,2.5210941079141045,2.521368130406103,2.5216421231205506,2.5219160860671535,2.522190019255612,2.52246392269562,2.5227377963968682,2.5230116403690412,2.523285454621817,2.523559239164871,2.523832994007871,2.524106719160481,2.524380414632359,2.5246540804331574,2.524927716572525,2.5252013230601036,2.52547489990553,2.525748447118438,2.526021964708453,2.526295452685197,2.5265689110582867,2.526842339837333,2.5271157390319425,2.527389108651716,2.527662448706248,2.52793575920513,2.5282090401579476,2.52848229157428,2.5287555134637025,2.529028705835785,2.529301868700092,2.5295750020661836,2.5298481059436124,2.5301211803419292,2.5303942252706766,2.5306672407393944,2.530940226757616,2.531213183334869,2.531486110480679,2.5317590082045625,2.5320318765160326,2.5323047154245977,2.532577524939761,2.5328503050710194,2.5331230558278666,2.5333957772197895,2.5336684692562708,2.5339411319467877,2.534213765300812,2.5344863693278112,2.5347589440372476,2.5350314894385777,2.535304005541254,2.5355764923547226,2.535848949888426,2.5361213781517997,2.536393777154276,2.5366661469052816,2.5369384874142376,2.5372107986905603,2.5374830807436615,2.5377553335829472,2.5380275572178186,2.5382997516576724,2.538571916911899,2.5388440529898846,2.539116159901011,2.539388237654654,2.5396602862601845,2.539932305726968,2.540204296064367,2.5404762572817363,2.540748189388427,2.5410200923937856,2.5412919663071527,2.5415638111378644,2.541835626895252,2.5421074135886412,2.542379171227353,2.542650899820704,2.5429225993780045,2.543194269908561,2.543465911421675,2.543737523926642,2.5440091074327538,2.544280661949296,2.5445521874855506,2.5448236840507934,2.545095151654296,2.545366590305325,2.5456380000131418,2.5459093807870032,2.5461807326361603,2.54645205556986,2.5467233495973445,2.54699461472785,2.547265850970609,2.5475370583348487,2.5478082368297903,2.5480793864646523,2.548350507248646,2.548621599190979,2.548892662300854,2.549163696587468,2.5494347020600157,2.5497056787276824,2.5499766265996526,2.550247545685104,2.55051843599321,2.550789297533138,2.551060130314053,2.5513309343451125,2.5516017096354706,2.5518724561942765,2.5521431740306735,2.5524138631538014,2.5526845235727946,2.552955155296782,2.5532257583348894,2.553496332696235,2.5537668783899354,2.5540373954250994,2.5543078838108335,2.5545783435562375,2.5548487746704076,2.5551191771624344,2.555389551041404,2.5556598963163975,2.5559302129964916,2.5562005010907582,2.556470760608264,2.5567409915580708,2.5570111939492364,2.557281367790813,2.5575515130918487,2.557821629861386,2.558091718108463,2.558361777842114,2.5586318090713664,2.558901811805245,2.5591717860527687,2.5594417318229516,2.5597116491248038,2.5599815379673294,2.5602513983595294,2.560521230310399,2.560791033828928,2.561060808924103,2.5613305556049055,2.5616002738803116,2.5618699637592925,2.5621396252508157,2.562409258363844,2.5626788631073336,2.5629484394902384,2.563217987521506,2.5634875072100805,2.5637569985649,2.564026461594899,2.564295896309006,2.564565302716147,2.5648346808252405,2.5651040306452026,2.565373352184944,2.5656426454533703,2.5659119104593833,2.566181147211879,2.566450355719749,2.5667195359918815,2.566988688037158,2.5672578118644576,2.567526907482653,2.5677959749006125,2.5680650141272006,2.5683340251712767,2.568603008041695,2.568871962747306,2.5691408892969547,2.5694097876994824,2.5696786579637254,2.5699475000985146,2.570216314112677,2.570485100015036,2.570753857814408,2.571022587519607,2.5712912891394404,2.5715599626827133,2.5718286081582242,2.5720972255747685,2.572365814941136,2.572634376266112,2.5729029095584774,2.573171414827009,2.573439892080478,2.5737083413276522,2.573976762577294,2.574245155838161,2.5745135211190076,2.574781858428582,2.575050167775629,2.5753184491688885,2.5755867026170947,2.57585492812898,2.5761231257132695,2.5763912953786847,2.576659437133943,2.5769275509877576,2.577195636948835,2.5774636950258807,2.5777317252275918,2.577999727562664,2.5782677020397866,2.578535648667645,2.5788035674549206,2.5790714584102896,2.5793393215424234,2.5796071568599905,2.579874964371652,2.5801427440860683,2.580410496011892,2.5806782201577727,2.580945916532356,2.5812135851442815,2.5814812260021855,2.5817488391146997,2.5820164244904507,2.5822839821380614,2.58255151206615,2.582819014283329,2.5830864887982092,2.583353935619394,2.5836213547554845,2.583888746215076,2.58415611000676,2.584423446139123,2.5846907546207487,2.5849580354602133,2.585225288666092,2.585492514246953,2.5857597122113614,2.5860268825678774,2.586294025325057,2.5865611404914515,2.5868282280756083,2.5870952880860694,2.5873623205313736,2.5876293254200546,2.5878963027606416,2.5881632525616602,2.5884301748316303,2.5886970695790685,2.5889639368124864,2.5892307765403917,2.589497588771288,2.589764373513672,2.590031130776041,2.5902978605668827,2.5905645628946834,2.590831237767924,2.5910978851950817,2.5913645051846292,2.591631097745034,2.5918976628847603,2.592164200612267,2.59243071093601,2.5926971938644394,2.5929636494060015,2.593230077569139,2.593496478362289,2.593762851793885,2.5940291978723558,2.594295516606127,2.5945618080036184,2.5948280720732453,2.5950943088234206,2.5953605182625514,2.5956267003990408,2.5958928552412877,2.5961589827976863,2.596425083076627,2.5966911560864956,2.5969572018356737,2.5972232203325394,2.597489211585464,2.5977551756028183,2.5980211123929657,2.598287021964266,2.598552904325076,2.5988187594837466,2.5990845874486252,2.5993503882280558,2.599616161830376,2.599881908263921,2.6001476275370212,2.6004133196580024,2.600678984635186,2.6009446224768906,2.601210233191429,2.6014758167871097,2.601741373272238,2.602006902655115,2.602272404944036,2.6025378801472936,2.602803328273176,2.6030687493299656,2.603334143325944,2.6035995102693845,2.6038648501685584,2.6041301630317335,2.6043954488671712,2.6046607076831303,2.6049259394878654,2.6051911442896256,2.6054563220966576,2.6057214729172022,2.605986596759497,2.6062516936317754,2.606516763542267,2.6067818064991943,2.6070468225107803,2.60731181158524,2.607576773730787,2.6078417089556285,2.608106617267968,2.6083714986760067,2.608636353187939,2.6089011808119564,2.609165981556247,2.609430755428993,2.609695502438374,2.6099602225925644,2.6102249158997353,2.610489582368053,2.6107542220056805,2.6110188348207752,2.6112834208214917,2.6115479800159793,2.611812512412385,2.61207701801885,2.6123414968435115,2.612605948894504,2.612870374179956,2.613134772707993,2.6133991444867366,2.6136634895243036,2.613927807828807,2.6141920994083554,2.6144563642710534,2.6147206024250025,2.6149848138782987,2.6152489986390344,2.6155131567152985,2.6157772881151744,2.6160413928467436,2.616305470918081,2.6165695223372594,2.6168335471123467,2.6170975452514065,2.6173615167624993,2.61762546165368,2.6178893799330014,2.6181532716085103,2.618417136688251,2.6186809751802627,2.618944787092581,2.619208572433237,2.619472331210259,2.6197360634316698,2.619999769105488,2.6202634482397307,2.6205271008424083,2.6207907269215274,2.6210543264850923,2.6213178995411015,2.621581446097551,2.621844966162431,2.6221084597437287,2.622371926849428,2.6226353674875074,2.6228987816659424,2.623162169392704,2.6234255306757595,2.6236888655230715,2.6239521739426,2.6242154559422985,2.62447871153012,2.6247419407140105,2.6250051435019137,2.625268319901769,2.6255314699215107,2.6257945935690703,2.6260576908523756,2.6263207617793496,2.6265838063579117,2.626846824595977,2.627109816501457,2.6273727820822597,2.6276357213462873,2.6278986343014408,2.6281615209556146,2.6284243813167008,2.628687215392587,2.628950023191157,2.6292128047202907,2.629475559987864,2.629738289001748,2.630000991769812,2.630263668299919,2.6305263185999297,2.6307889426777002,2.6310515405410824,2.6313141121979253,2.6315766576560726,2.6318391769233656,2.632101670007641,2.6323641369167308,2.632626577658464,2.632888992240666,2.6331513806711566,2.633413742957755,2.6336760791082727,2.6339383891305195,2.6342006730323013,2.634462930821419,2.6347251625056707,2.63498736809285,2.635249547590747,2.635511701007148,2.6357738283498344,2.6360359296265847,2.636298004845174,2.6365600540133727,2.636822077138947,2.63708407422966,2.6373460452932704,2.6376079903375342,2.6378699093702025,2.6381318023990215,2.6383936694317365,2.6386555104760863,2.6389173255398073,2.6391791146306307,2.639440877756286,2.6397026149244964,2.6399643261429837,2.6402260114194633,2.6404876707616496,2.6407493041772505,2.641010911673972,2.6412724932595157,2.6415340489415784,2.6417955787278546,2.642057082626035,2.642318560643804,2.642580012788846,2.6428414390688384,2.643102839491457,2.643364214064372,2.643625562795251,2.6438868856917574,2.6441481827615507,2.6444094540122873,2.644670699451619,2.644931919087194,2.6451931129266573,2.6454542809776496,2.645715423247807,2.645976539744764,2.64623763047615,2.6464986954495897,2.646759734672706,2.6470207481531163,2.6472817358984364,2.6475426979162755,2.647803634214241,2.6480645447999365,2.648325429680961,2.64858628886491,2.648847122359377,2.649107930171948,2.649368712310209,2.64962946878174,2.6498901995941186,2.650150904754918,2.6504115842717075,2.6506722381520533,2.6509328664035174,2.6511934690336574,2.6514540460500298,2.6517145974601837,2.6519751232716677,2.652235623492025,2.6524960981287946,2.6527565471895143,2.6530169706817155,2.653277368612927,2.653537740990674,2.6537980878224783,2.6540584091158568,2.6543187048783246,2.6545789751173907,2.654839219840563,2.655099439055344,2.655359632769233,2.655619800989725,2.655879943724313,2.6561400609804844,2.656400152765724,2.6566602190875135,2.6569202599533295,2.6571802753706457,2.657440265346932,2.657700229889655,2.657960169006277,2.6582200827042572,2.6584799709910514,2.6587398338741104,2.658999671360883,2.659259483458814,2.659519270175343,2.659779031517908,2.6600387674939423,2.6602984781108767,2.660558163376136,2.6608178232971436,2.6610774578813188,2.6613370671360768,2.661596651068829,2.6618562096869844,2.6621157429979467,2.662375251009118,2.6626347337278946,2.6628941911616706,2.6631536233178363,2.6634130302037784,2.6636724118268793,2.663931768194519,2.6641910993140727,2.6644504051929134,2.664709685838409,2.664968941257925,2.665228171458822,2.6654873764484592,2.6657465562341898,2.666005710823365,2.666264840223331,2.666523944441433,2.6667830234850096,2.667042077361398,2.667301106077931,2.6675601096419377,2.6678190880607437,2.668078041341672,2.6683369694920396,2.6685958725191634,2.6688547504303544,2.6691136032329195,2.669372430934165,2.66963123354139,2.6698900110618933,2.6701487635029677,2.6704074908719044,2.6706661931759896,2.670924870422507,2.6711835226187355,2.671442149771952,2.671700751889429,2.671959328978436,2.672217881046238,2.6724764081000973,2.672734910147273,2.6729933871950196,2.6732518392505886,2.6735102663212285,2.673768668414184,2.674027045536696,2.6742853976960017,2.674543724899336,2.674802027153929,2.675060304467008,2.6753185568457956,2.6755767842975136,2.6758349868293774,2.6760931644486012,2.676351317162394,2.6766094449779616,2.676867547902508,2.6771256259432312,2.6773836791073276,2.6776417074019894,2.6778997108344056,2.6781576894117616,2.678415643141239,2.678673572030017,2.67893147608527,2.6791893553141692,2.6794472097238837,2.6797050393215778,2.6799628441144123,2.6802206241095456,2.680478379314132,2.6807361097353217,2.680993815380263,2.6812514962560994,2.6815091523699714,2.681766783729017,2.6820243903403687,2.6822819722111584,2.6825395293485115,2.6827970617595516,2.6830545694514,2.6833120524311718,2.6835695107059814,2.6838269442829383,2.684084353169148,2.684341737371715,2.684599096897738,2.6848564317543127,2.685113741948533,2.685371027487488,2.685628288378263,2.6858855246279414,2.6861427362436014,2.68639992323232,2.686657085601169,2.6869142233572174,2.6871713365075314,2.6874284250591725,2.6876854890192,2.6879425283946694,2.6881995431926327,2.688456533420139,2.688713499084234,2.6889704401919587,2.6892273567503526,2.6894842487664508,2.6897411162472853,2.689997959199885,2.690254777631274,2.690511571548476,2.690768340958508,2.691025085868386,2.6912818062851214,2.691538502215723,2.691795173667196,2.692051820646542,2.69230844316076,2.6925650412168443,2.692821614821787,2.6930781639825776,2.6933346887062,2.6935911889996365,2.6938476648698657,2.694104116323863,2.6943605433685986,2.6946169460110436,2.694873324258162,2.6951296781169156,2.695386007594263,2.69564231269716,2.695898593432558,2.696154849807406,2.6964110818286495,2.696667289503231,2.696923472838088,2.6971796318401573,2.6974357665163704,2.697691876873656,2.6979479629189407,2.6982040246591463,2.6984600621011916,2.6987160752519928,2.6989720641184616,2.6992280287075086,2.699483969026039,2.699739885080955,2.6999957768791565,2.7002516444275395,2.700507487732997,2.700763306802419,2.7010191016426908,2.7012748722606963,2.701530618663315,2.7017863408574234,2.702042038849895,2.7022977126475993,2.7025533622574045,2.702808987686173,2.7030645889407645,2.7033201660280377,2.7035757189548457,2.7038312477280386,2.7040867523544643,2.704342232840967,2.704597689194387,2.7048531214215625,2.705108529529328,2.705363913524514,2.7056192734139493,2.705874609204458,2.706129920902862,2.7063852085159796,2.706640472050626,2.7068957115136127,2.7071509269117486,2.707406118251839,2.707661285540687,2.70791642878509,2.708171547991846,2.708426643167745,2.708681714319579,2.708936761454133,2.70919178457819,2.7094467836985303,2.70970175882193,2.7099567099551636,2.7102116371050005,2.7104665402782078,2.7107214194815503,2.710976274721788,2.7112311060056786,2.7114859133399767,2.7117406967314333,2.7119954561867967,2.712250191712812,2.71250490331622,2.7127595910037603,2.7130142547821676,2.7132688946581744,2.71352351063851,2.7137781027299,2.7140326709390674,2.7142872152727318,2.714541735737609,2.714796232340414,2.715050705087855,2.7153051539866397,2.7155595790434726,2.715813980265054,2.7160683576580813,2.716322711229249,2.716577040985249,2.7168313469327687,2.717085629078494,2.717339887429106,2.7175941219912843,2.717848332771704,2.718102519777038,2.7183566830139556,2.7186108224891234,2.718864938209204,2.7191190301808588,2.7193730984107427,2.719627142905512,2.719881163671815,2.720135160716302,2.7203891340456154,2.7206430836663973,2.720897009585287,2.7211509118089188,2.7214047903439247,2.7216586451969347,2.721912476374574,2.7221662838834657,2.72242006773023,2.7226738279214833,2.722927564463839,2.7231812773639086,2.723434966628298,2.723688632263613,2.7239422742764545,2.724195892673421,2.724449487461107,2.7247030586461047,2.724956606235004,2.7252101302343905,2.725463630650847,2.7257171074909534,2.725970560761286,2.7262239904684193,2.726477396618924,2.726730779219367,2.726984138276314,2.727237473796325,2.72749078578596,2.727744074251774,2.7279973392003183,2.728250580638144,2.7285037985717966,2.728756993007819,2.729010163952752,2.7292633114131326,2.7295164353954955,2.729769535906371,2.7300226129522875,2.7302756665397703,2.7305286966753415,2.73078170336552,2.7310346866168222,2.7312876464357605,2.7315405828288455,2.7317934958025836,2.7320463853634793,2.7322992515180333,2.732552094272744,2.732804913634105,2.73305770960861,2.733310482202747,2.7335632314230023,2.7338159572758585,2.7340686597677957,2.734321338905291,2.734573994694818,2.734826627142848,2.735079236255849,2.735331822040286,2.7355843845026206,2.7358369236493125,2.7360894394868174,2.7363419320215883,2.7365944012600756,2.736846847208726,2.737099269873984,2.7373516692622903,2.737604045380084,2.7378563982337996,2.7381087278298692,2.738361034174723,2.7386133172747864,2.738865577136483,2.739117813766234,2.739370027170456,2.739622217355564,2.7398743843279694,2.740126528094081,2.740378648660304,2.7406307460330415,2.7408828202186934,2.7411348712236565,2.7413868990543238,2.741638903717088,2.7418908852183357,2.7421428435644524,2.74239477876182,2.742646690816818,2.742898579735823,2.7431504455252083,2.743402288191344,2.743654107740597,2.7439059041793334,2.744157677513914,2.744409427750697,2.7446611548960393,2.7449128589562934,2.7451645399378095,2.7454161978469345,2.7456678326900126,2.7459194444733845,2.74617103320339,2.7464225988863635,2.7466741415286378,2.7469256611365425,2.7471771577164046,2.747428631274548,2.7476800818172933,2.7479315093509586,2.7481829138818603,2.7484342954163092,2.7486856539606155,2.7489369895210856,2.749188302104023,2.7494395917157286,2.7496908583625004,2.749942102050633,2.7501933227864197,2.7504445205761487,2.750695695426107,2.7509468473425773,2.751197976331841,2.751449082400176,2.7517001655538564,2.7519512257991554,2.7522022631423413,2.752453277589681,2.7527042691474377,2.7529552378218725,2.753206183619243,2.7534571065458033,2.753708006607807,2.7539588838115012,2.754209738163135,2.75446056966895,2.7547113783351875,2.7549621641680853,2.755212927173879,2.7554636673587996,2.7557143847290773,2.7559650792909385,2.7562157510506067,2.7564664000143035,2.756717026188246,2.7569676295786496,2.7572182101917266,2.757468768033687,2.757719303110738,2.757969815429082,2.758220304994922,2.758470771814454,2.7587212158938756,2.758971637239378,2.759222035857152,2.7594724117533844,2.759722764934259,2.759973095405958,2.760223403174659,2.7604736882465386,2.7607239506277694,2.7609741903245224,2.761224407342964,2.76147460168926,2.761724773369571,2.7619749223900567,2.7622250487568736,2.762475152476175,2.7627252335541113,2.7629752919968302,2.7632253278104777,2.7634753410011954,2.7637253315751233,2.7639752995383984,2.764225244897154,2.7644751676575217,2.76472506782563,2.7649749454076047,2.7652248004095688,2.765474632837642,2.7657244426979424,2.765974229996584,2.766223994739679,2.7664737369333365,2.766723456583663,2.766973153696762,2.767222828278734,2.767472480335678,2.7677221098736884,2.7679717168988582,2.7682213014172774,2.768470863435033,2.7687204029582095,2.7689699199928883,2.769219414545148,2.7694688866210657,2.7697183362267146,2.769967763368164,2.770217168051484,2.770466550282738,2.7707159100679895,2.7709652474132977,2.77121456232472,2.771463854808311,2.771713124870122,2.7719623725162013,2.772211597752596,2.7724608005853484,2.7727099810205003,2.7729591390640893,2.7732082747221507,2.773457388000717,2.7737064789058183,2.773955547443481,2.774204593619731,2.7744536174405887,2.7747026189120736,2.7749515980402024,2.775200554830988,2.7754494892904424,2.775698401424573,2.7759472912393854,2.776196158740883,2.7764450039350654,2.776693826827931,2.7769426274254734,2.777191405733685,2.7774401617585562,2.777688895506073,2.7779376069822193,2.778186296192977,2.7784349631443246,2.778683607842238,2.778932230292691,2.7791808305016534,2.7794294084750946,2.7796779642189784,2.779926497739269,2.7801750090419253,2.780423498132905,2.7806719650181635,2.7809204097036515,2.7811688321953194,2.781417232499114,2.7816656106209785,2.7819139665668553,2.7821623003426823,2.782410611954396,2.7826589014079306,2.7829071687092157,2.78315541386418,2.783403636878749,2.7836518377588457,2.7839000165103904,2.7841481731393003,2.784396307651491,2.7846444200528744,2.7848925103493603,2.7851405785468555,2.7853886246512647,2.78563664866849,2.78588465060443,2.7861326304649823,2.7863805882560393,2.786628523983494,2.7868764376532336,2.787124329271145,2.7873721988431117,2.7876200463750136,2.7878678718727303,2.788115675342137,2.7883634567891056,2.788611216219508,2.788858953639211,2.7891066690540804,2.7893543624699784,2.789602033892765,2.7898496833282977,2.7900973107824316,2.790344916261018,2.7905924997699074,2.790840061314946,2.791087600901979,2.7913351185368476,2.791582614225391,2.7918300879734463,2.792077539786847,2.792324969671425,2.792572377633009,2.7928197636774255,2.7930671278104975,2.793314470038047,2.793561790365892,2.7938090887998484,2.79405636534573,2.794303620009347,2.794550852796509,2.7947980637130203,2.7950452527646843,2.7952924199573026,2.7955395652966715,2.795786688788588,2.7960337904388437,2.79628087025323,2.7965279282375337,2.7967749643975406,2.7970219787390334,2.7972689712677914,2.797515941989593,2.7977628909102132,2.798009818035424,2.798256723370995,2.798503606922694,2.7987504686962863,2.7989973086975333,2.7992441269321953,2.7994909234060286,2.7997376981247886,2.7999844510942276,2.8002311823200947,2.800477891808137,2.800724579564099,2.800971245593723,2.801217889902748,2.801464512496911,2.8017111133819466,2.8019576925635867,2.8022042500475606,2.802450785839595,2.8026972999454145,2.8029437923707405,2.8031902631212926,2.803436712202787,2.803683139620939,2.803929545381459,2.8041759294900577,2.804422291952441,2.804668632774313,2.8049149519613756,2.8051612495193283,2.8054075254538673,2.805653779770687,2.805900012475479,2.806146223573933,2.8063924130717357,2.8066385809745706,2.8068847272881197,2.807130852018063,2.807376955170076,2.8076230367498343,2.807869096763008,2.8081151352152682,2.8083611521122807,2.80860714745971,2.8088531212632177,2.8090990735284636,2.8093450042611043,2.8095909134667947,2.809836801151186,2.810082667319928,2.810328511978668,2.81057433513305,2.8108201367887165,2.8110659169513066,2.811311675626458,2.811557412819805,2.8118031285369796,2.8120488227836122,2.8122944955653297,2.8125401468877564,2.812785776756516,2.8130313851772266,2.8132769721555073,2.8135225376969726,2.8137680818072344,2.8140136044919037,2.8142591057565878,2.8145045856068913,2.8147500440484183,2.814995481086768,2.8152408967275386,2.815486290976326,2.8157316638387226,2.815977015320319,2.8162223454267044,2.8164676541634623,2.8167129415361782,2.8169582075504316,2.817203452211802,2.8174486755258643,2.8176938774981926,2.8179390581343577,2.8181842174399288,2.818429355420472,2.8186744720815504,2.8189195674287264,2.8191646414675593,2.8194096942036047,2.819654725642417,2.819899735789549,2.820144724650549,2.820389692230964,2.8206346385363394,2.820879563572216,2.821124467344135,2.821369349857633,2.8216142111182445,2.821859051131503,2.822103869902938,2.822348667438077,2.8225934437424463,2.822838198821568,2.823082932680963,2.8233276453261493,2.8235723367626426,2.8238170069959567,2.824061656031602,2.8243062838750874,2.8245508905319197,2.8247954760076013,2.825040040307635,2.825284583437519,2.8255291054027505,2.825773606208824,2.8260180858612305,2.82626254436546,2.8265069817270003,2.8267513979513352,2.826995793043948,2.8272401670103187,2.827484519855924,2.82772885158624,2.82797316220674,2.828217451722894,2.828461720140171,2.828705967464036,2.8289501936999524,2.829194398853382,2.8294385829297837,2.8296827459346137,2.829926887873326,2.830171008751372,2.830415108574202,2.830659187347262,2.8309032450759983,2.831147281765851,2.831391297422262,2.831635292050668,2.8318792656565046,2.832123218245205,2.8323671498221996,2.832611060392916,2.8328549499627815,2.833098818537219,2.8333426661216494,2.833586492721493,2.8338302983421646,2.83407408298908,2.8343178466676506,2.8345615893832856,2.834805311141393,2.8350490119473775,2.835292691806642,2.835536350724587,2.8357799887066095,2.8360236057581063,2.8362672018844703,2.836510777091093,2.8367543313833625,2.8369978647666656,2.8372413772463863,2.837484868827907,2.8377283395166066,2.837971789317862,2.8382152182370493,2.83845862627954,2.838702013450705,2.8389453797559114,2.8391887252005263,2.839432049789912,2.8396753535294303,2.8399186364244393,2.840161898480296,2.840405139702354,2.840648360095966,2.8408915596664817,2.841134738419248,2.8413778963596092,2.8416210334929093,2.8418641498244885,2.8421072453596845,2.842350320103834,2.84259337406227,2.8428364072403234,2.843079419643325,2.8433224112765996,2.8435653821454725,2.8438083322552665,2.844051261611301,2.8442941702188937,2.84453705808336,2.8447799252100134,2.8450227716041643,2.845265597271122,2.845508402216192,2.845751186444679,2.8459939499618843,2.8462366927731084,2.8464794148836483,2.846722116298798,2.846964797023851,2.8472074570640986,2.8474500964248284,2.847692715111326,2.847935313128876,2.848177890482759,2.8484204471782553,2.8486629832206414,2.848905498615192,2.84914799336718,2.849390467481875,2.849632920964546,2.8498753538204586,2.850117766054876,2.8503601576730597,2.8506025286802683,2.8508448790817598,2.8510872088827877,2.851329518088605,2.851571806704462,2.851814074735606,2.8520563221872837,2.8522985490647375,2.852540755373209,2.8527829411179377,2.85302510630416,2.8532672509371104,2.8535093750220217,2.853751478564123,2.8539935615686436,2.854235624040809,2.8544776659858413,2.8547196874089633,2.854961688315393,2.8552036687103484,2.8554456285990435,2.85568756798669,2.8559294868784995,2.856171385279679,2.856413263195435,2.856655120630971,2.8568969575914873,2.8571387740821845,2.8573805701082593,2.8576223456749066,2.8578641007873182,2.858105835450685,2.8583475496701953,2.8585892434510356,2.8588309167983885,2.8590725697174366,2.8593142022133593,2.8595558142913333,2.8597974059565345,2.8600389772141352,2.860280528069306,2.860522058527216,2.860763568593031,2.8610050582719153,2.861246527569031,2.8614879764895376,2.8617294050385933,2.8619708132213533,2.8622122010429702,2.8624535685085966,2.8626949156233796,2.8629362423924674,2.8631775488210045,2.8634188349141323,2.863660100676992,2.8639013461147207,2.8641425712324557,2.86438377603533,2.864624960528475,2.8648661247170204,2.865107268606094,2.86534839220082,2.8655894955063217,2.8658305785277203,2.866071641270134,2.8663126837386796,2.8665537059384714,2.8667947078746217,2.86703568955224,2.867276650976435,2.867517592152312,2.8677585130849748,2.8679994137795246,2.8682402942410614,2.8684811544746815,2.868721994485481,2.8689628142785515,2.8692036138589847,2.8694443932318694,2.8696851524022913,2.8699258913753356,2.870166610156084,2.8704073087496167,2.870647987161012,2.870888645395346,2.8711292834576914,2.87136990135312,2.871610499086702,2.871851076663505,2.8720916340885934,2.8723321713670296,2.8725726885038765,2.8728131855041914,2.873053662373032,2.8732941191154526,2.8735345557365055,2.873774972241242,2.874015368634709,2.8742557449219537,2.8744961011080195,2.874736437197949,2.874976753196782,2.875217049109556,2.8754573249413067,2.8756975806970675,2.87593781638187,2.8761780320007437,2.876418227558716,2.876658403060811,2.876898558512053,2.877138693917462,2.8773788092820576,2.8776189046108565,2.8778589799088725,2.878099035181119,2.8783390704326064,2.878579085668343,2.8788190808933347,2.8790590561125864,2.8792990113310997,2.8795389465538754,2.8797788617859106,2.880018757032201,2.8802586322977417,2.8804984875875235,2.880738322906536,2.8809781382597675,2.881217933652202,2.8814577090888247,2.881697464574616,2.8819372001145553,2.88217691571362,2.882416611376785,2.882656287109023,2.8828959429153063,2.8831355788006023,2.883375194769879,2.8836147908281,2.8838543669802297,2.8840939232312275,2.884333459586052,2.8845729760496606,2.8848124726270075,2.885051949323045,2.8852914061427235,2.885530843090991,2.8857702601727944,2.886009657393078,2.886249034756783,2.8864883922688507,2.8867277299342184,2.8869670477578224,2.8872063457445973,2.887445623899474,2.887684882227383,2.887924120733252,2.888163339422007,2.8884025382985716,2.888641717367868,2.888880876634815,2.889120016104331,2.8893591357813313,2.8895982356707295,2.8898373157774375,2.8900763761063644,2.890315416662418,2.8905544374505046,2.8907934384755256,2.8910324197423845,2.891271381255979,2.891510323021208,2.891749245042966,2.891988147326146,2.89222702987564,2.8924658926963374,2.892704735793125,2.8929435591708876,2.8931823628345095,2.8934211467888713,2.8936599110388523,2.89389865558933,2.894137380445179,2.894376085611273,2.894614771092483,2.8948534368936785,2.8950920830197253,2.89533070947549,2.8955693162658354,2.8958079033956223,2.89604647086971,2.8962850186929554,2.896523546870214,2.896762055406339,2.8970005443061813,2.89723901357459,2.897477463216412,2.897715893236493,2.8979543036396755,2.8981926944308016,2.89843106561471,2.8986694171962375,2.8989077491802195,2.8991460615714897,2.8993843543748787,2.8996226275952157,2.8998608812373288,2.900099115306042,2.9003373298061796,2.9005755247425626,2.9008137001200103,2.9010518559433396,2.9012899922173667,2.9015281089469047,2.901766206136765,2.902004283791756,2.902242341916687,2.902480380516363,2.902718399595586,2.9029563991591596,2.903194379211882,2.9034323397585515,2.903670280803964,2.903908202352912,2.904146104410189,2.9043839869805828,2.904621850068883,2.904859693679874,2.9050975178183402,2.9053353224890643,2.905573107696825,2.9058108734464017,2.9060486197425694,2.9062863465901025,2.9065240539937727,2.906761741958351,2.9069994104886057,2.9072370595893022,2.907474689265206,2.9077122995210782,2.9079498903616807,2.908187461791771,2.9084250138161054,2.9086625464394396,2.908900059666526,2.909137553502115,2.9093750279509556,2.9096124830177943,2.9098499187073767,2.9100873350244454,2.9103247319737418,2.9105621095600047,2.910799467787971,2.9110368066623766,2.911274126187955,2.9115114263694366,2.9117487072115518,2.911985968719028,2.912223210896591,2.9124604337489637,2.912697637280868,2.912934821497025,2.9131719864021517,2.9134091320009636,2.913646258298176,2.9138833652985,2.914120453006647,2.9143575214273243,2.914594570565239,2.9148316004250954,2.9150686110115958,2.915305602329441,2.915542574383331,2.9157795271779605,2.916016460718026,2.9162533750082202,2.9164902700532345,2.9167271458577577,2.916964002426477,2.917200839764078,2.917437657875245,2.917674456764659,2.917911236437,2.9181479968969453,2.9183847381491708,2.9186214601983513,2.918858163049159,2.919094846706263,2.9193315111743328,2.919568156458034,2.9198047825620326,2.92004138949099,2.920277977249567,2.920514545842423,2.920751095274215,2.920987625549598,2.9212241366732257,2.9214606286497484,2.9216971014838164,2.9219335551800776,2.922169989743177,2.922406405177759,2.922642801488465,2.9228791786799357,2.9231155367568094,2.9233518757237213,2.923588195585307,2.923824496346199,2.924060778011028,2.924297040584422,2.9245332840710088,2.9247695084754137,2.9250057138022596,2.9252419000561676,2.9254780672417575,2.9257142153636475,2.925950344426452,2.926186454434786,2.9264225453932617,2.9266586173064892,2.926894670179076,2.9271307040156294,2.927366718820754,2.927602714599052,2.927838691355125,2.928074649093572,2.9283105878189897,2.9285465075359736,2.9287824082491176,2.929018289963013,2.9292541526822498,2.929489996411416,2.929725821155097,2.9299616269178785,2.9301974137043416,2.9304331815190676,2.9306689303666356,2.930904660251621,2.9311403711786004,2.931376063152146,2.93161173617683,2.9318473902572215,2.932083025397888,2.9323186416033953,2.9325542388783084,2.9327898172271887,2.933025376654597,2.9332609171650907,2.9334964387632283,2.9337319414535634,2.93396742524065,2.934202890129038,2.934438336123278,2.934673763227917,2.9349091714475013,2.935144560786574,2.9353799312496776,2.9356152828413524,2.935850615566137,2.936085929428568,2.93632122443318,2.9365565005845062,2.936791757887078,2.9370269963454243,2.9372622159640733,2.9374974167475503,2.937732598700379,2.9379677618270823,2.93820290613218,2.9384380316201906,2.9386731382956306,2.9389082261630155,2.9391432952268586,2.9393783454916704,2.9396133769619603,2.9398483896422367,2.9400833835370053,2.94031835865077,2.940553314988033,2.9407882525532947,2.941023171351054,2.9412580713858083,2.941492952662052,2.9417278151842785,2.94196265895698,2.9421974839846445,2.942432290271762,2.9426670778228172,2.942901846642295,2.943136596734678,2.9433713281044467,2.9436060407560807,2.943840734694056,2.9440754099228488,2.944310066446933,2.94454470427078,2.94477932339886,2.945013923835641,2.94524850558559,2.9454830686531714,2.945717613042848,2.9459521387590817,2.9461866458063315,2.946421134189054,2.9466556039117067,2.946890054978743,2.9471244873946145,2.947358901163773,2.9475932962906657,2.9478276727797414,2.948062030635444,2.9482963698622173,2.9485306904645037,2.948764992446742,2.948999275813371,2.949233540568827,2.9494677867175443,2.9497020142639565,2.9499362232124944,2.9501704135675872,2.9504045853336622,2.950638738515146,2.950872873116462,2.9511069891420334,2.9513410865962797,2.95157516548362,2.9518092258084723,2.952043267575251,2.95227729078837,2.952511295452241,2.9527452815712736,2.952979249149877,2.953213198192458,2.9534471287034205,2.953681040687168,2.9539149341481012,2.9541488090906207,2.9543826655191245,2.954616503438008,2.9548503228516654,2.9550841237644896,2.9553179061808725,2.955551670105202,2.9557854155418655,2.9560191424952498,2.956252850969738,2.9564865409697125,2.956720212499554,2.956953865563641,2.957187500166351,2.9574211163120587,2.9576547140051384,2.9578882932499613,2.958121854050898,2.9583553964123164,2.958588920338584,2.9588224258340645,2.959055912903122,2.9592893815501182,2.9595228317794127,2.9597562635953634,2.959989677002327,2.9602230720046574,2.960456448606708,2.9606898068128307,2.9609231466273735,2.9611564680546856,2.961389771099112,2.961623055764998,2.9618563220566854,2.9620895699785157,2.962322799534828,2.9625560107299593,2.9627892035682466,2.963022378054023,2.963255534191621,2.9634886719853717,2.9637217914396037,2.9639548925586445,2.9641879753468197,2.9644210398084527,2.964654085947867,2.9648871137693815,2.965120123277316,2.9653531144759877,2.9655860873697106,2.9658190419628,2.966051978259568,2.966284896264323,2.966517795981376,2.966750677415032,2.9669835405695975,2.9672163854493756,2.9674492120586677,2.967682020401775,2.967914810482995,2.9681475823066252,2.9683803358769607,2.9686130711982943,2.968845788274918,2.9690784871111227,2.969311167711196,2.9695438300794246,2.9697764742200934,2.9700091001374864,2.970241707835885,2.970474297319569,2.9707068685928166,2.9709394216599048,2.971171956525109,2.9714044731927016,2.9716369716669546,2.971869451952138,2.9721019140525198,2.972334357972367,2.9725667837159446,2.972799191287516,2.973031580691342,2.9732639519316835,2.973496305012798,2.973728639938943,2.973960956714373,2.974193255343341,2.9744255358300995,2.9746577981788973,2.9748900423939837,2.9751222684796046,2.975354476440006,2.9755866662794306,2.97581883800212,2.976050991612314,2.976283127114252,2.97651524451217,2.976747343810303,2.976979425012885,2.977211488124147,2.9774435331483198,2.977675560089632,2.97790756895231,2.978139559740579,2.978371532458662,2.9786034871107825,2.978835423701159,2.9790673422340115,2.979299242713556,2.979531125144008,2.9797629895295823,2.9799948358744897,2.9802266641829407,2.980458474459144,2.980690266707308,2.9809220409316364,2.9811537971363347,2.9813855353256042,2.9816172555036453,2.981848957674658,2.9820806418428387,2.982312308012383,2.982543956187486,2.9827755863723393,2.983007198571134,2.9832387927880593,2.983470369027302,2.98370192729305,2.9839334675894857,2.9841649899207927,2.984396494291152,2.9846279807047424,2.9848594491657425,2.9850908996783287,2.9853223322466746,2.9855537468749542,2.985785143567338,2.9860165223279966,2.9862478831610972,2.9864792260708066,2.9867105510612904,2.9869418581367113,2.987173147301231,2.98740441855901,2.9876356719142056,2.9878669073709756,2.9880981249334755,2.988329324605858,2.9885605063922758,2.988791670296879,2.9890228163238164,2.9892539444772357,2.989485054761282,2.9897161471800993,2.9899472217378302,2.990178278438615,2.990409317286594,2.990640338285904,2.9908713414406805,2.991102326755059,2.991333294233172,2.9915642438791505,2.991795175697124,2.9920260896912207,2.992256985865567,2.9924878642242883,2.992718724771507,2.992949567511345,2.9931803924479223,2.9934111995853576,2.9936419889277683,2.9938727604792685,2.9941035142439727,2.9943342502259926,2.9945649684294398,2.9947956688584223,2.995026351517047,2.9952570164094214,2.9954876635396483,2.9957182929118304,2.99594890453007,2.996179498398465,2.996410074521114,2.9966406329021136,2.9968711735455584,2.9971016964555415,2.9973322016361545,2.9975626890914873,2.9977931588256292,2.998023610842665,2.9982540451466826,2.9984844617417643,2.9987148606319924,2.998945241821448,2.9991756053142096,2.9994059511143547,2.9996362792259594,2.9998665896530983,3.000096882399844,3.000327157470268,3.0005574148684384,3.0007876545984256,3.001017876664295,3.001248081070111,3.0014782678199383,3.0017084369178377,3.0019385883678704,3.0021687221740945,3.0023988383405666,3.002628936871344,3.0028590177704797,3.0030890810420265,3.003319126690035,3.003549154718555,3.0037791651316343,3.0040091579333192,3.004239133127655,3.004469090718684,3.004699030710448,3.004928953106988,3.0051588579123423,3.005388745130547,3.0056186147656385,3.0058484668216505,3.0060783013026158,3.006308118212565,3.006537917555527,3.00676769933553,3.0069974635566004,3.0072272102227626,3.0074569393380406,3.0076866509064546,3.007916344932026,3.0081460214187725,3.0083756803707113,3.0086053217918587,3.008834945686228,3.0090645520578314,3.0092941409106806,3.0095237122487846,3.0097532660761503,3.0099828023967854,3.0102123212146945,3.0104418225338803,3.0106713063583452,3.0109007726920884,3.01113022153911,3.0113596529034057,3.011589066788972,3.0118184631998033,3.012047842139891,3.0122772036132277,3.0125065476238024,3.0127358741756027,3.0129651832726156,3.0131944749188255,3.0134237491182168,3.013653005874771,3.0138822451924683,3.014111467075288,3.014340671527208,3.0145698585522034,3.0147990281542487,3.015028180337317,3.01525731510538,3.0154864324624078,3.0157155324123677,3.0159446149592277,3.0161736801069523,3.016402727859506,3.016631758220851,3.0168607711949473,3.0170897667857552,3.0173187449972327,3.0175477058333358,3.0177766492980194,3.018005575395237,3.0182344841289392,3.018463375503078,3.0186922495216018,3.0189211061884578,3.019149945507592,3.019378767482948,3.019607572118469,3.019836359418098,3.0200651293857725,3.020293882025432,3.020522617341013,3.020751335336452,3.020980036015682,3.0212087193826354,3.021437385441243,3.021666034195435,3.0218946656491386,3.022123279806281,3.022351876670786,3.022580456246579,3.02280901853758,3.023037563547711,3.0232660912808904,3.0234946017410356,3.0237230949320635,3.0239515708578883,3.0241800295224226,3.024408470929579,3.024636895083267,3.0248653019873957,3.025093691645872,3.025322064062602,3.0255504192414895,3.0257787571864383,3.026007077901349,3.026235381390121,3.0264636676566536,3.026691936704843,3.0269201885385857,3.027148423161775,3.027376640578303,3.0276048407920615,3.0278330238069397,3.028061189626826,3.028289338255607,3.0285174696971673,3.0287455839553914,3.028973681034161,3.029201760937358,3.02942982366886,3.029657869232546,3.029885897632293,3.0301139088719746,3.030341902955465,3.0305698798866367,3.030797839669359,3.0310257823075024,3.0312537078049338,3.03148161616552,3.0317095073931246,3.031937381491612,3.0321652384648443,3.0323930783166815,3.0326209010509824,3.0328487066716043,3.0330764951824043,3.0333042665872356,3.033532020889953,3.0337597580944067,3.033987478204448,3.034215181223925,3.034442867156686,3.034670536006576,3.034898187777441,3.035125822473122,3.035353440097462,3.035581040654301,3.035808624147478,3.0360361905808295,3.0362637399581915,3.0364912722833997,3.036718787560286,3.0369462857926814,3.037173766984417,3.037401231139322,3.037628678261222,3.0378561083539446,3.0380835214213127,3.03831091746715,3.0385382964952785,3.0387656585095173,3.038993003513686,3.0392203315116006,3.039447642507078,3.0396749365039333,3.0399022135059774,3.0401294735170232,3.040356716540881,3.0405839425813586,3.040811151642264,3.041038343727402,3.0412655188405786,3.041492676985596,3.0417198181662557,3.0419469423863577,3.042174049649701,3.0424011399600834,3.0426282133213,3.042855269737146,3.043082309211414,3.0433093317478956,3.0435363373503814,3.0437633260226606,3.0439902977685196,3.044217252591745,3.0444441904961215,3.044671111485432,3.044898015563459,3.0451249027339817,3.0453517730007795,3.045578626367631,3.045805462838311,3.046032282416595,3.046259085106256,3.0464858709110656,3.046712639834795,3.0469393918812138,3.047166127054088,3.0473928453571855,3.0476195467942704,3.047846231369107,3.0480728990854566,3.04829954994708,3.0485261839577373,3.0487528011211857,3.0489794014411817,3.0492059849214814,3.049432551565837,3.049659101378002,3.0498856343617273,3.050112150520762,3.0503386498588547,3.050565132379752,3.0507915980871987,3.05101804698494,3.0512444790767175,3.0514708943662727,3.051697292857346,3.051923674553675,3.052150039458997,3.052376387577048,3.052602718911562,3.0528290334662724,3.05305533124491,3.0532816122512054,3.053507876488887,3.053734123961682,3.0539603546733174,3.054186568627517,3.0544127658280043,3.054638946278501,3.0548651099827278,3.055091256944404,3.0553173871672463,3.055543500654972,3.0557695974112957,3.0559956774399315,3.056221740744591,3.0564477873289855,3.0566738171968235,3.0568998303518145,3.0571258267976646,3.0573518065380796,3.0575777695767625,3.0578037159174167,3.0580296455637432,3.0582555585194426,3.058481454788212,3.05870733437375,3.0589331972797518,3.0591590435099114,3.0593848730679225,3.0596106859574763,3.0598364821822637,3.0600622617459736,3.0602880246522934,3.0605137709049095,3.0607395005075064,3.0609652134637684,3.061190909777377,3.0614165894520133,3.0616422524913567,3.0618678988990857,3.062093528678876,3.062319141834405,3.0625447383693447,3.062770318287369,3.0629958815921485,3.0632214282873536,3.063446958376653,3.063672471863714,3.0638979687522023,3.0641234490457827,3.0643489127481183,3.0645743598628714,3.064799790393702,3.0650252043442694,3.065250601718232,3.065475982519246,3.0657013467509664,3.065926694417047,3.06615202552114,3.0663773400668983,3.0666026380579696,3.066827919498003,3.067053184390646,3.067278432739544,3.067503664548342,3.0677288798206823,3.067954078560207,3.068179260770557,3.068404426455371,3.068629575618287,3.0688547082629407,3.069079824392968,3.0693049240120023,3.069530007123676,3.0697550737316206,3.0699801238394655],"x":[0.8,0.8004398240703718,0.8008796481407437,0.8013194722111155,0.8017592962814875,0.8021991203518593,0.8026389444222312,0.803078768492603,0.8035185925629749,0.8039584166333467,0.8043982407037185,0.8048380647740904,0.8052778888444622,0.8057177129148341,0.8061575369852059,0.8065973610555778,0.8070371851259496,0.8074770091963215,0.8079168332666933,0.8083566573370652,0.808796481407437,0.8092363054778089,0.8096761295481807,0.8101159536185526,0.8105557776889244,0.8109956017592963,0.8114354258296681,0.81187524990004,0.8123150739704118,0.8127548980407837,0.8131947221111555,0.8136345461815274,0.8140743702518992,0.8145141943222711,0.8149540183926429,0.8153938424630148,0.8158336665333866,0.8162734906037585,0.8167133146741303,0.8171531387445022,0.817592962814874,0.8180327868852459,0.8184726109556177,0.8189124350259896,0.8193522590963614,0.8197920831667334,0.8202319072371052,0.8206717313074771,0.8211115553778489,0.8215513794482208,0.8219912035185926,0.8224310275889645,0.8228708516593363,0.8233106757297081,0.82375049980008,0.8241903238704518,0.8246301479408237,0.8250699720111955,0.8255097960815674,0.8259496201519392,0.8263894442223111,0.8268292682926829,0.8272690923630548,0.8277089164334266,0.8281487405037985,0.8285885645741703,0.8290283886445422,0.829468212714914,0.8299080367852859,0.8303478608556577,0.8307876849260296,0.8312275089964014,0.8316673330667733,0.8321071571371451,0.832546981207517,0.8329868052778888,0.8334266293482607,0.8338664534186325,0.8343062774890044,0.8347461015593762,0.8351859256297481,0.8356257497001199,0.8360655737704918,0.8365053978408636,0.8369452219112355,0.8373850459816073,0.8378248700519793,0.838264694122351,0.838704518192723,0.8391443422630948,0.8395841663334667,0.8400239904038385,0.8404638144742104,0.8409036385445822,0.841343462614954,0.8417832866853259,0.8422231107556977,0.8426629348260696,0.8431027588964414,0.8435425829668133,0.8439824070371851,0.844422231107557,0.8448620551779288,0.8453018792483007,0.8457417033186725,0.8461815273890444,0.8466213514594162,0.8470611755297881,0.8475009996001599,0.8479408236705318,0.8483806477409036,0.8488204718112755,0.8492602958816473,0.8497001199520192,0.850139944022391,0.8505797680927629,0.8510195921631347,0.8514594162335066,0.8518992403038784,0.8523390643742503,0.8527788884446221,0.853218712514994,0.8536585365853658,0.8540983606557377,0.8545381847261095,0.8549780087964814,0.8554178328668532,0.8558576569372252,0.856297481007597,0.8567373050779689,0.8571771291483407,0.8576169532187126,0.8580567772890844,0.8584966013594563,0.8589364254298281,0.8593762495002,0.8598160735705718,0.8602558976409436,0.8606957217113155,0.8611355457816873,0.8615753698520592,0.862015193922431,0.8624550179928029,0.8628948420631747,0.8633346661335466,0.8637744902039184,0.8642143142742903,0.8646541383446621,0.865093962415034,0.8655337864854058,0.8659736105557777,0.8664134346261495,0.8668532586965214,0.8672930827668932,0.8677329068372651,0.8681727309076369,0.8686125549780088,0.8690523790483806,0.8694922031187525,0.8699320271891243,0.8703718512594962,0.870811675329868,0.8712514994002399,0.8716913234706117,0.8721311475409836,0.8725709716113554,0.8730107956817273,0.8734506197520991,0.873890443822471,0.8743302678928428,0.8747700919632148,0.8752099160335866,0.8756497401039585,0.8760895641743303,0.8765293882447022,0.876969212315074,0.8774090363854459,0.8778488604558177,0.8782886845261896,0.8787285085965614,0.8791683326669332,0.8796081567373051,0.8800479808076769,0.8804878048780488,0.8809276289484206,0.8813674530187925,0.8818072770891643,0.8822471011595362,0.882686925229908,0.8831267493002799,0.8835665733706517,0.8840063974410236,0.8844462215113954,0.8848860455817673,0.8853258696521391,0.885765693722511,0.8862055177928828,0.8866453418632547,0.8870851659336265,0.8875249900039984,0.8879648140743702,0.8884046381447421,0.8888444622151139,0.8892842862854858,0.8897241103558576,0.8901639344262295,0.8906037584966013,0.8910435825669732,0.891483406637345,0.891923230707717,0.8923630547780887,0.8928028788484607,0.8932427029188325,0.8936825269892044,0.8941223510595762,0.8945621751299481,0.8950019992003199,0.8954418232706918,0.8958816473410636,0.8963214714114355,0.8967612954818073,0.8972011195521792,0.897640943622551,0.8980807676929228,0.8985205917632947,0.8989604158336665,0.8994002399040384,0.8998400639744102,0.9002798880447821,0.9007197121151539,0.9011595361855258,0.9015993602558976,0.9020391843262695,0.9024790083966413,0.9029188324670132,0.903358656537385,0.9037984806077569,0.9042383046781287,0.9046781287485006,0.9051179528188724,0.9055577768892443,0.9059976009596161,0.906437425029988,0.9068772491003598,0.9073170731707317,0.9077568972411035,0.9081967213114754,0.9086365453818472,0.9090763694522191,0.9095161935225909,0.9099560175929629,0.9103958416633346,0.9108356657337066,0.9112754898040784,0.9117153138744503,0.9121551379448221,0.912594962015194,0.9130347860855658,0.9134746101559377,0.9139144342263095,0.9143542582966814,0.9147940823670532,0.9152339064374251,0.9156737305077969,0.9161135545781688,0.9165533786485406,0.9169932027189124,0.9174330267892843,0.9178728508596561,0.918312674930028,0.9187524990003998,0.9191923230707717,0.9196321471411435,0.9200719712115154,0.9205117952818872,0.9209516193522591,0.9213914434226309,0.9218312674930028,0.9222710915633746,0.9227109156337465,0.9231507397041183,0.9235905637744902,0.924030387844862,0.9244702119152339,0.9249100359856057,0.9253498600559776,0.9257896841263494,0.9262295081967213,0.9266693322670931,0.927109156337465,0.9275489804078368,0.9279888044782088,0.9284286285485805,0.9288684526189525,0.9293082766893243,0.9297481007596962,0.930187924830068,0.9306277489004399,0.9310675729708117,0.9315073970411836,0.9319472211115554,0.9323870451819273,0.9328268692522991,0.933266693322671,0.9337065173930428,0.9341463414634147,0.9345861655337865,0.9350259896041584,0.9354658136745302,0.935905637744902,0.9363454618152739,0.9367852858856457,0.9372251099560176,0.9376649340263894,0.9381047580967613,0.9385445821671331,0.938984406237505,0.9394242303078768,0.9398640543782487,0.9403038784486205,0.9407437025189924,0.9411835265893642,0.9416233506597361,0.9420631747301079,0.9425029988004798,0.9429428228708516,0.9433826469412235,0.9438224710115953,0.9442622950819672,0.944702119152339,0.945141943222711,0.9455817672930827,0.9460215913634547,0.9464614154338264,0.9469012395041984,0.9473410635745702,0.9477808876449421,0.9482207117153139,0.9486605357856858,0.9491003598560576,0.9495401839264295,0.9499800079968013,0.9504198320671732,0.950859656137545,0.9512994802079169,0.9517393042782887,0.9521791283486606,0.9526189524190324,0.9530587764894043,0.9534986005597761,0.9539384246301479,0.9543782487005198,0.9548180727708916,0.9552578968412635,0.9556977209116353,0.9561375449820072,0.956577369052379,0.9570171931227509,0.9574570171931227,0.9578968412634946,0.9583366653338664,0.9587764894042383,0.9592163134746101,0.959656137544982,0.9600959616153538,0.9605357856857257,0.9609756097560975,0.9614154338264694,0.9618552578968412,0.9622950819672131,0.9627349060375849,0.9631747301079568,0.9636145541783286,0.9640543782487005,0.9644942023190723,0.9649340263894443,0.965373850459816,0.965813674530188,0.9662534986005598,0.9666933226709317,0.9671331467413035,0.9675729708116754,0.9680127948820472,0.9684526189524191,0.9688924430227909,0.9693322670931628,0.9697720911635346,0.9702119152339065,0.9706517393042783,0.9710915633746502,0.971531387445022,0.9719712115153939,0.9724110355857657,0.9728508596561375,0.9732906837265094,0.9737305077968812,0.9741703318672531,0.9746101559376249,0.9750499800079968,0.9754898040783686,0.9759296281487405,0.9763694522191123,0.9768092762894842,0.977249100359856,0.9776889244302279,0.9781287485005997,0.9785685725709716,0.9790083966413434,0.9794482207117153,0.9798880447820871,0.980327868852459,0.9807676929228308,0.9812075169932027,0.9816473410635745,0.9820871651339464,0.9825269892043182,0.9829668132746902,0.983406637345062,0.9838464614154339,0.9842862854858057,0.9847261095561776,0.9851659336265494,0.9856057576969213,0.9860455817672931,0.986485405837665,0.9869252299080368,0.9873650539784087,0.9878048780487805,0.9882447021191524,0.9886845261895242,0.9891243502598961,0.9895641743302679,0.9900039984006398,0.9904438224710116,0.9908836465413835,0.9913234706117553,0.9917632946821271,0.992203118752499,0.9926429428228708,0.9930827668932427,0.9935225909636145,0.9939624150339864,0.9944022391043582,0.9948420631747301,0.9952818872451019,0.9957217113154738,0.9961615353858456,0.9966013594562175,0.9970411835265893,0.9974810075969612,0.997920831667333,0.9983606557377049,0.9988004798080767,0.9992403038784486,0.9996801279488204,1.0001199520191923,1.0005597760895641,1.000999600159936,1.001439424230308,1.0018792483006798,1.0023190723710516,1.0027588964414234,1.0031987205117954,1.0036385445821672,1.004078368652539,1.0045181927229108,1.0049580167932828,1.0053978408636546,1.0058376649340264,1.0062774890043982,1.0067173130747702,1.007157137145142,1.0075969612155138,1.0080367852858856,1.0084766093562576,1.0089164334266294,1.0093562574970012,1.009796081567373,1.010235905637745,1.0106757297081168,1.0111155537784886,1.0115553778488604,1.0119952019192322,1.0124350259896042,1.012874850059976,1.0133146741303478,1.0137544982007196,1.0141943222710916,1.0146341463414634,1.0150739704118352,1.015513794482207,1.015953618552579,1.0163934426229508,1.0168332666933226,1.0172730907636944,1.0177129148340665,1.0181527389044382,1.01859256297481,1.0190323870451818,1.0194722111155539,1.0199120351859257,1.0203518592562975,1.0207916833266693,1.0212315073970413,1.021671331467413,1.0221111555377849,1.0225509796081567,1.0229908036785287,1.0234306277489005,1.0238704518192723,1.024310275889644,1.024750099960016,1.025189924030388,1.0256297481007597,1.0260695721711315,1.0265093962415035,1.0269492203118753,1.027389044382247,1.027828868452619,1.028268692522991,1.0287085165933627,1.0291483406637345,1.0295881647341063,1.030027988804478,1.0304678128748501,1.030907636945222,1.0313474610155937,1.0317872850859655,1.0322271091563375,1.0326669332267093,1.0331067572970811,1.033546581367453,1.033986405437825,1.0344262295081967,1.0348660535785685,1.0353058776489403,1.0357457017193124,1.0361855257896841,1.036625349860056,1.0370651739304277,1.0375049980007998,1.0379448220711716,1.0383846461415434,1.0388244702119152,1.0392642942822872,1.039704118352659,1.0401439424230308,1.0405837664934026,1.0410235905637746,1.0414634146341464,1.0419032387045182,1.04234306277489,1.042782886845262,1.0432227109156338,1.0436625349860056,1.0441023590563774,1.0445421831267494,1.0449820071971212,1.045421831267493,1.0458616553378648,1.0463014794082368,1.0467413034786086,1.0471811275489804,1.0476209516193522,1.048060775689724,1.048500599760096,1.0489404238304678,1.0493802479008396,1.0498200719712114,1.0502598960415834,1.0506997201119552,1.051139544182327,1.0515793682526988,1.0520191923230708,1.0524590163934426,1.0528988404638144,1.0533386645341862,1.0537784886045582,1.05421831267493,1.0546581367453018,1.0550979608156736,1.0555377848860457,1.0559776089564175,1.0564174330267893,1.056857257097161,1.057297081167533,1.0577369052379049,1.0581767293082767,1.0586165533786485,1.0590563774490205,1.0594962015193923,1.059936025589764,1.0603758496601359,1.060815673730508,1.0612554978008797,1.0616953218712515,1.0621351459416233,1.0625749700119953,1.063014794082367,1.063454618152739,1.0638944422231107,1.0643342662934827,1.0647740903638545,1.0652139144342263,1.065653738504598,1.0660935625749701,1.066533386645342,1.0669732107157137,1.0674130347860855,1.0678528588564573,1.0682926829268293,1.0687325069972011,1.069172331067573,1.0696121551379447,1.0700519792083167,1.0704918032786885,1.0709316273490603,1.0713714514194321,1.0718112754898041,1.072251099560176,1.0726909236305477,1.0731307477009195,1.0735705717712916,1.0740103958416634,1.0744502199120352,1.074890043982407,1.075329868052779,1.0757696921231508,1.0762095161935226,1.0766493402638944,1.0770891643342664,1.0775289884046382,1.07796881247501,1.0784086365453818,1.0788484606157538,1.0792882846861256,1.0797281087564974,1.0801679328268692,1.0806077568972412,1.081047580967613,1.0814874050379848,1.0819272291083566,1.0823670531787286,1.0828068772491004,1.0832467013194722,1.083686525389844,1.084126349460216,1.0845661735305878,1.0850059976009596,1.0854458216713314,1.0858856457417032,1.0863254698120752,1.086765293882447,1.0872051179528188,1.0876449420231906,1.0880847660935626,1.0885245901639344,1.0889644142343062,1.089404238304678,1.08984406237505,1.0902838864454218,1.0907237105157936,1.0911635345861654,1.0916033586565375,1.0920431827269093,1.092483006797281,1.0929228308676529,1.0933626549380249,1.0938024790083967,1.0942423030787685,1.0946821271491403,1.0951219512195123,1.095561775289884,1.0960015993602559,1.0964414234306277,1.0968812475009997,1.0973210715713715,1.0977608956417433,1.098200719712115,1.098640543782487,1.099080367852859,1.0995201919232307,1.0999600159936025,1.1003998400639745,1.1008396641343463,1.101279488204718,1.10171931227509,1.102159136345462,1.1025989604158337,1.1030387844862055,1.1034786085565773,1.1039184326269493,1.1043582566973211,1.104798080767693,1.1052379048380647,1.1056777289084365,1.1061175529788085,1.1065573770491803,1.1069972011195521,1.107437025189924,1.107876849260296,1.1083166733306677,1.1087564974010395,1.1091963214714113,1.1096361455417834,1.1100759696121552,1.110515793682527,1.1109556177528987,1.1113954418232708,1.1118352658936426,1.1122750899640144,1.1127149140343862,1.1131547381047582,1.11359456217513,1.1140343862455018,1.1144742103158736,1.1149140343862456,1.1153538584566174,1.1157936825269892,1.116233506597361,1.116673330667733,1.1171131547381048,1.1175529788084766,1.1179928028788484,1.1184326269492204,1.1188724510195922,1.119312275089964,1.1197520991603358,1.1201919232307078,1.1206317473010796,1.1210715713714514,1.1215113954418232,1.1219512195121952,1.122391043582567,1.1228308676529388,1.1232706917233106,1.1237105157936824,1.1241503398640544,1.1245901639344262,1.125029988004798,1.1254698120751698,1.1259096361455418,1.1263494602159136,1.1267892842862854,1.1272291083566572,1.1276689324270293,1.128108756497401,1.1285485805677729,1.1289884046381446,1.1294282287085167,1.1298680527788885,1.1303078768492603,1.130747700919632,1.131187524990004,1.1316273490603759,1.1320671731307477,1.1325069972011195,1.1329468212714915,1.1333866453418633,1.133826469412235,1.1342662934826069,1.134706117552979,1.1351459416233507,1.1355857656937225,1.1360255897640943,1.1364654138344663,1.136905237904838,1.13734506197521,1.1377848860455817,1.1382247101159537,1.1386645341863255,1.1391043582566973,1.139544182327069,1.1399840063974411,1.140423830467813,1.1408636545381847,1.1413034786085565,1.1417433026789283,1.1421831267493003,1.1426229508196721,1.143062774890044,1.1435025989604157,1.1439424230307877,1.1443822471011595,1.1448220711715313,1.1452618952419031,1.1457017193122752,1.146141543382647,1.1465813674530188,1.1470211915233905,1.1474610155937626,1.1479008396641344,1.1483406637345062,1.148780487804878,1.14922031187525,1.1496601359456218,1.1500999600159936,1.1505397840863654,1.1509796081567374,1.1514194322271092,1.151859256297481,1.1522990803678528,1.1527389044382248,1.1531787285085966,1.1536185525789684,1.1540583766493402,1.1544982007197122,1.154938024790084,1.1553778488604558,1.1558176729308276,1.1562574970011996,1.1566973210715714,1.1571371451419432,1.157576969212315,1.158016793282687,1.1584566173530588,1.1588964414234306,1.1593362654938024,1.1597760895641744,1.1602159136345462,1.160655737704918,1.1610955617752898,1.1615353858456616,1.1619752099160336,1.1624150339864054,1.1628548580567772,1.163294682127149,1.163734506197521,1.1641743302678929,1.1646141543382647,1.1650539784086364,1.1654938024790085,1.1659336265493803,1.166373450619752,1.1668132746901239,1.1672530987604959,1.1676929228308677,1.1681327469012395,1.1685725709716113,1.1690123950419833,1.169452219112355,1.1698920431827269,1.1703318672530987,1.1707716913234707,1.1712115153938425,1.1716513394642143,1.172091163534586,1.172530987604958,1.17297081167533,1.1734106357457017,1.1738504598160735,1.1742902838864455,1.1747301079568173,1.1751699320271891,1.175609756097561,1.176049580167933,1.1764894042383047,1.1769292283086765,1.1773690523790483,1.1778088764494203,1.1782487005197921,1.178688524590164,1.1791283486605357,1.1795681727309075,1.1800079968012795,1.1804478208716513,1.1808876449420231,1.181327469012395,1.181767293082767,1.1822071171531388,1.1826469412235106,1.1830867652938823,1.1835265893642544,1.1839664134346262,1.184406237504998,1.1848460615753698,1.1852858856457418,1.1857257097161136,1.1861655337864854,1.1866053578568572,1.1870451819272292,1.187485005997601,1.1879248300679728,1.1883646541383446,1.1888044782087166,1.1892443022790884,1.1896841263494602,1.190123950419832,1.190563774490204,1.1910035985605758,1.1914434226309476,1.1918832467013194,1.1923230707716914,1.1927628948420632,1.193202718912435,1.1936425429828068,1.1940823670531788,1.1945221911235506,1.1949620151939224,1.1954018392642942,1.1958416633346662,1.196281487405038,1.1967213114754098,1.1971611355457816,1.1976009596161536,1.1980407836865254,1.1984806077568972,1.198920431827269,1.1993602558976408,1.1998000799680129,1.2002399040383847,1.2006797281087564,1.2011195521791282,1.2015593762495003,1.201999200319872,1.2024390243902439,1.2028788484606157,1.2033186725309877,1.2037584966013595,1.2041983206717313,1.204638144742103,1.205077968812475,1.2055177928828469,1.2059576169532187,1.2063974410235905,1.2068372650939625,1.2072770891643343,1.207716913234706,1.2081567373050779,1.20859656137545,1.2090363854458217,1.2094762095161935,1.2099160335865653,1.2103558576569373,1.2107956817273091,1.211235505797681,1.2116753298680527,1.2121151539384247,1.2125549780087965,1.2129948020791683,1.2134346261495401,1.2138744502199121,1.214314274290284,1.2147540983606557,1.2151939224310275,1.2156337465013995,1.2160735705717713,1.2165133946421431,1.216953218712515,1.2173930427828867,1.2178328668532588,1.2182726909236306,1.2187125149940023,1.2191523390643741,1.2195921631347462,1.220031987205118,1.2204718112754898,1.2209116353458616,1.2213514594162336,1.2217912834866054,1.2222311075569772,1.222670931627349,1.223110755697721,1.2235505797680928,1.2239904038384646,1.2244302279088364,1.2248700519792084,1.2253098760495802,1.225749700119952,1.2261895241903238,1.2266293482606958,1.2270691723310676,1.2275089964014394,1.2279488204718112,1.2283886445421832,1.228828468612555,1.2292682926829268,1.2297081167532986,1.2301479408236706,1.2305877648940424,1.2310275889644142,1.231467413034786,1.231907237105158,1.2323470611755298,1.2327868852459016,1.2332267093162734,1.2336665333866454,1.2341063574570172,1.234546181527389,1.2349860055977608,1.2354258296681329,1.2358656537385047,1.2363054778088765,1.2367453018792482,1.23718512594962,1.237624950019992,1.2380647740903639,1.2385045981607357,1.2389444222311075,1.2393842463014795,1.2398240703718513,1.240263894442223,1.2407037185125949,1.2411435425829669,1.2415833666533387,1.2420231907237105,1.2424630147940823,1.2429028388644543,1.243342662934826,1.243782487005198,1.2442223110755697,1.2446621351459417,1.2451019592163135,1.2455417832866853,1.245981607357057,1.2464214314274291,1.246861255497801,1.2473010795681727,1.2477409036385445,1.2481807277089165,1.2486205517792883,1.2490603758496601,1.249500199920032,1.249940023990404,1.2503798480607757,1.2508196721311475,1.2512594962015193,1.2516993202718913,1.2521391443422631,1.252578968412635,1.2530187924830067,1.2534586165533788,1.2538984406237506,1.2543382646941224,1.2547780887644941,1.255217912834866,1.255657736905238,1.2560975609756098,1.2565373850459816,1.2569772091163534,1.2574170331867254,1.2578568572570972,1.258296681327469,1.2587365053978408,1.2591763294682128,1.2596161535385846,1.2600559776089564,1.2604958016793282,1.2609356257497002,1.261375449820072,1.2618152738904438,1.2622550979608156,1.2626949220311876,1.2631347461015594,1.2635745701719312,1.264014394242303,1.264454218312675,1.2648940423830468,1.2653338664534186,1.2657736905237904,1.2662135145941624,1.2666533386645342,1.267093162734906,1.2675329868052778,1.2679728108756498,1.2684126349460216,1.2688524590163934,1.2692922830867652,1.2697321071571372,1.270171931227509,1.2706117552978808,1.2710515793682526,1.2714914034386247,1.2719312275089965,1.2723710515793683,1.27281087564974,1.2732506997201118,1.2736905237904839,1.2741303478608557,1.2745701719312275,1.2750099960015993,1.2754498200719713,1.275889644142343,1.2763294682127149,1.2767692922830867,1.2772091163534587,1.2776489404238305,1.2780887644942023,1.278528588564574,1.278968412634946,1.279408236705318,1.2798480607756897,1.2802878848460615,1.2807277089164335,1.2811675329868053,1.281607357057177,1.282047181127549,1.282487005197921,1.2829268292682927,1.2833666533386645,1.2838064774090363,1.2842463014794083,1.2846861255497801,1.285125949620152,1.2855657736905237,1.2860055977608957,1.2864454218312675,1.2868852459016393,1.2873250699720111,1.2877648940423831,1.288204718112755,1.2886445421831267,1.2890843662534985,1.2895241903238706,1.2899640143942424,1.2904038384646142,1.290843662534986,1.291283486605358,1.2917233106757298,1.2921631347461016,1.2926029588164734,1.2930427828868452,1.2934826069572172,1.293922431027589,1.2943622550979608,1.2948020791683326,1.2952419032387046,1.2956817273090764,1.2961215513794482,1.29656137544982,1.297001199520192,1.2974410235905638,1.2978808476609356,1.2983206717313074,1.2987604958016794,1.2992003198720512,1.299640143942423,1.3000799680127948,1.3005197920831668,1.3009596161535386,1.3013994402239104,1.3018392642942822,1.3022790883646542,1.302718912435026,1.3031587365053978,1.3035985605757696,1.3040383846461416,1.3044782087165134,1.3049180327868852,1.305357856857257,1.305797680927629,1.3062375049980008,1.3066773290683726,1.3071171531387444,1.3075569772091165,1.3079968012794883,1.30843662534986,1.3088764494202318,1.3093162734906039,1.3097560975609757,1.3101959216313475,1.3106357457017193,1.311075569772091,1.311515393842463,1.3119552179128349,1.3123950419832067,1.3128348660535785,1.3132746901239505,1.3137145141943223,1.314154338264694,1.3145941623350659,1.315033986405438,1.3154738104758097,1.3159136345461815,1.3163534586165533,1.3167932826869253,1.317233106757297,1.317672930827669,1.3181127548980407,1.3185525789684127,1.3189924030387845,1.3194322271091563,1.319872051179528,1.3203118752499001,1.320751699320272,1.3211915233906437,1.3216313474610155,1.3220711715313875,1.3225109956017593,1.3229508196721311,1.323390643742503,1.323830467812875,1.3242702918832467,1.3247101159536185,1.3251499400239903,1.3255897640943624,1.3260295881647342,1.326469412235106,1.3269092363054777,1.3273490603758498,1.3277888844462216,1.3282287085165934,1.3286685325869652,1.3291083566573372,1.329548180727709,1.3299880047980808,1.3304278288684526,1.3308676529388244,1.3313074770091964,1.3317473010795682,1.33218712514994,1.3326269492203118,1.3330667732906838,1.3335065973610556,1.3339464214314274,1.3343862455017992,1.3348260695721712,1.335265893642543,1.3357057177129148,1.3361455417832866,1.3365853658536586,1.3370251899240304,1.3374650139944022,1.337904838064774,1.338344662135146,1.3387844862055178,1.3392243102758896,1.3396641343462614,1.3401039584166334,1.3405437824870052,1.340983606557377,1.3414234306277488,1.3418632546981208,1.3423030787684926,1.3427429028388644,1.3431827269092362,1.3436225509796083,1.34406237504998,1.3445021991203518,1.3449420231907236,1.3453818472610957,1.3458216713314675,1.3462614954018393,1.346701319472211,1.347141143542583,1.3475809676129549,1.3480207916833267,1.3484606157536985,1.3489004398240703,1.3493402638944423,1.349780087964814,1.3502199120351859,1.3506597361055577,1.3510995601759297,1.3515393842463015,1.3519792083166733,1.352419032387045,1.352858856457417,1.353298680527789,1.3537385045981607,1.3541783286685325,1.3546181527389045,1.3550579768092763,1.355497800879648,1.35593762495002,1.356377449020392,1.3568172730907637,1.3572570971611355,1.3576969212315073,1.3581367453018793,1.3585765693722511,1.359016393442623,1.3594562175129947,1.3598960415833667,1.3603358656537385,1.3607756897241103,1.3612155137944821,1.3616553378648542,1.362095161935226,1.3625349860055977,1.3629748100759695,1.3634146341463416,1.3638544582167134,1.3642942822870852,1.364734106357457,1.365173930427829,1.3656137544982008,1.3660535785685726,1.3664934026389444,1.3669332267093162,1.3673730507796882,1.36781287485006,1.3682526989204318,1.3686925229908036,1.3691323470611756,1.3695721711315474,1.3700119952019192,1.370451819272291,1.370891643342663,1.3713314674130348,1.3717712914834066,1.3722111155537784,1.3726509396241504,1.3730907636945222,1.373530587764894,1.3739704118352658,1.3744102359056378,1.3748500599760096,1.3752898840463814,1.3757297081167532,1.3761695321871252,1.376609356257497,1.3770491803278688,1.3774890043982406,1.3779288284686126,1.3783686525389844,1.3788084766093562,1.379248300679728,1.3796881247501,1.3801279488204719,1.3805677728908436,1.3810075969612154,1.3814474210315875,1.3818872451019593,1.382327069172331,1.3827668932427029,1.3832067173130749,1.3836465413834467,1.3840863654538185,1.3845261895241903,1.3849660135945623,1.385405837664934,1.3858456617353059,1.3862854858056777,1.3867253098760495,1.3871651339464215,1.3876049580167933,1.388044782087165,1.3884846061575369,1.388924430227909,1.3893642542982807,1.3898040783686525,1.3902439024390243,1.3906837265093963,1.391123550579768,1.39156337465014,1.3920031987205117,1.3924430227908837,1.3928828468612555,1.3933226709316273,1.3937624950019991,1.3942023190723711,1.394642143142743,1.3950819672131147,1.3955217912834865,1.3959616153538585,1.3964014394242303,1.3968412634946021,1.397281087564974,1.397720911635346,1.3981607357057177,1.3986005597760895,1.3990403838464613,1.3994802079168334,1.3999200319872052,1.400359856057577,1.4007996801279488,1.4012395041983208,1.4016793282686926,1.4021191523390644,1.4025589764094362,1.4029988004798082,1.40343862455018,1.4038784486205518,1.4043182726909236,1.4047580967612954,1.4051979208316674,1.4056377449020392,1.406077568972411,1.4065173930427828,1.4069572171131548,1.4073970411835266,1.4078368652538984,1.4082766893242702,1.4087165133946422,1.409156337465014,1.4095961615353858,1.4100359856057576,1.4104758096761296,1.4109156337465014,1.4113554578168732,1.411795281887245,1.412235105957617,1.4126749300279888,1.4131147540983606,1.4135545781687324,1.4139944022391044,1.4144342263094762,1.414874050379848,1.4153138744502198,1.4157536985205919,1.4161935225909636,1.4166333466613354,1.4170731707317072,1.4175129948020793,1.417952818872451,1.4183926429428229,1.4188324670131947,1.4192722910835667,1.4197121151539385,1.4201519392243103,1.420591763294682,1.421031587365054,1.4214714114354259,1.4219112355057977,1.4223510595761695,1.4227908836465415,1.4232307077169133,1.423670531787285,1.4241103558576569,1.4245501799280287,1.4249900039984007,1.4254298280687725,1.4258696521391443,1.426309476209516,1.426749300279888,1.42718912435026,1.4276289484206317,1.4280687724910035,1.4285085965613755,1.4289484206317473,1.4293882447021191,1.429828068772491,1.430267892842863,1.4307077169132347,1.4311475409836065,1.4315873650539783,1.4320271891243503,1.4324670131947221,1.432906837265094,1.4333466613354657,1.4337864854058378,1.4342263094762095,1.4346661335465813,1.4351059576169531,1.4355457816873252,1.435985605757697,1.4364254298280688,1.4368652538984406,1.4373050779688126,1.4377449020391844,1.4381847261095562,1.438624550179928,1.4390643742503,1.4395041983206718,1.4399440223910436,1.4403838464614154,1.4408236705317874,1.4412634946021592,1.441703318672531,1.4421431427429028,1.4425829668132746,1.4430227908836466,1.4434626149540184,1.4439024390243902,1.444342263094762,1.444782087165134,1.4452219112355058,1.4456617353058776,1.4461015593762494,1.4465413834466214,1.4469812075169932,1.447421031587365,1.4478608556577368,1.4483006797281088,1.4487405037984806,1.4491803278688524,1.4496201519392242,1.4500599760095962,1.450499800079968,1.4509396241503398,1.4513794482207116,1.4518192722910837,1.4522590963614554,1.4526989204318272,1.453138744502199,1.453578568572571,1.4540183926429429,1.4544582167133147,1.4548980407836865,1.4553378648540585,1.4557776889244303,1.456217512994802,1.4566573370651739,1.4570971611355459,1.4575369852059177,1.4579768092762895,1.4584166333466613,1.4588564574170333,1.459296281487405,1.4597361055577769,1.4601759296281487,1.4606157536985207,1.4610555777688925,1.4614954018392643,1.461935225909636,1.462375049980008,1.46281487405038,1.4632546981207517,1.4636945221911235,1.4641343462614953,1.4645741703318673,1.4650139944022391,1.465453818472611,1.4658936425429827,1.4663334666133547,1.4667732906837265,1.4672131147540983,1.4676529388244701,1.4680927628948421,1.468532586965214,1.4689724110355857,1.4694122351059575,1.4698520591763296,1.4702918832467013,1.4707317073170731,1.471171531387445,1.471611355457817,1.4720511795281888,1.4724910035985606,1.4729308276689324,1.4733706517393044,1.4738104758096762,1.474250299880048,1.4746901239504198,1.4751299480207918,1.4755697720911636,1.4760095961615354,1.4764494202319072,1.4768892443022792,1.477329068372651,1.4777688924430228,1.4782087165133946,1.4786485405837666,1.4790883646541384,1.4795281887245102,1.479968012794882,1.4804078368652538,1.4808476609356258,1.4812874850059976,1.4817273090763694,1.4821671331467412,1.4826069572171132,1.483046781287485,1.4834866053578568,1.4839264294282286,1.4843662534986006,1.4848060775689724,1.4852459016393442,1.485685725709716,1.486125549780088,1.4865653738504598,1.4870051979208316,1.4874450219912034,1.4878848460615755,1.4883246701319472,1.488764494202319,1.4892043182726908,1.4896441423430629,1.4900839664134347,1.4905237904838065,1.4909636145541783,1.4914034386245503,1.491843262694922,1.4922830867652939,1.4927229108356657,1.4931627349060377,1.4936025589764095,1.4940423830467813,1.494482207117153,1.494922031187525,1.4953618552578969,1.4958016793282687,1.4962415033986405,1.4966813274690125,1.4971211515393843,1.497560975609756,1.498000799680128,1.4984406237504997,1.4988804478208717,1.4993202718912435,1.4997600959616153,1.500199920031987,1.5006397441023591,1.501079568172731,1.5015193922431027,1.5019592163134745,1.5023990403838465,1.5028388644542183,1.5032786885245901,1.503718512594962,1.504158336665334,1.5045981607357057,1.5050379848060775,1.5054778088764493,1.5059176329468213,1.5063574570171931,1.506797281087565,1.5072371051579367,1.5076769292283088,1.5081167532986806,1.5085565773690524,1.5089964014394242,1.5094362255097962,1.509876049580168,1.5103158736505398,1.5107556977209116,1.5111955217912836,1.5116353458616554,1.5120751699320272,1.512514994002399,1.512954818072771,1.5133946421431428,1.5138344662135146,1.5142742902838864,1.5147141143542584,1.5151539384246302,1.515593762495002,1.5160335865653738,1.5164734106357458,1.5169132347061176,1.5173530587764894,1.5177928828468612,1.518232706917233,1.518672530987605,1.5191123550579768,1.5195521791283486,1.5199920031987204,1.5204318272690924,1.5208716513394642,1.521311475409836,1.5217512994802078,1.5221911235505798,1.5226309476209516,1.5230707716913234,1.5235105957616952,1.5239504198320672,1.524390243902439,1.5248300679728108,1.5252698920431826,1.5257097161135547,1.5261495401839265,1.5265893642542983,1.52702918832467,1.527469012395042,1.5279088364654139,1.5283486605357857,1.5287884846061575,1.5292283086765295,1.5296681327469013,1.530107956817273,1.5305477808876449,1.530987604958017,1.5314274290283887,1.5318672530987605,1.5323070771691323,1.5327469012395043,1.533186725309876,1.533626549380248,1.5340663734506197,1.5345061975209917,1.5349460215913635,1.5353858456617353,1.535825669732107,1.536265493802479,1.536705317872851,1.5371451419432227,1.5375849660135945,1.5380247900839663,1.5384646141543383,1.5389044382247101,1.539344262295082,1.5397840863654537,1.5402239104358257,1.5406637345061975,1.5411035585765693,1.5415433826469411,1.5419832067173131,1.542423030787685,1.5428628548580567,1.5433026789284285,1.5437425029988006,1.5441823270691724,1.5446221511395442,1.545061975209916,1.545501799280288,1.5459416233506598,1.5463814474210316,1.5468212714914034,1.5472610955617754,1.5477009196321472,1.548140743702519,1.5485805677728908,1.5490203918432628,1.5494602159136346,1.5499000399840064,1.5503398640543782,1.5507796881247502,1.551219512195122,1.5516593362654938,1.5520991603358656,1.5525389844062376,1.5529788084766094,1.5534186325469812,1.553858456617353,1.554298280687725,1.5547381047580968,1.5551779288284686,1.5556177528988404,1.5560575769692122,1.5564974010395842,1.556937225109956,1.5573770491803278,1.5578168732506996,1.5582566973210716,1.5586965213914434,1.5591363454618152,1.559576169532187,1.560015993602559,1.5604558176729308,1.5608956417433026,1.5613354658136744,1.5617752898840465,1.5622151139544183,1.56265493802479,1.5630947620951618,1.5635345861655339,1.5639744102359057,1.5644142343062775,1.5648540583766493,1.5652938824470213,1.565733706517393,1.5661735305877649,1.5666133546581367,1.5670531787285087,1.5674930027988805,1.5679328268692523,1.568372650939624,1.568812475009996,1.569252299080368,1.5696921231507397,1.5701319472211115,1.5705717712914835,1.5710115953618553,1.571451419432227,1.571891243502599,1.572331067572971,1.5727708916433427,1.5732107157137145,1.5736505397840863,1.574090363854458,1.5745301879248301,1.574970011995202,1.5754098360655737,1.5758496601359455,1.5762894842063175,1.5767293082766893,1.5771691323470611,1.577608956417433,1.578048780487805,1.5784886045581767,1.5789284286285485,1.5793682526989203,1.5798080767692924,1.5802479008396642,1.580687724910036,1.5811275489804077,1.5815673730507798,1.5820071971211516,1.5824470211915234,1.5828868452618952,1.5833266693322672,1.583766493402639,1.5842063174730108,1.5846461415433826,1.5850859656137546,1.5855257896841264,1.5859656137544982,1.58640543782487,1.586845261895242,1.5872850859656138,1.5877249100359856,1.5881647341063574,1.5886045581767294,1.5890443822471012,1.589484206317473,1.5899240303878448,1.5903638544582168,1.5908036785285886,1.5912435025989604,1.5916833266693322,1.5921231507397042,1.592562974810076,1.5930027988804478,1.5934426229508196,1.5938824470211914,1.5943222710915634,1.5947620951619352,1.595201919232307,1.5956417433026788,1.5960815673730508,1.5965213914434226,1.5969612155137944,1.5974010395841662,1.5978408636545383,1.59828068772491,1.5987205117952819,1.5991603358656536,1.5996001599360257,1.6000399840063975,1.6004798080767693,1.600919632147141,1.601359456217513,1.6017992802878849,1.6022391043582567,1.6026789284286285,1.6031187524990005,1.6035585765693723,1.603998400639744,1.6044382247101159,1.604878048780488,1.6053178728508597,1.6057576969212315,1.6061975209916033,1.6066373450619753,1.607077169132347,1.607516993202719,1.6079568172730907,1.6083966413434627,1.6088364654138345,1.6092762894842063,1.609716113554578,1.6101559376249501,1.610595761695322,1.6110355857656937,1.6114754098360655,1.6119152339064373,1.6123550579768093,1.6127948820471811,1.613234706117553,1.6136745301879247,1.6141143542582967,1.6145541783286685,1.6149940023990403,1.6154338264694121,1.6158736505397842,1.616313474610156,1.6167532986805278,1.6171931227508995,1.6176329468212716,1.6180727708916434,1.6185125949620152,1.618952419032387,1.619392243102759,1.6198320671731308,1.6202718912435026,1.6207117153138744,1.6211515393842464,1.6215913634546182,1.62203118752499,1.6224710115953618,1.6229108356657338,1.6233506597361056,1.6237904838064774,1.6242303078768492,1.6246701319472212,1.625109956017593,1.6255497800879648,1.6259896041583366,1.6264294282287086,1.6268692522990804,1.6273090763694522,1.627748900439824,1.628188724510196,1.6286285485805678,1.6290683726509396,1.6295081967213114,1.6299480207916832,1.6303878448620552,1.630827668932427,1.6312674930027988,1.6317073170731706,1.6321471411435426,1.6325869652139144,1.6330267892842862,1.633466613354658,1.63390643742503,1.6343462614954019,1.6347860855657737,1.6352259096361454,1.6356657337065175,1.6361055577768893,1.636545381847261,1.6369852059176329,1.6374250299880049,1.6378648540583767,1.6383046781287485,1.6387445021991203,1.6391843262694923,1.639624150339864,1.6400639744102359,1.6405037984806077,1.6409436225509797,1.6413834466213515,1.6418232706917233,1.642263094762095,1.642702918832467,1.643142742902839,1.6435825669732107,1.6440223910435825,1.6444622151139545,1.6449020391843263,1.6453418632546981,1.64578168732507,1.646221511395442,1.6466613354658137,1.6471011595361855,1.6475409836065573,1.6479808076769293,1.6484206317473011,1.648860455817673,1.6493002798880447,1.6497401039584165,1.6501799280287885,1.6506197520991603,1.6510595761695321,1.651499400239904,1.651939224310276,1.6523790483806478,1.6528188724510195,1.6532586965213913,1.6536985205917634,1.6541383446621352,1.654578168732507,1.6550179928028788,1.6554578168732508,1.6558976409436226,1.6563374650139944,1.6567772890843662,1.6572171131547382,1.65765693722511,1.6580967612954818,1.6585365853658536,1.6589764094362256,1.6594162335065974,1.6598560575769692,1.660295881647341,1.660735705717713,1.6611755297880848,1.6616153538584566,1.6620551779288284,1.6624950019992004,1.6629348260695722,1.663374650139944,1.6638144742103158,1.6642542982806878,1.6646941223510596,1.6651339464214314,1.6655737704918032,1.6660135945621752,1.666453418632547,1.6668932427029188,1.6673330667732906,1.6677728908436624,1.6682127149140344,1.6686525389844062,1.669092363054778,1.6695321871251498,1.6699720111955219,1.6704118352658937,1.6708516593362654,1.6712914834066372,1.6717313074770093,1.672171131547381,1.6726109556177529,1.6730507796881247,1.6734906037584967,1.6739304278288685,1.6743702518992403,1.674810075969612,1.675249900039984,1.6756897241103559,1.6761295481807277,1.6765693722510995,1.6770091963214715,1.6774490203918433,1.677888844462215,1.6783286685325869,1.678768492602959,1.6792083166733307,1.6796481407437025,1.6800879648140743,1.6805277888844463,1.6809676129548181,1.68140743702519,1.6818472610955617,1.6822870851659337,1.6827269092363055,1.6831667333066773,1.6836065573770491,1.6840463814474211,1.684486205517793,1.6849260295881647,1.6853658536585365,1.6858056777289085,1.6862455017992803,1.6866853258696521,1.687125149940024,1.6875649740103957,1.6880047980807678,1.6884446221511396,1.6888844462215113,1.6893242702918831,1.6897640943622552,1.690203918432627,1.6906437425029988,1.6910835665733706,1.6915233906437426,1.6919632147141144,1.6924030387844862,1.692842862854858,1.69328268692523,1.6937225109956018,1.6941623350659736,1.6946021591363454,1.6950419832067174,1.6954818072770892,1.695921631347461,1.6963614554178328,1.6968012794882048,1.6972411035585766,1.6976809276289484,1.6981207516993202,1.6985605757696922,1.699000399840064,1.6994402239104358,1.6998800479808076,1.7003198720511796,1.7007596961215514,1.7011995201919232,1.701639344262295,1.702079168332667,1.7025189924030388,1.7029588164734106,1.7033986405437824,1.7038384646141544,1.7042782886845262,1.704718112754898,1.7051579368252698,1.7055977608956416,1.7060375849660137,1.7064774090363855,1.7069172331067572,1.707357057177129,1.707796881247501,1.7082367053178729,1.7086765293882447,1.7091163534586165,1.7095561775289885,1.7099960015993603,1.710435825669732,1.7108756497401039,1.7113154738104759,1.7117552978808477,1.7121951219512195,1.7126349460215913,1.7130747700919633,1.713514594162335,1.7139544182327069,1.7143942423030787,1.7148340663734507,1.7152738904438225,1.7157137145141943,1.716153538584566,1.7165933626549381,1.71703318672531,1.7174730107956817,1.7179128348660535,1.7183526589364255,1.7187924830067973,1.7192323070771691,1.719672131147541,1.720111955217913,1.7205517792882847,1.7209916033586565,1.7214314274290283,1.7218712514994003,1.7223110755697721,1.722750899640144,1.7231907237105157,1.7236305477808875,1.7240703718512596,1.7245101959216314,1.7249500199920031,1.725389844062375,1.725829668132747,1.7262694922031188,1.7267093162734906,1.7271491403438624,1.7275889644142344,1.7280287884846062,1.728468612554978,1.7289084366253498,1.7293482606957218,1.7297880847660936,1.7302279088364654,1.7306677329068372,1.7311075569772092,1.731547381047581,1.7319872051179528,1.7324270291883246,1.7328668532586966,1.7333066773290684,1.7337465013994402,1.734186325469812,1.734626149540184,1.7350659736105558,1.7355057976809276,1.7359456217512994,1.7363854458216714,1.7368252698920432,1.737265093962415,1.7377049180327868,1.7381447421031588,1.7385845661735306,1.7390243902439024,1.7394642143142742,1.7399040383846462,1.740343862455018,1.7407836865253898,1.7412235105957616,1.7416633346661337,1.7421031587365055,1.7425429828068772,1.742982806877249,1.7434226309476208,1.7438624550179929,1.7443022790883647,1.7447421031587365,1.7451819272291083,1.7456217512994803,1.746061575369852,1.7465013994402239,1.7469412235105957,1.7473810475809677,1.7478208716513395,1.7482606957217113,1.748700519792083,1.749140343862455,1.749580167932827,1.7500199920031987,1.7504598160735705,1.7508996401439425,1.7513394642143143,1.751779288284686,1.752219112355058,1.75265893642543,1.7530987604958017,1.7535385845661735,1.7539784086365453,1.7544182327069173,1.7548580567772891,1.755297880847661,1.7557377049180327,1.7561775289884047,1.7566173530587765,1.7570571771291483,1.7574970011995201,1.7579368252698921,1.758376649340264,1.7588164734106357,1.7592562974810075,1.7596961215513796,1.7601359456217514,1.7605757696921231,1.761015593762495,1.7614554178328667,1.7618952419032388,1.7623350659736106,1.7627748900439824,1.7632147141143542,1.7636545381847262,1.764094362255098,1.7645341863254698,1.7649740103958416,1.7654138344662136,1.7658536585365854,1.7662934826069572,1.766733306677329,1.767173130747701,1.7676129548180728,1.7680527788884446,1.7684926029588164,1.7689324270291884,1.7693722510995602,1.769812075169932,1.7702518992403038,1.7706917233106758,1.7711315473810476,1.7715713714514194,1.7720111955217912,1.7724510195921632,1.772890843662535,1.7733306677329068,1.7737704918032786,1.7742103158736506,1.7746501399440224,1.7750899640143942,1.775529788084766,1.775969612155138,1.7764094362255098,1.7768492602958816,1.7772890843662534,1.7777289084366255,1.7781687325069973,1.778608556577369,1.7790483806477408,1.7794882047181129,1.7799280287884847,1.7803678528588565,1.7808076769292283,1.7812475009996,1.781687325069972,1.7821271491403439,1.7825669732107157,1.7830067972810875,1.7834466213514595,1.7838864454218313,1.784326269492203,1.7847660935625749,1.785205917632947,1.7856457417033187,1.7860855657736905,1.7865253898440623,1.7869652139144343,1.787405037984806,1.787844862055178,1.7882846861255497,1.7887245101959217,1.7891643342662935,1.7896041583366653,1.790043982407037,1.7904838064774091,1.790923630547781,1.7913634546181527,1.7918032786885245,1.7922431027588965,1.7926829268292683,1.7931227508996401,1.793562574970012,1.794002399040384,1.7944422231107557,1.7948820471811275,1.7953218712514993,1.7957616953218714,1.7962015193922432,1.796641343462615,1.7970811675329867,1.7975209916033588,1.7979608156737306,1.7984006397441024,1.7988404638144742,1.799280287884846,1.799720111955218,1.8001599360255898,1.8005997600959616,1.8010395841663334,1.8014794082367054,1.8019192323070772,1.802359056377449,1.8027988804478208,1.8032387045181928,1.8036785285885646,1.8041183526589364,1.8045581767293082,1.8049980007996802,1.805437824870052,1.8058776489404238,1.8063174730107956,1.8067572970811676,1.8071971211515394,1.8076369452219112,1.808076769292283,1.808516593362655,1.8089564174330268,1.8093962415033986,1.8098360655737704,1.8102758896441424,1.8107157137145142,1.811155537784886,1.8115953618552578,1.8120351859256298,1.8124750099960016,1.8129148340663734,1.8133546581367452,1.8137944822071173,1.814234306277489,1.8146741303478608,1.8151139544182326,1.8155537784886047,1.8159936025589765,1.8164334266293483,1.81687325069972,1.817313074770092,1.8177528988404639,1.8181927229108357,1.8186325469812075,1.8190723710515793,1.8195121951219513,1.819952019192323,1.8203918432626949,1.8208316673330667,1.8212714914034387,1.8217113154738105,1.8221511395441823,1.822590963614554,1.823030787684926,1.823470611755298,1.8239104358256697,1.8243502598960415,1.8247900839664135,1.8252299080367853,1.825669732107157,1.826109556177529,1.826549380247901,1.8269892043182727,1.8274290283886445,1.8278688524590163,1.8283086765293883,1.8287485005997601,1.829188324670132,1.8296281487405037,1.8300679728108757,1.8305077968812475,1.8309476209516193,1.8313874450219911,1.8318272690923632,1.832267093162735,1.8327069172331067,1.8331467413034785,1.8335865653738506,1.8340263894442224,1.8344662135145942,1.834906037584966,1.835345861655338,1.8357856857257098,1.8362255097960816,1.8366653338664534,1.8371051579368252,1.8375449820071972,1.837984806077569,1.8384246301479408,1.8388644542183126,1.8393042782886846,1.8397441023590564,1.8401839264294282,1.8406237504998,1.841063574570172,1.8415033986405438,1.8419432227109156,1.8423830467812874,1.8428228708516594,1.8432626949220312,1.843702518992403,1.8441423430627748,1.8445821671331468,1.8450219912035186,1.8454618152738904,1.8459016393442622,1.8463414634146342,1.846781287485006,1.8472211115553778,1.8476609356257496,1.8481007596961216,1.8485405837664934,1.8489804078368652,1.849420231907237,1.849860055977609,1.8502998800479808,1.8507397041183526,1.8511795281887244,1.8516193522590965,1.8520591763294683,1.85249900039984,1.8529388244702119,1.8533786485405839,1.8538184726109557,1.8542582966813275,1.8546981207516993,1.855137944822071,1.855577768892443,1.8560175929628149,1.8564574170331867,1.8568972411035585,1.8573370651739305,1.8577768892443023,1.858216713314674,1.8586565373850459,1.859096361455418,1.8595361855257897,1.8599760095961615,1.8604158336665333,1.8608556577369053,1.861295481807277,1.861735305877649,1.8621751299480207,1.8626149540183927,1.8630547780887645,1.8634946021591363,1.8639344262295081,1.8643742502998801,1.864814074370252,1.8652538984406237,1.8656937225109955,1.8661335465813675,1.8665733706517393,1.8670131947221111,1.867453018792483,1.867892842862855,1.8683326669332267,1.8687724910035985,1.8692123150739703,1.8696521391443424,1.8700919632147142,1.870531787285086,1.8709716113554578,1.8714114354258298,1.8718512594962016,1.8722910835665734,1.8727309076369452,1.8731707317073172,1.873610555777689,1.8740503798480608,1.8744902039184326,1.8749300279888044,1.8753698520591764,1.8758096761295482,1.87624950019992,1.8766893242702918,1.8771291483406638,1.8775689724110356,1.8780087964814074,1.8784486205517792,1.8788884446221512,1.879328268692523,1.8797680927628948,1.8802079168332666,1.8806477409036386,1.8810875649740104,1.8815273890443822,1.881967213114754,1.882407037185126,1.8828468612554978,1.8832866853258696,1.8837265093962414,1.8841663334666134,1.8846061575369852,1.885045981607357,1.8854858056777288,1.8859256297481009,1.8863654538184726,1.8868052778888444,1.8872451019592162,1.8876849260295883,1.88812475009996,1.8885645741703319,1.8890043982407037,1.8894442223110757,1.8898840463814475,1.8903238704518193,1.890763694522191,1.891203518592563,1.8916433426629349,1.8920831667333067,1.8925229908036785,1.8929628148740503,1.8934026389444223,1.893842463014794,1.8942822870851659,1.8947221111555377,1.8951619352259097,1.8956017592962815,1.8960415833666533,1.896481407437025,1.896921231507397,1.897361055577769,1.8978008796481407,1.8982407037185125,1.8986805277888845,1.8991203518592563,1.8995601759296281,1.9,1.900439824070372,1.9008796481407437,1.9013194722111155,1.9017592962814873,1.9021991203518593,1.9026389444222311,1.903078768492603,1.9035185925629747,1.9039584166333468,1.9043982407037185,1.9048380647740903,1.9052778888444621,1.9057177129148342,1.906157536985206,1.9065973610555778,1.9070371851259496,1.9074770091963216,1.9079168332666934,1.9083566573370652,1.908796481407437,1.909236305477809,1.9096761295481808,1.9101159536185526,1.9105557776889244,1.9109956017592964,1.9114354258296682,1.91187524990004,1.9123150739704118,1.9127548980407836,1.9131947221111556,1.9136345461815274,1.9140743702518992,1.914514194322271,1.914954018392643,1.9153938424630148,1.9158336665333866,1.9162734906037584,1.9167133146741304,1.9171531387445022,1.917592962814874,1.9180327868852458,1.9184726109556178,1.9189124350259896,1.9193522590963614,1.9197920831667332,1.9202319072371052,1.920671731307477,1.9211115553778488,1.9215513794482206,1.9219912035185927,1.9224310275889644,1.9228708516593362,1.923310675729708,1.92375049980008,1.9241903238704519,1.9246301479408237,1.9250699720111955,1.9255097960815675,1.9259496201519393,1.926389444222311,1.9268292682926829,1.9272690923630549,1.9277089164334267,1.9281487405037985,1.9285885645741703,1.9290283886445423,1.929468212714914,1.9299080367852859,1.9303478608556577,1.9307876849260295,1.9312275089964015,1.9316673330667733,1.932107157137145,1.932546981207517,1.932986805277889,1.9334266293482607,1.9338664534186325,1.9343062774890043,1.9347461015593763,1.9351859256297481,1.93562574970012,1.9360655737704917,1.9365053978408637,1.9369452219112355,1.9373850459816073,1.9378248700519791,1.9382646941223511,1.938704518192723,1.9391443422630947,1.9395841663334665,1.9400239904038385,1.9404638144742103,1.9409036385445821,1.941343462614954,1.941783286685326,1.9422231107556978,1.9426629348260696,1.9431027588964414,1.9435425829668134,1.9439824070371852,1.944422231107557,1.9448620551779288,1.9453018792483008,1.9457417033186726,1.9461815273890444,1.9466213514594162,1.9470611755297882,1.94750099960016,1.9479408236705318,1.9483806477409036,1.9488204718112754,1.9492602958816474,1.9497001199520192,1.950139944022391,1.9505797680927628,1.9510195921631348,1.9514594162335066,1.9518992403038784,1.9523390643742502,1.9527788884446222,1.953218712514994,1.9536585365853658,1.9540983606557376,1.9545381847261096,1.9549780087964814,1.9554178328668532,1.955857656937225,1.956297481007597,1.9567373050779688,1.9571771291483406,1.9576169532187124,1.9580567772890844,1.9584966013594562,1.958936425429828,1.9593762495001998,1.9598160735705719,1.9602558976409437,1.9606957217113155,1.9611355457816873,1.9615753698520593,1.962015193922431,1.9624550179928029,1.9628948420631747,1.9633346661335467,1.9637744902039185,1.9642143142742903,1.964654138344662,1.965093962415034,1.9655337864854059,1.9659736105557777,1.9664134346261495,1.9668532586965215,1.9672930827668933,1.967732906837265,1.968172730907637,1.9686125549780087,1.9690523790483807,1.9694922031187525,1.9699320271891243,1.970371851259496,1.9708116753298681,1.97125149940024,1.9716913234706117,1.9721311475409835,1.9725709716113555,1.9730107956817273,1.9734506197520991,1.973890443822471,1.974330267892843,1.9747700919632147,1.9752099160335865,1.9756497401039583,1.9760895641743303,1.9765293882447021,1.976969212315074,1.9774090363854457,1.9778488604558178,1.9782886845261896,1.9787285085965614,1.9791683326669331,1.9796081567373052,1.980047980807677,1.9804878048780488,1.9809276289484206,1.9813674530187926,1.9818072770891644,1.9822471011595362,1.982686925229908,1.98312674930028,1.9835665733706518,1.9840063974410236,1.9844462215113954,1.9848860455817674,1.9853258696521392,1.985765693722511,1.9862055177928828,1.9866453418632546,1.9870851659336266,1.9875249900039984,1.9879648140743702,1.988404638144742,1.988844462215114,1.9892842862854858,1.9897241103558576,1.9901639344262294,1.9906037584966014,1.9910435825669732,1.991483406637345,1.9919232307077168,1.9923630547780888,1.9928028788484606,1.9932427029188324,1.9936825269892042,1.9941223510595762,1.994562175129948,1.9950019992003198,1.9954418232706916,1.9958816473410637,1.9963214714114355,1.9967612954818073,1.997201119552179,1.997640943622551,1.9980807676929229,1.9985205917632947,1.9989604158336665,1.9994002399040385,1.9998400639744103,2.000279888044782,2.000719712115154,2.0011595361855257,2.0015993602558977,2.0020391843262697,2.0024790083966413,2.0029188324670133,2.003358656537385,2.003798480607757,2.004238304678129,2.0046781287485005,2.0051179528188725,2.005557776889244,2.005997600959616,2.006437425029988,2.0068772491003597,2.0073170731707317,2.0077568972411037,2.0081967213114753,2.0086365453818473,2.009076369452219,2.009516193522591,2.009956017592963,2.0103958416633345,2.0108356657337065,2.0112754898040786,2.01171531387445,2.012155137944822,2.0125949620151937,2.0130347860855657,2.0134746101559378,2.0139144342263093,2.0143542582966814,2.0147940823670534,2.015233906437425,2.015673730507797,2.0161135545781685,2.0165533786485406,2.0169932027189126,2.017433026789284,2.017872850859656,2.018312674930028,2.0187524990003998,2.019192323070772,2.0196321471411434,2.0200719712115154,2.0205117952818874,2.020951619352259,2.021391443422631,2.021831267493003,2.0222710915633746,2.0227109156337466,2.023150739704118,2.02359056377449,2.0240303878448622,2.024470211915234,2.024910035985606,2.0253498600559774,2.0257896841263494,2.0262295081967214,2.026669332267093,2.027109156337465,2.027548980407837,2.0279888044782086,2.0284286285485806,2.028868452618952,2.0293082766893242,2.0297481007596962,2.030187924830068,2.03062774890044,2.031067572970812,2.0315073970411834,2.0319472211115555,2.032387045181927,2.032826869252299,2.033266693322671,2.0337065173930426,2.0341463414634147,2.0345861655337867,2.0350259896041583,2.0354658136745303,2.035905637744902,2.036345461815274,2.036785285885646,2.0372251099560175,2.0376649340263895,2.0381047580967615,2.038544582167133,2.038984406237505,2.0394242303078767,2.0398640543782487,2.0403038784486207,2.0407437025189923,2.0411835265893643,2.0416233506597363,2.042063174730108,2.04250299880048,2.0429428228708515,2.0433826469412235,2.0438224710115955,2.044262295081967,2.044702119152339,2.0451419432227107,2.0455817672930827,2.0460215913634547,2.0464614154338263,2.0469012395041983,2.0473410635745704,2.047780887644942,2.048220711715314,2.0486605357856855,2.0491003598560575,2.0495401839264296,2.049980007996801,2.050419832067173,2.050859656137545,2.0512994802079167,2.0517393042782888,2.0521791283486603,2.0526189524190324,2.0530587764894044,2.053498600559776,2.053938424630148,2.05437824870052,2.0548180727708916,2.0552578968412636,2.055697720911635,2.056137544982007,2.056577369052379,2.0570171931227508,2.057457017193123,2.057896841263495,2.0583366653338664,2.0587764894042384,2.05921631347461,2.059656137544982,2.060095961615354,2.0605357856857256,2.0609756097560976,2.0614154338264696,2.061855257896841,2.0622950819672132,2.062734906037585,2.063174730107957,2.063614554178329,2.0640543782487004,2.0644942023190724,2.064934026389444,2.065373850459816,2.065813674530188,2.0662534986005596,2.0666933226709316,2.0671331467413037,2.0675729708116752,2.0680127948820473,2.068452618952419,2.068892443022791,2.069332267093163,2.0697720911635344,2.0702119152339065,2.0706517393042785,2.07109156337465,2.071531387445022,2.0719712115153937,2.0724110355857657,2.0728508596561377,2.0732906837265093,2.0737305077968813,2.0741703318672533,2.074610155937625,2.075049980007997,2.0754898040783685,2.0759296281487405,2.0763694522191125,2.076809276289484,2.077249100359856,2.077688924430228,2.0781287485005997,2.0785685725709717,2.0790083966413433,2.0794482207117153,2.0798880447820873,2.080327868852459,2.080767692922831,2.0812075169932025,2.0816473410635745,2.0820871651339465,2.082526989204318,2.08296681327469,2.083406637345062,2.0838464614154337,2.0842862854858057,2.0847261095561773,2.0851659336265493,2.0856057576969214,2.086045581767293,2.086485405837665,2.086925229908037,2.0873650539784085,2.0878048780487806,2.088244702119152,2.088684526189524,2.089124350259896,2.0895641743302678,2.0900039984006398,2.090443822471012,2.0908836465413834,2.0913234706117554,2.091763294682127,2.092203118752499,2.092642942822871,2.0930827668932426,2.0935225909636146,2.0939624150339866,2.094402239104358,2.09484206317473,2.095281887245102,2.095721711315474,2.096161535385846,2.0966013594562174,2.0970411835265894,2.0974810075969614,2.097920831667333,2.098360655737705,2.0988004798080766,2.0992403038784486,2.0996801279488206,2.100119952019192,2.1005597760895642,2.100999600159936,2.101439424230308,2.10187924830068,2.1023190723710514,2.1027588964414234,2.1031987205117955,2.103638544582167,2.104078368652539,2.1045181927229106,2.1049580167932826,2.1053978408636547,2.1058376649340262,2.1062774890043983,2.1067173130747703,2.107157137145142,2.107596961215514,2.1080367852858855,2.1084766093562575,2.1089164334266295,2.109356257497001,2.109796081567373,2.110235905637745,2.1106757297081167,2.1111155537784887,2.1115553778488603,2.1119952019192323,2.1124350259896043,2.112874850059976,2.113314674130348,2.11375449820072,2.1141943222710915,2.1146341463414635,2.115073970411835,2.115513794482207,2.115953618552579,2.1163934426229507,2.1168332666933227,2.1172730907636947,2.1177129148340663,2.1181527389044383,2.11859256297481,2.119032387045182,2.119472211115554,2.1199120351859255,2.1203518592562975,2.120791683326669,2.121231507397041,2.121671331467413,2.1221111555377847,2.1225509796081568,2.1229908036785288,2.1234306277489003,2.1238704518192724,2.124310275889644,2.124750099960016,2.125189924030388,2.1256297481007596,2.1260695721711316,2.1265093962415036,2.126949220311875,2.127389044382247,2.1278288684526188,2.128268692522991,2.128708516593363,2.1291483406637344,2.1295881647341064,2.1300279888044784,2.13046781287485,2.130907636945222,2.1313474610155936,2.1317872850859656,2.1322271091563376,2.132666933226709,2.133106757297081,2.1335465813674532,2.133986405437825,2.134426229508197,2.1348660535785684,2.1353058776489404,2.1357457017193124,2.136185525789684,2.136625349860056,2.1370651739304276,2.1375049980007996,2.1379448220711716,2.138384646141543,2.1388244702119152,2.1392642942822873,2.139704118352659,2.140143942423031,2.1405837664934024,2.1410235905637744,2.1414634146341465,2.141903238704518,2.14234306277489,2.142782886845262,2.1432227109156337,2.1436625349860057,2.1441023590563772,2.1445421831267493,2.1449820071971213,2.145421831267493,2.145861655337865,2.146301479408237,2.1467413034786085,2.1471811275489805,2.147620951619352,2.148060775689724,2.148500599760096,2.1489404238304677,2.1493802479008397,2.1498200719712117,2.1502598960415833,2.1506997201119553,2.151139544182327,2.151579368252699,2.152019192323071,2.1524590163934425,2.1528988404638145,2.1533386645341865,2.153778488604558,2.15421831267493,2.1546581367453017,2.1550979608156737,2.1555377848860457,2.1559776089564173,2.1564174330267893,2.156857257097161,2.157297081167533,2.157736905237905,2.1581767293082765,2.1586165533786486,2.1590563774490206,2.159496201519392,2.159936025589764,2.1603758496601357,2.1608156737305078,2.1612554978008798,2.1616953218712514,2.1621351459416234,2.1625749700119954,2.163014794082367,2.163454618152739,2.1638944422231106,2.1643342662934826,2.1647740903638546,2.165213914434226,2.165653738504598,2.16609356257497,2.166533386645342,2.166973210715714,2.1674130347860854,2.1678528588564574,2.1682926829268294,2.168732506997201,2.169172331067573,2.169612155137945,2.1700519792083166,2.1704918032786886,2.17093162734906,2.171371451419432,2.1718112754898042,2.172251099560176,2.172690923630548,2.17313074770092,2.1735705717712914,2.1740103958416634,2.174450219912035,2.174890043982407,2.175329868052779,2.1757696921231506,2.1762095161935227,2.1766493402638942,2.1770891643342662,2.1775289884046383,2.17796881247501,2.178408636545382,2.178848460615754,2.1792882846861255,2.1797281087564975,2.180167932826869,2.180607756897241,2.181047580967613,2.1814874050379847,2.1819272291083567,2.1823670531787287,2.1828068772491003,2.1832467013194723,2.183686525389844,2.184126349460216,2.184566173530588,2.1850059976009595,2.1854458216713315,2.1858856457417035,2.186325469812075,2.186765293882447,2.1872051179528187,2.1876449420231907,2.1880847660935627,2.1885245901639343,2.1889644142343063,2.1894042383046783,2.18984406237505,2.190283886445422,2.1907237105157935,2.1911635345861655,2.1916033586565375,2.192043182726909,2.192483006797281,2.1929228308676527,2.1933626549380247,2.1938024790083968,2.1942423030787683,2.1946821271491403,2.1951219512195124,2.195561775289884,2.196001599360256,2.1964414234306275,2.1968812475009996,2.1973210715713716,2.197760895641743,2.198200719712115,2.198640543782487,2.1990803678528588,2.199520191923231,2.1999600159936024,2.2003998400639744,2.2008396641343464,2.201279488204718,2.20171931227509,2.202159136345462,2.2025989604158336,2.2030387844862056,2.203478608556577,2.203918432626949,2.204358256697321,2.204798080767693,2.205237904838065,2.205677728908437,2.2061175529788084,2.2065573770491804,2.206997201119552,2.207437025189924,2.207876849260296,2.2083166733306676,2.2087564974010396,2.2091963214714117,2.2096361455417832,2.2100759696121552,2.210515793682527,2.210955617752899,2.211395441823271,2.2118352658936424,2.2122750899640145,2.212714914034386,2.213154738104758,2.21359456217513,2.2140343862455016,2.2144742103158737,2.2149140343862457,2.2153538584566173,2.2157936825269893,2.216233506597361,2.216673330667733,2.217113154738105,2.2175529788084765,2.2179928028788485,2.2184326269492205,2.218872451019592,2.219312275089964,2.2197520991603357,2.2201919232307077,2.2206317473010797,2.2210715713714513,2.2215113954418233,2.2219512195121953,2.222391043582567,2.222830867652939,2.2232706917233105,2.2237105157936825,2.2241503398640545,2.224590163934426,2.225029988004798,2.22546981207517,2.2259096361455417,2.2263494602159137,2.2267892842862853,2.2272291083566573,2.2276689324270293,2.228108756497401,2.228548580567773,2.228988404638145,2.2294282287085165,2.2298680527788886,2.23030787684926,2.230747700919632,2.231187524990004,2.2316273490603757,2.2320671731307478,2.2325069972011193,2.2329468212714914,2.2333866453418634,2.233826469412235,2.234266293482607,2.234706117552979,2.2351459416233506,2.2355857656937226,2.236025589764094,2.236465413834466,2.236905237904838,2.2373450619752098,2.237784886045582,2.238224710115954,2.2386645341863254,2.2391043582566974,2.239544182327069,2.239984006397441,2.240423830467813,2.2408636545381846,2.2413034786085566,2.2417433026789286,2.2421831267493,2.2426229508196722,2.243062774890044,2.243502598960416,2.243942423030788,2.2443822471011594,2.2448220711715314,2.2452618952419034,2.245701719312275,2.246141543382647,2.2465813674530186,2.2470211915233906,2.2474610155937627,2.2479008396641342,2.2483406637345063,2.2487804878048783,2.24922031187525,2.249660135945622,2.2500999600159934,2.2505397840863655,2.2509796081567375,2.251419432227109,2.251859256297481,2.2522990803678526,2.2527389044382247,2.2531787285085967,2.2536185525789683,2.2540583766493403,2.2544982007197123,2.254938024790084,2.255377848860456,2.2558176729308275,2.2562574970011995,2.2566973210715715,2.257137145141943,2.257576969212315,2.258016793282687,2.2584566173530587,2.2588964414234307,2.2593362654938023,2.2597760895641743,2.2602159136345463,2.260655737704918,2.26109556177529,2.261535385845662,2.2619752099160335,2.2624150339864055,2.262854858056777,2.263294682127149,2.263734506197521,2.2641743302678927,2.2646141543382647,2.2650539784086368,2.2654938024790083,2.2659336265493804,2.266373450619752,2.266813274690124,2.267253098760496,2.2676929228308675,2.2681327469012396,2.268572570971611,2.269012395041983,2.269452219112355,2.2698920431827267,2.2703318672530988,2.270771691323471,2.2712115153938424,2.2716513394642144,2.272091163534586,2.272530987604958,2.27297081167533,2.2734106357457016,2.2738504598160736,2.2742902838864456,2.274730107956817,2.275169932027189,2.2756097560975608,2.276049580167933,2.276489404238305,2.2769292283086764,2.2773690523790484,2.2778088764494204,2.278248700519792,2.278688524590164,2.2791283486605356,2.2795681727309076,2.2800079968012796,2.280447820871651,2.2808876449420232,2.2813274690123952,2.281767293082767,2.282207117153139,2.2826469412235104,2.2830867652938824,2.2835265893642545,2.283966413434626,2.284406237504998,2.28484606157537,2.2852858856457416,2.2857257097161137,2.2861655337864852,2.2866053578568573,2.2870451819272293,2.287485005997601,2.287924830067973,2.2883646541383444,2.2888044782087165,2.2892443022790885,2.28968412634946,2.290123950419832,2.290563774490204,2.2910035985605757,2.2914434226309477,2.2918832467013193,2.2923230707716913,2.2927628948420633,2.293202718912435,2.293642542982807,2.294082367053179,2.2945221911235505,2.2949620151939225,2.295401839264294,2.295841663334666,2.296281487405038,2.2967213114754097,2.2971611355457817,2.2976009596161537,2.2980407836865253,2.2984806077568973,2.298920431827269,2.299360255897641,2.299800079968013,2.3002399040383845,2.3006797281087565,2.3011195521791286,2.3015593762495,2.301999200319872,2.3024390243902437,2.3028788484606157,2.3033186725309878,2.3037584966013593,2.3041983206717314,2.3046381447421034,2.305077968812475,2.305517792882847,2.3059576169532185,2.3063974410235906,2.3068372650939626,2.307277089164334,2.307716913234706,2.3081567373050778,2.3085965613754498,2.309036385445822,2.3094762095161934,2.3099160335865654,2.3103558576569374,2.310795681727309,2.311235505797681,2.3116753298680526,2.3121151539384246,2.3125549780087966,2.312994802079168,2.31343462614954,2.3138744502199122,2.314314274290284,2.314754098360656,2.3151939224310274,2.3156337465013994,2.3160735705717714,2.316513394642143,2.316953218712515,2.317393042782887,2.3178328668532586,2.3182726909236306,2.318712514994002,2.3191523390643742,2.3195921631347463,2.320031987205118,2.32047181127549,2.320911635345862,2.3213514594162334,2.3217912834866055,2.322231107556977,2.322670931627349,2.323110755697721,2.3235505797680926,2.3239904038384647,2.3244302279088362,2.3248700519792083,2.3253098760495803,2.325749700119952,2.326189524190324,2.326629348260696,2.3270691723310675,2.3275089964014395,2.327948820471811,2.328388644542183,2.328828468612555,2.3292682926829267,2.3297081167532987,2.3301479408236707,2.3305877648940423,2.3310275889644143,2.331467413034786,2.331907237105158,2.33234706117553,2.3327868852459015,2.3332267093162735,2.3336665333866455,2.334106357457017,2.334546181527389,2.3349860055977607,2.3354258296681327,2.3358656537385047,2.3363054778088763,2.3367453018792483,2.3371851259496204,2.337624950019992,2.338064774090364,2.3385045981607355,2.3389444222311075,2.3393842463014796,2.339824070371851,2.340263894442223,2.340703718512595,2.3411435425829668,2.3415833666533388,2.3420231907237103,2.3424630147940824,2.3429028388644544,2.343342662934826,2.343782487005198,2.3442223110755696,2.3446621351459416,2.3451019592163136,2.345541783286685,2.345981607357057,2.346421431427429,2.346861255497801,2.347301079568173,2.3477409036385444,2.3481807277089164,2.3486205517792884,2.34906037584966,2.349500199920032,2.349940023990404,2.3503798480607756,2.3508196721311476,2.351259496201519,2.351699320271891,2.3521391443422632,2.352578968412635,2.353018792483007,2.353458616553379,2.3538984406237504,2.3543382646941224,2.354778088764494,2.355217912834866,2.355657736905238,2.3560975609756096,2.3565373850459816,2.3569772091163537,2.3574170331867252,2.3578568572570973,2.358296681327469,2.358736505397841,2.359176329468213,2.3596161535385844,2.3600559776089565,2.3604958016793285,2.3609356257497,2.361375449820072,2.3618152738904437,2.3622550979608157,2.3626949220311877,2.3631347461015593,2.3635745701719313,2.364014394242303,2.364454218312675,2.364894042383047,2.3653338664534185,2.3657736905237905,2.3662135145941625,2.366653338664534,2.367093162734906,2.3675329868052777,2.3679728108756497,2.3684126349460217,2.3688524590163933,2.3692922830867653,2.3697321071571373,2.370171931227509,2.370611755297881,2.3710515793682525,2.3714914034386245,2.3719312275089965,2.372371051579368,2.37281087564974,2.373250699720112,2.3736905237904837,2.3741303478608557,2.3745701719312273,2.3750099960015993,2.3754498200719714,2.375889644142343,2.376329468212715,2.376769292283087,2.3772091163534586,2.3776489404238306,2.378088764494202,2.378528588564574,2.378968412634946,2.3794082367053178,2.3798480607756898,2.380287884846062,2.3807277089164334,2.3811675329868054,2.381607357057177,2.382047181127549,2.382487005197921,2.3829268292682926,2.3833666533386646,2.383806477409036,2.384246301479408,2.38468612554978,2.385125949620152,2.385565773690524,2.386005597760896,2.3864454218312674,2.3868852459016394,2.387325069972011,2.387764894042383,2.388204718112755,2.3886445421831266,2.3890843662534986,2.3895241903238706,2.389964014394242,2.3904038384646142,2.390843662534986,2.391283486605358,2.39172331067573,2.3921631347461014,2.3926029588164734,2.3930427828868455,2.393482606957217,2.393922431027589,2.3943622550979606,2.3948020791683327,2.3952419032387047,2.3956817273090762,2.3961215513794483,2.3965613754498203,2.397001199520192,2.397441023590564,2.3978808476609355,2.3983206717313075,2.3987604958016795,2.399200319872051,2.399640143942423,2.4000799680127947,2.4005197920831667,2.4009596161535387,2.4013994402239103,2.4018392642942823,2.4022790883646543,2.402718912435026,2.403158736505398,2.4035985605757695,2.4040383846461415,2.4044782087165135,2.404918032786885,2.405357856857257,2.405797680927629,2.4062375049980007,2.4066773290683727,2.4071171531387443,2.4075569772091163,2.4079968012794883,2.40843662534986,2.408876449420232,2.409316273490604,2.4097560975609755,2.4101959216313475,2.410635745701719,2.411075569772091,2.411515393842463,2.4119552179128347,2.4123950419832068,2.4128348660535788,2.4132746901239504,2.4137145141943224,2.414154338264694,2.414594162335066,2.415033986405438,2.4154738104758096,2.4159136345461816,2.4163534586165536,2.416793282686925,2.417233106757297,2.4176729308276688,2.418112754898041,2.418552578968413,2.4189924030387844,2.4194322271091564,2.419872051179528,2.4203118752499,2.420751699320272,2.4211915233906436,2.4216313474610156,2.4220711715313876,2.422510995601759,2.422950819672131,2.423390643742503,2.423830467812875,2.424270291883247,2.4247101159536184,2.4251499400239904,2.4255897640943624,2.426029588164734,2.426469412235106,2.4269092363054776,2.4273490603758496,2.4277888844462217,2.4282287085165932,2.4286685325869652,2.4291083566573373,2.429548180727709,2.429988004798081,2.4304278288684524,2.4308676529388245,2.4313074770091965,2.431747301079568,2.43218712514994,2.432626949220312,2.4330667732906837,2.4335065973610557,2.4339464214314273,2.4343862455017993,2.4348260695721713,2.435265893642543,2.435705717712915,2.436145541783287,2.4365853658536585,2.4370251899240305,2.437465013994402,2.437904838064774,2.438344662135146,2.4387844862055177,2.4392243102758897,2.4396641343462613,2.4401039584166333,2.4405437824870053,2.440983606557377,2.441423430627749,2.441863254698121,2.4423030787684925,2.4427429028388645,2.443182726909236,2.443622550979608,2.44406237504998,2.4445021991203517,2.4449420231907237,2.4453818472610958,2.4458216713314673,2.4462614954018393,2.446701319472211,2.447141143542583,2.447580967612955,2.4480207916833265,2.4484606157536986,2.4489004398240706,2.449340263894442,2.449780087964814,2.4502199120351857,2.4506597361055578,2.45109956017593,2.4515393842463014,2.4519792083166734,2.4524190323870454,2.452858856457417,2.453298680527789,2.4537385045981606,2.4541783286685326,2.4546181527389046,2.455057976809276,2.455497800879648,2.4559376249500198,2.456377449020392,2.456817273090764,2.4572570971611354,2.4576969212315074,2.4581367453018794,2.458576569372251,2.459016393442623,2.4594562175129946,2.4598960415833666,2.4603358656537386,2.46077568972411,2.4612155137944822,2.4616553378648542,2.462095161935226,2.462534986005598,2.4629748100759694,2.4634146341463414,2.4638544582167135,2.464294282287085,2.464734106357457,2.465173930427829,2.4656137544982006,2.4660535785685727,2.4664934026389442,2.4669332267093163,2.4673730507796883,2.46781287485006,2.468252698920432,2.468692522990804,2.4691323470611755,2.4695721711315475,2.470011995201919,2.470451819272291,2.470891643342663,2.4713314674130347,2.4717712914834067,2.4722111155537787,2.4726509396241503,2.4730907636945223,2.473530587764894,2.473970411835266,2.474410235905638,2.4748500599760095,2.4752898840463815,2.475729708116753,2.476169532187125,2.476609356257497,2.4770491803278687,2.4774890043982407,2.4779288284686127,2.4783686525389843,2.4788084766093563,2.479248300679728,2.4796881247501,2.480127948820472,2.4805677728908435,2.4810075969612155,2.4814474210315876,2.481887245101959,2.482327069172331,2.4827668932427027,2.4832067173130747,2.4836465413834468,2.4840863654538183,2.4845261895241904,2.4849660135945624,2.485405837664934,2.485845661735306,2.4862854858056775,2.4867253098760496,2.4871651339464216,2.487604958016793,2.488044782087165,2.488484606157537,2.4889244302279088,2.489364254298281,2.4898040783686524,2.4902439024390244,2.4906837265093964,2.491123550579768,2.49156337465014,2.492003198720512,2.4924430227908836,2.4928828468612556,2.493322670931627,2.493762495001999,2.494202319072371,2.494642143142743,2.495081967213115,2.4955217912834864,2.4959616153538584,2.4964014394242304,2.496841263494602,2.497281087564974,2.497720911635346,2.4981607357057176,2.4986005597760896,2.499040383846461,2.4994802079168332,2.4999200319872052,2.500359856057577,2.500799680127949,2.501239504198321,2.5016793282686924,2.5021191523390645,2.502558976409436,2.502998800479808,2.50343862455018,2.5038784486205516,2.5043182726909237,2.5047580967612957,2.5051979208316673,2.5056377449020393,2.506077568972411,2.506517393042783,2.506957217113155,2.5073970411835265,2.5078368652538985,2.5082766893242705,2.508716513394642,2.509156337465014,2.5095961615353857,2.5100359856057577,2.5104758096761297,2.5109156337465013,2.5113554578168733,2.5117952818872453,2.512235105957617,2.512674930027989,2.5131147540983605,2.5135545781687325,2.5139944022391045,2.514434226309476,2.514874050379848,2.5153138744502197,2.5157536985205917,2.5161935225909637,2.5166333466613353,2.5170731707317073,2.5175129948020794,2.517952818872451,2.518392642942823,2.5188324670131945,2.5192722910835665,2.5197121151539386,2.52015193922431,2.520591763294682,2.521031587365054,2.5214714114354257,2.5219112355057978,2.5223510595761693,2.5227908836465414,2.5232307077169134,2.523670531787285,2.524110355857657,2.524550179928029,2.5249900039984006,2.5254298280687726,2.525869652139144,2.526309476209516,2.526749300279888,2.5271891243502598,2.527628948420632,2.528068772491004,2.5285085965613754,2.5289484206317474,2.529388244702119,2.529828068772491,2.530267892842863,2.5307077169132346,2.5311475409836066,2.531587365053978,2.53202718912435,2.5324670131947222,2.532906837265094,2.533346661335466,2.533786485405838,2.5342263094762094,2.5346661335465814,2.535105957616953,2.535545781687325,2.535985605757697,2.5364254298280686,2.5368652538984406,2.5373050779688127,2.5377449020391842,2.5381847261095563,2.538624550179928,2.5390643742503,2.539504198320672,2.5399440223910434,2.5403838464614155,2.5408236705317875,2.541263494602159,2.541703318672531,2.5421431427429027,2.5425829668132747,2.5430227908836467,2.5434626149540183,2.5439024390243903,2.5443422630947623,2.544782087165134,2.545221911235506,2.5456617353058775,2.5461015593762495,2.5465413834466215,2.546981207516993,2.547421031587365,2.547860855657737,2.5483006797281087,2.5487405037984807,2.5491803278688523,2.5496201519392243,2.5500599760095963,2.550499800079968,2.55093962415034,2.5513794482207115,2.5518192722910835,2.5522590963614555,2.552698920431827,2.553138744502199,2.553578568572571,2.5540183926429427,2.5544582167133147,2.5548980407836863,2.5553378648540583,2.5557776889244304,2.556217512994802,2.556657337065174,2.557097161135546,2.5575369852059175,2.5579768092762896,2.558416633346661,2.558856457417033,2.559296281487405,2.5597361055577768,2.5601759296281488,2.560615753698521,2.5610555777688924,2.5614954018392644,2.561935225909636,2.562375049980008,2.56281487405038,2.5632546981207516,2.5636945221911236,2.5641343462614956,2.564574170331867,2.565013994402239,2.565453818472611,2.565893642542983,2.566333466613355,2.5667732906837264,2.5672131147540984,2.5676529388244704,2.568092762894842,2.568532586965214,2.5689724110355856,2.5694122351059576,2.5698520591763296,2.570291883246701,2.5707317073170732,2.571171531387445,2.571611355457817,2.572051179528189,2.5724910035985604,2.5729308276689324,2.5733706517393045,2.573810475809676,2.574250299880048,2.5746901239504196,2.5751299480207916,2.5755697720911637,2.5760095961615352,2.5764494202319073,2.5768892443022793,2.577329068372651,2.577768892443023,2.5782087165133944,2.5786485405837665,2.5790883646541385,2.57952818872451,2.579968012794882,2.580407836865254,2.5808476609356257,2.5812874850059977,2.5817273090763693,2.5821671331467413,2.5826069572171133,2.583046781287485,2.583486605357857,2.583926429428229,2.5843662534986005,2.5848060775689725,2.585245901639344,2.585685725709716,2.586125549780088,2.5865653738504597,2.5870051979208317,2.5874450219912033,2.5878848460615753,2.5883246701319473,2.588764494202319,2.589204318272691,2.589644142343063,2.5900839664134345,2.5905237904838065,2.590963614554178,2.59140343862455,2.591843262694922,2.5922830867652937,2.5927229108356658,2.5931627349060378,2.5936025589764093,2.5940423830467814,2.594482207117153,2.594922031187525,2.595361855257897,2.5958016793282686,2.5962415033986406,2.5966813274690126,2.597121151539384,2.597560975609756,2.5980007996801278,2.5984406237505,2.598880447820872,2.5993202718912434,2.5997600959616154,2.6001999200319874,2.600639744102359,2.601079568172731,2.6015193922431026,2.6019592163134746,2.6023990403838466,2.602838864454218,2.60327868852459,2.6037185125949622,2.604158336665334,2.604598160735706,2.6050379848060774,2.6054778088764494,2.6059176329468214,2.606357457017193,2.606797281087565,2.6072371051579366,2.6076769292283086,2.6081167532986806,2.608556577369052,2.6089964014394242,2.6094362255097963,2.609876049580168,2.61031587365054,2.6107556977209114,2.6111955217912834,2.6116353458616555,2.612075169932027,2.612514994002399,2.612954818072771,2.6133946421431427,2.6138344662135147,2.6142742902838862,2.6147141143542583,2.6151539384246303,2.615593762495002,2.616033586565374,2.616473410635746,2.6169132347061175,2.6173530587764895,2.617792882846861,2.618232706917233,2.618672530987605,2.6191123550579767,2.6195521791283487,2.6199920031987207,2.6204318272690923,2.6208716513394643,2.621311475409836,2.621751299480208,2.62219112355058,2.6226309476209515,2.6230707716913235,2.6235105957616955,2.623950419832067,2.624390243902439,2.6248300679728107,2.6252698920431827,2.6257097161135547,2.6261495401839263,2.6265893642542983,2.62702918832467,2.627469012395042,2.627908836465414,2.6283486605357855,2.6287884846061575,2.6292283086765296,2.629668132746901,2.630107956817273,2.6305477808876447,2.6309876049580168,2.6314274290283888,2.6318672530987604,2.6323070771691324,2.6327469012395044,2.633186725309876,2.633626549380248,2.6340663734506196,2.6345061975209916,2.6349460215913636,2.635385845661735,2.635825669732107,2.636265493802479,2.636705317872851,2.637145141943223,2.6375849660135944,2.6380247900839664,2.6384646141543384,2.63890443822471,2.639344262295082,2.639784086365454,2.6402239104358256,2.6406637345061976,2.641103558576569,2.641543382646941,2.6419832067173132,2.642423030787685,2.642862854858057,2.643302678928429,2.6437425029988004,2.6441823270691724,2.644622151139544,2.645061975209916,2.645501799280288,2.6459416233506596,2.6463814474210317,2.6468212714914032,2.6472610955617752,2.6477009196321473,2.648140743702519,2.648580567772891,2.649020391843263,2.6494602159136345,2.6499000399840065,2.650339864054378,2.65077968812475,2.651219512195122,2.6516593362654937,2.6520991603358657,2.6525389844062377,2.6529788084766093,2.6534186325469813,2.653858456617353,2.654298280687725,2.654738104758097,2.6551779288284685,2.6556177528988405,2.6560575769692125,2.656497401039584,2.656937225109956,2.6573770491803277,2.6578168732506997,2.6582566973210717,2.6586965213914433,2.6591363454618153,2.6595761695321873,2.660015993602559,2.660455817672931,2.6608956417433025,2.6613354658136745,2.6617752898840465,2.662215113954418,2.66265493802479,2.6630947620951617,2.6635345861655337,2.6639744102359058,2.6644142343062773,2.6648540583766493,2.6652938824470214,2.665733706517393,2.666173530587765,2.6666133546581365,2.6670531787285086,2.6674930027988806,2.667932826869252,2.668372650939624,2.668812475009996,2.6692522990803678,2.66969212315074,2.6701319472211114,2.6705717712914834,2.6710115953618554,2.671451419432227,2.671891243502599,2.672331067572971,2.6727708916433426,2.6732107157137146,2.673650539784086,2.674090363854458,2.67453018792483,2.674970011995202,2.675409836065574,2.675849660135946,2.6762894842063174,2.6767293082766894,2.677169132347061,2.677608956417433,2.678048780487805,2.6784886045581766,2.6789284286285486,2.6793682526989206,2.6798080767692922,2.6802479008396642,2.680687724910036,2.681127548980408,2.68156737305078,2.6820071971211514,2.6824470211915235,2.682886845261895,2.683326669332267,2.683766493402639,2.6842063174730106,2.6846461415433827,2.6850859656137547,2.6855257896841263,2.6859656137544983,2.68640543782487,2.686845261895242,2.687285085965614,2.6877249100359855,2.6881647341063575,2.6886045581767295,2.689044382247101,2.689484206317473,2.6899240303878447,2.6903638544582167,2.6908036785285887,2.6912435025989603,2.6916833266693323,2.6921231507397043,2.692562974810076,2.693002798880448,2.6934426229508195,2.6938824470211915,2.6943222710915635,2.694762095161935,2.695201919232307,2.695641743302679,2.6960815673730507,2.6965213914434227,2.6969612155137943,2.6974010395841663,2.6978408636545383,2.69828068772491,2.698720511795282,2.699160335865654,2.6996001599360255,2.7000399840063976,2.700479808076769,2.700919632147141,2.701359456217513,2.7017992802878847,2.7022391043582568,2.7026789284286283,2.7031187524990004,2.7035585765693724,2.703998400639744,2.704438224710116,2.704878048780488,2.7053178728508596,2.7057576969212316,2.706197520991603,2.706637345061975,2.707077169132347,2.7075169932027188,2.707956817273091,2.708396641343463,2.7088364654138344,2.7092762894842064,2.709716113554578,2.71015593762495,2.710595761695322,2.7110355857656936,2.7114754098360656,2.7119152339064376,2.712355057976809,2.712794882047181,2.713234706117553,2.713674530187925,2.714114354258297,2.7145541783286684,2.7149940023990404,2.7154338264694124,2.715873650539784,2.716313474610156,2.7167532986805276,2.7171931227508996,2.7176329468212717,2.7180727708916432,2.7185125949620152,2.718952419032387,2.719392243102759,2.719832067173131,2.7202718912435024,2.7207117153138745,2.7211515393842465,2.721591363454618,2.72203118752499,2.7224710115953616,2.7229108356657337,2.7233506597361057,2.7237904838064773,2.7242303078768493,2.7246701319472213,2.725109956017593,2.725549780087965,2.7259896041583365,2.7264294282287085,2.7268692522990805,2.727309076369452,2.727748900439824,2.728188724510196,2.7286285485805677,2.7290683726509397,2.7295081967213113,2.7299480207916833,2.7303878448620553,2.730827668932427,2.731267493002799,2.731707317073171,2.7321471411435425,2.7325869652139145,2.733026789284286,2.733466613354658,2.73390643742503,2.7343462614954017,2.7347860855657737,2.7352259096361458,2.7356657337065173,2.7361055577768894,2.736545381847261,2.736985205917633,2.737425029988005,2.7378648540583765,2.7383046781287486,2.73874450219912,2.739184326269492,2.739624150339864,2.7400639744102357,2.7405037984806078,2.74094362255098,2.7413834466213514,2.7418232706917234,2.742263094762095,2.742702918832467,2.743142742902839,2.7435825669732106,2.7440223910435826,2.7444622151139546,2.744902039184326,2.745341863254698,2.7457816873250698,2.746221511395442,2.746661335465814,2.7471011595361854,2.7475409836065574,2.7479808076769294,2.748420631747301,2.748860455817673,2.7493002798880446,2.7497401039584166,2.7501799280287886,2.75061975209916,2.7510595761695322,2.7514994002399042,2.751939224310276,2.752379048380648,2.7528188724510194,2.7532586965213914,2.7536985205917635,2.754138344662135,2.754578168732507,2.755017992802879,2.7554578168732506,2.7558976409436227,2.7563374650139942,2.7567772890843663,2.7572171131547383,2.75765693722511,2.758096761295482,2.7585365853658534,2.7589764094362255,2.7594162335065975,2.759856057576969,2.760295881647341,2.760735705717713,2.7611755297880847,2.7616153538584567,2.7620551779288283,2.7624950019992003,2.7629348260695723,2.763374650139944,2.763814474210316,2.764254298280688,2.7646941223510595,2.7651339464214315,2.765573770491803,2.766013594562175,2.766453418632547,2.7668932427029187,2.7673330667732907,2.7677728908436627,2.7682127149140343,2.7686525389844063,2.769092363054778,2.76953218712515,2.769972011195522,2.7704118352658935,2.7708516593362655,2.7712914834066376,2.771731307477009,2.772171131547381,2.7726109556177527,2.7730507796881247,2.7734906037584968,2.7739304278288683,2.7743702518992404,2.774810075969612,2.775249900039984,2.775689724110356,2.7761295481807275,2.7765693722510996,2.7770091963214716,2.777449020391843,2.777888844462215,2.7783286685325868,2.7787684926029588,2.779208316673331,2.7796481407437024,2.7800879648140744,2.7805277888844464,2.780967612954818,2.78140743702519,2.7818472610955616,2.7822870851659336,2.7827269092363056,2.783166733306677,2.783606557377049,2.7840463814474212,2.784486205517793,2.784926029588165,2.7853658536585364,2.7858056777289084,2.7862455017992804,2.786685325869652,2.787125149940024,2.787564974010396,2.7880047980807676,2.7884446221511396,2.788884446221511,2.7893242702918832,2.7897640943622553,2.790203918432627,2.790643742502999,2.791083566573371,2.7915233906437424,2.7919632147141145,2.792403038784486,2.792842862854858,2.79328268692523,2.7937225109956016,2.7941623350659737,2.7946021591363452,2.7950419832067173,2.7954818072770893,2.795921631347461,2.796361455417833,2.796801279488205,2.7972411035585765,2.7976809276289485,2.79812075169932,2.798560575769692,2.799000399840064,2.7994402239104357,2.7998800479808077,2.8003198720511797,2.8007596961215513,2.8011995201919233,2.801639344262295,2.802079168332667,2.802518992403039,2.8029588164734105,2.8033986405437825,2.8038384646141545,2.804278288684526,2.804718112754898,2.8051579368252697,2.8055977608956417,2.8060375849660137,2.8064774090363853,2.8069172331067573,2.8073570571771294,2.807796881247501,2.808236705317873,2.8086765293882445,2.8091163534586165,2.8095561775289886,2.80999600159936,2.810435825669732,2.810875649740104,2.8113154738104758,2.8117552978808478,2.8121951219512193,2.8126349460215914,2.8130747700919634,2.813514594162335,2.813954418232707,2.8143942423030786,2.8148340663734506,2.8152738904438226,2.815713714514194,2.816153538584566,2.816593362654938,2.81703318672531,2.817473010795682,2.8179128348660534,2.8183526589364254,2.8187924830067974,2.819232307077169,2.819672131147541,2.820111955217913,2.8205517792882846,2.8209916033586566,2.821431427429028,2.8218712514994,2.8223110755697722,2.822750899640144,2.823190723710516,2.823630547780888,2.8240703718512594,2.8245101959216314,2.824950019992003,2.825389844062375,2.825829668132747,2.8262694922031186,2.8267093162734906,2.8271491403438627,2.8275889644142342,2.8280287884846063,2.828468612554978,2.82890843662535,2.829348260695722,2.8297880847660934,2.8302279088364655,2.8306677329068375,2.831107556977209,2.831547381047581,2.8319872051179527,2.8324270291883247,2.8328668532586967,2.8333066773290683,2.8337465013994403,2.834186325469812,2.834626149540184,2.835065973610556,2.8355057976809275,2.8359456217512995,2.8363854458216715,2.836825269892043,2.837265093962415,2.8377049180327867,2.8381447421031587,2.8385845661735307,2.8390243902439023,2.8394642143142743,2.8399040383846463,2.840343862455018,2.84078368652539,2.8412235105957615,2.8416633346661335,2.8421031587365055,2.842542982806877,2.842982806877249,2.843422630947621,2.8438624550179927,2.8443022790883647,2.8447421031587363,2.8451819272291083,2.8456217512994804,2.846061575369852,2.846501399440224,2.846941223510596,2.8473810475809676,2.8478208716513396,2.848260695721711,2.848700519792083,2.849140343862455,2.8495801679328268,2.8500199920031988,2.8504598160735704,2.8508996401439424,2.8513394642143144,2.851779288284686,2.852219112355058,2.85265893642543,2.8530987604958016,2.8535385845661736,2.853978408636545,2.854418232706917,2.854858056777289,2.855297880847661,2.855737704918033,2.856177528988405,2.8566173530587764,2.8570571771291484,2.85749700119952,2.857936825269892,2.858376649340264,2.8588164734106356,2.8592562974810076,2.8596961215513796,2.860135945621751,2.8605757696921232,2.861015593762495,2.861455417832867,2.861895241903239,2.8623350659736104,2.8627748900439824,2.8632147141143545,2.863654538184726,2.864094362255098,2.8645341863254696,2.8649740103958417,2.8654138344662137,2.8658536585365852,2.8662934826069573,2.8667333066773293,2.867173130747701,2.867612954818073,2.8680527788884445,2.8684926029588165,2.8689324270291885,2.86937225109956,2.869812075169932,2.8702518992403037,2.8706917233106757,2.8711315473810477,2.8715713714514193,2.8720111955217913,2.8724510195921633,2.872890843662535,2.873330667732907,2.8737704918032785,2.8742103158736505,2.8746501399440225,2.875089964014394,2.875529788084766,2.875969612155138,2.8764094362255097,2.8768492602958817,2.8772890843662533,2.8777289084366253,2.8781687325069973,2.878608556577369,2.879048380647741,2.879488204718113,2.8799280287884845,2.8803678528588565,2.880807676929228,2.8812475009996,2.881687325069972,2.8821271491403437,2.8825669732107158,2.8830067972810878,2.8834466213514593,2.8838864454218314,2.884326269492203,2.884766093562575,2.885205917632947,2.8856457417033186,2.8860855657736906,2.8865253898440626,2.886965213914434,2.887405037984806,2.8878448620551778,2.88828468612555,2.888724510195922,2.8891643342662934,2.8896041583366654,2.890043982407037,2.890483806477409,2.890923630547781,2.8913634546181526,2.8918032786885246,2.8922431027588966,2.892682926829268,2.89312275089964,2.893562574970012,2.894002399040384,2.894442223110756,2.8948820471811274,2.8953218712514994,2.8957616953218714,2.896201519392243,2.896641343462615,2.8970811675329866,2.8975209916033586,2.8979608156737307,2.8984006397441022,2.8988404638144742,2.8992802878848463,2.899720111955218,2.90015993602559,2.9005997600959614,2.9010395841663335,2.9014794082367055,2.901919232307077,2.902359056377449,2.902798880447821,2.9032387045181927,2.9036785285885647,2.9041183526589363,2.9045581767293083,2.9049980007996803,2.905437824870052,2.905877648940424,2.9063174730107955,2.9067572970811675,2.9071971211515395,2.907636945221911,2.908076769292283,2.908516593362655,2.9089564174330267,2.9093962415033987,2.9098360655737703,2.9102758896441423,2.9107157137145143,2.911155537784886,2.911595361855258,2.91203518592563,2.9124750099960015,2.9129148340663735,2.913354658136745,2.913794482207117,2.914234306277489,2.9146741303478607,2.9151139544182327,2.9155537784886048,2.9159936025589763,2.9164334266293483,2.91687325069972,2.917313074770092,2.917752898840464,2.9181927229108355,2.9186325469812076,2.9190723710515796,2.919512195121951,2.919952019192323,2.9203918432626947,2.9208316673330668,2.921271491403439,2.9217113154738104,2.9221511395441824,2.9225909636145544,2.923030787684926,2.923470611755298,2.9239104358256696,2.9243502598960416,2.9247900839664136,2.925229908036785,2.925669732107157,2.9261095561775288,2.926549380247901,2.926989204318273,2.9274290283886444,2.9278688524590164,2.9283086765293884,2.92874850059976,2.929188324670132,2.9296281487405036,2.9300679728108756,2.9305077968812476,2.930947620951619,2.9313874450219912,2.9318272690923632,2.932267093162735,2.932706917233107,2.9331467413034784,2.9335865653738504,2.9340263894442224,2.934466213514594,2.934906037584966,2.935345861655338,2.9357856857257096,2.9362255097960817,2.9366653338664532,2.9371051579368253,2.9375449820071973,2.937984806077569,2.938424630147941,2.938864454218313,2.9393042782886845,2.9397441023590565,2.940183926429428,2.9406237504998,2.941063574570172,2.9415033986405437,2.9419432227109157,2.9423830467812877,2.9428228708516593,2.9432626949220313,2.943702518992403,2.944142343062775,2.944582167133147,2.9450219912035185,2.9454618152738905,2.945901639344262,2.946341463414634,2.946781287485006,2.9472211115553777,2.9476609356257497,2.9481007596961217,2.9485405837664933,2.9489804078368653,2.949420231907237,2.949860055977609,2.950299880047981,2.9507397041183525,2.9511795281887245,2.9516193522590966,2.952059176329468,2.95249900039984,2.9529388244702117,2.9533786485405837,2.9538184726109558,2.9542582966813273,2.9546981207516994,2.9551379448220714,2.955577768892443,2.956017592962815,2.9564574170331865,2.9568972411035586,2.9573370651739306,2.957776889244302,2.958216713314674,2.958656537385046,2.9590963614554178,2.95953618552579,2.9599760095961614,2.9604158336665334,2.9608556577369054,2.961295481807277,2.961735305877649,2.962175129948021,2.9626149540183926,2.9630547780887646,2.963494602159136,2.963934426229508,2.96437425029988,2.964814074370252,2.965253898440624,2.9656937225109954,2.9661335465813674,2.9665733706517394,2.967013194722111,2.967453018792483,2.967892842862855,2.9683326669332266,2.9687724910035986,2.96921231507397,2.9696521391443422,2.9700919632147142,2.970531787285086,2.970971611355458,2.97141143542583,2.9718512594962014,2.9722910835665735,2.972730907636945,2.973170731707317,2.973610555777689,2.9740503798480606,2.9744902039184327,2.9749300279888047,2.9753698520591763,2.9758096761295483,2.97624950019992,2.976689324270292,2.977129148340664,2.9775689724110355,2.9780087964814075,2.9784486205517795,2.978888444622151,2.979328268692523,2.9797680927628947,2.9802079168332667,2.9806477409036387,2.9810875649740103,2.9815273890443823,2.981967213114754,2.982407037185126,2.982846861255498,2.9832866853258695,2.9837265093962415,2.9841663334666135,2.984606157536985,2.985045981607357,2.9854858056777287,2.9859256297481007,2.9863654538184727,2.9868052778888443,2.9872451019592163,2.9876849260295884,2.98812475009996,2.988564574170332,2.9890043982407035,2.9894442223110755,2.9898840463814476,2.990323870451819,2.990763694522191,2.991203518592563,2.9916433426629347,2.9920831667333068,2.9925229908036783,2.9929628148740504,2.9934026389444224,2.993842463014794,2.994282287085166,2.994722111155538,2.9951619352259096,2.9956017592962816,2.996041583366653,2.996481407437025,2.996921231507397,2.9973610555777688,2.997800879648141,2.998240703718513,2.9986805277888844,2.9991203518592564,2.999560175929628,3.0]}

},{}],47:[function(require,module,exports){
module.exports={"expected":[0.0,0.022415482217368245,0.03170027895893511,0.038824754076638476,0.04483096443473649,0.05012254198647311,0.054906493770982244,0.05930579146474705,0.06340055791787022,0.06724644665210473,0.07088397865788516,0.07434374400989414,0.07764950815327695,0.08082017049897244,0.08387105461671582,0.08681478932507572,0.08966192886947298,0.09242140083136365,0.09510083687680533,0.09770682175624121,0.10024508397294622,0.10272064400002656,0.10513793105638584,0.10750087622831032,0.10981298754196449,0.11207741108684123,0.11429698123295275,0.11647426222991543,0.1186115829294941,0.12071106597192077,0.12277465247808507,0.124804123065513,0.12680111583574044,0.12876714185003105,0.13070359850923452,0.13261178117460123,0.13449289330420947,0.1363480553303736,0.1381783124640469,0.1399846415805996,0.14176795731577033,0.14352911747977562,0.14526892788053605,0.14698814663297696,0.1486874880197883,0.15036762595941935,0.15202919712906793,0.1536728037837084,0.1552990163065539,0.15690837552157771,0.15850139479467554,0.16007856194661033,0.1616403409979449,0.16318717376365416,0.16471948131294675,0.1662376653079661,0.16774210923343164,0.1692331795278859,0.17071122662600377,0.1721765859203625,0.17362957865015144,0.17507051272349172,0.1764996834793293,0.17791737439424116,0.17932385773894596,0.1807193951888255,0.18210423839233406,0.18347862950079277,0.1848428016627273,0.18619697948560682,0.18754137946757415,0.18887621040151614,0.19020167375361066,0.1915179640182928,0.19282526905141154,0.1941237703831924,0.19541364351248242,0.19669505818362776,0.19796817864722063,0.1992331639058493,0.20049016794589244,0.2017393399563142,0.20298082453533994,0.20421476188582358,0.20544128800005312,0.2066605348346847,0.20787263047644122,0.2090776992991654,0.2102758621127717,0.21146723630460235,0.2126519359736555,0.2138300720581201,0.21500175245662065,0.21616708214354732,0.2173261632788199,0.2184790953124107,0.21962597508392898,0.22076689691754908,0.22190195271254579,0.22303123202968247,0.22415482217368246,0.225272808271998,0.22638527335007794,0.22749229840332325,0.2285939624659055,0.2296903426766153,0.23078151434189464,0.2318675509961997,0.23294852445983086,0.2340245048943584,0.23509556085576502,0.2361617593454196,0.2372231658589882,0.23827984443338507,0.23933185769185708,0.2403792668872931,0.24142213194384154,0.24246051149691736,0.24349446293167312,0.24452404242000642,0.24554930495617014,0.2465703043910507,0.24758709346517346,0.24859972384049364,0.249608246131026,0.2506127099323656,0.2516131638501475,0.25260965552749226,0.2536022316714809,0.2545909380787003,0.25557581965990006,0.25655692046379674,0.2575342837000621,0.25850795176152946,0.2594779662456494,0.26044436797522713,0.26140719701846904,0.2623664927083675,0.2633222936614501,0.2642746377959189,0.26522356234920247,0.26616910389494575,0.26711129835945835,0.26805018103764217,0.26898578660841893,0.2699181491496766,0.2708473021527521,0.2717732785364694,0.2726961106607472,0.2736158303397953,0.2745324688549112,0.275446056966895,0.2763566249280938,0.27726420249409095,0.2781688189350514,0.27907050304673653,0.2799692831611992,0.2808651871571713,0.28175824247015385,0.28264847610221994,0.28353591463154065,0.28442058422164435,0.285302510630416,0.2861817192188484,0.28705823495955124,0.28793208244502744,0.2888032858957239,0.28967186916786447,0.2905378557610721,0.2914012688257872,0.29226213117048855,0.2931204652687236,0.2939762932659539,0.2948296369862218,0.2956805179386435,0.2965289573237353,0.2973749760395766,0.2982185946878161,0.2990598335795248,0.29989871274090224,0.3007352519188387,0.3015694705863386,0.30240138794780963,0.3032310229442212,0.30405839425813586,0.304883520318618,0.30570641930602355,0.3065271091566738,0.3073456075674168,0.3081619320000797,0.3089760996858153,0.30978812762934615,0.3105980326131078,0.31140583120129645,0.312211539743821,0.3130151743801643,0.31381675104315543,0.31461628546265524,0.3154137931691576,0.3162092894973094,0.3170027895893511,0.31779430839847894,0.3185838606921335,0.31937146105521363,0.32015712389322065,0.3209408634353316,0.3217226937374069,0.32250262868493096,0.3232806819958898,0.3240568672235859,0.3248311977593931,0.32560368683545193,0.3263743475273083,0.3271431927564952,0.3279102352930609,0.32867548775804334,0.3294389626258935,0.3302006722268475,0.3309606287492504,0.33171884424183123,0.3324753306159322,0.3332300996476918,0.33398316298018343,0.33473453212551124,0.33548421846686327,0.3362322332605237,0.3369785876378444,0.3377232926071779,0.3384663590557718,0.33920779775162574,0.33994761934531176,0.34068583437175975,0.34142245325200754,0.34215748629491716,0.34289094369885825,0.3436228355533589,0.344353171840725,0.3450819624376288,0.34580921711666707,0.3465349455478903,0.3472591573003029,0.34798186184333463,0.3487030685482862,0.3494227866897463,0.35014102544698344,0.3508577939053118,0.35157310105743217,0.3522869558047481,0.3529993669586586,0.3537103432418267,0.35441989328942586,0.3551280256503634,0.3558347487884823,0.3565400710837415,0.35724400083337526,0.35794654625303174,0.3586477154778919,0.3593475165637688,0.36004595748818685,0.3607430461514433,0.361438790377651,0.3621331979157623,0.3628262764405768,0.3635180335537303,0.3642084767846681,0.3648976135916009,0.36558545136244475,0.3662719974157451,0.36695725900158555,0.3676412433024808,0.3683239574342552,0.3690054084469064,0.3696856033254546,0.37036454899077814,0.371042252300435,0.3717187200494707,0.37239395897121363,0.3730679757380565,0.3737407769622259,0.374412369196539,0.3750827589351483,0.37575195261427413,0.3764199566129257,0.37708677725361045,0.3777524208030323,0.3784168934727787,0.379080201419997,0.37974235074806,0.3804033475072213,0.3810631976952602,0.3817219072581165,0.382379482090516,0.3830359280365856,0.3836912508904595,0.38434545639687573,0.3849985502517637,0.38565053810282307,0.3863014255500931,0.3869512181465143,0.38759992139848076,0.3882475407663848,0.3888940816651531,0.38953954946477504,0.3901839494908229,0.39082728702496483,0.39146956730546933,0.39211079552770356,0.39275097684462307,0.3933901163672555,0.394028219165176,0.39466529026697694,0.39530133466072975,0.39593635729444127,0.39657036307650195,0.3972033568761293,0.3978353435238037,0.3984663278116986,0.39909631449410454,0.399725308287847,0.40035331387269857,0.4009803358917849,0.40160637895198553,0.40223144762432855,0.4028555464443801,0.4034786799126284,0.4041008524948622,0.40472206862254445,0.4053423326931801,0.4059616490706799,0.4065800220857181,0.407197456036086,0.40781395518704033,0.40842952377164715,0.40904416599112087,0.40965788601515873,0.41027068798227095,0.41088257600010625,0.41149355414577304,0.41210362646615645,0.41271279697823104,0.4133210696693694,0.41392844849764654,0.4145349373921407,0.4151405402532294,0.41574526095288244,0.4163491033349507,0.4169520712154511,0.4175541683828479,0.4181553985983308,0.41875576559608835,0.4193552730835791,0.4199539247417987,0.4205517242255434,0.42114867516367027,0.42174478115935454,0.42234004579034296,0.4229344726092047,0.4235280651435785,0.4241208268964169,0.4247127613462275,0.425303871947311,0.4258941621299967,0.4264836353008742,0.4270722948430232,0.4276601441162402,0.4282471864572615,0.42883342517998485,0.42941886357568737,0.4300035049132413,0.4305873524393269,0.43117040937864265,0.4317526789341132,0.43233416428709465,0.4329148685975774,0.43349479500438626,0.43407394662537857,0.4346523265576398,0.4352299378776767,0.4358067836416082,0.43638286688535405,0.4369581906248214,0.4375327578560889,0.43810657155558863,0.43867963468028603,0.43925195016785795,0.43982352093686794,0.44039434988694015,0.4409644398989309,0.44153379383509817,0.4421024145392696,0.4426703048370077,0.44323746753577414,0.44380390542509157,0.4443696212767033,0.44493461784473226,0.4454988978658366,0.44606246405936495,0.4466253191275091,0.4471874657554553,0.4477489066115334,0.4483096443473649,0.448869681598009,0.44942902098210696,0.4499876651020251,0.450545616543996,0.451102877878258,0.4516594516591939,0.45221534042546685,0.4527705467001559,0.45332507299088937,0.4538789217899773,0.45443209557454184,0.4549845968066465,0.4555364279334242,0.4560875913872038,0.4566380895856346,0.457187924931811,0.4577370998143939,0.4582856166077325,0.4588334776719836,0.4593806853532306,0.4599272419836,0.46047314988137816,0.4610184113511252,0.4615630286837893,0.46210700415681827,0.46265034003427125,0.46319303856692834,0.4637351019923994,0.4642765325352319,0.46481733240701706,0.46535750380649554,0.4658970489196617,0.46643596991986674,0.46697426896792077,0.467511948212194,0.4680490097887168,0.4685854558212786,0.469121288421526,0.4696565096890596,0.47019112171153005,0.4707251265647332,0.47125852631270365,0.47179132300780857,0.4723235186908392,0.47285511539110225,0.47338611512651046,0.4739165199036714,0.4744463317179764,0.47497555255368806,0.47550418438402664,0.4760322291712564,0.47655968886677014,0.47708656541117345,0.4776128607343682,0.4781385767556349,0.47866371538371416,0.47918827851688783,0.47971226804305894,0.48023568583983095,0.4807585337745862,0.4812808137045638,0.4818025274769366,0.48232367692888706,0.4828442638876831,0.4833642901707528,0.48388375758575825,0.48440266793066905,0.4849210229938347,0.48543882455405674,0.4859560743806599,0.48647277423356244,0.48698892586334624,0.487504531011326,0.4880195914096176,0.488534108781206,0.48904808484001283,0.4895615212909625,0.4900744198300485,0.4905867821443988,0.4910986099123403,0.49160990480346317,0.4921206684786845,0.49263090259031095,0.4931406087821014,0.4936497886893286,0.49415844393884023,0.4946665761491199,0.4951741869303469,0.49568127788445604,0.4961878506051962,0.49669390667818913,0.4971994476809873,0.49770447518313105,0.4982089907462059,0.49871299592389834,0.499216492262052,0.4997194812987228,0.500221964564234,0.5007239435812301,0.5012254198647312,0.5017263949221858,0.5022268702535243,0.5027268473512106,0.503226327700295,0.5037253127784644,0.5042238040560947,0.5047218029963002,0.5052193110549845,0.5057163296808898,0.5062128603156458,0.5067089043938193,0.5072044633429618,0.5076995385836578,0.5081941315295723,0.5086882435874976,0.5091818761574006,0.5096750306324683,0.5101677083991545,0.5106599108372243,0.5111516393198001,0.5116428952134059,0.5121336798780113,0.5126239946670762,0.5131138409275935,0.5136032200001328,0.5140921332188833,0.5145805819116954,0.5150685674001242,0.5155560909994696,0.5160431540188191,0.5165297577610874,0.5170159035230589,0.5175015925954257,0.51798682626283,0.5184716058039016,0.5189559324912988,0.5194398075917466,0.5199232323660752,0.5204062080692591,0.5208887359504543,0.5213708172530366,0.5218524532146385,0.5223336450671865,0.5228143940369381,0.5232947013445176,0.523774568204953,0.5242539958277115,0.524732985416735,0.5252115381704752,0.5256896552819292,0.526167337938674,0.5266445873229002,0.5271214046114473,0.5275977909758363,0.5280737475823045,0.5285492755918378,0.5290243761602046,0.5294990504379878,0.529973299570618,0.5304471246984049,0.5309205269565703,0.531393507475279,0.5318660673796709,0.5323382077898915,0.5328099298211239,0.5332812345836182,0.5337521231827235,0.5342225967189167,0.5346926562878338,0.5351623029802983,0.5356315378823523,0.5361003620752843,0.5365687766356594,0.5370367826353473,0.5375043811415516,0.5379715732168379,0.5384383599191618,0.5389047423018969,0.539370721413863,0.5398362982993532,0.5403014739981609,0.5407662495456077,0.5412306259725697,0.5416946043055042,0.5421581855664764,0.5426213707731857,0.5430841609389914,0.5435465570729388,0.5440085601797848,0.5444701712600238,0.5449313913099124,0.5453922213214945,0.5458526622826265,0.5463127151770022,0.5467723809841765,0.5472316606795906,0.5476905552345958,0.5481490656164771,0.5486071927884778,0.5490649377098225,0.5495223013357405,0.5499792846174895,0.5504358885023783,0.55089211393379,0.5513479618512043,0.5518034331902205,0.5522585288825799,0.5527132498561876,0.5531675970351351,0.5536215713397219,0.5540751736864773,0.5545284049881819,0.5549812661538893,0.5554337580889473,0.5558858816950188,0.5563376378701028,0.5567890275085553,0.5572400515011102,0.5576907107348993,0.5581410060934731,0.5585909384568205,0.5590405087013897,0.5594897177001072,0.5599385663223984,0.5603870554342061,0.5608351858980115,0.5612829585728524,0.5617303743143426,0.5621774339746916,0.5626241384027224,0.5630704884438918,0.5635164849403077,0.5639621287307485,0.5644074206506807,0.5648523615322782,0.5652969522044399,0.5657411934928072,0.5661850862197829,0.5666286312045484,0.5670718292630813,0.5675146812081733,0.5679571878494467,0.5683993499933728,0.5688411684432887,0.5692826439994135,0.5697237774588666,0.5701645696156833,0.570605021260832,0.5710451331822307,0.5714849061647638,0.5719243409902974,0.5723634384376968,0.5728021992828417,0.5732406242986425,0.5736787142550563,0.5741164699191025,0.5745538920548784,0.5749909814235751,0.5754277387834924,0.5758641648900549,0.5763002604958265,0.576736026350526,0.5771714632010421,0.5776065717914478,0.5780413528630163,0.5784758071542346,0.578909935400819,0.5793437383357289,0.579777216689182,0.5802103711886679,0.5806432025589631,0.5810757115221442,0.581507898797603,0.5819397651020598,0.5823713111495772,0.5828025376515744,0.5832334453168404,0.583664034851548,0.5840943069592668,0.5845242623409771,0.5849539016950828,0.585383225717425,0.5858122351012949,0.5862409305374472,0.5866693127141125,0.5870973823170108,0.5875251400293637,0.5879525865319079,0.5883797225029069,0.5888065486181645,0.5892330655510365,0.5896592739724436,0.5900851745508833,0.5905107679524426,0.5909360548408099,0.591361035877287,0.591785711720801,0.5922100830279168,0.5926341504528484,0.5930579146474706,0.593481376261331,0.5939045359416618,0.5943273943333909,0.5947499520791532,0.5951722098193027,0.5955941681919236,0.5960158278328408,0.5964371893756322,0.5968582534516389,0.597279020689977,0.5976994917175479,0.5981196671590496,0.5985395476369874,0.5989591337716844,0.599378426181293,0.5997974254818045,0.6002161322870604,0.6006345472087625,0.6010526708564835,0.6014705038376774,0.6018880467576895,0.6023053002197671,0.6027222648250693,0.6031389411726772,0.6035553298596038,0.6039714314808047,0.6043872466291869,0.6048027758956193,0.6052180198689426,0.6056329791359789,0.606047654281541,0.6064620458884424,0.6068761545375073,0.6072899808075789,0.60770352527553,0.6081167885162717,0.608529771102763,0.6089424736060198,0.6093548965951249,0.609767040637236,0.6101789062975953,0.6105904941395394,0.6110018047245065,0.6114128386120471,0.6118235963598317,0.6122340785236603,0.6126442856574708,0.6130542183133476,0.6134638770415312,0.6138732623904254,0.614282374906607,0.6146912151348336,0.615099783618053,0.61550808089741,0.6159161075122568,0.6163238640001594,0.6167313508969072,0.6171385687365206,0.6175455180512595,0.6179521993716306,0.618358613226397,0.6187647601425843,0.6191706406454904,0.6195762552586923,0.619981604504054,0.6203866889017352,0.6207915089701982,0.6211960652262156,0.621600358184879,0.6220043883596056,0.6224081562621462,0.6228116624025929,0.6232149072893864,0.6236178914293237,0.624020615327565,0.624423079487642,0.6248252844114642,0.6252272305993272,0.6256289185499192,0.6260303487603286,0.6264315217260509,0.6268324379409962,0.6272330978974963,0.6276335020863109,0.628033650996636,0.6284335451161097,0.6288331849308199,0.6292325709253105,0.6296317035825888,0.6300305833841323,0.6304292108098951,0.6308275863383151,0.6312257104463201,0.6316235836093351,0.6320212063012886,0.6324185789946188,0.6328157021602816,0.6332125762677548,0.6336092017850471,0.6340055791787021,0.634401708913807,0.6347975914539972,0.6351932272614634,0.6355886167969579,0.6359837605198009,0.6363786588878861,0.636773312357688,0.637167721384267,0.637561886421276,0.6379558079209665,0.6383494863341947,0.6387429221104273,0.6391361156977476,0.6395290675428613,0.6399217780911031,0.6403142477864413,0.6407064770714849,0.641098466387489,0.6414902161743603,0.6418817268706632,0.6422729989136253,0.6426640327391436,0.6430548287817891,0.6434453874748138,0.6438357092501552,0.6442257945384425,0.6446156437690019,0.6450052573698619,0.6453946357677596,0.6457837793881449,0.6461726886551872,0.6465613639917795,0.6469498058195454,0.647338014558843,0.6477259906287703,0.6481137344471718,0.648501246430642,0.6488885269945319,0.6492755765529538,0.6496623955187862,0.6500489843036791,0.6504353433180595,0.650821472971136,0.6512073736709039,0.6515930458241505,0.6519784898364597,0.6523637061122176,0.6527486950546166,0.6531334570656613,0.6535179925461726,0.6539023018957927,0.6542863855129905,0.6546702437950657,0.6550538771381541,0.6554372859372322,0.6558204705861218,0.6562034314774948,0.6565861690028785,0.6569686835526588,0.6573509755160867,0.6577330452812813,0.6581148932352352,0.6584965197638194,0.658877925251787,0.659259110082778,0.6596400746393245,0.6600208193028541,0.660401344453695,0.6607816504710804,0.6611617377331528,0.6615416066169681,0.6619212574985008,0.6623006907526473,0.662679906753231,0.6630589058730062,0.6634376884836625,0.6638162549558292,0.664194605659079,0.6645727409619331,0.6649506612318644,0.6653283668353025,0.6657058581376374,0.6660831355032232,0.6664601992953836,0.6668370498764143,0.6672136876075886,0.6675901128491597,0.6679663259603669,0.6683423272994373,0.6687181172235916,0.6690936960890473,0.6694690642510225,0.6698442220637398,0.670219169880431,0.6705939080533397,0.6709684369337265,0.671342756871872,0.6717168682170804,0.6720907713176841,0.6724644665210474,0.6728379541735692,0.6732112346206881,0.6735843082068853,0.6739571752756888,0.6743298361696765,0.6747022912304802,0.6750745407987898,0.6754465852143559,0.675818424815994,0.676190059941588,0.676561490928094,0.6769327181115437,0.6773037418270474,0.6776745624087988,0.6780451801900771,0.6784155955032515,0.6787858086797841,0.6791558200502339,0.6795256299442595,0.6798952386906235,0.6802646466171949,0.6806338540509531,0.6810028613179914,0.6813716687435195,0.6817402766518681,0.6821086853664912,0.6824768952099697,0.6828449065040151,0.6832127195694722,0.6835803347263227,0.6839477522936883,0.6843149725898343,0.684681995932172,0.6850488226372629,0.6854154530208209,0.6857818873977165,0.6861481260819791,0.6865141693868004,0.6868800176245381,0.6872456711067177,0.6876111301440372,0.6879763950463688,0.6883414661227627,0.68870634368145,0.6890710280298459,0.6894355194745523,0.6897998183213613,0.6901639248752576,0.6905278394404221,0.6908915623202345,0.6912550938172763,0.6916184342333341,0.6919815838694018,0.6923445430256838,0.6927073120015987,0.6930698910957807,0.6934322806060838,0.6937944808295837,0.6941564920625816,0.6945183146006058,0.6948799487384156,0.6952413947700038,0.695602652988599,0.6959637236866693,0.6963246071559238,0.6966853036873168,0.6970458135710493,0.6974061370965724,0.69776627455259,0.6981262262270609,0.6984859924072025,0.6988455733794926,0.6992049694296723,0.6995641808427487,0.6999232079029979,0.7002820508939669,0.7006407100984766,0.7009991857986246,0.7013574782757875,0.7017155878106236,0.7020735146830751,0.7024312591723715,0.702788821557031,0.7031462021148643,0.7035034011229759,0.7038604188577675,0.70421725559494,0.7045739116094962,0.7049303871757433,0.7052866825672951,0.7056427980570749,0.7059987339173172,0.7063544904195711,0.706710067834702,0.7070654664328943,0.7074206864836534,0.7077757282558088,0.708130592017516,0.7084852780362587,0.7088397865788517,0.7091941179114426,0.7095482722995148,0.7099022500078891,0.7102560513007268,0.7106096764415313,0.7109631256931508,0.7113163993177805,0.7116694975769646,0.7120224207315992,0.7123751690419337,0.7127277427675737,0.713080142167483,0.713432367499986,0.7137844190227692,0.7141362969928845,0.7144880016667505,0.7148395333001551,0.7151908921482577,0.7155420784655909,0.7158930925060635,0.7162439345229614,0.7165946047689512,0.7169451034960812,0.7172954309557839,0.7176455873988781,0.7179955730755713,0.718345388235461,0.7186950331275376,0.7190445080001859,0.7193938131011878,0.7197429486777233,0.7200919149763737,0.7204407122431228,0.7207893407233594,0.7211378006618794,0.7214860923028866,0.721834215889997,0.7221821716662381,0.7225299598740532,0.722877580755302,0.7232250345512627,0.723572321502635,0.72391944184954,0.7242663958315246,0.7246131836875616,0.7249598056560523,0.7253062619748282,0.7256525528811536,0.7259986786117262,0.7263446394026802,0.7266904354895878,0.7270360671074606,0.727381534490752,0.727726837873359,0.7280719774886241,0.7284169535693362,0.7287617663477343,0.7291064160555075,0.7294509029237979,0.7297952271832018,0.7301393890637721,0.7304833887950194,0.7308272266059145,0.7311709027248895,0.7315144173798401,0.7318577707981272,0.7322009632065785,0.7325439948314902,0.7328868658986294,0.7332295766332347,0.7335721272600192,0.7339145180031711,0.7342567490863561,0.7345988207327189,0.7349407331648848,0.7352824866049616,0.7356240812745412,0.735965517394701,0.7363067951860061,0.7366479148685104,0.7369888766617589,0.7373296807847888,0.7376703274561311,0.7380108168938128,0.738351149315358,0.7386913249377897,0.7390313439776315,0.7393712066509092,0.7397109131731521,0.7400504637593951,0.7403898586241797,0.7407290979815563,0.741068182045085,0.7414071110278376,0.7417458851423994,0.74208450460087,0.7424229696148658,0.7427612803955204,0.7430994371534877,0.7434374400989414,0.7437752894415789,0.7441129853906203,0.7444505281548122,0.7447879179424273,0.7451251549612675,0.7454622394186645,0.7457991715214809,0.746135951476113,0.746472579488491,0.7468090557640814,0.7471453805078874,0.7474815539244518,0.7478175762178568,0.7481534475917272,0.7484891682492303,0.748824738393078,0.7491601582255284,0.7494954279483871,0.7498305477630084,0.7501655178702966,0.7505003384707081,0.7508350097642521,0.7511695319504923,0.7515039052285483,0.7518381297970967,0.7521722058543729,0.7525061335981723,0.7528399132258514,0.7531735449343296,0.7535070289200902,0.7538403653791822,0.7541735545072209,0.75450659649939,0.7548394915504424,0.755172239854702,0.7555048416060646,0.7558372969979994,0.7561696062235502,0.7565017694753372,0.7568337869455574,0.7571656588259867,0.7574973853079808,0.7578289665824769,0.758160402839994,0.7584916942706355,0.7588228410640893,0.7591538434096302,0.75948470149612,0.7598154155120096,0.7601459856453396,0.7604764120837424,0.7608066950144426,0.7611368346242587,0.7614668310996044,0.7617966846264891,0.7621263953905204,0.7624559635769038,0.7627853893704455,0.763114672955552,0.763443814516233,0.763772814236101,0.7641016722983732,0.7644303888858736,0.764758964181032,0.7650873983658875,0.7654156916220879,0.7657438441308925,0.7660718560731712,0.766399727629408,0.7667274589797002,0.7670550503037608,0.767382501780919,0.7677098135901216,0.7680369859099343,0.768364018918542,0.7686909127937515,0.7690176677129907,0.7693442838533118,0.7696707613913901,0.7699971005035274,0.7703233013656516,0.7706493641533182,0.7709752890417116,0.7713010762056461,0.7716267258195669,0.7719522380575513,0.7722776130933096,0.7726028511001862,0.7729279522511615,0.7732529167188514,0.7735777446755097,0.7739024362930286,0.77422699174294,0.774551411196416,0.774875694824271,0.7751998427969615,0.7755238552845882,0.7758477324568965,0.7761714744832776,0.7764950815327696,0.7768185537740583,0.777141891375479,0.7774650945050163,0.7777881633303062,0.7781110980186365,0.7784338987369482,0.7787565656518362,0.7790790989295501,0.7794014987359961,0.7797237652367368,0.7800458985969936,0.7803678989816458,0.7806897665552338,0.7810115014819581,0.7813331039256814,0.7816545740499297,0.781975912017892,0.7822971179924232,0.782618192136043,0.7829391346109387,0.7832599455789646,0.7835806252016444,0.7839011736401706,0.7842215910554071,0.7845418776078885,0.7848620334578227,0.7851820587650903,0.7855019536892461,0.7858217183895212,0.7861413530248215,0.786460857753731,0.786780232734511,0.7870994781251023,0.7874185940831253,0.7877375807658809,0.788056438330352,0.7883751669332039,0.7886937667307852,0.7890122378791291,0.7893305805339539,0.7896487948506637,0.7899668809843504,0.790284839089793,0.7906026693214595,0.7909203718335078,0.791237946779786,0.7915553943138336,0.7918727145888825,0.7921899077578576,0.7925069739733778,0.7928239133877567,0.7931407261530039,0.7934574124208252,0.7937739723426239,0.7940904060695015,0.7944067137522586,0.7947228955413956,0.7950389515871139,0.7953548820393161,0.7956706870476074,0.7959863667612962,0.7963019213293949,0.7966173509006209,0.7969326556233972,0.7972478356458531,0.7975628911158258,0.7978778221808597,0.7981926289882091,0.7985073116848374,0.7988218704174186,0.7991363053323384,0.799450616575694,0.7997648042932963,0.8000788686306692,0.8003928097330516,0.8007066277453971,0.8010203228123761,0.801333895078375,0.8016473446874988,0.8019606717835698,0.8022738765101303,0.8025869590104421,0.8028999194274875,0.8032127579039711,0.8035254745823186,0.8038380696046795,0.8041505431129264,0.8044628952486571,0.8047751261531938,0.8050872359675851,0.8053992248326064,0.8057110928887602,0.8060228402762776,0.806334467135118,0.8066459736049713,0.8069573598252568,0.8072686259351258,0.8075797720734611,0.8078907983788778,0.8082017049897244,0.8085124920440838,0.8088231596797733,0.8091337080343453,0.8094441372450889,0.8097544474490297,0.810064638782931,0.8103747113832944,0.8106846653863602,0.8109945009281087,0.8113042181442601,0.811613817170276,0.8119232981413598,0.812232661192457,0.8125419064582563,0.8128510340731904,0.8131600441714362,0.8134689368869159,0.8137777123532977,0.8140863707039957,0.814394912072172,0.8147033365907359,0.8150116443923454,0.815319835609408,0.8156279103740807,0.8159358688182708,0.8162437110736374,0.8165514372715909,0.8168590475432943,0.8171665420196638,0.8174739208313695,0.8177811841088356,0.8180883319822417,0.8183953645815227,0.8187022820363705,0.8190090844762334,0.8193157720303175,0.8196223448275872,0.819928802996766,0.8202351466663366,0.8205413759645419,0.8208474910193859,0.8211534919586337,0.8214593789098127,0.8217651520002125,0.8220708113568863,0.8223763571066514,0.822681789376089,0.8229871082915461,0.8232923139791347,0.8235974065647338,0.8239023861739887,0.8242072529323129,0.8245120069648875,0.8248166483966627,0.8251211773523577,0.8254255939564621,0.8257298983332354,0.8260340906067088,0.8263381709006851,0.8266421393387388,0.826945996044218,0.8272497411402442,0.8275533747497126,0.8278568969952931,0.8281603079994311,0.8284636078843474,0.8287667967720393,0.8290698747842814,0.8293728420426251,0.8296756986684004,0.8299784447827157,0.8302810805064588,0.8305836059602969,0.830886021264678,0.8311883265398305,0.8314905219057649,0.8317926074822728,0.8320945833889292,0.8323964497450915,0.8326982066699014,0.8329998542822844,0.8333013927009507,0.8336028220443962,0.8339041424309022,0.8342053539785367,0.8345064568051541,0.8348074510283973,0.8351083367656958,0.8354091141342691,0.8357097832511244,0.8360103442330594,0.8363107971966616,0.8366111422583091,0.8369113795341715,0.8372115091402095,0.8375115311921767,0.8378114458056188,0.8381112530958754,0.8384109531780793,0.8387105461671582,0.839010032177834,0.8393094113246241,0.8396086837218422,0.8399078494835974,0.8402069087237969,0.8405058615561439,0.8408047080941407,0.8411034484510868,0.8414020827400817,0.8417006110740234,0.8419990335656101,0.8422973503273405,0.8425955614715139,0.8428936671102311,0.8431916673553944,0.8434895623187091,0.8437873521116824,0.8440850368456259,0.8443826166316539,0.8446800915806859,0.8449774618034454,0.8452747274104616,0.8455718885120693,0.8458689452184094,0.8461658976394296,0.8464627458848847,0.8467594900643369,0.847056130287157,0.8473526666625238,0.8476490992994256,0.8479454283066598,0.8482416537928338,0.8485377758663658,0.8488337946354846,0.8491297102082304,0.849425522692455,0.8497212321958229,0.8500168388258109,0.8503123426897095,0.850607743894622,0.8509030425474667,0.8511982387549761,0.8514933326236973,0.8517883242599934,0.8520832137700429,0.8523780012598412,0.8526726868352,0.8529672706017484,0.853261752664933,0.8535561331300188,0.8538504121020892,0.8541445896860465,0.8544386659866124,0.8547326411083287,0.8550265151555572,0.8553202882324804,0.8556139604431022,0.855907531891248,0.856201002680565,0.856494372914523,0.8567876426964146,0.8570808121293559,0.8573738813162863,0.8576668503599697,0.8579597193629942,0.8582524884277731,0.8585451576565453,0.8588377271513747,0.8591301970141525,0.8594225673465955,0.8597148382502484,0.8600070098264826,0.8602990821764981,0.8605910554013224,0.8608829296018125,0.8611747048786538,0.8614663813323614,0.8617579590632806,0.8620494381715864,0.8623408187572853,0.8626321009202139,0.8629232847600413,0.8632143703762678,0.8635053578682264,0.8637962473350823,0.8640870388758345,0.8643777325893148,0.8646683285741893,0.8649588269289582,0.8652492277519562,0.8655395311413533,0.8658297371951548,0.8661198460112018,0.8664098576871717,0.8666997723205784,0.8669895900087725,0.8672793108489425,0.8675689349381142,0.8678584623731516,0.8681478932507571,0.8684372276674723,0.8687264657196777,0.8690156075035934,0.8693046531152796,0.8695936026506369,0.8698824562054065,0.8701712138751707,0.8704598757553534,0.8707484419412201,0.8710369125278788,0.8713252876102798,0.8716135672832164,0.8719017516413252,0.8721898407790865,0.8724778347908245,0.8727657337707081,0.8730535378127504,0.8733412470108101,0.873628861458591,0.8739163812496428,0.8742038064773615,0.8744911372349896,0.8747783736156162,0.8750655157121778,0.8753525636174585,0.8756395174240905,0.8759263772245537,0.8762131431111773,0.8764998151761387,0.8767863935114656,0.8770728782090345,0.8773592693605721,0.8776455670576557,0.8779317713917131,0.8782178824540232,0.8785039003357159,0.8787898251277735,0.8790756569210296,0.8793613958061708,0.8796470418737359,0.8799325952141172,0.8802180559175597,0.8805034240741632,0.8807886997738803,0.881073883106519,0.8813589741617414,0.8816439730290647,0.8819288797978618,0.8822136945573609,0.8824984173966465,0.8827830484046592,0.8830675876701963,0.8833520352819124,0.8836363913283191,0.8839206558977856,0.8842048290785391,0.8844889109586653,0.8847729016261082,0.8850568011686708,0.8853406096740154,0.8856243272296637,0.8859079539229973,0.8861914898412581,0.8864749350715483,0.886758289700831,0.8870415538159304,0.8873247275035319,0.8876078108501831,0.8878908039422931,0.8881737068661336,0.888456519707839,0.8887392425534066,0.8890218754886969,0.889304418599434,0.8895868719712058,0.8898692356894645,0.8901515098395265,0.8904336945065735,0.8907157897756518,0.8909977957316731,0.891279712459415,0.8915615400435207,0.8918432785685003,0.8921249281187299,0.8924064887784523,0.8926879606317781,0.892969343762685,0.8932506382550182,0.8935318441924913,0.8938129616586861,0.8940939907370528,0.8943749315109106,0.8946557840634481,0.8949365484777233,0.8952172248366635,0.8954978132230668,0.8957783137196009,0.8960587264088047,0.8963390513730873,0.8966192886947298,0.8968994384558843,0.8971795007385743,0.8974594756246962,0.897739363196018,0.8980191635341804,0.8982988767206971,0.8985785028369548,0.8988580419642139,0.8991374941836079,0.8994168595761449,0.8996961382227068,0.8999753302040502,0.9002544356008062,0.9005334544934815,0.9008123869624577,0.901091233087992,0.9013699929502172,0.9016486666291433,0.9019272542046555,0.902205755756516,0.9024841713643644,0.9027625011077169,0.9030407450659675,0.9033189033183878,0.9035969759441275,0.9038749630222143,0.9041528646315546,0.9044306808509337,0.9047084117590157,0.904986057434344,0.9052636179553417,0.9055410934003117,0.9058184838474369,0.9060957893747804,0.9063730100602861,0.9066501459817787,0.906927197216964,0.907204163843429,0.9074810459386422,0.9077578435799546,0.9080345568445986,0.9083111858096892,0.9085877305522241,0.9088641911490837,0.9091405676770314,0.9094168602127146,0.9096930688326638,0.909969193613293,0.9102452346309008,0.9105211919616703,0.9107970656816687,0.9110728558668484,0.9113485625930466,0.9116241859359863,0.9118997259712751,0.9121751827744076,0.9124505564207634,0.9127258469856094,0.9130010545440981,0.9132761791712692,0.9135512209420495,0.913826179931253,0.9141010562135807,0.914375849863622,0.9146505609558538,0.9149251895646415,0.9151997357642387,0.9154741996287878,0.91574858123232,0.9160228806487553,0.916297097951904,0.916571233215465,0.9168452865130273,0.9171192579180706,0.917393147503964,0.9176669553439672,0.9179406815112313,0.9182143260787979,0.9184878891195998,0.9187613707064612,0.9190347709120981,0.9193080898091182,0.9195813274700215,0.9198544839672,0.9201275593729389,0.9204005537594153,0.9206734671986999,0.9209462997627563,0.9212190515234419,0.9214917225525072,0.9217643129215971,0.9220368227022504,0.9223092519659002,0.9225816007838741,0.9228538692273943,0.9231260573675786,0.923398165275439,0.9236701930218838,0.9239421406777165,0.9242140083136365,0.9244857960002391,0.924757503808016,0.9250291318073555,0.9253006800685425,0.9255721486617584,0.9258435376570824,0.9261148471244905,0.9263860771338567,0.9266572277549519,0.926928299057446,0.9271992911109064,0.9274702039847988,0.927741037748488,0.9280117924712372,0.9282824682222086,0.9285530650704638,0.9288235830849635,0.9290940223345683,0.9293643828880384,0.9296346648140341,0.929904868181116,0.930174993057745,0.9304450395122824,0.9307150076129911,0.9309848974280341,0.9312547090254762,0.9315244424732835,0.9317940978393234,0.9320636751913658,0.932333174597082,0.9326025961240458,0.9328719398397335,0.9331412058115238,0.9334103941066981,0.9336795047924416,0.9339485379358415,0.9342174936038893,0.93448637186348,0.934755172781412,0.935023896424388,0.9352925428590145,0.9355611121518032,0.9358296043691694,0.9360980195774335,0.9363663578428212,0.9366346192314629,0.9369028038093944,0.9371709116425572,0.9374389427967983,0.9377068973378707,0.9379747753314336,0.938242576843052,0.938510301938198,0.9387779506822499,0.9390455231404928,0.9393130193781192,0.9395804394602285,0.9398477834518275,0.9401150514178307,0.9403822434230601,0.9406493595322462,0.9409163998100266,0.9411833643209484,0.9414502531294664,0.9417170662999441,0.9419838038966543,0.9422504659837785,0.9425170526254073,0.942783563885541,0.9430499998280892,0.9433163605168715,0.9435826460156171,0.9438488563879656,0.9441149916974667,0.9443810520075807,0.9446470373816784,0.9449129478830414,0.9451787835748623,0.9454445445202451,0.9457102307822045,0.9459758424236677,0.9462413795074727,0.9465068420963697,0.9467722302530209,0.9470375440400007,0.947302783519796,0.947567948754806,0.9478330398073428,0.9480980567396312,0.9483629996138094,0.9486278684919283,0.9488926634359528,0.949157384507761,0.9494220317691446,0.9496866052818097,0.9499511051073761,0.9502155313073778,0.9504798839432633,0.950744163076396,0.9510083687680533,0.9512725010794282,0.9515365600716285,0.9518005458056773,0.9520644583425129,0.9523282977429891,0.9525920640678761,0.9528557573778592,0.9531193777335403,0.9533829251954369,0.9536463998239836,0.9539098016795311,0.9541731308223469,0.9544363873126153,0.9546995712104378,0.9549626825758329,0.9552257214687364,0.955488687949002,0.9557515820764004,0.9560144039106208,0.9562771535112699,0.9565398309378726,0.9568024362498724,0.9570649695066308,0.9573274307674283,0.9575898200914641,0.9578521375378559,0.958114383165641,0.9583765570337757,0.9586386592011357,0.9589006897265161,0.9591626486686319,0.9594245360861179,0.9596863520375287,0.9599480965813395,0.9602097697759453,0.9604713716796619,0.9607329023507253,0.9609943618472927,0.9612557502274421,0.9615170675491724,0.9617783138704038,0.9620394892489778,0.9623005937426575,0.9625616274091277,0.9628225903059948,0.9630834824907873,0.9633443040209559,0.9636050549538732,0.9638657353468345,0.9641263452570578,0.9643868847416831,0.9646473538577741,0.9649077526623168,0.9651680812122208,0.9654283395643184,0.9656885277753662,0.9659486459020434,0.9662086940009535,0.966468672128624,0.9667285803415056,0.9669884186959739,0.9672481872483282,0.967507886054793,0.9677675151715165,0.968027074654572,0.968286564559958,0.9685459849435972,0.9688053358613381,0.9690646173689539,0.9693238295221439,0.9695829723765323,0.9698420459876694,0.970101050411031,0.9703599857020192,0.970618851915962,0.9708776491081135,0.9711363773336545,0.9713950366476923,0.9716536271052606,0.9719121487613198,0.9721706016707576,0.9724289858883888,0.9726873014689548,0.9729455484671249,0.9732037269374957,0.9734618369345913,0.9737198785128636,0.9739778517266925,0.9742357566303858,0.9744935932781792,0.974751361724237,0.975009062022652,0.975266694227445,0.9755242583925661,0.9757817545718935,0.9760391828192352,0.9762965431883273,0.9765538357328358,0.9768110605063559,0.977068217562412,0.9773253069544582,0.9775823287358785,0.9778392829599863,0.9780961696800257,0.9783529889491699,0.9786097408205233,0.9788664253471201,0.979123042581925,0.9793795925778336,0.979636075387672,0.9798924910641972,0.980148839660097,0.9804051212279911,0.9806613358204294,0.9809174834898938,0.9811735642887977,0.9814295782694856,0.9816855254842345,0.9819414059852526,0.9821972198246806,0.982452967054591,0.9827086477269884,0.9829642618938103,0.9832198096069263,0.9834752909181388,0.9837307058791825,0.9839860545417257,0.984241336957369,0.9844965531776463,0.9847517032540251,0.9850067872379056,0.9852618051806219,0.9855167571334416,0.9857716431475659,0.98602646327413,0.9862812175642028,0.9865359060687875,0.9867905288388213,0.9870450859251759,0.9872995773786571,0.9875540032500056,0.9878083635898965,0.9880626584489399,0.9883168878776805,0.9885710519265981,0.9888251506461079,0.9890791840865598,0.9893331522982398,0.9895870553313687,0.9898408932361031,0.9900946660625355,0.9903483738606939,0.9906020166805426,0.9908555945719815,0.9911091075848472,0.9913625557689121,0.9916159391738854,0.9918692578494122,0.9921225118450749,0.9923757012103924,0.9926288259948202,0.9928818862477512,0.9931348820185149,0.9933878133563783,0.9936406803105455,0.9938934829301583,0.9941462212642957,0.9943988953619746,0.9946515052721493,0.9949040510437123,0.9951565327254938,0.9954089503662621,0.9956613040147242,0.9959135937195245,0.9961658195292465,0.9964179814924118,0.996670079657481,0.9969221140728531,0.997174084786866,0.9974259918477967,0.9976778353038611,0.9979296152032143,0.9981813315939506,0.998432984524104,0.9986845740416475,0.9989361001944939,0.9991875630304958,0.9994389625974456,0.9996902989430754,0.9999415721150574,1.000192782161004,1.000443929128468,1.0006950130649417,1.000946034017859,1.0011969920345938,1.0014478871624601,1.0016987194487135,1.0019494889405502,1.002200195685107,1.0024508397294625,1.002701421120635,1.0029519399055862,1.003202396131217,1.0034527898443717,1.0037031210918346,1.0039533899203323,1.0042035963765337,1.0044537405070486,1.0047038223584295,1.0049538419771704,1.005203799409708,1.0054536947024213,1.005703527901631,1.0059532990536013,1.006203008204538,1.00645265540059,1.006702240687849,1.0069517641123495,1.0072012257200693,1.0074506255569289,1.0076999636687918,1.0079492401014654,1.0081984549007,1.0084476081121894,1.008696699781571,1.0089457299544262,1.0091946986762799,1.0094436059926004,1.0096924519488009,1.0099412365902378,1.0101899599622122,1.010438622109969,1.010687223078698,1.0109357629135332,1.0111842416595527,1.0114326593617795,1.011681016065182,1.0119293118146722,1.012177546655108,1.0124257206312917,1.012673833787971,1.012921886169839,1.0131698778215337,1.0134178087876387,1.0136656791126826,1.0139134888411403,1.0141612380174319,1.0144089266859235,1.014656554890927,1.0149041226766997,1.0151516300874461,1.0153990771673156,1.0156464639604044,1.0158937905107552,1.0161410568623568,1.0163882630591445,1.016635409145,1.0168824951637525,1.0171295211591767,1.0173764871749953,1.017623393254877,1.0178702394424388,1.0181170257812433,1.0183637523148013,1.0186104190865706,1.0188570261399565,1.0191035735183118,1.0193500612649367,1.0195964894230793,1.0198428580359353,1.020089167146648,1.020335416798309,1.020581607033958,1.0208277378965824,1.0210738094291179,1.0213198216744486,1.0215657746754072,1.0218116684747742,1.0220575031152792,1.0223032786396002,1.0225489950903641,1.0227946525101461,1.0230402509414709,1.0232857904268118,1.023531271008591,1.0237766927291805,1.024022055630901,1.0242673597560226,1.0245126051467646,1.0247577918452964,1.0250029198937363,1.0252479893341524,1.0254930002085627,1.0257379525589352,1.0259828464271874,1.026227681855187,1.0264724588847514,1.026717177557649,1.0269618379155976,1.0272064400002656,1.027450983853272,1.0276954695161857,1.0279398970305271,1.0281842664377665,1.028428577779325,1.028672831096575,1.0289170264308387,1.0291611638233908,1.0294052433154561,1.029649264948211,1.029893228762782,1.0301371348002484,1.03038098310164,1.0306247737079384,1.0308685066600767,1.0311121819989393,1.0313557997653628,1.031599360000135,1.0318428627439962,1.0320863080376381,1.0323296959217048,1.0325730264367923,1.032816299623449,1.033059515522175,1.0333026741734235,1.0335457756175994,1.0337888198950607,1.0340318070461179,1.034274737111033,1.0345176101300229,1.034760426143255,1.0350031851908514,1.0352458873128862,1.0354885325493868,1.0357311209403335,1.03597365252566,1.0362161273452533,1.0364585454389534,1.0367009068465545,1.0369432116078032,1.0371854597624006,1.0374276513500011,1.037669786410213,1.0379118649825976,1.0381538871066713,1.0383958528219035,1.038637762167718,1.0388796151834931,1.0391214119085603,1.039363152382206,1.039604836643671,1.0398464647321504,1.0400880366867933,1.040329552546704,1.0405710123509413,1.0408124161385182,1.041053763948403,1.0412950558195184,1.0415362917907427,1.0417774719009085,1.042018596188804,1.0422596646931717,1.0425006774527104,1.0427416345060732,1.0429825358918692,1.0432233816486627,1.0434641718149735,1.043704906429277,1.043945585530004,1.0441862091555414,1.0444267773442315,1.044667290134373,1.04490774756422,1.0451481496719823,1.045388496495827,1.0456287880738762,1.0458690244442084,1.0461092056448587,1.0463493317138184,1.0465894026890352,1.0468294186084133,1.0470693795098134,1.047309285431053,1.047549136409906,1.0477889324841034,1.048028673691333,1.0482683600692388,1.048507991655423,1.0487475684874439,1.0489870906028171,1.0492265580390159,1.04946597083347,1.0497053290235667,1.0499446326466513,1.050183881740026,1.0504230763409503,1.0506622164866417,1.0509013022142757,1.0511403335609844,1.0513793105638585,1.0516182332599466,1.0518571016862552,1.052095915879748,1.052334675877348,1.0525733817159355,1.052812033432349,1.0530506310633856,1.0532891746458004,1.0535276642163076,1.0537660998115785,1.0540044814682445,1.0542428092228946,1.0544810831120763,1.0547193031722963,1.0549574694400206,1.0551955819516725,1.0554336407436358,1.0556716458522524,1.0559095973138233,1.056147495164609,1.0563853394408285,1.056623130178661,1.0568608674142443,1.0570985511836757,1.0573361815230118,1.057573758468269,1.057811282055423,1.0580487523204092,1.058286169299123,1.0585235330274188,1.0587608435411118,1.0589981008759757,1.0592353050677457,1.059472456152116,1.0597095541647412,1.059946599141236,1.0601835911171749,1.0604205301280933,1.0606574162094862,1.0608942493968099,1.0611310297254801,1.0613677572308737,1.061604431948328,1.0618410539131407,1.0620776231605702,1.0623141397258362,1.0625506036441186,1.062787014950558,1.0630233736802568,1.0632596798682776,1.0634959335496441,1.0637321347593418,1.0639682835323163,1.0642043799034755,1.0644404239076877,1.064676415579783,1.0649123549545532,1.0651482420667506,1.0653840769510903,1.0656198596422477,1.0658555901748608,1.0660912685835289,1.066326894902813,1.0665624691672364,1.0667979914112837,1.0670334616694017,1.067268879975999,1.067504246365447,1.067739560872078,1.0679748235301876,1.0682100343740328,1.0684451934378334,1.0686803007557717,1.0689153563619918,1.0691503602906005,1.0693853125756676,1.0696202132512247,1.0698550623512666,1.0700898599097506,1.0703246059605966,1.0705593005376879,1.0707939436748701,1.0710285354059519,1.0712630757647046,1.0714975647848635,1.0717320025001258,1.0719663889441529,1.0722007241505687,1.0724350081529608,1.07266924098488,1.07290342267984,1.0731375532713188,1.0733716327927572,1.07360566127756,1.0738396387590952,1.0740735652706945,1.0743074408456539,1.0745412655172324,1.074775039318653,1.0750087622831033,1.0752424344437337,1.0754760558336591,1.0757096264859587,1.0759431464336757,1.0761766157098172,1.0764100343473544,1.076643402379223,1.0768767198383236,1.0771099867575196,1.0773432031696404,1.0775763691074793,1.0778094846037938,1.0780425496913062,1.078275564402704,1.0785085287706384,1.078741442827726,1.078974306606548,1.0792071201396507,1.079439883459545,1.0796725965987064,1.0799052595895762,1.0801378724645605,1.0803704352560304,1.0806029479963217,1.0808354107177367,1.0810678234525417,1.0813001862329688,1.0815324990912154,1.0817647620594446,1.081996975169785,1.0822291384543299,1.0824612519451393,1.0826933156742382,1.0829253296736174,1.0831572939752332,1.0833892086110084,1.0836210736128309,1.0838528890125547,1.0840846548420002,1.0843163711329529,1.0845480379171653,1.084779655226355,1.085011223092207,1.0852427415463715,1.085474210620465,1.0857056303460706,1.085937000754738,1.0861683218779827,1.086399593747287,1.0866308163940994,1.0868619898498357,1.0870931141458775,1.087324189313573,1.0875552153842378,1.0877861923891536,1.0880171203595697,1.088247999326701,1.0884788293217302,1.0887096103758072,1.0889403425200477,1.0891710257855356,1.0894016602033214,1.089632245804423,1.0898627826198248,1.0900932706804791,1.0903237100173058,1.090554100661191,1.090784442642989,1.0910147359935214,1.0912449807435773,1.091475176923913,1.091705324565253,1.091935423698289,1.09216547435368,1.0923954765620536,1.0926254303540044,1.0928553357600952,1.0930851928108567,1.093315001536787,1.093544761968353,1.093774474135989,1.094004138070097,1.0942337538010483,1.0944633213591812,1.0946928407748027,1.094922312078188,1.0951517352995803,1.0953811104691915,1.0956104376172018,1.0958397167737595,1.0960689479689818,1.0962981312329543,1.0965272665957309,1.0967563540873342,1.0969853937377558,1.0972143855769556,1.0974433296348625,1.0976722259413738,1.0979010745263562,1.098129875419645,1.098358628651044,1.0985873342503267,1.0988159922472354,1.099044602671481,1.0992731655527441,1.0995016809206741,1.0997301488048898,1.099958569234979,1.100186942240499,1.1004152678509767,1.1006435460959072,1.1008717770047567,1.1010999606069596,1.1013280969319201,1.1015561860090126,1.10178422786758,1.1020122225369355,1.1022401700463622,1.1024680704251124,1.1026959237024085,1.1029237299074426,1.1031514890693763,1.103379201217342,1.103606866380441,1.1038344845877455,1.1040620558682972,1.104289580251108,1.1045170577651597,1.1047444884394049,1.1049718723027657,1.1051992093841347,1.1054264997123753,1.10565374331632,1.105880940224773,1.1061080904665082,1.1063351940702701,1.106562251064774,1.1067892614787047,1.107016225340719,1.1072431426794438,1.1074700135234758,1.107696837901384,1.1079236158417072,1.1081503473729546,1.1083770325236069,1.108603671322116,1.1088302637969039,1.1090568099763638,1.1092833098888604,1.109509763562729,1.1097361710262759,1.1099625323077786,1.1101888474354864,1.110415116437619,1.1106413393423678,1.1108675161778947,1.1110936469723345,1.111319731753792,1.1115457705503435,1.1117717633900377,1.111997710300894,1.1122236113109039,1.1124494664480296,1.1126752757402056,1.1129010392153382,1.113126756901305,1.1133524288259553,1.1135780550171106,1.113803635502564,1.1140291703100802,1.114254659467396,1.1144801030022204,1.114705500942234,1.1149308533150897,1.1151561601484123,1.1153814214697986,1.1156066373068176,1.115831807687011,1.1160569326378917,1.1162820121869461,1.1165070463616313,1.1167320351893786,1.11695697869759,1.117181876913641,1.117406729864879,1.1176315375786243,1.1178563000821693,1.1180810174027793,1.1183056895676922,1.118530316604118,1.1187548985392402,1.1189794354002145,1.1192039272141694,1.1194283740082065,1.1196527758094,1.1198771326447967,1.1201014445414168,1.1203257115262533,1.120549933626272,1.1207741108684122,1.1209982432795857,1.1212223308866776,1.1214463737165463,1.121670371796023,1.121894325151913,1.1221182338109934,1.1223420978000158,1.1225659171457048,1.1227896918747582,1.1230134220138475,1.123237107589617,1.1234607486286852,1.123684345157644,1.1239078972030583,1.1241314047914672,1.124354867949383,1.124578286703292,1.124801661079654,1.1250249911049026,1.1252482768054448,1.1254715182076622,1.1256947153379098,1.1259178682225157,1.1261409768877837,1.1263640413599898,1.126587061665385,1.126810037830194,1.1270329698806154,1.1272558578428225,1.1274787017429617,1.1277015016071548,1.127924257461497,1.1281469693320574,1.1283696372448804,1.1285922612259844,1.1288148413013614,1.1290373774969784,1.1292598698387772,1.129482318352673,1.1297047230645565,1.1299270840002922,1.1301494011857196,1.1303716746466526,1.1305939044088797,1.130816090498164,1.1310382329402437,1.1312603317608314,1.1314823869856143,1.1317043986402548,1.1319263667503898,1.1321482913416312,1.1323701724395658,1.1325920100697555,1.132813804257737,1.1330355550290216,1.1332572624090969,1.133478926423424,1.1337005470974402,1.1339221244565572,1.1341436585261626,1.1343651493316191,1.1345865968982638,1.1348080012514101,1.1350293624163466,1.1352506804183362,1.1354719552826182,1.1356931870344074,1.1359143756988934,1.1361355213012414,1.1363566238665925,1.1365776834200634,1.1367986999867457,1.137019673591707,1.137240604259991,1.1374614920166162,1.1376823368865774,1.1379031388948448,1.138123898066365,1.13834461442606,1.138565287998827,1.1387859188095404,1.1390065068830495,1.13922705224418,1.1394475549177332,1.139668014928487,1.1398884323011946,1.1401088070605858,1.1403291392313666,1.1405494288382185,1.1407696759058,1.1409898804587448,1.141210042521664,1.1414301621191438,1.141650239275748,1.1418702740160152,1.1420902663644614,1.1423102163455792,1.1425301239838366,1.1427499893036788,1.1429698123295275,1.1431895930857805,1.1434093315968126,1.1436290278869747,1.1438486819805949,1.1440682939019773,1.1442878636754032,1.1445073913251305,1.1447268768753935,1.1449463203504038,1.1451657217743494,1.1453850811713953,1.1456043985656834,1.1458236739813321,1.1460429074424374,1.1462620989730719,1.146481248597285,1.1467003563391034,1.146919422222531,1.147138446271548,1.1473574285101127,1.1475763689621599,1.147795267651602,1.148014124602328,1.148232939838205,1.1484517133830765,1.1486704452607637,1.1488891354950652,1.1491077841097568,1.1493263911285918,1.1495449565753006,1.1497634804735917,1.1499819628471502,1.1502004037196394,1.1504188031146998,1.1506371610559498,1.1508554775669848,1.1510737526713786,1.1512919863926818,1.1515101787544235,1.1517283297801097,1.151946439493225,1.1521645079172314,1.152382535075568,1.152600520991653,1.1528184656888816,1.1530363691906271,1.153254231520241,1.153472052701052,1.1536898327563678,1.1539075717094731,1.1541252695836315,1.1543429264020841,1.1545605421880503,1.1547781169647273,1.1549956507552912,1.1552131435828956,1.1554305954706725,1.1556480064417323,1.1558653765191633,1.1560827057260326,1.156299994085385,1.1565172416202443,1.1567344483536124,1.1569516143084693,1.1571687395077739,1.1573858239744632,1.1576028677314534,1.157819870801638,1.15803683320789,1.1582537549730612,1.1584706361199808,1.1586874766714579,1.1589042766502793,1.1591210360792115,1.1593377549809984,1.159554433378364,1.1597710712940101,1.1599876687506179,1.160204225770847,1.1604207423773358,1.1606372185927025,1.160853654439543,1.1610700499404327,1.1612864051179261,1.1615027199945567,1.1617189945928363,1.1619352289352567,1.1621514230442884,1.162367576942381,1.1625836906519629,1.1627997641954422,1.163015797595206,1.1632317908736205,1.163447744053031,1.1636636571557628,1.1638795302041196,1.1640953632203845,1.1643111562268207,1.16452690924567,1.1647426222991544,1.1649582954094742,1.16517392859881,1.1653895218893218,1.1656050753031488,1.1658205888624098,1.1660360625892037,1.1662514965056083,1.1664668906336808,1.1666822449954592,1.1668975596129603,1.1671128345081805,1.167328069703096,1.1675432652196636,1.1677584210798184,1.1679735373054767,1.1681886139185336,1.1684036509408646,1.1686186483943253,1.1688336063007498,1.1690485246819542,1.169263403559733,1.169478242955861,1.1696930428920935,1.1699078033901655,1.1701225244717919,1.1703372061586679,1.1705518484724688,1.17076645143485,1.1709810150674467,1.171195539391875,1.1714100244297307,1.1716244702025898,1.171838876732009,1.1720532440395246,1.172267572146654,1.1724818610748944,1.1726961108457234,1.1729103214805991,1.17312449300096,1.173338625428225,1.1735527187837935,1.1737667730890455,1.1739807883653413,1.1741947646340216,1.174408701916408,1.1746226002338025,1.174836459607488,1.1750502800587275,1.175264061608765,1.1754778042788252,1.1756915080901134,1.1759051730638157,1.1761187992210989,1.1763323865831106,1.176545935170979,1.1767594450058139,1.1769729161087048,1.1771863485007228,1.17739974220292,1.177613097236329,1.1778264136219634,1.1780396913808184,1.1782529305338694,1.178466131102073,1.1786792931063672,1.1788924165676709,1.1791055015068836,1.179318547944887,1.179531555902543,1.179744525400695,1.1799574564601676,1.1801703491017665,1.1803832033462789,1.1805960192144729,1.180808796727098,1.1810215359048852,1.1812342367685469,1.1814468993387761,1.1816595236362484,1.1818721096816198,1.1820846574955282,1.1822971670985924,1.1825096385114136,1.182722071754574,1.1829344668486368,1.1831468238141476,1.1833591426716332,1.183571423441602,1.183783666144544,1.1839958708009306,1.1842080374312156,1.1844201660558336,1.1846322566952014,1.1848443093697174,1.185056324099762,1.1852683009056968,1.1854802398078654,1.185692140826594,1.1859040039821893,1.1861158292949412,1.18632761678512,1.1865393664729798,1.1867510783787547,1.186962752522662,1.1871743889249007,1.1873859876056516,1.1875975485850776,1.1878090718833236,1.188020557520517,1.1882320055167666,1.1884434158921637,1.1886547886667818,1.1888661238606761,1.1890774214938848,1.1892886815864274,1.1894999041583063,1.189711089229506,1.1899222368199924,1.1901333469497153,1.1903444196386055,1.1905554549065769,1.1907664527735247,1.190977413259328,1.1911883363838471,1.1913992221669252,1.1916100706283879,1.1918208817880431,1.1920316556656816,1.1922423922810759,1.1924530916539822,1.192663753804138,1.1928743787512643,1.193084966515064,1.1932955171152235,1.1935060305714111,1.1937165069032778,1.1939269461304576,1.1941373482725668,1.194347713349205,1.194558041379954,1.1947683323843785,1.1949785863820264,1.1951888033924276,1.1953989834350958,1.1956091265295266,1.195819232695199,1.196029301951575,1.1962393343180993,1.1964493298141992,1.1966592884592855,1.1968692102727518,1.1970790952739747,1.1972889434823135,1.1974987549171114,1.1977085295976935,1.1979182675433688,1.1981279687734292,1.1983376333071496,1.1985472611637882,1.198756852362586,1.1989664069227677,1.1991759248635412,1.1993854062040967,1.199594850963609,1.1998042591612352,1.200013630816116,1.2002229659473755,1.2004322645741208,1.2006415267154427,1.2008507523904153,1.2010599416180958,1.201269094417525,1.2014782108077273,1.2016872908077105,1.2018963344364655,1.202105341712967,1.2023143126561733,1.202523247285026,1.20273214561845,1.2029410076753548,1.2031498334746322,1.2033586230351583,1.2035673763757928,1.203776093515379,1.2039847744727439,1.2041934192666977,1.2044020279160352,1.2046106004395343,1.2048191368559564,1.2050276371840478,1.2052361014425375,1.2054445296501386,1.2056529218255478,1.2058612779874467,1.2060695981544993,1.2062778823453544,1.2064861305786443,1.2066943428729857,1.2069025192469787,1.2071106597192076,1.207318764308241,1.207526833032631,1.2077348659109135,1.2079428629616094,1.2081508242032228,1.2083587496542423,1.2085666393331402,1.2087744932583737,1.208982311448383,1.2091900939215936,1.2093978406964143,1.2096055517912385,1.209813227224444,1.210020867014392,1.210228471179429,1.2104360397378853,1.2106435727080753,1.2108510701082977,1.2110585319568359,1.2112659582719578,1.2114733490719145,1.2116807043749431,1.2118880241992638,1.212095308563082,1.2123025574845867,1.2125097709819523,1.2127169490733376,1.2129240917768849,1.213131199110722,1.2133382710929608,1.213545307741698,1.2137523090750146,1.2139592751109762,1.2141662058676335,1.2143731013630208,1.2145799616151578,1.2147867866420492,1.2149935764616835,1.2152003310920343,1.21540705055106,1.2156137348567035,1.2158203840268929,1.2160269980795404,1.2162335770325434,1.216440120903784,1.2166466297111294,1.216853103472431,1.217059542205526,1.2172659459282353,1.2174723146583657,1.2176786484137083,1.2178849472120397,1.2180912110711208,1.2182974400086979,1.2185036340425022,1.2187097931902497,1.2189159174696418,1.2191220068983644,1.219328061494089,1.219534081274472,1.2197400662571543,1.219946016459763,1.2201519318999094,1.2203578125951906,1.2205636585631885,1.22076946982147,1.2209752463875876,1.2211809882790787,1.221386695513466,1.2215923681082579,1.2217980060809475,1.222003609449013,1.2222091782299187,1.2224147124411135,1.222620212100032,1.2228256772240942,1.223031107830705,1.2232365039372552,1.223441865561121,1.2236471927196635,1.2238524854302295,1.2240577437101516,1.2242629675767476,1.2244681570473206,1.2246733121391593,1.2248784328695383,1.2250835192557172,1.2252885713149415,1.225493589064442,1.2256985725214355,1.225903521703124,1.2261084366266952,1.2263133173093228,1.226518163768166,1.2267229760203688,1.2269277540830623,1.2271324979733627,1.2273372077083713,1.2275418833051763,1.2277465247808508,1.2279511321524539,1.2281557054370307,1.2283602446516118,1.228564749813214,1.2287692209388392,1.2289736580454762,1.2291780611500989,1.2293824302696672,1.2295867654211274,1.229791066621411,1.2299953338874359,1.230199567236106,1.2304037666843104,1.2306079322489256,1.230812063946813,1.23101616179482,1.2312202258097809,1.2314242560085151,1.2316282524078286,1.2318322150245136,1.2320361438753475,1.2322400389770953,1.2324439003465069,1.2326477280003187,1.2328515219552534,1.23305528222802,1.2332590088353133,1.2334627017938145,1.233666361120191,1.2338699868310967,1.2340735789431714,1.2342771374730412,1.234480662437319,1.2346841538526034,1.2348876117354795,1.235091036102519,1.2352944269702795,1.2354977843553052,1.2357011082741267,1.2359043987432612,1.2361076557792123,1.2363108793984692,1.2365140696175088,1.236717226452794,1.2369203499207733,1.2371234400378828,1.237326496820545,1.2375295202851686,1.2377325104481487,1.2379354673258673,1.238138390934693,1.2383412812909809,1.2385441384110722,1.2387469623112954,1.2389497530079658,1.2391525105173846,1.2393552348558396,1.2395579260396066,1.2397605840849468,1.239963209008108,1.240165800825326,1.2403683595528223,1.2405708852068054,1.2407733778034704,1.2409758373589999,1.2411782638895623,1.2413806574113135,1.2415830179403964,1.2417853454929397,1.2419876400850602,1.2421899017328606,1.2423921304524312,1.2425943262598491,1.2427964891711778,1.2429986192024682,1.243200716369758,1.2434027806890722,1.243604812176422,1.2438068108478064,1.2440087767192112,1.2442107098066089,1.2444126101259592,1.244614477693209,1.2448163125242924,1.24501811463513,1.2452198840416302,1.245421620759688,1.2456233248051858,1.245824996193993,1.2460266349419662,1.2462282410649492,1.2464298145787729,1.2466313554992556,1.2468328638422026,1.2470343396234065,1.2472357828586473,1.2474371935636919,1.247638571754295,1.247839917446198,1.24804123065513,1.2482425113968072,1.2484437596869336,1.2486449755411995,1.248846158975284,1.249047310004852,1.2492484286455574,1.2494495149130402,1.2496505688229285,1.2498515903908374,1.25005257963237,1.2502535365631164,1.2504544611986543,1.250655353554549,1.2508562136463532,1.2510570414896072,1.2512578370998384,1.2514586004925625,1.251659331683282,1.2518600306874876,1.2520606975206572,1.2522613321982563,1.2524619347357382,1.2526625051485438,1.2528630434521018,1.2530635496618279,1.253264023793126,1.2534644658613878,1.2536648758819924,1.2538652538703066,1.2540655998416852,1.2542659138114705,1.2544661957949925,1.254666445807569,1.2548666638645056,1.2550668499810964,1.2552670041726217,1.255467126454351,1.2556672168415417,1.2558672753494378,1.256067301993272,1.2562672967882649,1.256467259749625,1.2566671908925484,1.2568670902322194,1.25706695778381,1.2572667935624804,1.257466597583378,1.2576663698616397,1.2578661104123887,1.2580658192507372,1.2582654963917854,1.258465141850621,1.2586647556423196,1.258864337781946,1.259063888284552,1.2592634071651776,1.2594628944388513,1.2596623501205895,1.2598617742253961,1.2600611667682646,1.2602605277641752,1.260459857228097,1.260659155174987,1.2608584216197902,1.2610576565774405,1.2612568600628595,1.2614560320909565,1.2616551726766303,1.2618542818347667,1.2620533595802406,1.2622524059279148,1.2624514208926403,1.2626504044892566,1.2628493567325918,1.2630482776374614,1.2632471672186703,1.263446025491011,1.2636448524692645,1.2638436481682005,1.264042412602577,1.26424114578714,1.2644398477366243,1.2646385184657531,1.2648371579892377,1.2650357663217786,1.2652343434780635,1.26543288947277,1.2656314043205632,1.265829888036097,1.266028340634014,1.2662267621289451,1.2664251525355097,1.266623511868316,1.2668218401419609,1.2670201373710288,1.2672184035700942,1.267416638753719,1.2676148429364544,1.2678130161328403,1.2680111583574043,1.268209269624664,1.2684073499491246,1.2686053993452802,1.268803417827614,1.2690014054105978,1.2691993621086914,1.2693972879363444,1.2695951829079943,1.2697930470380678,1.2699908803409803,1.2701886828311355,1.2703864545229269,1.2705841954307355,1.2707819055689322,1.2709795849518761,1.2711772335939158,1.271374851509388,1.2715724387126182,1.2717699952179216,1.2719675210396018,1.272165016191951,1.2723624806892506,1.2725599145457713,1.2727573177757723,1.2729546903935016,1.2731520324131962,1.2733493438490828,1.273546624715376,1.27374387502628,1.2739410947959882,1.2741382840386826,1.274335442768534,1.2745325709997029,1.2747296687463383,1.274926736022579,1.275123772842552,1.2753207792203736,1.2755177551701498,1.275714700705975,1.275911615841933,1.276108500592097,1.2763053549705285,1.2765021789912792,1.2766989726683895,1.2768957360158888,1.2770924690477958,1.2772891717781187,1.2774858442208545,1.27768248638999,1.2778790982995003,1.2780756799633506,1.2782722313954953,1.2784687526098772,1.2786652436204295,1.2788617044410744,1.2790581350857226,1.2792545355682754,1.2794509059026224,1.2796472461026431,1.2798435561822061,1.2800398361551695,1.2802360860353803,1.280432305836676,1.2806284955728826,1.2808246552578153,1.2810207849052797,1.2812168845290697,1.2814129541429697,1.281608993760753,1.2818050033961823,1.2820009830630101,1.282196932774978,1.2823928525458175,1.2825887423892492,1.2827846023189837,1.2829804323487206,1.2831762324921496,1.2833720027629496,1.2835677431747892,1.2837634537413265,1.283959134476209,1.2841547853930744,1.2843504065055495,1.2845459978272507,1.2847415593717846,1.2849370911527465,1.2851325931837223,1.2853280654782873,1.2855235080500056,1.2857189209124327,1.2859143040791121,1.2861096575635782,1.2863049813793546,1.2865002755399546,1.286695540058881,1.2868907749496277,1.2870859802256764,1.2872811559005,1.2874763019875608,1.2876714185003104,1.2878665054521912,1.2880615628566348,1.288256590727062,1.288451589076885,1.2886465579195048,1.2888414972683122,1.2890364071366882,1.2892312875380039,1.2894261384856196,1.2896209599928863,1.2898157520731441,1.2900105147397238,1.290205248005946,1.2903999518851208,1.2905946263905483,1.2907892715355191,1.2909838873333135,1.2911784737972014,1.2913730309404434,1.2915675587762898,1.2917620573179807,1.2919565265787465,1.2921509665718074,1.2923453773103744,1.292539758807647,1.2927341110768167,1.292928434131064,1.293122727983559,1.2933169926474635,1.2935112281359278,1.2937054344620933,1.2938996116390908,1.2940937596800426,1.2942878785980594,1.2944819684062432,1.294676029117686,1.2948700607454697,1.2950640633026669,1.2952580368023394,1.2954519812575407,1.2956458966813136,1.295839783086691,1.2960336404866963,1.2962274688943436,1.2964212683226366,1.2966150387845694,1.296808780293127,1.297002492861284,1.2971961765020057,1.297389831228247,1.2975834570529543,1.2977770539890638,1.2979706220495018,1.2981641612471853,1.2983576715950214,1.2985511531059075,1.298744605792732,1.2989380296683737,1.2991314247457004,1.2993247910375725,1.2995181285568387,1.2997114373163394,1.2999047173289058,1.3000979686073582,1.3002911911645085,1.3004843850131589,1.3006775501661012,1.300870686636119,1.301063794435986,1.3012568735784655,1.3014499240763124,1.301642945942272,1.30183593918908,1.3020289038294623,1.3022218398761358,1.3024147473418077,1.3026076262391766,1.3028004765809305,1.3029932983797485,1.303186091648301,1.3033788563992479,1.3035715926452403,1.30376430039892,1.3039569796729193,1.3041496304798617,1.3043422528323603,1.3045348467430198,1.3047274122244352,1.3049199492891923,1.3051124579498676,1.305304938219029,1.3054973901092333,1.3056898136330302,1.3058822088029587,1.306074575631549,1.3062669141313226,1.306459224314791,1.3066515061944568,1.3068437597828135,1.3070359850923452,1.3072281821355267,1.3074203509248246,1.3076124914726948,1.3078046037915854,1.3079966878939346,1.3081887437921715,1.3083807714987166,1.308572771025981,1.3087647423863662,1.3089566855922652,1.3091486006560622,1.3093404875901313,1.3095323464068385,1.3097241771185402,1.309915979737584,1.3101077542763082,1.3102995007470424,1.310491219162107,1.3106829095338135,1.3108745718744643,1.3110662061963527,1.3112578125117633,1.3114493908329712,1.3116409411722436,1.3118324635418372,1.3120239579540012,1.3122154244209752,1.3124068629549897,1.3125982735682666,1.312789656273019,1.3129810110814508,1.313172338005757,1.3133636370581239,1.3135549082507285,1.31374615159574,1.3139373671053176,1.3141285547916124,1.3143197146667658,1.3145108467429114,1.3147019510321734,1.314893027546667,1.3150840762984994,1.315275097299768,1.3154660905625626,1.3156570560989627,1.3158479939210401,1.3160389040408582,1.3162297864704704,1.3164206412219224,1.3166114683072507,1.3168022677384832,1.3169930395276388,1.3171837836867284,1.3173745002277535,1.3175651891627072,1.317755850503574,1.3179464842623294,1.3181370904509409,1.3183276690813666,1.318518220165556,1.318708743715451,1.3188992397429837,1.319089708260078,1.319280149278649,1.3194705628106038,1.3196609488678406,1.3198513074622482,1.3200416386057081,1.320231942310093,1.320422218587266,1.3206124674490827,1.32080268890739,1.320992882974026,1.3211830496608206,1.3213731889795945,1.3215633009421608,1.3217533855603238,1.3219434428458787,1.3221334728106129,1.3223234754663056,1.3225134508247265,1.3227033988976378,1.3228933196967927,1.3230832132339363,1.323273079520805,1.3234629185691271,1.323652730390622,1.3238425149970017,1.3240322723999682,1.3242220026112164,1.3244117056424327,1.3246013815052946,1.3247910302114714,1.3249806517726246,1.3251702462004067,1.325359813506462,1.3255493537024265,1.3257388667999281,1.3259283528105863,1.3261178117460124,1.3263072436178087,1.3264966484375702,1.326686026216883,1.326875376967325,1.3270647007004661,1.327253997427868,1.3274432671610836,1.3276325099116584,1.3278217256911284,1.328010914511023,1.328200076382862,1.328389211318158,1.3285783193284146,1.328767400425128,1.3289564546197852,1.3291454819238662,1.329334482348842,1.3295234559061757,1.3297124026073226,1.3299013224637288,1.330090215486834,1.330279081688068,1.3304679210788535,1.330656733670605,1.3308455194747288,1.331034278502623,1.3312230107656775,1.3314117162752748,1.3316003950427882,1.3317890470795841,1.3319776723970203,1.3321662710064464,1.3323548429192045,1.3325433881466282,1.3327319067000432,1.3329203985907672,1.33310886383011,1.3332973024293733,1.333485714399851,1.3336740997528287,1.3338624584995844,1.3340507906513877,1.3342390962195005,1.3344273752151772,1.334615627649663,1.3348038535341966,1.334992052880008,1.3351802256983194,1.3353683720003453,1.335556491797292,1.3357445851003578,1.3359326519207337,1.3361206922696023,1.3363087061581385,1.3364966935975098,1.3366846545988746,1.3368725891733848,1.337060497332184,1.3372483790864074,1.3374362344471833,1.3376240634256318,1.3378118660328646,1.3379996422799867,1.3381873921780947,1.3383751157382773,1.3385628129716156,1.3387504838891828,1.338938128502045,1.3391257468212594,1.3393133388578764,1.3395009046229382,1.3396884441274797,1.3398759573825274,1.3400634443991004,1.3402509051882108,1.340438339760862,1.3406257481280497,1.3408131303007627,1.3410004862899816,1.3411878161066795,1.3413751197618218,1.341562397266366,1.3417496486312623,1.341936873867453,1.3421240729858734,1.3423112459974502,1.3424983929131031,1.342685513743744,1.3428726085002771,1.3430596771935996,1.3432467198346003,1.3434337364341609,1.343620727003155,1.34380769155245,1.343994630092904,1.3441815426353683,1.3443684291906872,1.3445552897696966,1.3447421243832254,1.3449289330420948,1.3451157157571183,1.345302472539102,1.345489203398845,1.3456759083471383,1.3458625873947656,1.346049240552503,1.3462358678311195,1.3464224692413762,1.3466090447940269,1.3467955944998182,1.346982118369489,1.3471686164137706,1.3473550886433874,1.3475415350690558,1.3477279557014852,1.3479143505513775,1.348100719629427,1.3482870629463208,1.3484733805127387,1.348659672339353,1.348845938436828,1.3490321788158224,1.3492183934869855,1.3494045824609604,1.349590745748383,1.3497768833598807,1.3499629953060752,1.3501490815975796,1.350335142245,1.3505211772589358,1.3507071866499782,1.3508931704287117,1.3510791286057133,1.3512650611915527,1.3514509681967923,1.351636849631988,1.3518227055076868,1.35200853583443,1.352194340622751,1.352380119883176,1.352565873626224,1.3527516018624068,1.352937304602229,1.353122981856188,1.3533086336347742,1.3534942599484698,1.3536798608077516,1.3538654362230873,1.354050986204939,1.3542365107637606,1.3544220099099993,1.354607483654095,1.3547929320064807,1.3549783549775818,1.355163752577817,1.3553491248175975,1.355534471707328,1.3557197932574054,1.3559050894782199,1.3560903603801542,1.3562756059735845,1.3564608262688793,1.3566460212764007,1.356831191006503,1.3570163354695337,1.3572014546758338,1.3573865486357364,1.3575716173595682,1.3577566608576483,1.3579416791402892,1.358126672217796,1.3583116401004678,1.3584965827985949,1.3586815003224622,1.3588663926823468,1.359051259888519,1.3592361019512422,1.3594209188807729,1.3596057106873605,1.359790477381247,1.3599752189726682,1.3601599354718525,1.3603446268890216,1.3605292932343898,1.3607139345181651,1.3608985507505482,1.3610831419417329,1.3612677081019062,1.3614522492412482,1.361636765369932,1.3618212564981236,1.3620057226359827,1.3621901637936615,1.362374579981306,1.3625589712090544,1.362743337487039,1.3629276788253848,1.3631119952342097,1.3632962867236254,1.3634805533037362,1.3636647949846399,1.363849011776427,1.3640332036891822,1.3642173707329823,1.3644015129178977,1.3645856302539923,1.364769722751323,1.3649537904199394,1.3651378332698851,1.3653218513111969,1.3655058445539043,1.3656898130080302,1.365873756683591,1.3660576755905962,1.3662415697390486,1.3664254391389443,1.3666092838002726,1.366793103733016,1.3669768989471507,1.3671606694526455,1.367344415259463,1.367528136377559,1.367711832816883,1.3678955045873766,1.3680791516989765,1.3682627741616114,1.3684463719852034,1.3686299451796686,1.3688134937549161,1.3689970177208484,1.3691805170873614,1.369363991864344,1.3695474420616793,1.3697308676892428,1.369914268756904,1.3700976452745257,1.370280997251964,1.3704643246990686,1.3706476276256825,1.3708309060416417,1.3710141599567764,1.37119738938091,1.3713805943238586,1.371563774795433,1.3717469308054364,1.3719300623636657,1.3721131694799116,1.3722962521639581,1.3724793104255826,1.3726623442745562,1.3728453537206429,1.3730283387736009,1.3732112994431818,1.3733942357391298,1.373577147671184,1.3737600352490762,1.3739428984825315,1.3741257373812694,1.374308551955002,1.3744913422134355,1.3746741081662697,1.3748568498231974,1.3750395671939055,1.3752222602880744,1.3754049291153778,1.3755875736854832,1.3757701940080516,1.3759527900927375,1.3761353619491892,1.3763179095870486,1.376500433015951,1.3766829322455254,1.3768654072853943,1.3770478581451742,1.377230284834475,1.3774126873629,1.3775950657400466,1.3777774199755055,1.3779597500788612,1.3781420560596918,1.3783243379275691,1.3785065956920586,1.3786888293627197,1.3788710389491046,1.3790532244607605,1.379235385907227,1.3794175232980386,1.3795996366427226,1.3797817259508003,1.3799637912317868,1.3801458324951907,1.3803278497505151,1.3805098430072555,1.3806918122749026,1.3808737575629395,1.3810556788808441,1.3812375762380875,1.3814194496441345,1.381601299108444,1.381783124640469,1.3819649262496552,1.382146703945443,1.3823284577372663,1.3825101876345527,1.3826918936467238,1.3828735757831951,1.3830552340533757,1.3832368684666683,1.3834184790324697,1.3836000657601708,1.3837816286591562,1.3839631677388036,1.3841446830084854,1.3843261744775681,1.3845076421554108,1.3846890860513676,1.3848705061747866,1.3850519025350085,1.385233275141369,1.3854146240031975,1.3855959491298169,1.3857772505305443,1.385958528214691,1.3861397821915613,1.3863210124704546,1.3865022190606633,1.386683401971474,1.3868645612121675,1.3870456967920182,1.3872268087202944,1.3874078970062587,1.3875889616591675,1.3877700026882709,1.3879510201028136,1.3881320139120334,1.3883129841251631,1.3884939307514284,1.3886748538000497,1.3888557532802415,1.3890366292012115,1.3892174815721623,1.38939831040229,1.3895791157007849,1.3897598974768313,1.3899406557396072,1.3901213904982854,1.390302101762032,1.3904827895400076,1.3906634538413662,1.3908440946752572,1.3910247120508221,1.391205305977198,1.391385876463516,1.3915664235189005,1.3917469471524704,1.3919274473733385,1.3921079241906122,1.3922883776133925,1.3924688076507745,1.3926492143118476,1.3928295976056957,1.3930099575413957,1.3931902941280196,1.3933706073746337,1.3935508972902972,1.3937311638840648,1.3939114071649845,1.3940916271420987,1.3942718238244438,1.3944519972210512,1.394632147340945,1.3948122741931448,1.3949923777866637,1.395172458130509,1.3953525152336825,1.39553254910518,1.3957125597539912,1.3958925471891006,1.3960725114194867,1.3962524524541218,1.3964323703019732,1.3966122649720014,1.3967921364731624,1.396971984814405,1.3971518100046736,1.397331612052906,1.3975113909680343,1.3976911467589852,1.3978708794346795,1.3980505890040322,1.3982302754759526,1.3984099388593445,1.3985895791631056,1.3987691963961282,1.3989487905672986,1.3991283616854975,1.3993079097596002,1.399487434798476,1.3996669368109884,1.3998464158059958,1.4000258717923502,1.4002053047788983,1.400384714774481,1.4005641017879338,1.4007434658280862,1.4009228069037623,1.4011021250237803,1.4012814201969532,1.4014606924320878,1.401639941737986,1.401819168123443,1.4019983715972493,1.4021775521681896,1.4023567098450427,1.4025358446365819,1.402714956551575,1.4028940455987846,1.4030731117869666,1.4032521551248722,1.4034311756212472,1.403610173284831,1.4037891481243578,1.4039681001485567,1.4041470293661502,1.4043259357858566,1.4045048194163874,1.404683680266449,1.404862518344743,1.405041333659964,1.4052201262208022,1.405398896035942,1.405577643114062,1.4057563674638358,1.405935069093931,1.4061137480130095,1.4062924042297287,1.4064710377527394,1.4066496485906876,1.4068282367522136,1.4070068022459519,1.407185345080532,1.4073638652645781,1.407542362806708,1.407720837715535,1.4078992899996665,1.4080777196677043,1.408256126728245,1.40843451118988,1.4086128730611946,1.4087912123507695,1.4089695290671789,1.4091478232189925,1.4093260948147743,1.4095043438630828,1.409682570372471,1.4098607743514866,1.4100389558086721,1.4102171147525644,1.4103952511916953,1.4105733651345902,1.4107514565897705,1.4109295255657515,1.4111075720710429,1.4112855961141497,1.411463597703571,1.4116415768478006,1.4118195335553274,1.4119974678346343,1.4121753796941994,1.4123532691424954,1.4125311361879889,1.4127089808391422,1.412886803104412,1.413064602992249,1.4132423805110996,1.413420135669404,1.4135978684755979,1.413775578938111,1.413953267065368,1.4141309328657885,1.4143085763477865,1.4144861975197704,1.4146637963901445,1.4148413729673068,1.41501892725965,1.4151964592755621,1.4153739690234257,1.4155514565116176,1.4157289217485103,1.4159063647424701,1.4160837855018586,1.416261184035032,1.4164385603503415,1.4166159144561328,1.4167932463607464,1.4169705560725174,1.4171478435997764,1.4173251089508483,1.4175023521340524,1.4176795731577034,1.4178567720301107,1.4180339487595783,1.4182111033544054,1.4183882358228852,1.4185653461733068,1.4187424344139534,1.4189195005531035,1.4190965445990296,1.41927356656,1.4194505664442774,1.4196275442601192,1.4198045000157782,1.4199814337195016,1.4201583453795315,1.4203352350041047,1.4205121026014536,1.4206889481798046,1.4208657717473796,1.421042573312395,1.4212193528830626,1.4213961104675883,1.4215728460741734,1.4217495597110141,1.4219262513863016,1.4221029211082217,1.4222795688849552,1.4224561947246779,1.422632798635561,1.4228093806257696,1.4229859407034642,1.4231624788768007,1.4233389951539293,1.4235154895429953,1.4236919620521398,1.4238684126894972,1.4240448414631983,1.4242212483813683,1.4243976334521269,1.42457399668359,1.4247503380838673,1.424926657661064,1.4251029554232804,1.4252792313786116,1.4254554855351473,1.4256317179009732,1.425807928484169,1.4259841172928098,1.426160284334966,1.4263364296187027,1.42651255315208,1.426688654943153,1.426864734999972,1.4270407933305822,1.427216829943024,1.4273928448453324,1.4275688380455385,1.427744809551667,1.4279207593717387,1.4280966875137693,1.428272593985769,1.4284484787957437,1.4286243419516944,1.4288001834616164,1.428976003333501,1.4291518015753342,1.4293275781950967,1.4295033332007652,1.4296790666003103,1.4298547784016988,1.4300304686128924,1.4302061372418473,1.4303817842965154,1.4305574097848435,1.4307330137147731,1.430908596094242,1.4310841569311818,1.4312596962335202,1.4314352140091797,1.4316107102660776,1.431786185012127,1.4319616382552354,1.4321370700033063,1.4323124802642375,1.4324878690459228,1.4326632363562506,1.4328385822031047,1.4330139065943641,1.4331892095379024,1.4333644910415895,1.4335397511132895,1.433714989760862,1.4338902069921624,1.4340654028150401,1.4342405772373408,1.434415730266905,1.4345908619115677,1.4347659721791606,1.4349410610775095,1.4351161286144358,1.4352911747977561,1.4354661996352824,1.4356412031348216,1.4358161853041758,1.4359911461511425,1.4361660856835148,1.436341003909081,1.4365159008356236,1.436690776470922,1.4368656308227497,1.4370404638988754,1.437215275707064,1.4373900662550751,1.4375648355506636,1.4377395836015794,1.4379143104155687,1.4380890160003719,1.438263700363725,1.4384383635133597,1.4386130054570023,1.4387876262023755,1.438962225757196,1.4391368041291768,1.4393113613260258,1.4394858973554465,1.4396604122251373,1.4398349059427922,1.4400093785161006,1.4401838299527474,1.440358260260412,1.4405326694467702,1.4407070575194927,1.4408814244862456,1.44105577035469,1.4412300951324832,1.441404398827277,1.4415786814467189,1.4417529429984521,1.4419271834901148,1.4421014029293406,1.4422756013237588,1.4424497786809933,1.4426239350086647,1.4427980703143877,1.4429721846057733,1.4431462778904276,1.443320350175952,1.4434944014699431,1.443668431779994,1.4438424411136914,1.4440164294786195,1.4441903968823564,1.4443643433324762,1.4445382688365485,1.4447121734021382,1.4448860570368054,1.4450599197481064,1.4452337615435924,1.4454075824308097,1.4455813824173012,1.445755161510604,1.4459289197182514,1.4461026570477724,1.4462763735066904,1.4464500691025255,1.446623743842793,1.4467973977350026,1.446971030786661,1.44714464300527,1.4473182343983257,1.4474918049733214,1.447665354737745,1.44783888369908,1.4480123918648056,1.4481858792423963,1.4483593458393222,1.4485327916630493,1.4487062167210383,1.4488796210207462,1.4490530045696253,1.4492263673751231,1.4493997094446833,1.4495730307857448,1.4497463314057417,1.4499196113121047,1.4500928705122584,1.4502661090136246,1.45043932682362,1.4506125239496563,1.4507857003991422,1.4509588561794808,1.451131991298071,1.4513051057623072,1.4514781995795798,1.4516512727572746,1.4518243253027734,1.4519973572234524,1.4521703685266847,1.4523433592198385,1.4525163293102772,1.4526892788053605,1.4528622077124436,1.453035116038877,1.453208003792007,1.4533808709791756,1.4535537176077202,1.4537265436849744,1.4538993492182664,1.4540721342149212,1.4542448986822587,1.4544176426275948,1.4545903660582409,1.454763068981504,1.4549357514046872,1.4551084133350884,1.4552810547800024,1.455453675746718,1.4556262762425216,1.455798856274694,1.455971415850512,1.4561439549772481,1.4563164736621703,1.4564889719125427,1.4566614497356252,1.4568339071386724,1.4570063441289358,1.4571787607136621,1.4573511569000939,1.4575235326954685,1.4576958881070208,1.4578682231419797,1.458040537807571,1.458212832111015,1.4583851060595294,1.458557359660326,1.4587295929206137,1.4589018058475958,1.4590739984484726,1.4592461707304392,1.4594183227006872,1.4595904543664036,1.459762565734771,1.459934656812968,1.4601067276081692,1.4602787781275441,1.460450808378259,1.4606228183674757,1.460794808102351,1.4609667775900388,1.4611387268376879,1.4613106558524427,1.4614825646414442,1.461654453211829,1.4618263215707286,1.4619981697252717,1.4621699976825822,1.462341805449779,1.462513593033978,1.4626853604422905,1.4628571076818238,1.4630288347596803,1.463200541682959,1.4633722284587547,1.463543895094158,1.4637155415962544,1.4638871679721268,1.4640587742288527,1.464230360373506,1.464401926413157,1.4645734723548702,1.464744998205708,1.464916503972727,1.4650879896629805,1.4652594552835176,1.4654309008413833,1.465602326343618,1.4657737317972588,1.4659451172093378,1.4661164825868838,1.4662878279369211,1.4664591532664695,1.4666304585825454,1.4668017438921612,1.466973009202324,1.4671442545200384,1.4673154798523038,1.467486685206116,1.4676578705884662,1.4678290360063422,1.4680001814667274,1.4681713069766016,1.4683424125429392,1.4685134981727122,1.4686845638728876,1.4688556096504282,1.4690266355122934,1.4691976414654377,1.4693686275168127,1.4695395936733653,1.4697105399420378,1.4698814663297697,1.4700523728434953,1.4702232594901457,1.4703941262766473,1.4705649732099233,1.470735800296892,1.4709066075444683,1.471077394959563,1.4712481625490823,1.4714189103199293,1.4715896382790026,1.4717603464331963,1.471931034789402,1.4721017033545054,1.47227235213539,1.4724429811389341,1.4726135903720121,1.4727841798414951,1.4729547495542497,1.4731252995171387,1.473295829737021,1.4734663402207508,1.47363683097518,1.4738073020071547,1.4739777533235179,1.4741481849311087,1.4743185968367623,1.4744889890473094,1.4746593615695776,1.4748297144103897,1.4750000475765648,1.4751703610749185,1.4753406549122623,1.4755109290954032,1.475681183631145,1.4758514185262872,1.4760216337876255,1.4761918294219518,1.4763620054360536,1.4765321618367149,1.476702298630716,1.4768724158248325,1.477042513425837,1.4772125914404979,1.4773826498755793,1.4775526887378418,1.477722708034042,1.4778927077709327,1.478062687955263,1.4782326485937773,1.4784025896932174,1.4785725112603199,1.4787424133018183,1.4789122958244423,1.4790821588349174,1.4792520023399653,1.4794218263463041,1.4795916308606478,1.4797614158897063,1.4799311814401865,1.4801009275187902,1.4802706541322164,1.4804403612871602,1.480610048990312,1.4807797172483594,1.4809493660679856,1.4811189954558701,1.4812886054186885,1.4814581959631126,1.4816277670958105,1.4817973188234463,1.4819668511526807,1.48213636409017,1.482305857642567,1.4824753318165207,1.4826447866186763,1.4828142220556753,1.482983638134155,1.4831530348607493,1.4833224122420887,1.4834917702847987,1.483661108995502,1.4838304283808175,1.4839997284473596,1.48416900920174,1.4843382706505657,1.48450751280044,1.4846767356579633,1.4848459392297315,1.4850151235223366,1.4851842885423672,1.4853534342964083,1.4855225607910407,1.4856916680328422,1.4858607560283856,1.4860298247842414,1.4861988743069754,1.4863679046031495,1.4865369156793231,1.4867059075420503,1.4868748801978828,1.4870438336533682,1.4872127679150497,1.4873816829894673,1.4875505788831578,1.4877194556026532,1.4878883131544827,1.4880571515451713,1.4882259707812406,1.4883947708692085,1.4885635518155886,1.4887323136268917,1.4889010563096243,1.4890697798702894,1.4892384843153863,1.4894071696514108,1.4895758358848545,1.4897444830222062,1.4899131110699502,1.4900817200345673,1.490250309922535,1.4904188807403271,1.490587432494413,1.4907559651912594,1.490924478837329,1.4910929734390803,1.4912614490029692,1.491429905535447,1.4915983430429618,1.4917667615319583,1.491935161008877,1.4921035414801551,1.492271902952226,1.4924402454315198,1.4926085689244626,1.4927768734374771,1.492945158976982,1.4931134255493932,1.4932816731611223,1.4934499018185772,1.4936181115281628,1.4937863022962796,1.4939544741293254,1.4941226270336938,1.4942907610157747,1.4944588760819553,1.4946269722386178,1.494795049492142,1.4949631078489036,1.4951311473152746,1.495299167897624,1.4954671696023165,1.4956351524357137,1.4958031164041736,1.4959710615140507,1.496138987771695,1.4963068951834544,1.4964747837556724,1.496642653494689,1.4968105044068405,1.4969783364984606,1.4971461497758778,1.4973139442454186,1.497481719913405,1.497649476786156,1.4978172148699866,1.4979849341712088,1.4981526346961307,1.4983203164510568,1.4984879794422885,1.498655623676123,1.498823249158855,1.4989908558967742,1.4991584438961683,1.4993260131633206,1.4994935637045115,1.4996610955260168,1.49982860863411,1.4999961030350601,1.500163578735134,1.5003310357405932,1.5004984740576972,1.5006658936927018,1.5008332946518586,1.5010006769414161,1.5011680405676198,1.5013353855367109,1.5015027118549276,1.5016700195285042,1.5018373085636723,1.5020045789666596,1.5021718307436902,1.5023390639009846,1.5025062784447605,1.5026734743812313,1.5028406517166077,1.5030078104570965,1.5031749506089014,1.5033420721782218,1.5035091751712548,1.5036762595941935,1.5038433254532273,1.5040103727545426,1.5041774015043223,1.5043444117087459,1.504511403373989,1.5046783765062244,1.504845331111621,1.5050122671963446,1.5051791847665574,1.5053460838284185,1.5055129643880827,1.5056798264517028,1.505846670025427,1.5060134951154005,1.506180301727765,1.5063470898686593,1.506513859544218,1.5066806107605728,1.5068473435238523,1.5070140578401805,1.5071807537156798,1.5073474311564674,1.5075140901686586,1.5076807307583644,1.5078473529316927,1.5080139566947484,1.508180542053632,1.5083471090144418,1.5085136575832723,1.508680187766214,1.508846699569355,1.50901319299878,1.5091796680605694,1.5093461247608009,1.5095125631055493,1.5096789831008848,1.5098453847528754,1.5100117680675855,1.5101781330510757,1.510344479709404,1.510510808048624,1.510677118074787,1.510843409793941,1.5110096832121291,1.511175938335393,1.5113421751697704,1.5115083937212952,1.5116745939959988,1.5118407759999084,1.5120069397390483,1.5121730852194397,1.5123392124471005,1.5125053214280448,1.512671412168284,1.5128374846738255,1.5130035389506744,1.5131695750048315,1.5133355928422945,1.5135015924690585,1.5136675738911147,1.5138335371144511,1.5139994821450524,1.5141654089889005,1.5143313176519735,1.514497208140246,1.5146630804596897,1.514828934616273,1.5149947706159617,1.515160588464717,1.5153263881684977,1.5154921697332593,1.5156579331649538,1.5158236784695296,1.515989405652933,1.516155114721106,1.516320805679988,1.5164864785355143,1.5166521332936178,1.516817769960228,1.516983388541271,1.5171489890426693,1.517314571470343,1.5174801358302084,1.5176456821281785,1.517811210370164,1.517976720562071,1.5181422127098028,1.5183076868192604,1.5184731428963407,1.5186385809469374,1.5188040009769415,1.51896940299224,1.5191347869987177,1.5193001530022554,1.5194655010087308,1.5196308310240192,1.5197961430539912,1.5199614371045158,1.5201267131814578,1.5202919712906793,1.5204572114380386,1.5206224336293916,1.5207876378705907,1.5209528241674848,1.5211179925259202,1.5212831429517393,1.5214482754507823,1.5216133900288853,1.5217784866918818,1.521943565445602,1.5221086262958725,1.5222736692485175,1.5224386943093577,1.5226037014842109,1.5227686907788909,1.522933662199209,1.5230986157509732,1.523263551439989,1.5234284692720579,1.5235933692529782,1.5237582513885461,1.5239231156845534,1.5240879621467895,1.5242527907810408,1.5244176015930897,1.5245823945887165,1.524747169773698,1.5249119271538076,1.525076666734816,1.5252413885224902,1.5254060925225947,1.525570778740891,1.5257354471831364,1.5259000978550865,1.5260647307624928,1.526229345911104,1.5263939433066662,1.5265585229549214,1.5267230848616091,1.526887629032466,1.527052155473225,1.5272166641896163,1.5273811551873675,1.527545628472202,1.5277100840498408,1.5278745219260017,1.5280389421063998,1.5282033445967464,1.5283677294027507,1.5285320965301177,1.52869644598455,1.5288607777717471,1.5290250918974053,1.5291893883672179,1.529353667186875,1.529517928362064,1.529682171898469,1.529846397801771,1.530010606077648,1.530174796731775,1.5303389697698238,1.5305031251974635,1.53066726302036,1.5308313832441758,1.5309954858745711,1.5311595709172026,1.5313236383777233,1.531487688261785,1.5316517205750342,1.5318157353231163,1.531979732511673,1.5321437121463424,1.5323076742327604,1.5324716187765595,1.5326355457833691,1.532799455258816,1.5329633472085236,1.5331272216381122,1.5332910785531997,1.5334549179594004,1.533618739862326,1.533782544267585,1.5339463311807826,1.5341101006075215,1.5342738525534017,1.5344375870240192,1.5346013040249677,1.534765003561838,1.5349286856402176,1.535092350265691,1.53525599744384,1.5354196271802432,1.5355832394804765,1.5357468343501124,1.5359104117947209,1.5360739718198686,1.5362375144311191,1.536401039634034,1.5365645474341707,1.536728037837084,1.5368915108483263,1.5370549664734467,1.5372184047179913,1.537381825587503,1.537545229087522,1.5377086152235857,1.5378719840012285,1.5380353354259815,1.5381986695033736,1.53836198623893,1.5385252856381735,1.5386885677066235,1.5388518324497968,1.5390150798732072,1.5391783099823657,1.5393415227827802,1.539504718279956,1.5396678964793946,1.5398310573865954,1.5399942010070549,1.5401573273462665,1.5403204364097205,1.5404835282029046,1.5406466027313033,1.5408096600003984,1.5409727000156688,1.5411357227825906,1.5412987283066364,1.541461716593277,1.541624687647979,1.5417876414762073,1.5419505780834233,1.5421134974750856,1.5422763996566495,1.5424392846335686,1.5426021524112923,1.542765002995268,1.5429278363909398,1.543090652603749,1.5432534516391339,1.5434162335025305,1.5435789981993713,1.5437417457350864,1.5439044761151026,1.5440671893448439,1.544229885429732,1.5443925643751852,1.5445552261866191,1.5447178708694462,1.5448804984290767,1.5450431088709173,1.5452057022003725,1.5453682784228435,1.545530837543729,1.5456933795684247,1.545855904502323,1.5460184123508143,1.5461809031192855,1.5463433768131212,1.5465058334377029,1.546668272998409,1.5468306955006155,1.5469931009496958,1.5471554893510193,1.5473178607099543,1.5474802150318647,1.5476425523221127,1.5478048725860571,1.5479671758290543,1.5481294620564572,1.5482917312736164,1.54845398348588,1.5486162186985923,1.5487784369170963,1.5489406381467306,1.549102822392832,1.5492649896607344,1.5494271399557684,1.5495892732832623,1.549751389648542,1.5499134890569293,1.5500755715137444,1.5502376370243043,1.550399685593923,1.5505617172279125,1.550723731931581,1.5508857297102345,1.5510477105691765,1.551209674513707,1.551371621549124,1.551533551680722,1.551695464913793,1.5518573612536268,1.5520192407055098,1.5521811032747255,1.5523429489665552,1.5525047777862773,1.5526665897391672,1.552828384830498,1.5529901630655392,1.5531519244495584,1.5533136689878204,1.5534753966855868,1.5536371075481166,1.5537988015806665,1.55396047878849,1.5541221391768376,1.554283782750958,1.5544454095160962,1.5546070194774952,1.554768612640395,1.5549301890100327,1.5550917485916427,1.555253291390457,1.5554148174117048,1.5555763266606124,1.5557378191424034,1.5558992948622987,1.556060753825517,1.556222196037273,1.5563836215027804,1.556545030227249,1.556706422215886,1.5568677974738965,1.5570291560064822,1.557190497818843,1.557351822916175,1.5575131313036723,1.557674422986526,1.5578356979699253,1.5579969562590554,1.5581581978591001,1.5583194227752395,1.5584806310126518,1.5586418225765117,1.5588029974719921,1.5589641557042626,1.5591252972784906,1.5592864221998404,1.5594475304734736,1.55960862210455,1.5597696970982255,1.5599307554596542,1.5600917971939872,1.5602528223063727,1.560413830801957,1.5605748226858833,1.5607357979632916,1.5608967566393206,1.561057698719105,1.5612186242077772,1.5613795331104676,1.5615404254323033,1.5617013011784089,1.561862160353907,1.5620230029639162,1.5621838290135535,1.5623446385079334,1.5625054314521667,1.562666207851363,1.562826967710628,1.5629877110350654,1.5631484378297764,1.5633091480998593,1.5634698418504096,1.5636305190865207,1.5637911798132829,1.563951824035784,1.5641124517591096,1.5642730629883423,1.564433657728562,1.5645942359848464,1.5647547977622698,1.564915343065905,1.5650758719008213,1.565236384272086,1.5653968801847633,1.5655573596439152,1.5657178226546011,1.5658782692218773,1.566038699350798,1.5661991130464146,1.5663595103137764,1.5665198911579292,1.566680255583917,1.566840603596781,1.5670009352015595,1.5671612504032888,1.5673215492070018,1.56748183161773,1.5676420976405012,1.5678023472803413,1.5679625805422732,1.5681227974313179,1.568282997952493,1.5684431821108142,1.5686033499112941,1.568763501358943,1.568923636458769,1.569083755215777,1.56924385763497,1.5694039437213478,1.5695640134799078,1.5697240669156454,1.5698841040335527,1.5700441248386199,1.5702041293358342,1.5703641175301806,1.5705240894266408,1.5706840450301953,1.5708439843458208,1.5710039073784923,1.571163814133182,1.5713237046148592,1.571483578828491,1.5716434367790424,1.5718032784714748,1.5719631039107482,1.5721229131018195,1.572282706049643,1.5724424827591708,1.5726022432353524,1.5727619874831347,1.572921715507462,1.573081427313276,1.5732411229055165,1.5734008022891206,1.573560465469022,1.5737201124501532,1.5738797432374432,1.5740393578358187,1.5741989562502046,1.5743585384855228,1.574518104546692,1.57467765443863,1.5748371881662506,1.5749967057344658,1.5751562071481853,1.5753156924123157,1.5754751615317617,1.5756346145114255,1.575794051356206,1.5759534720710007,1.576112876660704,1.5762722651302081,1.5764316374844023,1.5765909937281741,1.5767503338664077,1.5769096579039859,1.5770689658457877,1.5772282576966912,1.5773875334615703,1.5775467931452982,1.577706036752744,1.5778652642887758,1.5780244757582582,1.5781836711660535,1.5783428505170225,1.578502013816022,1.5786611610679078,1.5788202922775318,1.5789794074497452,1.5791385065893953,1.5792975897013275,1.579456656790385,1.579615707861408,1.5797747429192348,1.5799337619687008,1.5800927650146395,1.5802517520618813,1.5804107231152549,1.580569678179586,1.580728617259698,1.5808875403604123,1.5810464474865473,1.581205338642919,1.5813642138343418,1.5815230730656265,1.581681916341582,1.5818407436670157,1.581999555046731,1.5821583504855294,1.5823171299882108,1.582475893559572,1.5826346412044072,1.5827933729275088,1.5829520887336663,1.5831107886276672,1.5832694726142962,1.5834281406983357,1.5835867928845662,1.583745429177765,1.5839040495827075,1.584062654104167,1.5842212427469133,1.5843798155157152,1.5845383724153381,1.5846969134505455,1.5848554386260985,1.5850139479467555,1.5851724414172728,1.5853309190424043],"x":[0.0,0.0001599360255897641,0.0003198720511795282,0.0004798080767692923,0.0006397441023590564,0.0007996801279488205,0.0009596161535385846,0.0011195521791283487,0.0012794882047181128,0.0014394242303078768,0.001599360255897641,0.001759296281487405,0.0019192323070771691,0.0020791683326669332,0.0022391043582566973,0.0023990403838464614,0.0025589764094362255,0.0027189124350259896,0.0028788484606157537,0.003038784486205518,0.003198720511795282,0.003358656537385046,0.00351859256297481,0.003678528588564574,0.0038384646141543383,0.003998400639744102,0.0041583366653338664,0.0043182726909236305,0.004478208716513395,0.004638144742103159,0.004798080767692923,0.004958016793282687,0.005117952818872451,0.005277888844462215,0.005437824870051979,0.005597760895641743,0.005757696921231507,0.0059176329468212715,0.006077568972411036,0.0062375049980008,0.006397441023590564,0.006557377049180328,0.006717313074770092,0.006877249100359856,0.00703718512594962,0.007197121151539384,0.007357057177129148,0.007516993202718912,0.0076769292283086765,0.00783686525389844,0.007996801279488205,0.008156737305077969,0.008316673330667733,0.008476609356257497,0.008636545381847261,0.008796481407437025,0.00895641743302679,0.009116353458616553,0.009276289484206317,0.009436225509796082,0.009596161535385846,0.00975609756097561,0.009916033586565374,0.010075969612155138,0.010235905637744902,0.010395841663334666,0.01055577768892443,0.010715713714514194,0.010875649740103958,0.011035585765693723,0.011195521791283487,0.01135545781687325,0.011515393842463015,0.011675329868052779,0.011835265893642543,0.011995201919232307,0.012155137944822071,0.012315073970411835,0.0124750099960016,0.012634946021591363,0.012794882047181128,0.012954818072770892,0.013114754098360656,0.01327469012395042,0.013434626149540184,0.013594562175129948,0.013754498200719712,0.013914434226309476,0.01407437025189924,0.014234306277489004,0.014394242303078768,0.014554178328668533,0.014714114354258297,0.01487405037984806,0.015033986405437825,0.015193922431027589,0.015353858456617353,0.015513794482207117,0.01567373050779688,0.015833666533386647,0.01599360255897641,0.016153538584566175,0.016313474610155938,0.016473410635745703,0.016633346661335466,0.01679328268692523,0.016953218712514994,0.01711315473810476,0.017273090763694522,0.017433026789284288,0.01759296281487405,0.017752898840463816,0.01791283486605358,0.018072770891643344,0.018232706917233107,0.018392642942822873,0.018552578968412635,0.0187125149940024,0.018872451019592163,0.01903238704518193,0.01919232307077169,0.019352259096361457,0.01951219512195122,0.019672131147540985,0.019832067173130748,0.019992003198720514,0.020151939224310276,0.02031187524990004,0.020471811275489804,0.02063174730107957,0.020791683326669332,0.020951619352259098,0.02111155537784886,0.021271491403438626,0.02143142742902839,0.021591363454618154,0.021751299480207917,0.021911235505797683,0.022071171531387445,0.02223110755697721,0.022391043582566973,0.02255097960815674,0.0227109156337465,0.022870851659336267,0.02303078768492603,0.023190723710515795,0.023350659736105558,0.023510595761695324,0.023670531787285086,0.023830467812874852,0.023990403838464614,0.02415033986405438,0.024310275889644142,0.024470211915233908,0.02463014794082367,0.024790083966413436,0.0249500199920032,0.025109956017592965,0.025269892043182727,0.025429828068772493,0.025589764094362255,0.02574970011995202,0.025909636145541783,0.02606957217113155,0.02622950819672131,0.026389444222311077,0.02654938024790084,0.026709316273490605,0.026869252299080368,0.027029188324670134,0.027189124350259896,0.027349060375849662,0.027508996401439424,0.02766893242702919,0.027828868452618952,0.027988804478208718,0.02814874050379848,0.028308676529388246,0.02846861255497801,0.028628548580567775,0.028788484606157537,0.028948420631747303,0.029108356657337065,0.02926829268292683,0.029428228708516593,0.02958816473410636,0.02974810075969612,0.029908036785285887,0.03006797281087565,0.030227908836465416,0.030387844862055178,0.030547780887644944,0.030707716913234706,0.030867652938824472,0.031027588964414234,0.031187524990004,0.03134746101559376,0.03150739704118353,0.031667333066773294,0.03182726909236305,0.03198720511795282,0.032147141143542585,0.03230707716913235,0.03246701319472211,0.032626949220311875,0.03278688524590164,0.03294682127149141,0.033106757297081166,0.03326669332267093,0.0334266293482607,0.03358656537385046,0.03374650139944022,0.03390643742502999,0.034066373450619754,0.03422630947620952,0.03438624550179928,0.034546181527389044,0.03470611755297881,0.034866053578568576,0.035025989604158335,0.0351859256297481,0.03534586165533787,0.03550579768092763,0.03566573370651739,0.03582566973210716,0.03598560575769692,0.03614554178328669,0.03630547780887645,0.036465413834466213,0.03662534986005598,0.036785285885645745,0.036945221911235504,0.03710515793682527,0.037265093962415036,0.0374250299880048,0.03758496601359456,0.037744902039184326,0.03790483806477409,0.03806477409036386,0.03822471011595362,0.03838464614154338,0.03854458216713315,0.038704518192722914,0.03886445421831267,0.03902439024390244,0.039184326269492205,0.03934426229508197,0.03950419832067173,0.039664134346261495,0.03982407037185126,0.03998400639744103,0.040143942423030786,0.04030387844862055,0.04046381447421032,0.04062375049980008,0.04078368652538984,0.04094362255097961,0.041103558576569374,0.04126349460215914,0.0414234306277489,0.041583366653338664,0.04174330267892843,0.041903238704518196,0.042063174730107955,0.04222311075569772,0.04238304678128749,0.04254298280687725,0.04270291883246701,0.04286285485805678,0.04302279088364654,0.04318272690923631,0.04334266293482607,0.043502598960415834,0.0436625349860056,0.043822471011595365,0.043982407037185124,0.04414234306277489,0.044302279088364656,0.04446221511395442,0.04462215113954418,0.044782087165133946,0.04494202319072371,0.04510195921631348,0.04526189524190324,0.045421831267493,0.04558176729308277,0.045741703318672534,0.04590163934426229,0.04606157536985206,0.046221511395441825,0.04638144742103159,0.04654138344662135,0.046701319472211116,0.04686125549780088,0.04702119152339065,0.047181127548980406,0.04734106357457017,0.04750099960015994,0.047660935625749704,0.04782087165133946,0.04798080767692923,0.048140743702518994,0.04830067972810876,0.04846061575369852,0.048620551779288285,0.04878048780487805,0.048940423830467816,0.049100359856057575,0.04926029588164734,0.04942023190723711,0.04958016793282687,0.04974010395841663,0.0499000399840064,0.05005997600959616,0.05021991203518593,0.05037984806077569,0.050539784086365454,0.05069972011195522,0.050859656137544985,0.051019592163134744,0.05117952818872451,0.051339464214314276,0.05149940023990404,0.0516593362654938,0.051819272291083567,0.05197920831667333,0.0521391443422631,0.05229908036785286,0.05245901639344262,0.05261895241903239,0.052778888444622155,0.05293882447021191,0.05309876049580168,0.053258696521391445,0.05341863254698121,0.05357856857257097,0.053738504598160736,0.0538984406237505,0.05405837664934027,0.054218312674930026,0.05437824870051979,0.05453818472610956,0.054698120751699324,0.05485805677728908,0.05501799280287885,0.055177928828468614,0.05533786485405838,0.05549780087964814,0.055657736905237905,0.05581767293082767,0.055977608956417436,0.056137544982007195,0.05629748100759696,0.05645741703318673,0.05661735305877649,0.05677728908436625,0.05693722510995602,0.05709716113554578,0.05725709716113555,0.05741703318672531,0.057576969212315074,0.05773690523790484,0.057896841263494606,0.058056777289084364,0.05821671331467413,0.058376649340263896,0.05853658536585366,0.05869652139144342,0.05885645741703319,0.05901639344262295,0.05917632946821272,0.05933626549380248,0.05949620151939224,0.05965613754498201,0.059816073570571775,0.059976009596161534,0.0601359456217513,0.060295881647341065,0.06045581767293083,0.06061575369852059,0.060775689724110356,0.06093562574970012,0.06109556177528989,0.061255497800879646,0.06141543382646941,0.06157536985205918,0.061735305877648944,0.0618952419032387,0.06205517792882847,0.062215113954418234,0.062375049980008,0.06253498600559776,0.06269492203118752,0.06285485805677729,0.06301479408236706,0.06317473010795682,0.06333466613354659,0.06349460215913634,0.0636545381847261,0.06381447421031587,0.06397441023590564,0.0641343462614954,0.06429428228708517,0.06445421831267494,0.0646141543382647,0.06477409036385445,0.06493402638944422,0.06509396241503398,0.06525389844062375,0.06541383446621352,0.06557377049180328,0.06573370651739305,0.06589364254298281,0.06605357856857257,0.06621351459416233,0.0663734506197521,0.06653338664534186,0.06669332267093163,0.0668532586965214,0.06701319472211116,0.06717313074770093,0.06733306677329068,0.06749300279888044,0.06765293882447021,0.06781287485005998,0.06797281087564974,0.06813274690123951,0.06829268292682927,0.06845261895241904,0.06861255497800879,0.06877249100359856,0.06893242702918832,0.06909236305477809,0.06925229908036785,0.06941223510595762,0.06957217113154739,0.06973210715713715,0.0698920431827269,0.07005197920831667,0.07021191523390644,0.0703718512594962,0.07053178728508597,0.07069172331067573,0.0708516593362655,0.07101159536185526,0.07117153138744502,0.07133146741303478,0.07149140343862455,0.07165133946421431,0.07181127548980408,0.07197121151539385,0.07213114754098361,0.07229108356657338,0.07245101959216313,0.0726109556177529,0.07277089164334266,0.07293082766893243,0.07309076369452219,0.07325069972011196,0.07341063574570172,0.07357057177129149,0.07373050779688124,0.07389044382247101,0.07405037984806077,0.07421031587365054,0.0743702518992403,0.07453018792483007,0.07469012395041984,0.0748500599760096,0.07500999600159935,0.07516993202718912,0.07532986805277889,0.07548980407836865,0.07564974010395842,0.07580967612954818,0.07596961215513795,0.07612954818072772,0.07628948420631747,0.07644942023190723,0.076609356257497,0.07676929228308677,0.07692922830867653,0.0770891643342663,0.07724910035985606,0.07740903638544583,0.07756897241103558,0.07772890843662535,0.07788884446221511,0.07804878048780488,0.07820871651339464,0.07836865253898441,0.07852858856457418,0.07868852459016394,0.0788484606157537,0.07900839664134346,0.07916833266693322,0.07932826869252299,0.07948820471811276,0.07964814074370252,0.07980807676929229,0.07996801279488205,0.0801279488204718,0.08028788484606157,0.08044782087165134,0.0806077568972411,0.08076769292283087,0.08092762894842064,0.0810875649740104,0.08124750099960017,0.08140743702518992,0.08156737305077968,0.08172730907636945,0.08188724510195922,0.08204718112754898,0.08220711715313875,0.08236705317872851,0.08252698920431828,0.08268692522990803,0.0828468612554978,0.08300679728108756,0.08316673330667733,0.0833266693322671,0.08348660535785686,0.08364654138344663,0.08380647740903639,0.08396641343462614,0.08412634946021591,0.08428628548580568,0.08444622151139544,0.08460615753698521,0.08476609356257497,0.08492602958816474,0.0850859656137545,0.08524590163934426,0.08540583766493402,0.08556577369052379,0.08572570971611355,0.08588564574170332,0.08604558176729309,0.08620551779288285,0.08636545381847262,0.08652538984406237,0.08668532586965214,0.0868452618952419,0.08700519792083167,0.08716513394642143,0.0873250699720112,0.08748500599760096,0.08764494202319073,0.08780487804878048,0.08796481407437025,0.08812475009996001,0.08828468612554978,0.08844462215113955,0.08860455817672931,0.08876449420231908,0.08892443022790884,0.0890843662534986,0.08924430227908836,0.08940423830467813,0.08956417433026789,0.08972411035585766,0.08988404638144742,0.09004398240703719,0.09020391843262696,0.09036385445821671,0.09052379048380647,0.09068372650939624,0.090843662534986,0.09100359856057577,0.09116353458616554,0.0913234706117553,0.09148340663734507,0.09164334266293482,0.09180327868852459,0.09196321471411435,0.09212315073970412,0.09228308676529388,0.09244302279088365,0.09260295881647342,0.09276289484206318,0.09292283086765293,0.0930827668932427,0.09324270291883247,0.09340263894442223,0.093562574970012,0.09372251099560176,0.09388244702119153,0.0940423830467813,0.09420231907237105,0.09436225509796081,0.09452219112355058,0.09468212714914034,0.09484206317473011,0.09500199920031988,0.09516193522590964,0.09532187125149941,0.09548180727708916,0.09564174330267892,0.09580167932826869,0.09596161535385846,0.09612155137944822,0.09628148740503799,0.09644142343062775,0.09660135945621752,0.09676129548180727,0.09692123150739704,0.0970811675329868,0.09724110355857657,0.09740103958416634,0.0975609756097561,0.09772091163534587,0.09788084766093563,0.09804078368652538,0.09820071971211515,0.09836065573770492,0.09852059176329468,0.09868052778888445,0.09884046381447421,0.09900039984006398,0.09916033586565375,0.0993202718912435,0.09948020791683326,0.09964014394242303,0.0998000799680128,0.09996001599360256,0.10011995201919233,0.10027988804478209,0.10043982407037186,0.10059976009596161,0.10075969612155138,0.10091963214714114,0.10107956817273091,0.10123950419832067,0.10139944022391044,0.1015593762495002,0.10171931227508997,0.10187924830067972,0.10203918432626949,0.10219912035185925,0.10235905637744902,0.10251899240303879,0.10267892842862855,0.10283886445421832,0.10299880047980808,0.10315873650539784,0.1033186725309876,0.10347860855657737,0.10363854458216713,0.1037984806077569,0.10395841663334666,0.10411835265893643,0.1042782886845262,0.10443822471011595,0.10459816073570571,0.10475809676129548,0.10491803278688525,0.10507796881247501,0.10523790483806478,0.10539784086365454,0.10555777688924431,0.10571771291483406,0.10587764894042383,0.10603758496601359,0.10619752099160336,0.10635745701719312,0.10651739304278289,0.10667732906837266,0.10683726509396242,0.10699720111955217,0.10715713714514194,0.1073170731707317,0.10747700919632147,0.10763694522191124,0.107796881247501,0.10795681727309077,0.10811675329868053,0.10827668932427029,0.10843662534986005,0.10859656137544982,0.10875649740103958,0.10891643342662935,0.10907636945221912,0.10923630547780888,0.10939624150339865,0.1095561775289884,0.10971611355457817,0.10987604958016793,0.1100359856057577,0.11019592163134746,0.11035585765693723,0.110515793682527,0.11067572970811676,0.11083566573370651,0.11099560175929628,0.11115553778488604,0.11131547381047581,0.11147540983606558,0.11163534586165534,0.11179528188724511,0.11195521791283487,0.11211515393842462,0.11227508996401439,0.11243502598960416,0.11259496201519392,0.11275489804078369,0.11291483406637345,0.11307477009196322,0.11323470611755299,0.11339464214314274,0.1135545781687325,0.11371451419432227,0.11387445021991204,0.1140343862455018,0.11419432227109157,0.11435425829668133,0.1145141943222711,0.11467413034786085,0.11483406637345062,0.11499400239904038,0.11515393842463015,0.11531387445021991,0.11547381047580968,0.11563374650139945,0.11579368252698921,0.11595361855257896,0.11611355457816873,0.1162734906037585,0.11643342662934826,0.11659336265493803,0.11675329868052779,0.11691323470611756,0.11707317073170732,0.11723310675729708,0.11739304278288684,0.11755297880847661,0.11771291483406637,0.11787285085965614,0.1180327868852459,0.11819272291083567,0.11835265893642544,0.11851259496201519,0.11867253098760495,0.11883246701319472,0.11899240303878449,0.11915233906437425,0.11931227508996402,0.11947221111555378,0.11963214714114355,0.1197920831667333,0.11995201919232307,0.12011195521791283,0.1202718912435026,0.12043182726909236,0.12059176329468213,0.1207516993202719,0.12091163534586166,0.12107157137145141,0.12123150739704118,0.12139144342263095,0.12155137944822071,0.12171131547381048,0.12187125149940024,0.12203118752499001,0.12219112355057977,0.12235105957616953,0.12251099560175929,0.12267093162734906,0.12283086765293882,0.12299080367852859,0.12315073970411836,0.12331067572970812,0.12347061175529789,0.12363054778088764,0.1237904838064774,0.12395041983206717,0.12411035585765694,0.1242702918832467,0.12443022790883647,0.12459016393442623,0.124750099960016,0.12491003598560575,0.12506997201119552,0.1252299080367853,0.12538984406237505,0.1255497800879648,0.12570971611355458,0.12586965213914433,0.1260295881647341,0.12618952419032387,0.12634946021591364,0.1265093962415034,0.12666933226709318,0.12682926829268293,0.12698920431827268,0.12714914034386246,0.1273090763694522,0.127469012395042,0.12762894842063174,0.12778888444622152,0.12794882047181128,0.12810875649740103,0.1282686925229908,0.12842862854858056,0.12858856457417034,0.1287485005997601,0.12890843662534987,0.12906837265093962,0.1292283086765294,0.12938824470211915,0.1295481807277089,0.12970811675329869,0.12986805277888844,0.13002798880447822,0.13018792483006797,0.13034786085565775,0.1305077968812475,0.13066773290683725,0.13082766893242703,0.13098760495801678,0.13114754098360656,0.13130747700919632,0.1314674130347861,0.13162734906037585,0.13178728508596563,0.13194722111155538,0.13210715713714513,0.1322670931627349,0.13242702918832466,0.13258696521391444,0.1327469012395042,0.13290683726509397,0.13306677329068373,0.13322670931627348,0.13338664534186326,0.133546581367453,0.1337065173930428,0.13386645341863254,0.13402638944422232,0.13418632546981207,0.13434626149540185,0.1345061975209916,0.13466613354658136,0.13482606957217114,0.1349860055977609,0.13514594162335067,0.13530587764894042,0.1354658136745302,0.13562574970011995,0.1357856857257097,0.13594562175129948,0.13610555777688924,0.13626549380247902,0.13642542982806877,0.13658536585365855,0.1367453018792483,0.13690523790483808,0.13706517393042783,0.13722510995601758,0.13738504598160736,0.13754498200719711,0.1377049180327869,0.13786485405837665,0.13802479008396643,0.13818472610955618,0.13834466213514593,0.1385045981607357,0.13866453418632546,0.13882447021191524,0.138984406237505,0.13914434226309477,0.13930427828868452,0.1394642143142743,0.13962415033986406,0.1397840863654538,0.1399440223910436,0.14010395841663334,0.14026389444222312,0.14042383046781287,0.14058376649340265,0.1407437025189924,0.14090363854458215,0.14106357457017193,0.1412235105957617,0.14138344662135147,0.14154338264694122,0.141703318672531,0.14186325469812075,0.14202319072371053,0.14218312674930028,0.14234306277489003,0.1425029988004798,0.14266293482606957,0.14282287085165934,0.1429828068772491,0.14314274290283888,0.14330267892842863,0.14346261495401838,0.14362255097960816,0.1437824870051979,0.1439424230307877,0.14410235905637744,0.14426229508196722,0.14442223110755698,0.14458216713314676,0.1447421031587365,0.14490203918432626,0.14506197520991604,0.1452219112355058,0.14538184726109557,0.14554178328668532,0.1457017193122751,0.14586165533786485,0.1460215913634546,0.14618152738904439,0.14634146341463414,0.14650139944022392,0.14666133546581367,0.14682127149140345,0.1469812075169932,0.14714114354258298,0.14730107956817273,0.14746101559376248,0.14762095161935226,0.14778088764494202,0.1479408236705318,0.14810075969612155,0.14826069572171133,0.14842063174730108,0.14858056777289083,0.1487405037984806,0.14890043982407036,0.14906037584966014,0.1492203118752499,0.14938024790083967,0.14954018392642943,0.1497001199520192,0.14986005597760896,0.1500199920031987,0.1501799280287885,0.15033986405437824,0.15049980007996802,0.15065973610555777,0.15081967213114755,0.1509796081567373,0.15113954418232706,0.15129948020791684,0.1514594162335066,0.15161935225909637,0.15177928828468612,0.1519392243102759,0.15209916033586565,0.15225909636145543,0.15241903238704518,0.15257896841263494,0.15273890443822472,0.15289884046381447,0.15305877648940425,0.153218712514994,0.15337864854058378,0.15353858456617353,0.15369852059176328,0.15385845661735306,0.15401839264294281,0.1541783286685326,0.15433826469412235,0.15449820071971213,0.15465813674530188,0.15481807277089166,0.1549780087964814,0.15513794482207116,0.15529788084766094,0.1554578168732507,0.15561775289884047,0.15577768892443022,0.15593762495002,0.15609756097560976,0.1562574970011995,0.1564174330267893,0.15657736905237904,0.15673730507796882,0.15689724110355857,0.15705717712914835,0.1572171131547381,0.15737704918032788,0.15753698520591763,0.1576969212315074,0.15785685725709717,0.15801679328268692,0.1581767293082767,0.15833666533386645,0.15849660135945623,0.15865653738504598,0.15881647341063573,0.1589764094362255,0.15913634546181527,0.15929628148740504,0.1594562175129948,0.15961615353858458,0.15977608956417433,0.1599360255897641,0.16009596161535386,0.1602558976409436,0.1604158336665334,0.16057576969212314,0.16073570571771292,0.16089564174330268,0.16105557776889246,0.1612155137944822,0.16137544982007196,0.16153538584566174,0.1616953218712515,0.16185525789684127,0.16201519392243102,0.1621751299480208,0.16233506597361055,0.16249500199920033,0.16265493802479009,0.16281487405037984,0.16297481007596962,0.16313474610155937,0.16329468212714915,0.1634546181527389,0.16361455417832868,0.16377449020391843,0.16393442622950818,0.16409436225509796,0.16425429828068772,0.1644142343062775,0.16457417033186725,0.16473410635745703,0.16489404238304678,0.16505397840863656,0.1652139144342263,0.16537385045981606,0.16553378648540584,0.1656937225109956,0.16585365853658537,0.16601359456217513,0.1661735305877649,0.16633346661335466,0.1664934026389444,0.1666533386645342,0.16681327469012394,0.16697321071571372,0.16713314674130347,0.16729308276689325,0.167453018792483,0.16761295481807278,0.16777289084366254,0.1679328268692523,0.16809276289484207,0.16825269892043182,0.1684126349460216,0.16857257097161135,0.16873250699720113,0.16889244302279088,0.16905237904838064,0.16921231507397042,0.16937225109956017,0.16953218712514995,0.1696921231507397,0.16985205917632948,0.17001199520191923,0.170171931227509,0.17033186725309876,0.17049180327868851,0.1706517393042783,0.17081167532986805,0.17097161135545783,0.17113154738104758,0.17129148340663736,0.1714514194322271,0.17161135545781686,0.17177129148340664,0.1719312275089964,0.17209116353458617,0.17225109956017592,0.1724110355857657,0.17257097161135546,0.17273090763694524,0.172890843662535,0.17305077968812474,0.17321071571371452,0.17337065173930427,0.17353058776489405,0.1736905237904838,0.17385045981607358,0.17401039584166333,0.1741703318672531,0.17433026789284287,0.17449020391843262,0.1746501399440224,0.17481007596961215,0.17497001199520193,0.17512994802079168,0.17528988404638146,0.1754498200719712,0.17560975609756097,0.17576969212315074,0.1759296281487405,0.17608956417433028,0.17624950019992003,0.1764094362255098,0.17656937225109956,0.1767293082766893,0.1768892443022791,0.17704918032786884,0.17720911635345862,0.17736905237904838,0.17752898840463815,0.1776889244302279,0.1778488604558177,0.17800879648140744,0.1781687325069972,0.17832866853258697,0.17848860455817672,0.1786485405837665,0.17880847660935625,0.17896841263494603,0.17912834866053579,0.17928828468612554,0.17944822071171532,0.17960815673730507,0.17976809276289485,0.1799280287884846,0.18008796481407438,0.18024790083966413,0.1804078368652539,0.18056777289084366,0.18072770891643342,0.1808876449420232,0.18104758096761295,0.18120751699320273,0.18136745301879248,0.18152738904438226,0.181687325069972,0.18184726109556176,0.18200719712115154,0.1821671331467413,0.18232706917233107,0.18248700519792083,0.1826469412235106,0.18280687724910036,0.18296681327469014,0.1831267493002799,0.18328668532586964,0.18344662135145942,0.18360655737704917,0.18376649340263895,0.1839264294282287,0.18408636545381848,0.18424630147940824,0.184406237504998,0.18456617353058777,0.18472610955617752,0.1848860455817673,0.18504598160735705,0.18520591763294683,0.18536585365853658,0.18552578968412636,0.18568572570971612,0.18584566173530587,0.18600559776089565,0.1861655337864854,0.18632546981207518,0.18648540583766493,0.1866453418632547,0.18680527788884446,0.18696521391443421,0.187125149940024,0.18728508596561375,0.18744502199120353,0.18760495801679328,0.18776489404238306,0.1879248300679728,0.1880847660935626,0.18824470211915234,0.1884046381447421,0.18856457417033187,0.18872451019592162,0.1888844462215114,0.18904438224710116,0.18920431827269094,0.1893642542982807,0.18952419032387044,0.18968412634946022,0.18984406237504997,0.19000399840063975,0.1901639344262295,0.19032387045181928,0.19048380647740903,0.19064374250299881,0.19080367852858857,0.19096361455417832,0.1911235505797681,0.19128348660535785,0.19144342263094763,0.19160335865653738,0.19176329468212716,0.1919232307077169,0.19208316673330667,0.19224310275889644,0.1924030387844862,0.19256297481007598,0.19272291083566573,0.1928828468612555,0.19304278288684526,0.19320271891243504,0.1933626549380248,0.19352259096361454,0.19368252698920432,0.19384246301479408,0.19400239904038385,0.1941623350659736,0.1943222710915634,0.19448220711715314,0.1946421431427429,0.19480207916833267,0.19496201519392242,0.1951219512195122,0.19528188724510195,0.19544182327069173,0.19560175929628149,0.19576169532187127,0.19592163134746102,0.19608156737305077,0.19624150339864055,0.1964014394242303,0.19656137544982008,0.19672131147540983,0.1968812475009996,0.19704118352658936,0.19720111955217912,0.1973610555777689,0.19752099160335865,0.19768092762894843,0.19784086365453818,0.19800079968012796,0.1981607357057177,0.1983206717313075,0.19848060775689724,0.198640543782487,0.19880047980807677,0.19896041583366653,0.1991203518592563,0.19928028788484606,0.19944022391043584,0.1996001599360256,0.19976009596161534,0.19992003198720512,0.20007996801279487,0.20023990403838465,0.2003998400639744,0.20055977608956418,0.20071971211515394,0.20087964814074372,0.20103958416633347,0.20119952019192322,0.201359456217513,0.20151939224310275,0.20167932826869253,0.20183926429428228,0.20199920031987206,0.20215913634546182,0.20231907237105157,0.20247900839664135,0.2026389444222311,0.20279888044782088,0.20295881647341063,0.2031187524990004,0.20327868852459016,0.20343862455017994,0.2035985605757697,0.20375849660135945,0.20391843262694923,0.20407836865253898,0.20423830467812876,0.2043982407037185,0.2045581767293083,0.20471811275489804,0.2048780487804878,0.20503798480607757,0.20519792083166732,0.2053578568572571,0.20551779288284686,0.20567772890843664,0.2058376649340264,0.20599760095961617,0.20615753698520592,0.20631747301079567,0.20647740903638545,0.2066373450619752,0.20679728108756498,0.20695721711315473,0.20711715313874451,0.20727708916433427,0.20743702518992402,0.2075969612155138,0.20775689724110355,0.20791683326669333,0.20807676929228308,0.20823670531787286,0.2083966413434626,0.2085565773690524,0.20871651339464214,0.2088764494202319,0.20903638544582168,0.20919632147141143,0.2093562574970012,0.20951619352259096,0.20967612954818074,0.2098360655737705,0.20999600159936024,0.21015593762495002,0.21031587365053978,0.21047580967612955,0.2106357457017193,0.2107956817273091,0.21095561775289884,0.21111555377848862,0.21127548980407837,0.21143542582966812,0.2115953618552579,0.21175529788084765,0.21191523390643743,0.21207516993202719,0.21223510595761697,0.21239504198320672,0.21255497800879647,0.21271491403438625,0.212874850059976,0.21303478608556578,0.21319472211115553,0.2133546581367453,0.21351459416233506,0.21367453018792484,0.2138344662135146,0.21399440223910435,0.21415433826469413,0.21431427429028388,0.21447421031587366,0.2146341463414634,0.2147940823670532,0.21495401839264294,0.2151139544182327,0.21527389044382247,0.21543382646941223,0.215593762495002,0.21575369852059176,0.21591363454618154,0.2160735705717713,0.21623350659736107,0.21639344262295082,0.21655337864854057,0.21671331467413035,0.2168732506997201,0.21703318672530988,0.21719312275089964,0.21735305877648942,0.21751299480207917,0.21767293082766892,0.2178328668532587,0.21799280287884845,0.21815273890443823,0.21831267493002798,0.21847261095561776,0.21863254698120752,0.2187924830067973,0.21895241903238705,0.2191123550579768,0.21927229108356658,0.21943222710915633,0.2195921631347461,0.21975209916033586,0.21991203518592564,0.2200719712115154,0.22023190723710515,0.22039184326269493,0.22055177928828468,0.22071171531387446,0.2208716513394642,0.221031587365054,0.22119152339064374,0.22135145941623352,0.22151139544182327,0.22167133146741302,0.2218312674930028,0.22199120351859256,0.22215113954418234,0.2223110755697721,0.22247101159536187,0.22263094762095162,0.22279088364654137,0.22295081967213115,0.2231107556977209,0.22327069172331068,0.22343062774890043,0.22359056377449021,0.22375049980007997,0.22391043582566975,0.2240703718512595,0.22423030787684925,0.22439024390243903,0.22455017992802878,0.22471011595361856,0.2248700519792083,0.2250299880047981,0.22518992403038784,0.2253498600559776,0.22550979608156738,0.22566973210715713,0.2258296681327469,0.22598960415833666,0.22614954018392644,0.2263094762095162,0.22646941223510597,0.22662934826069572,0.22678928428628548,0.22694922031187525,0.227109156337465,0.2272690923630548,0.22742902838864454,0.22758896441423432,0.22774890043982407,0.22790883646541382,0.2280687724910036,0.22822870851659335,0.22838864454218313,0.22854858056777289,0.22870851659336267,0.22886845261895242,0.2290283886445422,0.22918832467013195,0.2293482606957217,0.22950819672131148,0.22966813274690123,0.229828068772491,0.22998800479808076,0.23014794082367054,0.2303078768492603,0.23046781287485005,0.23062774890043983,0.23078768492602958,0.23094762095161936,0.2311075569772091,0.2312674930027989,0.23142742902838864,0.23158736505397842,0.23174730107956817,0.23190723710515793,0.2320671731307477,0.23222710915633746,0.23238704518192724,0.232546981207517,0.23270691723310677,0.23286685325869652,0.23302678928428627,0.23318672530987605,0.2333466613354658,0.23350659736105558,0.23366653338664534,0.23382646941223512,0.23398640543782487,0.23414634146341465,0.2343062774890044,0.23446621351459415,0.23462614954018393,0.23478608556577368,0.23494602159136346,0.23510595761695322,0.235265893642543,0.23542582966813275,0.2355857656937225,0.23574570171931228,0.23590563774490203,0.2360655737704918,0.23622550979608156,0.23638544582167134,0.2365453818472611,0.23670531787285087,0.23686525389844063,0.23702518992403038,0.23718512594962016,0.2373450619752099,0.2375049980007997,0.23766493402638944,0.23782487005197922,0.23798480607756897,0.23814474210315872,0.2383046781287485,0.23846461415433826,0.23862455017992804,0.2387844862055178,0.23894442223110757,0.23910435825669732,0.2392642942822871,0.23942423030787685,0.2395841663334666,0.23974410235905638,0.23990403838464613,0.24006397441023591,0.24022391043582567,0.24038384646141545,0.2405437824870052,0.24070371851259495,0.24086365453818473,0.24102359056377448,0.24118352658936426,0.241343462614954,0.2415033986405438,0.24166333466613354,0.24182327069172332,0.24198320671731308,0.24214314274290283,0.2423030787684926,0.24246301479408236,0.24262295081967214,0.2427828868452619,0.24294282287085167,0.24310275889644142,0.24326269492203118,0.24342263094762095,0.2435825669732107,0.2437425029988005,0.24390243902439024,0.24406237504998002,0.24422231107556977,0.24438224710115955,0.2445421831267493,0.24470211915233905,0.24486205517792883,0.24502199120351859,0.24518192722910837,0.24534186325469812,0.2455017992802879,0.24566173530587765,0.2458216713314674,0.24598160735705718,0.24614154338264693,0.2463014794082367,0.24646141543382646,0.24662135145941624,0.246781287485006,0.24694122351059578,0.24710115953618553,0.24726109556177528,0.24742103158736506,0.2475809676129548,0.2477409036385446,0.24790083966413434,0.24806077568972412,0.24822071171531387,0.24838064774090363,0.2485405837664934,0.24870051979208316,0.24886045581767294,0.2490203918432627,0.24918032786885247,0.24934026389444222,0.249500199920032,0.24966013594562175,0.2498200719712115,0.24998000799680128,0.25013994402239104,0.2502998800479808,0.2504598160735706,0.2506197520991603,0.2507796881247501,0.2509396241503399,0.2510995601759296,0.2512594962015194,0.25141943222710916,0.25157936825269894,0.25173930427828867,0.25189924030387845,0.2520591763294682,0.25221911235505795,0.25237904838064773,0.2525389844062375,0.2526989204318273,0.252858856457417,0.2530187924830068,0.2531787285085966,0.25333866453418635,0.2534986005597761,0.25365853658536586,0.25381847261095564,0.25397840863654536,0.25413834466213514,0.2542982806877249,0.2544582167133147,0.2546181527389044,0.2547780887644942,0.254938024790084,0.2550979608156737,0.2552578968412635,0.25541783286685327,0.25557776889244305,0.25573770491803277,0.25589764094362255,0.25605757696921233,0.25621751299480205,0.25637744902039183,0.2565373850459816,0.2566973210715714,0.2568572570971611,0.2570171931227509,0.2571771291483407,0.2573370651739304,0.2574970011995202,0.25765693722510996,0.25781687325069974,0.25797680927628946,0.25813674530187924,0.258296681327469,0.2584566173530588,0.25861655337864853,0.2587764894042383,0.2589364254298281,0.2590963614554178,0.2592562974810076,0.25941623350659737,0.25957616953218715,0.2597361055577769,0.25989604158336665,0.26005597760895643,0.26021591363454616,0.26037584966013594,0.2605357856857257,0.2606957217113155,0.2608556577369052,0.261015593762495,0.2611755297880848,0.2613354658136745,0.2614954018392643,0.26165533786485407,0.26181527389044384,0.26197520991603357,0.26213514594162335,0.26229508196721313,0.26245501799280285,0.26261495401839263,0.2627748900439824,0.2629348260695722,0.2630947620951619,0.2632546981207517,0.2634146341463415,0.26357457017193126,0.263734506197521,0.26389444222311076,0.26405437824870054,0.26421431427429026,0.26437425029988004,0.2645341863254698,0.2646941223510596,0.2648540583766493,0.2650139944022391,0.2651739304278289,0.2653338664534186,0.2654938024790084,0.26565373850459817,0.26581367453018795,0.2659736105557777,0.26613354658136745,0.26629348260695723,0.26645341863254696,0.26661335465813674,0.2667732906837265,0.2669332267093163,0.267093162734906,0.2672530987604958,0.2674130347860856,0.2675729708116753,0.2677329068372651,0.26789284286285486,0.26805277888844464,0.26821271491403437,0.26837265093962415,0.2685325869652139,0.2686925229908037,0.26885245901639343,0.2690123950419832,0.269172331067573,0.2693322670931627,0.2694922031187525,0.2696521391443423,0.26981207516993205,0.2699720111955218,0.27013194722111156,0.27029188324670134,0.27045181927229106,0.27061175529788084,0.2707716913234706,0.2709316273490604,0.2710915633746501,0.2712514994002399,0.2714114354258297,0.2715713714514194,0.2717313074770092,0.27189124350259897,0.27205117952818875,0.27221111555377847,0.27237105157936825,0.27253098760495803,0.27269092363054775,0.27285085965613753,0.2730107956817273,0.2731707317073171,0.2733306677329068,0.2734906037584966,0.2736505397840864,0.27381047580967616,0.2739704118352659,0.27413034786085566,0.27429028388644544,0.27445021991203516,0.27461015593762494,0.2747700919632147,0.2749300279888045,0.27508996401439423,0.275249900039984,0.2754098360655738,0.2755697720911635,0.2757297081167533,0.27588964414234307,0.27604958016793285,0.2762095161935226,0.27636945221911235,0.27652938824470213,0.27668932427029186,0.27684926029588164,0.2770091963214714,0.2771691323470612,0.2773290683726509,0.2774890043982407,0.2776489404238305,0.2778088764494202,0.27796881247501,0.27812874850059977,0.27828868452618954,0.27844862055177927,0.27860855657736905,0.27876849260295883,0.2789284286285486,0.27908836465413833,0.2792483006797281,0.2794082367053179,0.2795681727309076,0.2797281087564974,0.2798880447820872,0.28004798080767696,0.2802079168332667,0.28036785285885646,0.28052778888444624,0.28068772491003596,0.28084766093562574,0.2810075969612155,0.2811675329868053,0.281327469012395,0.2814874050379848,0.2816473410635746,0.2818072770891643,0.2819672131147541,0.28212714914034387,0.28228708516593365,0.2824470211915234,0.28260695721711315,0.28276689324270293,0.28292682926829266,0.28308676529388244,0.2832467013194722,0.283406637345062,0.2835665733706517,0.2837265093962415,0.2838864454218313,0.28404638144742106,0.2842063174730108,0.28436625349860056,0.28452618952419034,0.28468612554978007,0.28484606157536985,0.2850059976009596,0.2851659336265494,0.28532586965213913,0.2854858056777289,0.2856457417033187,0.2858056777289084,0.2859656137544982,0.286125549780088,0.28628548580567775,0.2864454218312675,0.28660535785685726,0.28676529388244704,0.28692522990803676,0.28708516593362654,0.2872451019592163,0.2874050379848061,0.2875649740103958,0.2877249100359856,0.2878848460615754,0.2880447820871651,0.2882047181127549,0.28836465413834467,0.28852459016393445,0.28868452618952417,0.28884446221511395,0.28900439824070373,0.2891643342662935,0.28932427029188323,0.289484206317473,0.2896441423430628,0.2898040783686525,0.2899640143942423,0.2901239504198321,0.29028388644542186,0.2904438224710116,0.29060375849660136,0.29076369452219114,0.29092363054778086,0.29108356657337064,0.2912435025989604,0.2914034386245502,0.29156337465013993,0.2917233106757297,0.2918832467013195,0.2920431827269092,0.292203118752499,0.29236305477808877,0.29252299080367855,0.2926829268292683,0.29284286285485805,0.29300279888044783,0.29316273490603756,0.29332267093162734,0.2934826069572171,0.2936425429828069,0.2938024790083966,0.2939624150339864,0.2941223510595762,0.29428228708516596,0.2944422231107557,0.29460215913634547,0.29476209516193524,0.29492203118752497,0.29508196721311475,0.29524190323870453,0.2954018392642943,0.29556177528988403,0.2957217113154738,0.2958816473410636,0.2960415833666533,0.2962015193922431,0.2963614554178329,0.29652139144342265,0.2966813274690124,0.29684126349460216,0.29700119952019194,0.29716113554578166,0.29732107157137144,0.2974810075969612,0.297640943622551,0.2978008796481407,0.2979608156737305,0.2981207516993203,0.29828068772491,0.2984406237504998,0.29860055977608957,0.29876049580167935,0.2989204318272691,0.29908036785285885,0.29924030387844863,0.2994002399040384,0.29956017592962814,0.2997201119552179,0.2998800479808077,0.3000399840063974,0.3001999200319872,0.300359856057577,0.30051979208316676,0.3006797281087565,0.30083966413434626,0.30099960015993604,0.30115953618552577,0.30131947221111555,0.3014794082367053,0.3016393442622951,0.30179928028788483,0.3019592163134746,0.3021191523390644,0.3022790883646541,0.3024390243902439,0.3025989604158337,0.30275889644142345,0.3029188324670132,0.30307876849260296,0.30323870451819274,0.30339864054378246,0.30355857656937224,0.303718512594962,0.3038784486205518,0.3040383846461415,0.3041983206717313,0.3043582566973211,0.30451819272291086,0.3046781287485006,0.30483806477409037,0.30499800079968015,0.30515793682526987,0.30531787285085965,0.30547780887644943,0.3056377449020392,0.30579768092762893,0.3059576169532187,0.3061175529788085,0.3062774890043982,0.306437425029988,0.3065973610555778,0.30675729708116756,0.3069172331067573,0.30707716913234706,0.30723710515793684,0.30739704118352656,0.30755697720911634,0.3077169132347061,0.3078768492602959,0.30803678528588563,0.3081967213114754,0.3083566573370652,0.3085165933626549,0.3086765293882447,0.30883646541383447,0.30899640143942425,0.309156337465014,0.30931627349060375,0.30947620951619353,0.3096361455417833,0.30979608156737304,0.3099560175929628,0.3101159536185526,0.3102758896441423,0.3104358256697321,0.3105957616953219,0.31075569772091166,0.3109156337465014,0.31107556977209116,0.31123550579768094,0.31139544182327067,0.31155537784886045,0.31171531387445023,0.31187524990004,0.31203518592562973,0.3121951219512195,0.3123550579768093,0.312514994002399,0.3126749300279888,0.3128348660535786,0.31299480207916835,0.3131547381047581,0.31331467413034786,0.31347461015593764,0.31363454618152736,0.31379448220711714,0.3139544182327069,0.3141143542582967,0.3142742902838864,0.3144342263094762,0.314594162335066,0.31475409836065577,0.3149140343862455,0.31507397041183527,0.31523390643742505,0.3153938424630148,0.31555377848860455,0.31571371451419433,0.3158736505397841,0.31603358656537384,0.3161935225909636,0.3163534586165534,0.3165133946421431,0.3166733306677329,0.3168332666933227,0.31699320271891246,0.3171531387445022,0.31731307477009196,0.31747301079568174,0.31763294682127147,0.31779288284686125,0.317952818872451,0.3181127548980408,0.31827269092363053,0.3184326269492203,0.3185925629748101,0.3187524990003998,0.3189124350259896,0.3190723710515794,0.31923230707716915,0.3193922431027589,0.31955217912834866,0.31971211515393844,0.3198720511795282,0.32003198720511794,0.3201919232307077,0.3203518592562975,0.3205117952818872,0.320671731307477,0.3208316673330668,0.32099160335865656,0.3211515393842463,0.32131147540983607,0.32147141143542585,0.32163134746101557,0.32179128348660535,0.32195121951219513,0.3221111555377849,0.32227109156337463,0.3224310275889644,0.3225909636145542,0.3227508996401439,0.3229108356657337,0.3230707716913235,0.32323070771691326,0.323390643742503,0.32355057976809276,0.32371051579368254,0.32387045181927226,0.32403038784486204,0.3241903238704518,0.3243502598960416,0.32451019592163133,0.3246701319472211,0.3248300679728109,0.32499000399840067,0.3251499400239904,0.32530987604958017,0.32546981207516995,0.3256297481007597,0.32578968412634945,0.32594962015193923,0.326109556177529,0.32626949220311874,0.3264294282287085,0.3265893642542983,0.326749300279888,0.3269092363054778,0.3270691723310676,0.32722910835665736,0.3273890443822471,0.32754898040783686,0.32770891643342664,0.32786885245901637,0.32802878848460615,0.32818872451019593,0.3283486605357857,0.32850859656137543,0.3286685325869652,0.328828468612555,0.3289884046381447,0.3291483406637345,0.3293082766893243,0.32946821271491405,0.3296281487405038,0.32978808476609356,0.32994802079168334,0.3301079568172731,0.33026789284286284,0.3304278288684526,0.3305877648940424,0.3307477009196321,0.3309076369452219,0.3310675729708117,0.33122750899640147,0.3313874450219912,0.33154738104758097,0.33170731707317075,0.3318672530987605,0.33202718912435025,0.33218712514994003,0.3323470611755298,0.33250699720111954,0.3326669332267093,0.3328268692522991,0.3329868052778888,0.3331467413034786,0.3333066773290684,0.33346661335465816,0.3336265493802479,0.33378648540583766,0.33394642143142744,0.33410635745701717,0.33426629348260695,0.3344262295081967,0.3345861655337865,0.33474610155937623,0.334906037584966,0.3350659736105558,0.33522590963614557,0.3353858456617353,0.3355457816873251,0.33570571771291485,0.3358656537385046,0.33602558976409436,0.33618552578968414,0.3363454618152739,0.33650539784086364,0.3366653338664534,0.3368252698920432,0.3369852059176329,0.3371451419432227,0.3373050779688125,0.33746501399440226,0.337624950019992,0.33778488604558177,0.33794482207117155,0.33810475809676127,0.33826469412235105,0.33842463014794083,0.3385845661735306,0.33874450219912033,0.3389044382247101,0.3390643742502999,0.3392243102758896,0.3393842463014794,0.3395441823270692,0.33970411835265896,0.3398640543782487,0.34002399040383846,0.34018392642942824,0.340343862455018,0.34050379848060774,0.3406637345061975,0.3408236705317873,0.34098360655737703,0.3411435425829668,0.3413034786085566,0.34146341463414637,0.3416233506597361,0.34178328668532587,0.34194322271091565,0.3421031587365054,0.34226309476209515,0.34242303078768493,0.3425829668132747,0.34274290283886444,0.3429028388644542,0.343062774890044,0.3432227109156337,0.3433826469412235,0.3435425829668133,0.34370251899240306,0.3438624550179928,0.34402239104358256,0.34418232706917234,0.34434226309476207,0.34450219912035185,0.34466213514594163,0.3448220711715314,0.34498200719712113,0.3451419432227109,0.3453018792483007,0.34546181527389047,0.3456217512994802,0.34578168732507,0.34594162335065975,0.3461015593762495,0.34626149540183926,0.34642143142742904,0.3465813674530188,0.34674130347860854,0.3469012395041983,0.3470611755297881,0.3472211115553778,0.3473810475809676,0.3475409836065574,0.34770091963214717,0.3478608556577369,0.34802079168332667,0.34818072770891645,0.3483406637345062,0.34850059976009595,0.34866053578568573,0.3488204718112755,0.34898040783686524,0.349140343862455,0.3493002798880448,0.3494602159136345,0.3496201519392243,0.3497800879648141,0.34994002399040386,0.3500999600159936,0.35025989604158336,0.35041983206717314,0.3505797680927629,0.35073970411835265,0.3508996401439424,0.3510595761695322,0.35121951219512193,0.3513794482207117,0.3515393842463015,0.35169932027189127,0.351859256297481,0.3520191923230708,0.35217912834866055,0.3523390643742503,0.35249900039984006,0.35265893642542984,0.3528188724510196,0.35297880847660934,0.3531387445021991,0.3532986805277889,0.3534586165533786,0.3536185525789684,0.3537784886045582,0.35393842463014796,0.3540983606557377,0.35425829668132747,0.35441823270691725,0.35457816873250697,0.35473810475809675,0.35489804078368653,0.3550579768092763,0.35521791283486603,0.3553778488604558,0.3555377848860456,0.3556977209116354,0.3558576569372251,0.3560175929628149,0.35617752898840466,0.3563374650139944,0.35649740103958416,0.35665733706517394,0.3568172730907637,0.35697720911635344,0.3571371451419432,0.357297081167533,0.35745701719312273,0.3576169532187125,0.3577768892443023,0.35793682526989207,0.3580967612954818,0.35825669732107157,0.35841663334666135,0.3585765693722511,0.35873650539784085,0.35889644142343063,0.3590563774490204,0.35921631347461014,0.3593762495001999,0.3595361855257897,0.3596961215513794,0.3598560575769692,0.360015993602559,0.36017592962814876,0.3603358656537385,0.36049580167932826,0.36065573770491804,0.3608156737305078,0.36097560975609755,0.36113554578168733,0.3612954818072771,0.36145541783286683,0.3616153538584566,0.3617752898840464,0.36193522590963617,0.3620951619352259,0.3622550979608157,0.36241503398640545,0.3625749700119952,0.36273490603758496,0.36289484206317474,0.3630547780887645,0.36321471411435424,0.363374650139944,0.3635345861655338,0.3636945221911235,0.3638544582167133,0.3640143942423031,0.36417433026789287,0.3643342662934826,0.36449420231907237,0.36465413834466215,0.3648140743702519,0.36497401039584165,0.36513394642143143,0.3652938824470212,0.36545381847261094,0.3656137544982007,0.3657736905237905,0.3659336265493803,0.36609356257497,0.3662534986005598,0.36641343462614956,0.3665733706517393,0.36673330667732906,0.36689324270291884,0.3670531787285086,0.36721311475409835,0.3673730507796881,0.3675329868052779,0.36769292283086763,0.3678528588564574,0.3680127948820472,0.36817273090763697,0.3683326669332267,0.3684926029588165,0.36865253898440625,0.368812475009996,0.36897241103558576,0.36913234706117554,0.3692922830867653,0.36945221911235504,0.3696121551379448,0.3697720911635346,0.3699320271891243,0.3700919632147141,0.3702518992403039,0.37041183526589366,0.3705717712914834,0.37073170731707317,0.37089164334266295,0.3710515793682527,0.37121151539384245,0.37137145141943223,0.371531387445022,0.37169132347061173,0.3718512594962015,0.3720111955217913,0.3721711315473811,0.3723310675729708,0.3724910035985606,0.37265093962415036,0.3728108756497401,0.37297081167532986,0.37313074770091964,0.3732906837265094,0.37345061975209914,0.3736105557776889,0.3737704918032787,0.37393042782886843,0.3740903638544582,0.374250299880048,0.37441023590563777,0.3745701719312275,0.37473010795681727,0.37489004398240705,0.3750499800079968,0.37520991603358655,0.37536985205917633,0.3755297880847661,0.37568972411035584,0.3758496601359456,0.3760095961615354,0.3761695321871252,0.3763294682127149,0.3764894042383047,0.37664934026389446,0.3768092762894842,0.37696921231507396,0.37712914834066374,0.3772890843662535,0.37744902039184325,0.37760895641743303,0.3777688924430228,0.37792882846861253,0.3780887644942023,0.3782487005197921,0.37840863654538187,0.3785685725709716,0.3787285085965614,0.37888844462215115,0.3790483806477409,0.37920831667333066,0.37936825269892044,0.3795281887245102,0.37968812475009994,0.3798480607756897,0.3800079968012795,0.3801679328268692,0.380327868852459,0.3804878048780488,0.38064774090363857,0.3808076769292283,0.38096761295481807,0.38112754898040785,0.38128748500599763,0.38144742103158735,0.38160735705717713,0.3817672930827669,0.38192722910835664,0.3820871651339464,0.3822471011595362,0.382407037185126,0.3825669732107157,0.3827269092363055,0.38288684526189526,0.383046781287485,0.38320671731307476,0.38336665333866454,0.3835265893642543,0.38368652538984405,0.3838464614154338,0.3840063974410236,0.38416633346661333,0.3843262694922031,0.3844862055177929,0.38464614154338267,0.3848060775689724,0.3849660135945622,0.38512594962015195,0.3852858856457417,0.38544582167133146,0.38560575769692124,0.385765693722511,0.38592562974810074,0.3860855657736905,0.3862455017992803,0.3864054378248701,0.3865653738504598,0.3867253098760496,0.38688524590163936,0.3870451819272291,0.38720511795281887,0.38736505397840865,0.3875249900039984,0.38768492602958815,0.38784486205517793,0.3880047980807677,0.38816473410635743,0.3883246701319472,0.388484606157537,0.3886445421831268,0.3888044782087165,0.3889644142343063,0.38912435025989606,0.3892842862854858,0.38944422231107556,0.38960415833666534,0.3897640943622551,0.38992403038784484,0.3900839664134346,0.3902439024390244,0.39040383846461413,0.3905637744902039,0.3907237105157937,0.39088364654138347,0.3910435825669732,0.39120351859256297,0.39136345461815275,0.39152339064374253,0.39168332666933225,0.39184326269492203,0.3920031987205118,0.39216313474610154,0.3923230707716913,0.3924830067972811,0.3926429428228709,0.3928028788484606,0.3929628148740504,0.39312275089964016,0.3932826869252299,0.39344262295081966,0.39360255897640944,0.3937624950019992,0.39392243102758895,0.39408236705317873,0.3942423030787685,0.39440223910435823,0.394562175129948,0.3947221111555378,0.39488204718112757,0.3950419832067173,0.3952019192323071,0.39536185525789685,0.3955217912834866,0.39568172730907636,0.39584166333466614,0.3960015993602559,0.39616153538584564,0.3963214714114354,0.3964814074370252,0.396641343462615,0.3968012794882047,0.3969612155137945,0.39712115153938427,0.397281087564974,0.39744102359056377,0.39760095961615355,0.39776089564174333,0.39792083166733305,0.39808076769292283,0.3982407037185126,0.39840063974410234,0.3985605757696921,0.3987205117952819,0.3988804478208717,0.3990403838464614,0.3992003198720512,0.39936025589764096,0.3995201919232307,0.39968012794882046,0.39984006397441024,0.4,0.40015993602558975,0.4003198720511795,0.4004798080767693,0.40063974410235903,0.4007996801279488,0.4009596161535386,0.40111955217912837,0.4012794882047181,0.4014394242303079,0.40159936025589765,0.40175929628148743,0.40191923230707716,0.40207916833266694,0.4022391043582567,0.40239904038384644,0.4025589764094362,0.402718912435026,0.4028788484606158,0.4030387844862055,0.4031987205117953,0.40335865653738506,0.4035185925629748,0.40367852858856457,0.40383846461415435,0.4039984006397441,0.40415833666533385,0.40431827269092363,0.4044782087165134,0.40463814474210313,0.4047980807676929,0.4049580167932827,0.4051179528188725,0.4052778888444622,0.405437824870052,0.40559776089564176,0.4057576969212315,0.40591763294682126,0.40607756897241104,0.4062375049980008,0.40639744102359054,0.4065573770491803,0.4067173130747701,0.4068772491003599,0.4070371851259496,0.4071971211515394,0.40735705717712917,0.4075169932027189,0.40767692922830867,0.40783686525389845,0.40799680127948823,0.40815673730507795,0.40831667333066773,0.4084766093562575,0.40863654538184724,0.408796481407437,0.4089564174330268,0.4091163534586166,0.4092762894842063,0.4094362255097961,0.40959616153538586,0.4097560975609756,0.40991603358656536,0.41007596961215514,0.4102359056377449,0.41039584166333465,0.41055577768892443,0.4107157137145142,0.41087564974010393,0.4110355857656937,0.4111955217912835,0.41135545781687327,0.411515393842463,0.4116753298680528,0.41183526589364255,0.41199520191923233,0.41215513794482206,0.41231507397041184,0.4124750099960016,0.41263494602159134,0.4127948820471811,0.4129548180727709,0.4131147540983607,0.4132746901239504,0.4134346261495402,0.41359456217512997,0.4137544982007197,0.41391443422630947,0.41407437025189925,0.41423430627748903,0.41439424230307875,0.41455417832866853,0.4147141143542583,0.41487405037984804,0.4150339864054378,0.4151939224310276,0.4153538584566174,0.4155137944822071,0.4156737305077969,0.41583366653338666,0.4159936025589764,0.41615353858456616,0.41631347461015594,0.4164734106357457,0.41663334666133545,0.4167932826869252,0.416953218712515,0.4171131547381048,0.4172730907636945,0.4174330267892843,0.41759296281487407,0.4177528988404638,0.4179128348660536,0.41807277089164335,0.41823270691723313,0.41839264294282286,0.41855257896841264,0.4187125149940024,0.41887245101959214,0.4190323870451819,0.4191923230707717,0.4193522590963615,0.4195121951219512,0.419672131147541,0.41983206717313076,0.4199920031987205,0.42015193922431027,0.42031187524990005,0.4204718112754898,0.42063174730107955,0.42079168332666933,0.4209516193522591,0.42111155537784883,0.4212714914034386,0.4214314274290284,0.4215913634546182,0.4217512994802079,0.4219112355057977,0.42207117153138746,0.42223110755697724,0.42239104358256696,0.42255097960815674,0.4227109156337465,0.42287085165933624,0.423030787684926,0.4231907237105158,0.4233506597361056,0.4235105957616953,0.4236705317872851,0.42383046781287487,0.4239904038384646,0.42415033986405437,0.42431027588964415,0.42447021191523393,0.42463014794082365,0.42479008396641343,0.4249500199920032,0.42510995601759294,0.4252698920431827,0.4254298280687725,0.4255897640943623,0.425749700119952,0.4259096361455418,0.42606957217113156,0.4262295081967213,0.42638944422231106,0.42654938024790084,0.4267093162734906,0.42686925229908035,0.42702918832467013,0.4271891243502599,0.4273490603758497,0.4275089964014394,0.4276689324270292,0.42782886845261897,0.4279888044782087,0.4281487405037985,0.42830867652938825,0.42846861255497803,0.42862854858056776,0.42878848460615754,0.4289484206317473,0.42910835665733704,0.4292682926829268,0.4294282287085166,0.4295881647341064,0.4297481007596961,0.4299080367852859,0.43006797281087566,0.4302279088364654,0.43038784486205517,0.43054778088764495,0.43070771691323473,0.43086765293882445,0.43102758896441423,0.431187524990004,0.43134746101559374,0.4315073970411835,0.4316673330667733,0.4318272690923631,0.4319872051179528,0.4321471411435426,0.43230707716913236,0.43246701319472214,0.43262694922031186,0.43278688524590164,0.4329468212714914,0.43310675729708115,0.4332666933226709,0.4334266293482607,0.4335865653738505,0.4337465013994402,0.43390643742503,0.43406637345061977,0.4342263094762095,0.4343862455017993,0.43454618152738905,0.43470611755297883,0.43486605357856856,0.43502598960415834,0.4351859256297481,0.43534586165533784,0.4355057976809276,0.4356657337065174,0.4358256697321072,0.4359856057576969,0.4361455417832867,0.43630547780887646,0.4364654138344662,0.43662534986005597,0.43678528588564575,0.4369452219112355,0.43710515793682525,0.43726509396241503,0.4374250299880048,0.4375849660135946,0.4377449020391843,0.4379048380647741,0.4380647740903639,0.4382247101159536,0.4383846461415434,0.43854458216713316,0.43870451819272294,0.43886445421831266,0.43902439024390244,0.4391843262694922,0.43934426229508194,0.4395041983206717,0.4396641343462615,0.4398240703718513,0.439984006397441,0.4401439424230308,0.44030387844862057,0.4404638144742103,0.44062375049980007,0.44078368652538985,0.44094362255097963,0.44110355857656935,0.44126349460215913,0.4414234306277489,0.44158336665333864,0.4417433026789284,0.4419032387045182,0.442063174730108,0.4422231107556977,0.4423830467812875,0.44254298280687726,0.44270291883246704,0.44286285485805676,0.44302279088364654,0.4431827269092363,0.44334266293482605,0.44350259896041583,0.4436625349860056,0.4438224710115954,0.4439824070371851,0.4441423430627749,0.44430227908836467,0.4444622151139544,0.4446221511395442,0.44478208716513395,0.44494202319072373,0.44510195921631346,0.44526189524190324,0.445421831267493,0.44558176729308274,0.4457417033186725,0.4459016393442623,0.4460615753698521,0.4462215113954418,0.4463814474210316,0.44654138344662136,0.4467013194722111,0.44686125549780087,0.44702119152339065,0.44718112754898043,0.44734106357457015,0.44750099960015993,0.4476609356257497,0.4478208716513395,0.4479808076769292,0.448140743702519,0.4483006797281088,0.4484606157536985,0.4486205517792883,0.44878048780487806,0.44894042383046784,0.44910035985605756,0.44926029588164734,0.4494202319072371,0.44958016793282685,0.4497401039584166,0.4499000399840064,0.4500599760095962,0.4502199120351859,0.4503798480607757,0.45053978408636547,0.4506997201119552,0.450859656137545,0.45101959216313475,0.45117952818872453,0.45133946421431426,0.45149940023990404,0.4516593362654938,0.45181927229108354,0.4519792083166733,0.4521391443422631,0.4522990803678529,0.4524590163934426,0.4526189524190324,0.45277888844462216,0.45293882447021194,0.45309876049580167,0.45325869652139145,0.4534186325469812,0.45357856857257095,0.45373850459816073,0.4538984406237505,0.4540583766493403,0.45421831267493,0.4543782487005198,0.4545381847261096,0.4546981207516993,0.4548580567772891,0.45501799280287886,0.45517792882846864,0.45533786485405836,0.45549780087964814,0.4556577369052379,0.45581767293082764,0.4559776089564174,0.4561375449820072,0.456297481007597,0.4564574170331867,0.4566173530587765,0.45677728908436627,0.456937225109956,0.45709716113554577,0.45725709716113555,0.45741703318672533,0.45757696921231505,0.45773690523790483,0.4578968412634946,0.4580567772890844,0.4582167133146741,0.4583766493402639,0.4585365853658537,0.4586965213914434,0.4588564574170332,0.45901639344262296,0.45917632946821274,0.45933626549380246,0.45949620151939224,0.459656137544982,0.45981607357057175,0.45997600959616153,0.4601359456217513,0.4602958816473411,0.4604558176729308,0.4606157536985206,0.46077568972411037,0.4609356257497001,0.4610955617752899,0.46125549780087965,0.46141543382646943,0.46157536985205916,0.46173530587764894,0.4618952419032387,0.46205517792882844,0.4622151139544182,0.462375049980008,0.4625349860055978,0.4626949220311875,0.4628548580567773,0.46301479408236706,0.46317473010795684,0.46333466613354657,0.46349460215913635,0.46365453818472613,0.46381447421031585,0.46397441023590563,0.4641343462614954,0.4642942822870852,0.4644542183126749,0.4646141543382647,0.4647740903638545,0.4649340263894442,0.465093962415034,0.46525389844062376,0.46541383446621354,0.46557377049180326,0.46573370651739304,0.4658936425429828,0.46605357856857255,0.4662135145941623,0.4663734506197521,0.4665333866453419,0.4666933226709316,0.4668532586965214,0.46701319472211117,0.4671731307477009,0.4673330667732907,0.46749300279888045,0.46765293882447023,0.46781287485005996,0.46797281087564974,0.4681327469012395,0.4682926829268293,0.468452618952419,0.4686125549780088,0.4687724910035986,0.4689324270291883,0.4690923630547781,0.46925229908036786,0.46941223510595764,0.46957217113154737,0.46973210715713715,0.4698920431827269,0.47005197920831665,0.47021191523390643,0.4703718512594962,0.470531787285086,0.4706917233106757,0.4708516593362655,0.4710115953618553,0.471171531387445,0.4713314674130348,0.47149140343862456,0.47165133946421434,0.47181127548980406,0.47197121151539384,0.4721311475409836,0.47229108356657334,0.4724510195921631,0.4726109556177529,0.4727708916433427,0.4729308276689324,0.4730907636945222,0.47325069972011197,0.47341063574570175,0.47357057177129147,0.47373050779688125,0.47389044382247103,0.47405037984806075,0.47421031587365053,0.4743702518992403,0.4745301879248301,0.4746901239504198,0.4748500599760096,0.4750099960015994,0.4751699320271891,0.4753298680527789,0.47548980407836866,0.47564974010395844,0.47580967612954816,0.47596961215513794,0.4761295481807277,0.47628948420631745,0.47644942023190723,0.476609356257497,0.4767692922830868,0.4769292283086765,0.4770891643342663,0.47724910035985607,0.4774090363854458,0.4775689724110356,0.47772890843662535,0.47788884446221513,0.47804878048780486,0.47820871651339464,0.4783686525389844,0.4785285885645742,0.4786885245901639,0.4788484606157537,0.4790083966413435,0.4791683326669332,0.479328268692523,0.47948820471811276,0.47964814074370254,0.47980807676929227,0.47996801279488205,0.48012794882047183,0.48028788484606155,0.48044782087165133,0.4806077568972411,0.4807676929228309,0.4809276289484206,0.4810875649740104,0.4812475009996002,0.4814074370251899,0.4815673730507797,0.48172730907636946,0.48188724510195924,0.48204718112754896,0.48220711715313874,0.4823670531787285,0.48252698920431825,0.482686925229908,0.4828468612554978,0.4830067972810876,0.4831667333066773,0.4833266693322671,0.48348660535785687,0.48364654138344665,0.4838064774090364,0.48396641343462615,0.48412634946021593,0.48428628548580566,0.48444622151139544,0.4846061575369852,0.484766093562575,0.4849260295881647,0.4850859656137545,0.4852459016393443,0.485405837664934,0.4855657736905238,0.48572570971611356,0.48588564574170334,0.48604558176729307,0.48620551779288285,0.4863654538184726,0.48652538984406235,0.48668532586965213,0.4868452618952419,0.4870051979208317,0.4871651339464214,0.4873250699720112,0.487485005997601,0.4876449420231907,0.4878048780487805,0.48796481407437026,0.48812475009996004,0.48828468612554976,0.48844462215113954,0.4886045581767293,0.4887644942023191,0.4889244302279088,0.4890843662534986,0.4892443022790884,0.4894042383046781,0.4895641743302679,0.48972411035585767,0.48988404638144745,0.49004398240703717,0.49020391843262695,0.49036385445821673,0.49052379048380645,0.49068372650939623,0.490843662534986,0.4910035985605758,0.4911635345861655,0.4913234706117553,0.4914834066373451,0.4916433426629348,0.4918032786885246,0.49196321471411436,0.49212315073970414,0.49228308676529386,0.49244302279088364,0.4926029588164734,0.49276289484206315,0.49292283086765293,0.4930827668932427,0.4932427029188325,0.4934026389444222,0.493562574970012,0.49372251099560177,0.49388244702119155,0.4940423830467813,0.49420231907237105,0.49436225509796083,0.49452219112355056,0.49468212714914034,0.4948420631747301,0.4950019992003199,0.4951619352259096,0.4953218712514994,0.4954818072770892,0.4956417433026789,0.4958016793282687,0.49596161535385846,0.49612155137944824,0.49628148740503797,0.49644142343062775,0.49660135945621753,0.49676129548180725,0.49692123150739703,0.4970811675329868,0.4972411035585766,0.4974010395841663,0.4975609756097561,0.4977209116353459,0.4978808476609356,0.4980407836865254,0.49820071971211516,0.49836065573770494,0.49852059176329466,0.49868052778888444,0.4988404638144742,0.499000399840064,0.4991603358656537,0.4993202718912435,0.4994802079168333,0.499640143942423,0.4998000799680128,0.49996001599360257,0.5001199520191923,0.5002798880447821,0.5004398240703718,0.5005997600959616,0.5007596961215514,0.5009196321471412,0.5010795681727309,0.5012395041983206,0.5013994402239105,0.5015593762495002,0.5017193122750899,0.5018792483006798,0.5020391843262695,0.5021991203518592,0.502359056377449,0.5025189924030388,0.5026789284286286,0.5028388644542183,0.502998800479808,0.5031587365053979,0.5033186725309876,0.5034786085565773,0.5036385445821672,0.5037984806077569,0.5039584166333466,0.5041183526589365,0.5042782886845262,0.5044382247101159,0.5045981607357057,0.5047580967612955,0.5049180327868853,0.505077968812475,0.5052379048380647,0.5053978408636546,0.5055577768892443,0.505717712914834,0.5058776489404239,0.5060375849660136,0.5061975209916033,0.5063574570171931,0.5065173930427829,0.5066773290683727,0.5068372650939624,0.5069972011195522,0.507157137145142,0.5073170731707317,0.5074770091963214,0.5076369452219113,0.507796881247501,0.5079568172730907,0.5081167532986806,0.5082766893242703,0.50843662534986,0.5085965613754498,0.5087564974010396,0.5089164334266294,0.5090763694522191,0.5092363054778088,0.5093962415033987,0.5095561775289884,0.5097161135545781,0.509876049580168,0.5100359856057577,0.5101959216313474,0.5103558576569373,0.510515793682527,0.5106757297081167,0.5108356657337065,0.5109956017592963,0.5111555377848861,0.5113154738104758,0.5114754098360655,0.5116353458616554,0.5117952818872451,0.5119552179128348,0.5121151539384247,0.5122750899640144,0.5124350259896041,0.512594962015194,0.5127548980407837,0.5129148340663735,0.5130747700919632,0.513234706117553,0.5133946421431428,0.5135545781687325,0.5137145141943222,0.5138744502199121,0.5140343862455018,0.5141943222710915,0.5143542582966814,0.5145141943222711,0.5146741303478608,0.5148340663734506,0.5149940023990404,0.5151539384246302,0.5153138744502199,0.5154738104758096,0.5156337465013995,0.5157936825269892,0.5159536185525789,0.5161135545781688,0.5162734906037585,0.5164334266293482,0.516593362654938,0.5167532986805278,0.5169132347061176,0.5170731707317073,0.5172331067572971,0.5173930427828869,0.5175529788084766,0.5177129148340663,0.5178728508596562,0.5180327868852459,0.5181927229108356,0.5183526589364255,0.5185125949620152,0.5186725309876049,0.5188324670131947,0.5189924030387845,0.5191523390643743,0.519312275089964,0.5194722111155538,0.5196321471411436,0.5197920831667333,0.519952019192323,0.5201119552179129,0.5202718912435026,0.5204318272690923,0.5205917632946822,0.5207516993202719,0.5209116353458616,0.5210715713714514,0.5212315073970412,0.521391443422631,0.5215513794482207,0.5217113154738104,0.5218712514994003,0.52203118752499,0.5221911235505797,0.5223510595761696,0.5225109956017593,0.522670931627349,0.5228308676529388,0.5229908036785286,0.5231507397041184,0.5233106757297081,0.5234706117552979,0.5236305477808877,0.5237904838064774,0.5239504198320671,0.524110355857657,0.5242702918832467,0.5244302279088364,0.5245901639344263,0.524750099960016,0.5249100359856057,0.5250699720111955,0.5252299080367853,0.5253898440623751,0.5255497800879648,0.5257097161135545,0.5258696521391444,0.5260295881647341,0.5261895241903238,0.5263494602159137,0.5265093962415034,0.5266693322670931,0.526829268292683,0.5269892043182727,0.5271491403438625,0.5273090763694522,0.527469012395042,0.5276289484206318,0.5277888844462215,0.5279488204718112,0.5281087564974011,0.5282686925229908,0.5284286285485805,0.5285885645741704,0.5287485005997601,0.5289084366253498,0.5290683726509396,0.5292283086765294,0.5293882447021192,0.5295481807277089,0.5297081167532987,0.5298680527788885,0.5300279888044782,0.5301879248300679,0.5303478608556578,0.5305077968812475,0.5306677329068372,0.530827668932427,0.5309876049580168,0.5311475409836065,0.5313074770091963,0.5314674130347861,0.5316273490603759,0.5317872850859656,0.5319472211115553,0.5321071571371452,0.5322670931627349,0.5324270291883246,0.5325869652139145,0.5327469012395042,0.5329068372650939,0.5330667732906837,0.5332267093162735,0.5333866453418633,0.533546581367453,0.5337065173930428,0.5338664534186326,0.5340263894442223,0.534186325469812,0.5343462614954019,0.5345061975209916,0.5346661335465813,0.5348260695721712,0.5349860055977609,0.5351459416233506,0.5353058776489404,0.5354658136745302,0.53562574970012,0.5357856857257097,0.5359456217512995,0.5361055577768893,0.536265493802479,0.5364254298280687,0.5365853658536586,0.5367453018792483,0.536905237904838,0.5370651739304279,0.5372251099560176,0.5373850459816074,0.5375449820071971,0.5377049180327869,0.5378648540583767,0.5380247900839664,0.5381847261095561,0.538344662135146,0.5385045981607357,0.5386645341863254,0.5388244702119153,0.538984406237505,0.5391443422630947,0.5393042782886845,0.5394642143142743,0.5396241503398641,0.5397840863654538,0.5399440223910436,0.5401039584166334,0.5402638944422231,0.5404238304678128,0.5405837664934027,0.5407437025189924,0.5409036385445821,0.541063574570172,0.5412235105957617,0.5413834466213514,0.5415433826469412,0.541703318672531,0.5418632546981208,0.5420231907237105,0.5421831267493002,0.5423430627748901,0.5425029988004798,0.5426629348260695,0.5428228708516594,0.5429828068772491,0.5431427429028388,0.5433026789284287,0.5434626149540184,0.5436225509796082,0.5437824870051979,0.5439424230307877,0.5441023590563775,0.5442622950819672,0.5444222311075569,0.5445821671331468,0.5447421031587365,0.5449020391843262,0.5450619752099161,0.5452219112355058,0.5453818472610955,0.5455417832866853,0.5457017193122751,0.5458616553378649,0.5460215913634546,0.5461815273890444,0.5463414634146342,0.5465013994402239,0.5466613354658136,0.5468212714914035,0.5469812075169932,0.5471411435425829,0.5473010795681728,0.5474610155937625,0.5476209516193523,0.547780887644942,0.5479408236705318,0.5481007596961216,0.5482606957217113,0.548420631747301,0.5485805677728909,0.5487405037984806,0.5489004398240703,0.5490603758496602,0.5492203118752499,0.5493802479008396,0.5495401839264294,0.5497001199520192,0.549860055977609,0.5500199920031987,0.5501799280287885,0.5503398640543783,0.550499800079968,0.5506597361055577,0.5508196721311476,0.5509796081567373,0.551139544182327,0.5512994802079169,0.5514594162335066,0.5516193522590963,0.5517792882846861,0.5519392243102759,0.5520991603358657,0.5522590963614554,0.5524190323870452,0.552578968412635,0.5527389044382247,0.5528988404638144,0.5530587764894043,0.553218712514994,0.5533786485405837,0.5535385845661736,0.5536985205917633,0.5538584566173531,0.5540183926429428,0.5541783286685326,0.5543382646941224,0.5544982007197121,0.5546581367453018,0.5548180727708917,0.5549780087964814,0.5551379448220711,0.555297880847661,0.5554578168732507,0.5556177528988404,0.5557776889244302,0.55593762495002,0.5560975609756098,0.5562574970011995,0.5564174330267893,0.5565773690523791,0.5567373050779688,0.5568972411035585,0.5570571771291484,0.5572171131547381,0.5573770491803278,0.5575369852059177,0.5576969212315074,0.5578568572570972,0.5580167932826869,0.5581767293082767,0.5583366653338665,0.5584966013594562,0.558656537385046,0.5588164734106358,0.5589764094362255,0.5591363454618152,0.5592962814874051,0.5594562175129948,0.5596161535385845,0.5597760895641744,0.5599360255897641,0.5600959616153539,0.5602558976409436,0.5604158336665334,0.5605757696921232,0.5607357057177129,0.5608956417433026,0.5610555777688925,0.5612155137944822,0.5613754498200719,0.5615353858456618,0.5616953218712515,0.5618552578968412,0.562015193922431,0.5621751299480208,0.5623350659736106,0.5624950019992003,0.56265493802479,0.5628148740503799,0.5629748100759696,0.5631347461015593,0.5632946821271492,0.5634546181527389,0.5636145541783286,0.5637744902039185,0.5639344262295082,0.564094362255098,0.5642542982806877,0.5644142343062775,0.5645741703318673,0.564734106357457,0.5648940423830467,0.5650539784086366,0.5652139144342263,0.565373850459816,0.5655337864854059,0.5656937225109956,0.5658536585365853,0.5660135945621751,0.5661735305877649,0.5663334666133547,0.5664934026389444,0.5666533386645342,0.566813274690124,0.5669732107157137,0.5671331467413034,0.5672930827668933,0.567453018792483,0.5676129548180727,0.5677728908436626,0.5679328268692523,0.5680927628948421,0.5682526989204318,0.5684126349460216,0.5685725709716114,0.5687325069972011,0.5688924430227909,0.5690523790483807,0.5692123150739704,0.5693722510995601,0.56953218712515,0.5696921231507397,0.5698520591763294,0.5700119952019193,0.570171931227509,0.5703318672530988,0.5704918032786885,0.5706517393042783,0.5708116753298681,0.5709716113554578,0.5711315473810475,0.5712914834066374,0.5714514194322271,0.5716113554578168,0.5717712914834067,0.5719312275089964,0.5720911635345861,0.572251099560176,0.5724110355857657,0.5725709716113555,0.5727309076369452,0.572890843662535,0.5730507796881248,0.5732107157137145,0.5733706517393042,0.5735305877648941,0.5736905237904838,0.5738504598160735,0.5740103958416634,0.5741703318672531,0.5743302678928429,0.5744902039184326,0.5746501399440224,0.5748100759696122,0.5749700119952019,0.5751299480207916,0.5752898840463815,0.5754498200719712,0.5756097560975609,0.5757696921231508,0.5759296281487405,0.5760895641743302,0.57624950019992,0.5764094362255098,0.5765693722510996,0.5767293082766893,0.5768892443022791,0.5770491803278689,0.5772091163534586,0.5773690523790483,0.5775289884046382,0.5776889244302279,0.5778488604558176,0.5780087964814075,0.5781687325069972,0.578328668532587,0.5784886045581767,0.5786485405837665,0.5788084766093563,0.578968412634946,0.5791283486605358,0.5792882846861256,0.5794482207117153,0.579608156737305,0.5797680927628949,0.5799280287884846,0.5800879648140743,0.5802479008396642,0.5804078368652539,0.5805677728908437,0.5807277089164334,0.5808876449420232,0.581047580967613,0.5812075169932027,0.5813674530187924,0.5815273890443823,0.581687325069972,0.5818472610955617,0.5820071971211516,0.5821671331467413,0.582327069172331,0.5824870051979208,0.5826469412235106,0.5828068772491004,0.5829668132746901,0.5831267493002799,0.5832866853258697,0.5834466213514594,0.5836065573770491,0.583766493402639,0.5839264294282287,0.5840863654538184,0.5842463014794083,0.584406237504998,0.5845661735305878,0.5847261095561775,0.5848860455817673,0.5850459816073571,0.5852059176329468,0.5853658536585366,0.5855257896841264,0.5856857257097161,0.5858456617353058,0.5860055977608957,0.5861655337864854,0.5863254698120751,0.586485405837665,0.5866453418632547,0.5868052778888445,0.5869652139144342,0.587125149940024,0.5872850859656138,0.5874450219912035,0.5876049580167932,0.5877648940423831,0.5879248300679728,0.5880847660935625,0.5882447021191524,0.5884046381447421,0.5885645741703319,0.5887245101959216,0.5888844462215114,0.5890443822471012,0.5892043182726909,0.5893642542982807,0.5895241903238705,0.5896841263494602,0.5898440623750499,0.5900039984006398,0.5901639344262295,0.5903238704518192,0.5904838064774091,0.5906437425029988,0.5908036785285886,0.5909636145541783,0.5911235505797681,0.5912834866053579,0.5914434226309476,0.5916033586565373,0.5917632946821272,0.5919232307077169,0.5920831667333066,0.5922431027588965,0.5924030387844862,0.5925629748100759,0.5927229108356658,0.5928828468612555,0.5930427828868453,0.593202718912435,0.5933626549380248,0.5935225909636146,0.5936825269892043,0.593842463014794,0.5940023990403839,0.5941623350659736,0.5943222710915633,0.5944822071171532,0.5946421431427429,0.5948020791683327,0.5949620151939224,0.5951219512195122,0.595281887245102,0.5954418232706917,0.5956017592962815,0.5957616953218713,0.595921631347461,0.5960815673730507,0.5962415033986406,0.5964014394242303,0.59656137544982,0.5967213114754099,0.5968812475009996,0.5970411835265894,0.5972011195521791,0.5973610555777689,0.5975209916033587,0.5976809276289484,0.5978408636545381,0.598000799680128,0.5981607357057177,0.5983206717313074,0.5984806077568973,0.598640543782487,0.5988004798080768,0.5989604158336665,0.5991203518592563,0.5992802878848461,0.5994402239104358,0.5996001599360256,0.5997600959616154,0.5999200319872051,0.6000799680127948,0.6002399040383847,0.6003998400639744,0.6005597760895641,0.600719712115154,0.6008796481407437,0.6010395841663335,0.6011995201919232,0.601359456217513,0.6015193922431028,0.6016793282686925,0.6018392642942823,0.6019992003198721,0.6021591363454618,0.6023190723710515,0.6024790083966414,0.6026389444222311,0.6027988804478208,0.6029588164734107,0.6031187524990004,0.6032786885245902,0.6034386245501799,0.6035985605757697,0.6037584966013595,0.6039184326269492,0.6040783686525389,0.6042383046781288,0.6043982407037185,0.6045581767293082,0.6047181127548981,0.6048780487804878,0.6050379848060776,0.6051979208316673,0.6053578568572571,0.6055177928828469,0.6056777289084366,0.6058376649340264,0.6059976009596162,0.6061575369852059,0.6063174730107956,0.6064774090363855,0.6066373450619752,0.6067972810875649,0.6069572171131548,0.6071171531387445,0.6072770891643343,0.607437025189924,0.6075969612155138,0.6077568972411036,0.6079168332666933,0.608076769292283,0.6082367053178729,0.6083966413434626,0.6085565773690523,0.6087165133946422,0.6088764494202319,0.6090363854458217,0.6091963214714115,0.6093562574970012,0.609516193522591,0.6096761295481807,0.6098360655737705,0.6099960015993603,0.61015593762495,0.6103158736505397,0.6104758096761296,0.6106357457017193,0.610795681727309,0.6109556177528989,0.6111155537784886,0.6112754898040784,0.6114354258296681,0.6115953618552579,0.6117552978808477,0.6119152339064374,0.6120751699320272,0.612235105957617,0.6123950419832067,0.6125549780087964,0.6127149140343863,0.612874850059976,0.6130347860855657,0.6131947221111556,0.6133546581367453,0.6135145941623351,0.6136745301879248,0.6138344662135146,0.6139944022391044,0.6141543382646941,0.6143142742902838,0.6144742103158737,0.6146341463414634,0.6147940823670531,0.614954018392643,0.6151139544182327,0.6152738904438225,0.6154338264694122,0.615593762495002,0.6157536985205918,0.6159136345461815,0.6160735705717713,0.6162335065973611,0.6163934426229508,0.6165533786485405,0.6167133146741304,0.6168732506997201,0.6170331867253098,0.6171931227508997,0.6173530587764894,0.6175129948020792,0.6176729308276689,0.6178328668532587,0.6179928028788485,0.6181527389044382,0.618312674930028,0.6184726109556178,0.6186325469812075,0.6187924830067972,0.6189524190323871,0.6191123550579768,0.6192722910835666,0.6194322271091564,0.6195921631347461,0.6197520991603359,0.6199120351859256,0.6200719712115154,0.6202319072371052,0.6203918432626949,0.6205517792882846,0.6207117153138745,0.6208716513394642,0.6210315873650539,0.6211915233906438,0.6213514594162335,0.6215113954418233,0.621671331467413,0.6218312674930028,0.6219912035185926,0.6221511395441823,0.622311075569772,0.6224710115953619,0.6226309476209516,0.6227908836465413,0.6229508196721312,0.6231107556977209,0.6232706917233106,0.6234306277489005,0.6235905637744902,0.62375049980008,0.6239104358256697,0.6240703718512595,0.6242303078768493,0.624390243902439,0.6245501799280287,0.6247101159536186,0.6248700519792083,0.625029988004798,0.6251899240303879,0.6253498600559776,0.6255097960815674,0.6256697321071572,0.6258296681327469,0.6259896041583367,0.6261495401839264,0.6263094762095162,0.626469412235106,0.6266293482606957,0.6267892842862854,0.6269492203118753,0.627109156337465,0.6272690923630547,0.6274290283886446,0.6275889644142343,0.6277489004398241,0.6279088364654138,0.6280687724910036,0.6282287085165934,0.6283886445421831,0.6285485805677729,0.6287085165933627,0.6288684526189524,0.6290283886445421,0.629188324670132,0.6293482606957217,0.6295081967213115,0.6296681327469013,0.629828068772491,0.6299880047980808,0.6301479408236705,0.6303078768492603,0.6304678128748501,0.6306277489004398,0.6307876849260295,0.6309476209516194,0.6311075569772091,0.6312674930027988,0.6314274290283887,0.6315873650539784,0.6317473010795682,0.631907237105158,0.6320671731307477,0.6322271091563375,0.6323870451819272,0.632546981207517,0.6327069172331068,0.6328668532586965,0.6330267892842862,0.6331867253098761,0.6333466613354658,0.6335065973610555,0.6336665333866454,0.6338264694122351,0.6339864054378249,0.6341463414634146,0.6343062774890044,0.6344662135145942,0.6346261495401839,0.6347860855657737,0.6349460215913635,0.6351059576169532,0.6352658936425429,0.6354258296681328,0.6355857656937225,0.6357457017193123,0.635905637744902,0.6360655737704918,0.6362255097960816,0.6363854458216713,0.6365453818472611,0.6367053178728509,0.6368652538984406,0.6370251899240303,0.6371851259496202,0.6373450619752099,0.6375049980007996,0.6376649340263895,0.6378248700519792,0.637984806077569,0.6381447421031587,0.6383046781287485,0.6384646141543383,0.638624550179928,0.6387844862055178,0.6389444222311076,0.6391043582566973,0.639264294282287,0.6394242303078769,0.6395841663334666,0.6397441023590564,0.6399040383846462,0.6400639744102359,0.6402239104358257,0.6403838464614154,0.6405437824870052,0.640703718512595,0.6408636545381847,0.6410235905637744,0.6411835265893643,0.641343462614954,0.6415033986405437,0.6416633346661336,0.6418232706917233,0.6419832067173131,0.6421431427429029,0.6423030787684926,0.6424630147940824,0.6426229508196721,0.6427828868452619,0.6429428228708517,0.6431027588964414,0.6432626949220311,0.643422630947621,0.6435825669732107,0.6437425029988004,0.6439024390243903,0.64406237504998,0.6442223110755698,0.6443822471011595,0.6445421831267493,0.6447021191523391,0.6448620551779288,0.6450219912035186,0.6451819272291084,0.6453418632546981,0.6455017992802878,0.6456617353058777,0.6458216713314674,0.6459816073570572,0.646141543382647,0.6463014794082367,0.6464614154338265,0.6466213514594162,0.646781287485006,0.6469412235105958,0.6471011595361855,0.6472610955617752,0.6474210315873651,0.6475809676129548,0.6477409036385445,0.6479008396641344,0.6480607756897241,0.6482207117153139,0.6483806477409036,0.6485405837664934,0.6487005197920832,0.6488604558176729,0.6490203918432627,0.6491803278688525,0.6493402638944422,0.6495001999200319,0.6496601359456218,0.6498200719712115,0.6499800079968013,0.6501399440223911,0.6502998800479808,0.6504598160735706,0.6506197520991603,0.6507796881247501,0.6509396241503399,0.6510995601759296,0.6512594962015194,0.6514194322271092,0.6515793682526989,0.6517393042782886,0.6518992403038785,0.6520591763294682,0.652219112355058,0.6523790483806478,0.6525389844062375,0.6526989204318273,0.652858856457417,0.6530187924830068,0.6531787285085966,0.6533386645341863,0.653498600559776,0.6536585365853659,0.6538184726109556,0.6539784086365453,0.6541383446621352,0.6542982806877249,0.6544582167133147,0.6546181527389044,0.6547780887644942,0.654938024790084,0.6550979608156737,0.6552578968412635,0.6554178328668533,0.655577768892443,0.6557377049180327,0.6558976409436226,0.6560575769692123,0.6562175129948021,0.6563774490203919,0.6565373850459816,0.6566973210715714,0.6568572570971611,0.6570171931227509,0.6571771291483407,0.6573370651739304,0.6574970011995201,0.65765693722511,0.6578168732506997,0.6579768092762894,0.6581367453018793,0.658296681327469,0.6584566173530588,0.6586165533786486,0.6587764894042383,0.6589364254298281,0.6590963614554178,0.6592562974810076,0.6594162335065974,0.6595761695321871,0.6597361055577768,0.6598960415833667,0.6600559776089564,0.6602159136345462,0.660375849660136,0.6605357856857257,0.6606957217113155,0.6608556577369052,0.661015593762495,0.6611755297880848,0.6613354658136745,0.6614954018392643,0.6616553378648541,0.6618152738904438,0.6619752099160335,0.6621351459416234,0.6622950819672131,0.6624550179928029,0.6626149540183927,0.6627748900439824,0.6629348260695722,0.6630947620951619,0.6632546981207517,0.6634146341463415,0.6635745701719312,0.663734506197521,0.6638944422231108,0.6640543782487005,0.6642143142742902,0.6643742502998801,0.6645341863254698,0.6646941223510596,0.6648540583766493,0.6650139944022391,0.6651739304278289,0.6653338664534186,0.6654938024790084,0.6656537385045982,0.6658136745301879,0.6659736105557776,0.6661335465813675,0.6662934826069572,0.666453418632547,0.6666133546581368,0.6667732906837265,0.6669332267093163,0.667093162734906,0.6672530987604958,0.6674130347860856,0.6675729708116753,0.667732906837265,0.6678928428628549,0.6680527788884446,0.6682127149140343,0.6683726509396242,0.6685325869652139,0.6686925229908037,0.6688524590163935,0.6690123950419832,0.669172331067573,0.6693322670931627,0.6694922031187525,0.6696521391443423,0.669812075169932,0.6699720111955217,0.6701319472211116,0.6702918832467013,0.6704518192722911,0.6706117552978809,0.6707716913234706,0.6709316273490604,0.6710915633746501,0.6712514994002399,0.6714114354258297,0.6715713714514194,0.6717313074770092,0.671891243502599,0.6720511795281887,0.6722111155537784,0.6723710515793683,0.672530987604958,0.6726909236305478,0.6728508596561376,0.6730107956817273,0.6731707317073171,0.6733306677329068,0.6734906037584966,0.6736505397840864,0.6738104758096761,0.6739704118352658,0.6741303478608557,0.6742902838864454,0.6744502199120351,0.674610155937625,0.6747700919632147,0.6749300279888045,0.6750899640143943,0.675249900039984,0.6754098360655738,0.6755697720911635,0.6757297081167533,0.6758896441423431,0.6760495801679328,0.6762095161935225,0.6763694522191124,0.6765293882447021,0.6766893242702919,0.6768492602958817,0.6770091963214714,0.6771691323470612,0.6773290683726509,0.6774890043982407,0.6776489404238305,0.6778088764494202,0.67796881247501,0.6781287485005998,0.6782886845261895,0.6784486205517792,0.6786085565773691,0.6787684926029588,0.6789284286285486,0.6790883646541384,0.6792483006797281,0.6794082367053179,0.6795681727309076,0.6797281087564974,0.6798880447820872,0.6800479808076769,0.6802079168332666,0.6803678528588565,0.6805277888844462,0.680687724910036,0.6808476609356258,0.6810075969612155,0.6811675329868053,0.681327469012395,0.6814874050379848,0.6816473410635746,0.6818072770891643,0.6819672131147541,0.6821271491403439,0.6822870851659336,0.6824470211915233,0.6826069572171132,0.6827668932427029,0.6829268292682927,0.6830867652938825,0.6832467013194722,0.683406637345062,0.6835665733706517,0.6837265093962415,0.6838864454218313,0.684046381447421,0.6842063174730107,0.6843662534986006,0.6845261895241903,0.68468612554978,0.6848460615753699,0.6850059976009596,0.6851659336265494,0.6853258696521392,0.6854858056777289,0.6856457417033187,0.6858056777289084,0.6859656137544982,0.686125549780088,0.6862854858056777,0.6864454218312674,0.6866053578568573,0.686765293882447,0.6869252299080368,0.6870851659336266,0.6872451019592163,0.6874050379848061,0.6875649740103958,0.6877249100359856,0.6878848460615754,0.6880447820871651,0.6882047181127549,0.6883646541383447,0.6885245901639344,0.6886845261895241,0.688844462215114,0.6890043982407037,0.6891643342662935,0.6893242702918833,0.689484206317473,0.6896441423430628,0.6898040783686525,0.6899640143942423,0.6901239504198321,0.6902838864454218,0.6904438224710115,0.6906037584966014,0.6907636945221911,0.6909236305477809,0.6910835665733707,0.6912435025989604,0.6914034386245502,0.69156337465014,0.6917233106757297,0.6918832467013195,0.6920431827269092,0.692203118752499,0.6923630547780888,0.6925229908036785,0.6926829268292682,0.6928428628548581,0.6930027988804478,0.6931627349060376,0.6933226709316274,0.6934826069572171,0.6936425429828069,0.6938024790083966,0.6939624150339864,0.6941223510595762,0.6942822870851659,0.6944422231107557,0.6946021591363455,0.6947620951619352,0.6949220311875249,0.6950819672131148,0.6952419032387045,0.6954018392642943,0.695561775289884,0.6957217113154738,0.6958816473410636,0.6960415833666533,0.6962015193922431,0.6963614554178329,0.6965213914434226,0.6966813274690123,0.6968412634946022,0.6970011995201919,0.6971611355457817,0.6973210715713715,0.6974810075969612,0.697640943622551,0.6978008796481407,0.6979608156737305,0.6981207516993203,0.69828068772491,0.6984406237504998,0.6986005597760896,0.6987604958016793,0.698920431827269,0.6990803678528589,0.6992403038784486,0.6994002399040384,0.6995601759296282,0.6997201119552179,0.6998800479808077,0.7000399840063974,0.7001999200319872,0.700359856057577,0.7005197920831667,0.7006797281087564,0.7008396641343463,0.700999600159936,0.7011595361855258,0.7013194722111156,0.7014794082367053,0.7016393442622951,0.7017992802878849,0.7019592163134746,0.7021191523390644,0.7022790883646541,0.7024390243902439,0.7025989604158337,0.7027588964414234,0.7029188324670131,0.703078768492603,0.7032387045181927,0.7033986405437825,0.7035585765693723,0.703718512594962,0.7038784486205518,0.7040383846461415,0.7041983206717313,0.7043582566973211,0.7045181927229108,0.7046781287485006,0.7048380647740904,0.7049980007996801,0.7051579368252698,0.7053178728508597,0.7054778088764494,0.7056377449020392,0.705797680927629,0.7059576169532187,0.7061175529788085,0.7062774890043982,0.706437425029988,0.7065973610555778,0.7067572970811675,0.7069172331067572,0.7070771691323471,0.7072371051579368,0.7073970411835266,0.7075569772091164,0.7077169132347061,0.7078768492602959,0.7080367852858857,0.7081967213114754,0.7083566573370652,0.7085165933626549,0.7086765293882447,0.7088364654138345,0.7089964014394242,0.7091563374650139,0.7093162734906038,0.7094762095161935,0.7096361455417833,0.7097960815673731,0.7099560175929628,0.7101159536185526,0.7102758896441423,0.7104358256697321,0.7105957616953219,0.7107556977209116,0.7109156337465014,0.7110755697720912,0.7112355057976809,0.7113954418232707,0.7115553778488605,0.7117153138744502,0.71187524990004,0.7120351859256298,0.7121951219512195,0.7123550579768093,0.712514994002399,0.7126749300279888,0.7128348660535786,0.7129948020791683,0.713154738104758,0.7133146741303479,0.7134746101559376,0.7136345461815274,0.7137944822071172,0.7139544182327069,0.7141143542582967,0.7142742902838864,0.7144342263094762,0.714594162335066,0.7147540983606557,0.7149140343862455,0.7150739704118353,0.715233906437425,0.7153938424630147,0.7155537784886046,0.7157137145141943,0.7158736505397841,0.7160335865653739,0.7161935225909636,0.7163534586165534,0.7165133946421431,0.7166733306677329,0.7168332666933227,0.7169932027189124,0.7171531387445021,0.717313074770092,0.7174730107956817,0.7176329468212715,0.7177928828468613,0.717952818872451,0.7181127548980408,0.7182726909236306,0.7184326269492203,0.7185925629748101,0.7187524990003998,0.7189124350259896,0.7190723710515794,0.7192323070771691,0.7193922431027588,0.7195521791283487,0.7197121151539384,0.7198720511795282,0.720031987205118,0.7201919232307077,0.7203518592562975,0.7205117952818872,0.720671731307477,0.7208316673330668,0.7209916033586565,0.7211515393842463,0.7213114754098361,0.7214714114354258,0.7216313474610156,0.7217912834866054,0.7219512195121951,0.7221111555377849,0.7222710915633747,0.7224310275889644,0.7225909636145542,0.7227508996401439,0.7229108356657337,0.7230707716913235,0.7232307077169132,0.723390643742503,0.7235505797680928,0.7237105157936825,0.7238704518192723,0.7240303878448621,0.7241903238704518,0.7243502598960416,0.7245101959216314,0.7246701319472211,0.7248300679728109,0.7249900039984006,0.7251499400239904,0.7253098760495802,0.7254698120751699,0.7256297481007596,0.7257896841263495,0.7259496201519392,0.726109556177529,0.7262694922031188,0.7264294282287085,0.7265893642542983,0.726749300279888,0.7269092363054778,0.7270691723310676,0.7272291083566573,0.727389044382247,0.7275489804078369,0.7277089164334266,0.7278688524590164,0.7280287884846062,0.7281887245101959,0.7283486605357857,0.7285085965613755,0.7286685325869652,0.728828468612555,0.7289884046381447,0.7291483406637345,0.7293082766893243,0.729468212714914,0.7296281487405037,0.7297880847660936,0.7299480207916833,0.7301079568172731,0.7302678928428629,0.7304278288684526,0.7305877648940424,0.7307477009196321,0.7309076369452219,0.7310675729708117,0.7312275089964014,0.7313874450219912,0.731547381047581,0.7317073170731707,0.7318672530987606,0.7320271891243503,0.73218712514994,0.7323470611755298,0.7325069972011196,0.7326669332267093,0.7328268692522991,0.7329868052778888,0.7331467413034786,0.7333066773290684,0.7334666133546581,0.7336265493802478,0.7337864854058377,0.7339464214314274,0.7341063574570172,0.734266293482607,0.7344262295081967,0.7345861655337865,0.7347461015593763,0.734906037584966,0.7350659736105558,0.7352259096361455,0.7353858456617353,0.7355457816873251,0.7357057177129148,0.7358656537385045,0.7360255897640944,0.7361855257896841,0.7363454618152739,0.7365053978408637,0.7366653338664534,0.7368252698920432,0.736985205917633,0.7371451419432227,0.7373050779688125,0.7374650139944022,0.737624950019992,0.7377848860455818,0.7379448220711715,0.7381047580967613,0.7382646941223511,0.7384246301479408,0.7385845661735306,0.7387445021991204,0.7389044382247101,0.7390643742502999,0.7392243102758896,0.7393842463014794,0.7395441823270692,0.7397041183526589,0.7398640543782486,0.7400239904038385,0.7401839264294282,0.740343862455018,0.7405037984806078,0.7406637345061975,0.7408236705317873,0.740983606557377,0.7411435425829668,0.7413034786085566,0.7414634146341463,0.7416233506597361,0.7417832866853259,0.7419432227109156,0.7421031587365055,0.7422630947620952,0.7424230307876849,0.7425829668132747,0.7427429028388645,0.7429028388644542,0.743062774890044,0.7432227109156337,0.7433826469412235,0.7435425829668133,0.743702518992403,0.7438624550179928,0.7440223910435826,0.7441823270691723,0.7443422630947621,0.7445021991203519,0.7446621351459416,0.7448220711715314,0.7449820071971212,0.7451419432227109,0.7453018792483007,0.7454618152738904,0.7456217512994802,0.74578168732507,0.7459416233506597,0.7461015593762494,0.7462614954018393,0.746421431427429,0.7465813674530188,0.7467413034786086,0.7469012395041983,0.7470611755297881,0.7472211115553778,0.7473810475809676,0.7475409836065574,0.7477009196321471,0.7478608556577369,0.7480207916833267,0.7481807277089164,0.7483406637345063,0.748500599760096,0.7486605357856857,0.7488204718112755,0.7489804078368653,0.749140343862455,0.7493002798880448,0.7494602159136345,0.7496201519392243,0.7497800879648141,0.7499400239904038,0.7500999600159935,0.7502598960415834,0.7504198320671731,0.750579768092763,0.7507397041183527,0.7508996401439424,0.7510595761695322,0.751219512195122,0.7513794482207117,0.7515393842463015,0.7516993202718912,0.751859256297481,0.7520191923230708,0.7521791283486605,0.7523390643742504,0.7524990003998401,0.7526589364254298,0.7528188724510196,0.7529788084766094,0.7531387445021991,0.7532986805277889,0.7534586165533786,0.7536185525789684,0.7537784886045582,0.7539384246301479,0.7540983606557377,0.7542582966813275,0.7544182327069172,0.754578168732507,0.7547381047580968,0.7548980407836865,0.7550579768092763,0.7552179128348661,0.7553778488604558,0.7555377848860456,0.7556977209116353,0.7558576569372251,0.7560175929628149,0.7561775289884046,0.7563374650139943,0.7564974010395842,0.7566573370651739,0.7568172730907637,0.7569772091163535,0.7571371451419432,0.757297081167533,0.7574570171931228,0.7576169532187125,0.7577768892443023,0.757936825269892,0.7580967612954818,0.7582566973210716,0.7584166333466613,0.7585765693722512,0.7587365053978409,0.7588964414234306,0.7590563774490204,0.7592163134746102,0.7593762495001999,0.7595361855257897,0.7596961215513794,0.7598560575769692,0.760015993602559,0.7601759296281487,0.7603358656537385,0.7604958016793283,0.760655737704918,0.7608156737305078,0.7609756097560976,0.7611355457816873,0.7612954818072771,0.7614554178328669,0.7616153538584566,0.7617752898840464,0.7619352259096361,0.7620951619352259,0.7622550979608157,0.7624150339864054,0.7625749700119953,0.762734906037585,0.7628948420631747,0.7630547780887645,0.7632147141143543,0.763374650139944,0.7635345861655338,0.7636945221911235,0.7638544582167133,0.7640143942423031,0.7641743302678928,0.7643342662934826,0.7644942023190724,0.7646541383446621,0.764814074370252,0.7649740103958417,0.7651339464214314,0.7652938824470212,0.765453818472611,0.7656137544982007,0.7657736905237905,0.7659336265493802,0.76609356257497,0.7662534986005598,0.7664134346261495,0.7665733706517392,0.7667333066773291,0.7668932427029188,0.7670531787285086,0.7672131147540984,0.7673730507796881,0.7675329868052779,0.7676929228308677,0.7678528588564574,0.7680127948820472,0.7681727309076369,0.7683326669332267,0.7684926029588165,0.7686525389844062,0.768812475009996,0.7689724110355858,0.7691323470611755,0.7692922830867653,0.7694522191123551,0.7696121551379448,0.7697720911635346,0.7699320271891243,0.7700919632147141,0.7702518992403039,0.7704118352658936,0.7705717712914834,0.7707317073170732,0.7708916433426629,0.7710515793682527,0.7712115153938425,0.7713714514194322,0.771531387445022,0.7716913234706118,0.7718512594962015,0.7720111955217913,0.772171131547381,0.7723310675729708,0.7724910035985606,0.7726509396241503,0.7728108756497402,0.7729708116753299,0.7731307477009196,0.7732906837265094,0.7734506197520992,0.7736105557776889,0.7737704918032787,0.7739304278288685,0.7740903638544582,0.774250299880048,0.7744102359056377,0.7745701719312275,0.7747301079568173,0.774890043982407,0.7750499800079969,0.7752099160335866,0.7753698520591763,0.7755297880847661,0.7756897241103559,0.7758496601359456,0.7760095961615354,0.7761695321871251,0.7763294682127149,0.7764894042383047,0.7766493402638944,0.7768092762894842,0.776969212315074,0.7771291483406637,0.7772890843662535,0.7774490203918433,0.777608956417433,0.7777688924430228,0.7779288284686126,0.7780887644942023,0.7782487005197921,0.7784086365453818,0.7785685725709716,0.7787285085965614,0.7788884446221511,0.779048380647741,0.7792083166733307,0.7793682526989204,0.7795281887245102,0.7796881247501,0.7798480607756897,0.7800079968012795,0.7801679328268692,0.780327868852459,0.7804878048780488,0.7806477409036385,0.7808076769292283,0.7809676129548181,0.7811275489804078,0.7812874850059977,0.7814474210315874,0.7816073570571771,0.7817672930827669,0.7819272291083567,0.7820871651339464,0.7822471011595362,0.7824070371851259,0.7825669732107157,0.7827269092363055,0.7828868452618952,0.7830467812874851,0.7832067173130748,0.7833666533386645,0.7835265893642543,0.7836865253898441,0.7838464614154338,0.7840063974410236,0.7841663334666134,0.7843262694922031,0.7844862055177929,0.7846461415433826,0.7848060775689724,0.7849660135945622,0.7851259496201519,0.7852858856457418,0.7854458216713315,0.7856057576969212,0.785765693722511,0.7859256297481008,0.7860855657736905,0.7862455017992803,0.78640543782487,0.7865653738504598,0.7867253098760496,0.7868852459016393,0.787045181927229,0.7872051179528189,0.7873650539784086,0.7875249900039984,0.7876849260295882,0.7878448620551779,0.7880047980807677,0.7881647341063575,0.7883246701319472,0.788484606157537,0.7886445421831267,0.7888044782087165,0.7889644142343063,0.789124350259896,0.7892842862854859,0.7894442223110756,0.7896041583366653,0.7897640943622551,0.7899240303878449,0.7900839664134346,0.7902439024390244,0.7904038384646142,0.7905637744902039,0.7907237105157937,0.7908836465413834,0.7910435825669732,0.791203518592563,0.7913634546181527,0.7915233906437426,0.7916833266693323,0.791843262694922,0.7920031987205118,0.7921631347461016,0.7923230707716913,0.7924830067972811,0.7926429428228708,0.7928028788484606,0.7929628148740504,0.7931227508996401,0.79328268692523,0.7934426229508197,0.7936025589764094,0.7937624950019992,0.793922431027589,0.7940823670531787,0.7942423030787685,0.7944022391043583,0.794562175129948,0.7947221111555378,0.7948820471811275,0.7950419832067173,0.7952019192323071,0.7953618552578968,0.7955217912834867,0.7956817273090764,0.7958416633346661,0.7960015993602559,0.7961615353858457,0.7963214714114354,0.7964814074370252,0.796641343462615,0.7968012794882047,0.7969612155137945,0.7971211515393842,0.797281087564974,0.7974410235905638,0.7976009596161535,0.7977608956417434,0.7979208316673331,0.7980807676929228,0.7982407037185126,0.7984006397441024,0.7985605757696921,0.7987205117952819,0.7988804478208716,0.7990403838464614,0.7992003198720512,0.7993602558976409,0.7995201919232308,0.7996801279488205,0.7998400639744102,0.8]}

},{}],48:[function(require,module,exports){
module.exports={"expected":[5.604991216397936e-155,5.6044309133809556e-155,5.603870554342082e-155,5.6033101392644976e-155,5.60274966813139e-155,5.602189140925942e-155,5.60162855763131e-155,5.601067918230663e-155,5.600507222707141e-155,5.599946471043896e-155,5.599385663224054e-155,5.598824799230747e-155,5.598263879047084e-155,5.5977029026561815e-155,5.597141870041131e-155,5.596580781185032e-155,5.596019636070959e-155,5.595458434681991e-155,5.594897177001198e-155,5.594335863011628e-155,5.5937744926963406e-155,5.593213066038365e-155,5.592651583020743e-155,5.5920900436264894e-155,5.591528447838627e-155,5.5909667956401545e-155,5.590405087014077e-155,5.5898433219433765e-155,5.589281500411041e-155,5.588719622400034e-155,5.588157687893325e-155,5.587595696873871e-155,5.587033649324612e-155,5.586471545228494e-155,5.5859093845684356e-155,5.585347167327368e-155,5.584784893488194e-155,5.584222563033827e-155,5.583660175947151e-155,5.5830977322110615e-155,5.582535231808429e-155,5.5819726747221294e-155,5.581410060935016e-155,5.580847390429942e-155,5.580284663189758e-155,5.579721879197289e-155,5.5791590384353685e-155,5.578596140886805e-155,5.578033186534416e-155,5.577470175360992e-155,5.576907107349333e-155,5.576343982482214e-155,5.575780800742416e-155,5.575217562112695e-155,5.574654266575817e-155,5.57409091411452e-155,5.573527504711548e-155,5.572964038349635e-155,5.572400515011493e-155,5.571836934679845e-155,5.571273297337385e-155,5.570709602966818e-155,5.57014585155082e-155,5.569582043072078e-155,5.569018177513253e-155,5.5684542548570125e-155,5.567890275086e-155,5.567326238182867e-155,5.566762144130237e-155,5.5661979929107415e-155,5.565633784506999e-155,5.565069518901609e-155,5.564505196077179e-155,5.5639408160162895e-155,5.56337637870153e-155,5.562811884115464e-155,5.562247332240663e-155,5.561682723059673e-155,5.561118056555048e-155,5.560553332709316e-155,5.559988551505014e-155,5.5594237129246505e-155,5.5588588169507415e-155,5.558293863565791e-155,5.557728852752284e-155,5.557163784492711e-155,5.5565986587695395e-155,5.556033475565242e-155,5.555468234862266e-155,5.55490293664307e-155,5.5543375808900825e-155,5.553772167585742e-155,5.55320669671246e-155,5.552641168252659e-155,5.5520755821887316e-155,5.5515099385030764e-155,5.550944237178082e-155,5.550378478196117e-155,5.549812661539558e-155,5.5492467871907515e-155,5.548680855132057e-155,5.548114865345805e-155,5.547548817814336e-155,5.546982712519963e-155,5.546416549445007e-155,5.545850328571764e-155,5.5452840498825384e-155,5.5447177133596055e-155,5.544151318985248e-155,5.543584866741736e-155,5.543018356611322e-155,5.542451788576263e-155,5.541885162618791e-155,5.541318478721146e-155,5.540751736865543e-155,5.540184937034202e-155,5.53961807920932e-155,5.5390511633731e-155,5.538484189507719e-155,5.537917157595364e-155,5.537350067618193e-155,5.5367829195583686e-155,5.536215713398045e-155,5.535648449119355e-155,5.535081126704436e-155,5.534513746135403e-155,5.533946307394378e-155,5.533378810463455e-155,5.5328112553247375e-155,5.532243641960302e-155,5.531675970352234e-155,5.53110824048259e-155,5.530540452333438e-155,5.529972605886817e-155,5.529404701124771e-155,5.528836738029335e-155,5.52826871658252e-155,5.5277006367663475e-155,5.52713249856281e-155,5.52656430195391e-155,5.525996046921622e-155,5.52542773344793e-155,5.52485936151479e-155,5.524290931104168e-155,5.523722442198e-155,5.5231538947782345e-155,5.5225852888267884e-155,5.5220166243255874e-155,5.521447901256544e-155,5.520879119601549e-155,5.520310279342504e-155,5.5197413804612805e-155,5.519172422939759e-155,5.518603406759796e-155,5.518034331903252e-155,5.517465198351961e-155,5.51689600608777e-155,5.516326755092493e-155,5.515757445347951e-155,5.515188076835957e-155,5.514618649538297e-155,5.514049163436768e-155,5.513479618513141e-155,5.5129100147491925e-155,5.512340352126675e-155,5.511770630627346e-155,5.511200850232938e-155,5.510631010925191e-155,5.510061112685819e-155,5.509491155496541e-155,5.508921139339054e-155,5.508351064195055e-155,5.507780930046231e-155,5.50721073687425e-155,5.5066404846607835e-155,5.506070173387481e-155,5.505499803035995e-155,5.504929373587954e-155,5.504358885024995e-155,5.503788337328725e-155,5.503217730480762e-155,5.502647064462695e-155,5.502076339256122e-155,5.501505554842614e-155,5.5009347112037445e-155,5.500363808321079e-155,5.499792846176158e-155,5.499221824750533e-155,5.4986507440257265e-155,5.498079603983268e-155,5.497508404604662e-155,5.49693714587142e-155,5.496365827765026e-155,5.495794450266972e-155,5.495223013358725e-155,5.494651517021755e-155,5.494079961237511e-155,5.493508345987439e-155,5.492936671252982e-155,5.4923649370155545e-155,5.491793143256583e-155,5.4912212899574625e-155,5.490649377099601e-155,5.490077404664376e-155,5.489505372633172e-155,5.48893328098735e-155,5.488361129708275e-155,5.4877889187772864e-155,5.487216648175732e-155,5.486644317884931e-155,5.486071927886207e-155,5.485499478160874e-155,5.4849269686902226e-155,5.48435439945555e-155,5.483781770438128e-155,5.483209081619237e-155,5.482636332980126e-155,5.482063524502055e-155,5.481490656166257e-155,5.480917727953971e-155,5.480344739846409e-155,5.479771691824792e-155,5.4791985838703115e-155,5.4786254159641645e-155,5.478052188087538e-155,5.477478900221592e-155,5.476905552347501e-155,5.476332144446406e-155,5.4757586764994586e-155,5.475185148487784e-155,5.474611560392511e-155,5.474037912194746e-155,5.4734642038756e-155,5.472890435416155e-155,5.472316606797506e-155,5.471742718000716e-155,5.471168769006851e-155,5.470594759796972e-155,5.47002069035211e-155,5.4694465606533086e-155,5.468872370681583e-155,5.468298120417955e-155,5.467723809843418e-155,5.4671494389389756e-155,5.466575007685603e-155,5.466000516064281e-155,5.465425964055965e-155,5.464851351641617e-155,5.464276678802172e-155,5.463701945518567e-155,5.463127151771732e-155,5.4625522975425695e-155,5.461977382811992e-155,5.461402407560885e-155,5.460827371770139e-155,5.46025227542062e-155,5.459677118493198e-155,5.4591019009687185e-155,5.458526622828033e-155,5.457951284051966e-155,5.457375884621347e-155,5.456800424516983e-155,5.456224903719678e-155,5.455649322210231e-155,5.455073679969413e-155,5.454497976978007e-155,5.453922213216766e-155,5.453346388666448e-155,5.452770503307789e-155,5.452194557121529e-155,5.451618550088378e-155,5.451042482189058e-155,5.45046635340426e-155,5.4498901637146844e-155,5.449313913101002e-155,5.448737601543888e-155,5.448161229024007e-155,5.4475847955219995e-155,5.447008301018514e-155,5.446431745494172e-155,5.4458551289296e-155,5.4452784513053986e-155,5.444701712602175e-155,5.444124912800508e-155,5.443548051880986e-155,5.4429711298241666e-155,5.4423941466106165e-155,5.441817102220874e-155,5.44123999663548e-155,5.440662829834965e-155,5.4400856017998375e-155,5.439508312510611e-155,5.438930961947773e-155,5.438353550091816e-155,5.437776076923207e-155,5.43719854242242e-155,5.436620946569898e-155,5.436043289346095e-155,5.435465570731434e-155,5.434887790706348e-155,5.43430994925124e-155,5.4337320463465166e-155,5.433154081972574e-155,5.432576056109784e-155,5.431997968738526e-155,5.431419819839151e-155,5.430841609392019e-155,5.430263337377459e-155,5.42968500377581e-155,5.4291066085673805e-155,5.428528151732488e-155,5.42794963325142e-155,5.427371053104474e-155,5.426792411271915e-155,5.426213707734016e-155,5.425634942471035e-155,5.425056115463209e-155,5.42447722669078e-155,5.423898276133964e-155,5.423319263772982e-155,5.422740189588029e-155,5.422161053559305e-155,5.421581855666982e-155,5.421002595891241e-155,5.4204232742122325e-155,5.4198438906101115e-155,5.419264445065021e-155,5.4186849375570795e-155,5.418105368066415e-155,5.417525736573126e-155,5.416946043057317e-155,5.416366287499066e-155,5.415786469878457e-155,5.415206590175544e-155,5.414626648370392e-155,5.414046644443033e-155,5.41346657837351e-155,5.412886450141836e-155,5.412306259728026e-155,5.411726007112086e-155,5.411145692273994e-155,5.41056531519374e-155,5.4099848758512834e-155,5.40940437422659e-155,5.408823810299597e-155,5.40824318405025e-155,5.4076624954584654e-155,5.407081744504166e-155,5.4065009311672456e-155,5.405920055427608e-155,5.405339117265125e-155,5.404758116659672e-155,5.404177053591115e-155,5.403595928039293e-155,5.403014739984056e-155,5.402433489405219e-155,5.401852176282612e-155,5.40127080059603e-155,5.400689362325278e-155,5.400107861450131e-155,5.399526297950371e-155,5.398944671805753e-155,5.398362982996037e-155,5.397781231500953e-155,5.3971994173002395e-155,5.396617540373616e-155,5.396035600700783e-155,5.395453598261447e-155,5.394871533035285e-155,5.394289405001981e-155,5.39370721414119e-155,5.393124960432573e-155,5.392542643855766e-155,5.391960264390408e-155,5.391377822016109e-155,5.3907953167124884e-155,5.390212748459135e-155,5.389630117235641e-155,5.389047423021587e-155,5.388464665796528e-155,5.387881845540029e-155,5.387298962231623e-155,5.38671601585085e-155,5.3861330063772235e-155,5.385549933790261e-155,5.384966798069452e-155,5.384383599194294e-155,5.3838003371442545e-155,5.383217011898808e-155,5.382633623437398e-155,5.3820501717394744e-155,5.381466656784472e-155,5.380883078551803e-155,5.3802994370208865e-155,5.3797157321711106e-155,5.379131963981873e-155,5.378548132432541e-155,5.377964237502487e-155,5.377380279171057e-155,5.376796257417602e-155,5.376212172221444e-155,5.375628023561913e-155,5.375043811418308e-155,5.37445953576993e-155,5.373875196596072e-155,5.3732907938759985e-155,5.372706327588983e-155,5.372121797714268e-155,5.371537204231106e-155,5.370952547118715e-155,5.370367826356323e-155,5.36978304192313e-155,5.369198193798341e-155,5.36861328196113e-155,5.36802830639068e-155,5.367443267066144e-155,5.366858163966676e-155,5.366272997071422e-155,5.365687766359499e-155,5.365102471810033e-155,5.36451711340212e-155,5.363931691114863e-155,5.3633462049273346e-155,5.362760654818615e-155,5.362175040767754e-155,5.36158936275381e-155,5.361003620755808e-155,5.360417814752785e-155,5.359831944723744e-155,5.359246010647692e-155,5.3586600125036236e-155,5.35807395027051e-155,5.3574878239273265e-155,5.3569016334530215e-155,5.3563153788265475e-155,5.35572906002683e-155,5.355142677032798e-155,5.3545562298233545e-155,5.353969718377405e-155,5.353383142673828e-155,5.3527965026915096e-155,5.352209798409302e-155,5.351623029806063e-155,5.351036196860638e-155,5.350449299551847e-155,5.349862337858516e-155,5.3492753117594424e-155,5.348688221233428e-155,5.348101066259248e-155,5.347513846815681e-155,5.346926562881477e-155,5.346339214435394e-155,5.3457518014561575e-155,5.345164323922501e-155,5.3445767818131285e-155,5.343989175106744e-155,5.343401503782043e-155,5.342813767817692e-155,5.342225967192367e-155,5.341638101884712e-155,5.3410501718733785e-155,5.340462177136988e-155,5.339874117654167e-155,5.339285993403515e-155,5.338697804363635e-155,5.338109550513101e-155,5.337521231830494e-155,5.336932848294365e-155,5.336344399883266e-155,5.335755886575737e-155,5.335167308350294e-155,5.334578665185457e-155,5.333989957059719e-155,5.333401183951577e-155,5.332812345839497e-155,5.332223442701956e-155,5.331634474517396e-155,5.3310454412642675e-155,5.33045634292099e-155,5.3298671794659905e-155,5.329277950877664e-155,5.32868865713441e-155,5.328099298214614e-155,5.327509874096636e-155,5.326920384758841e-155,5.326330830179569e-155,5.325741210337159e-155,5.325151525209926e-155,5.324561774776186e-155,5.323971959014231e-155,5.3233820779023515e-155,5.322792131418814e-155,5.3222021195418845e-155,5.321612042249817e-155,5.3210218995208385e-155,5.3204316913331845e-155,5.3198414176650586e-155,5.319251078494671e-155,5.318660673800201e-155,5.318070203559835e-155,5.317479667751728e-155,5.316889066354043e-155,5.3162983993449095e-155,5.315707666702467e-155,5.3151168684048215e-155,5.314526004430081e-155,5.313935074756343e-155,5.313344079361677e-155,5.31275301822416e-155,5.312161891321838e-155,5.311570698632764e-155,5.310979440134958e-155,5.310388115806449e-155,5.3097967256252345e-155,5.309205269569316e-155,5.308613747616668e-155,5.3080221597452684e-155,5.307430505933065e-155,5.306838786158007e-155,5.306247000398034e-155,5.3056551486310545e-155,5.305063230834987e-155,5.304471246987719e-155,5.303879197067141e-155,5.303287081051116e-155,5.302694898917512e-155,5.302102650644166e-155,5.301510336208921e-155,5.300917955589589e-155,5.30032550876399e-155,5.29973299570991e-155,5.2991404164051385e-155,5.298547770827452e-155,5.297955058954601e-155,5.297362280764342e-155,5.296769436234399e-155,5.296176525342505e-155,5.29558354806636e-155,5.29499050438367e-155,5.2943973942721115e-155,5.293804217709365e-155,5.293210974673081e-155,5.2926176651409164e-155,5.292024289090496e-155,5.2914308464994476e-155,5.2908373373453844e-155,5.290243761605894e-155,5.289650119258572e-155,5.289056410280978e-155,5.288462634650683e-155,5.287868792345223e-155,5.287274883342142e-155,5.2866809076189524e-155,5.286086865153172e-155,5.285492755922288e-155,5.284898579903792e-155,5.284304337075146e-155,5.283710027413814e-155,5.283115650897245e-155,5.282521207502864e-155,5.281926697208098e-155,5.281332119990347e-155,5.280737475827015e-155,5.280142764695474e-155,5.2795479865731025e-155,5.278953141437248e-155,5.278358229265263e-155,5.27776325003447e-155,5.277168203722196e-155,5.2765730903057365e-155,5.27597790976239e-155,5.27538266206944e-155,5.274787347204145e-155,5.274191965143768e-155,5.27359651586554e-155,5.2730009993467004e-155,5.272405415564455e-155,5.271809764496015e-155,5.271214046118562e-155,5.270618260409281e-155,5.270022407345327e-155,5.269426486903862e-155,5.268830499062014e-155,5.2682344437969115e-155,5.267638321085673e-155,5.267042130905389e-155,5.266445873233153e-155,5.265849548046032e-155,5.265253155321094e-155,5.2646566950353774e-155,5.264060167165926e-155,5.2634635716897526e-155,5.262866908583874e-155,5.262270177825277e-155,5.261673379390953e-155,5.261076513257862e-155,5.260479579402964e-155,5.259882577803208e-155,5.2592855084355146e-155,5.258688371276809e-155,5.258091166303988e-155,5.2574938934939494e-155,5.256896552823563e-155,5.256299144269701e-155,5.255701667809207e-155,5.255104123418928e-155,5.254506511075679e-155,5.253908830756282e-155,5.2533110824375255e-155,5.2527132660962e-155,5.2521153817090835e-155,5.251517429252924e-155,5.2509194087044774e-155,5.250321320040466e-155,5.24972316323762e-155,5.249124938272635e-155,5.248526645122212e-155,5.2479282837630235e-155,5.247329854171743e-155,5.246731356325015e-155,5.246132790199488e-155,5.24553415577178e-155,5.244935453018507e-155,5.244336681916273e-155,5.2437378424416554e-155,5.243138934571237e-155,5.242539958281567e-155,5.241940913549201e-155,5.241341800350662e-155,5.240742618662479e-155,5.240143368461148e-155,5.23954404972317e-155,5.238944662425016e-155,5.23834520654316e-155,5.237745682054045e-155,5.237146088934113e-155,5.236546427159795e-155,5.235946696707492e-155,5.235346897553613e-155,5.234747029674531e-155,5.2341470930466274e-155,5.2335470876462505e-155,5.232947013449753e-155,5.2323468704334555e-155,5.231746658573684e-155,5.2311463778467335e-155,5.230546028228902e-155,5.229945609696455e-155,5.2293451222256605e-155,5.228744565792772e-155,5.228143940374015e-155,5.22754324594562e-155,5.2269424824837856e-155,5.226341649964715e-155,5.225740748364578e-155,5.2251397776595525e-155,5.224538737825781e-155,5.223937628839412e-155,5.223336450676562e-155,5.222735203313348e-155,5.222133886725871e-155,5.221532500890207e-155,5.220931045782436e-155,5.220329521378604e-155,5.2197279276547644e-155,5.219126264586937e-155,5.218524532151145e-155,5.217922730323381e-155,5.2173208590796435e-155,5.216718918395895e-155,5.216116908248106e-155,5.215514828612211e-155,5.214912679464149e-155,5.214310460779841e-155,5.2137081725351845e-155,5.213105814706077e-155,5.212503387268386e-155,5.211900890197983e-155,5.211298323470709e-155,5.210695687062406e-155,5.210092980948886e-155,5.209490205105965e-155,5.208887359509425e-155,5.208284444135055e-155,5.207681458958612e-155,5.207078403955848e-155,5.2064752791025055e-155,5.205872084374299e-155,5.2052688197469435e-155,5.204665485196126e-155,5.204062080697535e-155,5.203458606226829e-155,5.202855061759667e-155,5.2022514472716786e-155,5.201647762738497e-155,5.201044008135723e-155,5.200440183438959e-155,5.19983628862378e-155,5.199232323665755e-155,5.198628288540444e-155,5.198024183223375e-155,5.197420007690082e-155,5.196815761916066e-155,5.196211445876832e-155,5.195607059547852e-155,5.195002602904605e-155,5.194398075922533e-155,5.1937934785770835e-155,5.193188810843674e-155,5.192584072697723e-155,5.191979264114616e-155,5.191374385069742e-155,5.190769435538471e-155,5.1901644154961475e-155,5.189559324918119e-155,5.1889541637797005e-155,5.188348932056211e-155,5.1877436297229374e-155,5.1871382567551685e-155,5.186532813128163e-155,5.185927298817182e-155,5.1853217137974535e-155,5.184716058044211e-155,5.184110331532652e-155,5.183504534237978e-155,5.182898666135371e-155,5.182292727199989e-155,5.181686717406991e-155,5.181080636731503e-155,5.180474485148658e-155,5.179868262633553e-155,5.17926196916129e-155,5.178655604706937e-155,5.178049169245567e-155,5.17744266275222e-155,5.176836085201938e-155,5.176229436569733e-155,5.175622716830614e-155,5.1750159259595755e-155,5.174409063931584e-155,5.173802130721609e-155,5.173195126304589e-155,5.172588050655464e-155,5.17198090374914e-155,5.1713736855605314e-155,5.170766396064514e-155,5.17015903523597e-155,5.169551603049749e-155,5.168944099480702e-155,5.168336524503648e-155,5.167728878093407e-155,5.16712116022478e-155,5.166513370872543e-155,5.165905510011473e-155,5.165297577616316e-155,5.164689573661821e-155,5.164081498122702e-155,5.163473350973678e-155,5.162865132189435e-155,5.162256841744662e-155,5.161648479614014e-155,5.16104004577215e-155,5.160431540193696e-155,5.159822962853277e-155,5.159214313725502e-155,5.158605592784953e-155,5.1579968000062126e-155,5.157387935363833e-155,5.156778998832368e-155,5.156169990386337e-155,5.155560910000267e-155,5.154951757648646e-155,5.1543425333059696e-155,5.153733236946698e-155,5.153123868545295e-155,5.15251442807619e-155,5.151904915513814e-155,5.15129533083258e-155,5.150685674006872e-155,5.150075945011079e-155,5.149466143819556e-155,5.148856270406661e-155,5.148246324746716e-155,5.147636306814052e-155,5.14702621658296e-155,5.146416054027738e-155,5.14580581912265e-155,5.1451955118419605e-155,5.144585132159905e-155,5.143974680050713e-155,5.143364155488601e-155,5.142753558447756e-155,5.1421428889023684e-155,5.141532146826594e-155,5.140921332194592e-155,5.140310444980488e-155,5.139699485158411e-155,5.139088452702457e-155,5.138477347586721e-155,5.137866169785269e-155,5.1372549192721676e-155,5.13664359602145e-155,5.136032200007148e-155,5.135420731203277e-155,5.134809189583824e-155,5.134197575122779e-155,5.133585887794097e-155,5.132974127571738e-155,5.132362294429626e-155,5.131750388341688e-155,5.13113840928182e-155,5.130526357223915e-155,5.129914232141838e-155,5.1293020340094535e-155,5.1286897628005935e-155,5.128077418489086e-155,5.127465001048748e-155,5.12685251045336e-155,5.126239946676711e-155,5.125627309692555e-155,5.125014599474647e-155,5.124401815996709e-155,5.123788959232465e-155,5.123176029155605e-155,5.122563025739823e-155,5.1219499489587766e-155,5.1213367987861235e-155,5.1207235751955055e-155,5.120110278160532e-155,5.11949690765482e-155,5.1188834636519466e-155,5.118269946125496e-155,5.117656355049015e-155,5.117042690396056e-155,5.116428952140135e-155,5.11581514025477e-155,5.115201254713447e-155,5.1145872954896525e-155,5.11397326255684e-155,5.113359155888459e-155,5.112744975457946e-155,5.112130721238704e-155,5.1115163932041435e-155,5.110901991327635e-155,5.1102875155825545e-155,5.109672965942243e-155,5.109058342380046e-155,5.10844364486927e-155,5.107828873383227e-155,5.107214027895194e-155,5.106599108378451e-155,5.1059841148062415e-155,5.1053690471518085e-155,5.104753905388378e-155,5.104138689489147e-155,5.103523399427314e-155,5.102908035176042e-155,5.102292596708498e-155,5.101677083997814e-155,5.101061497017123e-155,5.100445835739525e-155,5.099830100138121e-155,5.099214290185978e-155,5.098598405856164e-155,5.097982447121715e-155,5.097366413955661e-155,5.096750306331018e-155,5.096134124220772e-155,5.0955178675979105e-155,5.094901536435385e-155,5.0942851307061504e-155,5.093668650383127e-155,5.0930520954392375e-155,5.0924354658473676e-155,5.091818761580407e-155,5.09120198261121e-155,5.090585128912633e-155,5.089968200457498e-155,5.089351197218622e-155,5.08873411916881e-155,5.088116966280831e-155,5.0874997385274615e-155,5.086882435881438e-155,5.0862650583155036e-155,5.0856476058023624e-155,5.085030078314723e-155,5.084412475825257e-155,5.083794798306641e-155,5.083177045731512e-155,5.082559218072514e-155,5.081941315302251e-155,5.081323337393327e-155,5.08070528431833e-155,5.0800871560498134e-155,5.0794689525603385e-155,5.0788506738224255e-155,5.078232319808601e-155,5.077613890491353e-155,5.076995385843173e-155,5.076376805836517e-155,5.075758150443842e-155,5.075139419637571e-155,5.074520613390127e-155,5.0739017316739e-155,5.073282774461275e-155,5.072663741724621e-155,5.072044633436275e-155,5.071425449568578e-155,5.070806190093834e-155,5.070186854984348e-155,5.069567444212392e-155,5.068947957750237e-155,5.06832839557012e-155,5.0677087576442794e-155,5.067089043944917e-155,5.066469254444238e-155,5.0658493891144094e-155,5.065229447927598e-155,5.064609430855953e-155,5.06398933787159e-155,5.06336916894663e-155,5.062748924053154e-155,5.062128603163249e-155,5.061508206248963e-155,5.060887733282347e-155,5.060267184235416e-155,5.059646559080185e-155,5.059025857788636e-155,5.0584050803327505e-155,5.057784226684475e-155,5.057163296815751e-155,5.0565422906985055e-155,5.055921208304633e-155,5.055300049606028e-155,5.054678814574553e-155,5.054057503182066e-155,5.053436115400394e-155,5.052814651201364e-155,5.052193110556766e-155,5.051571493438392e-155,5.050949799817998e-155,5.050328029667341e-155,5.049706182958143e-155,5.049084259662121e-155,5.048462259750975e-155,5.0478401831963745e-155,5.04721802996999e-155,5.046595800043455e-155,5.045973493388404e-155,5.045351109976437e-155,5.044728649779153e-155,5.044106112768117e-155,5.043483498914894e-155,5.042860808191012e-155,5.042238040568002e-155,5.041615196017357e-155,5.040992274510567e-155,5.0403692760191044e-155,5.039746200514411e-155,5.039123047967928e-155,5.03849981835106e-155,5.037876511635215e-155,5.037253127791762e-155,5.0366296667920725e-155,5.036006128607482e-155,5.035382513209324e-155,5.034758820568899e-155,5.034135050657508e-155,5.033511203446414e-155,5.032887278906875e-155,5.032263277010135e-155,5.031639197727404e-155,5.031015041029892e-155,5.030390806888775e-155,5.029766495275226e-155,5.029142106160386e-155,5.028517639515393e-155,5.02789309531135e-155,5.027268473519361e-155,5.0266437741104914e-155,5.026018997055811e-155,5.02539414232635e-155,5.024769209893135e-155,5.024144199727175e-155,5.023519111799447e-155,5.022893946080929e-155,5.02226870254256e-155,5.0216433811552835e-155,5.021017981890003e-155,5.020392504717623e-155,5.019766949609013e-155,5.0191413165350415e-155,5.018515605466541e-155,5.017889816374338e-155,5.017263949229243e-155,5.016638004002034e-155,5.0160119806634884e-155,5.015385879184346e-155,5.0147596995353495e-155,5.014133441687203e-155,5.013507105610612e-155,5.012880691276243e-155,5.012254198654765e-155,5.011627627716809e-155,5.011000978433006e-155,5.010374250773951e-155,5.009747444710234e-155,5.009120560212427e-155,5.008493597251068e-155,5.007866555796698e-155,5.007239435819818e-155,5.006612237290931e-155,5.005984960180503e-155,5.005357604458999e-155,5.004730170096847e-155,5.004102657064476e-155,5.0034750653322775e-155,5.002847394870642e-155,5.002219645649925e-155,5.001591817640475e-155,5.000963910812623e-155,5.000335925136668e-155,4.9997078605829076e-155,4.9990797171216025e-155,4.998451494723014e-155,4.9978231933573666e-155,4.997194812994883e-155,4.996566353605749e-155,4.995937815160151e-155,4.995309197628238e-155,4.9946805009801585e-155,4.9940517251860234e-155,4.993422870215939e-155,4.992793936039993e-155,4.9921649226282385e-155,4.991535829950732e-155,4.990906657977489e-155,4.990277406678527e-155,4.989648076023825e-155,4.98901866598336e-155,4.988389176527076e-155,4.987759607624912e-155,4.987129959246771e-155,4.986500231362558e-155,4.985870423942135e-155,4.985240536955365e-155,4.984610570372088e-155,4.983980524162111e-155,4.983350398295245e-155,4.9827201927412564e-155,4.982089907469916e-155,4.981459542450956e-155,4.9808290976541064e-155,4.980198573049061e-155,4.979567968605514e-155,4.9789372842931185e-155,4.9783065200815294e-155,4.977675675940364e-155,4.977044751839232e-155,4.976413747747728e-155,4.975782663635407e-155,4.975151499471831e-155,4.9745202552265175e-155,4.973888930868986e-155,4.97325752636872e-155,4.972626041695198e-155,4.971994476817864e-155,4.971362831706159e-155,4.970731106329487e-155,4.9700993006572514e-155,4.969467414658817e-155,4.968835448303544e-155,4.9682034015607706e-155,4.967571274399805e-155,4.966939066789952e-155,4.9663067787004785e-155,4.965674410100652e-155,4.9650419609597005e-155,4.9644094312468516e-155,4.963776820931293e-155,4.963144129982214e-155,4.962511358368764e-155,4.961878506060093e-155,4.961245573025309e-155,4.960612559233518e-155,4.959979464653805e-155,4.959346289255221e-155,4.958713033006817e-155,4.958079695877604e-155,4.957446277836593e-155,4.956812778852756e-155,4.956179198895064e-155,4.955545537932449e-155,4.954911795933843e-155,4.9542779728681386e-155,4.953644068704227e-155,4.953010083410961e-155,4.952376016957187e-155,4.951741869311735e-155,4.951107640443395e-155,4.95047333032096e-155,4.949838938913183e-155,4.949204466188816e-155,4.9485699121165715e-155,4.9479352766651615e-155,4.947300559803259e-155,4.946665761499535e-155,4.9460308817226224e-155,4.9453959204411524e-155,4.944760877623718e-155,4.944125753238905e-155,4.94349054725528e-155,4.942855259641374e-155,4.9422198903657185e-155,4.941584439396803e-155,4.94094890670312e-155,4.940313292253118e-155,4.939677596015248e-155,4.939041817957919e-155,4.938405958049541e-155,4.937770016258482e-155,4.937133992553112e-155,4.9364978869017575e-155,4.935861699272742e-155,4.935225429634369e-155,4.9345890779549034e-155,4.933952644202613e-155,4.933316128345725e-155,4.932679530352462e-155,4.9320428501910115e-155,4.9314060878295564e-155,4.930769243236241e-155,4.93013231637921e-155,4.929495307226565e-155,4.928858215746407e-155,4.9282210419068e-155,4.9275837856757985e-155,4.926946447021438e-155,4.926309025911718e-155,4.925671522314637e-155,4.925033936198154e-155,4.924396267530226e-155,4.923758516278769e-155,4.9231206824117e-155,4.922482765896893e-155,4.921844766702224e-155,4.921206684795525e-155,4.920568520144628e-155,4.919930272717325e-155,4.919291942481404e-155,4.918653529404628e-155,4.918015033454726e-155,4.917376454599427e-155,4.916737792806417e-155,4.9160990480433825e-155,4.915460220277969e-155,4.91482130947782e-155,4.914182315610539e-155,4.9135432386437285e-155,4.912904078544948e-155,4.9122648352817534e-155,4.911625508821678e-155,4.91098609913222e-155,4.910346606180875e-155,4.909707029935098e-155,4.909067370362344e-155,4.908427627430025e-155,4.907787801105553e-155,4.907147891356299e-155,4.906507898149631e-155,4.905867821452877e-155,4.9052276612333634e-155,4.904587417458375e-155,4.903947090095192e-155,4.903306679111071e-155,4.9026661844732326e-155,4.902025606148897e-155,4.9013849441052424e-155,4.9007441983094455e-155,4.900103368728641e-155,4.8994624553299635e-155,4.898821458080505e-155,4.898180376947356e-155,4.897539211897565e-155,4.8968979628981816e-155,4.896256629916211e-155,4.895615212918651e-155,4.8949737118724825e-155,4.894332126744645e-155,4.893690457502078e-155,4.893048704111679e-155,4.892406866540345e-155,4.891764944754931e-155,4.891122938722288e-155,4.890480848409227e-155,4.889838673782559e-155,4.889196414809049e-155,4.888554071455464e-155,4.887911643688527e-155,4.887269131474955e-155,4.886626534781444e-155,4.885983853574651e-155,4.885341087821231e-155,4.8846982374878e-155,4.884055302540969e-155,4.883412282947308e-155,4.882769178673387e-155,4.882125989685729e-155,4.881482715950861e-155,4.880839357435265e-155,4.880195914105419e-155,4.879552385927761e-155,4.878908772868724e-155,4.878265074894714e-155,4.877621291972104e-155,4.876977424067263e-155,4.876333471146518e-155,4.875689433176193e-155,4.8750453101225705e-155,4.874401101951932e-155,4.873756808630514e-155,4.873112430124553e-155,4.872467966400243e-155,4.871823417423774e-155,4.8711787831612936e-155,4.870534063578945e-155,4.869889258642846e-155,4.8692443683190775e-155,4.868599392573719e-155,4.867954331372808e-155,4.867309184682376e-155,4.866663952468415e-155,4.866018634696916e-155,4.865373231333823e-155,4.8647277423450805e-155,4.86408216769659e-155,4.863436507354248e-155,4.862790761283913e-155,4.862144929451431e-155,4.861499011822629e-155,4.860853008363294e-155,4.860206919039211e-155,4.859560743816123e-155,4.858914482659769e-155,4.8582681355358445e-155,4.8576217024100456e-155,4.856975183248022e-155,4.856328578015422e-155,4.8556818866778515e-155,4.855035109200913e-155,4.854388245550165e-155,4.853741295691159e-155,4.853094259589425e-155,4.852447137210453e-155,4.85179992851973e-155,4.8511526334827004e-155,4.850505252064807e-155,4.849857784231447e-155,4.849210229948017e-155,4.848562589179868e-155,4.847914861892351e-155,4.847267048050769e-155,4.8466191476204266e-155,4.845971160566583e-155,4.8453230868544905e-155,4.844674926449375e-155,4.844026679316429e-155,4.8433783454208375e-155,4.842729924727743e-155,4.842081417202287e-155,4.8414328228095655e-155,4.840784141514671e-155,4.840135373282654e-155,4.839486518078561e-155,4.838837575867395e-155,4.838188546614154e-155,4.837539430283795e-155,4.8368902268412665e-155,4.83624093625149e-155,4.835591558479353e-155,4.8349420934897365e-155,4.8342925412474785e-155,4.8336429017174135e-155,4.8329931748643334e-155,4.832343360653024e-155,4.8316934590482305e-155,4.8310434700146916e-155,4.830393393517103e-155,4.829743229520159e-155,4.829092977988506e-155,4.828442638886786e-155,4.827792212179614e-155,4.827141697831566e-155,4.8264910958072166e-155,4.825840406071096e-155,4.825189628587728e-155,4.824538763321594e-155,4.823887810237174e-155,4.823236769298899e-155,4.8225856404712e-155,4.821934423718463e-155,4.821283119005069e-155,4.8206317262953545e-155,4.819980245553649e-155,4.819328676744257e-155,4.818677019831443e-155,4.8180252747794696e-155,4.817373441552551e-155,4.8167215201149015e-155,4.816069510430688e-155,4.815417412464077e-155,4.814765226179187e-155,4.814112951540133e-155,4.8134605885109875e-155,4.812808137055816e-155,4.812155597138642e-155,4.811502968723479e-155,4.810850251774315e-155,4.810197446255099e-155,4.809544552129776e-155,4.808891569362248e-155,4.808238497916408e-155,4.807585337756109e-155,4.806932088845198e-155,4.806278751147477e-155,4.805625324626742e-155,4.804971809246748e-155,4.804318204971238e-155,4.80366451176393e-155,4.803010729588503e-155,4.802356858408631e-155,4.801702898187944e-155,4.801048848890067e-155,4.80039471047858e-155,4.799740482917058e-155,4.799086166169029e-155,4.798431760198022e-155,4.797777264967516e-155,4.797122680440987e-155,4.796468006581864e-155,4.79581324335357e-155,4.7951583907195e-155,4.79450344864301e-155,4.79384841708745e-155,4.793193296016126e-155,4.79253808539234e-155,4.7918827851793455e-155,4.791227395340394e-155,4.790571915838691e-155,4.789916346637436e-155,4.789260687699784e-155,4.7886049389888854e-155,4.7879491004678436e-155,4.787293172099753e-155,4.786637153847684e-155,4.785981045674663e-155,4.7853248475437155e-155,4.784668559417817e-155,4.784012181259942e-155,4.783355713033016e-155,4.7826991546999616e-155,4.782042506223655e-155,4.781385767566967e-155,4.780728938692722e-155,4.780072019563741e-155,4.779415010142796e-155,4.778757910392653e-155,4.778100720276048e-155,4.7774434397556795e-155,4.7767860687942385e-155,4.7761286073543704e-155,4.775471055398717e-155,4.774813412889872e-155,4.774155679790423e-155,4.773497856062915e-155,4.7728399416698845e-155,4.772181936573822e-155,4.771523840737214e-155,4.770865654122498e-155,4.770207376692106e-155,4.769549008408439e-155,4.768890549233858e-155,4.76823199913072e-155,4.767573358061335e-155,4.766914625988006e-155,4.7662558028729905e-155,4.765596888678541e-155,4.764937883366863e-155,4.764278786900156e-155,4.763619599240571e-155,4.762960320350259e-155,4.762300950191318e-155,4.761641488725838e-155,4.760981935915883e-155,4.760322291723475e-155,4.75966255611063e-155,4.759002729039317e-155,4.758342810471499e-155,4.757682800369092e-155,4.7570226986940086e-155,4.75636250540811e-155,4.755702220473255e-155,4.755041843851254e-155,4.754381375503912e-155,4.7537208153929865e-155,4.753060163480224e-155,4.7523994197273425e-155,4.751738584096023e-155,4.751077656547934e-155,4.750416637044702e-155,4.749755525547944e-155,4.749094322019233e-155,4.748433026420132e-155,4.7477716387121595e-155,4.747110158856826e-155,4.746448586815596e-155,4.7457869225499265e-155,4.745125166021228e-155,4.7444633171909e-155,4.743801376020313e-155,4.743139342470797e-155,4.742477216503675e-155,4.741814998080221e-155,4.741152687161705e-155,4.74049028370935e-155,4.739827787684368e-155,4.739165199047926e-155,4.738502517761188e-155,4.737839743785262e-155,4.737176877081257e-155,4.7365139176102315e-155,4.7358508653332306e-155,4.7351877202112746e-155,4.734524482205339e-155,4.733861151276395e-155,4.733197727385363e-155,4.732534210493158e-155,4.731870600560648e-155,4.731206897548692e-155,4.730543101418103e-155,4.7298792121296865e-155,4.729215229644198e-155,4.72855115392239e-155,4.727886984924963e-155,4.727222722612606e-155,4.726558366945983e-155,4.7258939178857124e-155,4.7252293753924055e-155,4.724564739426627e-155,4.723900009948933e-155,4.723235186919832e-155,4.7225702702998235e-155,4.721905260049363e-155,4.7212401561288935e-155,4.720574958498812e-155,4.7199096671195095e-155,4.719244281951326e-155,4.71857880295459e-155,4.717913230089603e-155,4.717247563316621e-155,4.716581802595894e-155,4.7159159478876235e-155,4.715249999152003e-155,4.714583956349176e-155,4.713917819439281e-155,4.713251588382405e-155,4.7125852631386315e-155,4.7119188436679905e-155,4.711252329930507e-155,4.710585721886156e-155,4.709919019494901e-155,4.709252222716675e-155,4.708585331511369e-155,4.707918345838866e-155,4.707251265658999e-155,4.7065840909315954e-155,4.70591682161643e-155,4.705249457673272e-155,4.70458199906184e-155,4.703914445741848e-155,4.703246797672957e-155,4.702579054814822e-155,4.701911217127047e-155,4.701243284569225e-155,4.700575257100919e-155,4.699907134681648e-155,4.699238917270923e-155,4.698570604828205e-155,4.6979021973129476e-155,4.6972336946845545e-155,4.696565096902421e-155,4.695896403925893e-155,4.695227615714308e-155,4.694558732226955e-155,4.693889753423108e-155,4.6932206792620115e-155,4.692551509702868e-155,4.691882244704869e-155,4.691212884227158e-155,4.690543428228868e-155,4.689873876669085e-155,4.689204229506884e-155,4.688534486701291e-155,4.687864648211323e-155,4.687194713995949e-155,4.686524684014125e-155,4.685854558224763e-155,4.6851843365867555e-155,4.684514019058969e-155,4.6838436056002235e-155,4.683173096169331e-155,4.682502490725053e-155,4.681831789226142e-155,4.681160991631301e-155,4.680490097899224e-155,4.679819107988552e-155,4.6791480218579225e-155,4.678476839465917e-155,4.677805560771112e-155,4.67713418573203e-155,4.676462714307183e-155,4.675791146455051e-155,4.6751194821340696e-155,4.674447721302664e-155,4.6737758639192096e-155,4.673103909942073e-155,4.67243185932957e-155,4.671759712040005e-155,4.671087468031636e-155,4.670415127262708e-155,4.669742689691416e-155,4.669070155275948e-155,4.668397523974436e-155,4.667724795745004e-155,4.66705197054574e-155,4.66637904833469e-155,4.665706029069888e-155,4.665032912709318e-155,4.664359699210956e-155,4.6636863885327245e-155,4.663012980632538e-155,4.662339475468258e-155,4.661665872997739e-155,4.660992173178781e-155,4.6603183759691776e-155,4.659644481326669e-155,4.658970489208981e-155,4.658296399573808e-155,4.657622212378801e-155,4.6569479275815965e-155,4.656273545139785e-155,4.6555990650109416e-155,4.654924487152594e-155,4.654249811522258e-155,4.653575038077399e-155,4.652900166775471e-155,4.652225197573876e-155,4.651550130430008e-155,4.650874965301208e-155,4.650199702144801e-155,4.649524340918083e-155,4.648848881578301e-155,4.648173324082694e-155,4.647497668388447e-155,4.646821914452735e-155,4.646146062232684e-155,4.645470111685405e-155,4.644794062767961e-155,4.644117915437401e-155,4.643441669650726e-155,4.642765325364923e-155,4.642088882536928e-155,4.641412341123662e-155,4.640735701082014e-155,4.640058962368825e-155,4.6393821249409276e-155,4.638705188755099e-155,4.63802815376811e-155,4.6373510199366735e-155,4.636673787217496e-155,4.635996455567231e-155,4.635319024942519e-155,4.634641495299949e-155,4.633963866596101e-155,4.6332861387875e-155,4.6326083118306544e-155,4.631930385682043e-155,4.631252360298096e-155,4.630574235635233e-155,4.62989601164982e-155,4.629217688298213e-155,4.628539265536713e-155,4.627860743321613e-155,4.62718212160915e-155,4.626503400355553e-155,4.625824579516995e-155,4.6251456590496394e-155,4.624466638909595e-155,4.623787519052957e-155,4.6231082994357845e-155,4.622428980014092e-155,4.621749560743881e-155,4.6210700415810996e-155,4.620390422481684e-155,4.61971070340152e-155,4.619030884296478e-155,4.618350965122377e-155,4.617670945835024e-155,4.616990826390174e-155,4.616310606743566e-155,4.615630286850891e-155,4.61494986666782e-155,4.614269346149991e-155,4.613588725252995e-155,4.61290800393241e-155,4.61222718214376e-155,4.611546259842561e-155,4.610865236984269e-155,4.610184113524332e-155,4.609502889418145e-155,4.608821564621087e-155,4.608140139088486e-155,4.6074586127756575e-155,4.606776985637862e-155,4.606095257630346e-155,4.605413428708317e-155,4.604731498826939e-155,4.60404946794136e-155,4.603367336006677e-155,4.6026851029779715e-155,4.602002768810274e-155,4.601320333458601e-155,4.600637796877912e-155,4.599955159023161e-155,4.59927241984924e-155,4.598589579311032e-155,4.597906637363367e-155,4.597223593961054e-155,4.596540449058871e-155,4.595857202611545e-155,4.595173854573791e-155,4.594490404900269e-155,4.593806853545627e-155,4.593123200464457e-155,4.592439445611341e-155,4.591755588940801e-155,4.591071630407352e-155,4.59038756996545e-155,4.58970340756954e-155,4.589019143174011e-155,4.588334776733234e-155,4.587650308201548e-155,4.586965737533238e-155,4.58628106468258e-155,4.585596289603792e-155,4.584911412251082e-155,4.5842264325785975e-155,4.5835413505404785e-155,4.582856166090806e-155,4.582170879183649e-155,4.581485489773022e-155,4.580799997812918e-155,4.580114403257299e-155,4.579428706060075e-155,4.5787429061751425e-155,4.5780570035563426e-155,4.5773709981575026e-155,4.576684889932395e-155,4.575998678834778e-155,4.575312364818355e-155,4.5746259478368135e-155,4.573939427843787e-155,4.573252804792896e-155,4.572566078637702e-155,4.571879249331752e-155,4.5711923168285536e-155,4.570505281081566e-155,4.569818142044235e-155,4.569130899669948e-155,4.568443553912081e-155,4.5677561047239525e-155,4.567068552058866e-155,4.566380895870072e-155,4.565693136110802e-155,4.565005272734237e-155,4.564317305693538e-155,4.563629234941814e-155,4.562941060432152e-155,4.562252782117605e-155,4.561564399951174e-155,4.560875913885846e-155,4.560187323874551e-155,4.559498629870205e-155,4.558809831825666e-155,4.558120929693782e-155,4.557431923427336e-155,4.556742812979105e-155,4.556053598301804e-155,4.5553642793481344e-155,4.554674856070742e-155,4.553985328422252e-155,4.553295696355252e-155,4.55260595982228e-155,4.55191611877586e-155,4.551226173168454e-155,4.550536122952515e-155,4.549845968080435e-155,4.549155708504594e-155,4.548465344177311e-155,4.547774875050892e-155,4.547084301077586e-155,4.546393622209628e-155,4.545702838399192e-155,4.545011949598433e-155,4.544320955759473e-155,4.543629856834377e-155,4.542938652775197e-155,4.542247343533925e-155,4.5415559290625436e-155,4.54086440931297e-155,4.540172784237111e-155,4.539481053786815e-155,4.5387892179139124e-155,4.538097276570179e-155,4.5374052297073724e-155,4.536713077277193e-155,4.536020819231321e-155,4.5353284555214e-155,4.534635986099017e-155,4.533943410915751e-155,4.533250729923113e-155,4.5325579430726055e-155,4.531865050315671e-155,4.5311720516037345e-155,4.5304789468881636e-155,4.5297857361203105e-155,4.529092419251467e-155,4.528398996232912e-155,4.527705467015863e-155,4.527011831551517e-155,4.526318089791034e-155,4.525624241685521e-155,4.524930287186067e-155,4.5242362262437035e-155,4.523542058809446e-155,4.522847784834251e-155,4.522153404269058e-155,4.521458917064747e-155,4.520764323172184e-155,4.520069622542173e-155,4.519374815125503e-155,4.5186799008729045e-155,4.517984879735085e-155,4.517289751662714e-155,4.516594516606408e-155,4.515899174516766e-155,4.515203725344328e-155,4.514508169039617e-155,4.513812505553096e-155,4.513116734835213e-155,4.512420856836355e-155,4.511724871506892e-155,4.511028778797135e-155,4.510332578657377e-155,4.509636271037853e-155,4.5089398558887745e-155,4.508243333160314e-155,4.507546702802591e-155,4.506849964765705e-155,4.506153118999701e-155,4.5054561654546e-155,4.504759104080367e-155,4.50406193482695e-155,4.503364657644235e-155,4.502667272482091e-155,4.501969779290328e-155,4.5012721780187364e-155,4.500574468617048e-155,4.4998766510349716e-155,4.499178725222176e-155,4.498480691128276e-155,4.497782548702869e-155,4.497084297895489e-155,4.496385938655655e-155,4.4956874709328255e-155,4.49498889467644e-155,4.494290209835877e-155,4.493591416360498e-155,4.492892514199604e-155,4.492193503302475e-155,4.491494383618336e-155,4.490795155096383e-155,4.490095817685774e-155,4.489396371335613e-155,4.488696815994983e-155,4.48799715161291e-155,4.4872973781383966e-155,4.486597495520388e-155,4.485897503707809e-155,4.485197402649524e-155,4.4844971922943795e-155,4.48379687259116e-155,4.48309644348863e-155,4.4823959049354946e-155,4.4816952568804334e-155,4.480994499272088e-155,4.480293632059041e-155,4.47959265518986e-155,4.478891568613045e-155,4.4781903722770835e-155,4.477489066130396e-155,4.476787650121389e-155,4.476086124198402e-155,4.475384488309759e-155,4.474682742403722e-155,4.4739808864285316e-155,4.473278920332368e-155,4.472576844063387e-155,4.471874657569702e-155,4.471172360799372e-155,4.470469953700435e-155,4.4697674362208665e-155,4.469064808308623e-155,4.4683620699116e-155,4.467659220977672e-155,4.46695626145465e-155,4.466253191290328e-155,4.465550010432435e-155,4.464846718828678e-155,4.4641433164267194e-155,4.463439803174166e-155,4.462736179018604e-155,4.462032443907559e-155,4.461328597788533e-155,4.460624640608968e-155,4.459920572316285e-155,4.4592163928578424e-155,4.458512102180978e-155,4.457807700232967e-155,4.457103186961064e-155,4.45639856231246e-155,4.455693826234321e-155,4.4549889786737725e-155,4.454284019577879e-155,4.453578948893688e-155,4.452873766568181e-155,4.452168472548319e-155,4.451463066781001e-155,4.450757549213106e-155,4.450051919791447e-155,4.449346178462818e-155,4.448640325173948e-155,4.4479343598715465e-155,4.4472282825022586e-155,4.446522093012704e-155,4.445815791349459e-155,4.445109377459041e-155,4.4444028512879474e-155,4.443696212782612e-155,4.4429894618894455e-155,4.4422825985547955e-155,4.441575622724991e-155,4.440868534346291e-155,4.440161333364939e-155,4.43945401972711e-155,4.4387465933789615e-155,4.438039054266583e-155,4.437331402336038e-155,4.436623637533349e-155,4.435915759804477e-155,4.435207769095363e-155,4.434499665351882e-155,4.433791448519889e-155,4.433083118545171e-155,4.432374675373497e-155,4.43166611895057e-155,4.430957449222069e-155,4.43024866613361e-155,4.429539769630787e-155,4.4288307596591285e-155,4.428121636164135e-155,4.427412399091266e-155,4.426703048385916e-155,4.425993583993463e-155,4.425284005859216e-155,4.424574313928463e-155,4.423864508146425e-155,4.423154588458304e-155,4.422444554809233e-155,4.421734407144325e-155,4.421024145408625e-155,4.420313769547157e-155,4.41960327950488e-155,4.418892675226721e-155,4.41818195665757e-155,4.4174711237422474e-155,4.416760176425559e-155,4.416049114652239e-155,4.415337938367001e-155,4.414626647514492e-155,4.413915242039337e-155,4.413203721886094e-155,4.412492086999296e-155,4.411780337323414e-155,4.411068472802891e-155,4.410356493382107e-155,4.409644399005412e-155,4.408932189617112e-155,4.408219865161449e-155,4.407507425582646e-155,4.406794870824855e-155,4.406082200832207e-155,4.405369415548766e-155,4.404656514918571e-155,4.403943498885595e-155,4.403230367393789e-155,4.402517120387032e-155,4.401803757809185e-155,4.4010902796040375e-155,4.400376685715353e-155,4.399662976086847e-155,4.398949150662174e-155,4.3982352093849634e-155,4.39752115219878e-155,4.396806979047161e-155,4.396092689873578e-155,4.395378284621478e-155,4.39466376323424e-155,4.393949125655219e-155,4.393234371827703e-155,4.392519501694955e-155,4.391804515200168e-155,4.391089412286507e-155,4.390374192897093e-155,4.3896588569749805e-155,4.3889434044632e-155,4.388227835304716e-155,4.387512149442466e-155,4.3867963468193204e-155,4.386080427378125e-155,4.3853643910616555e-155,4.3846482378126636e-155,4.3839319675738335e-155,4.3832155802878235e-155,4.382499075897223e-155,4.38178245434459e-155,4.381065715572438e-155,4.380348859523214e-155,4.379631886139343e-155,4.378914795363178e-155,4.37819758713705e-155,4.377480261403216e-155,4.376762818103913e-155,4.376045257181305e-155,4.375327578577532e-155,4.374609782234664e-155,4.373891868094747e-155,4.373173836099754e-155,4.3724556861916315e-155,4.371737418312274e-155,4.3710190324035145e-155,4.370300528407159e-155,4.369581906264943e-155,4.36886316591858e-155,4.368144307309707e-155,4.367425330379941e-155,4.366706235070826e-155,4.3659870213238795e-155,4.36526768908055e-155,4.3645482382822605e-155,4.363828668870362e-155,4.3631089807861735e-155,4.362389173970967e-155,4.361669248365949e-155,4.3609492039123e-155,4.360229040551128e-155,4.3595087582235164e-155,4.358788356870477e-155,4.358067836432995e-155,4.357347196851986e-155,4.356626438068335e-155,4.3559055600228615e-155,4.355184562656354e-155,4.354463445909531e-155,4.353742209723078e-155,4.353020854037633e-155,4.352299378793768e-155,4.351577783932025e-155,4.350856069392878e-155,4.350134235116771e-155,4.34941228104408e-155,4.34869020711515e-155,4.347968013270255e-155,4.347245699449644e-155,4.346523265593492e-155,4.345800711641941e-155,4.345078037535084e-155,4.344355243212947e-155,4.343632328615529e-155,4.342909293682755e-155,4.342186138354525e-155,4.341462862570665e-155,4.3407394662709725e-155,4.340015949395174e-155,4.339292311882968e-155,4.338568553673979e-155,4.337844674707804e-155,4.337120674923969e-155,4.3363965542619635e-155,4.335672312661229e-155,4.334947950061137e-155,4.334223466401034e-155,4.333498861620189e-155,4.332774135657849e-155,4.33204928845318e-155,4.331324319945326e-155,4.330599230073354e-155,4.329874018776304e-155,4.329148685993142e-155,4.328423231662806e-155,4.327697655724158e-155,4.326971958116029e-155,4.3262461387771964e-155,4.325520197646369e-155,4.324794134662229e-155,4.324067949763383e-155,4.323341642888409e-155,4.322615213975809e-155,4.3218886629640605e-155,4.3211619897915606e-155,4.320435194396682e-155,4.319708276717721e-155,4.318981236692945e-155,4.318254074260546e-155,4.317526789358683e-155,4.316799381925459e-155,4.316071851898914e-155,4.3153441992170515e-155,4.314616423817805e-155,4.313888525639076e-155,4.313160504618691e-155,4.31243236069445e-155,4.311704093804072e-155,4.31097570388525e-155,4.3102471908756015e-155,4.309518554712713e-155,4.308789795334096e-155,4.308060912677225e-155,4.307331906679524e-155,4.3066027772783446e-155,4.3058735244110096e-155,4.305144148014764e-155,4.304414648026827e-155,4.303685024384335e-155,4.3029552770244e-155,4.302225405884055e-155,4.301495410900302e-155,4.300765292010068e-155,4.3000350491502485e-155,4.299304682257663e-155,4.298574191269096e-155,4.297843576121273e-155,4.297112836750855e-155,4.296381973094469e-155,4.295650985088664e-155,4.29491987266996e-155,4.294188635774799e-155,4.2934572743395925e-155,4.292725788300675e-155,4.291994177594349e-155,4.291262442156839e-155,4.2905305819243396e-155,4.289798596832968e-155,4.289066486818803e-155,4.28833425181787e-155,4.28760189176612e-155,4.286869406599477e-155,4.286136796253782e-155,4.285404060664848e-155,4.2846711997684095e-155,4.2839382135001664e-155,4.283205101795743e-155,4.282471864590732e-155,4.2817385018206455e-155,4.2810050134209664e-155,4.280271399327096e-155,4.2795376594744e-155,4.278803793798187e-155,4.278069802233695e-155,4.2773356847161275e-155,4.27660144118061e-155,4.275867071562235e-155,4.2751325757960175e-155,4.274397953816938e-155,4.2736632055599e-155,4.2729283309597705e-155,4.272193329951343e-155,4.2714582024693716e-155,4.270722948448537e-155,4.269987567823477e-155,4.269252060528775e-155,4.26851642649894e-155,4.267780665668447e-155,4.267044777971693e-155,4.266308763343042e-155,4.265572621716776e-155,4.264836353027143e-155,4.264099957208315e-155,4.263363434194425e-155,4.262626783919532e-155,4.261890006317656e-155,4.261153101322739e-155,4.2604160688686835e-155,4.259678908889333e-155,4.2589416213184595e-155,4.258204206089798e-155,4.257466663137004e-155,4.256728992393698e-155,4.255991193793422e-155,4.255253267269681e-155,4.2545152127558996e-155,4.25377703018547e-155,4.2530387194917e-155,4.2523002806078664e-155,4.2515617134671616e-155,4.250823018002739e-155,4.250084194147694e-155,4.249345241835045e-155,4.2486061609977776e-155,4.247866951568794e-155,4.247127613480963e-155,4.246388146667069e-155,4.245648551059864e-155,4.244908826592017e-155,4.24416897319616e-155,4.2434289908048464e-155,4.242688879350591e-155,4.2419486387658274e-155,4.241208268982949e-155,4.240467769934289e-155,4.239727141552103e-155,4.2389863837686136e-155,4.2382454965159575e-155,4.2375044797262374e-155,4.2367633333314734e-155,4.2360220572636485e-155,4.235280651454664e-155,4.2345391158363835e-155,4.233797450340588e-155,4.2330556548990234e-155,4.232313729443351e-155,4.2315716739051905e-155,4.2308294882161005e-155,4.230087172307564e-155,4.229344726111024e-155,4.228602149557845e-155,4.227859442579349e-155,4.227116605106778e-155,4.226373637071335e-155,4.225630538404142e-155,4.224887309036279e-155,4.224143948898747e-155,4.2234004579225e-155,4.222656836038435e-155,4.221913083177366e-155,4.221169199270073e-155,4.22042518424725e-155,4.219681038039554e-155,4.218936760577558e-155,4.218192351791795e-155,4.217447811612715e-155,4.216703139970731e-155,4.215958336796167e-155,4.215213402019315e-155,4.214468335570375e-155,4.2137231373795094e-155,4.212977807376815e-155,4.212232345492309e-155,4.211486751655973e-155,4.2107410257977e-155,4.209995167847346e-155,4.209249177734681e-155,4.208503055389437e-155,4.207756800741259e-155,4.207010413719753e-155,4.206263894254441e-155,4.205517242274804e-155,4.204770457710237e-155,4.204023540490092e-155,4.203276490543655e-155,4.202529307800134e-155,4.201781992188696e-155,4.2010345436384234e-155,4.200286962078357e-155,4.199539247437452e-155,4.198791399644623e-155,4.1980434186287e-155,4.19729530431847e-155,4.196547056642636e-155,4.195798675529857e-155,4.19505016090871e-155,4.194301512707721e-155,4.193552730855357e-155,4.1928038152799975e-155,4.192054765909988e-155,4.1913055826735816e-155,4.190556265498993e-155,4.189806814314349e-155,4.189057229047735e-155,4.18830750962715e-155,4.187557655980549e-155,4.186807668035803e-155,4.186057545720739e-155,4.185307288963096e-155,4.184556897690568e-155,4.183806371830782e-155,4.183055711311282e-155,4.182304916059573e-155,4.181553986003069e-155,4.180802921069145e-155,4.180051721185084e-155,4.179300386278129e-155,4.1785489162754345e-155,4.177797311104111e-155,4.177045570691183e-155,4.17629369496363e-155,4.175541683848343e-155,4.1747895372721656e-155,4.174037255161875e-155,4.173284837444164e-155,4.172532284045685e-155,4.171779594892999e-155,4.171026769912623e-155,4.170273809030986e-155,4.169520712174476e-155,4.168767479269387e-155,4.168014110241972e-155,4.167260605018393e-155,4.16650696352477e-155,4.165753185687132e-155,4.164999271431458e-155,4.1642452206836605e-155,4.163491033369569e-155,4.1627367094149654e-155,4.1619822487455446e-155,4.161227651286956e-155,4.160472916964759e-155,4.159718045704466e-155,4.1589630374315026e-155,4.158207892071247e-155,4.157452609548989e-155,4.15669718978997e-155,4.155941632719343e-155,4.15518593826221e-155,4.154430106343606e-155,4.153674136888476e-155,4.152918029821726e-155,4.1521617850681656e-155,4.151405402552561e-155,4.1506488821995866e-155,4.149892223933872e-155,4.1491354276799526e-155,4.148378493362321e-155,4.147621420905376e-155,4.14686421023347e-155,4.146106861270865e-155,4.145349373941772e-155,4.144591748170328e-155,4.143833983880588e-155,4.143076080996558e-155,4.142318039442153e-155,4.141559859141241e-155,4.140801540017598e-155,4.14004308199495e-155,4.1392844849969344e-155,4.1385257489471385e-155,4.137766873769057e-155,4.13700785938614e-155,4.136248705721741e-155,4.1354894126991635e-155,4.1347299802416364e-155,4.133970408272305e-155,4.133210696714266e-155,4.132450845490521e-155,4.131690854524023e-155,4.130930723737635e-155,4.1301704530541685e-155,4.129410042396343e-155,4.1286494916868275e-155,4.1278888008482e-155,4.1271279698029874e-155,4.126366998473622e-155,4.125605886782486e-155,4.124844634651884e-155,4.124083242004037e-155,4.123321708761113e-155,4.122560034845187e-155,4.121798220178286e-155,4.12103626468234e-155,4.120274168279231e-155,4.119511930890745e-155,4.11874955243862e-155,4.117987032844497e-155,4.117224372029967e-155,4.116461569916528e-155,4.11569862642562e-155,4.1149355414786106e-155,4.114172314996779e-155,4.113408946901352e-155,4.112645437113462e-155,4.1118817855541905e-155,4.111117992144522e-155,4.110354056805391e-155,4.109589979457638e-155,4.108825760022048e-155,4.1080613984193145e-155,4.1072968945700755e-155,4.106532248394876e-155,4.1057674598142015e-155,4.105002528748466e-155,4.104237455117989e-155,4.103472238843042e-155,4.102706879843795e-155,4.101941378040373e-155,4.101175733352795e-155,4.100409945701036e-155,4.099644015004969e-155,4.098877941184416e-155,4.098111724159101e-155,4.097345363848692e-155,4.096578860172779e-155,4.0958122130508614e-155,4.095045422402385e-155,4.094278488146699e-155,4.093511410203098e-155,4.092744188490779e-155,4.091976822928886e-155,4.0912093134364645e-155,4.090441659932507e-155,4.089673862335907e-155,4.088905920565503e-155,4.088137834540039e-155,4.087369604178194e-155,4.086601229398574e-155,4.085832710119692e-155,4.085064046260005e-155,4.0842952377378705e-155,4.083526284471595e-155,4.08275718637938e-155,4.081987943379379e-155,4.08121855538964e-155,4.0804490223281596e-155,4.079679344112834e-155,4.078909520661504e-155,4.0781395518919095e-155,4.077369437721732e-155,4.076599178068574e-155,4.075828772849941e-155,4.075058221983287e-155,4.074287525385964e-155,4.073516682975266e-155,4.07274569466839e-155,4.071974560382474e-155,4.071203280034557e-155,4.07043185354162e-155,4.069660280820545e-155,4.068888561788157e-155,4.068116696361177e-155,4.067344684456269e-155,4.066572525990014e-155,4.065800220878897e-155,4.065027769039349e-155,4.064255170387696e-155,4.063482424840207e-155,4.062709532313052e-155,4.061936492722341e-155,4.061163305984083e-155,4.0603899720142275e-155,4.0596164907286236e-155,4.058842862043063e-155,4.058069085873232e-155,4.057295162134756e-155,4.056521090743179e-155,4.055746871613947e-155,4.054972504662449e-155,4.054197989803969e-155,4.053423326953735e-155,4.0526485160268675e-155,4.051873556938432e-155,4.05109844960339e-155,4.050323193936643e-155,4.049547789852987e-155,4.048772237267164e-155,4.047996536093805e-155,4.04722068624748e-155,4.04644468764268e-155,4.04566854019379e-155,4.044892243815142e-155,4.044115798420957e-155,4.043339203925403e-155,4.0425624602425375e-155,4.041785567286362e-155,4.041008524970768e-155,4.040231333209593e-155,4.039453991916562e-155,4.038676501005346e-155,4.037898860389506e-155,4.037121069982539e-155,4.036343129697858e-155,4.035565039448774e-155,4.03478679914854e-155,4.0340084087103e-155,4.033229868047139e-155,4.032451177072034e-155,4.031672335697901e-155,4.0308933438375485e-155,4.030114201403726e-155,4.029334908309073e-155,4.028555464466167e-155,4.0277758697874814e-155,4.02699612418542e-155,4.026216227572301e-155,4.025436179860341e-155,4.024655980961696e-155,4.023875630788412e-155,4.023095129252473e-155,4.022314476265756e-155,4.021533671740074e-155,4.020752715587131e-155,4.01997160771857e-155,4.0191903480459235e-155,4.0184089364806626e-155,4.017627372934147e-155,4.01684565731767e-155,4.016063789542437e-155,4.0152817695195494e-155,4.014499597160048e-155,4.013717272374858e-155,4.012934795074847e-155,4.01215216517077e-155,4.011369382573317e-155,4.010586447193068e-155,4.009803358940542e-155,4.009020117726143e-155,4.008236723460215e-155,4.007453176052986e-155,4.006669475414618e-155,4.005885621455185e-155,4.005101614084651e-155,4.0043174532129215e-155,4.003533138749785e-155,4.002748670604968e-155,4.001964048688084e-155,4.0011792729086835e-155,4.0003943431762014e-155,3.999609259400009e-155,3.998824021489365e-155,3.998038629353462e-155,3.997253082901381e-155,3.996467382042131e-155,3.995681526684631e-155,3.994895516737692e-155,3.99410935211006e-155,3.993323032710369e-155,3.992536558447182e-155,3.991749929228954e-155,3.990963144964069e-155,3.9901762055608e-155,3.989389110927351e-155,3.9886018609718125e-155,3.987814455602209e-155,3.9870268947264486e-155,3.986239178252369e-155,3.9854513060877125e-155,3.984663278140117e-155,3.98387509431715e-155,3.983086754526264e-155,3.982298258674845e-155,3.9815096066701624e-155,3.980720798419418e-155,3.979931833829697e-155,3.979142712808018e-155,3.9783534352612815e-155,3.977564001096321e-155,3.976774410219853e-155,3.97598466253852e-155,3.975194757958871e-155,3.974404696387343e-155,3.973614477730308e-155,3.972824101894016e-155,3.972033568784652e-155,3.971242878308278e-155,3.9704520303708945e-155,3.9696610248783764e-155,3.968869861736535e-155,3.9680785408510585e-155,3.9672870621275636e-155,3.96649542547157e-155,3.965703630788486e-155,3.964911677983649e-155,3.964119566962279e-155,3.963327297629523e-155,3.962534869890412e-155,3.961742283649905e-155,3.96094953881284e-155,3.960156635283987e-155,3.959363572967994e-155,3.958570351769438e-155,3.957776971592778e-155,3.956983432342393e-155,3.956189733922569e-155,3.955395876237473e-155,3.954601859191207e-155,3.953807682687745e-155,3.953013346630994e-155,3.952218850924738e-155,3.95142419547269e-155,3.95062938017844e-155,3.949834404945506e-155,3.949039269677286e-155,3.948243974277102e-155,3.947448518648157e-155,3.946652902693575e-155,3.945857126316379e-155,3.94506118941948e-155,3.944265091905713e-155,3.9434688336777896e-155,3.942672414638351e-155,3.941875834689912e-155,3.941079093734916e-155,3.940282191675682e-155,3.9394851284144544e-155,3.938687903853356e-155,3.937890517894432e-155,3.937092970439607e-155,3.936295261390722e-155,3.935497390649521e-155,3.934699358117628e-155,3.933901163696593e-155,3.933102807287842e-155,3.932304288792722e-155,3.93150560811246e-155,3.930706765148204e-155,3.929907759800979e-155,3.929108591971731e-155,3.928309261561285e-155,3.927509768470387e-155,3.926710112599655e-155,3.925910293849629e-155,3.925110312120746e-155,3.924310167313321e-155,3.923509859327595e-155,3.92270938806368e-155,3.921908753421612e-155,3.921107955301302e-155,3.920306993602579e-155,3.919505868225149e-155,3.9187045790686384e-155,3.917903126032547e-155,3.917101509016295e-155,3.916299727919178e-155,3.915497782640403e-155,3.914695673079077e-155,3.913893399134184e-155,3.913090960704629e-155,3.9122883576891875e-155,3.911485589986559e-155,3.910682657495311e-155,3.909879560113933e-155,3.909076297740786e-155,3.9082728702741504e-155,3.907469277612178e-155,3.906665519652939e-155,3.905861596294377e-155,3.905057507434346e-155,3.9042532529705965e-155,3.903448832800754e-155,3.902644246822365e-155,3.901839494932844e-155,3.901034577029526e-155,3.900229493009612e-155,3.899424242770226e-155,3.898618826208359e-155,3.897813243220919e-155,3.897007493704684e-155,3.896201577556352e-155,3.895395494672485e-155,3.894589244949559e-155,3.893782828283944e-155,3.892976244571883e-155,3.892169493709535e-155,3.891362575592928e-155,3.890555490118007e-155,3.8897482371805824e-155,3.888940816676385e-155,3.888133228501008e-155,3.887325472549965e-155,3.8865175487186335e-155,3.885709456902309e-155,3.88490119699615e-155,3.884092768895229e-155,3.883284172494507e-155,3.8824754076888155e-155,3.881666474372904e-155,3.8808573724413855e-155,3.88004810178879e-155,3.87923866230951e-155,3.878429053897856e-155,3.877619276447999e-155,3.8768093298540286e-155,3.875999214009896e-155,3.875188928809467e-155,3.874378474146473e-155,3.873567849914551e-155,3.872757056007229e-155,3.871946092317901e-155,3.871134958739878e-155,3.870323655166333e-155,3.869512181490352e-155,3.868700537604883e-155,3.867888723402788e-155,3.8670767387767905e-155,3.866264583619527e-155,3.865452257823496e-155,3.864639761281107e-155,3.863827093884635e-155,3.863014255526256e-155,3.862201246098034e-155,3.8613880654919025e-155,3.860574713599704e-155,3.8597611903131416e-155,3.858947495523832e-155,3.8581336291232505e-155,3.857319591002783e-155,3.856505381053677e-155,3.855690999167089e-155,3.8548764452340355e-155,3.854061719145443e-155,3.853246820792099e-155,3.8524317500646916e-155,3.851616506853796e-155,3.8508010910498514e-155,3.849985502543206e-155,3.849169741224067e-155,3.84835380698255e-155,3.8475376997086296e-155,3.846721419292189e-155,3.845904965622968e-155,3.845088338590615e-155,3.844271538084637e-155,3.843454563994449e-155,3.842637416209321e-155,3.841820094618426e-155,3.84100259911082e-155,3.840184929575418e-155,3.839367085901046e-155,3.838549067976386e-155,3.8377308756900244e-155,3.836912508930404e-155,3.8360939675858755e-155,3.835275251544644e-155,3.83445636069482e-155,3.833637294924371e-155,3.832818054121163e-155,3.831998638172942e-155,3.8311790469673125e-155,3.830359280391789e-155,3.829539338333736e-155,3.8287192206804255e-155,3.827898927318982e-155,3.827078458136435e-155,3.826257813019666e-155,3.825436991855463e-155,3.824615994530466e-155,3.823794820931217e-155,3.822973470944114e-155,3.822151944455449e-155,3.821330241351395e-155,3.82050836151798e-155,3.819686304841136e-155,3.818864071206649e-155,3.8180416605002044e-155,3.8172190726073406e-155,3.816396307413498e-155,3.8155733648039675e-155,3.814750244663942e-155,3.8139269468784656e-155,3.813103471332482e-155,3.812279817910789e-155,3.811455986498074e-155,3.8106319769789026e-155,3.809807789237697e-155,3.808983423158779e-155,3.808158878626318e-155,3.807334155524386e-155,3.806509253736903e-155,3.805684173147689e-155,3.804858913640413e-155,3.80403347509864e-155,3.803207857405788e-155,3.8023820604451705e-155,3.80155608409995e-155,3.800729928253182e-155,3.799903592787792e-155,3.799077077586563e-155,3.798250382532173e-155,3.7974235075071475e-155,3.79659645239391e-155,3.79576921707473e-155,3.794941801431775e-155,3.794114205347057e-155,3.7932864287024875e-155,3.792458471379819e-155,3.791630333260706e-155,3.790802014226644e-155,3.789973514159019e-155,3.78914483293909e-155,3.788315970447963e-155,3.787486926566642e-155,3.786657701175974e-155,3.785828294156703e-155,3.784998705389414e-155,3.784168934754588e-155,3.78333898213255e-155,3.782508847403519e-155,3.781678530447556e-155,3.7808480311446165e-155,3.7800173493744986e-155,3.779186485016888e-155,3.778355437951336e-155,3.777524208057246e-155,3.7766927952139104e-155,3.775861199300465e-155,3.775029420195939e-155,3.7741974577791994e-155,3.773365311929009e-155,3.772532982523969e-155,3.7717004694425735e-155,3.770867772563156e-155,3.770034891763942e-155,3.769201826922995e-155,3.768368577918266e-155,3.7675351446275675e-155,3.766701526928561e-155,3.765867724698796e-155,3.765033737815663e-155,3.764199566156438e-155,3.7633652095982395e-155,3.7625306680180745e-155,3.761695941292787e-155,3.760861029299111e-155,3.7600259319136156e-155,3.759190649012762e-155,3.758355180472845e-155,3.7575195261700454e-155,3.7566836859804015e-155,3.755847659779798e-155,3.7550114474440056e-155,3.75417504884863e-155,3.753338463869165e-155,3.752501692380942e-155,3.751664734259176e-155,3.750827589378917e-155,3.7499902576151045e-155,3.749152738842509e-155,3.748315032935788e-155,3.747477139769435e-155,3.7466390592178205e-155,3.745800791155175e-155,3.744962335455567e-155,3.7441236919929545e-155,3.7432848606411245e-155,3.742445841273749e-155,3.741606633764334e-155,3.740767237986267e-155,3.73992765381277e-155,3.739087881116948e-155,3.738247919771736e-155,3.737407769649955e-155,3.736567430624254e-155,3.73572690256716e-155,3.734886185351056e-155,3.734045278848162e-155,3.733204182930581e-155,3.732362897470244e-155,3.731521422338964e-155,3.7306797574083864e-155,3.729837902550033e-155,3.728995857635259e-155,3.728153622535297e-155,3.7273111971212096e-155,3.72646858126394e-155,3.7256257748342587e-155,3.7247827777028094e-155,3.7239395897400902e-155,3.723096210816433e-155,3.7222526408020476e-155,3.721408879566972e-155,3.720564926981122e-155,3.71972078291424e-155,3.718876447235948e-155,3.718031919815691e-155,3.7171872005227942e-155,3.7163422892264076e-155,3.7154971857955585e-155,3.714651890099098e-155,3.713806402005749e-155,3.712960721384085e-155,3.712114848102509e-155,3.7112687820293005e-155,3.710422523032564e-155,3.7095760709802774e-155,3.708729425740244e-155,3.7078825871801412e-155,3.7070355551674687e-155,3.7061883295696026e-155,3.705340910253739e-155,3.7044932970869504e-155,3.7036454899361294e-155,3.7027974886680367e-155,3.70194929314928e-155,3.7011009032462954e-155,3.7002523188253904e-155,3.699403539752695e-155,3.6985545658942094e-155,3.697705397115756e-155,3.6968560332830284e-155,3.6960064742615395e-155,3.695156719916674e-155,3.694306770113635e-155,3.6934566247174918e-155,3.6926062835931565e-155,3.691755746605367e-155,3.6909050136187313e-155,3.690054084497675e-155,3.689202959106494e-155,3.6883516373093008e-155,3.6875001189700775e-155,3.686648403952623e-155,3.6857964921206054e-155,3.684944383337508e-155,3.6840920774666837e-155,3.6832395743712996e-155,3.682386873914385e-155,3.6815339759588115e-155,3.68068088036727e-155,3.6798275870023203e-155,3.6789740957263355e-155,3.6781204064015556e-155,3.677266518890034e-155,3.676412433053692e-155,3.6755581487542618e-155,3.674703665853342e-155,3.673848984212345e-155,3.672994103692547e-155,3.6721390241550365e-155,3.6712837454607604e-155,3.670428267470504e-155,3.6695725900448696e-155,3.6687167130443244e-155,3.6678606363291446e-155,3.667004359759472e-155,3.666147883195257e-155,3.665291206496313e-155,3.6644343295222643e-155,3.663577252132596e-155,3.662719974186603e-155,3.6618624955434424e-155,3.6610048160620785e-155,3.660146935601332e-155,3.659288854019857e-155,3.658430571176122e-155,3.657572086928456e-155,3.656713401134996e-155,3.6558545136537375e-155,3.6549954243424837e-155,3.654136133058897e-155,3.6532766396604457e-155,3.652416944004457e-155,3.6515570459480625e-155,3.650696945348255e-155,3.649836642061829e-155,3.6489761359454316e-155,3.6481154268555413e-155,3.6472545146484466e-155,3.646393399180293e-155,3.6455320803070297e-155,3.6446705578844622e-155,3.643808831768199e-155,3.6429469018137034e-155,3.6420847678762434e-155,3.64122242981094e-155,3.640359887472717e-155,3.639497140716353e-155,3.6386341893964274e-155,3.6377710333673676e-155,3.6369076724834273e-155,3.6360441065986685e-155,3.635180335567005e-155,3.6343163592421524e-155,3.6334521774776764e-155,3.632587790126944e-155,3.631723197043174e-155,3.6308583980793824e-155,3.6299933930884387e-155,3.6291281819230088e-155,3.6282627644356108e-155,3.6273971404785593e-155,3.626531309904013e-155,3.6256652725639543e-155,3.6247990283101682e-155,3.62393257699429e-155,3.6230659184677503e-155,3.622199052581829e-155,3.621331979187601e-155,3.62046469813599e-155,3.6195972092777133e-155,3.6187295124633382e-155,3.6178616075432234e-155,3.6169934943675767e-155,3.6161251727863986e-155,3.6152566426495295e-155,3.61438790380663e-155,3.613518956107159e-155,3.6126497994004217e-155,3.6117804335355156e-155,3.610910858361382e-155,3.610041073726755e-155,3.6091710794802114e-155,3.6083008754701213e-155,3.6074304615446963e-155,3.606559837551939e-155,3.605689003339695e-155,3.6048179587556e-155,3.603946703647125e-155,3.603075237861557e-155,3.6022035612459775e-155,3.601331673647311e-155,3.6004595749122676e-155,3.5995872648874013e-155,3.5987147434190517e-155,3.597842010353399e-155,3.59696906553641e-155,3.596095908813892e-155,3.595222540031437e-155,3.594348959034478e-155,3.5934751656682314e-155,3.5926011597777466e-155,3.5917269412078845e-155,3.5908525098032967e-155,3.589977865408472e-155,3.589103007867684e-155,3.588227937025043e-155,3.5873526527244406e-155,3.5864771548096077e-155,3.585601443124055e-155,3.5847255175111305e-155,3.583849377813963e-155,3.582973023875517e-155,3.582096455538538e-155,3.5812196726455976e-155,3.5803426750390778e-155,3.579465462561144e-155,3.578588035053798e-155,3.5777103923588183e-155,3.5768325343178184e-155,3.5759544607721884e-155,3.575076171563153e-155,3.5741976665317123e-155,3.5733189455187e-155,3.572440008364726e-155,3.571560854910231e-155,3.5706814849954323e-155,3.5698018984603715e-155,3.5689220951448928e-155,3.5680420748886214e-155,3.5671618375310132e-155,3.566281382911298e-155,3.5654007108685355e-155,3.5645198212415576e-155,3.5636387138690257e-155,3.562757388589373e-155,3.561875845240862e-155,3.5609940836615265e-155,3.5601121036892267e-155,3.559229905161595e-155,3.558347487916084e-155,3.557464851789943e-155,3.5565819966202e-155,3.555698922243708e-155,3.5548156284970887e-155,3.5539321152167904e-155,3.5530483822390283e-155,3.5521644293998433e-155,3.551280256535043e-155,3.5503958634802594e-155,3.5495112500708917e-155,3.5486264161421546e-155,3.5477413615290574e-155,3.546856086066382e-155,3.545970589588734e-155,3.545084871930482e-155,3.5441989329258166e-155,3.543312772408694e-155,3.542426390212889e-155,3.5415397861719423e-155,3.540652960119213e-155,3.539765911887823e-155,3.5388786413107144e-155,3.537991148220591e-155,3.537103432449968e-155,3.5362154938311495e-155,3.5353273321962096e-155,3.534438947377038e-155,3.533550339205286e-155,3.5326615075124207e-155,3.5317724521296693e-155,3.530883172888074e-155,3.529993669618437e-155,3.529103942151375e-155,3.5282139903172632e-155,3.52732381394629e-155,3.5264334128684023e-155,3.5255427869133535e-155,3.524651935910681e-155,3.5237608596896864e-155,3.5228695580794834e-155,3.5219780309089415e-155,3.5210862780067403e-155,3.5201942992013166e-155,3.5193020943209158e-155,3.5184096631935386e-155,3.517517005646996e-155,3.5166241215088505e-155,3.5157310106064757e-155,3.514837672766997e-155,3.5139441078173406e-155,3.5130503155842136e-155,3.512156295894081e-155,3.5112620485732147e-155,3.5103675734476375e-155,3.5094728703431788e-155,3.508577939085418e-155,3.5076827794997393e-155,3.5067873914112763e-155,3.5058917746449676e-155,3.5049959290254998e-155,3.504099854377364e-155,3.503203550524798e-155,3.5023070172918363e-155,3.5014102545022877e-155,3.5005132619797144e-155,3.4996160395474814e-155,3.4987185870286975e-155,3.497820904246274e-155,3.4969229910228666e-155,3.49602484718093e-155,3.4951264725426655e-155,3.4942278669300705e-155,3.4933290301648884e-155,3.492429962068659e-155,3.491530662462666e-155,3.4906311311679827e-155,3.4897313680054523e-155,3.4888313727956664e-155,3.487931145359012e-155,3.4870306855156177e-155,3.4861299930854063e-155,3.4852290678880407e-155,3.484327909742979e-155,3.4834265184694172e-155,3.4825248938863456e-155,3.4816230358124916e-155,3.4807209440663766e-155,3.4798186184662577e-155,3.4789160588301785e-155,3.4780132649759458e-155,3.477110236721109e-155,3.4762069738830083e-155,3.4753034762787192e-155,3.4743997437251066e-155,3.4734957760387695e-155,3.472591573036096e-155,3.4716871345332083e-155,3.4707824603460146e-155,3.469877550290157e-155,3.468972404181065e-155,3.4680670218338986e-155,3.4671614030635974e-155,3.4662555476848602e-155,3.4653494555121216e-155,3.464443126359602e-155,3.463536560041251e-155,3.4626297563708016e-155,3.461722715161716e-155,3.46081543622724e-155,3.459907919380345e-155,3.459000164433787e-155,3.4580921712000468e-155,3.4571839394913877e-155,3.4562754691197974e-155,3.4553667598970392e-155,3.4544578116346276e-155,3.4535486241438077e-155,3.452639197235605e-155,3.451729530720768e-155,3.4508196244098226e-155,3.449909478113018e-155,3.4489990916403808e-155,3.448088464801659e-155,3.447177597406376e-155,3.4462664892637777e-155,3.4453551401828843e-155,3.4444435499724347e-155,3.4435317184409376e-155,3.4426196453966466e-155,3.4417073306475407e-155,3.4407947740013727e-155,3.4398819752656114e-155,3.438968934247499e-155,3.438055650753994e-155,3.437142124591825e-155,3.436228355567437e-155,3.4353143434870452e-155,3.4344000881565787e-155,3.433485589381737e-155,3.432570846967931e-155,3.4316558607203357e-155,3.4307406304438642e-155,3.42982515594315e-155,3.428909437022592e-155,3.427993473486301e-155,3.4270772651381544e-155,3.4261608117817384e-155,3.425244113220405e-155,3.4243271692572138e-155,3.423409979694991e-155,3.4224925443362688e-155,3.4215748629833433e-155,3.4206569354382166e-155,3.4197387615026473e-155,3.418820340978127e-155,3.4179016736658593e-155,3.41698275936681e-155,3.4160635978816477e-155,3.4151441890108013e-155,3.414224532554403e-155,3.4133046283123436e-155,3.412384476084217e-155,3.411464075669373e-155,3.4105434268668648e-155,3.4096225294755013e-155,3.4087013832937907e-155,3.4077799881199916e-155,3.406858343752089e-155,3.405936449987773e-155,3.4050143066244893e-155,3.4040919134593792e-155,3.4031692702893394e-155,3.4022463769109613e-155,3.401323233120589e-155,3.400399838714263e-155,3.3994761934877737e-155,3.3985522972366056e-155,3.3976281497559877e-155,3.39670375084087e-155,3.395779100285901e-155,3.3948541978854788e-155,3.3939290434336936e-155,3.3930036367243822e-155,3.3920779775510716e-155,3.3911520657070373e-155,3.3902259009852418e-155,3.3892994831783943e-155,3.3883728120788917e-155,3.3874458874788765e-155,3.386518709170177e-155,3.385591276944358e-155,3.3846635905926996e-155,3.383735649906173e-155,3.3828074546754933e-155,3.3818790046910573e-155,3.380950299743005e-155,3.3800213396211573e-155,3.3790921241150763e-155,3.3781626530140056e-155,3.377232926106928e-155,3.3763029431825054e-155,3.3753727040291396e-155,3.37444220843491e-155,3.3735114561876267e-155,3.3725804470748057e-155,3.3716491808836496e-155,3.3707176574010946e-155,3.3697858764137533e-155,3.3688538377079743e-155,3.3679215410697788e-155,3.3669889862849223e-155,3.3660561731388347e-155,3.365123101416677e-155,3.3641897709032826e-155,3.3632561813832167e-155,3.3623223326407157e-155,3.3613882244597384e-155,3.3604538566239424e-155,3.359519228916664e-155,3.358584341120966e-155,3.3576491930195804e-155,3.3567137843949665e-155,3.3557781150292497e-155,3.3548421847042822e-155,3.3539059932015815e-155,3.352969540302391e-155,3.3520328257876164e-155,3.3510958494378895e-155,3.3501586110335037e-155,3.3492211103544694e-155,3.3482833471804863e-155,3.3473453212909254e-155,3.346407032464877e-155,3.345468480481093e-155,3.344529665118043e-155,3.3435905861538574e-155,3.342651243366384e-155,3.3417116365331284e-155,3.3407717654313135e-155,3.3398316298378193e-155,3.33889122952924e-155,3.337950564281827e-155,3.337009633871538e-155,3.3360684380740142e-155,3.3351269766645587e-155,3.3341852494181866e-155,3.333243256109566e-155,3.332300996513076e-155,3.3313584704027464e-155,3.330415677552318e-155,3.32947261773518e-155,3.3285292907244317e-155,3.3275856962928204e-155,3.3266418342128013e-155,3.3256977042564767e-155,3.324753306195647e-155,3.3238086398017897e-155,3.3228637048460338e-155,3.321918501099214e-155,3.3209730283318074e-155,3.320027286313995e-155,3.3190812748156017e-155,3.3181349936061515e-155,3.317188442454812e-155,3.3162416211304508e-155,3.3152945294015743e-155,3.31434716703639e-155,3.3133995338027424e-155,3.3124516294681676e-155,3.311503453799868e-155,3.310555006564691e-155,3.3096062875291796e-155,3.308657296459512e-155,3.3077080331215606e-155,3.3067584972808327e-155,3.305808688702528e-155,3.304858607151479e-155,3.3039082523922105e-155,3.3029576241888782e-155,3.302006722305328e-155,3.301055546505036e-155,3.3001040965511602e-155,3.2991523722065165e-155,3.2982003732335568e-155,3.2972480993944193e-155,3.296295550450869e-155,3.2953427261643567e-155,3.294389626295958e-155,3.293436250606433e-155,3.292482598856165e-155,3.2915286708052206e-155,3.2905744662132886e-155,3.2896199848397392e-155,3.2886652264435635e-155,3.2877101907834244e-155,3.2867548776176354e-155,3.2857992867041354e-155,3.2848434178005415e-155,3.2838872706640875e-155,3.282930845051684e-155,3.2819741407198583e-155,3.2810171574248113e-155,3.280059894922359e-155,3.2791023529679907e-155,3.278144531316809e-155,3.2771864297235882e-155,3.276228047942714e-155,3.2752693857282356e-155,3.2743104428338417e-155,3.2733512190128386e-155,3.2723917140182002e-155,3.271431927602508e-155,3.270471859518011e-155,3.2695115095165645e-155,3.2685508773496888e-155,3.2675899627685093e-155,3.2666287655238153e-155,3.265667285365999e-155,3.2647055220451153e-155,3.263743475310821e-155,3.2627811449124266e-155,3.2618185305988713e-155,3.2608556321187032e-155,3.259892449220128e-155,3.258928981650949e-155,3.2579652291586275e-155,3.2570011914902203e-155,3.2560368683924407e-155,3.255072259611596e-155,3.2541073648936474e-155,3.25314218398415e-155,3.252176716628311e-155,3.251210962570929e-155,3.2502449215564473e-155,3.2492785933289274e-155,3.2483119776320285e-155,3.2473450742090584e-155,3.246377882802913e-155,3.245410403156134e-155,3.24444263501085e-155,3.2434745781088347e-155,3.2425062321914468e-155,3.2415375969996875e-155,3.240568672274142e-155,3.2395994577550374e-155,3.2386299531821817e-155,3.2376601582950158e-155,3.236690072832591e-155,3.235719696533544e-155,3.2347490291361506e-155,3.233778070378262e-155,3.2328068199973675e-155,3.231835277730531e-155,3.2308634433144517e-155,3.229891316485402e-155,3.228918896979288e-155,3.2279461845315865e-155,3.2269731788774003e-155,3.2259998797514317e-155,3.2250262868879594e-155,3.224052400020892e-155,3.223078218883706e-155,3.2221037432095044e-155,3.2211289727309564e-155,3.220153907180358e-155,3.219178546289567e-155,3.2182028897900686e-155,3.2172269374129073e-155,3.216250688888752e-155,3.215274143947831e-155,3.214297302319987e-155,3.213320163734651e-155,3.2123427279208193e-155,3.2113649946071073e-155,3.2103869635216864e-155,3.209408634392344e-155,3.208430006946422e-155,3.207451080910877e-155,3.206471856012219e-155,3.2054923319765683e-155,3.2045125085295997e-155,3.203532385396596e-155,3.2025519623023902e-155,3.2015712389714177e-155,3.2005902151276903e-155,3.1996088904947744e-155,3.1986272647958434e-155,3.1976453377536142e-155,3.1966631090904095e-155,3.1956805785280933e-155,3.194697745788134e-155,3.1937146105915404e-155,3.1927311726589213e-155,3.1917474317104256e-155,3.190763387465801e-155,3.1897790396443326e-155,3.1887943879648948e-155,3.1878094321459282e-155,3.1868241719054147e-155,3.1858386069609317e-155,3.184852737029588e-155,3.1838665618280855e-155,3.1828800810726565e-155,3.181893294479125e-155,3.1809062017628414e-155,3.179918802638747e-155,3.1789310968213088e-155,3.1779430840245813e-155,3.1769547639621427e-155,3.1759661363471496e-155,3.1749772008923115e-155,3.1739879573098676e-155,3.1729984053116386e-155,3.1720085446089656e-155,3.17101837491277e-155,3.1700278959334905e-155,3.169037107381144e-155,3.1680460089652637e-155,3.167054600394959e-155,3.1660628813788523e-155,3.1650708516251415e-155,3.1640785108415347e-155,3.1630858587353066e-155,3.162092895013271e-155,3.161099619381758e-155,3.160106031546668e-155,3.159112131213408e-155,3.158117918086951e-155,3.1571233918717756e-155,3.1561285522719258e-155,3.1551333989909475e-155,3.1541379317319503e-155,3.1531421501975442e-155,3.1521460540899003e-155,3.151149643110688e-155,3.150152916961128e-155,3.1491558753419687e-155,3.1481585179534604e-155,3.14716084449541e-155,3.1461628546671185e-155,3.1451645481674387e-155,3.1441659246947156e-155,3.143166983946846e-155,3.142167725621215e-155,3.141168149414758e-155,3.1401682550238965e-155,3.1391680421446e-155,3.1381675104723213e-155,3.137166659702053e-155,3.1361654895282984e-155,3.135163999645052e-155,3.134162189745849e-155,3.1331600595237044e-155,3.132157608671173e-155,3.1311548368802856e-155,3.1301517438426117e-155,3.1291483292491955e-155,3.128144592790616e-155,3.1271405341569245e-155,3.1261361530377067e-155,3.1251314491220173e-155,3.1241264220984347e-155,3.1231210716550365e-155,3.1221153974793743e-155,3.1211093992585276e-155,3.1201030766790404e-155,3.1190964294269827e-155,3.118089457187885e-155,3.1170821596468026e-155,3.11607453648825e-155,3.115066587396263e-155,3.114058312054334e-155,3.1130497101454748e-155,3.1120407813521517e-155,3.1110315253563405e-155,3.1100219418395e-155,3.109012030482549e-155,3.108001790965919e-155,3.10699122296949e-155,3.1059803261726533e-155,3.104969100254247e-155,3.103957544892618e-155,3.102945659765555e-155,3.101933444550355e-155,3.1009208989237565e-155,3.099908022562001e-155,3.098894815140769e-155,3.097881276335236e-155,3.0968674058200435e-155,3.0958532032692785e-155,3.0948386683565254e-155,3.0938238007548e-155,3.092808600136616e-155,3.0917930661739153e-155,3.0907771985381343e-155,3.0897609969001366e-155,3.088744460930276e-155,3.087727590298333e-155,3.0867103846735744e-155,3.0856928437246915e-155,3.084674967119852e-155,3.083656754526677e-155,3.082638205612213e-155,3.0816193200429903e-155,3.080600097484954e-155,3.07958053760353e-155,3.0785606400635564e-155,3.077540404529349e-155,3.0765198306646355e-155,3.075498918132616e-155,3.0744776665959018e-155,3.073456075716573e-155,3.072434145156118e-155,3.0714118745754846e-155,3.0703892636350573e-155,3.0693663119946302e-155,3.068343019313462e-155,3.0673193852502123e-155,3.066295409463002e-155,3.0652710916093483e-155,3.0642464313462293e-155,3.063221428330017e-155,3.0621960822165397e-155,3.061170392661018e-155,3.060144359318119e-155,3.059117981841929e-155,3.0580912598859314e-155,3.0570641931030595e-155,3.0560367811456308e-155,3.0550090236654103e-155,3.0539809203135457e-155,3.0529524707406287e-155,3.0519236745966298e-155,3.050894531530963e-155,3.0498650411924166e-155,3.0488352032292195e-155,3.047805017288974e-155,3.0467744830187105e-155,3.045743600064862e-155,3.04471236807324e-155,3.0436807866890856e-155,3.0426488555570094e-155,3.0416165743210495e-155,3.0405839426246075e-155,3.039550960110513e-155,3.038517626420954e-155,3.037483941197544e-155,3.0364499040812533e-155,3.0354155147124732e-155,3.03438077273095e-155,3.033345677775839e-155,3.03231022948568e-155,3.0312744274983725e-155,3.0302382714512276e-155,3.0292017609809043e-155,3.028164895723472e-155,3.0271276753143457e-155,3.0260900993883465e-155,3.025052167579637e-155,3.0240138795217848e-155,3.022975234847696e-155,3.021936233189678e-155,3.020896874179373e-155,3.0198571574478143e-155,3.0188170826254e-155,3.017776649341866e-155,3.0167358572263425e-155,3.015694705907288e-155,3.0146531950125505e-155,3.0136113241693043e-155,3.0125690930041094e-155,3.011526501142849e-155,3.01048354821079e-155,3.009440233832517e-155,3.008396557631997e-155,3.0073525192325123e-155,3.006308118256714e-155,3.005263354326599e-155,3.004218227063482e-155,3.0031727360880504e-155,3.0021268810202998e-155,3.001080661479596e-155,3.000034077084608e-155,2.998987127453373e-155,2.9979398122032273e-155,2.9968921309508722e-155,2.995844083312305e-155,2.9947956689028857e-155,2.993746887337266e-155,2.992697738229449e-155,2.991648221192758e-155,2.990598335839817e-155,2.989548081782599e-155,2.9884974586323654e-155,2.9874464659997243e-155,2.9863951034945675e-155,2.9853433707261323e-155,2.9842912673029344e-155,2.9832387928328317e-155,2.9821859469229575e-155,2.9811327291797852e-155,2.9800791392090583e-155,2.9790251766158487e-155,2.9779708410045298e-155,2.9769161319787485e-155,2.9758610491414834e-155,2.9748055920949754e-155,2.973749760440793e-155,2.9726935537797637e-155,2.971636971712039e-155,2.970580013837026e-155,2.969522679753452e-155,2.9684649690592963e-155,2.9674068813518555e-155,2.9663484162276744e-155,2.965289573282603e-155,2.9642303521117684e-155,2.96317075230955e-155,2.9621107734696354e-155,2.9610504151849506e-155,2.959989677047727e-155,2.95892855864943e-155,2.9578670595808274e-155,2.956805179431918e-155,2.955742917791998e-155,2.9546802742495912e-155,2.953617248392516e-155,2.9525538398078135e-155,2.951490048081808e-155,2.9504258728000756e-155,2.9493613135474224e-155,2.948296369907936e-155,2.9472310414649207e-155,2.9461653278009597e-155,2.945099228497849e-155,2.944032743136659e-155,2.942965871297669e-155,2.94189861256043e-155,2.9408309665036977e-155,2.939762932705494e-155,2.9386945107430437e-155,2.9376257001928246e-155,2.9365565006305464e-155,2.9354869116311193e-155,2.9344169327687133e-155,2.9333465636166877e-155,2.932275803747657e-155,2.931204652733421e-155,2.930133110145031e-155,2.9290611755527197e-155,2.927988848525967e-155,2.9269161286334297e-155,2.925843015443009e-155,2.9247695085217786e-155,2.9236956074360436e-155,2.9226213117513107e-155,2.921546621032264e-155,2.92047153484282e-155,2.9193960527460577e-155,2.918320174304286e-155,2.917243899078973e-155,2.916167226630809e-155,2.915090156519642e-155,2.9140126883045393e-155,2.9129348215437186e-155,2.911856555794614e-155,2.910777890613806e-155,2.9096988255570793e-155,2.9086193601793933e-155,2.907539494034857e-155,2.9064592266767836e-155,2.9053785576576238e-155,2.9042974865290284e-155,2.9032160128417794e-155,2.902134136145856e-155,2.901051855990365e-155,2.899969171923605e-155,2.898886083492997e-155,2.8978025902451504e-155,2.8967186917257933e-155,2.8956343874798277e-155,2.894549677051305e-155,2.893464559983395e-155,2.8923790358184454e-155,2.8912931040979097e-155,2.8902067643624156e-155,2.8891200161516913e-155,2.8880328590046352e-155,2.8869452924592414e-155,2.8858573160526685e-155,2.884768929321168e-155,2.8836801318001424e-155,2.8825909230241156e-155,2.8815013025267072e-155,2.8804112698406884e-155,2.8793208244979117e-155,2.8782299660293774e-155,2.877138693965162e-155,2.876047007834485e-155,2.874954907165638e-155,2.87386239148605e-155,2.872769460322218e-155,2.871676113199771e-155,2.8705823496434012e-155,2.869488169176921e-155,2.8683935713232336e-155,2.8672985556043064e-155,2.866203121541228e-155,2.8651072686541363e-155,2.864010996462287e-155,2.8629143044839795e-155,2.861817192236626e-155,2.8607196592366774e-155,2.8596217049996925e-155,2.8585233290402647e-155,2.857424530872088e-155,2.8563253100078887e-155,2.8552256659594787e-155,2.8541255982377307e-155,2.853025106352549e-155,2.851924189812925e-155,2.8508228481268694e-155,2.849721080801476e-155,2.8486188873428506e-155,2.847516267256178e-155,2.8464132200456497e-155,2.8453097452145315e-155,2.84420584226509e-155,2.8431015106986606e-155,2.8419967500155753e-155,2.8408915597152206e-155,2.839785939296009e-155,2.8386798882553497e-155,2.8375734060897067e-155,2.8364664922945286e-155,2.8353591463643126e-155,2.8342513677925343e-155,2.8331431560717133e-155,2.8320345106933417e-155,2.830925431147951e-155,2.829815916925039e-155,2.8287059675131377e-155,2.8275955823997397e-155,2.826484761071358e-155,2.825373503013495e-155,2.8242618077106157e-155,2.8231496746462046e-155,2.822037103302694e-155,2.820924093161529e-155,2.8198106437030986e-155,2.8186967544067987e-155,2.8175824247509615e-155,2.816467654212923e-155,2.8153524422689483e-155,2.8142367883943007e-155,2.8131206920631675e-155,2.812004152748719e-155,2.8108871699230797e-155,2.8097697430572965e-155,2.8086518716214017e-155,2.807533555084336e-155,2.8064147929140176e-155,2.805295584577268e-155,2.8041759295398804e-155,2.8030558272665458e-155,2.8019352772209205e-155,2.800814278865552e-155,2.7996928316619484e-155,2.7985709350705026e-155,2.797448588550552e-155,2.7963257915603486e-155,2.7952025435570314e-155,2.794078843996682e-155,2.792954692334253e-155,2.7918300880236352e-155,2.7907050305175834e-155,2.7895795192677845e-155,2.7884535537247827e-155,2.7873271333380494e-155,2.7862002575559057e-155,2.7850729258255934e-155,2.7839451375931994e-155,2.7828168923037148e-155,2.7816881894010053e-155,2.7805590283277804e-155,2.779429408525654e-155,2.778299329435069e-155,2.7771687904953655e-155,2.7760377911447058e-155,2.774906330820144e-155,2.7737744089575493e-155,2.7726420249916755e-155,2.7715091783560856e-155,2.7703758684832214e-155,2.7692420948043256e-155,2.768107856749505e-155,2.7669731537476965e-155,2.7658379852266403e-155,2.7647023506129368e-155,2.7635662493319723e-155,2.762429680807988e-155,2.7612926444640033e-155,2.7601551397218862e-155,2.7590171660022763e-155,2.7578787227246544e-155,2.7567398093072653e-155,2.7556004251671893e-155,2.754460569720264e-155,2.7533202423811453e-155,2.7521794425632762e-155,2.7510381696788567e-155,2.7498964231389023e-155,2.748754202353171e-155,2.747611506730228e-155,2.7464683356773732e-155,2.7453246886007087e-155,2.744180564905062e-155,2.7430359639940564e-155,2.7418908852700335e-155,2.7407453281341238e-155,2.739599291986168e-155,2.7384527762247793e-155,2.7373057802473104e-155,2.7361583034498247e-155,2.735010345227155e-155,2.733861904972826e-155,2.732712982079125e-155,2.731563575937026e-155,2.7304136859362557e-155,2.7292633114652196e-155,2.7281124519110704e-155,2.726961106659631e-155,2.7258092750954635e-155,2.7246569566017927e-155,2.7235041505605664e-155,2.7223508563524224e-155,2.721197073356661e-155,2.7200428009513e-155,2.718888038513002e-155,2.7177327854171418e-155,2.7165770410377293e-155,2.715420804747478e-155,2.71426407591773e-155,2.713106853918523e-155,2.7119491381185143e-155,2.7107909278850498e-155,2.7096322225840866e-155,2.7084730215802527e-155,2.707313324236816e-155,2.7061531299156534e-155,2.7049924379773087e-155,2.703831247780917e-155,2.702669558684274e-155,2.701507370043757e-155,2.700344681214395e-155,2.699181491549792e-155,2.6980178004021944e-155,2.6968536071224154e-155,2.6956889110598927e-155,2.694523711562659e-155,2.6933580079773085e-155,2.6921917996490576e-155,2.6910250859216675e-155,2.6898578661375133e-155,2.6886901396375045e-155,2.6875219057611566e-155,2.6863531638465124e-155,2.68518391323021e-155,2.684014153247406e-155,2.6828438832318454e-155,2.681673102515781e-155,2.6805018104300364e-155,2.6793300063039714e-155,2.6781576894654516e-155,2.6769848592409077e-155,2.6758115149552574e-155,2.6746376559319744e-155,2.67346328149301e-155,2.6722883909588634e-155,2.6711129836485013e-155,2.669937058879429e-155,2.6687606159676108e-155,2.667583654227541e-155,2.6664061729721612e-155,2.665228171512926e-155,2.6640496491597656e-155,2.662870605221057e-155,2.661691039003681e-155,2.6605109498129457e-155,2.6593303369526545e-155,2.658149199725028e-155,2.656967537430772e-155,2.6557853493690014e-155,2.654602634837306e-155,2.6534193931316725e-155,2.6522356235465563e-155,2.651051325374799e-155,2.64986649790769e-155,2.6486811404349337e-155,2.6474952522446173e-155,2.6463088326232687e-155,2.645121880855779e-155,2.6439343962254718e-155,2.642746378014023e-155,2.6415578255015303e-155,2.640368737966434e-155,2.639179114685587e-155,2.6379889549341723e-155,2.6367982579857757e-155,2.6356070231123057e-155,2.6344152495840508e-155,2.6332229366696495e-155,2.6320300836360554e-155,2.6308366897485974e-155,2.6296427542708998e-155,2.628448276464953e-155,2.6272532555910305e-155,2.6260576909077617e-155,2.624861581672049e-155,2.6236649271391403e-155,2.6224677265625438e-155,2.6212699791941032e-155,2.620071684283913e-155,2.6188728410803814e-155,2.6176734488301943e-155,2.6164735067782843e-155,2.6152730141678877e-155,2.6140719702404667e-155,2.6128703742357776e-155,2.6116682253917897e-155,2.6104655229447558e-155,2.6092622661291302e-155,2.60805845417764e-155,2.6068540863212018e-155,2.605649161788994e-155,2.6044436798083717e-155,2.6032376396049323e-155,2.602031040402477e-155,2.600823881422978e-155,2.599616161886639e-155,2.5984078810118144e-155,2.5971990380150774e-155,2.59598963211114e-155,2.594779662512921e-155,2.593569128431466e-155,2.592358029076017e-155,2.591146363653929e-155,2.5899341313707413e-155,2.588721331430095e-155,2.5875079630337935e-155,2.5862940253817676e-155,2.5850795176720415e-155,2.5838644391007923e-155,2.5826487888622677e-155,2.5814325661488574e-155,2.5802157701510086e-155,2.5789984000572975e-155,2.5777804550543453e-155,2.57656193432689e-155,2.5753428370577018e-155,2.574123162427654e-155,2.572902909615642e-155,2.5716820777986386e-155,2.5704606661516648e-155,2.5692386738477504e-155,2.568016100057997e-155,2.566792943951493e-155,2.5655692046953846e-155,2.5643448814547927e-155,2.5631199733928827e-155,2.5618944796707804e-155,2.5606683994476434e-155,2.559441731880576e-155,2.5582144761247013e-155,2.556986631333075e-155,2.5557581966567482e-155,2.5545291712447308e-155,2.553299554243955e-155,2.5520693447993366e-155,2.5508385420536916e-155,2.5496071451478045e-155,2.5483751532203467e-155,2.547142565407944e-155,2.5459093808450943e-155,2.544675598664236e-155,2.5434412179956656e-155,2.5422062379676065e-155,2.5409706577061253e-155,2.5397344763351906e-155,2.5384976929766397e-155,2.537260306750139e-155,2.536022316773247e-155,2.5347837221613276e-155,2.533544522027622e-155,2.532304715483162e-155,2.531064301636842e-155,2.5298232795953323e-155,2.5285816484631494e-155,2.5273394073425726e-155,2.5260965553337114e-155,2.5248530915344225e-155,2.5236090150403683e-155,2.522364324944982e-155,2.521119020339429e-155,2.519873100312668e-155,2.5186265639513663e-155,2.5173794103399674e-155,2.5161316385606077e-155,2.5148832476931858e-155,2.5136342368152756e-155,2.5123846050021978e-155,2.511134351326933e-155,2.5098834748601923e-155,2.5086319746703305e-155,2.5073798498234066e-155,2.506127099383147e-155,2.504873722410907e-155,2.5036197179657318e-155,2.502365085104269e-155,2.5011098228808415e-155,2.4998539303473553e-155,2.498597406553376e-155,2.4973402505460375e-155,2.496082461370113e-155,2.4948240380679295e-155,2.493564979679426e-155,2.4923052852421177e-155,2.491044953791055e-155,2.4897839843588877e-155,2.4885223759757727e-155,2.4872601276694484e-155,2.4859972384651452e-155,2.4847337073856557e-155,2.4834695334512467e-155,2.4822047156797297e-155,2.4809392530863743e-155,2.479673144683975e-155,2.478406389482766e-155,2.477138986490481e-155,2.4758709347123133e-155,2.4746022331508777e-155,2.473332880806271e-155,2.472062876675983e-155,2.470792219754966e-155,2.469520909035548e-155,2.468248943507501e-155,2.466976322157954e-155,2.4657030439714594e-155,2.4644291079299093e-155,2.4631545130126012e-155,2.4618792581961513e-155,2.460603342454553e-155,2.4593267647591396e-155,2.4580495240785413e-155,2.4567716193787487e-155,2.4554930496230218e-155,2.454213813771959e-155,2.4529339107834094e-155,2.4516533396125414e-155,2.4503720992117533e-155,2.4490901885307433e-155,2.4478076065164188e-155,2.4465243521129678e-155,2.4452404242617664e-155,2.4439558219014416e-155,2.4426705439678286e-155,2.4413845893939313e-155,2.4400979571099827e-155,2.4388106460433535e-155,2.437522655118622e-155,2.436233983257483e-155,2.43494462937882e-155,2.4336545923986103e-155,2.432363871229998e-155,2.4310724647832015e-155,2.429780371965583e-155,2.4284875916815584e-155,2.4271941228326553e-155,2.4258999643174734e-155,2.424605115031643e-155,2.4233095738678835e-155,2.422013339715913e-155,2.420716411462517e-155,2.4194187879914576e-155,2.4181204681835416e-155,2.4168214509165294e-155,2.4155217350652044e-155,2.41422131950128e-155,2.4129202030934714e-155,2.4116183847073993e-155,2.4103158632056534e-155,2.409012637447747e-155,2.407708706290077e-155,2.4064040685859836e-155,2.405098723185654e-155,2.4037926689361955e-155,2.4024859046815415e-155,2.40117842926252e-155,2.3998702415167597e-155,2.398561340278761e-155,2.397251724379802e-155,2.3959413926480066e-155,2.394630343908253e-155,2.39331857698223e-155,2.3920060906883957e-155,2.3906928838419354e-155,2.389378955254818e-155,2.388064303735704e-155,2.386748928090014e-155,2.3854328271198328e-155,2.384115999623981e-155,2.3827984443979186e-155,2.381480160233815e-155,2.380161145920453e-155,2.3788414002432995e-155,2.377520921984408e-155,2.3761997099224796e-155,2.3748777628328186e-155,2.373555079487287e-155,2.3722316586543647e-155,2.3709074990990528e-155,2.369582599582944e-155,2.368256958864124e-155,2.366930575697244e-155,2.3656034488334205e-155,2.3642755770203077e-155,2.3629469590019995e-155,2.3616175935190976e-155,2.360287479308616e-155,2.3589566151040395e-155,2.357624999635278e-155,2.356292631628621e-155,2.354959509806797e-155,2.3536256328888748e-155,2.352290999590334e-155,2.350955608622966e-155,2.349619458694943e-155,2.3482825485107207e-155,2.346944876771106e-155,2.34560644217316e-155,2.3442672434102654e-155,2.34292727917203e-155,2.341586548144343e-155,2.3402450490093287e-155,2.338902780445302e-155,2.337559741126823e-155,2.3362159297246023e-155,2.3348713449055657e-155,2.3335259853327564e-155,2.3321798496654044e-155,2.330832936558825e-155,2.3294852446644887e-155,2.32813677262992e-155,2.3267875190987674e-155,2.3254374827107014e-155,2.324086662101474e-155,2.32273505590287e-155,2.3213826627426586e-155,2.3200294812446524e-155,2.3186755100286066e-155,2.317320747710285e-155,2.315965192901362e-155,2.3146088442094877e-155,2.313251700238188e-155,2.3118937595869333e-155,2.3105350208510345e-155,2.3091754826217144e-155,2.3078151434860018e-155,2.3064540020267915e-155,2.305092056822794e-155,2.303729306448487e-155,2.3023657494741714e-155,2.30100138446587e-155,2.299636209985394e-155,2.2982702245902406e-155,2.2969034268336604e-155,2.2955358152645534e-155,2.294167388427539e-155,2.292798144862849e-155,2.2914280831063977e-155,2.2900572016896756e-155,2.2886854991398086e-155,2.2873129739795055e-155,2.2859396247270087e-155,2.2845654498961494e-155,2.2831904479962422e-155,2.281814617532156e-155,2.2804379570042035e-155,2.2790604649082135e-155,2.277682139735422e-155,2.2763029799725403e-155,2.2749229841016497e-155,2.273542150600257e-155,2.272160477941243e-155,2.2707779645928102e-155,2.2693946090185377e-155,2.268010409677277e-155,2.2666253650232157e-155,2.2652394735057734e-155,2.2638527335696664e-155,2.2624651436548004e-155,2.2610767021963397e-155,2.259687407624595e-155,2.2582972583650935e-155,2.2569062528384702e-155,2.2555143894605222e-155,2.254121666642156e-155,2.2527280827893316e-155,2.251333636303121e-155,2.2499383255795972e-155,2.2485421490098997e-155,2.2471451049801268e-155,2.245747191871401e-155,2.244348408059758e-155,2.2429487519162146e-155,2.2415482218066587e-155,2.240146816091912e-155,2.2387445331276226e-155,2.237341371264319e-155,2.235937328847354e-155,2.234532404216848e-155,2.2331265957077458e-155,2.2317199016497013e-155,2.2303123203671474e-155,2.2289038501791808e-155,2.2274944893996287e-155,2.2260842363369363e-155,2.224673089294231e-155,2.2232610465692114e-155,2.2218481064542106e-155,2.220434267236085e-155,2.219019527196265e-155,2.2176038846107013e-155,2.2161873377498033e-155,2.214769884878494e-155,2.213351524256096e-155,2.2119322541363967e-155,2.2105120727675313e-155,2.20909097839205e-155,2.207668969246801e-155,2.206246043562995e-155,2.204822199566091e-155,2.203397435475859e-155,2.2019717495062645e-155,2.2005451398655213e-155,2.1991176047560315e-155,2.1976891423743238e-155,2.1962597509111095e-155,2.194829428551161e-155,2.1933981734733785e-155,2.191965983850671e-155,2.19053285785002e-155,2.189098793632362e-155,2.187663789352651e-155,2.18622784315974e-155,2.1847909531964437e-155,2.183353117599421e-155,2.181914334499226e-155,2.1804746020202426e-155,2.1790339182806273e-155,2.1775922813923545e-155,2.176149689461101e-155,2.1747061405863054e-155,2.1732616328610484e-155,2.1718161643721154e-155,2.170369733199875e-155,2.168922337418339e-155,2.167473975095046e-155,2.166024644291116e-155,2.164574343061135e-155,2.163123069453199e-155,2.161670821508855e-155,2.160217597263029e-155,2.1587633947440815e-155,2.1573082119736807e-155,2.1558520469668633e-155,2.1543948977319136e-155,2.15293676227042e-155,2.151477638577154e-155,2.150017524640128e-155,2.1485564184404726e-155,2.1470943179524946e-155,2.145631221143553e-155,2.144167125974107e-155,2.142702030397647e-155,2.1412359323606276e-155,2.1397688298025146e-155,2.138300720655659e-155,2.1368316028453544e-155,2.1353614742897125e-155,2.1338903328997184e-155,2.1324181765791056e-155,2.1309450032244135e-155,2.1294708107248575e-155,2.12799559696239e-155,2.1265193598115693e-155,2.1250420971396055e-155,2.1235638068062917e-155,2.1220844866639305e-155,2.12060413455738e-155,2.119122748323924e-155,2.1176403257933293e-155,2.1161568647877137e-155,2.1146723631216024e-155,2.113186818601798e-155,2.1117002290274362e-155,2.110212592189852e-155,2.108723905872637e-155,2.107234167851508e-155,2.105743375894348e-155,2.1042515277611328e-155,2.102758621203858e-155,2.1012646539665787e-155,2.099769623785279e-155,2.0982735283879243e-155,2.0967763654943266e-155,2.095278132816198e-155,2.0937788280570184e-155,2.0922784489120843e-155,2.090776993068377e-155,2.0892744582046135e-155,2.08777084199111e-155,2.086266142089824e-155,2.0847603561542733e-155,2.083253481829463e-155,2.0817455167519195e-155,2.0802364585495576e-155,2.0787263048417273e-155,2.077215053239079e-155,2.0757027013436114e-155,2.0741892467485345e-155,2.072674687038318e-155,2.071159019788552e-155,2.069642242565998e-155,2.0681243529284455e-155,2.0666053484247513e-155,2.0650852265947585e-155,2.0635639849692114e-155,2.062041621069795e-155,2.060518132408991e-155,2.0589935164901255e-155,2.057467770807227e-155,2.0559408928450734e-155,2.054412880079047e-155,2.0528837299751832e-155,2.0513534399900248e-155,2.0498220075706683e-155,2.0482894301546187e-155,2.046755705169823e-155,2.0452208300345847e-155,2.0436848021574762e-155,2.0421476189373725e-155,2.0406092777633027e-155,2.0390697760144955e-155,2.03752911106023e-155,2.0359872802598813e-155,2.0344442809627686e-155,2.0329001105082e-155,2.031354766225324e-155,2.029808245433156e-155,2.0282605454404923e-155,2.0267116635458167e-155,2.0251615970373296e-155,2.0236103431927985e-155,2.0220578992795957e-155,2.0205042625545483e-155,2.0189494302639765e-155,2.0173933996435406e-155,2.015836167918281e-155,2.0142777323024614e-155,2.0127180899996112e-155,2.011157238202367e-155,2.0095951740924982e-155,2.0080318948408153e-155,2.0064673976070687e-155,2.0049016795399764e-155,2.0033347377770664e-155,2.00176656944471e-155,2.0001971716579668e-155,1.9986265415206183e-155,1.9970546761250067e-155,1.9954815725520725e-155,1.993907227871191e-155,1.99233163914021e-155,1.990754803405282e-155,1.989176717700891e-155,1.987597379049748e-155,1.986016784462688e-155,1.9844349309386918e-155,1.9828518154647203e-155,1.9812674350157462e-155,1.979681786554587e-155,1.9780948670319375e-155,1.976506673386201e-155,1.97491720254352e-155,1.9733264514176083e-155,1.9717344169097793e-155,1.9701410959087764e-155,1.9685464852907897e-155,1.966950581919347e-155,1.965353382645204e-155,1.9637548843063594e-155,1.9621550837278816e-155,1.9605539777219363e-155,1.958951563087611e-155,1.957347836610941e-155,1.955742795064734e-155,1.954136435208595e-155,1.952528753788748e-155,1.9509197475380627e-155,1.949309413175873e-155,1.9476977474079885e-155,1.9460847469265796e-155,1.944470408410058e-155,1.942854728523086e-155,1.941237703916396e-155,1.93961933122681e-155,1.9379996070770563e-155,1.9363785280757894e-155,1.9347560908174054e-155,1.93313229188206e-155,1.931507127835482e-155,1.929880595228992e-155,1.928252690599315e-155,1.9266234104685804e-155,1.924992751344202e-155,1.923360709718749e-155,1.9217272820699467e-155,1.92009246486049e-155,1.9184562545380514e-155,1.9168186475350915e-155,1.9151796402688687e-155,1.913539229141248e-155,1.911897410538708e-155,1.910254180832149e-155,1.908609536376899e-155,1.9069634735125182e-155,1.905315988562794e-155,1.903667077835605e-155,1.9020167376227897e-155,1.900364964200134e-155,1.8987117538271743e-155,1.8970571027472e-155,1.8954010071870513e-155,1.8937434633571215e-155,1.8920844674511526e-155,1.8904240156462384e-155,1.8887621041026148e-155,1.887098728963663e-155,1.8854338863557002e-155,1.883767572387965e-155,1.8820997831524727e-155,1.880430514723868e-155,1.8787597631594115e-155,1.8770875244987633e-155,1.87541379476398e-155,1.873738569959299e-155,1.8720618460711323e-155,1.870383619067849e-155,1.8687038848997666e-155,1.8670226394989343e-155,1.8653398787791207e-155,1.8636555986355933e-155,1.861969794945095e-155,1.8602824635656853e-155,1.8585936003365831e-155,1.856903201078139e-155,1.8552112615916083e-155,1.8535177776591363e-155,1.851822745043529e-155,1.8501261594882354e-155,1.8484280167171171e-155,1.8467283124344283e-155,1.845027042324583e-155,1.8433242020521339e-155,1.8416197872615355e-155,1.8399137935771094e-155,1.8382062166028726e-155,1.8364970519223641e-155,1.8347862950986066e-155,1.8330739416738644e-155,1.8313599871696157e-155,1.8296444270863075e-155,1.8279272569033262e-155,1.8262084720787511e-155,1.8244880680493209e-155,1.8227660402301856e-155,1.8210423840148717e-155,1.8193170947750297e-155,1.8175901678603848e-155,1.8158615985985491e-155,1.8141313822948342e-155,1.8123995142321968e-155,1.8106659896709802e-155,1.8089308038488722e-155,1.8071939519806427e-155,1.8054554292581001e-155,1.8037152308498251e-155,1.8019733519011248e-155,1.8002297875337642e-155,1.7984845328459176e-155,1.796737582911897e-155,1.7949889327820863e-155,1.793238577482737e-155,1.791486512015761e-155,1.7897327313586612e-155,1.7879772304642533e-155,1.7862200042606056e-155,1.7844610476507593e-155,1.782700355512665e-155,1.780937922698899e-155,1.779173744036598e-155,1.7774078143271717e-155,1.775640128346234e-155,1.7738706808433126e-155,1.772099466541764e-155,1.7703264801385481e-155,1.7685517163040014e-155,1.7667751696817469e-155,1.764996834888395e-155,1.7632167065134646e-155,1.7614347791190785e-155,1.759651047239882e-155,1.7578655053827357e-155,1.7560781480266298e-155,1.7542889696223725e-155,1.7524979645924877e-155,1.7507051273309702e-155,1.7489104522030384e-155,1.7471139335450258e-155,1.7453155656640607e-155,1.743515342837968e-155,1.7417132593149436e-155,1.7399093093134541e-155,1.7381034870219058e-155,1.7362957865985406e-155,1.7344862021711019e-155,1.7326747278367251e-155,1.7308613576615999e-155,1.7290460856808426e-155,1.7272289058982253e-155,1.7254098122859009e-155,1.7235887987842706e-155,1.7217658593016333e-155,1.7199409877140636e-155,1.7181141778650556e-155,1.7162854235653966e-155,1.7144547185928067e-155,1.7126220566918074e-155,1.710787431573357e-155,1.7089508369147137e-155,1.7071122663590664e-155,1.7052717135153785e-155,1.7034291719580863e-155,1.7015846352267933e-155,1.699738096826107e-155,1.6978895502252564e-155,1.696038988857939e-155,1.694186406121932e-155,1.6923317953789334e-155,1.6904751499541695e-155,1.6886164631362291e-155,1.6867557281766662e-155,1.6848929382898287e-155,1.6830280866524538e-155,1.6811611664034792e-155,1.679292170643704e-155,1.6774210924354478e-155,1.6755479248023518e-155,1.6736726607289596e-155,1.6717952931605268e-155,1.6699158150025943e-155,1.6680342191207936e-155,1.666150498340412e-155,1.6642646454461922e-155,1.6623766531818916e-155,1.6604865142500748e-155,1.6585942213116658e-155,1.6566997669857197e-155,1.6548031438490425e-155,1.6529043444358063e-155,1.651003361237311e-155,1.6491001867015194e-155,1.6471948132328256e-155,1.6452872331915817e-155,1.6433774388938614e-155,1.6414654226109773e-155,1.6395511765692375e-155,1.6376346929494558e-155,1.6357159638866997e-155,1.6337949814697933e-155,1.6318717377410426e-155,1.6299462246958047e-155,1.628018434282055e-155,1.6260883584000996e-155,1.6241559889020567e-155,1.6222213175915777e-155,1.620284336223319e-155,1.6183450365026546e-155,1.616403410085139e-155,1.6144594485762108e-155,1.6125131435306474e-155,1.6105644864522582e-155,1.6086134687933314e-155,1.606660081954301e-155,1.6047043172832613e-155,1.6027461660754722e-155,1.6007856195730152e-155,1.598822668964213e-155,1.5968573053832913e-155,1.5948895199097879e-155,1.5929193035682034e-155,1.590946647327401e-155,1.5889715421002461e-155,1.5869939787429948e-155,1.5850139480549243e-155,1.5830314407777079e-155,1.58104644759502e-155,1.5790589591319791e-155,1.5770689659545827e-155,1.5750764585692956e-155,1.5730814274223954e-155,1.5710838628995645e-155,1.5690837553252232e-155,1.5670810949621088e-155,1.5650758720105965e-155,1.5630680766082664e-155,1.5610576988292113e-155,1.5590447286835902e-155,1.5570291561169228e-155,1.5550109710096146e-155,1.5529901631763162e-155,1.5509667223652763e-155,1.5489406382578466e-155,1.546911900467739e-155,1.544880498540534e-155,1.5428464219529228e-155,1.5408096601122e-155,1.5387702023554916e-155,1.5367280379492323e-155,1.5346831560883778e-155,1.5326355458958666e-155,1.5305851964218158e-155,1.528532096642951e-155,1.5264762354618668e-155,1.5244176017062777e-155,1.5223561841284242e-155,1.5202919714042247e-155,1.5182249521326807e-155,1.5161551148350118e-155,1.514082447954042e-155,1.512006939853317e-155,1.5099285788164713e-155,1.5078473530463273e-155,1.5057632506642445e-155,1.5036762597091968e-155,1.501586368137087e-155,1.4994935638198866e-155,1.4973978345447649e-155,1.495299168013374e-155,1.4931975518408726e-155,1.491092973555208e-155,1.4889854205961183e-155,1.4868748803143915e-155,1.4847613399708464e-155,1.4826447867355688e-155,1.4805252076868692e-155,1.478402589810497e-155,1.4762769199985724e-155,1.474148185048762e-155,1.472016371663269e-155,1.4698814664478163e-155,1.46774345591078e-155,1.4656023264620613e-155,1.4634580644122138e-155,1.4613106559712862e-155,1.4591600872479235e-155,1.457006344248183e-155,1.454849412874608e-155,1.4526892789250146e-155,1.4505259280915373e-155,1.448359345959387e-155,1.4461895180058492e-155,1.4440164295990982e-155,1.4418400659969933e-155,1.4396604123460334e-155,1.4374774536800355e-155,1.4352911749190736e-155,1.433101560868127e-155,1.4309085962159843e-155,1.428712265533857e-155,1.4265125532742511e-155,1.424309443769545e-155,1.4221029212308079e-155,1.4198929697464293e-155,1.417679573280726e-155,1.4154627156727084e-155,1.4132423806345625e-155,1.4110185517503951e-155,1.4087912124746767e-155,1.406560346130946e-155,1.4043259359102123e-155,1.4020879648696193e-155,1.3998464159308042e-155,1.3976012718785192e-155,1.3953525153589475e-155,1.3931001288782617e-155,1.390844094800983e-155,1.3885843953483178e-155,1.386321012596646e-155,1.3840539284757213e-155,1.38178312476713e-155,1.3795085831024398e-155,1.3772302849616101e-155,1.3749482116710888e-155,1.3726623444021702e-155,1.3703726641690388e-155,1.368079151827074e-155,1.3657817880708372e-155,1.3634805534323036e-155,1.3611754282788818e-155,1.358866392811407e-155,1.3565534270622817e-155,1.3542365108933184e-155,1.3519156239938369e-155,1.3495907458784433e-155,1.347261855885065e-155,1.3449289331726627e-155,1.3425919567192012e-155,1.3402509053192917e-155,1.3379057575820943e-155,1.3355564919288905e-155,1.333203086590896e-155,1.330845519606851e-155,1.328483768820574e-155,1.3261178118786629e-155,1.3237476262278774e-155,1.3213731891127795e-155,1.3189944775730354e-155,1.3166114684409752e-155,1.3142241383388103e-155,1.311832463676107e-155,1.3094364206469179e-155,1.3070359852271661e-155,1.3046311331716856e-155,1.302221840011495e-155,1.2998080810508375e-155,1.2973898313641694e-155,1.2949670657932904e-155,1.2925397589441386e-155,1.2901078851838354e-155,1.2876714186373772e-155,1.2852303331845746e-155,1.2827846024566322e-155,1.2803341998329798e-155,1.2778790984377372e-155,1.2754192711364293e-155,1.272954690532333e-155,1.2704853289630523e-155,1.2680111584968376e-155,1.2655321509288412e-155,1.2630482777775028e-155,1.260559510280575e-155,1.2580658193913942e-155,1.255567175774768e-155,1.2530635498031072e-155,1.2505549115521681e-155,1.2480412307970391e-155,1.2455224770077316e-155,1.2429986193450143e-155,1.240469626655848e-155,1.2379354674690384e-155,1.2353961099906068e-155,1.2328515220990769e-155,1.2303016713408738e-155,1.2277465249253344e-155,1.2251860497199482e-155,1.222620212245184e-155,1.2200489786695431e-155,1.217472314804194e-155,1.2148901860978298e-155,1.2123025576311e-155,1.2097093941112649e-155,1.2071106598664147e-155,1.204506318839888e-155,1.2018963345843746e-155,1.1992806702559005e-155,1.1966592886079057e-155,1.1940321519848894e-155,1.1913992223162658e-155,1.1887604611097604e-155,1.1861158294450113e-155,1.1834652879667042e-155,1.1808087968779073e-155,1.1781463159329312e-155,1.1754778044303836e-155,1.172803221205741e-155,1.1701225246240881e-155,1.1674356725724919e-155,1.1647426224522196e-155,1.1620433311710068e-155,1.1593377551348433e-155,1.1566258502399271e-155,1.153907571864108e-155,1.1511828748584904e-155,1.1484517135385126e-155,1.1457140416751829e-155,1.142969812485776e-155,1.140218978624679e-155,1.1374614921736885e-155,1.1346973046324209e-155,1.1319263669082976e-155,1.129148629306304e-155,1.1263640415187454e-155,1.1235725526144403e-155,1.1207741110280277e-155,1.1179686645486775e-155,1.1151561603089003e-155,1.1123365447727488e-155,1.1095097637241026e-155,1.1066757622543296e-155,1.103834484750018e-155,1.1009858748800664e-155,1.0981298755828077e-155,1.095266429052607e-155,1.0923954767261428e-155,1.0895169592685896e-155,1.0866308165591295e-155,1.083736987676483e-155,1.0808354108837223e-155,1.0779260236130871e-155,1.0750087624500596e-155,1.0720835631174211e-155,1.0691503604585431e-155,1.0662090884206387e-155,1.0632596800372225e-155,1.0603020674104829e-155,1.0573361816929756e-155,1.054361953068854e-155,1.0513793107348579e-155,1.0483881828804597e-155,1.0453884966678795e-155,1.0423801782112015e-155,1.0393631525553294e-155,1.0363373436540054e-155,1.0333026743476361e-155,1.0302590663401434e-155,1.0272064401755865e-155,1.0241447152137672e-155,1.0210738096055426e-155,1.017993640267223e-155,1.0149041228542721e-155,1.0118051717345274e-155,1.008696699960312e-155,1.0055786192401668e-155,1.002450839909393e-155,9.99313270900164e-156,9.961658197103893e-156,9.930083923720929e-156,9.898408934184805e-156,9.866632258504333e-156,9.834752911017743e-156,9.8027698900352e-156,9.7706821774733e-156,9.738488738474933e-156,9.706188521021873e-156,9.67378045553162e-156,9.641263454446165e-156,9.60863641180412e-156,9.575898202803828e-156,9.543047683348875e-156,9.5100836895836e-156,9.477005037409907e-156,9.443810521992775e-156,9.410498917247434e-156,9.377068975310134e-156,9.34351942599455e-156,9.309848976226535e-156,9.276056309464703e-156,9.242140085097643e-156,9.208098937825458e-156,9.173931477016333e-156,9.139636286045783e-156,9.105211921609154e-156,9.070656913015019e-156,9.03596976144984e-156,9.001148939221293e-156,8.966192888972347e-156,8.931100022867676e-156,8.895868721753974e-156,8.860497334286005e-156,8.824984176025648e-156,8.789327528503635e-156,8.753525638251452e-156,8.717576715792882e-156,8.681478934602554e-156,8.645230430020742e-156,8.608829298131674e-156,8.57227359459432e-156,8.535561333432486e-156,8.498690485774937e-156,8.461658978546119e-156,8.424464693108034e-156,8.387105463843445e-156,8.349579076686814e-156,8.311883267590743e-156,8.274015720934342e-156,8.235974067860909e-156,8.19775588455103e-156,8.159358690418002e-156,8.120779946231362e-156,8.082017052154875e-156,8.043067345704057e-156,8.003928099611127e-156,7.964596519595535e-156,7.925069742038046e-156,7.885344831545144e-156,7.845418778407523e-156,7.805288495936465e-156,7.764950817681448e-156,7.724402494511826e-156,7.683640191565075e-156,7.642660485043341e-156,7.601459858859783e-156,7.560034701115156e-156,7.518381300404632e-156,7.476495841936096e-156,7.434374403451609e-156,7.392012950943074e-156,7.349407334140547e-156,7.306553281769219e-156,7.263446396549043e-156,7.220082149931186e-156,7.176455876542659e-156,7.132562768330702e-156,7.0883978683752e-156,7.043956064357567e-156,6.999232081650706e-156,6.954220476014347e-156,6.908915625858437e-156,6.863311724046898e-156,6.817402769211548e-156,6.771182556530433e-156,6.724644667941622e-156,6.67778246173716e-156,6.630589061501104e-156,6.583057344327696e-156,6.535179928274392e-156,6.486949158975213e-156,6.438357095357704e-156,6.389395494375945e-156,6.340055794688274e-156,6.290329099178677e-156,6.240206156224549e-156,6.189677339603125e-156,6.138732626903143e-156,6.087361576316856e-156,6.03555330164746e-156,5.983296445375344e-156,5.930579149581427e-156,5.877389024529824e-156,5.823713114660815e-156,5.769537861743005e-156,5.71484906487431e-156,5.659631837010559e-156,5.603870557633998e-156,5.547548821139468e-156,5.490649380459435e-156,5.433154085367754e-156,5.375043814850441e-156,5.316298402814755e-156,5.25689655633287e-156,5.196815765465725e-156,5.136032203599077e-156,5.074520617025368e-156,5.012254202335431e-156,4.949204469916142e-156,4.88534109159705e-156,4.820631730122135e-156,4.755041847730581e-156,4.688534490635931e-156,4.621070045572936e-156,4.5526059638744415e-156,4.48309644760336e-156,4.4124920911801683e-156,4.340739470520693e-156,4.26778066999113e-156,4.193552735254282e-156,4.117987037324467e-156,4.041008529535798e-156,3.962534874545561e-156,3.8824754124402996e-156,3.800729933106561e-156,3.717187205485605e-156,3.6317232021224596e-156,3.5441989381309115e-156,3.4544578169746134e-156,3.3623223381274267e-156,3.26758996841394e-156,3.170027901753088e-156,3.0693663180047145e-156,2.9652895795040813e-156,2.8574245373280154e-156,2.7453246953198364e-156,2.628448283483361e-156,2.5061271067436615e-156,2.377520929743633e-156,2.2415482300360525e-156,2.0967763742925547e-156,1.9412377134189833e-156,1.7720994769520797e-156,1.5850139596932785e-156,1.3726623578419557e-156,1.1207741274873223e-156,7.925069974824452e-157,1.9304758912197072e-160],"x":[1.0e-309,9.99800079968017e-310,9.9960015993603e-310,9.99400239904047e-310,9.99200319872063e-310,9.9900039984008e-310,9.98800479808093e-310,9.9860055977611e-310,9.98400639744123e-310,9.9820071971214e-310,9.98000799680154e-310,9.9780087964817e-310,9.97600959616184e-310,9.974010395842e-310,9.97201119552214e-310,9.9700119952023e-310,9.96801279488245e-310,9.9660135945626e-310,9.96401439424275e-310,9.9620151939229e-310,9.96001599360305e-310,9.9580167932832e-310,9.95601759296336e-310,9.9540183926435e-310,9.95201919232366e-310,9.9500199920038e-310,9.94802079168396e-310,9.9460215913641e-310,9.94402239104427e-310,9.9420231907244e-310,9.94002399040457e-310,9.9380247900847e-310,9.93602558976487e-310,9.934026389445e-310,9.9320271891252e-310,9.93002798880533e-310,9.9280287884855e-310,9.92602958816563e-310,9.9240303878458e-310,9.92203118752593e-310,9.9200319872061e-310,9.91803278688624e-310,9.9160335865664e-310,9.91403438624654e-310,9.9120351859267e-310,9.91003598560684e-310,9.908036785287e-310,9.90603758496715e-310,9.9040383846473e-310,9.90203918432745e-310,9.9000399840076e-310,9.89804078368775e-310,9.8960415833679e-310,9.89404238304806e-310,9.8920431827282e-310,9.89004398240836e-310,9.8880447820885e-310,9.88604558176866e-310,9.8840463814488e-310,9.88204718112897e-310,9.8800479808091e-310,9.87804878048927e-310,9.8760495801694e-310,9.87405037984957e-310,9.87205117952973e-310,9.8700519792099e-310,9.86805277889003e-310,9.8660535785702e-310,9.86405437825033e-310,9.8620551779305e-310,9.86005597761064e-310,9.8580567772908e-310,9.85605757697094e-310,9.8540583766511e-310,9.85205917633124e-310,9.8500599760114e-310,9.84806077569155e-310,9.8460615753717e-310,9.84406237505185e-310,9.842063174732e-310,9.84006397441215e-310,9.8380647740923e-310,9.83606557377246e-310,9.8340663734526e-310,9.83206717313276e-310,9.8300679728129e-310,9.82806877249306e-310,9.8260695721732e-310,9.82407037185336e-310,9.8220711715335e-310,9.82007197121367e-310,9.8180727708938e-310,9.81607357057397e-310,9.8140743702541e-310,9.81207516993427e-310,9.81007596961443e-310,9.8080767692946e-310,9.80607756897473e-310,9.8040783686549e-310,9.80207916833503e-310,9.8000799680152e-310,9.79808076769534e-310,9.7960815673755e-310,9.79408236705564e-310,9.7920831667358e-310,9.79008396641594e-310,9.7880847660961e-310,9.78608556577625e-310,9.7840863654564e-310,9.78208716513655e-310,9.7800879648167e-310,9.77808876449685e-310,9.776089564177e-310,9.77409036385716e-310,9.7720911635373e-310,9.77009196321746e-310,9.7680927628976e-310,9.76609356257776e-310,9.7640943622579e-310,9.76209516193807e-310,9.7600959616182e-310,9.75809676129837e-310,9.7560975609785e-310,9.75409836065867e-310,9.75209916033882e-310,9.750099960019e-310,9.74810075969913e-310,9.7461015593793e-310,9.74410235905943e-310,9.7421031587396e-310,9.74010395841973e-310,9.7381047580999e-310,9.73610555778004e-310,9.7341063574602e-310,9.73210715714034e-310,9.7301079568205e-310,9.72810875650064e-310,9.7261095561808e-310,9.72411035586095e-310,9.7221111555411e-310,9.72011195522125e-310,9.7181127549014e-310,9.71611355458155e-310,9.7141143542617e-310,9.71211515394186e-310,9.710115953622e-310,9.70811675330216e-310,9.7061175529823e-310,9.70411835266246e-310,9.7021191523426e-310,9.70011995202277e-310,9.6981207517029e-310,9.69612155138307e-310,9.6941223510632e-310,9.69212315074337e-310,9.69012395042353e-310,9.6881247501037e-310,9.68612554978383e-310,9.684126349464e-310,9.68212714914413e-310,9.6801279488243e-310,9.67812874850444e-310,9.6761295481846e-310,9.67413034786474e-310,9.6721311475449e-310,9.67013194722504e-310,9.6681327469052e-310,9.66613354658535e-310,9.6641343462655e-310,9.66213514594565e-310,9.6601359456258e-310,9.65813674530595e-310,9.6561375449861e-310,9.65413834466626e-310,9.6521391443464e-310,9.65013994402656e-310,9.6481407437067e-310,9.64614154338686e-310,9.644142343067e-310,9.64214314274717e-310,9.6401439424273e-310,9.63814474210747e-310,9.6361455417876e-310,9.63414634146777e-310,9.6321471411479e-310,9.6301479408281e-310,9.62814874050823e-310,9.6261495401884e-310,9.62415033986853e-310,9.6221511395487e-310,9.62015193922883e-310,9.618152738909e-310,9.61615353858914e-310,9.6141543382693e-310,9.61215513794944e-310,9.6101559376296e-310,9.60815673730974e-310,9.6061575369899e-310,9.60415833667005e-310,9.6021591363502e-310,9.60015993603035e-310,9.5981607357105e-310,9.59616153539065e-310,9.5941623350708e-310,9.59216313475096e-310,9.5901639344311e-310,9.58816473411126e-310,9.5861655337914e-310,9.58416633347156e-310,9.5821671331517e-310,9.58016793283187e-310,9.578168732512e-310,9.57616953219217e-310,9.5741703318723e-310,9.57217113155247e-310,9.57017193123263e-310,9.5681727309128e-310,9.56617353059293e-310,9.5641743302731e-310,9.56217512995323e-310,9.5601759296334e-310,9.55817672931354e-310,9.5561775289937e-310,9.55417832867384e-310,9.552179128354e-310,9.55017992803414e-310,9.5481807277143e-310,9.54618152739445e-310,9.5441823270746e-310,9.54218312675475e-310,9.5401839264349e-310,9.53818472611505e-310,9.5361855257952e-310,9.53418632547536e-310,9.5321871251555e-310,9.53018792483566e-310,9.5281887245158e-310,9.52618952419596e-310,9.5241903238761e-310,9.52219112355627e-310,9.5201919232364e-310,9.51819272291657e-310,9.5161935225967e-310,9.51419432227687e-310,9.512195121957e-310,9.5101959216372e-310,9.50819672131733e-310,9.5061975209975e-310,9.50419832067763e-310,9.5021991203578e-310,9.50019992003793e-310,9.4982007197181e-310,9.49620151939824e-310,9.4942023190784e-310,9.49220311875854e-310,9.4902039184387e-310,9.48820471811884e-310,9.486205517799e-310,9.48420631747915e-310,9.4822071171593e-310,9.48020791683945e-310,9.4782087165196e-310,9.47620951619975e-310,9.4742103158799e-310,9.47221111556006e-310,9.4702119152402e-310,9.46821271492036e-310,9.4662135146005e-310,9.46421431428066e-310,9.4622151139608e-310,9.46021591364097e-310,9.4582167133211e-310,9.45621751300127e-310,9.4542183126814e-310,9.45221911236157e-310,9.45021991204173e-310,9.4482207117219e-310,9.44622151140203e-310,9.4442223110822e-310,9.44222311076233e-310,9.4402239104425e-310,9.43822471012264e-310,9.4362255098028e-310,9.43422630948294e-310,9.4322271091631e-310,9.43022790884324e-310,9.4282287085234e-310,9.42622950820355e-310,9.4242303078837e-310,9.42223110756385e-310,9.420231907244e-310,9.41823270692415e-310,9.4162335066043e-310,9.41423430628446e-310,9.4122351059646e-310,9.41023590564476e-310,9.4082367053249e-310,9.40623750500506e-310,9.4042383046852e-310,9.40223910436537e-310,9.4002399040455e-310,9.39824070372567e-310,9.3962415034058e-310,9.39424230308597e-310,9.3922431027661e-310,9.3902439024463e-310,9.38824470212643e-310,9.3862455018066e-310,9.38424630148673e-310,9.3822471011669e-310,9.38024790084703e-310,9.3782487005272e-310,9.37624950020734e-310,9.3742502998875e-310,9.37225109956764e-310,9.3702518992478e-310,9.36825269892794e-310,9.3662534986081e-310,9.36425429828825e-310,9.3622550979684e-310,9.36025589764855e-310,9.3582566973287e-310,9.35625749700885e-310,9.354258296689e-310,9.35225909636916e-310,9.3502598960493e-310,9.34826069572946e-310,9.3462614954096e-310,9.34426229508976e-310,9.3422630947699e-310,9.34026389445007e-310,9.3382646941302e-310,9.33626549381037e-310,9.3342662934905e-310,9.33226709317067e-310,9.33026789285083e-310,9.328268692531e-310,9.32626949221113e-310,9.3242702918913e-310,9.32227109157143e-310,9.3202718912516e-310,9.31827269093174e-310,9.3162734906119e-310,9.31427429029204e-310,9.3122750899722e-310,9.31027588965234e-310,9.3082766893325e-310,9.30627748901265e-310,9.3042782886928e-310,9.30227908837295e-310,9.3002798880531e-310,9.29828068773325e-310,9.2962814874134e-310,9.29428228709356e-310,9.2922830867737e-310,9.29028388645386e-310,9.288284686134e-310,9.28628548581416e-310,9.2842862854943e-310,9.28228708517447e-310,9.2802878848546e-310,9.27828868453477e-310,9.2762894842149e-310,9.27429028389507e-310,9.2722910835752e-310,9.27029188325537e-310,9.26829268293553e-310,9.2662934826157e-310,9.26429428229583e-310,9.262295081976e-310,9.26029588165613e-310,9.2582966813363e-310,9.25629748101644e-310,9.2542982806966e-310,9.25229908037674e-310,9.2502998800569e-310,9.24830067973704e-310,9.2463014794172e-310,9.24430227909735e-310,9.2423030787775e-310,9.24030387845765e-310,9.2383046781378e-310,9.23630547781795e-310,9.2343062774981e-310,9.23230707717826e-310,9.2303078768584e-310,9.22830867653856e-310,9.2263094762187e-310,9.22431027589886e-310,9.222311075579e-310,9.22031187525917e-310,9.2183126749393e-310,9.21631347461947e-310,9.2143142742996e-310,9.21231507397977e-310,9.21031587365992e-310,9.2083166733401e-310,9.20631747302023e-310,9.2043182727004e-310,9.20231907238053e-310,9.2003198720607e-310,9.19832067174083e-310,9.196321471421e-310,9.19432227110114e-310,9.1923230707813e-310,9.19032387046144e-310,9.1883246701416e-310,9.18632546982174e-310,9.1843262695019e-310,9.18232706918205e-310,9.1803278688622e-310,9.17832866854235e-310,9.1763294682225e-310,9.17433026790265e-310,9.1723310675828e-310,9.17033186726296e-310,9.1683326669431e-310,9.16633346662326e-310,9.1643342663034e-310,9.16233506598356e-310,9.1603358656637e-310,9.15833666534387e-310,9.156337465024e-310,9.15433826470417e-310,9.1523390643843e-310,9.15033986406447e-310,9.14834066374463e-310,9.1463414634248e-310,9.14434226310493e-310,9.1423430627851e-310,9.14034386246523e-310,9.1383446621454e-310,9.13634546182554e-310,9.1343462615057e-310,9.13234706118584e-310,9.130347860866e-310,9.12834866054614e-310,9.1263494602263e-310,9.12435025990645e-310,9.1223510595866e-310,9.12035185926675e-310,9.1183526589469e-310,9.11635345862705e-310,9.1143542583072e-310,9.11235505798736e-310,9.1103558576675e-310,9.10835665734766e-310,9.1063574570278e-310,9.10435825670796e-310,9.1023590563881e-310,9.10035985606827e-310,9.0983606557484e-310,9.09636145542857e-310,9.0943622551087e-310,9.09236305478887e-310,9.090363854469e-310,9.0883646541492e-310,9.08636545382933e-310,9.0843662535095e-310,9.08236705318963e-310,9.0803678528698e-310,9.07836865254993e-310,9.0763694522301e-310,9.07437025191024e-310,9.0723710515904e-310,9.07037185127054e-310,9.0683726509507e-310,9.06637345063084e-310,9.064374250311e-310,9.06237504999115e-310,9.0603758496713e-310,9.05837664935145e-310,9.0563774490316e-310,9.05437824871175e-310,9.0523790483919e-310,9.05037984807206e-310,9.0483806477522e-310,9.04638144743236e-310,9.0443822471125e-310,9.04238304679266e-310,9.0403838464728e-310,9.03838464615297e-310,9.0363854458331e-310,9.03438624551327e-310,9.0323870451934e-310,9.03038784487357e-310,9.02838864455373e-310,9.0263894442339e-310,9.02439024391403e-310,9.0223910435942e-310,9.02039184327433e-310,9.0183926429545e-310,9.01639344263464e-310,9.0143942423148e-310,9.01239504199494e-310,9.0103958416751e-310,9.00839664135524e-310,9.0063974410354e-310,9.00439824071555e-310,9.0023990403957e-310,9.00039984007585e-310,8.998400639756e-310,8.99640143943615e-310,8.9944022391163e-310,8.99240303879646e-310,8.9904038384766e-310,8.98840463815676e-310,8.9864054378369e-310,8.98440623751706e-310,8.9824070371972e-310,8.98040783687737e-310,8.9784086365575e-310,8.97640943623767e-310,8.9744102359178e-310,8.97241103559797e-310,8.9704118352781e-310,8.9684126349583e-310,8.96641343463843e-310,8.9644142343186e-310,8.96241503399873e-310,8.9604158336789e-310,8.95841663335903e-310,8.9564174330392e-310,8.95441823271934e-310,8.9524190323995e-310,8.95041983207964e-310,8.9484206317598e-310,8.94642143143994e-310,8.9444222311201e-310,8.94242303080025e-310,8.9404238304804e-310,8.93842463016055e-310,8.9364254298407e-310,8.93442622952085e-310,8.932427029201e-310,8.93042782888116e-310,8.9284286285613e-310,8.92642942824146e-310,8.9244302279216e-310,8.92243102760176e-310,8.9204318272819e-310,8.91843262696207e-310,8.9164334266422e-310,8.91443422632237e-310,8.9124350260025e-310,8.91043582568267e-310,8.90843662536283e-310,8.906437425043e-310,8.90443822472313e-310,8.9024390244033e-310,8.90043982408343e-310,8.8984406237636e-310,8.89644142344374e-310,8.8944422231239e-310,8.89244302280404e-310,8.8904438224842e-310,8.88844462216434e-310,8.8864454218445e-310,8.88444622152465e-310,8.8824470212048e-310,8.88044782088495e-310,8.8784486205651e-310,8.87644942024525e-310,8.8744502199254e-310,8.87245101960556e-310,8.8704518192857e-310,8.86845261896586e-310,8.866453418646e-310,8.86445421832616e-310,8.8624550180063e-310,8.86045581768647e-310,8.8584566173666e-310,8.85645741704677e-310,8.8544582167269e-310,8.85245901640707e-310,8.8504598160872e-310,8.8484606157674e-310,8.84646141544753e-310,8.8444622151277e-310,8.84246301480783e-310,8.840463814488e-310,8.83846461416813e-310,8.8364654138483e-310,8.83446621352844e-310,8.8324670132086e-310,8.83046781288874e-310,8.8284686125689e-310,8.82646941224904e-310,8.8244702119292e-310,8.82247101160935e-310,8.8204718112895e-310,8.81847261096965e-310,8.8164734106498e-310,8.81447421032995e-310,8.8124750100101e-310,8.81047580969026e-310,8.8084766093704e-310,8.80647740905056e-310,8.8044782087307e-310,8.80247900841086e-310,8.800479808091e-310,8.79848060777117e-310,8.7964814074513e-310,8.79448220713147e-310,8.7924830068116e-310,8.79048380649177e-310,8.78848460617193e-310,8.7864854058521e-310,8.78448620553223e-310,8.7824870052124e-310,8.78048780489253e-310,8.7784886045727e-310,8.77648940425284e-310,8.774490203933e-310,8.77249100361314e-310,8.7704918032933e-310,8.76849260297344e-310,8.7664934026536e-310,8.76449420233375e-310,8.7624950020139e-310,8.76049580169405e-310,8.7584966013742e-310,8.75649740105435e-310,8.7544982007345e-310,8.75249900041466e-310,8.7504998000948e-310,8.74850059977496e-310,8.7465013994551e-310,8.74450219913526e-310,8.7425029988154e-310,8.74050379849557e-310,8.7385045981757e-310,8.73650539785587e-310,8.734506197536e-310,8.73250699721617e-310,8.7305077968963e-310,8.72850859657647e-310,8.72650939625663e-310,8.7245101959368e-310,8.72251099561693e-310,8.7205117952971e-310,8.71851259497723e-310,8.7165133946574e-310,8.71451419433754e-310,8.7125149940177e-310,8.71051579369784e-310,8.708516593378e-310,8.70651739305814e-310,8.7045181927383e-310,8.70251899241845e-310,8.7005197920986e-310,8.69852059177875e-310,8.6965213914589e-310,8.69452219113905e-310,8.6925229908192e-310,8.69052379049936e-310,8.6885245901795e-310,8.68652538985966e-310,8.6845261895398e-310,8.68252698921996e-310,8.6805277889001e-310,8.67852858858027e-310,8.6765293882604e-310,8.67453018794057e-310,8.6725309876207e-310,8.67053178730087e-310,8.66853258698102e-310,8.6665333866612e-310,8.66453418634133e-310,8.6625349860215e-310,8.66053578570163e-310,8.6585365853818e-310,8.65653738506193e-310,8.6545381847421e-310,8.65253898442224e-310,8.6505397841024e-310,8.64854058378254e-310,8.6465413834627e-310,8.64454218314284e-310,8.642542982823e-310,8.64054378250315e-310,8.6385445821833e-310,8.63654538186345e-310,8.6345461815436e-310,8.63254698122375e-310,8.6305477809039e-310,8.62854858058406e-310,8.6265493802642e-310,8.62455017994436e-310,8.6225509796245e-310,8.62055177930466e-310,8.6185525789848e-310,8.61655337866497e-310,8.6145541783451e-310,8.61255497802527e-310,8.6105557777054e-310,8.60855657738557e-310,8.60655737706573e-310,8.6045581767459e-310,8.60255897642603e-310,8.6005597761062e-310,8.59856057578633e-310,8.5965613754665e-310,8.59456217514664e-310,8.5925629748268e-310,8.59056377450694e-310,8.5885645741871e-310,8.58656537386724e-310,8.5845661735474e-310,8.58256697322755e-310,8.5805677729077e-310,8.57856857258785e-310,8.576569372268e-310,8.57457017194815e-310,8.5725709716283e-310,8.57057177130846e-310,8.5685725709886e-310,8.56657337066876e-310,8.5645741703489e-310,8.56257497002906e-310,8.5605757697092e-310,8.55857656938937e-310,8.5565773690695e-310,8.55457816874967e-310,8.5525789684298e-310,8.55057976810997e-310,8.5485805677901e-310,8.5465813674703e-310,8.54458216715043e-310,8.5425829668306e-310,8.54058376651073e-310,8.5385845661909e-310,8.53658536587103e-310,8.5345861655512e-310,8.53258696523134e-310,8.5305877649115e-310,8.52858856459164e-310,8.5265893642718e-310,8.52459016395194e-310,8.5225909636321e-310,8.52059176331225e-310,8.5185925629924e-310,8.51659336267255e-310,8.5145941623527e-310,8.51259496203285e-310,8.510595761713e-310,8.50859656139316e-310,8.5065973610733e-310,8.50459816075346e-310,8.5025989604336e-310,8.50059976011376e-310,8.4986005597939e-310,8.49660135947407e-310,8.4946021591542e-310,8.49260295883437e-310,8.4906037585145e-310,8.48860455819467e-310,8.48660535787483e-310,8.484606157555e-310,8.48260695723513e-310,8.4806077569153e-310,8.47860855659543e-310,8.4766093562756e-310,8.47461015595574e-310,8.4726109556359e-310,8.47061175531604e-310,8.4686125549962e-310,8.46661335467634e-310,8.4646141543565e-310,8.46261495403665e-310,8.4606157537168e-310,8.45861655339695e-310,8.4566173530771e-310,8.45461815275725e-310,8.4526189524374e-310,8.45061975211756e-310,8.4486205517977e-310,8.44662135147786e-310,8.444622151158e-310,8.44262295083816e-310,8.4406237505183e-310,8.43862455019847e-310,8.4366253498786e-310,8.43462614955877e-310,8.4326269492389e-310,8.43062774891907e-310,8.4286285485992e-310,8.4266293482794e-310,8.42463014795953e-310,8.4226309476397e-310,8.42063174731983e-310,8.418632547e-310,8.41663334668013e-310,8.4146341463603e-310,8.41263494604044e-310,8.4106357457206e-310,8.40863654540074e-310,8.4066373450809e-310,8.40463814476104e-310,8.4026389444412e-310,8.40063974412135e-310,8.3986405438015e-310,8.39664134348165e-310,8.3946421431618e-310,8.39264294284195e-310,8.3906437425221e-310,8.38864454220226e-310,8.3866453418824e-310,8.38464614156256e-310,8.3826469412427e-310,8.38064774092286e-310,8.378648540603e-310,8.37664934028317e-310,8.3746501399633e-310,8.37265093964347e-310,8.3706517393236e-310,8.36865253900377e-310,8.36665333868393e-310,8.3646541383641e-310,8.36265493804423e-310,8.3606557377244e-310,8.35865653740453e-310,8.3566573370847e-310,8.35465813676484e-310,8.352658936445e-310,8.35065973612514e-310,8.3486605358053e-310,8.34666133548544e-310,8.3446621351656e-310,8.34266293484575e-310,8.3406637345259e-310,8.33866453420605e-310,8.3366653338862e-310,8.33466613356635e-310,8.3326669332465e-310,8.33066773292666e-310,8.3286685326068e-310,8.32666933228696e-310,8.3246701319671e-310,8.32267093164726e-310,8.3206717313274e-310,8.31867253100757e-310,8.3166733306877e-310,8.31467413036787e-310,8.312674930048e-310,8.31067572972817e-310,8.3086765294083e-310,8.3066773290885e-310,8.30467812876863e-310,8.3026789284488e-310,8.30067972812893e-310,8.2986805278091e-310,8.29668132748923e-310,8.2946821271694e-310,8.29268292684954e-310,8.2906837265297e-310,8.28868452620984e-310,8.28668532589e-310,8.28468612557014e-310,8.2826869252503e-310,8.28068772493045e-310,8.2786885246106e-310,8.27668932429075e-310,8.2746901239709e-310,8.27269092365105e-310,8.2706917233312e-310,8.26869252301136e-310,8.2666933226915e-310,8.26469412237166e-310,8.2626949220518e-310,8.26069572173196e-310,8.2586965214121e-310,8.25669732109227e-310,8.2546981207724e-310,8.25269892045257e-310,8.2506997201327e-310,8.24870051981287e-310,8.24670131949303e-310,8.2447021191732e-310,8.24270291885333e-310,8.2407037185335e-310,8.23870451821363e-310,8.2367053178938e-310,8.23470611757394e-310,8.2327069172541e-310,8.23070771693424e-310,8.2287085166144e-310,8.22670931629454e-310,8.2247101159747e-310,8.22271091565485e-310,8.220711715335e-310,8.21871251501515e-310,8.2167133146953e-310,8.21471411437545e-310,8.2127149140556e-310,8.21071571373576e-310,8.2087165134159e-310,8.20671731309606e-310,8.2047181127762e-310,8.20271891245636e-310,8.2007197121365e-310,8.19872051181667e-310,8.1967213114968e-310,8.19472211117697e-310,8.1927229108571e-310,8.19072371053727e-310,8.1887245102174e-310,8.18672530989758e-310,8.18472610957773e-310,8.1827269092579e-310,8.18072770893803e-310,8.1787285086182e-310,8.17672930829833e-310,8.1747301079785e-310,8.17273090765864e-310,8.1707317073388e-310,8.16873250701894e-310,8.1667333066991e-310,8.16473410637924e-310,8.1627349060594e-310,8.16073570573955e-310,8.1587365054197e-310,8.15673730509985e-310,8.15473810478e-310,8.15273890446015e-310,8.1507397041403e-310,8.14874050382046e-310,8.1467413035006e-310,8.14474210318076e-310,8.1427429028609e-310,8.14074370254106e-310,8.1387445022212e-310,8.13674530190137e-310,8.1347461015815e-310,8.13274690126167e-310,8.1307477009418e-310,8.12874850062197e-310,8.12674930030212e-310,8.1247500999823e-310,8.12275089966243e-310,8.1207516993426e-310,8.11875249902273e-310,8.1167532987029e-310,8.11475409838303e-310,8.1127548980632e-310,8.11075569774334e-310,8.1087564974235e-310,8.10675729710364e-310,8.1047580967838e-310,8.10275889646394e-310,8.1007596961441e-310,8.09876049582425e-310,8.0967612955044e-310,8.09476209518455e-310,8.0927628948647e-310,8.09076369454485e-310,8.088764494225e-310,8.08676529390516e-310,8.0847660935853e-310,8.08276689326546e-310,8.0807676929456e-310,8.07876849262576e-310,8.0767692923059e-310,8.07477009198607e-310,8.0727708916662e-310,8.07077169134637e-310,8.0687724910265e-310,8.06677329070667e-310,8.06477409038683e-310,8.062774890067e-310,8.06077568974713e-310,8.0587764894273e-310,8.05677728910743e-310,8.0547780887876e-310,8.05277888846774e-310,8.0507796881479e-310,8.04878048782804e-310,8.0467812875082e-310,8.04478208718834e-310,8.0427828868685e-310,8.04078368654865e-310,8.0387844862288e-310,8.03678528590895e-310,8.0347860855891e-310,8.03278688526925e-310,8.0307876849494e-310,8.02878848462956e-310,8.0267892843097e-310,8.02479008398986e-310,8.02279088367e-310,8.02079168335016e-310,8.0187924830303e-310,8.01679328271047e-310,8.0147940823906e-310,8.01279488207077e-310,8.0107956817509e-310,8.00879648143107e-310,8.0067972811112e-310,8.0047980807914e-310,8.00279888047153e-310,8.0007996801517e-310,7.99880047983183e-310,7.996801279512e-310,7.99480207919213e-310,7.9928028788723e-310,7.99080367855244e-310,7.9888044782326e-310,7.98680527791274e-310,7.9848060775929e-310,7.98280687727304e-310,7.9808076769532e-310,7.97880847663335e-310,7.9768092763135e-310,7.97481007599365e-310,7.9728108756738e-310,7.97081167535395e-310,7.9688124750341e-310,7.96681327471426e-310,7.9648140743944e-310,7.96281487407456e-310,7.9608156737547e-310,7.95881647343486e-310,7.956817273115e-310,7.95481807279517e-310,7.9528188724753e-310,7.95081967215547e-310,7.9488204718356e-310,7.94682127151577e-310,7.94482207119593e-310,7.9428228708761e-310,7.94082367055623e-310,7.9388244702364e-310,7.93682526991653e-310,7.9348260695967e-310,7.93282686927684e-310,7.930827668957e-310,7.92882846863714e-310,7.9268292683173e-310,7.92483006799744e-310,7.9228308676776e-310,7.92083166735775e-310,7.9188324670379e-310,7.91683326671805e-310,7.9148340663982e-310,7.91283486607835e-310,7.9108356657585e-310,7.90883646543866e-310,7.9068372651188e-310,7.90483806479896e-310,7.9028388644791e-310,7.90083966415926e-310,7.8988404638394e-310,7.89684126351957e-310,7.8948420631997e-310,7.89284286287987e-310,7.89084366256e-310,7.88884446224017e-310,7.8868452619203e-310,7.8848460616005e-310,7.88284686128063e-310,7.8808476609608e-310,7.87884846064093e-310,7.8768492603211e-310,7.87485006000123e-310,7.8728508596814e-310,7.87085165936154e-310,7.8688524590417e-310,7.86685325872184e-310,7.864854058402e-310,7.86285485808214e-310,7.8608556577623e-310,7.85885645744245e-310,7.8568572571226e-310,7.85485805680275e-310,7.8528588564829e-310,7.85085965616305e-310,7.8488604558432e-310,7.84686125552336e-310,7.8448620552035e-310,7.84286285488366e-310,7.8408636545638e-310,7.83886445424396e-310,7.8368652539241e-310,7.83486605360427e-310,7.8328668532844e-310,7.83086765296457e-310,7.8288684526447e-310,7.82686925232487e-310,7.82487005200503e-310,7.8228708516852e-310,7.82087165136533e-310,7.8188724510455e-310,7.81687325072563e-310,7.8148740504058e-310,7.81287485008594e-310,7.8108756497661e-310,7.80887644944624e-310,7.8068772491264e-310,7.80487804880654e-310,7.8028788484867e-310,7.80087964816685e-310,7.798880447847e-310,7.79688124752715e-310,7.7948820472073e-310,7.79288284688745e-310,7.7908836465676e-310,7.78888444624776e-310,7.7868852459279e-310,7.78488604560806e-310,7.7828868452882e-310,7.78088764496836e-310,7.7788884446485e-310,7.77688924432867e-310,7.7748900440088e-310,7.77289084368897e-310,7.7708916433691e-310,7.76889244304927e-310,7.7668932427294e-310,7.7648940424096e-310,7.76289484208973e-310,7.7608956417699e-310,7.75889644145003e-310,7.7568972411302e-310,7.75489804081033e-310,7.7528988404905e-310,7.75089964017064e-310,7.7489004398508e-310,7.74690123953094e-310,7.7449020392111e-310,7.74290283889124e-310,7.7409036385714e-310,7.73890443825155e-310,7.7369052379317e-310,7.73490603761185e-310,7.732906837292e-310,7.73090763697215e-310,7.7289084366523e-310,7.72690923633246e-310,7.7249100360126e-310,7.72291083569276e-310,7.7209116353729e-310,7.71891243505306e-310,7.7169132347332e-310,7.71491403441337e-310,7.7129148340935e-310,7.71091563377367e-310,7.7089164334538e-310,7.70691723313397e-310,7.70491803281413e-310,7.7029188324943e-310,7.70091963217443e-310,7.6989204318546e-310,7.69692123153473e-310,7.6949220312149e-310,7.69292283089504e-310,7.6909236305752e-310,7.68892443025534e-310,7.6869252299355e-310,7.68492602961564e-310,7.6829268292958e-310,7.68092762897595e-310,7.6789284286561e-310,7.67692922833625e-310,7.6749300280164e-310,7.67293082769655e-310,7.6709316273767e-310,7.66893242705686e-310,7.666933226737e-310,7.66493402641716e-310,7.6629348260973e-310,7.66093562577746e-310,7.6589364254576e-310,7.65693722513777e-310,7.6549380248179e-310,7.65293882449807e-310,7.6509396241782e-310,7.64894042385837e-310,7.6469412235385e-310,7.64494202321868e-310,7.64294282289883e-310,7.640943622579e-310,7.63894442225913e-310,7.6369452219393e-310,7.63494602161943e-310,7.6329468212996e-310,7.63094762097974e-310,7.6289484206599e-310,7.62694922034004e-310,7.6249500200202e-310,7.62295081970034e-310,7.6209516193805e-310,7.61895241906065e-310,7.6169532187408e-310,7.61495401842095e-310,7.6129548181011e-310,7.61095561778125e-310,7.6089564174614e-310,7.60695721714156e-310,7.6049580168217e-310,7.60295881650186e-310,7.600959616182e-310,7.59896041586216e-310,7.5969612155423e-310,7.59496201522247e-310,7.5929628149026e-310,7.59096361458277e-310,7.5889644142629e-310,7.58696521394307e-310,7.58496601362322e-310,7.5829668133034e-310,7.58096761298353e-310,7.5789684126637e-310,7.57696921234383e-310,7.574970012024e-310,7.57297081170413e-310,7.5709716113843e-310,7.56897241106444e-310,7.5669732107446e-310,7.56497401042474e-310,7.5629748101049e-310,7.56097560978504e-310,7.5589764094652e-310,7.55697720914535e-310,7.5549780088255e-310,7.55297880850565e-310,7.5509796081858e-310,7.54898040786595e-310,7.5469812075461e-310,7.54498200722626e-310,7.5429828069064e-310,7.54098360658656e-310,7.5389844062667e-310,7.53698520594686e-310,7.534986005627e-310,7.53298680530717e-310,7.5309876049873e-310,7.52898840466747e-310,7.5269892043476e-310,7.52499000402777e-310,7.52299080370793e-310,7.5209916033881e-310,7.51899240306823e-310,7.5169932027484e-310,7.51499400242853e-310,7.5129948021087e-310,7.51099560178884e-310,7.508996401469e-310,7.50699720114914e-310,7.5049980008293e-310,7.50299880050944e-310,7.5009996001896e-310,7.49900039986975e-310,7.4970011995499e-310,7.49500199923005e-310,7.4930027989102e-310,7.49100359859035e-310,7.4890043982705e-310,7.48700519795066e-310,7.4850059976308e-310,7.48300679731096e-310,7.4810075969911e-310,7.47900839667126e-310,7.4770091963514e-310,7.47500999603157e-310,7.4730107957117e-310,7.47101159539187e-310,7.469012395072e-310,7.46701319475217e-310,7.4650139944323e-310,7.4630147941125e-310,7.46101559379263e-310,7.4590163934728e-310,7.45701719315293e-310,7.4550179928331e-310,7.45301879251323e-310,7.4510195921934e-310,7.44902039187354e-310,7.4470211915537e-310,7.44502199123384e-310,7.443022790914e-310,7.44102359059414e-310,7.4390243902743e-310,7.43702518995445e-310,7.4350259896346e-310,7.43302678931475e-310,7.4310275889949e-310,7.42902838867505e-310,7.4270291883552e-310,7.42502998803536e-310,7.4230307877155e-310,7.42103158739566e-310,7.4190323870758e-310,7.41703318675596e-310,7.4150339864361e-310,7.41303478611627e-310,7.4110355857964e-310,7.40903638547657e-310,7.4070371851567e-310,7.40503798483687e-310,7.40303878451703e-310,7.4010395841972e-310,7.39904038387733e-310,7.3970411835575e-310,7.39504198323763e-310,7.3930427829178e-310,7.39104358259794e-310,7.3890443822781e-310,7.38704518195824e-310,7.3850459816384e-310,7.38304678131854e-310,7.3810475809987e-310,7.37904838067885e-310,7.377049180359e-310,7.37504998003915e-310,7.3730507797193e-310,7.37105157939945e-310,7.3690523790796e-310,7.36705317875976e-310,7.3650539784399e-310,7.36305477812006e-310,7.3610555778002e-310,7.35905637748036e-310,7.3570571771605e-310,7.35505797684067e-310,7.3530587765208e-310,7.35105957620097e-310,7.3490603758811e-310,7.34706117556127e-310,7.3450619752414e-310,7.3430627749216e-310,7.34106357460173e-310,7.3390643742819e-310,7.33706517396203e-310,7.3350659736422e-310,7.33306677332233e-310,7.3310675730025e-310,7.32906837268264e-310,7.3270691723628e-310,7.32506997204294e-310,7.3230707717231e-310,7.32107157140324e-310,7.3190723710834e-310,7.31707317076355e-310,7.3150739704437e-310,7.31307477012385e-310,7.311075569804e-310,7.30907636948415e-310,7.3070771691643e-310,7.30507796884446e-310,7.3030787685246e-310,7.30107956820476e-310,7.2990803678849e-310,7.29708116756506e-310,7.2950819672452e-310,7.29308276692537e-310,7.2910835666055e-310,7.28908436628567e-310,7.2870851659658e-310,7.28508596564597e-310,7.28308676532613e-310,7.2810875650063e-310,7.27908836468643e-310,7.2770891643666e-310,7.27508996404673e-310,7.2730907637269e-310,7.27109156340704e-310,7.2690923630872e-310,7.26709316276734e-310,7.2650939624475e-310,7.26309476212764e-310,7.2610955618078e-310,7.25909636148795e-310,7.2570971611681e-310,7.25509796084825e-310,7.2530987605284e-310,7.25109956020855e-310,7.2491003598887e-310,7.24710115956886e-310,7.245101959249e-310,7.24310275892916e-310,7.2411035586093e-310,7.23910435828946e-310,7.2371051579696e-310,7.23510595764977e-310,7.2331067573299e-310,7.23110755701007e-310,7.2291083566902e-310,7.22710915637037e-310,7.2251099560505e-310,7.2231107557307e-310,7.22111155541083e-310,7.219112355091e-310,7.21711315477113e-310,7.2151139544513e-310,7.21311475413143e-310,7.2111155538116e-310,7.20911635349174e-310,7.2071171531719e-310,7.20511795285204e-310,7.2031187525322e-310,7.20111955221234e-310,7.1991203518925e-310,7.19712115157265e-310,7.1951219512528e-310,7.19312275093295e-310,7.1911235506131e-310,7.18912435029325e-310,7.1871251499734e-310,7.18512594965356e-310,7.1831267493337e-310,7.18112754901386e-310,7.179128348694e-310,7.17712914837416e-310,7.1751299480543e-310,7.17313074773447e-310,7.1711315474146e-310,7.16913234709477e-310,7.1671331467749e-310,7.16513394645507e-310,7.16313474613523e-310,7.1611355458154e-310,7.15913634549553e-310,7.1571371451757e-310,7.15513794485583e-310,7.153138744536e-310,7.15113954421614e-310,7.1491403438963e-310,7.14714114357644e-310,7.1451419432566e-310,7.14314274293674e-310,7.1411435426169e-310,7.13914434229705e-310,7.1371451419772e-310,7.13514594165735e-310,7.1331467413375e-310,7.13114754101765e-310,7.1291483406978e-310,7.12714914037796e-310,7.1251499400581e-310,7.12315073973826e-310,7.1211515394184e-310,7.11915233909856e-310,7.1171531387787e-310,7.11515393845887e-310,7.113154738139e-310,7.11115553781917e-310,7.1091563374993e-310,7.10715713717947e-310,7.1051579368596e-310,7.10315873653978e-310,7.10115953621993e-310,7.0991603359001e-310,7.09716113558023e-310,7.0951619352604e-310,7.09316273494053e-310,7.0911635346207e-310,7.08916433430084e-310,7.087165133981e-310,7.08516593366114e-310,7.0831667333413e-310,7.08116753302144e-310,7.0791683327016e-310,7.07716913238175e-310,7.0751699320619e-310,7.07317073174205e-310,7.0711715314222e-310,7.06917233110235e-310,7.0671731307825e-310,7.06517393046266e-310,7.0631747301428e-310,7.06117552982296e-310,7.0591763295031e-310,7.05717712918326e-310,7.0551779288634e-310,7.05317872854357e-310,7.0511795282237e-310,7.04918032790387e-310,7.047181127584e-310,7.04518192726417e-310,7.04318272694432e-310,7.0411835266245e-310,7.03918432630463e-310,7.0371851259848e-310,7.03518592566493e-310,7.0331867253451e-310,7.03118752502523e-310,7.0291883247054e-310,7.02718912438554e-310,7.0251899240657e-310,7.02319072374584e-310,7.021191523426e-310,7.01919232310614e-310,7.0171931227863e-310,7.01519392246645e-310,7.0131947221466e-310,7.01119552182675e-310,7.0091963215069e-310,7.00719712118705e-310,7.0051979208672e-310,7.00319872054736e-310,7.0011995202275e-310,6.99920031990766e-310,6.9972011195878e-310,6.99520191926796e-310,6.9932027189481e-310,6.99120351862827e-310,6.9892043183084e-310,6.98720511798857e-310,6.9852059176687e-310,6.98320671734887e-310,6.98120751702903e-310,6.9792083167092e-310,6.97720911638933e-310,6.9752099160695e-310,6.97321071574963e-310,6.9712115154298e-310,6.96921231510994e-310,6.9672131147901e-310,6.96521391447024e-310,6.9632147141504e-310,6.96121551383054e-310,6.9592163135107e-310,6.95721711319085e-310,6.955217912871e-310,6.95321871255115e-310,6.9512195122313e-310,6.94922031191145e-310,6.9472211115916e-310,6.94522191127176e-310,6.9432227109519e-310,6.94122351063206e-310,6.9392243103122e-310,6.93722510999236e-310,6.9352259096725e-310,6.93322670935267e-310,6.9312275090328e-310,6.92922830871297e-310,6.9272291083931e-310,6.92522990807327e-310,6.9232307077534e-310,6.9212315074336e-310,6.91923230711373e-310,6.9172331067939e-310,6.91523390647403e-310,6.9132347061542e-310,6.91123550583433e-310,6.9092363055145e-310,6.90723710519464e-310,6.9052379048748e-310,6.90323870455494e-310,6.9012395042351e-310,6.89924030391524e-310,6.8972411035954e-310,6.89524190327555e-310,6.8932427029557e-310,6.89124350263585e-310,6.889244302316e-310,6.88724510199615e-310,6.8852459016763e-310,6.88324670135646e-310,6.8812475010366e-310,6.87924830071676e-310,6.8772491003969e-310,6.87524990007706e-310,6.8732506997572e-310,6.87125149943737e-310,6.8692522991175e-310,6.86725309879767e-310,6.8652538984778e-310,6.86325469815797e-310,6.86125549783813e-310,6.8592562975183e-310,6.85725709719843e-310,6.8552578968786e-310,6.85325869655873e-310,6.8512594962389e-310,6.84926029591904e-310,6.8472610955992e-310,6.84526189527934e-310,6.8432626949595e-310,6.84126349463964e-310,6.8392642943198e-310,6.83726509399995e-310,6.8352658936801e-310,6.83326669336025e-310,6.8312674930404e-310,6.82926829272055e-310,6.8272690924007e-310,6.82526989208086e-310,6.823270691761e-310,6.82127149144116e-310,6.8192722911213e-310,6.81727309080146e-310,6.8152738904816e-310,6.81327469016177e-310,6.8112754898419e-310,6.80927628952207e-310,6.8072770892022e-310,6.80527788888237e-310,6.8032786885625e-310,6.8012794882427e-310,6.79928028792283e-310,6.797281087603e-310,6.79528188728313e-310,6.7932826869633e-310,6.79128348664343e-310,6.7892842863236e-310,6.78728508600374e-310,6.7852858856839e-310,6.78328668536404e-310,6.7812874850442e-310,6.77928828472434e-310,6.7772890844045e-310,6.77528988408465e-310,6.7732906837648e-310,6.77129148344495e-310,6.7692922831251e-310,6.76729308280525e-310,6.7652938824854e-310,6.76329468216556e-310,6.7612954818457e-310,6.75929628152586e-310,6.757297081206e-310,6.75529788088616e-310,6.7532986805663e-310,6.75129948024647e-310,6.7493002799266e-310,6.74730107960677e-310,6.7453018792869e-310,6.74330267896707e-310,6.74130347864723e-310,6.7393042783274e-310,6.73730507800753e-310,6.7353058776877e-310,6.73330667736783e-310,6.731307477048e-310,6.72930827672814e-310,6.7273090764083e-310,6.72530987608844e-310,6.7233106757686e-310,6.72131147544874e-310,6.7193122751289e-310,6.71731307480905e-310,6.7153138744892e-310,6.71331467416935e-310,6.7113154738495e-310,6.70931627352965e-310,6.7073170732098e-310,6.70531787288996e-310,6.7033186725701e-310,6.70131947225026e-310,6.6993202719304e-310,6.69732107161056e-310,6.6953218712907e-310,6.69332267097087e-310,6.691323470651e-310,6.68932427033117e-310,6.6873250700113e-310,6.68532586969147e-310,6.6833266693716e-310,6.6813274690518e-310,6.67932826873193e-310,6.6773290684121e-310,6.67532986809223e-310,6.6733306677724e-310,6.67133146745253e-310,6.6693322671327e-310,6.66733306681284e-310,6.665333866493e-310,6.66333466617314e-310,6.6613354658533e-310,6.65933626553344e-310,6.6573370652136e-310,6.65533786489375e-310,6.6533386645739e-310,6.65133946425405e-310,6.6493402639342e-310,6.64734106361435e-310,6.6453418632945e-310,6.64334266297466e-310,6.6413434626548e-310,6.63934426233496e-310,6.6373450620151e-310,6.63534586169526e-310,6.6333466613754e-310,6.63134746105557e-310,6.6293482607357e-310,6.62734906041587e-310,6.625349860096e-310,6.62335065977617e-310,6.62135145945633e-310,6.6193522591365e-310,6.61735305881663e-310,6.6153538584968e-310,6.61335465817693e-310,6.6113554578571e-310,6.60935625753724e-310,6.6073570572174e-310,6.60535785689754e-310,6.6033586565777e-310,6.60135945625784e-310,6.599360255938e-310,6.59736105561815e-310,6.5953618552983e-310,6.59336265497845e-310,6.5913634546586e-310,6.58936425433875e-310,6.5873650540189e-310,6.58536585369906e-310,6.5833666533792e-310,6.58136745305936e-310,6.5793682527395e-310,6.57736905241966e-310,6.5753698520998e-310,6.57337065177997e-310,6.5713714514601e-310,6.56937225114027e-310,6.5673730508204e-310,6.56537385050057e-310,6.5633746501807e-310,6.56137544986088e-310,6.55937624954103e-310,6.5573770492212e-310,6.55537784890133e-310,6.5533786485815e-310,6.55137944826163e-310,6.5493802479418e-310,6.54738104762194e-310,6.5453818473021e-310,6.54338264698224e-310,6.5413834466624e-310,6.53938424634254e-310,6.5373850460227e-310,6.53538584570285e-310,6.533386645383e-310,6.53138744506315e-310,6.5293882447433e-310,6.52738904442345e-310,6.5253898441036e-310,6.52339064378376e-310,6.5213914434639e-310,6.51939224314406e-310,6.5173930428242e-310,6.51539384250436e-310,6.5133946421845e-310,6.51139544186467e-310,6.5093962415448e-310,6.50739704122497e-310,6.5053978409051e-310,6.50339864058527e-310,6.50139944026542e-310,6.4994002399456e-310,6.49740103962573e-310,6.4954018393059e-310,6.49340263898603e-310,6.4914034386662e-310,6.48940423834633e-310,6.4874050380265e-310,6.48540583770664e-310,6.4834066373868e-310,6.48140743706694e-310,6.4794082367471e-310,6.47740903642724e-310,6.4754098361074e-310,6.47341063578755e-310,6.4714114354677e-310,6.46941223514785e-310,6.467413034828e-310,6.46541383450815e-310,6.4634146341883e-310,6.46141543386846e-310,6.4594162335486e-310,6.45741703322876e-310,6.4554178329089e-310,6.45341863258906e-310,6.4514194322692e-310,6.44942023194937e-310,6.4474210316295e-310,6.44542183130967e-310,6.4434226309898e-310,6.44142343066997e-310,6.43942423035013e-310,6.4374250300303e-310,6.43542582971043e-310,6.4334266293906e-310,6.43142742907073e-310,6.4294282287509e-310,6.42742902843104e-310,6.4254298281112e-310,6.42343062779134e-310,6.4214314274715e-310,6.41943222715164e-310,6.4174330268318e-310,6.41543382651195e-310,6.4134346261921e-310,6.41143542587225e-310,6.4094362255524e-310,6.40743702523255e-310,6.4054378249127e-310,6.40343862459286e-310,6.401439424273e-310,6.39944022395316e-310,6.3974410236333e-310,6.39544182331346e-310,6.3934426229936e-310,6.39144342267377e-310,6.3894442223539e-310,6.38744502203407e-310,6.3854458217142e-310,6.38344662139437e-310,6.3814474210745e-310,6.3794482207547e-310,6.37744902043483e-310,6.375449820115e-310,6.37345061979513e-310,6.3714514194753e-310,6.36945221915543e-310,6.3674530188356e-310,6.36545381851574e-310,6.3634546181959e-310,6.36145541787604e-310,6.3594562175562e-310,6.35745701723634e-310,6.3554578169165e-310,6.35345861659665e-310,6.3514594162768e-310,6.34946021595695e-310,6.3474610156371e-310,6.34546181531725e-310,6.3434626149974e-310,6.34146341467756e-310,6.3394642143577e-310,6.33746501403786e-310,6.335465813718e-310,6.33346661339816e-310,6.3314674130783e-310,6.32946821275847e-310,6.3274690124386e-310,6.32546981211877e-310,6.3234706117989e-310,6.32147141147907e-310,6.31947221115923e-310,6.3174730108394e-310,6.31547381051953e-310,6.3134746101997e-310,6.31147540987983e-310,6.30947620956e-310,6.30747700924014e-310,6.3054778089203e-310,6.30347860860044e-310,6.3014794082806e-310,6.29948020796074e-310,6.2974810076409e-310,6.29548180732105e-310,6.2934826070012e-310,6.29148340668135e-310,6.2894842063615e-310,6.28748500604165e-310,6.2854858057218e-310,6.28348660540196e-310,6.2814874050821e-310,6.27948820476226e-310,6.2774890044424e-310,6.27548980412256e-310,6.2734906038027e-310,6.27149140348287e-310,6.269492203163e-310,6.26749300284317e-310,6.2654938025233e-310,6.26349460220347e-310,6.2614954018836e-310,6.2594962015638e-310,6.25749700124393e-310,6.2554978009241e-310,6.25349860060423e-310,6.2514994002844e-310,6.24950019996453e-310,6.2475009996447e-310,6.24550179932484e-310,6.243502599005e-310,6.24150339868514e-310,6.2395041983653e-310,6.23750499804544e-310,6.2355057977256e-310,6.23350659740575e-310,6.2315073970859e-310,6.22950819676605e-310,6.2275089964462e-310,6.22550979612635e-310,6.2235105958065e-310,6.22151139548666e-310,6.2195121951668e-310,6.21751299484696e-310,6.2155137945271e-310,6.21351459420726e-310,6.2115153938874e-310,6.20951619356757e-310,6.2075169932477e-310,6.20551779292787e-310,6.203518592608e-310,6.20151939228817e-310,6.19952019196833e-310,6.1975209916485e-310,6.19552179132863e-310,6.1935225910088e-310,6.19152339068893e-310,6.1895241903691e-310,6.18752499004924e-310,6.1855257897294e-310,6.18352658940954e-310,6.1815273890897e-310,6.17952818876984e-310,6.17752898845e-310,6.17552978813015e-310,6.1735305878103e-310,6.17153138749045e-310,6.1695321871706e-310,6.16753298685075e-310,6.1655337865309e-310,6.16353458621106e-310,6.1615353858912e-310,6.15953618557136e-310,6.1575369852515e-310,6.15553778493166e-310,6.1535385846118e-310,6.15153938429197e-310,6.1495401839721e-310,6.14754098365227e-310,6.1455417833324e-310,6.14354258301257e-310,6.1415433826927e-310,6.1395441823729e-310,6.13754498205303e-310,6.1355457817332e-310,6.13354658141333e-310,6.1315473810935e-310,6.12954818077363e-310,6.1275489804538e-310,6.12554978013394e-310,6.1235505798141e-310,6.12155137949424e-310,6.1195521791744e-310,6.11755297885454e-310,6.1155537785347e-310,6.11355457821485e-310,6.111555377895e-310,6.10955617757515e-310,6.1075569772553e-310,6.10555777693545e-310,6.1035585766156e-310,6.10155937629576e-310,6.0995601759759e-310,6.09756097565606e-310,6.0955617753362e-310,6.09356257501636e-310,6.0915633746965e-310,6.08956417437667e-310,6.0875649740568e-310,6.08556577373697e-310,6.0835665734171e-310,6.08156737309727e-310,6.07956817277743e-310,6.0775689724576e-310,6.07556977213773e-310,6.0735705718179e-310,6.07157137149803e-310,6.0695721711782e-310,6.06757297085834e-310,6.0655737705385e-310,6.06357457021864e-310,6.0615753698988e-310,6.05957616957894e-310,6.0575769692591e-310,6.05557776893925e-310,6.0535785686194e-310,6.05157936829955e-310,6.0495801679797e-310,6.04758096765985e-310,6.04558176734e-310,6.04358256702016e-310,6.0415833667003e-310,6.03958416638046e-310,6.0375849660606e-310,6.03558576574076e-310,6.0335865654209e-310,6.03158736510107e-310,6.0295881647812e-310,6.02758896446137e-310,6.0255897641415e-310,6.02359056382167e-310,6.0215913635018e-310,6.01959216318198e-310,6.01759296286213e-310,6.0155937625423e-310,6.01359456222243e-310,6.0115953619026e-310,6.00959616158273e-310,6.0075969612629e-310,6.00559776094304e-310,6.0035985606232e-310,6.00159936030334e-310,5.9996001599835e-310,5.99760095966364e-310,5.9956017593438e-310,5.99360255902395e-310,5.9916033587041e-310,5.98960415838425e-310,5.9876049580644e-310,5.98560575774455e-310,5.9836065574247e-310,5.98160735710486e-310,5.979608156785e-310,5.97760895646516e-310,5.9756097561453e-310,5.97361055582546e-310,5.9716113555056e-310,5.96961215518577e-310,5.9676129548659e-310,5.96561375454607e-310,5.9636145542262e-310,5.96161535390637e-310,5.95961615358652e-310,5.9576169532667e-310,5.95561775294683e-310,5.953618552627e-310,5.95161935230713e-310,5.9496201519873e-310,5.94762095166743e-310,5.9456217513476e-310,5.94362255102774e-310,5.9416233507079e-310,5.93962415038804e-310,5.9376249500682e-310,5.93562574974834e-310,5.9336265494285e-310,5.93162734910865e-310,5.9296281487888e-310,5.92762894846895e-310,5.9256297481491e-310,5.92363054782925e-310,5.9216313475094e-310,5.91963214718956e-310,5.9176329468697e-310,5.91563374654986e-310,5.91363454623e-310,5.91163534591016e-310,5.9096361455903e-310,5.90763694527047e-310,5.9056377449506e-310,5.90363854463077e-310,5.9016393443109e-310,5.89964014399107e-310,5.89764094367123e-310,5.8956417433514e-310,5.89364254303153e-310,5.8916433427117e-310,5.88964414239183e-310,5.887644942072e-310,5.88564574175214e-310,5.8836465414323e-310,5.88164734111244e-310,5.8796481407926e-310,5.87764894047274e-310,5.8756497401529e-310,5.87365053983305e-310,5.8716513395132e-310,5.86965213919335e-310,5.8676529388735e-310,5.86565373855365e-310,5.8636545382338e-310,5.86165533791396e-310,5.8596561375941e-310,5.85765693727426e-310,5.8556577369544e-310,5.85365853663456e-310,5.8516593363147e-310,5.84966013599487e-310,5.847660935675e-310,5.84566173535517e-310,5.8436625350353e-310,5.84166333471547e-310,5.8396641343956e-310,5.8376649340758e-310,5.83566573375593e-310,5.8336665334361e-310,5.83166733311623e-310,5.8296681327964e-310,5.82766893247653e-310,5.8256697321567e-310,5.82367053183684e-310,5.821671331517e-310,5.81967213119714e-310,5.8176729308773e-310,5.81567373055744e-310,5.8136745302376e-310,5.81167532991775e-310,5.8096761295979e-310,5.80767692927805e-310,5.8056777289582e-310,5.80367852863835e-310,5.8016793283185e-310,5.79968012799866e-310,5.7976809276788e-310,5.79568172735896e-310,5.7936825270391e-310,5.79168332671926e-310,5.7896841263994e-310,5.78768492607957e-310,5.7856857257597e-310,5.78368652543987e-310,5.78168732512e-310,5.77968812480017e-310,5.77768892448033e-310,5.7756897241605e-310,5.77369052384063e-310,5.7716913235208e-310,5.76969212320093e-310,5.7676929228811e-310,5.76569372256124e-310,5.7636945222414e-310,5.76169532192154e-310,5.7596961216017e-310,5.75769692128184e-310,5.755697720962e-310,5.75369852064215e-310,5.7516993203223e-310,5.74970012000245e-310,5.7477009196826e-310,5.74570171936275e-310,5.7437025190429e-310,5.74170331872306e-310,5.7397041184032e-310,5.73770491808336e-310,5.7357057177635e-310,5.73370651744366e-310,5.7317073171238e-310,5.72970811680397e-310,5.7277089164841e-310,5.72570971616427e-310,5.7237105158444e-310,5.72171131552457e-310,5.7197121152047e-310,5.7177129148849e-310,5.71571371456503e-310,5.7137145142452e-310,5.71171531392533e-310,5.7097161136055e-310,5.70771691328563e-310,5.7057177129658e-310,5.70371851264594e-310,5.7017193123261e-310,5.69972011200624e-310,5.6977209116864e-310,5.69572171136654e-310,5.6937225110467e-310,5.69172331072685e-310,5.689724110407e-310,5.68772491008715e-310,5.6857257097673e-310,5.68372650944745e-310,5.6817273091276e-310,5.67972810880776e-310,5.6777289084879e-310,5.67572970816806e-310,5.6737305078482e-310,5.67173130752836e-310,5.6697321072085e-310,5.66773290688867e-310,5.6657337065688e-310,5.66373450624897e-310,5.6617353059291e-310,5.65973610560927e-310,5.65773690528943e-310,5.6557377049696e-310,5.65373850464973e-310,5.6517393043299e-310,5.64974010401003e-310,5.6477409036902e-310,5.64574170337034e-310,5.6437425030505e-310,5.64174330273064e-310,5.6397441024108e-310,5.63774490209094e-310,5.6357457017711e-310,5.63374650145125e-310,5.6317473011314e-310,5.62974810081155e-310,5.6277489004917e-310,5.62574970017185e-310,5.623750499852e-310,5.62175129953216e-310,5.6197520992123e-310,5.61775289889246e-310,5.6157536985726e-310,5.61375449825276e-310,5.6117552979329e-310,5.60975609761307e-310,5.6077568972932e-310,5.60575769697337e-310,5.6037584966535e-310,5.60175929633367e-310,5.5997600960138e-310,5.597760895694e-310,5.59576169537413e-310,5.5937624950543e-310,5.59176329473443e-310,5.5897640944146e-310,5.58776489409473e-310,5.5857656937749e-310,5.58376649345504e-310,5.5817672931352e-310,5.57976809281534e-310,5.5777688924955e-310,5.57576969217564e-310,5.5737704918558e-310,5.57177129153595e-310,5.5697720912161e-310,5.56777289089625e-310,5.5657736905764e-310,5.56377449025655e-310,5.5617752899367e-310,5.55977608961686e-310,5.557776889297e-310,5.55577768897716e-310,5.5537784886573e-310,5.55177928833746e-310,5.5497800880176e-310,5.54778088769777e-310,5.5457816873779e-310,5.54378248705807e-310,5.5417832867382e-310,5.53978408641837e-310,5.53778488609853e-310,5.5357856857787e-310,5.53378648545883e-310,5.531787285139e-310,5.52978808481913e-310,5.5277888844993e-310,5.52578968417944e-310,5.5237904838596e-310,5.52179128353974e-310,5.5197920832199e-310,5.51779288290004e-310,5.5157936825802e-310,5.51379448226035e-310,5.5117952819405e-310,5.50979608162065e-310,5.5077968813008e-310,5.50579768098095e-310,5.5037984806611e-310,5.50179928034126e-310,5.4998000800214e-310,5.49780087970156e-310,5.4958016793817e-310,5.49380247906186e-310,5.491803278742e-310,5.48980407842217e-310,5.4878048781023e-310,5.48580567778247e-310,5.4838064774626e-310,5.48180727714277e-310,5.4798080768229e-310,5.47780887650308e-310,5.47580967618323e-310,5.4738104758634e-310,5.47181127554353e-310,5.4698120752237e-310,5.46781287490383e-310,5.465813674584e-310,5.46381447426414e-310,5.4618152739443e-310,5.45981607362444e-310,5.4578168733046e-310,5.45581767298474e-310,5.4538184726649e-310,5.45181927234505e-310,5.4498200720252e-310,5.44782087170535e-310,5.4458216713855e-310,5.44382247106565e-310,5.4418232707458e-310,5.43982407042596e-310,5.4378248701061e-310,5.43582566978626e-310,5.4338264694664e-310,5.43182726914656e-310,5.4298280688267e-310,5.42782886850687e-310,5.425829668187e-310,5.42383046786717e-310,5.4218312675473e-310,5.41983206722747e-310,5.41783286690762e-310,5.4158336665878e-310,5.41383446626793e-310,5.4118352659481e-310,5.40983606562823e-310,5.4078368653084e-310,5.40583766498853e-310,5.4038384646687e-310,5.40183926434884e-310,5.399840064029e-310,5.39784086370914e-310,5.3958416633893e-310,5.39384246306944e-310,5.3918432627496e-310,5.38984406242975e-310,5.3878448621099e-310,5.38584566179005e-310,5.3838464614702e-310,5.38184726115035e-310,5.3798480608305e-310,5.37784886051066e-310,5.3758496601908e-310,5.37385045987096e-310,5.3718512595511e-310,5.36985205923126e-310,5.3678528589114e-310,5.36585365859157e-310,5.3638544582717e-310,5.36185525795187e-310,5.359856057632e-310,5.35785685731217e-310,5.35585765699233e-310,5.3538584566725e-310,5.35185925635263e-310,5.3498600560328e-310,5.34786085571293e-310,5.3458616553931e-310,5.34386245507324e-310,5.3418632547534e-310,5.33986405443354e-310,5.3378648541137e-310,5.33586565379384e-310,5.333866453474e-310,5.33186725315415e-310,5.3298680528343e-310,5.32786885251445e-310,5.3258696521946e-310,5.32387045187475e-310,5.3218712515549e-310,5.31987205123506e-310,5.3178728509152e-310,5.31587365059536e-310,5.3138744502755e-310,5.31187524995566e-310,5.3098760496358e-310,5.30787684931597e-310,5.3058776489961e-310,5.30387844867627e-310,5.3018792483564e-310,5.29988004803657e-310,5.2978808477167e-310,5.2958816473969e-310,5.29388244707703e-310,5.2918832467572e-310,5.28988404643733e-310,5.2878848461175e-310,5.28588564579763e-310,5.2838864454778e-310,5.28188724515794e-310,5.2798880448381e-310,5.27788884451824e-310,5.2758896441984e-310,5.27389044387854e-310,5.2718912435587e-310,5.26989204323885e-310,5.267892842919e-310,5.26589364259915e-310,5.2638944422793e-310,5.26189524195945e-310,5.2598960416396e-310,5.25789684131976e-310,5.2558976409999e-310,5.25389844068006e-310,5.2518992403602e-310,5.24990004004036e-310,5.2479008397205e-310,5.24590163940067e-310,5.2439024390808e-310,5.24190323876097e-310,5.2399040384411e-310,5.23790483812127e-310,5.23590563780143e-310,5.2339064374816e-310,5.23190723716173e-310,5.2299080368419e-310,5.22790883652203e-310,5.2259096362022e-310,5.22391043588234e-310,5.2219112355625e-310,5.21991203524264e-310,5.2179128349228e-310,5.21591363460294e-310,5.2139144342831e-310,5.21191523396325e-310,5.2099160336434e-310,5.20791683332355e-310,5.2059176330037e-310,5.20391843268385e-310,5.201919232364e-310,5.19992003204416e-310,5.1979208317243e-310,5.19592163140446e-310,5.1939224310846e-310,5.19192323076476e-310,5.1899240304449e-310,5.18792483012507e-310,5.1859256298052e-310,5.18392642948537e-310,5.1819272291655e-310,5.17992802884567e-310,5.1779288285258e-310,5.175929628206e-310,5.17393042788613e-310,5.1719312275663e-310,5.16993202724643e-310,5.1679328269266e-310,5.16593362660673e-310,5.1639344262869e-310,5.16193522596704e-310,5.1599360256472e-310,5.15793682532734e-310,5.1559376250075e-310,5.15393842468764e-310,5.1519392243678e-310,5.14994002404795e-310,5.1479408237281e-310,5.14594162340825e-310,5.1439424230884e-310,5.14194322276855e-310,5.1399440224487e-310,5.13794482212886e-310,5.135945621809e-310,5.13394642148916e-310,5.1319472211693e-310,5.12994802084946e-310,5.1279488205296e-310,5.12594962020977e-310,5.1239504198899e-310,5.12195121957007e-310,5.1199520192502e-310,5.11795281893037e-310,5.11595361861053e-310,5.1139544182907e-310,5.11195521797083e-310,5.109956017651e-310,5.10795681733113e-310,5.1059576170113e-310,5.10395841669144e-310,5.1019592163716e-310,5.09996001605174e-310,5.0979608157319e-310,5.09596161541204e-310,5.0939624150922e-310,5.09196321477235e-310,5.0899640144525e-310,5.08796481413265e-310,5.0859656138128e-310,5.08396641349295e-310,5.0819672131731e-310,5.07996801285326e-310,5.0779688125334e-310,5.07596961221356e-310,5.0739704118937e-310,5.07197121157386e-310,5.069972011254e-310,5.06797281093417e-310,5.0659736106143e-310,5.06397441029447e-310,5.0619752099746e-310,5.05997600965477e-310,5.0579768093349e-310,5.0559776090151e-310,5.05397840869523e-310,5.0519792083754e-310,5.04998000805553e-310,5.0479808077357e-310,5.04598160741583e-310,5.043982407096e-310,5.04198320677614e-310,5.0399840064563e-310,5.03798480613644e-310,5.0359856058166e-310,5.03398640549674e-310,5.0319872051769e-310,5.02998800485705e-310,5.0279888045372e-310,5.02598960421735e-310,5.0239904038975e-310,5.02199120357765e-310,5.0199920032578e-310,5.01799280293796e-310,5.0159936026181e-310,5.01399440229826e-310,5.0119952019784e-310,5.00999600165856e-310,5.0079968013387e-310,5.00599760101887e-310,5.003998400699e-310,5.00199920037917e-310,5.0000000000593e-310,4.99800079973947e-310,4.99600159941963e-310,4.9940023990998e-310,4.99200319877993e-310,4.9900039984601e-310,4.98800479814023e-310,4.9860055978204e-310,4.98400639750054e-310,4.9820071971807e-310,4.98000799686084e-310,4.978008796541e-310,4.97600959622114e-310,4.9740103959013e-310,4.97201119558145e-310,4.9700119952616e-310,4.96801279494175e-310,4.9660135946219e-310,4.96401439430205e-310,4.9620151939822e-310,4.96001599366236e-310,4.9580167933425e-310,4.95601759302266e-310,4.9540183927028e-310,4.95201919238296e-310,4.9500199920631e-310,4.94802079174327e-310,4.9460215914234e-310,4.94402239110357e-310,4.9420231907837e-310,4.94002399046387e-310,4.938024790144e-310,4.93602558982418e-310,4.93402638950433e-310,4.9320271891845e-310,4.93002798886463e-310,4.9280287885448e-310,4.92602958822493e-310,4.9240303879051e-310,4.92203118758524e-310,4.9200319872654e-310,4.91803278694554e-310,4.9160335866257e-310,4.91403438630584e-310,4.912035185986e-310,4.91003598566615e-310,4.9080367853463e-310,4.90603758502645e-310,4.9040383847066e-310,4.90203918438675e-310,4.9000399840669e-310,4.89804078374706e-310,4.8960415834272e-310,4.89404238310736e-310,4.8920431827875e-310,4.89004398246766e-310,4.8880447821478e-310,4.88604558182797e-310,4.8840463815081e-310,4.88204718118827e-310,4.8800479808684e-310,4.87804878054857e-310,4.87604958022872e-310,4.8740503799089e-310,4.87205117958903e-310,4.8700519792692e-310,4.86805277894933e-310,4.8660535786295e-310,4.86405437830963e-310,4.8620551779898e-310,4.86005597766994e-310,4.8580567773501e-310,4.85605757703024e-310,4.8540583767104e-310,4.85205917639054e-310,4.8500599760707e-310,4.84806077575085e-310,4.846061575431e-310,4.84406237511115e-310,4.8420631747913e-310,4.84006397447145e-310,4.8380647741516e-310,4.83606557383176e-310,4.8340663735119e-310,4.83206717319206e-310,4.8300679728722e-310,4.82806877255236e-310,4.8260695722325e-310,4.82407037191267e-310,4.8220711715928e-310,4.82007197127297e-310,4.8180727709531e-310,4.81607357063327e-310,4.81407437031343e-310,4.8120751699936e-310,4.81007596967373e-310,4.8080767693539e-310,4.80607756903403e-310,4.8040783687142e-310,4.80207916839434e-310,4.8000799680745e-310,4.79808076775464e-310,4.7960815674348e-310,4.79408236711494e-310,4.7920831667951e-310,4.79008396647525e-310,4.7880847661554e-310,4.78608556583555e-310,4.7840863655157e-310,4.78208716519585e-310,4.780087964876e-310,4.77808876455616e-310,4.7760895642363e-310,4.77409036391646e-310,4.7720911635966e-310,4.77009196327676e-310,4.7680927629569e-310,4.76609356263707e-310,4.7640943623172e-310,4.76209516199737e-310,4.7600959616775e-310,4.75809676135767e-310,4.7560975610378e-310,4.754098360718e-310,4.75209916039813e-310,4.7500999600783e-310,4.74810075975843e-310,4.7461015594386e-310,4.74410235911873e-310,4.7421031587989e-310,4.74010395847904e-310,4.7381047581592e-310,4.73610555783934e-310,4.7341063575195e-310,4.73210715719964e-310,4.7301079568798e-310,4.72810875655995e-310,4.7261095562401e-310,4.72411035592025e-310,4.7221111556004e-310,4.72011195528055e-310,4.7181127549607e-310,4.71611355464086e-310,4.714114354321e-310,4.71211515400116e-310,4.7101159536813e-310,4.70811675336146e-310,4.7061175530416e-310,4.70411835272177e-310,4.7021191524019e-310,4.70011995208207e-310,4.6981207517622e-310,4.69612155144237e-310,4.69412235112253e-310,4.6921231508027e-310,4.69012395048283e-310,4.688124750163e-310,4.68612554984313e-310,4.6841263495233e-310,4.68212714920344e-310,4.6801279488836e-310,4.67812874856374e-310,4.6761295482439e-310,4.67413034792404e-310,4.6721311476042e-310,4.67013194728435e-310,4.6681327469645e-310,4.66613354664465e-310,4.6641343463248e-310,4.66213514600495e-310,4.6601359456851e-310,4.65813674536526e-310,4.6561375450454e-310,4.65413834472556e-310,4.6521391444057e-310,4.65013994408586e-310,4.648140743766e-310,4.64614154344617e-310,4.6441423431263e-310,4.64214314280647e-310,4.6401439424866e-310,4.63814474216677e-310,4.6361455418469e-310,4.6341463415271e-310,4.63214714120723e-310,4.6301479408874e-310,4.62814874056753e-310,4.6261495402477e-310,4.62415033992783e-310,4.622151139608e-310,4.62015193928814e-310,4.6181527389683e-310,4.61615353864844e-310,4.6141543383286e-310,4.61215513800874e-310,4.6101559376889e-310,4.60815673736905e-310,4.6061575370492e-310,4.60415833672935e-310,4.6021591364095e-310,4.60015993608965e-310,4.5981607357698e-310,4.59616153544996e-310,4.5941623351301e-310,4.59216313481026e-310,4.5901639344904e-310,4.58816473417056e-310,4.5861655338507e-310,4.58416633353087e-310,4.582167133211e-310,4.58016793289117e-310,4.5781687325713e-310,4.57616953225147e-310,4.57417033193163e-310,4.5721711316118e-310,4.57017193129193e-310,4.5681727309721e-310,4.56617353065223e-310,4.5641743303324e-310,4.56217513001254e-310,4.5601759296927e-310,4.55817672937284e-310,4.556177529053e-310,4.55417832873314e-310,4.5521791284133e-310,4.55017992809345e-310,4.5481807277736e-310,4.54618152745375e-310,4.5441823271339e-310,4.54218312681405e-310,4.5401839264942e-310,4.53818472617436e-310,4.5361855258545e-310,4.53418632553466e-310,4.5321871252148e-310,4.53018792489496e-310,4.5281887245751e-310,4.52618952425527e-310,4.5241903239354e-310,4.52219112361557e-310,4.5201919232957e-310,4.51819272297587e-310,4.516193522656e-310,4.5141943223362e-310,4.51219512201633e-310,4.5101959216965e-310,4.50819672137663e-310,4.5061975210568e-310,4.50419832073693e-310,4.5021991204171e-310,4.50019992009724e-310,4.4982007197774e-310,4.49620151945754e-310,4.4942023191377e-310,4.49220311881784e-310,4.490203918498e-310,4.48820471817815e-310,4.4862055178583e-310,4.48420631753845e-310,4.4822071172186e-310,4.48020791689875e-310,4.4782087165789e-310,4.47620951625906e-310,4.4742103159392e-310,4.47221111561936e-310,4.4702119152995e-310,4.46821271497966e-310,4.4662135146598e-310,4.46421431433997e-310,4.4622151140201e-310,4.46021591370027e-310,4.4582167133804e-310,4.45621751306057e-310,4.45421831274073e-310,4.4522191124209e-310,4.45021991210103e-310,4.4482207117812e-310,4.44622151146133e-310,4.4442223111415e-310,4.44222311082164e-310,4.4402239105018e-310,4.43822471018194e-310,4.4362255098621e-310,4.43422630954224e-310,4.4322271092224e-310,4.43022790890255e-310,4.4282287085827e-310,4.42622950826285e-310,4.424230307943e-310,4.42223110762315e-310,4.4202319073033e-310,4.41823270698346e-310,4.4162335066636e-310,4.41423430634376e-310,4.4122351060239e-310,4.41023590570406e-310,4.4082367053842e-310,4.40623750506437e-310,4.4042383047445e-310,4.40223910442467e-310,4.4002399041048e-310,4.39824070378497e-310,4.3962415034651e-310,4.39424230314528e-310,4.39224310282543e-310,4.3902439025056e-310,4.38824470218573e-310,4.3862455018659e-310,4.38424630154603e-310,4.3822471012262e-310,4.38024790090634e-310,4.3782487005865e-310,4.37624950026664e-310,4.3742502999468e-310,4.37225109962694e-310,4.3702518993071e-310,4.36825269898725e-310,4.3662534986674e-310,4.36425429834755e-310,4.3622550980277e-310,4.36025589770785e-310,4.358256697388e-310,4.35625749706816e-310,4.3542582967483e-310,4.35225909642846e-310,4.3502598961086e-310,4.34826069578876e-310,4.3462614954689e-310,4.34426229514907e-310,4.3422630948292e-310,4.34026389450937e-310,4.3382646941895e-310,4.33626549386967e-310,4.33426629354982e-310,4.33226709323e-310,4.33026789291013e-310,4.3282686925903e-310,4.32626949227043e-310,4.3242702919506e-310,4.32227109163073e-310,4.3202718913109e-310,4.31827269099104e-310,4.3162734906712e-310,4.31427429035134e-310,4.3122750900315e-310,4.31027588971164e-310,4.3082766893918e-310,4.30627748907195e-310,4.3042782887521e-310,4.30227908843225e-310,4.3002798881124e-310,4.29828068779255e-310,4.2962814874727e-310,4.29428228715286e-310,4.292283086833e-310,4.29028388651316e-310,4.2882846861933e-310,4.28628548587346e-310,4.2842862855536e-310,4.28228708523377e-310,4.2802878849139e-310,4.27828868459407e-310,4.2762894842742e-310,4.27429028395437e-310,4.27229108363453e-310,4.2702918833147e-310,4.26829268299483e-310,4.266293482675e-310,4.26429428235513e-310,4.2622950820353e-310,4.26029588171544e-310,4.2582966813956e-310,4.25629748107574e-310,4.2542982807559e-310,4.25229908043604e-310,4.2502998801162e-310,4.24830067979635e-310,4.2463014794765e-310,4.24430227915665e-310,4.2423030788368e-310,4.24030387851695e-310,4.2383046781971e-310,4.23630547787726e-310,4.2343062775574e-310,4.23230707723756e-310,4.2303078769177e-310,4.22830867659786e-310,4.226309476278e-310,4.22431027595817e-310,4.2223110756383e-310,4.22031187531847e-310,4.2183126749986e-310,4.21631347467877e-310,4.2143142743589e-310,4.2123150740391e-310,4.21031587371923e-310,4.2083166733994e-310,4.20631747307953e-310,4.2043182727597e-310,4.20231907243983e-310,4.20031987212e-310,4.19832067180014e-310,4.1963214714803e-310,4.19432227116044e-310,4.1923230708406e-310,4.19032387052074e-310,4.1883246702009e-310,4.18632546988105e-310,4.1843262695612e-310,4.18232706924135e-310,4.1803278689215e-310,4.17832866860165e-310,4.1763294682818e-310,4.17433026796196e-310,4.1723310676421e-310,4.17033186732226e-310,4.1683326670024e-310,4.16633346668256e-310,4.1643342663627e-310,4.16233506604287e-310,4.160335865723e-310,4.15833666540317e-310,4.1563374650833e-310,4.15433826476347e-310,4.15233906444363e-310,4.1503398641238e-310,4.14834066380393e-310,4.1463414634841e-310,4.14434226316423e-310,4.1423430628444e-310,4.14034386252454e-310,4.1383446622047e-310,4.13634546188484e-310,4.134346261565e-310,4.13234706124514e-310,4.1303478609253e-310,4.12834866060545e-310,4.1263494602856e-310,4.12435025996575e-310,4.1223510596459e-310,4.12035185932605e-310,4.1183526590062e-310,4.11635345868636e-310,4.1143542583665e-310,4.11235505804666e-310,4.1103558577268e-310,4.10835665740696e-310,4.1063574570871e-310,4.10435825676727e-310,4.1023590564474e-310,4.10035985612757e-310,4.0983606558077e-310,4.09636145548787e-310,4.094362255168e-310,4.0923630548482e-310,4.09036385452833e-310,4.0883646542085e-310,4.08636545388863e-310,4.0843662535688e-310,4.08236705324893e-310,4.0803678529291e-310,4.07836865260924e-310,4.0763694522894e-310,4.07437025196954e-310,4.0723710516497e-310,4.07037185132984e-310,4.06837265101e-310,4.06637345069015e-310,4.0643742503703e-310,4.06237505005045e-310,4.0603758497306e-310,4.05837664941075e-310,4.0563774490909e-310,4.05437824877106e-310,4.0523790484512e-310,4.05037984813136e-310,4.0483806478115e-310,4.04638144749166e-310,4.0443822471718e-310,4.04238304685197e-310,4.0403838465321e-310,4.03838464621227e-310,4.0363854458924e-310,4.03438624557257e-310,4.03238704525273e-310,4.0303878449329e-310,4.02838864461303e-310,4.0263894442932e-310,4.02439024397333e-310,4.0223910436535e-310,4.02039184333364e-310,4.0183926430138e-310,4.01639344269394e-310,4.0143942423741e-310,4.01239504205424e-310,4.0103958417344e-310,4.00839664141455e-310,4.0063974410947e-310,4.00439824077485e-310,4.002399040455e-310,4.00039984013515e-310,3.9984006398153e-310,3.99640143949546e-310,3.9944022391756e-310,3.99240303885576e-310,3.9904038385359e-310,3.98840463821606e-310,3.9864054378962e-310,3.98440623757637e-310,3.9824070372565e-310,3.98040783693667e-310,3.9784086366168e-310,3.97640943629697e-310,3.9744102359771e-310,3.9724110356573e-310,3.97041183533743e-310,3.9684126350176e-310,3.96641343469773e-310,3.9644142343779e-310,3.96241503405803e-310,3.9604158337382e-310,3.95841663341834e-310,3.9564174330985e-310,3.95441823277864e-310,3.9524190324588e-310,3.95041983213894e-310,3.9484206318191e-310,3.94642143149925e-310,3.9444222311794e-310,3.94242303085955e-310,3.9404238305397e-310,3.93842463021985e-310,3.9364254299e-310,3.93442622958016e-310,3.9324270292603e-310,3.93042782894046e-310,3.9284286286206e-310,3.92642942830076e-310,3.9244302279809e-310,3.92243102766107e-310,3.9204318273412e-310,3.91843262702137e-310,3.9164334267015e-310,3.91443422638167e-310,3.91243502606183e-310,3.910435825742e-310,3.90843662542213e-310,3.9064374251023e-310,3.90443822478243e-310,3.9024390244626e-310,3.90043982414274e-310,3.8984406238229e-310,3.89644142350304e-310,3.8944422231832e-310,3.89244302286334e-310,3.8904438225435e-310,3.88844462222365e-310,3.8864454219038e-310,3.88444622158395e-310,3.8824470212641e-310,3.88044782094425e-310,3.8784486206244e-310,3.87644942030456e-310,3.8744502199847e-310,3.87245101966486e-310,3.870451819345e-310,3.86845261902516e-310,3.8664534187053e-310,3.86445421838547e-310,3.8624550180656e-310,3.86045581774577e-310,3.8584566174259e-310,3.85645741710607e-310,3.8544582167862e-310,3.85245901646638e-310,3.85045981614653e-310,3.8484606158267e-310,3.84646141550683e-310,3.844462215187e-310,3.84246301486713e-310,3.8404638145473e-310,3.83846461422744e-310,3.8364654139076e-310,3.83446621358774e-310,3.8324670132679e-310,3.83046781294804e-310,3.8284686126282e-310,3.82646941230835e-310,3.8244702119885e-310,3.82247101166865e-310,3.8204718113488e-310,3.81847261102895e-310,3.8164734107091e-310,3.81447421038926e-310,3.8124750100694e-310,3.81047580974956e-310,3.8084766094297e-310,3.80647740910986e-310,3.80447820879e-310,3.80247900847017e-310,3.8004798081503e-310,3.79848060783047e-310,3.7964814075106e-310,3.79448220719077e-310,3.79248300687093e-310,3.7904838065511e-310,3.78848460623123e-310,3.7864854059114e-310,3.78448620559153e-310,3.7824870052717e-310,3.78048780495183e-310,3.778488604632e-310,3.77648940431214e-310,3.7744902039923e-310,3.77249100367244e-310,3.7704918033526e-310,3.76849260303274e-310,3.7664934027129e-310,3.76449420239305e-310,3.7624950020732e-310,3.76049580175335e-310,3.7584966014335e-310,3.75649740111365e-310,3.7544982007938e-310,3.75249900047396e-310,3.7504998001541e-310,3.74850059983426e-310,3.7465013995144e-310,3.74450219919456e-310,3.7425029988747e-310,3.74050379855487e-310,3.738504598235e-310,3.73650539791517e-310,3.7345061975953e-310,3.73250699727547e-310,3.73050779695563e-310,3.7285085966358e-310,3.72650939631593e-310,3.7245101959961e-310,3.72251099567623e-310,3.7205117953564e-310,3.71851259503654e-310,3.7165133947167e-310,3.71451419439684e-310,3.712514994077e-310,3.71051579375714e-310,3.7085165934373e-310,3.70651739311745e-310,3.7045181927976e-310,3.70251899247775e-310,3.7005197921579e-310,3.69852059183805e-310,3.6965213915182e-310,3.69452219119836e-310,3.6925229908785e-310,3.69052379055866e-310,3.6885245902388e-310,3.68652538991896e-310,3.6845261895991e-310,3.68252698927927e-310,3.6805277889594e-310,3.67852858863957e-310,3.6765293883197e-310,3.67453018799987e-310,3.67253098768e-310,3.6705317873602e-310,3.66853258704033e-310,3.6665333867205e-310,3.66453418640063e-310,3.6625349860808e-310,3.66053578576093e-310,3.6585365854411e-310,3.65653738512124e-310,3.6545381848014e-310,3.65253898448154e-310,3.6505397841617e-310,3.64854058384184e-310,3.646541383522e-310,3.64454218320215e-310,3.6425429828823e-310,3.64054378256245e-310,3.6385445822426e-310,3.63654538192275e-310,3.6345461816029e-310,3.63254698128306e-310,3.6305477809632e-310,3.62854858064336e-310,3.6265493803235e-310,3.62455018000366e-310,3.6225509796838e-310,3.62055177936397e-310,3.6185525790441e-310,3.61655337872427e-310,3.6145541784044e-310,3.61255497808457e-310,3.61055577776473e-310,3.6085565774449e-310,3.60655737712503e-310,3.6045581768052e-310,3.60255897648533e-310,3.6005597761655e-310,3.59856057584564e-310,3.5965613755258e-310,3.59456217520594e-310,3.5925629748861e-310,3.59056377456624e-310,3.5885645742464e-310,3.58656537392655e-310,3.5845661736067e-310,3.58256697328685e-310,3.580567772967e-310,3.57856857264715e-310,3.5765693723273e-310,3.57457017200746e-310,3.5725709716876e-310,3.57057177136776e-310,3.5685725710479e-310,3.56657337072806e-310,3.5645741704082e-310,3.56257497008837e-310,3.5605757697685e-310,3.55857656944867e-310,3.5565773691288e-310,3.55457816880897e-310,3.5525789684891e-310,3.5505797681693e-310,3.54858056784943e-310,3.5465813675296e-310,3.54458216720973e-310,3.5425829668899e-310,3.54058376657003e-310,3.5385845662502e-310,3.53658536593034e-310,3.5345861656105e-310,3.53258696529064e-310,3.5305877649708e-310,3.52858856465094e-310,3.5265893643311e-310,3.52459016401125e-310,3.5225909636914e-310,3.52059176337155e-310,3.5185925630517e-310,3.51659336273185e-310,3.514594162412e-310,3.51259496209216e-310,3.5105957617723e-310,3.50859656145246e-310,3.5065973611326e-310,3.50459816081276e-310,3.5025989604929e-310,3.50059976017307e-310,3.4986005598532e-310,3.49660135953337e-310,3.4946021592135e-310,3.49260295889367e-310,3.49060375857383e-310,3.488604558254e-310,3.48660535793413e-310,3.4846061576143e-310,3.48260695729443e-310,3.4806077569746e-310,3.47860855665474e-310,3.4766093563349e-310,3.47461015601504e-310,3.4726109556952e-310,3.47061175537534e-310,3.4686125550555e-310,3.46661335473565e-310,3.4646141544158e-310,3.46261495409595e-310,3.4606157537761e-310,3.45861655345625e-310,3.4566173531364e-310,3.45461815281656e-310,3.4526189524967e-310,3.45061975217686e-310,3.448620551857e-310,3.44662135153716e-310,3.4446221512173e-310,3.44262295089747e-310,3.4406237505776e-310,3.43862455025777e-310,3.4366253499379e-310,3.43462614961807e-310,3.4326269492982e-310,3.4306277489784e-310,3.42862854865853e-310,3.4266293483387e-310,3.42463014801883e-310,3.422630947699e-310,3.42063174737913e-310,3.4186325470593e-310,3.41663334673944e-310,3.4146341464196e-310,3.41263494609974e-310,3.4106357457799e-310,3.40863654546004e-310,3.4066373451402e-310,3.40463814482035e-310,3.4026389445005e-310,3.40063974418065e-310,3.3986405438608e-310,3.39664134354095e-310,3.3946421432211e-310,3.39264294290126e-310,3.3906437425814e-310,3.38864454226156e-310,3.3866453419417e-310,3.38464614162186e-310,3.382646941302e-310,3.38064774098217e-310,3.3786485406623e-310,3.37664934034247e-310,3.3746501400226e-310,3.37265093970277e-310,3.37065173938293e-310,3.3686525390631e-310,3.36665333874323e-310,3.3646541384234e-310,3.36265493810353e-310,3.3606557377837e-310,3.35865653746384e-310,3.356657337144e-310,3.35465813682414e-310,3.3526589365043e-310,3.35065973618444e-310,3.3486605358646e-310,3.34666133554475e-310,3.3446621352249e-310,3.34266293490505e-310,3.3406637345852e-310,3.33866453426535e-310,3.3366653339455e-310,3.33466613362566e-310,3.3326669333058e-310,3.33066773298596e-310,3.3286685326661e-310,3.32666933234626e-310,3.3246701320264e-310,3.32267093170657e-310,3.3206717313867e-310,3.31867253106687e-310,3.316673330747e-310,3.31467413042717e-310,3.3126749301073e-310,3.31067572978748e-310,3.30867652946763e-310,3.3066773291478e-310,3.30467812882793e-310,3.3026789285081e-310,3.30067972818823e-310,3.2986805278684e-310,3.29668132754854e-310,3.2946821272287e-310,3.29268292690884e-310,3.290683726589e-310,3.28868452626914e-310,3.2866853259493e-310,3.28468612562945e-310,3.2826869253096e-310,3.28068772498975e-310,3.2786885246699e-310,3.27668932435005e-310,3.2746901240302e-310,3.27269092371036e-310,3.2706917233905e-310,3.26869252307066e-310,3.2666933227508e-310,3.26469412243096e-310,3.2626949221111e-310,3.26069572179127e-310,3.2586965214714e-310,3.25669732115157e-310,3.2546981208317e-310,3.25269892051187e-310,3.25069972019203e-310,3.2487005198722e-310,3.24670131955233e-310,3.2447021192325e-310,3.24270291891263e-310,3.2407037185928e-310,3.23870451827293e-310,3.2367053179531e-310,3.23470611763324e-310,3.2327069173134e-310,3.23070771699354e-310,3.2287085166737e-310,3.22670931635384e-310,3.224710116034e-310,3.22271091571415e-310,3.2207117153943e-310,3.21871251507445e-310,3.2167133147546e-310,3.21471411443475e-310,3.2127149141149e-310,3.21071571379506e-310,3.2087165134752e-310,3.20671731315536e-310,3.2047181128355e-310,3.20271891251566e-310,3.2007197121958e-310,3.19872051187597e-310,3.1967213115561e-310,3.19472211123627e-310,3.1927229109164e-310,3.19072371059657e-310,3.18872451027673e-310,3.1867253099569e-310,3.18472610963703e-310,3.1827269093172e-310,3.18072770899733e-310,3.1787285086775e-310,3.17672930835764e-310,3.1747301080378e-310,3.17273090771794e-310,3.1707317073981e-310,3.16873250707824e-310,3.1667333067584e-310,3.16473410643855e-310,3.1627349061187e-310,3.16073570579885e-310,3.158736505479e-310,3.15673730515915e-310,3.1547381048393e-310,3.15273890451946e-310,3.1507397041996e-310,3.14874050387976e-310,3.1467413035599e-310,3.14474210324006e-310,3.1427429029202e-310,3.14074370260037e-310,3.1387445022805e-310,3.13674530196067e-310,3.1347461016408e-310,3.13274690132097e-310,3.1307477010011e-310,3.1287485006813e-310,3.12674930036143e-310,3.1247501000416e-310,3.12275089972173e-310,3.1207516994019e-310,3.11875249908203e-310,3.1167532987622e-310,3.11475409844234e-310,3.1127548981225e-310,3.11075569780264e-310,3.1087564974828e-310,3.10675729716294e-310,3.1047580968431e-310,3.10275889652325e-310,3.1007596962034e-310,3.09876049588355e-310,3.0967612955637e-310,3.09476209524385e-310,3.092762894924e-310,3.09076369460416e-310,3.0887644942843e-310,3.08676529396446e-310,3.0847660936446e-310,3.08276689332476e-310,3.0807676930049e-310,3.07876849268507e-310,3.0767692923652e-310,3.07477009204537e-310,3.0727708917255e-310,3.07077169140567e-310,3.06877249108583e-310,3.066773290766e-310,3.06477409044613e-310,3.0627748901263e-310,3.06077568980643e-310,3.0587764894866e-310,3.05677728916674e-310,3.0547780888469e-310,3.05277888852704e-310,3.0507796882072e-310,3.04878048788734e-310,3.0467812875675e-310,3.04478208724765e-310,3.0427828869278e-310,3.04078368660795e-310,3.0387844862881e-310,3.03678528596825e-310,3.0347860856484e-310,3.03278688532856e-310,3.0307876850087e-310,3.02878848468886e-310,3.026789284369e-310,3.02479008404916e-310,3.0227908837293e-310,3.02079168340947e-310,3.0187924830896e-310,3.01679328276977e-310,3.0147940824499e-310,3.01279488213007e-310,3.0107956818102e-310,3.0087964814904e-310,3.00679728117053e-310,3.0047980808507e-310,3.00279888053083e-310,3.000799680211e-310,2.99880047989113e-310,2.9968012795713e-310,2.99480207925144e-310,2.9928028789316e-310,2.99080367861174e-310,2.9888044782919e-310,2.98680527797204e-310,2.9848060776522e-310,2.98280687733235e-310,2.9808076770125e-310,2.97880847669265e-310,2.9768092763728e-310,2.97481007605295e-310,2.9728108757331e-310,2.97081167541326e-310,2.9688124750934e-310,2.96681327477356e-310,2.9648140744537e-310,2.96281487413386e-310,2.960815673814e-310,2.95881647349417e-310,2.9568172731743e-310,2.95481807285447e-310,2.9528188725346e-310,2.95081967221477e-310,2.94882047189493e-310,2.9468212715751e-310,2.94482207125523e-310,2.9428228709354e-310,2.94082367061553e-310,2.9388244702957e-310,2.93682526997584e-310,2.934826069656e-310,2.93282686933614e-310,2.9308276690163e-310,2.92882846869644e-310,2.9268292683766e-310,2.92483006805675e-310,2.9228308677369e-310,2.92083166741705e-310,2.9188324670972e-310,2.91683326677735e-310,2.9148340664575e-310,2.91283486613766e-310,2.9108356658178e-310,2.90883646549796e-310,2.9068372651781e-310,2.90483806485826e-310,2.9028388645384e-310,2.90083966421857e-310,2.8988404638987e-310,2.89684126357887e-310,2.894842063259e-310,2.89284286293917e-310,2.8908436626193e-310,2.8888444622995e-310,2.88684526197963e-310,2.8848460616598e-310,2.88284686133993e-310,2.8808476610201e-310,2.87884846070023e-310,2.8768492603804e-310,2.87485006006054e-310,2.8728508597407e-310,2.87085165942084e-310,2.868852459101e-310,2.86685325878114e-310,2.8648540584613e-310,2.86285485814145e-310,2.8608556578216e-310,2.85885645750175e-310,2.8568572571819e-310,2.85485805686205e-310,2.8528588565422e-310,2.85085965622236e-310,2.8488604559025e-310,2.84686125558266e-310,2.8448620552628e-310,2.84286285494296e-310,2.8408636546231e-310,2.83886445430327e-310,2.8368652539834e-310,2.83486605366357e-310,2.8328668533437e-310,2.83086765302387e-310,2.82886845270403e-310,2.8268692523842e-310,2.82487005206433e-310,2.8228708517445e-310,2.82087165142463e-310,2.8188724511048e-310,2.81687325078494e-310,2.8148740504651e-310,2.81287485014524e-310,2.8108756498254e-310,2.80887644950554e-310,2.8068772491857e-310,2.80487804886585e-310,2.802878848546e-310,2.80087964822615e-310,2.7988804479063e-310,2.79688124758645e-310,2.7948820472666e-310,2.79288284694676e-310,2.7908836466269e-310,2.78888444630706e-310,2.7868852459872e-310,2.78488604566736e-310,2.7828868453475e-310,2.78088764502767e-310,2.7788884447078e-310,2.77688924438797e-310,2.7748900440681e-310,2.77289084374827e-310,2.7708916434284e-310,2.76889244310858e-310,2.76689324278873e-310,2.7648940424689e-310,2.76289484214903e-310,2.7608956418292e-310,2.75889644150933e-310,2.7568972411895e-310,2.75489804086964e-310,2.7528988405498e-310,2.75089964022994e-310,2.7489004399101e-310,2.74690123959024e-310,2.7449020392704e-310,2.74290283895055e-310,2.7409036386307e-310,2.73890443831085e-310,2.736905237991e-310,2.73490603767115e-310,2.7329068373513e-310,2.73090763703146e-310,2.7289084367116e-310,2.72690923639176e-310,2.7249100360719e-310,2.72291083575206e-310,2.7209116354322e-310,2.71891243511237e-310,2.7169132347925e-310,2.71491403447267e-310,2.7129148341528e-310,2.71091563383297e-310,2.70891643351313e-310,2.7069172331933e-310,2.70491803287343e-310,2.7029188325536e-310,2.70091963223373e-310,2.6989204319139e-310,2.69692123159404e-310,2.6949220312742e-310,2.69292283095434e-310,2.6909236306345e-310,2.68892443031464e-310,2.6869252299948e-310,2.68492602967494e-310,2.6829268293551e-310,2.68092762903525e-310,2.6789284287154e-310,2.67692922839555e-310,2.6749300280757e-310,2.67293082775585e-310,2.670931627436e-310,2.66893242711616e-310,2.6669332267963e-310,2.66493402647646e-310,2.6629348261566e-310,2.66093562583676e-310,2.6589364255169e-310,2.65693722519707e-310,2.6549380248772e-310,2.65293882455737e-310,2.6509396242375e-310,2.64894042391767e-310,2.64694122359783e-310,2.644942023278e-310,2.64294282295813e-310,2.6409436226383e-310,2.63894442231843e-310,2.6369452219986e-310,2.63494602167874e-310,2.6329468213589e-310,2.63094762103904e-310,2.6289484207192e-310,2.62694922039934e-310,2.6249500200795e-310,2.62295081975965e-310,2.6209516194398e-310,2.61895241911995e-310,2.6169532188001e-310,2.61495401848025e-310,2.6129548181604e-310,2.61095561784056e-310,2.6089564175207e-310,2.60695721720086e-310,2.604958016881e-310,2.60295881656116e-310,2.6009596162413e-310,2.59896041592147e-310,2.5969612156016e-310,2.59496201528177e-310,2.5929628149619e-310,2.59096361464207e-310,2.5889644143222e-310,2.5869652140024e-310,2.58496601368253e-310,2.5829668133627e-310,2.58096761304283e-310,2.578968412723e-310,2.57696921240313e-310,2.5749700120833e-310,2.57297081176344e-310,2.5709716114436e-310,2.56897241112374e-310,2.5669732108039e-310,2.56497401048404e-310,2.5629748101642e-310,2.56097560984435e-310,2.5589764095245e-310,2.55697720920465e-310,2.5549780088848e-310,2.55297880856495e-310,2.5509796082451e-310,2.54898040792526e-310,2.5469812076054e-310,2.54498200728556e-310,2.5429828069657e-310,2.54098360664586e-310,2.538984406326e-310,2.53698520600617e-310,2.5349860056863e-310,2.53298680536647e-310,2.5309876050466e-310,2.52898840472677e-310,2.52698920440693e-310,2.5249900040871e-310,2.52299080376723e-310,2.5209916034474e-310,2.51899240312753e-310,2.5169932028077e-310,2.51499400248784e-310,2.512994802168e-310,2.51099560184814e-310,2.5089964015283e-310,2.50699720120844e-310,2.5049980008886e-310,2.50299880056875e-310,2.5009996002489e-310,2.49900039992905e-310,2.4970011996092e-310,2.49500199928935e-310,2.4930027989695e-310,2.49100359864966e-310,2.4890043983298e-310,2.48700519800996e-310,2.4850059976901e-310,2.48300679737026e-310,2.4810075970504e-310,2.47900839673057e-310,2.4770091964107e-310,2.47500999609087e-310,2.473010795771e-310,2.47101159545117e-310,2.4690123951313e-310,2.4670131948115e-310,2.46501399449163e-310,2.4630147941718e-310,2.46101559385193e-310,2.4590163935321e-310,2.45701719321223e-310,2.4550179928924e-310,2.45301879257254e-310,2.4510195922527e-310,2.44902039193284e-310,2.447021191613e-310,2.44502199129314e-310,2.4430227909733e-310,2.44102359065345e-310,2.4390243903336e-310,2.43702519001375e-310,2.4350259896939e-310,2.43302678937405e-310,2.4310275890542e-310,2.42902838873436e-310,2.4270291884145e-310,2.42502998809466e-310,2.4230307877748e-310,2.42103158745496e-310,2.4190323871351e-310,2.41703318681527e-310,2.4150339864954e-310,2.41303478617557e-310,2.4110355858557e-310,2.40903638553587e-310,2.40703718521603e-310,2.4050379848962e-310,2.40303878457633e-310,2.4010395842565e-310,2.39904038393663e-310,2.3970411836168e-310,2.39504198329694e-310,2.3930427829771e-310,2.39104358265724e-310,2.3890443823374e-310,2.38704518201754e-310,2.3850459816977e-310,2.38304678137785e-310,2.381047581058e-310,2.37904838073815e-310,2.3770491804183e-310,2.37504998009845e-310,2.3730507797786e-310,2.37105157945876e-310,2.3690523791389e-310,2.36705317881906e-310,2.3650539784992e-310,2.36305477817936e-310,2.3610555778595e-310,2.35905637753967e-310,2.3570571772198e-310,2.35505797689997e-310,2.3530587765801e-310,2.35105957626027e-310,2.3490603759404e-310,2.3470611756206e-310,2.34506197530073e-310,2.3430627749809e-310,2.34106357466103e-310,2.3390643743412e-310,2.33706517402133e-310,2.3350659737015e-310,2.33306677338164e-310,2.3310675730618e-310,2.32906837274194e-310,2.3270691724221e-310,2.32506997210224e-310,2.3230707717824e-310,2.32107157146255e-310,2.3190723711427e-310,2.31707317082285e-310,2.315073970503e-310,2.31307477018315e-310,2.3110755698633e-310,2.30907636954346e-310,2.3070771692236e-310,2.30507796890376e-310,2.3030787685839e-310,2.30107956826406e-310,2.2990803679442e-310,2.29708116762437e-310,2.2950819673045e-310,2.29308276698467e-310,2.2910835666648e-310,2.28908436634497e-310,2.28708516602513e-310,2.2850859657053e-310,2.28308676538543e-310,2.2810875650656e-310,2.27908836474573e-310,2.2770891644259e-310,2.27508996410604e-310,2.2730907637862e-310,2.27109156346634e-310,2.2690923631465e-310,2.26709316282664e-310,2.2650939625068e-310,2.26309476218695e-310,2.2610955618671e-310,2.25909636154725e-310,2.2570971612274e-310,2.25509796090755e-310,2.2530987605877e-310,2.25109956026786e-310,2.249100359948e-310,2.24710115962816e-310,2.2451019593083e-310,2.24310275898846e-310,2.2411035586686e-310,2.23910435834877e-310,2.2371051580289e-310,2.23510595770907e-310,2.2331067573892e-310,2.23110755706937e-310,2.2291083567495e-310,2.22710915642968e-310,2.22510995610983e-310,2.22311075579e-310,2.22111155547013e-310,2.2191123551503e-310,2.21711315483043e-310,2.2151139545106e-310,2.21311475419074e-310,2.2111155538709e-310,2.20911635355104e-310,2.2071171532312e-310,2.20511795291134e-310,2.2031187525915e-310,2.20111955227165e-310,2.1991203519518e-310,2.19712115163195e-310,2.1951219513121e-310,2.19312275099225e-310,2.1911235506724e-310,2.18912435035256e-310,2.1871251500327e-310,2.18512594971286e-310,2.183126749393e-310,2.18112754907316e-310,2.1791283487533e-310,2.17712914843347e-310,2.1751299481136e-310,2.17313074779377e-310,2.1711315474739e-310,2.16913234715407e-310,2.16713314683423e-310,2.1651339465144e-310,2.16313474619453e-310,2.1611355458747e-310,2.15913634555483e-310,2.157137145235e-310,2.15513794491514e-310,2.1531387445953e-310,2.15113954427544e-310,2.1491403439556e-310,2.14714114363574e-310,2.1451419433159e-310,2.14314274299605e-310,2.1411435426762e-310,2.13914434235635e-310,2.1371451420365e-310,2.13514594171665e-310,2.1331467413968e-310,2.13114754107695e-310,2.1291483407571e-310,2.12714914043726e-310,2.1251499401174e-310,2.12315073979756e-310,2.1211515394777e-310,2.11915233915786e-310,2.117153138838e-310,2.11515393851817e-310,2.1131547381983e-310,2.11115553787847e-310,2.1091563375586e-310,2.10715713723877e-310,2.10515793691893e-310,2.1031587365991e-310,2.10115953627923e-310,2.0991603359594e-310,2.09716113563953e-310,2.0951619353197e-310,2.09316273499984e-310,2.09116353468e-310,2.08916433436014e-310,2.0871651340403e-310,2.08516593372044e-310,2.0831667334006e-310,2.08116753308075e-310,2.0791683327609e-310,2.07716913244105e-310,2.0751699321212e-310,2.07317073180135e-310,2.0711715314815e-310,2.06917233116166e-310,2.0671731308418e-310,2.06517393052196e-310,2.0631747302021e-310,2.06117552988226e-310,2.0591763295624e-310,2.05717712924257e-310,2.0551779289227e-310,2.05317872860287e-310,2.051179528283e-310,2.04918032796317e-310,2.04718112764332e-310,2.0451819273235e-310,2.04318272700363e-310,2.0411835266838e-310,2.03918432636393e-310,2.0371851260441e-310,2.03518592572423e-310,2.0331867254044e-310,2.03118752508454e-310,2.0291883247647e-310,2.02718912444484e-310,2.025189924125e-310,2.02319072380514e-310,2.0211915234853e-310,2.01919232316545e-310,2.0171931228456e-310,2.01519392252575e-310,2.0131947222059e-310,2.01119552188605e-310,2.0091963215662e-310,2.00719712124636e-310,2.0051979209265e-310,2.00319872060666e-310,2.0011995202868e-310,1.99920031996696e-310,1.9972011196471e-310,1.99520191932727e-310,1.9932027190074e-310,1.99120351868757e-310,1.9892043183677e-310,1.98720511804787e-310,1.98520591772803e-310,1.9832067174082e-310,1.98120751708833e-310,1.9792083167685e-310,1.97720911644863e-310,1.9752099161288e-310,1.97321071580894e-310,1.9712115154891e-310,1.96921231516924e-310,1.9672131148494e-310,1.96521391452954e-310,1.9632147142097e-310,1.96121551388985e-310,1.95921631357e-310,1.95721711325015e-310,1.9552179129303e-310,1.95321871261045e-310,1.9512195122906e-310,1.94922031197076e-310,1.9472211116509e-310,1.94522191133106e-310,1.9432227110112e-310,1.94122351069136e-310,1.9392243103715e-310,1.93722511005167e-310,1.9352259097318e-310,1.93322670941197e-310,1.9312275090921e-310,1.92922830877227e-310,1.9272291084524e-310,1.9252299081326e-310,1.92323070781273e-310,1.9212315074929e-310,1.91923230717303e-310,1.9172331068532e-310,1.91523390653333e-310,1.9132347062135e-310,1.91123550589364e-310,1.9092363055738e-310,1.90723710525394e-310,1.9052379049341e-310,1.90323870461424e-310,1.9012395042944e-310,1.89924030397455e-310,1.8972411036547e-310,1.89524190333485e-310,1.893242703015e-310,1.89124350269515e-310,1.8892443023753e-310,1.88724510205546e-310,1.8852459017356e-310,1.88324670141576e-310,1.8812475010959e-310,1.87924830077606e-310,1.8772491004562e-310,1.87524990013637e-310,1.8732506998165e-310,1.87125149949667e-310,1.8692522991768e-310,1.86725309885697e-310,1.86525389853713e-310,1.8632546982173e-310,1.86125549789743e-310,1.8592562975776e-310,1.85725709725773e-310,1.8552578969379e-310,1.85325869661804e-310,1.8512594962982e-310,1.84926029597834e-310,1.8472610956585e-310,1.84526189533864e-310,1.8432626950188e-310,1.84126349469895e-310,1.8392642943791e-310,1.83726509405925e-310,1.8352658937394e-310,1.83326669341955e-310,1.8312674930997e-310,1.82926829277986e-310,1.82726909246e-310,1.82526989214016e-310,1.8232706918203e-310,1.82127149150046e-310,1.8192722911806e-310,1.81727309086077e-310,1.8152738905409e-310,1.81327469022107e-310,1.8112754899012e-310,1.80927628958137e-310,1.8072770892615e-310,1.8052778889417e-310,1.80327868862183e-310,1.801279488302e-310,1.79928028798213e-310,1.7972810876623e-310,1.79528188734243e-310,1.7932826870226e-310,1.79128348670274e-310,1.7892842863829e-310,1.78728508606304e-310,1.7852858857432e-310,1.78328668542334e-310,1.7812874851035e-310,1.77928828478365e-310,1.7772890844638e-310,1.77528988414395e-310,1.7732906838241e-310,1.77129148350425e-310,1.7692922831844e-310,1.76729308286456e-310,1.7652938825447e-310,1.76329468222486e-310,1.761295481905e-310,1.75929628158516e-310,1.7572970812653e-310,1.75529788094547e-310,1.7532986806256e-310,1.75129948030577e-310,1.7493002799859e-310,1.74730107966607e-310,1.74530187934623e-310,1.7433026790264e-310,1.74130347870653e-310,1.7393042783867e-310,1.73730507806683e-310,1.735305877747e-310,1.73330667742714e-310,1.7313074771073e-310,1.72930827678744e-310,1.7273090764676e-310,1.72530987614774e-310,1.7233106758279e-310,1.72131147550805e-310,1.7193122751882e-310,1.71731307486835e-310,1.7153138745485e-310,1.71331467422865e-310,1.7113154739088e-310,1.70931627358896e-310,1.7073170732691e-310,1.70531787294926e-310,1.7033186726294e-310,1.70131947230956e-310,1.6993202719897e-310,1.69732107166987e-310,1.69532187135e-310,1.69332267103017e-310,1.6913234707103e-310,1.68932427039047e-310,1.6873250700706e-310,1.68532586975078e-310,1.68332666943093e-310,1.6813274691111e-310,1.67932826879123e-310,1.6773290684714e-310,1.67532986815153e-310,1.6733306678317e-310,1.67133146751184e-310,1.669332267192e-310,1.66733306687214e-310,1.6653338665523e-310,1.66333466623244e-310,1.6613354659126e-310,1.65933626559275e-310,1.6573370652729e-310,1.65533786495305e-310,1.6533386646332e-310,1.65133946431335e-310,1.6493402639935e-310,1.64734106367366e-310,1.6453418633538e-310,1.64334266303396e-310,1.6413434627141e-310,1.63934426239426e-310,1.6373450620744e-310,1.63534586175457e-310,1.6333466614347e-310,1.63134746111487e-310,1.629348260795e-310,1.62734906047517e-310,1.62534986015533e-310,1.6233506598355e-310,1.62135145951563e-310,1.6193522591958e-310,1.61735305887593e-310,1.6153538585561e-310,1.61335465823624e-310,1.6113554579164e-310,1.60935625759654e-310,1.6073570572767e-310,1.60535785695684e-310,1.603358656637e-310,1.60135945631715e-310,1.5993602559973e-310,1.59736105567745e-310,1.5953618553576e-310,1.59336265503775e-310,1.5913634547179e-310,1.58936425439805e-310,1.5873650540782e-310,1.58536585375836e-310,1.5833666534385e-310,1.58136745311866e-310,1.5793682527988e-310,1.57736905247896e-310,1.5753698521591e-310,1.57337065183927e-310,1.5713714515194e-310,1.56937225119957e-310,1.5673730508797e-310,1.56537385055987e-310,1.56337465024003e-310,1.5613754499202e-310,1.55937624960033e-310,1.5573770492805e-310,1.55537784896063e-310,1.5533786486408e-310,1.55137944832094e-310,1.5493802480011e-310,1.54738104768124e-310,1.5453818473614e-310,1.54338264704154e-310,1.5413834467217e-310,1.53938424640185e-310,1.537385046082e-310,1.53538584576215e-310,1.5333866454423e-310,1.53138744512245e-310,1.5293882448026e-310,1.52738904448276e-310,1.5253898441629e-310,1.52339064384306e-310,1.5213914435232e-310,1.51939224320336e-310,1.5173930428835e-310,1.51539384256367e-310,1.5133946422438e-310,1.51139544192397e-310,1.5093962416041e-310,1.50739704128427e-310,1.50539784096442e-310,1.5033986406446e-310,1.50139944032473e-310,1.4994002400049e-310,1.49740103968503e-310,1.4954018393652e-310,1.49340263904533e-310,1.4914034387255e-310,1.48940423840564e-310,1.4874050380858e-310,1.48540583776594e-310,1.4834066374461e-310,1.48140743712624e-310,1.4794082368064e-310,1.47740903648655e-310,1.4754098361667e-310,1.47341063584685e-310,1.471411435527e-310,1.46941223520715e-310,1.4674130348873e-310,1.46541383456746e-310,1.4634146342476e-310,1.46141543392776e-310,1.4594162336079e-310,1.45741703328806e-310,1.4554178329682e-310,1.45341863264837e-310,1.4514194323285e-310,1.44942023200867e-310,1.4474210316888e-310,1.44542183136897e-310,1.44342263104913e-310,1.4414234307293e-310,1.43942423040943e-310,1.4374250300896e-310,1.43542582976973e-310,1.4334266294499e-310,1.43142742913004e-310,1.4294282288102e-310,1.42742902849034e-310,1.4254298281705e-310,1.42343062785064e-310,1.4214314275308e-310,1.41943222721095e-310,1.4174330268911e-310,1.41543382657125e-310,1.4134346262514e-310,1.41143542593155e-310,1.4094362256117e-310,1.40743702529186e-310,1.405437824972e-310,1.40343862465216e-310,1.4014394243323e-310,1.39944022401246e-310,1.3974410236926e-310,1.39544182337277e-310,1.3934426230529e-310,1.39144342273307e-310,1.3894442224132e-310,1.38744502209337e-310,1.3854458217735e-310,1.3834466214537e-310,1.38144742113383e-310,1.379448220814e-310,1.37744902049413e-310,1.3754498201743e-310,1.37345061985443e-310,1.3714514195346e-310,1.36945221921474e-310,1.3674530188949e-310,1.36545381857504e-310,1.3634546182552e-310,1.36145541793534e-310,1.3594562176155e-310,1.35745701729565e-310,1.3554578169758e-310,1.35345861665595e-310,1.3514594163361e-310,1.34946021601625e-310,1.3474610156964e-310,1.34546181537656e-310,1.3434626150567e-310,1.34146341473686e-310,1.339464214417e-310,1.33746501409716e-310,1.3354658137773e-310,1.33346661345747e-310,1.3314674131376e-310,1.32946821281777e-310,1.3274690124979e-310,1.32546981217807e-310,1.32347061185823e-310,1.3214714115384e-310,1.31947221121853e-310,1.3174730108987e-310,1.31547381057883e-310,1.313474610259e-310,1.31147540993914e-310,1.3094762096193e-310,1.30747700929944e-310,1.3054778089796e-310,1.30347860865974e-310,1.3014794083399e-310,1.29948020802005e-310,1.2974810077002e-310,1.29548180738035e-310,1.2934826070605e-310,1.29148340674065e-310,1.2894842064208e-310,1.28748500610096e-310,1.2854858057811e-310,1.28348660546126e-310,1.2814874051414e-310,1.27948820482156e-310,1.2774890045017e-310,1.27548980418187e-310,1.273490603862e-310,1.27149140354217e-310,1.2694922032223e-310,1.26749300290247e-310,1.2654938025826e-310,1.2634946022628e-310,1.26149540194293e-310,1.2594962016231e-310,1.25749700130323e-310,1.2554978009834e-310,1.25349860066353e-310,1.2514994003437e-310,1.24950020002384e-310,1.247500999704e-310,1.24550179938414e-310,1.2435025990643e-310,1.24150339874444e-310,1.2395041984246e-310,1.23750499810475e-310,1.2355057977849e-310,1.23350659746505e-310,1.2315073971452e-310,1.22950819682535e-310,1.2275089965055e-310,1.22550979618566e-310,1.2235105958658e-310,1.22151139554596e-310,1.2195121952261e-310,1.21751299490626e-310,1.2155137945864e-310,1.21351459426657e-310,1.2115153939467e-310,1.20951619362687e-310,1.207516993307e-310,1.20551779298717e-310,1.20351859266733e-310,1.2015193923475e-310,1.19952019202763e-310,1.1975209917078e-310,1.19552179138793e-310,1.1935225910681e-310,1.19152339074824e-310,1.1895241904284e-310,1.18752499010854e-310,1.1855257897887e-310,1.18352658946884e-310,1.181527389149e-310,1.17952818882915e-310,1.1775289885093e-310,1.17552978818945e-310,1.1735305878696e-310,1.17153138754975e-310,1.1695321872299e-310,1.16753298691006e-310,1.1655337865902e-310,1.16353458627036e-310,1.1615353859505e-310,1.15953618563066e-310,1.1575369853108e-310,1.15553778499097e-310,1.1535385846711e-310,1.15153938435127e-310,1.1495401840314e-310,1.14754098371157e-310,1.1455417833917e-310,1.1435425830719e-310,1.14154338275203e-310,1.1395441824322e-310,1.13754498211233e-310,1.1355457817925e-310,1.13354658147263e-310,1.1315473811528e-310,1.12954818083294e-310,1.1275489805131e-310,1.12554978019324e-310,1.1235505798734e-310,1.12155137955354e-310,1.1195521792337e-310,1.11755297891385e-310,1.115553778594e-310,1.11355457827415e-310,1.1115553779543e-310,1.10955617763445e-310,1.1075569773146e-310,1.10555777699476e-310,1.1035585766749e-310,1.10155937635506e-310,1.0995601760352e-310,1.09756097571536e-310,1.0955617753955e-310,1.09356257507567e-310,1.0915633747558e-310,1.08956417443597e-310,1.0875649741161e-310,1.08556577379627e-310,1.08356657347643e-310,1.0815673731566e-310,1.07956817283673e-310,1.0775689725169e-310,1.07556977219703e-310,1.0735705718772e-310,1.07157137155734e-310,1.0695721712375e-310,1.06757297091764e-310,1.0655737705978e-310,1.06357457027794e-310,1.0615753699581e-310,1.05957616963825e-310,1.0575769693184e-310,1.05557776899855e-310,1.0535785686787e-310,1.05157936835885e-310,1.049580168039e-310,1.04758096771916e-310,1.0455817673993e-310,1.04358256707946e-310,1.0415833667596e-310,1.03958416643976e-310,1.0375849661199e-310,1.03558576580006e-310,1.0335865654802e-310,1.03158736516037e-310,1.0295881648405e-310,1.02758896452067e-310,1.0255897642008e-310,1.02359056388097e-310,1.02159136356113e-310,1.0195921632413e-310,1.01759296292143e-310,1.0155937626016e-310,1.01359456228173e-310,1.0115953619619e-310,1.00959616164204e-310,1.0075969613222e-310,1.00559776100234e-310,1.0035985606825e-310,1.00159936036264e-310,9.996001600428e-311,9.9760095972295e-311,9.956017594031e-311,9.9360255908325e-311,9.916033587634e-311,9.8960415844355e-311,9.876049581237e-311,9.8560575780386e-311,9.83606557484e-311,9.8160735716416e-311,9.796081568443e-311,9.7760895652446e-311,9.756097562046e-311,9.7361055588477e-311,9.716113555649e-311,9.6961215524507e-311,9.676129549252e-311,9.6561375460537e-311,9.6361455428552e-311,9.616153539657e-311,9.5961615364583e-311,9.57616953326e-311,9.5561775300613e-311,9.536185526863e-311,9.5161935236643e-311,9.496201520466e-311,9.4762095172674e-311,9.456217514069e-311,9.4362255108704e-311,9.416233507672e-311,9.3962415044734e-311,9.376249501275e-311,9.3562574980765e-311,9.336265494878e-311,9.3162734916795e-311,9.296281488481e-311,9.2762894852825e-311,9.256297482084e-311,9.2363054788856e-311,9.216313475687e-311,9.1963214724886e-311,9.17632946929e-311,9.1563374660916e-311,9.136345462893e-311,9.1163534596947e-311,9.096361456496e-311,9.0763694532977e-311,9.056377450099e-311,9.0363854469007e-311,9.0163934437023e-311,8.996401440504e-311,8.9764094373053e-311,8.956417434107e-311,8.9364254309083e-311,8.91643342771e-311,8.8964414245114e-311,8.876449421313e-311,8.8564574181144e-311,8.836465414916e-311,8.8164734117174e-311,8.796481408519e-311,8.7764894053205e-311,8.756497402122e-311,8.7365053989235e-311,8.716513395725e-311,8.6965213925265e-311,8.676529389328e-311,8.6565373861296e-311,8.636545382931e-311,8.6165533797326e-311,8.596561376534e-311,8.5765693733356e-311,8.556577370137e-311,8.5365853669387e-311,8.51659336374e-311,8.4966013605417e-311,8.476609357343e-311,8.4566173541447e-311,8.436625350946e-311,8.416633347748e-311,8.3966413445493e-311,8.376649341351e-311,8.3566573381523e-311,8.336665334954e-311,8.3166733317553e-311,8.296681328557e-311,8.2766893253584e-311,8.25669732216e-311,8.2367053189614e-311,8.216713315763e-311,8.1967213125644e-311,8.176729309366e-311,8.1567373061675e-311,8.136745302969e-311,8.1167532997705e-311,8.096761296572e-311,8.0767692933735e-311,8.056777290175e-311,8.0367852869766e-311,8.016793283778e-311,7.9968012805796e-311,7.976809277381e-311,7.9568172741826e-311,7.936825270984e-311,7.9168332677857e-311,7.896841264587e-311,7.8768492613887e-311,7.85685725819e-311,7.8368652549917e-311,7.8168732517933e-311,7.796881248595e-311,7.7768892453963e-311,7.756897242198e-311,7.7369052389993e-311,7.716913235801e-311,7.6969212326024e-311,7.676929229404e-311,7.6569372262054e-311,7.636945223007e-311,7.6169532198084e-311,7.59696121661e-311,7.5769692134115e-311,7.556977210213e-311,7.5369852070145e-311,7.516993203816e-311,7.4970012006175e-311,7.477009197419e-311,7.4570171942206e-311,7.437025191022e-311,7.4170331878236e-311,7.397041184625e-311,7.3770491814266e-311,7.357057178228e-311,7.3370651750297e-311,7.317073171831e-311,7.2970811686327e-311,7.277089165434e-311,7.2570971622357e-311,7.237105159037e-311,7.217113155839e-311,7.1971211526403e-311,7.177129149442e-311,7.1571371462433e-311,7.137145143045e-311,7.1171531398463e-311,7.097161136648e-311,7.0771691334494e-311,7.057177130251e-311,7.0371851270524e-311,7.017193123854e-311,6.9972011206554e-311,6.977209117457e-311,6.9572171142585e-311,6.93722511106e-311,6.9172331078615e-311,6.897241104663e-311,6.8772491014645e-311,6.857257098266e-311,6.8372650950676e-311,6.817273091869e-311,6.7972810886706e-311,6.777289085472e-311,6.7572970822736e-311,6.737305079075e-311,6.7173130758767e-311,6.697321072678e-311,6.6773290694797e-311,6.657337066281e-311,6.6373450630827e-311,6.6173530598843e-311,6.597361056686e-311,6.5773690534873e-311,6.557377050289e-311,6.5373850470903e-311,6.517393043892e-311,6.4974010406934e-311,6.477409037495e-311,6.4574170342964e-311,6.437425031098e-311,6.4174330278994e-311,6.397441024701e-311,6.3774490215025e-311,6.357457018304e-311,6.3374650151055e-311,6.317473011907e-311,6.2974810087085e-311,6.27748900551e-311,6.2574970023116e-311,6.237504999113e-311,6.2175129959146e-311,6.197520992716e-311,6.1775289895176e-311,6.157536986319e-311,6.1375449831207e-311,6.117552979922e-311,6.0975609767237e-311,6.077568973525e-311,6.0575769703267e-311,6.037584967128e-311,6.01759296393e-311,5.9976009607313e-311,5.977608957533e-311,5.9576169543343e-311,5.937624951136e-311,5.9176329479373e-311,5.897640944739e-311,5.8776489415404e-311,5.857656938342e-311,5.8376649351434e-311,5.817672931945e-311,5.7976809287464e-311,5.777688925548e-311,5.7576969223495e-311,5.737704919151e-311,5.7177129159525e-311,5.697720912754e-311,5.6777289095555e-311,5.657736906357e-311,5.6377449031586e-311,5.61775289996e-311,5.5977608967616e-311,5.577768893563e-311,5.5577768903646e-311,5.537784887166e-311,5.5177928839677e-311,5.497800880769e-311,5.4778088775707e-311,5.457816874372e-311,5.4378248711737e-311,5.4178328679753e-311,5.397840864777e-311,5.3778488615783e-311,5.35785685838e-311,5.3378648551813e-311,5.317872851983e-311,5.2978808487844e-311,5.277888845586e-311,5.2578968423874e-311,5.237904839189e-311,5.2179128359904e-311,5.197920832792e-311,5.1779288295935e-311,5.157936826395e-311,5.1379448231965e-311,5.117952819998e-311,5.0979608167995e-311,5.077968813601e-311,5.0579768104026e-311,5.037984807204e-311,5.0179928040056e-311,4.998000800807e-311,4.9780087976086e-311,4.95801679441e-311,4.9380247912116e-311,4.918032788013e-311,4.8980407848147e-311,4.878048781616e-311,4.8580567784177e-311,4.838064775219e-311,4.8180727720207e-311,4.7980807688223e-311,4.778088765624e-311,4.7580967624253e-311,4.738104759227e-311,4.7181127560283e-311,4.69812075283e-311,4.6781287496314e-311,4.658136746433e-311,4.6381447432344e-311,4.618152740036e-311,4.5981607368374e-311,4.578168733639e-311,4.5581767304405e-311,4.538184727242e-311,4.5181927240435e-311,4.498200720845e-311,4.4782087176465e-311,4.458216714448e-311,4.4382247112496e-311,4.418232708051e-311,4.3982407048526e-311,4.378248701654e-311,4.3582566984556e-311,4.338264695257e-311,4.3182726920587e-311,4.29828068886e-311,4.2782886856617e-311,4.258296682463e-311,4.2383046792647e-311,4.2183126760662e-311,4.198320672868e-311,4.1783286696693e-311,4.158336666471e-311,4.1383446632723e-311,4.118352660074e-311,4.0983606568753e-311,4.078368653677e-311,4.0583766504784e-311,4.03838464728e-311,4.0183926440814e-311,3.998400640883e-311,3.9784086376844e-311,3.958416634486e-311,3.9384246312875e-311,3.918432628089e-311,3.8984406248905e-311,3.878448621692e-311,3.8584566184935e-311,3.838464615295e-311,3.8184726120966e-311,3.798480608898e-311,3.7784886056996e-311,3.758496602501e-311,3.7385045993026e-311,3.718512596104e-311,3.6985205929057e-311,3.678528589707e-311,3.6585365865087e-311,3.63854458331e-311,3.6185525801117e-311,3.5985605769133e-311,3.578568573715e-311,3.5585765705163e-311,3.538584567318e-311,3.5185925641193e-311,3.498600560921e-311,3.4786085577224e-311,3.458616554524e-311,3.4386245513254e-311,3.418632548127e-311,3.3986405449284e-311,3.37864854173e-311,3.3586565385315e-311,3.338664535333e-311,3.3186725321345e-311,3.298680528936e-311,3.2786885257375e-311,3.258696522539e-311,3.2387045193406e-311,3.218712516142e-311,3.1987205129436e-311,3.178728509745e-311,3.1587365065466e-311,3.138744503348e-311,3.1187525001497e-311,3.098760496951e-311,3.0787684937527e-311,3.058776490554e-311,3.0387844873557e-311,3.018792484157e-311,2.998800480959e-311,2.9788084777603e-311,2.958816474562e-311,2.9388244713633e-311,2.918832468165e-311,2.8988404649663e-311,2.878848461768e-311,2.8588564585694e-311,2.838864455371e-311,2.8188724521724e-311,2.798880448974e-311,2.7788884457754e-311,2.758896442577e-311,2.7389044393785e-311,2.71891243618e-311,2.6989204329815e-311,2.678928429783e-311,2.6589364265845e-311,2.638944423386e-311,2.6189524201876e-311,2.598960416989e-311,2.5789684137906e-311,2.558976410592e-311,2.5389844073936e-311,2.518992404195e-311,2.4990004009967e-311,2.479008397798e-311,2.4590163945997e-311,2.439024391401e-311,2.4190323882027e-311,2.3990403850043e-311,2.379048381806e-311,2.3590563786073e-311,2.339064375409e-311,2.3190723722103e-311,2.299080369012e-311,2.2790883658134e-311,2.259096362615e-311,2.2391043594164e-311,2.219112356218e-311,2.1991203530194e-311,2.179128349821e-311,2.1591363466225e-311,2.139144343424e-311,2.1191523402255e-311,2.099160337027e-311,2.0791683338285e-311,2.05917633063e-311,2.0391843274316e-311,2.019192324233e-311,1.9992003210346e-311,1.979208317836e-311,1.9592163146376e-311,1.939224311439e-311,1.9192323082407e-311,1.899240305042e-311,1.8792483018437e-311,1.859256298645e-311,1.8392642954467e-311,1.819272292248e-311,1.79928028905e-311,1.7792882858513e-311,1.759296282653e-311,1.7393042794543e-311,1.719312276256e-311,1.6993202730573e-311,1.679328269859e-311,1.6593362666604e-311,1.639344263462e-311,1.6193522602634e-311,1.599360257065e-311,1.5793682538664e-311,1.559376250668e-311,1.5393842474695e-311,1.519392244271e-311,1.4994002410725e-311,1.479408237874e-311,1.4594162346755e-311,1.439424231477e-311,1.4194322282786e-311,1.39944022508e-311,1.3794482218816e-311,1.359456218683e-311,1.3394642154846e-311,1.319472212286e-311,1.2994802090877e-311,1.279488205889e-311,1.2594962026907e-311,1.239504199492e-311,1.2195121962937e-311,1.1995201930953e-311,1.179528189897e-311,1.1595361866983e-311,1.1395441835e-311,1.1195521803013e-311,1.099560177103e-311,1.0795681739044e-311,1.059576170706e-311,1.0395841675074e-311,1.019592164309e-311,9.996001611104e-312,9.79608157912e-312,9.596161547135e-312,9.39624151515e-312,9.196321483165e-312,8.99640145118e-312,8.796481419195e-312,8.59656138721e-312,8.396641355226e-312,8.19672132324e-312,7.996801291256e-312,7.79688125927e-312,7.596961227286e-312,7.3970411953e-312,7.197121163317e-312,6.99720113133e-312,6.797281099347e-312,6.59736106736e-312,6.397441035377e-312,6.19752100339e-312,5.99760097141e-312,5.797680939423e-312,5.59776090744e-312,5.397840875453e-312,5.19792084347e-312,4.998000811483e-312,4.7980807795e-312,4.598160747514e-312,4.39824071553e-312,4.198320683544e-312,3.99840065156e-312,3.798480619574e-312,3.59856058759e-312,3.398640555605e-312,3.19872052362e-312,2.998800491635e-312,2.79888045965e-312,2.598960427665e-312,2.39904039568e-312,2.199120363696e-312,1.99920033171e-312,1.799280299726e-312,1.59936026774e-312,1.399440235756e-312,1.19952020377e-312,9.99600171787e-313,7.996801398e-313,5.99760107817e-313,3.9984007583e-313,1.99920043847e-313,1.1863e-320]}

},{}],49:[function(require,module,exports){
module.exports={"expected":[1.772453850905516e-150,1.7722766675359347e-150,1.7720994664506735e-150,1.771922247644418e-150,1.7717450111118503e-150,1.77156775684765e-150,1.7713904848464944e-150,1.7712131951030578e-150,1.771035887612012e-150,1.770858562368026e-150,1.770681219365766e-150,1.770503858599896e-150,1.7703264800650766e-150,1.7701490837559667e-150,1.7699716696672214e-150,1.7697942377934948e-150,1.769616788129436e-150,1.7694393206696932e-150,1.7692618354089114e-150,1.7690843323417325e-150,1.7689068114627965e-150,1.7687292727667403e-150,1.768551716248198e-150,1.7683741419018008e-150,1.768196549722178e-150,1.7680189397039555e-150,1.7678413118417568e-150,1.7676636661302024e-150,1.7674860025639105e-150,1.7673083211374964e-150,1.7671306218455726e-150,1.7669529046827493e-150,1.7667751696436333e-150,1.766597416722829e-150,1.7664196459149388e-150,1.766241857214561e-150,1.7660640506162923e-150,1.765886226114726e-150,1.7657083837044536e-150,1.7655305233800627e-150,1.7653526451361388e-150,1.765174748967265e-150,1.7649968348680207e-150,1.7648189028329832e-150,1.7646409528567276e-150,1.764462984933825e-150,1.7642849990588448e-150,1.764106995226353e-150,1.7639289734309136e-150,1.763750933667087e-150,1.7635728759294313e-150,1.763394800212502e-150,1.7632167065108512e-150,1.7630385948190292e-150,1.7628604651315834e-150,1.762682317443057e-150,1.7625041517479925e-150,1.7623259680409282e-150,1.7621477663164002e-150,1.7619695465689418e-150,1.7617913087930837e-150,1.7616130529833535e-150,1.7614347791342758e-150,1.7612564872403734e-150,1.7610781772961652e-150,1.7608998492961683e-150,1.7607215032348963e-150,1.76054313910686e-150,1.760364756906568e-150,1.760186356628526e-150,1.7600079382672368e-150,1.7598295018171998e-150,1.7596510472729126e-150,1.7594725746288695e-150,1.7592940838795617e-150,1.7591155750194786e-150,1.7589370480431058e-150,1.7587585029449266e-150,1.7585799397194215e-150,1.7584013583610676e-150,1.7582227588643403e-150,1.758044141223711e-150,1.7578655054336494e-150,1.7576868514886218e-150,1.7575081793830913e-150,1.757329489111519e-150,1.757150780668363e-150,1.7569720540480778e-150,1.7567933092451158e-150,1.756614546253927e-150,1.7564357650689576e-150,1.7562569656846513e-150,1.7560781480954495e-150,1.7558993122957897e-150,1.7557204582801076e-150,1.7555415860428359e-150,1.7553626955784038e-150,1.7551837868812382e-150,1.7550048599457634e-150,1.7548259147664e-150,1.7546469513375664e-150,1.7544679696536785e-150,1.7542889697091484e-150,1.7541099514983857e-150,1.7539309150157977e-150,1.7537518602557883e-150,1.7535727872127584e-150,1.7533936958811066e-150,1.753214586255228e-150,1.7530354583295154e-150,1.7528563120983588e-150,1.7526771475561444e-150,1.7524979646972567e-150,1.7523187635160766e-150,1.7521395440069822e-150,1.7519603061643491e-150,1.7517810499825499e-150,1.7516017754559536e-150,1.7514224825789272e-150,1.751243171345835e-150,1.7510638417510372e-150,1.7508844937888923e-150,1.7507051274537555e-150,1.7505257427399786e-150,1.7503463396419117e-150,1.7501669181539007e-150,1.7499874782702892e-150,1.7498080199854183e-150,1.7496285432936258e-150,1.749449048189246e-150,1.7492695346666115e-150,1.749090002720051e-150,1.7489104523438905e-150,1.7487308835324536e-150,1.7485512962800605e-150,1.7483716905810286e-150,1.7481920664296725e-150,1.7480124238203038e-150,1.7478327627472306e-150,1.7476530832047592e-150,1.7474733851871925e-150,1.7472936686888297e-150,1.7471139337039683e-150,1.7469341802269023e-150,1.7467544082519222e-150,1.7465746177733166e-150,1.7463948087853708e-150,1.7462149812823666e-150,1.7460351352585833e-150,1.745855270708298e-150,1.745675387625783e-150,1.7454954860053098e-150,1.745315565841145e-150,1.745135627127554e-150,1.7449556698587978e-150,1.7447756940291348e-150,1.7445956996328214e-150,1.7444156866641098e-150,1.74423565511725e-150,1.7440556049864885e-150,1.7438755362660692e-150,1.7436954489502331e-150,1.7435153430332177e-150,1.7433352185092583e-150,1.7431550753725863e-150,1.7429749136174312e-150,1.7427947332380185e-150,1.7426145342285713e-150,1.7424343165833093e-150,1.7422540802964502e-150,1.742073825362207e-150,1.7418935517747912e-150,1.741713259528411e-150,1.7415329486172706e-150,1.741352619035573e-150,1.7411722707775167e-150,1.7409919038372977e-150,1.7408115182091089e-150,1.7406311138871404e-150,1.7404506908655788e-150,1.7402702491386086e-150,1.7400897887004107e-150,1.7399093095451623e-150,1.739728811667039e-150,1.7395482950602125e-150,1.7393677597188515e-150,1.7391872056371218e-150,1.7390066328091866e-150,1.738826041229205e-150,1.7386454308913343e-150,1.738464801789728e-150,1.7382841539185364e-150,1.7381034872719075e-150,1.737922801843986e-150,1.737742097628913e-150,1.737561374620827e-150,1.7373806328138642e-150,1.737199872202156e-150,1.737019092779832e-150,1.736838294541019e-150,1.7366574774798396e-150,1.736476641590414e-150,1.73629578686686e-150,1.7361149133032907e-150,1.7359340208938175e-150,1.7357531096325482e-150,1.7355721795135878e-150,1.7353912305310376e-150,1.735210262678997e-150,1.735029275951561e-150,1.7348482703428223e-150,1.7346672458468704e-150,1.7344862024577914e-150,1.734305140169669e-150,1.7341240589765829e-150,1.7339429588726105e-150,1.7337618398518256e-150,1.7335807019082993e-150,1.7333995450360993e-150,1.7332183692292903e-150,1.7330371744819337e-150,1.732855960788088e-150,1.7326747281418095e-150,1.732493476537149e-150,1.7323122059681566e-150,1.7321309164288784e-150,1.7319496079133567e-150,1.7317682804156317e-150,1.7315869339297403e-150,1.7314055684497157e-150,1.731224183969588e-150,1.7310427804833858e-150,1.730861357985132e-150,1.730679916468848e-150,1.7304984559285524e-150,1.730316976358259e-150,1.73013547775198e-150,1.729953960103724e-150,1.7297724234074957e-150,1.729590867657298e-150,1.7294092928471297e-150,1.7292276989709866e-150,1.7290460860228617e-150,1.7288644539967445e-150,1.7286828028866214e-150,1.7285011326864759e-150,1.7283194433902878e-150,1.7281377349920343e-150,1.7279560074856891e-150,1.727774260865223e-150,1.727592495124603e-150,1.7274107102577938e-150,1.7272289062587565e-150,1.7270470831214488e-150,1.7268652408398255e-150,1.7266833794078381e-150,1.7265014988194353e-150,1.726319599068562e-150,1.7261376801491605e-150,1.7259557420551692e-150,1.725773784780524e-150,1.725591808319157e-150,1.7254098126649976e-150,1.7252277978119718e-150,1.7250457637540027e-150,1.7248637104850095e-150,1.7246816379989088e-150,1.7244995462896137e-150,1.724317435351034e-150,1.7241353051770767e-150,1.7239531557616455e-150,1.7237709870986402e-150,1.7235887991819582e-150,1.7234065920054932e-150,1.7232243655631362e-150,1.7230421198487742e-150,1.7228598548562914e-150,1.722677570579569e-150,1.7224952670124846e-150,1.7223129441489122e-150,1.7221306019827238e-150,1.721948240507787e-150,1.7217658597179662e-150,1.7215834596071233e-150,1.7214010401691163e-150,1.7212186013978003e-150,1.7210361432870268e-150,1.7208536658306447e-150,1.7206711690224987e-150,1.7204886528564308e-150,1.72030611732628e-150,1.7201235624258812e-150,1.719940988149067e-150,1.719758394489666e-150,1.7195757814415034e-150,1.7193931489984023e-150,1.719210497154181e-150,1.7190278259026555e-150,1.718845135237638e-150,1.718662425152938e-150,1.7184796956423615e-150,1.7182969466997105e-150,1.7181141783187843e-150,1.7179313904933795e-150,1.717748583217288e-150,1.7175657564842997e-150,1.7173829102882003e-150,1.7172000446227729e-150,1.7170171594817967e-150,1.7168342548590474e-150,1.7166513307482988e-150,1.7164683871433197e-150,1.7162854240378765e-150,1.716102441425732e-150,1.7159194393006457e-150,1.7157364176563738e-150,1.715553376486669e-150,1.715370315785281e-150,1.7151872355459562e-150,1.7150041357624371e-150,1.714821016428463e-150,1.714637877537771e-150,1.714454719084093e-150,1.7142715410611589e-150,1.7140883434626947e-150,1.7139051262824233e-150,1.7137218895140637e-150,1.7135386331513326e-150,1.7133553571879424e-150,1.7131720616176023e-150,1.7129887464340186e-150,1.7128054116308937e-150,1.7126220572019263e-150,1.7124386831408133e-150,1.7122552894412465e-150,1.7120718760969154e-150,1.7118884431015052e-150,1.7117049904486988e-150,1.7115215181321746e-150,1.7113380261456086e-150,1.711154514482673e-150,1.7109709831370363e-150,1.710787432102364e-150,1.7106038613723182e-150,1.7104202709405573e-150,1.7102366608007365e-150,1.7100530309465077e-150,1.7098693813715194e-150,1.7096857120694161e-150,1.7095020230338398e-150,1.709318314258428e-150,1.7091345857368165e-150,1.7089508374626356e-150,1.7087670694295133e-150,1.7085832816310745e-150,1.7083994740609397e-150,1.708215646712727e-150,1.70803179958005e-150,1.7078479326565198e-150,1.7076640459357435e-150,1.7074801394113247e-150,1.7072962130768643e-150,1.7071122669259585e-150,1.7069283009522016e-150,1.7067443151491831e-150,1.7065603095104898e-150,1.7063762840297044e-150,1.706192238700407e-150,1.7060081735161736e-150,1.705824088470577e-150,1.7056399835571865e-150,1.7054558587695676e-150,1.705271714101283e-150,1.7050875495458914e-150,1.704903365096948e-150,1.7047191607480044e-150,1.7045349364926098e-150,1.7043506923243083e-150,1.7041664282366417e-150,1.703982144223148e-150,1.7037978402773615e-150,1.7036135163928133e-150,1.7034291725630302e-150,1.703244808781537e-150,1.7030604250418535e-150,1.7028760213374967e-150,1.7026915976619803e-150,1.702507154008814e-150,1.702322690371504e-150,1.7021382067435534e-150,1.7019537031184616e-150,1.7017691794897239e-150,1.7015846358508332e-150,1.701400072195278e-150,1.7012154885165434e-150,1.7010308848081112e-150,1.7008462610634595e-150,1.700661617276063e-150,1.7004769534393926e-150,1.700292269546916e-150,1.700107565592097e-150,1.699922841568396e-150,1.6997380974692704e-150,1.6995533332881728e-150,1.6993685490185533e-150,1.6991837446538581e-150,1.6989989201875297e-150,1.6988140756130072e-150,1.698629210923726e-150,1.6984443261131182e-150,1.698259421174612e-150,1.6980744961016325e-150,1.6978895508876005e-150,1.6977045855259334e-150,1.6975196000100458e-150,1.6973345943333478e-150,1.6971495684892462e-150,1.6969645224711442e-150,1.6967794562724416e-150,1.6965943698865344e-150,1.6964092633068151e-150,1.6962241365266725e-150,1.6960389895394917e-150,1.695853822338654e-150,1.6956686349175382e-150,1.6954834272695183e-150,1.695298199387965e-150,1.6951129512662455e-150,1.694927682897723e-150,1.694742394275758e-150,1.6945570853937066e-150,1.694371756244921e-150,1.6941864068227502e-150,1.6940010371205403e-150,1.693815647131632e-150,1.6936302368493645e-150,1.6934448062670715e-150,1.6932593553780835e-150,1.6930738841757282e-150,1.692888392653329e-150,1.6927028808042052e-150,1.6925173486216736e-150,1.6923317960990464e-150,1.6921462232296324e-150,1.6919606300067364e-150,1.6917750164236606e-150,1.691589382473702e-150,1.6914037281501554e-150,1.691218053446311e-150,1.6910323583554555e-150,1.690846642870872e-150,1.6906609069858397e-150,1.6904751506936345e-150,1.6902893739875284e-150,1.6901035768607895e-150,1.6899177593066828e-150,1.6897319213184686e-150,1.6895460628894044e-150,1.689360184012744e-150,1.6891742846817366e-150,1.6889883648896285e-150,1.6888024246296618e-150,1.6886164638950756e-150,1.6884304826791043e-150,1.6882444809749793e-150,1.688058458775928e-150,1.687872416075174e-150,1.6876863528659376e-150,1.6875002691414346e-150,1.6873141648948777e-150,1.6871280401194755e-150,1.6869418948084332e-150,1.6867557289549519e-150,1.686569542552229e-150,1.6863833355934587e-150,1.6861971080718302e-150,1.6860108599805305e-150,1.6858245913127416e-150,1.6856383020616424e-150,1.6854519922204074e-150,1.6852656617822086e-150,1.6850793107402123e-150,1.684892939087583e-150,1.68470654681748e-150,1.6845201339230594e-150,1.6843337003974736e-150,1.684147246233871e-150,1.683960771425396e-150,1.6837742759651897e-150,1.6835877598463892e-150,1.6834012230621278e-150,1.6832146656055348e-150,1.6830280874697355e-150,1.6828414886478525e-150,1.6826548691330033e-150,1.682468228918302e-150,1.6822815679968596e-150,1.6820948863617823e-150,1.6819081840061726e-150,1.6817214609231297e-150,1.6815347171057484e-150,1.6813479525471205e-150,1.6811611672403328e-150,1.680974361178469e-150,1.6807875343546092e-150,1.6806006867618289e-150,1.6804138183932e-150,1.6802269292417913e-150,1.6800400193006663e-150,1.6798530885628862e-150,1.679666137021507e-150,1.6794791646695817e-150,1.6792921715001594e-150,1.6791051575062848e-150,1.6789181226809987e-150,1.6787310670173388e-150,1.6785439905083385e-150,1.678356893147027e-150,1.6781697749264302e-150,1.6779826358395697e-150,1.6777954758794633e-150,1.6776082950391246e-150,1.677421093311564e-150,1.6772338706897875e-150,1.6770466271667974e-150,1.676859362735592e-150,1.6766720773891656e-150,1.6764847711205086e-150,1.6762974439226078e-150,1.6761100957884458e-150,1.6759227267110012e-150,1.6757353366832487e-150,1.6755479256981597e-150,1.6753604937487005e-150,1.6751730408278346e-150,1.6749855669285208e-150,1.6747980720437143e-150,1.6746105561663662e-150,1.674423019289424e-150,1.6742354614058307e-150,1.6740478825085256e-150,1.6738602825904445e-150,1.6736726616445186e-150,1.6734850196636753e-150,1.6732973566408381e-150,1.6731096725689265e-150,1.672921967440856e-150,1.6727342412495383e-150,1.672546493987881e-150,1.6723587256487877e-150,1.672170936225158e-150,1.6719831257098875e-150,1.671795294095868e-150,1.671607441375987e-150,1.6714195675431284e-150,1.6712316725901716e-150,1.6710437565099924e-150,1.6708558192954625e-150,1.6706678609394495e-150,1.6704798814348169e-150,1.6702918807744242e-150,1.6701038589511276e-150,1.6699158159577781e-150,1.6697277517872236e-150,1.6695396664323076e-150,1.669351559885869e-150,1.6691634321407443e-150,1.668975283189764e-150,1.668787113025756e-150,1.6685989216415435e-150,1.6684107090299455e-150,1.6682224751837777e-150,1.6680342200958513e-150,1.6678459437589728e-150,1.6676576461659457e-150,1.6674693273095691e-150,1.6672809871826379e-150,1.6670926257779428e-150,1.6669042430882706e-150,1.666715839106404e-150,1.6665274138251216e-150,1.6663389672371983e-150,1.6661504993354044e-150,1.6659620101125056e-150,1.6657734995612653e-150,1.6655849676744412e-150,1.6653964144447872e-150,1.6652078398650536e-150,1.665019243927986e-150,1.6648306266263263e-150,1.6646419879528122e-150,1.6644533279001772e-150,1.6642646464611506e-150,1.664075943628458e-150,1.6638872193948205e-150,1.663698473752955e-150,1.6635097066955744e-150,1.6633209182153877e-150,1.6631321083050994e-150,1.66294327695741e-150,1.6627544241650157e-150,1.662565549920609e-150,1.662376654216878e-150,1.6621877370465065e-150,1.6619987984021739e-150,1.6618098382765563e-150,1.6616208566623247e-150,1.6614318535521468e-150,1.6612428289386854e-150,1.6610537828145994e-150,1.660864715172544e-150,1.6606756260051689e-150,1.660486515305121e-150,1.6602973830650422e-150,1.6601082292775709e-150,1.6599190539353407e-150,1.659729857030981e-150,1.6595406385571173e-150,1.659351398506371e-150,1.6591621368713587e-150,1.6589728536446934e-150,1.658783548818984e-150,1.6585942223868338e-150,1.6584048743408438e-150,1.6582155046736098e-150,1.6580261133777233e-150,1.6578367004457717e-150,1.6576472658703381e-150,1.6574578096440017e-150,1.657268331759337e-150,1.6570788322089145e-150,1.6568893109853006e-150,1.656699768081057e-150,1.6565102034887416e-150,1.656320617200908e-150,1.6561310092101052e-150,1.6559413795088777e-150,1.655751728089767e-150,1.6555620549453088e-150,1.6553723600680357e-150,1.655182643450475e-150,1.6549929050851507e-150,1.6548031449645818e-150,1.6546133630812836e-150,1.654423559427766e-150,1.6542337339965363e-150,1.6540438867800964e-150,1.6538540177709434e-150,1.6536641269615713e-150,1.6534742143444696e-150,1.6532842799121222e-150,1.6530943236570104e-150,1.65290434557161e-150,1.6527143456483935e-150,1.6525243238798277e-150,1.652334280258376e-150,1.6521442147764975e-150,1.6519541274266469e-150,1.651764018201274e-150,1.6515738870928248e-150,1.6513837340937407e-150,1.6511935591964594e-150,1.651003362393413e-150,1.6508131436770304e-150,1.6506229030397355e-150,1.650432640473948e-150,1.6502423559720832e-150,1.6500520495265526e-150,1.649861721129762e-150,1.6496713707741142e-150,1.6494809984520069e-150,1.6492906041558333e-150,1.6491001878779828e-150,1.6489097496108398e-150,1.6487192893467844e-150,1.6485288070781931e-150,1.648338302797437e-150,1.6481477764968829e-150,1.6479572281688938e-150,1.6477666578058276e-150,1.6475760654000385e-150,1.6473854509438755e-150,1.6471948144296837e-150,1.6470041558498036e-150,1.6468134751965716e-150,1.6466227724623185e-150,1.6464320476393726e-150,1.646241300720056e-150,1.6460505316966868e-150,1.6458597405615795e-150,1.6456689273070432e-150,1.6454780919253828e-150,1.6452872344088987e-150,1.6450963547498873e-150,1.6449054529406397e-150,1.6447145289734433e-150,1.6445235828405805e-150,1.6443326145343294e-150,1.6441416240469637e-150,1.6439506113707528e-150,1.643759576497961e-150,1.6435685194208486e-150,1.6433774401316713e-150,1.64318633862268e-150,1.6429952148861217e-150,1.6428040689142383e-150,1.6426129006992675e-150,1.6424217102334424e-150,1.6422304975089917e-150,1.6420392625181392e-150,1.6418480052531045e-150,1.6416567257061028e-150,1.6414654238693446e-150,1.6412740997350356e-150,1.641082753295377e-150,1.6408913845425663e-150,1.640699993468795e-150,1.6405085800662515e-150,1.6403171443271183e-150,1.6401256862435747e-150,1.639934205807794e-150,1.6397427030119467e-150,1.6395511778481966e-150,1.6393596303087047e-150,1.639168060385627e-150,1.6389764680711134e-150,1.638784853357312e-150,1.6385932162363636e-150,1.6384015567004061e-150,1.6382098747415727e-150,1.6380181703519907e-150,1.6378264435237842e-150,1.637634694249072e-150,1.6374429225199686e-150,1.6372511283285837e-150,1.6370593116670223e-150,1.636867472527385e-150,1.6366756109017673e-150,1.636483726782261e-150,1.6362918201609522e-150,1.6360998910299229e-150,1.6359079393812507e-150,1.6357159652070082e-150,1.635523968499263e-150,1.6353319492500787e-150,1.6351399074515142e-150,1.6349478430956234e-150,1.6347557561744553e-150,1.634563646680055e-150,1.6343715146044622e-150,1.6341793599397123e-150,1.633987182677836e-150,1.6337949828108594e-150,1.6336027603308035e-150,1.633410515229685e-150,1.6332182474995157e-150,1.6330259571323026e-150,1.6328336441200486e-150,1.632641308454751e-150,1.6324489501284033e-150,1.6322565691329934e-150,1.632064165460505e-150,1.631871739102917e-150,1.6316792900522037e-150,1.6314868183003342e-150,1.6312943238392732e-150,1.6311018066609808e-150,1.630909266757412e-150,1.6307167041205177e-150,1.630524118742243e-150,1.630331510614529e-150,1.6301388797293123e-150,1.6299462260785234e-150,1.6297535496540896e-150,1.6295608504479326e-150,1.6293681284519696e-150,1.6291753836581124e-150,1.628982616058269e-150,1.628789825644342e-150,1.6285970124082295e-150,1.6284041763418243e-150,1.6282113174370147e-150,1.6280184356856845e-150,1.6278255310797123e-150,1.627632603610972e-150,1.627439653271333e-150,1.627246680052659e-150,1.6270536839468095e-150,1.6268606649456398e-150,1.6266676230409987e-150,1.6264745582247318e-150,1.6262814704886794e-150,1.626088359824676e-150,1.6258952262245529e-150,1.6257020696801348e-150,1.625508890183243e-150,1.625315687725693e-150,1.625122462299296e-150,1.6249292138958581e-150,1.6247359425071802e-150,1.624542648125059e-150,1.624349330741286e-150,1.6241559903476477e-150,1.6239626269359256e-150,1.6237692404978968e-150,1.623575831025333e-150,1.6233823985100015e-150,1.623188942943664e-150,1.622995464318078e-150,1.6228019626249958e-150,1.6226084378561644e-150,1.6224148900033265e-150,1.6222213190582198e-150,1.6220277250125763e-150,1.6218341078581244e-150,1.6216404675865865e-150,1.6214468041896803e-150,1.6212531176591185e-150,1.621059407986609e-150,1.620865675163855e-150,1.6206719191825545e-150,1.6204781400344e-150,1.6202843377110798e-150,1.620090512204277e-150,1.6198966635056698e-150,1.619702791606931e-150,1.619508896499729e-150,1.6193149781757267e-150,1.6191210366265822e-150,1.618927071843949e-150,1.6187330838194747e-150,1.6185390725448029e-150,1.6183450380115717e-150,1.618150980211414e-150,1.6179568991359575e-150,1.6177627947768262e-150,1.6175686671256376e-150,1.6173745161740047e-150,1.6171803419135358e-150,1.6169861443358333e-150,1.6167919234324956e-150,1.6165976791951152e-150,1.6164034116152805e-150,1.6162091206845733e-150,1.616014806394572e-150,1.615820468736849e-150,1.6156261077029716e-150,1.615431723284503e-150,1.6152373154729996e-150,1.6150428842600147e-150,1.614848429637095e-150,1.6146539515957824e-150,1.6144594501276145e-150,1.6142649252241232e-150,1.614070376876835e-150,1.613875805077272e-150,1.6136812098169504e-150,1.613486591087382e-150,1.6132919488800732e-150,1.6130972831865253e-150,1.6129025939982345e-150,1.6127078813066913e-150,1.6125131451033824e-150,1.6123183853797878e-150,1.6121236021273835e-150,1.6119287953376398e-150,1.611733965002022e-150,1.6115391111119902e-150,1.6113442336589993e-150,1.6111493326344992e-150,1.6109544080299342e-150,1.6107594598367442e-150,1.6105644880463633e-150,1.6103694926502205e-150,1.6101744736397397e-150,1.6099794310063398e-150,1.6097843647414338e-150,1.6095892748364304e-150,1.6093941612827325e-150,1.609199024071738e-150,1.6090038631948396e-150,1.6088086786434247e-150,1.6086134704088756e-150,1.6084182384825692e-150,1.6082229828558773e-150,1.608027703520166e-150,1.607832400466797e-150,1.6076370736871266e-150,1.607441723172505e-150,1.6072463489142777e-150,1.6070509509037854e-150,1.6068555291323626e-150,1.6066600835913392e-150,1.6064646142720396e-150,1.6062691211657834e-150,1.6060736042638835e-150,1.6058780635576496e-150,1.605682499038384e-150,1.6054869106973855e-150,1.6052912985259463e-150,1.605095662515354e-150,1.6049000026568904e-150,1.6047043189418328e-150,1.604508611361452e-150,1.6043128799070147e-150,1.6041171245697816e-150,1.6039213453410076e-150,1.6037255422119436e-150,1.6035297151738338e-150,1.603333864217918e-150,1.60313798933543e-150,1.6029420905175987e-150,1.6027461677556472e-150,1.602550221040794e-150,1.6023542503642515e-150,1.6021582557172268e-150,1.6019622370909217e-150,1.601766194476533e-150,1.601570127865252e-150,1.6013740372482636e-150,1.601177922616749e-150,1.6009817839618825e-150,1.600785621274834e-150,1.6005894345467674e-150,1.6003932237688414e-150,1.6001969889322092e-150,1.6000007300280186e-150,1.5998044470474124e-150,1.5996081399815272e-150,1.5994118088214948e-150,1.5992154535584408e-150,1.5990190741834863e-150,1.5988226706877465e-150,1.5986262430623308e-150,1.5984297912983439e-150,1.5982333153868838e-150,1.598036815319045e-150,1.5978402910859143e-150,1.5976437426785747e-150,1.5974471700881027e-150,1.5972505733055702e-150,1.5970539523220423e-150,1.5968573071285802e-150,1.5966606377162383e-150,1.5964639440760662e-150,1.596267226199108e-150,1.5960704840764014e-150,1.5958737176989794e-150,1.59567692705787e-150,1.5954801121440938e-150,1.595283272948668e-150,1.595086409462603e-150,1.5948895216769038e-150,1.59469260958257e-150,1.5944956731705958e-150,1.5942987124319695e-150,1.594101727357674e-150,1.5939047179386866e-150,1.593707684165979e-150,1.5935106260305177e-150,1.593313543523263e-150,1.5931164366351698e-150,1.5929193053571877e-150,1.5927221496802603e-150,1.592524969595326e-150,1.5923277650933173e-150,1.5921305361651607e-150,1.5919332828017782e-150,1.5917360049940853e-150,1.591538702732992e-150,1.5913413760094027e-150,1.591144024814216e-150,1.590946649138326e-150,1.5907492489726192e-150,1.5905518243079777e-150,1.590354375135278e-150,1.5901569014453903e-150,1.5899594032291796e-150,1.589761880477505e-150,1.5895643331812202e-150,1.5893667613311728e-150,1.5891691649182053e-150,1.5889715439331537e-150,1.588773898366849e-150,1.588576228210116e-150,1.5883785334537743e-150,1.5881808140886374e-150,1.5879830701055131e-150,1.587785301495204e-150,1.5875875082485058e-150,1.5873896903562098e-150,1.5871918478091009e-150,1.5869939805979583e-150,1.5867960887135552e-150,1.5865981721466594e-150,1.5864002308880332e-150,1.5862022649284324e-150,1.586004274258608e-150,1.5858062588693038e-150,1.5856082187512594e-150,1.5854101538952077e-150,1.5852120642918758e-150,1.5850139499319854e-150,1.5848158108062522e-150,1.584617646905386e-150,1.5844194582200912e-150,1.5842212447410656e-150,1.584023006459002e-150,1.583824743364587e-150,1.5836264554485013e-150,1.58342814270142e-150,1.583229805114012e-150,1.583031442676941e-150,1.582833055380864e-150,1.5826346432164328e-150,1.582436206174293e-150,1.5822377442450848e-150,1.5820392574194416e-150,1.5818407456879918e-150,1.5816422090413578e-150,1.5814436474701558e-150,1.5812450609649963e-150,1.5810464495164837e-150,1.5808478131152168e-150,1.5806491517517882e-150,1.580450465416785e-150,1.5802517541007875e-150,1.5800530177943715e-150,1.5798542564881055e-150,1.579655470172553e-150,1.5794566588382707e-150,1.57925782247581e-150,1.5790589610757166e-150,1.5788600746285296e-150,1.578661163124782e-150,1.578462226555002e-150,1.5782632649097105e-150,1.5780642781794228e-150,1.577865266354649e-150,1.5776662294258922e-150,1.5774671673836497e-150,1.5772680802184135e-150,1.577068967920669e-150,1.5768698304808955e-150,1.5766706678895667e-150,1.57647148013715e-150,1.576272267214107e-150,1.5760730291108928e-150,1.575873765817957e-150,1.575674477325743e-150,1.575475163624688e-150,1.5752758247052236e-150,1.5750764605577744e-150,1.57487707117276e-150,1.5746776565405933e-150,1.5744782166516815e-150,1.5742787514964253e-150,1.5740792610652195e-150,1.5738797453484532e-150,1.573680204336509e-150,1.573480638019763e-150,1.573281046388586e-150,1.5730814294333427e-150,1.5728817871443906e-150,1.5726821195120827e-150,1.5724824265267644e-150,1.5722827081787757e-150,1.5720829644584504e-150,1.5718831953561162e-150,1.5716834008620941e-150,1.5714835809667e-150,1.5712837356602424e-150,1.5710838649330247e-150,1.5708839687753437e-150,1.57068404717749e-150,1.570484100129748e-150,1.5702841276223956e-150,1.5700841296457054e-150,1.569884106189943e-150,1.5696840572453684e-150,1.5694839828022344e-150,1.5692838828507892e-150,1.569083757381273e-150,1.5688836063839208e-150,1.5686834298489617e-150,1.5684832277666174e-150,1.568283000127104e-150,1.5680827469206318e-150,1.5678824681374043e-150,1.5676821637676186e-150,1.5674818338014662e-150,1.5672814782291313e-150,1.567081097040793e-150,1.5668806902266234e-150,1.5666802577767882e-150,1.5664797996814477e-150,1.5662793159307544e-150,1.5660788065148565e-150,1.5658782714238936e-150,1.5656777106480008e-150,1.5654771241773063e-150,1.5652765120019318e-150,1.5650758741119925e-150,1.5648752104975983e-150,1.5646745211488513e-150,1.5644738060558478e-150,1.5642730652086787e-150,1.5640722985974272e-150,1.5638715062121708e-150,1.5636706880429803e-150,1.5634698440799207e-150,1.5632689743130502e-150,1.5630680787324205e-150,1.562867157328077e-150,1.562666210090059e-150,1.562465237008399e-150,1.5622642380731235e-150,1.5620632132742522e-150,1.561862162601798e-150,1.5616610860457687e-150,1.5614599835961644e-150,1.5612588552429793e-150,1.561057700976201e-150,1.5608565207858111e-150,1.5606553146617837e-150,1.5604540825940876e-150,1.5602528245726843e-150,1.5600515405875294e-150,1.5598502306285716e-150,1.5596488946857534e-150,1.5594475327490105e-150,1.5592461448082725e-150,1.5590447308534622e-150,1.5588432908744961e-150,1.558641824861284e-150,1.558440332803729e-150,1.5582388146917282e-150,1.5580372705151715e-150,1.5578357002639431e-150,1.55763410392792e-150,1.5574324814969727e-150,1.5572308329609656e-150,1.557029158309756e-150,1.5568274575331948e-150,1.5566257306211266e-150,1.5564239775633887e-150,1.5562221983498128e-150,1.5560203929702235e-150,1.5558185614144385e-150,1.5556167036722693e-150,1.5554148197335208e-150,1.5552129095879914e-150,1.555010973225472e-150,1.5548090106357483e-150,1.5546070218085976e-150,1.5544050067337927e-150,1.554202965401098e-150,1.5540008978002718e-150,1.553798803921066e-150,1.5535966837532253e-150,1.5533945372864883e-150,1.5531923645105868e-150,1.5529901654152456e-150,1.552787939990183e-150,1.5525856882251107e-150,1.5523834101097335e-150,1.5521811056337494e-150,1.5519787747868502e-150,1.5517764175587207e-150,1.5515740339390388e-150,1.5513716239174757e-150,1.5511691874836963e-150,1.550966724627358e-150,1.5507642353381118e-150,1.5505617196056026e-150,1.5503591774194673e-150,1.550156608769337e-150,1.5499540136448356e-150,1.5497513920355805e-150,1.5495487439311819e-150,1.5493460693212437e-150,1.5491433681953624e-150,1.5489406405431282e-150,1.5487378863541243e-150,1.548535105617927e-150,1.5483322983241063e-150,1.5481294644622244e-150,1.5479266040218373e-150,1.547723716992494e-150,1.547520803363737e-150,1.5473178631251016e-150,1.547114896266116e-150,1.5469119027763018e-150,1.5467088826451742e-150,1.5465058358622407e-150,1.5463027624170021e-150,1.546099662298953e-150,1.5458965354975798e-150,1.5456933820023635e-150,1.5454902018027772e-150,1.545286994888287e-150,1.5450837612483528e-150,1.544880500872427e-150,1.5446772137499555e-150,1.5444738998703766e-150,1.544270559223122e-150,1.5440671917976167e-150,1.5438637975832785e-150,1.5436603765695183e-150,1.5434569287457395e-150,1.5432534541013395e-150,1.5430499526257078e-150,1.5428464243082277e-150,1.5426428691382745e-150,1.5424392871052176e-150,1.5422356781984186e-150,1.5420320424072324e-150,1.5418283797210066e-150,1.5416246901290822e-150,1.541420973620793e-150,1.5412172301854653e-150,1.541013459812419e-150,1.5408096624909665e-150,1.5406058382104133e-150,1.5404019869600577e-150,1.5401981087291914e-150,1.5399942035070983e-150,1.539790271283056e-150,1.539586312046334e-150,1.539382325786195e-150,1.5391783124918956e-150,1.5389742721526842e-150,1.538770204757802e-150,1.538566110296484e-150,1.538361988757957e-150,1.5381578401314415e-150,1.5379536644061502e-150,1.5377494615712892e-150,1.5375452316160568e-150,1.5373409745296447e-150,1.5371366903012375e-150,1.5369323789200116e-150,1.5367280403751378e-150,1.536523674655778e-150,1.5363192817510881e-150,1.5361148616502166e-150,1.5359104143423039e-150,1.5357059398164845e-150,1.5355014380618846e-150,1.535296909067624e-150,1.5350923528228145e-150,1.534887769316561e-150,1.5346831585379612e-150,1.5344785204761052e-150,1.5342738551200763e-150,1.5340691624589504e-150,1.5338644424817958e-150,1.5336596951776734e-150,1.5334549205356376e-150,1.5332501185447345e-150,1.5330452891940038e-150,1.5328404324724773e-150,1.5326355483691796e-150,1.5324306368731276e-150,1.5322256979733318e-150,1.5320207316587946e-150,1.531815737918511e-150,1.531610716741469e-150,1.5314056681166492e-150,1.5312005920330245e-150,1.5309954884795608e-150,1.5307903574452163e-150,1.530585198918942e-150,1.5303800128896815e-150,1.5301747993463708e-150,1.5299695582779385e-150,1.529764289673306e-150,1.5295589935213872e-150,1.5293536698110882e-150,1.5291483185313081e-150,1.5289429396709387e-150,1.5287375332188633e-150,1.5285320991639593e-150,1.5283266374950953e-150,1.5281211482011326e-150,1.527915631270926e-150,1.5277100866933219e-150,1.527504514457159e-150,1.5272989145512692e-150,1.5270932869644767e-150,1.5268876316855978e-150,1.5266819487034416e-150,1.5264762380068096e-150,1.526270499584496e-150,1.5260647334252864e-150,1.5258589395179606e-150,1.525653117851289e-150,1.5254472684140358e-150,1.525241391194957e-150,1.525035486182801e-150,1.5248295533663085e-150,1.5246235927342133e-150,1.524417604275241e-150,1.5242115879781088e-150,1.5240055438315286e-150,1.5237994718242023e-150,1.523593371944825e-150,1.5233872441820846e-150,1.5231810885246605e-150,1.5229749049612256e-150,1.5227686934804439e-150,1.5225624540709727e-150,1.5223561867214605e-150,1.5221498914205497e-150,1.5219435681568734e-150,1.5217372169190578e-150,1.5215308376957213e-150,1.521324430475475e-150,1.521117995246921e-150,1.5209115319986554e-150,1.5207050407192646e-150,1.5204985213973294e-150,1.520291974021421e-150,1.520085398580104e-150,1.5198787950619344e-150,1.5196721634554612e-150,1.519465503749225e-150,1.5192588159317592e-150,1.5190520999915884e-150,1.5188453559172307e-150,1.5186385836971953e-150,1.518431783319984e-150,1.5182249547740913e-150,1.5180180980480028e-150,1.517811213130197e-150,1.5176043000091442e-150,1.517397358673307e-150,1.51719038911114e-150,1.5169833913110904e-150,1.5167763652615968e-150,1.5165693109510906e-150,1.5163622283679944e-150,1.516155117500724e-150,1.5159479783376863e-150,1.515740810867281e-150,1.5155336150778995e-150,1.5153263909579253e-150,1.515119138495734e-150,1.5149118576796933e-150,1.514704548498163e-150,1.5144972109394946e-150,1.5142898449920318e-150,1.5140824506441108e-150,1.513875027884059e-150,1.5136675767001963e-150,1.5134600970808345e-150,1.513252589014277e-150,1.5130450524888204e-150,1.5128374874927516e-150,1.5126298940143506e-150,1.5124222720418892e-150,1.5122146215636305e-150,1.5120069425678304e-150,1.5117992350427362e-150,1.5115914989765875e-150,1.5113837343576155e-150,1.5111759411740432e-150,1.510968119414086e-150,1.5107602690659506e-150,1.5105523901178362e-150,1.5103444825579336e-150,1.5101365463744253e-150,1.5099285815554856e-150,1.5097205880892814e-150,1.50951256596397e-150,1.5093045151677025e-150,1.5090964356886202e-150,1.5088883275148568e-150,1.508680190634538e-150,1.5084720250357813e-150,1.5082638307066952e-150,1.508055607635381e-150,1.5078473558099318e-150,1.5076390752184314e-150,1.5074307658489566e-150,1.507222427689575e-150,1.5070140607283464e-150,1.5068056649533224e-150,1.5065972403525463e-150,1.5063887869140533e-150,1.5061803046258695e-150,1.5059717934760138e-150,1.5057632534524958e-150,1.505554684543318e-150,1.5053460867364734e-150,1.5051374600199474e-150,1.5049288043817164e-150,1.5047201198097495e-150,1.5045114062920064e-150,1.5043026638164394e-150,1.5040938923709914e-150,1.5038850919435977e-150,1.503676262522185e-150,1.5034674040946722e-150,1.5032585166489683e-150,1.5030496001729751e-150,1.502840654654586e-150,1.5026316800816855e-150,1.50242267644215e-150,1.5022136437238472e-150,1.5020045819146364e-150,1.501795491002369e-150,1.5015863709748867e-150,1.5013772218200243e-150,1.5011680435256071e-150,1.5009588360794517e-150,1.5007495994693677e-150,1.500540333683154e-150,1.500331038708603e-150,1.5001217145334974e-150,1.4999123611456117e-150,1.499702978532712e-150,1.4994935666825558e-150,1.499284125582892e-150,1.4990746552214604e-150,1.4988651555859938e-150,1.4986556266642144e-150,1.4984460684438374e-150,1.4982364809125688e-150,1.4980268640581057e-150,1.4978172178681372e-150,1.4976075423303433e-150,1.4973978374323955e-150,1.4971881031619572e-150,1.4969783395066822e-150,1.4967685464542163e-150,1.4965587239921966e-150,1.4963488721082514e-150,1.4961389907900003e-150,1.495929080025054e-150,1.495719139801015e-150,1.4955091701054772e-150,1.495299170926025e-150,1.4950891422502343e-150,1.4948790840656732e-150,1.4946689963598997e-150,1.4944588791204642e-150,1.4942487323349076e-150,1.4940385559907625e-150,1.493828350075552e-150,1.493618114576792e-150,1.4934078494819876e-150,1.4931975547786367e-150,1.492987230454227e-150,1.4927768764962391e-150,1.492566492892143e-150,1.4923560796294016e-150,1.492145636695467e-150,1.491935164077784e-150,1.4917246617637885e-150,1.4915141297409065e-150,1.4913035679965555e-150,1.491092976518145e-150,1.4908823552930748e-150,1.4906717043087354e-150,1.4904610235525097e-150,1.4902503130117702e-150,1.4900395726738814e-150,1.4898288025261987e-150,1.4896180025560684e-150,1.489407172750828e-150,1.4891963130978064e-150,1.4889854235843223e-150,1.4887745041976868e-150,1.4885635549252013e-150,1.4883525757541581e-150,1.488141566671841e-150,1.487930527665524e-150,1.4877194587224736e-150,1.4875083598299453e-150,1.4872972309751867e-150,1.4870860721454364e-150,1.4868748833279236e-150,1.4866636645098685e-150,1.4864524156784822e-150,1.4862411368209666e-150,1.4860298279245148e-150,1.4858184889763108e-150,1.485607119963529e-150,1.4853957208733354e-150,1.4851842916928863e-150,1.4849728324093288e-150,1.4847613430098011e-150,1.4845498234814328e-150,1.484338273811343e-150,1.4841266939866425e-150,1.4839150839944332e-150,1.483703443821807e-150,1.483491773455847e-150,1.4832800728836273e-150,1.483068342092212e-150,1.482856581068657e-150,1.4826447898000085e-150,1.4824329682733028e-150,1.482221116475568e-150,1.4820092343938225e-150,1.4817973220150752e-150,1.4815853793263256e-150,1.4813734063145647e-150,1.4811614029667736e-150,1.4809493692699237e-150,1.480737305210978e-150,1.4805252107768897e-150,1.4803130859546023e-150,1.4801009307310505e-150,1.4798887450931593e-150,1.4796765290278448e-150,1.4794642825220128e-150,1.479252005562561e-150,1.4790396981363764e-150,1.478827360230337e-150,1.4786149918313123e-150,1.4784025929261607e-150,1.478190163501733e-150,1.477977703544869e-150,1.4777652130423996e-150,1.4775526919811465e-150,1.4773401403479216e-150,1.4771275581295276e-150,1.4769149453127575e-150,1.4767023018843945e-150,1.4764896278312131e-150,1.4762769231399772e-150,1.476064187797442e-150,1.475851421790353e-150,1.4756386251054458e-150,1.4754257977294472e-150,1.4752129396490729e-150,1.475000050851031e-150,1.4747871313220183e-150,1.474574181048723e-150,1.4743612000178233e-150,1.474148188215988e-150,1.4739351456298763e-150,1.473722072246137e-150,1.4735089680514108e-150,1.4732958330323268e-150,1.4730826671755057e-150,1.4728694704675583e-150,1.472656242895086e-150,1.4724429844446793e-150,1.4722296951029205e-150,1.4720163748563813e-150,1.471803023691624e-150,1.4715896415952006e-150,1.4713762285536544e-150,1.4711627845535175e-150,1.470949309581314e-150,1.4707358036235565e-150,1.4705222666667487e-150,1.4703086986973846e-150,1.470095099701948e-150,1.4698814696669132e-150,1.4696678085787446e-150,1.469454116423896e-150,1.469240393188813e-150,1.4690266388599295e-150,1.468812853423671e-150,1.468599036866452e-150,1.468385189174678e-150,1.468171310334744e-150,1.4679574003330354e-150,1.4677434591559273e-150,1.4675294867897858e-150,1.4673154832209655e-150,1.467101448435813e-150,1.466887382420663e-150,1.4666732851618416e-150,1.4664591566456642e-150,1.4662449968584368e-150,1.4660308057864548e-150,1.4658165834160034e-150,1.4656023297333591e-150,1.4653880447247867e-150,1.4651737283765424e-150,1.4649593806748714e-150,1.4647450016060088e-150,1.4645305911561804e-150,1.464316149311601e-150,1.4641016760584763e-150,1.463887171383001e-150,1.4636726352713602e-150,1.4634580677097286e-150,1.4632434686842708e-150,1.4630288381811414e-150,1.462814176186485e-150,1.4625994826864357e-150,1.4623847576671173e-150,1.4621700011146438e-150,1.461955213015119e-150,1.461740393354636e-150,1.4615255421192782e-150,1.4613106592951188e-150,1.46109574486822e-150,1.4608807988246347e-150,1.460665821150405e-150,1.460450811831563e-150,1.46023577085413e-150,1.460020698204118e-150,1.4598055938675272e-150,1.459590457830349e-150,1.459375290078564e-150,1.4591600905981416e-150,1.458944859375042e-150,1.4587295963952144e-150,1.458514301644598e-150,1.4582989751091215e-150,1.4580836167747026e-150,1.4578682266272497e-150,1.4576528046526602e-150,1.457437350836821e-150,1.4572218651656085e-150,1.457006347624889e-150,1.4567907982005185e-150,1.4565752168783414e-150,1.4563596036441934e-150,1.456143958483898e-150,1.4559282813832692e-150,1.4557125723281105e-150,1.4554968313042143e-150,1.455281058297363e-150,1.455065253293328e-150,1.4548494162778708e-150,1.4546335472367416e-150,1.4544176461556804e-150,1.4542017130204165e-150,1.453985747816669e-150,1.453769750530146e-150,1.4535537211465448e-150,1.4533376596515522e-150,1.4531215660308448e-150,1.4529054402700883e-150,1.4526892823549377e-150,1.4524730922710368e-150,1.4522568700040197e-150,1.4520406155395091e-150,1.4518243288631171e-150,1.4516080099604454e-150,1.4513916588170849e-150,1.4511752754186152e-150,1.4509588597506055e-150,1.4507424117986148e-150,1.4505259315481907e-150,1.4503094189848696e-150,1.4500928740941782e-150,1.4498762968616318e-150,1.4496596872727347e-150,1.4494430453129806e-150,1.4492263709678524e-150,1.449009664222822e-150,1.448792925063351e-150,1.4485761534748885e-150,1.448359349442875e-150,1.4481425129527384e-150,1.4479256439898966e-150,1.4477087425397557e-150,1.447491808587712e-150,1.4472748421191498e-150,1.4470578431194426e-150,1.4468408115739542e-150,1.4466237474680356e-150,1.4464066507870277e-150,1.4461895215162607e-150,1.445972359641053e-150,1.445755165146713e-150,1.445537938018537e-150,1.4453206782418106e-150,1.4451033858018088e-150,1.4448860606837953e-150,1.4446687028730223e-150,1.4444513123547308e-150,1.444233889114152e-150,1.4440164331365047e-150,1.4437989444069965e-150,1.443581422910825e-150,1.4433638686331752e-150,1.4431462815592221e-150,1.4429286616741295e-150,1.4427110089630488e-150,1.4424933234111217e-150,1.4422756050034774e-150,1.442057853725235e-150,1.4418400695615016e-150,1.441622252497373e-150,1.4414044025179346e-150,1.4411865196082596e-150,1.44096860375341e-150,1.4407506549384375e-150,1.4405326731483812e-150,1.4403146583682695e-150,1.4400966105831196e-150,1.439878529777937e-150,1.439660415937716e-150,1.43944226904744e-150,1.4392240890920796e-150,1.4390058760565956e-150,1.438787629925937e-150,1.4385693506850406e-150,1.4383510383188322e-150,1.438132692812227e-150,1.4379143141501275e-150,1.4376959023174252e-150,1.4374774572990006e-150,1.437258979079722e-150,1.4370404676444462e-150,1.436821922978019e-150,1.4366033450652748e-150,1.4363847338910357e-150,1.4361660894401125e-150,1.4359474116973052e-150,1.435728700647401e-150,1.4355099562751762e-150,1.4352911785653957e-150,1.4350723675028123e-150,1.4348535230721675e-150,1.434634645258191e-150,1.4344157340456006e-150,1.434196789419103e-150,1.4339778113633934e-150,1.4337587998631542e-150,1.4335397549030568e-150,1.433320676467761e-150,1.433101564541915e-150,1.4328824191101547e-150,1.4326632401571044e-150,1.4324440276673772e-150,1.4322247816255734e-150,1.4320055020162826e-150,1.4317861888240823e-150,1.431566842033537e-150,1.4313474616292015e-150,1.4311280475956172e-150,1.4309085999173136e-150,1.4306891185788096e-150,1.430469603564611e-150,1.4302500548592122e-150,1.430030472447096e-150,1.429810856312732e-150,1.4295912064405798e-150,1.4293715228150856e-150,1.4291518054206842e-150,1.4289320542417982e-150,1.4287122692628384e-150,1.4284924504682038e-150,1.428272597842281e-150,1.4280527113694444e-150,1.4278327910340575e-150,1.4276128368204701e-150,1.4273928487130214e-150,1.4271728266960378e-150,1.4269527707538338e-150,1.4267326808707115e-150,1.4265125570309613e-150,1.4262923992188615e-150,1.4260722074186777e-150,1.425851981614664e-150,1.4256317217910623e-150,1.4254114279321016e-150,1.4251911000219996e-150,1.4249707380449611e-150,1.4247503419851793e-150,1.424529911826835e-150,1.424309447554096e-150,1.424088949151119e-150,1.4238684166020476e-150,1.423647849891014e-150,1.4234272490021367e-150,1.4232066139195233e-150,1.4229859446272683e-150,1.4227652411094542e-150,1.422544503350151e-150,1.4223237313334164e-150,1.4221029250432952e-150,1.421882084463821e-150,1.421661209579014e-150,1.421440300372882e-150,1.421219356829421e-150,1.4209983789326142e-150,1.4207773666664322e-150,1.4205563200148335e-150,1.4203352389617635e-150,1.4201141234911562e-150,1.4198929735869316e-150,1.4196717892329984e-150,1.4194505704132523e-150,1.4192293171115763e-150,1.4190080293118414e-150,1.4187867069979054e-150,1.4185653501536134e-150,1.418343958762799e-150,1.4181225328092817e-150,1.4179010722768695e-150,1.4176795771493576e-150,1.4174580474105276e-150,1.4172364830441493e-150,1.41701488403398e-150,1.4167932503637637e-150,1.4165715820172314e-150,1.4163498789781028e-150,1.4161281412300833e-150,1.4159063687568662e-150,1.4156845615421322e-150,1.4154627195695488e-150,1.415240842822771e-150,1.4150189312854412e-150,1.4147969849411879e-150,1.4145750037736282e-150,1.4143529877663654e-150,1.41413093690299e-150,1.4139088511670804e-150,1.413686730542201e-150,1.4134645750119038e-150,1.413242384559728e-150,1.4130201591691994e-150,1.4127978988238317e-150,1.412575603507125e-150,1.412353273202566e-150,1.4121309078936296e-150,1.4119085075637768e-150,1.411686072196455e-150,1.4114636017751006e-150,1.4112410962831347e-150,1.4110185557039667e-150,1.4107959800209924e-150,1.4105733692175945e-150,1.410350723277143e-150,1.4101280421829944e-150,1.409905325918492e-150,1.409682574466966e-150,1.4094597878117337e-150,1.409236965936099e-150,1.4090141088233524e-150,1.4087912164567716e-150,1.4085682888196207e-150,1.408345325895151e-150,1.4081223276665997e-150,1.407899294117192e-150,1.4076762252301385e-150,1.4074531209886373e-150,1.407229981375873e-150,1.4070068063750167e-150,1.4067835959692266e-150,1.406560350141647e-150,1.406337068875409e-150,1.4061137521536303e-150,1.4058903999594156e-150,1.4056670122758552e-150,1.405443589086027e-150,1.4052201303729952e-150,1.4049966361198103e-150,1.4047731063095089e-150,1.404549540925115e-150,1.4043259399496384e-150,1.4041023033660755e-150,1.40387863115741e-150,1.403654923306611e-150,1.4034311797966339e-150,1.4032074006104216e-150,1.4029835857309024e-150,1.4027597351409913e-150,1.4025358488235903e-150,1.4023119267615865e-150,1.4020879689378542e-150,1.4018639753352539e-150,1.4016399459366325e-150,1.4014158807248226e-150,1.4011917796826436e-150,1.4009676427929015e-150,1.4007434700383874e-150,1.40051926140188e-150,1.400295016866143e-150,1.4000707364139266e-150,1.3998464200279686e-150,1.3996220676909906e-150,1.399397679385702e-150,1.399173255094798e-150,1.3989487948009594e-150,1.3987242984868537e-150,1.3984997661351343e-150,1.3982751977284406e-150,1.398050593249398e-150,1.397825952680618e-150,1.3976012760046987e-150,1.3973765632042232e-150,1.397151814261761e-150,1.396927029159868e-150,1.3967022078810856e-150,1.396477350407941e-150,1.3962524567229478e-150,1.3960275268086055e-150,1.3958025606473988e-150,1.3955775582217996e-150,1.395352519514264e-150,1.3951274445072352e-150,1.3949023331831417e-150,1.3946771855243984e-150,1.394452001513405e-150,1.3942267811325477e-150,1.3940015243641989e-150,1.3937762311907152e-150,1.3935509015944405e-150,1.393325535557704e-150,1.39310013306282e-150,1.3928746940920893e-150,1.3926492186277975e-150,1.392423706652217e-150,1.392198158147605e-150,1.3919725730962042e-150,1.3917469514802437e-150,1.3915212932819376e-150,1.3912955984834857e-150,1.3910698670670731e-150,1.3908440990148714e-150,1.3906182943090362e-150,1.39039245293171e-150,1.39016657486502e-150,1.3899406600910794e-150,1.3897147085919865e-150,1.389488720349825e-150,1.3892626953466643e-150,1.389036633564559e-150,1.388810534985549e-150,1.38858439959166e-150,1.388358227364903e-150,1.3881320182872735e-150,1.3879057723407538e-150,1.38767948950731e-150,1.3874531697688943e-150,1.3872268131074445e-150,1.3870004195048828e-150,1.3867739889431172e-150,1.386547521404041e-150,1.3863210168695322e-150,1.3860944753214543e-150,1.3858678967416564e-150,1.3856412811119718e-150,1.3854146284142196e-150,1.3851879386302044e-150,1.384961211741715e-150,1.3847344477305255e-150,1.3845076465783955e-150,1.3842808082670695e-150,1.3840539327782771e-150,1.3838270200937327e-150,1.3836000701951358e-150,1.3833730830641707e-150,1.383146058682507e-150,1.3829189970317993e-150,1.3826918980936865e-150,1.3824647618497932e-150,1.3822375882817287e-150,1.382010377371087e-150,1.3817831290994468e-150,1.381555843448372e-150,1.3813285203994113e-150,1.381101159934098e-150,1.3808737620339504e-150,1.3806463266804717e-150,1.3804188538551492e-150,1.380191343539456e-150,1.3799637957148487e-150,1.3797362103627693e-150,1.3795085874646452e-150,1.379280927001887e-150,1.3790532289558908e-150,1.3788254933080377e-150,1.3785977200396922e-150,1.3783699091322046e-150,1.378142060566909e-150,1.3779141743251249e-150,1.3776862503881552e-150,1.3774582887372883e-150,1.377230289353797e-150,1.3770022522189378e-150,1.3767741773139527e-150,1.3765460646200677e-150,1.376317914118493e-150,1.376089725790424e-150,1.3758614996170394e-150,1.375633235579503e-150,1.375404933658963e-150,1.375176593836552e-150,1.3749482160933863e-150,1.3747198004105673e-150,1.37449134676918e-150,1.374262855150294e-150,1.3740343255349634e-150,1.3738057579042266e-150,1.3735771522391056e-150,1.3733485085206066e-150,1.3731198267297212e-150,1.3728911068474234e-150,1.372662348854673e-150,1.3724335527324126e-150,1.37220471846157e-150,1.3719758460230558e-150,1.3717469353977665e-150,1.3715179865665811e-150,1.371288999510363e-150,1.3710599742099604e-150,1.3708309106462044e-150,1.3706018087999102e-150,1.370372668651878e-150,1.370143490182891e-150,1.369914273373717e-150,1.3696850182051064e-150,1.3694557246577952e-150,1.369226392712502e-150,1.36899702234993e-150,1.3687676135507663e-150,1.3685381662956805e-150,1.3683086805653276e-150,1.368079156340346e-150,1.3678495936013566e-150,1.367619992328966e-150,1.367390352503763e-150,1.3671606741063207e-150,1.366930957117196e-150,1.366701201516929e-150,1.366471407286044e-150,1.3662415744050487e-150,1.3660117028544338e-150,1.3657817926146747e-150,1.3655518436662297e-150,1.3653218559895403e-150,1.3650918295650323e-150,1.3648617643731146e-150,1.3646316603941796e-150,1.3644015176086035e-150,1.364171335996745e-150,1.3639411155389475e-150,1.363710856215537e-150,1.3634805580068227e-150,1.3632502208930983e-150,1.3630198448546394e-150,1.362789429871706e-150,1.362558975924541e-150,1.3623284829933705e-150,1.362097951058404e-150,1.3618673800998343e-150,1.3616367700978375e-150,1.3614061210325724e-150,1.3611754328841815e-150,1.3609447056327908e-150,1.3607139392585082e-150,1.3604831337414265e-150,1.3602522890616196e-150,1.360021405199146e-150,1.3597904821340472e-150,1.3595595198463468e-150,1.3593285183160518e-150,1.359097477523153e-150,1.358866397447623e-150,1.3586352780694183e-150,1.3584041193684778e-150,1.3581729213247237e-150,1.3579416839180608e-150,1.3577104071283767e-150,1.3574790909355426e-150,1.3572477353194114e-150,1.35701634025982e-150,1.356784905736587e-150,1.356553431729515e-150,1.356321918218388e-150,1.3560903651829743e-150,1.355858772603023e-150,1.355627140458268e-150,1.3553954687284244e-150,1.3551637573931903e-150,1.3549320064322467e-150,1.3547002158252568e-150,1.3544683855518675e-150,1.3542365155917066e-150,1.3540046059243854e-150,1.3537726565294983e-150,1.3535406673866208e-150,1.3533086384753122e-150,1.3530765697751133e-150,1.3528444612655483e-150,1.352612312926123e-150,1.3523801247363258e-150,1.3521478966756278e-150,1.3519156287234825e-150,1.351683320859325e-150,1.3514509730625735e-150,1.3512185853126287e-150,1.3509861575888723e-150,1.35075368987067e-150,1.350521182137368e-150,1.350288634368296e-150,1.3500560465427657e-150,1.3498234186400703e-150,1.349590750639486e-150,1.3493580425202702e-150,1.3491252942616633e-150,1.3488925058428873e-150,1.3486596772431465e-150,1.348426808441627e-150,1.3481938994174972e-150,1.347960950149907e-150,1.3477279606179894e-150,1.3474949308008579e-150,1.3472618606776092e-150,1.3470287502273206e-150,1.346795599429053e-150,1.3465624082618475e-150,1.3463291767047278e-150,1.3460959047366998e-150,1.3458625923367507e-150,1.3456292394838494e-150,1.3453958461569468e-150,1.3451624123349757e-150,1.3449289379968504e-150,1.3446954231214666e-150,1.344461867687702e-150,1.344228271674416e-150,1.34399463506045e-150,1.343760957824626e-150,1.3435272399457484e-150,1.343293481402603e-150,1.3430596821739566e-150,1.3428258422385584e-150,1.3425919615751385e-150,1.3423580401624084e-150,1.3421240779790617e-150,1.3418900750037726e-150,1.3416560312151975e-150,1.3414219465919735e-150,1.3411878211127191e-150,1.3409536547560352e-150,1.3407194475005023e-150,1.3404851993246833e-150,1.3402509102071223e-150,1.3400165801263447e-150,1.3397822090608565e-150,1.3395477969891454e-150,1.3393133438896803e-150,1.339078849740911e-150,1.3388443145212686e-150,1.3386097382091654e-150,1.338375120782994e-150,1.3381404622211297e-150,1.337905762501927e-150,1.3376710216037227e-150,1.3374362395048337e-150,1.3372014161835588e-150,1.336966551618177e-150,1.3367316457869483e-150,1.336496698668114e-150,1.336261710239896e-150,1.336026680480497e-150,1.3357916093681007e-150,1.3355564968808713e-150,1.335321342996954e-150,1.335086147694475e-150,1.3348509109515405e-150,1.3346156327462382e-150,1.334380313056636e-150,1.3341449518607828e-150,1.3339095491367076e-150,1.3336741048624206e-150,1.3334386190159121e-150,1.3332030915751534e-150,1.3329675225180964e-150,1.3327319118226725e-150,1.332496259466795e-150,1.3322605654283565e-150,1.3320248296852308e-150,1.331789052215272e-150,1.3315532329963143e-150,1.3313173720061725e-150,1.3310814692226413e-150,1.3308455246234965e-150,1.3306095381864937e-150,1.3303735098893687e-150,1.3301374397098379e-150,1.3299013276255974e-150,1.329665173614324e-150,1.3294289776536747e-150,1.3291927397212864e-150,1.3289564597947758e-150,1.3287201378517402e-150,1.328483773869757e-150,1.3282473678263836e-150,1.328010919699157e-150,1.3277744294655944e-150,1.3275378971031934e-150,1.3273013225894312e-150,1.327064705901765e-150,1.3268280470176312e-150,1.3265913459144475e-150,1.3263546025696107e-150,1.326117816960497e-150,1.3258809890644628e-150,1.3256441188588448e-150,1.325407206320958e-150,1.325170251428099e-150,1.3249332541575426e-150,1.324696214486544e-150,1.3244591323923376e-150,1.324222007852138e-150,1.3239848408431392e-150,1.323747631342514e-150,1.323510379327416e-150,1.3232730847749775e-150,1.3230357476623106e-150,1.3227983679665067e-150,1.3225609456646365e-150,1.3223234807337506e-150,1.3220859731508787e-150,1.3218484228930298e-150,1.3216108299371925e-150,1.3213731942603342e-150,1.321135515839402e-150,1.3208977946513226e-150,1.3206600306730008e-150,1.320422223881322e-150,1.3201843742531495e-150,1.3199464817653267e-150,1.319708546394676e-150,1.319470568117998e-150,1.3192325469120738e-150,1.3189944827536624e-150,1.3187563756195021e-150,1.3185182254863107e-150,1.3182800323307845e-150,1.3180417961295985e-150,1.3178035168594074e-150,1.317565194496844e-150,1.3173268290185206e-150,1.317088420401028e-150,1.3168499686209356e-150,1.3166114736547922e-150,1.3163729354791247e-150,1.3161343540704392e-150,1.31589572940522e-150,1.315657061459931e-150,1.3154183502110136e-150,1.3151795956348884e-150,1.314940797707955e-150,1.3147019564065908e-150,1.314463071707152e-150,1.3142241435859737e-150,1.3139851720193688e-150,1.3137461569836293e-150,1.313507098455025e-150,1.3132679964098045e-150,1.3130288508241953e-150,1.3127896616744023e-150,1.3125504289366086e-150,1.312311152586977e-150,1.312071832601647e-150,1.311832468956737e-150,1.3115930616283438e-150,1.311353610592542e-150,1.311114115825385e-150,1.3108745773029034e-150,1.310634995001106e-150,1.3103953688959807e-150,1.3101556989634926e-150,1.3099159851795848e-150,1.3096762275201783e-150,1.309436425961173e-150,1.3091965804784455e-150,1.308956691047851e-150,1.3087167576452222e-150,1.30847678024637e-150,1.308236758827083e-150,1.3079966933631278e-150,1.3077565838302478e-150,1.3075164302041654e-150,1.30727623246058e-150,1.3070359905751687e-150,1.3067957045235865e-150,1.306555374281466e-150,1.3063149998244166e-150,1.3060745811280264e-150,1.3058341181678606e-150,1.3055936109194616e-150,1.3053530593583493e-150,1.3051124634600219e-150,1.3048718231999537e-150,1.3046311385535973e-150,1.3043904094963822e-150,1.3041496360037155e-150,1.3039088180509818e-150,1.303667955613542e-150,1.3034270486667355e-150,1.3031860971858778e-150,1.3029451011462628e-150,1.3027040605231602e-150,1.3024629752918173e-150,1.3022218454274592e-150,1.301980670905287e-150,1.3017394517004798e-150,1.301498187788193e-150,1.301256879143559e-150,1.3010155257416872e-150,1.3007741275576643e-150,1.3005326845665537e-150,1.3002911967433955e-150,1.3000496640632064e-150,1.2998080865009803e-150,1.299566464031688e-150,1.299324796630276e-150,1.2990830842716692e-150,1.2988413269307676e-150,1.2985995245824483e-150,1.2983576772015656e-150,1.29811578476295e-150,1.297873847241408e-150,1.2976318646117234e-150,1.297389836848656e-150,1.2971477639269423e-150,1.2969056458212953e-150,1.2966634825064037e-150,1.2964212739569338e-150,1.296179020147527e-150,1.295936721052802e-150,1.2956943766473526e-150,1.2954519869057502e-150,1.2952095518025415e-150,1.2949670713122495e-150,1.2947245454093735e-150,1.294481974068389e-150,1.2942393572637471e-150,1.2939966949698755e-150,1.293753987161178e-150,1.2935112338120338e-150,1.293268434896798e-150,1.2930255903898028e-150,1.292782700265355e-150,1.2925397644977376e-150,1.2922967830612096e-150,1.292053755930006e-150,1.291810683078337e-150,1.2915675644803892e-150,1.2913244001103241e-150,1.2910811899422793e-150,1.2908379339503686e-150,1.2905946321086806e-150,1.2903512843912794e-150,1.2901078907722055e-150,1.289864451225474e-150,1.2896209657250758e-150,1.2893774342449778e-150,1.289133856759121e-150,1.2888902332414233e-150,1.2886465636657768e-150,1.288402848006049e-150,1.2881590862360842e-150,1.2879152783296994e-150,1.2876714242606892e-150,1.2874275240028216e-150,1.287183577529841e-150,1.286939584815466e-150,1.2866955458333912e-150,1.2864514605572853e-150,1.286207328960793e-150,1.2859631510175326e-150,1.2857189267010987e-150,1.2854746559850604e-150,1.2852303388429616e-150,1.2849859752483208e-150,1.2847415651746315e-150,1.2844971085953624e-150,1.2842526054839565e-150,1.2840080558138312e-150,1.2837634595583795e-150,1.2835188166909684e-150,1.2832741271849393e-150,1.283029391013609e-150,1.2827846081502677e-150,1.2825397785681817e-150,1.28229490224059e-150,1.2820499791407075e-150,1.2818050092417227e-150,1.281559992516799e-150,1.2813149289390728e-150,1.281069818481657e-150,1.2808246611176373e-150,1.2805794568200733e-150,1.2803342055620003e-150,1.2800889073164266e-150,1.2798435620563346e-150,1.2795981697546816e-150,1.2793527303843986e-150,1.27910724391839e-150,1.278861710329535e-150,1.278616129590687e-150,1.278370501674672e-150,1.278124826554291e-150,1.277879104202319e-150,1.2776333345915035e-150,1.2773875176945676e-150,1.2771416534842067e-150,1.2768957419330905e-150,1.2766497830138625e-150,1.2764037766991393e-150,1.2761577229615117e-150,1.2759116217735436e-150,1.2756654731077732e-150,1.2754192769367113e-150,1.2751730332328423e-150,1.2749267419686246e-150,1.2746804031164895e-150,1.2744340166488417e-150,1.2741875825380594e-150,1.2739411007564944e-150,1.2736945712764708e-150,1.2734479940702867e-150,1.2732013691102132e-150,1.2729546963684944e-150,1.2727079758173474e-150,1.272461207428963e-150,1.2722143911755038e-150,1.2719675270291071e-150,1.2717206149618817e-150,1.27147365494591e-150,1.271226646953247e-150,1.2709795909559206e-150,1.2707324869259318e-150,1.270485334835254e-150,1.270238134655834e-150,1.26999088635959e-150,1.2697435899184136e-150,1.2694962453041698e-150,1.269248852488695e-150,1.2690014114437986e-150,1.2687539221412628e-150,1.2685063845528417e-150,1.268258798650262e-150,1.2680111644052233e-150,1.2677634817893968e-150,1.2675157507744265e-150,1.267267971331929e-150,1.2670201434334922e-150,1.2667722670506768e-150,1.2665243421550157e-150,1.2662763687180142e-150,1.2660283467111485e-150,1.2657802761058682e-150,1.2655321568735945e-150,1.2652839889857203e-150,1.2650357724136107e-150,1.2647875071286028e-150,1.2645391931020046e-150,1.2642908303050978e-150,1.264042418709134e-150,1.2637939582853378e-150,1.2635454490049048e-150,1.2632968908390024e-150,1.2630482837587701e-150,1.2627996277353185e-150,1.2625509227397298e-150,1.2623021687430578e-150,1.262053365716328e-150,1.261804513630537e-150,1.261555612456653e-150,1.2613066621656148e-150,1.261057662728334e-150,1.2608086141156924e-150,1.2605595162985432e-150,1.260310369247711e-150,1.2600611729339912e-150,1.2598119273281506e-150,1.2595626324009275e-150,1.2593132881230303e-150,1.2590638944651388e-150,1.2588144513979043e-150,1.2585649588919483e-150,1.258315416917863e-150,1.2580658254462123e-150,1.2578161844475303e-150,1.257566493892322e-150,1.2573167537510634e-150,1.2570669639942003e-150,1.2568171245921502e-150,1.2565672355153005e-150,1.2563172967340095e-150,1.2560673082186055e-150,1.255817269939388e-150,1.2555671818666264e-150,1.2553170439705603e-150,1.255066856221401e-150,1.2548166185893278e-150,1.2545663310444923e-150,1.2543159935570155e-150,1.2540656060969886e-150,1.2538151686344728e-150,1.2535646811394997e-150,1.2533141435820708e-150,1.253063555932158e-150,1.2528129181597022e-150,1.252562230234615e-150,1.252311492126778e-150,1.252060703806042e-150,1.2518098652422283e-150,1.251558976405127e-150,1.2513080372644992e-150,1.251057047790075e-150,1.2508060079515537e-150,1.2505549177186047e-150,1.250303777060867e-150,1.2500525859479493e-150,1.2498013443494285e-150,1.249550052234853e-150,1.2492987095737384e-150,1.249047316335571e-150,1.248795872489806e-150,1.248544378005868e-150,1.248292832853151e-150,1.248041237001017e-150,1.2477895904187986e-150,1.2475378930757963e-150,1.2472861449412806e-150,1.2470343459844904e-150,1.2467824961746335e-150,1.2465305954808868e-150,1.246278643872396e-150,1.2460266413182755e-150,1.245774587787609e-150,1.2455224832494477e-150,1.245270327672813e-150,1.2450181210266938e-150,1.2447658632800484e-150,1.2445135544018025e-150,1.2442611943608512e-150,1.2440087831260584e-150,1.2437563206662552e-150,1.243503806950242e-150,1.2432512419467875e-150,1.2429986256246277e-150,1.242745957952468e-150,1.2424932388989816e-150,1.2422404684328096e-150,1.241987646522561e-150,1.241734773136814e-150,1.241481848244113e-150,1.241228871812972e-150,1.240975843811872e-150,1.240722764209262e-150,1.2404696329735588e-150,1.2402164500731475e-150,1.2399632154763802e-150,1.239709929151577e-150,1.239456591067026e-150,1.239203201190982e-150,1.2389497594916675e-150,1.238696265937274e-150,1.2384427204959582e-150,1.2381891231358454e-150,1.2379354738250287e-150,1.2376817725315674e-150,1.2374280192234888e-150,1.2371742138687868e-150,1.2369203564354233e-150,1.236666446891327e-150,1.236412485204393e-150,1.2361584713424843e-150,1.2359044052734305e-150,1.235650286965028e-150,1.2353961163850405e-150,1.235141893501198e-150,1.2348876182811976e-150,1.2346332906927033e-150,1.2343789107033453e-150,1.2341244782807208e-150,1.2338699933923938e-150,1.233615456005894e-150,1.2333608660887187e-150,1.2331062236083307e-150,1.2328515285321597e-150,1.2325967808276017e-150,1.232341980462019e-150,1.23208712740274e-150,1.2318322216170593e-150,1.2315772630722377e-150,1.2313222517355025e-150,1.2310671875740462e-150,1.2308120705550285e-150,1.2305569006455738e-150,1.2303016778127732e-150,1.2300464020236834e-150,1.2297910732453272e-150,1.2295356914446922e-150,1.2292802565887334e-150,1.2290247686443697e-150,1.2287692275784864e-150,1.228513633357935e-150,1.228257985949531e-150,1.228002285320057e-150,1.22774653143626e-150,1.2274907242648522e-150,1.227234863772512e-150,1.226978949925882e-150,1.226722982691571e-150,1.2264669620361524e-150,1.2262108879261645e-150,1.2259547603281115e-150,1.2256985792084616e-150,1.2254423445336485e-150,1.225186056270071e-150,1.2249297143840924e-150,1.2246733188420404e-150,1.2244168696102085e-150,1.224160366654854e-150,1.2239038099421992e-150,1.2236471994384308e-150,1.2233905351097006e-150,1.2231338169221238e-150,1.2228770448417813e-150,1.2226202188347172e-150,1.222363338866941e-150,1.2221064049044257e-150,1.2218494169131091e-150,1.2215923748588926e-150,1.2213352787076419e-150,1.221078128425187e-150,1.2208209239773218e-150,1.220563665329804e-150,1.2203063524483556e-150,1.220048985298662e-150,1.2197915638463723e-150,1.2195340880571e-150,1.219276557896422e-150,1.2190189733298786e-150,1.2187613343229738e-150,1.2185036408411752e-150,1.218245892849914e-150,1.2179880903145845e-150,1.2177302332005445e-150,1.2174723214731153e-150,1.2172143550975815e-150,1.2169563340391903e-150,1.2166982582631526e-150,1.2164401277346426e-150,1.2161819424187968e-150,1.2159237022807155e-150,1.2156654072854612e-150,1.2154070573980598e-150,1.2151486525834997e-150,1.2148901928067323e-150,1.2146316780326715e-150,1.214373108226194e-150,1.2141144833521392e-150,1.2138558033753086e-150,1.2135970682604667e-150,1.2133382779723404e-150,1.2130794324756185e-150,1.2128205317349525e-150,1.212561575714956e-150,1.2123025643802052e-150,1.2120434976952377e-150,1.2117843756245538e-150,1.2115251981326159e-150,1.2112659651838478e-150,1.2110066767426358e-150,1.2107473327733276e-150,1.2104879332402331e-150,1.2102284781076237e-150,1.2099689673397329e-150,1.209709400900755e-150,1.2094497787548467e-150,1.2091901008661261e-150,1.2089303671986723e-150,1.208670577716526e-150,1.2084107323836896e-150,1.2081508311641263e-150,1.2078908740217608e-150,1.207630860920479e-150,1.2073707918241279e-150,1.2071106666965154e-150,1.2068504855014105e-150,1.206590248202543e-150,1.206329954763604e-150,1.2060696051482447e-150,1.2058091993200778e-150,1.2055487372426764e-150,1.205288218879574e-150,1.2050276441942649e-150,1.204767013150204e-150,1.2045063257108068e-150,1.2042455818394488e-150,1.203984781499466e-150,1.2037239246541546e-150,1.2034630112667715e-150,1.203202041300533e-150,1.202941014718616e-150,1.2026799314841577e-150,1.2024187915602544e-150,1.2021575949099629e-150,1.2018963414963e-150,1.201635031282242e-150,1.2013736642307252e-150,1.201112240304645e-150,1.2008507594668572e-150,1.2005892216801763e-150,1.2003276269073774e-150,1.2000659751111938e-150,1.1998042662543189e-150,1.1995425002994053e-150,1.1992806772090649e-150,1.1990187969458682e-150,1.1987568594723457e-150,1.1984948647509865e-150,1.1982328127442388e-150,1.1979707034145093e-150,1.1977085367241641e-150,1.197446312635528e-150,1.1971840311108843e-150,1.1969216921124753e-150,1.1966592956025016e-150,1.1963968415431227e-150,1.196134329896456e-150,1.195871760624578e-150,1.1956091336895232e-150,1.1953464490532845e-150,1.1950837066778128e-150,1.1948209065250176e-150,1.1945580485567662e-150,1.1942951327348836e-150,1.1940321590211537e-150,1.1937691273773175e-150,1.193506037765074e-150,1.1932428901460802e-150,1.1929796844819507e-150,1.1927164207342576e-150,1.192453098864531e-150,1.192189718834258e-150,1.1919262806048835e-150,1.1916627841378096e-150,1.1913992293943957e-150,1.1911356163359588e-150,1.1908719449237724e-150,1.1906082151190679e-150,1.1903444268830333e-150,1.1900805801768136e-150,1.1898166749615107e-150,1.1895527111981837e-150,1.1892886888478482e-150,1.1890246078714764e-150,1.1887604682299972e-150,1.1884962698842965e-150,1.1882320127952162e-150,1.1879676969235548e-150,1.1877033222300675e-150,1.1874388886754651e-150,1.1871743962204154e-150,1.1869098448255418e-150,1.1866452344514244e-150,1.1863805650585988e-150,1.1861158366075569e-150,1.1858510490587461e-150,1.1855862023725703e-150,1.1853212965093883e-150,1.1850563314295155e-150,1.1847913070932222e-150,1.1845262234607346e-150,1.1842610804922343e-150,1.1839958781478586e-150,1.1837306163876993e-150,1.1834652951718047e-150,1.1831999144601774e-150,1.1829344742127754e-150,1.1826689743895119e-150,1.1824034149502545e-150,1.1821377958548268e-150,1.1818721170630063e-150,1.1816063785345256e-150,1.1813405802290722e-150,1.1810747221062879e-150,1.1808088041257692e-150,1.1805428262470673e-150,1.1802767884296877e-150,1.18001069063309e-150,1.1797445328166884e-150,1.1794783149398511e-150,1.1792120369619006e-150,1.1789456988421133e-150,1.17867930053972e-150,1.1784128420139045e-150,1.1781463232238056e-150,1.1778797441285149e-150,1.1776131046870785e-150,1.1773464048584955e-150,1.1770796446017187e-150,1.1768128238756547e-150,1.1765459426391632e-150,1.1762790008510572e-150,1.176011998470103e-150,1.1757449354550204e-150,1.1754778117644816e-150,1.1752106273571127e-150,1.174943382191492e-150,1.1746760762261511e-150,1.1744087094195746e-150,1.1741412817301993e-150,1.1738737931164148e-150,1.1736062435365635e-150,1.1733386329489402e-150,1.1730709613117922e-150,1.1728032285833188e-150,1.1725354347216721e-150,1.172267579684956e-150,1.1719996634312269e-150,1.1717316859184926e-150,1.1714636471047137e-150,1.1711955469478023e-150,1.170927385405622e-150,1.1706591624359884e-150,1.1703908779966693e-150,1.1701225320453831e-150,1.1698541245398004e-150,1.169585655437543e-150,1.169317124696184e-150,1.1690485322732481e-150,1.1687798781262107e-150,1.1685111622124985e-150,1.1682423844894895e-150,1.1679735449145123e-150,1.1677046434448468e-150,1.1674356800377231e-150,1.1671666546503225e-150,1.1668975672397768e-150,1.1666284177631685e-150,1.1663592061775301e-150,1.166089932439845e-150,1.1658205965070469e-150,1.1655511983360192e-150,1.1652817378835964e-150,1.1650122151065623e-150,1.1647426299616509e-150,1.1644729824055462e-150,1.164203272394882e-150,1.1639334998862418e-150,1.1636636648361588e-150,1.1633937672011161e-150,1.1631238069375455e-150,1.1628537840018293e-150,1.1625836983502982e-150,1.1623135499392328e-150,1.1620433387248625e-150,1.161773064663366e-150,1.1615027277108711e-150,1.1612323278234543e-150,1.1609618649571409e-150,1.1606913390679051e-150,1.16042075011167e-150,1.160150098044307e-150,1.1598793828216362e-150,1.1596086043994257e-150,1.1593377627333925e-150,1.1590668577792017e-150,1.1587958894924664e-150,1.1585248578287479e-150,1.1582537627435556e-150,1.1579826041923467e-150,1.1577113821305263e-150,1.1574400965134472e-150,1.1571687472964096e-150,1.156897334434662e-150,1.1566258578833998e-150,1.1563543175977657e-150,1.1560827135328504e-150,1.1558110456436913e-150,1.1555393138852729e-150,1.155267518212527e-150,1.1549956585803324e-150,1.1547237349435145e-150,1.1544517472568459e-150,1.1541796954750454e-150,1.1539075795527788e-150,1.1536353994446586e-150,1.1533631551052432e-150,1.1530908464890376e-150,1.1528184735504934e-150,1.1525460362440078e-150,1.1522735345239246e-150,1.1520009683445332e-150,1.1517283376600692e-150,1.151455642424714e-150,1.1511828825925945e-150,1.1509100581177833e-150,1.1506371689542987e-150,1.1503642150561047e-150,1.1500911963771098e-150,1.149818112871169e-150,1.1495449644920812e-150,1.1492717511935915e-150,1.1489984729293894e-150,1.1487251296531094e-150,1.148451721318331e-150,1.1481782478785782e-150,1.1479047092873197e-150,1.1476311054979688e-150,1.1473574364638835e-150,1.1470837021383655e-150,1.1468099024746615e-150,1.1465360374259619e-150,1.1462621069454015e-150,1.1459881109860588e-150,1.1457140495009563e-150,1.1454399224430602e-150,1.1451657297652808e-150,1.1448914714204716e-150,1.1446171473614296e-150,1.1443427575408956e-150,1.1440683019115533e-150,1.14379378042603e-150,1.1435191930368958e-150,1.1432445396966643e-150,1.1429698203577914e-150,1.1426950349726764e-150,1.1424201834936611e-150,1.1421452658730301e-150,1.1418702820630104e-150,1.1415952320157714e-150,1.1413201156834254e-150,1.1410449330180262e-150,1.14076968397157e-150,1.1404943684959957e-150,1.1402189865431833e-150,1.1399435380649554e-150,1.1396680230130759e-150,1.1393924413392503e-150,1.1391167929951263e-150,1.1388410779322923e-150,1.1385652961022787e-150,1.1382894474565571e-150,1.1380135319465399e-150,1.1377375495235808e-150,1.1374615001389746e-150,1.137185383743957e-150,1.1369092002897043e-150,1.1366329497273336e-150,1.1363566320079025e-150,1.1360802470824092e-150,1.135803794901792e-150,1.13552727541693e-150,1.1352506885786419e-150,1.1349740343376869e-150,1.1346973126447639e-150,1.1344205234505117e-150,1.1341436667055093e-150,1.1338667423602746e-150,1.1335897503652659e-150,1.1333126906708801e-150,1.1330355632274542e-150,1.1327583679852639e-150,1.1324811048945244e-150,1.1322037739053898e-150,1.1319263749679532e-150,1.1316489080322463e-150,1.13137137304824e-150,1.1310937699658433e-150,1.130816098734904e-150,1.1305383593052083e-150,1.1302605516264808e-150,1.129982675648384e-150,1.1297047313205185e-150,1.1294267185924235e-150,1.1291486374135752e-150,1.1288704877333882e-150,1.1285922695012146e-150,1.1283139826663438e-150,1.1280356271780029e-150,1.1277572029853565e-150,1.1274787100375062e-150,1.1272001482834906e-150,1.1269215176722856e-150,1.1266428181528038e-150,1.1263640496738947e-150,1.1260852121843445e-150,1.1258063056328759e-150,1.1255273299681482e-150,1.1252482851387569e-150,1.1249691710932336e-150,1.1246899877800465e-150,1.1244107351475997e-150,1.1241314131442328e-150,1.1238520217182216e-150,1.1235725608177774e-150,1.1232930303910473e-150,1.1230134303861138e-150,1.1227337607509944e-150,1.1224540214336421e-150,1.1221742123819454e-150,1.1218943335437271e-150,1.1216143848667455e-150,1.1213343662986933e-150,1.121054277787198e-150,1.1207741192798219e-150,1.1204938907240614e-150,1.1202135920673472e-150,1.1199332232570447e-150,1.1196527842404526e-150,1.1193722749648045e-150,1.1190916953772671e-150,1.1188110454249414e-150,1.1185303250548616e-150,1.1182495342139958e-150,1.1179686728492453e-150,1.1176877409074446e-150,1.1174067383353617e-150,1.117125665079697e-150,1.1168445210870848e-150,1.1165633063040914e-150,1.1162820206772159e-150,1.1160006641528905e-150,1.1157192366774793e-150,1.1154377381972787e-150,1.115156168658518e-150,1.114874528007358e-150,1.1145928161898917e-150,1.1143110331521437e-150,1.1140291788400707e-150,1.1137472531995607e-150,1.1134652561764336e-150,1.11318318771644e-150,1.1129010477652625e-150,1.1126188362685145e-150,1.1123365531717403e-150,1.112054198420415e-150,1.111771771959945e-150,1.1114892737356668e-150,1.1112067036928479e-150,1.1109240617766854e-150,1.1106413479323075e-150,1.1103585621047723e-150,1.1100757042390674e-150,1.109792774280111e-150,1.1095097721727512e-150,1.1092266978617645e-150,1.1089435512918583e-150,1.1086603324076688e-150,1.1083770411537614e-150,1.1080936774746307e-150,1.1078102413147007e-150,1.1075267326183235e-150,1.1072431513297808e-150,1.1069594973932823e-150,1.1066757707529665e-150,1.1063919713529001e-150,1.1061080991370784e-150,1.1058241540494244e-150,1.1055401360337892e-150,1.105256045033952e-150,1.1049718809936195e-150,1.104687643856426e-150,1.1044033335659332e-150,1.1041189500656305e-150,1.1038344932989341e-150,1.1035499632091874e-150,1.1032653597396608e-150,1.1029806828335514e-150,1.1026959324339831e-150,1.1024111084840064e-150,1.102126210926598e-150,1.101841239704661e-150,1.1015561947610246e-150,1.1012710760384441e-150,1.1009858834796006e-150,1.1007006170271012e-150,1.100415276623478e-150,1.100129862211189e-150,1.0998443737326177e-150,1.0995588111300724e-150,1.0992731743457867e-150,1.098987463321919e-150,1.0987016780005529e-150,1.0984158183236962e-150,1.098129884233281e-150,1.0978438756711646e-150,1.0975577925791278e-150,1.0972716348988758e-150,1.0969854025720379e-150,1.0966990955401671e-150,1.0964127137447398e-150,1.0961262571271563e-150,1.0958397256287404e-150,1.0955531191907389e-150,1.0952664377543218e-150,1.094979681260582e-150,1.0946928496505356e-150,1.094405942865121e-150,1.0941189608451991e-150,1.0938319035315539e-150,1.093544770864891e-150,1.0932575627858383e-150,1.0929702792349458e-150,1.0926829201526854e-150,1.0923954854794502e-150,1.0921079751555557e-150,1.0918203891212383e-150,1.0915327273166557e-150,1.0912449896818866e-150,1.090957176156931e-150,1.0906692866817097e-150,1.0903813211960637e-150,1.0900932796397553e-150,1.0898051619524667e-150,1.0895169680738003e-150,1.0892286979432788e-150,1.0889403515003449e-150,1.0886519286843609e-150,1.088363429434609e-150,1.0880748536902906e-150,1.0877862013905268e-150,1.0874974724743575e-150,1.087208666880742e-150,1.0869197845485583e-150,1.0866308254166034e-150,1.0863417894235925e-150,1.0860526765081596e-150,1.0857634866088567e-150,1.0854742196641546e-150,1.0851848756124413e-150,1.084895454392023e-150,1.0846059559411235e-150,1.0843163801978842e-150,1.0840267271003639e-150,1.0837369965865385e-150,1.0834471885943011e-150,1.0831573030614618e-150,1.0828673399257472e-150,1.0825772991248005e-150,1.0822871805961818e-150,1.0819969842773669e-150,1.0817067101057479e-150,1.0814163580186332e-150,1.0811259279532468e-150,1.0808354198467282e-150,1.0805448336361326e-150,1.0802541692584305e-150,1.0799634266505073e-150,1.0796726057491643e-150,1.0793817064911164e-150,1.0790907288129941e-150,1.0787996726513421e-150,1.0785085379426197e-150,1.0782173246232001e-150,1.0779260326293708e-150,1.0776346618973333e-150,1.0773432123632023e-150,1.0770516839630066e-150,1.076760076632688e-150,1.0764683903081022e-150,1.0761766249250171e-150,1.075884780419114e-150,1.0755928567259869e-150,1.0753008537811424e-150,1.0750087715199992e-150,1.0747166098778887e-150,1.0744243687900542e-150,1.0741320481916507e-150,1.0738396480177451e-150,1.073547168203316e-150,1.0732546086832533e-150,1.0729619693923581e-150,1.0726692502653424e-150,1.0723764512368294e-150,1.072083572241353e-150,1.0717906132133572e-150,1.0714975740871972e-150,1.0712044547971376e-150,1.0709112552773535e-150,1.0706179754619297e-150,1.070324615284861e-150,1.070031174680051e-150,1.0697376535813134e-150,1.0694440519223707e-150,1.0691503696368545e-150,1.068856606658305e-150,1.0685627629201717e-150,1.0682688383558115e-150,1.0679748328984908e-150,1.0676807464813832e-150,1.0673865790375706e-150,1.0670923305000426e-150,1.0667980008016964e-150,1.0665035898753367e-150,1.0662090976536755e-150,1.0659145240693313e-150,1.0656198690548301e-150,1.0653251325426044e-150,1.0650303144649929e-150,1.0647354147542412e-150,1.0644404333425005e-150,1.0641453701618283e-150,1.0638502251441876e-150,1.0635549982214474e-150,1.0632596893253816e-150,1.0629642983876699e-150,1.0626688253398965e-150,1.062373270113551e-150,1.062077632640027e-150,1.0617819128506232e-150,1.0614861106765422e-150,1.0611902260488912e-150,1.0608942588986807e-150,1.0605982091568254e-150,1.0603020767541435e-150,1.0600058616213562e-150,1.0597095636890884e-150,1.0594131828878676e-150,1.0591167191481241e-150,1.0588201724001912e-150,1.0585235425743043e-150,1.0582268296006009e-150,1.0579300334091208e-150,1.0576331539298055e-150,1.0573361910924982e-150,1.0570391448269436e-150,1.0567420150627873e-150,1.0564448017295766e-150,1.0561475047567593e-150,1.0558501240736836e-150,1.0555526596095986e-150,1.0552551112936537e-150,1.054957479054898e-150,1.054659762822281e-150,1.0543619625246513e-150,1.0540640780907575e-150,1.0537661094492472e-150,1.0534680565286671e-150,1.0531699192574629e-150,1.0528716975639792e-150,1.0525733913764586e-150,1.0522750006230424e-150,1.0519765252317697e-150,1.0516779651305776e-150,1.0513793202473008e-150,1.051080590509672e-150,1.0507817758453204e-150,1.0504828761817725e-150,1.0501838914464521e-150,1.049884821566679e-150,1.0495856664696703e-150,1.0492864260825384e-150,1.0489871003322922e-150,1.0486876891458365e-150,1.0483881924499716e-150,1.0480886101713934e-150,1.0477889422366926e-150,1.0474891885723554e-150,1.0471893491047623e-150,1.0468894237601888e-150,1.0465894124648043e-150,1.0462893151446728e-150,1.045989131725752e-150,1.0456888621338934e-150,1.0453885062948422e-150,1.0450880641342362e-150,1.0447875355776071e-150,1.0444869205503791e-150,1.044186218977869e-150,1.043885430785286e-150,1.043584555897732e-150,1.0432835942402002e-150,1.0429825457375761e-150,1.0426814103146365e-150,1.0423801878960495e-150,1.0420788784063746e-150,1.0417774817700622e-150,1.0414759979114527e-150,1.0411744267547779e-150,1.0408727682241594e-150,1.0405710222436087e-150,1.0402691887370274e-150,1.0399672676282064e-150,1.039665258840826e-150,1.0393631622984556e-150,1.0390609779245538e-150,1.0387587056424674e-150,1.038456345375432e-150,1.0381538970465712e-150,1.0378513605788966e-150,1.0375487358953078e-150,1.0372460229185915e-150,1.0369432215714222e-150,1.036640331776361e-150,1.0363373534558561e-150,1.0360342865322423e-150,1.0357311309277406e-150,1.0354278865644583e-150,1.0351245533643886e-150,1.0348211312494104e-150,1.0345176201412877e-150,1.0342140199616701e-150,1.0339103306320921e-150,1.0336065520739728e-150,1.033302684208616e-150,1.0329987269572091e-150,1.0326946802408247e-150,1.032390543980418e-150,1.0320863180968282e-150,1.0317820025107782e-150,1.0314775971428735e-150,1.0311731019136022e-150,1.0308685167433353e-150,1.0305638415523265e-150,1.0302590762607107e-150,1.0299542207885053e-150,1.029649275055609e-150,1.0293442389818023e-150,1.0290391124867459e-150,1.0287338954899824e-150,1.0284285879109342e-150,1.0281231896689047e-150,1.0278177006830767e-150,1.0275121208725136e-150,1.0272064501561578e-150,1.0269006884528315e-150,1.0265948356812358e-150,1.0262888917599507e-150,1.0259828566074349e-150,1.0256767301420248e-150,1.0253705122819363e-150,1.0250642029452617e-150,1.0247578020499717e-150,1.024451309513914e-150,1.0241447252548135e-150,1.023838049190272e-150,1.0235312812377675e-150,1.0232244213146547e-150,1.0229174693381644e-150,1.0226104252254026e-150,1.0223032888933513e-150,1.0219960602588676e-150,1.0216887392386838e-150,1.0213813257494066e-150,1.0210738197075175e-150,1.0207662210293717e-150,1.0204585296311988e-150,1.020150745429102e-150,1.0198428683390578e-150,1.0195348982769158e-150,1.0192268351583985e-150,1.0189186788991011e-150,1.018610429414491e-150,1.0183020866199076e-150,1.0179936504305624e-150,1.0176851207615381e-150,1.0173764975277887e-150,1.0170677806441392e-150,1.0167589700252853e-150,1.0164500655857932e-150,1.016141067240099e-150,1.0158319749025091e-150,1.0155227884871989e-150,1.0152135079082134e-150,1.014904133079467e-150,1.0145946639147421e-150,1.0142851003276903e-150,1.013975442231831e-150,1.0136656895405513e-150,1.0133558421671064e-150,1.0130459000246188e-150,1.0127358630260775e-150,1.012425731084339e-150,1.0121155041121258e-150,1.0118051820220269e-150,1.0114947647264967e-150,1.011184252137856e-150,1.0108736441682904e-150,1.0105629407298507e-150,1.0102521417344524e-150,1.0099412470938753e-150,1.0096302567197639e-150,1.0093191705236262e-150,1.0090079884168335e-150,1.0086967103106211e-150,1.0083853361160868e-150,1.0080738657441912e-150,1.0077622991057572e-150,1.0074506361114703e-150,1.0071388766718771e-150,1.006827020697386e-150,1.0065150680982668e-150,1.0062030187846502e-150,1.0058908726665269e-150,1.0055786296537488e-150,1.0052662896560273e-150,1.0049538525829332e-150,1.0046413183438973e-150,1.0043286868482093e-150,1.0040159580050172e-150,1.0037031317233283e-150,1.0033902079120072e-150,1.003077186479777e-150,1.002764067335218e-150,1.0024508503867677e-150,1.0021375355427207e-150,1.0018241227112283e-150,1.0015106118002977e-150,1.0011970027177922e-150,1.0008832953714309e-150,1.0005694896687882e-150,1.0002555855172934e-150,9.999415828242306e-151,9.996274814967383e-151,9.993132814418089e-151,9.989989825662889e-151,9.986845847768777e-151,9.983700879801281e-151,9.980554920824458e-151,9.977407969900886e-151,9.974260026091668e-151,9.97111108845642e-151,9.967961156053277e-151,9.964810227938886e-151,9.961658303168396e-151,9.958505380795467e-151,9.955351459872258e-151,9.952196539449425e-151,9.94904061857612e-151,9.945883696299991e-151,9.942725771667164e-151,9.939566843722256e-151,9.936406911508366e-151,9.93324597406707e-151,9.930084030438417e-151,9.926921079660929e-151,9.923757120771595e-151,9.920592152805867e-151,9.917426174797661e-151,9.914259185779348e-151,9.911091184781756e-151,9.907922170834158e-151,9.904752142964278e-151,9.901581100198286e-151,9.898409041560786e-151,9.895235966074822e-151,9.892061872761874e-151,9.888886760641846e-151,9.885710628733071e-151,9.882533476052303e-151,9.879355301614718e-151,9.876176104433904e-151,9.872995883521866e-151,9.869814637889008e-151,9.866632366544146e-151,9.863449068494497e-151,9.860264742745672e-151,9.85707938830168e-151,9.853893004164914e-151,9.85070558933616e-151,9.847517142814583e-151,9.844327663597728e-151,9.841137150681517e-151,9.837945603060242e-151,9.834753019726565e-151,9.831559399671509e-151,9.828364741884461e-151,9.825169045353166e-151,9.821972309063718e-151,9.818774532000565e-151,9.815575713146494e-151,9.812375851482644e-151,9.809174945988483e-151,9.805972995641818e-151,9.802769999418788e-151,9.799565956293852e-151,9.796360865239798e-151,9.793154725227734e-151,9.789947535227076e-151,9.786739294205559e-151,9.783530001129222e-151,9.780319654962407e-151,9.777108254667757e-151,9.773895799206211e-151,9.770682287536999e-151,9.76746771861764e-151,9.764252091403933e-151,9.761035404849965e-151,9.75781765790809e-151,9.754598849528942e-151,9.751378978661416e-151,9.748158044252679e-151,9.744936045248149e-151,9.741712980591507e-151,9.738488849224683e-151,9.735263650087854e-151,9.732037382119445e-151,9.728810044256119e-151,9.725581635432771e-151,9.722352154582531e-151,9.719121600636758e-151,9.71588997252503e-151,9.712657269175149e-151,9.709423489513128e-151,9.706188632463193e-151,9.702952696947776e-151,9.699715681887513e-151,9.696477586201237e-151,9.693238408805975e-151,9.689998148616945e-151,9.686756804547549e-151,9.683514375509373e-151,9.680270860412176e-151,9.677026258163895e-151,9.673780567670632e-151,9.670533787836655e-151,9.667285917564391e-151,9.664036955754423e-151,9.660786901305484e-151,9.657535753114459e-151,9.654283510076368e-151,9.651030171084375e-151,9.647775735029775e-151,9.644520200801996e-151,9.641263567288582e-151,9.638005833375211e-151,9.634746997945666e-151,9.631487059881846e-151,9.628226018063757e-151,9.624963871369507e-151,9.621700618675303e-151,9.618436258855446e-151,9.615170790782322e-151,9.61190421332641e-151,9.60863652535626e-151,9.6053677257385e-151,9.602097813337837e-151,9.59882678701703e-151,9.595554645636911e-151,9.592281388056364e-151,9.589007013132327e-151,9.585731519719784e-151,9.582454906671766e-151,9.579177172839336e-151,9.575898317071597e-151,9.572618338215677e-151,9.569337235116729e-151,9.566055006617927e-151,9.562771651560459e-151,9.55948716878352e-151,9.556201557124314e-151,9.552914815418047e-151,9.549626942497911e-151,9.546337937195103e-151,9.543047798338792e-151,9.539756524756137e-151,9.53646411527227e-151,9.533170568710294e-151,9.529875883891277e-151,9.526580059634254e-151,9.52328309475621e-151,9.519984988072084e-151,9.516685738394763e-151,9.513385344535073e-151,9.510083805301775e-151,9.50678111950157e-151,9.503477285939076e-151,9.500172303416838e-151,9.496866170735313e-151,9.493558886692873e-151,9.490250450085796e-151,9.486940859708259e-151,9.483630114352335e-151,9.480318212807991e-151,9.477005153863078e-151,9.473690936303325e-151,9.470375558912338e-151,9.467059020471595e-151,9.463741319760437e-151,9.460422455556066e-151,9.457102426633534e-151,9.453781231765747e-151,9.450458869723455e-151,9.447135339275243e-151,9.443810639187529e-151,9.440484768224565e-151,9.437157725148416e-151,9.433829508718973e-151,9.430500117693932e-151,9.4271695508288e-151,9.423837806876884e-151,9.420504884589283e-151,9.417170782714889e-151,9.413835500000379e-151,9.410499035190207e-151,9.4071613870266e-151,9.403822554249557e-151,9.400482535596834e-151,9.397141329803947e-151,9.393798935604164e-151,9.390455351728496e-151,9.387110576905695e-151,9.383764609862248e-151,9.380417449322371e-151,9.377069094008002e-151,9.373719542638795e-151,9.37036879393212e-151,9.367016846603048e-151,9.363663699364353e-151,9.360309350926504e-151,9.356953799997656e-151,9.353597045283649e-151,9.350239085487997e-151,9.34687991931189e-151,9.343519545454179e-151,9.340157962611375e-151,9.336795169477647e-151,9.333431164744804e-151,9.3300659471023e-151,9.32669951523723e-151,9.323331867834311e-151,9.319963003575886e-151,9.316592921141916e-151,9.313221619209976e-151,9.309849096455243e-151,9.306475351550497e-151,9.303100383166105e-151,9.299724189970032e-151,9.296346770627814e-151,9.292968123802568e-151,9.289588248154977e-151,9.286207142343286e-151,9.2828248050233e-151,9.279441234848373e-151,9.276056430469402e-151,9.272670390534819e-151,9.269283113690594e-151,9.265894598580215e-151,9.262504843844694e-151,9.259113848122554e-151,9.255721610049822e-151,9.252328128260028e-151,9.24893340138419e-151,9.245537428050818e-151,9.242140206885901e-151,9.2387417365129e-151,9.235342015552743e-151,9.231941042623823e-151,9.228538816341982e-151,9.22513533532051e-151,9.221730598170146e-151,9.21832460349905e-151,9.214917349912822e-151,9.211508836014478e-151,9.208099060404444e-151,9.204688021680562e-151,9.201275718438071e-151,9.197862149269604e-151,9.194447312765184e-151,9.191031207512209e-151,9.187613832095455e-151,9.184195185097069e-151,9.180775265096548e-151,9.177354070670751e-151,9.173931600393882e-151,9.170507852837479e-151,9.167082826570417e-151,9.1636565201589e-151,9.16022893216644e-151,9.156800061153872e-151,9.153369905679328e-151,9.149938464298238e-151,9.146505735563326e-151,9.143071718024596e-151,9.13963641022933e-151,9.136199810722076e-151,9.132761918044646e-151,9.129322730736106e-151,9.125882247332767e-151,9.122440466368185e-151,9.118997386373142e-151,9.115553005875652e-151,9.11210732340094e-151,9.108660337471448e-151,9.105212046606817e-151,9.101762449323884e-151,9.098311544136678e-151,9.094859329556405e-151,9.091405804091444e-151,9.087950966247343e-151,9.084494814526807e-151,9.08103734742969e-151,9.077578563452992e-151,9.074118461090847e-151,9.070657038834515e-151,9.06719429517238e-151,9.063730228589936e-151,9.060264837569782e-151,9.056798120591616e-151,9.053330076132221e-151,9.049860702665465e-151,9.04638999866229e-151,9.042917962590699e-151,9.039444592915758e-151,9.035969888099582e-151,9.032493846601325e-151,9.029016466877176e-151,9.025537747380354e-151,9.02205768656109e-151,9.018576282866631e-151,9.015093534741218e-151,9.011609440626093e-151,9.008123998959481e-151,9.004637208176583e-151,9.001149066709571e-151,8.99765957298758e-151,8.99416872543669e-151,8.990676522479933e-151,8.987182962537276e-151,8.98368804402561e-151,8.980191765358751e-151,8.976694124947422e-151,8.973195121199247e-151,8.96969475251875e-151,8.966193017307337e-151,8.962689913963288e-151,8.959185440881759e-151,8.955679596454761e-151,8.952172379071157e-151,8.948663787116652e-151,8.94515381897379e-151,8.941642473021933e-151,8.938129747637266e-151,8.934615641192778e-151,8.93110015205826e-151,8.927583278600289e-151,8.924065019182229e-151,8.920545372164211e-151,8.917024335903136e-151,8.913501908752653e-151,8.90997808906316e-151,8.906452875181792e-151,8.902926265452413e-151,8.899398258215602e-151,8.895868851808648e-151,8.892338044565542e-151,8.888805834816966e-151,8.885272220890284e-151,8.881737201109531e-151,8.87820077379541e-151,8.87466293726527e-151,8.871123689833112e-151,8.867583029809571e-151,8.864040955501904e-151,8.860497465213989e-151,8.85695255724631e-151,8.853406229895948e-151,8.849858481456571e-151,8.846309310218427e-151,8.842758714468332e-151,8.839206692489665e-151,8.835653242562346e-151,8.832098362962843e-151,8.828542051964149e-151,8.82498430783578e-151,8.821425128843762e-151,8.817864513250621e-151,8.814302459315373e-151,8.810738965293516e-151,8.807174029437018e-151,8.803607649994307e-151,8.800039825210266e-151,8.796470553326212e-151,8.792899832579897e-151,8.789327661205492e-151,8.785754037433578e-151,8.782178959491137e-151,8.778602425601542e-151,8.77502443398454e-151,8.771444982856251e-151,8.767864070429158e-151,8.76428169491208e-151,8.760697854510186e-151,8.757112547424969e-151,8.753525771854233e-151,8.749937525992095e-151,8.746347808028965e-151,8.742756616151538e-151,8.739163948542785e-151,8.735569803381938e-151,8.731974178844483e-151,8.728377073102146e-151,8.724778484322889e-151,8.72117841067089e-151,8.717576850306538e-151,8.71397380138642e-151,8.710369262063309e-151,8.706763230486158e-151,8.703155704800078e-151,8.699546683146345e-151,8.695936163662369e-151,8.692324144481695e-151,8.688710623733987e-151,8.68509559954502e-151,8.681479070036666e-151,8.677861033326883e-151,8.674241487529704e-151,8.670620430755228e-151,8.6669978611096e-151,8.663373776695013e-151,8.659748175609682e-151,8.656121055947847e-151,8.652492415799743e-151,8.648862253251609e-151,8.645230566385662e-151,8.641597353280083e-151,8.637962612009025e-151,8.634326340642575e-151,8.63068853724676e-151,8.62704919988353e-151,8.623408326610741e-151,8.619765915482153e-151,8.616121964547409e-151,8.612476471852027e-151,8.608829435437385e-151,8.605180853340713e-151,8.601530723595074e-151,8.597879044229364e-151,8.594225813268281e-151,8.590571028732333e-151,8.586914688637805e-151,8.583256790996768e-151,8.579597333817044e-151,8.575936315102215e-151,8.572273732851593e-151,8.568609585060217e-151,8.564943869718835e-151,8.561276584813895e-151,8.557607728327531e-151,8.55393729823755e-151,8.550265292517416e-151,8.546591709136242e-151,8.542916546058775e-151,8.539239801245378e-151,8.535561472652026e-151,8.531881558230285e-151,8.528200055927304e-151,8.524516963685796e-151,8.520832279444028e-151,8.517146001135811e-151,8.51345812669048e-151,8.509768654032881e-151,8.506077581083364e-151,8.502384905757763e-151,8.498690625967383e-151,8.494994739618989e-151,8.491297244614788e-151,8.487598138852425e-151,8.48389742022495e-151,8.480195086620824e-151,8.476491135923898e-151,8.47278556601339e-151,8.469078374763883e-151,8.465369560045307e-151,8.461659119722922e-151,8.457947051657306e-151,8.45423335370434e-151,8.450518023715194e-151,8.446801059536313e-151,8.4430824590094e-151,8.439362219971403e-151,8.4356403402545e-151,8.431916817686087e-151,8.428191650088761e-151,8.424464835280299e-151,8.420736371073657e-151,8.417006255276942e-151,8.413274485693403e-151,8.409541060121416e-151,8.405805976354465e-151,8.402069232181133e-151,8.398330825385083e-151,8.39459075374504e-151,8.390849015034779e-151,8.387105607023113e-151,8.38336052747387e-151,8.379613774145883e-151,8.375865344792968e-151,8.372115237163919e-151,8.36836344900248e-151,8.364609978047338e-151,8.360854822032106e-151,8.357097978685301e-151,8.353339445730335e-151,8.349579220885493e-151,8.345817301863923e-151,8.342053686373616e-151,8.33828837211739e-151,8.334521356792871e-151,8.330752638092485e-151,8.326982213703434e-151,8.323210081307678e-151,8.319436238581925e-151,8.315660683197614e-151,8.311883412820888e-151,8.308104425112593e-151,8.304323717728245e-151,8.300541288318027e-151,8.296757134526762e-151,8.292971253993899e-151,8.2891836443535e-151,8.285394303234216e-151,8.281603228259273e-151,8.277810417046456e-151,8.274015867208091e-151,8.270219576351023e-151,8.266421542076602e-151,8.26262176198067e-151,8.25882023365353e-151,8.255016954679946e-151,8.25121192263911e-151,8.247405135104631e-151,8.243596589644514e-151,8.239786283821144e-151,8.235974215191271e-151,8.232160381305986e-151,8.2283447797107e-151,8.224527407945138e-151,8.220708263543306e-151,8.216887344033482e-151,8.213064646938196e-151,8.209240169774208e-151,8.20541391005249e-151,8.20158586527821e-151,8.197756032950708e-151,8.193924410563484e-151,8.190090995604174e-151,8.186255785554529e-151,8.1824187778904e-151,8.178579970081717e-151,8.174739359592467e-151,8.170896943880683e-151,8.167052720398413e-151,8.163206686591706e-151,8.159358839900593e-151,8.155509177759069e-151,8.151657697595061e-151,8.147804396830426e-151,8.143949272880919e-151,8.140092323156174e-151,8.136233545059685e-151,8.13237293598879e-151,8.12851049333464e-151,8.12464621448219e-151,8.12078009681017e-151,8.11691213769107e-151,8.113042334491114e-151,8.109170684570245e-151,8.105297185282097e-151,8.101421833973979e-151,8.097544627986852e-151,8.09366556465531e-151,8.089784641307554e-151,8.085901855265373e-151,8.082017203844126e-151,8.078130684352714e-151,8.074242294093563e-151,8.070352030362597e-151,8.066459890449225e-151,8.062565871636307e-151,8.058669971200147e-151,8.05477218641045e-151,8.050872514530324e-151,8.046970952816236e-151,8.043067498518004e-151,8.039162148878767e-151,8.035254901134966e-151,8.031345752516319e-151,8.027434700245799e-151,8.023521741539608e-151,8.01960687360716e-151,8.015690093651053e-151,8.011771398867047e-151,8.007850786444042e-151,8.003928253564052e-151,8.000003797402181e-151,7.996077415126602e-151,7.992149103898535e-151,7.988218860872214e-151,7.984286683194874e-151,7.980352568006719e-151,7.9764165124409e-151,7.972478513623493e-151,7.968538568673474e-151,7.964596674702689e-151,7.960652828815834e-151,7.956707028110434e-151,7.952759269676808e-151,7.948809550598052e-151,7.944857867950014e-151,7.940904218801262e-151,7.936948600213062e-151,7.93299100923936e-151,7.929031442926742e-151,7.925069898314421e-151,7.921106372434205e-151,7.917140862310472e-151,7.913173364960142e-151,7.909203877392658e-151,7.905232396609949e-151,7.901258919606413e-151,7.897283443368885e-151,7.893305964876615e-151,7.889326481101234e-151,7.885344989006732e-151,7.881361485549435e-151,7.87737596767797e-151,7.87338843233324e-151,7.869398876448396e-151,7.865407296948818e-151,7.861413690752073e-151,7.857418054767899e-151,7.85342038589817e-151,7.849420681036875e-151,7.84541893707008e-151,7.841415150875908e-151,7.837409319324509e-151,7.833401439278029e-151,7.829391507590581e-151,7.825379521108221e-151,7.821365476668916e-151,7.817349371102509e-151,7.813331201230702e-151,7.809310963867019e-151,7.805288655816776e-151,7.801264273877054e-151,7.797237814836669e-151,7.79320927547614e-151,7.78917865256766e-151,7.78514594287507e-151,7.781111143153823e-151,7.777074250150954e-151,7.773035260605052e-151,7.768994171246228e-151,7.764950978796085e-151,7.760905679967687e-151,7.756858271465525e-151,7.752808749985489e-151,7.748757112214834e-151,7.744703354832152e-151,7.740647474507338e-151,7.736589467901555e-151,7.732529331667205e-151,7.728467062447901e-151,7.724402656878429e-151,7.720336111584711e-151,7.716267423183787e-151,7.712196588283768e-151,7.708123603483809e-151,7.704048465374075e-151,7.699971170535708e-151,7.695891715540798e-151,7.691810096952336e-151,7.687726311324197e-151,7.683640355201092e-151,7.679552225118544e-151,7.675461917602848e-151,7.671369429171041e-151,7.66727475633086e-151,7.663177895580714e-151,7.65907884340965e-151,7.654977596297308e-151,7.6508741507139e-151,7.646768503120161e-151,7.642660649967326e-151,7.63855058769708e-151,7.634438312741536e-151,7.63032382152319e-151,7.626207110454887e-151,7.622088175939787e-151,7.617967014371323e-151,7.61384362213317e-151,7.609717995599204e-151,7.605590131133468e-151,7.60146002509013e-151,7.597327673813447e-151,7.593193073637735e-151,7.589056220887318e-151,7.584917111876497e-151,7.580775742909517e-151,7.576632110280514e-151,7.572486210273492e-151,7.568338039162272e-151,7.564187593210458e-151,7.560034868671404e-151,7.555879861788162e-151,7.551722568793447e-151,7.547562985909605e-151,7.543401109348565e-151,7.539236935311794e-151,7.53507045999027e-151,7.530901679564434e-151,7.526730590204145e-151,7.522557188068647e-151,7.518381469306522e-151,7.514203430055651e-151,7.510023066443173e-151,7.505840374585444e-151,7.501655350587987e-151,7.497467990545461e-151,7.493278290541612e-151,7.48908624664923e-151,7.484891854930108e-151,7.480695111435e-151,7.476496012203572e-151,7.472294553264368e-151,7.468090730634756e-151,7.46388454032089e-151,7.459675978317666e-151,7.455465040608669e-151,7.451251723166146e-151,7.44703602195094e-151,7.44281793291246e-151,7.43859745198863e-151,7.434374575105842e-151,7.430149298178911e-151,7.425921617111037e-151,7.421691527793742e-151,7.417459026106841e-151,7.413224107918381e-151,7.408986769084602e-151,7.40474700544989e-151,7.400504812846724e-151,7.396260187095635e-151,7.39201312400515e-151,7.387763619371752e-151,7.383511668979824e-151,7.379257268601608e-151,7.375000413997147e-151,7.370741100914243e-151,7.366479325088404e-151,7.3622150822428e-151,7.357948368088198e-151,7.35367917832293e-151,7.34940750863283e-151,7.345133354691189e-151,7.340856712158702e-151,7.336577576683416e-151,7.332295943900676e-151,7.328011809433083e-151,7.32372516889043e-151,7.319436017869653e-151,7.315144351954786e-151,7.310850166716894e-151,7.30655345771403e-151,7.302254220491182e-151,7.29795245058021e-151,7.293648143499803e-151,7.289341294755414e-151,7.285031899839216e-151,7.280719954230035e-151,7.276405453393305e-151,7.272088392781006e-151,7.267768767831614e-151,7.263446573970038e-151,7.259121806607567e-151,7.254794461141813e-151,7.250464532956654e-151,7.246132017422176e-151,7.241796909894615e-151,7.237459205716301e-151,7.233118900215594e-151,7.228775988706834e-151,7.224430466490275e-151,7.220082328852028e-151,7.215731571064e-151,7.211378188383837e-151,7.207022176054864e-151,7.202663529306017e-151,7.198302243351791e-151,7.193938313392175e-151,7.189571734612589e-151,7.185202502183825e-151,7.180830611261982e-151,7.176456056988404e-151,7.172078834489618e-151,7.167698938877275e-151,7.16331636524807e-151,7.158931108683701e-151,7.154543164250787e-151,7.150152527000812e-151,7.145759191970054e-151,7.141363154179526e-151,7.136964408634903e-151,7.132562950326467e-151,7.128158774229023e-151,7.12375187530185e-151,7.119342248488624e-151,7.11492988871735e-151,7.110514790900297e-151,7.106096949933931e-151,7.101676360698842e-151,7.097253018059675e-151,7.092826916865066e-151,7.088398051947565e-151,7.083966418123566e-151,7.079532010193248e-151,7.075094822940488e-151,7.070654851132795e-151,7.06621208952124e-151,7.061766532840387e-151,7.057318175808214e-151,7.052867013126038e-151,7.048413039478448e-151,7.04395624953323e-151,7.039496637941286e-151,7.035034199336567e-151,7.030568928335993e-151,7.02610081953938e-151,7.02162986752936e-151,7.017156066871307e-151,7.012679412113263e-151,7.008199897785852e-151,7.003717518402213e-151,6.999232268457911e-151,6.994744142430865e-151,6.990253134781266e-151,6.9857592399515e-151,6.981262452366061e-151,6.976762766431477e-151,6.97226017653623e-151,6.967754677050668e-151,6.963246262326923e-151,6.958734926698838e-151,6.954220664481874e-151,6.949703469973028e-151,6.945183337450751e-151,6.940660261174868e-151,6.936134235386482e-151,6.931605254307896e-151,6.927073312142528e-151,6.92253840307482e-151,6.918000521270152e-151,6.913459660874757e-151,6.908915816015633e-151,6.904368980800445e-151,6.899819149317451e-151,6.895266315635402e-151,6.890710473803455e-151,6.886151617851082e-151,6.881589741787974e-151,6.877024839603963e-151,6.872456905268911e-151,6.86788593273263e-151,6.863311915924787e-151,6.858734848754806e-151,6.854154725111771e-151,6.849571538864343e-151,6.844985283860651e-151,6.840395953928201e-151,6.83580354287378e-151,6.831208044483359e-151,6.826609452521988e-151,6.822007760733711e-151,6.817402962841452e-151,6.812795052546923e-151,6.808184023530523e-151,6.803569869451234e-151,6.798952583946523e-151,6.794332160632238e-151,6.789708593102502e-151,6.785081874929615e-151,6.780451999663946e-151,6.775818960833828e-151,6.771182751945457e-151,6.766543366482776e-151,6.761900797907383e-151,6.757255039658406e-151,6.752606085152409e-151,6.747953927783277e-151,6.743298560922109e-151,6.738639977917102e-151,6.733978172093449e-151,6.72931313675322e-151,6.724644865175252e-151,6.719973350615038e-151,6.715298586304612e-151,6.710620565452433e-151,6.705939281243275e-151,6.701254726838101e-151,6.69656689537396e-151,6.691875779963854e-151,6.68718137369664e-151,6.682483669636889e-151,6.677782660824782e-151,6.673078340275988e-151,6.668370700981535e-151,6.663659735907693e-151,6.658945437995855e-151,6.654227800162408e-151,6.649506815298609e-151,6.644782476270467e-151,6.640054775918607e-151,6.635323707058151e-151,6.630589262478588e-151,6.625851434943645e-151,6.621110217191162e-151,6.616365601932954e-151,6.611617581854689e-151,6.606866149615752e-151,6.602111297849112e-151,6.597353019161193e-151,6.592591306131734e-151,6.587826151313661e-151,6.58305754723294e-151,6.578285486388456e-151,6.57350996125186e-151,6.56873096426744e-151,6.563948487851978e-151,6.559162524394612e-151,6.55437306625669e-151,6.549580105771631e-151,6.544783635244787e-151,6.539983646953285e-151,6.535180133145897e-151,6.530373086042882e-151,6.52556249783585e-151,6.520748360687604e-151,6.515930666731998e-151,6.511109408073783e-151,6.506284576788457e-151,6.501456164922115e-151,6.496624164491293e-151,6.491788567482819e-151,6.486949365853647e-151,6.482106551530718e-151,6.477260116410787e-151,6.472410052360274e-151,6.467556351215096e-151,6.462699004780523e-151,6.457838004830997e-151,6.452973343109982e-151,6.448105011329797e-151,6.44323300117145e-151,6.438357304284478e-151,6.433477912286766e-151,6.428594816764401e-151,6.423708009271479e-151,6.41881748132995e-151,6.413923224429444e-151,6.409025230027091e-151,6.40412348954736e-151,6.399217994381866e-151,6.394308735889211e-151,6.3893957053948e-151,6.384478894190655e-151,6.379558293535248e-151,6.374633894653307e-151,6.369705688735642e-151,6.364773666938961e-151,6.359837820385678e-151,6.354898140163734e-151,6.349954617326402e-151,6.345007242892109e-151,6.340056007844233e-151,6.335100903130917e-151,6.330141919664881e-151,6.325179048323218e-151,6.320212279947204e-151,6.3152416053421e-151,6.31026701527695e-151,6.305288500484392e-151,6.300306051660437e-151,6.295319659464287e-151,6.290329314518118e-151,6.285335007406876e-151,6.280336728678074e-151,6.275334468841581e-151,6.270328218369407e-151,6.265317967695502e-151,6.260303707215531e-151,6.255285427286667e-151,6.250263118227373e-151,6.245236770317182e-151,6.24020637379648e-151,6.235171918866282e-151,6.230133395688013e-151,6.225090794383281e-151,6.220044105033654e-151,6.214993317680424e-151,6.209938422324391e-151,6.204879408925622e-151,6.19981626740322e-151,6.194748987635093e-151,6.189677559457718e-151,6.184601972665893e-151,6.179522217012516e-151,6.174438282208326e-151,6.169350157921671e-151,6.164257833778252e-151,6.159161299360895e-151,6.15406054420928e-151,6.148955557819705e-151,6.14384632964483e-151,6.138732849093425e-151,6.133615105530107e-151,6.128493088275087e-151,6.123366786603914e-151,6.118236189747202e-151,6.113101286890377e-151,6.107962067173405e-151,6.102818519690524e-151,6.0976706334899775e-151,6.0925183975737395e-151,6.087361800897242e-151,6.082200832369097e-151,6.0770354808508195e-151,6.071865735156549e-151,6.066691584052761e-151,6.061513016257989e-151,6.0563300204425325e-151,6.051142585228171e-151,6.04595069918787e-151,6.04075435084549e-151,6.0355535286754886e-151,6.030348221102623e-151,6.025138416501648e-151,6.019924103197017e-151,6.0147052694625724e-151,6.009481903521239e-151,6.004253993544717e-151,5.999021527653164e-151,5.993784493914886e-151,5.988542880346015e-151,5.983296674910193e-151,5.978045865518246e-151,5.9727904400278615e-151,5.967530386243261e-151,5.9622656919148675e-151,5.9569963447389735e-151,5.951722332357409e-151,5.946443642357198e-151,5.941160262270221e-151,5.935872179572871e-151,5.930579381685706e-151,5.9252818559731e-151,5.919979589742895e-151,5.914672570246038e-151,5.9093607846762324e-151,5.904044220169571e-151,5.898722863804176e-151,5.8933967025998315e-151,5.8880657235176135e-151,5.882729913459517e-151,5.8773892592680844e-151,5.8720437477260224e-151,5.8666933655558205e-151,5.8613380994193736e-151,5.8559779359175813e-151,5.850612861589968e-151,5.845242862914284e-151,5.839867926306108e-151,5.8344880381184456e-151,5.829103184641326e-151,5.823713352101396e-151,5.818318526661504e-151,5.812918694420293e-151,5.807513841411774e-151,5.802103953604913e-151,5.7966890169032005e-151,5.791269017144223e-151,5.7858439400992346e-151,5.780413771472719e-151,5.7749784969019475e-151,5.7695381019565426e-151,5.764092572138023e-151,5.758641892879358e-151,5.753186049544511e-151,5.747725027427983e-151,5.742258811754345e-151,5.73678738767778e-151,5.7313107402816044e-151,5.725828854577797e-151,5.7203417155065236e-151,5.714849307935646e-151,5.709351616660245e-151,5.703848626402123e-151,5.698340321809308e-151,5.692826687455559e-151,5.6873077078398576e-151,5.681783367385901e-151,5.6762536504415924e-151,5.670718541278515e-151,5.665178024091418e-151,5.65963208299769e-151,5.6540807020368216e-151,5.6485238651698744e-151,5.642961556278941e-151,5.637393759166594e-151,5.631820457555344e-151,5.626241635087077e-151,5.620657275322499e-151,5.615067361740565e-151,5.60947187773792e-151,5.603870806628308e-151,5.598264131642007e-151,5.5926518359252306e-151,5.5870339025395465e-151,5.581410314461274e-151,5.5757810545808845e-151,5.5701461057023936e-151,5.56450545054275e-151,5.558859071731212e-151,5.553206951808731e-151,5.5475490732273145e-151,5.5418854183493965e-151,5.5362159694471896e-151,5.530540708702044e-151,5.5248596182037906e-151,5.5191726799500806e-151,5.513479875845724e-151,5.507781187702014e-151,5.5020765972360494e-151,5.4963660860700544e-151,5.490649635730682e-151,5.484927227648321e-151,5.47919884315639e-151,5.473464463490627e-151,5.467724069788376e-151,5.461977643087857e-151,5.4562251643274405e-151,5.450466614344907e-151,5.4447019738767025e-151,5.438931223557187e-151,5.433154343917878e-151,5.427371315386679e-151,5.42158211828711e-151,5.415786732837527e-151,5.409985139150328e-151,5.404177317231164e-151,5.3983632469781286e-151,5.3925429081809504e-151,5.386716280520173e-151,5.380883343566325e-151,5.375044076779086e-151,5.3691984595064425e-151,5.3633464709838376e-151,5.3574880903333056e-151,5.351623296562607e-151,5.345752068564352e-151,5.33987438511511e-151,5.333990224874517e-151,5.328099566384371e-151,5.3222023880677206e-151,5.31629866822794e-151,5.310388385047801e-151,5.3044715165885294e-151,5.298548040788858e-151,5.292617935464061e-151,5.2866811783049945e-151,5.280737746877108e-151,5.274787618619458e-151,5.268830770843713e-151,5.262867180733139e-151,5.256896825341582e-151,5.250919681592437e-151,5.244935726277611e-151,5.238944936056464e-151,5.232947287454757e-151,5.226942756863568e-151,5.220931320538218e-151,5.214912954597168e-151,5.208887635020916e-151,5.202855337650876e-151,5.1968160381882515e-151,5.19076971219289e-151,5.184716335082131e-151,5.178655882129639e-151,5.172588328464225e-151,5.1665136490686587e-151,5.160431818778461e-151,5.154342812280689e-151,5.148246604112707e-151,5.142143168660947e-151,5.136032480159648e-151,5.129914512689592e-151,5.1237892401768165e-151,5.117656636391322e-151,5.1115166749457604e-151,5.105369329294109e-151,5.0992145727303346e-151,5.093052378387035e-151,5.0868827192340746e-151,5.0807055680772015e-151,5.074520897556645e-151,5.0683286801457074e-151,5.062128888149328e-151,5.0559214937026434e-151,5.049706468769526e-151,5.0434837851411015e-151,5.037253414434263e-151,5.0310153280901524e-151,5.0247694973726394e-151,5.018515893366774e-151,5.012254486977226e-151,5.0059852489267045e-151,4.999708149754362e-151,4.993423159814178e-151,4.987130249273326e-151,4.980829388110523e-151,4.974520546114356e-151,4.968203692881593e-151,4.961878797815473e-151,4.955545830123978e-151,4.9492047588180835e-151,4.942855552709991e-151,4.9364981804113345e-151,4.9301326103313735e-151,4.923758810675159e-151,4.917376749441686e-151,4.910986394422011e-151,4.9045877131973623e-151,4.898180673137216e-151,4.8917652413973605e-151,4.885341384917926e-151,4.878909070421401e-151,4.872468264410621e-151,4.866018933166729e-151,4.859561042747122e-151,4.8530945589833624e-151,4.8466194474790716e-151,4.8401356736077926e-151,4.833643202510834e-151,4.827141999095076e-151,4.820632028030768e-151,4.8141132537492774e-151,4.8075856404408316e-151,4.801049152052216e-151,4.7945037522844556e-151,4.787949404590461e-151,4.781386072172647e-151,4.774813717980524e-151,4.768232304708257e-151,4.7616417947921954e-151,4.7550421504083716e-151,4.748433333469965e-151,4.7418153056247475e-151,4.735188028252472e-151,4.728551462462258e-151,4.721905569089918e-151,4.7152503086952664e-151,4.7085856415593874e-151,4.7019115276818696e-151,4.695227926778004e-151,4.68853479827595e-151,4.6818321013138565e-151,4.6751197947369595e-151,4.668397837094625e-151,4.661666186637369e-151,4.6549248013138315e-151,4.6481736387677085e-151,4.641412656334649e-151,4.6346418110391104e-151,4.627861059591171e-151,4.621070358383297e-151,4.614269663487079e-151,4.6074589306499064e-151,4.600638115291617e-151,4.5938071725010865e-151,4.58696605703278e-151,4.580114723303257e-151,4.573253125387627e-151,4.5663812170159555e-151,4.559498951569629e-151,4.5526062820776587e-151,4.545703161212948e-151,4.538789541288493e-151,4.531865374253546e-151,4.524930611689715e-151,4.5179852048070145e-151,4.5110291044398625e-151,4.504062261043016e-151,4.49708462468746e-151,4.490096145056226e-151,4.483096771440161e-151,4.4760864527336405e-151,4.469065137430204e-151,4.4620327736181485e-151,4.454989308976048e-151,4.4479346907682125e-151,4.440868865840078e-151,4.4337917806135374e-151,4.4267033810822e-151,4.419603612806584e-151,4.412492420909234e-151,4.405369750069778e-151,4.398235544519902e-151,4.391089748038259e-151,4.383932303945297e-151,4.376763155098017e-151,4.369582243884645e-151,4.362389512219237e-151,4.355184901536193e-151,4.3479683527846934e-151,4.340739806423056e-151,4.3334992024129976e-151,4.326246480213825e-151,4.318981578776521e-151,4.3117044365377544e-151,4.30441499141379e-151,4.297113180794311e-151,4.289798941536145e-151,4.28247220995689e-151,4.2751329218284516e-151,4.267781012370468e-151,4.260416416243642e-151,4.253039067542967e-151,4.24564889979084e-151,4.2382458459300815e-151,4.23082983831683e-151,4.2234008087133334e-151,4.215958688280622e-151,4.208503407571067e-151,4.201034896520822e-151,4.193553084442133e-151,4.186057900015545e-151,4.1785492712819574e-151,4.171027125634572e-151,4.163491389810699e-151,4.15594198988343e-151,4.148378851253182e-151,4.14080189863909e-151,4.1332110560702695e-151,4.1256062468769294e-151,4.1179873936813316e-151,4.110354418388612e-151,4.10270724217744e-151,4.095045785490516e-151,4.0873699680249225e-151,4.079679708722301e-151,4.071974925758864e-151,4.064255536535237e-151,4.0565214576661305e-151,4.048772604969829e-151,4.0410088934574985e-151,4.033230237322315e-151,4.0254365499283984e-151,4.0176277437995505e-151,4.009803730607807e-151,4.0019644211617764e-151,3.994109725394777e-151,3.986239552352763e-151,3.9783538101820434e-151,3.970452406116765e-151,3.962535246466185e-151,3.95460223660171e-151,3.9466532809437e-151,3.93868828294803e-151,3.9307071450924096e-151,3.922709768862456e-151,3.914696054737503e-151,3.90666590217615e-151,3.89861920960155e-151,3.890555874386415e-151,3.882475792837743e-151,3.874378860181266e-151,3.8662649705455917e-151,3.858134016946059e-151,3.8499858912682725e-151,3.841820484251337e-151,3.833637685470759e-151,3.825437383321027e-151,3.8172194649978467e-151,3.8089838164800426e-151,3.8007303225110957e-151,3.7924588665803244e-151,3.784169330903698e-151,3.7758615964042654e-151,3.767535542692197e-151,3.759191048044434e-151,3.7508279893839217e-151,3.742446242258432e-151,3.734045680818953e-151,3.725626177797647e-151,3.717187604485349e-151,3.708729830708615e-151,3.70025272480629e-151,3.691756153605598e-151,3.6832399823977284e-151,3.6747040749129235e-151,3.666148293295031e-151,3.6575724980755325e-151,3.648976548147017e-151,3.640360300736088e-151,3.6317236113757006e-151,3.623066333876898e-151,3.614388320299938e-151,3.605689420924802e-151,3.596969484221051e-151,3.588228356817035e-151,3.579465883468412e-151,3.570681907025985e-151,3.5618762684028134e-151,3.553048806540599e-151,3.544199358375315e-151,3.535327758802063e-151,3.526433840639129e-151,3.5175174345912294e-151,3.5085783692119074e-151,3.499616470865074e-151,3.490631563685651e-151,3.481623469539312e-151,3.472592007981269e-151,3.463536996214102e-151,3.454458249044592e-151,3.445355578839527e-151,3.436228795480457e-151,3.4270777063173656e-151,3.417902116121221e-151,3.408701827035381e-151,3.399476638525814e-151,3.3902263473300996e-151,3.380950747405175e-151,3.3716496298737856e-151,3.3623227829696036e-151,3.352969991980973e-151,3.3435910391932364e-151,3.334185703829607e-151,3.324753761990525e-151,3.315294986591476e-151,3.30580914729919e-151,3.296296010466205e-151,3.2867553390637166e-151,3.2771868926126676e-151,3.267590427113027e-151,3.257965694971191e-151,3.248312444925448e-151,3.2386304219694416e-151,3.2289193672735755e-151,3.2191790181042756e-151,3.209409107741054e-151,3.19960936539129e-151,3.189779516102654e-151,3.179919280673096e-151,3.1700283755583204e-151,3.1601065127766416e-151,3.150153399811154e-151,3.1401687395091045e-151,3.130152229978379e-151,3.120103564481e-151,3.110022431323521e-151,3.0999085137442184e-151,3.089761489796957e-151,3.0795810322316144e-151,3.069366808370932e-151,3.0591184799836675e-151,3.0488357031539115e-151,3.038518128146421e-151,3.0281653992678225e-151,3.0177771547235354e-151,3.0073530264702377e-151,2.996892640063725e-151,2.9863956145019612e-151,2.9758615620631563e-151,2.9652900881386617e-151,2.954680791060485e-151,2.944033261923214e-151,2.9333470844001162e-151,2.9226218345531953e-151,2.9118570806369443e-151,2.901052382895547e-151,2.890207293353256e-151,2.8793213555976658e-151,2.868394104555579e-151,2.8574250662611653e-151,2.846413757616072e-151,2.8353596861411553e-151,2.824262349719462e-151,2.813121236330087e-151,2.8019358237725115e-151,2.790705579380986e-151,2.779429959728539e-151,2.7681084103201254e-151,2.7567403652744366e-151,2.7453252469938526e-151,2.733862465821988e-151,2.7223514196882636e-151,2.7107914937388912e-151,2.6991820599536357e-151,2.687522476747678e-151,2.675812088557864e-151,2.6640502254125806e-151,2.6522362024844704e-151,2.6403693196251293e-151,2.628448860880898e-151,2.6164740939888006e-151,2.60444426985162e-151,2.592358621991055e-151,2.5802163659778193e-151,2.5680166988374914e-151,2.555758798430836e-151,2.5434418228072474e-151,2.5310649095298758e-151,2.5186271749709006e-151,2.5061277135753323e-151,2.493565597091592e-151,2.4809398737670307e-151,2.4682495675064126e-151,2.4554936769912517e-151,2.4426711747577567e-151,2.4297810062309863e-151,2.4168220887126316e-151,2.4037933103196935e-151,2.390693528871096e-151,2.3775215707190876e-151,2.3642762295220456e-151,2.350956264955051e-151,2.3375604013543322e-151,2.3240873262913873e-151,2.3105356890722707e-151,2.2969040991571888e-151,2.2831911244951703e-151,2.269395289768167e-151,2.255515074538489e-151,2.24154891129299e-151,2.227495183376883e-151,2.2133522228094734e-151,2.1991183079734612e-151,2.184791661168745e-151,2.1703704460208873e-151,2.155852764733559e-151,2.1412366551733026e-151,2.1265200877739613e-151,2.1117009622469276e-151,2.096777104082125e-151,2.0817462608232173e-151,2.066606098098975e-151,2.0513541953910088e-151,2.035988041516137e-151,2.020505029799515e-151,2.0049024529122515e-151,1.9891774973445648e-151,1.9733272374825237e-151,1.95734862925306e-151,1.9412385032981537e-151,1.9249935576348508e-151,1.9086103497529563e-151,1.8920852880968463e-151,1.875414622871686e-151,1.8585944361073968e-151,1.8416206309057778e-151,1.8244889197871877e-151,1.807194812042864e-151,1.7897335999871784e-151,1.7721003439905677e-151,1.754289856158301e-151,1.7362966825022548e-151,1.718115083432061e-151,1.6997390123678347e-151,1.6811620922485746e-151,1.662377589677516e-151,1.6433783864072363e-151,1.624156947822123e-151,1.6047052880224763e-151,1.585014931051352e-151,1.5650768677301908e-151,1.544881507479641e-151,1.5244186243945564e-151,1.503677296712767e-151,1.4826458386606824e-151,1.4613117234684261e-151,1.4396614961145152e-151,1.4176806740740696e-151,1.3953536339908717e-151,1.3726634817536143e-151,1.3495919029056072e-151,1.326118989622274e-151,1.3022230396077411e-151,1.277880321130914e-151,1.2530647969606643e-151,1.2277477980556489e-151,1.2018976353579026e-151,1.1754791347052235e-151,1.1484530753913128e-151,1.1207755067916981e-151,1.0923969090365511e-151,1.0632611518912155e-151,1.0333041891763806e-151,1.0024524016719601e-151,9.706204654066924e-152,9.377085677942414e-152,9.035987098060458e-152,8.681496982730421e-152,8.311902122017543e-152,7.925089520683161e-152,7.518402153096387e-152,7.0884199904158275e-152,6.630612715682394e-152,6.138758181441209e-152,5.603898556813258e-152,5.012285512607601e-152,4.340775631697447e-152,3.5442432351040324e-152,2.506189764248316e-152,1.772453850905556e-154],"x":[1.0e-300,9.99800079970012e-301,9.99600159940024e-301,9.99400239910036e-301,9.99200319880048e-301,9.9900039985006e-301,9.98800479820072e-301,9.98600559790084e-301,9.98400639760096e-301,9.98200719730108e-301,9.9800079970012e-301,9.97800879670132e-301,9.976009596401439e-301,9.974010396101559e-301,9.972011195801679e-301,9.970011995501799e-301,9.968012795201919e-301,9.966013594902039e-301,9.964014394602159e-301,9.962015194302279e-301,9.960015994002399e-301,9.958016793702519e-301,9.956017593402639e-301,9.954018393102759e-301,9.95201919280288e-301,9.950019992503e-301,9.94802079220312e-301,9.94602159190324e-301,9.94402239160336e-301,9.94202319130348e-301,9.9400239910036e-301,9.93802479070372e-301,9.93602559040384e-301,9.93402639010396e-301,9.93202718980408e-301,9.930027989504198e-301,9.928028789204318e-301,9.926029588904438e-301,9.924030388604558e-301,9.922031188304678e-301,9.920031988004798e-301,9.918032787704918e-301,9.916033587405038e-301,9.914034387105158e-301,9.912035186805278e-301,9.910035986505398e-301,9.908036786205518e-301,9.906037585905638e-301,9.904038385605758e-301,9.902039185305878e-301,9.900039985005998e-301,9.898040784706118e-301,9.896041584406238e-301,9.894042384106358e-301,9.892043183806478e-301,9.890043983506598e-301,9.888044783206718e-301,9.886045582906838e-301,9.884046382606957e-301,9.882047182307077e-301,9.880047982007197e-301,9.878048781707317e-301,9.876049581407437e-301,9.874050381107557e-301,9.872051180807677e-301,9.870051980507797e-301,9.868052780207917e-301,9.866053579908037e-301,9.864054379608157e-301,9.862055179308277e-301,9.860055979008397e-301,9.858056778708517e-301,9.856057578408637e-301,9.854058378108757e-301,9.852059177808877e-301,9.850059977508997e-301,9.848060777209117e-301,9.846061576909237e-301,9.844062376609357e-301,9.842063176309477e-301,9.840063976009596e-301,9.838064775709716e-301,9.836065575409836e-301,9.834066375109956e-301,9.832067174810076e-301,9.830067974510196e-301,9.828068774210316e-301,9.826069573910436e-301,9.824070373610556e-301,9.822071173310676e-301,9.820071973010796e-301,9.818072772710916e-301,9.816073572411036e-301,9.814074372111156e-301,9.812075171811276e-301,9.810075971511396e-301,9.808076771211516e-301,9.806077570911636e-301,9.804078370611756e-301,9.802079170311876e-301,9.800079970011996e-301,9.798080769712116e-301,9.796081569412236e-301,9.794082369112354e-301,9.792083168812475e-301,9.790083968512595e-301,9.788084768212715e-301,9.786085567912835e-301,9.784086367612955e-301,9.782087167313075e-301,9.780087967013195e-301,9.778088766713315e-301,9.776089566413435e-301,9.774090366113555e-301,9.772091165813675e-301,9.770091965513795e-301,9.768092765213915e-301,9.766093564914035e-301,9.764094364614155e-301,9.762095164314275e-301,9.760095964014395e-301,9.758096763714515e-301,9.756097563414635e-301,9.754098363114755e-301,9.752099162814875e-301,9.750099962514995e-301,9.748100762215113e-301,9.746101561915233e-301,9.744102361615353e-301,9.742103161315473e-301,9.740103961015593e-301,9.738104760715714e-301,9.736105560415834e-301,9.734106360115954e-301,9.732107159816074e-301,9.730107959516194e-301,9.728108759216314e-301,9.726109558916434e-301,9.724110358616554e-301,9.722111158316674e-301,9.720111958016794e-301,9.718112757716914e-301,9.716113557417034e-301,9.714114357117154e-301,9.712115156817274e-301,9.710115956517394e-301,9.708116756217514e-301,9.706117555917634e-301,9.704118355617754e-301,9.702119155317872e-301,9.700119955017992e-301,9.698120754718112e-301,9.696121554418232e-301,9.694122354118352e-301,9.692123153818472e-301,9.690123953518592e-301,9.688124753218712e-301,9.686125552918832e-301,9.684126352618953e-301,9.682127152319073e-301,9.680127952019193e-301,9.678128751719313e-301,9.676129551419433e-301,9.674130351119553e-301,9.672131150819673e-301,9.670131950519793e-301,9.668132750219913e-301,9.666133549920033e-301,9.664134349620153e-301,9.662135149320273e-301,9.660135949020393e-301,9.658136748720513e-301,9.656137548420631e-301,9.654138348120751e-301,9.652139147820871e-301,9.650139947520991e-301,9.648140747221111e-301,9.646141546921231e-301,9.644142346621351e-301,9.642143146321471e-301,9.640143946021591e-301,9.638144745721711e-301,9.636145545421831e-301,9.634146345121951e-301,9.632147144822072e-301,9.630147944522192e-301,9.628148744222312e-301,9.626149543922432e-301,9.624150343622552e-301,9.622151143322672e-301,9.620151943022792e-301,9.618152742722912e-301,9.616153542423032e-301,9.614154342123152e-301,9.612155141823272e-301,9.61015594152339e-301,9.60815674122351e-301,9.60615754092363e-301,9.60415834062375e-301,9.60215914032387e-301,9.60015994002399e-301,9.59816073972411e-301,9.59616153942423e-301,9.59416233912435e-301,9.59216313882447e-301,9.59016393852459e-301,9.58816473822471e-301,9.58616553792483e-301,9.58416633762495e-301,9.58216713732507e-301,9.58016793702519e-301,9.57816873672531e-301,9.57616953642543e-301,9.57417033612555e-301,9.57217113582567e-301,9.57017193552579e-301,9.56817273522591e-301,9.56617353492603e-301,9.564174334626149e-301,9.562175134326269e-301,9.560175934026389e-301,9.558176733726509e-301,9.556177533426629e-301,9.554178333126749e-301,9.552179132826869e-301,9.55017993252699e-301,9.54818073222711e-301,9.54618153192723e-301,9.54418233162735e-301,9.54218313132747e-301,9.54018393102759e-301,9.53818473072771e-301,9.53618553042783e-301,9.53418633012795e-301,9.53218712982807e-301,9.53018792952819e-301,9.52818872922831e-301,9.52618952892843e-301,9.52419032862855e-301,9.52219112832867e-301,9.520191928028788e-301,9.518192727728908e-301,9.516193527429028e-301,9.514194327129148e-301,9.512195126829268e-301,9.510195926529388e-301,9.508196726229508e-301,9.506197525929628e-301,9.504198325629748e-301,9.502199125329868e-301,9.500199925029988e-301,9.498200724730108e-301,9.496201524430228e-301,9.494202324130348e-301,9.492203123830468e-301,9.490203923530588e-301,9.488204723230708e-301,9.486205522930828e-301,9.484206322630948e-301,9.482207122331068e-301,9.480207922031188e-301,9.478208721731308e-301,9.476209521431428e-301,9.474210321131547e-301,9.472211120831667e-301,9.470211920531787e-301,9.468212720231907e-301,9.466213519932027e-301,9.464214319632147e-301,9.462215119332267e-301,9.460215919032387e-301,9.458216718732507e-301,9.456217518432627e-301,9.454218318132747e-301,9.452219117832867e-301,9.450219917532987e-301,9.448220717233107e-301,9.446221516933227e-301,9.444222316633347e-301,9.442223116333467e-301,9.440223916033587e-301,9.438224715733707e-301,9.436225515433827e-301,9.434226315133947e-301,9.432227114834067e-301,9.430227914534187e-301,9.428228714234306e-301,9.426229513934426e-301,9.424230313634546e-301,9.422231113334666e-301,9.420231913034786e-301,9.418232712734906e-301,9.416233512435026e-301,9.414234312135146e-301,9.412235111835266e-301,9.410235911535386e-301,9.408236711235506e-301,9.406237510935626e-301,9.404238310635746e-301,9.402239110335866e-301,9.400239910035986e-301,9.398240709736106e-301,9.396241509436226e-301,9.394242309136346e-301,9.392243108836466e-301,9.390243908536586e-301,9.388244708236706e-301,9.386245507936826e-301,9.384246307636946e-301,9.382247107337065e-301,9.380247907037185e-301,9.378248706737305e-301,9.376249506437425e-301,9.374250306137545e-301,9.372251105837665e-301,9.370251905537785e-301,9.368252705237905e-301,9.366253504938025e-301,9.364254304638145e-301,9.362255104338265e-301,9.360255904038385e-301,9.358256703738505e-301,9.356257503438625e-301,9.354258303138745e-301,9.352259102838865e-301,9.350259902538985e-301,9.348260702239105e-301,9.346261501939225e-301,9.344262301639345e-301,9.342263101339465e-301,9.340263901039585e-301,9.338264700739705e-301,9.336265500439824e-301,9.334266300139944e-301,9.332267099840064e-301,9.330267899540184e-301,9.328268699240304e-301,9.326269498940424e-301,9.324270298640544e-301,9.322271098340664e-301,9.320271898040784e-301,9.318272697740904e-301,9.316273497441024e-301,9.314274297141144e-301,9.312275096841264e-301,9.310275896541384e-301,9.308276696241504e-301,9.306277495941624e-301,9.304278295641744e-301,9.302279095341864e-301,9.300279895041984e-301,9.298280694742104e-301,9.296281494442224e-301,9.294282294142344e-301,9.292283093842464e-301,9.290283893542582e-301,9.288284693242702e-301,9.286285492942822e-301,9.284286292642943e-301,9.282287092343063e-301,9.280287892043183e-301,9.278288691743303e-301,9.276289491443423e-301,9.274290291143543e-301,9.272291090843663e-301,9.270291890543783e-301,9.268292690243903e-301,9.266293489944023e-301,9.264294289644143e-301,9.262295089344263e-301,9.260295889044383e-301,9.258296688744503e-301,9.256297488444623e-301,9.254298288144743e-301,9.252299087844863e-301,9.250299887544983e-301,9.248300687245103e-301,9.246301486945221e-301,9.244302286645341e-301,9.242303086345461e-301,9.240303886045581e-301,9.238304685745701e-301,9.236305485445821e-301,9.234306285145941e-301,9.232307084846061e-301,9.230307884546182e-301,9.228308684246302e-301,9.226309483946422e-301,9.224310283646542e-301,9.222311083346662e-301,9.220311883046782e-301,9.218312682746902e-301,9.216313482447022e-301,9.214314282147142e-301,9.212315081847262e-301,9.210315881547382e-301,9.208316681247502e-301,9.206317480947622e-301,9.204318280647742e-301,9.202319080347862e-301,9.20031988004798e-301,9.1983206797481e-301,9.19632147944822e-301,9.19432227914834e-301,9.19232307884846e-301,9.19032387854858e-301,9.1883246782487e-301,9.18632547794882e-301,9.18432627764894e-301,9.18232707734906e-301,9.18032787704918e-301,9.1783286767493e-301,9.17632947644942e-301,9.17433027614954e-301,9.17233107584966e-301,9.17033187554978e-301,9.1683326752499e-301,9.16633347495002e-301,9.16433427465014e-301,9.16233507435026e-301,9.16033587405038e-301,9.1583366737505e-301,9.15633747345062e-301,9.154338273150739e-301,9.152339072850859e-301,9.15033987255098e-301,9.1483406722511e-301,9.14634147195122e-301,9.14434227165134e-301,9.14234307135146e-301,9.14034387105158e-301,9.1383446707517e-301,9.13634547045182e-301,9.13434627015194e-301,9.13234706985206e-301,9.13034786955218e-301,9.1283486692523e-301,9.12634946895242e-301,9.12435026865254e-301,9.12235106835266e-301,9.12035186805278e-301,9.1183526677529e-301,9.11635346745302e-301,9.11435426715314e-301,9.11235506685326e-301,9.11035586655338e-301,9.108356666253498e-301,9.106357465953618e-301,9.104358265653738e-301,9.102359065353858e-301,9.100359865053978e-301,9.098360664754098e-301,9.096361464454218e-301,9.094362264154338e-301,9.092363063854458e-301,9.090363863554578e-301,9.088364663254698e-301,9.086365462954818e-301,9.084366262654938e-301,9.082367062355058e-301,9.080367862055178e-301,9.078368661755298e-301,9.076369461455418e-301,9.074370261155538e-301,9.072371060855658e-301,9.070371860555779e-301,9.068372660255899e-301,9.066373459956019e-301,9.064374259656139e-301,9.062375059356257e-301,9.060375859056377e-301,9.058376658756497e-301,9.056377458456617e-301,9.054378258156737e-301,9.052379057856857e-301,9.050379857556977e-301,9.048380657257097e-301,9.046381456957217e-301,9.044382256657337e-301,9.042383056357457e-301,9.040383856057577e-301,9.038384655757697e-301,9.036385455457817e-301,9.034386255157937e-301,9.032387054858057e-301,9.030387854558177e-301,9.028388654258297e-301,9.026389453958417e-301,9.024390253658537e-301,9.022391053358657e-301,9.020391853058777e-301,9.018392652758897e-301,9.016393452459016e-301,9.014394252159136e-301,9.012395051859256e-301,9.010395851559376e-301,9.008396651259496e-301,9.006397450959616e-301,9.004398250659736e-301,9.002399050359856e-301,9.000399850059976e-301,8.998400649760096e-301,8.996401449460216e-301,8.994402249160336e-301,8.992403048860456e-301,8.990403848560576e-301,8.988404648260696e-301,8.986405447960816e-301,8.984406247660936e-301,8.982407047361056e-301,8.980407847061176e-301,8.978408646761296e-301,8.976409446461416e-301,8.974410246161536e-301,8.972411045861656e-301,8.970411845561775e-301,8.968412645261895e-301,8.966413444962015e-301,8.964414244662135e-301,8.962415044362255e-301,8.960415844062375e-301,8.958416643762495e-301,8.956417443462615e-301,8.954418243162735e-301,8.952419042862855e-301,8.950419842562975e-301,8.948420642263095e-301,8.946421441963215e-301,8.944422241663335e-301,8.942423041363455e-301,8.940423841063575e-301,8.938424640763695e-301,8.936425440463815e-301,8.934426240163935e-301,8.932427039864055e-301,8.930427839564175e-301,8.928428639264295e-301,8.926429438964414e-301,8.924430238664534e-301,8.922431038364654e-301,8.920431838064774e-301,8.918432637764894e-301,8.916433437465014e-301,8.914434237165134e-301,8.912435036865254e-301,8.910435836565374e-301,8.908436636265494e-301,8.906437435965614e-301,8.904438235665734e-301,8.902439035365854e-301,8.900439835065974e-301,8.898440634766094e-301,8.896441434466214e-301,8.894442234166334e-301,8.892443033866454e-301,8.890443833566574e-301,8.888444633266694e-301,8.886445432966814e-301,8.884446232666934e-301,8.882447032367054e-301,8.880447832067173e-301,8.878448631767293e-301,8.876449431467413e-301,8.874450231167533e-301,8.872451030867653e-301,8.870451830567773e-301,8.868452630267893e-301,8.866453429968013e-301,8.864454229668133e-301,8.862455029368253e-301,8.860455829068373e-301,8.858456628768493e-301,8.856457428468613e-301,8.854458228168733e-301,8.852459027868853e-301,8.850459827568973e-301,8.848460627269093e-301,8.846461426969213e-301,8.844462226669333e-301,8.842463026369453e-301,8.840463826069573e-301,8.838464625769693e-301,8.836465425469813e-301,8.834466225169931e-301,8.832467024870051e-301,8.830467824570172e-301,8.828468624270292e-301,8.826469423970412e-301,8.824470223670532e-301,8.822471023370652e-301,8.820471823070772e-301,8.818472622770892e-301,8.816473422471012e-301,8.814474222171132e-301,8.812475021871252e-301,8.810475821571372e-301,8.808476621271492e-301,8.806477420971612e-301,8.804478220671732e-301,8.802479020371852e-301,8.800479820071972e-301,8.798480619772092e-301,8.796481419472212e-301,8.794482219172332e-301,8.792483018872452e-301,8.790483818572572e-301,8.78848461827269e-301,8.78648541797281e-301,8.78448621767293e-301,8.78248701737305e-301,8.78048781707317e-301,8.77848861677329e-301,8.77648941647341e-301,8.77449021617353e-301,8.77249101587365e-301,8.77049181557377e-301,8.76849261527389e-301,8.76649341497401e-301,8.76449421467413e-301,8.76249501437425e-301,8.76049581407437e-301,8.75849661377449e-301,8.75649741347461e-301,8.75449821317473e-301,8.75249901287485e-301,8.75049981257497e-301,8.748500612275091e-301,8.746501411975211e-301,8.744502211675331e-301,8.74250301137545e-301,8.74050381107557e-301,8.73850461077569e-301,8.73650541047581e-301,8.73450621017593e-301,8.73250700987605e-301,8.73050780957617e-301,8.72850860927629e-301,8.72650940897641e-301,8.72451020867653e-301,8.72251100837665e-301,8.72051180807677e-301,8.71851260777689e-301,8.71651340747701e-301,8.71451420717713e-301,8.71251500687725e-301,8.71051580657737e-301,8.70851660627749e-301,8.70651740597761e-301,8.70451820567773e-301,8.70251900537785e-301,8.70051980507797e-301,8.69852060477809e-301,8.696521404478208e-301,8.694522204178328e-301,8.692523003878448e-301,8.690523803578568e-301,8.688524603278688e-301,8.686525402978808e-301,8.684526202678928e-301,8.682527002379048e-301,8.680527802079168e-301,8.678528601779288e-301,8.676529401479408e-301,8.674530201179528e-301,8.672531000879648e-301,8.670531800579768e-301,8.668532600279889e-301,8.666533399980009e-301,8.664534199680129e-301,8.662534999380249e-301,8.660535799080369e-301,8.658536598780489e-301,8.656537398480609e-301,8.654538198180729e-301,8.652538997880847e-301,8.650539797580967e-301,8.648540597281087e-301,8.646541396981207e-301,8.644542196681327e-301,8.642542996381447e-301,8.640543796081567e-301,8.638544595781687e-301,8.636545395481807e-301,8.634546195181927e-301,8.632546994882047e-301,8.630547794582167e-301,8.628548594282287e-301,8.626549393982407e-301,8.624550193682527e-301,8.622550993382647e-301,8.620551793082767e-301,8.618552592782887e-301,8.616553392483007e-301,8.614554192183128e-301,8.612554991883248e-301,8.610555791583368e-301,8.608556591283488e-301,8.606557390983606e-301,8.604558190683726e-301,8.602558990383846e-301,8.600559790083966e-301,8.598560589784086e-301,8.596561389484206e-301,8.594562189184326e-301,8.592562988884446e-301,8.590563788584566e-301,8.588564588284686e-301,8.586565387984806e-301,8.584566187684926e-301,8.582566987385046e-301,8.580567787085166e-301,8.578568586785286e-301,8.576569386485406e-301,8.574570186185526e-301,8.572570985885646e-301,8.570571785585766e-301,8.568572585285886e-301,8.566573384986006e-301,8.564574184686126e-301,8.562574984386246e-301,8.560575784086365e-301,8.558576583786485e-301,8.556577383486605e-301,8.554578183186725e-301,8.552578982886845e-301,8.550579782586965e-301,8.548580582287085e-301,8.546581381987205e-301,8.544582181687325e-301,8.542582981387445e-301,8.540583781087565e-301,8.538584580787685e-301,8.536585380487805e-301,8.534586180187925e-301,8.532586979888045e-301,8.530587779588165e-301,8.528588579288285e-301,8.526589378988405e-301,8.524590178688525e-301,8.522590978388645e-301,8.520591778088765e-301,8.518592577788885e-301,8.516593377489005e-301,8.514594177189124e-301,8.512594976889244e-301,8.510595776589364e-301,8.508596576289484e-301,8.506597375989604e-301,8.504598175689724e-301,8.502598975389844e-301,8.500599775089964e-301,8.498600574790084e-301,8.496601374490204e-301,8.494602174190324e-301,8.492602973890444e-301,8.490603773590564e-301,8.488604573290684e-301,8.486605372990804e-301,8.484606172690924e-301,8.482606972391044e-301,8.480607772091164e-301,8.478608571791284e-301,8.476609371491404e-301,8.474610171191524e-301,8.472610970891644e-301,8.470611770591764e-301,8.468612570291883e-301,8.466613369992003e-301,8.464614169692123e-301,8.462614969392243e-301,8.460615769092363e-301,8.458616568792483e-301,8.456617368492603e-301,8.454618168192723e-301,8.452618967892843e-301,8.450619767592963e-301,8.448620567293083e-301,8.446621366993203e-301,8.444622166693323e-301,8.442622966393443e-301,8.440623766093563e-301,8.438624565793683e-301,8.436625365493803e-301,8.434626165193923e-301,8.432626964894043e-301,8.430627764594163e-301,8.428628564294283e-301,8.426629363994403e-301,8.424630163694523e-301,8.422630963394642e-301,8.420631763094762e-301,8.418632562794882e-301,8.416633362495002e-301,8.414634162195122e-301,8.412634961895242e-301,8.410635761595362e-301,8.408636561295482e-301,8.406637360995602e-301,8.404638160695722e-301,8.402638960395842e-301,8.400639760095962e-301,8.398640559796082e-301,8.396641359496202e-301,8.394642159196322e-301,8.392642958896442e-301,8.390643758596562e-301,8.388644558296682e-301,8.386645357996802e-301,8.384646157696922e-301,8.382646957397042e-301,8.380647757097162e-301,8.378648556797282e-301,8.3766493564974e-301,8.37465015619752e-301,8.37265095589764e-301,8.37065175559776e-301,8.36865255529788e-301,8.366653354998e-301,8.36465415469812e-301,8.36265495439824e-301,8.36065575409836e-301,8.35865655379848e-301,8.3566573534986e-301,8.35465815319872e-301,8.35265895289884e-301,8.35065975259896e-301,8.348660552299081e-301,8.346661351999201e-301,8.344662151699321e-301,8.342662951399441e-301,8.340663751099561e-301,8.338664550799681e-301,8.336665350499801e-301,8.334666150199921e-301,8.33266694990004e-301,8.33066774960016e-301,8.32866854930028e-301,8.3266693490004e-301,8.32467014870052e-301,8.32267094840064e-301,8.32067174810076e-301,8.31867254780088e-301,8.316673347501e-301,8.31467414720112e-301,8.31267494690124e-301,8.31067574660136e-301,8.30867654630148e-301,8.3066773460016e-301,8.30467814570172e-301,8.30267894540184e-301,8.30067974510196e-301,8.29868054480208e-301,8.2966813445022e-301,8.29468214420232e-301,8.29268294390244e-301,8.29068374360256e-301,8.28868454330268e-301,8.286685343002798e-301,8.284686142702918e-301,8.282686942403038e-301,8.280687742103158e-301,8.278688541803278e-301,8.276689341503398e-301,8.274690141203518e-301,8.272690940903638e-301,8.270691740603758e-301,8.268692540303879e-301,8.266693340003999e-301,8.264694139704119e-301,8.262694939404239e-301,8.260695739104359e-301,8.258696538804479e-301,8.256697338504599e-301,8.254698138204719e-301,8.252698937904839e-301,8.250699737604959e-301,8.248700537305079e-301,8.246701337005199e-301,8.244702136705319e-301,8.242702936405439e-301,8.240703736105557e-301,8.238704535805677e-301,8.236705335505797e-301,8.234706135205917e-301,8.232706934906037e-301,8.230707734606157e-301,8.228708534306277e-301,8.226709334006397e-301,8.224710133706517e-301,8.222710933406637e-301,8.220711733106757e-301,8.218712532806877e-301,8.216713332506997e-301,8.214714132207118e-301,8.212714931907238e-301,8.210715731607358e-301,8.208716531307478e-301,8.206717331007598e-301,8.204718130707718e-301,8.202718930407838e-301,8.200719730107958e-301,8.198720529808078e-301,8.196721329508198e-301,8.194722129208316e-301,8.192722928908436e-301,8.190723728608556e-301,8.188724528308676e-301,8.186725328008796e-301,8.184726127708916e-301,8.182726927409036e-301,8.180727727109156e-301,8.178728526809276e-301,8.176729326509396e-301,8.174730126209516e-301,8.172730925909636e-301,8.170731725609756e-301,8.168732525309876e-301,8.166733325009996e-301,8.164734124710116e-301,8.162734924410236e-301,8.160735724110357e-301,8.158736523810477e-301,8.156737323510597e-301,8.154738123210717e-301,8.152738922910837e-301,8.150739722610957e-301,8.148740522311075e-301,8.146741322011195e-301,8.144742121711315e-301,8.142742921411435e-301,8.140743721111555e-301,8.138744520811675e-301,8.136745320511795e-301,8.134746120211915e-301,8.132746919912035e-301,8.130747719612155e-301,8.128748519312275e-301,8.126749319012395e-301,8.124750118712515e-301,8.122750918412635e-301,8.120751718112755e-301,8.118752517812875e-301,8.116753317512995e-301,8.114754117213115e-301,8.112754916913235e-301,8.110755716613355e-301,8.108756516313475e-301,8.106757316013596e-301,8.104758115713716e-301,8.102758915413834e-301,8.100759715113954e-301,8.098760514814074e-301,8.096761314514194e-301,8.094762114214314e-301,8.092762913914434e-301,8.090763713614554e-301,8.088764513314674e-301,8.086765313014794e-301,8.084766112714914e-301,8.082766912415034e-301,8.080767712115154e-301,8.078768511815274e-301,8.076769311515394e-301,8.074770111215514e-301,8.072770910915634e-301,8.070771710615754e-301,8.068772510315874e-301,8.066773310015994e-301,8.064774109716114e-301,8.062774909416234e-301,8.060775709116354e-301,8.058776508816473e-301,8.056777308516593e-301,8.054778108216713e-301,8.052778907916833e-301,8.050779707616953e-301,8.048780507317073e-301,8.046781307017193e-301,8.044782106717313e-301,8.042782906417433e-301,8.040783706117553e-301,8.038784505817673e-301,8.036785305517793e-301,8.034786105217913e-301,8.032786904918033e-301,8.030787704618153e-301,8.028788504318273e-301,8.026789304018393e-301,8.024790103718513e-301,8.022790903418633e-301,8.020791703118753e-301,8.018792502818873e-301,8.016793302518993e-301,8.014794102219113e-301,8.012794901919232e-301,8.010795701619352e-301,8.008796501319472e-301,8.006797301019592e-301,8.004798100719712e-301,8.002798900419832e-301,8.000799700119952e-301,7.998800499820072e-301,7.996801299520192e-301,7.994802099220312e-301,7.992802898920432e-301,7.990803698620552e-301,7.988804498320672e-301,7.986805298020792e-301,7.984806097720912e-301,7.982806897421032e-301,7.980807697121152e-301,7.978808496821272e-301,7.976809296521392e-301,7.974810096221512e-301,7.972810895921632e-301,7.970811695621752e-301,7.968812495321872e-301,7.96681329502199e-301,7.96481409472211e-301,7.96281489442223e-301,7.96081569412235e-301,7.95881649382247e-301,7.95681729352259e-301,7.95481809322271e-301,7.95281889292283e-301,7.95081969262295e-301,7.94882049232307e-301,7.946821292023191e-301,7.944822091723311e-301,7.942822891423431e-301,7.940823691123551e-301,7.938824490823671e-301,7.936825290523791e-301,7.934826090223911e-301,7.932826889924031e-301,7.930827689624151e-301,7.928828489324271e-301,7.926829289024391e-301,7.924830088724511e-301,7.922830888424631e-301,7.92083168812475e-301,7.91883248782487e-301,7.91683328752499e-301,7.91483408722511e-301,7.91283488692523e-301,7.91083568662535e-301,7.90883648632547e-301,7.90683728602559e-301,7.90483808572571e-301,7.90283888542583e-301,7.90083968512595e-301,7.89884048482607e-301,7.89684128452619e-301,7.89484208422631e-301,7.89284288392643e-301,7.89084368362655e-301,7.88884448332667e-301,7.88684528302679e-301,7.88484608272691e-301,7.88284688242703e-301,7.88084768212715e-301,7.87884848182727e-301,7.87684928152739e-301,7.874850081227508e-301,7.872850880927628e-301,7.870851680627748e-301,7.868852480327868e-301,7.866853280027989e-301,7.864854079728109e-301,7.862854879428229e-301,7.860855679128349e-301,7.858856478828469e-301,7.856857278528589e-301,7.854858078228709e-301,7.852858877928829e-301,7.850859677628949e-301,7.848860477329069e-301,7.846861277029189e-301,7.844862076729309e-301,7.842862876429429e-301,7.840863676129549e-301,7.838864475829669e-301,7.836865275529789e-301,7.834866075229909e-301,7.832866874930029e-301,7.830867674630149e-301,7.828868474330267e-301,7.826869274030387e-301,7.824870073730507e-301,7.822870873430627e-301,7.820871673130747e-301,7.818872472830867e-301,7.816873272530987e-301,7.814874072231107e-301,7.812874871931228e-301,7.810875671631348e-301,7.808876471331468e-301,7.806877271031588e-301,7.804878070731708e-301,7.802878870431828e-301,7.800879670131948e-301,7.798880469832068e-301,7.796881269532188e-301,7.794882069232308e-301,7.792882868932428e-301,7.790883668632548e-301,7.788884468332668e-301,7.786885268032788e-301,7.784886067732908e-301,7.782886867433026e-301,7.780887667133146e-301,7.778888466833266e-301,7.776889266533386e-301,7.774890066233506e-301,7.772890865933626e-301,7.770891665633746e-301,7.768892465333866e-301,7.766893265033986e-301,7.764894064734106e-301,7.762894864434226e-301,7.760895664134346e-301,7.758896463834467e-301,7.756897263534587e-301,7.754898063234707e-301,7.752898862934827e-301,7.750899662634947e-301,7.748900462335067e-301,7.746901262035187e-301,7.744902061735307e-301,7.742902861435427e-301,7.740903661135547e-301,7.738904460835665e-301,7.736905260535785e-301,7.734906060235905e-301,7.732906859936025e-301,7.730907659636145e-301,7.728908459336265e-301,7.726909259036385e-301,7.724910058736505e-301,7.722910858436625e-301,7.720911658136745e-301,7.718912457836865e-301,7.716913257536985e-301,7.714914057237105e-301,7.712914856937225e-301,7.710915656637345e-301,7.708916456337465e-301,7.706917256037586e-301,7.704918055737706e-301,7.702918855437826e-301,7.700919655137946e-301,7.698920454838066e-301,7.696921254538186e-301,7.694922054238306e-301,7.692922853938424e-301,7.690923653638544e-301,7.688924453338664e-301,7.686925253038784e-301,7.684926052738904e-301,7.682926852439024e-301,7.680927652139144e-301,7.678928451839264e-301,7.676929251539384e-301,7.674930051239504e-301,7.672930850939624e-301,7.670931650639744e-301,7.668932450339864e-301,7.666933250039984e-301,7.664934049740104e-301,7.662934849440224e-301,7.660935649140344e-301,7.658936448840464e-301,7.656937248540584e-301,7.654938048240704e-301,7.652938847940825e-301,7.650939647640945e-301,7.648940447341065e-301,7.646941247041183e-301,7.644942046741303e-301,7.642942846441423e-301,7.640943646141543e-301,7.638944445841663e-301,7.636945245541783e-301,7.634946045241903e-301,7.632946844942023e-301,7.630947644642143e-301,7.628948444342263e-301,7.626949244042383e-301,7.624950043742503e-301,7.622950843442623e-301,7.620951643142743e-301,7.618952442842863e-301,7.616953242542983e-301,7.614954042243103e-301,7.612954841943223e-301,7.610955641643343e-301,7.608956441343463e-301,7.606957241043583e-301,7.604958040743703e-301,7.602958840443823e-301,7.600959640143942e-301,7.598960439844062e-301,7.596961239544182e-301,7.594962039244302e-301,7.592962838944422e-301,7.590963638644542e-301,7.588964438344662e-301,7.586965238044782e-301,7.584966037744902e-301,7.582966837445022e-301,7.580967637145142e-301,7.578968436845262e-301,7.576969236545382e-301,7.574970036245502e-301,7.572970835945622e-301,7.570971635645742e-301,7.568972435345862e-301,7.566973235045982e-301,7.564974034746102e-301,7.562974834446222e-301,7.560975634146342e-301,7.558976433846462e-301,7.556977233546582e-301,7.5549780332467e-301,7.55297883294682e-301,7.55097963264694e-301,7.54898043234706e-301,7.546981232047181e-301,7.544982031747301e-301,7.542982831447421e-301,7.540983631147541e-301,7.538984430847661e-301,7.536985230547781e-301,7.534986030247901e-301,7.532986829948021e-301,7.530987629648141e-301,7.528988429348261e-301,7.526989229048381e-301,7.524990028748501e-301,7.522990828448621e-301,7.520991628148741e-301,7.518992427848861e-301,7.516993227548981e-301,7.514994027249101e-301,7.512994826949221e-301,7.510995626649341e-301,7.50899642634946e-301,7.50699722604958e-301,7.5049980257497e-301,7.50299882544982e-301,7.50099962514994e-301,7.49900042485006e-301,7.49700122455018e-301,7.4950020242503e-301,7.49300282395042e-301,7.49100362365054e-301,7.48900442335066e-301,7.48700522305078e-301,7.4850060227509e-301,7.48300682245102e-301,7.48100762215114e-301,7.47900842185126e-301,7.47700922155138e-301,7.4750100212515e-301,7.47301082095162e-301,7.47101162065174e-301,7.46901242035186e-301,7.46701322005198e-301,7.465014019752099e-301,7.463014819452219e-301,7.461015619152339e-301,7.4590164188524594e-301,7.4570172185525795e-301,7.4550180182526995e-301,7.453018817952819e-301,7.451019617652939e-301,7.449020417353059e-301,7.447021217053179e-301,7.445022016753299e-301,7.443022816453419e-301,7.441023616153539e-301,7.439024415853659e-301,7.437025215553779e-301,7.435026015253899e-301,7.433026814954019e-301,7.431027614654139e-301,7.429028414354258e-301,7.427029214054378e-301,7.425030013754498e-301,7.423030813454618e-301,7.421031613154738e-301,7.419032412854858e-301,7.417033212554978e-301,7.415034012255098e-301,7.413034811955218e-301,7.411035611655338e-301,7.409036411355458e-301,7.4070372110555776e-301,7.405038010755698e-301,7.403038810455818e-301,7.401039610155938e-301,7.399040409856058e-301,7.397041209556178e-301,7.395042009256298e-301,7.393042808956418e-301,7.391043608656538e-301,7.389044408356658e-301,7.387045208056778e-301,7.385046007756897e-301,7.383046807457017e-301,7.381047607157137e-301,7.379048406857257e-301,7.377049206557377e-301,7.375050006257497e-301,7.373050805957617e-301,7.371051605657737e-301,7.369052405357857e-301,7.367053205057977e-301,7.365054004758097e-301,7.363054804458217e-301,7.3610556041583365e-301,7.3590564038584565e-301,7.3570572035585765e-301,7.3550580032586966e-301,7.3530588029588166e-301,7.351059602658937e-301,7.349060402359057e-301,7.347061202059177e-301,7.345062001759297e-301,7.343062801459417e-301,7.341063601159537e-301,7.339064400859656e-301,7.337065200559776e-301,7.335066000259896e-301,7.333066799960016e-301,7.331067599660136e-301,7.329068399360256e-301,7.327069199060376e-301,7.325069998760496e-301,7.323070798460616e-301,7.321071598160736e-301,7.319072397860856e-301,7.317073197560976e-301,7.315073997261095e-301,7.3130747969612154e-301,7.3110755966613354e-301,7.3090763963614555e-301,7.3070771960615755e-301,7.3050779957616955e-301,7.3030787954618155e-301,7.3010795951619356e-301,7.299080394862056e-301,7.297081194562176e-301,7.295081994262296e-301,7.293082793962415e-301,7.291083593662535e-301,7.289084393362655e-301,7.287085193062775e-301,7.285085992762895e-301,7.283086792463015e-301,7.281087592163135e-301,7.279088391863255e-301,7.277089191563375e-301,7.275089991263495e-301,7.273090790963615e-301,7.271091590663735e-301,7.269092390363854e-301,7.267093190063974e-301,7.265093989764094e-301,7.263094789464214e-301,7.261095589164334e-301,7.2590963888644544e-301,7.2570971885645744e-301,7.2550979882646945e-301,7.2530987879648145e-301,7.2510995876649345e-301,7.2491003873650545e-301,7.247101187065174e-301,7.245101986765294e-301,7.243102786465414e-301,7.241103586165534e-301,7.239104385865654e-301,7.237105185565774e-301,7.235105985265894e-301,7.233106784966014e-301,7.231107584666134e-301,7.229108384366254e-301,7.227109184066374e-301,7.225109983766493e-301,7.223110783466613e-301,7.221111583166733e-301,7.219112382866853e-301,7.217113182566973e-301,7.215113982267093e-301,7.213114781967213e-301,7.211115581667333e-301,7.209116381367453e-301,7.207117181067573e-301,7.2051179807676934e-301,7.2031187804678134e-301,7.201119580167933e-301,7.199120379868053e-301,7.197121179568173e-301,7.195121979268293e-301,7.193122778968413e-301,7.191123578668533e-301,7.189124378368653e-301,7.187125178068773e-301,7.185125977768893e-301,7.183126777469013e-301,7.181127577169133e-301,7.179128376869252e-301,7.177129176569372e-301,7.175129976269492e-301,7.173130775969612e-301,7.171131575669732e-301,7.169132375369852e-301,7.167133175069972e-301,7.165133974770092e-301,7.163134774470212e-301,7.161135574170332e-301,7.159136373870452e-301,7.157137173570572e-301,7.1551379732706916e-301,7.1531387729708116e-301,7.151139572670932e-301,7.149140372371052e-301,7.147141172071172e-301,7.145141971771292e-301,7.143142771471412e-301,7.141143571171532e-301,7.139144370871652e-301,7.137145170571772e-301,7.135145970271892e-301,7.133146769972011e-301,7.131147569672131e-301,7.129148369372251e-301,7.127149169072371e-301,7.125149968772491e-301,7.123150768472611e-301,7.121151568172731e-301,7.119152367872851e-301,7.117153167572971e-301,7.115153967273091e-301,7.113154766973211e-301,7.1111555666733304e-301,7.1091563663734505e-301,7.1071571660735705e-301,7.1051579657736905e-301,7.1031587654738105e-301,7.1011595651739306e-301,7.0991603648740506e-301,7.097161164574171e-301,7.095161964274291e-301,7.093162763974411e-301,7.091163563674531e-301,7.089164363374651e-301,7.08716516307477e-301,7.08516596277489e-301,7.08316676247501e-301,7.08116756217513e-301,7.07916836187525e-301,7.07716916157537e-301,7.07516996127549e-301,7.07317076097561e-301,7.07117156067573e-301,7.06917236037585e-301,7.06717316007597e-301,7.065173959776089e-301,7.063174759476209e-301,7.061175559176329e-301,7.059176358876449e-301,7.0571771585765694e-301,7.0551779582766895e-301,7.0531787579768095e-301,7.0511795576769295e-301,7.0491803573770495e-301,7.0471811570771696e-301,7.0451819567772896e-301,7.04318275647741e-301,7.041183556177529e-301,7.039184355877649e-301,7.037185155577769e-301,7.035185955277889e-301,7.033186754978009e-301,7.031187554678129e-301,7.029188354378249e-301,7.027189154078369e-301,7.025189953778489e-301,7.023190753478609e-301,7.021191553178729e-301,7.019192352878848e-301,7.017193152578968e-301,7.015193952279088e-301,7.013194751979208e-301,7.011195551679328e-301,7.009196351379448e-301,7.007197151079568e-301,7.0051979507796884e-301,7.0031987504798084e-301,7.0011995501799285e-301,6.9992003498800485e-301,6.9972011495801685e-301,6.995201949280288e-301,6.993202748980408e-301,6.991203548680528e-301,6.989204348380648e-301,6.987205148080768e-301,6.985205947780888e-301,6.983206747481008e-301,6.981207547181128e-301,6.979208346881248e-301,6.977209146581368e-301,6.975209946281488e-301,6.973210745981607e-301,6.971211545681727e-301,6.969212345381847e-301,6.967213145081967e-301,6.965213944782087e-301,6.963214744482207e-301,6.961215544182327e-301,6.959216343882447e-301,6.957217143582567e-301,6.955217943282687e-301,6.953218742982807e-301,6.951219542682927e-301,6.949220342383047e-301,6.947221142083167e-301,6.945221941783287e-301,6.943222741483407e-301,6.941223541183527e-301,6.939224340883647e-301,6.937225140583767e-301,6.935225940283887e-301,6.933226739984007e-301,6.931227539684127e-301,6.929228339384247e-301,6.927229139084366e-301,6.925229938784486e-301,6.923230738484606e-301,6.921231538184726e-301,6.919232337884846e-301,6.917233137584966e-301,6.915233937285086e-301,6.913234736985206e-301,6.911235536685326e-301,6.909236336385446e-301,6.907237136085566e-301,6.9052379357856855e-301,6.9032387354858055e-301,6.9012395351859255e-301,6.8992403348860456e-301,6.897241134586166e-301,6.895241934286286e-301,6.893242733986406e-301,6.891243533686526e-301,6.889244333386646e-301,6.887245133086766e-301,6.885245932786886e-301,6.883246732487006e-301,6.881247532187125e-301,6.879248331887245e-301,6.877249131587365e-301,6.875249931287485e-301,6.873250730987605e-301,6.871251530687725e-301,6.869252330387845e-301,6.867253130087965e-301,6.865253929788085e-301,6.863254729488205e-301,6.861255529188325e-301,6.859256328888444e-301,6.8572571285885644e-301,6.8552579282886845e-301,6.8532587279888045e-301,6.8512595276889245e-301,6.8492603273890445e-301,6.8472611270891646e-301,6.8452619267892846e-301,6.843262726489405e-301,6.841263526189525e-301,6.839264325889645e-301,6.837265125589765e-301,6.835265925289884e-301,6.833266724990004e-301,6.831267524690124e-301,6.829268324390244e-301,6.827269124090364e-301,6.825269923790484e-301,6.823270723490604e-301,6.821271523190724e-301,6.819272322890844e-301,6.817273122590964e-301,6.815273922291084e-301,6.813274721991203e-301,6.811275521691323e-301,6.809276321391443e-301,6.807277121091563e-301,6.805277920791683e-301,6.8032787204918034e-301,6.8012795201919235e-301,6.7992803198920435e-301,6.7972811195921635e-301,6.7952819192922835e-301,6.7932827189924036e-301,6.791283518692523e-301,6.789284318392643e-301,6.787285118092763e-301,6.785285917792883e-301,6.783286717493003e-301,6.781287517193123e-301,6.779288316893243e-301,6.777289116593363e-301,6.775289916293483e-301,6.773290715993603e-301,6.771291515693723e-301,6.769292315393843e-301,6.767293115093962e-301,6.765293914794082e-301,6.763294714494202e-301,6.761295514194322e-301,6.759296313894442e-301,6.757297113594562e-301,6.755297913294682e-301,6.753298712994802e-301,6.7512995126949224e-301,6.7493003123950424e-301,6.7473011120951625e-301,6.745301911795282e-301,6.743302711495402e-301,6.741303511195522e-301,6.739304310895642e-301,6.737305110595762e-301,6.735305910295882e-301,6.733306709996002e-301,6.731307509696122e-301,6.729308309396242e-301,6.727309109096362e-301,6.725309908796482e-301,6.723310708496602e-301,6.721311508196721e-301,6.719312307896841e-301,6.717313107596961e-301,6.715313907297081e-301,6.713314706997201e-301,6.711315506697321e-301,6.709316306397441e-301,6.707317106097561e-301,6.705317905797681e-301,6.703318705497801e-301,6.701319505197921e-301,6.6993203048980406e-301,6.697321104598161e-301,6.695321904298281e-301,6.693322703998401e-301,6.691323503698521e-301,6.689324303398641e-301,6.687325103098761e-301,6.685325902798881e-301,6.683326702499001e-301,6.681327502199121e-301,6.679328301899241e-301,6.677329101599361e-301,6.67532990129948e-301,6.6733307009996e-301,6.67133150069972e-301,6.66933230039984e-301,6.66733310009996e-301,6.66533389980008e-301,6.6633346995002e-301,6.66133549920032e-301,6.65933629890044e-301,6.65733709860056e-301,6.65533789830068e-301,6.6533386980007995e-301,6.6513394977009195e-301,6.6493402974010395e-301,6.6473410971011595e-301,6.6453418968012796e-301,6.6433426965014e-301,6.64134349620152e-301,6.63934429590164e-301,6.63734509560176e-301,6.63534589530188e-301,6.633346695002e-301,6.631347494702119e-301,6.629348294402239e-301,6.627349094102359e-301,6.625349893802479e-301,6.623350693502599e-301,6.621351493202719e-301,6.619352292902839e-301,6.617353092602959e-301,6.615353892303079e-301,6.613354692003199e-301,6.611355491703319e-301,6.609356291403439e-301,6.607357091103558e-301,6.605357890803678e-301,6.6033586905037984e-301,6.6013594902039185e-301,6.5993602899040385e-301,6.5973610896041585e-301,6.5953618893042785e-301,6.5933626890043986e-301,6.5913634887045186e-301,6.589364288404639e-301,6.587365088104759e-301,6.585365887804878e-301,6.583366687504998e-301,6.581367487205118e-301,6.579368286905238e-301,6.577369086605358e-301,6.575369886305478e-301,6.573370686005598e-301,6.571371485705718e-301,6.569372285405838e-301,6.567373085105958e-301,6.565373884806078e-301,6.563374684506198e-301,6.561375484206317e-301,6.559376283906437e-301,6.557377083606557e-301,6.555377883306677e-301,6.553378683006797e-301,6.551379482706917e-301,6.5493802824070374e-301,6.5473810821071575e-301,6.5453818818072775e-301,6.5433826815073975e-301,6.5413834812075175e-301,6.539384280907637e-301,6.537385080607757e-301,6.535385880307877e-301,6.533386680007997e-301,6.531387479708117e-301,6.529388279408237e-301,6.527389079108357e-301,6.525389878808477e-301,6.523390678508597e-301,6.521391478208717e-301,6.519392277908837e-301,6.517393077608956e-301,6.515393877309076e-301,6.513394677009196e-301,6.511395476709316e-301,6.509396276409436e-301,6.507397076109556e-301,6.505397875809676e-301,6.503398675509796e-301,6.501399475209916e-301,6.499400274910036e-301,6.497401074610156e-301,6.4954018743102764e-301,6.493402674010396e-301,6.491403473710516e-301,6.489404273410636e-301,6.487405073110756e-301,6.485405872810876e-301,6.483406672510996e-301,6.481407472211116e-301,6.479408271911236e-301,6.477409071611356e-301,6.475409871311476e-301,6.473410671011596e-301,6.471411470711715e-301,6.469412270411835e-301,6.467413070111955e-301,6.465413869812075e-301,6.463414669512195e-301,6.461415469212315e-301,6.459416268912435e-301,6.457417068612555e-301,6.455417868312675e-301,6.453418668012795e-301,6.451419467712915e-301,6.449420267413035e-301,6.4474210671131545e-301,6.4454218668132746e-301,6.443422666513395e-301,6.441423466213515e-301,6.439424265913635e-301,6.437425065613755e-301,6.435425865313875e-301,6.433426665013995e-301,6.431427464714115e-301,6.429428264414235e-301,6.427429064114355e-301,6.425429863814474e-301,6.423430663514594e-301,6.421431463214714e-301,6.419432262914834e-301,6.417433062614954e-301,6.415433862315074e-301,6.413434662015194e-301,6.411435461715314e-301,6.409436261415434e-301,6.407437061115554e-301,6.405437860815674e-301,6.403438660515794e-301,6.4014394602159134e-301,6.3994402599160335e-301,6.3974410596161535e-301,6.3954418593162735e-301,6.3934426590163935e-301,6.3914434587165136e-301,6.389444258416634e-301,6.387445058116754e-301,6.385445857816874e-301,6.383446657516994e-301,6.381447457217114e-301,6.379448256917233e-301,6.377449056617353e-301,6.375449856317473e-301,6.373450656017593e-301,6.371451455717713e-301,6.369452255417833e-301,6.367453055117953e-301,6.365453854818073e-301,6.363454654518193e-301,6.361455454218313e-301,6.359456253918433e-301,6.357457053618552e-301,6.355457853318672e-301,6.353458653018792e-301,6.351459452718912e-301,6.3494602524190324e-301,6.3474610521191525e-301,6.3454618518192725e-301,6.3434626515193925e-301,6.3414634512195125e-301,6.3394642509196326e-301,6.3374650506197526e-301,6.335465850319873e-301,6.333466650019992e-301,6.331467449720112e-301,6.329468249420232e-301,6.327469049120352e-301,6.325469848820472e-301,6.323470648520592e-301,6.321471448220712e-301,6.319472247920832e-301,6.317473047620952e-301,6.315473847321072e-301,6.313474647021192e-301,6.311475446721311e-301,6.309476246421431e-301,6.307477046121551e-301,6.305477845821671e-301,6.303478645521791e-301,6.301479445221911e-301,6.299480244922031e-301,6.297481044622151e-301,6.2954818443222714e-301,6.2934826440223915e-301,6.2914834437225115e-301,6.2894842434226315e-301,6.287485043122751e-301,6.285485842822871e-301,6.283486642522991e-301,6.281487442223111e-301,6.279488241923231e-301,6.277489041623351e-301,6.275489841323471e-301,6.273490641023591e-301,6.271491440723711e-301,6.269492240423831e-301,6.267493040123951e-301,6.26549383982407e-301,6.26349463952419e-301,6.26149543922431e-301,6.25949623892443e-301,6.25749703862455e-301,6.25549783832467e-301,6.25349863802479e-301,6.25149943772491e-301,6.24950023742503e-301,6.24750103712515e-301,6.24550183682527e-301,6.24350263652539e-301,6.24150343622551e-301,6.23950423592563e-301,6.23750503562575e-301,6.23550583532587e-301,6.23350663502599e-301,6.23150743472611e-301,6.22950823442623e-301,6.22750903412635e-301,6.22550983382647e-301,6.22351063352659e-301,6.22151143322671e-301,6.219512232926829e-301,6.217513032626949e-301,6.215513832327069e-301,6.213514632027189e-301,6.211515431727309e-301,6.209516231427429e-301,6.207517031127549e-301,6.205517830827669e-301,6.203518630527789e-301,6.201519430227909e-301,6.199520229928029e-301,6.1975210296281485e-301,6.1955218293282685e-301,6.1935226290283885e-301,6.1915234287285086e-301,6.189524228428629e-301,6.187525028128749e-301,6.185525827828869e-301,6.183526627528989e-301,6.181527427229109e-301,6.179528226929229e-301,6.177529026629349e-301,6.175529826329469e-301,6.173530626029588e-301,6.171531425729708e-301,6.169532225429828e-301,6.167533025129948e-301,6.165533824830068e-301,6.163534624530188e-301,6.161535424230308e-301,6.159536223930428e-301,6.157537023630548e-301,6.155537823330668e-301,6.153538623030788e-301,6.151539422730907e-301,6.1495402224310274e-301,6.1475410221311474e-301,6.1455418218312675e-301,6.1435426215313875e-301,6.1415434212315075e-301,6.1395442209316275e-301,6.1375450206317476e-301,6.135545820331868e-301,6.133546620031988e-301,6.131547419732108e-301,6.129548219432228e-301,6.127549019132347e-301,6.125549818832467e-301,6.123550618532587e-301,6.121551418232707e-301,6.119552217932827e-301,6.117553017632947e-301,6.115553817333067e-301,6.113554617033187e-301,6.111555416733307e-301,6.109556216433427e-301,6.107557016133547e-301,6.105557815833666e-301,6.103558615533786e-301,6.101559415233906e-301,6.099560214934026e-301,6.097561014634146e-301,6.0955618143342664e-301,6.0935626140343864e-301,6.0915634137345065e-301,6.0895642134346265e-301,6.0875650131347465e-301,6.0855658128348665e-301,6.083566612534986e-301,6.081567412235106e-301,6.079568211935226e-301,6.077569011635346e-301,6.075569811335466e-301,6.073570611035586e-301,6.071571410735706e-301,6.069572210435826e-301,6.067573010135946e-301,6.065573809836066e-301,6.063574609536186e-301,6.061575409236306e-301,6.059576208936425e-301,6.057577008636545e-301,6.055577808336665e-301,6.053578608036785e-301,6.051579407736905e-301,6.049580207437025e-301,6.047581007137145e-301,6.045581806837265e-301,6.043582606537385e-301,6.0415834062375054e-301,6.0395842059376255e-301,6.037585005637745e-301,6.035585805337865e-301,6.033586605037985e-301,6.031587404738105e-301,6.029588204438225e-301,6.027589004138345e-301,6.025589803838465e-301,6.023590603538585e-301,6.021591403238705e-301,6.019592202938825e-301,6.017593002638945e-301,6.015593802339065e-301,6.013594602039184e-301,6.011595401739304e-301,6.009596201439424e-301,6.007597001139544e-301,6.005597800839664e-301,6.003598600539784e-301,6.001599400239904e-301,5.999600199940024e-301,5.997600999640144e-301,5.995601799340264e-301,5.993602599040384e-301,5.9916033987405036e-301,5.9896041984406236e-301,5.987604998140744e-301,5.985605797840864e-301,5.983606597540984e-301,5.981607397241104e-301,5.979608196941224e-301,5.977608996641344e-301,5.975609796341464e-301,5.973610596041584e-301,5.971611395741704e-301,5.969612195441824e-301,5.967612995141943e-301,5.965613794842063e-301,5.963614594542183e-301,5.961615394242303e-301,5.959616193942423e-301,5.957616993642543e-301,5.955617793342663e-301,5.953618593042783e-301,5.951619392742903e-301,5.949620192443023e-301,5.947620992143143e-301,5.9456217918432625e-301,5.9436225915433825e-301,5.9416233912435025e-301,5.9396241909436225e-301,5.9376249906437426e-301,5.935625790343863e-301,5.933626590043983e-301,5.931627389744103e-301,5.929628189444223e-301,5.927628989144343e-301,5.925629788844463e-301,5.923630588544582e-301,5.921631388244702e-301,5.919632187944822e-301,5.917632987644942e-301,5.915633787345062e-301,5.913634587045182e-301,5.911635386745302e-301,5.909636186445422e-301,5.907636986145542e-301,5.905637785845662e-301,5.903638585545782e-301,5.901639385245902e-301,5.899640184946021e-301,5.897640984646141e-301,5.8956417843462614e-301,5.8936425840463814e-301,5.8916433837465015e-301,5.8896441834466215e-301,5.8876449831467415e-301,5.8856457828468615e-301,5.8836465825469816e-301,5.881647382247102e-301,5.879648181947222e-301,5.877648981647341e-301,5.875649781347461e-301,5.873650581047581e-301,5.871651380747701e-301,5.869652180447821e-301,5.867652980147941e-301,5.865653779848061e-301,5.863654579548181e-301,5.861655379248301e-301,5.859656178948421e-301,5.857656978648541e-301,5.855657778348661e-301,5.85365857804878e-301,5.8516593777489e-301,5.84966017744902e-301,5.84766097714914e-301,5.84566177684926e-301,5.84366257654938e-301,5.8416633762495004e-301,5.8396641759496204e-301,5.8376649756497405e-301,5.8356657753498605e-301,5.8336665750499805e-301,5.8316673747501e-301,5.82966817445022e-301,5.82766897415034e-301,5.82566977385046e-301,5.82367057355058e-301,5.8216713732507e-301,5.81967217295082e-301,5.81767297265094e-301,5.81567377235106e-301,5.81367457205118e-301,5.8116753717513e-301,5.80967617145142e-301,5.807676971151539e-301,5.805677770851659e-301,5.803678570551779e-301,5.801679370251899e-301,5.799680169952019e-301,5.797680969652139e-301,5.795681769352259e-301,5.793682569052379e-301,5.791683368752499e-301,5.789684168452619e-301,5.7876849681527394e-301,5.785685767852859e-301,5.783686567552979e-301,5.781687367253099e-301,5.779688166953219e-301,5.777688966653339e-301,5.775689766353459e-301,5.773690566053579e-301,5.771691365753699e-301,5.769692165453819e-301,5.767692965153939e-301,5.765693764854059e-301,5.763694564554178e-301,5.761695364254298e-301,5.759696163954418e-301,5.757696963654538e-301,5.755697763354658e-301,5.753698563054778e-301,5.751699362754898e-301,5.749700162455018e-301,5.747700962155138e-301,5.745701761855258e-301,5.743702561555378e-301,5.741703361255498e-301,5.7397041609556175e-301,5.7377049606557376e-301,5.7357057603558576e-301,5.733706560055978e-301,5.731707359756098e-301,5.729708159456218e-301,5.727708959156338e-301,5.725709758856458e-301,5.723710558556578e-301,5.721711358256698e-301,5.719712157956818e-301,5.717712957656937e-301,5.715713757357057e-301,5.713714557057177e-301,5.711715356757297e-301,5.709716156457417e-301,5.707716956157537e-301,5.705717755857657e-301,5.703718555557777e-301,5.701719355257897e-301,5.699720154958017e-301,5.697720954658137e-301,5.695721754358257e-301,5.6937225540583764e-301,5.6917233537584965e-301,5.6897241534586165e-301,5.6877249531587365e-301,5.6857257528588565e-301,5.6837265525589766e-301,5.6817273522590966e-301,5.679728151959217e-301,5.677728951659337e-301,5.675729751359457e-301,5.673730551059577e-301,5.671731350759696e-301,5.669732150459816e-301,5.667732950159936e-301,5.665733749860056e-301,5.663734549560176e-301,5.661735349260296e-301,5.659736148960416e-301,5.657736948660536e-301,5.655737748360656e-301,5.653738548060776e-301,5.651739347760896e-301,5.649740147461016e-301,5.647740947161135e-301,5.645741746861255e-301,5.643742546561375e-301,5.6417433462614954e-301,5.6397441459616154e-301,5.6377449456617355e-301,5.6357457453618555e-301,5.6337465450619755e-301,5.6317473447620955e-301,5.6297481444622156e-301,5.627748944162336e-301,5.625749743862455e-301,5.623750543562575e-301,5.621751343262695e-301,5.619752142962815e-301,5.617752942662935e-301,5.615753742363055e-301,5.613754542063175e-301,5.611755341763295e-301,5.609756141463415e-301,5.607756941163535e-301,5.605757740863655e-301,5.603758540563774e-301,5.601759340263894e-301,5.599760139964014e-301,5.597760939664134e-301,5.595761739364254e-301,5.593762539064374e-301,5.591763338764494e-301,5.589764138464614e-301,5.5877649381647344e-301,5.5857657378648544e-301,5.5837665375649745e-301,5.5817673372650945e-301,5.579768136965214e-301,5.577768936665334e-301,5.575769736365454e-301,5.573770536065574e-301,5.571771335765694e-301,5.569772135465814e-301,5.567772935165934e-301,5.565773734866054e-301,5.563774534566174e-301,5.561775334266294e-301,5.559776133966414e-301,5.557776933666533e-301,5.555777733366653e-301,5.553778533066773e-301,5.551779332766893e-301,5.549780132467013e-301,5.547780932167133e-301,5.545781731867253e-301,5.543782531567373e-301,5.541783331267493e-301,5.539784130967613e-301,5.537784930667733e-301,5.535785730367853e-301,5.533786530067973e-301,5.531787329768093e-301,5.529788129468213e-301,5.527788929168333e-301,5.525789728868453e-301,5.523790528568573e-301,5.521791328268693e-301,5.519792127968813e-301,5.517792927668933e-301,5.515793727369053e-301,5.513794527069173e-301,5.511795326769292e-301,5.509796126469412e-301,5.507796926169532e-301,5.505797725869652e-301,5.503798525569772e-301,5.501799325269892e-301,5.499800124970012e-301,5.497800924670132e-301,5.495801724370252e-301,5.493802524070372e-301,5.491803323770492e-301,5.4898041234706115e-301,5.4878049231707315e-301,5.4858057228708515e-301,5.4838065225709716e-301,5.4818073222710916e-301,5.479808121971212e-301,5.477808921671332e-301,5.475809721371452e-301,5.473810521071572e-301,5.471811320771692e-301,5.469812120471812e-301,5.467812920171932e-301,5.465813719872051e-301,5.463814519572171e-301,5.461815319272291e-301,5.459816118972411e-301,5.457816918672531e-301,5.455817718372651e-301,5.453818518072771e-301,5.451819317772891e-301,5.449820117473011e-301,5.447820917173131e-301,5.445821716873251e-301,5.44382251657337e-301,5.44182331627349e-301,5.4398241159736104e-301,5.4378249156737305e-301,5.4358257153738505e-301,5.4338265150739705e-301,5.4318273147740905e-301,5.4298281144742106e-301,5.4278289141743306e-301,5.425829713874451e-301,5.423830513574571e-301,5.421831313274691e-301,5.41983211297481e-301,5.41783291267493e-301,5.41583371237505e-301,5.41383451207517e-301,5.41183531177529e-301,5.40983611147541e-301,5.40783691117553e-301,5.40583771087565e-301,5.40383851057577e-301,5.40183931027589e-301,5.39984010997601e-301,5.397840909676129e-301,5.395841709376249e-301,5.393842509076369e-301,5.391843308776489e-301,5.389844108476609e-301,5.3878449081767294e-301,5.3858457078768494e-301,5.3838465075769695e-301,5.3818473072770895e-301,5.3798481069772095e-301,5.3778489066773295e-301,5.3758497063774496e-301,5.373850506077569e-301,5.371851305777689e-301,5.369852105477809e-301,5.367852905177929e-301,5.365853704878049e-301,5.363854504578169e-301,5.361855304278289e-301,5.359856103978409e-301,5.357856903678529e-301,5.355857703378649e-301,5.353858503078769e-301,5.351859302778888e-301,5.349860102479008e-301,5.347860902179128e-301,5.345861701879248e-301,5.343862501579368e-301,5.341863301279488e-301,5.339864100979608e-301,5.337864900679728e-301,5.335865700379848e-301,5.3338665000799684e-301,5.3318672997800884e-301,5.329868099480208e-301,5.327868899180328e-301,5.325869698880448e-301,5.323870498580568e-301,5.321871298280688e-301,5.319872097980808e-301,5.317872897680928e-301,5.315873697381048e-301,5.313874497081168e-301,5.311875296781288e-301,5.309876096481408e-301,5.307876896181528e-301,5.305877695881647e-301,5.303878495581767e-301,5.301879295281887e-301,5.299880094982007e-301,5.297880894682127e-301,5.295881694382247e-301,5.293882494082367e-301,5.291883293782487e-301,5.289884093482607e-301,5.287884893182727e-301,5.285885692882847e-301,5.2838864925829665e-301,5.2818872922830866e-301,5.279888091983207e-301,5.277888891683327e-301,5.275889691383447e-301,5.273890491083567e-301,5.271891290783687e-301,5.269892090483807e-301,5.267892890183927e-301,5.265893689884047e-301,5.263894489584167e-301,5.261895289284287e-301,5.259896088984406e-301,5.257896888684526e-301,5.255897688384646e-301,5.253898488084766e-301,5.251899287784886e-301,5.249900087485006e-301,5.247900887185126e-301,5.245901686885246e-301,5.243902486585366e-301,5.241903286285486e-301,5.239904085985606e-301,5.2379048856857255e-301,5.2359056853858455e-301,5.2339064850859655e-301,5.2319072847860855e-301,5.2299080844862056e-301,5.2279088841863256e-301,5.225909683886446e-301,5.223910483586566e-301,5.221911283286686e-301,5.219912082986806e-301,5.217912882686926e-301,5.215913682387046e-301,5.213914482087165e-301,5.211915281787285e-301,5.209916081487405e-301,5.207916881187525e-301,5.205917680887645e-301,5.203918480587765e-301,5.201919280287885e-301,5.199920079988005e-301,5.197920879688125e-301,5.195921679388245e-301,5.193922479088365e-301,5.191923278788484e-301,5.189924078488604e-301,5.187924878188724e-301,5.1859256778888444e-301,5.1839264775889645e-301,5.1819272772890845e-301,5.1799280769892045e-301,5.1779288766893245e-301,5.1759296763894446e-301,5.1739304760895646e-301,5.171931275789685e-301,5.169932075489804e-301,5.167932875189924e-301,5.165933674890044e-301,5.163934474590164e-301,5.161935274290284e-301,5.159936073990404e-301,5.157936873690524e-301,5.155937673390644e-301,5.153938473090764e-301,5.151939272790884e-301,5.149940072491004e-301,5.147940872191124e-301,5.145941671891243e-301,5.143942471591363e-301,5.141943271291483e-301,5.139944070991603e-301,5.137944870691723e-301,5.135945670391843e-301,5.133946470091963e-301,5.1319472697920834e-301,5.1299480694922035e-301,5.1279488691923235e-301,5.1259496688924435e-301,5.123950468592563e-301,5.121951268292683e-301,5.119952067992803e-301,5.117952867692923e-301,5.115953667393043e-301,5.113954467093163e-301,5.111955266793283e-301,5.109956066493403e-301,5.107956866193523e-301,5.105957665893643e-301,5.103958465593763e-301,5.101959265293883e-301,5.099960064994002e-301,5.097960864694122e-301,5.095961664394242e-301,5.093962464094362e-301,5.091963263794482e-301,5.089964063494602e-301,5.087964863194722e-301,5.085965662894842e-301,5.083966462594962e-301,5.081967262295082e-301,5.0799680619952024e-301,5.077968861695322e-301,5.075969661395442e-301,5.073970461095562e-301,5.071971260795682e-301,5.069972060495802e-301,5.067972860195922e-301,5.065973659896042e-301,5.063974459596162e-301,5.061975259296282e-301,5.059976058996402e-301,5.057976858696522e-301,5.055977658396642e-301,5.053978458096761e-301,5.051979257796881e-301,5.049980057497001e-301,5.047980857197121e-301,5.045981656897241e-301,5.043982456597361e-301,5.041983256297481e-301,5.039984055997601e-301,5.037984855697721e-301,5.035985655397841e-301,5.033986455097961e-301,5.0319872547980805e-301,5.0299880544982005e-301,5.0279888541983206e-301,5.025989653898441e-301,5.023990453598561e-301,5.021991253298681e-301,5.019992052998801e-301,5.017992852698921e-301,5.015993652399041e-301,5.013994452099161e-301,5.011995251799281e-301,5.0099960514994e-301,5.00799685119952e-301,5.00599765089964e-301,5.00399845059976e-301,5.00199925029988e-301,5.00000005e-301,4.99800084970012e-301,4.99600164940024e-301,4.99400244910036e-301,4.99200324880048e-301,4.9900040485006e-301,4.98800484820072e-301,4.9860056479008394e-301,4.9840064476009595e-301,4.9820072473010795e-301,4.9800080470011995e-301,4.9780088467013195e-301,4.9760096464014395e-301,4.9740104461015596e-301,4.97201124580168e-301,4.9700120455018e-301,4.96801284520192e-301,4.96601364490204e-301,4.964014444602159e-301,4.962015244302279e-301,4.960016044002399e-301,4.958016843702519e-301,4.956017643402639e-301,4.954018443102759e-301,4.952019242802879e-301,4.950020042502999e-301,4.948020842203119e-301,4.946021641903239e-301,4.944022441603359e-301,4.942023241303479e-301,4.940024041003598e-301,4.938024840703718e-301,4.936025640403838e-301,4.934026440103958e-301,4.9320272398040784e-301,4.9300280395041985e-301,4.9280288392043185e-301,4.9260296389044385e-301,4.9240304386045585e-301,4.9220312383046786e-301,4.9200320380047986e-301,4.918032837704918e-301,4.916033637405038e-301,4.914034437105158e-301,4.912035236805278e-301,4.910036036505398e-301,4.908036836205518e-301,4.906037635905638e-301,4.904038435605758e-301,4.902039235305878e-301,4.900040035005998e-301,4.898040834706118e-301,4.896041634406237e-301,4.894042434106357e-301,4.892043233806477e-301,4.890044033506597e-301,4.888044833206717e-301,4.886045632906837e-301,4.884046432606957e-301,4.882047232307077e-301,4.880048032007197e-301,4.8780488317073174e-301,4.8760496314074375e-301,4.8740504311075575e-301,4.872051230807677e-301,4.870052030507797e-301,4.868052830207917e-301,4.866053629908037e-301,4.864054429608157e-301,4.862055229308277e-301,4.860056029008397e-301,4.858056828708517e-301,4.856057628408637e-301,4.854058428108757e-301,4.852059227808877e-301,4.850060027508996e-301,4.848060827209116e-301,4.846061626909236e-301,4.844062426609356e-301,4.842063226309476e-301,4.840064026009596e-301,4.838064825709716e-301,4.836065625409836e-301,4.834066425109956e-301,4.832067224810076e-301,4.830068024510196e-301,4.828068824210316e-301,4.826069623910436e-301,4.824070423610556e-301,4.822071223310676e-301,4.820072023010796e-301,4.818072822710916e-301,4.816073622411036e-301,4.814074422111156e-301,4.812075221811276e-301,4.810076021511396e-301,4.808076821211516e-301,4.806077620911636e-301,4.804078420611755e-301,4.802079220311875e-301,4.800080020011995e-301,4.798080819712115e-301,4.796081619412235e-301,4.794082419112355e-301,4.792083218812475e-301,4.790084018512595e-301,4.788084818212715e-301,4.786085617912835e-301,4.784086417612955e-301,4.782087217313075e-301,4.7800880170131945e-301,4.7780888167133145e-301,4.7760896164134345e-301,4.7740904161135546e-301,4.772091215813675e-301,4.770092015513795e-301,4.768092815213915e-301,4.766093614914035e-301,4.764094414614155e-301,4.762095214314275e-301,4.760096014014395e-301,4.758096813714514e-301,4.756097613414634e-301,4.754098413114754e-301,4.752099212814874e-301,4.750100012514994e-301,4.748100812215114e-301,4.746101611915234e-301,4.744102411615354e-301,4.742103211315474e-301,4.740104011015594e-301,4.738104810715714e-301,4.736105610415833e-301,4.734106410115953e-301,4.7321072098160734e-301,4.7301080095161934e-301,4.7281088092163135e-301,4.7261096089164335e-301,4.7241104086165535e-301,4.7221112083166735e-301,4.7201120080167936e-301,4.718112807716914e-301,4.716113607417034e-301,4.714114407117154e-301,4.712115206817273e-301,4.710116006517393e-301,4.708116806217513e-301,4.706117605917633e-301,4.704118405617753e-301,4.702119205317873e-301,4.700120005017993e-301,4.698120804718113e-301,4.696121604418233e-301,4.694122404118353e-301,4.692123203818473e-301,4.690124003518592e-301,4.688124803218712e-301,4.686125602918832e-301,4.684126402618952e-301,4.682127202319072e-301,4.680128002019192e-301,4.6781288017193124e-301,4.6761296014194325e-301,4.6741304011195525e-301,4.6721312008196725e-301,4.6701320005197925e-301,4.6681328002199126e-301,4.666133599920032e-301,4.664134399620152e-301,4.662135199320272e-301,4.660135999020392e-301,4.658136798720512e-301,4.656137598420632e-301,4.654138398120752e-301,4.652139197820872e-301,4.650139997520992e-301,4.648140797221112e-301,4.646141596921232e-301,4.644142396621351e-301,4.642143196321471e-301,4.640143996021591e-301,4.638144795721711e-301,4.636145595421831e-301,4.634146395121951e-301,4.632147194822071e-301,4.630147994522191e-301,4.628148794222311e-301,4.626149593922431e-301,4.6241503936225514e-301,4.6221511933226715e-301,4.620151993022791e-301,4.618152792722911e-301,4.616153592423031e-301,4.614154392123151e-301,4.612155191823271e-301,4.610155991523391e-301,4.608156791223511e-301,4.606157590923631e-301,4.604158390623751e-301,4.602159190323871e-301,4.600159990023991e-301,4.59816078972411e-301,4.59616158942423e-301,4.59416238912435e-301,4.59216318882447e-301,4.59016398852459e-301,4.58816478822471e-301,4.58616558792483e-301,4.58416638762495e-301,4.58216718732507e-301,4.58016798702519e-301,4.57816878672531e-301,4.5761695864254295e-301,4.5741703861255496e-301,4.5721711858256696e-301,4.57017198552579e-301,4.56817278522591e-301,4.56617358492603e-301,4.56417438462615e-301,4.56217518432627e-301,4.56017598402639e-301,4.55817678372651e-301,4.55617758342663e-301,4.55417838312675e-301,4.552179182826869e-301,4.550179982526989e-301,4.548180782227109e-301,4.546181581927229e-301,4.544182381627349e-301,4.542183181327469e-301,4.540183981027589e-301,4.538184780727709e-301,4.536185580427829e-301,4.534186380127949e-301,4.532187179828069e-301,4.5301879795281884e-301,4.5281887792283085e-301,4.5261895789284285e-301,4.5241903786285485e-301,4.5221911783286685e-301,4.5201919780287886e-301,4.518192777728909e-301,4.516193577429029e-301,4.514194377129149e-301,4.512195176829269e-301,4.510195976529389e-301,4.508196776229509e-301,4.506197575929628e-301,4.504198375629748e-301,4.502199175329868e-301,4.500199975029988e-301,4.498200774730108e-301,4.496201574430228e-301,4.494202374130348e-301,4.492203173830468e-301,4.490203973530588e-301,4.488204773230708e-301,4.486205572930828e-301,4.484206372630947e-301,4.482207172331067e-301,4.480207972031187e-301,4.4782087717313074e-301,4.4762095714314274e-301,4.4742103711315475e-301,4.4722111708316675e-301,4.4702119705317875e-301,4.4682127702319075e-301,4.4662135699320276e-301,4.464214369632148e-301,4.462215169332268e-301,4.460215969032387e-301,4.458216768732507e-301,4.456217568432627e-301,4.454218368132747e-301,4.452219167832867e-301,4.450219967532987e-301,4.448220767233107e-301,4.446221566933227e-301,4.444222366633347e-301,4.442223166333467e-301,4.440223966033587e-301,4.438224765733706e-301,4.436225565433826e-301,4.434226365133946e-301,4.432227164834066e-301,4.430227964534186e-301,4.428228764234306e-301,4.426229563934426e-301,4.4242303636345464e-301,4.4222311633346665e-301,4.4202319630347865e-301,4.4182327627349065e-301,4.416233562435026e-301,4.414234362135146e-301,4.412235161835266e-301,4.410235961535386e-301,4.408236761235506e-301,4.406237560935626e-301,4.404238360635746e-301,4.402239160335866e-301,4.400239960035986e-301,4.398240759736106e-301,4.396241559436226e-301,4.394242359136346e-301,4.392243158836465e-301,4.390243958536585e-301,4.388244758236705e-301,4.386245557936825e-301,4.384246357636945e-301,4.382247157337065e-301,4.380247957037185e-301,4.378248756737305e-301,4.376249556437425e-301,4.374250356137545e-301,4.372251155837665e-301,4.370251955537785e-301,4.368252755237905e-301,4.366253554938025e-301,4.364254354638145e-301,4.362255154338265e-301,4.360255954038385e-301,4.358256753738505e-301,4.356257553438625e-301,4.354258353138745e-301,4.352259152838865e-301,4.350259952538985e-301,4.348260752239105e-301,4.346261551939224e-301,4.344262351639344e-301,4.342263151339464e-301,4.340263951039584e-301,4.338264750739704e-301,4.336265550439824e-301,4.334266350139944e-301,4.332267149840064e-301,4.330267949540184e-301,4.328268749240304e-301,4.326269548940424e-301,4.3242703486405435e-301,4.3222711483406635e-301,4.3202719480407836e-301,4.3182727477409036e-301,4.316273547441024e-301,4.314274347141144e-301,4.312275146841264e-301,4.310275946541384e-301,4.308276746241504e-301,4.306277545941624e-301,4.304278345641744e-301,4.302279145341863e-301,4.300279945041983e-301,4.298280744742103e-301,4.296281544442223e-301,4.294282344142343e-301,4.292283143842463e-301,4.290283943542583e-301,4.288284743242703e-301,4.286285542942823e-301,4.284286342642943e-301,4.282287142343063e-301,4.280287942043183e-301,4.2782887417433024e-301,4.2762895414434224e-301,4.2742903411435425e-301,4.2722911408436625e-301,4.2702919405437825e-301,4.2682927402439025e-301,4.2662935399440226e-301,4.264294339644143e-301,4.262295139344263e-301,4.260295939044383e-301,4.258296738744503e-301,4.256297538444622e-301,4.254298338144742e-301,4.252299137844862e-301,4.250299937544982e-301,4.248300737245102e-301,4.246301536945222e-301,4.244302336645342e-301,4.242303136345462e-301,4.240303936045582e-301,4.238304735745702e-301,4.236305535445822e-301,4.234306335145942e-301,4.232307134846061e-301,4.230307934546181e-301,4.228308734246301e-301,4.226309533946421e-301,4.2243103336465414e-301,4.2223111333466614e-301,4.2203119330467815e-301,4.2183127327469015e-301,4.2163135324470215e-301,4.2143143321471415e-301,4.2123151318472616e-301,4.210315931547381e-301,4.208316731247501e-301,4.206317530947621e-301,4.204318330647741e-301,4.202319130347861e-301,4.200319930047981e-301,4.198320729748101e-301,4.196321529448221e-301,4.194322329148341e-301,4.192323128848461e-301,4.190323928548581e-301,4.188324728248701e-301,4.18632552794882e-301,4.18432632764894e-301,4.18232712734906e-301,4.18032792704918e-301,4.1783287267493e-301,4.17632952644942e-301,4.17433032614954e-301,4.17233112584966e-301,4.1703319255497804e-301,4.1683327252499004e-301,4.1663335249500205e-301,4.16433432465014e-301,4.16233512435026e-301,4.16033592405038e-301,4.1583367237505e-301,4.15633752345062e-301,4.15433832315074e-301,4.15233912285086e-301,4.15033992255098e-301,4.1483407222511e-301,4.14634152195122e-301,4.14434232165134e-301,4.142343121351459e-301,4.140343921051579e-301,4.138344720751699e-301,4.136345520451819e-301,4.134346320151939e-301,4.132347119852059e-301,4.130347919552179e-301,4.128348719252299e-301,4.126349518952419e-301,4.124350318652539e-301,4.122351118352659e-301,4.120351918052779e-301,4.1183527177528986e-301,4.116353517453019e-301,4.114354317153139e-301,4.112355116853259e-301,4.110355916553379e-301,4.108356716253499e-301,4.106357515953619e-301,4.104358315653739e-301,4.102359115353859e-301,4.100359915053979e-301,4.098360714754099e-301,4.096361514454218e-301,4.094362314154338e-301,4.092363113854458e-301,4.090363913554578e-301,4.088364713254698e-301,4.086365512954818e-301,4.084366312654938e-301,4.082367112355058e-301,4.080367912055178e-301,4.078368711755298e-301,4.076369511455418e-301,4.074370311155538e-301,4.0723711108556575e-301,4.0703719105557775e-301,4.0683727102558975e-301,4.0663735099560176e-301,4.0643743096561376e-301,4.062375109356258e-301,4.060375909056378e-301,4.058376708756498e-301,4.056377508456618e-301,4.054378308156738e-301,4.052379107856858e-301,4.050379907556977e-301,4.048380707257097e-301,4.046381506957217e-301,4.044382306657337e-301,4.042383106357457e-301,4.040383906057577e-301,4.038384705757697e-301,4.036385505457817e-301,4.034386305157937e-301,4.032387104858057e-301,4.030387904558177e-301,4.028388704258297e-301,4.026389503958416e-301,4.024390303658536e-301,4.0223911033586564e-301,4.0203919030587765e-301,4.0183927027588965e-301,4.0163935024590165e-301,4.0143943021591365e-301,4.0123951018592566e-301,4.0103959015593766e-301,4.008396701259497e-301,4.006397500959617e-301,4.004398300659736e-301,4.002399100359856e-301,4.000399900059976e-301,3.998400699760096e-301,3.996401499460216e-301,3.994402299160336e-301,3.992403098860456e-301,3.990403898560576e-301,3.988404698260696e-301,3.986405497960816e-301,3.984406297660936e-301,3.982407097361055e-301,3.980407897061175e-301,3.978408696761295e-301,3.976409496461415e-301,3.974410296161535e-301,3.972411095861655e-301,3.9704118955617754e-301,3.9684126952618954e-301,3.9664134949620155e-301,3.9644142946621355e-301,3.9624150943622555e-301,3.9604158940623755e-301,3.958416693762495e-301,3.956417493462615e-301,3.954418293162735e-301,3.952419092862855e-301,3.950419892562975e-301,3.948420692263095e-301,3.946421491963215e-301,3.944422291663335e-301,3.942423091363455e-301,3.940423891063575e-301,3.938424690763695e-301,3.936425490463814e-301,3.934426290163934e-301,3.932427089864054e-301,3.930427889564174e-301,3.928428689264294e-301,3.926429488964414e-301,3.924430288664534e-301,3.922431088364654e-301,3.920431888064774e-301,3.918432687764894e-301,3.9164334874650144e-301,3.9144342871651344e-301,3.912435086865254e-301,3.910435886565374e-301,3.908436686265494e-301,3.906437485965614e-301,3.904438285665734e-301,3.902439085365854e-301,3.900439885065974e-301,3.898440684766094e-301,3.896441484466214e-301,3.894442284166334e-301,3.892443083866454e-301,3.890443883566573e-301,3.888444683266693e-301,3.886445482966813e-301,3.884446282666933e-301,3.882447082367053e-301,3.880447882067173e-301,3.878448681767293e-301,3.876449481467413e-301,3.874450281167533e-301,3.872451080867653e-301,3.870451880567773e-301,3.868452680267893e-301,3.8664534799680125e-301,3.8644542796681326e-301,3.862455079368253e-301,3.860455879068373e-301,3.858456678768493e-301,3.856457478468613e-301,3.854458278168733e-301,3.852459077868853e-301,3.850459877568973e-301,3.848460677269093e-301,3.846461476969213e-301,3.844462276669332e-301,3.842463076369452e-301,3.840463876069572e-301,3.838464675769692e-301,3.836465475469812e-301,3.834466275169932e-301,3.832467074870052e-301,3.830467874570172e-301,3.828468674270292e-301,3.826469473970412e-301,3.824470273670532e-301,3.8224710733706514e-301,3.8204718730707715e-301,3.8184726727708915e-301,3.8164734724710115e-301,3.8144742721711315e-301,3.8124750718712516e-301,3.8104758715713716e-301,3.808476671271492e-301,3.806477470971612e-301,3.804478270671732e-301,3.802479070371852e-301,3.800479870071972e-301,3.798480669772091e-301,3.796481469472211e-301,3.794482269172331e-301,3.792483068872451e-301,3.790483868572571e-301,3.788484668272691e-301,3.786485467972811e-301,3.784486267672931e-301,3.782487067373051e-301,3.780487867073171e-301,3.778488666773291e-301,3.77648946647341e-301,3.77449026617353e-301,3.77249106587365e-301,3.77049186557377e-301,3.7684926652738904e-301,3.7664934649740105e-301,3.7644942646741305e-301,3.7624950643742505e-301,3.7604958640743705e-301,3.7584966637744906e-301,3.7564974634746106e-301,3.754498263174731e-301,3.75249906287485e-301,3.75049986257497e-301,3.74850066227509e-301,3.74650146197521e-301,3.74450226167533e-301,3.74250306137545e-301,3.74050386107557e-301,3.73850466077569e-301,3.73650546047581e-301,3.73450626017593e-301,3.7325070598760496e-301,3.7305078595761697e-301,3.7285086592762897e-301,3.7265094589764097e-301,3.7245102586765293e-301,3.7225110583766493e-301,3.7205118580767694e-301,3.7185126577768894e-301,3.7165134574770094e-301,3.7145142571771294e-301,3.712515056877249e-301,3.710515856577369e-301,3.708516656277489e-301,3.706517455977609e-301,3.704518255677729e-301,3.7025190553778488e-301,3.7005198550779688e-301,3.698520654778089e-301,3.696521454478209e-301,3.694522254178329e-301,3.692523053878449e-301,3.6905238535785685e-301,3.6885246532786885e-301,3.6865254529788085e-301,3.6845262526789286e-301,3.6825270523790486e-301,3.6805278520791686e-301,3.6785286517792882e-301,3.6765294514794082e-301,3.6745302511795283e-301,3.6725310508796483e-301,3.6705318505797683e-301,3.668532650279888e-301,3.666533449980008e-301,3.664534249680128e-301,3.662535049380248e-301,3.660535849080368e-301,3.658536648780488e-301,3.6565374484806077e-301,3.6545382481807277e-301,3.6525390478808477e-301,3.6505398475809677e-301,3.6485406472810878e-301,3.6465414469812078e-301,3.6445422466813274e-301,3.6425430463814474e-301,3.6405438460815674e-301,3.6385446457816875e-301,3.6365454454818075e-301,3.6345462451819275e-301,3.632547044882047e-301,3.630547844582167e-301,3.628548644282287e-301,3.626549443982407e-301,3.6245502436825272e-301,3.622551043382647e-301,3.620551843082767e-301,3.618552642782887e-301,3.616553442483007e-301,3.614554242183127e-301,3.612555041883247e-301,3.6105558415833666e-301,3.6085566412834866e-301,3.6065574409836066e-301,3.6045582406837266e-301,3.6025590403838467e-301,3.6005598400839667e-301,3.5985606397840863e-301,3.5965614394842063e-301,3.5945622391843264e-301,3.5925630388844464e-301,3.5905638385845664e-301,3.588564638284686e-301,3.586565437984806e-301,3.584566237684926e-301,3.582567037385046e-301,3.580567837085166e-301,3.578568636785286e-301,3.5765694364854057e-301,3.5745702361855258e-301,3.572571035885646e-301,3.570571835585766e-301,3.568572635285886e-301,3.566573434986006e-301,3.5645742346861255e-301,3.5625750343862455e-301,3.5605758340863655e-301,3.5585766337864856e-301,3.5565774334866056e-301,3.5545782331867256e-301,3.5525790328868452e-301,3.5505798325869652e-301,3.5485806322870853e-301,3.5465814319872053e-301,3.5445822316873253e-301,3.542583031387445e-301,3.540583831087565e-301,3.538584630787685e-301,3.536585430487805e-301,3.534586230187925e-301,3.532587029888045e-301,3.5305878295881647e-301,3.5285886292882847e-301,3.5265894289884047e-301,3.5245902286885247e-301,3.5225910283886448e-301,3.5205918280887648e-301,3.5185926277888844e-301,3.5165934274890044e-301,3.5145942271891244e-301,3.5125950268892445e-301,3.5105958265893645e-301,3.508596626289484e-301,3.506597425989604e-301,3.504598225689724e-301,3.502599025389844e-301,3.500599825089964e-301,3.4986006247900842e-301,3.496601424490204e-301,3.494602224190324e-301,3.492603023890444e-301,3.490603823590564e-301,3.488604623290684e-301,3.486605422990804e-301,3.4846062226909236e-301,3.4826070223910436e-301,3.4806078220911636e-301,3.4786086217912836e-301,3.4766094214914037e-301,3.4746102211915237e-301,3.4726110208916433e-301,3.4706118205917633e-301,3.4686126202918833e-301,3.4666134199920034e-301,3.4646142196921234e-301,3.462615019392243e-301,3.460615819092363e-301,3.458616618792483e-301,3.456617418492603e-301,3.454618218192723e-301,3.452619017892843e-301,3.4506198175929627e-301,3.4486206172930828e-301,3.4466214169932028e-301,3.444622216693323e-301,3.442623016393443e-301,3.440623816093563e-301,3.4386246157936825e-301,3.4366254154938025e-301,3.4346262151939225e-301,3.4326270148940425e-301,3.4306278145941626e-301,3.428628614294282e-301,3.426629413994402e-301,3.4246302136945222e-301,3.4226310133946422e-301,3.4206318130947623e-301,3.4186326127948823e-301,3.416633412495002e-301,3.414634212195122e-301,3.412635011895242e-301,3.410635811595362e-301,3.408636611295482e-301,3.406637410995602e-301,3.4046382106957216e-301,3.4026390103958417e-301,3.4006398100959617e-301,3.3986406097960817e-301,3.3966414094962017e-301,3.3946422091963218e-301,3.3926430088964414e-301,3.3906438085965614e-301,3.3886446082966814e-301,3.3866454079968014e-301,3.3846462076969215e-301,3.382647007397041e-301,3.380647807097161e-301,3.378648606797281e-301,3.376649406497401e-301,3.374650206197521e-301,3.372651005897641e-301,3.370651805597761e-301,3.368652605297881e-301,3.366653404998001e-301,3.364654204698121e-301,3.362655004398241e-301,3.360655804098361e-301,3.3586566037984805e-301,3.3566574034986006e-301,3.3546582031987206e-301,3.3526590028988406e-301,3.3506598025989606e-301,3.3486606022990803e-301,3.3466614019992003e-301,3.3446622016993203e-301,3.3426630013994403e-301,3.3406638010995604e-301,3.3386646007996804e-301,3.3366654004998e-301,3.33466620019992e-301,3.33266699990004e-301,3.33066779960016e-301,3.32866859930028e-301,3.3266693990004e-301,3.3246701987005197e-301,3.3226709984006397e-301,3.3206717981007598e-301,3.31867259780088e-301,3.316673397501e-301,3.31467419720112e-301,3.3126749969012395e-301,3.3106757966013595e-301,3.3086765963014795e-301,3.3066773960015995e-301,3.3046781957017196e-301,3.302678995401839e-301,3.300679795101959e-301,3.2986805948020792e-301,3.2966813945021992e-301,3.2946821942023193e-301,3.2926829939024393e-301,3.290683793602559e-301,3.288684593302679e-301,3.286685393002799e-301,3.284686192702919e-301,3.282686992403039e-301,3.280687792103159e-301,3.2786885918032786e-301,3.2766893915033987e-301,3.2746901912035187e-301,3.2726909909036387e-301,3.2706917906037587e-301,3.2686925903038783e-301,3.2666933900039984e-301,3.2646941897041184e-301,3.2626949894042384e-301,3.2606957891043584e-301,3.2586965888044785e-301,3.256697388504598e-301,3.254698188204718e-301,3.252698987904838e-301,3.250699787604958e-301,3.248700587305078e-301,3.246701387005198e-301,3.244702186705318e-301,3.242702986405438e-301,3.240703786105558e-301,3.238704585805678e-301,3.236705385505798e-301,3.2347061852059175e-301,3.2327069849060375e-301,3.2307077846061576e-301,3.2287085843062776e-301,3.2267093840063976e-301,3.2247101837065176e-301,3.2227109834066372e-301,3.2207117831067573e-301,3.2187125828068773e-301,3.2167133825069973e-301,3.2147141822071173e-301,3.2127149819072374e-301,3.210715781607357e-301,3.208716581307477e-301,3.206717381007597e-301,3.204718180707717e-301,3.202718980407837e-301,3.200719780107957e-301,3.1987205798080767e-301,3.1967213795081967e-301,3.1947221792083168e-301,3.1927229789084368e-301,3.190723778608557e-301,3.1887245783086764e-301,3.1867253780087964e-301,3.1847261777089165e-301,3.1827269774090365e-301,3.1807277771091565e-301,3.1787285768092765e-301,3.176729376509396e-301,3.174730176209516e-301,3.172730975909636e-301,3.1707317756097562e-301,3.1687325753098762e-301,3.1667333750099963e-301,3.164734174710116e-301,3.162734974410236e-301,3.160735774110356e-301,3.158736573810476e-301,3.156737373510596e-301,3.1547381732107156e-301,3.1527389729108356e-301,3.1507397726109556e-301,3.1487405723110757e-301,3.1467413720111957e-301,3.1447421717113157e-301,3.1427429714114353e-301,3.1407437711115553e-301,3.1387445708116754e-301,3.1367453705117954e-301,3.1347461702119154e-301,3.1327469699120354e-301,3.130747769612155e-301,3.128748569312275e-301,3.126749369012395e-301,3.124750168712515e-301,3.122750968412635e-301,3.120751768112755e-301,3.1187525678128748e-301,3.116753367512995e-301,3.114754167213115e-301,3.112754966913235e-301,3.110755766613355e-301,3.1087565663134745e-301,3.1067573660135945e-301,3.1047581657137145e-301,3.1027589654138346e-301,3.1007597651139546e-301,3.0987605648140746e-301,3.0967613645141942e-301,3.0947621642143143e-301,3.0927629639144343e-301,3.0907637636145543e-301,3.0887645633146743e-301,3.0867653630147944e-301,3.084766162714914e-301,3.082766962415034e-301,3.080767762115154e-301,3.078768561815274e-301,3.076769361515394e-301,3.0747701612155137e-301,3.0727709609156337e-301,3.0707717606157537e-301,3.0687725603158737e-301,3.0667733600159938e-301,3.0647741597161138e-301,3.0627749594162334e-301,3.0607757591163534e-301,3.0587765588164735e-301,3.0567773585165935e-301,3.0547781582167135e-301,3.0527789579168335e-301,3.050779757616953e-301,3.048780557317073e-301,3.046781357017193e-301,3.0447821567173132e-301,3.0427829564174332e-301,3.0407837561175533e-301,3.038784555817673e-301,3.036785355517793e-301,3.034786155217913e-301,3.032786954918033e-301,3.030787754618153e-301,3.0287885543182726e-301,3.0267893540183926e-301,3.0247901537185126e-301,3.0227909534186326e-301,3.0207917531187527e-301,3.0187925528188727e-301,3.0167933525189923e-301,3.0147941522191123e-301,3.0127949519192324e-301,3.0107957516193524e-301,3.0087965513194724e-301,3.0067973510195924e-301,3.004798150719712e-301,3.002798950419832e-301,3.000799750119952e-301,2.998800549820072e-301,2.996801349520192e-301,2.9948021492203117e-301,2.9928029489204318e-301,2.990803748620552e-301,2.988804548320672e-301,2.986805348020792e-301,2.984806147720912e-301,2.9828069474210315e-301,2.9808077471211515e-301,2.9788085468212715e-301,2.9768093465213916e-301,2.9748101462215116e-301,2.9728109459216316e-301,2.9708117456217512e-301,2.9688125453218712e-301,2.9668133450219913e-301,2.9648141447221113e-301,2.9628149444222313e-301,2.9608157441223513e-301,2.958816543822471e-301,2.956817343522591e-301,2.954818143222711e-301,2.952818942922831e-301,2.950819742622951e-301,2.9488205423230707e-301,2.9468213420231907e-301,2.9448221417233107e-301,2.9428229414234307e-301,2.9408237411235508e-301,2.9388245408236708e-301,2.9368253405237904e-301,2.9348261402239104e-301,2.9328269399240304e-301,2.9308277396241505e-301,2.9288285393242705e-301,2.9268293390243905e-301,2.92483013872451e-301,2.92283093842463e-301,2.92083173812475e-301,2.91883253782487e-301,2.9168333375249902e-301,2.91483413722511e-301,2.91283493692523e-301,2.91083573662535e-301,2.90883653632547e-301,2.90683733602559e-301,2.90483813572571e-301,2.9028389354258296e-301,2.9008397351259496e-301,2.8988405348260696e-301,2.8968413345261896e-301,2.8948421342263097e-301,2.8928429339264297e-301,2.8908437336265493e-301,2.8888445333266693e-301,2.8868453330267893e-301,2.8848461327269094e-301,2.8828469324270294e-301,2.8808477321271494e-301,2.878848531827269e-301,2.876849331527389e-301,2.874850131227509e-301,2.872850930927629e-301,2.870851730627749e-301,2.8688525303278687e-301,2.8668533300279888e-301,2.8648541297281088e-301,2.862854929428229e-301,2.860855729128349e-301,2.858856528828469e-301,2.8568573285285885e-301,2.8548581282287085e-301,2.8528589279288285e-301,2.8508597276289485e-301,2.8488605273290686e-301,2.8468613270291886e-301,2.844862126729308e-301,2.8428629264294282e-301,2.8408637261295483e-301,2.8388645258296683e-301,2.8368653255297883e-301,2.834866125229908e-301,2.832866924930028e-301,2.830867724630148e-301,2.828868524330268e-301,2.826869324030388e-301,2.824870123730508e-301,2.8228709234306276e-301,2.8208717231307477e-301,2.8188725228308677e-301,2.8168733225309877e-301,2.8148741222311077e-301,2.8128749219312278e-301,2.8108757216313474e-301,2.8088765213314674e-301,2.8068773210315874e-301,2.8048781207317074e-301,2.8028789204318275e-301,2.8008797201319475e-301,2.798880519832067e-301,2.796881319532187e-301,2.794882119232307e-301,2.792882918932427e-301,2.790883718632547e-301,2.788884518332667e-301,2.786885318032787e-301,2.784886117732907e-301,2.782886917433027e-301,2.780887717133147e-301,2.778888516833267e-301,2.7768893165333865e-301,2.7748901162335066e-301,2.7728909159336266e-301,2.7708917156337466e-301,2.7688925153338666e-301,2.7668933150339867e-301,2.7648941147341063e-301,2.7628949144342263e-301,2.7608957141343463e-301,2.7588965138344664e-301,2.7568973135345864e-301,2.754898113234706e-301,2.752898912934826e-301,2.750899712634946e-301,2.748900512335066e-301,2.746901312035186e-301,2.744902111735306e-301,2.7429029114354257e-301,2.7409037111355457e-301,2.7389045108356658e-301,2.736905310535786e-301,2.734906110235906e-301,2.732906909936026e-301,2.7309077096361455e-301,2.7289085093362655e-301,2.7269093090363855e-301,2.7249101087365055e-301,2.7229109084366256e-301,2.720911708136745e-301,2.718912507836865e-301,2.7169133075369852e-301,2.7149141072371052e-301,2.7129149069372253e-301,2.7109157066373453e-301,2.708916506337465e-301,2.706917306037585e-301,2.704918105737705e-301,2.702918905437825e-301,2.700919705137945e-301,2.698920504838065e-301,2.6969213045381846e-301,2.6949221042383047e-301,2.6929229039384247e-301,2.6909237036385447e-301,2.6889245033386647e-301,2.6869253030387848e-301,2.6849261027389044e-301,2.6829269024390244e-301,2.6809277021391444e-301,2.6789285018392644e-301,2.6769293015393845e-301,2.674930101239504e-301,2.672930900939624e-301,2.670931700639744e-301,2.668932500339864e-301,2.666933300039984e-301,2.664934099740104e-301,2.662934899440224e-301,2.660935699140344e-301,2.658936498840464e-301,2.656937298540584e-301,2.654938098240704e-301,2.652938897940824e-301,2.6509396976409435e-301,2.6489404973410636e-301,2.6469412970411836e-301,2.6449420967413036e-301,2.6429428964414236e-301,2.6409436961415432e-301,2.6389444958416633e-301,2.6369452955417833e-301,2.6349460952419033e-301,2.6329468949420233e-301,2.6309476946421434e-301,2.628948494342263e-301,2.626949294042383e-301,2.624950093742503e-301,2.622950893442623e-301,2.620951693142743e-301,2.618952492842863e-301,2.6169532925429827e-301,2.6149540922431027e-301,2.6129548919432228e-301,2.6109556916433428e-301,2.608956491343463e-301,2.606957291043583e-301,2.6049580907437024e-301,2.6029588904438225e-301,2.6009596901439425e-301,2.5989604898440625e-301,2.5969612895441825e-301,2.594962089244302e-301,2.592962888944422e-301,2.590963688644542e-301,2.5889644883446622e-301,2.5869652880447822e-301,2.5849660877449023e-301,2.582966887445022e-301,2.580967687145142e-301,2.578968486845262e-301,2.576969286545382e-301,2.574970086245502e-301,2.572970885945622e-301,2.5709716856457416e-301,2.5689724853458616e-301,2.5669732850459817e-301,2.5649740847461017e-301,2.5629748844462217e-301,2.5609756841463413e-301,2.5589764838464613e-301,2.5569772835465814e-301,2.5549780832467014e-301,2.5529788829468214e-301,2.5509796826469414e-301,2.548980482347061e-301,2.546981282047181e-301,2.544982081747301e-301,2.542982881447421e-301,2.540983681147541e-301,2.538984480847661e-301,2.5369852805477808e-301,2.534986080247901e-301,2.532986879948021e-301,2.530987679648141e-301,2.528988479348261e-301,2.526989279048381e-301,2.5249900787485005e-301,2.5229908784486205e-301,2.5209916781487406e-301,2.5189924778488606e-301,2.5169932775489806e-301,2.5149940772491002e-301,2.5129948769492203e-301,2.5109956766493403e-301,2.5089964763494603e-301,2.5069972760495803e-301,2.5049980757497004e-301,2.50299887544982e-301,2.50099967514994e-301,2.49900047485006e-301,2.49700127455018e-301,2.4950020742503e-301,2.49300287395042e-301,2.4910036736505397e-301,2.4890044733506597e-301,2.4870052730507797e-301,2.4850060727508998e-301,2.48300687245102e-301,2.4810076721511394e-301,2.4790084718512594e-301,2.4770092715513795e-301,2.4750100712514995e-301,2.4730108709516195e-301,2.4710116706517395e-301,2.469012470351859e-301,2.467013270051979e-301,2.465014069752099e-301,2.4630148694522192e-301,2.4610156691523392e-301,2.4590164688524593e-301,2.457017268552579e-301,2.455018068252699e-301,2.453018867952819e-301,2.451019667652939e-301,2.449020467353059e-301,2.447021267053179e-301,2.4450220667532986e-301,2.4430228664534186e-301,2.4410236661535387e-301,2.4390244658536587e-301,2.4370252655537787e-301,2.4350260652538983e-301,2.4330268649540183e-301,2.4310276646541384e-301,2.4290284643542584e-301,2.4270292640543784e-301,2.4250300637544984e-301,2.423030863454618e-301,2.421031663154738e-301,2.419032462854858e-301,2.417033262554978e-301,2.415034062255098e-301,2.413034861955218e-301,2.4110356616553378e-301,2.409036461355458e-301,2.407037261055578e-301,2.405038060755698e-301,2.403038860455818e-301,2.4010396601559375e-301,2.3990404598560575e-301,2.3970412595561775e-301,2.3950420592562976e-301,2.3930428589564176e-301,2.3910436586565376e-301,2.3890444583566572e-301,2.3870452580567772e-301,2.3850460577568973e-301,2.3830468574570173e-301,2.3810476571571373e-301,2.3790484568572573e-301,2.377049256557377e-301,2.375050056257497e-301,2.373050855957617e-301,2.371051655657737e-301,2.369052455357857e-301,2.367053255057977e-301,2.3650540547580967e-301,2.3630548544582167e-301,2.3610556541583367e-301,2.3590564538584568e-301,2.3570572535585768e-301,2.3550580532586964e-301,2.3530588529588164e-301,2.3510596526589364e-301,2.3490604523590565e-301,2.3470612520591765e-301,2.3450620517592965e-301,2.343062851459416e-301,2.341063651159536e-301,2.339064450859656e-301,2.337065250559776e-301,2.3350660502598962e-301,2.3330668499600162e-301,2.331067649660136e-301,2.329068449360256e-301,2.327069249060376e-301,2.325070048760496e-301,2.323070848460616e-301,2.3210716481607356e-301,2.3190724478608556e-301,2.3170732475609756e-301,2.3150740472610956e-301,2.3130748469612157e-301,2.3110756466613357e-301,2.3090764463614553e-301,2.3070772460615753e-301,2.3050780457616953e-301,2.3030788454618154e-301,2.3010796451619354e-301,2.2990804448620554e-301,2.297081244562175e-301,2.295082044262295e-301,2.293082843962415e-301,2.291083643662535e-301,2.289084443362655e-301,2.287085243062775e-301,2.2850860427628948e-301,2.2830868424630148e-301,2.281087642163135e-301,2.279088441863255e-301,2.277089241563375e-301,2.2750900412634945e-301,2.2730908409636145e-301,2.2710916406637345e-301,2.2690924403638545e-301,2.2670932400639746e-301,2.2650940397640946e-301,2.263094839464214e-301,2.2610956391643342e-301,2.2590964388644543e-301,2.2570972385645743e-301,2.2550980382646943e-301,2.2530988379648143e-301,2.251099637664934e-301,2.249100437365054e-301,2.247101237065174e-301,2.245102036765294e-301,2.243102836465414e-301,2.2411036361655336e-301,2.2391044358656537e-301,2.2371052355657737e-301,2.2351060352658937e-301,2.2331068349660137e-301,2.2311076346661338e-301,2.2291084343662534e-301,2.2271092340663734e-301,2.2251100337664934e-301,2.2231108334666135e-301,2.2211116331667335e-301,2.2191124328668535e-301,2.217113232566973e-301,2.215114032267093e-301,2.213114831967213e-301,2.211115631667333e-301,2.2091164313674532e-301,2.2071172310675732e-301,2.205118030767693e-301,2.203118830467813e-301,2.201119630167933e-301,2.199120429868053e-301,2.197121229568173e-301,2.1951220292682926e-301,2.1931228289684126e-301,2.1911236286685326e-301,2.1891244283686526e-301,2.1871252280687726e-301,2.1851260277688927e-301,2.1831268274690123e-301,2.1811276271691323e-301,2.1791284268692523e-301,2.1771292265693724e-301,2.1751300262694924e-301,2.1731308259696124e-301,2.171131625669732e-301,2.169132425369852e-301,2.167133225069972e-301,2.165134024770092e-301,2.163134824470212e-301,2.1611356241703317e-301,2.1591364238704517e-301,2.1571372235705718e-301,2.155138023270692e-301,2.153138822970812e-301,2.151139622670932e-301,2.1491404223710515e-301,2.1471412220711715e-301,2.1451420217712915e-301,2.1431428214714115e-301,2.1411436211715316e-301,2.1391444208716516e-301,2.137145220571771e-301,2.1351460202718912e-301,2.1331468199720112e-301,2.1311476196721313e-301,2.1291484193722513e-301,2.127149219072371e-301,2.125150018772491e-301,2.123150818472611e-301,2.121151618172731e-301,2.119152417872851e-301,2.117153217572971e-301,2.1151540172730906e-301,2.1131548169732107e-301,2.1111556166733307e-301,2.1091564163734507e-301,2.1071572160735707e-301,2.1051580157736908e-301,2.1031588154738104e-301,2.1011596151739304e-301,2.0991604148740504e-301,2.0971612145741704e-301,2.0951620142742905e-301,2.0931628139744105e-301,2.09116361367453e-301,2.08916441337465e-301,2.08716521307477e-301,2.08516601277489e-301,2.08316681247501e-301,2.08116761217513e-301,2.07916841187525e-301,2.07716921157537e-301,2.07517001127549e-301,2.07317081097561e-301,2.07117161067573e-301,2.0691724103758495e-301,2.0671732100759696e-301,2.0651740097760896e-301,2.0631748094762096e-301,2.0611756091763296e-301,2.0591764088764497e-301,2.0571772085765693e-301,2.0551780082766893e-301,2.0531788079768093e-301,2.0511796076769293e-301,2.0491804073770494e-301,2.047181207077169e-301,2.045182006777289e-301,2.043182806477409e-301,2.041183606177529e-301,2.039184405877649e-301,2.037185205577769e-301,2.0351860052778887e-301,2.0331868049780087e-301,2.0311876046781288e-301,2.0291884043782488e-301,2.027189204078369e-301,2.025190003778489e-301,2.0231908034786084e-301,2.0211916031787285e-301,2.0191924028788485e-301,2.0171932025789685e-301,2.0151940022790885e-301,2.0131948019792086e-301,2.011195601679328e-301,2.009196401379448e-301,2.0071972010795682e-301,2.0051980007796883e-301,2.0031988004798083e-301,2.001199600179928e-301,1.999200399880048e-301,1.997201199580168e-301,1.995201999280288e-301,1.993202798980408e-301,1.991203598680528e-301,1.9892043983806476e-301,1.9872051980807676e-301,1.9852059977808877e-301,1.9832067974810077e-301,1.9812075971811277e-301,1.9792083968812477e-301,1.9772091965813674e-301,1.9752099962814874e-301,1.9732107959816074e-301,1.9712115956817274e-301,1.9692123953818474e-301,1.967213195081967e-301,1.965213994782087e-301,1.963214794482207e-301,1.961215594182327e-301,1.959216393882447e-301,1.957217193582567e-301,1.9552179932826868e-301,1.953218792982807e-301,1.951219592682927e-301,1.949220392383047e-301,1.947221192083167e-301,1.945221991783287e-301,1.9432227914834065e-301,1.9412235911835265e-301,1.9392243908836466e-301,1.9372251905837666e-301,1.9352259902838866e-301,1.9332267899840066e-301,1.9312275896841263e-301,1.9292283893842463e-301,1.9272291890843663e-301,1.9252299887844863e-301,1.9232307884846064e-301,1.921231588184726e-301,1.919232387884846e-301,1.917233187584966e-301,1.915233987285086e-301,1.913234786985206e-301,1.911235586685326e-301,1.9092363863854457e-301,1.9072371860855657e-301,1.9052379857856857e-301,1.9032387854858058e-301,1.901239585185926e-301,1.899240384886046e-301,1.8972411845861654e-301,1.8952419842862855e-301,1.8932427839864055e-301,1.8912435836865255e-301,1.8892443833866455e-301,1.887245183086765e-301,1.885245982786885e-301,1.883246782487005e-301,1.8812475821871252e-301,1.8792483818872452e-301,1.8772491815873653e-301,1.875249981287485e-301,1.873250780987605e-301,1.871251580687725e-301,1.869252380387845e-301,1.867253180087965e-301,1.8652539797880848e-301,1.8632547794882048e-301,1.8612555791883246e-301,1.8592563788884447e-301,1.8572571785885647e-301,1.8552579782886845e-301,1.8532587779888045e-301,1.8512595776889245e-301,1.8492603773890444e-301,1.8472611770891644e-301,1.8452619767892844e-301,1.8432627764894042e-301,1.8412635761895243e-301,1.8392643758896443e-301,1.837265175589764e-301,1.8352659752898841e-301,1.8332667749900041e-301,1.831267574690124e-301,1.829268374390244e-301,1.8272691740903638e-301,1.8252699737904838e-301,1.8232707734906039e-301,1.8212715731907237e-301,1.8192723728908437e-301,1.8172731725909637e-301,1.8152739722910835e-301,1.8132747719912036e-301,1.8112755716913236e-301,1.8092763713914434e-301,1.8072771710915634e-301,1.8052779707916835e-301,1.8032787704918033e-301,1.8012795701919233e-301,1.7992803698920433e-301,1.7972811695921631e-301,1.7952819692922832e-301,1.7932827689924032e-301,1.791283568692523e-301,1.789284368392643e-301,1.7872851680927628e-301,1.7852859677928829e-301,1.7832867674930029e-301,1.7812875671931227e-301,1.7792883668932427e-301,1.7772891665933628e-301,1.7752899662934826e-301,1.7732907659936026e-301,1.7712915656937226e-301,1.7692923653938424e-301,1.7672931650939625e-301,1.7652939647940825e-301,1.7632947644942023e-301,1.7612955641943223e-301,1.7592963638944424e-301,1.7572971635945622e-301,1.7552979632946822e-301,1.7532987629948022e-301,1.751299562694922e-301,1.749300362395042e-301,1.7473011620951619e-301,1.745301961795282e-301,1.743302761495402e-301,1.7413035611955217e-301,1.7393043608956418e-301,1.7373051605957618e-301,1.7353059602958816e-301,1.7333067599960016e-301,1.7313075596961217e-301,1.7293083593962415e-301,1.7273091590963615e-301,1.7253099587964815e-301,1.7233107584966013e-301,1.7213115581967214e-301,1.7193123578968414e-301,1.7173131575969612e-301,1.7153139572970812e-301,1.7133147569972013e-301,1.711315556697321e-301,1.7093163563974411e-301,1.707317156097561e-301,1.705317955797681e-301,1.703318755497801e-301,1.7013195551979208e-301,1.6993203548980408e-301,1.6973211545981608e-301,1.6953219542982807e-301,1.6933227539984007e-301,1.6913235536985207e-301,1.6893243533986405e-301,1.6873251530987605e-301,1.6853259527988806e-301,1.6833267524990004e-301,1.6813275521991204e-301,1.6793283518992404e-301,1.6773291515993603e-301,1.6753299512994803e-301,1.6733307509996003e-301,1.6713315506997201e-301,1.6693323503998401e-301,1.66733315009996e-301,1.66533394980008e-301,1.6633347495002e-301,1.6613355492003198e-301,1.6593363489004399e-301,1.6573371486005599e-301,1.6553379483006797e-301,1.6533387480007997e-301,1.6513395477009197e-301,1.6493403474010396e-301,1.6473411471011596e-301,1.6453419468012796e-301,1.6433427465013994e-301,1.6413435462015195e-301,1.6393443459016395e-301,1.6373451456017593e-301,1.6353459453018793e-301,1.6333467450019993e-301,1.6313475447021192e-301,1.6293483444022392e-301,1.627349144102359e-301,1.625349943802479e-301,1.623350743502599e-301,1.6213515432027189e-301,1.6193523429028389e-301,1.617353142602959e-301,1.6153539423030787e-301,1.6133547420031988e-301,1.6113555417033188e-301,1.6093563414034386e-301,1.6073571411035586e-301,1.6053579408036787e-301,1.6033587405037985e-301,1.6013595402039185e-301,1.5993603399040385e-301,1.5973611396041583e-301,1.5953619393042784e-301,1.5933627390043982e-301,1.5913635387045182e-301,1.5893643384046382e-301,1.587365138104758e-301,1.585365937804878e-301,1.583366737504998e-301,1.581367537205118e-301,1.579368336905238e-301,1.577369136605358e-301,1.5753699363054778e-301,1.5733707360055978e-301,1.5713715357057178e-301,1.5693723354058376e-301,1.5673731351059577e-301,1.5653739348060777e-301,1.5633747345061975e-301,1.5613755342063175e-301,1.5593763339064376e-301,1.5573771336065574e-301,1.5553779333066774e-301,1.5533787330067972e-301,1.5513795327069172e-301,1.5493803324070373e-301,1.547381132107157e-301,1.5453819318072771e-301,1.5433827315073971e-301,1.541383531207517e-301,1.539384330907637e-301,1.537385130607757e-301,1.5353859303078768e-301,1.5333867300079968e-301,1.5313875297081169e-301,1.5293883294082367e-301,1.5273891291083567e-301,1.5253899288084767e-301,1.5233907285085965e-301,1.5213915282087166e-301,1.5193923279088366e-301,1.5173931276089564e-301,1.5153939273090764e-301,1.5133947270091963e-301,1.5113955267093163e-301,1.5093963264094363e-301,1.5073971261095561e-301,1.5053979258096761e-301,1.5033987255097962e-301,1.501399525209916e-301,1.499400324910036e-301,1.497401124610156e-301,1.4954019243102759e-301,1.4934027240103959e-301,1.491403523710516e-301,1.4894043234106357e-301,1.4874051231107557e-301,1.4854059228108758e-301,1.4834067225109956e-301,1.4814075222111156e-301,1.4794083219112356e-301,1.4774091216113555e-301,1.4754099213114755e-301,1.4734107210115953e-301,1.4714115207117153e-301,1.4694123204118353e-301,1.4674131201119552e-301,1.4654139198120752e-301,1.4634147195121952e-301,1.461415519212315e-301,1.459416318912435e-301,1.457417118612555e-301,1.455417918312675e-301,1.453418718012795e-301,1.451419517712915e-301,1.4494203174130348e-301,1.4474211171131548e-301,1.4454219168132748e-301,1.4434227165133946e-301,1.4414235162135147e-301,1.4394243159136347e-301,1.4374251156137545e-301,1.4354259153138745e-301,1.4334267150139943e-301,1.4314275147141144e-301,1.4294283144142344e-301,1.4274291141143542e-301,1.4254299138144742e-301,1.4234307135145943e-301,1.421431513214714e-301,1.419432312914834e-301,1.4174331126149541e-301,1.415433912315074e-301,1.413434712015194e-301,1.411435511715314e-301,1.4094363114154338e-301,1.4074371111155538e-301,1.4054379108156739e-301,1.4034387105157937e-301,1.4014395102159137e-301,1.3994403099160337e-301,1.3974411096161535e-301,1.3954419093162736e-301,1.3934427090163934e-301,1.3914435087165134e-301,1.3894443084166334e-301,1.3874451081167532e-301,1.3854459078168733e-301,1.3834467075169933e-301,1.3814475072171131e-301,1.3794483069172331e-301,1.3774491066173532e-301,1.375449906317473e-301,1.373450706017593e-301,1.371451505717713e-301,1.3694523054178328e-301,1.3674531051179529e-301,1.3654539048180729e-301,1.3634547045181927e-301,1.3614555042183127e-301,1.3594563039184328e-301,1.3574571036185526e-301,1.3554579033186726e-301,1.3534587030187924e-301,1.3514595027189124e-301,1.3494603024190325e-301,1.3474611021191523e-301,1.3454619018192723e-301,1.3434627015193923e-301,1.3414635012195122e-301,1.3394643009196322e-301,1.3374651006197522e-301,1.335465900319872e-301,1.333466700019992e-301,1.331467499720112e-301,1.3294682994202319e-301,1.327469099120352e-301,1.325469898820472e-301,1.3234706985205918e-301,1.3214714982207118e-301,1.3194722979208318e-301,1.3174730976209516e-301,1.3154738973210716e-301,1.3134746970211915e-301,1.3114754967213115e-301,1.3094762964214315e-301,1.3074770961215513e-301,1.3054778958216713e-301,1.3034786955217914e-301,1.3014794952219112e-301,1.2994802949220312e-301,1.2974810946221512e-301,1.295481894322271e-301,1.293482694022391e-301,1.2914834937225111e-301,1.289484293422631e-301,1.287485093122751e-301,1.285485892822871e-301,1.2834866925229908e-301,1.2814874922231108e-301,1.2794882919232308e-301,1.2774890916233507e-301,1.2754898913234707e-301,1.2734906910235905e-301,1.2714914907237105e-301,1.2694922904238305e-301,1.2674930901239504e-301,1.2654938898240704e-301,1.2634946895241904e-301,1.2614954892243102e-301,1.2594962889244303e-301,1.2574970886245503e-301,1.25549788832467e-301,1.2534986880247901e-301,1.2514994877249101e-301,1.24950028742503e-301,1.24750108712515e-301,1.24550188682527e-301,1.2435026865253898e-301,1.2415034862255099e-301,1.2395042859256299e-301,1.2375050856257497e-301,1.2355058853258697e-301,1.2335066850259895e-301,1.2315074847261096e-301,1.2295082844262296e-301,1.2275090841263494e-301,1.2255098838264694e-301,1.2235106835265895e-301,1.2215114832267093e-301,1.2195122829268293e-301,1.2175130826269493e-301,1.2155138823270691e-301,1.2135146820271892e-301,1.2115154817273092e-301,1.209516281427429e-301,1.207517081127549e-301,1.205517880827669e-301,1.2035186805277889e-301,1.2015194802279089e-301,1.199520279928029e-301,1.1975210796281487e-301,1.1955218793282688e-301,1.1935226790283886e-301,1.1915234787285086e-301,1.1895242784286286e-301,1.1875250781287484e-301,1.1855258778288685e-301,1.1835266775289885e-301,1.1815274772291083e-301,1.1795282769292283e-301,1.1775290766293484e-301,1.1755298763294682e-301,1.1735306760295882e-301,1.1715314757297082e-301,1.169532275429828e-301,1.167533075129948e-301,1.165533874830068e-301,1.163534674530188e-301,1.161535474230308e-301,1.159536273930428e-301,1.1575370736305478e-301,1.1555378733306678e-301,1.1535386730307876e-301,1.1515394727309076e-301,1.1495402724310277e-301,1.1475410721311475e-301,1.1455418718312675e-301,1.1435426715313875e-301,1.1415434712315074e-301,1.1395442709316274e-301,1.1375450706317474e-301,1.1355458703318672e-301,1.1335466700319872e-301,1.1315474697321073e-301,1.129548269432227e-301,1.1275490691323471e-301,1.1255498688324671e-301,1.123550668532587e-301,1.121551468232707e-301,1.119552267932827e-301,1.1175530676329468e-301,1.1155538673330668e-301,1.1135546670331867e-301,1.1115554667333067e-301,1.1095562664334267e-301,1.1075570661335465e-301,1.1055578658336665e-301,1.1035586655337866e-301,1.1015594652339064e-301,1.0995602649340264e-301,1.0975610646341464e-301,1.0955618643342663e-301,1.0935626640343863e-301,1.0915634637345063e-301,1.0895642634346261e-301,1.0875650631347461e-301,1.0855658628348662e-301,1.083566662534986e-301,1.081567462235106e-301,1.079568261935226e-301,1.0775690616353459e-301,1.0755698613354659e-301,1.0735706610355857e-301,1.0715714607357057e-301,1.0695722604358257e-301,1.0675730601359456e-301,1.0655738598360656e-301,1.0635746595361856e-301,1.0615754592363054e-301,1.0595762589364255e-301,1.0575770586365455e-301,1.0555778583366653e-301,1.0535786580367853e-301,1.0515794577369053e-301,1.0495802574370252e-301,1.0475810571371452e-301,1.0455818568372652e-301,1.043582656537385e-301,1.041583456237505e-301,1.0395842559376249e-301,1.037585055637745e-301,1.035585855337865e-301,1.0335866550379847e-301,1.0315874547381048e-301,1.0295882544382248e-301,1.0275890541383446e-301,1.0255898538384646e-301,1.0235906535385847e-301,1.0215914532387045e-301,1.0195922529388245e-301,1.0175930526389445e-301,1.0155938523390643e-301,1.0135946520391844e-301,1.0115954517393044e-301,1.0095962514394242e-301,1.0075970511395442e-301,1.0055978508396643e-301,1.003598650539784e-301,1.001599450239904e-301,9.99600249940024e-302,9.97601049640144e-302,9.95601849340264e-302,9.936026490403838e-302,9.916034487405038e-302,9.896042484406238e-302,9.876050481407436e-302,9.856058478408637e-302,9.836066475409837e-302,9.816074472411035e-302,9.796082469412235e-302,9.776090466413436e-302,9.756098463414634e-302,9.736106460415834e-302,9.716114457417034e-302,9.696122454418232e-302,9.676130451419433e-302,9.656138448420633e-302,9.636146445421831e-302,9.616154442423031e-302,9.59616243942423e-302,9.57617043642543e-302,9.55617843342663e-302,9.536186430427828e-302,9.516194427429028e-302,9.496202424430229e-302,9.476210421431427e-302,9.456218418432627e-302,9.436226415433827e-302,9.416234412435026e-302,9.396242409436226e-302,9.376250406437426e-302,9.356258403438624e-302,9.336266400439824e-302,9.316274397441024e-302,9.296282394442223e-302,9.276290391443423e-302,9.256298388444622e-302,9.236306385445822e-302,9.216314382447022e-302,9.196322379448221e-302,9.17633037644942e-302,9.15633837345062e-302,9.13634637045182e-302,9.116354367453019e-302,9.096362364454218e-302,9.076370361455418e-302,9.056378358456618e-302,9.036386355457817e-302,9.016394352459017e-302,8.996402349460216e-302,8.976410346461415e-302,8.956418343462616e-302,8.936426340463815e-302,8.916434337465014e-302,8.896442334466213e-302,8.876450331467413e-302,8.856458328468613e-302,8.836466325469812e-302,8.816474322471012e-302,8.796482319472211e-302,8.776490316473411e-302,8.756498313474611e-302,8.73650631047581e-302,8.716514307477009e-302,8.696522304478208e-302,8.676530301479409e-302,8.656538298480608e-302,8.636546295481807e-302,8.616554292483007e-302,8.596562289484207e-302,8.576570286485406e-302,8.556578283486606e-302,8.536586280487805e-302,8.516594277489004e-302,8.496602274490204e-302,8.476610271491404e-302,8.456618268492603e-302,8.436626265493802e-302,8.416634262495003e-302,8.396642259496202e-302,8.376650256497401e-302,8.356658253498601e-302,8.3366662504998e-302,8.316674247501e-302,8.296682244502199e-302,8.276690241503399e-302,8.256698238504598e-302,8.236706235505798e-302,8.216714232506998e-302,8.196722229508197e-302,8.176730226509396e-302,8.156738223510596e-302,8.136746220511796e-302,8.116754217512995e-302,8.096762214514194e-302,8.076770211515394e-302,8.056778208516594e-302,8.036786205517793e-302,8.016794202518993e-302,7.996802199520192e-302,7.976810196521391e-302,7.956818193522592e-302,7.936826190523791e-302,7.91683418752499e-302,7.896842184526189e-302,7.87685018152739e-302,7.856858178528589e-302,7.836866175529788e-302,7.816874172530988e-302,7.796882169532187e-302,7.776890166533387e-302,7.756898163534587e-302,7.736906160535786e-302,7.716914157536985e-302,7.696922154538184e-302,7.676930151539385e-302,7.656938148540584e-302,7.636946145541783e-302,7.616954142542983e-302,7.596962139544183e-302,7.576970136545382e-302,7.556978133546582e-302,7.536986130547781e-302,7.51699412754898e-302,7.49700212455018e-302,7.47701012155138e-302,7.457018118552579e-302,7.437026115553778e-302,7.417034112554979e-302,7.397042109556178e-302,7.377050106557377e-302,7.357058103558577e-302,7.337066100559776e-302,7.317074097560976e-302,7.297082094562175e-302,7.277090091563375e-302,7.257098088564574e-302,7.237106085565774e-302,7.217114082566974e-302,7.197122079568173e-302,7.177130076569372e-302,7.157138073570572e-302,7.137146070571772e-302,7.117154067572971e-302,7.09716206457417e-302,7.07717006157537e-302,7.05717805857657e-302,7.037186055577769e-302,7.017194052578969e-302,6.997202049580168e-302,6.977210046581367e-302,6.957218043582568e-302,6.937226040583767e-302,6.917234037584966e-302,6.897242034586165e-302,6.877250031587366e-302,6.857258028588565e-302,6.837266025589764e-302,6.817274022590964e-302,6.797282019592163e-302,6.777290016593363e-302,6.757298013594563e-302,6.737306010595762e-302,6.717314007596961e-302,6.69732200459816e-302,6.677330001599361e-302,6.65733799860056e-302,6.637345995601759e-302,6.617353992602959e-302,6.597361989604159e-302,6.577369986605358e-302,6.557377983606558e-302,6.537385980607757e-302,6.517393977608956e-302,6.497401974610156e-302,6.477409971611356e-302,6.457417968612555e-302,6.437425965613754e-302,6.417433962614955e-302,6.397441959616154e-302,6.377449956617353e-302,6.357457953618553e-302,6.337465950619752e-302,6.317473947620952e-302,6.297481944622151e-302,6.277489941623351e-302,6.25749793862455e-302,6.23750593562575e-302,6.21751393262695e-302,6.197521929628149e-302,6.177529926629348e-302,6.157537923630548e-302,6.137545920631748e-302,6.117553917632947e-302,6.097561914634146e-302,6.077569911635346e-302,6.057577908636546e-302,6.037585905637745e-302,6.017593902638945e-302,5.997601899640144e-302,5.977609896641343e-302,5.957617893642544e-302,5.937625890643743e-302,5.917633887644942e-302,5.897641884646141e-302,5.877649881647342e-302,5.857657878648541e-302,5.83766587564974e-302,5.81767387265094e-302,5.797681869652139e-302,5.777689866653339e-302,5.757697863654539e-302,5.737705860655738e-302,5.717713857656937e-302,5.697721854658136e-302,5.677729851659337e-302,5.657737848660536e-302,5.637745845661735e-302,5.617753842662935e-302,5.597761839664135e-302,5.577769836665334e-302,5.557777833666534e-302,5.537785830667733e-302,5.517793827668932e-302,5.497801824670132e-302,5.477809821671332e-302,5.457817818672531e-302,5.43782581567373e-302,5.417833812674931e-302,5.39784180967613e-302,5.377849806677329e-302,5.357857803678529e-302,5.337865800679728e-302,5.317873797680928e-302,5.297881794682127e-302,5.277889791683327e-302,5.257897788684526e-302,5.237905785685726e-302,5.217913782686926e-302,5.197921779688125e-302,5.177929776689324e-302,5.157937773690524e-302,5.137945770691724e-302,5.117953767692923e-302,5.097961764694122e-302,5.077969761695322e-302,5.057977758696522e-302,5.037985755697721e-302,5.017993752698921e-302,4.99800174970012e-302,4.978009746701319e-302,4.958017743702519e-302,4.938025740703719e-302,4.918033737704918e-302,4.898041734706117e-302,4.878049731707318e-302,4.858057728708517e-302,4.838065725709716e-302,4.818073722710916e-302,4.798081719712115e-302,4.778089716713315e-302,4.758097713714514e-302,4.738105710715714e-302,4.718113707716913e-302,4.698121704718112e-302,4.678129701719313e-302,4.658137698720512e-302,4.6381456957217116e-302,4.618153692722911e-302,4.5981616897241106e-302,4.57816968672531e-302,4.5581776837265095e-302,4.538185680727709e-302,4.5181936777289085e-302,4.498201674730108e-302,4.4782096717313074e-302,4.458217668732507e-302,4.438225665733707e-302,4.418233662734906e-302,4.398241659736106e-302,4.378249656737305e-302,4.3582576537385047e-302,4.3382656507397044e-302,4.3182736477409037e-302,4.2982816447421034e-302,4.2782896417433026e-302,4.2582976387445023e-302,4.238305635745702e-302,4.218313632746901e-302,4.198321629748101e-302,4.1783296267493e-302,4.1583376237505e-302,4.1383456207516996e-302,4.118353617752899e-302,4.0983616147540986e-302,4.078369611755298e-302,4.0583776087564975e-302,4.038385605757697e-302,4.0183936027588965e-302,3.998401599760096e-302,3.9784095967612954e-302,3.958417593762495e-302,3.938425590763695e-302,3.918433587764894e-302,3.898441584766094e-302,3.878449581767293e-302,3.8584575787684927e-302,3.8384655757696924e-302,3.8184735727708917e-302,3.7984815697720914e-302,3.7784895667732906e-302,3.7584975637744903e-302,3.73850556077569e-302,3.718513557776889e-302,3.698521554778089e-302,3.678529551779288e-302,3.658537548780488e-302,3.6385455457816876e-302,3.618553542782887e-302,3.5985615397840866e-302,3.578569536785286e-302,3.5585775337864855e-302,3.538585530787685e-302,3.5185935277888845e-302,3.498601524790084e-302,3.4786095217912834e-302,3.458617518792483e-302,3.438625515793683e-302,3.418633512794882e-302,3.398641509796082e-302,3.378649506797281e-302,3.3586575037984807e-302,3.3386655007996805e-302,3.3186734978008797e-302,3.2986814948020794e-302,3.2786894918032786e-302,3.2586974888044783e-302,3.238705485805678e-302,3.2187134828068773e-302,3.198721479808077e-302,3.178729476809276e-302,3.158737473810476e-302,3.1387454708116757e-302,3.118753467812875e-302,3.0987614648140746e-302,3.078769461815274e-302,3.0587774588164735e-302,3.038785455817673e-302,3.0187934528188725e-302,2.998801449820072e-302,2.9788094468212714e-302,2.958817443822471e-302,2.938825440823671e-302,2.91883343782487e-302,2.89884143482607e-302,2.878849431827269e-302,2.8588574288284687e-302,2.8388654258296685e-302,2.8188734228308677e-302,2.7988814198320674e-302,2.7788894168332666e-302,2.7588974138344663e-302,2.738905410835666e-302,2.7189134078368653e-302,2.698921404838065e-302,2.678929401839264e-302,2.658937398840464e-302,2.6389453958416637e-302,2.618953392842863e-302,2.5989613898440626e-302,2.578969386845262e-302,2.5589773838464615e-302,2.538985380847661e-302,2.5189933778488605e-302,2.49900137485006e-302,2.4790093718512594e-302,2.459017368852459e-302,2.439025365853659e-302,2.419033362854858e-302,2.399041359856058e-302,2.379049356857257e-302,2.3590573538584567e-302,2.3390653508596565e-302,2.3190733478608557e-302,2.2990813448620551e-302,2.2790893418632549e-302,2.2590973388644543e-302,2.2391053358656538e-302,2.2191133328668533e-302,2.1991213298680527e-302,2.1791293268692525e-302,2.159137323870452e-302,2.1391453208716514e-302,2.1191533178728509e-302,2.0991613148740503e-302,2.07916931187525e-302,2.0591773088764495e-302,2.039185305877649e-302,2.0191933028788485e-302,1.999201299880048e-302,1.9792092968812477e-302,1.959217293882447e-302,1.9392252908836466e-302,1.919233287884846e-302,1.8992412848860455e-302,1.8792492818872453e-302,1.8592572788884447e-302,1.8392652758896442e-302,1.8192732728908437e-302,1.7992812698920431e-302,1.7792892668932429e-302,1.7592972638944423e-302,1.7393052608956418e-302,1.7193132578968413e-302,1.6993212548980407e-302,1.6793292518992405e-302,1.65933724890044e-302,1.6393452459016394e-302,1.6193532429028389e-302,1.5993612399040383e-302,1.579369236905238e-302,1.5593772339064375e-302,1.539385230907637e-302,1.5193932279088365e-302,1.499401224910036e-302,1.4794092219112357e-302,1.459417218912435e-302,1.4394252159136346e-302,1.419433212914834e-302,1.3994412099160335e-302,1.3794492069172333e-302,1.3594572039184327e-302,1.3394652009196322e-302,1.3194731979208317e-302,1.2994811949220311e-302,1.2794891919232309e-302,1.2594971889244303e-302,1.2395051859256298e-302,1.2195131829268293e-302,1.1995211799280287e-302,1.1795291769292285e-302,1.1595371739304278e-302,1.1395451709316274e-302,1.1195531679328269e-302,1.0995611649340265e-302,1.0795691619352259e-302,1.0595771589364254e-302,1.039585155937625e-302,1.0195931529388245e-302,9.99601149940024e-303,9.796091469412235e-303,9.59617143942423e-303,9.396251409436226e-303,9.196331379448221e-303,8.996411349460217e-303,8.796491319472211e-303,8.596571289484206e-303,8.396651259496202e-303,8.196731229508197e-303,7.996811199520193e-303,7.796891169532187e-303,7.596971139544182e-303,7.397051109556178e-303,7.197131079568173e-303,6.997211049580169e-303,6.797291019592163e-303,6.597370989604158e-303,6.397450959616154e-303,6.197530929628149e-303,5.997610899640145e-303,5.7976908696521393e-303,5.5977708396641347e-303,5.39785080967613e-303,5.197930779688125e-303,4.99801074970012e-303,4.7980907197121153e-303,4.5981706897241107e-303,4.3982506597361054e-303,4.198330629748101e-303,3.998410599760096e-303,3.7984905697720913e-303,3.598570539784087e-303,3.3986505097960814e-303,3.198730479808077e-303,2.998810449820072e-303,2.7988904198320674e-303,2.5989703898440624e-303,2.3990503598560577e-303,2.1991303298680527e-303,1.999210299880048e-303,1.7992902698920434e-303,1.5993702399040384e-303,1.3994502099160337e-303,1.1995301799280289e-303,9.99610149940024e-304,7.996901199520192e-304,5.9977008996401444e-304,3.998500599760096e-304,1.9993002998800482e-304,1.0000000000000454e-308]}

},{}],50:[function(require,module,exports){
module.exports={"expected":[12.533141373155003,12.544411622957773,12.555671756338107,12.566921800489364,12.578161782483292,12.589391729270785,12.600611667682646,12.611821624430329,12.623021626106675,12.634211699186666,12.645391870028135,12.656562164872499,12.667722609845482,12.678873230957821,12.690014054105976,12.701145105072834,12.712266409528398,12.723377993030484,12.734479881025404,12.745572098848651,12.756654671725563,12.767727624771998,12.778790982995003,12.789844771293465,12.80088901445877,12.811923737175444,12.82294896402181,12.833964719470613,12.844971027889661,12.855967913542457,12.866955400588813,12.877933513085473,12.888902274986743,12.899861710145066,12.910811842311666,12.921752695137126,12.932684292171984,12.943606656867335,12.954519812575407,12.965423782550156,12.976318589947827,12.987204257827548,12.99808080915188,13.008948266787394,13.019806653505233,13.030655991981662,13.041496304798617,13.052327614444266,13.06314994331355,13.073963313708708,13.084767747839836,13.095563267825403,13.106349895692787,13.117127653378798,13.127896562730191,13.138656645504195,13.149407923369019,13.160150417904362,13.170884150601916,13.181609142865872,13.192325416013414,13.203032991275222,13.213731889795946,13.22442213263471,13.235103740765583,13.245776735078072,13.256441136377589,13.267096965385921,13.277744242741713,13.288382989000922,13.299013224637289,13.30963497004279,13.320248245528095,13.33085307132303,13.341449467577018,13.352037454359522,13.362617051660498,13.373188279390831,13.383751157382772,13.394305705390373,13.404851943089916,13.415389890080343,13.425919565883682,13.436440989945465,13.446954181635151,13.45745916024654,13.467955944998181,13.4784445550338,13.488925009422681,13.499397327160093,13.509861527167681,13.520317628293867,13.530765649314242,13.541205608931971,13.551637525778169,13.5620614184123,13.572477305322558,13.582885204926244,13.59328513557016,13.60367711553097,13.614061163015593,13.62443729616155,13.634805533037362,13.645165891642895,13.655518389909739,13.665863045701558,13.67619987681446,13.686528900977349,13.696850135852282,13.707163599034814,13.717469308054364,13.727767280374541,13.738057533393512,13.748340084444328,13.758614950795266,13.768882149650182,13.77914169814883,13.789393613367205,13.799637912317866,13.809874611950283,13.820103729151146,13.830325280744695,13.840539283493046,13.850745754096515,13.860944709193923,13.87113616536293,13.881320139120335,13.891496646922397,13.90166570516514,13.911827330184666,13.921981538257455,13.932128345600674,13.942267768372483,13.95239982267232,13.96252452454122,13.972641889962091,13.982751934860026,13.992854675102581,14.00295012650008,14.013038304805885,14.023119225716702,14.033192904872852,14.043259357858565,14.053318600202251,14.063370647376786,14.073415514799787,14.083453217833892,14.093483771787023,14.103507191912675,14.113523493410176,14.123532691424954,14.133534801048807,14.143529837320179,14.153517815224403,14.16349874969398,14.173472655608835,14.183439547796569,14.193399441032728,14.203352350041047,14.213298289493714,14.223237274011614,14.233169318164585,14.243094436471667,14.253012643401343,14.262923953371795,14.272828380751145,14.282725939857691,14.292616644960157,14.302500510277934,14.312377549981306,14.322247778191707,14.332111208981939,14.341967856376408,14.35181773435137,14.36166085683515,14.37149723770837,14.381326890804191,14.391149829908523,14.400966068760265,14.410775621051522,14.420578500427826,14.430374720488366,14.440164294786197,14.449947236828462,14.45972356007662,14.46949327794665,14.479256403809268,14.489012950990142,14.49876293277011,14.508506362385374,14.518243253027732,14.52797361784477,14.537697469940076,14.54741482237344,14.557125688161069,14.56683008027578,14.576528011647206,14.586219495162002,14.595904543664036,14.605583169954594,14.61525538679257,14.624921206894678,14.634580642935624,14.64423370754832,14.653880413324071,14.663520772812758,14.673154798523036,14.682782502922532,14.69240389843801,14.702018997455582,14.711627812320879,14.721230355339245,14.730826638775913,14.74041667485619,14.750000475765647,14.759578053650287,14.769149420616735,14.778714588732406,14.788273570025693,14.797826376486137,14.807373020064606,14.816913512673468,14.826447866186761,14.835976092440376,14.845498203232212,14.85501421032236,14.864524125433267,14.874027960249908,14.883525726419947,14.893017435553912,14.90250309922535,14.911982728971006,14.921456336290971,14.930923932648856,14.94038552947195,14.949841138151374,14.959290770042262,14.968734436463892,14.978172148699866,14.987603917998259,14.997029755571774,15.006449672597899,15.015863680219063,15.02527178954279,15.034674011641847,15.044070357554407,15.053460838284185,15.0628454648006,15.072224248038918,15.081597198900411,15.090964328252491,15.100325646928862,15.109681165729672,15.11903089542165,15.128374846738255,15.137713030379825,15.147045457013705,15.156372137274404,15.165693081763733,15.175008301050934,15.184317805672837,15.193621606133988,15.202919712906793,15.212212136431647,15.221498887117088,15.230779975339908,15.240055411445312,15.249325205747038,15.258589368527495,15.267847910037903,15.277100840498406,15.28634817009823,15.295589908995792,15.30482606731884,15.314056655164585,15.323281682599818,15.332501159661053,15.341715096354642,15.35092350265691,15.36012638851428,15.369323763843388,15.378515638531226,15.38770202243525,15.39688292538351,15.406058357174775,15.415228327578646,15.424392846335687,15.433551923157543,15.442705567727058,15.451853789698395,15.460996598697157,15.470134004320501,15.479266016137261,15.488392643688057,15.497513896485419,15.506629784013903,15.515740315730199,15.52484550106325,15.533945349414367,15.543039870157338,15.552129072638547,15.561212966177074,15.570291560064824,15.579364863566623,15.588432885920337,15.597495636336978,15.60655312400081,15.615605358069468,15.62465234767405,15.633694101919248,15.642730629883424,15.651761940618744,15.660788043151271,15.669808946481071,15.67882465958232,15.687835191403401,15.696840550867025,15.705840746870313,15.714835788284912,15.72382568395709,15.732810442707844,15.741790073333002,15.750764584603308,15.75973398526454,15.768698284037608,15.777657489618635,15.786611610679076,15.795560655865806,15.80450463380122,15.813443553083326,15.82237742228585,15.83130624995832,15.840230044626177,15.84914881479085,15.85806256892987,15.86697131549695,15.875875062922088,15.884773819611654,15.893667593948484,15.902556394291974,15.911440228978174,15.920319106319866,15.929193034606673,15.93806202210514,15.94692607705882,15.95578520768837,15.964639422191638,15.973488728743755,15.982333135497212,15.991172650581962,16.000007282105496,16.00883703815294,16.017661926787124,16.026481956048688,16.035297133956156,16.04410746850603,16.052912967672857,16.06171363940933,16.070509491646373,16.079300532293203,16.088086769237446,16.096868210345182,16.105644863461062,16.11441673640837,16.1231838369891,16.131946172984055,16.14070375215292,16.14945658223433,16.15820467094597,16.166948025984638,16.17568665502633,16.184420565726327,16.19314976571926,16.20187426261919,16.21059406401969,16.219309177493933,16.228019610594735,16.23672537085467,16.24542646578612,16.254122902881363,16.262814689612647,16.271501833432257,16.280184341772596,16.28886222204627,16.29753548164613,16.306204127945378,16.314868168297632,16.323527610036983,16.332182460478087,16.34083272691623,16.34947841662739,16.358119536868326,16.366756094876642,16.375388097870843,16.384015553050432,16.39263846759596,16.401256848669107,16.40987070341274,16.41848003895099,16.42708486238932,16.435685180814605,16.44428100129517,16.45287233088088,16.46145917660321,16.4700415454753,16.47861944449203,16.487192880630083,16.495761860848006,16.504326392086288,16.512886481267422,16.521442135295963,16.529993361058597,16.538540165424205,16.547082555243932,16.55562053735125,16.564154118562012,16.57268330567453,16.581208105469624,16.589728524710704,16.59824457014381,16.606756248497682,16.61526356648384,16.623766530796612,16.63226514811323,16.64075942509387,16.64924936838171,16.657734984603014,16.66621628036717,16.674693262266747,16.683165936877582,16.69163431075881,16.70009839045295,16.70855818248593,16.717013693367186,16.72546492958968,16.733911897629998,16.74235460394837,16.75079305498876,16.759227257178893,16.76765721693035,16.77608294063858,16.784504434682997,16.79292170542701,16.80133475921809,16.809743602387826,16.818148241251972,16.826548682110516,16.83494493124773,16.84333699493221,16.851724879416953,16.860108590939404,16.868488135721506,16.876863519969742,16.88523474987523,16.89360183161372,16.90196477134569,16.91032357521639,16.918678249355874,16.927028799879086,16.935375232885875,16.943717554461085,16.952055770674576,16.960389887581286,16.968719911221292,16.97704584761985,16.985367702787443,16.993685482719844,17.001999193398156,17.01030884078887,17.018614430843904,17.026915969500664,17.03521346268209,17.043506916296703,17.051796336238652,17.06008172838777,17.068363098609623,17.076640452755544,17.0849137966627,17.09318313615413,17.10144847703879,17.109709825111608,17.117967186153532,17.126220565931572,17.13446997019884,17.14271540469462,17.15095687514439,17.159194387259884,17.167427946739124,17.175657559266483,17.18388323051272,17.192104966135027,17.200322771777078,17.208536653069064,17.21674661562776,17.224952665056538,17.23315480694544,17.241353046871208,17.249547390397332,17.2577378430741,17.265924410438622,17.2741070980149,17.282285911313846,17.290460855833352,17.298631937058314,17.306799160460674,17.314962531499475,17.323122055620892,17.33127773825829,17.33942958483225,17.347577600750608,17.35572179140852,17.363862162188486,17.37199871846039,17.38013146558155,17.388260408896752,17.396385553738302,17.40450690542605,17.412624469267445,17.420738250557577,17.428848254579194,17.436954486602776,17.445056951886542,17.453155655676525,17.461250603206572,17.469341799698412,17.4774292503617,17.485512960394015,17.49359293498095,17.501669179296123,17.509741698501216,17.51781049774602,17.52587558216847,17.53393695689469,17.541994627039017,17.55004859770406,17.558098873980708,17.5661454609482,17.574188363674136,17.582227587214533,17.590263136613853,17.598295016905034,17.606323233109546,17.614347790237407,17.62236869328723,17.630385947246253,17.638399557090395,17.646409527784257,17.65441586428119,17.662418571523318,17.670417654441568,17.67841311795571,17.686404966974408,17.694393206395223,17.702377841104674,17.71035887597827,17.71833631588052,17.72631016566502,17.73428043017442,17.74224711424051,17.75021022268424,17.758169760315745,17.76612573193438,17.774078142328772,17.782026996276823,17.789972298545777,17.797914053892228,17.805852267062168,17.813786942791005,17.821718085803617,17.829645700814364,17.837569792527134,17.845490365635374,17.853407424822112,17.861320974760005,17.86923102011136,17.877137565528173,17.885040615652144,17.892940175114745,17.90083624853721,17.90872884053059,17.916617955695784,17.92450359862356,17.932385773894595,17.94026448607951,17.94813973973888,17.956011539423294,17.963879889673358,17.971744795019745,17.979606259983218,17.98746428907466,17.9953188867951,18.003170057635764,18.01101780607807,18.01886213659369,18.02670305364456,18.03454056168292,18.04237466515134,18.050205368482743,18.058032676100453,18.065856592418196,18.073677121840163,18.081494268761,18.08930803756587,18.097118432630474,18.10492545832106,18.112729118994476,18.12052941899819,18.128326362670308,18.136119954339616,18.14391019832561,18.151697098938502,18.159480660479275,18.167260887239696,18.17503778350234,18.18281135354063,18.190581601618856,18.198348531992206,18.206112148906787,18.213872456599656,18.221629459298857,18.22938316122343,18.237133566583452,18.244880679580046,18.252624504405432,18.260365045242935,18.26810230626702,18.275836291643312,18.28356700552863,18.291294452071007,18.299018635409713,18.306739559675293,18.314457228989582,18.322171647465733,18.329882819208244,18.337590748312984,18.34529543886722,18.35299689494963,18.36069512063035,18.368390119970982,18.37608189702462,18.383770455835887,18.391455800440944,18.399137934867525,18.40681686313496,18.414492589254202,18.42216511722784,18.429834451050144,18.43750059470706,18.44516355217626,18.45282332742716,18.460479924420937,18.46813334711055,18.47578359944079,18.483430685348257,18.491074608761437,18.498715373600685,18.506352983778267,18.513987443198378,18.521618755757164,18.529246925342758,18.536871955835277,18.544493851106875,18.55211261502175,18.55972825143616,18.567340764198462,18.574950157149125,18.582556434120757,18.590159598938122,18.597759655418162,18.605356607370037,18.612950458595122,18.620541212887037,18.628128874031688,18.635713445807262,18.643294931984258,18.65087333632552,18.658448662586252,18.66602091451403,18.67359009584883,18.681156210323064,18.68871926166157,18.69627925358168,18.70383618979318,18.71139007399839,18.718940909892147,18.72648870116185,18.73403345148745,18.74157516454151,18.7491138439892,18.756649493488325,18.764182116689348,18.771711717235398,18.77923829876231,18.786761864898633,18.79428241926565,18.801799965477407,18.80931450714073,18.81682604785523,18.82433459121335,18.831840140800367,18.839342700194408,18.84684227296649,18.854338862680525,18.861832472893333,18.86932310715469,18.876810769007307,18.88429546198689,18.891777189622132,18.89925595543474,18.906731762939458,18.914204615644092,18.921674517049507,18.929141470649668,18.93660547993165,18.944066548375663,18.951524679455062,18.958979876636366,18.966432143379286,18.973881483136743,18.981327899354877,18.98877139547307,18.996211974923963,19.00364964113349,19.011084397520868,19.018516247498642,19.025945194472683,19.033371241842225,19.040794392999864,19.04821465133159,19.055632020216798,19.063046503028318,19.070458103132413,19.0778668238888,19.0852726686507,19.092675640764806,19.100075743571338,19.107472980404044,19.114867354590224,19.122258869450736,19.129647528300037,19.137033334446176,19.144416291190822,19.15179640182928,19.15917366965051,19.166548097937138,19.173919689965487,19.18128844900557,19.188654378321136,19.196017481169665,19.20337776080239,19.21073522046432,19.218089863394244,19.22544169282477,19.232790711982318,19.24013692408715,19.24748033235338,19.254820939988992,19.262158750195862,19.269493766169763,19.276825991100395,19.284155428171392,19.291482080560336,19.298805951438784,19.306127043972268,19.31344536132033,19.320760906636522,19.328073683068432,19.335383693757695,19.342690941840004,19.349995430445137,19.35729716269697,19.364596141713477,19.371892370606773,19.379185852483104,19.38647659044288,19.393764587580673,19.401049846985252,19.40833237173959,19.41561216492087,19.422889229600514,19.430163568844193,19.437435185711834,19.444704083257655,19.451970264530154,19.459233732572145,19.466494490420768,19.473752541107494,19.481007887658144,19.488260533092923,19.495510480426404,19.502757732667554,19.510002292819767,19.517244163880843,19.524483348843045,19.53171985069307,19.538953672412095,19.546184816975778,19.553413287354278,19.560639086512264,19.567862217408923,19.575082682997998,19.582300486227773,19.58951563004111,19.59672811737544,19.603937951162813,19.611145134329867,19.618349669797876,19.625551560482748,19.632750809295047,19.639947419139993,19.647141392917497,19.654332733522153,19.661521443843274,19.668707526764873,19.67589098516572,19.683071821919313,19.690250039893918,19.697425641952577,19.70459863095311,19.711769009748153,19.718936781185135,19.726101948106333,19.733264513348843,19.740424479744636,19.747581850120525,19.754736627298225,19.761888814094327,19.76903841332033,19.77618542778266,19.783329860282663,19.79047171361663,19.797610990575816,19.80474769394644,19.811881826509698,19.819013391041786,19.82614239031391,19.83326882709228,19.84039270413816,19.847514024207847,19.854632790052694,19.86174900441912,19.86886267004864,19.875973789677847,19.88308236603845,19.890188401857273,19.89729189985627,19.904392862752545,19.911491293258344,19.918587194081088,19.925680567923383,19.932771417483018,19.939859745452985,19.946945554521495,19.95402884737198,19.961109626683122,19.968187895128843,19.975263655378328,19.982336910096045,19.98940766194174,19.99647591357046,20.003541667632557,20.010604926773713,20.017665693634928,20.02472397085256,20.031779761058317,20.038833066879267,20.04588389093787,20.052932235851962,20.059978104234787,20.067021498695006,20.07406242183669,20.08110087625936,20.088136864557967,20.09517038932293,20.10220145314014,20.109230058590953,20.116256208252228,20.12327990469632,20.130301150491096,20.137319948199945,20.1443363003818,20.151350209591126,20.15836167837795,20.165370709287867,20.17237730486205,20.179381467637256,20.18638320014584,20.19338250491578,20.200379384470658,20.207373841329694,20.214365878007747,20.221355497015335,20.228342700858633,20.235327492039488,20.242309873055433,20.249289846399698,20.25626741456121,20.263242580024617,20.270215345270287,20.277185712774333,20.284153685008597,20.291119264440695,20.298082453533997,20.30504325474765,20.312001670536596,20.318957703351565,20.325911355639096,20.332862629841543,20.33981152839709,20.34675805373975,20.3537022082994,20.36064399450175,20.367583414768397,20.374520471516796,20.381455167160304,20.388387504108163,20.395317484765524,20.40224511153345,20.409170386808942,20.416093312984916,20.423013892450246,20.429932127589762,20.43684802078424,20.443761574410445,20.450672790841125,20.457581672445006,20.464488221586834,20.47139244062735,20.478294331923326,20.485193897827557,20.492091140688885,20.498986062852186,20.50587866665841,20.51276895444457,20.519656928543746,20.526542591285114,20.533425944993937,20.54030699199159,20.547185734595555,20.554062175119434,20.56093631587297,20.56780815916203,20.574677707288654,20.581544962551014,20.588409927243468,20.595272603656543,20.602132994076953,20.608991100787602,20.6158469260676,20.62270047219227,20.629551741433158,20.636400736058025,20.643247458330883,20.650091910511996,20.656934094857867,20.66377401362127,20.67061166905126,20.677447063393164,20.6842801988886,20.691111077775485,20.697939702288046,20.704766074656824,20.711590197108684,20.718412071866823,20.725231701150783,20.732049087176446,20.738864232156065,20.745677138298248,20.75248780780798,20.759296242886638,20.766102445731978,20.772906418538167,20.779708163495766,20.78650768279176,20.793304978609566,20.800100053129018,20.8068929085264,20.813683546974442,20.82047197064233,20.827258181695722,20.834042182296734,20.840823974603982,20.847603560772555,20.854380942954048,20.861156123296553,20.867929103944686,20.874699887039576,20.88146847471888,20.888234869116797,20.89499907236407,20.901761086587985,20.908520913912398,20.91527855645773,20.922034016340977,20.92878729567572,20.935538396572124,20.942287321136966,20.94903407147362,20.95577864968207,20.962521057858936,20.969261298097454,20.9759993724875,20.982735283115602,20.98946903206493,20.996200621415323,21.002930053243276,21.00965732962197,21.016382452621254,21.023105424307676,21.029826246744484,21.036544921991627,21.043261452105757,21.049975839140252,21.056688085145225,21.063398192167504,21.07010616225067,21.076811997435048,21.083515699757726,21.090217271252538,21.0969167139501,21.10361402987781,21.11030922105984,21.117002289517146,21.123693237267503,21.130382066325474,21.137068778702446,21.14375337640661,21.150435861443007,21.15711623581349,21.163794501516765,21.170470660548375,21.17714471490073,21.183816666563096,21.190486517521602,21.19715426975926,21.20381992525596,21.21048348598848,21.217144953930497,21.22380433105259,21.23046161932225,21.23711682070388,21.2437699371588,21.250420970645273,21.257069923118493,21.26371679653059,21.27036159283066,21.27700431396474,21.28364496187583,21.290283538503914,21.296920045785946,21.30355448565585,21.310186860044563,21.31681717088,21.323445420087083,21.330071609587744,21.336695741300936,21.343317817142626,21.349937839025817,21.356555808860538,21.363171728553866,21.369785600009926,21.376397425129895,21.38300720581201,21.38961494395158,21.39622064144098,21.402824300169677,21.409425922024205,21.416025508888204,21.422623062642415,21.429218585164676,21.435812078329935,21.44240354401026,21.448992984074852,21.455580400390026,21.462165794819246,21.4687491692231,21.475330525459345,21.48190986538288,21.48848719084577,21.49506250369724,21.501635805783696,21.508207098948716,21.514776385033063,21.521343665874692,21.527908943308756,21.534472219167608,21.54103349528081,21.547592773475145,21.554150055574603,21.56070534340041,21.567258638771026,21.573809943502145,21.5803592594067,21.586906588294877,21.593451931974126,21.59999529224915,21.606536670921926,21.613076069791692,21.619613490654977,21.62614893530559,21.632682405534627,21.63921390313049,21.64574342987887,21.652270987562776,21.658796577962523,21.665320202855746,21.671841864017416,21.678361563219816,21.684879302232574,21.691395082822662,21.69790890675439,21.70442077578943,21.71093069168681,21.717438656202916,21.723944671091505,21.730448738103718,21.73695085898806,21.743451035490438,21.74994926935414,21.75644556231985,21.762939916125656,21.769432332507062,21.77592281319697,21.78241135992571,21.788897974421037,21.795382658408123,21.801865413609587,21.808346241745483,21.81482514453331,21.821302123688014,21.827777180922006,21.83425031794515,21.840721536464773,21.847190838185686,21.853658224810165,21.860123698037974,21.86658725956636,21.873048911090063,21.879508654301326,21.885966490889885,21.892422422542996,21.89887645094542,21.905328577779432,21.911778804724836,21.91822713345897,21.924673565656693,21.931118102990414,21.937560747130075,21.944001499743173,21.950440362494756,21.956877337047437,21.963312425061382,21.969745628194335,21.97617694810161,21.982606386436093,21.989033944848266,21.995459624986193,22.00188342849553,22.00830535701953,22.01472541219906,22.021143595672577,22.02755990907617,22.033974354043533,22.04038693220599,22.046797645192488,22.053206494629606,22.05961348214156,22.06601860935022,22.072421877875083,22.078823289333307,22.085222845339718,22.09162054750678,22.09801639744464,22.104410396761107,22.11080254706167,22.117192849949504,22.123581307025447,22.12996791988805,22.136352690133542,22.142735619355864,22.14911670914665,22.155495961095244,22.16187337678871,22.168248957811812,22.174622705747055,22.180994622174662,22.187364708672586,22.193732966816512,22.200099398179876,22.206464004333846,22.21282678684735,22.219187747287066,22.225546887217423,22.23190420820062,22.238259711796626,22.24461339956317,22.25096527305577,22.25731533382771,22.263663583430073,22.27001002341173,22.27635465531933,22.28269748069734,22.28903850108802,22.295377718031432,22.301715133065457,22.30805074772579,22.314384563545946,22.320716582057262,22.327046804788903,22.333375233267876,22.339701869019006,22.346026713564978,22.35234976842632,22.358671035121397,22.36499051516644,22.37130821007554,22.377624121360643,22.383938250531564,22.390250599095992,22.39656116855949,22.4028699604255,22.409176976195347,22.415482217368243,22.4217856854413,22.428087381909513,22.43438730826579,22.440685466000936,22.446981856603664,22.453276481560604,22.459569342356296,22.46586044047321,22.472149777391742,22.4784373545902,22.484723173544843,22.491007235729857,22.497289542617377,22.50357009567748,22.50984889637818,22.516125946185465,22.52240124656327,22.52867479897349,22.53494660487598,22.54121666572858,22.547484982987093,22.55375155810529,22.56001639253494,22.566279487725787,22.572540845125566,22.578800466180006,22.585058352332826,22.591314505025757,22.597568925698525,22.603821615788863,22.61007257673253,22.61632180996328,22.622569316912905,22.628815099011206,22.635059157686023,22.641301494363223,22.647542110466706,22.653781007418413,22.660018186638325,22.66625364954447,22.672487397552928,22.678719432077834,22.684949754531374,22.691178366323808,22.69740526886344,22.703630463556667,22.70985395180794,22.716075735019796,22.722295814592844,22.728514191925786,22.734730868415404,22.740945845456576,22.747159124442266,22.753370706763548,22.759580593809588,22.765788786967658,22.771995287623145,22.778200097159544,22.784403216958474,22.790604648399654,22.79680439286095,22.803002451718342,22.80919882634594,22.815393518115997,22.821586528398896,22.827777858563156,22.833967509975455,22.840155484000608,22.846341782001588,22.852526405339514,22.858709355373684,22.864890633461528,22.871070240958666,22.87724817921888,22.88342444959412,22.889599053434516,22.89577199208838,22.9019432669022,22.90811287922066,22.914280830386623,22.92044712174115,22.926611754623504,22.93277473037114,22.938936050319715,22.945095715803102,22.951253728153375,22.95741008870083,22.963564798773973,22.96971785969953,22.975869272802452,22.982019039405923,22.988167160831345,22.994313638398367,23.00045847342486,23.00660166722695,23.012743221118996,23.018883136413603,23.025021414421637,23.03115805645221,23.03729306381268,23.043426437808684,23.04955817974411,23.055688290921115,23.061816772640125,23.067943626199842,23.074068852897234,23.080192454027557,23.086314430884354,23.092434784759433,23.098553516942914,23.104670628723195,23.11078612138697,23.11689999621924,23.123012254503294,23.12912289752073,23.135231926551462,23.14133934287371,23.147445147763996,23.153549342497175,23.159651928346413,23.165752906583204,23.171852278477363,23.17795004529704,23.184046208308708,23.190140768777187,23.19623372796563,23.202325087135527,23.208414847546717,23.214503010457396,23.220589577124088,23.22667454880169,23.23275792674345,23.23883971220097,23.244919906424226,23.250998510661553,23.25707552615965,23.263150954163592,23.269224795916838,23.275297052661205,23.281367725636905,23.287436816082533,23.293504325235062,23.29957025432986,23.305634604600694,23.31169737727971,23.317758573597466,23.323818194782913,23.329876242063413,23.33593271666473,23.34198761981104,23.348040952724922,23.354092716627388,23.36014291273786,23.366191542274176,23.372238606452605,23.378284106487843,23.384328043593012,23.390370418979664,23.396411233857798,23.40245048943584,23.40848818692066,23.41452432751758,23.420558912430355,23.4265919428612,23.432623420010778,23.43865334507821,23.444681719261077,23.450708543755407,23.45673381975571,23.46275754845495,23.46877973104456,23.474800368714458,23.48081946265302,23.486837014047108,23.492853024082063,23.498867493941706,23.504880424808345,23.510891817862777,23.51690167428429,23.522909995250664,23.52891678193818,23.534922035521607,23.540925757174225,23.546927948067818,23.55292860937267,23.558927742257584,23.56492534788987,23.570921427435348,23.576915982058367,23.582909012921785,23.588900521186996,23.5948905080139,23.600878974560946,23.606865921985097,23.612851351441858,23.618835264085273,23.624817661067915,23.6307985435409,23.6367779126539,23.642755769555116,23.648732115391304,23.654706951307777,23.660680278448396,23.666652097955577,23.67262241097031,23.678591218632118,23.684558522079115,23.69052432244797,23.69648862087392,23.70245141849078,23.708412716430935,23.714372515825342,23.72033081780355,23.726287623493675,23.73224293402243,23.738196750515108,23.74414907409559,23.75009990588635,23.75604924700846,23.76199709858158,23.767943461723988,23.773888337552535,23.779831727182696,23.785773631728553,23.79171405230278,23.797652990016683,23.80359044598017,23.809526421301765,23.81546091708861,23.821393934446483,23.827325474479757,23.833255538291457,23.839184126983223,23.845111241655324,23.851036883406675,23.85696105333481,23.86288375253591,23.868804982104795,23.874724743134927,23.880643036718414,23.886559863946,23.892475225907095,23.898389123689757,23.904301558380684,23.91021253106525,23.91612204282747,23.922030094750035,23.927936687914293,23.933841823400254,23.939745502286602,23.945647725650687,23.951548494568538,23.957447810114846,23.963345673362998,23.969242085385044,23.975137047251717,23.98103056003245,23.986922624795344,23.992813242607195,23.99870241453349,24.00459014163841,24.01047642498483,24.016361265634323,24.022244664647165,24.028126623082322,24.03400714199748,24.039886222449024,24.045763865492038,24.051640072180337,24.057514843566437,24.063388180701565,24.069260084635676,24.075130556417438,24.080999597094245,24.086867207712203,24.092733389316166,24.09859814294969,24.10446146965509,24.110323370473385,24.11618384644435,24.12204289860649,24.12790052799705,24.133756735652007,24.139611522606096,24.145464889892793,24.151316838544307,24.157167369591622,24.163016484064457,24.168864182991285,24.174710467399343,24.180555338314623,24.186398796761875,24.192240843764612,24.198081480345113,24.20392070752442,24.209758526322354,24.215594937757494,24.221429942847195,24.22726354260759,24.2330957380536,24.238926530198896,24.244755920055955,24.250583908636028,24.25641049694915,24.262235686004153,24.268059476808645,24.273881870369028,24.279702867690506,24.28552246977707,24.291340677631514,24.297157492255423,24.302972914649192,24.308786945812017,24.314599586741892,24.32041083843563,24.326220701888854,24.332029178095983,24.33783626805026,24.343641972743747,24.34944629316731,24.355249230310655,24.361050785162288,24.366850958709552,24.372649751938603,24.378447165834444,24.384243201380883,24.390037859560575,24.395831141355004,24.40162304774449,24.40741357970818,24.413202738224083,24.41899052426902,24.424776938818674,24.43056198284757,24.43634565732907,24.442127963235396,24.447908901537616,24.45368847320564,24.459466679208255,24.46524352051308,24.47101899808661,24.476793112894185,24.482565865900018,24.488337258067176,24.4941072903576,24.499875963732098,24.505643279150338,24.51140923757087,24.51717383995111,24.522937087247346,24.528698980414752,24.534459520407378,24.54021870817814,24.54597654467886,24.55173303086023,24.557488167671824,24.56324195606211,24.56899439697845,24.574745491367086,24.58049524017316,24.586243644340705,24.59199070481266,24.597736422530843,24.603480798436,24.609223833467755,24.614965528564642,24.620705884664112,24.626444902702513,24.632182583615098,24.63791892833604,24.643653937798423,24.64938761293424,24.655119954674415,24.660850963948768,24.666580641686057,24.672308988813953,24.678036006259052,24.683761694946874,24.68948605580187,24.695209089747415,24.700930797705816,24.706651180598314,24.71237023934508,24.718087974865227,24.723804388076793,24.72951947989677,24.735233251241073,24.74094570302458,24.7466568361611,24.752366651563385,24.758075150143146,24.76378233281104,24.769488200476662,24.77519275404857,24.78089599443429,24.78659792254027,24.79229853927195,24.79799784553371,24.803695842228894,24.80939253025981,24.815087910527733,24.8207819839329,24.826474751374516,24.832166213750764,24.837856371958775,24.843545226894683,24.849232779453576,24.85491903052952,24.86060398101556,24.866287631803733,24.871969983785032,24.877651037849454,24.883330794885968,24.88900925578254,24.894686421426105,24.900362292702603,24.906036870496962,24.911710155693093,24.917382149173914,24.92305285182133,24.92872226451624,24.93439038813855,24.94005722356716,24.94572277167997,24.951387033353903,24.957050009464854,24.96271170088775,24.96837210849651,24.974031233164077,24.979689075762398,24.98534563716243,24.99100091823415,24.99665491984654,25.002307642867624,25.007959088164416,25.013609256602965,25.019258149048344,25.024905766364643,25.03055210941498,25.036197179061503,25.041840976165382,25.047483501586818,25.053124756185053,25.058764740818347,25.064403456344003,25.070040903618356,25.07567708349679,25.081311996833705,25.086945644482565,25.092578027295865,25.09820914612514,25.103839001820976,25.109467595233006,25.115094927209906,25.120720998599406,25.126345810248285,25.131969363002373,25.137591657706558,25.143212695204777,25.148832476340033,25.154451001954378,25.160068272888925,25.165684289983858,25.17129905407841,25.17691256601089,25.182524826618668,25.188135836738173,25.19374559720492,25.19935410885348,25.204961372517495,25.210567389029695,25.216172159221866,25.22177568392488,25.227377963968685,25.232979000182304,25.23857879339384,25.244177344430497,25.249774654118525,25.25537072328329,25.260965552749227,25.26655914333987,25.27215149587783,25.27774261118481,25.283332490081616,25.288921133388136,25.294508541923353,25.30009471650535,25.305679657951302,25.311263367077483,25.316845844699277,25.322427091631155,25.328007108686695,25.33358589667859,25.339163456418618,25.34473978871768,25.35031489438578,25.35588877423203,25.361461429064654,25.367032859690994,25.372603066917495,25.378172051549722,25.38373981439236,25.389306356249204,25.394871677923174,25.400435780216313,25.405998663929772,25.411560329863843,25.41712077881793,25.42268001159057,25.428238028979415,25.433794831781267,25.439350420792035,25.44490479680677,25.45045796061966,25.45600991302402,25.461560654812292,25.46711018677608,25.472658509706093,25.478205624392206,25.483751531623422,25.489296232187883,25.494839726872883,25.500382016464854,25.505923101749378,25.511462983511176,25.517001662534128,25.52253913960125,25.528075415494726,25.533610490995873,25.539144366885182,25.544677043942276,25.550208522945947,25.555738804674153,25.561267889903988,25.56679577941172,25.572322473972783,25.577847974361756,25.583372281352396,25.588895395717625,25.594417318229514,25.599938049659325,25.605457590777473,25.610975942353544,25.616493105156305,25.622009079953685,25.627523867512785,25.633037468599888,25.638549883980456,25.644061114419117,25.649571160679685,25.655080023525155,25.660587703717695,25.666094202018666,25.671599519188604,25.67710365598723,25.682606613173462,25.68810839150539,25.6936089917403,25.69910841463467,25.70460666094416,25.710103731423633,25.71559962682713,25.721094347907908,25.7265878954184,25.732080270110245,25.73757147273428,25.743061504040536,25.74855036477825,25.754038055695858,25.759524577541,25.765009931060522,25.770494117000467,25.775977136106093,25.781458989121862,25.786939676791444,25.792419199857722,25.797897559062786,25.803374755147942,25.808850788853707,25.81432566091981,25.8197993720852,25.825271923088046,25.830743314665725,25.836213547554845,25.841682622491223,25.847150540209906,25.85261730144516,25.858082906930477,25.863547357398566,25.869010653581377,25.874472796210075,25.879933786015055,25.88539362372595,25.89085231007161,25.89630984578013,25.90176623157883,25.907221468194262,25.912675556352223,25.91812849677774,25.92358029019508,25.929030937327745,25.934480438898476,25.93992879562926,25.945376008241322,25.950822077455133,25.95626700399041,25.961710788566105,25.967153431900424,25.972594934710827,25.978035297714005,25.983474521625915,25.988912607161765,25.994349555035996,25.99978536596232,26.0052200406537,26.01065357982235,26.016085984179742,26.021517254436606,26.02694739130293,26.03237639548796,26.03780426770021,26.043231008647442,26.04865661903669,26.054081099574255,26.059504450965694,26.064926673915835,26.070347769128773,26.07576773730787,26.08118657915576,26.086604295374336,26.09202088666478,26.097436353727538,26.10285069726232,26.108263917968127,26.113676016543224,26.11908699368516,26.12449685009075,26.129905586456104,26.1353132034766,26.1407197018469,26.146125082260948,26.151529345411973,26.15693249199248,26.16233452269427,26.167735438208418,26.1731352392253,26.178533926434568,26.183931500525162,26.18932796218533,26.19472331210259,26.200117550963757,26.205510679454953,26.210902698261577,26.21629360806833,26.221683409559212,26.227072103417512,26.23245969032583,26.23784617096605,26.24323154601937,26.248615816166282,26.25399898208658,26.25938104445936,26.26476200396303,26.27014186127529,26.275520617073163,26.28089827203296,26.286274826830326,26.291650282140182,26.29702463863679,26.302397896993703,26.307770057883793,26.31314112197925,26.318511089951574,26.323879962471572,26.32924774020938,26.334614423834445,26.339980014015527,26.34534451142072,26.350707916717422,26.356070230572364,26.361431453651583,26.36679158662046,26.372150630143686,26.377508584885273,26.38286545150857,26.388221230676255,26.393575923050317,26.39892952929209,26.404282050062225,26.409633486020713,26.414983837826874,26.42033310613936,26.42568129161615,26.43102839491457,26.43637441669127,26.441719357602242,26.447063218302812,26.45240599944765,26.457747701690753,26.46308832568547,26.46842787208449,26.473766341539836,26.479103734702875,26.48444005222433,26.48977529475425,26.495109462942043,26.50044255743646,26.505774578885596,26.511105527936895,26.516435405237157,26.521764211432522,26.52709194716849,26.53241861308991,26.537744209840977,26.543068738065248,26.548392198405633,26.553714591504395,26.559035918003158,26.564356178542898,26.569675373763953,26.57499350430602,26.580310570808148,26.585626573908762,26.59094151424564,26.59625539245592,26.601568209176108,26.606879965042076,26.612190660689055,26.61750029675165,26.62280887386383,26.628116392658924,26.63342285376965,26.63872825782807,26.64403260546564,26.649335897313176,26.654638134000862,26.659939316158265,26.66523944441433,26.670538519397358,26.67583654173504,26.681133512054448,26.68642943098202,26.69172429914358,26.697018117164323,26.702310885668837,26.707602605281085,26.712893276624406,26.71818290032153,26.723471476994565,26.728759007265015,26.73404549175375,26.739330931081042,26.744615325866548,26.749898676729302,26.755180984287744,26.76046224915969,26.76574247196235,26.77102165331233,26.776299793825626,26.781576894117613,26.786852954803088,26.792127976496218,26.797401959810575,26.802674905359133,26.80794681375425,26.81321768560769,26.818487521530614,26.82375632213359,26.829024088026575,26.83429081981893,26.839556518119426,26.844821183536226,26.850084816676905,26.85534741814844,26.86060898855721,26.86586952850901,26.871129038609027,26.87638751946187,26.881644971671545,26.88690139584148,26.892156792574504,26.897411162472853,26.90266450613819,26.907916824171583,26.913168117173505,26.918418385743855,26.923667630481944,26.9289158519865,26.934163050855656,26.93940922768698,26.94465438307745,26.949898517623463,26.95514163192083,26.9603837265648,26.965624802150025,26.970864859270584,26.976103898519987,26.98134192049116,26.98657892577646,26.99181491496766,26.997049888655962,27.002283847432004,27.00751679188584,27.01274872260696,27.017979640184283,27.02320954520615,27.02843843826034,27.03366631993407,27.03889319081397,27.044119051486117,27.049343902536027,27.05456774454863,27.059790578108316,27.065012403798896,27.07023322220362,27.075453033905173,27.080671839485692,27.085889639526734,27.091106434609312,27.096322225313873,27.1015370122203,27.10675079590793,27.111963576955535,27.117175355941335,27.122386133442987,27.127595910037602,27.132804686301732,27.138012462811375,27.143219240141985,27.148425018868448,27.153629799565117,27.158833582805784,27.16403636916369,27.16923815921153,27.174438953521456,27.17963875266507,27.184837557213417,27.190035367737014,27.195232184805814,27.20042800898924,27.20562284085617,27.210816680974926,27.2160095299133,27.221201388238544,27.226392256517357,27.23158213531591,27.236771025199833,27.241958926734206,27.247145840483586,27.25233176701198,27.25751670688287,27.262700660659192,27.267883628903352,27.273065612177227,27.278246611042146,27.28342662605892,27.288605657787816,27.293783706788577,27.29896077362041,27.304136858842,27.309311963011496,27.31448608668651,27.31965923042415,27.324831394780972,27.33000258031302,27.335172787575804,27.340342017124314,27.34551026951301,27.350677545295838,27.35584384502621,27.36100916925702,27.36617351854064,27.37133689342893,27.376499294473206,27.38166072222429,27.386821177232466,27.391980660047516,27.39713917121869,27.402296711294728,27.407453280823855,27.412608880353776,27.417763510431683,27.422917171604254,27.428069864417655,27.433221589417535,27.43837234714903,27.443522138156776,27.448670962984885,27.45381882217696,27.4589657162761,27.464111645824897,27.469256611365424,27.474400613439258,27.479543652587463,27.484685729350595,27.489826844268713,27.49496699788136,27.500106190727582,27.50524442334592,27.510381696274415,27.515518010050595,27.5206533652115,27.52578776229366,27.53092120183311,27.53605368436538,27.541185210425507,27.546315780548024,27.551445395266967,27.556574055115885,27.561701760627813,27.566828512335302,27.571954310770412,27.57707915646469,27.582203049949214,27.58732599175455,27.59244798241078,27.597569022447484,27.60268911239377,27.60780825277823,27.61292644412899,27.618043686973678,27.623159981839425,27.62827532925288,27.633389729740212,27.63850318382709,27.643615692038704,27.648727254899764,27.653837872934478,27.65894754666659,27.664056276619345,27.669164063315513,27.674270907277375,27.679376809026742,27.68448176908493,27.68958578797278,27.694688866210658,27.699791004318445,27.70489220281554,27.709992462220878,27.715091783052898,27.72019016582957,27.725287611068403,27.7303841192864,27.735479691000112,27.740574326725614,27.745668026978493,27.750760792273873,27.75585262312641,27.760943520050283,27.76603348355919,27.771122514166375,27.776210612384602,27.781297778726167,27.786384013702893,27.79146931782615,27.796553691606817,27.801637135555325,27.806719650181634,27.81180123599523,27.81688189350514,27.82196162321993,27.82704042564769,27.832118301296063,27.837195250672217,27.84227127428285,27.847346372634224,27.852420546232118,27.857493795581853,27.862566121188294,27.867637523555853,27.872708003188468,27.877777560589635,27.882846196262378,27.887913910709273,27.892980704432432,27.898046577933528,27.90311153171375,27.908175566273858,27.91323868211415,27.918300879734463,27.923362159634188,27.928422522312264,27.933481968267174,27.93854049799695,27.94359811199918,27.948654810770993,27.95371059480907,27.95876546460965,27.963819420668518,27.968872463481006,27.97392459354201,27.97897581134597,27.984026117386883,27.989075512158305,27.994123996153338,27.999171569864643,28.00421823378444,28.009263988404502,28.01430883421616,28.019352771710306,28.024395801377388,28.029437923707405,28.034479139189926,28.039519448314085,28.044558851568553,28.049597349441587,28.054634942420993,28.05967163099414,28.06470741564796,28.069742296868956,28.07477627514318,28.079809350956264,28.084841524793394,28.08987279713932,28.09490316847837,28.09993263929443,28.10496121007095,28.109988881290956,28.115015653437037,28.12004152699135,28.125066502435622,28.130090580251156,28.135113760918813,28.140136044919036,28.145157432731835,28.150177924836786,28.155197521713053,28.160216223839356,28.165234031693995,28.170250945754848,28.175266966499365,28.180282094404568,28.185296329947057,28.190309673603014,28.195322125848183,28.200333687157894,28.205344358007064,28.21035413887017,28.215363030221276,28.220371032534036,28.22537814628166,28.230384371936964,28.235389709972328,28.240394160859715,28.24539772507068,28.25040040307635,28.255402195347436,28.26040310235424,28.26540312456664,28.270402262454102,28.275400516485675,28.280397887129997,28.28539437485529,28.29038998012936,28.2953847034196,28.300378545193002,28.30537150591613,28.310363586055143,28.315354786075797,28.320345106443423,28.32533454762295,28.330323110078904,28.335310794275383,28.340297600676102,28.345283529744343,28.350268581943,28.355252757734547,28.360236057581066,28.36521848194421,28.370200031285254,28.375180706065052,28.38016050674405,28.385139433782303,28.390117487639454,28.395094668774746,28.400070977647015,28.405046414714704,28.41002098043585,28.414994675268083,28.419967499668644,28.42493945409436,28.42991053900168,28.434880754846628,28.439850102084847,28.444818581171578,28.449786192561664,28.454752936709546,28.45971881406928,28.464683825094518,28.469647970238512,28.474611249954126,28.479573664693834,28.4845352149097,28.48949590105342,28.49445572357626,28.499414682929128,28.50437277956252,28.509330013926547,28.514286386470932,28.519241897645,28.524196547897684,28.529150337677542,28.534103267432727,28.53905533761101,28.54400654865977,28.548956901026003,28.553906395156314,28.558855031496922,28.56380281049366,28.56874973259197,28.57369579823692,28.57864100787318,28.583585361945044,28.588528860896417,28.59347150517082,28.5984132952114,28.60335423146091,28.608294314361718,28.613233544355825,28.61817192188484,28.62310944738999,28.62804612131213,28.63298194409173,28.637916916168873,28.642851037983277,28.647784309974273,28.652716732580817,28.657648306241477,28.66257903139446,28.66750890847759,28.672437937928304,28.677366120183677,28.682293455680405,28.687219944854807,28.69214558814283,28.697070385980034,28.701994338801626,28.70691744704243,28.711839711136893,28.716761131519092,28.721681708622743,28.726601442881172,28.731520334727346,28.73643838459386,28.74135559291294,28.74627196011643,28.75118748663583,28.75610217290224,28.761016019346417,28.765929026398744,28.770841194489226,28.77575252404751,28.780663015502874,28.78557266928423,28.79048148582013,28.79538946553875,28.80029660886791,28.80520291623506,28.81010838806729,28.815013024791323,28.819916826833527,28.824819794619888,28.829721928576056,28.834623229127295,28.839523696698524,28.8444233317143,28.849322134598804,28.854220105775877,28.85911724566899,28.864013554701256,28.868909033295424,28.873803681873895,28.878697500858706,28.883590490671537,28.888482651733714,28.893373984466198,28.898264489289602,28.903154166624184,28.908043016889838,28.91293104050611,28.917818237892188,28.922704609466912,28.927590155648755,28.932474876855856,28.93735877350598,28.942241846016557,28.94712409480466,28.952005520287,28.956886122879947,28.96176590299952,28.966644861061386,28.97152299748086,28.97640031267291,28.981276807052154,28.986152481032864,28.991027335028956,28.995901369454003,29.00077458472123,29.00564698124352,29.0105185594334,29.015389319703054,29.020259262464325,29.025128388128707,29.029996697107343,29.034864189811042,29.039730866650263,29.04459672803512,29.049461774375388,29.054326006080494,29.059189423559523,29.064052027221223,29.068913817473994,29.073774794725896,29.07863495938465,29.08349431185764,29.088352852551896,29.09321058187412,29.098067500230677,29.10292360802758,29.107778905670518,29.112633393564828,29.11748707211552,29.122339941727258,29.127192002804374,29.132043255750865,29.13689370097039,29.141743338866267,29.14659216984148,29.15144019429869,29.156287412640207,29.16113382526801,29.165979432583754,29.17082423498875,29.17566823288398,29.18051142667009,29.1853538167474,29.190195403515894,29.195036187375223,29.19987616872471,29.204715347963344,29.20955372548978,29.21439130170236,29.21922807699907,29.22406405177759,29.228899226435257,29.233733601369085,29.23856717697576,29.24339995365164,29.248231931792752,29.2530631117948,29.257893494053157,29.26272307896287,29.267551866918673,29.272379858314956,29.27720705354579,29.28203345300493,29.286859057085795,29.291683866181483,29.296507880684775,29.30133110098812,29.30615352748364,29.310975160563153,29.315796000618143,29.32061604803977,29.32543530321887,29.33025376654597,29.335071438411266,29.33988831920464,29.344704409315646,29.34951970913353,29.35433421904721,29.359147939445286,29.363960870716042,29.36877301324744,29.37358436742713,29.378394933642443,29.383204712280385,29.38801370372766,29.392821908370642,29.397629326595393,29.402435958787663,29.407241805332887,29.41204686661618,29.416851143022345,29.421654634935873,29.426457342740935,29.431259266821396,29.436060407560802,29.440860765342393,29.44566034054909,29.450459133563502,29.45525714476793,29.460054374544367,29.464850823274485,29.46964649133965,29.47444137912093,29.479235486999052,29.48402881535447,29.488821364567304,29.493613135017377,29.498404127084196,29.503194341146965,29.50798377758458,29.512772436775627,29.517560319098383,29.522347424930828,29.527133754650624,29.531919308635135,29.536704087261413,29.54148809090621,29.54627131994597,29.551053774756838,29.55583545571464,29.560616363194917,29.56539649757289,29.570175859223493,29.57495444852134,29.579732265840754,29.584509311555752,29.58928558604005,29.594061089667058,29.598835822809892,29.603609785841364,29.608382979133985,29.61315540305996,29.617927057991206,29.622697944299336,29.627468062355657,29.632237412531186,29.63700599519664,29.641773810722427,29.64654085947867,29.65130714183519,29.656072658161516,29.66083740882687,29.665601394200184,29.67036461465009,29.67512707054493,29.679888762252748,29.684649690141292,29.68940985457801,29.694169255930063,29.69892789456432,29.703685770847343,29.708442885145416,29.713199237824522,29.71795482925035,29.722709659788297,29.72746372980347,29.73221703966069,29.736969589724467,29.741721380359042,29.74647241192835,29.751222684796048,29.755972199325488,29.760720955879744,29.765468954821593,29.77021619651353,29.774962681317753,29.779708409596175,29.784453381710428,29.78919759802184,29.79394105889146,29.79868376468006,29.803425715748105,29.808166912455786,29.812907355163002,29.81764704422937,29.822385980014225,29.827124162876604,29.831861593175272,29.836598271268695,29.84133419751507,29.846069372272307,29.850803795898013,29.85553746874954,29.86027039118394,29.865002563557976,29.869733986228148,29.87446465955066,29.879194583881436,29.883923759576117,29.888652186990072,29.893379866478377,29.898106798395837,29.902832983096964,29.907558420936002,29.912283112266916,29.917007057443378,29.921730256818794,29.926452710746286,29.931174419578696,29.93589538366859,29.940615603368258,29.945335079029707,29.950053811004672,29.95477179964461,29.9594890453007,29.964205548323836,29.96892130906465,29.973636327873496,29.978350605100445,29.983064141095294,29.987776936207574,29.992488990786534,29.997200305181142,30.001910879740112,30.006620714811863,30.011329810744556,30.01603816788607,30.020745786584012,30.025452667185718,30.03015881003826,30.03486421548842,30.039568883882726,30.044272815567425,30.04897601088849,30.053678470191638,30.058380193822302,30.063081182125647,30.067781435446573,30.07248095412971,30.07717973851941,30.081877788959762,30.086575105794598,30.09127168936746,30.095967540021636,30.100662658100145,30.10535704394573,30.110050697900878,30.114743620307802,30.119435811508456,30.124127271844515,30.128818001657397,30.133508001288256,30.13819727107797,30.142885811367165,30.147573622496196,30.15226070480515,30.156947058633857,30.161632684321876,30.166317582208507,30.171001752632783,30.17568519593348,30.1803679124491,30.185049902517893,30.18973116647785,30.19441170466668,30.199091517421856,30.20377060508057,30.208448967979763,30.213126606456107,30.217803520846022,30.222479711485665,30.22715517871093,30.231829922857457,30.23650394426062,30.24117724325553,30.24584982017706,30.2505216753598,30.255192809138094,30.25986322184603,30.264532913817426,30.269201885385854,30.273870136884632,30.27853766864681,30.283204481005175,30.287870574292285,30.292535948840413,30.297200604981597,30.301864543047603,30.306527763369957,30.311190266279915,30.315852052108493,30.32051312118644,30.32517347384426,30.329833110412196,30.334492031220243,30.339150236598137,30.343807726875365,30.348464502381162,30.35312056344451,30.357775910394132,30.36243054355851,30.367084463265865,30.371737669844173,30.376390163621153,30.381041944924277,30.385693014080765,30.39034337141759,30.39499301726147,30.39964195193887,30.40429017577602,30.408937689098885,30.413584492233188,30.4182305855044,30.42287596923775,30.427520643758214,30.43216460939052,30.436807866459144,30.441450415288323,30.446092256202043,30.450733389524043,30.455373815577815,30.460013534686606,30.46465254717341,30.46929085336099,30.473928453571855,30.47856534812826,30.483201537352226,30.487837021565525,30.49247180108969,30.497105876246,30.5017392473555,30.506371914738978,30.511003878716995,30.515635139609856,30.52026569773763,30.52489555342014,30.529524706976968,30.53415315872745,30.53878090899068,30.543407958085524,30.54803430633059,30.552659954044245,30.55728490154463,30.561909149149628,30.566532697176893,30.571155545943835,30.575777695767623,30.58039914696519,30.585019899853226,30.589639954748183,30.59425931196627,30.598877971823462,30.6034959346355,30.608113200717874,30.61272977038585,30.61734564395445,30.62196082173846,30.626575304052416,30.631189091210643,30.635802183527204,30.64041458131594,30.645026284890456,30.649637294564112,30.654247610650042,30.658857233461134,30.663466163310055,30.66807440050922,30.672681945370826,30.67728879820682,30.681894959328933,30.686500429048643,30.691105207677207,30.695709295525642,30.70031269290474,30.704915400125046,30.709517417496883,30.714118745330346,30.718719383935284,30.723319333621323,30.727918594697854,30.732517167474036,30.737115052258808,30.741712249360855,30.746308759088656,30.75090458175044,30.755499717654217,30.760094167107763,30.764687930418624,30.76928100789412,30.773873399841335,30.778465106567133,30.783056128378142,30.78764646558076,30.79223611848116,30.796825087385294,30.80141337259887,30.806000974427384,30.810587893176095,30.815174129150037,30.819759682654016,30.82434455399262,30.828928743470197,30.833512251390875,30.83809507805856,30.842677223776928,30.847258688849426,30.851839473579286,30.8564195782695,30.860999003222847,30.865577748741885,30.87015581512893,30.874733202686087,30.879309911715243,30.88388594251804,30.888461295395924,30.893035970650093,30.89760996858153,30.90218328949101,30.906755933679058,30.911327901446004,30.915899193091935,30.920469808916728,30.925039749220037,30.929609014301292,30.934177604459702,30.938745519994253,30.943312761203718,30.94787932838664,30.952445221841355,30.95701044186596,30.961574988758347,30.966138862816187,30.970702064336923,30.975264593617787,30.97982645095579,30.984387636647725,30.988948150990165,30.99350799427947,30.998067166811765,31.00262566888298,31.00718350078882,31.01174066282476,31.016297155286075,31.020852978467815,31.025408132664815,31.029962618171687,31.034516435282843,31.039069584292456,31.043622065494507,31.048173879182748,31.05272502565072,31.05727550519174,31.061825318098922,31.066374464665163,31.07092294518314,31.07547075994532,31.080017909243953,31.084564393371082,31.089110212618525,31.093655367277904,31.09819985764061,31.10274368399783,31.107286846640534,31.111829345859487,31.116371181945237,31.120912355188118,31.125452865878252,31.12999271430556,31.134531900759736,31.13907042553027,31.143608288906446,31.14814549117733,31.152682032631784,31.15721791355845,31.161753134245767,31.166287694981964,31.170821596055063,31.175354837752867,31.179887420362977,31.184419344172788,31.188950609469476,31.193481216540015,31.198011165671172,31.202540457149503,31.20706909126136,31.211597068292875,31.216124388529987,31.220651052258425,31.225177059763706,31.22970241133114,31.234227107245832,31.238751147792684,31.24327453325639,31.24779726392143,31.252319340072088,31.256840761992443,31.26136152996636,31.265881644277506,31.27040110520934,31.274919913045117,31.279438068067883,31.28395557056049,31.288472420805576,31.292988619085577,31.29750416568273,31.302019060879065,31.306533304956407,31.31104689819638,31.315559840880404,31.320072133289695,31.32458377570528,31.329094768407955,31.333605111678338,31.338114805796845,31.342623851043673,31.347132247698834,31.35163999604213,31.356147096353165,31.36065354891134,31.36515935399586,31.36966451188572,31.374169022859725,31.378672887196473,31.38317610517437,31.387678677071612,31.3921806031662,31.396681883735944,31.401182519058437,31.405682509411086,31.4101818550711,31.414680556315485,31.41917861342105,31.423676026664403,31.428172796321956,31.432668922669926,31.437164405984333,31.44165924654099,31.446153444615526,31.450647000483368,31.45513991441974,31.459632186699675,31.464123817598015,31.468614807389393,31.473105156348257,31.47759486474886,31.482083932865248,31.48657236097128,31.491060149340623,31.495547298246738,31.5000338079629,31.50451967876219,31.50900491091749,31.513489504701493,31.517973460386685,31.522456778245378,31.52693945854967,31.531421501571486,31.535902907582543,31.54038367685437,31.5448638096583,31.549343306265477,31.553822166946855,31.558300391973187,31.562777981615042,31.567254936142795,31.57173125582663,31.576206940936537,31.58068199174231,31.585156408513562,31.589630191519714,31.594103341029985,31.59857585731342,31.60304774063886,31.60751899127496,31.61198960949019,31.616459595552822,31.620928949730942,31.625397672292454,31.629865763505055,31.634333223636272,31.63880005295343,31.643266251723674,31.647731820213956,31.652196758691037,31.656661067421492,31.661124746671714,31.665587796707904,31.670050217796074,31.674512010202044,31.678973174191455,31.68343371002976,31.687893617982226,31.692352898313924,31.696811551289752,31.70126957717441,31.70572697623242,31.710183748728113,31.71463989492564,31.719095415088958,31.723550309481848,31.728004578367894,31.73245822201051,31.736911240672917,31.741363634618146,31.745815404109052,31.75026654940831,31.75471707077839,31.7591669684816,31.76361624278006,31.768064893935698,31.77251292221026,31.77696032786532,31.781407111162256,31.78585327236227,31.79029881172638,31.794743729515417,31.79918802599004,31.80363170141072,31.808074756037737,31.81251719013121,31.816959003951055,31.821400197757022,31.825840771808668,31.830280726365377,31.834720061686355,31.83915877803062,31.843596875657003,31.848034354824176,31.852471215790608,31.856907458814604,31.861343084154285,31.865778092067586,31.870212482812267,31.874646256645914,31.87907941382592,31.883511954609517,31.887943879253747,31.89237518801547,31.89680588115138,31.90123595891798,31.905665421571605,31.910094269368404,31.91452250256436,31.918950121415257,31.923377126176728,31.92780351710421,31.93222929445297,31.936654458478095,31.9410790094345,31.945502947576916,31.94992627315991,31.95434898643786,31.958771087664974,31.96319257709529,31.967613454982647,31.972033721580743,31.97645337714307,31.980872421922964,31.98529085617358,31.989708680147896,31.994125894098715,31.998542498278674,32.00295849294022,32.00737387833565,32.01178865471705,32.01620282233638,32.020616381445386,32.02502933229565,32.0294416751386,32.03385341022546,32.038264537807315,32.04267505813505,32.0470849714594,32.051494278030894,32.05590297809992,32.060311071916686,32.064718559731226,32.0691254417934,32.073531718352896,32.077937389659226,32.08234245596175,32.086746917509636,32.09115077455189,32.09555402733736,32.09995667611468,32.104358721132364,32.10876016263873,32.11316100088194,32.11756123610996,32.12196086857061,32.12635989851154,32.13075832618021,32.13515615182392,32.13955337568982,32.14394999802488,32.14834601907588,32.15274143908946,32.15713625831207,32.16153047699001,32.1659240953694,32.170317113696186,32.17470953221617,32.17910135117497,32.183492570818025,32.18788319139063,32.192273213137895,32.19666263630478,32.20105146113606,32.20543968787635,32.2098273167701,32.2142143480616,32.21860078199496,32.22298661881413,32.2273718587629,32.23175650208489,32.236140549023546,32.24052399982215,32.244906854723844,32.249289113971564,32.25367077780812,32.25805184647613,32.26243232021805,32.26681219927619,32.27119148389268,32.27557017430948,32.2799482707684,32.28432577351109,32.28870268277902,32.29307899881349,32.29745472185568,32.30182985214655,32.30620438992693,32.3105783354375,32.314951688918725,32.319324450610964,32.323696620754376,32.32806819958898,32.332439187354616,32.33680958429098,32.341179390637585,32.3455486066338,32.34991723251882,32.35428526853169,32.35865271491127,32.36301957189631,32.36738583972533,32.37175151863674,32.37611660886878,32.3804811106595,32.384845024246836,32.38920834986854,32.39357108776218,32.397933238165216,32.4022948013149,32.406655777448364,32.41101616680254,32.41537596961424,32.419735186120086,32.42409381655656,32.42845186115997,32.432809320166484,32.4371661938121,32.441522482332644,32.44587818596382,32.45023330494114,32.45458783949998,32.45894178987553,32.463295156302856,32.46764793901685,32.47200013825224,32.47635175424361,32.480702787225376,32.485053237431806,32.489403105097004,32.49375239045493,32.498101093739365,32.50244921518396,32.50679675502218,32.511143713487364,32.515490090812676,32.51983588723113,32.52418110297558,32.52852573827874,32.532869793373145,32.53721326849119,32.54155616386512,32.545898479727,32.550240216308765,32.5545813738422,32.5589219525589,32.56326195269033,32.56760137446782,32.571940218122506,32.5762784838854,32.580616171987344,32.584953282659036,32.58928981613101,32.59362577263365,32.5979611523972,32.60229595565173,32.60663018262718,32.61096383355331,32.61529690865975,32.619629408175975,32.62396133233129,32.62829268135487,32.63262345547572,32.636953654922706,32.64128327992453,32.64561233070976,32.649940807506795,32.654268710543896,32.658596040049154,32.662922796250534,32.66724897937583,32.67157458965269,32.675899627308624,32.680224092570974,32.68454798566694,32.68887130682357,32.69319405626776,32.69751623422626,32.70183784092568,32.70615887659245,32.710479341452874,32.71479923573311,32.71911855965916,32.723437313456856,32.72775549735192,32.7320731115699,32.7363901563362,32.74070663187608,32.74502253841464,32.74933787617684,32.7536526453875,32.757966846271266,32.76228047905268,32.766593543956084,32.77090604120571,32.775217971025626,32.77952933363976,32.78384012927189,32.78815035814565,32.79246002048451,32.79676911651182,32.80107764645076,32.805385610524375,32.80969300895558,32.8139998419671,32.81830610978155,32.822611812621396,32.82691695070894,32.831221524266354,32.83552553351566,32.83982897867873,32.844131859977296,32.848434177632946,32.852735931867116,32.8570371229011,32.86133775095605,32.86563781625298,32.869937319012735,32.87423625945604,32.878534637803476,32.88283245427546,32.88712970909227,32.89142640247406,32.89572253464083,32.900018105812414,32.904313116208534,32.90860756604876,32.9129014555525,32.91719478493904,32.92148755442753,32.92577976423695,32.930071414586145,32.934362505693834,32.938653037778586,32.94294301105881,32.94723242575281,32.9515212820787,32.955809580254495,32.96009732049804,32.96438450302706,32.96867112805912,32.97295719581165,32.97724270650195,32.981527660347155,32.985812057564274,32.99009589837018,32.994379182981596,32.99866191161511,33.00294408448717,33.007225701814065,33.011506763811965,33.015787270696904,33.02006722268475,33.02434661999126,33.02862546283204,33.03290375142254,33.03718148597809,33.04145866671388,33.045735293844956,33.05001136758623,33.054286888152454,33.05856185575827,33.06283627061816,33.06711013294649,33.071383442957455,33.07565620086515,33.0799284068835,33.08420006122629,33.08847116410721,33.09274171573976,33.097011716337335,33.10128116611319,33.10555006528041,33.10981841405199,33.11408621264076,33.11835346125941,33.122620160120505,33.12688630943648,33.1311519094196,33.135416960282036,33.1396814622358,33.14394541549276,33.148208820264664,33.15247167676311,33.15673398519958,33.1609957457854,33.16525695873176,33.169517624249735,33.17377774255025,33.17803731384409,33.182296338341914,33.186554816254244,33.190812747791455,33.19507013316381,33.199326972581424,33.20358326625428,33.20783901439221,33.21209421720494,33.216348874902046,33.22060298769296,33.22485655578701,33.22910957939336,33.23336205872105,33.237613993979,33.24186538537596,33.246116233120595,33.25036653742141,33.254616298486766,33.258865516524914,33.26311419174396,33.26736232435188,33.271609914556514,33.27585696256557,33.28010346858664,33.28434943282714,33.288594855494416,33.29283973679562,33.297084076937814,33.301327876127914,33.3055711345727,33.30981385247883,33.31405603005283,33.31829766750108,33.32253876502984,33.32677932284523,33.331019341153265,33.335258820159794,33.33949776007056,33.34373616109116,33.34797402342707,33.35221134728363,33.356448132866056,33.360684380379425,33.36492009002869,33.36915526201867,33.373389896554066,33.37762399383943,33.38185755407919,33.38609057747765,33.39032306423899,33.39455501456725,33.39878642866635,33.403017306740054,33.40724764899204,33.41147745562582,33.4157067268448,33.419935462852244,33.4241636638513,33.428391330044974,33.43261846163615,33.436845058827586,33.44107112182191,33.44529665082162,33.44952164602908,33.453746107646545,33.45797003587613,33.46219343091982,33.466416292979474,33.47063862225682,33.47486041895348,33.47908168327093,33.48330241541051,33.487522615573454,33.49174228396087,33.49596142077371,33.50018002621283,33.504398100478944,33.50861564377266,33.51283265629442,33.517049138244595,33.521265089823366,33.525480511230846,33.52969540266699,33.533909764331625,33.53812359642448,33.54233689914513,33.54654967269304,33.550761917267536,33.55497363306784,33.559184820293034,33.56339547914207,33.5676056098138,33.571815212506934,33.57602428742004,33.580232834751584,33.58444085469992,33.58864834746324,33.59285531323965,33.59706175222712,33.601267664623464,33.60547305062642,33.60967791043358,33.61388224424242,33.61808605225027,33.62228933465436,33.6264920916518,33.63069432343955,33.63489603021448,33.639097212173304,33.64329786951265,33.64749800242899,33.65169761111869,33.65589669577799,33.660095256603,33.66429329378973,33.66849080753405,33.6726877980317,33.67688426547833,33.68108021006942,33.685275632000376,33.689470531466455,33.693664908662804,33.69785876378444,33.70205209702626,33.706244908583045,33.71043719864945,33.71462896742002,33.71882021508916,33.72301094185117,33.72720114790023,33.731390833430375,33.73557999863555,33.739768643709574,33.74395676884612,33.74814437423878,33.75233146008099,33.75651802656609,33.76070407388729,33.76488960223767,33.76907461181023,33.77325910279781,33.77744307539313,33.78162652978882,33.78580946617736,33.789991884751146,33.79417378570242,33.79835516922333,33.80253603550588,33.80671638474198,33.810896217123414,33.81507553284184,33.819254332088796,33.82343261505573,33.82761038193392,33.83178763291458,33.835964368188776,33.84014058794746,33.844316292381464,33.84849148168151,33.852666156038204,33.85684031564202,33.86101396068333,33.865187091352375,33.869359707839294,33.8735318103341,33.87770339902669,33.88187447410685,33.886045035764226,33.890215084188384,33.89438461956875,33.898553642094626,33.902722151955224,33.90689014933961,33.911057634436766,33.915224607435526,33.91939106852463,33.9235570178927,33.92772245572823,33.93188738221961,33.936051797555095,33.94021570192285,33.944379095510925,33.94854197850723,33.95270435109958,33.95686621347565,33.961027565823045,33.96518840832921,33.969348741181506,33.973508564567155,33.97766787867329,33.9818266836869,33.98598497979488,33.99014276718401,33.994300046040955,33.99845681655225,34.00261307890434,34.006768833283544,34.01092407987606,34.01507881886799,34.01923305044531,34.02338677479387,34.02753999209944,34.03169270254766,34.03584490632404,34.03999660361399,34.04414779460283,34.048298479475726,34.05244865841776,34.05659833161389,34.06074749924896,34.06489616150771,34.06904431857476,34.07319197063462,34.07733911787168,34.08148576047025,34.08563189861447,34.089777532488434,34.093922662276064,34.09806728816121,34.1022114103276,34.10635502895885,34.110498144238456,34.11464075634981,34.11878286547619,34.12292447180077,34.12706557550661,34.13120617677666,34.135346275793744,34.139485872740586,34.1436249677998,34.14776356115391,34.15190165298528,34.156039243476215,34.16017633280888,34.164312921165326,34.16844900872752,34.17258459567729,34.17671968219638,34.180854268466405,34.18498835466887,34.18912194098519,34.19325502759664,34.197387614684416,34.20151970242959,34.20565129101313,34.20978238061588,34.21391297141859,34.21804306360189,34.22217265734631,34.22630175283228,34.2304303502401,34.23455844974997,34.23868605154198,34.24281315579612,34.24693976269226,34.251065872410166,34.25519148512951,34.259316601029816,34.26344122029055,34.267565343091036,34.27168896961051,34.27581210002808,34.27993473452275,34.28405687327344,34.288178516458935,34.29229966425793,34.296420316849,34.300540474410624,34.30466013712116,34.30877930515888,34.312897978701926,34.31701615792834,34.32113384301607,34.32525103414295,34.3293677314867,34.33348393522493,34.33759964553517,34.34171486259481,34.34582958658116,34.3499438176714,34.35405755604264,34.35817080187184,34.36228355533589,34.36639581661155,34.37050758587548,34.37461886330425,34.37872964907431,34.382839943362,34.38694974634356,34.39105905819514,34.39516787909276,34.399276209212346,34.40338404872973,34.407491397820614,34.41159825666062,34.41570462542524,34.41981050428989,34.423915893429864,34.42802079302035,34.43212520323644,34.43622912425312,34.44033255624526,34.44443549938764,34.44853795385493,34.452639919821706,34.456741397462416,34.46084238695144,34.464942888463014,34.4690429021713,34.47314242825034,34.47724146687409,34.481340018216386,34.48543808245096,34.48953565975146,34.49363275029141,34.497729354244235,34.50182547178327,34.50592110308173,34.510016248312745,34.514110907649325,34.518205081264384,34.52229876933074,34.5263919720211,34.53048468950808,34.53457692196417,34.53866866956178,34.54275993247321,34.546850710870665,34.550941004926244,34.55503081481193,34.559120140699626,34.56320898276112,34.5672973411681,34.57138521609216,34.57547260770479,34.57955951617736,34.583645941681176,34.58773188438741,34.59181734446714,34.595902322091355,34.59998681743093,34.60407083065665,34.6081543619392,34.612237411449144,34.61631997935696,34.620402065833034,34.62448367104764,34.62856479517095,34.63264543837305,34.6367256008239,34.64080528269339,34.64488448415129,34.648963205367274,34.65304144651092,34.657119207751705,34.661196489259,34.665273291202084,34.66934961375014,34.67342545707224,34.67750082133737,34.6815757067144,34.68565011337211,34.68972404147919,34.69379749120421,34.69787046271566,34.701942956181924,34.70601497177129,34.71008650965194,34.714157569991954,34.718228152959334,34.72229825872196,34.72636788744764,34.73043703930406,34.734505714458805,34.73857391307939,34.74264163533321,34.746708881387555,34.75077565140964,34.75484194556657,34.75890776402535,34.7629731069529,34.767037974516015,34.77110236688142,34.77516628421574,34.77922972668549,34.783292694457096,34.787355187696875,34.79141720657106,34.79547875124579,34.799539821887095,34.80360041866091,34.80766054173309,34.811720191269366,34.81577936743538,34.819838070396706,34.823896300318786,34.82795405736697,34.83201134170654,34.83606815350265,34.840124492920374,34.844180360124675,34.84823575528045,34.852290678552464,34.85634513010541,34.86039911010389,34.86445261871238,34.86850565609528,34.872558222416906,34.87661031784146,34.88066194253305,34.88471309665571,34.88876378037334,34.89281399384978,34.89686373724876,34.900913010733916,34.90496181446879,34.90901014861683,34.913058013341384,34.91710540880572,34.921152335172984,34.92519879260627,34.92924478126853,34.93329030132265,34.93733535293141,34.94137993625752,34.94542405146356,34.94946769871204,34.953510878165375,34.957553589985864,34.96159583433574,34.96563761137712,34.96967892127205,34.97371976418246,34.977760140270206,34.98180004969704,34.98583949262461,34.9898784692145,34.993916979628175,34.99795502402701,35.001992602572294,35.00602971542523,35.01006636274691,35.014102544698346,35.01813826144045,35.02217351313404,35.02620829993986,35.03024262201854,35.034276479530625,35.03830987263657,35.04234280149673,35.046375266271376,35.05040726712068,35.05443880420474,35.05846987768353,35.06250048771695,35.066530634464826,35.070560318086855,35.07458953874267,35.078618296591806,35.0826465917937,35.08667442450769,35.09070179489305,35.09472870310894,35.09875514931445,35.102781133668536,35.106806656330114,35.11083171745797,35.11485631721082,35.118880455747295,35.12290413322591,35.12692734980511,35.13095010564324,35.134972400898555,35.13899423572922,35.14301561029332,35.14703652474883,35.151056979253646,35.15507697396558,35.15909650904234,35.16311558464155,35.16713420092075,35.17115235803738,35.175170056148794,35.17918729541226,35.183204075984946,35.18722039802394,35.191236261686235,35.195251667128744,35.19926661450828,35.20328110398157,35.207295135705245,35.211308709835855,35.215321826529866,35.21933448594364,35.22334668823347,35.22735843355553,35.23136972206594,35.2353805539207,35.23939092927574,35.243400848286896,35.247410311109924,35.25141931790047,35.25542786881412,35.259435964006336,35.263443603632524,35.26745078784799,35.271457516807956,35.27546379066754,35.279469609581795,35.28347497370566,35.28747988319401,35.29148433820162,35.29548833888318,35.2994918853933,35.30349497788648,35.307497616517146,35.31149980143965,35.315501532808234,35.31950281077707,35.323503635500224,35.327504007131694,35.33150392582538,35.3355033917351,35.33950240501458,35.343500965817455,35.347499074297296,35.35149673060755,35.35549393490162,35.35949068733277,35.36348698805424,35.367482837219136,35.371478234980486,35.37547318149125,35.37946767690429,35.38346172137237,35.387455315048186,35.39144845808434,35.39544115063335,35.39943339284765,35.40342518487958,35.4074165268814,35.411407419005286,35.41539786140332,35.41938785422751,35.42337739762977,35.42736649176193,35.431355136775736,35.435343332822846,35.43933108005484,35.443318378623204,35.44730522867935,35.45129163037458,35.45527758386013,35.45926308928716,35.463248146806734,35.46723275656983,35.471216918727336,35.47520063343006,35.47918390082874,35.483166721074,35.48714909431641,35.491131020706426,35.495112500394455,35.49909353353078,35.50307412026564,35.50705426074914,35.51103395513136,35.51501320356225,35.51899200619169,35.522970363169485,35.52694827464535,35.53092574076891,35.53490276168971,35.53887933755721,35.542855468520806,35.54683115472979,35.55080639633335,35.55478119348064,35.5587555463207,35.56272945500248,35.56670291967488,35.57067594048669,35.5746485175866,35.578620651123266,35.582592341245224,35.586563588100944,35.590534391838794,35.594504752607094,35.59847467055403,35.60244414582776,35.606413178576325,35.61038176894769,35.61434991708975,35.6183176231503,35.622284887277054,35.62625170961767,35.63021809031969,35.63418402953058,35.63814952739776,35.642114584068516,35.646079199690085,35.650043374409606,35.65400710837415,35.65797040173071,35.66193325462616,35.66589566720735,35.66985763962099,35.673819172013765,35.677780264532224,35.68174091732288,35.685701130532124,35.68966090430631,35.693620238791674,35.69757913413439,35.70153759048055,35.70549560797615,35.709453186767114,35.71341032699931,35.71736702881847,35.72132329237031,35.725279117800405,35.7292345052543,35.73318945487741,35.73714396681513,35.741098041212716,35.745051678215376,35.749004877968225,35.752957640616316,35.7569099663046,35.76086185517795,35.764813307381175,35.768764323058996,35.77271490235605,35.7766650454169,35.78061475238601,35.784564023407796,35.78851285862658,35.7924612581866,35.796409222232015,35.8003567509069,35.804303844355275,35.808250502721044,35.81219672614807,35.816142514780104,35.82008786876084,35.82403278823387,35.827977273342746,35.83192132423089,35.83586494104169,35.83980812391843,35.84375087300432,35.84769318844249,35.851635070376005,35.85557651894783,35.85951753430087,35.86345811657794,35.86739826592177,35.87133798247504,35.87527726638032,35.879216117780125,35.88315453681688,35.88709252363292,35.891030078370534,35.8949672011719,35.89890389217915,35.902840151534306,35.906775979379326,35.9107113758561,35.914646341106426,35.91858087527203,35.922514978494554,35.92644865091558,35.9303818926766,35.93431470391903,35.938247084784194,35.94217903541336,35.94611055594772,35.950041646528376,35.95397230729635,35.9579025383926,35.96183233995801,35.965761712133364,35.96969065505939,35.97361916887672,35.977547253725945,35.98147490974754,35.98540213708192,35.98932893586943,35.99325530625032,35.99718124836478,36.001106762352926,36.00503184835478,36.0089565065103,36.01288073695937,36.01680453984178,36.020727915297265,36.02465086346548,36.028573384485995,36.032495478498305,36.03641714564184,36.04033838605594,36.04425919987989,36.04817958725287,36.052099548314004,36.056019083202344,36.05993819205684,36.063856875016405,36.06777513221985,36.07169296380591,36.075610369913264,36.07952735068049,36.08344390624612,36.08736003674858,36.091275742326246,36.0951910231174,36.09910587926027,36.103020310892994,36.106934318153634,36.11084790118018,36.114761060110546,36.118673795082586,36.12258610623406,36.126497993702664,36.13040945762601,36.13432049814164,36.138231115387036,36.14214130949958,36.1460510806166,36.14996042887534,36.15386935441297,36.15777785736659,36.16168593787322,36.16559359606982,36.169500832093256,36.173407646080335,36.177314038167786,36.181220008492254,36.185125557190325,36.18903068439851,36.19293539025323,36.19683967489087,36.20074353844769,36.20464698105991,36.208550002863674,36.21245260399504,36.21635478459001,36.2202565447845,36.224157884714344,36.22805880451533,36.231959304323155,36.23585938427344,36.239759044501746,36.243658285143546,36.247557106334256,36.2514555082092,36.25535349090365,36.25925105455279,36.26314819929175,36.267044925255554,36.27094123257919,36.274837121397546,36.27873259184546,36.282627644057676,36.28652227816888,36.29041649431369,36.29431029262663,36.29820367324218,36.30209663629472,36.30598918191858,36.309881310248,36.31377302141717,36.317664315560194,36.32155519281109,36.32544565330384,36.32933569717232,36.333225324550355,36.33711453557169,36.341003330370015,36.34489170907891,36.34877967183191,36.3526672187625,36.35655435000404,36.36044106568987,36.36432736595323,36.36821325092729,36.37209872074516,36.37598377553987,36.37986841544439,36.38375264059161,36.38763645111434,36.39151984714535,36.395402828817296,36.3992853962628,36.403167549614395,36.407049289004554,36.41093061456567,36.414811526430064,36.41869202472999,36.42257210959765,36.42645178116514,36.430331039564514,36.43420988492774,36.438088317386715,36.44196633707329,36.44584394411921,36.44972113865619,36.453597920815824,36.45747429072969,36.46135024852926,36.46522579434595,36.4691009283111,36.47297565055599,36.47684996121181,36.48072386040972,36.48459734828076,36.48847042495593,36.49234309056616,36.496215345242305,36.500087189115156,36.50395862231543,36.50782964497377,36.51170025722075,36.51557045918689,36.51944025100262,36.52330963279832,36.5271786047043,36.53104716685077,36.53491531936791,36.53878306238582,36.5426503960345,36.54651732044395,36.55038383574402,36.55424994206455,36.55811563953529,36.56198092828592,36.56584580844605,36.56971028014523,36.573574343512945,36.5774379986786,36.58130124577152,36.585164084921,36.58902651625623,36.59288853990636,36.59675015600045,36.60061136466749,36.60447216603642,36.608332560236114,36.61219254739536,36.61605212764288,36.61991130110734,36.623770067917334,36.627628428201376,36.63148638208794,36.6353439297054,36.63920107118209,36.643057806646254,36.646914136226094,36.65077006004971,36.65462557824516,36.658480690940436,36.66233539826345,36.66618970034205,36.67004359730403,36.67389708927709,36.677750176388884,36.681602858767,36.68545513653894,36.68930700983217,36.69315847877406,36.69700954349192,36.700860204113,36.70471046076449,36.708560313573486,36.71240976266704,36.71625880817215,36.720107450215714,36.723955688924576,36.727803524425525,36.73165095684528,36.73549798631047,36.739344612947704,36.74319083688348,36.74703665824424,36.75088207715638,36.754727093746226,36.75857170814001,36.76241592046393,36.7662597308441,36.770103139406565,36.773946146277325,36.77778875158229,36.78163095544733,36.785472757998235,36.789314159360714,36.79315515966043,36.796995759022984,36.800835957573895,36.80467575543863,36.80851515274259,36.81235414961109,36.81619274616941,36.82003094254275,36.82386873885624,36.827706135234955,36.8315431318039,36.83537972868801,36.83921592601216,36.84305172390116,36.84688712247976,36.85072212187263,36.85455672220439,36.85839092359961,36.86222472618274,36.86605813007822,36.869891135410406,36.87372374230359,36.87755595088199,36.88138776126978,36.88521917359105,36.88905018796983,36.892880804530094,36.89671102339575,36.90054084469064,36.90437026853853,36.908199295063135,36.912027924388106,36.91585615663702,36.91968399193341,36.923511430400715,36.92733847216234,36.9311651173416,36.93499136606177,36.93881721844604,36.94264267461756,36.94646773469938,36.95029239881453,36.954116667085955,36.95794053963652,36.96176401658904,36.96558709806629,36.969409784190944,36.97323207508564,36.97705397087294,36.98087547167533,36.984696577615274,36.988517288815125,36.992337605397196,36.99615752748374,36.99997705519694,37.003796188658924,37.00761492799174,37.01143327331739,37.015251224757804,37.01906878243485,37.02288594647034,37.02670271698601,37.030519094103546,37.034335077944576,37.03815066863064,37.04196586628324,37.045780671023806,37.04959508297371,37.05340910225425,37.05722272898667,37.061035963292156,37.06484880529183,37.06866125510674,37.07247331285788,37.076284978666195,37.08009625265254,37.083907134937725,37.087717625642505,37.09152772488755,37.0953374327935,37.099146749480894,37.10295567507024,37.10676420968198,37.11057235343648,37.11438010645406,37.118187468854956,37.121994440759366,37.12580102228742,37.12960721355918,37.13341301469465,37.137218425813785,37.141023447036446,37.14482807848247,37.1486323202716,37.15243617252355,37.15623963535794,37.160042708894366,37.163845393252316,37.16764768855126,37.171449594910584,37.175251112449615,37.179052241287636,37.18285298154384,37.186653333337375,37.19045329678734,37.19425287201275,37.19805205913257,37.201850858265715,37.205649269531015,37.20944729304726,37.21324492893318,37.21704217730742,37.22083903828859,37.224635511995224,37.22843159854581,37.232227298058774,37.23602261065246,37.23981753644517,37.243612075555156,37.24740622810059,37.251199994199574,37.254993373970194,37.25878636753043,37.26257897499823,37.266371196491455,37.27016303212795,37.273954482025445,37.27774554630167,37.28153622507423,37.28532651846072,37.28911642657866,37.29290594954551,37.29669508747867,37.300483840495474,37.3042722087132,37.30806019224908,37.311847791220266,37.31563500574387,37.31942183593692,37.323208281916415,37.32699434379927,37.330780021702346,37.33456531574245,37.33835022603634,37.34213475270069,37.34591889585212,37.349702655607224,37.353486032082486,37.35726902539437,37.36105163565927,37.364833862993514,37.36861570751337,37.372397169335066,37.376178248574746,37.37995894534851,37.383739259772405,37.387519191962404,37.39129874203443,37.39507791010434,37.39885669628795,37.402635100701,37.406413123459174,37.410190764678106,37.41396802447337,37.41774490296047,37.42152140025486,37.42529751647194,37.42907325172705,37.432848606135465,37.436623579812405,37.44039817287304,37.44417238543246,37.44794621760573,37.45171966950783,37.45549274125369,37.45926543295819,37.46303774473614,37.466809676702304,37.470581228971376,37.474352401657995,37.47812319487675,37.48189360874217,37.48566364336872,37.489433298870814,37.49320257536281,37.496971472959,37.500739991773614,37.50450813192085,37.508275893514835,37.512043276669615,37.51581028149922,37.51957690811759,37.52334315663863,37.527109027176174,37.530874519844005,37.53463963475585,37.53840437202536,37.54216873176617,37.54593271409181,37.54969631911579,37.55345954695155,37.557222397712465,37.56098487151186,37.56474696846302,37.56850868867914,37.57227003227338,37.57603099935884,37.57979159004857,37.583551804455546,37.5873116426927,37.5910711048729,37.594830191108976,37.59858890151367,37.602347236199705,37.60610519527972,37.6098627788663,37.613619987071985,37.61737682000925,37.62113327779053,37.62488936052817,37.62864506833451,37.63240040132177,37.63615535960217,37.63990994328785,37.64366415249089,37.64741798732334,37.65117144789714,37.65492453432424,37.65867724671648,37.662429585185684,37.6661815498436,37.66993314080192,37.67368435817229,37.677435202066285,37.68118567259544,37.68493576987123,37.68868549400508,37.69243484510834,37.69618382329232,37.699932428668276,37.703680661347406,37.707428521440846,37.71117600905969,37.714923124314964,37.718669867317644,37.72241623817865,37.72616223700885,37.72990786391906,37.733653119020026,37.73739800242245,37.741142514236984,37.744886654574216,37.74863042354468,37.752373821258864,37.75611684782719,37.759859503360026,37.763601787967694,37.76734370176046,37.77108524484852,37.77482641734204,37.77856721935111,37.782307650985786,37.786047712356044,37.78978740357182,37.79352672474301,37.797265675979425,37.801004257390844,37.80474246908699,37.80848031117751,37.812217783772034,37.8159548869801,37.81969162091122,37.82342798567485,37.82716398138036,37.8308996081371,37.83463486605436,37.83836975524137,37.8421042758073,37.84583842786128,37.849572211512374,37.85330562686961,37.85703867404194,37.86077135313827,37.86450366426745,37.8682356075383,37.87196718305956,37.87569839093992,37.87942923128802,37.883159704212446,37.88688980982173,37.890619548224365,37.89434891952876,37.8980779238433,37.9018065612763,37.90553483193603,37.9092627359307,37.91299027336848,37.91671744435745,37.920444249005705,37.92417068742121,37.92789675971193,37.93162246598575,37.935347806350514,37.939072780914024,37.942797389784005,37.94652163306814,37.95024551087406,37.95396902330934,37.95769217048151,37.96141495249804,37.96513736946635,37.9688594214938,37.97258110868771,37.97630243115535,37.98002338900391,37.983743982340556,37.98746421127239,37.99118407590647,37.994903576349785,37.998622712709285,38.00234148509187,38.00605989360437,38.00977793835359,38.01349561944625,38.017212936989054,38.02092989108862,38.02464648185154,38.02836270938433,38.032078573793484,38.035794075185414,38.0395092136665,38.04322398934305,38.046938402321345,38.0506524527076,38.05436614060799,38.05807946612861,38.06179242937553,38.065505030454766,38.06921726947226,38.072929146533944,38.07664066174565,38.08035181521319,38.08406260704232,38.087773037338735,38.09148310620808,38.095192813755965,38.09890216008793,38.10261114530947,38.10631976952602,38.11002803284298,38.113735935365696,38.117443477199444,38.12115065844948,38.12485747922098,38.12856393961907,38.13227003974885,38.13597577971536,38.13968115962357,38.143386179578414,38.14709083968477,38.15079514004748,38.15449908077131,38.15820266196099,38.16190588372121,38.16560874615658,38.16931124937169,38.17301339347105,38.17671517855916,38.18041660474041,38.1841176721192,38.18781838079984,38.19151873088661,38.19521872248372,38.198918355695355,38.202617630625625,38.206316547378606,38.210015106058314,38.213713306768724,38.217411149613746,38.22110863469726,38.22480576212308,38.22850253199498,38.232198944416666,38.23589499949182,38.23959069732405,38.243286038016926,38.24698102167397,38.25067564839864,38.25436991829437,38.25806383146452,38.26175738801241,38.265450588041304,38.26914343165443,38.27283591895494,38.27652805004597,38.28021982503058,38.28391124401179,38.28760230709258,38.29129301437586,38.2949833659645,38.29867336196133,38.30236300246911,38.306052287590575,38.30974121742838,38.313429792085174,38.31711801166351,38.320805876265915,38.32449338599487,38.32818054095281,38.33186734124209,38.33555378696504,38.33923987822396,38.34292561512106,38.346610997758525,38.35029602623849,38.35398070066303,38.35766502113418,38.36134898775392,38.3650326006242,38.36871585984688,38.37239876552382,38.3760813177568,38.37976351664756,38.383445362297785,38.38712685480912,38.390807994283165,38.394488780821455,38.39816921452549,38.40184929549671,38.40552902383652,38.409208399646275,38.412887423027264,38.41656609408075,38.420244412907934,38.42392237960997,38.42759999428796,38.43127725704297,38.43495416797602,38.43863072718805,38.44230693477999,38.4459827908527,38.449658295507,38.45333344884366,38.4570082509634,38.460682701966896,38.464356801954764,38.468030551027596,38.47170394928591,38.475376996830185,38.47904969376086,38.48272204017832,38.4863940361829,38.49006568187489,38.49373697735453,38.49740792272201,38.50107851807749,38.50474876352106,38.50841865915277,38.512088205072615,38.51575740138056,38.519426248176515,38.523094745560336,38.52676289363183,38.530430692490775,38.53409814223688,38.53776524296981,38.5414319947892,38.54509839779461,38.548764452085585,38.55243015776159,38.55609551492207,38.559760523666405,38.56342518409394,38.56708949630396,38.57075346039571,38.574417076468386,38.57808034462114,38.58174326495308,38.585405837563265,38.58906806255069,38.59272994001432,38.596391470053085,38.60005265276584,38.6037134882514,38.60737397660856,38.61103411793603,38.6146939123325,38.618353359896595,38.622012460726914,38.625671214921994,38.62932962258033,38.63298768380036,38.63664539868049,38.640302767319085,38.643959789814446,38.64761646626482,38.651272796768446,38.65492878142347,38.658584420328026,38.66223971358019,38.665894661277996,38.66954926351941,38.673203520402375,38.67685743202479,38.680510998484486,38.68416421987927,38.6878170963069,38.69146962786506,38.69512181465143,38.69877365676361,38.70242515429918,38.706076307355644,38.70972711603049,38.71337758042115,38.717027700624996,38.720677476739375,38.72432690886157,38.72797599708883,38.73162474151836,38.73527314224731,38.73892119937278,38.74256891299185,38.74621628320152,38.749863310098775,38.75350999378053,38.75715633434368,38.76080233188503,38.7644479865014,38.76809329828952,38.771738267346095,38.77538289376777,38.779027177651145,38.7826711190928,38.78631471818924,38.789957975036934,38.79360088973231,38.79724346237176,38.800885693051605,38.804527581868136,38.808169128917605,38.811810334296204,38.81545119810009,38.819091720425384,38.82273190136814,38.82637174102437,38.83001123949005,38.833650396861124,38.83728921323346,38.84092768870292,38.84456582336527,38.84820361731628,38.85184107065165,38.855478183467035,38.859114955858054,38.86275138792028,38.866387479749235,38.8700232314404,38.873658643089215,38.877293714791065,38.880928446641306,38.88456283873524,38.88819689116813,38.89183060403517,38.89546397743155,38.899097011452376,38.90272970619275,38.90636206174769,38.9099940782122,38.913625755681224,38.917257094249656,38.92088809401237,38.92451875506416,38.928149077499825,38.93177906141407,38.93540870690158,38.939038014057,38.942666982974906,38.94629561374987,38.949923906476386,38.95355186124892,38.95717947816189,38.96080675730966,38.96443369878657,38.9680603026869,38.971686569104904,38.97531249813476,38.97893808987064,38.98256334440664,38.986188261836844,38.98981284225526,38.99343708575588,38.99706099243262,39.0006845623794,39.00430779569004,39.007930692458366,39.01155325277813,39.015175476743046,39.0187973644468,39.02241891598302,39.02604013144528,39.029661010927136,39.033281554522084,39.03690176232359,39.040521634425055,39.04414117091986,39.047760371901326,39.05137923746274,39.054997767697344,39.058615962698326,39.06223382255886,39.06585134737204,39.06946853723094,39.07308539222858,39.07670191245795,39.080318098011986,39.083933948983585,39.0875494654656,39.09116464755084,39.09477949533207,39.09839400890202,39.102008188353366,39.10562203377875,39.109235545270764,39.112848722921974,39.116461566824874,39.12007407707193,39.12368625375559,39.12729809696821,39.13090960680215,39.13452078334969,39.1381316267031,39.14174213695458,39.14535231419631,39.148962158520405,39.15257167001896,39.15618084878401,39.15978969490756,39.16339820848156,39.16700638959792,39.170614238348534,39.17422175482522,39.17782893911976,39.18143579132391,39.185042311529365,39.18864849982779,39.192254356310805,39.19585988106999,39.19946507419687,39.20306993578295,39.20667446591967,39.21027866469844,39.21388253221063,39.217486068547565,39.22108927380053,39.22469214806076,39.22829469141946,39.23189690396777,39.23549878579683,39.239100336997694,39.24270155766141,39.24630244787895,39.24990300774128,39.253503237339295,39.25710313676386,39.260702706105796,39.2643019454559,39.26790085490489,39.27149943454347,39.27509768446231,39.27869560475201,39.28229319550316,39.28589045680627,39.289487388751844,39.293083991430336,39.29668026493214,39.30027620934763,39.303871824767135,39.307467111280936,39.31106206897927,39.314656697952344,39.31825099829032,39.321844970083305,39.32543861342139,39.32903192839461,39.33262491509296,39.33621757360638,39.339809904024804,39.34340190643809,39.34699358093607,39.35058492760855,39.35417594654526,39.357766637835915,39.361357001570184,39.364947037837695,39.368536746728026,39.372126128330734,39.37571518273531,39.379303910031226,39.382892310307895,39.38648038365471,39.390068130161005,39.393655549916076,39.3972426430092,39.40082940952958,39.40441584956639,39.40800196320878,39.41158775054585,39.41517321166665,39.41875834666019,39.42234315561546,39.42592763862138,39.42951179576686,39.43309562714074,39.43667913283185,39.440262312928944,39.44384516752077,39.44742769669601,39.45100990054333,39.45459177915134,39.45817333260861,39.461754561003666,39.465335464425,39.46891604296108,39.4724962967003,39.476076225731035,39.479655830141624,39.48323511002035,39.48681406545548,39.4903926965352,39.4939710033477,39.49754898598111,39.50112664452352,39.50470397906298,39.5082809896875,39.51185767648506,39.51543403954358,39.51901007895096,39.522585794795056,39.52616118716368,39.5297362561446,39.53331100182555,39.53688542429423,39.54045952363829,39.54403329994535,39.54760675330297,39.5511798837987,39.55475269152004,39.55832517655443,39.5618973389893,39.56546917891202,39.569040696409935,39.57261189157033,39.576182764480485,39.579753315227606,39.58332354389888,39.586893450581435,39.59046303536239,39.5940322983288,39.59760123956769,39.60116985916604,39.604738157210804,39.60830613378888,39.61187378898714,39.615441122892406,39.61900813559147,39.62257482717108,39.62614119771795,39.62970724731875,39.633272976060105],"x":[50.0,50.08996401439424,50.17992802878848,50.26989204318273,50.35985605757697,50.44982007197121,50.53978408636545,50.6297481007597,50.71971211515394,50.80967612954818,50.89964014394242,50.98960415833667,51.07956817273091,51.16953218712515,51.25949620151939,51.34946021591364,51.43942423030788,51.52938824470212,51.61935225909636,51.7093162734906,51.79928028788485,51.88924430227909,51.97920831667333,52.06917233106757,52.15913634546182,52.24910035985606,52.3390643742503,52.42902838864454,52.51899240303879,52.60895641743303,52.69892043182727,52.78888444622151,52.87884846061576,52.96881247501,53.05877648940424,53.14874050379848,53.238704518192726,53.32866853258697,53.41863254698121,53.50859656137545,53.59856057576969,53.68852459016394,53.77848860455818,53.86845261895242,53.95841663334666,54.048380647740906,54.13834466213515,54.22830867652939,54.31827269092363,54.408236705317876,54.498200719712116,54.58816473410636,54.6781287485006,54.768092762894845,54.858056777289086,54.94802079168333,55.03798480607757,55.12794882047181,55.217912834866056,55.307876849260296,55.39784086365454,55.48780487804878,55.577768892443025,55.667732906837266,55.757696921231506,55.84766093562575,55.937624950019995,56.027588964414235,56.117552978808476,56.20751699320272,56.297481007596964,56.387445021991205,56.477409036385446,56.567373050779686,56.657337065173934,56.747301079568174,56.837265093962415,56.927229108356656,57.017193122750896,57.107157137145144,57.197121151539385,57.287085165933625,57.377049180327866,57.467013194722114,57.556977209116354,57.646941223510595,57.736905237904836,57.82686925229908,57.916833266693324,58.006797281087564,58.096761295481805,58.18672530987605,58.27668932427029,58.366653338664534,58.456617353058775,58.546581367453015,58.63654538184726,58.726509396241504,58.816473410635744,58.906437425029985,58.99640143942423,59.08636545381847,59.176329468212714,59.266293482606955,59.3562574970012,59.44622151139544,59.53618552578968,59.626149540183924,59.71611355457817,59.80607756897241,59.89604158336665,59.986005597760894,60.07596961215514,60.16593362654938,60.25589764094362,60.34586165533786,60.435825669732104,60.52578968412635,60.61575369852059,60.70571771291483,60.79568172730907,60.88564574170332,60.97560975609756,61.0655737704918,61.15553778488604,61.24550179928029,61.33546581367453,61.42542982806877,61.51539384246301,61.60535785685726,61.6953218712515,61.78528588564574,61.87524990003998,61.96521391443422,62.05517792882847,62.14514194322271,62.23510595761695,62.32506997201119,62.41503398640544,62.50499800079968,62.59496201519392,62.68492602958816,62.77489004398241,62.86485405837665,62.95481807277089,63.04478208716513,63.13474610155938,63.22471011595362,63.31467413034786,63.4046381447421,63.49460215913635,63.58456617353059,63.67453018792483,63.76449420231907,63.85445821671331,63.94442223110756,64.03438624550179,64.12435025989605,64.21431427429029,64.30427828868453,64.39424230307877,64.48420631747301,64.57417033186725,64.66413434626149,64.75409836065573,64.84406237504999,64.93402638944423,65.02399040383847,65.11395441823271,65.20391843262695,65.29388244702119,65.38384646141543,65.47381047580967,65.56377449020391,65.65373850459817,65.74370251899241,65.83366653338665,65.92363054778089,66.01359456217513,66.10355857656937,66.19352259096361,66.28348660535785,66.3734506197521,66.46341463414635,66.55337864854059,66.64334266293483,66.73330667732907,66.82327069172331,66.91323470611755,67.00319872051179,67.09316273490603,67.18312674930029,67.27309076369453,67.36305477808877,67.45301879248301,67.54298280687725,67.63294682127149,67.72291083566573,67.81287485005997,67.90283886445422,67.99280287884847,68.0827668932427,68.17273090763695,68.26269492203119,68.35265893642543,68.44262295081967,68.53258696521391,68.62255097960815,68.7125149940024,68.80247900839665,68.89244302279089,68.98240703718513,69.07237105157937,69.16233506597361,69.25229908036785,69.34226309476209,69.43222710915634,69.52219112355058,69.61215513794482,69.70211915233907,69.7920831667333,69.88204718112755,69.97201119552179,70.06197520991603,70.15193922431028,70.24190323870452,70.33186725309876,70.421831267493,70.51179528188725,70.60175929628149,70.69172331067573,70.78168732506997,70.87165133946421,70.96161535385846,71.0515793682527,71.14154338264694,71.23150739704118,71.32147141143543,71.41143542582967,71.5013994402239,71.59136345461815,71.6813274690124,71.77129148340664,71.86125549780088,71.95121951219512,72.04118352658936,72.1311475409836,72.22111155537785,72.31107556977209,72.40103958416633,72.49100359856058,72.58096761295482,72.67093162734906,72.7608956417433,72.85085965613754,72.94082367053178,73.03078768492603,73.12075169932027,73.21071571371452,73.30067972810876,73.390643742503,73.48060775689724,73.57057177129148,73.66053578568572,73.75049980007996,73.8404638144742,73.93042782886845,74.0203918432627,74.11035585765694,74.20031987205118,74.29028388644542,74.38024790083966,74.4702119152339,74.56017592962814,74.65013994402238,74.74010395841664,74.83006797281088,74.92003198720512,75.00999600159936,75.0999600159936,75.18992403038784,75.27988804478208,75.36985205917632,75.45981607357056,75.54978008796482,75.63974410235906,75.7297081167533,75.81967213114754,75.90963614554178,75.99960015993602,76.08956417433026,76.1795281887245,76.26949220311876,76.359456217513,76.44942023190724,76.53938424630148,76.62934826069572,76.71931227508996,76.8092762894842,76.89924030387844,76.9892043182727,77.07916833266694,77.16913234706118,77.25909636145542,77.34906037584966,77.4390243902439,77.52898840463814,77.61895241903238,77.70891643342662,77.79888044782088,77.88884446221512,77.97880847660936,78.0687724910036,78.15873650539784,78.24870051979208,78.33866453418632,78.42862854858056,78.51859256297482,78.60855657736906,78.6985205917633,78.78848460615754,78.87844862055178,78.96841263494602,79.05837664934026,79.1483406637345,79.23830467812874,79.328268692523,79.41823270691724,79.50819672131148,79.59816073570572,79.68812475009996,79.7780887644942,79.86805277888844,79.95801679328268,80.04798080767694,80.13794482207118,80.22790883646542,80.31787285085966,80.4078368652539,80.49780087964814,80.58776489404238,80.67772890843662,80.76769292283086,80.85765693722512,80.94762095161936,81.0375849660136,81.12754898040784,81.21751299480208,81.30747700919632,81.39744102359056,81.4874050379848,81.57736905237905,81.6673330667733,81.75729708116754,81.84726109556178,81.93722510995602,82.02718912435026,82.1171531387445,82.20711715313874,82.29708116753298,82.38704518192723,82.47700919632148,82.56697321071572,82.65693722510996,82.7469012395042,82.83686525389844,82.92682926829268,83.01679328268692,83.10675729708117,83.19672131147541,83.28668532586966,83.3766493402639,83.46661335465814,83.55657736905238,83.64654138344662,83.73650539784086,83.82646941223511,83.91643342662935,84.0063974410236,84.09636145541783,84.18632546981208,84.27628948420632,84.36625349860056,84.4562175129948,84.54618152738904,84.63614554178329,84.72610955617753,84.81607357057177,84.90603758496601,84.99600159936026,85.0859656137545,85.17592962814874,85.26589364254298,85.35585765693723,85.44582167133147,85.53578568572571,85.62574970011995,85.7157137145142,85.80567772890844,85.89564174330268,85.98560575769692,86.07556977209116,86.16553378648541,86.25549780087965,86.3454618152739,86.43542582966813,86.52538984406237,86.61535385845661,86.70531787285086,86.7952818872451,86.88524590163935,86.97520991603359,87.06517393042783,87.15513794482207,87.24510195921631,87.33506597361055,87.4250299880048,87.51499400239904,87.60495801679328,87.69492203118753,87.78488604558177,87.87485005997601,87.96481407437025,88.0547780887645,88.14474210315873,88.23470611755297,88.32467013194722,88.41463414634147,88.50459816073571,88.59456217512995,88.68452618952419,88.77449020391843,88.86445421831267,88.95441823270691,89.04438224710115,89.1343462614954,89.22431027588965,89.31427429028389,89.40423830467813,89.49420231907237,89.58416633346661,89.67413034786085,89.7640943622551,89.85405837664933,89.94402239104359,90.03398640543783,90.12395041983207,90.21391443422631,90.30387844862055,90.39384246301479,90.48380647740903,90.57377049180327,90.66373450619751,90.75369852059177,90.84366253498601,90.93362654938025,91.02359056377449,91.11355457816873,91.20351859256297,91.29348260695721,91.38344662135145,91.47341063574571,91.56337465013995,91.65333866453419,91.74330267892843,91.83326669332267,91.92323070771691,92.01319472211115,92.10315873650539,92.19312275089965,92.28308676529389,92.37305077968813,92.46301479408237,92.55297880847661,92.64294282287085,92.73290683726509,92.82287085165933,92.91283486605357,93.00279888044783,93.09276289484207,93.18272690923631,93.27269092363055,93.36265493802479,93.45261895241903,93.54258296681327,93.63254698120751,93.72251099560177,93.812475009996,93.90243902439025,93.99240303878449,94.08236705317873,94.17233106757297,94.26229508196721,94.35225909636145,94.44222311075569,94.53218712514995,94.62215113954419,94.71211515393843,94.80207916833267,94.89204318272691,94.98200719712115,95.07197121151539,95.16193522590963,95.25189924030389,95.34186325469813,95.43182726909237,95.5217912834866,95.61175529788085,95.70171931227509,95.79168332666933,95.88164734106357,95.97161135545781,96.06157536985206,96.1515393842463,96.24150339864055,96.33146741303479,96.42143142742903,96.51139544182327,96.60135945621751,96.69132347061175,96.781287485006,96.87125149940024,96.96121551379449,97.05117952818873,97.14114354258297,97.23110755697721,97.32107157137145,97.41103558576569,97.50099960015993,97.59096361455418,97.68092762894842,97.77089164334267,97.8608556577369,97.95081967213115,98.04078368652539,98.13074770091963,98.22071171531387,98.31067572970812,98.40063974410236,98.4906037584966,98.58056777289084,98.67053178728509,98.76049580167933,98.85045981607357,98.94042383046781,99.03038784486206,99.1203518592563,99.21031587365054,99.30027988804478,99.39024390243902,99.48020791683327,99.5701719312275,99.66013594562175,99.75009996001599,99.84006397441024,99.93002798880448,100.01999200319872,100.10995601759296,100.1999200319872,100.28988404638145,100.37984806077569,100.46981207516993,100.55977608956418,100.64974010395842,100.73970411835266,100.8296681327469,100.91963214714114,101.00959616153538,101.09956017592962,101.18952419032387,101.2794882047181,101.36945221911236,101.4594162335066,101.54938024790084,101.63934426229508,101.72930827668932,101.81927229108356,101.9092363054778,101.99920031987205,102.0891643342663,102.17912834866054,102.26909236305478,102.35905637744902,102.44902039184326,102.5389844062375,102.62894842063174,102.71891243502598,102.80887644942023,102.89884046381448,102.98880447820872,103.07876849260296,103.1687325069972,103.25869652139144,103.34866053578568,103.43862455017992,103.52858856457416,103.61855257896842,103.70851659336266,103.7984806077569,103.88844462215114,103.97840863654538,104.06837265093962,104.15833666533386,104.2483006797281,104.33826469412234,104.4282287085166,104.51819272291084,104.60815673730508,104.69812075169932,104.78808476609356,104.8780487804878,104.96801279488204,105.05797680927628,105.14794082367054,105.23790483806478,105.32786885245902,105.41783286685326,105.5077968812475,105.59776089564174,105.68772491003598,105.77768892443022,105.86765293882446,105.95761695321872,106.04758096761296,106.1375449820072,106.22750899640144,106.31747301079568,106.40743702518992,106.49740103958416,106.5873650539784,106.67732906837266,106.7672930827669,106.85725709716114,106.94722111155538,107.03718512594962,107.12714914034386,107.2171131547381,107.30707716913234,107.3970411835266,107.48700519792084,107.57696921231508,107.66693322670932,107.75689724110356,107.8468612554978,107.93682526989204,108.02678928428628,108.11675329868052,108.20671731307478,108.29668132746902,108.38664534186326,108.4766093562575,108.56657337065174,108.65653738504598,108.74650139944022,108.83646541383446,108.92642942822872,109.01639344262296,109.1063574570172,109.19632147141144,109.28628548580568,109.37624950019992,109.46621351459416,109.5561775289884,109.64614154338264,109.7361055577769,109.82606957217114,109.91603358656538,110.00599760095962,110.09596161535386,110.1859256297481,110.27588964414234,110.36585365853658,110.45581767293083,110.54578168732507,110.63574570171932,110.72570971611356,110.8156737305078,110.90563774490204,110.99560175929628,111.08556577369052,111.17552978808476,111.26549380247901,111.35545781687325,111.4454218312675,111.53538584566174,111.62534986005598,111.71531387445022,111.80527788884446,111.8952419032387,111.98520591763295,112.0751699320272,112.16513394642143,112.25509796081568,112.34506197520992,112.43502598960416,112.5249900039984,112.61495401839264,112.70491803278688,112.79488204718113,112.88484606157537,112.97481007596961,113.06477409036385,113.1547381047581,113.24470211915234,113.33466613354658,113.42463014794082,113.51459416233507,113.60455817672931,113.69452219112355,113.7844862055178,113.87445021991203,113.96441423430628,114.05437824870052,114.14434226309476,114.23430627748901,114.32427029188325,114.41423430627749,114.50419832067173,114.59416233506597,114.68412634946021,114.77409036385446,114.8640543782487,114.95401839264294,115.04398240703719,115.13394642143143,115.22391043582567,115.31387445021991,115.40383846461415,115.4938024790084,115.58376649340263,115.67373050779688,115.76369452219113,115.85365853658537,115.94362255097961,116.03358656537385,116.1235505797681,116.21351459416233,116.30347860855657,116.39344262295081,116.48340663734506,116.57337065173931,116.66333466613355,116.75329868052779,116.84326269492203,116.93322670931627,117.02319072371051,117.11315473810475,117.203118752499,117.29308276689325,117.38304678128749,117.47301079568173,117.56297481007597,117.65293882447021,117.74290283886445,117.8328668532587,117.92283086765293,118.01279488204717,118.10275889644143,118.19272291083567,118.28268692522991,118.37265093962415,118.46261495401839,118.55257896841263,118.64254298280687,118.73250699720111,118.82247101159537,118.91243502598961,119.00239904038385,119.09236305477809,119.18232706917233,119.27229108356657,119.36225509796081,119.45221911235505,119.5421831267493,119.63214714114355,119.72211115553779,119.81207516993203,119.90203918432627,119.99200319872051,120.08196721311475,120.17193122750899,120.26189524190323,120.35185925629749,120.44182327069173,120.53178728508597,120.62175129948021,120.71171531387445,120.80167932826869,120.89164334266293,120.98160735705717,121.07157137145141,121.16153538584567,121.25149940023991,121.34146341463415,121.43142742902839,121.52139144342263,121.61135545781687,121.70131947221111,121.79128348660535,121.8812475009996,121.97121151539385,122.06117552978809,122.15113954418233,122.24110355857657,122.33106757297081,122.42103158736505,122.51099560175929,122.60095961615355,122.69092363054779,122.78088764494203,122.87085165933627,122.96081567373051,123.05077968812475,123.14074370251899,123.23070771691323,123.32067173130747,123.41063574570173,123.50059976009597,123.5905637744902,123.68052778888445,123.77049180327869,123.86045581767293,123.95041983206717,124.04038384646141,124.13034786085566,124.2203118752499,124.31027588964415,124.40023990403839,124.49020391843263,124.58016793282687,124.67013194722111,124.76009596161535,124.85005997600959,124.94002399040384,125.02998800479808,125.11995201919233,125.20991603358657,125.2998800479808,125.38984406237505,125.47980807676929,125.56977209116353,125.65973610555778,125.74970011995202,125.83966413434626,125.9296281487405,126.01959216313475,126.10955617752899,126.19952019192323,126.28948420631747,126.37944822071171,126.46941223510596,126.5593762495002,126.64934026389444,126.73930427828869,126.82926829268293,126.91923230707717,127.0091963214714,127.09916033586565,127.1891243502599,127.27908836465414,127.36905237904838,127.45901639344262,127.54898040783686,127.6389444222311,127.72890843662535,127.81887245101959,127.90883646541383,127.99880047980808,128.0887644942023,128.17872850859655,128.2686925229908,128.35865653738506,128.4486205517793,128.53858456617354,128.62854858056778,128.71851259496202,128.80847660935626,128.8984406237505,128.98840463814474,129.07836865253898,129.16833266693322,129.25829668132747,129.3482606957217,129.43822471011595,129.5281887245102,129.61815273890443,129.70811675329867,129.7980807676929,129.88804478208718,129.97800879648142,130.06797281087566,130.1579368252699,130.24790083966414,130.33786485405838,130.42782886845262,130.51779288284686,130.6077568972411,130.69772091163534,130.78768492602958,130.87764894042382,130.96761295481807,131.0575769692123,131.14754098360655,131.2375049980008,131.32746901239503,131.4174330267893,131.50739704118354,131.59736105557778,131.68732506997202,131.77728908436626,131.8672530987605,131.95721711315474,132.04718112754898,132.13714514194322,132.22710915633746,132.3170731707317,132.40703718512594,132.49700119952018,132.58696521391443,132.67692922830867,132.7668932427029,132.85685725709718,132.94682127149142,133.03678528588566,133.1267493002799,133.21671331467414,133.30667732906838,133.39664134346262,133.48660535785686,133.5765693722511,133.66653338664534,133.75649740103958,133.84646141543382,133.93642542982806,134.0263894442223,134.11635345861654,134.20631747301078,134.29628148740503,134.3862455017993,134.47620951619353,134.56617353058778,134.65613754498202,134.74610155937626,134.8360655737705,134.92602958816474,135.01599360255898,135.10595761695322,135.19592163134746,135.2858856457417,135.37584966013594,135.46581367453018,135.55577768892442,135.64574170331866,135.7357057177129,135.82566973210714,135.9156337465014,136.00559776089565,136.0955617752899,136.18552578968414,136.27548980407838,136.36545381847262,136.45541783286686,136.5453818472611,136.63534586165534,136.72530987604958,136.81527389044382,136.90523790483806,136.9952019192323,137.08516593362654,137.17512994802078,137.26509396241502,137.35505797680926,137.44502199120353,137.53498600559777,137.624950019992,137.71491403438625,137.8048780487805,137.89484206317474,137.98480607756898,138.07477009196322,138.16473410635746,138.2546981207517,138.34466213514594,138.43462614954018,138.52459016393442,138.61455417832866,138.7045181927229,138.79448220711714,138.88444622151138,138.97441023590565,139.0643742502999,139.15433826469413,139.24430227908837,139.3342662934826,139.42423030787685,139.5141943222711,139.60415833666534,139.69412235105958,139.78408636545382,139.87405037984806,139.9640143942423,140.05397840863654,140.14394242303078,140.23390643742502,140.32387045181926,140.4138344662135,140.50379848060777,140.593762495002,140.68372650939625,140.7736905237905,140.86365453818473,140.95361855257897,141.0435825669732,141.13354658136745,141.2235105957617,141.31347461015594,141.40343862455018,141.49340263894442,141.58336665333866,141.6733306677329,141.76329468212714,141.85325869652138,141.94322271091562,142.0331867253099,142.12315073970413,142.21311475409837,142.3030787684926,142.39304278288685,142.4830067972811,142.57297081167533,142.66293482606957,142.7528988404638,142.84286285485805,142.9328268692523,143.02279088364654,143.11275489804078,143.20271891243502,143.29268292682926,143.3826469412235,143.47261095561774,143.562574970012,143.65253898440625,143.7425029988005,143.83246701319473,143.92243102758897,144.0123950419832,144.10235905637745,144.1923230707717,144.28228708516593,144.37225109956017,144.46221511395441,144.55217912834866,144.6421431427429,144.73210715713714,144.82207117153138,144.91203518592562,145.00199920031986,145.09196321471413,145.18192722910837,145.2718912435026,145.36185525789685,145.4518192722911,145.54178328668533,145.63174730107957,145.7217113154738,145.81167532986805,145.9016393442623,145.99160335865653,146.08156737305077,146.17153138744501,146.26149540183926,146.3514594162335,146.44142343062774,146.53138744502198,146.62135145941625,146.7113154738105,146.80127948820473,146.89124350259897,146.9812075169932,147.07117153138745,147.1611355457817,147.25109956017593,147.34106357457017,147.4310275889644,147.52099160335865,147.6109556177529,147.70091963214713,147.79088364654137,147.88084766093561,147.97081167532986,148.06077568972412,148.15073970411837,148.2407037185126,148.33066773290685,148.4206317473011,148.51059576169533,148.60055977608957,148.6905237904838,148.78048780487805,148.8704518192723,148.96041583366653,149.05037984806077,149.140343862455,149.23030787684925,149.3202718912435,149.41023590563773,149.50019992003197,149.59016393442624,149.68012794882048,149.77009196321472,149.86005597760897,149.9500199920032,150.03998400639745,150.1299480207917,150.21991203518593,150.30987604958017,150.3998400639744,150.48980407836865,150.5797680927629,150.66973210715713,150.75969612155137,150.8496601359456,150.93962415033985,151.0295881647341,151.11955217912836,151.2095161935226,151.29948020791684,151.38944422231108,151.47940823670532,151.56937225109957,151.6593362654938,151.74930027988805,151.8392642942823,151.92922830867653,152.01919232307077,152.109156337465,152.19912035185925,152.2890843662535,152.37904838064773,152.46901239504197,152.5589764094362,152.64894042383048,152.73890443822472,152.82886845261896,152.9188324670132,153.00879648140744,153.09876049580168,153.18872451019593,153.27868852459017,153.3686525389844,153.45861655337865,153.5485805677729,153.63854458216713,153.72850859656137,153.8184726109556,153.90843662534985,153.9984006397441,154.08836465413833,154.1783286685326,154.26829268292684,154.35825669732108,154.44822071171532,154.53818472610956,154.6281487405038,154.71811275489804,154.80807676929228,154.89804078368653,154.98800479808077,155.077968812475,155.16793282686925,155.2578968412635,155.34786085565773,155.43782487005197,155.5277888844462,155.61775289884045,155.70771691323472,155.79768092762896,155.8876449420232,155.97760895641744,156.06757297081168,156.15753698520592,156.24750099960016,156.3374650139944,156.42742902838864,156.51739304278289,156.60735705717713,156.69732107157137,156.7872850859656,156.87724910035985,156.9672131147541,157.05717712914833,157.14714114354257,157.23710515793684,157.32706917233108,157.41703318672532,157.50699720111956,157.5969612155138,157.68692522990804,157.77688924430228,157.86685325869652,157.95681727309076,158.046781287485,158.13674530187924,158.22670931627349,158.31667333066773,158.40663734506197,158.4966013594562,158.58656537385045,158.6765293882447,158.76649340263896,158.8564574170332,158.94642143142744,159.03638544582168,159.12634946021592,159.21631347461016,159.3062774890044,159.39624150339864,159.48620551779288,159.57616953218712,159.66613354658136,159.7560975609756,159.84606157536984,159.93602558976409,160.02598960415833,160.11595361855257,160.2059176329468,160.29588164734108,160.38584566173532,160.47580967612956,160.5657736905238,160.65573770491804,160.74570171931228,160.83566573370652,160.92562974810076,161.015593762495,161.10555777688924,161.19552179128348,161.28548580567772,161.37544982007196,161.4654138344662,161.55537784886045,161.64534186325469,161.73530587764893,161.8252698920432,161.91523390643744,162.00519792083168,162.09516193522592,162.18512594962016,162.2750899640144,162.36505397840864,162.45501799280288,162.54498200719712,162.63494602159136,162.7249100359856,162.81487405037984,162.90483806477408,162.99480207916832,163.08476609356256,163.1747301079568,163.26469412235107,163.35465813674531,163.44462215113955,163.5345861655338,163.62455017992804,163.71451419432228,163.80447820871652,163.89444222311076,163.984406237505,164.07437025189924,164.16433426629348,164.25429828068772,164.34426229508196,164.4342263094762,164.52419032387044,164.61415433826468,164.70411835265892,164.7940823670532,164.88404638144743,164.97401039584167,165.06397441023591,165.15393842463016,165.2439024390244,165.33386645341864,165.42383046781288,165.51379448220712,165.60375849660136,165.6937225109956,165.78368652538984,165.87365053978408,165.96361455417832,166.05357856857256,166.1435425829668,166.23350659736104,166.3234706117553,166.41343462614955,166.5033986405438,166.59336265493803,166.68332666933227,166.77329068372651,166.86325469812076,166.953218712515,167.04318272690924,167.13314674130348,167.22311075569772,167.31307477009196,167.4030387844862,167.49300279888044,167.58296681327468,167.67293082766892,167.76289484206316,167.85285885645743,167.94282287085167,168.0327868852459,168.12275089964015,168.2127149140344,168.30267892842863,168.39264294282287,168.48260695721711,168.57257097161136,168.6625349860056,168.75249900039984,168.84246301479408,168.93242702918832,169.02239104358256,169.1123550579768,169.20231907237104,169.29228308676528,169.38224710115955,169.4722111155538,169.56217512994803,169.65213914434227,169.7421031587365,169.83206717313075,169.922031187525,170.01199520191923,170.10195921631347,170.19192323070772,170.28188724510196,170.3718512594962,170.46181527389044,170.55177928828468,170.64174330267892,170.73170731707316,170.8216713314674,170.91163534586167,171.0015993602559,171.09156337465015,171.1815273890444,171.27149140343863,171.36145541783287,171.4514194322271,171.54138344662135,171.6313474610156,171.72131147540983,171.81127548980407,171.90123950419832,171.99120351859256,172.0811675329868,172.17113154738104,172.26109556177528,172.35105957616952,172.4410235905638,172.53098760495803,172.62095161935227,172.7109156337465,172.80087964814075,172.890843662535,172.98080767692923,173.07077169132347,173.1607357057177,173.25069972011195,173.3406637345062,173.43062774890043,173.52059176329468,173.61055577768892,173.70051979208316,173.7904838064774,173.88044782087164,173.9704118352659,174.06037584966015,174.1503398640544,174.24030387844863,174.33026789284287,174.4202319072371,174.51019592163135,174.6001599360256,174.69012395041983,174.78008796481407,174.8700519792083,174.96001599360255,175.0499800079968,175.13994402239103,175.22990803678528,175.31987205117952,175.40983606557376,175.49980007996803,175.58976409436227,175.6797281087565,175.76969212315075,175.859656137545,175.94962015193923,176.03958416633347,176.1295481807277,176.21951219512195,176.3094762095162,176.39944022391043,176.48940423830467,176.5793682526989,176.66933226709315,176.7592962814874,176.84926029588163,176.93922431027588,177.02918832467014,177.11915233906439,177.20911635345863,177.29908036785287,177.3890443822471,177.47900839664135,177.5689724110356,177.65893642542983,177.74890043982407,177.8388644542183,177.92882846861255,178.0187924830068,178.10875649740103,178.19872051179527,178.2886845261895,178.37864854058375,178.46861255497802,178.55857656937226,178.6485405837665,178.73850459816074,178.82846861255499,178.91843262694923,179.00839664134347,179.0983606557377,179.18832467013195,179.2782886845262,179.36825269892043,179.45821671331467,179.5481807277089,179.63814474210315,179.7281087564974,179.81807277089163,179.90803678528587,179.99800079968014,180.08796481407438,180.17792882846862,180.26789284286286,180.3578568572571,180.44782087165134,180.53778488604559,180.62774890043983,180.71771291483407,180.8076769292283,180.89764094362255,180.9876049580168,181.07756897241103,181.16753298680527,181.2574970011995,181.34746101559375,181.437425029988,181.52738904438226,181.6173530587765,181.70731707317074,181.79728108756498,181.88724510195922,181.97720911635346,182.0671731307477,182.15713714514195,182.2471011595362,182.33706517393043,182.42702918832467,182.5169932027189,182.60695721711315,182.6969212315074,182.78688524590163,182.87684926029587,182.9668132746901,183.05677728908438,183.14674130347862,183.23670531787286,183.3266693322671,183.41663334666134,183.50659736105558,183.59656137544982,183.68652538984406,183.7764894042383,183.86645341863255,183.9564174330268,184.04638144742103,184.13634546181527,184.2263094762095,184.31627349060375,184.406237504998,184.49620151939223,184.5861655337865,184.67612954818074,184.76609356257498,184.85605757696922,184.94602159136346,185.0359856057577,185.12594962015194,185.21591363454618,185.30587764894042,185.39584166333466,185.4858056777289,185.57576969212315,185.6657337065174,185.75569772091163,185.84566173530587,185.9356257497001,186.02558976409435,186.11555377848862,186.20551779288286,186.2954818072771,186.38544582167134,186.47540983606558,186.56537385045982,186.65533786485406,186.7453018792483,186.83526589364254,186.92522990803678,187.01519392243102,187.10515793682526,187.1951219512195,187.28508596561375,187.375049980008,187.46501399440223,187.55497800879647,187.64494202319074,187.73490603758498,187.82487005197922,187.91483406637346,188.0047980807677,188.09476209516194,188.18472610955618,188.27469012395042,188.36465413834466,188.4546181527389,188.54458216713314,188.63454618152738,188.72451019592162,188.81447421031586,188.9044382247101,188.99440223910435,189.0843662534986,189.17433026789286,189.2642942822871,189.35425829668134,189.44422231107558,189.53418632546982,189.62415033986406,189.7141143542583,189.80407836865254,189.89404238304678,189.98400639744102,190.07397041183526,190.1639344262295,190.25389844062374,190.34386245501798,190.43382646941222,190.52379048380647,190.6137544982007,190.70371851259497,190.79368252698922,190.88364654138346,190.9736105557777,191.06357457017194,191.15353858456618,191.24350259896042,191.33346661335466,191.4234306277489,191.51339464214314,191.60335865653738,191.69332267093162,191.78328668532586,191.8732506997201,191.96321471411434,192.05317872850858,192.14314274290282,192.2331067572971,192.32307077169133,192.41303478608557,192.50299880047982,192.59296281487406,192.6829268292683,192.77289084366254,192.86285485805678,192.95281887245102,193.04278288684526,193.1327469012395,193.22271091563374,193.31267493002798,193.40263894442222,193.49260295881646,193.5825669732107,193.67253098760497,193.7624950019992,193.85245901639345,193.9424230307877,194.03238704518193,194.12235105957618,194.21231507397042,194.30227908836466,194.3922431027589,194.48220711715314,194.57217113154738,194.66213514594162,194.75209916033586,194.8420631747301,194.93202718912434,195.02199120351858,195.11195521791282,195.2019192323071,195.29188324670133,195.38184726109557,195.4718112754898,195.56177528988405,195.6517393042783,195.74170331867253,195.83166733306678,195.92163134746102,196.01159536185526,196.1015593762495,196.19152339064374,196.28148740503798,196.37145141943222,196.46141543382646,196.5513794482207,196.64134346261494,196.7313074770092,196.82127149140345,196.9112355057977,197.00119952019193,197.09116353458617,197.1811275489804,197.27109156337465,197.3610555777689,197.45101959216314,197.54098360655738,197.63094762095162,197.72091163534586,197.8108756497401,197.90083966413434,197.99080367852858,198.08076769292282,198.17073170731706,198.26069572171133,198.35065973610557,198.4406237504998,198.53058776489405,198.6205517792883,198.71051579368253,198.80047980807677,198.890443822471,198.98040783686525,199.0703718512595,199.16033586565374,199.25029988004798,199.34026389444222,199.43022790883646,199.5201919232307,199.61015593762494,199.70011995201918,199.79008396641345,199.8800479808077,199.97001199520193,200.05997600959617,200.1499400239904,200.23990403838465,200.3298680527789,200.41983206717313,200.50979608156737,200.5997600959616,200.68972411035585,200.7796881247501,200.86965213914434,200.95961615353858,201.04958016793282,201.13954418232706,201.2295081967213,201.31947221111557,201.4094362255098,201.49940023990405,201.5893642542983,201.67932826869253,201.76929228308677,201.859256297481,201.94922031187525,202.0391843262695,202.12914834066373,202.21911235505797,202.3090763694522,202.39904038384645,202.4890043982407,202.57896841263494,202.66893242702918,202.75889644142342,202.8488604558177,202.93882447021193,203.02878848460617,203.1187524990004,203.20871651339465,203.2986805277889,203.38864454218313,203.47860855657737,203.5685725709716,203.65853658536585,203.7485005997601,203.83846461415433,203.92842862854857,204.0183926429428,204.10835665733705,204.1983206717313,204.28828468612554,204.3782487005198,204.46821271491405,204.5581767293083,204.64814074370253,204.73810475809677,204.828068772491,204.91803278688525,205.0079968012795,205.09796081567373,205.18792483006797,205.2778888444622,205.36785285885645,205.4578168732507,205.54778088764493,205.63774490203917,205.72770891643341,205.81767293082765,205.90763694522192,205.99760095961616,206.0875649740104,206.17752898840465,206.2674930027989,206.35745701719313,206.44742103158737,206.5373850459816,206.62734906037585,206.7173130747701,206.80727708916433,206.89724110355857,206.9872051179528,207.07716913234705,207.1671331467413,207.25709716113553,207.34706117552977,207.43702518992404,207.52698920431828,207.61695321871252,207.70691723310676,207.796881247501,207.88684526189525,207.9768092762895,208.06677329068373,208.15673730507797,208.2467013194722,208.33666533386645,208.4266293482607,208.51659336265493,208.60655737704917,208.6965213914434,208.78648540583765,208.87644942023192,208.96641343462616,209.0563774490204,209.14634146341464,209.23630547780888,209.32626949220312,209.41623350659737,209.5061975209916,209.59616153538585,209.6861255497801,209.77608956417433,209.86605357856857,209.9560175929628,210.04598160735705,210.1359456217513,210.22590963614553,210.31587365053977,210.40583766493404,210.49580167932828,210.58576569372252,210.67572970811676,210.765693722511,210.85565773690524,210.94562175129948,211.03558576569372,211.12554978008797,211.2155137944822,211.30547780887645,211.3954418232707,211.48540583766493,211.57536985205917,211.6653338664534,211.75529788084765,211.8452618952419,211.93522590963616,212.0251899240304,212.11515393842464,212.20511795281888,212.29508196721312,212.38504598160736,212.4750099960016,212.56497401039584,212.65493802479008,212.74490203918432,212.83486605357857,212.9248300679728,213.01479408236705,213.1047580967613,213.19472211115553,213.28468612554977,213.374650139944,213.46461415433828,213.55457816873252,213.64454218312676,213.734506197521,213.82447021191524,213.91443422630948,214.00439824070372,214.09436225509796,214.1843262694922,214.27429028388644,214.36425429828068,214.45421831267493,214.54418232706917,214.6341463414634,214.72411035585765,214.8140743702519,214.90403838464613,214.9940023990404,215.08396641343464,215.17393042782888,215.26389444222312,215.35385845661736,215.4438224710116,215.53378648540584,215.62375049980008,215.71371451419432,215.80367852858856,215.8936425429828,215.98360655737704,216.07357057177128,216.16353458616553,216.25349860055977,216.343462614954,216.43342662934825,216.52339064374252,216.61335465813676,216.703318672531,216.79328268692524,216.88324670131948,216.97321071571372,217.06317473010796,217.1531387445022,217.24310275889644,217.33306677329068,217.42303078768492,217.51299480207916,217.6029588164734,217.69292283086764,217.78288684526188,217.87285085965613,217.96281487405037,218.05277888844464,218.14274290283888,218.23270691723312,218.32267093162736,218.4126349460216,218.50259896041584,218.59256297481008,218.68252698920432,218.77249100359856,218.8624550179928,218.95241903238704,219.04238304678128,219.13234706117552,219.22231107556976,219.312275089964,219.40223910435824,219.49220311875249,219.58216713314675,219.672131147541,219.76209516193524,219.85205917632948,219.94202319072372,220.03198720511796,220.1219512195122,220.21191523390644,220.30187924830068,220.39184326269492,220.48180727708916,220.5717712914834,220.66173530587764,220.75169932027188,220.84166333466612,220.93162734906036,221.0215913634546,221.11155537784887,221.2015193922431,221.29148340663735,221.3814474210316,221.47141143542584,221.56137544982008,221.65133946421432,221.74130347860856,221.8312674930028,221.92123150739704,222.01119552179128,222.10115953618552,222.19112355057976,222.281087564974,222.37105157936824,222.46101559376248,222.55097960815675,222.640943622551,222.73090763694523,222.82087165133947,222.9108356657337,223.00079968012795,223.0907636945222,223.18072770891644,223.27069172331068,223.36065573770492,223.45061975209916,223.5405837664934,223.63054778088764,223.72051179528188,223.81047580967612,223.90043982407036,223.9904038384646,224.08036785285887,224.1703318672531,224.26029588164735,224.3502598960416,224.44022391043583,224.53018792483007,224.62015193922431,224.71011595361855,224.8000799680128,224.89004398240704,224.98000799680128,225.06997201119552,225.15993602558976,225.249900039984,225.33986405437824,225.42982806877248,225.51979208316672,225.609756097561,225.69972011195523,225.78968412634947,225.8796481407437,225.96961215513795,226.0595761695322,226.14954018392643,226.23950419832067,226.32946821271491,226.41943222710916,226.5093962415034,226.59936025589764,226.68932427029188,226.77928828468612,226.86925229908036,226.9592163134746,227.04918032786884,227.1391443422631,227.22910835665735,227.3190723710516,227.40903638544583,227.49900039984007,227.5889644142343,227.67892842862855,227.7688924430228,227.85885645741703,227.94882047181127,228.03878448620551,228.12874850059976,228.218712514994,228.30867652938824,228.39864054378248,228.48860455817672,228.57856857257096,228.66853258696523,228.75849660135947,228.8484606157537,228.93842463014795,229.0283886445422,229.11835265893643,229.20831667333067,229.2982806877249,229.38824470211915,229.4782087165134,229.56817273090763,229.65813674530187,229.74810075969611,229.83806477409036,229.9280287884846,230.01799280287884,230.10795681727308,230.19792083166735,230.2878848460616,230.37784886045583,230.46781287485007,230.5577768892443,230.64774090363855,230.7377049180328,230.82766893242703,230.91763294682127,231.0075969612155,231.09756097560975,231.187524990004,231.27748900439823,231.36745301879247,231.45741703318672,231.54738104758096,231.6373450619752,231.72730907636947,231.8172730907637,231.90723710515795,231.9972011195522,232.08716513394643,232.17712914834067,232.2670931627349,232.35705717712915,232.4470211915234,232.53698520591763,232.62694922031187,232.7169132347061,232.80687724910035,232.8968412634946,232.98680527788883,233.07676929228307,233.16673330667732,233.25669732107158,233.34666133546583,233.43662534986007,233.5265893642543,233.61655337864855,233.7065173930428,233.79648140743703,233.88644542183127,233.9764094362255,234.06637345061975,234.156337465014,234.24630147940823,234.33626549380247,234.4262295081967,234.51619352259095,234.6061575369852,234.69612155137943,234.7860855657737,234.87604958016794,234.96601359456218,235.05597760895643,235.14594162335067,235.2359056377449,235.32586965213915,235.4158336665334,235.50579768092763,235.59576169532187,235.6857257097161,235.77568972411035,235.8656537385046,235.95561775289883,236.04558176729307,236.1355457816873,236.22550979608155,236.31547381047582,236.40543782487006,236.4954018392643,236.58536585365854,236.67532986805278,236.76529388244703,236.85525789684127,236.9452219112355,237.03518592562975,237.125149940024,237.21511395441823,237.30507796881247,237.3950419832067,237.48500599760095,237.5749700119952,237.66493402638943,237.7548980407837,237.84486205517794,237.93482606957218,238.02479008396642,238.11475409836066,238.2047181127549,238.29468212714914,238.38464614154339,238.47461015593763,238.56457417033187,238.6545381847261,238.74450219912035,238.8344662135146,238.92443022790883,239.01439424230307,239.1043582566973,239.19432227109155,239.28428628548582,239.37425029988006,239.4642143142743,239.55417832866854,239.64414234306278,239.73410635745702,239.82407037185126,239.9140343862455,240.00399840063974,240.09396241503399,240.18392642942823,240.27389044382247,240.3638544582167,240.45381847261095,240.5437824870052,240.63374650139943,240.72371051579367,240.81367453018794,240.90363854458218,240.99360255897642,241.08356657337066,241.1735305877649,241.26349460215914,241.35345861655338,241.44342263094762,241.53338664534186,241.6233506597361,241.71331467413034,241.80327868852459,241.89324270291883,241.98320671731307,242.0731707317073,242.16313474610155,242.2530987604958,242.34306277489006,242.4330267892843,242.52299080367854,242.61295481807278,242.70291883246702,242.79288284686126,242.8828468612555,242.97281087564974,243.06277489004398,243.15273890443822,243.24270291883246,243.3326669332267,243.42263094762095,243.51259496201519,243.60255897640943,243.69252299080367,243.7824870051979,243.87245101959218,243.96241503398642,244.05237904838066,244.1423430627749,244.23230707716914,244.32227109156338,244.41223510595762,244.50219912035186,244.5921631347461,244.68212714914034,244.77209116353458,244.86205517792882,244.95201919232306,245.0419832067173,245.13194722111155,245.2219112355058,245.31187524990003,245.4018392642943,245.49180327868854,245.58176729308278,245.67173130747702,245.76169532187126,245.8516593362655,245.94162335065974,246.03158736505398,246.12155137944822,246.21151539384246,246.3014794082367,246.39144342263094,246.48140743702518,246.57137145141942,246.66133546581366,246.7512994802079,246.84126349460215,246.93122750899641,247.02119152339066,247.1111555377849,247.20111955217914,247.29108356657338,247.38104758096762,247.47101159536186,247.5609756097561,247.65093962415034,247.74090363854458,247.83086765293882,247.92083166733306,248.0107956817273,248.10075969612154,248.19072371051578,248.28068772491002,248.37065173930426,248.46061575369853,248.55057976809277,248.64054378248701,248.73050779688126,248.8204718112755,248.91043582566974,249.00039984006398,249.09036385445822,249.18032786885246,249.2702918832467,249.36025589764094,249.45021991203518,249.54018392642942,249.63014794082366,249.7201119552179,249.81007596961214,249.90003998400638,249.99000399840065,250.0799680127949,250.16993202718913,250.25989604158337,250.34986005597762,250.43982407037186,250.5297880847661,250.61975209916034,250.70971611355458,250.79968012794882,250.88964414234306,250.9796081567373,251.06957217113154,251.15953618552578,251.24950019992002,251.33946421431426,251.4294282287085,251.51939224310277,251.609356257497,251.69932027189125,251.7892842862855,251.87924830067973,251.96921231507397,252.05917632946822,252.14914034386246,252.2391043582567,252.32906837265094,252.41903238704518,252.50899640143942,252.59896041583366,252.6889244302279,252.77888844462214,252.86885245901638,252.95881647341065,253.0487804878049,253.13874450219913,253.22870851659337,253.3186725309876,253.40863654538185,253.4986005597761,253.58856457417033,253.67852858856457,253.76849260295882,253.85845661735306,253.9484206317473,254.03838464614154,254.12834866053578,254.21831267493002,254.30827668932426,254.3982407037185,254.48820471811277,254.578168732507,254.66813274690125,254.7580967612955,254.84806077568973,254.93802479008397,255.0279888044782,255.11795281887245,255.2079168332667,255.29788084766093,255.38784486205518,255.47780887644942,255.56777289084366,255.6577369052379,255.74770091963214,255.83766493402638,255.92762894842062,256.0175929628149,256.10755697720913,256.19752099160337,256.2874850059976,256.37744902039185,256.4674130347861,256.55737704918033,256.6473410635746,256.7373050779688,256.82726909236305,256.9172331067573,257.00719712115153,257.0971611355458,257.18712514994,257.27708916433426,257.3670531787285,257.45701719312274,257.546981207517,257.6369452219112,257.72690923630546,257.8168732506997,257.90683726509394,257.9968012794882,258.0867652938824,258.17672930827666,258.2666933226709,258.3566573370652,258.44662135145944,258.5365853658537,258.6265493802479,258.71651339464216,258.8064774090364,258.89644142343064,258.9864054378249,259.0763694522191,259.16633346661337,259.2562974810076,259.34626149540185,259.4362255097961,259.52618952419033,259.61615353858457,259.7061175529788,259.79608156737305,259.8860455817673,259.97600959616153,260.0659736105558,260.15593762495,260.24590163934425,260.3358656537385,260.42582966813274,260.515793682527,260.6057576969212,260.69572171131546,260.7856857257097,260.87564974010394,260.9656137544982,261.0555777688924,261.14554178328666,261.2355057976809,261.3254698120752,261.41543382646944,261.5053978408637,261.5953618552579,261.68532586965216,261.7752898840464,261.86525389844064,261.9552179128349,262.0451819272291,262.13514594162336,262.2251099560176,262.31507397041185,262.4050379848061,262.4950019992003,262.58496601359457,262.6749300279888,262.76489404238305,262.8548580567773,262.94482207117153,263.03478608556577,263.12475009996,263.21471411435425,263.3046781287485,263.39464214314273,263.484606157537,263.5745701719312,263.66453418632545,263.7544982007197,263.84446221511394,263.9344262295082,264.0243902439024,264.11435425829666,264.2043182726909,264.29428228708514,264.38424630147944,264.4742103158737,264.5641743302679,264.65413834466216,264.7441023590564,264.83406637345064,264.9240303878449,265.0139944022391,265.10395841663336,265.1939224310276,265.28388644542184,265.3738504598161,265.4638144742103,265.55377848860456,265.6437425029988,265.73370651739305,265.8236705317873,265.9136345461815,266.00359856057577,266.09356257497,266.18352658936425,266.2734906037585,266.36345461815273,266.45341863254697,266.5433826469412,266.63334666133545,266.7233106757297,266.81327469012393,266.9032387045182,266.9932027189124,267.08316673330665,267.1731307477009,267.26309476209514,267.3530587764894,267.4430227908837,267.5329868052779,267.62295081967216,267.7129148340664,267.80287884846064,267.8928428628549,267.9828068772491,268.07277089164336,268.1627349060376,268.25269892043184,268.3426629348261,268.4326269492203,268.52259096361456,268.6125549780088,268.70251899240304,268.7924830067973,268.8824470211915,268.97241103558576,269.06237504998,269.15233906437425,269.2423030787685,269.3322670931627,269.42223110755697,269.5121951219512,269.60215913634545,269.6921231507397,269.78208716513393,269.87205117952817,269.9620151939224,270.05197920831665,270.1419432227109,270.23190723710513,270.3218712514994,270.4118352658936,270.5017992802879,270.59176329468215,270.6817273090764,270.77169132347063,270.8616553378649,270.9516193522591,271.04158336665336,271.1315473810476,271.22151139544184,271.3114754098361,271.4014394242303,271.49140343862456,271.5813674530188,271.67133146741304,271.7612954818073,271.8512594962015,271.94122351059576,272.03118752499,272.12115153938424,272.2111155537785,272.3010795681727,272.39104358256697,272.4810075969612,272.57097161135545,272.6609356257497,272.7508996401439,272.84086365453817,272.9308276689324,273.02079168332665,273.1107556977209,273.20071971211513,273.29068372650937,273.3806477409036,273.47061175529785,273.56057576969215,273.6505397840864,273.74050379848063,273.8304678128749,273.9204318272691,274.01039584166335,274.1003598560576,274.19032387045183,274.2802878848461,274.3702518992403,274.46021591363456,274.5501799280288,274.64014394242304,274.7301079568173,274.8200719712115,274.91003598560576,275.0,275.08996401439424,275.1799280287885,275.2698920431827,275.35985605757696,275.4498200719712,275.53978408636544,275.6297481007597,275.7197121151539,275.80967612954817,275.8996401439424,275.98960415833665,276.0795681727309,276.1695321871251,276.25949620151937,276.3494602159136,276.43942423030785,276.52938824470215,276.6193522590964,276.70931627349063,276.79928028788487,276.8892443022791,276.97920831667335,277.0691723310676,277.15913634546183,277.2491003598561,277.3390643742503,277.42902838864455,277.5189924030388,277.60895641743303,277.6989204318273,277.7888844462215,277.87884846061576,277.96881247501,278.05877648940424,278.1487405037985,278.2387045181927,278.32866853258696,278.4186325469812,278.50859656137544,278.5985605757697,278.6885245901639,278.77848860455816,278.8684526189524,278.95841663334664,279.0483806477409,279.1383446621351,279.22830867652937,279.3182726909236,279.40823670531785,279.4982007197121,279.5881647341064,279.6781287485006,279.76809276289487,279.8580567772891,279.94802079168335,280.0379848060776,280.12794882047183,280.21791283486607,280.3078768492603,280.39784086365455,280.4878048780488,280.57776889244303,280.6677329068373,280.7576969212315,280.84766093562575,280.93762495002,281.02758896441424,281.1175529788085,281.2075169932027,281.29748100759696,281.3874450219912,281.47740903638544,281.5673730507797,281.6573370651739,281.74730107956816,281.8372650939624,281.92722910835664,282.0171931227509,282.1071571371451,282.19712115153936,282.2870851659336,282.37704918032784,282.4670131947221,282.5569772091163,282.6469412235106,282.73690523790486,282.8268692522991,282.91683326669335,283.0067972810876,283.0967612954818,283.18672530987607,283.2766893242703,283.36665333866455,283.4566173530588,283.54658136745303,283.63654538184727,283.7265093962415,283.81647341063575,283.90643742503,283.99640143942423,284.0863654538185,284.1763294682127,284.26629348260695,284.3562574970012,284.44622151139544,284.5361855257897,284.6261495401839,284.71611355457816,284.8060775689724,284.89604158336664,284.9860055977609,285.0759696121551,285.16593362654936,285.2558976409436,285.34586165533784,285.4358256697321,285.5257896841263,285.61575369852056,285.70571771291486,285.7956817273091,285.88564574170334,285.9756097560976,286.0655737704918,286.15553778488606,286.2455017992803,286.33546581367455,286.4254298280688,286.515393842463,286.60535785685727,286.6953218712515,286.78528588564575,286.87524990004,286.96521391443423,287.05517792882847,287.1451419432227,287.23510595761695,287.3250699720112,287.41503398640543,287.5049980007997,287.5949620151939,287.68492602958815,287.7748900439824,287.86485405837664,287.9548180727709,288.0447820871651,288.13474610155936,288.2247101159536,288.31467413034784,288.4046381447421,288.4946021591363,288.58456617353056,288.6745301879248,288.7644942023191,288.85445821671334,288.9444222311076,289.0343862455018,289.12435025989606,289.2143142742903,289.30427828868454,289.3942423030788,289.484206317473,289.57417033186726,289.6641343462615,289.75409836065575,289.84406237505,289.9340263894442,290.02399040383847,290.1139544182327,290.20391843262695,290.2938824470212,290.38384646141543,290.47381047580967,290.5637744902039,290.65373850459815,290.7437025189924,290.83366653338663,290.9236305477809,291.0135945621751,291.10355857656936,291.1935225909636,291.28348660535784,291.3734506197521,291.4634146341463,291.55337864854056,291.6433426629348,291.7333066773291,291.82327069172334,291.9132347061176,292.0031987205118,292.09316273490606,292.1831267493003,292.27309076369454,292.3630547780888,292.453018792483,292.54298280687726,292.6329468212715,292.72291083566574,292.81287485006,292.9028388644542,292.99280287884847,293.0827668932427,293.17273090763695,293.2626949220312,293.3526589364254,293.44262295081967,293.5325869652139,293.62255097960815,293.7125149940024,293.80247900839663,293.89244302279087,293.9824070371851,294.07237105157935,294.1623350659736,294.25229908036783,294.3422630947621,294.4322271091563,294.52219112355056,294.6121551379448,294.70211915233904,294.79208316673333,294.8820471811276,294.9720111955218,295.06197520991606,295.1519392243103,295.24190323870454,295.3318672530988,295.421831267493,295.51179528188726,295.6017592962815,295.69172331067574,295.78168732507,295.8716513394642,295.96161535385846,296.0515793682527,296.14154338264694,296.2315073970412,296.3214714114354,296.41143542582967,296.5013994402239,296.59136345461815,296.6813274690124,296.7712914834066,296.86125549780087,296.9512195121951,297.04118352658935,297.1311475409836,297.22111155537783,297.3110755697721,297.4010395841663,297.49100359856055,297.5809676129548,297.67093162734903,297.7608956417433,297.8508596561376,297.9408236705318,298.03078768492605,298.1207516993203,298.21071571371454,298.3006797281088,298.390643742503,298.48060775689726,298.5705717712915,298.66053578568574,298.75049980008,298.8404638144742,298.93042782886846,299.0203918432627,299.11035585765694,299.2003198720512,299.2902838864454,299.38024790083966,299.4702119152339,299.56017592962814,299.6501399440224,299.7401039584166,299.83006797281087,299.9200319872051,300.00999600159935,300.0999600159936,300.18992403038783,300.27988804478207,300.3698520591763,300.45981607357055,300.5497800879648,300.63974410235903,300.7297081167533,300.8196721311475,300.9096361455418,300.99960015993605,301.0895641743303,301.17952818872453,301.2694922031188,301.359456217513,301.44942023190725,301.5393842463015,301.62934826069574,301.71931227509,301.8092762894842,301.89924030387846,301.9892043182727,302.07916833266694,302.1691323470612,302.2590963614554,302.34906037584966,302.4390243902439,302.52898840463814,302.6189524190324,302.7089164334266,302.79888044782086,302.8888444622151,302.97880847660934,303.0687724910036,303.1587365053978,303.24870051979207,303.3386645341863,303.42862854858055,303.5185925629748,303.60855657736903,303.69852059176327,303.7884846061575,303.87844862055175,303.96841263494605,304.0583766493403,304.14834066373453,304.23830467812877,304.328268692523,304.41823270691725,304.5081967213115,304.59816073570573,304.6881247501,304.7780887644942,304.86805277888845,304.9580167932827,305.04798080767694,305.1379448220712,305.2279088364654,305.31787285085966,305.4078368652539,305.49780087964814,305.5877648940424,305.6777289084366,305.76769292283086,305.8576569372251,305.94762095161934,306.0375849660136,306.1275489804078,306.21751299480206,306.3074770091963,306.39744102359055,306.4874050379848,306.577369052379,306.66733306677327,306.7572970811675,306.84726109556175,306.93722510995605,307.0271891243503,307.1171531387445,307.20711715313877,307.297081167533,307.38704518192725,307.4770091963215,307.56697321071573,307.65693722510997,307.7469012395042,307.83686525389845,307.9268292682927,308.01679328268693,308.1067572970812,308.1967213114754,308.28668532586966,308.3766493402639,308.46661335465814,308.5565773690524,308.6465413834466,308.73650539784086,308.8264694122351,308.91643342662934,309.0063974410236,309.0963614554178,309.18632546981206,309.2762894842063,309.36625349860054,309.4562175129948,309.546181527389,309.63614554178326,309.7261095561775,309.81607357057175,309.906037584966,309.9960015993603,310.0859656137545,310.17592962814877,310.265893642543,310.35585765693725,310.4458216713315,310.5357856857257,310.62574970011997,310.7157137145142,310.80567772890845,310.8956417433027,310.98560575769693,311.07556977209117,311.1655337864854,311.25549780087965,311.3454618152739,311.43542582966813,311.5253898440624,311.6153538584566,311.70531787285086,311.7952818872451,311.88524590163934,311.9752099160336,312.0651739304278,312.15513794482206,312.2451019592163,312.33506597361054,312.4250299880048,312.514994002399,312.60495801679326,312.6949220311875,312.78488604558174,312.874850059976,312.9648140743702,313.0547780887645,313.14474210315876,313.234706117553,313.32467013194724,313.4146341463415,313.5045981607357,313.59456217512997,313.6845261895242,313.77449020391845,313.8644542183127,313.9544182327069,314.04438224710117,314.1343462614954,314.22431027588965,314.3142742902839,314.40423830467813,314.4942023190724,314.5841663334666,314.67413034786085,314.7640943622551,314.85405837664933,314.9440223910436,315.0339864054378,315.12395041983206,315.2139144342263,315.30387844862054,315.3938424630148,315.483806477409,315.57377049180326,315.6637345061975,315.75369852059174,315.843662534986,315.9336265493802,316.02359056377446,316.11355457816876,316.203518592563,316.29348260695724,316.3834466213515,316.4734106357457,316.56337465013996,316.6533386645342,316.74330267892844,316.8332666933227,316.9232307077169,317.01319472211117,317.1031587365054,317.19312275089965,317.2830867652939,317.3730507796881,317.46301479408237,317.5529788084766,317.64294282287085,317.7329068372651,317.82287085165933,317.9128348660536,318.0027988804478,318.09276289484205,318.1827269092363,318.27269092363053,318.3626549380248,318.452618952419,318.54258296681326,318.6325469812075,318.72251099560174,318.812475009996,318.9024390243902,318.99240303878446,319.0823670531787,319.172331067573,319.26229508196724,319.3522590963615,319.4422231107557,319.53218712514996,319.6221511395442,319.71211515393844,319.8020791683327,319.8920431827269,319.98200719712116,320.0719712115154,320.16193522590964,320.2518992403039,320.3418632546981,320.43182726909237,320.5217912834866,320.61175529788085,320.7017193122751,320.79168332666933,320.88164734106357,320.9716113554578,321.06157536985205,321.1515393842463,321.24150339864053,321.3314674130348,321.421431427429,321.51139544182325,321.6013594562175,321.69132347061174,321.781287485006,321.8712514994002,321.96121551379446,322.0511795281887,322.141143542583,322.23110755697724,322.3210715713715,322.4110355857657,322.50099960015996,322.5909636145542,322.68092762894844,322.7708916433427,322.8608556577369,322.95081967213116,323.0407836865254,323.13074770091964,323.2207117153139,323.3106757297081,323.40063974410236,323.4906037584966,323.58056777289084,323.6705317872851,323.7604958016793,323.85045981607357,323.9404238304678,324.03038784486205,324.1203518592563,324.21031587365053,324.30027988804477,324.390243902439,324.48020791683325,324.5701719312275,324.66013594562173,324.750099960016,324.8400639744102,324.93002798880445,325.0199920031987,325.10995601759294,325.19992003198723,325.2898840463815,325.3798480607757,325.46981207516995,325.5597760895642,325.64974010395844,325.7397041183527,325.8296681327469,325.91963214714116,326.0095961615354,326.09956017592964,326.1895241903239,326.2794882047181,326.36945221911236,326.4594162335066,326.54938024790084,326.6393442622951,326.7293082766893,326.81927229108356,326.9092363054778,326.99920031987205,327.0891643342663,327.1791283486605,327.26909236305477,327.359056377449,327.44902039184325,327.5389844062375,327.62894842063173,327.71891243502597,327.8088764494202,327.89884046381445,327.9888044782087,328.07876849260293,328.1687325069972,328.25869652139147,328.3486605357857,328.43862455017995,328.5285885645742,328.61855257896843,328.7085165933627,328.7984806077569,328.88844462215116,328.9784086365454,329.06837265093964,329.1583366653339,329.2483006797281,329.33826469412236,329.4282287085166,329.51819272291084,329.6081567373051,329.6981207516993,329.78808476609356,329.8780487804878,329.96801279488204,330.0579768092763,330.1479408236705,330.23790483806476,330.327868852459,330.41783286685325,330.5077968812475,330.5977608956417,330.68772491003597,330.7776889244302,330.86765293882445,330.9576169532187,331.04758096761293,331.13754498200717,331.2275089964014,331.3174730107957,331.40743702518995,331.4974010395842,331.58736505397843,331.67732906837267,331.7672930827669,331.85725709716115,331.9472211115554,332.03718512594963,332.1271491403439,332.2171131547381,332.30707716913236,332.3970411835266,332.48700519792084,332.5769692123151,332.6669332267093,332.75689724110356,332.8468612554978,332.93682526989204,333.0267892842863,333.1167532986805,333.20671731307476,333.296681327469,333.38664534186324,333.4766093562575,333.5665733706517,333.65653738504597,333.7465013994402,333.83646541383445,333.9264294282287,334.0163934426229,334.10635745701717,334.1963214714114,334.28628548580565,334.37624950019995,334.4662135145942,334.5561775289884,334.64614154338267,334.7361055577769,334.82606957217115,334.9160335865654,335.00599760095963,335.0959616153539,335.1859256297481,335.27588964414235,335.3658536585366,335.45581767293083,335.5457816873251,335.6357457017193,335.72570971611356,335.8156737305078,335.90563774490204,335.9956017592963,336.0855657736905,336.17552978808476,336.265493802479,336.35545781687324,336.4454218312675,336.5353858456617,336.62534986005596,336.7153138744502,336.80527788884444,336.8952419032387,336.9852059176329,337.07516993202717,337.1651339464214,337.25509796081565,337.34506197520994,337.4350259896042,337.5249900039984,337.61495401839267,337.7049180327869,337.79488204718115,337.8848460615754,337.97481007596963,338.06477409036387,338.1547381047581,338.24470211915235,338.3346661335466,338.42463014794083,338.5145941623351,338.6045581767293,338.69452219112355,338.7844862055178,338.87445021991203,338.9644142343063,339.0543782487005,339.14434226309476,339.234306277489,339.32427029188324,339.4142343062775,339.5041983206717,339.59416233506596,339.6841263494602,339.77409036385444,339.8640543782487,339.9540183926429,340.04398240703716,340.1339464214314,340.22391043582564,340.3138744502199,340.4038384646142,340.4938024790084,340.58376649340266,340.6737305077969,340.76369452219114,340.8536585365854,340.9436225509796,341.03358656537387,341.1235505797681,341.21351459416235,341.3034786085566,341.39344262295083,341.48340663734507,341.5733706517393,341.66333466613355,341.7532986805278,341.84326269492203,341.9332267093163,342.0231907237105,342.11315473810475,342.203118752499,342.29308276689324,342.3830467812875,342.4730107956817,342.56297481007596,342.6529388244702,342.74290283886444,342.8328668532587,342.9228308676529,343.01279488204716,343.1027588964414,343.19272291083564,343.2826869252299,343.3726509396241,343.4626149540184,343.55257896841266,343.6425429828069,343.73250699720114,343.8224710115954,343.9124350259896,344.00239904038386,344.0923630547781,344.18232706917235,344.2722910835666,344.3622550979608,344.45221911235507,344.5421831267493,344.63214714114355,344.7221111555378,344.81207516993203,344.90203918432627,344.9920031987205,345.08196721311475,345.171931227509,345.26189524190323,345.3518592562975,345.4418232706917,345.53178728508595,345.6217512994802,345.71171531387444,345.8016793282687,345.8916433426629,345.98160735705716,346.0715713714514,346.16153538584564,346.2514994002399,346.3414634146341,346.43142742902836,346.52139144342266,346.6113554578169,346.70131947221114,346.7912834866054,346.8812475009996,346.97121151539386,347.0611755297881,347.15113954418234,347.2411035585766,347.3310675729708,347.42103158736506,347.5109956017593,347.60095961615355,347.6909236305478,347.780887644942,347.87085165933627,347.9608156737305,348.05077968812475,348.140743702519,348.23070771691323,348.32067173130747,348.4106357457017,348.50059976009595,348.5905637744902,348.68052778888443,348.7704918032787,348.8604558176729,348.95041983206715,349.0403838464614,349.13034786085564,349.2203118752499,349.3102758896441,349.40023990403836,349.4902039184326,349.5801679328269,349.67013194722114,349.7600959616154,349.8500599760096,349.94002399040386,350.0299880047981,350.11995201919234,350.2099160335866,350.2998800479808,350.38984406237506,350.4798080767693,350.56977209116354,350.6597361055578,350.749700119952,350.83966413434626,350.9296281487405,351.01959216313475,351.109556177529,351.1995201919232,351.28948420631747,351.3794482207117,351.46941223510595,351.5593762495002,351.64934026389443,351.73930427828867,351.8292682926829,351.91923230707715,352.0091963214714,352.09916033586563,352.1891243502599,352.2790883646541,352.36905237904836,352.4590163934426,352.5489804078369,352.63894442223113,352.7289084366254,352.8188724510196,352.90883646541386,352.9988004798081,353.08876449420234,353.1787285085966,353.2686925229908,353.35865653738506,353.4486205517793,353.53858456617354,353.6285485805678,353.718512594962,353.80847660935626,353.8984406237505,353.98840463814474,354.078368652539,354.1683326669332,354.25829668132747,354.3482606957217,354.43822471011595,354.5281887245102,354.6181527389044,354.70811675329867,354.7980807676929,354.88804478208715,354.9780087964814,355.06797281087563,355.15793682526987,355.2479008396641,355.33786485405835,355.4278288684526,355.51779288284683,355.60775689724113,355.6977209116354,355.7876849260296,355.87764894042385,355.9676129548181,356.05757696921233,356.1475409836066,356.2375049980008,356.32746901239506,356.4174330267893,356.50739704118354,356.5973610555778,356.687325069972,356.77728908436626,356.8672530987605,356.95721711315474,357.047181127549,357.1371451419432,357.22710915633746,357.3170731707317,357.40703718512594,357.4970011995202,357.5869652139144,357.67692922830867,357.7668932427029,357.85685725709715,357.9468212714914,358.0367852858856,358.12674930027987,358.2167133146741,358.30667732906835,358.3966413434626,358.48660535785683,358.5765693722511,358.66653338664537,358.7564974010396,358.84646141543385,358.9364254298281,359.02638944422233,359.1163534586166,359.2063174730108,359.29628148740505,359.3862455017993,359.47620951619353,359.5661735305878,359.656137544982,359.74610155937626,359.8360655737705,359.92602958816474,360.015993602559,360.1059576169532,360.19592163134746,360.2858856457417,360.37584966013594,360.4658136745302,360.5557776889244,360.64574170331866,360.7357057177129,360.82566973210714,360.9156337465014,361.0055977608956,361.09556177528987,361.1855257896841,361.27548980407835,361.3654538184726,361.45541783286683,361.54538184726107,361.6353458616553,361.7253098760496,361.81527389044385,361.9052379048381,361.99520191923233,362.08516593362657,362.1751299480208,362.26509396241505,362.3550579768093,362.44502199120353,362.5349860055978,362.624950019992,362.71491403438625,362.8048780487805,362.89484206317474,362.984806077569,363.0747700919632,363.16473410635746,363.2546981207517,363.34466213514594,363.4346261495402,363.5245901639344,363.61455417832866,363.7045181927229,363.79448220711714,363.8844462215114,363.9744102359056,364.06437425029986,364.1543382646941,364.24430227908834,364.3342662934826,364.4242303078768,364.51419432227107,364.6041583366653,364.69412235105955,364.78408636545385,364.8740503798481,364.9640143942423,365.05397840863657,365.1439424230308,365.23390643742505,365.3238704518193,365.41383446621353,365.50379848060777,365.593762495002,365.68372650939625,365.7736905237905,365.86365453818473,365.953618552579,366.0435825669732,366.13354658136745,366.2235105957617,366.31347461015594,366.4034386245502,366.4934026389444,366.58336665333866,366.6733306677329,366.76329468212714,366.8532586965214,366.9432227109156,367.03318672530986,367.1231507397041,367.21311475409834,367.3030787684926,367.3930427828868,367.48300679728106,367.5729708116753,367.66293482606955,367.75289884046384,367.8428628548581,367.9328268692523,368.02279088364656,368.1127548980408,368.20271891243505,368.2926829268293,368.3826469412235,368.47261095561777,368.562574970012,368.65253898440625,368.7425029988005,368.83246701319473,368.92243102758897,369.0123950419832,369.10235905637745,369.1923230707717,369.28228708516593,369.3722510995602,369.4622151139544,369.55217912834866,369.6421431427429,369.73210715713714,369.8220711715314,369.9120351859256,370.00199920031986,370.0919632147141,370.18192722910834,370.2718912435026,370.3618552578968,370.45181927229106,370.5417832866853,370.63174730107954,370.7217113154738,370.8116753298681,370.9016393442623,370.99160335865656,371.0815673730508,371.17153138744504,371.2614954018393,371.3514594162335,371.44142343062776,371.531387445022,371.62135145941625,371.7113154738105,371.8012794882047,371.89124350259897,371.9812075169932,372.07117153138745,372.1611355457817,372.25109956017593,372.34106357457017,372.4310275889644,372.52099160335865,372.6109556177529,372.70091963214713,372.7908836465414,372.8808476609356,372.97081167532986,373.0607756897241,373.15073970411834,373.2407037185126,373.3306677329068,373.42063174730106,373.5105957616953,373.60055977608954,373.6905237904838,373.780487804878,373.8704518192723,373.96041583366656,374.0503798480608,374.14034386245504,374.2303078768493,374.3202718912435,374.41023590563776,374.500199920032,374.59016393442624,374.6801279488205,374.7700919632147,374.86005597760897,374.9500199920032,375.03998400639745,375.1299480207917,375.2199120351859,375.30987604958017,375.3998400639744,375.48980407836865,375.5797680927629,375.66973210715713,375.75969612155137,375.8496601359456,375.93962415033985,376.0295881647341,376.11955217912833,376.2095161935226,376.2994802079168,376.38944422231106,376.4794082367053,376.56937225109954,376.6593362654938,376.749300279888,376.83926429428226,376.92922830867656,377.0191923230708,377.10915633746504,377.1991203518593,377.2890843662535,377.37904838064776,377.469012395042,377.55897640943624,377.6489404238305,377.7389044382247,377.82886845261896,377.9188324670132,378.00879648140744,378.0987604958017,378.1887245101959,378.27868852459017,378.3686525389844,378.45861655337865,378.5485805677729,378.6385445821671,378.72850859656137,378.8184726109556,378.90843662534985,378.9984006397441,379.08836465413833,379.1783286685326,379.2682926829268,379.35825669732105,379.4482207117153,379.53818472610953,379.6281487405038,379.718112754898,379.80807676929226,379.8980407836865,379.9880047980808,380.07796881247504,380.1679328268693,380.2578968412635,380.34786085565776,380.437824870052,380.52778888444624,380.6177528988405,380.7077169132347,380.79768092762896,380.8876449420232,380.97760895641744,381.0675729708117,381.1575369852059,381.24750099960016,381.3374650139944,381.42742902838864,381.5173930427829,381.6073570571771,381.69732107157137,381.7872850859656,381.87724910035985,381.9672131147541,382.05717712914833,382.14714114354257,382.2371051579368,382.32706917233105,382.4170331867253,382.50699720111953,382.5969612155138,382.686925229908,382.77688924430225,382.8668532586965,382.9568172730908,383.04678128748503,383.1367453018793,383.2267093162735,383.31667333066775,383.406637345062,383.49660135945624,383.5865653738505,383.6765293882447,383.76649340263896,383.8564574170332,383.94642143142744,384.0363854458217,384.1263494602159,384.21631347461016,384.3062774890044,384.39624150339864,384.4862055177929,384.5761695321871,384.66613354658136,384.7560975609756,384.84606157536984,384.9360255897641,385.0259896041583,385.11595361855257,385.2059176329468,385.29588164734105,385.3858456617353,385.47580967612953,385.56577369052377,385.655737704918,385.74570171931225,385.8356657337065,385.92562974810073,386.01559376249503,386.10555777688927,386.1955217912835,386.28548580567775,386.375449820072,386.46541383446623,386.5553778488605,386.6453418632547,386.73530587764895,386.8252698920432,386.91523390643744,387.0051979208317,387.0951619352259,387.18512594962016,387.2750899640144,387.36505397840864,387.4550179928029,387.5449820071971,387.63494602159136,387.7249100359856,387.81487405037984,387.9048380647741,387.9948020791683,388.08476609356256,388.1747301079568,388.26469412235105,388.3546581367453,388.4446221511395,388.53458616553377,388.624550179928,388.71451419432225,388.8044782087165,388.89444222311073,388.98440623750497,389.07437025189927,389.1643342662935,389.25429828068775,389.344262295082,389.43422630947623,389.52419032387047,389.6141543382647,389.70411835265895,389.7940823670532,389.88404638144743,389.9740103958417,390.0639744102359,390.15393842463016,390.2439024390244,390.33386645341864,390.4238304678129,390.5137944822071,390.60375849660136,390.6937225109956,390.78368652538984,390.8736505397841,390.9636145541783,391.05357856857256,391.1435425829668,391.23350659736104,391.3234706117553,391.4134346261495,391.50339864054376,391.593362654938,391.68332666933225,391.7732906837265,391.8632546981207,391.95321871251497,392.0431827269092,392.1331467413035,392.22311075569775,392.313074770092,392.4030387844862,392.49300279888047,392.5829668132747,392.67293082766895,392.7628948420632,392.85285885645743,392.94282287085167,393.0327868852459,393.12275089964015,393.2127149140344,393.30267892842863,393.3926429428229,393.4826069572171,393.57257097161136,393.6625349860056,393.75249900039984,393.8424630147941,393.9324270291883,394.02239104358256,394.1123550579768,394.20231907237104,394.2922830867653,394.3822471011595,394.47221111555376,394.562175129948,394.65213914434224,394.7421031587365,394.8320671731307,394.92203118752496,395.0119952019192,395.1019592163135,395.19192323070774,395.281887245102,395.3718512594962,395.46181527389047,395.5517792882847,395.64174330267895,395.7317073170732,395.8216713314674,395.91163534586167,396.0015993602559,396.09156337465015,396.1815273890444,396.27149140343863,396.3614554178329,396.4514194322271,396.54138344662135,396.6313474610156,396.72131147540983,396.8112754898041,396.9012395041983,396.99120351859256,397.0811675329868,397.17113154738104,397.2610955617753,397.3510595761695,397.44102359056376,397.530987604958,397.62095161935224,397.7109156337465,397.8008796481407,397.89084366253496,397.9808076769292,398.07077169132344,398.16073570571774,398.250699720112,398.3406637345062,398.43062774890046,398.5205917632947,398.61055577768894,398.7005197920832,398.7904838064774,398.88044782087167,398.9704118352659,399.06037584966015,399.1503398640544,399.24030387844863,399.33026789284287,399.4202319072371,399.51019592163135,399.6001599360256,399.69012395041983,399.7800879648141,399.8700519792083,399.96001599360255,400.0499800079968,400.13994402239103,400.2299080367853,400.3198720511795,400.40983606557376,400.499800079968,400.58976409436224,400.6797281087565,400.7696921231507,400.85965613754496,400.9496201519392,401.03958416633344,401.1295481807277,401.219512195122,401.3094762095162,401.39944022391046,401.4894042383047,401.57936825269894,401.6693322670932,401.7592962814874,401.84926029588166,401.9392243102759,402.02918832467014,402.1191523390644,402.2091163534586,402.29908036785287,402.3890443822471,402.47900839664135,402.5689724110356,402.65893642542983,402.74890043982407,402.8388644542183,402.92882846861255,403.0187924830068,403.10875649740103,403.1987205117953,403.2886845261895,403.37864854058375,403.468612554978,403.55857656937224,403.6485405837665,403.7385045981607,403.82846861255496,403.9184326269492,404.00839664134344,404.0983606557377,404.1883246701319,404.2782886845262,404.36825269892046,404.4582167133147,404.54818072770894,404.6381447421032,404.7281087564974,404.81807277089166,404.9080367852859,404.99800079968014,405.0879648140744,405.1779288284686,405.26789284286286,405.3578568572571,405.44782087165134,405.5377848860456,405.6277489004398,405.71771291483407,405.8076769292283,405.89764094362255,405.9876049580168,406.07756897241103,406.16753298680527,406.2574970011995,406.34746101559375,406.437425029988,406.52738904438223,406.6173530587765,406.7073170731707,406.79728108756495,406.8872451019592,406.97720911635344,407.0671731307477,407.1571371451419,407.24710115953616,407.33706517393045,407.4270291883247,407.51699320271894,407.6069572171132,407.6969212315074,407.78688524590166,407.8768492602959,407.96681327469014,408.0567772890844,408.1467413034786,408.23670531787286,408.3266693322671,408.41663334666134,408.5065973610556,408.5965613754498,408.68652538984406,408.7764894042383,408.86645341863255,408.9564174330268,409.046381447421,409.13634546181527,409.2263094762095,409.31627349060375,409.406237504998,409.49620151939223,409.58616553378647,409.6761295481807,409.76609356257495,409.8560575769692,409.94602159136343,410.0359856057577,410.1259496201519,410.21591363454615,410.30587764894045,410.3958416633347,410.48580567772893,410.5757696921232,410.6657337065174,410.75569772091166,410.8456617353059,410.93562574970014,411.0255897640944,411.1155537784886,411.20551779288286,411.2954818072771,411.38544582167134,411.4754098360656,411.5653738504598,411.65533786485406,411.7453018792483,411.83526589364254,411.9252299080368,412.015193922431,412.10515793682526,412.1951219512195,412.28508596561375,412.375049980008,412.4650139944022,412.55497800879647,412.6449420231907,412.73490603758495,412.8248700519792,412.91483406637343,413.00479808076767,413.0947620951619,413.18472610955615,413.2746901239504,413.3646541383447,413.45461815273893,413.54458216713317,413.6345461815274,413.72451019592165,413.8144742103159,413.90443822471013,413.9944022391044,414.0843662534986,414.17433026789286,414.2642942822871,414.35425829668134,414.4442223110756,414.5341863254698,414.62415033986406,414.7141143542583,414.80407836865254,414.8940423830468,414.984006397441,415.07397041183526,415.1639344262295,415.25389844062374,415.343862455018,415.4338264694122,415.52379048380647,415.6137544982007,415.70371851259495,415.7936825269892,415.8836465413834,415.97361055577767,416.0635745701719,416.15353858456615,416.2435025989604,416.33346661335463,416.4234306277489,416.51339464214317,416.6033586565374,416.69332267093165,416.7832866853259,416.87325069972013,416.9632147141144,417.0531787285086,417.14314274290285,417.2331067572971,417.32307077169133,417.4130347860856,417.5029988004798,417.59296281487406,417.6829268292683,417.77289084366254,417.8628548580568,417.952818872451,418.04278288684526,418.1327469012395,418.22271091563374,418.312674930028,418.4026389444222,418.49260295881646,418.5825669732107,418.67253098760494,418.7624950019992,418.8524590163934,418.94242303078767,419.0323870451819,419.12235105957615,419.2123150739704,419.3022790883646,419.39224310275887,419.48220711715317,419.5721711315474,419.66213514594165,419.7520991603359,419.84206317473013,419.93202718912437,420.0219912035186,420.11195521791285,420.2019192323071,420.29188324670133,420.3818472610956,420.4718112754898,420.56177528988405,420.6517393042783,420.74170331867253,420.8316673330668,420.921631347461,421.01159536185526,421.1015593762495,421.19152339064374,421.281487405038,421.3714514194322,421.46141543382646,421.5513794482207,421.64134346261494,421.7313074770092,421.8212714914034,421.91123550579766,422.0011995201919,422.09116353458614,422.1811275489804,422.2710915633746,422.36105557776887,422.4510195921631,422.5409836065574,422.63094762095164,422.7209116353459,422.8108756497401,422.90083966413437,422.9908036785286,423.08076769292285,423.1707317073171,423.26069572171133,423.35065973610557,423.4406237504998,423.53058776489405,423.6205517792883,423.71051579368253,423.8004798080768,423.890443822471,423.98040783686525,424.0703718512595,424.16033586565374,424.250299880048,424.3402638944422,424.43022790883646,424.5201919232307,424.61015593762494,424.7001199520192,424.7900839664134,424.88004798080766,424.9700119952019,425.05997600959614,425.1499400239904,425.2399040383846,425.32986805277886,425.4198320671731,425.5097960815674,425.59976009596164,425.6897241103559,425.7796881247501,425.86965213914436,425.9596161535386,426.04958016793285,426.1395441823271,426.2295081967213,426.31947221111557,426.4094362255098,426.49940023990405,426.5893642542983,426.67932826869253,426.76929228308677,426.859256297481,426.94922031187525,427.0391843262695,427.12914834066373,427.219112355058,427.3090763694522,427.39904038384645,427.4890043982407,427.57896841263494,427.6689324270292,427.7588964414234,427.84886045581766,427.9388244702119,428.02878848460614,428.1187524990004,428.2087165133946,428.29868052778886,428.3886445421831,428.47860855657734,428.56857257097164,428.6585365853659,428.7485005997601,428.83846461415436,428.9284286285486,429.01839264294284,429.1083566573371,429.1983206717313,429.28828468612556,429.3782487005198,429.46821271491405,429.5581767293083,429.6481407437025,429.73810475809677,429.828068772491,429.91803278688525,430.0079968012795,430.09796081567373,430.18792483006797,430.2778888444622,430.36785285885645,430.4578168732507,430.54778088764493,430.6377449020392,430.7277089164334,430.81767293082765,430.9076369452219,430.99760095961614,431.0875649740104,431.1775289884046,431.26749300279886,431.3574570171931,431.44742103158734,431.5373850459816,431.6273490603759,431.7173130747701,431.80727708916436,431.8972411035586,431.98720511795284,432.0771691323471,432.1671331467413,432.25709716113556,432.3470611755298,432.43702518992404,432.5269892043183,432.6169532187125,432.70691723310676,432.796881247501,432.88684526189525,432.9768092762895,433.0667732906837,433.15673730507797,433.2467013194722,433.33666533386645,433.4266293482607,433.51659336265493,433.60655737704917,433.6965213914434,433.78648540583765,433.8764494202319,433.96641343462613,434.0563774490204,434.1463414634146,434.23630547780886,434.3262694922031,434.41623350659734,434.5061975209916,434.5961615353858,434.6861255497801,434.77608956417436,434.8660535785686,434.95601759296284,435.0459816073571,435.1359456217513,435.22590963614556,435.3158736505398,435.40583766493404,435.4958016793283,435.5857656937225,435.67572970811676,435.765693722511,435.85565773690524,435.9456217512995,436.0355857656937,436.12554978008797,436.2155137944822,436.30547780887645,436.3954418232707,436.4854058376649,436.57536985205917,436.6653338664534,436.75529788084765,436.8452618952419,436.93522590963613,437.02518992403037,437.1151539384246,437.20511795281885,437.2950819672131,437.38504598160733,437.4750099960016,437.5649740103958,437.65493802479006,437.74490203918435,437.8348660535786,437.92483006797283,438.0147940823671,438.1047580967613,438.19472211115556,438.2846861255498,438.37465013994404,438.4646141543383,438.5545781687325,438.64454218312676,438.734506197521,438.82447021191524,438.9144342263095,439.0043982407037,439.09436225509796,439.1843262694922,439.27429028388644,439.3642542982807,439.4542183126749,439.54418232706917,439.6341463414634,439.72411035585765,439.8140743702519,439.9040383846461,439.99400239904037,440.0839664134346,440.17393042782885,440.2638944422231,440.35385845661733,440.4438224710116,440.5337864854058,440.62375049980005,440.71371451419435,440.8036785285886,440.89364254298283,440.9836065573771,441.0735705717713,441.16353458616555,441.2534986005598,441.34346261495403,441.4334266293483,441.5233906437425,441.61335465813676,441.703318672531,441.79328268692524,441.8832467013195,441.9732107157137,442.06317473010796,442.1531387445022,442.24310275889644,442.3330667732907,442.4230307876849,442.51299480207916,442.6029588164734,442.69292283086764,442.7828868452619,442.8728508596561,442.96281487405037,443.0527788884446,443.14274290283885,443.2327069172331,443.32267093162733,443.41263494602157,443.5025989604158,443.59256297481005,443.6825269892043,443.7724910035986,443.86245501799283,443.95241903238707,444.0423830467813,444.13234706117555,444.2223110755698,444.31227508996403,444.4022391043583,444.4922031187525,444.58216713314675,444.672131147541,444.76209516193524,444.8520591763295,444.9420231907237,445.03198720511796,445.1219512195122,445.21191523390644,445.3018792483007,445.3918432626949,445.48180727708916,445.5717712914834,445.66173530587764,445.7516993202719,445.8416633346661,445.93162734906036,446.0215913634546,446.11155537784884,446.2015193922431,446.2914834066373,446.38144742103157,446.4714114354258,446.56137544982005,446.6513394642143,446.74130347860853,446.8312674930028,446.92123150739707,447.0111955217913,447.10115953618555,447.1911235505798,447.28108756497403,447.37105157936827,447.4610155937625,447.55097960815675,447.640943622551,447.73090763694523,447.8208716513395,447.9108356657337,448.00079968012795,448.0907636945222,448.18072770891644,448.2706917233107,448.3606557377049,448.45061975209916,448.5405837664934,448.63054778088764,448.7205117952819,448.8104758096761,448.90043982407036,448.9904038384646,449.08036785285884,449.1703318672531,449.2602958816473,449.35025989604156,449.4402239104358,449.53018792483005,449.6201519392243,449.7101159536185,449.80007996801277,449.89004398240706,449.9800079968013,450.06997201119555,450.1599360255898,450.249900039984,450.33986405437827,450.4298280687725,450.51979208316675,450.609756097561,450.69972011195523,450.78968412634947,450.8796481407437,450.96961215513795,451.0595761695322,451.14954018392643,451.2395041983207,451.3294682127149,451.41943222710916,451.5093962415034,451.59936025589764,451.6893242702919,451.7792882846861,451.86925229908036,451.9592163134746,452.04918032786884,452.1391443422631,452.2291083566573,452.31907237105156,452.4090363854458,452.49900039984004,452.5889644142343,452.6789284286285,452.76889244302276,452.858856457417,452.9488204718113,453.03878448620554,453.1287485005998,453.218712514994,453.30867652938826,453.3986405437825,453.48860455817675,453.578568572571,453.6685325869652,453.75849660135947,453.8484606157537,453.93842463014795,454.0283886445422,454.11835265893643,454.20831667333067,454.2982806877249,454.38824470211915,454.4782087165134,454.56817273090763,454.6581367453019,454.7481007596961,454.83806477409036,454.9280287884846,455.01799280287884,455.1079568172731,455.1979208316673,455.28788484606156,455.3778488604558,455.46781287485004,455.5577768892443,455.6477409036385,455.73770491803276,455.827668932427,455.9176329468213,456.00759696121554,456.0975609756098,456.187524990004,456.27748900439826,456.3674530187925,456.45741703318674,456.547381047581,456.6373450619752,456.72730907636947,456.8172730907637,456.90723710515795,456.9972011195522,457.0871651339464,457.17712914834067,457.2670931627349,457.35705717712915,457.4470211915234,457.53698520591763,457.6269492203119,457.7169132347061,457.80687724910035,457.8968412634946,457.98680527788883,458.0767692922831,458.1667333066773,458.25669732107156,458.3466613354658,458.43662534986004,458.5265893642543,458.6165533786485,458.70651739304276,458.796481407437,458.88644542183124,458.97640943622554,459.0663734506198,459.156337465014,459.24630147940826,459.3362654938025,459.42622950819674,459.516193522591,459.6061575369852,459.69612155137946,459.7860855657737,459.87604958016794,459.9660135945622,460.0559776089564,460.14594162335067,460.2359056377449,460.32586965213915,460.4158336665334,460.5057976809276,460.59576169532187,460.6857257097161,460.77568972411035,460.8656537385046,460.95561775289883,461.0455817672931,461.1355457816873,461.22550979608155,461.3154738104758,461.40543782487003,461.4954018392643,461.5853658536585,461.67532986805276,461.765293882447,461.85525789684124,461.9452219112355,462.0351859256298,462.125149940024,462.21511395441826,462.3050779688125,462.39504198320674,462.485005997601,462.5749700119952,462.66493402638946,462.7548980407837,462.84486205517794,462.9348260695722,463.0247900839664,463.11475409836066,463.2047181127549,463.29468212714914,463.3846461415434,463.4746101559376,463.56457417033187,463.6545381847261,463.74450219912035,463.8344662135146,463.92443022790883,464.01439424230307,464.1043582566973,464.19432227109155,464.2842862854858,464.37425029988003,464.4642143142743,464.5541783286685,464.64414234306275,464.734106357457,464.82407037185123,464.9140343862455,465.0039984006397,465.093962415034,465.18392642942825,465.2738904438225,465.36385445821674,465.453818472611,465.5437824870052,465.63374650139946,465.7237105157937,465.81367453018794,465.9036385445822,465.9936025589764,466.08356657337066,466.1735305877649,466.26349460215914,466.3534586165534,466.4434226309476,466.53338664534186,466.6233506597361,466.71331467413034,466.8032786885246,466.8932427029188,466.98320671731307,467.0731707317073,467.16313474610155,467.2530987604958,467.34306277489003,467.43302678928427,467.5229908036785,467.61295481807275,467.702918832467,467.79288284686123,467.8828468612555,467.9728108756497,468.06277489004395,468.15273890443825,468.2427029188325,468.33266693322673,468.422630947621,468.5125949620152,468.60255897640945,468.6925229908037,468.78248700519794,468.8724510195922,468.9624150339864,469.05237904838066,469.1423430627749,469.23230707716914,469.3222710915634,469.4122351059576,469.50219912035186,469.5921631347461,469.68212714914034,469.7720911635346,469.8620551779288,469.95201919232306,470.0419832067173,470.13194722111155,470.2219112355058,470.3118752499,470.40183926429427,470.4918032786885,470.58176729308275,470.671731307477,470.76169532187123,470.85165933626547,470.9416233506597,471.03158736505395,471.12155137944825,471.2115153938425,471.30147940823673,471.39144342263097,471.4814074370252,471.57137145141945,471.6613354658137,471.75129948020793,471.8412634946022,471.9312275089964,472.02119152339066,472.1111555377849,472.20111955217914,472.2910835665734,472.3810475809676,472.47101159536186,472.5609756097561,472.65093962415034,472.7409036385446,472.8308676529388,472.92083166733306,473.0107956817273,473.10075969612154,473.1907237105158,473.28068772491,473.37065173930426,473.4606157536985,473.55057976809275,473.640543782487,473.7305077968812,473.82047181127547,473.9104358256697,474.00039984006395,474.0903638544582,474.1803278688525,474.2702918832467,474.36025589764097,474.4502199120352,474.54018392642945,474.6301479408237,474.72011195521793,474.81007596961217,474.9000399840064,474.99000399840065,475.0799680127949,475.16993202718913,475.2598960415834,475.3498600559776,475.43982407037186,475.5297880847661,475.61975209916034,475.7097161135546,475.7996801279488,475.88964414234306,475.9796081567373,476.06957217113154,476.1595361855258,476.24950019992,476.33946421431426,476.4294282287085,476.51939224310274,476.609356257497,476.6993202718912,476.78928428628546,476.8792483006797,476.96921231507395,477.0591763294682,477.1491403438624,477.2391043582567,477.32906837265097,477.4190323870452,477.50899640143945,477.5989604158337,477.6889244302279,477.77888844462217,477.8688524590164,477.95881647341065,478.0487804878049,478.13874450219913,478.2287085165934,478.3186725309876,478.40863654538185,478.4986005597761,478.58856457417033,478.6785285885646,478.7684926029588,478.85845661735306,478.9484206317473,479.03838464614154,479.1283486605358,479.21831267493,479.30827668932426,479.3982407037185,479.48820471811274,479.578168732507,479.6681327469012,479.75809676129546,479.8480607756897,479.93802479008394,480.0279888044782,480.1179528188724,480.20791683326667,480.29788084766096,480.3878448620552,480.47780887644944,480.5677728908437,480.6577369052379,480.74770091963217,480.8376649340264,480.92762894842065,481.0175929628149,481.10755697720913,481.19752099160337,481.2874850059976,481.37744902039185,481.4674130347861,481.55737704918033,481.6473410635746,481.7373050779688,481.82726909236305,481.9172331067573,482.00719712115153,482.0971611355458,482.18712514994,482.27708916433426,482.3670531787285,482.45701719312274,482.546981207517,482.6369452219112,482.72690923630546,482.8168732506997,482.90683726509394,482.9968012794882,483.0867652938824,483.17672930827666,483.2666933226709,483.3566573370652,483.44662135145944,483.5365853658537,483.6265493802479,483.71651339464216,483.8064774090364,483.89644142343064,483.9864054378249,484.0763694522191,484.16633346661337,484.2562974810076,484.34626149540185,484.4362255097961,484.52618952419033,484.61615353858457,484.7061175529788,484.79608156737305,484.8860455817673,484.97600959616153,485.0659736105558,485.15593762495,485.24590163934425,485.3358656537385,485.42582966813274,485.515793682527,485.6057576969212,485.69572171131546,485.7856857257097,485.87564974010394,485.9656137544982,486.0555777688924,486.14554178328666,486.2355057976809,486.3254698120752,486.41543382646944,486.5053978408637,486.5953618552579,486.68532586965216,486.7752898840464,486.86525389844064,486.9552179128349,487.0451819272291,487.13514594162336,487.2251099560176,487.31507397041185,487.4050379848061,487.4950019992003,487.58496601359457,487.6749300279888,487.76489404238305,487.8548580567773,487.94482207117153,488.03478608556577,488.12475009996,488.21471411435425,488.3046781287485,488.39464214314273,488.484606157537,488.5745701719312,488.66453418632545,488.7544982007197,488.84446221511394,488.9344262295082,489.0243902439024,489.11435425829666,489.2043182726909,489.29428228708514,489.38424630147944,489.4742103158737,489.5641743302679,489.65413834466216,489.7441023590564,489.83406637345064,489.9240303878449,490.0139944022391,490.10395841663336,490.1939224310276,490.28388644542184,490.3738504598161,490.4638144742103,490.55377848860456,490.6437425029988,490.73370651739305,490.8236705317873,490.9136345461815,491.00359856057577,491.09356257497,491.18352658936425,491.2734906037585,491.36345461815273,491.45341863254697,491.5433826469412,491.63334666133545,491.7233106757297,491.81327469012393,491.9032387045182,491.9932027189124,492.08316673330665,492.1731307477009,492.26309476209514,492.3530587764894,492.4430227908837,492.5329868052779,492.62295081967216,492.7129148340664,492.80287884846064,492.8928428628549,492.9828068772491,493.07277089164336,493.1627349060376,493.25269892043184,493.3426629348261,493.4326269492203,493.52259096361456,493.6125549780088,493.70251899240304,493.7924830067973,493.8824470211915,493.97241103558576,494.06237504998,494.15233906437425,494.2423030787685,494.3322670931627,494.42223110755697,494.5121951219512,494.60215913634545,494.6921231507397,494.78208716513393,494.87205117952817,494.9620151939224,495.05197920831665,495.1419432227109,495.23190723710513,495.3218712514994,495.4118352658936,495.5017992802879,495.59176329468215,495.6817273090764,495.77169132347063,495.8616553378649,495.9516193522591,496.04158336665336,496.1315473810476,496.22151139544184,496.3114754098361,496.4014394242303,496.49140343862456,496.5813674530188,496.67133146741304,496.7612954818073,496.8512594962015,496.94122351059576,497.03118752499,497.12115153938424,497.2111155537785,497.3010795681727,497.39104358256697,497.4810075969612,497.57097161135545,497.6609356257497,497.7508996401439,497.84086365453817,497.9308276689324,498.02079168332665,498.1107556977209,498.20071971211513,498.29068372650937,498.3806477409036,498.47061175529785,498.56057576969215,498.6505397840864,498.74050379848063,498.8304678128749,498.9204318272691,499.01039584166335,499.1003598560576,499.19032387045183,499.2802878848461,499.3702518992403,499.46021591363456,499.5501799280288,499.64014394242304,499.7301079568173,499.8200719712115,499.91003598560576,500.0]}

},{}],51:[function(require,module,exports){
(function (__filename){(function (){
/**
* @license Apache-2.0
*
* Copyright (c) 2022 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var tape = require( 'tape' );
var isnan = require( '@stdlib/math/base/assert/is-nan' );
var isNegativeZero = require( '@stdlib/math/base/assert/is-negative-zero' );
var isPositiveZero = require( '@stdlib/math/base/assert/is-positive-zero' );
var PINF = require( '@stdlib/constants/float64/pinf' );
var NINF = require( '@stdlib/constants/float64/ninf' );
var EPS = require( '@stdlib/constants/float64/eps' );
var abs = require( '@stdlib/math/base/special/abs' );
var sqrtpi = require( './../lib' );


// FIXTURES //

var hugePositive = require( './fixtures/julia/huge_positive.json' );
var veryLargePositive = require( './fixtures/julia/very_large_positive.json' );
var largePositive = require( './fixtures/julia/large_positive.json' );
var mediumPositive = require( './fixtures/julia/medium_positive.json' );
var smallPositive = require( './fixtures/julia/small_positive.json' );
var smaller = require( './fixtures/julia/smaller.json' );
var tinyPositive = require( './fixtures/julia/tiny_positive.json' );
var subnormal = require( './fixtures/julia/subnormal.json' );


// TESTS //

tape( 'main export is a function', function test( t ) {
	t.ok( true, __filename );
	t.strictEqual( typeof sqrtpi, 'function', 'main export is a function' );
	t.end();
});

tape( 'the function evaluates the principal square root when `x` is on the interval `[50,500]`', function test( t ) {
	var expected;
	var delta;
	var tol;
	var x;
	var y;
	var i;

	expected = veryLargePositive.expected;
	x = veryLargePositive.x;
	for ( i = 0; i < x.length; i++ ) {
		y = sqrtpi( x[i] );
		if ( y === expected[i] ) {
			t.equal( y, expected[i], 'x: '+x[i]+', y: '+y+', expected: '+expected[i] );
		} else {
			delta = abs( y - expected[i] );
			tol = EPS * abs( expected[i] );
			t.equal( delta <= tol, true, 'within tolerance. x: '+x[i]+'. y: '+y+'. E: '+expected[i]+'. Δ: '+delta+'. tol: '+tol+'.' );
		}
	}
	t.end();
});

tape( 'the function evaluates the principal square root when `x` is on the interval `[20,50]`', function test( t ) {
	var expected;
	var delta;
	var tol;
	var x;
	var y;
	var i;

	expected = largePositive.expected;
	x = largePositive.x;
	for ( i = 0; i < x.length; i++ ) {
		y = sqrtpi( x[i] );
		if ( y === expected[i] ) {
			t.equal( y, expected[i], 'x: '+x[i]+', y: '+y+', expected: '+expected[i] );
		} else {
			delta = abs( y - expected[i] );
			tol = EPS * abs( expected[i] );
			t.equal( delta <= tol, true, 'within tolerance. x: '+x[i]+'. y: '+y+'. E: '+expected[i]+'. Δ: '+delta+'. tol: '+tol+'.' );
		}
	}
	t.end();
});

tape( 'the function evaluates the principal square root when `x` is on the interval `[3,20]`', function test( t ) {
	var expected;
	var delta;
	var tol;
	var x;
	var y;
	var i;

	expected = mediumPositive.expected;
	x = mediumPositive.x;
	for ( i = 0; i < x.length; i++ ) {
		y = sqrtpi( x[i] );
		if ( y === expected[i] ) {
			t.equal( y, expected[i], 'x: '+x[i]+', y: '+y+', expected: '+expected[i] );
		} else {
			delta = abs( y - expected[i] );
			tol = EPS * abs( expected[i] );
			t.equal( delta <= tol, true, 'within tolerance. x: '+x[i]+'. y: '+y+'. E: '+expected[i]+'. Δ: '+delta+'. tol: '+tol+'.' );
		}
	}
	t.end();
});

tape( 'the function evaluates the principal square root when `x` is on the interval `[0.8,3]`', function test( t ) {
	var expected;
	var delta;
	var tol;
	var x;
	var y;
	var i;

	expected = smallPositive.expected;
	x = smallPositive.x;
	for ( i = 0; i < x.length; i++ ) {
		y = sqrtpi( x[i] );
		if ( y === expected[i] ) {
			t.equal( y, expected[i], 'x: '+x[i]+', y: '+y+', expected: '+expected[i] );
		} else {
			delta = abs( y - expected[i] );
			tol = EPS * abs( expected[i] );
			t.equal( delta <= tol, true, 'within tolerance. x: '+x[i]+'. y: '+y+'. E: '+expected[i]+'. Δ: '+delta+'. tol: '+tol+'.' );
		}
	}
	t.end();
});

tape( 'the function evaluates principal square root when `x` is on the interval `[0.0,0.8]`', function test( t ) {
	var expected;
	var delta;
	var tol;
	var x;
	var y;
	var i;

	expected = smaller.expected;
	x = smaller.x;
	for ( i = 0; i < x.length; i++ ) {
		y = sqrtpi( x[i] );
		if ( y === expected[i] ) {
			t.equal( y, expected[i], 'x: '+x[i]+', y: '+y+', expected: '+expected[i] );
		} else {
			delta = abs( y - expected[i] );
			tol = EPS * abs( expected[i] );
			t.equal( delta <= tol, true, 'within tolerance. x: '+x[i]+'. y: '+y+'. E: '+expected[i]+'. Δ: '+delta+'. tol: '+tol+'.' );
		}
	}
	t.end();
});

tape( 'the function evaluates the principal square root when `x` is on the interval `[1e-300,1e-308]`', function test( t ) {
	var expected;
	var delta;
	var tol;
	var x;
	var y;
	var i;

	expected = tinyPositive.expected;
	x = tinyPositive.x;
	for ( i = 0; i < x.length; i++ ) {
		y = sqrtpi( x[i] );
		if ( y === expected[i] ) {
			t.equal( y, expected[i], 'x: '+x[i]+', y: '+y+', expected: '+expected[i] );
		} else {
			delta = abs( y - expected[i] );
			tol = EPS * abs( expected[i] );
			t.equal( delta <= tol, true, 'within tolerance. x: '+x[i]+'. y: '+y+'. E: '+expected[i]+'. Δ: '+delta+'. tol: '+tol+'.' );
		}
	}
	t.end();
});

tape( 'the function evaluates the principal square root when `x` is subnormal', function test( t ) {
	var expected;
	var delta;
	var tol;
	var x;
	var y;
	var i;

	expected = subnormal.expected;
	x = subnormal.x;
	for ( i = 0; i < x.length; i++ ) {
		y = sqrtpi( x[i] );
		if ( y === expected[i] ) {
			t.equal( y, expected[i], 'x: '+x[i]+', y: '+y+', expected: '+expected[i] );
		} else {
			delta = abs( y - expected[i] );
			tol = EPS * abs( expected[i] );
			t.equal( delta <= tol, true, 'within tolerance. x: '+x[i]+'. y: '+y+'. E: '+expected[i]+'. Δ: '+delta+'. tol: '+tol+'.' );
		}
	}
	t.end();
});

tape( 'the function evaluates the principal square root for huge positive numbers', function test( t ) {
	var expected;
	var delta;
	var tol;
	var x;
	var y;
	var i;

	expected = hugePositive.expected;
	x = hugePositive.x;
	for ( i = 0; i < x.length; i++ ) {
		y = sqrtpi( x[i] );
		if ( y === expected[i] ) {
			t.equal( y, expected[i], 'x: '+x[i]+', y: '+y+', expected: '+expected[i] );
		} else {
			delta = abs( y - expected[i] );
			tol = EPS * abs( expected[i] );
			t.equal( delta <= tol, true, 'within tolerance. x: '+x[i]+'. y: '+y+'. E: '+expected[i]+'. Δ: '+delta+'. tol: '+tol+'.' );
		}
	}
	t.end();
});

tape( 'the function returns `NaN` if provided `NaN`', function test( t ) {
	var v = sqrtpi( NaN );
	t.equal( isnan( v ), true, 'returns NaN' );
	t.end();
});

tape( 'the function returns `+infinity` if provided `+infinity`', function test( t ) {
	var v = sqrtpi( PINF );
	t.equal( v, PINF, 'returns +infinity' );
	t.end();
});

tape( 'the function returns `+0` if provided `+0`', function test( t ) {
	var v = sqrtpi( +0.0 );
	t.equal( isPositiveZero( v ), true, 'returns 0' );
	t.end();
});

tape( 'the function returns `-0` if provided `-0`', function test( t ) {
	var v = sqrtpi( -0.0 );
	t.equal( isNegativeZero( v ), true, 'returns -0' );
	t.end();
});

tape( 'the function returns `NaN` if provided a negative number', function test( t ) {
	var v = sqrtpi( -4.0 );
	t.equal( isnan( v ), true, 'returns NaN' );
	t.end();
});

tape( 'the function returns `NaN` if provided `NaN`', function test( t ) {
	var v = sqrtpi( NaN );
	t.equal( isnan( v ), true, 'returns NaN' );
	t.end();
});

tape( 'the function returns `NaN` if provided `-infinity`', function test( t ) {
	var v = sqrtpi( NINF );
	t.equal( isnan( v ), true, 'returns NaN' );
	t.end();
});

}).call(this)}).call(this,"/lib/node_modules/@stdlib/math/base/special/sqrtpi/test/test.js")
},{"./../lib":41,"./fixtures/julia/huge_positive.json":43,"./fixtures/julia/large_positive.json":44,"./fixtures/julia/medium_positive.json":45,"./fixtures/julia/small_positive.json":46,"./fixtures/julia/smaller.json":47,"./fixtures/julia/subnormal.json":48,"./fixtures/julia/tiny_positive.json":49,"./fixtures/julia/very_large_positive.json":50,"@stdlib/constants/float64/eps":27,"@stdlib/constants/float64/ninf":28,"@stdlib/constants/float64/pinf":30,"@stdlib/math/base/assert/is-nan":31,"@stdlib/math/base/assert/is-negative-zero":33,"@stdlib/math/base/assert/is-positive-zero":35,"@stdlib/math/base/special/abs":37,"tape":232}],52:[function(require,module,exports){
(function (__filename,__dirname){(function (){
/**
* @license Apache-2.0
*
* Copyright (c) 2022 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var resolve = require( 'path' ).resolve;
var tape = require( 'tape' );
var isnan = require( '@stdlib/math/base/assert/is-nan' );
var isNegativeZero = require( '@stdlib/math/base/assert/is-negative-zero' );
var isPositiveZero = require( '@stdlib/math/base/assert/is-positive-zero' );
var PINF = require( '@stdlib/constants/float64/pinf' );
var NINF = require( '@stdlib/constants/float64/ninf' );
var EPS = require( '@stdlib/constants/float64/eps' );
var tryRequire = require( '@stdlib/utils/try-require' );
var abs = require( '@stdlib/math/base/special/abs' );


// FIXTURES //

var hugePositive = require( './fixtures/julia/huge_positive.json' );
var veryLargePositive = require( './fixtures/julia/very_large_positive.json' );
var largePositive = require( './fixtures/julia/large_positive.json' );
var mediumPositive = require( './fixtures/julia/medium_positive.json' );
var smallPositive = require( './fixtures/julia/small_positive.json' );
var smaller = require( './fixtures/julia/smaller.json' );
var tinyPositive = require( './fixtures/julia/tiny_positive.json' );
var subnormal = require( './fixtures/julia/subnormal.json' );


// VARIABLES //

var sqrtpi = tryRequire( resolve( __dirname, './../lib/native.js' ) );
var opts = {
	'skip': ( sqrtpi instanceof Error )
};


// TESTS //

tape( 'main export is a function', opts, function test( t ) {
	t.ok( true, __filename );
	t.strictEqual( typeof sqrtpi, 'function', 'main export is a function' );
	t.end();
});

tape( 'the function evaluates the principal square root when `x` is on the interval `[50,500]`', opts, function test( t ) {
	var expected;
	var delta;
	var tol;
	var x;
	var y;
	var i;

	expected = veryLargePositive.expected;
	x = veryLargePositive.x;
	for ( i = 0; i < x.length; i++ ) {
		y = sqrtpi( x[i] );
		if ( y === expected[i] ) {
			t.equal( y, expected[i], 'x: '+x[i]+', y: '+y+', expected: '+expected[i] );
		} else {
			delta = abs( y - expected[i] );
			tol = EPS * abs( expected[i] );
			t.equal( delta <= tol, true, 'within tolerance. x: '+x[i]+'. y: '+y+'. E: '+expected[i]+'. Δ: '+delta+'. tol: '+tol+'.' );
		}
	}
	t.end();
});

tape( 'the function evaluates the principal square root when `x` is on the interval `[20,50]`', opts, function test( t ) {
	var expected;
	var delta;
	var tol;
	var x;
	var y;
	var i;

	expected = largePositive.expected;
	x = largePositive.x;
	for ( i = 0; i < x.length; i++ ) {
		y = sqrtpi( x[i] );
		if ( y === expected[i] ) {
			t.equal( y, expected[i], 'x: '+x[i]+', y: '+y+', expected: '+expected[i] );
		} else {
			delta = abs( y - expected[i] );
			tol = EPS * abs( expected[i] );
			t.equal( delta <= tol, true, 'within tolerance. x: '+x[i]+'. y: '+y+'. E: '+expected[i]+'. Δ: '+delta+'. tol: '+tol+'.' );
		}
	}
	t.end();
});

tape( 'the function evaluates the principal square root when `x` is on the interval `[3,20]`', opts, function test( t ) {
	var expected;
	var delta;
	var tol;
	var x;
	var y;
	var i;

	expected = mediumPositive.expected;
	x = mediumPositive.x;
	for ( i = 0; i < x.length; i++ ) {
		y = sqrtpi( x[i] );
		if ( y === expected[i] ) {
			t.equal( y, expected[i], 'x: '+x[i]+', y: '+y+', expected: '+expected[i] );
		} else {
			delta = abs( y - expected[i] );
			tol = EPS * abs( expected[i] );
			t.equal( delta <= tol, true, 'within tolerance. x: '+x[i]+'. y: '+y+'. E: '+expected[i]+'. Δ: '+delta+'. tol: '+tol+'.' );
		}
	}
	t.end();
});

tape( 'the function evaluates the principal square root when `x` is on the interval `[0.8,3]`', opts, function test( t ) {
	var expected;
	var delta;
	var tol;
	var x;
	var y;
	var i;

	expected = smallPositive.expected;
	x = smallPositive.x;
	for ( i = 0; i < x.length; i++ ) {
		y = sqrtpi( x[i] );
		if ( y === expected[i] ) {
			t.equal( y, expected[i], 'x: '+x[i]+', y: '+y+', expected: '+expected[i] );
		} else {
			delta = abs( y - expected[i] );
			tol = EPS * abs( expected[i] );
			t.equal( delta <= tol, true, 'within tolerance. x: '+x[i]+'. y: '+y+'. E: '+expected[i]+'. Δ: '+delta+'. tol: '+tol+'.' );
		}
	}
	t.end();
});

tape( 'the function evaluates principal square root when `x` is on the interval `[0.0,0.8]`', opts, function test( t ) {
	var expected;
	var delta;
	var tol;
	var x;
	var y;
	var i;

	expected = smaller.expected;
	x = smaller.x;
	for ( i = 0; i < x.length; i++ ) {
		y = sqrtpi( x[i] );
		if ( y === expected[i] ) {
			t.equal( y, expected[i], 'x: '+x[i]+', y: '+y+', expected: '+expected[i] );
		} else {
			delta = abs( y - expected[i] );
			tol = EPS * abs( expected[i] );
			t.equal( delta <= tol, true, 'within tolerance. x: '+x[i]+'. y: '+y+'. E: '+expected[i]+'. Δ: '+delta+'. tol: '+tol+'.' );
		}
	}
	t.end();
});

tape( 'the function evaluates the principal square root when `x` is on the interval `[1e-300,1e-308]`', opts, function test( t ) {
	var expected;
	var delta;
	var tol;
	var x;
	var y;
	var i;

	expected = tinyPositive.expected;
	x = tinyPositive.x;
	for ( i = 0; i < x.length; i++ ) {
		y = sqrtpi( x[i] );
		if ( y === expected[i] ) {
			t.equal( y, expected[i], 'x: '+x[i]+', y: '+y+', expected: '+expected[i] );
		} else {
			delta = abs( y - expected[i] );
			tol = EPS * abs( expected[i] );
			t.equal( delta <= tol, true, 'within tolerance. x: '+x[i]+'. y: '+y+'. E: '+expected[i]+'. Δ: '+delta+'. tol: '+tol+'.' );
		}
	}
	t.end();
});

tape( 'the function evaluates the principal square root when `x` is subnormal', opts, function test( t ) {
	var expected;
	var delta;
	var tol;
	var x;
	var y;
	var i;

	expected = subnormal.expected;
	x = subnormal.x;
	for ( i = 0; i < x.length; i++ ) {
		y = sqrtpi( x[i] );
		if ( y === expected[i] ) {
			t.equal( y, expected[i], 'x: '+x[i]+', y: '+y+', expected: '+expected[i] );
		} else {
			delta = abs( y - expected[i] );
			tol = EPS * abs( expected[i] );
			t.equal( delta <= tol, true, 'within tolerance. x: '+x[i]+'. y: '+y+'. E: '+expected[i]+'. Δ: '+delta+'. tol: '+tol+'.' );
		}
	}
	t.end();
});

tape( 'the function evaluates the principal square root for huge positive numbers', opts, function test( t ) {
	var expected;
	var delta;
	var tol;
	var x;
	var y;
	var i;

	expected = hugePositive.expected;
	x = hugePositive.x;
	for ( i = 0; i < x.length; i++ ) {
		y = sqrtpi( x[i] );
		if ( y === expected[i] ) {
			t.equal( y, expected[i], 'x: '+x[i]+', y: '+y+', expected: '+expected[i] );
		} else {
			delta = abs( y - expected[i] );
			tol = EPS * abs( expected[i] );
			t.equal( delta <= tol, true, 'within tolerance. x: '+x[i]+'. y: '+y+'. E: '+expected[i]+'. Δ: '+delta+'. tol: '+tol+'.' );
		}
	}
	t.end();
});

tape( 'the function returns `NaN` if provided `NaN`', opts, function test( t ) {
	var v = sqrtpi( NaN );
	t.equal( isnan( v ), true, 'returns NaN' );
	t.end();
});

tape( 'the function returns `+infinity` if provided `+infinity`', opts, function test( t ) {
	var v = sqrtpi( PINF );
	t.equal( v, PINF, 'returns +infinity' );
	t.end();
});

tape( 'the function returns `+0` if provided `+0`', opts, function test( t ) {
	var v = sqrtpi( +0.0 );
	t.equal( isPositiveZero( v ), true, 'returns 0' );
	t.end();
});

tape( 'the function returns `-0` if provided `-0`', opts, function test( t ) {
	var v = sqrtpi( -0.0 );
	t.equal( isNegativeZero( v ), true, 'returns -0' );
	t.end();
});

tape( 'the function returns `NaN` if provided a negative number', opts, function test( t ) {
	var v = sqrtpi( -4.0 );
	t.equal( isnan( v ), true, 'returns NaN' );
	t.end();
});

tape( 'the function returns `NaN` if provided `NaN`', opts, function test( t ) {
	var v = sqrtpi( NaN );
	t.equal( isnan( v ), true, 'returns NaN' );
	t.end();
});

tape( 'the function returns `NaN` if provided `-infinity`', opts, function test( t ) {
	var v = sqrtpi( NINF );
	t.equal( isnan( v ), true, 'returns NaN' );
	t.end();
});

}).call(this)}).call(this,"/lib/node_modules/@stdlib/math/base/special/sqrtpi/test/test.native.js","/lib/node_modules/@stdlib/math/base/special/sqrtpi/test")
},{"./fixtures/julia/huge_positive.json":43,"./fixtures/julia/large_positive.json":44,"./fixtures/julia/medium_positive.json":45,"./fixtures/julia/small_positive.json":46,"./fixtures/julia/smaller.json":47,"./fixtures/julia/subnormal.json":48,"./fixtures/julia/tiny_positive.json":49,"./fixtures/julia/very_large_positive.json":50,"@stdlib/constants/float64/eps":27,"@stdlib/constants/float64/ninf":28,"@stdlib/constants/float64/pinf":30,"@stdlib/math/base/assert/is-nan":31,"@stdlib/math/base/assert/is-negative-zero":33,"@stdlib/math/base/assert/is-positive-zero":35,"@stdlib/math/base/special/abs":37,"@stdlib/utils/try-require":100,"path":114,"tape":232}],53:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Constructor which returns a `Number` object.
*
* @module @stdlib/number/ctor
*
* @example
* var Number = require( '@stdlib/number/ctor' );
*
* var v = new Number( 10.0 );
* // returns <Number>
*/

// MODULES //

var main = require( './main.js' );


// EXPORTS //

module.exports = main;

},{"./main.js":54}],54:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// EXPORTS //

module.exports = Number; // eslint-disable-line stdlib/require-globals

},{}],55:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2022 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Object constructor.
*
* @module @stdlib/object/ctor
*
* @example
* var Object = require( '@stdlib/object/ctor' );
*
* var o = new Object( null );
* // returns {}
*
* o = new Object( 5.0 );
* // returns <Number>
*
* o = new Object( 'beep' );
* // returns <String>
*
* var o1 = {};
*
* var o2 = new Object( o1 );
* // returns {}
*
* var bool = ( o1 === o2 );
* // returns true
*/

// MODULES //

var main = require( './main.js' );


// EXPORTS //

module.exports = main;

},{"./main.js":56}],56:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2022 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MAIN //

/**
* Returns an object.
*
* @name Object
* @constructor
* @type {Function}
* @param {*} value - input value
* @returns {Object} object
*
* @example
* var o = new Object( null );
* // returns {}
*
* @example
* var o = new Object( 5.0 );
* // returns <Number>
*
* @example
* var o = new Object( 'beep' );
* // returns <String>
*
* @example
* var o1 = {};
*
* var o2 = new Object( o1 );
* // returns {}
*
* var bool = ( o1 === o2 );
* // returns true
*/
var Obj = Object; // eslint-disable-line stdlib/require-globals


// EXPORTS //

module.exports = Obj;

},{}],57:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2021 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Regular expression to capture everything that is not a space immediately after the `function` keyword and before the first left parenthesis.
*
* @module @stdlib/regexp/function-name
*
* @example
* var reFunctionName = require( '@stdlib/regexp/function-name' );
* var RE_FUNCTION_NAME = reFunctionName();
*
* function fname( fcn ) {
*     return RE_FUNCTION_NAME.exec( fcn.toString() )[ 1 ];
* }
*
* var fn = fname( Math.sqrt );
* // returns 'sqrt'
*
* fn = fname( Int8Array );
* // returns 'Int8Array'
*
* fn = fname( Object.prototype.toString );
* // returns 'toString'
*
* fn = fname( function(){} );
* // returns ''
*/

// MODULES //

var setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );
var main = require( './main.js' );
var REGEXP = require( './regexp.js' );


// MAIN //

setReadOnly( main, 'REGEXP', REGEXP );


// EXPORTS //

module.exports = main;

},{"./main.js":58,"./regexp.js":59,"@stdlib/utils/define-nonenumerable-read-only-property":77}],58:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2021 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MAIN //

/**
* Returns a regular expression to capture everything that is not a space immediately after the `function` keyword and before the first left parenthesis.
*
* @returns {RegExp} regular expression
*
* @example
* var RE_FUNCTION_NAME = reFunctionName();
*
* function fname( fcn ) {
*     return RE_FUNCTION_NAME.exec( fcn.toString() )[ 1 ];
* }
*
* var fn = fname( Math.sqrt );
* // returns 'sqrt'
*
* fn = fname( Int8Array );
* // returns 'Int8Array'
*
* fn = fname( Object.prototype.toString );
* // returns 'toString'
*
* fn = fname( function(){} );
* // returns ''
*/
function reFunctionName() {
	return /^\s*function\s*([^(]*)/i;
}


// EXPORTS //

module.exports = reFunctionName;

},{}],59:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var reFunctionName = require( './main.js' );


// MAIN //

/**
* Captures everything that is not a space immediately after the `function` keyword and before the first left parenthesis.
*
* Regular expression: `/^\s*function\s*([^(]*)/i`
*
* -   `/^\s*`
*     -   Match zero or more spaces at beginning
*
* -   `function`
*     -   Match the word `function`
*
* -   `\s*`
*     -   Match zero or more spaces after the word `function`
*
* -   `()`
*     -   Capture
*
* -   `[^(]*`
*     -   Match anything except a left parenthesis `(` zero or more times
*
* -   `/i`
*     -   ignore case
*
* @constant
* @type {RegExp}
* @default /^\s*function\s*([^(]*)/i
*/
var RE_FUNCTION_NAME = reFunctionName();


// EXPORTS //

module.exports = RE_FUNCTION_NAME;

},{"./main.js":58}],60:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2022 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var isNumber = require( './is_number.js' );

// NOTE: for the following, we explicitly avoid using stdlib packages in this particular package in order to avoid circular dependencies.
var abs = Math.abs; // eslint-disable-line stdlib/no-builtin-math
var lowercase = String.prototype.toLowerCase;
var uppercase = String.prototype.toUpperCase;
var replace = String.prototype.replace;


// VARIABLES //

var RE_EXP_POS_DIGITS = /e\+(\d)$/;
var RE_EXP_NEG_DIGITS = /e-(\d)$/;
var RE_ONLY_DIGITS = /^(\d+)$/;
var RE_DIGITS_BEFORE_EXP = /^(\d+)e/;
var RE_TRAILING_PERIOD_ZERO = /\.0$/;
var RE_PERIOD_ZERO_EXP = /\.0*e/;
var RE_ZERO_BEFORE_EXP = /(\..*[^0])0*e/;


// MAIN //

/**
* Formats a token object argument as a floating-point number.
*
* @private
* @param {Object} token - token object
* @throws {Error} must provide a valid floating-point number
* @returns {string} formatted token argument
*/
function formatDouble( token ) {
	var digits;
	var out;
	var f = parseFloat( token.arg );
	if ( !isFinite( f ) ) { // NOTE: We use the global `isFinite` function here instead of `@stdlib/math/base/assert/is-finite` in order to avoid circular dependencies.
		if ( !isNumber( token.arg ) ) {
			throw new Error( 'invalid floating-point number. Value: ' + out );
		}
		// Case: NaN, Infinity, or -Infinity
		f = token.arg;
	}
	switch ( token.specifier ) {
	case 'e':
	case 'E':
		out = f.toExponential( token.precision );
		break;
	case 'f':
	case 'F':
		out = f.toFixed( token.precision );
		break;
	case 'g':
	case 'G':
		if ( abs( f ) < 0.0001 ) {
			digits = token.precision;
			if ( digits > 0 ) {
				digits -= 1;
			}
			out = f.toExponential( digits );
		} else {
			out = f.toPrecision( token.precision );
		}
		if ( !token.alternate ) {
			out = replace.call( out, RE_ZERO_BEFORE_EXP, '$1e' );
			out = replace.call( out, RE_PERIOD_ZERO_EXP, 'e' );
			out = replace.call( out, RE_TRAILING_PERIOD_ZERO, '' );
		}
		break;
	default:
		throw new Error( 'invalid double notation. Value: ' + token.specifier );
	}
	out = replace.call( out, RE_EXP_POS_DIGITS, 'e+0$1' );
	out = replace.call( out, RE_EXP_NEG_DIGITS, 'e-0$1' );
	if ( token.alternate ) {
		out = replace.call( out, RE_ONLY_DIGITS, '$1.' );
		out = replace.call( out, RE_DIGITS_BEFORE_EXP, '$1.e' );
	}
	if ( f >= 0 && token.sign ) {
		out = token.sign + out;
	}
	out = ( token.specifier === uppercase.call( token.specifier ) ) ?
		uppercase.call( out ) :
		lowercase.call( out );
	return out;
}


// EXPORTS //

module.exports = formatDouble;

},{"./is_number.js":63}],61:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2022 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var isNumber = require( './is_number.js' );
var zeroPad = require( './zero_pad.js' );

// NOTE: for the following, we explicitly avoid using stdlib packages in this particular package in order to avoid circular dependencies.
var lowercase = String.prototype.toLowerCase;
var uppercase = String.prototype.toUpperCase;


// MAIN //

/**
* Formats a token object argument as an integer.
*
* @private
* @param {Object} token - token object
* @throws {Error} must provide a valid integer
* @returns {string} formatted token argument
*/
function formatInteger( token ) {
	var base;
	var out;
	var i;

	switch ( token.specifier ) {
	case 'b':
		// Case: %b (binary)
		base = 2;
		break;
	case 'o':
		// Case: %o (octal)
		base = 8;
		break;
	case 'x':
	case 'X':
		// Case: %x, %X (hexadecimal)
		base = 16;
		break;
	case 'd':
	case 'i':
	case 'u':
	default:
		// Case: %d, %i, %u (decimal)
		base = 10;
		break;
	}
	out = token.arg;
	i = parseInt( out, 10 );
	if ( !isFinite( i ) ) { // NOTE: We use the global `isFinite` function here instead of `@stdlib/math/base/assert/is-finite` in order to avoid circular dependencies.
		if ( !isNumber( out ) ) {
			throw new Error( 'invalid integer. Value: ' + out );
		}
		i = 0;
	}
	if ( i < 0 && ( token.specifier === 'u' || base !== 10 ) ) {
		i = 0xffffffff + i + 1;
	}
	if ( i < 0 ) {
		out = ( -i ).toString( base );
		if ( token.precision ) {
			out = zeroPad( out, token.precision, token.padRight );
		}
		out = '-' + out;
	} else {
		out = i.toString( base );
		if ( !i && !token.precision ) {
			out = '';
		} else if ( token.precision ) {
			out = zeroPad( out, token.precision, token.padRight );
		}
		if ( token.sign ) {
			out = token.sign + out;
		}
	}
	if ( base === 16 ) {
		if ( token.alternate ) {
			out = '0x' + out;
		}
		out = ( token.specifier === uppercase.call( token.specifier ) ) ?
			uppercase.call( out ) :
			lowercase.call( out );
	}
	if ( base === 8 ) {
		if ( token.alternate && out.charAt( 0 ) !== '0' ) {
			out = '0' + out;
		}
	}
	return out;
}


// EXPORTS //

module.exports = formatInteger;

},{"./is_number.js":63,"./zero_pad.js":67}],62:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2022 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Generate string from a token array by interpolating values.
*
* @module @stdlib/string/base/format-interpolate
*
* @example
* var formatInterpolate = require( '@stdlib/string/base/format-interpolate' );
*
* var tokens = ['Hello ', { 'specifier': 's' }, '!' ];
* var out = formatInterpolate( tokens, 'World' );
* // returns 'Hello World!'
*/

// MODULES //

var main = require( './main.js' );


// EXPORTS //

module.exports = main;

},{"./main.js":65}],63:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2022 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Tests if a value is a number primitive.
*
* @param {*} value - value to test
* @returns {boolean} boolean indicating if a value is a number primitive
*
* @example
* var bool = isNumber( 3.14 );
* // returns true
*
* @example
* var bool = isNumber( NaN );
* // returns true
*
* @example
* var bool = isNumber( new Number( 3.14 ) );
* // returns false
*/
function isNumber( value ) {
	return ( typeof value === 'number' );  // NOTE: we inline the `isNumber.isPrimitive` function from `@stdlib/assert/is-number` in order to avoid circular dependencies.
}


// EXPORTS //

module.exports = isNumber;

},{}],64:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2022 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Tests if a value is a string primitive.
*
* @param {*} value - value to test
* @returns {boolean} boolean indicating if a value is a string primitive
*
* @example
* var bool = isString( 'beep' );
* // returns true
*
* @example
* var bool = isString( new String( 'beep' ) );
* // returns false
*/
function isString( value ) {
	return ( typeof value === 'string' ); // NOTE: we inline the `isString.isPrimitive` function from `@stdlib/assert/is-string` in order to avoid circular dependencies.
}


// EXPORTS //

module.exports = isString;

},{}],65:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2022 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var formatInteger = require( './format_integer.js' );
var isString = require( './is_string.js' );
var formatDouble = require( './format_double.js' );
var spacePad = require( './space_pad.js' );
var zeroPad = require( './zero_pad.js' );


// VARIABLES //

var fromCharCode = String.fromCharCode;
var isArray = Array.isArray; // NOTE: We use the global `Array.isArray` function here instead of `@stdlib/assert/is-array` to avoid circular dependencies.


// FUNCTIONS //

/**
* Returns a boolean indicating whether a value is `NaN`.
*
* @private
* @param {*} value - input value
* @returns {boolean} boolean indicating whether a value is `NaN`
*
* @example
* var bool = isnan( NaN );
* // returns true
*
* @example
* var bool = isnan( 4 );
* // returns false
*/
function isnan( value ) { // explicitly define a function here instead of `@stdlib/math/base/assert/is-nan` in order to avoid circular dependencies
	return ( value !== value );
}

/**
* Initializes token object with properties of supplied format identifier object or default values if not present.
*
* @private
* @param {Object} token - format identifier object
* @returns {Object} token object
*/
function initialize( token ) {
	var out = {};
	out.specifier = token.specifier;
	out.precision = ( token.precision === void 0 ) ? 1 : token.precision;
	out.width = token.width;
	out.flags = token.flags || '';
	out.mapping = token.mapping;
	return out;
}


// MAIN //

/**
* Generates string from a token array by interpolating values.
*
* @param {Array} tokens - string parts and format identifier objects
* @param {Array} ...args - variable values
* @throws {TypeError} first argument must be an array
* @throws {Error} invalid flags
* @returns {string} formatted string
*
* @example
* var tokens = [ 'beep ', { 'specifier': 's' } ];
* var out = formatInterpolate( tokens, 'boop' );
* // returns 'beep boop'
*/
function formatInterpolate( tokens ) {
	var hasPeriod;
	var flags;
	var token;
	var flag;
	var num;
	var out;
	var pos;
	var i;
	var j;

	if ( !isArray( tokens ) ) {
		throw new TypeError( 'invalid argument. First argument must be an array. Value: `' + tokens + '`.' );
	}
	out = '';
	pos = 1;
	for ( i = 0; i < tokens.length; i++ ) {
		token = tokens[ i ];
		if ( isString( token ) ) {
			out += token;
		} else {
			hasPeriod = token.precision !== void 0;
			token = initialize( token );
			if ( !token.specifier ) {
				throw new TypeError( 'invalid argument. Token is missing `specifier` property. Index: `'+ i +'`. Value: `' + token + '`.' );
			}
			if ( token.mapping ) {
				pos = token.mapping;
			}
			flags = token.flags;
			for ( j = 0; j < flags.length; j++ ) {
				flag = flags.charAt( j );
				switch ( flag ) {
				case ' ':
					token.sign = ' ';
					break;
				case '+':
					token.sign = '+';
					break;
				case '-':
					token.padRight = true;
					token.padZeros = false;
					break;
				case '0':
					token.padZeros = flags.indexOf( '-' ) < 0; // NOTE: We use built-in `Array.prototype.indexOf` here instead of `@stdlib/assert/contains` in order to avoid circular dependencies.
					break;
				case '#':
					token.alternate = true;
					break;
				default:
					throw new Error( 'invalid flag: ' + flag );
				}
			}
			if ( token.width === '*' ) {
				token.width = parseInt( arguments[ pos ], 10 );
				pos += 1;
				if ( isnan( token.width ) ) {
					throw new TypeError( 'the argument for * width at position ' + pos + ' is not a number. Value: `' + token.width + '`.' );
				}
				if ( token.width < 0 ) {
					token.padRight = true;
					token.width = -token.width;
				}
			}
			if ( hasPeriod ) {
				if ( token.precision === '*' ) {
					token.precision = parseInt( arguments[ pos ], 10 );
					pos += 1;
					if ( isnan( token.precision ) ) {
						throw new TypeError( 'the argument for * precision at position ' + pos + ' is not a number. Value: `' + token.precision + '`.' );
					}
					if ( token.precision < 0 ) {
						token.precision = 1;
						hasPeriod = false;
					}
				}
			}
			token.arg = arguments[ pos ];
			switch ( token.specifier ) {
			case 'b':
			case 'o':
			case 'x':
			case 'X':
			case 'd':
			case 'i':
			case 'u':
				// Case: %b (binary), %o (octal), %x, %X (hexadecimal), %d, %i (decimal), %u (unsigned decimal)
				if ( hasPeriod ) {
					token.padZeros = false;
				}
				token.arg = formatInteger( token );
				break;
			case 's':
				// Case: %s (string)
				token.maxWidth = ( hasPeriod ) ? token.precision : -1;
				token.arg = String( token.arg );
				break;
			case 'c':
				// Case: %c (character)
				if ( !isnan( token.arg ) ) {
					num = parseInt( token.arg, 10 );
					if ( num < 0 || num > 127 ) {
						throw new Error( 'invalid character code. Value: ' + token.arg );
					}
					token.arg = ( isnan( num ) ) ? String( token.arg ) : fromCharCode( num ); // eslint-disable-line max-len
				}
				break;
			case 'e':
			case 'E':
			case 'f':
			case 'F':
			case 'g':
			case 'G':
				// Case: %e, %E (scientific notation), %f, %F (decimal floating point), %g, %G (uses the shorter of %e/E or %f/F)
				if ( !hasPeriod ) {
					token.precision = 6;
				}
				token.arg = formatDouble( token );
				break;
			default:
				throw new Error( 'invalid specifier: ' + token.specifier );
			}
			// Fit argument into field width...
			if ( token.maxWidth >= 0 && token.arg.length > token.maxWidth ) {
				token.arg = token.arg.substring( 0, token.maxWidth );
			}
			if ( token.padZeros ) {
				token.arg = zeroPad( token.arg, token.width || token.precision, token.padRight ); // eslint-disable-line max-len
			} else if ( token.width ) {
				token.arg = spacePad( token.arg, token.width, token.padRight );
			}
			out += token.arg || '';
			pos += 1;
		}
	}
	return out;
}


// EXPORTS //

module.exports = formatInterpolate;

},{"./format_double.js":60,"./format_integer.js":61,"./is_string.js":64,"./space_pad.js":66,"./zero_pad.js":67}],66:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2022 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// FUNCTIONS //

/**
* Returns `n` spaces.
*
* @private
* @param {number} n - number of spaces
* @returns {string} string of spaces
*/
function spaces( n ) {
	var out = '';
	var i;
	for ( i = 0; i < n; i++ ) {
		out += ' ';
	}
	return out;
}


// MAIN //

/**
* Pads a token with spaces to the specified width.
*
* @private
* @param {string} str - token argument
* @param {number} width - token width
* @param {boolean} [right=false] - boolean indicating whether to pad to the right
* @returns {string} padded token argument
*/
function spacePad( str, width, right ) {
	var pad = width - str.length;
	if ( pad < 0 ) {
		return str;
	}
	str = ( right ) ?
		str + spaces( pad ) :
		spaces( pad ) + str;
	return str;
}


// EXPORTS //

module.exports = spacePad;

},{}],67:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2022 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// FUNCTIONS //

/**
* Tests if a string starts with a minus sign (`-`).
*
* @private
* @param {string} str - input string
* @returns {boolean} boolean indicating if a string starts with a minus sign (`-`)
*/
function startsWithMinus( str ) {
	return str[ 0 ] === '-';
}

/**
* Returns a string of `n` zeros.
*
* @private
* @param {number} n - number of zeros
* @returns {string} string of zeros
*/
function zeros( n ) {
	var out = '';
	var i;
	for ( i = 0; i < n; i++ ) {
		out += '0';
	}
	return out;
}


// MAIN //

/**
* Pads a token with zeros to the specified width.
*
* @private
* @param {string} str - token argument
* @param {number} width - token width
* @param {boolean} [right=false] - boolean indicating whether to pad to the right
* @returns {string} padded token argument
*/
function zeroPad( str, width, right ) {
	var negative = false;
	var pad = width - str.length;
	if ( pad < 0 ) {
		return str;
	}
	if ( startsWithMinus( str ) ) {
		negative = true;
		str = str.substr( 1 );
	}
	str = ( right ) ?
		str + zeros( pad ) :
		zeros( pad ) + str;
	if ( negative ) {
		str = '-' + str;
	}
	return str;
}


// EXPORTS //

module.exports = zeroPad;

},{}],68:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2022 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Tokenize a string into an array of string parts and format identifier objects.
*
* @module @stdlib/string/base/format-tokenize
*
* @example
* var formatTokenize = require( '@stdlib/string/base/format-tokenize' );
*
* var str = 'Hello %s!';
* var tokens = formatTokenize( str );
* // returns [ 'Hello ', {...}, '!' ]
*/

// MODULES //

var main = require( './main.js' );


// EXPORTS //

module.exports = main;

},{"./main.js":69}],69:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2022 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// VARIABLES //

var RE = /%(?:([1-9]\d*)\$)?([0 +\-#]*)(\*|\d+)?(?:(\.)(\*|\d+)?)?[hlL]?([%A-Za-z])/g;


// FUNCTIONS //

/**
* Parses a delimiter.
*
* @private
* @param {Array} match - regular expression match
* @returns {Object} delimiter token object
*/
function parse( match ) {
	var token = {
		'mapping': ( match[ 1 ] ) ? parseInt( match[ 1 ], 10 ) : void 0,
		'flags': match[ 2 ],
		'width': match[ 3 ],
		'precision': match[ 5 ],
		'specifier': match[ 6 ]
	};
	if ( match[ 4 ] === '.' && match[ 5 ] === void 0 ) {
		token.precision = '1';
	}
	return token;
}


// MAIN //

/**
* Tokenizes a string into an array of string parts and format identifier objects.
*
* @param {string} str - input string
* @returns {Array} tokens
*
* @example
* var tokens = formatTokenize( 'Hello %s!' );
* // returns [ 'Hello ', {...}, '!' ]
*/
function formatTokenize( str ) {
	var content;
	var tokens;
	var match;
	var prev;

	tokens = [];
	prev = 0;
	match = RE.exec( str );
	while ( match ) {
		content = str.slice( prev, RE.lastIndex - match[ 0 ].length );
		if ( content.length ) {
			tokens.push( content );
		}
		tokens.push( parse( match ) );
		prev = RE.lastIndex;
		match = RE.exec( str );
	}
	content = str.slice( prev );
	if ( content.length ) {
		tokens.push( content );
	}
	return tokens;
}


// EXPORTS //

module.exports = formatTokenize;

},{}],70:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2022 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Insert supplied variable values into a format string.
*
* @module @stdlib/string/format
*
* @example
* var format = require( '@stdlib/string/format' );
*
* var out = format( '%s %s!', 'Hello', 'World' );
* // returns 'Hello World!'
*
* out = format( 'Pi: ~%.2f', 3.141592653589793 );
* // returns 'Pi: ~3.14'
*/

// MODULES //

var main = require( './main.js' );


// EXPORTS //

module.exports = main;

},{"./main.js":72}],71:[function(require,module,exports){
arguments[4][64][0].apply(exports,arguments)
},{"dup":64}],72:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2022 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var interpolate = require( '@stdlib/string/base/format-interpolate' );
var tokenize = require( '@stdlib/string/base/format-tokenize' );
var isString = require( './is_string.js' );


// MAIN //

/**
* Inserts supplied variable values into a format string.
*
* @param {string} str - input string
* @param {Array} ...args - variable values
* @throws {TypeError} first argument must be a string
* @throws {Error} invalid flags
* @returns {string} formatted string
*
* @example
* var str = format( 'Hello %s!', 'world' );
* // returns 'Hello world!'
*
* @example
* var str = format( 'Pi: ~%.2f', 3.141592653589793 );
* // returns 'Pi: ~3.14'
*/
function format( str ) {
	var args;
	var i;

	if ( !isString( str ) ) {
		throw new TypeError( format( 'invalid argument. First argument must be a string. Value: `%s`.', str ) );
	}
	args = [ tokenize( str ) ];
	for ( i = 1; i < arguments.length; i++ ) {
		args.push( arguments[ i ] );
	}
	return interpolate.apply( null, args );
}


// EXPORTS //

module.exports = format;

},{"./is_string.js":71,"@stdlib/string/base/format-interpolate":62,"@stdlib/string/base/format-tokenize":68}],73:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Symbol factory.
*
* @module @stdlib/symbol/ctor
*
* @example
* var Symbol = require( '@stdlib/symbol/ctor' );
*
* var s = Symbol( 'beep' );
* // returns <symbol>
*/

// MODULES //

var main = require( './main.js' );


// EXPORTS //

module.exports = main;

},{"./main.js":74}],74:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MAIN //

var Sym = ( typeof Symbol === 'function' ) ? Symbol : void 0; // eslint-disable-line stdlib/require-globals


// EXPORTS //

module.exports = Sym;

},{}],75:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Determine the name of a value's constructor.
*
* @module @stdlib/utils/constructor-name
*
* @example
* var constructorName = require( '@stdlib/utils/constructor-name' );
*
* var v = constructorName( 'a' );
* // returns 'String'
*
* v = constructorName( {} );
* // returns 'Object'
*
* v = constructorName( true );
* // returns 'Boolean'
*/

// MODULES //

var main = require( './main.js' );


// EXPORTS //

module.exports = main;

},{"./main.js":76}],76:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var nativeClass = require( '@stdlib/utils/native-class' );
var RE = require( '@stdlib/regexp/function-name' ).REGEXP;
var isBuffer = require( '@stdlib/assert/is-buffer' );


// MAIN //

/**
* Determines the name of a value's constructor.
*
* @param {*} v - input value
* @returns {string} name of a value's constructor
*
* @example
* var v = constructorName( 'a' );
* // returns 'String'
*
* @example
* var v = constructorName( 5 );
* // returns 'Number'
*
* @example
* var v = constructorName( null );
* // returns 'Null'
*
* @example
* var v = constructorName( undefined );
* // returns 'Undefined'
*
* @example
* var v = constructorName( function noop() {} );
* // returns 'Function'
*/
function constructorName( v ) {
	var match;
	var name;
	var ctor;
	name = nativeClass( v ).slice( 8, -1 );
	if ( (name === 'Object' || name === 'Error') && v.constructor ) {
		ctor = v.constructor;
		if ( typeof ctor.name === 'string' ) {
			return ctor.name;
		}
		match = RE.exec( ctor.toString() );
		if ( match ) {
			return match[ 1 ];
		}
	}
	if ( isBuffer( v ) ) {
		return 'Buffer';
	}
	return name;
}


// EXPORTS //

module.exports = constructorName;

},{"@stdlib/assert/is-buffer":15,"@stdlib/regexp/function-name":57,"@stdlib/utils/native-class":95}],77:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Define a non-enumerable read-only property.
*
* @module @stdlib/utils/define-nonenumerable-read-only-property
*
* @example
* var setNonEnumerableReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );
*
* var obj = {};
*
* setNonEnumerableReadOnly( obj, 'foo', 'bar' );
*
* try {
*     obj.foo = 'boop';
* } catch ( err ) {
*     console.error( err.message );
* }
*/

// MODULES //

var main = require( './main.js' );


// EXPORTS //

module.exports = main;

},{"./main.js":78}],78:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var defineProperty = require( '@stdlib/utils/define-property' );


// MAIN //

/**
* Defines a non-enumerable read-only property.
*
* @param {Object} obj - object on which to define the property
* @param {(string|symbol)} prop - property name
* @param {*} value - value to set
*
* @example
* var obj = {};
*
* setNonEnumerableReadOnly( obj, 'foo', 'bar' );
*
* try {
*     obj.foo = 'boop';
* } catch ( err ) {
*     console.error( err.message );
* }
*/
function setNonEnumerableReadOnly( obj, prop, value ) {
	defineProperty( obj, prop, {
		'configurable': false,
		'enumerable': false,
		'writable': false,
		'value': value
	});
}


// EXPORTS //

module.exports = setNonEnumerableReadOnly;

},{"@stdlib/utils/define-property":82}],79:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MAIN //

/**
* Defines (or modifies) an object property.
*
* ## Notes
*
* -   Property descriptors come in two flavors: **data descriptors** and **accessor descriptors**. A data descriptor is a property that has a value, which may or may not be writable. An accessor descriptor is a property described by a getter-setter function pair. A descriptor must be one of these two flavors and cannot be both.
*
* @name defineProperty
* @type {Function}
* @param {Object} obj - object on which to define the property
* @param {(string|symbol)} prop - property name
* @param {Object} descriptor - property descriptor
* @param {boolean} [descriptor.configurable=false] - boolean indicating if property descriptor can be changed and if the property can be deleted from the provided object
* @param {boolean} [descriptor.enumerable=false] - boolean indicating if the property shows up when enumerating object properties
* @param {boolean} [descriptor.writable=false] - boolean indicating if the value associated with the property can be changed with an assignment operator
* @param {*} [descriptor.value] - property value
* @param {(Function|void)} [descriptor.get=undefined] - function which serves as a getter for the property, or, if no getter, undefined. When the property is accessed, a getter function is called without arguments and with the `this` context set to the object through which the property is accessed (which may not be the object on which the property is defined due to inheritance). The return value will be used as the property value.
* @param {(Function|void)} [descriptor.set=undefined] - function which serves as a setter for the property, or, if no setter, undefined. When assigning a property value, a setter function is called with one argument (the value being assigned to the property) and with the `this` context set to the object through which the property is assigned.
* @throws {TypeError} first argument must be an object
* @throws {TypeError} third argument must be an object
* @throws {Error} property descriptor cannot have both a value and a setter and/or getter
* @returns {Object} object with added property
*
* @example
* var obj = {};
*
* defineProperty( obj, 'foo', {
*     'value': 'bar'
* });
*
* var str = obj.foo;
* // returns 'bar'
*/
var defineProperty = Object.defineProperty;


// EXPORTS //

module.exports = defineProperty;

},{}],80:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2021 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MAIN //

var main = ( typeof Object.defineProperty === 'function' ) ? Object.defineProperty : null;


// EXPORTS //

module.exports = main;

},{}],81:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2021 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var defineProperty = require( './define_property.js' );


// MAIN //

/**
* Tests for `Object.defineProperty` support.
*
* @private
* @returns {boolean} boolean indicating if an environment has `Object.defineProperty` support
*
* @example
* var bool = hasDefinePropertySupport();
* // returns <boolean>
*/
function hasDefinePropertySupport() {
	// Test basic support...
	try {
		defineProperty( {}, 'x', {} );
		return true;
	} catch ( err ) { // eslint-disable-line no-unused-vars
		return false;
	}
}


// EXPORTS //

module.exports = hasDefinePropertySupport;

},{"./define_property.js":80}],82:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Define (or modify) an object property.
*
* @module @stdlib/utils/define-property
*
* @example
* var defineProperty = require( '@stdlib/utils/define-property' );
*
* var obj = {};
* defineProperty( obj, 'foo', {
*     'value': 'bar',
*     'writable': false,
*     'configurable': false,
*     'enumerable': false
* });
* obj.foo = 'boop'; // => throws
*/

// MODULES //

var hasDefinePropertySupport = require( './has_define_property_support.js' );
var builtin = require( './builtin.js' );
var polyfill = require( './polyfill.js' );


// MAIN //

var defineProperty;
if ( hasDefinePropertySupport() ) {
	defineProperty = builtin;
} else {
	defineProperty = polyfill;
}


// EXPORTS //

module.exports = defineProperty;

},{"./builtin.js":79,"./has_define_property_support.js":81,"./polyfill.js":83}],83:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

/* eslint-disable no-underscore-dangle, no-proto */

'use strict';

// MODULES //

var format = require( '@stdlib/string/format' );


// VARIABLES //

var objectProtoype = Object.prototype;
var toStr = objectProtoype.toString;
var defineGetter = objectProtoype.__defineGetter__;
var defineSetter = objectProtoype.__defineSetter__;
var lookupGetter = objectProtoype.__lookupGetter__;
var lookupSetter = objectProtoype.__lookupSetter__;


// MAIN //

/**
* Defines (or modifies) an object property.
*
* ## Notes
*
* -   Property descriptors come in two flavors: **data descriptors** and **accessor descriptors**. A data descriptor is a property that has a value, which may or may not be writable. An accessor descriptor is a property described by a getter-setter function pair. A descriptor must be one of these two flavors and cannot be both.
*
* @param {Object} obj - object on which to define the property
* @param {string} prop - property name
* @param {Object} descriptor - property descriptor
* @param {boolean} [descriptor.configurable=false] - boolean indicating if property descriptor can be changed and if the property can be deleted from the provided object
* @param {boolean} [descriptor.enumerable=false] - boolean indicating if the property shows up when enumerating object properties
* @param {boolean} [descriptor.writable=false] - boolean indicating if the value associated with the property can be changed with an assignment operator
* @param {*} [descriptor.value] - property value
* @param {(Function|void)} [descriptor.get=undefined] - function which serves as a getter for the property, or, if no getter, undefined. When the property is accessed, a getter function is called without arguments and with the `this` context set to the object through which the property is accessed (which may not be the object on which the property is defined due to inheritance). The return value will be used as the property value.
* @param {(Function|void)} [descriptor.set=undefined] - function which serves as a setter for the property, or, if no setter, undefined. When assigning a property value, a setter function is called with one argument (the value being assigned to the property) and with the `this` context set to the object through which the property is assigned.
* @throws {TypeError} first argument must be an object
* @throws {TypeError} third argument must be an object
* @throws {Error} property descriptor cannot have both a value and a setter and/or getter
* @returns {Object} object with added property
*
* @example
* var obj = {};
*
* defineProperty( obj, 'foo', {
*     'value': 'bar'
* });
*
* var str = obj.foo;
* // returns 'bar'
*/
function defineProperty( obj, prop, descriptor ) {
	var prototype;
	var hasValue;
	var hasGet;
	var hasSet;

	if ( typeof obj !== 'object' || obj === null || toStr.call( obj ) === '[object Array]' ) {
		throw new TypeError( format( 'invalid argument. First argument must be an object. Value: `%s`.', obj ) );
	}
	if ( typeof descriptor !== 'object' || descriptor === null || toStr.call( descriptor ) === '[object Array]' ) {
		throw new TypeError( format( 'invalid argument. Property descriptor must be an object. Value: `%s`.', descriptor ) );
	}
	hasValue = ( 'value' in descriptor );
	if ( hasValue ) {
		if (
			lookupGetter.call( obj, prop ) ||
			lookupSetter.call( obj, prop )
		) {
			// Override `__proto__` to avoid touching inherited accessors:
			prototype = obj.__proto__;
			obj.__proto__ = objectProtoype;

			// Delete property as existing getters/setters prevent assigning value to specified property:
			delete obj[ prop ];
			obj[ prop ] = descriptor.value;

			// Restore original prototype:
			obj.__proto__ = prototype;
		} else {
			obj[ prop ] = descriptor.value;
		}
	}
	hasGet = ( 'get' in descriptor );
	hasSet = ( 'set' in descriptor );

	if ( hasValue && ( hasGet || hasSet ) ) {
		throw new Error( 'invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.' );
	}

	if ( hasGet && defineGetter ) {
		defineGetter.call( obj, prop, descriptor.get );
	}
	if ( hasSet && defineSetter ) {
		defineSetter.call( obj, prop, descriptor.set );
	}
	return obj;
}


// EXPORTS //

module.exports = defineProperty;

},{"@stdlib/string/format":70}],84:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var isFunction = require( '@stdlib/assert/is-function' );
var builtin = require( './native.js' );
var polyfill = require( './polyfill.js' );


// MAIN //

var getProto;
if ( isFunction( Object.getPrototypeOf ) ) {
	getProto = builtin;
} else {
	getProto = polyfill;
}


// EXPORTS //

module.exports = getProto;

},{"./native.js":87,"./polyfill.js":88,"@stdlib/assert/is-function":19}],85:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Return the prototype of a provided object.
*
* @module @stdlib/utils/get-prototype-of
*
* @example
* var getPrototype = require( '@stdlib/utils/get-prototype-of' );
*
* var proto = getPrototype( {} );
* // returns {}
*/

// MODULES //

var main = require( './main.js' );


// EXPORTS //

module.exports = main;

},{"./main.js":86}],86:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var Object = require( '@stdlib/object/ctor' );
var getProto = require( './detect.js' );


// MAIN //

/**
* Returns the prototype of a provided object.
*
* @param {*} value - input value
* @returns {(Object|null)} prototype
*
* @example
* var proto = getPrototypeOf( {} );
* // returns {}
*/
function getPrototypeOf( value ) {
	if (
		value === null ||
		value === void 0
	) {
		return null;
	}
	// In order to ensure consistent ES5/ES6 behavior, cast input value to an object (strings, numbers, booleans); ES5 `Object.getPrototypeOf` throws when provided primitives and ES6 `Object.getPrototypeOf` casts:
	value = Object( value );

	return getProto( value );
}


// EXPORTS //

module.exports = getPrototypeOf;

},{"./detect.js":84,"@stdlib/object/ctor":55}],87:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MAIN //

var getProto = Object.getPrototypeOf;


// EXPORTS //

module.exports = getProto;

},{}],88:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var nativeClass = require( '@stdlib/utils/native-class' );
var getProto = require( './proto.js' );


// MAIN //

/**
* Returns the prototype of a provided object.
*
* @private
* @param {Object} obj - input object
* @returns {(Object|null)} prototype
*/
function getPrototypeOf( obj ) {
	var proto = getProto( obj );
	if ( proto || proto === null ) {
		return proto;
	}
	if ( nativeClass( obj.constructor ) === '[object Function]' ) {
		// May break if the constructor has been tampered with...
		return obj.constructor.prototype;
	}
	if ( obj instanceof Object ) {
		return Object.prototype;
	}
	// Return `null` for objects created via `Object.create( null )`. Also return `null` for cross-realm objects on browsers that lack `__proto__` support, such as IE < 11.
	return null;
}


// EXPORTS //

module.exports = getPrototypeOf;

},{"./proto.js":89,"@stdlib/utils/native-class":95}],89:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Returns the value of the `__proto__` property.
*
* @private
* @param {Object} obj - input object
* @returns {*} value of `__proto__` property
*/
function getProto( obj ) {
	// eslint-disable-next-line no-proto
	return obj.__proto__;
}


// EXPORTS //

module.exports = getProto;

},{}],90:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2022 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var isBoolean = require( '@stdlib/assert/is-boolean' ).isPrimitive;
var format = require( '@stdlib/string/format' );
var getThis = require( './codegen.js' );
var Self = require( './self.js' );
var Win = require( './window.js' );
var GlobalThis = require( './global_this.js' );


// MAIN //

/**
* Returns the global object.
*
* ## Notes
*
* -   Using code generation is the **most** reliable way to resolve the global object; however, doing so is likely to violate content security policies (CSPs) in, e.g., Chrome Apps and elsewhere.
*
* @private
* @param {boolean} [codegen=false] - boolean indicating whether to use code generation to resolve the global object
* @throws {TypeError} must provide a boolean
* @throws {Error} unable to resolve global object
* @returns {Object} global object
*
* @example
* var g = getGlobal();
* // returns {...}
*/
function getGlobal( codegen ) {
	if ( arguments.length ) {
		if ( !isBoolean( codegen ) ) {
			throw new TypeError( format( 'invalid argument. Must provide a boolean. Value: `%s`.', codegen ) );
		}
		if ( codegen ) {
			return getThis();
		}
		// Fall through...
	}
	// Case: 2020 revision of ECMAScript standard
	if ( GlobalThis ) {
		return GlobalThis;
	}
	// Case: browsers and web workers
	if ( Self ) {
		return Self;
	}
	// Case: browsers
	if ( Win ) {
		return Win;
	}
	// Case: unknown
	throw new Error( 'unexpected error. Unable to resolve global object.' );
}


// EXPORTS //

module.exports = getGlobal;

},{"./codegen.js":91,"./global_this.js":92,"./self.js":93,"./window.js":94,"@stdlib/assert/is-boolean":9,"@stdlib/string/format":70}],91:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MAIN //

/**
* Returns the global object using code generation.
*
* @private
* @returns {Object} global object
*/
function getGlobal() {
	return new Function( 'return this;' )(); // eslint-disable-line no-new-func, stdlib/require-globals
}


// EXPORTS //

module.exports = getGlobal;

},{}],92:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2022 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MAIN //

var obj = ( typeof globalThis === 'object' ) ? globalThis : null; // eslint-disable-line no-undef


// EXPORTS //

module.exports = obj;

},{}],93:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MAIN //

var obj = ( typeof self === 'object' ) ? self : null;


// EXPORTS //

module.exports = obj;

},{}],94:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MAIN //

var obj = ( typeof window === 'object' ) ? window : null;


// EXPORTS //

module.exports = obj;

},{}],95:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Return a string value indicating a specification defined classification of an object.
*
* @module @stdlib/utils/native-class
*
* @example
* var nativeClass = require( '@stdlib/utils/native-class' );
*
* var str = nativeClass( 'a' );
* // returns '[object String]'
*
* str = nativeClass( 5 );
* // returns '[object Number]'
*
* function Beep() {
*     return this;
* }
* str = nativeClass( new Beep() );
* // returns '[object Object]'
*/

// MODULES //

var hasToStringTag = require( '@stdlib/assert/has-tostringtag-support' );
var builtin = require( './main.js' );
var polyfill = require( './polyfill.js' );


// MAIN //

var main;
if ( hasToStringTag() ) {
	main = polyfill;
} else {
	main = builtin;
}


// EXPORTS //

module.exports = main;

},{"./main.js":96,"./polyfill.js":97,"@stdlib/assert/has-tostringtag-support":5}],96:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var toStr = require( './tostring.js' );


// MAIN //

/**
* Returns a string value indicating a specification defined classification (via the internal property `[[Class]]`) of an object.
*
* @param {*} v - input value
* @returns {string} string value indicating a specification defined classification of the input value
*
* @example
* var str = nativeClass( 'a' );
* // returns '[object String]'
*
* @example
* var str = nativeClass( 5 );
* // returns '[object Number]'
*
* @example
* function Beep() {
*     return this;
* }
* var str = nativeClass( new Beep() );
* // returns '[object Object]'
*/
function nativeClass( v ) {
	return toStr.call( v );
}


// EXPORTS //

module.exports = nativeClass;

},{"./tostring.js":98}],97:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var hasOwnProp = require( '@stdlib/assert/has-own-property' );
var toStringTag = require( './tostringtag.js' );
var toStr = require( './tostring.js' );


// MAIN //

/**
* Returns a string value indicating a specification defined classification of an object in environments supporting `Symbol.toStringTag`.
*
* @param {*} v - input value
* @returns {string} string value indicating a specification defined classification of the input value
*
* @example
* var str = nativeClass( 'a' );
* // returns '[object String]'
*
* @example
* var str = nativeClass( 5 );
* // returns '[object Number]'
*
* @example
* function Beep() {
*     return this;
* }
* var str = nativeClass( new Beep() );
* // returns '[object Object]'
*/
function nativeClass( v ) {
	var isOwn;
	var tag;
	var out;

	if ( v === null || v === void 0 ) {
		return toStr.call( v );
	}
	tag = v[ toStringTag ];
	isOwn = hasOwnProp( v, toStringTag );

	// Attempt to override the `toStringTag` property. For built-ins having a `Symbol.toStringTag` property (e.g., `JSON`, `Math`, etc), the `Symbol.toStringTag` property is read-only (e.g., , so we need to wrap in a `try/catch`.
	try {
		v[ toStringTag ] = void 0;
	} catch ( err ) { // eslint-disable-line no-unused-vars
		return toStr.call( v );
	}
	out = toStr.call( v );

	if ( isOwn ) {
		v[ toStringTag ] = tag;
	} else {
		delete v[ toStringTag ];
	}
	return out;
}


// EXPORTS //

module.exports = nativeClass;

},{"./tostring.js":98,"./tostringtag.js":99,"@stdlib/assert/has-own-property":1}],98:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MAIN //

var toStr = Object.prototype.toString;


// EXPORTS //

module.exports = toStr;

},{}],99:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var Symbol = require( '@stdlib/symbol/ctor' );


// MAIN //

var toStrTag = ( typeof Symbol === 'function' ) ? Symbol.toStringTag : '';


// EXPORTS //

module.exports = toStrTag;

},{"@stdlib/symbol/ctor":73}],100:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Wrap `require` in a try/catch block.
*
* @module @stdlib/utils/try-require
*
* @example
* var tryRequire = require( '@stdlib/utils/try-require' );
*
* var out = tryRequire( 'beepboop' );
*
* if ( out instanceof Error ) {
*     console.log( out.message );
* }
*/

// MODULES //

var main = require( './main.js' );


// EXPORTS //

module.exports = main;

},{"./main.js":101}],101:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var isError = require( '@stdlib/assert/is-error' );


// MAIN //

/**
* Wraps `require` in a try/catch block.
*
* @param {string} id - module id
* @returns {*|Error} `module.exports` of the resolved module or an error
*
* @example
* var out = tryRequire( 'beepboop' );
*
* if ( out instanceof Error ) {
*     console.error( out.message );
* }
*/
function tryRequire( id ) {
	try {
		return require( id ); // eslint-disable-line stdlib/no-dynamic-require
	} catch ( error ) {
		if ( isError( error ) ) {
			return error;
		}
		// Handle case where a literal is thrown...
		if ( typeof error === 'object' ) {
			return new Error( JSON.stringify( error ) );
		}
		return new Error( error.toString() );
	}
}


// EXPORTS //

module.exports = tryRequire;

},{"@stdlib/assert/is-error":17}],102:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var RE = require( './fixtures/re.js' );
var nodeList = require( './fixtures/nodelist.js' );
var typedarray = require( './fixtures/typedarray.js' );


// MAIN //

/**
* Checks whether a polyfill is needed when using the `typeof` operator.
*
* @private
* @returns {boolean} boolean indicating whether a polyfill is needed
*/
function check() {
	if (
		// Chrome 1-12 returns 'function' for regular expression instances (see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/typeof):
		typeof RE === 'function' ||

		// Safari 8 returns 'object' for typed array and weak map constructors (underscore #1929):
		typeof typedarray === 'object' ||

		// PhantomJS 1.9 returns 'function' for `NodeList` instances (underscore #2236):
		typeof nodeList === 'function'
	) {
		return true;
	}
	return false;
}


// EXPORTS //

module.exports = check;

},{"./fixtures/nodelist.js":103,"./fixtures/re.js":104,"./fixtures/typedarray.js":105}],103:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var getGlobal = require( '@stdlib/utils/global' );


// MAIN //

var root = getGlobal();
var nodeList = root.document && root.document.childNodes;


// EXPORTS //

module.exports = nodeList;

},{"@stdlib/utils/global":90}],104:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

var RE = /./;


// EXPORTS //

module.exports = RE;

},{}],105:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

var typedarray = Int8Array; // eslint-disable-line stdlib/require-globals


// EXPORTS //

module.exports = typedarray;

},{}],106:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

/**
* Determine a value's type.
*
* @module @stdlib/utils/type-of
*
* @example
* var typeOf = require( '@stdlib/utils/type-of' );
*
* var str = typeOf( 'a' );
* // returns 'string'
*
* str = typeOf( 5 );
* // returns 'number'
*/

// MODULES //

var usePolyfill = require( './check.js' );
var builtin = require( './main.js' );
var polyfill = require( './polyfill.js' );


// MAIN //

var main = ( usePolyfill() ) ? polyfill : builtin;


// EXPORTS //

module.exports = main;

},{"./check.js":102,"./main.js":107,"./polyfill.js":108}],107:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var ctorName = require( '@stdlib/utils/constructor-name' );


// NOTES //

/*
* Built-in `typeof` operator behavior:
*
* ```text
* typeof null => 'object'
* typeof undefined => 'undefined'
* typeof 'a' => 'string'
* typeof 5 => 'number'
* typeof NaN => 'number'
* typeof true => 'boolean'
* typeof false => 'boolean'
* typeof {} => 'object'
* typeof [] => 'object'
* typeof function foo(){} => 'function'
* typeof function* foo(){} => 'object'
* typeof Symbol() => 'symbol'
* ```
*
*/


// MAIN //

/**
* Determines a value's type.
*
* @param {*} v - input value
* @returns {string} string indicating the value's type
*/
function typeOf( v ) {
	var type;

	// Address `typeof null` => `object` (see http://wiki.ecmascript.org/doku.php?id=harmony:typeof_null):
	if ( v === null ) {
		return 'null';
	}
	type = typeof v;

	// If the `typeof` operator returned something other than `object`, we are done. Otherwise, we need to check for an internal class name or search for a constructor.
	if ( type === 'object' ) {
		return ctorName( v ).toLowerCase();
	}
	return type;
}


// EXPORTS //

module.exports = typeOf;

},{"@stdlib/utils/constructor-name":75}],108:[function(require,module,exports){
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var ctorName = require( '@stdlib/utils/constructor-name' );


// MAIN //

/**
* Determines a value's type.
*
* @param {*} v - input value
* @returns {string} string indicating the value's type
*/
function typeOf( v ) {
	return ctorName( v ).toLowerCase();
}


// EXPORTS //

module.exports = typeOf;

},{"@stdlib/utils/constructor-name":75}],109:[function(require,module,exports){
'use strict'

exports.byteLength = byteLength
exports.toByteArray = toByteArray
exports.fromByteArray = fromByteArray

var lookup = []
var revLookup = []
var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array

var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
for (var i = 0, len = code.length; i < len; ++i) {
  lookup[i] = code[i]
  revLookup[code.charCodeAt(i)] = i
}

// Support decoding URL-safe base64 strings, as Node.js does.
// See: https://en.wikipedia.org/wiki/Base64#URL_applications
revLookup['-'.charCodeAt(0)] = 62
revLookup['_'.charCodeAt(0)] = 63

function getLens (b64) {
  var len = b64.length

  if (len % 4 > 0) {
    throw new Error('Invalid string. Length must be a multiple of 4')
  }

  // Trim off extra bytes after placeholder bytes are found
  // See: https://github.com/beatgammit/base64-js/issues/42
  var validLen = b64.indexOf('=')
  if (validLen === -1) validLen = len

  var placeHoldersLen = validLen === len
    ? 0
    : 4 - (validLen % 4)

  return [validLen, placeHoldersLen]
}

// base64 is 4/3 + up to two characters of the original data
function byteLength (b64) {
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function _byteLength (b64, validLen, placeHoldersLen) {
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function toByteArray (b64) {
  var tmp
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]

  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))

  var curByte = 0

  // if there are placeholders, only get up to the last complete 4 chars
  var len = placeHoldersLen > 0
    ? validLen - 4
    : validLen

  var i
  for (i = 0; i < len; i += 4) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 18) |
      (revLookup[b64.charCodeAt(i + 1)] << 12) |
      (revLookup[b64.charCodeAt(i + 2)] << 6) |
      revLookup[b64.charCodeAt(i + 3)]
    arr[curByte++] = (tmp >> 16) & 0xFF
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 2) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 2) |
      (revLookup[b64.charCodeAt(i + 1)] >> 4)
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 1) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 10) |
      (revLookup[b64.charCodeAt(i + 1)] << 4) |
      (revLookup[b64.charCodeAt(i + 2)] >> 2)
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  return arr
}

function tripletToBase64 (num) {
  return lookup[num >> 18 & 0x3F] +
    lookup[num >> 12 & 0x3F] +
    lookup[num >> 6 & 0x3F] +
    lookup[num & 0x3F]
}

function encodeChunk (uint8, start, end) {
  var tmp
  var output = []
  for (var i = start; i < end; i += 3) {
    tmp =
      ((uint8[i] << 16) & 0xFF0000) +
      ((uint8[i + 1] << 8) & 0xFF00) +
      (uint8[i + 2] & 0xFF)
    output.push(tripletToBase64(tmp))
  }
  return output.join('')
}

function fromByteArray (uint8) {
  var tmp
  var len = uint8.length
  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes
  var parts = []
  var maxChunkLength = 16383 // must be multiple of 3

  // go through the array every three bytes, we'll deal with trailing stuff later
  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))
  }

  // pad the end with zeros, but make sure to not forget the extra bytes
  if (extraBytes === 1) {
    tmp = uint8[len - 1]
    parts.push(
      lookup[tmp >> 2] +
      lookup[(tmp << 4) & 0x3F] +
      '=='
    )
  } else if (extraBytes === 2) {
    tmp = (uint8[len - 2] << 8) + uint8[len - 1]
    parts.push(
      lookup[tmp >> 10] +
      lookup[(tmp >> 4) & 0x3F] +
      lookup[(tmp << 2) & 0x3F] +
      '='
    )
  }

  return parts.join('')
}

},{}],110:[function(require,module,exports){

},{}],111:[function(require,module,exports){
arguments[4][110][0].apply(exports,arguments)
},{"dup":110}],112:[function(require,module,exports){
(function (Buffer){(function (){
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
/* eslint-disable no-proto */

'use strict'

var base64 = require('base64-js')
var ieee754 = require('ieee754')

exports.Buffer = Buffer
exports.SlowBuffer = SlowBuffer
exports.INSPECT_MAX_BYTES = 50

var K_MAX_LENGTH = 0x7fffffff
exports.kMaxLength = K_MAX_LENGTH

/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Print warning and recommend using `buffer` v4.x which has an Object
 *               implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * We report that the browser does not support typed arrays if the are not subclassable
 * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`
 * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support
 * for __proto__ and has a buggy typed array implementation.
 */
Buffer.TYPED_ARRAY_SUPPORT = typedArraySupport()

if (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&
    typeof console.error === 'function') {
  console.error(
    'This browser lacks typed array (Uint8Array) support which is required by ' +
    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'
  )
}

function typedArraySupport () {
  // Can typed array instances can be augmented?
  try {
    var arr = new Uint8Array(1)
    arr.__proto__ = { __proto__: Uint8Array.prototype, foo: function () { return 42 } }
    return arr.foo() === 42
  } catch (e) {
    return false
  }
}

Object.defineProperty(Buffer.prototype, 'parent', {
  enumerable: true,
  get: function () {
    if (!Buffer.isBuffer(this)) return undefined
    return this.buffer
  }
})

Object.defineProperty(Buffer.prototype, 'offset', {
  enumerable: true,
  get: function () {
    if (!Buffer.isBuffer(this)) return undefined
    return this.byteOffset
  }
})

function createBuffer (length) {
  if (length > K_MAX_LENGTH) {
    throw new RangeError('The value "' + length + '" is invalid for option "size"')
  }
  // Return an augmented `Uint8Array` instance
  var buf = new Uint8Array(length)
  buf.__proto__ = Buffer.prototype
  return buf
}

/**
 * The Buffer constructor returns instances of `Uint8Array` that have their
 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
 * returns a single octet.
 *
 * The `Uint8Array` prototype remains unmodified.
 */

function Buffer (arg, encodingOrOffset, length) {
  // Common case.
  if (typeof arg === 'number') {
    if (typeof encodingOrOffset === 'string') {
      throw new TypeError(
        'The "string" argument must be of type string. Received type number'
      )
    }
    return allocUnsafe(arg)
  }
  return from(arg, encodingOrOffset, length)
}

// Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
if (typeof Symbol !== 'undefined' && Symbol.species != null &&
    Buffer[Symbol.species] === Buffer) {
  Object.defineProperty(Buffer, Symbol.species, {
    value: null,
    configurable: true,
    enumerable: false,
    writable: false
  })
}

Buffer.poolSize = 8192 // not used by this implementation

function from (value, encodingOrOffset, length) {
  if (typeof value === 'string') {
    return fromString(value, encodingOrOffset)
  }

  if (ArrayBuffer.isView(value)) {
    return fromArrayLike(value)
  }

  if (value == null) {
    throw TypeError(
      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +
      'or Array-like Object. Received type ' + (typeof value)
    )
  }

  if (isInstance(value, ArrayBuffer) ||
      (value && isInstance(value.buffer, ArrayBuffer))) {
    return fromArrayBuffer(value, encodingOrOffset, length)
  }

  if (typeof value === 'number') {
    throw new TypeError(
      'The "value" argument must not be of type number. Received type number'
    )
  }

  var valueOf = value.valueOf && value.valueOf()
  if (valueOf != null && valueOf !== value) {
    return Buffer.from(valueOf, encodingOrOffset, length)
  }

  var b = fromObject(value)
  if (b) return b

  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&
      typeof value[Symbol.toPrimitive] === 'function') {
    return Buffer.from(
      value[Symbol.toPrimitive]('string'), encodingOrOffset, length
    )
  }

  throw new TypeError(
    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +
    'or Array-like Object. Received type ' + (typeof value)
  )
}

/**
 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
 * if value is a number.
 * Buffer.from(str[, encoding])
 * Buffer.from(array)
 * Buffer.from(buffer)
 * Buffer.from(arrayBuffer[, byteOffset[, length]])
 **/
Buffer.from = function (value, encodingOrOffset, length) {
  return from(value, encodingOrOffset, length)
}

// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:
// https://github.com/feross/buffer/pull/148
Buffer.prototype.__proto__ = Uint8Array.prototype
Buffer.__proto__ = Uint8Array

function assertSize (size) {
  if (typeof size !== 'number') {
    throw new TypeError('"size" argument must be of type number')
  } else if (size < 0) {
    throw new RangeError('The value "' + size + '" is invalid for option "size"')
  }
}

function alloc (size, fill, encoding) {
  assertSize(size)
  if (size <= 0) {
    return createBuffer(size)
  }
  if (fill !== undefined) {
    // Only pay attention to encoding if it's a string. This
    // prevents accidentally sending in a number that would
    // be interpretted as a start offset.
    return typeof encoding === 'string'
      ? createBuffer(size).fill(fill, encoding)
      : createBuffer(size).fill(fill)
  }
  return createBuffer(size)
}

/**
 * Creates a new filled Buffer instance.
 * alloc(size[, fill[, encoding]])
 **/
Buffer.alloc = function (size, fill, encoding) {
  return alloc(size, fill, encoding)
}

function allocUnsafe (size) {
  assertSize(size)
  return createBuffer(size < 0 ? 0 : checked(size) | 0)
}

/**
 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
 * */
Buffer.allocUnsafe = function (size) {
  return allocUnsafe(size)
}
/**
 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
 */
Buffer.allocUnsafeSlow = function (size) {
  return allocUnsafe(size)
}

function fromString (string, encoding) {
  if (typeof encoding !== 'string' || encoding === '') {
    encoding = 'utf8'
  }

  if (!Buffer.isEncoding(encoding)) {
    throw new TypeError('Unknown encoding: ' + encoding)
  }

  var length = byteLength(string, encoding) | 0
  var buf = createBuffer(length)

  var actual = buf.write(string, encoding)

  if (actual !== length) {
    // Writing a hex string, for example, that contains invalid characters will
    // cause everything after the first invalid character to be ignored. (e.g.
    // 'abxxcd' will be treated as 'ab')
    buf = buf.slice(0, actual)
  }

  return buf
}

function fromArrayLike (array) {
  var length = array.length < 0 ? 0 : checked(array.length) | 0
  var buf = createBuffer(length)
  for (var i = 0; i < length; i += 1) {
    buf[i] = array[i] & 255
  }
  return buf
}

function fromArrayBuffer (array, byteOffset, length) {
  if (byteOffset < 0 || array.byteLength < byteOffset) {
    throw new RangeError('"offset" is outside of buffer bounds')
  }

  if (array.byteLength < byteOffset + (length || 0)) {
    throw new RangeError('"length" is outside of buffer bounds')
  }

  var buf
  if (byteOffset === undefined && length === undefined) {
    buf = new Uint8Array(array)
  } else if (length === undefined) {
    buf = new Uint8Array(array, byteOffset)
  } else {
    buf = new Uint8Array(array, byteOffset, length)
  }

  // Return an augmented `Uint8Array` instance
  buf.__proto__ = Buffer.prototype
  return buf
}

function fromObject (obj) {
  if (Buffer.isBuffer(obj)) {
    var len = checked(obj.length) | 0
    var buf = createBuffer(len)

    if (buf.length === 0) {
      return buf
    }

    obj.copy(buf, 0, 0, len)
    return buf
  }

  if (obj.length !== undefined) {
    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {
      return createBuffer(0)
    }
    return fromArrayLike(obj)
  }

  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {
    return fromArrayLike(obj.data)
  }
}

function checked (length) {
  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when
  // length is NaN (which is otherwise coerced to zero.)
  if (length >= K_MAX_LENGTH) {
    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')
  }
  return length | 0
}

function SlowBuffer (length) {
  if (+length != length) { // eslint-disable-line eqeqeq
    length = 0
  }
  return Buffer.alloc(+length)
}

Buffer.isBuffer = function isBuffer (b) {
  return b != null && b._isBuffer === true &&
    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false
}

Buffer.compare = function compare (a, b) {
  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)
  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)
  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
    throw new TypeError(
      'The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array'
    )
  }

  if (a === b) return 0

  var x = a.length
  var y = b.length

  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
    if (a[i] !== b[i]) {
      x = a[i]
      y = b[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

Buffer.isEncoding = function isEncoding (encoding) {
  switch (String(encoding).toLowerCase()) {
    case 'hex':
    case 'utf8':
    case 'utf-8':
    case 'ascii':
    case 'latin1':
    case 'binary':
    case 'base64':
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      return true
    default:
      return false
  }
}

Buffer.concat = function concat (list, length) {
  if (!Array.isArray(list)) {
    throw new TypeError('"list" argument must be an Array of Buffers')
  }

  if (list.length === 0) {
    return Buffer.alloc(0)
  }

  var i
  if (length === undefined) {
    length = 0
    for (i = 0; i < list.length; ++i) {
      length += list[i].length
    }
  }

  var buffer = Buffer.allocUnsafe(length)
  var pos = 0
  for (i = 0; i < list.length; ++i) {
    var buf = list[i]
    if (isInstance(buf, Uint8Array)) {
      buf = Buffer.from(buf)
    }
    if (!Buffer.isBuffer(buf)) {
      throw new TypeError('"list" argument must be an Array of Buffers')
    }
    buf.copy(buffer, pos)
    pos += buf.length
  }
  return buffer
}

function byteLength (string, encoding) {
  if (Buffer.isBuffer(string)) {
    return string.length
  }
  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {
    return string.byteLength
  }
  if (typeof string !== 'string') {
    throw new TypeError(
      'The "string" argument must be one of type string, Buffer, or ArrayBuffer. ' +
      'Received type ' + typeof string
    )
  }

  var len = string.length
  var mustMatch = (arguments.length > 2 && arguments[2] === true)
  if (!mustMatch && len === 0) return 0

  // Use a for loop to avoid recursion
  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'ascii':
      case 'latin1':
      case 'binary':
        return len
      case 'utf8':
      case 'utf-8':
        return utf8ToBytes(string).length
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return len * 2
      case 'hex':
        return len >>> 1
      case 'base64':
        return base64ToBytes(string).length
      default:
        if (loweredCase) {
          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8
        }
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}
Buffer.byteLength = byteLength

function slowToString (encoding, start, end) {
  var loweredCase = false

  // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
  // property of a typed array.

  // This behaves neither like String nor Uint8Array in that we set start/end
  // to their upper/lower bounds if the value passed is out of range.
  // undefined is handled specially as per ECMA-262 6th Edition,
  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
  if (start === undefined || start < 0) {
    start = 0
  }
  // Return early if start > this.length. Done here to prevent potential uint32
  // coercion fail below.
  if (start > this.length) {
    return ''
  }

  if (end === undefined || end > this.length) {
    end = this.length
  }

  if (end <= 0) {
    return ''
  }

  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
  end >>>= 0
  start >>>= 0

  if (end <= start) {
    return ''
  }

  if (!encoding) encoding = 'utf8'

  while (true) {
    switch (encoding) {
      case 'hex':
        return hexSlice(this, start, end)

      case 'utf8':
      case 'utf-8':
        return utf8Slice(this, start, end)

      case 'ascii':
        return asciiSlice(this, start, end)

      case 'latin1':
      case 'binary':
        return latin1Slice(this, start, end)

      case 'base64':
        return base64Slice(this, start, end)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return utf16leSlice(this, start, end)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = (encoding + '').toLowerCase()
        loweredCase = true
    }
  }
}

// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)
// to detect a Buffer instance. It's not possible to use `instanceof Buffer`
// reliably in a browserify context because there could be multiple different
// copies of the 'buffer' package in use. This method works even for Buffer
// instances that were created from another copy of the `buffer` package.
// See: https://github.com/feross/buffer/issues/154
Buffer.prototype._isBuffer = true

function swap (b, n, m) {
  var i = b[n]
  b[n] = b[m]
  b[m] = i
}

Buffer.prototype.swap16 = function swap16 () {
  var len = this.length
  if (len % 2 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 16-bits')
  }
  for (var i = 0; i < len; i += 2) {
    swap(this, i, i + 1)
  }
  return this
}

Buffer.prototype.swap32 = function swap32 () {
  var len = this.length
  if (len % 4 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 32-bits')
  }
  for (var i = 0; i < len; i += 4) {
    swap(this, i, i + 3)
    swap(this, i + 1, i + 2)
  }
  return this
}

Buffer.prototype.swap64 = function swap64 () {
  var len = this.length
  if (len % 8 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 64-bits')
  }
  for (var i = 0; i < len; i += 8) {
    swap(this, i, i + 7)
    swap(this, i + 1, i + 6)
    swap(this, i + 2, i + 5)
    swap(this, i + 3, i + 4)
  }
  return this
}

Buffer.prototype.toString = function toString () {
  var length = this.length
  if (length === 0) return ''
  if (arguments.length === 0) return utf8Slice(this, 0, length)
  return slowToString.apply(this, arguments)
}

Buffer.prototype.toLocaleString = Buffer.prototype.toString

Buffer.prototype.equals = function equals (b) {
  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
  if (this === b) return true
  return Buffer.compare(this, b) === 0
}

Buffer.prototype.inspect = function inspect () {
  var str = ''
  var max = exports.INSPECT_MAX_BYTES
  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()
  if (this.length > max) str += ' ... '
  return '<Buffer ' + str + '>'
}

Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {
  if (isInstance(target, Uint8Array)) {
    target = Buffer.from(target, target.offset, target.byteLength)
  }
  if (!Buffer.isBuffer(target)) {
    throw new TypeError(
      'The "target" argument must be one of type Buffer or Uint8Array. ' +
      'Received type ' + (typeof target)
    )
  }

  if (start === undefined) {
    start = 0
  }
  if (end === undefined) {
    end = target ? target.length : 0
  }
  if (thisStart === undefined) {
    thisStart = 0
  }
  if (thisEnd === undefined) {
    thisEnd = this.length
  }

  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
    throw new RangeError('out of range index')
  }

  if (thisStart >= thisEnd && start >= end) {
    return 0
  }
  if (thisStart >= thisEnd) {
    return -1
  }
  if (start >= end) {
    return 1
  }

  start >>>= 0
  end >>>= 0
  thisStart >>>= 0
  thisEnd >>>= 0

  if (this === target) return 0

  var x = thisEnd - thisStart
  var y = end - start
  var len = Math.min(x, y)

  var thisCopy = this.slice(thisStart, thisEnd)
  var targetCopy = target.slice(start, end)

  for (var i = 0; i < len; ++i) {
    if (thisCopy[i] !== targetCopy[i]) {
      x = thisCopy[i]
      y = targetCopy[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
//
// Arguments:
// - buffer - a Buffer to search
// - val - a string, Buffer, or number
// - byteOffset - an index into `buffer`; will be clamped to an int32
// - encoding - an optional encoding, relevant is val is a string
// - dir - true for indexOf, false for lastIndexOf
function bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {
  // Empty buffer means no match
  if (buffer.length === 0) return -1

  // Normalize byteOffset
  if (typeof byteOffset === 'string') {
    encoding = byteOffset
    byteOffset = 0
  } else if (byteOffset > 0x7fffffff) {
    byteOffset = 0x7fffffff
  } else if (byteOffset < -0x80000000) {
    byteOffset = -0x80000000
  }
  byteOffset = +byteOffset // Coerce to Number.
  if (numberIsNaN(byteOffset)) {
    // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
    byteOffset = dir ? 0 : (buffer.length - 1)
  }

  // Normalize byteOffset: negative offsets start from the end of the buffer
  if (byteOffset < 0) byteOffset = buffer.length + byteOffset
  if (byteOffset >= buffer.length) {
    if (dir) return -1
    else byteOffset = buffer.length - 1
  } else if (byteOffset < 0) {
    if (dir) byteOffset = 0
    else return -1
  }

  // Normalize val
  if (typeof val === 'string') {
    val = Buffer.from(val, encoding)
  }

  // Finally, search either indexOf (if dir is true) or lastIndexOf
  if (Buffer.isBuffer(val)) {
    // Special case: looking for empty string/buffer always fails
    if (val.length === 0) {
      return -1
    }
    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)
  } else if (typeof val === 'number') {
    val = val & 0xFF // Search for a byte value [0-255]
    if (typeof Uint8Array.prototype.indexOf === 'function') {
      if (dir) {
        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)
      } else {
        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)
      }
    }
    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)
  }

  throw new TypeError('val must be string, number or Buffer')
}

function arrayIndexOf (arr, val, byteOffset, encoding, dir) {
  var indexSize = 1
  var arrLength = arr.length
  var valLength = val.length

  if (encoding !== undefined) {
    encoding = String(encoding).toLowerCase()
    if (encoding === 'ucs2' || encoding === 'ucs-2' ||
        encoding === 'utf16le' || encoding === 'utf-16le') {
      if (arr.length < 2 || val.length < 2) {
        return -1
      }
      indexSize = 2
      arrLength /= 2
      valLength /= 2
      byteOffset /= 2
    }
  }

  function read (buf, i) {
    if (indexSize === 1) {
      return buf[i]
    } else {
      return buf.readUInt16BE(i * indexSize)
    }
  }

  var i
  if (dir) {
    var foundIndex = -1
    for (i = byteOffset; i < arrLength; i++) {
      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
        if (foundIndex === -1) foundIndex = i
        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize
      } else {
        if (foundIndex !== -1) i -= i - foundIndex
        foundIndex = -1
      }
    }
  } else {
    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength
    for (i = byteOffset; i >= 0; i--) {
      var found = true
      for (var j = 0; j < valLength; j++) {
        if (read(arr, i + j) !== read(val, j)) {
          found = false
          break
        }
      }
      if (found) return i
    }
  }

  return -1
}

Buffer.prototype.includes = function includes (val, byteOffset, encoding) {
  return this.indexOf(val, byteOffset, encoding) !== -1
}

Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)
}

Buffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)
}

function hexWrite (buf, string, offset, length) {
  offset = Number(offset) || 0
  var remaining = buf.length - offset
  if (!length) {
    length = remaining
  } else {
    length = Number(length)
    if (length > remaining) {
      length = remaining
    }
  }

  var strLen = string.length

  if (length > strLen / 2) {
    length = strLen / 2
  }
  for (var i = 0; i < length; ++i) {
    var parsed = parseInt(string.substr(i * 2, 2), 16)
    if (numberIsNaN(parsed)) return i
    buf[offset + i] = parsed
  }
  return i
}

function utf8Write (buf, string, offset, length) {
  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
}

function asciiWrite (buf, string, offset, length) {
  return blitBuffer(asciiToBytes(string), buf, offset, length)
}

function latin1Write (buf, string, offset, length) {
  return asciiWrite(buf, string, offset, length)
}

function base64Write (buf, string, offset, length) {
  return blitBuffer(base64ToBytes(string), buf, offset, length)
}

function ucs2Write (buf, string, offset, length) {
  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
}

Buffer.prototype.write = function write (string, offset, length, encoding) {
  // Buffer#write(string)
  if (offset === undefined) {
    encoding = 'utf8'
    length = this.length
    offset = 0
  // Buffer#write(string, encoding)
  } else if (length === undefined && typeof offset === 'string') {
    encoding = offset
    length = this.length
    offset = 0
  // Buffer#write(string, offset[, length][, encoding])
  } else if (isFinite(offset)) {
    offset = offset >>> 0
    if (isFinite(length)) {
      length = length >>> 0
      if (encoding === undefined) encoding = 'utf8'
    } else {
      encoding = length
      length = undefined
    }
  } else {
    throw new Error(
      'Buffer.write(string, encoding, offset[, length]) is no longer supported'
    )
  }

  var remaining = this.length - offset
  if (length === undefined || length > remaining) length = remaining

  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
    throw new RangeError('Attempt to write outside buffer bounds')
  }

  if (!encoding) encoding = 'utf8'

  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'hex':
        return hexWrite(this, string, offset, length)

      case 'utf8':
      case 'utf-8':
        return utf8Write(this, string, offset, length)

      case 'ascii':
        return asciiWrite(this, string, offset, length)

      case 'latin1':
      case 'binary':
        return latin1Write(this, string, offset, length)

      case 'base64':
        // Warning: maxLength not taken into account in base64Write
        return base64Write(this, string, offset, length)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return ucs2Write(this, string, offset, length)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}

Buffer.prototype.toJSON = function toJSON () {
  return {
    type: 'Buffer',
    data: Array.prototype.slice.call(this._arr || this, 0)
  }
}

function base64Slice (buf, start, end) {
  if (start === 0 && end === buf.length) {
    return base64.fromByteArray(buf)
  } else {
    return base64.fromByteArray(buf.slice(start, end))
  }
}

function utf8Slice (buf, start, end) {
  end = Math.min(buf.length, end)
  var res = []

  var i = start
  while (i < end) {
    var firstByte = buf[i]
    var codePoint = null
    var bytesPerSequence = (firstByte > 0xEF) ? 4
      : (firstByte > 0xDF) ? 3
        : (firstByte > 0xBF) ? 2
          : 1

    if (i + bytesPerSequence <= end) {
      var secondByte, thirdByte, fourthByte, tempCodePoint

      switch (bytesPerSequence) {
        case 1:
          if (firstByte < 0x80) {
            codePoint = firstByte
          }
          break
        case 2:
          secondByte = buf[i + 1]
          if ((secondByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
            if (tempCodePoint > 0x7F) {
              codePoint = tempCodePoint
            }
          }
          break
        case 3:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
              codePoint = tempCodePoint
            }
          }
          break
        case 4:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          fourthByte = buf[i + 3]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
              codePoint = tempCodePoint
            }
          }
      }
    }

    if (codePoint === null) {
      // we did not generate a valid codePoint so insert a
      // replacement char (U+FFFD) and advance only 1 byte
      codePoint = 0xFFFD
      bytesPerSequence = 1
    } else if (codePoint > 0xFFFF) {
      // encode to utf16 (surrogate pair dance)
      codePoint -= 0x10000
      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
      codePoint = 0xDC00 | codePoint & 0x3FF
    }

    res.push(codePoint)
    i += bytesPerSequence
  }

  return decodeCodePointsArray(res)
}

// Based on http://stackoverflow.com/a/22747272/680742, the browser with
// the lowest limit is Chrome, with 0x10000 args.
// We go 1 magnitude less, for safety
var MAX_ARGUMENTS_LENGTH = 0x1000

function decodeCodePointsArray (codePoints) {
  var len = codePoints.length
  if (len <= MAX_ARGUMENTS_LENGTH) {
    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
  }

  // Decode in chunks to avoid "call stack size exceeded".
  var res = ''
  var i = 0
  while (i < len) {
    res += String.fromCharCode.apply(
      String,
      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
    )
  }
  return res
}

function asciiSlice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i] & 0x7F)
  }
  return ret
}

function latin1Slice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i])
  }
  return ret
}

function hexSlice (buf, start, end) {
  var len = buf.length

  if (!start || start < 0) start = 0
  if (!end || end < 0 || end > len) end = len

  var out = ''
  for (var i = start; i < end; ++i) {
    out += toHex(buf[i])
  }
  return out
}

function utf16leSlice (buf, start, end) {
  var bytes = buf.slice(start, end)
  var res = ''
  for (var i = 0; i < bytes.length; i += 2) {
    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))
  }
  return res
}

Buffer.prototype.slice = function slice (start, end) {
  var len = this.length
  start = ~~start
  end = end === undefined ? len : ~~end

  if (start < 0) {
    start += len
    if (start < 0) start = 0
  } else if (start > len) {
    start = len
  }

  if (end < 0) {
    end += len
    if (end < 0) end = 0
  } else if (end > len) {
    end = len
  }

  if (end < start) end = start

  var newBuf = this.subarray(start, end)
  // Return an augmented `Uint8Array` instance
  newBuf.__proto__ = Buffer.prototype
  return newBuf
}

/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */
function checkOffset (offset, ext, length) {
  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
}

Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }

  return val
}

Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    checkOffset(offset, byteLength, this.length)
  }

  var val = this[offset + --byteLength]
  var mul = 1
  while (byteLength > 0 && (mul *= 0x100)) {
    val += this[offset + --byteLength] * mul
  }

  return val
}

Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 1, this.length)
  return this[offset]
}

Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  return this[offset] | (this[offset + 1] << 8)
}

Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  return (this[offset] << 8) | this[offset + 1]
}

Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return ((this[offset]) |
      (this[offset + 1] << 8) |
      (this[offset + 2] << 16)) +
      (this[offset + 3] * 0x1000000)
}

Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] * 0x1000000) +
    ((this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    this[offset + 3])
}

Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var i = byteLength
  var mul = 1
  var val = this[offset + --i]
  while (i > 0 && (mul *= 0x100)) {
    val += this[offset + --i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 1, this.length)
  if (!(this[offset] & 0x80)) return (this[offset])
  return ((0xff - this[offset] + 1) * -1)
}

Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset] | (this[offset + 1] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset + 1] | (this[offset] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset]) |
    (this[offset + 1] << 8) |
    (this[offset + 2] << 16) |
    (this[offset + 3] << 24)
}

Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] << 24) |
    (this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    (this[offset + 3])
}

Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, true, 23, 4)
}

Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, false, 23, 4)
}

Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, true, 52, 8)
}

Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, false, 52, 8)
}

function checkInt (buf, value, offset, ext, max, min) {
  if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance')
  if (value > max || value < min) throw new RangeError('"value" argument is out of bounds')
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
}

Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var mul = 1
  var i = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var i = byteLength - 1
  var mul = 1
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  return offset + 2
}

Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  this[offset] = (value >>> 8)
  this[offset + 1] = (value & 0xff)
  return offset + 2
}

Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  this[offset + 3] = (value >>> 24)
  this[offset + 2] = (value >>> 16)
  this[offset + 1] = (value >>> 8)
  this[offset] = (value & 0xff)
  return offset + 4
}

Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  this[offset] = (value >>> 24)
  this[offset + 1] = (value >>> 16)
  this[offset + 2] = (value >>> 8)
  this[offset + 3] = (value & 0xff)
  return offset + 4
}

Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    var limit = Math.pow(2, (8 * byteLength) - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = 0
  var mul = 1
  var sub = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    var limit = Math.pow(2, (8 * byteLength) - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = byteLength - 1
  var mul = 1
  var sub = 0
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
  if (value < 0) value = 0xff + value + 1
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  return offset + 2
}

Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  this[offset] = (value >>> 8)
  this[offset + 1] = (value & 0xff)
  return offset + 2
}

Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  this[offset + 2] = (value >>> 16)
  this[offset + 3] = (value >>> 24)
  return offset + 4
}

Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (value < 0) value = 0xffffffff + value + 1
  this[offset] = (value >>> 24)
  this[offset + 1] = (value >>> 16)
  this[offset + 2] = (value >>> 8)
  this[offset + 3] = (value & 0xff)
  return offset + 4
}

function checkIEEE754 (buf, value, offset, ext, max, min) {
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
  if (offset < 0) throw new RangeError('Index out of range')
}

function writeFloat (buf, value, offset, littleEndian, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
  }
  ieee754.write(buf, value, offset, littleEndian, 23, 4)
  return offset + 4
}

Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
  return writeFloat(this, value, offset, true, noAssert)
}

Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
  return writeFloat(this, value, offset, false, noAssert)
}

function writeDouble (buf, value, offset, littleEndian, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
  }
  ieee754.write(buf, value, offset, littleEndian, 52, 8)
  return offset + 8
}

Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
  return writeDouble(this, value, offset, true, noAssert)
}

Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
  return writeDouble(this, value, offset, false, noAssert)
}

// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Buffer.prototype.copy = function copy (target, targetStart, start, end) {
  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')
  if (!start) start = 0
  if (!end && end !== 0) end = this.length
  if (targetStart >= target.length) targetStart = target.length
  if (!targetStart) targetStart = 0
  if (end > 0 && end < start) end = start

  // Copy 0 bytes; we're done
  if (end === start) return 0
  if (target.length === 0 || this.length === 0) return 0

  // Fatal error conditions
  if (targetStart < 0) {
    throw new RangeError('targetStart out of bounds')
  }
  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')
  if (end < 0) throw new RangeError('sourceEnd out of bounds')

  // Are we oob?
  if (end > this.length) end = this.length
  if (target.length - targetStart < end - start) {
    end = target.length - targetStart + start
  }

  var len = end - start

  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {
    // Use built-in when available, missing from IE11
    this.copyWithin(targetStart, start, end)
  } else if (this === target && start < targetStart && targetStart < end) {
    // descending copy from end
    for (var i = len - 1; i >= 0; --i) {
      target[i + targetStart] = this[i + start]
    }
  } else {
    Uint8Array.prototype.set.call(
      target,
      this.subarray(start, end),
      targetStart
    )
  }

  return len
}

// Usage:
//    buffer.fill(number[, offset[, end]])
//    buffer.fill(buffer[, offset[, end]])
//    buffer.fill(string[, offset[, end]][, encoding])
Buffer.prototype.fill = function fill (val, start, end, encoding) {
  // Handle string cases:
  if (typeof val === 'string') {
    if (typeof start === 'string') {
      encoding = start
      start = 0
      end = this.length
    } else if (typeof end === 'string') {
      encoding = end
      end = this.length
    }
    if (encoding !== undefined && typeof encoding !== 'string') {
      throw new TypeError('encoding must be a string')
    }
    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
      throw new TypeError('Unknown encoding: ' + encoding)
    }
    if (val.length === 1) {
      var code = val.charCodeAt(0)
      if ((encoding === 'utf8' && code < 128) ||
          encoding === 'latin1') {
        // Fast path: If `val` fits into a single byte, use that numeric value.
        val = code
      }
    }
  } else if (typeof val === 'number') {
    val = val & 255
  }

  // Invalid ranges are not set to a default, so can range check early.
  if (start < 0 || this.length < start || this.length < end) {
    throw new RangeError('Out of range index')
  }

  if (end <= start) {
    return this
  }

  start = start >>> 0
  end = end === undefined ? this.length : end >>> 0

  if (!val) val = 0

  var i
  if (typeof val === 'number') {
    for (i = start; i < end; ++i) {
      this[i] = val
    }
  } else {
    var bytes = Buffer.isBuffer(val)
      ? val
      : Buffer.from(val, encoding)
    var len = bytes.length
    if (len === 0) {
      throw new TypeError('The value "' + val +
        '" is invalid for argument "value"')
    }
    for (i = 0; i < end - start; ++i) {
      this[i + start] = bytes[i % len]
    }
  }

  return this
}

// HELPER FUNCTIONS
// ================

var INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g

function base64clean (str) {
  // Node takes equal signs as end of the Base64 encoding
  str = str.split('=')[0]
  // Node strips out invalid characters like \n and \t from the string, base64-js does not
  str = str.trim().replace(INVALID_BASE64_RE, '')
  // Node converts strings with length < 2 to ''
  if (str.length < 2) return ''
  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
  while (str.length % 4 !== 0) {
    str = str + '='
  }
  return str
}

function toHex (n) {
  if (n < 16) return '0' + n.toString(16)
  return n.toString(16)
}

function utf8ToBytes (string, units) {
  units = units || Infinity
  var codePoint
  var length = string.length
  var leadSurrogate = null
  var bytes = []

  for (var i = 0; i < length; ++i) {
    codePoint = string.charCodeAt(i)

    // is surrogate component
    if (codePoint > 0xD7FF && codePoint < 0xE000) {
      // last char was a lead
      if (!leadSurrogate) {
        // no lead yet
        if (codePoint > 0xDBFF) {
          // unexpected trail
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        } else if (i + 1 === length) {
          // unpaired lead
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        }

        // valid lead
        leadSurrogate = codePoint

        continue
      }

      // 2 leads in a row
      if (codePoint < 0xDC00) {
        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
        leadSurrogate = codePoint
        continue
      }

      // valid surrogate pair
      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
    } else if (leadSurrogate) {
      // valid bmp char, but last char was a lead
      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
    }

    leadSurrogate = null

    // encode utf8
    if (codePoint < 0x80) {
      if ((units -= 1) < 0) break
      bytes.push(codePoint)
    } else if (codePoint < 0x800) {
      if ((units -= 2) < 0) break
      bytes.push(
        codePoint >> 0x6 | 0xC0,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x10000) {
      if ((units -= 3) < 0) break
      bytes.push(
        codePoint >> 0xC | 0xE0,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x110000) {
      if ((units -= 4) < 0) break
      bytes.push(
        codePoint >> 0x12 | 0xF0,
        codePoint >> 0xC & 0x3F | 0x80,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else {
      throw new Error('Invalid code point')
    }
  }

  return bytes
}

function asciiToBytes (str) {
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    // Node's code seems to be doing this and not & 0x7F..
    byteArray.push(str.charCodeAt(i) & 0xFF)
  }
  return byteArray
}

function utf16leToBytes (str, units) {
  var c, hi, lo
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    if ((units -= 2) < 0) break

    c = str.charCodeAt(i)
    hi = c >> 8
    lo = c % 256
    byteArray.push(lo)
    byteArray.push(hi)
  }

  return byteArray
}

function base64ToBytes (str) {
  return base64.toByteArray(base64clean(str))
}

function blitBuffer (src, dst, offset, length) {
  for (var i = 0; i < length; ++i) {
    if ((i + offset >= dst.length) || (i >= src.length)) break
    dst[i + offset] = src[i]
  }
  return i
}

// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass
// the `instanceof` check but they should be treated as of that type.
// See: https://github.com/feross/buffer/issues/166
function isInstance (obj, type) {
  return obj instanceof type ||
    (obj != null && obj.constructor != null && obj.constructor.name != null &&
      obj.constructor.name === type.name)
}
function numberIsNaN (obj) {
  // For IE11 support
  return obj !== obj // eslint-disable-line no-self-compare
}

}).call(this)}).call(this,require("buffer").Buffer)
},{"base64-js":109,"buffer":112,"ieee754":215}],113:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

'use strict';

var R = typeof Reflect === 'object' ? Reflect : null
var ReflectApply = R && typeof R.apply === 'function'
  ? R.apply
  : function ReflectApply(target, receiver, args) {
    return Function.prototype.apply.call(target, receiver, args);
  }

var ReflectOwnKeys
if (R && typeof R.ownKeys === 'function') {
  ReflectOwnKeys = R.ownKeys
} else if (Object.getOwnPropertySymbols) {
  ReflectOwnKeys = function ReflectOwnKeys(target) {
    return Object.getOwnPropertyNames(target)
      .concat(Object.getOwnPropertySymbols(target));
  };
} else {
  ReflectOwnKeys = function ReflectOwnKeys(target) {
    return Object.getOwnPropertyNames(target);
  };
}

function ProcessEmitWarning(warning) {
  if (console && console.warn) console.warn(warning);
}

var NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {
  return value !== value;
}

function EventEmitter() {
  EventEmitter.init.call(this);
}
module.exports = EventEmitter;
module.exports.once = once;

// Backwards-compat with node 0.10.x
EventEmitter.EventEmitter = EventEmitter;

EventEmitter.prototype._events = undefined;
EventEmitter.prototype._eventsCount = 0;
EventEmitter.prototype._maxListeners = undefined;

// By default EventEmitters will print a warning if more than 10 listeners are
// added to it. This is a useful default which helps finding memory leaks.
var defaultMaxListeners = 10;

function checkListener(listener) {
  if (typeof listener !== 'function') {
    throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof listener);
  }
}

Object.defineProperty(EventEmitter, 'defaultMaxListeners', {
  enumerable: true,
  get: function() {
    return defaultMaxListeners;
  },
  set: function(arg) {
    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {
      throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + arg + '.');
    }
    defaultMaxListeners = arg;
  }
});

EventEmitter.init = function() {

  if (this._events === undefined ||
      this._events === Object.getPrototypeOf(this)._events) {
    this._events = Object.create(null);
    this._eventsCount = 0;
  }

  this._maxListeners = this._maxListeners || undefined;
};

// Obviously not all Emitters should be limited to 10. This function allows
// that to be increased. Set to zero for unlimited.
EventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {
  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {
    throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + n + '.');
  }
  this._maxListeners = n;
  return this;
};

function _getMaxListeners(that) {
  if (that._maxListeners === undefined)
    return EventEmitter.defaultMaxListeners;
  return that._maxListeners;
}

EventEmitter.prototype.getMaxListeners = function getMaxListeners() {
  return _getMaxListeners(this);
};

EventEmitter.prototype.emit = function emit(type) {
  var args = [];
  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);
  var doError = (type === 'error');

  var events = this._events;
  if (events !== undefined)
    doError = (doError && events.error === undefined);
  else if (!doError)
    return false;

  // If there is no 'error' event listener then throw.
  if (doError) {
    var er;
    if (args.length > 0)
      er = args[0];
    if (er instanceof Error) {
      // Note: The comments on the `throw` lines are intentional, they show
      // up in Node's output if this results in an unhandled exception.
      throw er; // Unhandled 'error' event
    }
    // At least give some kind of context to the user
    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));
    err.context = er;
    throw err; // Unhandled 'error' event
  }

  var handler = events[type];

  if (handler === undefined)
    return false;

  if (typeof handler === 'function') {
    ReflectApply(handler, this, args);
  } else {
    var len = handler.length;
    var listeners = arrayClone(handler, len);
    for (var i = 0; i < len; ++i)
      ReflectApply(listeners[i], this, args);
  }

  return true;
};

function _addListener(target, type, listener, prepend) {
  var m;
  var events;
  var existing;

  checkListener(listener);

  events = target._events;
  if (events === undefined) {
    events = target._events = Object.create(null);
    target._eventsCount = 0;
  } else {
    // To avoid recursion in the case that type === "newListener"! Before
    // adding it to the listeners, first emit "newListener".
    if (events.newListener !== undefined) {
      target.emit('newListener', type,
                  listener.listener ? listener.listener : listener);

      // Re-assign `events` because a newListener handler could have caused the
      // this._events to be assigned to a new object
      events = target._events;
    }
    existing = events[type];
  }

  if (existing === undefined) {
    // Optimize the case of one listener. Don't need the extra array object.
    existing = events[type] = listener;
    ++target._eventsCount;
  } else {
    if (typeof existing === 'function') {
      // Adding the second element, need to change to array.
      existing = events[type] =
        prepend ? [listener, existing] : [existing, listener];
      // If we've already got an array, just append.
    } else if (prepend) {
      existing.unshift(listener);
    } else {
      existing.push(listener);
    }

    // Check for listener leak
    m = _getMaxListeners(target);
    if (m > 0 && existing.length > m && !existing.warned) {
      existing.warned = true;
      // No error code for this since it is a Warning
      // eslint-disable-next-line no-restricted-syntax
      var w = new Error('Possible EventEmitter memory leak detected. ' +
                          existing.length + ' ' + String(type) + ' listeners ' +
                          'added. Use emitter.setMaxListeners() to ' +
                          'increase limit');
      w.name = 'MaxListenersExceededWarning';
      w.emitter = target;
      w.type = type;
      w.count = existing.length;
      ProcessEmitWarning(w);
    }
  }

  return target;
}

EventEmitter.prototype.addListener = function addListener(type, listener) {
  return _addListener(this, type, listener, false);
};

EventEmitter.prototype.on = EventEmitter.prototype.addListener;

EventEmitter.prototype.prependListener =
    function prependListener(type, listener) {
      return _addListener(this, type, listener, true);
    };

function onceWrapper() {
  if (!this.fired) {
    this.target.removeListener(this.type, this.wrapFn);
    this.fired = true;
    if (arguments.length === 0)
      return this.listener.call(this.target);
    return this.listener.apply(this.target, arguments);
  }
}

function _onceWrap(target, type, listener) {
  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };
  var wrapped = onceWrapper.bind(state);
  wrapped.listener = listener;
  state.wrapFn = wrapped;
  return wrapped;
}

EventEmitter.prototype.once = function once(type, listener) {
  checkListener(listener);
  this.on(type, _onceWrap(this, type, listener));
  return this;
};

EventEmitter.prototype.prependOnceListener =
    function prependOnceListener(type, listener) {
      checkListener(listener);
      this.prependListener(type, _onceWrap(this, type, listener));
      return this;
    };

// Emits a 'removeListener' event if and only if the listener was removed.
EventEmitter.prototype.removeListener =
    function removeListener(type, listener) {
      var list, events, position, i, originalListener;

      checkListener(listener);

      events = this._events;
      if (events === undefined)
        return this;

      list = events[type];
      if (list === undefined)
        return this;

      if (list === listener || list.listener === listener) {
        if (--this._eventsCount === 0)
          this._events = Object.create(null);
        else {
          delete events[type];
          if (events.removeListener)
            this.emit('removeListener', type, list.listener || listener);
        }
      } else if (typeof list !== 'function') {
        position = -1;

        for (i = list.length - 1; i >= 0; i--) {
          if (list[i] === listener || list[i].listener === listener) {
            originalListener = list[i].listener;
            position = i;
            break;
          }
        }

        if (position < 0)
          return this;

        if (position === 0)
          list.shift();
        else {
          spliceOne(list, position);
        }

        if (list.length === 1)
          events[type] = list[0];

        if (events.removeListener !== undefined)
          this.emit('removeListener', type, originalListener || listener);
      }

      return this;
    };

EventEmitter.prototype.off = EventEmitter.prototype.removeListener;

EventEmitter.prototype.removeAllListeners =
    function removeAllListeners(type) {
      var listeners, events, i;

      events = this._events;
      if (events === undefined)
        return this;

      // not listening for removeListener, no need to emit
      if (events.removeListener === undefined) {
        if (arguments.length === 0) {
          this._events = Object.create(null);
          this._eventsCount = 0;
        } else if (events[type] !== undefined) {
          if (--this._eventsCount === 0)
            this._events = Object.create(null);
          else
            delete events[type];
        }
        return this;
      }

      // emit removeListener for all listeners on all events
      if (arguments.length === 0) {
        var keys = Object.keys(events);
        var key;
        for (i = 0; i < keys.length; ++i) {
          key = keys[i];
          if (key === 'removeListener') continue;
          this.removeAllListeners(key);
        }
        this.removeAllListeners('removeListener');
        this._events = Object.create(null);
        this._eventsCount = 0;
        return this;
      }

      listeners = events[type];

      if (typeof listeners === 'function') {
        this.removeListener(type, listeners);
      } else if (listeners !== undefined) {
        // LIFO order
        for (i = listeners.length - 1; i >= 0; i--) {
          this.removeListener(type, listeners[i]);
        }
      }

      return this;
    };

function _listeners(target, type, unwrap) {
  var events = target._events;

  if (events === undefined)
    return [];

  var evlistener = events[type];
  if (evlistener === undefined)
    return [];

  if (typeof evlistener === 'function')
    return unwrap ? [evlistener.listener || evlistener] : [evlistener];

  return unwrap ?
    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);
}

EventEmitter.prototype.listeners = function listeners(type) {
  return _listeners(this, type, true);
};

EventEmitter.prototype.rawListeners = function rawListeners(type) {
  return _listeners(this, type, false);
};

EventEmitter.listenerCount = function(emitter, type) {
  if (typeof emitter.listenerCount === 'function') {
    return emitter.listenerCount(type);
  } else {
    return listenerCount.call(emitter, type);
  }
};

EventEmitter.prototype.listenerCount = listenerCount;
function listenerCount(type) {
  var events = this._events;

  if (events !== undefined) {
    var evlistener = events[type];

    if (typeof evlistener === 'function') {
      return 1;
    } else if (evlistener !== undefined) {
      return evlistener.length;
    }
  }

  return 0;
}

EventEmitter.prototype.eventNames = function eventNames() {
  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];
};

function arrayClone(arr, n) {
  var copy = new Array(n);
  for (var i = 0; i < n; ++i)
    copy[i] = arr[i];
  return copy;
}

function spliceOne(list, index) {
  for (; index + 1 < list.length; index++)
    list[index] = list[index + 1];
  list.pop();
}

function unwrapListeners(arr) {
  var ret = new Array(arr.length);
  for (var i = 0; i < ret.length; ++i) {
    ret[i] = arr[i].listener || arr[i];
  }
  return ret;
}

function once(emitter, name) {
  return new Promise(function (resolve, reject) {
    function errorListener(err) {
      emitter.removeListener(name, resolver);
      reject(err);
    }

    function resolver() {
      if (typeof emitter.removeListener === 'function') {
        emitter.removeListener('error', errorListener);
      }
      resolve([].slice.call(arguments));
    };

    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });
    if (name !== 'error') {
      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });
    }
  });
}

function addErrorHandlerIfEventEmitter(emitter, handler, flags) {
  if (typeof emitter.on === 'function') {
    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);
  }
}

function eventTargetAgnosticAddListener(emitter, name, listener, flags) {
  if (typeof emitter.on === 'function') {
    if (flags.once) {
      emitter.once(name, listener);
    } else {
      emitter.on(name, listener);
    }
  } else if (typeof emitter.addEventListener === 'function') {
    // EventTarget does not have `error` event semantics like Node
    // EventEmitters, we do not listen for `error` events here.
    emitter.addEventListener(name, function wrapListener(arg) {
      // IE does not have builtin `{ once: true }` support so we
      // have to do it manually.
      if (flags.once) {
        emitter.removeEventListener(name, wrapListener);
      }
      listener(arg);
    });
  } else {
    throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type ' + typeof emitter);
  }
}

},{}],114:[function(require,module,exports){
(function (process){(function (){
// 'path' module extracted from Node.js v8.11.1 (only the posix part)
// transplited with Babel

// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

'use strict';

function assertPath(path) {
  if (typeof path !== 'string') {
    throw new TypeError('Path must be a string. Received ' + JSON.stringify(path));
  }
}

// Resolves . and .. elements in a path with directory names
function normalizeStringPosix(path, allowAboveRoot) {
  var res = '';
  var lastSegmentLength = 0;
  var lastSlash = -1;
  var dots = 0;
  var code;
  for (var i = 0; i <= path.length; ++i) {
    if (i < path.length)
      code = path.charCodeAt(i);
    else if (code === 47 /*/*/)
      break;
    else
      code = 47 /*/*/;
    if (code === 47 /*/*/) {
      if (lastSlash === i - 1 || dots === 1) {
        // NOOP
      } else if (lastSlash !== i - 1 && dots === 2) {
        if (res.length < 2 || lastSegmentLength !== 2 || res.charCodeAt(res.length - 1) !== 46 /*.*/ || res.charCodeAt(res.length - 2) !== 46 /*.*/) {
          if (res.length > 2) {
            var lastSlashIndex = res.lastIndexOf('/');
            if (lastSlashIndex !== res.length - 1) {
              if (lastSlashIndex === -1) {
                res = '';
                lastSegmentLength = 0;
              } else {
                res = res.slice(0, lastSlashIndex);
                lastSegmentLength = res.length - 1 - res.lastIndexOf('/');
              }
              lastSlash = i;
              dots = 0;
              continue;
            }
          } else if (res.length === 2 || res.length === 1) {
            res = '';
            lastSegmentLength = 0;
            lastSlash = i;
            dots = 0;
            continue;
          }
        }
        if (allowAboveRoot) {
          if (res.length > 0)
            res += '/..';
          else
            res = '..';
          lastSegmentLength = 2;
        }
      } else {
        if (res.length > 0)
          res += '/' + path.slice(lastSlash + 1, i);
        else
          res = path.slice(lastSlash + 1, i);
        lastSegmentLength = i - lastSlash - 1;
      }
      lastSlash = i;
      dots = 0;
    } else if (code === 46 /*.*/ && dots !== -1) {
      ++dots;
    } else {
      dots = -1;
    }
  }
  return res;
}

function _format(sep, pathObject) {
  var dir = pathObject.dir || pathObject.root;
  var base = pathObject.base || (pathObject.name || '') + (pathObject.ext || '');
  if (!dir) {
    return base;
  }
  if (dir === pathObject.root) {
    return dir + base;
  }
  return dir + sep + base;
}

var posix = {
  // path.resolve([from ...], to)
  resolve: function resolve() {
    var resolvedPath = '';
    var resolvedAbsolute = false;
    var cwd;

    for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
      var path;
      if (i >= 0)
        path = arguments[i];
      else {
        if (cwd === undefined)
          cwd = process.cwd();
        path = cwd;
      }

      assertPath(path);

      // Skip empty entries
      if (path.length === 0) {
        continue;
      }

      resolvedPath = path + '/' + resolvedPath;
      resolvedAbsolute = path.charCodeAt(0) === 47 /*/*/;
    }

    // At this point the path should be resolved to a full absolute path, but
    // handle relative paths to be safe (might happen when process.cwd() fails)

    // Normalize the path
    resolvedPath = normalizeStringPosix(resolvedPath, !resolvedAbsolute);

    if (resolvedAbsolute) {
      if (resolvedPath.length > 0)
        return '/' + resolvedPath;
      else
        return '/';
    } else if (resolvedPath.length > 0) {
      return resolvedPath;
    } else {
      return '.';
    }
  },

  normalize: function normalize(path) {
    assertPath(path);

    if (path.length === 0) return '.';

    var isAbsolute = path.charCodeAt(0) === 47 /*/*/;
    var trailingSeparator = path.charCodeAt(path.length - 1) === 47 /*/*/;

    // Normalize the path
    path = normalizeStringPosix(path, !isAbsolute);

    if (path.length === 0 && !isAbsolute) path = '.';
    if (path.length > 0 && trailingSeparator) path += '/';

    if (isAbsolute) return '/' + path;
    return path;
  },

  isAbsolute: function isAbsolute(path) {
    assertPath(path);
    return path.length > 0 && path.charCodeAt(0) === 47 /*/*/;
  },

  join: function join() {
    if (arguments.length === 0)
      return '.';
    var joined;
    for (var i = 0; i < arguments.length; ++i) {
      var arg = arguments[i];
      assertPath(arg);
      if (arg.length > 0) {
        if (joined === undefined)
          joined = arg;
        else
          joined += '/' + arg;
      }
    }
    if (joined === undefined)
      return '.';
    return posix.normalize(joined);
  },

  relative: function relative(from, to) {
    assertPath(from);
    assertPath(to);

    if (from === to) return '';

    from = posix.resolve(from);
    to = posix.resolve(to);

    if (from === to) return '';

    // Trim any leading backslashes
    var fromStart = 1;
    for (; fromStart < from.length; ++fromStart) {
      if (from.charCodeAt(fromStart) !== 47 /*/*/)
        break;
    }
    var fromEnd = from.length;
    var fromLen = fromEnd - fromStart;

    // Trim any leading backslashes
    var toStart = 1;
    for (; toStart < to.length; ++toStart) {
      if (to.charCodeAt(toStart) !== 47 /*/*/)
        break;
    }
    var toEnd = to.length;
    var toLen = toEnd - toStart;

    // Compare paths to find the longest common path from root
    var length = fromLen < toLen ? fromLen : toLen;
    var lastCommonSep = -1;
    var i = 0;
    for (; i <= length; ++i) {
      if (i === length) {
        if (toLen > length) {
          if (to.charCodeAt(toStart + i) === 47 /*/*/) {
            // We get here if `from` is the exact base path for `to`.
            // For example: from='/foo/bar'; to='/foo/bar/baz'
            return to.slice(toStart + i + 1);
          } else if (i === 0) {
            // We get here if `from` is the root
            // For example: from='/'; to='/foo'
            return to.slice(toStart + i);
          }
        } else if (fromLen > length) {
          if (from.charCodeAt(fromStart + i) === 47 /*/*/) {
            // We get here if `to` is the exact base path for `from`.
            // For example: from='/foo/bar/baz'; to='/foo/bar'
            lastCommonSep = i;
          } else if (i === 0) {
            // We get here if `to` is the root.
            // For example: from='/foo'; to='/'
            lastCommonSep = 0;
          }
        }
        break;
      }
      var fromCode = from.charCodeAt(fromStart + i);
      var toCode = to.charCodeAt(toStart + i);
      if (fromCode !== toCode)
        break;
      else if (fromCode === 47 /*/*/)
        lastCommonSep = i;
    }

    var out = '';
    // Generate the relative path based on the path difference between `to`
    // and `from`
    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {
      if (i === fromEnd || from.charCodeAt(i) === 47 /*/*/) {
        if (out.length === 0)
          out += '..';
        else
          out += '/..';
      }
    }

    // Lastly, append the rest of the destination (`to`) path that comes after
    // the common path parts
    if (out.length > 0)
      return out + to.slice(toStart + lastCommonSep);
    else {
      toStart += lastCommonSep;
      if (to.charCodeAt(toStart) === 47 /*/*/)
        ++toStart;
      return to.slice(toStart);
    }
  },

  _makeLong: function _makeLong(path) {
    return path;
  },

  dirname: function dirname(path) {
    assertPath(path);
    if (path.length === 0) return '.';
    var code = path.charCodeAt(0);
    var hasRoot = code === 47 /*/*/;
    var end = -1;
    var matchedSlash = true;
    for (var i = path.length - 1; i >= 1; --i) {
      code = path.charCodeAt(i);
      if (code === 47 /*/*/) {
          if (!matchedSlash) {
            end = i;
            break;
          }
        } else {
        // We saw the first non-path separator
        matchedSlash = false;
      }
    }

    if (end === -1) return hasRoot ? '/' : '.';
    if (hasRoot && end === 1) return '//';
    return path.slice(0, end);
  },

  basename: function basename(path, ext) {
    if (ext !== undefined && typeof ext !== 'string') throw new TypeError('"ext" argument must be a string');
    assertPath(path);

    var start = 0;
    var end = -1;
    var matchedSlash = true;
    var i;

    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {
      if (ext.length === path.length && ext === path) return '';
      var extIdx = ext.length - 1;
      var firstNonSlashEnd = -1;
      for (i = path.length - 1; i >= 0; --i) {
        var code = path.charCodeAt(i);
        if (code === 47 /*/*/) {
            // If we reached a path separator that was not part of a set of path
            // separators at the end of the string, stop now
            if (!matchedSlash) {
              start = i + 1;
              break;
            }
          } else {
          if (firstNonSlashEnd === -1) {
            // We saw the first non-path separator, remember this index in case
            // we need it if the extension ends up not matching
            matchedSlash = false;
            firstNonSlashEnd = i + 1;
          }
          if (extIdx >= 0) {
            // Try to match the explicit extension
            if (code === ext.charCodeAt(extIdx)) {
              if (--extIdx === -1) {
                // We matched the extension, so mark this as the end of our path
                // component
                end = i;
              }
            } else {
              // Extension does not match, so our result is the entire path
              // component
              extIdx = -1;
              end = firstNonSlashEnd;
            }
          }
        }
      }

      if (start === end) end = firstNonSlashEnd;else if (end === -1) end = path.length;
      return path.slice(start, end);
    } else {
      for (i = path.length - 1; i >= 0; --i) {
        if (path.charCodeAt(i) === 47 /*/*/) {
            // If we reached a path separator that was not part of a set of path
            // separators at the end of the string, stop now
            if (!matchedSlash) {
              start = i + 1;
              break;
            }
          } else if (end === -1) {
          // We saw the first non-path separator, mark this as the end of our
          // path component
          matchedSlash = false;
          end = i + 1;
        }
      }

      if (end === -1) return '';
      return path.slice(start, end);
    }
  },

  extname: function extname(path) {
    assertPath(path);
    var startDot = -1;
    var startPart = 0;
    var end = -1;
    var matchedSlash = true;
    // Track the state of characters (if any) we see before our first dot and
    // after any path separator we find
    var preDotState = 0;
    for (var i = path.length - 1; i >= 0; --i) {
      var code = path.charCodeAt(i);
      if (code === 47 /*/*/) {
          // If we reached a path separator that was not part of a set of path
          // separators at the end of the string, stop now
          if (!matchedSlash) {
            startPart = i + 1;
            break;
          }
          continue;
        }
      if (end === -1) {
        // We saw the first non-path separator, mark this as the end of our
        // extension
        matchedSlash = false;
        end = i + 1;
      }
      if (code === 46 /*.*/) {
          // If this is our first dot, mark it as the start of our extension
          if (startDot === -1)
            startDot = i;
          else if (preDotState !== 1)
            preDotState = 1;
      } else if (startDot !== -1) {
        // We saw a non-dot and non-path separator before our dot, so we should
        // have a good chance at having a non-empty extension
        preDotState = -1;
      }
    }

    if (startDot === -1 || end === -1 ||
        // We saw a non-dot character immediately before the dot
        preDotState === 0 ||
        // The (right-most) trimmed path component is exactly '..'
        preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {
      return '';
    }
    return path.slice(startDot, end);
  },

  format: function format(pathObject) {
    if (pathObject === null || typeof pathObject !== 'object') {
      throw new TypeError('The "pathObject" argument must be of type Object. Received type ' + typeof pathObject);
    }
    return _format('/', pathObject);
  },

  parse: function parse(path) {
    assertPath(path);

    var ret = { root: '', dir: '', base: '', ext: '', name: '' };
    if (path.length === 0) return ret;
    var code = path.charCodeAt(0);
    var isAbsolute = code === 47 /*/*/;
    var start;
    if (isAbsolute) {
      ret.root = '/';
      start = 1;
    } else {
      start = 0;
    }
    var startDot = -1;
    var startPart = 0;
    var end = -1;
    var matchedSlash = true;
    var i = path.length - 1;

    // Track the state of characters (if any) we see before our first dot and
    // after any path separator we find
    var preDotState = 0;

    // Get non-dir info
    for (; i >= start; --i) {
      code = path.charCodeAt(i);
      if (code === 47 /*/*/) {
          // If we reached a path separator that was not part of a set of path
          // separators at the end of the string, stop now
          if (!matchedSlash) {
            startPart = i + 1;
            break;
          }
          continue;
        }
      if (end === -1) {
        // We saw the first non-path separator, mark this as the end of our
        // extension
        matchedSlash = false;
        end = i + 1;
      }
      if (code === 46 /*.*/) {
          // If this is our first dot, mark it as the start of our extension
          if (startDot === -1) startDot = i;else if (preDotState !== 1) preDotState = 1;
        } else if (startDot !== -1) {
        // We saw a non-dot and non-path separator before our dot, so we should
        // have a good chance at having a non-empty extension
        preDotState = -1;
      }
    }

    if (startDot === -1 || end === -1 ||
    // We saw a non-dot character immediately before the dot
    preDotState === 0 ||
    // The (right-most) trimmed path component is exactly '..'
    preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {
      if (end !== -1) {
        if (startPart === 0 && isAbsolute) ret.base = ret.name = path.slice(1, end);else ret.base = ret.name = path.slice(startPart, end);
      }
    } else {
      if (startPart === 0 && isAbsolute) {
        ret.name = path.slice(1, startDot);
        ret.base = path.slice(1, end);
      } else {
        ret.name = path.slice(startPart, startDot);
        ret.base = path.slice(startPart, end);
      }
      ret.ext = path.slice(startDot, end);
    }

    if (startPart > 0) ret.dir = path.slice(0, startPart - 1);else if (isAbsolute) ret.dir = '/';

    return ret;
  },

  sep: '/',
  delimiter: ':',
  win32: null,
  posix: null
};

posix.posix = posix;

module.exports = posix;

}).call(this)}).call(this,require('_process'))
},{"_process":222}],115:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

module.exports = Stream;

var EE = require('events').EventEmitter;
var inherits = require('inherits');

inherits(Stream, EE);
Stream.Readable = require('readable-stream/lib/_stream_readable.js');
Stream.Writable = require('readable-stream/lib/_stream_writable.js');
Stream.Duplex = require('readable-stream/lib/_stream_duplex.js');
Stream.Transform = require('readable-stream/lib/_stream_transform.js');
Stream.PassThrough = require('readable-stream/lib/_stream_passthrough.js');
Stream.finished = require('readable-stream/lib/internal/streams/end-of-stream.js')
Stream.pipeline = require('readable-stream/lib/internal/streams/pipeline.js')

// Backwards-compat with node 0.4.x
Stream.Stream = Stream;



// old-style streams.  Note that the pipe method (the only relevant
// part of this class) is overridden in the Readable class.

function Stream() {
  EE.call(this);
}

Stream.prototype.pipe = function(dest, options) {
  var source = this;

  function ondata(chunk) {
    if (dest.writable) {
      if (false === dest.write(chunk) && source.pause) {
        source.pause();
      }
    }
  }

  source.on('data', ondata);

  function ondrain() {
    if (source.readable && source.resume) {
      source.resume();
    }
  }

  dest.on('drain', ondrain);

  // If the 'end' option is not supplied, dest.end() will be called when
  // source gets the 'end' or 'close' events.  Only dest.end() once.
  if (!dest._isStdio && (!options || options.end !== false)) {
    source.on('end', onend);
    source.on('close', onclose);
  }

  var didOnEnd = false;
  function onend() {
    if (didOnEnd) return;
    didOnEnd = true;

    dest.end();
  }


  function onclose() {
    if (didOnEnd) return;
    didOnEnd = true;

    if (typeof dest.destroy === 'function') dest.destroy();
  }

  // don't leave dangling pipes when there are errors.
  function onerror(er) {
    cleanup();
    if (EE.listenerCount(this, 'error') === 0) {
      throw er; // Unhandled stream error in pipe.
    }
  }

  source.on('error', onerror);
  dest.on('error', onerror);

  // remove all the event listeners that were added.
  function cleanup() {
    source.removeListener('data', ondata);
    dest.removeListener('drain', ondrain);

    source.removeListener('end', onend);
    source.removeListener('close', onclose);

    source.removeListener('error', onerror);
    dest.removeListener('error', onerror);

    source.removeListener('end', cleanup);
    source.removeListener('close', cleanup);

    dest.removeListener('close', cleanup);
  }

  source.on('end', cleanup);
  source.on('close', cleanup);

  dest.on('close', cleanup);

  dest.emit('pipe', source);

  // Allow for unix-like usage: A.pipe(B).pipe(C)
  return dest;
};

},{"events":113,"inherits":216,"readable-stream/lib/_stream_duplex.js":117,"readable-stream/lib/_stream_passthrough.js":118,"readable-stream/lib/_stream_readable.js":119,"readable-stream/lib/_stream_transform.js":120,"readable-stream/lib/_stream_writable.js":121,"readable-stream/lib/internal/streams/end-of-stream.js":125,"readable-stream/lib/internal/streams/pipeline.js":127}],116:[function(require,module,exports){
'use strict';

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

var codes = {};

function createErrorType(code, message, Base) {
  if (!Base) {
    Base = Error;
  }

  function getMessage(arg1, arg2, arg3) {
    if (typeof message === 'string') {
      return message;
    } else {
      return message(arg1, arg2, arg3);
    }
  }

  var NodeError =
  /*#__PURE__*/
  function (_Base) {
    _inheritsLoose(NodeError, _Base);

    function NodeError(arg1, arg2, arg3) {
      return _Base.call(this, getMessage(arg1, arg2, arg3)) || this;
    }

    return NodeError;
  }(Base);

  NodeError.prototype.name = Base.name;
  NodeError.prototype.code = code;
  codes[code] = NodeError;
} // https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js


function oneOf(expected, thing) {
  if (Array.isArray(expected)) {
    var len = expected.length;
    expected = expected.map(function (i) {
      return String(i);
    });

    if (len > 2) {
      return "one of ".concat(thing, " ").concat(expected.slice(0, len - 1).join(', '), ", or ") + expected[len - 1];
    } else if (len === 2) {
      return "one of ".concat(thing, " ").concat(expected[0], " or ").concat(expected[1]);
    } else {
      return "of ".concat(thing, " ").concat(expected[0]);
    }
  } else {
    return "of ".concat(thing, " ").concat(String(expected));
  }
} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith


function startsWith(str, search, pos) {
  return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;
} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith


function endsWith(str, search, this_len) {
  if (this_len === undefined || this_len > str.length) {
    this_len = str.length;
  }

  return str.substring(this_len - search.length, this_len) === search;
} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes


function includes(str, search, start) {
  if (typeof start !== 'number') {
    start = 0;
  }

  if (start + search.length > str.length) {
    return false;
  } else {
    return str.indexOf(search, start) !== -1;
  }
}

createErrorType('ERR_INVALID_OPT_VALUE', function (name, value) {
  return 'The value "' + value + '" is invalid for option "' + name + '"';
}, TypeError);
createErrorType('ERR_INVALID_ARG_TYPE', function (name, expected, actual) {
  // determiner: 'must be' or 'must not be'
  var determiner;

  if (typeof expected === 'string' && startsWith(expected, 'not ')) {
    determiner = 'must not be';
    expected = expected.replace(/^not /, '');
  } else {
    determiner = 'must be';
  }

  var msg;

  if (endsWith(name, ' argument')) {
    // For cases like 'first argument'
    msg = "The ".concat(name, " ").concat(determiner, " ").concat(oneOf(expected, 'type'));
  } else {
    var type = includes(name, '.') ? 'property' : 'argument';
    msg = "The \"".concat(name, "\" ").concat(type, " ").concat(determiner, " ").concat(oneOf(expected, 'type'));
  }

  msg += ". Received type ".concat(typeof actual);
  return msg;
}, TypeError);
createErrorType('ERR_STREAM_PUSH_AFTER_EOF', 'stream.push() after EOF');
createErrorType('ERR_METHOD_NOT_IMPLEMENTED', function (name) {
  return 'The ' + name + ' method is not implemented';
});
createErrorType('ERR_STREAM_PREMATURE_CLOSE', 'Premature close');
createErrorType('ERR_STREAM_DESTROYED', function (name) {
  return 'Cannot call ' + name + ' after a stream was destroyed';
});
createErrorType('ERR_MULTIPLE_CALLBACK', 'Callback called multiple times');
createErrorType('ERR_STREAM_CANNOT_PIPE', 'Cannot pipe, not readable');
createErrorType('ERR_STREAM_WRITE_AFTER_END', 'write after end');
createErrorType('ERR_STREAM_NULL_VALUES', 'May not write null values to stream', TypeError);
createErrorType('ERR_UNKNOWN_ENCODING', function (arg) {
  return 'Unknown encoding: ' + arg;
}, TypeError);
createErrorType('ERR_STREAM_UNSHIFT_AFTER_END_EVENT', 'stream.unshift() after end event');
module.exports.codes = codes;

},{}],117:[function(require,module,exports){
(function (process){(function (){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
// a duplex stream is just a stream that is both readable and writable.
// Since JS doesn't have multiple prototypal inheritance, this class
// prototypally inherits from Readable, and then parasitically from
// Writable.
'use strict';
/*<replacement>*/

var objectKeys = Object.keys || function (obj) {
  var keys = [];

  for (var key in obj) {
    keys.push(key);
  }

  return keys;
};
/*</replacement>*/


module.exports = Duplex;

var Readable = require('./_stream_readable');

var Writable = require('./_stream_writable');

require('inherits')(Duplex, Readable);

{
  // Allow the keys array to be GC'ed.
  var keys = objectKeys(Writable.prototype);

  for (var v = 0; v < keys.length; v++) {
    var method = keys[v];
    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];
  }
}

function Duplex(options) {
  if (!(this instanceof Duplex)) return new Duplex(options);
  Readable.call(this, options);
  Writable.call(this, options);
  this.allowHalfOpen = true;

  if (options) {
    if (options.readable === false) this.readable = false;
    if (options.writable === false) this.writable = false;

    if (options.allowHalfOpen === false) {
      this.allowHalfOpen = false;
      this.once('end', onend);
    }
  }
}

Object.defineProperty(Duplex.prototype, 'writableHighWaterMark', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._writableState.highWaterMark;
  }
});
Object.defineProperty(Duplex.prototype, 'writableBuffer', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._writableState && this._writableState.getBuffer();
  }
});
Object.defineProperty(Duplex.prototype, 'writableLength', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._writableState.length;
  }
}); // the no-half-open enforcer

function onend() {
  // If the writable side ended, then we're ok.
  if (this._writableState.ended) return; // no more data can be written.
  // But allow more writes to happen in this tick.

  process.nextTick(onEndNT, this);
}

function onEndNT(self) {
  self.end();
}

Object.defineProperty(Duplex.prototype, 'destroyed', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    if (this._readableState === undefined || this._writableState === undefined) {
      return false;
    }

    return this._readableState.destroyed && this._writableState.destroyed;
  },
  set: function set(value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (this._readableState === undefined || this._writableState === undefined) {
      return;
    } // backward compatibility, the user is explicitly
    // managing destroyed


    this._readableState.destroyed = value;
    this._writableState.destroyed = value;
  }
});
}).call(this)}).call(this,require('_process'))
},{"./_stream_readable":119,"./_stream_writable":121,"_process":222,"inherits":216}],118:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
// a passthrough stream.
// basically just the most minimal sort of Transform stream.
// Every written chunk gets output as-is.
'use strict';

module.exports = PassThrough;

var Transform = require('./_stream_transform');

require('inherits')(PassThrough, Transform);

function PassThrough(options) {
  if (!(this instanceof PassThrough)) return new PassThrough(options);
  Transform.call(this, options);
}

PassThrough.prototype._transform = function (chunk, encoding, cb) {
  cb(null, chunk);
};
},{"./_stream_transform":120,"inherits":216}],119:[function(require,module,exports){
(function (process,global){(function (){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
'use strict';

module.exports = Readable;
/*<replacement>*/

var Duplex;
/*</replacement>*/

Readable.ReadableState = ReadableState;
/*<replacement>*/

var EE = require('events').EventEmitter;

var EElistenerCount = function EElistenerCount(emitter, type) {
  return emitter.listeners(type).length;
};
/*</replacement>*/

/*<replacement>*/


var Stream = require('./internal/streams/stream');
/*</replacement>*/


var Buffer = require('buffer').Buffer;

var OurUint8Array = global.Uint8Array || function () {};

function _uint8ArrayToBuffer(chunk) {
  return Buffer.from(chunk);
}

function _isUint8Array(obj) {
  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;
}
/*<replacement>*/


var debugUtil = require('util');

var debug;

if (debugUtil && debugUtil.debuglog) {
  debug = debugUtil.debuglog('stream');
} else {
  debug = function debug() {};
}
/*</replacement>*/


var BufferList = require('./internal/streams/buffer_list');

var destroyImpl = require('./internal/streams/destroy');

var _require = require('./internal/streams/state'),
    getHighWaterMark = _require.getHighWaterMark;

var _require$codes = require('../errors').codes,
    ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,
    ERR_STREAM_PUSH_AFTER_EOF = _require$codes.ERR_STREAM_PUSH_AFTER_EOF,
    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,
    ERR_STREAM_UNSHIFT_AFTER_END_EVENT = _require$codes.ERR_STREAM_UNSHIFT_AFTER_END_EVENT; // Lazy loaded to improve the startup performance.


var StringDecoder;
var createReadableStreamAsyncIterator;
var from;

require('inherits')(Readable, Stream);

var errorOrDestroy = destroyImpl.errorOrDestroy;
var kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];

function prependListener(emitter, event, fn) {
  // Sadly this is not cacheable as some libraries bundle their own
  // event emitter implementation with them.
  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn); // This is a hack to make sure that our error handler is attached before any
  // userland ones.  NEVER DO THIS. This is here only because this code needs
  // to continue to work with older versions of Node.js that do not include
  // the prependListener() method. The goal is to eventually remove this hack.

  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (Array.isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];
}

function ReadableState(options, stream, isDuplex) {
  Duplex = Duplex || require('./_stream_duplex');
  options = options || {}; // Duplex streams are both readable and writable, but share
  // the same options object.
  // However, some cases require setting options to different
  // values for the readable and the writable sides of the duplex stream.
  // These options can be provided separately as readableXXX and writableXXX.

  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex; // object stream flag. Used to make read(n) ignore n and to
  // make all the buffer merging and length checks go away

  this.objectMode = !!options.objectMode;
  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode; // the point at which it stops calling _read() to fill the buffer
  // Note: 0 is a valid value, means "don't call _read preemptively ever"

  this.highWaterMark = getHighWaterMark(this, options, 'readableHighWaterMark', isDuplex); // A linked list is used to store data chunks instead of an array because the
  // linked list can remove elements from the beginning faster than
  // array.shift()

  this.buffer = new BufferList();
  this.length = 0;
  this.pipes = null;
  this.pipesCount = 0;
  this.flowing = null;
  this.ended = false;
  this.endEmitted = false;
  this.reading = false; // a flag to be able to tell if the event 'readable'/'data' is emitted
  // immediately, or on a later tick.  We set this to true at first, because
  // any actions that shouldn't happen until "later" should generally also
  // not happen before the first read call.

  this.sync = true; // whenever we return null, then we set a flag to say
  // that we're awaiting a 'readable' event emission.

  this.needReadable = false;
  this.emittedReadable = false;
  this.readableListening = false;
  this.resumeScheduled = false;
  this.paused = true; // Should close be emitted on destroy. Defaults to true.

  this.emitClose = options.emitClose !== false; // Should .destroy() be called after 'end' (and potentially 'finish')

  this.autoDestroy = !!options.autoDestroy; // has it been destroyed

  this.destroyed = false; // Crypto is kind of old and crusty.  Historically, its default string
  // encoding is 'binary' so we have to make this configurable.
  // Everything else in the universe uses 'utf8', though.

  this.defaultEncoding = options.defaultEncoding || 'utf8'; // the number of writers that are awaiting a drain event in .pipe()s

  this.awaitDrain = 0; // if true, a maybeReadMore has been scheduled

  this.readingMore = false;
  this.decoder = null;
  this.encoding = null;

  if (options.encoding) {
    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;
    this.decoder = new StringDecoder(options.encoding);
    this.encoding = options.encoding;
  }
}

function Readable(options) {
  Duplex = Duplex || require('./_stream_duplex');
  if (!(this instanceof Readable)) return new Readable(options); // Checking for a Stream.Duplex instance is faster here instead of inside
  // the ReadableState constructor, at least with V8 6.5

  var isDuplex = this instanceof Duplex;
  this._readableState = new ReadableState(options, this, isDuplex); // legacy

  this.readable = true;

  if (options) {
    if (typeof options.read === 'function') this._read = options.read;
    if (typeof options.destroy === 'function') this._destroy = options.destroy;
  }

  Stream.call(this);
}

Object.defineProperty(Readable.prototype, 'destroyed', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    if (this._readableState === undefined) {
      return false;
    }

    return this._readableState.destroyed;
  },
  set: function set(value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (!this._readableState) {
      return;
    } // backward compatibility, the user is explicitly
    // managing destroyed


    this._readableState.destroyed = value;
  }
});
Readable.prototype.destroy = destroyImpl.destroy;
Readable.prototype._undestroy = destroyImpl.undestroy;

Readable.prototype._destroy = function (err, cb) {
  cb(err);
}; // Manually shove something into the read() buffer.
// This returns true if the highWaterMark has not been hit yet,
// similar to how Writable.write() returns true if you should
// write() some more.


Readable.prototype.push = function (chunk, encoding) {
  var state = this._readableState;
  var skipChunkCheck;

  if (!state.objectMode) {
    if (typeof chunk === 'string') {
      encoding = encoding || state.defaultEncoding;

      if (encoding !== state.encoding) {
        chunk = Buffer.from(chunk, encoding);
        encoding = '';
      }

      skipChunkCheck = true;
    }
  } else {
    skipChunkCheck = true;
  }

  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);
}; // Unshift should *always* be something directly out of read()


Readable.prototype.unshift = function (chunk) {
  return readableAddChunk(this, chunk, null, true, false);
};

function readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {
  debug('readableAddChunk', chunk);
  var state = stream._readableState;

  if (chunk === null) {
    state.reading = false;
    onEofChunk(stream, state);
  } else {
    var er;
    if (!skipChunkCheck) er = chunkInvalid(state, chunk);

    if (er) {
      errorOrDestroy(stream, er);
    } else if (state.objectMode || chunk && chunk.length > 0) {
      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {
        chunk = _uint8ArrayToBuffer(chunk);
      }

      if (addToFront) {
        if (state.endEmitted) errorOrDestroy(stream, new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());else addChunk(stream, state, chunk, true);
      } else if (state.ended) {
        errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF());
      } else if (state.destroyed) {
        return false;
      } else {
        state.reading = false;

        if (state.decoder && !encoding) {
          chunk = state.decoder.write(chunk);
          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);
        } else {
          addChunk(stream, state, chunk, false);
        }
      }
    } else if (!addToFront) {
      state.reading = false;
      maybeReadMore(stream, state);
    }
  } // We can push more data if we are below the highWaterMark.
  // Also, if we have no data yet, we can stand some more bytes.
  // This is to work around cases where hwm=0, such as the repl.


  return !state.ended && (state.length < state.highWaterMark || state.length === 0);
}

function addChunk(stream, state, chunk, addToFront) {
  if (state.flowing && state.length === 0 && !state.sync) {
    state.awaitDrain = 0;
    stream.emit('data', chunk);
  } else {
    // update the buffer info.
    state.length += state.objectMode ? 1 : chunk.length;
    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);
    if (state.needReadable) emitReadable(stream);
  }

  maybeReadMore(stream, state);
}

function chunkInvalid(state, chunk) {
  var er;

  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {
    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer', 'Uint8Array'], chunk);
  }

  return er;
}

Readable.prototype.isPaused = function () {
  return this._readableState.flowing === false;
}; // backwards compatibility.


Readable.prototype.setEncoding = function (enc) {
  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;
  var decoder = new StringDecoder(enc);
  this._readableState.decoder = decoder; // If setEncoding(null), decoder.encoding equals utf8

  this._readableState.encoding = this._readableState.decoder.encoding; // Iterate over current buffer to convert already stored Buffers:

  var p = this._readableState.buffer.head;
  var content = '';

  while (p !== null) {
    content += decoder.write(p.data);
    p = p.next;
  }

  this._readableState.buffer.clear();

  if (content !== '') this._readableState.buffer.push(content);
  this._readableState.length = content.length;
  return this;
}; // Don't raise the hwm > 1GB


var MAX_HWM = 0x40000000;

function computeNewHighWaterMark(n) {
  if (n >= MAX_HWM) {
    // TODO(ronag): Throw ERR_VALUE_OUT_OF_RANGE.
    n = MAX_HWM;
  } else {
    // Get the next highest power of 2 to prevent increasing hwm excessively in
    // tiny amounts
    n--;
    n |= n >>> 1;
    n |= n >>> 2;
    n |= n >>> 4;
    n |= n >>> 8;
    n |= n >>> 16;
    n++;
  }

  return n;
} // This function is designed to be inlinable, so please take care when making
// changes to the function body.


function howMuchToRead(n, state) {
  if (n <= 0 || state.length === 0 && state.ended) return 0;
  if (state.objectMode) return 1;

  if (n !== n) {
    // Only flow one buffer at a time
    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;
  } // If we're asking for more than the current hwm, then raise the hwm.


  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);
  if (n <= state.length) return n; // Don't have enough

  if (!state.ended) {
    state.needReadable = true;
    return 0;
  }

  return state.length;
} // you can override either this method, or the async _read(n) below.


Readable.prototype.read = function (n) {
  debug('read', n);
  n = parseInt(n, 10);
  var state = this._readableState;
  var nOrig = n;
  if (n !== 0) state.emittedReadable = false; // if we're doing read(0) to trigger a readable event, but we
  // already have a bunch of data in the buffer, then just trigger
  // the 'readable' event and move on.

  if (n === 0 && state.needReadable && ((state.highWaterMark !== 0 ? state.length >= state.highWaterMark : state.length > 0) || state.ended)) {
    debug('read: emitReadable', state.length, state.ended);
    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);
    return null;
  }

  n = howMuchToRead(n, state); // if we've ended, and we're now clear, then finish it up.

  if (n === 0 && state.ended) {
    if (state.length === 0) endReadable(this);
    return null;
  } // All the actual chunk generation logic needs to be
  // *below* the call to _read.  The reason is that in certain
  // synthetic stream cases, such as passthrough streams, _read
  // may be a completely synchronous operation which may change
  // the state of the read buffer, providing enough data when
  // before there was *not* enough.
  //
  // So, the steps are:
  // 1. Figure out what the state of things will be after we do
  // a read from the buffer.
  //
  // 2. If that resulting state will trigger a _read, then call _read.
  // Note that this may be asynchronous, or synchronous.  Yes, it is
  // deeply ugly to write APIs this way, but that still doesn't mean
  // that the Readable class should behave improperly, as streams are
  // designed to be sync/async agnostic.
  // Take note if the _read call is sync or async (ie, if the read call
  // has returned yet), so that we know whether or not it's safe to emit
  // 'readable' etc.
  //
  // 3. Actually pull the requested chunks out of the buffer and return.
  // if we need a readable event, then we need to do some reading.


  var doRead = state.needReadable;
  debug('need readable', doRead); // if we currently have less than the highWaterMark, then also read some

  if (state.length === 0 || state.length - n < state.highWaterMark) {
    doRead = true;
    debug('length less than watermark', doRead);
  } // however, if we've ended, then there's no point, and if we're already
  // reading, then it's unnecessary.


  if (state.ended || state.reading) {
    doRead = false;
    debug('reading or ended', doRead);
  } else if (doRead) {
    debug('do read');
    state.reading = true;
    state.sync = true; // if the length is currently zero, then we *need* a readable event.

    if (state.length === 0) state.needReadable = true; // call internal read method

    this._read(state.highWaterMark);

    state.sync = false; // If _read pushed data synchronously, then `reading` will be false,
    // and we need to re-evaluate how much data we can return to the user.

    if (!state.reading) n = howMuchToRead(nOrig, state);
  }

  var ret;
  if (n > 0) ret = fromList(n, state);else ret = null;

  if (ret === null) {
    state.needReadable = state.length <= state.highWaterMark;
    n = 0;
  } else {
    state.length -= n;
    state.awaitDrain = 0;
  }

  if (state.length === 0) {
    // If we have nothing in the buffer, then we want to know
    // as soon as we *do* get something into the buffer.
    if (!state.ended) state.needReadable = true; // If we tried to read() past the EOF, then emit end on the next tick.

    if (nOrig !== n && state.ended) endReadable(this);
  }

  if (ret !== null) this.emit('data', ret);
  return ret;
};

function onEofChunk(stream, state) {
  debug('onEofChunk');
  if (state.ended) return;

  if (state.decoder) {
    var chunk = state.decoder.end();

    if (chunk && chunk.length) {
      state.buffer.push(chunk);
      state.length += state.objectMode ? 1 : chunk.length;
    }
  }

  state.ended = true;

  if (state.sync) {
    // if we are sync, wait until next tick to emit the data.
    // Otherwise we risk emitting data in the flow()
    // the readable code triggers during a read() call
    emitReadable(stream);
  } else {
    // emit 'readable' now to make sure it gets picked up.
    state.needReadable = false;

    if (!state.emittedReadable) {
      state.emittedReadable = true;
      emitReadable_(stream);
    }
  }
} // Don't emit readable right away in sync mode, because this can trigger
// another read() call => stack overflow.  This way, it might trigger
// a nextTick recursion warning, but that's not so bad.


function emitReadable(stream) {
  var state = stream._readableState;
  debug('emitReadable', state.needReadable, state.emittedReadable);
  state.needReadable = false;

  if (!state.emittedReadable) {
    debug('emitReadable', state.flowing);
    state.emittedReadable = true;
    process.nextTick(emitReadable_, stream);
  }
}

function emitReadable_(stream) {
  var state = stream._readableState;
  debug('emitReadable_', state.destroyed, state.length, state.ended);

  if (!state.destroyed && (state.length || state.ended)) {
    stream.emit('readable');
    state.emittedReadable = false;
  } // The stream needs another readable event if
  // 1. It is not flowing, as the flow mechanism will take
  //    care of it.
  // 2. It is not ended.
  // 3. It is below the highWaterMark, so we can schedule
  //    another readable later.


  state.needReadable = !state.flowing && !state.ended && state.length <= state.highWaterMark;
  flow(stream);
} // at this point, the user has presumably seen the 'readable' event,
// and called read() to consume some data.  that may have triggered
// in turn another _read(n) call, in which case reading = true if
// it's in progress.
// However, if we're not ended, or reading, and the length < hwm,
// then go ahead and try to read some more preemptively.


function maybeReadMore(stream, state) {
  if (!state.readingMore) {
    state.readingMore = true;
    process.nextTick(maybeReadMore_, stream, state);
  }
}

function maybeReadMore_(stream, state) {
  // Attempt to read more data if we should.
  //
  // The conditions for reading more data are (one of):
  // - Not enough data buffered (state.length < state.highWaterMark). The loop
  //   is responsible for filling the buffer with enough data if such data
  //   is available. If highWaterMark is 0 and we are not in the flowing mode
  //   we should _not_ attempt to buffer any extra data. We'll get more data
  //   when the stream consumer calls read() instead.
  // - No data in the buffer, and the stream is in flowing mode. In this mode
  //   the loop below is responsible for ensuring read() is called. Failing to
  //   call read here would abort the flow and there's no other mechanism for
  //   continuing the flow if the stream consumer has just subscribed to the
  //   'data' event.
  //
  // In addition to the above conditions to keep reading data, the following
  // conditions prevent the data from being read:
  // - The stream has ended (state.ended).
  // - There is already a pending 'read' operation (state.reading). This is a
  //   case where the the stream has called the implementation defined _read()
  //   method, but they are processing the call asynchronously and have _not_
  //   called push() with new data. In this case we skip performing more
  //   read()s. The execution ends in this method again after the _read() ends
  //   up calling push() with more data.
  while (!state.reading && !state.ended && (state.length < state.highWaterMark || state.flowing && state.length === 0)) {
    var len = state.length;
    debug('maybeReadMore read 0');
    stream.read(0);
    if (len === state.length) // didn't get any data, stop spinning.
      break;
  }

  state.readingMore = false;
} // abstract method.  to be overridden in specific implementation classes.
// call cb(er, data) where data is <= n in length.
// for virtual (non-string, non-buffer) streams, "length" is somewhat
// arbitrary, and perhaps not very meaningful.


Readable.prototype._read = function (n) {
  errorOrDestroy(this, new ERR_METHOD_NOT_IMPLEMENTED('_read()'));
};

Readable.prototype.pipe = function (dest, pipeOpts) {
  var src = this;
  var state = this._readableState;

  switch (state.pipesCount) {
    case 0:
      state.pipes = dest;
      break;

    case 1:
      state.pipes = [state.pipes, dest];
      break;

    default:
      state.pipes.push(dest);
      break;
  }

  state.pipesCount += 1;
  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);
  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;
  var endFn = doEnd ? onend : unpipe;
  if (state.endEmitted) process.nextTick(endFn);else src.once('end', endFn);
  dest.on('unpipe', onunpipe);

  function onunpipe(readable, unpipeInfo) {
    debug('onunpipe');

    if (readable === src) {
      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {
        unpipeInfo.hasUnpiped = true;
        cleanup();
      }
    }
  }

  function onend() {
    debug('onend');
    dest.end();
  } // when the dest drains, it reduces the awaitDrain counter
  // on the source.  This would be more elegant with a .once()
  // handler in flow(), but adding and removing repeatedly is
  // too slow.


  var ondrain = pipeOnDrain(src);
  dest.on('drain', ondrain);
  var cleanedUp = false;

  function cleanup() {
    debug('cleanup'); // cleanup event handlers once the pipe is broken

    dest.removeListener('close', onclose);
    dest.removeListener('finish', onfinish);
    dest.removeListener('drain', ondrain);
    dest.removeListener('error', onerror);
    dest.removeListener('unpipe', onunpipe);
    src.removeListener('end', onend);
    src.removeListener('end', unpipe);
    src.removeListener('data', ondata);
    cleanedUp = true; // if the reader is waiting for a drain event from this
    // specific writer, then it would cause it to never start
    // flowing again.
    // So, if this is awaiting a drain, then we just call it now.
    // If we don't know, then assume that we are waiting for one.

    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();
  }

  src.on('data', ondata);

  function ondata(chunk) {
    debug('ondata');
    var ret = dest.write(chunk);
    debug('dest.write', ret);

    if (ret === false) {
      // If the user unpiped during `dest.write()`, it is possible
      // to get stuck in a permanently paused state if that write
      // also returned false.
      // => Check whether `dest` is still a piping destination.
      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {
        debug('false write response, pause', state.awaitDrain);
        state.awaitDrain++;
      }

      src.pause();
    }
  } // if the dest has an error, then stop piping into it.
  // however, don't suppress the throwing behavior for this.


  function onerror(er) {
    debug('onerror', er);
    unpipe();
    dest.removeListener('error', onerror);
    if (EElistenerCount(dest, 'error') === 0) errorOrDestroy(dest, er);
  } // Make sure our error handler is attached before userland ones.


  prependListener(dest, 'error', onerror); // Both close and finish should trigger unpipe, but only once.

  function onclose() {
    dest.removeListener('finish', onfinish);
    unpipe();
  }

  dest.once('close', onclose);

  function onfinish() {
    debug('onfinish');
    dest.removeListener('close', onclose);
    unpipe();
  }

  dest.once('finish', onfinish);

  function unpipe() {
    debug('unpipe');
    src.unpipe(dest);
  } // tell the dest that it's being piped to


  dest.emit('pipe', src); // start the flow if it hasn't been started already.

  if (!state.flowing) {
    debug('pipe resume');
    src.resume();
  }

  return dest;
};

function pipeOnDrain(src) {
  return function pipeOnDrainFunctionResult() {
    var state = src._readableState;
    debug('pipeOnDrain', state.awaitDrain);
    if (state.awaitDrain) state.awaitDrain--;

    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {
      state.flowing = true;
      flow(src);
    }
  };
}

Readable.prototype.unpipe = function (dest) {
  var state = this._readableState;
  var unpipeInfo = {
    hasUnpiped: false
  }; // if we're not piping anywhere, then do nothing.

  if (state.pipesCount === 0) return this; // just one destination.  most common case.

  if (state.pipesCount === 1) {
    // passed in one, but it's not the right one.
    if (dest && dest !== state.pipes) return this;
    if (!dest) dest = state.pipes; // got a match.

    state.pipes = null;
    state.pipesCount = 0;
    state.flowing = false;
    if (dest) dest.emit('unpipe', this, unpipeInfo);
    return this;
  } // slow case. multiple pipe destinations.


  if (!dest) {
    // remove all.
    var dests = state.pipes;
    var len = state.pipesCount;
    state.pipes = null;
    state.pipesCount = 0;
    state.flowing = false;

    for (var i = 0; i < len; i++) {
      dests[i].emit('unpipe', this, {
        hasUnpiped: false
      });
    }

    return this;
  } // try to find the right one.


  var index = indexOf(state.pipes, dest);
  if (index === -1) return this;
  state.pipes.splice(index, 1);
  state.pipesCount -= 1;
  if (state.pipesCount === 1) state.pipes = state.pipes[0];
  dest.emit('unpipe', this, unpipeInfo);
  return this;
}; // set up data events if they are asked for
// Ensure readable listeners eventually get something


Readable.prototype.on = function (ev, fn) {
  var res = Stream.prototype.on.call(this, ev, fn);
  var state = this._readableState;

  if (ev === 'data') {
    // update readableListening so that resume() may be a no-op
    // a few lines down. This is needed to support once('readable').
    state.readableListening = this.listenerCount('readable') > 0; // Try start flowing on next tick if stream isn't explicitly paused

    if (state.flowing !== false) this.resume();
  } else if (ev === 'readable') {
    if (!state.endEmitted && !state.readableListening) {
      state.readableListening = state.needReadable = true;
      state.flowing = false;
      state.emittedReadable = false;
      debug('on readable', state.length, state.reading);

      if (state.length) {
        emitReadable(this);
      } else if (!state.reading) {
        process.nextTick(nReadingNextTick, this);
      }
    }
  }

  return res;
};

Readable.prototype.addListener = Readable.prototype.on;

Readable.prototype.removeListener = function (ev, fn) {
  var res = Stream.prototype.removeListener.call(this, ev, fn);

  if (ev === 'readable') {
    // We need to check if there is someone still listening to
    // readable and reset the state. However this needs to happen
    // after readable has been emitted but before I/O (nextTick) to
    // support once('readable', fn) cycles. This means that calling
    // resume within the same tick will have no
    // effect.
    process.nextTick(updateReadableListening, this);
  }

  return res;
};

Readable.prototype.removeAllListeners = function (ev) {
  var res = Stream.prototype.removeAllListeners.apply(this, arguments);

  if (ev === 'readable' || ev === undefined) {
    // We need to check if there is someone still listening to
    // readable and reset the state. However this needs to happen
    // after readable has been emitted but before I/O (nextTick) to
    // support once('readable', fn) cycles. This means that calling
    // resume within the same tick will have no
    // effect.
    process.nextTick(updateReadableListening, this);
  }

  return res;
};

function updateReadableListening(self) {
  var state = self._readableState;
  state.readableListening = self.listenerCount('readable') > 0;

  if (state.resumeScheduled && !state.paused) {
    // flowing needs to be set to true now, otherwise
    // the upcoming resume will not flow.
    state.flowing = true; // crude way to check if we should resume
  } else if (self.listenerCount('data') > 0) {
    self.resume();
  }
}

function nReadingNextTick(self) {
  debug('readable nexttick read 0');
  self.read(0);
} // pause() and resume() are remnants of the legacy readable stream API
// If the user uses them, then switch into old mode.


Readable.prototype.resume = function () {
  var state = this._readableState;

  if (!state.flowing) {
    debug('resume'); // we flow only if there is no one listening
    // for readable, but we still have to call
    // resume()

    state.flowing = !state.readableListening;
    resume(this, state);
  }

  state.paused = false;
  return this;
};

function resume(stream, state) {
  if (!state.resumeScheduled) {
    state.resumeScheduled = true;
    process.nextTick(resume_, stream, state);
  }
}

function resume_(stream, state) {
  debug('resume', state.reading);

  if (!state.reading) {
    stream.read(0);
  }

  state.resumeScheduled = false;
  stream.emit('resume');
  flow(stream);
  if (state.flowing && !state.reading) stream.read(0);
}

Readable.prototype.pause = function () {
  debug('call pause flowing=%j', this._readableState.flowing);

  if (this._readableState.flowing !== false) {
    debug('pause');
    this._readableState.flowing = false;
    this.emit('pause');
  }

  this._readableState.paused = true;
  return this;
};

function flow(stream) {
  var state = stream._readableState;
  debug('flow', state.flowing);

  while (state.flowing && stream.read() !== null) {
    ;
  }
} // wrap an old-style stream as the async data source.
// This is *not* part of the readable stream interface.
// It is an ugly unfortunate mess of history.


Readable.prototype.wrap = function (stream) {
  var _this = this;

  var state = this._readableState;
  var paused = false;
  stream.on('end', function () {
    debug('wrapped end');

    if (state.decoder && !state.ended) {
      var chunk = state.decoder.end();
      if (chunk && chunk.length) _this.push(chunk);
    }

    _this.push(null);
  });
  stream.on('data', function (chunk) {
    debug('wrapped data');
    if (state.decoder) chunk = state.decoder.write(chunk); // don't skip over falsy values in objectMode

    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;

    var ret = _this.push(chunk);

    if (!ret) {
      paused = true;
      stream.pause();
    }
  }); // proxy all the other methods.
  // important when wrapping filters and duplexes.

  for (var i in stream) {
    if (this[i] === undefined && typeof stream[i] === 'function') {
      this[i] = function methodWrap(method) {
        return function methodWrapReturnFunction() {
          return stream[method].apply(stream, arguments);
        };
      }(i);
    }
  } // proxy certain important events.


  for (var n = 0; n < kProxyEvents.length; n++) {
    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));
  } // when we try to consume some more bytes, simply unpause the
  // underlying stream.


  this._read = function (n) {
    debug('wrapped _read', n);

    if (paused) {
      paused = false;
      stream.resume();
    }
  };

  return this;
};

if (typeof Symbol === 'function') {
  Readable.prototype[Symbol.asyncIterator] = function () {
    if (createReadableStreamAsyncIterator === undefined) {
      createReadableStreamAsyncIterator = require('./internal/streams/async_iterator');
    }

    return createReadableStreamAsyncIterator(this);
  };
}

Object.defineProperty(Readable.prototype, 'readableHighWaterMark', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._readableState.highWaterMark;
  }
});
Object.defineProperty(Readable.prototype, 'readableBuffer', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._readableState && this._readableState.buffer;
  }
});
Object.defineProperty(Readable.prototype, 'readableFlowing', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._readableState.flowing;
  },
  set: function set(state) {
    if (this._readableState) {
      this._readableState.flowing = state;
    }
  }
}); // exposed for testing purposes only.

Readable._fromList = fromList;
Object.defineProperty(Readable.prototype, 'readableLength', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._readableState.length;
  }
}); // Pluck off n bytes from an array of buffers.
// Length is the combined lengths of all the buffers in the list.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.

function fromList(n, state) {
  // nothing buffered
  if (state.length === 0) return null;
  var ret;
  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {
    // read it all, truncate the list
    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.first();else ret = state.buffer.concat(state.length);
    state.buffer.clear();
  } else {
    // read part of list
    ret = state.buffer.consume(n, state.decoder);
  }
  return ret;
}

function endReadable(stream) {
  var state = stream._readableState;
  debug('endReadable', state.endEmitted);

  if (!state.endEmitted) {
    state.ended = true;
    process.nextTick(endReadableNT, state, stream);
  }
}

function endReadableNT(state, stream) {
  debug('endReadableNT', state.endEmitted, state.length); // Check that we didn't get one last unshift.

  if (!state.endEmitted && state.length === 0) {
    state.endEmitted = true;
    stream.readable = false;
    stream.emit('end');

    if (state.autoDestroy) {
      // In case of duplex streams we need a way to detect
      // if the writable side is ready for autoDestroy as well
      var wState = stream._writableState;

      if (!wState || wState.autoDestroy && wState.finished) {
        stream.destroy();
      }
    }
  }
}

if (typeof Symbol === 'function') {
  Readable.from = function (iterable, opts) {
    if (from === undefined) {
      from = require('./internal/streams/from');
    }

    return from(Readable, iterable, opts);
  };
}

function indexOf(xs, x) {
  for (var i = 0, l = xs.length; i < l; i++) {
    if (xs[i] === x) return i;
  }

  return -1;
}
}).call(this)}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"../errors":116,"./_stream_duplex":117,"./internal/streams/async_iterator":122,"./internal/streams/buffer_list":123,"./internal/streams/destroy":124,"./internal/streams/from":126,"./internal/streams/state":128,"./internal/streams/stream":129,"_process":222,"buffer":112,"events":113,"inherits":216,"string_decoder/":231,"util":110}],120:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
// a transform stream is a readable/writable stream where you do
// something with the data.  Sometimes it's called a "filter",
// but that's not a great name for it, since that implies a thing where
// some bits pass through, and others are simply ignored.  (That would
// be a valid example of a transform, of course.)
//
// While the output is causally related to the input, it's not a
// necessarily symmetric or synchronous transformation.  For example,
// a zlib stream might take multiple plain-text writes(), and then
// emit a single compressed chunk some time in the future.
//
// Here's how this works:
//
// The Transform stream has all the aspects of the readable and writable
// stream classes.  When you write(chunk), that calls _write(chunk,cb)
// internally, and returns false if there's a lot of pending writes
// buffered up.  When you call read(), that calls _read(n) until
// there's enough pending readable data buffered up.
//
// In a transform stream, the written data is placed in a buffer.  When
// _read(n) is called, it transforms the queued up data, calling the
// buffered _write cb's as it consumes chunks.  If consuming a single
// written chunk would result in multiple output chunks, then the first
// outputted bit calls the readcb, and subsequent chunks just go into
// the read buffer, and will cause it to emit 'readable' if necessary.
//
// This way, back-pressure is actually determined by the reading side,
// since _read has to be called to start processing a new chunk.  However,
// a pathological inflate type of transform can cause excessive buffering
// here.  For example, imagine a stream where every byte of input is
// interpreted as an integer from 0-255, and then results in that many
// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in
// 1kb of data being output.  In this case, you could write a very small
// amount of input, and end up with a very large amount of output.  In
// such a pathological inflating mechanism, there'd be no way to tell
// the system to stop doing the transform.  A single 4MB write could
// cause the system to run out of memory.
//
// However, even in such a pathological case, only a single written chunk
// would be consumed, and then the rest would wait (un-transformed) until
// the results of the previous transformed chunk were consumed.
'use strict';

module.exports = Transform;

var _require$codes = require('../errors').codes,
    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,
    ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,
    ERR_TRANSFORM_ALREADY_TRANSFORMING = _require$codes.ERR_TRANSFORM_ALREADY_TRANSFORMING,
    ERR_TRANSFORM_WITH_LENGTH_0 = _require$codes.ERR_TRANSFORM_WITH_LENGTH_0;

var Duplex = require('./_stream_duplex');

require('inherits')(Transform, Duplex);

function afterTransform(er, data) {
  var ts = this._transformState;
  ts.transforming = false;
  var cb = ts.writecb;

  if (cb === null) {
    return this.emit('error', new ERR_MULTIPLE_CALLBACK());
  }

  ts.writechunk = null;
  ts.writecb = null;
  if (data != null) // single equals check for both `null` and `undefined`
    this.push(data);
  cb(er);
  var rs = this._readableState;
  rs.reading = false;

  if (rs.needReadable || rs.length < rs.highWaterMark) {
    this._read(rs.highWaterMark);
  }
}

function Transform(options) {
  if (!(this instanceof Transform)) return new Transform(options);
  Duplex.call(this, options);
  this._transformState = {
    afterTransform: afterTransform.bind(this),
    needTransform: false,
    transforming: false,
    writecb: null,
    writechunk: null,
    writeencoding: null
  }; // start out asking for a readable event once data is transformed.

  this._readableState.needReadable = true; // we have implemented the _read method, and done the other things
  // that Readable wants before the first _read call, so unset the
  // sync guard flag.

  this._readableState.sync = false;

  if (options) {
    if (typeof options.transform === 'function') this._transform = options.transform;
    if (typeof options.flush === 'function') this._flush = options.flush;
  } // When the writable side finishes, then flush out anything remaining.


  this.on('prefinish', prefinish);
}

function prefinish() {
  var _this = this;

  if (typeof this._flush === 'function' && !this._readableState.destroyed) {
    this._flush(function (er, data) {
      done(_this, er, data);
    });
  } else {
    done(this, null, null);
  }
}

Transform.prototype.push = function (chunk, encoding) {
  this._transformState.needTransform = false;
  return Duplex.prototype.push.call(this, chunk, encoding);
}; // This is the part where you do stuff!
// override this function in implementation classes.
// 'chunk' is an input chunk.
//
// Call `push(newChunk)` to pass along transformed output
// to the readable side.  You may call 'push' zero or more times.
//
// Call `cb(err)` when you are done with this chunk.  If you pass
// an error, then that'll put the hurt on the whole operation.  If you
// never call cb(), then you'll never get another chunk.


Transform.prototype._transform = function (chunk, encoding, cb) {
  cb(new ERR_METHOD_NOT_IMPLEMENTED('_transform()'));
};

Transform.prototype._write = function (chunk, encoding, cb) {
  var ts = this._transformState;
  ts.writecb = cb;
  ts.writechunk = chunk;
  ts.writeencoding = encoding;

  if (!ts.transforming) {
    var rs = this._readableState;
    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);
  }
}; // Doesn't matter what the args are here.
// _transform does all the work.
// That we got here means that the readable side wants more data.


Transform.prototype._read = function (n) {
  var ts = this._transformState;

  if (ts.writechunk !== null && !ts.transforming) {
    ts.transforming = true;

    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);
  } else {
    // mark that we need a transform, so that any data that comes in
    // will get processed, now that we've asked for it.
    ts.needTransform = true;
  }
};

Transform.prototype._destroy = function (err, cb) {
  Duplex.prototype._destroy.call(this, err, function (err2) {
    cb(err2);
  });
};

function done(stream, er, data) {
  if (er) return stream.emit('error', er);
  if (data != null) // single equals check for both `null` and `undefined`
    stream.push(data); // TODO(BridgeAR): Write a test for these two error cases
  // if there's nothing in the write buffer, then that means
  // that nothing more will ever be provided

  if (stream._writableState.length) throw new ERR_TRANSFORM_WITH_LENGTH_0();
  if (stream._transformState.transforming) throw new ERR_TRANSFORM_ALREADY_TRANSFORMING();
  return stream.push(null);
}
},{"../errors":116,"./_stream_duplex":117,"inherits":216}],121:[function(require,module,exports){
(function (process,global){(function (){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
// A bit simpler than readable streams.
// Implement an async ._write(chunk, encoding, cb), and it'll handle all
// the drain event emission and buffering.
'use strict';

module.exports = Writable;
/* <replacement> */

function WriteReq(chunk, encoding, cb) {
  this.chunk = chunk;
  this.encoding = encoding;
  this.callback = cb;
  this.next = null;
} // It seems a linked list but it is not
// there will be only 2 of these for each stream


function CorkedRequest(state) {
  var _this = this;

  this.next = null;
  this.entry = null;

  this.finish = function () {
    onCorkedFinish(_this, state);
  };
}
/* </replacement> */

/*<replacement>*/


var Duplex;
/*</replacement>*/

Writable.WritableState = WritableState;
/*<replacement>*/

var internalUtil = {
  deprecate: require('util-deprecate')
};
/*</replacement>*/

/*<replacement>*/

var Stream = require('./internal/streams/stream');
/*</replacement>*/


var Buffer = require('buffer').Buffer;

var OurUint8Array = global.Uint8Array || function () {};

function _uint8ArrayToBuffer(chunk) {
  return Buffer.from(chunk);
}

function _isUint8Array(obj) {
  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;
}

var destroyImpl = require('./internal/streams/destroy');

var _require = require('./internal/streams/state'),
    getHighWaterMark = _require.getHighWaterMark;

var _require$codes = require('../errors').codes,
    ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,
    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,
    ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,
    ERR_STREAM_CANNOT_PIPE = _require$codes.ERR_STREAM_CANNOT_PIPE,
    ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED,
    ERR_STREAM_NULL_VALUES = _require$codes.ERR_STREAM_NULL_VALUES,
    ERR_STREAM_WRITE_AFTER_END = _require$codes.ERR_STREAM_WRITE_AFTER_END,
    ERR_UNKNOWN_ENCODING = _require$codes.ERR_UNKNOWN_ENCODING;

var errorOrDestroy = destroyImpl.errorOrDestroy;

require('inherits')(Writable, Stream);

function nop() {}

function WritableState(options, stream, isDuplex) {
  Duplex = Duplex || require('./_stream_duplex');
  options = options || {}; // Duplex streams are both readable and writable, but share
  // the same options object.
  // However, some cases require setting options to different
  // values for the readable and the writable sides of the duplex stream,
  // e.g. options.readableObjectMode vs. options.writableObjectMode, etc.

  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex; // object stream flag to indicate whether or not this stream
  // contains buffers or objects.

  this.objectMode = !!options.objectMode;
  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode; // the point at which write() starts returning false
  // Note: 0 is a valid value, means that we always return false if
  // the entire buffer is not flushed immediately on write()

  this.highWaterMark = getHighWaterMark(this, options, 'writableHighWaterMark', isDuplex); // if _final has been called

  this.finalCalled = false; // drain event flag.

  this.needDrain = false; // at the start of calling end()

  this.ending = false; // when end() has been called, and returned

  this.ended = false; // when 'finish' is emitted

  this.finished = false; // has it been destroyed

  this.destroyed = false; // should we decode strings into buffers before passing to _write?
  // this is here so that some node-core streams can optimize string
  // handling at a lower level.

  var noDecode = options.decodeStrings === false;
  this.decodeStrings = !noDecode; // Crypto is kind of old and crusty.  Historically, its default string
  // encoding is 'binary' so we have to make this configurable.
  // Everything else in the universe uses 'utf8', though.

  this.defaultEncoding = options.defaultEncoding || 'utf8'; // not an actual buffer we keep track of, but a measurement
  // of how much we're waiting to get pushed to some underlying
  // socket or file.

  this.length = 0; // a flag to see when we're in the middle of a write.

  this.writing = false; // when true all writes will be buffered until .uncork() call

  this.corked = 0; // a flag to be able to tell if the onwrite cb is called immediately,
  // or on a later tick.  We set this to true at first, because any
  // actions that shouldn't happen until "later" should generally also
  // not happen before the first write call.

  this.sync = true; // a flag to know if we're processing previously buffered items, which
  // may call the _write() callback in the same tick, so that we don't
  // end up in an overlapped onwrite situation.

  this.bufferProcessing = false; // the callback that's passed to _write(chunk,cb)

  this.onwrite = function (er) {
    onwrite(stream, er);
  }; // the callback that the user supplies to write(chunk,encoding,cb)


  this.writecb = null; // the amount that is being written when _write is called.

  this.writelen = 0;
  this.bufferedRequest = null;
  this.lastBufferedRequest = null; // number of pending user-supplied write callbacks
  // this must be 0 before 'finish' can be emitted

  this.pendingcb = 0; // emit prefinish if the only thing we're waiting for is _write cbs
  // This is relevant for synchronous Transform streams

  this.prefinished = false; // True if the error was already emitted and should not be thrown again

  this.errorEmitted = false; // Should close be emitted on destroy. Defaults to true.

  this.emitClose = options.emitClose !== false; // Should .destroy() be called after 'finish' (and potentially 'end')

  this.autoDestroy = !!options.autoDestroy; // count buffered requests

  this.bufferedRequestCount = 0; // allocate the first CorkedRequest, there is always
  // one allocated and free to use, and we maintain at most two

  this.corkedRequestsFree = new CorkedRequest(this);
}

WritableState.prototype.getBuffer = function getBuffer() {
  var current = this.bufferedRequest;
  var out = [];

  while (current) {
    out.push(current);
    current = current.next;
  }

  return out;
};

(function () {
  try {
    Object.defineProperty(WritableState.prototype, 'buffer', {
      get: internalUtil.deprecate(function writableStateBufferGetter() {
        return this.getBuffer();
      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')
    });
  } catch (_) {}
})(); // Test _writableState for inheritance to account for Duplex streams,
// whose prototype chain only points to Readable.


var realHasInstance;

if (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {
  realHasInstance = Function.prototype[Symbol.hasInstance];
  Object.defineProperty(Writable, Symbol.hasInstance, {
    value: function value(object) {
      if (realHasInstance.call(this, object)) return true;
      if (this !== Writable) return false;
      return object && object._writableState instanceof WritableState;
    }
  });
} else {
  realHasInstance = function realHasInstance(object) {
    return object instanceof this;
  };
}

function Writable(options) {
  Duplex = Duplex || require('./_stream_duplex'); // Writable ctor is applied to Duplexes, too.
  // `realHasInstance` is necessary because using plain `instanceof`
  // would return false, as no `_writableState` property is attached.
  // Trying to use the custom `instanceof` for Writable here will also break the
  // Node.js LazyTransform implementation, which has a non-trivial getter for
  // `_writableState` that would lead to infinite recursion.
  // Checking for a Stream.Duplex instance is faster here instead of inside
  // the WritableState constructor, at least with V8 6.5

  var isDuplex = this instanceof Duplex;
  if (!isDuplex && !realHasInstance.call(Writable, this)) return new Writable(options);
  this._writableState = new WritableState(options, this, isDuplex); // legacy.

  this.writable = true;

  if (options) {
    if (typeof options.write === 'function') this._write = options.write;
    if (typeof options.writev === 'function') this._writev = options.writev;
    if (typeof options.destroy === 'function') this._destroy = options.destroy;
    if (typeof options.final === 'function') this._final = options.final;
  }

  Stream.call(this);
} // Otherwise people can pipe Writable streams, which is just wrong.


Writable.prototype.pipe = function () {
  errorOrDestroy(this, new ERR_STREAM_CANNOT_PIPE());
};

function writeAfterEnd(stream, cb) {
  var er = new ERR_STREAM_WRITE_AFTER_END(); // TODO: defer error events consistently everywhere, not just the cb

  errorOrDestroy(stream, er);
  process.nextTick(cb, er);
} // Checks that a user-supplied chunk is valid, especially for the particular
// mode the stream is in. Currently this means that `null` is never accepted
// and undefined/non-string values are only allowed in object mode.


function validChunk(stream, state, chunk, cb) {
  var er;

  if (chunk === null) {
    er = new ERR_STREAM_NULL_VALUES();
  } else if (typeof chunk !== 'string' && !state.objectMode) {
    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer'], chunk);
  }

  if (er) {
    errorOrDestroy(stream, er);
    process.nextTick(cb, er);
    return false;
  }

  return true;
}

Writable.prototype.write = function (chunk, encoding, cb) {
  var state = this._writableState;
  var ret = false;

  var isBuf = !state.objectMode && _isUint8Array(chunk);

  if (isBuf && !Buffer.isBuffer(chunk)) {
    chunk = _uint8ArrayToBuffer(chunk);
  }

  if (typeof encoding === 'function') {
    cb = encoding;
    encoding = null;
  }

  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;
  if (typeof cb !== 'function') cb = nop;
  if (state.ending) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {
    state.pendingcb++;
    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);
  }
  return ret;
};

Writable.prototype.cork = function () {
  this._writableState.corked++;
};

Writable.prototype.uncork = function () {
  var state = this._writableState;

  if (state.corked) {
    state.corked--;
    if (!state.writing && !state.corked && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);
  }
};

Writable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {
  // node::ParseEncoding() requires lower case.
  if (typeof encoding === 'string') encoding = encoding.toLowerCase();
  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new ERR_UNKNOWN_ENCODING(encoding);
  this._writableState.defaultEncoding = encoding;
  return this;
};

Object.defineProperty(Writable.prototype, 'writableBuffer', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._writableState && this._writableState.getBuffer();
  }
});

function decodeChunk(state, chunk, encoding) {
  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {
    chunk = Buffer.from(chunk, encoding);
  }

  return chunk;
}

Object.defineProperty(Writable.prototype, 'writableHighWaterMark', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._writableState.highWaterMark;
  }
}); // if we're already writing something, then just put this
// in the queue, and wait our turn.  Otherwise, call _write
// If we return false, then we need a drain event, so set that flag.

function writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {
  if (!isBuf) {
    var newChunk = decodeChunk(state, chunk, encoding);

    if (chunk !== newChunk) {
      isBuf = true;
      encoding = 'buffer';
      chunk = newChunk;
    }
  }

  var len = state.objectMode ? 1 : chunk.length;
  state.length += len;
  var ret = state.length < state.highWaterMark; // we must ensure that previous needDrain will not be reset to false.

  if (!ret) state.needDrain = true;

  if (state.writing || state.corked) {
    var last = state.lastBufferedRequest;
    state.lastBufferedRequest = {
      chunk: chunk,
      encoding: encoding,
      isBuf: isBuf,
      callback: cb,
      next: null
    };

    if (last) {
      last.next = state.lastBufferedRequest;
    } else {
      state.bufferedRequest = state.lastBufferedRequest;
    }

    state.bufferedRequestCount += 1;
  } else {
    doWrite(stream, state, false, len, chunk, encoding, cb);
  }

  return ret;
}

function doWrite(stream, state, writev, len, chunk, encoding, cb) {
  state.writelen = len;
  state.writecb = cb;
  state.writing = true;
  state.sync = true;
  if (state.destroyed) state.onwrite(new ERR_STREAM_DESTROYED('write'));else if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);
  state.sync = false;
}

function onwriteError(stream, state, sync, er, cb) {
  --state.pendingcb;

  if (sync) {
    // defer the callback if we are being called synchronously
    // to avoid piling up things on the stack
    process.nextTick(cb, er); // this can emit finish, and it will always happen
    // after error

    process.nextTick(finishMaybe, stream, state);
    stream._writableState.errorEmitted = true;
    errorOrDestroy(stream, er);
  } else {
    // the caller expect this to happen before if
    // it is async
    cb(er);
    stream._writableState.errorEmitted = true;
    errorOrDestroy(stream, er); // this can emit finish, but finish must
    // always follow error

    finishMaybe(stream, state);
  }
}

function onwriteStateUpdate(state) {
  state.writing = false;
  state.writecb = null;
  state.length -= state.writelen;
  state.writelen = 0;
}

function onwrite(stream, er) {
  var state = stream._writableState;
  var sync = state.sync;
  var cb = state.writecb;
  if (typeof cb !== 'function') throw new ERR_MULTIPLE_CALLBACK();
  onwriteStateUpdate(state);
  if (er) onwriteError(stream, state, sync, er, cb);else {
    // Check if we're actually ready to finish, but don't emit yet
    var finished = needFinish(state) || stream.destroyed;

    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {
      clearBuffer(stream, state);
    }

    if (sync) {
      process.nextTick(afterWrite, stream, state, finished, cb);
    } else {
      afterWrite(stream, state, finished, cb);
    }
  }
}

function afterWrite(stream, state, finished, cb) {
  if (!finished) onwriteDrain(stream, state);
  state.pendingcb--;
  cb();
  finishMaybe(stream, state);
} // Must force callback to be called on nextTick, so that we don't
// emit 'drain' before the write() consumer gets the 'false' return
// value, and has a chance to attach a 'drain' listener.


function onwriteDrain(stream, state) {
  if (state.length === 0 && state.needDrain) {
    state.needDrain = false;
    stream.emit('drain');
  }
} // if there's something in the buffer waiting, then process it


function clearBuffer(stream, state) {
  state.bufferProcessing = true;
  var entry = state.bufferedRequest;

  if (stream._writev && entry && entry.next) {
    // Fast case, write everything using _writev()
    var l = state.bufferedRequestCount;
    var buffer = new Array(l);
    var holder = state.corkedRequestsFree;
    holder.entry = entry;
    var count = 0;
    var allBuffers = true;

    while (entry) {
      buffer[count] = entry;
      if (!entry.isBuf) allBuffers = false;
      entry = entry.next;
      count += 1;
    }

    buffer.allBuffers = allBuffers;
    doWrite(stream, state, true, state.length, buffer, '', holder.finish); // doWrite is almost always async, defer these to save a bit of time
    // as the hot path ends with doWrite

    state.pendingcb++;
    state.lastBufferedRequest = null;

    if (holder.next) {
      state.corkedRequestsFree = holder.next;
      holder.next = null;
    } else {
      state.corkedRequestsFree = new CorkedRequest(state);
    }

    state.bufferedRequestCount = 0;
  } else {
    // Slow case, write chunks one-by-one
    while (entry) {
      var chunk = entry.chunk;
      var encoding = entry.encoding;
      var cb = entry.callback;
      var len = state.objectMode ? 1 : chunk.length;
      doWrite(stream, state, false, len, chunk, encoding, cb);
      entry = entry.next;
      state.bufferedRequestCount--; // if we didn't call the onwrite immediately, then
      // it means that we need to wait until it does.
      // also, that means that the chunk and cb are currently
      // being processed, so move the buffer counter past them.

      if (state.writing) {
        break;
      }
    }

    if (entry === null) state.lastBufferedRequest = null;
  }

  state.bufferedRequest = entry;
  state.bufferProcessing = false;
}

Writable.prototype._write = function (chunk, encoding, cb) {
  cb(new ERR_METHOD_NOT_IMPLEMENTED('_write()'));
};

Writable.prototype._writev = null;

Writable.prototype.end = function (chunk, encoding, cb) {
  var state = this._writableState;

  if (typeof chunk === 'function') {
    cb = chunk;
    chunk = null;
    encoding = null;
  } else if (typeof encoding === 'function') {
    cb = encoding;
    encoding = null;
  }

  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding); // .end() fully uncorks

  if (state.corked) {
    state.corked = 1;
    this.uncork();
  } // ignore unnecessary end() calls.


  if (!state.ending) endWritable(this, state, cb);
  return this;
};

Object.defineProperty(Writable.prototype, 'writableLength', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._writableState.length;
  }
});

function needFinish(state) {
  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;
}

function callFinal(stream, state) {
  stream._final(function (err) {
    state.pendingcb--;

    if (err) {
      errorOrDestroy(stream, err);
    }

    state.prefinished = true;
    stream.emit('prefinish');
    finishMaybe(stream, state);
  });
}

function prefinish(stream, state) {
  if (!state.prefinished && !state.finalCalled) {
    if (typeof stream._final === 'function' && !state.destroyed) {
      state.pendingcb++;
      state.finalCalled = true;
      process.nextTick(callFinal, stream, state);
    } else {
      state.prefinished = true;
      stream.emit('prefinish');
    }
  }
}

function finishMaybe(stream, state) {
  var need = needFinish(state);

  if (need) {
    prefinish(stream, state);

    if (state.pendingcb === 0) {
      state.finished = true;
      stream.emit('finish');

      if (state.autoDestroy) {
        // In case of duplex streams we need a way to detect
        // if the readable side is ready for autoDestroy as well
        var rState = stream._readableState;

        if (!rState || rState.autoDestroy && rState.endEmitted) {
          stream.destroy();
        }
      }
    }
  }

  return need;
}

function endWritable(stream, state, cb) {
  state.ending = true;
  finishMaybe(stream, state);

  if (cb) {
    if (state.finished) process.nextTick(cb);else stream.once('finish', cb);
  }

  state.ended = true;
  stream.writable = false;
}

function onCorkedFinish(corkReq, state, err) {
  var entry = corkReq.entry;
  corkReq.entry = null;

  while (entry) {
    var cb = entry.callback;
    state.pendingcb--;
    cb(err);
    entry = entry.next;
  } // reuse the free corkReq.


  state.corkedRequestsFree.next = corkReq;
}

Object.defineProperty(Writable.prototype, 'destroyed', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    if (this._writableState === undefined) {
      return false;
    }

    return this._writableState.destroyed;
  },
  set: function set(value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (!this._writableState) {
      return;
    } // backward compatibility, the user is explicitly
    // managing destroyed


    this._writableState.destroyed = value;
  }
});
Writable.prototype.destroy = destroyImpl.destroy;
Writable.prototype._undestroy = destroyImpl.undestroy;

Writable.prototype._destroy = function (err, cb) {
  cb(err);
};
}).call(this)}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"../errors":116,"./_stream_duplex":117,"./internal/streams/destroy":124,"./internal/streams/state":128,"./internal/streams/stream":129,"_process":222,"buffer":112,"inherits":216,"util-deprecate":240}],122:[function(require,module,exports){
(function (process){(function (){
'use strict';

var _Object$setPrototypeO;

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var finished = require('./end-of-stream');

var kLastResolve = Symbol('lastResolve');
var kLastReject = Symbol('lastReject');
var kError = Symbol('error');
var kEnded = Symbol('ended');
var kLastPromise = Symbol('lastPromise');
var kHandlePromise = Symbol('handlePromise');
var kStream = Symbol('stream');

function createIterResult(value, done) {
  return {
    value: value,
    done: done
  };
}

function readAndResolve(iter) {
  var resolve = iter[kLastResolve];

  if (resolve !== null) {
    var data = iter[kStream].read(); // we defer if data is null
    // we can be expecting either 'end' or
    // 'error'

    if (data !== null) {
      iter[kLastPromise] = null;
      iter[kLastResolve] = null;
      iter[kLastReject] = null;
      resolve(createIterResult(data, false));
    }
  }
}

function onReadable(iter) {
  // we wait for the next tick, because it might
  // emit an error with process.nextTick
  process.nextTick(readAndResolve, iter);
}

function wrapForNext(lastPromise, iter) {
  return function (resolve, reject) {
    lastPromise.then(function () {
      if (iter[kEnded]) {
        resolve(createIterResult(undefined, true));
        return;
      }

      iter[kHandlePromise](resolve, reject);
    }, reject);
  };
}

var AsyncIteratorPrototype = Object.getPrototypeOf(function () {});
var ReadableStreamAsyncIteratorPrototype = Object.setPrototypeOf((_Object$setPrototypeO = {
  get stream() {
    return this[kStream];
  },

  next: function next() {
    var _this = this;

    // if we have detected an error in the meanwhile
    // reject straight away
    var error = this[kError];

    if (error !== null) {
      return Promise.reject(error);
    }

    if (this[kEnded]) {
      return Promise.resolve(createIterResult(undefined, true));
    }

    if (this[kStream].destroyed) {
      // We need to defer via nextTick because if .destroy(err) is
      // called, the error will be emitted via nextTick, and
      // we cannot guarantee that there is no error lingering around
      // waiting to be emitted.
      return new Promise(function (resolve, reject) {
        process.nextTick(function () {
          if (_this[kError]) {
            reject(_this[kError]);
          } else {
            resolve(createIterResult(undefined, true));
          }
        });
      });
    } // if we have multiple next() calls
    // we will wait for the previous Promise to finish
    // this logic is optimized to support for await loops,
    // where next() is only called once at a time


    var lastPromise = this[kLastPromise];
    var promise;

    if (lastPromise) {
      promise = new Promise(wrapForNext(lastPromise, this));
    } else {
      // fast path needed to support multiple this.push()
      // without triggering the next() queue
      var data = this[kStream].read();

      if (data !== null) {
        return Promise.resolve(createIterResult(data, false));
      }

      promise = new Promise(this[kHandlePromise]);
    }

    this[kLastPromise] = promise;
    return promise;
  }
}, _defineProperty(_Object$setPrototypeO, Symbol.asyncIterator, function () {
  return this;
}), _defineProperty(_Object$setPrototypeO, "return", function _return() {
  var _this2 = this;

  // destroy(err, cb) is a private API
  // we can guarantee we have that here, because we control the
  // Readable class this is attached to
  return new Promise(function (resolve, reject) {
    _this2[kStream].destroy(null, function (err) {
      if (err) {
        reject(err);
        return;
      }

      resolve(createIterResult(undefined, true));
    });
  });
}), _Object$setPrototypeO), AsyncIteratorPrototype);

var createReadableStreamAsyncIterator = function createReadableStreamAsyncIterator(stream) {
  var _Object$create;

  var iterator = Object.create(ReadableStreamAsyncIteratorPrototype, (_Object$create = {}, _defineProperty(_Object$create, kStream, {
    value: stream,
    writable: true
  }), _defineProperty(_Object$create, kLastResolve, {
    value: null,
    writable: true
  }), _defineProperty(_Object$create, kLastReject, {
    value: null,
    writable: true
  }), _defineProperty(_Object$create, kError, {
    value: null,
    writable: true
  }), _defineProperty(_Object$create, kEnded, {
    value: stream._readableState.endEmitted,
    writable: true
  }), _defineProperty(_Object$create, kHandlePromise, {
    value: function value(resolve, reject) {
      var data = iterator[kStream].read();

      if (data) {
        iterator[kLastPromise] = null;
        iterator[kLastResolve] = null;
        iterator[kLastReject] = null;
        resolve(createIterResult(data, false));
      } else {
        iterator[kLastResolve] = resolve;
        iterator[kLastReject] = reject;
      }
    },
    writable: true
  }), _Object$create));
  iterator[kLastPromise] = null;
  finished(stream, function (err) {
    if (err && err.code !== 'ERR_STREAM_PREMATURE_CLOSE') {
      var reject = iterator[kLastReject]; // reject if we are waiting for data in the Promise
      // returned by next() and store the error

      if (reject !== null) {
        iterator[kLastPromise] = null;
        iterator[kLastResolve] = null;
        iterator[kLastReject] = null;
        reject(err);
      }

      iterator[kError] = err;
      return;
    }

    var resolve = iterator[kLastResolve];

    if (resolve !== null) {
      iterator[kLastPromise] = null;
      iterator[kLastResolve] = null;
      iterator[kLastReject] = null;
      resolve(createIterResult(undefined, true));
    }

    iterator[kEnded] = true;
  });
  stream.on('readable', onReadable.bind(null, iterator));
  return iterator;
};

module.exports = createReadableStreamAsyncIterator;
}).call(this)}).call(this,require('_process'))
},{"./end-of-stream":125,"_process":222}],123:[function(require,module,exports){
'use strict';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var _require = require('buffer'),
    Buffer = _require.Buffer;

var _require2 = require('util'),
    inspect = _require2.inspect;

var custom = inspect && inspect.custom || 'inspect';

function copyBuffer(src, target, offset) {
  Buffer.prototype.copy.call(src, target, offset);
}

module.exports =
/*#__PURE__*/
function () {
  function BufferList() {
    _classCallCheck(this, BufferList);

    this.head = null;
    this.tail = null;
    this.length = 0;
  }

  _createClass(BufferList, [{
    key: "push",
    value: function push(v) {
      var entry = {
        data: v,
        next: null
      };
      if (this.length > 0) this.tail.next = entry;else this.head = entry;
      this.tail = entry;
      ++this.length;
    }
  }, {
    key: "unshift",
    value: function unshift(v) {
      var entry = {
        data: v,
        next: this.head
      };
      if (this.length === 0) this.tail = entry;
      this.head = entry;
      ++this.length;
    }
  }, {
    key: "shift",
    value: function shift() {
      if (this.length === 0) return;
      var ret = this.head.data;
      if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;
      --this.length;
      return ret;
    }
  }, {
    key: "clear",
    value: function clear() {
      this.head = this.tail = null;
      this.length = 0;
    }
  }, {
    key: "join",
    value: function join(s) {
      if (this.length === 0) return '';
      var p = this.head;
      var ret = '' + p.data;

      while (p = p.next) {
        ret += s + p.data;
      }

      return ret;
    }
  }, {
    key: "concat",
    value: function concat(n) {
      if (this.length === 0) return Buffer.alloc(0);
      var ret = Buffer.allocUnsafe(n >>> 0);
      var p = this.head;
      var i = 0;

      while (p) {
        copyBuffer(p.data, ret, i);
        i += p.data.length;
        p = p.next;
      }

      return ret;
    } // Consumes a specified amount of bytes or characters from the buffered data.

  }, {
    key: "consume",
    value: function consume(n, hasStrings) {
      var ret;

      if (n < this.head.data.length) {
        // `slice` is the same for buffers and strings.
        ret = this.head.data.slice(0, n);
        this.head.data = this.head.data.slice(n);
      } else if (n === this.head.data.length) {
        // First chunk is a perfect match.
        ret = this.shift();
      } else {
        // Result spans more than one buffer.
        ret = hasStrings ? this._getString(n) : this._getBuffer(n);
      }

      return ret;
    }
  }, {
    key: "first",
    value: function first() {
      return this.head.data;
    } // Consumes a specified amount of characters from the buffered data.

  }, {
    key: "_getString",
    value: function _getString(n) {
      var p = this.head;
      var c = 1;
      var ret = p.data;
      n -= ret.length;

      while (p = p.next) {
        var str = p.data;
        var nb = n > str.length ? str.length : n;
        if (nb === str.length) ret += str;else ret += str.slice(0, n);
        n -= nb;

        if (n === 0) {
          if (nb === str.length) {
            ++c;
            if (p.next) this.head = p.next;else this.head = this.tail = null;
          } else {
            this.head = p;
            p.data = str.slice(nb);
          }

          break;
        }

        ++c;
      }

      this.length -= c;
      return ret;
    } // Consumes a specified amount of bytes from the buffered data.

  }, {
    key: "_getBuffer",
    value: function _getBuffer(n) {
      var ret = Buffer.allocUnsafe(n);
      var p = this.head;
      var c = 1;
      p.data.copy(ret);
      n -= p.data.length;

      while (p = p.next) {
        var buf = p.data;
        var nb = n > buf.length ? buf.length : n;
        buf.copy(ret, ret.length - n, 0, nb);
        n -= nb;

        if (n === 0) {
          if (nb === buf.length) {
            ++c;
            if (p.next) this.head = p.next;else this.head = this.tail = null;
          } else {
            this.head = p;
            p.data = buf.slice(nb);
          }

          break;
        }

        ++c;
      }

      this.length -= c;
      return ret;
    } // Make sure the linked list only shows the minimal necessary information.

  }, {
    key: custom,
    value: function value(_, options) {
      return inspect(this, _objectSpread({}, options, {
        // Only inspect one level.
        depth: 0,
        // It should not recurse.
        customInspect: false
      }));
    }
  }]);

  return BufferList;
}();
},{"buffer":112,"util":110}],124:[function(require,module,exports){
(function (process){(function (){
'use strict'; // undocumented cb() API, needed for core, not for public API

function destroy(err, cb) {
  var _this = this;

  var readableDestroyed = this._readableState && this._readableState.destroyed;
  var writableDestroyed = this._writableState && this._writableState.destroyed;

  if (readableDestroyed || writableDestroyed) {
    if (cb) {
      cb(err);
    } else if (err) {
      if (!this._writableState) {
        process.nextTick(emitErrorNT, this, err);
      } else if (!this._writableState.errorEmitted) {
        this._writableState.errorEmitted = true;
        process.nextTick(emitErrorNT, this, err);
      }
    }

    return this;
  } // we set destroyed to true before firing error callbacks in order
  // to make it re-entrance safe in case destroy() is called within callbacks


  if (this._readableState) {
    this._readableState.destroyed = true;
  } // if this is a duplex stream mark the writable part as destroyed as well


  if (this._writableState) {
    this._writableState.destroyed = true;
  }

  this._destroy(err || null, function (err) {
    if (!cb && err) {
      if (!_this._writableState) {
        process.nextTick(emitErrorAndCloseNT, _this, err);
      } else if (!_this._writableState.errorEmitted) {
        _this._writableState.errorEmitted = true;
        process.nextTick(emitErrorAndCloseNT, _this, err);
      } else {
        process.nextTick(emitCloseNT, _this);
      }
    } else if (cb) {
      process.nextTick(emitCloseNT, _this);
      cb(err);
    } else {
      process.nextTick(emitCloseNT, _this);
    }
  });

  return this;
}

function emitErrorAndCloseNT(self, err) {
  emitErrorNT(self, err);
  emitCloseNT(self);
}

function emitCloseNT(self) {
  if (self._writableState && !self._writableState.emitClose) return;
  if (self._readableState && !self._readableState.emitClose) return;
  self.emit('close');
}

function undestroy() {
  if (this._readableState) {
    this._readableState.destroyed = false;
    this._readableState.reading = false;
    this._readableState.ended = false;
    this._readableState.endEmitted = false;
  }

  if (this._writableState) {
    this._writableState.destroyed = false;
    this._writableState.ended = false;
    this._writableState.ending = false;
    this._writableState.finalCalled = false;
    this._writableState.prefinished = false;
    this._writableState.finished = false;
    this._writableState.errorEmitted = false;
  }
}

function emitErrorNT(self, err) {
  self.emit('error', err);
}

function errorOrDestroy(stream, err) {
  // We have tests that rely on errors being emitted
  // in the same tick, so changing this is semver major.
  // For now when you opt-in to autoDestroy we allow
  // the error to be emitted nextTick. In a future
  // semver major update we should change the default to this.
  var rState = stream._readableState;
  var wState = stream._writableState;
  if (rState && rState.autoDestroy || wState && wState.autoDestroy) stream.destroy(err);else stream.emit('error', err);
}

module.exports = {
  destroy: destroy,
  undestroy: undestroy,
  errorOrDestroy: errorOrDestroy
};
}).call(this)}).call(this,require('_process'))
},{"_process":222}],125:[function(require,module,exports){
// Ported from https://github.com/mafintosh/end-of-stream with
// permission from the author, Mathias Buus (@mafintosh).
'use strict';

var ERR_STREAM_PREMATURE_CLOSE = require('../../../errors').codes.ERR_STREAM_PREMATURE_CLOSE;

function once(callback) {
  var called = false;
  return function () {
    if (called) return;
    called = true;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    callback.apply(this, args);
  };
}

function noop() {}

function isRequest(stream) {
  return stream.setHeader && typeof stream.abort === 'function';
}

function eos(stream, opts, callback) {
  if (typeof opts === 'function') return eos(stream, null, opts);
  if (!opts) opts = {};
  callback = once(callback || noop);
  var readable = opts.readable || opts.readable !== false && stream.readable;
  var writable = opts.writable || opts.writable !== false && stream.writable;

  var onlegacyfinish = function onlegacyfinish() {
    if (!stream.writable) onfinish();
  };

  var writableEnded = stream._writableState && stream._writableState.finished;

  var onfinish = function onfinish() {
    writable = false;
    writableEnded = true;
    if (!readable) callback.call(stream);
  };

  var readableEnded = stream._readableState && stream._readableState.endEmitted;

  var onend = function onend() {
    readable = false;
    readableEnded = true;
    if (!writable) callback.call(stream);
  };

  var onerror = function onerror(err) {
    callback.call(stream, err);
  };

  var onclose = function onclose() {
    var err;

    if (readable && !readableEnded) {
      if (!stream._readableState || !stream._readableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();
      return callback.call(stream, err);
    }

    if (writable && !writableEnded) {
      if (!stream._writableState || !stream._writableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();
      return callback.call(stream, err);
    }
  };

  var onrequest = function onrequest() {
    stream.req.on('finish', onfinish);
  };

  if (isRequest(stream)) {
    stream.on('complete', onfinish);
    stream.on('abort', onclose);
    if (stream.req) onrequest();else stream.on('request', onrequest);
  } else if (writable && !stream._writableState) {
    // legacy streams
    stream.on('end', onlegacyfinish);
    stream.on('close', onlegacyfinish);
  }

  stream.on('end', onend);
  stream.on('finish', onfinish);
  if (opts.error !== false) stream.on('error', onerror);
  stream.on('close', onclose);
  return function () {
    stream.removeListener('complete', onfinish);
    stream.removeListener('abort', onclose);
    stream.removeListener('request', onrequest);
    if (stream.req) stream.req.removeListener('finish', onfinish);
    stream.removeListener('end', onlegacyfinish);
    stream.removeListener('close', onlegacyfinish);
    stream.removeListener('finish', onfinish);
    stream.removeListener('end', onend);
    stream.removeListener('error', onerror);
    stream.removeListener('close', onclose);
  };
}

module.exports = eos;
},{"../../../errors":116}],126:[function(require,module,exports){
module.exports = function () {
  throw new Error('Readable.from is not available in the browser')
};

},{}],127:[function(require,module,exports){
// Ported from https://github.com/mafintosh/pump with
// permission from the author, Mathias Buus (@mafintosh).
'use strict';

var eos;

function once(callback) {
  var called = false;
  return function () {
    if (called) return;
    called = true;
    callback.apply(void 0, arguments);
  };
}

var _require$codes = require('../../../errors').codes,
    ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS,
    ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED;

function noop(err) {
  // Rethrow the error if it exists to avoid swallowing it
  if (err) throw err;
}

function isRequest(stream) {
  return stream.setHeader && typeof stream.abort === 'function';
}

function destroyer(stream, reading, writing, callback) {
  callback = once(callback);
  var closed = false;
  stream.on('close', function () {
    closed = true;
  });
  if (eos === undefined) eos = require('./end-of-stream');
  eos(stream, {
    readable: reading,
    writable: writing
  }, function (err) {
    if (err) return callback(err);
    closed = true;
    callback();
  });
  var destroyed = false;
  return function (err) {
    if (closed) return;
    if (destroyed) return;
    destroyed = true; // request.destroy just do .end - .abort is what we want

    if (isRequest(stream)) return stream.abort();
    if (typeof stream.destroy === 'function') return stream.destroy();
    callback(err || new ERR_STREAM_DESTROYED('pipe'));
  };
}

function call(fn) {
  fn();
}

function pipe(from, to) {
  return from.pipe(to);
}

function popCallback(streams) {
  if (!streams.length) return noop;
  if (typeof streams[streams.length - 1] !== 'function') return noop;
  return streams.pop();
}

function pipeline() {
  for (var _len = arguments.length, streams = new Array(_len), _key = 0; _key < _len; _key++) {
    streams[_key] = arguments[_key];
  }

  var callback = popCallback(streams);
  if (Array.isArray(streams[0])) streams = streams[0];

  if (streams.length < 2) {
    throw new ERR_MISSING_ARGS('streams');
  }

  var error;
  var destroys = streams.map(function (stream, i) {
    var reading = i < streams.length - 1;
    var writing = i > 0;
    return destroyer(stream, reading, writing, function (err) {
      if (!error) error = err;
      if (err) destroys.forEach(call);
      if (reading) return;
      destroys.forEach(call);
      callback(error);
    });
  });
  return streams.reduce(pipe);
}

module.exports = pipeline;
},{"../../../errors":116,"./end-of-stream":125}],128:[function(require,module,exports){
'use strict';

var ERR_INVALID_OPT_VALUE = require('../../../errors').codes.ERR_INVALID_OPT_VALUE;

function highWaterMarkFrom(options, isDuplex, duplexKey) {
  return options.highWaterMark != null ? options.highWaterMark : isDuplex ? options[duplexKey] : null;
}

function getHighWaterMark(state, options, duplexKey, isDuplex) {
  var hwm = highWaterMarkFrom(options, isDuplex, duplexKey);

  if (hwm != null) {
    if (!(isFinite(hwm) && Math.floor(hwm) === hwm) || hwm < 0) {
      var name = isDuplex ? duplexKey : 'highWaterMark';
      throw new ERR_INVALID_OPT_VALUE(name, hwm);
    }

    return Math.floor(hwm);
  } // Default value


  return state.objectMode ? 16 : 16 * 1024;
}

module.exports = {
  getHighWaterMark: getHighWaterMark
};
},{"../../../errors":116}],129:[function(require,module,exports){
module.exports = require('events').EventEmitter;

},{"events":113}],130:[function(require,module,exports){
'use strict';

var GetIntrinsic = require('get-intrinsic');

var callBind = require('./');

var $indexOf = callBind(GetIntrinsic('String.prototype.indexOf'));

module.exports = function callBoundIntrinsic(name, allowMissing) {
	var intrinsic = GetIntrinsic(name, !!allowMissing);
	if (typeof intrinsic === 'function' && $indexOf(name, '.prototype.') > -1) {
		return callBind(intrinsic);
	}
	return intrinsic;
};

},{"./":131,"get-intrinsic":206}],131:[function(require,module,exports){
'use strict';

var bind = require('function-bind');
var GetIntrinsic = require('get-intrinsic');
var setFunctionLength = require('set-function-length');

var $TypeError = require('es-errors/type');
var $apply = GetIntrinsic('%Function.prototype.apply%');
var $call = GetIntrinsic('%Function.prototype.call%');
var $reflectApply = GetIntrinsic('%Reflect.apply%', true) || bind.call($call, $apply);

var $defineProperty = require('es-define-property');
var $max = GetIntrinsic('%Math.max%');

module.exports = function callBind(originalFunction) {
	if (typeof originalFunction !== 'function') {
		throw new $TypeError('a function is required');
	}
	var func = $reflectApply(bind, $call, arguments);
	return setFunctionLength(
		func,
		1 + $max(0, originalFunction.length - (arguments.length - 1)),
		true
	);
};

var applyBind = function applyBind() {
	return $reflectApply(bind, $apply, arguments);
};

if ($defineProperty) {
	$defineProperty(module.exports, 'apply', { value: applyBind });
} else {
	module.exports.apply = applyBind;
}

},{"es-define-property":191,"es-errors/type":197,"function-bind":205,"get-intrinsic":206,"set-function-length":226}],132:[function(require,module,exports){
var pSlice = Array.prototype.slice;
var objectKeys = require('./lib/keys.js');
var isArguments = require('./lib/is_arguments.js');

var deepEqual = module.exports = function (actual, expected, opts) {
  if (!opts) opts = {};
  // 7.1. All identical values are equivalent, as determined by ===.
  if (actual === expected) {
    return true;

  } else if (actual instanceof Date && expected instanceof Date) {
    return actual.getTime() === expected.getTime();

  // 7.3. Other pairs that do not both pass typeof value == 'object',
  // equivalence is determined by ==.
  } else if (!actual || !expected || typeof actual != 'object' && typeof expected != 'object') {
    return opts.strict ? actual === expected : actual == expected;

  // 7.4. For all other Object pairs, including Array objects, equivalence is
  // determined by having the same number of owned properties (as verified
  // with Object.prototype.hasOwnProperty.call), the same set of keys
  // (although not necessarily the same order), equivalent values for every
  // corresponding key, and an identical 'prototype' property. Note: this
  // accounts for both named and indexed properties on Arrays.
  } else {
    return objEquiv(actual, expected, opts);
  }
}

function isUndefinedOrNull(value) {
  return value === null || value === undefined;
}

function isBuffer (x) {
  if (!x || typeof x !== 'object' || typeof x.length !== 'number') return false;
  if (typeof x.copy !== 'function' || typeof x.slice !== 'function') {
    return false;
  }
  if (x.length > 0 && typeof x[0] !== 'number') return false;
  return true;
}

function objEquiv(a, b, opts) {
  var i, key;
  if (isUndefinedOrNull(a) || isUndefinedOrNull(b))
    return false;
  // an identical 'prototype' property.
  if (a.prototype !== b.prototype) return false;
  //~~~I've managed to break Object.keys through screwy arguments passing.
  //   Converting to array solves the problem.
  if (isArguments(a)) {
    if (!isArguments(b)) {
      return false;
    }
    a = pSlice.call(a);
    b = pSlice.call(b);
    return deepEqual(a, b, opts);
  }
  if (isBuffer(a)) {
    if (!isBuffer(b)) {
      return false;
    }
    if (a.length !== b.length) return false;
    for (i = 0; i < a.length; i++) {
      if (a[i] !== b[i]) return false;
    }
    return true;
  }
  try {
    var ka = objectKeys(a),
        kb = objectKeys(b);
  } catch (e) {//happens when one is a string literal and the other isn't
    return false;
  }
  // having the same number of owned properties (keys incorporates
  // hasOwnProperty)
  if (ka.length != kb.length)
    return false;
  //the same set of keys (although not necessarily the same order),
  ka.sort();
  kb.sort();
  //~~~cheap key test
  for (i = ka.length - 1; i >= 0; i--) {
    if (ka[i] != kb[i])
      return false;
  }
  //equivalent values for every corresponding key, and
  //~~~possibly expensive deep test
  for (i = ka.length - 1; i >= 0; i--) {
    key = ka[i];
    if (!deepEqual(a[key], b[key], opts)) return false;
  }
  return typeof a === typeof b;
}

},{"./lib/is_arguments.js":133,"./lib/keys.js":134}],133:[function(require,module,exports){
var supportsArgumentsClass = (function(){
  return Object.prototype.toString.call(arguments)
})() == '[object Arguments]';

exports = module.exports = supportsArgumentsClass ? supported : unsupported;

exports.supported = supported;
function supported(object) {
  return Object.prototype.toString.call(object) == '[object Arguments]';
};

exports.unsupported = unsupported;
function unsupported(object){
  return object &&
    typeof object == 'object' &&
    typeof object.length == 'number' &&
    Object.prototype.hasOwnProperty.call(object, 'callee') &&
    !Object.prototype.propertyIsEnumerable.call(object, 'callee') ||
    false;
};

},{}],134:[function(require,module,exports){
exports = module.exports = typeof Object.keys === 'function'
  ? Object.keys : shim;

exports.shim = shim;
function shim (obj) {
  var keys = [];
  for (var key in obj) keys.push(key);
  return keys;
}

},{}],135:[function(require,module,exports){
'use strict';

var $defineProperty = require('es-define-property');

var $SyntaxError = require('es-errors/syntax');
var $TypeError = require('es-errors/type');

var gopd = require('gopd');

/** @type {import('.')} */
module.exports = function defineDataProperty(
	obj,
	property,
	value
) {
	if (!obj || (typeof obj !== 'object' && typeof obj !== 'function')) {
		throw new $TypeError('`obj` must be an object or a function`');
	}
	if (typeof property !== 'string' && typeof property !== 'symbol') {
		throw new $TypeError('`property` must be a string or a symbol`');
	}
	if (arguments.length > 3 && typeof arguments[3] !== 'boolean' && arguments[3] !== null) {
		throw new $TypeError('`nonEnumerable`, if provided, must be a boolean or null');
	}
	if (arguments.length > 4 && typeof arguments[4] !== 'boolean' && arguments[4] !== null) {
		throw new $TypeError('`nonWritable`, if provided, must be a boolean or null');
	}
	if (arguments.length > 5 && typeof arguments[5] !== 'boolean' && arguments[5] !== null) {
		throw new $TypeError('`nonConfigurable`, if provided, must be a boolean or null');
	}
	if (arguments.length > 6 && typeof arguments[6] !== 'boolean') {
		throw new $TypeError('`loose`, if provided, must be a boolean');
	}

	var nonEnumerable = arguments.length > 3 ? arguments[3] : null;
	var nonWritable = arguments.length > 4 ? arguments[4] : null;
	var nonConfigurable = arguments.length > 5 ? arguments[5] : null;
	var loose = arguments.length > 6 ? arguments[6] : false;

	/* @type {false | TypedPropertyDescriptor<unknown>} */
	var desc = !!gopd && gopd(obj, property);

	if ($defineProperty) {
		$defineProperty(obj, property, {
			configurable: nonConfigurable === null && desc ? desc.configurable : !nonConfigurable,
			enumerable: nonEnumerable === null && desc ? desc.enumerable : !nonEnumerable,
			value: value,
			writable: nonWritable === null && desc ? desc.writable : !nonWritable
		});
	} else if (loose || (!nonEnumerable && !nonWritable && !nonConfigurable)) {
		// must fall back to [[Set]], and was not explicitly asked to make non-enumerable, non-writable, or non-configurable
		obj[property] = value; // eslint-disable-line no-param-reassign
	} else {
		throw new $SyntaxError('This environment does not support defining a property as non-configurable, non-writable, or non-enumerable.');
	}
};

},{"es-define-property":191,"es-errors/syntax":196,"es-errors/type":197,"gopd":207}],136:[function(require,module,exports){
'use strict';

var keys = require('object-keys');
var hasSymbols = typeof Symbol === 'function' && typeof Symbol('foo') === 'symbol';

var toStr = Object.prototype.toString;
var concat = Array.prototype.concat;
var defineDataProperty = require('define-data-property');

var isFunction = function (fn) {
	return typeof fn === 'function' && toStr.call(fn) === '[object Function]';
};

var supportsDescriptors = require('has-property-descriptors')();

var defineProperty = function (object, name, value, predicate) {
	if (name in object) {
		if (predicate === true) {
			if (object[name] === value) {
				return;
			}
		} else if (!isFunction(predicate) || !predicate()) {
			return;
		}
	}

	if (supportsDescriptors) {
		defineDataProperty(object, name, value, true);
	} else {
		defineDataProperty(object, name, value);
	}
};

var defineProperties = function (object, map) {
	var predicates = arguments.length > 2 ? arguments[2] : {};
	var props = keys(map);
	if (hasSymbols) {
		props = concat.call(props, Object.getOwnPropertySymbols(map));
	}
	for (var i = 0; i < props.length; i += 1) {
		defineProperty(object, props[i], map[props[i]], predicates[props[i]]);
	}
};

defineProperties.supportsDescriptors = !!supportsDescriptors;

module.exports = defineProperties;

},{"define-data-property":135,"has-property-descriptors":208,"object-keys":220}],137:[function(require,module,exports){
module.exports = function () {
    for (var i = 0; i < arguments.length; i++) {
        if (arguments[i] !== undefined) return arguments[i];
    }
};

},{}],138:[function(require,module,exports){
'use strict';

var ToNumber = require('./ToNumber');
var ToPrimitive = require('./ToPrimitive');
var Type = require('./Type');

// https://262.ecma-international.org/5.1/#sec-11.9.3

module.exports = function AbstractEqualityComparison(x, y) {
	var xType = Type(x);
	var yType = Type(y);
	if (xType === yType) {
		return x === y; // ES6+ specified this shortcut anyways.
	}
	if (x == null && y == null) {
		return true;
	}
	if (xType === 'Number' && yType === 'String') {
		return AbstractEqualityComparison(x, ToNumber(y));
	}
	if (xType === 'String' && yType === 'Number') {
		return AbstractEqualityComparison(ToNumber(x), y);
	}
	if (xType === 'Boolean') {
		return AbstractEqualityComparison(ToNumber(x), y);
	}
	if (yType === 'Boolean') {
		return AbstractEqualityComparison(x, ToNumber(y));
	}
	if ((xType === 'String' || xType === 'Number') && yType === 'Object') {
		return AbstractEqualityComparison(x, ToPrimitive(y));
	}
	if (xType === 'Object' && (yType === 'String' || yType === 'Number')) {
		return AbstractEqualityComparison(ToPrimitive(x), y);
	}
	return false;
};

},{"./ToNumber":169,"./ToPrimitive":171,"./Type":176}],139:[function(require,module,exports){
'use strict';

var GetIntrinsic = require('get-intrinsic');

var $Number = GetIntrinsic('%Number%');
var $TypeError = require('es-errors/type');

var $isNaN = require('../helpers/isNaN');
var $isFinite = require('../helpers/isFinite');
var isPrefixOf = require('../helpers/isPrefixOf');

var ToNumber = require('./ToNumber');
var ToPrimitive = require('./ToPrimitive');

// https://262.ecma-international.org/5.1/#sec-11.8.5

// eslint-disable-next-line max-statements
module.exports = function AbstractRelationalComparison(x, y, LeftFirst) {
	if (typeof LeftFirst !== 'boolean') {
		throw new $TypeError('Assertion failed: LeftFirst argument must be a Boolean');
	}
	var px;
	var py;
	if (LeftFirst) {
		px = ToPrimitive(x, $Number);
		py = ToPrimitive(y, $Number);
	} else {
		py = ToPrimitive(y, $Number);
		px = ToPrimitive(x, $Number);
	}
	var bothStrings = typeof px === 'string' && typeof py === 'string';
	if (!bothStrings) {
		var nx = ToNumber(px);
		var ny = ToNumber(py);
		if ($isNaN(nx) || $isNaN(ny)) {
			return undefined;
		}
		if ($isFinite(nx) && $isFinite(ny) && nx === ny) {
			return false;
		}
		if (nx === Infinity) {
			return false;
		}
		if (ny === Infinity) {
			return true;
		}
		if (ny === -Infinity) {
			return false;
		}
		if (nx === -Infinity) {
			return true;
		}
		return nx < ny; // by now, these are both nonzero, finite, and not equal
	}
	if (isPrefixOf(py, px)) {
		return false;
	}
	if (isPrefixOf(px, py)) {
		return true;
	}
	return px < py; // both strings, neither a prefix of the other. shortcut for steps c-f
};

},{"../helpers/isFinite":184,"../helpers/isNaN":185,"../helpers/isPrefixOf":186,"./ToNumber":169,"./ToPrimitive":171,"es-errors/type":197,"get-intrinsic":206}],140:[function(require,module,exports){
'use strict';

var $TypeError = require('es-errors/type');

var callBound = require('call-bind/callBound');

var $charCodeAt = callBound('String.prototype.charCodeAt');
var $toUpperCase = callBound('String.prototype.toUpperCase');

// https://262.ecma-international.org/5.1/#sec-15.10.2.8

module.exports = function Canonicalize(ch, IgnoreCase) {
	if (typeof ch !== 'string' || ch.length !== 1) {
		throw new $TypeError('Assertion failed: `ch` must be a character');
	}

	if (typeof IgnoreCase !== 'boolean') {
		throw new $TypeError('Assertion failed: `IgnoreCase` must be a Boolean');
	}

	if (!IgnoreCase) {
		return ch; // step 1
	}

	var u = $toUpperCase(ch); // step 2

	if (u.length !== 1) {
		return ch; // step 3
	}

	var cu = u; // step 4

	if ($charCodeAt(ch, 0) >= 128 && $charCodeAt(cu, 0) < 128) {
		return ch; // step 5
	}

	return cu;
};

},{"call-bind/callBound":130,"es-errors/type":197}],141:[function(require,module,exports){
'use strict';

var RequireObjectCoercible = require('es-object-atoms/RequireObjectCoercible');

// http://262.ecma-international.org/5.1/#sec-9.10

module.exports = function CheckObjectCoercible(value) {
	return RequireObjectCoercible(value, arguments.length > 1 ? arguments[1] : void undefined);
};

},{"es-object-atoms/RequireObjectCoercible":199}],142:[function(require,module,exports){
'use strict';

var $EvalError = require('es-errors/eval');

var DayWithinYear = require('./DayWithinYear');
var InLeapYear = require('./InLeapYear');
var MonthFromTime = require('./MonthFromTime');

// https://262.ecma-international.org/5.1/#sec-15.9.1.5

module.exports = function DateFromTime(t) {
	var m = MonthFromTime(t);
	var d = DayWithinYear(t);
	if (m === 0) {
		return d + 1;
	}
	if (m === 1) {
		return d - 30;
	}
	var leap = InLeapYear(t);
	if (m === 2) {
		return d - 58 - leap;
	}
	if (m === 3) {
		return d - 89 - leap;
	}
	if (m === 4) {
		return d - 119 - leap;
	}
	if (m === 5) {
		return d - 150 - leap;
	}
	if (m === 6) {
		return d - 180 - leap;
	}
	if (m === 7) {
		return d - 211 - leap;
	}
	if (m === 8) {
		return d - 242 - leap;
	}
	if (m === 9) {
		return d - 272 - leap;
	}
	if (m === 10) {
		return d - 303 - leap;
	}
	if (m === 11) {
		return d - 333 - leap;
	}
	throw new $EvalError('Assertion failed: MonthFromTime returned an impossible value: ' + m);
};

},{"./DayWithinYear":145,"./InLeapYear":149,"./MonthFromTime":159,"es-errors/eval":192}],143:[function(require,module,exports){
'use strict';

var floor = require('./floor');

var msPerDay = require('../helpers/timeConstants').msPerDay;

// https://262.ecma-international.org/5.1/#sec-15.9.1.2

module.exports = function Day(t) {
	return floor(t / msPerDay);
};

},{"../helpers/timeConstants":190,"./floor":180}],144:[function(require,module,exports){
'use strict';

var floor = require('./floor');

// https://262.ecma-international.org/5.1/#sec-15.9.1.3

module.exports = function DayFromYear(y) {
	return (365 * (y - 1970)) + floor((y - 1969) / 4) - floor((y - 1901) / 100) + floor((y - 1601) / 400);
};


},{"./floor":180}],145:[function(require,module,exports){
'use strict';

var Day = require('./Day');
var DayFromYear = require('./DayFromYear');
var YearFromTime = require('./YearFromTime');

// https://262.ecma-international.org/5.1/#sec-15.9.1.4

module.exports = function DayWithinYear(t) {
	return Day(t) - DayFromYear(YearFromTime(t));
};

},{"./Day":143,"./DayFromYear":144,"./YearFromTime":178}],146:[function(require,module,exports){
'use strict';

var modulo = require('./modulo');

// https://262.ecma-international.org/5.1/#sec-15.9.1.3

module.exports = function DaysInYear(y) {
	if (modulo(y, 4) !== 0) {
		return 365;
	}
	if (modulo(y, 100) !== 0) {
		return 366;
	}
	if (modulo(y, 400) !== 0) {
		return 365;
	}
	return 366;
};

},{"./modulo":181}],147:[function(require,module,exports){
'use strict';

var $TypeError = require('es-errors/type');

var IsDataDescriptor = require('./IsDataDescriptor');
var IsAccessorDescriptor = require('./IsAccessorDescriptor');

var isPropertyDescriptor = require('../helpers/records/property-descriptor');

// https://262.ecma-international.org/5.1/#sec-8.10.4

module.exports = function FromPropertyDescriptor(Desc) {
	if (typeof Desc === 'undefined') {
		return Desc;
	}

	if (!isPropertyDescriptor(Desc)) {
		throw new $TypeError('Assertion failed: `Desc` must be a Property Descriptor');
	}

	if (IsDataDescriptor(Desc)) {
		return {
			value: Desc['[[Value]]'],
			writable: !!Desc['[[Writable]]'],
			enumerable: !!Desc['[[Enumerable]]'],
			configurable: !!Desc['[[Configurable]]']
		};
	} else if (IsAccessorDescriptor(Desc)) {
		return {
			get: Desc['[[Get]]'],
			set: Desc['[[Set]]'],
			enumerable: !!Desc['[[Enumerable]]'],
			configurable: !!Desc['[[Configurable]]']
		};
	}
	throw new $TypeError('FromPropertyDescriptor must be called with a fully populated Property Descriptor');

};

},{"../helpers/records/property-descriptor":188,"./IsAccessorDescriptor":150,"./IsDataDescriptor":152,"es-errors/type":197}],148:[function(require,module,exports){
'use strict';

var floor = require('./floor');
var modulo = require('./modulo');

var timeConstants = require('../helpers/timeConstants');
var msPerHour = timeConstants.msPerHour;
var HoursPerDay = timeConstants.HoursPerDay;

// https://262.ecma-international.org/5.1/#sec-15.9.1.10

module.exports = function HourFromTime(t) {
	return modulo(floor(t / msPerHour), HoursPerDay);
};

},{"../helpers/timeConstants":190,"./floor":180,"./modulo":181}],149:[function(require,module,exports){
'use strict';

var $EvalError = require('es-errors/eval');

var DaysInYear = require('./DaysInYear');
var YearFromTime = require('./YearFromTime');

// https://262.ecma-international.org/5.1/#sec-15.9.1.3

module.exports = function InLeapYear(t) {
	var days = DaysInYear(YearFromTime(t));
	if (days === 365) {
		return 0;
	}
	if (days === 366) {
		return 1;
	}
	throw new $EvalError('Assertion failed: there are not 365 or 366 days in a year, got: ' + days);
};

},{"./DaysInYear":146,"./YearFromTime":178,"es-errors/eval":192}],150:[function(require,module,exports){
'use strict';

var $TypeError = require('es-errors/type');

var hasOwn = require('hasown');

var isPropertyDescriptor = require('../helpers/records/property-descriptor');

// https://262.ecma-international.org/5.1/#sec-8.10.1

module.exports = function IsAccessorDescriptor(Desc) {
	if (typeof Desc === 'undefined') {
		return false;
	}

	if (!isPropertyDescriptor(Desc)) {
		throw new $TypeError('Assertion failed: `Desc` must be a Property Descriptor');
	}

	if (!hasOwn(Desc, '[[Get]]') && !hasOwn(Desc, '[[Set]]')) {
		return false;
	}

	return true;
};

},{"../helpers/records/property-descriptor":188,"es-errors/type":197,"hasown":214}],151:[function(require,module,exports){
'use strict';

// http://262.ecma-international.org/5.1/#sec-9.11

module.exports = require('is-callable');

},{"is-callable":217}],152:[function(require,module,exports){
'use strict';

var $TypeError = require('es-errors/type');

var hasOwn = require('hasown');

var isPropertyDescriptor = require('../helpers/records/property-descriptor');

// https://262.ecma-international.org/5.1/#sec-8.10.2

module.exports = function IsDataDescriptor(Desc) {
	if (typeof Desc === 'undefined') {
		return false;
	}

	if (!isPropertyDescriptor(Desc)) {
		throw new $TypeError('Assertion failed: `Desc` must be a Property Descriptor');
	}

	if (!hasOwn(Desc, '[[Value]]') && !hasOwn(Desc, '[[Writable]]')) {
		return false;
	}

	return true;
};

},{"../helpers/records/property-descriptor":188,"es-errors/type":197,"hasown":214}],153:[function(require,module,exports){
'use strict';

var $TypeError = require('es-errors/type');

var IsAccessorDescriptor = require('./IsAccessorDescriptor');
var IsDataDescriptor = require('./IsDataDescriptor');

var isPropertyDescriptor = require('./IsPropertyDescriptor');

// https://262.ecma-international.org/5.1/#sec-8.10.3

module.exports = function IsGenericDescriptor(Desc) {
	if (typeof Desc === 'undefined') {
		return false;
	}

	if (!isPropertyDescriptor(Desc)) {
		throw new $TypeError('Assertion failed: `Desc` must be a Property Descriptor');
	}

	if (!IsAccessorDescriptor(Desc) && !IsDataDescriptor(Desc)) {
		return true;
	}

	return false;
};

},{"./IsAccessorDescriptor":150,"./IsDataDescriptor":152,"./IsPropertyDescriptor":154,"es-errors/type":197}],154:[function(require,module,exports){
'use strict';

// TODO, semver-major: delete this

var isPropertyDescriptor = require('../helpers/records/property-descriptor');

// https://262.ecma-international.org/6.0/#sec-property-descriptor-specification-type

module.exports = function IsPropertyDescriptor(Desc) {
	return isPropertyDescriptor(Desc);
};

},{"../helpers/records/property-descriptor":188}],155:[function(require,module,exports){
'use strict';

var $isFinite = require('../helpers/isFinite');
var msPerDay = require('../helpers/timeConstants').msPerDay;

// https://262.ecma-international.org/5.1/#sec-15.9.1.13

module.exports = function MakeDate(day, time) {
	if (!$isFinite(day) || !$isFinite(time)) {
		return NaN;
	}
	return (day * msPerDay) + time;
};

},{"../helpers/isFinite":184,"../helpers/timeConstants":190}],156:[function(require,module,exports){
'use strict';

var GetIntrinsic = require('get-intrinsic');

var $DateUTC = GetIntrinsic('%Date.UTC%');

var $isFinite = require('../helpers/isFinite');

var DateFromTime = require('./DateFromTime');
var Day = require('./Day');
var floor = require('./floor');
var modulo = require('./modulo');
var MonthFromTime = require('./MonthFromTime');
var ToInteger = require('./ToInteger');
var YearFromTime = require('./YearFromTime');

// https://262.ecma-international.org/5.1/#sec-15.9.1.12

module.exports = function MakeDay(year, month, date) {
	if (!$isFinite(year) || !$isFinite(month) || !$isFinite(date)) {
		return NaN;
	}
	var y = ToInteger(year);
	var m = ToInteger(month);
	var dt = ToInteger(date);
	var ym = y + floor(m / 12);
	var mn = modulo(m, 12);
	var t = $DateUTC(ym, mn, 1);
	if (YearFromTime(t) !== ym || MonthFromTime(t) !== mn || DateFromTime(t) !== 1) {
		return NaN;
	}
	return Day(t) + dt - 1;
};

},{"../helpers/isFinite":184,"./DateFromTime":142,"./Day":143,"./MonthFromTime":159,"./ToInteger":168,"./YearFromTime":178,"./floor":180,"./modulo":181,"get-intrinsic":206}],157:[function(require,module,exports){
'use strict';

var $isFinite = require('../helpers/isFinite');
var timeConstants = require('../helpers/timeConstants');
var msPerSecond = timeConstants.msPerSecond;
var msPerMinute = timeConstants.msPerMinute;
var msPerHour = timeConstants.msPerHour;

var ToInteger = require('./ToInteger');

// https://262.ecma-international.org/5.1/#sec-15.9.1.11

module.exports = function MakeTime(hour, min, sec, ms) {
	if (!$isFinite(hour) || !$isFinite(min) || !$isFinite(sec) || !$isFinite(ms)) {
		return NaN;
	}
	var h = ToInteger(hour);
	var m = ToInteger(min);
	var s = ToInteger(sec);
	var milli = ToInteger(ms);
	var t = (h * msPerHour) + (m * msPerMinute) + (s * msPerSecond) + milli;
	return t;
};

},{"../helpers/isFinite":184,"../helpers/timeConstants":190,"./ToInteger":168}],158:[function(require,module,exports){
'use strict';

var floor = require('./floor');
var modulo = require('./modulo');

var timeConstants = require('../helpers/timeConstants');
var msPerMinute = timeConstants.msPerMinute;
var MinutesPerHour = timeConstants.MinutesPerHour;

// https://262.ecma-international.org/5.1/#sec-15.9.1.10

module.exports = function MinFromTime(t) {
	return modulo(floor(t / msPerMinute), MinutesPerHour);
};

},{"../helpers/timeConstants":190,"./floor":180,"./modulo":181}],159:[function(require,module,exports){
'use strict';

var DayWithinYear = require('./DayWithinYear');
var InLeapYear = require('./InLeapYear');

// https://262.ecma-international.org/5.1/#sec-15.9.1.4

module.exports = function MonthFromTime(t) {
	var day = DayWithinYear(t);
	if (0 <= day && day < 31) {
		return 0;
	}
	var leap = InLeapYear(t);
	if (31 <= day && day < (59 + leap)) {
		return 1;
	}
	if ((59 + leap) <= day && day < (90 + leap)) {
		return 2;
	}
	if ((90 + leap) <= day && day < (120 + leap)) {
		return 3;
	}
	if ((120 + leap) <= day && day < (151 + leap)) {
		return 4;
	}
	if ((151 + leap) <= day && day < (181 + leap)) {
		return 5;
	}
	if ((181 + leap) <= day && day < (212 + leap)) {
		return 6;
	}
	if ((212 + leap) <= day && day < (243 + leap)) {
		return 7;
	}
	if ((243 + leap) <= day && day < (273 + leap)) {
		return 8;
	}
	if ((273 + leap) <= day && day < (304 + leap)) {
		return 9;
	}
	if ((304 + leap) <= day && day < (334 + leap)) {
		return 10;
	}
	if ((334 + leap) <= day && day < (365 + leap)) {
		return 11;
	}
};

},{"./DayWithinYear":145,"./InLeapYear":149}],160:[function(require,module,exports){
'use strict';

var $isNaN = require('../helpers/isNaN');

// http://262.ecma-international.org/5.1/#sec-9.12

module.exports = function SameValue(x, y) {
	if (x === y) { // 0 === -0, but they are not identical.
		if (x === 0) { return 1 / x === 1 / y; }
		return true;
	}
	return $isNaN(x) && $isNaN(y);
};

},{"../helpers/isNaN":185}],161:[function(require,module,exports){
'use strict';

var floor = require('./floor');
var modulo = require('./modulo');

var timeConstants = require('../helpers/timeConstants');
var msPerSecond = timeConstants.msPerSecond;
var SecondsPerMinute = timeConstants.SecondsPerMinute;

// https://262.ecma-international.org/5.1/#sec-15.9.1.10

module.exports = function SecFromTime(t) {
	return modulo(floor(t / msPerSecond), SecondsPerMinute);
};

},{"../helpers/timeConstants":190,"./floor":180,"./modulo":181}],162:[function(require,module,exports){
'use strict';

var Type = require('./Type');

// https://262.ecma-international.org/5.1/#sec-11.9.6

module.exports = function StrictEqualityComparison(x, y) {
	var xType = Type(x);
	var yType = Type(y);
	if (xType !== yType) {
		return false;
	}
	if (xType === 'Undefined' || xType === 'Null') {
		return true;
	}
	return x === y; // shortcut for steps 4-7
};

},{"./Type":176}],163:[function(require,module,exports){
'use strict';

var GetIntrinsic = require('get-intrinsic');

var $Date = GetIntrinsic('%Date%');
var $Number = GetIntrinsic('%Number%');

var $isFinite = require('../helpers/isFinite');

var abs = require('./abs');
var ToNumber = require('./ToNumber');

// https://262.ecma-international.org/5.1/#sec-15.9.1.14

module.exports = function TimeClip(time) {
	if (!$isFinite(time) || abs(time) > 8.64e15) {
		return NaN;
	}
	return $Number(new $Date(ToNumber(time)));
};


},{"../helpers/isFinite":184,"./ToNumber":169,"./abs":179,"get-intrinsic":206}],164:[function(require,module,exports){
'use strict';

var msPerDay = require('../helpers/timeConstants').msPerDay;

var DayFromYear = require('./DayFromYear');

// https://262.ecma-international.org/5.1/#sec-15.9.1.3

module.exports = function TimeFromYear(y) {
	return msPerDay * DayFromYear(y);
};

},{"../helpers/timeConstants":190,"./DayFromYear":144}],165:[function(require,module,exports){
'use strict';

var modulo = require('./modulo');

var msPerDay = require('../helpers/timeConstants').msPerDay;

// https://262.ecma-international.org/5.1/#sec-15.9.1.2

module.exports = function TimeWithinDay(t) {
	return modulo(t, msPerDay);
};


},{"../helpers/timeConstants":190,"./modulo":181}],166:[function(require,module,exports){
'use strict';

// http://262.ecma-international.org/5.1/#sec-9.2

module.exports = function ToBoolean(value) { return !!value; };

},{}],167:[function(require,module,exports){
'use strict';

var ToNumber = require('./ToNumber');

// http://262.ecma-international.org/5.1/#sec-9.5

module.exports = function ToInt32(x) {
	return ToNumber(x) >> 0;
};

},{"./ToNumber":169}],168:[function(require,module,exports){
'use strict';

var abs = require('./abs');
var floor = require('./floor');
var ToNumber = require('./ToNumber');

var $isNaN = require('../helpers/isNaN');
var $isFinite = require('../helpers/isFinite');
var $sign = require('../helpers/sign');

// http://262.ecma-international.org/5.1/#sec-9.4

module.exports = function ToInteger(value) {
	var number = ToNumber(value);
	if ($isNaN(number)) { return 0; }
	if (number === 0 || !$isFinite(number)) { return number; }
	return $sign(number) * floor(abs(number));
};

},{"../helpers/isFinite":184,"../helpers/isNaN":185,"../helpers/sign":189,"./ToNumber":169,"./abs":179,"./floor":180}],169:[function(require,module,exports){
'use strict';

var ToPrimitive = require('./ToPrimitive');

var callBound = require('call-bind/callBound');

var $replace = callBound('String.prototype.replace');

var safeRegexTester = require('safe-regex-test');

var isNonDecimal = safeRegexTester(/^0[ob]|^[+-]0x/);

// http://262.ecma-international.org/5.1/#sec-9.3

module.exports = function ToNumber(value) {
	var prim = ToPrimitive(value, Number);
	if (typeof prim !== 'string') {
		return +prim; // eslint-disable-line no-implicit-coercion
	}

	var trimmed = $replace(
		prim,
		// eslint-disable-next-line no-control-regex
		/^[ \t\x0b\f\xa0\ufeff\n\r\u2028\u2029\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u0085]+|[ \t\x0b\f\xa0\ufeff\n\r\u2028\u2029\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u0085]+$/g,
		''
	);
	if (isNonDecimal(trimmed)) {
		return NaN;
	}

	return +trimmed; // eslint-disable-line no-implicit-coercion
};

},{"./ToPrimitive":171,"call-bind/callBound":130,"safe-regex-test":225}],170:[function(require,module,exports){
'use strict';

// http://262.ecma-international.org/5.1/#sec-9.9

module.exports = require('es-object-atoms/ToObject');

},{"es-object-atoms/ToObject":200}],171:[function(require,module,exports){
'use strict';

// http://262.ecma-international.org/5.1/#sec-9.1

module.exports = require('es-to-primitive/es5');

},{"es-to-primitive/es5":202}],172:[function(require,module,exports){
'use strict';

var hasOwn = require('hasown');

var $TypeError = require('es-errors/type');

var Type = require('./Type');
var ToBoolean = require('./ToBoolean');
var IsCallable = require('./IsCallable');

// https://262.ecma-international.org/5.1/#sec-8.10.5

module.exports = function ToPropertyDescriptor(Obj) {
	if (Type(Obj) !== 'Object') {
		throw new $TypeError('ToPropertyDescriptor requires an object');
	}

	var desc = {};
	if (hasOwn(Obj, 'enumerable')) {
		desc['[[Enumerable]]'] = ToBoolean(Obj.enumerable);
	}
	if (hasOwn(Obj, 'configurable')) {
		desc['[[Configurable]]'] = ToBoolean(Obj.configurable);
	}
	if (hasOwn(Obj, 'value')) {
		desc['[[Value]]'] = Obj.value;
	}
	if (hasOwn(Obj, 'writable')) {
		desc['[[Writable]]'] = ToBoolean(Obj.writable);
	}
	if (hasOwn(Obj, 'get')) {
		var getter = Obj.get;
		if (typeof getter !== 'undefined' && !IsCallable(getter)) {
			throw new $TypeError('getter must be a function');
		}
		desc['[[Get]]'] = getter;
	}
	if (hasOwn(Obj, 'set')) {
		var setter = Obj.set;
		if (typeof setter !== 'undefined' && !IsCallable(setter)) {
			throw new $TypeError('setter must be a function');
		}
		desc['[[Set]]'] = setter;
	}

	if ((hasOwn(desc, '[[Get]]') || hasOwn(desc, '[[Set]]')) && (hasOwn(desc, '[[Value]]') || hasOwn(desc, '[[Writable]]'))) {
		throw new $TypeError('Invalid property descriptor. Cannot both specify accessors and a value or writable attribute');
	}
	return desc;
};

},{"./IsCallable":151,"./ToBoolean":166,"./Type":176,"es-errors/type":197,"hasown":214}],173:[function(require,module,exports){
'use strict';

var GetIntrinsic = require('get-intrinsic');

var $String = GetIntrinsic('%String%');

// http://262.ecma-international.org/5.1/#sec-9.8

module.exports = function ToString(value) {
	return $String(value);
};


},{"get-intrinsic":206}],174:[function(require,module,exports){
'use strict';

var abs = require('./abs');
var floor = require('./floor');
var modulo = require('./modulo');
var ToNumber = require('./ToNumber');

var $isNaN = require('../helpers/isNaN');
var $isFinite = require('../helpers/isFinite');
var $sign = require('../helpers/sign');

// http://262.ecma-international.org/5.1/#sec-9.7

module.exports = function ToUint16(value) {
	var number = ToNumber(value);
	if ($isNaN(number) || number === 0 || !$isFinite(number)) { return 0; }
	var posInt = $sign(number) * floor(abs(number));
	return modulo(posInt, 0x10000);
};

},{"../helpers/isFinite":184,"../helpers/isNaN":185,"../helpers/sign":189,"./ToNumber":169,"./abs":179,"./floor":180,"./modulo":181}],175:[function(require,module,exports){
'use strict';

var ToNumber = require('./ToNumber');

// http://262.ecma-international.org/5.1/#sec-9.6

module.exports = function ToUint32(x) {
	return ToNumber(x) >>> 0;
};

},{"./ToNumber":169}],176:[function(require,module,exports){
'use strict';

// https://262.ecma-international.org/5.1/#sec-8

module.exports = function Type(x) {
	if (x === null) {
		return 'Null';
	}
	if (typeof x === 'undefined') {
		return 'Undefined';
	}
	if (typeof x === 'function' || typeof x === 'object') {
		return 'Object';
	}
	if (typeof x === 'number') {
		return 'Number';
	}
	if (typeof x === 'boolean') {
		return 'Boolean';
	}
	if (typeof x === 'string') {
		return 'String';
	}
};

},{}],177:[function(require,module,exports){
'use strict';

var Day = require('./Day');
var modulo = require('./modulo');

// https://262.ecma-international.org/5.1/#sec-15.9.1.6

module.exports = function WeekDay(t) {
	return modulo(Day(t) + 4, 7);
};

},{"./Day":143,"./modulo":181}],178:[function(require,module,exports){
'use strict';

var GetIntrinsic = require('get-intrinsic');

var $Date = GetIntrinsic('%Date%');

var callBound = require('call-bind/callBound');

var $getUTCFullYear = callBound('Date.prototype.getUTCFullYear');

// https://262.ecma-international.org/5.1/#sec-15.9.1.3

module.exports = function YearFromTime(t) {
	// largest y such that this.TimeFromYear(y) <= t
	return $getUTCFullYear(new $Date(t));
};

},{"call-bind/callBound":130,"get-intrinsic":206}],179:[function(require,module,exports){
'use strict';

var GetIntrinsic = require('get-intrinsic');

var $abs = GetIntrinsic('%Math.abs%');

// http://262.ecma-international.org/5.1/#sec-5.2

module.exports = function abs(x) {
	return $abs(x);
};

},{"get-intrinsic":206}],180:[function(require,module,exports){
'use strict';

// var modulo = require('./modulo');
var $floor = Math.floor;

// http://262.ecma-international.org/5.1/#sec-5.2

module.exports = function floor(x) {
	// return x - modulo(x, 1);
	return $floor(x);
};

},{}],181:[function(require,module,exports){
'use strict';

var mod = require('../helpers/mod');

// https://262.ecma-international.org/5.1/#sec-5.2

module.exports = function modulo(x, y) {
	return mod(x, y);
};

},{"../helpers/mod":187}],182:[function(require,module,exports){
'use strict';

var modulo = require('./modulo');

var msPerSecond = require('../helpers/timeConstants').msPerSecond;

// https://262.ecma-international.org/5.1/#sec-15.9.1.10

module.exports = function msFromTime(t) {
	return modulo(t, msPerSecond);
};

},{"../helpers/timeConstants":190,"./modulo":181}],183:[function(require,module,exports){
'use strict';

/* eslint global-require: 0 */

// https://es5.github.io/#x9
module.exports = {
	'Abstract Equality Comparison': require('./5/AbstractEqualityComparison'),
	'Abstract Relational Comparison': require('./5/AbstractRelationalComparison'),
	'Strict Equality Comparison': require('./5/StrictEqualityComparison'),
	abs: require('./5/abs'),
	Canonicalize: require('./5/Canonicalize'),
	CheckObjectCoercible: require('./5/CheckObjectCoercible'),
	DateFromTime: require('./5/DateFromTime'),
	Day: require('./5/Day'),
	DayFromYear: require('./5/DayFromYear'),
	DaysInYear: require('./5/DaysInYear'),
	DayWithinYear: require('./5/DayWithinYear'),
	floor: require('./5/floor'),
	FromPropertyDescriptor: require('./5/FromPropertyDescriptor'),
	HourFromTime: require('./5/HourFromTime'),
	InLeapYear: require('./5/InLeapYear'),
	IsAccessorDescriptor: require('./5/IsAccessorDescriptor'),
	IsCallable: require('./5/IsCallable'),
	IsDataDescriptor: require('./5/IsDataDescriptor'),
	IsGenericDescriptor: require('./5/IsGenericDescriptor'),
	IsPropertyDescriptor: require('./5/IsPropertyDescriptor'),
	MakeDate: require('./5/MakeDate'),
	MakeDay: require('./5/MakeDay'),
	MakeTime: require('./5/MakeTime'),
	MinFromTime: require('./5/MinFromTime'),
	modulo: require('./5/modulo'),
	MonthFromTime: require('./5/MonthFromTime'),
	msFromTime: require('./5/msFromTime'),
	SameValue: require('./5/SameValue'),
	SecFromTime: require('./5/SecFromTime'),
	TimeClip: require('./5/TimeClip'),
	TimeFromYear: require('./5/TimeFromYear'),
	TimeWithinDay: require('./5/TimeWithinDay'),
	ToBoolean: require('./5/ToBoolean'),
	ToInt32: require('./5/ToInt32'),
	ToInteger: require('./5/ToInteger'),
	ToNumber: require('./5/ToNumber'),
	ToObject: require('./5/ToObject'),
	ToPrimitive: require('./5/ToPrimitive'),
	ToPropertyDescriptor: require('./5/ToPropertyDescriptor'),
	ToString: require('./5/ToString'),
	ToUint16: require('./5/ToUint16'),
	ToUint32: require('./5/ToUint32'),
	Type: require('./5/Type'),
	WeekDay: require('./5/WeekDay'),
	YearFromTime: require('./5/YearFromTime')
};

},{"./5/AbstractEqualityComparison":138,"./5/AbstractRelationalComparison":139,"./5/Canonicalize":140,"./5/CheckObjectCoercible":141,"./5/DateFromTime":142,"./5/Day":143,"./5/DayFromYear":144,"./5/DayWithinYear":145,"./5/DaysInYear":146,"./5/FromPropertyDescriptor":147,"./5/HourFromTime":148,"./5/InLeapYear":149,"./5/IsAccessorDescriptor":150,"./5/IsCallable":151,"./5/IsDataDescriptor":152,"./5/IsGenericDescriptor":153,"./5/IsPropertyDescriptor":154,"./5/MakeDate":155,"./5/MakeDay":156,"./5/MakeTime":157,"./5/MinFromTime":158,"./5/MonthFromTime":159,"./5/SameValue":160,"./5/SecFromTime":161,"./5/StrictEqualityComparison":162,"./5/TimeClip":163,"./5/TimeFromYear":164,"./5/TimeWithinDay":165,"./5/ToBoolean":166,"./5/ToInt32":167,"./5/ToInteger":168,"./5/ToNumber":169,"./5/ToObject":170,"./5/ToPrimitive":171,"./5/ToPropertyDescriptor":172,"./5/ToString":173,"./5/ToUint16":174,"./5/ToUint32":175,"./5/Type":176,"./5/WeekDay":177,"./5/YearFromTime":178,"./5/abs":179,"./5/floor":180,"./5/modulo":181,"./5/msFromTime":182}],184:[function(require,module,exports){
'use strict';

var $isNaN = require('./isNaN');

module.exports = function (x) { return (typeof x === 'number' || typeof x === 'bigint') && !$isNaN(x) && x !== Infinity && x !== -Infinity; };

},{"./isNaN":185}],185:[function(require,module,exports){
'use strict';

module.exports = Number.isNaN || function isNaN(a) {
	return a !== a;
};

},{}],186:[function(require,module,exports){
'use strict';

var $strSlice = require('call-bind/callBound')('String.prototype.slice');

module.exports = function isPrefixOf(prefix, string) {
	if (prefix === string) {
		return true;
	}
	if (prefix.length > string.length) {
		return false;
	}
	return $strSlice(string, 0, prefix.length) === prefix;
};

},{"call-bind/callBound":130}],187:[function(require,module,exports){
'use strict';

var $floor = Math.floor;

module.exports = function mod(number, modulo) {
	var remain = number % modulo;
	return $floor(remain >= 0 ? remain : remain + modulo);
};

},{}],188:[function(require,module,exports){
'use strict';

var $TypeError = require('es-errors/type');

var hasOwn = require('hasown');

var allowed = {
	__proto__: null,
	'[[Configurable]]': true,
	'[[Enumerable]]': true,
	'[[Get]]': true,
	'[[Set]]': true,
	'[[Value]]': true,
	'[[Writable]]': true
};

// https://262.ecma-international.org/6.0/#sec-property-descriptor-specification-type

module.exports = function isPropertyDescriptor(Desc) {
	if (!Desc || typeof Desc !== 'object') {
		return false;
	}

	for (var key in Desc) { // eslint-disable-line
		if (hasOwn(Desc, key) && !allowed[key]) {
			return false;
		}
	}

	var isData = hasOwn(Desc, '[[Value]]') || hasOwn(Desc, '[[Writable]]');
	var IsAccessor = hasOwn(Desc, '[[Get]]') || hasOwn(Desc, '[[Set]]');
	if (isData && IsAccessor) {
		throw new $TypeError('Property Descriptors may not be both accessor and data descriptors');
	}
	return true;
};

},{"es-errors/type":197,"hasown":214}],189:[function(require,module,exports){
'use strict';

module.exports = function sign(number) {
	return number >= 0 ? 1 : -1;
};

},{}],190:[function(require,module,exports){
'use strict';

var HoursPerDay = 24;
var MinutesPerHour = 60;
var SecondsPerMinute = 60;
var msPerSecond = 1e3;
var msPerMinute = msPerSecond * SecondsPerMinute;
var msPerHour = msPerMinute * MinutesPerHour;
var msPerDay = 86400000;

module.exports = {
	HoursPerDay: HoursPerDay,
	MinutesPerHour: MinutesPerHour,
	SecondsPerMinute: SecondsPerMinute,
	msPerSecond: msPerSecond,
	msPerMinute: msPerMinute,
	msPerHour: msPerHour,
	msPerDay: msPerDay
};

},{}],191:[function(require,module,exports){
'use strict';

var GetIntrinsic = require('get-intrinsic');

/** @type {import('.')} */
var $defineProperty = GetIntrinsic('%Object.defineProperty%', true) || false;
if ($defineProperty) {
	try {
		$defineProperty({}, 'a', { value: 1 });
	} catch (e) {
		// IE 8 has a broken defineProperty
		$defineProperty = false;
	}
}

module.exports = $defineProperty;

},{"get-intrinsic":206}],192:[function(require,module,exports){
'use strict';

/** @type {import('./eval')} */
module.exports = EvalError;

},{}],193:[function(require,module,exports){
'use strict';

/** @type {import('.')} */
module.exports = Error;

},{}],194:[function(require,module,exports){
'use strict';

/** @type {import('./range')} */
module.exports = RangeError;

},{}],195:[function(require,module,exports){
'use strict';

/** @type {import('./ref')} */
module.exports = ReferenceError;

},{}],196:[function(require,module,exports){
'use strict';

/** @type {import('./syntax')} */
module.exports = SyntaxError;

},{}],197:[function(require,module,exports){
'use strict';

/** @type {import('./type')} */
module.exports = TypeError;

},{}],198:[function(require,module,exports){
'use strict';

/** @type {import('./uri')} */
module.exports = URIError;

},{}],199:[function(require,module,exports){
'use strict';

var $TypeError = require('es-errors/type');

/** @type {import('./RequireObjectCoercible')} */
module.exports = function RequireObjectCoercible(value) {
	if (value == null) {
		throw new $TypeError((arguments.length > 0 && arguments[1]) || ('Cannot call method on ' + value));
	}
	return value;
};

},{"es-errors/type":197}],200:[function(require,module,exports){
'use strict';

var $Object = require('./');
var RequireObjectCoercible = require('./RequireObjectCoercible');

/** @type {import('./ToObject')} */
module.exports = function ToObject(value) {
	RequireObjectCoercible(value);
	return $Object(value);
};

},{"./":201,"./RequireObjectCoercible":199}],201:[function(require,module,exports){
'use strict';

/** @type {import('.')} */
module.exports = Object;

},{}],202:[function(require,module,exports){
'use strict';

var toStr = Object.prototype.toString;

var isPrimitive = require('./helpers/isPrimitive');

var isCallable = require('is-callable');

// http://ecma-international.org/ecma-262/5.1/#sec-8.12.8
var ES5internalSlots = {
	'[[DefaultValue]]': function (O) {
		var actualHint;
		if (arguments.length > 1) {
			actualHint = arguments[1];
		} else {
			actualHint = toStr.call(O) === '[object Date]' ? String : Number;
		}

		if (actualHint === String || actualHint === Number) {
			var methods = actualHint === String ? ['toString', 'valueOf'] : ['valueOf', 'toString'];
			var value, i;
			for (i = 0; i < methods.length; ++i) {
				if (isCallable(O[methods[i]])) {
					value = O[methods[i]]();
					if (isPrimitive(value)) {
						return value;
					}
				}
			}
			throw new TypeError('No default value');
		}
		throw new TypeError('invalid [[DefaultValue]] hint supplied');
	}
};

// http://ecma-international.org/ecma-262/5.1/#sec-9.1
module.exports = function ToPrimitive(input) {
	if (isPrimitive(input)) {
		return input;
	}
	if (arguments.length > 1) {
		return ES5internalSlots['[[DefaultValue]]'](input, arguments[1]);
	}
	return ES5internalSlots['[[DefaultValue]]'](input);
};

},{"./helpers/isPrimitive":203,"is-callable":217}],203:[function(require,module,exports){
'use strict';

module.exports = function isPrimitive(value) {
	return value === null || (typeof value !== 'function' && typeof value !== 'object');
};

},{}],204:[function(require,module,exports){
'use strict';

/* eslint no-invalid-this: 1 */

var ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';
var toStr = Object.prototype.toString;
var max = Math.max;
var funcType = '[object Function]';

var concatty = function concatty(a, b) {
    var arr = [];

    for (var i = 0; i < a.length; i += 1) {
        arr[i] = a[i];
    }
    for (var j = 0; j < b.length; j += 1) {
        arr[j + a.length] = b[j];
    }

    return arr;
};

var slicy = function slicy(arrLike, offset) {
    var arr = [];
    for (var i = offset || 0, j = 0; i < arrLike.length; i += 1, j += 1) {
        arr[j] = arrLike[i];
    }
    return arr;
};

var joiny = function (arr, joiner) {
    var str = '';
    for (var i = 0; i < arr.length; i += 1) {
        str += arr[i];
        if (i + 1 < arr.length) {
            str += joiner;
        }
    }
    return str;
};

module.exports = function bind(that) {
    var target = this;
    if (typeof target !== 'function' || toStr.apply(target) !== funcType) {
        throw new TypeError(ERROR_MESSAGE + target);
    }
    var args = slicy(arguments, 1);

    var bound;
    var binder = function () {
        if (this instanceof bound) {
            var result = target.apply(
                this,
                concatty(args, arguments)
            );
            if (Object(result) === result) {
                return result;
            }
            return this;
        }
        return target.apply(
            that,
            concatty(args, arguments)
        );

    };

    var boundLength = max(0, target.length - args.length);
    var boundArgs = [];
    for (var i = 0; i < boundLength; i++) {
        boundArgs[i] = '$' + i;
    }

    bound = Function('binder', 'return function (' + joiny(boundArgs, ',') + '){ return binder.apply(this,arguments); }')(binder);

    if (target.prototype) {
        var Empty = function Empty() {};
        Empty.prototype = target.prototype;
        bound.prototype = new Empty();
        Empty.prototype = null;
    }

    return bound;
};

},{}],205:[function(require,module,exports){
'use strict';

var implementation = require('./implementation');

module.exports = Function.prototype.bind || implementation;

},{"./implementation":204}],206:[function(require,module,exports){
'use strict';

var undefined;

var $Error = require('es-errors');
var $EvalError = require('es-errors/eval');
var $RangeError = require('es-errors/range');
var $ReferenceError = require('es-errors/ref');
var $SyntaxError = require('es-errors/syntax');
var $TypeError = require('es-errors/type');
var $URIError = require('es-errors/uri');

var $Function = Function;

// eslint-disable-next-line consistent-return
var getEvalledConstructor = function (expressionSyntax) {
	try {
		return $Function('"use strict"; return (' + expressionSyntax + ').constructor;')();
	} catch (e) {}
};

var $gOPD = Object.getOwnPropertyDescriptor;
if ($gOPD) {
	try {
		$gOPD({}, '');
	} catch (e) {
		$gOPD = null; // this is IE 8, which has a broken gOPD
	}
}

var throwTypeError = function () {
	throw new $TypeError();
};
var ThrowTypeError = $gOPD
	? (function () {
		try {
			// eslint-disable-next-line no-unused-expressions, no-caller, no-restricted-properties
			arguments.callee; // IE 8 does not throw here
			return throwTypeError;
		} catch (calleeThrows) {
			try {
				// IE 8 throws on Object.getOwnPropertyDescriptor(arguments, '')
				return $gOPD(arguments, 'callee').get;
			} catch (gOPDthrows) {
				return throwTypeError;
			}
		}
	}())
	: throwTypeError;

var hasSymbols = require('has-symbols')();
var hasProto = require('has-proto')();

var getProto = Object.getPrototypeOf || (
	hasProto
		? function (x) { return x.__proto__; } // eslint-disable-line no-proto
		: null
);

var needsEval = {};

var TypedArray = typeof Uint8Array === 'undefined' || !getProto ? undefined : getProto(Uint8Array);

var INTRINSICS = {
	__proto__: null,
	'%AggregateError%': typeof AggregateError === 'undefined' ? undefined : AggregateError,
	'%Array%': Array,
	'%ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,
	'%ArrayIteratorPrototype%': hasSymbols && getProto ? getProto([][Symbol.iterator]()) : undefined,
	'%AsyncFromSyncIteratorPrototype%': undefined,
	'%AsyncFunction%': needsEval,
	'%AsyncGenerator%': needsEval,
	'%AsyncGeneratorFunction%': needsEval,
	'%AsyncIteratorPrototype%': needsEval,
	'%Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,
	'%BigInt%': typeof BigInt === 'undefined' ? undefined : BigInt,
	'%BigInt64Array%': typeof BigInt64Array === 'undefined' ? undefined : BigInt64Array,
	'%BigUint64Array%': typeof BigUint64Array === 'undefined' ? undefined : BigUint64Array,
	'%Boolean%': Boolean,
	'%DataView%': typeof DataView === 'undefined' ? undefined : DataView,
	'%Date%': Date,
	'%decodeURI%': decodeURI,
	'%decodeURIComponent%': decodeURIComponent,
	'%encodeURI%': encodeURI,
	'%encodeURIComponent%': encodeURIComponent,
	'%Error%': $Error,
	'%eval%': eval, // eslint-disable-line no-eval
	'%EvalError%': $EvalError,
	'%Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,
	'%Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,
	'%FinalizationRegistry%': typeof FinalizationRegistry === 'undefined' ? undefined : FinalizationRegistry,
	'%Function%': $Function,
	'%GeneratorFunction%': needsEval,
	'%Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,
	'%Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,
	'%Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,
	'%isFinite%': isFinite,
	'%isNaN%': isNaN,
	'%IteratorPrototype%': hasSymbols && getProto ? getProto(getProto([][Symbol.iterator]())) : undefined,
	'%JSON%': typeof JSON === 'object' ? JSON : undefined,
	'%Map%': typeof Map === 'undefined' ? undefined : Map,
	'%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols || !getProto ? undefined : getProto(new Map()[Symbol.iterator]()),
	'%Math%': Math,
	'%Number%': Number,
	'%Object%': Object,
	'%parseFloat%': parseFloat,
	'%parseInt%': parseInt,
	'%Promise%': typeof Promise === 'undefined' ? undefined : Promise,
	'%Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,
	'%RangeError%': $RangeError,
	'%ReferenceError%': $ReferenceError,
	'%Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,
	'%RegExp%': RegExp,
	'%Set%': typeof Set === 'undefined' ? undefined : Set,
	'%SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols || !getProto ? undefined : getProto(new Set()[Symbol.iterator]()),
	'%SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,
	'%String%': String,
	'%StringIteratorPrototype%': hasSymbols && getProto ? getProto(''[Symbol.iterator]()) : undefined,
	'%Symbol%': hasSymbols ? Symbol : undefined,
	'%SyntaxError%': $SyntaxError,
	'%ThrowTypeError%': ThrowTypeError,
	'%TypedArray%': TypedArray,
	'%TypeError%': $TypeError,
	'%Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,
	'%Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,
	'%Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,
	'%Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,
	'%URIError%': $URIError,
	'%WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,
	'%WeakRef%': typeof WeakRef === 'undefined' ? undefined : WeakRef,
	'%WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet
};

if (getProto) {
	try {
		null.error; // eslint-disable-line no-unused-expressions
	} catch (e) {
		// https://github.com/tc39/proposal-shadowrealm/pull/384#issuecomment-1364264229
		var errorProto = getProto(getProto(e));
		INTRINSICS['%Error.prototype%'] = errorProto;
	}
}

var doEval = function doEval(name) {
	var value;
	if (name === '%AsyncFunction%') {
		value = getEvalledConstructor('async function () {}');
	} else if (name === '%GeneratorFunction%') {
		value = getEvalledConstructor('function* () {}');
	} else if (name === '%AsyncGeneratorFunction%') {
		value = getEvalledConstructor('async function* () {}');
	} else if (name === '%AsyncGenerator%') {
		var fn = doEval('%AsyncGeneratorFunction%');
		if (fn) {
			value = fn.prototype;
		}
	} else if (name === '%AsyncIteratorPrototype%') {
		var gen = doEval('%AsyncGenerator%');
		if (gen && getProto) {
			value = getProto(gen.prototype);
		}
	}

	INTRINSICS[name] = value;

	return value;
};

var LEGACY_ALIASES = {
	__proto__: null,
	'%ArrayBufferPrototype%': ['ArrayBuffer', 'prototype'],
	'%ArrayPrototype%': ['Array', 'prototype'],
	'%ArrayProto_entries%': ['Array', 'prototype', 'entries'],
	'%ArrayProto_forEach%': ['Array', 'prototype', 'forEach'],
	'%ArrayProto_keys%': ['Array', 'prototype', 'keys'],
	'%ArrayProto_values%': ['Array', 'prototype', 'values'],
	'%AsyncFunctionPrototype%': ['AsyncFunction', 'prototype'],
	'%AsyncGenerator%': ['AsyncGeneratorFunction', 'prototype'],
	'%AsyncGeneratorPrototype%': ['AsyncGeneratorFunction', 'prototype', 'prototype'],
	'%BooleanPrototype%': ['Boolean', 'prototype'],
	'%DataViewPrototype%': ['DataView', 'prototype'],
	'%DatePrototype%': ['Date', 'prototype'],
	'%ErrorPrototype%': ['Error', 'prototype'],
	'%EvalErrorPrototype%': ['EvalError', 'prototype'],
	'%Float32ArrayPrototype%': ['Float32Array', 'prototype'],
	'%Float64ArrayPrototype%': ['Float64Array', 'prototype'],
	'%FunctionPrototype%': ['Function', 'prototype'],
	'%Generator%': ['GeneratorFunction', 'prototype'],
	'%GeneratorPrototype%': ['GeneratorFunction', 'prototype', 'prototype'],
	'%Int8ArrayPrototype%': ['Int8Array', 'prototype'],
	'%Int16ArrayPrototype%': ['Int16Array', 'prototype'],
	'%Int32ArrayPrototype%': ['Int32Array', 'prototype'],
	'%JSONParse%': ['JSON', 'parse'],
	'%JSONStringify%': ['JSON', 'stringify'],
	'%MapPrototype%': ['Map', 'prototype'],
	'%NumberPrototype%': ['Number', 'prototype'],
	'%ObjectPrototype%': ['Object', 'prototype'],
	'%ObjProto_toString%': ['Object', 'prototype', 'toString'],
	'%ObjProto_valueOf%': ['Object', 'prototype', 'valueOf'],
	'%PromisePrototype%': ['Promise', 'prototype'],
	'%PromiseProto_then%': ['Promise', 'prototype', 'then'],
	'%Promise_all%': ['Promise', 'all'],
	'%Promise_reject%': ['Promise', 'reject'],
	'%Promise_resolve%': ['Promise', 'resolve'],
	'%RangeErrorPrototype%': ['RangeError', 'prototype'],
	'%ReferenceErrorPrototype%': ['ReferenceError', 'prototype'],
	'%RegExpPrototype%': ['RegExp', 'prototype'],
	'%SetPrototype%': ['Set', 'prototype'],
	'%SharedArrayBufferPrototype%': ['SharedArrayBuffer', 'prototype'],
	'%StringPrototype%': ['String', 'prototype'],
	'%SymbolPrototype%': ['Symbol', 'prototype'],
	'%SyntaxErrorPrototype%': ['SyntaxError', 'prototype'],
	'%TypedArrayPrototype%': ['TypedArray', 'prototype'],
	'%TypeErrorPrototype%': ['TypeError', 'prototype'],
	'%Uint8ArrayPrototype%': ['Uint8Array', 'prototype'],
	'%Uint8ClampedArrayPrototype%': ['Uint8ClampedArray', 'prototype'],
	'%Uint16ArrayPrototype%': ['Uint16Array', 'prototype'],
	'%Uint32ArrayPrototype%': ['Uint32Array', 'prototype'],
	'%URIErrorPrototype%': ['URIError', 'prototype'],
	'%WeakMapPrototype%': ['WeakMap', 'prototype'],
	'%WeakSetPrototype%': ['WeakSet', 'prototype']
};

var bind = require('function-bind');
var hasOwn = require('hasown');
var $concat = bind.call(Function.call, Array.prototype.concat);
var $spliceApply = bind.call(Function.apply, Array.prototype.splice);
var $replace = bind.call(Function.call, String.prototype.replace);
var $strSlice = bind.call(Function.call, String.prototype.slice);
var $exec = bind.call(Function.call, RegExp.prototype.exec);

/* adapted from https://github.com/lodash/lodash/blob/4.17.15/dist/lodash.js#L6735-L6744 */
var rePropName = /[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g;
var reEscapeChar = /\\(\\)?/g; /** Used to match backslashes in property paths. */
var stringToPath = function stringToPath(string) {
	var first = $strSlice(string, 0, 1);
	var last = $strSlice(string, -1);
	if (first === '%' && last !== '%') {
		throw new $SyntaxError('invalid intrinsic syntax, expected closing `%`');
	} else if (last === '%' && first !== '%') {
		throw new $SyntaxError('invalid intrinsic syntax, expected opening `%`');
	}
	var result = [];
	$replace(string, rePropName, function (match, number, quote, subString) {
		result[result.length] = quote ? $replace(subString, reEscapeChar, '$1') : number || match;
	});
	return result;
};
/* end adaptation */

var getBaseIntrinsic = function getBaseIntrinsic(name, allowMissing) {
	var intrinsicName = name;
	var alias;
	if (hasOwn(LEGACY_ALIASES, intrinsicName)) {
		alias = LEGACY_ALIASES[intrinsicName];
		intrinsicName = '%' + alias[0] + '%';
	}

	if (hasOwn(INTRINSICS, intrinsicName)) {
		var value = INTRINSICS[intrinsicName];
		if (value === needsEval) {
			value = doEval(intrinsicName);
		}
		if (typeof value === 'undefined' && !allowMissing) {
			throw new $TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');
		}

		return {
			alias: alias,
			name: intrinsicName,
			value: value
		};
	}

	throw new $SyntaxError('intrinsic ' + name + ' does not exist!');
};

module.exports = function GetIntrinsic(name, allowMissing) {
	if (typeof name !== 'string' || name.length === 0) {
		throw new $TypeError('intrinsic name must be a non-empty string');
	}
	if (arguments.length > 1 && typeof allowMissing !== 'boolean') {
		throw new $TypeError('"allowMissing" argument must be a boolean');
	}

	if ($exec(/^%?[^%]*%?$/, name) === null) {
		throw new $SyntaxError('`%` may not be present anywhere but at the beginning and end of the intrinsic name');
	}
	var parts = stringToPath(name);
	var intrinsicBaseName = parts.length > 0 ? parts[0] : '';

	var intrinsic = getBaseIntrinsic('%' + intrinsicBaseName + '%', allowMissing);
	var intrinsicRealName = intrinsic.name;
	var value = intrinsic.value;
	var skipFurtherCaching = false;

	var alias = intrinsic.alias;
	if (alias) {
		intrinsicBaseName = alias[0];
		$spliceApply(parts, $concat([0, 1], alias));
	}

	for (var i = 1, isOwn = true; i < parts.length; i += 1) {
		var part = parts[i];
		var first = $strSlice(part, 0, 1);
		var last = $strSlice(part, -1);
		if (
			(
				(first === '"' || first === "'" || first === '`')
				|| (last === '"' || last === "'" || last === '`')
			)
			&& first !== last
		) {
			throw new $SyntaxError('property names with quotes must have matching quotes');
		}
		if (part === 'constructor' || !isOwn) {
			skipFurtherCaching = true;
		}

		intrinsicBaseName += '.' + part;
		intrinsicRealName = '%' + intrinsicBaseName + '%';

		if (hasOwn(INTRINSICS, intrinsicRealName)) {
			value = INTRINSICS[intrinsicRealName];
		} else if (value != null) {
			if (!(part in value)) {
				if (!allowMissing) {
					throw new $TypeError('base intrinsic for ' + name + ' exists, but the property is not available.');
				}
				return void undefined;
			}
			if ($gOPD && (i + 1) >= parts.length) {
				var desc = $gOPD(value, part);
				isOwn = !!desc;

				// By convention, when a data property is converted to an accessor
				// property to emulate a data property that does not suffer from
				// the override mistake, that accessor's getter is marked with
				// an `originalValue` property. Here, when we detect this, we
				// uphold the illusion by pretending to see that original data
				// property, i.e., returning the value rather than the getter
				// itself.
				if (isOwn && 'get' in desc && !('originalValue' in desc.get)) {
					value = desc.get;
				} else {
					value = value[part];
				}
			} else {
				isOwn = hasOwn(value, part);
				value = value[part];
			}

			if (isOwn && !skipFurtherCaching) {
				INTRINSICS[intrinsicRealName] = value;
			}
		}
	}
	return value;
};

},{"es-errors":193,"es-errors/eval":192,"es-errors/range":194,"es-errors/ref":195,"es-errors/syntax":196,"es-errors/type":197,"es-errors/uri":198,"function-bind":205,"has-proto":209,"has-symbols":210,"hasown":214}],207:[function(require,module,exports){
'use strict';

var GetIntrinsic = require('get-intrinsic');

var $gOPD = GetIntrinsic('%Object.getOwnPropertyDescriptor%', true);

if ($gOPD) {
	try {
		$gOPD([], 'length');
	} catch (e) {
		// IE 8 has a broken gOPD
		$gOPD = null;
	}
}

module.exports = $gOPD;

},{"get-intrinsic":206}],208:[function(require,module,exports){
'use strict';

var $defineProperty = require('es-define-property');

var hasPropertyDescriptors = function hasPropertyDescriptors() {
	return !!$defineProperty;
};

hasPropertyDescriptors.hasArrayLengthDefineBug = function hasArrayLengthDefineBug() {
	// node v0.6 has a bug where array lengths can be Set but not Defined
	if (!$defineProperty) {
		return null;
	}
	try {
		return $defineProperty([], 'length', { value: 1 }).length !== 1;
	} catch (e) {
		// In Firefox 4-22, defining length on an array throws an exception.
		return true;
	}
};

module.exports = hasPropertyDescriptors;

},{"es-define-property":191}],209:[function(require,module,exports){
'use strict';

var test = {
	__proto__: null,
	foo: {}
};

var $Object = Object;

/** @type {import('.')} */
module.exports = function hasProto() {
	// @ts-expect-error: TS errors on an inherited property for some reason
	return { __proto__: test }.foo === test.foo
		&& !(test instanceof $Object);
};

},{}],210:[function(require,module,exports){
'use strict';

var origSymbol = typeof Symbol !== 'undefined' && Symbol;
var hasSymbolSham = require('./shams');

module.exports = function hasNativeSymbols() {
	if (typeof origSymbol !== 'function') { return false; }
	if (typeof Symbol !== 'function') { return false; }
	if (typeof origSymbol('foo') !== 'symbol') { return false; }
	if (typeof Symbol('bar') !== 'symbol') { return false; }

	return hasSymbolSham();
};

},{"./shams":211}],211:[function(require,module,exports){
'use strict';

/* eslint complexity: [2, 18], max-statements: [2, 33] */
module.exports = function hasSymbols() {
	if (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') { return false; }
	if (typeof Symbol.iterator === 'symbol') { return true; }

	var obj = {};
	var sym = Symbol('test');
	var symObj = Object(sym);
	if (typeof sym === 'string') { return false; }

	if (Object.prototype.toString.call(sym) !== '[object Symbol]') { return false; }
	if (Object.prototype.toString.call(symObj) !== '[object Symbol]') { return false; }

	// temp disabled per https://github.com/ljharb/object.assign/issues/17
	// if (sym instanceof Symbol) { return false; }
	// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4
	// if (!(symObj instanceof Symbol)) { return false; }

	// if (typeof Symbol.prototype.toString !== 'function') { return false; }
	// if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }

	var symVal = 42;
	obj[sym] = symVal;
	for (sym in obj) { return false; } // eslint-disable-line no-restricted-syntax, no-unreachable-loop
	if (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) { return false; }

	if (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) { return false; }

	var syms = Object.getOwnPropertySymbols(obj);
	if (syms.length !== 1 || syms[0] !== sym) { return false; }

	if (!Object.prototype.propertyIsEnumerable.call(obj, sym)) { return false; }

	if (typeof Object.getOwnPropertyDescriptor === 'function') {
		var descriptor = Object.getOwnPropertyDescriptor(obj, sym);
		if (descriptor.value !== symVal || descriptor.enumerable !== true) { return false; }
	}

	return true;
};

},{}],212:[function(require,module,exports){
'use strict';

var hasSymbols = require('has-symbols/shams');

/** @type {import('.')} */
module.exports = function hasToStringTagShams() {
	return hasSymbols() && !!Symbol.toStringTag;
};

},{"has-symbols/shams":211}],213:[function(require,module,exports){
'use strict';

var bind = require('function-bind');

module.exports = bind.call(Function.call, Object.prototype.hasOwnProperty);

},{"function-bind":205}],214:[function(require,module,exports){
'use strict';

var call = Function.prototype.call;
var $hasOwn = Object.prototype.hasOwnProperty;
var bind = require('function-bind');

/** @type {import('.')} */
module.exports = bind.call(call, $hasOwn);

},{"function-bind":205}],215:[function(require,module,exports){
/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */
exports.read = function (buffer, offset, isLE, mLen, nBytes) {
  var e, m
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var nBits = -7
  var i = isLE ? (nBytes - 1) : 0
  var d = isLE ? -1 : 1
  var s = buffer[offset + i]

  i += d

  e = s & ((1 << (-nBits)) - 1)
  s >>= (-nBits)
  nBits += eLen
  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  m = e & ((1 << (-nBits)) - 1)
  e >>= (-nBits)
  nBits += mLen
  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  if (e === 0) {
    e = 1 - eBias
  } else if (e === eMax) {
    return m ? NaN : ((s ? -1 : 1) * Infinity)
  } else {
    m = m + Math.pow(2, mLen)
    e = e - eBias
  }
  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
}

exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
  var e, m, c
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
  var i = isLE ? 0 : (nBytes - 1)
  var d = isLE ? 1 : -1
  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0

  value = Math.abs(value)

  if (isNaN(value) || value === Infinity) {
    m = isNaN(value) ? 1 : 0
    e = eMax
  } else {
    e = Math.floor(Math.log(value) / Math.LN2)
    if (value * (c = Math.pow(2, -e)) < 1) {
      e--
      c *= 2
    }
    if (e + eBias >= 1) {
      value += rt / c
    } else {
      value += rt * Math.pow(2, 1 - eBias)
    }
    if (value * c >= 2) {
      e++
      c /= 2
    }

    if (e + eBias >= eMax) {
      m = 0
      e = eMax
    } else if (e + eBias >= 1) {
      m = ((value * c) - 1) * Math.pow(2, mLen)
      e = e + eBias
    } else {
      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
      e = 0
    }
  }

  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

  e = (e << mLen) | m
  eLen += mLen
  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

  buffer[offset + i - d] |= s * 128
}

},{}],216:[function(require,module,exports){
if (typeof Object.create === 'function') {
  // implementation from standard node.js 'util' module
  module.exports = function inherits(ctor, superCtor) {
    if (superCtor) {
      ctor.super_ = superCtor
      ctor.prototype = Object.create(superCtor.prototype, {
        constructor: {
          value: ctor,
          enumerable: false,
          writable: true,
          configurable: true
        }
      })
    }
  };
} else {
  // old school shim for old browsers
  module.exports = function inherits(ctor, superCtor) {
    if (superCtor) {
      ctor.super_ = superCtor
      var TempCtor = function () {}
      TempCtor.prototype = superCtor.prototype
      ctor.prototype = new TempCtor()
      ctor.prototype.constructor = ctor
    }
  }
}

},{}],217:[function(require,module,exports){
'use strict';

var fnToStr = Function.prototype.toString;
var reflectApply = typeof Reflect === 'object' && Reflect !== null && Reflect.apply;
var badArrayLike;
var isCallableMarker;
if (typeof reflectApply === 'function' && typeof Object.defineProperty === 'function') {
	try {
		badArrayLike = Object.defineProperty({}, 'length', {
			get: function () {
				throw isCallableMarker;
			}
		});
		isCallableMarker = {};
		// eslint-disable-next-line no-throw-literal
		reflectApply(function () { throw 42; }, null, badArrayLike);
	} catch (_) {
		if (_ !== isCallableMarker) {
			reflectApply = null;
		}
	}
} else {
	reflectApply = null;
}

var constructorRegex = /^\s*class\b/;
var isES6ClassFn = function isES6ClassFunction(value) {
	try {
		var fnStr = fnToStr.call(value);
		return constructorRegex.test(fnStr);
	} catch (e) {
		return false; // not a function
	}
};

var tryFunctionObject = function tryFunctionToStr(value) {
	try {
		if (isES6ClassFn(value)) { return false; }
		fnToStr.call(value);
		return true;
	} catch (e) {
		return false;
	}
};
var toStr = Object.prototype.toString;
var objectClass = '[object Object]';
var fnClass = '[object Function]';
var genClass = '[object GeneratorFunction]';
var ddaClass = '[object HTMLAllCollection]'; // IE 11
var ddaClass2 = '[object HTML document.all class]';
var ddaClass3 = '[object HTMLCollection]'; // IE 9-10
var hasToStringTag = typeof Symbol === 'function' && !!Symbol.toStringTag; // better: use `has-tostringtag`

var isIE68 = !(0 in [,]); // eslint-disable-line no-sparse-arrays, comma-spacing

var isDDA = function isDocumentDotAll() { return false; };
if (typeof document === 'object') {
	// Firefox 3 canonicalizes DDA to undefined when it's not accessed directly
	var all = document.all;
	if (toStr.call(all) === toStr.call(document.all)) {
		isDDA = function isDocumentDotAll(value) {
			/* globals document: false */
			// in IE 6-8, typeof document.all is "object" and it's truthy
			if ((isIE68 || !value) && (typeof value === 'undefined' || typeof value === 'object')) {
				try {
					var str = toStr.call(value);
					return (
						str === ddaClass
						|| str === ddaClass2
						|| str === ddaClass3 // opera 12.16
						|| str === objectClass // IE 6-8
					) && value('') == null; // eslint-disable-line eqeqeq
				} catch (e) { /**/ }
			}
			return false;
		};
	}
}

module.exports = reflectApply
	? function isCallable(value) {
		if (isDDA(value)) { return true; }
		if (!value) { return false; }
		if (typeof value !== 'function' && typeof value !== 'object') { return false; }
		try {
			reflectApply(value, null, badArrayLike);
		} catch (e) {
			if (e !== isCallableMarker) { return false; }
		}
		return !isES6ClassFn(value) && tryFunctionObject(value);
	}
	: function isCallable(value) {
		if (isDDA(value)) { return true; }
		if (!value) { return false; }
		if (typeof value !== 'function' && typeof value !== 'object') { return false; }
		if (hasToStringTag) { return tryFunctionObject(value); }
		if (isES6ClassFn(value)) { return false; }
		var strClass = toStr.call(value);
		if (strClass !== fnClass && strClass !== genClass && !(/^\[object HTML/).test(strClass)) { return false; }
		return tryFunctionObject(value);
	};

},{}],218:[function(require,module,exports){
'use strict';

var callBound = require('call-bind/callBound');
var hasToStringTag = require('has-tostringtag/shams')();
var has;
var $exec;
var isRegexMarker;
var badStringifier;

if (hasToStringTag) {
	has = callBound('Object.prototype.hasOwnProperty');
	$exec = callBound('RegExp.prototype.exec');
	isRegexMarker = {};

	var throwRegexMarker = function () {
		throw isRegexMarker;
	};
	badStringifier = {
		toString: throwRegexMarker,
		valueOf: throwRegexMarker
	};

	if (typeof Symbol.toPrimitive === 'symbol') {
		badStringifier[Symbol.toPrimitive] = throwRegexMarker;
	}
}

var $toString = callBound('Object.prototype.toString');
var gOPD = Object.getOwnPropertyDescriptor;
var regexClass = '[object RegExp]';

module.exports = hasToStringTag
	// eslint-disable-next-line consistent-return
	? function isRegex(value) {
		if (!value || typeof value !== 'object') {
			return false;
		}

		var descriptor = gOPD(value, 'lastIndex');
		var hasLastIndexDataProperty = descriptor && has(descriptor, 'value');
		if (!hasLastIndexDataProperty) {
			return false;
		}

		try {
			$exec(value, badStringifier);
		} catch (e) {
			return e === isRegexMarker;
		}
	}
	: function isRegex(value) {
		// In older browsers, typeof regex incorrectly returns 'function'
		if (!value || (typeof value !== 'object' && typeof value !== 'function')) {
			return false;
		}

		return $toString(value) === regexClass;
	};

},{"call-bind/callBound":130,"has-tostringtag/shams":212}],219:[function(require,module,exports){
'use strict';

var keysShim;
if (!Object.keys) {
	// modified from https://github.com/es-shims/es5-shim
	var has = Object.prototype.hasOwnProperty;
	var toStr = Object.prototype.toString;
	var isArgs = require('./isArguments'); // eslint-disable-line global-require
	var isEnumerable = Object.prototype.propertyIsEnumerable;
	var hasDontEnumBug = !isEnumerable.call({ toString: null }, 'toString');
	var hasProtoEnumBug = isEnumerable.call(function () {}, 'prototype');
	var dontEnums = [
		'toString',
		'toLocaleString',
		'valueOf',
		'hasOwnProperty',
		'isPrototypeOf',
		'propertyIsEnumerable',
		'constructor'
	];
	var equalsConstructorPrototype = function (o) {
		var ctor = o.constructor;
		return ctor && ctor.prototype === o;
	};
	var excludedKeys = {
		$applicationCache: true,
		$console: true,
		$external: true,
		$frame: true,
		$frameElement: true,
		$frames: true,
		$innerHeight: true,
		$innerWidth: true,
		$onmozfullscreenchange: true,
		$onmozfullscreenerror: true,
		$outerHeight: true,
		$outerWidth: true,
		$pageXOffset: true,
		$pageYOffset: true,
		$parent: true,
		$scrollLeft: true,
		$scrollTop: true,
		$scrollX: true,
		$scrollY: true,
		$self: true,
		$webkitIndexedDB: true,
		$webkitStorageInfo: true,
		$window: true
	};
	var hasAutomationEqualityBug = (function () {
		/* global window */
		if (typeof window === 'undefined') { return false; }
		for (var k in window) {
			try {
				if (!excludedKeys['$' + k] && has.call(window, k) && window[k] !== null && typeof window[k] === 'object') {
					try {
						equalsConstructorPrototype(window[k]);
					} catch (e) {
						return true;
					}
				}
			} catch (e) {
				return true;
			}
		}
		return false;
	}());
	var equalsConstructorPrototypeIfNotBuggy = function (o) {
		/* global window */
		if (typeof window === 'undefined' || !hasAutomationEqualityBug) {
			return equalsConstructorPrototype(o);
		}
		try {
			return equalsConstructorPrototype(o);
		} catch (e) {
			return false;
		}
	};

	keysShim = function keys(object) {
		var isObject = object !== null && typeof object === 'object';
		var isFunction = toStr.call(object) === '[object Function]';
		var isArguments = isArgs(object);
		var isString = isObject && toStr.call(object) === '[object String]';
		var theKeys = [];

		if (!isObject && !isFunction && !isArguments) {
			throw new TypeError('Object.keys called on a non-object');
		}

		var skipProto = hasProtoEnumBug && isFunction;
		if (isString && object.length > 0 && !has.call(object, 0)) {
			for (var i = 0; i < object.length; ++i) {
				theKeys.push(String(i));
			}
		}

		if (isArguments && object.length > 0) {
			for (var j = 0; j < object.length; ++j) {
				theKeys.push(String(j));
			}
		} else {
			for (var name in object) {
				if (!(skipProto && name === 'prototype') && has.call(object, name)) {
					theKeys.push(String(name));
				}
			}
		}

		if (hasDontEnumBug) {
			var skipConstructor = equalsConstructorPrototypeIfNotBuggy(object);

			for (var k = 0; k < dontEnums.length; ++k) {
				if (!(skipConstructor && dontEnums[k] === 'constructor') && has.call(object, dontEnums[k])) {
					theKeys.push(dontEnums[k]);
				}
			}
		}
		return theKeys;
	};
}
module.exports = keysShim;

},{"./isArguments":221}],220:[function(require,module,exports){
'use strict';

var slice = Array.prototype.slice;
var isArgs = require('./isArguments');

var origKeys = Object.keys;
var keysShim = origKeys ? function keys(o) { return origKeys(o); } : require('./implementation');

var originalKeys = Object.keys;

keysShim.shim = function shimObjectKeys() {
	if (Object.keys) {
		var keysWorksWithArguments = (function () {
			// Safari 5.0 bug
			var args = Object.keys(arguments);
			return args && args.length === arguments.length;
		}(1, 2));
		if (!keysWorksWithArguments) {
			Object.keys = function keys(object) { // eslint-disable-line func-name-matching
				if (isArgs(object)) {
					return originalKeys(slice.call(object));
				}
				return originalKeys(object);
			};
		}
	} else {
		Object.keys = keysShim;
	}
	return Object.keys || keysShim;
};

module.exports = keysShim;

},{"./implementation":219,"./isArguments":221}],221:[function(require,module,exports){
'use strict';

var toStr = Object.prototype.toString;

module.exports = function isArguments(value) {
	var str = toStr.call(value);
	var isArgs = str === '[object Arguments]';
	if (!isArgs) {
		isArgs = str !== '[object Array]' &&
			value !== null &&
			typeof value === 'object' &&
			typeof value.length === 'number' &&
			value.length >= 0 &&
			toStr.call(value.callee) === '[object Function]';
	}
	return isArgs;
};

},{}],222:[function(require,module,exports){
// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };

},{}],223:[function(require,module,exports){
(function (process,setImmediate){(function (){
var through = require('through');
var nextTick = typeof setImmediate !== 'undefined'
    ? setImmediate
    : process.nextTick
;

module.exports = function (write, end) {
    var tr = through(write, end);
    tr.pause();
    var resume = tr.resume;
    var pause = tr.pause;
    var paused = false;
    
    tr.pause = function () {
        paused = true;
        return pause.apply(this, arguments);
    };
    
    tr.resume = function () {
        paused = false;
        return resume.apply(this, arguments);
    };
    
    nextTick(function () {
        if (!paused) tr.resume();
    });
    
    return tr;
};

}).call(this)}).call(this,require('_process'),require("timers").setImmediate)
},{"_process":222,"through":238,"timers":239}],224:[function(require,module,exports){
/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */
/* eslint-disable node/no-deprecated-api */
var buffer = require('buffer')
var Buffer = buffer.Buffer

// alternative to using Object.keys for old browsers
function copyProps (src, dst) {
  for (var key in src) {
    dst[key] = src[key]
  }
}
if (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {
  module.exports = buffer
} else {
  // Copy properties from require('buffer')
  copyProps(buffer, exports)
  exports.Buffer = SafeBuffer
}

function SafeBuffer (arg, encodingOrOffset, length) {
  return Buffer(arg, encodingOrOffset, length)
}

SafeBuffer.prototype = Object.create(Buffer.prototype)

// Copy static methods from Buffer
copyProps(Buffer, SafeBuffer)

SafeBuffer.from = function (arg, encodingOrOffset, length) {
  if (typeof arg === 'number') {
    throw new TypeError('Argument must not be a number')
  }
  return Buffer(arg, encodingOrOffset, length)
}

SafeBuffer.alloc = function (size, fill, encoding) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  var buf = Buffer(size)
  if (fill !== undefined) {
    if (typeof encoding === 'string') {
      buf.fill(fill, encoding)
    } else {
      buf.fill(fill)
    }
  } else {
    buf.fill(0)
  }
  return buf
}

SafeBuffer.allocUnsafe = function (size) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  return Buffer(size)
}

SafeBuffer.allocUnsafeSlow = function (size) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  return buffer.SlowBuffer(size)
}

},{"buffer":112}],225:[function(require,module,exports){
'use strict';

var callBound = require('call-bind/callBound');
var isRegex = require('is-regex');

var $exec = callBound('RegExp.prototype.exec');
var $TypeError = require('es-errors/type');

module.exports = function regexTester(regex) {
	if (!isRegex(regex)) {
		throw new $TypeError('`regex` must be a RegExp');
	}
	return function test(s) {
		return $exec(regex, s) !== null;
	};
};

},{"call-bind/callBound":130,"es-errors/type":197,"is-regex":218}],226:[function(require,module,exports){
'use strict';

var GetIntrinsic = require('get-intrinsic');
var define = require('define-data-property');
var hasDescriptors = require('has-property-descriptors')();
var gOPD = require('gopd');

var $TypeError = require('es-errors/type');
var $floor = GetIntrinsic('%Math.floor%');

/** @type {import('.')} */
module.exports = function setFunctionLength(fn, length) {
	if (typeof fn !== 'function') {
		throw new $TypeError('`fn` is not a function');
	}
	if (typeof length !== 'number' || length < 0 || length > 0xFFFFFFFF || $floor(length) !== length) {
		throw new $TypeError('`length` must be a positive 32-bit integer');
	}

	var loose = arguments.length > 2 && !!arguments[2];

	var functionLengthIsConfigurable = true;
	var functionLengthIsWritable = true;
	if ('length' in fn && gOPD) {
		var desc = gOPD(fn, 'length');
		if (desc && !desc.configurable) {
			functionLengthIsConfigurable = false;
		}
		if (desc && !desc.writable) {
			functionLengthIsWritable = false;
		}
	}

	if (functionLengthIsConfigurable || functionLengthIsWritable || !loose) {
		if (hasDescriptors) {
			define(/** @type {Parameters<define>[0]} */ (fn), 'length', length, true, true);
		} else {
			define(/** @type {Parameters<define>[0]} */ (fn), 'length', length);
		}
	}
	return fn;
};

},{"define-data-property":135,"es-errors/type":197,"get-intrinsic":206,"gopd":207,"has-property-descriptors":208}],227:[function(require,module,exports){
'use strict';

var bind = require('function-bind');
var ES = require('es-abstract/es5');
var replace = bind.call(Function.call, String.prototype.replace);

var leftWhitespace = /^[\x09\x0A\x0B\x0C\x0D\x20\xA0\u1680\u180E\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF]+/;
var rightWhitespace = /[\x09\x0A\x0B\x0C\x0D\x20\xA0\u1680\u180E\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF]+$/;

module.exports = function trim() {
	var S = ES.ToString(ES.CheckObjectCoercible(this));
	return replace(replace(S, leftWhitespace, ''), rightWhitespace, '');
};

},{"es-abstract/es5":183,"function-bind":205}],228:[function(require,module,exports){
'use strict';

var bind = require('function-bind');
var define = require('define-properties');

var implementation = require('./implementation');
var getPolyfill = require('./polyfill');
var shim = require('./shim');

var boundTrim = bind.call(Function.call, getPolyfill());

define(boundTrim, {
	getPolyfill: getPolyfill,
	implementation: implementation,
	shim: shim
});

module.exports = boundTrim;

},{"./implementation":227,"./polyfill":229,"./shim":230,"define-properties":136,"function-bind":205}],229:[function(require,module,exports){
'use strict';

var implementation = require('./implementation');

var zeroWidthSpace = '\u200b';

module.exports = function getPolyfill() {
	if (String.prototype.trim && zeroWidthSpace.trim() === zeroWidthSpace) {
		return String.prototype.trim;
	}
	return implementation;
};

},{"./implementation":227}],230:[function(require,module,exports){
'use strict';

var define = require('define-properties');
var getPolyfill = require('./polyfill');

module.exports = function shimStringTrim() {
	var polyfill = getPolyfill();
	define(String.prototype, { trim: polyfill }, { trim: function () { return String.prototype.trim !== polyfill; } });
	return polyfill;
};

},{"./polyfill":229,"define-properties":136}],231:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

'use strict';

/*<replacement>*/

var Buffer = require('safe-buffer').Buffer;
/*</replacement>*/

var isEncoding = Buffer.isEncoding || function (encoding) {
  encoding = '' + encoding;
  switch (encoding && encoding.toLowerCase()) {
    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':
      return true;
    default:
      return false;
  }
};

function _normalizeEncoding(enc) {
  if (!enc) return 'utf8';
  var retried;
  while (true) {
    switch (enc) {
      case 'utf8':
      case 'utf-8':
        return 'utf8';
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return 'utf16le';
      case 'latin1':
      case 'binary':
        return 'latin1';
      case 'base64':
      case 'ascii':
      case 'hex':
        return enc;
      default:
        if (retried) return; // undefined
        enc = ('' + enc).toLowerCase();
        retried = true;
    }
  }
};

// Do not cache `Buffer.isEncoding` when checking encoding names as some
// modules monkey-patch it to support additional encodings
function normalizeEncoding(enc) {
  var nenc = _normalizeEncoding(enc);
  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);
  return nenc || enc;
}

// StringDecoder provides an interface for efficiently splitting a series of
// buffers into a series of JS strings without breaking apart multi-byte
// characters.
exports.StringDecoder = StringDecoder;
function StringDecoder(encoding) {
  this.encoding = normalizeEncoding(encoding);
  var nb;
  switch (this.encoding) {
    case 'utf16le':
      this.text = utf16Text;
      this.end = utf16End;
      nb = 4;
      break;
    case 'utf8':
      this.fillLast = utf8FillLast;
      nb = 4;
      break;
    case 'base64':
      this.text = base64Text;
      this.end = base64End;
      nb = 3;
      break;
    default:
      this.write = simpleWrite;
      this.end = simpleEnd;
      return;
  }
  this.lastNeed = 0;
  this.lastTotal = 0;
  this.lastChar = Buffer.allocUnsafe(nb);
}

StringDecoder.prototype.write = function (buf) {
  if (buf.length === 0) return '';
  var r;
  var i;
  if (this.lastNeed) {
    r = this.fillLast(buf);
    if (r === undefined) return '';
    i = this.lastNeed;
    this.lastNeed = 0;
  } else {
    i = 0;
  }
  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);
  return r || '';
};

StringDecoder.prototype.end = utf8End;

// Returns only complete characters in a Buffer
StringDecoder.prototype.text = utf8Text;

// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer
StringDecoder.prototype.fillLast = function (buf) {
  if (this.lastNeed <= buf.length) {
    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);
    return this.lastChar.toString(this.encoding, 0, this.lastTotal);
  }
  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);
  this.lastNeed -= buf.length;
};

// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a
// continuation byte. If an invalid byte is detected, -2 is returned.
function utf8CheckByte(byte) {
  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;
  return byte >> 6 === 0x02 ? -1 : -2;
}

// Checks at most 3 bytes at the end of a Buffer in order to detect an
// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)
// needed to complete the UTF-8 character (if applicable) are returned.
function utf8CheckIncomplete(self, buf, i) {
  var j = buf.length - 1;
  if (j < i) return 0;
  var nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) self.lastNeed = nb - 1;
    return nb;
  }
  if (--j < i || nb === -2) return 0;
  nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) self.lastNeed = nb - 2;
    return nb;
  }
  if (--j < i || nb === -2) return 0;
  nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) {
      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;
    }
    return nb;
  }
  return 0;
}

// Validates as many continuation bytes for a multi-byte UTF-8 character as
// needed or are available. If we see a non-continuation byte where we expect
// one, we "replace" the validated continuation bytes we've seen so far with
// a single UTF-8 replacement character ('\ufffd'), to match v8's UTF-8 decoding
// behavior. The continuation byte check is included three times in the case
// where all of the continuation bytes for a character exist in the same buffer.
// It is also done this way as a slight performance increase instead of using a
// loop.
function utf8CheckExtraBytes(self, buf, p) {
  if ((buf[0] & 0xC0) !== 0x80) {
    self.lastNeed = 0;
    return '\ufffd';
  }
  if (self.lastNeed > 1 && buf.length > 1) {
    if ((buf[1] & 0xC0) !== 0x80) {
      self.lastNeed = 1;
      return '\ufffd';
    }
    if (self.lastNeed > 2 && buf.length > 2) {
      if ((buf[2] & 0xC0) !== 0x80) {
        self.lastNeed = 2;
        return '\ufffd';
      }
    }
  }
}

// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.
function utf8FillLast(buf) {
  var p = this.lastTotal - this.lastNeed;
  var r = utf8CheckExtraBytes(this, buf, p);
  if (r !== undefined) return r;
  if (this.lastNeed <= buf.length) {
    buf.copy(this.lastChar, p, 0, this.lastNeed);
    return this.lastChar.toString(this.encoding, 0, this.lastTotal);
  }
  buf.copy(this.lastChar, p, 0, buf.length);
  this.lastNeed -= buf.length;
}

// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a
// partial character, the character's bytes are buffered until the required
// number of bytes are available.
function utf8Text(buf, i) {
  var total = utf8CheckIncomplete(this, buf, i);
  if (!this.lastNeed) return buf.toString('utf8', i);
  this.lastTotal = total;
  var end = buf.length - (total - this.lastNeed);
  buf.copy(this.lastChar, 0, end);
  return buf.toString('utf8', i, end);
}

// For UTF-8, a replacement character is added when ending on a partial
// character.
function utf8End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) return r + '\ufffd';
  return r;
}

// UTF-16LE typically needs two bytes per character, but even if we have an even
// number of bytes available, we need to check if we end on a leading/high
// surrogate. In that case, we need to wait for the next two bytes in order to
// decode the last character properly.
function utf16Text(buf, i) {
  if ((buf.length - i) % 2 === 0) {
    var r = buf.toString('utf16le', i);
    if (r) {
      var c = r.charCodeAt(r.length - 1);
      if (c >= 0xD800 && c <= 0xDBFF) {
        this.lastNeed = 2;
        this.lastTotal = 4;
        this.lastChar[0] = buf[buf.length - 2];
        this.lastChar[1] = buf[buf.length - 1];
        return r.slice(0, -1);
      }
    }
    return r;
  }
  this.lastNeed = 1;
  this.lastTotal = 2;
  this.lastChar[0] = buf[buf.length - 1];
  return buf.toString('utf16le', i, buf.length - 1);
}

// For UTF-16LE we do not explicitly append special replacement characters if we
// end on a partial character, we simply let v8 handle that.
function utf16End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) {
    var end = this.lastTotal - this.lastNeed;
    return r + this.lastChar.toString('utf16le', 0, end);
  }
  return r;
}

function base64Text(buf, i) {
  var n = (buf.length - i) % 3;
  if (n === 0) return buf.toString('base64', i);
  this.lastNeed = 3 - n;
  this.lastTotal = 3;
  if (n === 1) {
    this.lastChar[0] = buf[buf.length - 1];
  } else {
    this.lastChar[0] = buf[buf.length - 2];
    this.lastChar[1] = buf[buf.length - 1];
  }
  return buf.toString('base64', i, buf.length - n);
}

function base64End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);
  return r;
}

// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)
function simpleWrite(buf) {
  return buf.toString(this.encoding);
}

function simpleEnd(buf) {
  return buf && buf.length ? this.write(buf) : '';
}
},{"safe-buffer":224}],232:[function(require,module,exports){
(function (process,setImmediate){(function (){
var defined = require('defined');
var createDefaultStream = require('./lib/default_stream');
var Test = require('./lib/test');
var createResult = require('./lib/results');
var through = require('through');

var canEmitExit = typeof process !== 'undefined' && process
    && typeof process.on === 'function' && process.browser !== true
;
var canExit = typeof process !== 'undefined' && process
    && typeof process.exit === 'function'
;

var nextTick = typeof setImmediate !== 'undefined'
    ? setImmediate
    : process.nextTick
;

exports = module.exports = (function () {
    var harness;
    var lazyLoad = function () {
        return getHarness().apply(this, arguments);
    };
    
    lazyLoad.only = function () {
        return getHarness().only.apply(this, arguments);
    };
    
    lazyLoad.createStream = function (opts) {
        if (!opts) opts = {};
        if (!harness) {
            var output = through();
            getHarness({ stream: output, objectMode: opts.objectMode });
            return output;
        }
        return harness.createStream(opts);
    };
    
    lazyLoad.onFinish = function () {
        return getHarness().onFinish.apply(this, arguments);
    };

    lazyLoad.getHarness = getHarness

    return lazyLoad

    function getHarness (opts) {
        if (!opts) opts = {};
        opts.autoclose = !canEmitExit;
        if (!harness) harness = createExitHarness(opts);
        return harness;
    }
})();

function createExitHarness (conf) {
    if (!conf) conf = {};
    var harness = createHarness({
        autoclose: defined(conf.autoclose, false)
    });
    
    var stream = harness.createStream({ objectMode: conf.objectMode });
    var es = stream.pipe(conf.stream || createDefaultStream());
    if (canEmitExit) {
        es.on('error', function (err) { harness._exitCode = 1 });
    }
    
    var ended = false;
    stream.on('end', function () { ended = true });
    
    if (conf.exit === false) return harness;
    if (!canEmitExit || !canExit) return harness;

    var inErrorState = false;

    process.on('exit', function (code) {
        // let the process exit cleanly.
        if (code !== 0) {
            return
        }

        if (!ended) {
            var only = harness._results._only;
            for (var i = 0; i < harness._tests.length; i++) {
                var t = harness._tests[i];
                if (only && t.name !== only) continue;
                t._exit();
            }
        }
        harness.close();
        process.exit(code || harness._exitCode);
    });
    
    return harness;
}

exports.createHarness = createHarness;
exports.Test = Test;
exports.test = exports; // tap compat
exports.test.skip = Test.skip;

var exitInterval;

function createHarness (conf_) {
    if (!conf_) conf_ = {};
    var results = createResult();
    if (conf_.autoclose !== false) {
        results.once('done', function () { results.close() });
    }
    
    var test = function (name, conf, cb) {
        var t = new Test(name, conf, cb);
        test._tests.push(t);
        
        (function inspectCode (st) {
            st.on('test', function sub (st_) {
                inspectCode(st_);
            });
            st.on('result', function (r) {
                if (!r.ok && typeof r !== 'string') test._exitCode = 1
            });
        })(t);
        
        results.push(t);
        return t;
    };
    test._results = results;
    
    test._tests = [];
    
    test.createStream = function (opts) {
        return results.createStream(opts);
    };

    test.onFinish = function (cb) {
        results.on('done', cb);
    };
    
    var only = false;
    test.only = function (name) {
        if (only) throw new Error('there can only be one only test');
        results.only(name);
        only = true;
        return test.apply(null, arguments);
    };
    test._exitCode = 0;
    
    test.close = function () { results.close() };
    
    return test;
}

}).call(this)}).call(this,require('_process'),require("timers").setImmediate)
},{"./lib/default_stream":233,"./lib/results":235,"./lib/test":236,"_process":222,"defined":137,"through":238,"timers":239}],233:[function(require,module,exports){
(function (process){(function (){
var through = require('through');
var fs = require('fs');

module.exports = function () {
    var line = '';
    var stream = through(write, flush);
    return stream;
    
    function write (buf) {
        for (var i = 0; i < buf.length; i++) {
            var c = typeof buf === 'string'
                ? buf.charAt(i)
                : String.fromCharCode(buf[i])
            ;
            if (c === '\n') flush();
            else line += c;
        }
    }
    
    function flush () {
        if (fs.writeSync && /^win/.test(process.platform)) {
            try { fs.writeSync(1, line + '\n'); }
            catch (e) { stream.emit('error', e) }
        }
        else {
            try { console.log(line) }
            catch (e) { stream.emit('error', e) }
        }
        line = '';
    }
};

}).call(this)}).call(this,require('_process'))
},{"_process":222,"fs":111,"through":238}],234:[function(require,module,exports){
(function (process,setImmediate){(function (){
module.exports = typeof setImmediate !== 'undefined'
    ? setImmediate
    : process.nextTick
;

}).call(this)}).call(this,require('_process'),require("timers").setImmediate)
},{"_process":222,"timers":239}],235:[function(require,module,exports){
(function (process,setImmediate){(function (){
var EventEmitter = require('events').EventEmitter;
var inherits = require('inherits');
var through = require('through');
var resumer = require('resumer');
var inspect = require('object-inspect');
var bind = require('function-bind');
var has = require('has');
var regexpTest = bind.call(Function.call, RegExp.prototype.test);
var yamlIndicators = /\:|\-|\?/;
var nextTick = typeof setImmediate !== 'undefined'
    ? setImmediate
    : process.nextTick
;

module.exports = Results;
inherits(Results, EventEmitter);

function Results () {
    if (!(this instanceof Results)) return new Results;
    this.count = 0;
    this.fail = 0;
    this.pass = 0;
    this._stream = through();
    this.tests = [];
}

Results.prototype.createStream = function (opts) {
    if (!opts) opts = {};
    var self = this;
    var output, testId = 0;
    if (opts.objectMode) {
        output = through();
        self.on('_push', function ontest (t, extra) {
            if (!extra) extra = {};
            var id = testId++;
            t.once('prerun', function () {
                var row = {
                    type: 'test',
                    name: t.name,
                    id: id
                };
                if (has(extra, 'parent')) {
                    row.parent = extra.parent;
                }
                output.queue(row);
            });
            t.on('test', function (st) {
                ontest(st, { parent: id });
            });
            t.on('result', function (res) {
                res.test = id;
                res.type = 'assert';
                output.queue(res);
            });
            t.on('end', function () {
                output.queue({ type: 'end', test: id });
            });
        });
        self.on('done', function () { output.queue(null) });
    }
    else {
        output = resumer();
        output.queue('TAP version 13\n');
        self._stream.pipe(output);
    }
    
    nextTick(function next() {
        var t;
        while (t = getNextTest(self)) {
            t.run();
            if (!t.ended) return t.once('end', function(){ nextTick(next); });
        }
        self.emit('done');
    });
    
    return output;
};

Results.prototype.push = function (t) {
    var self = this;
    self.tests.push(t);
    self._watch(t);
    self.emit('_push', t);
};

Results.prototype.only = function (name) {
    this._only = name;
};

Results.prototype._watch = function (t) {
    var self = this;
    var write = function (s) { self._stream.queue(s) };
    t.once('prerun', function () {
        write('# ' + t.name + '\n');
    });
    
    t.on('result', function (res) {
        if (typeof res === 'string') {
            write('# ' + res + '\n');
            return;
        }
        write(encodeResult(res, self.count + 1));
        self.count ++;

        if (res.ok) self.pass ++
        else self.fail ++
    });
    
    t.on('test', function (st) { self._watch(st) });
};

Results.prototype.close = function () {
    var self = this;
    if (self.closed) self._stream.emit('error', new Error('ALREADY CLOSED'));
    self.closed = true;
    var write = function (s) { self._stream.queue(s) };
    
    write('\n1..' + self.count + '\n');
    write('# tests ' + self.count + '\n');
    write('# pass  ' + self.pass + '\n');
    if (self.fail) write('# fail  ' + self.fail + '\n')
    else write('\n# ok\n')

    self._stream.queue(null);
};

function encodeResult (res, count) {
    var output = '';
    output += (res.ok ? 'ok ' : 'not ok ') + count;
    output += res.name ? ' ' + res.name.toString().replace(/\s+/g, ' ') : '';
    
    if (res.skip) output += ' # SKIP';
    else if (res.todo) output += ' # TODO';
    
    output += '\n';
    if (res.ok) return output;
    
    var outer = '  ';
    var inner = outer + '  ';
    output += outer + '---\n';
    output += inner + 'operator: ' + res.operator + '\n';
    
    if (has(res, 'expected') || has(res, 'actual')) {
        var ex = inspect(res.expected);
        var ac = inspect(res.actual);
        
        if (Math.max(ex.length, ac.length) > 65 || invalidYaml(ex) || invalidYaml(ac)) {
            output += inner + 'expected: |-\n' + inner + '  ' + ex + '\n';
            output += inner + 'actual: |-\n' + inner + '  ' + ac + '\n';
        }
        else {
            output += inner + 'expected: ' + ex + '\n';
            output += inner + 'actual:   ' + ac + '\n';
        }
    }
    if (res.at) {
        output += inner + 'at: ' + res.at + '\n';
    }
    if (res.operator === 'error' && res.actual && res.actual.stack) {
        var lines = String(res.actual.stack).split('\n');
        output += inner + 'stack: |-\n';
        for (var i = 0; i < lines.length; i++) {
            output += inner + '  ' + lines[i] + '\n';
        }
    }
    
    output += outer + '...\n';
    return output;
}

function getNextTest (results) {
    if (!results._only) {
        return results.tests.shift();
    }
    
    do {
        var t = results.tests.shift();
        if (!t) continue;
        if (results._only === t.name) {
            return t;
        }
    } while (results.tests.length !== 0)
}

function invalidYaml (str) {
    return regexpTest(yamlIndicators, str);
}

}).call(this)}).call(this,require('_process'),require("timers").setImmediate)
},{"_process":222,"events":113,"function-bind":205,"has":213,"inherits":216,"object-inspect":237,"resumer":223,"through":238,"timers":239}],236:[function(require,module,exports){
(function (__dirname){(function (){
var deepEqual = require('deep-equal');
var defined = require('defined');
var path = require('path');
var inherits = require('inherits');
var EventEmitter = require('events').EventEmitter;
var has = require('has');
var trim = require('string.prototype.trim');

var nextTick = require('./next_tick');

module.exports = Test;

inherits(Test, EventEmitter);

var getTestArgs = function (name_, opts_, cb_) {
    var name = '(anonymous)';
    var opts = {};
    var cb;

    for (var i = 0; i < arguments.length; i++) {
        var arg = arguments[i];
        var t = typeof arg;
        if (t === 'string') {
            name = arg;
        }
        else if (t === 'object') {
            opts = arg || opts;
        }
        else if (t === 'function') {
            cb = arg;
        }
    }
    return { name: name, opts: opts, cb: cb };
};

function Test (name_, opts_, cb_) {
    if (! (this instanceof Test)) {
        return new Test(name_, opts_, cb_);
    }

    var args = getTestArgs(name_, opts_, cb_);

    this.readable = true;
    this.name = args.name || '(anonymous)';
    this.assertCount = 0;
    this.pendingCount = 0;
    this._skip = args.opts.skip || false;
    this._timeout = args.opts.timeout;
    this._plan = undefined;
    this._cb = args.cb;
    this._progeny = [];
    this._ok = true;

    for (var prop in this) {
        this[prop] = (function bind(self, val) {
            if (typeof val === 'function') {
                return function bound() {
                    return val.apply(self, arguments);
                };
            }
            else return val;
        })(this, this[prop]);
    }
}

Test.prototype.run = function () {
    if (this._skip) {
        this.comment('SKIP ' + this.name);
    }
    if (!this._cb || this._skip) {
        return this._end();
    }
    if (this._timeout != null) {
        this.timeoutAfter(this._timeout);
    }
    this.emit('prerun');
    this._cb(this);
    this.emit('run');
};

Test.prototype.test = function (name, opts, cb) {
    var self = this;
    var t = new Test(name, opts, cb);
    this._progeny.push(t);
    this.pendingCount++;
    this.emit('test', t);
    t.on('prerun', function () {
        self.assertCount++;
    })
    
    if (!self._pendingAsserts()) {
        nextTick(function () {
            self._end();
        });
    }
    
    nextTick(function() {
        if (!self._plan && self.pendingCount == self._progeny.length) {
            self._end();
        }
    });
};

Test.prototype.comment = function (msg) {
    var that = this;
    trim(msg).split('\n').forEach(function (aMsg) {
        that.emit('result', trim(aMsg).replace(/^#\s*/, ''));
    });
};

Test.prototype.plan = function (n) {
    this._plan = n;
    this.emit('plan', n);
};

Test.prototype.timeoutAfter = function(ms) {
    if (!ms) throw new Error('timeoutAfter requires a timespan');
    var self = this;
    var timeout = setTimeout(function() {
        self.fail('test timed out after ' + ms + 'ms');
        self.end();
    }, ms);
    this.once('end', function() {
        clearTimeout(timeout);
    });
}

Test.prototype.end = function (err) { 
    var self = this;
    if (arguments.length >= 1 && !!err) {
        this.ifError(err);
    }
    
    if (this.calledEnd) {
        this.fail('.end() called twice');
    }
    this.calledEnd = true;
    this._end();
};

Test.prototype._end = function (err) {
    var self = this;
    if (this._progeny.length) {
        var t = this._progeny.shift();
        t.on('end', function () { self._end() });
        t.run();
        return;
    }
    
    if (!this.ended) this.emit('end');
    var pendingAsserts = this._pendingAsserts();
    if (!this._planError && this._plan !== undefined && pendingAsserts) {
        this._planError = true;
        this.fail('plan != count', {
            expected : this._plan,
            actual : this.assertCount
        });
    }
    this.ended = true;
};

Test.prototype._exit = function () {
    if (this._plan !== undefined &&
        !this._planError && this.assertCount !== this._plan) {
        this._planError = true;
        this.fail('plan != count', {
            expected : this._plan,
            actual : this.assertCount,
            exiting : true
        });
    }
    else if (!this.ended) {
        this.fail('test exited without ending', {
            exiting: true
        });
    }
};

Test.prototype._pendingAsserts = function () {
    if (this._plan === undefined) {
        return 1;
    }
    else {
        return this._plan - (this._progeny.length + this.assertCount);
    }
};

Test.prototype._assert = function assert (ok, opts) {
    var self = this;
    var extra = opts.extra || {};
    
    var res = {
        id : self.assertCount ++,
        ok : Boolean(ok),
        skip : defined(extra.skip, opts.skip),
        name : defined(extra.message, opts.message, '(unnamed assert)'),
        operator : defined(extra.operator, opts.operator)
    };
    if (has(opts, 'actual') || has(extra, 'actual')) {
        res.actual = defined(extra.actual, opts.actual);
    }
    if (has(opts, 'expected') || has(extra, 'expected')) {
        res.expected = defined(extra.expected, opts.expected);
    }
    this._ok = Boolean(this._ok && ok);
    
    if (!ok) {
        res.error = defined(extra.error, opts.error, new Error(res.name));
    }
    
    if (!ok) {
        var e = new Error('exception');
        var err = (e.stack || '').split('\n');
        var dir = path.dirname(__dirname) + '/';
        
        for (var i = 0; i < err.length; i++) {
            var m = /^[^\s]*\s*\bat\s+(.+)/.exec(err[i]);
            if (!m) {
                continue;
            }
            
            var s = m[1].split(/\s+/);
            var filem = /(\/[^:\s]+:(\d+)(?::(\d+))?)/.exec(s[1]);
            if (!filem) {
                filem = /(\/[^:\s]+:(\d+)(?::(\d+))?)/.exec(s[2]);
                
                if (!filem) {
                    filem = /(\/[^:\s]+:(\d+)(?::(\d+))?)/.exec(s[3]);

                    if (!filem) {
                        continue;
                    }
                }
            }
            
            if (filem[1].slice(0, dir.length) === dir) {
                continue;
            }
            
            res.functionName = s[0];
            res.file = filem[1];
            res.line = Number(filem[2]);
            if (filem[3]) res.column = filem[3];
            
            res.at = m[1];
            break;
        }
    }

    self.emit('result', res);
    
    var pendingAsserts = self._pendingAsserts();
    if (!pendingAsserts) {
        if (extra.exiting) {
            self._end();
        } else {
            nextTick(function () {
                self._end();
            });
        }
    }
    
    if (!self._planError && pendingAsserts < 0) {
        self._planError = true;
        self.fail('plan != count', {
            expected : self._plan,
            actual : self._plan - pendingAsserts
        });
    }
};

Test.prototype.fail = function (msg, extra) {
    this._assert(false, {
        message : msg,
        operator : 'fail',
        extra : extra
    });
};

Test.prototype.pass = function (msg, extra) {
    this._assert(true, {
        message : msg,
        operator : 'pass',
        extra : extra
    });
};

Test.prototype.skip = function (msg, extra) {
    this._assert(true, {
        message : msg,
        operator : 'skip',
        skip : true,
        extra : extra
    });
};

Test.prototype.ok
= Test.prototype['true']
= Test.prototype.assert
= function (value, msg, extra) {
    this._assert(value, {
        message : msg,
        operator : 'ok',
        expected : true,
        actual : value,
        extra : extra
    });
};

Test.prototype.notOk
= Test.prototype['false']
= Test.prototype.notok
= function (value, msg, extra) {
    this._assert(!value, {
        message : msg,
        operator : 'notOk',
        expected : false,
        actual : value,
        extra : extra
    });
};

Test.prototype.error
= Test.prototype.ifError
= Test.prototype.ifErr
= Test.prototype.iferror
= function (err, msg, extra) {
    this._assert(!err, {
        message : defined(msg, String(err)),
        operator : 'error',
        actual : err,
        extra : extra
    });
};

Test.prototype.equal
= Test.prototype.equals
= Test.prototype.isEqual
= Test.prototype.is
= Test.prototype.strictEqual
= Test.prototype.strictEquals
= function (a, b, msg, extra) {
    this._assert(a === b, {
        message : defined(msg, 'should be equal'),
        operator : 'equal',
        actual : a,
        expected : b,
        extra : extra
    });
};

Test.prototype.notEqual
= Test.prototype.notEquals
= Test.prototype.notStrictEqual
= Test.prototype.notStrictEquals
= Test.prototype.isNotEqual
= Test.prototype.isNot
= Test.prototype.not
= Test.prototype.doesNotEqual
= Test.prototype.isInequal
= function (a, b, msg, extra) {
    this._assert(a !== b, {
        message : defined(msg, 'should not be equal'),
        operator : 'notEqual',
        actual : a,
        notExpected : b,
        extra : extra
    });
};

Test.prototype.deepEqual
= Test.prototype.deepEquals
= Test.prototype.isEquivalent
= Test.prototype.same
= function (a, b, msg, extra) {
    this._assert(deepEqual(a, b, { strict: true }), {
        message : defined(msg, 'should be equivalent'),
        operator : 'deepEqual',
        actual : a,
        expected : b,
        extra : extra
    });
};

Test.prototype.deepLooseEqual
= Test.prototype.looseEqual
= Test.prototype.looseEquals
= function (a, b, msg, extra) {
    this._assert(deepEqual(a, b), {
        message : defined(msg, 'should be equivalent'),
        operator : 'deepLooseEqual',
        actual : a,
        expected : b,
        extra : extra
    });
};

Test.prototype.notDeepEqual
= Test.prototype.notEquivalent
= Test.prototype.notDeeply
= Test.prototype.notSame
= Test.prototype.isNotDeepEqual
= Test.prototype.isNotDeeply
= Test.prototype.isNotEquivalent
= Test.prototype.isInequivalent
= function (a, b, msg, extra) {
    this._assert(!deepEqual(a, b, { strict: true }), {
        message : defined(msg, 'should not be equivalent'),
        operator : 'notDeepEqual',
        actual : a,
        notExpected : b,
        extra : extra
    });
};

Test.prototype.notDeepLooseEqual
= Test.prototype.notLooseEqual
= Test.prototype.notLooseEquals
= function (a, b, msg, extra) {
    this._assert(!deepEqual(a, b), {
        message : defined(msg, 'should be equivalent'),
        operator : 'notDeepLooseEqual',
        actual : a,
        expected : b,
        extra : extra
    });
};

Test.prototype['throws'] = function (fn, expected, msg, extra) {
    if (typeof expected === 'string') {
        msg = expected;
        expected = undefined;
    }

    var caught = undefined;

    try {
        fn();
    } catch (err) {
        caught = { error : err };
        var message = err.message;
        delete err.message;
        err.message = message;
    }

    var passed = caught;

    if (expected instanceof RegExp) {
        passed = expected.test(caught && caught.error);
        expected = String(expected);
    }

    if (typeof expected === 'function' && caught) {
        passed = caught.error instanceof expected;
        caught.error = caught.error.constructor;
    }

    this._assert(typeof fn === 'function' && passed, {
        message : defined(msg, 'should throw'),
        operator : 'throws',
        actual : caught && caught.error,
        expected : expected,
        error: !passed && caught && caught.error,
        extra : extra
    });
};

Test.prototype.doesNotThrow = function (fn, expected, msg, extra) {
    if (typeof expected === 'string') {
        msg = expected;
        expected = undefined;
    }
    var caught = undefined;
    try {
        fn();
    }
    catch (err) {
        caught = { error : err };
    }
    this._assert(!caught, {
        message : defined(msg, 'should not throw'),
        operator : 'throws',
        actual : caught && caught.error,
        expected : expected,
        error : caught && caught.error,
        extra : extra
    });
};

Test.skip = function (name_, _opts, _cb) {
    var args = getTestArgs.apply(null, arguments);
    args.opts.skip = true;
    return Test(args.name, args.opts, args.cb);
};

// vim: set softtabstop=4 shiftwidth=4:


}).call(this)}).call(this,"/node_modules/tape/lib")
},{"./next_tick":234,"deep-equal":132,"defined":137,"events":113,"has":213,"inherits":216,"path":114,"string.prototype.trim":228}],237:[function(require,module,exports){
var hasMap = typeof Map === 'function' && Map.prototype;
var mapSizeDescriptor = Object.getOwnPropertyDescriptor && hasMap ? Object.getOwnPropertyDescriptor(Map.prototype, 'size') : null;
var mapSize = hasMap && mapSizeDescriptor && typeof mapSizeDescriptor.get === 'function' ? mapSizeDescriptor.get : null;
var mapForEach = hasMap && Map.prototype.forEach;
var hasSet = typeof Set === 'function' && Set.prototype;
var setSizeDescriptor = Object.getOwnPropertyDescriptor && hasSet ? Object.getOwnPropertyDescriptor(Set.prototype, 'size') : null;
var setSize = hasSet && setSizeDescriptor && typeof setSizeDescriptor.get === 'function' ? setSizeDescriptor.get : null;
var setForEach = hasSet && Set.prototype.forEach;

module.exports = function inspect_ (obj, opts, depth, seen) {
    if (!opts) opts = {};
    
    var maxDepth = opts.depth === undefined ? 5 : opts.depth;
    if (depth === undefined) depth = 0;
    if (depth >= maxDepth && maxDepth > 0
    && obj && typeof obj === 'object') {
        return '[Object]';
    }
    
    if (seen === undefined) seen = [];
    else if (indexOf(seen, obj) >= 0) {
        return '[Circular]';
    }
    
    function inspect (value, from) {
        if (from) {
            seen = seen.slice();
            seen.push(from);
        }
        return inspect_(value, opts, depth + 1, seen);
    }
    
    if (typeof obj === 'string') {
        return inspectString(obj);
    }
    else if (typeof obj === 'function') {
        var name = nameOf(obj);
        return '[Function' + (name ? ': ' + name : '') + ']';
    }
    else if (obj === null) {
        return 'null';
    }
    else if (isSymbol(obj)) {
        var symString = Symbol.prototype.toString.call(obj);
        return typeof obj === 'object' ? 'Object(' + symString + ')' : symString;
    }
    else if (isElement(obj)) {
        var s = '<' + String(obj.nodeName).toLowerCase();
        var attrs = obj.attributes || [];
        for (var i = 0; i < attrs.length; i++) {
            s += ' ' + attrs[i].name + '="' + quote(attrs[i].value) + '"';
        }
        s += '>';
        if (obj.childNodes && obj.childNodes.length) s += '...';
        s += '</' + String(obj.nodeName).toLowerCase() + '>';
        return s;
    }
    else if (isArray(obj)) {
        if (obj.length === 0) return '[]';
        var xs = Array(obj.length);
        for (var i = 0; i < obj.length; i++) {
            xs[i] = has(obj, i) ? inspect(obj[i], obj) : '';
        }
        return '[ ' + xs.join(', ') + ' ]';
    }
    else if (isError(obj)) {
        var parts = [];
        for (var key in obj) {
            if (!has(obj, key)) continue;
            
            if (/[^\w$]/.test(key)) {
                parts.push(inspect(key) + ': ' + inspect(obj[key]));
            }
            else {
                parts.push(key + ': ' + inspect(obj[key]));
            }
        }
        if (parts.length === 0) return '[' + obj + ']';
        return '{ [' + obj + '] ' + parts.join(', ') + ' }';
    }
    else if (typeof obj === 'object' && typeof obj.inspect === 'function') {
        return obj.inspect();
    }
    else if (isMap(obj)) {
        var parts = [];
        mapForEach.call(obj, function (value, key) {
            parts.push(inspect(key, obj) + ' => ' + inspect(value, obj));
        });
        return 'Map (' + mapSize.call(obj) + ') {' + parts.join(', ') + '}';
    }
    else if (isSet(obj)) {
        var parts = [];
        setForEach.call(obj, function (value ) {
            parts.push(inspect(value, obj));
        });
        return 'Set (' + setSize.call(obj) + ') {' + parts.join(', ') + '}';
    }
    else if (typeof obj === 'object' && !isDate(obj) && !isRegExp(obj)) {
        var xs = [], keys = [];
        for (var key in obj) {
            if (has(obj, key)) keys.push(key);
        }
        keys.sort();
        for (var i = 0; i < keys.length; i++) {
            var key = keys[i];
            if (/[^\w$]/.test(key)) {
                xs.push(inspect(key) + ': ' + inspect(obj[key], obj));
            }
            else xs.push(key + ': ' + inspect(obj[key], obj));
        }
        if (xs.length === 0) return '{}';
        return '{ ' + xs.join(', ') + ' }';
    }
    else return String(obj);
};

function quote (s) {
    return String(s).replace(/"/g, '&quot;');
}

function isArray (obj) { return toStr(obj) === '[object Array]' }
function isDate (obj) { return toStr(obj) === '[object Date]' }
function isRegExp (obj) { return toStr(obj) === '[object RegExp]' }
function isError (obj) { return toStr(obj) === '[object Error]' }
function isSymbol (obj) { return toStr(obj) === '[object Symbol]' }

var hasOwn = Object.prototype.hasOwnProperty || function (key) { return key in this; };
function has (obj, key) {
    return hasOwn.call(obj, key);
}

function toStr (obj) {
    return Object.prototype.toString.call(obj);
}

function nameOf (f) {
    if (f.name) return f.name;
    var m = f.toString().match(/^function\s*([\w$]+)/);
    if (m) return m[1];
}

function indexOf (xs, x) {
    if (xs.indexOf) return xs.indexOf(x);
    for (var i = 0, l = xs.length; i < l; i++) {
        if (xs[i] === x) return i;
    }
    return -1;
}

function isMap (x) {
    if (!mapSize) {
        return false;
    }
    try {
        mapSize.call(x);
        return true;
    } catch (e) {}
    return false;
}

function isSet (x) {
    if (!setSize) {
        return false;
    }
    try {
        setSize.call(x);
        return true;
    } catch (e) {}
    return false;
}

function isElement (x) {
    if (!x || typeof x !== 'object') return false;
    if (typeof HTMLElement !== 'undefined' && x instanceof HTMLElement) {
        return true;
    }
    return typeof x.nodeName === 'string'
        && typeof x.getAttribute === 'function'
    ;
}

function inspectString (str) {
    var s = str.replace(/(['\\])/g, '\\$1').replace(/[\x00-\x1f]/g, lowbyte);
    return "'" + s + "'";
    
    function lowbyte (c) {
        var n = c.charCodeAt(0);
        var x = { 8: 'b', 9: 't', 10: 'n', 12: 'f', 13: 'r' }[n];
        if (x) return '\\' + x;
        return '\\x' + (n < 0x10 ? '0' : '') + n.toString(16);
    }
}

},{}],238:[function(require,module,exports){
(function (process){(function (){
var Stream = require('stream')

// through
//
// a stream that does nothing but re-emit the input.
// useful for aggregating a series of changing but not ending streams into one stream)

exports = module.exports = through
through.through = through

//create a readable writable stream.

function through (write, end, opts) {
  write = write || function (data) { this.queue(data) }
  end = end || function () { this.queue(null) }

  var ended = false, destroyed = false, buffer = [], _ended = false
  var stream = new Stream()
  stream.readable = stream.writable = true
  stream.paused = false

//  stream.autoPause   = !(opts && opts.autoPause   === false)
  stream.autoDestroy = !(opts && opts.autoDestroy === false)

  stream.write = function (data) {
    write.call(this, data)
    return !stream.paused
  }

  function drain() {
    while(buffer.length && !stream.paused) {
      var data = buffer.shift()
      if(null === data)
        return stream.emit('end')
      else
        stream.emit('data', data)
    }
  }

  stream.queue = stream.push = function (data) {
//    console.error(ended)
    if(_ended) return stream
    if(data === null) _ended = true
    buffer.push(data)
    drain()
    return stream
  }

  //this will be registered as the first 'end' listener
  //must call destroy next tick, to make sure we're after any
  //stream piped from here.
  //this is only a problem if end is not emitted synchronously.
  //a nicer way to do this is to make sure this is the last listener for 'end'

  stream.on('end', function () {
    stream.readable = false
    if(!stream.writable && stream.autoDestroy)
      process.nextTick(function () {
        stream.destroy()
      })
  })

  function _end () {
    stream.writable = false
    end.call(stream)
    if(!stream.readable && stream.autoDestroy)
      stream.destroy()
  }

  stream.end = function (data) {
    if(ended) return
    ended = true
    if(arguments.length) stream.write(data)
    _end() // will emit or queue
    return stream
  }

  stream.destroy = function () {
    if(destroyed) return
    destroyed = true
    ended = true
    buffer.length = 0
    stream.writable = stream.readable = false
    stream.emit('close')
    return stream
  }

  stream.pause = function () {
    if(stream.paused) return
    stream.paused = true
    return stream
  }

  stream.resume = function () {
    if(stream.paused) {
      stream.paused = false
      stream.emit('resume')
    }
    drain()
    //may have become paused again,
    //as drain emits 'data'.
    if(!stream.paused)
      stream.emit('drain')
    return stream
  }
  return stream
}


}).call(this)}).call(this,require('_process'))
},{"_process":222,"stream":115}],239:[function(require,module,exports){
(function (setImmediate,clearImmediate){(function (){
var nextTick = require('process/browser.js').nextTick;
var apply = Function.prototype.apply;
var slice = Array.prototype.slice;
var immediateIds = {};
var nextImmediateId = 0;

// DOM APIs, for completeness

exports.setTimeout = function() {
  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);
};
exports.setInterval = function() {
  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);
};
exports.clearTimeout =
exports.clearInterval = function(timeout) { timeout.close(); };

function Timeout(id, clearFn) {
  this._id = id;
  this._clearFn = clearFn;
}
Timeout.prototype.unref = Timeout.prototype.ref = function() {};
Timeout.prototype.close = function() {
  this._clearFn.call(window, this._id);
};

// Does not start the time, just sets up the members needed.
exports.enroll = function(item, msecs) {
  clearTimeout(item._idleTimeoutId);
  item._idleTimeout = msecs;
};

exports.unenroll = function(item) {
  clearTimeout(item._idleTimeoutId);
  item._idleTimeout = -1;
};

exports._unrefActive = exports.active = function(item) {
  clearTimeout(item._idleTimeoutId);

  var msecs = item._idleTimeout;
  if (msecs >= 0) {
    item._idleTimeoutId = setTimeout(function onTimeout() {
      if (item._onTimeout)
        item._onTimeout();
    }, msecs);
  }
};

// That's not how node.js implements it but the exposed api is the same.
exports.setImmediate = typeof setImmediate === "function" ? setImmediate : function(fn) {
  var id = nextImmediateId++;
  var args = arguments.length < 2 ? false : slice.call(arguments, 1);

  immediateIds[id] = true;

  nextTick(function onNextTick() {
    if (immediateIds[id]) {
      // fn.call() is faster so we optimize for the common use-case
      // @see http://jsperf.com/call-apply-segu
      if (args) {
        fn.apply(null, args);
      } else {
        fn.call(null);
      }
      // Prevent ids from leaking
      exports.clearImmediate(id);
    }
  });

  return id;
};

exports.clearImmediate = typeof clearImmediate === "function" ? clearImmediate : function(id) {
  delete immediateIds[id];
};
}).call(this)}).call(this,require("timers").setImmediate,require("timers").clearImmediate)
},{"process/browser.js":222,"timers":239}],240:[function(require,module,exports){
(function (global){(function (){

/**
 * Module exports.
 */

module.exports = deprecate;

/**
 * Mark that a method should not be used.
 * Returns a modified function which warns once by default.
 *
 * If `localStorage.noDeprecation = true` is set, then it is a no-op.
 *
 * If `localStorage.throwDeprecation = true` is set, then deprecated functions
 * will throw an Error when invoked.
 *
 * If `localStorage.traceDeprecation = true` is set, then deprecated functions
 * will invoke `console.trace()` instead of `console.error()`.
 *
 * @param {Function} fn - the function to deprecate
 * @param {String} msg - the string to print to the console when `fn` is invoked
 * @returns {Function} a new "deprecated" version of `fn`
 * @api public
 */

function deprecate (fn, msg) {
  if (config('noDeprecation')) {
    return fn;
  }

  var warned = false;
  function deprecated() {
    if (!warned) {
      if (config('throwDeprecation')) {
        throw new Error(msg);
      } else if (config('traceDeprecation')) {
        console.trace(msg);
      } else {
        console.warn(msg);
      }
      warned = true;
    }
    return fn.apply(this, arguments);
  }

  return deprecated;
}

/**
 * Checks `localStorage` for boolean values for the given `name`.
 *
 * @param {String} name
 * @returns {Boolean}
 * @api private
 */

function config (name) {
  // accessing global.localStorage can trigger a DOMException in sandboxed iframes
  try {
    if (!global.localStorage) return false;
  } catch (_) {
    return false;
  }
  var val = global.localStorage[name];
  if (null == val) return false;
  return String(val).toLowerCase() === 'true';
}

}).call(this)}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}]},{},[51,52]);
