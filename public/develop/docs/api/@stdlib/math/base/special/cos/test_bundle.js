// modules are defined as an array
// [ module function, map of requireuires ]
//
// map of requireuires is short require name -> numeric require
//
// anything defined in a previous bundle is accessed via the
// orig method which is the requireuire for previous bundles

(function outer (modules, cache, entry) {
    // Save the require from previous bundle to this closure if any
    var previousRequire = typeof require == "function" && require;

    function findProxyquireifyName() {
        var deps = Object.keys(modules)
            .map(function (k) { return modules[k][1]; });

        for (var i = 0; i < deps.length; i++) {
            var pq = deps[i]['proxyquireify'];
            if (pq) return pq;
        }
    }

    var proxyquireifyName = findProxyquireifyName();

    function newRequire(name, jumped){
        // Find the proxyquireify module, if present
        var pqify = (proxyquireifyName != null) && cache[proxyquireifyName];

        // Proxyquireify provides a separate cache that is used when inside
        // a proxyquire call, and is set to null outside a proxyquire call.
        // This allows the regular caching semantics to work correctly both
        // inside and outside proxyquire calls while keeping the cached
        // modules isolated.
        // When switching from one proxyquire call to another, it clears
        // the cache to prevent contamination between different sets
        // of stubs.
        var currentCache = (pqify && pqify.exports._cache) || cache;

        if(!currentCache[name]) {
            if(!modules[name]) {
                // if we cannot find the the module within our internal map or
                // cache jump to the current global require ie. the last bundle
                // that was added to the page.
                var currentRequire = typeof require == "function" && require;
                if (!jumped && currentRequire) return currentRequire(name, true);

                // If there are other bundles on this page the require from the
                // previous one is saved to 'previousRequire'. Repeat this as
                // many times as there are bundles until the module is found or
                // we exhaust the require chain.
                if (previousRequire) return previousRequire(name, true);
                var err = new Error('Cannot find module \'' + name + '\'');
                err.code = 'MODULE_NOT_FOUND';
                throw err;
            }
            var m = currentCache[name] = {exports:{}};

            // The normal browserify require function
            var req = function(x){
                var id = modules[name][1][x];
                return newRequire(id ? id : x);
            };

            // The require function substituted for proxyquireify
            var moduleRequire = function(x){
                var pqify = (proxyquireifyName != null) && cache[proxyquireifyName];
                // Only try to use the proxyquireify version if it has been `require`d
                if (pqify && pqify.exports._proxy) {
                    return pqify.exports._proxy(req, x);
                } else {
                    return req(x);
                }
            };

            modules[name][0].call(m.exports,moduleRequire,m,m.exports,outer,modules,currentCache,entry);
        }
        return currentCache[name].exports;
    }
    for(var i=0;i<entry.length;i++) newRequire(entry[i]);

    // Override the current require with this new one
    return newRequire;
})
({1:[function(require,module,exports){
'use strict';

var ctors = {
	'uint16': Uint16Array,
	'uint8': Uint8Array
};


// EXPORTS //

module.exports = ctors;

},{}],2:[function(require,module,exports){
'use strict';

/**
* Returns a boolean indicating if an environment is little endian.
*
* @module @stdlib/assert/is-little-endian
*
* @example
* var IS_LITTLE_ENDIAN = require( '@stdlib/assert/is-little-endian' );
*
* var bool = IS_LITTLE_ENDIAN;
* // returns <boolean>
*/

// MODULES //

var IS_LITTLE_ENDIAN = require( './is_little_endian.js' );


// EXPORTS //

module.exports = IS_LITTLE_ENDIAN;

},{"./is_little_endian.js":3}],3:[function(require,module,exports){
'use strict';

// MODULES //

var ctors = require( './ctors.js' );


// MAIN //

/**
* Returns a boolean indicating if an environment is little endian.
*
* @returns {boolean} boolean indicating if an environment is little endian
*
* @example
* var bool = isLittleEndian();
* // returns <boolean>
*/
function isLittleEndian() {
	var uint16view;
	var uint8view;

	uint16view = new ctors[ 'uint16' ]( 1 );

	// Set the uint16 view to a value having distinguishable lower and higher order words.
	// 4660 => 0x1234 => 0x12 0x34 => '00010010 00110100' => (0x12,0x34) == (18,52)
	uint16view[ 0 ] = 0x1234;

	// Create a uint8 view on top of the uint16 buffer:
	uint8view = new ctors[ 'uint8' ]( uint16view.buffer );

	// If little endian, the least significant byte will be first...
	return ( uint8view[ 0 ] === 0x34 );
} // end FUNCTION isLittleEndian()


// EXPORTS //

module.exports = isLittleEndian();

},{"./ctors.js":1}],4:[function(require,module,exports){
'use strict';

/**
* Test if a numeric value is infinite.
*
* @module @stdlib/assert/is-infinite
*
* @example
* var isInfinite = require( '@stdlib/math/base/assert/is-infinite' );
*
* var bool = isInfinite( Number.POSITIVE_INFINITY );
* // returns true
*
* bool = isInfinite( Number.NEGATIVE_INFINITY );
* // returns true
*
* bool = isInfinite( 5.0 );
* // returns false
*
* bool = isInfinite( NaN );
* // returns false
*/

// MODULES //

var isInfinite = require( './is_infinite.js' );


// EXPORTS //

module.exports = isInfinite;

},{"./is_infinite.js":5}],5:[function(require,module,exports){
'use strict';

// MODULES //

var PINF = require( '@stdlib/math/constants/float64-pinf' );
var NINF = require( '@stdlib/math/constants/float64-ninf' );


// MAIN //

/**
* Tests if a numeric value is infinite.
*
* @param {number} x - value to test
* @returns {boolean} boolean indicating whether the value is infinite
*
* @example
* var bool = isInfinite( Number.POSITIVE_INFINITY );
* // returns true
*
* @example
* var bool = isInfinite( Number.NEGATIVE_INFINITY );
* // returns true
*
* @example
* var bool = isInfinite( 5.0 );
* // returns false
*
* @example
* var bool = isInfinite( NaN );
* // returns false
*/
function isInfinite( x ) {
	return (x === PINF || x === NINF);
} // end FUNCTION isInfinite()


// EXPORTS //

module.exports = isInfinite;

},{"@stdlib/math/constants/float64-ninf":53,"@stdlib/math/constants/float64-pinf":54}],6:[function(require,module,exports){
'use strict';

/**
* Test if a numeric value is `NaN`.
*
* @module @stdlib/math/base/assert/is-nan
*
* @example
* var isnan = require( '@stdlib/math/base/assert/is-nan' );
*
* var bool = isnan( NaN );
* // returns true
*
* bool = isnan( 7.0 );
* // returns false
*/

// MODULES //

var isnan = require( './is_nan.js' );


// EXPORTS //

module.exports = isnan;

},{"./is_nan.js":7}],7:[function(require,module,exports){
'use strict';

// MAIN //

/**
* Tests if a numeric value is `NaN`.
*
* @param {number} x - value to test
* @returns {boolean} boolean indicating whether the value is `NaN`
*
* @example
* var bool = isnan( NaN );
* // returns true
*
* @example
* var bool = isnan( 7.0 );
* // returns false
*/
function isnan( x ) {
	return (x !== x);
} // end FUNCTION isnan()


// EXPORTS //

module.exports = isnan;

},{}],8:[function(require,module,exports){
'use strict';

/**
* Computes the absolute value of `x`.
*
* @param {number} x - input value
* @returns {number} absolute value
*
* @example
* var v = abs( -1.0 );
* // returns 1.0
*
* @example
* var v = abs( 2.0 );
* // returns 2.0
*
* @example
* var v = abs( 0.0 );
* // returns 0.0
*
* @example
* var v = abs( -0.0 );
* // returns 0.0
*
* @example
* var v = abs( NaN );
* // returns NaN
*/
function abs( x ) {
	if ( x < 0.0 ) {
		return -x;
	}
	if ( x === 0.0 ) {
		return 0.0; // handle negative zero
	}
	return x;
} // end FUNCTION abs()


// EXPORTS //

module.exports = abs;

},{}],9:[function(require,module,exports){
'use strict';

/**
* Compute an absolute value.
*
* @module @stdlib/math/base/special/abs
*
* @example
* var abs = require( '@stdlib/math/base/special/abs' );
*
* var v = abs( -1.0 );
* // returns 1.0
*
* v = abs( 2.0 );
* // returns 2.0
*
* v = abs( 0.0 );
* // returns 0.0
*
* v = abs( -0.0 );
* // returns 0.0
*
* v = abs( NaN );
* // returns NaN
*/

// MODULES //

var abs = require( './abs.js' );


// EXPORTS //

module.exports = abs;

},{"./abs.js":8}],10:[function(require,module,exports){
'use strict';

// MODULES //

var toWords = require( '@stdlib/math/base/utils/float64-to-words' );
var getHighWord = require( '@stdlib/math/base/utils/float64-get-high-word' );
var fromWords = require( '@stdlib/math/base/utils/float64-from-words' );


// VARIABLES //

// 10000000000000000000000000000000 => 2147483648 => 0x80000000
var SIGN_MASK = 0x80000000;

// 01111111111111111111111111111111 => 2147483647 => 0x7fffffff
var MAGNITUDE_MASK = 0x7fffffff;


// MAIN //

/**
* Returns a double-precision floating-point number with the magnitude of `x` and the sign of `y`.
*
* @param {number} x - number from which to derive a magnitude
* @param {number} y - number from which to derive a sign
* @returns {number} a double-precision floating-point number
*
* @example
* var z = copysign( -3.14, 10.0 );
* // returns 3.14
*
* @example
* var z = copysign( 3.14, -1.0 );
* // returns -3.14
*
* @example
* var z = copysign( 1.0, -0.0 );
* // returns -1.0
*
* @example
* var z = copysign( -3.14, -0.0 );
* // returns -3.14
*
* @example
* var z = copysign( -0.0, 1.0 );
* // returns 0.0
*/
function copysign( x, y ) {
	var hx;
	var hy;

	// Split `x` into higher and lower order words:
	x = toWords( x );
	hx = x[ 0 ];

	// Turn off the sign bit of `x`:
	hx &= MAGNITUDE_MASK;

	// Extract the higher order word from `y`:
	hy = getHighWord( y );

	// Leave only the sign bit of `y` turned on:
	hy &= SIGN_MASK;

	// Copy the sign bit of `y` to `x`:
	hx |= hy;

	// Return a new value having the same magnitude as `x`, but with the sign of `y`:
	return fromWords( hx, x[ 1 ] );
} // end FUNCTION copysign()


// EXPORTS //

module.exports = copysign;

},{"@stdlib/math/base/utils/float64-from-words":34,"@stdlib/math/base/utils/float64-get-high-word":38,"@stdlib/math/base/utils/float64-to-words":44}],11:[function(require,module,exports){
'use strict';

/**
* Return a double-precision floating-point number with the magnitude of `x` and the sign of `y`.
*
* @module @stdlib/math/base/special/copysign
*
* @example
* var copysign = require( '@stdlib/math/base/special/copysign' );
*
* var z = copysign( -3.14, 10.0 );
* // returns 3.14
*
* z = copysign( 3.14, -1.0 );
* // returns -3.14
*
* z = copysign( 1.0, -0.0 );
* // returns -1.0
*
* z = copysign( -3.14, -0.0 );
* // returns -3.14
*
* z = copysign( -0.0, 1.0 );
* // returns 0.0
*/

// MODULES //

var copysign = require( './copysign.js' );


// EXPORTS //

module.exports = copysign;

},{"./copysign.js":10}],12:[function(require,module,exports){
'use strict';

/*
* The following copyright, license, and long comment were part of the original implementation available as part of [FreeBSD]{@link https://svnweb.freebsd.org/base/release/9.3.0/lib/msun/src/s_cos.c?view=log}.
*
* The implementation follows the original, but has been modified for JavaScript.
*/

/*
* ====================================================
* Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.
*
* Developed at SunPro, a Sun Microsystems, Inc. business.
* Permission to use, copy, modify, and distribute this
* software is freely granted, provided that this notice
* is preserved.
* ====================================================
*/

// MODULES //

var getHighWord = require( '@stdlib/math/base/utils/float64-get-high-word' );
var cosKernel = require( './cos_kernel.js' );
var sinKernel = require( './sin_kernel.js' );
var remPio2 = require( './rem_pio2.js' );


// MAIN //

/**
* Computes the cosine of a number.
*
* @param {number} x - input value
* @returns {number} cosine (in radians)
*
* @example
* var v = cos( 0.0 );
* // returns 1.0
*
* @example
* var v = cos( Math.PI/4.0 );
* // returns ~0.707
*
* @example
* var v = cos( -Math.PI/6.0 );
* // returns ~0.866
*
* @example
* var v = cos( NaN );
* // returns NaN
*/
function cos( x ) {
	var ix;
	var n;
	var y;
	var z;

	y = new Array( 2 );
	z = 0.0;
	ix = getHighWord( x );

	// Case: |x| ~< pi/4
	ix &= 0x7fffffff;
	if ( ix <= 0x3fe921fb ) {
		// Case: x < 2**-27
		if ( ix<0x3e400000 ) {
			if ( (x|0) === 0 ) {
				// Generate inexact...
				return 1.0;
			}
		}
		return cosKernel( x, z );
	}
	// Case: cos(Inf or NaN) is NaN */
	else if ( ix >= 0x7ff00000 ) {
		return NaN;
	}
	// Case: Argument reduction needed...
	n = remPio2( x, y );
	switch ( n & 3 ) {
	case 0:
		return cosKernel( y[0], y[1] );
	case 1:
		return -sinKernel( y[0], y[1], 1 );
	case 2:
		return -cosKernel( y[0], y[1] );
	default:
		return sinKernel( y[0], y[1], 1 );
	}
} // end FUNCTION cos()


// EXPORTS //

module.exports = cos;

},{"./cos_kernel.js":13,"./rem_pio2.js":15,"./sin_kernel.js":17,"@stdlib/math/base/utils/float64-get-high-word":38}],13:[function(require,module,exports){
'use strict';

/*
* The following copyright, license, and long comment were part of the original implementation available as part of [FreeBSD]{@link https://svnweb.freebsd.org/base/release/9.3.0/lib/msun/src/k_cos.c?view=co}.
*
* The implementation follows the original, but has been modified for JavaScript.
*/

/*
* ====================================================
* Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.
*
* Developed at SunSoft, a Sun Microsystems, Inc. business.
* Permission to use, copy, modify, and distribute this
* software is freely granted, provided that this notice
* is preserved.
* ====================================================
*/

// VARIABLES //

var C1  =  4.16666666666666019037e-02; /* 0x3FA55555, 0x5555554C */
var C2  = -1.38888888888741095749e-03; /* 0xBF56C16C, 0x16C15177 */
var C3  =  2.48015872894767294178e-05; /* 0x3EFA01A0, 0x19CB1590 */
var C4  = -2.75573143513906633035e-07; /* 0xBE927E4F, 0x809C52AD */
var C5  =  2.08757232129817482790e-09; /* 0x3E21EE9E, 0xBDB4B1C4 */
var C6  = -1.13596475577881948265e-11; /* 0xBDA8FAE9, 0xBE8838D4 */


// MAIN //

/**
* Compute the cos function on \\( [-\pi/4, \pi/4] \\), \\( \pi/4 \approx 0.785398164 \\)
*
* #### Method
*
* * Since \\( \cos(-x) = \cos(x) \\), we need only to consider positive x.
* * If \\( x < 2^-27 \\), return 1 with inexact if \\( x \ne 0 \\).
* * \\( cos(x) \\) is approximated by a polynomial of degree 14 on \\( [0,\pi/4] \\)
*
*   ``` tex
*   \cos(x) \approx 1 - \frac{x \cdot x}{2} + C_1 \cdot x^4 + \ldots + C_6 \cdot x^{14}
*   ```
*
*   where the remez error is
*
*   ``` tex
*   \left| \cos(x) - \left( 1 - 0.5x^2 + C_1x^4 +C_2x^6 +C_3x^8 +C_4x^{10} +C_5x^{12}  +C_6x^{15} \right) \right| \le 2^{-58}
*   ```
* * Let \\( C_1x^4 +C_2x^6 +C_3x^8 +C_4x^{10} +C_5x^{12}  +C_6x^{14} \\), then
*
*   ``` tex
*    \cos(x) \approx 1 - \tfrac{x \cdot x}{2} + r
*   ```
*
*   Since \\( \cos(x+y) \approx \cos(x) - \sin(x) \cdot y \approx \cos(x) - x \cdot y \\), a correction term is necessary in \\( \cos(x) \\) and hence
*
*   ``` tex
*   \cos(x+y) = 1 - \left( \frac{x \cdot x}{2} - (r - x \cdot y) \right)
*   ```
*
*   For better accuracy, rearrange to
*
*   ``` tex
*   \cos(x+y) \approx w + \left( tmp + ( r - x \cdot y ) \right)
*   ```
*
*   where \\( w = 1 - \frac{x \cdot x}{2} \\) and \\( tmp \\) is a tiny correction term ( \\( 1 - \frac{x \cdot x}{2} = w + tmp \\) exactly in infinite precision). The exactness of w + tmp in infinite precision depends on w and tmp having the same precision as x.
*
* @param {number} x - input value (assumed to be bounded by ~pi/4 in magnitude)
* @param {number} y - tail of x.
* @returns {number} cosine (in radians)
*/
function cosKernel( x, y ) {
	var hz;
	var r;
	var w;
	var z;

	z  = x * x;
	w  = z * z;
	r  = z * ( C1 + z*(C2+z*C3) ) + w * w * ( C4 + z*(C5+z*C6) );
	hz = 0.5 * z;
	w  = 1.0 - hz;
	return w + ( ( (1.0-w) - hz ) + ( z*r - x*y ) );
} // end FUNCTION cosKernel()


// EXPORTS //

module.exports = cosKernel;

},{}],14:[function(require,module,exports){
'use strict';

/**
* Compute the cosine of a number.
*
* @module @stdlib/math/base/special/cos
*
* @example
* var cos = require( '@stdlib/math/base/special/cos' );
*
* var v = cos( 0.0 );
* // returns 1.0
*
* v = cos( Math.PI/4.0 );
* // returns ~0.707
*
* v = cos( -Math.PI/6.0 );
* // returns ~0.866
*/

// MODULES //

var cos = require( './cos.js' );


// EXPORTS //

module.exports = cos;

},{"./cos.js":12}],15:[function(require,module,exports){
'use strict';

/*
* The following copyright, license, and long comment were part of the original implementation available as part of [FreeBSD]{@link https://svnweb.freebsd.org/base/release/9.3.0/lib/msun/src/e_rem_pio2.c?view=co}.
*
* The implementation follows the original, but has been modified for JavaScript.
*/

/*
* ====================================================
* Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.
*
* Developed at SunSoft, a Sun Microsystems, Inc. business.
* Permission to use, copy, modify, and distribute this
* software is freely granted, provided that this notice
* is preserved.
* ====================================================
*
* Optimized by Bruce D. Evans.
*/

// MODULES //

var getHighWord = require( '@stdlib/math/base/utils/float64-get-high-word' );
var getLowWord = require( '@stdlib/math/base/utils/float64-get-low-word' );
var fromWords = require( '@stdlib/math/base/utils/float64-from-words' );
var round = require( '@stdlib/math/base/special/round' );
var remPio2Kernel = require( './rem_pio2_kernel.js' );


// VARIABLES //

var ZERO =  0.00000000000000000000e+00; /* 0x00000000, 0x00000000 */
var TWO24 =  1.67772160000000000000e+07; /* 0x41700000, 0x00000000 */

// 53 bits of 2/PI
var INVPIO2 =  6.36619772367581382433e-01; /* 0x3FE45F30, 0x6DC9C883 */

// First 33 bit of PI/2
var PIO2_1  =  1.57079632673412561417e+00; /* 0x3FF921FB, 0x54400000 */

// PIO2_1T = PI/2 - PIO2_1
var PIO2_1T =  6.07710050650619224932e-11; /* 0x3DD0B461, 0x1A626331 */

// Second 33 bit of PI/2
var PIO2_2  =  6.07710050630396597660e-11; /* 0x3DD0B461, 0x1A600000 */

// PIO2_2T = PI/2 - ( PIO2_1 + PIO2_2 )
var PIO2_2T =  2.02226624879595063154e-21; /* 0x3BA3198A, 0x2E037073 */

// Third 33 bit of PI/2
var PIO2_3  =  2.02226624871116645580e-21; /* 0x3BA3198A, 0x2E000000 */

// PIO2_3T = PI/2 - ( PIO2_1 + PIO2_2 + PIO2_3 )
var PIO2_3T =  8.47842766036889956997e-32; /* 0x397B839A, 0x252049C1 */


// MAIN //

/**
* Compute x - n*pi/2 = r. Returns n and stores the remainder `r`
* as two numbers y[0] and y[1] such that y[0]+y[1] = r.
*
* @private
* @param {number} x - input value
* @param {Array} y - remainder elements
* @returns {integer} n - factor of pi/2
*/
function remPio2( x, y ) {
	var low;
	var e0;
	var hx;
	var ix;
	var nx;
	var tx;
	var ty;
	var i;
	var n;
	var z;

	tx = new Array( 3 );
	ty = new Array( 2 );

	hx = getHighWord( x );
	ix = hx & 0x7fffffff;

	// Case: |x| ~<= pi/4 , no need for reduction
	if ( ix <= 0x3fe921fb ) {
		y[ 0 ] = x;
		y[ 1 ] = 0;
		return 0;
	}

	// Case: |x| ~<= 5pi/4
	if ( ix <= 0x400f6a7a ) {
		// Case: |x| ~= pi/2 or 2pi/2
		if ( (ix & 0xfffff) === 0x921fb ) {
			// Cancellation => use medium case
			return remPio2Medium( x, ix, y );
		}
		// Case: |x| ~<= 3pi/4
		if ( ix <= 0x4002d97c ) {
			if ( x > 0.0 ) {
				z = x - PIO2_1;
				y[ 0 ] = z - PIO2_1T;
				y[ 1 ] = ( z - y[0] ) - PIO2_1T;
				return 1.0;
			} else {
				z = x + PIO2_1;
				y[ 0 ] = z + PIO2_1T;
				y[ 1 ] = ( z - y[0] ) + PIO2_1T;
				return -1.0;
			}
		}
		else {
			if ( x > 0.0 ) {
				z = x - 2 * PIO2_1;
				y[ 0 ] = z - 2 * PIO2_1T;
				y[ 1 ] = ( z - y[0] ) -2 * PIO2_1T;
				return 2;
			} else {
				z = x + 2 * PIO2_1;
				y[ 0 ] = z + 2 * PIO2_1T;
				y[ 1 ] = ( z - y[0] ) + 2 * PIO2_1T;
				return -2;
			}
		}
	}
	// Case: |x| ~<= 9pi/4
	if ( ix <= 0x401c463b ) {
		// Case: |x| ~<= 7pi/4
		if ( ix <= 0x4015fdbc ) {
			// Case: |x| ~= 3pi/2
			if ( ix === 0x4012d97c ) {
				return remPio2Medium( x, ix, y );
			}
			if ( x > 0.0 ) {
				z = x - 3 * PIO2_1;
				y[ 0 ] = z - 3 * PIO2_1T;
				y[ 1 ] = (z-y[0]) - 3 * PIO2_1T;
				return 3;
			} else {
				z = x + 3 * PIO2_1;
				y[ 0 ] = z + 3 * PIO2_1T;
				y[ 1 ] = ( z - y[0] ) + 3 * PIO2_1T;
				return -3;
			}
		} else {
			if ( ix === 0x401921fb ) {
				// Case: |x| ~= 4pi/2
				return remPio2Medium( x, ix, y );
			}
			if ( x > 0.0 ) {
				z = x - 4.0 * PIO2_1;
				y[ 0 ] = z - 4.0 * PIO2_1T;
				y[ 1 ] = ( z - y[0] ) - 4.0 * PIO2_1T;
				return +4;
			} else {
				z = x + 4.0 * PIO2_1;
				y[ 0 ] = z + 4.0 * PIO2_1T;
				y[ 1 ] = ( z - y[0] ) + 4.0 * PIO2_1T;
				return -4;
			}
		}
	}
	// Case: |x| ~< 2^20*(pi/2), medium size
	if ( ix < 0x413921fb ) {
		return remPio2Medium( x, ix, y );
	}
	// All other (large) arguments...
	// Case: x is inf or NaN */
	if ( ix >= 0x7ff00000 ) {
		y[ 0 ] = y[ 1 ] = NaN;
		return 0.0;
	}
	// Set z = scalbn(|x|,ilogb(x)-23)...
	low = getLowWord( x );
	// e0 = ilogb(z)-23:
	e0 = ( ix >> 20 ) - 1046;
	z = fromWords( ix - ((e0<<20)|0), low );
	for ( i = 0; i < 2; i++ ) {
		tx[ i ] = z|0;
		z = ( z - tx[i] ) * TWO24;
	}
	tx[ 2 ] = z;
	nx = 3;
	while ( tx[ nx-1 ] === ZERO ) {
		// Skip zero term...
		nx--;
	}
	n = remPio2Kernel( tx, ty, e0, nx, 1 );
	if ( x < 0.0 ) {
		y[ 0 ] = -ty[ 0 ];
		y[ 1 ] = -ty[ 1 ];
		return -n;
	}
	y[ 0 ] = ty[ 0 ];
	y[ 1 ] = ty[ 1 ];
	return n;
} // end FUNCTION remPio2()


/**
* Compute x - n*pi/2 = r for medium-sized inputs.
*
* @private
* @param {number} x - input value
* @param {int32} ix - higher word
* @param {Array} y - remainder elements
* @returns {integer} n - factor of pi/2
*/
function remPio2Medium( x, ix, y ) {
	var high;
	var n;
	var t;
	var r;
	var w;
	var i;
	var j;

	n = round( x * INVPIO2 );
	r = x - n * PIO2_1;
	w = n * PIO2_1T;
	// 1st round good to 85 bit...
	j = ix >> 20;
	y[ 0 ] = r - w;
	high = getHighWord( y[0] );
	i = j - ( (high>>20) & 0x7ff );
	if ( i > 16 ) {
		// 2nd iteration needed, good to 118...
		t  = r;
		w  = n * PIO2_2;
		r  = t - w;
		w  = n * PIO2_2T - ( (t-r) - w );
		y[ 0 ] = r - w;
		high = getHighWord( y[0] );
		i = j - ( (high>>20) & 0x7ff );
		if ( i > 49 )  {
			// 3rd iteration need, 151 bits acc
			t  = r;
			w  = n * PIO2_3;
			r  = t - w;
			w  = n * PIO2_3T - ( (t-r) - w );
			y[ 0 ] = r - w;
		}
	}
	y[ 1 ] = ( r - y[0] ) - w;
	return n;
} // end FUNCTION remPio2Medium()


// EXPORTS //

module.exports = remPio2;

},{"./rem_pio2_kernel.js":16,"@stdlib/math/base/special/round":29,"@stdlib/math/base/utils/float64-from-words":34,"@stdlib/math/base/utils/float64-get-high-word":38,"@stdlib/math/base/utils/float64-get-low-word":40}],16:[function(require,module,exports){
'use strict';

/*
* The following copyright, license, and long comment were part of the original implementation available as part of [FreeBSD]{@link https://svnweb.freebsd.org/base/release/9.3.0/lib/msun/src/k_rem_pio2.c?view=co}.
*
* The implementation follows the original, but has been modified for JavaScript.
*/

/*
* ====================================================
* Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.
*
* Developed at SunSoft, a Sun Microsystems, Inc. business.
* Permission to use, copy, modify, and distribute this
* software is freely granted, provided that this notice
* is preserved.
* ====================================================
*/

// MODULES //

var floor = require( '@stdlib/math/base/special/floor' );
var ldexp = require( '@stdlib/math/base/special/ldexp' );


// VARIABLES //

var INIT_JK = [
	3,
	4,
	4,
	6
]; /* initial value for jk */

/*
* Table of constants for 2/pi, 396 Hex digits (476 decimal) of 2/pi
*
*		integer array, contains the (24*i)-th to (24*i+23)-th
*		bit of 2/pi after binary point. The corresponding
*		floating value is
*
*			ipio2[i] * 2^(-24(i+1)).
*
* NB: This table must have at least (e0-3)/24 + jk terms.
*     For quad precision (e0 <= 16360, jk = 6), this is 686.
*/
var IPIO2 = [
	0xA2F983, 0x6E4E44, 0x1529FC, 0x2757D1, 0xF534DD, 0xC0DB62,
	0x95993C, 0x439041, 0xFE5163, 0xABDEBB, 0xC561B7, 0x246E3A,
	0x424DD2, 0xE00649, 0x2EEA09, 0xD1921C, 0xFE1DEB, 0x1CB129,
	0xA73EE8, 0x8235F5, 0x2EBB44, 0x84E99C, 0x7026B4, 0x5F7E41,
	0x3991D6, 0x398353, 0x39F49C, 0x845F8B, 0xBDF928, 0x3B1FF8,
	0x97FFDE, 0x05980F, 0xEF2F11, 0x8B5A0A, 0x6D1F6D, 0x367ECF,
	0x27CB09, 0xB74F46, 0x3F669E, 0x5FEA2D, 0x7527BA, 0xC7EBE5,
	0xF17B3D, 0x0739F7, 0x8A5292, 0xEA6BFB, 0x5FB11F, 0x8D5D08,
	0x560330, 0x46FC7B, 0x6BABF0, 0xCFBC20, 0x9AF436, 0x1DA9E3,
	0x91615E, 0xE61B08, 0x659985, 0x5F14A0, 0x68408D, 0xFFD880,
	0x4D7327, 0x310606, 0x1556CA, 0x73A8C9, 0x60E27B, 0xC08C6B
];

// Double precision array, obtained by cutting pi/2 into 24 bits chunks...
var PIO2 = [
	1.57079625129699707031e+00, /* 0x3FF921FB, 0x40000000 */
	7.54978941586159635335e-08, /* 0x3E74442D, 0x00000000 */
	5.39030252995776476554e-15, /* 0x3CF84698, 0x80000000 */
	3.28200341580791294123e-22, /* 0x3B78CC51, 0x60000000 */
	1.27065575308067607349e-29, /* 0x39F01B83, 0x80000000 */
	1.22933308981111328932e-36, /* 0x387A2520, 0x40000000 */
	2.73370053816464559624e-44, /* 0x36E38222, 0x80000000 */
	2.16741683877804819444e-51 /* 0x3569F31D, 0x00000000 */
];
var TWO24 =  1.67772160000000000000e+07; /* 0x41700000, 0x00000000 */
var TWON24 =  5.96046447753906250000e-08; /* 0x3E700000, 0x00000000 */


// FUNCTIONS //

/**
* Helper function performing the computation for remPio2Kernel().
*
* @private
* @param {PositiveNumber} x - input value
* @param {Array} y - ouput result in an array of double precision numbers.
* @param {integer} jz - number of terms of ipio2[] used.
* @param {Array} q - array with integral value, representing the 24-bits chunk of the product of x and 2/pi.
* @param {integer} q0 - the corresponding exponent of q[0]. Note that the exponent for q[i] would be q0-24*i.
* @param {integer} jk - jk+1 is the initial number of terms of IPIO2[] needed in the computation.
* @param {integer} jv - index for pointing to the suitable ipio2[] for the computation
* @param {integer} jx - nx - 1
* @param {Array} f - IPIO2[] in floating point
* @param {PositiveInteger} prec - precision in bits (can be 24 (single), 53 (double), 64 (extended), 113 (quad))
* @returns {number} last three digits of N
*/
function compute( x, y, jz, q, q0, jk, jv, jx, f, prec ) {
	var carry;
	var fq;
	var fw;
	var ih;
	var iq;
	var jp;
	var i;
	var k;
	var n;
	var j;
	var z;

	// jp+1 is the number of terms in PIo2[] needed:
	jp = jk;

	fq = new Array( 20 );
	iq = new Array( 20 );

	// Distill q[] into iq[] reversingly...
	for ( i = 0, j = jz, z = q[ jz ]; j > 0; i++, j-- ) {
		fw = ( TWON24 * z ) | 0;
		iq[ i ] = ( z-TWO24 * fw ) | 0;
		z = q[ j-1 ] + fw;
	}

	// Compute n...
	z  = ldexp( z, q0 );
	// Trim off integer >= 8:
	z -= 8.0 * floor( z * 0.125 );
	n  = z | 0;
	z -= n;
	ih = 0;
	if ( q0 > 0 ) {
		// Need iq[jz-1] to determine n...
		i  = ( iq[jz-1] >> (24-q0) );
		n += i;
		iq[ jz-1 ] -= i << (24-q0);
		ih = iq[ jz-1 ] >> (23-q0);
	}
	else if ( q0 === 0 ) {
		ih = iq[ jz-1 ] >> 23;
	}
	else if ( z >= 0.5 ) {
		ih = 2;
	}
	// Case: q > 0.5
	if ( ih > 0 ) {
		n += 1;
		carry = 0;
		// Compute 1-q:
		for ( i = 0; i < jz; i++ ) {
			j = iq[ i ];
			if ( carry === 0 ) {
				if ( j !== 0 ) {
					carry = 1;
					iq[ i ] = 0x1000000 - j;
				}
			} else  {
				iq[ i ] = 0xffffff - j;
			}
		}
		if ( q0 > 0 ) {
			// Rare case: chance is 1 in 12...
			switch ( q0 ) {
			case 1:
				iq[ jz-1 ] &= 0x7fffff;
			break;
			case 2:
				iq[ jz-1 ] &= 0x3fffff;
			break;
			}
		}
		if ( ih === 2 ) {
			z = 1.0 - z;
			if ( carry !== 0 ) {
				z -= ldexp( 1.0, q0 );
			}
		}
	}
	// Check if recomputation is needed...
	if ( z === 0.0 ) {
		j = 0;
		for ( i = jz - 1; i >= jk; i-- ) {
			j |= iq[ i ];
		}
		if ( j === 0 ) {
			// Need recomputation...
			for( k = 1; iq[jk-k] === 0; k++ ) {}   /* k = no. of terms needed */
			for ( i = jz + 1; i <= jz + k; i++ ) {
				// Add q[jz+1] to q[jz+k]...
				f[ jx+i ] = IPIO2[ jv+i ];
				for ( j = 0, fw = 0.0; j <= jx; j++ ) {
					fw += x[ j ] * f[ jx + i-j ];
				}
				q[ i ] = fw;
			}
			jz += k;
			return compute( x, y, jz, q, q0, jk, jv, jx, f, prec );
		}
	}
	// Chop off zero terms...
	if ( z === 0.0 ) {
		jz -= 1;
		q0 -= 24;
		while ( iq[jz] === 0 ) {
			jz--;
			q0-=24;
		}
	} else {
		// Break z into 24-bit if necessary...
		z = ldexp( z, -q0 );
		if ( z >= TWO24 ) {
			fw = (TWON24*z) | 0;
			iq[ jz ] = ( z - TWO24*fw ) | 0;
			jz += 1;
			q0 += 24;
			iq[ jz ] = fw;
		} else {
			iq[ jz ] = z | 0;
		}
	}
	// Convert integer "bit" chunk to floating-point value...
	fw = ldexp( 1.0, q0 );
	for( i = jz; i >= 0; i-- ) {
		q[ i ] = fw * iq[i];
		fw *= TWON24;
	}
	// Compute PIo2[0,...,jp]*q[jz,...,0]...
	for( i = jz; i >= 0; i-- ) {
		for( fw = 0.0, k = 0; k <= jp && k <= jz - i; k++ ) {
			fw += PIO2[ k ] * q[ i+k ];
		}
		fq[ jz-i ] = fw;
	}
	// Compress fq[] into y[]...
	switch ( prec ) {
	case 0:
		fw = 0.0;
		for ( i = jz; i >= 0; i-- ) {
			fw += fq[ i ];
		}
		y[ 0 ] = ( ih === 0 )? fw: -fw;
	break;
	case 1:
	case 2:
		fw = 0.0;
		for ( i = jz; i >= 0; i-- ) {
			fw += fq[ i ];
		}
		y[ 0 ] = ( ih === 0 ) ? fw: -fw;
		fw = fq[ 0 ] - fw;
		for ( i = 1; i <= jz; i++ ) {
			fw += fq[i];
		}
		y[ 1 ] = ( ih === 0 )? fw: -fw;
	break;
	case 3:
		for ( i = jz; i > 0; i-- ) {
			fw = fq[ i-1 ] + fq[ i ];
			fq[ i ] += fq[ i-1 ]-fw;
			fq[ i-1 ] = fw;
		}
		for ( i = jz; i > 1; i-- ) {
			fw = fq[ i-1 ] + fq[ i ];
			fq[ i ]  += fq[ i-1 ] - fw;
			fq[ i-1 ] = fw;
		}
		for ( fw = 0.0, i = jz; i >= 2; i-- ) {
			fw += fq[ i ];
		}
		if ( ih === 0 ) {
			y[ 0 ] =  fq[ 0 ];
			y[ 1 ] =  fq[ 1 ];
			y[ 2 ] =  fw;
		} else {
			y[ 0 ] = -fq[ 0 ];
			y[ 1 ] = -fq[ 1 ];
			y[ 2 ] = -fw;
		}
	}
	return n & 7;
} // end FUNCTION compute()


// MAIN //

/*
* Return the last three digits of N with `y = x - N*pi/2` so that `|y| < pi/2`.
*
* #### Method
*
* The method is to compute the integer (mod 8) and fraction parts of (2/pi)*x without doing the full multiplication. In general we skip the part of the product that are known to be a huge integer (more accurately, = 0 mod 8 ). Thus the number of operations are independent of the exponent of the input.
*
* @param {PositiveNumber} x - input value
* @param {Array} y - ouput result in an array of double precision numbers.
* @param {PositiveInteger} e0 - The exponent of x[0]. Must be <= 16360
* @param {PositiveInteger} nx - dimension of x[]
* @param {PositiveInteger} prec - precision in bits (can be 24 (single), 53 (double), 64 (extended), 113 (quad))
* @returns {number} last three digits of N
*/
function remPio2Kernel( x, y, e0, nx, prec ) {
	var fw;
	var jk;
	var jv;
	var jx;
	var jz;
	var q0;
	var i;
	var j;
	var f;
	var m;
	var q;

	f = new Array( 20 );
	q = new Array( 20 );

	// Initialize jk...
	jk = INIT_JK[ prec ];
	// Determine jx, jv, q0, note that 3 > q0
	jx =  nx - 1;
	jv = ( e0 - 3 ) / 24;
	jv = jv | 0;
	if ( jv < 0 ) {
		jv = 0;
	}
	q0 =  e0 - 24 * ( jv + 1 );

	// Set up f[0] to f[jx+jk] where f[jx+jk] = ipio2[jv+jk]:
	j = jv - jx;
	m = jx + jk;
	for ( i = 0; i <= m; i++, j++ ) {
		f[ i ] = ( j < 0 ) ? 0.0 : IPIO2[ j ];
	}
	// Compute q[0],q[1],...q[jk]:
	for ( i = 0; i <= jk; i++ ) {
		for ( j = 0, fw = 0.0; j <= jx; j++ ) {
			fw += x[ j ] * f[ jx + i-j ];
		}
		q[ i ] = fw;
	}
	jz = jk;
	return compute( x, y, jz, q, q0, jk, jv, jx, f, prec );
} // end FUNCTION remPio2Kernel()


// EXPORTS //

module.exports = remPio2Kernel;

},{"@stdlib/math/base/special/floor":26,"@stdlib/math/base/special/ldexp":27}],17:[function(require,module,exports){
'use strict';

/*
* The following copyright, license, and long comment were part of the original implementation available as part of [FreeBSD]{@link https://svnweb.freebsd.org/base/release/9.3.0/lib/msun/src/k_sin.c?view=co}.
*
* The implementation follows the original, but has been modified for JavaScript.
*/

/*
* ====================================================
* Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.
*
* Developed at SunSoft, a Sun Microsystems, Inc. business.
* Permission to use, copy, modify, and distribute this
* software is freely granted, provided that this notice
* is preserved.
* ====================================================
*/

// VARIABLES //

var S1  = -1.66666666666666324348e-01; /* 0xBFC55555, 0x55555549 */
var S2  =  8.33333333332248946124e-03; /* 0x3F811111, 0x1110F8A6 */
var S3  = -1.98412698298579493134e-04; /* 0xBF2A01A0, 0x19C161D5 */
var S4  =  2.75573137070700676789e-06; /* 0x3EC71DE3, 0x57B1FE7D */
var S5  = -2.50507602534068634195e-08; /* 0xBE5AE5E6, 0x8A2B9CEB */
var S6  =  1.58969099521155010221e-10; /* 0x3DE5D93A, 0x5ACFD57C */


// MAIN //

/**
* Computes the sin function on \\( \approx [-\pi/4, \pi/4] \\) (except on -0), \\( \pi/4 \approx 0.7854 \\)
*
* #### Method
*
* * Since \\( \sin(-x) = -\sin(x) \\), we need only to consider positive x.
* * Callers must return \\( \sin(-0) = -0 \\) without calling here since our odd polynomial is not evaluated in a way that preserves -0. Callers may do the optimization \\( \sin(x) \approx x \\) for tiny x.
* * \\( \sin(x) \\) is approximated by a polynomial of degree 13 on \\( \left[0,\tfrac{pi}{4} \right] \\)
*
*   ``` tex
*   \sin(x) \approx x + S_1 \cdot x^3 + \ldots + S_6 \cdot x^{13}
*   ```
*
*   where
*
*   ``` tex
*   \left| \frac{\sin(x)}{x} \left( 1 + S_1 \cdot x + S_2 \cdot x + S_3 \cdot x + S_4 \cdot x + S_5 \cdot x + S_6 \cdot x \right) \right| \le 2^{-58}
*   ```
*
* * We have \\( \sin(x+y) = \sin(x) + \sin'(x') \cdot y \approx \sin(x) + (1-x*x/2) \cdot y \\). For better accuracy, let
*
*   ``` tex
*   r = x^3 * \left( S_2 + x^2 \cdot \left( S_3 + x^2 * \left( S_4 + x^2 \cdot ( S_5+x^2 \cdot S_6 ) \right) \right) \right)
*   ```
*
*   then
*
*   ``` tex
*   \sin(x) = x + \left( S_1 \cdot x + ( x \cdot (r-y/2) + y ) \right)
*   ```
*
* @param {number} x - input value (assumed to be bounded by ~pi/4 in magnitude)
* @param {number} y - tail of x.
* @param {number} iy - indicates whether y is 0. (if iy = 0, y assumed to be 0).
* @returns sine (in radians)
*/
function sinKernel( x, y, iy ) {
	var r;
	var v;
	var w;
	var z;

	z = x * x;
	w = z * z;
	r = S2 + z * ( S3 + z*S4 ) + z * w * ( S5 + z*S6 );
	v = z * x;
	if ( iy === 0 ) {
		return x + v * ( S1 + z*r );
	}
	else {
		return x - ( ( z * (0.5*y-v*r) - y ) - v * S1 );
	}
} // end FUNCTION sinKernel()


// EXPORTS //

module.exports = sinKernel;

},{}],18:[function(require,module,exports){
module.exports={"expected":[0.08963273688692398,-0.7865304314730533,0.9888022302898207,0.8441672870417682,-0.9690036819784501,0.48446211132929373,0.3047434572961164,-0.9023048129154999,-0.39815854416414864,0.9407806853915138,0.48760811433728457,0.28195610864937604,0.5051751761389315,-0.18492236155392333,-0.5886795623766945,0.0860468538765367,-0.7715879757971905,0.06586873428969757,0.7043409186239897,0.03391650476911208,-0.6300788778151482,-0.13336394757096387,-0.6142363264401243,-0.9812793518642419,0.5325228278621555,0.9571966202242358,-0.445505592380251,0.9511436774520083,0.9203973739085556,-0.9156330398532635,-0.9547847997976325,0.8710030246619589,-0.23947302002118817,-0.542654535967642,0.9835225866584905,0.6236737225707174,-0.9966443564507697,0.7428546161013218,-0.021905417945046177,-0.7128194544123896,-0.07785343638034914,0.7791756394316949,-0.9904971594913217,-0.8377715137614246,0.1967173328361098,-0.49476908491367283,-0.2934638024421413,0.897145920558202,0.3872874775358132,0.38710773648365493,0.8970597884689078,-0.29327743277512847,-0.49493848974664534,0.19652619072946909,0.5790830426582597,-0.9905239524335759,0.7790534303703496,-0.07765907900601851,-0.7126827148422006,-0.022100318347588778,0.7429851101953472,-0.9966283803318605,0.6235213231509955,0.9834873243112227,-0.542490778255396,-0.9605510862935179,0.8710987815085413,-0.954726824161479,-0.9157113943307859,0.9203211349813261,0.9512038491778986,-0.4456801164346884,0.9572530273702861,0.5326878244382951,-0.9813168781376871,-0.61439015223108,0.99560716377563,-0.6302302487214518,0.033721668686901025,0.7044792911050606,0.06606325726666636,-0.7717119717126072,0.08624107679559465,-0.5885219620868815,-0.1851139434016278,0.5050069234831551,0.28214314133904483,-0.8918616683138908,0.9407145772020585,-0.3979797079283254,-0.9022207541286308,0.3045577766935437,0.48463264466820644,-0.9690518246437305,0.8440627635246931,0.9888313038936883,-0.7864100263422816,0.08943857227315301,0.7209249265641086,-0.9995643151819658,-0.73502156758001,0.9975286077824251,-0.6327191940545378,-0.9855578722244355,0.8109505776200735,0.22816942522158007,-0.8652327233820684,0.9581765650959662,0.9108974606774308,-0.9248806319060714,0.9190607979284996,0.43506725287678544,-0.953767012305685,-0.5226466794372522,0.9789740483636421,-0.5397914701783312,0.14487676742219233,0.6210085916113697,-0.045533207436559704,-0.6960406895812582,-0.05426384700978055,-0.6749447467647163,-0.0744584740105578,0.5980375918858422,0.1734846876476345,-0.8359075406410981,0.9726526836245165,-0.4977251110218084,-0.9446583970896354,0.4087960689198062,0.38414610471482036,-0.3157955641809476,0.8985592211584739,0.9660661143605777,-0.85034253220429,0.1998634976561462,0.7936567357619937,-0.9900505890892953,-0.6548908099101949,0.9991455852245058,-0.7150670369697514,-0.9982894486842705,0.6418286539149485,0.11825933717093676,-0.8039775032117631,0.9840978223139011,0.8592457646596524,-0.9614924182166799,0.45908471943645934,0.33202788064046906,-0.9143378949425313,-0.42439359655327547,0.9501477255824163,0.5125325040325919,0.25422741335189974,0.5298031758111001,-0.15656255205995473,-0.611700159802663,0.05733838374549521,0.6875048289826464,0.037124382184611095,0.6836196497920076,0.0626654670028909,-0.6074696567671785,-0.16183119055191109,-0.5912713043387811,-0.9753302371184186,0.5079427703644744,0.9484702180824822,-0.4195553080676305,-0.37320561702013216,0.9312684869048462,-0.9036839474777577,-0.9629454138420924,0.8565034809223655,-0.21143165584783527,-0.566603329942388,0.9883181170420428,0.6459119367193411,-0.9985872427750271,0.7232803504351547,0.9989107967236664,-0.7327086729429585,-0.10651340560421693,0.7968920875146454,-0.9861287323900423,-0.8531387419102973,0.22485307211982544,-0.4695539929549605,-0.32085465431725535,0.9094872298026306,0.41366063891423366,-0.946395672930222,0.8839702544782033,-0.2656418964083527,-0.5197408510495519,0.16822645991782326,0.6023062539800177,-0.9940662485001701,0.7606871651875392,-0.04893425751254627,-0.6921990293597433,-0.05086370363164578,0.6168168387707229,-0.9938542537656209,0.6007630001921355,0.9778715058836895,-0.5180894539083958,-0.9521495075476816,0.8848718290189953,-0.9457699001715324,-0.9268967742636678,0.9086824003392289,0.9596901591496284,-0.8625447487979666,0.9651810602979511,0.5568236647728952,-0.986447545445267,-0.6368428090386076,0.9978893658517705,-0.6523138920880623,0.004944499790464708,0.7246130497431618,0.09475259071898005,-0.7896953205871833,0.9880218488434961,-0.5650104447471452,-0.21331943930769778,0.4799576548107937,0.30963659436966545,-0.9045094803013621,0.930562910528033,-0.3714126477105114,-0.8894351437389059,0.2770192608229475,0.5096059019212528,-0.17986686117601308,0.8282802554297658,0.9927109935321866,-0.7683070025190175,0.060737295164633755,0.7006816866550785,-0.9999997287842489,-0.7542309148055651,0.995093318578648,-0.6101707503014363,-0.9802761348240647,0.528163743838395,0.25609531872576174,-0.8793035543183114,0.9495436010089683,0.9223955445927263,-0.9135538812996667,0.3302050040579424,0.46080010539567084,-0.9620215576866702,-0.5469661935853372,0.9844391356774559,0.6276846941142641,0.11634082100793239,0.6433088930803833,-0.016764627412464424,-0.7164161749989255,-0.08297853587601214,-0.6534296420481588,-0.10312731202991823,0.5747239692537282,0.20175599896906127,-0.4902942512807188,-0.2983752683183172,-0.4725574220108674,-0.9348258026815089,0.3823617626132656,0.894775750553944,-0.28835791681515355,0.8855570426696998,0.9730995690471681,-0.8348456447847806,-0.991217025189785,0.7758194828678466,-0.0725318458802209,-0.676368939441817,0.9999211569844481,0.7464166927359924,-0.9961933371304973,0.6194932401040648,0.14678796726245158,-0.8207585317217694,-0.2446510082807134,0.8736124128780105,-0.9531846203329415,-0.9177654268573108,0.35903724041555773,-0.341339524134401,-0.4502770663668199,0.9587276299935688,0.5370322937827046,0.22628810712745417,0.5539922679063963,-0.12807304064366679,-0.6342140033110084,0.028582412481541496,0.7081191940749761,0.008349274936159183,0.6623320464084571,0.09136251496070542,-0.58435718649903,-0.1901643668851853,-0.5678164523018883,-0.9685731245149595,0.48294191521832835,0.9389580698671666,-0.39325744938770646,-0.8999913286702819,0.9413681043464351,-0.8909862115497879,-0.9703082900519258,0.8412943795875032,-0.18321513425757896,-0.5900827297988143,0.9922948899516219,0.6676150547115772,-0.9997028643205276,0.7031068938986746,0.9971541557135071,-0.7519908898493819,-0.1350851353782426,0.8139483621763544,-0.9809433615780065,-0.8677991999319911,0.2528025352135478,-0.44394990596060463,-0.3479796989166032,0.9210750878514943,0.4396911092765133,-0.9552997374853592,0.8701484084513804,-0.2377862929555503,-0.5441126407591748,0.13978736439252634,0.6250304936259929,-0.996785025138607,0.7416907200139816,-0.02016889715979294,-0.6711419018660625,-0.07958495163542405,0.5939087504154852,-0.9902567833951152,0.5775069840431859,0.9714455843221332,-0.49325892604356086,-0.9429591346755393,0.897911817597285,-0.936029467146315,-0.9373142803222942,0.896290881250589,0.9673814280541623,-0.8476255587440891,0.9723095033028682,0.580498212807621,-0.9907610049261474,-0.6587678828739572,0.999344881294932,-0.6738571356933875,-0.02383676530342938,0.74414651345599,0.12336342779397176,-0.8070244580952536,0.9831715009904112,-0.5410308528911852,-0.24134821389067831,0.45451077234355114,0.33687353355976835,-0.9164079648359555,0.9196403328235822,-0.3445378961977617,-0.8759126940066724,0.24925125245765514,0.5341569837291826,-0.15148215539001897,0.8118115708517974,0.9957682864833892,-0.749567486163874,0.031985701145488814,0.6798579774033007,-0.9996067074547071,-0.772815430625169,0.9918336590857526,-0.5871168196473112,-0.9741823022105183,0.5035070128712361,0.28380905386449345,-0.8926459392769133,0.9401240016202559,0.9331294836106734,-0.9014703105406275,0.3029029263978623,0.4861512149071231,-0.9694791305879475,-0.5708325817092337,0.9890886790018306,0.6498286601609191,0.08770849376741227,0.6650762548458737,0.012017841018365125,-0.7361981560705316,-0.11162448240588836,-0.6313732132438229,-0.13171071575839674,0.5509342250801955,0.2298601685279053,-0.46500812908134215,-0.3257202962304293,-0.446998249818063,-0.9242187657132288,0.35561069438007115,0.881554586633637,-0.26068138361341187,0.8718212375936834,0.9793268738399754,-0.8186571418828726,-0.9946124072524586,0.7573395138389866,-0.04379803570899845,-0.6972867411652341,0.9998683589042066,0.7652597086238593,-0.9932719439935643,0.596644616313859,0.1751949930413336,-0.836859615009092,-0.27245466184602274,0.8872553298603771,-0.9440871707990748,-0.9288142989610887,0.38574916111818996,-0.31414706548176535,-0.475787510828416,0.9665132907305172,0.5610871871004667,0.19816133587956422,0.792598865232427,-0.09947742901790853,-0.6562024416422603,-0.0001972374577697848,0.728146928331935,-0.9981863944187812,0.6404957438723787,0.11998387499913936,-0.5607606141936267,-0.21834000437141637,0.8601330046638431,-0.9610136118835017,0.4575409740110633,0.9286680557762845,-0.36663380241115034,-0.8870732979800049,0.9506878593551668,-0.8775503513202049,-0.9768673287616273,0.8253883204116165,0.9933175489589942,-0.6130732843766259,0.9954496108887402,0.6887650969214751,-0.9999902968671615,-0.7575970554440082,0.994571437144295,-0.770650131065279,-0.16354495587699908,0.830330333399253,0.2610621992251644,-0.8817407425876701,0.2805425677994445,-0.4179780352564219,-0.3748164648996169,0.32534730820529717,0.46535732406586344,-0.9634123981529592,0.8556057008916153,-0.20973369897792743,-0.7997510333571453,0.11123246410013082,0.6472369360371578,-0.9986780300187367,0.7220798321727075,0.9988282447799394,-0.6495287768258692,-0.1082402686673384,0.5705086471716445,-0.9858389494912727,0.5537725408055251,0.9642148830858884,-0.4680197651431293,-0.9329875813050799,0.9102079444584317,-0.9255135944029845,-0.9469552822784031,0.8831568432854621,0.9742712841739416,-0.8320041658777917,0.9786324509322406,0.603691855714566,-0.994253683158848,-0.6801472102351545,0.999972504304951,-0.6948421323570392,-0.05259828318292864,0.7630635000354773,0.15187206626835142,-0.8236850281700747,0.9775066593010274,-0.5166030520559338,-0.26917704712831103,0.4286873571734867,0.36383139487137267,-0.9275472647947733,0.9079558927360759,-0.31737771737905185,-0.8616646074046906,0.22127675559202284,0.558265551112696,-0.12297195646091588,0.7946703530280742,0.9980006499783316,-0.7302070017510158,0.003207609047009335,0.6584710499016084,-0.9983855767860269,-0.7907597189725497,0.9877523297202607,-0.563576500778812,-0.9672814227289711,0.47843315899306554,0.3112876716052681,-0.9052488249571025,0.9299255704571225,0.9430903853588215,-0.8886399300837867,0.27534991330454456,0.5110995796607664,-0.9761335528939433,-0.5942260720539612,0.9929188264916143,0.6714342852997891,0.059003505727130715,0.6862926440600899,0.04079035344718972,-0.7553702447074911,-0.14017795529021235,-0.6087937326727574,-0.16018500569945193,0.526688067625682,0.2577739138420596,-0.43933677779977176,-0.35279548599795535,-0.4210687685602111,-0.9128460734271258,0.3285650257456214,0.8676031119013802,-0.23278889278883724,0.8573631851542525,0.984742869820779,-0.8017904346235011,-0.9971838174298634,0.7382321381314483,-0.015027941705208603,-0.717626886038102,0.9989872347235672,0.7834687564652417,-0.9895276894582524,0.5733017111475565,0.2034568811287357,-0.852267414370278,-0.30003260439090385,0.9001632133346867,-0.9342076062621084,-0.9390937086457384,0.41214151365415774,-0.2866943563557702,-0.5009037961890137,0.9734982578781907,0.5846772560665676,0.16987040081437071,0.7747224041296373,-0.07079940679267263,-0.6776472588010681,-0.028976723998636867,0.7475714400743589,-0.9960404262328654,0.6181288321444816,0.14850583617730975,-0.5366994880810394,-0.2463347613219537,0.8744563117340016,-0.9526579617900752,0.4317609897753838,0.9176087004192699,-0.339706423103112,-0.8734203845832801,0.9592200311183414,-0.8633874975279807,-0.982617096232937,0.8087984805333283,0.9962276465108805,-0.6355559474921432,0.9977796663716644,0.7093445419105066,-0.9994493022957021,-0.7760683183948863,0.9911647806308921,-0.788670938619233,-0.19186928998463723,0.8460244297824473,0.2887356130563661,-0.8949518202132627,0.30805018905927856,-0.3916598968531839,-0.40134271974586905,0.2979987390653095,0.49063802048761823,-0.9707269341197119,0.8403541794891215,-0.1815073542305664,-0.78214247173121,0.08258541492392955,0.6689071846159178,-0.999743694908765,0.701870748012655,0.997021707073213,-0.6273775593117884,-0.13680591565533867,0.5466359145073941,-0.9806044119430152,-0.8686609848894952,0.9561853923420653,-0.44239288021531176,-0.9222431082216803,0.9217500230586544,0.4412504451917974,-0.9558117931870299,0.8692911671426453,0.9803540197099333,-0.8156935115101186,0.1380673027355367,0.6263853790645384,-0.9969226866859306,-0.7009630797357911,0.9997717149368606,-0.6698532719759736,-0.08131622679546711,0.7813483379848858,0.18025488858374258,-0.839663228609669,-0.2773982761515035,-0.49174727909039906,-0.2967828846367771,0.4025088023255886,0.3904878454644236,-0.3092614818505028,0.8955192700664669,-0.2899546117013724,-0.8467026875488148,0.19311894528273968,0.7894532490939957,-0.09435988323981578,0.7768708023460665,0.9994062346486123,-0.7102415881863776,-0.9978636721950311,0.636538621832634,-0.9963373484057849,-0.8080489141683818,0.9828527115989043,0.8627442784116167,-0.9595792133105966,0.45296295426594513,0.3385084076950968,-0.9171017706853081,-0.430611983728727,0.9522699978759721,-0.8750733690673862,-0.9779539564757073,0.5356245315541412,-0.9819793118472732,-0.6171272846296845,0.9959264051179721,0.6924836706714308,0.030249637108347487,0.7069404843203129,0.0695290737131722,-0.7739165580775538,-0.16861529982820625,0.8331846997145487,-0.18852659275023997,0.5020055832594332,0.28547411018355606,-0.4133014644859243,-0.3795784075818228,-0.39479045913117555,-0.9007171473613138,0.30124716229264453,0.8529328842493271,-0.2047035514614314,-0.5722578347311253,0.9893430701881007,-0.7842594959799343,-0.9989291254754067,0.7185131849670165,0.013754601973819816,-0.7373725235693194,0.9972785143967784,0.8010287512447415,-0.9849636753966534,0.5494838626884521,0.9628389504706809,-0.866969165442652,-0.32736198937820843,0.9123253699564733,-0.9235541113006357,-0.9485951400868889,0.4381924336707573,-0.25900413954579704,-0.5256051152348191,0.9796767448442367,0.6077829578385313,-0.9947909608800866,0.756204135750731,-0.04206273184978966,-0.6985306891469727,-0.057732205202623,0.7663766373538227,-0.9930693031405533,0.5952498407607837,0.17690476989984397,-0.5121937412440449,-0.2741254458959415,0.4240363752552063,-0.9435130963489731,0.40562331955656494,0.9057891657549089,-0.31249761905128287,-0.8590438990335544,0.9669575512849095,-0.8485093831791134,-0.9875528291563399,0.7915386035592347,0.9983124340565103,-0.7266843825487952,0.9992831261005158,0.729336340942941,-0.9980803287850718,-0.7938966590669526,0.9869370083673203,-0.8060383834407172,-0.22003467282699754,0.8610176497847437,0.31616982815477546,-0.9074214882876082,0.9280224163896066,-0.36501729362199775,-0.4275364881732745,0.2704032972932845,0.5155122551240807,-0.977237285766869,0.824406479140419,-0.1531306424097957,-0.7638859557842932,0.05386994908659036,0.6900232869665002,0.04592726966244642,0.681080209449623,0.994389201532544,-0.6047066001711686,-0.16525822781319155,0.5223103294337549,-0.9745575072252755,-0.8825587700131217,0.9473637640030851,-0.4163995014725342,-0.9107346165245812,0.3237044099298024,0.4668939960875398,-0.9638764760031742,0.8547053396357241,0.9856245955101717,-0.7987071079605738,0.10950617030661684,0.6485599827449701,-0.9987658044110405,-0.7211982467777592,0.9987426795316325,0.7866536342156709,-0.1099668051869335,0.7989858795016271,0.20848838141229825,-0.8549458225110547,-0.30493348792653824,-0.46648412539074774,-0.3241428567697598,0.37599679503503936,0.416820802198102,-0.28176467107941194,-0.505347361516254,-0.2622912974295674,-0.8310393294194622,0.16480114844979624,0.7714610365963822,-0.06566963897407568,0.7584276645793294,0.9999838760584753,-0.6896877855204704,-0.995570152050956,0.614078862790857,0.15358859388351565,-0.8246686932355374,0.9771388637375885,0.8769390299765263,-0.9510820547364596,0.42711749910291424,0.3654487115192169,-0.9281949570645808,-0.45640824687527126,0.9606607164483929,-0.8607818665075249,-0.9835586386853107,0.5597057532548877,-0.12124804930205282,-0.6395172472667792,0.9981089232970339,0.7129593782249795,0.0014707086267120406,0.6571628517914595,0.09821019365009115,-0.7918217317626999,-0.19691295752389706,0.848754532049431,-0.966839300856713,0.4769072198192482,0.31293780973590307,-0.3869237577086598,-0.40604687306819753,0.9436665469347671,-0.8878420355445567,0.27367973509962557,0.8375560570098186,-0.1764486265153325,-0.7789283197067075,0.9931236639742295,-0.766078849198071,-0.9998468855145447,0.6981989902197425,0.9966119896793519,-0.7565072957785676,0.9947436134878315,0.8179251456453349,-0.9795836827984709,-0.8711967535997478,0.954667448985338,-0.8809526887787634,-0.3544201761846071,0.9237317241676121,0.4458587228801618,-0.9573107219646972,0.46388033966998743,-0.23109935460094255,-0.5498710045247227,0.13297298607949196,0.6303851508406942,-0.9973125745457296,0.7370594012802708,-0.01329121066106348,-0.718835432112087,-0.08643985901815646,0.7845469412837749,-0.9892754865246691,0.5718777234820929,0.2051571494916389,-0.48726367510485974,-0.3016890353132552,0.39779665479781107,-0.933586591488228,0.37914961671952524,0.8932192435012507,-0.28502993098550605,-0.843955751316884,0.9738940098211405,-0.8329283338265921,-0.991670438597159,0.773622988178218,0.9995701844845869,-0.7066126342607973,0.9999587445563987,0.7487239321096181,-0.9958845104410552,-0.8110673078360123,0.9818916227887566,-0.8227380777278629,-0.24801777121073684,0.875297572495583,0.3433421170521138,-0.9191394164992839,0.9169169229024225,-0.3380722972320411,-0.4533760703431865,0.24258384392334562,0.5399594212847868,-0.9829380596902446,0.8077758114811423,-0.12462707178131385,-0.7449966098560405,0.025109855489548447,0.7105677497673489,0.07465744598212756,0.6597254400966799,0.9909329090180717,-0.5815346808235935,-0.1935736342452215,0.49755204412060466,-0.9677032448065098,-0.8957254124239833,0.9377573062160014,-0.3900611627435837,-0.8984716402529027,0.2963402991029879,0.4921507555825599,-0.9711426496600646,0.8394114441769923,0.9900786452443688,-0.7810590273630401,0.08085431911636028,0.6701972965345904,-0.9997815094306566,-0.7408359478372835,0.9968862505783738,0.8040961380661462,-0.13852628321093396,0.8159615130262345,0.23654915513596814,-0.869520149236161,-0.33221608207977754,-0.4408345198416691,-0.3512342975644629,0.34917329878074804,0.442808449925275,-0.2540344365489365,-0.5299723884992498,-0.23441069182572521,-0.8146875090931763,0.13634682455164382,0.7528297186541748,-0.036924991670694164,0.7393562186715853,0.9997330956694684,-0.6685626212460227,-0.9924518665921501,0.5911103792302747,0.18196307059077851,-0.8406052877647436,0.9706155196887605,0.8904072944188877,-0.9417969863514534,0.40091820478766604,0.39208626478281317,-0.938519194109326,-0.48182640538438304,0.96825558990983,-0.8457772619873627,-0.9883485063401383,0.5833232950323372,-0.09263058619195132,-0.6613774113330437,0.9994645729540103,0.7328444451644432,-0.027309438241654757,0.6351980830415944,0.1268099528098627,-0.8090709324875655,-0.22504748560280277,0.8636212262907167,-0.959088933739133,0.45141376967177166,0.34014226060486374,-0.36022550968762057,-0.4321789550497317,0.9527987637582167,-0.8742314041721273,0.24588558199242588,0.8214853688871356,-0.14804752532371046,-0.7605576331396469,0.9960815192023602,-0.7472635557648737,-0.9999363372425958,0.6773063828827308,0.9938321470001051,-0.7750153507478367,0.9913846319977577,0.8341439420998825,-0.9733921686387148,-0.8849647581276847,0.9457050674224801,-0.8942063999362687,-0.3811847488568781,0.9343728265432671,0.4714347286762652,-0.9652332339847263,0.4891839508874213,-0.20300311882608996,-0.5736813613429328,0.10439390982149539,0.6524651106217589,-0.9990079794125899,0.717304060889354,0.015491321433846903,-0.6442833496850955,-0.11507590301555551,0.8020672989456354,-0.9846621193162746,0.5480318425920446,0.9623684015282827,-0.46192994260672754,-0.32900269492738193,0.3712273856064393,-0.9228866706734481,-0.949143425795102,0.8799093470238052,-0.25732611410424333,-0.8281684409852843,0.9800236603209215,0.609161322464292,-0.9949665133829728,0.7550664763159104,0.9999998558304376,-0.6859555032245438,-0.05946612566158458,0.7674912540484154,-0.9928636663567657,-0.8275660399329651,0.9760328036699922,-0.5107011935648352,-0.275795402953366,0.8888523679249595,0.3702299692689758,-0.9300958973045977,-0.4609771775067395,-0.3108472298656154,-0.478840059837306,0.2145634255686994,0.563959266077812,-0.11614264629365492,0.7904759539410563,-0.09602025570511548,-0.7254900825447027,-0.0036710399945558865,0.6532785894042465,0.10332577344886189,0.6378241309955169,0.9866556928440265,-0.5578809977016945,-0.9655133957704696,0.47238156920191166,-0.960047302998678,-0.9081500044126136,0.9273739773081744,-0.3633996836342274,-0.8854643384873118,0.26873068955410595,0.5169998000893526,-0.9776042946039907,0.8234221507671277,0.993712479021136,-0.7627638900079297,0.052135485365592045,0.6912793953219638,-0.9999689602990319,-0.7598599143524131,0.9942039660080947,0.820872500406634,-0.1669710011918219,0.8322611753470921,0.26441396322328076,-0.8833741349003466,-0.359223456751064,-0.41481971147815055,-0.3780347635188916,0.32206053509003235,0.4684292595649303,-0.22609375096025974,-0.5541583677236334,-0.20633589216371284,-0.7976607729927883,0.10777954615055434,0.7335747301061689,-0.008149754406058805,0.7196722640791094,0.9986541012368827,-0.6468835961918066,-0.9885113991159157,0.5676521990501601,0.21018680269317752,-0.8558454953208177,0.9632880836199683,0.9031379141549398,-0.9317317002326587,0.374386775736687,0.41839900000027885,-0.9480659288586121,-0.5068454019599398,0.9750483264000988,-0.8300719858487936,-0.99231959134543,0.6064575912845707,-0.06393638464768028,-0.6826896671000386,0.9999922310210657,0.7521223980012799,-0.05606696101127764,0.61270709386839,0.15530465814653127,-0.8256498704078481,-0.252995576432751,0.8777724663462352,-0.9505440236306241,0.4255463524873664,0.36706492566692467,-0.3332288381900845,-0.45795300479099904,0.9611416485886899,-0.8598965287695568,0.21788772862462477,0.8047341334043081,-0.119523776357276,-0.7415568738907415,0.9982141854812341,-0.7278292029309021,-0.9991974065546035,0.6558526711264107,0.990228978830614,-0.7928813557537117,0.9872043526249137,0.849671704387205,-0.9663942621853873,-0.8979996267377165,0.93595923053408,-0.9067193190748909,-0.4076335346820707,0.9442398616201263,0.49662018136913355,-0.9723561128594908,0.5140823049219397,-0.17473870813072073,-0.597016460352772,0.0757283499784772,0.6740045453667887,-0.999875770947671,0.6969544805964892,0.04426101997346069,-0.6220062396883962,-0.1436166140892294,0.8189231958591626,-0.9792330233909551,0.5237319528567064,0.9541489768968652,-0.4362135311042954,-0.35604379714244433,0.344350578597772,-0.9114221980952081,-0.957811349054224,0.8658705027087437,-0.22940911922336862,-0.8116950468016605,0.9853414247662813,0.6317325285828812,-0.9974383229295503,0.7358844408391207,0.9996010921392138,-0.6647301025336178,-0.08817013203681842,0.7856227592500454,-0.9890202991056453,-0.8433791872281037,0.969365404662761,0.8927358601435097,-0.30334455608818484,0.9016708068038,0.39681110996330177,-0.940281853969659,-0.48632556710624086,-0.28336464572566544,-0.503907361391511,0.18636525532901088,0.5874919071879788,-0.08750973364448641,-0.6652252437106103,-0.06733389307335394,-0.7053825337432857,-0.03244889426006778,0.6312184714065354,0.13190850221229763,0.6153944259605669,0.9815610964066589,-0.5337651463481508,-0.9576206051318079,0.44681975678400454,0.34497291794847007,-0.9198222530102043,0.9162223791943132,0.9543472127383092,-0.8717234869338824,0.2408984540543643,0.5414205437858429,-0.9832560577811119,-0.6225252095761653,0.9965230864448197,-0.7438368522302206,-0.9998651015829672,0.7117888139552817,0.07638939059865223,-0.7782543862004708,0.9906980479196332,0.8369688231087727,-0.19527739452520487,0.4960446433509966,0.29205972148758713,-0.8964963023748294,-0.38593323808173496,0.936192458967064,-0.8977077290787981,0.29468096512952374,0.4936620059376242,-0.1979657613596204,-0.5778852626739206,0.9903212117603025,-0.7799732266650844,0.07912297938428109,0.713712022461816,0.02063223440164345,-0.6403425017803416,0.9967477866376397,-0.6246686700243357,-0.983752014044043,0.5437237558316823,0.960958423238309,-0.8703766903800275,0.9551626258368586,0.9151203426917291,-0.9208945348169568,-0.9507497236912292,0.8774546635964778,-0.9568272524617425,-0.5314445099855976,0.9810332985774818,0.6132309039509438,-0.9954686039147578,0.6290894767472518,-0.03518921595458698,-0.7034363587458219,0.9996914603677066,0.770777266201614,-0.9922373646318798,0.5897085165979821,0.1836707036444215,-0.8415448109485173,-0.28073407683274093,0.8911965288312163,-0.9412116494351292,0.3993263977438361,0.3936835012398415,-0.3059561082078288,-0.4833476701630683,0.20953860526202106,-0.844849284851593,0.189709369402259,0.7873162278737251,-0.09090100969246835,-0.7219417828569537,0.9995198960351286,-0.7077918907972883,-0.9976307056067281,0.6338556279598385,0.9858054701620648,-0.5536063897720659,0.9822062384596958,0.8644955687631215,-0.958595760750216,-0.9102905608864262,0.9254380121140457,-0.9184810800525048,-0.43374462255616036,0.9533246551994417,0.5213942164443235,-0.9786734577457153,0.8204936953864741,-0.14632953774633292,-0.61985696993784,0.04700005410799236,0.6949856110507892,-0.9999152302419568,0.6760275187094114,0.07299405112806549,-0.5992138378551706,-0.17203834811073287,0.8351006680067589,0.2693692046772774,0.49899818515903416,0.9451391017084385,-0.4101357449769512,-0.3827899401586968,0.31718849946362987,-0.8992026713256427,-0.9656857877184856,0.8511143408282534,-0.20130207376290538,-0.7945492159049015,0.10266633823158627,0.6537803852652816,-0.9990838195029629,0.7160927728204116,0.9983742237607762,-0.6429540160561626,-0.11680109517491886,0.8031034269381584,-0.9843575926682439,-0.8584936495542741,0.9618949492748029,0.9053335824687918,-0.3306424079282044,0.9137422698866857,0.42306351838364054,-0.9496888480898636,-0.5112710675084419,-0.2556473123510844,-0.5285572083719153,0.15801269355985592,0.6105378493480662,-0.05880432485543001,-0.6864377517090545,-0.038591748677345765,-0.6846906212521279,-0.061199866720784764,0.6086354298356729,0.16038195333505817,0.5924549065480311,0.9756533402487657,-0.5092071051820526,-0.9489344879172571,0.42088778317095443,0.37184289111918484,-0.9307324885156611,0.9043117502503464,0.9625483484583093,-0.8572604689971217,0.21286664980613515,0.5653927556694043,-0.9880932570721161,-0.6447902319426753,0.9985081391094188,-0.7242935938534164,-0.9989782372065938,0.7317085617111088,0.10505322544410556,-0.796004124754292,0.9863714007387895,0.8523717714129457,-0.22342201319969157,0.47084995916629835,0.3194635272108127,-0.9088757807947438,-0.41232329874991336,0.9459203391711751,-0.8846558505696648,0.26705727109754757,0.5184857853491663,-0.16967376996248554,-0.60113341715618,0.993905447541104,-0.7616395230952747,0.050400864360198104,0.6932580506864321,0.049397130741010035,-0.6179719760427195,0.994015731129773,-0.6019362463694464,-0.978177654218449,0.5193448727384441,0.9525972777251308,-0.8841868347895199,0.9462458777543215,0.9263446533641955,-0.9092944679931749,-0.9592764105068471,0.4699631098663915,-0.22440148159198486,-0.5556033506954492,0.9862055482806165,0.6357099808681076,0.1060525968408914,0.7323932079801541,-0.006412895277866894,-0.7236002989816531,-0.09329067642849558,-0.6455580765622267,-0.9882473812781428,0.5662214040603313,0.21188458987419184,-0.4812453688881646,-0.30824000725385226,0.903882292780354,-0.931099542419526,-0.9420196550242157,0.8901053423552739,-0.27842991342918494,-0.5083419133323573,0.9754324357504415,0.591644987461181,-0.992532950572981,0.769246081900681,-0.06220293743546925,-0.6839578081006664,-0.03758749240724075,0.7532659242800555,-0.9952375323091145,0.6113334765069129,0.15702025388030766,-0.529410071258879,-0.254675593367772,0.8786032546172279,-0.9500031248859582,-0.9218273783318587,0.9141501283096057,-0.33159070209998803,-0.4594963811359775,0.9616196811188222,0.5457363102202101,-0.9841800351328005,0.803701831539486,-0.11779914282844023,-0.6421839682170039,0.018232821740326602,0.7153909262213268,-0.9991263246059806,0.6545405118590667,0.9899852721520145,-0.5759250262123987,-0.20031755951639355,0.8505863134017536,-0.9659463080576042,-0.8987625035929891,0.9353462400603646,-0.38371818797952684,-0.40921896653096346,0.9448103276853007,0.49812700974380614,-0.9727602183260593,0.8356530859056115,-0.590271637267505,0.9923238558751084,0.07399631877728866,0.6752866272918918,-0.9999016399159991,0.035886215792195295,0.9963202670760222,-0.6206452838677874,-0.14533529617945756,-0.9808978686437637,0.5308535838244195,-0.8728969055595134,0.9536276262939963,-0.4346499314206105,0.9211661813350023,-0.9148389255675403,0.4489654461119136,0.8700330685191346,0.8650002785151003,-0.5443089603367933,-0.8106793286998722,0.12952922852018117,-0.9968037470473219,-0.9975610622019625,-0.019934937502495788,0.9995505292483486,-0.6634314869789923,0.7804095041192123,-0.9902241700584457,0.577315928493226,-0.8443111865959622,-0.49305535419157115,-0.48422721894807713,0.898014797003877,-0.9359470894961666,0.3984048165661983,0.8961870825445142,0.8916519576600274,-0.49665010807768967,-0.8420872663495578,0.18465849934155817,-0.9907927136566369,0.7778162398629267,-0.0756939695542372,0.9996659925275188,-0.7041503051998294,0.7443028134080516,-0.99646473537613,0.6219792415348627,-0.8130944255064403,-0.5408340377968095,-0.24157529641749279,0.8720650193810697,0.44526520632198563,0.34660267811687434,0.9195483988011578,-0.3443182077259564,-0.44744359498338077,-0.8708710920525075,0.2392123374333927,-0.9816941724736586,-0.1412412148491762,-0.13121712409334954,0.9966662971069158,0.031751813299688035,0.7058767266168149,0.6722297595693261,0.6647043431540554,-0.7793438999472986,-0.5869273746256546,-0.1870504315609044,-0.9717929376347882,0.49453574609427636,0.29372045656362233,0.9400442187662398,-0.38753499674701386,0.9368015475587701,-0.8969411096644877,0.29302074215086127,-0.969536476368179,-0.19626293341620168,-0.5793019100565101,0.9905607906360105,0.08747538647968664,0.6652509870992429,0.7124943497796292,-0.7363565037052251,-0.7431647832905468,-0.6311917286433737,-0.13194268023670697,-0.9834386990504264,0.23008790309766575,0.23992294346058773,0.9576106733751422,-0.3354905808163117,0.915819248860806,0.35539197398075345,0.43684101195111935,-0.9543575111471326,-0.2506730575216324,-0.5329150281891145,-0.8185227334935926,0.14292636890112675,0.6225521927658767,0.750538665429383,-0.6974544562780393,0.9998645346667844,-0.673489163290617,0.7718826935870267,-0.9920198692506581,0.17542537574456252,0.9745127662512115,0.9721930220502037,-0.28240070929410804,0.8919830746465854,0.406996570954541,-0.9326005215688479,-0.9362045774948635,-0.30430203436210224,0.9665733142634583,-0.8493037290422342,0.5696262968505263,-0.9888712831784466,0.7862441528398995,-0.6563790015994208,0.9992251007274993,-0.7136878713212601,0.7352035863979346,-0.9975097075969066,0.1202161879173644,0.9855123715493859,0.9837458232832832,-0.22843082081328464,-0.9609488824686916,0.4573328854037012,-0.9110082140103626,-0.9151342435747541,-0.35698274534498803,0.9507604103436951,-0.8774381247064621,0.5228755582509511,-0.9790287801699177,0.8194995465879595,-0.6132581389820856,-0.7582976061113347,0.04526499817106363,0.6962334381357325,-0.9998911066574774,0.0646323824614346,0.9934409236548792,-0.5978223873065343,-0.17374909631515945,-0.9748932625885224,0.5062440593286194,-0.8865770230801786,-0.4177654387520379,-0.40855102686328976,0.9319847472765556,-0.9028382480956264,0.47449543508056946,0.855484549011529,0.8502012162310724,-0.5682262416380148,-0.7934933693923663,0.10093845691380474,-0.9986900311489141,0.721917924284751,0.008847169605416382,0.9982737156173178,-0.6416227427381078,0.7980812097049003,-0.9857996807780645,0.5535776757519176,-0.8593830812440802,-0.4678129563921064,-0.3227207368396497,0.9103048337745344,0.3679995730512096,0.4246366894566455,0.8830470517526899,-0.2637412809765942,-0.5214236379447138,-0.8262164490057008,0.15629737128417834,-0.9942787062571393,-0.057070337300528816,-0.04696561279640083,0.9999956874926417,-0.05283196452461385,0.7632147231808829,0.6072563648566869,0.5991862336801694,-0.8295111302509368,-0.5164026755156056,-0.26940240944227867,-0.9483851097058326,0.41931158012678516,0.3734546911790435,0.9078578036829412,-0.46405709126209543,0.9630177888584344,-0.8563648733059059,0.21116923185903716,-0.9867690105245552,-0.11269165054793766,-0.6461168789233814,0.9986014732728958,0.002973603457945704,0.725969907292374,0.6506445696861408,-0.7909029390683022,-0.7970542570605038,-0.5633831808624599,-0.2152445703822251,-0.964603153616743,0.3115100433349471,0.32110893356693015,0.929839489548687,-0.4139050621052852,0.9464823624166744,0.27512494480680455,0.5113006994626832,-0.9761843456615019,-0.1679617941264568,-0.602520555349047,0.9940954176077818,0.05876990509879619,0.686462824317278,0.6920052362109324,-0.7555235682095518,-0.7621136037658828,-0.6086080718038145,0.8228514768024421,-0.9778153016301444,0.25800000529421996,0.2677625364457676,0.9489236100306824,-0.3624632221869451,0.9269975080784933,0.32834400178052975,0.46254840154937577,-0.9625576955956898,-0.22270853524043913,0.9847835637106173,-0.80165056902279,0.11438306798878203,0.6448165862091401,0.7312094763413234,-0.717789835159845,0.9989766783574803,-0.6519364185556061,0.7898600081339291,-0.9879803820565582,0.2036859877572996,0.9676529262818393,0.9650506952015804,-0.30989187454464157,0.9046239445378942,0.38053987332901223,-0.9426010657467901,-0.9459315236877002,-0.27676127212075347,0.9735517472540508,-0.8337590682297683,0.5930443850304593,-0.9927433154878449,0.7681351218425001,-0.6778193257605163,0.9999439637410371,-0.039323112826679,0.7544071780763785,-0.9950667184770996,0.14873724404030808,0.9802230378509904,-0.5279357418396036,-0.2563548419873836,-0.9525867873513336,0.4315499067016714,-0.9224992131953808,0.9134446503213856,-0.3299515656539381,0.9592861492966556,-0.8632694078171083,0.5471909382631613,0.8086608423465914,0.8026671050351704,-0.6357365960943177,-0.73922185932256,0.016496178448994345,-0.9994415099549391,-0.9990522284535192,0.09332500539279388,0.9897385788466652,-0.5745042336622876,0.8461491659200358,-0.9680810206807082,0.4812151444562972,-0.8995226690259704,-0.39144457420592765,-0.40155704204042914,0.9420312242881341,-0.8900896276783485,0.49963233534920126,0.8402273160276715,-0.1812772295038621,-0.591672784343812,-0.7756500522811982,0.07226406434107706,-0.9997489653182468,0.02750889059847744,0.03762194740699182,0.9961698969444501,-0.6192824556599229,0.8150917567587189,0.5379379222421741,0.5293808198021575,-0.8737430327347862,-0.44218300589289566,-0.3498267560271359,0.9218407420177522,0.341087150997143,0.4505167783848029,0.8691754737383416,-0.23587145095087594,-0.5457652021386293,-0.8096611649086008,0.12780676098955662,-0.9969410034220094,-0.028314035052945958,-0.018198348073776915,0.9994969508738876,-0.08154945632631876,0.7814943590450654,0.5841392898960005,0.5758968388841988,-0.8452406388124173,-0.4915435071030888,-0.29700634003983417,-0.9388656683248379,0.39301058147707607,0.39999732124567644,0.8954151072430421,-0.4893579650136024,0.9703731942131748,-0.8411492117914579,0.18295118626903642,-0.991026374435779,-0.0840487285215401,-0.667814920327134,0.9997093728710743,-0.025807069821442707,0.745461668974164,0.6285203629670355,-0.808186748997568,-0.8141043064055143,-0.5393722606656525,-0.24326039303419336,-0.9566142584341615,0.33872859016396434,0.3482313926406017,0.918864448608081,-0.43993223395865116,0.9553790780105362,0.24734206173353307,0.5358221253140246,-0.9820235095236444,-0.1395215093815071,-0.625240051431013,-0.7482614293997555,0.030015736662377158,0.7071059715980118,0.6709428411760696,-0.7740647304284021,0.9915803662797227,-0.5855202226410375,0.8388648142266256,-0.9713818476374189,0.2856983712160088,0.9428697193867384,0.9394504250068312,-0.38913558628137707,0.9374078099704916,0.3010240178658019,-0.9674494072235457,-0.9699604634090466,-0.19455951337899788,0.98937711522348,-0.7841142890373729,0.6589698536337174,-0.9993545621295348,0.7112745276162895,-0.7375305717072189,0.9972612346472916,-0.1236298586238724,0.8071829748813723,-0.9831224171800208,0.23177785913689014,0.9599914486090356,-0.4542716043278664,-0.3371263144715856,-0.9234643519015083,0.35376792309396393,-0.9518207260633041,0.8757831260491801,-0.24899123111161953,0.9797236557505368,-0.817523692093122,0.6159711743924623,0.7560509960877202,0.7493897407052166,-0.6986981205623901,-0.6796610602888964,-0.06806413366635777,0.7729857923261805,-0.9917993811046334,0.17713508100120642,0.9741216529268184,-0.5032750251198905,-0.2840664897978388,-0.9434355358497072,0.4054094168851414,-0.9332259816003353,-0.31227532318693774,-0.302647042485955,0.9670171818783858,-0.8483855282007795,0.5710530060647909,0.791395575904042,0.7851697058335962,-0.6576883866600655,-0.7195337151570622,-0.012286307287250142,-0.9980658087948479,0.6389809158087444,0.12194031460870432,0.9852162998039805,-0.5507101405133117,0.861136636187994,-0.9604667864210124,0.4557875740404626,-0.9117231187686639,-0.36479942321272024,-0.42774801808252316,0.9512972895149825,0.26042217106298854,0.5243553226259007,0.8242740091957569,-0.15289939139806383,-0.6146291645139088,-0.7571641593975718,0.04352980567689695,-0.9999796722970256,0.056266173359502306,0.06636555786467895,0.9932408161070969,-0.16548901247914208,0.8314270531454574,0.5134543697713145,0.5047454061700912,-0.8873791447794191,-0.4161867354459921,-0.37664296643124157,-0.9064104003329378,0.3138921603557566,0.4760236433751489,0.8545838402043724,-0.561309408040722,0.9873208002889444,-0.79243512903763,0.09921027108089152,-0.9987773996106787,0.0004657235366974126,-0.72833092811321,0.9981701958422053,-0.11019938969140868,0.7991265775076009,0.5605382934112657,-0.8550671824299717,-0.860269920312995,-0.46627712676833377,-0.32436422014359434,-0.928568437616963,0.4170335002314793,0.4262085794688798,0.8822306174486328,-0.5142534374227741,0.9769247082988944,0.16457033685005462,0.6052619282898438,-0.9944627372573919,-0.055336177573575375,-0.6889597203728459,-0.6895183207744633,-0.054566363616904534,0.7643358640015454,0.605875467882666,-0.8248010286109391,0.9770890866736137,-0.5149145055256635,0.8818673649096629,-0.9478328703686747,0.3656665223203748,0.37506536458600953,0.9071281880541813,-0.46559495048292393,0.9634843239883804,0.2193542718006379,-0.9853754432947125,-0.9870491305859784,-0.11096564011309647,0.9981232803924937,-0.728859006038706,0.0012367021344584775,0.7271633274324958,0.6493246135035681,-0.7919646302111512,0.9874428902088689,-0.5619473079409772,0.8541832065471449,-0.9641436667717151,0.3131600545629246,0.9328909172349061,0.9291989662231063,-0.4154855767754845,0.9470415302767236,0.2734546550717203,-0.9743317600493516,-0.976559681874091,-0.16624931157664008,0.9931510319510455,-0.7659284212081956,0.6803440063119444,-0.9999744592401518,0.6907503340666485,-0.75666031199999,0.9947196246700967,-0.15213743248996836,0.8238372428746876,-0.9774499991299387,0.2596777175894711,0.9515346802702556,-0.4284447771837298,-0.36408146710743683,-0.9120395699487149,0.3267028990741792,-0.9602518646276529,0.8615283255149809,-0.22101491701297007,0.9850839267269347,-0.8006110505886663,0.638387671578202,0.7369012328245003,0.7300235387608052,-0.7189980892774028,-0.6582689619103411,-0.09674876778480995,-0.9892412800283447,-0.9877104022566555,0.2053861730335522,0.9672132713786445,-0.4781973776759749,0.9010199006045087,-0.9335027091822824,0.3789330716548837,-0.9431796327931639,-0.28480562339828847,-0.5026086524754261,0.9739471034296991,-0.8327988161866151,0.5944419934799658,0.7734746895437073,-0.06883330431711095,-0.6790953250442759,-0.6992494839656341,-0.04105861461459419,-0.9958632748302406,0.1404437853849043,0.15045460418099704,0.9798778329417719,-0.526459819722888,0.8754107105919755,0.43909557488599227,0.4299824131743926,-0.9231682650267665,-0.33785205955224895,-0.45358463262831034,-0.8674695739572528,0.23252777434761338,0.5486439155188338,0.8076378447960273,-0.12439488606102247,0.9972039169331638,-0.7380510051050513,0.01475948539133807,-0.9993819609594785,0.08497684324439389,-0.7836355738548308,0.9894888996588002,-0.1938032095889134,0.8470735661312969,0.48854545364927293,0.4796918436984669,-0.9002801207433634,-0.3898456812757721,-0.40314715256050343,-0.8938785129663432,0.28643713041337876,0.501136153643993,0.8392842393729928,-0.5848950486279793,0.991480235395688,-0.774552612046511,0.07053159189577614,-0.9997863734879832,0.02924509630458977,-0.7477497366000662,0.9960165215281073,-0.13875803000785233,0.8160967714188279,0.536472927297699,-0.8696357007484777,-0.8745865239674975,-0.44062446606908756,0.9185599678253583,-0.9175019481701409,0.4430182520127255,0.4520667515208451,0.8683152567945799,-0.5387228842050287,0.9826669036109963,0.13611499946351902,0.6279205141385988,-0.9970752521856219,-0.02657778419068182,0.9997276620969499,-0.6683885824861848,-0.08328045271838322,0.7825768563278067,0.5827286442602357,-0.8407320140550834,0.9705591827596614,-0.49003017710670027,0.89507157646191,-0.938266264230879,0.3923015234741363,0.8991153537702276,0.8946404306178364,-0.49087195178152326,0.9707913856794865,0.19118476107725252,-0.9898712439377225,-0.9912570454473328,-0.08231784300725155,0.999472202177672,-0.7088527702529153,0.7398488327756488,-0.9970009651057254,0.6271684624932532,-0.8092084386515211,0.9824873817327205,-0.23512215576280146,0.8687939634692603,-0.9561067553965314,0.3403623051110261,0.9221392754500478,-0.35054891612614836,-0.44149136441076836,-0.8741177677631301,0.24565875282766597,-0.9804069421910288,0.8155381671197071,-0.13780138299982664,0.9961021874480188,-0.7471080313475196,0.701154538096822,0.6771342053551821,0.6696538986558959,-0.7751632082887646,-0.5922941548258276,-0.1805189703583685,-0.9733385203910159,-0.9709678271368469,0.2873624498914388,0.9422896271497014,-0.40226301132355125,0.9344561768044536,-0.899859222352048,0.29936722288706774,-0.9678874967882399,-0.20277397902922512,-0.573873015511968,0.9896281195463195,-0.7830351547432127,0.660275305973324,0.7171409946731331,0.7100525596518047,-0.7387024146977947,-0.6363315303813,-0.1253532518226802,-0.9846212647173447,0.22361649238117265,0.23346711593949596,0.9595036163526178,-0.4527235747126417,0.9131306190002548,-0.9227965360518738,0.3521428049461029,-0.9523519208192827,-0.2570999806184444,-0.5272808047138619,0.9800701729599505,0.1494996028667647,0.6173385242492362,0.7549130295578844,-0.04009348364381031,-0.6999396769865983,-0.6783859699185176,-0.06979690754211393,-0.9928357327176871,0.16887993564136133,0.1788442518697275,0.9737276008336697,-0.27602032647606856,0.8889595639869176,0.4130569676969769,0.40382103976056805,-0.933848626238747,-0.3106248073679454,-0.4790454817179757,-0.8527926982401852,0.2044407434491037,0.5724779925037461,0.7903326048119409,-0.6513516118848487,0.9989415114218122,-0.7183264234126046,-0.014023062170810986,-0.997956326470691,0.11361711532485261,-0.8011894450953824,0.98491725581905,-0.22195685330641682,0.8620183335948033,0.46323180929787533,-0.908247945266302,-0.9124352730045769,-0.3631816652375698,-0.4293173574153374,-0.8806061052139588,0.5172000922847259,0.5258335051049605,0.8232893459714121,-0.6079961415940845,0.9948182934184452,0.05190179547733115,0.6914484667316146,-0.9999670891844907,0.05800024140654789,-0.766549082916852,-0.6031356970674084,-0.16720171829398944,0.8323908820734973,0.5119631281506433,-0.8834837822791278,0.9467309188022822,-0.4146067765713313,0.9295555196791462,-0.9056753678532885,0.4686359918990289,-0.964399555335817,0.8536805532548646,-0.5627460340103916,0.9875950231130083,0.10754689962609953,-0.9983279894300756,-0.9988617549212554,0.002202627163017416,0.9986419371186789,-0.6467051275979652,0.7940598841476518,0.8001695344736153,0.559099067742195,-0.8559665075415812,0.9632252334972374,-0.31642453021443734,0.9075342792526235,-0.9279223653336274,0.4186115282538997,0.8861457688133608,0.8814115215963327,-0.5157422974979222,0.9772942096570592,0.16285686617640185,-0.9935470004418365,-0.9946437681231006,-0.05360185090625137,0.9999931260526121,-0.6882592959114578,0.7589044953972639,-0.9943607643358188,0.6044927430795547,-0.8257818703723679,0.9767179461687177,-0.262997521466752,0.8826849809282743,-0.9472777715718009,0.3672825875596229,0.9106237010702084,-0.32345036792949416,-0.46713140507847895,-0.8597770522039611,0.2176593382362649,-0.9856699207541086,0.7985455257230312,-0.10923929491272048,0.9982281368734339,-0.7276687109279644,0.7213842088121938,0.6556760041017925,0.6480026984128029,-0.79302393212376,-0.5688604899279105,-0.20875095996530682,-0.9663340809216501,-0.9636812712599152,0.3148091210372556,0.9322639481744021,-0.3757479966426288,0.9443168844369039,-0.886933399739675,0.27178354036781,-0.9747212969189415,-0.17450829687189887,-0.597204170968451,0.9933524696396014,-0.7648105650467868,0.6816159450920024,0.6967866517096044,0.04449479614030514,-0.7577947730676524,-0.6138669394412954,-0.15385388881975773,-0.9791855545348057,0.2515746563315946,0.26135464647870654,0.9509990747980064,-0.42687471962383583,0.9244848678887357,0.3346129716591347,0.32506081075759274,-0.9607352470328252,-0.22918134717591804,-0.5515161389963199,-0.8056049711444528,0.12098153966677738,0.6397236300815508,0.7357259730782683,-0.011320448119112196,0.9992551493670706,-0.6569604570842378,-0.09847737825761012,-0.9889856905795112,0.197176179821904,-0.8488964734264707,0.9667706985481731,-0.3035675283111497,0.9017719720263373,0.3866761695942801,0.4062922150521878,-0.943755354417893,-0.28314022267273414,-0.5041094726890187,-0.8374093390706807,0.5876812563581968,0.5958378085933401,0.7723726255126925,-0.6729190578220327,0.9998515476431019,-0.0326827768478209,-0.04279399253525582,-0.9957039498763938,0.142163262992595,-0.8180795828325924,-0.5335672479975102,-0.24992662016341297,0.8762489747652037,0.43753440743004174,-0.9199140369272095,-0.923834531807594,-0.3362167767396849,0.9573882962817513,-0.8666041724049779,0.5416172705490824,0.5500952376038282,0.8066124107316489,-0.630593549181471,0.9973322089925956,0.023139517330675614,0.7119531592646456,-0.9993193969889653,0.08670733706943877,0.990666177496406,-0.5799301727888417,-0.19550689079846298,0.8479954108574991,0.4870292007493908,-0.8965999547843317,0.9370710047138187,-0.38824561224373627,0.9397809950605042,-0.8930984942213215,0.4938654972540373,0.8438117015232742,0.8383386307324042,-0.5863029852169939,0.9917049841774794,0.07888970415605616,-0.9995780194803481,-0.9998207654626192,0.030981213782938128,0.9967289020509339,-0.6244859194461483,0.8112243303041322,-0.9818407244532096,0.5350063139004648,-0.8704918882804368,0.9550933145877473,-0.3435942696085798,0.9192451487406665,-0.9168097429264217,0.4445747405267372,0.8724420695478167,-0.24232336864908258,-0.5401853841633749,-0.813542995154467,0.13439405492213163,-0.9963996676811399,0.7448174844573054,-0.02484145314750647,0.9996856204656623,-0.6670956433724726,0.7773314548544585,0.5895195128549443,0.581316240625634,-0.84167119536019,-0.49731913218965645,-0.29065501077784445,-0.9411325721162727,-0.9376640295381202,0.3938986002003115,0.8983537340020514,-0.2960838620766612,0.9687463625677586,-0.844724067107986,0.1894796069969263,-0.9901163357021217,-0.09066796930197943,-0.6628544148973993,0.999527119016046,-0.7076265641659844,0.7410162594876347,0.6336746177953252,0.1287647062344473,-0.8102276870534304,-0.5449555610009877,-0.23681001293805476,-0.9585290963267152,0.3324693070745723,0.34199499323961524,0.9214659489692885,-0.3489216991112995,0.9533952867634009,0.2537747489411153,0.24397470280875086,-0.9807476036594768,-0.1460980459063413,-0.6200405814940896,-0.7526529698604437,0.036656687345355675,0.702391909598529,0.6758550661872128,0.07322743159271301,-0.7762593476060816,-0.5908937995472388,-0.18222706784637124,-0.9729386526141437,0.27932440699222466,0.28902566164045695,0.9417066921760241,-0.3830061133580003,0.9350732410109964,0.30735378000277436,0.2977095247654475,-0.9683226663916277,-0.20107285184817486,-0.575294577919851,-0.7882207317507405,0.09236325110604145,0.6615787663682557,0.7159294153369969,-0.7330270956731844,0.9977306522849921,-0.6349906951108727,-0.12707626685083678,-0.9843163379259742,0.2253090763230559,-0.863756550071419,0.9590128894277158,-0.3308632441334032,0.9138373204609752,0.3599750353585069,-0.9497621118117279,-0.952880242482295,-0.2554210746628388,-0.5287558416501565,-0.8213322405643005,0.6107231629187907,0.6187040116947177,0.7537727855765436,-0.6939290339542314,0.9999332716910335,-0.06143343311198666,0.7687532343316608,-0.9926266971245435,0.17059163761531018,-0.8342919946825611,-0.5090056947695266,-0.27768933902171805,0.8897537004790531,0.4114745366769105,-0.9308180394589598,0.904211834428635,-0.3089733544437405,0.9653033788117383,-0.8518843142327988,0.5655857540251431,-0.9881292333895948,0.7892672494131585,-0.6526685509032474,0.999019899502097,-0.005641930405641321,-0.9984568460880283,-0.997843833472392,0.115342601325974,0.9863328716570486,-0.556244213966816,0.8577396833178075,0.8628974304305875,0.4616918012359908,-0.9089733523656672,0.9266347880609043,-0.4217325279812458,0.9492279228261343,-0.8797817463985158,0.5186858670685334,0.8280179302425882,-0.15946249434412157,-0.6093742224182759,0.9949933819681721,0.050167153681603266,-0.9999999639576087,0.6857601163447811,0.05973413447616971,0.9939901417192205,-0.601749365203917,0.8277167297055725,0.5191448846387974,0.5104703420193449,-0.8842961229355842,0.9461701627987051,-0.37047936343020327,-0.9091970604341632,-0.9049376030963452,0.4701696514548262,0.8580156085998412,-0.21430118476969082,-0.5641809622655538,-0.7964705548713354,0.10581990690793802,-0.9984268824058015,0.7253052755101096,0.00393952414436462,0.9985499401652616,-0.6453793453497633,0.7951144456061909,0.5660285077842528,0.5576581553609292,-0.856863250339554,-0.47214491010513215,-0.31807171125959294,-0.9310141594267428,-0.9272734936573754,0.42018829339249414,0.8853395391176653,-0.2684720699432087,0.9754839604409034,-0.8289712828972687,0.16114290418970975,-0.9937425034686045,-0.06196938217607957,-0.6841285023123652,0.9999980577533802,-0.6869981946805691,0.7600344262421708,0.6111482731576884,0.1572513535225945,-0.8267602208823682,-0.5205991717285963,-0.26467288417067125,-0.9499300325298459,0.3594740088721704,0.36889754476622494,0.9099045749765221,-0.3218063425775573,0.9616838629162925,0.22583220902063936,0.21596374802858598,-0.9859614246054778,-0.11756676218325753,-0.6423633286035557,-0.7333922381572078,0.007881276937432588,0.7225859879534964,0.6543635785672864,0.10189940286636857,0.9884707827995892,-0.5674311424558736,-0.21044928356351314,-0.965885734108529,0.30684275549403106,-0.9032531562587759,0.9316341666231227,-0.40943247151782075,0.9448869665864922,0.2798399656695736,-0.9728144376353359,-0.9751078932107462,-0.172797780700941,-0.5985964225896838,-0.770183502591756,0.675459201712255,0.6828858275461008,0.6955397564984809,-0.7522993095212496,0.9953796000538334,-0.14556681432969543,0.8200527171921541,-0.9788315430129725,0.2532553188643011,-0.8779010604236228,-0.4344391732014015,-0.3578848612122197,0.9251456139320128,0.3329756851479769,-0.9583759239225422,0.8648828369643476,-0.22749032685497933,0.9839188124451793,-0.804574721554662,0.6332591249403279,-0.9975773683680637,0.7345484937648028,-0.7143641348785797,0.9991866158625324,-0.09013319576037737,-0.9901915024979534,-0.9887271175195051,0.1988786881280183,0.9688794206702086,-0.4840224633291323,0.8981177272359521,0.902521322946791,0.3850737859515875,-0.9409509196025088,0.891545993372743,-0.28147396775855016,0.9724187700860202,-0.83645872514543,0.5890856863785485,0.7776691472798767,0.7712682313573725,-0.6742028590519071,0.9998799668047982,-0.03441870416845964,-0.9964450487011476,-0.9955416210434639,0.14388231171652752,0.9811824529907895,-0.5320974428823351,0.8721795160528374,-0.954068575990865,0.4359719200029745,-0.9205937244655726,0.9154309145723153,-0.4476528577730904,0.9578884768089547,-0.865736156446938,0.5430765392755651,0.8115381997982689,-0.13098513709866944,-0.6319406325902357,-0.7425181271294278,0.0214030429733385,-0.9995934733082185,0.6645294970221718,0.08843756931235755,0.9904279250088829,-0.5785143006321433,0.8435234194684936,0.4943323439203418,0.48551147856054067,-0.8973677755937267,-0.39595596238151626,-0.3970575391223998,-0.8968376190358188,-0.8923157811414161,0.49537505731412607,0.8428783373568675,-0.18610146625475418,0.9905928397829022,-0.7787382903794237,0.0771580939626033,-0.9996269651998737,0.022602685608198315,-0.7433213388044586,0.9965870259888971,-0.6231283923880809,0.8122387355977344,0.5420685847981261,0.24015010871362855,-0.8713454496780155,-0.44657954657810967,-0.3452249099534427,-0.9201244618763356,0.43705149808534033,0.4461298878300767,0.8715918978336261,-0.24063786610847437,0.9814134331066076,0.14269476075377271,0.622735304285864,-0.996545420008696,0.7436573797256676,-0.7048358336244451,-0.673316167773916,-0.07665708943684572,0.77842295375785,0.5881156318047276,0.18560772826107486,0.9721381955142164,-0.49581149979989503,0.8920888373534278,-0.9405440132978045,0.3975186737118985,-0.9362867948123735,0.8975894040447762,-0.48507212285448903,0.9691757463476962,0.19770258175873845,0.5781043581828509,-0.9903584404443732,-0.08893808202114413,-0.664153919348354,-0.7135239385403711,-0.020900662597383657,-0.9974931759546063,0.6323299931537355,0.1304869570922623,0.9837037765659855,-0.5434984054571993,0.8654845491814993,-0.9580326419036075,0.998079119077017,-0.9152285581459672,0.719682643875825,-0.4355196414240192,0.09772955375994581,0.2520943220706157,0.5316719235484367,-0.20635052027128456,-0.9669625299149741,0.47733166648736325,-0.7515082263422607,0.03492089487711846,-0.999887625998129,0.9435066253395396,-0.8880641667394384,0.5034603488897754,-0.9741701075797483,0.8361832384609842,-0.9725358496374381,0.28099175579582597,0.06785015233351772,0.6798183692890929,-0.38460999389002537,0.0420432195714721,0.30570048617360734,-0.6158022018402123,0.8500779982807418,-0.9796806619509129,0.5256217294864336,-0.7871506645596485,0.655270472839584,-0.9991662266877608,0.9235466221628486,-0.9123333664713944,0.4544626636888587,-0.1187582889006316,0.8042762139226867,0.5533827803848734,0.22700098054360063,0.12341702401172429,-0.4586382506635758,0.7373857153755037,-0.9253362496356741,0.35835402656413196,-0.6588085153378381,0.7842473790512996,-0.9893459135649023,0.9787285754643128,-0.847596900640605,0.6120975994391612,-0.30122853990484316,0.9007086634328207,0.38893800516403687,0.4040487821472693,-0.0631669642667033,-0.9936077612043929,0.5989988692417925,-0.83874804648194,0.17859930361725448,-0.991608116713316,0.8858968046139817,-0.9450513617893738,0.9998062564135861,-0.9314514443592684,0.7484036971840012,-0.9959281659043696,0.1397338855312276,0.2109404963368075,0.5670173077847853,-0.24754986900979958,-0.10239926716066453,0.4397396167153435,-0.722933260464292,-0.007378798768181661,-0.9983588842833221,0.6427483581016915,-0.8678260365213236,0.5395528524843336,-0.9828491103105694,0.8586313047753877,-0.9618215053301398,0.3213305390152279,0.025592663510134336,0.7102278400645163,-0.4233067783900301,0.0842624448432856,0.26515742376550555,-0.5819275140257377,0.8270427960665668,-0.9703213518604777,0.48917091187809103,-0.7603608917100413,0.6866329669843529,-0.9999989218725792,0.9389394877149653,-0.894199707470364,0.4917302738719645,-0.1606469581009355,0.8286901384652298,0.5176595931391132,0.26798799105005994,0.08133569165945766,-0.4206442208545237,0.7081573283734152,-0.9084725008733453,0.3185480677539076,-0.6264006024972257,0.8097870224123584,-0.9823032855357573,0.9865298683812554,-0.8692815135106358,0.6449954286169567,-0.9985227632877935,0.9182763266896512,0.349625822695098,0.44237536560944796,-0.10532022210823427,0.7961666083320021,0.5645957747862868,-0.8149674845601295,0.13682526156435834,-0.9961886276480517,0.7464526334566655,-0.9303788143389023,0.999744136856396,-0.9460074016977692,0.7757854045279853,-0.9912241661706953,0.9758647305179889,0.16940917072757586,0.6013479557956635,-0.2883062016071036,-0.060235722425131887,0.4013606073342797,-0.6930645306078363,-0.04966528728850988,-0.9950434758971566,0.6097725633433405,-0.8460348416884708,0.9781218355402832,-0.9897692027176476,0.879542761400252,-0.9493858817770492,0.36109426793943983,-0.016710626036460598,0.7393662845277683,-0.46124601154791156,0.1263308737389475,0.22413983467249804,-0.547011406626759,-0.2344252250949666,-0.9592255511681472,0.4518446722360395,-0.7322103742576572,0.7167666602871807,-0.9990420153688357,0.9526520237628006,-0.8744657854376457,0.5281178817778774,-0.980265459459261,0.8516210361377891,-0.6181134802967511,0.3084954092781602,0.039108800659126135,0.7006431516564703,0.6776616204543685,-0.8899829464366159,0.2781720341691295,-0.5928716808720779,0.8345689250975847,-0.9735027239928613,0.992565663876495,-0.769074504280644,0.6767389716421169,-0.9999273405780728,0.93420063930993,0.3096879485889239,0.47991027251682555,-0.14728499849923363,0.8210454897996218,0.5291822776895259,-0.789728453879412,0.09480635652833522,-0.43287408594704935,0.7176404868255334,-0.9140412575961956,0.9978928715748306,-0.9588703807675534,0.801778763505248,-0.9847462680830101,0.9842275676820101,0.12757466985349075,0.6346024293291833,-0.3285465803829246,-0.01796437962281544,0.3622633215582148,-0.6619554899599095,-0.09186289463101843,-0.9899473341064755,0.5757055173994836,-0.8227295798419928,0.9684480177193766,-0.9949180005785745,0.8988801851171441,-0.9352512338150687,0.4002117812553146,-0.9415375171298753,0.7671815564132152,-0.49835979717474677,0.16817322044590327,0.18272112412042663,0.5904883392218871,-0.27533113863057745,-0.9464131169589848,0.41370980973378824,-0.7027494904703773,0.9052571225372227,-0.9962972196598715,0.9646596903022314,-0.8531669162715062,0.5635603680118394,-0.9877492823371178,0.873027869722926,-0.6508074248969261,0.34845074300568524,-0.003188079592359915,0.7301936585128218,0.6459531668475889,-0.8699006752990006,0.23729818290558072,-0.5582817539418419,0.8105221034480665,-0.9629599784529916,0.996825160268576,-0.7413535833463313,0.7072714201551966,-0.9995424442819337,0.9484531030861781,0.2691958558095094,0.5165863302642,-0.18898619312404416,0.8444550252881676,0.4928217540740394,-0.7630761223004081,0.05261778569366121,-0.3943604186699992,0.6875440481827675,-0.8960679293119094,0.9942557735999359,-0.9700173619347395,0.82633725630652,-0.9765060645111686,0.9908290276299894,0.08551186088867287,0.666721216059195,-0.36819899100981657,0.9292909467525485,0.32251772803122686,0.4680025064350739,-0.13389610380493697,-0.9830795789850652,0.5406081867787962,-0.7979519581628083,0.10825968346043927,-0.9982862895860699,0.9166089696026175,-0.9194428568613301,0.9986790336915301,-0.9549443027932801,0.7936238774096553,-0.5345817163055009,0.20971460374910125,0.14097541518354742,0.6240933756205997,-0.31574431856435176,-0.9319069784116063,0.3748345706592424,-0.6720309636524161,-0.07838876750958815,-0.991769446842018,0.9749409983697753,-0.830341216505264,0.5979943045722558,-0.9934654255256443,0.8928723294738072,-0.6823366821748956,0.38778248802283855,-0.045479254445073065,0.7584374081560709,-0.4865902692600377,-0.8482616267655847,0.1959996619553634,-0.5226927239648977,0.7850247685097628,-0.9506939162517102,0.9993007347473442,-0.7123059333570576,0.7365381331758709,-0.9973687632111806,0.9610082117576564,-0.8601429659360318,0.5523379032459332,-0.23034917737389116,0.8663533210082343,0.45557927486444155,0.3357434943178266,0.010335049879339604,-0.3551410025609081,0.6562171782238513,-0.8764909946193683,0.2504131346719881,-0.9794283965215013,0.849416932964232,-0.9665183021532959,0.9956572963653197,-0.90219746013237,0.6976468360887613,-0.4071924713902598,0.9440807318041733,0.2821949556112907,0.5049603068030692,-0.1756896920270524,-0.9744525010923384,0.5045433817911383,-0.7717463187723193,0.06611714812613748,-0.9998680418379398,0.9326973873598148,-0.9019890416444241,0.9956122191226664,-0.9666421166774342,0.8186459262437656,-0.5698469460626474,0.25088068103868605,0.09897741613360914,0.6565815322563426,-0.35559244132326584,-0.9157330957640393,0.3352885262808999,-0.6401097677905062,-0.12048272254384249,-0.9854667998338913,0.9834775484993172,-0.806029535093804,0.6313580683616765,-0.9974036593943095,0.9111189016734654,-0.9246763108385022,0.4264202560964359,-0.08768903945948815,0.7853238554696705,-0.5231043993732791,0.1964732347523781,0.15435037930098738,-0.48616828119805294,0.758122550405528,-0.9367264887783104,0.38733727100125653,-0.6819835380923377,0.7644867348886315,-0.9934101873933219,0.9718434966564621,-0.8378010025538786,0.5871010103176687,-0.2712999279025105,0.8867011876905732,0.41752148933626837,0.3752822781503248,-0.0319661815776381,-0.3152860248287399,0.6237159396286034,-0.8553454884717272,0.20924235588836101,-0.5341734936257426,0.8709764900055357,-0.9548008551450433,0.998703733200804,-0.9196326621895328,0.7273239448163892,-0.44545723865068776,0.9571809865624936,0.24136716607781616,0.5410144283790723,-0.21716886534067395,-0.13341747386340178,0.4675756441419978,-0.7441595593775906,0.023856289304338453,-0.9996604266246311,0.94711664649811,-0.8829210235752105,0.990763653324353,-0.9766100243322878,0.8422029233664236,-0.9698998715321939,0.9943073492781442,0.056802286741659574,0.687894668206459,-0.39480419456266047,0.053100073748448044,0.295142448342857,-0.6070430291722524,-0.16236106126192795,-0.97740055787538,0.5161727399434811,-0.7802753803101393,0.9482999329650486,-0.9995569360655335,0.9277349321902765,-0.9077452005967321,0.464294900936942,-0.12974189585162912,0.8108048843702336,-0.5586823799608196,0.23776732351221536,0.11242487064937735,-0.4487737899162277,-0.34292086182763304,-0.9210826921915329,0.34799800784799584,-0.6504406626204431,0.7910672083747355,-0.9876738011099633,0.9809395669175385,-0.8139597074664054,0.6208134392972183,-0.3117651590985971,0.9054622107193515,-0.7030930066075497,0.41414945546008036,-0.07421020624041139,-0.2748668100858389,0.5900984967312026,-0.832669252943292,0.16769711622760092,-0.49794102427445225,0.8909773443691474,-0.9413746930719703,0.9999628862220592,-0.6918113931790746,0.7556994319809283,-0.4829248140251699,0.9685682667641976,0.20010742499066653,0.5761003485766673,-0.25825939246716867,0.8803678883295972,0.42977113142842027,-0.7152410493430433,-0.018447262819111254,-0.997663815495081,0.6342291026125879,-0.8622729268478139,0.9841420133074846,-0.9848301871542383,0.8642527110903492,-0.9587331825728168,0.997924091346,0.014525503771847458,0.7179767453695621,-0.43330940478707114,0.09528713330452983,0.2544681824114395,-0.5728899241527208,-0.20394883803735958,-0.9675851563422768,0.47948650441729074,-0.7531248418828487,0.9340282341710302,-0.9999214020275949,0.9426906849159109,-0.8891895862597679,0.5013386419429204,-0.1715625656775501,0.8348348939162497,-0.593260540539879,0.27863590300965707,0.07029816604250196,-0.4105761714363126,-0.3823437169838257,-0.9037905226863483,0.3080359662008396,-0.61773375618544,0.8162319851226648,-0.9801698702187516,0.9882801441806369,-0.7886617471415585,0.6534148582997095,-0.3516724542379999,0.92260281529988,-0.7325392247493349,0.4522754694059591,-0.11632142404960558,0.8028155646350091,0.5554250114290856,-0.8085028695072066,0.12585176520091462,-0.46081743786457835,0.7390410175037788,-0.9262638434422983,0.9994325020442831,-0.6606526065751815,0.7827225167078867,-0.9897001792027007,0.9782221936914371,0.1584895709317684,0.6101552775061284,-0.2988877376505261,0.8996399312210185,0.3911974987431339,-0.6850425413388621,-0.060717801654278,-0.2878437122098022,0.6009620041975541,-0.8400817033708419,0.9757591491829926,-0.9912878943101591,0.8847558290356563,-0.9458507412412274,0.9997549448495109,-0.027777274092067778,0.7467739287515245,-0.4710391629329689,0.9651159076583982,0.21333851930011696,-0.5377115732522195,-0.2451716272343562,-0.9560381609126772,0.4419421781080214,-0.7246265085137319,0.9180849950698413,-0.9984964050308895,0.9559593949811813,-0.8690426750221605,0.9864507496065643,-0.21307620651522413,0.857370879915695,-0.6267769999091819,0.31900583468697286,0.02804565558333936,0.7084982442266052,-0.4210823284407912,-0.8848809263918657,0.2675226622741016,-0.5839213511854173,-0.19069151310772137,-0.9709118237815588,0.9938520917221293,-0.7619523949006624,0.6848469237077438,-0.9999995144382272,0.9380923265441868,-0.7606744880441944,0.48959208953546407,-0.15822447261747172,0.8273141920595297,-0.5823202114912562,-0.7828895864107017,0.0837811893998953,-0.4228691709006725,0.7098877646985587,-0.9094953486871954,0.9971135298449192,-0.6283115136763319,0.8083448383870683,-0.9827599316779054,0.9861254906416557,0.11658808336331829,0.6431182703434334,-0.33898119225721357,0.917301975236645,0.3519237775987511,-0.653618078724229,-0.10287967969192831,-0.24708190906699057,0.5666194220055382,-0.8163870666381164,0.9656300629548429,-0.99597158906396,0.90367558474829,-0.9312756020010411,0.999796633286623,-0.07003034164577016,0.774234682808778,-0.5079259476886703,0.9753259257670718,0.1718270648027999,0.5993855321249629,-0.2859556564002275,-0.9427802361313787,0.40360695047787076,-0.6948313809232929,-0.047214293156501386,-0.9952844952551982,0.967517316654549,-0.8473405218691522,0.9786293768767407,-0.9894161098367448,0.8783725118864903,-0.659171776891779,0.3588048723683753,-0.014257045482523881,0.7377118574729423,-0.4590673694393105,-0.8643877439900284,0.22653059882306545,-0.5490639584226961,-0.23203902566010734,-0.9599162300317844,0.9976454379645361,-0.7338794498971215,0.7150533845833464,-0.9991463921740641,0.9519030243669085,-0.787448445523143,0.5260325338902008,-0.1998443620966882,0.8503322550127322,-0.6161826571283574,-0.7558752412778754,0.04156067847920702,-0.3841641357385895,0.6794640941812725,-0.8910992177655437,0.9930101196650053,-0.9726481474185379,0.835918259673725,-0.974060933423771,0.9922640138460369,-0.8882860907902507,0.674930336397341,-0.37846800489580945,0.03540355946365884,-0.7518267609936022,0.4777560018161994,-0.14485744388258504,-0.20587792724577456,0.531262815645882,-0.7912314206572613,0.629940266901837,-0.8594567081847005,0.7193472370410268,-0.9857754879635473,0.8670237450294471,-0.9581709759904503,0.8003098636765094,-0.9164655938138356,0.7218182664533616,-0.4382908840939928,0.10079518353841889,-0.3262279382888224,-0.020417802431201598,-0.20936407706266802,-0.6637927805796657,0.8813009645929345,-0.7494721555907612,0.9320369400875439,-0.8241219650525436,0.9445229957632847,-0.994667928372156,0.8978022052320771,-0.9748611858702809,0.8378689581752237,-0.05653423208820985,0.2839471372615509,0.06477608851530056,0.16575379062124987,0.1851331353927918,0.04512113748361386,0.7781196875599561,-0.6133718818914837,0.8484514177946029,-0.7044931515748817,0.9062969596389727,-0.8773690365189364,0.9640101930932545,-0.8128131824150086,0.9247236992919875,-0.7362956080417992,0.457204815139923,-0.12181676432150522,0.3461496123715573,-0.0007342095820534606,0.23000031796677578,0.6478244522627502,-0.8711083724597971,0.7353011939536946,-0.9241637648094128,0.8119569162689322,-0.9512589086080504,0.9966267777812453,-0.9069165972174499,0.9793559941843546,-0.8492276978553656,0.9476725722347361,-0.30416485286754497,-0.043654165619951314,-0.18657597066757778,-0.16430550554109677,-0.06624135350860778,-0.7646597840633362,0.5965290430452219,-0.8370664870051482,0.6893238399734518,-0.8971545472613235,0.9945154185683305,-0.9694180629120369,0.824952807116698,-0.9325680362653892,0.7504434934553526,-0.4759141694535061,0.14278383807674594,-0.3659164014787686,0.02188589307252796,-0.25053364500836434,-0.09933413446730928,0.43697054803684937,-0.7208012210932797,0.9158770715697518,-0.7994285565856181,0.9577496867912787,-0.998139685584261,0.9156251885029477,-0.9834125887210133,0.8602064497888938,-0.9542131548557748,0.32424646961885956,-0.532506297640202,0.20731466711716803,0.14340435703361076,0.08733192977654253,0.75085773281411,-0.5794192867074219,0.8253070100145202,-0.6738460897597394,0.8876107022223999,-0.9920806463487171,0.9743921656902687,-0.8367233058948802,0.9399950947779502,-0.7642555922091454,0.8917646380132729,-0.1636870230669115,0.385519460941742,-0.04302778369918954,0.2709548705305865,0.07826467166890241,-0.4178472059874721,0.7059787250362578,-0.9071805682573864,0.7865424918291385,-0.9514520753690294,0.9992059748291581,-0.9239240824210604,0.9870291543531473,-0.8708003015227429,0.9603267738869327,-0.3441830019768495,0.5502906419929385,-0.2279606004204352,-0.12243904210924815,-0.10838342928887096,-0.7367197095533256,0.5620502686549413,-0.8131782486119592,0.6580668264678987,-0.8776696949248037,0.7443989802049836,-0.9789302757608985,0.9996697038751174,-0.9470015515852271,0.7777257240663643,-0.9011363314228873,0.18451696614186142,-0.4049500193527492,0.06415042150283214,-0.2912548570365273,-0.057160189268212175,0.3985368978056513,-0.6908403381226833,0.506660503068851,-0.7733044878815082,0.9447287358045596,-0.9998251684037925,0.9318095656237574,-0.9902040728450011,0.8810045128278099,-0.9660106937835197,0.8172342058179609,-0.567828758270965,0.24850453253475246,0.10141894171824789,0.12938643253197768,0.22113631527592878,-0.5444297606715398,0.8006856298233691,-0.6419931105443997,0.8673359734817697,-0.7301086042932714,0.9830303625422296,-0.9989024524753822,0.9535842716414124,-0.7908478618036108,0.9101048105180916,-0.2052643469236204,0.4241993824898227,-0.08524435513894378,0.3114245212777857,0.03603013048609811,0.1940665983129217,0.6753928340382772,-0.48831117160409143,0.7597204681002702,-0.9375826764625955,0.8328677178883981,-0.9392781097440288,0.9929359235762553,-0.8908145178199749,0.9712623712701355,-0.8292413032858182,0.5851127990273585,-0.26893727105802273,0.48261087139343295,-0.1503315416919494,-0.20045864637184801,0.5265656470703877,-0.7878347434829897,0.6256321341888242,-0.8566141617268529,0.7154915405874267,-0.9866905914465056,0.9976882412167523,-0.9597403095021131,0.9985758231797284,-0.9186660623443262,0.7256376760300033,-0.443258937206994,0.10630014610671974,-0.3314548383187827,-0.014883949987596106,-0.2147729026242229,-0.6596431247835344,0.4697433448379979,-0.7457965106680834,0.5731837132073656,-0.8209744234286461,0.946326372974656,-0.9952234841776842,0.9002259270031102,-0.9760794564786597,0.8408773559384508,-0.6021350305015317,0.2892496733418276,-0.5010284301941097,0.17120938485963574,-0.39254847268899506,-0.5084659211662224,0.7746313397322195,-0.6089912181357098,0.8455090571449901,-0.7005543295066018,0.9039438872553395,-0.9960276133992181,0.9654669106422936,-0.9994808880979166,0.9268162561612636,-0.7400294363417342,0.4621201552882536,-0.12730837297232878,0.35133684557497763,-0.006268890348580502,0.23538310659458148,0.6435982575809422,-0.4509653309624372,0.7315388458730343,-0.5557230798770978,0.8087137831769777,-0.9529512015635073,0.9970657310781063,-0.9092345292331647,0.980459793999703,-0.8521371572129568,0.949424974559604,-0.3094326505823144,0.5192218033439185,-0.19201062022411902,0.4119146716401459,-0.07176287618713209,-0.7610813264467104,0.5920778083788794,-0.8340256287258605,0.6853036547201985,-0.8946960389421521,0.9939213120722868,-0.9707615126887902,0.9999387343356368,-0.9345517451568759,0.9912406134885713,-0.48077459726350996,0.14825963558454266,-0.37106164682318493,0.02741892566376764,-0.25588798816849484,-0.6272654117216954,0.4319855322176995,-0.7169538533208882,0.5380137877225866,-0.7960912831686142,0.6361243930601461,-0.9984618399623817,0.917836293602444,-0.984401423847047,0.8630156689004737,-0.9558541185922488,0.32947717188698994,-0.5371828502006218,0.2127259402527164,-0.4310965589770278,0.09284413907752757,0.7471907665928823,-0.5748994728397245,0.8221690147405067,-0.6697463401572538,0.8850478580295922,-0.9913702797025042,0.975621746566847,-0.9999491570291519,0.9418690680792045,-0.9938123378603909,0.8942554255147024,-0.169144559280843,0.39062041618219795,-0.048556692354410555,0.27627837241706754,0.07274575645099596,-0.4128124411329078,0.7020480590805291,-0.5200637607835646,0.7831125713532715,-0.6196615908461217,0.9994111861402534,-0.9260273712432442,0.9879025823346421,-0.8735080234005297,0.9618555647842175,-0.34937426831560203,0.5549035340766044,-0.23334607585564446,-0.11694411610137141,-0.1138838587689866,-0.23634075950811925,0.5574638979809323,-0.3522593071917318,0.6538893469530663,-0.8750036616054478,-0.9027569625602001,-0.9271858597500899,-0.9661841814657925,-0.9487649507851008,-0.9278518918591915,0.7418878565991018,0.6998507689389212,-0.41000440206193783,-0.3539264361482756,-0.2965451356433421,-0.05163366938270045,-0.11211336702133046,-0.6868281327638633,-0.7296492611232127,-0.7697834550679794,0.9428996997454067,0.9613665840340517,0.9762932345455879,-0.9909617028657703,-0.9810004330508696,0.8535821035904874,0.8204113640033143,0.7842194584320055,0.25386180053348206,0.19472574969760326,0.1561106841185919,0.2157352576452793,0.2745653857869146,-0.5898453810671298,-0.6377397703344296,-0.6832856820142627,0.8934565023114505,0.9190549058607576,-0.9986279133311692,0.9552363077052447,0.935532867796571,-0.7559047023523355,-0.7148027326026839,-0.6710685008002875,0.37363001679918617,0.31667920946470574,0.030498478779596005,0.09106978444848383,0.15130572551001692,-0.48347373370215163,0.7561098984385838,-0.9356435573481255,-0.9553290035413246,-0.9714964493559407,0.9935774166340207,0.984884535054224,0.9725648148101166,-0.832321891140003,-0.7971683857663281,0.5395149645804683,-0.21542914350502074,-0.1558010343851583,-0.19503322483482097,-0.2541650039612624,0.5726329531310395,0.6213048364448666,0.667688763838036,-0.8837562640951806,-0.9105127199737241,-0.9339162114999888,0.9999174225592625,-0.942795238656402,0.7695833178226583,0.7294348570992588,0.6866002515043916,-0.3931664163412973,-0.33667158487054694,-0.009349641602956728,-0.06998545261337864,-0.13036354209762843,0.4648501058024162,-0.7420980197110918,-0.7813886085923984,0.9488639601711536,0.9662649671497383,-0.9957485532357628,-0.9883279495292573,-0.9772678267798678,0.8438599950494817,0.8097606193430826,0.7726792990345095,-0.5058106505382763,0.17665973442950222,0.17424392422114932,0.23365089576120301,0.2921974475540313,-0.6045918991112837,-0.6517930876850607,0.8736605882922692,0.9015631242982447,0.9261456528504106,-0.9994218932004523,-0.9996438923886166,0.9288804218062741,-0.7437405952705284,-0.7018247822684819,0.412526893193926,0.356513316253346,0.29918687853192516,0.04886980572048453,0.1093630273934941,-0.4460184802777057,-0.4994855202134944,-0.5511132040293559,-0.9419743467133856,-0.9606011287587034,-0.9756904958170238,0.9913291357168651,0.9815335593247089,-0.8550205129961075,-0.8219905247552972,-0.7859335552686949,0.5239440184969969,0.47131566922971185,-0.15337665799673145,-0.21303224024409456,-0.271903330971729,0.587608436553495,0.6356057660908533,0.681262476514327,-0.8922101233394741,-0.9179606894416009,0.9984791715584975,0.9999846834666112,0.9978077503929731,0.7577135460002489,0.7167352808616887,-0.43170278449316535,-0.37619552541139545,-0.31930292578630226,-0.027732291986223765,-0.0883135780980281,-0.14856964933618033,0.48104945161562035,0.5333401546025632,0.9346632459321599,0.9545074684727477,0.9708367159387803,-0.993886750733414,-0.9853601037385278,-0.9732048667969921,0.8338526297200837,0.7988361447809769,-0.5418429472029198,-0.4898654096874137,-0.43608394212231566,0.1923182632470923,0.2514875509836126,-0.5703620480380852,-0.6191340420879615,-0.6656260741704059,0.8824579021066479,0.9093649836432747,0.22050287689710524,0.13003041669972346,0.18993170896510214,0.9219139788881936,-0.5683632482188326,-0.688609588452448,0.39570940552136025,0.33927610064077646,-0.9902945481103215,0.06722461280747433,0.9626998762829689,0.9445156055968598,-0.7728925377106455,0.7796586617377118,0.4528546228829238,0.3979411501627705,-0.9795547217641181,0.9887457478303623,-0.3493531863656495,-0.40554377026389676,-0.8113812942953226,0.7386033388932397,0.508195959398463,-0.1793828902820368,-0.11938079963725166,0.9962139667396317,-0.28954974431002095,-0.877358240566665,0.6496918368022033,0.6106697127084074,-0.9003623816122225,-0.24108477337320514,-0.18177429479991278,-0.16912238371013744,-0.9299018381257397,0.5508328165871668,0.7037934208263967,0.6594074832386919,-0.35909746607913307,0.9871332129381408,-0.04610556779954655,-0.10661185023282393,-0.9512519696019248,0.4970861844095668,-0.7662388414264671,-0.8038026646988772,-0.4172570624416915,0.9750802849761256,0.01700157050904077,-0.9820591687383897,0.38611864609956237,0.8235633904725689,-0.7241787782448766,-0.5262991163408383,-0.47375457568800544,0.140354677943588,-0.9978299293258509,0.26923919384433287,0.3271593226023867,0.8577049811064734,-0.6272829344705249,0.8909569115713439,0.91685944302121,0.20253309675013503,-0.9999961708593216,0.9374736118953559,-0.5330559142842497,-0.5833939810341283,-0.6751616183929489,0.8605374633377737,-0.9835301840645665,-0.9926824053892515,0.08555669541734366,0.9575626950022864,-0.4786214855170421,-0.5309972023832538,0.7910396800994286,0.4363862726484636,-0.9701695475808978,0.7811859179789102,-0.771340297457971,-0.46456256402188045,-0.8353769824221159,0.06966150978007332,-0.9906310807467553,0.3369773451504971,0.8523070523241386,-0.10110706759638993,-0.5703712885631387,-0.30709827881695906,-0.868388150367813,0.6635582869510215,0.5960076575388856,-0.9082102831399245,-0.22320127507227366,-0.6396193028669817,-0.18721399770618155,-0.9229825081837675,0.5660841518364857,0.6906136518345309,0.15612179604090384,-0.3418780181391697,-0.5397883555423869,-0.7130924100385029,0.8325018456734983,0.37136317921619755,0.5129548831583508,0.03293987457587776,-0.8146039904770865,-0.4316926369128128,0.9789942397739657,-0.001383679998839531,0.4831894482062653,0.4030126434784963,-0.09074639368986948,-0.7367349236385308,-0.5105773763510081,0.9463191005415215,0.12212790921632571,0.3381269750715174,0.28689982361260186,0.06844311233880541,0.9623687059345131,-0.4634806961659036,-0.2565266551765985,-0.8933106003901682,0.6232169465473987,0.6374896086579838,-0.884896647026218,-0.7603031619166475,-0.47969346694405435,0.9572099679990536,0.8697571164291646,0.30446347032354587,-0.9947346982421911,0.8611589424160517,-0.6742601895077784,-0.4946830417797804,-0.7490420245941898,0.8021532969490937,0.9905475016208241,0.6097021177687517,-0.9008931530840377,-0.23989930489038738,0.5100522194128487,0.9668911821992081,0.051309364436762275,-0.4035714375994798,0.3542301338154408,0.9976340766084587,0.22260598252962827,-0.8689223841669775,-0.7250204702064496,0.8228700182335728,0.7818586772971278,-0.37079612308757387,-0.9438905331915157,0.16749547278730292,1.0],"x":[-1.8110048645192806e18,-1.8105520000870428e18,-1.810099135654805e18,-1.809646271222567e18,-1.809193406790329e18,-1.8087405423580913e18,-1.8082876779258534e18,-1.8078348134936156e18,-1.8073819490613775e18,-1.8069290846291397e18,-1.8064762201969016e18,-1.806023355764664e18,-1.8055704913324262e18,-1.8051176269001882e18,-1.8046647624679503e18,-1.8042118980357123e18,-1.8037590336034747e18,-1.8033061691712369e18,-1.8028533047389988e18,-1.802400440306761e18,-1.801947575874523e18,-1.801494711442285e18,-1.8010418470100475e18,-1.8005889825778094e18,-1.8001361181455716e18,-1.7996832537133335e18,-1.7992303892810957e18,-1.798777524848858e18,-1.79832466041662e18,-1.7978717959843822e18,-1.7974189315521441e18,-1.7969660671199063e18,-1.7965132026876685e18,-1.7960603382554307e18,-1.7956074738231928e18,-1.7951546093909548e18,-1.794701744958717e18,-1.794248880526479e18,-1.7937960160942413e18,-1.7933431516620035e18,-1.7928902872297654e18,-1.7924374227975276e18,-1.7919845583652897e18,-1.7915316939330516e18,-1.791078829500814e18,-1.790625965068576e18,-1.7901731006363382e18,-1.7897202362041004e18,-1.7892673717718623e18,-1.7888145073396247e18,-1.7883616429073866e18,-1.7879087784751488e18,-1.787455914042911e18,-1.787003049610673e18,-1.786550185178435e18,-1.7860973207461972e18,-1.7856444563139594e18,-1.7851915918817216e18,-1.7847387274494835e18,-1.7842858630172457e18,-1.7838329985850079e18,-1.78338013415277e18,-1.7829272697205322e18,-1.7824744052882941e18,-1.7820215408560563e18,-1.7815686764238182e18,-1.7811158119915807e18,-1.7806629475593428e18,-1.7802100831271048e18,-1.779757218694867e18,-1.7793043542626289e18,-1.7788514898303913e18,-1.7783986253981535e18,-1.7779457609659154e18,-1.7774928965336776e18,-1.7770400321014395e18,-1.7765871676692017e18,-1.776134303236964e18,-1.775681438804726e18,-1.7752285743724882e18,-1.77477570994025e18,-1.7743228455080123e18,-1.7738699810757747e18,-1.7734171166435366e18,-1.7729642522112988e18,-1.7725113877790607e18,-1.772058523346823e18,-1.771605658914585e18,-1.7711527944823473e18,-1.7706999300501094e18,-1.7702470656178714e18,-1.7697942011856335e18,-1.7693413367533957e18,-1.768888472321158e18,-1.76843560788892e18,-1.767982743456682e18,-1.7675298790244442e18,-1.7670770145922063e18,-1.7666241501599683e18,-1.7661712857277307e18,-1.7657184212954926e18,-1.7652655568632548e18,-1.764812692431017e18,-1.764359827998779e18,-1.7639069635665413e18,-1.7634540991343032e18,-1.7630012347020654e18,-1.7625483702698276e18,-1.7620955058375895e18,-1.7616426414053517e18,-1.761189776973114e18,-1.760736912540876e18,-1.7602840481086382e18,-1.7598311836764e18,-1.7593783192441623e18,-1.7589254548119247e18,-1.7584725903796867e18,-1.7580197259474488e18,-1.7575668615152108e18,-1.757113997082973e18,-1.7566611326507348e18,-1.7562082682184973e18,-1.7557554037862595e18,-1.7553025393540214e18,-1.7548496749217836e18,-1.7543968104895457e18,-1.753943946057308e18,-1.75349108162507e18,-1.753038217192832e18,-1.7525853527605942e18,-1.7521324883283564e18,-1.7516796238961183e18,-1.7512267594638807e18,-1.7507738950316426e18,-1.7503210305994048e18,-1.749868166167167e18,-1.749415301734929e18,-1.7489624373026913e18,-1.7485095728704532e18,-1.7480567084382154e18,-1.7476038440059776e18,-1.7471509795737395e18,-1.7466981151415017e18,-1.746245250709264e18,-1.745792386277026e18,-1.7453395218447882e18,-1.7448866574125501e18,-1.7444337929803123e18,-1.7439809285480745e18,-1.7435280641158367e18,-1.7430751996835988e18,-1.7426223352513608e18,-1.742169470819123e18,-1.7417166063868849e18,-1.7412637419546473e18,-1.7408108775224095e18,-1.7403580130901714e18,-1.7399051486579336e18,-1.7394522842256955e18,-1.7389994197934577e18,-1.73854655536122e18,-1.738093690928982e18,-1.7376408264967442e18,-1.737187962064506e18,-1.7367350976322683e18,-1.7362822332000307e18,-1.7358293687677926e18,-1.7353765043355548e18,-1.7349236399033167e18,-1.734470775471079e18,-1.734017911038841e18,-1.7335650466066033e18,-1.7331121821743654e18,-1.7326593177421274e18,-1.7322064533098895e18,-1.7317535888776517e18,-1.731300724445414e18,-1.730847860013176e18,-1.730394995580938e18,-1.7299421311487002e18,-1.7294892667164623e18,-1.7290364022842243e18,-1.7285835378519867e18,-1.7281306734197486e18,-1.7276778089875108e18,-1.727224944555273e18,-1.726772080123035e18,-1.7263192156907973e18,-1.7258663512585592e18,-1.7254134868263214e18,-1.7249606223940836e18,-1.7245077579618455e18,-1.7240548935296077e18,-1.7236020290973699e18,-1.723149164665132e18,-1.7226963002328942e18,-1.7222434358006561e18,-1.7217905713684183e18,-1.7213377069361805e18,-1.7208848425039427e18,-1.7204319780717048e18,-1.7199791136394668e18,-1.719526249207229e18,-1.7190733847749908e18,-1.7186205203427533e18,-1.7181676559105155e18,-1.7177147914782774e18,-1.7172619270460396e18,-1.7168090626138015e18,-1.716356198181564e18,-1.715903333749326e18,-1.715450469317088e18,-1.7149976048848502e18,-1.714544740452612e18,-1.7140918760203743e18,-1.7136390115881367e18,-1.7131861471558986e18,-1.7127332827236608e18,-1.7122804182914227e18,-1.711827553859185e18,-1.7113746894269473e18,-1.7109218249947092e18,-1.7104689605624714e18,-1.7100160961302333e18,-1.7095632316979955e18,-1.7091103672657577e18,-1.7086575028335199e18,-1.708204638401282e18,-1.707751773969044e18,-1.7072989095368061e18,-1.7068460451045683e18,-1.7063931806723305e18,-1.7059403162400927e18,-1.7054874518078546e18,-1.7050345873756168e18,-1.704581722943379e18,-1.7041288585111409e18,-1.7036759940789033e18,-1.7032231296466652e18,-1.7027702652144274e18,-1.7023174007821896e18,-1.7018645363499515e18,-1.701411671917714e18,-1.7009588074854758e18,-1.700505943053238e18,-1.7000530786210002e18,-1.699600214188762e18,-1.6991473497565243e18,-1.6986944853242865e18,-1.6982416208920486e18,-1.6977887564598108e18,-1.6973358920275727e18,-1.696883027595335e18,-1.696430163163097e18,-1.6959772987308593e18,-1.6955244342986214e18,-1.6950715698663834e18,-1.6946187054341455e18,-1.6941658410019075e18,-1.69371297656967e18,-1.693260112137432e18,-1.692807247705194e18,-1.6923543832729562e18,-1.691901518840718e18,-1.6914486544084805e18,-1.6909957899762427e18,-1.6905429255440046e18,-1.6900900611117668e18,-1.6896371966795287e18,-1.689184332247291e18,-1.6887314678150533e18,-1.6882786033828152e18,-1.6878257389505774e18,-1.6873728745183393e18,-1.6869200100861015e18,-1.686467145653864e18,-1.6860142812216259e18,-1.685561416789388e18,-1.68510855235715e18,-1.684655687924912e18,-1.6842028234926743e18,-1.6837499590604365e18,-1.6832970946281987e18,-1.6828442301959606e18,-1.6823913657637228e18,-1.681938501331485e18,-1.681485636899247e18,-1.6810327724670093e18,-1.6805799080347712e18,-1.6801270436025334e18,-1.6796741791702956e18,-1.6792213147380575e18,-1.67876845030582e18,-1.6783155858735818e18,-1.677862721441344e18,-1.6774098570091062e18,-1.676956992576868e18,-1.6765041281446305e18,-1.6760512637123927e18,-1.6755983992801546e18,-1.6751455348479168e18,-1.6746926704156787e18,-1.674239805983441e18,-1.6737869415512033e18,-1.6733340771189652e18,-1.6728812126867274e18,-1.6724283482544893e18,-1.6719754838222515e18,-1.671522619390014e18,-1.671069754957776e18,-1.670616890525538e18,-1.6701640260933e18,-1.6697111616610621e18,-1.669258297228824e18,-1.6688054327965865e18,-1.6683525683643487e18,-1.6678997039321106e18,-1.6674468394998728e18,-1.666993975067635e18,-1.666541110635397e18,-1.6660882462031593e18,-1.6656353817709212e18,-1.6651825173386834e18,-1.6647296529064456e18,-1.6642767884742075e18,-1.66382392404197e18,-1.6633710596097318e18,-1.662918195177494e18,-1.6624653307452562e18,-1.662012466313018e18,-1.6615596018807805e18,-1.6611067374485425e18,-1.6606538730163046e18,-1.6602010085840668e18,-1.6597481441518287e18,-1.659295279719591e18,-1.658842415287353e18,-1.6583895508551153e18,-1.6579366864228774e18,-1.6574838219906394e18,-1.6570309575584015e18,-1.6565780931261637e18,-1.656125228693926e18,-1.655672364261688e18,-1.65521949982945e18,-1.6547666353972122e18,-1.654313770964974e18,-1.6538609065327365e18,-1.6534080421004987e18,-1.6529551776682606e18,-1.6525023132360228e18,-1.6520494488037847e18,-1.6515965843715471e18,-1.6511437199393093e18,-1.6506908555070712e18,-1.6502379910748334e18,-1.6497851266425953e18,-1.6493322622103575e18,-1.64887939777812e18,-1.6484265333458819e18,-1.647973668913644e18,-1.647520804481406e18,-1.6470679400491681e18,-1.6466150756169306e18,-1.6461622111846925e18,-1.6457093467524547e18,-1.6452564823202166e18,-1.6448036178879788e18,-1.644350753455741e18,-1.643897889023503e18,-1.6434450245912653e18,-1.6429921601590272e18,-1.6425392957267894e18,-1.6420864312945516e18,-1.6416335668623137e18,-1.641180702430076e18,-1.6407278379978378e18,-1.6402749735656e18,-1.6398221091333622e18,-1.639369244701124e18,-1.6389163802688865e18,-1.6384635158366484e18,-1.6380106514044106e18,-1.6375577869721728e18,-1.6371049225399347e18,-1.6366520581076972e18,-1.636199193675459e18,-1.6357463292432212e18,-1.6352934648109834e18,-1.6348406003787453e18,-1.6343877359465075e18,-1.6339348715142697e18,-1.6334820070820319e18,-1.633029142649794e18,-1.632576278217556e18,-1.6321234137853181e18,-1.6316705493530803e18,-1.6312176849208425e18,-1.6307648204886047e18,-1.6303119560563666e18,-1.6298590916241288e18,-1.6294062271918907e18,-1.628953362759653e18,-1.6285004983274153e18,-1.6280476338951772e18,-1.6275947694629394e18,-1.6271419050307013e18,-1.6266890405984637e18,-1.626236176166226e18,-1.6257833117339878e18,-1.62533044730175e18,-1.624877582869512e18,-1.624424718437274e18,-1.6239718540050365e18,-1.6235189895727985e18,-1.6230661251405606e18,-1.6226132607083226e18,-1.6221603962760847e18,-1.6217075318438472e18,-1.621254667411609e18,-1.6208018029793713e18,-1.6203489385471332e18,-1.6198960741148954e18,-1.6194432096826575e18,-1.6189903452504197e18,-1.618537480818182e18,-1.6180846163859438e18,-1.617631751953706e18,-1.6171788875214682e18,-1.6167260230892303e18,-1.6162731586569925e18,-1.6158202942247544e18,-1.6153674297925166e18,-1.6149145653602788e18,-1.6144617009280407e18,-1.6140088364958031e18,-1.613555972063565e18,-1.6131031076313272e18,-1.6126502431990894e18,-1.6121973787668513e18,-1.6117445143346138e18,-1.6112916499023757e18,-1.6108387854701379e18,-1.6103859210379e18,-1.609933056605662e18,-1.609480192173424e18,-1.6090273277411863e18,-1.6085744633089485e18,-1.6081215988767107e18,-1.6076687344444726e18,-1.6072158700122348e18,-1.606763005579997e18,-1.606310141147759e18,-1.6058572767155213e18,-1.6054044122832832e18,-1.6049515478510454e18,-1.6044986834188073e18,-1.6040458189865697e18,-1.603592954554332e18,-1.6031400901220938e18,-1.602687225689856e18,-1.602234361257618e18,-1.6017814968253804e18,-1.6013286323931425e18,-1.6008757679609044e18,-1.6004229035286666e18,-1.5999700390964285e18,-1.5995171746641907e18,-1.5990643102319532e18,-1.598611445799715e18,-1.5981585813674772e18,-1.5977057169352392e18,-1.5972528525030013e18,-1.5967999880707638e18,-1.5963471236385257e18,-1.595894259206288e18,-1.5954413947740498e18,-1.594988530341812e18,-1.5945356659095741e18,-1.5940828014773363e18,-1.5936299370450985e18,-1.5931770726128604e18,-1.5927242081806226e18,-1.5922713437483848e18,-1.591818479316147e18,-1.591365614883909e18,-1.590912750451671e18,-1.5904598860194332e18,-1.5900070215871954e18,-1.5895541571549573e18,-1.5891012927227197e18,-1.588648428290482e18,-1.5881955638582438e18,-1.587742699426006e18,-1.587289834993768e18,-1.5868369705615304e18,-1.5863841061292925e18,-1.5859312416970545e18,-1.5854783772648166e18,-1.5850255128325786e18,-1.5845726484003407e18,-1.5841197839681032e18,-1.583666919535865e18,-1.5832140551036273e18,-1.5827611906713892e18,-1.5823083262391514e18,-1.5818554618069138e18,-1.5814025973746757e18,-1.580949732942438e18,-1.5804968685101998e18,-1.580044004077962e18,-1.5795911396457242e18,-1.5791382752134863e18,-1.5786854107812485e18,-1.5782325463490104e18,-1.5777796819167726e18,-1.5773268174845348e18,-1.576873953052297e18,-1.5764210886200591e18,-1.575968224187821e18,-1.5755153597555832e18,-1.5750624953233454e18,-1.5746096308911073e18,-1.5741567664588698e18,-1.5737039020266317e18,-1.5732510375943939e18,-1.572798173162156e18,-1.572345308729918e18,-1.5718924442976804e18,-1.5714395798654423e18,-1.5709867154332045e18,-1.5705338510009667e18,-1.5700809865687286e18,-1.5696281221364908e18,-1.569175257704253e18,-1.568722393272015e18,-1.5682695288397773e18,-1.5678166644075392e18,-1.5673637999753014e18,-1.5669109355430636e18,-1.5664580711108257e18,-1.566005206678588e18,-1.5655523422463498e18,-1.565099477814112e18,-1.564646613381874e18,-1.5641937489496364e18,-1.5637408845173985e18,-1.5632880200851604e18,-1.5628351556529226e18,-1.5623822912206845e18,-1.561929426788447e18,-1.5614765623562092e18,-1.561023697923971e18,-1.5605708334917332e18,-1.5601179690594952e18,-1.5596651046272573e18,-1.5592122401950198e18,-1.5587593757627817e18,-1.5583065113305439e18,-1.5578536468983058e18,-1.557400782466068e18,-1.5569479180338304e18,-1.5564950536015923e18,-1.5560421891693545e18,-1.5555893247371164e18,-1.5551364603048786e18,-1.5546835958726408e18,-1.554230731440403e18,-1.553777867008165e18,-1.553325002575927e18,-1.5528721381436892e18,-1.5524192737114514e18,-1.5519664092792136e18,-1.5515135448469757e18,-1.5510606804147377e18,-1.5506078159824998e18,-1.550154951550262e18,-1.549702087118024e18,-1.5492492226857864e18,-1.5487963582535483e18,-1.5483434938213105e18,-1.5478906293890726e18,-1.5474377649568346e18,-1.546984900524597e18,-1.546532036092359e18,-1.546079171660121e18,-1.5456263072278833e18,-1.5451734427956452e18,-1.5447205783634074e18,-1.5442677139311695e18,-1.5438148494989317e18,-1.543361985066694e18,-1.5429091206344558e18,-1.542456256202218e18,-1.5420033917699802e18,-1.5415505273377423e18,-1.5410976629055045e18,-1.5406447984732664e18,-1.5401919340410286e18,-1.5397390696087905e18,-1.539286205176553e18,-1.5388333407443151e18,-1.538380476312077e18,-1.5379276118798392e18,-1.5374747474476012e18,-1.5370218830153636e18,-1.5365690185831258e18,-1.5361161541508877e18,-1.5356632897186499e18,-1.5352104252864118e18,-1.534757560854174e18,-1.5343046964219364e18,-1.5338518319896983e18,-1.5333989675574605e18,-1.5329461031252224e18,-1.5324932386929846e18,-1.532040374260747e18,-1.531587509828509e18,-1.531134645396271e18,-1.530681780964033e18,-1.5302289165317952e18,-1.5297760520995574e18,-1.5293231876673196e18,-1.5288703232350817e18,-1.5284174588028436e18,-1.5279645943706058e18,-1.527511729938368e18,-1.5270588655061302e18,-1.5266060010738924e18,-1.5261531366416543e18,-1.5257002722094164e18,-1.5252474077771786e18,-1.5247945433449405e18,-1.524341678912703e18,-1.523888814480465e18,-1.523435950048227e18,-1.5229830856159892e18,-1.5225302211837512e18,-1.5220773567515136e18,-1.5216244923192755e18,-1.5211716278870377e18,-1.5207187634548e18,-1.5202658990225618e18,-1.519813034590324e18,-1.5193601701580861e18,-1.5189073057258483e18,-1.5184544412936105e18,-1.5180015768613724e18,-1.5175487124291346e18,-1.5170958479968968e18,-1.516642983564659e18,-1.516190119132421e18,-1.515737254700183e18,-1.5152843902679452e18,-1.5148315258357071e18,-1.5143786614034696e18,-1.5139257969712317e18,-1.5134729325389937e18,-1.5130200681067558e18,-1.5125672036745178e18,-1.5121143392422802e18,-1.5116614748100424e18,-1.5112086103778043e18,-1.5107557459455665e18,-1.5103028815133284e18,-1.5098500170810906e18,-1.509397152648853e18,-1.508944288216615e18,-1.508491423784377e18,-1.508038559352139e18,-1.5075856949199012e18,-1.5071328304876636e18,-1.5066799660554255e18,-1.5062271016231877e18,-1.5057742371909496e18,-1.5053213727587118e18,-1.504868508326474e18,-1.5044156438942362e18,-1.5039627794619983e18,-1.5035099150297603e18,-1.5030570505975224e18,-1.5026041861652846e18,-1.5021513217330465e18,-1.501698457300809e18,-1.5012455928685711e18,-1.500792728436333e18,-1.5003398640040952e18,-1.4998869995718572e18,-1.4994341351396196e18,-1.4989812707073818e18,-1.4985284062751437e18,-1.4980755418429059e18,-1.4976226774106678e18,-1.49716981297843e18,-1.4967169485461924e18,-1.4962640841139543e18,-1.4958112196817165e18,-1.4953583552494784e18,-1.4949054908172406e18,-1.494452626385003e18,-1.493999761952765e18,-1.493546897520527e18,-1.493094033088289e18,-1.4926411686560512e18,-1.4921883042238134e18,-1.4917354397915756e18,-1.4912825753593377e18,-1.4908297109270996e18,-1.4903768464948618e18,-1.489923982062624e18,-1.4894711176303862e18,-1.4890182531981484e18,-1.4885653887659103e18,-1.4881125243336724e18,-1.4876596599014346e18,-1.4872067954691965e18,-1.486753931036959e18,-1.486301066604721e18,-1.485848202172483e18,-1.4853953377402452e18,-1.4849424733080072e18,-1.4844896088757696e18,-1.4840367444435315e18,-1.4835838800112937e18,-1.4831310155790559e18,-1.4826781511468178e18,-1.48222528671458e18,-1.4817724222823421e18,-1.4813195578501043e18,-1.4808666934178665e18,-1.4804138289856284e18,-1.4799609645533906e18,-1.4795081001211528e18,-1.479055235688915e18,-1.478602371256677e18,-1.478149506824439e18,-1.4776966423922012e18,-1.4772437779599631e18,-1.4767909135277256e18,-1.4763380490954877e18,-1.4758851846632497e18,-1.4754323202310118e18,-1.4749794557987738e18,-1.4745265913665362e18,-1.4740737269342984e18,-1.4736208625020603e18,-1.4731679980698225e18,-1.4727151336375844e18,-1.4722622692053466e18,-1.471809404773109e18,-1.471356540340871e18,-1.470903675908633e18,-1.470450811476395e18,-1.4699979470441572e18,-1.4695450826119196e18,-1.4690922181796815e18,-1.4686393537474437e18,-1.4681864893152056e18,-1.4677336248829678e18,-1.46728076045073e18,-1.4668278960184922e18,-1.4663750315862543e18,-1.4659221671540163e18,-1.4654693027217784e18,-1.4650164382895406e18,-1.4645635738573028e18,-1.464110709425065e18,-1.463657844992827e18,-1.463204980560589e18,-1.4627521161283512e18,-1.4622992516961132e18,-1.4618463872638756e18,-1.4613935228316375e18,-1.4609406583993997e18,-1.4604877939671619e18,-1.4600349295349238e18,-1.4595820651026862e18,-1.459129200670448e18,-1.4586763362382103e18,-1.4582234718059725e18,-1.4577706073737344e18,-1.4573177429414966e18,-1.4568648785092588e18,-1.456412014077021e18,-1.455959149644783e18,-1.455506285212545e18,-1.4550534207803072e18,-1.4546005563480694e18,-1.4541476919158316e18,-1.4536948274835937e18,-1.4532419630513556e18,-1.4527890986191178e18,-1.4523362341868797e18,-1.4518833697546422e18,-1.4514305053224044e18,-1.4509776408901663e18,-1.4505247764579284e18,-1.4500719120256904e18,-1.4496190475934528e18,-1.449166183161215e18,-1.448713318728977e18,-1.448260454296739e18,-1.447807589864501e18,-1.4473547254322632e18,-1.4469018610000256e18,-1.4464489965677875e18,-1.4459961321355497e18,-1.4455432677033116e18,-1.4450904032710738e18,-1.4446375388388362e18,-1.4441846744065981e18,-1.4437318099743603e18,-1.4432789455421222e18,-1.4428260811098844e18,-1.4423732166776466e18,-1.4419203522454088e18,-1.441467487813171e18,-1.4410146233809329e18,-1.440561758948695e18,-1.4401088945164572e18,-1.4396560300842194e18,-1.4392031656519816e18,-1.4387503012197435e18,-1.4382974367875057e18,-1.4378445723552678e18,-1.4373917079230298e18,-1.4369388434907922e18,-1.436485979058554e18,-1.4360331146263163e18,-1.4355802501940785e18,-1.4351273857618404e18,-1.4346745213296028e18,-1.4342216568973647e18,-1.433768792465127e18,-1.433315928032889e18,-1.432863063600651e18,-1.4324101991684132e18,-1.4319573347361754e18,-1.4315044703039375e18,-1.4310516058716997e18,-1.4305987414394616e18,-1.4301458770072238e18,-1.429693012574986e18,-1.4292401481427482e18,-1.4287872837105103e18,-1.4283344192782723e18,-1.4278815548460344e18,-1.4274286904137964e18,-1.4269758259815588e18,-1.426522961549321e18,-1.426070097117083e18,-1.425617232684845e18,-1.425164368252607e18,-1.4247115038203694e18,-1.4242586393881316e18,-1.4238057749558935e18,-1.4233529105236557e18,-1.4229000460914176e18,-1.4224471816591798e18,-1.4219943172269422e18,-1.4215414527947041e18,-1.4210885883624663e18,-1.4206357239302282e18,-1.4201828594979904e18,-1.4197299950657528e18,-1.4192771306335148e18,-1.418824266201277e18,-1.4183714017690388e18,-1.417918537336801e18,-1.4174656729045632e18,-1.4170128084723254e18,-1.4165599440400876e18,-1.4161070796078497e18,-1.4156542151756116e18,-1.4152013507433738e18,-1.414748486311136e18,-1.4142956218788982e18,-1.4138427574466604e18,-1.4133898930144223e18,-1.4129370285821844e18,-1.4124841641499464e18,-1.4120312997177088e18,-1.411578435285471e18,-1.411125570853233e18,-1.410672706420995e18,-1.410219841988757e18,-1.4097669775565194e18,-1.4093141131242816e18,-1.4088612486920435e18,-1.4084083842598057e18,-1.4079555198275676e18,-1.4075026553953298e18,-1.4070497909630922e18,-1.4065969265308541e18,-1.4061440620986163e18,-1.4056911976663782e18,-1.4052383332341404e18,-1.4047854688019028e18,-1.4043326043696648e18,-1.403879739937427e18,-1.4034268755051889e18,-1.402974011072951e18,-1.4025211466407132e18,-1.4020682822084754e18,-1.4016154177762376e18,-1.4011625533439995e18,-1.4007096889117617e18,-1.4002568244795238e18,-1.399803960047286e18,-1.3993510956150482e18,-1.39889823118281e18,-1.3984453667505723e18,-1.3979925023183345e18,-1.3975396378860964e18,-1.3970867734538588e18,-1.3966339090216207e18,-1.396181044589383e18,-1.395728180157145e18,-1.395275315724907e18,-1.3948224512926694e18,-1.3943695868604314e18,-1.3939167224281935e18,-1.3934638579959557e18,-1.3930109935637176e18,-1.3925581291314798e18,-1.392105264699242e18,-1.3916524002670042e18,-1.3911995358347663e18,-1.3907466714025283e18,-1.3902938069702904e18,-1.3898409425380526e18,-1.3893880781058148e18,-1.388935213673577e18,-1.388482349241339e18,-1.388029484809101e18,-1.387576620376863e18,-1.3871237559446254e18,-1.3866708915123876e18,-1.3862180270801495e18,-1.3857651626479117e18,-1.3853122982156736e18,-1.384859433783436e18,-1.3844065693511982e18,-1.38395370491896e18,-1.3835008404867223e18,-1.3830479760544842e18,-1.3825951116222464e18,-1.3821422471900088e18,-1.3816893827577708e18,-1.381236518325533e18,-1.3807836538932948e18,-1.380330789461057e18,-1.3798779250288195e18,-1.3794250605965814e18,-1.3789721961643436e18,-1.3785193317321055e18,-1.3780664672998676e18,-1.3776136028676298e18,-1.377160738435392e18,-1.3767078740031542e18,-1.376255009570916e18,-1.3758021451386783e18,-1.3753492807064404e18,-1.3748964162742026e18,-1.3744435518419648e18,-1.3739906874097267e18,-1.373537822977489e18,-1.373084958545251e18,-1.372632094113013e18,-1.3721792296807754e18,-1.3717263652485373e18,-1.3712735008162995e18,-1.3708206363840617e18,-1.3703677719518236e18,-1.369914907519586e18,-1.369462043087348e18,-1.3690091786551101e18,-1.3685563142228723e18,-1.3681034497906342e18,-1.3676505853583964e18,-1.3671977209261586e18,-1.3667448564939208e18,-1.366291992061683e18,-1.3658391276294449e18,-1.365386263197207e18,-1.3649333987649692e18,-1.3644805343327314e18,-1.3640276699004936e18,-1.3635748054682555e18,-1.3631219410360177e18,-1.3626690766037796e18,-1.362216212171542e18,-1.3617633477393042e18,-1.361310483307066e18,-1.3608576188748283e18,-1.3604047544425902e18,-1.3599518900103526e18,-1.3594990255781148e18,-1.3590461611458767e18,-1.358593296713639e18,-1.3581404322814008e18,-1.357687567849163e18,-1.3572347034169254e18,-1.3567818389846874e18,-1.3563289745524495e18,-1.3558761101202115e18,-1.3554232456879736e18,-1.354970381255736e18,-1.354517516823498e18,-1.3540646523912602e18,-1.353611787959022e18,-1.3531589235267843e18,-1.3527060590945464e18,-1.3522531946623086e18,-1.3518003302300708e18,-1.3513474657978327e18,-1.350894601365595e18,-1.350441736933357e18,-1.3499888725011192e18,-1.3495360080688814e18,-1.3490831436366433e18,-1.3486302792044055e18,-1.3481774147721677e18,-1.3477245503399296e18,-1.347271685907692e18,-1.346818821475454e18,-1.3463659570432161e18,-1.3459130926109783e18,-1.3454602281787402e18,-1.3450073637465027e18,-1.3445544993142646e18,-1.3441016348820268e18,-1.343648770449789e18,-1.3431959060175508e18,-1.342743041585313e18,-1.3422901771530752e18,-1.3418373127208374e18,-1.3413844482885996e18,-1.3409315838563615e18,-1.3404787194241236e18,-1.3400258549918858e18,-1.339572990559648e18,-1.3391201261274102e18,-1.338667261695172e18,-1.3382143972629343e18,-1.3377615328306962e18,-1.3373086683984586e18,-1.3368558039662208e18,-1.3364029395339827e18,-1.335950075101745e18,-1.3354972106695068e18,-1.3350443462372692e18,-1.3345914818050314e18,-1.3341386173727933e18,-1.3336857529405555e18,-1.3332328885083174e18,-1.3327800240760796e18,-1.332327159643842e18,-1.331874295211604e18,-1.3314214307793661e18,-1.330968566347128e18,-1.3305157019148902e18,-1.3300628374826527e18,-1.3296099730504146e18,-1.3291571086181768e18,-1.328704244185939e18,-1.3282513797537009e18,-1.327798515321463e18,-1.3273456508892252e18,-1.3268927864569874e18,-1.3264399220247496e18,-1.3259870575925115e18,-1.3255341931602737e18,-1.3250813287280358e18,-1.324628464295798e18,-1.3241755998635602e18,-1.323722735431322e18,-1.3232698709990843e18,-1.3228170065668462e18,-1.3223641421346086e18,-1.3219112777023708e18,-1.3214584132701327e18,-1.321005548837895e18,-1.3205526844056568e18,-1.3200998199734193e18,-1.3196469555411814e18,-1.3191940911089434e18,-1.3187412266767055e18,-1.3182883622444675e18,-1.3178354978122296e18,-1.317382633379992e18,-1.316929768947754e18,-1.3164769045155162e18,-1.316024040083278e18,-1.3155711756510403e18,-1.3151183112188027e18,-1.3146654467865646e18,-1.3142125823543268e18,-1.3137597179220887e18,-1.313306853489851e18,-1.312853989057613e18,-1.3124011246253752e18,-1.3119482601931374e18,-1.3114953957608993e18,-1.3110425313286615e18,-1.3105896668964237e18,-1.3101368024641859e18,-1.309683938031948e18,-1.30923107359971e18,-1.308778209167472e18,-1.3083253447352343e18,-1.3078724803029962e18,-1.3074196158707587e18,-1.3069667514385206e18,-1.3065138870062828e18,-1.306061022574045e18,-1.3056081581418068e18,-1.3051552937095693e18,-1.3047024292773312e18,-1.3042495648450934e18,-1.3037967004128556e18,-1.3033438359806175e18,-1.3028909715483796e18,-1.3024381071161418e18,-1.301985242683904e18,-1.3015323782516662e18,-1.301079513819428e18,-1.3006266493871903e18,-1.3001737849549524e18,-1.2997209205227146e18,-1.2992680560904768e18,-1.2988151916582387e18,-1.298362327226001e18,-1.2979094627937628e18,-1.2974565983615252e18,-1.2970037339292874e18,-1.2965508694970493e18,-1.2960980050648115e18,-1.2956451406325734e18,-1.295192276200336e18,-1.294739411768098e18,-1.29428654733586e18,-1.2938336829036221e18,-1.293380818471384e18,-1.2929279540391462e18,-1.2924750896069087e18,-1.2920222251746706e18,-1.2915693607424328e18,-1.2911164963101947e18,-1.2906636318779569e18,-1.2902107674457193e18,-1.2897579030134812e18,-1.2893050385812434e18,-1.2888521741490053e18,-1.2883993097167675e18,-1.2879464452845297e18,-1.2874935808522918e18,-1.287040716420054e18,-1.286587851987816e18,-1.286134987555578e18,-1.2856821231233403e18,-1.2852292586911025e18,-1.2847763942588646e18,-1.2843235298266266e18,-1.2838706653943887e18,-1.283417800962151e18,-1.2829649365299128e18,-1.2825120720976753e18,-1.2820592076654372e18,-1.2816063432331994e18,-1.2811534788009615e18,-1.2807006143687235e18,-1.280247749936486e18,-1.2797948855042478e18,-1.27934202107201e18,-1.2788891566397722e18,-1.278436292207534e18,-1.2779834277752963e18,-1.2775305633430584e18,-1.2770776989108206e18,-1.2766248344785828e18,-1.2761719700463447e18,-1.275719105614107e18,-1.2752662411818688e18,-1.2748133767496312e18,-1.2743605123173934e18,-1.2739076478851553e18,-1.2734547834529175e18,-1.2730019190206794e18,-1.2725490545884419e18,-1.272096190156204e18,-1.271643325723966e18,-1.2711904612917281e18,-1.27073759685949e18,-1.2702847324272522e18,-1.2698318679950147e18,-1.2693790035627766e18,-1.2689261391305388e18,-1.2684732746983007e18,-1.2680204102660628e18,-1.2675675458338253e18,-1.2671146814015872e18,-1.2666618169693494e18,-1.2662089525371113e18,-1.2657560881048735e18,-1.2653032236726356e18,-1.2648503592403978e18,-1.26439749480816e18,-1.263944630375922e18,-1.263491765943684e18,-1.2630389015114463e18,-1.2625860370792084e18,-1.2621331726469706e18,-1.2616803082147325e18,-1.2612274437824947e18,-1.260774579350257e18,-1.2603217149180188e18,-1.2598688504857812e18,-1.2594159860535432e18,-1.2589631216213053e18,-1.2585102571890675e18,-1.2580573927568294e18,-1.2576045283245919e18,-1.2571516638923538e18,-1.256698799460116e18,-1.2562459350278781e18,-1.25579307059564e18,-1.2553402061634022e18,-1.2548873417311644e18,-1.2544344772989266e18,-1.2539816128666888e18,-1.2535287484344507e18,-1.2530758840022129e18,-1.252623019569975e18,-1.2521701551377372e18,-1.2517172907054994e18,-1.2512644262732613e18,-1.2508115618410235e18,-1.2503586974087854e18,-1.2499058329765478e18,-1.24945296854431e18,-1.249000104112072e18,-1.248547239679834e18,-1.248094375247596e18,-1.2476415108153585e18,-1.2471886463831206e18,-1.2467357819508826e18,-1.2462829175186447e18,-1.2458300530864067e18,-1.2453771886541688e18,-1.2449243242219313e18,-1.2444714597896932e18,-1.2440185953574554e18,-1.2435657309252173e18,-1.2431128664929795e18,-1.242660002060742e18,-1.2422071376285038e18,-1.241754273196266e18,-1.2413014087640282e18,-1.24084854433179e18,-1.2403956798995523e18,-1.2399428154673144e18,-1.2394899510350766e18,-1.2390370866028388e18,-1.2385842221706007e18,-1.238131357738363e18,-1.237678493306125e18,-1.2372256288738872e18,-1.2367727644416494e18,-1.2363199000094113e18,-1.2358670355771735e18,-1.2354141711449354e18,-1.2349613067126979e18,-1.23450844228046e18,-1.234055577848222e18,-1.233602713415984e18,-1.233149848983746e18,-1.2326969845515085e18,-1.2322441201192707e18,-1.2317912556870326e18,-1.2313383912547948e18,-1.2308855268225567e18,-1.2304326623903188e18,-1.2299797979580813e18,-1.2295269335258432e18,-1.2290740690936054e18,-1.2286212046613673e18,-1.2281683402291295e18,-1.227715475796892e18,-1.2272626113646538e18,-1.226809746932416e18,-1.226356882500178e18,-1.22590401806794e18,-1.2254511536357023e18,-1.2249982892034644e18,-1.2245454247712266e18,-1.2240925603389885e18,-1.2236396959067507e18,-1.223186831474513e18,-1.222733967042275e18,-1.2222811026100372e18,-1.2218282381777992e18,-1.2213753737455613e18,-1.2209225093133235e18,-1.2204696448810854e18,-1.220016780448848e18,-1.2195639160166098e18,-1.219111051584372e18,-1.2186581871521341e18,-1.218205322719896e18,-1.2177524582876585e18,-1.2172995938554204e18,-1.2168467294231826e18,-1.2163938649909448e18,-1.2159410005587067e18,-1.2154881361264689e18,-1.215035271694231e18,-1.2145824072619932e18,-1.2141295428297554e18,-1.2136766783975173e18,-1.2132238139652795e18,-1.2127709495330417e18,-1.2123180851008038e18,-1.211865220668566e18,-1.211412356236328e18,-1.21095949180409e18,-1.210506627371852e18,-1.2100537629396145e18,-1.2096008985073766e18,-1.2091480340751386e18,-1.2086951696429007e18,-1.2082423052106627e18,-1.207789440778425e18,-1.2073365763461873e18,-1.2068837119139492e18,-1.2064308474817114e18,-1.2059779830494733e18,-1.2055251186172355e18,-1.205072254184998e18,-1.2046193897527598e18,-1.204166525320522e18,-1.203713660888284e18,-1.203260796456046e18,-1.2028079320238085e18,-1.2023550675915704e18,-1.2019022031593326e18,-1.2014493387270945e18,-1.2009964742948567e18,-1.200543609862619e18,-1.200090745430381e18,-1.1996378809981432e18,-1.1991850165659052e18,-1.1987321521336673e18,-1.1982792877014295e18,-1.1978264232691917e18,-1.1973735588369539e18,-1.1969206944047158e18,-1.196467829972478e18,-1.1960149655402401e18,-1.195562101108002e18,-1.1951092366757645e18,-1.1946563722435264e18,-1.1942035078112886e18,-1.1937506433790508e18,-1.1932977789468127e18,-1.192844914514575e18,-1.192392050082337e18,-1.1919391856500992e18,-1.1914863212178614e18,-1.1910334567856233e18,-1.1905805923533855e18,-1.1901277279211476e18,-1.1896748634889098e18,-1.189221999056672e18,-1.188769134624434e18,-1.188316270192196e18,-1.1878634057599583e18,-1.1874105413277204e18,-1.1869576768954826e18,-1.1865048124632445e18,-1.1860519480310067e18,-1.1855990835987686e18,-1.185146219166531e18,-1.1846933547342932e18,-1.1842404903020552e18,-1.1837876258698173e18,-1.1833347614375793e18,-1.1828818970053417e18,-1.1824290325731039e18,-1.1819761681408658e18,-1.181523303708628e18,-1.18107043927639e18,-1.1806175748441523e18,-1.1801647104119142e18,-1.1797118459796764e18,-1.1792589815474386e18,-1.1788061171152005e18,-1.178353252682963e18,-1.1779003882507249e18,-1.177447523818487e18,-1.1769946593862492e18,-1.1765417949540111e18,-1.1760889305217736e18,-1.1756360660895355e18,-1.1751832016572977e18,-1.1747303372250598e18,-1.1742774727928218e18,-1.173824608360584e18,-1.173371743928346e18,-1.1729188794961083e18,-1.1724660150638702e18,-1.1720131506316324e18,-1.1715602861993946e18,-1.1711074217671567e18,-1.170654557334919e18,-1.1702016929026808e18,-1.169748828470443e18,-1.1692959640382052e18,-1.1688430996059674e18,-1.1683902351737295e18,-1.1679373707414915e18,-1.1674845063092536e18,-1.1670316418770158e18,-1.166578777444778e18,-1.1661259130125402e18,-1.165673048580302e18,-1.1652201841480643e18,-1.1647673197158264e18,-1.1643144552835886e18,-1.1638615908513505e18,-1.1634087264191127e18,-1.162955861986875e18,-1.162502997554637e18,-1.1620501331223992e18,-1.1615972686901612e18,-1.1611444042579233e18,-1.1606915398256855e18,-1.1602386753934477e18,-1.1597858109612099e18,-1.1593329465289718e18,-1.158880082096734e18,-1.158427217664496e18,-1.1579743532322583e18,-1.1575214888000202e18,-1.1570686243677824e18,-1.1566157599355446e18,-1.1561628955033068e18,-1.155710031071069e18,-1.1552571666388308e18,-1.154804302206593e18,-1.1543514377743552e18,-1.1538985733421174e18,-1.1534457089098796e18,-1.1529928444776415e18,-1.1525399800454036e18,-1.1520871156131658e18,-1.1516342511809279e18,-1.15118138674869e18,-1.1507285223164521e18,-1.1502756578842143e18,-1.1498227934519764e18,-1.1493699290197385e18,-1.1489170645875005e18,-1.1484642001552627e18,-1.1480113357230249e18,-1.147558471290787e18,-1.1471056068585491e18,-1.1466527424263112e18,-1.1461998779940733e18,-1.1457470135618355e18,-1.1452941491295976e18,-1.1448412846973597e18,-1.1443884202651218e18,-1.1439355558328838e18,-1.1434826914006461e18,-1.1430298269684082e18,-1.1425769625361702e18,-1.1421240981039324e18,-1.1416712336716945e18,-1.1412183692394568e18,-1.1407655048072188e18,-1.1403126403749809e18,-1.139859775942743e18,-1.1394069115105051e18,-1.1389540470782673e18,-1.1385011826460294e18,-1.1380483182137915e18,-1.1375954537815535e18,-1.1371425893493158e18,-1.1366897249170779e18,-1.1362368604848401e18,-1.1357839960526021e18,-1.1353311316203642e18,-1.1348782671881265e18,-1.1344254027558885e18,-1.1339725383236506e18,-1.1335196738914127e18,-1.1330668094591748e18,-1.132613945026937e18,-1.1321610805946991e18,-1.1317082161624612e18,-1.1312553517302234e18,-1.1308024872979854e18,-1.1303496228657476e18,-1.1298967584335098e18,-1.1294438940012718e18,-1.1289910295690339e18,-1.128538165136796e18,-1.1280853007045582e18,-1.1276324362723203e18,-1.1271795718400824e18,-1.1267267074078445e18,-1.1262738429756067e18,-1.1258209785433688e18,-1.1253681141111309e18,-1.124915249678893e18,-1.1244623852466551e18,-1.1240095208144172e18,-1.1235566563821795e18,-1.1231037919499415e18,-1.1226509275177036e18,-1.1221980630854657e18,-1.1217451986532278e18,-1.1212923342209901e18,-1.1208394697887521e18,-1.1203866053565142e18,-1.1199337409242764e18,-1.1194808764920384e18,-1.1190280120598006e18,-1.1185751476275628e18,-1.1181222831953248e18,-1.1176694187630868e18,-1.117216554330849e18,-1.1167636898986112e18,-1.1163108254663734e18,-1.1158579610341354e18,-1.1154050966018975e18,-1.1149522321696596e18,-1.1144993677374218e18,-1.1140465033051839e18,-1.113593638872946e18,-1.1131407744407081e18,-1.1126879100084701e18,-1.1122350455762324e18,-1.1117821811439945e18,-1.1113293167117567e18,-1.1108764522795187e18,-1.1104235878472808e18,-1.1099707234150431e18,-1.1095178589828051e18,-1.1090649945505672e18,-1.1086121301183293e18,-1.1081592656860914e18,-1.1077064012538536e18,-1.1072535368216157e18,-1.1068006723893778e18,-1.10634780795714e18,-1.105894943524902e18,-1.1054420790926642e18,-1.1049892146604264e18,-1.1045363502281884e18,-1.1040834857959505e18,-1.1036306213637126e18,-1.1031777569314748e18,-1.1027248924992369e18,-1.102272028066999e18,-1.1018191636347611e18,-1.1013662992025231e18,-1.1009134347702854e18,-1.1004605703380475e18,-1.1000077059058097e18,-1.0995548414735717e18,-1.0991019770413338e18,-1.0986491126090961e18,-1.0981962481768581e18,-1.0977433837446202e18,-1.0972905193123823e18,-1.0968376548801444e18,-1.0963847904479066e18,-1.0959319260156687e18,-1.0954790615834308e18,-1.095026197151193e18,-1.0945733327189551e18,-1.0941204682867172e18,-1.0936676038544794e18,-1.0932147394222414e18,-1.0927618749900035e18,-1.0923090105577658e18,-1.0918561461255278e18,-1.0914032816932899e18,-1.090950417261052e18,-1.0904975528288141e18,-1.0900446883965764e18,-1.0895918239643384e18,-1.0891389595321005e18,-1.0886860950998627e18,-1.0882332306676247e18,-1.0877803662353869e18,-1.087327501803149e18,-1.0868746373709111e18,-1.0864217729386732e18,-1.0859689085064353e18,-1.0855160440741975e18,-1.0850631796419597e18,-1.0846103152097217e18,-1.0841574507774838e18,-1.083704586345246e18,-1.0832517219130081e18,-1.0827988574807702e18,-1.0823459930485324e18,-1.0818931286162944e18,-1.0814402641840564e18,-1.0809873997518188e18,-1.0805345353195808e18,-1.080081670887343e18,-1.079628806455105e18,-1.0791759420228671e18,-1.0787230775906294e18,-1.0782702131583914e18,-1.0778173487261535e18,-1.0773644842939156e18,-1.0769116198616777e18,-1.0764587554294399e18,-1.076005890997202e18,-1.0755530265649641e18,-1.0751001621327263e18,-1.0746472977004883e18,-1.0741944332682505e18,-1.0737415688360127e18,-1.0732887044037747e18,-1.0728358399715368e18,-1.072382975539299e18,-1.0719301111070611e18,-1.0714772466748232e18,-1.0710243822425853e18,-1.0705715178103474e18,-1.0701186533781096e18,-1.0696657889458717e18,-1.0692129245136338e18,-1.068760060081396e18,-1.068307195649158e18,-1.06785433121692e18,-1.0674014667846824e18,-1.0669486023524444e18,-1.0664957379202065e18,-1.0660428734879686e18,-1.0655900090557307e18,-1.065137144623493e18,-1.064684280191255e18,-1.0642314157590171e18,-1.0637785513267793e18,-1.0633256868945413e18,-1.0628728224623035e18,-1.0624199580300657e18,-1.0619670935978277e18,-1.0615142291655898e18,-1.061061364733352e18,-1.0606085003011141e18,-1.0601556358688763e18,-1.0597027714366383e18,-1.0592499070044004e18,-1.0587970425721626e18,-1.0583441781399247e18,-1.0578913137076868e18,-1.057438449275449e18,-1.056985584843211e18,-1.056532720410973e18,-1.0560798559787354e18,-1.0556269915464974e18,-1.0551741271142596e18,-1.0547212626820216e18,-1.0542683982497837e18,-1.053815533817546e18,-1.053362669385308e18,-1.0529098049530701e18,-1.0524569405208323e18,-1.0520040760885943e18,-1.0515512116563565e18,-1.0510983472241187e18,-1.0506454827918807e18,-1.0501926183596429e18,-1.049739753927405e18,-1.0492868894951671e18,-1.0488340250629293e18,-1.0483811606306913e18,-1.0479282961984534e18,-1.0474754317662157e18,-1.0470225673339777e18,-1.0465697029017398e18,-1.046116838469502e18,-1.045663974037264e18,-1.0452111096050263e18,-1.0447582451727884e18,-1.0443053807405504e18,-1.0438525163083126e18,-1.0433996518760746e18,-1.0429467874438368e18,-1.042493923011599e18,-1.042041058579361e18,-1.0415881941471231e18,-1.0411353297148852e18,-1.0406824652826474e18,-1.0402296008504096e18,-1.0397767364181716e18,-1.0393238719859337e18,-1.0388710075536959e18,-1.038418143121458e18,-1.0379652786892201e18,-1.0375124142569823e18,-1.0370595498247443e18,-1.0366066853925064e18,-1.0361538209602687e18,-1.0357009565280307e18,-1.0352480920957929e18,-1.034795227663555e18,-1.034342363231317e18,-1.0338894987990793e18,-1.0334366343668413e18,-1.0329837699346034e18,-1.0325309055023656e18,-1.0320780410701276e18,-1.0316251766378898e18,-1.031172312205652e18,-1.030719447773414e18,-1.0302665833411762e18,-1.0298137189089382e18,-1.0293608544767004e18,-1.0289079900444626e18,-1.0284551256122246e18,-1.0280022611799867e18,-1.0275493967477489e18,-1.027096532315511e18,-1.0266436678832731e18,-1.0261908034510353e18,-1.0257379390187973e18,-1.0252850745865595e18,-1.0248322101543217e18,-1.0243793457220837e18,-1.0239264812898459e18,-1.023473616857608e18,-1.02302075242537e18,-1.0225678879931323e18,-1.0221150235608943e18,-1.0216621591286564e18,-1.0212092946964186e18,-1.0207564302641806e18,-1.0203035658319429e18,-1.019850701399705e18,-1.019397836967467e18,-1.0189449725352292e18,-1.0184921081029912e18,-1.0180392436707534e18,-1.0175863792385156e18,-1.0171335148062776e18,-1.0166806503740397e18,-1.0162277859418019e18,-1.015774921509564e18,-1.0153220570773262e18,-1.0148691926450883e18,-1.0144163282128503e18,-1.0139634637806125e18,-1.0135105993483747e18,-1.0130577349161367e18,-1.0126048704838989e18,-1.0121520060516609e18,-1.011699141619423e18,-1.0112462771871853e18,-1.0107934127549473e18,-1.0103405483227095e18,-1.0098876838904716e18,-1.0094348194582336e18,-1.0089819550259959e18,-1.008529090593758e18,-1.00807622616152e18,-1.0076233617292822e18,-1.0071704972970444e18,-1.0067176328648064e18,-1.0062647684325686e18,-1.0058119040003306e18,-1.0053590395680928e18,-1.004906175135855e18,-1.004453310703617e18,-1.0040004462713792e18,-1.0035475818391412e18,-1.0030947174069033e18,-1.0026418529746656e18,-1.0021889885424276e18,-1.0017361241101897e18,-1.0012832596779519e18,-1.0008303952457139e18,-1.0003775308134762e18,-9.999246663812383e17,-9.994718019490003e17,-9.990189375167625e17,-9.985660730845245e17,-9.981132086522867e17,-9.976603442200489e17,-9.97207479787811e17,-9.96754615355573e17,-9.963017509233352e17,-9.958488864910973e17,-9.953960220588595e17,-9.949431576266216e17,-9.944902931943836e17,-9.940374287621458e17,-9.93584564329908e17,-9.9313169989767e17,-9.926788354654322e17,-9.922259710331942e17,-9.917731066009563e17,-9.913202421687186e17,-9.908673777364806e17,-9.904145133042428e17,-9.899616488720049e17,-9.895087844397669e17,-9.890559200075292e17,-9.886030555752913e17,-9.881501911430533e17,-9.876973267108155e17,-9.872444622785775e17,-9.867915978463397e17,-9.863387334141019e17,-9.85885868981864e17,-9.854330045496261e17,-9.849801401173882e17,-9.845272756851503e17,-9.840744112529125e17,-9.836215468206746e17,-9.831686823884366e17,-9.827158179561988e17,-9.82262953523961e17,-9.81810089091723e17,-9.813572246594852e17,-9.809043602272472e17,-9.804514957950093e17,-9.799986313627716e17,-9.795457669305336e17,-9.790929024982958e17,-9.786400380660579e17,-9.781871736338199e17,-9.777343092015822e17,-9.772814447693443e17,-9.768285803371063e17,-9.763757159048685e17,-9.759228514726305e17,-9.754699870403927e17,-9.750171226081549e17,-9.745642581759169e17,-9.741113937436791e17,-9.736585293114412e17,-9.732056648792033e17,-9.727528004469655e17,-9.722999360147276e17,-9.718470715824896e17,-9.713942071502518e17,-9.70941342718014e17,-9.70488478285776e17,-9.700356138535382e17,-9.695827494213002e17,-9.691298849890624e17,-9.686770205568246e17,-9.682241561245866e17,-9.677712916923488e17,-9.673184272601108e17,-9.668655628278729e17,-9.664126983956352e17,-9.659598339633972e17,-9.655069695311593e17,-9.650541050989215e17,-9.646012406666836e17,-9.641483762344458e17,-9.636955118022079e17,-9.632426473699699e17,-9.627897829377321e17,-9.623369185054943e17,-9.618840540732563e17,-9.614311896410185e17,-9.609783252087805e17,-9.605254607765426e17,-9.600725963443049e17,-9.59619731912067e17,-9.591668674798291e17,-9.587140030475912e17,-9.582611386153532e17,-9.578082741831155e17,-9.573554097508776e17,-9.569025453186396e17,-9.564496808864018e17,-9.559968164541638e17,-9.55543952021926e17,-9.550910875896882e17,-9.546382231574502e17,-9.541853587252124e17,-9.537324942929745e17,-9.532796298607366e17,-9.528267654284988e17,-9.523739009962609e17,-9.519210365640229e17,-9.514681721317851e17,-9.510153076995473e17,-9.505624432673093e17,-9.501095788350715e17,-9.496567144028335e17,-9.492038499705957e17,-9.487509855383579e17,-9.4829812110612e17,-9.478452566738821e17,-9.473923922416442e17,-9.469395278094062e17,-9.464866633771685e17,-9.460337989449306e17,-9.455809345126926e17,-9.451280700804548e17,-9.446752056482168e17,-9.442223412159791e17,-9.437694767837412e17,-9.433166123515032e17,-9.428637479192654e17,-9.424108834870275e17,-9.419580190547896e17,-9.415051546225518e17,-9.410522901903139e17,-9.405994257580759e17,-9.401465613258381e17,-9.396936968936003e17,-9.392408324613624e17,-9.387879680291245e17,-9.383351035968865e17,-9.378822391646487e17,-9.374293747324109e17,-9.369765103001729e17,-9.365236458679351e17,-9.360707814356972e17,-9.356179170034592e17,-9.351650525712215e17,-9.347121881389836e17,-9.342593237067457e17,-9.338064592745078e17,-9.333535948422698e17,-9.329007304100321e17,-9.324478659777942e17,-9.319950015455562e17,-9.315421371133184e17,-9.310892726810804e17,-9.306364082488426e17,-9.301835438166048e17,-9.297306793843668e17,-9.29277814952129e17,-9.288249505198911e17,-9.283720860876532e17,-9.279192216554154e17,-9.274663572231775e17,-9.270134927909395e17,-9.265606283587017e17,-9.261077639264639e17,-9.256548994942259e17,-9.252020350619881e17,-9.247491706297501e17,-9.242963061975124e17,-9.238434417652745e17,-9.233905773330365e17,-9.229377129007987e17,-9.224848484685608e17,-9.220319840363228e17,-9.215791196040851e17,-9.211262551718472e17,-9.206733907396092e17,-9.202205263073714e17,-9.197676618751336e17,-9.193147974428957e17,-9.188619330106578e17,-9.184090685784198e17,-9.17956204146182e17,-9.175033397139442e17,-9.170504752817062e17,-9.165976108494684e17,-9.161447464172305e17,-9.156918819849925e17,-9.152390175527548e17,-9.147861531205169e17,-9.14333288688279e17,-9.138804242560411e17,-9.134275598238031e17,-9.129746953915654e17,-9.125218309593275e17,-9.120689665270895e17,-9.116161020948517e17,-9.111632376626138e17,-9.10710373230376e17,-9.102575087981381e17,-9.098046443659002e17,-9.093517799336623e17,-9.088989155014244e17,-9.084460510691866e17,-9.079931866369487e17,-9.075403222047108e17,-9.070874577724728e17,-9.06634593340235e17,-9.061817289079972e17,-9.057288644757592e17,-9.052760000435214e17,-9.048231356112835e17,-9.043702711790456e17,-9.039174067468078e17,-9.034645423145699e17,-9.03011677882332e17,-9.025588134500941e17,-9.021059490178561e17,-9.016530845856184e17,-9.012002201533805e17,-9.007473557211425e17,-9.002944912889047e17,-8.998416268566668e17,-8.99388762424429e17,-8.989358979921911e17,-8.984830335599532e17,-8.980301691277153e17,-8.975773046954774e17,-8.971244402632396e17,-8.966715758310017e17,-8.962187113987638e17,-8.957658469665258e17,-8.95312982534288e17,-8.948601181020502e17,-8.944072536698124e17,-8.939543892375744e17,-8.935015248053364e17,-8.930486603730986e17,-8.925957959408608e17,-8.921429315086228e17,-8.91690067076385e17,-8.912372026441471e17,-8.907843382119091e17,-8.903314737796714e17,-8.898786093474335e17,-8.894257449151956e17,-8.889728804829577e17,-8.885200160507197e17,-8.88067151618482e17,-8.876142871862441e17,-8.871614227540061e17,-8.867085583217683e17,-8.862556938895304e17,-8.858028294572925e17,-8.853499650250547e17,-8.848971005928168e17,-8.84444236160579e17,-8.83991371728341e17,-8.835385072961032e17,-8.830856428638653e17,-8.826327784316274e17,-8.821799139993894e17,-8.817270495671516e17,-8.812741851349138e17,-8.808213207026758e17,-8.80368456270438e17,-8.799155918382e17,-8.794627274059624e17,-8.790098629737244e17,-8.785569985414865e17,-8.781041341092486e17,-8.776512696770107e17,-8.771984052447729e17,-8.76745540812535e17,-8.762926763802971e17,-8.758398119480591e17,-8.753869475158213e17,-8.749340830835835e17,-8.744812186513457e17,-8.740283542191077e17,-8.735754897868698e17,-8.73122625354632e17,-8.726697609223941e17,-8.722168964901562e17,-8.717640320579183e17,-8.713111676256804e17,-8.708583031934424e17,-8.704054387612047e17,-8.699525743289668e17,-8.694997098967288e17,-8.69046845464491e17,-8.68593981032253e17,-8.681411166000154e17,-8.676882521677774e17,-8.672353877355395e17,-8.667825233033016e17,-8.663296588710637e17,-8.658767944388259e17,-8.65423930006588e17,-8.649710655743501e17,-8.645182011421121e17,-8.640653367098743e17,-8.636124722776365e17,-8.631596078453987e17,-8.627067434131607e17,-8.622538789809228e17,-8.618010145486849e17,-8.613481501164471e17,-8.608952856842092e17,-8.604424212519713e17,-8.599895568197334e17,-8.595366923874954e17,-8.590838279552577e17,-8.586309635230198e17,-8.58178099090782e17,-8.57725234658544e17,-8.57272370226306e17,-8.568195057940684e17,-8.563666413618304e17,-8.559137769295924e17,-8.554609124973546e17,-8.550080480651167e17,-8.545551836328788e17,-8.54102319200641e17,-8.536494547684031e17,-8.531965903361652e17,-8.527437259039273e17,-8.522908614716895e17,-8.518379970394516e17,-8.513851326072137e17,-8.509322681749757e17,-8.504794037427379e17,-8.500265393105001e17,-8.495736748782621e17,-8.491208104460243e17,-8.486679460137864e17,-8.482150815815485e17,-8.477622171493107e17,-8.473093527170728e17,-8.46856488284835e17,-8.46403623852597e17,-8.45950759420359e17,-8.454978949881213e17,-8.450450305558834e17,-8.445921661236454e17,-8.441393016914076e17,-8.436864372591697e17,-8.43233572826932e17,-8.42780708394694e17,-8.42327843962456e17,-8.418749795302182e17,-8.414221150979803e17,-8.409692506657425e17,-8.405163862335046e17,-8.400635218012667e17,-8.396106573690287e17,-8.391577929367909e17,-8.387049285045531e17,-8.382520640723153e17,-8.377991996400773e17,-8.373463352078394e17,-8.368934707756017e17,-8.364406063433637e17,-8.359877419111258e17,-8.35534877478888e17,-8.3508201304665e17,-8.34629148614412e17,-8.341762841821743e17,-8.337234197499364e17,-8.332705553176986e17,-8.328176908854606e17,-8.323648264532228e17,-8.31911962020985e17,-8.31459097588747e17,-8.31006233156509e17,-8.305533687242712e17,-8.301005042920334e17,-8.296476398597955e17,-8.291947754275576e17,-8.287419109953197e17,-8.282890465630819e17,-8.27836182130844e17,-8.273833176986061e17,-8.269304532663683e17,-8.264775888341303e17,-8.260247244018924e17,-8.255718599696547e17,-8.251189955374167e17,-8.246661311051788e17,-8.242132666729409e17,-8.23760402240703e17,-8.233075378084653e17,-8.228546733762273e17,-8.224018089439894e17,-8.219489445117516e17,-8.214960800795136e17,-8.210432156472758e17,-8.20590351215038e17,-8.201374867828e17,-8.19684622350562e17,-8.192317579183242e17,-8.187788934860864e17,-8.183260290538486e17,-8.178731646216106e17,-8.174203001893727e17,-8.169674357571348e17,-8.16514571324897e17,-8.160617068926591e17,-8.156088424604212e17,-8.151559780281833e17,-8.147031135959453e17,-8.142502491637076e17,-8.137973847314697e17,-8.133445202992319e17,-8.128916558669939e17,-8.12438791434756e17,-8.119859270025183e17,-8.115330625702803e17,-8.110801981380424e17,-8.106273337058045e17,-8.101744692735666e17,-8.097216048413288e17,-8.09268740409091e17,-8.08815875976853e17,-8.083630115446152e17,-8.079101471123772e17,-8.074572826801394e17,-8.070044182479016e17,-8.065515538156636e17,-8.060986893834257e17,-8.056458249511878e17,-8.0519296051895e17,-8.04740096086712e17,-8.042872316544742e17,-8.038343672222363e17,-8.033815027899985e17,-8.029286383577606e17,-8.024757739255227e17,-8.020229094932849e17,-8.015700450610469e17,-8.01117180628809e17,-8.006643161965713e17,-8.002114517643333e17,-7.997585873320954e17,-7.993057228998575e17,-7.988528584676196e17,-7.983999940353819e17,-7.97947129603144e17,-7.97494265170906e17,-7.970414007386682e17,-7.965885363064302e17,-7.961356718741924e17,-7.956828074419546e17,-7.952299430097166e17,-7.947770785774787e17,-7.94324214145241e17,-7.93871349713003e17,-7.934184852807652e17,-7.929656208485272e17,-7.925127564162893e17,-7.920598919840516e17,-7.916070275518136e17,-7.911541631195757e17,-7.907012986873379e17,-7.902484342550999e17,-7.897955698228621e17,-7.893427053906243e17,-7.888898409583863e17,-7.884369765261485e17,-7.879841120939105e17,-7.875312476616727e17,-7.870783832294349e17,-7.866255187971969e17,-7.86172654364959e17,-7.857197899327212e17,-7.852669255004833e17,-7.848140610682454e17,-7.843611966360076e17,-7.839083322037696e17,-7.834554677715318e17,-7.83002603339294e17,-7.82549738907056e17,-7.820968744748182e17,-7.816440100425802e17,-7.811911456103423e17,-7.807382811781046e17,-7.802854167458666e17,-7.798325523136287e17,-7.793796878813908e17,-7.789268234491529e17,-7.784739590169152e17,-7.780210945846772e17,-7.775682301524393e17,-7.771153657202015e17,-7.766625012879635e17,-7.762096368557257e17,-7.757567724234879e17,-7.753039079912499e17,-7.74851043559012e17,-7.743981791267741e17,-7.739453146945363e17,-7.734924502622985e17,-7.730395858300605e17,-7.725867213978226e17,-7.721338569655848e17,-7.71680992533347e17,-7.71228128101109e17,-7.707752636688712e17,-7.703223992366332e17,-7.698695348043953e17,-7.694166703721576e17,-7.689638059399196e17,-7.685109415076818e17,-7.680580770754438e17,-7.676052126432059e17,-7.671523482109682e17,-7.666994837787302e17,-7.662466193464923e17,-7.657937549142545e17,-7.653408904820165e17,-7.648880260497787e17,-7.644351616175409e17,-7.639822971853029e17,-7.635294327530651e17,-7.630765683208271e17,-7.626237038885893e17,-7.621708394563515e17,-7.617179750241135e17,-7.612651105918756e17,-7.608122461596378e17,-7.603593817274e17,-7.59906517295162e17,-7.594536528629242e17,-7.590007884306862e17,-7.585479239984484e17,-7.580950595662106e17,-7.576421951339726e17,-7.571893307017348e17,-7.567364662694968e17,-7.562836018372589e17,-7.558307374050212e17,-7.553778729727832e17,-7.549250085405453e17,-7.544721441083075e17,-7.540192796760695e17,-7.535664152438318e17,-7.531135508115939e17,-7.526606863793559e17,-7.522078219471181e17,-7.517549575148801e17,-7.513020930826423e17,-7.508492286504045e17,-7.503963642181665e17,-7.499434997859286e17,-7.494906353536909e17,-7.490377709214529e17,-7.48584906489215e17,-7.481320420569772e17,-7.476791776247392e17,-7.472263131925015e17,-7.467734487602636e17,-7.463205843280256e17,-7.458677198957878e17,-7.454148554635498e17,-7.44961991031312e17,-7.445091265990742e17,-7.440562621668362e17,-7.436033977345983e17,-7.431505333023604e17,-7.426976688701226e17,-7.422448044378848e17,-7.417919400056468e17,-7.413390755734089e17,-7.408862111411711e17,-7.404333467089332e17,-7.399804822766953e17,-7.395276178444575e17,-7.390747534122195e17,-7.386218889799816e17,-7.381690245477439e17,-7.377161601155059e17,-7.372632956832681e17,-7.368104312510301e17,-7.363575668187922e17,-7.359047023865545e17,-7.354518379543165e17,-7.349989735220786e17,-7.345461090898408e17,-7.340932446576028e17,-7.33640380225365e17,-7.331875157931272e17,-7.327346513608892e17,-7.322817869286514e17,-7.318289224964134e17,-7.313760580641756e17,-7.309231936319378e17,-7.304703291996998e17,-7.300174647674619e17,-7.29564600335224e17,-7.291117359029862e17,-7.286588714707483e17,-7.282060070385105e17,-7.277531426062725e17,-7.273002781740347e17,-7.268474137417969e17,-7.263945493095589e17,-7.259416848773211e17,-7.254888204450831e17,-7.250359560128452e17,-7.245830915806075e17,-7.241302271483695e17,-7.236773627161316e17,-7.232244982838938e17,-7.227716338516558e17,-7.223187694194181e17,-7.218659049871802e17,-7.214130405549422e17,-7.209601761227044e17,-7.205073116904664e17,-7.200544472582286e17,-7.196015828259908e17,-7.191487183937528e17,-7.186958539615149e17,-7.18242989529277e17,-7.177901250970392e17,-7.173372606648014e17,-7.168843962325635e17,-7.164315318003255e17,-7.159786673680877e17,-7.155258029358499e17,-7.150729385036119e17,-7.146200740713741e17,-7.141672096391361e17,-7.137143452068982e17,-7.132614807746605e17,-7.128086163424225e17,-7.123557519101847e17,-7.119028874779468e17,-7.114500230457088e17,-7.109971586134711e17,-7.105442941812332e17,-7.100914297489952e17,-7.096385653167574e17,-7.091857008845194e17,-7.087328364522816e17,-7.082799720200438e17,-7.078271075878058e17,-7.07374243155568e17,-7.069213787233302e17,-7.064685142910922e17,-7.060156498588544e17,-7.055627854266164e17,-7.051099209943785e17,-7.046570565621408e17,-7.042041921299028e17,-7.037513276976649e17,-7.032984632654271e17,-7.028455988331891e17,-7.023927344009514e17,-7.019398699687135e17,-7.014870055364755e17,-7.010341411042377e17,-7.005812766719997e17,-7.001284122397619e17,-6.996755478075241e17,-6.992226833752861e17,-6.987698189430482e17,-6.983169545108104e17,-6.978640900785725e17,-6.974112256463347e17,-6.969583612140968e17,-6.965054967818588e17,-6.96052632349621e17,-6.955997679173832e17,-6.951469034851452e17,-6.946940390529074e17,-6.942411746206694e17,-6.937883101884315e17,-6.933354457561938e17,-6.928825813239558e17,-6.92429716891718e17,-6.9197685245948e17,-6.915239880272421e17,-6.910711235950044e17,-6.906182591627665e17,-6.901653947305285e17,-6.897125302982907e17,-6.892596658660527e17,-6.888068014338149e17,-6.883539370015771e17,-6.879010725693391e17,-6.874482081371013e17,-6.869953437048634e17,-6.865424792726255e17,-6.860896148403877e17,-6.856367504081498e17,-6.851838859759118e17,-6.84731021543674e17,-6.842781571114362e17,-6.838252926791982e17,-6.833724282469604e17,-6.829195638147224e17,-6.824666993824846e17,-6.820138349502468e17,-6.815609705180088e17,-6.81108106085771e17,-6.80655241653533e17,-6.802023772212951e17,-6.797495127890574e17,-6.792966483568195e17,-6.788437839245815e17,-6.783909194923437e17,-6.779380550601057e17,-6.77485190627868e17,-6.770323261956301e17,-6.765794617633921e17,-6.761265973311543e17,-6.756737328989164e17,-6.752208684666785e17,-6.747680040344407e17,-6.743151396022028e17,-6.738622751699648e17,-6.73409410737727e17,-6.729565463054892e17,-6.725036818732513e17,-6.720508174410134e17,-6.715979530087754e17,-6.711450885765376e17,-6.706922241442998e17,-6.702393597120618e17,-6.69786495279824e17,-6.69333630847586e17,-6.688807664153481e17,-6.684279019831104e17,-6.679750375508724e17,-6.675221731186346e17,-6.670693086863967e17,-6.666164442541587e17,-6.66163579821921e17,-6.657107153896831e17,-6.652578509574451e17,-6.648049865252073e17,-6.643521220929695e17,-6.638992576607315e17,-6.634463932284937e17,-6.629935287962557e17,-6.625406643640179e17,-6.620877999317801e17,-6.616349354995421e17,-6.611820710673043e17,-6.607292066350664e17,-6.602763422028284e17,-6.598234777705907e17,-6.593706133383528e17,-6.589177489061148e17,-6.58464884473877e17,-6.58012020041639e17,-6.575591556094013e17,-6.571062911771634e17,-6.566534267449254e17,-6.562005623126876e17,-6.557476978804497e17,-6.552948334482118e17,-6.54841969015974e17,-6.54389104583736e17,-6.539362401514981e17,-6.534833757192603e17,-6.530305112870225e17,-6.525776468547846e17,-6.521247824225467e17,-6.516719179903087e17,-6.512190535580709e17,-6.507661891258331e17,-6.503133246935951e17,-6.498604602613573e17,-6.494075958291194e17,-6.489547313968814e17,-6.485018669646437e17,-6.480490025324058e17,-6.47596138100168e17,-6.4714327366793e17,-6.46690409235692e17,-6.462375448034543e17,-6.457846803712164e17,-6.453318159389784e17,-6.448789515067406e17,-6.444260870745027e17,-6.439732226422648e17,-6.43520358210027e17,-6.43067493777789e17,-6.426146293455512e17,-6.421617649133133e17,-6.417089004810755e17,-6.412560360488376e17,-6.408031716165997e17,-6.403503071843617e17,-6.398974427521239e17,-6.394445783198861e17,-6.389917138876481e17,-6.385388494554103e17,-6.380859850231724e17,-6.376331205909344e17,-6.371802561586967e17,-6.367273917264588e17,-6.362745272942209e17,-6.35821662861983e17,-6.35368798429745e17,-6.349159339975073e17,-6.344630695652694e17,-6.340102051330314e17,-6.335573407007936e17,-6.331044762685556e17,-6.326516118363178e17,-6.3219874740408e17,-6.31745882971842e17,-6.312930185396042e17,-6.308401541073663e17,-6.303872896751284e17,-6.299344252428906e17,-6.294815608106527e17,-6.290286963784147e17,-6.285758319461769e17,-6.281229675139391e17,-6.276701030817011e17,-6.272172386494633e17,-6.267643742172253e17,-6.263115097849875e17,-6.258586453527497e17,-6.254057809205117e17,-6.249529164882739e17,-6.24500052056036e17,-6.24047187623798e17,-6.235943231915603e17,-6.231414587593224e17,-6.226885943270844e17,-6.222357298948466e17,-6.217828654626086e17,-6.21330001030371e17,-6.20877136598133e17,-6.20424272165895e17,-6.199714077336572e17,-6.195185433014194e17,-6.190656788691814e17,-6.186128144369436e17,-6.181599500047057e17,-6.177070855724677e17,-6.1725422114023e17,-6.16801356707992e17,-6.163484922757542e17,-6.158956278435163e17,-6.154427634112783e17,-6.149898989790406e17,-6.145370345468027e17,-6.140841701145647e17,-6.136313056823269e17,-6.13178441250089e17,-6.127255768178511e17,-6.122727123856133e17,-6.118198479533754e17,-6.113669835211375e17,-6.109141190888996e17,-6.104612546566618e17,-6.10008390224424e17,-6.09555525792186e17,-6.09102661359948e17,-6.086497969277102e17,-6.081969324954724e17,-6.077440680632344e17,-6.072912036309966e17,-6.068383391987587e17,-6.063854747665208e17,-6.05932610334283e17,-6.05479745902045e17,-6.050268814698072e17,-6.045740170375693e17,-6.041211526053313e17,-6.036682881730936e17,-6.032154237408557e17,-6.027625593086177e17,-6.023096948763799e17,-6.01856830444142e17,-6.014039660119043e17,-6.009511015796663e17,-6.004982371474284e17,-6.000453727151905e17,-5.995925082829526e17,-5.991396438507148e17,-5.986867794184769e17,-5.98233914986239e17,-5.97781050554001e17,-5.973281861217632e17,-5.968753216895254e17,-5.964224572572876e17,-5.959695928250496e17,-5.955167283928116e17,-5.950638639605738e17,-5.94610999528336e17,-5.94158135096098e17,-5.937052706638602e17,-5.932524062316223e17,-5.927995417993843e17,-5.923466773671466e17,-5.918938129349087e17,-5.914409485026708e17,-5.909880840704329e17,-5.90535219638195e17,-5.900823552059571e17,-5.896294907737193e17,-5.891766263414815e17,-5.887237619092435e17,-5.882708974770056e17,-5.878180330447677e17,-5.873651686125299e17,-5.86912304180292e17,-5.864594397480541e17,-5.860065753158162e17,-5.855537108835784e17,-5.851008464513404e17,-5.846479820191026e17,-5.841951175868648e17,-5.837422531546268e17,-5.83289388722389e17,-5.82836524290151e17,-5.823836598579132e17,-5.819307954256753e17,-5.814779309934374e17,-5.810250665611996e17,-5.805722021289617e17,-5.801193376967238e17,-5.796664732644859e17,-5.79213608832248e17,-5.787607444000101e17,-5.783078799677723e17,-5.778550155355345e17,-5.774021511032965e17,-5.769492866710587e17,-5.764964222388207e17,-5.760435578065829e17,-5.75590693374345e17,-5.7513782894210714e17,-5.7468496450986925e17,-5.7423210007763136e17,-5.737792356453935e17,-5.733263712131556e17,-5.7287350678091776e17,-5.724206423486799e17,-5.719677779164419e17,-5.715149134842041e17,-5.710620490519662e17,-5.706091846197284e17,-5.701563201874904e17,-5.6970345575525254e17,-5.692505913230147e17,-5.6879772689077677e17,-5.6834486245853894e17,-5.6789199802630106e17,-5.674391335940632e17,-5.669862691618253e17,-5.665334047295874e17,-5.6608054029734957e17,-5.656276758651117e17,-5.651748114328738e17,-5.647219470006359e17,-5.64269082568398e17,-5.638162181361601e17,-5.6336335370392224e17,-5.629104892716844e17,-5.624576248394465e17,-5.620047604072086e17,-5.6155189597497075e17,-5.6109903154273286e17,-5.6064616711049504e17,-5.601933026782571e17,-5.597404382460192e17,-5.592875738137814e17,-5.588347093815434e17,-5.583818449493056e17,-5.579289805170677e17,-5.574761160848298e17,-5.5702325165259194e17,-5.5657038722035405e17,-5.561175227881162e17,-5.5566465835587834e17,-5.552117939236404e17,-5.5475892949140256e17,-5.543060650591647e17,-5.538532006269268e17,-5.534003361946889e17,-5.52947471762451e17,-5.524946073302132e17,-5.5204174289797523e17,-5.515888784657374e17,-5.511360140334995e17,-5.506831496012616e17,-5.5023028516902374e17,-5.4977742073678586e17,-5.4932455630454803e17,-5.488716918723101e17,-5.484188274400722e17,-5.479659630078344e17,-5.475130985755965e17,-5.470602341433586e17,-5.466073697111207e17,-5.461545052788829e17,-5.457016408466449e17,-5.4524877641440704e17,-5.447959119821692e17,-5.443430475499313e17,-5.4389018311769344e17,-5.4343731868545555e17,-5.4298445425321766e17,-5.4253158982097984e17,-5.420787253887419e17,-5.4162586095650406e17,-5.411729965242662e17,-5.407201320920282e17,-5.402672676597904e17,-5.398144032275525e17,-5.393615387953147e17,-5.3890867436307674e17,-5.3845580993083885e17,-5.38002945498601e17,-5.3755008106636314e17,-5.3709721663412525e17,-5.3664435220188736e17,-5.361914877696495e17,-5.357386233374116e17,-5.352857589051737e17,-5.348328944729359e17,-5.34380030040698e17,-5.3392716560846e17,-5.334743011762222e17,-5.330214367439843e17,-5.325685723117465e17,-5.3211570787950854e17,-5.3166284344727066e17,-5.312099790150328e17,-5.307571145827949e17,-5.3030425015055706e17,-5.2985138571831917e17,-5.293985212860813e17,-5.289456568538434e17,-5.284927924216055e17,-5.280399279893677e17,-5.275870635571298e17,-5.2713419912489184e17,-5.26681334692654e17,-5.262284702604161e17,-5.2577560582817824e17,-5.2532274139594035e17,-5.248698769637025e17,-5.2441701253146464e17,-5.239641480992267e17,-5.2351128366698886e17,-5.23058419234751e17,-5.2260555480251315e17,-5.221526903702752e17,-5.216998259380373e17,-5.212469615057995e17,-5.2079409707356154e17,-5.203412326413237e17,-5.198883682090858e17,-5.1943550377684794e17,-5.1898263934461005e17,-5.1852977491237216e17,-5.1807691048013434e17,-5.1762404604789645e17,-5.171711816156585e17,-5.167183171834207e17,-5.162654527511828e17,-5.158125883189449e17,-5.15359723886707e17,-5.149068594544691e17,-5.144539950222313e17,-5.1400113058999334e17,-5.135482661577555e17,-5.1309540172551763e17,-5.1264253729327974e17,-5.1218967286104186e17,-5.11736808428804e17,-5.1128394399656614e17,-5.108310795643282e17,-5.103782151320903e17,-5.099253506998525e17,-5.094724862676146e17,-5.090196218353767e17,-5.085667574031388e17,-5.081138929709009e17,-5.076610285386631e17,-5.0720816410642515e17,-5.067552996741873e17,-5.0630243524194944e17,-5.058495708097115e17,-5.0539670637747366e17,-5.049438419452358e17,-5.0449097751299795e17,-5.0403811308076e17,-5.035852486485222e17,-5.031323842162843e17,-5.026795197840464e17,-5.022266553518085e17,-5.017737909195706e17,-5.013209264873328e17,-5.0086806205509485e17,-5.0041519762285696e17,-4.9996233319061914e17,-4.9950946875838125e17,-4.9905660432614336e17,-4.986037398939055e17,-4.981508754616676e17,-4.9769801102942976e17,-4.972451465971918e17,-4.96792282164954e17,-4.963394177327161e17,-4.9588655330047814e17,-4.954336888682403e17,-4.949808244360024e17,-4.945279600037646e17,-4.9407509557152666e17,-4.9362223113928877e17,-4.9316936670705094e17,-4.9271650227481306e17,-4.9226363784257517e17,-4.918107734103373e17,-4.913579089780994e17,-4.909050445458615e17,-4.904521801136236e17,-4.899993156813858e17,-4.895464512491479e17,-4.8909358681690995e17,-4.886407223846721e17,-4.8818785795243424e17,-4.8773499352019635e17,-4.8728212908795846e17,-4.868292646557206e17,-4.8637640022348275e17,-4.859235357912448e17,-4.85470671359007e17,-4.850178069267691e17,-4.845649424945312e17,-4.841120780622933e17,-4.836592136300554e17,-4.832063491978176e17,-4.8275348476557965e17,-4.823006203333418e17,-4.8184775590110394e17,-4.8139489146886605e17,-4.8094202703662816e17,-4.804891626043903e17,-4.8003629817215245e17,-4.7958343373991456e17,-4.791305693076766e17,-4.786777048754388e17,-4.782248404432009e17,-4.77771976010963e17,-4.773191115787251e17,-4.7686624714648723e17,-4.764133827142494e17,-4.7596051828201146e17,-4.7550765384977363e17,-4.7505478941753574e17,-4.7460192498529786e17,-4.7414906055306e17,-4.736961961208221e17,-4.7324333168858426e17,-4.727904672563463e17,-4.723376028241084e17,-4.718847383918706e17,-4.714318739596327e17,-4.709790095273948e17,-4.705261450951569e17,-4.7007328066291904e17,-4.696204162306812e17,-4.6916755179844326e17,-4.6871468736620544e17,-4.6826182293396755e17,-4.678089585017296e17,-4.673560940694918e17,-4.669032296372539e17,-4.6645036520501606e17,-4.659975007727781e17,-4.655446363405402e17,-4.650917719083024e17,-4.646389074760645e17,-4.641860430438266e17,-4.6373317861158874e17,-4.6328031417935085e17,-4.6282744974711296e17,-4.623745853148751e17,-4.6192172088263725e17,-4.6146885645039936e17,-4.610159920181614e17,-4.605631275859236e17,-4.601102631536857e17,-4.596573987214479e17,-4.592045342892099e17,-4.587516698569721e17,-4.582988054247342e17,-4.5784594099249626e17,-4.573930765602584e17,-4.5694021212802054e17,-4.564873476957827e17,-4.5603448326354477e17,-4.555816188313069e17,-4.5512875439906906e17,-4.5467588996683117e17,-4.542230255345933e17,-4.537701611023554e17,-4.533172966701175e17,-4.528644322378796e17,-4.524115678056417e17,-4.519587033734039e17,-4.51505838941166e17,-4.5105297450892806e17,-4.5060011007669024e17,-4.5014724564445235e17,-4.496943812122145e17,-4.492415167799766e17,-4.487886523477387e17,-4.4833578791550086e17,-4.478829234832629e17,-4.474300590510251e17,-4.469771946187872e17,-4.465243301865493e17,-4.460714657543114e17,-4.4561860132207354e17,-4.451657368898357e17,-4.447128724575978e17,-4.442600080253599e17,-4.4380714359312205e17,-4.4335427916088416e17,-4.429014147286463e17,-4.424485502964084e17,-4.419956858641705e17,-4.415428214319327e17,-4.410899569996947e17,-4.406370925674569e17,-4.40184228135219e17,-4.397313637029812e17,-4.3927849927074323e17,-4.3882563483850534e17,-4.383727704062675e17,-4.379199059740296e17,-4.3746704154179174e17,-4.3701417710955386e17,-4.36561312677316e17,-4.361084482450781e17,-4.356555838128402e17,-4.352027193806024e17,-4.347498549483644e17,-4.342969905161265e17,-4.338441260838887e17,-4.333912616516508e17,-4.329383972194129e17,-4.3248553278717504e17,-4.3203266835493715e17,-4.315798039226993e17,-4.311269394904614e17,-4.3067407505822355e17,-4.3022121062598566e17,-4.297683461937477e17,-4.293154817615099e17,-4.28862617329272e17,-4.284097528970342e17,-4.279568884647962e17,-4.2750402403255834e17,-4.270511596003205e17,-4.265982951680826e17,-4.2614543073584474e17,-4.2569256630360685e17,-4.2523970187136896e17,-4.247868374391311e17,-4.243339730068932e17,-4.2388110857465536e17,-4.234282441424175e17,-4.229753797101795e17,-4.225225152779417e17,-4.220696508457038e17,-4.21616786413466e17,-4.21163921981228e17,-4.2071105754899014e17,-4.202581931167523e17,-4.1980532868451437e17,-4.1935246425227654e17,-4.1889959982003866e17,-4.184467353878008e17,-4.179938709555629e17,-4.17541006523325e17,-4.1708814209108717e17,-4.166352776588493e17,-4.161824132266114e17,-4.157295487943735e17,-4.152766843621356e17,-4.148238199298977e17,-4.1437095549765984e17,-4.13918091065422e17,-4.134652266331841e17,-4.130123622009462e17,-4.1255949776870835e17,-4.1210663333647046e17,-4.1165376890423264e17,-4.112009044719947e17,-4.107480400397568e17,-4.10295175607519e17,-4.09842311175281e17,-4.093894467430432e17,-4.089365823108053e17,-4.084837178785674e17,-4.0803085344632954e17,-4.0757798901409165e17,-4.071251245818538e17,-4.0667226014961594e17,-4.06219395717378e17,-4.0576653128514016e17,-4.053136668529023e17,-4.048608024206644e17,-4.044079379884265e17,-4.039550735561886e17,-4.035022091239508e17,-4.0304934469171283e17,-4.02596480259475e17,-4.021436158272371e17,-4.0169075139499923e17,-4.0123788696276134e17,-4.0078502253052346e17,-4.0033215809828563e17,-3.998792936660477e17,-3.994264292338098e17,-3.98973564801572e17,-3.985207003693341e17,-3.980678359370962e17,-3.976149715048583e17,-3.971621070726205e17,-3.967092426403826e17,-3.9625637820814464e17,-3.958035137759068e17,-3.953506493436689e17,-3.9489778491143104e17,-3.9444492047919315e17,-3.9399205604695526e17,-3.9353919161471744e17,-3.930863271824795e17,-3.9263346275024166e17,-3.921805983180038e17,-3.917277338857659e17,-3.91274869453528e17,-3.908220050212901e17,-3.903691405890523e17,-3.8991627615681434e17,-3.8946341172457645e17,-3.890105472923386e17,-3.8855768286010074e17,-3.8810481842786285e17,-3.8765195399562496e17,-3.871990895633871e17,-3.8674622513114925e17,-3.862933606989113e17,-3.858404962666735e17,-3.853876318344356e17,-3.849347674021976e17,-3.844819029699598e17,-3.840290385377219e17,-3.835761741054841e17,-3.8312330967324614e17,-3.8267044524100826e17,-3.822175808087704e17,-3.8176471637653254e17,-3.8131185194429466e17,-3.8085898751205677e17,-3.804061230798189e17,-3.79953258647581e17,-3.795003942153431e17,-3.790475297831053e17,-3.785946653508674e17,-3.7814180091862944e17,-3.776889364863916e17,-3.772360720541537e17,-3.767832076219159e17,-3.7633034318967795e17,-3.7587747875744006e17,-3.7542461432520224e17,-3.749717498929643e17,-3.7451888546072646e17,-3.740660210284886e17,-3.7361315659625075e17,-3.731602921640128e17,-3.727074277317749e17,-3.722545632995371e17,-3.7180169886729914e17,-3.713488344350613e17,-3.708959700028234e17,-3.7044310557058554e17,-3.6999024113834765e17,-3.6953737670610976e17,-3.6908451227387194e17,-3.6863164784163405e17,-3.681787834093961e17,-3.677259189771583e17,-3.672730545449204e17,-3.668201901126825e17,-3.663673256804446e17,-3.659144612482067e17,-3.654615968159689e17,-3.6500873238373094e17,-3.645558679514931e17,-3.6410300351925523e17,-3.6365013908701734e17,-3.6319727465477946e17,-3.627444102225416e17,-3.6229154579030374e17,-3.618386813580658e17,-3.613858169258279e17,-3.609329524935901e17,-3.604800880613522e17,-3.600272236291143e17,-3.595743591968764e17,-3.591214947646385e17,-3.586686303324007e17,-3.5821576590016275e17,-3.577629014679249e17,-3.5731003703568704e17,-3.568571726034491e17,-3.5640430817121126e17,-3.559514437389734e17,-3.5549857930673555e17,-3.550457148744976e17,-3.545928504422597e17,-3.541399860100219e17,-3.53687121577784e17,-3.532342571455461e17,-3.527813927133082e17,-3.523285282810704e17,-3.5187566384883245e17,-3.5142279941659456e17,-3.5096993498435674e17,-3.5051707055211885e17,-3.5006420611988096e17,-3.496113416876431e17,-3.491584772554052e17,-3.4870561282316736e17,-3.482527483909294e17,-3.477998839586916e17,-3.473470195264537e17,-3.4689415509421574e17,-3.464412906619779e17,-3.4598842622974e17,-3.455355617975022e17,-3.4508269736526426e17,-3.4462983293302637e17,-3.4417696850078854e17,-3.4372410406855066e17,-3.4327123963631277e17,-3.428183752040749e17,-3.42365510771837e17,-3.419126463395991e17,-3.414597819073612e17,-3.410069174751234e17,-3.405540530428855e17,-3.4010118861064755e17,-3.396483241784097e17,-3.3919545974617184e17,-3.38742595313934e17,-3.3828973088169606e17,-3.378368664494582e17,-3.3738400201722035e17,-3.369311375849824e17,-3.364782731527446e17,-3.360254087205067e17,-3.355725442882688e17,-3.351196798560309e17,-3.34666815423793e17,-3.342139509915552e17,-3.337610865593173e17,-3.3330822212707936e17,-3.3285535769484154e17,-3.3240249326260365e17,-3.3194962883036576e17,-3.314967643981279e17,-3.3104389996589005e17,-3.3059103553365216e17,-3.301381711014142e17,-3.296853066691764e17,-3.292324422369385e17,-3.287795778047007e17,-3.283267133724627e17,-3.2787384894022483e17,-3.27420984507987e17,-3.2696812007574906e17,-3.2651525564351123e17,-3.2606239121127334e17,-3.2560952677903546e17,-3.251566623467976e17,-3.247037979145597e17,-3.2425093348232186e17,-3.23798069050084e17,-3.23345204617846e17,-3.228923401856082e17,-3.224394757533703e17,-3.219866113211324e17,-3.215337468888945e17,-3.2108088245665664e17,-3.206280180244188e17,-3.2017515359218086e17,-3.1972228915994304e17,-3.1926942472770515e17,-3.188165602954672e17,-3.183636958632294e17,-3.179108314309915e17,-3.1745796699875366e17,-3.170051025665157e17,-3.165522381342778e17,-3.1609937370204e17,-3.156465092698021e17,-3.151936448375642e17,-3.1474078040532634e17,-3.1428791597308845e17,-3.1383505154085056e17,-3.133821871086127e17,-3.1292932267637485e17,-3.1247645824413696e17,-3.12023593811899e17,-3.115707293796612e17,-3.111178649474233e17,-3.106650005151855e17,-3.102121360829475e17,-3.097592716507097e17,-3.093064072184718e17,-3.0885354278623386e17,-3.08400678353996e17,-3.0794781392175814e17,-3.074949494895203e17,-3.0704208505728237e17,-3.065892206250445e17,-3.0613635619280666e17,-3.0568349176056877e17,-3.052306273283309e17,-3.04777762896093e17,-3.043248984638551e17,-3.038720340316172e17,-3.034191695993793e17,-3.029663051671415e17,-3.025134407349036e17,-3.0206057630266566e17,-3.0160771187042784e17,-3.0115484743818995e17,-3.007019830059521e17,-3.002491185737142e17,-2.997962541414763e17,-2.9934338970923846e17,-2.988905252770005e17,-2.984376608447627e17,-2.979847964125248e17,-2.975319319802869e17,-2.97079067548049e17,-2.9662620311581114e17,-2.961733386835733e17,-2.957204742513354e17,-2.952676098190975e17,-2.9481474538685965e17,-2.9436188095462176e17,-2.939090165223839e17,-2.93456152090146e17,-2.930032876579081e17,-2.925504232256702e17,-2.920975587934324e17,-2.916446943611945e17,-2.911918299289566e17,-2.907389654967187e17,-2.9028610106448083e17,-2.8983323663224294e17,-2.8938037220000506e17,-2.8892750776776723e17,-2.8847464333552934e17,-2.8802177890329146e17,-2.8756891447105357e17,-2.8711605003881568e17,-2.866631856065778e17,-2.8621032117433994e17,-2.8575745674210205e17,-2.853045923098642e17,-2.8485172787762627e17,-2.8439886344538838e17,-2.8394599901315053e17,-2.8349313458091264e17,-2.8304027014867478e17,-2.825874057164369e17,-2.82134541284199e17,-2.8168167685196112e17,-2.8122881241972326e17,-2.8077594798748538e17,-2.8032308355524752e17,-2.798702191230096e17,-2.794173546907717e17,-2.7896449025853386e17,-2.7851162582629597e17,-2.780587613940581e17,-2.776058969618202e17,-2.7715303252958234e17,-2.7670016809734445e17,-2.762473036651066e17,-2.757944392328687e17,-2.753415748006308e17,-2.7488871036839293e17,-2.7443584593615504e17,-2.739829815039172e17,-2.735301170716793e17,-2.7307725263944144e17,-2.7262438820720352e17,-2.7217152377496566e17,-2.7171865934272778e17,-2.7126579491048992e17,-2.7081293047825203e17,-2.703600660460141e17,-2.6990720161377626e17,-2.6945433718153837e17,-2.690014727493005e17,-2.6854860831706262e17,-2.6809574388482474e17,-2.6764287945258685e17,-2.67190015020349e17,-2.667371505881111e17,-2.6628428615587325e17,-2.6583142172363533e17,-2.6537855729139744e17,-2.6492569285915958e17,-2.644728284269217e17,-2.6401996399468384e17,-2.6356709956244592e17,-2.6311423513020806e17,-2.6266137069797018e17,-2.6220850626573232e17,-2.6175564183349443e17,-2.6130277740125658e17,-2.6084991296901866e17,-2.6039704853678077e17,-2.599441841045429e17,-2.5949131967230502e17,-2.5903845524006717e17,-2.5858559080782925e17,-2.581327263755914e17,-2.576798619433535e17,-2.5722699751111565e17,-2.5677413307887776e17,-2.5632126864663987e17,-2.55868404214402e17,-2.554155397821641e17,-2.5496267534992624e17,-2.5450981091768835e17,-2.5405694648545046e17,-2.5360408205321258e17,-2.5315121762097472e17,-2.5269835318873683e17,-2.5224548875649898e17,-2.517926243242611e17,-2.513397598920232e17,-2.508868954597853e17,-2.5043403102754742e17,-2.4998116659530957e17,-2.4952830216307168e17,-2.490754377308338e17,-2.486225732985959e17,-2.4816970886635805e17,-2.4771684443412016e17,-2.472639800018823e17,-2.4681111556964438e17,-2.4635825113740653e17,-2.4590538670516864e17,-2.4545252227293075e17,-2.449996578406929e17,-2.4454679340845498e17,-2.4409392897621712e17,-2.4364106454397923e17,-2.4318820011174138e17,-2.427353356795035e17,-2.422824712472656e17,-2.418296068150277e17,-2.4137674238278982e17,-2.4092387795055197e17,-2.4047101351831408e17,-2.4001814908607622e17,-2.395652846538383e17,-2.3911242022160045e17,-2.3865955578936256e17,-2.382066913571247e17,-2.3775382692488682e17,-2.3730096249264893e17,-2.3684809806041104e17,-2.3639523362817315e17,-2.359423691959353e17,-2.354895047636974e17,-2.3503664033145952e17,-2.3458377589922163e17,-2.3413091146698378e17,-2.336780470347459e17,-2.3322518260250803e17,-2.327723181702701e17,-2.3231945373803226e17,-2.3186658930579437e17,-2.3141372487355648e17,-2.3096086044131862e17,-2.305079960090807e17,-2.3005513157684285e17,-2.2960226714460496e17,-2.291494027123671e17,-2.286965382801292e17,-2.2824367384789136e17,-2.2779080941565344e17,-2.2733794498341558e17,-2.268850805511777e17,-2.264322161189398e17,-2.2597935168670195e17,-2.2552648725446403e17,-2.2507362282222618e17,-2.246207583899883e17,-2.2416789395775043e17,-2.2371502952551254e17,-2.2326216509327466e17,-2.2280930066103677e17,-2.223564362287989e17,-2.2190357179656102e17,-2.2145070736432314e17,-2.2099784293208525e17,-2.2054497849984736e17,-2.200921140676095e17,-2.1963924963537162e17,-2.1918638520313376e17,-2.1873352077089587e17,-2.18280656338658e17,-2.178277919064201e17,-2.173749274741822e17,-2.1692206304194435e17,-2.1646919860970646e17,-2.1601633417746858e17,-2.155634697452307e17,-2.1511060531299283e17,-2.1465774088075494e17,-2.142048764485171e17,-2.1375201201627917e17,-2.132991475840413e17,-2.1284628315180342e17,-2.1239341871956554e17,-2.1194055428732768e17,-2.1148768985508976e17,-2.110348254228519e17,-2.10581960990614e17,-2.1012909655837616e17,-2.0967623212613827e17,-2.092233676939004e17,-2.087705032616625e17,-2.0831763882942464e17,-2.0786477439718675e17,-2.0741190996494886e17,-2.06959045532711e17,-2.065061811004731e17,-2.0605331666823523e17,-2.0560045223599734e17,-2.051475878037595e17,-2.046947233715216e17,-2.042418589392837e17,-2.0378899450704582e17,-2.0333613007480797e17,-2.0288326564257008e17,-2.024304012103322e17,-2.019775367780943e17,-2.0152467234585642e17,-2.0107180791361856e17,-2.0061894348138067e17,-2.0016607904914282e17,-1.997132146169049e17,-1.9926035018466704e17,-1.9880748575242915e17,-1.983546213201913e17,-1.979017568879534e17,-1.9744889245571552e17,-1.9699602802347763e17,-1.9654316359123974e17,-1.960902991590019e17,-1.95637434726764e17,-1.9518457029452614e17,-1.9473170586228822e17,-1.9427884143005037e17,-1.9382597699781248e17,-1.9337311256557462e17,-1.9292024813333674e17,-1.924673837010988e17,-1.9201451926886096e17,-1.9156165483662307e17,-1.911087904043852e17,-1.9065592597214733e17,-1.9020306153990944e17,-1.8975019710767155e17,-1.892973326754337e17,-1.888444682431958e17,-1.8839160381095795e17,-1.8793873937872003e17,-1.8748587494648214e17,-1.870330105142443e17,-1.865801460820064e17,-1.8612728164976854e17,-1.8567441721753066e17,-1.8522155278529277e17,-1.8476868835305488e17,-1.8431582392081702e17,-1.8386295948857914e17,-1.8341009505634125e17,-1.8295723062410336e17,-1.8250436619186547e17,-1.8205150175962762e17,-1.8159863732738973e17,-1.8114577289515187e17,-1.8069290846291395e17,-1.802400440306761e17,-1.797871795984382e17,-1.7933431516620035e17,-1.7888145073396246e17,-1.7842858630172454e17,-1.779757218694867e17,-1.775228574372488e17,-1.7706999300501094e17,-1.7661712857277306e17,-1.761642641405352e17,-1.7571139970829728e17,-1.7525853527605942e17,-1.7480567084382154e17,-1.7435280641158368e17,-1.738999419793458e17,-1.7344707754710787e17,-1.7299421311487e17,-1.7254134868263213e17,-1.7208848425039427e17,-1.7163561981815638e17,-1.711827553859185e17,-1.707298909536806e17,-1.7027702652144275e17,-1.6982416208920486e17,-1.69371297656967e17,-1.689184332247291e17,-1.684655687924912e17,-1.6801270436025334e17,-1.6755983992801546e17,-1.671069754957776e17,-1.6665411106353968e17,-1.6620124663130182e17,-1.6574838219906394e17,-1.6529551776682608e17,-1.648426533345882e17,-1.6438978890235034e17,-1.6393692447011242e17,-1.6348406003787453e17,-1.6303119560563667e17,-1.625783311733988e17,-1.6212546674116093e17,-1.61672602308923e17,-1.6121973787668515e17,-1.6076687344444726e17,-1.603140090122094e17,-1.5986114457997152e17,-1.594082801477336e17,-1.5895541571549574e17,-1.5850255128325786e17,-1.5804968685102e17,-1.575968224187821e17,-1.5714395798654422e17,-1.5669109355430634e17,-1.5623822912206848e17,-1.557853646898306e17,-1.5533250025759274e17,-1.5487963582535485e17,-1.5442677139311693e17,-1.5397390696087907e17,-1.5352104252864118e17,-1.5306817809640333e17,-1.5261531366416544e17,-1.5216244923192755e17,-1.5170958479968966e17,-1.512567203674518e17,-1.5080385593521392e17,-1.5035099150297606e17,-1.4989812707073814e17,-1.4944526263850026e17,-1.489923982062624e17,-1.485395337740245e17,-1.4808666934178666e17,-1.4763380490954874e17,-1.4718094047731088e17,-1.46728076045073e17,-1.462752116128351e17,-1.4582234718059725e17,-1.4536948274835936e17,-1.4491661831612147e17,-1.4446375388388362e17,-1.4401088945164573e17,-1.4355802501940784e17,-1.4310516058716997e17,-1.426522961549321e17,-1.4219943172269419e17,-1.4174656729045632e17,-1.4129370285821845e17,-1.4084083842598056e17,-1.4038797399374269e17,-1.399351095615048e17,-1.3948224512926693e17,-1.3902938069702906e17,-1.3857651626479117e17,-1.381236518325533e17,-1.376707874003154e17,-1.3721792296807752e17,-1.3676505853583965e17,-1.3631219410360176e17,-1.3585932967136389e17,-1.3540646523912602e17,-1.3495360080688813e17,-1.3450073637465026e17,-1.3404787194241237e17,-1.335950075101745e17,-1.3314214307793662e17,-1.3268927864569872e17,-1.3223641421346085e17,-1.3178354978122296e17,-1.3133068534898509e17,-1.3087782091674722e17,-1.3042495648450933e17,-1.2997209205227146e17,-1.2951922762003358e17,-1.290663631877957e17,-1.2861349875555782e17,-1.2816063432331994e17,-1.2770776989108205e17,-1.2725490545884418e17,-1.2680204102660629e17,-1.2634917659436842e17,-1.2589631216213054e17,-1.2544344772989266e17,-1.2499058329765478e17,-1.245377188654169e17,-1.2408485443317902e17,-1.2363199000094115e17,-1.2317912556870326e17,-1.2272626113646538e17,-1.2227339670422749e17,-1.2182053227198962e17,-1.2136766783975174e17,-1.2091480340751386e17,-1.2046193897527598e17,-1.2000907454303811e17,-1.1955621011080022e17,-1.1910334567856235e17,-1.1865048124632446e17,-1.1819761681408658e17,-1.177447523818487e17,-1.1729188794961082e17,-1.1683902351737294e17,-1.1638615908513506e17,-1.1593329465289718e17,-1.1548043022065931e17,-1.1502756578842142e17,-1.1457470135618355e17,-1.1412183692394568e17,-1.1366897249170779e17,-1.132161080594699e17,-1.1276324362723202e17,-1.1231037919499414e17,-1.1185751476275627e17,-1.1140465033051838e17,-1.1095178589828051e17,-1.1049892146604262e17,-1.1004605703380475e17,-1.0959319260156688e17,-1.09140328169329e17,-1.086874637370911e17,-1.0823459930485323e17,-1.0778173487261534e17,-1.0732887044037747e17,-1.0687600600813958e17,-1.0642314157590171e17,-1.0597027714366384e17,-1.0551741271142595e17,-1.0506454827918808e17,-1.046116838469502e17,-1.0415881941471232e17,-1.0370595498247443e17,-1.0325309055023654e17,-1.0280022611799867e17,-1.023473616857608e17,-1.0189449725352291e17,-1.0144163282128504e17,-1.0098876838904715e17,-1.0053590395680928e17,-1.0008303952457141e17,-9.963017509233352e16,-9.917731066009565e16,-9.872444622785776e16,-9.827158179561987e16,-9.7818717363382e16,-9.736585293114411e16,-9.691298849890624e16,-9.646012406666837e16,-9.600725963443048e16,-9.55543952021926e16,-9.510153076995472e16,-9.464866633771685e16,-9.419580190547898e16,-9.374293747324107e16,-9.32900730410032e16,-9.283720860876533e16,-9.238434417652744e16,-9.193147974428957e16,-9.147861531205168e16,-9.102575087981381e16,-9.057288644757594e16,-9.012002201533805e16,-8.966715758310018e16,-8.921429315086227e16,-8.87614287186244e16,-8.830856428638653e16,-8.785569985414864e16,-8.740283542191077e16,-8.69499709896729e16,-8.6497106557435e16,-8.604424212519714e16,-8.559137769295925e16,-8.513851326072138e16,-8.46856488284835e16,-8.42327843962456e16,-8.377991996400773e16,-8.332705553176984e16,-8.287419109953197e16,-8.24213266672941e16,-8.196846223505621e16,-8.151559780281834e16,-8.106273337058046e16,-8.060986893834258e16,-8.01570045061047e16,-7.97041400738668e16,-7.925127564162893e16,-7.879841120939106e16,-7.834554677715317e16,-7.78926823449153e16,-7.743981791267742e16,-7.698695348043954e16,-7.653408904820166e16,-7.608122461596378e16,-7.56283601837259e16,-7.517549575148803e16,-7.472263131925013e16,-7.426976688701226e16,-7.381690245477437e16,-7.33640380225365e16,-7.291117359029862e16,-7.245830915806074e16,-7.200544472582286e16,-7.1552580293584984e16,-7.1099715861347096e16,-7.0646851429109224e16,-7.019398699687134e16,-6.9741122564633464e16,-6.928825813239558e16,-6.88353937001577e16,-6.838252926791982e16,-6.7929664835681944e16,-6.747680040344406e16,-6.7023935971206184e16,-6.657107153896831e16,-6.6118207106730424e16,-6.566534267449254e16,-6.5212478242254664e16,-6.475961381001679e16,-6.430674937777891e16,-6.385388494554102e16,-6.3401020513303144e16,-6.294815608106527e16,-6.249529164882739e16,-6.204242721658951e16,-6.158956278435163e16,-6.113669835211374e16,-6.068383391987587e16,-6.023096948763799e16,-5.977810505540011e16,-5.932524062316223e16,-5.887237619092435e16,-5.841951175868647e16,-5.796664732644859e16,-5.751378289421071e16,-5.706091846197284e16,-5.660805402973495e16,-5.615518959749707e16,-5.570232516525919e16,-5.524946073302131e16,-5.479659630078344e16,-5.434373186854555e16,-5.389086743630767e16,-5.343800300406979e16,-5.298513857183192e16,-5.253227413959404e16,-5.207940970735616e16,-5.162654527511827e16,-5.11736808428804e16,-5.072081641064252e16,-5.026795197840464e16,-4.981508754616676e16,-4.936222311392888e16,-4.8909358681691e16,-4.845649424945312e16,-4.800362981721524e16,-4.755076538497736e16,-4.709790095273949e16,-4.66450365205016e16,-4.619217208826372e16,-4.573930765602584e16,-4.528644322378797e16,-4.483357879155009e16,-4.43807143593122e16,-4.392784992707432e16,-4.347498549483645e16,-4.302212106259857e16,-4.256925663036069e16,-4.21163921981228e16,-4.166352776588492e16,-4.121066333364705e16,-4.075779890140917e16,-4.030493446917129e16,-3.98520700369334e16,-3.939920560469553e16,-3.894634117245765e16,-3.849347674021977e16,-3.804061230798189e16,-3.758774787574402e16,-3.713488344350613e16,-3.668201901126825e16,-3.622915457903037e16,-3.5776290146792492e16,-3.5323425714554612e16,-3.4870561282316732e16,-3.441769685007885e16,-3.3964832417840972e16,-3.3511967985603092e16,-3.3059103553365212e16,-3.2606239121127332e16,-3.2153374688889456e16,-3.1700510256651572e16,-3.1247645824413696e16,-3.0794781392175816e16,-3.0341916959937936e16,-2.9889052527700056e16,-2.9436188095462176e16,-2.8983323663224296e16,-2.853045923098642e16,-2.8077594798748536e16,-2.7624730366510656e16,-2.7171865934272776e16,-2.6719001502034896e16,-2.626613706979702e16,-2.5813272637559136e16,-2.536040820532126e16,-2.490754377308338e16,-2.44546793408455e16,-2.400181490860762e16,-2.3548950476369744e16,-2.309608604413186e16,-2.2643221611893984e16,-2.21903571796561e16,-2.1737492747418224e16,-2.1284628315180344e16,-2.083176388294246e16,-2.0378899450704584e16,-1.99260350184667e16,-1.9473170586228824e16,-1.9020306153990944e16,-1.8567441721753064e16,-1.8114577289515184e16,-1.7661712857277306e16,-1.7208848425039424e16,-1.6755983992801546e16,-1.6303119560563666e16,-1.5850255128325786e16,-1.5397390696087908e16,-1.4944526263850028e16,-1.4491661831612148e16,-1.4038797399374268e16,-1.3585932967136388e16,-1.313306853489851e16,-1.268020410266063e16,-1.222733967042275e16,-1.1774475238184872e16,-1.1321610805946992e16,-1.0868746373709112e16,-1.041588194147123e16,-9.96301750923335e15,-9.510153076995472e15,-9.057288644757592e15,-8.604424212519712e15,-8.151559780281833e15,-7.698695348043954e15,-7.245830915806074e15,-6.792966483568194e15,-6.340102051330315e15,-5.887237619092436e15,-5.434373186854556e15,-4.981508754616675e15,-4.528644322378796e15,-4.0757798901409165e15,-3.622915457903037e15,-3.1700510256651575e15,-2.717186593427278e15,-2.264322161189398e15,-1.8114577289515185e15,-1.358593296713639e15,-9.057288644757592e14,-4.528644322378796e14,0.0]}
},{}],19:[function(require,module,exports){
module.exports={"expected":[0.08963273688692398,-0.7865304314730533,0.9888022302898207,0.8441672870417682,-0.9690036819784501,0.48446211132929373,0.3047434572961164,-0.9023048129154999,-0.39815854416414864,0.9407806853915138,0.48760811433728457,0.28195610864937604,0.5051751761389315,-0.18492236155392333,-0.5886795623766945,0.0860468538765367,-0.7715879757971905,0.06586873428969757,0.7043409186239897,0.03391650476911208,-0.6300788778151482,-0.13336394757096387,-0.6142363264401243,-0.9812793518642419,0.5325228278621555,0.9571966202242358,-0.445505592380251,0.9511436774520083,0.9203973739085556,-0.9156330398532635,-0.9547847997976325,0.8710030246619589,-0.23947302002118817,-0.542654535967642,0.9835225866584905,0.6236737225707174,-0.9966443564507697,0.7428546161013218,-0.021905417945046177,-0.7128194544123896,-0.07785343638034914,0.7791756394316949,-0.9904971594913217,-0.8377715137614246,0.1967173328361098,-0.49476908491367283,-0.2934638024421413,0.897145920558202,0.3872874775358132,0.38710773648365493,0.8970597884689078,-0.29327743277512847,-0.49493848974664534,0.19652619072946909,0.5790830426582597,-0.9905239524335759,0.7790534303703496,-0.07765907900601851,-0.7126827148422006,-0.022100318347588778,0.7429851101953472,-0.9966283803318605,0.6235213231509955,0.9834873243112227,-0.542490778255396,-0.9605510862935179,0.8710987815085413,-0.954726824161479,-0.9157113943307859,0.9203211349813261,0.9512038491778986,-0.4456801164346884,0.9572530273702861,0.5326878244382951,-0.9813168781376871,-0.61439015223108,0.99560716377563,-0.6302302487214518,0.033721668686901025,0.7044792911050606,0.06606325726666636,-0.7717119717126072,0.08624107679559465,-0.5885219620868815,-0.1851139434016278,0.5050069234831551,0.28214314133904483,-0.8918616683138908,0.9407145772020585,-0.3979797079283254,-0.9022207541286308,0.3045577766935437,0.48463264466820644,-0.9690518246437305,0.8440627635246931,0.9888313038936883,-0.7864100263422816,0.08943857227315301,0.7209249265641086,-0.9995643151819658,-0.73502156758001,0.9975286077824251,-0.6327191940545378,-0.9855578722244355,0.8109505776200735,0.22816942522158007,-0.8652327233820684,0.9581765650959662,0.9108974606774308,-0.9248806319060714,0.9190607979284996,0.43506725287678544,-0.953767012305685,-0.5226466794372522,0.9789740483636421,-0.5397914701783312,0.14487676742219233,0.6210085916113697,-0.045533207436559704,-0.6960406895812582,-0.05426384700978055,-0.6749447467647163,-0.0744584740105578,0.5980375918858422,0.1734846876476345,-0.8359075406410981,0.9726526836245165,-0.4977251110218084,-0.9446583970896354,0.4087960689198062,0.38414610471482036,-0.3157955641809476,0.8985592211584739,0.9660661143605777,-0.85034253220429,0.1998634976561462,0.7936567357619937,-0.9900505890892953,-0.6548908099101949,0.9991455852245058,-0.7150670369697514,-0.9982894486842705,0.6418286539149485,0.11825933717093676,-0.8039775032117631,0.9840978223139011,0.8592457646596524,-0.9614924182166799,0.45908471943645934,0.33202788064046906,-0.9143378949425313,-0.42439359655327547,0.9501477255824163,0.5125325040325919,0.25422741335189974,0.5298031758111001,-0.15656255205995473,-0.611700159802663,0.05733838374549521,0.6875048289826464,0.037124382184611095,0.6836196497920076,0.0626654670028909,-0.6074696567671785,-0.16183119055191109,-0.5912713043387811,-0.9753302371184186,0.5079427703644744,0.9484702180824822,-0.4195553080676305,-0.37320561702013216,0.9312684869048462,-0.9036839474777577,-0.9629454138420924,0.8565034809223655,-0.21143165584783527,-0.566603329942388,0.9883181170420428,0.6459119367193411,-0.9985872427750271,0.7232803504351547,0.9989107967236664,-0.7327086729429585,-0.10651340560421693,0.7968920875146454,-0.9861287323900423,-0.8531387419102973,0.22485307211982544,-0.4695539929549605,-0.32085465431725535,0.9094872298026306,0.41366063891423366,-0.946395672930222,0.8839702544782033,-0.2656418964083527,-0.5197408510495519,0.16822645991782326,0.6023062539800177,-0.9940662485001701,0.7606871651875392,-0.04893425751254627,-0.6921990293597433,-0.05086370363164578,0.6168168387707229,-0.9938542537656209,0.6007630001921355,0.9778715058836895,-0.5180894539083958,-0.9521495075476816,0.8848718290189953,-0.9457699001715324,-0.9268967742636678,0.9086824003392289,0.9596901591496284,-0.8625447487979666,0.9651810602979511,0.5568236647728952,-0.986447545445267,-0.6368428090386076,0.9978893658517705,-0.6523138920880623,0.004944499790464708,0.7246130497431618,0.09475259071898005,-0.7896953205871833,0.9880218488434961,-0.5650104447471452,-0.21331943930769778,0.4799576548107937,0.30963659436966545,-0.9045094803013621,0.930562910528033,-0.3714126477105114,-0.8894351437389059,0.2770192608229475,0.5096059019212528,-0.17986686117601308,0.8282802554297658,0.9927109935321866,-0.7683070025190175,0.060737295164633755,0.7006816866550785,-0.9999997287842489,-0.7542309148055651,0.995093318578648,-0.6101707503014363,-0.9802761348240647,0.528163743838395,0.25609531872576174,-0.8793035543183114,0.9495436010089683,0.9223955445927263,-0.9135538812996667,0.3302050040579424,0.46080010539567084,-0.9620215576866702,-0.5469661935853372,0.9844391356774559,0.6276846941142641,0.11634082100793239,0.6433088930803833,-0.016764627412464424,-0.7164161749989255,-0.08297853587601214,-0.6534296420481588,-0.10312731202991823,0.5747239692537282,0.20175599896906127,-0.4902942512807188,-0.2983752683183172,-0.4725574220108674,-0.9348258026815089,0.3823617626132656,0.894775750553944,-0.28835791681515355,0.8855570426696998,0.9730995690471681,-0.8348456447847806,-0.991217025189785,0.7758194828678466,-0.0725318458802209,-0.676368939441817,0.9999211569844481,0.7464166927359924,-0.9961933371304973,0.6194932401040648,0.14678796726245158,-0.8207585317217694,-0.2446510082807134,0.8736124128780105,-0.9531846203329415,-0.9177654268573108,0.35903724041555773,-0.341339524134401,-0.4502770663668199,0.9587276299935688,0.5370322937827046,0.22628810712745417,0.5539922679063963,-0.12807304064366679,-0.6342140033110084,0.028582412481541496,0.7081191940749761,0.008349274936159183,0.6623320464084571,0.09136251496070542,-0.58435718649903,-0.1901643668851853,-0.5678164523018883,-0.9685731245149595,0.48294191521832835,0.9389580698671666,-0.39325744938770646,-0.8999913286702819,0.9413681043464351,-0.8909862115497879,-0.9703082900519258,0.8412943795875032,-0.18321513425757896,-0.5900827297988143,0.9922948899516219,0.6676150547115772,-0.9997028643205276,0.7031068938986746,0.9971541557135071,-0.7519908898493819,-0.1350851353782426,0.8139483621763544,-0.9809433615780065,-0.8677991999319911,0.2528025352135478,-0.44394990596060463,-0.3479796989166032,0.9210750878514943,0.4396911092765133,-0.9552997374853592,0.8701484084513804,-0.2377862929555503,-0.5441126407591748,0.13978736439252634,0.6250304936259929,-0.996785025138607,0.7416907200139816,-0.02016889715979294,-0.6711419018660625,-0.07958495163542405,0.5939087504154852,-0.9902567833951152,0.5775069840431859,0.9714455843221332,-0.49325892604356086,-0.9429591346755393,0.897911817597285,-0.936029467146315,-0.9373142803222942,0.896290881250589,0.9673814280541623,-0.8476255587440891,0.9723095033028682,0.580498212807621,-0.9907610049261474,-0.6587678828739572,0.999344881294932,-0.6738571356933875,-0.02383676530342938,0.74414651345599,0.12336342779397176,-0.8070244580952536,0.9831715009904112,-0.5410308528911852,-0.24134821389067831,0.45451077234355114,0.33687353355976835,-0.9164079648359555,0.9196403328235822,-0.3445378961977617,-0.8759126940066724,0.24925125245765514,0.5341569837291826,-0.15148215539001897,0.8118115708517974,0.9957682864833892,-0.749567486163874,0.031985701145488814,0.6798579774033007,-0.9996067074547071,-0.772815430625169,0.9918336590857526,-0.5871168196473112,-0.9741823022105183,0.5035070128712361,0.28380905386449345,-0.8926459392769133,0.9401240016202559,0.9331294836106734,-0.9014703105406275,0.3029029263978623,0.4861512149071231,-0.9694791305879475,-0.5708325817092337,0.9890886790018306,0.6498286601609191,0.08770849376741227,0.6650762548458737,0.012017841018365125,-0.7361981560705316,-0.11162448240588836,-0.6313732132438229,-0.13171071575839674,0.5509342250801955,0.2298601685279053,-0.46500812908134215,-0.3257202962304293,-0.446998249818063,-0.9242187657132288,0.35561069438007115,0.881554586633637,-0.26068138361341187,0.8718212375936834,0.9793268738399754,-0.8186571418828726,-0.9946124072524586,0.7573395138389866,-0.04379803570899845,-0.6972867411652341,0.9998683589042066,0.7652597086238593,-0.9932719439935643,0.596644616313859,0.1751949930413336,-0.836859615009092,-0.27245466184602274,0.8872553298603771,-0.9440871707990748,-0.9288142989610887,0.38574916111818996,-0.31414706548176535,-0.475787510828416,0.9665132907305172,0.5610871871004667,0.19816133587956422,0.792598865232427,-0.09947742901790853,-0.6562024416422603,-0.0001972374577697848,0.728146928331935,-0.9981863944187812,0.6404957438723787,0.11998387499913936,-0.5607606141936267,-0.21834000437141637,0.8601330046638431,-0.9610136118835017,0.4575409740110633,0.9286680557762845,-0.36663380241115034,-0.8870732979800049,0.9506878593551668,-0.8775503513202049,-0.9768673287616273,0.8253883204116165,0.9933175489589942,-0.6130732843766259,0.9954496108887402,0.6887650969214751,-0.9999902968671615,-0.7575970554440082,0.994571437144295,-0.770650131065279,-0.16354495587699908,0.830330333399253,0.2610621992251644,-0.8817407425876701,0.2805425677994445,-0.4179780352564219,-0.3748164648996169,0.32534730820529717,0.46535732406586344,-0.9634123981529592,0.8556057008916153,-0.20973369897792743,-0.7997510333571453,0.11123246410013082,0.6472369360371578,-0.9986780300187367,0.7220798321727075,0.9988282447799394,-0.6495287768258692,-0.1082402686673384,0.5705086471716445,-0.9858389494912727,0.5537725408055251,0.9642148830858884,-0.4680197651431293,-0.9329875813050799,0.9102079444584317,-0.9255135944029845,-0.9469552822784031,0.8831568432854621,0.9742712841739416,-0.8320041658777917,0.9786324509322406,0.603691855714566,-0.994253683158848,-0.6801472102351545,0.999972504304951,-0.6948421323570392,-0.05259828318292864,0.7630635000354773,0.15187206626835142,-0.8236850281700747,0.9775066593010274,-0.5166030520559338,-0.26917704712831103,0.4286873571734867,0.36383139487137267,-0.9275472647947733,0.9079558927360759,-0.31737771737905185,-0.8616646074046906,0.22127675559202284,0.558265551112696,-0.12297195646091588,0.7946703530280742,0.9980006499783316,-0.7302070017510158,0.003207609047009335,0.6584710499016084,-0.9983855767860269,-0.7907597189725497,0.9877523297202607,-0.563576500778812,-0.9672814227289711,0.47843315899306554,0.3112876716052681,-0.9052488249571025,0.9299255704571225,0.9430903853588215,-0.8886399300837867,0.27534991330454456,0.5110995796607664,-0.9761335528939433,-0.5942260720539612,0.9929188264916143,0.6714342852997891,0.059003505727130715,0.6862926440600899,0.04079035344718972,-0.7553702447074911,-0.14017795529021235,-0.6087937326727574,-0.16018500569945193,0.526688067625682,0.2577739138420596,-0.43933677779977176,-0.35279548599795535,-0.4210687685602111,-0.9128460734271258,0.3285650257456214,0.8676031119013802,-0.23278889278883724,0.8573631851542525,0.984742869820779,-0.8017904346235011,-0.9971838174298634,0.7382321381314483,-0.015027941705208603,-0.717626886038102,0.9989872347235672,0.7834687564652417,-0.9895276894582524,0.5733017111475565,0.2034568811287357,-0.852267414370278,-0.30003260439090385,0.9001632133346867,-0.9342076062621084,-0.9390937086457384,0.41214151365415774,-0.2866943563557702,-0.5009037961890137,0.9734982578781907,0.5846772560665676,0.16987040081437071,0.7747224041296373,-0.07079940679267263,-0.6776472588010681,-0.028976723998636867,0.7475714400743589,-0.9960404262328654,0.6181288321444816,0.14850583617730975,-0.5366994880810394,-0.2463347613219537,0.8744563117340016,-0.9526579617900752,0.4317609897753838,0.9176087004192699,-0.339706423103112,-0.8734203845832801,0.9592200311183414,-0.8633874975279807,-0.982617096232937,0.8087984805333283,0.9962276465108805,-0.6355559474921432,0.9977796663716644,0.7093445419105066,-0.9994493022957021,-0.7760683183948863,0.9911647806308921,-0.788670938619233,-0.19186928998463723,0.8460244297824473,0.2887356130563661,-0.8949518202132627,0.30805018905927856,-0.3916598968531839,-0.40134271974586905,0.2979987390653095,0.49063802048761823,-0.9707269341197119,0.8403541794891215,-0.1815073542305664,-0.78214247173121,0.08258541492392955,0.6689071846159178,-0.999743694908765,0.701870748012655,0.997021707073213,-0.6273775593117884,-0.13680591565533867,0.5466359145073941,-0.9806044119430152,-0.8686609848894952,0.9561853923420653,-0.44239288021531176,-0.9222431082216803,0.9217500230586544,0.4412504451917974,-0.9558117931870299,0.8692911671426453,0.9803540197099333,-0.8156935115101186,0.1380673027355367,0.6263853790645384,-0.9969226866859306,-0.7009630797357911,0.9997717149368606,-0.6698532719759736,-0.08131622679546711,0.7813483379848858,0.18025488858374258,-0.839663228609669,-0.2773982761515035,-0.49174727909039906,-0.2967828846367771,0.4025088023255886,0.3904878454644236,-0.3092614818505028,0.8955192700664669,-0.2899546117013724,-0.8467026875488148,0.19311894528273968,0.7894532490939957,-0.09435988323981578,0.7768708023460665,0.9994062346486123,-0.7102415881863776,-0.9978636721950311,0.636538621832634,-0.9963373484057849,-0.8080489141683818,0.9828527115989043,0.8627442784116167,-0.9595792133105966,0.45296295426594513,0.3385084076950968,-0.9171017706853081,-0.430611983728727,0.9522699978759721,-0.8750733690673862,-0.9779539564757073,0.5356245315541412,-0.9819793118472732,-0.6171272846296845,0.9959264051179721,0.6924836706714308,0.030249637108347487,0.7069404843203129,0.0695290737131722,-0.7739165580775538,-0.16861529982820625,0.8331846997145487,-0.18852659275023997,0.5020055832594332,0.28547411018355606,-0.4133014644859243,-0.3795784075818228,-0.39479045913117555,-0.9007171473613138,0.30124716229264453,0.8529328842493271,-0.2047035514614314,-0.5722578347311253,0.9893430701881007,-0.7842594959799343,-0.9989291254754067,0.7185131849670165,0.013754601973819816,-0.7373725235693194,0.9972785143967784,0.8010287512447415,-0.9849636753966534,0.5494838626884521,0.9628389504706809,-0.866969165442652,-0.32736198937820843,0.9123253699564733,-0.9235541113006357,-0.9485951400868889,0.4381924336707573,-0.25900413954579704,-0.5256051152348191,0.9796767448442367,0.6077829578385313,-0.9947909608800866,0.756204135750731,-0.04206273184978966,-0.6985306891469727,-0.057732205202623,0.7663766373538227,-0.9930693031405533,0.5952498407607837,0.17690476989984397,-0.5121937412440449,-0.2741254458959415,0.4240363752552063,-0.9435130963489731,0.40562331955656494,0.9057891657549089,-0.31249761905128287,-0.8590438990335544,0.9669575512849095,-0.8485093831791134,-0.9875528291563399,0.7915386035592347,0.9983124340565103,-0.7266843825487952,0.9992831261005158,0.729336340942941,-0.9980803287850718,-0.7938966590669526,0.9869370083673203,-0.8060383834407172,-0.22003467282699754,0.8610176497847437,0.31616982815477546,-0.9074214882876082,0.9280224163896066,-0.36501729362199775,-0.4275364881732745,0.2704032972932845,0.5155122551240807,-0.977237285766869,0.824406479140419,-0.1531306424097957,-0.7638859557842932,0.05386994908659036,0.6900232869665002,0.04592726966244642,0.681080209449623,0.994389201532544,-0.6047066001711686,-0.16525822781319155,0.5223103294337549,-0.9745575072252755,-0.8825587700131217,0.9473637640030851,-0.4163995014725342,-0.9107346165245812,0.3237044099298024,0.4668939960875398,-0.9638764760031742,0.8547053396357241,0.9856245955101717,-0.7987071079605738,0.10950617030661684,0.6485599827449701,-0.9987658044110405,-0.7211982467777592,0.9987426795316325,0.7866536342156709,-0.1099668051869335,0.7989858795016271,0.20848838141229825,-0.8549458225110547,-0.30493348792653824,-0.46648412539074774,-0.3241428567697598,0.37599679503503936,0.416820802198102,-0.28176467107941194,-0.505347361516254,-0.2622912974295674,-0.8310393294194622,0.16480114844979624,0.7714610365963822,-0.06566963897407568,0.7584276645793294,0.9999838760584753,-0.6896877855204704,-0.995570152050956,0.614078862790857,0.15358859388351565,-0.8246686932355374,0.9771388637375885,0.8769390299765263,-0.9510820547364596,0.42711749910291424,0.3654487115192169,-0.9281949570645808,-0.45640824687527126,0.9606607164483929,-0.8607818665075249,-0.9835586386853107,0.5597057532548877,-0.12124804930205282,-0.6395172472667792,0.9981089232970339,0.7129593782249795,0.0014707086267120406,0.6571628517914595,0.09821019365009115,-0.7918217317626999,-0.19691295752389706,0.848754532049431,-0.966839300856713,0.4769072198192482,0.31293780973590307,-0.3869237577086598,-0.40604687306819753,0.9436665469347671,-0.8878420355445567,0.27367973509962557,0.8375560570098186,-0.1764486265153325,-0.7789283197067075,0.9931236639742295,-0.766078849198071,-0.9998468855145447,0.6981989902197425,0.9966119896793519,-0.7565072957785676,0.9947436134878315,0.8179251456453349,-0.9795836827984709,-0.8711967535997478,0.954667448985338,-0.8809526887787634,-0.3544201761846071,0.9237317241676121,0.4458587228801618,-0.9573107219646972,0.46388033966998743,-0.23109935460094255,-0.5498710045247227,0.13297298607949196,0.6303851508406942,-0.9973125745457296,0.7370594012802708,-0.01329121066106348,-0.718835432112087,-0.08643985901815646,0.7845469412837749,-0.9892754865246691,0.5718777234820929,0.2051571494916389,-0.48726367510485974,-0.3016890353132552,0.39779665479781107,-0.933586591488228,0.37914961671952524,0.8932192435012507,-0.28502993098550605,-0.843955751316884,0.9738940098211405,-0.8329283338265921,-0.991670438597159,0.773622988178218,0.9995701844845869,-0.7066126342607973,0.9999587445563987,0.7487239321096181,-0.9958845104410552,-0.8110673078360123,0.9818916227887566,-0.8227380777278629,-0.24801777121073684,0.875297572495583,0.3433421170521138,-0.9191394164992839,0.9169169229024225,-0.3380722972320411,-0.4533760703431865,0.24258384392334562,0.5399594212847868,-0.9829380596902446,0.8077758114811423,-0.12462707178131385,-0.7449966098560405,0.025109855489548447,0.7105677497673489,0.07465744598212756,0.6597254400966799,0.9909329090180717,-0.5815346808235935,-0.1935736342452215,0.49755204412060466,-0.9677032448065098,-0.8957254124239833,0.9377573062160014,-0.3900611627435837,-0.8984716402529027,0.2963402991029879,0.4921507555825599,-0.9711426496600646,0.8394114441769923,0.9900786452443688,-0.7810590273630401,0.08085431911636028,0.6701972965345904,-0.9997815094306566,-0.7408359478372835,0.9968862505783738,0.8040961380661462,-0.13852628321093396,0.8159615130262345,0.23654915513596814,-0.869520149236161,-0.33221608207977754,-0.4408345198416691,-0.3512342975644629,0.34917329878074804,0.442808449925275,-0.2540344365489365,-0.5299723884992498,-0.23441069182572521,-0.8146875090931763,0.13634682455164382,0.7528297186541748,-0.036924991670694164,0.7393562186715853,0.9997330956694684,-0.6685626212460227,-0.9924518665921501,0.5911103792302747,0.18196307059077851,-0.8406052877647436,0.9706155196887605,0.8904072944188877,-0.9417969863514534,0.40091820478766604,0.39208626478281317,-0.938519194109326,-0.48182640538438304,0.96825558990983,-0.8457772619873627,-0.9883485063401383,0.5833232950323372,-0.09263058619195132,-0.6613774113330437,0.9994645729540103,0.7328444451644432,-0.027309438241654757,0.6351980830415944,0.1268099528098627,-0.8090709324875655,-0.22504748560280277,0.8636212262907167,-0.959088933739133,0.45141376967177166,0.34014226060486374,-0.36022550968762057,-0.4321789550497317,0.9527987637582167,-0.8742314041721273,0.24588558199242588,0.8214853688871356,-0.14804752532371046,-0.7605576331396469,0.9960815192023602,-0.7472635557648737,-0.9999363372425958,0.6773063828827308,0.9938321470001051,-0.7750153507478367,0.9913846319977577,0.8341439420998825,-0.9733921686387148,-0.8849647581276847,0.9457050674224801,-0.8942063999362687,-0.3811847488568781,0.9343728265432671,0.4714347286762652,-0.9652332339847263,0.4891839508874213,-0.20300311882608996,-0.5736813613429328,0.10439390982149539,0.6524651106217589,-0.9990079794125899,0.717304060889354,0.015491321433846903,-0.6442833496850955,-0.11507590301555551,0.8020672989456354,-0.9846621193162746,0.5480318425920446,0.9623684015282827,-0.46192994260672754,-0.32900269492738193,0.3712273856064393,-0.9228866706734481,-0.949143425795102,0.8799093470238052,-0.25732611410424333,-0.8281684409852843,0.9800236603209215,0.609161322464292,-0.9949665133829728,0.7550664763159104,0.9999998558304376,-0.6859555032245438,-0.05946612566158458,0.7674912540484154,-0.9928636663567657,-0.8275660399329651,0.9760328036699922,-0.5107011935648352,-0.275795402953366,0.8888523679249595,0.3702299692689758,-0.9300958973045977,-0.4609771775067395,-0.3108472298656154,-0.478840059837306,0.2145634255686994,0.563959266077812,-0.11614264629365492,0.7904759539410563,-0.09602025570511548,-0.7254900825447027,-0.0036710399945558865,0.6532785894042465,0.10332577344886189,0.6378241309955169,0.9866556928440265,-0.5578809977016945,-0.9655133957704696,0.47238156920191166,-0.960047302998678,-0.9081500044126136,0.9273739773081744,-0.3633996836342274,-0.8854643384873118,0.26873068955410595,0.5169998000893526,-0.9776042946039907,0.8234221507671277,0.993712479021136,-0.7627638900079297,0.052135485365592045,0.6912793953219638,-0.9999689602990319,-0.7598599143524131,0.9942039660080947,0.820872500406634,-0.1669710011918219,0.8322611753470921,0.26441396322328076,-0.8833741349003466,-0.359223456751064,-0.41481971147815055,-0.3780347635188916,0.32206053509003235,0.4684292595649303,-0.22609375096025974,-0.5541583677236334,-0.20633589216371284,-0.7976607729927883,0.10777954615055434,0.7335747301061689,-0.008149754406058805,0.7196722640791094,0.9986541012368827,-0.6468835961918066,-0.9885113991159157,0.5676521990501601,0.21018680269317752,-0.8558454953208177,0.9632880836199683,0.9031379141549398,-0.9317317002326587,0.374386775736687,0.41839900000027885,-0.9480659288586121,-0.5068454019599398,0.9750483264000988,-0.8300719858487936,-0.99231959134543,0.6064575912845707,-0.06393638464768028,-0.6826896671000386,0.9999922310210657,0.7521223980012799,-0.05606696101127764,0.61270709386839,0.15530465814653127,-0.8256498704078481,-0.252995576432751,0.8777724663462352,-0.9505440236306241,0.4255463524873664,0.36706492566692467,-0.3332288381900845,-0.45795300479099904,0.9611416485886899,-0.8598965287695568,0.21788772862462477,0.8047341334043081,-0.119523776357276,-0.7415568738907415,0.9982141854812341,-0.7278292029309021,-0.9991974065546035,0.6558526711264107,0.990228978830614,-0.7928813557537117,0.9872043526249137,0.849671704387205,-0.9663942621853873,-0.8979996267377165,0.93595923053408,-0.9067193190748909,-0.4076335346820707,0.9442398616201263,0.49662018136913355,-0.9723561128594908,0.5140823049219397,-0.17473870813072073,-0.597016460352772,0.0757283499784772,0.6740045453667887,-0.999875770947671,0.6969544805964892,0.04426101997346069,-0.6220062396883962,-0.1436166140892294,0.8189231958591626,-0.9792330233909551,0.5237319528567064,0.9541489768968652,-0.4362135311042954,-0.35604379714244433,0.344350578597772,-0.9114221980952081,-0.957811349054224,0.8658705027087437,-0.22940911922336862,-0.8116950468016605,0.9853414247662813,0.6317325285828812,-0.9974383229295503,0.7358844408391207,0.9996010921392138,-0.6647301025336178,-0.08817013203681842,0.7856227592500454,-0.9890202991056453,-0.8433791872281037,0.969365404662761,0.8927358601435097,-0.30334455608818484,0.9016708068038,0.39681110996330177,-0.940281853969659,-0.48632556710624086,-0.28336464572566544,-0.503907361391511,0.18636525532901088,0.5874919071879788,-0.08750973364448641,-0.6652252437106103,-0.06733389307335394,-0.7053825337432857,-0.03244889426006778,0.6312184714065354,0.13190850221229763,0.6153944259605669,0.9815610964066589,-0.5337651463481508,-0.9576206051318079,0.44681975678400454,0.34497291794847007,-0.9198222530102043,0.9162223791943132,0.9543472127383092,-0.8717234869338824,0.2408984540543643,0.5414205437858429,-0.9832560577811119,-0.6225252095761653,0.9965230864448197,-0.7438368522302206,-0.9998651015829672,0.7117888139552817,0.07638939059865223,-0.7782543862004708,0.9906980479196332,0.8369688231087727,-0.19527739452520487,0.4960446433509966,0.29205972148758713,-0.8964963023748294,-0.38593323808173496,0.936192458967064,-0.8977077290787981,0.29468096512952374,0.4936620059376242,-0.1979657613596204,-0.5778852626739206,0.9903212117603025,-0.7799732266650844,0.07912297938428109,0.713712022461816,0.02063223440164345,-0.6403425017803416,0.9967477866376397,-0.6246686700243357,-0.983752014044043,0.5437237558316823,0.960958423238309,-0.8703766903800275,0.9551626258368586,0.9151203426917291,-0.9208945348169568,-0.9507497236912292,0.8774546635964778,-0.9568272524617425,-0.5314445099855976,0.9810332985774818,0.6132309039509438,-0.9954686039147578,0.6290894767472518,-0.03518921595458698,-0.7034363587458219,0.9996914603677066,0.770777266201614,-0.9922373646318798,0.5897085165979821,0.1836707036444215,-0.8415448109485173,-0.28073407683274093,0.8911965288312163,-0.9412116494351292,0.3993263977438361,0.3936835012398415,-0.3059561082078288,-0.4833476701630683,0.20953860526202106,-0.844849284851593,0.189709369402259,0.7873162278737251,-0.09090100969246835,-0.7219417828569537,0.9995198960351286,-0.7077918907972883,-0.9976307056067281,0.6338556279598385,0.9858054701620648,-0.5536063897720659,0.9822062384596958,0.8644955687631215,-0.958595760750216,-0.9102905608864262,0.9254380121140457,-0.9184810800525048,-0.43374462255616036,0.9533246551994417,0.5213942164443235,-0.9786734577457153,0.8204936953864741,-0.14632953774633292,-0.61985696993784,0.04700005410799236,0.6949856110507892,-0.9999152302419568,0.6760275187094114,0.07299405112806549,-0.5992138378551706,-0.17203834811073287,0.8351006680067589,0.2693692046772774,0.49899818515903416,0.9451391017084385,-0.4101357449769512,-0.3827899401586968,0.31718849946362987,-0.8992026713256427,-0.9656857877184856,0.8511143408282534,-0.20130207376290538,-0.7945492159049015,0.10266633823158627,0.6537803852652816,-0.9990838195029629,0.7160927728204116,0.9983742237607762,-0.6429540160561626,-0.11680109517491886,0.8031034269381584,-0.9843575926682439,-0.8584936495542741,0.9618949492748029,0.9053335824687918,-0.3306424079282044,0.9137422698866857,0.42306351838364054,-0.9496888480898636,-0.5112710675084419,-0.2556473123510844,-0.5285572083719153,0.15801269355985592,0.6105378493480662,-0.05880432485543001,-0.6864377517090545,-0.038591748677345765,-0.6846906212521279,-0.061199866720784764,0.6086354298356729,0.16038195333505817,0.5924549065480311,0.9756533402487657,-0.5092071051820526,-0.9489344879172571,0.42088778317095443,0.37184289111918484,-0.9307324885156611,0.9043117502503464,0.9625483484583093,-0.8572604689971217,0.21286664980613515,0.5653927556694043,-0.9880932570721161,-0.6447902319426753,0.9985081391094188,-0.7242935938534164,-0.9989782372065938,0.7317085617111088,0.10505322544410556,-0.796004124754292,0.9863714007387895,0.8523717714129457,-0.22342201319969157,0.47084995916629835,0.3194635272108127,-0.9088757807947438,-0.41232329874991336,0.9459203391711751,-0.8846558505696648,0.26705727109754757,0.5184857853491663,-0.16967376996248554,-0.60113341715618,0.993905447541104,-0.7616395230952747,0.050400864360198104,0.6932580506864321,0.049397130741010035,-0.6179719760427195,0.994015731129773,-0.6019362463694464,-0.978177654218449,0.5193448727384441,0.9525972777251308,-0.8841868347895199,0.9462458777543215,0.9263446533641955,-0.9092944679931749,-0.9592764105068471,0.4699631098663915,-0.22440148159198486,-0.5556033506954492,0.9862055482806165,0.6357099808681076,0.1060525968408914,0.7323932079801541,-0.006412895277866894,-0.7236002989816531,-0.09329067642849558,-0.6455580765622267,-0.9882473812781428,0.5662214040603313,0.21188458987419184,-0.4812453688881646,-0.30824000725385226,0.903882292780354,-0.931099542419526,-0.9420196550242157,0.8901053423552739,-0.27842991342918494,-0.5083419133323573,0.9754324357504415,0.591644987461181,-0.992532950572981,0.769246081900681,-0.06220293743546925,-0.6839578081006664,-0.03758749240724075,0.7532659242800555,-0.9952375323091145,0.6113334765069129,0.15702025388030766,-0.529410071258879,-0.254675593367772,0.8786032546172279,-0.9500031248859582,-0.9218273783318587,0.9141501283096057,-0.33159070209998803,-0.4594963811359775,0.9616196811188222,0.5457363102202101,-0.9841800351328005,0.803701831539486,-0.11779914282844023,-0.6421839682170039,0.018232821740326602,0.7153909262213268,-0.9991263246059806,0.6545405118590667,0.9899852721520145,-0.5759250262123987,-0.20031755951639355,0.8505863134017536,-0.9659463080576042,-0.8987625035929891,0.9353462400603646,-0.38371818797952684,-0.40921896653096346,0.9448103276853007,0.49812700974380614,-0.9727602183260593,0.8356530859056115,-0.590271637267505,0.9923238558751084,0.07399631877728866,0.6752866272918918,-0.9999016399159991,0.035886215792195295,0.9963202670760222,-0.6206452838677874,-0.14533529617945756,-0.9808978686437637,0.5308535838244195,-0.8728969055595134,0.9536276262939963,-0.4346499314206105,0.9211661813350023,-0.9148389255675403,0.4489654461119136,0.8700330685191346,0.8650002785151003,-0.5443089603367933,-0.8106793286998722,0.12952922852018117,-0.9968037470473219,-0.9975610622019625,-0.019934937502495788,0.9995505292483486,-0.6634314869789923,0.7804095041192123,-0.9902241700584457,0.577315928493226,-0.8443111865959622,-0.49305535419157115,-0.48422721894807713,0.898014797003877,-0.9359470894961666,0.3984048165661983,0.8961870825445142,0.8916519576600274,-0.49665010807768967,-0.8420872663495578,0.18465849934155817,-0.9907927136566369,0.7778162398629267,-0.0756939695542372,0.9996659925275188,-0.7041503051998294,0.7443028134080516,-0.99646473537613,0.6219792415348627,-0.8130944255064403,-0.5408340377968095,-0.24157529641749279,0.8720650193810697,0.44526520632198563,0.34660267811687434,0.9195483988011578,-0.3443182077259564,-0.44744359498338077,-0.8708710920525075,0.2392123374333927,-0.9816941724736586,-0.1412412148491762,-0.13121712409334954,0.9966662971069158,0.031751813299688035,0.7058767266168149,0.6722297595693261,0.6647043431540554,-0.7793438999472986,-0.5869273746256546,-0.1870504315609044,-0.9717929376347882,0.49453574609427636,0.29372045656362233,0.9400442187662398,-0.38753499674701386,0.9368015475587701,-0.8969411096644877,0.29302074215086127,-0.969536476368179,-0.19626293341620168,-0.5793019100565101,0.9905607906360105,0.08747538647968664,0.6652509870992429,0.7124943497796292,-0.7363565037052251,-0.7431647832905468,-0.6311917286433737,-0.13194268023670697,-0.9834386990504264,0.23008790309766575,0.23992294346058773,0.9576106733751422,-0.3354905808163117,0.915819248860806,0.35539197398075345,0.43684101195111935,-0.9543575111471326,-0.2506730575216324,-0.5329150281891145,-0.8185227334935926,0.14292636890112675,0.6225521927658767,0.750538665429383,-0.6974544562780393,0.9998645346667844,-0.673489163290617,0.7718826935870267,-0.9920198692506581,0.17542537574456252,0.9745127662512115,0.9721930220502037,-0.28240070929410804,0.8919830746465854,0.406996570954541,-0.9326005215688479,-0.9362045774948635,-0.30430203436210224,0.9665733142634583,-0.8493037290422342,0.5696262968505263,-0.9888712831784466,0.7862441528398995,-0.6563790015994208,0.9992251007274993,-0.7136878713212601,0.7352035863979346,-0.9975097075969066,0.1202161879173644,0.9855123715493859,0.9837458232832832,-0.22843082081328464,-0.9609488824686916,0.4573328854037012,-0.9110082140103626,-0.9151342435747541,-0.35698274534498803,0.9507604103436951,-0.8774381247064621,0.5228755582509511,-0.9790287801699177,0.8194995465879595,-0.6132581389820856,-0.7582976061113347,0.04526499817106363,0.6962334381357325,-0.9998911066574774,0.0646323824614346,0.9934409236548792,-0.5978223873065343,-0.17374909631515945,-0.9748932625885224,0.5062440593286194,-0.8865770230801786,-0.4177654387520379,-0.40855102686328976,0.9319847472765556,-0.9028382480956264,0.47449543508056946,0.855484549011529,0.8502012162310724,-0.5682262416380148,-0.7934933693923663,0.10093845691380474,-0.9986900311489141,0.721917924284751,0.008847169605416382,0.9982737156173178,-0.6416227427381078,0.7980812097049003,-0.9857996807780645,0.5535776757519176,-0.8593830812440802,-0.4678129563921064,-0.3227207368396497,0.9103048337745344,0.3679995730512096,0.4246366894566455,0.8830470517526899,-0.2637412809765942,-0.5214236379447138,-0.8262164490057008,0.15629737128417834,-0.9942787062571393,-0.057070337300528816,-0.04696561279640083,0.9999956874926417,-0.05283196452461385,0.7632147231808829,0.6072563648566869,0.5991862336801694,-0.8295111302509368,-0.5164026755156056,-0.26940240944227867,-0.9483851097058326,0.41931158012678516,0.3734546911790435,0.9078578036829412,-0.46405709126209543,0.9630177888584344,-0.8563648733059059,0.21116923185903716,-0.9867690105245552,-0.11269165054793766,-0.6461168789233814,0.9986014732728958,0.002973603457945704,0.725969907292374,0.6506445696861408,-0.7909029390683022,-0.7970542570605038,-0.5633831808624599,-0.2152445703822251,-0.964603153616743,0.3115100433349471,0.32110893356693015,0.929839489548687,-0.4139050621052852,0.9464823624166744,0.27512494480680455,0.5113006994626832,-0.9761843456615019,-0.1679617941264568,-0.602520555349047,0.9940954176077818,0.05876990509879619,0.686462824317278,0.6920052362109324,-0.7555235682095518,-0.7621136037658828,-0.6086080718038145,0.8228514768024421,-0.9778153016301444,0.25800000529421996,0.2677625364457676,0.9489236100306824,-0.3624632221869451,0.9269975080784933,0.32834400178052975,0.46254840154937577,-0.9625576955956898,-0.22270853524043913,0.9847835637106173,-0.80165056902279,0.11438306798878203,0.6448165862091401,0.7312094763413234,-0.717789835159845,0.9989766783574803,-0.6519364185556061,0.7898600081339291,-0.9879803820565582,0.2036859877572996,0.9676529262818393,0.9650506952015804,-0.30989187454464157,0.9046239445378942,0.38053987332901223,-0.9426010657467901,-0.9459315236877002,-0.27676127212075347,0.9735517472540508,-0.8337590682297683,0.5930443850304593,-0.9927433154878449,0.7681351218425001,-0.6778193257605163,0.9999439637410371,-0.039323112826679,0.7544071780763785,-0.9950667184770996,0.14873724404030808,0.9802230378509904,-0.5279357418396036,-0.2563548419873836,-0.9525867873513336,0.4315499067016714,-0.9224992131953808,0.9134446503213856,-0.3299515656539381,0.9592861492966556,-0.8632694078171083,0.5471909382631613,0.8086608423465914,0.8026671050351704,-0.6357365960943177,-0.73922185932256,0.016496178448994345,-0.9994415099549391,-0.9990522284535192,0.09332500539279388,0.9897385788466652,-0.5745042336622876,0.8461491659200358,-0.9680810206807082,0.4812151444562972,-0.8995226690259704,-0.39144457420592765,-0.40155704204042914,0.9420312242881341,-0.8900896276783485,0.49963233534920126,0.8402273160276715,-0.1812772295038621,-0.591672784343812,-0.7756500522811982,0.07226406434107706,-0.9997489653182468,0.02750889059847744,0.03762194740699182,0.9961698969444501,-0.6192824556599229,0.8150917567587189,0.5379379222421741,0.5293808198021575,-0.8737430327347862,-0.44218300589289566,-0.3498267560271359,0.9218407420177522,0.341087150997143,0.4505167783848029,0.8691754737383416,-0.23587145095087594,-0.5457652021386293,-0.8096611649086008,0.12780676098955662,-0.9969410034220094,-0.028314035052945958,-0.018198348073776915,0.9994969508738876,-0.08154945632631876,0.7814943590450654,0.5841392898960005,0.5758968388841988,-0.8452406388124173,-0.4915435071030888,-0.29700634003983417,-0.9388656683248379,0.39301058147707607,0.39999732124567644,0.8954151072430421,-0.4893579650136024,0.9703731942131748,-0.8411492117914579,0.18295118626903642,-0.991026374435779,-0.0840487285215401,-0.667814920327134,0.9997093728710743,-0.025807069821442707,0.745461668974164,0.6285203629670355,-0.808186748997568,-0.8141043064055143,-0.5393722606656525,-0.24326039303419336,-0.9566142584341615,0.33872859016396434,0.3482313926406017,0.918864448608081,-0.43993223395865116,0.9553790780105362,0.24734206173353307,0.5358221253140246,-0.9820235095236444,-0.1395215093815071,-0.625240051431013,-0.7482614293997555,0.030015736662377158,0.7071059715980118,0.6709428411760696,-0.7740647304284021,0.9915803662797227,-0.5855202226410375,0.8388648142266256,-0.9713818476374189,0.2856983712160088,0.9428697193867384,0.9394504250068312,-0.38913558628137707,0.9374078099704916,0.3010240178658019,-0.9674494072235457,-0.9699604634090466,-0.19455951337899788,0.98937711522348,-0.7841142890373729,0.6589698536337174,-0.9993545621295348,0.7112745276162895,-0.7375305717072189,0.9972612346472916,-0.1236298586238724,0.8071829748813723,-0.9831224171800208,0.23177785913689014,0.9599914486090356,-0.4542716043278664,-0.3371263144715856,-0.9234643519015083,0.35376792309396393,-0.9518207260633041,0.8757831260491801,-0.24899123111161953,0.9797236557505368,-0.817523692093122,0.6159711743924623,0.7560509960877202,0.7493897407052166,-0.6986981205623901,-0.6796610602888964,-0.06806413366635777,0.7729857923261805,-0.9917993811046334,0.17713508100120642,0.9741216529268184,-0.5032750251198905,-0.2840664897978388,-0.9434355358497072,0.4054094168851414,-0.9332259816003353,-0.31227532318693774,-0.302647042485955,0.9670171818783858,-0.8483855282007795,0.5710530060647909,0.791395575904042,0.7851697058335962,-0.6576883866600655,-0.7195337151570622,-0.012286307287250142,-0.9980658087948479,0.6389809158087444,0.12194031460870432,0.9852162998039805,-0.5507101405133117,0.861136636187994,-0.9604667864210124,0.4557875740404626,-0.9117231187686639,-0.36479942321272024,-0.42774801808252316,0.9512972895149825,0.26042217106298854,0.5243553226259007,0.8242740091957569,-0.15289939139806383,-0.6146291645139088,-0.7571641593975718,0.04352980567689695,-0.9999796722970256,0.056266173359502306,0.06636555786467895,0.9932408161070969,-0.16548901247914208,0.8314270531454574,0.5134543697713145,0.5047454061700912,-0.8873791447794191,-0.4161867354459921,-0.37664296643124157,-0.9064104003329378,0.3138921603557566,0.4760236433751489,0.8545838402043724,-0.561309408040722,0.9873208002889444,-0.79243512903763,0.09921027108089152,-0.9987773996106787,0.0004657235366974126,-0.72833092811321,0.9981701958422053,-0.11019938969140868,0.7991265775076009,0.5605382934112657,-0.8550671824299717,-0.860269920312995,-0.46627712676833377,-0.32436422014359434,-0.928568437616963,0.4170335002314793,0.4262085794688798,0.8822306174486328,-0.5142534374227741,0.9769247082988944,0.16457033685005462,0.6052619282898438,-0.9944627372573919,-0.055336177573575375,-0.6889597203728459,-0.6895183207744633,-0.054566363616904534,0.7643358640015454,0.605875467882666,-0.8248010286109391,0.9770890866736137,-0.5149145055256635,0.8818673649096629,-0.9478328703686747,0.3656665223203748,0.37506536458600953,0.9071281880541813,-0.46559495048292393,0.9634843239883804,0.2193542718006379,-0.9853754432947125,-0.9870491305859784,-0.11096564011309647,0.9981232803924937,-0.728859006038706,0.0012367021344584775,0.7271633274324958,0.6493246135035681,-0.7919646302111512,0.9874428902088689,-0.5619473079409772,0.8541832065471449,-0.9641436667717151,0.3131600545629246,0.9328909172349061,0.9291989662231063,-0.4154855767754845,0.9470415302767236,0.2734546550717203,-0.9743317600493516,-0.976559681874091,-0.16624931157664008,0.9931510319510455,-0.7659284212081956,0.6803440063119444,-0.9999744592401518,0.6907503340666485,-0.75666031199999,0.9947196246700967,-0.15213743248996836,0.8238372428746876,-0.9774499991299387,0.2596777175894711,0.9515346802702556,-0.4284447771837298,-0.36408146710743683,-0.9120395699487149,0.3267028990741792,-0.9602518646276529,0.8615283255149809,-0.22101491701297007,0.9850839267269347,-0.8006110505886663,0.638387671578202,0.7369012328245003,0.7300235387608052,-0.7189980892774028,-0.6582689619103411,-0.09674876778480995,-0.9892412800283447,-0.9877104022566555,0.2053861730335522,0.9672132713786445,-0.4781973776759749,0.9010199006045087,-0.9335027091822824,0.3789330716548837,-0.9431796327931639,-0.28480562339828847,-0.5026086524754261,0.9739471034296991,-0.8327988161866151,0.5944419934799658,0.7734746895437073,-0.06883330431711095,-0.6790953250442759,-0.6992494839656341,-0.04105861461459419,-0.9958632748302406,0.1404437853849043,0.15045460418099704,0.9798778329417719,-0.526459819722888,0.8754107105919755,0.43909557488599227,0.4299824131743926,-0.9231682650267665,-0.33785205955224895,-0.45358463262831034,-0.8674695739572528,0.23252777434761338,0.5486439155188338,0.8076378447960273,-0.12439488606102247,0.9972039169331638,-0.7380510051050513,0.01475948539133807,-0.9993819609594785,0.08497684324439389,-0.7836355738548308,0.9894888996588002,-0.1938032095889134,0.8470735661312969,0.48854545364927293,0.4796918436984669,-0.9002801207433634,-0.3898456812757721,-0.40314715256050343,-0.8938785129663432,0.28643713041337876,0.501136153643993,0.8392842393729928,-0.5848950486279793,0.991480235395688,-0.774552612046511,0.07053159189577614,-0.9997863734879832,0.02924509630458977,-0.7477497366000662,0.9960165215281073,-0.13875803000785233,0.8160967714188279,0.536472927297699,-0.8696357007484777,-0.8745865239674975,-0.44062446606908756,0.9185599678253583,-0.9175019481701409,0.4430182520127255,0.4520667515208451,0.8683152567945799,-0.5387228842050287,0.9826669036109963,0.13611499946351902,0.6279205141385988,-0.9970752521856219,-0.02657778419068182,0.9997276620969499,-0.6683885824861848,-0.08328045271838322,0.7825768563278067,0.5827286442602357,-0.8407320140550834,0.9705591827596614,-0.49003017710670027,0.89507157646191,-0.938266264230879,0.3923015234741363,0.8991153537702276,0.8946404306178364,-0.49087195178152326,0.9707913856794865,0.19118476107725252,-0.9898712439377225,-0.9912570454473328,-0.08231784300725155,0.999472202177672,-0.7088527702529153,0.7398488327756488,-0.9970009651057254,0.6271684624932532,-0.8092084386515211,0.9824873817327205,-0.23512215576280146,0.8687939634692603,-0.9561067553965314,0.3403623051110261,0.9221392754500478,-0.35054891612614836,-0.44149136441076836,-0.8741177677631301,0.24565875282766597,-0.9804069421910288,0.8155381671197071,-0.13780138299982664,0.9961021874480188,-0.7471080313475196,0.701154538096822,0.6771342053551821,0.6696538986558959,-0.7751632082887646,-0.5922941548258276,-0.1805189703583685,-0.9733385203910159,-0.9709678271368469,0.2873624498914388,0.9422896271497014,-0.40226301132355125,0.9344561768044536,-0.899859222352048,0.29936722288706774,-0.9678874967882399,-0.20277397902922512,-0.573873015511968,0.9896281195463195,-0.7830351547432127,0.660275305973324,0.7171409946731331,0.7100525596518047,-0.7387024146977947,-0.6363315303813,-0.1253532518226802,-0.9846212647173447,0.22361649238117265,0.23346711593949596,0.9595036163526178,-0.4527235747126417,0.9131306190002548,-0.9227965360518738,0.3521428049461029,-0.9523519208192827,-0.2570999806184444,-0.5272808047138619,0.9800701729599505,0.1494996028667647,0.6173385242492362,0.7549130295578844,-0.04009348364381031,-0.6999396769865983,-0.6783859699185176,-0.06979690754211393,-0.9928357327176871,0.16887993564136133,0.1788442518697275,0.9737276008336697,-0.27602032647606856,0.8889595639869176,0.4130569676969769,0.40382103976056805,-0.933848626238747,-0.3106248073679454,-0.4790454817179757,-0.8527926982401852,0.2044407434491037,0.5724779925037461,0.7903326048119409,-0.6513516118848487,0.9989415114218122,-0.7183264234126046,-0.014023062170810986,-0.997956326470691,0.11361711532485261,-0.8011894450953824,0.98491725581905,-0.22195685330641682,0.8620183335948033,0.46323180929787533,-0.908247945266302,-0.9124352730045769,-0.3631816652375698,-0.4293173574153374,-0.8806061052139588,0.5172000922847259,0.5258335051049605,0.8232893459714121,-0.6079961415940845,0.9948182934184452,0.05190179547733115,0.6914484667316146,-0.9999670891844907,0.05800024140654789,-0.766549082916852,-0.6031356970674084,-0.16720171829398944,0.8323908820734973,0.5119631281506433,-0.8834837822791278,0.9467309188022822,-0.4146067765713313,0.9295555196791462,-0.9056753678532885,0.4686359918990289,-0.964399555335817,0.8536805532548646,-0.5627460340103916,0.9875950231130083,0.10754689962609953,-0.9983279894300756,-0.9988617549212554,0.002202627163017416,0.9986419371186789,-0.6467051275979652,0.7940598841476518,0.8001695344736153,0.559099067742195,-0.8559665075415812,0.9632252334972374,-0.31642453021443734,0.9075342792526235,-0.9279223653336274,0.4186115282538997,0.8861457688133608,0.8814115215963327,-0.5157422974979222,0.9772942096570592,0.16285686617640185,-0.9935470004418365,-0.9946437681231006,-0.05360185090625137,0.9999931260526121,-0.6882592959114578,0.7589044953972639,-0.9943607643358188,0.6044927430795547,-0.8257818703723679,0.9767179461687177,-0.262997521466752,0.8826849809282743,-0.9472777715718009,0.3672825875596229,0.9106237010702084,-0.32345036792949416,-0.46713140507847895,-0.8597770522039611,0.2176593382362649,-0.9856699207541086,0.7985455257230312,-0.10923929491272048,0.9982281368734339,-0.7276687109279644,0.7213842088121938,0.6556760041017925,0.6480026984128029,-0.79302393212376,-0.5688604899279105,-0.20875095996530682,-0.9663340809216501,-0.9636812712599152,0.3148091210372556,0.9322639481744021,-0.3757479966426288,0.9443168844369039,-0.886933399739675,0.27178354036781,-0.9747212969189415,-0.17450829687189887,-0.597204170968451,0.9933524696396014,-0.7648105650467868,0.6816159450920024,0.6967866517096044,0.04449479614030514,-0.7577947730676524,-0.6138669394412954,-0.15385388881975773,-0.9791855545348057,0.2515746563315946,0.26135464647870654,0.9509990747980064,-0.42687471962383583,0.9244848678887357,0.3346129716591347,0.32506081075759274,-0.9607352470328252,-0.22918134717591804,-0.5515161389963199,-0.8056049711444528,0.12098153966677738,0.6397236300815508,0.7357259730782683,-0.011320448119112196,0.9992551493670706,-0.6569604570842378,-0.09847737825761012,-0.9889856905795112,0.197176179821904,-0.8488964734264707,0.9667706985481731,-0.3035675283111497,0.9017719720263373,0.3866761695942801,0.4062922150521878,-0.943755354417893,-0.28314022267273414,-0.5041094726890187,-0.8374093390706807,0.5876812563581968,0.5958378085933401,0.7723726255126925,-0.6729190578220327,0.9998515476431019,-0.0326827768478209,-0.04279399253525582,-0.9957039498763938,0.142163262992595,-0.8180795828325924,-0.5335672479975102,-0.24992662016341297,0.8762489747652037,0.43753440743004174,-0.9199140369272095,-0.923834531807594,-0.3362167767396849,0.9573882962817513,-0.8666041724049779,0.5416172705490824,0.5500952376038282,0.8066124107316489,-0.630593549181471,0.9973322089925956,0.023139517330675614,0.7119531592646456,-0.9993193969889653,0.08670733706943877,0.990666177496406,-0.5799301727888417,-0.19550689079846298,0.8479954108574991,0.4870292007493908,-0.8965999547843317,0.9370710047138187,-0.38824561224373627,0.9397809950605042,-0.8930984942213215,0.4938654972540373,0.8438117015232742,0.8383386307324042,-0.5863029852169939,0.9917049841774794,0.07888970415605616,-0.9995780194803481,-0.9998207654626192,0.030981213782938128,0.9967289020509339,-0.6244859194461483,0.8112243303041322,-0.9818407244532096,0.5350063139004648,-0.8704918882804368,0.9550933145877473,-0.3435942696085798,0.9192451487406665,-0.9168097429264217,0.4445747405267372,0.8724420695478167,-0.24232336864908258,-0.5401853841633749,-0.813542995154467,0.13439405492213163,-0.9963996676811399,0.7448174844573054,-0.02484145314750647,0.9996856204656623,-0.6670956433724726,0.7773314548544585,0.5895195128549443,0.581316240625634,-0.84167119536019,-0.49731913218965645,-0.29065501077784445,-0.9411325721162727,-0.9376640295381202,0.3938986002003115,0.8983537340020514,-0.2960838620766612,0.9687463625677586,-0.844724067107986,0.1894796069969263,-0.9901163357021217,-0.09066796930197943,-0.6628544148973993,0.999527119016046,-0.7076265641659844,0.7410162594876347,0.6336746177953252,0.1287647062344473,-0.8102276870534304,-0.5449555610009877,-0.23681001293805476,-0.9585290963267152,0.3324693070745723,0.34199499323961524,0.9214659489692885,-0.3489216991112995,0.9533952867634009,0.2537747489411153,0.24397470280875086,-0.9807476036594768,-0.1460980459063413,-0.6200405814940896,-0.7526529698604437,0.036656687345355675,0.702391909598529,0.6758550661872128,0.07322743159271301,-0.7762593476060816,-0.5908937995472388,-0.18222706784637124,-0.9729386526141437,0.27932440699222466,0.28902566164045695,0.9417066921760241,-0.3830061133580003,0.9350732410109964,0.30735378000277436,0.2977095247654475,-0.9683226663916277,-0.20107285184817486,-0.575294577919851,-0.7882207317507405,0.09236325110604145,0.6615787663682557,0.7159294153369969,-0.7330270956731844,0.9977306522849921,-0.6349906951108727,-0.12707626685083678,-0.9843163379259742,0.2253090763230559,-0.863756550071419,0.9590128894277158,-0.3308632441334032,0.9138373204609752,0.3599750353585069,-0.9497621118117279,-0.952880242482295,-0.2554210746628388,-0.5287558416501565,-0.8213322405643005,0.6107231629187907,0.6187040116947177,0.7537727855765436,-0.6939290339542314,0.9999332716910335,-0.06143343311198666,0.7687532343316608,-0.9926266971245435,0.17059163761531018,-0.8342919946825611,-0.5090056947695266,-0.27768933902171805,0.8897537004790531,0.4114745366769105,-0.9308180394589598,0.904211834428635,-0.3089733544437405,0.9653033788117383,-0.8518843142327988,0.5655857540251431,-0.9881292333895948,0.7892672494131585,-0.6526685509032474,0.999019899502097,-0.005641930405641321,-0.9984568460880283,-0.997843833472392,0.115342601325974,0.9863328716570486,-0.556244213966816,0.8577396833178075,0.8628974304305875,0.4616918012359908,-0.9089733523656672,0.9266347880609043,-0.4217325279812458,0.9492279228261343,-0.8797817463985158,0.5186858670685334,0.8280179302425882,-0.15946249434412157,-0.6093742224182759,0.9949933819681721,0.050167153681603266,-0.9999999639576087,0.6857601163447811,0.05973413447616971,0.9939901417192205,-0.601749365203917,0.8277167297055725,0.5191448846387974,0.5104703420193449,-0.8842961229355842,0.9461701627987051,-0.37047936343020327,-0.9091970604341632,-0.9049376030963452,0.4701696514548262,0.8580156085998412,-0.21430118476969082,-0.5641809622655538,-0.7964705548713354,0.10581990690793802,-0.9984268824058015,0.7253052755101096,0.00393952414436462,0.9985499401652616,-0.6453793453497633,0.7951144456061909,0.5660285077842528,0.5576581553609292,-0.856863250339554,-0.47214491010513215,-0.31807171125959294,-0.9310141594267428,-0.9272734936573754,0.42018829339249414,0.8853395391176653,-0.2684720699432087,0.9754839604409034,-0.8289712828972687,0.16114290418970975,-0.9937425034686045,-0.06196938217607957,-0.6841285023123652,0.9999980577533802,-0.6869981946805691,0.7600344262421708,0.6111482731576884,0.1572513535225945,-0.8267602208823682,-0.5205991717285963,-0.26467288417067125,-0.9499300325298459,0.3594740088721704,0.36889754476622494,0.9099045749765221,-0.3218063425775573,0.9616838629162925,0.22583220902063936,0.21596374802858598,-0.9859614246054778,-0.11756676218325753,-0.6423633286035557,-0.7333922381572078,0.007881276937432588,0.7225859879534964,0.6543635785672864,0.10189940286636857,0.9884707827995892,-0.5674311424558736,-0.21044928356351314,-0.965885734108529,0.30684275549403106,-0.9032531562587759,0.9316341666231227,-0.40943247151782075,0.9448869665864922,0.2798399656695736,-0.9728144376353359,-0.9751078932107462,-0.172797780700941,-0.5985964225896838,-0.770183502591756,0.675459201712255,0.6828858275461008,0.6955397564984809,-0.7522993095212496,0.9953796000538334,-0.14556681432969543,0.8200527171921541,-0.9788315430129725,0.2532553188643011,-0.8779010604236228,-0.4344391732014015,-0.3578848612122197,0.9251456139320128,0.3329756851479769,-0.9583759239225422,0.8648828369643476,-0.22749032685497933,0.9839188124451793,-0.804574721554662,0.6332591249403279,-0.9975773683680637,0.7345484937648028,-0.7143641348785797,0.9991866158625324,-0.09013319576037737,-0.9901915024979534,-0.9887271175195051,0.1988786881280183,0.9688794206702086,-0.4840224633291323,0.8981177272359521,0.902521322946791,0.3850737859515875,-0.9409509196025088,0.891545993372743,-0.28147396775855016,0.9724187700860202,-0.83645872514543,0.5890856863785485,0.7776691472798767,0.7712682313573725,-0.6742028590519071,0.9998799668047982,-0.03441870416845964,-0.9964450487011476,-0.9955416210434639,0.14388231171652752,0.9811824529907895,-0.5320974428823351,0.8721795160528374,-0.954068575990865,0.4359719200029745,-0.9205937244655726,0.9154309145723153,-0.4476528577730904,0.9578884768089547,-0.865736156446938,0.5430765392755651,0.8115381997982689,-0.13098513709866944,-0.6319406325902357,-0.7425181271294278,0.0214030429733385,-0.9995934733082185,0.6645294970221718,0.08843756931235755,0.9904279250088829,-0.5785143006321433,0.8435234194684936,0.4943323439203418,0.48551147856054067,-0.8973677755937267,-0.39595596238151626,-0.3970575391223998,-0.8968376190358188,-0.8923157811414161,0.49537505731412607,0.8428783373568675,-0.18610146625475418,0.9905928397829022,-0.7787382903794237,0.0771580939626033,-0.9996269651998737,0.022602685608198315,-0.7433213388044586,0.9965870259888971,-0.6231283923880809,0.8122387355977344,0.5420685847981261,0.24015010871362855,-0.8713454496780155,-0.44657954657810967,-0.3452249099534427,-0.9201244618763356,0.43705149808534033,0.4461298878300767,0.8715918978336261,-0.24063786610847437,0.9814134331066076,0.14269476075377271,0.622735304285864,-0.996545420008696,0.7436573797256676,-0.7048358336244451,-0.673316167773916,-0.07665708943684572,0.77842295375785,0.5881156318047276,0.18560772826107486,0.9721381955142164,-0.49581149979989503,0.8920888373534278,-0.9405440132978045,0.3975186737118985,-0.9362867948123735,0.8975894040447762,-0.48507212285448903,0.9691757463476962,0.19770258175873845,0.5781043581828509,-0.9903584404443732,-0.08893808202114413,-0.664153919348354,-0.7135239385403711,-0.020900662597383657,-0.9974931759546063,0.6323299931537355,0.1304869570922623,0.9837037765659855,-0.5434984054571993,0.8654845491814993,-0.9580326419036075,0.998079119077017,-0.9152285581459672,0.719682643875825,-0.4355196414240192,0.09772955375994581,0.2520943220706157,0.5316719235484367,-0.20635052027128456,-0.9669625299149741,0.47733166648736325,-0.7515082263422607,0.03492089487711846,-0.999887625998129,0.9435066253395396,-0.8880641667394384,0.5034603488897754,-0.9741701075797483,0.8361832384609842,-0.9725358496374381,0.28099175579582597,0.06785015233351772,0.6798183692890929,-0.38460999389002537,0.0420432195714721,0.30570048617360734,-0.6158022018402123,0.8500779982807418,-0.9796806619509129,0.5256217294864336,-0.7871506645596485,0.655270472839584,-0.9991662266877608,0.9235466221628486,-0.9123333664713944,0.4544626636888587,-0.1187582889006316,0.8042762139226867,0.5533827803848734,0.22700098054360063,0.12341702401172429,-0.4586382506635758,0.7373857153755037,-0.9253362496356741,0.35835402656413196,-0.6588085153378381,0.7842473790512996,-0.9893459135649023,0.9787285754643128,-0.847596900640605,0.6120975994391612,-0.30122853990484316,0.9007086634328207,0.38893800516403687,0.4040487821472693,-0.0631669642667033,-0.9936077612043929,0.5989988692417925,-0.83874804648194,0.17859930361725448,-0.991608116713316,0.8858968046139817,-0.9450513617893738,0.9998062564135861,-0.9314514443592684,0.7484036971840012,-0.9959281659043696,0.1397338855312276,0.2109404963368075,0.5670173077847853,-0.24754986900979958,-0.10239926716066453,0.4397396167153435,-0.722933260464292,-0.007378798768181661,-0.9983588842833221,0.6427483581016915,-0.8678260365213236,0.5395528524843336,-0.9828491103105694,0.8586313047753877,-0.9618215053301398,0.3213305390152279,0.025592663510134336,0.7102278400645163,-0.4233067783900301,0.0842624448432856,0.26515742376550555,-0.5819275140257377,0.8270427960665668,-0.9703213518604777,0.48917091187809103,-0.7603608917100413,0.6866329669843529,-0.9999989218725792,0.9389394877149653,-0.894199707470364,0.4917302738719645,-0.1606469581009355,0.8286901384652298,0.5176595931391132,0.26798799105005994,0.08133569165945766,-0.4206442208545237,0.7081573283734152,-0.9084725008733453,0.3185480677539076,-0.6264006024972257,0.8097870224123584,-0.9823032855357573,0.9865298683812554,-0.8692815135106358,0.6449954286169567,-0.9985227632877935,0.9182763266896512,0.349625822695098,0.44237536560944796,-0.10532022210823427,0.7961666083320021,0.5645957747862868,-0.8149674845601295,0.13682526156435834,-0.9961886276480517,0.7464526334566655,-0.9303788143389023,0.999744136856396,-0.9460074016977692,0.7757854045279853,-0.9912241661706953,0.9758647305179889,0.16940917072757586,0.6013479557956635,-0.2883062016071036,-0.060235722425131887,0.4013606073342797,-0.6930645306078363,-0.04966528728850988,-0.9950434758971566,0.6097725633433405,-0.8460348416884708,0.9781218355402832,-0.9897692027176476,0.879542761400252,-0.9493858817770492,0.36109426793943983,-0.016710626036460598,0.7393662845277683,-0.46124601154791156,0.1263308737389475,0.22413983467249804,-0.547011406626759,-0.2344252250949666,-0.9592255511681472,0.4518446722360395,-0.7322103742576572,0.7167666602871807,-0.9990420153688357,0.9526520237628006,-0.8744657854376457,0.5281178817778774,-0.980265459459261,0.8516210361377891,-0.6181134802967511,0.3084954092781602,0.039108800659126135,0.7006431516564703,0.6776616204543685,-0.8899829464366159,0.2781720341691295,-0.5928716808720779,0.8345689250975847,-0.9735027239928613,0.992565663876495,-0.769074504280644,0.6767389716421169,-0.9999273405780728,0.93420063930993,0.3096879485889239,0.47991027251682555,-0.14728499849923363,0.8210454897996218,0.5291822776895259,-0.789728453879412,0.09480635652833522,-0.43287408594704935,0.7176404868255334,-0.9140412575961956,0.9978928715748306,-0.9588703807675534,0.801778763505248,-0.9847462680830101,0.9842275676820101,0.12757466985349075,0.6346024293291833,-0.3285465803829246,-0.01796437962281544,0.3622633215582148,-0.6619554899599095,-0.09186289463101843,-0.9899473341064755,0.5757055173994836,-0.8227295798419928,0.9684480177193766,-0.9949180005785745,0.8988801851171441,-0.9352512338150687,0.4002117812553146,-0.9415375171298753,0.7671815564132152,-0.49835979717474677,0.16817322044590327,0.18272112412042663,0.5904883392218871,-0.27533113863057745,-0.9464131169589848,0.41370980973378824,-0.7027494904703773,0.9052571225372227,-0.9962972196598715,0.9646596903022314,-0.8531669162715062,0.5635603680118394,-0.9877492823371178,0.873027869722926,-0.6508074248969261,0.34845074300568524,-0.003188079592359915,0.7301936585128218,0.6459531668475889,-0.8699006752990006,0.23729818290558072,-0.5582817539418419,0.8105221034480665,-0.9629599784529916,0.996825160268576,-0.7413535833463313,0.7072714201551966,-0.9995424442819337,0.9484531030861781,0.2691958558095094,0.5165863302642,-0.18898619312404416,0.8444550252881676,0.4928217540740394,-0.7630761223004081,0.05261778569366121,-0.3943604186699992,0.6875440481827675,-0.8960679293119094,0.9942557735999359,-0.9700173619347395,0.82633725630652,-0.9765060645111686,0.9908290276299894,0.08551186088867287,0.666721216059195,-0.36819899100981657,0.9292909467525485,0.32251772803122686,0.4680025064350739,-0.13389610380493697,-0.9830795789850652,0.5406081867787962,-0.7979519581628083,0.10825968346043927,-0.9982862895860699,0.9166089696026175,-0.9194428568613301,0.9986790336915301,-0.9549443027932801,0.7936238774096553,-0.5345817163055009,0.20971460374910125,0.14097541518354742,0.6240933756205997,-0.31574431856435176,-0.9319069784116063,0.3748345706592424,-0.6720309636524161,-0.07838876750958815,-0.991769446842018,0.9749409983697753,-0.830341216505264,0.5979943045722558,-0.9934654255256443,0.8928723294738072,-0.6823366821748956,0.38778248802283855,-0.045479254445073065,0.7584374081560709,-0.4865902692600377,-0.8482616267655847,0.1959996619553634,-0.5226927239648977,0.7850247685097628,-0.9506939162517102,0.9993007347473442,-0.7123059333570576,0.7365381331758709,-0.9973687632111806,0.9610082117576564,-0.8601429659360318,0.5523379032459332,-0.23034917737389116,0.8663533210082343,0.45557927486444155,0.3357434943178266,0.010335049879339604,-0.3551410025609081,0.6562171782238513,-0.8764909946193683,0.2504131346719881,-0.9794283965215013,0.849416932964232,-0.9665183021532959,0.9956572963653197,-0.90219746013237,0.6976468360887613,-0.4071924713902598,0.9440807318041733,0.2821949556112907,0.5049603068030692,-0.1756896920270524,-0.9744525010923384,0.5045433817911383,-0.7717463187723193,0.06611714812613748,-0.9998680418379398,0.9326973873598148,-0.9019890416444241,0.9956122191226664,-0.9666421166774342,0.8186459262437656,-0.5698469460626474,0.25088068103868605,0.09897741613360914,0.6565815322563426,-0.35559244132326584,-0.9157330957640393,0.3352885262808999,-0.6401097677905062,-0.12048272254384249,-0.9854667998338913,0.9834775484993172,-0.806029535093804,0.6313580683616765,-0.9974036593943095,0.9111189016734654,-0.9246763108385022,0.4264202560964359,-0.08768903945948815,0.7853238554696705,-0.5231043993732791,0.1964732347523781,0.15435037930098738,-0.48616828119805294,0.758122550405528,-0.9367264887783104,0.38733727100125653,-0.6819835380923377,0.7644867348886315,-0.9934101873933219,0.9718434966564621,-0.8378010025538786,0.5871010103176687,-0.2712999279025105,0.8867011876905732,0.41752148933626837,0.3752822781503248,-0.0319661815776381,-0.3152860248287399,0.6237159396286034,-0.8553454884717272,0.20924235588836101,-0.5341734936257426,0.8709764900055357,-0.9548008551450433,0.998703733200804,-0.9196326621895328,0.7273239448163892,-0.44545723865068776,0.9571809865624936,0.24136716607781616,0.5410144283790723,-0.21716886534067395,-0.13341747386340178,0.4675756441419978,-0.7441595593775906,0.023856289304338453,-0.9996604266246311,0.94711664649811,-0.8829210235752105,0.990763653324353,-0.9766100243322878,0.8422029233664236,-0.9698998715321939,0.9943073492781442,0.056802286741659574,0.687894668206459,-0.39480419456266047,0.053100073748448044,0.295142448342857,-0.6070430291722524,-0.16236106126192795,-0.97740055787538,0.5161727399434811,-0.7802753803101393,0.9482999329650486,-0.9995569360655335,0.9277349321902765,-0.9077452005967321,0.464294900936942,-0.12974189585162912,0.8108048843702336,-0.5586823799608196,0.23776732351221536,0.11242487064937735,-0.4487737899162277,-0.34292086182763304,-0.9210826921915329,0.34799800784799584,-0.6504406626204431,0.7910672083747355,-0.9876738011099633,0.9809395669175385,-0.8139597074664054,0.6208134392972183,-0.3117651590985971,0.9054622107193515,-0.7030930066075497,0.41414945546008036,-0.07421020624041139,-0.2748668100858389,0.5900984967312026,-0.832669252943292,0.16769711622760092,-0.49794102427445225,0.8909773443691474,-0.9413746930719703,0.9999628862220592,-0.6918113931790746,0.7556994319809283,-0.4829248140251699,0.9685682667641976,0.20010742499066653,0.5761003485766673,-0.25825939246716867,0.8803678883295972,0.42977113142842027,-0.7152410493430433,-0.018447262819111254,-0.997663815495081,0.6342291026125879,-0.8622729268478139,0.9841420133074846,-0.9848301871542383,0.8642527110903492,-0.9587331825728168,0.997924091346,0.014525503771847458,0.7179767453695621,-0.43330940478707114,0.09528713330452983,0.2544681824114395,-0.5728899241527208,-0.20394883803735958,-0.9675851563422768,0.47948650441729074,-0.7531248418828487,0.9340282341710302,-0.9999214020275949,0.9426906849159109,-0.8891895862597679,0.5013386419429204,-0.1715625656775501,0.8348348939162497,-0.593260540539879,0.27863590300965707,0.07029816604250196,-0.4105761714363126,-0.3823437169838257,-0.9037905226863483,0.3080359662008396,-0.61773375618544,0.8162319851226648,-0.9801698702187516,0.9882801441806369,-0.7886617471415585,0.6534148582997095,-0.3516724542379999,0.92260281529988,-0.7325392247493349,0.4522754694059591,-0.11632142404960558,0.8028155646350091,0.5554250114290856,-0.8085028695072066,0.12585176520091462,-0.46081743786457835,0.7390410175037788,-0.9262638434422983,0.9994325020442831,-0.6606526065751815,0.7827225167078867,-0.9897001792027007,0.9782221936914371,0.1584895709317684,0.6101552775061284,-0.2988877376505261,0.8996399312210185,0.3911974987431339,-0.6850425413388621,-0.060717801654278,-0.2878437122098022,0.6009620041975541,-0.8400817033708419,0.9757591491829926,-0.9912878943101591,0.8847558290356563,-0.9458507412412274,0.9997549448495109,-0.027777274092067778,0.7467739287515245,-0.4710391629329689,0.9651159076583982,0.21333851930011696,-0.5377115732522195,-0.2451716272343562,-0.9560381609126772,0.4419421781080214,-0.7246265085137319,0.9180849950698413,-0.9984964050308895,0.9559593949811813,-0.8690426750221605,0.9864507496065643,-0.21307620651522413,0.857370879915695,-0.6267769999091819,0.31900583468697286,0.02804565558333936,0.7084982442266052,-0.4210823284407912,-0.8848809263918657,0.2675226622741016,-0.5839213511854173,-0.19069151310772137,-0.9709118237815588,0.9938520917221293,-0.7619523949006624,0.6848469237077438,-0.9999995144382272,0.9380923265441868,-0.7606744880441944,0.48959208953546407,-0.15822447261747172,0.8273141920595297,-0.5823202114912562,-0.7828895864107017,0.0837811893998953,-0.4228691709006725,0.7098877646985587,-0.9094953486871954,0.9971135298449192,-0.6283115136763319,0.8083448383870683,-0.9827599316779054,0.9861254906416557,0.11658808336331829,0.6431182703434334,-0.33898119225721357,0.917301975236645,0.3519237775987511,-0.653618078724229,-0.10287967969192831,-0.24708190906699057,0.5666194220055382,-0.8163870666381164,0.9656300629548429,-0.99597158906396,0.90367558474829,-0.9312756020010411,0.999796633286623,-0.07003034164577016,0.774234682808778,-0.5079259476886703,0.9753259257670718,0.1718270648027999,0.5993855321249629,-0.2859556564002275,-0.9427802361313787,0.40360695047787076,-0.6948313809232929,-0.047214293156501386,-0.9952844952551982,0.967517316654549,-0.8473405218691522,0.9786293768767407,-0.9894161098367448,0.8783725118864903,-0.659171776891779,0.3588048723683753,-0.014257045482523881,0.7377118574729423,-0.4590673694393105,-0.8643877439900284,0.22653059882306545,-0.5490639584226961,-0.23203902566010734,-0.9599162300317844,0.9976454379645361,-0.7338794498971215,0.7150533845833464,-0.9991463921740641,0.9519030243669085,-0.787448445523143,0.5260325338902008,-0.1998443620966882,0.8503322550127322,-0.6161826571283574,-0.7558752412778754,0.04156067847920702,-0.3841641357385895,0.6794640941812725,-0.8910992177655437,0.9930101196650053,-0.9726481474185379,0.835918259673725,-0.974060933423771,0.9922640138460369,-0.8882860907902507,0.674930336397341,-0.37846800489580945,0.03540355946365884,-0.7518267609936022,0.4777560018161994,-0.14485744388258504,-0.20587792724577456,0.531262815645882,-0.7912314206572613,0.629940266901837,-0.8594567081847005,0.7193472370410268,-0.9857754879635473,0.8670237450294471,-0.9581709759904503,0.8003098636765094,-0.9164655938138356,0.7218182664533616,-0.4382908840939928,0.10079518353841889,-0.3262279382888224,-0.020417802431201598,-0.20936407706266802,-0.6637927805796657,0.8813009645929345,-0.7494721555907612,0.9320369400875439,-0.8241219650525436,0.9445229957632847,-0.994667928372156,0.8978022052320771,-0.9748611858702809,0.8378689581752237,-0.05653423208820985,0.2839471372615509,0.06477608851530056,0.16575379062124987,0.1851331353927918,0.04512113748361386,0.7781196875599561,-0.6133718818914837,0.8484514177946029,-0.7044931515748817,0.9062969596389727,-0.8773690365189364,0.9640101930932545,-0.8128131824150086,0.9247236992919875,-0.7362956080417992,0.457204815139923,-0.12181676432150522,0.3461496123715573,-0.0007342095820534606,0.23000031796677578,0.6478244522627502,-0.8711083724597971,0.7353011939536946,-0.9241637648094128,0.8119569162689322,-0.9512589086080504,0.9966267777812453,-0.9069165972174499,0.9793559941843546,-0.8492276978553656,0.9476725722347361,-0.30416485286754497,-0.043654165619951314,-0.18657597066757778,-0.16430550554109677,-0.06624135350860778,-0.7646597840633362,0.5965290430452219,-0.8370664870051482,0.6893238399734518,-0.8971545472613235,0.9945154185683305,-0.9694180629120369,0.824952807116698,-0.9325680362653892,0.7504434934553526,-0.4759141694535061,0.14278383807674594,-0.3659164014787686,0.02188589307252796,-0.25053364500836434,-0.09933413446730928,0.43697054803684937,-0.7208012210932797,0.9158770715697518,-0.7994285565856181,0.9577496867912787,-0.998139685584261,0.9156251885029477,-0.9834125887210133,0.8602064497888938,-0.9542131548557748,0.32424646961885956,-0.532506297640202,0.20731466711716803,0.14340435703361076,0.08733192977654253,0.75085773281411,-0.5794192867074219,0.8253070100145202,-0.6738460897597394,0.8876107022223999,-0.9920806463487171,0.9743921656902687,-0.8367233058948802,0.9399950947779502,-0.7642555922091454,0.8917646380132729,-0.1636870230669115,0.385519460941742,-0.04302778369918954,0.2709548705305865,0.07826467166890241,-0.4178472059874721,0.7059787250362578,-0.9071805682573864,0.7865424918291385,-0.9514520753690294,0.9992059748291581,-0.9239240824210604,0.9870291543531473,-0.8708003015227429,0.9603267738869327,-0.3441830019768495,0.5502906419929385,-0.2279606004204352,-0.12243904210924815,-0.10838342928887096,-0.7367197095533256,0.5620502686549413,-0.8131782486119592,0.6580668264678987,-0.8776696949248037,0.7443989802049836,-0.9789302757608985,0.9996697038751174,-0.9470015515852271,0.7777257240663643,-0.9011363314228873,0.18451696614186142,-0.4049500193527492,0.06415042150283214,-0.2912548570365273,-0.057160189268212175,0.3985368978056513,-0.6908403381226833,0.506660503068851,-0.7733044878815082,0.9447287358045596,-0.9998251684037925,0.9318095656237574,-0.9902040728450011,0.8810045128278099,-0.9660106937835197,0.8172342058179609,-0.567828758270965,0.24850453253475246,0.10141894171824789,0.12938643253197768,0.22113631527592878,-0.5444297606715398,0.8006856298233691,-0.6419931105443997,0.8673359734817697,-0.7301086042932714,0.9830303625422296,-0.9989024524753822,0.9535842716414124,-0.7908478618036108,0.9101048105180916,-0.2052643469236204,0.4241993824898227,-0.08524435513894378,0.3114245212777857,0.03603013048609811,0.1940665983129217,0.6753928340382772,-0.48831117160409143,0.7597204681002702,-0.9375826764625955,0.8328677178883981,-0.9392781097440288,0.9929359235762553,-0.8908145178199749,0.9712623712701355,-0.8292413032858182,0.5851127990273585,-0.26893727105802273,0.48261087139343295,-0.1503315416919494,-0.20045864637184801,0.5265656470703877,-0.7878347434829897,0.6256321341888242,-0.8566141617268529,0.7154915405874267,-0.9866905914465056,0.9976882412167523,-0.9597403095021131,0.9985758231797284,-0.9186660623443262,0.7256376760300033,-0.443258937206994,0.10630014610671974,-0.3314548383187827,-0.014883949987596106,-0.2147729026242229,-0.6596431247835344,0.4697433448379979,-0.7457965106680834,0.5731837132073656,-0.8209744234286461,0.946326372974656,-0.9952234841776842,0.9002259270031102,-0.9760794564786597,0.8408773559384508,-0.6021350305015317,0.2892496733418276,-0.5010284301941097,0.17120938485963574,-0.39254847268899506,-0.5084659211662224,0.7746313397322195,-0.6089912181357098,0.8455090571449901,-0.7005543295066018,0.9039438872553395,-0.9960276133992181,0.9654669106422936,-0.9994808880979166,0.9268162561612636,-0.7400294363417342,0.4621201552882536,-0.12730837297232878,0.35133684557497763,-0.006268890348580502,0.23538310659458148,0.6435982575809422,-0.4509653309624372,0.7315388458730343,-0.5557230798770978,0.8087137831769777,-0.9529512015635073,0.9970657310781063,-0.9092345292331647,0.980459793999703,-0.8521371572129568,0.949424974559604,-0.3094326505823144,0.5192218033439185,-0.19201062022411902,0.4119146716401459,-0.07176287618713209,-0.7610813264467104,0.5920778083788794,-0.8340256287258605,0.6853036547201985,-0.8946960389421521,0.9939213120722868,-0.9707615126887902,0.9999387343356368,-0.9345517451568759,0.9912406134885713,-0.48077459726350996,0.14825963558454266,-0.37106164682318493,0.02741892566376764,-0.25588798816849484,-0.6272654117216954,0.4319855322176995,-0.7169538533208882,0.5380137877225866,-0.7960912831686142,0.6361243930601461,-0.9984618399623817,0.917836293602444,-0.984401423847047,0.8630156689004737,-0.9558541185922488,0.32947717188698994,-0.5371828502006218,0.2127259402527164,-0.4310965589770278,0.09284413907752757,0.7471907665928823,-0.5748994728397245,0.8221690147405067,-0.6697463401572538,0.8850478580295922,-0.9913702797025042,0.975621746566847,-0.9999491570291519,0.9418690680792045,-0.9938123378603909,0.8942554255147024,-0.169144559280843,0.39062041618219795,-0.048556692354410555,0.27627837241706754,0.07274575645099596,-0.4128124411329078,0.7020480590805291,-0.5200637607835646,0.7831125713532715,-0.6196615908461217,0.9994111861402534,-0.9260273712432442,0.9879025823346421,-0.8735080234005297,0.9618555647842175,-0.34937426831560203,0.5549035340766044,-0.23334607585564446,-0.11694411610137141,-0.1138838587689866,-0.23634075950811925,0.5574638979809323,-0.3522593071917318,0.6538893469530663,-0.8750036616054478,-0.9027569625602001,-0.9271858597500899,-0.9661841814657925,-0.9487649507851008,-0.9278518918591915,0.7418878565991018,0.6998507689389212,-0.41000440206193783,-0.3539264361482756,-0.2965451356433421,-0.05163366938270045,-0.11211336702133046,-0.6868281327638633,-0.7296492611232127,-0.7697834550679794,0.9428996997454067,0.9613665840340517,0.9762932345455879,-0.9909617028657703,-0.9810004330508696,0.8535821035904874,0.8204113640033143,0.7842194584320055,0.25386180053348206,0.19472574969760326,0.1561106841185919,0.2157352576452793,0.2745653857869146,-0.5898453810671298,-0.6377397703344296,-0.6832856820142627,0.8934565023114505,0.9190549058607576,-0.9986279133311692,0.9552363077052447,0.935532867796571,-0.7559047023523355,-0.7148027326026839,-0.6710685008002875,0.37363001679918617,0.31667920946470574,0.030498478779596005,0.09106978444848383,0.15130572551001692,-0.48347373370215163,0.7561098984385838,-0.9356435573481255,-0.9553290035413246,-0.9714964493559407,0.9935774166340207,0.984884535054224,0.9725648148101166,-0.832321891140003,-0.7971683857663281,0.5395149645804683,-0.21542914350502074,-0.1558010343851583,-0.19503322483482097,-0.2541650039612624,0.5726329531310395,0.6213048364448666,0.667688763838036,-0.8837562640951806,-0.9105127199737241,-0.9339162114999888,0.9999174225592625,-0.942795238656402,0.7695833178226583,0.7294348570992588,0.6866002515043916,-0.3931664163412973,-0.33667158487054694,-0.009349641602956728,-0.06998545261337864,-0.13036354209762843,0.4648501058024162,-0.7420980197110918,-0.7813886085923984,0.9488639601711536,0.9662649671497383,-0.9957485532357628,-0.9883279495292573,-0.9772678267798678,0.8438599950494817,0.8097606193430826,0.7726792990345095,-0.5058106505382763,0.17665973442950222,0.17424392422114932,0.23365089576120301,0.2921974475540313,-0.6045918991112837,-0.6517930876850607,0.8736605882922692,0.9015631242982447,0.9261456528504106,-0.9994218932004523,-0.9996438923886166,0.9288804218062741,-0.7437405952705284,-0.7018247822684819,0.412526893193926,0.356513316253346,0.29918687853192516,0.04886980572048453,0.1093630273934941,-0.4460184802777057,-0.4994855202134944,-0.5511132040293559,-0.9419743467133856,-0.9606011287587034,-0.9756904958170238,0.9913291357168651,0.9815335593247089,-0.8550205129961075,-0.8219905247552972,-0.7859335552686949,0.5239440184969969,0.47131566922971185,-0.15337665799673145,-0.21303224024409456,-0.271903330971729,0.587608436553495,0.6356057660908533,0.681262476514327,-0.8922101233394741,-0.9179606894416009,0.9984791715584975,0.9999846834666112,0.9978077503929731,0.7577135460002489,0.7167352808616887,-0.43170278449316535,-0.37619552541139545,-0.31930292578630226,-0.027732291986223765,-0.0883135780980281,-0.14856964933618033,0.48104945161562035,0.5333401546025632,0.9346632459321599,0.9545074684727477,0.9708367159387803,-0.993886750733414,-0.9853601037385278,-0.9732048667969921,0.8338526297200837,0.7988361447809769,-0.5418429472029198,-0.4898654096874137,-0.43608394212231566,0.1923182632470923,0.2514875509836126,-0.5703620480380852,-0.6191340420879615,-0.6656260741704059,0.8824579021066479,0.9093649836432747,0.22050287689710524,0.13003041669972346,0.18993170896510214,0.9219139788881936,-0.5683632482188326,-0.688609588452448,0.39570940552136025,0.33927610064077646,-0.9902945481103215,0.06722461280747433,0.9626998762829689,0.9445156055968598,-0.7728925377106455,0.7796586617377118,0.4528546228829238,0.3979411501627705,-0.9795547217641181,0.9887457478303623,-0.3493531863656495,-0.40554377026389676,-0.8113812942953226,0.7386033388932397,0.508195959398463,-0.1793828902820368,-0.11938079963725166,0.9962139667396317,-0.28954974431002095,-0.877358240566665,0.6496918368022033,0.6106697127084074,-0.9003623816122225,-0.24108477337320514,-0.18177429479991278,-0.16912238371013744,-0.9299018381257397,0.5508328165871668,0.7037934208263967,0.6594074832386919,-0.35909746607913307,0.9871332129381408,-0.04610556779954655,-0.10661185023282393,-0.9512519696019248,0.4970861844095668,-0.7662388414264671,-0.8038026646988772,-0.4172570624416915,0.9750802849761256,0.01700157050904077,-0.9820591687383897,0.38611864609956237,0.8235633904725689,-0.7241787782448766,-0.5262991163408383,-0.47375457568800544,0.140354677943588,-0.9978299293258509,0.26923919384433287,0.3271593226023867,0.8577049811064734,-0.6272829344705249,0.8909569115713439,0.91685944302121,0.20253309675013503,-0.9999961708593216,0.9374736118953559,-0.5330559142842497,-0.5833939810341283,-0.6751616183929489,0.8605374633377737,-0.9835301840645665,-0.9926824053892515,0.08555669541734366,0.9575626950022864,-0.4786214855170421,-0.5309972023832538,0.7910396800994286,0.4363862726484636,-0.9701695475808978,0.7811859179789102,-0.771340297457971,-0.46456256402188045,-0.8353769824221159,0.06966150978007332,-0.9906310807467553,0.3369773451504971,0.8523070523241386,-0.10110706759638993,-0.5703712885631387,-0.30709827881695906,-0.868388150367813,0.6635582869510215,0.5960076575388856,-0.9082102831399245,-0.22320127507227366,-0.6396193028669817,-0.18721399770618155,-0.9229825081837675,0.5660841518364857,0.6906136518345309,0.15612179604090384,-0.3418780181391697,-0.5397883555423869,-0.7130924100385029,0.8325018456734983,0.37136317921619755,0.5129548831583508,0.03293987457587776,-0.8146039904770865,-0.4316926369128128,0.9789942397739657,-0.001383679998839531,0.4831894482062653,0.4030126434784963,-0.09074639368986948,-0.7367349236385308,-0.5105773763510081,0.9463191005415215,0.12212790921632571,0.3381269750715174,0.28689982361260186,0.06844311233880541,0.9623687059345131,-0.4634806961659036,-0.2565266551765985,-0.8933106003901682,0.6232169465473987,0.6374896086579838,-0.884896647026218,-0.7603031619166475,-0.47969346694405435,0.9572099679990536,0.8697571164291646,0.30446347032354587,-0.9947346982421911,0.8611589424160517,-0.6742601895077784,-0.4946830417797804,-0.7490420245941898,0.8021532969490937,0.9905475016208241,0.6097021177687517,-0.9008931530840377,-0.23989930489038738,0.5100522194128487,0.9668911821992081,0.051309364436762275,-0.4035714375994798,0.3542301338154408,0.9976340766084587,0.22260598252962827,-0.8689223841669775,-0.7250204702064496,0.8228700182335728,0.7818586772971278,-0.37079612308757387,-0.9438905331915157,0.16749547278730292,1.0],"x":[1.8110048645192806e18,1.8105520000870428e18,1.810099135654805e18,1.809646271222567e18,1.809193406790329e18,1.8087405423580913e18,1.8082876779258534e18,1.8078348134936156e18,1.8073819490613775e18,1.8069290846291397e18,1.8064762201969016e18,1.806023355764664e18,1.8055704913324262e18,1.8051176269001882e18,1.8046647624679503e18,1.8042118980357123e18,1.8037590336034747e18,1.8033061691712369e18,1.8028533047389988e18,1.802400440306761e18,1.801947575874523e18,1.801494711442285e18,1.8010418470100475e18,1.8005889825778094e18,1.8001361181455716e18,1.7996832537133335e18,1.7992303892810957e18,1.798777524848858e18,1.79832466041662e18,1.7978717959843822e18,1.7974189315521441e18,1.7969660671199063e18,1.7965132026876685e18,1.7960603382554307e18,1.7956074738231928e18,1.7951546093909548e18,1.794701744958717e18,1.794248880526479e18,1.7937960160942413e18,1.7933431516620035e18,1.7928902872297654e18,1.7924374227975276e18,1.7919845583652897e18,1.7915316939330516e18,1.791078829500814e18,1.790625965068576e18,1.7901731006363382e18,1.7897202362041004e18,1.7892673717718623e18,1.7888145073396247e18,1.7883616429073866e18,1.7879087784751488e18,1.787455914042911e18,1.787003049610673e18,1.786550185178435e18,1.7860973207461972e18,1.7856444563139594e18,1.7851915918817216e18,1.7847387274494835e18,1.7842858630172457e18,1.7838329985850079e18,1.78338013415277e18,1.7829272697205322e18,1.7824744052882941e18,1.7820215408560563e18,1.7815686764238182e18,1.7811158119915807e18,1.7806629475593428e18,1.7802100831271048e18,1.779757218694867e18,1.7793043542626289e18,1.7788514898303913e18,1.7783986253981535e18,1.7779457609659154e18,1.7774928965336776e18,1.7770400321014395e18,1.7765871676692017e18,1.776134303236964e18,1.775681438804726e18,1.7752285743724882e18,1.77477570994025e18,1.7743228455080123e18,1.7738699810757747e18,1.7734171166435366e18,1.7729642522112988e18,1.7725113877790607e18,1.772058523346823e18,1.771605658914585e18,1.7711527944823473e18,1.7706999300501094e18,1.7702470656178714e18,1.7697942011856335e18,1.7693413367533957e18,1.768888472321158e18,1.76843560788892e18,1.767982743456682e18,1.7675298790244442e18,1.7670770145922063e18,1.7666241501599683e18,1.7661712857277307e18,1.7657184212954926e18,1.7652655568632548e18,1.764812692431017e18,1.764359827998779e18,1.7639069635665413e18,1.7634540991343032e18,1.7630012347020654e18,1.7625483702698276e18,1.7620955058375895e18,1.7616426414053517e18,1.761189776973114e18,1.760736912540876e18,1.7602840481086382e18,1.7598311836764e18,1.7593783192441623e18,1.7589254548119247e18,1.7584725903796867e18,1.7580197259474488e18,1.7575668615152108e18,1.757113997082973e18,1.7566611326507348e18,1.7562082682184973e18,1.7557554037862595e18,1.7553025393540214e18,1.7548496749217836e18,1.7543968104895457e18,1.753943946057308e18,1.75349108162507e18,1.753038217192832e18,1.7525853527605942e18,1.7521324883283564e18,1.7516796238961183e18,1.7512267594638807e18,1.7507738950316426e18,1.7503210305994048e18,1.749868166167167e18,1.749415301734929e18,1.7489624373026913e18,1.7485095728704532e18,1.7480567084382154e18,1.7476038440059776e18,1.7471509795737395e18,1.7466981151415017e18,1.746245250709264e18,1.745792386277026e18,1.7453395218447882e18,1.7448866574125501e18,1.7444337929803123e18,1.7439809285480745e18,1.7435280641158367e18,1.7430751996835988e18,1.7426223352513608e18,1.742169470819123e18,1.7417166063868849e18,1.7412637419546473e18,1.7408108775224095e18,1.7403580130901714e18,1.7399051486579336e18,1.7394522842256955e18,1.7389994197934577e18,1.73854655536122e18,1.738093690928982e18,1.7376408264967442e18,1.737187962064506e18,1.7367350976322683e18,1.7362822332000307e18,1.7358293687677926e18,1.7353765043355548e18,1.7349236399033167e18,1.734470775471079e18,1.734017911038841e18,1.7335650466066033e18,1.7331121821743654e18,1.7326593177421274e18,1.7322064533098895e18,1.7317535888776517e18,1.731300724445414e18,1.730847860013176e18,1.730394995580938e18,1.7299421311487002e18,1.7294892667164623e18,1.7290364022842243e18,1.7285835378519867e18,1.7281306734197486e18,1.7276778089875108e18,1.727224944555273e18,1.726772080123035e18,1.7263192156907973e18,1.7258663512585592e18,1.7254134868263214e18,1.7249606223940836e18,1.7245077579618455e18,1.7240548935296077e18,1.7236020290973699e18,1.723149164665132e18,1.7226963002328942e18,1.7222434358006561e18,1.7217905713684183e18,1.7213377069361805e18,1.7208848425039427e18,1.7204319780717048e18,1.7199791136394668e18,1.719526249207229e18,1.7190733847749908e18,1.7186205203427533e18,1.7181676559105155e18,1.7177147914782774e18,1.7172619270460396e18,1.7168090626138015e18,1.716356198181564e18,1.715903333749326e18,1.715450469317088e18,1.7149976048848502e18,1.714544740452612e18,1.7140918760203743e18,1.7136390115881367e18,1.7131861471558986e18,1.7127332827236608e18,1.7122804182914227e18,1.711827553859185e18,1.7113746894269473e18,1.7109218249947092e18,1.7104689605624714e18,1.7100160961302333e18,1.7095632316979955e18,1.7091103672657577e18,1.7086575028335199e18,1.708204638401282e18,1.707751773969044e18,1.7072989095368061e18,1.7068460451045683e18,1.7063931806723305e18,1.7059403162400927e18,1.7054874518078546e18,1.7050345873756168e18,1.704581722943379e18,1.7041288585111409e18,1.7036759940789033e18,1.7032231296466652e18,1.7027702652144274e18,1.7023174007821896e18,1.7018645363499515e18,1.701411671917714e18,1.7009588074854758e18,1.700505943053238e18,1.7000530786210002e18,1.699600214188762e18,1.6991473497565243e18,1.6986944853242865e18,1.6982416208920486e18,1.6977887564598108e18,1.6973358920275727e18,1.696883027595335e18,1.696430163163097e18,1.6959772987308593e18,1.6955244342986214e18,1.6950715698663834e18,1.6946187054341455e18,1.6941658410019075e18,1.69371297656967e18,1.693260112137432e18,1.692807247705194e18,1.6923543832729562e18,1.691901518840718e18,1.6914486544084805e18,1.6909957899762427e18,1.6905429255440046e18,1.6900900611117668e18,1.6896371966795287e18,1.689184332247291e18,1.6887314678150533e18,1.6882786033828152e18,1.6878257389505774e18,1.6873728745183393e18,1.6869200100861015e18,1.686467145653864e18,1.6860142812216259e18,1.685561416789388e18,1.68510855235715e18,1.684655687924912e18,1.6842028234926743e18,1.6837499590604365e18,1.6832970946281987e18,1.6828442301959606e18,1.6823913657637228e18,1.681938501331485e18,1.681485636899247e18,1.6810327724670093e18,1.6805799080347712e18,1.6801270436025334e18,1.6796741791702956e18,1.6792213147380575e18,1.67876845030582e18,1.6783155858735818e18,1.677862721441344e18,1.6774098570091062e18,1.676956992576868e18,1.6765041281446305e18,1.6760512637123927e18,1.6755983992801546e18,1.6751455348479168e18,1.6746926704156787e18,1.674239805983441e18,1.6737869415512033e18,1.6733340771189652e18,1.6728812126867274e18,1.6724283482544893e18,1.6719754838222515e18,1.671522619390014e18,1.671069754957776e18,1.670616890525538e18,1.6701640260933e18,1.6697111616610621e18,1.669258297228824e18,1.6688054327965865e18,1.6683525683643487e18,1.6678997039321106e18,1.6674468394998728e18,1.666993975067635e18,1.666541110635397e18,1.6660882462031593e18,1.6656353817709212e18,1.6651825173386834e18,1.6647296529064456e18,1.6642767884742075e18,1.66382392404197e18,1.6633710596097318e18,1.662918195177494e18,1.6624653307452562e18,1.662012466313018e18,1.6615596018807805e18,1.6611067374485425e18,1.6606538730163046e18,1.6602010085840668e18,1.6597481441518287e18,1.659295279719591e18,1.658842415287353e18,1.6583895508551153e18,1.6579366864228774e18,1.6574838219906394e18,1.6570309575584015e18,1.6565780931261637e18,1.656125228693926e18,1.655672364261688e18,1.65521949982945e18,1.6547666353972122e18,1.654313770964974e18,1.6538609065327365e18,1.6534080421004987e18,1.6529551776682606e18,1.6525023132360228e18,1.6520494488037847e18,1.6515965843715471e18,1.6511437199393093e18,1.6506908555070712e18,1.6502379910748334e18,1.6497851266425953e18,1.6493322622103575e18,1.64887939777812e18,1.6484265333458819e18,1.647973668913644e18,1.647520804481406e18,1.6470679400491681e18,1.6466150756169306e18,1.6461622111846925e18,1.6457093467524547e18,1.6452564823202166e18,1.6448036178879788e18,1.644350753455741e18,1.643897889023503e18,1.6434450245912653e18,1.6429921601590272e18,1.6425392957267894e18,1.6420864312945516e18,1.6416335668623137e18,1.641180702430076e18,1.6407278379978378e18,1.6402749735656e18,1.6398221091333622e18,1.639369244701124e18,1.6389163802688865e18,1.6384635158366484e18,1.6380106514044106e18,1.6375577869721728e18,1.6371049225399347e18,1.6366520581076972e18,1.636199193675459e18,1.6357463292432212e18,1.6352934648109834e18,1.6348406003787453e18,1.6343877359465075e18,1.6339348715142697e18,1.6334820070820319e18,1.633029142649794e18,1.632576278217556e18,1.6321234137853181e18,1.6316705493530803e18,1.6312176849208425e18,1.6307648204886047e18,1.6303119560563666e18,1.6298590916241288e18,1.6294062271918907e18,1.628953362759653e18,1.6285004983274153e18,1.6280476338951772e18,1.6275947694629394e18,1.6271419050307013e18,1.6266890405984637e18,1.626236176166226e18,1.6257833117339878e18,1.62533044730175e18,1.624877582869512e18,1.624424718437274e18,1.6239718540050365e18,1.6235189895727985e18,1.6230661251405606e18,1.6226132607083226e18,1.6221603962760847e18,1.6217075318438472e18,1.621254667411609e18,1.6208018029793713e18,1.6203489385471332e18,1.6198960741148954e18,1.6194432096826575e18,1.6189903452504197e18,1.618537480818182e18,1.6180846163859438e18,1.617631751953706e18,1.6171788875214682e18,1.6167260230892303e18,1.6162731586569925e18,1.6158202942247544e18,1.6153674297925166e18,1.6149145653602788e18,1.6144617009280407e18,1.6140088364958031e18,1.613555972063565e18,1.6131031076313272e18,1.6126502431990894e18,1.6121973787668513e18,1.6117445143346138e18,1.6112916499023757e18,1.6108387854701379e18,1.6103859210379e18,1.609933056605662e18,1.609480192173424e18,1.6090273277411863e18,1.6085744633089485e18,1.6081215988767107e18,1.6076687344444726e18,1.6072158700122348e18,1.606763005579997e18,1.606310141147759e18,1.6058572767155213e18,1.6054044122832832e18,1.6049515478510454e18,1.6044986834188073e18,1.6040458189865697e18,1.603592954554332e18,1.6031400901220938e18,1.602687225689856e18,1.602234361257618e18,1.6017814968253804e18,1.6013286323931425e18,1.6008757679609044e18,1.6004229035286666e18,1.5999700390964285e18,1.5995171746641907e18,1.5990643102319532e18,1.598611445799715e18,1.5981585813674772e18,1.5977057169352392e18,1.5972528525030013e18,1.5967999880707638e18,1.5963471236385257e18,1.595894259206288e18,1.5954413947740498e18,1.594988530341812e18,1.5945356659095741e18,1.5940828014773363e18,1.5936299370450985e18,1.5931770726128604e18,1.5927242081806226e18,1.5922713437483848e18,1.591818479316147e18,1.591365614883909e18,1.590912750451671e18,1.5904598860194332e18,1.5900070215871954e18,1.5895541571549573e18,1.5891012927227197e18,1.588648428290482e18,1.5881955638582438e18,1.587742699426006e18,1.587289834993768e18,1.5868369705615304e18,1.5863841061292925e18,1.5859312416970545e18,1.5854783772648166e18,1.5850255128325786e18,1.5845726484003407e18,1.5841197839681032e18,1.583666919535865e18,1.5832140551036273e18,1.5827611906713892e18,1.5823083262391514e18,1.5818554618069138e18,1.5814025973746757e18,1.580949732942438e18,1.5804968685101998e18,1.580044004077962e18,1.5795911396457242e18,1.5791382752134863e18,1.5786854107812485e18,1.5782325463490104e18,1.5777796819167726e18,1.5773268174845348e18,1.576873953052297e18,1.5764210886200591e18,1.575968224187821e18,1.5755153597555832e18,1.5750624953233454e18,1.5746096308911073e18,1.5741567664588698e18,1.5737039020266317e18,1.5732510375943939e18,1.572798173162156e18,1.572345308729918e18,1.5718924442976804e18,1.5714395798654423e18,1.5709867154332045e18,1.5705338510009667e18,1.5700809865687286e18,1.5696281221364908e18,1.569175257704253e18,1.568722393272015e18,1.5682695288397773e18,1.5678166644075392e18,1.5673637999753014e18,1.5669109355430636e18,1.5664580711108257e18,1.566005206678588e18,1.5655523422463498e18,1.565099477814112e18,1.564646613381874e18,1.5641937489496364e18,1.5637408845173985e18,1.5632880200851604e18,1.5628351556529226e18,1.5623822912206845e18,1.561929426788447e18,1.5614765623562092e18,1.561023697923971e18,1.5605708334917332e18,1.5601179690594952e18,1.5596651046272573e18,1.5592122401950198e18,1.5587593757627817e18,1.5583065113305439e18,1.5578536468983058e18,1.557400782466068e18,1.5569479180338304e18,1.5564950536015923e18,1.5560421891693545e18,1.5555893247371164e18,1.5551364603048786e18,1.5546835958726408e18,1.554230731440403e18,1.553777867008165e18,1.553325002575927e18,1.5528721381436892e18,1.5524192737114514e18,1.5519664092792136e18,1.5515135448469757e18,1.5510606804147377e18,1.5506078159824998e18,1.550154951550262e18,1.549702087118024e18,1.5492492226857864e18,1.5487963582535483e18,1.5483434938213105e18,1.5478906293890726e18,1.5474377649568346e18,1.546984900524597e18,1.546532036092359e18,1.546079171660121e18,1.5456263072278833e18,1.5451734427956452e18,1.5447205783634074e18,1.5442677139311695e18,1.5438148494989317e18,1.543361985066694e18,1.5429091206344558e18,1.542456256202218e18,1.5420033917699802e18,1.5415505273377423e18,1.5410976629055045e18,1.5406447984732664e18,1.5401919340410286e18,1.5397390696087905e18,1.539286205176553e18,1.5388333407443151e18,1.538380476312077e18,1.5379276118798392e18,1.5374747474476012e18,1.5370218830153636e18,1.5365690185831258e18,1.5361161541508877e18,1.5356632897186499e18,1.5352104252864118e18,1.534757560854174e18,1.5343046964219364e18,1.5338518319896983e18,1.5333989675574605e18,1.5329461031252224e18,1.5324932386929846e18,1.532040374260747e18,1.531587509828509e18,1.531134645396271e18,1.530681780964033e18,1.5302289165317952e18,1.5297760520995574e18,1.5293231876673196e18,1.5288703232350817e18,1.5284174588028436e18,1.5279645943706058e18,1.527511729938368e18,1.5270588655061302e18,1.5266060010738924e18,1.5261531366416543e18,1.5257002722094164e18,1.5252474077771786e18,1.5247945433449405e18,1.524341678912703e18,1.523888814480465e18,1.523435950048227e18,1.5229830856159892e18,1.5225302211837512e18,1.5220773567515136e18,1.5216244923192755e18,1.5211716278870377e18,1.5207187634548e18,1.5202658990225618e18,1.519813034590324e18,1.5193601701580861e18,1.5189073057258483e18,1.5184544412936105e18,1.5180015768613724e18,1.5175487124291346e18,1.5170958479968968e18,1.516642983564659e18,1.516190119132421e18,1.515737254700183e18,1.5152843902679452e18,1.5148315258357071e18,1.5143786614034696e18,1.5139257969712317e18,1.5134729325389937e18,1.5130200681067558e18,1.5125672036745178e18,1.5121143392422802e18,1.5116614748100424e18,1.5112086103778043e18,1.5107557459455665e18,1.5103028815133284e18,1.5098500170810906e18,1.509397152648853e18,1.508944288216615e18,1.508491423784377e18,1.508038559352139e18,1.5075856949199012e18,1.5071328304876636e18,1.5066799660554255e18,1.5062271016231877e18,1.5057742371909496e18,1.5053213727587118e18,1.504868508326474e18,1.5044156438942362e18,1.5039627794619983e18,1.5035099150297603e18,1.5030570505975224e18,1.5026041861652846e18,1.5021513217330465e18,1.501698457300809e18,1.5012455928685711e18,1.500792728436333e18,1.5003398640040952e18,1.4998869995718572e18,1.4994341351396196e18,1.4989812707073818e18,1.4985284062751437e18,1.4980755418429059e18,1.4976226774106678e18,1.49716981297843e18,1.4967169485461924e18,1.4962640841139543e18,1.4958112196817165e18,1.4953583552494784e18,1.4949054908172406e18,1.494452626385003e18,1.493999761952765e18,1.493546897520527e18,1.493094033088289e18,1.4926411686560512e18,1.4921883042238134e18,1.4917354397915756e18,1.4912825753593377e18,1.4908297109270996e18,1.4903768464948618e18,1.489923982062624e18,1.4894711176303862e18,1.4890182531981484e18,1.4885653887659103e18,1.4881125243336724e18,1.4876596599014346e18,1.4872067954691965e18,1.486753931036959e18,1.486301066604721e18,1.485848202172483e18,1.4853953377402452e18,1.4849424733080072e18,1.4844896088757696e18,1.4840367444435315e18,1.4835838800112937e18,1.4831310155790559e18,1.4826781511468178e18,1.48222528671458e18,1.4817724222823421e18,1.4813195578501043e18,1.4808666934178665e18,1.4804138289856284e18,1.4799609645533906e18,1.4795081001211528e18,1.479055235688915e18,1.478602371256677e18,1.478149506824439e18,1.4776966423922012e18,1.4772437779599631e18,1.4767909135277256e18,1.4763380490954877e18,1.4758851846632497e18,1.4754323202310118e18,1.4749794557987738e18,1.4745265913665362e18,1.4740737269342984e18,1.4736208625020603e18,1.4731679980698225e18,1.4727151336375844e18,1.4722622692053466e18,1.471809404773109e18,1.471356540340871e18,1.470903675908633e18,1.470450811476395e18,1.4699979470441572e18,1.4695450826119196e18,1.4690922181796815e18,1.4686393537474437e18,1.4681864893152056e18,1.4677336248829678e18,1.46728076045073e18,1.4668278960184922e18,1.4663750315862543e18,1.4659221671540163e18,1.4654693027217784e18,1.4650164382895406e18,1.4645635738573028e18,1.464110709425065e18,1.463657844992827e18,1.463204980560589e18,1.4627521161283512e18,1.4622992516961132e18,1.4618463872638756e18,1.4613935228316375e18,1.4609406583993997e18,1.4604877939671619e18,1.4600349295349238e18,1.4595820651026862e18,1.459129200670448e18,1.4586763362382103e18,1.4582234718059725e18,1.4577706073737344e18,1.4573177429414966e18,1.4568648785092588e18,1.456412014077021e18,1.455959149644783e18,1.455506285212545e18,1.4550534207803072e18,1.4546005563480694e18,1.4541476919158316e18,1.4536948274835937e18,1.4532419630513556e18,1.4527890986191178e18,1.4523362341868797e18,1.4518833697546422e18,1.4514305053224044e18,1.4509776408901663e18,1.4505247764579284e18,1.4500719120256904e18,1.4496190475934528e18,1.449166183161215e18,1.448713318728977e18,1.448260454296739e18,1.447807589864501e18,1.4473547254322632e18,1.4469018610000256e18,1.4464489965677875e18,1.4459961321355497e18,1.4455432677033116e18,1.4450904032710738e18,1.4446375388388362e18,1.4441846744065981e18,1.4437318099743603e18,1.4432789455421222e18,1.4428260811098844e18,1.4423732166776466e18,1.4419203522454088e18,1.441467487813171e18,1.4410146233809329e18,1.440561758948695e18,1.4401088945164572e18,1.4396560300842194e18,1.4392031656519816e18,1.4387503012197435e18,1.4382974367875057e18,1.4378445723552678e18,1.4373917079230298e18,1.4369388434907922e18,1.436485979058554e18,1.4360331146263163e18,1.4355802501940785e18,1.4351273857618404e18,1.4346745213296028e18,1.4342216568973647e18,1.433768792465127e18,1.433315928032889e18,1.432863063600651e18,1.4324101991684132e18,1.4319573347361754e18,1.4315044703039375e18,1.4310516058716997e18,1.4305987414394616e18,1.4301458770072238e18,1.429693012574986e18,1.4292401481427482e18,1.4287872837105103e18,1.4283344192782723e18,1.4278815548460344e18,1.4274286904137964e18,1.4269758259815588e18,1.426522961549321e18,1.426070097117083e18,1.425617232684845e18,1.425164368252607e18,1.4247115038203694e18,1.4242586393881316e18,1.4238057749558935e18,1.4233529105236557e18,1.4229000460914176e18,1.4224471816591798e18,1.4219943172269422e18,1.4215414527947041e18,1.4210885883624663e18,1.4206357239302282e18,1.4201828594979904e18,1.4197299950657528e18,1.4192771306335148e18,1.418824266201277e18,1.4183714017690388e18,1.417918537336801e18,1.4174656729045632e18,1.4170128084723254e18,1.4165599440400876e18,1.4161070796078497e18,1.4156542151756116e18,1.4152013507433738e18,1.414748486311136e18,1.4142956218788982e18,1.4138427574466604e18,1.4133898930144223e18,1.4129370285821844e18,1.4124841641499464e18,1.4120312997177088e18,1.411578435285471e18,1.411125570853233e18,1.410672706420995e18,1.410219841988757e18,1.4097669775565194e18,1.4093141131242816e18,1.4088612486920435e18,1.4084083842598057e18,1.4079555198275676e18,1.4075026553953298e18,1.4070497909630922e18,1.4065969265308541e18,1.4061440620986163e18,1.4056911976663782e18,1.4052383332341404e18,1.4047854688019028e18,1.4043326043696648e18,1.403879739937427e18,1.4034268755051889e18,1.402974011072951e18,1.4025211466407132e18,1.4020682822084754e18,1.4016154177762376e18,1.4011625533439995e18,1.4007096889117617e18,1.4002568244795238e18,1.399803960047286e18,1.3993510956150482e18,1.39889823118281e18,1.3984453667505723e18,1.3979925023183345e18,1.3975396378860964e18,1.3970867734538588e18,1.3966339090216207e18,1.396181044589383e18,1.395728180157145e18,1.395275315724907e18,1.3948224512926694e18,1.3943695868604314e18,1.3939167224281935e18,1.3934638579959557e18,1.3930109935637176e18,1.3925581291314798e18,1.392105264699242e18,1.3916524002670042e18,1.3911995358347663e18,1.3907466714025283e18,1.3902938069702904e18,1.3898409425380526e18,1.3893880781058148e18,1.388935213673577e18,1.388482349241339e18,1.388029484809101e18,1.387576620376863e18,1.3871237559446254e18,1.3866708915123876e18,1.3862180270801495e18,1.3857651626479117e18,1.3853122982156736e18,1.384859433783436e18,1.3844065693511982e18,1.38395370491896e18,1.3835008404867223e18,1.3830479760544842e18,1.3825951116222464e18,1.3821422471900088e18,1.3816893827577708e18,1.381236518325533e18,1.3807836538932948e18,1.380330789461057e18,1.3798779250288195e18,1.3794250605965814e18,1.3789721961643436e18,1.3785193317321055e18,1.3780664672998676e18,1.3776136028676298e18,1.377160738435392e18,1.3767078740031542e18,1.376255009570916e18,1.3758021451386783e18,1.3753492807064404e18,1.3748964162742026e18,1.3744435518419648e18,1.3739906874097267e18,1.373537822977489e18,1.373084958545251e18,1.372632094113013e18,1.3721792296807754e18,1.3717263652485373e18,1.3712735008162995e18,1.3708206363840617e18,1.3703677719518236e18,1.369914907519586e18,1.369462043087348e18,1.3690091786551101e18,1.3685563142228723e18,1.3681034497906342e18,1.3676505853583964e18,1.3671977209261586e18,1.3667448564939208e18,1.366291992061683e18,1.3658391276294449e18,1.365386263197207e18,1.3649333987649692e18,1.3644805343327314e18,1.3640276699004936e18,1.3635748054682555e18,1.3631219410360177e18,1.3626690766037796e18,1.362216212171542e18,1.3617633477393042e18,1.361310483307066e18,1.3608576188748283e18,1.3604047544425902e18,1.3599518900103526e18,1.3594990255781148e18,1.3590461611458767e18,1.358593296713639e18,1.3581404322814008e18,1.357687567849163e18,1.3572347034169254e18,1.3567818389846874e18,1.3563289745524495e18,1.3558761101202115e18,1.3554232456879736e18,1.354970381255736e18,1.354517516823498e18,1.3540646523912602e18,1.353611787959022e18,1.3531589235267843e18,1.3527060590945464e18,1.3522531946623086e18,1.3518003302300708e18,1.3513474657978327e18,1.350894601365595e18,1.350441736933357e18,1.3499888725011192e18,1.3495360080688814e18,1.3490831436366433e18,1.3486302792044055e18,1.3481774147721677e18,1.3477245503399296e18,1.347271685907692e18,1.346818821475454e18,1.3463659570432161e18,1.3459130926109783e18,1.3454602281787402e18,1.3450073637465027e18,1.3445544993142646e18,1.3441016348820268e18,1.343648770449789e18,1.3431959060175508e18,1.342743041585313e18,1.3422901771530752e18,1.3418373127208374e18,1.3413844482885996e18,1.3409315838563615e18,1.3404787194241236e18,1.3400258549918858e18,1.339572990559648e18,1.3391201261274102e18,1.338667261695172e18,1.3382143972629343e18,1.3377615328306962e18,1.3373086683984586e18,1.3368558039662208e18,1.3364029395339827e18,1.335950075101745e18,1.3354972106695068e18,1.3350443462372692e18,1.3345914818050314e18,1.3341386173727933e18,1.3336857529405555e18,1.3332328885083174e18,1.3327800240760796e18,1.332327159643842e18,1.331874295211604e18,1.3314214307793661e18,1.330968566347128e18,1.3305157019148902e18,1.3300628374826527e18,1.3296099730504146e18,1.3291571086181768e18,1.328704244185939e18,1.3282513797537009e18,1.327798515321463e18,1.3273456508892252e18,1.3268927864569874e18,1.3264399220247496e18,1.3259870575925115e18,1.3255341931602737e18,1.3250813287280358e18,1.324628464295798e18,1.3241755998635602e18,1.323722735431322e18,1.3232698709990843e18,1.3228170065668462e18,1.3223641421346086e18,1.3219112777023708e18,1.3214584132701327e18,1.321005548837895e18,1.3205526844056568e18,1.3200998199734193e18,1.3196469555411814e18,1.3191940911089434e18,1.3187412266767055e18,1.3182883622444675e18,1.3178354978122296e18,1.317382633379992e18,1.316929768947754e18,1.3164769045155162e18,1.316024040083278e18,1.3155711756510403e18,1.3151183112188027e18,1.3146654467865646e18,1.3142125823543268e18,1.3137597179220887e18,1.313306853489851e18,1.312853989057613e18,1.3124011246253752e18,1.3119482601931374e18,1.3114953957608993e18,1.3110425313286615e18,1.3105896668964237e18,1.3101368024641859e18,1.309683938031948e18,1.30923107359971e18,1.308778209167472e18,1.3083253447352343e18,1.3078724803029962e18,1.3074196158707587e18,1.3069667514385206e18,1.3065138870062828e18,1.306061022574045e18,1.3056081581418068e18,1.3051552937095693e18,1.3047024292773312e18,1.3042495648450934e18,1.3037967004128556e18,1.3033438359806175e18,1.3028909715483796e18,1.3024381071161418e18,1.301985242683904e18,1.3015323782516662e18,1.301079513819428e18,1.3006266493871903e18,1.3001737849549524e18,1.2997209205227146e18,1.2992680560904768e18,1.2988151916582387e18,1.298362327226001e18,1.2979094627937628e18,1.2974565983615252e18,1.2970037339292874e18,1.2965508694970493e18,1.2960980050648115e18,1.2956451406325734e18,1.295192276200336e18,1.294739411768098e18,1.29428654733586e18,1.2938336829036221e18,1.293380818471384e18,1.2929279540391462e18,1.2924750896069087e18,1.2920222251746706e18,1.2915693607424328e18,1.2911164963101947e18,1.2906636318779569e18,1.2902107674457193e18,1.2897579030134812e18,1.2893050385812434e18,1.2888521741490053e18,1.2883993097167675e18,1.2879464452845297e18,1.2874935808522918e18,1.287040716420054e18,1.286587851987816e18,1.286134987555578e18,1.2856821231233403e18,1.2852292586911025e18,1.2847763942588646e18,1.2843235298266266e18,1.2838706653943887e18,1.283417800962151e18,1.2829649365299128e18,1.2825120720976753e18,1.2820592076654372e18,1.2816063432331994e18,1.2811534788009615e18,1.2807006143687235e18,1.280247749936486e18,1.2797948855042478e18,1.27934202107201e18,1.2788891566397722e18,1.278436292207534e18,1.2779834277752963e18,1.2775305633430584e18,1.2770776989108206e18,1.2766248344785828e18,1.2761719700463447e18,1.275719105614107e18,1.2752662411818688e18,1.2748133767496312e18,1.2743605123173934e18,1.2739076478851553e18,1.2734547834529175e18,1.2730019190206794e18,1.2725490545884419e18,1.272096190156204e18,1.271643325723966e18,1.2711904612917281e18,1.27073759685949e18,1.2702847324272522e18,1.2698318679950147e18,1.2693790035627766e18,1.2689261391305388e18,1.2684732746983007e18,1.2680204102660628e18,1.2675675458338253e18,1.2671146814015872e18,1.2666618169693494e18,1.2662089525371113e18,1.2657560881048735e18,1.2653032236726356e18,1.2648503592403978e18,1.26439749480816e18,1.263944630375922e18,1.263491765943684e18,1.2630389015114463e18,1.2625860370792084e18,1.2621331726469706e18,1.2616803082147325e18,1.2612274437824947e18,1.260774579350257e18,1.2603217149180188e18,1.2598688504857812e18,1.2594159860535432e18,1.2589631216213053e18,1.2585102571890675e18,1.2580573927568294e18,1.2576045283245919e18,1.2571516638923538e18,1.256698799460116e18,1.2562459350278781e18,1.25579307059564e18,1.2553402061634022e18,1.2548873417311644e18,1.2544344772989266e18,1.2539816128666888e18,1.2535287484344507e18,1.2530758840022129e18,1.252623019569975e18,1.2521701551377372e18,1.2517172907054994e18,1.2512644262732613e18,1.2508115618410235e18,1.2503586974087854e18,1.2499058329765478e18,1.24945296854431e18,1.249000104112072e18,1.248547239679834e18,1.248094375247596e18,1.2476415108153585e18,1.2471886463831206e18,1.2467357819508826e18,1.2462829175186447e18,1.2458300530864067e18,1.2453771886541688e18,1.2449243242219313e18,1.2444714597896932e18,1.2440185953574554e18,1.2435657309252173e18,1.2431128664929795e18,1.242660002060742e18,1.2422071376285038e18,1.241754273196266e18,1.2413014087640282e18,1.24084854433179e18,1.2403956798995523e18,1.2399428154673144e18,1.2394899510350766e18,1.2390370866028388e18,1.2385842221706007e18,1.238131357738363e18,1.237678493306125e18,1.2372256288738872e18,1.2367727644416494e18,1.2363199000094113e18,1.2358670355771735e18,1.2354141711449354e18,1.2349613067126979e18,1.23450844228046e18,1.234055577848222e18,1.233602713415984e18,1.233149848983746e18,1.2326969845515085e18,1.2322441201192707e18,1.2317912556870326e18,1.2313383912547948e18,1.2308855268225567e18,1.2304326623903188e18,1.2299797979580813e18,1.2295269335258432e18,1.2290740690936054e18,1.2286212046613673e18,1.2281683402291295e18,1.227715475796892e18,1.2272626113646538e18,1.226809746932416e18,1.226356882500178e18,1.22590401806794e18,1.2254511536357023e18,1.2249982892034644e18,1.2245454247712266e18,1.2240925603389885e18,1.2236396959067507e18,1.223186831474513e18,1.222733967042275e18,1.2222811026100372e18,1.2218282381777992e18,1.2213753737455613e18,1.2209225093133235e18,1.2204696448810854e18,1.220016780448848e18,1.2195639160166098e18,1.219111051584372e18,1.2186581871521341e18,1.218205322719896e18,1.2177524582876585e18,1.2172995938554204e18,1.2168467294231826e18,1.2163938649909448e18,1.2159410005587067e18,1.2154881361264689e18,1.215035271694231e18,1.2145824072619932e18,1.2141295428297554e18,1.2136766783975173e18,1.2132238139652795e18,1.2127709495330417e18,1.2123180851008038e18,1.211865220668566e18,1.211412356236328e18,1.21095949180409e18,1.210506627371852e18,1.2100537629396145e18,1.2096008985073766e18,1.2091480340751386e18,1.2086951696429007e18,1.2082423052106627e18,1.207789440778425e18,1.2073365763461873e18,1.2068837119139492e18,1.2064308474817114e18,1.2059779830494733e18,1.2055251186172355e18,1.205072254184998e18,1.2046193897527598e18,1.204166525320522e18,1.203713660888284e18,1.203260796456046e18,1.2028079320238085e18,1.2023550675915704e18,1.2019022031593326e18,1.2014493387270945e18,1.2009964742948567e18,1.200543609862619e18,1.200090745430381e18,1.1996378809981432e18,1.1991850165659052e18,1.1987321521336673e18,1.1982792877014295e18,1.1978264232691917e18,1.1973735588369539e18,1.1969206944047158e18,1.196467829972478e18,1.1960149655402401e18,1.195562101108002e18,1.1951092366757645e18,1.1946563722435264e18,1.1942035078112886e18,1.1937506433790508e18,1.1932977789468127e18,1.192844914514575e18,1.192392050082337e18,1.1919391856500992e18,1.1914863212178614e18,1.1910334567856233e18,1.1905805923533855e18,1.1901277279211476e18,1.1896748634889098e18,1.189221999056672e18,1.188769134624434e18,1.188316270192196e18,1.1878634057599583e18,1.1874105413277204e18,1.1869576768954826e18,1.1865048124632445e18,1.1860519480310067e18,1.1855990835987686e18,1.185146219166531e18,1.1846933547342932e18,1.1842404903020552e18,1.1837876258698173e18,1.1833347614375793e18,1.1828818970053417e18,1.1824290325731039e18,1.1819761681408658e18,1.181523303708628e18,1.18107043927639e18,1.1806175748441523e18,1.1801647104119142e18,1.1797118459796764e18,1.1792589815474386e18,1.1788061171152005e18,1.178353252682963e18,1.1779003882507249e18,1.177447523818487e18,1.1769946593862492e18,1.1765417949540111e18,1.1760889305217736e18,1.1756360660895355e18,1.1751832016572977e18,1.1747303372250598e18,1.1742774727928218e18,1.173824608360584e18,1.173371743928346e18,1.1729188794961083e18,1.1724660150638702e18,1.1720131506316324e18,1.1715602861993946e18,1.1711074217671567e18,1.170654557334919e18,1.1702016929026808e18,1.169748828470443e18,1.1692959640382052e18,1.1688430996059674e18,1.1683902351737295e18,1.1679373707414915e18,1.1674845063092536e18,1.1670316418770158e18,1.166578777444778e18,1.1661259130125402e18,1.165673048580302e18,1.1652201841480643e18,1.1647673197158264e18,1.1643144552835886e18,1.1638615908513505e18,1.1634087264191127e18,1.162955861986875e18,1.162502997554637e18,1.1620501331223992e18,1.1615972686901612e18,1.1611444042579233e18,1.1606915398256855e18,1.1602386753934477e18,1.1597858109612099e18,1.1593329465289718e18,1.158880082096734e18,1.158427217664496e18,1.1579743532322583e18,1.1575214888000202e18,1.1570686243677824e18,1.1566157599355446e18,1.1561628955033068e18,1.155710031071069e18,1.1552571666388308e18,1.154804302206593e18,1.1543514377743552e18,1.1538985733421174e18,1.1534457089098796e18,1.1529928444776415e18,1.1525399800454036e18,1.1520871156131658e18,1.1516342511809279e18,1.15118138674869e18,1.1507285223164521e18,1.1502756578842143e18,1.1498227934519764e18,1.1493699290197385e18,1.1489170645875005e18,1.1484642001552627e18,1.1480113357230249e18,1.147558471290787e18,1.1471056068585491e18,1.1466527424263112e18,1.1461998779940733e18,1.1457470135618355e18,1.1452941491295976e18,1.1448412846973597e18,1.1443884202651218e18,1.1439355558328838e18,1.1434826914006461e18,1.1430298269684082e18,1.1425769625361702e18,1.1421240981039324e18,1.1416712336716945e18,1.1412183692394568e18,1.1407655048072188e18,1.1403126403749809e18,1.139859775942743e18,1.1394069115105051e18,1.1389540470782673e18,1.1385011826460294e18,1.1380483182137915e18,1.1375954537815535e18,1.1371425893493158e18,1.1366897249170779e18,1.1362368604848401e18,1.1357839960526021e18,1.1353311316203642e18,1.1348782671881265e18,1.1344254027558885e18,1.1339725383236506e18,1.1335196738914127e18,1.1330668094591748e18,1.132613945026937e18,1.1321610805946991e18,1.1317082161624612e18,1.1312553517302234e18,1.1308024872979854e18,1.1303496228657476e18,1.1298967584335098e18,1.1294438940012718e18,1.1289910295690339e18,1.128538165136796e18,1.1280853007045582e18,1.1276324362723203e18,1.1271795718400824e18,1.1267267074078445e18,1.1262738429756067e18,1.1258209785433688e18,1.1253681141111309e18,1.124915249678893e18,1.1244623852466551e18,1.1240095208144172e18,1.1235566563821795e18,1.1231037919499415e18,1.1226509275177036e18,1.1221980630854657e18,1.1217451986532278e18,1.1212923342209901e18,1.1208394697887521e18,1.1203866053565142e18,1.1199337409242764e18,1.1194808764920384e18,1.1190280120598006e18,1.1185751476275628e18,1.1181222831953248e18,1.1176694187630868e18,1.117216554330849e18,1.1167636898986112e18,1.1163108254663734e18,1.1158579610341354e18,1.1154050966018975e18,1.1149522321696596e18,1.1144993677374218e18,1.1140465033051839e18,1.113593638872946e18,1.1131407744407081e18,1.1126879100084701e18,1.1122350455762324e18,1.1117821811439945e18,1.1113293167117567e18,1.1108764522795187e18,1.1104235878472808e18,1.1099707234150431e18,1.1095178589828051e18,1.1090649945505672e18,1.1086121301183293e18,1.1081592656860914e18,1.1077064012538536e18,1.1072535368216157e18,1.1068006723893778e18,1.10634780795714e18,1.105894943524902e18,1.1054420790926642e18,1.1049892146604264e18,1.1045363502281884e18,1.1040834857959505e18,1.1036306213637126e18,1.1031777569314748e18,1.1027248924992369e18,1.102272028066999e18,1.1018191636347611e18,1.1013662992025231e18,1.1009134347702854e18,1.1004605703380475e18,1.1000077059058097e18,1.0995548414735717e18,1.0991019770413338e18,1.0986491126090961e18,1.0981962481768581e18,1.0977433837446202e18,1.0972905193123823e18,1.0968376548801444e18,1.0963847904479066e18,1.0959319260156687e18,1.0954790615834308e18,1.095026197151193e18,1.0945733327189551e18,1.0941204682867172e18,1.0936676038544794e18,1.0932147394222414e18,1.0927618749900035e18,1.0923090105577658e18,1.0918561461255278e18,1.0914032816932899e18,1.090950417261052e18,1.0904975528288141e18,1.0900446883965764e18,1.0895918239643384e18,1.0891389595321005e18,1.0886860950998627e18,1.0882332306676247e18,1.0877803662353869e18,1.087327501803149e18,1.0868746373709111e18,1.0864217729386732e18,1.0859689085064353e18,1.0855160440741975e18,1.0850631796419597e18,1.0846103152097217e18,1.0841574507774838e18,1.083704586345246e18,1.0832517219130081e18,1.0827988574807702e18,1.0823459930485324e18,1.0818931286162944e18,1.0814402641840564e18,1.0809873997518188e18,1.0805345353195808e18,1.080081670887343e18,1.079628806455105e18,1.0791759420228671e18,1.0787230775906294e18,1.0782702131583914e18,1.0778173487261535e18,1.0773644842939156e18,1.0769116198616777e18,1.0764587554294399e18,1.076005890997202e18,1.0755530265649641e18,1.0751001621327263e18,1.0746472977004883e18,1.0741944332682505e18,1.0737415688360127e18,1.0732887044037747e18,1.0728358399715368e18,1.072382975539299e18,1.0719301111070611e18,1.0714772466748232e18,1.0710243822425853e18,1.0705715178103474e18,1.0701186533781096e18,1.0696657889458717e18,1.0692129245136338e18,1.068760060081396e18,1.068307195649158e18,1.06785433121692e18,1.0674014667846824e18,1.0669486023524444e18,1.0664957379202065e18,1.0660428734879686e18,1.0655900090557307e18,1.065137144623493e18,1.064684280191255e18,1.0642314157590171e18,1.0637785513267793e18,1.0633256868945413e18,1.0628728224623035e18,1.0624199580300657e18,1.0619670935978277e18,1.0615142291655898e18,1.061061364733352e18,1.0606085003011141e18,1.0601556358688763e18,1.0597027714366383e18,1.0592499070044004e18,1.0587970425721626e18,1.0583441781399247e18,1.0578913137076868e18,1.057438449275449e18,1.056985584843211e18,1.056532720410973e18,1.0560798559787354e18,1.0556269915464974e18,1.0551741271142596e18,1.0547212626820216e18,1.0542683982497837e18,1.053815533817546e18,1.053362669385308e18,1.0529098049530701e18,1.0524569405208323e18,1.0520040760885943e18,1.0515512116563565e18,1.0510983472241187e18,1.0506454827918807e18,1.0501926183596429e18,1.049739753927405e18,1.0492868894951671e18,1.0488340250629293e18,1.0483811606306913e18,1.0479282961984534e18,1.0474754317662157e18,1.0470225673339777e18,1.0465697029017398e18,1.046116838469502e18,1.045663974037264e18,1.0452111096050263e18,1.0447582451727884e18,1.0443053807405504e18,1.0438525163083126e18,1.0433996518760746e18,1.0429467874438368e18,1.042493923011599e18,1.042041058579361e18,1.0415881941471231e18,1.0411353297148852e18,1.0406824652826474e18,1.0402296008504096e18,1.0397767364181716e18,1.0393238719859337e18,1.0388710075536959e18,1.038418143121458e18,1.0379652786892201e18,1.0375124142569823e18,1.0370595498247443e18,1.0366066853925064e18,1.0361538209602687e18,1.0357009565280307e18,1.0352480920957929e18,1.034795227663555e18,1.034342363231317e18,1.0338894987990793e18,1.0334366343668413e18,1.0329837699346034e18,1.0325309055023656e18,1.0320780410701276e18,1.0316251766378898e18,1.031172312205652e18,1.030719447773414e18,1.0302665833411762e18,1.0298137189089382e18,1.0293608544767004e18,1.0289079900444626e18,1.0284551256122246e18,1.0280022611799867e18,1.0275493967477489e18,1.027096532315511e18,1.0266436678832731e18,1.0261908034510353e18,1.0257379390187973e18,1.0252850745865595e18,1.0248322101543217e18,1.0243793457220837e18,1.0239264812898459e18,1.023473616857608e18,1.02302075242537e18,1.0225678879931323e18,1.0221150235608943e18,1.0216621591286564e18,1.0212092946964186e18,1.0207564302641806e18,1.0203035658319429e18,1.019850701399705e18,1.019397836967467e18,1.0189449725352292e18,1.0184921081029912e18,1.0180392436707534e18,1.0175863792385156e18,1.0171335148062776e18,1.0166806503740397e18,1.0162277859418019e18,1.015774921509564e18,1.0153220570773262e18,1.0148691926450883e18,1.0144163282128503e18,1.0139634637806125e18,1.0135105993483747e18,1.0130577349161367e18,1.0126048704838989e18,1.0121520060516609e18,1.011699141619423e18,1.0112462771871853e18,1.0107934127549473e18,1.0103405483227095e18,1.0098876838904716e18,1.0094348194582336e18,1.0089819550259959e18,1.008529090593758e18,1.00807622616152e18,1.0076233617292822e18,1.0071704972970444e18,1.0067176328648064e18,1.0062647684325686e18,1.0058119040003306e18,1.0053590395680928e18,1.004906175135855e18,1.004453310703617e18,1.0040004462713792e18,1.0035475818391412e18,1.0030947174069033e18,1.0026418529746656e18,1.0021889885424276e18,1.0017361241101897e18,1.0012832596779519e18,1.0008303952457139e18,1.0003775308134762e18,9.999246663812383e17,9.994718019490003e17,9.990189375167625e17,9.985660730845245e17,9.981132086522867e17,9.976603442200489e17,9.97207479787811e17,9.96754615355573e17,9.963017509233352e17,9.958488864910973e17,9.953960220588595e17,9.949431576266216e17,9.944902931943836e17,9.940374287621458e17,9.93584564329908e17,9.9313169989767e17,9.926788354654322e17,9.922259710331942e17,9.917731066009563e17,9.913202421687186e17,9.908673777364806e17,9.904145133042428e17,9.899616488720049e17,9.895087844397669e17,9.890559200075292e17,9.886030555752913e17,9.881501911430533e17,9.876973267108155e17,9.872444622785775e17,9.867915978463397e17,9.863387334141019e17,9.85885868981864e17,9.854330045496261e17,9.849801401173882e17,9.845272756851503e17,9.840744112529125e17,9.836215468206746e17,9.831686823884366e17,9.827158179561988e17,9.82262953523961e17,9.81810089091723e17,9.813572246594852e17,9.809043602272472e17,9.804514957950093e17,9.799986313627716e17,9.795457669305336e17,9.790929024982958e17,9.786400380660579e17,9.781871736338199e17,9.777343092015822e17,9.772814447693443e17,9.768285803371063e17,9.763757159048685e17,9.759228514726305e17,9.754699870403927e17,9.750171226081549e17,9.745642581759169e17,9.741113937436791e17,9.736585293114412e17,9.732056648792033e17,9.727528004469655e17,9.722999360147276e17,9.718470715824896e17,9.713942071502518e17,9.70941342718014e17,9.70488478285776e17,9.700356138535382e17,9.695827494213002e17,9.691298849890624e17,9.686770205568246e17,9.682241561245866e17,9.677712916923488e17,9.673184272601108e17,9.668655628278729e17,9.664126983956352e17,9.659598339633972e17,9.655069695311593e17,9.650541050989215e17,9.646012406666836e17,9.641483762344458e17,9.636955118022079e17,9.632426473699699e17,9.627897829377321e17,9.623369185054943e17,9.618840540732563e17,9.614311896410185e17,9.609783252087805e17,9.605254607765426e17,9.600725963443049e17,9.59619731912067e17,9.591668674798291e17,9.587140030475912e17,9.582611386153532e17,9.578082741831155e17,9.573554097508776e17,9.569025453186396e17,9.564496808864018e17,9.559968164541638e17,9.55543952021926e17,9.550910875896882e17,9.546382231574502e17,9.541853587252124e17,9.537324942929745e17,9.532796298607366e17,9.528267654284988e17,9.523739009962609e17,9.519210365640229e17,9.514681721317851e17,9.510153076995473e17,9.505624432673093e17,9.501095788350715e17,9.496567144028335e17,9.492038499705957e17,9.487509855383579e17,9.4829812110612e17,9.478452566738821e17,9.473923922416442e17,9.469395278094062e17,9.464866633771685e17,9.460337989449306e17,9.455809345126926e17,9.451280700804548e17,9.446752056482168e17,9.442223412159791e17,9.437694767837412e17,9.433166123515032e17,9.428637479192654e17,9.424108834870275e17,9.419580190547896e17,9.415051546225518e17,9.410522901903139e17,9.405994257580759e17,9.401465613258381e17,9.396936968936003e17,9.392408324613624e17,9.387879680291245e17,9.383351035968865e17,9.378822391646487e17,9.374293747324109e17,9.369765103001729e17,9.365236458679351e17,9.360707814356972e17,9.356179170034592e17,9.351650525712215e17,9.347121881389836e17,9.342593237067457e17,9.338064592745078e17,9.333535948422698e17,9.329007304100321e17,9.324478659777942e17,9.319950015455562e17,9.315421371133184e17,9.310892726810804e17,9.306364082488426e17,9.301835438166048e17,9.297306793843668e17,9.29277814952129e17,9.288249505198911e17,9.283720860876532e17,9.279192216554154e17,9.274663572231775e17,9.270134927909395e17,9.265606283587017e17,9.261077639264639e17,9.256548994942259e17,9.252020350619881e17,9.247491706297501e17,9.242963061975124e17,9.238434417652745e17,9.233905773330365e17,9.229377129007987e17,9.224848484685608e17,9.220319840363228e17,9.215791196040851e17,9.211262551718472e17,9.206733907396092e17,9.202205263073714e17,9.197676618751336e17,9.193147974428957e17,9.188619330106578e17,9.184090685784198e17,9.17956204146182e17,9.175033397139442e17,9.170504752817062e17,9.165976108494684e17,9.161447464172305e17,9.156918819849925e17,9.152390175527548e17,9.147861531205169e17,9.14333288688279e17,9.138804242560411e17,9.134275598238031e17,9.129746953915654e17,9.125218309593275e17,9.120689665270895e17,9.116161020948517e17,9.111632376626138e17,9.10710373230376e17,9.102575087981381e17,9.098046443659002e17,9.093517799336623e17,9.088989155014244e17,9.084460510691866e17,9.079931866369487e17,9.075403222047108e17,9.070874577724728e17,9.06634593340235e17,9.061817289079972e17,9.057288644757592e17,9.052760000435214e17,9.048231356112835e17,9.043702711790456e17,9.039174067468078e17,9.034645423145699e17,9.03011677882332e17,9.025588134500941e17,9.021059490178561e17,9.016530845856184e17,9.012002201533805e17,9.007473557211425e17,9.002944912889047e17,8.998416268566668e17,8.99388762424429e17,8.989358979921911e17,8.984830335599532e17,8.980301691277153e17,8.975773046954774e17,8.971244402632396e17,8.966715758310017e17,8.962187113987638e17,8.957658469665258e17,8.95312982534288e17,8.948601181020502e17,8.944072536698124e17,8.939543892375744e17,8.935015248053364e17,8.930486603730986e17,8.925957959408608e17,8.921429315086228e17,8.91690067076385e17,8.912372026441471e17,8.907843382119091e17,8.903314737796714e17,8.898786093474335e17,8.894257449151956e17,8.889728804829577e17,8.885200160507197e17,8.88067151618482e17,8.876142871862441e17,8.871614227540061e17,8.867085583217683e17,8.862556938895304e17,8.858028294572925e17,8.853499650250547e17,8.848971005928168e17,8.84444236160579e17,8.83991371728341e17,8.835385072961032e17,8.830856428638653e17,8.826327784316274e17,8.821799139993894e17,8.817270495671516e17,8.812741851349138e17,8.808213207026758e17,8.80368456270438e17,8.799155918382e17,8.794627274059624e17,8.790098629737244e17,8.785569985414865e17,8.781041341092486e17,8.776512696770107e17,8.771984052447729e17,8.76745540812535e17,8.762926763802971e17,8.758398119480591e17,8.753869475158213e17,8.749340830835835e17,8.744812186513457e17,8.740283542191077e17,8.735754897868698e17,8.73122625354632e17,8.726697609223941e17,8.722168964901562e17,8.717640320579183e17,8.713111676256804e17,8.708583031934424e17,8.704054387612047e17,8.699525743289668e17,8.694997098967288e17,8.69046845464491e17,8.68593981032253e17,8.681411166000154e17,8.676882521677774e17,8.672353877355395e17,8.667825233033016e17,8.663296588710637e17,8.658767944388259e17,8.65423930006588e17,8.649710655743501e17,8.645182011421121e17,8.640653367098743e17,8.636124722776365e17,8.631596078453987e17,8.627067434131607e17,8.622538789809228e17,8.618010145486849e17,8.613481501164471e17,8.608952856842092e17,8.604424212519713e17,8.599895568197334e17,8.595366923874954e17,8.590838279552577e17,8.586309635230198e17,8.58178099090782e17,8.57725234658544e17,8.57272370226306e17,8.568195057940684e17,8.563666413618304e17,8.559137769295924e17,8.554609124973546e17,8.550080480651167e17,8.545551836328788e17,8.54102319200641e17,8.536494547684031e17,8.531965903361652e17,8.527437259039273e17,8.522908614716895e17,8.518379970394516e17,8.513851326072137e17,8.509322681749757e17,8.504794037427379e17,8.500265393105001e17,8.495736748782621e17,8.491208104460243e17,8.486679460137864e17,8.482150815815485e17,8.477622171493107e17,8.473093527170728e17,8.46856488284835e17,8.46403623852597e17,8.45950759420359e17,8.454978949881213e17,8.450450305558834e17,8.445921661236454e17,8.441393016914076e17,8.436864372591697e17,8.43233572826932e17,8.42780708394694e17,8.42327843962456e17,8.418749795302182e17,8.414221150979803e17,8.409692506657425e17,8.405163862335046e17,8.400635218012667e17,8.396106573690287e17,8.391577929367909e17,8.387049285045531e17,8.382520640723153e17,8.377991996400773e17,8.373463352078394e17,8.368934707756017e17,8.364406063433637e17,8.359877419111258e17,8.35534877478888e17,8.3508201304665e17,8.34629148614412e17,8.341762841821743e17,8.337234197499364e17,8.332705553176986e17,8.328176908854606e17,8.323648264532228e17,8.31911962020985e17,8.31459097588747e17,8.31006233156509e17,8.305533687242712e17,8.301005042920334e17,8.296476398597955e17,8.291947754275576e17,8.287419109953197e17,8.282890465630819e17,8.27836182130844e17,8.273833176986061e17,8.269304532663683e17,8.264775888341303e17,8.260247244018924e17,8.255718599696547e17,8.251189955374167e17,8.246661311051788e17,8.242132666729409e17,8.23760402240703e17,8.233075378084653e17,8.228546733762273e17,8.224018089439894e17,8.219489445117516e17,8.214960800795136e17,8.210432156472758e17,8.20590351215038e17,8.201374867828e17,8.19684622350562e17,8.192317579183242e17,8.187788934860864e17,8.183260290538486e17,8.178731646216106e17,8.174203001893727e17,8.169674357571348e17,8.16514571324897e17,8.160617068926591e17,8.156088424604212e17,8.151559780281833e17,8.147031135959453e17,8.142502491637076e17,8.137973847314697e17,8.133445202992319e17,8.128916558669939e17,8.12438791434756e17,8.119859270025183e17,8.115330625702803e17,8.110801981380424e17,8.106273337058045e17,8.101744692735666e17,8.097216048413288e17,8.09268740409091e17,8.08815875976853e17,8.083630115446152e17,8.079101471123772e17,8.074572826801394e17,8.070044182479016e17,8.065515538156636e17,8.060986893834257e17,8.056458249511878e17,8.0519296051895e17,8.04740096086712e17,8.042872316544742e17,8.038343672222363e17,8.033815027899985e17,8.029286383577606e17,8.024757739255227e17,8.020229094932849e17,8.015700450610469e17,8.01117180628809e17,8.006643161965713e17,8.002114517643333e17,7.997585873320954e17,7.993057228998575e17,7.988528584676196e17,7.983999940353819e17,7.97947129603144e17,7.97494265170906e17,7.970414007386682e17,7.965885363064302e17,7.961356718741924e17,7.956828074419546e17,7.952299430097166e17,7.947770785774787e17,7.94324214145241e17,7.93871349713003e17,7.934184852807652e17,7.929656208485272e17,7.925127564162893e17,7.920598919840516e17,7.916070275518136e17,7.911541631195757e17,7.907012986873379e17,7.902484342550999e17,7.897955698228621e17,7.893427053906243e17,7.888898409583863e17,7.884369765261485e17,7.879841120939105e17,7.875312476616727e17,7.870783832294349e17,7.866255187971969e17,7.86172654364959e17,7.857197899327212e17,7.852669255004833e17,7.848140610682454e17,7.843611966360076e17,7.839083322037696e17,7.834554677715318e17,7.83002603339294e17,7.82549738907056e17,7.820968744748182e17,7.816440100425802e17,7.811911456103423e17,7.807382811781046e17,7.802854167458666e17,7.798325523136287e17,7.793796878813908e17,7.789268234491529e17,7.784739590169152e17,7.780210945846772e17,7.775682301524393e17,7.771153657202015e17,7.766625012879635e17,7.762096368557257e17,7.757567724234879e17,7.753039079912499e17,7.74851043559012e17,7.743981791267741e17,7.739453146945363e17,7.734924502622985e17,7.730395858300605e17,7.725867213978226e17,7.721338569655848e17,7.71680992533347e17,7.71228128101109e17,7.707752636688712e17,7.703223992366332e17,7.698695348043953e17,7.694166703721576e17,7.689638059399196e17,7.685109415076818e17,7.680580770754438e17,7.676052126432059e17,7.671523482109682e17,7.666994837787302e17,7.662466193464923e17,7.657937549142545e17,7.653408904820165e17,7.648880260497787e17,7.644351616175409e17,7.639822971853029e17,7.635294327530651e17,7.630765683208271e17,7.626237038885893e17,7.621708394563515e17,7.617179750241135e17,7.612651105918756e17,7.608122461596378e17,7.603593817274e17,7.59906517295162e17,7.594536528629242e17,7.590007884306862e17,7.585479239984484e17,7.580950595662106e17,7.576421951339726e17,7.571893307017348e17,7.567364662694968e17,7.562836018372589e17,7.558307374050212e17,7.553778729727832e17,7.549250085405453e17,7.544721441083075e17,7.540192796760695e17,7.535664152438318e17,7.531135508115939e17,7.526606863793559e17,7.522078219471181e17,7.517549575148801e17,7.513020930826423e17,7.508492286504045e17,7.503963642181665e17,7.499434997859286e17,7.494906353536909e17,7.490377709214529e17,7.48584906489215e17,7.481320420569772e17,7.476791776247392e17,7.472263131925015e17,7.467734487602636e17,7.463205843280256e17,7.458677198957878e17,7.454148554635498e17,7.44961991031312e17,7.445091265990742e17,7.440562621668362e17,7.436033977345983e17,7.431505333023604e17,7.426976688701226e17,7.422448044378848e17,7.417919400056468e17,7.413390755734089e17,7.408862111411711e17,7.404333467089332e17,7.399804822766953e17,7.395276178444575e17,7.390747534122195e17,7.386218889799816e17,7.381690245477439e17,7.377161601155059e17,7.372632956832681e17,7.368104312510301e17,7.363575668187922e17,7.359047023865545e17,7.354518379543165e17,7.349989735220786e17,7.345461090898408e17,7.340932446576028e17,7.33640380225365e17,7.331875157931272e17,7.327346513608892e17,7.322817869286514e17,7.318289224964134e17,7.313760580641756e17,7.309231936319378e17,7.304703291996998e17,7.300174647674619e17,7.29564600335224e17,7.291117359029862e17,7.286588714707483e17,7.282060070385105e17,7.277531426062725e17,7.273002781740347e17,7.268474137417969e17,7.263945493095589e17,7.259416848773211e17,7.254888204450831e17,7.250359560128452e17,7.245830915806075e17,7.241302271483695e17,7.236773627161316e17,7.232244982838938e17,7.227716338516558e17,7.223187694194181e17,7.218659049871802e17,7.214130405549422e17,7.209601761227044e17,7.205073116904664e17,7.200544472582286e17,7.196015828259908e17,7.191487183937528e17,7.186958539615149e17,7.18242989529277e17,7.177901250970392e17,7.173372606648014e17,7.168843962325635e17,7.164315318003255e17,7.159786673680877e17,7.155258029358499e17,7.150729385036119e17,7.146200740713741e17,7.141672096391361e17,7.137143452068982e17,7.132614807746605e17,7.128086163424225e17,7.123557519101847e17,7.119028874779468e17,7.114500230457088e17,7.109971586134711e17,7.105442941812332e17,7.100914297489952e17,7.096385653167574e17,7.091857008845194e17,7.087328364522816e17,7.082799720200438e17,7.078271075878058e17,7.07374243155568e17,7.069213787233302e17,7.064685142910922e17,7.060156498588544e17,7.055627854266164e17,7.051099209943785e17,7.046570565621408e17,7.042041921299028e17,7.037513276976649e17,7.032984632654271e17,7.028455988331891e17,7.023927344009514e17,7.019398699687135e17,7.014870055364755e17,7.010341411042377e17,7.005812766719997e17,7.001284122397619e17,6.996755478075241e17,6.992226833752861e17,6.987698189430482e17,6.983169545108104e17,6.978640900785725e17,6.974112256463347e17,6.969583612140968e17,6.965054967818588e17,6.96052632349621e17,6.955997679173832e17,6.951469034851452e17,6.946940390529074e17,6.942411746206694e17,6.937883101884315e17,6.933354457561938e17,6.928825813239558e17,6.92429716891718e17,6.9197685245948e17,6.915239880272421e17,6.910711235950044e17,6.906182591627665e17,6.901653947305285e17,6.897125302982907e17,6.892596658660527e17,6.888068014338149e17,6.883539370015771e17,6.879010725693391e17,6.874482081371013e17,6.869953437048634e17,6.865424792726255e17,6.860896148403877e17,6.856367504081498e17,6.851838859759118e17,6.84731021543674e17,6.842781571114362e17,6.838252926791982e17,6.833724282469604e17,6.829195638147224e17,6.824666993824846e17,6.820138349502468e17,6.815609705180088e17,6.81108106085771e17,6.80655241653533e17,6.802023772212951e17,6.797495127890574e17,6.792966483568195e17,6.788437839245815e17,6.783909194923437e17,6.779380550601057e17,6.77485190627868e17,6.770323261956301e17,6.765794617633921e17,6.761265973311543e17,6.756737328989164e17,6.752208684666785e17,6.747680040344407e17,6.743151396022028e17,6.738622751699648e17,6.73409410737727e17,6.729565463054892e17,6.725036818732513e17,6.720508174410134e17,6.715979530087754e17,6.711450885765376e17,6.706922241442998e17,6.702393597120618e17,6.69786495279824e17,6.69333630847586e17,6.688807664153481e17,6.684279019831104e17,6.679750375508724e17,6.675221731186346e17,6.670693086863967e17,6.666164442541587e17,6.66163579821921e17,6.657107153896831e17,6.652578509574451e17,6.648049865252073e17,6.643521220929695e17,6.638992576607315e17,6.634463932284937e17,6.629935287962557e17,6.625406643640179e17,6.620877999317801e17,6.616349354995421e17,6.611820710673043e17,6.607292066350664e17,6.602763422028284e17,6.598234777705907e17,6.593706133383528e17,6.589177489061148e17,6.58464884473877e17,6.58012020041639e17,6.575591556094013e17,6.571062911771634e17,6.566534267449254e17,6.562005623126876e17,6.557476978804497e17,6.552948334482118e17,6.54841969015974e17,6.54389104583736e17,6.539362401514981e17,6.534833757192603e17,6.530305112870225e17,6.525776468547846e17,6.521247824225467e17,6.516719179903087e17,6.512190535580709e17,6.507661891258331e17,6.503133246935951e17,6.498604602613573e17,6.494075958291194e17,6.489547313968814e17,6.485018669646437e17,6.480490025324058e17,6.47596138100168e17,6.4714327366793e17,6.46690409235692e17,6.462375448034543e17,6.457846803712164e17,6.453318159389784e17,6.448789515067406e17,6.444260870745027e17,6.439732226422648e17,6.43520358210027e17,6.43067493777789e17,6.426146293455512e17,6.421617649133133e17,6.417089004810755e17,6.412560360488376e17,6.408031716165997e17,6.403503071843617e17,6.398974427521239e17,6.394445783198861e17,6.389917138876481e17,6.385388494554103e17,6.380859850231724e17,6.376331205909344e17,6.371802561586967e17,6.367273917264588e17,6.362745272942209e17,6.35821662861983e17,6.35368798429745e17,6.349159339975073e17,6.344630695652694e17,6.340102051330314e17,6.335573407007936e17,6.331044762685556e17,6.326516118363178e17,6.3219874740408e17,6.31745882971842e17,6.312930185396042e17,6.308401541073663e17,6.303872896751284e17,6.299344252428906e17,6.294815608106527e17,6.290286963784147e17,6.285758319461769e17,6.281229675139391e17,6.276701030817011e17,6.272172386494633e17,6.267643742172253e17,6.263115097849875e17,6.258586453527497e17,6.254057809205117e17,6.249529164882739e17,6.24500052056036e17,6.24047187623798e17,6.235943231915603e17,6.231414587593224e17,6.226885943270844e17,6.222357298948466e17,6.217828654626086e17,6.21330001030371e17,6.20877136598133e17,6.20424272165895e17,6.199714077336572e17,6.195185433014194e17,6.190656788691814e17,6.186128144369436e17,6.181599500047057e17,6.177070855724677e17,6.1725422114023e17,6.16801356707992e17,6.163484922757542e17,6.158956278435163e17,6.154427634112783e17,6.149898989790406e17,6.145370345468027e17,6.140841701145647e17,6.136313056823269e17,6.13178441250089e17,6.127255768178511e17,6.122727123856133e17,6.118198479533754e17,6.113669835211375e17,6.109141190888996e17,6.104612546566618e17,6.10008390224424e17,6.09555525792186e17,6.09102661359948e17,6.086497969277102e17,6.081969324954724e17,6.077440680632344e17,6.072912036309966e17,6.068383391987587e17,6.063854747665208e17,6.05932610334283e17,6.05479745902045e17,6.050268814698072e17,6.045740170375693e17,6.041211526053313e17,6.036682881730936e17,6.032154237408557e17,6.027625593086177e17,6.023096948763799e17,6.01856830444142e17,6.014039660119043e17,6.009511015796663e17,6.004982371474284e17,6.000453727151905e17,5.995925082829526e17,5.991396438507148e17,5.986867794184769e17,5.98233914986239e17,5.97781050554001e17,5.973281861217632e17,5.968753216895254e17,5.964224572572876e17,5.959695928250496e17,5.955167283928116e17,5.950638639605738e17,5.94610999528336e17,5.94158135096098e17,5.937052706638602e17,5.932524062316223e17,5.927995417993843e17,5.923466773671466e17,5.918938129349087e17,5.914409485026708e17,5.909880840704329e17,5.90535219638195e17,5.900823552059571e17,5.896294907737193e17,5.891766263414815e17,5.887237619092435e17,5.882708974770056e17,5.878180330447677e17,5.873651686125299e17,5.86912304180292e17,5.864594397480541e17,5.860065753158162e17,5.855537108835784e17,5.851008464513404e17,5.846479820191026e17,5.841951175868648e17,5.837422531546268e17,5.83289388722389e17,5.82836524290151e17,5.823836598579132e17,5.819307954256753e17,5.814779309934374e17,5.810250665611996e17,5.805722021289617e17,5.801193376967238e17,5.796664732644859e17,5.79213608832248e17,5.787607444000101e17,5.783078799677723e17,5.778550155355345e17,5.774021511032965e17,5.769492866710587e17,5.764964222388207e17,5.760435578065829e17,5.75590693374345e17,5.7513782894210714e17,5.7468496450986925e17,5.7423210007763136e17,5.737792356453935e17,5.733263712131556e17,5.7287350678091776e17,5.724206423486799e17,5.719677779164419e17,5.715149134842041e17,5.710620490519662e17,5.706091846197284e17,5.701563201874904e17,5.6970345575525254e17,5.692505913230147e17,5.6879772689077677e17,5.6834486245853894e17,5.6789199802630106e17,5.674391335940632e17,5.669862691618253e17,5.665334047295874e17,5.6608054029734957e17,5.656276758651117e17,5.651748114328738e17,5.647219470006359e17,5.64269082568398e17,5.638162181361601e17,5.6336335370392224e17,5.629104892716844e17,5.624576248394465e17,5.620047604072086e17,5.6155189597497075e17,5.6109903154273286e17,5.6064616711049504e17,5.601933026782571e17,5.597404382460192e17,5.592875738137814e17,5.588347093815434e17,5.583818449493056e17,5.579289805170677e17,5.574761160848298e17,5.5702325165259194e17,5.5657038722035405e17,5.561175227881162e17,5.5566465835587834e17,5.552117939236404e17,5.5475892949140256e17,5.543060650591647e17,5.538532006269268e17,5.534003361946889e17,5.52947471762451e17,5.524946073302132e17,5.5204174289797523e17,5.515888784657374e17,5.511360140334995e17,5.506831496012616e17,5.5023028516902374e17,5.4977742073678586e17,5.4932455630454803e17,5.488716918723101e17,5.484188274400722e17,5.479659630078344e17,5.475130985755965e17,5.470602341433586e17,5.466073697111207e17,5.461545052788829e17,5.457016408466449e17,5.4524877641440704e17,5.447959119821692e17,5.443430475499313e17,5.4389018311769344e17,5.4343731868545555e17,5.4298445425321766e17,5.4253158982097984e17,5.420787253887419e17,5.4162586095650406e17,5.411729965242662e17,5.407201320920282e17,5.402672676597904e17,5.398144032275525e17,5.393615387953147e17,5.3890867436307674e17,5.3845580993083885e17,5.38002945498601e17,5.3755008106636314e17,5.3709721663412525e17,5.3664435220188736e17,5.361914877696495e17,5.357386233374116e17,5.352857589051737e17,5.348328944729359e17,5.34380030040698e17,5.3392716560846e17,5.334743011762222e17,5.330214367439843e17,5.325685723117465e17,5.3211570787950854e17,5.3166284344727066e17,5.312099790150328e17,5.307571145827949e17,5.3030425015055706e17,5.2985138571831917e17,5.293985212860813e17,5.289456568538434e17,5.284927924216055e17,5.280399279893677e17,5.275870635571298e17,5.2713419912489184e17,5.26681334692654e17,5.262284702604161e17,5.2577560582817824e17,5.2532274139594035e17,5.248698769637025e17,5.2441701253146464e17,5.239641480992267e17,5.2351128366698886e17,5.23058419234751e17,5.2260555480251315e17,5.221526903702752e17,5.216998259380373e17,5.212469615057995e17,5.2079409707356154e17,5.203412326413237e17,5.198883682090858e17,5.1943550377684794e17,5.1898263934461005e17,5.1852977491237216e17,5.1807691048013434e17,5.1762404604789645e17,5.171711816156585e17,5.167183171834207e17,5.162654527511828e17,5.158125883189449e17,5.15359723886707e17,5.149068594544691e17,5.144539950222313e17,5.1400113058999334e17,5.135482661577555e17,5.1309540172551763e17,5.1264253729327974e17,5.1218967286104186e17,5.11736808428804e17,5.1128394399656614e17,5.108310795643282e17,5.103782151320903e17,5.099253506998525e17,5.094724862676146e17,5.090196218353767e17,5.085667574031388e17,5.081138929709009e17,5.076610285386631e17,5.0720816410642515e17,5.067552996741873e17,5.0630243524194944e17,5.058495708097115e17,5.0539670637747366e17,5.049438419452358e17,5.0449097751299795e17,5.0403811308076e17,5.035852486485222e17,5.031323842162843e17,5.026795197840464e17,5.022266553518085e17,5.017737909195706e17,5.013209264873328e17,5.0086806205509485e17,5.0041519762285696e17,4.9996233319061914e17,4.9950946875838125e17,4.9905660432614336e17,4.986037398939055e17,4.981508754616676e17,4.9769801102942976e17,4.972451465971918e17,4.96792282164954e17,4.963394177327161e17,4.9588655330047814e17,4.954336888682403e17,4.949808244360024e17,4.945279600037646e17,4.9407509557152666e17,4.9362223113928877e17,4.9316936670705094e17,4.9271650227481306e17,4.9226363784257517e17,4.918107734103373e17,4.913579089780994e17,4.909050445458615e17,4.904521801136236e17,4.899993156813858e17,4.895464512491479e17,4.8909358681690995e17,4.886407223846721e17,4.8818785795243424e17,4.8773499352019635e17,4.8728212908795846e17,4.868292646557206e17,4.8637640022348275e17,4.859235357912448e17,4.85470671359007e17,4.850178069267691e17,4.845649424945312e17,4.841120780622933e17,4.836592136300554e17,4.832063491978176e17,4.8275348476557965e17,4.823006203333418e17,4.8184775590110394e17,4.8139489146886605e17,4.8094202703662816e17,4.804891626043903e17,4.8003629817215245e17,4.7958343373991456e17,4.791305693076766e17,4.786777048754388e17,4.782248404432009e17,4.77771976010963e17,4.773191115787251e17,4.7686624714648723e17,4.764133827142494e17,4.7596051828201146e17,4.7550765384977363e17,4.7505478941753574e17,4.7460192498529786e17,4.7414906055306e17,4.736961961208221e17,4.7324333168858426e17,4.727904672563463e17,4.723376028241084e17,4.718847383918706e17,4.714318739596327e17,4.709790095273948e17,4.705261450951569e17,4.7007328066291904e17,4.696204162306812e17,4.6916755179844326e17,4.6871468736620544e17,4.6826182293396755e17,4.678089585017296e17,4.673560940694918e17,4.669032296372539e17,4.6645036520501606e17,4.659975007727781e17,4.655446363405402e17,4.650917719083024e17,4.646389074760645e17,4.641860430438266e17,4.6373317861158874e17,4.6328031417935085e17,4.6282744974711296e17,4.623745853148751e17,4.6192172088263725e17,4.6146885645039936e17,4.610159920181614e17,4.605631275859236e17,4.601102631536857e17,4.596573987214479e17,4.592045342892099e17,4.587516698569721e17,4.582988054247342e17,4.5784594099249626e17,4.573930765602584e17,4.5694021212802054e17,4.564873476957827e17,4.5603448326354477e17,4.555816188313069e17,4.5512875439906906e17,4.5467588996683117e17,4.542230255345933e17,4.537701611023554e17,4.533172966701175e17,4.528644322378796e17,4.524115678056417e17,4.519587033734039e17,4.51505838941166e17,4.5105297450892806e17,4.5060011007669024e17,4.5014724564445235e17,4.496943812122145e17,4.492415167799766e17,4.487886523477387e17,4.4833578791550086e17,4.478829234832629e17,4.474300590510251e17,4.469771946187872e17,4.465243301865493e17,4.460714657543114e17,4.4561860132207354e17,4.451657368898357e17,4.447128724575978e17,4.442600080253599e17,4.4380714359312205e17,4.4335427916088416e17,4.429014147286463e17,4.424485502964084e17,4.419956858641705e17,4.415428214319327e17,4.410899569996947e17,4.406370925674569e17,4.40184228135219e17,4.397313637029812e17,4.3927849927074323e17,4.3882563483850534e17,4.383727704062675e17,4.379199059740296e17,4.3746704154179174e17,4.3701417710955386e17,4.36561312677316e17,4.361084482450781e17,4.356555838128402e17,4.352027193806024e17,4.347498549483644e17,4.342969905161265e17,4.338441260838887e17,4.333912616516508e17,4.329383972194129e17,4.3248553278717504e17,4.3203266835493715e17,4.315798039226993e17,4.311269394904614e17,4.3067407505822355e17,4.3022121062598566e17,4.297683461937477e17,4.293154817615099e17,4.28862617329272e17,4.284097528970342e17,4.279568884647962e17,4.2750402403255834e17,4.270511596003205e17,4.265982951680826e17,4.2614543073584474e17,4.2569256630360685e17,4.2523970187136896e17,4.247868374391311e17,4.243339730068932e17,4.2388110857465536e17,4.234282441424175e17,4.229753797101795e17,4.225225152779417e17,4.220696508457038e17,4.21616786413466e17,4.21163921981228e17,4.2071105754899014e17,4.202581931167523e17,4.1980532868451437e17,4.1935246425227654e17,4.1889959982003866e17,4.184467353878008e17,4.179938709555629e17,4.17541006523325e17,4.1708814209108717e17,4.166352776588493e17,4.161824132266114e17,4.157295487943735e17,4.152766843621356e17,4.148238199298977e17,4.1437095549765984e17,4.13918091065422e17,4.134652266331841e17,4.130123622009462e17,4.1255949776870835e17,4.1210663333647046e17,4.1165376890423264e17,4.112009044719947e17,4.107480400397568e17,4.10295175607519e17,4.09842311175281e17,4.093894467430432e17,4.089365823108053e17,4.084837178785674e17,4.0803085344632954e17,4.0757798901409165e17,4.071251245818538e17,4.0667226014961594e17,4.06219395717378e17,4.0576653128514016e17,4.053136668529023e17,4.048608024206644e17,4.044079379884265e17,4.039550735561886e17,4.035022091239508e17,4.0304934469171283e17,4.02596480259475e17,4.021436158272371e17,4.0169075139499923e17,4.0123788696276134e17,4.0078502253052346e17,4.0033215809828563e17,3.998792936660477e17,3.994264292338098e17,3.98973564801572e17,3.985207003693341e17,3.980678359370962e17,3.976149715048583e17,3.971621070726205e17,3.967092426403826e17,3.9625637820814464e17,3.958035137759068e17,3.953506493436689e17,3.9489778491143104e17,3.9444492047919315e17,3.9399205604695526e17,3.9353919161471744e17,3.930863271824795e17,3.9263346275024166e17,3.921805983180038e17,3.917277338857659e17,3.91274869453528e17,3.908220050212901e17,3.903691405890523e17,3.8991627615681434e17,3.8946341172457645e17,3.890105472923386e17,3.8855768286010074e17,3.8810481842786285e17,3.8765195399562496e17,3.871990895633871e17,3.8674622513114925e17,3.862933606989113e17,3.858404962666735e17,3.853876318344356e17,3.849347674021976e17,3.844819029699598e17,3.840290385377219e17,3.835761741054841e17,3.8312330967324614e17,3.8267044524100826e17,3.822175808087704e17,3.8176471637653254e17,3.8131185194429466e17,3.8085898751205677e17,3.804061230798189e17,3.79953258647581e17,3.795003942153431e17,3.790475297831053e17,3.785946653508674e17,3.7814180091862944e17,3.776889364863916e17,3.772360720541537e17,3.767832076219159e17,3.7633034318967795e17,3.7587747875744006e17,3.7542461432520224e17,3.749717498929643e17,3.7451888546072646e17,3.740660210284886e17,3.7361315659625075e17,3.731602921640128e17,3.727074277317749e17,3.722545632995371e17,3.7180169886729914e17,3.713488344350613e17,3.708959700028234e17,3.7044310557058554e17,3.6999024113834765e17,3.6953737670610976e17,3.6908451227387194e17,3.6863164784163405e17,3.681787834093961e17,3.677259189771583e17,3.672730545449204e17,3.668201901126825e17,3.663673256804446e17,3.659144612482067e17,3.654615968159689e17,3.6500873238373094e17,3.645558679514931e17,3.6410300351925523e17,3.6365013908701734e17,3.6319727465477946e17,3.627444102225416e17,3.6229154579030374e17,3.618386813580658e17,3.613858169258279e17,3.609329524935901e17,3.604800880613522e17,3.600272236291143e17,3.595743591968764e17,3.591214947646385e17,3.586686303324007e17,3.5821576590016275e17,3.577629014679249e17,3.5731003703568704e17,3.568571726034491e17,3.5640430817121126e17,3.559514437389734e17,3.5549857930673555e17,3.550457148744976e17,3.545928504422597e17,3.541399860100219e17,3.53687121577784e17,3.532342571455461e17,3.527813927133082e17,3.523285282810704e17,3.5187566384883245e17,3.5142279941659456e17,3.5096993498435674e17,3.5051707055211885e17,3.5006420611988096e17,3.496113416876431e17,3.491584772554052e17,3.4870561282316736e17,3.482527483909294e17,3.477998839586916e17,3.473470195264537e17,3.4689415509421574e17,3.464412906619779e17,3.4598842622974e17,3.455355617975022e17,3.4508269736526426e17,3.4462983293302637e17,3.4417696850078854e17,3.4372410406855066e17,3.4327123963631277e17,3.428183752040749e17,3.42365510771837e17,3.419126463395991e17,3.414597819073612e17,3.410069174751234e17,3.405540530428855e17,3.4010118861064755e17,3.396483241784097e17,3.3919545974617184e17,3.38742595313934e17,3.3828973088169606e17,3.378368664494582e17,3.3738400201722035e17,3.369311375849824e17,3.364782731527446e17,3.360254087205067e17,3.355725442882688e17,3.351196798560309e17,3.34666815423793e17,3.342139509915552e17,3.337610865593173e17,3.3330822212707936e17,3.3285535769484154e17,3.3240249326260365e17,3.3194962883036576e17,3.314967643981279e17,3.3104389996589005e17,3.3059103553365216e17,3.301381711014142e17,3.296853066691764e17,3.292324422369385e17,3.287795778047007e17,3.283267133724627e17,3.2787384894022483e17,3.27420984507987e17,3.2696812007574906e17,3.2651525564351123e17,3.2606239121127334e17,3.2560952677903546e17,3.251566623467976e17,3.247037979145597e17,3.2425093348232186e17,3.23798069050084e17,3.23345204617846e17,3.228923401856082e17,3.224394757533703e17,3.219866113211324e17,3.215337468888945e17,3.2108088245665664e17,3.206280180244188e17,3.2017515359218086e17,3.1972228915994304e17,3.1926942472770515e17,3.188165602954672e17,3.183636958632294e17,3.179108314309915e17,3.1745796699875366e17,3.170051025665157e17,3.165522381342778e17,3.1609937370204e17,3.156465092698021e17,3.151936448375642e17,3.1474078040532634e17,3.1428791597308845e17,3.1383505154085056e17,3.133821871086127e17,3.1292932267637485e17,3.1247645824413696e17,3.12023593811899e17,3.115707293796612e17,3.111178649474233e17,3.106650005151855e17,3.102121360829475e17,3.097592716507097e17,3.093064072184718e17,3.0885354278623386e17,3.08400678353996e17,3.0794781392175814e17,3.074949494895203e17,3.0704208505728237e17,3.065892206250445e17,3.0613635619280666e17,3.0568349176056877e17,3.052306273283309e17,3.04777762896093e17,3.043248984638551e17,3.038720340316172e17,3.034191695993793e17,3.029663051671415e17,3.025134407349036e17,3.0206057630266566e17,3.0160771187042784e17,3.0115484743818995e17,3.007019830059521e17,3.002491185737142e17,2.997962541414763e17,2.9934338970923846e17,2.988905252770005e17,2.984376608447627e17,2.979847964125248e17,2.975319319802869e17,2.97079067548049e17,2.9662620311581114e17,2.961733386835733e17,2.957204742513354e17,2.952676098190975e17,2.9481474538685965e17,2.9436188095462176e17,2.939090165223839e17,2.93456152090146e17,2.930032876579081e17,2.925504232256702e17,2.920975587934324e17,2.916446943611945e17,2.911918299289566e17,2.907389654967187e17,2.9028610106448083e17,2.8983323663224294e17,2.8938037220000506e17,2.8892750776776723e17,2.8847464333552934e17,2.8802177890329146e17,2.8756891447105357e17,2.8711605003881568e17,2.866631856065778e17,2.8621032117433994e17,2.8575745674210205e17,2.853045923098642e17,2.8485172787762627e17,2.8439886344538838e17,2.8394599901315053e17,2.8349313458091264e17,2.8304027014867478e17,2.825874057164369e17,2.82134541284199e17,2.8168167685196112e17,2.8122881241972326e17,2.8077594798748538e17,2.8032308355524752e17,2.798702191230096e17,2.794173546907717e17,2.7896449025853386e17,2.7851162582629597e17,2.780587613940581e17,2.776058969618202e17,2.7715303252958234e17,2.7670016809734445e17,2.762473036651066e17,2.757944392328687e17,2.753415748006308e17,2.7488871036839293e17,2.7443584593615504e17,2.739829815039172e17,2.735301170716793e17,2.7307725263944144e17,2.7262438820720352e17,2.7217152377496566e17,2.7171865934272778e17,2.7126579491048992e17,2.7081293047825203e17,2.703600660460141e17,2.6990720161377626e17,2.6945433718153837e17,2.690014727493005e17,2.6854860831706262e17,2.6809574388482474e17,2.6764287945258685e17,2.67190015020349e17,2.667371505881111e17,2.6628428615587325e17,2.6583142172363533e17,2.6537855729139744e17,2.6492569285915958e17,2.644728284269217e17,2.6401996399468384e17,2.6356709956244592e17,2.6311423513020806e17,2.6266137069797018e17,2.6220850626573232e17,2.6175564183349443e17,2.6130277740125658e17,2.6084991296901866e17,2.6039704853678077e17,2.599441841045429e17,2.5949131967230502e17,2.5903845524006717e17,2.5858559080782925e17,2.581327263755914e17,2.576798619433535e17,2.5722699751111565e17,2.5677413307887776e17,2.5632126864663987e17,2.55868404214402e17,2.554155397821641e17,2.5496267534992624e17,2.5450981091768835e17,2.5405694648545046e17,2.5360408205321258e17,2.5315121762097472e17,2.5269835318873683e17,2.5224548875649898e17,2.517926243242611e17,2.513397598920232e17,2.508868954597853e17,2.5043403102754742e17,2.4998116659530957e17,2.4952830216307168e17,2.490754377308338e17,2.486225732985959e17,2.4816970886635805e17,2.4771684443412016e17,2.472639800018823e17,2.4681111556964438e17,2.4635825113740653e17,2.4590538670516864e17,2.4545252227293075e17,2.449996578406929e17,2.4454679340845498e17,2.4409392897621712e17,2.4364106454397923e17,2.4318820011174138e17,2.427353356795035e17,2.422824712472656e17,2.418296068150277e17,2.4137674238278982e17,2.4092387795055197e17,2.4047101351831408e17,2.4001814908607622e17,2.395652846538383e17,2.3911242022160045e17,2.3865955578936256e17,2.382066913571247e17,2.3775382692488682e17,2.3730096249264893e17,2.3684809806041104e17,2.3639523362817315e17,2.359423691959353e17,2.354895047636974e17,2.3503664033145952e17,2.3458377589922163e17,2.3413091146698378e17,2.336780470347459e17,2.3322518260250803e17,2.327723181702701e17,2.3231945373803226e17,2.3186658930579437e17,2.3141372487355648e17,2.3096086044131862e17,2.305079960090807e17,2.3005513157684285e17,2.2960226714460496e17,2.291494027123671e17,2.286965382801292e17,2.2824367384789136e17,2.2779080941565344e17,2.2733794498341558e17,2.268850805511777e17,2.264322161189398e17,2.2597935168670195e17,2.2552648725446403e17,2.2507362282222618e17,2.246207583899883e17,2.2416789395775043e17,2.2371502952551254e17,2.2326216509327466e17,2.2280930066103677e17,2.223564362287989e17,2.2190357179656102e17,2.2145070736432314e17,2.2099784293208525e17,2.2054497849984736e17,2.200921140676095e17,2.1963924963537162e17,2.1918638520313376e17,2.1873352077089587e17,2.18280656338658e17,2.178277919064201e17,2.173749274741822e17,2.1692206304194435e17,2.1646919860970646e17,2.1601633417746858e17,2.155634697452307e17,2.1511060531299283e17,2.1465774088075494e17,2.142048764485171e17,2.1375201201627917e17,2.132991475840413e17,2.1284628315180342e17,2.1239341871956554e17,2.1194055428732768e17,2.1148768985508976e17,2.110348254228519e17,2.10581960990614e17,2.1012909655837616e17,2.0967623212613827e17,2.092233676939004e17,2.087705032616625e17,2.0831763882942464e17,2.0786477439718675e17,2.0741190996494886e17,2.06959045532711e17,2.065061811004731e17,2.0605331666823523e17,2.0560045223599734e17,2.051475878037595e17,2.046947233715216e17,2.042418589392837e17,2.0378899450704582e17,2.0333613007480797e17,2.0288326564257008e17,2.024304012103322e17,2.019775367780943e17,2.0152467234585642e17,2.0107180791361856e17,2.0061894348138067e17,2.0016607904914282e17,1.997132146169049e17,1.9926035018466704e17,1.9880748575242915e17,1.983546213201913e17,1.979017568879534e17,1.9744889245571552e17,1.9699602802347763e17,1.9654316359123974e17,1.960902991590019e17,1.95637434726764e17,1.9518457029452614e17,1.9473170586228822e17,1.9427884143005037e17,1.9382597699781248e17,1.9337311256557462e17,1.9292024813333674e17,1.924673837010988e17,1.9201451926886096e17,1.9156165483662307e17,1.911087904043852e17,1.9065592597214733e17,1.9020306153990944e17,1.8975019710767155e17,1.892973326754337e17,1.888444682431958e17,1.8839160381095795e17,1.8793873937872003e17,1.8748587494648214e17,1.870330105142443e17,1.865801460820064e17,1.8612728164976854e17,1.8567441721753066e17,1.8522155278529277e17,1.8476868835305488e17,1.8431582392081702e17,1.8386295948857914e17,1.8341009505634125e17,1.8295723062410336e17,1.8250436619186547e17,1.8205150175962762e17,1.8159863732738973e17,1.8114577289515187e17,1.8069290846291395e17,1.802400440306761e17,1.797871795984382e17,1.7933431516620035e17,1.7888145073396246e17,1.7842858630172454e17,1.779757218694867e17,1.775228574372488e17,1.7706999300501094e17,1.7661712857277306e17,1.761642641405352e17,1.7571139970829728e17,1.7525853527605942e17,1.7480567084382154e17,1.7435280641158368e17,1.738999419793458e17,1.7344707754710787e17,1.7299421311487e17,1.7254134868263213e17,1.7208848425039427e17,1.7163561981815638e17,1.711827553859185e17,1.707298909536806e17,1.7027702652144275e17,1.6982416208920486e17,1.69371297656967e17,1.689184332247291e17,1.684655687924912e17,1.6801270436025334e17,1.6755983992801546e17,1.671069754957776e17,1.6665411106353968e17,1.6620124663130182e17,1.6574838219906394e17,1.6529551776682608e17,1.648426533345882e17,1.6438978890235034e17,1.6393692447011242e17,1.6348406003787453e17,1.6303119560563667e17,1.625783311733988e17,1.6212546674116093e17,1.61672602308923e17,1.6121973787668515e17,1.6076687344444726e17,1.603140090122094e17,1.5986114457997152e17,1.594082801477336e17,1.5895541571549574e17,1.5850255128325786e17,1.5804968685102e17,1.575968224187821e17,1.5714395798654422e17,1.5669109355430634e17,1.5623822912206848e17,1.557853646898306e17,1.5533250025759274e17,1.5487963582535485e17,1.5442677139311693e17,1.5397390696087907e17,1.5352104252864118e17,1.5306817809640333e17,1.5261531366416544e17,1.5216244923192755e17,1.5170958479968966e17,1.512567203674518e17,1.5080385593521392e17,1.5035099150297606e17,1.4989812707073814e17,1.4944526263850026e17,1.489923982062624e17,1.485395337740245e17,1.4808666934178666e17,1.4763380490954874e17,1.4718094047731088e17,1.46728076045073e17,1.462752116128351e17,1.4582234718059725e17,1.4536948274835936e17,1.4491661831612147e17,1.4446375388388362e17,1.4401088945164573e17,1.4355802501940784e17,1.4310516058716997e17,1.426522961549321e17,1.4219943172269419e17,1.4174656729045632e17,1.4129370285821845e17,1.4084083842598056e17,1.4038797399374269e17,1.399351095615048e17,1.3948224512926693e17,1.3902938069702906e17,1.3857651626479117e17,1.381236518325533e17,1.376707874003154e17,1.3721792296807752e17,1.3676505853583965e17,1.3631219410360176e17,1.3585932967136389e17,1.3540646523912602e17,1.3495360080688813e17,1.3450073637465026e17,1.3404787194241237e17,1.335950075101745e17,1.3314214307793662e17,1.3268927864569872e17,1.3223641421346085e17,1.3178354978122296e17,1.3133068534898509e17,1.3087782091674722e17,1.3042495648450933e17,1.2997209205227146e17,1.2951922762003358e17,1.290663631877957e17,1.2861349875555782e17,1.2816063432331994e17,1.2770776989108205e17,1.2725490545884418e17,1.2680204102660629e17,1.2634917659436842e17,1.2589631216213054e17,1.2544344772989266e17,1.2499058329765478e17,1.245377188654169e17,1.2408485443317902e17,1.2363199000094115e17,1.2317912556870326e17,1.2272626113646538e17,1.2227339670422749e17,1.2182053227198962e17,1.2136766783975174e17,1.2091480340751386e17,1.2046193897527598e17,1.2000907454303811e17,1.1955621011080022e17,1.1910334567856235e17,1.1865048124632446e17,1.1819761681408658e17,1.177447523818487e17,1.1729188794961082e17,1.1683902351737294e17,1.1638615908513506e17,1.1593329465289718e17,1.1548043022065931e17,1.1502756578842142e17,1.1457470135618355e17,1.1412183692394568e17,1.1366897249170779e17,1.132161080594699e17,1.1276324362723202e17,1.1231037919499414e17,1.1185751476275627e17,1.1140465033051838e17,1.1095178589828051e17,1.1049892146604262e17,1.1004605703380475e17,1.0959319260156688e17,1.09140328169329e17,1.086874637370911e17,1.0823459930485323e17,1.0778173487261534e17,1.0732887044037747e17,1.0687600600813958e17,1.0642314157590171e17,1.0597027714366384e17,1.0551741271142595e17,1.0506454827918808e17,1.046116838469502e17,1.0415881941471232e17,1.0370595498247443e17,1.0325309055023654e17,1.0280022611799867e17,1.023473616857608e17,1.0189449725352291e17,1.0144163282128504e17,1.0098876838904715e17,1.0053590395680928e17,1.0008303952457141e17,9.963017509233352e16,9.917731066009565e16,9.872444622785776e16,9.827158179561987e16,9.7818717363382e16,9.736585293114411e16,9.691298849890624e16,9.646012406666837e16,9.600725963443048e16,9.55543952021926e16,9.510153076995472e16,9.464866633771685e16,9.419580190547898e16,9.374293747324107e16,9.32900730410032e16,9.283720860876533e16,9.238434417652744e16,9.193147974428957e16,9.147861531205168e16,9.102575087981381e16,9.057288644757594e16,9.012002201533805e16,8.966715758310018e16,8.921429315086227e16,8.87614287186244e16,8.830856428638653e16,8.785569985414864e16,8.740283542191077e16,8.69499709896729e16,8.6497106557435e16,8.604424212519714e16,8.559137769295925e16,8.513851326072138e16,8.46856488284835e16,8.42327843962456e16,8.377991996400773e16,8.332705553176984e16,8.287419109953197e16,8.24213266672941e16,8.196846223505621e16,8.151559780281834e16,8.106273337058046e16,8.060986893834258e16,8.01570045061047e16,7.97041400738668e16,7.925127564162893e16,7.879841120939106e16,7.834554677715317e16,7.78926823449153e16,7.743981791267742e16,7.698695348043954e16,7.653408904820166e16,7.608122461596378e16,7.56283601837259e16,7.517549575148803e16,7.472263131925013e16,7.426976688701226e16,7.381690245477437e16,7.33640380225365e16,7.291117359029862e16,7.245830915806074e16,7.200544472582286e16,7.1552580293584984e16,7.1099715861347096e16,7.0646851429109224e16,7.019398699687134e16,6.9741122564633464e16,6.928825813239558e16,6.88353937001577e16,6.838252926791982e16,6.7929664835681944e16,6.747680040344406e16,6.7023935971206184e16,6.657107153896831e16,6.6118207106730424e16,6.566534267449254e16,6.5212478242254664e16,6.475961381001679e16,6.430674937777891e16,6.385388494554102e16,6.3401020513303144e16,6.294815608106527e16,6.249529164882739e16,6.204242721658951e16,6.158956278435163e16,6.113669835211374e16,6.068383391987587e16,6.023096948763799e16,5.977810505540011e16,5.932524062316223e16,5.887237619092435e16,5.841951175868647e16,5.796664732644859e16,5.751378289421071e16,5.706091846197284e16,5.660805402973495e16,5.615518959749707e16,5.570232516525919e16,5.524946073302131e16,5.479659630078344e16,5.434373186854555e16,5.389086743630767e16,5.343800300406979e16,5.298513857183192e16,5.253227413959404e16,5.207940970735616e16,5.162654527511827e16,5.11736808428804e16,5.072081641064252e16,5.026795197840464e16,4.981508754616676e16,4.936222311392888e16,4.8909358681691e16,4.845649424945312e16,4.800362981721524e16,4.755076538497736e16,4.709790095273949e16,4.66450365205016e16,4.619217208826372e16,4.573930765602584e16,4.528644322378797e16,4.483357879155009e16,4.43807143593122e16,4.392784992707432e16,4.347498549483645e16,4.302212106259857e16,4.256925663036069e16,4.21163921981228e16,4.166352776588492e16,4.121066333364705e16,4.075779890140917e16,4.030493446917129e16,3.98520700369334e16,3.939920560469553e16,3.894634117245765e16,3.849347674021977e16,3.804061230798189e16,3.758774787574402e16,3.713488344350613e16,3.668201901126825e16,3.622915457903037e16,3.5776290146792492e16,3.5323425714554612e16,3.4870561282316732e16,3.441769685007885e16,3.3964832417840972e16,3.3511967985603092e16,3.3059103553365212e16,3.2606239121127332e16,3.2153374688889456e16,3.1700510256651572e16,3.1247645824413696e16,3.0794781392175816e16,3.0341916959937936e16,2.9889052527700056e16,2.9436188095462176e16,2.8983323663224296e16,2.853045923098642e16,2.8077594798748536e16,2.7624730366510656e16,2.7171865934272776e16,2.6719001502034896e16,2.626613706979702e16,2.5813272637559136e16,2.536040820532126e16,2.490754377308338e16,2.44546793408455e16,2.400181490860762e16,2.3548950476369744e16,2.309608604413186e16,2.2643221611893984e16,2.21903571796561e16,2.1737492747418224e16,2.1284628315180344e16,2.083176388294246e16,2.0378899450704584e16,1.99260350184667e16,1.9473170586228824e16,1.9020306153990944e16,1.8567441721753064e16,1.8114577289515184e16,1.7661712857277306e16,1.7208848425039424e16,1.6755983992801546e16,1.6303119560563666e16,1.5850255128325786e16,1.5397390696087908e16,1.4944526263850028e16,1.4491661831612148e16,1.4038797399374268e16,1.3585932967136388e16,1.313306853489851e16,1.268020410266063e16,1.222733967042275e16,1.1774475238184872e16,1.1321610805946992e16,1.0868746373709112e16,1.041588194147123e16,9.96301750923335e15,9.510153076995472e15,9.057288644757592e15,8.604424212519712e15,8.151559780281833e15,7.698695348043954e15,7.245830915806074e15,6.792966483568194e15,6.340102051330315e15,5.887237619092436e15,5.434373186854556e15,4.981508754616675e15,4.528644322378796e15,4.0757798901409165e15,3.622915457903037e15,3.1700510256651575e15,2.717186593427278e15,2.264322161189398e15,1.8114577289515185e15,1.358593296713639e15,9.057288644757592e14,4.528644322378796e14,0.0]}
},{}],20:[function(require,module,exports){
module.exports={"expected":[1.0,-0.4893256757618757,-0.5869843187742857,0.9669843652719138,-0.46795316656242764,-0.5556727801915762,0.9412373818962331,-0.3895382640382172,-0.7992312391026811,0.983598588439949,-0.06324488271312602,-0.2598415605388933,0.5248929027165818,0.6986836942176156,-0.8910717884987964,0.9895131472310316,-0.37981930652932056,-0.805515145020825,0.7700395372706854,-0.5250363944186774,-0.698563069236116,0.8634452297456232,-0.9894887814327309,0.3799752578767154,0.20377956864433294,0.9005044934399565,-0.6400160235215296,0.9795824356656541,-0.04221607956922786,-0.9591314628784521,0.5068535268838358,0.7135935590472687,-0.8525436668994876,-0.3005910370326063,0.9981606730535025,-0.8178143622139766,0.756434558482531,0.4513705159667846,0.20410966355222146,0.9003578199235055,-0.6402750645531665,-0.5901857704315998,0.9261820756648385,0.14151018002404042,-0.994734647820146,0.3403747183521067,0.8298450092392944,-0.7423812020123931,-0.4702091094824519,-0.817620273718421,0.00022553633712735167,0.4510696107780334,0.46981096519593935,0.021337108716404908,-0.8295932289945842,-0.34079882278287293,0.9946883188693748,0.841440215650844,-0.926352070387603,-0.9966765508207214,-0.8528959330442745,0.9180149535898902,0.9982013286940886,-0.6239155602347362,0.9093438820012506,0.18339699065700013,-0.9981879173416368,0.3001607944895794,0.852779336001795,-0.713277483012531,-0.3206593193988434,0.959003729403347,0.728224474288002,0.48854166299002444,-0.9648914589339689,0.7704347323449342,0.9751197689167109,-0.45126888390311837,-0.7565090462114036,0.817748814659618,0.36036239010265464,0.7422315837646786,0.12035334500226487,-0.8808647307215832,-0.5728248131678667,-0.14173122009706374,0.8908669729310011,0.5903660109699641,0.16304319024820071,-0.9004549624611502,0.8741768815046987,-0.10649579638721278,0.9096242409018835,-0.8635026756320208,0.08503106615519461,0.5251333213644543,0.8524269414640917,-0.06352679652162026,-0.5066610305464151,-0.41298806176822017,0.04199298696068967,0.7925837604026847,-0.9549578981519299,-0.020439650682653677,0.703432750439227,0.9483373582664814,-0.2868275014888719,0.8181367755168774,-0.9412758420024606,-0.9924043782553786,0.6721340253341199,0.9337766329612593,-0.24525722564409622,-0.6512686477920823,-0.9258432182711831,0.9315153107306932,0.6674799425206374,-0.9931559424547659,-0.20323082490026498,-0.68338085942293,-0.280817405461184,-0.45745311922618587,0.698964004580867,-0.9871967434784967,0.4381725761386518,-0.7142221318400516,0.035729869238950704,-0.41868828303101047,-0.5012473049230308,-0.9794015740683921,0.3990093000894275,0.5197889647518147,-0.9977461273513498,-0.37914477803073987,-0.5380889229822169,0.9989610426661131,-0.6125987710702228,-0.9031634592439955,-0.9997114416153767,0.595413396792359,-0.5739298131116403,0.9999969752640192,-0.5779511555945306,-0.3342640246265311,0.1265732425112266,0.560220167409816,0.354508609825239,-0.9685731234698692,-0.7523951358664359,-0.3745883487046802,0.973711172231123,0.7664237440532328,0.39449390419671476,-0.9783964458035024,0.7325057504505038,0.1346344602344984,0.982626765537232,-0.7176564739507096,-0.15596943070444932,0.3061337021872836,0.7024734875636237,0.17723187547020808,-0.9066241294676505,-0.6869638513700227,-0.19841190750601254,-0.9925693938976411,-0.8561514899641142,0.07067614768917337,0.7747407342534467,0.8448105060859614,-0.240485381473735,0.9320049980506726,-0.833076685761679,0.027603084312110625,-0.9396035703003974,0.8209554852116174,-0.28211160513084593,-0.8139954657630553,0.9436710113037724,-0.015521314775907897,0.8263313019659293,-0.936316864864028,0.25219753761455943,-0.8382828945429824,-0.782324850576371,-0.05861684760680891,0.8498446860098797,0.9939673414995103,0.2102415258996304,0.6781320885195291,-0.9913713356456856,-0.18911198685915315,0.8717775444623778,-0.9025836339147046,0.16789451084310195,0.7091885571552564,0.8930907732103112,-0.14659896396679373,0.4950341391360714,0.9808232948485571,-0.40556939851896273,0.7389260898934001,-0.9763927234037669,0.3857655080737308,0.5320354322068827,0.9715081298502011,0.082343076230682,0.7672893814148907,0.9995136516789941,-0.6011549777103152,0.5680472555192719,-0.9999536792300742,0.5837838411585274,0.32750214877304074,-0.9541539790370103,0.3048494518907832,0.6030026349434044,-0.9994388121111952,-0.2842423488371274,0.3679349849079402,-0.9720539830808564,-0.5300746140123127,-0.3878994501215945,-0.9970652069833169,0.5116673492998117,0.40768354229260345,-0.9812716833505049,-0.49302215953589207,-0.42727806182839295,-0.9928372782338096,-0.7075551790882731,-0.17017530567391304,-0.9886644325046914,0.6921532916028491,0.19138381691667217,-0.912605334836737,-0.6764295531966663,0.48483353634428805,-0.9942184816438562,0.6603912753999095,0.23352403871125288,-0.929383984958732,0.8370189242928318,-0.0347651006775223,0.937126966133885,0.6274010755908076,0.27522995677307105,-0.9444341837569796,0.8126490962390548,-0.29589577767748143,0.9513022399756198,0.9388090221309133,-0.02991622164498499,0.8343545131151613,0.7867679182708516,0.05146220808789758,-0.8460464356767621,0.9230855275594552,-0.07298426463080349,-0.9692405336428314,0.7594235237292775,0.09447238352859913,0.6886436439323135,0.9056452954200336,-0.17495394205357379,-0.704118569603261,0.9860171753443259,0.1373068609596402,-0.8888284056281803,0.8865207607371549,-0.13234107579593812,0.8985025998934736,0.9779154163243402,-0.39236643121477127,0.7485508391874361,-0.9731814466519851,-0.08948208402791315,-0.7626744695697703,0.9679949481128747,-0.35234386160123293,0.7764434567202536,-0.962358332426133,-0.04645667511789645,0.5798380731360465,-0.9999886060918622,-0.3116660093232037,-0.597270989993137,0.9996531768361319,-0.5542139626490353,-0.8155593753916134,0.9427750318255527,-0.27040852630578144,-0.6312956544551611,0.9975881758260389,-0.5178106556283603,-0.4011301320863599,0.9798662183493164,0.4992435687283226,-0.6641462468142886,0.9936678785864355,-0.48044433382837304,-0.440251519988446,-0.9910141378298444,0.46142169256296683,-0.6957616721401483,-0.99072373041129,0.6816895981751503,-0.47855413617203785,0.9934235597552414,-0.6657550174074323,-0.22655070579506073,-0.9956614476603679,-0.4031022804508542,-0.5159667461326496,0.9974363535099569,0.829053811438215,-0.2683341768958795,0.9420546487207226,-0.8168039267029641,-0.5524197705830782,0.9995941333915266,-0.5989971708332102,-0.3096186050061061,0.9556420282536296,-0.7911705898316995,-0.04430492627233604,0.9998928864004228,-0.9258176262909147,-0.35032721010201273,0.6675303631219551,-0.7640658483790819,-0.6221777949856946,0.8646674631015803,-0.5277853801661923,0.18200439035732233,0.9774629664667134,-0.9871859402485561,-0.13020574787172093,0.885522087892609,-0.889813377829279,-0.4297153264838993,0.9856559429654129,-0.705646430079651,0.398947208533365,0.9047298349132042,-0.9977506688387457,0.09661649742044101,0.7580203986548969,-0.9697684095760869,-0.21513840275877452,0.9222549819470364,-0.8471927725117991,0.053613201278327735,0.7854365594916405,-0.9583453628587226,0.31846656444863003,0.5915086785169903,-0.9998162149596912,0.010510196285815065,0.8113919797917014,-0.9451400029771029,-0.29847135990974677,0.6257223343037094,-0.9980599240936394,0.5239273752749212,0.39455612609062934,-0.930176889017824,0.23561790872286176,0.9644248977566299,-0.9944474596492842,-0.07567425517896388,0.4338065382353059,-0.9134838491063422,0.702425292839764,0.1772985176288782,-0.9889855400218764,0.4486000082921964,0.8800252000349198,-0.9925776311212554,0.15101727645394328,0.2195657407668146,-0.9816843231895641,0.8447742724243342,0.5098155093932262,-0.8750353326140147,0.6384957895825512,0.7503367339539015,-0.9396267444454626,0.3699370005848552,-0.005974576275472565,-0.9993643418209054,0.604719539765512,0.3027973056288802,-0.9616217080258317,0.3295365654095611,0.5820336616841404,-0.8383198129976418,0.5698186436172259,-0.23120742348510703,-0.9656140375688979,0.768668942519611,0.08019623328996972,-0.9987201110678391,0.533858009185522,0.383777370256238,-0.975925195340308,0.7403756894033224,0.12309794944665382,-0.8821703035489487,0.8930603079795693,-0.1465319806724015,-0.9844213452967953,0.7107054991317457,0.16577073029014647,-0.9906497291480492,0.8728307545928183,-0.10374595009602773,-0.7533274076307905,0.971492078853629,0.2081352137637191,-0.9194612686072278,0.42029557018078145,-0.0607669747006351,-0.9959088227329936,0.9603672994262314,0.2501126111764487,-0.5857159963774405,0.9999279181107771,-0.017674985997975196,-0.8071829237502758,0.6139972898566458,-0.28417742669797535,-0.9499154249370592,0.9984804275644827,0.025449874320120146,-0.3879618618438633,0.9327835313648138,0.33259473772445647,-0.6533644952049649,0.7761008450339739,-0.4929632456164467,-0.8550364956367983,0.9852087217303925,-0.20052259032901668,-0.6853969882720303,0.9900207251515102,0.11147748652489374,-0.8765995397164222,0.8982638946521291,-0.6763796793860721,-0.7161547925658396,0.9830242464845329,-0.41617555373675846,-0.5036380964778719,0.9963084469338571,-0.11537673455269463,-0.7455807052849587,0.974199557317256,-0.376584618764597,-0.540417589778923,0.9990832384789698,-0.61041085973055,-0.29596045930300824,0.9513231114607765,-0.336293318611476,-0.5761920243383267,0.999999953304416,-0.02937297568378825,-0.3368688572314698,0.9511345650130429,-0.7732325698077177,-0.07305179842069098,0.999056886520743,-0.5399032275809829,-0.8253328272653535,0.9743373159117074,-0.2539105180197609,-0.11598383063014693,0.996255792026293,-0.8962613844763166,-0.4167312299528038,0.9209972518639732,-0.7157280774301511,-0.6768297338408336,0.898532322365556,-0.46538105428121135,0.11087007599714058,0.9901066715655074,-0.973165867444721,-0.20112133818916095,0.9851038034396751,-0.8547193876196586,-0.4934949276046878,0.7764861277613553,-0.6529016686934738,0.33201827193612715,0.9330036560369935,-0.8315439294830532,0.024838868198428572,0.9985139227290258,-0.6196372793390754,-0.28476337425051024,0.6144795997791959,-0.8068219811670062,-0.018286086554118154,0.8278854399722104,-0.9353422804928401,0.249520791023114,0.9605374842831838,-0.7805995200984842,-0.06137703317760074,0.851298770377976,-0.919220785153258,0.20753736077894952,0.6801617258859415,-0.9910050782523037,0.4613616164507831,0.8731288709127968,-0.9013897398228993,0.16516795634997988,0.9809290746986323,-0.9843136969807224,-0.1471365553123484,0.49743482456220095,-0.9956677462085686,0.12249137557903099,0.7407863952154845,-0.6934301448311383,0.38321290142972225,0.9118800054516452,-0.9987508377988049,0.07958698758986689,0.2891084170623229,-0.9654549576881392,-0.2318020188717338,0.5703208027536638,-0.837986443512222,0.5815365472506929,0.7959028228543293,-0.9617892285129811,0.30221474250188646,0.06590361275000998,-0.9993423659884431,-0.006585763586757753,0.3705047704119619,-0.9394174158651962,0.749932556931399,0.6389660648046982,-0.8753310257445232,0.5092896093063918,0.41020691951517796,-0.9818005823484507,0.21896941508534176,0.6715375827231997,-0.9925031161303592,0.879734760599934,0.44914617329792234,-0.9890758202351222,0.6901548867232699,0.19409713615839483,-0.9137323602073238,0.43325576291352935,0.4872501132487555,-0.994511593015401,0.1340959037969672,0.23621185620293358,-0.9304010936668734,0.83550269850892,-0.03200147506187885,-0.7986406969167941,0.625245453911722,0.27788727376093675,-0.9453394842025175,0.35400037051033384,0.011121359899812631,-0.9998277456586204,0.9378530050244416,-0.25645319322593535,-0.9585197496689707,0.7850581157421195,0.5958499551424273,-0.8475173356870698,0.5556869034889441,-0.21454147534578763,-0.9699173776497707,0.9919385487832287,0.09722481932575383,-0.9977095111320383,0.9044693036703729,0.3995075878529488,-0.706079372198475,0.7287761014691778,-0.4291633549687374,-0.8900921169284111,0.8852379609442209,-0.1295997273581042,-0.9872832874933714,0.698575224473638,0.1826053472742279,-0.5283044207128166,0.8643602688617332,-0.6216991854981937,-0.7644600137434293,0.9672972750171799,-0.3497546786354696,-0.9260484687025096,0.8418750553724991,-0.04369431882542744,-0.791544248839508,0.9554618328084838,-0.3090373816665594,-0.5994864775165233,0.9995765348131651,-0.5519101923709583,-0.8171563844300502,0.9418494401719394,-0.2677453426318575,-0.9551190315152293,0.9973924302641539,-0.5154430911434397,-0.40366154724578074,0.9804145516302478,-0.7256627321274771,-0.6662109519053887,0.9933533935296455,-0.478017378289702,-0.8637766515413235,0.9879941853914811,-0.1837451411529878,-0.18706296832492136,0.9107974592946434,-0.4397026574654689,-0.4809802813238169,0.8906199556284448,-0.6636891885037443,-0.7279817028406567,0.9277507604026448,-0.40057018568721536,0.0391624388285111,0.9976304132070793,-0.09837867180864565,-0.2709969053135768,0.9701989661127827,-0.8152055382610511,-0.5547226057173571,0.8197624648335341,-0.5967806724218327,-0.7843394235265153,0.9564528004248803,-0.3201444861749047,-0.047067205868111195,0.9998485924874625,-0.9247689362323582,0.7225344335474627,0.9457169184873622,-0.7622790140570233,-0.6243401969849653,0.8660532229496983,-0.5254346933934255,0.1792847148771492,0.9780429749694126,-0.9867409173473646,-0.13294687444840378,0.9946322295879461,-0.8885481635151937,-0.4322105285452346,0.7310839174719037,-0.7036844361842292,0.3964100999253481,0.905904296833234,-0.9979322153244077,-0.8791829104166435,0.992360746666355,-0.9690899270394937,-0.21783799420920613,0.558490814188902,-0.8457204416557681,0.59313501781636,0.8758910404352505,-0.9577668919952369,0.31584415348957123,0.9390193671294632,-0.3715814173907819,0.0077451446177001235,0.35715607815083944,-0.06706045848997114,0.7593354070613588,0.6278768970501508,-0.8683119768315759,-0.5805929523549598,0.8373532003010904,-0.9789781821065051,-0.8034442277238886,0.9651522011700024,-0.9941526677862038,0.8864580910814864,0.998808099521009,-0.7341710913334542,0.7004544811057175,0.6925942957626422,-0.7415647205647864,0.44612697574440974,-0.08934719739933177,-0.49844028049135775,0.14828324821358807,0.22226258921969116,-0.5622475326912202,-0.16402435871504986,0.5121923861982834,-0.7899344492509958,-0.46033266315105975,0.7521617932359919,-0.9405693943723694,0.9996496011595815,0.9187636581131713,-0.9994590988858264,0.9427298671241165,0.9957472626262127,-0.960859329412902,0.7938541551405432,-0.5176947919355401,-0.8285351937264963,0.5675441348467748,-0.2285162989072777,-0.6153938837248584,0.2858745913549604,0.08295218457944382,-0.44037311427707027,-0.023679798618651413,0.3863293266098853,-0.6958589407807637,0.7385141340200454,0.6520230427965913,-0.7772161903121533,0.993439056909828,0.8541169743196719,-0.9849037682289199,0.9802672336821995,0.16849700282459373,-0.9902686907785606,0.8714779538880167,-0.6328598297962482,-0.8990405922863137,0.6776827669886987,0.7149178882854306,-0.9205449623342407,0.4177848885865331,-0.058006688246382304,-0.30974737638471206,0.9595928726309838,0.2527889332984366,-0.9745976360893054,0.8422777555210527,0.5389269573844742,-0.808812118103126,0.6118123758954848,-0.28152517904448343,-0.950775926781449,0.998324229032664,-0.9086039022715691,-0.9999989268722398,0.9317832975676571,0.33520120919123586,-0.6554553468963742,0.774354141011266,-0.4905555294796126,-0.8564671519681926,0.9856787899126351,-0.197812822532413,-0.9739372370986212,0.9896272682117356,0.11422498917489585,-0.46836685371815845,0.8970452912594972,-0.674340403147601,-0.7180819774662627,0.9223073279568224,0.6755252572604593,-0.8977537804418341,0.9965420153400354,-0.11262959554666069,-0.25717478038749025,0.9735717675847003,-0.8234216725185053,-0.9854067345488803,0.8114711309794765,-0.6082182810992479,-0.7753691888578764,0.6542417803081634,-0.3336879193623785,-0.03274771213126437,0.38903020134938165,-0.9301271628921205,-0.33947111408734953,0.6588741661516907,0.2830656256143535,-0.6130817449627172,0.8587997093068178,0.565129289824327,-0.8268910123868968,0.9749560096652036,-0.9889654857991107,-0.9600434826179438,0.472369536534769,-0.8950315350987202,-0.9995511661550546,0.9199165083648045,-0.7137942083469547,0.40952588569710513,0.7540893826590729,-0.4629317994043876,0.10812153540487503,0.2615553365563757,-0.16691398823894432,-0.20382923106883935,0.5465461255737443,0.14538498634031327,-0.4958980388489947,0.7782255841415956,-0.9535478541030238,-0.7395958437415278,0.694704824114468,-0.9999710703730049,-0.9111518172682209,0.9986607990770863,-0.9488548738136479,0.7685823086828659,0.9659148119755908,-0.8051852524661953,0.5337434889526347,0.838951335594014,-0.5829760622539161,0.24684213655883058,0.12323234740631911,-0.3039020841587273,-0.06413674945052766,0.4233568412018287,-0.9181285082612624,-0.36885959359274134,0.9400228644697189,-0.9017127851746458,-0.6376030486891461,0.8744735212908531,-0.9911047190314518,0.16244013895825796,0.981462778502639,-0.9838220837823195,0.8509067911854273,0.9927179630344132,-0.8805752439438799,-0.4475635036830887,0.7426410363753305,-0.6914351269986349,0.3806573646832449,-0.017539577900915614,-0.9988851882016156,0.0768302904151847,0.994324781545075,-0.964730747843691,-0.23449098207183924,0.5725899892309259,-0.8364743144671267,0.5792848068284887,0.7975738779287515,-0.962542628437418,0.9951626858771653,0.9447606282431935,-0.9992382787462953,-0.009350842659444044,0.37307172298176233,-0.9384659943586655,0.7481004942313899,0.6410906828759978,-0.8766647029433162,0.5069079752093651,0.8465762249236958,-0.9823219743540704,0.216270519503335,0.1543540533031759,-0.9921613652014282,0.8784166591304071,0.451615015070271,-0.7456709504719798,-0.39788379113936595,0.7048244390479423,-0.9148523990452689,0.43076194418211344,-0.07230714454379758,-0.9947971002043541,0.9635268360682434,0.9870002647468584,-0.5763027071941863,0.8339800843479195,0.5268002478447561,-0.8652493056922095,0.6230850515135081,-0.2952471972237496,-0.66839319139683,0.9990509969636524,0.01388631058950382,-0.3772761770742386,0.04546316861716062,0.3216653166362603,-0.6445651277461577,-0.26492115218133333,0.5980683688761126,-0.8489817554545975,0.9831609606533137,0.8161344959185026,-0.158833869553459,0.991584355388041,0.9545930404215651,-0.9975186496242897,0.9032863962147698,-0.6848531251318475,-0.9271502954943474,0.72687986338981,-0.4266641435696224,-0.766345629648574,0.47957184433878863,-0.1268573879816049,-0.24329983819114326,0.18548531589665088,0.18532332071704985,-0.5306501775451518,0.8030131412427198,0.4794271785728283,-0.8914237412808055,0.9476950174635919,0.7267666380595852,-0.9270885140515651,0.9999366038766722,-0.9352943646867502,-0.997507029944426,0.9546421393994884,-0.78051486549066,-0.970626481017718,0.8162297473162229,0.55324852662922,0.20740487846984346,0.5982004816594388,-0.26508011173748103,-0.10448852064114543,0.9971890584923698,0.045298485101733545,-0.9998778354301221,0.7112305463909862,0.35125856647606224,-0.6682705630491097,0.7634238434962648,-0.4755867677595234,-0.8651666460516303,0.9884176013856771,-0.9757620795571742,-0.9776724410191919,0.9870267463399793,0.1311917741472739,-0.4834027488292941,0.8893590967576736,-0.6616182849344526,-0.7298747067822355,0.9287791738903606,-0.3980350281047475,-0.9051530547920722,0.99781684487465,-0.09562654514888629,-0.2736575616488928,0.9695252309987366,-0.813600916637136,-0.5570211993606253,0.8213429505346515,-0.5945596109372521,-0.7860517445171277,0.9572562594166911,-0.317523632130248,-0.04982912558107551,0.9997966535844238,-0.9237131752538691,-0.35550169002444915,0.6716379255254914,-0.7604863512369868,-0.6264978251868359,0.8674323608269036,-0.5230799890693537,0.17656366855955455,0.978615505211007,-0.9862883496793158,-0.13568698449364003,0.4873683739218163,0.07666592329377887,-0.43470242586100416,0.732967759612579,-0.7017170618136301,0.3938699603071326,0.9070718320751515,-0.9981061314728942,-0.8804971069253797,0.27801736625151724,-0.9684040346981231,-0.2205359200381457,0.9814943597810217,-0.8442416442962745,0.5909065081935896,0.874553475360625,-0.958558341707286,0.3132193275394449,0.054358740913530594,-0.3690128173206382,0.0049800337290649924,0.35973749974891156,-0.06430126251906848,-0.3037450237000785,0.6300266589570608,-0.8696802297023359,-0.5828421127416088,-0.17209735025320602,-0.9795384361047375,-0.8050874796349958,0.9658721248870316,-0.993850274484927,0.8851749595523224,0.9986693143516052,-0.9112197361447814,0.6984783135932077,0.9340540671781888,-0.7397067884476201,0.44365053204384564,-0.08659275076147575,-0.4960411875900598,0.14554808617760634,0.22495773821996848,-0.9806157056155023,-0.1667514452692209,0.9905135518540639,-0.7916270039039659,-0.4627856681067337,0.7539811013778699,-0.9415048525667059,0.9995725847971557,0.9198518545087895,-0.9995462139387947,0.9418039225977666,0.9959982021673612,-0.9600896039275605,-0.2510754345588486,-0.5153270340036307,-0.826983708446783,0.565265286550007,-0.22582342706006076,-0.9670370396874276,0.2832237327087859,0.9502257613627505,-0.4428540362183998,-0.0264440969380379,0.38887832903241637,-0.9324245946985033,0.7366469318485749,0.6541170952243165,-0.8847612036591737,0.993751490722535,0.8555518181992332,-0.9853786604413007,0.19954813418974326,0.17122198700605984,-0.9898800806683377,0.870118489734008,0.46680172585214147,-0.7569528701476281,0.6756468005331613,0.7168485812015479,-0.9216216174384495,0.4152710125472937,-0.055245958264419956,-0.9963933326258928,0.95881110864684,0.25546332255888776,-0.590189443993657,-0.19765122402442029,0.5412541400185193,-0.8104351281590091,0.6096227839264946,-0.2788707788078737,-0.9516291588526136,0.9981603971662752,0.931723440667062,-0.39305307736471196,0.9307759392177244,0.3378051176600396,-0.6575411868793495,0.7726015161623753,-0.48814406248271447,-0.8578912596251892,0.9861413214492036,-0.1951015422297389,-0.17568900615074212,0.2529484290189494,0.11697161844375255,-0.4708081799705446,0.8958198289260185,-0.6722959708027653,-0.7200036718057806,0.923372419619331,0.677561532144258,0.05071655467343697,0.9967679640387128,-0.10988159535809675,-0.9902457348997308,0.9729365337785523,-0.8218494875206499,-0.984932291417078,0.8130839699175856,-0.6060210519410967,0.2745120876296683,0.6521480256092286,-0.331079968686143,-0.03551126805500783,0.3864813756497097,-0.023844605424512513,-0.3420707752969298,0.6609517507774159,0.28571661393552156,0.48418039519735745,0.8602130514427317,0.5674083962842807,-0.8284428749775756,0.975567248760988,-0.9885520566075002,-0.9608136459226772,0.9957624365449135,-0.8937948421777543,-0.9994645067240225,0.9188287310480837,-0.7118548814877693,0.407001664888323,0.7522704178276268,-0.4604790048826216,0.10537216809937346,0.9908675251113712,-0.16418697711348573,-0.9811218977123416,0.5488596647968117,0.1481202153102633,-0.4982973583836213,0.7799590900940269,-0.6487027935805679,-0.7414541134503794,0.9349795627768444,-0.9999462142653905,-0.9122877773712397,0.9988000395171124,-0.07859554569680935,0.7668103539946841,0.9651953283946165,-0.8035423671999681,0.531403097157819,0.8309747137467914,-0.580727167072292,-0.7965045584989198,0.1259759639884462,-0.3012665413233054,-0.06689597532439129,0.9993058084347176,-0.9170292112230275,-0.37142836242698446,0.6842053832884482,-0.9029048167333948,-0.6397307970312751,0.8758114853151512,-0.50843344615347,0.15971107952523098,0.9819889778972177,-0.983322948134892,-0.1526044217291608,0.502224766707034,-0.8792614485258394,-0.45003454666454495,0.7444899991920778,-0.6894348223509822,0.37809891737431023,0.9141360134517159,-0.9990119009806795,0.07407300578474935,0.2943981389854843,-0.13311026261935024,-0.2371781523192468,0.5748547976005228,-0.8349557896158235,0.5770286371090549,0.7992388346354512,-0.9632886686186902,-0.7621723026024971,0.07142088930288626,-0.9991265511806182,-0.012115850234205658,0.9998457103007926,-0.9375073972024718,0.7462627114444608,0.9565009059846684,-0.8779916770342524,0.5045224652190581,-0.1552318961615574,-0.5548597619979534,0.21356997028497945,0.15708548857966265,-0.9918120280600945,-0.09821461681333113,0.4540804037274827,-0.7475105683574551,-0.4004191307084666,-0.37389597699918126,-0.9159654427865902,0.4282648317812218,0.8905449767299977,-0.9950750010276853,0.9627831620637289,0.987440904771096,-0.9771227199845808,0.832451093451963,-0.5733182357933895,-0.8638597052680005,0.6209198849149216,-0.2926041727923524,-0.6663338844411038,0.3488227632399427,0.016651155102412364,-0.3798355555046948,0.042700689727867315,-0.7432357977039361,-0.646676768189003,-0.2675865044830602,0.6002822096906772,-0.8504396837821754,0.9836625127398408,0.817729259085271,-0.971248812150344,0.991222580192353,0.9554131691774495,-0.9973201609415502,0.9020965820979093,-0.6828355838867582,-0.9261106725333225,0.7249780674796011,-0.4241616698334207,-0.8925991125908423,0.4771435720582371,0.8642773568044043,-0.24598098218639983,0.18276742635043694,0.1880398771503778,-0.5329918769478191,0.8615660082228987,0.4818520031074838,-0.7680135529602351,0.9485739720261713,0.7286632078917273,-0.9281214707448534,0.3996587084205379,-0.03816862508477395,-0.997698346209431,0.9538151466556347,-0.7787832744512114,-0.603903684371833,0.8146291155541943,0.5555498382375882,0.2046990492997775,0.595982340078219,-0.26241285400140135,-0.9567426257825441,0.9969780620656975,0.0480606376892146,-0.4087150988651387,0.713171623893394,0.3538461873790075,-0.6703250644973602,0.7616349112424394,0.6251167892153849,0.11961211021438278,0.9888334597928419,-0.17830618344878718,-0.9782497602973953,0.2363720412571007,-0.8592545859678746,-0.48582152016592495,0.8880914377158345,0.4331071794769874,0.3403067672588741,0.929800485795274,-0.39549682708764006,-0.9063250264010099,0.4492934567899751,-0.9524428184650603,-0.2763161255580561,0.9688440827515147,0.21880855946330655,0.5434882049627368,0.8229171561262054,-0.5923340033620325,-0.7877580552399525,0.6390928670790149,-0.9966154521143503,-0.6836000534282353,0.9997370700884394,-0.00675061327565353,-0.9993363747174905,0.6736840114049979,-0.7586878736259376,-0.6286506630937622,0.7960026182809296,-0.9894992290896234,-0.830512854901816,0.9791805528138459,-0.5406454692015927,-0.9654119887309945,0.28926622664922436,-0.8859973627013292,-0.43719099937779277,0.9119476582549186,-0.9314603718310406,0.3913268091010014,0.9082324317118098,0.9541291098460419,-0.8818045710231318,0.28067245388626605,-0.9677107377964095,-0.22323215961685372,-0.5396752191072343,0.1650053649380982,-0.9907553076103659,0.7905439124773392,-0.6355977039349562,0.9962323385475726,0.6802825643873891,-0.9996227805647134,0.002214884762356107,-0.6695478186371648,-0.06154157489121129,0.755725227336743,0.632171603587042,-0.7932489640491132,0.9901446411747853,0.8279778945113154,-0.9800912004073483,-0.8597896603764545,0.9665846634030741,-0.49373048804481395,-0.9496726169294826,0.44126582484037036,0.331762766561716,-0.38724647635912,0.9330629686225018,-0.9101211517328505,0.4411706961257586,0.8839346337799656,-0.49363830188454516,0.9665574838896885,0.22765116716013903,0.8223218909187598,-0.1694772568172018,-0.5850008465379941,-0.7933135056598913,0.6320894644826159,-0.9958287292472544,-0.6769510797256094,-0.7156129375736754,0.7194276340426892,-0.9996256863137158,0.6803602567991448,0.9962415261590847,-0.6356795382580477,0.7904789901107692,0.17487214707116808,-0.8254258999274378,0.980981684342925,-0.22312882853355231,-0.967737452290544,0.2805707084921013,0.9510836492172599,-0.33702407058898787,-0.9310789504633855,0.391424358033782,0.38296270649536707,-0.3361380621934908,-0.4370956594983829,-0.8860465111316281,0.4896886197167228,0.8569801204031742,-0.5405562895444714,0.9791590292603575,0.1739456619989131,-0.9894839017887507,-0.11521298055423373,-0.6285682208978695,0.05607437616134172,0.6736056679823517,-0.9993325078338463,-0.7162698408284208,0.9997394951755061,0.7564104233281053,-0.9966241606279649,0.11164131082594794,0.9899974802616109,-0.5924194073307871,-0.1604254474146259,0.5435771841434329,-0.8551219716635584,0.968870331676794,0.8843742199865391,-0.9524751146266144,0.3327502014322367,-0.9062802256516916,-0.39559418683861314,-0.9096868736469851,0.34040644322099883,-0.9499669298721745,-0.28401936610503964,-0.4857288630641851,0.9641913445352107,0.5367347565154293,0.8274499048931243,-0.17841048855363056,0.9888176568895057,0.11971735333033061,-0.9959237059761452,0.761703598767773,-0.6702463979835965,0.0012739801463340571,0.7130973116181074,-0.9998327361501577,-0.7534358124871289,0.9969862913022522,-0.642656101723873,-0.9906272247623622,0.16593330053272462,0.9807779410462403,-0.5473787264293596,0.8527617142562464,0.49676144804707456,0.2718521014522692,-0.87743922066022,0.9086257668912686,-0.9343500592330541,0.39975587698669734,0.9115611947036584,-0.3446678209828169,0.9485404102792734,-0.8902155362017719,-0.965656883000485,-0.23104703377725627,-0.5329021811098996,-0.8299884031716197,0.5821677067017088,-0.9881310688007942,0.8015241327633534,-0.7580745805644485,0.06512922739759044,-0.9993702052396887,0.7250510765588776,-0.7099101116809746,-0.6829130242183181,-0.043423717726989663,-0.9973279107317431,-0.7883372902756836,0.9912365888449608,-0.5997032463188229,-0.9816529028462129,0.5511690073577811,-0.8503839127719226,-0.5006928678630161,0.8801034813840654,0.44845266737361056,0.3241820139311182,0.9359567964222993,-0.37973749317729755,0.926383446958484,-0.917488407560355,0.8876585413441784,-0.2927055365326042,0.9644684647875417,0.23545769348694826,0.529058642176401,0.8325098258940477,-0.18732903843368728,-0.7981734216211056,0.6258509189788284,-0.995064487720684,-0.06965468970174286,0.9991989730761152,-0.7281673755723481,0.7067083065880726,0.04900043506636933,-0.7474401504592447,-0.6418536538972017,0.7855385835113633,-0.9918255599728092,0.15698079891769062,-0.8150486349484277,-0.21529939291172226,-0.9697281677106873,0.5046139868011319,-0.8779409301448415,-0.45250214861535915,-0.3198878718621849,-0.9375442779415942,-0.9284713380204748,0.9152535373222986,-0.4298641773569705,0.9456288571758652,0.297039633536792,-0.9632602043270645,0.8661886072188943,-0.8294040017896975,0.18184228795795848,0.5747680553433987,0.8008976802439239,-0.6223068462610821,0.9946041665078009,0.07417871898278937,-0.9990071841456974,-0.014880765169386112,0.9998904600016933,-0.6895116028336139,-0.9972508820832178,0.6453251971886623,0.09359423435246231,-0.5988651561830194,0.818270485436468,-0.9833422214992009,0.21086778807907344,0.970825766606096,-0.5085247241912753,0.8757603168103891,0.4565423204188314,0.9355876506851192,-0.40295140861372686,-0.3713299389258616,-0.9170714829207904,0.42576444480414494,-0.9441438835654581,-0.4786988804833272,-0.8633853579959954,0.2442643898768482,-0.976530899597893,0.8375012375276621,0.9875891202752466,-0.8036054618012903,0.6187499706711463,-0.0686102835865206,-0.664269482598038,0.9987948423941564,0.019415872298128578,-0.9999473080791413,0.6927896477688705,0.9975767197002509,-0.6487834640457242,-0.991691429408598,0.6024914606587675,0.14801537895036937,-0.5540767354325956,-0.2064318450114271,-0.9719033924636331,0.26412100219870244,0.9562259927030682,-0.46057309966457666,0.900899870417286,0.40709849031810963,-0.925063968393251,-0.35218957540461443,-0.4216559528944162,0.2960398121935552,0.47471165146742966,-0.9607842565025785,-0.24866024537471984,0.9755439539096287,-0.8399711237493064,-0.9868665761192741,-0.13217767065519825,0.9947122308193228,-0.7697815208324958,0.08322210621108193,0.7305542062573128,-0.023950579979342905,0.9999835839940646,0.7451178500765047,-0.9978820339254585,0.6522283833206105,-0.7770457287197714,-0.60610536992914,0.8130222550175764,0.5578469020298039,-0.8461343090212733,-0.5076230057730561,-0.2597435898178652,0.8713450836756547,0.31658038573509517,-0.8989219599119374,-0.41123719668487335,0.9233317186027383,0.3564311027217189,-0.9444883583169232,0.8958669342841111,-0.47071465609167745,-0.8679267789186763,0.5222320854620648,-0.9745369381150619,-0.5719095660110413,0.9861237289139007,-0.8089713712283697,-0.9942361694319152,0.7726688133593473,0.9988456775965264,-0.733643958044308,0.7010081366878876,0.6920342992031802,0.030872047028348233,-0.7352647985665383,-0.09012011935404264,-0.9928175689827142,0.6097068096442902,0.9839703852039249,-0.5616055919051492,0.8437081810911918,-0.973998636795409,0.25536083366811,-0.45964358651146886,-0.3122746606011074,-0.9403055624549993,0.36808826904940345,-0.9215804728811142,0.9224119692272112,0.9429884411806195,0.3046924413235415,-0.9610740351579512,0.8701707285389205,-0.5183585998155441,-0.8394025771197414,0.19965200593056828,-0.9853605939419051,-0.6160053984347734,0.9937396533786464,-0.7755402095801858,-0.99861752980706,0.7367186163932608,-0.6977662318592656,-0.6953013869218571,0.739037155814978,0.6514344439935326,0.08560188635579359,0.9933500062358965,-0.1445640477147147,0.8077071189135304,-0.9864779611908862,0.9727186856155247,-0.5154178765688678,0.8718582945944273,0.4636670846775125,0.30796251096352995,0.9418395521772199,-0.41948914299309714,-0.9202415305439009,0.41848984229041397,-0.9414691237106042,-0.3090093975908349,0.9598109587614886,-0.8723967759222097,0.26181675615711536,-0.19417863126800805,-0.5644445875033831,-0.8083555034862386,0.14565296136177297,-0.9932226928744636,-0.08669835692731236,-0.6505990475760427,0.02743829339892124,-0.9999974888187484,0.6985541700336613,0.021803669174030166,-0.6548690482273071,-0.08108189224882979,-0.9938620070544715,-0.8109859788326435,0.9855476244702754,-0.19857348066852007,0.8388039020521391,0.5192994462755057,-0.8696278991857571,0.961377528484946,-0.4766006354803123,0.41441488871222154,0.3596385895460192,0.9220071390636957,-0.4143660605947693,0.9399304371641699,0.31331999653159964,0.4586658951114809,-0.25642475289801575,0.9737487103190294,-0.844298454189934,0.5606946411082117,0.8110173672673314,-0.1501388549766981,0.9926852985549227,0.6548285006305166,-0.9980996049305357,-0.03197206585570558,0.9999973671433791,-0.7017925816182838,0.7328956442917354,-0.9988979376180818,-0.7719696983024524,-0.6124684636372393,-0.13558195926137265,-0.9863058382400558,0.19412600075579206,-0.8363258518401097,-0.5231703323065924,-0.9598260145089346,0.4716853810176544,-0.8953773872804173,0.9448493703691486,-0.3554026078964221,-0.9237537789032804,0.3733230121943404,-0.30801355440416567,-0.4636195483388698,0.9572255930778519,0.2608062207150134,-0.972706237737512,0.8467203628765575,-0.5569331594039388,-0.813662545788156,0.6052296329684428,0.7777380005077773,-0.09573206364971033,-0.739073297819922,0.036505180543295754,0.6879546537343162,0.02285031906483491,0.9986203485313626,-0.6616977679638771,0.7690785576345291,0.616047661024466,0.13108668478058236,0.987043760496634,-0.18967452704098514,0.5184044798011465,0.24759410047571445,-0.86511348141539,-0.475680014229365,0.8933483649691585,-0.946325136917125,-0.918435768088476,-0.3681381531227487,-0.4060930076530388,-0.9013769984708233,0.32192176783409904,0.8740968155782214,-0.2651823229013257,0.9716437534307265,0.5615611996363827,-0.9839608160252097,0.8162909846288023,-0.6016127092810322,-0.7805811286691478,0.10024600918540129,0.7421210982799774,-0.04103754420080558,-0.7010463973676119,-0.018315505889125158,0.7266938209075005,0.07760402606139596,-0.766171594523809,-0.6196141843112644,0.8029499619535075,0.5719535763456575,0.1852191511053656,0.9767673443419587,-0.2431970173213735,-0.9623319271302071,0.30031804214856633,-0.8913009635817156,-0.3563809745239888,0.916632108284928,-0.927190009196598,0.4019439066105109,0.9033318712492208,-0.4555628719489016,-0.8762910785816201,0.507576780086375,0.8461629023883164,-0.21194347589730497,-0.5493758998473784,0.15358725469769946,-0.992258044530177,0.7834081977424913,0.9978785424872896,-0.745153630899694,0.045569063582799996,-0.9998735650891489,0.013780315903996719,0.9990556084728428,-0.07308114403458216,-0.9947177394641237,0.13212448977644226,-0.8002381772652156,0.9884586701621321,0.8344080548307568,-0.9777293218622489,0.23879493081483044,0.9635551987898091,-0.29598856523635203,-0.9459862397780779,0.4308576074722613,-0.9148095903830036,-0.37655736048757266,0.9371608620501677,-0.9052681595582976,-0.9562102913533644,0.8784673134325933,-0.27391807037161753,-0.8485714163841402,0.2163740143511433,0.81568579882459,-0.158067620811064,0.9916845262914963,0.0992043171524553,0.6410093242638726,-0.9968173960341437,-0.6854184138290356,-0.707486531824424,-0.009244842413031393,0.664309585715502,0.0685567584913726,0.9951730942708726,-0.6267089153459814,0.7975099290795892,0.18624784587828888,-0.8318995989868694,-0.5299922425614615,0.8633582871921467,-0.9647586469907239,0.48760486844924233,0.9474470336895428,-0.34789050280828,-0.9267973373760091,0.38075538692205485,-0.9355687053142073,-0.32522294355486436,-0.4474687061225857,-0.8806254753589247,-0.9708129003479354,0.8509624725109837,-0.22080010128903338,-0.8183013248880503,0.16254473496029112,-0.9910906058825378,-0.10371668456666204,0.997246905125143,0.044523215431363276,0.6821086503480447,0.7106847991596313,-0.7242926857236196,0.999408653567706,-0.6751912915494255,0.6223488422727401,0.12312714987068495,0.9882995311509079,-0.18178953076448207,0.8293740282674116,0.5338331285587173,0.22997611010705443,-0.482723248269867,0.8897136474799103,-0.9488883355395727,0.34363448738838237,0.9284912630407658,-0.3849455799820795,0.9339573008925907,0.45245430359256744,-0.9535159156834315,-0.27291105070462285,-0.49580598350988897,-0.8533360215770596,0.5464573509853505,-0.9805625974479054,-0.5951834182219207,-0.78557178256226,0.10822691819194391,-0.9969003081801007,-0.049054021971400075,-0.6787848536776036,-0.713868445401233,-0.9992011186418633,0.6710627617431716,-0.7609900550608326,0.9960223731131184,-0.11862463394035802,-0.9889811844448482,0.5867411672766536,-0.5291041692227995,-0.23540555015540351,0.8587453969904102,0.4866905807295526,-0.8876338334656683,0.9503101156759095,-0.33937140229144613,-0.930166086625831,0.39458316304640023,0.9067448594823238,-0.3337878465009719,-0.8801289528429199,0.2772718249446166,0.49186187613308285,0.8556920147507575,0.9816426713605136,-0.823481818206688,0.5915324030037526,0.7883702978201316,-0.11273492523815246,0.9965332017592138,-0.7571298399328916,0.7099478969436109,0.005756075256274593,-0.7180081984672942,-0.6744186755105529,0.7580395897385396,-0.9964162796761922,0.11411967751618791,-0.5822113281590096,-0.1728617723333085,-0.9793819549700776,0.5414818737179428,-0.8564124273017093,-0.49064790038391826,-0.2786106557122961,0.3446174565690343,-0.9115391338345739,0.9318217736746464,-0.3904113724024688,-0.908648171025586,0.33806004134162226,-0.9507430727449203,-0.2816268948029892,0.9674595677468264,0.2242015092051418,0.5388376609242573,-0.1659862079469888,-0.5878692180436043,0.989186555919884,0.634829570989569,0.7534710883656056,-0.05811251425736849,0.9995949711984182,-0.001220328764098026,0.7148437648001881,0.6777607142962325,-0.7550735290808579,-0.11966408759430587,0.7926429883197921,-0.990283437766224,0.16839251268891722,0.9802881828787536,-0.5452895755203923,-0.9668391377379805,0.2839679237160993,-0.8834194640722536,-0.44215809892798397,-0.33082437403210335,0.3881632430656125,0.3862315497291098,0.9105327887259818,0.9524587701517317,-0.8843992620489827,0.28597617068181463,-0.9663019515727308,-0.22861949757324115,-0.5350111481857616,0.17045734317230463,0.584193938705083,-0.11169462669101789,-0.6313184739411337,0.9957374911219811,0.6762187228600478,-0.9994556071622714,-0.0033154428342030994,0.9996524015188823,-0.05602080907214875,0.7520919341092851,0.6364469754509231,-0.7898694435745874,-0.5895627863009144,0.8248640536504588,-0.9811742430769349,-0.8569524699370391,0.9679875630960102,-0.4985321758247084,0.8812849953963416,0.44622184434481377,-0.9077713337694913,-0.39233936634339006,0.9310593761317745,0.33707458270661284,0.43620092350757567,-0.9478919907221831,-0.48882122558100266,-0.8574922411609386,0.23303278249604653,0.8254561855306162,-0.17492497153666992,-0.5805066406006169,-0.7966682989460218,0.6277943886220705,-0.057067340928732176,-0.6728702665237258,-0.7194648975375358,0.7155754611825899,-0.9997617006572279,0.6844028921830024,0.9967053201105357,-0.11065291567584083,0.787079648650563,0.5932203592898556,-0.822291360863045,-0.5444117061475715,-0.21773453386889963,-0.969116073807229,0.2752582445052655,0.9527776020439958,-0.4502764095296155,-0.9330822663983058,0.39650741792664523,0.37784815242767444,-0.3413414356434694,-0.43211493385319816,0.2849728256595172,0.48485927078442426,0.8598170561502577,-0.5358953322789916,0.9780208777172776,-0.8336390848163115,-0.9886688498963028,-0.12070469862263883,-0.6242573875342559,0.06159512453142469,0.6695079670615018,0.7226077143290552,-0.012386688088392432,0.999850431451596,0.7527814970582558,-0.9970629539186427,0.1061438686225807,0.9907625845929305,-0.5968657278100756,-0.15496431561483748,0.5482107858482899,-0.8522418350434193,-0.49762436587627457,-0.27089486564006526,-0.9541451714655986,0.327529950158734,-0.9039288308747201,-0.40066731206502515,-0.9119696704733066,0.3456012660788064,0.42802005419174044,-0.28931758398806307,-0.480887340858517,-0.8621241819112769,0.5320603461498755,0.8305427375206454,-0.5813587753014862,0.9879778030414266,0.12520605598647128,-0.9954096444164144,0.7652751784530896,-0.07621440709307518,0.006804263467396559,0.7092093015084091,0.6836392103016435,-0.7497879949961489,0.9974000749047545,-0.10163263784533963,0.7814515381797486,0.160477122516017,0.9818420561931661,-0.5519985870733395,0.8498601932058036,0.50155353394025,0.26652591358800004,0.9554931110233267,0.9063023530086621,-0.9363065319442238,0.3788172460560777,-0.9260084567894168,-0.34985398637408194,0.9467746993697301,-0.8927211965896181,-0.964205227732665,-0.23642417200036256,-0.5282144138120687,-0.8330604091489795,0.5776622841071501,-0.987266430275604,-0.129704837455242,-0.7616696766110049,0.07064679697661867,-0.9991586790537146,0.7288486843999614,-0.7060043027460502,-0.6869424687083296,-0.037897962876123875,0.10718480694817098,-0.7849227503106143,0.9919519761238975,-0.15599849480213912,-0.9826923915217626,0.5557750318953516,-0.8474610669848842,-0.5054723834197045,0.877464332748788,0.45338883457041224,0.3189454149223129,-0.3997078881750259,-0.3746156304608057,0.9242866684311251,0.4289659853340186,0.8901916859343976,-0.29798915477585036,0.9629926197823026,0.24082891329136963,0.5243576143888854,0.8355609420201097,-0.5739539085242098,0.12416731504488585,0.6215280254572296,-0.9945004965202044,-0.07517049959683106,0.998962383165229,-0.7319467092823319,0.7027847791830923,0.04347602168951834,-0.7437547760554596,-0.6460846283112639,-0.09260399640458403,0.5996613511257197,0.15151665769276332,-0.8118319521846806,0.8504114580159512,-0.9710637674000511,0.5093808336911811,-0.875279764932816,-0.4574269539809197,-0.314643260502964,-0.9394537464258593,0.37040630780579975,-0.34887304424674553,-0.4248643248960865,0.9438156766568432,0.47782544312547615,-0.9617601999473295,0.8689389509993379,0.976316211509726,0.1872776115730676,0.5702337248459902,0.8041969874778966,-0.6179683523613291,-0.767516311504777,0.07969265571582056,-0.9987455353773218,-0.7067453459167509,0.9999570231891787,-0.6935065199433447,0.7407151832997779,0.6495399745318045,0.08808677148953604,-0.6032849440886683,0.8150789670038628,-0.9843323935821142,0.20545860736207594,-0.8426105591830906,-0.2631616314060735,0.8730771897704236,0.4614556626339158,0.9375260646893301,-0.40800670200760025,-0.36618936469049274,-0.9192625185936584,0.4207539236196401,-0.9423070239522499,-0.4738360656168922,0.9605079935826231,0.5252487695716647,-0.975324863308096,0.8405103860680988,0.9867054297448715,-0.8068846037168783,0.6143959656501436,0.7704159734883392,-0.6601254574276092,0.9985081401512559,0.024944840181374335,-0.9999887881430146,0.03441137858689583,0.9979462359266897,-0.6529819576062929,-0.9923876799033599,0.6068961255217108,0.14254372417540848,-0.5586720529077587,-0.2010174982977517,-0.9731902541911653,0.2587830395876586,0.9578296992595372,-0.3156368261961786,0.8984857910183582,-0.9425236508508664,-0.9229493486430687,-0.35736016285710537,-0.41663486606897837,0.3013176996667936,0.4698369397620971,-0.9592360264501335,-0.2540130474009188,0.9743134495075685,0.5710934311876346,-0.9859581327295716,-0.13765743395793065,0.994129049105803,-0.7732997855141185,0.08873195634213003,0.734319430796113,-0.700298518163766,0.9999999800809464,-0.029877948478514667,-0.998226518150907,0.08912956439081227,-0.7735528263684717,-0.6104948211311215,-0.9841472599003606,0.5624282159436346,0.19657225365087033,-0.5123800413316298,-0.25439912376196244,0.868618199032402,0.3113296847779907,0.9406435764802138,-0.36716335668566275,0.9211939424967702,0.36159273768869954,-0.9426569607803299,0.8983104741112975,-0.31525801788974916,-0.8706603666508698,0.5175078344571401,-0.973281990916209,-0.5673642169255172,0.9851905513545005,0.14214859943523067,0.6072133456243376,0.7761676882527389,0.9985647574854258,-0.7373907711488388,0.6970534599336569,0.6960158495981338,0.025343903683732485,-0.7315052232395559,-0.0846109372774719,-0.9934640220029503,0.14357986625708288,-0.8071203444178568,-0.5661728080051467,0.840726598258968,-0.9752366546619599,0.2500099741203663,-0.46454804261452054,-0.3070161382974337,0.8944664396362807,0.36294061102439673,-0.9194195844003554,-0.36581787338374383,0.9411333935743873,0.3099551274594999,-0.9595313642036359,0.8728824824859346,-0.5136213568062469,-0.8423955190518133,0.20506791767627167,0.5552364435163045,-0.6116395233743841,0.9931066073797444,0.08768912649315988,-0.9983115607126632,0.7404469409794122,-0.693794061050845,0.999960644411337,0.7353002816474632,0.6556203534701465,0.08009056944245652,0.9939715403132184,-0.13908962312767456,0.8044341869365795,0.5699057520538793,0.9739867745942347,-0.5201491305410474,0.8691364484498079,-0.9616507880937568,0.30269627549816297,0.9436836803003043,-0.42450292175342913,-0.9223917486906034,0.4134606987743137,-0.9395904641990848,-0.31426432057360115,0.9582442151053006,-0.8750866402944617,0.5097243122965371,-0.19960070629040685,-0.5598708477916816,-0.8115988041622435,0.15112206467758488,-0.9925647340121844,-0.09220651463116643,-0.6463892646766445,0.6978037329840909,-0.9999945903490551,0.7025007386225441,-0.7322186436131704,-0.6590385213338702,-0.07556855388440817,-0.9944586094019056,0.13459651847315451,0.9864693794318616,-0.1931502672631692,0.8357801893810225,0.2510235013615375,-0.8668842451774403,0.9628849503467775,0.8949340599771515,0.4194416180731393,0.35447280613102894,0.9241342244612121,-0.40932653434155014,0.9380282043974887,0.31856704825034754,-0.9569373518124549,-0.5145193424880159,0.972474979549396,-0.8472490865924434,0.5561068470828942,0.8142403168288522,-0.15560417982932603,-0.77836278324741,0.6506388049808386,-0.997743557269089,-0.03749905692268323,-0.6872325098464347,-0.021856010102888693,0.7291219414641804,0.6624431306355962,0.9938562139976025,-0.616830777994429,-0.13010064473127264,-0.9872028503357609,0.18869793006884486,-0.8332811673445569,-0.527875415345362,0.8646142072817504,0.3036939066886127,-0.8929010041098947,0.9466461259716662,0.9180418966631321,-0.9258576877905583,0.3784477771779555,0.9018072310378852,-0.45871241617888286,0.9556108012115195,0.2661411422347828,-0.9714081101904136,-0.20848138346007955,-0.5523314054508232,-0.8168650779286567,-0.9926916178568518,0.7812023951366979,-0.10123550704678447,0.9974287622839522,0.04203124343715675,0.6839304925172471,0.01732110631841546,0.9988954790331845,-0.07661242966438302,0.7655320771984755,-0.9953713602530798,-0.8023567624734668,0.987916011272007,-0.18424171074547824,0.5231257145449508,0.24223219938264529,-0.8623263814647872,-0.48053730003728956,0.890849578370119,0.4276592447127376,-0.9162340986651726,0.9275621032214062,0.9383905066000217,-0.9037580322392478,0.32715275334230215,0.8767698050695429,-0.27051058047625254,0.9703212558128615,0.21291533399105506,-0.9829592466516998,-0.15456993574624187,-0.5971859665774562,-0.7840259351564907,0.6437233032745658,0.7458165255426559,-0.046562565232495454,-0.7049794255295481,-0.012785846182551094,0.7228835999675832,0.0720892099965995,-0.762605903212548,-0.131138586243315,0.7996413630561245,0.5764812634742403,-0.8338594946955086,0.9779375659502568,-0.5355582599287947,-0.9638207758655527,0.29503842614582015,-0.8887798249623119,-0.35120833329607604,0.9144074507571867,0.3774785255154409,0.3968738550661891,0.9056902402037745,0.9559187308918604,-0.8789420808997772,0.5028040692129487,0.8490971979534375,-0.21734490416236615,-0.5447465103429759,0.15904959669073943,-0.9915560436035517,0.7868333452174031,-0.6402456515670067,-0.7488303581735025,0.6846938884743508,-0.9997703352472733,0.008250323000320628,-0.6650526465510472,-0.06756450721972378,0.7596640399473389,0.12664064548429413,-0.7969095124198536,0.9892813449715401,0.8313472816528197,0.5308353675446205,-0.8628560151301469,0.965019874063923,-0.2907015364774799,-0.94776473660636,0.4358416781769909,0.3374503841549663,-0.401991844202857,0.9352170199275186,-0.9076038151796749,-0.9545770555935746,0.8810962740378615,-0.49887818216133256,0.9680876818532371,0.5494196443074778,0.8188725812725323,-0.16352598546866765,0.9909576512408496,0.1047058268483183,0.6367548279277935,-0.9963612832575032,-0.6813810421052758,-0.7113841292733044,0.723606587537474,-0.9994423573583031,0.06303841442158174,0.9957005934889694,-0.6310088425685708,0.7941612667676907,0.18081145536240326,-0.8288179650975211,0.9797923257729088,0.8605545390602398,-0.9661991186704805,0.28635866613475186,0.9492017604652467,-0.34270032517877774,-0.9288601369246039,0.385863305628528,-0.9336013994943884,-0.3304476354052066,-0.44251611176790406,0.9501082776195628,-0.9694716760449731,0.8538541232774474,-0.5456241519439982,-0.8214675736360447,0.16799900998617642,-0.9903388716620494,0.7923995447654638,0.9968215682159952,0.05004735773206698,0.6780541775160145,0.7145645607899884,-0.7204685034536745,0.999583531162797,-0.05851102471859651,0.6266681179160748,0.11763704032942289,0.9891279308515039,-0.5875462443032944,0.8262715970658663,0.5385013367413554,0.22459051879844874,-0.487559159885844,0.8871753512173316,-0.950619256162272,0.3384357016366446,0.9305307673876712,-0.39004383107882923,0.9319665718494694,0.4475155251376567,-0.951834816756252,-0.278227250069262,-0.490995698405949,-0.8562062604885845,0.5418174343203067,-0.9794625201600649,0.991097577441808,-0.7889817605881259,0.11372308661996934,-0.9964499656886899,-0.05457692132656965,-0.6747133631509722,-0.717730291393774,0.7173155969937085,0.6751526725185495,-0.7573905560404113,0.9964999113643339,0.794797046603985,-0.9897847743809564,0.5912104967068487,0.9795823883759844,-0.5423177426304476,-0.22016832017392093,0.4915142731476956,0.27765534093510547,-0.880318391919157,-0.33416411537337404,0.38489726044136735,0.38949554953065424,-0.9303125706264741,-0.4434546975009039,0.950434309633971,-0.8874499159773106,-0.9672074407398829,-0.5465011955287522,0.9805728681826338,-0.8266068045585234,-0.9904835023575145,0.7917604924413406,-0.11822825339316304,-0.6262040449420594,0.059105362096612914,0.7138317823895424,0.00022577155875839675,-0.714147933023098,-0.059556109766808474,0.7544210839481055,-0.9968688224501808,-0.7920362285519775,0.9904212548241955,0.8268608396635432,-0.9804841957034436,0.5461229912829021,0.9670926557292213,-0.4954592743652137,-0.9502938165069458,0.443049935657323,0.3298856542693635,-0.9049927913991991,-0.3853139771679562,0.9286394298535774,0.4393847465613174,-0.9490142489922906,-0.49190745816756254,0.9660454634434623,-0.8608576420546243,-0.9796730681560262,0.8291509373868245,-0.18139697808724994,-0.7945229352107209,-0.9965375559884383,0.7570956382786632,-0.06363258687746824,-0.7170009119294458,0.0043099930706423295,0.7109655767109748,-0.9998836550034114,-0.7514360909648229,-0.11417168874012756,0.789259115743349,0.17291333737779127,-0.8243013914636952,0.9813658312877879,-0.5499170044124002,-0.21131042526562344,-0.8855600786133576,0.2689291667658184,-0.44711167527939005,-0.9318027724979769,0.9030538467312574,0.9086263089580668,-0.3380107698042479,-0.4353057560510014,0.9475746640464685,-0.8915944612614376,-0.9648636114555259,-0.5388817631977335,0.9787531130738307,-0.8316780118884483,-0.9891942328577275,0.5714221397818185,0.9961501842393751,0.6795916740782744,0.06815850252942393,0.7201552904327981,-0.008845669029492905,-0.7077685935287402,-0.05049832988282562,0.7484356385015605,0.10966441107400506,-0.7864657653123255,0.991633074493362,0.8217249847080738,0.22663035643420887,0.5536997039637742,0.9693608573417795,0.883443994778242,-0.26455773565173696,-0.9096863345855117,0.32130845976609035,-0.39742025681152515,-0.37692713715579085,0.9252358677388848,0.8843748258734042,-0.2859260033346768,-0.48398919890875736,0.9636619090906058,0.5350553779646056,0.2482216021441923,-0.584236428665683,0.11164260073069585,-0.7999987265046024,-0.995742318446952,0.6155373160946269,0.9994573330497882,-0.7232948530037926,0.013381163004213471,0.681050475204688,0.04596783497613874,-0.7454197882873663,-0.10515487725491371,0.5895204984673668,-0.9922083887882245,-0.8191316724017303,0.9830685150900781,0.8517211128402243,0.2796662251597949,0.5072327951871418,0.9544424146131141,-0.4552074755333796,-0.3170099028275651,-0.931078476922118,0.9123772441731236,-0.3465343693251865,-0.42712099217473776,0.9446370401112124,0.48001509265795855,-0.23298187011993948,-0.5312179849052587,0.9768528138627929,0.5805492688533983,0.19476135932617575,-0.6278351385638189,0.9953139670022928,-0.7659149997837831,-0.9992976442827849,0.7264195350514345,0.9997605564206872,-0.6843647201669687,-0.04143639436184867,0.7423886023680706,0.10064318005860469,-0.7808305817891213,-0.15949537570682312,0.5443677904153067,-0.9838895282782903,-0.8493356330051047,0.9715492877648995,0.8791573450832477,0.3318615412569192,0.4592413696084072,0.9366553413236434,-0.40572818306897496,-0.36850927884343865,0.3507855188834297,0.8885727766163041,-0.2946069532280111,-0.47603111093830186,0.23739041665609523,0.5273696629673268,-0.1793374967414091,0.8391563672931225,0.9871077323540355,0.6242982861393545,0.1407157502473214,-0.6695468545081481,0.9991173967189503,-0.7295292722908694,0.02245123176758486,0.6876648855251186,0.9970589429971121,-0.6433776905274144,-0.9907554837001951,0.7779888646309607,0.1550160363815264,0.6129379647303691,-0.21335650180262747,0.4975789542365054,-0.9726135322449736,-0.8769868674136704,0.9571100142058779,0.9039512202922069,-0.9382343681577562,-0.9277307363353773,0.9160530975263198,-0.3550294516447002,-0.4189010794173101,0.2989383812605597,0.862097653414393,-0.9599379490020079,-0.5235104913232858,0.18379787883892273,0.5731391939816392,-0.125154114391804,-0.620748589872317,0.9943958428278601,-0.7717158881333631,-0.9989165940665619,-0.7092462095815371,0.9999179226939272,-0.6909509033840219,-0.03237104893377754,0.6468434203627753,0.09161366685796722,-0.6004569529166617,-0.15053350787309105,0.8112508374393202,0.20892298325556927,-0.8445123019972268,-0.2665763728870798,0.8747983472770322,-0.9584142913309464,0.46728073070474846,0.9397940924648738,0.9260282190754062,-0.9178627737328708,-0.9467915504753093,0.41477815348346997,-0.30326365916008186,-0.46803384914765184,0.24619276745604465,0.8330314470448448,-0.9738516887461104,-0.5694164313714621,0.9856151681161092,0.6171861227914828,-0.9939060889868817,-0.6627813195551351,0.9986952404567823,-0.735703656744334,-0.9999657491971744,0.6942227061396231,0.9977131389012117,-0.6502958425289578,-0.08709603662004023,0.6040778307825534,0.14604788240168143,-0.5557315080347185,-0.2044851664844627,0.8420745500560467,-0.97468197026778,-0.8725918296982976,-0.3189950336330724,0.900034759155409,0.3746641709877596,0.41812725628211106,0.9196535665222617,-0.3634953176806918,-0.8947324909229738,-0.9630067291585368,0.46402073360629725,-0.2505863906269049,-0.515759916721216,0.19270720738996286,0.5656819540166423,-0.13414907046751368,-0.6136109581883658,0.9933958872708685,0.7249789615182914,-0.9984533404435738,-0.702822022564267,-0.036052637510150344,-0.6974802264803173,-0.9980094508148387,0.6537348859984293,0.9925096719429652,-0.6076862808062856,-0.14155925225117633,0.8059134070704603,0.2000431427896064,-0.5093357807311826,-0.2578222333836182,0.8703673600726969,-0.9609636660729339,-0.8980487333924542,0.942855505541528,0.9225660657530791,0.42491171760185026,0.36771707678506355,0.896748969865809,-0.31189540874837063,-0.8689130390988858,0.25497485842216405,0.5118686732176696,-0.19715597054967635,-0.561935838747503,0.13864245493265612,0.6100231696157086,-0.07964046871290542,0.7802979982606517,0.9981908990036051,0.6995882069431804,-0.9999996840172108,-0.740750354306294,0.018768269175481384,-0.6571604800189007,-0.07805549357866157,0.6112822287503266,0.984323161132896,-0.5632502836593143,-0.19559700355784912,0.8371471240605307,0.2534371622183076,-0.8681249841647921,-0.31038440100481246,0.40795890389298883,-0.9443571313278584,-0.920806500918457,0.9231783548691275,0.9423245479560433,-0.8987469997709768,0.3162017028540247,0.8711491435538609,-0.2593580805567921,-0.8404820200807186,0.2016006775709952,0.8068536769787664,-0.9832242829711527,-0.6064228308859704,-0.99901184329136,0.6525309261392283,-0.024892503033424537,0.7448515579909992,0.9999857916358508,-0.7039521521411225,-0.9985404720848823,-0.7764523190388962,0.9935770550904791,-0.6148656006343522,-0.13257334735557516,-0.8456317672544392,0.19114684026070955,-0.5171214059861329,-0.24904687702776895,0.8658647481075357,0.30606946194799695,-0.8940212957715806,-0.36201369078582757,0.9190279921046495,-0.9249122779102628,-0.9407967325212018,-0.46988315425480004,0.9592508205305622,-0.8733673256427076,0.2637359668536792,0.5040546740814669,-0.20604123701186597,-0.8095248849012235,0.14762057450188545,0.7732665902719603,-0.9917427019397685,-0.6490871849702029,0.029426603915995473,0.6930774641251661,0.029930278469246237,0.7071664243127112,0.9987751705164674,-0.6639710380886299,-0.9940800903904317,0.6184363227367696,0.9858826278148695,-0.5707227079744481,-0.18669274445249448,-0.8736126436664224,0.2446514681344221,-0.4694382907328249,-0.30174822604867363,0.8919799667711292,0.3577818526304452,-0.9172305759013568,-0.4125549279814605,0.9392495618432111,-0.9026875484248658,0.3247946867179228,-0.5175526314290096,0.9732940106088291,-0.845362696710682,-0.985199526678792,0.5506284373393298,-0.1521051248969047,-0.59918479949455,0.09319678946209188,0.7373554071728088,-0.997280382228206,-0.6898006708753558,-0.025396240237273857,0.7315409186645234,-0.9989893209002026,-0.7707037724394574,0.9945626742355755,-0.6219943215962322,0.20209420237633072,0.5744413460765356,0.9752250746426983,-0.8296269427420272,-0.24025102596609793,-0.8989678279574794,0.29742078220869417,-0.4203442521942663,-0.35354265374079086,0.9154142892872659,-0.9283230033665404,-0.3099053519731539,-0.4618562080499804,0.9566481639976899,-0.8777497405508478,0.2724753717765225,-0.5636665749506788,-0.2149095478125749,-0.8148172824681752,-0.99311274260301,0.5955472557426722,-0.09771185224186908,-0.7404117524656932,0.03849289621008285,0.6865096861862603,-0.9998206800257249,-0.728440921921034,-0.08014275455674831,0.7678056856732021,-0.9950247966975945,-0.8044652859439325,0.11907426546867231,-0.5781481660551712,0.25546206760925855,0.5287198535201978,0.9616364274517039,-0.47742873420176096,-0.2930872194576277,0.4244555190082209,0.3492961813309486,-0.913579169629289,-0.4042744890276029,0.9360972824766229,-0.9065538126067919,-0.2573353396934572,0.8799138832096387,0.9711715060870609,-0.8501738062776548,0.21933711672246828,-0.6080863867591599,-0.16106474560084538,-0.7818228888821551,0.10222490477161741,0.6386761232468608,-0.9965707741615643,-0.7024634786310211,-0.016326689614627816,0.7253259387828472,0.07562075748660266,0.6740842515060834,-0.13464839530288958,-0.6290718570512066,-0.9880696692937204,-0.8358089336148765,0.17330777870671887,-0.5325643535612894,-0.9628708182068437,0.4814092635948717,0.2887476269509292,-0.42855805339412556,-0.3450425227646423,0.37419693044155955,0.8998150376642016,-0.9344922386406461,-0.45379125451405544,-0.3376338267817384,-0.8820599231831512,-0.20399189152227284,0.8525531494634557,0.9827759373867496,-0.8200426266325628,0.1655396315812809,0.7846428970555078,0.9977470709149144,-0.7464786824652648,0.047556020825083194,0.6798854136057428,-0.9996077559448998,-0.6624039111532773,0.9995084418208595,0.7619621833216607,0.13015255299516967,0.6325912480388363,-0.18874934269528268,0.8333101097526842,-0.9781448427166494,0.5363978970246215,0.2270204056316557,-0.485379888836502,-0.9466292524860234,0.4326517709495288,0.34078176555343853,-0.37839931716248226,0.9332957666590762,0.3228136718749178,0.8745541048072114,-0.9525966384713838,-0.5019441247659768,0.9689690813729287,-0.8549149528630998,-0.9819276139290793,0.8226300190951014,0.9914265801233488,-0.787446762577071,0.1112446077317252,0.7494891423555053,0.9999242516809648,-0.6765522619971139,-0.007255795426847816,0.6657950495533904,-0.9996403601842176,-0.620353451324106,0.9962883028172578,0.7963083075014156,-0.9894260829390609,0.5891969558622457,-0.2422829932822346,0.8623528895788206,-0.9652801465929712,0.48934052823799984,0.9480815020468515,-0.8814989110427803,-0.9275425391042679,-0.9384085974309342,0.3917916653205143,-0.3271032804203203,0.9122132311872693,0.2704601785927939,0.498015980312083,-0.9678379553257145,-0.5485883736133224,0.9810590890324952,-0.8252004873874224,-0.9908237163987995,-0.6437633662712771,-0.11575107259751169,-0.7524841828208195,0.056615231933242985,0.7120827557252419,0.9990961036571947,-0.715891713386941,-0.062045803975992644,0.7560559771491323,-0.9966684888856359,-0.5764384841745107,-0.17983320111165849,0.8282610821068562,-0.9799907700631639,0.5440317989713026,0.9664550346562518,0.888803819110618,-0.9495142464931707,0.44081241886771166,0.9292280920314981,-0.9060511214413917,-0.9056680442561994,0.33138615938928123,0.4416240131186083,-0.27482411630202025,-0.49407759005263113,0.21729380197489892,0.5447904132014886,-0.9801703805653739,0.8277539786266477,0.9902004682136266,-0.7930058352596557,-0.9967418422512666,-0.6847320443077838,-0.061143136937468215,-0.7152599693711017,0.0018156958589345784,0.6725361641715375,0.9952651158892434,-0.7530795118160377,-0.11664933035845021,0.79078831540465,-0.9907010741761213,-0.8257109821981112,-0.23347187035788664,0.8577244712699906,-0.9676100396018069,-0.8867159914243298,0.9509274563487765,0.9125833985860637,-0.3279577793459164,0.39095942288615626,0.90758183452535,-0.927880144042788,-0.881071512971023,0.2791823999869389,0.49012903501309507,-0.9655159922051865,-0.5409812446821557,0.16347433656770127,0.5899274477475094,-0.10465376107442285,0.7957609280525042,0.9963657439851115,-0.6210625263471378,-0.9996642042251193,-0.7236427215281173,-0.006351432127482443,-0.6758860017029583,-0.052989297391784186,0.630968227207936,0.11214333291426748,-0.583827400398976,-0.1709022605929994,0.8231438947337351,-0.9817560514574779,-0.8553837689536191,-0.2864088267169434,-0.5011617176068484,-0.952321102539354,-0.910719380466962,0.9325418118859987,0.9336201571365521,-0.9094769528896377,0.3399313762872405,0.43346695158726384,-0.283534939983505,-0.8538268715121299,0.22613954212000645,0.5371609464222871,-0.9783324864688591,-0.5862589496393297,0.9888928701694754,0.633291422044576,-0.049995069865746776,0.761376173083883,0.9995363862625538,-0.7215701859408296,-0.9995820189964614,0.6792219340650139,0.04845936227033683,-0.6344806204991,-0.10763502831764567,0.5875038796157273,0.16643147035898337,-0.5384572217338291,0.9826084042662601,0.8530254686160581,0.2820601325362174,-0.8824856515002734,-0.3384849651779002,-0.45298516497750446,-0.9341699106392933,0.39929275373841633,0.911353360360325,0.9518508675966153,-0.8853258937321625,0.28788164674583994,0.4822017557396072,-0.23055547902865894,-0.5333295970178206,0.17241700909237304,0.5825783902812258,-0.9882085472120339,-0.629774620225721,0.9955520601777132,0.6747520032197963,-0.9993880045914594,0.7247030590430563,-0.015422419343708176,-0.6825438926267451,-0.9964955335776373,0.6379799604640154,0.9897773090188053,-0.7823864531844367,-0.16195725608929087,0.8179589687397852,0.22021938862353524,-0.49146867948979833,0.9709555201583301,0.8803432262943316,-0.9550495896411948,-0.9069351736000252,0.9357787904846794,0.9303317708875656,-0.9132110183336185,0.34844861936099547,-0.49589691167357974,-0.2922224308480738,-0.8585139376194093,0.9618841313022503,0.5294872752920522,-0.1768830705654283,-0.5788858453942533,0.11817626700999478,0.6262448618983213,-0.9951144913765877,0.7672259483275617,-0.00027812496173719843,0.7141845791557634,-0.9998031448731673,0.6858518090446792,0.03939659434419951,-0.6414661751098983,-0.09861186871449056,0.5948205020742564,0.9804739017893186,-0.8153412368809725,-0.21579271218435436,0.49541379788716783,0.273345425082946,-0.8781826895701301,0.9563843744186203,0.9050150627056109,-0.9373684183222751,-0.9286588508338895,0.9150498885914625,0.9490307512217342,-0.42116468654034384,0.296557202986185,-0.5427410342567905,-0.2393730322692362,-0.8291216693991615,0.181345492979459,0.5751813909460483,-0.9867789238198545,-0.6227022196809655,0.0635803394853977,0.6680291192279083,-0.9990295627574541,0.7309240126167075,-0.05508005987948296,-0.6891456152642365,-0.9972133203584028,-0.7892912628089027,0.09409719934364459,-0.5984604947893564,-0.15299892370787968,0.5498732770845235,0.211361596188498,-0.845845466459427,-0.2689795911002257,0.4470648456904595,0.32564990643537095,-0.9030763327131633,-0.3811728790885586,-0.41173092615598184,-0.916869933302326,-0.28152642456367094,0.8915707525983299,0.9648773660549392,-0.470236638550605,0.243774467195464,0.831648941090721,-0.18580418452794853,-0.7972374291929156,0.1271792691791934,0.6191467664573053,-0.9941779449903526,-0.7201189659777243,0.9988195099688555,0.7078055773256245,-0.99994199438657,0.6924252435211291,-0.10971644856767927,-0.6483989418250587,-0.9916263149109553,0.6020881752291354,0.14851498989814194,-0.553656107665237,-0.9693479958677472,0.503273376917049,0.26460822333405576,-0.8738074597356656,0.9589948891227649,0.9011190235086526,0.37697562860922085,-0.9252557289544482,-0.4312650450443471,-0.36117050046355165,-0.8936157439353308,-0.9636758926691911,0.8654119503740391,0.9778239874916684,-0.517895267796178,0.19025905348113628,0.5677370584600104,-0.13167689182036246,-0.6155785753745566,0.0726308009054189,0.6612512614076296,-0.9985889082202006,-0.6810121391990768,0.9999805616718082,0.7454546858010508,-0.9978490438991622,0.6518453512648171,0.9922018647503221,-0.6057034687604294,-0.9830589205911153,0.5574275477423332,0.20248641026598724,-0.8409717073523016,-0.9544267913020618,0.45516086020261476,0.31705955552574855,-0.40153040373555726,0.9420214647346757,0.9235255971419482,-0.9204533966942697,-0.9446542168664285,-0.48006101955989783,-0.3095245564418558,-0.8676757420002627,-0.9768640115744817,0.8366521036754878,-0.19471000818790485,-0.8026807394354685,0.13617180544036875,0.6119977198419944,0.9992996047471316,-0.6578418914386587,0.01786403665910268,-0.7401425038293872,-0.9999985561103872,-0.6398584919890701,0.9981361153420841,0.7808632881331585,-0.9927570017760795,0.609306301004913,0.1395380482840836,0.8493632667523978,-0.9715368871861891,0.5110915402908459,0.2558492462962722,-0.8693603220457569,-0.9366370031323141,0.8971488289176669,0.3685579473234992,-0.3507364917517706,0.9222167416518741,0.9431564624547776,0.47607715135889594,-0.9612134931985304,0.8699216827195045,-0.25694831889135783,-0.8391278916373976,-0.9871161105434731,0.8053776518455851,-0.14066391756424598,-0.7687898735291282,0.9926197511157901,0.6544189875262519,0.9998486150733537,-0.6981280265591373,-0.03695641895791863,0.7393773932060855,-0.998402651884596,-0.7780217560605078,0.9932917145672565,0.8139249617686222,-0.9846811724373974,0.5649359462585434,0.19359456121779972,0.8770120227736692,-0.25146181722525285,0.46321941836099934,0.9382162525735057,-0.8951360252109845,-0.9160320995711833,0.9200083697427991,0.41894861740338335,-0.9416393042526716,0.8996402440876738,0.9599526177731694,0.5235550967132542,-0.9748837881108727,0.8415864160142903,0.9863802091735288,-0.5564831512171511,-0.9944013763139252,-0.6662099838895964,-0.0861950535950721,-0.732588366255349,0.9977738587693652,0.6948733619978373,0.0324233748566791,-0.7363158984825073,0.9986486480431758,0.7751642175544338,-0.9938059921230752,-0.8112814472731904,-0.20897418104403992,-0.5686727502255232,-0.9736458282441197,0.8335314348656576,0.24706921476826516,0.9020248696481932,-0.3041253288316688,0.41395506431790635,0.3601099364596723,-0.9182213465169367,-0.4148257904595239,0.30321377083515544,0.4680801137616369,-0.9586719930059088,0.8743598269800757,-0.2657046059575203,0.5694594676667871,0.20803847153775445,0.8107217138234205,0.9939118585485107,-0.6011799045373093,-0.9986979126082701,0.7356681965881082,-0.031467125526118765,-0.6916044016355269,0.9999291007604175,0.7332392553503971,0.08714819095817172,-0.7722907314037809,0.9942998238631765,0.8086212420845073,-0.12605133645859273,-0.842102786294656,-0.26225252166583957,-0.5227397245548125,-0.9596841365462271,0.4712398570062082,0.2998012878452866,-0.4180796984803973,-0.3558747745926821,0.3634465449588955,0.4106944292023943,-0.9385469017271312,-0.4640671088904059,0.2505357072539425,-0.8765519392143689,-0.9728233389616974,-0.5657251250894882,-0.2124728543864957,0.6136522960410319,0.15412252108538624,0.7774203417518171,-0.09522917719776135,-0.6440697777143665,-0.9999928059441114,0.6974427088638044,0.02335537876510096,-0.7301475271062928,-0.08262878902376031,-0.6688748314468841,0.14161107825173008,-0.5594532582024833,0.9869625754286941,0.839647909820242,-0.18022714531105233,-0.8703931378504364,0.9609491798988788,-0.47523557513033104,-0.9428380599963342,0.42219573138616606,0.3516322912262066,-0.3676683908757283,-0.8967258001828692,0.9369717210244561,0.4600445566521194,-0.9560516012378909,-0.5119136474262985,0.1971046444604166,-0.8488579036186585,-0.9840508094508434,0.8159990594335325,-0.1586025036563152,0.6560007577953741,-0.9981940453464473,0.7417823889532926,-0.04053277001339863,-0.6850238628131126,-0.01882061333288183,0.6571210177034152,0.07810768714689863,-0.7664961529633733,-0.13711956885589202,-0.6271309577148796,0.1956483454548546,-0.8371757590623484,0.9766589552541276,0.868150968360127,-0.9621944534071127,-0.8960674736917797,0.9443399098529741,-0.42630307835505277,-0.34738257364190217,0.37188267266010006,0.4024064439042097,-0.31615203516531704,-0.8711234358696711,0.9547118881470996,0.5080119942147031,-0.9706828336865969,-0.5582216005944235,0.14308117253029026,-0.818612577670781,-0.9923206596769376,0.7830941155762446,-0.10425546414738508,-0.7448166251969305,-0.9999860693465298,0.7039149673069475,0.01428546069954403,-0.6605332482515844,-0.07358497834133038,0.6148243122261113,-0.9956585446963844,-0.8005410313596687,-0.19119822808265027,-0.5835022064843649,0.2490975805102562,-0.8658909381858867,0.9634199314516095,-0.48319759795883405,-0.945822331571804,-0.9190486281528532,0.9248923728946642,0.9408144775308841,-0.39824999037391984,0.3204518995664688,-0.9093103754435715,-0.2636854666646416,-0.8429028608901099,0.9695826147910181,0.5544525730485171,-0.9823966240781083,-0.6028517872271878,0.9917494145681358,0.6491270100497686,-0.9976080341382454,0.7478355381444897,-0.04959507895514795,-0.7071294070189398,-0.998772578760308,0.7207824693147807,0.06906075565385895,-0.6183951807559324,-0.12812817954308484,0.5706797175680937,0.18674417714215613,-0.8321798384911326,0.9785672758060666,0.8636130938238736,0.3017981387244635,-0.8920036332102546,0.9472852946545962,-0.43449137665676874,-0.926607487321923,0.3802881971830301,0.9026650196942011,0.9579743655180841,-0.44792044427639877,0.268057990197364,0.5001774139081558,-0.21042637660736593,-0.5506721386131149,0.9815392061477464,0.5992267133720426,-0.9911577659540938,-0.6456700687790393,0.9972842393604148,0.6898385737600626,0.05412474953385132,0.7103292987832854,0.9989869663421503,-0.6673168714866894,-0.9945572208022474,0.7576861664897225,0.12362848460818501,-0.7950717832144371,-0.18228628426766036,0.5248199128008193,0.24030184565178941,-0.8613174821367414,0.9658114007089202,0.8899441648572617,-0.9487287690034507,-0.9154353609563466,-0.4084666971016708,-0.38447926699265983,-0.9046076719566499,0.3290317618344063,0.877724655816489,-0.2724249989069593,-0.49624464799595636,0.2148584174053276,0.5468803750640264,-0.15653483819543487,-0.5955893114779728,0.09765974922759112,-0.7914838015617686,-0.9969399272080288,-0.6865477524874394,0.9998216700689464,0.7284767886916222,-0.0006786126492646681,0.6706881246124717,0.0600081409742327,-0.625498677423365,-0.9873526649686718,0.578105448455318,0.17782464117249228,-0.827115435708117,-0.9616220641739218,0.8590041503526752,0.2931372733979146,0.4950658716486429,0.9501527249214138,0.9136004584607775,-0.9299804913102361,-0.9361156960435679,0.9065317135024157,-0.33331158318557,-0.4397914882276744,-0.9711839848575061,0.850146240933187,-0.21928603786809062,-0.5430773604101382,0.979763807998023,0.5919396563781443,-0.9899133073183363,-0.6387164070427902,0.04297259611418889,-0.7567997177062014,-0.9997257292278289,-0.7253619781662253,0.999354080302484,-0.6740455795060958,-0.05547993522375176,0.629031159418988,0.1146215570461553,-0.5818005117720978,-0.17335933964713537,0.5325200414587504,-0.9812787178532293,-0.8566731460644204,-0.9451404269944885,0.8857703437756947,0.34509166051958134,-0.9117467602377113,0.9316383114776476,-0.3928375905904597,-0.9084371047477172,-0.9539824825572919,0.882035256336172,-0.28114211259788735,-0.48834856920085523,-0.9827856110081412,0.5392631728918085,-0.16548800026246926,-0.7846104395916543,0.9892605228991751,0.6352198296366679,-0.996189779536029,-0.6799238043870781,0.9996092207827828,-0.7198410295734333,-0.9995067991282491,-0.7619960874688364,0.9958828754284685,-0.6325507002014691,-0.9887502176353267,0.7867453746915979,0.1688904715573389,0.8646668110477507,-0.2270713917778552,0.48533411541380306,-0.969249521578676,-0.883656076916171,-0.34083098474344664,0.9098743044237385,0.39600885517317563,-0.9328868266507214,0.9103238064924707,-0.3418505660749993,0.5019894045403419,0.28549203823989067,0.8548877924111188,-0.2281276535187255,-0.5354378909792573,-0.9914334195210717,0.5846038871527717,-0.11119257912932319,-0.6317101836963651,0.9957839594493885,0.6765908138354577,0.007308147443395037,-0.7190876523517269,0.9996389548541889,-0.6807188185871749,-0.04642019269900473,-0.7963399745115605,0.9894184883491183,-0.5891546540563135,-0.979067223274071,0.8193913405873902,0.22265177622143228,-0.4892948705402932,-0.2801009680211192,0.43668949028511705,-0.9543071911473873,-0.9079831295413544,-0.3918398327408775,0.9312435864822737,-0.9121917799210958,-0.9512230490394822,0.8862732719139405,-0.28983609038379793,0.5486321451544701,0.2325414668058585,0.8251709149627113,-0.17442754389781365,-0.5809179239478166,-0.9971014189195938,0.6281875414266933,-0.056562962422152405,-0.6732439036141982,0.9993145110918265,-0.7261082448157565,0.06209805642643876,-0.7560902417806576,0.9966642176114939,0.7935883302511442,-0.10109371160231531,-0.8282904168029837,0.15994240351241212,-0.5439878703372713,-0.9664415870993694,0.8495745795497601,0.27574388840213704,-0.4407654258869458,-0.33228868499170805,0.906073274498166,0.38766274889108504,-0.9295811876099057,-0.44167098399942556,0.27477377841393014,-0.8883649511288768,-0.9667003168524206,0.47642930349400575,-0.23695049596005743,0.5936259408829414,0.17889197886505703,0.7929739397438068,-0.12020318244629315,-0.6246519752998403,0.06109088140184886,0.7152233807700609,-0.0017633425381219218,-0.7127541509712833,0.999841566554208,-0.6873360395719792,0.11670132619510545,0.6430309525264029,0.9906939497954219,0.8257405132770013,-0.15546338764809195,-0.8577513854850152,0.9675968216785886,-0.4971861003627307,-0.27138113583614887,0.8772043741499914,0.3280072367589432,-0.3909112358623879,-0.3834776895599741,0.9278996642345595,0.4375970585371932,0.35460607439986686,-0.49017466818073213,0.22166790212251172,-0.8618680913228016,-0.9792721122873453,0.8302612609687188,-0.18335273344351008,-0.7957292211701973,0.12470482098231021,0.7583936365811275,-0.06561754354377913,-0.6665085998749548,0.006299079770152566,0.6758474159938279,-0.999912018359907,-0.7501221754886113,-0.1121953559220886,-0.646498007057252,0.17095384353944124,0.6000947737378075,0.9817460953829494,-0.5515772626816805,-0.2093658097055026,0.5011164127104611,0.9523051283385443,-0.44889000949457575,-0.3237190403524203,0.39508205917175243,-0.9396392416252627,-0.33988214004929,-0.8831832345689763,0.9469371991448992,0.48621614551903286,0.3028321127295985,0.8641594582393289,0.9783433243750241,-0.8327808383109156,-0.9889006501033276,0.7984681318631187,-0.1292038939352969,-0.7613422307858577,-0.9995379788906082,0.6631203449240355,-0.010834687409661944,-0.7063619952249558,0.9999618987291052,0.634440153653407,-0.9976824287888795,-0.7852356654588585,0.9918878844974324,-0.6037168882838362,0.22469254945570552,-0.8530527890808391,0.9698475476556702,-0.5050364154666733,-0.2626389710019563,0.8728129305214503,0.9341512281722548,-0.3992447543604988,-0.37508398901713724,0.3441443833970531,-0.9194756276648368,-0.2878315092760001,-0.4822476198126862,0.963128660843235,-0.8664330465902473,0.25014797204793154,0.8352832826475882,0.9882165618918582,-0.8011906154742862,0.13370030874471603,0.764275161709151,-0.9934477431107565,-0.7246669833448058,-0.9997015879742731,0.7031440861606189,0.043980732989144525,-0.7440923797201686,0.9979807902695685,0.7824190574594733,-0.9924542483532973,-0.8179890853055638,0.9834310522187273,-0.5591212643194422,-0.9709429927487921,-0.8803680582565918,0.2582597385884646,-0.45697765279281205,-0.9357603300380232,0.898247844303387,0.9131896837515604,-0.9227406949975886,-0.42532160157724547,0.9439825090330093,-0.896548477795852,-0.23491578465186064,-0.5295316868956351,0.9764253849773331,-0.8377685424953322,-0.9875121428573977,0.5623103626251971,0.9951196587414985,0.6714362656915861,0.07918905780239041,0.7277851194090004,-0.9982180234035358,-0.6858137083737513,-0.039448907050413304,0.7410544881497761,0.09866396681199038,-0.7795863525598989,0.9930001942032028,0.815371547375197,0.21584383180499145,0.5628760494712609,0.9720184623923203,-0.5128451698295707,-0.9563690800943272,-0.9050373315314861,0.31081484499478884,-0.4075454179845026,-0.36665942185149786,0.9209830234780862,0.8894834961816156,-0.2965072042882554,-0.4742808860519974,0.9606484425967016,-0.8709267008616071,-0.9754362729502034,-0.5752242165985534,0.9867874074921328,-0.8065860777491632,-0.9946618534545165,0.6067828418624833,0.9990318672766445,-0.7308882825704842,0.024439799676168418,0.6891076778448697,0.034916269519590475,-0.6448991815841074,-0.09414932032804788,0.7767376090380719,-0.9935257108152703,-0.812737234604941,0.9850350799926685,0.8458733920729378,0.2690300146973925,0.516733760784827,0.9576844162012399,-0.46502769022875895,-0.9389207461771818,-0.9269864640119738,0.36243577983722103,-0.35688828241419124,-0.4170940720670131,0.9409501361810089,0.4702828418992333,-0.24372369285694828,-0.521814692547875,0.9744270930321183,0.5715080649503959,-0.9860423707062227,-0.6191878774438162,-0.14717267953791352,-0.7729793730099621,-0.9988220516967767,0.6494316010122203,0.9999414291336775,-0.6923874701338193,-0.03038291364774556,0.7349330301318244,0.08963273688692398],"x":[-1.6470993291652855e6,-4.5286443388456706e14,-9.057288661220349e14,-1.3585932983595028e15,-1.8114577305969702e15,-2.264322162834438e15,-2.717186595071906e15,-3.1700510273093735e15,-3.6229154595468415e15,-4.075779891784309e15,-4.528644324021777e15,-4.981508756259244e15,-5.434373188496713e15,-5.887237620734181e15,-6.340102052971648e15,-6.792966485209115e15,-7.245830917446583e15,-7.698695349684051e15,-8.151559781921519e15,-8.604424214158986e15,-9.057288646396454e15,-9.510153078633922e15,-9.963017510871388e15,-1.0415881943108856e16,-1.0868746375346326e16,-1.1321610807583794e16,-1.1774475239821262e16,-1.2227339672058728e16,-1.2680204104296196e16,-1.3133068536533664e16,-1.3585932968771132e16,-1.40387974010086e16,-1.4491661833246068e16,-1.4944526265483536e16,-1.5397390697721004e16,-1.585025512995847e16,-1.6303119562195938e16,-1.6755983994433406e16,-1.7208848426670872e16,-1.766171285890834e16,-1.811457729114581e16,-1.8567441723383276e16,-1.9020306155620744e16,-1.9473170587858212e16,-1.992603502009568e16,-2.0378899452333148e16,-2.0831763884570616e16,-2.1284628316808084e16,-2.173749274904555e16,-2.2190357181283016e16,-2.264322161352049e16,-2.309608604575795e16,-2.3548950477995424e16,-2.400181491023289e16,-2.445467934247036e16,-2.4907543774707828e16,-2.5360408206945296e16,-2.581327263918276e16,-2.626613707142023e16,-2.6719001503657696e16,-2.717186593589516e16,-2.762473036813263e16,-2.8077594800370096e16,-2.853045923260757e16,-2.8983323664845036e16,-2.9436188097082504e16,-2.9889052529319972e16,-3.034191696155744e16,-3.0794781393794908e16,-3.1247645826032376e16,-3.170051025826984e16,-3.215337469050731e16,-3.2606239122744776e16,-3.3059103554982244e16,-3.351196798721971e16,-3.3964832419457184e16,-3.441769685169465e16,-3.4870561283932116e16,-3.5323425716169584e16,-3.5776290148407052e16,-3.622915458064452e16,-3.668201901288198e16,-3.713488344511946e16,-3.758774787735693e16,-3.804061230959439e16,-3.849347674183186e16,-3.894634117406933e16,-3.939920560630679e16,-3.985207003854426e16,-4.030493447078173e16,-4.07577989030192e16,-4.121066333525667e16,-4.166352776749413e16,-4.21163921997316e16,-4.256925663196907e16,-4.3022121064206536e16,-4.3474985496444e16,-4.392784992868147e16,-4.4380714360918936e16,-4.483357879315641e16,-4.528644322539387e16,-4.573930765763134e16,-4.619217208986882e16,-4.664503652210627e16,-4.709790095434375e16,-4.755076538658122e16,-4.800362981881869e16,-4.845649425105614e16,-4.890935868329362e16,-4.936222311553108e16,-4.981508754776855e16,-5.026795198000602e16,-5.072081641224349e16,-5.117368084448096e16,-5.162654527671842e16,-5.2079409708955896e16,-5.253227414119336e16,-5.298513857343083e16,-5.343800300566829e16,-5.389086743790576e16,-5.4343731870143224e16,-5.47965963023807e16,-5.524946073461816e16,-5.570232516685563e16,-5.61551895990931e16,-5.660805403133056e16,-5.706091846356804e16,-5.75137828958055e16,-5.796664732804298e16,-5.841951176028043e16,-5.88723761925179e16,-5.932524062475538e16,-5.977810505699285e16,-6.02309694892303e16,-6.068383392146778e16,-6.113669835370525e16,-6.158956278594272e16,-6.2042427218180184e16,-6.249529165041765e16,-6.294815608265512e16,-6.340102051489258e16,-6.385388494713005e16,-6.430674937936752e16,-6.475961381160499e16,-6.5212478243842456e16,-6.566534267607992e16,-6.611820710831739e16,-6.657107154055486e16,-6.702393597279233e16,-6.747680040502979e16,-6.792966483726726e16,-6.838252926950473e16,-6.883539370174219e16,-6.928825813397966e16,-6.974112256621714e16,-7.019398699845461e16,-7.064685143069206e16,-7.109971586292954e16,-7.155258029516701e16,-7.200544472740447e16,-7.245830915964194e16,-7.291117359187941e16,-7.336403802411688e16,-7.381690245635434e16,-7.42697668885918e16,-7.472263132082926e16,-7.517549575306675e16,-7.562836018530422e16,-7.60812246175417e16,-7.653408904977915e16,-7.69869534820166e16,-7.743981791425408e16,-7.789268234649155e16,-7.834554677872902e16,-7.879841121096648e16,-7.925127564320395e16,-7.97041400754414e16,-8.01570045076789e16,-8.060986893991637e16,-8.106273337215382e16,-8.15155978043913e16,-8.196846223662877e16,-8.242132666886624e16,-8.28741911011037e16,-8.332705553334115e16,-8.377991996557862e16,-8.42327843978161e16,-8.468564883005358e16,-8.513851326229104e16,-8.559137769452851e16,-8.604424212676598e16,-8.649710655900344e16,-8.69499709912409e16,-8.740283542347837e16,-8.785569985571584e16,-8.830856428795331e16,-8.876142872019077e16,-8.921429315242824e16,-8.966715758466573e16,-9.012002201690318e16,-9.057288644914066e16,-9.102575088137811e16,-9.147861531361558e16,-9.193147974585306e16,-9.238434417809053e16,-9.283720861032798e16,-9.329007304256544e16,-9.374293747480291e16,-9.41958019070404e16,-9.464866633927787e16,-9.510153077151533e16,-9.55543952037528e16,-9.600725963599027e16,-9.646012406822774e16,-9.691298850046518e16,-9.736585293270266e16,-9.781871736494013e16,-9.82715817971776e16,-9.872444622941506e16,-9.917731066165254e16,-9.963017509389002e16,-1.0008303952612747e17,-1.0053590395836494e17,-1.009887683906024e17,-1.0144163282283987e17,-1.0189449725507734e17,-1.0234736168731482e17,-1.0280022611955227e17,-1.0325309055178974e17,-1.037059549840272e17,-1.0415881941626469e17,-1.0461168384850216e17,-1.0506454828073962e17,-1.0551741271297709e17,-1.0597027714521456e17,-1.0642314157745203e17,-1.0687600600968949e17,-1.0732887044192694e17,-1.0778173487416442e17,-1.0823459930640189e17,-1.0868746373863936e17,-1.0914032817087683e17,-1.095931926031143e17,-1.1004605703535178e17,-1.1049892146758923e17,-1.1095178589982669e17,-1.1140465033206416e17,-1.1185751476430163e17,-1.123103791965391e17,-1.1276324362877656e17,-1.1321610806101403e17,-1.1366897249325152e17,-1.1412183692548898e17,-1.1457470135772645e17,-1.150275657899639e17,-1.1548043022220138e17,-1.1593329465443885e17,-1.1638615908667632e17,-1.1683902351891378e17,-1.1729188795115123e17,-1.177447523833887e17,-1.1819761681562618e17,-1.1865048124786366e17,-1.1910334568010112e17,-1.195562101123386e17,-1.2000907454457606e17,-1.2046193897681354e17,-1.2091480340905098e17,-1.2136766784128845e17,-1.2182053227352592e17,-1.222733967057634e17,-1.2272626113800085e17,-1.2317912557023834e17,-1.236319900024758e17,-1.2408485443471326e17,-1.2453771886695074e17,-1.249905832991882e17,-1.2544344773142566e17,-1.2589631216366314e17,-1.263491765959006e17,-1.2680204102813806e17,-1.2725490546037554e17,-1.27707769892613e17,-1.2816063432485048e17,-1.2861349875708795e17,-1.290663631893254e17,-1.2951922762156288e17,-1.2997209205380035e17,-1.3042495648603782e17,-1.3087782091827526e17,-1.3133068535051274e17,-1.317835497827502e17,-1.3223641421498768e17,-1.3268927864722515e17,-1.3314214307946262e17,-1.335950075117001e17,-1.3404787194393757e17,-1.3450073637617502e17,-1.3495360080841248e17,-1.3540646524064995e17,-1.3585932967288742e17,-1.363121941051249e17,-1.3676505853736235e17,-1.3721792296959982e17,-1.3767078740183728e17,-1.3812365183407477e17,-1.3857651626631224e17,-1.390293806985497e17,-1.3948224513078717e17,-1.3993510956302464e17,-1.4038797399526211e17,-1.4084083842749957e17,-1.4129370285973702e17,-1.417465672919745e17,-1.4219943172421197e17,-1.4265229615644946e17,-1.4310516058868691e17,-1.4355802502092438e17,-1.4401088945316186e17,-1.444637538853993e17,-1.4491661831763677e17,-1.4536948274987424e17,-1.458223471821117e17,-1.462752116143492e17,-1.4672807604658666e17,-1.4718094047882413e17,-1.4763380491106157e17,-1.4808666934329907e17,-1.485395337755365e17,-1.48992398207774e17,-1.4944526264001146e17,-1.498981270722489e17,-1.503509915044864e17,-1.5080385593672384e17,-1.5125672036896134e17,-1.517095848011988e17,-1.521624492334363e17,-1.5261531366567373e17,-1.530681780979112e17,-1.5352104253014867e17,-1.539739069623861e17,-1.5442677139462358e17,-1.5487963582686106e17,-1.5533250025909856e17,-1.55785364691336e17,-1.562382291235735e17,-1.5669109355581094e17,-1.5714395798804842e17,-1.575968224202859e17,-1.5804968685252333e17,-1.585025512847608e17,-1.5895541571699827e17,-1.5940828014923574e17,-1.598611445814732e17,-1.603140090137107e17,-1.6076687344594816e17,-1.6121973787818563e17,-1.616726023104231e17,-1.6212546674266054e17,-1.6257833117489802e17,-1.630311956071355e17,-1.6348406003937293e17,-1.6393692447161043e17,-1.643897889038479e17,-1.6484265333608538e17,-1.6529551776832285e17,-1.657483822005603e17,-1.6620124663279776e17,-1.666541110650352e17,-1.671069754972727e17,-1.6755983992951014e17,-1.6801270436174765e17,-1.684655687939851e17,-1.689184332262226e17,-1.6937129765846006e17,-1.698241620906975e17,-1.7027702652293498e17,-1.707298909551724e17,-1.7118275538740992e17,-1.7163561981964736e17,-1.7208848425188486e17,-1.725413486841223e17,-1.729942131163598e17,-1.7344707754859725e17,-1.738999419808347e17,-1.743528064130722e17,-1.7480567084530963e17,-1.7525853527754714e17,-1.7571139970978458e17,-1.7616426414202208e17,-1.7661712857425952e17,-1.77069993006497e17,-1.7752285743873446e17,-1.779757218709719e17,-1.7842858630320938e17,-1.7888145073544685e17,-1.7933431516768435e17,-1.797871795999218e17,-1.802400440321593e17,-1.8069290846439674e17,-1.811457728966342e17,-1.8159863732887168e17,-1.8205150176110912e17,-1.825043661933466e17,-1.8295723062558406e17,-1.8341009505782154e17,-1.83862959490059e17,-1.8431582392229648e17,-1.8476868835453395e17,-1.8522155278677142e17,-1.856744172190089e17,-1.8612728165124634e17,-1.865801460834838e17,-1.8703301051572128e17,-1.8748587494795872e17,-1.8793873938019622e17,-1.883916038124337e17,-1.8884446824467117e17,-1.8929733267690864e17,-1.8975019710914608e17,-1.9020306154138355e17,-1.90655925973621e17,-1.911087904058585e17,-1.9156165483809594e17,-1.9201451927033344e17,-1.9246738370257088e17,-1.929202481348084e17,-1.9337311256704586e17,-1.938259769992833e17,-1.9427884143152077e17,-1.947317058637582e17,-1.951845702959957e17,-1.9563743472823315e17,-1.9609029916047066e17,-1.965431635927081e17,-1.969960280249456e17,-1.9744889245718304e17,-1.9790175688942048e17,-1.98354621321658e17,-1.9880748575389542e17,-1.9926035018613293e17,-1.9971321461837037e17,-2.0016607905060787e17,-2.006189434828453e17,-2.0107180791508278e17,-2.0152467234732026e17,-2.019775367795577e17,-2.0243040121179517e17,-2.0288326564403264e17,-2.0333613007627014e17,-2.037889945085076e17,-2.0424185894074506e17,-2.0469472337298253e17,-2.0514758780522e17,-2.0560045223745747e17,-2.060533166696949e17,-2.0650618110193238e17,-2.0695904553416986e17,-2.0741190996640733e17,-2.078647743986448e17,-2.0831763883088227e17,-2.0877050326311974e17,-2.0922336769535722e17,-2.096762321275947e17,-2.1012909655983213e17,-2.105819609920696e17,-2.1103482542430707e17,-2.114876898565445e17,-2.11940554288782e17,-2.1239341872101946e17,-2.1284628315325696e17,-2.1329914758549443e17,-2.1375201201773187e17,-2.1420487644996934e17,-2.146577408822068e17,-2.151106053144443e17,-2.1556346974668173e17,-2.1601633417891923e17,-2.1646919861115667e17,-2.1692206304339418e17,-2.173749274756316e17,-2.1782779190786906e17,-2.1828065634010656e17,-2.18733520772344e17,-2.191863852045815e17,-2.1963924963681894e17,-2.2009211406905645e17,-2.205449785012939e17,-2.209978429335314e17,-2.2145070736576883e17,-2.2190357179800627e17,-2.2235643623024378e17,-2.228093006624812e17,-2.2326216509471872e17,-2.2371502952695616e17,-2.2416789395919366e17,-2.246207583914311e17,-2.2507362282366858e17,-2.2552648725590605e17,-2.259793516881435e17,-2.2643221612038096e17,-2.2688508055261843e17,-2.2733794498485594e17,-2.2779080941709338e17,-2.2824367384933085e17,-2.2869653828156832e17,-2.291494027138058e17,-2.2960226714604326e17,-2.300551315782807e17,-2.3050799601051818e17,-2.3096086044275565e17,-2.3141372487499312e17,-2.318665893072306e17,-2.3231945373946806e17,-2.3277231817170554e17,-2.33225182603943e17,-2.3367804703618048e17,-2.3413091146841792e17,-2.345837759006554e17,-2.3503664033289286e17,-2.354895047651303e17,-2.359423691973678e17,-2.3639523362960525e17,-2.3684809806184275e17,-2.3730096249408022e17,-2.3775382692631766e17,-2.3820669135855514e17,-2.3865955579079258e17,-2.3911242022303008e17,-2.3956528465526752e17,-2.4001814908750502e17,-2.4047101351974246e17,-2.4092387795197997e17,-2.413767423842174e17,-2.4182960681645485e17,-2.4228247124869235e17,-2.427353356809298e17,-2.431882001131673e17,-2.4364106454540474e17,-2.4409392897764224e17,-2.4454679340987968e17,-2.449996578421172e17,-2.4545252227435462e17,-2.4590538670659206e17,-2.4635825113882957e17,-2.46811115571067e17,-2.472639800033045e17,-2.4771684443554195e17,-2.4816970886777946e17,-2.486225733000169e17,-2.4907543773225437e17,-2.4952830216449184e17,-2.4998116659672928e17,-2.5043403102896675e17,-2.5088689546120422e17,-2.5133975989344173e17,-2.5179262432567917e17,-2.5224548875791664e17,-2.526983531901541e17,-2.5315121762239158e17,-2.5360408205462906e17,-2.540569464868665e17,-2.5450981091910397e17,-2.5496267535134144e17,-2.5541553978357888e17,-2.558684042158164e17,-2.5632126864805386e17,-2.5677413308029133e17,-2.572269975125288e17,-2.5767986194476627e17,-2.581327263770037e17,-2.5858559080924118e17,-2.5903845524147866e17,-2.594913196737161e17,-2.599441841059536e17,-2.6039704853819104e17,-2.6084991297042854e17,-2.6130277740266602e17,-2.6175564183490346e17,-2.6220850626714093e17,-2.6266137069937837e17,-2.6311423513161587e17,-2.635670995638533e17,-2.640199639960908e17,-2.6447282842832826e17,-2.6492569286056576e17,-2.653785572928032e17,-2.6583142172504064e17,-2.6628428615727814e17,-2.667371505895156e17,-2.671900150217531e17,-2.6764287945399053e17,-2.6809574388622803e17,-2.6854860831846547e17,-2.6900147275070294e17,-2.694543371829404e17,-2.6990720161517786e17,-2.7036006604741533e17,-2.708129304796528e17,-2.712657949118903e17,-2.7171865934412774e17,-2.7217152377636525e17,-2.726243882086027e17,-2.7307725264084016e17,-2.7353011707307763e17,-2.7398298150531507e17,-2.7443584593755254e17,-2.7488871036979e17,-2.753415748020275e17,-2.7579443923426496e17,-2.7624730366650243e17,-2.767001680987399e17,-2.7715303253097738e17,-2.7760589696321485e17,-2.780587613954523e17,-2.7851162582768976e17,-2.7896449025992723e17,-2.7941735469216467e17,-2.7987021912440218e17,-2.8032308355663965e17,-2.8077594798887712e17,-2.812288124211146e17,-2.8168167685335206e17,-2.821345412855895e17,-2.8258740571782698e17,-2.8304027015006445e17,-2.834931345823019e17,-2.839459990145394e17,-2.8439886344677683e17,-2.8485172787901434e17,-2.853045923112518e17,-2.8575745674348925e17,-2.8621032117572672e17,-2.8666318560796416e17,-2.8711605004020166e17,-2.875689144724391e17,-2.880217789046766e17,-2.8847464333691405e17,-2.8892750776915155e17,-2.89380372201389e17,-2.8983323663362643e17,-2.9028610106586394e17,-2.907389654981014e17,-2.911918299303389e17,-2.916446943625763e17,-2.920975587948138e17,-2.9255042322705126e17,-2.930032876592887e17,-2.934561520915262e17,-2.9390901652376365e17,-2.9436188095600115e17,-2.948147453882386e17,-2.952676098204761e17,-2.957204742527136e17,-2.96173338684951e17,-2.966262031171885e17,-2.970790675494259e17,-2.975319319816634e17,-2.9798479641390086e17,-2.984376608461384e17,-2.988905252783758e17,-2.993433897106133e17,-2.9979625414285075e17,-3.002491185750882e17,-3.007019830073257e17,-3.0115484743956314e17,-3.0160771187180064e17,-3.020605763040381e17,-3.025134407362756e17,-3.02966305168513e17,-3.034191696007505e17,-3.038720340329879e17,-3.043248984652254e17,-3.047777628974629e17,-3.0523062732970035e17,-3.0568349176193786e17,-3.061363561941753e17,-3.065892206264128e17,-3.070420850586502e17,-3.0749494949088774e17,-3.079478139231252e17,-3.084006783553626e17,-3.0885354278760006e17,-3.093064072198376e17,-3.097592716520751e17,-3.1021213608431245e17,-3.1066500051655e17,-3.1111786494878746e17,-3.1157072938102496e17,-3.1202359381326234e17,-3.1247645824549984e17,-3.1292932267773734e17,-3.133821871099747e17,-3.138350515422122e17,-3.142879159744497e17,-3.147407804066872e17,-3.151936448389246e17,-3.156465092711622e17,-3.160993737033996e17,-3.1655223813563706e17,-3.170051025678745e17,-3.17457967000112e17,-3.179108314323495e17,-3.183636958645869e17,-3.188165602968244e17,-3.192694247290619e17,-3.197222891612994e17,-3.201751535935368e17,-3.206280180257743e17,-3.210808824580118e17,-3.2153374689024915e17,-3.2198661132248666e17,-3.2243947575472416e17,-3.2289234018696166e17,-3.2334520461919904e17,-3.2379806905143654e17,-3.2425093348367405e17,-3.247037979159114e17,-3.251566623481489e17,-3.256095267803864e17,-3.2606239121262394e17,-3.265152556448613e17,-3.269681200770988e17,-3.274209845093363e17,-3.278738489415737e17,-3.283267133738112e17,-3.287795778060487e17,-3.292324422382862e17,-3.296853066705236e17,-3.301381711027611e17,-3.305910355349986e17,-3.3104389996723603e17,-3.314967643994735e17,-3.319496288317109e17,-3.324024932639485e17,-3.3285535769618586e17,-3.3330822212842336e17,-3.3376108656066086e17,-3.342139509928983e17,-3.3466681542513574e17,-3.3511967985737325e17,-3.3557254428961075e17,-3.360254087218481e17,-3.364782731540856e17,-3.369311375863231e17,-3.373840020185606e17,-3.37836866450798e17,-3.382897308830355e17,-3.38742595315273e17,-3.3919545974751046e17,-3.396483241797479e17,-3.4010118861198534e17,-3.405540530442229e17,-3.410069174764603e17,-3.414597819086978e17,-3.4191264634093523e17,-3.4236551077317274e17,-3.428183752054102e17,-3.432712396376477e17,-3.437241040698852e17,-3.4417696850212256e17,-3.4462983293436006e17,-3.450826973665975e17,-3.45535561798835e17,-3.4598842623107245e17,-3.4644129066330995e17,-3.468941550955474e17,-3.473470195277849e17,-3.4779988396002234e17,-3.482527483922598e17,-3.487056128244973e17,-3.491584772567347e17,-3.496113416889722e17,-3.5006420612120966e17,-3.505170705534472e17,-3.509699349856846e17,-3.514227994179221e17,-3.518756638501595e17,-3.52328528282397e17,-3.527813927146345e17,-3.5323425714687194e17,-3.5368712157910944e17,-3.541399860113469e17,-3.545928504435844e17,-3.5504571487582176e17,-3.554985793080593e17,-3.5595144374029677e17,-3.564043081725342e17,-3.5685717260477165e17,-3.5731003703700915e17,-3.5776290146924666e17,-3.58215765901484e17,-3.586686303337216e17,-3.5912149476595904e17,-3.5957435919819654e17,-3.600272236304339e17,-3.604800880626714e17,-3.609329524949089e17,-3.613858169271463e17,-3.618386813593838e17,-3.622915457916213e17,-3.627444102238588e17,-3.631972746560962e17,-3.6365013908833376e17,-3.641030035205712e17,-3.645558679528086e17,-3.650087323850461e17,-3.654615968172836e17,-3.659144612495211e17,-3.6636732568175846e17,-3.6682019011399597e17,-3.672730545462335e17,-3.67725918978471e17,-3.6817878341070835e17,-3.6863164784294586e17,-3.6908451227518336e17,-3.6953737670742074e17,-3.6999024113965824e17,-3.7044310557189574e17,-3.7089597000413325e17,-3.713488344363706e17,-3.7180169886860806e17,-3.7225456330084563e17,-3.72707427733083e17,-3.731602921653205e17,-3.73613156597558e17,-3.740660210297955e17,-3.745188854620329e17,-3.749717498942704e17,-3.754246143265079e17,-3.758774787587453e17,-3.763303431909828e17,-3.767832076232203e17,-3.772360720554578e17,-3.7768893648769517e17,-3.781418009199327e17,-3.785946653521702e17,-3.790475297844076e17,-3.7950039421664506e17,-3.799532586488825e17,-3.8040612308112006e17,-3.8085898751335744e17,-3.8131185194559494e17,-3.8176471637783245e17,-3.822175808100699e17,-3.826704452423073e17,-3.8312330967454483e17,-3.8357617410678234e17,-3.840290385390197e17,-3.844819029712572e17,-3.8493476740349466e17,-3.8538763183573216e17,-3.858404962679696e17,-3.862933607002071e17,-3.867462251324446e17,-3.8719908956468205e17,-3.876519539969195e17,-3.881048184291569e17,-3.885576828613944e17,-3.890105472936319e17,-3.894634117258694e17,-3.899162761581068e17,-3.903691405903443e17,-3.9082200502258176e17,-3.9127486945481926e17,-3.917277338870568e17,-3.9218059831929414e17,-3.9263346275153165e17,-3.930863271837691e17,-3.935391916160066e17,-3.9399205604824403e17,-3.9444492048048154e17,-3.94897784912719e17,-3.953506493449565e17,-3.958035137771939e17,-3.9625637820943136e17,-3.9670924264166886e17,-3.971621070739063e17,-3.976149715061438e17,-3.9806783593838125e17,-3.9852070037061875e17,-3.989735648028562e17,-3.994264292350937e17,-3.998792936673311e17,-4.003321580995686e17,-4.007850225318061e17,-4.012378869640435e17,-4.01690751396281e17,-4.0214361582851846e17,-4.02596480260756e17,-4.0304934469299334e17,-4.035022091252309e17,-4.0395507355746835e17,-4.044079379897058e17,-4.0486080242194323e17,-4.0531366685418074e17,-4.0576653128641824e17,-4.062193957186556e17,-4.066722601508932e17,-4.071251245831306e17,-4.075779890153681e17,-4.080308534476055e17,-4.08483717879843e17,-4.089365823120805e17,-4.093894467443179e17,-4.098423111765554e17,-4.102951756087929e17,-4.107480400410304e17,-4.112009044732678e17,-4.1165376890550534e17,-4.121066333377428e17,-4.1255949776998016e17,-4.1301236220221766e17,-4.134652266344552e17,-4.139180910666927e17,-4.1437095549893005e17,-4.1482381993116755e17,-4.1527668436340506e17,-4.1572954879564243e17,-4.1618241322787994e17,-4.1663527766011744e17,-4.1708814209235494e17,-4.175410065245923e17,-4.179938709568298e17,-4.184467353890673e17,-4.188995998213048e17,-4.193524642535422e17,-4.1980532868577965e17,-4.202581931180172e17,-4.207110575502546e17,-4.211639219824921e17,-4.216167864147296e17,-4.220696508469671e17,-4.225225152792045e17,-4.22975379711442e17,-4.234282441436795e17,-4.2388110857591686e17,-4.243339730081544e17,-4.247868374403918e17,-4.252397018726294e17,-4.2569256630486675e17,-4.2614543073710426e17,-4.2659829516934176e17,-4.270511596015792e17,-4.2750402403381664e17,-4.279568884660541e17,-4.2840975289829165e17,-4.28862617330529e17,-4.293154817627665e17,-4.2976834619500397e17,-4.302212106272415e17,-4.306740750594789e17,-4.311269394917164e17,-4.315798039239539e17,-4.320326683561913e17,-4.324855327884288e17,-4.3293839722066624e17,-4.3339126165290374e17,-4.338441260851412e17,-4.342969905173787e17,-4.347498549496161e17,-4.3520271938185363e17,-4.356555838140911e17,-4.361084482463285e17,-4.36561312678566e17,-4.3701417711080346e17,-4.3746704154304096e17,-4.379199059752784e17,-4.383727704075159e17,-4.3882563483975334e17,-4.3927849927199085e17,-4.397313637042283e17,-4.401842281364657e17,-4.406370925687032e17,-4.410899570009407e17,-4.415428214331782e17,-4.419956858654156e17,-4.424485502976531e17,-4.4290141472989056e17,-4.4335427916212806e17,-4.438071435943655e17,-4.4426000802660294e17,-4.4471287245884045e17,-4.451657368910779e17,-4.456186013233154e17,-4.4607146575555283e17,-4.4652433018779034e17,-4.469771946200278e17,-4.474300590522653e17,-4.4788292348450266e17,-4.4833578791674016e17,-4.4878865234897766e17,-4.492415167812151e17,-4.496943812134526e17,-4.5014724564569005e17,-4.5060011007792755e17,-4.510529745101649e17,-4.515058389424025e17,-4.5195870337463994e17,-4.524115678068774e17,-4.528644322391148e17,-4.533172966713523e17,-4.537701611035898e17,-4.542230255358272e17,-4.546758899680648e17,-4.551287544003022e17,-4.555816188325397e17,-4.560344832647771e17,-4.564873476970146e17,-4.569402121292521e17,-4.573930765614895e17,-4.57845940993727e17,-4.582988054259645e17,-4.58751669858202e17,-4.5920453429043936e17,-4.596573987226769e17,-4.6011026315491437e17,-4.6056312758715174e17,-4.6101599201938925e17,-4.6146885645162675e17,-4.6192172088386426e17,-4.623745853161016e17,-4.6282744974833914e17,-4.6328031418057664e17,-4.63733178612814e17,-4.641860430450515e17,-4.64638907477289e17,-4.650917719095265e17,-4.655446363417639e17,-4.659975007740014e17,-4.664503652062389e17,-4.6690322963847635e17,-4.673560940707138e17,-4.6780895850295123e17,-4.682618229351888e17,-4.687146873674262e17,-4.691675517996637e17,-4.696204162319012e17,-4.700732806641387e17,-4.7052614509637606e17,-4.7097900952861357e17,-4.714318739608511e17,-4.7188473839308845e17,-4.7233760282532595e17,-4.727904672575634e17,-4.7324333168980096e17,-4.7369619612203834e17,-4.7414906055427584e17,-4.7460192498651334e17,-4.750547894187508e17,-4.755076538509882e17,-4.7596051828322566e17,-4.7641338271546323e17,-4.768662471477006e17,-4.773191115799381e17,-4.7777197601217555e17,-4.7822484044441306e17,-4.786777048766505e17,-4.79130569308888e17,-4.795834337411255e17,-4.800362981733629e17,-4.804891626056004e17,-4.809420270378378e17,-4.813948914700753e17,-4.8184775590231277e17,-4.823006203345503e17,-4.827534847667877e17,-4.832063491990252e17,-4.8365921363126266e17,-4.841120780635001e17,-4.845649424957376e17,-4.8501780692797504e17,-4.8547067136021254e17,-4.8592353579245e17,-4.863764002246875e17,-4.868292646569249e17,-4.8728212908916243e17,-4.877349935213998e17,-4.881878579536373e17,-4.886407223858748e17,-4.8909358681811226e17,-4.8954645125034976e17,-4.899993156825872e17,-4.904521801148247e17,-4.909050445470621e17,-4.9135790897929965e17,-4.918107734115371e17,-4.922636378437745e17,-4.92716502276012e17,-4.931693667082495e17,-4.93622231140487e17,-4.940750955727244e17,-4.945279600049619e17,-4.9498082443719936e17,-4.9543368886943686e17,-4.9588655330167424e17,-4.9633941773391174e17,-4.9679228216614925e17,-4.972451465983867e17,-4.976980110306242e17,-4.9815087546286163e17,-4.9860373989509914e17,-4.990566043273365e17,-4.995094687595741e17,-4.999623331918115e17,-5.0041519762404896e17,-5.008680620562864e17,-5.013209264885239e17,-5.017737909207614e17,-5.022266553529988e17,-5.0267951978523635e17,-5.031323842174738e17,-5.035852486497113e17,-5.040381130819487e17,-5.044909775141862e17,-5.049438419464237e17,-5.0539670637866106e17,-5.0584957081089856e17,-5.0630243524313606e17,-5.067552996753736e17,-5.0720816410761094e17,-5.076610285398485e17,-5.0811389297208595e17,-5.085667574043233e17,-5.0901962183656083e17,-5.0947248626879834e17,-5.0992535070103584e17,-5.103782151332732e17,-5.108310795655107e17,-5.112839439977482e17,-5.117368084299856e17,-5.121896728622231e17,-5.126425372944606e17,-5.130954017266981e17,-5.135482661589355e17,-5.14001130591173e17,-5.144539950234105e17,-5.1490685945564794e17,-5.153597238878854e17,-5.158125883201228e17,-5.162654527523604e17,-5.1671831718459776e17,-5.1717118161683526e17,-5.176240460490728e17,-5.180769104813102e17,-5.1852977491354765e17,-5.1898263934578515e17,-5.1943550377802266e17,-5.1988836821026003e17,-5.2034123264249754e17,-5.20794097074735e17,-5.2124696150697254e17,-5.216998259392099e17,-5.221526903714474e17,-5.226055548036849e17,-5.2305841923592237e17,-5.235112836681598e17,-5.2396414810039725e17,-5.244170125326348e17,-5.248698769648722e17,-5.253227413971097e17,-5.2577560582934714e17,-5.2622847026158464e17,-5.266813346938221e17,-5.271341991260596e17,-5.275870635582971e17,-5.2803992799053446e17,-5.28492792422772e17,-5.289456568550094e17,-5.293985212872469e17,-5.2985138571948435e17,-5.3030425015172186e17,-5.307571145839593e17,-5.312099790161968e17,-5.3166284344843424e17,-5.321157078806717e17,-5.325685723129092e17,-5.330214367451466e17,-5.334743011773841e17,-5.3392716560962157e17,-5.343800300418591e17,-5.348328944740965e17,-5.35285758906334e17,-5.357386233385714e17,-5.361914877708089e17,-5.366443522030464e17,-5.3709721663528384e17,-5.3755008106752134e17,-5.380029454997588e17,-5.384558099319963e17,-5.3890867436423366e17,-5.3936153879647123e17,-5.398144032287087e17,-5.402672676609461e17,-5.4072013209318355e17,-5.4117299652542106e17,-5.4162586095765856e17,-5.4207872538989594e17,-5.425315898221335e17,-5.4298445425437094e17,-5.4343731868660845e17,-5.438901831188458e17,-5.443430475510833e17,-5.447959119833208e17,-5.452487764155583e17,-5.457016408477957e17,-5.461545052800332e17,-5.466073697122707e17,-5.470602341445081e17,-5.4751309857674566e17,-5.479659630089831e17,-5.4841882744122054e17,-5.48871691873458e17,-5.493245563056955e17,-5.49777420737933e17,-5.502302851701704e17,-5.506831496024079e17,-5.511360140346454e17,-5.515888784668829e17,-5.5204174289912026e17,-5.5249460733135776e17,-5.5294747176359526e17,-5.5340033619583264e17,-5.5385320062807014e17,-5.5430606506030765e17,-5.5475892949254515e17,-5.552117939247825e17,-5.556646583570201e17,-5.5611752278925754e17,-5.565703872214949e17,-5.570232516537324e17,-5.574761160859699e17,-5.579289805182074e17,-5.583818449504448e17,-5.588347093826823e17,-5.592875738149198e17,-5.597404382471572e17,-5.601933026793947e17,-5.606461671116322e17,-5.610990315438697e17,-5.615518959761071e17,-5.620047604083446e17,-5.624576248405821e17,-5.629104892728195e17,-5.6336335370505696e17,-5.638162181372944e17,-5.6426908256953197e17,-5.6472194700176934e17,-5.6517481143400685e17,-5.6562767586624435e17,-5.660805402984818e17,-5.665334047307192e17,-5.6698626916295674e17,-5.6743913359519424e17,-5.678919980274316e17,-5.683448624596691e17,-5.6879772689190656e17,-5.6925059132414406e17,-5.697034557563815e17,-5.70156320188619e17,-5.706091846208565e17,-5.7106204905309395e17,-5.715149134853314e17,-5.7196777791756883e17,-5.724206423498064e17,-5.728735067820438e17,-5.733263712142813e17,-5.737792356465187e17,-5.742321000787562e17,-5.7468496451099366e17,-5.7513782894323117e17,-5.755906933754687e17,-5.7604355780770605e17,-5.764964222399436e17,-5.76949286672181e17,-5.774021511044184e17,-5.77855015536656e17,-5.783078799688934e17,-5.787607444011309e17,-5.792136088333683e17,-5.796664732656058e17,-5.801193376978433e17,-5.805722021300808e17,-5.810250665623182e17,-5.814779309945556e17,-5.819307954267932e17,-5.823836598590307e17,-5.828365242912681e17,-5.832893887235055e17,-5.83742253155743e17,-5.841951175879805e17,-5.84647982020218e17,-5.851008464524554e17,-5.855537108846929e17,-5.860065753169304e17,-5.864594397491679e17,-5.869123041814053e17,-5.873651686136428e17,-5.878180330458802e17,-5.882708974781178e17,-5.887237619103551e17,-5.891766263425926e17,-5.896294907748301e17,-5.900823552070675e17,-5.905352196393051e17,-5.909880840715425e17,-5.9144094850378e17,-5.918938129360174e17,-5.92346677368255e17,-5.927995418004923e17,-5.932524062327299e17,-5.937052706649674e17,-5.941581350972047e17,-5.946109995294422e17,-5.950638639616797e17,-5.955167283939172e17,-5.959695928261546e17,-5.964224572583922e17,-5.968753216906296e17,-5.973281861228671e17,-5.977810505551044e17,-5.98233914987342e17,-5.986867794195795e17,-5.99139643851817e17,-5.995925082840544e17,-6.00045372716292e17,-6.004982371485293e17,-6.009511015807667e17,-6.014039660130043e17,-6.018568304452417e17,-6.023096948774793e17,-6.027625593097166e17,-6.032154237419542e17,-6.036682881741916e17,-6.041211526064289e17,-6.045740170386665e17,-6.05026881470904e17,-6.054797459031415e17,-6.05932610335379e17,-6.063854747676165e17,-6.068383391998538e17,-6.072912036320914e17,-6.077440680643287e17,-6.081969324965663e17,-6.086497969288038e17,-6.091026613610412e17,-6.095555257932787e17,-6.100083902255163e17,-6.104612546577536e17,-6.10914119089991e17,-6.113669835222286e17,-6.11819847954466e17,-6.122727123867035e17,-6.127255768189409e17,-6.131784412511785e17,-6.136313056834159e17,-6.140841701156532e17,-6.145370345478908e17,-6.149898989801284e17,-6.154427634123658e17,-6.158956278446033e17,-6.163484922768408e17,-6.168013567090781e17,-6.172542211413156e17,-6.17707085573553e17,-6.181599500057906e17,-6.186128144380282e17,-6.190656788702655e17,-6.19518543302503e17,-6.199714077347405e17,-6.204242721669778e17,-6.208771365992154e17,-6.213300010314529e17,-6.217828654636904e17,-6.222357298959278e17,-6.226885943281652e17,-6.231414587604027e17,-6.235943231926401e17,-6.240471876248776e17,-6.245000520571151e17,-6.249529164893527e17,-6.2540578092159e17,-6.258586453538276e17,-6.26311509786065e17,-6.267643742183025e17,-6.272172386505399e17,-6.276701030827773e17,-6.281229675150149e17,-6.285758319472524e17,-6.290286963794898e17,-6.294815608117272e17,-6.299344252439648e17,-6.303872896762021e17,-6.308401541084397e17,-6.312930185406772e17,-6.317458829729146e17,-6.321987474051521e17,-6.326516118373894e17,-6.33104476269627e17,-6.335573407018644e17,-6.340102051341019e17,-6.344630695663395e17,-6.34915933998577e17,-6.353687984308143e17,-6.358216628630518e17,-6.362745272952893e17,-6.367273917275267e17,-6.371802561597642e17,-6.376331205920017e17,-6.380859850242392e17,-6.385388494564767e17,-6.38991713888714e17,-6.394445783209516e17,-6.39897442753189e17,-6.403503071854264e17,-6.40803171617664e17,-6.412560360499016e17,-6.417089004821389e17,-6.421617649143763e17,-6.426146293466139e17,-6.430674937788513e17,-6.435203582110888e17,-6.439732226433262e17,-6.444260870755638e17,-6.448789515078012e17,-6.453318159400385e17,-6.457846803722761e17,-6.462375448045137e17,-6.46690409236751e17,-6.471432736689885e17,-6.475961381012261e17,-6.480490025334634e17,-6.485018669657009e17,-6.489547313979383e17,-6.494075958301759e17,-6.498604602624133e17,-6.503133246946508e17,-6.507661891268883e17,-6.512190535591259e17,-6.516719179913631e17,-6.521247824236006e17,-6.525776468558382e17,-6.530305112880755e17,-6.534833757203131e17,-6.539362401525505e17,-6.543891045847881e17,-6.548419690170254e17,-6.552948334492628e17,-6.557476978815004e17,-6.562005623137379e17,-6.566534267459753e17,-6.571062911782129e17,-6.575591556104504e17,-6.580120200426876e17,-6.584648844749252e17,-6.589177489071626e17,-6.593706133394002e17,-6.598234777716376e17,-6.602763422038751e17,-6.607292066361126e17,-6.611820710683501e17,-6.616349355005874e17,-6.62087799932825e17,-6.625406643650625e17,-6.629935287972998e17,-6.634463932295374e17,-6.638992576617748e17,-6.643521220940123e17,-6.648049865262497e17,-6.652578509584872e17,-6.657107153907247e17,-6.661635798229622e17,-6.666164442551996e17,-6.670693086874372e17,-6.675221731196748e17,-6.67975037551912e17,-6.684279019841495e17,-6.68880766416387e17,-6.693336308486244e17,-6.69786495280862e17,-6.702393597130994e17,-6.70692224145337e17,-6.711450885775743e17,-6.715979530098117e17,-6.720508174420493e17,-6.725036818742867e17,-6.729565463065242e17,-6.734094107387617e17,-6.738622751709992e17,-6.743151396032365e17,-6.74768004035474e17,-6.752208684677115e17,-6.756737328999489e17,-6.761265973321865e17,-6.76579461764424e17,-6.770323261966615e17,-6.774851906288988e17,-6.779380550611363e17,-6.783909194933738e17,-6.788437839256113e17,-6.792966483578487e17,-6.797495127900863e17,-6.802023772223237e17,-6.80655241654561e17,-6.811081060867986e17,-6.81560970519036e17,-6.820138349512736e17,-6.82466699383511e17,-6.829195638157485e17,-6.83372428247986e17,-6.838252926802232e17,-6.842781571124608e17,-6.847310215446984e17,-6.851838859769358e17,-6.856367504091732e17,-6.860896148414108e17,-6.865424792736483e17,-6.869953437058857e17,-6.874482081381231e17,-6.879010725703606e17,-6.883539370025981e17,-6.888068014348355e17,-6.89259665867073e17,-6.897125302993106e17,-6.901653947315479e17,-6.906182591637853e17,-6.910711235960229e17,-6.915239880282604e17,-6.919768524604978e17,-6.924297168927354e17,-6.928825813249728e17,-6.933354457572102e17,-6.937883101894476e17,-6.942411746216851e17,-6.946940390539227e17,-6.951469034861601e17,-6.955997679183976e17,-6.960526323506351e17,-6.965054967828724e17,-6.969583612151099e17,-6.974112256473475e17,-6.978640900795849e17,-6.983169545118225e17,-6.987698189440598e17,-6.992226833762973e17,-6.996755478085348e17,-7.001284122407721e17,-7.005812766730097e17,-7.010341411052472e17,-7.014870055374847e17,-7.019398699697221e17,-7.023927344019597e17,-7.02845598834197e17,-7.032984632664346e17,-7.037513276986719e17,-7.042041921309094e17,-7.04657056563147e17,-7.051099209953843e17,-7.055627854276219e17,-7.060156498598593e17,-7.064685142920968e17,-7.069213787243342e17,-7.073742431565718e17,-7.078271075888092e17,-7.082799720210467e17,-7.087328364532841e17,-7.091857008855215e17,-7.096385653177591e17,-7.100914297499964e17,-7.10544294182234e17,-7.109971586144716e17,-7.11450023046709e17,-7.119028874789464e17,-7.12355751911184e17,-7.128086163434213e17,-7.132614807756588e17,-7.137143452078962e17,-7.141672096401338e17,-7.146200740723713e17,-7.150729385046086e17,-7.155258029368462e17,-7.159786673690836e17,-7.16431531801321e17,-7.168843962335585e17,-7.173372606657961e17,-7.177901250980335e17,-7.18242989530271e17,-7.186958539625084e17,-7.191487183947459e17,-7.196015828269833e17,-7.200544472592207e17,-7.205073116914583e17,-7.209601761236959e17,-7.214130405559332e17,-7.218659049881708e17,-7.223187694204082e17,-7.227716338526456e17,-7.232244982848831e17,-7.236773627171205e17,-7.241302271493581e17,-7.245830915815955e17,-7.25035956013833e17,-7.254888204460704e17,-7.25941684878308e17,-7.263945493105453e17,-7.268474137427828e17,-7.273002781750204e17,-7.277531426072577e17,-7.282060070394953e17,-7.286588714717326e17,-7.291117359039702e17,-7.295646003362076e17,-7.30017464768445e17,-7.304703292006826e17,-7.309231936329202e17,-7.313760580651575e17,-7.31828922497395e17,-7.322817869296325e17,-7.327346513618698e17,-7.331875157941074e17,-7.336403802263448e17,-7.340932446585824e17,-7.345461090908198e17,-7.349989735230572e17,-7.354518379552947e17,-7.359047023875322e17,-7.363575668197696e17,-7.368104312520072e17,-7.372632956842447e17,-7.37716160116482e17,-7.381690245487195e17,-7.386218889809569e17,-7.390747534131945e17,-7.395276178454319e17,-7.399804822776694e17,-7.40433346709907e17,-7.408862111421444e17,-7.413390755743817e17,-7.417919400066193e17,-7.422448044388568e17,-7.426976688710941e17,-7.431505333033317e17,-7.436033977355692e17,-7.440562621678066e17,-7.44509126600044e17,-7.449619910322815e17,-7.45414855464519e17,-7.458677198967565e17,-7.463205843289939e17,-7.467734487612315e17,-7.47226313193469e17,-7.476791776257062e17,-7.481320420579438e17,-7.485849064901812e17,-7.490377709224187e17,-7.494906353546563e17,-7.499434997868937e17,-7.503963642191313e17,-7.508492286513686e17,-7.51302093083606e17,-7.517549575158436e17,-7.52207821948081e17,-7.526606863803185e17,-7.53113550812556e17,-7.535664152447936e17,-7.540192796770308e17,-7.544721441092684e17,-7.549250085415058e17,-7.553778729737434e17,-7.558307374059808e17,-7.562836018382182e17,-7.567364662704558e17,-7.571893307026931e17,-7.576421951349306e17,-7.580950595671681e17,-7.585479239994057e17,-7.59000788431643e17,-7.594536528638806e17,-7.59906517296118e17,-7.603593817283553e17,-7.608122461605929e17,-7.612651105928303e17,-7.617179750250679e17,-7.621708394573053e17,-7.626237038895428e17,-7.630765683217804e17,-7.635294327540179e17,-7.639822971862551e17,-7.644351616184927e17,-7.648880260507301e17,-7.653408904829676e17,-7.657937549152051e17,-7.662466193474426e17,-7.666994837796801e17,-7.671523482119174e17,-7.676052126441549e17,-7.680580770763924e17,-7.685109415086299e17,-7.689638059408673e17,-7.694166703731049e17,-7.698695348053423e17,-7.703223992375796e17,-7.707752636698172e17,-7.712281281020547e17,-7.716809925342921e17,-7.721338569665297e17,-7.725867213987671e17,-7.730395858310047e17,-7.73492450263242e17,-7.739453146954794e17,-7.74398179127717e17,-7.748510435599544e17,-7.753039079921919e17,-7.757567724244294e17,-7.762096368566669e17,-7.766625012889042e17,-7.771153657211418e17,-7.775682301533792e17,-7.780210945856168e17,-7.784739590178542e17,-7.789268234500916e17,-7.793796878823292e17,-7.798325523145664e17,-7.80285416746804e17,-7.807382811790415e17,-7.81191145611279e17,-7.816440100435164e17,-7.82096874475754e17,-7.825497389079914e17,-7.830026033402289e17,-7.834554677724663e17,-7.839083322047037e17,-7.843611966369413e17,-7.848140610691786e17,-7.852669255014162e17,-7.857197899336538e17,-7.861726543658911e17,-7.866255187981285e17,-7.870783832303661e17,-7.875312476626035e17,-7.87984112094841e17,-7.884369765270785e17,-7.88889840959316e17,-7.893427053915534e17,-7.897955698237907e17,-7.902484342560283e17,-7.907012986882659e17,-7.911541631205033e17,-7.916070275527407e17,-7.920598919849783e17,-7.925127564172156e17,-7.92965620849453e17,-7.934184852816906e17,-7.938713497139281e17,-7.943242141461656e17,-7.94777078578403e17,-7.952299430106405e17,-7.95682807442878e17,-7.961356718751153e17,-7.965885363073528e17,-7.970414007395904e17,-7.974942651718278e17,-7.979471296040653e17,-7.983999940363028e17,-7.988528584685402e17,-7.993057229007777e17,-7.99758587333015e17,-8.002114517652526e17,-8.006643161974902e17,-8.011171806297275e17,-8.01570045061965e17,-8.020229094942025e17,-8.0247577392644e17,-8.029286383586774e17,-8.03381502790915e17,-8.038343672231524e17,-8.042872316553898e17,-8.047400960876273e17,-8.051929605198647e17,-8.056458249521023e17,-8.060986893843396e17,-8.065515538165772e17,-8.070044182488147e17,-8.074572826810522e17,-8.079101471132896e17,-8.08363011545527e17,-8.088158759777645e17,-8.092687404100019e17,-8.097216048422394e17,-8.101744692744769e17,-8.106273337067145e17,-8.110801981389518e17,-8.115330625711892e17,-8.119859270034268e17,-8.124387914356641e17,-8.128916558679017e17,-8.133445203001393e17,-8.137973847323767e17,-8.142502491646141e17,-8.147031135968516e17,-8.15155978029089e17,-8.156088424613265e17,-8.160617068935639e17,-8.165145713258015e17,-8.16967435758039e17,-8.174203001902764e17,-8.178731646225139e17,-8.183260290547514e17,-8.187788934869888e17,-8.192317579192262e17,-8.196846223514637e17,-8.201374867837012e17,-8.205903512159387e17,-8.210432156481761e17,-8.214960800804136e17,-8.219489445126511e17,-8.224018089448884e17,-8.22854673377126e17,-8.233075378093636e17,-8.237604022416009e17,-8.242132666738385e17,-8.246661311060758e17,-8.251189955383133e17,-8.255718599705508e17,-8.260247244027882e17,-8.264775888350258e17,-8.269304532672634e17,-8.273833176995007e17,-8.278361821317381e17,-8.282890465639757e17,-8.28741910996213e17,-8.291947754284506e17,-8.29647639860688e17,-8.301005042929256e17,-8.30553368725163e17,-8.310062331574003e17,-8.314590975896379e17,-8.319119620218753e17,-8.323648264541128e17,-8.328176908863503e17,-8.332705553185879e17,-8.337234197508252e17,-8.341762841830627e17,-8.346291486153001e17,-8.350820130475377e17,-8.355348774797751e17,-8.359877419120125e17,-8.364406063442501e17,-8.368934707764876e17,-8.373463352087249e17,-8.377991996409624e17,-8.382520640732e17,-8.387049285054373e17,-8.391577929376749e17,-8.396106573699123e17,-8.400635218021498e17,-8.405163862343872e17,-8.409692506666246e17,-8.414221150988622e17,-8.418749795310996e17,-8.423278439633371e17,-8.427807083955747e17,-8.432335728278122e17,-8.436864372600494e17,-8.44139301692287e17,-8.445921661245244e17,-8.450450305567619e17,-8.454978949889994e17,-8.459507594212369e17,-8.464036238534744e17,-8.468564882857117e17,-8.473093527179492e17,-8.477622171501868e17,-8.482150815824242e17,-8.486679460146616e17,-8.491208104468992e17,-8.495736748791366e17,-8.50026539311374e17,-8.504794037436115e17,-8.50932268175849e17,-8.513851326080865e17,-8.51837997040324e17,-8.522908614725614e17,-8.52743725904799e17,-8.531965903370363e17,-8.536494547692737e17,-8.541023192015113e17,-8.545551836337487e17,-8.550080480659862e17,-8.554609124982237e17,-8.559137769304612e17,-8.563666413626985e17,-8.56819505794936e17,-8.572723702271735e17,-8.577252346594111e17,-8.581780990916485e17,-8.58630963523886e17,-8.590838279561235e17,-8.595366923883607e17,-8.599895568205983e17,-8.604424212528358e17,-8.608952856850733e17,-8.613481501173107e17,-8.618010145495483e17,-8.622538789817857e17,-8.627067434140232e17,-8.631596078462606e17,-8.63612472278498e17,-8.640653367107356e17,-8.645182011429729e17,-8.649710655752105e17,-8.65423930007448e17,-8.658767944396855e17,-8.663296588719228e17,-8.667825233041604e17,-8.672353877363978e17,-8.676882521686353e17,-8.681411166008728e17,-8.685939810331103e17,-8.690468454653478e17,-8.69499709897585e17,-8.699525743298226e17,-8.704054387620602e17,-8.708583031942976e17,-8.71311167626535e17,-8.717640320587726e17,-8.7221689649101e17,-8.726697609232474e17,-8.731226253554849e17,-8.735754897877224e17,-8.740283542199599e17,-8.744812186521974e17,-8.749340830844348e17,-8.753869475166724e17,-8.758398119489096e17,-8.762926763811471e17,-8.767455408133847e17,-8.771984052456221e17,-8.776512696778596e17,-8.781041341100972e17,-8.785569985423346e17,-8.79009862974572e17,-8.794627274068095e17,-8.799155918390469e17,-8.803684562712845e17,-8.808213207035218e17,-8.812741851357594e17,-8.817270495679969e17,-8.821799140002342e17,-8.826327784324717e17,-8.830856428647092e17,-8.835385072969467e17,-8.839913717291841e17,-8.844442361614217e17,-8.848971005936591e17,-8.853499650258966e17,-8.858028294581339e17,-8.862556938903715e17,-8.86708558322609e17,-8.871614227548465e17,-8.876142871870839e17,-8.880671516193215e17,-8.885200160515588e17,-8.889728804837962e17,-8.894257449160338e17,-8.898786093482712e17,-8.903314737805088e17,-8.907843382127461e17,-8.912372026449837e17,-8.916900670772211e17,-8.921429315094584e17,-8.92595795941696e17,-8.930486603739336e17,-8.93501524806171e17,-8.939543892384084e17,-8.94407253670646e17,-8.948601181028833e17,-8.953129825351209e17,-8.957658469673582e17,-8.962187113995958e17,-8.966715758318333e17,-8.971244402640707e17,-8.975773046963082e17,-8.980301691285457e17,-8.984830335607831e17,-8.989358979930205e17,-8.993887624252581e17,-8.998416268574956e17,-9.00294491289733e17,-9.007473557219704e17,-9.012002201542079e17,-9.016530845864454e17,-9.021059490186828e17,-9.025588134509203e17,-9.030116778831579e17,-9.034645423153953e17,-9.039174067476328e17,-9.043702711798702e17,-9.048231356121076e17,-9.052760000443451e17,-9.057288644765825e17,-9.061817289088201e17,-9.066345933410577e17,-9.07087457773295e17,-9.075403222055324e17,-9.0799318663777e17,-9.084460510700073e17,-9.088989155022449e17,-9.093517799344824e17,-9.098046443667199e17,-9.102575087989573e17,-9.107103732311946e17,-9.111632376634322e17,-9.116161020956696e17,-9.120689665279071e17,-9.125218309601446e17,-9.129746953923822e17,-9.134275598246195e17,-9.13880424256857e17,-9.143332886890945e17,-9.14786153121332e17,-9.152390175535694e17,-9.156918819858068e17,-9.161447464180444e17,-9.165976108502819e17,-9.170504752825193e17,-9.175033397147567e17,-9.179562041469943e17,-9.184090685792316e17,-9.188619330114692e17,-9.193147974437068e17,-9.197676618759441e17,-9.202205263081816e17,-9.20673390740419e17,-9.211262551726565e17,-9.21579119604894e17,-9.220319840371314e17,-9.22484848469369e17,-9.229377129016065e17,-9.233905773338438e17,-9.238434417660813e17,-9.242963061983188e17,-9.247491706305562e17,-9.252020350627937e17,-9.256548994950312e17,-9.261077639272687e17,-9.265606283595062e17,-9.270134927917435e17,-9.27466357223981e17,-9.279192216562185e17,-9.28372086088456e17,-9.288249505206935e17,-9.292778149529311e17,-9.297306793851684e17,-9.301835438174058e17,-9.306364082496433e17,-9.310892726818808e17,-9.315421371141183e17,-9.319950015463557e17,-9.324478659785933e17,-9.329007304108307e17,-9.33353594843068e17,-9.338064592753056e17,-9.342593237075432e17,-9.347121881397805e17,-9.35165052572018e17,-9.356179170042555e17,-9.360707814364929e17,-9.365236458687304e17,-9.369765103009678e17,-9.374293747332054e17,-9.378822391654428e17,-9.383351035976803e17,-9.387879680299178e17,-9.392408324621554e17,-9.396936968943926e17,-9.401465613266301e17,-9.405994257588676e17,-9.41052290191105e17,-9.415051546233426e17,-9.4195801905558e17,-9.424108834878176e17,-9.428637479200549e17,-9.433166123522924e17,-9.437694767845299e17,-9.442223412167674e17,-9.446752056490048e17,-9.451280700812424e17,-9.455809345134798e17,-9.460337989457171e17,-9.464866633779547e17,-9.469395278101921e17,-9.473923922424297e17,-9.478452566746671e17,-9.482981211069046e17,-9.487509855391421e17,-9.492038499713795e17,-9.496567144036169e17,-9.501095788358545e17,-9.505624432680919e17,-9.510153077003293e17,-9.514681721325669e17,-9.519210365648044e17,-9.523739009970417e17,-9.528267654292792e17,-9.532796298615167e17,-9.537324942937542e17,-9.541853587259917e17,-9.546382231582291e17,-9.550910875904667e17,-9.555439520227039e17,-9.559968164549414e17,-9.56449680887179e17,-9.569025453194164e17,-9.573554097516539e17,-9.578082741838915e17,-9.582611386161289e17,-9.587140030483663e17,-9.591668674806038e17,-9.596197319128412e17,-9.600725963450788e17,-9.605254607773161e17,-9.609783252095537e17,-9.614311896417912e17,-9.618840540740285e17,-9.62336918506266e17,-9.627897829385036e17,-9.63242647370741e17,-9.636955118029784e17,-9.64148376235216e17,-9.646012406674534e17,-9.650541050996909e17,-9.655069695319282e17,-9.659598339641658e17,-9.664126983964033e17,-9.668655628286408e17,-9.673184272608782e17,-9.677712916931158e17,-9.682241561253532e17,-9.686770205575905e17,-9.691298849898281e17,-9.695827494220655e17,-9.700356138543031e17,-9.704884782865404e17,-9.70941342718778e17,-9.713942071510156e17,-9.718470715832527e17,-9.722999360154903e17,-9.727528004477279e17,-9.732056648799653e17,-9.736585293122028e17,-9.741113937444403e17,-9.745642581766778e17,-9.750171226089152e17,-9.754699870411525e17,-9.759228514733901e17,-9.763757159056276e17,-9.76828580337865e17,-9.772814447701025e17,-9.777343092023401e17,-9.781871736345774e17,-9.786400380668148e17,-9.790929024990524e17,-9.795457669312899e17,-9.799986313635273e17,-9.804514957957647e17,-9.809043602280023e17,-9.813572246602397e17,-9.81810089092477e17,-9.822629535247146e17,-9.827158179569522e17,-9.831686823891896e17,-9.836215468214271e17,-9.840744112536646e17,-9.84527275685902e17,-9.849801401181394e17,-9.85433004550377e17,-9.858858689826144e17,-9.86338733414852e17,-9.867915978470893e17,-9.872444622793268e17,-9.876973267115643e17,-9.881501911438016e17,-9.886030555760392e17,-9.890559200082767e17,-9.895087844405142e17,-9.899616488727516e17,-9.904145133049892e17,-9.908673777372265e17,-9.91320242169464e17,-9.917731066017014e17,-9.92225971033939e17,-9.926788354661765e17,-9.931316998984138e17,-9.935845643306514e17,-9.940374287628888e17,-9.944902931951263e17,-9.949431576273637e17,-9.953960220596013e17,-9.958488864918387e17,-9.963017509240762e17,-9.967546153563136e17,-9.97207479788551e17,-9.976603442207886e17,-9.981132086530259e17,-9.985660730852635e17,-9.99018937517501e17,-9.994718019497384e17,-9.999246663819759e17,-1.0003775308142134e18,-1.0008303952464508e18,-1.0012832596786883e18,-1.0017361241109257e18,-1.0021889885431633e18,-1.0026418529754008e18,-1.0030947174076381e18,-1.0035475818398756e18,-1.0040004462721132e18,-1.0044533107043505e18,-1.004906175136588e18,-1.0053590395688256e18,-1.005811904001063e18,-1.0062647684333005e18,-1.0067176328655378e18,-1.0071704972977754e18,-1.0076233617300128e18,-1.0080762261622502e18,-1.0085290905944878e18,-1.0089819550267254e18,-1.0094348194589627e18,-1.0098876838912001e18,-1.0103405483234377e18,-1.0107934127556751e18,-1.0112462771879126e18,-1.01169914162015e18,-1.0121520060523876e18,-1.012604870484625e18,-1.0130577349168623e18,-1.0135105993490999e18,-1.0139634637813375e18,-1.0144163282135748e18,-1.0148691926458124e18,-1.0153220570780499e18,-1.0157749215102872e18,-1.0162277859425247e18,-1.0166806503747621e18,-1.0171335148069997e18,-1.0175863792392371e18,-1.0180392436714746e18,-1.0184921081037121e18,-1.0189449725359497e18,-1.019397836968187e18,-1.0198507014004244e18,-1.020303565832662e18,-1.0207564302648993e18,-1.0212092946971369e18,-1.0216621591293743e18,-1.0221150235616119e18,-1.0225678879938493e18,-1.0230207524260867e18,-1.0234736168583242e18,-1.0239264812905617e18,-1.0243793457227991e18,-1.0248322101550367e18,-1.0252850745872742e18,-1.0257379390195116e18,-1.026190803451749e18,-1.0266436678839864e18,-1.027096532316224e18,-1.0275493967484614e18,-1.0280022611806989e18,-1.0284551256129364e18,-1.0289079900451739e18,-1.0293608544774112e18,-1.0298137189096488e18,-1.0302665833418863e18,-1.0307194477741236e18,-1.0311723122063612e18,-1.0316251766385987e18,-1.0320780410708361e18,-1.0325309055030735e18,-1.032983769935311e18,-1.0334366343675485e18,-1.033889498799786e18,-1.0343423632320234e18,-1.034795227664261e18,-1.0352480920964986e18,-1.0357009565287357e18,-1.0361538209609733e18,-1.0366066853932108e18,-1.0370595498254482e18,-1.0375124142576858e18,-1.0379652786899232e18,-1.0384181431221608e18,-1.0388710075543981e18,-1.0393238719866355e18,-1.0397767364188731e18,-1.0402296008511105e18,-1.040682465283348e18,-1.0411353297155855e18,-1.041588194147823e18,-1.0420410585800603e18,-1.0424939230122979e18,-1.0429467874445353e18,-1.0433996518767729e18,-1.0438525163090103e18,-1.0443053807412477e18,-1.0447582451734853e18,-1.0452111096057226e18,-1.0456639740379601e18,-1.0461168384701976e18,-1.0465697029024351e18,-1.0470225673346725e18,-1.0474754317669101e18,-1.0479282961991475e18,-1.0483811606313848e18,-1.0488340250636224e18,-1.0492868894958598e18,-1.0497397539280974e18,-1.0501926183603348e18,-1.0506454827925723e18,-1.0510983472248099e18,-1.051551211657047e18,-1.0520040760892846e18,-1.0524569405215222e18,-1.0529098049537596e18,-1.053362669385997e18,-1.0538155338182346e18,-1.0542683982504721e18,-1.0547212626827095e18,-1.055174127114947e18,-1.0556269915471844e18,-1.056079855979422e18,-1.0565327204116593e18,-1.0569855848438968e18,-1.0574384492761344e18,-1.0578913137083717e18,-1.0583441781406092e18,-1.0587970425728467e18,-1.0592499070050842e18,-1.0597027714373216e18,-1.0601556358695592e18,-1.0606085003017966e18,-1.061061364734034e18,-1.0615142291662714e18,-1.0619670935985089e18,-1.0624199580307465e18,-1.062872822462984e18,-1.0633256868952214e18,-1.063778551327459e18,-1.0642314157596963e18,-1.0646842801919337e18,-1.0651371446241713e18,-1.0655900090564087e18,-1.0660428734886463e18,-1.0664957379208836e18,-1.0669486023531212e18,-1.0674014667853586e18,-1.0678543312175959e18,-1.0683071956498335e18,-1.068760060082071e18,-1.0692129245143085e18,-1.0696657889465459e18,-1.0701186533787835e18,-1.0705715178110209e18,-1.0710243822432584e18,-1.0714772466754957e18,-1.0719301111077332e18,-1.0723829755399708e18,-1.0728358399722081e18,-1.0732887044044457e18,-1.0737415688366833e18,-1.0741944332689206e18,-1.074647297701158e18,-1.0751001621333956e18,-1.075553026565633e18,-1.0760058909978705e18,-1.0764587554301079e18,-1.0769116198623455e18,-1.0773644842945829e18,-1.0778173487268202e18,-1.0782702131590578e18,-1.0787230775912954e18,-1.0791759420235328e18,-1.0796288064557702e18,-1.0800816708880078e18,-1.0805345353202451e18,-1.0809873997524826e18,-1.08144026418472e18,-1.0818931286169576e18,-1.0823459930491951e18,-1.0827988574814324e18,-1.08325172191367e18,-1.0837045863459075e18,-1.0841574507781448e18,-1.0846103152103823e18,-1.0850631796426199e18,-1.0855160440748573e18,-1.0859689085070948e18,-1.0864217729393322e18,-1.0868746373715697e18,-1.0873275018038072e18,-1.0877803662360445e18,-1.0882332306682821e18,-1.0886860951005197e18,-1.089138959532757e18,-1.0895918239649946e18,-1.090044688397232e18,-1.0904975528294694e18,-1.0909504172617069e18,-1.0914032816939443e18,-1.0918561461261819e18,-1.0923090105584193e18,-1.0927618749906568e18,-1.0932147394228942e18,-1.0936676038551318e18,-1.0941204682873691e18,-1.0945733327196067e18,-1.0950261971518442e18,-1.0954790615840815e18,-1.0959319260163191e18,-1.0963847904485564e18,-1.096837654880794e18,-1.0972905193130314e18,-1.0977433837452689e18,-1.0981962481775064e18,-1.098649112609744e18,-1.0991019770419813e18,-1.0995548414742188e18,-1.1000077059064563e18,-1.1004605703386936e18,-1.1009134347709312e18,-1.1013662992031686e18,-1.1018191636354062e18,-1.1022720280676436e18,-1.102724892499881e18,-1.1031777569321185e18,-1.103630621364356e18,-1.1040834857965934e18,-1.104536350228831e18,-1.1049892146610685e18,-1.1054420790933059e18,-1.1058949435255433e18,-1.1063478079577809e18,-1.1068006723900183e18,-1.1072535368222557e18,-1.1077064012544932e18,-1.1081592656867308e18,-1.1086121301189682e18,-1.1090649945512055e18,-1.1095178589834431e18,-1.1099707234156806e18,-1.110423587847918e18,-1.1108764522801555e18,-1.1113293167123931e18,-1.1117821811446304e18,-1.1122350455768678e18,-1.1126879100091053e18,-1.1131407744413428e18,-1.1135936388735803e18,-1.1140465033058177e18,-1.1144993677380553e18,-1.1149522321702929e18,-1.11540509660253e18,-1.1158579610347676e18,-1.1163108254670052e18,-1.1167636898992425e18,-1.11721655433148e18,-1.1176694187637175e18,-1.1181222831959551e18,-1.1185751476281924e18,-1.1190280120604298e18,-1.1194808764926674e18,-1.1199337409249048e18,-1.1203866053571423e18,-1.1208394697893798e18,-1.1212923342216174e18,-1.1217451986538547e18,-1.1221980630860922e18,-1.1226509275183296e18,-1.1231037919505672e18,-1.1235566563828046e18,-1.124009520815042e18,-1.1244623852472796e18,-1.124915249679517e18,-1.1253681141117544e18,-1.1258209785439919e18,-1.1262738429762295e18,-1.1267267074084668e18,-1.1271795718407044e18,-1.1276324362729418e18,-1.1280853007051793e18,-1.1285381651374167e18,-1.1289910295696541e18,-1.1294438940018917e18,-1.1298967584341292e18,-1.1303496228663666e18,-1.1308024872986042e18,-1.1312553517308417e18,-1.1317082161630789e18,-1.1321610805953165e18,-1.1326139450275539e18,-1.1330668094597914e18,-1.1335196738920289e18,-1.1339725383242664e18,-1.1344254027565039e18,-1.1348782671887412e18,-1.1353311316209787e18,-1.1357839960532163e18,-1.1362368604854537e18,-1.1366897249176911e18,-1.1371425893499287e18,-1.1375954537821661e18,-1.1380483182144035e18,-1.138501182646641e18,-1.1389540470788785e18,-1.139406911511116e18,-1.1398597759433535e18,-1.1403126403755909e18,-1.1407655048078285e18,-1.1412183692400658e18,-1.1416712336723032e18,-1.1421240981045408e18,-1.1425769625367782e18,-1.1430298269690157e18,-1.1434826914012532e18,-1.1439355558334907e18,-1.144388420265728e18,-1.1448412846979656e18,-1.145294149130203e18,-1.1457470135624406e18,-1.146199877994678e18,-1.1466527424269155e18,-1.147105606859153e18,-1.1475584712913902e18,-1.1480113357236278e18,-1.1484642001558653e18,-1.1489170645881028e18,-1.1493699290203402e18,-1.1498227934525778e18,-1.1502756578848152e18,-1.1507285223170527e18,-1.1511813867492901e18,-1.1516342511815276e18,-1.1520871156137651e18,-1.1525399800460024e18,-1.15299284447824e18,-1.1534457089104776e18,-1.153898573342715e18,-1.1543514377749524e18,-1.15480430220719e18,-1.1552571666394273e18,-1.155710031071665e18,-1.1561628955039025e18,-1.1566157599361398e18,-1.157068624368377e18,-1.1575214888006147e18,-1.1579743532328522e18,-1.1584272176650895e18,-1.158880082097327e18,-1.1593329465295647e18,-1.159785810961802e18,-1.1602386753940393e18,-1.1606915398262769e18,-1.1611444042585144e18,-1.1615972686907517e18,-1.1620501331229893e18,-1.162502997555227e18,-1.1629558619874644e18,-1.1634087264197018e18,-1.163861590851939e18,-1.1643144552841766e18,-1.1647673197164142e18,-1.1652201841486515e18,-1.165673048580889e18,-1.1661259130131267e18,-1.166578777445364e18,-1.1670316418776015e18,-1.1674845063098388e18,-1.1679373707420764e18,-1.168390235174314e18,-1.1688430996065513e18,-1.1692959640387889e18,-1.1697488284710262e18,-1.1702016929032637e18,-1.1706545573355013e18,-1.171107421767739e18,-1.1715602861999762e18,-1.1720131506322138e18,-1.172466015064451e18,-1.1729188794966886e18,-1.173371743928926e18,-1.1738246083611635e18,-1.174277472793401e18,-1.1747303372256384e18,-1.175183201657876e18,-1.1756360660901135e18,-1.1760889305223508e18,-1.1765417949545882e18,-1.1769946593868257e18,-1.1774475238190633e18,-1.1779003882513006e18,-1.1783532526835382e18,-1.1788061171157757e18,-1.1792589815480133e18,-1.1797118459802506e18,-1.180164710412488e18,-1.1806175748447255e18,-1.1810704392769628e18,-1.1815233037092004e18,-1.181976168141438e18,-1.1824290325736755e18,-1.182881897005913e18,-1.1833347614381501e18,-1.183787625870388e18,-1.1842404903026253e18,-1.1846933547348626e18,-1.1851462191671004e18,-1.1855990835993375e18,-1.186051948031575e18,-1.1865048124638126e18,-1.1869576768960502e18,-1.1874105413282877e18,-1.187863405760525e18,-1.1883162701927624e18,-1.188769134625e18,-1.1892219990572375e18,-1.1896748634894748e18,-1.1901277279217126e18,-1.1905805923539497e18,-1.191033456786187e18,-1.1914863212184248e18,-1.1919391856506621e18,-1.1923920500828997e18,-1.1928449145151373e18,-1.1932977789473746e18,-1.1937506433796122e18,-1.1942035078118495e18,-1.194656372244087e18,-1.1951092366763246e18,-1.195562101108562e18,-1.1960149655407992e18,-1.196467829973037e18,-1.1969206944052744e18,-1.1973735588375117e18,-1.1978264232697495e18,-1.1982792877019866e18,-1.1987321521342244e18,-1.1991850165664617e18,-1.1996378809986993e18,-1.2000907454309368e18,-1.200543609863174e18,-1.2009964742954115e18,-1.201449338727649e18,-1.2019022031598866e18,-1.202355067592124e18,-1.2028079320243617e18,-1.2032607964565988e18,-1.203713660888836e18,-1.204166525321074e18,-1.2046193897533112e18,-1.205072254185549e18,-1.205525118617786e18,-1.2059779830500237e18,-1.2064308474822612e18,-1.2068837119144986e18,-1.207336576346736e18,-1.2077894407789737e18,-1.208242305211211e18,-1.2086951696434483e18,-1.2091480340756861e18,-1.2096008985079235e18,-1.210053762940161e18,-1.2105066273723983e18,-1.2109594918046356e18,-1.2114123562368735e18,-1.2118652206691108e18,-1.2123180851013484e18,-1.212770949533586e18,-1.213223813965823e18,-1.2136766783980605e18,-1.214129542830298e18,-1.2145824072625357e18,-1.2150352716947732e18,-1.2154881361270106e18,-1.215941000559248e18,-1.2163938649914854e18,-1.216846729423723e18,-1.2172995938559603e18,-1.2177524582881981e18,-1.2182053227204352e18,-1.2186581871526728e18,-1.2191110515849103e18,-1.2195639160171476e18,-1.2200167804493852e18,-1.2204696448816225e18,-1.22092250931386e18,-1.2213753737460977e18,-1.2218282381783352e18,-1.2222811026105725e18,-1.22273396704281e18,-1.2231868314750474e18,-1.2236396959072847e18,-1.2240925603395226e18,-1.2245454247717599e18,-1.2249982892039974e18,-1.2254511536362348e18,-1.225904018068472e18,-1.22635688250071e18,-1.2268097469329472e18,-1.2272626113651848e18,-1.2277154757974223e18,-1.2281683402296596e18,-1.228621204661897e18,-1.2290740690941345e18,-1.229526933526372e18,-1.2299797979586094e18,-1.230432662390847e18,-1.2308855268230843e18,-1.231338391255322e18,-1.2317912556875594e18,-1.2322441201197967e18,-1.2326969845520346e18,-1.2331498489842716e18,-1.2336027134165092e18,-1.2340555778487468e18,-1.2345084422809843e18,-1.2349613067132216e18,-1.235414171145459e18,-1.2358670355776965e18,-1.2363199000099338e18,-1.2367727644421716e18,-1.237225628874409e18,-1.2376784933066468e18,-1.2381313577388838e18,-1.2385842221711212e18,-1.239037086603359e18,-1.2394899510355963e18,-1.2399428154678339e18,-1.2403956799000712e18,-1.2408485443323087e18,-1.241301408764546e18,-1.2417542731967836e18,-1.2422071376290212e18,-1.2426600020612588e18,-1.243112866493496e18,-1.2435657309257334e18,-1.2440185953579712e18,-1.2444714597902085e18,-1.2449243242224458e18,-1.2453771886546834e18,-1.2458300530869207e18,-1.2462829175191583e18,-1.2467357819513958e18,-1.2471886463836334e18,-1.2476415108158707e18,-1.248094375248108e18,-1.2485472396803456e18,-1.2490001041125832e18,-1.2494529685448207e18,-1.249905832977058e18,-1.2503586974092956e18,-1.250811561841533e18,-1.2512644262737705e18,-1.251717290706008e18,-1.2521701551382454e18,-1.252623019570483e18,-1.2530758840027203e18,-1.2535287484349578e18,-1.2539816128671954e18,-1.254434477299433e18,-1.2548873417316703e18,-1.2553402061639076e18,-1.2557930705961452e18,-1.2562459350283825e18,-1.2566987994606203e18,-1.2571516638928576e18,-1.2576045283250952e18,-1.2580573927573325e18,-1.2585102571895698e18,-1.2589631216218076e18,-1.259415986054045e18,-1.2598688504862825e18,-1.2603217149185198e18,-1.2607745793507574e18,-1.2612274437829947e18,-1.2616803082152323e18,-1.2621331726474698e18,-1.2625860370797071e18,-1.2630389015119447e18,-1.263491765944182e18,-1.2639446303764196e18,-1.2643974948086572e18,-1.2648503592408945e18,-1.265303223673132e18,-1.2657560881053693e18,-1.266208952537607e18,-1.2666618169698445e18,-1.267114681402082e18,-1.2675675458343194e18,-1.2680204102665567e18,-1.2684732746987942e18,-1.2689261391310316e18,-1.2693790035632694e18,-1.2698318679955067e18,-1.2702847324277443e18,-1.2707375968599816e18,-1.271190461292219e18,-1.2716433257244567e18,-1.272096190156694e18,-1.2725490545889316e18,-1.273001919021169e18,-1.2734547834534065e18,-1.2739076478856438e18,-1.2743605123178813e18,-1.274813376750119e18,-1.275266241182356e18,-1.2757191056145938e18,-1.276171970046831e18,-1.276624834479069e18,-1.2770776989113062e18,-1.2775305633435436e18,-1.277983427775781e18,-1.2784362922080184e18,-1.278889156640256e18,-1.2793420210724936e18,-1.2797948855047311e18,-1.2802477499369684e18,-1.2807006143692058e18,-1.2811534788014433e18,-1.281606343233681e18,-1.2820592076659185e18,-1.2825120720981558e18,-1.2829649365303933e18,-1.2834178009626307e18,-1.283870665394868e18,-1.2843235298271058e18,-1.284776394259343e18,-1.2852292586915807e18,-1.285682123123818e18,-1.2861349875560556e18,-1.286587851988293e18,-1.2870407164205304e18,-1.287493580852768e18,-1.2879464452850053e18,-1.288399309717243e18,-1.2888521741494802e18,-1.289305038581718e18,-1.2897579030139553e18,-1.2902107674461926e18,-1.2906636318784302e18,-1.2911164963106675e18,-1.2915693607429053e18,-1.2920222251751427e18,-1.2924750896073802e18,-1.2929279540396175e18,-1.2933808184718548e18,-1.2938336829040924e18,-1.29428654733633e18,-1.2947394117685676e18,-1.2951922762008049e18,-1.2956451406330424e18,-1.2960980050652797e18,-1.296550869497517e18,-1.297003733929755e18,-1.2974565983619922e18,-1.2979094627942298e18,-1.298362327226467e18,-1.2988151916587046e18,-1.2992680560909422e18,-1.2997209205231795e18,-1.300173784955417e18,-1.3006266493876544e18,-1.301079513819892e18,-1.3015323782521293e18,-1.301985242684367e18,-1.3024381071166044e18,-1.3028909715488415e18,-1.3033438359810793e18,-1.3037967004133166e18,-1.3042495648455544e18,-1.3047024292777917e18,-1.3051552937100293e18,-1.3056081581422666e18,-1.306061022574504e18,-1.3065138870067415e18,-1.306966751438979e18,-1.3074196158712166e18,-1.3078724803034537e18,-1.3083253447356915e18,-1.3087782091679288e18,-1.3092310736001664e18,-1.309683938032404e18,-1.3101368024646413e18,-1.3105896668968788e18,-1.3110425313291162e18,-1.3114953957613537e18,-1.3119482601935913e18,-1.3124011246258286e18,-1.312853989058066e18,-1.3133068534903035e18,-1.313759717922541e18,-1.3142125823547786e18,-1.3146654467870162e18,-1.3151183112192535e18,-1.3155711756514908e18,-1.3160240400837284e18,-1.3164769045159657e18,-1.3169297689482035e18,-1.3173826333804408e18,-1.3178354978126781e18,-1.3182883622449157e18,-1.318741226677153e18,-1.3191940911093908e18,-1.3196469555416282e18,-1.3200998199738657e18,-1.320552684406103e18,-1.3210055488383406e18,-1.321458413270578e18,-1.3219112777028155e18,-1.322364142135053e18,-1.32281700656729e18,-1.323269870999528e18,-1.3237227354317652e18,-1.3241755998640028e18,-1.3246284642962404e18,-1.3250813287284777e18,-1.3255341931607153e18,-1.3259870575929526e18,-1.3264399220251901e18,-1.3268927864574277e18,-1.3273456508896653e18,-1.3277985153219023e18,-1.32825137975414e18,-1.3287042441863775e18,-1.3291571086186148e18,-1.3296099730508526e18,-1.33006283748309e18,-1.3305157019153275e18,-1.3309685663475648e18,-1.331421430779802e18,-1.33187429521204e18,-1.3323271596442772e18,-1.3327800240765146e18,-1.3332328885087521e18,-1.3336857529409897e18,-1.334138617373227e18,-1.3345914818054646e18,-1.3350443462377021e18,-1.3354972106699392e18,-1.335950075102177e18,-1.3364029395344143e18,-1.3368558039666522e18,-1.3373086683988895e18,-1.3377615328311265e18,-1.3382143972633644e18,-1.3386672616956017e18,-1.3391201261278392e18,-1.3395729905600768e18,-1.3400258549923144e18,-1.3404787194245514e18,-1.340931583856789e18,-1.3413844482890266e18,-1.341837312721264e18,-1.3422901771535017e18,-1.3427430415857388e18,-1.3431959060179766e18,-1.343648770450214e18,-1.3441016348824512e18,-1.344554499314689e18,-1.3450073637469263e18,-1.3454602281791636e18,-1.3459130926114012e18,-1.3463659570436388e18,-1.3468188214758764e18,-1.3472716859081137e18,-1.347724550340351e18,-1.3481774147725885e18,-1.348630279204826e18,-1.3490831436370634e18,-1.3495360080693012e18,-1.3499888725015386e18,-1.3504417369337756e18,-1.3508946013660134e18,-1.3513474657982508e18,-1.3518003302304883e18,-1.352253194662726e18,-1.3527060590949632e18,-1.3531589235272008e18,-1.3536117879594383e18,-1.3540646523916756e18,-1.3545175168239132e18,-1.3549703812561508e18,-1.3554232456883878e18,-1.3558761101206257e18,-1.356328974552863e18,-1.3567818389851005e18,-1.357234703417338e18,-1.3576875678495752e18,-1.358140432281813e18,-1.3585932967140503e18,-1.3590461611462879e18,-1.3594990255785254e18,-1.359951890010763e18,-1.360404754443e18,-1.3608576188752376e18,-1.3613104833074752e18,-1.3617633477397125e18,-1.3622162121719503e18,-1.3626690766041874e18,-1.3631219410364252e18,-1.3635748054686625e18,-1.3640276699008998e18,-1.3644805343331377e18,-1.364933398765375e18,-1.3653862631976123e18,-1.3658391276298499e18,-1.3662919920620874e18,-1.3667448564943247e18,-1.3671977209265623e18,-1.3676505853587996e18,-1.368103449791037e18,-1.3685563142232748e18,-1.369009178655512e18,-1.36946204308775e18,-1.3699149075199872e18,-1.3703677719522243e18,-1.370820636384462e18,-1.3712735008166994e18,-1.371726365248937e18,-1.3721792296811745e18,-1.3726320941134118e18,-1.3730849585456492e18,-1.3735378229778867e18,-1.3739906874101243e18,-1.3744435518423619e18,-1.3748964162745994e18,-1.3753492807068365e18,-1.3758021451390743e18,-1.3762550095713116e18,-1.376707874003549e18,-1.3771607384357868e18,-1.3776136028680238e18,-1.3780664673002614e18,-1.378519331732499e18,-1.3789721961647365e18,-1.379425060596974e18,-1.3798779250292114e18,-1.3803307894614487e18,-1.3807836538936863e18,-1.3812365183259238e18,-1.3816893827581612e18,-1.382142247190399e18,-1.382595111622636e18,-1.3830479760548733e18,-1.3835008404871112e18,-1.3839537049193485e18,-1.384406569351586e18,-1.3848594337838236e18,-1.385312298216061e18,-1.3857651626482985e18,-1.3862180270805358e18,-1.3866708915127734e18,-1.387123755945011e18,-1.3875766203772483e18,-1.3880294848094856e18,-1.3884823492417234e18,-1.3889352136739607e18,-1.389388078106198e18,-1.3898409425384358e18,-1.390293806970673e18,-1.3907466714029107e18,-1.391199535835148e18,-1.3916524002673856e18,-1.3921052646996232e18,-1.3925581291318602e18,-1.3930109935640978e18,-1.3934638579963354e18,-1.393916722428573e18,-1.3943695868608102e18,-1.394822451293048e18,-1.395275315725285e18,-1.3957281801575224e18,-1.3961810445897603e18,-1.3966339090219976e18,-1.3970867734542354e18,-1.3975396378864724e18,-1.39799250231871e18,-1.3984453667509476e18,-1.398898231183185e18,-1.3993510956154225e18,-1.39980396004766e18,-1.4002568244798973e18,-1.4007096889121347e18,-1.4011625533443725e18,-1.4016154177766098e18,-1.4020682822088474e18,-1.4025211466410847e18,-1.402974011073322e18,-1.4034268755055598e18,-1.403879739937797e18,-1.4043326043700347e18,-1.4047854688022723e18,-1.4052383332345093e18,-1.405691197666747e18,-1.4061440620989844e18,-1.406596926531222e18,-1.4070497909634596e18,-1.407502655395697e18,-1.4079555198279342e18,-1.4084083842601718e18,-1.4088612486924093e18,-1.4093141131246467e18,-1.4097669775568845e18,-1.4102198419891215e18,-1.410672706421359e18,-1.4111255708535967e18,-1.411578435285834e18,-1.4120312997180716e18,-1.4124841641503089e18,-1.4129370285825464e18,-1.413389893014784e18,-1.4138427574470216e18,-1.414295621879259e18,-1.4147484863114964e18,-1.4152013507437338e18,-1.415654215175971e18,-1.416107079608209e18,-1.4165599440404462e18,-1.4170128084726838e18,-1.417465672904921e18,-1.4179185373371584e18,-1.4183714017693962e18,-1.4188242662016335e18,-1.419277130633871e18,-1.4197299950661087e18,-1.420182859498346e18,-1.4206357239305833e18,-1.4210885883628209e18,-1.4215414527950584e18,-1.4219943172272957e18,-1.4224471816595333e18,-1.4229000460917706e18,-1.4233529105240084e18,-1.4238057749562458e18,-1.424258639388483e18,-1.424711503820721e18,-1.425164368252958e18,-1.4256172326851955e18,-1.426070097117433e18,-1.4265229615496707e18,-1.426975825981908e18,-1.4274286904141453e18,-1.4278815548463828e18,-1.4283344192786202e18,-1.428787283710858e18,-1.4292401481430953e18,-1.429693012575333e18,-1.4301458770075702e18,-1.4305987414398075e18,-1.4310516058720453e18,-1.4315044703042826e18,-1.4319573347365202e18,-1.4324101991687575e18,-1.432863063600995e18,-1.4333159280332324e18,-1.43376879246547e18,-1.4342216568977075e18,-1.434674521329945e18,-1.4351273857621824e18,-1.4355802501944197e18,-1.4360331146266575e18,-1.4364859790588948e18,-1.4369388434911322e18,-1.4373917079233697e18,-1.437844572355607e18,-1.4382974367878446e18,-1.4387503012200822e18,-1.4392031656523197e18,-1.439656030084557e18,-1.4401088945167944e18,-1.440561758949032e18,-1.4410146233812695e18,-1.441467487813507e18,-1.4419203522457444e18,-1.442373216677982e18,-1.4428260811102193e18,-1.4432789455424566e18,-1.4437318099746944e18,-1.4441846744069317e18,-1.4446375388391693e18,-1.4450904032714066e18,-1.4455432677036442e18,-1.4459961321358817e18,-1.446448996568119e18,-1.4469018610003566e18,-1.447354725432594e18,-1.4478075898648315e18,-1.4482604542970688e18,-1.4487133187293066e18,-1.449166183161544e18,-1.4496190475937812e18,-1.4500719120260188e18,-1.4505247764582561e18,-1.450977640890494e18,-1.4514305053227313e18,-1.4518833697549688e18,-1.4523362341872061e18,-1.4527890986194435e18,-1.453241963051681e18,-1.4536948274839186e18,-1.4541476919161562e18,-1.4546005563483935e18,-1.455053420780631e18,-1.4555062852128684e18,-1.455959149645106e18,-1.4564120140773435e18,-1.4568648785095808e18,-1.4573177429418184e18,-1.4577706073740557e18,-1.4582234718062932e18,-1.4586763362385308e18,-1.4591292006707684e18,-1.4595820651030057e18,-1.460034929535243e18,-1.4604877939674806e18,-1.460940658399718e18,-1.4613935228319557e18,-1.461846387264193e18,-1.4622992516964306e18,-1.462752116128668e18,-1.4632049805609052e18,-1.463657844993143e18,-1.4641107094253804e18,-1.464563573857618e18,-1.4650164382898552e18,-1.4654693027220928e18,-1.46592216715433e18,-1.4663750315865677e18,-1.4668278960188052e18,-1.4672807604510423e18,-1.4677336248832801e18,-1.4681864893155174e18,-1.4686393537477553e18,-1.4690922181799926e18,-1.46954508261223e18,-1.4699979470444675e18,-1.4704508114767048e18,-1.4709036759089423e18,-1.47135654034118e18,-1.4718094047734175e18,-1.4722622692056545e18,-1.472715133637892e18,-1.4731679980701297e18,-1.4736208625023672e18,-1.4740737269346048e18,-1.474526591366842e18,-1.4749794557990797e18,-1.475432320231317e18,-1.4758851846635543e18,-1.476338049095792e18,-1.4767909135280294e18,-1.4772437779602668e18,-1.4776966423925043e18,-1.478149506824742e18,-1.4786023712569795e18,-1.4790552356892168e18,-1.4795081001214543e18,-1.4799609645536916e18,-1.4804138289859292e18,-1.4808666934181665e18,-1.4813195578504044e18,-1.4817724222826417e18,-1.4822252867148787e18,-1.4826781511471165e18,-1.4831310155793539e18,-1.4835838800115914e18,-1.484036744443829e18,-1.4844896088760666e18,-1.484942473308304e18,-1.4853953377405412e18,-1.4858482021727788e18,-1.4863010666050163e18,-1.486753931037254e18,-1.487206795469491e18,-1.4876596599017288e18,-1.488112524333966e18,-1.4885653887662034e18,-1.4890182531984412e18,-1.4894711176306785e18,-1.489923982062916e18,-1.4903768464951534e18,-1.490829710927391e18,-1.4912825753596285e18,-1.4917354397918659e18,-1.4921883042241032e18,-1.4926411686563407e18,-1.4930940330885783e18,-1.4935468975208156e18,-1.4939997619530534e18,-1.4944526263852908e18,-1.4949054908175278e18,-1.4953583552497656e18,-1.495811219682003e18,-1.4962640841142408e18,-1.496716948546478e18,-1.4971698129787154e18,-1.497622677410953e18,-1.4980755418431903e18,-1.4985284062754278e18,-1.4989812707076654e18,-1.499434135139903e18,-1.49988699957214e18,-1.5003398640043779e18,-1.5007927284366152e18,-1.5012455928688527e18,-1.5016984573010903e18,-1.5021513217333274e18,-1.5026041861655652e18,-1.5030570505978025e18,-1.50350991503004e18,-1.5039627794622776e18,-1.504415643894515e18,-1.5048685083267523e18,-1.5053213727589898e18,-1.5057742371912274e18,-1.506227101623465e18,-1.5066799660557025e18,-1.5071328304879398e18,-1.5075856949201772e18,-1.5080385593524147e18,-1.508491423784652e18,-1.5089442882168899e18,-1.5093971526491272e18,-1.5098500170813645e18,-1.510302881513602e18,-1.5107557459458394e18,-1.5112086103780772e18,-1.5116614748103145e18,-1.512114339242552e18,-1.5125672036747894e18,-1.513020068107027e18,-1.5134729325392643e18,-1.5139257969715018e18,-1.5143786614037394e18,-1.5148315258359764e18,-1.5152843902682143e18,-1.5157372547004516e18,-1.5161901191326892e18,-1.5166429835649267e18,-1.517095847997164e18,-1.5175487124294016e18,-1.518001576861639e18,-1.5184544412938765e18,-1.518907305726114e18,-1.5193601701583516e18,-1.5198130345905887e18,-1.5202658990228262e18,-1.5207187634550638e18,-1.521171627887301e18,-1.521624492319539e18,-1.5220773567517763e18,-1.5225302211840138e18,-1.5229830856162511e18,-1.5234359500484884e18,-1.5238888144807263e18,-1.5243416789129636e18,-1.524794543345201e18,-1.5252474077774385e18,-1.525700272209676e18,-1.5261531366419133e18,-1.526606001074151e18,-1.5270588655063885e18,-1.5275117299386255e18,-1.5279645943708634e18,-1.5284174588031007e18,-1.5288703232353385e18,-1.5293231876675758e18,-1.5297760520998129e18,-1.5302289165320507e18,-1.530681780964288e18,-1.5311346453965256e18,-1.5315875098287631e18,-1.5320403742610007e18,-1.5324932386932378e18,-1.5329461031254753e18,-1.533398967557713e18,-1.5338518319899505e18,-1.534304696422188e18,-1.534757560854425e18,-1.535210425286663e18,-1.5356632897189002e18,-1.5361161541511375e18,-1.5365690185833754e18,-1.5370218830156127e18,-1.53747474744785e18,-1.5379276118800876e18,-1.538380476312325e18,-1.5388333407445627e18,-1.5392862051768e18,-1.5397390696090373e18,-1.540191934041275e18,-1.5406447984735124e18,-1.5410976629057498e18,-1.5415505273379876e18,-1.542003391770225e18,-1.542456256202462e18,-1.5429091206346998e18,-1.543361985066937e18,-1.5438148494991747e18,-1.5442677139314122e18,-1.5447205783636495e18,-1.545173442795887e18,-1.5456263072281244e18,-1.546079171660362e18,-1.5465320360925996e18,-1.546984900524837e18,-1.5474377649570742e18,-1.547890629389312e18,-1.5483434938215493e18,-1.5487963582537866e18,-1.5492492226860244e18,-1.5497020871182615e18,-1.5501549515504993e18,-1.5506078159827366e18,-1.5510606804149742e18,-1.5515135448472118e18,-1.551966409279449e18,-1.5524192737116864e18,-1.552872138143924e18,-1.5533250025761615e18,-1.5537778670083988e18,-1.5542307314406367e18,-1.5546835958728737e18,-1.555136460305111e18,-1.5555893247373489e18,-1.5560421891695862e18,-1.556495053601824e18,-1.5569479180340613e18,-1.5574007824662986e18,-1.5578536468985362e18,-1.5583065113307738e18,-1.558759375763011e18,-1.5592122401952486e18,-1.559665104627486e18,-1.5601179690597233e18,-1.560570833491961e18,-1.5610236979241984e18,-1.5614765623564362e18,-1.5619294267886735e18,-1.5623822912209106e18,-1.5628351556531484e18,-1.5632880200853857e18,-1.5637408845176233e18,-1.5641937489498609e18,-1.5646466133820982e18,-1.5650994778143355e18,-1.565552342246573e18,-1.5660052066788106e18,-1.5664580711110482e18,-1.5669109355432858e18,-1.5673637999755228e18,-1.5678166644077606e18,-1.568269528839998e18,-1.5687223932722353e18,-1.569175257704473e18,-1.5696281221367101e18,-1.5700809865689477e18,-1.5705338510011853e18,-1.5709867154334228e18,-1.5714395798656604e18,-1.5718924442978977e18,-1.572345308730135e18,-1.5727981731623726e18,-1.5732510375946102e18,-1.5737039020268475e18,-1.5741567664590853e18,-1.5746096308913224e18,-1.5750624953235597e18,-1.5755153597557975e18,-1.5759682241880348e18,-1.5764210886202724e18,-1.57687395305251e18,-1.5773268174847473e18,-1.5777796819169848e18,-1.5782325463492221e18,-1.5786854107814597e18,-1.5791382752136973e18,-1.5795911396459346e18,-1.580044004078172e18,-1.5804968685104097e18,-1.580949732942647e18,-1.5814025973748844e18,-1.5818554618071222e18,-1.5823083262393592e18,-1.582761190671597e18,-1.5832140551038344e18,-1.583666919536072e18,-1.5841197839683095e18,-1.5845726484005466e18,-1.5850255128327841e18,-1.5854783772650217e18,-1.5859312416972593e18,-1.5863841061294966e18,-1.5868369705617344e18,-1.5872898349939715e18,-1.5877426994262088e18,-1.5881955638584466e18,-1.588648428290684e18,-1.5891012927229217e18,-1.5895541571551588e18,-1.5900070215873964e18,-1.590459886019634e18,-1.5909127504518712e18,-1.5913656148841088e18,-1.5918184793163464e18,-1.5922713437485837e18,-1.592724208180821e18,-1.5931770726130588e18,-1.593629937045296e18,-1.5940828014775337e18,-1.594535665909771e18,-1.5949885303420083e18,-1.5954413947742461e18,-1.5958942592064835e18,-1.596347123638721e18,-1.5967999880709586e18,-1.5972528525031956e18,-1.5977057169354332e18,-1.5981585813676708e18,-1.5986114457999084e18,-1.599064310232146e18,-1.5995171746643832e18,-1.5999700390966205e18,-1.600422903528858e18,-1.6008757679610957e18,-1.601328632393333e18,-1.6017814968255708e18,-1.602234361257808e18,-1.6026872256900454e18,-1.603140090122283e18,-1.6035929545545203e18,-1.604045818986758e18,-1.6044986834189952e18,-1.6049515478512328e18,-1.6054044122834703e18,-1.605857276715708e18,-1.6063101411479452e18,-1.6067630055801828e18,-1.60721587001242e18,-1.6076687344446574e18,-1.6081215988768952e18,-1.6085744633091325e18,-1.60902732774137e18,-1.6094801921736074e18,-1.6099330566058447e18,-1.6103859210380826e18,-1.6108387854703199e18,-1.6112916499025574e18,-1.611744514334795e18,-1.6121973787670323e18,-1.6126502431992696e18,-1.6131031076315072e18,-1.6135559720637448e18,-1.614008836495982e18,-1.6144617009282196e18,-1.614914565360457e18,-1.6153674297926948e18,-1.615820294224932e18,-1.6162731586571694e18,-1.6167260230894072e18,-1.6171788875216443e18,-1.6176317519538819e18,-1.6180846163861194e18,-1.618537480818357e18,-1.6189903452505943e18,-1.6194432096828316e18,-1.6198960741150692e18,-1.6203489385473065e18,-1.6208018029795443e18,-1.6212546674117816e18,-1.6217075318440195e18,-1.6221603962762565e18,-1.6226132607084938e18,-1.6230661251407316e18,-1.623518989572969e18,-1.6239718540052065e18,-1.6244247184374438e18,-1.6248775828696814e18,-1.6253304473019187e18,-1.6257833117341563e18,-1.6262361761663939e18,-1.6266890405986314e18,-1.6271419050308687e18,-1.627594769463106e18,-1.6280476338953439e18,-1.6285004983275812e18,-1.6289533627598185e18,-1.629406227192056e18,-1.6298590916242934e18,-1.630311956056531e18,-1.6307648204887685e18,-1.631217684921006e18,-1.6316705493532434e18,-1.6321234137854807e18,-1.6325762782177183e18,-1.6330291426499558e18,-1.6334820070821934e18,-1.6339348715144307e18,-1.6343877359466683e18,-1.6348406003789056e18,-1.635293464811143e18,-1.6357463292433807e18,-1.636199193675618e18,-1.6366520581078556e18,-1.637104922540093e18,-1.6375577869723305e18,-1.638010651404568e18,-1.6384635158368054e18,-1.638916380269043e18,-1.6393692447012803e18,-1.6398221091335178e18,-1.6402749735657551e18,-1.640727837997993e18,-1.6411807024302303e18,-1.6416335668624676e18,-1.6420864312947052e18,-1.6425392957269425e18,-1.6429921601591803e18,-1.6434450245914176e18,-1.6438978890236552e18,-1.6443507534558925e18,-1.6448036178881298e18,-1.6452564823203674e18,-1.645709346752605e18,-1.6461622111848425e18,-1.6466150756170798e18,-1.6470679400493174e18,-1.6475208044815547e18,-1.647973668913792e18,-1.6484265333460298e18,-1.6488793977782671e18,-1.6493322622105047e18,-1.649785126642742e18,-1.6502379910749796e18,-1.6506908555072172e18,-1.6511437199394545e18,-1.651596584371692e18,-1.6520494488039293e18,-1.652502313236167e18,-1.6529551776684042e18,-1.653408042100642e18,-1.6538609065328794e18,-1.6543137709651167e18,-1.6547666353973542e18,-1.6552194998295916e18,-1.6556723642618294e18,-1.6561252286940667e18,-1.6565780931263043e18,-1.6570309575585416e18,-1.657483821990779e18,-1.6579366864230164e18,-1.658389550855254e18,-1.6588424152874916e18,-1.6592952797197286e18,-1.6597481441519665e18,-1.6602010085842038e18,-1.6606538730164416e18,-1.661106737448679e18,-1.6615596018809162e18,-1.6620124663131538e18,-1.662465330745391e18,-1.6629181951776287e18,-1.6633710596098662e18,-1.6638239240421038e18,-1.6642767884743409e18,-1.6647296529065784e18,-1.665182517338816e18,-1.6656353817710536e18,-1.6660882462032911e18,-1.6665411106355284e18,-1.666993975067766e18,-1.6674468395000033e18,-1.6678997039322406e18,-1.6683525683644785e18,-1.6688054327967158e18,-1.669258297228953e18,-1.6697111616611907e18,-1.6701640260934282e18,-1.6706168905256658e18,-1.671069754957903e18,-1.6715226193901407e18,-1.671975483822378e18,-1.6724283482546156e18,-1.6728812126868529e18,-1.6733340771190907e18,-1.673786941551328e18,-1.674239805983565e18,-1.674692670415803e18,-1.6751455348480402e18,-1.6755983992802778e18,-1.6760512637125153e18,-1.676504128144753e18,-1.6769569925769902e18,-1.6774098570092275e18,-1.677862721441465e18,-1.6783155858737027e18,-1.6787684503059402e18,-1.6792213147381773e18,-1.679674179170415e18,-1.6801270436026524e18,-1.6805799080348897e18,-1.6810327724671276e18,-1.6814856368993649e18,-1.6819385013316024e18,-1.6823913657638397e18,-1.6828442301960773e18,-1.683297094628315e18,-1.6837499590605522e18,-1.6842028234927895e18,-1.684655687925027e18,-1.6851085523572646e18,-1.685561416789502e18,-1.6860142812217398e18,-1.686467145653977e18,-1.6869200100862141e18,-1.687372874518452e18,-1.6878257389506893e18,-1.688278603382927e18,-1.6887314678151644e18,-1.6891843322474017e18,-1.6896371966796393e18,-1.6900900611118766e18,-1.6905429255441142e18,-1.6909957899763517e18,-1.6914486544085893e18,-1.6919015188408264e18,-1.6923543832730642e18,-1.6928072477053015e18,-1.693260112137539e18,-1.6937129765697766e18,-1.6941658410020137e18,-1.6946187054342515e18,-1.6950715698664888e18,-1.6955244342987264e18,-1.695977298730964e18,-1.6964301631632013e18,-1.6968830275954386e18,-1.6973358920276762e18,-1.6977887564599137e18,-1.6982416208921513e18,-1.6986944853243889e18,-1.699147349756626e18,-1.6996002141888635e18,-1.700053078621101e18,-1.7005059430533384e18,-1.7009588074855762e18,-1.7014116719178135e18,-1.7018645363500508e18,-1.7023174007822884e18,-1.7027702652145257e18,-1.7032231296467635e18,-1.7036759940790008e18,-1.7041288585112381e18,-1.7045817229434757e18,-1.7050345873757133e18,-1.7054874518079506e18,-1.7059403162401882e18,-1.7063931806724257e18,-1.7068460451046628e18,-1.7072989095369006e18,-1.707751773969138e18,-1.7082046384013755e18,-1.708657502833613e18,-1.70911036726585e18,-1.709563231698088e18,-1.7100160961303252e18,-1.7104689605625628e18,-1.7109218249948004e18,-1.711374689427038e18,-1.711827553859275e18,-1.7122804182915126e18,-1.7127332827237501e18,-1.7131861471559875e18,-1.7136390115882253e18,-1.7140918760204623e18,-1.7145447404527002e18,-1.7149976048849375e18,-1.7154504693171748e18,-1.7159033337494126e18,-1.71635619818165e18,-1.7168090626138872e18,-1.7172619270461248e18,-1.7177147914783624e18,-1.7181676559105997e18,-1.7186205203428372e18,-1.7190733847750746e18,-1.719526249207312e18,-1.7199791136395497e18,-1.720431978071787e18,-1.7208848425040248e18,-1.7213377069362621e18,-1.7217905713684992e18,-1.722243435800737e18,-1.7226963002329743e18,-1.723149164665212e18,-1.7236020290974495e18,-1.7240548935296868e18,-1.724507757961924e18,-1.7249606223941617e18,-1.7254134868263992e18,-1.7258663512586368e18,-1.7263192156908744e18,-1.7267720801231114e18,-1.7272249445553492e18,-1.7276778089875866e18,-1.7281306734198239e18,-1.7285835378520617e18,-1.7290364022842988e18,-1.7294892667165363e18,-1.729942131148774e18,-1.7303949955810115e18,-1.730847860013249e18,-1.7313007244454863e18,-1.7317535888777236e18,-1.7322064533099612e18,-1.7326593177421988e18,-1.733112182174436e18,-1.733565046606674e18,-1.734017911038911e18,-1.7344707754711483e18,-1.734923639903386e18,-1.7353765043356234e18,-1.735829368767861e18,-1.7362822332000986e18,-1.736735097632336e18,-1.7371879620645734e18,-1.7376408264968108e18,-1.7380936909290483e18,-1.738546555361286e18,-1.7389994197935232e18,-1.7394522842257605e18,-1.7399051486579983e18,-1.7403580130902356e18,-1.740810877522473e18,-1.7412637419547108e18,-1.7417166063869478e18,-1.7421694708191857e18,-1.742622335251423e18,-1.7430751996836605e18,-1.743528064115898e18,-1.7439809285481354e18,-1.7444337929803727e18,-1.7448866574126103e18,-1.7453395218448479e18,-1.7457923862770852e18,-1.746245250709323e18,-1.74669811514156e18,-1.7471509795737974e18,-1.7476038440060352e18,-1.7480567084382725e18,-1.7485095728705103e18,-1.7489624373027476e18,-1.749415301734985e18,-1.7498681661672225e18,-1.7503210305994598e18,-1.7507738950316974e18,-1.751226759463935e18,-1.7516796238961723e18,-1.7521324883284096e18,-1.7525853527606474e18,-1.7530382171928847e18,-1.7534910816251223e18,-1.75394394605736e18,-1.754396810489597e18,-1.7548496749218348e18,-1.755302539354072e18,-1.7557554037863096e18,-1.7562082682185472e18,-1.7566611326507843e18,-1.7571139970830218e18,-1.7575668615152594e18,-1.758019725947497e18,-1.7584725903797345e18,-1.758925454811972e18,-1.7593783192442092e18,-1.7598311836764467e18,-1.7602840481086843e18,-1.7607369125409216e18,-1.7611897769731594e18,-1.7616426414053965e18,-1.762095505837634e18,-1.7625483702698716e18,-1.7630012347021092e18,-1.7634540991343468e18,-1.763906963566584e18,-1.7643598279988214e18,-1.764812692431059e18,-1.7652655568632965e18,-1.7657184212955338e18,-1.7661712857277716e18,-1.7666241501600087e18,-1.767077014592246e18,-1.7675298790244838e18,-1.7679827434567212e18,-1.7684356078889587e18,-1.7688884723211963e18,-1.7693413367534336e18,-1.7697942011856712e18,-1.7702470656179085e18,-1.770699930050146e18,-1.7711527944823836e18,-1.771605658914621e18,-1.7720585233468582e18,-1.772511387779096e18,-1.7729642522113334e18,-1.7734171166435707e18,-1.7738699810758085e18,-1.7743228455080456e18,-1.7747757099402834e18,-1.7752285743725207e18,-1.7756814388047583e18,-1.7761343032369958e18,-1.776587167669233e18,-1.7770400321014705e18,-1.777492896533708e18,-1.7779457609659456e18,-1.778398625398183e18,-1.7788514898304207e18,-1.7793043542626578e18,-1.779757218694895e18,-1.780210083127133e18,-1.7806629475593702e18,-1.781115811991608e18,-1.781568676423845e18,-1.7820215408560827e18,-1.7824744052883203e18,-1.7829272697205576e18,-1.7833801341527951e18,-1.7838329985850327e18,-1.78428586301727e18,-1.7847387274495073e18,-1.7851915918817452e18,-1.7856444563139825e18,-1.78609732074622e18,-1.7865501851784573e18,-1.7870030496106947e18,-1.7874559140429325e18,-1.7879087784751698e18,-1.7883616429074074e18,-1.788814507339645e18,-1.789267371771882e18,-1.7897202362041196e18,-1.790173100636357e18,-1.7906259650685947e18,-1.7910788295008323e18,-1.7915316939330696e18,-1.791984558365307e18,-1.7924374227975444e18,-1.792890287229782e18,-1.7933431516620193e18,-1.7937960160942572e18,-1.7942488805264942e18,-1.7947017449587318e18,-1.7951546093909693e18,-1.7956074738232067e18,-1.7960603382554442e18,-1.7965132026876815e18,-1.796966067119919e18,-1.7974189315521567e18,-1.7978717959843942e18,-1.7983246604166316e18,-1.798777524848869e18,-1.7992303892811064e18,-1.7996832537133437e18,-1.8001361181455816e18,-1.800588982577819e18,-1.8010418470100564e18,-1.8014947114422938e18,-1.801947575874531e18,-1.802400440306769e18,-1.8028533047390062e18,-1.8033061691712438e18,-1.8037590336034813e18,-1.8042118980357187e18,-1.804664762467956e18,-1.8051176269001935e18,-1.805570491332431e18,-1.8060233557646684e18,-1.806476220196906e18,-1.8069290846291433e18,-1.807381949061381e18,-1.8078348134936184e18,-1.8082876779258557e18,-1.8087405423580936e18,-1.8091934067903306e18,-1.8096462712225682e18,-1.8100991356548058e18,-1.8105520000870433e18,-1.8110048645192806e18]}
},{}],21:[function(require,module,exports){
module.exports={"expected":[1.0,-0.4893256757618757,-0.5869843187742857,0.9669843652719138,-0.46795316656242764,-0.5556727801915762,0.9412373818962331,-0.3895382640382172,-0.7992312391026811,0.983598588439949,-0.06324488271312602,-0.2598415605388933,0.5248929027165818,0.6986836942176156,-0.8910717884987964,0.9895131472310316,-0.37981930652932056,-0.805515145020825,0.7700395372706854,-0.5250363944186774,-0.698563069236116,0.8634452297456232,-0.9894887814327309,0.3799752578767154,0.20377956864433294,0.9005044934399565,-0.6400160235215296,0.9795824356656541,-0.04221607956922786,-0.9591314628784521,0.5068535268838358,0.7135935590472687,-0.8525436668994876,-0.3005910370326063,0.9981606730535025,-0.8178143622139766,0.756434558482531,0.4513705159667846,0.20410966355222146,0.9003578199235055,-0.6402750645531665,-0.5901857704315998,0.9261820756648385,0.14151018002404042,-0.994734647820146,0.3403747183521067,0.8298450092392944,-0.7423812020123931,-0.4702091094824519,-0.817620273718421,0.00022553633712735167,0.4510696107780334,0.46981096519593935,0.021337108716404908,-0.8295932289945842,-0.34079882278287293,0.9946883188693748,0.841440215650844,-0.926352070387603,-0.9966765508207214,-0.8528959330442745,0.9180149535898902,0.9982013286940886,-0.6239155602347362,0.9093438820012506,0.18339699065700013,-0.9981879173416368,0.3001607944895794,0.852779336001795,-0.713277483012531,-0.3206593193988434,0.959003729403347,0.728224474288002,0.48854166299002444,-0.9648914589339689,0.7704347323449342,0.9751197689167109,-0.45126888390311837,-0.7565090462114036,0.817748814659618,0.36036239010265464,0.7422315837646786,0.12035334500226487,-0.8808647307215832,-0.5728248131678667,-0.14173122009706374,0.8908669729310011,0.5903660109699641,0.16304319024820071,-0.9004549624611502,0.8741768815046987,-0.10649579638721278,0.9096242409018835,-0.8635026756320208,0.08503106615519461,0.5251333213644543,0.8524269414640917,-0.06352679652162026,-0.5066610305464151,-0.41298806176822017,0.04199298696068967,0.7925837604026847,-0.9549578981519299,-0.020439650682653677,0.703432750439227,0.9483373582664814,-0.2868275014888719,0.8181367755168774,-0.9412758420024606,-0.9924043782553786,0.6721340253341199,0.9337766329612593,-0.24525722564409622,-0.6512686477920823,-0.9258432182711831,0.9315153107306932,0.6674799425206374,-0.9931559424547659,-0.20323082490026498,-0.68338085942293,-0.280817405461184,-0.45745311922618587,0.698964004580867,-0.9871967434784967,0.4381725761386518,-0.7142221318400516,0.035729869238950704,-0.41868828303101047,-0.5012473049230308,-0.9794015740683921,0.3990093000894275,0.5197889647518147,-0.9977461273513498,-0.37914477803073987,-0.5380889229822169,0.9989610426661131,-0.6125987710702228,-0.9031634592439955,-0.9997114416153767,0.595413396792359,-0.5739298131116403,0.9999969752640192,-0.5779511555945306,-0.3342640246265311,0.1265732425112266,0.560220167409816,0.354508609825239,-0.9685731234698692,-0.7523951358664359,-0.3745883487046802,0.973711172231123,0.7664237440532328,0.39449390419671476,-0.9783964458035024,0.7325057504505038,0.1346344602344984,0.982626765537232,-0.7176564739507096,-0.15596943070444932,0.3061337021872836,0.7024734875636237,0.17723187547020808,-0.9066241294676505,-0.6869638513700227,-0.19841190750601254,-0.9925693938976411,-0.8561514899641142,0.07067614768917337,0.7747407342534467,0.8448105060859614,-0.240485381473735,0.9320049980506726,-0.833076685761679,0.027603084312110625,-0.9396035703003974,0.8209554852116174,-0.28211160513084593,-0.8139954657630553,0.9436710113037724,-0.015521314775907897,0.8263313019659293,-0.936316864864028,0.25219753761455943,-0.8382828945429824,-0.782324850576371,-0.05861684760680891,0.8498446860098797,0.9939673414995103,0.2102415258996304,0.6781320885195291,-0.9913713356456856,-0.18911198685915315,0.8717775444623778,-0.9025836339147046,0.16789451084310195,0.7091885571552564,0.8930907732103112,-0.14659896396679373,0.4950341391360714,0.9808232948485571,-0.40556939851896273,0.7389260898934001,-0.9763927234037669,0.3857655080737308,0.5320354322068827,0.9715081298502011,0.082343076230682,0.7672893814148907,0.9995136516789941,-0.6011549777103152,0.5680472555192719,-0.9999536792300742,0.5837838411585274,0.32750214877304074,-0.9541539790370103,0.3048494518907832,0.6030026349434044,-0.9994388121111952,-0.2842423488371274,0.3679349849079402,-0.9720539830808564,-0.5300746140123127,-0.3878994501215945,-0.9970652069833169,0.5116673492998117,0.40768354229260345,-0.9812716833505049,-0.49302215953589207,-0.42727806182839295,-0.9928372782338096,-0.7075551790882731,-0.17017530567391304,-0.9886644325046914,0.6921532916028491,0.19138381691667217,-0.912605334836737,-0.6764295531966663,0.48483353634428805,-0.9942184816438562,0.6603912753999095,0.23352403871125288,-0.929383984958732,0.8370189242928318,-0.0347651006775223,0.937126966133885,0.6274010755908076,0.27522995677307105,-0.9444341837569796,0.8126490962390548,-0.29589577767748143,0.9513022399756198,0.9388090221309133,-0.02991622164498499,0.8343545131151613,0.7867679182708516,0.05146220808789758,-0.8460464356767621,0.9230855275594552,-0.07298426463080349,-0.9692405336428314,0.7594235237292775,0.09447238352859913,0.6886436439323135,0.9056452954200336,-0.17495394205357379,-0.704118569603261,0.9860171753443259,0.1373068609596402,-0.8888284056281803,0.8865207607371549,-0.13234107579593812,0.8985025998934736,0.9779154163243402,-0.39236643121477127,0.7485508391874361,-0.9731814466519851,-0.08948208402791315,-0.7626744695697703,0.9679949481128747,-0.35234386160123293,0.7764434567202536,-0.962358332426133,-0.04645667511789645,0.5798380731360465,-0.9999886060918622,-0.3116660093232037,-0.597270989993137,0.9996531768361319,-0.5542139626490353,-0.8155593753916134,0.9427750318255527,-0.27040852630578144,-0.6312956544551611,0.9975881758260389,-0.5178106556283603,-0.4011301320863599,0.9798662183493164,0.4992435687283226,-0.6641462468142886,0.9936678785864355,-0.48044433382837304,-0.440251519988446,-0.9910141378298444,0.46142169256296683,-0.6957616721401483,-0.99072373041129,0.6816895981751503,-0.47855413617203785,0.9934235597552414,-0.6657550174074323,-0.22655070579506073,-0.9956614476603679,-0.4031022804508542,-0.5159667461326496,0.9974363535099569,0.829053811438215,-0.2683341768958795,0.9420546487207226,-0.8168039267029641,-0.5524197705830782,0.9995941333915266,-0.5989971708332102,-0.3096186050061061,0.9556420282536296,-0.7911705898316995,-0.04430492627233604,0.9998928864004228,-0.9258176262909147,-0.35032721010201273,0.6675303631219551,-0.7640658483790819,-0.6221777949856946,0.8646674631015803,-0.5277853801661923,0.18200439035732233,0.9774629664667134,-0.9871859402485561,-0.13020574787172093,0.885522087892609,-0.889813377829279,-0.4297153264838993,0.9856559429654129,-0.705646430079651,0.398947208533365,0.9047298349132042,-0.9977506688387457,0.09661649742044101,0.7580203986548969,-0.9697684095760869,-0.21513840275877452,0.9222549819470364,-0.8471927725117991,0.053613201278327735,0.7854365594916405,-0.9583453628587226,0.31846656444863003,0.5915086785169903,-0.9998162149596912,0.010510196285815065,0.8113919797917014,-0.9451400029771029,-0.29847135990974677,0.6257223343037094,-0.9980599240936394,0.5239273752749212,0.39455612609062934,-0.930176889017824,0.23561790872286176,0.9644248977566299,-0.9944474596492842,-0.07567425517896388,0.4338065382353059,-0.9134838491063422,0.702425292839764,0.1772985176288782,-0.9889855400218764,0.4486000082921964,0.8800252000349198,-0.9925776311212554,0.15101727645394328,0.2195657407668146,-0.9816843231895641,0.8447742724243342,0.5098155093932262,-0.8750353326140147,0.6384957895825512,0.7503367339539015,-0.9396267444454626,0.3699370005848552,-0.005974576275472565,-0.9993643418209054,0.604719539765512,0.3027973056288802,-0.9616217080258317,0.3295365654095611,0.5820336616841404,-0.8383198129976418,0.5698186436172259,-0.23120742348510703,-0.9656140375688979,0.768668942519611,0.08019623328996972,-0.9987201110678391,0.533858009185522,0.383777370256238,-0.975925195340308,0.7403756894033224,0.12309794944665382,-0.8821703035489487,0.8930603079795693,-0.1465319806724015,-0.9844213452967953,0.7107054991317457,0.16577073029014647,-0.9906497291480492,0.8728307545928183,-0.10374595009602773,-0.7533274076307905,0.971492078853629,0.2081352137637191,-0.9194612686072278,0.42029557018078145,-0.0607669747006351,-0.9959088227329936,0.9603672994262314,0.2501126111764487,-0.5857159963774405,0.9999279181107771,-0.017674985997975196,-0.8071829237502758,0.6139972898566458,-0.28417742669797535,-0.9499154249370592,0.9984804275644827,0.025449874320120146,-0.3879618618438633,0.9327835313648138,0.33259473772445647,-0.6533644952049649,0.7761008450339739,-0.4929632456164467,-0.8550364956367983,0.9852087217303925,-0.20052259032901668,-0.6853969882720303,0.9900207251515102,0.11147748652489374,-0.8765995397164222,0.8982638946521291,-0.6763796793860721,-0.7161547925658396,0.9830242464845329,-0.41617555373675846,-0.5036380964778719,0.9963084469338571,-0.11537673455269463,-0.7455807052849587,0.974199557317256,-0.376584618764597,-0.540417589778923,0.9990832384789698,-0.61041085973055,-0.29596045930300824,0.9513231114607765,-0.336293318611476,-0.5761920243383267,0.999999953304416,-0.02937297568378825,-0.3368688572314698,0.9511345650130429,-0.7732325698077177,-0.07305179842069098,0.999056886520743,-0.5399032275809829,-0.8253328272653535,0.9743373159117074,-0.2539105180197609,-0.11598383063014693,0.996255792026293,-0.8962613844763166,-0.4167312299528038,0.9209972518639732,-0.7157280774301511,-0.6768297338408336,0.898532322365556,-0.46538105428121135,0.11087007599714058,0.9901066715655074,-0.973165867444721,-0.20112133818916095,0.9851038034396751,-0.8547193876196586,-0.4934949276046878,0.7764861277613553,-0.6529016686934738,0.33201827193612715,0.9330036560369935,-0.8315439294830532,0.024838868198428572,0.9985139227290258,-0.6196372793390754,-0.28476337425051024,0.6144795997791959,-0.8068219811670062,-0.018286086554118154,0.8278854399722104,-0.9353422804928401,0.249520791023114,0.9605374842831838,-0.7805995200984842,-0.06137703317760074,0.851298770377976,-0.919220785153258,0.20753736077894952,0.6801617258859415,-0.9910050782523037,0.4613616164507831,0.8731288709127968,-0.9013897398228993,0.16516795634997988,0.9809290746986323,-0.9843136969807224,-0.1471365553123484,0.49743482456220095,-0.9956677462085686,0.12249137557903099,0.7407863952154845,-0.6934301448311383,0.38321290142972225,0.9118800054516452,-0.9987508377988049,0.07958698758986689,0.2891084170623229,-0.9654549576881392,-0.2318020188717338,0.5703208027536638,-0.837986443512222,0.5815365472506929,0.7959028228543293,-0.9617892285129811,0.30221474250188646,0.06590361275000998,-0.9993423659884431,-0.006585763586757753,0.3705047704119619,-0.9394174158651962,0.749932556931399,0.6389660648046982,-0.8753310257445232,0.5092896093063918,0.41020691951517796,-0.9818005823484507,0.21896941508534176,0.6715375827231997,-0.9925031161303592,0.879734760599934,0.44914617329792234,-0.9890758202351222,0.6901548867232699,0.19409713615839483,-0.9137323602073238,0.43325576291352935,0.4872501132487555,-0.994511593015401,0.1340959037969672,0.23621185620293358,-0.9304010936668734,0.83550269850892,-0.03200147506187885,-0.7986406969167941,0.625245453911722,0.27788727376093675,-0.9453394842025175,0.35400037051033384,0.011121359899812631,-0.9998277456586204,0.9378530050244416,-0.25645319322593535,-0.9585197496689707,0.7850581157421195,0.5958499551424273,-0.8475173356870698,0.5556869034889441,-0.21454147534578763,-0.9699173776497707,0.9919385487832287,0.09722481932575383,-0.9977095111320383,0.9044693036703729,0.3995075878529488,-0.706079372198475,0.7287761014691778,-0.4291633549687374,-0.8900921169284111,0.8852379609442209,-0.1295997273581042,-0.9872832874933714,0.698575224473638,0.1826053472742279,-0.5283044207128166,0.8643602688617332,-0.6216991854981937,-0.7644600137434293,0.9672972750171799,-0.3497546786354696,-0.9260484687025096,0.8418750553724991,-0.04369431882542744,-0.791544248839508,0.9554618328084838,-0.3090373816665594,-0.5994864775165233,0.9995765348131651,-0.5519101923709583,-0.8171563844300502,0.9418494401719394,-0.2677453426318575,-0.9551190315152293,0.9973924302641539,-0.5154430911434397,-0.40366154724578074,0.9804145516302478,-0.7256627321274771,-0.6662109519053887,0.9933533935296455,-0.478017378289702,-0.8637766515413235,0.9879941853914811,-0.1837451411529878,-0.18706296832492136,0.9107974592946434,-0.4397026574654689,-0.4809802813238169,0.8906199556284448,-0.6636891885037443,-0.7279817028406567,0.9277507604026448,-0.40057018568721536,0.0391624388285111,0.9976304132070793,-0.09837867180864565,-0.2709969053135768,0.9701989661127827,-0.8152055382610511,-0.5547226057173571,0.8197624648335341,-0.5967806724218327,-0.7843394235265153,0.9564528004248803,-0.3201444861749047,-0.047067205868111195,0.9998485924874625,-0.9247689362323582,0.7225344335474627,0.9457169184873622,-0.7622790140570233,-0.6243401969849653,0.8660532229496983,-0.5254346933934255,0.1792847148771492,0.9780429749694126,-0.9867409173473646,-0.13294687444840378,0.9946322295879461,-0.8885481635151937,-0.4322105285452346,0.7310839174719037,-0.7036844361842292,0.3964100999253481,0.905904296833234,-0.9979322153244077,-0.8791829104166435,0.992360746666355,-0.9690899270394937,-0.21783799420920613,0.558490814188902,-0.8457204416557681,0.59313501781636,0.8758910404352505,-0.9577668919952369,0.31584415348957123,0.9390193671294632,-0.3715814173907819,0.0077451446177001235,0.35715607815083944,-0.06706045848997114,0.7593354070613588,0.6278768970501508,-0.8683119768315759,-0.5805929523549598,0.8373532003010904,-0.9789781821065051,-0.8034442277238886,0.9651522011700024,-0.9941526677862038,0.8864580910814864,0.998808099521009,-0.7341710913334542,0.7004544811057175,0.6925942957626422,-0.7415647205647864,0.44612697574440974,-0.08934719739933177,-0.49844028049135775,0.14828324821358807,0.22226258921969116,-0.5622475326912202,-0.16402435871504986,0.5121923861982834,-0.7899344492509958,-0.46033266315105975,0.7521617932359919,-0.9405693943723694,0.9996496011595815,0.9187636581131713,-0.9994590988858264,0.9427298671241165,0.9957472626262127,-0.960859329412902,0.7938541551405432,-0.5176947919355401,-0.8285351937264963,0.5675441348467748,-0.2285162989072777,-0.6153938837248584,0.2858745913549604,0.08295218457944382,-0.44037311427707027,-0.023679798618651413,0.3863293266098853,-0.6958589407807637,0.7385141340200454,0.6520230427965913,-0.7772161903121533,0.993439056909828,0.8541169743196719,-0.9849037682289199,0.9802672336821995,0.16849700282459373,-0.9902686907785606,0.8714779538880167,-0.6328598297962482,-0.8990405922863137,0.6776827669886987,0.7149178882854306,-0.9205449623342407,0.4177848885865331,-0.058006688246382304,-0.30974737638471206,0.9595928726309838,0.2527889332984366,-0.9745976360893054,0.8422777555210527,0.5389269573844742,-0.808812118103126,0.6118123758954848,-0.28152517904448343,-0.950775926781449,0.998324229032664,-0.9086039022715691,-0.9999989268722398,0.9317832975676571,0.33520120919123586,-0.6554553468963742,0.774354141011266,-0.4905555294796126,-0.8564671519681926,0.9856787899126351,-0.197812822532413,-0.9739372370986212,0.9896272682117356,0.11422498917489585,-0.46836685371815845,0.8970452912594972,-0.674340403147601,-0.7180819774662627,0.9223073279568224,0.6755252572604593,-0.8977537804418341,0.9965420153400354,-0.11262959554666069,-0.25717478038749025,0.9735717675847003,-0.8234216725185053,-0.9854067345488803,0.8114711309794765,-0.6082182810992479,-0.7753691888578764,0.6542417803081634,-0.3336879193623785,-0.03274771213126437,0.38903020134938165,-0.9301271628921205,-0.33947111408734953,0.6588741661516907,0.2830656256143535,-0.6130817449627172,0.8587997093068178,0.565129289824327,-0.8268910123868968,0.9749560096652036,-0.9889654857991107,-0.9600434826179438,0.472369536534769,-0.8950315350987202,-0.9995511661550546,0.9199165083648045,-0.7137942083469547,0.40952588569710513,0.7540893826590729,-0.4629317994043876,0.10812153540487503,0.2615553365563757,-0.16691398823894432,-0.20382923106883935,0.5465461255737443,0.14538498634031327,-0.4958980388489947,0.7782255841415956,-0.9535478541030238,-0.7395958437415278,0.694704824114468,-0.9999710703730049,-0.9111518172682209,0.9986607990770863,-0.9488548738136479,0.7685823086828659,0.9659148119755908,-0.8051852524661953,0.5337434889526347,0.838951335594014,-0.5829760622539161,0.24684213655883058,0.12323234740631911,-0.3039020841587273,-0.06413674945052766,0.4233568412018287,-0.9181285082612624,-0.36885959359274134,0.9400228644697189,-0.9017127851746458,-0.6376030486891461,0.8744735212908531,-0.9911047190314518,0.16244013895825796,0.981462778502639,-0.9838220837823195,0.8509067911854273,0.9927179630344132,-0.8805752439438799,-0.4475635036830887,0.7426410363753305,-0.6914351269986349,0.3806573646832449,-0.017539577900915614,-0.9988851882016156,0.0768302904151847,0.994324781545075,-0.964730747843691,-0.23449098207183924,0.5725899892309259,-0.8364743144671267,0.5792848068284887,0.7975738779287515,-0.962542628437418,0.9951626858771653,0.9447606282431935,-0.9992382787462953,-0.009350842659444044,0.37307172298176233,-0.9384659943586655,0.7481004942313899,0.6410906828759978,-0.8766647029433162,0.5069079752093651,0.8465762249236958,-0.9823219743540704,0.216270519503335,0.1543540533031759,-0.9921613652014282,0.8784166591304071,0.451615015070271,-0.7456709504719798,-0.39788379113936595,0.7048244390479423,-0.9148523990452689,0.43076194418211344,-0.07230714454379758,-0.9947971002043541,0.9635268360682434,0.9870002647468584,-0.5763027071941863,0.8339800843479195,0.5268002478447561,-0.8652493056922095,0.6230850515135081,-0.2952471972237496,-0.66839319139683,0.9990509969636524,0.01388631058950382,-0.3772761770742386,0.04546316861716062,0.3216653166362603,-0.6445651277461577,-0.26492115218133333,0.5980683688761126,-0.8489817554545975,0.9831609606533137,0.8161344959185026,-0.158833869553459,0.991584355388041,0.9545930404215651,-0.9975186496242897,0.9032863962147698,-0.6848531251318475,-0.9271502954943474,0.72687986338981,-0.4266641435696224,-0.766345629648574,0.47957184433878863,-0.1268573879816049,-0.24329983819114326,0.18548531589665088,0.18532332071704985,-0.5306501775451518,0.8030131412427198,0.4794271785728283,-0.8914237412808055,0.9476950174635919,0.7267666380595852,-0.9270885140515651,0.9999366038766722,-0.9352943646867502,-0.997507029944426,0.9546421393994884,-0.78051486549066,-0.970626481017718,0.8162297473162229,0.55324852662922,0.20740487846984346,0.5982004816594388,-0.26508011173748103,-0.10448852064114543,0.9971890584923698,0.045298485101733545,-0.9998778354301221,0.7112305463909862,0.35125856647606224,-0.6682705630491097,0.7634238434962648,-0.4755867677595234,-0.8651666460516303,0.9884176013856771,-0.9757620795571742,-0.9776724410191919,0.9870267463399793,0.1311917741472739,-0.4834027488292941,0.8893590967576736,-0.6616182849344526,-0.7298747067822355,0.9287791738903606,-0.3980350281047475,-0.9051530547920722,0.99781684487465,-0.09562654514888629,-0.2736575616488928,0.9695252309987366,-0.813600916637136,-0.5570211993606253,0.8213429505346515,-0.5945596109372521,-0.7860517445171277,0.9572562594166911,-0.317523632130248,-0.04982912558107551,0.9997966535844238,-0.9237131752538691,-0.35550169002444915,0.6716379255254914,-0.7604863512369868,-0.6264978251868359,0.8674323608269036,-0.5230799890693537,0.17656366855955455,0.978615505211007,-0.9862883496793158,-0.13568698449364003,0.4873683739218163,0.07666592329377887,-0.43470242586100416,0.732967759612579,-0.7017170618136301,0.3938699603071326,0.9070718320751515,-0.9981061314728942,-0.8804971069253797,0.27801736625151724,-0.9684040346981231,-0.2205359200381457,0.9814943597810217,-0.8442416442962745,0.5909065081935896,0.874553475360625,-0.958558341707286,0.3132193275394449,0.054358740913530594,-0.3690128173206382,0.0049800337290649924,0.35973749974891156,-0.06430126251906848,-0.3037450237000785,0.6300266589570608,-0.8696802297023359,-0.5828421127416088,-0.17209735025320602,-0.9795384361047375,-0.8050874796349958,0.9658721248870316,-0.993850274484927,0.8851749595523224,0.9986693143516052,-0.9112197361447814,0.6984783135932077,0.9340540671781888,-0.7397067884476201,0.44365053204384564,-0.08659275076147575,-0.4960411875900598,0.14554808617760634,0.22495773821996848,-0.9806157056155023,-0.1667514452692209,0.9905135518540639,-0.7916270039039659,-0.4627856681067337,0.7539811013778699,-0.9415048525667059,0.9995725847971557,0.9198518545087895,-0.9995462139387947,0.9418039225977666,0.9959982021673612,-0.9600896039275605,-0.2510754345588486,-0.5153270340036307,-0.826983708446783,0.565265286550007,-0.22582342706006076,-0.9670370396874276,0.2832237327087859,0.9502257613627505,-0.4428540362183998,-0.0264440969380379,0.38887832903241637,-0.9324245946985033,0.7366469318485749,0.6541170952243165,-0.8847612036591737,0.993751490722535,0.8555518181992332,-0.9853786604413007,0.19954813418974326,0.17122198700605984,-0.9898800806683377,0.870118489734008,0.46680172585214147,-0.7569528701476281,0.6756468005331613,0.7168485812015479,-0.9216216174384495,0.4152710125472937,-0.055245958264419956,-0.9963933326258928,0.95881110864684,0.25546332255888776,-0.590189443993657,-0.19765122402442029,0.5412541400185193,-0.8104351281590091,0.6096227839264946,-0.2788707788078737,-0.9516291588526136,0.9981603971662752,0.931723440667062,-0.39305307736471196,0.9307759392177244,0.3378051176600396,-0.6575411868793495,0.7726015161623753,-0.48814406248271447,-0.8578912596251892,0.9861413214492036,-0.1951015422297389,-0.17568900615074212,0.2529484290189494,0.11697161844375255,-0.4708081799705446,0.8958198289260185,-0.6722959708027653,-0.7200036718057806,0.923372419619331,0.677561532144258,0.05071655467343697,0.9967679640387128,-0.10988159535809675,-0.9902457348997308,0.9729365337785523,-0.8218494875206499,-0.984932291417078,0.8130839699175856,-0.6060210519410967,0.2745120876296683,0.6521480256092286,-0.331079968686143,-0.03551126805500783,0.3864813756497097,-0.023844605424512513,-0.3420707752969298,0.6609517507774159,0.28571661393552156,0.48418039519735745,0.8602130514427317,0.5674083962842807,-0.8284428749775756,0.975567248760988,-0.9885520566075002,-0.9608136459226772,0.9957624365449135,-0.8937948421777543,-0.9994645067240225,0.9188287310480837,-0.7118548814877693,0.407001664888323,0.7522704178276268,-0.4604790048826216,0.10537216809937346,0.9908675251113712,-0.16418697711348573,-0.9811218977123416,0.5488596647968117,0.1481202153102633,-0.4982973583836213,0.7799590900940269,-0.6487027935805679,-0.7414541134503794,0.9349795627768444,-0.9999462142653905,-0.9122877773712397,0.9988000395171124,-0.07859554569680935,0.7668103539946841,0.9651953283946165,-0.8035423671999681,0.531403097157819,0.8309747137467914,-0.580727167072292,-0.7965045584989198,0.1259759639884462,-0.3012665413233054,-0.06689597532439129,0.9993058084347176,-0.9170292112230275,-0.37142836242698446,0.6842053832884482,-0.9029048167333948,-0.6397307970312751,0.8758114853151512,-0.50843344615347,0.15971107952523098,0.9819889778972177,-0.983322948134892,-0.1526044217291608,0.502224766707034,-0.8792614485258394,-0.45003454666454495,0.7444899991920778,-0.6894348223509822,0.37809891737431023,0.9141360134517159,-0.9990119009806795,0.07407300578474935,0.2943981389854843,-0.13311026261935024,-0.2371781523192468,0.5748547976005228,-0.8349557896158235,0.5770286371090549,0.7992388346354512,-0.9632886686186902,-0.7621723026024971,0.07142088930288626,-0.9991265511806182,-0.012115850234205658,0.9998457103007926,-0.9375073972024718,0.7462627114444608,0.9565009059846684,-0.8779916770342524,0.5045224652190581,-0.1552318961615574,-0.5548597619979534,0.21356997028497945,0.15708548857966265,-0.9918120280600945,-0.09821461681333113,0.4540804037274827,-0.7475105683574551,-0.4004191307084666,-0.37389597699918126,-0.9159654427865902,0.4282648317812218,0.8905449767299977,-0.9950750010276853,0.9627831620637289,0.987440904771096,-0.9771227199845808,0.832451093451963,-0.5733182357933895,-0.8638597052680005,0.6209198849149216,-0.2926041727923524,-0.6663338844411038,0.3488227632399427,0.016651155102412364,-0.3798355555046948,0.042700689727867315,-0.7432357977039361,-0.646676768189003,-0.2675865044830602,0.6002822096906772,-0.8504396837821754,0.9836625127398408,0.817729259085271,-0.971248812150344,0.991222580192353,0.9554131691774495,-0.9973201609415502,0.9020965820979093,-0.6828355838867582,-0.9261106725333225,0.7249780674796011,-0.4241616698334207,-0.8925991125908423,0.4771435720582371,0.8642773568044043,-0.24598098218639983,0.18276742635043694,0.1880398771503778,-0.5329918769478191,0.8615660082228987,0.4818520031074838,-0.7680135529602351,0.9485739720261713,0.7286632078917273,-0.9281214707448534,0.3996587084205379,-0.03816862508477395,-0.997698346209431,0.9538151466556347,-0.7787832744512114,-0.603903684371833,0.8146291155541943,0.5555498382375882,0.2046990492997775,0.595982340078219,-0.26241285400140135,-0.9567426257825441,0.9969780620656975,0.0480606376892146,-0.4087150988651387,0.713171623893394,0.3538461873790075,-0.6703250644973602,0.7616349112424394,0.6251167892153849,0.11961211021438278,0.9888334597928419,-0.17830618344878718,-0.9782497602973953,0.2363720412571007,-0.8592545859678746,-0.48582152016592495,0.8880914377158345,0.4331071794769874,0.3403067672588741,0.929800485795274,-0.39549682708764006,-0.9063250264010099,0.4492934567899751,-0.9524428184650603,-0.2763161255580561,0.9688440827515147,0.21880855946330655,0.5434882049627368,0.8229171561262054,-0.5923340033620325,-0.7877580552399525,0.6390928670790149,-0.9966154521143503,-0.6836000534282353,0.9997370700884394,-0.00675061327565353,-0.9993363747174905,0.6736840114049979,-0.7586878736259376,-0.6286506630937622,0.7960026182809296,-0.9894992290896234,-0.830512854901816,0.9791805528138459,-0.5406454692015927,-0.9654119887309945,0.28926622664922436,-0.8859973627013292,-0.43719099937779277,0.9119476582549186,-0.9314603718310406,0.3913268091010014,0.9082324317118098,0.9541291098460419,-0.8818045710231318,0.28067245388626605,-0.9677107377964095,-0.22323215961685372,-0.5396752191072343,0.1650053649380982,-0.9907553076103659,0.7905439124773392,-0.6355977039349562,0.9962323385475726,0.6802825643873891,-0.9996227805647134,0.002214884762356107,-0.6695478186371648,-0.06154157489121129,0.755725227336743,0.632171603587042,-0.7932489640491132,0.9901446411747853,0.8279778945113154,-0.9800912004073483,-0.8597896603764545,0.9665846634030741,-0.49373048804481395,-0.9496726169294826,0.44126582484037036,0.331762766561716,-0.38724647635912,0.9330629686225018,-0.9101211517328505,0.4411706961257586,0.8839346337799656,-0.49363830188454516,0.9665574838896885,0.22765116716013903,0.8223218909187598,-0.1694772568172018,-0.5850008465379941,-0.7933135056598913,0.6320894644826159,-0.9958287292472544,-0.6769510797256094,-0.7156129375736754,0.7194276340426892,-0.9996256863137158,0.6803602567991448,0.9962415261590847,-0.6356795382580477,0.7904789901107692,0.17487214707116808,-0.8254258999274378,0.980981684342925,-0.22312882853355231,-0.967737452290544,0.2805707084921013,0.9510836492172599,-0.33702407058898787,-0.9310789504633855,0.391424358033782,0.38296270649536707,-0.3361380621934908,-0.4370956594983829,-0.8860465111316281,0.4896886197167228,0.8569801204031742,-0.5405562895444714,0.9791590292603575,0.1739456619989131,-0.9894839017887507,-0.11521298055423373,-0.6285682208978695,0.05607437616134172,0.6736056679823517,-0.9993325078338463,-0.7162698408284208,0.9997394951755061,0.7564104233281053,-0.9966241606279649,0.11164131082594794,0.9899974802616109,-0.5924194073307871,-0.1604254474146259,0.5435771841434329,-0.8551219716635584,0.968870331676794,0.8843742199865391,-0.9524751146266144,0.3327502014322367,-0.9062802256516916,-0.39559418683861314,-0.9096868736469851,0.34040644322099883,-0.9499669298721745,-0.28401936610503964,-0.4857288630641851,0.9641913445352107,0.5367347565154293,0.8274499048931243,-0.17841048855363056,0.9888176568895057,0.11971735333033061,-0.9959237059761452,0.761703598767773,-0.6702463979835965,0.0012739801463340571,0.7130973116181074,-0.9998327361501577,-0.7534358124871289,0.9969862913022522,-0.642656101723873,-0.9906272247623622,0.16593330053272462,0.9807779410462403,-0.5473787264293596,0.8527617142562464,0.49676144804707456,0.2718521014522692,-0.87743922066022,0.9086257668912686,-0.9343500592330541,0.39975587698669734,0.9115611947036584,-0.3446678209828169,0.9485404102792734,-0.8902155362017719,-0.965656883000485,-0.23104703377725627,-0.5329021811098996,-0.8299884031716197,0.5821677067017088,-0.9881310688007942,0.8015241327633534,-0.7580745805644485,0.06512922739759044,-0.9993702052396887,0.7250510765588776,-0.7099101116809746,-0.6829130242183181,-0.043423717726989663,-0.9973279107317431,-0.7883372902756836,0.9912365888449608,-0.5997032463188229,-0.9816529028462129,0.5511690073577811,-0.8503839127719226,-0.5006928678630161,0.8801034813840654,0.44845266737361056,0.3241820139311182,0.9359567964222993,-0.37973749317729755,0.926383446958484,-0.917488407560355,0.8876585413441784,-0.2927055365326042,0.9644684647875417,0.23545769348694826,0.529058642176401,0.8325098258940477,-0.18732903843368728,-0.7981734216211056,0.6258509189788284,-0.995064487720684,-0.06965468970174286,0.9991989730761152,-0.7281673755723481,0.7067083065880726,0.04900043506636933,-0.7474401504592447,-0.6418536538972017,0.7855385835113633,-0.9918255599728092,0.15698079891769062,-0.8150486349484277,-0.21529939291172226,-0.9697281677106873,0.5046139868011319,-0.8779409301448415,-0.45250214861535915,-0.3198878718621849,-0.9375442779415942,-0.9284713380204748,0.9152535373222986,-0.4298641773569705,0.9456288571758652,0.297039633536792,-0.9632602043270645,0.8661886072188943,-0.8294040017896975,0.18184228795795848,0.5747680553433987,0.8008976802439239,-0.6223068462610821,0.9946041665078009,0.07417871898278937,-0.9990071841456974,-0.014880765169386112,0.9998904600016933,-0.6895116028336139,-0.9972508820832178,0.6453251971886623,0.09359423435246231,-0.5988651561830194,0.818270485436468,-0.9833422214992009,0.21086778807907344,0.970825766606096,-0.5085247241912753,0.8757603168103891,0.4565423204188314,0.9355876506851192,-0.40295140861372686,-0.3713299389258616,-0.9170714829207904,0.42576444480414494,-0.9441438835654581,-0.4786988804833272,-0.8633853579959954,0.2442643898768482,-0.976530899597893,0.8375012375276621,0.9875891202752466,-0.8036054618012903,0.6187499706711463,-0.0686102835865206,-0.664269482598038,0.9987948423941564,0.019415872298128578,-0.9999473080791413,0.6927896477688705,0.9975767197002509,-0.6487834640457242,-0.991691429408598,0.6024914606587675,0.14801537895036937,-0.5540767354325956,-0.2064318450114271,-0.9719033924636331,0.26412100219870244,0.9562259927030682,-0.46057309966457666,0.900899870417286,0.40709849031810963,-0.925063968393251,-0.35218957540461443,-0.4216559528944162,0.2960398121935552,0.47471165146742966,-0.9607842565025785,-0.24866024537471984,0.9755439539096287,-0.8399711237493064,-0.9868665761192741,-0.13217767065519825,0.9947122308193228,-0.7697815208324958,0.08322210621108193,0.7305542062573128,-0.023950579979342905,0.9999835839940646,0.7451178500765047,-0.9978820339254585,0.6522283833206105,-0.7770457287197714,-0.60610536992914,0.8130222550175764,0.5578469020298039,-0.8461343090212733,-0.5076230057730561,-0.2597435898178652,0.8713450836756547,0.31658038573509517,-0.8989219599119374,-0.41123719668487335,0.9233317186027383,0.3564311027217189,-0.9444883583169232,0.8958669342841111,-0.47071465609167745,-0.8679267789186763,0.5222320854620648,-0.9745369381150619,-0.5719095660110413,0.9861237289139007,-0.8089713712283697,-0.9942361694319152,0.7726688133593473,0.9988456775965264,-0.733643958044308,0.7010081366878876,0.6920342992031802,0.030872047028348233,-0.7352647985665383,-0.09012011935404264,-0.9928175689827142,0.6097068096442902,0.9839703852039249,-0.5616055919051492,0.8437081810911918,-0.973998636795409,0.25536083366811,-0.45964358651146886,-0.3122746606011074,-0.9403055624549993,0.36808826904940345,-0.9215804728811142,0.9224119692272112,0.9429884411806195,0.3046924413235415,-0.9610740351579512,0.8701707285389205,-0.5183585998155441,-0.8394025771197414,0.19965200593056828,-0.9853605939419051,-0.6160053984347734,0.9937396533786464,-0.7755402095801858,-0.99861752980706,0.7367186163932608,-0.6977662318592656,-0.6953013869218571,0.739037155814978,0.6514344439935326,0.08560188635579359,0.9933500062358965,-0.1445640477147147,0.8077071189135304,-0.9864779611908862,0.9727186856155247,-0.5154178765688678,0.8718582945944273,0.4636670846775125,0.30796251096352995,0.9418395521772199,-0.41948914299309714,-0.9202415305439009,0.41848984229041397,-0.9414691237106042,-0.3090093975908349,0.9598109587614886,-0.8723967759222097,0.26181675615711536,-0.19417863126800805,-0.5644445875033831,-0.8083555034862386,0.14565296136177297,-0.9932226928744636,-0.08669835692731236,-0.6505990475760427,0.02743829339892124,-0.9999974888187484,0.6985541700336613,0.021803669174030166,-0.6548690482273071,-0.08108189224882979,-0.9938620070544715,-0.8109859788326435,0.9855476244702754,-0.19857348066852007,0.8388039020521391,0.5192994462755057,-0.8696278991857571,0.961377528484946,-0.4766006354803123,0.41441488871222154,0.3596385895460192,0.9220071390636957,-0.4143660605947693,0.9399304371641699,0.31331999653159964,0.4586658951114809,-0.25642475289801575,0.9737487103190294,-0.844298454189934,0.5606946411082117,0.8110173672673314,-0.1501388549766981,0.9926852985549227,0.6548285006305166,-0.9980996049305357,-0.03197206585570558,0.9999973671433791,-0.7017925816182838,0.7328956442917354,-0.9988979376180818,-0.7719696983024524,-0.6124684636372393,-0.13558195926137265,-0.9863058382400558,0.19412600075579206,-0.8363258518401097,-0.5231703323065924,-0.9598260145089346,0.4716853810176544,-0.8953773872804173,0.9448493703691486,-0.3554026078964221,-0.9237537789032804,0.3733230121943404,-0.30801355440416567,-0.4636195483388698,0.9572255930778519,0.2608062207150134,-0.972706237737512,0.8467203628765575,-0.5569331594039388,-0.813662545788156,0.6052296329684428,0.7777380005077773,-0.09573206364971033,-0.739073297819922,0.036505180543295754,0.6879546537343162,0.02285031906483491,0.9986203485313626,-0.6616977679638771,0.7690785576345291,0.616047661024466,0.13108668478058236,0.987043760496634,-0.18967452704098514,0.5184044798011465,0.24759410047571445,-0.86511348141539,-0.475680014229365,0.8933483649691585,-0.946325136917125,-0.918435768088476,-0.3681381531227487,-0.4060930076530388,-0.9013769984708233,0.32192176783409904,0.8740968155782214,-0.2651823229013257,0.9716437534307265,0.5615611996363827,-0.9839608160252097,0.8162909846288023,-0.6016127092810322,-0.7805811286691478,0.10024600918540129,0.7421210982799774,-0.04103754420080558,-0.7010463973676119,-0.018315505889125158,0.7266938209075005,0.07760402606139596,-0.766171594523809,-0.6196141843112644,0.8029499619535075,0.5719535763456575,0.1852191511053656,0.9767673443419587,-0.2431970173213735,-0.9623319271302071,0.30031804214856633,-0.8913009635817156,-0.3563809745239888,0.916632108284928,-0.927190009196598,0.4019439066105109,0.9033318712492208,-0.4555628719489016,-0.8762910785816201,0.507576780086375,0.8461629023883164,-0.21194347589730497,-0.5493758998473784,0.15358725469769946,-0.992258044530177,0.7834081977424913,0.9978785424872896,-0.745153630899694,0.045569063582799996,-0.9998735650891489,0.013780315903996719,0.9990556084728428,-0.07308114403458216,-0.9947177394641237,0.13212448977644226,-0.8002381772652156,0.9884586701621321,0.8344080548307568,-0.9777293218622489,0.23879493081483044,0.9635551987898091,-0.29598856523635203,-0.9459862397780779,0.4308576074722613,-0.9148095903830036,-0.37655736048757266,0.9371608620501677,-0.9052681595582976,-0.9562102913533644,0.8784673134325933,-0.27391807037161753,-0.8485714163841402,0.2163740143511433,0.81568579882459,-0.158067620811064,0.9916845262914963,0.0992043171524553,0.6410093242638726,-0.9968173960341437,-0.6854184138290356,-0.707486531824424,-0.009244842413031393,0.664309585715502,0.0685567584913726,0.9951730942708726,-0.6267089153459814,0.7975099290795892,0.18624784587828888,-0.8318995989868694,-0.5299922425614615,0.8633582871921467,-0.9647586469907239,0.48760486844924233,0.9474470336895428,-0.34789050280828,-0.9267973373760091,0.38075538692205485,-0.9355687053142073,-0.32522294355486436,-0.4474687061225857,-0.8806254753589247,-0.9708129003479354,0.8509624725109837,-0.22080010128903338,-0.8183013248880503,0.16254473496029112,-0.9910906058825378,-0.10371668456666204,0.997246905125143,0.044523215431363276,0.6821086503480447,0.7106847991596313,-0.7242926857236196,0.999408653567706,-0.6751912915494255,0.6223488422727401,0.12312714987068495,0.9882995311509079,-0.18178953076448207,0.8293740282674116,0.5338331285587173,0.22997611010705443,-0.482723248269867,0.8897136474799103,-0.9488883355395727,0.34363448738838237,0.9284912630407658,-0.3849455799820795,0.9339573008925907,0.45245430359256744,-0.9535159156834315,-0.27291105070462285,-0.49580598350988897,-0.8533360215770596,0.5464573509853505,-0.9805625974479054,-0.5951834182219207,-0.78557178256226,0.10822691819194391,-0.9969003081801007,-0.049054021971400075,-0.6787848536776036,-0.713868445401233,-0.9992011186418633,0.6710627617431716,-0.7609900550608326,0.9960223731131184,-0.11862463394035802,-0.9889811844448482,0.5867411672766536,-0.5291041692227995,-0.23540555015540351,0.8587453969904102,0.4866905807295526,-0.8876338334656683,0.9503101156759095,-0.33937140229144613,-0.930166086625831,0.39458316304640023,0.9067448594823238,-0.3337878465009719,-0.8801289528429199,0.2772718249446166,0.49186187613308285,0.8556920147507575,0.9816426713605136,-0.823481818206688,0.5915324030037526,0.7883702978201316,-0.11273492523815246,0.9965332017592138,-0.7571298399328916,0.7099478969436109,0.005756075256274593,-0.7180081984672942,-0.6744186755105529,0.7580395897385396,-0.9964162796761922,0.11411967751618791,-0.5822113281590096,-0.1728617723333085,-0.9793819549700776,0.5414818737179428,-0.8564124273017093,-0.49064790038391826,-0.2786106557122961,0.3446174565690343,-0.9115391338345739,0.9318217736746464,-0.3904113724024688,-0.908648171025586,0.33806004134162226,-0.9507430727449203,-0.2816268948029892,0.9674595677468264,0.2242015092051418,0.5388376609242573,-0.1659862079469888,-0.5878692180436043,0.989186555919884,0.634829570989569,0.7534710883656056,-0.05811251425736849,0.9995949711984182,-0.001220328764098026,0.7148437648001881,0.6777607142962325,-0.7550735290808579,-0.11966408759430587,0.7926429883197921,-0.990283437766224,0.16839251268891722,0.9802881828787536,-0.5452895755203923,-0.9668391377379805,0.2839679237160993,-0.8834194640722536,-0.44215809892798397,-0.33082437403210335,0.3881632430656125,0.3862315497291098,0.9105327887259818,0.9524587701517317,-0.8843992620489827,0.28597617068181463,-0.9663019515727308,-0.22861949757324115,-0.5350111481857616,0.17045734317230463,0.584193938705083,-0.11169462669101789,-0.6313184739411337,0.9957374911219811,0.6762187228600478,-0.9994556071622714,-0.0033154428342030994,0.9996524015188823,-0.05602080907214875,0.7520919341092851,0.6364469754509231,-0.7898694435745874,-0.5895627863009144,0.8248640536504588,-0.9811742430769349,-0.8569524699370391,0.9679875630960102,-0.4985321758247084,0.8812849953963416,0.44622184434481377,-0.9077713337694913,-0.39233936634339006,0.9310593761317745,0.33707458270661284,0.43620092350757567,-0.9478919907221831,-0.48882122558100266,-0.8574922411609386,0.23303278249604653,0.8254561855306162,-0.17492497153666992,-0.5805066406006169,-0.7966682989460218,0.6277943886220705,-0.057067340928732176,-0.6728702665237258,-0.7194648975375358,0.7155754611825899,-0.9997617006572279,0.6844028921830024,0.9967053201105357,-0.11065291567584083,0.787079648650563,0.5932203592898556,-0.822291360863045,-0.5444117061475715,-0.21773453386889963,-0.969116073807229,0.2752582445052655,0.9527776020439958,-0.4502764095296155,-0.9330822663983058,0.39650741792664523,0.37784815242767444,-0.3413414356434694,-0.43211493385319816,0.2849728256595172,0.48485927078442426,0.8598170561502577,-0.5358953322789916,0.9780208777172776,-0.8336390848163115,-0.9886688498963028,-0.12070469862263883,-0.6242573875342559,0.06159512453142469,0.6695079670615018,0.7226077143290552,-0.012386688088392432,0.999850431451596,0.7527814970582558,-0.9970629539186427,0.1061438686225807,0.9907625845929305,-0.5968657278100756,-0.15496431561483748,0.5482107858482899,-0.8522418350434193,-0.49762436587627457,-0.27089486564006526,-0.9541451714655986,0.327529950158734,-0.9039288308747201,-0.40066731206502515,-0.9119696704733066,0.3456012660788064,0.42802005419174044,-0.28931758398806307,-0.480887340858517,-0.8621241819112769,0.5320603461498755,0.8305427375206454,-0.5813587753014862,0.9879778030414266,0.12520605598647128,-0.9954096444164144,0.7652751784530896,-0.07621440709307518,0.006804263467396559,0.7092093015084091,0.6836392103016435,-0.7497879949961489,0.9974000749047545,-0.10163263784533963,0.7814515381797486,0.160477122516017,0.9818420561931661,-0.5519985870733395,0.8498601932058036,0.50155353394025,0.26652591358800004,0.9554931110233267,0.9063023530086621,-0.9363065319442238,0.3788172460560777,-0.9260084567894168,-0.34985398637408194,0.9467746993697301,-0.8927211965896181,-0.964205227732665,-0.23642417200036256,-0.5282144138120687,-0.8330604091489795,0.5776622841071501,-0.987266430275604,-0.129704837455242,-0.7616696766110049,0.07064679697661867,-0.9991586790537146,0.7288486843999614,-0.7060043027460502,-0.6869424687083296,-0.037897962876123875,0.10718480694817098,-0.7849227503106143,0.9919519761238975,-0.15599849480213912,-0.9826923915217626,0.5557750318953516,-0.8474610669848842,-0.5054723834197045,0.877464332748788,0.45338883457041224,0.3189454149223129,-0.3997078881750259,-0.3746156304608057,0.9242866684311251,0.4289659853340186,0.8901916859343976,-0.29798915477585036,0.9629926197823026,0.24082891329136963,0.5243576143888854,0.8355609420201097,-0.5739539085242098,0.12416731504488585,0.6215280254572296,-0.9945004965202044,-0.07517049959683106,0.998962383165229,-0.7319467092823319,0.7027847791830923,0.04347602168951834,-0.7437547760554596,-0.6460846283112639,-0.09260399640458403,0.5996613511257197,0.15151665769276332,-0.8118319521846806,0.8504114580159512,-0.9710637674000511,0.5093808336911811,-0.875279764932816,-0.4574269539809197,-0.314643260502964,-0.9394537464258593,0.37040630780579975,-0.34887304424674553,-0.4248643248960865,0.9438156766568432,0.47782544312547615,-0.9617601999473295,0.8689389509993379,0.976316211509726,0.1872776115730676,0.5702337248459902,0.8041969874778966,-0.6179683523613291,-0.767516311504777,0.07969265571582056,-0.9987455353773218,-0.7067453459167509,0.9999570231891787,-0.6935065199433447,0.7407151832997779,0.6495399745318045,0.08808677148953604,-0.6032849440886683,0.8150789670038628,-0.9843323935821142,0.20545860736207594,-0.8426105591830906,-0.2631616314060735,0.8730771897704236,0.4614556626339158,0.9375260646893301,-0.40800670200760025,-0.36618936469049274,-0.9192625185936584,0.4207539236196401,-0.9423070239522499,-0.4738360656168922,0.9605079935826231,0.5252487695716647,-0.975324863308096,0.8405103860680988,0.9867054297448715,-0.8068846037168783,0.6143959656501436,0.7704159734883392,-0.6601254574276092,0.9985081401512559,0.024944840181374335,-0.9999887881430146,0.03441137858689583,0.9979462359266897,-0.6529819576062929,-0.9923876799033599,0.6068961255217108,0.14254372417540848,-0.5586720529077587,-0.2010174982977517,-0.9731902541911653,0.2587830395876586,0.9578296992595372,-0.3156368261961786,0.8984857910183582,-0.9425236508508664,-0.9229493486430687,-0.35736016285710537,-0.41663486606897837,0.3013176996667936,0.4698369397620971,-0.9592360264501335,-0.2540130474009188,0.9743134495075685,0.5710934311876346,-0.9859581327295716,-0.13765743395793065,0.994129049105803,-0.7732997855141185,0.08873195634213003,0.734319430796113,-0.700298518163766,0.9999999800809464,-0.029877948478514667,-0.998226518150907,0.08912956439081227,-0.7735528263684717,-0.6104948211311215,-0.9841472599003606,0.5624282159436346,0.19657225365087033,-0.5123800413316298,-0.25439912376196244,0.868618199032402,0.3113296847779907,0.9406435764802138,-0.36716335668566275,0.9211939424967702,0.36159273768869954,-0.9426569607803299,0.8983104741112975,-0.31525801788974916,-0.8706603666508698,0.5175078344571401,-0.973281990916209,-0.5673642169255172,0.9851905513545005,0.14214859943523067,0.6072133456243376,0.7761676882527389,0.9985647574854258,-0.7373907711488388,0.6970534599336569,0.6960158495981338,0.025343903683732485,-0.7315052232395559,-0.0846109372774719,-0.9934640220029503,0.14357986625708288,-0.8071203444178568,-0.5661728080051467,0.840726598258968,-0.9752366546619599,0.2500099741203663,-0.46454804261452054,-0.3070161382974337,0.8944664396362807,0.36294061102439673,-0.9194195844003554,-0.36581787338374383,0.9411333935743873,0.3099551274594999,-0.9595313642036359,0.8728824824859346,-0.5136213568062469,-0.8423955190518133,0.20506791767627167,0.5552364435163045,-0.6116395233743841,0.9931066073797444,0.08768912649315988,-0.9983115607126632,0.7404469409794122,-0.693794061050845,0.999960644411337,0.7353002816474632,0.6556203534701465,0.08009056944245652,0.9939715403132184,-0.13908962312767456,0.8044341869365795,0.5699057520538793,0.9739867745942347,-0.5201491305410474,0.8691364484498079,-0.9616507880937568,0.30269627549816297,0.9436836803003043,-0.42450292175342913,-0.9223917486906034,0.4134606987743137,-0.9395904641990848,-0.31426432057360115,0.9582442151053006,-0.8750866402944617,0.5097243122965371,-0.19960070629040685,-0.5598708477916816,-0.8115988041622435,0.15112206467758488,-0.9925647340121844,-0.09220651463116643,-0.6463892646766445,0.6978037329840909,-0.9999945903490551,0.7025007386225441,-0.7322186436131704,-0.6590385213338702,-0.07556855388440817,-0.9944586094019056,0.13459651847315451,0.9864693794318616,-0.1931502672631692,0.8357801893810225,0.2510235013615375,-0.8668842451774403,0.9628849503467775,0.8949340599771515,0.4194416180731393,0.35447280613102894,0.9241342244612121,-0.40932653434155014,0.9380282043974887,0.31856704825034754,-0.9569373518124549,-0.5145193424880159,0.972474979549396,-0.8472490865924434,0.5561068470828942,0.8142403168288522,-0.15560417982932603,-0.77836278324741,0.6506388049808386,-0.997743557269089,-0.03749905692268323,-0.6872325098464347,-0.021856010102888693,0.7291219414641804,0.6624431306355962,0.9938562139976025,-0.616830777994429,-0.13010064473127264,-0.9872028503357609,0.18869793006884486,-0.8332811673445569,-0.527875415345362,0.8646142072817504,0.3036939066886127,-0.8929010041098947,0.9466461259716662,0.9180418966631321,-0.9258576877905583,0.3784477771779555,0.9018072310378852,-0.45871241617888286,0.9556108012115195,0.2661411422347828,-0.9714081101904136,-0.20848138346007955,-0.5523314054508232,-0.8168650779286567,-0.9926916178568518,0.7812023951366979,-0.10123550704678447,0.9974287622839522,0.04203124343715675,0.6839304925172471,0.01732110631841546,0.9988954790331845,-0.07661242966438302,0.7655320771984755,-0.9953713602530798,-0.8023567624734668,0.987916011272007,-0.18424171074547824,0.5231257145449508,0.24223219938264529,-0.8623263814647872,-0.48053730003728956,0.890849578370119,0.4276592447127376,-0.9162340986651726,0.9275621032214062,0.9383905066000217,-0.9037580322392478,0.32715275334230215,0.8767698050695429,-0.27051058047625254,0.9703212558128615,0.21291533399105506,-0.9829592466516998,-0.15456993574624187,-0.5971859665774562,-0.7840259351564907,0.6437233032745658,0.7458165255426559,-0.046562565232495454,-0.7049794255295481,-0.012785846182551094,0.7228835999675832,0.0720892099965995,-0.762605903212548,-0.131138586243315,0.7996413630561245,0.5764812634742403,-0.8338594946955086,0.9779375659502568,-0.5355582599287947,-0.9638207758655527,0.29503842614582015,-0.8887798249623119,-0.35120833329607604,0.9144074507571867,0.3774785255154409,0.3968738550661891,0.9056902402037745,0.9559187308918604,-0.8789420808997772,0.5028040692129487,0.8490971979534375,-0.21734490416236615,-0.5447465103429759,0.15904959669073943,-0.9915560436035517,0.7868333452174031,-0.6402456515670067,-0.7488303581735025,0.6846938884743508,-0.9997703352472733,0.008250323000320628,-0.6650526465510472,-0.06756450721972378,0.7596640399473389,0.12664064548429413,-0.7969095124198536,0.9892813449715401,0.8313472816528197,0.5308353675446205,-0.8628560151301469,0.965019874063923,-0.2907015364774799,-0.94776473660636,0.4358416781769909,0.3374503841549663,-0.401991844202857,0.9352170199275186,-0.9076038151796749,-0.9545770555935746,0.8810962740378615,-0.49887818216133256,0.9680876818532371,0.5494196443074778,0.8188725812725323,-0.16352598546866765,0.9909576512408496,0.1047058268483183,0.6367548279277935,-0.9963612832575032,-0.6813810421052758,-0.7113841292733044,0.723606587537474,-0.9994423573583031,0.06303841442158174,0.9957005934889694,-0.6310088425685708,0.7941612667676907,0.18081145536240326,-0.8288179650975211,0.9797923257729088,0.8605545390602398,-0.9661991186704805,0.28635866613475186,0.9492017604652467,-0.34270032517877774,-0.9288601369246039,0.385863305628528,-0.9336013994943884,-0.3304476354052066,-0.44251611176790406,0.9501082776195628,-0.9694716760449731,0.8538541232774474,-0.5456241519439982,-0.8214675736360447,0.16799900998617642,-0.9903388716620494,0.7923995447654638,0.9968215682159952,0.05004735773206698,0.6780541775160145,0.7145645607899884,-0.7204685034536745,0.999583531162797,-0.05851102471859651,0.6266681179160748,0.11763704032942289,0.9891279308515039,-0.5875462443032944,0.8262715970658663,0.5385013367413554,0.22459051879844874,-0.487559159885844,0.8871753512173316,-0.950619256162272,0.3384357016366446,0.9305307673876712,-0.39004383107882923,0.9319665718494694,0.4475155251376567,-0.951834816756252,-0.278227250069262,-0.490995698405949,-0.8562062604885845,0.5418174343203067,-0.9794625201600649,0.991097577441808,-0.7889817605881259,0.11372308661996934,-0.9964499656886899,-0.05457692132656965,-0.6747133631509722,-0.717730291393774,0.7173155969937085,0.6751526725185495,-0.7573905560404113,0.9964999113643339,0.794797046603985,-0.9897847743809564,0.5912104967068487,0.9795823883759844,-0.5423177426304476,-0.22016832017392093,0.4915142731476956,0.27765534093510547,-0.880318391919157,-0.33416411537337404,0.38489726044136735,0.38949554953065424,-0.9303125706264741,-0.4434546975009039,0.950434309633971,-0.8874499159773106,-0.9672074407398829,-0.5465011955287522,0.9805728681826338,-0.8266068045585234,-0.9904835023575145,0.7917604924413406,-0.11822825339316304,-0.6262040449420594,0.059105362096612914,0.7138317823895424,0.00022577155875839675,-0.714147933023098,-0.059556109766808474,0.7544210839481055,-0.9968688224501808,-0.7920362285519775,0.9904212548241955,0.8268608396635432,-0.9804841957034436,0.5461229912829021,0.9670926557292213,-0.4954592743652137,-0.9502938165069458,0.443049935657323,0.3298856542693635,-0.9049927913991991,-0.3853139771679562,0.9286394298535774,0.4393847465613174,-0.9490142489922906,-0.49190745816756254,0.9660454634434623,-0.8608576420546243,-0.9796730681560262,0.8291509373868245,-0.18139697808724994,-0.7945229352107209,-0.9965375559884383,0.7570956382786632,-0.06363258687746824,-0.7170009119294458,0.0043099930706423295,0.7109655767109748,-0.9998836550034114,-0.7514360909648229,-0.11417168874012756,0.789259115743349,0.17291333737779127,-0.8243013914636952,0.9813658312877879,-0.5499170044124002,-0.21131042526562344,-0.8855600786133576,0.2689291667658184,-0.44711167527939005,-0.9318027724979769,0.9030538467312574,0.9086263089580668,-0.3380107698042479,-0.4353057560510014,0.9475746640464685,-0.8915944612614376,-0.9648636114555259,-0.5388817631977335,0.9787531130738307,-0.8316780118884483,-0.9891942328577275,0.5714221397818185,0.9961501842393751,0.6795916740782744,0.06815850252942393,0.7201552904327981,-0.008845669029492905,-0.7077685935287402,-0.05049832988282562,0.7484356385015605,0.10966441107400506,-0.7864657653123255,0.991633074493362,0.8217249847080738,0.22663035643420887,0.5536997039637742,0.9693608573417795,0.883443994778242,-0.26455773565173696,-0.9096863345855117,0.32130845976609035,-0.39742025681152515,-0.37692713715579085,0.9252358677388848,0.8843748258734042,-0.2859260033346768,-0.48398919890875736,0.9636619090906058,0.5350553779646056,0.2482216021441923,-0.584236428665683,0.11164260073069585,-0.7999987265046024,-0.995742318446952,0.6155373160946269,0.9994573330497882,-0.7232948530037926,0.013381163004213471,0.681050475204688,0.04596783497613874,-0.7454197882873663,-0.10515487725491371,0.5895204984673668,-0.9922083887882245,-0.8191316724017303,0.9830685150900781,0.8517211128402243,0.2796662251597949,0.5072327951871418,0.9544424146131141,-0.4552074755333796,-0.3170099028275651,-0.931078476922118,0.9123772441731236,-0.3465343693251865,-0.42712099217473776,0.9446370401112124,0.48001509265795855,-0.23298187011993948,-0.5312179849052587,0.9768528138627929,0.5805492688533983,0.19476135932617575,-0.6278351385638189,0.9953139670022928,-0.7659149997837831,-0.9992976442827849,0.7264195350514345,0.9997605564206872,-0.6843647201669687,-0.04143639436184867,0.7423886023680706,0.10064318005860469,-0.7808305817891213,-0.15949537570682312,0.5443677904153067,-0.9838895282782903,-0.8493356330051047,0.9715492877648995,0.8791573450832477,0.3318615412569192,0.4592413696084072,0.9366553413236434,-0.40572818306897496,-0.36850927884343865,0.3507855188834297,0.8885727766163041,-0.2946069532280111,-0.47603111093830186,0.23739041665609523,0.5273696629673268,-0.1793374967414091,0.8391563672931225,0.9871077323540355,0.6242982861393545,0.1407157502473214,-0.6695468545081481,0.9991173967189503,-0.7295292722908694,0.02245123176758486,0.6876648855251186,0.9970589429971121,-0.6433776905274144,-0.9907554837001951,0.7779888646309607,0.1550160363815264,0.6129379647303691,-0.21335650180262747,0.4975789542365054,-0.9726135322449736,-0.8769868674136704,0.9571100142058779,0.9039512202922069,-0.9382343681577562,-0.9277307363353773,0.9160530975263198,-0.3550294516447002,-0.4189010794173101,0.2989383812605597,0.862097653414393,-0.9599379490020079,-0.5235104913232858,0.18379787883892273,0.5731391939816392,-0.125154114391804,-0.620748589872317,0.9943958428278601,-0.7717158881333631,-0.9989165940665619,-0.7092462095815371,0.9999179226939272,-0.6909509033840219,-0.03237104893377754,0.6468434203627753,0.09161366685796722,-0.6004569529166617,-0.15053350787309105,0.8112508374393202,0.20892298325556927,-0.8445123019972268,-0.2665763728870798,0.8747983472770322,-0.9584142913309464,0.46728073070474846,0.9397940924648738,0.9260282190754062,-0.9178627737328708,-0.9467915504753093,0.41477815348346997,-0.30326365916008186,-0.46803384914765184,0.24619276745604465,0.8330314470448448,-0.9738516887461104,-0.5694164313714621,0.9856151681161092,0.6171861227914828,-0.9939060889868817,-0.6627813195551351,0.9986952404567823,-0.735703656744334,-0.9999657491971744,0.6942227061396231,0.9977131389012117,-0.6502958425289578,-0.08709603662004023,0.6040778307825534,0.14604788240168143,-0.5557315080347185,-0.2044851664844627,0.8420745500560467,-0.97468197026778,-0.8725918296982976,-0.3189950336330724,0.900034759155409,0.3746641709877596,0.41812725628211106,0.9196535665222617,-0.3634953176806918,-0.8947324909229738,-0.9630067291585368,0.46402073360629725,-0.2505863906269049,-0.515759916721216,0.19270720738996286,0.5656819540166423,-0.13414907046751368,-0.6136109581883658,0.9933958872708685,0.7249789615182914,-0.9984533404435738,-0.702822022564267,-0.036052637510150344,-0.6974802264803173,-0.9980094508148387,0.6537348859984293,0.9925096719429652,-0.6076862808062856,-0.14155925225117633,0.8059134070704603,0.2000431427896064,-0.5093357807311826,-0.2578222333836182,0.8703673600726969,-0.9609636660729339,-0.8980487333924542,0.942855505541528,0.9225660657530791,0.42491171760185026,0.36771707678506355,0.896748969865809,-0.31189540874837063,-0.8689130390988858,0.25497485842216405,0.5118686732176696,-0.19715597054967635,-0.561935838747503,0.13864245493265612,0.6100231696157086,-0.07964046871290542,0.7802979982606517,0.9981908990036051,0.6995882069431804,-0.9999996840172108,-0.740750354306294,0.018768269175481384,-0.6571604800189007,-0.07805549357866157,0.6112822287503266,0.984323161132896,-0.5632502836593143,-0.19559700355784912,0.8371471240605307,0.2534371622183076,-0.8681249841647921,-0.31038440100481246,0.40795890389298883,-0.9443571313278584,-0.920806500918457,0.9231783548691275,0.9423245479560433,-0.8987469997709768,0.3162017028540247,0.8711491435538609,-0.2593580805567921,-0.8404820200807186,0.2016006775709952,0.8068536769787664,-0.9832242829711527,-0.6064228308859704,-0.99901184329136,0.6525309261392283,-0.024892503033424537,0.7448515579909992,0.9999857916358508,-0.7039521521411225,-0.9985404720848823,-0.7764523190388962,0.9935770550904791,-0.6148656006343522,-0.13257334735557516,-0.8456317672544392,0.19114684026070955,-0.5171214059861329,-0.24904687702776895,0.8658647481075357,0.30606946194799695,-0.8940212957715806,-0.36201369078582757,0.9190279921046495,-0.9249122779102628,-0.9407967325212018,-0.46988315425480004,0.9592508205305622,-0.8733673256427076,0.2637359668536792,0.5040546740814669,-0.20604123701186597,-0.8095248849012235,0.14762057450188545,0.7732665902719603,-0.9917427019397685,-0.6490871849702029,0.029426603915995473,0.6930774641251661,0.029930278469246237,0.7071664243127112,0.9987751705164674,-0.6639710380886299,-0.9940800903904317,0.6184363227367696,0.9858826278148695,-0.5707227079744481,-0.18669274445249448,-0.8736126436664224,0.2446514681344221,-0.4694382907328249,-0.30174822604867363,0.8919799667711292,0.3577818526304452,-0.9172305759013568,-0.4125549279814605,0.9392495618432111,-0.9026875484248658,0.3247946867179228,-0.5175526314290096,0.9732940106088291,-0.845362696710682,-0.985199526678792,0.5506284373393298,-0.1521051248969047,-0.59918479949455,0.09319678946209188,0.7373554071728088,-0.997280382228206,-0.6898006708753558,-0.025396240237273857,0.7315409186645234,-0.9989893209002026,-0.7707037724394574,0.9945626742355755,-0.6219943215962322,0.20209420237633072,0.5744413460765356,0.9752250746426983,-0.8296269427420272,-0.24025102596609793,-0.8989678279574794,0.29742078220869417,-0.4203442521942663,-0.35354265374079086,0.9154142892872659,-0.9283230033665404,-0.3099053519731539,-0.4618562080499804,0.9566481639976899,-0.8777497405508478,0.2724753717765225,-0.5636665749506788,-0.2149095478125749,-0.8148172824681752,-0.99311274260301,0.5955472557426722,-0.09771185224186908,-0.7404117524656932,0.03849289621008285,0.6865096861862603,-0.9998206800257249,-0.728440921921034,-0.08014275455674831,0.7678056856732021,-0.9950247966975945,-0.8044652859439325,0.11907426546867231,-0.5781481660551712,0.25546206760925855,0.5287198535201978,0.9616364274517039,-0.47742873420176096,-0.2930872194576277,0.4244555190082209,0.3492961813309486,-0.913579169629289,-0.4042744890276029,0.9360972824766229,-0.9065538126067919,-0.2573353396934572,0.8799138832096387,0.9711715060870609,-0.8501738062776548,0.21933711672246828,-0.6080863867591599,-0.16106474560084538,-0.7818228888821551,0.10222490477161741,0.6386761232468608,-0.9965707741615643,-0.7024634786310211,-0.016326689614627816,0.7253259387828472,0.07562075748660266,0.6740842515060834,-0.13464839530288958,-0.6290718570512066,-0.9880696692937204,-0.8358089336148765,0.17330777870671887,-0.5325643535612894,-0.9628708182068437,0.4814092635948717,0.2887476269509292,-0.42855805339412556,-0.3450425227646423,0.37419693044155955,0.8998150376642016,-0.9344922386406461,-0.45379125451405544,-0.3376338267817384,-0.8820599231831512,-0.20399189152227284,0.8525531494634557,0.9827759373867496,-0.8200426266325628,0.1655396315812809,0.7846428970555078,0.9977470709149144,-0.7464786824652648,0.047556020825083194,0.6798854136057428,-0.9996077559448998,-0.6624039111532773,0.9995084418208595,0.7619621833216607,0.13015255299516967,0.6325912480388363,-0.18874934269528268,0.8333101097526842,-0.9781448427166494,0.5363978970246215,0.2270204056316557,-0.485379888836502,-0.9466292524860234,0.4326517709495288,0.34078176555343853,-0.37839931716248226,0.9332957666590762,0.3228136718749178,0.8745541048072114,-0.9525966384713838,-0.5019441247659768,0.9689690813729287,-0.8549149528630998,-0.9819276139290793,0.8226300190951014,0.9914265801233488,-0.787446762577071,0.1112446077317252,0.7494891423555053,0.9999242516809648,-0.6765522619971139,-0.007255795426847816,0.6657950495533904,-0.9996403601842176,-0.620353451324106,0.9962883028172578,0.7963083075014156,-0.9894260829390609,0.5891969558622457,-0.2422829932822346,0.8623528895788206,-0.9652801465929712,0.48934052823799984,0.9480815020468515,-0.8814989110427803,-0.9275425391042679,-0.9384085974309342,0.3917916653205143,-0.3271032804203203,0.9122132311872693,0.2704601785927939,0.498015980312083,-0.9678379553257145,-0.5485883736133224,0.9810590890324952,-0.8252004873874224,-0.9908237163987995,-0.6437633662712771,-0.11575107259751169,-0.7524841828208195,0.056615231933242985,0.7120827557252419,0.9990961036571947,-0.715891713386941,-0.062045803975992644,0.7560559771491323,-0.9966684888856359,-0.5764384841745107,-0.17983320111165849,0.8282610821068562,-0.9799907700631639,0.5440317989713026,0.9664550346562518,0.888803819110618,-0.9495142464931707,0.44081241886771166,0.9292280920314981,-0.9060511214413917,-0.9056680442561994,0.33138615938928123,0.4416240131186083,-0.27482411630202025,-0.49407759005263113,0.21729380197489892,0.5447904132014886,-0.9801703805653739,0.8277539786266477,0.9902004682136266,-0.7930058352596557,-0.9967418422512666,-0.6847320443077838,-0.061143136937468215,-0.7152599693711017,0.0018156958589345784,0.6725361641715375,0.9952651158892434,-0.7530795118160377,-0.11664933035845021,0.79078831540465,-0.9907010741761213,-0.8257109821981112,-0.23347187035788664,0.8577244712699906,-0.9676100396018069,-0.8867159914243298,0.9509274563487765,0.9125833985860637,-0.3279577793459164,0.39095942288615626,0.90758183452535,-0.927880144042788,-0.881071512971023,0.2791823999869389,0.49012903501309507,-0.9655159922051865,-0.5409812446821557,0.16347433656770127,0.5899274477475094,-0.10465376107442285,0.7957609280525042,0.9963657439851115,-0.6210625263471378,-0.9996642042251193,-0.7236427215281173,-0.006351432127482443,-0.6758860017029583,-0.052989297391784186,0.630968227207936,0.11214333291426748,-0.583827400398976,-0.1709022605929994,0.8231438947337351,-0.9817560514574779,-0.8553837689536191,-0.2864088267169434,-0.5011617176068484,-0.952321102539354,-0.910719380466962,0.9325418118859987,0.9336201571365521,-0.9094769528896377,0.3399313762872405,0.43346695158726384,-0.283534939983505,-0.8538268715121299,0.22613954212000645,0.5371609464222871,-0.9783324864688591,-0.5862589496393297,0.9888928701694754,0.633291422044576,-0.049995069865746776,0.761376173083883,0.9995363862625538,-0.7215701859408296,-0.9995820189964614,0.6792219340650139,0.04845936227033683,-0.6344806204991,-0.10763502831764567,0.5875038796157273,0.16643147035898337,-0.5384572217338291,0.9826084042662601,0.8530254686160581,0.2820601325362174,-0.8824856515002734,-0.3384849651779002,-0.45298516497750446,-0.9341699106392933,0.39929275373841633,0.911353360360325,0.9518508675966153,-0.8853258937321625,0.28788164674583994,0.4822017557396072,-0.23055547902865894,-0.5333295970178206,0.17241700909237304,0.5825783902812258,-0.9882085472120339,-0.629774620225721,0.9955520601777132,0.6747520032197963,-0.9993880045914594,0.7247030590430563,-0.015422419343708176,-0.6825438926267451,-0.9964955335776373,0.6379799604640154,0.9897773090188053,-0.7823864531844367,-0.16195725608929087,0.8179589687397852,0.22021938862353524,-0.49146867948979833,0.9709555201583301,0.8803432262943316,-0.9550495896411948,-0.9069351736000252,0.9357787904846794,0.9303317708875656,-0.9132110183336185,0.34844861936099547,-0.49589691167357974,-0.2922224308480738,-0.8585139376194093,0.9618841313022503,0.5294872752920522,-0.1768830705654283,-0.5788858453942533,0.11817626700999478,0.6262448618983213,-0.9951144913765877,0.7672259483275617,-0.00027812496173719843,0.7141845791557634,-0.9998031448731673,0.6858518090446792,0.03939659434419951,-0.6414661751098983,-0.09861186871449056,0.5948205020742564,0.9804739017893186,-0.8153412368809725,-0.21579271218435436,0.49541379788716783,0.273345425082946,-0.8781826895701301,0.9563843744186203,0.9050150627056109,-0.9373684183222751,-0.9286588508338895,0.9150498885914625,0.9490307512217342,-0.42116468654034384,0.296557202986185,-0.5427410342567905,-0.2393730322692362,-0.8291216693991615,0.181345492979459,0.5751813909460483,-0.9867789238198545,-0.6227022196809655,0.0635803394853977,0.6680291192279083,-0.9990295627574541,0.7309240126167075,-0.05508005987948296,-0.6891456152642365,-0.9972133203584028,-0.7892912628089027,0.09409719934364459,-0.5984604947893564,-0.15299892370787968,0.5498732770845235,0.211361596188498,-0.845845466459427,-0.2689795911002257,0.4470648456904595,0.32564990643537095,-0.9030763327131633,-0.3811728790885586,-0.41173092615598184,-0.916869933302326,-0.28152642456367094,0.8915707525983299,0.9648773660549392,-0.470236638550605,0.243774467195464,0.831648941090721,-0.18580418452794853,-0.7972374291929156,0.1271792691791934,0.6191467664573053,-0.9941779449903526,-0.7201189659777243,0.9988195099688555,0.7078055773256245,-0.99994199438657,0.6924252435211291,-0.10971644856767927,-0.6483989418250587,-0.9916263149109553,0.6020881752291354,0.14851498989814194,-0.553656107665237,-0.9693479958677472,0.503273376917049,0.26460822333405576,-0.8738074597356656,0.9589948891227649,0.9011190235086526,0.37697562860922085,-0.9252557289544482,-0.4312650450443471,-0.36117050046355165,-0.8936157439353308,-0.9636758926691911,0.8654119503740391,0.9778239874916684,-0.517895267796178,0.19025905348113628,0.5677370584600104,-0.13167689182036246,-0.6155785753745566,0.0726308009054189,0.6612512614076296,-0.9985889082202006,-0.6810121391990768,0.9999805616718082,0.7454546858010508,-0.9978490438991622,0.6518453512648171,0.9922018647503221,-0.6057034687604294,-0.9830589205911153,0.5574275477423332,0.20248641026598724,-0.8409717073523016,-0.9544267913020618,0.45516086020261476,0.31705955552574855,-0.40153040373555726,0.9420214647346757,0.9235255971419482,-0.9204533966942697,-0.9446542168664285,-0.48006101955989783,-0.3095245564418558,-0.8676757420002627,-0.9768640115744817,0.8366521036754878,-0.19471000818790485,-0.8026807394354685,0.13617180544036875,0.6119977198419944,0.9992996047471316,-0.6578418914386587,0.01786403665910268,-0.7401425038293872,-0.9999985561103872,-0.6398584919890701,0.9981361153420841,0.7808632881331585,-0.9927570017760795,0.609306301004913,0.1395380482840836,0.8493632667523978,-0.9715368871861891,0.5110915402908459,0.2558492462962722,-0.8693603220457569,-0.9366370031323141,0.8971488289176669,0.3685579473234992,-0.3507364917517706,0.9222167416518741,0.9431564624547776,0.47607715135889594,-0.9612134931985304,0.8699216827195045,-0.25694831889135783,-0.8391278916373976,-0.9871161105434731,0.8053776518455851,-0.14066391756424598,-0.7687898735291282,0.9926197511157901,0.6544189875262519,0.9998486150733537,-0.6981280265591373,-0.03695641895791863,0.7393773932060855,-0.998402651884596,-0.7780217560605078,0.9932917145672565,0.8139249617686222,-0.9846811724373974,0.5649359462585434,0.19359456121779972,0.8770120227736692,-0.25146181722525285,0.46321941836099934,0.9382162525735057,-0.8951360252109845,-0.9160320995711833,0.9200083697427991,0.41894861740338335,-0.9416393042526716,0.8996402440876738,0.9599526177731694,0.5235550967132542,-0.9748837881108727,0.8415864160142903,0.9863802091735288,-0.5564831512171511,-0.9944013763139252,-0.6662099838895964,-0.0861950535950721,-0.732588366255349,0.9977738587693652,0.6948733619978373,0.0324233748566791,-0.7363158984825073,0.9986486480431758,0.7751642175544338,-0.9938059921230752,-0.8112814472731904,-0.20897418104403992,-0.5686727502255232,-0.9736458282441197,0.8335314348656576,0.24706921476826516,0.9020248696481932,-0.3041253288316688,0.41395506431790635,0.3601099364596723,-0.9182213465169367,-0.4148257904595239,0.30321377083515544,0.4680801137616369,-0.9586719930059088,0.8743598269800757,-0.2657046059575203,0.5694594676667871,0.20803847153775445,0.8107217138234205,0.9939118585485107,-0.6011799045373093,-0.9986979126082701,0.7356681965881082,-0.031467125526118765,-0.6916044016355269,0.9999291007604175,0.7332392553503971,0.08714819095817172,-0.7722907314037809,0.9942998238631765,0.8086212420845073,-0.12605133645859273,-0.842102786294656,-0.26225252166583957,-0.5227397245548125,-0.9596841365462271,0.4712398570062082,0.2998012878452866,-0.4180796984803973,-0.3558747745926821,0.3634465449588955,0.4106944292023943,-0.9385469017271312,-0.4640671088904059,0.2505357072539425,-0.8765519392143689,-0.9728233389616974,-0.5657251250894882,-0.2124728543864957,0.6136522960410319,0.15412252108538624,0.7774203417518171,-0.09522917719776135,-0.6440697777143665,-0.9999928059441114,0.6974427088638044,0.02335537876510096,-0.7301475271062928,-0.08262878902376031,-0.6688748314468841,0.14161107825173008,-0.5594532582024833,0.9869625754286941,0.839647909820242,-0.18022714531105233,-0.8703931378504364,0.9609491798988788,-0.47523557513033104,-0.9428380599963342,0.42219573138616606,0.3516322912262066,-0.3676683908757283,-0.8967258001828692,0.9369717210244561,0.4600445566521194,-0.9560516012378909,-0.5119136474262985,0.1971046444604166,-0.8488579036186585,-0.9840508094508434,0.8159990594335325,-0.1586025036563152,0.6560007577953741,-0.9981940453464473,0.7417823889532926,-0.04053277001339863,-0.6850238628131126,-0.01882061333288183,0.6571210177034152,0.07810768714689863,-0.7664961529633733,-0.13711956885589202,-0.6271309577148796,0.1956483454548546,-0.8371757590623484,0.9766589552541276,0.868150968360127,-0.9621944534071127,-0.8960674736917797,0.9443399098529741,-0.42630307835505277,-0.34738257364190217,0.37188267266010006,0.4024064439042097,-0.31615203516531704,-0.8711234358696711,0.9547118881470996,0.5080119942147031,-0.9706828336865969,-0.5582216005944235,0.14308117253029026,-0.818612577670781,-0.9923206596769376,0.7830941155762446,-0.10425546414738508,-0.7448166251969305,-0.9999860693465298,0.7039149673069475,0.01428546069954403,-0.6605332482515844,-0.07358497834133038,0.6148243122261113,-0.9956585446963844,-0.8005410313596687,-0.19119822808265027,-0.5835022064843649,0.2490975805102562,-0.8658909381858867,0.9634199314516095,-0.48319759795883405,-0.945822331571804,-0.9190486281528532,0.9248923728946642,0.9408144775308841,-0.39824999037391984,0.3204518995664688,-0.9093103754435715,-0.2636854666646416,-0.8429028608901099,0.9695826147910181,0.5544525730485171,-0.9823966240781083,-0.6028517872271878,0.9917494145681358,0.6491270100497686,-0.9976080341382454,0.7478355381444897,-0.04959507895514795,-0.7071294070189398,-0.998772578760308,0.7207824693147807,0.06906075565385895,-0.6183951807559324,-0.12812817954308484,0.5706797175680937,0.18674417714215613,-0.8321798384911326,0.9785672758060666,0.8636130938238736,0.3017981387244635,-0.8920036332102546,0.9472852946545962,-0.43449137665676874,-0.926607487321923,0.3802881971830301,0.9026650196942011,0.9579743655180841,-0.44792044427639877,0.268057990197364,0.5001774139081558,-0.21042637660736593,-0.5506721386131149,0.9815392061477464,0.5992267133720426,-0.9911577659540938,-0.6456700687790393,0.9972842393604148,0.6898385737600626,0.05412474953385132,0.7103292987832854,0.9989869663421503,-0.6673168714866894,-0.9945572208022474,0.7576861664897225,0.12362848460818501,-0.7950717832144371,-0.18228628426766036,0.5248199128008193,0.24030184565178941,-0.8613174821367414,0.9658114007089202,0.8899441648572617,-0.9487287690034507,-0.9154353609563466,-0.4084666971016708,-0.38447926699265983,-0.9046076719566499,0.3290317618344063,0.877724655816489,-0.2724249989069593,-0.49624464799595636,0.2148584174053276,0.5468803750640264,-0.15653483819543487,-0.5955893114779728,0.09765974922759112,-0.7914838015617686,-0.9969399272080288,-0.6865477524874394,0.9998216700689464,0.7284767886916222,-0.0006786126492646681,0.6706881246124717,0.0600081409742327,-0.625498677423365,-0.9873526649686718,0.578105448455318,0.17782464117249228,-0.827115435708117,-0.9616220641739218,0.8590041503526752,0.2931372733979146,0.4950658716486429,0.9501527249214138,0.9136004584607775,-0.9299804913102361,-0.9361156960435679,0.9065317135024157,-0.33331158318557,-0.4397914882276744,-0.9711839848575061,0.850146240933187,-0.21928603786809062,-0.5430773604101382,0.979763807998023,0.5919396563781443,-0.9899133073183363,-0.6387164070427902,0.04297259611418889,-0.7567997177062014,-0.9997257292278289,-0.7253619781662253,0.999354080302484,-0.6740455795060958,-0.05547993522375176,0.629031159418988,0.1146215570461553,-0.5818005117720978,-0.17335933964713537,0.5325200414587504,-0.9812787178532293,-0.8566731460644204,-0.9451404269944885,0.8857703437756947,0.34509166051958134,-0.9117467602377113,0.9316383114776476,-0.3928375905904597,-0.9084371047477172,-0.9539824825572919,0.882035256336172,-0.28114211259788735,-0.48834856920085523,-0.9827856110081412,0.5392631728918085,-0.16548800026246926,-0.7846104395916543,0.9892605228991751,0.6352198296366679,-0.996189779536029,-0.6799238043870781,0.9996092207827828,-0.7198410295734333,-0.9995067991282491,-0.7619960874688364,0.9958828754284685,-0.6325507002014691,-0.9887502176353267,0.7867453746915979,0.1688904715573389,0.8646668110477507,-0.2270713917778552,0.48533411541380306,-0.969249521578676,-0.883656076916171,-0.34083098474344664,0.9098743044237385,0.39600885517317563,-0.9328868266507214,0.9103238064924707,-0.3418505660749993,0.5019894045403419,0.28549203823989067,0.8548877924111188,-0.2281276535187255,-0.5354378909792573,-0.9914334195210717,0.5846038871527717,-0.11119257912932319,-0.6317101836963651,0.9957839594493885,0.6765908138354577,0.007308147443395037,-0.7190876523517269,0.9996389548541889,-0.6807188185871749,-0.04642019269900473,-0.7963399745115605,0.9894184883491183,-0.5891546540563135,-0.979067223274071,0.8193913405873902,0.22265177622143228,-0.4892948705402932,-0.2801009680211192,0.43668949028511705,-0.9543071911473873,-0.9079831295413544,-0.3918398327408775,0.9312435864822737,-0.9121917799210958,-0.9512230490394822,0.8862732719139405,-0.28983609038379793,0.5486321451544701,0.2325414668058585,0.8251709149627113,-0.17442754389781365,-0.5809179239478166,-0.9971014189195938,0.6281875414266933,-0.056562962422152405,-0.6732439036141982,0.9993145110918265,-0.7261082448157565,0.06209805642643876,-0.7560902417806576,0.9966642176114939,0.7935883302511442,-0.10109371160231531,-0.8282904168029837,0.15994240351241212,-0.5439878703372713,-0.9664415870993694,0.8495745795497601,0.27574388840213704,-0.4407654258869458,-0.33228868499170805,0.906073274498166,0.38766274889108504,-0.9295811876099057,-0.44167098399942556,0.27477377841393014,-0.8883649511288768,-0.9667003168524206,0.47642930349400575,-0.23695049596005743,0.5936259408829414,0.17889197886505703,0.7929739397438068,-0.12020318244629315,-0.6246519752998403,0.06109088140184886,0.7152233807700609,-0.0017633425381219218,-0.7127541509712833,0.999841566554208,-0.6873360395719792,0.11670132619510545,0.6430309525264029,0.9906939497954219,0.8257405132770013,-0.15546338764809195,-0.8577513854850152,0.9675968216785886,-0.4971861003627307,-0.27138113583614887,0.8772043741499914,0.3280072367589432,-0.3909112358623879,-0.3834776895599741,0.9278996642345595,0.4375970585371932,0.35460607439986686,-0.49017466818073213,0.22166790212251172,-0.8618680913228016,-0.9792721122873453,0.8302612609687188,-0.18335273344351008,-0.7957292211701973,0.12470482098231021,0.7583936365811275,-0.06561754354377913,-0.6665085998749548,0.006299079770152566,0.6758474159938279,-0.999912018359907,-0.7501221754886113,-0.1121953559220886,-0.646498007057252,0.17095384353944124,0.6000947737378075,0.9817460953829494,-0.5515772626816805,-0.2093658097055026,0.5011164127104611,0.9523051283385443,-0.44889000949457575,-0.3237190403524203,0.39508205917175243,-0.9396392416252627,-0.33988214004929,-0.8831832345689763,0.9469371991448992,0.48621614551903286,0.3028321127295985,0.8641594582393289,0.9783433243750241,-0.8327808383109156,-0.9889006501033276,0.7984681318631187,-0.1292038939352969,-0.7613422307858577,-0.9995379788906082,0.6631203449240355,-0.010834687409661944,-0.7063619952249558,0.9999618987291052,0.634440153653407,-0.9976824287888795,-0.7852356654588585,0.9918878844974324,-0.6037168882838362,0.22469254945570552,-0.8530527890808391,0.9698475476556702,-0.5050364154666733,-0.2626389710019563,0.8728129305214503,0.9341512281722548,-0.3992447543604988,-0.37508398901713724,0.3441443833970531,-0.9194756276648368,-0.2878315092760001,-0.4822476198126862,0.963128660843235,-0.8664330465902473,0.25014797204793154,0.8352832826475882,0.9882165618918582,-0.8011906154742862,0.13370030874471603,0.764275161709151,-0.9934477431107565,-0.7246669833448058,-0.9997015879742731,0.7031440861606189,0.043980732989144525,-0.7440923797201686,0.9979807902695685,0.7824190574594733,-0.9924542483532973,-0.8179890853055638,0.9834310522187273,-0.5591212643194422,-0.9709429927487921,-0.8803680582565918,0.2582597385884646,-0.45697765279281205,-0.9357603300380232,0.898247844303387,0.9131896837515604,-0.9227406949975886,-0.42532160157724547,0.9439825090330093,-0.896548477795852,-0.23491578465186064,-0.5295316868956351,0.9764253849773331,-0.8377685424953322,-0.9875121428573977,0.5623103626251971,0.9951196587414985,0.6714362656915861,0.07918905780239041,0.7277851194090004,-0.9982180234035358,-0.6858137083737513,-0.039448907050413304,0.7410544881497761,0.09866396681199038,-0.7795863525598989,0.9930001942032028,0.815371547375197,0.21584383180499145,0.5628760494712609,0.9720184623923203,-0.5128451698295707,-0.9563690800943272,-0.9050373315314861,0.31081484499478884,-0.4075454179845026,-0.36665942185149786,0.9209830234780862,0.8894834961816156,-0.2965072042882554,-0.4742808860519974,0.9606484425967016,-0.8709267008616071,-0.9754362729502034,-0.5752242165985534,0.9867874074921328,-0.8065860777491632,-0.9946618534545165,0.6067828418624833,0.9990318672766445,-0.7308882825704842,0.024439799676168418,0.6891076778448697,0.034916269519590475,-0.6448991815841074,-0.09414932032804788,0.7767376090380719,-0.9935257108152703,-0.812737234604941,0.9850350799926685,0.8458733920729378,0.2690300146973925,0.516733760784827,0.9576844162012399,-0.46502769022875895,-0.9389207461771818,-0.9269864640119738,0.36243577983722103,-0.35688828241419124,-0.4170940720670131,0.9409501361810089,0.4702828418992333,-0.24372369285694828,-0.521814692547875,0.9744270930321183,0.5715080649503959,-0.9860423707062227,-0.6191878774438162,-0.14717267953791352,-0.7729793730099621,-0.9988220516967767,0.6494316010122203,0.9999414291336775,-0.6923874701338193,-0.03038291364774556,0.7349330301318244,0.08963273688692398],"x":[1.6470993291652855e6,4.5286443388456706e14,9.057288661220349e14,1.3585932983595028e15,1.8114577305969702e15,2.264322162834438e15,2.717186595071906e15,3.1700510273093735e15,3.6229154595468415e15,4.075779891784309e15,4.528644324021777e15,4.981508756259244e15,5.434373188496713e15,5.887237620734181e15,6.340102052971648e15,6.792966485209115e15,7.245830917446583e15,7.698695349684051e15,8.151559781921519e15,8.604424214158986e15,9.057288646396454e15,9.510153078633922e15,9.963017510871388e15,1.0415881943108856e16,1.0868746375346326e16,1.1321610807583794e16,1.1774475239821262e16,1.2227339672058728e16,1.2680204104296196e16,1.3133068536533664e16,1.3585932968771132e16,1.40387974010086e16,1.4491661833246068e16,1.4944526265483536e16,1.5397390697721004e16,1.585025512995847e16,1.6303119562195938e16,1.6755983994433406e16,1.7208848426670872e16,1.766171285890834e16,1.811457729114581e16,1.8567441723383276e16,1.9020306155620744e16,1.9473170587858212e16,1.992603502009568e16,2.0378899452333148e16,2.0831763884570616e16,2.1284628316808084e16,2.173749274904555e16,2.2190357181283016e16,2.264322161352049e16,2.309608604575795e16,2.3548950477995424e16,2.400181491023289e16,2.445467934247036e16,2.4907543774707828e16,2.5360408206945296e16,2.581327263918276e16,2.626613707142023e16,2.6719001503657696e16,2.717186593589516e16,2.762473036813263e16,2.8077594800370096e16,2.853045923260757e16,2.8983323664845036e16,2.9436188097082504e16,2.9889052529319972e16,3.034191696155744e16,3.0794781393794908e16,3.1247645826032376e16,3.170051025826984e16,3.215337469050731e16,3.2606239122744776e16,3.3059103554982244e16,3.351196798721971e16,3.3964832419457184e16,3.441769685169465e16,3.4870561283932116e16,3.5323425716169584e16,3.5776290148407052e16,3.622915458064452e16,3.668201901288198e16,3.713488344511946e16,3.758774787735693e16,3.804061230959439e16,3.849347674183186e16,3.894634117406933e16,3.939920560630679e16,3.985207003854426e16,4.030493447078173e16,4.07577989030192e16,4.121066333525667e16,4.166352776749413e16,4.21163921997316e16,4.256925663196907e16,4.3022121064206536e16,4.3474985496444e16,4.392784992868147e16,4.4380714360918936e16,4.483357879315641e16,4.528644322539387e16,4.573930765763134e16,4.619217208986882e16,4.664503652210627e16,4.709790095434375e16,4.755076538658122e16,4.800362981881869e16,4.845649425105614e16,4.890935868329362e16,4.936222311553108e16,4.981508754776855e16,5.026795198000602e16,5.072081641224349e16,5.117368084448096e16,5.162654527671842e16,5.2079409708955896e16,5.253227414119336e16,5.298513857343083e16,5.343800300566829e16,5.389086743790576e16,5.4343731870143224e16,5.47965963023807e16,5.524946073461816e16,5.570232516685563e16,5.61551895990931e16,5.660805403133056e16,5.706091846356804e16,5.75137828958055e16,5.796664732804298e16,5.841951176028043e16,5.88723761925179e16,5.932524062475538e16,5.977810505699285e16,6.02309694892303e16,6.068383392146778e16,6.113669835370525e16,6.158956278594272e16,6.2042427218180184e16,6.249529165041765e16,6.294815608265512e16,6.340102051489258e16,6.385388494713005e16,6.430674937936752e16,6.475961381160499e16,6.5212478243842456e16,6.566534267607992e16,6.611820710831739e16,6.657107154055486e16,6.702393597279233e16,6.747680040502979e16,6.792966483726726e16,6.838252926950473e16,6.883539370174219e16,6.928825813397966e16,6.974112256621714e16,7.019398699845461e16,7.064685143069206e16,7.109971586292954e16,7.155258029516701e16,7.200544472740447e16,7.245830915964194e16,7.291117359187941e16,7.336403802411688e16,7.381690245635434e16,7.42697668885918e16,7.472263132082926e16,7.517549575306675e16,7.562836018530422e16,7.60812246175417e16,7.653408904977915e16,7.69869534820166e16,7.743981791425408e16,7.789268234649155e16,7.834554677872902e16,7.879841121096648e16,7.925127564320395e16,7.97041400754414e16,8.01570045076789e16,8.060986893991637e16,8.106273337215382e16,8.15155978043913e16,8.196846223662877e16,8.242132666886624e16,8.28741911011037e16,8.332705553334115e16,8.377991996557862e16,8.42327843978161e16,8.468564883005358e16,8.513851326229104e16,8.559137769452851e16,8.604424212676598e16,8.649710655900344e16,8.69499709912409e16,8.740283542347837e16,8.785569985571584e16,8.830856428795331e16,8.876142872019077e16,8.921429315242824e16,8.966715758466573e16,9.012002201690318e16,9.057288644914066e16,9.102575088137811e16,9.147861531361558e16,9.193147974585306e16,9.238434417809053e16,9.283720861032798e16,9.329007304256544e16,9.374293747480291e16,9.41958019070404e16,9.464866633927787e16,9.510153077151533e16,9.55543952037528e16,9.600725963599027e16,9.646012406822774e16,9.691298850046518e16,9.736585293270266e16,9.781871736494013e16,9.82715817971776e16,9.872444622941506e16,9.917731066165254e16,9.963017509389002e16,1.0008303952612747e17,1.0053590395836494e17,1.009887683906024e17,1.0144163282283987e17,1.0189449725507734e17,1.0234736168731482e17,1.0280022611955227e17,1.0325309055178974e17,1.037059549840272e17,1.0415881941626469e17,1.0461168384850216e17,1.0506454828073962e17,1.0551741271297709e17,1.0597027714521456e17,1.0642314157745203e17,1.0687600600968949e17,1.0732887044192694e17,1.0778173487416442e17,1.0823459930640189e17,1.0868746373863936e17,1.0914032817087683e17,1.095931926031143e17,1.1004605703535178e17,1.1049892146758923e17,1.1095178589982669e17,1.1140465033206416e17,1.1185751476430163e17,1.123103791965391e17,1.1276324362877656e17,1.1321610806101403e17,1.1366897249325152e17,1.1412183692548898e17,1.1457470135772645e17,1.150275657899639e17,1.1548043022220138e17,1.1593329465443885e17,1.1638615908667632e17,1.1683902351891378e17,1.1729188795115123e17,1.177447523833887e17,1.1819761681562618e17,1.1865048124786366e17,1.1910334568010112e17,1.195562101123386e17,1.2000907454457606e17,1.2046193897681354e17,1.2091480340905098e17,1.2136766784128845e17,1.2182053227352592e17,1.222733967057634e17,1.2272626113800085e17,1.2317912557023834e17,1.236319900024758e17,1.2408485443471326e17,1.2453771886695074e17,1.249905832991882e17,1.2544344773142566e17,1.2589631216366314e17,1.263491765959006e17,1.2680204102813806e17,1.2725490546037554e17,1.27707769892613e17,1.2816063432485048e17,1.2861349875708795e17,1.290663631893254e17,1.2951922762156288e17,1.2997209205380035e17,1.3042495648603782e17,1.3087782091827526e17,1.3133068535051274e17,1.317835497827502e17,1.3223641421498768e17,1.3268927864722515e17,1.3314214307946262e17,1.335950075117001e17,1.3404787194393757e17,1.3450073637617502e17,1.3495360080841248e17,1.3540646524064995e17,1.3585932967288742e17,1.363121941051249e17,1.3676505853736235e17,1.3721792296959982e17,1.3767078740183728e17,1.3812365183407477e17,1.3857651626631224e17,1.390293806985497e17,1.3948224513078717e17,1.3993510956302464e17,1.4038797399526211e17,1.4084083842749957e17,1.4129370285973702e17,1.417465672919745e17,1.4219943172421197e17,1.4265229615644946e17,1.4310516058868691e17,1.4355802502092438e17,1.4401088945316186e17,1.444637538853993e17,1.4491661831763677e17,1.4536948274987424e17,1.458223471821117e17,1.462752116143492e17,1.4672807604658666e17,1.4718094047882413e17,1.4763380491106157e17,1.4808666934329907e17,1.485395337755365e17,1.48992398207774e17,1.4944526264001146e17,1.498981270722489e17,1.503509915044864e17,1.5080385593672384e17,1.5125672036896134e17,1.517095848011988e17,1.521624492334363e17,1.5261531366567373e17,1.530681780979112e17,1.5352104253014867e17,1.539739069623861e17,1.5442677139462358e17,1.5487963582686106e17,1.5533250025909856e17,1.55785364691336e17,1.562382291235735e17,1.5669109355581094e17,1.5714395798804842e17,1.575968224202859e17,1.5804968685252333e17,1.585025512847608e17,1.5895541571699827e17,1.5940828014923574e17,1.598611445814732e17,1.603140090137107e17,1.6076687344594816e17,1.6121973787818563e17,1.616726023104231e17,1.6212546674266054e17,1.6257833117489802e17,1.630311956071355e17,1.6348406003937293e17,1.6393692447161043e17,1.643897889038479e17,1.6484265333608538e17,1.6529551776832285e17,1.657483822005603e17,1.6620124663279776e17,1.666541110650352e17,1.671069754972727e17,1.6755983992951014e17,1.6801270436174765e17,1.684655687939851e17,1.689184332262226e17,1.6937129765846006e17,1.698241620906975e17,1.7027702652293498e17,1.707298909551724e17,1.7118275538740992e17,1.7163561981964736e17,1.7208848425188486e17,1.725413486841223e17,1.729942131163598e17,1.7344707754859725e17,1.738999419808347e17,1.743528064130722e17,1.7480567084530963e17,1.7525853527754714e17,1.7571139970978458e17,1.7616426414202208e17,1.7661712857425952e17,1.77069993006497e17,1.7752285743873446e17,1.779757218709719e17,1.7842858630320938e17,1.7888145073544685e17,1.7933431516768435e17,1.797871795999218e17,1.802400440321593e17,1.8069290846439674e17,1.811457728966342e17,1.8159863732887168e17,1.8205150176110912e17,1.825043661933466e17,1.8295723062558406e17,1.8341009505782154e17,1.83862959490059e17,1.8431582392229648e17,1.8476868835453395e17,1.8522155278677142e17,1.856744172190089e17,1.8612728165124634e17,1.865801460834838e17,1.8703301051572128e17,1.8748587494795872e17,1.8793873938019622e17,1.883916038124337e17,1.8884446824467117e17,1.8929733267690864e17,1.8975019710914608e17,1.9020306154138355e17,1.90655925973621e17,1.911087904058585e17,1.9156165483809594e17,1.9201451927033344e17,1.9246738370257088e17,1.929202481348084e17,1.9337311256704586e17,1.938259769992833e17,1.9427884143152077e17,1.947317058637582e17,1.951845702959957e17,1.9563743472823315e17,1.9609029916047066e17,1.965431635927081e17,1.969960280249456e17,1.9744889245718304e17,1.9790175688942048e17,1.98354621321658e17,1.9880748575389542e17,1.9926035018613293e17,1.9971321461837037e17,2.0016607905060787e17,2.006189434828453e17,2.0107180791508278e17,2.0152467234732026e17,2.019775367795577e17,2.0243040121179517e17,2.0288326564403264e17,2.0333613007627014e17,2.037889945085076e17,2.0424185894074506e17,2.0469472337298253e17,2.0514758780522e17,2.0560045223745747e17,2.060533166696949e17,2.0650618110193238e17,2.0695904553416986e17,2.0741190996640733e17,2.078647743986448e17,2.0831763883088227e17,2.0877050326311974e17,2.0922336769535722e17,2.096762321275947e17,2.1012909655983213e17,2.105819609920696e17,2.1103482542430707e17,2.114876898565445e17,2.11940554288782e17,2.1239341872101946e17,2.1284628315325696e17,2.1329914758549443e17,2.1375201201773187e17,2.1420487644996934e17,2.146577408822068e17,2.151106053144443e17,2.1556346974668173e17,2.1601633417891923e17,2.1646919861115667e17,2.1692206304339418e17,2.173749274756316e17,2.1782779190786906e17,2.1828065634010656e17,2.18733520772344e17,2.191863852045815e17,2.1963924963681894e17,2.2009211406905645e17,2.205449785012939e17,2.209978429335314e17,2.2145070736576883e17,2.2190357179800627e17,2.2235643623024378e17,2.228093006624812e17,2.2326216509471872e17,2.2371502952695616e17,2.2416789395919366e17,2.246207583914311e17,2.2507362282366858e17,2.2552648725590605e17,2.259793516881435e17,2.2643221612038096e17,2.2688508055261843e17,2.2733794498485594e17,2.2779080941709338e17,2.2824367384933085e17,2.2869653828156832e17,2.291494027138058e17,2.2960226714604326e17,2.300551315782807e17,2.3050799601051818e17,2.3096086044275565e17,2.3141372487499312e17,2.318665893072306e17,2.3231945373946806e17,2.3277231817170554e17,2.33225182603943e17,2.3367804703618048e17,2.3413091146841792e17,2.345837759006554e17,2.3503664033289286e17,2.354895047651303e17,2.359423691973678e17,2.3639523362960525e17,2.3684809806184275e17,2.3730096249408022e17,2.3775382692631766e17,2.3820669135855514e17,2.3865955579079258e17,2.3911242022303008e17,2.3956528465526752e17,2.4001814908750502e17,2.4047101351974246e17,2.4092387795197997e17,2.413767423842174e17,2.4182960681645485e17,2.4228247124869235e17,2.427353356809298e17,2.431882001131673e17,2.4364106454540474e17,2.4409392897764224e17,2.4454679340987968e17,2.449996578421172e17,2.4545252227435462e17,2.4590538670659206e17,2.4635825113882957e17,2.46811115571067e17,2.472639800033045e17,2.4771684443554195e17,2.4816970886777946e17,2.486225733000169e17,2.4907543773225437e17,2.4952830216449184e17,2.4998116659672928e17,2.5043403102896675e17,2.5088689546120422e17,2.5133975989344173e17,2.5179262432567917e17,2.5224548875791664e17,2.526983531901541e17,2.5315121762239158e17,2.5360408205462906e17,2.540569464868665e17,2.5450981091910397e17,2.5496267535134144e17,2.5541553978357888e17,2.558684042158164e17,2.5632126864805386e17,2.5677413308029133e17,2.572269975125288e17,2.5767986194476627e17,2.581327263770037e17,2.5858559080924118e17,2.5903845524147866e17,2.594913196737161e17,2.599441841059536e17,2.6039704853819104e17,2.6084991297042854e17,2.6130277740266602e17,2.6175564183490346e17,2.6220850626714093e17,2.6266137069937837e17,2.6311423513161587e17,2.635670995638533e17,2.640199639960908e17,2.6447282842832826e17,2.6492569286056576e17,2.653785572928032e17,2.6583142172504064e17,2.6628428615727814e17,2.667371505895156e17,2.671900150217531e17,2.6764287945399053e17,2.6809574388622803e17,2.6854860831846547e17,2.6900147275070294e17,2.694543371829404e17,2.6990720161517786e17,2.7036006604741533e17,2.708129304796528e17,2.712657949118903e17,2.7171865934412774e17,2.7217152377636525e17,2.726243882086027e17,2.7307725264084016e17,2.7353011707307763e17,2.7398298150531507e17,2.7443584593755254e17,2.7488871036979e17,2.753415748020275e17,2.7579443923426496e17,2.7624730366650243e17,2.767001680987399e17,2.7715303253097738e17,2.7760589696321485e17,2.780587613954523e17,2.7851162582768976e17,2.7896449025992723e17,2.7941735469216467e17,2.7987021912440218e17,2.8032308355663965e17,2.8077594798887712e17,2.812288124211146e17,2.8168167685335206e17,2.821345412855895e17,2.8258740571782698e17,2.8304027015006445e17,2.834931345823019e17,2.839459990145394e17,2.8439886344677683e17,2.8485172787901434e17,2.853045923112518e17,2.8575745674348925e17,2.8621032117572672e17,2.8666318560796416e17,2.8711605004020166e17,2.875689144724391e17,2.880217789046766e17,2.8847464333691405e17,2.8892750776915155e17,2.89380372201389e17,2.8983323663362643e17,2.9028610106586394e17,2.907389654981014e17,2.911918299303389e17,2.916446943625763e17,2.920975587948138e17,2.9255042322705126e17,2.930032876592887e17,2.934561520915262e17,2.9390901652376365e17,2.9436188095600115e17,2.948147453882386e17,2.952676098204761e17,2.957204742527136e17,2.96173338684951e17,2.966262031171885e17,2.970790675494259e17,2.975319319816634e17,2.9798479641390086e17,2.984376608461384e17,2.988905252783758e17,2.993433897106133e17,2.9979625414285075e17,3.002491185750882e17,3.007019830073257e17,3.0115484743956314e17,3.0160771187180064e17,3.020605763040381e17,3.025134407362756e17,3.02966305168513e17,3.034191696007505e17,3.038720340329879e17,3.043248984652254e17,3.047777628974629e17,3.0523062732970035e17,3.0568349176193786e17,3.061363561941753e17,3.065892206264128e17,3.070420850586502e17,3.0749494949088774e17,3.079478139231252e17,3.084006783553626e17,3.0885354278760006e17,3.093064072198376e17,3.097592716520751e17,3.1021213608431245e17,3.1066500051655e17,3.1111786494878746e17,3.1157072938102496e17,3.1202359381326234e17,3.1247645824549984e17,3.1292932267773734e17,3.133821871099747e17,3.138350515422122e17,3.142879159744497e17,3.147407804066872e17,3.151936448389246e17,3.156465092711622e17,3.160993737033996e17,3.1655223813563706e17,3.170051025678745e17,3.17457967000112e17,3.179108314323495e17,3.183636958645869e17,3.188165602968244e17,3.192694247290619e17,3.197222891612994e17,3.201751535935368e17,3.206280180257743e17,3.210808824580118e17,3.2153374689024915e17,3.2198661132248666e17,3.2243947575472416e17,3.2289234018696166e17,3.2334520461919904e17,3.2379806905143654e17,3.2425093348367405e17,3.247037979159114e17,3.251566623481489e17,3.256095267803864e17,3.2606239121262394e17,3.265152556448613e17,3.269681200770988e17,3.274209845093363e17,3.278738489415737e17,3.283267133738112e17,3.287795778060487e17,3.292324422382862e17,3.296853066705236e17,3.301381711027611e17,3.305910355349986e17,3.3104389996723603e17,3.314967643994735e17,3.319496288317109e17,3.324024932639485e17,3.3285535769618586e17,3.3330822212842336e17,3.3376108656066086e17,3.342139509928983e17,3.3466681542513574e17,3.3511967985737325e17,3.3557254428961075e17,3.360254087218481e17,3.364782731540856e17,3.369311375863231e17,3.373840020185606e17,3.37836866450798e17,3.382897308830355e17,3.38742595315273e17,3.3919545974751046e17,3.396483241797479e17,3.4010118861198534e17,3.405540530442229e17,3.410069174764603e17,3.414597819086978e17,3.4191264634093523e17,3.4236551077317274e17,3.428183752054102e17,3.432712396376477e17,3.437241040698852e17,3.4417696850212256e17,3.4462983293436006e17,3.450826973665975e17,3.45535561798835e17,3.4598842623107245e17,3.4644129066330995e17,3.468941550955474e17,3.473470195277849e17,3.4779988396002234e17,3.482527483922598e17,3.487056128244973e17,3.491584772567347e17,3.496113416889722e17,3.5006420612120966e17,3.505170705534472e17,3.509699349856846e17,3.514227994179221e17,3.518756638501595e17,3.52328528282397e17,3.527813927146345e17,3.5323425714687194e17,3.5368712157910944e17,3.541399860113469e17,3.545928504435844e17,3.5504571487582176e17,3.554985793080593e17,3.5595144374029677e17,3.564043081725342e17,3.5685717260477165e17,3.5731003703700915e17,3.5776290146924666e17,3.58215765901484e17,3.586686303337216e17,3.5912149476595904e17,3.5957435919819654e17,3.600272236304339e17,3.604800880626714e17,3.609329524949089e17,3.613858169271463e17,3.618386813593838e17,3.622915457916213e17,3.627444102238588e17,3.631972746560962e17,3.6365013908833376e17,3.641030035205712e17,3.645558679528086e17,3.650087323850461e17,3.654615968172836e17,3.659144612495211e17,3.6636732568175846e17,3.6682019011399597e17,3.672730545462335e17,3.67725918978471e17,3.6817878341070835e17,3.6863164784294586e17,3.6908451227518336e17,3.6953737670742074e17,3.6999024113965824e17,3.7044310557189574e17,3.7089597000413325e17,3.713488344363706e17,3.7180169886860806e17,3.7225456330084563e17,3.72707427733083e17,3.731602921653205e17,3.73613156597558e17,3.740660210297955e17,3.745188854620329e17,3.749717498942704e17,3.754246143265079e17,3.758774787587453e17,3.763303431909828e17,3.767832076232203e17,3.772360720554578e17,3.7768893648769517e17,3.781418009199327e17,3.785946653521702e17,3.790475297844076e17,3.7950039421664506e17,3.799532586488825e17,3.8040612308112006e17,3.8085898751335744e17,3.8131185194559494e17,3.8176471637783245e17,3.822175808100699e17,3.826704452423073e17,3.8312330967454483e17,3.8357617410678234e17,3.840290385390197e17,3.844819029712572e17,3.8493476740349466e17,3.8538763183573216e17,3.858404962679696e17,3.862933607002071e17,3.867462251324446e17,3.8719908956468205e17,3.876519539969195e17,3.881048184291569e17,3.885576828613944e17,3.890105472936319e17,3.894634117258694e17,3.899162761581068e17,3.903691405903443e17,3.9082200502258176e17,3.9127486945481926e17,3.917277338870568e17,3.9218059831929414e17,3.9263346275153165e17,3.930863271837691e17,3.935391916160066e17,3.9399205604824403e17,3.9444492048048154e17,3.94897784912719e17,3.953506493449565e17,3.958035137771939e17,3.9625637820943136e17,3.9670924264166886e17,3.971621070739063e17,3.976149715061438e17,3.9806783593838125e17,3.9852070037061875e17,3.989735648028562e17,3.994264292350937e17,3.998792936673311e17,4.003321580995686e17,4.007850225318061e17,4.012378869640435e17,4.01690751396281e17,4.0214361582851846e17,4.02596480260756e17,4.0304934469299334e17,4.035022091252309e17,4.0395507355746835e17,4.044079379897058e17,4.0486080242194323e17,4.0531366685418074e17,4.0576653128641824e17,4.062193957186556e17,4.066722601508932e17,4.071251245831306e17,4.075779890153681e17,4.080308534476055e17,4.08483717879843e17,4.089365823120805e17,4.093894467443179e17,4.098423111765554e17,4.102951756087929e17,4.107480400410304e17,4.112009044732678e17,4.1165376890550534e17,4.121066333377428e17,4.1255949776998016e17,4.1301236220221766e17,4.134652266344552e17,4.139180910666927e17,4.1437095549893005e17,4.1482381993116755e17,4.1527668436340506e17,4.1572954879564243e17,4.1618241322787994e17,4.1663527766011744e17,4.1708814209235494e17,4.175410065245923e17,4.179938709568298e17,4.184467353890673e17,4.188995998213048e17,4.193524642535422e17,4.1980532868577965e17,4.202581931180172e17,4.207110575502546e17,4.211639219824921e17,4.216167864147296e17,4.220696508469671e17,4.225225152792045e17,4.22975379711442e17,4.234282441436795e17,4.2388110857591686e17,4.243339730081544e17,4.247868374403918e17,4.252397018726294e17,4.2569256630486675e17,4.2614543073710426e17,4.2659829516934176e17,4.270511596015792e17,4.2750402403381664e17,4.279568884660541e17,4.2840975289829165e17,4.28862617330529e17,4.293154817627665e17,4.2976834619500397e17,4.302212106272415e17,4.306740750594789e17,4.311269394917164e17,4.315798039239539e17,4.320326683561913e17,4.324855327884288e17,4.3293839722066624e17,4.3339126165290374e17,4.338441260851412e17,4.342969905173787e17,4.347498549496161e17,4.3520271938185363e17,4.356555838140911e17,4.361084482463285e17,4.36561312678566e17,4.3701417711080346e17,4.3746704154304096e17,4.379199059752784e17,4.383727704075159e17,4.3882563483975334e17,4.3927849927199085e17,4.397313637042283e17,4.401842281364657e17,4.406370925687032e17,4.410899570009407e17,4.415428214331782e17,4.419956858654156e17,4.424485502976531e17,4.4290141472989056e17,4.4335427916212806e17,4.438071435943655e17,4.4426000802660294e17,4.4471287245884045e17,4.451657368910779e17,4.456186013233154e17,4.4607146575555283e17,4.4652433018779034e17,4.469771946200278e17,4.474300590522653e17,4.4788292348450266e17,4.4833578791674016e17,4.4878865234897766e17,4.492415167812151e17,4.496943812134526e17,4.5014724564569005e17,4.5060011007792755e17,4.510529745101649e17,4.515058389424025e17,4.5195870337463994e17,4.524115678068774e17,4.528644322391148e17,4.533172966713523e17,4.537701611035898e17,4.542230255358272e17,4.546758899680648e17,4.551287544003022e17,4.555816188325397e17,4.560344832647771e17,4.564873476970146e17,4.569402121292521e17,4.573930765614895e17,4.57845940993727e17,4.582988054259645e17,4.58751669858202e17,4.5920453429043936e17,4.596573987226769e17,4.6011026315491437e17,4.6056312758715174e17,4.6101599201938925e17,4.6146885645162675e17,4.6192172088386426e17,4.623745853161016e17,4.6282744974833914e17,4.6328031418057664e17,4.63733178612814e17,4.641860430450515e17,4.64638907477289e17,4.650917719095265e17,4.655446363417639e17,4.659975007740014e17,4.664503652062389e17,4.6690322963847635e17,4.673560940707138e17,4.6780895850295123e17,4.682618229351888e17,4.687146873674262e17,4.691675517996637e17,4.696204162319012e17,4.700732806641387e17,4.7052614509637606e17,4.7097900952861357e17,4.714318739608511e17,4.7188473839308845e17,4.7233760282532595e17,4.727904672575634e17,4.7324333168980096e17,4.7369619612203834e17,4.7414906055427584e17,4.7460192498651334e17,4.750547894187508e17,4.755076538509882e17,4.7596051828322566e17,4.7641338271546323e17,4.768662471477006e17,4.773191115799381e17,4.7777197601217555e17,4.7822484044441306e17,4.786777048766505e17,4.79130569308888e17,4.795834337411255e17,4.800362981733629e17,4.804891626056004e17,4.809420270378378e17,4.813948914700753e17,4.8184775590231277e17,4.823006203345503e17,4.827534847667877e17,4.832063491990252e17,4.8365921363126266e17,4.841120780635001e17,4.845649424957376e17,4.8501780692797504e17,4.8547067136021254e17,4.8592353579245e17,4.863764002246875e17,4.868292646569249e17,4.8728212908916243e17,4.877349935213998e17,4.881878579536373e17,4.886407223858748e17,4.8909358681811226e17,4.8954645125034976e17,4.899993156825872e17,4.904521801148247e17,4.909050445470621e17,4.9135790897929965e17,4.918107734115371e17,4.922636378437745e17,4.92716502276012e17,4.931693667082495e17,4.93622231140487e17,4.940750955727244e17,4.945279600049619e17,4.9498082443719936e17,4.9543368886943686e17,4.9588655330167424e17,4.9633941773391174e17,4.9679228216614925e17,4.972451465983867e17,4.976980110306242e17,4.9815087546286163e17,4.9860373989509914e17,4.990566043273365e17,4.995094687595741e17,4.999623331918115e17,5.0041519762404896e17,5.008680620562864e17,5.013209264885239e17,5.017737909207614e17,5.022266553529988e17,5.0267951978523635e17,5.031323842174738e17,5.035852486497113e17,5.040381130819487e17,5.044909775141862e17,5.049438419464237e17,5.0539670637866106e17,5.0584957081089856e17,5.0630243524313606e17,5.067552996753736e17,5.0720816410761094e17,5.076610285398485e17,5.0811389297208595e17,5.085667574043233e17,5.0901962183656083e17,5.0947248626879834e17,5.0992535070103584e17,5.103782151332732e17,5.108310795655107e17,5.112839439977482e17,5.117368084299856e17,5.121896728622231e17,5.126425372944606e17,5.130954017266981e17,5.135482661589355e17,5.14001130591173e17,5.144539950234105e17,5.1490685945564794e17,5.153597238878854e17,5.158125883201228e17,5.162654527523604e17,5.1671831718459776e17,5.1717118161683526e17,5.176240460490728e17,5.180769104813102e17,5.1852977491354765e17,5.1898263934578515e17,5.1943550377802266e17,5.1988836821026003e17,5.2034123264249754e17,5.20794097074735e17,5.2124696150697254e17,5.216998259392099e17,5.221526903714474e17,5.226055548036849e17,5.2305841923592237e17,5.235112836681598e17,5.2396414810039725e17,5.244170125326348e17,5.248698769648722e17,5.253227413971097e17,5.2577560582934714e17,5.2622847026158464e17,5.266813346938221e17,5.271341991260596e17,5.275870635582971e17,5.2803992799053446e17,5.28492792422772e17,5.289456568550094e17,5.293985212872469e17,5.2985138571948435e17,5.3030425015172186e17,5.307571145839593e17,5.312099790161968e17,5.3166284344843424e17,5.321157078806717e17,5.325685723129092e17,5.330214367451466e17,5.334743011773841e17,5.3392716560962157e17,5.343800300418591e17,5.348328944740965e17,5.35285758906334e17,5.357386233385714e17,5.361914877708089e17,5.366443522030464e17,5.3709721663528384e17,5.3755008106752134e17,5.380029454997588e17,5.384558099319963e17,5.3890867436423366e17,5.3936153879647123e17,5.398144032287087e17,5.402672676609461e17,5.4072013209318355e17,5.4117299652542106e17,5.4162586095765856e17,5.4207872538989594e17,5.425315898221335e17,5.4298445425437094e17,5.4343731868660845e17,5.438901831188458e17,5.443430475510833e17,5.447959119833208e17,5.452487764155583e17,5.457016408477957e17,5.461545052800332e17,5.466073697122707e17,5.470602341445081e17,5.4751309857674566e17,5.479659630089831e17,5.4841882744122054e17,5.48871691873458e17,5.493245563056955e17,5.49777420737933e17,5.502302851701704e17,5.506831496024079e17,5.511360140346454e17,5.515888784668829e17,5.5204174289912026e17,5.5249460733135776e17,5.5294747176359526e17,5.5340033619583264e17,5.5385320062807014e17,5.5430606506030765e17,5.5475892949254515e17,5.552117939247825e17,5.556646583570201e17,5.5611752278925754e17,5.565703872214949e17,5.570232516537324e17,5.574761160859699e17,5.579289805182074e17,5.583818449504448e17,5.588347093826823e17,5.592875738149198e17,5.597404382471572e17,5.601933026793947e17,5.606461671116322e17,5.610990315438697e17,5.615518959761071e17,5.620047604083446e17,5.624576248405821e17,5.629104892728195e17,5.6336335370505696e17,5.638162181372944e17,5.6426908256953197e17,5.6472194700176934e17,5.6517481143400685e17,5.6562767586624435e17,5.660805402984818e17,5.665334047307192e17,5.6698626916295674e17,5.6743913359519424e17,5.678919980274316e17,5.683448624596691e17,5.6879772689190656e17,5.6925059132414406e17,5.697034557563815e17,5.70156320188619e17,5.706091846208565e17,5.7106204905309395e17,5.715149134853314e17,5.7196777791756883e17,5.724206423498064e17,5.728735067820438e17,5.733263712142813e17,5.737792356465187e17,5.742321000787562e17,5.7468496451099366e17,5.7513782894323117e17,5.755906933754687e17,5.7604355780770605e17,5.764964222399436e17,5.76949286672181e17,5.774021511044184e17,5.77855015536656e17,5.783078799688934e17,5.787607444011309e17,5.792136088333683e17,5.796664732656058e17,5.801193376978433e17,5.805722021300808e17,5.810250665623182e17,5.814779309945556e17,5.819307954267932e17,5.823836598590307e17,5.828365242912681e17,5.832893887235055e17,5.83742253155743e17,5.841951175879805e17,5.84647982020218e17,5.851008464524554e17,5.855537108846929e17,5.860065753169304e17,5.864594397491679e17,5.869123041814053e17,5.873651686136428e17,5.878180330458802e17,5.882708974781178e17,5.887237619103551e17,5.891766263425926e17,5.896294907748301e17,5.900823552070675e17,5.905352196393051e17,5.909880840715425e17,5.9144094850378e17,5.918938129360174e17,5.92346677368255e17,5.927995418004923e17,5.932524062327299e17,5.937052706649674e17,5.941581350972047e17,5.946109995294422e17,5.950638639616797e17,5.955167283939172e17,5.959695928261546e17,5.964224572583922e17,5.968753216906296e17,5.973281861228671e17,5.977810505551044e17,5.98233914987342e17,5.986867794195795e17,5.99139643851817e17,5.995925082840544e17,6.00045372716292e17,6.004982371485293e17,6.009511015807667e17,6.014039660130043e17,6.018568304452417e17,6.023096948774793e17,6.027625593097166e17,6.032154237419542e17,6.036682881741916e17,6.041211526064289e17,6.045740170386665e17,6.05026881470904e17,6.054797459031415e17,6.05932610335379e17,6.063854747676165e17,6.068383391998538e17,6.072912036320914e17,6.077440680643287e17,6.081969324965663e17,6.086497969288038e17,6.091026613610412e17,6.095555257932787e17,6.100083902255163e17,6.104612546577536e17,6.10914119089991e17,6.113669835222286e17,6.11819847954466e17,6.122727123867035e17,6.127255768189409e17,6.131784412511785e17,6.136313056834159e17,6.140841701156532e17,6.145370345478908e17,6.149898989801284e17,6.154427634123658e17,6.158956278446033e17,6.163484922768408e17,6.168013567090781e17,6.172542211413156e17,6.17707085573553e17,6.181599500057906e17,6.186128144380282e17,6.190656788702655e17,6.19518543302503e17,6.199714077347405e17,6.204242721669778e17,6.208771365992154e17,6.213300010314529e17,6.217828654636904e17,6.222357298959278e17,6.226885943281652e17,6.231414587604027e17,6.235943231926401e17,6.240471876248776e17,6.245000520571151e17,6.249529164893527e17,6.2540578092159e17,6.258586453538276e17,6.26311509786065e17,6.267643742183025e17,6.272172386505399e17,6.276701030827773e17,6.281229675150149e17,6.285758319472524e17,6.290286963794898e17,6.294815608117272e17,6.299344252439648e17,6.303872896762021e17,6.308401541084397e17,6.312930185406772e17,6.317458829729146e17,6.321987474051521e17,6.326516118373894e17,6.33104476269627e17,6.335573407018644e17,6.340102051341019e17,6.344630695663395e17,6.34915933998577e17,6.353687984308143e17,6.358216628630518e17,6.362745272952893e17,6.367273917275267e17,6.371802561597642e17,6.376331205920017e17,6.380859850242392e17,6.385388494564767e17,6.38991713888714e17,6.394445783209516e17,6.39897442753189e17,6.403503071854264e17,6.40803171617664e17,6.412560360499016e17,6.417089004821389e17,6.421617649143763e17,6.426146293466139e17,6.430674937788513e17,6.435203582110888e17,6.439732226433262e17,6.444260870755638e17,6.448789515078012e17,6.453318159400385e17,6.457846803722761e17,6.462375448045137e17,6.46690409236751e17,6.471432736689885e17,6.475961381012261e17,6.480490025334634e17,6.485018669657009e17,6.489547313979383e17,6.494075958301759e17,6.498604602624133e17,6.503133246946508e17,6.507661891268883e17,6.512190535591259e17,6.516719179913631e17,6.521247824236006e17,6.525776468558382e17,6.530305112880755e17,6.534833757203131e17,6.539362401525505e17,6.543891045847881e17,6.548419690170254e17,6.552948334492628e17,6.557476978815004e17,6.562005623137379e17,6.566534267459753e17,6.571062911782129e17,6.575591556104504e17,6.580120200426876e17,6.584648844749252e17,6.589177489071626e17,6.593706133394002e17,6.598234777716376e17,6.602763422038751e17,6.607292066361126e17,6.611820710683501e17,6.616349355005874e17,6.62087799932825e17,6.625406643650625e17,6.629935287972998e17,6.634463932295374e17,6.638992576617748e17,6.643521220940123e17,6.648049865262497e17,6.652578509584872e17,6.657107153907247e17,6.661635798229622e17,6.666164442551996e17,6.670693086874372e17,6.675221731196748e17,6.67975037551912e17,6.684279019841495e17,6.68880766416387e17,6.693336308486244e17,6.69786495280862e17,6.702393597130994e17,6.70692224145337e17,6.711450885775743e17,6.715979530098117e17,6.720508174420493e17,6.725036818742867e17,6.729565463065242e17,6.734094107387617e17,6.738622751709992e17,6.743151396032365e17,6.74768004035474e17,6.752208684677115e17,6.756737328999489e17,6.761265973321865e17,6.76579461764424e17,6.770323261966615e17,6.774851906288988e17,6.779380550611363e17,6.783909194933738e17,6.788437839256113e17,6.792966483578487e17,6.797495127900863e17,6.802023772223237e17,6.80655241654561e17,6.811081060867986e17,6.81560970519036e17,6.820138349512736e17,6.82466699383511e17,6.829195638157485e17,6.83372428247986e17,6.838252926802232e17,6.842781571124608e17,6.847310215446984e17,6.851838859769358e17,6.856367504091732e17,6.860896148414108e17,6.865424792736483e17,6.869953437058857e17,6.874482081381231e17,6.879010725703606e17,6.883539370025981e17,6.888068014348355e17,6.89259665867073e17,6.897125302993106e17,6.901653947315479e17,6.906182591637853e17,6.910711235960229e17,6.915239880282604e17,6.919768524604978e17,6.924297168927354e17,6.928825813249728e17,6.933354457572102e17,6.937883101894476e17,6.942411746216851e17,6.946940390539227e17,6.951469034861601e17,6.955997679183976e17,6.960526323506351e17,6.965054967828724e17,6.969583612151099e17,6.974112256473475e17,6.978640900795849e17,6.983169545118225e17,6.987698189440598e17,6.992226833762973e17,6.996755478085348e17,7.001284122407721e17,7.005812766730097e17,7.010341411052472e17,7.014870055374847e17,7.019398699697221e17,7.023927344019597e17,7.02845598834197e17,7.032984632664346e17,7.037513276986719e17,7.042041921309094e17,7.04657056563147e17,7.051099209953843e17,7.055627854276219e17,7.060156498598593e17,7.064685142920968e17,7.069213787243342e17,7.073742431565718e17,7.078271075888092e17,7.082799720210467e17,7.087328364532841e17,7.091857008855215e17,7.096385653177591e17,7.100914297499964e17,7.10544294182234e17,7.109971586144716e17,7.11450023046709e17,7.119028874789464e17,7.12355751911184e17,7.128086163434213e17,7.132614807756588e17,7.137143452078962e17,7.141672096401338e17,7.146200740723713e17,7.150729385046086e17,7.155258029368462e17,7.159786673690836e17,7.16431531801321e17,7.168843962335585e17,7.173372606657961e17,7.177901250980335e17,7.18242989530271e17,7.186958539625084e17,7.191487183947459e17,7.196015828269833e17,7.200544472592207e17,7.205073116914583e17,7.209601761236959e17,7.214130405559332e17,7.218659049881708e17,7.223187694204082e17,7.227716338526456e17,7.232244982848831e17,7.236773627171205e17,7.241302271493581e17,7.245830915815955e17,7.25035956013833e17,7.254888204460704e17,7.25941684878308e17,7.263945493105453e17,7.268474137427828e17,7.273002781750204e17,7.277531426072577e17,7.282060070394953e17,7.286588714717326e17,7.291117359039702e17,7.295646003362076e17,7.30017464768445e17,7.304703292006826e17,7.309231936329202e17,7.313760580651575e17,7.31828922497395e17,7.322817869296325e17,7.327346513618698e17,7.331875157941074e17,7.336403802263448e17,7.340932446585824e17,7.345461090908198e17,7.349989735230572e17,7.354518379552947e17,7.359047023875322e17,7.363575668197696e17,7.368104312520072e17,7.372632956842447e17,7.37716160116482e17,7.381690245487195e17,7.386218889809569e17,7.390747534131945e17,7.395276178454319e17,7.399804822776694e17,7.40433346709907e17,7.408862111421444e17,7.413390755743817e17,7.417919400066193e17,7.422448044388568e17,7.426976688710941e17,7.431505333033317e17,7.436033977355692e17,7.440562621678066e17,7.44509126600044e17,7.449619910322815e17,7.45414855464519e17,7.458677198967565e17,7.463205843289939e17,7.467734487612315e17,7.47226313193469e17,7.476791776257062e17,7.481320420579438e17,7.485849064901812e17,7.490377709224187e17,7.494906353546563e17,7.499434997868937e17,7.503963642191313e17,7.508492286513686e17,7.51302093083606e17,7.517549575158436e17,7.52207821948081e17,7.526606863803185e17,7.53113550812556e17,7.535664152447936e17,7.540192796770308e17,7.544721441092684e17,7.549250085415058e17,7.553778729737434e17,7.558307374059808e17,7.562836018382182e17,7.567364662704558e17,7.571893307026931e17,7.576421951349306e17,7.580950595671681e17,7.585479239994057e17,7.59000788431643e17,7.594536528638806e17,7.59906517296118e17,7.603593817283553e17,7.608122461605929e17,7.612651105928303e17,7.617179750250679e17,7.621708394573053e17,7.626237038895428e17,7.630765683217804e17,7.635294327540179e17,7.639822971862551e17,7.644351616184927e17,7.648880260507301e17,7.653408904829676e17,7.657937549152051e17,7.662466193474426e17,7.666994837796801e17,7.671523482119174e17,7.676052126441549e17,7.680580770763924e17,7.685109415086299e17,7.689638059408673e17,7.694166703731049e17,7.698695348053423e17,7.703223992375796e17,7.707752636698172e17,7.712281281020547e17,7.716809925342921e17,7.721338569665297e17,7.725867213987671e17,7.730395858310047e17,7.73492450263242e17,7.739453146954794e17,7.74398179127717e17,7.748510435599544e17,7.753039079921919e17,7.757567724244294e17,7.762096368566669e17,7.766625012889042e17,7.771153657211418e17,7.775682301533792e17,7.780210945856168e17,7.784739590178542e17,7.789268234500916e17,7.793796878823292e17,7.798325523145664e17,7.80285416746804e17,7.807382811790415e17,7.81191145611279e17,7.816440100435164e17,7.82096874475754e17,7.825497389079914e17,7.830026033402289e17,7.834554677724663e17,7.839083322047037e17,7.843611966369413e17,7.848140610691786e17,7.852669255014162e17,7.857197899336538e17,7.861726543658911e17,7.866255187981285e17,7.870783832303661e17,7.875312476626035e17,7.87984112094841e17,7.884369765270785e17,7.88889840959316e17,7.893427053915534e17,7.897955698237907e17,7.902484342560283e17,7.907012986882659e17,7.911541631205033e17,7.916070275527407e17,7.920598919849783e17,7.925127564172156e17,7.92965620849453e17,7.934184852816906e17,7.938713497139281e17,7.943242141461656e17,7.94777078578403e17,7.952299430106405e17,7.95682807442878e17,7.961356718751153e17,7.965885363073528e17,7.970414007395904e17,7.974942651718278e17,7.979471296040653e17,7.983999940363028e17,7.988528584685402e17,7.993057229007777e17,7.99758587333015e17,8.002114517652526e17,8.006643161974902e17,8.011171806297275e17,8.01570045061965e17,8.020229094942025e17,8.0247577392644e17,8.029286383586774e17,8.03381502790915e17,8.038343672231524e17,8.042872316553898e17,8.047400960876273e17,8.051929605198647e17,8.056458249521023e17,8.060986893843396e17,8.065515538165772e17,8.070044182488147e17,8.074572826810522e17,8.079101471132896e17,8.08363011545527e17,8.088158759777645e17,8.092687404100019e17,8.097216048422394e17,8.101744692744769e17,8.106273337067145e17,8.110801981389518e17,8.115330625711892e17,8.119859270034268e17,8.124387914356641e17,8.128916558679017e17,8.133445203001393e17,8.137973847323767e17,8.142502491646141e17,8.147031135968516e17,8.15155978029089e17,8.156088424613265e17,8.160617068935639e17,8.165145713258015e17,8.16967435758039e17,8.174203001902764e17,8.178731646225139e17,8.183260290547514e17,8.187788934869888e17,8.192317579192262e17,8.196846223514637e17,8.201374867837012e17,8.205903512159387e17,8.210432156481761e17,8.214960800804136e17,8.219489445126511e17,8.224018089448884e17,8.22854673377126e17,8.233075378093636e17,8.237604022416009e17,8.242132666738385e17,8.246661311060758e17,8.251189955383133e17,8.255718599705508e17,8.260247244027882e17,8.264775888350258e17,8.269304532672634e17,8.273833176995007e17,8.278361821317381e17,8.282890465639757e17,8.28741910996213e17,8.291947754284506e17,8.29647639860688e17,8.301005042929256e17,8.30553368725163e17,8.310062331574003e17,8.314590975896379e17,8.319119620218753e17,8.323648264541128e17,8.328176908863503e17,8.332705553185879e17,8.337234197508252e17,8.341762841830627e17,8.346291486153001e17,8.350820130475377e17,8.355348774797751e17,8.359877419120125e17,8.364406063442501e17,8.368934707764876e17,8.373463352087249e17,8.377991996409624e17,8.382520640732e17,8.387049285054373e17,8.391577929376749e17,8.396106573699123e17,8.400635218021498e17,8.405163862343872e17,8.409692506666246e17,8.414221150988622e17,8.418749795310996e17,8.423278439633371e17,8.427807083955747e17,8.432335728278122e17,8.436864372600494e17,8.44139301692287e17,8.445921661245244e17,8.450450305567619e17,8.454978949889994e17,8.459507594212369e17,8.464036238534744e17,8.468564882857117e17,8.473093527179492e17,8.477622171501868e17,8.482150815824242e17,8.486679460146616e17,8.491208104468992e17,8.495736748791366e17,8.50026539311374e17,8.504794037436115e17,8.50932268175849e17,8.513851326080865e17,8.51837997040324e17,8.522908614725614e17,8.52743725904799e17,8.531965903370363e17,8.536494547692737e17,8.541023192015113e17,8.545551836337487e17,8.550080480659862e17,8.554609124982237e17,8.559137769304612e17,8.563666413626985e17,8.56819505794936e17,8.572723702271735e17,8.577252346594111e17,8.581780990916485e17,8.58630963523886e17,8.590838279561235e17,8.595366923883607e17,8.599895568205983e17,8.604424212528358e17,8.608952856850733e17,8.613481501173107e17,8.618010145495483e17,8.622538789817857e17,8.627067434140232e17,8.631596078462606e17,8.63612472278498e17,8.640653367107356e17,8.645182011429729e17,8.649710655752105e17,8.65423930007448e17,8.658767944396855e17,8.663296588719228e17,8.667825233041604e17,8.672353877363978e17,8.676882521686353e17,8.681411166008728e17,8.685939810331103e17,8.690468454653478e17,8.69499709897585e17,8.699525743298226e17,8.704054387620602e17,8.708583031942976e17,8.71311167626535e17,8.717640320587726e17,8.7221689649101e17,8.726697609232474e17,8.731226253554849e17,8.735754897877224e17,8.740283542199599e17,8.744812186521974e17,8.749340830844348e17,8.753869475166724e17,8.758398119489096e17,8.762926763811471e17,8.767455408133847e17,8.771984052456221e17,8.776512696778596e17,8.781041341100972e17,8.785569985423346e17,8.79009862974572e17,8.794627274068095e17,8.799155918390469e17,8.803684562712845e17,8.808213207035218e17,8.812741851357594e17,8.817270495679969e17,8.821799140002342e17,8.826327784324717e17,8.830856428647092e17,8.835385072969467e17,8.839913717291841e17,8.844442361614217e17,8.848971005936591e17,8.853499650258966e17,8.858028294581339e17,8.862556938903715e17,8.86708558322609e17,8.871614227548465e17,8.876142871870839e17,8.880671516193215e17,8.885200160515588e17,8.889728804837962e17,8.894257449160338e17,8.898786093482712e17,8.903314737805088e17,8.907843382127461e17,8.912372026449837e17,8.916900670772211e17,8.921429315094584e17,8.92595795941696e17,8.930486603739336e17,8.93501524806171e17,8.939543892384084e17,8.94407253670646e17,8.948601181028833e17,8.953129825351209e17,8.957658469673582e17,8.962187113995958e17,8.966715758318333e17,8.971244402640707e17,8.975773046963082e17,8.980301691285457e17,8.984830335607831e17,8.989358979930205e17,8.993887624252581e17,8.998416268574956e17,9.00294491289733e17,9.007473557219704e17,9.012002201542079e17,9.016530845864454e17,9.021059490186828e17,9.025588134509203e17,9.030116778831579e17,9.034645423153953e17,9.039174067476328e17,9.043702711798702e17,9.048231356121076e17,9.052760000443451e17,9.057288644765825e17,9.061817289088201e17,9.066345933410577e17,9.07087457773295e17,9.075403222055324e17,9.0799318663777e17,9.084460510700073e17,9.088989155022449e17,9.093517799344824e17,9.098046443667199e17,9.102575087989573e17,9.107103732311946e17,9.111632376634322e17,9.116161020956696e17,9.120689665279071e17,9.125218309601446e17,9.129746953923822e17,9.134275598246195e17,9.13880424256857e17,9.143332886890945e17,9.14786153121332e17,9.152390175535694e17,9.156918819858068e17,9.161447464180444e17,9.165976108502819e17,9.170504752825193e17,9.175033397147567e17,9.179562041469943e17,9.184090685792316e17,9.188619330114692e17,9.193147974437068e17,9.197676618759441e17,9.202205263081816e17,9.20673390740419e17,9.211262551726565e17,9.21579119604894e17,9.220319840371314e17,9.22484848469369e17,9.229377129016065e17,9.233905773338438e17,9.238434417660813e17,9.242963061983188e17,9.247491706305562e17,9.252020350627937e17,9.256548994950312e17,9.261077639272687e17,9.265606283595062e17,9.270134927917435e17,9.27466357223981e17,9.279192216562185e17,9.28372086088456e17,9.288249505206935e17,9.292778149529311e17,9.297306793851684e17,9.301835438174058e17,9.306364082496433e17,9.310892726818808e17,9.315421371141183e17,9.319950015463557e17,9.324478659785933e17,9.329007304108307e17,9.33353594843068e17,9.338064592753056e17,9.342593237075432e17,9.347121881397805e17,9.35165052572018e17,9.356179170042555e17,9.360707814364929e17,9.365236458687304e17,9.369765103009678e17,9.374293747332054e17,9.378822391654428e17,9.383351035976803e17,9.387879680299178e17,9.392408324621554e17,9.396936968943926e17,9.401465613266301e17,9.405994257588676e17,9.41052290191105e17,9.415051546233426e17,9.4195801905558e17,9.424108834878176e17,9.428637479200549e17,9.433166123522924e17,9.437694767845299e17,9.442223412167674e17,9.446752056490048e17,9.451280700812424e17,9.455809345134798e17,9.460337989457171e17,9.464866633779547e17,9.469395278101921e17,9.473923922424297e17,9.478452566746671e17,9.482981211069046e17,9.487509855391421e17,9.492038499713795e17,9.496567144036169e17,9.501095788358545e17,9.505624432680919e17,9.510153077003293e17,9.514681721325669e17,9.519210365648044e17,9.523739009970417e17,9.528267654292792e17,9.532796298615167e17,9.537324942937542e17,9.541853587259917e17,9.546382231582291e17,9.550910875904667e17,9.555439520227039e17,9.559968164549414e17,9.56449680887179e17,9.569025453194164e17,9.573554097516539e17,9.578082741838915e17,9.582611386161289e17,9.587140030483663e17,9.591668674806038e17,9.596197319128412e17,9.600725963450788e17,9.605254607773161e17,9.609783252095537e17,9.614311896417912e17,9.618840540740285e17,9.62336918506266e17,9.627897829385036e17,9.63242647370741e17,9.636955118029784e17,9.64148376235216e17,9.646012406674534e17,9.650541050996909e17,9.655069695319282e17,9.659598339641658e17,9.664126983964033e17,9.668655628286408e17,9.673184272608782e17,9.677712916931158e17,9.682241561253532e17,9.686770205575905e17,9.691298849898281e17,9.695827494220655e17,9.700356138543031e17,9.704884782865404e17,9.70941342718778e17,9.713942071510156e17,9.718470715832527e17,9.722999360154903e17,9.727528004477279e17,9.732056648799653e17,9.736585293122028e17,9.741113937444403e17,9.745642581766778e17,9.750171226089152e17,9.754699870411525e17,9.759228514733901e17,9.763757159056276e17,9.76828580337865e17,9.772814447701025e17,9.777343092023401e17,9.781871736345774e17,9.786400380668148e17,9.790929024990524e17,9.795457669312899e17,9.799986313635273e17,9.804514957957647e17,9.809043602280023e17,9.813572246602397e17,9.81810089092477e17,9.822629535247146e17,9.827158179569522e17,9.831686823891896e17,9.836215468214271e17,9.840744112536646e17,9.84527275685902e17,9.849801401181394e17,9.85433004550377e17,9.858858689826144e17,9.86338733414852e17,9.867915978470893e17,9.872444622793268e17,9.876973267115643e17,9.881501911438016e17,9.886030555760392e17,9.890559200082767e17,9.895087844405142e17,9.899616488727516e17,9.904145133049892e17,9.908673777372265e17,9.91320242169464e17,9.917731066017014e17,9.92225971033939e17,9.926788354661765e17,9.931316998984138e17,9.935845643306514e17,9.940374287628888e17,9.944902931951263e17,9.949431576273637e17,9.953960220596013e17,9.958488864918387e17,9.963017509240762e17,9.967546153563136e17,9.97207479788551e17,9.976603442207886e17,9.981132086530259e17,9.985660730852635e17,9.99018937517501e17,9.994718019497384e17,9.999246663819759e17,1.0003775308142134e18,1.0008303952464508e18,1.0012832596786883e18,1.0017361241109257e18,1.0021889885431633e18,1.0026418529754008e18,1.0030947174076381e18,1.0035475818398756e18,1.0040004462721132e18,1.0044533107043505e18,1.004906175136588e18,1.0053590395688256e18,1.005811904001063e18,1.0062647684333005e18,1.0067176328655378e18,1.0071704972977754e18,1.0076233617300128e18,1.0080762261622502e18,1.0085290905944878e18,1.0089819550267254e18,1.0094348194589627e18,1.0098876838912001e18,1.0103405483234377e18,1.0107934127556751e18,1.0112462771879126e18,1.01169914162015e18,1.0121520060523876e18,1.012604870484625e18,1.0130577349168623e18,1.0135105993490999e18,1.0139634637813375e18,1.0144163282135748e18,1.0148691926458124e18,1.0153220570780499e18,1.0157749215102872e18,1.0162277859425247e18,1.0166806503747621e18,1.0171335148069997e18,1.0175863792392371e18,1.0180392436714746e18,1.0184921081037121e18,1.0189449725359497e18,1.019397836968187e18,1.0198507014004244e18,1.020303565832662e18,1.0207564302648993e18,1.0212092946971369e18,1.0216621591293743e18,1.0221150235616119e18,1.0225678879938493e18,1.0230207524260867e18,1.0234736168583242e18,1.0239264812905617e18,1.0243793457227991e18,1.0248322101550367e18,1.0252850745872742e18,1.0257379390195116e18,1.026190803451749e18,1.0266436678839864e18,1.027096532316224e18,1.0275493967484614e18,1.0280022611806989e18,1.0284551256129364e18,1.0289079900451739e18,1.0293608544774112e18,1.0298137189096488e18,1.0302665833418863e18,1.0307194477741236e18,1.0311723122063612e18,1.0316251766385987e18,1.0320780410708361e18,1.0325309055030735e18,1.032983769935311e18,1.0334366343675485e18,1.033889498799786e18,1.0343423632320234e18,1.034795227664261e18,1.0352480920964986e18,1.0357009565287357e18,1.0361538209609733e18,1.0366066853932108e18,1.0370595498254482e18,1.0375124142576858e18,1.0379652786899232e18,1.0384181431221608e18,1.0388710075543981e18,1.0393238719866355e18,1.0397767364188731e18,1.0402296008511105e18,1.040682465283348e18,1.0411353297155855e18,1.041588194147823e18,1.0420410585800603e18,1.0424939230122979e18,1.0429467874445353e18,1.0433996518767729e18,1.0438525163090103e18,1.0443053807412477e18,1.0447582451734853e18,1.0452111096057226e18,1.0456639740379601e18,1.0461168384701976e18,1.0465697029024351e18,1.0470225673346725e18,1.0474754317669101e18,1.0479282961991475e18,1.0483811606313848e18,1.0488340250636224e18,1.0492868894958598e18,1.0497397539280974e18,1.0501926183603348e18,1.0506454827925723e18,1.0510983472248099e18,1.051551211657047e18,1.0520040760892846e18,1.0524569405215222e18,1.0529098049537596e18,1.053362669385997e18,1.0538155338182346e18,1.0542683982504721e18,1.0547212626827095e18,1.055174127114947e18,1.0556269915471844e18,1.056079855979422e18,1.0565327204116593e18,1.0569855848438968e18,1.0574384492761344e18,1.0578913137083717e18,1.0583441781406092e18,1.0587970425728467e18,1.0592499070050842e18,1.0597027714373216e18,1.0601556358695592e18,1.0606085003017966e18,1.061061364734034e18,1.0615142291662714e18,1.0619670935985089e18,1.0624199580307465e18,1.062872822462984e18,1.0633256868952214e18,1.063778551327459e18,1.0642314157596963e18,1.0646842801919337e18,1.0651371446241713e18,1.0655900090564087e18,1.0660428734886463e18,1.0664957379208836e18,1.0669486023531212e18,1.0674014667853586e18,1.0678543312175959e18,1.0683071956498335e18,1.068760060082071e18,1.0692129245143085e18,1.0696657889465459e18,1.0701186533787835e18,1.0705715178110209e18,1.0710243822432584e18,1.0714772466754957e18,1.0719301111077332e18,1.0723829755399708e18,1.0728358399722081e18,1.0732887044044457e18,1.0737415688366833e18,1.0741944332689206e18,1.074647297701158e18,1.0751001621333956e18,1.075553026565633e18,1.0760058909978705e18,1.0764587554301079e18,1.0769116198623455e18,1.0773644842945829e18,1.0778173487268202e18,1.0782702131590578e18,1.0787230775912954e18,1.0791759420235328e18,1.0796288064557702e18,1.0800816708880078e18,1.0805345353202451e18,1.0809873997524826e18,1.08144026418472e18,1.0818931286169576e18,1.0823459930491951e18,1.0827988574814324e18,1.08325172191367e18,1.0837045863459075e18,1.0841574507781448e18,1.0846103152103823e18,1.0850631796426199e18,1.0855160440748573e18,1.0859689085070948e18,1.0864217729393322e18,1.0868746373715697e18,1.0873275018038072e18,1.0877803662360445e18,1.0882332306682821e18,1.0886860951005197e18,1.089138959532757e18,1.0895918239649946e18,1.090044688397232e18,1.0904975528294694e18,1.0909504172617069e18,1.0914032816939443e18,1.0918561461261819e18,1.0923090105584193e18,1.0927618749906568e18,1.0932147394228942e18,1.0936676038551318e18,1.0941204682873691e18,1.0945733327196067e18,1.0950261971518442e18,1.0954790615840815e18,1.0959319260163191e18,1.0963847904485564e18,1.096837654880794e18,1.0972905193130314e18,1.0977433837452689e18,1.0981962481775064e18,1.098649112609744e18,1.0991019770419813e18,1.0995548414742188e18,1.1000077059064563e18,1.1004605703386936e18,1.1009134347709312e18,1.1013662992031686e18,1.1018191636354062e18,1.1022720280676436e18,1.102724892499881e18,1.1031777569321185e18,1.103630621364356e18,1.1040834857965934e18,1.104536350228831e18,1.1049892146610685e18,1.1054420790933059e18,1.1058949435255433e18,1.1063478079577809e18,1.1068006723900183e18,1.1072535368222557e18,1.1077064012544932e18,1.1081592656867308e18,1.1086121301189682e18,1.1090649945512055e18,1.1095178589834431e18,1.1099707234156806e18,1.110423587847918e18,1.1108764522801555e18,1.1113293167123931e18,1.1117821811446304e18,1.1122350455768678e18,1.1126879100091053e18,1.1131407744413428e18,1.1135936388735803e18,1.1140465033058177e18,1.1144993677380553e18,1.1149522321702929e18,1.11540509660253e18,1.1158579610347676e18,1.1163108254670052e18,1.1167636898992425e18,1.11721655433148e18,1.1176694187637175e18,1.1181222831959551e18,1.1185751476281924e18,1.1190280120604298e18,1.1194808764926674e18,1.1199337409249048e18,1.1203866053571423e18,1.1208394697893798e18,1.1212923342216174e18,1.1217451986538547e18,1.1221980630860922e18,1.1226509275183296e18,1.1231037919505672e18,1.1235566563828046e18,1.124009520815042e18,1.1244623852472796e18,1.124915249679517e18,1.1253681141117544e18,1.1258209785439919e18,1.1262738429762295e18,1.1267267074084668e18,1.1271795718407044e18,1.1276324362729418e18,1.1280853007051793e18,1.1285381651374167e18,1.1289910295696541e18,1.1294438940018917e18,1.1298967584341292e18,1.1303496228663666e18,1.1308024872986042e18,1.1312553517308417e18,1.1317082161630789e18,1.1321610805953165e18,1.1326139450275539e18,1.1330668094597914e18,1.1335196738920289e18,1.1339725383242664e18,1.1344254027565039e18,1.1348782671887412e18,1.1353311316209787e18,1.1357839960532163e18,1.1362368604854537e18,1.1366897249176911e18,1.1371425893499287e18,1.1375954537821661e18,1.1380483182144035e18,1.138501182646641e18,1.1389540470788785e18,1.139406911511116e18,1.1398597759433535e18,1.1403126403755909e18,1.1407655048078285e18,1.1412183692400658e18,1.1416712336723032e18,1.1421240981045408e18,1.1425769625367782e18,1.1430298269690157e18,1.1434826914012532e18,1.1439355558334907e18,1.144388420265728e18,1.1448412846979656e18,1.145294149130203e18,1.1457470135624406e18,1.146199877994678e18,1.1466527424269155e18,1.147105606859153e18,1.1475584712913902e18,1.1480113357236278e18,1.1484642001558653e18,1.1489170645881028e18,1.1493699290203402e18,1.1498227934525778e18,1.1502756578848152e18,1.1507285223170527e18,1.1511813867492901e18,1.1516342511815276e18,1.1520871156137651e18,1.1525399800460024e18,1.15299284447824e18,1.1534457089104776e18,1.153898573342715e18,1.1543514377749524e18,1.15480430220719e18,1.1552571666394273e18,1.155710031071665e18,1.1561628955039025e18,1.1566157599361398e18,1.157068624368377e18,1.1575214888006147e18,1.1579743532328522e18,1.1584272176650895e18,1.158880082097327e18,1.1593329465295647e18,1.159785810961802e18,1.1602386753940393e18,1.1606915398262769e18,1.1611444042585144e18,1.1615972686907517e18,1.1620501331229893e18,1.162502997555227e18,1.1629558619874644e18,1.1634087264197018e18,1.163861590851939e18,1.1643144552841766e18,1.1647673197164142e18,1.1652201841486515e18,1.165673048580889e18,1.1661259130131267e18,1.166578777445364e18,1.1670316418776015e18,1.1674845063098388e18,1.1679373707420764e18,1.168390235174314e18,1.1688430996065513e18,1.1692959640387889e18,1.1697488284710262e18,1.1702016929032637e18,1.1706545573355013e18,1.171107421767739e18,1.1715602861999762e18,1.1720131506322138e18,1.172466015064451e18,1.1729188794966886e18,1.173371743928926e18,1.1738246083611635e18,1.174277472793401e18,1.1747303372256384e18,1.175183201657876e18,1.1756360660901135e18,1.1760889305223508e18,1.1765417949545882e18,1.1769946593868257e18,1.1774475238190633e18,1.1779003882513006e18,1.1783532526835382e18,1.1788061171157757e18,1.1792589815480133e18,1.1797118459802506e18,1.180164710412488e18,1.1806175748447255e18,1.1810704392769628e18,1.1815233037092004e18,1.181976168141438e18,1.1824290325736755e18,1.182881897005913e18,1.1833347614381501e18,1.183787625870388e18,1.1842404903026253e18,1.1846933547348626e18,1.1851462191671004e18,1.1855990835993375e18,1.186051948031575e18,1.1865048124638126e18,1.1869576768960502e18,1.1874105413282877e18,1.187863405760525e18,1.1883162701927624e18,1.188769134625e18,1.1892219990572375e18,1.1896748634894748e18,1.1901277279217126e18,1.1905805923539497e18,1.191033456786187e18,1.1914863212184248e18,1.1919391856506621e18,1.1923920500828997e18,1.1928449145151373e18,1.1932977789473746e18,1.1937506433796122e18,1.1942035078118495e18,1.194656372244087e18,1.1951092366763246e18,1.195562101108562e18,1.1960149655407992e18,1.196467829973037e18,1.1969206944052744e18,1.1973735588375117e18,1.1978264232697495e18,1.1982792877019866e18,1.1987321521342244e18,1.1991850165664617e18,1.1996378809986993e18,1.2000907454309368e18,1.200543609863174e18,1.2009964742954115e18,1.201449338727649e18,1.2019022031598866e18,1.202355067592124e18,1.2028079320243617e18,1.2032607964565988e18,1.203713660888836e18,1.204166525321074e18,1.2046193897533112e18,1.205072254185549e18,1.205525118617786e18,1.2059779830500237e18,1.2064308474822612e18,1.2068837119144986e18,1.207336576346736e18,1.2077894407789737e18,1.208242305211211e18,1.2086951696434483e18,1.2091480340756861e18,1.2096008985079235e18,1.210053762940161e18,1.2105066273723983e18,1.2109594918046356e18,1.2114123562368735e18,1.2118652206691108e18,1.2123180851013484e18,1.212770949533586e18,1.213223813965823e18,1.2136766783980605e18,1.214129542830298e18,1.2145824072625357e18,1.2150352716947732e18,1.2154881361270106e18,1.215941000559248e18,1.2163938649914854e18,1.216846729423723e18,1.2172995938559603e18,1.2177524582881981e18,1.2182053227204352e18,1.2186581871526728e18,1.2191110515849103e18,1.2195639160171476e18,1.2200167804493852e18,1.2204696448816225e18,1.22092250931386e18,1.2213753737460977e18,1.2218282381783352e18,1.2222811026105725e18,1.22273396704281e18,1.2231868314750474e18,1.2236396959072847e18,1.2240925603395226e18,1.2245454247717599e18,1.2249982892039974e18,1.2254511536362348e18,1.225904018068472e18,1.22635688250071e18,1.2268097469329472e18,1.2272626113651848e18,1.2277154757974223e18,1.2281683402296596e18,1.228621204661897e18,1.2290740690941345e18,1.229526933526372e18,1.2299797979586094e18,1.230432662390847e18,1.2308855268230843e18,1.231338391255322e18,1.2317912556875594e18,1.2322441201197967e18,1.2326969845520346e18,1.2331498489842716e18,1.2336027134165092e18,1.2340555778487468e18,1.2345084422809843e18,1.2349613067132216e18,1.235414171145459e18,1.2358670355776965e18,1.2363199000099338e18,1.2367727644421716e18,1.237225628874409e18,1.2376784933066468e18,1.2381313577388838e18,1.2385842221711212e18,1.239037086603359e18,1.2394899510355963e18,1.2399428154678339e18,1.2403956799000712e18,1.2408485443323087e18,1.241301408764546e18,1.2417542731967836e18,1.2422071376290212e18,1.2426600020612588e18,1.243112866493496e18,1.2435657309257334e18,1.2440185953579712e18,1.2444714597902085e18,1.2449243242224458e18,1.2453771886546834e18,1.2458300530869207e18,1.2462829175191583e18,1.2467357819513958e18,1.2471886463836334e18,1.2476415108158707e18,1.248094375248108e18,1.2485472396803456e18,1.2490001041125832e18,1.2494529685448207e18,1.249905832977058e18,1.2503586974092956e18,1.250811561841533e18,1.2512644262737705e18,1.251717290706008e18,1.2521701551382454e18,1.252623019570483e18,1.2530758840027203e18,1.2535287484349578e18,1.2539816128671954e18,1.254434477299433e18,1.2548873417316703e18,1.2553402061639076e18,1.2557930705961452e18,1.2562459350283825e18,1.2566987994606203e18,1.2571516638928576e18,1.2576045283250952e18,1.2580573927573325e18,1.2585102571895698e18,1.2589631216218076e18,1.259415986054045e18,1.2598688504862825e18,1.2603217149185198e18,1.2607745793507574e18,1.2612274437829947e18,1.2616803082152323e18,1.2621331726474698e18,1.2625860370797071e18,1.2630389015119447e18,1.263491765944182e18,1.2639446303764196e18,1.2643974948086572e18,1.2648503592408945e18,1.265303223673132e18,1.2657560881053693e18,1.266208952537607e18,1.2666618169698445e18,1.267114681402082e18,1.2675675458343194e18,1.2680204102665567e18,1.2684732746987942e18,1.2689261391310316e18,1.2693790035632694e18,1.2698318679955067e18,1.2702847324277443e18,1.2707375968599816e18,1.271190461292219e18,1.2716433257244567e18,1.272096190156694e18,1.2725490545889316e18,1.273001919021169e18,1.2734547834534065e18,1.2739076478856438e18,1.2743605123178813e18,1.274813376750119e18,1.275266241182356e18,1.2757191056145938e18,1.276171970046831e18,1.276624834479069e18,1.2770776989113062e18,1.2775305633435436e18,1.277983427775781e18,1.2784362922080184e18,1.278889156640256e18,1.2793420210724936e18,1.2797948855047311e18,1.2802477499369684e18,1.2807006143692058e18,1.2811534788014433e18,1.281606343233681e18,1.2820592076659185e18,1.2825120720981558e18,1.2829649365303933e18,1.2834178009626307e18,1.283870665394868e18,1.2843235298271058e18,1.284776394259343e18,1.2852292586915807e18,1.285682123123818e18,1.2861349875560556e18,1.286587851988293e18,1.2870407164205304e18,1.287493580852768e18,1.2879464452850053e18,1.288399309717243e18,1.2888521741494802e18,1.289305038581718e18,1.2897579030139553e18,1.2902107674461926e18,1.2906636318784302e18,1.2911164963106675e18,1.2915693607429053e18,1.2920222251751427e18,1.2924750896073802e18,1.2929279540396175e18,1.2933808184718548e18,1.2938336829040924e18,1.29428654733633e18,1.2947394117685676e18,1.2951922762008049e18,1.2956451406330424e18,1.2960980050652797e18,1.296550869497517e18,1.297003733929755e18,1.2974565983619922e18,1.2979094627942298e18,1.298362327226467e18,1.2988151916587046e18,1.2992680560909422e18,1.2997209205231795e18,1.300173784955417e18,1.3006266493876544e18,1.301079513819892e18,1.3015323782521293e18,1.301985242684367e18,1.3024381071166044e18,1.3028909715488415e18,1.3033438359810793e18,1.3037967004133166e18,1.3042495648455544e18,1.3047024292777917e18,1.3051552937100293e18,1.3056081581422666e18,1.306061022574504e18,1.3065138870067415e18,1.306966751438979e18,1.3074196158712166e18,1.3078724803034537e18,1.3083253447356915e18,1.3087782091679288e18,1.3092310736001664e18,1.309683938032404e18,1.3101368024646413e18,1.3105896668968788e18,1.3110425313291162e18,1.3114953957613537e18,1.3119482601935913e18,1.3124011246258286e18,1.312853989058066e18,1.3133068534903035e18,1.313759717922541e18,1.3142125823547786e18,1.3146654467870162e18,1.3151183112192535e18,1.3155711756514908e18,1.3160240400837284e18,1.3164769045159657e18,1.3169297689482035e18,1.3173826333804408e18,1.3178354978126781e18,1.3182883622449157e18,1.318741226677153e18,1.3191940911093908e18,1.3196469555416282e18,1.3200998199738657e18,1.320552684406103e18,1.3210055488383406e18,1.321458413270578e18,1.3219112777028155e18,1.322364142135053e18,1.32281700656729e18,1.323269870999528e18,1.3237227354317652e18,1.3241755998640028e18,1.3246284642962404e18,1.3250813287284777e18,1.3255341931607153e18,1.3259870575929526e18,1.3264399220251901e18,1.3268927864574277e18,1.3273456508896653e18,1.3277985153219023e18,1.32825137975414e18,1.3287042441863775e18,1.3291571086186148e18,1.3296099730508526e18,1.33006283748309e18,1.3305157019153275e18,1.3309685663475648e18,1.331421430779802e18,1.33187429521204e18,1.3323271596442772e18,1.3327800240765146e18,1.3332328885087521e18,1.3336857529409897e18,1.334138617373227e18,1.3345914818054646e18,1.3350443462377021e18,1.3354972106699392e18,1.335950075102177e18,1.3364029395344143e18,1.3368558039666522e18,1.3373086683988895e18,1.3377615328311265e18,1.3382143972633644e18,1.3386672616956017e18,1.3391201261278392e18,1.3395729905600768e18,1.3400258549923144e18,1.3404787194245514e18,1.340931583856789e18,1.3413844482890266e18,1.341837312721264e18,1.3422901771535017e18,1.3427430415857388e18,1.3431959060179766e18,1.343648770450214e18,1.3441016348824512e18,1.344554499314689e18,1.3450073637469263e18,1.3454602281791636e18,1.3459130926114012e18,1.3463659570436388e18,1.3468188214758764e18,1.3472716859081137e18,1.347724550340351e18,1.3481774147725885e18,1.348630279204826e18,1.3490831436370634e18,1.3495360080693012e18,1.3499888725015386e18,1.3504417369337756e18,1.3508946013660134e18,1.3513474657982508e18,1.3518003302304883e18,1.352253194662726e18,1.3527060590949632e18,1.3531589235272008e18,1.3536117879594383e18,1.3540646523916756e18,1.3545175168239132e18,1.3549703812561508e18,1.3554232456883878e18,1.3558761101206257e18,1.356328974552863e18,1.3567818389851005e18,1.357234703417338e18,1.3576875678495752e18,1.358140432281813e18,1.3585932967140503e18,1.3590461611462879e18,1.3594990255785254e18,1.359951890010763e18,1.360404754443e18,1.3608576188752376e18,1.3613104833074752e18,1.3617633477397125e18,1.3622162121719503e18,1.3626690766041874e18,1.3631219410364252e18,1.3635748054686625e18,1.3640276699008998e18,1.3644805343331377e18,1.364933398765375e18,1.3653862631976123e18,1.3658391276298499e18,1.3662919920620874e18,1.3667448564943247e18,1.3671977209265623e18,1.3676505853587996e18,1.368103449791037e18,1.3685563142232748e18,1.369009178655512e18,1.36946204308775e18,1.3699149075199872e18,1.3703677719522243e18,1.370820636384462e18,1.3712735008166994e18,1.371726365248937e18,1.3721792296811745e18,1.3726320941134118e18,1.3730849585456492e18,1.3735378229778867e18,1.3739906874101243e18,1.3744435518423619e18,1.3748964162745994e18,1.3753492807068365e18,1.3758021451390743e18,1.3762550095713116e18,1.376707874003549e18,1.3771607384357868e18,1.3776136028680238e18,1.3780664673002614e18,1.378519331732499e18,1.3789721961647365e18,1.379425060596974e18,1.3798779250292114e18,1.3803307894614487e18,1.3807836538936863e18,1.3812365183259238e18,1.3816893827581612e18,1.382142247190399e18,1.382595111622636e18,1.3830479760548733e18,1.3835008404871112e18,1.3839537049193485e18,1.384406569351586e18,1.3848594337838236e18,1.385312298216061e18,1.3857651626482985e18,1.3862180270805358e18,1.3866708915127734e18,1.387123755945011e18,1.3875766203772483e18,1.3880294848094856e18,1.3884823492417234e18,1.3889352136739607e18,1.389388078106198e18,1.3898409425384358e18,1.390293806970673e18,1.3907466714029107e18,1.391199535835148e18,1.3916524002673856e18,1.3921052646996232e18,1.3925581291318602e18,1.3930109935640978e18,1.3934638579963354e18,1.393916722428573e18,1.3943695868608102e18,1.394822451293048e18,1.395275315725285e18,1.3957281801575224e18,1.3961810445897603e18,1.3966339090219976e18,1.3970867734542354e18,1.3975396378864724e18,1.39799250231871e18,1.3984453667509476e18,1.398898231183185e18,1.3993510956154225e18,1.39980396004766e18,1.4002568244798973e18,1.4007096889121347e18,1.4011625533443725e18,1.4016154177766098e18,1.4020682822088474e18,1.4025211466410847e18,1.402974011073322e18,1.4034268755055598e18,1.403879739937797e18,1.4043326043700347e18,1.4047854688022723e18,1.4052383332345093e18,1.405691197666747e18,1.4061440620989844e18,1.406596926531222e18,1.4070497909634596e18,1.407502655395697e18,1.4079555198279342e18,1.4084083842601718e18,1.4088612486924093e18,1.4093141131246467e18,1.4097669775568845e18,1.4102198419891215e18,1.410672706421359e18,1.4111255708535967e18,1.411578435285834e18,1.4120312997180716e18,1.4124841641503089e18,1.4129370285825464e18,1.413389893014784e18,1.4138427574470216e18,1.414295621879259e18,1.4147484863114964e18,1.4152013507437338e18,1.415654215175971e18,1.416107079608209e18,1.4165599440404462e18,1.4170128084726838e18,1.417465672904921e18,1.4179185373371584e18,1.4183714017693962e18,1.4188242662016335e18,1.419277130633871e18,1.4197299950661087e18,1.420182859498346e18,1.4206357239305833e18,1.4210885883628209e18,1.4215414527950584e18,1.4219943172272957e18,1.4224471816595333e18,1.4229000460917706e18,1.4233529105240084e18,1.4238057749562458e18,1.424258639388483e18,1.424711503820721e18,1.425164368252958e18,1.4256172326851955e18,1.426070097117433e18,1.4265229615496707e18,1.426975825981908e18,1.4274286904141453e18,1.4278815548463828e18,1.4283344192786202e18,1.428787283710858e18,1.4292401481430953e18,1.429693012575333e18,1.4301458770075702e18,1.4305987414398075e18,1.4310516058720453e18,1.4315044703042826e18,1.4319573347365202e18,1.4324101991687575e18,1.432863063600995e18,1.4333159280332324e18,1.43376879246547e18,1.4342216568977075e18,1.434674521329945e18,1.4351273857621824e18,1.4355802501944197e18,1.4360331146266575e18,1.4364859790588948e18,1.4369388434911322e18,1.4373917079233697e18,1.437844572355607e18,1.4382974367878446e18,1.4387503012200822e18,1.4392031656523197e18,1.439656030084557e18,1.4401088945167944e18,1.440561758949032e18,1.4410146233812695e18,1.441467487813507e18,1.4419203522457444e18,1.442373216677982e18,1.4428260811102193e18,1.4432789455424566e18,1.4437318099746944e18,1.4441846744069317e18,1.4446375388391693e18,1.4450904032714066e18,1.4455432677036442e18,1.4459961321358817e18,1.446448996568119e18,1.4469018610003566e18,1.447354725432594e18,1.4478075898648315e18,1.4482604542970688e18,1.4487133187293066e18,1.449166183161544e18,1.4496190475937812e18,1.4500719120260188e18,1.4505247764582561e18,1.450977640890494e18,1.4514305053227313e18,1.4518833697549688e18,1.4523362341872061e18,1.4527890986194435e18,1.453241963051681e18,1.4536948274839186e18,1.4541476919161562e18,1.4546005563483935e18,1.455053420780631e18,1.4555062852128684e18,1.455959149645106e18,1.4564120140773435e18,1.4568648785095808e18,1.4573177429418184e18,1.4577706073740557e18,1.4582234718062932e18,1.4586763362385308e18,1.4591292006707684e18,1.4595820651030057e18,1.460034929535243e18,1.4604877939674806e18,1.460940658399718e18,1.4613935228319557e18,1.461846387264193e18,1.4622992516964306e18,1.462752116128668e18,1.4632049805609052e18,1.463657844993143e18,1.4641107094253804e18,1.464563573857618e18,1.4650164382898552e18,1.4654693027220928e18,1.46592216715433e18,1.4663750315865677e18,1.4668278960188052e18,1.4672807604510423e18,1.4677336248832801e18,1.4681864893155174e18,1.4686393537477553e18,1.4690922181799926e18,1.46954508261223e18,1.4699979470444675e18,1.4704508114767048e18,1.4709036759089423e18,1.47135654034118e18,1.4718094047734175e18,1.4722622692056545e18,1.472715133637892e18,1.4731679980701297e18,1.4736208625023672e18,1.4740737269346048e18,1.474526591366842e18,1.4749794557990797e18,1.475432320231317e18,1.4758851846635543e18,1.476338049095792e18,1.4767909135280294e18,1.4772437779602668e18,1.4776966423925043e18,1.478149506824742e18,1.4786023712569795e18,1.4790552356892168e18,1.4795081001214543e18,1.4799609645536916e18,1.4804138289859292e18,1.4808666934181665e18,1.4813195578504044e18,1.4817724222826417e18,1.4822252867148787e18,1.4826781511471165e18,1.4831310155793539e18,1.4835838800115914e18,1.484036744443829e18,1.4844896088760666e18,1.484942473308304e18,1.4853953377405412e18,1.4858482021727788e18,1.4863010666050163e18,1.486753931037254e18,1.487206795469491e18,1.4876596599017288e18,1.488112524333966e18,1.4885653887662034e18,1.4890182531984412e18,1.4894711176306785e18,1.489923982062916e18,1.4903768464951534e18,1.490829710927391e18,1.4912825753596285e18,1.4917354397918659e18,1.4921883042241032e18,1.4926411686563407e18,1.4930940330885783e18,1.4935468975208156e18,1.4939997619530534e18,1.4944526263852908e18,1.4949054908175278e18,1.4953583552497656e18,1.495811219682003e18,1.4962640841142408e18,1.496716948546478e18,1.4971698129787154e18,1.497622677410953e18,1.4980755418431903e18,1.4985284062754278e18,1.4989812707076654e18,1.499434135139903e18,1.49988699957214e18,1.5003398640043779e18,1.5007927284366152e18,1.5012455928688527e18,1.5016984573010903e18,1.5021513217333274e18,1.5026041861655652e18,1.5030570505978025e18,1.50350991503004e18,1.5039627794622776e18,1.504415643894515e18,1.5048685083267523e18,1.5053213727589898e18,1.5057742371912274e18,1.506227101623465e18,1.5066799660557025e18,1.5071328304879398e18,1.5075856949201772e18,1.5080385593524147e18,1.508491423784652e18,1.5089442882168899e18,1.5093971526491272e18,1.5098500170813645e18,1.510302881513602e18,1.5107557459458394e18,1.5112086103780772e18,1.5116614748103145e18,1.512114339242552e18,1.5125672036747894e18,1.513020068107027e18,1.5134729325392643e18,1.5139257969715018e18,1.5143786614037394e18,1.5148315258359764e18,1.5152843902682143e18,1.5157372547004516e18,1.5161901191326892e18,1.5166429835649267e18,1.517095847997164e18,1.5175487124294016e18,1.518001576861639e18,1.5184544412938765e18,1.518907305726114e18,1.5193601701583516e18,1.5198130345905887e18,1.5202658990228262e18,1.5207187634550638e18,1.521171627887301e18,1.521624492319539e18,1.5220773567517763e18,1.5225302211840138e18,1.5229830856162511e18,1.5234359500484884e18,1.5238888144807263e18,1.5243416789129636e18,1.524794543345201e18,1.5252474077774385e18,1.525700272209676e18,1.5261531366419133e18,1.526606001074151e18,1.5270588655063885e18,1.5275117299386255e18,1.5279645943708634e18,1.5284174588031007e18,1.5288703232353385e18,1.5293231876675758e18,1.5297760520998129e18,1.5302289165320507e18,1.530681780964288e18,1.5311346453965256e18,1.5315875098287631e18,1.5320403742610007e18,1.5324932386932378e18,1.5329461031254753e18,1.533398967557713e18,1.5338518319899505e18,1.534304696422188e18,1.534757560854425e18,1.535210425286663e18,1.5356632897189002e18,1.5361161541511375e18,1.5365690185833754e18,1.5370218830156127e18,1.53747474744785e18,1.5379276118800876e18,1.538380476312325e18,1.5388333407445627e18,1.5392862051768e18,1.5397390696090373e18,1.540191934041275e18,1.5406447984735124e18,1.5410976629057498e18,1.5415505273379876e18,1.542003391770225e18,1.542456256202462e18,1.5429091206346998e18,1.543361985066937e18,1.5438148494991747e18,1.5442677139314122e18,1.5447205783636495e18,1.545173442795887e18,1.5456263072281244e18,1.546079171660362e18,1.5465320360925996e18,1.546984900524837e18,1.5474377649570742e18,1.547890629389312e18,1.5483434938215493e18,1.5487963582537866e18,1.5492492226860244e18,1.5497020871182615e18,1.5501549515504993e18,1.5506078159827366e18,1.5510606804149742e18,1.5515135448472118e18,1.551966409279449e18,1.5524192737116864e18,1.552872138143924e18,1.5533250025761615e18,1.5537778670083988e18,1.5542307314406367e18,1.5546835958728737e18,1.555136460305111e18,1.5555893247373489e18,1.5560421891695862e18,1.556495053601824e18,1.5569479180340613e18,1.5574007824662986e18,1.5578536468985362e18,1.5583065113307738e18,1.558759375763011e18,1.5592122401952486e18,1.559665104627486e18,1.5601179690597233e18,1.560570833491961e18,1.5610236979241984e18,1.5614765623564362e18,1.5619294267886735e18,1.5623822912209106e18,1.5628351556531484e18,1.5632880200853857e18,1.5637408845176233e18,1.5641937489498609e18,1.5646466133820982e18,1.5650994778143355e18,1.565552342246573e18,1.5660052066788106e18,1.5664580711110482e18,1.5669109355432858e18,1.5673637999755228e18,1.5678166644077606e18,1.568269528839998e18,1.5687223932722353e18,1.569175257704473e18,1.5696281221367101e18,1.5700809865689477e18,1.5705338510011853e18,1.5709867154334228e18,1.5714395798656604e18,1.5718924442978977e18,1.572345308730135e18,1.5727981731623726e18,1.5732510375946102e18,1.5737039020268475e18,1.5741567664590853e18,1.5746096308913224e18,1.5750624953235597e18,1.5755153597557975e18,1.5759682241880348e18,1.5764210886202724e18,1.57687395305251e18,1.5773268174847473e18,1.5777796819169848e18,1.5782325463492221e18,1.5786854107814597e18,1.5791382752136973e18,1.5795911396459346e18,1.580044004078172e18,1.5804968685104097e18,1.580949732942647e18,1.5814025973748844e18,1.5818554618071222e18,1.5823083262393592e18,1.582761190671597e18,1.5832140551038344e18,1.583666919536072e18,1.5841197839683095e18,1.5845726484005466e18,1.5850255128327841e18,1.5854783772650217e18,1.5859312416972593e18,1.5863841061294966e18,1.5868369705617344e18,1.5872898349939715e18,1.5877426994262088e18,1.5881955638584466e18,1.588648428290684e18,1.5891012927229217e18,1.5895541571551588e18,1.5900070215873964e18,1.590459886019634e18,1.5909127504518712e18,1.5913656148841088e18,1.5918184793163464e18,1.5922713437485837e18,1.592724208180821e18,1.5931770726130588e18,1.593629937045296e18,1.5940828014775337e18,1.594535665909771e18,1.5949885303420083e18,1.5954413947742461e18,1.5958942592064835e18,1.596347123638721e18,1.5967999880709586e18,1.5972528525031956e18,1.5977057169354332e18,1.5981585813676708e18,1.5986114457999084e18,1.599064310232146e18,1.5995171746643832e18,1.5999700390966205e18,1.600422903528858e18,1.6008757679610957e18,1.601328632393333e18,1.6017814968255708e18,1.602234361257808e18,1.6026872256900454e18,1.603140090122283e18,1.6035929545545203e18,1.604045818986758e18,1.6044986834189952e18,1.6049515478512328e18,1.6054044122834703e18,1.605857276715708e18,1.6063101411479452e18,1.6067630055801828e18,1.60721587001242e18,1.6076687344446574e18,1.6081215988768952e18,1.6085744633091325e18,1.60902732774137e18,1.6094801921736074e18,1.6099330566058447e18,1.6103859210380826e18,1.6108387854703199e18,1.6112916499025574e18,1.611744514334795e18,1.6121973787670323e18,1.6126502431992696e18,1.6131031076315072e18,1.6135559720637448e18,1.614008836495982e18,1.6144617009282196e18,1.614914565360457e18,1.6153674297926948e18,1.615820294224932e18,1.6162731586571694e18,1.6167260230894072e18,1.6171788875216443e18,1.6176317519538819e18,1.6180846163861194e18,1.618537480818357e18,1.6189903452505943e18,1.6194432096828316e18,1.6198960741150692e18,1.6203489385473065e18,1.6208018029795443e18,1.6212546674117816e18,1.6217075318440195e18,1.6221603962762565e18,1.6226132607084938e18,1.6230661251407316e18,1.623518989572969e18,1.6239718540052065e18,1.6244247184374438e18,1.6248775828696814e18,1.6253304473019187e18,1.6257833117341563e18,1.6262361761663939e18,1.6266890405986314e18,1.6271419050308687e18,1.627594769463106e18,1.6280476338953439e18,1.6285004983275812e18,1.6289533627598185e18,1.629406227192056e18,1.6298590916242934e18,1.630311956056531e18,1.6307648204887685e18,1.631217684921006e18,1.6316705493532434e18,1.6321234137854807e18,1.6325762782177183e18,1.6330291426499558e18,1.6334820070821934e18,1.6339348715144307e18,1.6343877359466683e18,1.6348406003789056e18,1.635293464811143e18,1.6357463292433807e18,1.636199193675618e18,1.6366520581078556e18,1.637104922540093e18,1.6375577869723305e18,1.638010651404568e18,1.6384635158368054e18,1.638916380269043e18,1.6393692447012803e18,1.6398221091335178e18,1.6402749735657551e18,1.640727837997993e18,1.6411807024302303e18,1.6416335668624676e18,1.6420864312947052e18,1.6425392957269425e18,1.6429921601591803e18,1.6434450245914176e18,1.6438978890236552e18,1.6443507534558925e18,1.6448036178881298e18,1.6452564823203674e18,1.645709346752605e18,1.6461622111848425e18,1.6466150756170798e18,1.6470679400493174e18,1.6475208044815547e18,1.647973668913792e18,1.6484265333460298e18,1.6488793977782671e18,1.6493322622105047e18,1.649785126642742e18,1.6502379910749796e18,1.6506908555072172e18,1.6511437199394545e18,1.651596584371692e18,1.6520494488039293e18,1.652502313236167e18,1.6529551776684042e18,1.653408042100642e18,1.6538609065328794e18,1.6543137709651167e18,1.6547666353973542e18,1.6552194998295916e18,1.6556723642618294e18,1.6561252286940667e18,1.6565780931263043e18,1.6570309575585416e18,1.657483821990779e18,1.6579366864230164e18,1.658389550855254e18,1.6588424152874916e18,1.6592952797197286e18,1.6597481441519665e18,1.6602010085842038e18,1.6606538730164416e18,1.661106737448679e18,1.6615596018809162e18,1.6620124663131538e18,1.662465330745391e18,1.6629181951776287e18,1.6633710596098662e18,1.6638239240421038e18,1.6642767884743409e18,1.6647296529065784e18,1.665182517338816e18,1.6656353817710536e18,1.6660882462032911e18,1.6665411106355284e18,1.666993975067766e18,1.6674468395000033e18,1.6678997039322406e18,1.6683525683644785e18,1.6688054327967158e18,1.669258297228953e18,1.6697111616611907e18,1.6701640260934282e18,1.6706168905256658e18,1.671069754957903e18,1.6715226193901407e18,1.671975483822378e18,1.6724283482546156e18,1.6728812126868529e18,1.6733340771190907e18,1.673786941551328e18,1.674239805983565e18,1.674692670415803e18,1.6751455348480402e18,1.6755983992802778e18,1.6760512637125153e18,1.676504128144753e18,1.6769569925769902e18,1.6774098570092275e18,1.677862721441465e18,1.6783155858737027e18,1.6787684503059402e18,1.6792213147381773e18,1.679674179170415e18,1.6801270436026524e18,1.6805799080348897e18,1.6810327724671276e18,1.6814856368993649e18,1.6819385013316024e18,1.6823913657638397e18,1.6828442301960773e18,1.683297094628315e18,1.6837499590605522e18,1.6842028234927895e18,1.684655687925027e18,1.6851085523572646e18,1.685561416789502e18,1.6860142812217398e18,1.686467145653977e18,1.6869200100862141e18,1.687372874518452e18,1.6878257389506893e18,1.688278603382927e18,1.6887314678151644e18,1.6891843322474017e18,1.6896371966796393e18,1.6900900611118766e18,1.6905429255441142e18,1.6909957899763517e18,1.6914486544085893e18,1.6919015188408264e18,1.6923543832730642e18,1.6928072477053015e18,1.693260112137539e18,1.6937129765697766e18,1.6941658410020137e18,1.6946187054342515e18,1.6950715698664888e18,1.6955244342987264e18,1.695977298730964e18,1.6964301631632013e18,1.6968830275954386e18,1.6973358920276762e18,1.6977887564599137e18,1.6982416208921513e18,1.6986944853243889e18,1.699147349756626e18,1.6996002141888635e18,1.700053078621101e18,1.7005059430533384e18,1.7009588074855762e18,1.7014116719178135e18,1.7018645363500508e18,1.7023174007822884e18,1.7027702652145257e18,1.7032231296467635e18,1.7036759940790008e18,1.7041288585112381e18,1.7045817229434757e18,1.7050345873757133e18,1.7054874518079506e18,1.7059403162401882e18,1.7063931806724257e18,1.7068460451046628e18,1.7072989095369006e18,1.707751773969138e18,1.7082046384013755e18,1.708657502833613e18,1.70911036726585e18,1.709563231698088e18,1.7100160961303252e18,1.7104689605625628e18,1.7109218249948004e18,1.711374689427038e18,1.711827553859275e18,1.7122804182915126e18,1.7127332827237501e18,1.7131861471559875e18,1.7136390115882253e18,1.7140918760204623e18,1.7145447404527002e18,1.7149976048849375e18,1.7154504693171748e18,1.7159033337494126e18,1.71635619818165e18,1.7168090626138872e18,1.7172619270461248e18,1.7177147914783624e18,1.7181676559105997e18,1.7186205203428372e18,1.7190733847750746e18,1.719526249207312e18,1.7199791136395497e18,1.720431978071787e18,1.7208848425040248e18,1.7213377069362621e18,1.7217905713684992e18,1.722243435800737e18,1.7226963002329743e18,1.723149164665212e18,1.7236020290974495e18,1.7240548935296868e18,1.724507757961924e18,1.7249606223941617e18,1.7254134868263992e18,1.7258663512586368e18,1.7263192156908744e18,1.7267720801231114e18,1.7272249445553492e18,1.7276778089875866e18,1.7281306734198239e18,1.7285835378520617e18,1.7290364022842988e18,1.7294892667165363e18,1.729942131148774e18,1.7303949955810115e18,1.730847860013249e18,1.7313007244454863e18,1.7317535888777236e18,1.7322064533099612e18,1.7326593177421988e18,1.733112182174436e18,1.733565046606674e18,1.734017911038911e18,1.7344707754711483e18,1.734923639903386e18,1.7353765043356234e18,1.735829368767861e18,1.7362822332000986e18,1.736735097632336e18,1.7371879620645734e18,1.7376408264968108e18,1.7380936909290483e18,1.738546555361286e18,1.7389994197935232e18,1.7394522842257605e18,1.7399051486579983e18,1.7403580130902356e18,1.740810877522473e18,1.7412637419547108e18,1.7417166063869478e18,1.7421694708191857e18,1.742622335251423e18,1.7430751996836605e18,1.743528064115898e18,1.7439809285481354e18,1.7444337929803727e18,1.7448866574126103e18,1.7453395218448479e18,1.7457923862770852e18,1.746245250709323e18,1.74669811514156e18,1.7471509795737974e18,1.7476038440060352e18,1.7480567084382725e18,1.7485095728705103e18,1.7489624373027476e18,1.749415301734985e18,1.7498681661672225e18,1.7503210305994598e18,1.7507738950316974e18,1.751226759463935e18,1.7516796238961723e18,1.7521324883284096e18,1.7525853527606474e18,1.7530382171928847e18,1.7534910816251223e18,1.75394394605736e18,1.754396810489597e18,1.7548496749218348e18,1.755302539354072e18,1.7557554037863096e18,1.7562082682185472e18,1.7566611326507843e18,1.7571139970830218e18,1.7575668615152594e18,1.758019725947497e18,1.7584725903797345e18,1.758925454811972e18,1.7593783192442092e18,1.7598311836764467e18,1.7602840481086843e18,1.7607369125409216e18,1.7611897769731594e18,1.7616426414053965e18,1.762095505837634e18,1.7625483702698716e18,1.7630012347021092e18,1.7634540991343468e18,1.763906963566584e18,1.7643598279988214e18,1.764812692431059e18,1.7652655568632965e18,1.7657184212955338e18,1.7661712857277716e18,1.7666241501600087e18,1.767077014592246e18,1.7675298790244838e18,1.7679827434567212e18,1.7684356078889587e18,1.7688884723211963e18,1.7693413367534336e18,1.7697942011856712e18,1.7702470656179085e18,1.770699930050146e18,1.7711527944823836e18,1.771605658914621e18,1.7720585233468582e18,1.772511387779096e18,1.7729642522113334e18,1.7734171166435707e18,1.7738699810758085e18,1.7743228455080456e18,1.7747757099402834e18,1.7752285743725207e18,1.7756814388047583e18,1.7761343032369958e18,1.776587167669233e18,1.7770400321014705e18,1.777492896533708e18,1.7779457609659456e18,1.778398625398183e18,1.7788514898304207e18,1.7793043542626578e18,1.779757218694895e18,1.780210083127133e18,1.7806629475593702e18,1.781115811991608e18,1.781568676423845e18,1.7820215408560827e18,1.7824744052883203e18,1.7829272697205576e18,1.7833801341527951e18,1.7838329985850327e18,1.78428586301727e18,1.7847387274495073e18,1.7851915918817452e18,1.7856444563139825e18,1.78609732074622e18,1.7865501851784573e18,1.7870030496106947e18,1.7874559140429325e18,1.7879087784751698e18,1.7883616429074074e18,1.788814507339645e18,1.789267371771882e18,1.7897202362041196e18,1.790173100636357e18,1.7906259650685947e18,1.7910788295008323e18,1.7915316939330696e18,1.791984558365307e18,1.7924374227975444e18,1.792890287229782e18,1.7933431516620193e18,1.7937960160942572e18,1.7942488805264942e18,1.7947017449587318e18,1.7951546093909693e18,1.7956074738232067e18,1.7960603382554442e18,1.7965132026876815e18,1.796966067119919e18,1.7974189315521567e18,1.7978717959843942e18,1.7983246604166316e18,1.798777524848869e18,1.7992303892811064e18,1.7996832537133437e18,1.8001361181455816e18,1.800588982577819e18,1.8010418470100564e18,1.8014947114422938e18,1.801947575874531e18,1.802400440306769e18,1.8028533047390062e18,1.8033061691712438e18,1.8037590336034813e18,1.8042118980357187e18,1.804664762467956e18,1.8051176269001935e18,1.805570491332431e18,1.8060233557646684e18,1.806476220196906e18,1.8069290846291433e18,1.807381949061381e18,1.8078348134936184e18,1.8082876779258557e18,1.8087405423580936e18,1.8091934067903306e18,1.8096462712225682e18,1.8100991356548058e18,1.8105520000870433e18,1.8110048645192806e18]}
},{}],22:[function(require,module,exports){
module.exports={"expected":[1.0,0.9798450101169912,0.9201924877023455,0.823447024727524,0.6935084288476034,0.5356145222332821,0.35613000506535863,0.16228989459918333,-0.03809211823462575,-0.23693863855304062,-0.42623416714570045,-0.5983482050849356,-0.7463428389842744,-0.8642524081457116,-0.9473239802219983,-0.9922089418236991,-0.9970979810568096,-0.9617940208488098,-0.8877201631212776,-0.7778623235804831,-0.636648869515334,-0.46977211240204325,-0.28395885094330175,-0.08669921394844407,0.11405526660629492,0.3102121816720359,0.49386444997129597,0.6576090522849782,0.794845447007279,0.9000416378435296,0.9689571684697736,0.998814055240826,0.9884087676551193,0.9381607426446927,0.8500954770809983,0.7277628800369186,0.576094176024161,0.40120312743255615,0.21013958889208698,0.010605327775341206,-0.18935643388955206,-0.38168524153568095,-0.5586283248185238,-0.7130531116312944,-0.8387347419419643,-0.9306069917760296,-0.9849664926014384,-0.9996220140398904,-0.9739827923187153,-0.9090823439467863,-0.8075368046846371,-0.6734394731653932,-0.5121958101092232,-0.3303055443112106,-0.13510066870551146,0.06555011212208062,0.2635585692563723,0.45094298579678227,0.6201498997041913,0.764358583702533,0.8777559886578531,0.9557710674708856,0.9952590338932336,0.9946281287973999,0.9539037839550325,0.8747275968826671,0.760291158079303,0.6152073980774347,0.4453246403070667,0.2574908552967069,0.059277619119292066,-0.141325096685176,-0.3362310007019494,-0.5175834398838209,-0.6780721010766493,-0.8112276895952517,-0.9116827063605631,-0.9753878116794386,-0.9997750540455569,-0.9838613842125172,-0.928288281889275,-0.835295897706077,-0.7086327527878001,-0.5534046359429614,-0.37586878942092883,-0.18318167960255402,0.01688948001399722,0.2162798250329259,0.4069519346809822,0.5812198200763116,0.7320587462848411,0.8533883992430092,0.9403179830951482,0.9893433680751111,0.9984883419063352,0.967384270878694,0.8972849594659875,0.7910161094928664,0.6528614161514177,0.4883898923350687,0.30423138184057735,0.10780931050000778,-0.09295855196540406,-0.28997925708212213,-0.4753109042130855,-0.6414827784128538,-0.7817964947944593,-0.8905960102897665,-0.9634956186306389,-0.997556738079824,-0.9914063656015843,-0.945292422586027,-0.861073761143084,-0.7421452338113492,-0.5933008471212997,-0.42054051528874015,-0.23082820379390398,-0.03181121207481541,0.16848808895945314,0.36199563853683964,0.5409111512495197,0.6980225463999377,0.8269966668288545,0.9226345683513906,0.9810810890922014,0.9999802509828953,0.9785702291900641,0.9177140612589666,0.8198648580874767,0.6889669190756672,0.5302967374964708,0.3502503051587067,0.15608529010716668,-0.0443715198305843,-0.24303971470166524,-0.43191098359078645,-0.6033719294707384,-0.7505109650821717,-0.8673969188771251,-0.9493181204229714,-0.9929723277430657,-0.9965998406236247,-0.9600544340938283,-0.8848092527514462,-0.7738974283338792,-0.6317898142392103,-0.4642147655160901,-0.27792722898802363,-0.08043645148302807,0.12029671775369759,0.3161807287318549,0.49931950093252886,0.662330714153733,0.798643389689065,0.902762766345643,0.9704917941573938,0.9991003173835911,0.9874351270318191,0.935966446689112,0.8467689778187251,0.723438268586063,0.5709457773845893,0.39543847344933525,0.20399105265052728,0.004320756647034932,-0.19552370896936175,-0.3874866178336477,-0.56382994897335,-0.7174453062785483,-0.842140457804349,-0.9328889445159223,-0.986032696750129,-0.9994294909297184,-0.972539302552356,-0.9064460745674672,-0.8038140236577891,-0.6687802457188345,-0.5067879496070498,-0.3243670415008422,-0.12887090451507477,0.07182001602412208,0.2696158731707019,0.45654351992496245,0.6250679066289452,0.768395818664235,0.8807497107968866,0.9576005999084336,0.9958506282136933,0.9939579378457158,0.9519988231149071,0.871664655087076,0.7561937024498687,0.6102405969677824,0.4396887053695301,0.25141297095449106,0.053002784767365245,-0.14754394260138742,-0.342143176629168,-0.5229506261299501,-0.6826779464728143,-0.8148865326066616,-0.9142470590995904,-0.9767543051390191,-0.9998886049019374,-0.9827174152329964,-0.9259329064403141,-0.8318240609242815,-0.7041844043435579,-0.5481590886721142,-0.37003749122793206,-0.17699968999959367,0.023172965151331167,0.22241151854577562,0.41268466812801696,0.5863225070881666,0.736325697651162,0.8566476142408003,0.9424380828337184,0.9902388913769128,0.9981231902451545,0.9657731635106631,0.8944928400964485,0.7871555283971391,0.6480879932753555,0.48289604425812166,0.29823856546775906,0.10155909613794874,-0.09921421830223605,-0.2959882096102663,-0.48083092217781753,-0.6462913500015114,-0.7856997865837003,-0.8934366806665458,-0.9651591602295458,-0.9979760935726675,-0.9905646307769181,-0.9432235277575932,-0.8578611034196139,-0.7379183153606327,-0.5882300549405582,-0.41483025290807396,-0.22470865177442761,-0.02552904943472496,0.17467962837135953,0.3678469738921476,0.546186415338357,0.7025090934338913,0.8305136441875758,0.9250402067486679,0.9822784172929802,0.9999210047116289,0.9772567966627245,0.9151993869141561,0.8162503083972179,0.6843981964647925,0.524958007080981,0.34435677105362605,0.14987452055290945,-0.05064916883884822,-0.24913119125932442,-0.4375707404011701,-0.608371821851339,-0.7546494474723705,-0.8705071691354199,-0.9512747644243487,-0.9936964932074765,-0.996062336455851,-0.9582769270759974,-0.8818633941554275,-0.7699019656601043,-0.6269058045073033,-0.4586390830594482,-0.2718846294536563,-0.07417051193578636,0.12653341741733998,0.3221367872745422,0.5047548297550327,0.667026215261197,0.8024097875268552,0.9054482374931769,0.9719880873269837,0.999347117027842,0.9864224846620924,0.9337351818988407,0.8434090328464585,0.7190850827455697,0.565774827509171,0.3896582004237625,0.1978344591635028,-0.001963985142551515,-0.20168326124724886,-0.39327268917203223,-0.5690093029535637,-0.7218091632465516,-0.8455129107740607,-0.9351340499763712,-0.9870599545456501,-0.9991974923193244,-0.9710573993953819,-0.9037740023501335,-0.800059493557137,-0.664094602767167,-0.5013600719770077,-0.3184157268300801,-0.12263605017724302,0.07808708317671374,0.2756625277879401,0.4621260214816755,0.6299612246000519,0.7724027035016053,0.8837086450537133,0.9593923090046944,0.9964028883919823,0.9932484875093872,0.9500562601926995,0.8685672842510644,0.7520663786557802,0.605249692554245,0.4340354035924675,0.24532515629414783,0.046725856909519026,-0.15375696082179408,-0.34804183857338467,-0.528297156854359,-0.6872568274321786,-0.8185131892019964,-0.9167753008770017,-0.9780822187236164,-0.999962662123993,-0.981534630847369,-0.923540958461697,-0.8283193687272719,-0.6997082419997037,-0.5428918901950207,-0.36419157728134227,-0.17081070925659894,0.029455535002094843,0.22853442724085735,0.41840110134170533,0.5914020355134866,0.7405635656000419,0.8598729933418189,0.944520958120653,0.9910953021890759,0.9977186146800668,0.9641239100011226,0.8916653900180601,0.7832638562054234,0.6432889721976516,0.47738312273679834,0.2922339692578795,0.09530487039112305,-0.10546596587247951,-0.30198547118587343,-0.48633194826623666,-0.6510743943523176,-0.7895720447759625,-0.8962420620507989,-0.9667845799388959,-0.9983560309716273,-0.9896837705965942,-0.9411173774540305,-0.8546145618688753,-0.7336622505871297,-0.583136028828984,-0.4091036055479906,-0.21858022420504702,-0.019245878447252947,0.1808642682813289,0.37368378001509706,0.5514401061375724,0.706967892739559,0.8339978178899038,0.9274093078762143,0.98343694742723,0.9998222635263122,0.9759047644130227,0.9126485639926983,0.8126035184243549,0.6798024414704578,0.5195985418561692,0.3384496355330223,0.14365783124982465,-0.0569248173042816,-0.25521282762477865,-0.44321321402748054,-0.6133476847409083,-0.7587581226928022,-0.8735830360716572,-0.9531938349425729,-0.9943814096138174,-0.9954854897838374,-0.9564615700033193,-0.878882703689006,-0.7658760933722241,-0.621997033228395,-0.4530452852606141,-0.265831291010894,-0.06790164279935366,0.13276511925961976,0.3280801220474932,0.5101702217541015,0.6716953701443922,0.8061444917553409,0.9080979452152029,0.9734459888778222,0.9995544444254811,0.9853708805433219,0.9314670364044542,0.8400157748753605,0.7147034944579574,0.5605815306401669,0.3838625366651546,0.19167005160435416,-0.008248649358585615,-0.20783484743267233,-0.39904322701218153,-0.5741661821849572,-0.7261445101714546,-0.8488519676458983,-0.9373422194801242,-0.9880482254133015,-0.9989260273721918,-0.9695371413799734,-0.9010662328363378,-0.7962733626792391,-0.659382729384246,-0.49591239160978967,-0.3124518353638315,-0.11639635195650612,0.08435106604302281,0.2816982942772256,0.467690269968882,0.6348296603413354,0.7763790799506414,0.886632674556247,0.9611461239907144,0.9969157926148894,0.9924998058103472,0.9480761719157901,0.8654356067147467,0.7479093497181399,0.6002348819676461,0.4283649582701859,0.2392276517722786,0.040447083472064556,-0.15996390594450233,-0.35392675354915515,-0.5336228208795938,-0.6918085630977795,-0.8221075161354485,-0.919267331832217,-0.9793714999832794,-0.9999972227866138,-0.9803130777733362,-0.921112532430665,-0.8247819595434358,-0.6952044425557707,-0.5376032485553814,-0.35833127848348,-0.16461498182647863,0.03573694141724298,0.23464830927531397,0.4241010085344834,0.5964582047209767,0.7447721827437968,0.8630644091499885,0.9465665266865092,0.9919125666851046,0.9972746311910058,0.9624365754924328,0.8888027209096446,0.7793412466310494,0.6384645424700309,0.47185134552056235,0.28621783038068516,0.08904688028937947,-0.11171354774450805,-0.3079708049292258,-0.49181376519872616,-0.6558317225444231,-0.7934131164245195,-0.8990120436353746,-0.9683718135578928,-0.998696535269923,-0.9887638198528431,-0.9389740548640982,-0.8513342647229949,-0.7293772075968008,-0.5780189699905017,-0.40336079939970026,-0.21244316314660447,-0.012961947285529293,0.18704176440824252,0.37950582636342534,0.5566720161366114,0.7113987682031346,0.8374490503178906,0.9297417781591926,0.9845566337353078,0.9996840313270249,0.9745141858435767,0.9100616932470392,0.8089246322099228,0.6751798356161175,0.5142185535102787,0.3325291319172434,0.13743546774480675,-0.0631982173514473,-0.2612843835851267,-0.44883818160320305,-0.6182993216026438,-0.7628368284589473,-0.8766243981953072,-0.9550752561780618,-0.9950270499092118,-0.9948693233918938,-0.9546084345788296,-0.875867299083435,-0.7618199704842079,-0.6170636942894788,-0.44743359306360453,-0.2597674527545956,-0.06163009168139746,0.13899157714067725,0.33401049830045265,0.5155654630321036,0.6763379943809631,0.8098473548611815,0.9107117848535238,0.9748654412256914,0.9997222913874738,0.984280356211783,0.9291620997931163,0.8365893379324503,0.7102936767872717,0.555366091902877,0.3780517110910466,0.1854980734547272,-0.014532987769185171,-0.21397822455018212,-0.40479800342919553,-0.5793003829807515,-0.7304511758158105,-0.8521574965337391,-0.9395133658088266,-0.9889974703183285,-0.9986151068106625,-0.9679785885534148,-0.898322872977603,-0.7924557805688225,-0.6546448116798089,-0.4904451236779631,-0.3064756026644087,-0.11015205630856482,0.09061171720815296,0.28772293423753825,0.47323604560980614,0.6396730215588896,0.7803247909521461,0.8895216838111221,0.9628619755942184,0.9973893206237162,0.9917119223200118,0.946058636493845,0.8622697461731716,0.7437227798314194,0.5951963632831457,0.4226775933741286,0.2331206982285461,0.03416671245443701,-0.16616453280738136,-0.3597976891139065,-0.5389274078523948,-0.696332973685089,-0.8256693714380394,-0.9217230535349125,-0.980622097993955,-0.9999922855247202,-0.979052804259822,-0.9186477242653603,-0.8212119730936754,-0.6906731839029012,-0.5322933726442398,-0.352456826304522,-0.15841275242817482,0.042016936293229265,0.24075292316293412,0.42978416457122093,0.6014908150018925,0.7489513828503999,0.8662217356104861,0.948574707735276,0.9926906525846558,0.9967912573144461,0.9607112266309601,0.8859049458410064,0.7753878546095261,0.6336148946479825,0.4663009311036388,0.2801903864618352,0.0827853730110253,-0.11795671715089309,-0.3139439744310813,-0.49727615645439205,-0.6605631466727162,-0.7972228498145933,-0.9017465160114964,-0.9699207983938418,-0.9989975930183093,-0.9878048148818932,-0.9367936446448655,-0.8480203415472032,-0.7250633556406523,-0.5728790805390617,-0.39760206129265235,-0.20629771100072555,-0.00667750415236834,0.193211872753147,0.38531288297753596,0.5618819386854078,0.7158015448139873,0.8408672051546398,0.9320375254696115,0.985637431991765,0.9995063135736721,0.9730851158794303,0.9074388768534879,0.8052137950626952,0.6705305614855327,0.5088182545424679,0.32659549405422217,0.13120767580886963,-0.06946912119326211,-0.2673456193259536,-0.45444542095297236,-0.6232265368566231,-0.7668854036700191,-0.8796311353784889,-0.95691895381841,-0.99563338859215,-0.9942138616173815,-0.9527175939977001,-0.8728172994412666,-0.7577337572049365,-0.6121059825476566,-0.44180422811922987,-0.25369335419467165,-0.055356106295858194,0.1452125451276661,0.33992768179532407,0.5209403404879076,0.680953904596211,0.813518230588562,0.9132896531666581,0.9762463883050139,0.9998506512842052,0.9831509547410826,0.9268204631054164,0.8331298573551887,0.7058558039126419,0.5501287172965964,0.3722259532175213,0.17931876849596085,-0.020816752155450324,-0.2201131499485695,-0.41053679112092656,-0.5844117025502016,-0.7347289900745578,-0.8554293668755701,-0.9416474032065048,-0.9899076517674578,-0.9982647429154826,-0.966381802475452,-0.89554403113135,-0.7886068980128058,-0.6498810367920335,-0.4849584841278639,-0.30048726478114773,-0.10390340987104818,0.0968687893884638,0.2937362097077694,0.47876312935731163,0.6444911169495557,0.7842396806582932,0.8923755587080479,0.9645397960425331,0.9978234537150448,0.9908848681582431,0.9440037336155496,0.8590698276717218,0.7395068343568991,0.5901343355122356,0.4169735335439255,0.22700453687561092,0.027884991918832137,-0.17235859649785926,-0.36565441337733073,-0.5442107082520996,-0.700829880488702,-0.8291986144235519,-0.9241423689889081,-0.981833963359435,-0.999947850533323,-0.9777538600851527,-0.9161466313208165,-0.8176095503852446,-0.6861146450170683,-0.5269624721911597,-0.34656845277378145,-0.15220426603755646,0.0482952715829421,0.2468480277832487,0.43545034497822077,0.6064996675780209,0.753101000849737,0.8693448480152954,0.9505454219477868,0.993429529154838,0.9962685121427056,0.9589479315645608,0.8829721792684593,0.7714038362919963,0.6287402202832375,0.460732098716788,0.2741518755734064,0.07652059587294935,-0.12419522749882893,-0.319904743763095,-0.5027189062792218,-0.6652684798553298,-0.8010010944694101,-0.9044453711728808,-0.9714314732649159,-0.9992591923255816,-0.9868067935625902,-0.9345762329181301,-0.8446729232348902,-0.7207208651072788,-0.5677165634901945,-0.39182761868589,-0.2001441105006889,-0.0003927972708062588,0.19937434960889192,0.3911047204901089,0.5670696680020743,0.7201760486708562,0.8442521473898154,0.9342964591300059,0.9866792995071972,0.9992891172857538,0.971617610966114,0.9047802184080876,0.8014711535533766,0.6658548027159771,0.503397858253833,0.32064895631131146,0.12497470142777756,-0.07573728114146491,-0.2733962954403627,-0.4600347106019587,-0.6281291358875298,-0.7709036884151088,-0.8826031288610476,-0.9587248550411849,-0.9962004017134459,-0.9935191303497519,-0.9507891229444853,-0.8697328252316017,-0.7536176149318018,-0.6071240938227057,-0.4361574127763393,-0.24760923524596504,-0.04907993445305226,0.15142777750457992,0.34583143881509804,0.5262946418243221,0.6855429184708403,0.8171569739449742,0.9158314483337364,0.9775887755711186,0.9999395190457095,0.9819827207403392,0.9244422188313594,0.8296374697864465,0.7013900511212414,0.5448696136873253,0.3663854931505622,0.17313238079834212,-0.027099694320699398,-0.22623938131011934,-0.41625936341654124,-0.589499939006324,-0.7389777839825208,-0.8586674494389468,-0.9437442473827992,-0.9907787338103091,-0.99787494952533,-0.964746846215996,-0.8927298170563708,-0.7847268670346234,-0.6450915928809209,-0.4794526896708689,-0.2944870582415144,-0.09765065945320717,0.10312203544201759,0.2997378831750322,0.4842713029022556,0.6492837562081237,0.7881235944387767,0.8951941865246285,0.9661795190649572,0.9982181747414559,0.9900186759920386,0.9419115444454152,0.8558359776008307,0.7352616798161375,0.5850489985952447,0.4112530040789332,0.22087940928949115,0.02160216998086253,-0.17854585236259646,-0.3714966950101206,-0.5494725133985372,-0.7052991058898829,-0.8326951056938888,-0.9265251826359994,-0.9830070482134425,-0.9998639195675187,-0.9764162965550698,-0.9136093523852421,-0.8139748337068231,-0.6815290059515152,-0.5216107577564223,-0.3406663904704375,-0.14598976787751894,0.05457169930447933,0.25293338239171753,0.4410993259525984,0.6114845646095315,0.7572208728399044,0.872433623007614,0.9524785914847043,0.9941291672114931,0.9957064163231913,0.9571467599399874,0.8800045370305158,0.7673893490392786,0.6238407119157632,0.45514506831764034,0.26810253622492686,0.07025279632187321,-0.13042883237953315,-0.32585287748659597,-0.5081417996955924,-0.6699475362406824,-0.8047477011555277,-0.9071085025201024,-0.9729037785024534,-0.9994813228590969,-0.9857697953147974,-0.9323219072674158,-0.8412921420026201,-0.7163499075164409,-0.5625316227529884,-0.3860376996584407,-0.19398260470184017,0.005891925125362177,0.20552895156986684,0.39688111013526195,0.572234999181595,0.7245221069895181,0.8476037433246704,0.9365184899168549,0.9876821951299413,0.9990324510420961,0.9701117290671618,0.902085822922766,0.7976968555090849,0.6611527439904759,0.49795757873927343,0.31468975356495527,0.11873679079176609,-0.08200244961583288,-0.2794361729385419,-0.46560582978430903,-0.6330069250523395,-0.7748915239798697,-0.8855402612549754,-0.9604928885168385,-0.9967280668772052,-0.9927851570295108,-0.9488230975900026,-0.8666139982850529,-0.7494717062443319,-0.6021182248896179,-0.4304933700729357,-0.24151533621932456,-0.04280182404931632,0.15763702878195765,0.35172153617276414,0.5316281555570661,0.6901048547478241,0.8207634412072755,0.918337069958985,0.9788925500022987,0.9999888911618817,0.9807757003524994,0.9220274609069186,0.8261123131684788,0.6968965948016884,0.5395889887995083,0.360530561576861,0.16693915471191184,-0.033381566101408806,-0.23235667666084678,-0.4219654942854762,-0.5945648913735058,-0.7431973897207684,-0.8618716163260901,-0.945803815516526,-0.9916106820408228,-0.9974457420362995,-0.9630737843525746,-0.8898803419084357,-0.780815840887802,-0.6402766691200048,-0.47392795777533525,-0.2884752200420889,-0.09139405202605225,0.10937120837788779,0.3057277175851317,0.489760348682612,0.6540507500345907,0.7919763788866354,0.897977455930656,0.9677810798956852,0.9985734681122469,0.9891133800343176,0.9397821516209142,0.8525683236911596,0.7309874838843939,0.5799405533929861,0.40551623092871736,0.21474555740101794,0.015318494799530362,-0.18472605601726091,-0.3773243032536372,-0.5547126154608437,-0.7097404733627707,-0.8361587071443919,-0.9288714003597736,-0.9841413062214119,-0.999740495942415,-0.9750401665007032,-0.9110359876762592,-0.8103079666225079,-0.6769164478299706,-0.5162384407221313,-0.3347508725143489,-0.13976950340874797,0.06084597155105704,0.259008746628796,0.4467308843707099,0.616445309202791,0.7613108360941325,0.8754879385867896,0.9543741399896319,0.9947895391203053,0.995104992057583,0.9553077828999468,0.877002136343318,0.7633445514159468,0.6189165630664194,0.4495400605830142,0.26204260735330004,0.06398222192344469,-0.13665728557752876,-0.3317881406621021,-0.513544622509873,-0.6746001310153303,-0.8084625218894153,-0.9097358048645646,-0.9743376559532385,-0.9996639758451336,-0.984693861097907,-0.9300307567341145,-0.8378781313846075,-0.7119506555125291,-0.5573244631224087,-0.3802325329006192,-0.187813436971435,0.012176414801956777,0.2116754355411703,0.40264182375664526,0.5773777282036353,0.728839548109213,0.8509218605779368,0.938703530064352,0.9886460792475359,0.9987363249805057,0.96856752966192,0.8993557968207025,0.7938910500071058,0.65642457103136,0.49249763087933246,0.30871812119183945,0.11249419028581728,-0.08826437915464069,-0.28546501325720314,-0.4711585584515656,-0.6378597116880564,-0.7788487528528519,-0.8884424165493707,-0.9622229844115239,-0.9972163632416718,-0.992011970647188,-0.9468195955882813,-0.863460941789154,-0.7452961948977701,-0.5970885734702854,-0.42481232372777655,-0.23541189781145144,-0.03652202305755626,0.16384005370657995,0.3575977412211625,0.5369406710226388,0.6946395332396473,0.8243374899271628,0.920806419075229,0.980157660102052,0.9999987656826221,0.9795299412524957,0.9195762847102404,0.8225545267380403,0.6923756124365938,0.534287051207353,0.35466138975470524,0.1607393348571499,-0.03966211937599198,-0.23846479437961074,-0.42765495834688283,-0.5996063595963603,-0.7473876406230162,-0.8650417409787051,-0.9478260262588288,-0.9924034635986952,-0.9969771374012212,-0.961362682967903,-0.8869957182363651,-0.7768739740501147,-0.6354364556893086,-0.468384506657013,-0.2824519876385538,-0.08513383471361705,0.11561606136614093,0.31170547635149126,0.4952300498920613,0.6587919101421582,0.7957978818243182,0.9007252569923596,0.9693444152762406,0.9988893197940409,0.9881690160424754,0.9376156392488393,0.8492669950087927,0.7266844153839276,0.5748092016787252,0.3997634406845399,0.20860322348517227,0.009034214567993911,-0.19089896335573361,-0.3831370079291265,-0.5599308074652886,-0.7141538074821621,-0.8395892819696141,-0.9311809294891579,-0.9852366925824421,-0.999577584532999,-0.9736255242764852,-0.9084266388367168,-0.8066090939664733,-0.672277152839413,-0.510845733284151,-0.32882213255684617,-0.13354371831946266,0.06711784050136894,0.26507388052953973,0.45234479779716974,0.6213817054182286,0.7653707290668398,0.8785076741134175,0.9562319925921301,0.9954106187978582,0.9944642631009447,0.9534310730804515,0.8739650957957376,0.759269603183337,0.6139679682295839,0.44391729689959497,0.25597232831380373,0.05770912035302585,-0.14288034108149644,-0.3377102988581707,-0.518927161320988,-0.679226080410926,-0.8121454099429566,-0.9123271744331328,-0.9757330489819578,-0.9998071440692511,-0.9835790334092056,-0.9277028718141258,-0.8344310262274371,-0.7075232828572707,-0.5520952902712131,-0.37441234770541615,-0.1816368509793596,0.01846042353421667,0.21781355874887956,0.4083866338174999,0.5824976519402298,0.7331282014995811,0.8542063680905042,0.9408514932677063,0.9895709137884717,0.9984007507973967,0.9669850737432855,0.8965902479325598,0.7900538873692754,0.6516704705920818,0.48701823033121844,0.3027342950599197,0.1062471464803792,-0.0945228224240944,-0.29148257826900525,-0.47669267728186276,-0.6426873041189727,-0.7827752187310786,-0.8913094801148561,-0.9639150743898542,-0.9976652715201018,-0.991199601742113,-0.9447786960738196,-0.8602737802833801,-0.7410912458165301,-0.592035338226144,-0.4191144981309224,-0.22929916109649567,-0.030240779517793668,0.17003660727126818,0.36345982186163917,0.5422319783872191,0.6991467748354236,0.8278789789366083,0.9232393981480761,0.9813840559010163,0.9999691422179066,0.9782454926453636,0.9170887870580552,0.81896425102083,0.6878272825958738,0.5289640103269716,0.34877820950484434,0.15453316611464102,-0.04594110607471363,-0.24456349320776866,-0.4333275308782175,-0.6046241445467117,-0.7515483711826673,-0.868177698182985,-0.9498107997362498,-0.9931570471706266,-0.996469154129064,-0.9596136096470922,-0.8840760599770725,-0.7729014222177676,-0.6305711437676598,-0.462822555271323,-0.2764175989367485,-0.07887025478206598,0.12185634774702127,0.31767092336417463,0.5006801904881572,0.6635070492644075,0.7995879523100413,0.903437481177001,0.9708694634578924,0.9991657173113153,0.9871856213170151,0.9354120929021705,0.8459321219495448,0.7223526442776407,0.5696551461310453,0.3939948605702023,0.20245265015195793,0.002749577502627728,-0.19706433056042125,-0.3889345794458646,-0.5651268833036394,-0.7185389339301141,-0.842986694668718,-0.9334536788023343,-0.9862931640308644,-0.9993751917739573,-0.9721724257579758,-0.9057814089306222,-0.8028783618368518,-0.6676113042228746,-0.5054328484440191,-0.3228804047713955,-0.12731265851559742,0.0733870584289207,0.2711285445330824,0.4579408444932302,0.6262935582777193,0.7694003914004541,0.8814927103139341,0.9580520759106731,0.9959923817127377,0.9937842547608342,0.9515167046077471,0.8708935353448499,0.7551646652939669,0.608995122864936,0.43827699935569836,0.2498919388705271,0.0514337393856836,-0.1490977530929767,-0.3436191181613023,-0.5242892035293333,-0.683825201711562,-0.8157962198493791,-0.9148825088718013,-0.9770899024733295,-0.9999108218765898,-0.9824253562821953,-0.9253383444544122,-0.8309509626849844,-0.7030679644231016,-0.5468443107413558,-0.36857737395838996,-0.1754530906888423,0.024743703116149946,0.22394307874930494,0.4141153134091215,0.5875945681647343,0.737387897767089,0.8574571361306633,0.942962294686632,0.9904566622236183,0.9980257417472728,0.9653644238151285,0.8937892854921826,0.7861855191559044,0.6468906304501765,0.48151959352028345,0.29673851151845754,0.09999590612162777,-0.10077753222764813,-0.2974886302920681,-0.48220796768868524,-0.6474895116647651,-0.7866707665269377,-0.8941413387079018,-0.9655690916176314,-0.9980747739815234,-0.9903480824012603,-0.9427004796581004,-0.8570526396545194,-0.7368570250879866,-0.5869587187497769,-0.41340011833518003,-0.22317736751543085,-0.023958341526800837,0.17622644472411347,0.36930754655385006,0.5475018686546632,0.7036264015079705,0.8313877683537597,0.9256359110795478,0.9825716889589685,0.9999000219378023,0.976922405264274,0.914565066201632,0.815341627825617,0.6832517849296158,0.5236200764079181,0.34288125320122625,0.14832089361596296,-0.05221827819005593,-0.2506525322587056,-0.43898298782381107,-0.6096180480320083,-0.7556794170590437,-0.8712793640748426,-0.9517580575542469,-0.9938714029915199,-0.9959218122841587,-0.9578266334751001,-0.8811214824513195,-0.7688983422985338,-0.6256809255254908,-0.4572423233046127,-0.27037229228316445,-0.07260355963038008,0.12809182104182262,0.3236238229998597,0.5061105552008625,0.6681959811623569,0.8033464406435387,0.9061140213571545,0.9723561642042642,0.9994026497469016,0.9861632347001498,0.9331715996166159,0.8425638362343445,0.7179923416618992,0.5644785903249161,0.38821071843359267,0.19629408033715337,-0.0035351681657583996,-0.20322191411143903,-0.3947167888112787,-0.5703006377408333,-0.7228956795025937,-0.8463508110505786,-0.9356895585302131,-0.9873106788381537,-0.9991333256594078,-0.9706809283397627,-0.9031004024394994,-0.7991159175901605,-0.6629190862722038,-0.5000000000000475,-0.3169259238447791,-0.12107657011210357,0.07965337771204144,0.27717249949220724,0.4635188034260484,0.6311806737728202,0.7733996639310153,0.8844429292851692,0.9598343180555797,0.9965348048864431,0.9930649938962327,0.9495647530957279,0.8677875763113662,0.7510298998847384,0.6039982233900921,0.43261939073188815,0.24380167918690043,0.0451563268868571,-0.1553092760361923,-0.3495143651847499,-0.529630537344782,-0.6883973132609879,-0.8194148074087361,-0.9174017072497908,-0.978408162834308,-0.9999750051720808,-0.9812328752848548,-0.9229372680491145,-0.8274380782130443,-0.6985848761865842,-0.5415717319361101,-0.3627278421296385,-0.16926240034614687,0.03102600537033742,0.23006375343812346,0.4198276362600307,0.5926682755589758,0.7416184686621855,0.8606740362995269,0.9450358509485085,0.9913032895676214,0.997611312642252,0.9637056438899357,0.8909530201320313,0.7822860981601436,0.6420852394001064,0.4760019376318713,0.2907310073890074,0.09374071612115562,-0.10702826151689959,-0.3034829320989262,-0.4877042118286042,-0.6522661446477619,-0.7905352423739493,-0.8969378804758152,-0.9671849707643664,-0.9984448544513715,-0.9894574462579536,-0.9405850284265869,-0.8537976471310615,-0.732593699955459,-0.5818589155579491,-0.40766941004752494,-0.2170467588670692,-0.01767495722818748,0.1824093215788165,0.37514068432384773,0.552750133674474,0.7080782363208401,0.834863719588522,0.9279958632121384,0.9837205123667373,0.9997914075724266,0.9755607313686253,0.9120052218228456,0.8116868002388961,0.6786493001608999,0.5182554605252706,0.33697075376224617,0.14210276273333008,-0.05849338778605994,-0.2567316710274587,-0.4446211058043344,-0.6145878728026987,-0.759780615083954,-0.8743466161445723,-0.9536677227999623,-0.9945465028457384,-0.9953351334854518,-0.9560018250339727,-0.8781321023591103,-0.7648648924061996,-0.6207659941167216,-0.45164403116497465,-0.2643163064555306,-0.06633399678092554,0.13432223496160725,0.32956394013071305,0.5115209295415449,0.6728585206326692,0.8070731983717734,0.9087547718147425,0.9738044587935988,0.9996001077424397,0.9851018965740863,0.9308942478873369,0.839162270903978,0.7136036797600849,0.5592797387241161,0.38241124273653654,0.19012775729204862,-0.009819774201837696,-0.2093714707963412,-0.4004834076394655,-0.5754518664241152,-0.7272238721167947,-0.8496814982390906,-0.9378884803598198,-0.9882891968144754,-0.9988519957425728,-0.969151090933036,-0.9003837252577868,-0.7953219098357216,-0.6582006843207426,-0.49454740253877455,-0.3109589249671809,-0.11483569942210152,0.08591655084315444,0.28320550668235595,0.4690784542775139,0.6360428588720763,0.7773683886952291,0.8873582144993014,0.9615786486317242,0.9970378668943535,0.9923065089165306,0.9475752956425891,0.8646473413745357,0.7468654702709069,0.598977467172713,0.4269446944925834,0.2377017898161538,0.03887713080188646,-0.16151466456831,-0.355395807077898,-0.5349509517951487,-0.6929422344698261,-0.8230010296939986,-0.9198846700637637,-0.9796877779962119,-0.999999691420608,-0.9800016375178281,-0.9204997374360305,-0.8238925115635528,-0.6940741952206483,-0.536277762112213,-0.35686398326411695,-0.16306502447137228,0.037307082158360205,0.2361753410610492,0.4255233767444462,0.5977185737213028,0.7458197470856368,0.8638569415358905,0.9470720801520717,0.9921107623803744,0.9971574798514843,0.9620087994862531,0.8880815638789861,0.7783557784012106,0.6372544872453293,0.4704654806027426,0.28471201995644496,0.0874818235466147,-0.11327476340027282,-0.30946524692655036,-0.49318119261088045,-0.6570170144001346,-0.7943684936329488,-0.899698994960667,-0.9687626480060397,-0.9987754983122028,-0.9885277284906108,-0.9384324259354049,-0.8505089312790183,-0.7283014388119092,-0.5767361300827234,-0.4019225996196178,-0.21090757729828974,-0.011390874803679379,0.1885849936238958,0.38095900477431527,0.5579765661505488,0.7125021034353888,0.8383066953474649,0.9303191613323782,0.9848304807480666,0.9996433034118328,0.974160524741836,0.9094093550306548,0.8079999126191724,0.6740200100790351,0.5128703745707143,0.3310469446409065,0.13587901907102598,-0.06476618700828891,-0.2628006693997221,-0.4502416621252106,-0.6195334225606093,-0.7638518032681384,-0.8773793332417744,-0.9555397200452868,-0.9951823200681651,-0.9947091409055872,-0.9541392564000563,-0.8751080377750546,-0.7608012318542524,-0.6158265436714809,-0.4460278999738925,-0.2582498806533275,-0.06006181386905366,0.14054734341704758,0.3354910401337851,0.5169110998111025,0.6774944835141573,0.8107680782951765,0.9113596282452178,0.9752142900211197,0.999758083498728,0.9840016488596025,0.9285801276652099,0.8357275603135284,0.7091868319156758,0.5540587966729689,0.37659666254729035,0.18395392457428228,-0.01610399237613964,-0.21551275771978298,-0.40623420816042105,-0.5805803658897517,-0.7315233408176173,-0.8529786246787477,-0.9400503574382044,-0.9892286793103096,-0.9985312131354448,-0.9675829739633659,-0.8976314846888677,-0.7914964884292466,-0.6534562847361784,-0.4890752714273766,-0.3049796438233268,-0.10859029294765879,0.09217633043951638,0.2892273278116591,0.47461957745204486,0.6408799215287779,0.7813064089361972,0.890238450808374,0.9632849987414951,0.9975015478664802,0.991508829780386,0.9455484108280252,0.8614729545673797,0.7426715409391811,0.5939330525229362,0.42125313477707865,0.2315925116919813,0.03259639914667347,-0.1677136735886814,-0.36126321153519414,-0.5402502367345691,-0.6974597858225817,-0.8265547450564362,-0.9223312992415703,-0.9809286974167346,-0.9999848796471147,-0.978731691612597,-0.9180258488928054,-0.8203144027795194,-0.6895360996883648,-0.5309626103708747,-0.3509860289727762,-0.1568612078486267,0.04358668538986206,0.24227760022232953,0.43120230989207314,0.6027452631749576,0.7499915670952416,0.8670057261211968,0.9490709018701959,0.9928790487683101,0.9966642613004656,0.960273957626083,0.8851750301499762,0.7743947151191509,0.6323985647909274,0.46491044111191665,0.2786817869587241,0.08121947561207125,-0.11951679115316616,-0.31543533848526495,-0.498638693705589,-0.6617419332720397,-0.7981703688979774,-0.9024245731038374,-0.9703020610275017,-0.999066692504237,-0.9875589658212142,-0.9362427572082188,-0.8471866219960524,-0.7239804111931757,-0.5715905646641483,-0.39615991403901746,-0.20476006529497384,-0.005106342461894932,0.19475321693250136,0.3867622780929273,0.5631809596492203,0.7168978281174015,0.8417165596398773,0.9326057136745789,0.9859015502613763,0.9994557153058442,0.9727218406893153,0.906777568356649,0.8042811105912253,0.6693640975316709,0.5074650312445583,0.32511005981602265,0.12964990845452198,-0.07103642809339109,-0.2688592876622651,-0.45584443478556447,-0.6244545019661127,-0.7678928208077032,-0.8803773955800301,-0.9573739753500944,-0.9957788295452747,-0.9940438592700588,-0.952239001141133,-0.8720494081437857,-0.7567075211492232,-0.6108627692883066,-0.44039415155760975,-0.2521732544885587,-0.053787258633489446,0.14676690052870964,0.34140488890027715,0.5222808531083077,0.6821036866953173,0.814430934473354,0.9139284877619429,0.976585602201227,0.9998765707760319,0.9828625350143296,0.9262293303534346,0.8322598401272806,0.7047419725855991,0.5488159703886587,0.3707672075300785,0.17777282603811023,-0.022387574474456644,-0.2216455323128923,-0.41196896322856985,-0.5856859335723278,-0.7357939157845381,-0.856242060139478,-0.9421751043753931,-0.9901290892179024,-0.9981709905083017,-0.9659766393682755,-0.894843789440884,-0.7876398044673952,-0.6486860749128823,-0.483583822804177,-0.29898831658301367,-0.10234059737011035,0.09843246925191217,0.29523772503018303,0.4801419540862693,0.6456916706883714,0.7852135691099326,0.8930835244486108,0.9649533009874631,0.9979258294883493,0.9906719879945713,0.9434841787099654,0.8582645412720227,0.7384482775415251,0.5888651786850414,0.4155449363908972,0.22547408611891465,0.026314379997771892,-0.17390605824863603,-0.3671163468059086,-0.5455281828516569,-0.7019497888848167,-0.830075813131278,-0.9247414981461889,-0.9821308720820101,-0.9999305704366359,-0.9774230877295405,-0.915515700133241,-0.8167038931890779,-0.6849707688356684,-0.5256264866501399,-0.34509421142325597,-0.1506511955166397,0.04986456703308691,0.24837028989466806,0.4368642113960616,0.6077481453756333,0.7541337639121976,0.8701202656846732,0.9510322371533889,0.9936081183856051,0.9961316764703542,0.9585011868323002,0.8822335337473445,0.7704030647681059,0.6275176638363793,0.4593370385726337,0.27264054657824854,0.07495391966790166,-0.1257540982276975,-0.3213929709682431,-0.5040764995520662,-0.6664407146384269,-0.8019407180025047,-0.9051145072503235,-0.9718031490249776,-0.9993184255258728,-0.98655119651402,-0.9340161087325408,-0.8438308505069394,-0.7196307877714331,-0.5664224225418496,-0.39038158092068453,-0.198604465671483,0.00117839157037876,0.2009137478718264,0.3925502750618485,0.5683631086070345,0.7212652367444751,0.8450931777828533,0.9348554299243765,0.9869336786015082,0.9992286506638219,0.9712447360362553,0.9041099657512042,0.8005305410404578,0.6646817464183684,0.5020396440472386,0.3191603337828206,0.12341567692155499,-0.07730386337928302,-0.27490728651135704,-0.461429202486738,-0.6293509166464243,-0.771903508090326,-0.8833406847418251,-0.9591704162648561,-0.9963360077161001,-0.9933393148561592,-0.9503011343135669,-0.8689563342751896,-0.7525839219846374,-0.6058748670266638,-0.4347430084380633,-0.2460866679759024,-0.04751057890700046,0.15298066063631385,0.34730525284484154,0.5276299773385102,0.6866859481217673,0.8180616222306203,0.9164612488999477,0.9779183411698351,0.9999555648943385,0.9816846000310362,0.9238419488038617,0.8287592473134596,0.7002692773329001,0.5435514669522805,0.3649231079370727,0.17158470582471788,-0.02867027230753436,-0.22776955234318402,-0.41768744633261956,-0.5907683678118176,-0.7400354283381636,-0.8594716757220255,-0.9442626372480782,-0.990990390972874,-0.9977713420892252,-0.9643321505948526,-0.8920207496222933,-0.7837520102815674,-0.6438902432648514,-0.47807327357055146,-0.29298517989194384,-0.09608685954025911,0.10468472017538329,0.3012364609388895,0.4856453660572158,0.6504779162963107,0.7890897148911835,0.8958933230452985,0.9665834894749381,0.9983106950016633,0.9897960166126768,0.9413826808215577,0.8550222282144541,0.7341958468885027,0.5837740458302203,0.40982032479655095,0.21934675476268123,0.02003132148258897,-0.1800915739612087,-0.372954981702598,-0.5507845816778688,-0.7064120663102773,-0.8335640948432881,-0.9271151715794573,-0.9832942545085128,-0.9998367659342798,-0.9760758775559281,-0.9129693903031881,-0.8130611254003571,-0.6803783829840707,-0.5202696017164539,-0.33918876333087433,-0.14443523275846618,0.05614047912393722,0.25445316942874463,0.44250885762248354,0.6127270227191821,0.758246173928023,0.8732004372081574,0.9529560085327271,0.9942979424354497,0.9955597463972136,0.9566905571258506,0.8792571908543895,0.7663809850104535,0.6226119771677667,0.4537454931232877,0.26658853743213745,0.06868540319119221,-0.13198643826261147,-0.32733790906055177,-0.5094943953677201,-0.6711131729067111,-0.8056793920250843,-0.9077686911530629,-0.973265852708415,-0.9995306874341473,-0.9855044603738984,-0.9317525684566682,-0.8404417493579958,-0.7152527403482172,-0.5612319078474224,-0.3845878284972092,-0.19244102156201284,0.007463079058445051,0.20706634311306493,0.39832276706662867,0.5735228083393419,0.7256041568125929,0.8484364164065527,0.9370682212224225,0.9879268250014589,0.9989621184543731,0.9697292691253722,0.9014066525794026,0.7967483521070632,0.659973141682623,0.4965944272708344,0.31319800154389044,0.11717657071190254,-0.08356824531442136,-0.2809444270631514,-0.46699574464158755,-0.6342224732026563,-0.7758837067018163,-0.8862690836830089,-0.9609289718337038,-0.9968538325732186,-0.9925955354920197,-0.9483257324593061,-0.865828938339576,-0.748430597234556,-0.6008630338987064,-0.4290746938242461,-0.239990361523671,-0.041232022606040516,0.15918837830860705,0.35319189891459474,0.5329582612218663,0.6912410868031471,0.8216599981618813,0.9189578116202377,0.9792124542863377,0.9999950627335357,0.9804678904358171,0.921418077313435,0.8252259201384737,0.695768922820329,0.5382654943015138,0.35906459459861295,0.16538980835280107,-0.03495183772121569,-0.2338845759239608,-0.4233894316035736,-0.5958274678621516,-0.7442477109471248,-0.8626673438629239,-0.9463128736028336,-0.9918125505554815,-0.9973322836635496,-0.9626495725971566,-0.8891624767375927,-0.7798332594320612,-0.6390689792179216,-0.4725438413825118,-0.2869704708623246,-0.08982932646822955,0.1109328362581392,0.3072232985996109,0.49112959599088,0.6552384693051735,0.7929346931799515,0.8986677356168642,0.968175499814665,0.9986561292049948,0.9888809502338743,0.9392440001678192,0.8517461434596362,0.729914416942842,0.5786598550481665,0.40407952610504805,0.21321075964082456,0.01374747176952804,-0.1862699764106322,-0.37877888561055617,-0.5560192255958318,-0.7108464418477771,-0.8370194524121328,-0.929452225785984,-0.9844187987448927,-0.9997034698451394,-0.9746901143039007,-0.9103870199769482,-0.8093862432954578,-0.6757591235238684,-0.5148921671563383,-0.33326991794900834,-0.13821356509258437,0.06241417377616582,0.26052599856283054,0.44813602561890936,0.6176816985499167,0.7623286347105312,0.8762461190308733,0.9548421400230406,0.9949484936711558,0.9949484936711526,0.9548421400230312,0.8762461190308583,0.7623286347105109,0.6176816985498921,0.4481360256189321,0.2605259985628003,0.0624141737760778,-0.13821356509255914,-0.33326991794903793,-0.5148921671563652,-0.6757591235238914,-0.8093862432955097,-0.9103870199769376,-0.9746901143039077,-0.9997034698451401,-0.9844187987448971,-0.9294522257859514,-0.8370194524121157,-0.710846441847795,-0.5560192255958057,-0.3787788856105272,-0.18626997641054555,0.013747471769559387,0.21321075964079966,0.40407952610507675,0.5786598550481921,0.7299144169428634,0.8517461434596526,0.9392440001678299,0.9888809502338706,0.9986561292049931,0.9681754998146429,0.8986677356168504,0.7929346931799324,0.6552384693051927,0.4911295959908032,0.30722329859952696,0.11093283625816452,-0.08982932646826078,-0.2869704708623546,-0.4725438413824894,-0.6390689792179894,-0.7798332594320807,-0.8891624767376072,-0.9626495725971651,-0.997332283663552,-0.9918125505554701,-0.9463128736028233,-0.8626673438629368,-0.744247710947104,-0.5958274678620807,-0.4233894316035452,-0.23388457592393033,-0.03495183772118436,0.16538980835283199,0.3590645945986953,0.5382654943014924,0.6957689228203515,0.8252259201384914,0.921418077313425,0.9804678904358344,0.9999950627335356,0.979212454286343,0.9189578116202254,0.8216599981618634,0.6912410868030834,0.5329582612218398,0.35319189891461855,0.1591883783085761,-0.04123202260607184,-0.23999036152370146,-0.42907469382427443,-0.6008630338987315,-0.7484305972345391,-0.8658289383395916,-0.948325732459334,-0.9925955354920235,-0.9968538325732161,-0.9609289718336952,-0.8862690836829945,-0.7758837067017605,-0.634222473202676,-0.46699574464155985,-0.28094442706312134,-0.08356824531444677,0.11717657071199013,0.3131980015439202,0.49659442727086167,0.6599731416826465,0.7967483521070822,0.9014066525794407,0.9697292691253798,0.9989621184543719,0.987926825001454,0.9370682212224115,0.8484364164065361,0.7256041568125713,0.5735228083393161,0.3983227670665999,0.20706634311303426,0.007463079058356859,-0.19244102156204362,-0.3845878284972381,-0.5612319078474013,-0.7152527403482392,-0.8404417493580435,-0.931752568456659,-0.9855044603739037,-0.9995306874341464,-0.9732658527084078,-0.9077686911530259,-0.8056793920250657,-0.6711131729066879,-0.5094943953676931,-0.32733790906057586,-0.13198643826252404,0.06868540319122349,0.2665885374321129,0.45374549312331564,0.6226119771677913,0.7663809850105101,0.8792571908544043,0.9566905571258597,0.9955597463972166,0.9942979424354463,0.9529560085327176,0.8732004372081421,0.7582461739280025,0.6127270227192022,0.4425088576224554,0.25445316942865936,0.05614047912390592,-0.1444352327584972,-0.3391887633309038,-0.5202696017165291,-0.6803783829841353,-0.8130611254003423,-0.9129693903032009,-0.976075877555935,-0.9998367659342804,-0.9832942545084967,-0.9271151715794456,-0.8335640948432708,-0.7064120663102551,-0.5507845816777952,-0.3729549817025162,-0.18009157396117786,0.020031321482563483,0.21934675476271182,0.4098203247966314,0.5837740458301995,0.7341958468885239,0.8550222282144703,0.9413826808215683,0.9897960166126893,0.9983106950016581,0.96658348947493,0.8958933230452845,0.7890897148911992,0.6504779162962436,0.48564536605718844,0.3012364609389138,0.1046847201753521,-0.09608685954029032,-0.29298517989202816,-0.478073273570579,-0.6438902432648754,-0.7837520102815869,-0.8920207496223075,-0.9643321505948609,-0.9977713420892274,-0.9909903909728698,-0.9442626372480867,-0.8594716757220096,-0.7400354283381043,-0.5907683678118382,-0.4176874463325911,-0.2277695523431535,-0.028670272307503023,0.17158470582480476,0.364923107937049,0.5435514669523068,0.7002692773329225,0.8287592473134454,0.9238419488038955,0.9816846000310422,0.9999555648943388,0.9779183411698286,0.9164612488999352,0.8180616222305696,0.6866859481217445,0.5276299773385319,0.3473052528448122,0.15298066063628288,-0.047510578907031774,-0.2460866679759328,-0.43474300843809155,-0.6058748670266436,-0.7525839219846581,-0.8689563342752332,-0.9503011343135767,-0.9933393148561629,-0.9963360077161022,-0.9591704162648472,-0.8833406847417837,-0.7719035080903422,-0.6293509166464,-0.4614292024867102,-0.2749072865113816,-0.07730386337919509,0.12341567692158609,0.3191603337828503,0.5020396440472656,0.6646817464183494,0.8005305410405107,0.9041099657512175,0.9712447360362493,0.9992286506638232,0.986933678601503,0.9348554299243653,0.8450931777828365,0.7212652367444533,0.5683631086070088,0.39255027506181966,0.2009137478717957,0.0011783915703474093,-0.1986044656715137,-0.39038158092066105,-0.5664224225419223,-0.7196307877714944,-0.8438308505069257,-0.934016108732552,-0.9865511965140251,-0.9993184255258696,-0.9718031490249568,-0.9051145072503343,-0.8019407180024859,-0.6664407146384035,-0.5040764995520391,-0.3213929709681596,-0.1257540982276664,0.07495391966787623,0.2726405465782787,0.459337038572712,0.6275176638364037,0.7704030647681259,0.8822335337473325,0.9585011868323092,0.9961316764703619,0.993608118385608,0.9510322371533793,0.8701202656846577,0.7541337639122143,0.6077481453755632,0.4368642113960334,0.2483702898946377,0.04986456703305559,-0.1506511955166145,-0.34509421142333874,-0.5256264866501665,-0.6849707688356499,-0.816703893189096,-0.9155157001332537,-0.9774230877295471,-0.9999305704366364,-0.9821308720820042,-0.924741498146177,-0.8300758131312606,-0.7019497888847944,-0.5455281828516307,-0.36711634680587946,-0.17390605824866112,0.02631437999780323,0.22547408611900058,0.41554493639087403,0.5888651786850668,0.7384482775415462,0.8582645412720388,0.9434841787099946,0.9906719879945678,0.9979258294883473,0.9649533009874549,0.8930835244486223,0.7852135691098779,0.6456916706883474,0.4801419540862917,0.2952377250301531,0.09843246925188097,-0.10234059737019809,-0.2989883165830436,-0.4835838228041547,-0.6486860749129062,-0.7876398044674146,-0.894843789440898,-0.9659766393682836,-0.9981709905083036,-0.990129089217906,-0.9421751043753825,-0.8562420601394324,-0.7357939157845168,-0.5856859335723024,-0.41196896322859305,-0.22164553231286171,-0.022387574474368472,0.17777282603808514,0.3707672075301076,0.5488159703886849,0.704741972585581,0.8322598401273295,0.9262293303534463,0.9828625350143354,0.9998765707760314,0.9765856022012325,0.913928487761907,0.8144309344733358,0.6821036866953358,0.522280853108281,0.34140488890024767,0.1467669005286786,-0.053787258633520754,-0.252173254488589,-0.4403941515576379,-0.6108627692883765,-0.7567075211492437,-0.872049408143801,-0.9522390011411426,-0.994043859270056,-0.9957788295452668,-0.957373975350069,-0.8803773955800422,-0.7678928208076831,-0.6244545019660882,-0.455844434785486,-0.2688592876621801,-0.07103642809341651,0.12964990845455307,0.3251100598160523,0.5074650312445854,0.6693640975317364,0.8042811105912439,0.9067775683566384,0.9727218406893227,0.9994557153058471,0.985901550261371,0.9326057136745676,0.8417165596398605,0.7168978281173797,0.5631809596491474,0.38676227809295083,0.1947532169324706,-0.005106342461926283,-0.2047600652949489,-0.39615991403909845,-0.571590564664174,-0.7239804111931973,-0.8471866219960691,-0.9362427572082299,-0.987558965821228,-0.9990666925042356,-0.9703020610275079,-0.9024245731038238,-0.7981703688979586,-0.6617419332720162,-0.49863869370556185,-0.3154353384852352,-0.11951679115313503,0.0812194756121025,0.2786817869588088,0.4649104411119444,0.6323985647909517,0.7743947151191348,0.8851750301499908,0.9602739576261077,0.9966642613004635,0.9928790487683065,0.9490709018701861,0.8670057261211811,0.7499915670951832,0.6027452631749325,0.4312023098920449,0.24227760022229913,0.04358668538988753,-0.1568612078487138,-0.35098602897280556,-0.5309626103708531,-0.6895360996883875,-0.8203144027795374,-0.9180258488928403,-0.9787316916126034,-0.9999848796471148,-0.9809286974167285,-0.9223312992415582,-0.8265547450564186,-0.6974597858225593,-0.5402502367345426,-0.3612632115352179,-0.16771367358865047,0.03259639914676162,0.23159251169201178,0.4212531347771071,0.5939330525229614,0.742671540939202,0.8614729545674245,0.945548410828017,0.9915088297803901,0.9975015478664779,0.963284998741502,0.890238450808334,0.7813064089361776,0.640879921528754,0.4746195774520172,0.28922732781162913,0.09217633043942856,-0.10859029294768995,-0.3049796438233025,-0.4890752714274039,-0.6534562847362022,-0.7914964884292657,-0.8976314846888815,-0.9675829739633739,-0.9985312131354466,-0.9892286793102967,-0.9400503574381743,-0.8529786246787314,-0.731523340817596,-0.5805803658897725,-0.40623420816034045,-0.21551275771969686,-0.01610399237616513,0.1839539245743131,0.3765966625473194,0.5540587966730424,0.7091868319157378,0.8357275603135456,0.9285801276652215,0.9840016488596081,0.9997580834987272,0.9752142900211127,0.9113596282452048,0.8107680782951914,0.6774944835141343,0.516911099811027,0.33549104013380915,0.14054734341701652,-0.060061813869084955,-0.2582498806533578,-0.44602789997397146,-0.615826543671461,-0.7608012318542727,-0.8751080377750698,-0.9541392564000486,-0.9947091409055963,-0.995182320068162,-0.9555397200452943,-0.8773793332417593,-0.7638518032681182,-0.61953342256054,-0.45024166212518263,-0.26280066939974667,-0.06476618700825762,0.13587901907105707,0.3310469446409361,0.5128703745707412,0.6740200100790583,0.8079999126191573,0.9094093550306679,0.9741605247418559,0.9996433034118337,0.9848304807480611,0.9303191613323876,0.8383066953474478,0.7125021034353268,0.55797656615057,0.3809590047742863,0.188584993623865,-0.011390874803653887,-0.21090757729837595,-0.4019225996196465,-0.5767361300827489,-0.7283014388119308,-0.8505089312790048,-0.9384324259354353,-0.9885277284906154,-0.998775498312204,-0.968762648006032,-0.8996989949606533,-0.7943684936329298,-0.657017014400111,-0.4931811926108532,-0.30946524692652055,-0.11327476340024167,0.08748182354664592,0.284712019956475,0.4704654806027703,0.6372544872453096,0.7783557784012303,0.8880815638790266,0.9620087994862461,0.9971574798514866,0.9921107623803705,0.9470720801520616,0.8638569415358461,0.7458197470856538,0.5977185737212777,0.4255233767444178,0.23617534106107396,0.037307082158272074,-0.16306502447140322,-0.35686398326409313,-0.5362777621122394,-0.6940741952206708,-0.8238925115636028,-0.9204997374360427,-0.980001637517823,-0.999999691420608,-0.9796877779961942,-0.9198846700637515,-0.8230010296939808,-0.6929422344698034,-0.5349509517951703,-0.35539580707781554,-0.161514664568223,0.03887713080191779,0.23770178981618426,0.42694469449256034,0.5989774671727837,0.7468654702709655,0.8646473413745228,0.9475752956425991,0.9923065089165345,0.997037866894351,0.9615786486317156,0.887358214499287,0.7773683886952094,0.6360428588720521,0.4690784542774862,0.2832055066823259,0.0859165508431232,-0.1148356994220762,-0.3109589249672107,-0.4945474025388512,-0.6582006843207235,-0.7953219098357406,-0.9003837252578004,-0.9691510909330437,-0.998851995742577,-0.988289196814488,-0.9378884803598285,-0.849681498239074,-0.7272238721167732,-0.575451866424043,-0.40048340763948886,-0.20937147079636612,-0.009819774201806346,0.1901277572921352,0.38241124273661803,0.559279738724095,0.7136036797600671,0.839162270903995,0.9308942478873691,0.9851018965740819,0.9996001077424403,0.9738044587935917,0.9087547718147294,0.8070731983717213,0.672858520632646,0.5115209295415669,0.32956394013068346,0.1343222349615762,-0.06633399678101354,-0.26431630645556087,-0.4516440311649519,-0.6207659941167462,-0.7648648924062563,-0.8781321023590981,-0.9560018250339819,-0.9953351334854548,-0.9945465028457351,-0.9536677227999357,-0.8743466161445848,-0.7597806150839336,-0.6145878728026739,-0.4446211058043063,-0.25673167102737343,-0.058493387786028646,0.14210276273336112,0.33697075376227564,0.518255460525346,0.6786493001609646,0.8116868002389144,0.9120052218228818,0.9755607313686322,0.9997914075724285,0.983720512366742,0.9279958632121268,0.8348637195884734,0.7080782363208983,0.5527501336744005,0.37514068432381864,0.18240932157878567,-0.01767495722827566,-0.21704675886704433,-0.40766941004760543,-0.5818589155579746,-0.7325936999554803,-0.8537976471311075,-0.9405850284265783,-0.9894574462579665,-0.9984448544513699,-0.967184970764344,-0.8969378804758265,-0.790535242373965,-0.652266144647652,-0.4877042118285768,-0.3034829320988422,-0.10702826151692495,0.09374071612113023,0.2907310073891462,0.47600193763189885,0.642085239400174,0.7822860981601631,0.8909530201320197,0.9637056438899441,0.997611312642258,0.9913032895676097,0.9450358509484983,0.8606740362995399,0.7416184686621645,0.5926682755589048,0.4198276362599507,0.23006375343814825,0.031026005370306083,-0.1692624003461778,-0.36272784212961473,-0.5415717319362321,-0.6985848761865658,-0.8274380782130618,-0.9229372680491266,-0.9812328752848499,-0.9999750051720798,-0.9784081628343132,-0.9174017072497783,-0.8194148074086854,-0.6883973132610063,-0.5296305373447555,-0.3495143651847205,-0.15530927603616132,0.0451563268869452,0.2438016791868757,0.43261939073191646,0.6039982233901171,0.7510298998847591,0.86778757631141,0.9495647530957377,0.9930649938962364,0.99653480488645,0.959834318055555,0.8844429292851281,0.7733996639309955,0.6311806737727959,0.4635188034261214,0.2771724994921225,0.07965337771195352,-0.12107657011213468,-0.31692592384486273,-0.49999999999997624,-0.6629190862721847,-0.7991159175902477,-0.9031004024395128,-0.9706809283397838,-0.9991333256594045,-0.9873106788381578,-0.9356895585301619,-0.846350811050562,-0.7228956795025328,-0.5703006377408543,-0.3947167888113021,-0.20322191411140833,-0.0035351681656702054,0.19629408033723986,0.3882107184335692,0.5644785903248951,0.717992341661921,0.842563836234392,0.9331715996166475,0.9861632347001454,0.9994026497469005,0.9723561642042569,0.9061140213571652,0.8033464406434523,0.6681959811623759,0.5061105552008355,0.32362382299983006,0.1280918210418479,-0.07260355963052474,-0.27037229228319465,-0.45724232330464054,-0.6256809255255152,-0.7688983422985175,-0.8811214824513343,-0.9578266334751091,-0.9959218122841615,-0.9938714029915101,-0.9517580575542547,-0.8712793640748272,-0.7556794170590232,-0.6096180480319383,-0.43898298782373185,-0.2506525322587303,-0.05221827819002462,0.14832089361588152,0.3428812532013091,0.5236200764079932,0.6832517849296387,0.8153416278256351,0.9145650662015987,0.9769224052642929,0.9999000219378035,0.9825716889589626,0.9256359110795359,0.8313877683537738,0.7036264015079886,0.5475018686545894,0.369307546553821,0.1762264447240826,-0.02395834152677535,-0.22317736751540598,-0.4134001183352862,-0.5869587187498023,-0.736857025088027,-0.8570526396545063,-0.9427004796581014,-0.9903480824012647,-0.9980747739815216,-0.9655690916176158,-0.8941413387079006,-0.7866707665269359,-0.6474895116647412,-0.4822079676886578,-0.29748863029198397,-0.10077753222764521,0.09999590612163069,0.2967385115185146,0.4815195935202362,0.6468906304502438,0.7861855191559589,0.8937892854921966,0.9653644238151442,0.9980257417472693,0.9904566622236061,0.9429622946865931,0.8574571361306472,0.7373878977670486,0.587594568164755,0.41411531340911883,0.2239430787491913,0.024743703116118607,-0.17545309068892911,-0.36857737395836626,-0.5468443107413582,-0.7030679644231845,-0.8309509626850177,-0.9253383444544457,-0.9824253562821906,-0.9999108218765894,-0.9770899024733227,-0.9148825088717772,-0.8157962198493282,-0.6838252017115598,-0.5242892035293066,-0.34361911816127283,-0.1490977530929176,0.051433739385800065,0.24989193887052993,0.4382769993557265,0.6089951228649835,0.7551646652939502,0.8708935353449072,0.951516704607748,0.9937842547608409,0.9959923817127324,0.9580520759106804,0.8814927103138656,0.769400391400434,0.6262935582776726,0.45794084449317707,0.27112854453307955,0.07338705842888943,-0.1273126585156285,-0.3228804047714521,-0.5054328484440952,-0.6676113042228768,-0.8028783618368536,-0.9057814089306475,-0.9721724257579965,-0.9993751917739604,-0.9862931640308639,-0.9334536788023231,-0.842986694668747,-0.7185389339300527,-0.5651268833035665,-0.38893457944583576,-0.1970643305603905,0.002749577502573814,0.20245265015207212,0.39399486057030947,0.569655146131071,0.7223526442776623,0.8459321219495313,0.9354120929021715,0.9871856213170338,0.9991657173113141,0.9708694634578781,0.903437481177012,0.7995879523100395,0.663507049264299,0.5006801904881054,0.31767092336411795,0.12185634774704657,-0.07887025478209725,-0.27641759893677864,-0.462822555271376,-0.6305711437677061,-0.7729014222177695,-0.8840760599770872,-0.959613609647101,-0.9964691541290619,-0.9931570471706163,-0.9498107997362488,-0.8681776981829694,-0.7515483711826279,-0.604624144546732,-0.433327530878138,-0.24456349320776583,-0.04594110607465392,0.15453316611470005,0.3487782095048204,0.528964010326974,0.6878272825958965,0.818964251020848,0.9170887870580791,0.9782454926453643,0.9999691422179066,0.9813840559010103,0.9232393981480641,0.8278789789365588,0.6991467748354216,0.5422319783872167,0.36345982186168935,0.17003660727120928,-0.030240779517881823,-0.22929916109649853,-0.41911449813095086,-0.5920353382261004,-0.7410912458165703,-0.860273780283425,-0.9447786960738299,-0.9911996017421171,-0.9976652715201054,-0.963915074389861,-0.8913094801148032,-0.782775218731059,-0.6426873041189487,-0.47669267728188514,-0.2914825782690297,-0.09452282242397832,0.10624714648041036,0.30273429505997673,0.4870182303311962,0.6516704705920625,0.7900538873692946,0.8965902479325863,0.9669850737433007,0.9984007507973952,0.9895709137884713,0.9408514932676958,0.8542063680904731,0.7331282014995405,0.5824976519402275,0.40838663381749724,0.21781355874884895,0.018460423534242158,-0.18163685097944635,-0.37441234770541887,-0.5520952902712155,-0.707523282857313,-0.8344310262274074,-0.9277028718141588,-0.9835790334092062,-0.9998071440692504,-0.9757330489819447,-0.9123271744331549,-0.8121454099429549,-0.679226080410903,-0.5189271613209613,-0.33771029885811443,-0.14288034108152167,0.057709120353028776,0.25597232831383404,0.44391729689962306,0.6139679682296535,0.7592696031833205,0.873965095795739,0.9534310730804352,0.994464263100951,0.9954106187978498,0.9562319925921375,0.8785076741134026,0.7653707290668744,0.6213817054181817,0.4523447977970911,0.2650738805295369,0.06711784050133766,-0.13354371831940923,-0.32882213255682213,-0.5108457332842512,-0.6722771528394152,-0.8066090939664917,-0.9084266388367062,-0.9736255242764793,-0.9995775845330024,-0.9852366925824367,-0.931180929489136,-0.839589281969628,-0.7141538074821799,-0.5599308074652626,-0.38313700792909755,-0.19089896335567494,0.00903421456796842,0.20860322348517513,0.39976344068456865,0.5748092016787508,0.7266844153839881,0.8492669950087792,0.9376156392488403,0.9881690160424802,0.9988893197940435,0.969344415276219,0.9007252569923213,0.7957978818243164,0.6587919101421132,0.49523004989210817,0.3117054763514075,0.11561606136602509,-0.08513383471364828,-0.2824519876386111,-0.4683845066569653,-0.6354364556893108,-0.7768739740501882,-0.8869957182363796,-0.9613626829679194,-0.9969771374012192,-0.9924034635986949,-0.9478260262587916,-0.8650417409786751,-0.7473876406229577,-0.5996063595963808,-0.42765495834688017,-0.2384647943795803,-0.03966211937593226,0.16073933485723693,0.3546613897546814,0.5342870512073795,0.6923756124366165,0.8225545267380743,0.9195762847102863,0.9795299412524963,0.9999987656826221,0.9801576601020457,0.920806419075239,0.8243374899270969,0.6946395332396452,0.5369406710226123,0.3575977412211067,0.1638400537066051,-0.0365220230576728,-0.23541189781148192,-0.4248123237278307,-0.5970885734703334,-0.7452961948977531,-0.8634609417891698,-0.9468195955882914,-0.9920119706471956,-0.9972163632416674,-0.962222984411523,-0.8884424165493694,-0.7788487528528323,-0.6378597116879886,-0.47115855845148785,-0.2854650132572003,-0.08826437915463778,0.1124941902857637,0.3087181211919233,0.49249763087940923,0.6564245710313621,0.7938910500071249,0.8993557968206789,0.9685675296619419,0.9987363249805115,0.9886460792475311,0.9387035300643412,0.8509218605779652,0.728839548109211,0.5773777282035402,0.40264182375661656,0.21167543554113966,0.012176414801982267,-0.18781343697143787,-0.38023253290072706,-0.5573244631224583,-0.7119506555125711,-0.8378781313845937,-0.9300307567341156,-0.9846938610979125,-0.999663975845132,-0.9743376559532251,-0.9097358048645752,-0.8084625218893968,-0.6746001310153071,-0.5135446225098217,-0.3317881406620189,-0.13665728557752585,0.06398222192347597,0.2620426073533303,0.44954006058299145,0.6189165630664887,0.7633445514159487,0.8770021363433194,0.9553077828999645,0.9951049920575804,0.9947895391202963,0.9543741399896226,0.8754879385867745,0.7613108360940938,0.616445309202811,0.4467308843707073,0.2590087466287657,0.060845971551025745,-0.1397695034088353,-0.33475087251435165,-0.5162384407221339,-0.6769164478299937,-0.8103079666225429,-0.9110359876762955,-0.9750401665007039,-0.999740495942415,-0.9841413062214215,-0.9288714003597515,-0.8361587071443435,-0.7097404733627486,-0.5547126154608176,-0.3773243032536871,-0.18472605601720216,0.015318494799646963,0.21474555740104856,0.405516230928746,0.5799405533929423,0.7309874838843766,0.8525683236912206,0.9397821516209249,0.9891133800343265,0.9985734681122482,0.9677810798956916,0.8979774559306047,0.7919763788865989,0.6540507500345454,0.4897603486826342,0.30572771758515593,0.10937120837785663,-0.09139405202611177,-0.28847522004214615,-0.4739279577753378,-0.6402766691200071,-0.7808158408878216,-0.88988034190845,-0.9630737843525984,-0.9974457420362998,-0.9916106820408225,-0.9458038155165158,-0.8618716163261174,-0.7431973897207094,-0.5945648913735034,-0.4219654942854478,-0.23235667666078863,-0.03338156610146269,0.1669391547119988,0.36053056157689023,0.5395889887995348,0.6968965948017314,0.8261123131684484,0.9220274609069197,0.9807757003525055,0.9999888911618815,0.9788925500022807,0.9183370699589951,0.8207634412072738,0.6901048547478015,0.5316281555570155,0.3517215361726816,0.15763702878198282,-0.042801824049319245,-0.24151533621927224,-0.43049337007298966,-0.6021182248896882,-0.7494717062443339,-0.8666139982850686,-0.9488230975899856,-0.992785157029518,-0.9967280668771957,-0.9604928885168377,-0.8855402612549609,-0.7748915239799038,-0.6330069250523592,-0.46560582978420584,-0.27943617293853906,-0.0820024496157733,0.11873679079174078,0.3146897535649311,0.4979575787393746,0.6611527439904994,0.797696855509121,0.9020858229227426,0.9701117290671556,0.9990324510420975,0.9876821951299364,0.9365184899168341,0.8476037433246839,0.7245221069895161,0.5722349991815693,0.39688111013523314,0.20552895156978052,0.005891925125273984,-0.19398260470184306,-0.3860376996584696,-0.5625316227529438,-0.7163499075165025,-0.8412921420026678,-0.9323219072674271,-0.9857697953148075,-0.9994813228590985,-0.9729037785024329,-0.9071085025200534,-0.8047477011555091,-0.669947536240638,-0.5081417996956388,-0.3258528774865932,-0.13042883237941752,0.0702527963219045,0.26810253622501184,0.45514506831761764,0.6238407119157655,0.7673893490393534,0.8800045370305442,0.957146759940013,0.995706416323189,0.9941291672114928,0.9524785914846947,0.8724336230075848,0.7572208728398467,0.6114845646095292,0.44109932595257023,0.25293338239168717,0.05457169930441965,-0.1459897678776343,-0.3406663904704403,-0.521610757756449,-0.6815290059515382,-0.8139748337068082,-0.9136093523852895,-0.9764162965550703,-0.9998639195675197,-0.9830070482134315,-0.926525182636009,-0.83269510569384,-0.7052991058898607,-0.5494725133984872,-0.3714966950100651,-0.17854585236259357,0.021602169980865463,0.22087940928952174,0.41125300407898774,0.5850489985953163,0.7352616798161395,0.8558359776008322,0.9419115444454258,0.9900186759920511,0.9982181747414506,0.9661795190649565,0.8951941865246145,0.7881235944388099,0.6492837562080567,0.48427130290217846,0.29973788317500233,0.1031220354419864,-0.0976506594531535,-0.29448705824159865,-0.47945268967097127,-0.6450915928809449,-0.7847268670346428,-0.8927298170563592,-0.9647468462159968,-0.9978749495253376,-0.9907787338103049,-0.9437442473827794,-0.8586674494389598,-0.7389777839825188,-0.5894999390062299,-0.4162593634164869,-0.22623938131006113,-0.02709969432072488,0.173132380798373,0.3663854931505914,0.5448696136873754,0.701390051121284,0.8296374697864481,0.9244422188313712,0.9819827207403452,0.9999395190457089,0.9775887755710999,0.9158314483337352,0.8171569739449726,0.6855429184707967,0.5262946418243437,0.34583143881501527,0.151427777504577,-0.04907993445308357,-0.24760923524602294,-0.43615741277631637,-0.6071240938227758,-0.7536176149318223,-0.8697328252316171,-0.9507891229445038,-0.9935191303497523,-0.9962004017134457,-0.958724855041176,-0.8826031288610329,-0.7709036884150526,-0.6281291358875275,-0.4600347106019561,-0.2733962954403325,-0.07573728114140531,0.12497470142786506,0.32064895631131424,0.5033978582538601,0.6658548027159368,0.8014711535534124,0.9047802184081253,0.9716176109661214,0.999289117285755,0.986679299507206,0.9342964591299846,0.8442521473897528,0.7201760486708344,0.5670696680020484,0.3911047204901324,0.1993743496089169,-0.00039279727092287486,-0.2001441105007196,-0.39182761868594496,-0.5677165634901735,-0.7207208651072611,-0.8446729232349526,-0.9345762329181514,-0.9868067935625998,-0.9992591923255826,-0.9714314732649151,-0.9044453711728675,-0.8010010944693915,-0.6652684798552851,-0.5027189062792192,-0.31990474376309225,-0.12419522749879781,0.07652059587298062,0.27415187557349124,0.4607320987167906,0.6287402202832398,0.7714038362920342,0.882972179268434,0.9589479315645858,0.996268512142706,0.9934295291548343,0.9505454219477681,0.8693448480153221,0.7531010008496789,0.6064996675779959,0.43545034497819257,0.2468480277831908,0.048295271582967564,-0.15220426603755935,-0.3465684527738109,-0.5269624721911863,-0.6861146450171325,-0.81760955038523,-0.9161466313208178,-0.9777538600851652,-0.9999478505333237,-0.9818339633594182,-0.9241423689889178,-0.8291986144235344,-0.7008298804887404,-0.5442107082520494,-0.36565441337724863,-0.17235859649785637,0.027884991918863476,0.2270045368755584,0.4169735335440057,0.5901343355123296,0.739506834356901,0.8590698276717379,0.9440037336155411,0.9908848681582397,0.9978234537150371,0.9645397960425324,0.8923755587080209,0.7842396806583266,0.6444911169495753,0.4787631293571843,0.29373620970773945,0.0968687893884043,-0.10390340987110763,-0.3004872647811505,-0.48495848412789133,-0.6498810367920573,-0.7886068980128426,-0.8955440311313891,-0.9663818024754528,-0.9982647429154844,-0.9899076517674654,-0.941647403206475,-0.8554293668755245,-0.7347289900745558,-0.5844117025501531,-0.41053679112097574,-0.2201131499484835,-0.020816752155362148,0.1793187684959917,0.37222595321757673,0.5501287172965513,0.705855803912644,0.8331298573552532,0.9268204631054283,0.9831509547410936,0.9998506512842057,0.9762463883050132,0.9132896531666106,0.8135182305885438,0.6809539045961464,0.5209403404879294,0.33992768179532135,0.14521254512763507,-0.055356106295917876,-0.2536933541947569,-0.44180422811923253,-0.6121059825476589,-0.7577337572049571,-0.8728172994412958,-0.9527175939977269,-0.9942138616173818,-0.9956333885921471,-0.9569189538183925,-0.8796311353785146,-0.7668854036699625,-0.6232265368566209,-0.4544454209529444,-0.26734561932589596,-0.06946912119328753,0.13120767580897116,0.3265954940542384,0.5088182545424949,0.6705305614855877,0.8052137950626885,0.9074388768534891,0.9730851158794375,0.9995063135736736,0.9856374319917525,0.9320375254696156,0.8408672051546304,0.7158015448139654,0.5618819386853584,0.3853128829774677,0.19321187275314414,-0.00667750415239969,-0.20629771100065888,-0.39760206129272024,-0.572879080539134,-0.725063355640664,-0.8480203415472197,-0.9367936446448466,-0.9878048148819046,-0.9989975930183046,-0.9699207983938342,-0.9017465160114766,-0.7972228498146172,-0.6605631466727354,-0.4972761564542909,-0.31394397443106503,-0.11795671715083374,0.08278537301098574,0.28019038646182437,0.466300931103742,0.6336148946480068,0.7753878546095728,0.8859049458409946,0.960711226630961,0.9967912573144474,0.9926906525846504,0.9485747077352525,0.8662217356104918,0.748951382850398,0.6014908150018674,0.4297841645711798,0.2407529231628485,0.04201693629322634,-0.15841275242819175,-0.35245682630456465,-0.5322933726441942,-0.6906731839029753,-0.8212119730936771,-0.9186477242653727,-0.9790528042598313,-0.9999922855247201,-0.9806220979939377,-0.9217230535349058,-0.8256693714380138,-0.6963329736850461,-0.5389274078524162,-0.359797689113917,-0.16616453280735044,0.03416671245448255,0.23312069822861806,0.4226775933741055,0.5951963632831481,0.7437227798314404,0.862269746173202,0.9460586364938737,0.9917119223200104,0.997389320623715,0.9628619755942367,0.8895216838110883,0.780324790952091,0.6396730215588874,0.47323604560979105,0.2877229342376035,0.09061171720807928,-0.1101520563086666,-0.30647560266442503,-0.4904451236779905,-0.6546448116797682,-0.7924557805688068,-0.8983228729776542,-0.9679785885534191,-0.9986151068106648,-0.9889974703183364,-0.9395133658088304,-0.8521574965336781,-0.7304511758157891,-0.5793003829807029,-0.40479800342923183,-0.21397822455017926,-0.014532987769168034,0.18549807345477198,0.37805171109110197,0.5553660919028558,0.7102936767872738,0.8365893379324675,0.9291620997931384,0.9842803562117961,0.9997222913874741,0.9748654412256907,0.9107117848535049,0.8098473548612132,0.6763379943808981,0.5155654630321133,0.3340104983004365,0.13899157714063215,-0.06163009168135783,-0.25976745275469454,-0.44743359306360714,-0.6170636942895035,-0.7618199704842467,-0.8758672990834226,-0.9546084345788263,-0.9948693233918956,-0.9950270499092086,-0.9550752561780398,-0.8766243981953196,-0.7628368284589454,-0.6182993216026191,-0.4488381816031623,-0.2612843835850415,-0.06319821735145856,0.13743546774482374,0.33252913191716577,0.51421855351033,0.675179835616172,0.8089246322099245,0.9100616932470463,0.9745141858435614,0.9996840313270268,0.9845566337352923,0.9297417781591862,0.8374490503178735,0.7113987682031725,0.5566720161366444,0.37950582636333063,0.18704176440822567,-0.01296194728557485,-0.2124431631465518,-0.40336079939967695,-0.5780189699905969,-0.7293772075968222,-0.8513342647230262,-0.9389740548641237,-0.9887638198528415,-0.9986965352699227,-0.968371813557885,-0.8990120436353484,-0.7934131164244658,-0.655831722544421,-0.4918137651987113,-0.30797080492918244,-0.11171354774443452,0.08904688028948146,0.28621783038068793,0.47185134552058994,0.6384645424699784,0.7793412466311047,0.8888027209096916,0.9624365754924374,0.9972746311910091,0.9919125666851115,0.9465665266864762,0.8630644091499295,0.7447721827437759,0.5964582047209401,0.4241010085345193,0.23464830927533875,0.035736941417112235,-0.16461498182650955,-0.3583312784835358,-0.5376032485553599,-0.6952044425557626,-0.8247819595435179,-0.9211125324306828,-0.9803130777733509,-0.999997222786614,-0.9793714999832789,-0.9192673318322047,-0.8221075161354144,-0.691808563097726,-0.5336228208796032,-0.35392675354913916,-0.15996390594445734,0.040447083472138476,0.2392276517723642,0.42836495827018856,0.6002348819676597,0.7479093497181797,0.8654356067147269,0.9480761719158226,0.9924998058103477,0.9969157926148869,0.9611461239906979,0.8866326745562587,0.7763790799505679,0.6348296603413222,0.4676902699688418,0.28169829427716825,0.08435106604303405,-0.11639635195650902,-0.3124518353638613,-0.49591239160982925,-0.6593827293843016,-0.7962733626792409,-0.9010662328363452,-0.9695371413799845,-0.9989260273721946,-0.9880482254132879,-0.9373422194801232,-0.8488519676458818,-0.7261445101715015,-0.5741661821848966,-0.3990432270121007,-0.20783484743265557,-0.008248649358540054,0.19167005160430123,0.383862536665236,0.5605815306402517,0.7147034944579694,0.8400157748753853,0.9314670364044397,0.9853708805433176,0.9995544444254777,0.9734459888778151,0.908097945215178,0.806144491755356,0.6716953701444005,0.5101702217539891,0.3280801220474636,0.13276511925954643,-0.06790164279932823,-0.26583129101089675,-0.45304528526062937,-0.6219970332284306,-0.7658760933722808,-0.8788827036890007,-0.9564615700033243,-0.9954854897838404,-0.994381409613811,-0.9531938349425505,-0.8735830360716558,-0.758758122692791,-0.6133476847408723,-0.44321321402752883,-0.2552128276246934,-0.05692481730426449,0.14365783124985568,0.33844963553307855,0.5195985418561353,0.6798024414705329,0.8126035184243648,0.912648563992717,0.9759047644130356,0.9998222635263116,0.983436947427232,0.9274093078762027,0.8339978178898708,0.7069678927395067,0.5514401061375819,0.37368378001509434,0.1808642682812841,-0.01924587844731271,-0.2185802242051331,-0.40910360554798025,-0.583136028828998,-0.7336622505870738,-0.8546145618689137,-0.9411173774540651,-0.9896837705965946,-0.9983560309716255,-0.9667845799389133,-0.8962420620507598,-0.7895720447758997,-0.6510743943523046,-0.48633194826620924,-0.30198547118592484,-0.10546596587249074,0.09530487039123914,0.2922339692579095,0.47738312273683836,0.6432889721976212,0.7832638562054164,0.8916653900181193,0.964123910001131,0.997718614680071,0.9910953021890812,0.9445209581206567,0.8598729933418029,0.7405635656000112,0.591402035513427,0.4184011013417285,0.2285344272408545,0.029455535002063507,-0.17081070925665784,-0.36419157728141116,-0.5428918901950113,-0.6997082419997058,-0.8283193687272974,-0.9235409584616818,-0.9815346308473859,-0.9999626621239929,-0.9780822187236129,-0.9167753008769778,-0.8185131892020193,-0.6872568274321043,-0.5282971568543444,-0.34804183857335524,-0.153756960821735,0.04672585690949356,0.2453251562941369,0.43403540359248294,0.6052496925542813,0.7520663786558243,0.8685672842510518,0.9500562601927026,0.9932484875094041,0.9964028883919779,0.9593923090046715,0.8837086450537186,0.7724027035015945,0.6299612246001103,0.46212602148162246,0.2756625277878553,0.0780870831767179,-0.12263605017727414,-0.3184157268300223,-0.5013600719770718,-0.6640946027672436,-0.800059493557143,-0.9037740023501469,-0.9710573993953691,-0.9991974923193231,-0.9870599545456326,-0.9351340499763652,-0.8455129107740401,-0.7218091632465005,-0.5690093029535789,-0.39327268917191843,-0.20168326124721814,-0.0019639851424988475,0.1978344591635823,0.3896582004237521,0.5657748275091792,0.7190850827455965,0.8434090328464906,0.9337351818988724,0.9864224846620928,0.9993471170278411,0.9719880873269714,0.9054482374931455,0.8024097875267984,0.6670262152611894,0.5047548297550057,0.3221367872745933,0.12653341741725954,-0.07417051193588849,-0.2718846294536728,-0.45863908305948875,-0.6269058045072723,-0.7699019656601651,-0.8818633941554825,-0.9582769270760064,-0.9960623364558556,-0.993696493207481,-0.9512747644243521,-0.8705071691353591,-0.7546494474723453,-0.6083718218512859,-0.43757074040119304,-0.2491311912593216,-0.050649168838710464,0.14987452055296152,0.34435677105369555,0.5249580070809653,0.6843981964647998,0.816250308397236,0.9151993869141773,0.9772567966627417,0.9999210047116289,0.9822784172929756,0.9250402067486506,0.8305136441875385,0.7025090934338235,0.5461864153383545,0.36784697389211846,0.17467962837130768,-0.02552904943468527,-0.2247086517745274,-0.4148302529080895,-0.5882300549405893,-0.7379183153606778,-0.8578611034196008,-0.943223527757632,-0.9905646307769215,-0.9979760935726646,-0.9651591602295265,-0.893436680666554,-0.7856997865836985,-0.6462913500014875,-0.48083092217776513,-0.2959882096101821,-0.09921421830224021,0.10155909613796579,0.2982385654678026,0.4828960442581802,0.6480879932754281,0.7871555283971409,0.8944928400964592,0.9657731635106472,0.9981231902451589,0.9902388913768985,0.9424380828337127,0.8566476142407804,0.7363256976511936,0.5863225070880951,0.4126846681279172,0.22241151854575197,0.023172965151285616,-0.1769996899995546,-0.37003749122791496,-0.5481590886722117,-0.7041844043435853,-0.8318240609243147,-0.9259329064403018,-0.9827174152329956,-0.9998886049019354,-0.9767543051390093,-0.9142470590995633,-0.8148865326066763,-0.6826779464728122,-0.5229506261299295,-0.34214317662911187,-0.1475439426013072,0.053002784767353976,0.25141297095450765,0.43968870536956467,0.6102405969678298,0.7561937024499265,0.871664655087074,0.9519988231149146,0.9939579378457208,0.9958506282136975,0.9576005999084041,0.8807497107968818,0.7683958186642104,0.6250679066288986,0.4565435199249914,0.26961587317059643,0.071820016024105,-0.1288709045151129,-0.3243670415009055,-0.5067879496070278,-0.668780245718842,-0.8038140236578077,-0.9064460745674894,-0.9725393025523749,-0.9994294909297181,-0.9860326967501272,-0.9328889445159084,-0.8421404578043168,-0.7174453062784868,-0.5638299489733535,-0.38748661783363186,-0.1955237089694216,0.0043207566471089144,0.20399105265062753,0.39543847344934446,0.570945777384615,0.7234382685860258,0.8467689778187681,0.9359664466891493,0.9874351270318225,0.9991003173835893,0.9704917941574052,0.9027627663456524,0.7986433896889948,0.6623307141537096,0.49931950093248323,0.3161807287318892,0.12029671775370879,-0.08043645148304161,-0.27792722898805716,-0.46421476551614616,-0.6317898142391906,-0.7738974283338789,-0.8848092527514558,-0.9600544340938411,-0.9965998406236308,-0.9929723277430674,-0.9493181204229693,-0.8673969188771095,-0.7505109650822097,-0.6033719294706736,-0.43191098359079017,-0.24303971470164862,-0.044371519830542334,0.15608529010712044,0.35025030515879263,0.5302967374964733,0.6889669190756874,0.8198648580875069,0.9177140612589522,0.9785702291900611,0.9999802509828953,0.9810810890921939,0.9226345683513661,0.826996666828869,0.6980225463999407,0.5409111512494037,0.36199563853679384,0.1684880889593802,-0.03181121207479703,-0.23082820379391028,-0.42054051528866543,-0.5933008471213479,-0.7421452338114036,-0.8610737611430801,-0.9452924225860326,-0.9914063656015749,-0.9975567380798193,-0.9634956186306143,-0.8905960102897652,-0.781796494794442,-0.6414827784128134,-0.47531090421312044,-0.28997925708202416,-0.09295855196539055,0.10780931050004601,0.3042313818406343,0.4883898923350434,0.6528614161515033,0.7910161094928811,0.8972849594660076,0.9673842708787119,0.9984883419063342,0.9893433680751097,0.9403179830951364,0.8533883992429799,0.7320587462847858,0.5812198200763178,0.4069519346809633,0.21627982503288487,0.01688948001393035,-0.18318167960264423,-0.37586878942093155,-0.5534046359429816,-0.7086327527877571,-0.8352958977061196,-0.9282882818893131,-0.9838613842125193,-0.9997750540455561,-0.97538781167945,-0.911682706360527,-0.8112276895951868,-0.6780721010766327,-0.5175834398837804,-0.33623100070198847,-0.14132509668519422,0.059277619119413795,0.2574908552967372,0.44532464030711705,0.6152073980774091,0.7602911580792981,0.8747275968827305,0.9539037839550452,0.9946281287974067,0.9952590338932358,0.9557710674708847,0.8777559886578398,0.764358583702499,0.6201498997041319,0.4509429857967924,0.26355856925636084,0.06555011212204401,-0.13510066870557244,-0.33030554431129217,-0.5121958101092197,-0.6734394731654099,-0.807536804684664,-0.909082343946769,-0.973982792318737,-0.9996220140398905,-0.9849664926014327,-0.930606991776009,-0.838734741941981,-0.7130531116312201,-0.5586283248185095,-0.3816852415356421,-0.1893564338894864,0.010605327775318378,0.21013958889208986,0.4012031274325808,0.5760941760242033,0.7277628800369712,0.8500954770809915,0.9381607426446968,0.9884087676551249,0.998814055240823,0.9689571684697523,0.9000416378435311,0.7948454470072659,0.6576090522850289,0.4938644499712347,0.3102121816719453,0.11405526660628848,-0.08669921394847618,-0.28395885094324747,-0.46977211240211486,-0.6366488695154157,-0.7778623235804939,-0.8877201631212968,-0.9617940208487968,-0.9970979810568079,-0.9922089418236847,-0.9473239802219898,-0.8642524081456859,-0.7463428389842997,-0.5983482050849457,-0.42623416714558693,-0.2369386385530052,-0.03809211823456469,0.16228989459915577,0.3561300050653555,0.5356145222333003,0.6935084288476367,0.8234470247275643,0.9201924877023385,0.9798450101169925,1.0],"x":[-804.247719318987,-804.0466071111053,-803.8454949032237,-803.6443826953418,-803.4432704874602,-803.2421582795785,-803.0410460716968,-802.8399338638151,-802.6388216559333,-802.4377094480516,-802.2365972401698,-802.0354850322882,-801.8343728244065,-801.6332606165247,-801.432148408643,-801.2310362007612,-801.0299239928796,-800.8288117849979,-800.6276995771161,-800.4265873692344,-800.2254751613526,-800.0243629534709,-799.8232507455893,-799.6221385377075,-799.4210263298258,-799.219914121944,-799.0188019140624,-798.8176897061808,-798.616577498299,-798.4154652904173,-798.2143530825355,-798.0132408746538,-797.8121286667721,-797.6110164588904,-797.4099042510087,-797.2087920431269,-797.0076798352452,-796.8065676273635,-796.6054554194818,-796.4043432116001,-796.2032310037183,-796.0021187958366,-795.8010065879549,-795.5998943800731,-795.3987821721915,-795.1976699643097,-794.996557756428,-794.7954455485464,-794.5943333406645,-794.393221132783,-794.1921089249012,-793.9909967170195,-793.7898845091378,-793.588772301256,-793.3876600933743,-793.1865478854926,-792.9854356776109,-792.7843234697292,-792.5832112618474,-792.3820990539657,-792.180986846084,-791.9798746382023,-791.7787624303206,-791.5776502224388,-791.3765380145571,-791.1754258066753,-790.9743135987937,-790.773201390912,-790.5720891830302,-790.3709769751486,-790.1698647672667,-789.9687525593852,-789.7676403515035,-789.5665281436217,-789.36541593574,-789.1643037278582,-788.9631915199765,-788.7620793120949,-788.5609671042131,-788.3598548963314,-788.1587426884496,-787.9576304805679,-787.7565182726863,-787.5554060648045,-787.3542938569228,-787.153181649041,-786.9520694411593,-786.7509572332776,-786.5498450253959,-786.3487328175142,-786.1476206096324,-785.9465084017507,-785.745396193869,-785.5442839859874,-785.3431717781057,-785.1420595702239,-784.9409473623422,-784.7398351544605,-784.5387229465787,-784.3376107386971,-784.1364985308153,-783.9353863229336,-783.7342741150519,-783.5331619071701,-783.3320496992885,-783.1309374914067,-782.929825283525,-782.7287130756433,-782.5276008677615,-782.3264886598798,-782.1253764519982,-781.9242642441164,-781.7231520362348,-781.522039828353,-781.3209276204713,-781.1198154125897,-780.9187032047079,-780.7175909968262,-780.5164787889444,-780.3153665810627,-780.1142543731809,-779.9131421652993,-779.7120299574176,-779.5109177495358,-779.3098055416541,-779.1086933337724,-778.9075811258907,-778.706468918009,-778.5053567101272,-778.3042445022455,-778.1031322943638,-777.902020086482,-777.7009078786004,-777.4997956707186,-777.298683462837,-777.0975712549553,-776.8964590470734,-776.6953468391919,-776.4942346313101,-776.2931224234284,-776.0920102155467,-775.8908980076649,-775.6897857997832,-775.4886735919015,-775.2875613840198,-775.0864491761381,-774.8853369682563,-774.6842247603746,-774.4831125524929,-774.2820003446112,-774.0808881367295,-773.8797759288477,-773.678663720966,-773.4775515130842,-773.2764393052026,-773.075327097321,-772.8742148894391,-772.6731026815575,-772.4719904736756,-772.270878265794,-772.0697660579124,-771.8686538500306,-771.6675416421489,-771.4664294342671,-771.2653172263854,-771.0642050185038,-770.863092810622,-770.6619806027403,-770.4608683948585,-770.2597561869768,-770.0586439790951,-769.8575317712134,-769.6564195633317,-769.4553073554499,-769.2541951475682,-769.0530829396865,-768.8519707318048,-768.6508585239231,-768.4497463160413,-768.2486341081596,-768.047521900278,-767.8464096923962,-767.6452974845146,-767.4441852766328,-767.2430730687511,-767.0419608608694,-766.8408486529876,-766.639736445106,-766.4386242372242,-766.2375120293425,-766.0363998214608,-765.835287613579,-765.6341754056973,-765.4330631978156,-765.2319509899339,-765.0308387820522,-764.8297265741704,-764.6286143662887,-764.427502158407,-764.2263899505253,-764.0252777426437,-763.8241655347618,-763.6230533268802,-763.4219411189983,-763.2208289111168,-763.0197167032351,-762.8186044953533,-762.6174922874716,-762.4163800795898,-762.2152678717082,-762.0141556638265,-761.8130434559447,-761.611931248063,-761.4108190401812,-761.2097068322995,-761.0085946244179,-760.8074824165361,-760.6063702086544,-760.4052580007726,-760.2041457928909,-760.0030335850093,-759.8019213771275,-759.6008091692458,-759.399696961364,-759.1985847534824,-758.9974725456007,-758.796360337719,-758.5952481298373,-758.3941359219555,-758.1930237140738,-757.9919115061921,-757.7907992983104,-757.5896870904287,-757.3885748825469,-757.1874626746652,-756.9863504667835,-756.7852382589017,-756.5841260510201,-756.3830138431383,-756.1819016352566,-755.9807894273749,-755.7796772194931,-755.5785650116115,-755.3774528037297,-755.176340595848,-754.9752283879664,-754.7741161800845,-754.5730039722029,-754.3718917643212,-754.1707795564395,-753.9696673485578,-753.768555140676,-753.5674429327943,-753.3663307249126,-753.1652185170309,-752.9641063091492,-752.7629941012674,-752.5618818933857,-752.3607696855039,-752.1596574776223,-751.9585452697406,-751.7574330618588,-751.5563208539771,-751.3552086460953,-751.1540964382137,-750.952984230332,-750.7518720224502,-750.5507598145686,-750.3496476066867,-750.148535398805,-749.9474231909235,-749.7463109830417,-749.54519877516,-749.3440865672782,-749.1429743593965,-748.9418621515149,-748.7407499436331,-748.5396377357514,-748.3385255278696,-748.1374133199879,-747.9363011121062,-747.7351889042245,-747.5340766963428,-747.332964488461,-747.1318522805793,-746.9307400726976,-746.7296278648159,-746.5285156569342,-746.3274034490524,-746.1262912411707,-745.925179033289,-745.7240668254072,-745.5229546175257,-745.3218424096439,-745.1207302017622,-744.9196179938805,-744.7185057859987,-744.5173935781171,-744.3162813702354,-744.1151691623536,-743.9140569544719,-743.7129447465901,-743.5118325387084,-743.3107203308268,-743.109608122945,-742.9084959150633,-742.7073837071815,-742.5062714992998,-742.3051592914182,-742.1040470835364,-741.9029348756548,-741.701822667773,-741.5007104598913,-741.2995982520094,-741.0984860441279,-740.8973738362462,-740.6962616283644,-740.4951494204827,-740.294037212601,-740.0929250047193,-739.8918127968376,-739.6907005889558,-739.4895883810741,-739.2884761731924,-739.0873639653106,-738.886251757429,-738.6851395495472,-738.4840273416655,-738.2829151337838,-738.081802925902,-737.8806907180204,-737.6795785101386,-737.478466302257,-737.2773540943753,-737.0762418864934,-736.8751296786118,-736.6740174707301,-736.4729052628484,-736.2717930549667,-736.0706808470849,-735.8695686392032,-735.6684564313215,-735.4673442234398,-735.2662320155581,-735.0651198076763,-734.8640075997946,-734.6628953919128,-734.4617831840312,-734.2606709761495,-734.0595587682677,-733.858446560386,-733.6573343525042,-733.4562221446226,-733.255109936741,-733.0539977288591,-732.8528855209775,-732.6517733130956,-732.450661105214,-732.2495488973324,-732.0484366894506,-731.8473244815689,-731.6462122736871,-731.4451000658054,-731.2439878579238,-731.042875650042,-730.8417634421603,-730.6406512342785,-730.4395390263968,-730.2384268185151,-730.0373146106334,-729.8362024027517,-729.6350901948699,-729.4339779869882,-729.2328657791065,-729.0317535712248,-728.8306413633431,-728.6295291554613,-728.4284169475796,-728.227304739698,-728.0261925318162,-727.8250803239346,-727.6239681160528,-727.4228559081711,-727.2217437002894,-727.0206314924076,-726.819519284526,-726.6184070766442,-726.4172948687625,-726.2161826608808,-726.015070452999,-725.8139582451173,-725.6128460372356,-725.4117338293539,-725.2106216214722,-725.0095094135904,-724.8083972057087,-724.607284997827,-724.4061727899453,-724.2050605820637,-724.0039483741818,-723.8028361663002,-723.6017239584183,-723.4006117505368,-723.1994995426551,-722.9983873347733,-722.7972751268916,-722.5961629190098,-722.3950507111282,-722.1939385032465,-721.9928262953647,-721.791714087483,-721.5906018796012,-721.3894896717195,-721.1883774638379,-720.9872652559561,-720.7861530480744,-720.5850408401926,-720.3839286323109,-720.1828164244293,-719.9817042165475,-719.7805920086658,-719.579479800784,-719.3783675929024,-719.1772553850207,-718.976143177139,-718.7750309692573,-718.5739187613755,-718.3728065534938,-718.1716943456121,-717.9705821377304,-717.7694699298487,-717.5683577219669,-717.3672455140852,-717.1661333062035,-716.9650210983217,-716.7639088904401,-716.5627966825583,-716.3616844746766,-716.1605722667949,-715.9594600589131,-715.7583478510315,-715.5572356431497,-715.356123435268,-715.1550112273864,-714.9538990195045,-714.7527868116229,-714.5516746037412,-714.3505623958595,-714.1494501879778,-713.948337980096,-713.7472257722143,-713.5461135643326,-713.3450013564509,-713.1438891485692,-712.9427769406874,-712.7416647328057,-712.5405525249239,-712.3394403170423,-712.1383281091606,-711.9372159012788,-711.7361036933971,-711.5349914855153,-711.3338792776337,-711.132767069752,-710.9316548618702,-710.7305426539886,-710.5294304461067,-710.328318238225,-710.1272060303435,-709.9260938224617,-709.72498161458,-709.5238694066982,-709.3227571988165,-709.1216449909349,-708.9205327830531,-708.7194205751714,-708.5183083672896,-708.3171961594079,-708.1160839515262,-707.9149717436445,-707.7138595357628,-707.512747327881,-707.3116351199993,-707.1105229121176,-706.9094107042359,-706.7082984963542,-706.5071862884724,-706.3060740805907,-706.104961872709,-705.9038496648272,-705.7027374569457,-705.501625249064,-705.3005130411822,-705.0994008333005,-704.8982886254187,-704.6971764175371,-704.4960642096554,-704.2949520017736,-704.0938397938919,-703.8927275860101,-703.6916153781284,-703.4905031702468,-703.289390962365,-703.0882787544833,-702.8871665466015,-702.6860543387198,-702.4849421308382,-702.2838299229564,-702.0827177150748,-701.881605507193,-701.6804932993113,-701.4793810914296,-701.2782688835479,-701.0771566756662,-700.8760444677844,-700.6749322599027,-700.473820052021,-700.2727078441393,-700.0715956362576,-699.8704834283758,-699.6693712204941,-699.4682590126124,-699.2671468047306,-699.066034596849,-698.8649223889672,-698.6638101810855,-698.4626979732038,-698.261585765322,-698.0604735574404,-697.8593613495586,-697.658249141677,-697.4571369337953,-697.2560247259134,-697.0549125180318,-696.8538003101501,-696.6526881022684,-696.4515758943867,-696.2504636865049,-696.0493514786232,-695.8482392707415,-695.6471270628598,-695.4460148549781,-695.2449026470963,-695.0437904392146,-694.8426782313328,-694.6415660234512,-694.4404538155695,-694.2393416076877,-694.038229399806,-693.8371171919242,-693.6360049840426,-693.434892776161,-693.2337805682791,-693.0326683603975,-692.8315561525156,-692.630443944634,-692.4293317367524,-692.2282195288706,-692.0271073209889,-691.8259951131071,-691.6248829052254,-691.4237706973438,-691.222658489462,-691.0215462815803,-690.8204340736985,-690.6193218658168,-690.4182096579351,-690.2170974500534,-690.0159852421717,-689.8148730342899,-689.6137608264082,-689.4126486185265,-689.2115364106448,-689.0104242027631,-688.8093119948813,-688.6081997869996,-688.407087579118,-688.2059753712361,-688.0048631633546,-687.8037509554728,-687.6026387475911,-687.4015265397094,-687.2004143318276,-686.999302123946,-686.7981899160642,-686.5970777081825,-686.3959655003008,-686.194853292419,-685.9937410845373,-685.7926288766556,-685.5915166687739,-685.3904044608922,-685.1892922530104,-684.9881800451287,-684.787067837247,-684.5859556293653,-684.3848434214837,-684.1837312136018,-683.9826190057202,-683.7815067978383,-683.5803945899568,-683.3792823820751,-683.1781701741933,-682.9770579663116,-682.7759457584298,-682.5748335505482,-682.3737213426665,-682.1726091347847,-681.971496926903,-681.7703847190212,-681.5692725111395,-681.3681603032579,-681.1670480953761,-680.9659358874944,-680.7648236796126,-680.5637114717309,-680.3625992638493,-680.1614870559675,-679.9603748480858,-679.759262640204,-679.5581504323223,-679.3570382244407,-679.155926016559,-678.9548138086773,-678.7537016007955,-678.5525893929138,-678.3514771850321,-678.1503649771504,-677.9492527692687,-677.7481405613869,-677.5470283535052,-677.3459161456235,-677.1448039377417,-676.9436917298601,-676.7425795219783,-676.5414673140966,-676.3403551062149,-676.1392428983331,-675.9381306904515,-675.7370184825697,-675.535906274688,-675.3347940668064,-675.1336818589245,-674.9325696510429,-674.7314574431612,-674.5303452352795,-674.3292330273978,-674.128120819516,-673.9270086116343,-673.7258964037526,-673.5247841958709,-673.3236719879892,-673.1225597801074,-672.9214475722257,-672.7203353643439,-672.5192231564623,-672.3181109485806,-672.1169987406988,-671.9158865328171,-671.7147743249353,-671.5136621170537,-671.312549909172,-671.1114377012902,-670.9103254934085,-670.7092132855267,-670.508101077645,-670.3069888697635,-670.1058766618817,-669.904764454,-669.7036522461182,-669.5025400382365,-669.3014278303549,-669.1003156224731,-668.8992034145914,-668.6980912067096,-668.4969789988279,-668.2958667909462,-668.0947545830645,-667.8936423751828,-667.692530167301,-667.4914179594193,-667.2903057515376,-667.0891935436558,-666.8880813357742,-666.6869691278926,-666.4858569200107,-666.284744712129,-666.0836325042472,-665.8825202963657,-665.681408088484,-665.4802958806022,-665.2791836727205,-665.0780714648387,-664.876959256957,-664.6758470490754,-664.4747348411936,-664.2736226333119,-664.0725104254301,-663.8713982175484,-663.6702860096668,-663.469173801785,-663.2680615939033,-663.0669493860215,-662.8658371781398,-662.6647249702581,-662.4636127623764,-662.2625005544947,-662.061388346613,-661.8602761387313,-661.6591639308496,-661.4580517229679,-661.2569395150862,-661.0558273072044,-660.8547150993227,-660.653602891441,-660.4524906835592,-660.2513784756776,-660.0502662677958,-659.8491540599141,-659.6480418520324,-659.4469296441506,-659.245817436269,-659.0447052283872,-658.8435930205055,-658.6424808126238,-658.441368604742,-658.2402563968603,-658.0391441889786,-657.838031981097,-657.6369197732153,-657.4358075653334,-657.2346953574518,-657.0335831495701,-656.8324709416884,-656.6313587338067,-656.4302465259249,-656.2291343180432,-656.0280221101614,-655.8269099022798,-655.6257976943981,-655.4246854865163,-655.2235732786346,-655.0224610707528,-654.8213488628712,-654.6202366549895,-654.4191244471077,-654.218012239226,-654.0169000313442,-653.8157878234625,-653.614675615581,-653.4135634076991,-653.2124511998175,-653.0113389919356,-652.810226784054,-652.6091145761724,-652.4080023682906,-652.2068901604089,-652.0057779525271,-651.8046657446454,-651.6035535367637,-651.402441328882,-651.2013291210003,-651.0002169131185,-650.7991047052368,-650.5979924973551,-650.3968802894734,-650.1957680815917,-649.9946558737099,-649.7935436658282,-649.5924314579465,-649.3913192500647,-649.1902070421831,-648.9890948343013,-648.7879826264196,-648.586870418538,-648.3857582106561,-648.1846460027746,-647.9835337948928,-647.7824215870111,-647.5813093791294,-647.3801971712476,-647.1790849633659,-646.9779727554842,-646.7768605476025,-646.5757483397208,-646.374636131839,-646.1735239239573,-645.9724117160756,-645.7712995081939,-645.5701873003122,-645.3690750924304,-645.1679628845487,-644.9668506766669,-644.7657384687853,-644.5646262609037,-644.3635140530218,-644.1624018451402,-643.9612896372583,-643.7601774293768,-643.5590652214951,-643.3579530136133,-643.1568408057316,-642.9557285978498,-642.7546163899681,-642.5535041820865,-642.3523919742047,-642.151279766323,-641.9501675584412,-641.7490553505595,-641.5479431426779,-641.3468309347961,-641.1457187269144,-640.9446065190326,-640.7434943111509,-640.5423821032692,-640.3412698953875,-640.1401576875058,-639.939045479624,-639.7379332717423,-639.5368210638607,-639.335708855979,-639.1345966480973,-638.9334844402155,-638.7323722323338,-638.5312600244521,-638.3301478165703,-638.1290356086887,-637.9279234008069,-637.7268111929252,-637.5256989850435,-637.3245867771617,-637.1234745692801,-636.9223623613983,-636.7212501535166,-636.5201379456349,-636.3190257377531,-636.1179135298714,-635.9168013219897,-635.715689114108,-635.5145769062264,-635.3134646983445,-635.1123524904629,-634.9112402825812,-634.7101280746995,-634.5090158668178,-634.307903658936,-634.1067914510543,-633.9056792431725,-633.7045670352909,-633.5034548274092,-633.3023426195274,-633.1012304116457,-632.9001182037639,-632.6990059958823,-632.4978937880006,-632.2967815801188,-632.0956693722371,-631.8945571643553,-631.6934449564736,-631.492332748592,-631.2912205407102,-631.0901083328285,-630.8889961249467,-630.687883917065,-630.4867717091835,-630.2856595013017,-630.08454729342,-629.8834350855382,-629.6823228776565,-629.4812106697748,-629.2800984618931,-629.0789862540114,-628.8778740461297,-628.6767618382479,-628.4756496303662,-628.2745374224845,-628.0734252146028,-627.8723130067211,-627.6712007988393,-627.4700885909576,-627.2689763830758,-627.0678641751942,-626.8667519673126,-626.6656397594307,-626.464527551549,-626.2634153436672,-626.0623031357857,-625.861190927904,-625.6600787200222,-625.4589665121405,-625.2578543042587,-625.056742096377,-624.8556298884954,-624.6545176806136,-624.4534054727319,-624.2522932648501,-624.0511810569684,-623.8500688490868,-623.648956641205,-623.4478444333233,-623.2467322254415,-623.0456200175598,-622.8445078096781,-622.6433956017964,-622.4422833939147,-622.241171186033,-622.0400589781513,-621.8389467702696,-621.6378345623879,-621.4367223545062,-621.2356101466244,-621.0344979387427,-620.833385730861,-620.6322735229792,-620.4311613150976,-620.2300491072158,-620.0289368993341,-619.8278246914524,-619.6267124835706,-619.425600275689,-619.2244880678072,-619.0233758599255,-618.8222636520438,-618.621151444162,-618.4200392362803,-618.2189270283986,-618.017814820517,-617.8167026126353,-617.6155904047534,-617.4144781968718,-617.2133659889901,-617.0122537811084,-616.8111415732267,-616.6100293653449,-616.4089171574632,-616.2078049495814,-616.0066927416998,-615.8055805338181,-615.6044683259363,-615.4033561180546,-615.2022439101728,-615.0011317022912,-614.8000194944095,-614.5989072865277,-614.397795078646,-614.1966828707642,-613.9955706628825,-613.794458455001,-613.5933462471191,-613.3922340392375,-613.1911218313556,-612.990009623474,-612.7888974155924,-612.5877852077106,-612.3866729998289,-612.1855607919471,-611.9844485840654,-611.7833363761837,-611.582224168302,-611.3811119604203,-611.1799997525385,-610.9788875446568,-610.7777753367751,-610.5766631288934,-610.3755509210117,-610.1744387131299,-609.9733265052482,-609.7722142973665,-609.5711020894847,-609.3699898816031,-609.1688776737213,-608.9677654658396,-608.766653257958,-608.5655410500761,-608.3644288421946,-608.1633166343128,-607.9622044264311,-607.7610922185494,-607.5599800106676,-607.3588678027859,-607.1577555949042,-606.9566433870225,-606.7555311791408,-606.554418971259,-606.3533067633773,-606.1521945554956,-605.9510823476139,-605.7499701397322,-605.5488579318504,-605.3477457239687,-605.1466335160869,-604.9455213082053,-604.7444091003237,-604.5432968924418,-604.3421846845602,-604.1410724766783,-603.9399602687968,-603.7388480609151,-603.5377358530333,-603.3366236451516,-603.1355114372698,-602.9343992293881,-602.7332870215065,-602.5321748136247,-602.331062605743,-602.1299503978612,-601.9288381899795,-601.7277259820979,-601.5266137742161,-601.3255015663344,-601.1243893584526,-600.9232771505709,-600.7221649426892,-600.5210527348075,-600.3199405269258,-600.118828319044,-599.9177161111623,-599.7166039032807,-599.515491695399,-599.3143794875173,-599.1132672796355,-598.9121550717538,-598.7110428638721,-598.5099306559903,-598.3088184481087,-598.1077062402269,-597.9065940323452,-597.7054818244635,-597.5043696165817,-597.3032574087001,-597.1021452008183,-596.9010329929366,-596.6999207850549,-596.4988085771731,-596.2976963692914,-596.0965841614097,-595.895471953528,-595.6943597456464,-595.4932475377645,-595.2921353298829,-595.0910231220012,-594.8899109141195,-594.6887987062378,-594.487686498356,-594.2865742904743,-594.0854620825925,-593.8843498747109,-593.6832376668292,-593.4821254589474,-593.2810132510657,-593.0799010431839,-592.8787888353023,-592.6776766274206,-592.4765644195388,-592.2754522116571,-592.0743400037753,-591.8732277958936,-591.672115588012,-591.4710033801302,-591.2698911722485,-591.0687789643667,-590.867666756485,-590.6665545486035,-590.4654423407217,-590.26433013284,-590.0632179249583,-589.8621057170765,-589.6609935091948,-589.4598813013131,-589.2587690934314,-589.0576568855497,-588.8565446776679,-588.6554324697862,-588.4543202619045,-588.2532080540228,-588.0520958461411,-587.8509836382593,-587.6498714303776,-587.4487592224958,-587.2476470146142,-587.0465348067326,-586.8454225988507,-586.644310390969,-586.4431981830872,-586.2420859752057,-586.040973767324,-585.8398615594422,-585.6387493515605,-585.4376371436787,-585.236524935797,-585.0354127279154,-584.8343005200336,-584.6331883121519,-584.4320761042701,-584.2309638963884,-584.0298516885068,-583.828739480625,-583.6276272727433,-583.4265150648615,-583.2254028569798,-583.0242906490981,-582.8231784412164,-582.6220662333347,-582.4209540254529,-582.2198418175713,-582.0187296096896,-581.8176174018079,-581.6165051939262,-581.4153929860444,-581.2142807781627,-581.013168570281,-580.8120563623992,-580.6109441545176,-580.4098319466358,-580.2087197387541,-580.0076075308724,-579.8064953229906,-579.605383115109,-579.4042709072272,-579.2031586993455,-579.0020464914638,-578.800934283582,-578.5998220757003,-578.3987098678186,-578.197597659937,-577.9964854520553,-577.7953732441734,-577.5942610362918,-577.3931488284101,-577.1920366205284,-576.9909244126467,-576.7898122047649,-576.5886999968832,-576.3875877890014,-576.1864755811198,-575.9853633732381,-575.7842511653563,-575.5831389574746,-575.3820267495928,-575.1809145417112,-574.9798023338295,-574.7786901259477,-574.577577918066,-574.3764657101842,-574.1753535023025,-573.974241294421,-573.7731290865391,-573.5720168786575,-573.3709046707756,-573.169792462894,-572.9686802550124,-572.7675680471306,-572.5664558392489,-572.3653436313671,-572.1642314234854,-571.9631192156037,-571.762007007722,-571.5608947998403,-571.3597825919585,-571.1586703840768,-570.9575581761951,-570.7564459683134,-570.5553337604317,-570.3542215525499,-570.1531093446682,-569.9519971367865,-569.7508849289047,-569.5497727210231,-569.3486605131413,-569.1475483052596,-568.946436097378,-568.7453238894961,-568.5442116816146,-568.3430994737328,-568.1419872658511,-567.9408750579694,-567.7397628500876,-567.5386506422059,-567.3375384343242,-567.1364262264425,-566.9353140185608,-566.734201810679,-566.5330896027973,-566.3319773949155,-566.1308651870339,-565.9297529791522,-565.7286407712704,-565.5275285633887,-565.3264163555069,-565.1253041476253,-564.9241919397437,-564.7230797318618,-564.5219675239802,-564.3208553160983,-564.1197431082167,-563.9186309003351,-563.7175186924533,-563.5164064845716,-563.3152942766898,-563.1141820688081,-562.9130698609265,-562.7119576530447,-562.510845445163,-562.3097332372812,-562.1086210293995,-561.9075088215178,-561.7063966136361,-561.5052844057544,-561.3041721978726,-561.1030599899909,-560.9019477821092,-560.7008355742275,-560.4997233663458,-560.298611158464,-560.0974989505823,-559.8963867427007,-559.6952745348189,-559.4941623269373,-559.2930501190555,-559.0919379111738,-558.8908257032921,-558.6897134954103,-558.4886012875287,-558.2874890796469,-558.0863768717652,-557.8852646638835,-557.6841524560017,-557.48304024812,-557.2819280402383,-557.0808158323566,-556.8797036244749,-556.6785914165931,-556.4774792087114,-556.2763670008297,-556.075254792948,-555.8741425850664,-555.6730303771845,-555.4719181693029,-555.270805961421,-555.0696937535395,-554.8685815456578,-554.667469337776,-554.4663571298943,-554.2652449220125,-554.0641327141309,-553.8630205062492,-553.6619082983674,-553.4607960904857,-553.2596838826039,-553.0585716747222,-552.8574594668406,-552.6563472589588,-552.4552350510771,-552.2541228431953,-552.0530106353136,-551.851898427432,-551.6507862195502,-551.4496740116685,-551.2485618037869,-551.047449595905,-550.8463373880234,-550.6452251801417,-550.44411297226,-550.2430007643783,-550.0418885564965,-549.8407763486148,-549.6396641407331,-549.4385519328514,-549.2374397249697,-549.0363275170879,-548.8352153092062,-548.6341031013244,-548.4329908934428,-548.2318786855611,-548.0307664776793,-547.8296542697976,-547.6285420619158,-547.4274298540342,-547.2263176461526,-547.0252054382707,-546.824093230389,-546.6229810225072,-546.4218688146256,-546.220756606744,-546.0196443988622,-545.8185321909805,-545.6174199830987,-545.416307775217,-545.2151955673354,-545.0140833594536,-544.8129711515719,-544.6118589436901,-544.4107467358084,-544.2096345279267,-544.008522320045,-543.8074101121633,-543.6062979042815,-543.4051856963998,-543.2040734885181,-543.0029612806364,-542.8018490727547,-542.6007368648729,-542.3996246569913,-542.1985124491096,-541.9974002412278,-541.7962880333462,-541.5951758254644,-541.3940636175827,-541.192951409701,-540.9918392018192,-540.7907269939376,-540.5896147860558,-540.3885025781741,-540.1873903702924,-539.9862781624106,-539.7851659545289,-539.5840537466472,-539.3829415387655,-539.1818293308838,-538.980717123002,-538.7796049151203,-538.5784927072386,-538.377380499357,-538.1762682914753,-537.9751560835934,-537.7740438757118,-537.57293166783,-537.3718194599484,-537.1707072520667,-536.9695950441849,-536.7684828363032,-536.5673706284214,-536.3662584205398,-536.1651462126581,-535.9640340047763,-535.7629217968946,-535.5618095890128,-535.3606973811311,-535.1595851732495,-534.9584729653677,-534.757360757486,-534.5562485496042,-534.3551363417225,-534.154024133841,-533.9529119259591,-533.7517997180775,-533.5506875101956,-533.349575302314,-533.1484630944323,-532.9473508865506,-532.7462386786689,-532.5451264707871,-532.3440142629054,-532.1429020550237,-531.941789847142,-531.7406776392603,-531.5395654313785,-531.3384532234968,-531.1373410156151,-530.9362288077333,-530.7351165998517,-530.5340043919699,-530.3328921840882,-530.1317799762065,-529.9306677683247,-529.7295555604431,-529.5284433525613,-529.3273311446796,-529.126218936798,-528.9251067289161,-528.7239945210345,-528.5228823131528,-528.3217701052711,-528.1206578973894,-527.9195456895076,-527.7184334816259,-527.5173212737442,-527.3162090658625,-527.1150968579808,-526.913984650099,-526.7128724422173,-526.5117602343355,-526.3106480264539,-526.1095358185722,-525.9084236106904,-525.7073114028087,-525.5061991949269,-525.3050869870453,-525.1039747791637,-524.9028625712818,-524.7017503634002,-524.5006381555183,-524.2995259476368,-524.098413739755,-523.8973015318733,-523.6961893239916,-523.4950771161098,-523.2939649082282,-523.0928527003464,-522.8917404924647,-522.690628284583,-522.4895160767012,-522.2884038688196,-522.0872916609378,-521.8861794530561,-521.6850672451744,-521.4839550372926,-521.2828428294109,-521.0817306215292,-520.8806184136475,-520.6795062057657,-520.478393997884,-520.2772817900023,-520.0761695821207,-519.875057374239,-519.6739451663572,-519.4728329584755,-519.2717207505938,-519.0706085427121,-518.8694963348304,-518.6683841269486,-518.4672719190669,-518.2661597111852,-518.0650475033035,-517.8639352954218,-517.66282308754,-517.4617108796583,-517.2605986717766,-517.0594864638949,-516.8583742560131,-516.6572620481314,-516.4561498402497,-516.255037632368,-516.0539254244864,-515.8528132166045,-515.6517010087229,-515.4505888008412,-515.2494765929595,-515.0483643850778,-514.847252177196,-514.6461399693143,-514.4450277614326,-514.2439155535509,-514.0428033456691,-513.8416911377874,-513.6405789299057,-513.439466722024,-513.2383545141423,-513.0372423062605,-512.8361300983788,-512.6350178904971,-512.4339056826154,-512.2327934747337,-512.0316812668519,-511.83056905897024,-511.62945685108855,-511.4283446432068,-511.2272324353251,-511.02612022744336,-510.82500801956166,-510.62389581168,-510.4227836037982,-510.2216713959165,-510.0205591880348,-509.8194469801531,-509.61833477227134,-509.41722256438965,-509.2161103565079,-509.0149981486262,-508.8138859407445,-508.61277373286276,-508.41166152498107,-508.2105493170993,-508.0094371092176,-507.80832490133594,-507.6072126934542,-507.40610048557244,-507.20498827769075,-507.003876069809,-506.80276386192736,-506.6016516540456,-506.40053944616386,-506.19942723828217,-505.9983150304004,-505.7972028225187,-505.59609061463703,-505.3949784067553,-505.19386619887354,-504.9927539909919,-504.79164178311015,-504.59052957522846,-504.3894173673467,-504.18830515946496,-503.9871929515833,-503.7860807437016,-503.5849685358198,-503.38385632793813,-503.1827441200564,-502.9816319121747,-502.780519704293,-502.57940749641125,-502.37829528852956,-502.1771830806478,-501.9760708727661,-501.7749586648844,-501.5738464570027,-501.3727342491209,-501.17162204123923,-500.97050983335754,-500.7693976254758,-500.5682854175941,-500.36717320971235,-500.16606100183066,-499.96494879394896,-499.7638365860672,-499.5627243781855,-499.3616121703038,-499.160499962422,-498.9593877545404,-498.75827554665864,-498.5571633387769,-498.3560511308952,-498.15493892301345,-497.9538267151318,-497.75271450725006,-497.5516022993683,-497.3504900914866,-497.14937788360487,-496.9482656757232,-496.7471534678415,-496.54604125995974,-496.344929052078,-496.1438168441963,-495.9427046363146,-495.7415924284329,-495.54048022055116,-495.3393680126694,-495.1382558047877,-494.937143596906,-494.7360313890243,-494.5349191811426,-494.33380697326083,-494.1326947653791,-493.93158255749745,-493.7304703496157,-493.529358141734,-493.32824593385226,-493.1271337259705,-492.9260215180889,-492.7249093102071,-492.5237971023254,-492.3226848944437,-492.12157268656193,-491.92046047868024,-491.71934827079855,-491.5182360629168,-491.3171238550351,-491.11601164715336,-490.91489943927166,-490.71378723139,-490.5126750235082,-490.3115628156265,-490.1104506077448,-489.9093383998631,-489.70822619198134,-489.50711398409965,-489.3060017762179,-489.10488956833615,-488.9037773604545,-488.70266515257276,-488.50155294469107,-488.3004407368093,-488.0993285289276,-487.89821632104594,-487.6971041131642,-487.49599190528244,-487.29487969740075,-487.093767489519,-486.8926552816373,-486.6915430737556,-486.49043086587386,-486.28931865799217,-486.0882064501105,-485.8870942422287,-485.68598203434703,-485.4848698264653,-485.28375761858354,-485.0826454107019,-484.88153320282015,-484.6804209949384,-484.4793087870567,-484.27819657917496,-484.0770843712933,-483.8759721634116,-483.6748599555298,-483.47374774764813,-483.2726355397664,-483.0715233318847,-482.870411124003,-482.66929891612125,-482.4681867082395,-482.2670745003578,-482.0659622924761,-481.8648500845944,-481.6637378767127,-481.4626256688309,-481.26151346094923,-481.06040125306754,-480.8592890451858,-480.6581768373041,-480.45706462942235,-480.2559524215406,-480.05484021365896,-479.8537280057772,-479.6526157978955,-479.4515035900138,-479.250391382132,-479.0492791742504,-478.84816696636864,-478.6470547584869,-478.4459425506052,-478.24483034272345,-478.04371813484175,-477.84260592696006,-477.6414937190783,-477.4403815111966,-477.23926930331487,-477.0381570954332,-476.8370448875515,-476.63593267966974,-476.434820471788,-476.2337082639063,-476.0325960560246,-475.83148384814285,-475.63037164026116,-475.4292594323794,-475.2281472244977,-475.027035016616,-474.8259228087343,-474.6248106008526,-474.42369839297083,-474.2225861850891,-474.02147397720745,-473.8203617693257,-473.61924956144395,-473.41813735356226,-473.2170251456805,-473.0159129377989,-472.8148007299171,-472.6136885220354,-472.4125763141537,-472.21146410627193,-472.01035189839024,-471.80923969050855,-471.6081274826268,-471.40701527474505,-471.20590306686336,-471.00479085898166,-470.8036786511,-470.6025664432182,-470.4014542353365,-470.2003420274548,-469.9992298195731,-469.79811761169134,-469.59700540380965,-469.3958931959279,-469.19478098804615,-468.9936687801645,-468.79255657228276,-468.59144436440107,-468.3903321565193,-468.1892199486376,-467.98810774075594,-467.7869955328742,-467.58588332499244,-467.38477111711074,-467.183658909229,-466.9825467013473,-466.7814344934656,-466.58032228558386,-466.37921007770217,-466.1780978698205,-465.9769856619387,-465.77587345405703,-465.5747612461753,-465.37364903829354,-465.1725368304119,-464.97142462253015,-464.7703124146484,-464.5692002067667,-464.36808799888496,-464.1669757910033,-463.9658635831216,-463.7647513752398,-463.56363916735813,-463.3625269594764,-463.1614147515947,-462.960302543713,-462.75919033583125,-462.5580781279495,-462.3569659200678,-462.1558537121861,-461.9547415043044,-461.7536292964227,-461.5525170885409,-461.35140488065923,-461.15029267277754,-460.9491804648958,-460.7480682570141,-460.54695604913235,-460.3458438412506,-460.14473163336896,-459.9436194254872,-459.7425072176055,-459.5413950097238,-459.340282801842,-459.1391705939604,-458.93805838607864,-458.7369461781969,-458.5358339703152,-458.33472176243345,-458.13360955455175,-457.93249734667006,-457.7313851387883,-457.5302729309066,-457.32916072302487,-457.1280485151432,-456.9269363072615,-456.72582409937974,-456.524711891498,-456.3235996836163,-456.1224874757346,-455.92137526785285,-455.72026305997116,-455.5191508520894,-455.3180386442077,-455.116926436326,-454.9158142284443,-454.7147020205626,-454.51358981268083,-454.3124776047991,-454.11136539691745,-453.9102531890357,-453.70914098115395,-453.50802877327226,-453.3069165653905,-453.1058043575089,-452.9046921496271,-452.7035799417454,-452.5024677338637,-452.30135552598193,-452.10024331810024,-451.89913111021855,-451.6980189023368,-451.49690669445505,-451.29579448657336,-451.09468227869166,-450.89357007081,-450.6924578629282,-450.4913456550465,-450.2902334471648,-450.0891212392831,-449.88800903140134,-449.68689682351965,-449.4857846156379,-449.28467240775615,-449.0835601998745,-448.88244799199276,-448.68133578411107,-448.4802235762293,-448.27911136834757,-448.07799916046594,-447.8768869525842,-447.67577474470244,-447.47466253682074,-447.27355032893905,-447.0724381210573,-446.8713259131756,-446.67021370529386,-446.46910149741217,-446.2679892895305,-446.0668770816487,-445.86576487376703,-445.6646526658853,-445.46354045800354,-445.2624282501219,-445.06131604224015,-444.8602038343584,-444.6590916264767,-444.45797941859496,-444.2568672107133,-444.0557550028316,-443.8546427949498,-443.65353058706813,-443.4524183791864,-443.2513061713047,-443.050193963423,-442.84908175554125,-442.6479695476595,-442.4468573397778,-442.2457451318961,-442.0446329240144,-441.8435207161327,-441.6424085082509,-441.44129630036923,-441.24018409248754,-441.0390718846058,-440.8379596767241,-440.63684746884235,-440.4357352609606,-440.23462305307896,-440.0335108451972,-439.8323986373155,-439.63128642943377,-439.430174221552,-439.2290620136704,-439.02794980578864,-438.8268375979069,-438.6257253900252,-438.42461318214345,-438.22350097426175,-438.02238876638006,-437.8212765584983,-437.6201643506166,-437.41905214273487,-437.2179399348532,-437.0168277269715,-436.81571551908974,-436.614603311208,-436.4134911033263,-436.2123788954446,-436.01126668756285,-435.81015447968116,-435.6090422717994,-435.40793006391766,-435.206817856036,-435.0057056481543,-434.8045934402726,-434.60348123239083,-434.4023690245091,-434.20125681662745,-434.0001446087457,-433.79903240086395,-433.59792019298226,-433.3968079851005,-433.1956957772188,-432.9945835693371,-432.7934713614554,-432.5923591535737,-432.39124694569193,-432.19013473781024,-431.98902252992855,-431.7879103220468,-431.58679811416505,-431.38568590628336,-431.18457369840166,-430.9834614905199,-430.7823492826382,-430.5812370747565,-430.3801248668748,-430.1790126589931,-429.97790045111134,-429.77678824322965,-429.5756760353479,-429.37456382746615,-429.1734516195845,-428.97233941170276,-428.771227203821,-428.5701149959393,-428.3690027880576,-428.16789058017594,-427.9667783722942,-427.76566616441244,-427.56455395653074,-427.36344174864905,-427.1623295407673,-426.9612173328856,-426.76010512500386,-426.5589929171221,-426.3578807092405,-426.1567685013587,-425.95565629347703,-425.7545440855953,-425.55343187771354,-425.3523196698319,-425.15120746195015,-424.9500952540684,-424.7489830461867,-424.54787083830496,-424.34675863042327,-424.1456464225416,-423.9445342146598,-423.74342200677813,-423.5423097988964,-423.3411975910147,-423.140085383133,-422.93897317525125,-422.7378609673695,-422.5367487594878,-422.3356365516061,-422.13452434372437,-421.9334121358427,-421.7322999279609,-421.53118772007923,-421.33007551219754,-421.1289633043158,-420.9278510964341,-420.72673888855235,-420.5256266806706,-420.32451447278896,-420.1234022649072,-419.92229005702546,-419.72117784914377,-419.520065641262,-419.3189534333804,-419.11784122549864,-418.9167290176169,-418.7156168097352,-418.51450460185345,-418.31339239397175,-418.11228018609006,-417.9111679782083,-417.71005577032656,-417.50894356244487,-417.3078313545632,-417.1067191466815,-416.90560693879974,-416.704494730918,-416.5033825230363,-416.3022703151546,-416.10115810727285,-415.90004589939116,-415.6989336915094,-415.49782148362766,-415.296709275746,-415.0955970678643,-414.8944848599826,-414.69337265210083,-414.4922604442191,-414.29114823633745,-414.0900360284557,-413.88892382057395,-413.68781161269226,-413.4866994048105,-413.2855871969288,-413.0844749890471,-412.8833627811654,-412.6822505732837,-412.48113836540193,-412.28002615752024,-412.07891394963855,-411.8778017417568,-411.67668953387505,-411.47557732599336,-411.27446511811166,-411.0733529102299,-410.8722407023482,-410.6711284944665,-410.47001628658484,-410.2689040787031,-410.06779187082134,-409.86667966293965,-409.6655674550579,-409.46445524717615,-409.2633430392945,-409.06223083141276,-408.861118623531,-408.6600064156493,-408.4588942077676,-408.25778199988594,-408.0566697920042,-407.85555758412244,-407.65444537624074,-407.45333316835905,-407.2522209604773,-407.0511087525956,-406.84999654471386,-406.6488843368321,-406.4477721289505,-406.2466599210687,-406.04554771318703,-405.8444355053053,-405.64332329742354,-405.4422110895419,-405.24109888166015,-405.0399866737784,-404.8388744658967,-404.63776225801496,-404.43665005013327,-404.2355378422516,-404.0344256343698,-403.83331342648813,-403.6322012186064,-403.4310890107247,-403.229976802843,-403.02886459496125,-402.8277523870795,-402.6266401791978,-402.4255279713161,-402.22441576343437,-402.0233035555527,-401.8221913476709,-401.62107913978923,-401.41996693190754,-401.2188547240258,-401.0177425161441,-400.81663030826235,-400.6155181003806,-400.41440589249896,-400.2132936846172,-400.01218147673546,-399.81106926885377,-399.609957060972,-399.4088448530904,-399.20773264520864,-399.0066204373269,-398.8055082294452,-398.60439602156345,-398.40328381368175,-398.20217160580006,-398.0010593979183,-397.79994719003656,-397.59883498215487,-397.3977227742732,-397.1966105663915,-396.99549835850974,-396.794386150628,-396.5932739427463,-396.3921617348646,-396.19104952698285,-395.98993731910116,-395.7888251112194,-395.58771290333766,-395.386600695456,-395.1854884875743,-394.9843762796926,-394.78326407181083,-394.5821518639291,-394.38103965604745,-394.1799274481657,-393.97881524028395,-393.77770303240226,-393.5765908245205,-393.3754786166388,-393.1743664087571,-392.9732542008754,-392.7721419929937,-392.57102978511193,-392.36991757723024,-392.16880536934855,-391.9676931614668,-391.76658095358505,-391.56546874570336,-391.36435653782166,-391.1632443299399,-390.9621321220582,-390.7610199141765,-390.55990770629484,-390.3587954984131,-390.15768329053134,-389.95657108264965,-389.7554588747679,-389.5543466668862,-389.3532344590045,-389.15212225112276,-388.951010043241,-388.7498978353593,-388.5487856274776,-388.34767341959594,-388.1465612117142,-387.94544900383244,-387.74433679595074,-387.54322458806905,-387.3421123801873,-387.1410001723056,-386.93988796442386,-386.7387757565421,-386.5376635486605,-386.3365513407787,-386.135439132897,-385.9343269250153,-385.73321471713354,-385.5321025092519,-385.33099030137015,-385.1298780934884,-384.9287658856067,-384.72765367772496,-384.52654146984327,-384.3254292619616,-384.1243170540798,-383.9232048461981,-383.7220926383164,-383.5209804304347,-383.319868222553,-383.11875601467125,-382.9176438067895,-382.7165315989078,-382.5154193910261,-382.31430718314436,-382.1131949752627,-381.9120827673809,-381.7109705594992,-381.50985835161754,-381.3087461437358,-381.1076339358541,-380.90652172797235,-380.7054095200906,-380.50429731220896,-380.3031851043272,-380.10207289644546,-379.90096068856377,-379.699848480682,-379.49873627280033,-379.29762406491864,-379.0965118570369,-378.8953996491552,-378.69428744127345,-378.49317523339175,-378.29206302551006,-378.0909508176283,-377.88983860974656,-377.68872640186487,-377.4876141939832,-377.2865019861014,-377.08538977821974,-376.884277570338,-376.6831653624563,-376.4820531545746,-376.28094094669285,-376.07982873881116,-375.8787165309294,-375.67760432304766,-375.476492115166,-375.2753799072843,-375.0742676994025,-374.87315549152083,-374.6720432836391,-374.47093107575745,-374.2698188678757,-374.06870665999395,-373.86759445211226,-373.6664822442305,-373.4653700363488,-373.2642578284671,-373.0631456205854,-372.8620334127036,-372.66092120482193,-372.45980899694024,-372.25869678905855,-372.0575845811768,-371.85647237329505,-371.6553601654134,-371.45424795753166,-371.2531357496499,-371.0520235417682,-370.8509113338865,-370.6497991260047,-370.4486869181231,-370.24757471024134,-370.04646250235965,-369.8453502944779,-369.6442380865962,-369.4431258787145,-369.24201367083276,-369.040901462951,-368.8397892550693,-368.6386770471876,-368.4375648393059,-368.2364526314242,-368.03534042354244,-367.83422821566074,-367.63311600777905,-367.4320037998973,-367.2308915920156,-367.02977938413386,-366.8286671762521,-366.6275549683705,-366.4264427604887,-366.225330552607,-366.0242183447253,-365.82310613684353,-365.6219939289619,-365.42088172108015,-365.2197695131984,-365.0186573053167,-364.81754509743496,-364.61643288955327,-364.4153206816716,-364.2142084737898,-364.0130962659081,-363.8119840580264,-363.6108718501447,-363.409759642263,-363.20864743438125,-363.0075352264995,-362.8064230186178,-362.6053108107361,-362.40419860285436,-362.2030863949727,-362.0019741870909,-361.8008619792092,-361.59974977132754,-361.3986375634458,-361.1975253555641,-360.99641314768235,-360.7953009398006,-360.59418873191896,-360.3930765240372,-360.19196431615546,-359.99085210827377,-359.789739900392,-359.58862769251033,-359.38751548462864,-359.1864032767469,-358.9852910688652,-358.78417886098345,-358.58306665310175,-358.38195444522006,-358.1808422373383,-357.97973002945656,-357.77861782157487,-357.5775056136932,-357.3763934058114,-357.17528119792973,-356.974168990048,-356.7730567821663,-356.5719445742846,-356.37083236640285,-356.16972015852116,-355.9686079506394,-355.76749574275766,-355.566383534876,-355.3652713269943,-355.1641591191125,-354.96304691123083,-354.7619347033491,-354.56082249546745,-354.3597102875857,-354.15859807970395,-353.95748587182226,-353.7563736639405,-353.5552614560588,-353.3541492481771,-353.1530370402954,-352.9519248324136,-352.750812624532,-352.54970041665024,-352.34858820876855,-352.1474760008868,-351.94636379300505,-351.7452515851234,-351.54413937724166,-351.3430271693599,-351.1419149614782,-350.9408027535965,-350.7396905457148,-350.5385783378331,-350.33746612995134,-350.13635392206965,-349.9352417141879,-349.7341295063062,-349.5330172984245,-349.33190509054276,-349.130792882661,-348.9296806747793,-348.7285684668976,-348.5274562590159,-348.3263440511342,-348.12523184325244,-347.92411963537074,-347.72300742748905,-347.5218952196073,-347.3207830117256,-347.11967080384386,-346.9185585959621,-346.7174463880805,-346.5163341801987,-346.315221972317,-346.1141097644353,-345.91299755655353,-345.7118853486719,-345.51077314079015,-345.3096609329084,-345.1085487250267,-344.90743651714496,-344.70632430926327,-344.5052121013816,-344.3040998934998,-344.1029876856181,-343.9018754777364,-343.7007632698547,-343.499651061973,-343.29853885409125,-343.0974266462095,-342.8963144383278,-342.6952022304461,-342.49409002256436,-342.2929778146827,-342.0918656068009,-341.8907533989192,-341.68964119103754,-341.4885289831558,-341.2874167752741,-341.08630456739235,-340.8851923595106,-340.68408015162896,-340.4829679437472,-340.28185573586546,-340.08074352798377,-339.879631320102,-339.67851911222033,-339.47740690433864,-339.2762946964569,-339.0751824885752,-338.87407028069345,-338.67295807281175,-338.47184586493006,-338.2707336570483,-338.06962144916656,-337.86850924128487,-337.6673970334032,-337.4662848255214,-337.26517261763973,-337.064060409758,-336.8629482018763,-336.6618359939946,-336.46072378611285,-336.25961157823116,-336.0584993703494,-335.85738716246766,-335.656274954586,-335.4551627467043,-335.2540505388225,-335.05293833094083,-334.8518261230591,-334.65071391517745,-334.4496017072957,-334.24848949941395,-334.04737729153226,-333.8462650836505,-333.6451528757688,-333.4440406678871,-333.2429284600054,-333.0418162521236,-332.840704044242,-332.63959183636024,-332.4384796284785,-332.2373674205968,-332.03625521271505,-331.8351430048334,-331.63403079695166,-331.4329185890699,-331.2318063811882,-331.0306941733065,-330.8295819654248,-330.6284697575431,-330.42735754966134,-330.2262453417796,-330.0251331338979,-329.8240209260162,-329.6229087181345,-329.42179651025276,-329.220684302371,-329.0195720944893,-328.8184598866076,-328.6173476787259,-328.4162354708442,-328.21512326296244,-328.0140110550807,-327.81289884719905,-327.6117866393173,-327.4106744314356,-327.20956222355386,-327.0084500156721,-326.8073378077905,-326.6062255999087,-326.405113392027,-326.2040011841453,-326.00288897626353,-325.80177676838184,-325.60066456050015,-325.3995523526184,-325.1984401447367,-324.99732793685496,-324.79621572897327,-324.5951035210916,-324.3939913132098,-324.1928791053281,-323.9917668974464,-323.7906546895647,-323.58954248168294,-323.38843027380125,-323.1873180659195,-322.9862058580378,-322.7850936501561,-322.58398144227436,-322.3828692343927,-322.1817570265109,-321.9806448186292,-321.77953261074754,-321.5784204028658,-321.37730819498404,-321.17619598710235,-320.9750837792206,-320.77397157133896,-320.5728593634572,-320.37174715557546,-320.17063494769377,-319.969522739812,-319.76841053193033,-319.56729832404864,-319.3661861161669,-319.16507390828514,-318.96396170040344,-318.76284949252175,-318.56173728464006,-318.3606250767583,-318.15951286887656,-317.95840066099487,-317.7572884531132,-317.5561762452314,-317.35506403734973,-317.153951829468,-316.95283962158624,-316.7517274137046,-316.55061520582285,-316.34950299794116,-316.1483907900594,-315.94727858217766,-315.746166374296,-315.5450541664143,-315.3439419585325,-315.14282975065083,-314.9417175427691,-314.7406053348874,-314.5394931270057,-314.33838091912395,-314.13726871124226,-313.93615650336056,-313.7350442954788,-313.5339320875971,-313.3328198797154,-313.1317076718336,-312.930595463952,-312.72948325607024,-312.5283710481885,-312.3272588403068,-312.12614663242505,-311.9250344245434,-311.72392221666166,-311.5228100087799,-311.3216978008982,-311.1205855930165,-310.9194733851348,-310.7183611772531,-310.51724896937134,-310.3161367614896,-310.1150245536079,-309.9139123457262,-309.7128001378445,-309.51168792996276,-309.310575722081,-309.1094635141993,-308.9083513063176,-308.7072390984359,-308.5061268905542,-308.30501468267244,-308.1039024747907,-307.90279026690905,-307.7016780590273,-307.5005658511456,-307.29945364326386,-307.0983414353821,-306.8972292275005,-306.6961170196187,-306.495004811737,-306.2938926038553,-306.09278039597353,-305.89166818809184,-305.69055598021015,-305.4894437723284,-305.2883315644467,-305.08721935656496,-304.88610714868327,-304.6849949408016,-304.4838827329198,-304.2827705250381,-304.0816583171564,-303.8805461092747,-303.67943390139294,-303.47832169351125,-303.2772094856295,-303.0760972777478,-302.8749850698661,-302.67387286198436,-302.4727606541027,-302.2716484462209,-302.0705362383392,-301.86942403045754,-301.6683118225758,-301.46719961469404,-301.26608740681235,-301.0649751989306,-300.86386299104896,-300.6627507831672,-300.46163857528546,-300.26052636740377,-300.059414159522,-299.8583019516403,-299.65718974375864,-299.4560775358769,-299.25496532799514,-299.05385312011344,-298.85274091223175,-298.65162870435006,-298.4505164964683,-298.24940428858656,-298.04829208070487,-297.8471798728232,-297.6460676649414,-297.44495545705973,-297.243843249178,-297.04273104129624,-296.8416188334146,-296.64050662553285,-296.43939441765116,-296.2382822097694,-296.03717000188766,-295.836057794006,-295.6349455861243,-295.4338333782425,-295.23272117036083,-295.03160896247914,-294.8304967545974,-294.6293845467157,-294.42827233883395,-294.22716013095226,-294.02604792307056,-293.8249357151888,-293.6238235073071,-293.4227112994254,-293.2215990915436,-293.020486883662,-292.81937467578024,-292.6182624678985,-292.4171502600168,-292.21603805213505,-292.0149258442534,-291.81381363637166,-291.6127014284899,-291.4115892206082,-291.21047701272647,-291.0093648048448,-290.8082525969631,-290.60714038908134,-290.4060281811996,-290.2049159733179,-290.0038037654362,-289.8026915575545,-289.60157934967276,-289.400467141791,-289.1993549339093,-288.9982427260276,-288.7971305181459,-288.5960183102642,-288.39490610238244,-288.1937938945007,-287.99268168661905,-287.7915694787373,-287.5904572708556,-287.38934506297386,-287.1882328550921,-286.9871206472105,-286.7860084393287,-286.584896231447,-286.3837840235653,-286.18267181568353,-285.98155960780184,-285.78044739992015,-285.5793351920384,-285.3782229841567,-285.17711077627496,-284.97599856839327,-284.7748863605116,-284.5737741526298,-284.3726619447481,-284.1715497368664,-283.9704375289847,-283.76932532110294,-283.56821311322125,-283.3671009053395,-283.16598869745775,-282.9648764895761,-282.76376428169436,-282.56265207381267,-282.3615398659309,-282.1604276580492,-281.95931545016754,-281.7582032422858,-281.55709103440404,-281.35597882652235,-281.1548666186406,-280.9537544107589,-280.7526422028772,-280.55152999499546,-280.35041778711377,-280.149305579232,-279.9481933713503,-279.74708116346864,-279.5459689555869,-279.34485674770514,-279.14374453982344,-278.94263233194175,-278.74152012406,-278.5404079161783,-278.33929570829656,-278.13818350041487,-277.9370712925332,-277.7359590846514,-277.53484687676973,-277.333734668888,-277.13262246100624,-276.9315102531246,-276.73039804524285,-276.5292858373611,-276.3281736294794,-276.12706142159766,-275.925949213716,-275.7248370058343,-275.5237247979525,-275.32261259007083,-275.12150038218914,-274.9203881743074,-274.7192759664257,-274.51816375854395,-274.3170515506622,-274.11593934278056,-273.9148271348988,-273.7137149270171,-273.5126027191354,-273.3114905112536,-273.110378303372,-272.90926609549024,-272.7081538876085,-272.5070416797268,-272.30592947184505,-272.10481726396335,-271.90370505608166,-271.7025928481999,-271.5014806403182,-271.30036843243647,-271.0992562245548,-270.8981440166731,-270.69703180879134,-270.4959196009096,-270.2948073930279,-270.0936951851462,-269.89258297726445,-269.69147076938276,-269.490358561501,-269.2892463536193,-269.0881341457376,-268.8870219378559,-268.6859097299742,-268.48479752209244,-268.2836853142107,-268.08257310632905,-267.8814608984473,-267.68034869056555,-267.47923648268386,-267.2781242748021,-267.0770120669205,-266.8758998590387,-266.674787651157,-266.4736754432753,-266.27256323539353,-266.07145102751184,-265.87033881963015,-265.6692266117484,-265.46811440386665,-265.26700219598496,-265.06588998810327,-264.8647777802216,-264.6636655723398,-264.4625533644581,-264.2614411565764,-264.0603289486947,-263.85921674081294,-263.65810453293125,-263.4569923250495,-263.25588011716775,-263.0547679092861,-262.85365570140436,-262.65254349352267,-262.4514312856409,-262.2503190777592,-262.0492068698775,-261.8480946619958,-261.6469824541141,-261.44587024623235,-261.2447580383506,-261.0436458304689,-260.8425336225872,-260.64142141470546,-260.44030920682377,-260.239196998942,-260.0380847910603,-259.8369725831786,-259.6358603752969,-259.4347481674152,-259.23363595953344,-259.03252375165175,-258.83141154377,-258.6302993358883,-258.42918712800656,-258.22807492012487,-258.0269627122432,-257.8258505043614,-257.62473829647973,-257.423626088598,-257.2225138807163,-257.02140167283454,-256.82028946495285,-256.61917725707116,-256.4180650491894,-256.2169528413077,-256.01584063342597,-255.81472842554427,-255.61361621766255,-255.41250400978083,-255.2113918018991,-255.0102795940174,-254.80916738613567,-254.60805517825395,-254.40694297037226,-254.20583076249054,-254.0047185546088,-253.8036063467271,-253.60249413884537,-253.40138193096368,-253.20026972308193,-252.9991575152002,-252.79804530731852,-252.59693309943677,-252.39582089155508,-252.19470868367335,-251.99359647579166,-251.7924842679099,-251.5913720600282,-251.3902598521465,-251.18914764426478,-250.98803543638306,-250.78692322850134,-250.58581102061962,-250.3846988127379,-250.18358660485617,-249.98247439697448,-249.78136218909276,-249.580249981211,-249.37913777332932,-249.1780255654476,-248.9769133575659,-248.77580114968416,-248.57468894180244,-248.37357673392074,-248.172464526039,-247.9713523181573,-247.77024011027558,-247.56912790239386,-247.36801569451214,-247.16690348663042,-246.96579127874872,-246.764679070867,-246.56356686298525,-246.36245465510356,-246.16134244722184,-245.96023023934012,-245.7591180314584,-245.55800582357668,-245.356893615695,-245.15578140781324,-244.95466919993154,-244.75355699204982,-244.55244478416807,-244.35133257628638,-244.15022036840466,-243.94910816052297,-243.74799595264122,-243.5468837447595,-243.3457715368778,-243.14465932899608,-242.94354712111436,-242.74243491323264,-242.54132270535095,-242.3402104974692,-242.13909828958748,-241.9379860817058,-241.73687387382407,-241.53576166594235,-241.33464945806062,-241.1335372501789,-240.9324250422972,-240.73131283441546,-240.53020062653377,-240.32908841865205,-240.1279762107703,-239.9268640028886,-239.7257517950069,-239.5246395871252,-239.32352737924344,-239.12241517136172,-238.92130296348003,-238.7201907555983,-238.5190785477166,-238.31796633983487,-238.11685413195315,-237.91574192407143,-237.7146297161897,-237.513517508308,-237.3124053004263,-237.11129309254454,-236.91018088466285,-236.70906867678113,-236.50795646889944,-236.3068442610177,-236.10573205313597,-235.90461984525427,-235.70350763737252,-235.50239542949083,-235.3012832216091,-235.1001710137274,-234.89905880584567,-234.69794659796395,-234.49683439008226,-234.29572218220054,-234.0946099743188,-233.8934977664371,-233.69238555855537,-233.49127335067365,-233.29016114279193,-233.08904893491024,-232.88793672702852,-232.68682451914677,-232.48571231126508,-232.28460010338335,-232.08348789550166,-231.8823756876199,-231.6812634797382,-231.4801512718565,-231.27903906397475,-231.07792685609306,-230.87681464821134,-230.67570244032962,-230.4745902324479,-230.27347802456617,-230.07236581668448,-229.87125360880276,-229.670141400921,-229.46902919303932,-229.2679169851576,-229.06680477727588,-228.86569256939416,-228.66458036151244,-228.46346815363074,-228.262355945749,-228.0612437378673,-227.86013152998558,-227.65901932210386,-227.45790711422214,-227.25679490634042,-227.05568269845872,-226.85457049057698,-226.65345828269525,-226.45234607481356,-226.25123386693184,-226.05012165905012,-225.8490094511684,-225.64789724328668,-225.446785035405,-225.24567282752324,-225.04456061964154,-224.84344841175982,-224.64233620387807,-224.44122399599638,-224.24011178811466,-224.03899958023297,-223.83788737235122,-223.63677516446953,-223.4356629565878,-223.23455074870608,-223.03343854082436,-222.83232633294264,-222.63121412506095,-222.4301019171792,-222.22898970929748,-222.0278775014158,-221.82676529353407,-221.62565308565235,-221.42454087777062,-221.2234286698889,-221.0223164620072,-220.82120425412546,-220.62009204624377,-220.41897983836205,-220.2178676304803,-220.0167554225986,-219.81564321471689,-219.6145310068352,-219.41341879895344,-219.21230659107172,-219.01119438319003,-218.8100821753083,-218.6089699674266,-218.40785775954487,-218.20674555166315,-218.00563334378143,-217.8045211358997,-217.603408928018,-217.4022967201363,-217.20118451225454,-217.00007230437285,-216.79896009649113,-216.5978478886094,-216.3967356807277,-216.19562347284597,-215.99451126496427,-215.79339905708252,-215.59228684920083,-215.3911746413191,-215.1900624334374,-214.98895022555567,-214.78783801767395,-214.58672580979226,-214.3856136019105,-214.1845013940288,-213.9833891861471,-213.78227697826537,-213.58116477038365,-213.38005256250193,-213.17894035462024,-212.97782814673852,-212.77671593885677,-212.57560373097508,-212.37449152309335,-212.17337931521163,-211.9722671073299,-211.7711548994482,-211.5700426915665,-211.36893048368475,-211.16781827580306,-210.96670606792134,-210.76559386003962,-210.5644816521579,-210.36336944427617,-210.16225723639448,-209.96114502851273,-209.760032820631,-209.55892061274932,-209.3578084048676,-209.15669619698588,-208.95558398910416,-208.75447178122243,-208.55335957334074,-208.352247365459,-208.1511351575773,-207.95002294969558,-207.74891074181383,-207.54779853393214,-207.34668632605042,-207.14557411816872,-206.94446191028698,-206.74334970240525,-206.54223749452356,-206.34112528664184,-206.14001307876012,-205.9389008708784,-205.73778866299668,-205.53667645511496,-205.33556424723324,-205.13445203935154,-204.93333983146982,-204.73222762358807,-204.53111541570638,-204.33000320782466,-204.12889099994297,-203.92777879206122,-203.72666658417953,-203.5255543762978,-203.32444216841606,-203.12332996053436,-202.92221775265264,-202.72110554477095,-202.5199933368892,-202.31888112900748,-202.1177689211258,-201.91665671324407,-201.71554450536235,-201.51443229748062,-201.3133200895989,-201.11220788171718,-200.91109567383546,-200.70998346595377,-200.50887125807205,-200.3077590501903,-200.1066468423086,-199.90553463442689,-199.7044224265452,-199.50331021866344,-199.30219801078172,-199.10108580290003,-198.89997359501828,-198.6988613871366,-198.49774917925487,-198.29663697137315,-198.09552476349143,-197.8944125556097,-197.693300347728,-197.4921881398463,-197.29107593196454,-197.08996372408285,-196.88885151620113,-196.6877393083194,-196.4866271004377,-196.28551489255597,-196.08440268467427,-195.88329047679252,-195.68217826891083,-195.4810660610291,-195.27995385314742,-195.07884164526567,-194.87772943738395,-194.67661722950226,-194.4755050216205,-194.2743928137388,-194.0732806058571,-193.87216839797537,-193.67105619009365,-193.46994398221193,-193.26883177433024,-193.0677195664485,-192.86660735856677,-192.66549515068508,-192.46438294280335,-192.26327073492163,-192.0621585270399,-191.8610463191582,-191.6599341112765,-191.45882190339475,-191.25770969551306,-191.05659748763134,-190.8554852797496,-190.6543730718679,-190.45326086398617,-190.25214865610448,-190.05103644822273,-189.849924240341,-189.64881203245932,-189.4476998245776,-189.24658761669588,-189.04547540881416,-188.84436320093243,-188.6432509930507,-188.442138785169,-188.2410265772873,-188.03991436940558,-187.83880216152383,-187.63768995364214,-187.43657774576042,-187.23546553787872,-187.03435332999697,-186.83324112211525,-186.63212891423356,-186.4310167063518,-186.22990449847012,-186.0287922905884,-185.8276800827067,-185.62656787482496,-185.42545566694324,-185.22434345906154,-185.02323125117982,-184.8221190432981,-184.62100683541638,-184.41989462753466,-184.21878241965294,-184.01767021177122,-183.81655800388953,-183.6154457960078,-183.41433358812606,-183.21322138024436,-183.01210917236264,-182.81099696448095,-182.6098847565992,-182.40877254871748,-182.2076603408358,-182.00654813295404,-181.80543592507235,-181.60432371719062,-181.4032115093089,-181.20209930142718,-181.00098709354546,-180.79987488566377,-180.59876267778205,-180.3976504699003,-180.1965382620186,-179.99542605413689,-179.79431384625516,-179.59320163837344,-179.39208943049172,-179.19097722261003,-178.98986501472828,-178.7887528068466,-178.58764059896487,-178.38652839108315,-178.18541618320143,-177.9843039753197,-177.783191767438,-177.58207955955626,-177.38096735167454,-177.17985514379285,-176.97874293591113,-176.7776307280294,-176.5765185201477,-176.375406312266,-176.17429410438427,-175.97318189650252,-175.77206968862083,-175.5709574807391,-175.3698452728574,-175.16873306497567,-174.96762085709395,-174.76650864921226,-174.5653964413305,-174.3642842334488,-174.1631720255671,-173.96205981768537,-173.76094760980365,-173.55983540192193,-173.35872319404024,-173.1576109861585,-172.95649877827677,-172.75538657039507,-172.55427436251335,-172.35316215463163,-172.1520499467499,-171.9509377388682,-171.7498255309865,-171.54871332310475,-171.34760111522306,-171.14648890734134,-170.9453766994596,-170.7442644915779,-170.54315228369617,-170.34204007581448,-170.14092786793273,-169.939815660051,-169.73870345216932,-169.5375912442876,-169.33647903640588,-169.13536682852416,-168.93425462064243,-168.7331424127607,-168.532030204879,-168.3309179969973,-168.12980578911558,-167.92869358123383,-167.72758137335214,-167.52646916547042,-167.32535695758872,-167.12424474970697,-166.92313254182525,-166.72202033394356,-166.5209081260618,-166.31979591818012,-166.1186837102984,-165.9175715024167,-165.71645929453496,-165.51534708665324,-165.31423487877154,-165.1131226708898,-164.9120104630081,-164.71089825512638,-164.50978604724466,-164.30867383936294,-164.10756163148122,-163.90644942359953,-163.7053372157178,-163.50422500783606,-163.30311279995436,-163.10200059207264,-162.90088838419092,-162.6997761763092,-162.49866396842748,-162.2975517605458,-162.09643955266404,-161.89532734478234,-161.69421513690062,-161.4931029290189,-161.29199072113718,-161.09087851325546,-160.88976630537377,-160.68865409749202,-160.4875418896103,-160.2864296817286,-160.08531747384689,-159.88420526596516,-159.68309305808344,-159.48198085020172,-159.28086864232003,-159.07975643443828,-158.8786442265566,-158.67753201867487,-158.47641981079312,-158.27530760291143,-158.0741953950297,-157.873083187148,-157.67197097926626,-157.47085877138454,-157.26974656350285,-157.06863435562113,-156.8675221477394,-156.6664099398577,-156.465297731976,-156.26418552409424,-156.06307331621252,-155.86196110833083,-155.6608489004491,-155.4597366925674,-155.25862448468567,-155.05751227680395,-154.85640006892226,-154.6552878610405,-154.4541756531588,-154.2530634452771,-154.05195123739534,-153.85083902951365,-153.64972682163193,-153.44861461375024,-153.2475024058685,-153.04639019798677,-152.84527799010507,-152.64416578222335,-152.44305357434163,-152.2419413664599,-152.0408291585782,-151.83971695069647,-151.63860474281475,-151.43749253493306,-151.23638032705134,-151.0352681191696,-150.8341559112879,-150.63304370340617,-150.43193149552448,-150.23081928764273,-150.029707079761,-149.82859487187932,-149.62748266399757,-149.42637045611588,-149.22525824823416,-149.02414604035243,-148.8230338324707,-148.621921624589,-148.4208094167073,-148.21969720882558,-148.01858500094383,-147.81747279306214,-147.61636058518042,-147.4152483772987,-147.21413616941697,-147.01302396153528,-146.81191175365356,-146.6107995457718,-146.40968733789012,-146.2085751300084,-146.0074629221267,-145.80635071424496,-145.60523850636324,-145.40412629848154,-145.2030140905998,-145.0019018827181,-144.80078967483638,-144.59967746695466,-144.39856525907294,-144.19745305119122,-143.99634084330953,-143.7952286354278,-143.59411642754606,-143.39300421966436,-143.19189201178264,-142.99077980390092,-142.7896675960192,-142.58855538813748,-142.3874431802558,-142.18633097237404,-141.98521876449234,-141.78410655661062,-141.58299434872887,-141.38188214084718,-141.18076993296546,-140.97965772508377,-140.77854551720202,-140.5774333093203,-140.3763211014386,-140.17520889355688,-139.97409668567516,-139.77298447779344,-139.57187226991172,-139.37076006203,-139.16964785414828,-138.9685356462666,-138.76742343838487,-138.56631123050312,-138.36519902262143,-138.1640868147397,-137.962974606858,-137.76186239897626,-137.56075019109457,-137.35963798321285,-137.1585257753311,-136.9574135674494,-136.7563013595677,-136.555189151686,-136.35407694380424,-136.15296473592252,-135.95185252804083,-135.7507403201591,-135.5496281122774,-135.34851590439567,-135.14740369651395,-134.94629148863223,-134.7451792807505,-134.5440670728688,-134.3429548649871,-134.14184265710534,-133.94073044922365,-133.73961824134193,-133.53850603346024,-133.3373938255785,-133.13628161769677,-132.93516940981507,-132.73405720193333,-132.53294499405163,-132.3318327861699,-132.1307205782882,-131.92960837040647,-131.72849616252475,-131.52738395464306,-131.32627174676134,-131.1251595388796,-130.9240473309979,-130.72293512311617,-130.52182291523445,-130.32071070735273,-130.119598499471,-129.9184862915893,-129.7173740837076,-129.51626187582588,-129.31514966794415,-129.11403746006243,-128.9129252521807,-128.711813044299,-128.51070083641727,-128.30958862853558,-128.10847642065386,-127.90736421277214,-127.70625200489042,-127.5051397970087,-127.30402758912697,-127.10291538124527,-126.90180317336355,-126.70069096548184,-126.4995787576001,-126.29846654971838,-126.09735434183668,-125.89624213395496,-125.69512992607325,-125.49401771819153,-125.29290551030981,-125.09179330242809,-124.89068109454638,-124.68956888666466,-124.48845667878295,-124.28734447090122,-124.0862322630195,-123.88512005513779,-123.68400784725607,-123.48289563937436,-123.28178343149263,-123.08067122361092,-122.8795590157292,-122.6784468078475,-122.47733459996577,-122.27622239208404,-122.07511018420233,-121.87399797632061,-121.6728857684389,-121.47177356055718,-121.27066135267548,-121.06954914479374,-120.86843693691203,-120.66732472903031,-120.4662125211486,-120.26510031326688,-120.06398810538515,-119.86287589750344,-119.66176368962172,-119.46065148174002,-119.2595392738583,-119.05842706597657,-118.85731485809485,-118.65620265021315,-118.45509044233143,-118.25397823444972,-118.05286602656798,-117.85175381868626,-117.65064161080456,-117.44952940292283,-117.24841719504113,-117.0473049871594,-116.84619277927769,-116.64508057139597,-116.44396836351426,-116.24285615563254,-116.04174394775083,-115.8406317398691,-115.63951953198737,-115.43840732410567,-115.23729511622395,-115.03618290834224,-114.8350707004605,-114.6339584925788,-114.43284628469708,-114.23173407681537,-114.03062186893365,-113.82950966105193,-113.62839745317021,-113.42728524528849,-113.22617303740678,-113.02506082952506,-112.82394862164334,-112.62283641376162,-112.42172420587991,-112.22061199799819,-112.01949979011648,-111.81838758223476,-111.61727537435304,-111.41616316647132,-111.2150509585896,-111.0139387507079,-110.81282654282617,-110.61171433494445,-110.41060212706273,-110.20948991918102,-110.0083777112993,-109.8072655034176,-109.60615329553586,-109.40504108765415,-109.20392887977243,-109.00281667189071,-108.801704464009,-108.60059225612727,-108.39948004824556,-108.19836784036384,-107.99725563248214,-107.79614342460042,-107.5950312167187,-107.39391900883697,-107.19280680095525,-106.99169459307355,-106.79058238519183,-106.58947017731012,-106.38835796942838,-106.18724576154668,-105.98613355366496,-105.78502134578325,-105.58390913790153,-105.38279693001981,-105.18168472213809,-104.98057251425637,-104.77946030637466,-104.57834809849294,-104.37723589061122,-104.1761236827295,-103.97501147484779,-103.77389926696607,-103.57278705908436,-103.37167485120263,-103.17056264332092,-102.9694504354392,-102.76833822755748,-102.56722601967577,-102.36611381179404,-102.16500160391233,-101.96388939603061,-101.7627771881489,-101.56166498026718,-101.36055277238547,-101.15944056450374,-100.95832835662203,-100.75721614874031,-100.55610394085859,-100.35499173297688,-100.15387952509515,-99.95276731721344,-99.75165510933172,-99.55054290145002,-99.3494306935683,-99.14831848568657,-98.94720627780485,-98.74609406992315,-98.54498186204142,-98.3438696541597,-98.14275744627798,-97.94164523839626,-97.74053303051456,-97.53942082263283,-97.33830861475113,-97.1371964068694,-96.93608419898769,-96.73497199110597,-96.53385978322424,-96.33274757534254,-96.13163536746082,-95.9305231595791,-95.72941095169737,-95.52829874381567,-95.32718653593395,-95.12607432805224,-94.9249621201705,-94.7238499122888,-94.52273770440708,-94.32162549652536,-94.12051328864365,-93.91940108076192,-93.71828887288021,-93.51717666499849,-93.31606445711678,-93.11495224923506,-92.91384004135335,-92.71272783347162,-92.51161562558991,-92.31050341770819,-92.10939120982647,-91.90827900194476,-91.70716679406303,-91.50605458618132,-91.3049423782996,-91.1038301704179,-90.90271796253617,-90.70160575465445,-90.50049354677273,-90.29938133889102,-90.0982691310093,-89.89715692312758,-89.69604471524586,-89.49493250736414,-89.29382029948243,-89.09270809160071,-88.891595883719,-88.69048367583727,-88.48937146795556,-88.28825926007384,-88.08714705219214,-87.88603484431042,-87.6849226364287,-87.48381042854697,-87.28269822066525,-87.08158601278355,-86.88047380490183,-86.67936159702012,-86.47824938913838,-86.27713718125668,-86.07602497337496,-85.87491276549325,-85.67380055761153,-85.4726883497298,-85.27157614184809,-85.07046393396637,-84.86935172608466,-84.66823951820294,-84.46712731032122,-84.2660151024395,-84.06490289455779,-83.86379068667607,-83.66267847879436,-83.46156627091263,-83.2604540630309,-83.0593418551492,-82.85822964726748,-82.65711743938577,-82.45600523150405,-82.25489302362233,-82.05378081574061,-81.8526686078589,-81.65155639997718,-81.45044419209546,-81.24933198421374,-81.04821977633202,-80.84710756845031,-80.64599536056859,-80.44488315268688,-80.24377094480515,-80.04265873692344,-79.84154652904172,-79.64043432116001,-79.4393221132783,-79.23820990539656,-79.03709769751485,-78.83598548963313,-78.63487328175142,-78.4337610738697,-78.232648865988,-78.03153665810626,-77.83042445022456,-77.62931224234283,-77.42820003446113,-77.2270878265794,-77.02597561869767,-76.82486341081596,-76.62375120293424,-76.42263899505254,-76.22152678717082,-76.0204145792891,-75.81930237140737,-75.61819016352567,-75.41707795564395,-75.21596574776224,-75.0148535398805,-74.81374133199878,-74.61262912411708,-74.41151691623536,-74.21040470835365,-74.00929250047191,-73.80818029259021,-73.60706808470849,-73.40595587682678,-73.20484366894506,-73.00373146106335,-72.80261925318162,-72.6015070452999,-72.40039483741819,-72.19928262953647,-71.99817042165476,-71.79705821377303,-71.59594600589132,-71.3948337980096,-71.1937215901279,-70.99260938224617,-70.79149717436444,-70.59038496648273,-70.38927275860101,-70.1881605507193,-69.98704834283758,-69.78593613495586,-69.58482392707414,-69.38371171919243,-69.18259951131071,-68.981487303429,-68.78037509554729,-68.57926288766555,-68.37815067978384,-68.17703847190212,-67.97592626402042,-67.7748140561387,-67.57370184825697,-67.37258964037525,-67.17147743249355,-66.97036522461183,-66.76925301673012,-66.56814080884838,-66.36702860096666,-66.16591639308496,-65.96480418520323,-65.76369197732153,-65.5625797694398,-65.36146756155809,-65.16035535367637,-64.95924314579464,-64.75813093791294,-64.55701873003122,-64.3559065221495,-64.15479431426779,-63.95368210638607,-63.75256989850435,-63.551457690622634,-63.35034548274092,-63.14923327485919,-62.94812106697748,-62.747008859095764,-62.54589665121404,-62.34478444333233,-62.14367223545061,-61.942560027568895,-61.74144781968718,-61.54033561180546,-61.33922340392375,-61.13811119604202,-60.936998988160305,-60.73588678027859,-60.53477457239687,-60.333662364515156,-60.13255015663344,-59.93143794875172,-59.73032574087001,-59.52921353298829,-59.32810132510657,-59.12698911722486,-58.92587690934313,-58.72476470146142,-58.5236524935797,-58.32254028569798,-58.12142807781627,-57.92031586993455,-57.719203662052834,-57.51809145417112,-57.3169792462894,-57.115867038407686,-56.914754830525965,-56.713642622644244,-56.51253041476253,-56.31141820688081,-56.110305998999095,-55.90919379111738,-55.70808158323566,-55.50696937535395,-55.305857167472226,-55.10474495959051,-54.9036327517088,-54.70252054382708,-54.50140833594536,-54.300296128063636,-54.09918392018192,-53.89807171230021,-53.69695950441849,-53.49584729653677,-53.29473508865506,-53.09362288077334,-52.892510672891625,-52.691398465009904,-52.49028625712818,-52.28917404924647,-52.08806184136475,-51.886949633483034,-51.685837425601314,-51.4847252177196,-51.283613009837886,-51.082500801956165,-50.88138859407445,-50.68027638619274,-50.47916417831102,-50.278051970429296,-50.076939762547575,-49.87582755466586,-49.67471534678415,-49.473603138902426,-49.27249093102071,-49.07137872313899,-48.87026651525728,-48.669154307375564,-48.46804209949384,-48.26692989161212,-48.06581768373041,-47.86470547584869,-47.663593267966974,-47.46248106008525,-47.26136885220354,-47.060256644321825,-46.859144436440104,-46.65803222855839,-46.45692002067668,-46.255807812794956,-46.054695604913235,-45.853583397031514,-45.6524711891498,-45.451358981268086,-45.250246773386365,-45.04913456550465,-44.84802235762293,-44.64691014974122,-44.4457979418595,-44.24468573397778,-44.04357352609607,-43.84246131821435,-43.64134911033263,-43.44023690245091,-43.23912469456919,-43.03801248668748,-42.836900278805764,-42.63578807092404,-42.43467586304233,-42.23356365516061,-42.032451447278895,-41.83133923939718,-41.63022703151545,-41.42911482363374,-41.228002615752025,-41.026890407870305,-40.82577819998859,-40.62466599210687,-40.423553784225156,-40.22244157634344,-40.02132936846172,-39.82021716058001,-39.61910495269828,-39.417992744816566,-39.21688053693485,-39.01576832905313,-38.81465612117142,-38.6135439132897,-38.41243170540798,-38.21131949752627,-38.01020728964455,-37.809095081762834,-37.60798287388112,-37.40687066599939,-37.20575845811768,-37.00464625023596,-36.803534042354244,-36.60242183447253,-36.40130962659081,-36.200197418709095,-35.99908521082738,-35.79797300294566,-35.59686079506395,-35.39574858718222,-35.194636379300505,-34.99352417141879,-34.79241196353707,-34.591299755655356,-34.39018754777364,-34.18907533989192,-33.98796313201021,-33.78685092412849,-33.58573871624677,-33.38462650836506,-33.18351430048333,-32.98240209260162,-32.7812898847199,-32.58017767683818,-32.37906546895647,-32.17795326107475,-31.976841053193034,-31.775728845311317,-31.574616637429596,-31.373504429547882,-31.172392221666165,-30.971280013784448,-30.77016780590273,-30.56905559802101,-30.367943390139295,-30.166831182257578,-29.96571897437586,-29.764606766494143,-29.56349455861243,-29.36238235073071,-29.16127014284899,-28.960157934967274,-28.75904572708556,-28.557933519203843,-28.356821311322122,-28.155709103440405,-27.95459689555869,-27.753484687676973,-27.552372479795256,-27.35126027191354,-27.150148064031818,-26.949035856150104,-26.747923648268387,-26.54681144038667,-26.345699232504952,-26.144587024623235,-25.943474816741517,-25.7423626088598,-25.541250400978083,-25.34013819309637,-25.139025985214648,-24.93791377733293,-24.736801569451213,-24.535689361569496,-24.334577153687782,-24.13346494580606,-23.932352737924344,-23.731240530042626,-23.530128322160913,-23.329016114279195,-23.127903906397478,-22.926791698515757,-22.725679490634043,-22.524567282752326,-22.32345507487061,-22.12234286698889,-21.921230659107174,-21.720118451225456,-21.51900624334374,-21.31789403546202,-21.116781827580304,-20.91566961969859,-20.71455741181687,-20.513445203935152,-20.312332996053435,-20.11122078817172,-19.910108580290004,-19.708996372408283,-19.507884164526565,-19.30677195664485,-19.105659748763134,-18.904547540881417,-18.703435332999696,-18.50232312511798,-18.301210917236265,-18.100098709354548,-17.89898650147283,-17.69787429359111,-17.496762085709396,-17.295649877827678,-17.09453766994596,-16.893425462064243,-16.69231325418253,-16.49120104630081,-16.29008883841909,-16.088976630537374,-15.887864422655658,-15.686752214773941,-15.485640006892224,-15.284527799010505,-15.083415591128789,-14.882303383247072,-14.681191175365354,-14.480078967483637,-14.278966759601921,-14.077854551720202,-13.876742343838487,-13.67563013595677,-13.474517928075052,-13.273405720193335,-13.072293512311617,-12.8711813044299,-12.670069096548184,-12.468956888666465,-12.267844680784748,-12.06673247290303,-11.865620265021313,-11.664508057139598,-11.463395849257878,-11.262283641376163,-11.061171433494446,-10.860059225612728,-10.65894701773101,-10.457834809849295,-10.256722601967576,-10.05561039408586,-9.854498186204141,-9.653385978322426,-9.452273770440708,-9.25116156255899,-9.050049354677274,-8.848937146795555,-8.647824938913839,-8.446712731032122,-8.245600523150404,-8.044488315268687,-7.8433761073869706,-7.642263899505252,-7.441151691623536,-7.2400394837418185,-7.038927275860101,-6.837815067978385,-6.636702860096667,-6.43559065221495,-6.234478444333233,-6.033366236451515,-5.832254028569799,-5.6311418206880814,-5.430029612806364,-5.228917404924648,-5.02780519704293,-4.826692989161213,-4.625580781279495,-4.424468573397777,-4.223356365516061,-4.0222441576343435,-3.821131949752626,-3.6200197418709092,-3.4189075339891923,-3.217795326107475,-3.0166831182257576,-2.8155709103440407,-2.614458702462324,-2.4133464945806065,-2.2122342866988887,-2.0111220788171718,-1.8100098709354546,-1.6088976630537375,-1.4077854551720204,-1.2066732472903032,-1.0055610394085859,-0.8044488315268687,-0.6033366236451516,-0.4022244157634344,-0.2011122078817172,0.0]}
},{}],23:[function(require,module,exports){
module.exports={"expected":[1.0,0.9798450101169925,0.9201924877023385,0.8234470247275643,0.6935084288476367,0.5356145222333003,0.3561300050653555,0.16228989459915577,-0.03809211823456469,-0.2369386385530052,-0.42623416714558693,-0.5983482050849457,-0.7463428389842997,-0.8642524081456859,-0.9473239802219898,-0.9922089418236847,-0.9970979810568079,-0.9617940208487968,-0.8877201631212968,-0.7778623235804939,-0.6366488695154157,-0.46977211240211486,-0.28395885094324747,-0.08669921394847618,0.11405526660628848,0.3102121816719453,0.4938644499712347,0.6576090522850289,0.7948454470072659,0.9000416378435311,0.9689571684697523,0.998814055240823,0.9884087676551249,0.9381607426446968,0.8500954770809915,0.7277628800369712,0.5760941760242033,0.4012031274325808,0.21013958889208986,0.010605327775318378,-0.1893564338894864,-0.3816852415356421,-0.5586283248185095,-0.7130531116312201,-0.838734741941981,-0.930606991776009,-0.9849664926014327,-0.9996220140398905,-0.973982792318737,-0.909082343946769,-0.807536804684664,-0.6734394731654099,-0.5121958101092197,-0.33030554431129217,-0.13510066870557244,0.06555011212204401,0.26355856925636084,0.4509429857967924,0.6201498997041319,0.764358583702499,0.8777559886578398,0.9557710674708847,0.9952590338932358,0.9946281287974067,0.9539037839550452,0.8747275968827305,0.7602911580792981,0.6152073980774091,0.44532464030711705,0.2574908552967372,0.059277619119413795,-0.14132509668519422,-0.33623100070198847,-0.5175834398837804,-0.6780721010766327,-0.8112276895951868,-0.911682706360527,-0.97538781167945,-0.9997750540455561,-0.9838613842125193,-0.9282882818893131,-0.8352958977061196,-0.7086327527877571,-0.5534046359429816,-0.37586878942093155,-0.18318167960264423,0.01688948001393035,0.21627982503288487,0.4069519346809633,0.5812198200763178,0.7320587462847858,0.8533883992429799,0.9403179830951364,0.9893433680751097,0.9984883419063342,0.9673842708787119,0.8972849594660076,0.7910161094928811,0.6528614161515033,0.4883898923350434,0.3042313818406343,0.10780931050004601,-0.09295855196539055,-0.28997925708202416,-0.47531090421312044,-0.6414827784128134,-0.781796494794442,-0.8905960102897652,-0.9634956186306143,-0.9975567380798193,-0.9914063656015749,-0.9452924225860326,-0.8610737611430801,-0.7421452338114036,-0.5933008471213479,-0.42054051528866543,-0.23082820379391028,-0.03181121207479703,0.1684880889593802,0.36199563853679384,0.5409111512494037,0.6980225463999407,0.826996666828869,0.9226345683513661,0.9810810890921939,0.9999802509828953,0.9785702291900611,0.9177140612589522,0.8198648580875069,0.6889669190756874,0.5302967374964733,0.35025030515879263,0.15608529010712044,-0.044371519830542334,-0.24303971470164862,-0.43191098359079017,-0.6033719294706736,-0.7505109650822097,-0.8673969188771095,-0.9493181204229693,-0.9929723277430674,-0.9965998406236308,-0.9600544340938411,-0.8848092527514558,-0.7738974283338789,-0.6317898142391906,-0.46421476551614616,-0.27792722898805716,-0.08043645148304161,0.12029671775370879,0.3161807287318892,0.49931950093248323,0.6623307141537096,0.7986433896889948,0.9027627663456524,0.9704917941574052,0.9991003173835893,0.9874351270318225,0.9359664466891493,0.8467689778187681,0.7234382685860258,0.570945777384615,0.39543847344934446,0.20399105265062753,0.0043207566471089144,-0.1955237089694216,-0.38748661783363186,-0.5638299489733535,-0.7174453062784868,-0.8421404578043168,-0.9328889445159084,-0.9860326967501272,-0.9994294909297181,-0.9725393025523749,-0.9064460745674894,-0.8038140236578077,-0.668780245718842,-0.5067879496070278,-0.3243670415009055,-0.1288709045151129,0.071820016024105,0.26961587317059643,0.4565435199249914,0.6250679066288986,0.7683958186642104,0.8807497107968818,0.9576005999084041,0.9958506282136975,0.9939579378457208,0.9519988231149146,0.871664655087074,0.7561937024499265,0.6102405969678298,0.43968870536956467,0.25141297095450765,0.053002784767353976,-0.1475439426013072,-0.34214317662911187,-0.5229506261299295,-0.6826779464728122,-0.8148865326066763,-0.9142470590995633,-0.9767543051390093,-0.9998886049019354,-0.9827174152329956,-0.9259329064403018,-0.8318240609243147,-0.7041844043435853,-0.5481590886722117,-0.37003749122791496,-0.1769996899995546,0.023172965151285616,0.22241151854575197,0.4126846681279172,0.5863225070880951,0.7363256976511936,0.8566476142407804,0.9424380828337127,0.9902388913768985,0.9981231902451589,0.9657731635106472,0.8944928400964592,0.7871555283971409,0.6480879932754281,0.4828960442581802,0.2982385654678026,0.10155909613796579,-0.09921421830224021,-0.2959882096101821,-0.48083092217776513,-0.6462913500014875,-0.7856997865836985,-0.893436680666554,-0.9651591602295265,-0.9979760935726646,-0.9905646307769215,-0.943223527757632,-0.8578611034196008,-0.7379183153606778,-0.5882300549405893,-0.4148302529080895,-0.2247086517745274,-0.02552904943468527,0.17467962837130768,0.36784697389211846,0.5461864153383545,0.7025090934338235,0.8305136441875385,0.9250402067486506,0.9822784172929756,0.9999210047116289,0.9772567966627417,0.9151993869141773,0.816250308397236,0.6843981964647998,0.5249580070809653,0.34435677105369555,0.14987452055296152,-0.050649168838710464,-0.2491311912593216,-0.43757074040119304,-0.6083718218512859,-0.7546494474723453,-0.8705071691353591,-0.9512747644243521,-0.993696493207481,-0.9960623364558556,-0.9582769270760064,-0.8818633941554825,-0.7699019656601651,-0.6269058045072723,-0.45863908305948875,-0.2718846294536728,-0.07417051193588849,0.12653341741725954,0.3221367872745933,0.5047548297550057,0.6670262152611894,0.8024097875267984,0.9054482374931455,0.9719880873269714,0.9993471170278411,0.9864224846620928,0.9337351818988724,0.8434090328464906,0.7190850827455965,0.5657748275091792,0.3896582004237521,0.1978344591635823,-0.0019639851424988475,-0.20168326124721814,-0.39327268917191843,-0.5690093029535789,-0.7218091632465005,-0.8455129107740401,-0.9351340499763652,-0.9870599545456326,-0.9991974923193231,-0.9710573993953691,-0.9037740023501469,-0.800059493557143,-0.6640946027672436,-0.5013600719770718,-0.3184157268300223,-0.12263605017727414,0.0780870831767179,0.2756625277878553,0.46212602148162246,0.6299612246001103,0.7724027035015945,0.8837086450537186,0.9593923090046715,0.9964028883919779,0.9932484875094041,0.9500562601927026,0.8685672842510518,0.7520663786558243,0.6052496925542813,0.43403540359248294,0.2453251562941369,0.04672585690949356,-0.153756960821735,-0.34804183857335524,-0.5282971568543444,-0.6872568274321043,-0.8185131892020193,-0.9167753008769778,-0.9780822187236129,-0.9999626621239929,-0.9815346308473859,-0.9235409584616818,-0.8283193687272974,-0.6997082419997058,-0.5428918901950113,-0.36419157728141116,-0.17081070925665784,0.029455535002063507,0.2285344272408545,0.4184011013417285,0.591402035513427,0.7405635656000112,0.8598729933418029,0.9445209581206567,0.9910953021890812,0.997718614680071,0.964123910001131,0.8916653900181193,0.7832638562054164,0.6432889721976212,0.47738312273683836,0.2922339692579095,0.09530487039123914,-0.10546596587249074,-0.30198547118592484,-0.48633194826620924,-0.6510743943523046,-0.7895720447758997,-0.8962420620507598,-0.9667845799389133,-0.9983560309716255,-0.9896837705965946,-0.9411173774540651,-0.8546145618689137,-0.7336622505870738,-0.583136028828998,-0.40910360554798025,-0.2185802242051331,-0.01924587844731271,0.1808642682812841,0.37368378001509434,0.5514401061375819,0.7069678927395067,0.8339978178898708,0.9274093078762027,0.983436947427232,0.9998222635263116,0.9759047644130356,0.912648563992717,0.8126035184243648,0.6798024414705329,0.5195985418561353,0.33844963553307855,0.14365783124985568,-0.05692481730426449,-0.2552128276246934,-0.44321321402752883,-0.6133476847408723,-0.758758122692791,-0.8735830360716558,-0.9531938349425505,-0.994381409613811,-0.9954854897838404,-0.9564615700033243,-0.8788827036890007,-0.7658760933722808,-0.6219970332284306,-0.45304528526062937,-0.26583129101089675,-0.06790164279932823,0.13276511925954643,0.3280801220474636,0.5101702217539891,0.6716953701444005,0.806144491755356,0.908097945215178,0.9734459888778151,0.9995544444254777,0.9853708805433176,0.9314670364044397,0.8400157748753853,0.7147034944579694,0.5605815306402517,0.383862536665236,0.19167005160430123,-0.008248649358540054,-0.20783484743265557,-0.3990432270121007,-0.5741661821848966,-0.7261445101715015,-0.8488519676458818,-0.9373422194801232,-0.9880482254132879,-0.9989260273721946,-0.9695371413799845,-0.9010662328363452,-0.7962733626792409,-0.6593827293843016,-0.49591239160982925,-0.3124518353638613,-0.11639635195650902,0.08435106604303405,0.28169829427716825,0.4676902699688418,0.6348296603413222,0.7763790799505679,0.8866326745562587,0.9611461239906979,0.9969157926148869,0.9924998058103477,0.9480761719158226,0.8654356067147269,0.7479093497181797,0.6002348819676597,0.42836495827018856,0.2392276517723642,0.040447083472138476,-0.15996390594445734,-0.35392675354913916,-0.5336228208796032,-0.691808563097726,-0.8221075161354144,-0.9192673318322047,-0.9793714999832789,-0.999997222786614,-0.9803130777733509,-0.9211125324306828,-0.8247819595435179,-0.6952044425557626,-0.5376032485553599,-0.3583312784835358,-0.16461498182650955,0.035736941417112235,0.23464830927533875,0.4241010085345193,0.5964582047209401,0.7447721827437759,0.8630644091499295,0.9465665266864762,0.9919125666851115,0.9972746311910091,0.9624365754924374,0.8888027209096916,0.7793412466311047,0.6384645424699784,0.47185134552058994,0.28621783038068793,0.08904688028948146,-0.11171354774443452,-0.30797080492918244,-0.4918137651987113,-0.655831722544421,-0.7934131164244658,-0.8990120436353484,-0.968371813557885,-0.9986965352699227,-0.9887638198528415,-0.9389740548641237,-0.8513342647230262,-0.7293772075968222,-0.5780189699905969,-0.40336079939967695,-0.2124431631465518,-0.01296194728557485,0.18704176440822567,0.37950582636333063,0.5566720161366444,0.7113987682031725,0.8374490503178735,0.9297417781591862,0.9845566337352923,0.9996840313270268,0.9745141858435614,0.9100616932470463,0.8089246322099245,0.675179835616172,0.51421855351033,0.33252913191716577,0.13743546774482374,-0.06319821735145856,-0.2612843835850415,-0.4488381816031623,-0.6182993216026191,-0.7628368284589454,-0.8766243981953196,-0.9550752561780398,-0.9950270499092086,-0.9948693233918956,-0.9546084345788263,-0.8758672990834226,-0.7618199704842467,-0.6170636942895035,-0.44743359306360714,-0.25976745275469454,-0.06163009168135783,0.13899157714063215,0.3340104983004365,0.5155654630321133,0.6763379943808981,0.8098473548612132,0.9107117848535049,0.9748654412256907,0.9997222913874741,0.9842803562117961,0.9291620997931384,0.8365893379324675,0.7102936767872738,0.5553660919028558,0.37805171109110197,0.18549807345477198,-0.014532987769168034,-0.21397822455017926,-0.40479800342923183,-0.5793003829807029,-0.7304511758157891,-0.8521574965336781,-0.9395133658088304,-0.9889974703183364,-0.9986151068106648,-0.9679785885534191,-0.8983228729776542,-0.7924557805688068,-0.6546448116797682,-0.4904451236779905,-0.30647560266442503,-0.1101520563086666,0.09061171720807928,0.2877229342376035,0.47323604560979105,0.6396730215588874,0.780324790952091,0.8895216838110883,0.9628619755942367,0.997389320623715,0.9917119223200104,0.9460586364938737,0.862269746173202,0.7437227798314404,0.5951963632831481,0.4226775933741055,0.23312069822861806,0.03416671245448255,-0.16616453280735044,-0.359797689113917,-0.5389274078524162,-0.6963329736850461,-0.8256693714380138,-0.9217230535349058,-0.9806220979939377,-0.9999922855247201,-0.9790528042598313,-0.9186477242653727,-0.8212119730936771,-0.6906731839029753,-0.5322933726441942,-0.35245682630456465,-0.15841275242819175,0.04201693629322634,0.2407529231628485,0.4297841645711798,0.6014908150018674,0.748951382850398,0.8662217356104918,0.9485747077352525,0.9926906525846504,0.9967912573144474,0.960711226630961,0.8859049458409946,0.7753878546095728,0.6336148946480068,0.466300931103742,0.28019038646182437,0.08278537301098574,-0.11795671715083374,-0.31394397443106503,-0.4972761564542909,-0.6605631466727354,-0.7972228498146172,-0.9017465160114766,-0.9699207983938342,-0.9989975930183046,-0.9878048148819046,-0.9367936446448466,-0.8480203415472197,-0.725063355640664,-0.572879080539134,-0.39760206129272024,-0.20629771100065888,-0.00667750415239969,0.19321187275314414,0.3853128829774677,0.5618819386853584,0.7158015448139654,0.8408672051546304,0.9320375254696156,0.9856374319917525,0.9995063135736736,0.9730851158794375,0.9074388768534891,0.8052137950626885,0.6705305614855877,0.5088182545424949,0.3265954940542384,0.13120767580897116,-0.06946912119328753,-0.26734561932589596,-0.4544454209529444,-0.6232265368566209,-0.7668854036699625,-0.8796311353785146,-0.9569189538183925,-0.9956333885921471,-0.9942138616173818,-0.9527175939977269,-0.8728172994412958,-0.7577337572049571,-0.6121059825476589,-0.44180422811923253,-0.2536933541947569,-0.055356106295917876,0.14521254512763507,0.33992768179532135,0.5209403404879294,0.6809539045961464,0.8135182305885438,0.9132896531666106,0.9762463883050132,0.9998506512842057,0.9831509547410936,0.9268204631054283,0.8331298573552532,0.705855803912644,0.5501287172965513,0.37222595321757673,0.1793187684959917,-0.020816752155362148,-0.2201131499484835,-0.41053679112097574,-0.5844117025501531,-0.7347289900745558,-0.8554293668755245,-0.941647403206475,-0.9899076517674654,-0.9982647429154844,-0.9663818024754528,-0.8955440311313891,-0.7886068980128426,-0.6498810367920573,-0.48495848412789133,-0.3004872647811505,-0.10390340987110763,0.0968687893884043,0.29373620970773945,0.4787631293571843,0.6444911169495753,0.7842396806583266,0.8923755587080209,0.9645397960425324,0.9978234537150371,0.9908848681582397,0.9440037336155411,0.8590698276717379,0.739506834356901,0.5901343355123296,0.4169735335440057,0.2270045368755584,0.027884991918863476,-0.17235859649785637,-0.36565441337724863,-0.5442107082520494,-0.7008298804887404,-0.8291986144235344,-0.9241423689889178,-0.9818339633594182,-0.9999478505333237,-0.9777538600851652,-0.9161466313208178,-0.81760955038523,-0.6861146450171325,-0.5269624721911863,-0.3465684527738109,-0.15220426603755935,0.048295271582967564,0.2468480277831908,0.43545034497819257,0.6064996675779959,0.7531010008496789,0.8693448480153221,0.9505454219477681,0.9934295291548343,0.996268512142706,0.9589479315645858,0.882972179268434,0.7714038362920342,0.6287402202832398,0.4607320987167906,0.27415187557349124,0.07652059587298062,-0.12419522749879781,-0.31990474376309225,-0.5027189062792192,-0.6652684798552851,-0.8010010944693915,-0.9044453711728675,-0.9714314732649151,-0.9992591923255826,-0.9868067935625998,-0.9345762329181514,-0.8446729232349526,-0.7207208651072611,-0.5677165634901735,-0.39182761868594496,-0.2001441105007196,-0.00039279727092287486,0.1993743496089169,0.3911047204901324,0.5670696680020484,0.7201760486708344,0.8442521473897528,0.9342964591299846,0.986679299507206,0.999289117285755,0.9716176109661214,0.9047802184081253,0.8014711535534124,0.6658548027159368,0.5033978582538601,0.32064895631131424,0.12497470142786506,-0.07573728114140531,-0.2733962954403325,-0.4600347106019561,-0.6281291358875275,-0.7709036884150526,-0.8826031288610329,-0.958724855041176,-0.9962004017134457,-0.9935191303497523,-0.9507891229445038,-0.8697328252316171,-0.7536176149318223,-0.6071240938227758,-0.43615741277631637,-0.24760923524602294,-0.04907993445308357,0.151427777504577,0.34583143881501527,0.5262946418243437,0.6855429184707967,0.8171569739449726,0.9158314483337352,0.9775887755710999,0.9999395190457089,0.9819827207403452,0.9244422188313712,0.8296374697864481,0.701390051121284,0.5448696136873754,0.3663854931505914,0.173132380798373,-0.02709969432072488,-0.22623938131006113,-0.4162593634164869,-0.5894999390062299,-0.7389777839825188,-0.8586674494389598,-0.9437442473827794,-0.9907787338103049,-0.9978749495253376,-0.9647468462159968,-0.8927298170563592,-0.7847268670346428,-0.6450915928809449,-0.47945268967097127,-0.29448705824159865,-0.0976506594531535,0.1031220354419864,0.29973788317500233,0.48427130290217846,0.6492837562080567,0.7881235944388099,0.8951941865246145,0.9661795190649565,0.9982181747414506,0.9900186759920511,0.9419115444454258,0.8558359776008322,0.7352616798161395,0.5850489985953163,0.41125300407898774,0.22087940928952174,0.021602169980865463,-0.17854585236259357,-0.3714966950100651,-0.5494725133984872,-0.7052991058898607,-0.83269510569384,-0.926525182636009,-0.9830070482134315,-0.9998639195675197,-0.9764162965550703,-0.9136093523852895,-0.8139748337068082,-0.6815290059515382,-0.521610757756449,-0.3406663904704403,-0.1459897678776343,0.05457169930441965,0.25293338239168717,0.44109932595257023,0.6114845646095292,0.7572208728398467,0.8724336230075848,0.9524785914846947,0.9941291672114928,0.995706416323189,0.957146759940013,0.8800045370305442,0.7673893490393534,0.6238407119157655,0.45514506831761764,0.26810253622501184,0.0702527963219045,-0.13042883237941752,-0.3258528774865932,-0.5081417996956388,-0.669947536240638,-0.8047477011555091,-0.9071085025200534,-0.9729037785024329,-0.9994813228590985,-0.9857697953148075,-0.9323219072674271,-0.8412921420026678,-0.7163499075165025,-0.5625316227529438,-0.3860376996584696,-0.19398260470184306,0.005891925125273984,0.20552895156978052,0.39688111013523314,0.5722349991815693,0.7245221069895161,0.8476037433246839,0.9365184899168341,0.9876821951299364,0.9990324510420975,0.9701117290671556,0.9020858229227426,0.797696855509121,0.6611527439904994,0.4979575787393746,0.3146897535649311,0.11873679079174078,-0.0820024496157733,-0.27943617293853906,-0.46560582978420584,-0.6330069250523592,-0.7748915239799038,-0.8855402612549609,-0.9604928885168377,-0.9967280668771957,-0.992785157029518,-0.9488230975899856,-0.8666139982850686,-0.7494717062443339,-0.6021182248896882,-0.43049337007298966,-0.24151533621927224,-0.042801824049319245,0.15763702878198282,0.3517215361726816,0.5316281555570155,0.6901048547478015,0.8207634412072738,0.9183370699589951,0.9788925500022807,0.9999888911618815,0.9807757003525055,0.9220274609069197,0.8261123131684484,0.6968965948017314,0.5395889887995348,0.36053056157689023,0.1669391547119988,-0.03338156610146269,-0.23235667666078863,-0.4219654942854478,-0.5945648913735034,-0.7431973897207094,-0.8618716163261174,-0.9458038155165158,-0.9916106820408225,-0.9974457420362998,-0.9630737843525984,-0.88988034190845,-0.7808158408878216,-0.6402766691200071,-0.4739279577753378,-0.28847522004214615,-0.09139405202611177,0.10937120837785663,0.30572771758515593,0.4897603486826342,0.6540507500345454,0.7919763788865989,0.8979774559306047,0.9677810798956916,0.9985734681122482,0.9891133800343265,0.9397821516209249,0.8525683236912206,0.7309874838843766,0.5799405533929423,0.405516230928746,0.21474555740104856,0.015318494799646963,-0.18472605601720216,-0.3773243032536871,-0.5547126154608176,-0.7097404733627486,-0.8361587071443435,-0.9288714003597515,-0.9841413062214215,-0.999740495942415,-0.9750401665007039,-0.9110359876762955,-0.8103079666225429,-0.6769164478299937,-0.5162384407221339,-0.33475087251435165,-0.1397695034088353,0.060845971551025745,0.2590087466287657,0.4467308843707073,0.616445309202811,0.7613108360940938,0.8754879385867745,0.9543741399896226,0.9947895391202963,0.9951049920575804,0.9553077828999645,0.8770021363433194,0.7633445514159487,0.6189165630664887,0.44954006058299145,0.2620426073533303,0.06398222192347597,-0.13665728557752585,-0.3317881406620189,-0.5135446225098217,-0.6746001310153071,-0.8084625218893968,-0.9097358048645752,-0.9743376559532251,-0.999663975845132,-0.9846938610979125,-0.9300307567341156,-0.8378781313845937,-0.7119506555125711,-0.5573244631224583,-0.38023253290072706,-0.18781343697143787,0.012176414801982267,0.21167543554113966,0.40264182375661656,0.5773777282035402,0.728839548109211,0.8509218605779652,0.9387035300643412,0.9886460792475311,0.9987363249805115,0.9685675296619419,0.8993557968206789,0.7938910500071249,0.6564245710313621,0.49249763087940923,0.3087181211919233,0.1124941902857637,-0.08826437915463778,-0.2854650132572003,-0.47115855845148785,-0.6378597116879886,-0.7788487528528323,-0.8884424165493694,-0.962222984411523,-0.9972163632416674,-0.9920119706471956,-0.9468195955882914,-0.8634609417891698,-0.7452961948977531,-0.5970885734703334,-0.4248123237278307,-0.23541189781148192,-0.0365220230576728,0.1638400537066051,0.3575977412211067,0.5369406710226123,0.6946395332396452,0.8243374899270969,0.920806419075239,0.9801576601020457,0.9999987656826221,0.9795299412524963,0.9195762847102863,0.8225545267380743,0.6923756124366165,0.5342870512073795,0.3546613897546814,0.16073933485723693,-0.03966211937593226,-0.2384647943795803,-0.42765495834688017,-0.5996063595963808,-0.7473876406229577,-0.8650417409786751,-0.9478260262587916,-0.9924034635986949,-0.9969771374012192,-0.9613626829679194,-0.8869957182363796,-0.7768739740501882,-0.6354364556893108,-0.4683845066569653,-0.2824519876386111,-0.08513383471364828,0.11561606136602509,0.3117054763514075,0.49523004989210817,0.6587919101421132,0.7957978818243164,0.9007252569923213,0.969344415276219,0.9988893197940435,0.9881690160424802,0.9376156392488403,0.8492669950087792,0.7266844153839881,0.5748092016787508,0.39976344068456865,0.20860322348517513,0.00903421456796842,-0.19089896335567494,-0.38313700792909755,-0.5599308074652626,-0.7141538074821799,-0.839589281969628,-0.931180929489136,-0.9852366925824367,-0.9995775845330024,-0.9736255242764793,-0.9084266388367062,-0.8066090939664917,-0.6722771528394152,-0.5108457332842512,-0.32882213255682213,-0.13354371831940923,0.06711784050133766,0.2650738805295369,0.4523447977970911,0.6213817054181817,0.7653707290668744,0.8785076741134026,0.9562319925921375,0.9954106187978498,0.994464263100951,0.9534310730804352,0.873965095795739,0.7592696031833205,0.6139679682296535,0.44391729689962306,0.25597232831383404,0.057709120353028776,-0.14288034108152167,-0.33771029885811443,-0.5189271613209613,-0.679226080410903,-0.8121454099429549,-0.9123271744331549,-0.9757330489819447,-0.9998071440692504,-0.9835790334092062,-0.9277028718141588,-0.8344310262274074,-0.707523282857313,-0.5520952902712155,-0.37441234770541887,-0.18163685097944635,0.018460423534242158,0.21781355874884895,0.40838663381749724,0.5824976519402275,0.7331282014995405,0.8542063680904731,0.9408514932676958,0.9895709137884713,0.9984007507973952,0.9669850737433007,0.8965902479325863,0.7900538873692946,0.6516704705920625,0.4870182303311962,0.30273429505997673,0.10624714648041036,-0.09452282242397832,-0.2914825782690297,-0.47669267728188514,-0.6426873041189487,-0.782775218731059,-0.8913094801148032,-0.963915074389861,-0.9976652715201054,-0.9911996017421171,-0.9447786960738299,-0.860273780283425,-0.7410912458165703,-0.5920353382261004,-0.41911449813095086,-0.22929916109649853,-0.030240779517881823,0.17003660727120928,0.36345982186168935,0.5422319783872167,0.6991467748354216,0.8278789789365588,0.9232393981480641,0.9813840559010103,0.9999691422179066,0.9782454926453643,0.9170887870580791,0.818964251020848,0.6878272825958965,0.528964010326974,0.3487782095048204,0.15453316611470005,-0.04594110607465392,-0.24456349320776583,-0.433327530878138,-0.604624144546732,-0.7515483711826279,-0.8681776981829694,-0.9498107997362488,-0.9931570471706163,-0.9964691541290619,-0.959613609647101,-0.8840760599770872,-0.7729014222177695,-0.6305711437677061,-0.462822555271376,-0.27641759893677864,-0.07887025478209725,0.12185634774704657,0.31767092336411795,0.5006801904881054,0.663507049264299,0.7995879523100395,0.903437481177012,0.9708694634578781,0.9991657173113141,0.9871856213170338,0.9354120929021715,0.8459321219495313,0.7223526442776623,0.569655146131071,0.39399486057030947,0.20245265015207212,0.002749577502573814,-0.1970643305603905,-0.38893457944583576,-0.5651268833035665,-0.7185389339300527,-0.842986694668747,-0.9334536788023231,-0.9862931640308639,-0.9993751917739604,-0.9721724257579965,-0.9057814089306475,-0.8028783618368536,-0.6676113042228768,-0.5054328484440952,-0.3228804047714521,-0.1273126585156285,0.07338705842888943,0.27112854453307955,0.45794084449317707,0.6262935582776726,0.769400391400434,0.8814927103138656,0.9580520759106804,0.9959923817127324,0.9937842547608409,0.951516704607748,0.8708935353449072,0.7551646652939502,0.6089951228649835,0.4382769993557265,0.24989193887052993,0.051433739385800065,-0.1490977530929176,-0.34361911816127283,-0.5242892035293066,-0.6838252017115598,-0.8157962198493282,-0.9148825088717772,-0.9770899024733227,-0.9999108218765894,-0.9824253562821906,-0.9253383444544457,-0.8309509626850177,-0.7030679644231845,-0.5468443107413582,-0.36857737395836626,-0.17545309068892911,0.024743703116118607,0.2239430787491913,0.41411531340911883,0.587594568164755,0.7373878977670486,0.8574571361306472,0.9429622946865931,0.9904566622236061,0.9980257417472693,0.9653644238151442,0.8937892854921966,0.7861855191559589,0.6468906304502438,0.4815195935202362,0.2967385115185146,0.09999590612163069,-0.10077753222764521,-0.29748863029198397,-0.4822079676886578,-0.6474895116647412,-0.7866707665269359,-0.8941413387079006,-0.9655690916176158,-0.9980747739815216,-0.9903480824012647,-0.9427004796581014,-0.8570526396545063,-0.736857025088027,-0.5869587187498023,-0.4134001183352862,-0.22317736751540598,-0.02395834152677535,0.1762264447240826,0.369307546553821,0.5475018686545894,0.7036264015079886,0.8313877683537738,0.9256359110795359,0.9825716889589626,0.9999000219378035,0.9769224052642929,0.9145650662015987,0.8153416278256351,0.6832517849296387,0.5236200764079932,0.3428812532013091,0.14832089361588152,-0.05221827819002462,-0.2506525322587303,-0.43898298782373185,-0.6096180480319383,-0.7556794170590232,-0.8712793640748272,-0.9517580575542547,-0.9938714029915101,-0.9959218122841615,-0.9578266334751091,-0.8811214824513343,-0.7688983422985175,-0.6256809255255152,-0.45724232330464054,-0.27037229228319465,-0.07260355963052474,0.1280918210418479,0.32362382299983006,0.5061105552008355,0.6681959811623759,0.8033464406434523,0.9061140213571652,0.9723561642042569,0.9994026497469005,0.9861632347001454,0.9331715996166475,0.842563836234392,0.717992341661921,0.5644785903248951,0.3882107184335692,0.19629408033723986,-0.0035351681656702054,-0.20322191411140833,-0.3947167888113021,-0.5703006377408543,-0.7228956795025328,-0.846350811050562,-0.9356895585301619,-0.9873106788381578,-0.9991333256594045,-0.9706809283397838,-0.9031004024395128,-0.7991159175902477,-0.6629190862721847,-0.49999999999997624,-0.31692592384486273,-0.12107657011213468,0.07965337771195352,0.2771724994921225,0.4635188034261214,0.6311806737727959,0.7733996639309955,0.8844429292851281,0.959834318055555,0.99653480488645,0.9930649938962364,0.9495647530957377,0.86778757631141,0.7510298998847591,0.6039982233901171,0.43261939073191646,0.2438016791868757,0.0451563268869452,-0.15530927603616132,-0.3495143651847205,-0.5296305373447555,-0.6883973132610063,-0.8194148074086854,-0.9174017072497783,-0.9784081628343132,-0.9999750051720798,-0.9812328752848499,-0.9229372680491266,-0.8274380782130618,-0.6985848761865658,-0.5415717319362321,-0.36272784212961473,-0.1692624003461778,0.031026005370306083,0.23006375343814825,0.4198276362599507,0.5926682755589048,0.7416184686621645,0.8606740362995399,0.9450358509484983,0.9913032895676097,0.997611312642258,0.9637056438899441,0.8909530201320197,0.7822860981601631,0.642085239400174,0.47600193763189885,0.2907310073891462,0.09374071612113023,-0.10702826151692495,-0.3034829320988422,-0.4877042118285768,-0.652266144647652,-0.790535242373965,-0.8969378804758265,-0.967184970764344,-0.9984448544513699,-0.9894574462579665,-0.9405850284265783,-0.8537976471311075,-0.7325936999554803,-0.5818589155579746,-0.40766941004760543,-0.21704675886704433,-0.01767495722827566,0.18240932157878567,0.37514068432381864,0.5527501336744005,0.7080782363208983,0.8348637195884734,0.9279958632121268,0.983720512366742,0.9997914075724285,0.9755607313686322,0.9120052218228818,0.8116868002389144,0.6786493001609646,0.518255460525346,0.33697075376227564,0.14210276273336112,-0.058493387786028646,-0.25673167102737343,-0.4446211058043063,-0.6145878728026739,-0.7597806150839336,-0.8743466161445848,-0.9536677227999357,-0.9945465028457351,-0.9953351334854548,-0.9560018250339819,-0.8781321023590981,-0.7648648924062563,-0.6207659941167462,-0.4516440311649519,-0.26431630645556087,-0.06633399678101354,0.1343222349615762,0.32956394013068346,0.5115209295415669,0.672858520632646,0.8070731983717213,0.9087547718147294,0.9738044587935917,0.9996001077424403,0.9851018965740819,0.9308942478873691,0.839162270903995,0.7136036797600671,0.559279738724095,0.38241124273661803,0.1901277572921352,-0.009819774201806346,-0.20937147079636612,-0.40048340763948886,-0.575451866424043,-0.7272238721167732,-0.849681498239074,-0.9378884803598285,-0.988289196814488,-0.998851995742577,-0.9691510909330437,-0.9003837252578004,-0.7953219098357406,-0.6582006843207235,-0.4945474025388512,-0.3109589249672107,-0.1148356994220762,0.0859165508431232,0.2832055066823259,0.4690784542774862,0.6360428588720521,0.7773683886952094,0.887358214499287,0.9615786486317156,0.997037866894351,0.9923065089165345,0.9475752956425991,0.8646473413745228,0.7468654702709655,0.5989774671727837,0.42694469449256034,0.23770178981618426,0.03887713080191779,-0.161514664568223,-0.35539580707781554,-0.5349509517951703,-0.6929422344698034,-0.8230010296939808,-0.9198846700637515,-0.9796877779961942,-0.999999691420608,-0.980001637517823,-0.9204997374360427,-0.8238925115636028,-0.6940741952206708,-0.5362777621122394,-0.35686398326409313,-0.16306502447140322,0.037307082158272074,0.23617534106107396,0.4255233767444178,0.5977185737212777,0.7458197470856538,0.8638569415358461,0.9470720801520616,0.9921107623803705,0.9971574798514866,0.9620087994862461,0.8880815638790266,0.7783557784012303,0.6372544872453096,0.4704654806027703,0.284712019956475,0.08748182354664592,-0.11327476340024167,-0.30946524692652055,-0.4931811926108532,-0.657017014400111,-0.7943684936329298,-0.8996989949606533,-0.968762648006032,-0.998775498312204,-0.9885277284906154,-0.9384324259354353,-0.8505089312790048,-0.7283014388119308,-0.5767361300827489,-0.4019225996196465,-0.21090757729837595,-0.011390874803653887,0.188584993623865,0.3809590047742863,0.55797656615057,0.7125021034353268,0.8383066953474478,0.9303191613323876,0.9848304807480611,0.9996433034118337,0.9741605247418559,0.9094093550306679,0.8079999126191573,0.6740200100790583,0.5128703745707412,0.3310469446409361,0.13587901907105707,-0.06476618700825762,-0.26280066939974667,-0.45024166212518263,-0.61953342256054,-0.7638518032681182,-0.8773793332417593,-0.9555397200452943,-0.995182320068162,-0.9947091409055963,-0.9541392564000486,-0.8751080377750698,-0.7608012318542727,-0.615826543671461,-0.44602789997397146,-0.2582498806533578,-0.060061813869084955,0.14054734341701652,0.33549104013380915,0.516911099811027,0.6774944835141343,0.8107680782951914,0.9113596282452048,0.9752142900211127,0.9997580834987272,0.9840016488596081,0.9285801276652215,0.8357275603135456,0.7091868319157378,0.5540587966730424,0.3765966625473194,0.1839539245743131,-0.01610399237616513,-0.21551275771969686,-0.40623420816034045,-0.5805803658897725,-0.731523340817596,-0.8529786246787314,-0.9400503574381743,-0.9892286793102967,-0.9985312131354466,-0.9675829739633739,-0.8976314846888815,-0.7914964884292657,-0.6534562847362022,-0.4890752714274039,-0.3049796438233025,-0.10859029294768995,0.09217633043942856,0.28922732781162913,0.4746195774520172,0.640879921528754,0.7813064089361776,0.890238450808334,0.963284998741502,0.9975015478664779,0.9915088297803901,0.945548410828017,0.8614729545674245,0.742671540939202,0.5939330525229614,0.4212531347771071,0.23159251169201178,0.03259639914676162,-0.16771367358865047,-0.3612632115352179,-0.5402502367345426,-0.6974597858225593,-0.8265547450564186,-0.9223312992415582,-0.9809286974167285,-0.9999848796471148,-0.9787316916126034,-0.9180258488928403,-0.8203144027795374,-0.6895360996883875,-0.5309626103708531,-0.35098602897280556,-0.1568612078487138,0.04358668538988753,0.24227760022229913,0.4312023098920449,0.6027452631749325,0.7499915670951832,0.8670057261211811,0.9490709018701861,0.9928790487683065,0.9966642613004635,0.9602739576261077,0.8851750301499908,0.7743947151191348,0.6323985647909517,0.4649104411119444,0.2786817869588088,0.0812194756121025,-0.11951679115313503,-0.3154353384852352,-0.49863869370556185,-0.6617419332720162,-0.7981703688979586,-0.9024245731038238,-0.9703020610275079,-0.9990666925042356,-0.987558965821228,-0.9362427572082299,-0.8471866219960691,-0.7239804111931973,-0.571590564664174,-0.39615991403909845,-0.2047600652949489,-0.005106342461926283,0.1947532169324706,0.38676227809295083,0.5631809596491474,0.7168978281173797,0.8417165596398605,0.9326057136745676,0.985901550261371,0.9994557153058471,0.9727218406893227,0.9067775683566384,0.8042811105912439,0.6693640975317364,0.5074650312445854,0.3251100598160523,0.12964990845455307,-0.07103642809341651,-0.2688592876621801,-0.455844434785486,-0.6244545019660882,-0.7678928208076831,-0.8803773955800422,-0.957373975350069,-0.9957788295452668,-0.994043859270056,-0.9522390011411426,-0.872049408143801,-0.7567075211492437,-0.6108627692883765,-0.4403941515576379,-0.252173254488589,-0.053787258633520754,0.1467669005286786,0.34140488890024767,0.522280853108281,0.6821036866953358,0.8144309344733358,0.913928487761907,0.9765856022012325,0.9998765707760314,0.9828625350143354,0.9262293303534463,0.8322598401273295,0.704741972585581,0.5488159703886849,0.3707672075301076,0.17777282603808514,-0.022387574474368472,-0.22164553231286171,-0.41196896322859305,-0.5856859335723024,-0.7357939157845168,-0.8562420601394324,-0.9421751043753825,-0.990129089217906,-0.9981709905083036,-0.9659766393682836,-0.894843789440898,-0.7876398044674146,-0.6486860749129062,-0.4835838228041547,-0.2989883165830436,-0.10234059737019809,0.09843246925188097,0.2952377250301531,0.4801419540862917,0.6456916706883474,0.7852135691098779,0.8930835244486223,0.9649533009874549,0.9979258294883473,0.9906719879945678,0.9434841787099946,0.8582645412720388,0.7384482775415462,0.5888651786850668,0.41554493639087403,0.22547408611900058,0.02631437999780323,-0.17390605824866112,-0.36711634680587946,-0.5455281828516307,-0.7019497888847944,-0.8300758131312606,-0.924741498146177,-0.9821308720820042,-0.9999305704366364,-0.9774230877295471,-0.9155157001332537,-0.816703893189096,-0.6849707688356499,-0.5256264866501665,-0.34509421142333874,-0.1506511955166145,0.04986456703305559,0.2483702898946377,0.4368642113960334,0.6077481453755632,0.7541337639122143,0.8701202656846577,0.9510322371533793,0.993608118385608,0.9961316764703619,0.9585011868323092,0.8822335337473325,0.7704030647681259,0.6275176638364037,0.459337038572712,0.2726405465782787,0.07495391966787623,-0.1257540982276664,-0.3213929709681596,-0.5040764995520391,-0.6664407146384035,-0.8019407180024859,-0.9051145072503343,-0.9718031490249568,-0.9993184255258696,-0.9865511965140251,-0.934016108732552,-0.8438308505069257,-0.7196307877714944,-0.5664224225419223,-0.39038158092066105,-0.1986044656715137,0.0011783915703474093,0.2009137478717957,0.39255027506181966,0.5683631086070088,0.7212652367444533,0.8450931777828365,0.9348554299243653,0.986933678601503,0.9992286506638232,0.9712447360362493,0.9041099657512175,0.8005305410405107,0.6646817464183494,0.5020396440472656,0.3191603337828503,0.12341567692158609,-0.07730386337919509,-0.2749072865113816,-0.4614292024867102,-0.6293509166464,-0.7719035080903422,-0.8833406847417837,-0.9591704162648472,-0.9963360077161022,-0.9933393148561629,-0.9503011343135767,-0.8689563342752332,-0.7525839219846581,-0.6058748670266436,-0.43474300843809155,-0.2460866679759328,-0.047510578907031774,0.15298066063628288,0.3473052528448122,0.5276299773385319,0.6866859481217445,0.8180616222305696,0.9164612488999352,0.9779183411698286,0.9999555648943388,0.9816846000310422,0.9238419488038955,0.8287592473134454,0.7002692773329225,0.5435514669523068,0.364923107937049,0.17158470582480476,-0.028670272307503023,-0.2277695523431535,-0.4176874463325911,-0.5907683678118382,-0.7400354283381043,-0.8594716757220096,-0.9442626372480867,-0.9909903909728698,-0.9977713420892274,-0.9643321505948609,-0.8920207496223075,-0.7837520102815869,-0.6438902432648754,-0.478073273570579,-0.29298517989202816,-0.09608685954029032,0.1046847201753521,0.3012364609389138,0.48564536605718844,0.6504779162962436,0.7890897148911992,0.8958933230452845,0.96658348947493,0.9983106950016581,0.9897960166126893,0.9413826808215683,0.8550222282144703,0.7341958468885239,0.5837740458301995,0.4098203247966314,0.21934675476271182,0.020031321482563483,-0.18009157396117786,-0.3729549817025162,-0.5507845816777952,-0.7064120663102551,-0.8335640948432708,-0.9271151715794456,-0.9832942545084967,-0.9998367659342804,-0.976075877555935,-0.9129693903032009,-0.8130611254003423,-0.6803783829841353,-0.5202696017165291,-0.3391887633309038,-0.1444352327584972,0.05614047912390592,0.25445316942865936,0.4425088576224554,0.6127270227192022,0.7582461739280025,0.8732004372081421,0.9529560085327176,0.9942979424354463,0.9955597463972166,0.9566905571258597,0.8792571908544043,0.7663809850105101,0.6226119771677913,0.45374549312331564,0.2665885374321129,0.06868540319122349,-0.13198643826252404,-0.32733790906057586,-0.5094943953676931,-0.6711131729066879,-0.8056793920250657,-0.9077686911530259,-0.9732658527084078,-0.9995306874341464,-0.9855044603739037,-0.931752568456659,-0.8404417493580435,-0.7152527403482392,-0.5612319078474013,-0.3845878284972381,-0.19244102156204362,0.007463079058356859,0.20706634311303426,0.3983227670665999,0.5735228083393161,0.7256041568125713,0.8484364164065361,0.9370682212224115,0.987926825001454,0.9989621184543719,0.9697292691253798,0.9014066525794407,0.7967483521070822,0.6599731416826465,0.49659442727086167,0.3131980015439202,0.11717657071199013,-0.08356824531444677,-0.28094442706312134,-0.46699574464155985,-0.634222473202676,-0.7758837067017605,-0.8862690836829945,-0.9609289718336952,-0.9968538325732161,-0.9925955354920235,-0.948325732459334,-0.8658289383395916,-0.7484305972345391,-0.6008630338987315,-0.42907469382427443,-0.23999036152370146,-0.04123202260607184,0.1591883783085761,0.35319189891461855,0.5329582612218398,0.6912410868030834,0.8216599981618634,0.9189578116202254,0.979212454286343,0.9999950627335356,0.9804678904358344,0.921418077313425,0.8252259201384914,0.6957689228203515,0.5382654943014924,0.3590645945986953,0.16538980835283199,-0.03495183772118436,-0.23388457592393033,-0.4233894316035452,-0.5958274678620807,-0.744247710947104,-0.8626673438629368,-0.9463128736028233,-0.9918125505554701,-0.997332283663552,-0.9626495725971651,-0.8891624767376072,-0.7798332594320807,-0.6390689792179894,-0.4725438413824894,-0.2869704708623546,-0.08982932646826078,0.11093283625816452,0.30722329859952696,0.4911295959908032,0.6552384693051927,0.7929346931799324,0.8986677356168504,0.9681754998146429,0.9986561292049931,0.9888809502338706,0.9392440001678299,0.8517461434596526,0.7299144169428634,0.5786598550481921,0.40407952610507675,0.21321075964079966,0.013747471769559387,-0.18626997641054555,-0.3787788856105272,-0.5560192255958057,-0.710846441847795,-0.8370194524121157,-0.9294522257859514,-0.9844187987448971,-0.9997034698451401,-0.9746901143039077,-0.9103870199769376,-0.8093862432955097,-0.6757591235238914,-0.5148921671563652,-0.33326991794903793,-0.13821356509255914,0.0624141737760778,0.2605259985628003,0.4481360256189321,0.6176816985498921,0.7623286347105109,0.8762461190308583,0.9548421400230312,0.9949484936711526,0.9949484936711558,0.9548421400230406,0.8762461190308733,0.7623286347105312,0.6176816985499167,0.44813602561890936,0.26052599856283054,0.06241417377616582,-0.13821356509258437,-0.33326991794900834,-0.5148921671563383,-0.6757591235238684,-0.8093862432954578,-0.9103870199769482,-0.9746901143039007,-0.9997034698451394,-0.9844187987448927,-0.929452225785984,-0.8370194524121328,-0.7108464418477771,-0.5560192255958318,-0.37877888561055617,-0.1862699764106322,0.01374747176952804,0.21321075964082456,0.40407952610504805,0.5786598550481665,0.729914416942842,0.8517461434596362,0.9392440001678192,0.9888809502338743,0.9986561292049948,0.968175499814665,0.8986677356168642,0.7929346931799515,0.6552384693051735,0.49112959599088,0.3072232985996109,0.1109328362581392,-0.08982932646822955,-0.2869704708623246,-0.4725438413825118,-0.6390689792179216,-0.7798332594320612,-0.8891624767375927,-0.9626495725971566,-0.9973322836635496,-0.9918125505554815,-0.9463128736028336,-0.8626673438629239,-0.7442477109471248,-0.5958274678621516,-0.4233894316035736,-0.2338845759239608,-0.03495183772121569,0.16538980835280107,0.35906459459861295,0.5382654943015138,0.695768922820329,0.8252259201384737,0.921418077313435,0.9804678904358171,0.9999950627335357,0.9792124542863377,0.9189578116202377,0.8216599981618813,0.6912410868031471,0.5329582612218663,0.35319189891459474,0.15918837830860705,-0.041232022606040516,-0.239990361523671,-0.4290746938242461,-0.6008630338987064,-0.748430597234556,-0.865828938339576,-0.9483257324593061,-0.9925955354920197,-0.9968538325732186,-0.9609289718337038,-0.8862690836830089,-0.7758837067018163,-0.6342224732026563,-0.46699574464158755,-0.2809444270631514,-0.08356824531442136,0.11717657071190254,0.31319800154389044,0.4965944272708344,0.659973141682623,0.7967483521070632,0.9014066525794026,0.9697292691253722,0.9989621184543731,0.9879268250014589,0.9370682212224225,0.8484364164065527,0.7256041568125929,0.5735228083393419,0.39832276706662867,0.20706634311306493,0.007463079058445051,-0.19244102156201284,-0.3845878284972092,-0.5612319078474224,-0.7152527403482172,-0.8404417493579958,-0.9317525684566682,-0.9855044603738984,-0.9995306874341473,-0.973265852708415,-0.9077686911530629,-0.8056793920250843,-0.6711131729067111,-0.5094943953677201,-0.32733790906055177,-0.13198643826261147,0.06868540319119221,0.26658853743213745,0.4537454931232877,0.6226119771677667,0.7663809850104535,0.8792571908543895,0.9566905571258506,0.9955597463972136,0.9942979424354497,0.9529560085327271,0.8732004372081574,0.758246173928023,0.6127270227191821,0.44250885762248354,0.25445316942874463,0.05614047912393722,-0.14443523275846618,-0.33918876333087433,-0.5202696017164539,-0.6803783829840707,-0.8130611254003571,-0.9129693903031881,-0.9760758775559281,-0.9998367659342798,-0.9832942545085128,-0.9271151715794573,-0.8335640948432881,-0.7064120663102773,-0.5507845816778688,-0.372954981702598,-0.1800915739612087,0.02003132148258897,0.21934675476268123,0.40982032479655095,0.5837740458302203,0.7341958468885027,0.8550222282144541,0.9413826808215577,0.9897960166126768,0.9983106950016633,0.9665834894749381,0.8958933230452985,0.7890897148911835,0.6504779162963107,0.4856453660572158,0.3012364609388895,0.10468472017538329,-0.09608685954025911,-0.29298517989194384,-0.47807327357055146,-0.6438902432648514,-0.7837520102815674,-0.8920207496222933,-0.9643321505948526,-0.9977713420892252,-0.990990390972874,-0.9442626372480782,-0.8594716757220255,-0.7400354283381636,-0.5907683678118176,-0.41768744633261956,-0.22776955234318402,-0.02867027230753436,0.17158470582471788,0.3649231079370727,0.5435514669522805,0.7002692773329001,0.8287592473134596,0.9238419488038617,0.9816846000310362,0.9999555648943385,0.9779183411698351,0.9164612488999477,0.8180616222306203,0.6866859481217673,0.5276299773385102,0.34730525284484154,0.15298066063631385,-0.04751057890700046,-0.2460866679759024,-0.4347430084380633,-0.6058748670266638,-0.7525839219846374,-0.8689563342751896,-0.9503011343135669,-0.9933393148561592,-0.9963360077161001,-0.9591704162648561,-0.8833406847418251,-0.771903508090326,-0.6293509166464243,-0.461429202486738,-0.27490728651135704,-0.07730386337928302,0.12341567692155499,0.3191603337828206,0.5020396440472386,0.6646817464183684,0.8005305410404578,0.9041099657512042,0.9712447360362553,0.9992286506638219,0.9869336786015082,0.9348554299243765,0.8450931777828533,0.7212652367444751,0.5683631086070345,0.3925502750618485,0.2009137478718264,0.00117839157037876,-0.198604465671483,-0.39038158092068453,-0.5664224225418496,-0.7196307877714331,-0.8438308505069394,-0.9340161087325408,-0.98655119651402,-0.9993184255258728,-0.9718031490249776,-0.9051145072503235,-0.8019407180025047,-0.6664407146384269,-0.5040764995520662,-0.3213929709682431,-0.1257540982276975,0.07495391966790166,0.27264054657824854,0.4593370385726337,0.6275176638363793,0.7704030647681059,0.8822335337473445,0.9585011868323002,0.9961316764703542,0.9936081183856051,0.9510322371533889,0.8701202656846732,0.7541337639121976,0.6077481453756333,0.4368642113960616,0.24837028989466806,0.04986456703308691,-0.1506511955166397,-0.34509421142325597,-0.5256264866501399,-0.6849707688356684,-0.8167038931890779,-0.915515700133241,-0.9774230877295405,-0.9999305704366359,-0.9821308720820101,-0.9247414981461889,-0.830075813131278,-0.7019497888848167,-0.5455281828516569,-0.3671163468059086,-0.17390605824863603,0.026314379997771892,0.22547408611891465,0.4155449363908972,0.5888651786850414,0.7384482775415251,0.8582645412720227,0.9434841787099654,0.9906719879945713,0.9979258294883493,0.9649533009874631,0.8930835244486108,0.7852135691099326,0.6456916706883714,0.4801419540862693,0.29523772503018303,0.09843246925191217,-0.10234059737011035,-0.29898831658301367,-0.483583822804177,-0.6486860749128823,-0.7876398044673952,-0.894843789440884,-0.9659766393682755,-0.9981709905083017,-0.9901290892179024,-0.9421751043753931,-0.856242060139478,-0.7357939157845381,-0.5856859335723278,-0.41196896322856985,-0.2216455323128923,-0.022387574474456644,0.17777282603811023,0.3707672075300785,0.5488159703886587,0.7047419725855991,0.8322598401272806,0.9262293303534346,0.9828625350143296,0.9998765707760319,0.976585602201227,0.9139284877619429,0.814430934473354,0.6821036866953173,0.5222808531083077,0.34140488890027715,0.14676690052870964,-0.053787258633489446,-0.2521732544885587,-0.44039415155760975,-0.6108627692883066,-0.7567075211492232,-0.8720494081437857,-0.952239001141133,-0.9940438592700588,-0.9957788295452747,-0.9573739753500944,-0.8803773955800301,-0.7678928208077032,-0.6244545019661127,-0.45584443478556447,-0.2688592876622651,-0.07103642809339109,0.12964990845452198,0.32511005981602265,0.5074650312445583,0.6693640975316709,0.8042811105912253,0.906777568356649,0.9727218406893153,0.9994557153058442,0.9859015502613763,0.9326057136745789,0.8417165596398773,0.7168978281174015,0.5631809596492203,0.3867622780929273,0.19475321693250136,-0.005106342461894932,-0.20476006529497384,-0.39615991403901746,-0.5715905646641483,-0.7239804111931757,-0.8471866219960524,-0.9362427572082188,-0.9875589658212142,-0.999066692504237,-0.9703020610275017,-0.9024245731038374,-0.7981703688979774,-0.6617419332720397,-0.498638693705589,-0.31543533848526495,-0.11951679115316616,0.08121947561207125,0.2786817869587241,0.46491044111191665,0.6323985647909274,0.7743947151191509,0.8851750301499762,0.960273957626083,0.9966642613004656,0.9928790487683101,0.9490709018701959,0.8670057261211968,0.7499915670952416,0.6027452631749576,0.43120230989207314,0.24227760022232953,0.04358668538986206,-0.1568612078486267,-0.3509860289727762,-0.5309626103708747,-0.6895360996883648,-0.8203144027795194,-0.9180258488928054,-0.978731691612597,-0.9999848796471147,-0.9809286974167346,-0.9223312992415703,-0.8265547450564362,-0.6974597858225817,-0.5402502367345691,-0.36126321153519414,-0.1677136735886814,0.03259639914667347,0.2315925116919813,0.42125313477707865,0.5939330525229362,0.7426715409391811,0.8614729545673797,0.9455484108280252,0.991508829780386,0.9975015478664802,0.9632849987414951,0.890238450808374,0.7813064089361972,0.6408799215287779,0.47461957745204486,0.2892273278116591,0.09217633043951638,-0.10859029294765879,-0.3049796438233268,-0.4890752714273766,-0.6534562847361784,-0.7914964884292466,-0.8976314846888677,-0.9675829739633659,-0.9985312131354448,-0.9892286793103096,-0.9400503574382044,-0.8529786246787477,-0.7315233408176173,-0.5805803658897517,-0.40623420816042105,-0.21551275771978298,-0.01610399237613964,0.18395392457428228,0.37659666254729035,0.5540587966729689,0.7091868319156758,0.8357275603135284,0.9285801276652099,0.9840016488596025,0.999758083498728,0.9752142900211197,0.9113596282452178,0.8107680782951765,0.6774944835141573,0.5169110998111025,0.3354910401337851,0.14054734341704758,-0.06006181386905366,-0.2582498806533275,-0.4460278999738925,-0.6158265436714809,-0.7608012318542524,-0.8751080377750546,-0.9541392564000563,-0.9947091409055872,-0.9951823200681651,-0.9555397200452868,-0.8773793332417744,-0.7638518032681384,-0.6195334225606093,-0.4502416621252106,-0.2628006693997221,-0.06476618700828891,0.13587901907102598,0.3310469446409065,0.5128703745707143,0.6740200100790351,0.8079999126191724,0.9094093550306548,0.974160524741836,0.9996433034118328,0.9848304807480666,0.9303191613323782,0.8383066953474649,0.7125021034353888,0.5579765661505488,0.38095900477431527,0.1885849936238958,-0.011390874803679379,-0.21090757729828974,-0.4019225996196178,-0.5767361300827234,-0.7283014388119092,-0.8505089312790183,-0.9384324259354049,-0.9885277284906108,-0.9987754983122028,-0.9687626480060397,-0.899698994960667,-0.7943684936329488,-0.6570170144001346,-0.49318119261088045,-0.30946524692655036,-0.11327476340027282,0.0874818235466147,0.28471201995644496,0.4704654806027426,0.6372544872453293,0.7783557784012106,0.8880815638789861,0.9620087994862531,0.9971574798514843,0.9921107623803744,0.9470720801520717,0.8638569415358905,0.7458197470856368,0.5977185737213028,0.4255233767444462,0.2361753410610492,0.037307082158360205,-0.16306502447137228,-0.35686398326411695,-0.536277762112213,-0.6940741952206483,-0.8238925115635528,-0.9204997374360305,-0.9800016375178281,-0.999999691420608,-0.9796877779962119,-0.9198846700637637,-0.8230010296939986,-0.6929422344698261,-0.5349509517951487,-0.355395807077898,-0.16151466456831,0.03887713080188646,0.2377017898161538,0.4269446944925834,0.598977467172713,0.7468654702709069,0.8646473413745357,0.9475752956425891,0.9923065089165306,0.9970378668943535,0.9615786486317242,0.8873582144993014,0.7773683886952291,0.6360428588720763,0.4690784542775139,0.28320550668235595,0.08591655084315444,-0.11483569942210152,-0.3109589249671809,-0.49454740253877455,-0.6582006843207426,-0.7953219098357216,-0.9003837252577868,-0.969151090933036,-0.9988519957425728,-0.9882891968144754,-0.9378884803598198,-0.8496814982390906,-0.7272238721167947,-0.5754518664241152,-0.4004834076394655,-0.2093714707963412,-0.009819774201837696,0.19012775729204862,0.38241124273653654,0.5592797387241161,0.7136036797600849,0.839162270903978,0.9308942478873369,0.9851018965740863,0.9996001077424397,0.9738044587935988,0.9087547718147425,0.8070731983717734,0.6728585206326692,0.5115209295415449,0.32956394013071305,0.13432223496160725,-0.06633399678092554,-0.2643163064555306,-0.45164403116497465,-0.6207659941167216,-0.7648648924061996,-0.8781321023591103,-0.9560018250339727,-0.9953351334854518,-0.9945465028457384,-0.9536677227999623,-0.8743466161445723,-0.759780615083954,-0.6145878728026987,-0.4446211058043344,-0.2567316710274587,-0.05849338778605994,0.14210276273333008,0.33697075376224617,0.5182554605252706,0.6786493001608999,0.8116868002388961,0.9120052218228456,0.9755607313686253,0.9997914075724266,0.9837205123667373,0.9279958632121384,0.834863719588522,0.7080782363208401,0.552750133674474,0.37514068432384773,0.1824093215788165,-0.01767495722818748,-0.2170467588670692,-0.40766941004752494,-0.5818589155579491,-0.732593699955459,-0.8537976471310615,-0.9405850284265869,-0.9894574462579536,-0.9984448544513715,-0.9671849707643664,-0.8969378804758152,-0.7905352423739493,-0.6522661446477619,-0.4877042118286042,-0.3034829320989262,-0.10702826151689959,0.09374071612115562,0.2907310073890074,0.4760019376318713,0.6420852394001064,0.7822860981601436,0.8909530201320313,0.9637056438899357,0.997611312642252,0.9913032895676214,0.9450358509485085,0.8606740362995269,0.7416184686621855,0.5926682755589758,0.4198276362600307,0.23006375343812346,0.03102600537033742,-0.16926240034614687,-0.3627278421296385,-0.5415717319361101,-0.6985848761865842,-0.8274380782130443,-0.9229372680491145,-0.9812328752848548,-0.9999750051720808,-0.978408162834308,-0.9174017072497908,-0.8194148074087361,-0.6883973132609879,-0.529630537344782,-0.3495143651847499,-0.1553092760361923,0.0451563268868571,0.24380167918690043,0.43261939073188815,0.6039982233900921,0.7510298998847384,0.8677875763113662,0.9495647530957279,0.9930649938962327,0.9965348048864431,0.9598343180555797,0.8844429292851692,0.7733996639310153,0.6311806737728202,0.4635188034260484,0.27717249949220724,0.07965337771204144,-0.12107657011210357,-0.3169259238447791,-0.5000000000000475,-0.6629190862722038,-0.7991159175901605,-0.9031004024394994,-0.9706809283397627,-0.9991333256594078,-0.9873106788381537,-0.9356895585302131,-0.8463508110505786,-0.7228956795025937,-0.5703006377408333,-0.3947167888112787,-0.20322191411143903,-0.0035351681657583996,0.19629408033715337,0.38821071843359267,0.5644785903249161,0.7179923416618992,0.8425638362343445,0.9331715996166159,0.9861632347001498,0.9994026497469016,0.9723561642042642,0.9061140213571545,0.8033464406435387,0.6681959811623569,0.5061105552008625,0.3236238229998597,0.12809182104182262,-0.07260355963038008,-0.27037229228316445,-0.4572423233046127,-0.6256809255254908,-0.7688983422985338,-0.8811214824513195,-0.9578266334751001,-0.9959218122841587,-0.9938714029915199,-0.9517580575542469,-0.8712793640748426,-0.7556794170590437,-0.6096180480320083,-0.43898298782381107,-0.2506525322587056,-0.05221827819005593,0.14832089361596296,0.34288125320122625,0.5236200764079181,0.6832517849296158,0.815341627825617,0.914565066201632,0.976922405264274,0.9999000219378023,0.9825716889589685,0.9256359110795478,0.8313877683537597,0.7036264015079705,0.5475018686546632,0.36930754655385006,0.17622644472411347,-0.023958341526800837,-0.22317736751543085,-0.41340011833518003,-0.5869587187497769,-0.7368570250879866,-0.8570526396545194,-0.9427004796581004,-0.9903480824012603,-0.9980747739815234,-0.9655690916176314,-0.8941413387079018,-0.7866707665269377,-0.6474895116647651,-0.48220796768868524,-0.2974886302920681,-0.10077753222764813,0.09999590612162777,0.29673851151845754,0.48151959352028345,0.6468906304501765,0.7861855191559044,0.8937892854921826,0.9653644238151285,0.9980257417472728,0.9904566622236183,0.942962294686632,0.8574571361306633,0.737387897767089,0.5875945681647343,0.4141153134091215,0.22394307874930494,0.024743703116149946,-0.1754530906888423,-0.36857737395838996,-0.5468443107413558,-0.7030679644231016,-0.8309509626849844,-0.9253383444544122,-0.9824253562821953,-0.9999108218765898,-0.9770899024733295,-0.9148825088718013,-0.8157962198493791,-0.683825201711562,-0.5242892035293333,-0.3436191181613023,-0.1490977530929767,0.0514337393856836,0.2498919388705271,0.43827699935569836,0.608995122864936,0.7551646652939669,0.8708935353448499,0.9515167046077471,0.9937842547608342,0.9959923817127377,0.9580520759106731,0.8814927103139341,0.7694003914004541,0.6262935582777193,0.4579408444932302,0.2711285445330824,0.0733870584289207,-0.12731265851559742,-0.3228804047713955,-0.5054328484440191,-0.6676113042228746,-0.8028783618368518,-0.9057814089306222,-0.9721724257579758,-0.9993751917739573,-0.9862931640308644,-0.9334536788023343,-0.842986694668718,-0.7185389339301141,-0.5651268833036394,-0.3889345794458646,-0.19706433056042125,0.002749577502627728,0.20245265015195793,0.3939948605702023,0.5696551461310453,0.7223526442776407,0.8459321219495448,0.9354120929021705,0.9871856213170151,0.9991657173113153,0.9708694634578924,0.903437481177001,0.7995879523100413,0.6635070492644075,0.5006801904881572,0.31767092336417463,0.12185634774702127,-0.07887025478206598,-0.2764175989367485,-0.462822555271323,-0.6305711437676598,-0.7729014222177676,-0.8840760599770725,-0.9596136096470922,-0.996469154129064,-0.9931570471706266,-0.9498107997362498,-0.868177698182985,-0.7515483711826673,-0.6046241445467117,-0.4333275308782175,-0.24456349320776866,-0.04594110607471363,0.15453316611464102,0.34877820950484434,0.5289640103269716,0.6878272825958738,0.81896425102083,0.9170887870580552,0.9782454926453636,0.9999691422179066,0.9813840559010163,0.9232393981480761,0.8278789789366083,0.6991467748354236,0.5422319783872191,0.36345982186163917,0.17003660727126818,-0.030240779517793668,-0.22929916109649567,-0.4191144981309224,-0.592035338226144,-0.7410912458165301,-0.8602737802833801,-0.9447786960738196,-0.991199601742113,-0.9976652715201018,-0.9639150743898542,-0.8913094801148561,-0.7827752187310786,-0.6426873041189727,-0.47669267728186276,-0.29148257826900525,-0.0945228224240944,0.1062471464803792,0.3027342950599197,0.48701823033121844,0.6516704705920818,0.7900538873692754,0.8965902479325598,0.9669850737432855,0.9984007507973967,0.9895709137884717,0.9408514932677063,0.8542063680905042,0.7331282014995811,0.5824976519402298,0.4083866338174999,0.21781355874887956,0.01846042353421667,-0.1816368509793596,-0.37441234770541615,-0.5520952902712131,-0.7075232828572707,-0.8344310262274371,-0.9277028718141258,-0.9835790334092056,-0.9998071440692511,-0.9757330489819578,-0.9123271744331328,-0.8121454099429566,-0.679226080410926,-0.518927161320988,-0.3377102988581707,-0.14288034108149644,0.05770912035302585,0.25597232831380373,0.44391729689959497,0.6139679682295839,0.759269603183337,0.8739650957957376,0.9534310730804515,0.9944642631009447,0.9954106187978582,0.9562319925921301,0.8785076741134175,0.7653707290668398,0.6213817054182286,0.45234479779716974,0.26507388052953973,0.06711784050136894,-0.13354371831946266,-0.32882213255684617,-0.510845733284151,-0.672277152839413,-0.8066090939664733,-0.9084266388367168,-0.9736255242764852,-0.999577584532999,-0.9852366925824421,-0.9311809294891579,-0.8395892819696141,-0.7141538074821621,-0.5599308074652886,-0.3831370079291265,-0.19089896335573361,0.009034214567993911,0.20860322348517227,0.3997634406845399,0.5748092016787252,0.7266844153839276,0.8492669950087927,0.9376156392488393,0.9881690160424754,0.9988893197940409,0.9693444152762406,0.9007252569923596,0.7957978818243182,0.6587919101421582,0.4952300498920613,0.31170547635149126,0.11561606136614093,-0.08513383471361705,-0.2824519876385538,-0.468384506657013,-0.6354364556893086,-0.7768739740501147,-0.8869957182363651,-0.961362682967903,-0.9969771374012212,-0.9924034635986952,-0.9478260262588288,-0.8650417409787051,-0.7473876406230162,-0.5996063595963603,-0.42765495834688283,-0.23846479437961074,-0.03966211937599198,0.1607393348571499,0.35466138975470524,0.534287051207353,0.6923756124365938,0.8225545267380403,0.9195762847102404,0.9795299412524957,0.9999987656826221,0.980157660102052,0.920806419075229,0.8243374899271628,0.6946395332396473,0.5369406710226388,0.3575977412211625,0.16384005370657995,-0.03652202305755626,-0.23541189781145144,-0.42481232372777655,-0.5970885734702854,-0.7452961948977701,-0.863460941789154,-0.9468195955882813,-0.992011970647188,-0.9972163632416718,-0.9622229844115239,-0.8884424165493707,-0.7788487528528519,-0.6378597116880564,-0.4711585584515656,-0.28546501325720314,-0.08826437915464069,0.11249419028581728,0.30871812119183945,0.49249763087933246,0.65642457103136,0.7938910500071058,0.8993557968207025,0.96856752966192,0.9987363249805057,0.9886460792475359,0.938703530064352,0.8509218605779368,0.728839548109213,0.5773777282036353,0.40264182375664526,0.2116754355411703,0.012176414801956777,-0.187813436971435,-0.3802325329006192,-0.5573244631224087,-0.7119506555125291,-0.8378781313846075,-0.9300307567341145,-0.984693861097907,-0.9996639758451336,-0.9743376559532385,-0.9097358048645646,-0.8084625218894153,-0.6746001310153303,-0.513544622509873,-0.3317881406621021,-0.13665728557752876,0.06398222192344469,0.26204260735330004,0.4495400605830142,0.6189165630664194,0.7633445514159468,0.877002136343318,0.9553077828999468,0.995104992057583,0.9947895391203053,0.9543741399896319,0.8754879385867896,0.7613108360941325,0.616445309202791,0.4467308843707099,0.259008746628796,0.06084597155105704,-0.13976950340874797,-0.3347508725143489,-0.5162384407221313,-0.6769164478299706,-0.8103079666225079,-0.9110359876762592,-0.9750401665007032,-0.999740495942415,-0.9841413062214119,-0.9288714003597736,-0.8361587071443919,-0.7097404733627707,-0.5547126154608437,-0.3773243032536372,-0.18472605601726091,0.015318494799530362,0.21474555740101794,0.40551623092871736,0.5799405533929861,0.7309874838843939,0.8525683236911596,0.9397821516209142,0.9891133800343176,0.9985734681122469,0.9677810798956852,0.897977455930656,0.7919763788866354,0.6540507500345907,0.489760348682612,0.3057277175851317,0.10937120837788779,-0.09139405202605225,-0.2884752200420889,-0.47392795777533525,-0.6402766691200048,-0.780815840887802,-0.8898803419084357,-0.9630737843525746,-0.9974457420362995,-0.9916106820408228,-0.945803815516526,-0.8618716163260901,-0.7431973897207684,-0.5945648913735058,-0.4219654942854762,-0.23235667666084678,-0.033381566101408806,0.16693915471191184,0.360530561576861,0.5395889887995083,0.6968965948016884,0.8261123131684788,0.9220274609069186,0.9807757003524994,0.9999888911618817,0.9788925500022987,0.918337069958985,0.8207634412072755,0.6901048547478241,0.5316281555570661,0.35172153617276414,0.15763702878195765,-0.04280182404931632,-0.24151533621932456,-0.4304933700729357,-0.6021182248896179,-0.7494717062443319,-0.8666139982850529,-0.9488230975900026,-0.9927851570295108,-0.9967280668772052,-0.9604928885168385,-0.8855402612549754,-0.7748915239798697,-0.6330069250523395,-0.46560582978430903,-0.2794361729385419,-0.08200244961583288,0.11873679079176609,0.31468975356495527,0.49795757873927343,0.6611527439904759,0.7976968555090849,0.902085822922766,0.9701117290671618,0.9990324510420961,0.9876821951299413,0.9365184899168549,0.8476037433246704,0.7245221069895181,0.572234999181595,0.39688111013526195,0.20552895156986684,0.005891925125362177,-0.19398260470184017,-0.3860376996584407,-0.5625316227529884,-0.7163499075164409,-0.8412921420026201,-0.9323219072674158,-0.9857697953147974,-0.9994813228590969,-0.9729037785024534,-0.9071085025201024,-0.8047477011555277,-0.6699475362406824,-0.5081417996955924,-0.32585287748659597,-0.13042883237953315,0.07025279632187321,0.26810253622492686,0.45514506831764034,0.6238407119157632,0.7673893490392786,0.8800045370305158,0.9571467599399874,0.9957064163231913,0.9941291672114931,0.9524785914847043,0.872433623007614,0.7572208728399044,0.6114845646095315,0.4410993259525984,0.25293338239171753,0.05457169930447933,-0.14598976787751894,-0.3406663904704375,-0.5216107577564223,-0.6815290059515152,-0.8139748337068231,-0.9136093523852421,-0.9764162965550698,-0.9998639195675187,-0.9830070482134425,-0.9265251826359994,-0.8326951056938888,-0.7052991058898829,-0.5494725133985372,-0.3714966950101206,-0.17854585236259646,0.02160216998086253,0.22087940928949115,0.4112530040789332,0.5850489985952447,0.7352616798161375,0.8558359776008307,0.9419115444454152,0.9900186759920386,0.9982181747414559,0.9661795190649572,0.8951941865246285,0.7881235944387767,0.6492837562081237,0.4842713029022556,0.2997378831750322,0.10312203544201759,-0.09765065945320717,-0.2944870582415144,-0.4794526896708689,-0.6450915928809209,-0.7847268670346234,-0.8927298170563708,-0.964746846215996,-0.99787494952533,-0.9907787338103091,-0.9437442473827992,-0.8586674494389468,-0.7389777839825208,-0.589499939006324,-0.41625936341654124,-0.22623938131011934,-0.027099694320699398,0.17313238079834212,0.3663854931505622,0.5448696136873253,0.7013900511212414,0.8296374697864465,0.9244422188313594,0.9819827207403392,0.9999395190457095,0.9775887755711186,0.9158314483337364,0.8171569739449742,0.6855429184708403,0.5262946418243221,0.34583143881509804,0.15142777750457992,-0.04907993445305226,-0.24760923524596504,-0.4361574127763393,-0.6071240938227057,-0.7536176149318018,-0.8697328252316017,-0.9507891229444853,-0.9935191303497519,-0.9962004017134459,-0.9587248550411849,-0.8826031288610476,-0.7709036884151088,-0.6281291358875298,-0.4600347106019587,-0.2733962954403627,-0.07573728114146491,0.12497470142777756,0.32064895631131146,0.503397858253833,0.6658548027159771,0.8014711535533766,0.9047802184080876,0.971617610966114,0.9992891172857538,0.9866792995071972,0.9342964591300059,0.8442521473898154,0.7201760486708562,0.5670696680020743,0.3911047204901089,0.19937434960889192,-0.0003927972708062588,-0.2001441105006889,-0.39182761868589,-0.5677165634901945,-0.7207208651072788,-0.8446729232348902,-0.9345762329181301,-0.9868067935625902,-0.9992591923255816,-0.9714314732649159,-0.9044453711728808,-0.8010010944694101,-0.6652684798553298,-0.5027189062792218,-0.319904743763095,-0.12419522749882893,0.07652059587294935,0.2741518755734064,0.460732098716788,0.6287402202832375,0.7714038362919963,0.8829721792684593,0.9589479315645608,0.9962685121427056,0.993429529154838,0.9505454219477868,0.8693448480152954,0.753101000849737,0.6064996675780209,0.43545034497822077,0.2468480277832487,0.0482952715829421,-0.15220426603755646,-0.34656845277378145,-0.5269624721911597,-0.6861146450170683,-0.8176095503852446,-0.9161466313208165,-0.9777538600851527,-0.999947850533323,-0.981833963359435,-0.9241423689889081,-0.8291986144235519,-0.700829880488702,-0.5442107082520996,-0.36565441337733073,-0.17235859649785926,0.027884991918832137,0.22700453687561092,0.4169735335439255,0.5901343355122356,0.7395068343568991,0.8590698276717218,0.9440037336155496,0.9908848681582431,0.9978234537150448,0.9645397960425331,0.8923755587080479,0.7842396806582932,0.6444911169495557,0.47876312935731163,0.2937362097077694,0.0968687893884638,-0.10390340987104818,-0.30048726478114773,-0.4849584841278639,-0.6498810367920335,-0.7886068980128058,-0.89554403113135,-0.966381802475452,-0.9982647429154826,-0.9899076517674578,-0.9416474032065048,-0.8554293668755701,-0.7347289900745578,-0.5844117025502016,-0.41053679112092656,-0.2201131499485695,-0.020816752155450324,0.17931876849596085,0.3722259532175213,0.5501287172965964,0.7058558039126419,0.8331298573551887,0.9268204631054164,0.9831509547410826,0.9998506512842052,0.9762463883050139,0.9132896531666581,0.813518230588562,0.680953904596211,0.5209403404879076,0.33992768179532407,0.1452125451276661,-0.055356106295858194,-0.25369335419467165,-0.44180422811922987,-0.6121059825476566,-0.7577337572049365,-0.8728172994412666,-0.9527175939977001,-0.9942138616173815,-0.99563338859215,-0.95691895381841,-0.8796311353784889,-0.7668854036700191,-0.6232265368566231,-0.45444542095297236,-0.2673456193259536,-0.06946912119326211,0.13120767580886963,0.32659549405422217,0.5088182545424679,0.6705305614855327,0.8052137950626952,0.9074388768534879,0.9730851158794303,0.9995063135736721,0.985637431991765,0.9320375254696115,0.8408672051546398,0.7158015448139873,0.5618819386854078,0.38531288297753596,0.193211872753147,-0.00667750415236834,-0.20629771100072555,-0.39760206129265235,-0.5728790805390617,-0.7250633556406523,-0.8480203415472032,-0.9367936446448655,-0.9878048148818932,-0.9989975930183093,-0.9699207983938418,-0.9017465160114964,-0.7972228498145933,-0.6605631466727162,-0.49727615645439205,-0.3139439744310813,-0.11795671715089309,0.0827853730110253,0.2801903864618352,0.4663009311036388,0.6336148946479825,0.7753878546095261,0.8859049458410064,0.9607112266309601,0.9967912573144461,0.9926906525846558,0.948574707735276,0.8662217356104861,0.7489513828503999,0.6014908150018925,0.42978416457122093,0.24075292316293412,0.042016936293229265,-0.15841275242817482,-0.352456826304522,-0.5322933726442398,-0.6906731839029012,-0.8212119730936754,-0.9186477242653603,-0.979052804259822,-0.9999922855247202,-0.980622097993955,-0.9217230535349125,-0.8256693714380394,-0.696332973685089,-0.5389274078523948,-0.3597976891139065,-0.16616453280738136,0.03416671245443701,0.2331206982285461,0.4226775933741286,0.5951963632831457,0.7437227798314194,0.8622697461731716,0.946058636493845,0.9917119223200118,0.9973893206237162,0.9628619755942184,0.8895216838111221,0.7803247909521461,0.6396730215588896,0.47323604560980614,0.28772293423753825,0.09061171720815296,-0.11015205630856482,-0.3064756026644087,-0.4904451236779631,-0.6546448116798089,-0.7924557805688225,-0.898322872977603,-0.9679785885534148,-0.9986151068106625,-0.9889974703183285,-0.9395133658088266,-0.8521574965337391,-0.7304511758158105,-0.5793003829807515,-0.40479800342919553,-0.21397822455018212,-0.014532987769185171,0.1854980734547272,0.3780517110910466,0.555366091902877,0.7102936767872717,0.8365893379324503,0.9291620997931163,0.984280356211783,0.9997222913874738,0.9748654412256914,0.9107117848535238,0.8098473548611815,0.6763379943809631,0.5155654630321036,0.33401049830045265,0.13899157714067725,-0.06163009168139746,-0.2597674527545956,-0.44743359306360453,-0.6170636942894788,-0.7618199704842079,-0.875867299083435,-0.9546084345788296,-0.9948693233918938,-0.9950270499092118,-0.9550752561780618,-0.8766243981953072,-0.7628368284589473,-0.6182993216026438,-0.44883818160320305,-0.2612843835851267,-0.0631982173514473,0.13743546774480675,0.3325291319172434,0.5142185535102787,0.6751798356161175,0.8089246322099228,0.9100616932470392,0.9745141858435767,0.9996840313270249,0.9845566337353078,0.9297417781591926,0.8374490503178906,0.7113987682031346,0.5566720161366114,0.37950582636342534,0.18704176440824252,-0.012961947285529293,-0.21244316314660447,-0.40336079939970026,-0.5780189699905017,-0.7293772075968008,-0.8513342647229949,-0.9389740548640982,-0.9887638198528431,-0.998696535269923,-0.9683718135578928,-0.8990120436353746,-0.7934131164245195,-0.6558317225444231,-0.49181376519872616,-0.3079708049292258,-0.11171354774450805,0.08904688028937947,0.28621783038068516,0.47185134552056235,0.6384645424700309,0.7793412466310494,0.8888027209096446,0.9624365754924328,0.9972746311910058,0.9919125666851046,0.9465665266865092,0.8630644091499885,0.7447721827437968,0.5964582047209767,0.4241010085344834,0.23464830927531397,0.03573694141724298,-0.16461498182647863,-0.35833127848348,-0.5376032485553814,-0.6952044425557707,-0.8247819595434358,-0.921112532430665,-0.9803130777733362,-0.9999972227866138,-0.9793714999832794,-0.919267331832217,-0.8221075161354485,-0.6918085630977795,-0.5336228208795938,-0.35392675354915515,-0.15996390594450233,0.040447083472064556,0.2392276517722786,0.4283649582701859,0.6002348819676461,0.7479093497181399,0.8654356067147467,0.9480761719157901,0.9924998058103472,0.9969157926148894,0.9611461239907144,0.886632674556247,0.7763790799506414,0.6348296603413354,0.467690269968882,0.2816982942772256,0.08435106604302281,-0.11639635195650612,-0.3124518353638315,-0.49591239160978967,-0.659382729384246,-0.7962733626792391,-0.9010662328363378,-0.9695371413799734,-0.9989260273721918,-0.9880482254133015,-0.9373422194801242,-0.8488519676458983,-0.7261445101714546,-0.5741661821849572,-0.39904322701218153,-0.20783484743267233,-0.008248649358585615,0.19167005160435416,0.3838625366651546,0.5605815306401669,0.7147034944579574,0.8400157748753605,0.9314670364044542,0.9853708805433219,0.9995544444254811,0.9734459888778222,0.9080979452152029,0.8061444917553409,0.6716953701443922,0.5101702217541015,0.3280801220474932,0.13276511925961976,-0.06790164279935366,-0.265831291010894,-0.4530452852606141,-0.621997033228395,-0.7658760933722241,-0.878882703689006,-0.9564615700033193,-0.9954854897838374,-0.9943814096138174,-0.9531938349425729,-0.8735830360716572,-0.7587581226928022,-0.6133476847409083,-0.44321321402748054,-0.25521282762477865,-0.0569248173042816,0.14365783124982465,0.3384496355330223,0.5195985418561692,0.6798024414704578,0.8126035184243549,0.9126485639926983,0.9759047644130227,0.9998222635263122,0.98343694742723,0.9274093078762143,0.8339978178899038,0.706967892739559,0.5514401061375724,0.37368378001509706,0.1808642682813289,-0.019245878447252947,-0.21858022420504702,-0.4091036055479906,-0.583136028828984,-0.7336622505871297,-0.8546145618688753,-0.9411173774540305,-0.9896837705965942,-0.9983560309716273,-0.9667845799388959,-0.8962420620507989,-0.7895720447759625,-0.6510743943523176,-0.48633194826623666,-0.30198547118587343,-0.10546596587247951,0.09530487039112305,0.2922339692578795,0.47738312273679834,0.6432889721976516,0.7832638562054234,0.8916653900180601,0.9641239100011226,0.9977186146800668,0.9910953021890759,0.944520958120653,0.8598729933418189,0.7405635656000419,0.5914020355134866,0.41840110134170533,0.22853442724085735,0.029455535002094843,-0.17081070925659894,-0.36419157728134227,-0.5428918901950207,-0.6997082419997037,-0.8283193687272719,-0.923540958461697,-0.981534630847369,-0.999962662123993,-0.9780822187236164,-0.9167753008770017,-0.8185131892019964,-0.6872568274321786,-0.528297156854359,-0.34804183857338467,-0.15375696082179408,0.046725856909519026,0.24532515629414783,0.4340354035924675,0.605249692554245,0.7520663786557802,0.8685672842510644,0.9500562601926995,0.9932484875093872,0.9964028883919823,0.9593923090046944,0.8837086450537133,0.7724027035016053,0.6299612246000519,0.4621260214816755,0.2756625277879401,0.07808708317671374,-0.12263605017724302,-0.3184157268300801,-0.5013600719770077,-0.664094602767167,-0.800059493557137,-0.9037740023501335,-0.9710573993953819,-0.9991974923193244,-0.9870599545456501,-0.9351340499763712,-0.8455129107740607,-0.7218091632465516,-0.5690093029535637,-0.39327268917203223,-0.20168326124724886,-0.001963985142551515,0.1978344591635028,0.3896582004237625,0.565774827509171,0.7190850827455697,0.8434090328464585,0.9337351818988407,0.9864224846620924,0.999347117027842,0.9719880873269837,0.9054482374931769,0.8024097875268552,0.667026215261197,0.5047548297550327,0.3221367872745422,0.12653341741733998,-0.07417051193578636,-0.2718846294536563,-0.4586390830594482,-0.6269058045073033,-0.7699019656601043,-0.8818633941554275,-0.9582769270759974,-0.996062336455851,-0.9936964932074765,-0.9512747644243487,-0.8705071691354199,-0.7546494474723705,-0.608371821851339,-0.4375707404011701,-0.24913119125932442,-0.05064916883884822,0.14987452055290945,0.34435677105362605,0.524958007080981,0.6843981964647925,0.8162503083972179,0.9151993869141561,0.9772567966627245,0.9999210047116289,0.9822784172929802,0.9250402067486679,0.8305136441875758,0.7025090934338913,0.546186415338357,0.3678469738921476,0.17467962837135953,-0.02552904943472496,-0.22470865177442761,-0.41483025290807396,-0.5882300549405582,-0.7379183153606327,-0.8578611034196139,-0.9432235277575932,-0.9905646307769181,-0.9979760935726675,-0.9651591602295458,-0.8934366806665458,-0.7856997865837003,-0.6462913500015114,-0.48083092217781753,-0.2959882096102663,-0.09921421830223605,0.10155909613794874,0.29823856546775906,0.48289604425812166,0.6480879932753555,0.7871555283971391,0.8944928400964485,0.9657731635106631,0.9981231902451545,0.9902388913769128,0.9424380828337184,0.8566476142408003,0.736325697651162,0.5863225070881666,0.41268466812801696,0.22241151854577562,0.023172965151331167,-0.17699968999959367,-0.37003749122793206,-0.5481590886721142,-0.7041844043435579,-0.8318240609242815,-0.9259329064403141,-0.9827174152329964,-0.9998886049019374,-0.9767543051390191,-0.9142470590995904,-0.8148865326066616,-0.6826779464728143,-0.5229506261299501,-0.342143176629168,-0.14754394260138742,0.053002784767365245,0.25141297095449106,0.4396887053695301,0.6102405969677824,0.7561937024498687,0.871664655087076,0.9519988231149071,0.9939579378457158,0.9958506282136933,0.9576005999084336,0.8807497107968866,0.768395818664235,0.6250679066289452,0.45654351992496245,0.2696158731707019,0.07182001602412208,-0.12887090451507477,-0.3243670415008422,-0.5067879496070498,-0.6687802457188345,-0.8038140236577891,-0.9064460745674672,-0.972539302552356,-0.9994294909297184,-0.986032696750129,-0.9328889445159223,-0.842140457804349,-0.7174453062785483,-0.56382994897335,-0.3874866178336477,-0.19552370896936175,0.004320756647034932,0.20399105265052728,0.39543847344933525,0.5709457773845893,0.723438268586063,0.8467689778187251,0.935966446689112,0.9874351270318191,0.9991003173835911,0.9704917941573938,0.902762766345643,0.798643389689065,0.662330714153733,0.49931950093252886,0.3161807287318549,0.12029671775369759,-0.08043645148302807,-0.27792722898802363,-0.4642147655160901,-0.6317898142392103,-0.7738974283338792,-0.8848092527514462,-0.9600544340938283,-0.9965998406236247,-0.9929723277430657,-0.9493181204229714,-0.8673969188771251,-0.7505109650821717,-0.6033719294707384,-0.43191098359078645,-0.24303971470166524,-0.0443715198305843,0.15608529010716668,0.3502503051587067,0.5302967374964708,0.6889669190756672,0.8198648580874767,0.9177140612589666,0.9785702291900641,0.9999802509828953,0.9810810890922014,0.9226345683513906,0.8269966668288545,0.6980225463999377,0.5409111512495197,0.36199563853683964,0.16848808895945314,-0.03181121207481541,-0.23082820379390398,-0.42054051528874015,-0.5933008471212997,-0.7421452338113492,-0.861073761143084,-0.945292422586027,-0.9914063656015843,-0.997556738079824,-0.9634956186306389,-0.8905960102897665,-0.7817964947944593,-0.6414827784128538,-0.4753109042130855,-0.28997925708212213,-0.09295855196540406,0.10780931050000778,0.30423138184057735,0.4883898923350687,0.6528614161514177,0.7910161094928664,0.8972849594659875,0.967384270878694,0.9984883419063352,0.9893433680751111,0.9403179830951482,0.8533883992430092,0.7320587462848411,0.5812198200763116,0.4069519346809822,0.2162798250329259,0.01688948001399722,-0.18318167960255402,-0.37586878942092883,-0.5534046359429614,-0.7086327527878001,-0.835295897706077,-0.928288281889275,-0.9838613842125172,-0.9997750540455569,-0.9753878116794386,-0.9116827063605631,-0.8112276895952517,-0.6780721010766493,-0.5175834398838209,-0.3362310007019494,-0.141325096685176,0.059277619119292066,0.2574908552967069,0.4453246403070667,0.6152073980774347,0.760291158079303,0.8747275968826671,0.9539037839550325,0.9946281287973999,0.9952590338932336,0.9557710674708856,0.8777559886578531,0.764358583702533,0.6201498997041913,0.45094298579678227,0.2635585692563723,0.06555011212208062,-0.13510066870551146,-0.3303055443112106,-0.5121958101092232,-0.6734394731653932,-0.8075368046846371,-0.9090823439467863,-0.9739827923187153,-0.9996220140398904,-0.9849664926014384,-0.9306069917760296,-0.8387347419419643,-0.7130531116312944,-0.5586283248185238,-0.38168524153568095,-0.18935643388955206,0.010605327775341206,0.21013958889208698,0.40120312743255615,0.576094176024161,0.7277628800369186,0.8500954770809983,0.9381607426446927,0.9884087676551193,0.998814055240826,0.9689571684697736,0.9000416378435296,0.794845447007279,0.6576090522849782,0.49386444997129597,0.3102121816720359,0.11405526660629492,-0.08669921394844407,-0.28395885094330175,-0.46977211240204325,-0.636648869515334,-0.7778623235804831,-0.8877201631212776,-0.9617940208488098,-0.9970979810568096,-0.9922089418236991,-0.9473239802219983,-0.8642524081457116,-0.7463428389842744,-0.5983482050849356,-0.42623416714570045,-0.23693863855304062,-0.03809211823462575,0.16228989459918333,0.35613000506535863,0.5356145222332821,0.6935084288476034,0.823447024727524,0.9201924877023455,0.9798450101169912,1.0],"x":[0.0,0.2011122078817172,0.4022244157634344,0.6033366236451516,0.8044488315268687,1.0055610394085859,1.2066732472903032,1.4077854551720204,1.6088976630537375,1.8100098709354546,2.0111220788171718,2.2122342866988887,2.4133464945806065,2.614458702462324,2.8155709103440407,3.0166831182257576,3.217795326107475,3.4189075339891923,3.6200197418709092,3.821131949752626,4.0222441576343435,4.223356365516061,4.424468573397777,4.625580781279495,4.826692989161213,5.02780519704293,5.228917404924648,5.430029612806364,5.6311418206880814,5.832254028569799,6.033366236451515,6.234478444333233,6.43559065221495,6.636702860096667,6.837815067978385,7.038927275860101,7.2400394837418185,7.441151691623536,7.642263899505252,7.8433761073869706,8.044488315268687,8.245600523150404,8.446712731032122,8.647824938913839,8.848937146795555,9.050049354677274,9.25116156255899,9.452273770440708,9.653385978322426,9.854498186204141,10.05561039408586,10.256722601967576,10.457834809849295,10.65894701773101,10.860059225612728,11.061171433494446,11.262283641376163,11.463395849257878,11.664508057139598,11.865620265021313,12.06673247290303,12.267844680784748,12.468956888666465,12.670069096548184,12.8711813044299,13.072293512311617,13.273405720193335,13.474517928075052,13.67563013595677,13.876742343838487,14.077854551720202,14.278966759601921,14.480078967483637,14.681191175365354,14.882303383247072,15.083415591128789,15.284527799010505,15.485640006892224,15.686752214773941,15.887864422655658,16.088976630537374,16.29008883841909,16.49120104630081,16.69231325418253,16.893425462064243,17.09453766994596,17.295649877827678,17.496762085709396,17.69787429359111,17.89898650147283,18.100098709354548,18.301210917236265,18.50232312511798,18.703435332999696,18.904547540881417,19.105659748763134,19.30677195664485,19.507884164526565,19.708996372408283,19.910108580290004,20.11122078817172,20.312332996053435,20.513445203935152,20.71455741181687,20.91566961969859,21.116781827580304,21.31789403546202,21.51900624334374,21.720118451225456,21.921230659107174,22.12234286698889,22.32345507487061,22.524567282752326,22.725679490634043,22.926791698515757,23.127903906397478,23.329016114279195,23.530128322160913,23.731240530042626,23.932352737924344,24.13346494580606,24.334577153687782,24.535689361569496,24.736801569451213,24.93791377733293,25.139025985214648,25.34013819309637,25.541250400978083,25.7423626088598,25.943474816741517,26.144587024623235,26.345699232504952,26.54681144038667,26.747923648268387,26.949035856150104,27.150148064031818,27.35126027191354,27.552372479795256,27.753484687676973,27.95459689555869,28.155709103440405,28.356821311322122,28.557933519203843,28.75904572708556,28.960157934967274,29.16127014284899,29.36238235073071,29.56349455861243,29.764606766494143,29.96571897437586,30.166831182257578,30.367943390139295,30.56905559802101,30.77016780590273,30.971280013784448,31.172392221666165,31.373504429547882,31.574616637429596,31.775728845311317,31.976841053193034,32.17795326107475,32.37906546895647,32.58017767683818,32.7812898847199,32.98240209260162,33.18351430048333,33.38462650836506,33.58573871624677,33.78685092412849,33.98796313201021,34.18907533989192,34.39018754777364,34.591299755655356,34.79241196353707,34.99352417141879,35.194636379300505,35.39574858718222,35.59686079506395,35.79797300294566,35.99908521082738,36.200197418709095,36.40130962659081,36.60242183447253,36.803534042354244,37.00464625023596,37.20575845811768,37.40687066599939,37.60798287388112,37.809095081762834,38.01020728964455,38.21131949752627,38.41243170540798,38.6135439132897,38.81465612117142,39.01576832905313,39.21688053693485,39.417992744816566,39.61910495269828,39.82021716058001,40.02132936846172,40.22244157634344,40.423553784225156,40.62466599210687,40.82577819998859,41.026890407870305,41.228002615752025,41.42911482363374,41.63022703151545,41.83133923939718,42.032451447278895,42.23356365516061,42.43467586304233,42.63578807092404,42.836900278805764,43.03801248668748,43.23912469456919,43.44023690245091,43.64134911033263,43.84246131821435,44.04357352609607,44.24468573397778,44.4457979418595,44.64691014974122,44.84802235762293,45.04913456550465,45.250246773386365,45.451358981268086,45.6524711891498,45.853583397031514,46.054695604913235,46.255807812794956,46.45692002067668,46.65803222855839,46.859144436440104,47.060256644321825,47.26136885220354,47.46248106008525,47.663593267966974,47.86470547584869,48.06581768373041,48.26692989161212,48.46804209949384,48.669154307375564,48.87026651525728,49.07137872313899,49.27249093102071,49.473603138902426,49.67471534678415,49.87582755466586,50.076939762547575,50.278051970429296,50.47916417831102,50.68027638619274,50.88138859407445,51.082500801956165,51.283613009837886,51.4847252177196,51.685837425601314,51.886949633483034,52.08806184136475,52.28917404924647,52.49028625712818,52.691398465009904,52.892510672891625,53.09362288077334,53.29473508865506,53.49584729653677,53.69695950441849,53.89807171230021,54.09918392018192,54.300296128063636,54.50140833594536,54.70252054382708,54.9036327517088,55.10474495959051,55.305857167472226,55.50696937535395,55.70808158323566,55.90919379111738,56.110305998999095,56.31141820688081,56.51253041476253,56.713642622644244,56.914754830525965,57.115867038407686,57.3169792462894,57.51809145417112,57.719203662052834,57.92031586993455,58.12142807781627,58.32254028569798,58.5236524935797,58.72476470146142,58.92587690934313,59.12698911722486,59.32810132510657,59.52921353298829,59.73032574087001,59.93143794875172,60.13255015663344,60.333662364515156,60.53477457239687,60.73588678027859,60.936998988160305,61.13811119604202,61.33922340392375,61.54033561180546,61.74144781968718,61.942560027568895,62.14367223545061,62.34478444333233,62.54589665121404,62.747008859095764,62.94812106697748,63.14923327485919,63.35034548274092,63.551457690622634,63.75256989850435,63.95368210638607,64.15479431426779,64.3559065221495,64.55701873003122,64.75813093791294,64.95924314579464,65.16035535367637,65.36146756155809,65.5625797694398,65.76369197732153,65.96480418520323,66.16591639308496,66.36702860096666,66.56814080884838,66.76925301673012,66.97036522461183,67.17147743249355,67.37258964037525,67.57370184825697,67.7748140561387,67.97592626402042,68.17703847190212,68.37815067978384,68.57926288766555,68.78037509554729,68.981487303429,69.18259951131071,69.38371171919243,69.58482392707414,69.78593613495586,69.98704834283758,70.1881605507193,70.38927275860101,70.59038496648273,70.79149717436444,70.99260938224617,71.1937215901279,71.3948337980096,71.59594600589132,71.79705821377303,71.99817042165476,72.19928262953647,72.40039483741819,72.6015070452999,72.80261925318162,73.00373146106335,73.20484366894506,73.40595587682678,73.60706808470849,73.80818029259021,74.00929250047191,74.21040470835365,74.41151691623536,74.61262912411708,74.81374133199878,75.0148535398805,75.21596574776224,75.41707795564395,75.61819016352567,75.81930237140737,76.0204145792891,76.22152678717082,76.42263899505254,76.62375120293424,76.82486341081596,77.02597561869767,77.2270878265794,77.42820003446113,77.62931224234283,77.83042445022456,78.03153665810626,78.232648865988,78.4337610738697,78.63487328175142,78.83598548963313,79.03709769751485,79.23820990539656,79.4393221132783,79.64043432116001,79.84154652904172,80.04265873692344,80.24377094480515,80.44488315268688,80.64599536056859,80.84710756845031,81.04821977633202,81.24933198421374,81.45044419209546,81.65155639997718,81.8526686078589,82.05378081574061,82.25489302362233,82.45600523150405,82.65711743938577,82.85822964726748,83.0593418551492,83.2604540630309,83.46156627091263,83.66267847879436,83.86379068667607,84.06490289455779,84.2660151024395,84.46712731032122,84.66823951820294,84.86935172608466,85.07046393396637,85.27157614184809,85.4726883497298,85.67380055761153,85.87491276549325,86.07602497337496,86.27713718125668,86.47824938913838,86.67936159702012,86.88047380490183,87.08158601278355,87.28269822066525,87.48381042854697,87.6849226364287,87.88603484431042,88.08714705219214,88.28825926007384,88.48937146795556,88.69048367583727,88.891595883719,89.09270809160071,89.29382029948243,89.49493250736414,89.69604471524586,89.89715692312758,90.0982691310093,90.29938133889102,90.50049354677273,90.70160575465445,90.90271796253617,91.1038301704179,91.3049423782996,91.50605458618132,91.70716679406303,91.90827900194476,92.10939120982647,92.31050341770819,92.51161562558991,92.71272783347162,92.91384004135335,93.11495224923506,93.31606445711678,93.51717666499849,93.71828887288021,93.91940108076192,94.12051328864365,94.32162549652536,94.52273770440708,94.7238499122888,94.9249621201705,95.12607432805224,95.32718653593395,95.52829874381567,95.72941095169737,95.9305231595791,96.13163536746082,96.33274757534254,96.53385978322424,96.73497199110597,96.93608419898769,97.1371964068694,97.33830861475113,97.53942082263283,97.74053303051456,97.94164523839626,98.14275744627798,98.3438696541597,98.54498186204142,98.74609406992315,98.94720627780485,99.14831848568657,99.3494306935683,99.55054290145002,99.75165510933172,99.95276731721344,100.15387952509515,100.35499173297688,100.55610394085859,100.75721614874031,100.95832835662203,101.15944056450374,101.36055277238547,101.56166498026718,101.7627771881489,101.96388939603061,102.16500160391233,102.36611381179404,102.56722601967577,102.76833822755748,102.9694504354392,103.17056264332092,103.37167485120263,103.57278705908436,103.77389926696607,103.97501147484779,104.1761236827295,104.37723589061122,104.57834809849294,104.77946030637466,104.98057251425637,105.18168472213809,105.38279693001981,105.58390913790153,105.78502134578325,105.98613355366496,106.18724576154668,106.38835796942838,106.58947017731012,106.79058238519183,106.99169459307355,107.19280680095525,107.39391900883697,107.5950312167187,107.79614342460042,107.99725563248214,108.19836784036384,108.39948004824556,108.60059225612727,108.801704464009,109.00281667189071,109.20392887977243,109.40504108765415,109.60615329553586,109.8072655034176,110.0083777112993,110.20948991918102,110.41060212706273,110.61171433494445,110.81282654282617,111.0139387507079,111.2150509585896,111.41616316647132,111.61727537435304,111.81838758223476,112.01949979011648,112.22061199799819,112.42172420587991,112.62283641376162,112.82394862164334,113.02506082952506,113.22617303740678,113.42728524528849,113.62839745317021,113.82950966105193,114.03062186893365,114.23173407681537,114.43284628469708,114.6339584925788,114.8350707004605,115.03618290834224,115.23729511622395,115.43840732410567,115.63951953198737,115.8406317398691,116.04174394775083,116.24285615563254,116.44396836351426,116.64508057139597,116.84619277927769,117.0473049871594,117.24841719504113,117.44952940292283,117.65064161080456,117.85175381868626,118.05286602656798,118.25397823444972,118.45509044233143,118.65620265021315,118.85731485809485,119.05842706597657,119.2595392738583,119.46065148174002,119.66176368962172,119.86287589750344,120.06398810538515,120.26510031326688,120.4662125211486,120.66732472903031,120.86843693691203,121.06954914479374,121.27066135267548,121.47177356055718,121.6728857684389,121.87399797632061,122.07511018420233,122.27622239208404,122.47733459996577,122.6784468078475,122.8795590157292,123.08067122361092,123.28178343149263,123.48289563937436,123.68400784725607,123.88512005513779,124.0862322630195,124.28734447090122,124.48845667878295,124.68956888666466,124.89068109454638,125.09179330242809,125.29290551030981,125.49401771819153,125.69512992607325,125.89624213395496,126.09735434183668,126.29846654971838,126.4995787576001,126.70069096548184,126.90180317336355,127.10291538124527,127.30402758912697,127.5051397970087,127.70625200489042,127.90736421277214,128.10847642065386,128.30958862853558,128.51070083641727,128.711813044299,128.9129252521807,129.11403746006243,129.31514966794415,129.51626187582588,129.7173740837076,129.9184862915893,130.119598499471,130.32071070735273,130.52182291523445,130.72293512311617,130.9240473309979,131.1251595388796,131.32627174676134,131.52738395464306,131.72849616252475,131.92960837040647,132.1307205782882,132.3318327861699,132.53294499405163,132.73405720193333,132.93516940981507,133.13628161769677,133.3373938255785,133.53850603346024,133.73961824134193,133.94073044922365,134.14184265710534,134.3429548649871,134.5440670728688,134.7451792807505,134.94629148863223,135.14740369651395,135.34851590439567,135.5496281122774,135.7507403201591,135.95185252804083,136.15296473592252,136.35407694380424,136.555189151686,136.7563013595677,136.9574135674494,137.1585257753311,137.35963798321285,137.56075019109457,137.76186239897626,137.962974606858,138.1640868147397,138.36519902262143,138.56631123050312,138.76742343838487,138.9685356462666,139.16964785414828,139.37076006203,139.57187226991172,139.77298447779344,139.97409668567516,140.17520889355688,140.3763211014386,140.5774333093203,140.77854551720202,140.97965772508377,141.18076993296546,141.38188214084718,141.58299434872887,141.78410655661062,141.98521876449234,142.18633097237404,142.3874431802558,142.58855538813748,142.7896675960192,142.99077980390092,143.19189201178264,143.39300421966436,143.59411642754606,143.7952286354278,143.99634084330953,144.19745305119122,144.39856525907294,144.59967746695466,144.80078967483638,145.0019018827181,145.2030140905998,145.40412629848154,145.60523850636324,145.80635071424496,146.0074629221267,146.2085751300084,146.40968733789012,146.6107995457718,146.81191175365356,147.01302396153528,147.21413616941697,147.4152483772987,147.61636058518042,147.81747279306214,148.01858500094383,148.21969720882558,148.4208094167073,148.621921624589,148.8230338324707,149.02414604035243,149.22525824823416,149.42637045611588,149.62748266399757,149.82859487187932,150.029707079761,150.23081928764273,150.43193149552448,150.63304370340617,150.8341559112879,151.0352681191696,151.23638032705134,151.43749253493306,151.63860474281475,151.83971695069647,152.0408291585782,152.2419413664599,152.44305357434163,152.64416578222335,152.84527799010507,153.04639019798677,153.2475024058685,153.44861461375024,153.64972682163193,153.85083902951365,154.05195123739534,154.2530634452771,154.4541756531588,154.6552878610405,154.85640006892226,155.05751227680395,155.25862448468567,155.4597366925674,155.6608489004491,155.86196110833083,156.06307331621252,156.26418552409424,156.465297731976,156.6664099398577,156.8675221477394,157.06863435562113,157.26974656350285,157.47085877138454,157.67197097926626,157.873083187148,158.0741953950297,158.27530760291143,158.47641981079312,158.67753201867487,158.8786442265566,159.07975643443828,159.28086864232003,159.48198085020172,159.68309305808344,159.88420526596516,160.08531747384689,160.2864296817286,160.4875418896103,160.68865409749202,160.88976630537377,161.09087851325546,161.29199072113718,161.4931029290189,161.69421513690062,161.89532734478234,162.09643955266404,162.2975517605458,162.49866396842748,162.6997761763092,162.90088838419092,163.10200059207264,163.30311279995436,163.50422500783606,163.7053372157178,163.90644942359953,164.10756163148122,164.30867383936294,164.50978604724466,164.71089825512638,164.9120104630081,165.1131226708898,165.31423487877154,165.51534708665324,165.71645929453496,165.9175715024167,166.1186837102984,166.31979591818012,166.5209081260618,166.72202033394356,166.92313254182525,167.12424474970697,167.32535695758872,167.52646916547042,167.72758137335214,167.92869358123383,168.12980578911558,168.3309179969973,168.532030204879,168.7331424127607,168.93425462064243,169.13536682852416,169.33647903640588,169.5375912442876,169.73870345216932,169.939815660051,170.14092786793273,170.34204007581448,170.54315228369617,170.7442644915779,170.9453766994596,171.14648890734134,171.34760111522306,171.54871332310475,171.7498255309865,171.9509377388682,172.1520499467499,172.35316215463163,172.55427436251335,172.75538657039507,172.95649877827677,173.1576109861585,173.35872319404024,173.55983540192193,173.76094760980365,173.96205981768537,174.1631720255671,174.3642842334488,174.5653964413305,174.76650864921226,174.96762085709395,175.16873306497567,175.3698452728574,175.5709574807391,175.77206968862083,175.97318189650252,176.17429410438427,176.375406312266,176.5765185201477,176.7776307280294,176.97874293591113,177.17985514379285,177.38096735167454,177.58207955955626,177.783191767438,177.9843039753197,178.18541618320143,178.38652839108315,178.58764059896487,178.7887528068466,178.98986501472828,179.19097722261003,179.39208943049172,179.59320163837344,179.79431384625516,179.99542605413689,180.1965382620186,180.3976504699003,180.59876267778205,180.79987488566377,181.00098709354546,181.20209930142718,181.4032115093089,181.60432371719062,181.80543592507235,182.00654813295404,182.2076603408358,182.40877254871748,182.6098847565992,182.81099696448095,183.01210917236264,183.21322138024436,183.41433358812606,183.6154457960078,183.81655800388953,184.01767021177122,184.21878241965294,184.41989462753466,184.62100683541638,184.8221190432981,185.02323125117982,185.22434345906154,185.42545566694324,185.62656787482496,185.8276800827067,186.0287922905884,186.22990449847012,186.4310167063518,186.63212891423356,186.83324112211525,187.03435332999697,187.23546553787872,187.43657774576042,187.63768995364214,187.83880216152383,188.03991436940558,188.2410265772873,188.442138785169,188.6432509930507,188.84436320093243,189.04547540881416,189.24658761669588,189.4476998245776,189.64881203245932,189.849924240341,190.05103644822273,190.25214865610448,190.45326086398617,190.6543730718679,190.8554852797496,191.05659748763134,191.25770969551306,191.45882190339475,191.6599341112765,191.8610463191582,192.0621585270399,192.26327073492163,192.46438294280335,192.66549515068508,192.86660735856677,193.0677195664485,193.26883177433024,193.46994398221193,193.67105619009365,193.87216839797537,194.0732806058571,194.2743928137388,194.4755050216205,194.67661722950226,194.87772943738395,195.07884164526567,195.27995385314742,195.4810660610291,195.68217826891083,195.88329047679252,196.08440268467427,196.28551489255597,196.4866271004377,196.6877393083194,196.88885151620113,197.08996372408285,197.29107593196454,197.4921881398463,197.693300347728,197.8944125556097,198.09552476349143,198.29663697137315,198.49774917925487,198.6988613871366,198.89997359501828,199.10108580290003,199.30219801078172,199.50331021866344,199.7044224265452,199.90553463442689,200.1066468423086,200.3077590501903,200.50887125807205,200.70998346595377,200.91109567383546,201.11220788171718,201.3133200895989,201.51443229748062,201.71554450536235,201.91665671324407,202.1177689211258,202.31888112900748,202.5199933368892,202.72110554477095,202.92221775265264,203.12332996053436,203.32444216841606,203.5255543762978,203.72666658417953,203.92777879206122,204.12889099994297,204.33000320782466,204.53111541570638,204.73222762358807,204.93333983146982,205.13445203935154,205.33556424723324,205.53667645511496,205.73778866299668,205.9389008708784,206.14001307876012,206.34112528664184,206.54223749452356,206.74334970240525,206.94446191028698,207.14557411816872,207.34668632605042,207.54779853393214,207.74891074181383,207.95002294969558,208.1511351575773,208.352247365459,208.55335957334074,208.75447178122243,208.95558398910416,209.15669619698588,209.3578084048676,209.55892061274932,209.760032820631,209.96114502851273,210.16225723639448,210.36336944427617,210.5644816521579,210.76559386003962,210.96670606792134,211.16781827580306,211.36893048368475,211.5700426915665,211.7711548994482,211.9722671073299,212.17337931521163,212.37449152309335,212.57560373097508,212.77671593885677,212.97782814673852,213.17894035462024,213.38005256250193,213.58116477038365,213.78227697826537,213.9833891861471,214.1845013940288,214.3856136019105,214.58672580979226,214.78783801767395,214.98895022555567,215.1900624334374,215.3911746413191,215.59228684920083,215.79339905708252,215.99451126496427,216.19562347284597,216.3967356807277,216.5978478886094,216.79896009649113,217.00007230437285,217.20118451225454,217.4022967201363,217.603408928018,217.8045211358997,218.00563334378143,218.20674555166315,218.40785775954487,218.6089699674266,218.8100821753083,219.01119438319003,219.21230659107172,219.41341879895344,219.6145310068352,219.81564321471689,220.0167554225986,220.2178676304803,220.41897983836205,220.62009204624377,220.82120425412546,221.0223164620072,221.2234286698889,221.42454087777062,221.62565308565235,221.82676529353407,222.0278775014158,222.22898970929748,222.4301019171792,222.63121412506095,222.83232633294264,223.03343854082436,223.23455074870608,223.4356629565878,223.63677516446953,223.83788737235122,224.03899958023297,224.24011178811466,224.44122399599638,224.64233620387807,224.84344841175982,225.04456061964154,225.24567282752324,225.446785035405,225.64789724328668,225.8490094511684,226.05012165905012,226.25123386693184,226.45234607481356,226.65345828269525,226.85457049057698,227.05568269845872,227.25679490634042,227.45790711422214,227.65901932210386,227.86013152998558,228.0612437378673,228.262355945749,228.46346815363074,228.66458036151244,228.86569256939416,229.06680477727588,229.2679169851576,229.46902919303932,229.670141400921,229.87125360880276,230.07236581668448,230.27347802456617,230.4745902324479,230.67570244032962,230.87681464821134,231.07792685609306,231.27903906397475,231.4801512718565,231.6812634797382,231.8823756876199,232.08348789550166,232.28460010338335,232.48571231126508,232.68682451914677,232.88793672702852,233.08904893491024,233.29016114279193,233.49127335067365,233.69238555855537,233.8934977664371,234.0946099743188,234.29572218220054,234.49683439008226,234.69794659796395,234.89905880584567,235.1001710137274,235.3012832216091,235.50239542949083,235.70350763737252,235.90461984525427,236.10573205313597,236.3068442610177,236.50795646889944,236.70906867678113,236.91018088466285,237.11129309254454,237.3124053004263,237.513517508308,237.7146297161897,237.91574192407143,238.11685413195315,238.31796633983487,238.5190785477166,238.7201907555983,238.92130296348003,239.12241517136172,239.32352737924344,239.5246395871252,239.7257517950069,239.9268640028886,240.1279762107703,240.32908841865205,240.53020062653377,240.73131283441546,240.9324250422972,241.1335372501789,241.33464945806062,241.53576166594235,241.73687387382407,241.9379860817058,242.13909828958748,242.3402104974692,242.54132270535095,242.74243491323264,242.94354712111436,243.14465932899608,243.3457715368778,243.5468837447595,243.74799595264122,243.94910816052297,244.15022036840466,244.35133257628638,244.55244478416807,244.75355699204982,244.95466919993154,245.15578140781324,245.356893615695,245.55800582357668,245.7591180314584,245.96023023934012,246.16134244722184,246.36245465510356,246.56356686298525,246.764679070867,246.96579127874872,247.16690348663042,247.36801569451214,247.56912790239386,247.77024011027558,247.9713523181573,248.172464526039,248.37357673392074,248.57468894180244,248.77580114968416,248.9769133575659,249.1780255654476,249.37913777332932,249.580249981211,249.78136218909276,249.98247439697448,250.18358660485617,250.3846988127379,250.58581102061962,250.78692322850134,250.98803543638306,251.18914764426478,251.3902598521465,251.5913720600282,251.7924842679099,251.99359647579166,252.19470868367335,252.39582089155508,252.59693309943677,252.79804530731852,252.9991575152002,253.20026972308193,253.40138193096368,253.60249413884537,253.8036063467271,254.0047185546088,254.20583076249054,254.40694297037226,254.60805517825395,254.80916738613567,255.0102795940174,255.2113918018991,255.41250400978083,255.61361621766255,255.81472842554427,256.01584063342597,256.2169528413077,256.4180650491894,256.61917725707116,256.82028946495285,257.02140167283454,257.2225138807163,257.423626088598,257.62473829647973,257.8258505043614,258.0269627122432,258.22807492012487,258.42918712800656,258.6302993358883,258.83141154377,259.03252375165175,259.23363595953344,259.4347481674152,259.6358603752969,259.8369725831786,260.0380847910603,260.239196998942,260.44030920682377,260.64142141470546,260.8425336225872,261.0436458304689,261.2447580383506,261.44587024623235,261.6469824541141,261.8480946619958,262.0492068698775,262.2503190777592,262.4514312856409,262.65254349352267,262.85365570140436,263.0547679092861,263.25588011716775,263.4569923250495,263.65810453293125,263.85921674081294,264.0603289486947,264.2614411565764,264.4625533644581,264.6636655723398,264.8647777802216,265.06588998810327,265.26700219598496,265.46811440386665,265.6692266117484,265.87033881963015,266.07145102751184,266.27256323539353,266.4736754432753,266.674787651157,266.8758998590387,267.0770120669205,267.2781242748021,267.47923648268386,267.68034869056555,267.8814608984473,268.08257310632905,268.2836853142107,268.48479752209244,268.6859097299742,268.8870219378559,269.0881341457376,269.2892463536193,269.490358561501,269.69147076938276,269.89258297726445,270.0936951851462,270.2948073930279,270.4959196009096,270.69703180879134,270.8981440166731,271.0992562245548,271.30036843243647,271.5014806403182,271.7025928481999,271.90370505608166,272.10481726396335,272.30592947184505,272.5070416797268,272.7081538876085,272.90926609549024,273.110378303372,273.3114905112536,273.5126027191354,273.7137149270171,273.9148271348988,274.11593934278056,274.3170515506622,274.51816375854395,274.7192759664257,274.9203881743074,275.12150038218914,275.32261259007083,275.5237247979525,275.7248370058343,275.925949213716,276.12706142159766,276.3281736294794,276.5292858373611,276.73039804524285,276.9315102531246,277.13262246100624,277.333734668888,277.53484687676973,277.7359590846514,277.9370712925332,278.13818350041487,278.33929570829656,278.5404079161783,278.74152012406,278.94263233194175,279.14374453982344,279.34485674770514,279.5459689555869,279.74708116346864,279.9481933713503,280.149305579232,280.35041778711377,280.55152999499546,280.7526422028772,280.9537544107589,281.1548666186406,281.35597882652235,281.55709103440404,281.7582032422858,281.95931545016754,282.1604276580492,282.3615398659309,282.56265207381267,282.76376428169436,282.9648764895761,283.16598869745775,283.3671009053395,283.56821311322125,283.76932532110294,283.9704375289847,284.1715497368664,284.3726619447481,284.5737741526298,284.7748863605116,284.97599856839327,285.17711077627496,285.3782229841567,285.5793351920384,285.78044739992015,285.98155960780184,286.18267181568353,286.3837840235653,286.584896231447,286.7860084393287,286.9871206472105,287.1882328550921,287.38934506297386,287.5904572708556,287.7915694787373,287.99268168661905,288.1937938945007,288.39490610238244,288.5960183102642,288.7971305181459,288.9982427260276,289.1993549339093,289.400467141791,289.60157934967276,289.8026915575545,290.0038037654362,290.2049159733179,290.4060281811996,290.60714038908134,290.8082525969631,291.0093648048448,291.21047701272647,291.4115892206082,291.6127014284899,291.81381363637166,292.0149258442534,292.21603805213505,292.4171502600168,292.6182624678985,292.81937467578024,293.020486883662,293.2215990915436,293.4227112994254,293.6238235073071,293.8249357151888,294.02604792307056,294.22716013095226,294.42827233883395,294.6293845467157,294.8304967545974,295.03160896247914,295.23272117036083,295.4338333782425,295.6349455861243,295.836057794006,296.03717000188766,296.2382822097694,296.43939441765116,296.64050662553285,296.8416188334146,297.04273104129624,297.243843249178,297.44495545705973,297.6460676649414,297.8471798728232,298.04829208070487,298.24940428858656,298.4505164964683,298.65162870435006,298.85274091223175,299.05385312011344,299.25496532799514,299.4560775358769,299.65718974375864,299.8583019516403,300.059414159522,300.26052636740377,300.46163857528546,300.6627507831672,300.86386299104896,301.0649751989306,301.26608740681235,301.46719961469404,301.6683118225758,301.86942403045754,302.0705362383392,302.2716484462209,302.4727606541027,302.67387286198436,302.8749850698661,303.0760972777478,303.2772094856295,303.47832169351125,303.67943390139294,303.8805461092747,304.0816583171564,304.2827705250381,304.4838827329198,304.6849949408016,304.88610714868327,305.08721935656496,305.2883315644467,305.4894437723284,305.69055598021015,305.89166818809184,306.09278039597353,306.2938926038553,306.495004811737,306.6961170196187,306.8972292275005,307.0983414353821,307.29945364326386,307.5005658511456,307.7016780590273,307.90279026690905,308.1039024747907,308.30501468267244,308.5061268905542,308.7072390984359,308.9083513063176,309.1094635141993,309.310575722081,309.51168792996276,309.7128001378445,309.9139123457262,310.1150245536079,310.3161367614896,310.51724896937134,310.7183611772531,310.9194733851348,311.1205855930165,311.3216978008982,311.5228100087799,311.72392221666166,311.9250344245434,312.12614663242505,312.3272588403068,312.5283710481885,312.72948325607024,312.930595463952,313.1317076718336,313.3328198797154,313.5339320875971,313.7350442954788,313.93615650336056,314.13726871124226,314.33838091912395,314.5394931270057,314.7406053348874,314.9417175427691,315.14282975065083,315.3439419585325,315.5450541664143,315.746166374296,315.94727858217766,316.1483907900594,316.34950299794116,316.55061520582285,316.7517274137046,316.95283962158624,317.153951829468,317.35506403734973,317.5561762452314,317.7572884531132,317.95840066099487,318.15951286887656,318.3606250767583,318.56173728464006,318.76284949252175,318.96396170040344,319.16507390828514,319.3661861161669,319.56729832404864,319.76841053193033,319.969522739812,320.17063494769377,320.37174715557546,320.5728593634572,320.77397157133896,320.9750837792206,321.17619598710235,321.37730819498404,321.5784204028658,321.77953261074754,321.9806448186292,322.1817570265109,322.3828692343927,322.58398144227436,322.7850936501561,322.9862058580378,323.1873180659195,323.38843027380125,323.58954248168294,323.7906546895647,323.9917668974464,324.1928791053281,324.3939913132098,324.5951035210916,324.79621572897327,324.99732793685496,325.1984401447367,325.3995523526184,325.60066456050015,325.80177676838184,326.00288897626353,326.2040011841453,326.405113392027,326.6062255999087,326.8073378077905,327.0084500156721,327.20956222355386,327.4106744314356,327.6117866393173,327.81289884719905,328.0140110550807,328.21512326296244,328.4162354708442,328.6173476787259,328.8184598866076,329.0195720944893,329.220684302371,329.42179651025276,329.6229087181345,329.8240209260162,330.0251331338979,330.2262453417796,330.42735754966134,330.6284697575431,330.8295819654248,331.0306941733065,331.2318063811882,331.4329185890699,331.63403079695166,331.8351430048334,332.03625521271505,332.2373674205968,332.4384796284785,332.63959183636024,332.840704044242,333.0418162521236,333.2429284600054,333.4440406678871,333.6451528757688,333.8462650836505,334.04737729153226,334.24848949941395,334.4496017072957,334.65071391517745,334.8518261230591,335.05293833094083,335.2540505388225,335.4551627467043,335.656274954586,335.85738716246766,336.0584993703494,336.25961157823116,336.46072378611285,336.6618359939946,336.8629482018763,337.064060409758,337.26517261763973,337.4662848255214,337.6673970334032,337.86850924128487,338.06962144916656,338.2707336570483,338.47184586493006,338.67295807281175,338.87407028069345,339.0751824885752,339.2762946964569,339.47740690433864,339.67851911222033,339.879631320102,340.08074352798377,340.28185573586546,340.4829679437472,340.68408015162896,340.8851923595106,341.08630456739235,341.2874167752741,341.4885289831558,341.68964119103754,341.8907533989192,342.0918656068009,342.2929778146827,342.49409002256436,342.6952022304461,342.8963144383278,343.0974266462095,343.29853885409125,343.499651061973,343.7007632698547,343.9018754777364,344.1029876856181,344.3040998934998,344.5052121013816,344.70632430926327,344.90743651714496,345.1085487250267,345.3096609329084,345.51077314079015,345.7118853486719,345.91299755655353,346.1141097644353,346.315221972317,346.5163341801987,346.7174463880805,346.9185585959621,347.11967080384386,347.3207830117256,347.5218952196073,347.72300742748905,347.92411963537074,348.12523184325244,348.3263440511342,348.5274562590159,348.7285684668976,348.9296806747793,349.130792882661,349.33190509054276,349.5330172984245,349.7341295063062,349.9352417141879,350.13635392206965,350.33746612995134,350.5385783378331,350.7396905457148,350.9408027535965,351.1419149614782,351.3430271693599,351.54413937724166,351.7452515851234,351.94636379300505,352.1474760008868,352.34858820876855,352.54970041665024,352.750812624532,352.9519248324136,353.1530370402954,353.3541492481771,353.5552614560588,353.7563736639405,353.95748587182226,354.15859807970395,354.3597102875857,354.56082249546745,354.7619347033491,354.96304691123083,355.1641591191125,355.3652713269943,355.566383534876,355.76749574275766,355.9686079506394,356.16972015852116,356.37083236640285,356.5719445742846,356.7730567821663,356.974168990048,357.17528119792973,357.3763934058114,357.5775056136932,357.77861782157487,357.97973002945656,358.1808422373383,358.38195444522006,358.58306665310175,358.78417886098345,358.9852910688652,359.1864032767469,359.38751548462864,359.58862769251033,359.789739900392,359.99085210827377,360.19196431615546,360.3930765240372,360.59418873191896,360.7953009398006,360.99641314768235,361.1975253555641,361.3986375634458,361.59974977132754,361.8008619792092,362.0019741870909,362.2030863949727,362.40419860285436,362.6053108107361,362.8064230186178,363.0075352264995,363.20864743438125,363.409759642263,363.6108718501447,363.8119840580264,364.0130962659081,364.2142084737898,364.4153206816716,364.61643288955327,364.81754509743496,365.0186573053167,365.2197695131984,365.42088172108015,365.6219939289619,365.82310613684353,366.0242183447253,366.225330552607,366.4264427604887,366.6275549683705,366.8286671762521,367.02977938413386,367.2308915920156,367.4320037998973,367.63311600777905,367.83422821566074,368.03534042354244,368.2364526314242,368.4375648393059,368.6386770471876,368.8397892550693,369.040901462951,369.24201367083276,369.4431258787145,369.6442380865962,369.8453502944779,370.04646250235965,370.24757471024134,370.4486869181231,370.6497991260047,370.8509113338865,371.0520235417682,371.2531357496499,371.45424795753166,371.6553601654134,371.85647237329505,372.0575845811768,372.25869678905855,372.45980899694024,372.66092120482193,372.8620334127036,373.0631456205854,373.2642578284671,373.4653700363488,373.6664822442305,373.86759445211226,374.06870665999395,374.2698188678757,374.47093107575745,374.6720432836391,374.87315549152083,375.0742676994025,375.2753799072843,375.476492115166,375.67760432304766,375.8787165309294,376.07982873881116,376.28094094669285,376.4820531545746,376.6831653624563,376.884277570338,377.08538977821974,377.2865019861014,377.4876141939832,377.68872640186487,377.88983860974656,378.0909508176283,378.29206302551006,378.49317523339175,378.69428744127345,378.8953996491552,379.0965118570369,379.29762406491864,379.49873627280033,379.699848480682,379.90096068856377,380.10207289644546,380.3031851043272,380.50429731220896,380.7054095200906,380.90652172797235,381.1076339358541,381.3087461437358,381.50985835161754,381.7109705594992,381.9120827673809,382.1131949752627,382.31430718314436,382.5154193910261,382.7165315989078,382.9176438067895,383.11875601467125,383.319868222553,383.5209804304347,383.7220926383164,383.9232048461981,384.1243170540798,384.3254292619616,384.52654146984327,384.72765367772496,384.9287658856067,385.1298780934884,385.33099030137015,385.5321025092519,385.73321471713354,385.9343269250153,386.135439132897,386.3365513407787,386.5376635486605,386.7387757565421,386.93988796442386,387.1410001723056,387.3421123801873,387.54322458806905,387.74433679595074,387.94544900383244,388.1465612117142,388.34767341959594,388.5487856274776,388.7498978353593,388.951010043241,389.15212225112276,389.3532344590045,389.5543466668862,389.7554588747679,389.95657108264965,390.15768329053134,390.3587954984131,390.55990770629484,390.7610199141765,390.9621321220582,391.1632443299399,391.36435653782166,391.56546874570336,391.76658095358505,391.9676931614668,392.16880536934855,392.36991757723024,392.57102978511193,392.7721419929937,392.9732542008754,393.1743664087571,393.3754786166388,393.5765908245205,393.77770303240226,393.97881524028395,394.1799274481657,394.38103965604745,394.5821518639291,394.78326407181083,394.9843762796926,395.1854884875743,395.386600695456,395.58771290333766,395.7888251112194,395.98993731910116,396.19104952698285,396.3921617348646,396.5932739427463,396.794386150628,396.99549835850974,397.1966105663915,397.3977227742732,397.59883498215487,397.79994719003656,398.0010593979183,398.20217160580006,398.40328381368175,398.60439602156345,398.8055082294452,399.0066204373269,399.20773264520864,399.4088448530904,399.609957060972,399.81106926885377,400.01218147673546,400.2132936846172,400.41440589249896,400.6155181003806,400.81663030826235,401.0177425161441,401.2188547240258,401.41996693190754,401.62107913978923,401.8221913476709,402.0233035555527,402.22441576343437,402.4255279713161,402.6266401791978,402.8277523870795,403.02886459496125,403.229976802843,403.4310890107247,403.6322012186064,403.83331342648813,404.0344256343698,404.2355378422516,404.43665005013327,404.63776225801496,404.8388744658967,405.0399866737784,405.24109888166015,405.4422110895419,405.64332329742354,405.8444355053053,406.04554771318703,406.2466599210687,406.4477721289505,406.6488843368321,406.84999654471386,407.0511087525956,407.2522209604773,407.45333316835905,407.65444537624074,407.85555758412244,408.0566697920042,408.25778199988594,408.4588942077676,408.6600064156493,408.861118623531,409.06223083141276,409.2633430392945,409.46445524717615,409.6655674550579,409.86667966293965,410.06779187082134,410.2689040787031,410.47001628658484,410.6711284944665,410.8722407023482,411.0733529102299,411.27446511811166,411.47557732599336,411.67668953387505,411.8778017417568,412.07891394963855,412.28002615752024,412.48113836540193,412.6822505732837,412.8833627811654,413.0844749890471,413.2855871969288,413.4866994048105,413.68781161269226,413.88892382057395,414.0900360284557,414.29114823633745,414.4922604442191,414.69337265210083,414.8944848599826,415.0955970678643,415.296709275746,415.49782148362766,415.6989336915094,415.90004589939116,416.10115810727285,416.3022703151546,416.5033825230363,416.704494730918,416.90560693879974,417.1067191466815,417.3078313545632,417.50894356244487,417.71005577032656,417.9111679782083,418.11228018609006,418.31339239397175,418.51450460185345,418.7156168097352,418.9167290176169,419.11784122549864,419.3189534333804,419.520065641262,419.72117784914377,419.92229005702546,420.1234022649072,420.32451447278896,420.5256266806706,420.72673888855235,420.9278510964341,421.1289633043158,421.33007551219754,421.53118772007923,421.7322999279609,421.9334121358427,422.13452434372437,422.3356365516061,422.5367487594878,422.7378609673695,422.93897317525125,423.140085383133,423.3411975910147,423.5423097988964,423.74342200677813,423.9445342146598,424.1456464225416,424.34675863042327,424.54787083830496,424.7489830461867,424.9500952540684,425.15120746195015,425.3523196698319,425.55343187771354,425.7545440855953,425.95565629347703,426.1567685013587,426.3578807092405,426.5589929171221,426.76010512500386,426.9612173328856,427.1623295407673,427.36344174864905,427.56455395653074,427.76566616441244,427.9667783722942,428.16789058017594,428.3690027880576,428.5701149959393,428.771227203821,428.97233941170276,429.1734516195845,429.37456382746615,429.5756760353479,429.77678824322965,429.97790045111134,430.1790126589931,430.3801248668748,430.5812370747565,430.7823492826382,430.9834614905199,431.18457369840166,431.38568590628336,431.58679811416505,431.7879103220468,431.98902252992855,432.19013473781024,432.39124694569193,432.5923591535737,432.7934713614554,432.9945835693371,433.1956957772188,433.3968079851005,433.59792019298226,433.79903240086395,434.0001446087457,434.20125681662745,434.4023690245091,434.60348123239083,434.8045934402726,435.0057056481543,435.206817856036,435.40793006391766,435.6090422717994,435.81015447968116,436.01126668756285,436.2123788954446,436.4134911033263,436.614603311208,436.81571551908974,437.0168277269715,437.2179399348532,437.41905214273487,437.6201643506166,437.8212765584983,438.02238876638006,438.22350097426175,438.42461318214345,438.6257253900252,438.8268375979069,439.02794980578864,439.2290620136704,439.430174221552,439.63128642943377,439.8323986373155,440.0335108451972,440.23462305307896,440.4357352609606,440.63684746884235,440.8379596767241,441.0390718846058,441.24018409248754,441.44129630036923,441.6424085082509,441.8435207161327,442.0446329240144,442.2457451318961,442.4468573397778,442.6479695476595,442.84908175554125,443.050193963423,443.2513061713047,443.4524183791864,443.65353058706813,443.8546427949498,444.0557550028316,444.2568672107133,444.45797941859496,444.6590916264767,444.8602038343584,445.06131604224015,445.2624282501219,445.46354045800354,445.6646526658853,445.86576487376703,446.0668770816487,446.2679892895305,446.46910149741217,446.67021370529386,446.8713259131756,447.0724381210573,447.27355032893905,447.47466253682074,447.67577474470244,447.8768869525842,448.07799916046594,448.27911136834757,448.4802235762293,448.68133578411107,448.88244799199276,449.0835601998745,449.28467240775615,449.4857846156379,449.68689682351965,449.88800903140134,450.0891212392831,450.2902334471648,450.4913456550465,450.6924578629282,450.89357007081,451.09468227869166,451.29579448657336,451.49690669445505,451.6980189023368,451.89913111021855,452.10024331810024,452.30135552598193,452.5024677338637,452.7035799417454,452.9046921496271,453.1058043575089,453.3069165653905,453.50802877327226,453.70914098115395,453.9102531890357,454.11136539691745,454.3124776047991,454.51358981268083,454.7147020205626,454.9158142284443,455.116926436326,455.3180386442077,455.5191508520894,455.72026305997116,455.92137526785285,456.1224874757346,456.3235996836163,456.524711891498,456.72582409937974,456.9269363072615,457.1280485151432,457.32916072302487,457.5302729309066,457.7313851387883,457.93249734667006,458.13360955455175,458.33472176243345,458.5358339703152,458.7369461781969,458.93805838607864,459.1391705939604,459.340282801842,459.5413950097238,459.7425072176055,459.9436194254872,460.14473163336896,460.3458438412506,460.54695604913235,460.7480682570141,460.9491804648958,461.15029267277754,461.35140488065923,461.5525170885409,461.7536292964227,461.9547415043044,462.1558537121861,462.3569659200678,462.5580781279495,462.75919033583125,462.960302543713,463.1614147515947,463.3625269594764,463.56363916735813,463.7647513752398,463.9658635831216,464.1669757910033,464.36808799888496,464.5692002067667,464.7703124146484,464.97142462253015,465.1725368304119,465.37364903829354,465.5747612461753,465.77587345405703,465.9769856619387,466.1780978698205,466.37921007770217,466.58032228558386,466.7814344934656,466.9825467013473,467.183658909229,467.38477111711074,467.58588332499244,467.7869955328742,467.98810774075594,468.1892199486376,468.3903321565193,468.59144436440107,468.79255657228276,468.9936687801645,469.19478098804615,469.3958931959279,469.59700540380965,469.79811761169134,469.9992298195731,470.2003420274548,470.4014542353365,470.6025664432182,470.8036786511,471.00479085898166,471.20590306686336,471.40701527474505,471.6081274826268,471.80923969050855,472.01035189839024,472.21146410627193,472.4125763141537,472.6136885220354,472.8148007299171,473.0159129377989,473.2170251456805,473.41813735356226,473.61924956144395,473.8203617693257,474.02147397720745,474.2225861850891,474.42369839297083,474.6248106008526,474.8259228087343,475.027035016616,475.2281472244977,475.4292594323794,475.63037164026116,475.83148384814285,476.0325960560246,476.2337082639063,476.434820471788,476.63593267966974,476.8370448875515,477.0381570954332,477.23926930331487,477.4403815111966,477.6414937190783,477.84260592696006,478.04371813484175,478.24483034272345,478.4459425506052,478.6470547584869,478.84816696636864,479.0492791742504,479.250391382132,479.4515035900138,479.6526157978955,479.8537280057772,480.05484021365896,480.2559524215406,480.45706462942235,480.6581768373041,480.8592890451858,481.06040125306754,481.26151346094923,481.4626256688309,481.6637378767127,481.8648500845944,482.0659622924761,482.2670745003578,482.4681867082395,482.66929891612125,482.870411124003,483.0715233318847,483.2726355397664,483.47374774764813,483.6748599555298,483.8759721634116,484.0770843712933,484.27819657917496,484.4793087870567,484.6804209949384,484.88153320282015,485.0826454107019,485.28375761858354,485.4848698264653,485.68598203434703,485.8870942422287,486.0882064501105,486.28931865799217,486.49043086587386,486.6915430737556,486.8926552816373,487.093767489519,487.29487969740075,487.49599190528244,487.6971041131642,487.89821632104594,488.0993285289276,488.3004407368093,488.50155294469107,488.70266515257276,488.9037773604545,489.10488956833615,489.3060017762179,489.50711398409965,489.70822619198134,489.9093383998631,490.1104506077448,490.3115628156265,490.5126750235082,490.71378723139,490.91489943927166,491.11601164715336,491.3171238550351,491.5182360629168,491.71934827079855,491.92046047868024,492.12157268656193,492.3226848944437,492.5237971023254,492.7249093102071,492.9260215180889,493.1271337259705,493.32824593385226,493.529358141734,493.7304703496157,493.93158255749745,494.1326947653791,494.33380697326083,494.5349191811426,494.7360313890243,494.937143596906,495.1382558047877,495.3393680126694,495.54048022055116,495.7415924284329,495.9427046363146,496.1438168441963,496.344929052078,496.54604125995974,496.7471534678415,496.9482656757232,497.14937788360487,497.3504900914866,497.5516022993683,497.75271450725006,497.9538267151318,498.15493892301345,498.3560511308952,498.5571633387769,498.75827554665864,498.9593877545404,499.160499962422,499.3616121703038,499.5627243781855,499.7638365860672,499.96494879394896,500.16606100183066,500.36717320971235,500.5682854175941,500.7693976254758,500.97050983335754,501.17162204123923,501.3727342491209,501.5738464570027,501.7749586648844,501.9760708727661,502.1771830806478,502.37829528852956,502.57940749641125,502.780519704293,502.9816319121747,503.1827441200564,503.38385632793813,503.5849685358198,503.7860807437016,503.9871929515833,504.18830515946496,504.3894173673467,504.59052957522846,504.79164178311015,504.9927539909919,505.19386619887354,505.3949784067553,505.59609061463703,505.7972028225187,505.9983150304004,506.19942723828217,506.40053944616386,506.6016516540456,506.80276386192736,507.003876069809,507.20498827769075,507.40610048557244,507.6072126934542,507.80832490133594,508.0094371092176,508.2105493170993,508.41166152498107,508.61277373286276,508.8138859407445,509.0149981486262,509.2161103565079,509.41722256438965,509.61833477227134,509.8194469801531,510.0205591880348,510.2216713959165,510.4227836037982,510.62389581168,510.82500801956166,511.02612022744336,511.2272324353251,511.4283446432068,511.62945685108855,511.83056905897024,512.0316812668519,512.2327934747337,512.4339056826154,512.6350178904971,512.8361300983788,513.0372423062605,513.2383545141423,513.439466722024,513.6405789299057,513.8416911377874,514.0428033456691,514.2439155535509,514.4450277614326,514.6461399693143,514.847252177196,515.0483643850778,515.2494765929595,515.4505888008412,515.6517010087229,515.8528132166045,516.0539254244864,516.255037632368,516.4561498402497,516.6572620481314,516.8583742560131,517.0594864638949,517.2605986717766,517.4617108796583,517.66282308754,517.8639352954218,518.0650475033035,518.2661597111852,518.4672719190669,518.6683841269486,518.8694963348304,519.0706085427121,519.2717207505938,519.4728329584755,519.6739451663572,519.875057374239,520.0761695821207,520.2772817900023,520.478393997884,520.6795062057657,520.8806184136475,521.0817306215292,521.2828428294109,521.4839550372926,521.6850672451744,521.8861794530561,522.0872916609378,522.2884038688196,522.4895160767012,522.690628284583,522.8917404924647,523.0928527003464,523.2939649082282,523.4950771161098,523.6961893239916,523.8973015318733,524.098413739755,524.2995259476368,524.5006381555183,524.7017503634002,524.9028625712818,525.1039747791637,525.3050869870453,525.5061991949269,525.7073114028087,525.9084236106904,526.1095358185722,526.3106480264539,526.5117602343355,526.7128724422173,526.913984650099,527.1150968579808,527.3162090658625,527.5173212737442,527.7184334816259,527.9195456895076,528.1206578973894,528.3217701052711,528.5228823131528,528.7239945210345,528.9251067289161,529.126218936798,529.3273311446796,529.5284433525613,529.7295555604431,529.9306677683247,530.1317799762065,530.3328921840882,530.5340043919699,530.7351165998517,530.9362288077333,531.1373410156151,531.3384532234968,531.5395654313785,531.7406776392603,531.941789847142,532.1429020550237,532.3440142629054,532.5451264707871,532.7462386786689,532.9473508865506,533.1484630944323,533.349575302314,533.5506875101956,533.7517997180775,533.9529119259591,534.154024133841,534.3551363417225,534.5562485496042,534.757360757486,534.9584729653677,535.1595851732495,535.3606973811311,535.5618095890128,535.7629217968946,535.9640340047763,536.1651462126581,536.3662584205398,536.5673706284214,536.7684828363032,536.9695950441849,537.1707072520667,537.3718194599484,537.57293166783,537.7740438757118,537.9751560835934,538.1762682914753,538.377380499357,538.5784927072386,538.7796049151203,538.980717123002,539.1818293308838,539.3829415387655,539.5840537466472,539.7851659545289,539.9862781624106,540.1873903702924,540.3885025781741,540.5896147860558,540.7907269939376,540.9918392018192,541.192951409701,541.3940636175827,541.5951758254644,541.7962880333462,541.9974002412278,542.1985124491096,542.3996246569913,542.6007368648729,542.8018490727547,543.0029612806364,543.2040734885181,543.4051856963998,543.6062979042815,543.8074101121633,544.008522320045,544.2096345279267,544.4107467358084,544.6118589436901,544.8129711515719,545.0140833594536,545.2151955673354,545.416307775217,545.6174199830987,545.8185321909805,546.0196443988622,546.220756606744,546.4218688146256,546.6229810225072,546.824093230389,547.0252054382707,547.2263176461526,547.4274298540342,547.6285420619158,547.8296542697976,548.0307664776793,548.2318786855611,548.4329908934428,548.6341031013244,548.8352153092062,549.0363275170879,549.2374397249697,549.4385519328514,549.6396641407331,549.8407763486148,550.0418885564965,550.2430007643783,550.44411297226,550.6452251801417,550.8463373880234,551.047449595905,551.2485618037869,551.4496740116685,551.6507862195502,551.851898427432,552.0530106353136,552.2541228431953,552.4552350510771,552.6563472589588,552.8574594668406,553.0585716747222,553.2596838826039,553.4607960904857,553.6619082983674,553.8630205062492,554.0641327141309,554.2652449220125,554.4663571298943,554.667469337776,554.8685815456578,555.0696937535395,555.270805961421,555.4719181693029,555.6730303771845,555.8741425850664,556.075254792948,556.2763670008297,556.4774792087114,556.6785914165931,556.8797036244749,557.0808158323566,557.2819280402383,557.48304024812,557.6841524560017,557.8852646638835,558.0863768717652,558.2874890796469,558.4886012875287,558.6897134954103,558.8908257032921,559.0919379111738,559.2930501190555,559.4941623269373,559.6952745348189,559.8963867427007,560.0974989505823,560.298611158464,560.4997233663458,560.7008355742275,560.9019477821092,561.1030599899909,561.3041721978726,561.5052844057544,561.7063966136361,561.9075088215178,562.1086210293995,562.3097332372812,562.510845445163,562.7119576530447,562.9130698609265,563.1141820688081,563.3152942766898,563.5164064845716,563.7175186924533,563.9186309003351,564.1197431082167,564.3208553160983,564.5219675239802,564.7230797318618,564.9241919397437,565.1253041476253,565.3264163555069,565.5275285633887,565.7286407712704,565.9297529791522,566.1308651870339,566.3319773949155,566.5330896027973,566.734201810679,566.9353140185608,567.1364262264425,567.3375384343242,567.5386506422059,567.7397628500876,567.9408750579694,568.1419872658511,568.3430994737328,568.5442116816146,568.7453238894961,568.946436097378,569.1475483052596,569.3486605131413,569.5497727210231,569.7508849289047,569.9519971367865,570.1531093446682,570.3542215525499,570.5553337604317,570.7564459683134,570.9575581761951,571.1586703840768,571.3597825919585,571.5608947998403,571.762007007722,571.9631192156037,572.1642314234854,572.3653436313671,572.5664558392489,572.7675680471306,572.9686802550124,573.169792462894,573.3709046707756,573.5720168786575,573.7731290865391,573.974241294421,574.1753535023025,574.3764657101842,574.577577918066,574.7786901259477,574.9798023338295,575.1809145417112,575.3820267495928,575.5831389574746,575.7842511653563,575.9853633732381,576.1864755811198,576.3875877890014,576.5886999968832,576.7898122047649,576.9909244126467,577.1920366205284,577.3931488284101,577.5942610362918,577.7953732441734,577.9964854520553,578.197597659937,578.3987098678186,578.5998220757003,578.800934283582,579.0020464914638,579.2031586993455,579.4042709072272,579.605383115109,579.8064953229906,580.0076075308724,580.2087197387541,580.4098319466358,580.6109441545176,580.8120563623992,581.013168570281,581.2142807781627,581.4153929860444,581.6165051939262,581.8176174018079,582.0187296096896,582.2198418175713,582.4209540254529,582.6220662333347,582.8231784412164,583.0242906490981,583.2254028569798,583.4265150648615,583.6276272727433,583.828739480625,584.0298516885068,584.2309638963884,584.4320761042701,584.6331883121519,584.8343005200336,585.0354127279154,585.236524935797,585.4376371436787,585.6387493515605,585.8398615594422,586.040973767324,586.2420859752057,586.4431981830872,586.644310390969,586.8454225988507,587.0465348067326,587.2476470146142,587.4487592224958,587.6498714303776,587.8509836382593,588.0520958461411,588.2532080540228,588.4543202619045,588.6554324697862,588.8565446776679,589.0576568855497,589.2587690934314,589.4598813013131,589.6609935091948,589.8621057170765,590.0632179249583,590.26433013284,590.4654423407217,590.6665545486035,590.867666756485,591.0687789643667,591.2698911722485,591.4710033801302,591.672115588012,591.8732277958936,592.0743400037753,592.2754522116571,592.4765644195388,592.6776766274206,592.8787888353023,593.0799010431839,593.2810132510657,593.4821254589474,593.6832376668292,593.8843498747109,594.0854620825925,594.2865742904743,594.487686498356,594.6887987062378,594.8899109141195,595.0910231220012,595.2921353298829,595.4932475377645,595.6943597456464,595.895471953528,596.0965841614097,596.2976963692914,596.4988085771731,596.6999207850549,596.9010329929366,597.1021452008183,597.3032574087001,597.5043696165817,597.7054818244635,597.9065940323452,598.1077062402269,598.3088184481087,598.5099306559903,598.7110428638721,598.9121550717538,599.1132672796355,599.3143794875173,599.515491695399,599.7166039032807,599.9177161111623,600.118828319044,600.3199405269258,600.5210527348075,600.7221649426892,600.9232771505709,601.1243893584526,601.3255015663344,601.5266137742161,601.7277259820979,601.9288381899795,602.1299503978612,602.331062605743,602.5321748136247,602.7332870215065,602.9343992293881,603.1355114372698,603.3366236451516,603.5377358530333,603.7388480609151,603.9399602687968,604.1410724766783,604.3421846845602,604.5432968924418,604.7444091003237,604.9455213082053,605.1466335160869,605.3477457239687,605.5488579318504,605.7499701397322,605.9510823476139,606.1521945554956,606.3533067633773,606.554418971259,606.7555311791408,606.9566433870225,607.1577555949042,607.3588678027859,607.5599800106676,607.7610922185494,607.9622044264311,608.1633166343128,608.3644288421946,608.5655410500761,608.766653257958,608.9677654658396,609.1688776737213,609.3699898816031,609.5711020894847,609.7722142973665,609.9733265052482,610.1744387131299,610.3755509210117,610.5766631288934,610.7777753367751,610.9788875446568,611.1799997525385,611.3811119604203,611.582224168302,611.7833363761837,611.9844485840654,612.1855607919471,612.3866729998289,612.5877852077106,612.7888974155924,612.990009623474,613.1911218313556,613.3922340392375,613.5933462471191,613.794458455001,613.9955706628825,614.1966828707642,614.397795078646,614.5989072865277,614.8000194944095,615.0011317022912,615.2022439101728,615.4033561180546,615.6044683259363,615.8055805338181,616.0066927416998,616.2078049495814,616.4089171574632,616.6100293653449,616.8111415732267,617.0122537811084,617.2133659889901,617.4144781968718,617.6155904047534,617.8167026126353,618.017814820517,618.2189270283986,618.4200392362803,618.621151444162,618.8222636520438,619.0233758599255,619.2244880678072,619.425600275689,619.6267124835706,619.8278246914524,620.0289368993341,620.2300491072158,620.4311613150976,620.6322735229792,620.833385730861,621.0344979387427,621.2356101466244,621.4367223545062,621.6378345623879,621.8389467702696,622.0400589781513,622.241171186033,622.4422833939147,622.6433956017964,622.8445078096781,623.0456200175598,623.2467322254415,623.4478444333233,623.648956641205,623.8500688490868,624.0511810569684,624.2522932648501,624.4534054727319,624.6545176806136,624.8556298884954,625.056742096377,625.2578543042587,625.4589665121405,625.6600787200222,625.861190927904,626.0623031357857,626.2634153436672,626.464527551549,626.6656397594307,626.8667519673126,627.0678641751942,627.2689763830758,627.4700885909576,627.6712007988393,627.8723130067211,628.0734252146028,628.2745374224845,628.4756496303662,628.6767618382479,628.8778740461297,629.0789862540114,629.2800984618931,629.4812106697748,629.6823228776565,629.8834350855382,630.08454729342,630.2856595013017,630.4867717091835,630.687883917065,630.8889961249467,631.0901083328285,631.2912205407102,631.492332748592,631.6934449564736,631.8945571643553,632.0956693722371,632.2967815801188,632.4978937880006,632.6990059958823,632.9001182037639,633.1012304116457,633.3023426195274,633.5034548274092,633.7045670352909,633.9056792431725,634.1067914510543,634.307903658936,634.5090158668178,634.7101280746995,634.9112402825812,635.1123524904629,635.3134646983445,635.5145769062264,635.715689114108,635.9168013219897,636.1179135298714,636.3190257377531,636.5201379456349,636.7212501535166,636.9223623613983,637.1234745692801,637.3245867771617,637.5256989850435,637.7268111929252,637.9279234008069,638.1290356086887,638.3301478165703,638.5312600244521,638.7323722323338,638.9334844402155,639.1345966480973,639.335708855979,639.5368210638607,639.7379332717423,639.939045479624,640.1401576875058,640.3412698953875,640.5423821032692,640.7434943111509,640.9446065190326,641.1457187269144,641.3468309347961,641.5479431426779,641.7490553505595,641.9501675584412,642.151279766323,642.3523919742047,642.5535041820865,642.7546163899681,642.9557285978498,643.1568408057316,643.3579530136133,643.5590652214951,643.7601774293768,643.9612896372583,644.1624018451402,644.3635140530218,644.5646262609037,644.7657384687853,644.9668506766669,645.1679628845487,645.3690750924304,645.5701873003122,645.7712995081939,645.9724117160756,646.1735239239573,646.374636131839,646.5757483397208,646.7768605476025,646.9779727554842,647.1790849633659,647.3801971712476,647.5813093791294,647.7824215870111,647.9835337948928,648.1846460027746,648.3857582106561,648.586870418538,648.7879826264196,648.9890948343013,649.1902070421831,649.3913192500647,649.5924314579465,649.7935436658282,649.9946558737099,650.1957680815917,650.3968802894734,650.5979924973551,650.7991047052368,651.0002169131185,651.2013291210003,651.402441328882,651.6035535367637,651.8046657446454,652.0057779525271,652.2068901604089,652.4080023682906,652.6091145761724,652.810226784054,653.0113389919356,653.2124511998175,653.4135634076991,653.614675615581,653.8157878234625,654.0169000313442,654.218012239226,654.4191244471077,654.6202366549895,654.8213488628712,655.0224610707528,655.2235732786346,655.4246854865163,655.6257976943981,655.8269099022798,656.0280221101614,656.2291343180432,656.4302465259249,656.6313587338067,656.8324709416884,657.0335831495701,657.2346953574518,657.4358075653334,657.6369197732153,657.838031981097,658.0391441889786,658.2402563968603,658.441368604742,658.6424808126238,658.8435930205055,659.0447052283872,659.245817436269,659.4469296441506,659.6480418520324,659.8491540599141,660.0502662677958,660.2513784756776,660.4524906835592,660.653602891441,660.8547150993227,661.0558273072044,661.2569395150862,661.4580517229679,661.6591639308496,661.8602761387313,662.061388346613,662.2625005544947,662.4636127623764,662.6647249702581,662.8658371781398,663.0669493860215,663.2680615939033,663.469173801785,663.6702860096668,663.8713982175484,664.0725104254301,664.2736226333119,664.4747348411936,664.6758470490754,664.876959256957,665.0780714648387,665.2791836727205,665.4802958806022,665.681408088484,665.8825202963657,666.0836325042472,666.284744712129,666.4858569200107,666.6869691278926,666.8880813357742,667.0891935436558,667.2903057515376,667.4914179594193,667.692530167301,667.8936423751828,668.0947545830645,668.2958667909462,668.4969789988279,668.6980912067096,668.8992034145914,669.1003156224731,669.3014278303549,669.5025400382365,669.7036522461182,669.904764454,670.1058766618817,670.3069888697635,670.508101077645,670.7092132855267,670.9103254934085,671.1114377012902,671.312549909172,671.5136621170537,671.7147743249353,671.9158865328171,672.1169987406988,672.3181109485806,672.5192231564623,672.7203353643439,672.9214475722257,673.1225597801074,673.3236719879892,673.5247841958709,673.7258964037526,673.9270086116343,674.128120819516,674.3292330273978,674.5303452352795,674.7314574431612,674.9325696510429,675.1336818589245,675.3347940668064,675.535906274688,675.7370184825697,675.9381306904515,676.1392428983331,676.3403551062149,676.5414673140966,676.7425795219783,676.9436917298601,677.1448039377417,677.3459161456235,677.5470283535052,677.7481405613869,677.9492527692687,678.1503649771504,678.3514771850321,678.5525893929138,678.7537016007955,678.9548138086773,679.155926016559,679.3570382244407,679.5581504323223,679.759262640204,679.9603748480858,680.1614870559675,680.3625992638493,680.5637114717309,680.7648236796126,680.9659358874944,681.1670480953761,681.3681603032579,681.5692725111395,681.7703847190212,681.971496926903,682.1726091347847,682.3737213426665,682.5748335505482,682.7759457584298,682.9770579663116,683.1781701741933,683.3792823820751,683.5803945899568,683.7815067978383,683.9826190057202,684.1837312136018,684.3848434214837,684.5859556293653,684.787067837247,684.9881800451287,685.1892922530104,685.3904044608922,685.5915166687739,685.7926288766556,685.9937410845373,686.194853292419,686.3959655003008,686.5970777081825,686.7981899160642,686.999302123946,687.2004143318276,687.4015265397094,687.6026387475911,687.8037509554728,688.0048631633546,688.2059753712361,688.407087579118,688.6081997869996,688.8093119948813,689.0104242027631,689.2115364106448,689.4126486185265,689.6137608264082,689.8148730342899,690.0159852421717,690.2170974500534,690.4182096579351,690.6193218658168,690.8204340736985,691.0215462815803,691.222658489462,691.4237706973438,691.6248829052254,691.8259951131071,692.0271073209889,692.2282195288706,692.4293317367524,692.630443944634,692.8315561525156,693.0326683603975,693.2337805682791,693.434892776161,693.6360049840426,693.8371171919242,694.038229399806,694.2393416076877,694.4404538155695,694.6415660234512,694.8426782313328,695.0437904392146,695.2449026470963,695.4460148549781,695.6471270628598,695.8482392707415,696.0493514786232,696.2504636865049,696.4515758943867,696.6526881022684,696.8538003101501,697.0549125180318,697.2560247259134,697.4571369337953,697.658249141677,697.8593613495586,698.0604735574404,698.261585765322,698.4626979732038,698.6638101810855,698.8649223889672,699.066034596849,699.2671468047306,699.4682590126124,699.6693712204941,699.8704834283758,700.0715956362576,700.2727078441393,700.473820052021,700.6749322599027,700.8760444677844,701.0771566756662,701.2782688835479,701.4793810914296,701.6804932993113,701.881605507193,702.0827177150748,702.2838299229564,702.4849421308382,702.6860543387198,702.8871665466015,703.0882787544833,703.289390962365,703.4905031702468,703.6916153781284,703.8927275860101,704.0938397938919,704.2949520017736,704.4960642096554,704.6971764175371,704.8982886254187,705.0994008333005,705.3005130411822,705.501625249064,705.7027374569457,705.9038496648272,706.104961872709,706.3060740805907,706.5071862884724,706.7082984963542,706.9094107042359,707.1105229121176,707.3116351199993,707.512747327881,707.7138595357628,707.9149717436445,708.1160839515262,708.3171961594079,708.5183083672896,708.7194205751714,708.9205327830531,709.1216449909349,709.3227571988165,709.5238694066982,709.72498161458,709.9260938224617,710.1272060303435,710.328318238225,710.5294304461067,710.7305426539886,710.9316548618702,711.132767069752,711.3338792776337,711.5349914855153,711.7361036933971,711.9372159012788,712.1383281091606,712.3394403170423,712.5405525249239,712.7416647328057,712.9427769406874,713.1438891485692,713.3450013564509,713.5461135643326,713.7472257722143,713.948337980096,714.1494501879778,714.3505623958595,714.5516746037412,714.7527868116229,714.9538990195045,715.1550112273864,715.356123435268,715.5572356431497,715.7583478510315,715.9594600589131,716.1605722667949,716.3616844746766,716.5627966825583,716.7639088904401,716.9650210983217,717.1661333062035,717.3672455140852,717.5683577219669,717.7694699298487,717.9705821377304,718.1716943456121,718.3728065534938,718.5739187613755,718.7750309692573,718.976143177139,719.1772553850207,719.3783675929024,719.579479800784,719.7805920086658,719.9817042165475,720.1828164244293,720.3839286323109,720.5850408401926,720.7861530480744,720.9872652559561,721.1883774638379,721.3894896717195,721.5906018796012,721.791714087483,721.9928262953647,722.1939385032465,722.3950507111282,722.5961629190098,722.7972751268916,722.9983873347733,723.1994995426551,723.4006117505368,723.6017239584183,723.8028361663002,724.0039483741818,724.2050605820637,724.4061727899453,724.607284997827,724.8083972057087,725.0095094135904,725.2106216214722,725.4117338293539,725.6128460372356,725.8139582451173,726.015070452999,726.2161826608808,726.4172948687625,726.6184070766442,726.819519284526,727.0206314924076,727.2217437002894,727.4228559081711,727.6239681160528,727.8250803239346,728.0261925318162,728.227304739698,728.4284169475796,728.6295291554613,728.8306413633431,729.0317535712248,729.2328657791065,729.4339779869882,729.6350901948699,729.8362024027517,730.0373146106334,730.2384268185151,730.4395390263968,730.6406512342785,730.8417634421603,731.042875650042,731.2439878579238,731.4451000658054,731.6462122736871,731.8473244815689,732.0484366894506,732.2495488973324,732.450661105214,732.6517733130956,732.8528855209775,733.0539977288591,733.255109936741,733.4562221446226,733.6573343525042,733.858446560386,734.0595587682677,734.2606709761495,734.4617831840312,734.6628953919128,734.8640075997946,735.0651198076763,735.2662320155581,735.4673442234398,735.6684564313215,735.8695686392032,736.0706808470849,736.2717930549667,736.4729052628484,736.6740174707301,736.8751296786118,737.0762418864934,737.2773540943753,737.478466302257,737.6795785101386,737.8806907180204,738.081802925902,738.2829151337838,738.4840273416655,738.6851395495472,738.886251757429,739.0873639653106,739.2884761731924,739.4895883810741,739.6907005889558,739.8918127968376,740.0929250047193,740.294037212601,740.4951494204827,740.6962616283644,740.8973738362462,741.0984860441279,741.2995982520094,741.5007104598913,741.701822667773,741.9029348756548,742.1040470835364,742.3051592914182,742.5062714992998,742.7073837071815,742.9084959150633,743.109608122945,743.3107203308268,743.5118325387084,743.7129447465901,743.9140569544719,744.1151691623536,744.3162813702354,744.5173935781171,744.7185057859987,744.9196179938805,745.1207302017622,745.3218424096439,745.5229546175257,745.7240668254072,745.925179033289,746.1262912411707,746.3274034490524,746.5285156569342,746.7296278648159,746.9307400726976,747.1318522805793,747.332964488461,747.5340766963428,747.7351889042245,747.9363011121062,748.1374133199879,748.3385255278696,748.5396377357514,748.7407499436331,748.9418621515149,749.1429743593965,749.3440865672782,749.54519877516,749.7463109830417,749.9474231909235,750.148535398805,750.3496476066867,750.5507598145686,750.7518720224502,750.952984230332,751.1540964382137,751.3552086460953,751.5563208539771,751.7574330618588,751.9585452697406,752.1596574776223,752.3607696855039,752.5618818933857,752.7629941012674,752.9641063091492,753.1652185170309,753.3663307249126,753.5674429327943,753.768555140676,753.9696673485578,754.1707795564395,754.3718917643212,754.5730039722029,754.7741161800845,754.9752283879664,755.176340595848,755.3774528037297,755.5785650116115,755.7796772194931,755.9807894273749,756.1819016352566,756.3830138431383,756.5841260510201,756.7852382589017,756.9863504667835,757.1874626746652,757.3885748825469,757.5896870904287,757.7907992983104,757.9919115061921,758.1930237140738,758.3941359219555,758.5952481298373,758.796360337719,758.9974725456007,759.1985847534824,759.399696961364,759.6008091692458,759.8019213771275,760.0030335850093,760.2041457928909,760.4052580007726,760.6063702086544,760.8074824165361,761.0085946244179,761.2097068322995,761.4108190401812,761.611931248063,761.8130434559447,762.0141556638265,762.2152678717082,762.4163800795898,762.6174922874716,762.8186044953533,763.0197167032351,763.2208289111168,763.4219411189983,763.6230533268802,763.8241655347618,764.0252777426437,764.2263899505253,764.427502158407,764.6286143662887,764.8297265741704,765.0308387820522,765.2319509899339,765.4330631978156,765.6341754056973,765.835287613579,766.0363998214608,766.2375120293425,766.4386242372242,766.639736445106,766.8408486529876,767.0419608608694,767.2430730687511,767.4441852766328,767.6452974845146,767.8464096923962,768.047521900278,768.2486341081596,768.4497463160413,768.6508585239231,768.8519707318048,769.0530829396865,769.2541951475682,769.4553073554499,769.6564195633317,769.8575317712134,770.0586439790951,770.2597561869768,770.4608683948585,770.6619806027403,770.863092810622,771.0642050185038,771.2653172263854,771.4664294342671,771.6675416421489,771.8686538500306,772.0697660579124,772.270878265794,772.4719904736756,772.6731026815575,772.8742148894391,773.075327097321,773.2764393052026,773.4775515130842,773.678663720966,773.8797759288477,774.0808881367295,774.2820003446112,774.4831125524929,774.6842247603746,774.8853369682563,775.0864491761381,775.2875613840198,775.4886735919015,775.6897857997832,775.8908980076649,776.0920102155467,776.2931224234284,776.4942346313101,776.6953468391919,776.8964590470734,777.0975712549553,777.298683462837,777.4997956707186,777.7009078786004,777.902020086482,778.1031322943638,778.3042445022455,778.5053567101272,778.706468918009,778.9075811258907,779.1086933337724,779.3098055416541,779.5109177495358,779.7120299574176,779.9131421652993,780.1142543731809,780.3153665810627,780.5164787889444,780.7175909968262,780.9187032047079,781.1198154125897,781.3209276204713,781.522039828353,781.7231520362348,781.9242642441164,782.1253764519982,782.3264886598798,782.5276008677615,782.7287130756433,782.929825283525,783.1309374914067,783.3320496992885,783.5331619071701,783.7342741150519,783.9353863229336,784.1364985308153,784.3376107386971,784.5387229465787,784.7398351544605,784.9409473623422,785.1420595702239,785.3431717781057,785.5442839859874,785.745396193869,785.9465084017507,786.1476206096324,786.3487328175142,786.5498450253959,786.7509572332776,786.9520694411593,787.153181649041,787.3542938569228,787.5554060648045,787.7565182726863,787.9576304805679,788.1587426884496,788.3598548963314,788.5609671042131,788.7620793120949,788.9631915199765,789.1643037278582,789.36541593574,789.5665281436217,789.7676403515035,789.9687525593852,790.1698647672667,790.3709769751486,790.5720891830302,790.773201390912,790.9743135987937,791.1754258066753,791.3765380145571,791.5776502224388,791.7787624303206,791.9798746382023,792.180986846084,792.3820990539657,792.5832112618474,792.7843234697292,792.9854356776109,793.1865478854926,793.3876600933743,793.588772301256,793.7898845091378,793.9909967170195,794.1921089249012,794.393221132783,794.5943333406645,794.7954455485464,794.996557756428,795.1976699643097,795.3987821721915,795.5998943800731,795.8010065879549,796.0021187958366,796.2032310037183,796.4043432116001,796.6054554194818,796.8065676273635,797.0076798352452,797.2087920431269,797.4099042510087,797.6110164588904,797.8121286667721,798.0132408746538,798.2143530825355,798.4154652904173,798.616577498299,798.8176897061808,799.0188019140624,799.219914121944,799.4210263298258,799.6221385377075,799.8232507455893,800.0243629534709,800.2254751613526,800.4265873692344,800.6276995771161,800.8288117849979,801.0299239928796,801.2310362007612,801.432148408643,801.6332606165247,801.8343728244065,802.0354850322882,802.2365972401698,802.4377094480516,802.6388216559333,802.8399338638151,803.0410460716968,803.2421582795785,803.4432704874602,803.6443826953418,803.8454949032237,804.0466071111053,804.247719318987]}
},{}],24:[function(require,module,exports){
(function (__filename){
'use strict';

// MODULES //

var tape = require( 'tape' );
var isnan = require( '@stdlib/math/base/assert/is-nan' );
var abs = require( '@stdlib/math/base/special/abs' );
var PINF = require( '@stdlib/math/constants/float64-pinf' );
var NINF = require( '@stdlib/math/constants/float64-ninf' );
var EPS = require( '@stdlib/math/constants/float64-eps' );
var cos = require( './../lib' );


// FIXTURES //

var mediumNegative = require( './fixtures/julia/medium_negative.json' );
var mediumPositive = require( './fixtures/julia/medium_positive.json' );
var largeNegative = require( './fixtures/julia/large_negative.json' );
var largePositive = require( './fixtures/julia/large_positive.json' );
var hugeNegative = require( './fixtures/julia/huge_negative.json' );
var hugePositive = require( './fixtures/julia/huge_positive.json' );


// TESTS //

tape( 'main export is a function', function test( t ) {
	t.ok( true, __filename );
	t.equal( typeof cos, 'function', 'main export is a function' );
	t.end();
});

tape( 'the function computes the cosine (for -256*pi < x < 0 )', function test( t ) {
	var expected;
	var delta;
	var tol;
	var x;
	var y;
	var i;

	x = mediumNegative.x;
	expected = mediumNegative.expected;

	for ( i = 0; i < x.length; i++ ) {
		y = cos( x[i] );
		if ( y === expected[ i ] ) {
			t.equal( y, expected[ i ], 'x: '+x[i]+'. Expected: '+expected[i] );
		} else {
			delta = abs( y - expected[i] );
			tol = EPS * abs( expected[i] );
			t.ok( delta <= tol, 'within tolerance. x: '+x[i]+'. Value: '+y+'. Expected: '+expected[i]+'. Tolerance: '+tol+'.' );
		}
	}

	t.end();
});

tape( 'the function computes the cosine (for 0 < x < 256*pi )', function test( t ) {
	var expected;
	var delta;
	var tol;
	var x;
	var y;
	var i;

	x = mediumPositive.x;
	expected = mediumPositive.expected;

	for ( i = 0; i < x.length; i++ ) {
		y = cos( x[i] );
		if ( y === expected[ i ] ) {
			t.equal( y, expected[ i ], 'x: '+x[i]+'. Expected: '+expected[i] );
		} else {
			delta = abs( y - expected[i] );
			tol = EPS * abs( expected[i] );
			t.ok( delta <= tol, 'within tolerance. x: '+x[i]+'. Value: '+y+'. Expected: '+expected[i]+'. Tolerance: '+tol+'.' );
		}
	}

	t.end();
});

tape( 'the function computes the cosine (for -2**60 (pi/2) < x < -2**20 (pi/2) )', function test( t ) {
	var expected;
	var delta;
	var tol;
	var x;
	var y;
	var i;

	x = largeNegative.x;
	expected = largeNegative.expected;

	for ( i = 0; i < x.length; i++ ) {
		y = cos( x[i] );
		if ( y === expected[ i ] ) {
			t.equal( y, expected[ i ], 'x: '+x[i]+'. Expected: '+expected[i] );
		} else {
			delta = abs( y - expected[i] );
			tol = EPS * abs( expected[i] );
			t.ok( delta <= tol, 'within tolerance. x: '+x[i]+'. Value: '+y+'. Expected: '+expected[i]+'. Tolerance: '+tol+'.' );
		}
	}

	t.end();
});

tape( 'the function computes the cosine (for 2**20 (pi/2) < x < 2**60 (pi/2) )', function test( t ) {
	var expected;
	var delta;
	var tol;
	var x;
	var y;
	var i;

	x = largePositive.x;
	expected = largePositive.expected;

	for ( i = 0; i < x.length; i++ ) {
		y = cos( x[i] );
		if ( y === expected[ i ] ) {
			t.equal( y, expected[ i ], 'x: '+x[i]+'. Expected: '+expected[i] );
		} else {
			delta = abs( y - expected[i] );
			tol = EPS * abs( expected[i] );
			t.ok( delta <= tol, 'within tolerance. x: '+x[i]+'. Value: '+y+'. Expected: '+expected[i]+'. Tolerance: '+tol+'.' );
		}
	}

	t.end();
});

tape( 'the function computes the cosine (for x <= -2**60 (PI/2) )', function test( t ) {
	var expected;
	var delta;
	var tol;
	var x;
	var y;
	var i;

	x = hugeNegative.x;
	expected = hugeNegative.expected;

	for ( i = 0; i < x.length; i++ ) {
		y = cos( x[i] );
		if ( y === expected[ i ] ) {
			t.equal( y, expected[ i ], 'x: '+x[i]+'. Expected: '+expected[i] );
		} else {
			delta = abs( y - expected[i] );
			tol = EPS * abs( expected[i] );
			t.ok( delta <= tol, 'within tolerance. x: '+x[i]+'. Value: '+y+'. Expected: '+expected[i]+'. Tolerance: '+tol+'.' );
		}
	}

	t.end();
});

tape( 'the function computes the cosine (for x >= 2**60 (PI/2) )', function test( t ) {
	var expected;
	var delta;
	var tol;
	var x;
	var y;
	var i;

	x = hugePositive.x;
	expected = hugePositive.expected;

	for ( i = 0; i < x.length; i++ ) {
		y = cos( x[i] );
		if ( y === expected[ i ] ) {
			t.equal( y, expected[ i ], 'x: '+x[i]+'. Expected: '+expected[i] );
		} else {
			delta = abs( y - expected[i] );
			tol = EPS * abs( expected[i] );
			t.ok( delta <= tol, 'within tolerance. x: '+x[i]+'. Value: '+y+'. Expected: '+expected[i]+'. Tolerance: '+tol+'.' );
		}
	}

	t.end();
});

tape( 'the function returns `NaN` if provided a `NaN`', function test( t ) {
	var v = cos( NaN );
	t.equal( isnan( v ), true, 'returns NaN' );
	t.end();
});

tape( 'the function returns `NaN` if provided a `+infinity`', function test( t ) {
	var v = cos( PINF );
	t.equal( isnan( v ), true, 'returns NaN' );
	t.end();
});

tape( 'the function returns `NaN` if provided a `-infinity`', function test( t ) {
	var v = cos( NINF );
	t.equal( isnan( v ), true, 'returns NaN' );
	t.end();
});

}).call(this,"/lib/node_modules/@stdlib/math/base/special/cos/test/test.js")
},{"./../lib":14,"./fixtures/julia/huge_negative.json":18,"./fixtures/julia/huge_positive.json":19,"./fixtures/julia/large_negative.json":20,"./fixtures/julia/large_positive.json":21,"./fixtures/julia/medium_negative.json":22,"./fixtures/julia/medium_positive.json":23,"@stdlib/math/base/assert/is-nan":6,"@stdlib/math/base/special/abs":9,"@stdlib/math/constants/float64-eps":47,"@stdlib/math/constants/float64-ninf":53,"@stdlib/math/constants/float64-pinf":54,"tape":110}],25:[function(require,module,exports){
'use strict';

// TODO: implementation (?)

/**
* Rounds a numeric value toward negative infinity.
*
* @param {number} x - input value
* @returns {number} rounded value
*
* @example
* var v = floor( -4.2 );
* // returns -5.0
*
* @example
* var v = floor( 9.99999 );
* // returns 9.0
*
* @example
* var v = floor( 0.0 );
* // returns 0.0
*
* @example
* var v = floor( NaN );
* // returns NaN
*/
var floor = Math.floor;


// EXPORTS //

module.exports = floor;

},{}],26:[function(require,module,exports){
'use strict';

/**
* Round a numeric value toward negative infinity.
*
* @module @stdlib/math/base/special/floor
*
* @example
* var floor = require( '@stdlib/math/base/special/floor' );
*
* var v = floor( -4.2 );
* // returns -5.0
*
* v = floor( 9.99999 );
* // returns 9.0
*
* v = floor( 0.0 );
* // returns 0.0
*
* v = floor( NaN );
* // returns NaN
*/

// MODULES //

var floor = require( './floor.js' );


// EXPORTS //

module.exports = floor;

},{"./floor.js":25}],27:[function(require,module,exports){
'use strict';

/**
* Multiply a double-precision floating-point number by an integer power of two.
*
* @module @stdlib/math/base/special/ldexp
*
* @example
* var ldexp = require( '@stdlib/math/base/special/ldexp' );
*
* var x = ldexp( 0.5, 3 ); // => 0.5 * 2^3 = 0.5 * 8
* // returns 4.0
*
* x = ldexp( 4.0, -2 ); // => 4 * 2^(-2) = 4 * (1/4)
* // returns 1.0
*
* x = ldexp( 0.0, 20 );
* // returns 0.0
*
* x = ldexp( -0.0, 39 );
* // returns -0.0
*
* x = ldexp( NaN, -101 );
* // returns NaN
*
* x = ldexp( Number.POSITIVE_INFINITY, 11 );
* // returns Number.POSITIVE_INFINITY
*
* x = ldexp( Number.NEGATIVE_INFINITY, -118 );
* // returns Number.NEGATIVE_INFINITY
*/

// MODULES //

var ldexp = require( './ldexp.js' );


// EXPORTS //

module.exports = ldexp;

},{"./ldexp.js":28}],28:[function(require,module,exports){
'use strict';

// NOTES //

/*
* => ldexp: load exponent (see [The Open Group]{@link http://pubs.opengroup.org/onlinepubs/9699919799/functions/ldexp.html} and [cppreference]{@link http://en.cppreference.com/w/c/numeric/math/ldexp}).
*/


// MODULES //

var PINF = require( '@stdlib/math/constants/float64-pinf' );
var NINF = require( '@stdlib/math/constants/float64-ninf' );
var BIAS = require( '@stdlib/math/constants/float64-exponent-bias' );
var MAX_EXPONENT = require( '@stdlib/math/constants/float64-max-base2-exponent' );
var MAX_SUBNORMAL_EXPONENT = require( '@stdlib/math/constants/float64-max-base2-exponent-subnormal' );
var MIN_SUBNORMAL_EXPONENT = require( '@stdlib/math/constants/float64-min-base2-exponent-subnormal' );
var isnan = require( '@stdlib/math/base/assert/is-nan' );
var isInfinite = require( '@stdlib/math/base/assert/is-infinite' );
var copysign = require( '@stdlib/math/base/special/copysign' );
var normalize = require( '@stdlib/math/base/utils/float64-normalize' );
var floatExp = require( '@stdlib/math/base/utils/float64-exponent' );
var toWords = require( '@stdlib/math/base/utils/float64-to-words' );
var fromWords = require( '@stdlib/math/base/utils/float64-from-words' );


// VARIABLES //

// 1/(1<<52) = 1/(2**52) = 1/4503599627370496
var TWO52_INV = 2.220446049250313e-16;

// Exponent all 0s: 1 00000000000 11111111111111111111
var CLEAR_EXP_MASK = 0x800fffff; // 2148532223


// MAIN //

/**
* Multiplies a double-precision floating-point number by an integer power of two.
*
* @param {number} frac - fraction
* @param {integer} exp - exponent
* @returns {number} double-precision floating-point number
*
* @example
* var x = ldexp( 0.5, 3 ); // => 0.5 * 2^3 = 0.5 * 8
* // returns 4.0
*
* @example
* var x = ldexp( 4.0, -2 ); // => 4 * 2^(-2) = 4 * (1/4)
* // returns 1.0
*
* @example
* var x = ldexp( 0.0, 20 );
* // returns 0.0
*
* @example
* var x = ldexp( -0.0, 39 );
* // returns -0.0
*
* @example
* var x = ldexp( NaN, -101 );
* // returns NaN
*
* @example
* var x = ldexp( Number.POSITIVE_INFINITY, 11 );
* // returns Number.POSITIVE_INFINITY
*
* @example
* var x = ldexp( Number.NEGATIVE_INFINITY, -118 );
* // returns Number.NEGATIVE_INFINITY
*/
function ldexp( frac, exp ) {
	var high;
	var tmp;
	var w;
	var m;
	if (
		frac === 0.0 || // handles +-0
		isnan( frac ) ||
		isInfinite( frac )
	) {
		return frac;
	}
	// Normalize the input fraction:
	tmp = normalize( frac );
	frac = tmp[ 0 ];
	exp += tmp[ 1 ];

	// Extract the exponent from `frac` and add it to `exp`:
	exp += floatExp( frac );

	// Check for underflow/overflow...
	if ( exp < MIN_SUBNORMAL_EXPONENT ) {
		return copysign( 0.0, frac );
	}
	if ( exp > MAX_EXPONENT ) {
		if ( frac < 0.0 ) {
			return NINF;
		}
		return PINF;
	}
	// Check for a subnormal and scale accordingly to retain precision...
	if ( exp <= MAX_SUBNORMAL_EXPONENT ) {
		exp += 52;
		m = TWO52_INV;
	} else {
		m = 1.0;
	}
	// Split the fraction into higher and lower order words:
	w = toWords( frac );
	high = w[ 0 ];

	// Clear the exponent bits within the higher order word:
	high &= CLEAR_EXP_MASK;

	// Set the exponent bits to the new exponent:
	high |= ((exp+BIAS) << 20);

	// Create a new floating-point number:
	return m * fromWords( high, w[ 1 ] );
} // end FUNCTION ldexp()


// EXPORTS //

module.exports = ldexp;

},{"@stdlib/math/base/assert/is-infinite":4,"@stdlib/math/base/assert/is-nan":6,"@stdlib/math/base/special/copysign":11,"@stdlib/math/base/utils/float64-exponent":32,"@stdlib/math/base/utils/float64-from-words":34,"@stdlib/math/base/utils/float64-normalize":42,"@stdlib/math/base/utils/float64-to-words":44,"@stdlib/math/constants/float64-exponent-bias":48,"@stdlib/math/constants/float64-max-base2-exponent":51,"@stdlib/math/constants/float64-max-base2-exponent-subnormal":50,"@stdlib/math/constants/float64-min-base2-exponent-subnormal":52,"@stdlib/math/constants/float64-ninf":53,"@stdlib/math/constants/float64-pinf":54}],29:[function(require,module,exports){
'use strict';

// TODO: implementation

/**
* Round a numeric value to the nearest integer.
*
* @module @stdlib/math/base/special/round
*
* @example
* var round = require( '@stdlib/math/base/special/round' );
*
* var v = round( -4.2 );
* // returns -4.0
*
* v = round( -4.5 );
* // returns -4.0
*
* v = round( -4.6 );
* // returns -5.0
*
* v = round( 9.99999 );
* // returns 10.0
*
* v = round( 9.5 );
* // returns 10.0
*
* v = round( 9.2 );
* // returns 9.0
*
* v = round( 0.0 );
* // returns 0.0
*
* v = round( -0.0 );
* // returns -0.0
*
* v = round( Number.POSITIVE_INFINITY );
* // returns Number.POSITIVE_INFINITY
*
* v = round( Number.NEGATIVE_INFINITY );
* // returns Number.NEGATIVE_INFINITY
*
* v = round( NaN );
* // returns NaN
*/

// MODULES //

var round = require( './round.js' );


// EXPORTS //

module.exports = round;

},{"./round.js":30}],30:[function(require,module,exports){
'use strict';

// TODO: implementation

/**
* Rounds a numeric value to the nearest integer.
*
* @param {number} x - input value
* @returns {number} function value
*
* @example
* var v = round( -4.2 );
* // returns -4.0
*
* @example
* var v = round( -4.5 );
* // returns -4.0
*
* @example
* var v = round( -4.6 );
* // returns -5.0
*
* @example
* var v = round( 9.99999 );
* // returns 10.0
*
* @example
* var v = round( 9.5 );
* // returns 10.0
*
* @example
* var v = round( 9.2 );
* // returns 9.0
*
* @example
* var v = round( 0.0 );
* // returns 0.0
*
* @example
* var v = round( -0.0 );
* // returns -0.0
*
* @example
* var v = round( Number.POSITIVE_INFINITY );
* // returns Number.POSITIVE_INFINITY
*
* @example
* var v = round( Number.NEGATIVE_INFINITY );
* // returns Number.NEGATIVE_INFINITY
*
* @example
* var v = round( NaN );
* // returns NaN
*/
var round = Math.round;


// EXPORTS //

module.exports = round;

},{}],31:[function(require,module,exports){
'use strict';

// MODULES //

var getHighWord = require( '@stdlib/math/base/utils/float64-get-high-word' );
var EXP_MASK = require( '@stdlib/math/constants/float64-high-word-exponent-mask' );
var BIAS = require( '@stdlib/math/constants/float64-exponent-bias' );


// MAIN //

/**
* Returns an integer corresponding to the unbiased exponent of a double-precision floating-point number.
*
* @param {number} x - input value
* @returns {integer32} unbiased exponent
*
* @example
* var exp = exponent( 3.14e-307 ); // => 2**-1019 ~ 1e-307
* // returns -1019
* @example
* var exp = exponent( -3.14 );
* // returns 1
* @example
* var exp = exponent( 0.0 );
* // returns 0
* @example
* var exp = exponent( NaN );
* // returns 1024
*/
function exponent( x ) {
	// Extract from the input value a higher order word (unsigned 32-bit integer) which contains the exponent:
	var high = getHighWord( x );

	// Apply a mask to isolate only the exponent bits and then shift off all bits which are part of the fraction:
	high = ( high & EXP_MASK ) >>> 20;

	// Remove the bias and return:
	return high - BIAS;
} // end FUNCTION exponent()


// EXPORTS //

module.exports = exponent;

},{"@stdlib/math/base/utils/float64-get-high-word":38,"@stdlib/math/constants/float64-exponent-bias":48,"@stdlib/math/constants/float64-high-word-exponent-mask":49}],32:[function(require,module,exports){
'use strict';

/**
* Return an integer corresponding to the unbiased exponent of a double-precision floating-point number.
*
* @module @stdlib/math/base/utils/float64-exponent
*
* @example
* var exponent = require( '@stdlib/math/base/utils/float64-exponent );
*
* var exp = exponent( 3.14e-307 ); // => 2**-1019 ~ 1e-307
* // returns -1019
*
* exp = exponent( -3.14 );
* // returns 1
*
* exp = exponent( 0.0 );
* // returns 0
*
* exp = exponent( NaN );
* // returns 1024
*/

// MODULES //

var exponent = require( './exponent.js' );


// EXPORTS //

module.exports = exponent;

},{"./exponent.js":31}],33:[function(require,module,exports){
'use strict';

// MODULES //

var indices = require( './indices.js' );


// VARIABLES //

var FLOAT64_VIEW = new Float64Array( 1 );
var UINT32_VIEW = new Uint32Array( FLOAT64_VIEW.buffer );

var HIGH = indices.HIGH;
var LOW = indices.LOW;


// MAIN //

/**
* Creates a double-precision floating-point number from a higher order word (unsigned 32-bit integer) and a lower order word (unsigned 32-bit integer).
*
* #### Notes
*
* ``` text
* float64 (64 bits)
* f := fraction (significand/mantissa) (52 bits)
* e := exponent (11 bits)
* s := sign bit (1 bit)
*
* |-------- -------- -------- -------- -------- -------- -------- --------|
* |                                Float64                                |
* |-------- -------- -------- -------- -------- -------- -------- --------|
* |              Uint32               |               Uint32              |
* |-------- -------- -------- -------- -------- -------- -------- --------|
* ```
*
* If little endian (more significant bits last):
*
* ``` text
*                         <-- lower      higher -->
* |   f7       f6       f5       f4       f3       f2    e2 | f1 |s|  e1  |
* ```
*
* If big endian (more significant bits first):
*
* ``` text
*                         <-- higher      lower -->
* |s| e1    e2 | f1     f2       f3       f4       f5        f6      f7   |
* ```
*
*
* In which Uint32 should we place the higher order bits? If little endian, the second; if big endian, the first.
*
*
* #### References
*
* * [Open Group]{@link http://pubs.opengroup.org/onlinepubs/9629399/chap14.htm}
*
*
* @param {uinteger32} high - higher order word (unsigned 32-bit integer)
* @param {uinteger32} low - lower order word (unsigned 32-bit integer)
* @returns {number} floating-point number
*
* @example
* var v = fromWords( 1774486211, 2479577218 );
* // returns 3.14e201
* @example
* var v = fromWords( 3221823995, 1413754136 );
* // returns 3.141592653589793
* @example
* var v = fromWords( 0, 0 );
* // returns 0.0
* @example
* var v = fromWords( 2147483648, 0 );
* // returns -0.0
* @example
* var v = fromWords( 2146959360, 0 );
* // returns NaN
* @example
* var v = fromWords( 2146435072, 0 );
* // returns Number.POSITIVE_INFINITY
* @example
* var v = fromWords( 4293918720, 0 );
* // returns Number.NEGATIVE_INFINITY
*/
function fromWords( high, low ) {
	UINT32_VIEW[ HIGH ] = high;
	UINT32_VIEW[ LOW ] = low;
	return FLOAT64_VIEW[ 0 ];
} // end FUNCTION fromWords()


// EXPORTS //

module.exports = fromWords;

},{"./indices.js":35}],34:[function(require,module,exports){
'use strict';

/**
* Create a double-precision floating-point number from a higher order word (unsigned 32-bit integer) and a lower order word (unsigned 32-bit integer).
*
* @module @stdlib/math/base/utils/float64-from-words
*
* @example
* var fromWords = require( '@stdlib/math/base/utils/float64-from-words' );
*
* var v = fromWords( 1774486211, 2479577218 );
* // returns 3.14e201
*
* v = fromWords( 3221823995, 1413754136 );
* // returns 3.141592653589793
*
* v = fromWords( 0, 0 );
* // returns 0.0
*
* v = fromWords( 2147483648, 0 );
* // returns -0.0
*
* v = fromWords( 2146959360, 0 );
* // returns NaN
*
* v = fromWords( 2146435072, 0 );
* // returns Number.POSITIVE_INFINITY
*
* v = fromWords( 4293918720, 0 );
* // returns Number.NEGATIVE_INFINITY
*/

// MODULES //

var fromWords = require( './from_words.js' );


// EXPORTS //

module.exports = fromWords;

},{"./from_words.js":33}],35:[function(require,module,exports){
'use strict';

// MODULES //

var isLittleEndian = require( '@stdlib/assert/is-little-endian' );


// MAIN //

var HIGH;
var LOW;

if ( isLittleEndian === true ) {
	HIGH = 1; // second index
	LOW = 0; // first index
} else {
	HIGH = 0; // first index
	LOW = 1; // second index
}


// EXPORTS //

module.exports = {
	'HIGH': HIGH,
	'LOW': LOW
};

},{"@stdlib/assert/is-little-endian":2}],36:[function(require,module,exports){
'use strict';

// MODULES //

var HIGH = require( './high.js' );


// VARIABLES //

var FLOAT64_VIEW = new Float64Array( 1 );
var UINT32_VIEW = new Uint32Array( FLOAT64_VIEW.buffer );


// MAIN //

/**
* Returns an unsigned 32-bit integer corresponding to the more significant 32 bits of a double-precision floating-point number.
*
* #### Notes
*
* ``` text
* float64 (64 bits)
* f := fraction (significand/mantissa) (52 bits)
* e := exponent (11 bits)
* s := sign bit (1 bit)
*
* |-------- -------- -------- -------- -------- -------- -------- --------|
* |                                Float64                                |
* |-------- -------- -------- -------- -------- -------- -------- --------|
* |              Uint32               |               Uint32              |
* |-------- -------- -------- -------- -------- -------- -------- --------|
* ```
*
* If little endian (more significant bits last):
*
* ``` text
*                         <-- lower      higher -->
* |   f7       f6       f5       f4       f3       f2    e2 | f1 |s|  e1  |
* ```
*
* If big endian (more significant bits first):
*
* ``` text
*                         <-- higher      lower -->
* |s| e1    e2 | f1     f2       f3       f4       f5        f6      f7   |
* ```
*
* In which Uint32 can we find the higher order bits? If little endian, the second; if big endian, the first.
*
*
* #### References
*
* * [Open Group]{@link http://pubs.opengroup.org/onlinepubs/9629399/chap14.htm}
*
*
* @param {number} x - input value
* @returns {uinteger32} higher order word
*
* @example
* var w = getHighWord( 3.14e201 ); // => 01101001110001001000001011000011
* // returns 1774486211
*/
function getHighWord( x ) {
	FLOAT64_VIEW[ 0 ] = x;
	return UINT32_VIEW[ HIGH ];
} // end FUNCTION getHighWord()


// EXPORTS //

module.exports = getHighWord;

},{"./high.js":37}],37:[function(require,module,exports){
'use strict';

// MODULES //

var isLittleEndian = require( '@stdlib/assert/is-little-endian' );


// MAIN //

var HIGH;
if ( isLittleEndian === true ) {
	HIGH = 1; // second index
} else {
	HIGH = 0; // first index
}


// EXPORTS //

module.exports = HIGH;

},{"@stdlib/assert/is-little-endian":2}],38:[function(require,module,exports){
'use strict';

/**
* Return an unsigned 32-bit integer corresponding to the more significant 32 bits of a double-precision floating-point number.
*
* @module @stdlib/math/base/utils/float64-get-high-word
*
* @example
* var getHighWord = require( '@stdlib/math/base/utils/float64-get-high-word' );
*
* var w = getHighWord( 3.14e201 ); // => 01101001110001001000001011000011
* // returns 1774486211
*/

// MODULES //

var getHighWord = require( './get_high_word.js' );


// EXPORTS //

module.exports = getHighWord;

},{"./get_high_word.js":36}],39:[function(require,module,exports){
'use strict';

// MODULES //

var LOW = require( './low.js' );


// VARIABLES //

var FLOAT64_VIEW = new Float64Array( 1 );
var UINT32_VIEW = new Uint32Array( FLOAT64_VIEW.buffer );


// MAIN //

/**
* Returns a 32-bit unsigned integer corresponding to the less significant 32 bits of a double-precision floating-point number.
*
* #### Notes
*
* ``` text
* float64 (64 bits)
* f := fraction (significand/mantissa) (52 bits)
* e := exponent (11 bits)
* s := sign bit (1 bit)
*
* |-------- -------- -------- -------- -------- -------- -------- --------|
* |                                Float64                                |
* |-------- -------- -------- -------- -------- -------- -------- --------|
* |              Uint32               |               Uint32              |
* |-------- -------- -------- -------- -------- -------- -------- --------|
* ```
*
* If little endian (more significant bits last):
*
* ``` text
*                         <-- lower      higher -->
* |   f7       f6       f5       f4       f3       f2    e2 | f1 |s|  e1  |
* ```
*
* If big endian (more significant bits first):
*
* ``` text
*                         <-- higher      lower -->
* |s| e1    e2 | f1     f2       f3       f4       f5        f6      f7   |
* ```
*
* In which Uint32 can we find the lower order bits? If little endian, the first; if big endian, the second.
*
*
* #### References
*
* * [Open Group]{@link http://pubs.opengroup.org/onlinepubs/9629399/chap14.htm}
*
*
* @param {number} x - input value
* @returns {uinteger32} lower order word
*
* @example
* var w = getLowWord( 3.14e201 ); // => 10010011110010110101100010000010
* // returns 2479577218
*/
function getLowWord( x ) {
	FLOAT64_VIEW[ 0 ] = x;
	return UINT32_VIEW[ LOW ];
} // end FUNCTION getLowWord()


// EXPORTS //

module.exports = getLowWord;

},{"./low.js":41}],40:[function(require,module,exports){
'use strict';

/**
* Returns an unsigned 32-bit integer corresponding to the less significant 32 bits of a double-precision floating-point number.
*
* @module @stdlib/math/base/utils/float64-get-low-word
*
* @example
* var getLowWord = require( '@stdlib/math/base/utils/float64-get-low-word' );
*
* var w = getLowWord( 3.14e201 ); // => 10010011110010110101100010000010
* // returns 2479577218
*/

// MODULES //

var getLowWord = require( './get_low_word.js' );


// EXPORTS //

module.exports = getLowWord;

},{"./get_low_word.js":39}],41:[function(require,module,exports){
'use strict';

// MODULES //

var isLittleEndian = require( '@stdlib/assert/is-little-endian' );


// MAIN //

var LOW;
if ( isLittleEndian === true ) {
	LOW = 0; // first index
} else {
	LOW = 1; // second index
}


// EXPORTS //

module.exports = LOW;

},{"@stdlib/assert/is-little-endian":2}],42:[function(require,module,exports){
'use strict';

/**
* Returns a normal number `y` and exponent `exp` satisfying \\(x = y \cdot 2^\mathrm{exp}\\).
*
* @module @stdlib/math/base/utils/float64-normalize
*
* @example
* var normalize = require( '@stdlib/math/base/utils/float64-normalize' );
* var pow = require( '@stdlib/math/base/special/pow' );
*
* var out = normalize( 3.14e-319 );
* // returns [ 1.4141234400356668e-303, -52 ]
*
* var y = out[ 0 ];
* var exp = out[ 1 ];
*
* var bool = ( y*pow(2.0,exp) === 3.14e-319 );
* // returns true
*/

// MODULES //

var normalize = require( './normalize.js' );


// EXPORTS //

module.exports = normalize;

},{"./normalize.js":43}],43:[function(require,module,exports){
'use strict';

// MODULES //

var FLOAT64_SMALLEST_NORMAL = require( '@stdlib/math/constants/float64-smallest-normal' );
var isInfinite = require( '@stdlib/math/base/assert/is-infinite' );
var isnan = require( '@stdlib/math/base/assert/is-nan' );
var abs = require( '@stdlib/math/base/special/abs' );


// VARIABLES //

// (1<<52)
var SCALAR = 4503599627370496;


// MAIN //

/**
* Returns a normal number `y` and exponent `exp` satisfying \\(x = y \cdot 2^\mathrm{exp}\\).
*
* @param {number} x - input value
* @returns {NumberArray} a two-element array containing `y` and `exp`
*
* @example
* var pow = require( '@stdlib/math/base/special/pow' );
*
* var out = normalize( 3.14e-319 );
* // returns [ 1.4141234400356668e-303, -52 ]
*
* var y = out[ 0 ];
* var exp = out[ 1 ];
*
* var bool = ( y*pow(2.0,exp) === 3.14e-319 );
* // returns true
*
* @example
* var out = normalize( 0 );
* // returns [ 0.0, 0 ];
*
* @example
* var out = normalize( Number.POSITIVE_INFINITY );
* // returns [ Number.POSITIVE_INFINITY, 0 ]
*
* @example
* var out = normalize( Number.NEGATIVE_INFINITY );
* // returns [ Number.NEGATIVE_INFINIY, 0 ]
*
* @example
* var out = normalize( NaN );
* // returns [ NaN, 0 ]
*/
function normalize( x ) {
	if ( isnan( x ) || isInfinite( x ) ) {
		return [ x, 0 ];
	}
	if ( x !== 0.0 && abs( x ) < FLOAT64_SMALLEST_NORMAL ) {
		return [ x*SCALAR, -52 ];
	}
	return [ x, 0 ];
} // end FUNCTION normalize()


// EXPORTS //

module.exports = normalize;

},{"@stdlib/math/base/assert/is-infinite":4,"@stdlib/math/base/assert/is-nan":6,"@stdlib/math/base/special/abs":9,"@stdlib/math/constants/float64-smallest-normal":55}],44:[function(require,module,exports){
'use strict';

/**
* Split a floating-point number into a higher order word (unsigned 32-bit integer) and a lower order word (unsigned 32-bit integer).
*
* @module @stdlib/math/base/utils/float64-to-words
*
* @example
* var toWords = require( '@stdlib/math/base/utils/float64-to-words' );
*
* var w = toWords( 3.14e201 );
* // returns [ 1774486211, 2479577218 ]
*/

// MODULES //

var toWords = require( './to_words.js' );


// EXPORTS //

module.exports = toWords;

},{"./to_words.js":46}],45:[function(require,module,exports){
arguments[4][35][0].apply(exports,arguments)
},{"@stdlib/assert/is-little-endian":2,"dup":35}],46:[function(require,module,exports){
'use strict';

// MODULES //

var indices = require( './indices.js' );


// VARIABLES //

var FLOAT64_VIEW = new Float64Array( 1 );
var UINT32_VIEW = new Uint32Array( FLOAT64_VIEW.buffer );

var HIGH = indices.HIGH;
var LOW = indices.LOW;


// MAIN //

/**
* Splits a floating-point number into a higher order word (unsigned 32-bit integer) and a lower order word (unsigned 32-bit integer).
*
* #### Notes
*
* ``` text
* float64 (64 bits)
* f := fraction (significand/mantissa) (52 bits)
* e := exponent (11 bits)
* s := sign bit (1 bit)
*
* |-------- -------- -------- -------- -------- -------- -------- --------|
* |                                Float64                                |
* |-------- -------- -------- -------- -------- -------- -------- --------|
* |              Uint32               |               Uint32              |
* |-------- -------- -------- -------- -------- -------- -------- --------|
* ```
*
* If little endian (more significant bits last):
*
* ``` text
*                         <-- lower      higher -->
* |   f7       f6       f5       f4       f3       f2    e2 | f1 |s|  e1  |
* ```
*
* If big endian (more significant bits first):
*
* ``` text
*                         <-- higher      lower -->
* |s| e1    e2 | f1     f2       f3       f4       f5        f6      f7   |
* ```
*
* In which Uint32 can we find the higher order bits? If little endian, the second; if big endian, the first.
*
*
* #### References
*
* [Open Group]{@link http://pubs.opengroup.org/onlinepubs/9629399/chap14.htm}
*
*
* @param {number} x - input value
* @returns {NumberArray} two-element array containing a higher order word and a lower order word
*
* @example
* var w = toWords( 3.14e201 );
* // returns [ 1774486211, 2479577218 ]
*/
function toWords( x ) {
	FLOAT64_VIEW[ 0 ] = x;
	return [ UINT32_VIEW[ HIGH ], UINT32_VIEW[ LOW ] ];
} // end FUNCTION toWords()


// EXPORTS //

module.exports = toWords;

},{"./indices.js":45}],47:[function(require,module,exports){
'use strict';

/**
* Difference between one and the smallest value greater than one that can be represented as a double-precision floating-point number.
*
* @module @stdlib/math/constants/float64-eps
* @type {number}
*
* @example
* var FLOAT64_EPSILON = require( '@stdlib/math/constants/float64-eps' );
* // returns 2.220446049250313e-16
*/


// MAIN //

/**
* Difference between one and the smallest value greater than one that can be represented as a double-precision floating-point number is
*
* ``` tex
* \frac{1}{2^{52}}
* ```
*
* @constant
* @type {number}
* @default 2.220446049250313e-16
* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}
* @see [Machine Epsilon]{@link https://en.wikipedia.org/wiki/Machine_epsilon}
*/
var FLOAT64_EPSILON = 2.2204460492503130808472633361816E-16;


// EXPORTS //

module.exports = FLOAT64_EPSILON;

},{}],48:[function(require,module,exports){
'use strict';

/**
* The bias of a double-precision floating-point number's exponent.
*
* @module @stdlib/math/constants/float64-exponent-bias
* @type {integer32}
*
* @example
* var FLOAT64_EXPONENT_BIAS = require( '@stdlib/math/constants/float64-exponent-bias' );
* // returns 1023
*/


// MAIN //

/**
* The bias of a double-precision floating-point number's exponent. The bias can be computed via
*
* ``` tex
* \mathrm{bias} = 2^{k-1} - 1
* ```
*
* where \\(k\\) is the number of bits in the exponent; here, \\(k = 11\\).
*
* @constant
* @type {integer32}
* @default 1023
* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}
*/
var FLOAT64_EXPONENT_BIAS = 1023|0; // asm type annotation


// EXPORTS //

module.exports = FLOAT64_EXPONENT_BIAS;

},{}],49:[function(require,module,exports){
'use strict';

/**
* High word mask for the exponent of a double-precision floating-point number.
*
* @module @stdlib/math/constants/float64-high-word-exponent-mask
* @type {uinteger32}
*
* @example
* var FLOAT64_HIGH_WORD_EXPONENT_MASK = require( '@stdlib/math/constants/float64-high-word-exponent-mask' );
* // returns 2146435072
*/


// MAIN //

/**
* The high word mask for the exponent of a double-precision floating-point number is an unsigned 32-bit integer with the value \\( 2146435072 \\), which corresponds to the bit sequence
*
* ``` binarystring
* 0 11111111111 00000000000000000000
* ```
*
* @constant
* @type {uinteger32}
* @default 0x7ff00000
* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}
*/
var FLOAT64_HIGH_WORD_EXPONENT_MASK = 0x7ff00000;


// EXPORTS //

module.exports = FLOAT64_HIGH_WORD_EXPONENT_MASK;

},{}],50:[function(require,module,exports){
'use strict';

/**
* The maximum biased base 2 exponent for a subnormal double-precision floating-point number.
*
* @module @stdlib/math/constants/float64-max-base2-exponent-subnormal
* @type {integer32}
*
* @example
* var FLOAT64_MAX_BASE2_EXPONENT_SUBNORMAL = require( '@stdlib/math/constants/float64-max-base2-exponent-subnormal' );
* // returns -1023
*/


// MAIN //

/**
* The maximum biased base 2 exponent for a subnormal double-precision floating-point number.
*
* ``` text
* 00000000000 => 0 - BIAS = -1023
* ```
*
* where `BIAS = 1023`.
*
* @constant
* @type {integer32}
* @default -1023
* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}
*/
var FLOAT64_MAX_BASE2_EXPONENT_SUBNORMAL = -1023|0; // asm type annotation


// EXPORTS //

module.exports = FLOAT64_MAX_BASE2_EXPONENT_SUBNORMAL;

},{}],51:[function(require,module,exports){
'use strict';

/**
* The maximum biased base 2 exponent for a double-precision floating-point number.
*
* @module @stdlib/math/constants/float64-max-base2-exponent
* @type {integer32}
*
* @example
* var FLOAT64_MAX_BASE2_EXPONENT = require( '@stdlib/math/constants/float64-max-base2-exponent' );
* // returns 1023
*/


// MAIN //

/**
* The maximum biased base 2 exponent for a double-precision floating-point number.
*
* ``` text
* 11111111110 => 2046 - BIAS = 1023
* ```
*
* where `BIAS = 1023`.
*
* @constant
* @type {integer32}
* @default 1023
* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}
*/
var FLOAT64_MAX_BASE2_EXPONENT = 1023|0; // asm type annotation


// EXPORTS //

module.exports = FLOAT64_MAX_BASE2_EXPONENT;

},{}],52:[function(require,module,exports){
'use strict';

/**
* The minimum biased base 2 exponent for a subnormal double-precision floating-point number.
*
* @module @stdlib/math/constants/float64-min-base2-exponent-subnormal
* @type {integer32}
*
* @example
* var FLOAT64_MIN_BASE2_EXPONENT_SUBNORMAL = require( '@stdlib/math/constants/float64-min-base2-exponent-subnormal' );
* // returns -1074
*/


// MAIN //

/**
* The minimum biased base 2 exponent for a subnormal double-precision floating-point number.
*
* ``` text
* -(BIAS+(52-1)) = -(1023+51) = -1074
* ```
*
* where `BIAS = 1023` and `52` is the number of digits in the significand.
*
* @constant
* @type {integer32}
* @default -1074
* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}
*/
var FLOAT64_MIN_BASE2_EXPONENT_SUBNORMAL = -1074|0; // asm type annotation


// EXPORTS //

module.exports = FLOAT64_MIN_BASE2_EXPONENT_SUBNORMAL;

},{}],53:[function(require,module,exports){
'use strict';

/**
* Double-precision floating-point negative infinity.
*
* @module @stdlib/math/constants/float64-ninf
* @type {number}
*
* @example
* var FLOAT64_NINF = require( '@stdlib/math/constants/float64-ninf' );
* // returns Number.NEGATIVE_INFINITY
*/


// MAIN //

/**
* Double-precision floating-point negative infinity has the bit sequence
*
* ``` binarystring
* 1 11111111111 00000000000000000000 00000000000000000000000000000000
* ```
*
* @constant
* @type {number}
* @default Number.NEGATIVE_INFINITY
* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}
*/
var FLOAT64_NINF = Number.NEGATIVE_INFINITY;


// EXPORTS //

module.exports = FLOAT64_NINF;

},{}],54:[function(require,module,exports){
'use strict';

/**
* Double-precision floating-point positive infinity.
*
* @module @stdlib/math/constants/float64-pinf
* @type {number}
*
* @example
* var FLOAT64_PINF = require( '@stdlib/math/constants/float64-pinf' );
* // returns Number.POSITIVE_INFINITY
*/


// MAIN //

/**
* Double-precision floating-point positive infinity has the bit sequence
*
* ``` binarystring
* 0 11111111111 00000000000000000000 00000000000000000000000000000000
* ```
*
* @constant
* @type {number}
* @default Number.POSITIVE_INFINITY
* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}
*/
var FLOAT64_PINF = Number.POSITIVE_INFINITY;


// EXPORTS //

module.exports = FLOAT64_PINF;

},{}],55:[function(require,module,exports){
'use strict';

/**
* Smallest positive double-precision floating-point normal number.
*
* @module @stdlib/math/constants/float64-smallest-normal
* @type {number}
*
* @example
* var FLOAT64_SMALLEST_NORMAL = require( '@stdlib/math/constants/float64-smallest-normal' );
* // returns 2.2250738585072014e-308
*/


// MAIN //

/**
* The smallest positive double-precision floating-point normal number has the value
*
* ``` tex
* \frac{1}{2^{1023-1}}
* ```
*
* which corresponds to the bit sequence
*
* ``` binarystring
* 0 00000000001 00000000000000000000 00000000000000000000000000000000
* ```
*
* @constant
* @type {number}
* @default 2.2250738585072014e-308
* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}
*/
var FLOAT64_SMALLEST_NORMAL = 2.2250738585072014e-308;


// EXPORTS //

module.exports = FLOAT64_SMALLEST_NORMAL;

},{}],56:[function(require,module,exports){
'use strict'

exports.byteLength = byteLength
exports.toByteArray = toByteArray
exports.fromByteArray = fromByteArray

var lookup = []
var revLookup = []
var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array

var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
for (var i = 0, len = code.length; i < len; ++i) {
  lookup[i] = code[i]
  revLookup[code.charCodeAt(i)] = i
}

revLookup['-'.charCodeAt(0)] = 62
revLookup['_'.charCodeAt(0)] = 63

function placeHoldersCount (b64) {
  var len = b64.length
  if (len % 4 > 0) {
    throw new Error('Invalid string. Length must be a multiple of 4')
  }

  // the number of equal signs (place holders)
  // if there are two placeholders, than the two characters before it
  // represent one byte
  // if there is only one, then the three characters before it represent 2 bytes
  // this is just a cheap hack to not do indexOf twice
  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0
}

function byteLength (b64) {
  // base64 is 4/3 + up to two characters of the original data
  return (b64.length * 3 / 4) - placeHoldersCount(b64)
}

function toByteArray (b64) {
  var i, l, tmp, placeHolders, arr
  var len = b64.length
  placeHolders = placeHoldersCount(b64)

  arr = new Arr((len * 3 / 4) - placeHolders)

  // if there are placeholders, only get up to the last complete 4 chars
  l = placeHolders > 0 ? len - 4 : len

  var L = 0

  for (i = 0; i < l; i += 4) {
    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]
    arr[L++] = (tmp >> 16) & 0xFF
    arr[L++] = (tmp >> 8) & 0xFF
    arr[L++] = tmp & 0xFF
  }

  if (placeHolders === 2) {
    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)
    arr[L++] = tmp & 0xFF
  } else if (placeHolders === 1) {
    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)
    arr[L++] = (tmp >> 8) & 0xFF
    arr[L++] = tmp & 0xFF
  }

  return arr
}

function tripletToBase64 (num) {
  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]
}

function encodeChunk (uint8, start, end) {
  var tmp
  var output = []
  for (var i = start; i < end; i += 3) {
    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])
    output.push(tripletToBase64(tmp))
  }
  return output.join('')
}

function fromByteArray (uint8) {
  var tmp
  var len = uint8.length
  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes
  var output = ''
  var parts = []
  var maxChunkLength = 16383 // must be multiple of 3

  // go through the array every three bytes, we'll deal with trailing stuff later
  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))
  }

  // pad the end with zeros, but make sure to not forget the extra bytes
  if (extraBytes === 1) {
    tmp = uint8[len - 1]
    output += lookup[tmp >> 2]
    output += lookup[(tmp << 4) & 0x3F]
    output += '=='
  } else if (extraBytes === 2) {
    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])
    output += lookup[tmp >> 10]
    output += lookup[(tmp >> 4) & 0x3F]
    output += lookup[(tmp << 2) & 0x3F]
    output += '='
  }

  parts.push(output)

  return parts.join('')
}

},{}],57:[function(require,module,exports){

},{}],58:[function(require,module,exports){
arguments[4][57][0].apply(exports,arguments)
},{"dup":57}],59:[function(require,module,exports){
// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };

},{}],60:[function(require,module,exports){
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 * @license  MIT
 */
/* eslint-disable no-proto */

'use strict'

var base64 = require('base64-js')
var ieee754 = require('ieee754')

exports.Buffer = Buffer
exports.SlowBuffer = SlowBuffer
exports.INSPECT_MAX_BYTES = 50

var K_MAX_LENGTH = 0x7fffffff
exports.kMaxLength = K_MAX_LENGTH

/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Print warning and recommend using `buffer` v4.x which has an Object
 *               implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * We report that the browser does not support typed arrays if the are not subclassable
 * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`
 * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support
 * for __proto__ and has a buggy typed array implementation.
 */
Buffer.TYPED_ARRAY_SUPPORT = typedArraySupport()

if (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&
    typeof console.error === 'function') {
  console.error(
    'This browser lacks typed array (Uint8Array) support which is required by ' +
    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'
  )
}

function typedArraySupport () {
  // Can typed array instances can be augmented?
  try {
    var arr = new Uint8Array(1)
    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}
    return arr.foo() === 42
  } catch (e) {
    return false
  }
}

function createBuffer (length) {
  if (length > K_MAX_LENGTH) {
    throw new RangeError('Invalid typed array length')
  }
  // Return an augmented `Uint8Array` instance
  var buf = new Uint8Array(length)
  buf.__proto__ = Buffer.prototype
  return buf
}

/**
 * The Buffer constructor returns instances of `Uint8Array` that have their
 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
 * returns a single octet.
 *
 * The `Uint8Array` prototype remains unmodified.
 */

function Buffer (arg, encodingOrOffset, length) {
  // Common case.
  if (typeof arg === 'number') {
    if (typeof encodingOrOffset === 'string') {
      throw new Error(
        'If encoding is specified then the first argument must be a string'
      )
    }
    return allocUnsafe(arg)
  }
  return from(arg, encodingOrOffset, length)
}

// Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
if (typeof Symbol !== 'undefined' && Symbol.species &&
    Buffer[Symbol.species] === Buffer) {
  Object.defineProperty(Buffer, Symbol.species, {
    value: null,
    configurable: true,
    enumerable: false,
    writable: false
  })
}

Buffer.poolSize = 8192 // not used by this implementation

function from (value, encodingOrOffset, length) {
  if (typeof value === 'number') {
    throw new TypeError('"value" argument must not be a number')
  }

  if (isArrayBuffer(value)) {
    return fromArrayBuffer(value, encodingOrOffset, length)
  }

  if (typeof value === 'string') {
    return fromString(value, encodingOrOffset)
  }

  return fromObject(value)
}

/**
 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
 * if value is a number.
 * Buffer.from(str[, encoding])
 * Buffer.from(array)
 * Buffer.from(buffer)
 * Buffer.from(arrayBuffer[, byteOffset[, length]])
 **/
Buffer.from = function (value, encodingOrOffset, length) {
  return from(value, encodingOrOffset, length)
}

// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:
// https://github.com/feross/buffer/pull/148
Buffer.prototype.__proto__ = Uint8Array.prototype
Buffer.__proto__ = Uint8Array

function assertSize (size) {
  if (typeof size !== 'number') {
    throw new TypeError('"size" argument must be a number')
  } else if (size < 0) {
    throw new RangeError('"size" argument must not be negative')
  }
}

function alloc (size, fill, encoding) {
  assertSize(size)
  if (size <= 0) {
    return createBuffer(size)
  }
  if (fill !== undefined) {
    // Only pay attention to encoding if it's a string. This
    // prevents accidentally sending in a number that would
    // be interpretted as a start offset.
    return typeof encoding === 'string'
      ? createBuffer(size).fill(fill, encoding)
      : createBuffer(size).fill(fill)
  }
  return createBuffer(size)
}

/**
 * Creates a new filled Buffer instance.
 * alloc(size[, fill[, encoding]])
 **/
Buffer.alloc = function (size, fill, encoding) {
  return alloc(size, fill, encoding)
}

function allocUnsafe (size) {
  assertSize(size)
  return createBuffer(size < 0 ? 0 : checked(size) | 0)
}

/**
 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
 * */
Buffer.allocUnsafe = function (size) {
  return allocUnsafe(size)
}
/**
 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
 */
Buffer.allocUnsafeSlow = function (size) {
  return allocUnsafe(size)
}

function fromString (string, encoding) {
  if (typeof encoding !== 'string' || encoding === '') {
    encoding = 'utf8'
  }

  if (!Buffer.isEncoding(encoding)) {
    throw new TypeError('"encoding" must be a valid string encoding')
  }

  var length = byteLength(string, encoding) | 0
  var buf = createBuffer(length)

  var actual = buf.write(string, encoding)

  if (actual !== length) {
    // Writing a hex string, for example, that contains invalid characters will
    // cause everything after the first invalid character to be ignored. (e.g.
    // 'abxxcd' will be treated as 'ab')
    buf = buf.slice(0, actual)
  }

  return buf
}

function fromArrayLike (array) {
  var length = array.length < 0 ? 0 : checked(array.length) | 0
  var buf = createBuffer(length)
  for (var i = 0; i < length; i += 1) {
    buf[i] = array[i] & 255
  }
  return buf
}

function fromArrayBuffer (array, byteOffset, length) {
  if (byteOffset < 0 || array.byteLength < byteOffset) {
    throw new RangeError('\'offset\' is out of bounds')
  }

  if (array.byteLength < byteOffset + (length || 0)) {
    throw new RangeError('\'length\' is out of bounds')
  }

  var buf
  if (byteOffset === undefined && length === undefined) {
    buf = new Uint8Array(array)
  } else if (length === undefined) {
    buf = new Uint8Array(array, byteOffset)
  } else {
    buf = new Uint8Array(array, byteOffset, length)
  }

  // Return an augmented `Uint8Array` instance
  buf.__proto__ = Buffer.prototype
  return buf
}

function fromObject (obj) {
  if (Buffer.isBuffer(obj)) {
    var len = checked(obj.length) | 0
    var buf = createBuffer(len)

    if (buf.length === 0) {
      return buf
    }

    obj.copy(buf, 0, 0, len)
    return buf
  }

  if (obj) {
    if (isArrayBufferView(obj) || 'length' in obj) {
      if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {
        return createBuffer(0)
      }
      return fromArrayLike(obj)
    }

    if (obj.type === 'Buffer' && Array.isArray(obj.data)) {
      return fromArrayLike(obj.data)
    }
  }

  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')
}

function checked (length) {
  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when
  // length is NaN (which is otherwise coerced to zero.)
  if (length >= K_MAX_LENGTH) {
    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')
  }
  return length | 0
}

function SlowBuffer (length) {
  if (+length != length) { // eslint-disable-line eqeqeq
    length = 0
  }
  return Buffer.alloc(+length)
}

Buffer.isBuffer = function isBuffer (b) {
  return b != null && b._isBuffer === true
}

Buffer.compare = function compare (a, b) {
  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
    throw new TypeError('Arguments must be Buffers')
  }

  if (a === b) return 0

  var x = a.length
  var y = b.length

  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
    if (a[i] !== b[i]) {
      x = a[i]
      y = b[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

Buffer.isEncoding = function isEncoding (encoding) {
  switch (String(encoding).toLowerCase()) {
    case 'hex':
    case 'utf8':
    case 'utf-8':
    case 'ascii':
    case 'latin1':
    case 'binary':
    case 'base64':
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      return true
    default:
      return false
  }
}

Buffer.concat = function concat (list, length) {
  if (!Array.isArray(list)) {
    throw new TypeError('"list" argument must be an Array of Buffers')
  }

  if (list.length === 0) {
    return Buffer.alloc(0)
  }

  var i
  if (length === undefined) {
    length = 0
    for (i = 0; i < list.length; ++i) {
      length += list[i].length
    }
  }

  var buffer = Buffer.allocUnsafe(length)
  var pos = 0
  for (i = 0; i < list.length; ++i) {
    var buf = list[i]
    if (!Buffer.isBuffer(buf)) {
      throw new TypeError('"list" argument must be an Array of Buffers')
    }
    buf.copy(buffer, pos)
    pos += buf.length
  }
  return buffer
}

function byteLength (string, encoding) {
  if (Buffer.isBuffer(string)) {
    return string.length
  }
  if (isArrayBufferView(string) || isArrayBuffer(string)) {
    return string.byteLength
  }
  if (typeof string !== 'string') {
    string = '' + string
  }

  var len = string.length
  if (len === 0) return 0

  // Use a for loop to avoid recursion
  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'ascii':
      case 'latin1':
      case 'binary':
        return len
      case 'utf8':
      case 'utf-8':
      case undefined:
        return utf8ToBytes(string).length
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return len * 2
      case 'hex':
        return len >>> 1
      case 'base64':
        return base64ToBytes(string).length
      default:
        if (loweredCase) return utf8ToBytes(string).length // assume utf8
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}
Buffer.byteLength = byteLength

function slowToString (encoding, start, end) {
  var loweredCase = false

  // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
  // property of a typed array.

  // This behaves neither like String nor Uint8Array in that we set start/end
  // to their upper/lower bounds if the value passed is out of range.
  // undefined is handled specially as per ECMA-262 6th Edition,
  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
  if (start === undefined || start < 0) {
    start = 0
  }
  // Return early if start > this.length. Done here to prevent potential uint32
  // coercion fail below.
  if (start > this.length) {
    return ''
  }

  if (end === undefined || end > this.length) {
    end = this.length
  }

  if (end <= 0) {
    return ''
  }

  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
  end >>>= 0
  start >>>= 0

  if (end <= start) {
    return ''
  }

  if (!encoding) encoding = 'utf8'

  while (true) {
    switch (encoding) {
      case 'hex':
        return hexSlice(this, start, end)

      case 'utf8':
      case 'utf-8':
        return utf8Slice(this, start, end)

      case 'ascii':
        return asciiSlice(this, start, end)

      case 'latin1':
      case 'binary':
        return latin1Slice(this, start, end)

      case 'base64':
        return base64Slice(this, start, end)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return utf16leSlice(this, start, end)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = (encoding + '').toLowerCase()
        loweredCase = true
    }
  }
}

// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)
// to detect a Buffer instance. It's not possible to use `instanceof Buffer`
// reliably in a browserify context because there could be multiple different
// copies of the 'buffer' package in use. This method works even for Buffer
// instances that were created from another copy of the `buffer` package.
// See: https://github.com/feross/buffer/issues/154
Buffer.prototype._isBuffer = true

function swap (b, n, m) {
  var i = b[n]
  b[n] = b[m]
  b[m] = i
}

Buffer.prototype.swap16 = function swap16 () {
  var len = this.length
  if (len % 2 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 16-bits')
  }
  for (var i = 0; i < len; i += 2) {
    swap(this, i, i + 1)
  }
  return this
}

Buffer.prototype.swap32 = function swap32 () {
  var len = this.length
  if (len % 4 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 32-bits')
  }
  for (var i = 0; i < len; i += 4) {
    swap(this, i, i + 3)
    swap(this, i + 1, i + 2)
  }
  return this
}

Buffer.prototype.swap64 = function swap64 () {
  var len = this.length
  if (len % 8 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 64-bits')
  }
  for (var i = 0; i < len; i += 8) {
    swap(this, i, i + 7)
    swap(this, i + 1, i + 6)
    swap(this, i + 2, i + 5)
    swap(this, i + 3, i + 4)
  }
  return this
}

Buffer.prototype.toString = function toString () {
  var length = this.length
  if (length === 0) return ''
  if (arguments.length === 0) return utf8Slice(this, 0, length)
  return slowToString.apply(this, arguments)
}

Buffer.prototype.equals = function equals (b) {
  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
  if (this === b) return true
  return Buffer.compare(this, b) === 0
}

Buffer.prototype.inspect = function inspect () {
  var str = ''
  var max = exports.INSPECT_MAX_BYTES
  if (this.length > 0) {
    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')
    if (this.length > max) str += ' ... '
  }
  return '<Buffer ' + str + '>'
}

Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {
  if (!Buffer.isBuffer(target)) {
    throw new TypeError('Argument must be a Buffer')
  }

  if (start === undefined) {
    start = 0
  }
  if (end === undefined) {
    end = target ? target.length : 0
  }
  if (thisStart === undefined) {
    thisStart = 0
  }
  if (thisEnd === undefined) {
    thisEnd = this.length
  }

  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
    throw new RangeError('out of range index')
  }

  if (thisStart >= thisEnd && start >= end) {
    return 0
  }
  if (thisStart >= thisEnd) {
    return -1
  }
  if (start >= end) {
    return 1
  }

  start >>>= 0
  end >>>= 0
  thisStart >>>= 0
  thisEnd >>>= 0

  if (this === target) return 0

  var x = thisEnd - thisStart
  var y = end - start
  var len = Math.min(x, y)

  var thisCopy = this.slice(thisStart, thisEnd)
  var targetCopy = target.slice(start, end)

  for (var i = 0; i < len; ++i) {
    if (thisCopy[i] !== targetCopy[i]) {
      x = thisCopy[i]
      y = targetCopy[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
//
// Arguments:
// - buffer - a Buffer to search
// - val - a string, Buffer, or number
// - byteOffset - an index into `buffer`; will be clamped to an int32
// - encoding - an optional encoding, relevant is val is a string
// - dir - true for indexOf, false for lastIndexOf
function bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {
  // Empty buffer means no match
  if (buffer.length === 0) return -1

  // Normalize byteOffset
  if (typeof byteOffset === 'string') {
    encoding = byteOffset
    byteOffset = 0
  } else if (byteOffset > 0x7fffffff) {
    byteOffset = 0x7fffffff
  } else if (byteOffset < -0x80000000) {
    byteOffset = -0x80000000
  }
  byteOffset = +byteOffset  // Coerce to Number.
  if (numberIsNaN(byteOffset)) {
    // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
    byteOffset = dir ? 0 : (buffer.length - 1)
  }

  // Normalize byteOffset: negative offsets start from the end of the buffer
  if (byteOffset < 0) byteOffset = buffer.length + byteOffset
  if (byteOffset >= buffer.length) {
    if (dir) return -1
    else byteOffset = buffer.length - 1
  } else if (byteOffset < 0) {
    if (dir) byteOffset = 0
    else return -1
  }

  // Normalize val
  if (typeof val === 'string') {
    val = Buffer.from(val, encoding)
  }

  // Finally, search either indexOf (if dir is true) or lastIndexOf
  if (Buffer.isBuffer(val)) {
    // Special case: looking for empty string/buffer always fails
    if (val.length === 0) {
      return -1
    }
    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)
  } else if (typeof val === 'number') {
    val = val & 0xFF // Search for a byte value [0-255]
    if (typeof Uint8Array.prototype.indexOf === 'function') {
      if (dir) {
        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)
      } else {
        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)
      }
    }
    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)
  }

  throw new TypeError('val must be string, number or Buffer')
}

function arrayIndexOf (arr, val, byteOffset, encoding, dir) {
  var indexSize = 1
  var arrLength = arr.length
  var valLength = val.length

  if (encoding !== undefined) {
    encoding = String(encoding).toLowerCase()
    if (encoding === 'ucs2' || encoding === 'ucs-2' ||
        encoding === 'utf16le' || encoding === 'utf-16le') {
      if (arr.length < 2 || val.length < 2) {
        return -1
      }
      indexSize = 2
      arrLength /= 2
      valLength /= 2
      byteOffset /= 2
    }
  }

  function read (buf, i) {
    if (indexSize === 1) {
      return buf[i]
    } else {
      return buf.readUInt16BE(i * indexSize)
    }
  }

  var i
  if (dir) {
    var foundIndex = -1
    for (i = byteOffset; i < arrLength; i++) {
      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
        if (foundIndex === -1) foundIndex = i
        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize
      } else {
        if (foundIndex !== -1) i -= i - foundIndex
        foundIndex = -1
      }
    }
  } else {
    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength
    for (i = byteOffset; i >= 0; i--) {
      var found = true
      for (var j = 0; j < valLength; j++) {
        if (read(arr, i + j) !== read(val, j)) {
          found = false
          break
        }
      }
      if (found) return i
    }
  }

  return -1
}

Buffer.prototype.includes = function includes (val, byteOffset, encoding) {
  return this.indexOf(val, byteOffset, encoding) !== -1
}

Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)
}

Buffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)
}

function hexWrite (buf, string, offset, length) {
  offset = Number(offset) || 0
  var remaining = buf.length - offset
  if (!length) {
    length = remaining
  } else {
    length = Number(length)
    if (length > remaining) {
      length = remaining
    }
  }

  // must be an even number of digits
  var strLen = string.length
  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')

  if (length > strLen / 2) {
    length = strLen / 2
  }
  for (var i = 0; i < length; ++i) {
    var parsed = parseInt(string.substr(i * 2, 2), 16)
    if (numberIsNaN(parsed)) return i
    buf[offset + i] = parsed
  }
  return i
}

function utf8Write (buf, string, offset, length) {
  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
}

function asciiWrite (buf, string, offset, length) {
  return blitBuffer(asciiToBytes(string), buf, offset, length)
}

function latin1Write (buf, string, offset, length) {
  return asciiWrite(buf, string, offset, length)
}

function base64Write (buf, string, offset, length) {
  return blitBuffer(base64ToBytes(string), buf, offset, length)
}

function ucs2Write (buf, string, offset, length) {
  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
}

Buffer.prototype.write = function write (string, offset, length, encoding) {
  // Buffer#write(string)
  if (offset === undefined) {
    encoding = 'utf8'
    length = this.length
    offset = 0
  // Buffer#write(string, encoding)
  } else if (length === undefined && typeof offset === 'string') {
    encoding = offset
    length = this.length
    offset = 0
  // Buffer#write(string, offset[, length][, encoding])
  } else if (isFinite(offset)) {
    offset = offset >>> 0
    if (isFinite(length)) {
      length = length >>> 0
      if (encoding === undefined) encoding = 'utf8'
    } else {
      encoding = length
      length = undefined
    }
  } else {
    throw new Error(
      'Buffer.write(string, encoding, offset[, length]) is no longer supported'
    )
  }

  var remaining = this.length - offset
  if (length === undefined || length > remaining) length = remaining

  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
    throw new RangeError('Attempt to write outside buffer bounds')
  }

  if (!encoding) encoding = 'utf8'

  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'hex':
        return hexWrite(this, string, offset, length)

      case 'utf8':
      case 'utf-8':
        return utf8Write(this, string, offset, length)

      case 'ascii':
        return asciiWrite(this, string, offset, length)

      case 'latin1':
      case 'binary':
        return latin1Write(this, string, offset, length)

      case 'base64':
        // Warning: maxLength not taken into account in base64Write
        return base64Write(this, string, offset, length)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return ucs2Write(this, string, offset, length)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}

Buffer.prototype.toJSON = function toJSON () {
  return {
    type: 'Buffer',
    data: Array.prototype.slice.call(this._arr || this, 0)
  }
}

function base64Slice (buf, start, end) {
  if (start === 0 && end === buf.length) {
    return base64.fromByteArray(buf)
  } else {
    return base64.fromByteArray(buf.slice(start, end))
  }
}

function utf8Slice (buf, start, end) {
  end = Math.min(buf.length, end)
  var res = []

  var i = start
  while (i < end) {
    var firstByte = buf[i]
    var codePoint = null
    var bytesPerSequence = (firstByte > 0xEF) ? 4
      : (firstByte > 0xDF) ? 3
      : (firstByte > 0xBF) ? 2
      : 1

    if (i + bytesPerSequence <= end) {
      var secondByte, thirdByte, fourthByte, tempCodePoint

      switch (bytesPerSequence) {
        case 1:
          if (firstByte < 0x80) {
            codePoint = firstByte
          }
          break
        case 2:
          secondByte = buf[i + 1]
          if ((secondByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
            if (tempCodePoint > 0x7F) {
              codePoint = tempCodePoint
            }
          }
          break
        case 3:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
              codePoint = tempCodePoint
            }
          }
          break
        case 4:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          fourthByte = buf[i + 3]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
              codePoint = tempCodePoint
            }
          }
      }
    }

    if (codePoint === null) {
      // we did not generate a valid codePoint so insert a
      // replacement char (U+FFFD) and advance only 1 byte
      codePoint = 0xFFFD
      bytesPerSequence = 1
    } else if (codePoint > 0xFFFF) {
      // encode to utf16 (surrogate pair dance)
      codePoint -= 0x10000
      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
      codePoint = 0xDC00 | codePoint & 0x3FF
    }

    res.push(codePoint)
    i += bytesPerSequence
  }

  return decodeCodePointsArray(res)
}

// Based on http://stackoverflow.com/a/22747272/680742, the browser with
// the lowest limit is Chrome, with 0x10000 args.
// We go 1 magnitude less, for safety
var MAX_ARGUMENTS_LENGTH = 0x1000

function decodeCodePointsArray (codePoints) {
  var len = codePoints.length
  if (len <= MAX_ARGUMENTS_LENGTH) {
    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
  }

  // Decode in chunks to avoid "call stack size exceeded".
  var res = ''
  var i = 0
  while (i < len) {
    res += String.fromCharCode.apply(
      String,
      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
    )
  }
  return res
}

function asciiSlice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i] & 0x7F)
  }
  return ret
}

function latin1Slice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i])
  }
  return ret
}

function hexSlice (buf, start, end) {
  var len = buf.length

  if (!start || start < 0) start = 0
  if (!end || end < 0 || end > len) end = len

  var out = ''
  for (var i = start; i < end; ++i) {
    out += toHex(buf[i])
  }
  return out
}

function utf16leSlice (buf, start, end) {
  var bytes = buf.slice(start, end)
  var res = ''
  for (var i = 0; i < bytes.length; i += 2) {
    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))
  }
  return res
}

Buffer.prototype.slice = function slice (start, end) {
  var len = this.length
  start = ~~start
  end = end === undefined ? len : ~~end

  if (start < 0) {
    start += len
    if (start < 0) start = 0
  } else if (start > len) {
    start = len
  }

  if (end < 0) {
    end += len
    if (end < 0) end = 0
  } else if (end > len) {
    end = len
  }

  if (end < start) end = start

  var newBuf = this.subarray(start, end)
  // Return an augmented `Uint8Array` instance
  newBuf.__proto__ = Buffer.prototype
  return newBuf
}

/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */
function checkOffset (offset, ext, length) {
  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
}

Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }

  return val
}

Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    checkOffset(offset, byteLength, this.length)
  }

  var val = this[offset + --byteLength]
  var mul = 1
  while (byteLength > 0 && (mul *= 0x100)) {
    val += this[offset + --byteLength] * mul
  }

  return val
}

Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 1, this.length)
  return this[offset]
}

Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  return this[offset] | (this[offset + 1] << 8)
}

Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  return (this[offset] << 8) | this[offset + 1]
}

Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return ((this[offset]) |
      (this[offset + 1] << 8) |
      (this[offset + 2] << 16)) +
      (this[offset + 3] * 0x1000000)
}

Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] * 0x1000000) +
    ((this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    this[offset + 3])
}

Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var i = byteLength
  var mul = 1
  var val = this[offset + --i]
  while (i > 0 && (mul *= 0x100)) {
    val += this[offset + --i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 1, this.length)
  if (!(this[offset] & 0x80)) return (this[offset])
  return ((0xff - this[offset] + 1) * -1)
}

Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset] | (this[offset + 1] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset + 1] | (this[offset] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset]) |
    (this[offset + 1] << 8) |
    (this[offset + 2] << 16) |
    (this[offset + 3] << 24)
}

Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] << 24) |
    (this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    (this[offset + 3])
}

Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, true, 23, 4)
}

Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, false, 23, 4)
}

Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, true, 52, 8)
}

Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, false, 52, 8)
}

function checkInt (buf, value, offset, ext, max, min) {
  if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance')
  if (value > max || value < min) throw new RangeError('"value" argument is out of bounds')
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
}

Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var mul = 1
  var i = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var i = byteLength - 1
  var mul = 1
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  return offset + 2
}

Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  this[offset] = (value >>> 8)
  this[offset + 1] = (value & 0xff)
  return offset + 2
}

Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  this[offset + 3] = (value >>> 24)
  this[offset + 2] = (value >>> 16)
  this[offset + 1] = (value >>> 8)
  this[offset] = (value & 0xff)
  return offset + 4
}

Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  this[offset] = (value >>> 24)
  this[offset + 1] = (value >>> 16)
  this[offset + 2] = (value >>> 8)
  this[offset + 3] = (value & 0xff)
  return offset + 4
}

Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    var limit = Math.pow(2, (8 * byteLength) - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = 0
  var mul = 1
  var sub = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    var limit = Math.pow(2, (8 * byteLength) - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = byteLength - 1
  var mul = 1
  var sub = 0
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
  if (value < 0) value = 0xff + value + 1
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  return offset + 2
}

Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  this[offset] = (value >>> 8)
  this[offset + 1] = (value & 0xff)
  return offset + 2
}

Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  this[offset + 2] = (value >>> 16)
  this[offset + 3] = (value >>> 24)
  return offset + 4
}

Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (value < 0) value = 0xffffffff + value + 1
  this[offset] = (value >>> 24)
  this[offset + 1] = (value >>> 16)
  this[offset + 2] = (value >>> 8)
  this[offset + 3] = (value & 0xff)
  return offset + 4
}

function checkIEEE754 (buf, value, offset, ext, max, min) {
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
  if (offset < 0) throw new RangeError('Index out of range')
}

function writeFloat (buf, value, offset, littleEndian, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
  }
  ieee754.write(buf, value, offset, littleEndian, 23, 4)
  return offset + 4
}

Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
  return writeFloat(this, value, offset, true, noAssert)
}

Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
  return writeFloat(this, value, offset, false, noAssert)
}

function writeDouble (buf, value, offset, littleEndian, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
  }
  ieee754.write(buf, value, offset, littleEndian, 52, 8)
  return offset + 8
}

Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
  return writeDouble(this, value, offset, true, noAssert)
}

Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
  return writeDouble(this, value, offset, false, noAssert)
}

// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Buffer.prototype.copy = function copy (target, targetStart, start, end) {
  if (!start) start = 0
  if (!end && end !== 0) end = this.length
  if (targetStart >= target.length) targetStart = target.length
  if (!targetStart) targetStart = 0
  if (end > 0 && end < start) end = start

  // Copy 0 bytes; we're done
  if (end === start) return 0
  if (target.length === 0 || this.length === 0) return 0

  // Fatal error conditions
  if (targetStart < 0) {
    throw new RangeError('targetStart out of bounds')
  }
  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')
  if (end < 0) throw new RangeError('sourceEnd out of bounds')

  // Are we oob?
  if (end > this.length) end = this.length
  if (target.length - targetStart < end - start) {
    end = target.length - targetStart + start
  }

  var len = end - start
  var i

  if (this === target && start < targetStart && targetStart < end) {
    // descending copy from end
    for (i = len - 1; i >= 0; --i) {
      target[i + targetStart] = this[i + start]
    }
  } else if (len < 1000) {
    // ascending copy from start
    for (i = 0; i < len; ++i) {
      target[i + targetStart] = this[i + start]
    }
  } else {
    Uint8Array.prototype.set.call(
      target,
      this.subarray(start, start + len),
      targetStart
    )
  }

  return len
}

// Usage:
//    buffer.fill(number[, offset[, end]])
//    buffer.fill(buffer[, offset[, end]])
//    buffer.fill(string[, offset[, end]][, encoding])
Buffer.prototype.fill = function fill (val, start, end, encoding) {
  // Handle string cases:
  if (typeof val === 'string') {
    if (typeof start === 'string') {
      encoding = start
      start = 0
      end = this.length
    } else if (typeof end === 'string') {
      encoding = end
      end = this.length
    }
    if (val.length === 1) {
      var code = val.charCodeAt(0)
      if (code < 256) {
        val = code
      }
    }
    if (encoding !== undefined && typeof encoding !== 'string') {
      throw new TypeError('encoding must be a string')
    }
    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
      throw new TypeError('Unknown encoding: ' + encoding)
    }
  } else if (typeof val === 'number') {
    val = val & 255
  }

  // Invalid ranges are not set to a default, so can range check early.
  if (start < 0 || this.length < start || this.length < end) {
    throw new RangeError('Out of range index')
  }

  if (end <= start) {
    return this
  }

  start = start >>> 0
  end = end === undefined ? this.length : end >>> 0

  if (!val) val = 0

  var i
  if (typeof val === 'number') {
    for (i = start; i < end; ++i) {
      this[i] = val
    }
  } else {
    var bytes = Buffer.isBuffer(val)
      ? val
      : new Buffer(val, encoding)
    var len = bytes.length
    for (i = 0; i < end - start; ++i) {
      this[i + start] = bytes[i % len]
    }
  }

  return this
}

// HELPER FUNCTIONS
// ================

var INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g

function base64clean (str) {
  // Node strips out invalid characters like \n and \t from the string, base64-js does not
  str = str.trim().replace(INVALID_BASE64_RE, '')
  // Node converts strings with length < 2 to ''
  if (str.length < 2) return ''
  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
  while (str.length % 4 !== 0) {
    str = str + '='
  }
  return str
}

function toHex (n) {
  if (n < 16) return '0' + n.toString(16)
  return n.toString(16)
}

function utf8ToBytes (string, units) {
  units = units || Infinity
  var codePoint
  var length = string.length
  var leadSurrogate = null
  var bytes = []

  for (var i = 0; i < length; ++i) {
    codePoint = string.charCodeAt(i)

    // is surrogate component
    if (codePoint > 0xD7FF && codePoint < 0xE000) {
      // last char was a lead
      if (!leadSurrogate) {
        // no lead yet
        if (codePoint > 0xDBFF) {
          // unexpected trail
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        } else if (i + 1 === length) {
          // unpaired lead
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        }

        // valid lead
        leadSurrogate = codePoint

        continue
      }

      // 2 leads in a row
      if (codePoint < 0xDC00) {
        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
        leadSurrogate = codePoint
        continue
      }

      // valid surrogate pair
      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
    } else if (leadSurrogate) {
      // valid bmp char, but last char was a lead
      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
    }

    leadSurrogate = null

    // encode utf8
    if (codePoint < 0x80) {
      if ((units -= 1) < 0) break
      bytes.push(codePoint)
    } else if (codePoint < 0x800) {
      if ((units -= 2) < 0) break
      bytes.push(
        codePoint >> 0x6 | 0xC0,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x10000) {
      if ((units -= 3) < 0) break
      bytes.push(
        codePoint >> 0xC | 0xE0,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x110000) {
      if ((units -= 4) < 0) break
      bytes.push(
        codePoint >> 0x12 | 0xF0,
        codePoint >> 0xC & 0x3F | 0x80,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else {
      throw new Error('Invalid code point')
    }
  }

  return bytes
}

function asciiToBytes (str) {
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    // Node's code seems to be doing this and not & 0x7F..
    byteArray.push(str.charCodeAt(i) & 0xFF)
  }
  return byteArray
}

function utf16leToBytes (str, units) {
  var c, hi, lo
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    if ((units -= 2) < 0) break

    c = str.charCodeAt(i)
    hi = c >> 8
    lo = c % 256
    byteArray.push(lo)
    byteArray.push(hi)
  }

  return byteArray
}

function base64ToBytes (str) {
  return base64.toByteArray(base64clean(str))
}

function blitBuffer (src, dst, offset, length) {
  for (var i = 0; i < length; ++i) {
    if ((i + offset >= dst.length) || (i >= src.length)) break
    dst[i + offset] = src[i]
  }
  return i
}

// ArrayBuffers from another context (i.e. an iframe) do not pass the `instanceof` check
// but they should be treated as valid. See: https://github.com/feross/buffer/issues/166
function isArrayBuffer (obj) {
  return obj instanceof ArrayBuffer ||
    (obj != null && obj.constructor != null && obj.constructor.name === 'ArrayBuffer' &&
      typeof obj.byteLength === 'number')
}

// Node 0.10 supports `ArrayBuffer` but lacks `ArrayBuffer.isView`
function isArrayBufferView (obj) {
  return (typeof ArrayBuffer.isView === 'function') && ArrayBuffer.isView(obj)
}

function numberIsNaN (obj) {
  return obj !== obj // eslint-disable-line no-self-compare
}

},{"base64-js":56,"ieee754":79}],61:[function(require,module,exports){
(function (Buffer){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// NOTE: These type checking functions intentionally don't use `instanceof`
// because it is fragile and can be easily faked with `Object.create()`.

function isArray(arg) {
  if (Array.isArray) {
    return Array.isArray(arg);
  }
  return objectToString(arg) === '[object Array]';
}
exports.isArray = isArray;

function isBoolean(arg) {
  return typeof arg === 'boolean';
}
exports.isBoolean = isBoolean;

function isNull(arg) {
  return arg === null;
}
exports.isNull = isNull;

function isNullOrUndefined(arg) {
  return arg == null;
}
exports.isNullOrUndefined = isNullOrUndefined;

function isNumber(arg) {
  return typeof arg === 'number';
}
exports.isNumber = isNumber;

function isString(arg) {
  return typeof arg === 'string';
}
exports.isString = isString;

function isSymbol(arg) {
  return typeof arg === 'symbol';
}
exports.isSymbol = isSymbol;

function isUndefined(arg) {
  return arg === void 0;
}
exports.isUndefined = isUndefined;

function isRegExp(re) {
  return objectToString(re) === '[object RegExp]';
}
exports.isRegExp = isRegExp;

function isObject(arg) {
  return typeof arg === 'object' && arg !== null;
}
exports.isObject = isObject;

function isDate(d) {
  return objectToString(d) === '[object Date]';
}
exports.isDate = isDate;

function isError(e) {
  return (objectToString(e) === '[object Error]' || e instanceof Error);
}
exports.isError = isError;

function isFunction(arg) {
  return typeof arg === 'function';
}
exports.isFunction = isFunction;

function isPrimitive(arg) {
  return arg === null ||
         typeof arg === 'boolean' ||
         typeof arg === 'number' ||
         typeof arg === 'string' ||
         typeof arg === 'symbol' ||  // ES6 symbol
         typeof arg === 'undefined';
}
exports.isPrimitive = isPrimitive;

exports.isBuffer = Buffer.isBuffer;

function objectToString(o) {
  return Object.prototype.toString.call(o);
}

}).call(this,{"isBuffer":require("../../is-buffer/index.js")})
},{"../../is-buffer/index.js":81}],62:[function(require,module,exports){
var pSlice = Array.prototype.slice;
var objectKeys = require('./lib/keys.js');
var isArguments = require('./lib/is_arguments.js');

var deepEqual = module.exports = function (actual, expected, opts) {
  if (!opts) opts = {};
  // 7.1. All identical values are equivalent, as determined by ===.
  if (actual === expected) {
    return true;

  } else if (actual instanceof Date && expected instanceof Date) {
    return actual.getTime() === expected.getTime();

  // 7.3. Other pairs that do not both pass typeof value == 'object',
  // equivalence is determined by ==.
  } else if (!actual || !expected || typeof actual != 'object' && typeof expected != 'object') {
    return opts.strict ? actual === expected : actual == expected;

  // 7.4. For all other Object pairs, including Array objects, equivalence is
  // determined by having the same number of owned properties (as verified
  // with Object.prototype.hasOwnProperty.call), the same set of keys
  // (although not necessarily the same order), equivalent values for every
  // corresponding key, and an identical 'prototype' property. Note: this
  // accounts for both named and indexed properties on Arrays.
  } else {
    return objEquiv(actual, expected, opts);
  }
}

function isUndefinedOrNull(value) {
  return value === null || value === undefined;
}

function isBuffer (x) {
  if (!x || typeof x !== 'object' || typeof x.length !== 'number') return false;
  if (typeof x.copy !== 'function' || typeof x.slice !== 'function') {
    return false;
  }
  if (x.length > 0 && typeof x[0] !== 'number') return false;
  return true;
}

function objEquiv(a, b, opts) {
  var i, key;
  if (isUndefinedOrNull(a) || isUndefinedOrNull(b))
    return false;
  // an identical 'prototype' property.
  if (a.prototype !== b.prototype) return false;
  //~~~I've managed to break Object.keys through screwy arguments passing.
  //   Converting to array solves the problem.
  if (isArguments(a)) {
    if (!isArguments(b)) {
      return false;
    }
    a = pSlice.call(a);
    b = pSlice.call(b);
    return deepEqual(a, b, opts);
  }
  if (isBuffer(a)) {
    if (!isBuffer(b)) {
      return false;
    }
    if (a.length !== b.length) return false;
    for (i = 0; i < a.length; i++) {
      if (a[i] !== b[i]) return false;
    }
    return true;
  }
  try {
    var ka = objectKeys(a),
        kb = objectKeys(b);
  } catch (e) {//happens when one is a string literal and the other isn't
    return false;
  }
  // having the same number of owned properties (keys incorporates
  // hasOwnProperty)
  if (ka.length != kb.length)
    return false;
  //the same set of keys (although not necessarily the same order),
  ka.sort();
  kb.sort();
  //~~~cheap key test
  for (i = ka.length - 1; i >= 0; i--) {
    if (ka[i] != kb[i])
      return false;
  }
  //equivalent values for every corresponding key, and
  //~~~possibly expensive deep test
  for (i = ka.length - 1; i >= 0; i--) {
    key = ka[i];
    if (!deepEqual(a[key], b[key], opts)) return false;
  }
  return typeof a === typeof b;
}

},{"./lib/is_arguments.js":63,"./lib/keys.js":64}],63:[function(require,module,exports){
var supportsArgumentsClass = (function(){
  return Object.prototype.toString.call(arguments)
})() == '[object Arguments]';

exports = module.exports = supportsArgumentsClass ? supported : unsupported;

exports.supported = supported;
function supported(object) {
  return Object.prototype.toString.call(object) == '[object Arguments]';
};

exports.unsupported = unsupported;
function unsupported(object){
  return object &&
    typeof object == 'object' &&
    typeof object.length == 'number' &&
    Object.prototype.hasOwnProperty.call(object, 'callee') &&
    !Object.prototype.propertyIsEnumerable.call(object, 'callee') ||
    false;
};

},{}],64:[function(require,module,exports){
exports = module.exports = typeof Object.keys === 'function'
  ? Object.keys : shim;

exports.shim = shim;
function shim (obj) {
  var keys = [];
  for (var key in obj) keys.push(key);
  return keys;
}

},{}],65:[function(require,module,exports){
'use strict';

var keys = require('object-keys');
var foreach = require('foreach');
var hasSymbols = typeof Symbol === 'function' && typeof Symbol() === 'symbol';

var toStr = Object.prototype.toString;

var isFunction = function (fn) {
	return typeof fn === 'function' && toStr.call(fn) === '[object Function]';
};

var arePropertyDescriptorsSupported = function () {
	var obj = {};
	try {
		Object.defineProperty(obj, 'x', { enumerable: false, value: obj });
        /* eslint-disable no-unused-vars, no-restricted-syntax */
        for (var _ in obj) { return false; }
        /* eslint-enable no-unused-vars, no-restricted-syntax */
		return obj.x === obj;
	} catch (e) { /* this is IE 8. */
		return false;
	}
};
var supportsDescriptors = Object.defineProperty && arePropertyDescriptorsSupported();

var defineProperty = function (object, name, value, predicate) {
	if (name in object && (!isFunction(predicate) || !predicate())) {
		return;
	}
	if (supportsDescriptors) {
		Object.defineProperty(object, name, {
			configurable: true,
			enumerable: false,
			value: value,
			writable: true
		});
	} else {
		object[name] = value;
	}
};

var defineProperties = function (object, map) {
	var predicates = arguments.length > 2 ? arguments[2] : {};
	var props = keys(map);
	if (hasSymbols) {
		props = props.concat(Object.getOwnPropertySymbols(map));
	}
	foreach(props, function (name) {
		defineProperty(object, name, map[name], predicates[name]);
	});
};

defineProperties.supportsDescriptors = !!supportsDescriptors;

module.exports = defineProperties;

},{"foreach":75,"object-keys":84}],66:[function(require,module,exports){
module.exports = function () {
    for (var i = 0; i < arguments.length; i++) {
        if (arguments[i] !== undefined) return arguments[i];
    }
};

},{}],67:[function(require,module,exports){
'use strict';

var $isNaN = require('./helpers/isNaN');
var $isFinite = require('./helpers/isFinite');

var sign = require('./helpers/sign');
var mod = require('./helpers/mod');

var IsCallable = require('is-callable');
var toPrimitive = require('es-to-primitive/es5');

var has = require('has');

// https://es5.github.io/#x9
var ES5 = {
	ToPrimitive: toPrimitive,

	ToBoolean: function ToBoolean(value) {
		return !!value;
	},
	ToNumber: function ToNumber(value) {
		return Number(value);
	},
	ToInteger: function ToInteger(value) {
		var number = this.ToNumber(value);
		if ($isNaN(number)) { return 0; }
		if (number === 0 || !$isFinite(number)) { return number; }
		return sign(number) * Math.floor(Math.abs(number));
	},
	ToInt32: function ToInt32(x) {
		return this.ToNumber(x) >> 0;
	},
	ToUint32: function ToUint32(x) {
		return this.ToNumber(x) >>> 0;
	},
	ToUint16: function ToUint16(value) {
		var number = this.ToNumber(value);
		if ($isNaN(number) || number === 0 || !$isFinite(number)) { return 0; }
		var posInt = sign(number) * Math.floor(Math.abs(number));
		return mod(posInt, 0x10000);
	},
	ToString: function ToString(value) {
		return String(value);
	},
	ToObject: function ToObject(value) {
		this.CheckObjectCoercible(value);
		return Object(value);
	},
	CheckObjectCoercible: function CheckObjectCoercible(value, optMessage) {
		/* jshint eqnull:true */
		if (value == null) {
			throw new TypeError(optMessage || 'Cannot call method on ' + value);
		}
		return value;
	},
	IsCallable: IsCallable,
	SameValue: function SameValue(x, y) {
		if (x === y) { // 0 === -0, but they are not identical.
			if (x === 0) { return 1 / x === 1 / y; }
			return true;
		}
		return $isNaN(x) && $isNaN(y);
	},

	// http://www.ecma-international.org/ecma-262/5.1/#sec-8
	Type: function Type(x) {
		if (x === null) {
			return 'Null';
		}
		if (typeof x === 'undefined') {
			return 'Undefined';
		}
		if (typeof x === 'function' || typeof x === 'object') {
			return 'Object';
		}
		if (typeof x === 'number') {
			return 'Number';
		}
		if (typeof x === 'boolean') {
			return 'Boolean';
		}
		if (typeof x === 'string') {
			return 'String';
		}
	},

	// http://ecma-international.org/ecma-262/6.0/#sec-property-descriptor-specification-type
	IsPropertyDescriptor: function IsPropertyDescriptor(Desc) {
		if (this.Type(Desc) !== 'Object') {
			return false;
		}
		var allowed = {
			'[[Configurable]]': true,
			'[[Enumerable]]': true,
			'[[Get]]': true,
			'[[Set]]': true,
			'[[Value]]': true,
			'[[Writable]]': true
		};
		// jscs:disable
		for (var key in Desc) { // eslint-disable-line
			if (has(Desc, key) && !allowed[key]) {
				return false;
			}
		}
		// jscs:enable
		var isData = has(Desc, '[[Value]]');
		var IsAccessor = has(Desc, '[[Get]]') || has(Desc, '[[Set]]');
		if (isData && IsAccessor) {
			throw new TypeError('Property Descriptors may not be both accessor and data descriptors');
		}
		return true;
	},

	// http://ecma-international.org/ecma-262/5.1/#sec-8.10.1
	IsAccessorDescriptor: function IsAccessorDescriptor(Desc) {
		if (typeof Desc === 'undefined') {
			return false;
		}

		if (!this.IsPropertyDescriptor(Desc)) {
			throw new TypeError('Desc must be a Property Descriptor');
		}

		if (!has(Desc, '[[Get]]') && !has(Desc, '[[Set]]')) {
			return false;
		}

		return true;
	},

	// http://ecma-international.org/ecma-262/5.1/#sec-8.10.2
	IsDataDescriptor: function IsDataDescriptor(Desc) {
		if (typeof Desc === 'undefined') {
			return false;
		}

		if (!this.IsPropertyDescriptor(Desc)) {
			throw new TypeError('Desc must be a Property Descriptor');
		}

		if (!has(Desc, '[[Value]]') && !has(Desc, '[[Writable]]')) {
			return false;
		}

		return true;
	},

	// http://ecma-international.org/ecma-262/5.1/#sec-8.10.3
	IsGenericDescriptor: function IsGenericDescriptor(Desc) {
		if (typeof Desc === 'undefined') {
			return false;
		}

		if (!this.IsPropertyDescriptor(Desc)) {
			throw new TypeError('Desc must be a Property Descriptor');
		}

		if (!this.IsAccessorDescriptor(Desc) && !this.IsDataDescriptor(Desc)) {
			return true;
		}

		return false;
	},

	// http://ecma-international.org/ecma-262/5.1/#sec-8.10.4
	FromPropertyDescriptor: function FromPropertyDescriptor(Desc) {
		if (typeof Desc === 'undefined') {
			return Desc;
		}

		if (!this.IsPropertyDescriptor(Desc)) {
			throw new TypeError('Desc must be a Property Descriptor');
		}

		if (this.IsDataDescriptor(Desc)) {
			return {
				value: Desc['[[Value]]'],
				writable: !!Desc['[[Writable]]'],
				enumerable: !!Desc['[[Enumerable]]'],
				configurable: !!Desc['[[Configurable]]']
			};
		} else if (this.IsAccessorDescriptor(Desc)) {
			return {
				get: Desc['[[Get]]'],
				set: Desc['[[Set]]'],
				enumerable: !!Desc['[[Enumerable]]'],
				configurable: !!Desc['[[Configurable]]']
			};
		} else {
			throw new TypeError('FromPropertyDescriptor must be called with a fully populated Property Descriptor');
		}
	},

	// http://ecma-international.org/ecma-262/5.1/#sec-8.10.5
	ToPropertyDescriptor: function ToPropertyDescriptor(Obj) {
		if (this.Type(Obj) !== 'Object') {
			throw new TypeError('ToPropertyDescriptor requires an object');
		}

		var desc = {};
		if (has(Obj, 'enumerable')) {
			desc['[[Enumerable]]'] = this.ToBoolean(Obj.enumerable);
		}
		if (has(Obj, 'configurable')) {
			desc['[[Configurable]]'] = this.ToBoolean(Obj.configurable);
		}
		if (has(Obj, 'value')) {
			desc['[[Value]]'] = Obj.value;
		}
		if (has(Obj, 'writable')) {
			desc['[[Writable]]'] = this.ToBoolean(Obj.writable);
		}
		if (has(Obj, 'get')) {
			var getter = Obj.get;
			if (typeof getter !== 'undefined' && !this.IsCallable(getter)) {
				throw new TypeError('getter must be a function');
			}
			desc['[[Get]]'] = getter;
		}
		if (has(Obj, 'set')) {
			var setter = Obj.set;
			if (typeof setter !== 'undefined' && !this.IsCallable(setter)) {
				throw new TypeError('setter must be a function');
			}
			desc['[[Set]]'] = setter;
		}

		if ((has(desc, '[[Get]]') || has(desc, '[[Set]]')) && (has(desc, '[[Value]]') || has(desc, '[[Writable]]'))) {
			throw new TypeError('Invalid property descriptor. Cannot both specify accessors and a value or writable attribute');
		}
		return desc;
	}
};

module.exports = ES5;

},{"./helpers/isFinite":68,"./helpers/isNaN":69,"./helpers/mod":70,"./helpers/sign":71,"es-to-primitive/es5":72,"has":78,"is-callable":82}],68:[function(require,module,exports){
var $isNaN = Number.isNaN || function (a) { return a !== a; };

module.exports = Number.isFinite || function (x) { return typeof x === 'number' && !$isNaN(x) && x !== Infinity && x !== -Infinity; };

},{}],69:[function(require,module,exports){
module.exports = Number.isNaN || function isNaN(a) {
	return a !== a;
};

},{}],70:[function(require,module,exports){
module.exports = function mod(number, modulo) {
	var remain = number % modulo;
	return Math.floor(remain >= 0 ? remain : remain + modulo);
};

},{}],71:[function(require,module,exports){
module.exports = function sign(number) {
	return number >= 0 ? 1 : -1;
};

},{}],72:[function(require,module,exports){
'use strict';

var toStr = Object.prototype.toString;

var isPrimitive = require('./helpers/isPrimitive');

var isCallable = require('is-callable');

// https://es5.github.io/#x8.12
var ES5internalSlots = {
	'[[DefaultValue]]': function (O, hint) {
		var actualHint = hint || (toStr.call(O) === '[object Date]' ? String : Number);

		if (actualHint === String || actualHint === Number) {
			var methods = actualHint === String ? ['toString', 'valueOf'] : ['valueOf', 'toString'];
			var value, i;
			for (i = 0; i < methods.length; ++i) {
				if (isCallable(O[methods[i]])) {
					value = O[methods[i]]();
					if (isPrimitive(value)) {
						return value;
					}
				}
			}
			throw new TypeError('No default value');
		}
		throw new TypeError('invalid [[DefaultValue]] hint supplied');
	}
};

// https://es5.github.io/#x9
module.exports = function ToPrimitive(input, PreferredType) {
	if (isPrimitive(input)) {
		return input;
	}
	return ES5internalSlots['[[DefaultValue]]'](input, PreferredType);
};

},{"./helpers/isPrimitive":73,"is-callable":82}],73:[function(require,module,exports){
module.exports = function isPrimitive(value) {
	return value === null || (typeof value !== 'function' && typeof value !== 'object');
};

},{}],74:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

function EventEmitter() {
  this._events = this._events || {};
  this._maxListeners = this._maxListeners || undefined;
}
module.exports = EventEmitter;

// Backwards-compat with node 0.10.x
EventEmitter.EventEmitter = EventEmitter;

EventEmitter.prototype._events = undefined;
EventEmitter.prototype._maxListeners = undefined;

// By default EventEmitters will print a warning if more than 10 listeners are
// added to it. This is a useful default which helps finding memory leaks.
EventEmitter.defaultMaxListeners = 10;

// Obviously not all Emitters should be limited to 10. This function allows
// that to be increased. Set to zero for unlimited.
EventEmitter.prototype.setMaxListeners = function(n) {
  if (!isNumber(n) || n < 0 || isNaN(n))
    throw TypeError('n must be a positive number');
  this._maxListeners = n;
  return this;
};

EventEmitter.prototype.emit = function(type) {
  var er, handler, len, args, i, listeners;

  if (!this._events)
    this._events = {};

  // If there is no 'error' event listener then throw.
  if (type === 'error') {
    if (!this._events.error ||
        (isObject(this._events.error) && !this._events.error.length)) {
      er = arguments[1];
      if (er instanceof Error) {
        throw er; // Unhandled 'error' event
      } else {
        // At least give some kind of context to the user
        var err = new Error('Uncaught, unspecified "error" event. (' + er + ')');
        err.context = er;
        throw err;
      }
    }
  }

  handler = this._events[type];

  if (isUndefined(handler))
    return false;

  if (isFunction(handler)) {
    switch (arguments.length) {
      // fast cases
      case 1:
        handler.call(this);
        break;
      case 2:
        handler.call(this, arguments[1]);
        break;
      case 3:
        handler.call(this, arguments[1], arguments[2]);
        break;
      // slower
      default:
        args = Array.prototype.slice.call(arguments, 1);
        handler.apply(this, args);
    }
  } else if (isObject(handler)) {
    args = Array.prototype.slice.call(arguments, 1);
    listeners = handler.slice();
    len = listeners.length;
    for (i = 0; i < len; i++)
      listeners[i].apply(this, args);
  }

  return true;
};

EventEmitter.prototype.addListener = function(type, listener) {
  var m;

  if (!isFunction(listener))
    throw TypeError('listener must be a function');

  if (!this._events)
    this._events = {};

  // To avoid recursion in the case that type === "newListener"! Before
  // adding it to the listeners, first emit "newListener".
  if (this._events.newListener)
    this.emit('newListener', type,
              isFunction(listener.listener) ?
              listener.listener : listener);

  if (!this._events[type])
    // Optimize the case of one listener. Don't need the extra array object.
    this._events[type] = listener;
  else if (isObject(this._events[type]))
    // If we've already got an array, just append.
    this._events[type].push(listener);
  else
    // Adding the second element, need to change to array.
    this._events[type] = [this._events[type], listener];

  // Check for listener leak
  if (isObject(this._events[type]) && !this._events[type].warned) {
    if (!isUndefined(this._maxListeners)) {
      m = this._maxListeners;
    } else {
      m = EventEmitter.defaultMaxListeners;
    }

    if (m && m > 0 && this._events[type].length > m) {
      this._events[type].warned = true;
      console.error('(node) warning: possible EventEmitter memory ' +
                    'leak detected. %d listeners added. ' +
                    'Use emitter.setMaxListeners() to increase limit.',
                    this._events[type].length);
      if (typeof console.trace === 'function') {
        // not supported in IE 10
        console.trace();
      }
    }
  }

  return this;
};

EventEmitter.prototype.on = EventEmitter.prototype.addListener;

EventEmitter.prototype.once = function(type, listener) {
  if (!isFunction(listener))
    throw TypeError('listener must be a function');

  var fired = false;

  function g() {
    this.removeListener(type, g);

    if (!fired) {
      fired = true;
      listener.apply(this, arguments);
    }
  }

  g.listener = listener;
  this.on(type, g);

  return this;
};

// emits a 'removeListener' event iff the listener was removed
EventEmitter.prototype.removeListener = function(type, listener) {
  var list, position, length, i;

  if (!isFunction(listener))
    throw TypeError('listener must be a function');

  if (!this._events || !this._events[type])
    return this;

  list = this._events[type];
  length = list.length;
  position = -1;

  if (list === listener ||
      (isFunction(list.listener) && list.listener === listener)) {
    delete this._events[type];
    if (this._events.removeListener)
      this.emit('removeListener', type, listener);

  } else if (isObject(list)) {
    for (i = length; i-- > 0;) {
      if (list[i] === listener ||
          (list[i].listener && list[i].listener === listener)) {
        position = i;
        break;
      }
    }

    if (position < 0)
      return this;

    if (list.length === 1) {
      list.length = 0;
      delete this._events[type];
    } else {
      list.splice(position, 1);
    }

    if (this._events.removeListener)
      this.emit('removeListener', type, listener);
  }

  return this;
};

EventEmitter.prototype.removeAllListeners = function(type) {
  var key, listeners;

  if (!this._events)
    return this;

  // not listening for removeListener, no need to emit
  if (!this._events.removeListener) {
    if (arguments.length === 0)
      this._events = {};
    else if (this._events[type])
      delete this._events[type];
    return this;
  }

  // emit removeListener for all listeners on all events
  if (arguments.length === 0) {
    for (key in this._events) {
      if (key === 'removeListener') continue;
      this.removeAllListeners(key);
    }
    this.removeAllListeners('removeListener');
    this._events = {};
    return this;
  }

  listeners = this._events[type];

  if (isFunction(listeners)) {
    this.removeListener(type, listeners);
  } else if (listeners) {
    // LIFO order
    while (listeners.length)
      this.removeListener(type, listeners[listeners.length - 1]);
  }
  delete this._events[type];

  return this;
};

EventEmitter.prototype.listeners = function(type) {
  var ret;
  if (!this._events || !this._events[type])
    ret = [];
  else if (isFunction(this._events[type]))
    ret = [this._events[type]];
  else
    ret = this._events[type].slice();
  return ret;
};

EventEmitter.prototype.listenerCount = function(type) {
  if (this._events) {
    var evlistener = this._events[type];

    if (isFunction(evlistener))
      return 1;
    else if (evlistener)
      return evlistener.length;
  }
  return 0;
};

EventEmitter.listenerCount = function(emitter, type) {
  return emitter.listenerCount(type);
};

function isFunction(arg) {
  return typeof arg === 'function';
}

function isNumber(arg) {
  return typeof arg === 'number';
}

function isObject(arg) {
  return typeof arg === 'object' && arg !== null;
}

function isUndefined(arg) {
  return arg === void 0;
}

},{}],75:[function(require,module,exports){

var hasOwn = Object.prototype.hasOwnProperty;
var toString = Object.prototype.toString;

module.exports = function forEach (obj, fn, ctx) {
    if (toString.call(fn) !== '[object Function]') {
        throw new TypeError('iterator must be a function');
    }
    var l = obj.length;
    if (l === +l) {
        for (var i = 0; i < l; i++) {
            fn.call(ctx, obj[i], i, obj);
        }
    } else {
        for (var k in obj) {
            if (hasOwn.call(obj, k)) {
                fn.call(ctx, obj[k], k, obj);
            }
        }
    }
};


},{}],76:[function(require,module,exports){
var ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';
var slice = Array.prototype.slice;
var toStr = Object.prototype.toString;
var funcType = '[object Function]';

module.exports = function bind(that) {
    var target = this;
    if (typeof target !== 'function' || toStr.call(target) !== funcType) {
        throw new TypeError(ERROR_MESSAGE + target);
    }
    var args = slice.call(arguments, 1);

    var bound;
    var binder = function () {
        if (this instanceof bound) {
            var result = target.apply(
                this,
                args.concat(slice.call(arguments))
            );
            if (Object(result) === result) {
                return result;
            }
            return this;
        } else {
            return target.apply(
                that,
                args.concat(slice.call(arguments))
            );
        }
    };

    var boundLength = Math.max(0, target.length - args.length);
    var boundArgs = [];
    for (var i = 0; i < boundLength; i++) {
        boundArgs.push('$' + i);
    }

    bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this,arguments); }')(binder);

    if (target.prototype) {
        var Empty = function Empty() {};
        Empty.prototype = target.prototype;
        bound.prototype = new Empty();
        Empty.prototype = null;
    }

    return bound;
};

},{}],77:[function(require,module,exports){
var implementation = require('./implementation');

module.exports = Function.prototype.bind || implementation;

},{"./implementation":76}],78:[function(require,module,exports){
var bind = require('function-bind');

module.exports = bind.call(Function.call, Object.prototype.hasOwnProperty);

},{"function-bind":77}],79:[function(require,module,exports){
exports.read = function (buffer, offset, isLE, mLen, nBytes) {
  var e, m
  var eLen = nBytes * 8 - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var nBits = -7
  var i = isLE ? (nBytes - 1) : 0
  var d = isLE ? -1 : 1
  var s = buffer[offset + i]

  i += d

  e = s & ((1 << (-nBits)) - 1)
  s >>= (-nBits)
  nBits += eLen
  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}

  m = e & ((1 << (-nBits)) - 1)
  e >>= (-nBits)
  nBits += mLen
  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}

  if (e === 0) {
    e = 1 - eBias
  } else if (e === eMax) {
    return m ? NaN : ((s ? -1 : 1) * Infinity)
  } else {
    m = m + Math.pow(2, mLen)
    e = e - eBias
  }
  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
}

exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
  var e, m, c
  var eLen = nBytes * 8 - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
  var i = isLE ? 0 : (nBytes - 1)
  var d = isLE ? 1 : -1
  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0

  value = Math.abs(value)

  if (isNaN(value) || value === Infinity) {
    m = isNaN(value) ? 1 : 0
    e = eMax
  } else {
    e = Math.floor(Math.log(value) / Math.LN2)
    if (value * (c = Math.pow(2, -e)) < 1) {
      e--
      c *= 2
    }
    if (e + eBias >= 1) {
      value += rt / c
    } else {
      value += rt * Math.pow(2, 1 - eBias)
    }
    if (value * c >= 2) {
      e++
      c /= 2
    }

    if (e + eBias >= eMax) {
      m = 0
      e = eMax
    } else if (e + eBias >= 1) {
      m = (value * c - 1) * Math.pow(2, mLen)
      e = e + eBias
    } else {
      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
      e = 0
    }
  }

  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

  e = (e << mLen) | m
  eLen += mLen
  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

  buffer[offset + i - d] |= s * 128
}

},{}],80:[function(require,module,exports){
if (typeof Object.create === 'function') {
  // implementation from standard node.js 'util' module
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    ctor.prototype = Object.create(superCtor.prototype, {
      constructor: {
        value: ctor,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
  };
} else {
  // old school shim for old browsers
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    var TempCtor = function () {}
    TempCtor.prototype = superCtor.prototype
    ctor.prototype = new TempCtor()
    ctor.prototype.constructor = ctor
  }
}

},{}],81:[function(require,module,exports){
/*!
 * Determine if an object is a Buffer
 *
 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 * @license  MIT
 */

// The _isBuffer check is for Safari 5-7 support, because it's missing
// Object.prototype.constructor. Remove this eventually
module.exports = function (obj) {
  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)
}

function isBuffer (obj) {
  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)
}

// For Node v0.10 support. Remove this eventually.
function isSlowBuffer (obj) {
  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))
}

},{}],82:[function(require,module,exports){
'use strict';

var fnToStr = Function.prototype.toString;

var constructorRegex = /^\s*class /;
var isES6ClassFn = function isES6ClassFn(value) {
	try {
		var fnStr = fnToStr.call(value);
		var singleStripped = fnStr.replace(/\/\/.*\n/g, '');
		var multiStripped = singleStripped.replace(/\/\*[.\s\S]*\*\//g, '');
		var spaceStripped = multiStripped.replace(/\n/mg, ' ').replace(/ {2}/g, ' ');
		return constructorRegex.test(spaceStripped);
	} catch (e) {
		return false; // not a function
	}
};

var tryFunctionObject = function tryFunctionObject(value) {
	try {
		if (isES6ClassFn(value)) { return false; }
		fnToStr.call(value);
		return true;
	} catch (e) {
		return false;
	}
};
var toStr = Object.prototype.toString;
var fnClass = '[object Function]';
var genClass = '[object GeneratorFunction]';
var hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';

module.exports = function isCallable(value) {
	if (!value) { return false; }
	if (typeof value !== 'function' && typeof value !== 'object') { return false; }
	if (hasToStringTag) { return tryFunctionObject(value); }
	if (isES6ClassFn(value)) { return false; }
	var strClass = toStr.call(value);
	return strClass === fnClass || strClass === genClass;
};

},{}],83:[function(require,module,exports){
var hasMap = typeof Map === 'function' && Map.prototype;
var mapSizeDescriptor = Object.getOwnPropertyDescriptor && hasMap ? Object.getOwnPropertyDescriptor(Map.prototype, 'size') : null;
var mapSize = hasMap && mapSizeDescriptor && typeof mapSizeDescriptor.get === 'function' ? mapSizeDescriptor.get : null;
var mapForEach = hasMap && Map.prototype.forEach;
var hasSet = typeof Set === 'function' && Set.prototype;
var setSizeDescriptor = Object.getOwnPropertyDescriptor && hasSet ? Object.getOwnPropertyDescriptor(Set.prototype, 'size') : null;
var setSize = hasSet && setSizeDescriptor && typeof setSizeDescriptor.get === 'function' ? setSizeDescriptor.get : null;
var setForEach = hasSet && Set.prototype.forEach;

module.exports = function inspect_ (obj, opts, depth, seen) {
    if (!opts) opts = {};
    
    var maxDepth = opts.depth === undefined ? 5 : opts.depth;
    if (depth === undefined) depth = 0;
    if (depth >= maxDepth && maxDepth > 0
    && obj && typeof obj === 'object') {
        return '[Object]';
    }
    
    if (seen === undefined) seen = [];
    else if (indexOf(seen, obj) >= 0) {
        return '[Circular]';
    }
    
    function inspect (value, from) {
        if (from) {
            seen = seen.slice();
            seen.push(from);
        }
        return inspect_(value, opts, depth + 1, seen);
    }
    
    if (typeof obj === 'string') {
        return inspectString(obj);
    }
    else if (typeof obj === 'function') {
        var name = nameOf(obj);
        return '[Function' + (name ? ': ' + name : '') + ']';
    }
    else if (obj === null) {
        return 'null';
    }
    else if (isSymbol(obj)) {
        var symString = Symbol.prototype.toString.call(obj);
        return typeof obj === 'object' ? 'Object(' + symString + ')' : symString;
    }
    else if (isElement(obj)) {
        var s = '<' + String(obj.nodeName).toLowerCase();
        var attrs = obj.attributes || [];
        for (var i = 0; i < attrs.length; i++) {
            s += ' ' + attrs[i].name + '="' + quote(attrs[i].value) + '"';
        }
        s += '>';
        if (obj.childNodes && obj.childNodes.length) s += '...';
        s += '</' + String(obj.nodeName).toLowerCase() + '>';
        return s;
    }
    else if (isArray(obj)) {
        if (obj.length === 0) return '[]';
        var xs = Array(obj.length);
        for (var i = 0; i < obj.length; i++) {
            xs[i] = has(obj, i) ? inspect(obj[i], obj) : '';
        }
        return '[ ' + xs.join(', ') + ' ]';
    }
    else if (isError(obj)) {
        var parts = [];
        for (var key in obj) {
            if (!has(obj, key)) continue;
            
            if (/[^\w$]/.test(key)) {
                parts.push(inspect(key) + ': ' + inspect(obj[key]));
            }
            else {
                parts.push(key + ': ' + inspect(obj[key]));
            }
        }
        if (parts.length === 0) return '[' + obj + ']';
        return '{ [' + obj + '] ' + parts.join(', ') + ' }';
    }
    else if (typeof obj === 'object' && typeof obj.inspect === 'function') {
        return obj.inspect();
    }
    else if (isMap(obj)) {
        var parts = [];
        mapForEach.call(obj, function (value, key) {
            parts.push(inspect(key, obj) + ' => ' + inspect(value, obj));
        });
        return 'Map (' + mapSize.call(obj) + ') {' + parts.join(', ') + '}';
    }
    else if (isSet(obj)) {
        var parts = [];
        setForEach.call(obj, function (value ) {
            parts.push(inspect(value, obj));
        });
        return 'Set (' + setSize.call(obj) + ') {' + parts.join(', ') + '}';
    }
    else if (typeof obj === 'object' && !isDate(obj) && !isRegExp(obj)) {
        var xs = [], keys = [];
        for (var key in obj) {
            if (has(obj, key)) keys.push(key);
        }
        keys.sort();
        for (var i = 0; i < keys.length; i++) {
            var key = keys[i];
            if (/[^\w$]/.test(key)) {
                xs.push(inspect(key) + ': ' + inspect(obj[key], obj));
            }
            else xs.push(key + ': ' + inspect(obj[key], obj));
        }
        if (xs.length === 0) return '{}';
        return '{ ' + xs.join(', ') + ' }';
    }
    else return String(obj);
};

function quote (s) {
    return String(s).replace(/"/g, '&quot;');
}

function isArray (obj) { return toStr(obj) === '[object Array]' }
function isDate (obj) { return toStr(obj) === '[object Date]' }
function isRegExp (obj) { return toStr(obj) === '[object RegExp]' }
function isError (obj) { return toStr(obj) === '[object Error]' }
function isSymbol (obj) { return toStr(obj) === '[object Symbol]' }

var hasOwn = Object.prototype.hasOwnProperty || function (key) { return key in this; };
function has (obj, key) {
    return hasOwn.call(obj, key);
}

function toStr (obj) {
    return Object.prototype.toString.call(obj);
}

function nameOf (f) {
    if (f.name) return f.name;
    var m = f.toString().match(/^function\s*([\w$]+)/);
    if (m) return m[1];
}

function indexOf (xs, x) {
    if (xs.indexOf) return xs.indexOf(x);
    for (var i = 0, l = xs.length; i < l; i++) {
        if (xs[i] === x) return i;
    }
    return -1;
}

function isMap (x) {
    if (!mapSize) {
        return false;
    }
    try {
        mapSize.call(x);
        return true;
    } catch (e) {}
    return false;
}

function isSet (x) {
    if (!setSize) {
        return false;
    }
    try {
        setSize.call(x);
        return true;
    } catch (e) {}
    return false;
}

function isElement (x) {
    if (!x || typeof x !== 'object') return false;
    if (typeof HTMLElement !== 'undefined' && x instanceof HTMLElement) {
        return true;
    }
    return typeof x.nodeName === 'string'
        && typeof x.getAttribute === 'function'
    ;
}

function inspectString (str) {
    var s = str.replace(/(['\\])/g, '\\$1').replace(/[\x00-\x1f]/g, lowbyte);
    return "'" + s + "'";
    
    function lowbyte (c) {
        var n = c.charCodeAt(0);
        var x = { 8: 'b', 9: 't', 10: 'n', 12: 'f', 13: 'r' }[n];
        if (x) return '\\' + x;
        return '\\x' + (n < 0x10 ? '0' : '') + n.toString(16);
    }
}

},{}],84:[function(require,module,exports){
'use strict';

// modified from https://github.com/es-shims/es5-shim
var has = Object.prototype.hasOwnProperty;
var toStr = Object.prototype.toString;
var slice = Array.prototype.slice;
var isArgs = require('./isArguments');
var isEnumerable = Object.prototype.propertyIsEnumerable;
var hasDontEnumBug = !isEnumerable.call({ toString: null }, 'toString');
var hasProtoEnumBug = isEnumerable.call(function () {}, 'prototype');
var dontEnums = [
	'toString',
	'toLocaleString',
	'valueOf',
	'hasOwnProperty',
	'isPrototypeOf',
	'propertyIsEnumerable',
	'constructor'
];
var equalsConstructorPrototype = function (o) {
	var ctor = o.constructor;
	return ctor && ctor.prototype === o;
};
var excludedKeys = {
	$console: true,
	$external: true,
	$frame: true,
	$frameElement: true,
	$frames: true,
	$innerHeight: true,
	$innerWidth: true,
	$outerHeight: true,
	$outerWidth: true,
	$pageXOffset: true,
	$pageYOffset: true,
	$parent: true,
	$scrollLeft: true,
	$scrollTop: true,
	$scrollX: true,
	$scrollY: true,
	$self: true,
	$webkitIndexedDB: true,
	$webkitStorageInfo: true,
	$window: true
};
var hasAutomationEqualityBug = (function () {
	/* global window */
	if (typeof window === 'undefined') { return false; }
	for (var k in window) {
		try {
			if (!excludedKeys['$' + k] && has.call(window, k) && window[k] !== null && typeof window[k] === 'object') {
				try {
					equalsConstructorPrototype(window[k]);
				} catch (e) {
					return true;
				}
			}
		} catch (e) {
			return true;
		}
	}
	return false;
}());
var equalsConstructorPrototypeIfNotBuggy = function (o) {
	/* global window */
	if (typeof window === 'undefined' || !hasAutomationEqualityBug) {
		return equalsConstructorPrototype(o);
	}
	try {
		return equalsConstructorPrototype(o);
	} catch (e) {
		return false;
	}
};

var keysShim = function keys(object) {
	var isObject = object !== null && typeof object === 'object';
	var isFunction = toStr.call(object) === '[object Function]';
	var isArguments = isArgs(object);
	var isString = isObject && toStr.call(object) === '[object String]';
	var theKeys = [];

	if (!isObject && !isFunction && !isArguments) {
		throw new TypeError('Object.keys called on a non-object');
	}

	var skipProto = hasProtoEnumBug && isFunction;
	if (isString && object.length > 0 && !has.call(object, 0)) {
		for (var i = 0; i < object.length; ++i) {
			theKeys.push(String(i));
		}
	}

	if (isArguments && object.length > 0) {
		for (var j = 0; j < object.length; ++j) {
			theKeys.push(String(j));
		}
	} else {
		for (var name in object) {
			if (!(skipProto && name === 'prototype') && has.call(object, name)) {
				theKeys.push(String(name));
			}
		}
	}

	if (hasDontEnumBug) {
		var skipConstructor = equalsConstructorPrototypeIfNotBuggy(object);

		for (var k = 0; k < dontEnums.length; ++k) {
			if (!(skipConstructor && dontEnums[k] === 'constructor') && has.call(object, dontEnums[k])) {
				theKeys.push(dontEnums[k]);
			}
		}
	}
	return theKeys;
};

keysShim.shim = function shimObjectKeys() {
	if (Object.keys) {
		var keysWorksWithArguments = (function () {
			// Safari 5.0 bug
			return (Object.keys(arguments) || '').length === 2;
		}(1, 2));
		if (!keysWorksWithArguments) {
			var originalKeys = Object.keys;
			Object.keys = function keys(object) {
				if (isArgs(object)) {
					return originalKeys(slice.call(object));
				} else {
					return originalKeys(object);
				}
			};
		}
	} else {
		Object.keys = keysShim;
	}
	return Object.keys || keysShim;
};

module.exports = keysShim;

},{"./isArguments":85}],85:[function(require,module,exports){
'use strict';

var toStr = Object.prototype.toString;

module.exports = function isArguments(value) {
	var str = toStr.call(value);
	var isArgs = str === '[object Arguments]';
	if (!isArgs) {
		isArgs = str !== '[object Array]' &&
			value !== null &&
			typeof value === 'object' &&
			typeof value.length === 'number' &&
			value.length >= 0 &&
			toStr.call(value.callee) === '[object Function]';
	}
	return isArgs;
};

},{}],86:[function(require,module,exports){
(function (process){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// resolves . and .. elements in a path array with directory names there
// must be no slashes, empty elements, or device names (c:\) in the array
// (so also no leading and trailing slashes - it does not distinguish
// relative and absolute paths)
function normalizeArray(parts, allowAboveRoot) {
  // if the path tries to go above the root, `up` ends up > 0
  var up = 0;
  for (var i = parts.length - 1; i >= 0; i--) {
    var last = parts[i];
    if (last === '.') {
      parts.splice(i, 1);
    } else if (last === '..') {
      parts.splice(i, 1);
      up++;
    } else if (up) {
      parts.splice(i, 1);
      up--;
    }
  }

  // if the path is allowed to go above the root, restore leading ..s
  if (allowAboveRoot) {
    for (; up--; up) {
      parts.unshift('..');
    }
  }

  return parts;
}

// Split a filename into [root, dir, basename, ext], unix version
// 'root' is just a slash, or nothing.
var splitPathRe =
    /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
var splitPath = function(filename) {
  return splitPathRe.exec(filename).slice(1);
};

// path.resolve([from ...], to)
// posix version
exports.resolve = function() {
  var resolvedPath = '',
      resolvedAbsolute = false;

  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
    var path = (i >= 0) ? arguments[i] : process.cwd();

    // Skip empty and invalid entries
    if (typeof path !== 'string') {
      throw new TypeError('Arguments to path.resolve must be strings');
    } else if (!path) {
      continue;
    }

    resolvedPath = path + '/' + resolvedPath;
    resolvedAbsolute = path.charAt(0) === '/';
  }

  // At this point the path should be resolved to a full absolute path, but
  // handle relative paths to be safe (might happen when process.cwd() fails)

  // Normalize the path
  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {
    return !!p;
  }), !resolvedAbsolute).join('/');

  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';
};

// path.normalize(path)
// posix version
exports.normalize = function(path) {
  var isAbsolute = exports.isAbsolute(path),
      trailingSlash = substr(path, -1) === '/';

  // Normalize the path
  path = normalizeArray(filter(path.split('/'), function(p) {
    return !!p;
  }), !isAbsolute).join('/');

  if (!path && !isAbsolute) {
    path = '.';
  }
  if (path && trailingSlash) {
    path += '/';
  }

  return (isAbsolute ? '/' : '') + path;
};

// posix version
exports.isAbsolute = function(path) {
  return path.charAt(0) === '/';
};

// posix version
exports.join = function() {
  var paths = Array.prototype.slice.call(arguments, 0);
  return exports.normalize(filter(paths, function(p, index) {
    if (typeof p !== 'string') {
      throw new TypeError('Arguments to path.join must be strings');
    }
    return p;
  }).join('/'));
};


// path.relative(from, to)
// posix version
exports.relative = function(from, to) {
  from = exports.resolve(from).substr(1);
  to = exports.resolve(to).substr(1);

  function trim(arr) {
    var start = 0;
    for (; start < arr.length; start++) {
      if (arr[start] !== '') break;
    }

    var end = arr.length - 1;
    for (; end >= 0; end--) {
      if (arr[end] !== '') break;
    }

    if (start > end) return [];
    return arr.slice(start, end - start + 1);
  }

  var fromParts = trim(from.split('/'));
  var toParts = trim(to.split('/'));

  var length = Math.min(fromParts.length, toParts.length);
  var samePartsLength = length;
  for (var i = 0; i < length; i++) {
    if (fromParts[i] !== toParts[i]) {
      samePartsLength = i;
      break;
    }
  }

  var outputParts = [];
  for (var i = samePartsLength; i < fromParts.length; i++) {
    outputParts.push('..');
  }

  outputParts = outputParts.concat(toParts.slice(samePartsLength));

  return outputParts.join('/');
};

exports.sep = '/';
exports.delimiter = ':';

exports.dirname = function(path) {
  var result = splitPath(path),
      root = result[0],
      dir = result[1];

  if (!root && !dir) {
    // No dirname whatsoever
    return '.';
  }

  if (dir) {
    // It has a dirname, strip trailing slash
    dir = dir.substr(0, dir.length - 1);
  }

  return root + dir;
};


exports.basename = function(path, ext) {
  var f = splitPath(path)[2];
  // TODO: make this comparison case-insensitive on windows?
  if (ext && f.substr(-1 * ext.length) === ext) {
    f = f.substr(0, f.length - ext.length);
  }
  return f;
};


exports.extname = function(path) {
  return splitPath(path)[3];
};

function filter (xs, f) {
    if (xs.filter) return xs.filter(f);
    var res = [];
    for (var i = 0; i < xs.length; i++) {
        if (f(xs[i], i, xs)) res.push(xs[i]);
    }
    return res;
}

// String.prototype.substr - negative index don't work in IE8
var substr = 'ab'.substr(-1) === 'b'
    ? function (str, start, len) { return str.substr(start, len) }
    : function (str, start, len) {
        if (start < 0) start = str.length + start;
        return str.substr(start, len);
    }
;

}).call(this,require('_process'))
},{"_process":59}],87:[function(require,module,exports){
(function (process){
'use strict';

if (!process.version ||
    process.version.indexOf('v0.') === 0 ||
    process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {
  module.exports = nextTick;
} else {
  module.exports = process.nextTick;
}

function nextTick(fn, arg1, arg2, arg3) {
  if (typeof fn !== 'function') {
    throw new TypeError('"callback" argument must be a function');
  }
  var len = arguments.length;
  var args, i;
  switch (len) {
  case 0:
  case 1:
    return process.nextTick(fn);
  case 2:
    return process.nextTick(function afterTickOne() {
      fn.call(null, arg1);
    });
  case 3:
    return process.nextTick(function afterTickTwo() {
      fn.call(null, arg1, arg2);
    });
  case 4:
    return process.nextTick(function afterTickThree() {
      fn.call(null, arg1, arg2, arg3);
    });
  default:
    args = new Array(len - 1);
    i = 0;
    while (i < args.length) {
      args[i++] = arguments[i];
    }
    return process.nextTick(function afterTick() {
      fn.apply(null, args);
    });
  }
}

}).call(this,require('_process'))
},{"_process":59}],88:[function(require,module,exports){
module.exports = require('./lib/_stream_duplex.js');

},{"./lib/_stream_duplex.js":89}],89:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// a duplex stream is just a stream that is both readable and writable.
// Since JS doesn't have multiple prototypal inheritance, this class
// prototypally inherits from Readable, and then parasitically from
// Writable.

'use strict';

/*<replacement>*/

var processNextTick = require('process-nextick-args');
/*</replacement>*/

/*<replacement>*/
var objectKeys = Object.keys || function (obj) {
  var keys = [];
  for (var key in obj) {
    keys.push(key);
  }return keys;
};
/*</replacement>*/

module.exports = Duplex;

/*<replacement>*/
var util = require('core-util-is');
util.inherits = require('inherits');
/*</replacement>*/

var Readable = require('./_stream_readable');
var Writable = require('./_stream_writable');

util.inherits(Duplex, Readable);

var keys = objectKeys(Writable.prototype);
for (var v = 0; v < keys.length; v++) {
  var method = keys[v];
  if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];
}

function Duplex(options) {
  if (!(this instanceof Duplex)) return new Duplex(options);

  Readable.call(this, options);
  Writable.call(this, options);

  if (options && options.readable === false) this.readable = false;

  if (options && options.writable === false) this.writable = false;

  this.allowHalfOpen = true;
  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;

  this.once('end', onend);
}

// the no-half-open enforcer
function onend() {
  // if we allow half-open state, or if the writable side ended,
  // then we're ok.
  if (this.allowHalfOpen || this._writableState.ended) return;

  // no more data can be written.
  // But allow more writes to happen in this tick.
  processNextTick(onEndNT, this);
}

function onEndNT(self) {
  self.end();
}

Object.defineProperty(Duplex.prototype, 'destroyed', {
  get: function () {
    if (this._readableState === undefined || this._writableState === undefined) {
      return false;
    }
    return this._readableState.destroyed && this._writableState.destroyed;
  },
  set: function (value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (this._readableState === undefined || this._writableState === undefined) {
      return;
    }

    // backward compatibility, the user is explicitly
    // managing destroyed
    this._readableState.destroyed = value;
    this._writableState.destroyed = value;
  }
});

Duplex.prototype._destroy = function (err, cb) {
  this.push(null);
  this.end();

  processNextTick(cb, err);
};

function forEach(xs, f) {
  for (var i = 0, l = xs.length; i < l; i++) {
    f(xs[i], i);
  }
}
},{"./_stream_readable":91,"./_stream_writable":93,"core-util-is":61,"inherits":80,"process-nextick-args":87}],90:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// a passthrough stream.
// basically just the most minimal sort of Transform stream.
// Every written chunk gets output as-is.

'use strict';

module.exports = PassThrough;

var Transform = require('./_stream_transform');

/*<replacement>*/
var util = require('core-util-is');
util.inherits = require('inherits');
/*</replacement>*/

util.inherits(PassThrough, Transform);

function PassThrough(options) {
  if (!(this instanceof PassThrough)) return new PassThrough(options);

  Transform.call(this, options);
}

PassThrough.prototype._transform = function (chunk, encoding, cb) {
  cb(null, chunk);
};
},{"./_stream_transform":92,"core-util-is":61,"inherits":80}],91:[function(require,module,exports){
(function (process,global){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

'use strict';

/*<replacement>*/

var processNextTick = require('process-nextick-args');
/*</replacement>*/

module.exports = Readable;

/*<replacement>*/
var isArray = require('isarray');
/*</replacement>*/

/*<replacement>*/
var Duplex;
/*</replacement>*/

Readable.ReadableState = ReadableState;

/*<replacement>*/
var EE = require('events').EventEmitter;

var EElistenerCount = function (emitter, type) {
  return emitter.listeners(type).length;
};
/*</replacement>*/

/*<replacement>*/
var Stream = require('./internal/streams/stream');
/*</replacement>*/

// TODO(bmeurer): Change this back to const once hole checks are
// properly optimized away early in Ignition+TurboFan.
/*<replacement>*/
var Buffer = require('safe-buffer').Buffer;
var OurUint8Array = global.Uint8Array || function () {};
function _uint8ArrayToBuffer(chunk) {
  return Buffer.from(chunk);
}
function _isUint8Array(obj) {
  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;
}
/*</replacement>*/

/*<replacement>*/
var util = require('core-util-is');
util.inherits = require('inherits');
/*</replacement>*/

/*<replacement>*/
var debugUtil = require('util');
var debug = void 0;
if (debugUtil && debugUtil.debuglog) {
  debug = debugUtil.debuglog('stream');
} else {
  debug = function () {};
}
/*</replacement>*/

var BufferList = require('./internal/streams/BufferList');
var destroyImpl = require('./internal/streams/destroy');
var StringDecoder;

util.inherits(Readable, Stream);

var kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];

function prependListener(emitter, event, fn) {
  // Sadly this is not cacheable as some libraries bundle their own
  // event emitter implementation with them.
  if (typeof emitter.prependListener === 'function') {
    return emitter.prependListener(event, fn);
  } else {
    // This is a hack to make sure that our error handler is attached before any
    // userland ones.  NEVER DO THIS. This is here only because this code needs
    // to continue to work with older versions of Node.js that do not include
    // the prependListener() method. The goal is to eventually remove this hack.
    if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];
  }
}

function ReadableState(options, stream) {
  Duplex = Duplex || require('./_stream_duplex');

  options = options || {};

  // object stream flag. Used to make read(n) ignore n and to
  // make all the buffer merging and length checks go away
  this.objectMode = !!options.objectMode;

  if (stream instanceof Duplex) this.objectMode = this.objectMode || !!options.readableObjectMode;

  // the point at which it stops calling _read() to fill the buffer
  // Note: 0 is a valid value, means "don't call _read preemptively ever"
  var hwm = options.highWaterMark;
  var defaultHwm = this.objectMode ? 16 : 16 * 1024;
  this.highWaterMark = hwm || hwm === 0 ? hwm : defaultHwm;

  // cast to ints.
  this.highWaterMark = Math.floor(this.highWaterMark);

  // A linked list is used to store data chunks instead of an array because the
  // linked list can remove elements from the beginning faster than
  // array.shift()
  this.buffer = new BufferList();
  this.length = 0;
  this.pipes = null;
  this.pipesCount = 0;
  this.flowing = null;
  this.ended = false;
  this.endEmitted = false;
  this.reading = false;

  // a flag to be able to tell if the event 'readable'/'data' is emitted
  // immediately, or on a later tick.  We set this to true at first, because
  // any actions that shouldn't happen until "later" should generally also
  // not happen before the first read call.
  this.sync = true;

  // whenever we return null, then we set a flag to say
  // that we're awaiting a 'readable' event emission.
  this.needReadable = false;
  this.emittedReadable = false;
  this.readableListening = false;
  this.resumeScheduled = false;

  // has it been destroyed
  this.destroyed = false;

  // Crypto is kind of old and crusty.  Historically, its default string
  // encoding is 'binary' so we have to make this configurable.
  // Everything else in the universe uses 'utf8', though.
  this.defaultEncoding = options.defaultEncoding || 'utf8';

  // the number of writers that are awaiting a drain event in .pipe()s
  this.awaitDrain = 0;

  // if true, a maybeReadMore has been scheduled
  this.readingMore = false;

  this.decoder = null;
  this.encoding = null;
  if (options.encoding) {
    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;
    this.decoder = new StringDecoder(options.encoding);
    this.encoding = options.encoding;
  }
}

function Readable(options) {
  Duplex = Duplex || require('./_stream_duplex');

  if (!(this instanceof Readable)) return new Readable(options);

  this._readableState = new ReadableState(options, this);

  // legacy
  this.readable = true;

  if (options) {
    if (typeof options.read === 'function') this._read = options.read;

    if (typeof options.destroy === 'function') this._destroy = options.destroy;
  }

  Stream.call(this);
}

Object.defineProperty(Readable.prototype, 'destroyed', {
  get: function () {
    if (this._readableState === undefined) {
      return false;
    }
    return this._readableState.destroyed;
  },
  set: function (value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (!this._readableState) {
      return;
    }

    // backward compatibility, the user is explicitly
    // managing destroyed
    this._readableState.destroyed = value;
  }
});

Readable.prototype.destroy = destroyImpl.destroy;
Readable.prototype._undestroy = destroyImpl.undestroy;
Readable.prototype._destroy = function (err, cb) {
  this.push(null);
  cb(err);
};

// Manually shove something into the read() buffer.
// This returns true if the highWaterMark has not been hit yet,
// similar to how Writable.write() returns true if you should
// write() some more.
Readable.prototype.push = function (chunk, encoding) {
  var state = this._readableState;
  var skipChunkCheck;

  if (!state.objectMode) {
    if (typeof chunk === 'string') {
      encoding = encoding || state.defaultEncoding;
      if (encoding !== state.encoding) {
        chunk = Buffer.from(chunk, encoding);
        encoding = '';
      }
      skipChunkCheck = true;
    }
  } else {
    skipChunkCheck = true;
  }

  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);
};

// Unshift should *always* be something directly out of read()
Readable.prototype.unshift = function (chunk) {
  return readableAddChunk(this, chunk, null, true, false);
};

function readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {
  var state = stream._readableState;
  if (chunk === null) {
    state.reading = false;
    onEofChunk(stream, state);
  } else {
    var er;
    if (!skipChunkCheck) er = chunkInvalid(state, chunk);
    if (er) {
      stream.emit('error', er);
    } else if (state.objectMode || chunk && chunk.length > 0) {
      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {
        chunk = _uint8ArrayToBuffer(chunk);
      }

      if (addToFront) {
        if (state.endEmitted) stream.emit('error', new Error('stream.unshift() after end event'));else addChunk(stream, state, chunk, true);
      } else if (state.ended) {
        stream.emit('error', new Error('stream.push() after EOF'));
      } else {
        state.reading = false;
        if (state.decoder && !encoding) {
          chunk = state.decoder.write(chunk);
          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);
        } else {
          addChunk(stream, state, chunk, false);
        }
      }
    } else if (!addToFront) {
      state.reading = false;
    }
  }

  return needMoreData(state);
}

function addChunk(stream, state, chunk, addToFront) {
  if (state.flowing && state.length === 0 && !state.sync) {
    stream.emit('data', chunk);
    stream.read(0);
  } else {
    // update the buffer info.
    state.length += state.objectMode ? 1 : chunk.length;
    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);

    if (state.needReadable) emitReadable(stream);
  }
  maybeReadMore(stream, state);
}

function chunkInvalid(state, chunk) {
  var er;
  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {
    er = new TypeError('Invalid non-string/buffer chunk');
  }
  return er;
}

// if it's past the high water mark, we can push in some more.
// Also, if we have no data yet, we can stand some
// more bytes.  This is to work around cases where hwm=0,
// such as the repl.  Also, if the push() triggered a
// readable event, and the user called read(largeNumber) such that
// needReadable was set, then we ought to push more, so that another
// 'readable' event will be triggered.
function needMoreData(state) {
  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);
}

Readable.prototype.isPaused = function () {
  return this._readableState.flowing === false;
};

// backwards compatibility.
Readable.prototype.setEncoding = function (enc) {
  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;
  this._readableState.decoder = new StringDecoder(enc);
  this._readableState.encoding = enc;
  return this;
};

// Don't raise the hwm > 8MB
var MAX_HWM = 0x800000;
function computeNewHighWaterMark(n) {
  if (n >= MAX_HWM) {
    n = MAX_HWM;
  } else {
    // Get the next highest power of 2 to prevent increasing hwm excessively in
    // tiny amounts
    n--;
    n |= n >>> 1;
    n |= n >>> 2;
    n |= n >>> 4;
    n |= n >>> 8;
    n |= n >>> 16;
    n++;
  }
  return n;
}

// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function howMuchToRead(n, state) {
  if (n <= 0 || state.length === 0 && state.ended) return 0;
  if (state.objectMode) return 1;
  if (n !== n) {
    // Only flow one buffer at a time
    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;
  }
  // If we're asking for more than the current hwm, then raise the hwm.
  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);
  if (n <= state.length) return n;
  // Don't have enough
  if (!state.ended) {
    state.needReadable = true;
    return 0;
  }
  return state.length;
}

// you can override either this method, or the async _read(n) below.
Readable.prototype.read = function (n) {
  debug('read', n);
  n = parseInt(n, 10);
  var state = this._readableState;
  var nOrig = n;

  if (n !== 0) state.emittedReadable = false;

  // if we're doing read(0) to trigger a readable event, but we
  // already have a bunch of data in the buffer, then just trigger
  // the 'readable' event and move on.
  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {
    debug('read: emitReadable', state.length, state.ended);
    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);
    return null;
  }

  n = howMuchToRead(n, state);

  // if we've ended, and we're now clear, then finish it up.
  if (n === 0 && state.ended) {
    if (state.length === 0) endReadable(this);
    return null;
  }

  // All the actual chunk generation logic needs to be
  // *below* the call to _read.  The reason is that in certain
  // synthetic stream cases, such as passthrough streams, _read
  // may be a completely synchronous operation which may change
  // the state of the read buffer, providing enough data when
  // before there was *not* enough.
  //
  // So, the steps are:
  // 1. Figure out what the state of things will be after we do
  // a read from the buffer.
  //
  // 2. If that resulting state will trigger a _read, then call _read.
  // Note that this may be asynchronous, or synchronous.  Yes, it is
  // deeply ugly to write APIs this way, but that still doesn't mean
  // that the Readable class should behave improperly, as streams are
  // designed to be sync/async agnostic.
  // Take note if the _read call is sync or async (ie, if the read call
  // has returned yet), so that we know whether or not it's safe to emit
  // 'readable' etc.
  //
  // 3. Actually pull the requested chunks out of the buffer and return.

  // if we need a readable event, then we need to do some reading.
  var doRead = state.needReadable;
  debug('need readable', doRead);

  // if we currently have less than the highWaterMark, then also read some
  if (state.length === 0 || state.length - n < state.highWaterMark) {
    doRead = true;
    debug('length less than watermark', doRead);
  }

  // however, if we've ended, then there's no point, and if we're already
  // reading, then it's unnecessary.
  if (state.ended || state.reading) {
    doRead = false;
    debug('reading or ended', doRead);
  } else if (doRead) {
    debug('do read');
    state.reading = true;
    state.sync = true;
    // if the length is currently zero, then we *need* a readable event.
    if (state.length === 0) state.needReadable = true;
    // call internal read method
    this._read(state.highWaterMark);
    state.sync = false;
    // If _read pushed data synchronously, then `reading` will be false,
    // and we need to re-evaluate how much data we can return to the user.
    if (!state.reading) n = howMuchToRead(nOrig, state);
  }

  var ret;
  if (n > 0) ret = fromList(n, state);else ret = null;

  if (ret === null) {
    state.needReadable = true;
    n = 0;
  } else {
    state.length -= n;
  }

  if (state.length === 0) {
    // If we have nothing in the buffer, then we want to know
    // as soon as we *do* get something into the buffer.
    if (!state.ended) state.needReadable = true;

    // If we tried to read() past the EOF, then emit end on the next tick.
    if (nOrig !== n && state.ended) endReadable(this);
  }

  if (ret !== null) this.emit('data', ret);

  return ret;
};

function onEofChunk(stream, state) {
  if (state.ended) return;
  if (state.decoder) {
    var chunk = state.decoder.end();
    if (chunk && chunk.length) {
      state.buffer.push(chunk);
      state.length += state.objectMode ? 1 : chunk.length;
    }
  }
  state.ended = true;

  // emit 'readable' now to make sure it gets picked up.
  emitReadable(stream);
}

// Don't emit readable right away in sync mode, because this can trigger
// another read() call => stack overflow.  This way, it might trigger
// a nextTick recursion warning, but that's not so bad.
function emitReadable(stream) {
  var state = stream._readableState;
  state.needReadable = false;
  if (!state.emittedReadable) {
    debug('emitReadable', state.flowing);
    state.emittedReadable = true;
    if (state.sync) processNextTick(emitReadable_, stream);else emitReadable_(stream);
  }
}

function emitReadable_(stream) {
  debug('emit readable');
  stream.emit('readable');
  flow(stream);
}

// at this point, the user has presumably seen the 'readable' event,
// and called read() to consume some data.  that may have triggered
// in turn another _read(n) call, in which case reading = true if
// it's in progress.
// However, if we're not ended, or reading, and the length < hwm,
// then go ahead and try to read some more preemptively.
function maybeReadMore(stream, state) {
  if (!state.readingMore) {
    state.readingMore = true;
    processNextTick(maybeReadMore_, stream, state);
  }
}

function maybeReadMore_(stream, state) {
  var len = state.length;
  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {
    debug('maybeReadMore read 0');
    stream.read(0);
    if (len === state.length)
      // didn't get any data, stop spinning.
      break;else len = state.length;
  }
  state.readingMore = false;
}

// abstract method.  to be overridden in specific implementation classes.
// call cb(er, data) where data is <= n in length.
// for virtual (non-string, non-buffer) streams, "length" is somewhat
// arbitrary, and perhaps not very meaningful.
Readable.prototype._read = function (n) {
  this.emit('error', new Error('_read() is not implemented'));
};

Readable.prototype.pipe = function (dest, pipeOpts) {
  var src = this;
  var state = this._readableState;

  switch (state.pipesCount) {
    case 0:
      state.pipes = dest;
      break;
    case 1:
      state.pipes = [state.pipes, dest];
      break;
    default:
      state.pipes.push(dest);
      break;
  }
  state.pipesCount += 1;
  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);

  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;

  var endFn = doEnd ? onend : unpipe;
  if (state.endEmitted) processNextTick(endFn);else src.once('end', endFn);

  dest.on('unpipe', onunpipe);
  function onunpipe(readable, unpipeInfo) {
    debug('onunpipe');
    if (readable === src) {
      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {
        unpipeInfo.hasUnpiped = true;
        cleanup();
      }
    }
  }

  function onend() {
    debug('onend');
    dest.end();
  }

  // when the dest drains, it reduces the awaitDrain counter
  // on the source.  This would be more elegant with a .once()
  // handler in flow(), but adding and removing repeatedly is
  // too slow.
  var ondrain = pipeOnDrain(src);
  dest.on('drain', ondrain);

  var cleanedUp = false;
  function cleanup() {
    debug('cleanup');
    // cleanup event handlers once the pipe is broken
    dest.removeListener('close', onclose);
    dest.removeListener('finish', onfinish);
    dest.removeListener('drain', ondrain);
    dest.removeListener('error', onerror);
    dest.removeListener('unpipe', onunpipe);
    src.removeListener('end', onend);
    src.removeListener('end', unpipe);
    src.removeListener('data', ondata);

    cleanedUp = true;

    // if the reader is waiting for a drain event from this
    // specific writer, then it would cause it to never start
    // flowing again.
    // So, if this is awaiting a drain, then we just call it now.
    // If we don't know, then assume that we are waiting for one.
    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();
  }

  // If the user pushes more data while we're writing to dest then we'll end up
  // in ondata again. However, we only want to increase awaitDrain once because
  // dest will only emit one 'drain' event for the multiple writes.
  // => Introduce a guard on increasing awaitDrain.
  var increasedAwaitDrain = false;
  src.on('data', ondata);
  function ondata(chunk) {
    debug('ondata');
    increasedAwaitDrain = false;
    var ret = dest.write(chunk);
    if (false === ret && !increasedAwaitDrain) {
      // If the user unpiped during `dest.write()`, it is possible
      // to get stuck in a permanently paused state if that write
      // also returned false.
      // => Check whether `dest` is still a piping destination.
      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {
        debug('false write response, pause', src._readableState.awaitDrain);
        src._readableState.awaitDrain++;
        increasedAwaitDrain = true;
      }
      src.pause();
    }
  }

  // if the dest has an error, then stop piping into it.
  // however, don't suppress the throwing behavior for this.
  function onerror(er) {
    debug('onerror', er);
    unpipe();
    dest.removeListener('error', onerror);
    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);
  }

  // Make sure our error handler is attached before userland ones.
  prependListener(dest, 'error', onerror);

  // Both close and finish should trigger unpipe, but only once.
  function onclose() {
    dest.removeListener('finish', onfinish);
    unpipe();
  }
  dest.once('close', onclose);
  function onfinish() {
    debug('onfinish');
    dest.removeListener('close', onclose);
    unpipe();
  }
  dest.once('finish', onfinish);

  function unpipe() {
    debug('unpipe');
    src.unpipe(dest);
  }

  // tell the dest that it's being piped to
  dest.emit('pipe', src);

  // start the flow if it hasn't been started already.
  if (!state.flowing) {
    debug('pipe resume');
    src.resume();
  }

  return dest;
};

function pipeOnDrain(src) {
  return function () {
    var state = src._readableState;
    debug('pipeOnDrain', state.awaitDrain);
    if (state.awaitDrain) state.awaitDrain--;
    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {
      state.flowing = true;
      flow(src);
    }
  };
}

Readable.prototype.unpipe = function (dest) {
  var state = this._readableState;
  var unpipeInfo = { hasUnpiped: false };

  // if we're not piping anywhere, then do nothing.
  if (state.pipesCount === 0) return this;

  // just one destination.  most common case.
  if (state.pipesCount === 1) {
    // passed in one, but it's not the right one.
    if (dest && dest !== state.pipes) return this;

    if (!dest) dest = state.pipes;

    // got a match.
    state.pipes = null;
    state.pipesCount = 0;
    state.flowing = false;
    if (dest) dest.emit('unpipe', this, unpipeInfo);
    return this;
  }

  // slow case. multiple pipe destinations.

  if (!dest) {
    // remove all.
    var dests = state.pipes;
    var len = state.pipesCount;
    state.pipes = null;
    state.pipesCount = 0;
    state.flowing = false;

    for (var i = 0; i < len; i++) {
      dests[i].emit('unpipe', this, unpipeInfo);
    }return this;
  }

  // try to find the right one.
  var index = indexOf(state.pipes, dest);
  if (index === -1) return this;

  state.pipes.splice(index, 1);
  state.pipesCount -= 1;
  if (state.pipesCount === 1) state.pipes = state.pipes[0];

  dest.emit('unpipe', this, unpipeInfo);

  return this;
};

// set up data events if they are asked for
// Ensure readable listeners eventually get something
Readable.prototype.on = function (ev, fn) {
  var res = Stream.prototype.on.call(this, ev, fn);

  if (ev === 'data') {
    // Start flowing on next tick if stream isn't explicitly paused
    if (this._readableState.flowing !== false) this.resume();
  } else if (ev === 'readable') {
    var state = this._readableState;
    if (!state.endEmitted && !state.readableListening) {
      state.readableListening = state.needReadable = true;
      state.emittedReadable = false;
      if (!state.reading) {
        processNextTick(nReadingNextTick, this);
      } else if (state.length) {
        emitReadable(this);
      }
    }
  }

  return res;
};
Readable.prototype.addListener = Readable.prototype.on;

function nReadingNextTick(self) {
  debug('readable nexttick read 0');
  self.read(0);
}

// pause() and resume() are remnants of the legacy readable stream API
// If the user uses them, then switch into old mode.
Readable.prototype.resume = function () {
  var state = this._readableState;
  if (!state.flowing) {
    debug('resume');
    state.flowing = true;
    resume(this, state);
  }
  return this;
};

function resume(stream, state) {
  if (!state.resumeScheduled) {
    state.resumeScheduled = true;
    processNextTick(resume_, stream, state);
  }
}

function resume_(stream, state) {
  if (!state.reading) {
    debug('resume read 0');
    stream.read(0);
  }

  state.resumeScheduled = false;
  state.awaitDrain = 0;
  stream.emit('resume');
  flow(stream);
  if (state.flowing && !state.reading) stream.read(0);
}

Readable.prototype.pause = function () {
  debug('call pause flowing=%j', this._readableState.flowing);
  if (false !== this._readableState.flowing) {
    debug('pause');
    this._readableState.flowing = false;
    this.emit('pause');
  }
  return this;
};

function flow(stream) {
  var state = stream._readableState;
  debug('flow', state.flowing);
  while (state.flowing && stream.read() !== null) {}
}

// wrap an old-style stream as the async data source.
// This is *not* part of the readable stream interface.
// It is an ugly unfortunate mess of history.
Readable.prototype.wrap = function (stream) {
  var state = this._readableState;
  var paused = false;

  var self = this;
  stream.on('end', function () {
    debug('wrapped end');
    if (state.decoder && !state.ended) {
      var chunk = state.decoder.end();
      if (chunk && chunk.length) self.push(chunk);
    }

    self.push(null);
  });

  stream.on('data', function (chunk) {
    debug('wrapped data');
    if (state.decoder) chunk = state.decoder.write(chunk);

    // don't skip over falsy values in objectMode
    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;

    var ret = self.push(chunk);
    if (!ret) {
      paused = true;
      stream.pause();
    }
  });

  // proxy all the other methods.
  // important when wrapping filters and duplexes.
  for (var i in stream) {
    if (this[i] === undefined && typeof stream[i] === 'function') {
      this[i] = function (method) {
        return function () {
          return stream[method].apply(stream, arguments);
        };
      }(i);
    }
  }

  // proxy certain important events.
  for (var n = 0; n < kProxyEvents.length; n++) {
    stream.on(kProxyEvents[n], self.emit.bind(self, kProxyEvents[n]));
  }

  // when we try to consume some more bytes, simply unpause the
  // underlying stream.
  self._read = function (n) {
    debug('wrapped _read', n);
    if (paused) {
      paused = false;
      stream.resume();
    }
  };

  return self;
};

// exposed for testing purposes only.
Readable._fromList = fromList;

// Pluck off n bytes from an array of buffers.
// Length is the combined lengths of all the buffers in the list.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function fromList(n, state) {
  // nothing buffered
  if (state.length === 0) return null;

  var ret;
  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {
    // read it all, truncate the list
    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);
    state.buffer.clear();
  } else {
    // read part of list
    ret = fromListPartial(n, state.buffer, state.decoder);
  }

  return ret;
}

// Extracts only enough buffered data to satisfy the amount requested.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function fromListPartial(n, list, hasStrings) {
  var ret;
  if (n < list.head.data.length) {
    // slice is the same for buffers and strings
    ret = list.head.data.slice(0, n);
    list.head.data = list.head.data.slice(n);
  } else if (n === list.head.data.length) {
    // first chunk is a perfect match
    ret = list.shift();
  } else {
    // result spans more than one buffer
    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);
  }
  return ret;
}

// Copies a specified amount of characters from the list of buffered data
// chunks.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function copyFromBufferString(n, list) {
  var p = list.head;
  var c = 1;
  var ret = p.data;
  n -= ret.length;
  while (p = p.next) {
    var str = p.data;
    var nb = n > str.length ? str.length : n;
    if (nb === str.length) ret += str;else ret += str.slice(0, n);
    n -= nb;
    if (n === 0) {
      if (nb === str.length) {
        ++c;
        if (p.next) list.head = p.next;else list.head = list.tail = null;
      } else {
        list.head = p;
        p.data = str.slice(nb);
      }
      break;
    }
    ++c;
  }
  list.length -= c;
  return ret;
}

// Copies a specified amount of bytes from the list of buffered data chunks.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function copyFromBuffer(n, list) {
  var ret = Buffer.allocUnsafe(n);
  var p = list.head;
  var c = 1;
  p.data.copy(ret);
  n -= p.data.length;
  while (p = p.next) {
    var buf = p.data;
    var nb = n > buf.length ? buf.length : n;
    buf.copy(ret, ret.length - n, 0, nb);
    n -= nb;
    if (n === 0) {
      if (nb === buf.length) {
        ++c;
        if (p.next) list.head = p.next;else list.head = list.tail = null;
      } else {
        list.head = p;
        p.data = buf.slice(nb);
      }
      break;
    }
    ++c;
  }
  list.length -= c;
  return ret;
}

function endReadable(stream) {
  var state = stream._readableState;

  // If we get here before consuming all the bytes, then that is a
  // bug in node.  Should never happen.
  if (state.length > 0) throw new Error('"endReadable()" called on non-empty stream');

  if (!state.endEmitted) {
    state.ended = true;
    processNextTick(endReadableNT, state, stream);
  }
}

function endReadableNT(state, stream) {
  // Check that we didn't get one last unshift.
  if (!state.endEmitted && state.length === 0) {
    state.endEmitted = true;
    stream.readable = false;
    stream.emit('end');
  }
}

function forEach(xs, f) {
  for (var i = 0, l = xs.length; i < l; i++) {
    f(xs[i], i);
  }
}

function indexOf(xs, x) {
  for (var i = 0, l = xs.length; i < l; i++) {
    if (xs[i] === x) return i;
  }
  return -1;
}
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"./_stream_duplex":89,"./internal/streams/BufferList":94,"./internal/streams/destroy":95,"./internal/streams/stream":96,"_process":59,"core-util-is":61,"events":74,"inherits":80,"isarray":97,"process-nextick-args":87,"safe-buffer":104,"string_decoder/":98,"util":57}],92:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// a transform stream is a readable/writable stream where you do
// something with the data.  Sometimes it's called a "filter",
// but that's not a great name for it, since that implies a thing where
// some bits pass through, and others are simply ignored.  (That would
// be a valid example of a transform, of course.)
//
// While the output is causally related to the input, it's not a
// necessarily symmetric or synchronous transformation.  For example,
// a zlib stream might take multiple plain-text writes(), and then
// emit a single compressed chunk some time in the future.
//
// Here's how this works:
//
// The Transform stream has all the aspects of the readable and writable
// stream classes.  When you write(chunk), that calls _write(chunk,cb)
// internally, and returns false if there's a lot of pending writes
// buffered up.  When you call read(), that calls _read(n) until
// there's enough pending readable data buffered up.
//
// In a transform stream, the written data is placed in a buffer.  When
// _read(n) is called, it transforms the queued up data, calling the
// buffered _write cb's as it consumes chunks.  If consuming a single
// written chunk would result in multiple output chunks, then the first
// outputted bit calls the readcb, and subsequent chunks just go into
// the read buffer, and will cause it to emit 'readable' if necessary.
//
// This way, back-pressure is actually determined by the reading side,
// since _read has to be called to start processing a new chunk.  However,
// a pathological inflate type of transform can cause excessive buffering
// here.  For example, imagine a stream where every byte of input is
// interpreted as an integer from 0-255, and then results in that many
// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in
// 1kb of data being output.  In this case, you could write a very small
// amount of input, and end up with a very large amount of output.  In
// such a pathological inflating mechanism, there'd be no way to tell
// the system to stop doing the transform.  A single 4MB write could
// cause the system to run out of memory.
//
// However, even in such a pathological case, only a single written chunk
// would be consumed, and then the rest would wait (un-transformed) until
// the results of the previous transformed chunk were consumed.

'use strict';

module.exports = Transform;

var Duplex = require('./_stream_duplex');

/*<replacement>*/
var util = require('core-util-is');
util.inherits = require('inherits');
/*</replacement>*/

util.inherits(Transform, Duplex);

function TransformState(stream) {
  this.afterTransform = function (er, data) {
    return afterTransform(stream, er, data);
  };

  this.needTransform = false;
  this.transforming = false;
  this.writecb = null;
  this.writechunk = null;
  this.writeencoding = null;
}

function afterTransform(stream, er, data) {
  var ts = stream._transformState;
  ts.transforming = false;

  var cb = ts.writecb;

  if (!cb) {
    return stream.emit('error', new Error('write callback called multiple times'));
  }

  ts.writechunk = null;
  ts.writecb = null;

  if (data !== null && data !== undefined) stream.push(data);

  cb(er);

  var rs = stream._readableState;
  rs.reading = false;
  if (rs.needReadable || rs.length < rs.highWaterMark) {
    stream._read(rs.highWaterMark);
  }
}

function Transform(options) {
  if (!(this instanceof Transform)) return new Transform(options);

  Duplex.call(this, options);

  this._transformState = new TransformState(this);

  var stream = this;

  // start out asking for a readable event once data is transformed.
  this._readableState.needReadable = true;

  // we have implemented the _read method, and done the other things
  // that Readable wants before the first _read call, so unset the
  // sync guard flag.
  this._readableState.sync = false;

  if (options) {
    if (typeof options.transform === 'function') this._transform = options.transform;

    if (typeof options.flush === 'function') this._flush = options.flush;
  }

  // When the writable side finishes, then flush out anything remaining.
  this.once('prefinish', function () {
    if (typeof this._flush === 'function') this._flush(function (er, data) {
      done(stream, er, data);
    });else done(stream);
  });
}

Transform.prototype.push = function (chunk, encoding) {
  this._transformState.needTransform = false;
  return Duplex.prototype.push.call(this, chunk, encoding);
};

// This is the part where you do stuff!
// override this function in implementation classes.
// 'chunk' is an input chunk.
//
// Call `push(newChunk)` to pass along transformed output
// to the readable side.  You may call 'push' zero or more times.
//
// Call `cb(err)` when you are done with this chunk.  If you pass
// an error, then that'll put the hurt on the whole operation.  If you
// never call cb(), then you'll never get another chunk.
Transform.prototype._transform = function (chunk, encoding, cb) {
  throw new Error('_transform() is not implemented');
};

Transform.prototype._write = function (chunk, encoding, cb) {
  var ts = this._transformState;
  ts.writecb = cb;
  ts.writechunk = chunk;
  ts.writeencoding = encoding;
  if (!ts.transforming) {
    var rs = this._readableState;
    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);
  }
};

// Doesn't matter what the args are here.
// _transform does all the work.
// That we got here means that the readable side wants more data.
Transform.prototype._read = function (n) {
  var ts = this._transformState;

  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {
    ts.transforming = true;
    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);
  } else {
    // mark that we need a transform, so that any data that comes in
    // will get processed, now that we've asked for it.
    ts.needTransform = true;
  }
};

Transform.prototype._destroy = function (err, cb) {
  var _this = this;

  Duplex.prototype._destroy.call(this, err, function (err2) {
    cb(err2);
    _this.emit('close');
  });
};

function done(stream, er, data) {
  if (er) return stream.emit('error', er);

  if (data !== null && data !== undefined) stream.push(data);

  // if there's nothing in the write buffer, then that means
  // that nothing more will ever be provided
  var ws = stream._writableState;
  var ts = stream._transformState;

  if (ws.length) throw new Error('Calling transform done when ws.length != 0');

  if (ts.transforming) throw new Error('Calling transform done when still transforming');

  return stream.push(null);
}
},{"./_stream_duplex":89,"core-util-is":61,"inherits":80}],93:[function(require,module,exports){
(function (process,global){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// A bit simpler than readable streams.
// Implement an async ._write(chunk, encoding, cb), and it'll handle all
// the drain event emission and buffering.

'use strict';

/*<replacement>*/

var processNextTick = require('process-nextick-args');
/*</replacement>*/

module.exports = Writable;

/* <replacement> */
function WriteReq(chunk, encoding, cb) {
  this.chunk = chunk;
  this.encoding = encoding;
  this.callback = cb;
  this.next = null;
}

// It seems a linked list but it is not
// there will be only 2 of these for each stream
function CorkedRequest(state) {
  var _this = this;

  this.next = null;
  this.entry = null;
  this.finish = function () {
    onCorkedFinish(_this, state);
  };
}
/* </replacement> */

/*<replacement>*/
var asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : processNextTick;
/*</replacement>*/

/*<replacement>*/
var Duplex;
/*</replacement>*/

Writable.WritableState = WritableState;

/*<replacement>*/
var util = require('core-util-is');
util.inherits = require('inherits');
/*</replacement>*/

/*<replacement>*/
var internalUtil = {
  deprecate: require('util-deprecate')
};
/*</replacement>*/

/*<replacement>*/
var Stream = require('./internal/streams/stream');
/*</replacement>*/

/*<replacement>*/
var Buffer = require('safe-buffer').Buffer;
var OurUint8Array = global.Uint8Array || function () {};
function _uint8ArrayToBuffer(chunk) {
  return Buffer.from(chunk);
}
function _isUint8Array(obj) {
  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;
}
/*</replacement>*/

var destroyImpl = require('./internal/streams/destroy');

util.inherits(Writable, Stream);

function nop() {}

function WritableState(options, stream) {
  Duplex = Duplex || require('./_stream_duplex');

  options = options || {};

  // object stream flag to indicate whether or not this stream
  // contains buffers or objects.
  this.objectMode = !!options.objectMode;

  if (stream instanceof Duplex) this.objectMode = this.objectMode || !!options.writableObjectMode;

  // the point at which write() starts returning false
  // Note: 0 is a valid value, means that we always return false if
  // the entire buffer is not flushed immediately on write()
  var hwm = options.highWaterMark;
  var defaultHwm = this.objectMode ? 16 : 16 * 1024;
  this.highWaterMark = hwm || hwm === 0 ? hwm : defaultHwm;

  // cast to ints.
  this.highWaterMark = Math.floor(this.highWaterMark);

  // if _final has been called
  this.finalCalled = false;

  // drain event flag.
  this.needDrain = false;
  // at the start of calling end()
  this.ending = false;
  // when end() has been called, and returned
  this.ended = false;
  // when 'finish' is emitted
  this.finished = false;

  // has it been destroyed
  this.destroyed = false;

  // should we decode strings into buffers before passing to _write?
  // this is here so that some node-core streams can optimize string
  // handling at a lower level.
  var noDecode = options.decodeStrings === false;
  this.decodeStrings = !noDecode;

  // Crypto is kind of old and crusty.  Historically, its default string
  // encoding is 'binary' so we have to make this configurable.
  // Everything else in the universe uses 'utf8', though.
  this.defaultEncoding = options.defaultEncoding || 'utf8';

  // not an actual buffer we keep track of, but a measurement
  // of how much we're waiting to get pushed to some underlying
  // socket or file.
  this.length = 0;

  // a flag to see when we're in the middle of a write.
  this.writing = false;

  // when true all writes will be buffered until .uncork() call
  this.corked = 0;

  // a flag to be able to tell if the onwrite cb is called immediately,
  // or on a later tick.  We set this to true at first, because any
  // actions that shouldn't happen until "later" should generally also
  // not happen before the first write call.
  this.sync = true;

  // a flag to know if we're processing previously buffered items, which
  // may call the _write() callback in the same tick, so that we don't
  // end up in an overlapped onwrite situation.
  this.bufferProcessing = false;

  // the callback that's passed to _write(chunk,cb)
  this.onwrite = function (er) {
    onwrite(stream, er);
  };

  // the callback that the user supplies to write(chunk,encoding,cb)
  this.writecb = null;

  // the amount that is being written when _write is called.
  this.writelen = 0;

  this.bufferedRequest = null;
  this.lastBufferedRequest = null;

  // number of pending user-supplied write callbacks
  // this must be 0 before 'finish' can be emitted
  this.pendingcb = 0;

  // emit prefinish if the only thing we're waiting for is _write cbs
  // This is relevant for synchronous Transform streams
  this.prefinished = false;

  // True if the error was already emitted and should not be thrown again
  this.errorEmitted = false;

  // count buffered requests
  this.bufferedRequestCount = 0;

  // allocate the first CorkedRequest, there is always
  // one allocated and free to use, and we maintain at most two
  this.corkedRequestsFree = new CorkedRequest(this);
}

WritableState.prototype.getBuffer = function getBuffer() {
  var current = this.bufferedRequest;
  var out = [];
  while (current) {
    out.push(current);
    current = current.next;
  }
  return out;
};

(function () {
  try {
    Object.defineProperty(WritableState.prototype, 'buffer', {
      get: internalUtil.deprecate(function () {
        return this.getBuffer();
      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')
    });
  } catch (_) {}
})();

// Test _writableState for inheritance to account for Duplex streams,
// whose prototype chain only points to Readable.
var realHasInstance;
if (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {
  realHasInstance = Function.prototype[Symbol.hasInstance];
  Object.defineProperty(Writable, Symbol.hasInstance, {
    value: function (object) {
      if (realHasInstance.call(this, object)) return true;

      return object && object._writableState instanceof WritableState;
    }
  });
} else {
  realHasInstance = function (object) {
    return object instanceof this;
  };
}

function Writable(options) {
  Duplex = Duplex || require('./_stream_duplex');

  // Writable ctor is applied to Duplexes, too.
  // `realHasInstance` is necessary because using plain `instanceof`
  // would return false, as no `_writableState` property is attached.

  // Trying to use the custom `instanceof` for Writable here will also break the
  // Node.js LazyTransform implementation, which has a non-trivial getter for
  // `_writableState` that would lead to infinite recursion.
  if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {
    return new Writable(options);
  }

  this._writableState = new WritableState(options, this);

  // legacy.
  this.writable = true;

  if (options) {
    if (typeof options.write === 'function') this._write = options.write;

    if (typeof options.writev === 'function') this._writev = options.writev;

    if (typeof options.destroy === 'function') this._destroy = options.destroy;

    if (typeof options.final === 'function') this._final = options.final;
  }

  Stream.call(this);
}

// Otherwise people can pipe Writable streams, which is just wrong.
Writable.prototype.pipe = function () {
  this.emit('error', new Error('Cannot pipe, not readable'));
};

function writeAfterEnd(stream, cb) {
  var er = new Error('write after end');
  // TODO: defer error events consistently everywhere, not just the cb
  stream.emit('error', er);
  processNextTick(cb, er);
}

// Checks that a user-supplied chunk is valid, especially for the particular
// mode the stream is in. Currently this means that `null` is never accepted
// and undefined/non-string values are only allowed in object mode.
function validChunk(stream, state, chunk, cb) {
  var valid = true;
  var er = false;

  if (chunk === null) {
    er = new TypeError('May not write null values to stream');
  } else if (typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {
    er = new TypeError('Invalid non-string/buffer chunk');
  }
  if (er) {
    stream.emit('error', er);
    processNextTick(cb, er);
    valid = false;
  }
  return valid;
}

Writable.prototype.write = function (chunk, encoding, cb) {
  var state = this._writableState;
  var ret = false;
  var isBuf = _isUint8Array(chunk) && !state.objectMode;

  if (isBuf && !Buffer.isBuffer(chunk)) {
    chunk = _uint8ArrayToBuffer(chunk);
  }

  if (typeof encoding === 'function') {
    cb = encoding;
    encoding = null;
  }

  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;

  if (typeof cb !== 'function') cb = nop;

  if (state.ended) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {
    state.pendingcb++;
    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);
  }

  return ret;
};

Writable.prototype.cork = function () {
  var state = this._writableState;

  state.corked++;
};

Writable.prototype.uncork = function () {
  var state = this._writableState;

  if (state.corked) {
    state.corked--;

    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);
  }
};

Writable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {
  // node::ParseEncoding() requires lower case.
  if (typeof encoding === 'string') encoding = encoding.toLowerCase();
  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);
  this._writableState.defaultEncoding = encoding;
  return this;
};

function decodeChunk(state, chunk, encoding) {
  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {
    chunk = Buffer.from(chunk, encoding);
  }
  return chunk;
}

// if we're already writing something, then just put this
// in the queue, and wait our turn.  Otherwise, call _write
// If we return false, then we need a drain event, so set that flag.
function writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {
  if (!isBuf) {
    var newChunk = decodeChunk(state, chunk, encoding);
    if (chunk !== newChunk) {
      isBuf = true;
      encoding = 'buffer';
      chunk = newChunk;
    }
  }
  var len = state.objectMode ? 1 : chunk.length;

  state.length += len;

  var ret = state.length < state.highWaterMark;
  // we must ensure that previous needDrain will not be reset to false.
  if (!ret) state.needDrain = true;

  if (state.writing || state.corked) {
    var last = state.lastBufferedRequest;
    state.lastBufferedRequest = {
      chunk: chunk,
      encoding: encoding,
      isBuf: isBuf,
      callback: cb,
      next: null
    };
    if (last) {
      last.next = state.lastBufferedRequest;
    } else {
      state.bufferedRequest = state.lastBufferedRequest;
    }
    state.bufferedRequestCount += 1;
  } else {
    doWrite(stream, state, false, len, chunk, encoding, cb);
  }

  return ret;
}

function doWrite(stream, state, writev, len, chunk, encoding, cb) {
  state.writelen = len;
  state.writecb = cb;
  state.writing = true;
  state.sync = true;
  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);
  state.sync = false;
}

function onwriteError(stream, state, sync, er, cb) {
  --state.pendingcb;

  if (sync) {
    // defer the callback if we are being called synchronously
    // to avoid piling up things on the stack
    processNextTick(cb, er);
    // this can emit finish, and it will always happen
    // after error
    processNextTick(finishMaybe, stream, state);
    stream._writableState.errorEmitted = true;
    stream.emit('error', er);
  } else {
    // the caller expect this to happen before if
    // it is async
    cb(er);
    stream._writableState.errorEmitted = true;
    stream.emit('error', er);
    // this can emit finish, but finish must
    // always follow error
    finishMaybe(stream, state);
  }
}

function onwriteStateUpdate(state) {
  state.writing = false;
  state.writecb = null;
  state.length -= state.writelen;
  state.writelen = 0;
}

function onwrite(stream, er) {
  var state = stream._writableState;
  var sync = state.sync;
  var cb = state.writecb;

  onwriteStateUpdate(state);

  if (er) onwriteError(stream, state, sync, er, cb);else {
    // Check if we're actually ready to finish, but don't emit yet
    var finished = needFinish(state);

    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {
      clearBuffer(stream, state);
    }

    if (sync) {
      /*<replacement>*/
      asyncWrite(afterWrite, stream, state, finished, cb);
      /*</replacement>*/
    } else {
      afterWrite(stream, state, finished, cb);
    }
  }
}

function afterWrite(stream, state, finished, cb) {
  if (!finished) onwriteDrain(stream, state);
  state.pendingcb--;
  cb();
  finishMaybe(stream, state);
}

// Must force callback to be called on nextTick, so that we don't
// emit 'drain' before the write() consumer gets the 'false' return
// value, and has a chance to attach a 'drain' listener.
function onwriteDrain(stream, state) {
  if (state.length === 0 && state.needDrain) {
    state.needDrain = false;
    stream.emit('drain');
  }
}

// if there's something in the buffer waiting, then process it
function clearBuffer(stream, state) {
  state.bufferProcessing = true;
  var entry = state.bufferedRequest;

  if (stream._writev && entry && entry.next) {
    // Fast case, write everything using _writev()
    var l = state.bufferedRequestCount;
    var buffer = new Array(l);
    var holder = state.corkedRequestsFree;
    holder.entry = entry;

    var count = 0;
    var allBuffers = true;
    while (entry) {
      buffer[count] = entry;
      if (!entry.isBuf) allBuffers = false;
      entry = entry.next;
      count += 1;
    }
    buffer.allBuffers = allBuffers;

    doWrite(stream, state, true, state.length, buffer, '', holder.finish);

    // doWrite is almost always async, defer these to save a bit of time
    // as the hot path ends with doWrite
    state.pendingcb++;
    state.lastBufferedRequest = null;
    if (holder.next) {
      state.corkedRequestsFree = holder.next;
      holder.next = null;
    } else {
      state.corkedRequestsFree = new CorkedRequest(state);
    }
  } else {
    // Slow case, write chunks one-by-one
    while (entry) {
      var chunk = entry.chunk;
      var encoding = entry.encoding;
      var cb = entry.callback;
      var len = state.objectMode ? 1 : chunk.length;

      doWrite(stream, state, false, len, chunk, encoding, cb);
      entry = entry.next;
      // if we didn't call the onwrite immediately, then
      // it means that we need to wait until it does.
      // also, that means that the chunk and cb are currently
      // being processed, so move the buffer counter past them.
      if (state.writing) {
        break;
      }
    }

    if (entry === null) state.lastBufferedRequest = null;
  }

  state.bufferedRequestCount = 0;
  state.bufferedRequest = entry;
  state.bufferProcessing = false;
}

Writable.prototype._write = function (chunk, encoding, cb) {
  cb(new Error('_write() is not implemented'));
};

Writable.prototype._writev = null;

Writable.prototype.end = function (chunk, encoding, cb) {
  var state = this._writableState;

  if (typeof chunk === 'function') {
    cb = chunk;
    chunk = null;
    encoding = null;
  } else if (typeof encoding === 'function') {
    cb = encoding;
    encoding = null;
  }

  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);

  // .end() fully uncorks
  if (state.corked) {
    state.corked = 1;
    this.uncork();
  }

  // ignore unnecessary end() calls.
  if (!state.ending && !state.finished) endWritable(this, state, cb);
};

function needFinish(state) {
  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;
}
function callFinal(stream, state) {
  stream._final(function (err) {
    state.pendingcb--;
    if (err) {
      stream.emit('error', err);
    }
    state.prefinished = true;
    stream.emit('prefinish');
    finishMaybe(stream, state);
  });
}
function prefinish(stream, state) {
  if (!state.prefinished && !state.finalCalled) {
    if (typeof stream._final === 'function') {
      state.pendingcb++;
      state.finalCalled = true;
      processNextTick(callFinal, stream, state);
    } else {
      state.prefinished = true;
      stream.emit('prefinish');
    }
  }
}

function finishMaybe(stream, state) {
  var need = needFinish(state);
  if (need) {
    prefinish(stream, state);
    if (state.pendingcb === 0) {
      state.finished = true;
      stream.emit('finish');
    }
  }
  return need;
}

function endWritable(stream, state, cb) {
  state.ending = true;
  finishMaybe(stream, state);
  if (cb) {
    if (state.finished) processNextTick(cb);else stream.once('finish', cb);
  }
  state.ended = true;
  stream.writable = false;
}

function onCorkedFinish(corkReq, state, err) {
  var entry = corkReq.entry;
  corkReq.entry = null;
  while (entry) {
    var cb = entry.callback;
    state.pendingcb--;
    cb(err);
    entry = entry.next;
  }
  if (state.corkedRequestsFree) {
    state.corkedRequestsFree.next = corkReq;
  } else {
    state.corkedRequestsFree = corkReq;
  }
}

Object.defineProperty(Writable.prototype, 'destroyed', {
  get: function () {
    if (this._writableState === undefined) {
      return false;
    }
    return this._writableState.destroyed;
  },
  set: function (value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (!this._writableState) {
      return;
    }

    // backward compatibility, the user is explicitly
    // managing destroyed
    this._writableState.destroyed = value;
  }
});

Writable.prototype.destroy = destroyImpl.destroy;
Writable.prototype._undestroy = destroyImpl.undestroy;
Writable.prototype._destroy = function (err, cb) {
  this.end();
  cb(err);
};
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"./_stream_duplex":89,"./internal/streams/destroy":95,"./internal/streams/stream":96,"_process":59,"core-util-is":61,"inherits":80,"process-nextick-args":87,"safe-buffer":104,"util-deprecate":116}],94:[function(require,module,exports){
'use strict';

/*<replacement>*/

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Buffer = require('safe-buffer').Buffer;
/*</replacement>*/

function copyBuffer(src, target, offset) {
  src.copy(target, offset);
}

module.exports = function () {
  function BufferList() {
    _classCallCheck(this, BufferList);

    this.head = null;
    this.tail = null;
    this.length = 0;
  }

  BufferList.prototype.push = function push(v) {
    var entry = { data: v, next: null };
    if (this.length > 0) this.tail.next = entry;else this.head = entry;
    this.tail = entry;
    ++this.length;
  };

  BufferList.prototype.unshift = function unshift(v) {
    var entry = { data: v, next: this.head };
    if (this.length === 0) this.tail = entry;
    this.head = entry;
    ++this.length;
  };

  BufferList.prototype.shift = function shift() {
    if (this.length === 0) return;
    var ret = this.head.data;
    if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;
    --this.length;
    return ret;
  };

  BufferList.prototype.clear = function clear() {
    this.head = this.tail = null;
    this.length = 0;
  };

  BufferList.prototype.join = function join(s) {
    if (this.length === 0) return '';
    var p = this.head;
    var ret = '' + p.data;
    while (p = p.next) {
      ret += s + p.data;
    }return ret;
  };

  BufferList.prototype.concat = function concat(n) {
    if (this.length === 0) return Buffer.alloc(0);
    if (this.length === 1) return this.head.data;
    var ret = Buffer.allocUnsafe(n >>> 0);
    var p = this.head;
    var i = 0;
    while (p) {
      copyBuffer(p.data, ret, i);
      i += p.data.length;
      p = p.next;
    }
    return ret;
  };

  return BufferList;
}();
},{"safe-buffer":104}],95:[function(require,module,exports){
'use strict';

/*<replacement>*/

var processNextTick = require('process-nextick-args');
/*</replacement>*/

// undocumented cb() API, needed for core, not for public API
function destroy(err, cb) {
  var _this = this;

  var readableDestroyed = this._readableState && this._readableState.destroyed;
  var writableDestroyed = this._writableState && this._writableState.destroyed;

  if (readableDestroyed || writableDestroyed) {
    if (cb) {
      cb(err);
    } else if (err && (!this._writableState || !this._writableState.errorEmitted)) {
      processNextTick(emitErrorNT, this, err);
    }
    return;
  }

  // we set destroyed to true before firing error callbacks in order
  // to make it re-entrance safe in case destroy() is called within callbacks

  if (this._readableState) {
    this._readableState.destroyed = true;
  }

  // if this is a duplex stream mark the writable part as destroyed as well
  if (this._writableState) {
    this._writableState.destroyed = true;
  }

  this._destroy(err || null, function (err) {
    if (!cb && err) {
      processNextTick(emitErrorNT, _this, err);
      if (_this._writableState) {
        _this._writableState.errorEmitted = true;
      }
    } else if (cb) {
      cb(err);
    }
  });
}

function undestroy() {
  if (this._readableState) {
    this._readableState.destroyed = false;
    this._readableState.reading = false;
    this._readableState.ended = false;
    this._readableState.endEmitted = false;
  }

  if (this._writableState) {
    this._writableState.destroyed = false;
    this._writableState.ended = false;
    this._writableState.ending = false;
    this._writableState.finished = false;
    this._writableState.errorEmitted = false;
  }
}

function emitErrorNT(self, err) {
  self.emit('error', err);
}

module.exports = {
  destroy: destroy,
  undestroy: undestroy
};
},{"process-nextick-args":87}],96:[function(require,module,exports){
module.exports = require('events').EventEmitter;

},{"events":74}],97:[function(require,module,exports){
var toString = {}.toString;

module.exports = Array.isArray || function (arr) {
  return toString.call(arr) == '[object Array]';
};

},{}],98:[function(require,module,exports){
'use strict';

var Buffer = require('safe-buffer').Buffer;

var isEncoding = Buffer.isEncoding || function (encoding) {
  encoding = '' + encoding;
  switch (encoding && encoding.toLowerCase()) {
    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':
      return true;
    default:
      return false;
  }
};

function _normalizeEncoding(enc) {
  if (!enc) return 'utf8';
  var retried;
  while (true) {
    switch (enc) {
      case 'utf8':
      case 'utf-8':
        return 'utf8';
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return 'utf16le';
      case 'latin1':
      case 'binary':
        return 'latin1';
      case 'base64':
      case 'ascii':
      case 'hex':
        return enc;
      default:
        if (retried) return; // undefined
        enc = ('' + enc).toLowerCase();
        retried = true;
    }
  }
};

// Do not cache `Buffer.isEncoding` when checking encoding names as some
// modules monkey-patch it to support additional encodings
function normalizeEncoding(enc) {
  var nenc = _normalizeEncoding(enc);
  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);
  return nenc || enc;
}

// StringDecoder provides an interface for efficiently splitting a series of
// buffers into a series of JS strings without breaking apart multi-byte
// characters.
exports.StringDecoder = StringDecoder;
function StringDecoder(encoding) {
  this.encoding = normalizeEncoding(encoding);
  var nb;
  switch (this.encoding) {
    case 'utf16le':
      this.text = utf16Text;
      this.end = utf16End;
      nb = 4;
      break;
    case 'utf8':
      this.fillLast = utf8FillLast;
      nb = 4;
      break;
    case 'base64':
      this.text = base64Text;
      this.end = base64End;
      nb = 3;
      break;
    default:
      this.write = simpleWrite;
      this.end = simpleEnd;
      return;
  }
  this.lastNeed = 0;
  this.lastTotal = 0;
  this.lastChar = Buffer.allocUnsafe(nb);
}

StringDecoder.prototype.write = function (buf) {
  if (buf.length === 0) return '';
  var r;
  var i;
  if (this.lastNeed) {
    r = this.fillLast(buf);
    if (r === undefined) return '';
    i = this.lastNeed;
    this.lastNeed = 0;
  } else {
    i = 0;
  }
  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);
  return r || '';
};

StringDecoder.prototype.end = utf8End;

// Returns only complete characters in a Buffer
StringDecoder.prototype.text = utf8Text;

// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer
StringDecoder.prototype.fillLast = function (buf) {
  if (this.lastNeed <= buf.length) {
    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);
    return this.lastChar.toString(this.encoding, 0, this.lastTotal);
  }
  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);
  this.lastNeed -= buf.length;
};

// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a
// continuation byte.
function utf8CheckByte(byte) {
  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;
  return -1;
}

// Checks at most 3 bytes at the end of a Buffer in order to detect an
// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)
// needed to complete the UTF-8 character (if applicable) are returned.
function utf8CheckIncomplete(self, buf, i) {
  var j = buf.length - 1;
  if (j < i) return 0;
  var nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) self.lastNeed = nb - 1;
    return nb;
  }
  if (--j < i) return 0;
  nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) self.lastNeed = nb - 2;
    return nb;
  }
  if (--j < i) return 0;
  nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) {
      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;
    }
    return nb;
  }
  return 0;
}

// Validates as many continuation bytes for a multi-byte UTF-8 character as
// needed or are available. If we see a non-continuation byte where we expect
// one, we "replace" the validated continuation bytes we've seen so far with
// UTF-8 replacement characters ('\ufffd'), to match v8's UTF-8 decoding
// behavior. The continuation byte check is included three times in the case
// where all of the continuation bytes for a character exist in the same buffer.
// It is also done this way as a slight performance increase instead of using a
// loop.
function utf8CheckExtraBytes(self, buf, p) {
  if ((buf[0] & 0xC0) !== 0x80) {
    self.lastNeed = 0;
    return '\ufffd'.repeat(p);
  }
  if (self.lastNeed > 1 && buf.length > 1) {
    if ((buf[1] & 0xC0) !== 0x80) {
      self.lastNeed = 1;
      return '\ufffd'.repeat(p + 1);
    }
    if (self.lastNeed > 2 && buf.length > 2) {
      if ((buf[2] & 0xC0) !== 0x80) {
        self.lastNeed = 2;
        return '\ufffd'.repeat(p + 2);
      }
    }
  }
}

// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.
function utf8FillLast(buf) {
  var p = this.lastTotal - this.lastNeed;
  var r = utf8CheckExtraBytes(this, buf, p);
  if (r !== undefined) return r;
  if (this.lastNeed <= buf.length) {
    buf.copy(this.lastChar, p, 0, this.lastNeed);
    return this.lastChar.toString(this.encoding, 0, this.lastTotal);
  }
  buf.copy(this.lastChar, p, 0, buf.length);
  this.lastNeed -= buf.length;
}

// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a
// partial character, the character's bytes are buffered until the required
// number of bytes are available.
function utf8Text(buf, i) {
  var total = utf8CheckIncomplete(this, buf, i);
  if (!this.lastNeed) return buf.toString('utf8', i);
  this.lastTotal = total;
  var end = buf.length - (total - this.lastNeed);
  buf.copy(this.lastChar, 0, end);
  return buf.toString('utf8', i, end);
}

// For UTF-8, a replacement character for each buffered byte of a (partial)
// character needs to be added to the output.
function utf8End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) return r + '\ufffd'.repeat(this.lastTotal - this.lastNeed);
  return r;
}

// UTF-16LE typically needs two bytes per character, but even if we have an even
// number of bytes available, we need to check if we end on a leading/high
// surrogate. In that case, we need to wait for the next two bytes in order to
// decode the last character properly.
function utf16Text(buf, i) {
  if ((buf.length - i) % 2 === 0) {
    var r = buf.toString('utf16le', i);
    if (r) {
      var c = r.charCodeAt(r.length - 1);
      if (c >= 0xD800 && c <= 0xDBFF) {
        this.lastNeed = 2;
        this.lastTotal = 4;
        this.lastChar[0] = buf[buf.length - 2];
        this.lastChar[1] = buf[buf.length - 1];
        return r.slice(0, -1);
      }
    }
    return r;
  }
  this.lastNeed = 1;
  this.lastTotal = 2;
  this.lastChar[0] = buf[buf.length - 1];
  return buf.toString('utf16le', i, buf.length - 1);
}

// For UTF-16LE we do not explicitly append special replacement characters if we
// end on a partial character, we simply let v8 handle that.
function utf16End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) {
    var end = this.lastTotal - this.lastNeed;
    return r + this.lastChar.toString('utf16le', 0, end);
  }
  return r;
}

function base64Text(buf, i) {
  var n = (buf.length - i) % 3;
  if (n === 0) return buf.toString('base64', i);
  this.lastNeed = 3 - n;
  this.lastTotal = 3;
  if (n === 1) {
    this.lastChar[0] = buf[buf.length - 1];
  } else {
    this.lastChar[0] = buf[buf.length - 2];
    this.lastChar[1] = buf[buf.length - 1];
  }
  return buf.toString('base64', i, buf.length - n);
}

function base64End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);
  return r;
}

// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)
function simpleWrite(buf) {
  return buf.toString(this.encoding);
}

function simpleEnd(buf) {
  return buf && buf.length ? this.write(buf) : '';
}
},{"safe-buffer":104}],99:[function(require,module,exports){
module.exports = require('./readable').PassThrough

},{"./readable":100}],100:[function(require,module,exports){
exports = module.exports = require('./lib/_stream_readable.js');
exports.Stream = exports;
exports.Readable = exports;
exports.Writable = require('./lib/_stream_writable.js');
exports.Duplex = require('./lib/_stream_duplex.js');
exports.Transform = require('./lib/_stream_transform.js');
exports.PassThrough = require('./lib/_stream_passthrough.js');

},{"./lib/_stream_duplex.js":89,"./lib/_stream_passthrough.js":90,"./lib/_stream_readable.js":91,"./lib/_stream_transform.js":92,"./lib/_stream_writable.js":93}],101:[function(require,module,exports){
module.exports = require('./readable').Transform

},{"./readable":100}],102:[function(require,module,exports){
module.exports = require('./lib/_stream_writable.js');

},{"./lib/_stream_writable.js":93}],103:[function(require,module,exports){
(function (process){
var through = require('through');
var nextTick = typeof setImmediate !== 'undefined'
    ? setImmediate
    : process.nextTick
;

module.exports = function (write, end) {
    var tr = through(write, end);
    tr.pause();
    var resume = tr.resume;
    var pause = tr.pause;
    var paused = false;
    
    tr.pause = function () {
        paused = true;
        return pause.apply(this, arguments);
    };
    
    tr.resume = function () {
        paused = false;
        return resume.apply(this, arguments);
    };
    
    nextTick(function () {
        if (!paused) tr.resume();
    });
    
    return tr;
};

}).call(this,require('_process'))
},{"_process":59,"through":115}],104:[function(require,module,exports){
/* eslint-disable node/no-deprecated-api */
var buffer = require('buffer')
var Buffer = buffer.Buffer

// alternative to using Object.keys for old browsers
function copyProps (src, dst) {
  for (var key in src) {
    dst[key] = src[key]
  }
}
if (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {
  module.exports = buffer
} else {
  // Copy properties from require('buffer')
  copyProps(buffer, exports)
  exports.Buffer = SafeBuffer
}

function SafeBuffer (arg, encodingOrOffset, length) {
  return Buffer(arg, encodingOrOffset, length)
}

// Copy static methods from Buffer
copyProps(Buffer, SafeBuffer)

SafeBuffer.from = function (arg, encodingOrOffset, length) {
  if (typeof arg === 'number') {
    throw new TypeError('Argument must not be a number')
  }
  return Buffer(arg, encodingOrOffset, length)
}

SafeBuffer.alloc = function (size, fill, encoding) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  var buf = Buffer(size)
  if (fill !== undefined) {
    if (typeof encoding === 'string') {
      buf.fill(fill, encoding)
    } else {
      buf.fill(fill)
    }
  } else {
    buf.fill(0)
  }
  return buf
}

SafeBuffer.allocUnsafe = function (size) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  return Buffer(size)
}

SafeBuffer.allocUnsafeSlow = function (size) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  return buffer.SlowBuffer(size)
}

},{"buffer":60}],105:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

module.exports = Stream;

var EE = require('events').EventEmitter;
var inherits = require('inherits');

inherits(Stream, EE);
Stream.Readable = require('readable-stream/readable.js');
Stream.Writable = require('readable-stream/writable.js');
Stream.Duplex = require('readable-stream/duplex.js');
Stream.Transform = require('readable-stream/transform.js');
Stream.PassThrough = require('readable-stream/passthrough.js');

// Backwards-compat with node 0.4.x
Stream.Stream = Stream;



// old-style streams.  Note that the pipe method (the only relevant
// part of this class) is overridden in the Readable class.

function Stream() {
  EE.call(this);
}

Stream.prototype.pipe = function(dest, options) {
  var source = this;

  function ondata(chunk) {
    if (dest.writable) {
      if (false === dest.write(chunk) && source.pause) {
        source.pause();
      }
    }
  }

  source.on('data', ondata);

  function ondrain() {
    if (source.readable && source.resume) {
      source.resume();
    }
  }

  dest.on('drain', ondrain);

  // If the 'end' option is not supplied, dest.end() will be called when
  // source gets the 'end' or 'close' events.  Only dest.end() once.
  if (!dest._isStdio && (!options || options.end !== false)) {
    source.on('end', onend);
    source.on('close', onclose);
  }

  var didOnEnd = false;
  function onend() {
    if (didOnEnd) return;
    didOnEnd = true;

    dest.end();
  }


  function onclose() {
    if (didOnEnd) return;
    didOnEnd = true;

    if (typeof dest.destroy === 'function') dest.destroy();
  }

  // don't leave dangling pipes when there are errors.
  function onerror(er) {
    cleanup();
    if (EE.listenerCount(this, 'error') === 0) {
      throw er; // Unhandled stream error in pipe.
    }
  }

  source.on('error', onerror);
  dest.on('error', onerror);

  // remove all the event listeners that were added.
  function cleanup() {
    source.removeListener('data', ondata);
    dest.removeListener('drain', ondrain);

    source.removeListener('end', onend);
    source.removeListener('close', onclose);

    source.removeListener('error', onerror);
    dest.removeListener('error', onerror);

    source.removeListener('end', cleanup);
    source.removeListener('close', cleanup);

    dest.removeListener('close', cleanup);
  }

  source.on('end', cleanup);
  source.on('close', cleanup);

  dest.on('close', cleanup);

  dest.emit('pipe', source);

  // Allow for unix-like usage: A.pipe(B).pipe(C)
  return dest;
};

},{"events":74,"inherits":80,"readable-stream/duplex.js":88,"readable-stream/passthrough.js":99,"readable-stream/readable.js":100,"readable-stream/transform.js":101,"readable-stream/writable.js":102}],106:[function(require,module,exports){
'use strict';

var bind = require('function-bind');
var ES = require('es-abstract/es5');
var replace = bind.call(Function.call, String.prototype.replace);

var leftWhitespace = /^[\x09\x0A\x0B\x0C\x0D\x20\xA0\u1680\u180E\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF]+/;
var rightWhitespace = /[\x09\x0A\x0B\x0C\x0D\x20\xA0\u1680\u180E\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF]+$/;

module.exports = function trim() {
	var S = ES.ToString(ES.CheckObjectCoercible(this));
	return replace(replace(S, leftWhitespace, ''), rightWhitespace, '');
};

},{"es-abstract/es5":67,"function-bind":77}],107:[function(require,module,exports){
'use strict';

var bind = require('function-bind');
var define = require('define-properties');

var implementation = require('./implementation');
var getPolyfill = require('./polyfill');
var shim = require('./shim');

var boundTrim = bind.call(Function.call, getPolyfill());

define(boundTrim, {
	getPolyfill: getPolyfill,
	implementation: implementation,
	shim: shim
});

module.exports = boundTrim;

},{"./implementation":106,"./polyfill":108,"./shim":109,"define-properties":65,"function-bind":77}],108:[function(require,module,exports){
'use strict';

var implementation = require('./implementation');

var zeroWidthSpace = '\u200b';

module.exports = function getPolyfill() {
	if (String.prototype.trim && zeroWidthSpace.trim() === zeroWidthSpace) {
		return String.prototype.trim;
	}
	return implementation;
};

},{"./implementation":106}],109:[function(require,module,exports){
'use strict';

var define = require('define-properties');
var getPolyfill = require('./polyfill');

module.exports = function shimStringTrim() {
	var polyfill = getPolyfill();
	define(String.prototype, { trim: polyfill }, { trim: function () { return String.prototype.trim !== polyfill; } });
	return polyfill;
};

},{"./polyfill":108,"define-properties":65}],110:[function(require,module,exports){
(function (process){
var defined = require('defined');
var createDefaultStream = require('./lib/default_stream');
var Test = require('./lib/test');
var createResult = require('./lib/results');
var through = require('through');

var canEmitExit = typeof process !== 'undefined' && process
    && typeof process.on === 'function' && process.browser !== true
;
var canExit = typeof process !== 'undefined' && process
    && typeof process.exit === 'function'
;

var nextTick = typeof setImmediate !== 'undefined'
    ? setImmediate
    : process.nextTick
;

exports = module.exports = (function () {
    var harness;
    var lazyLoad = function () {
        return getHarness().apply(this, arguments);
    };
    
    lazyLoad.only = function () {
        return getHarness().only.apply(this, arguments);
    };
    
    lazyLoad.createStream = function (opts) {
        if (!opts) opts = {};
        if (!harness) {
            var output = through();
            getHarness({ stream: output, objectMode: opts.objectMode });
            return output;
        }
        return harness.createStream(opts);
    };
    
    lazyLoad.onFinish = function () {
        return getHarness().onFinish.apply(this, arguments);
    };

    lazyLoad.getHarness = getHarness

    return lazyLoad

    function getHarness (opts) {
        if (!opts) opts = {};
        opts.autoclose = !canEmitExit;
        if (!harness) harness = createExitHarness(opts);
        return harness;
    }
})();

function createExitHarness (conf) {
    if (!conf) conf = {};
    var harness = createHarness({
        autoclose: defined(conf.autoclose, false)
    });
    
    var stream = harness.createStream({ objectMode: conf.objectMode });
    var es = stream.pipe(conf.stream || createDefaultStream());
    if (canEmitExit) {
        es.on('error', function (err) { harness._exitCode = 1 });
    }
    
    var ended = false;
    stream.on('end', function () { ended = true });
    
    if (conf.exit === false) return harness;
    if (!canEmitExit || !canExit) return harness;

    var inErrorState = false;

    process.on('exit', function (code) {
        // let the process exit cleanly.
        if (code !== 0) {
            return
        }

        if (!ended) {
            var only = harness._results._only;
            for (var i = 0; i < harness._tests.length; i++) {
                var t = harness._tests[i];
                if (only && t.name !== only) continue;
                t._exit();
            }
        }
        harness.close();
        process.exit(code || harness._exitCode);
    });
    
    return harness;
}

exports.createHarness = createHarness;
exports.Test = Test;
exports.test = exports; // tap compat
exports.test.skip = Test.skip;

var exitInterval;

function createHarness (conf_) {
    if (!conf_) conf_ = {};
    var results = createResult();
    if (conf_.autoclose !== false) {
        results.once('done', function () { results.close() });
    }
    
    var test = function (name, conf, cb) {
        var t = new Test(name, conf, cb);
        test._tests.push(t);
        
        (function inspectCode (st) {
            st.on('test', function sub (st_) {
                inspectCode(st_);
            });
            st.on('result', function (r) {
                if (!r.ok && typeof r !== 'string') test._exitCode = 1
            });
        })(t);
        
        results.push(t);
        return t;
    };
    test._results = results;
    
    test._tests = [];
    
    test.createStream = function (opts) {
        return results.createStream(opts);
    };

    test.onFinish = function (cb) {
        results.on('done', cb);
    };
    
    var only = false;
    test.only = function (name) {
        if (only) throw new Error('there can only be one only test');
        results.only(name);
        only = true;
        return test.apply(null, arguments);
    };
    test._exitCode = 0;
    
    test.close = function () { results.close() };
    
    return test;
}

}).call(this,require('_process'))
},{"./lib/default_stream":111,"./lib/results":113,"./lib/test":114,"_process":59,"defined":66,"through":115}],111:[function(require,module,exports){
(function (process){
var through = require('through');
var fs = require('fs');

module.exports = function () {
    var line = '';
    var stream = through(write, flush);
    return stream;
    
    function write (buf) {
        for (var i = 0; i < buf.length; i++) {
            var c = typeof buf === 'string'
                ? buf.charAt(i)
                : String.fromCharCode(buf[i])
            ;
            if (c === '\n') flush();
            else line += c;
        }
    }
    
    function flush () {
        if (fs.writeSync && /^win/.test(process.platform)) {
            try { fs.writeSync(1, line + '\n'); }
            catch (e) { stream.emit('error', e) }
        }
        else {
            try { console.log(line) }
            catch (e) { stream.emit('error', e) }
        }
        line = '';
    }
};

}).call(this,require('_process'))
},{"_process":59,"fs":58,"through":115}],112:[function(require,module,exports){
(function (process){
module.exports = typeof setImmediate !== 'undefined'
    ? setImmediate
    : process.nextTick
;

}).call(this,require('_process'))
},{"_process":59}],113:[function(require,module,exports){
(function (process){
var EventEmitter = require('events').EventEmitter;
var inherits = require('inherits');
var through = require('through');
var resumer = require('resumer');
var inspect = require('object-inspect');
var bind = require('function-bind');
var has = require('has');
var regexpTest = bind.call(Function.call, RegExp.prototype.test);
var yamlIndicators = /\:|\-|\?/;
var nextTick = typeof setImmediate !== 'undefined'
    ? setImmediate
    : process.nextTick
;

module.exports = Results;
inherits(Results, EventEmitter);

function Results () {
    if (!(this instanceof Results)) return new Results;
    this.count = 0;
    this.fail = 0;
    this.pass = 0;
    this._stream = through();
    this.tests = [];
}

Results.prototype.createStream = function (opts) {
    if (!opts) opts = {};
    var self = this;
    var output, testId = 0;
    if (opts.objectMode) {
        output = through();
        self.on('_push', function ontest (t, extra) {
            if (!extra) extra = {};
            var id = testId++;
            t.once('prerun', function () {
                var row = {
                    type: 'test',
                    name: t.name,
                    id: id
                };
                if (has(extra, 'parent')) {
                    row.parent = extra.parent;
                }
                output.queue(row);
            });
            t.on('test', function (st) {
                ontest(st, { parent: id });
            });
            t.on('result', function (res) {
                res.test = id;
                res.type = 'assert';
                output.queue(res);
            });
            t.on('end', function () {
                output.queue({ type: 'end', test: id });
            });
        });
        self.on('done', function () { output.queue(null) });
    }
    else {
        output = resumer();
        output.queue('TAP version 13\n');
        self._stream.pipe(output);
    }
    
    nextTick(function next() {
        var t;
        while (t = getNextTest(self)) {
            t.run();
            if (!t.ended) return t.once('end', function(){ nextTick(next); });
        }
        self.emit('done');
    });
    
    return output;
};

Results.prototype.push = function (t) {
    var self = this;
    self.tests.push(t);
    self._watch(t);
    self.emit('_push', t);
};

Results.prototype.only = function (name) {
    this._only = name;
};

Results.prototype._watch = function (t) {
    var self = this;
    var write = function (s) { self._stream.queue(s) };
    t.once('prerun', function () {
        write('# ' + t.name + '\n');
    });
    
    t.on('result', function (res) {
        if (typeof res === 'string') {
            write('# ' + res + '\n');
            return;
        }
        write(encodeResult(res, self.count + 1));
        self.count ++;

        if (res.ok) self.pass ++
        else self.fail ++
    });
    
    t.on('test', function (st) { self._watch(st) });
};

Results.prototype.close = function () {
    var self = this;
    if (self.closed) self._stream.emit('error', new Error('ALREADY CLOSED'));
    self.closed = true;
    var write = function (s) { self._stream.queue(s) };
    
    write('\n1..' + self.count + '\n');
    write('# tests ' + self.count + '\n');
    write('# pass  ' + self.pass + '\n');
    if (self.fail) write('# fail  ' + self.fail + '\n')
    else write('\n# ok\n')

    self._stream.queue(null);
};

function encodeResult (res, count) {
    var output = '';
    output += (res.ok ? 'ok ' : 'not ok ') + count;
    output += res.name ? ' ' + res.name.toString().replace(/\s+/g, ' ') : '';
    
    if (res.skip) output += ' # SKIP';
    else if (res.todo) output += ' # TODO';
    
    output += '\n';
    if (res.ok) return output;
    
    var outer = '  ';
    var inner = outer + '  ';
    output += outer + '---\n';
    output += inner + 'operator: ' + res.operator + '\n';
    
    if (has(res, 'expected') || has(res, 'actual')) {
        var ex = inspect(res.expected);
        var ac = inspect(res.actual);
        
        if (Math.max(ex.length, ac.length) > 65 || invalidYaml(ex) || invalidYaml(ac)) {
            output += inner + 'expected: |-\n' + inner + '  ' + ex + '\n';
            output += inner + 'actual: |-\n' + inner + '  ' + ac + '\n';
        }
        else {
            output += inner + 'expected: ' + ex + '\n';
            output += inner + 'actual:   ' + ac + '\n';
        }
    }
    if (res.at) {
        output += inner + 'at: ' + res.at + '\n';
    }
    if (res.operator === 'error' && res.actual && res.actual.stack) {
        var lines = String(res.actual.stack).split('\n');
        output += inner + 'stack: |-\n';
        for (var i = 0; i < lines.length; i++) {
            output += inner + '  ' + lines[i] + '\n';
        }
    }
    
    output += outer + '...\n';
    return output;
}

function getNextTest (results) {
    if (!results._only) {
        return results.tests.shift();
    }
    
    do {
        var t = results.tests.shift();
        if (!t) continue;
        if (results._only === t.name) {
            return t;
        }
    } while (results.tests.length !== 0)
}

function invalidYaml (str) {
    return regexpTest(yamlIndicators, str);
}

}).call(this,require('_process'))
},{"_process":59,"events":74,"function-bind":77,"has":78,"inherits":80,"object-inspect":83,"resumer":103,"through":115}],114:[function(require,module,exports){
(function (__dirname){
var deepEqual = require('deep-equal');
var defined = require('defined');
var path = require('path');
var inherits = require('inherits');
var EventEmitter = require('events').EventEmitter;
var has = require('has');
var trim = require('string.prototype.trim');

var nextTick = require('./next_tick');

module.exports = Test;

inherits(Test, EventEmitter);

var getTestArgs = function (name_, opts_, cb_) {
    var name = '(anonymous)';
    var opts = {};
    var cb;

    for (var i = 0; i < arguments.length; i++) {
        var arg = arguments[i];
        var t = typeof arg;
        if (t === 'string') {
            name = arg;
        }
        else if (t === 'object') {
            opts = arg || opts;
        }
        else if (t === 'function') {
            cb = arg;
        }
    }
    return { name: name, opts: opts, cb: cb };
};

function Test (name_, opts_, cb_) {
    if (! (this instanceof Test)) {
        return new Test(name_, opts_, cb_);
    }

    var args = getTestArgs(name_, opts_, cb_);

    this.readable = true;
    this.name = args.name || '(anonymous)';
    this.assertCount = 0;
    this.pendingCount = 0;
    this._skip = args.opts.skip || false;
    this._timeout = args.opts.timeout;
    this._plan = undefined;
    this._cb = args.cb;
    this._progeny = [];
    this._ok = true;

    for (var prop in this) {
        this[prop] = (function bind(self, val) {
            if (typeof val === 'function') {
                return function bound() {
                    return val.apply(self, arguments);
                };
            }
            else return val;
        })(this, this[prop]);
    }
}

Test.prototype.run = function () {
    if (this._skip) {
        this.comment('SKIP ' + this.name);
    }
    if (!this._cb || this._skip) {
        return this._end();
    }
    if (this._timeout != null) {
        this.timeoutAfter(this._timeout);
    }
    this.emit('prerun');
    this._cb(this);
    this.emit('run');
};

Test.prototype.test = function (name, opts, cb) {
    var self = this;
    var t = new Test(name, opts, cb);
    this._progeny.push(t);
    this.pendingCount++;
    this.emit('test', t);
    t.on('prerun', function () {
        self.assertCount++;
    })
    
    if (!self._pendingAsserts()) {
        nextTick(function () {
            self._end();
        });
    }
    
    nextTick(function() {
        if (!self._plan && self.pendingCount == self._progeny.length) {
            self._end();
        }
    });
};

Test.prototype.comment = function (msg) {
    var that = this;
    trim(msg).split('\n').forEach(function (aMsg) {
        that.emit('result', trim(aMsg).replace(/^#\s*/, ''));
    });
};

Test.prototype.plan = function (n) {
    this._plan = n;
    this.emit('plan', n);
};

Test.prototype.timeoutAfter = function(ms) {
    if (!ms) throw new Error('timeoutAfter requires a timespan');
    var self = this;
    var timeout = setTimeout(function() {
        self.fail('test timed out after ' + ms + 'ms');
        self.end();
    }, ms);
    this.once('end', function() {
        clearTimeout(timeout);
    });
}

Test.prototype.end = function (err) { 
    var self = this;
    if (arguments.length >= 1 && !!err) {
        this.ifError(err);
    }
    
    if (this.calledEnd) {
        this.fail('.end() called twice');
    }
    this.calledEnd = true;
    this._end();
};

Test.prototype._end = function (err) {
    var self = this;
    if (this._progeny.length) {
        var t = this._progeny.shift();
        t.on('end', function () { self._end() });
        t.run();
        return;
    }
    
    if (!this.ended) this.emit('end');
    var pendingAsserts = this._pendingAsserts();
    if (!this._planError && this._plan !== undefined && pendingAsserts) {
        this._planError = true;
        this.fail('plan != count', {
            expected : this._plan,
            actual : this.assertCount
        });
    }
    this.ended = true;
};

Test.prototype._exit = function () {
    if (this._plan !== undefined &&
        !this._planError && this.assertCount !== this._plan) {
        this._planError = true;
        this.fail('plan != count', {
            expected : this._plan,
            actual : this.assertCount,
            exiting : true
        });
    }
    else if (!this.ended) {
        this.fail('test exited without ending', {
            exiting: true
        });
    }
};

Test.prototype._pendingAsserts = function () {
    if (this._plan === undefined) {
        return 1;
    }
    else {
        return this._plan - (this._progeny.length + this.assertCount);
    }
};

Test.prototype._assert = function assert (ok, opts) {
    var self = this;
    var extra = opts.extra || {};
    
    var res = {
        id : self.assertCount ++,
        ok : Boolean(ok),
        skip : defined(extra.skip, opts.skip),
        name : defined(extra.message, opts.message, '(unnamed assert)'),
        operator : defined(extra.operator, opts.operator)
    };
    if (has(opts, 'actual') || has(extra, 'actual')) {
        res.actual = defined(extra.actual, opts.actual);
    }
    if (has(opts, 'expected') || has(extra, 'expected')) {
        res.expected = defined(extra.expected, opts.expected);
    }
    this._ok = Boolean(this._ok && ok);
    
    if (!ok) {
        res.error = defined(extra.error, opts.error, new Error(res.name));
    }
    
    if (!ok) {
        var e = new Error('exception');
        var err = (e.stack || '').split('\n');
        var dir = path.dirname(__dirname) + '/';
        
        for (var i = 0; i < err.length; i++) {
            var m = /^[^\s]*\s*\bat\s+(.+)/.exec(err[i]);
            if (!m) {
                continue;
            }
            
            var s = m[1].split(/\s+/);
            var filem = /(\/[^:\s]+:(\d+)(?::(\d+))?)/.exec(s[1]);
            if (!filem) {
                filem = /(\/[^:\s]+:(\d+)(?::(\d+))?)/.exec(s[2]);
                
                if (!filem) {
                    filem = /(\/[^:\s]+:(\d+)(?::(\d+))?)/.exec(s[3]);

                    if (!filem) {
                        continue;
                    }
                }
            }
            
            if (filem[1].slice(0, dir.length) === dir) {
                continue;
            }
            
            res.functionName = s[0];
            res.file = filem[1];
            res.line = Number(filem[2]);
            if (filem[3]) res.column = filem[3];
            
            res.at = m[1];
            break;
        }
    }

    self.emit('result', res);
    
    var pendingAsserts = self._pendingAsserts();
    if (!pendingAsserts) {
        if (extra.exiting) {
            self._end();
        } else {
            nextTick(function () {
                self._end();
            });
        }
    }
    
    if (!self._planError && pendingAsserts < 0) {
        self._planError = true;
        self.fail('plan != count', {
            expected : self._plan,
            actual : self._plan - pendingAsserts
        });
    }
};

Test.prototype.fail = function (msg, extra) {
    this._assert(false, {
        message : msg,
        operator : 'fail',
        extra : extra
    });
};

Test.prototype.pass = function (msg, extra) {
    this._assert(true, {
        message : msg,
        operator : 'pass',
        extra : extra
    });
};

Test.prototype.skip = function (msg, extra) {
    this._assert(true, {
        message : msg,
        operator : 'skip',
        skip : true,
        extra : extra
    });
};

Test.prototype.ok
= Test.prototype['true']
= Test.prototype.assert
= function (value, msg, extra) {
    this._assert(value, {
        message : msg,
        operator : 'ok',
        expected : true,
        actual : value,
        extra : extra
    });
};

Test.prototype.notOk
= Test.prototype['false']
= Test.prototype.notok
= function (value, msg, extra) {
    this._assert(!value, {
        message : msg,
        operator : 'notOk',
        expected : false,
        actual : value,
        extra : extra
    });
};

Test.prototype.error
= Test.prototype.ifError
= Test.prototype.ifErr
= Test.prototype.iferror
= function (err, msg, extra) {
    this._assert(!err, {
        message : defined(msg, String(err)),
        operator : 'error',
        actual : err,
        extra : extra
    });
};

Test.prototype.equal
= Test.prototype.equals
= Test.prototype.isEqual
= Test.prototype.is
= Test.prototype.strictEqual
= Test.prototype.strictEquals
= function (a, b, msg, extra) {
    this._assert(a === b, {
        message : defined(msg, 'should be equal'),
        operator : 'equal',
        actual : a,
        expected : b,
        extra : extra
    });
};

Test.prototype.notEqual
= Test.prototype.notEquals
= Test.prototype.notStrictEqual
= Test.prototype.notStrictEquals
= Test.prototype.isNotEqual
= Test.prototype.isNot
= Test.prototype.not
= Test.prototype.doesNotEqual
= Test.prototype.isInequal
= function (a, b, msg, extra) {
    this._assert(a !== b, {
        message : defined(msg, 'should not be equal'),
        operator : 'notEqual',
        actual : a,
        notExpected : b,
        extra : extra
    });
};

Test.prototype.deepEqual
= Test.prototype.deepEquals
= Test.prototype.isEquivalent
= Test.prototype.same
= function (a, b, msg, extra) {
    this._assert(deepEqual(a, b, { strict: true }), {
        message : defined(msg, 'should be equivalent'),
        operator : 'deepEqual',
        actual : a,
        expected : b,
        extra : extra
    });
};

Test.prototype.deepLooseEqual
= Test.prototype.looseEqual
= Test.prototype.looseEquals
= function (a, b, msg, extra) {
    this._assert(deepEqual(a, b), {
        message : defined(msg, 'should be equivalent'),
        operator : 'deepLooseEqual',
        actual : a,
        expected : b,
        extra : extra
    });
};

Test.prototype.notDeepEqual
= Test.prototype.notEquivalent
= Test.prototype.notDeeply
= Test.prototype.notSame
= Test.prototype.isNotDeepEqual
= Test.prototype.isNotDeeply
= Test.prototype.isNotEquivalent
= Test.prototype.isInequivalent
= function (a, b, msg, extra) {
    this._assert(!deepEqual(a, b, { strict: true }), {
        message : defined(msg, 'should not be equivalent'),
        operator : 'notDeepEqual',
        actual : a,
        notExpected : b,
        extra : extra
    });
};

Test.prototype.notDeepLooseEqual
= Test.prototype.notLooseEqual
= Test.prototype.notLooseEquals
= function (a, b, msg, extra) {
    this._assert(!deepEqual(a, b), {
        message : defined(msg, 'should be equivalent'),
        operator : 'notDeepLooseEqual',
        actual : a,
        expected : b,
        extra : extra
    });
};

Test.prototype['throws'] = function (fn, expected, msg, extra) {
    if (typeof expected === 'string') {
        msg = expected;
        expected = undefined;
    }

    var caught = undefined;

    try {
        fn();
    } catch (err) {
        caught = { error : err };
        var message = err.message;
        delete err.message;
        err.message = message;
    }

    var passed = caught;

    if (expected instanceof RegExp) {
        passed = expected.test(caught && caught.error);
        expected = String(expected);
    }

    if (typeof expected === 'function' && caught) {
        passed = caught.error instanceof expected;
        caught.error = caught.error.constructor;
    }

    this._assert(typeof fn === 'function' && passed, {
        message : defined(msg, 'should throw'),
        operator : 'throws',
        actual : caught && caught.error,
        expected : expected,
        error: !passed && caught && caught.error,
        extra : extra
    });
};

Test.prototype.doesNotThrow = function (fn, expected, msg, extra) {
    if (typeof expected === 'string') {
        msg = expected;
        expected = undefined;
    }
    var caught = undefined;
    try {
        fn();
    }
    catch (err) {
        caught = { error : err };
    }
    this._assert(!caught, {
        message : defined(msg, 'should not throw'),
        operator : 'throws',
        actual : caught && caught.error,
        expected : expected,
        error : caught && caught.error,
        extra : extra
    });
};

Test.skip = function (name_, _opts, _cb) {
    var args = getTestArgs.apply(null, arguments);
    args.opts.skip = true;
    return Test(args.name, args.opts, args.cb);
};

// vim: set softtabstop=4 shiftwidth=4:


}).call(this,"/node_modules/tape/lib")
},{"./next_tick":112,"deep-equal":62,"defined":66,"events":74,"has":78,"inherits":80,"path":86,"string.prototype.trim":107}],115:[function(require,module,exports){
(function (process){
var Stream = require('stream')

// through
//
// a stream that does nothing but re-emit the input.
// useful for aggregating a series of changing but not ending streams into one stream)

exports = module.exports = through
through.through = through

//create a readable writable stream.

function through (write, end, opts) {
  write = write || function (data) { this.queue(data) }
  end = end || function () { this.queue(null) }

  var ended = false, destroyed = false, buffer = [], _ended = false
  var stream = new Stream()
  stream.readable = stream.writable = true
  stream.paused = false

//  stream.autoPause   = !(opts && opts.autoPause   === false)
  stream.autoDestroy = !(opts && opts.autoDestroy === false)

  stream.write = function (data) {
    write.call(this, data)
    return !stream.paused
  }

  function drain() {
    while(buffer.length && !stream.paused) {
      var data = buffer.shift()
      if(null === data)
        return stream.emit('end')
      else
        stream.emit('data', data)
    }
  }

  stream.queue = stream.push = function (data) {
//    console.error(ended)
    if(_ended) return stream
    if(data === null) _ended = true
    buffer.push(data)
    drain()
    return stream
  }

  //this will be registered as the first 'end' listener
  //must call destroy next tick, to make sure we're after any
  //stream piped from here.
  //this is only a problem if end is not emitted synchronously.
  //a nicer way to do this is to make sure this is the last listener for 'end'

  stream.on('end', function () {
    stream.readable = false
    if(!stream.writable && stream.autoDestroy)
      process.nextTick(function () {
        stream.destroy()
      })
  })

  function _end () {
    stream.writable = false
    end.call(stream)
    if(!stream.readable && stream.autoDestroy)
      stream.destroy()
  }

  stream.end = function (data) {
    if(ended) return
    ended = true
    if(arguments.length) stream.write(data)
    _end() // will emit or queue
    return stream
  }

  stream.destroy = function () {
    if(destroyed) return
    destroyed = true
    ended = true
    buffer.length = 0
    stream.writable = stream.readable = false
    stream.emit('close')
    return stream
  }

  stream.pause = function () {
    if(stream.paused) return
    stream.paused = true
    return stream
  }

  stream.resume = function () {
    if(stream.paused) {
      stream.paused = false
      stream.emit('resume')
    }
    drain()
    //may have become paused again,
    //as drain emits 'data'.
    if(!stream.paused)
      stream.emit('drain')
    return stream
  }
  return stream
}


}).call(this,require('_process'))
},{"_process":59,"stream":105}],116:[function(require,module,exports){
(function (global){

/**
 * Module exports.
 */

module.exports = deprecate;

/**
 * Mark that a method should not be used.
 * Returns a modified function which warns once by default.
 *
 * If `localStorage.noDeprecation = true` is set, then it is a no-op.
 *
 * If `localStorage.throwDeprecation = true` is set, then deprecated functions
 * will throw an Error when invoked.
 *
 * If `localStorage.traceDeprecation = true` is set, then deprecated functions
 * will invoke `console.trace()` instead of `console.error()`.
 *
 * @param {Function} fn - the function to deprecate
 * @param {String} msg - the string to print to the console when `fn` is invoked
 * @returns {Function} a new "deprecated" version of `fn`
 * @api public
 */

function deprecate (fn, msg) {
  if (config('noDeprecation')) {
    return fn;
  }

  var warned = false;
  function deprecated() {
    if (!warned) {
      if (config('throwDeprecation')) {
        throw new Error(msg);
      } else if (config('traceDeprecation')) {
        console.trace(msg);
      } else {
        console.warn(msg);
      }
      warned = true;
    }
    return fn.apply(this, arguments);
  }

  return deprecated;
}

/**
 * Checks `localStorage` for boolean values for the given `name`.
 *
 * @param {String} name
 * @returns {Boolean}
 * @api private
 */

function config (name) {
  // accessing global.localStorage can trigger a DOMException in sandboxed iframes
  try {
    if (!global.localStorage) return false;
  } catch (_) {
    return false;
  }
  var val = global.localStorage[name];
  if (null == val) return false;
  return String(val).toLowerCase() === 'true';
}

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}]},{},[24]);
